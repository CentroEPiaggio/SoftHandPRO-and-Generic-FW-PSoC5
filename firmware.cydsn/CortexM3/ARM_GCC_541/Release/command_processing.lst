ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"command_processing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	EEPROM_ADDR
  20              		.data
  21              		.align	2
  22              		.type	EEPROM_ADDR, %object
  23              		.size	EEPROM_ADDR, 4
  24              	EEPROM_ADDR:
  25 0000 00800040 		.word	1073774592
  26              		.section	.text.commProcess,"ax",%progbits
  27              		.align	2
  28              		.global	commProcess
  29              		.thumb
  30              		.thumb_func
  31              		.type	commProcess, %function
  32              	commProcess:
  33              	.LFB64:
  34              		.file 1 "..\\src\\command_processing.c"
   1:..\src/command_processing.c **** // ----------------------------------------------------------------------------
   2:..\src/command_processing.c **** // BSD 3-Clause License
   3:..\src/command_processing.c **** 
   4:..\src/command_processing.c **** // Copyright (c) 2016, qbrobotics
   5:..\src/command_processing.c **** // Copyright (c) 2017, Centro "E.Piaggio"
   6:..\src/command_processing.c **** // All rights reserved.
   7:..\src/command_processing.c **** 
   8:..\src/command_processing.c **** // Redistribution and use in source and binary forms, with or without
   9:..\src/command_processing.c **** // modification, are permitted provided that the following conditions are met:
  10:..\src/command_processing.c **** 
  11:..\src/command_processing.c **** // * Redistributions of source code must retain the above copyright notice, this
  12:..\src/command_processing.c **** //   list of conditions and the following disclaimer.
  13:..\src/command_processing.c **** 
  14:..\src/command_processing.c **** // * Redistributions in binary form must reproduce the above copyright notice,
  15:..\src/command_processing.c **** //   this list of conditions and the following disclaimer in the documentation
  16:..\src/command_processing.c **** //   and/or other materials provided with the distribution.
  17:..\src/command_processing.c **** 
  18:..\src/command_processing.c **** // * Neither the name of the copyright holder nor the names of its
  19:..\src/command_processing.c **** //   contributors may be used to endorse or promote products derived from
  20:..\src/command_processing.c **** //   this software without specific prior written permission.
  21:..\src/command_processing.c **** 
  22:..\src/command_processing.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:..\src/command_processing.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 2


  24:..\src/command_processing.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:..\src/command_processing.c **** // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:..\src/command_processing.c **** // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:..\src/command_processing.c **** // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:..\src/command_processing.c **** // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:..\src/command_processing.c **** // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:..\src/command_processing.c **** // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:..\src/command_processing.c **** // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:..\src/command_processing.c **** // POSSIBILITY OF SUCH DAMAGE.
  33:..\src/command_processing.c **** // ----------------------------------------------------------------------------
  34:..\src/command_processing.c **** 
  35:..\src/command_processing.c **** 
  36:..\src/command_processing.c **** /**
  37:..\src/command_processing.c **** * \file         command_processing.c
  38:..\src/command_processing.c **** *
  39:..\src/command_processing.c **** 
  40:..\src/command_processing.c **** * \brief        Command processing functions.
  41:..\src/command_processing.c **** * \date         October 01, 2017
  42:..\src/command_processing.c **** * \author       _Centro "E.Piaggio"_
  43:..\src/command_processing.c **** * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  44:..\src/command_processing.c **** * \copyright    (C) 2017 Centro "E.Piaggio". All rights reserved.
  45:..\src/command_processing.c **** */
  46:..\src/command_processing.c **** //=================================================================     includes
  47:..\src/command_processing.c **** #include "command_processing.h"
  48:..\src/command_processing.c **** #include "interruptions.h"
  49:..\src/command_processing.c **** #include "SPI_functions.h"
  50:..\src/command_processing.c **** #include <STDIO.H>
  51:..\src/command_processing.c **** #include "utils.h"
  52:..\src/command_processing.c **** #include "commands.h"
  53:..\src/command_processing.c **** 
  54:..\src/command_processing.c **** //================================================================     variables
  55:..\src/command_processing.c **** 
  56:..\src/command_processing.c **** reg8 * EEPROM_ADDR = (reg8 *) CYDEV_EE_BASE;
  57:..\src/command_processing.c **** 
  58:..\src/command_processing.c **** //==============================================================================
  59:..\src/command_processing.c **** //                                                            RX DATA PROCESSING
  60:..\src/command_processing.c **** //==============================================================================
  61:..\src/command_processing.c **** //  This function checks for the availability of a data packet and process it:
  62:..\src/command_processing.c **** //      - Verify checksum;
  63:..\src/command_processing.c **** //      - Process commands;
  64:..\src/command_processing.c **** //==============================================================================
  65:..\src/command_processing.c **** 
  66:..\src/command_processing.c **** void commProcess(void){
  35              		.loc 1 66 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 24
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 86B0     		sub	sp, sp, #24
  44              		.cfi_def_cfa_offset 32
  45 0004 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  67:..\src/command_processing.c **** 
  68:..\src/command_processing.c ****     uint8 CYDATA rx_cmd;
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 3


  69:..\src/command_processing.c ****     rx_cmd = g_rx.buffer[0];
  47              		.loc 1 69 0
  48 0006 E14B     		ldr	r3, .L42
  49 0008 1B78     		ldrb	r3, [r3]
  50 000a FB75     		strb	r3, [r7, #23]
  70:..\src/command_processing.c **** 
  71:..\src/command_processing.c **** //==========================================================     verify checksum
  72:..\src/command_processing.c **** 
  73:..\src/command_processing.c ****     if (!(LCRChecksum(g_rx.buffer, g_rx.length - 1) == g_rx.buffer[g_rx.length - 1])){
  51              		.loc 1 73 0
  52 000c DF4B     		ldr	r3, .L42
  53 000e B3F98030 		ldrsh	r3, [r3, #128]
  54 0012 DBB2     		uxtb	r3, r3
  55 0014 013B     		subs	r3, r3, #1
  56 0016 DBB2     		uxtb	r3, r3
  57 0018 1946     		mov	r1, r3
  58 001a DC48     		ldr	r0, .L42
  59 001c FFF7FEFF 		bl	LCRChecksum
  60 0020 0346     		mov	r3, r0
  61 0022 1946     		mov	r1, r3
  62 0024 D94B     		ldr	r3, .L42
  63 0026 B3F98030 		ldrsh	r3, [r3, #128]
  64 002a 013B     		subs	r3, r3, #1
  65 002c D74A     		ldr	r2, .L42
  66 002e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
  67 0030 9942     		cmp	r1, r3
  68 0032 04D0     		beq	.L2
  74:..\src/command_processing.c ****         // Wrong checksum
  75:..\src/command_processing.c ****         g_rx.ready = 0;
  69              		.loc 1 75 0
  70 0034 D54B     		ldr	r3, .L42
  71 0036 0022     		movs	r2, #0
  72 0038 83F88420 		strb	r2, [r3, #132]
  76:..\src/command_processing.c ****         return;
  73              		.loc 1 76 0
  74 003c 1FE2     		b	.L1
  75              	.L2:
  77:..\src/command_processing.c ****     }
  78:..\src/command_processing.c **** 
  79:..\src/command_processing.c ****     switch(rx_cmd) {
  76              		.loc 1 79 0
  77 003e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
  78 0040 A12B     		cmp	r3, #161
  79 0042 00F21B82 		bhi	.L41
  80 0046 01A2     		adr	r2, .L6
  81 0048 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  82              		.p2align 2
  83              	.L6:
  84 004c 53030000 		.word	.L5+1
  85 0050 35030000 		.word	.L7+1
  86 0054 7D040000 		.word	.L41+1
  87 0058 59030000 		.word	.L8+1
  88 005c 5F030000 		.word	.L9+1
  89 0060 7B030000 		.word	.L10+1
  90 0064 1D030000 		.word	.L11+1
  91 0068 7D040000 		.word	.L41+1
  92 006c 7D040000 		.word	.L41+1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 4


  93 0070 B7030000 		.word	.L12+1
  94 0074 9D030000 		.word	.L13+1
  95 0078 7D040000 		.word	.L41+1
  96 007c 3B030000 		.word	.L14+1
  97 0080 D9030000 		.word	.L15+1
  98 0084 7D040000 		.word	.L41+1
  99 0088 7D040000 		.word	.L41+1
 100 008c 7D040000 		.word	.L41+1
 101 0090 7D040000 		.word	.L41+1
 102 0094 7D040000 		.word	.L41+1
 103 0098 7D040000 		.word	.L41+1
 104 009c 7D040000 		.word	.L41+1
 105 00a0 7D040000 		.word	.L41+1
 106 00a4 7D040000 		.word	.L41+1
 107 00a8 7D040000 		.word	.L41+1
 108 00ac 7D040000 		.word	.L41+1
 109 00b0 7D040000 		.word	.L41+1
 110 00b4 7D040000 		.word	.L41+1
 111 00b8 7D040000 		.word	.L41+1
 112 00bc 7D040000 		.word	.L41+1
 113 00c0 7D040000 		.word	.L41+1
 114 00c4 7D040000 		.word	.L41+1
 115 00c8 7D040000 		.word	.L41+1
 116 00cc 7D040000 		.word	.L41+1
 117 00d0 7D040000 		.word	.L41+1
 118 00d4 7D040000 		.word	.L41+1
 119 00d8 7D040000 		.word	.L41+1
 120 00dc 7D040000 		.word	.L41+1
 121 00e0 7D040000 		.word	.L41+1
 122 00e4 7D040000 		.word	.L41+1
 123 00e8 7D040000 		.word	.L41+1
 124 00ec 7D040000 		.word	.L41+1
 125 00f0 7D040000 		.word	.L41+1
 126 00f4 7D040000 		.word	.L41+1
 127 00f8 7D040000 		.word	.L41+1
 128 00fc 7D040000 		.word	.L41+1
 129 0100 7D040000 		.word	.L41+1
 130 0104 7D040000 		.word	.L41+1
 131 0108 7D040000 		.word	.L41+1
 132 010c 7D040000 		.word	.L41+1
 133 0110 7D040000 		.word	.L41+1
 134 0114 7D040000 		.word	.L41+1
 135 0118 7D040000 		.word	.L41+1
 136 011c 7D040000 		.word	.L41+1
 137 0120 7D040000 		.word	.L41+1
 138 0124 7D040000 		.word	.L41+1
 139 0128 7D040000 		.word	.L41+1
 140 012c 7D040000 		.word	.L41+1
 141 0130 7D040000 		.word	.L41+1
 142 0134 7D040000 		.word	.L41+1
 143 0138 7D040000 		.word	.L41+1
 144 013c 7D040000 		.word	.L41+1
 145 0140 7D040000 		.word	.L41+1
 146 0144 7D040000 		.word	.L41+1
 147 0148 7D040000 		.word	.L41+1
 148 014c 7D040000 		.word	.L41+1
 149 0150 7D040000 		.word	.L41+1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 5


 150 0154 7D040000 		.word	.L41+1
 151 0158 7D040000 		.word	.L41+1
 152 015c 7D040000 		.word	.L41+1
 153 0160 7D040000 		.word	.L41+1
 154 0164 7D040000 		.word	.L41+1
 155 0168 7D040000 		.word	.L41+1
 156 016c 7D040000 		.word	.L41+1
 157 0170 7D040000 		.word	.L41+1
 158 0174 7D040000 		.word	.L41+1
 159 0178 7D040000 		.word	.L41+1
 160 017c 7D040000 		.word	.L41+1
 161 0180 7D040000 		.word	.L41+1
 162 0184 7D040000 		.word	.L41+1
 163 0188 7D040000 		.word	.L41+1
 164 018c 7D040000 		.word	.L41+1
 165 0190 7D040000 		.word	.L41+1
 166 0194 7D040000 		.word	.L41+1
 167 0198 7D040000 		.word	.L41+1
 168 019c 7D040000 		.word	.L41+1
 169 01a0 7D040000 		.word	.L41+1
 170 01a4 7D040000 		.word	.L41+1
 171 01a8 7D040000 		.word	.L41+1
 172 01ac 7D040000 		.word	.L41+1
 173 01b0 7D040000 		.word	.L41+1
 174 01b4 7D040000 		.word	.L41+1
 175 01b8 7D040000 		.word	.L41+1
 176 01bc 7D040000 		.word	.L41+1
 177 01c0 7D040000 		.word	.L41+1
 178 01c4 7D040000 		.word	.L41+1
 179 01c8 7D040000 		.word	.L41+1
 180 01cc 7D040000 		.word	.L41+1
 181 01d0 7D040000 		.word	.L41+1
 182 01d4 7D040000 		.word	.L41+1
 183 01d8 7D040000 		.word	.L41+1
 184 01dc 7D040000 		.word	.L41+1
 185 01e0 7D040000 		.word	.L41+1
 186 01e4 7D040000 		.word	.L41+1
 187 01e8 7D040000 		.word	.L41+1
 188 01ec 7D040000 		.word	.L41+1
 189 01f0 7D040000 		.word	.L41+1
 190 01f4 7D040000 		.word	.L41+1
 191 01f8 7D040000 		.word	.L41+1
 192 01fc 7D040000 		.word	.L41+1
 193 0200 7D040000 		.word	.L41+1
 194 0204 7D040000 		.word	.L41+1
 195 0208 7D040000 		.word	.L41+1
 196 020c 7D040000 		.word	.L41+1
 197 0210 7D040000 		.word	.L41+1
 198 0214 7D040000 		.word	.L41+1
 199 0218 7D040000 		.word	.L41+1
 200 021c 7D040000 		.word	.L41+1
 201 0220 7D040000 		.word	.L41+1
 202 0224 7D040000 		.word	.L41+1
 203 0228 7D040000 		.word	.L41+1
 204 022c 7D040000 		.word	.L41+1
 205 0230 7D040000 		.word	.L41+1
 206 0234 7D040000 		.word	.L41+1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 6


 207 0238 7D040000 		.word	.L41+1
 208 023c 7D040000 		.word	.L41+1
 209 0240 7D040000 		.word	.L41+1
 210 0244 7D040000 		.word	.L41+1
 211 0248 7D040000 		.word	.L41+1
 212 024c D5020000 		.word	.L16+1
 213 0250 0B030000 		.word	.L17+1
 214 0254 DB020000 		.word	.L18+1
 215 0258 17030000 		.word	.L19+1
 216 025c E1020000 		.word	.L20+1
 217 0260 ED020000 		.word	.L21+1
 218 0264 E7020000 		.word	.L22+1
 219 0268 7D040000 		.word	.L41+1
 220 026c 05030000 		.word	.L23+1
 221 0270 F9020000 		.word	.L24+1
 222 0274 7D040000 		.word	.L41+1
 223 0278 FF020000 		.word	.L25+1
 224 027c F3020000 		.word	.L26+1
 225 0280 7D040000 		.word	.L41+1
 226 0284 7D040000 		.word	.L41+1
 227 0288 7D040000 		.word	.L41+1
 228 028c 11030000 		.word	.L27+1
 229 0290 7D040000 		.word	.L41+1
 230 0294 7D040000 		.word	.L41+1
 231 0298 7D040000 		.word	.L41+1
 232 029c 7D040000 		.word	.L41+1
 233 02a0 7D040000 		.word	.L41+1
 234 02a4 7D040000 		.word	.L41+1
 235 02a8 7D040000 		.word	.L41+1
 236 02ac 7D040000 		.word	.L41+1
 237 02b0 7D040000 		.word	.L41+1
 238 02b4 7D040000 		.word	.L41+1
 239 02b8 7D040000 		.word	.L41+1
 240 02bc 7D040000 		.word	.L41+1
 241 02c0 7D040000 		.word	.L41+1
 242 02c4 7D040000 		.word	.L41+1
 243 02c8 7D040000 		.word	.L41+1
 244 02cc 7D040000 		.word	.L41+1
 245 02d0 77040000 		.word	.L28+1
 246              		.p2align 1
 247              	.L16:
  80:..\src/command_processing.c **** 
  81:..\src/command_processing.c **** //=============================================================     CMD_ACTIVATE
  82:..\src/command_processing.c ****         case CMD_ACTIVATE:
  83:..\src/command_processing.c ****             cmd_activate();
 248              		.loc 1 83 0
 249 02d4 FFF7FEFF 		bl	cmd_activate
  84:..\src/command_processing.c ****             break;
 250              		.loc 1 84 0
 251 02d8 D1E0     		b	.L1
 252              	.L18:
  85:..\src/command_processing.c **** 
  86:..\src/command_processing.c **** //===========================================================     CMD_SET_INPUTS
  87:..\src/command_processing.c **** 
  88:..\src/command_processing.c ****         case CMD_SET_INPUTS:
  89:..\src/command_processing.c ****             cmd_set_inputs();
 253              		.loc 1 89 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 7


 254 02da FFF7FEFF 		bl	cmd_set_inputs
  90:..\src/command_processing.c ****             break;
 255              		.loc 1 90 0
 256 02de CEE0     		b	.L1
 257              	.L20:
  91:..\src/command_processing.c **** 
  92:..\src/command_processing.c **** //=====================================================     CMD_GET_MEASUREMENTS
  93:..\src/command_processing.c **** 
  94:..\src/command_processing.c ****         case CMD_GET_MEASUREMENTS:
  95:..\src/command_processing.c ****             cmd_get_measurements();
 258              		.loc 1 95 0
 259 02e0 FFF7FEFF 		bl	cmd_get_measurements
  96:..\src/command_processing.c ****             break;
 260              		.loc 1 96 0
 261 02e4 CBE0     		b	.L1
 262              	.L22:
  97:..\src/command_processing.c **** 
  98:..\src/command_processing.c **** //=====================================================     CMD_GET_CURR_AND_MEAS
  99:..\src/command_processing.c **** 
 100:..\src/command_processing.c ****         case CMD_GET_CURR_AND_MEAS:
 101:..\src/command_processing.c ****             cmd_get_curr_and_meas();
 263              		.loc 1 101 0
 264 02e6 FFF7FEFF 		bl	cmd_get_curr_and_meas
 102:..\src/command_processing.c ****             break;
 265              		.loc 1 102 0
 266 02ea C8E0     		b	.L1
 267              	.L21:
 103:..\src/command_processing.c ****             
 104:..\src/command_processing.c **** //=========================================================     CMD_GET_CURRENTS
 105:..\src/command_processing.c **** 
 106:..\src/command_processing.c ****         case CMD_GET_CURRENTS:
 107:..\src/command_processing.c ****             cmd_get_currents();
 268              		.loc 1 107 0
 269 02ec FFF7FEFF 		bl	cmd_get_currents
 108:..\src/command_processing.c ****             break;
 270              		.loc 1 108 0
 271 02f0 C5E0     		b	.L1
 272              	.L26:
 109:..\src/command_processing.c **** 
 110:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 111:..\src/command_processing.c ****          
 112:..\src/command_processing.c ****         case CMD_GET_CURR_DIFF:
 113:..\src/command_processing.c ****             cmd_get_currents_for_cuff();
 273              		.loc 1 113 0
 274 02f2 FFF7FEFF 		bl	cmd_get_currents_for_cuff
 114:..\src/command_processing.c ****             break;
 275              		.loc 1 114 0
 276 02f6 C2E0     		b	.L1
 277              	.L24:
 115:..\src/command_processing.c ****             
 116:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 117:..\src/command_processing.c ****         
 118:..\src/command_processing.c ****         case CMD_GET_VELOCITIES:
 119:..\src/command_processing.c ****             cmd_get_velocities();
 278              		.loc 1 119 0
 279 02f8 FFF7FEFF 		bl	cmd_get_velocities
 120:..\src/command_processing.c ****             break;
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 8


 280              		.loc 1 120 0
 281 02fc BFE0     		b	.L1
 282              	.L25:
 121:..\src/command_processing.c ****             
 122:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 123:..\src/command_processing.c **** 
 124:..\src/command_processing.c ****         case CMD_GET_ACCEL:
 125:..\src/command_processing.c ****             cmd_get_accelerations();
 283              		.loc 1 125 0
 284 02fe FFF7FEFF 		bl	cmd_get_accelerations
 126:..\src/command_processing.c ****             break;
 285              		.loc 1 126 0
 286 0302 BCE0     		b	.L1
 287              	.L23:
 127:..\src/command_processing.c ****             
 128:..\src/command_processing.c **** //=========================================================     CMD_GET_EMG
 129:..\src/command_processing.c **** 
 130:..\src/command_processing.c ****         case CMD_GET_EMG:
 131:..\src/command_processing.c ****             cmd_get_emg();
 288              		.loc 1 131 0
 289 0304 FFF7FEFF 		bl	cmd_get_emg
 132:..\src/command_processing.c ****             break;
 290              		.loc 1 132 0
 291 0308 B9E0     		b	.L1
 292              	.L17:
 133:..\src/command_processing.c ****             
 134:..\src/command_processing.c **** //=========================================================     CMD_GET_ACTIVATE
 135:..\src/command_processing.c ****             
 136:..\src/command_processing.c ****         case CMD_GET_ACTIVATE:
 137:..\src/command_processing.c ****             cmd_get_activate();
 293              		.loc 1 137 0
 294 030a FFF7FEFF 		bl	cmd_get_activate
 138:..\src/command_processing.c ****             break;
 295              		.loc 1 138 0
 296 030e B6E0     		b	.L1
 297              	.L27:
 139:..\src/command_processing.c ****             
 140:..\src/command_processing.c **** //=========================================================     CMD_SET_BAUDRATE
 141:..\src/command_processing.c ****             
 142:..\src/command_processing.c ****         case CMD_SET_BAUDRATE:
 143:..\src/command_processing.c ****             cmd_set_baudrate();
 298              		.loc 1 143 0
 299 0310 FFF7FEFF 		bl	cmd_set_baudrate
 144:..\src/command_processing.c ****             break;  
 300              		.loc 1 144 0
 301 0314 B3E0     		b	.L1
 302              	.L19:
 145:..\src/command_processing.c ****             
 146:..\src/command_processing.c **** //============================================================     CMD_GET_INPUT
 147:..\src/command_processing.c **** 
 148:..\src/command_processing.c ****         case CMD_GET_INPUTS:
 149:..\src/command_processing.c ****             cmd_get_inputs();
 303              		.loc 1 149 0
 304 0316 FFF7FEFF 		bl	cmd_get_inputs
 150:..\src/command_processing.c ****             break;
 305              		.loc 1 150 0
 306 031a B0E0     		b	.L1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 9


 307              	.L11:
 151:..\src/command_processing.c **** 
 152:..\src/command_processing.c **** //=============================================================     CMD_GET_INFO
 153:..\src/command_processing.c **** 
 154:..\src/command_processing.c ****         case CMD_GET_INFO:
 155:..\src/command_processing.c ****             infoGet(  __REV16(*((uint16 *) &g_rx.buffer[1])) );
 308              		.loc 1 155 0
 309 031c 1C4B     		ldr	r3, .L42+4
 310 031e 1B88     		ldrh	r3, [r3]
 311 0320 FB60     		str	r3, [r7, #12]
 312              	.LBB6:
 313              	.LBB7:
 314              		.file 2 "Generated_Source\\PSoC5/cmsis_gcc.h"
   1:Generated_Source\PSoC5/cmsis_gcc.h **** /**************************************************************************//**
   2:Generated_Source\PSoC5/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Generated_Source\PSoC5/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Generated_Source\PSoC5/cmsis_gcc.h ****  * @version  V5.00
   5:Generated_Source\PSoC5/cmsis_gcc.h ****  * @date     28. October 2016
   6:Generated_Source\PSoC5/cmsis_gcc.h ****  ******************************************************************************/
   7:Generated_Source\PSoC5/cmsis_gcc.h **** /*
   8:Generated_Source\PSoC5/cmsis_gcc.h ****  * Copyright (c) 2009-2016 ARM Limited. All rights reserved.
   9:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  10:Generated_Source\PSoC5/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  12:Generated_Source\PSoC5/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Generated_Source\PSoC5/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Generated_Source\PSoC5/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  16:Generated_Source\PSoC5/cmsis_gcc.h ****  * http://www.apache.org/licenses/LICENSE-2.0
  17:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  18:Generated_Source\PSoC5/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Generated_Source\PSoC5/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Generated_Source\PSoC5/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Generated_Source\PSoC5/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Generated_Source\PSoC5/cmsis_gcc.h ****  * limitations under the License.
  23:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  24:Generated_Source\PSoC5/cmsis_gcc.h **** 
  25:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Generated_Source\PSoC5/cmsis_gcc.h **** 
  28:Generated_Source\PSoC5/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Generated_Source\PSoC5/cmsis_gcc.h **** 
  34:Generated_Source\PSoC5/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ASM
  36:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ASM                     __asm
  37:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  38:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __INLINE
  39:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __INLINE                  inline
  40:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  41:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  44:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __NO_RETURN
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 10


  45:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  47:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __USED
  48:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  50:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   _WEAK
  51:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  53:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:Generated_Source\PSoC5/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  55:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  56:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  57:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ALIGNED
  58:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  59:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  60:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __PACKED
  61:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  62:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  63:Generated_Source\PSoC5/cmsis_gcc.h **** 
  64:Generated_Source\PSoC5/cmsis_gcc.h **** 
  65:Generated_Source\PSoC5/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  66:Generated_Source\PSoC5/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  67:Generated_Source\PSoC5/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  68:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
  69:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  70:Generated_Source\PSoC5/cmsis_gcc.h **** 
  71:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  72:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  73:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  74:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  75:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  76:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  77:Generated_Source\PSoC5/cmsis_gcc.h **** {
  78:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  79:Generated_Source\PSoC5/cmsis_gcc.h **** }
  80:Generated_Source\PSoC5/cmsis_gcc.h **** 
  81:Generated_Source\PSoC5/cmsis_gcc.h **** 
  82:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  83:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  84:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  85:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  86:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  87:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  88:Generated_Source\PSoC5/cmsis_gcc.h **** {
  89:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  90:Generated_Source\PSoC5/cmsis_gcc.h **** }
  91:Generated_Source\PSoC5/cmsis_gcc.h **** 
  92:Generated_Source\PSoC5/cmsis_gcc.h **** 
  93:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  94:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register
  95:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  96:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Control Register value
  97:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  98:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
  99:Generated_Source\PSoC5/cmsis_gcc.h **** {
 100:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 101:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 11


 102:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 103:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 104:Generated_Source\PSoC5/cmsis_gcc.h **** }
 105:Generated_Source\PSoC5/cmsis_gcc.h **** 
 106:Generated_Source\PSoC5/cmsis_gcc.h **** 
 107:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 108:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 109:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 110:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 111:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               non-secure Control Register value
 112:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 113:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 114:Generated_Source\PSoC5/cmsis_gcc.h **** {
 115:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 116:Generated_Source\PSoC5/cmsis_gcc.h **** 
 117:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 118:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 119:Generated_Source\PSoC5/cmsis_gcc.h **** }
 120:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 121:Generated_Source\PSoC5/cmsis_gcc.h **** 
 122:Generated_Source\PSoC5/cmsis_gcc.h **** 
 123:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 124:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register
 125:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 126:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 127:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 128:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 129:Generated_Source\PSoC5/cmsis_gcc.h **** {
 130:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 131:Generated_Source\PSoC5/cmsis_gcc.h **** }
 132:Generated_Source\PSoC5/cmsis_gcc.h **** 
 133:Generated_Source\PSoC5/cmsis_gcc.h **** 
 134:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 135:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 136:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 137:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 138:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 139:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 140:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 141:Generated_Source\PSoC5/cmsis_gcc.h **** {
 142:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 143:Generated_Source\PSoC5/cmsis_gcc.h **** }
 144:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 145:Generated_Source\PSoC5/cmsis_gcc.h **** 
 146:Generated_Source\PSoC5/cmsis_gcc.h **** 
 147:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 148:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get IPSR Register
 149:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 150:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               IPSR Register value
 151:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 152:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 153:Generated_Source\PSoC5/cmsis_gcc.h **** {
 154:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 155:Generated_Source\PSoC5/cmsis_gcc.h **** 
 156:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 157:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 158:Generated_Source\PSoC5/cmsis_gcc.h **** }
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 12


 159:Generated_Source\PSoC5/cmsis_gcc.h **** 
 160:Generated_Source\PSoC5/cmsis_gcc.h **** 
 161:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 162:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get APSR Register
 163:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 164:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               APSR Register value
 165:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 166:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 167:Generated_Source\PSoC5/cmsis_gcc.h **** {
 168:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 169:Generated_Source\PSoC5/cmsis_gcc.h **** 
 170:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 171:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 172:Generated_Source\PSoC5/cmsis_gcc.h **** }
 173:Generated_Source\PSoC5/cmsis_gcc.h **** 
 174:Generated_Source\PSoC5/cmsis_gcc.h **** 
 175:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 176:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get xPSR Register
 177:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 178:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               xPSR Register value
 179:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 180:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 181:Generated_Source\PSoC5/cmsis_gcc.h **** {
 182:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 183:Generated_Source\PSoC5/cmsis_gcc.h **** 
 184:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 185:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 186:Generated_Source\PSoC5/cmsis_gcc.h **** }
 187:Generated_Source\PSoC5/cmsis_gcc.h **** 
 188:Generated_Source\PSoC5/cmsis_gcc.h **** 
 189:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 190:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 191:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 192:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 193:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 194:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 195:Generated_Source\PSoC5/cmsis_gcc.h **** {
 196:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 197:Generated_Source\PSoC5/cmsis_gcc.h **** 
 198:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 199:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 200:Generated_Source\PSoC5/cmsis_gcc.h **** }
 201:Generated_Source\PSoC5/cmsis_gcc.h **** 
 202:Generated_Source\PSoC5/cmsis_gcc.h **** 
 203:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 204:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 205:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 206:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 207:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 208:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 209:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 210:Generated_Source\PSoC5/cmsis_gcc.h **** {
 211:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 212:Generated_Source\PSoC5/cmsis_gcc.h **** 
 213:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 214:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 215:Generated_Source\PSoC5/cmsis_gcc.h **** }
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 13


 216:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 217:Generated_Source\PSoC5/cmsis_gcc.h **** 
 218:Generated_Source\PSoC5/cmsis_gcc.h **** 
 219:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 220:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 221:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 222:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 223:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 224:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 225:Generated_Source\PSoC5/cmsis_gcc.h **** {
 226:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : "sp");
 227:Generated_Source\PSoC5/cmsis_gcc.h **** }
 228:Generated_Source\PSoC5/cmsis_gcc.h **** 
 229:Generated_Source\PSoC5/cmsis_gcc.h **** 
 230:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 231:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 232:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 233:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 234:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 235:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 236:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 237:Generated_Source\PSoC5/cmsis_gcc.h **** {
 238:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : "sp");
 239:Generated_Source\PSoC5/cmsis_gcc.h **** }
 240:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 241:Generated_Source\PSoC5/cmsis_gcc.h **** 
 242:Generated_Source\PSoC5/cmsis_gcc.h **** 
 243:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 244:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 245:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 246:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 247:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 248:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 249:Generated_Source\PSoC5/cmsis_gcc.h **** {
 250:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 251:Generated_Source\PSoC5/cmsis_gcc.h **** 
 252:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 253:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 254:Generated_Source\PSoC5/cmsis_gcc.h **** }
 255:Generated_Source\PSoC5/cmsis_gcc.h **** 
 256:Generated_Source\PSoC5/cmsis_gcc.h **** 
 257:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 258:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 259:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 260:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 261:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 262:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 263:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 264:Generated_Source\PSoC5/cmsis_gcc.h **** {
 265:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 266:Generated_Source\PSoC5/cmsis_gcc.h **** 
 267:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 268:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 269:Generated_Source\PSoC5/cmsis_gcc.h **** }
 270:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 271:Generated_Source\PSoC5/cmsis_gcc.h **** 
 272:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 14


 273:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 274:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 275:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 276:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 277:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 278:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 279:Generated_Source\PSoC5/cmsis_gcc.h **** {
 280:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : "sp");
 281:Generated_Source\PSoC5/cmsis_gcc.h **** }
 282:Generated_Source\PSoC5/cmsis_gcc.h **** 
 283:Generated_Source\PSoC5/cmsis_gcc.h **** 
 284:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 285:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 286:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 287:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 288:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 289:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 290:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 291:Generated_Source\PSoC5/cmsis_gcc.h **** {
 292:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : "sp");
 293:Generated_Source\PSoC5/cmsis_gcc.h **** }
 294:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 295:Generated_Source\PSoC5/cmsis_gcc.h **** 
 296:Generated_Source\PSoC5/cmsis_gcc.h **** 
 297:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 298:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask
 299:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 300:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 301:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 302:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 303:Generated_Source\PSoC5/cmsis_gcc.h **** {
 304:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 305:Generated_Source\PSoC5/cmsis_gcc.h **** 
 306:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 307:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 308:Generated_Source\PSoC5/cmsis_gcc.h **** }
 309:Generated_Source\PSoC5/cmsis_gcc.h **** 
 310:Generated_Source\PSoC5/cmsis_gcc.h **** 
 311:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 312:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 313:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 314:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 315:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 316:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 317:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 318:Generated_Source\PSoC5/cmsis_gcc.h **** {
 319:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 320:Generated_Source\PSoC5/cmsis_gcc.h **** 
 321:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 322:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 323:Generated_Source\PSoC5/cmsis_gcc.h **** }
 324:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 325:Generated_Source\PSoC5/cmsis_gcc.h **** 
 326:Generated_Source\PSoC5/cmsis_gcc.h **** 
 327:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 328:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask
 329:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 15


 330:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 331:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 332:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 333:Generated_Source\PSoC5/cmsis_gcc.h **** {
 334:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 335:Generated_Source\PSoC5/cmsis_gcc.h **** }
 336:Generated_Source\PSoC5/cmsis_gcc.h **** 
 337:Generated_Source\PSoC5/cmsis_gcc.h **** 
 338:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 339:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 340:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 341:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 342:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 343:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 344:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 345:Generated_Source\PSoC5/cmsis_gcc.h **** {
 346:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 347:Generated_Source\PSoC5/cmsis_gcc.h **** }
 348:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 349:Generated_Source\PSoC5/cmsis_gcc.h **** 
 350:Generated_Source\PSoC5/cmsis_gcc.h **** 
 351:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 352:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 353:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 354:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 355:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable FIQ
 356:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 357:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 358:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 359:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 360:Generated_Source\PSoC5/cmsis_gcc.h **** {
 361:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 362:Generated_Source\PSoC5/cmsis_gcc.h **** }
 363:Generated_Source\PSoC5/cmsis_gcc.h **** 
 364:Generated_Source\PSoC5/cmsis_gcc.h **** 
 365:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 366:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable FIQ
 367:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 368:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 369:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 370:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 371:Generated_Source\PSoC5/cmsis_gcc.h **** {
 372:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 373:Generated_Source\PSoC5/cmsis_gcc.h **** }
 374:Generated_Source\PSoC5/cmsis_gcc.h **** 
 375:Generated_Source\PSoC5/cmsis_gcc.h **** 
 376:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 377:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority
 378:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 379:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 380:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 381:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 382:Generated_Source\PSoC5/cmsis_gcc.h **** {
 383:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 384:Generated_Source\PSoC5/cmsis_gcc.h **** 
 385:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 386:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 16


 387:Generated_Source\PSoC5/cmsis_gcc.h **** }
 388:Generated_Source\PSoC5/cmsis_gcc.h **** 
 389:Generated_Source\PSoC5/cmsis_gcc.h **** 
 390:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 391:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 392:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 393:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 394:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 395:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 396:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 397:Generated_Source\PSoC5/cmsis_gcc.h **** {
 398:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 399:Generated_Source\PSoC5/cmsis_gcc.h **** 
 400:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 401:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 402:Generated_Source\PSoC5/cmsis_gcc.h **** }
 403:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 404:Generated_Source\PSoC5/cmsis_gcc.h **** 
 405:Generated_Source\PSoC5/cmsis_gcc.h **** 
 406:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 407:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority
 408:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 409:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 410:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 411:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 412:Generated_Source\PSoC5/cmsis_gcc.h **** {
 413:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 414:Generated_Source\PSoC5/cmsis_gcc.h **** }
 415:Generated_Source\PSoC5/cmsis_gcc.h **** 
 416:Generated_Source\PSoC5/cmsis_gcc.h **** 
 417:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 419:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 420:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 421:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 422:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 423:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 424:Generated_Source\PSoC5/cmsis_gcc.h **** {
 425:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 426:Generated_Source\PSoC5/cmsis_gcc.h **** }
 427:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 428:Generated_Source\PSoC5/cmsis_gcc.h **** 
 429:Generated_Source\PSoC5/cmsis_gcc.h **** 
 430:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 431:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 432:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 433:Generated_Source\PSoC5/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 434:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 435:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 436:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 437:Generated_Source\PSoC5/cmsis_gcc.h **** {
 438:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 439:Generated_Source\PSoC5/cmsis_gcc.h **** }
 440:Generated_Source\PSoC5/cmsis_gcc.h **** 
 441:Generated_Source\PSoC5/cmsis_gcc.h **** 
 442:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 443:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 17


 444:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 445:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 446:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 447:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 448:Generated_Source\PSoC5/cmsis_gcc.h **** {
 449:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 450:Generated_Source\PSoC5/cmsis_gcc.h **** 
 451:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 452:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 453:Generated_Source\PSoC5/cmsis_gcc.h **** }
 454:Generated_Source\PSoC5/cmsis_gcc.h **** 
 455:Generated_Source\PSoC5/cmsis_gcc.h **** 
 456:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 457:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 458:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 459:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 460:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 461:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 462:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 463:Generated_Source\PSoC5/cmsis_gcc.h **** {
 464:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 465:Generated_Source\PSoC5/cmsis_gcc.h **** 
 466:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 467:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 468:Generated_Source\PSoC5/cmsis_gcc.h **** }
 469:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 470:Generated_Source\PSoC5/cmsis_gcc.h **** 
 471:Generated_Source\PSoC5/cmsis_gcc.h **** 
 472:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 473:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask
 474:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 475:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 476:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 477:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 478:Generated_Source\PSoC5/cmsis_gcc.h **** {
 479:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 480:Generated_Source\PSoC5/cmsis_gcc.h **** }
 481:Generated_Source\PSoC5/cmsis_gcc.h **** 
 482:Generated_Source\PSoC5/cmsis_gcc.h **** 
 483:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 484:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 485:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 486:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 487:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 488:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 489:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 490:Generated_Source\PSoC5/cmsis_gcc.h **** {
 491:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 492:Generated_Source\PSoC5/cmsis_gcc.h **** }
 493:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 494:Generated_Source\PSoC5/cmsis_gcc.h **** 
 495:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 496:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 497:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 498:Generated_Source\PSoC5/cmsis_gcc.h **** 
 499:Generated_Source\PSoC5/cmsis_gcc.h **** 
 500:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 18


 501:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    )
 502:Generated_Source\PSoC5/cmsis_gcc.h **** 
 503:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 504:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 505:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 506:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 507:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 508:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 509:Generated_Source\PSoC5/cmsis_gcc.h **** {
 510:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 511:Generated_Source\PSoC5/cmsis_gcc.h **** 
 512:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 513:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 514:Generated_Source\PSoC5/cmsis_gcc.h **** }
 515:Generated_Source\PSoC5/cmsis_gcc.h **** 
 516:Generated_Source\PSoC5/cmsis_gcc.h **** 
 517:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 518:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 519:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 520:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 521:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 522:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 523:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 524:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 525:Generated_Source\PSoC5/cmsis_gcc.h **** {
 526:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 527:Generated_Source\PSoC5/cmsis_gcc.h **** 
 528:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 529:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 530:Generated_Source\PSoC5/cmsis_gcc.h **** }
 531:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 532:Generated_Source\PSoC5/cmsis_gcc.h **** 
 533:Generated_Source\PSoC5/cmsis_gcc.h **** 
 534:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 535:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 536:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 537:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 538:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 539:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 540:Generated_Source\PSoC5/cmsis_gcc.h **** {
 541:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 542:Generated_Source\PSoC5/cmsis_gcc.h **** }
 543:Generated_Source\PSoC5/cmsis_gcc.h **** 
 544:Generated_Source\PSoC5/cmsis_gcc.h **** 
 545:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 546:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 547:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 548:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 549:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 550:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 551:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 552:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 553:Generated_Source\PSoC5/cmsis_gcc.h **** {
 554:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 555:Generated_Source\PSoC5/cmsis_gcc.h **** }
 556:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 557:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 19


 558:Generated_Source\PSoC5/cmsis_gcc.h **** 
 559:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 560:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 561:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 562:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 563:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 564:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 565:Generated_Source\PSoC5/cmsis_gcc.h **** {
 566:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 567:Generated_Source\PSoC5/cmsis_gcc.h **** 
 568:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 569:Generated_Source\PSoC5/cmsis_gcc.h **** 
 570:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 571:Generated_Source\PSoC5/cmsis_gcc.h **** }
 572:Generated_Source\PSoC5/cmsis_gcc.h **** 
 573:Generated_Source\PSoC5/cmsis_gcc.h **** 
 574:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 575:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 576:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 577:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 578:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 579:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 580:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 581:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 582:Generated_Source\PSoC5/cmsis_gcc.h **** {
 583:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 584:Generated_Source\PSoC5/cmsis_gcc.h **** 
 585:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 586:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 587:Generated_Source\PSoC5/cmsis_gcc.h **** }
 588:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 589:Generated_Source\PSoC5/cmsis_gcc.h **** 
 590:Generated_Source\PSoC5/cmsis_gcc.h **** 
 591:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 592:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 593:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 594:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 595:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 596:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 597:Generated_Source\PSoC5/cmsis_gcc.h **** {
 598:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 599:Generated_Source\PSoC5/cmsis_gcc.h **** }
 600:Generated_Source\PSoC5/cmsis_gcc.h **** 
 601:Generated_Source\PSoC5/cmsis_gcc.h **** 
 602:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 603:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 604:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 605:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 606:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 607:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 608:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 609:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 610:Generated_Source\PSoC5/cmsis_gcc.h **** {
 611:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 612:Generated_Source\PSoC5/cmsis_gcc.h **** }
 613:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 614:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 20


 615:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 616:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    ) */
 617:Generated_Source\PSoC5/cmsis_gcc.h **** 
 618:Generated_Source\PSoC5/cmsis_gcc.h **** 
 619:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 620:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 621:Generated_Source\PSoC5/cmsis_gcc.h **** 
 622:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 623:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get FPSCR
 624:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 625:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 626:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 627:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 628:Generated_Source\PSoC5/cmsis_gcc.h **** {
 629:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 630:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 631:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 632:Generated_Source\PSoC5/cmsis_gcc.h **** 
 633:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                 /* Empty asm statement works as a scheduling
 634:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 635:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 636:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 637:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 638:Generated_Source\PSoC5/cmsis_gcc.h ****    return(0U);
 639:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 640:Generated_Source\PSoC5/cmsis_gcc.h **** }
 641:Generated_Source\PSoC5/cmsis_gcc.h **** 
 642:Generated_Source\PSoC5/cmsis_gcc.h **** 
 643:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 644:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set FPSCR
 645:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 646:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 647:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 648:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 649:Generated_Source\PSoC5/cmsis_gcc.h **** {
 650:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 651:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 652:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                           /* Empty asm statement works as a 
 653:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 654:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 655:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 656:Generated_Source\PSoC5/cmsis_gcc.h **** }
 657:Generated_Source\PSoC5/cmsis_gcc.h **** 
 658:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 659:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 660:Generated_Source\PSoC5/cmsis_gcc.h **** 
 661:Generated_Source\PSoC5/cmsis_gcc.h **** 
 662:Generated_Source\PSoC5/cmsis_gcc.h **** 
 663:Generated_Source\PSoC5/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 664:Generated_Source\PSoC5/cmsis_gcc.h **** 
 665:Generated_Source\PSoC5/cmsis_gcc.h **** 
 666:Generated_Source\PSoC5/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 667:Generated_Source\PSoC5/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 668:Generated_Source\PSoC5/cmsis_gcc.h ****   Access to dedicated instructions
 669:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
 670:Generated_Source\PSoC5/cmsis_gcc.h **** */
 671:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 21


 672:Generated_Source\PSoC5/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 673:Generated_Source\PSoC5/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 674:Generated_Source\PSoC5/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 675:Generated_Source\PSoC5/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 676:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 677:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 678:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 679:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 680:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 681:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 682:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 683:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 684:Generated_Source\PSoC5/cmsis_gcc.h **** 
 685:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 686:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   No Operation
 687:Generated_Source\PSoC5/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 688:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 689:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 690:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 691:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("nop");
 692:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 693:Generated_Source\PSoC5/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 694:Generated_Source\PSoC5/cmsis_gcc.h **** 
 695:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 696:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Interrupt
 697:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 698:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 699:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 700:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 701:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfi");
 702:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 703:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 704:Generated_Source\PSoC5/cmsis_gcc.h **** 
 705:Generated_Source\PSoC5/cmsis_gcc.h **** 
 706:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 707:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Event
 708:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 709:Generated_Source\PSoC5/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 710:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 711:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 712:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 713:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfe");
 714:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 715:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 716:Generated_Source\PSoC5/cmsis_gcc.h **** 
 717:Generated_Source\PSoC5/cmsis_gcc.h **** 
 718:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 719:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Send Event
 720:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 721:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 722:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 723:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 724:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("sev");
 725:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 726:Generated_Source\PSoC5/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 727:Generated_Source\PSoC5/cmsis_gcc.h **** 
 728:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 22


 729:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 730:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 731:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 732:Generated_Source\PSoC5/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 733:Generated_Source\PSoC5/cmsis_gcc.h ****            after the instruction has been completed.
 734:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 735:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 736:Generated_Source\PSoC5/cmsis_gcc.h **** {
 737:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 738:Generated_Source\PSoC5/cmsis_gcc.h **** }
 739:Generated_Source\PSoC5/cmsis_gcc.h **** 
 740:Generated_Source\PSoC5/cmsis_gcc.h **** 
 741:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 742:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 743:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 744:Generated_Source\PSoC5/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 745:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 746:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 747:Generated_Source\PSoC5/cmsis_gcc.h **** {
 748:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 749:Generated_Source\PSoC5/cmsis_gcc.h **** }
 750:Generated_Source\PSoC5/cmsis_gcc.h **** 
 751:Generated_Source\PSoC5/cmsis_gcc.h **** 
 752:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 753:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Memory Barrier
 754:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 755:Generated_Source\PSoC5/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 756:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 757:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 758:Generated_Source\PSoC5/cmsis_gcc.h **** {
 759:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 760:Generated_Source\PSoC5/cmsis_gcc.h **** }
 761:Generated_Source\PSoC5/cmsis_gcc.h **** 
 762:Generated_Source\PSoC5/cmsis_gcc.h **** 
 763:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 764:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 765:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 766:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 767:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 768:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 769:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 770:Generated_Source\PSoC5/cmsis_gcc.h **** {
 771:Generated_Source\PSoC5/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 772:Generated_Source\PSoC5/cmsis_gcc.h ****   return __builtin_bswap32(value);
 773:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 774:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 775:Generated_Source\PSoC5/cmsis_gcc.h **** 
 776:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 777:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 778:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 779:Generated_Source\PSoC5/cmsis_gcc.h **** }
 780:Generated_Source\PSoC5/cmsis_gcc.h **** 
 781:Generated_Source\PSoC5/cmsis_gcc.h **** 
 782:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 783:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 784:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 785:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 23


 786:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 787:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 788:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 789:Generated_Source\PSoC5/cmsis_gcc.h **** {
 790:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 791:Generated_Source\PSoC5/cmsis_gcc.h **** 
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 315              		.loc 2 792 0
 316 0322 FB68     		ldr	r3, [r7, #12]
 317              		.syntax unified
 318              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 319 0324 5BBA     		rev16 r3, r3
 320              	@ 0 "" 2
 321              		.thumb
 322              		.syntax unified
 323 0326 BB60     		str	r3, [r7, #8]
 793:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 324              		.loc 2 793 0
 325 0328 BB68     		ldr	r3, [r7, #8]
 326              	.LBE7:
 327              	.LBE6:
 328              		.loc 1 155 0
 329 032a 9BB2     		uxth	r3, r3
 330 032c 1846     		mov	r0, r3
 331 032e FFF7FEFF 		bl	infoGet
 156:..\src/command_processing.c ****             break;
 332              		.loc 1 156 0
 333 0332 A4E0     		b	.L1
 334              	.L7:
 157:..\src/command_processing.c **** 
 158:..\src/command_processing.c **** //============================================================     CMD_SET_PARAM
 159:..\src/command_processing.c **** 
 160:..\src/command_processing.c ****         case CMD_SET_ZEROS:
 161:..\src/command_processing.c ****             setZeros();
 335              		.loc 1 161 0
 336 0334 FFF7FEFF 		bl	setZeros
 162:..\src/command_processing.c ****             break;
 337              		.loc 1 162 0
 338 0338 A1E0     		b	.L1
 339              	.L14:
 163:..\src/command_processing.c **** 
 164:..\src/command_processing.c **** //============================================================     CMD_GET_PARAM
 165:..\src/command_processing.c **** 
 166:..\src/command_processing.c ****         case CMD_GET_PARAM_LIST:
 167:..\src/command_processing.c ****             manage_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 340              		.loc 1 167 0
 341 033a 154B     		ldr	r3, .L42+4
 342 033c 1B88     		ldrh	r3, [r3]
 343 033e 3B61     		str	r3, [r7, #16]
 344              	.LBB8:
 345              	.LBB9:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 346              		.loc 2 792 0
 347 0340 3B69     		ldr	r3, [r7, #16]
 348              		.syntax unified
 349              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 350 0342 5BBA     		rev16 r3, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 24


 351              	@ 0 "" 2
 352              		.thumb
 353              		.syntax unified
 354 0344 7B60     		str	r3, [r7, #4]
 355              		.loc 2 793 0
 356 0346 7B68     		ldr	r3, [r7, #4]
 357              	.LBE9:
 358              	.LBE8:
 359              		.loc 1 167 0
 360 0348 9BB2     		uxth	r3, r3
 361 034a 1846     		mov	r0, r3
 362 034c FFF7FEFF 		bl	manage_param_list
 168:..\src/command_processing.c ****             //get_IMU_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 169:..\src/command_processing.c ****             break;
 363              		.loc 1 169 0
 364 0350 95E0     		b	.L1
 365              	.L5:
 170:..\src/command_processing.c **** 
 171:..\src/command_processing.c **** //=================================================================     CMD_PING
 172:..\src/command_processing.c ****             
 173:..\src/command_processing.c ****         case CMD_PING:
 174:..\src/command_processing.c ****             cmd_ping();
 366              		.loc 1 174 0
 367 0352 FFF7FEFF 		bl	cmd_ping
 175:..\src/command_processing.c ****             break;
 368              		.loc 1 175 0
 369 0356 92E0     		b	.L1
 370              	.L8:
 176:..\src/command_processing.c **** 
 177:..\src/command_processing.c **** //=========================================================     CMD_STORE_PARAMS
 178:..\src/command_processing.c ****             
 179:..\src/command_processing.c ****         case CMD_STORE_PARAMS:
 180:..\src/command_processing.c ****             cmd_store_params();
 371              		.loc 1 180 0
 372 0358 FFF7FEFF 		bl	cmd_store_params
 181:..\src/command_processing.c ****             break;
 373              		.loc 1 181 0
 374 035c 8FE0     		b	.L1
 375              	.L9:
 182:..\src/command_processing.c **** 
 183:..\src/command_processing.c **** //=================================================     CMD_STORE_DEFAULT_PARAMS
 184:..\src/command_processing.c **** 
 185:..\src/command_processing.c ****         case CMD_STORE_DEFAULT_PARAMS:
 186:..\src/command_processing.c ****             if(memStore(DEFAULT_EEPROM_DISPLACEMENT))
 376              		.loc 1 186 0
 377 035e 3220     		movs	r0, #50
 378 0360 FFF7FEFF 		bl	memStore
 379 0364 0346     		mov	r3, r0
 380 0366 002B     		cmp	r3, #0
 381 0368 03D0     		beq	.L31
 187:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 382              		.loc 1 187 0
 383 036a 0120     		movs	r0, #1
 384 036c FFF7FEFF 		bl	sendAcknowledgment
 188:..\src/command_processing.c ****             else
 189:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 190:..\src/command_processing.c ****             break;
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 25


 385              		.loc 1 190 0
 386 0370 85E0     		b	.L1
 387              	.L31:
 189:..\src/command_processing.c ****             break;
 388              		.loc 1 189 0
 389 0372 0020     		movs	r0, #0
 390 0374 FFF7FEFF 		bl	sendAcknowledgment
 391              		.loc 1 190 0
 392 0378 81E0     		b	.L1
 393              	.L10:
 191:..\src/command_processing.c **** 
 192:..\src/command_processing.c **** //=======================================================     CMD_RESTORE_PARAMS
 193:..\src/command_processing.c **** 
 194:..\src/command_processing.c ****         case CMD_RESTORE_PARAMS:
 195:..\src/command_processing.c ****             if(memRestore())
 394              		.loc 1 195 0
 395 037a FFF7FEFF 		bl	memRestore
 396 037e 0346     		mov	r3, r0
 397 0380 002B     		cmp	r3, #0
 398 0382 07D0     		beq	.L33
 196:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 399              		.loc 1 196 0
 400 0384 0120     		movs	r0, #1
 401 0386 FFF7FEFF 		bl	sendAcknowledgment
 197:..\src/command_processing.c ****             else
 198:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 199:..\src/command_processing.c ****             break;
 402              		.loc 1 199 0
 403 038a 78E0     		b	.L1
 404              	.L43:
 405              		.align	2
 406              	.L42:
 407 038c 00000000 		.word	g_rx
 408 0390 01000000 		.word	g_rx+1
 409              	.L33:
 198:..\src/command_processing.c ****             break;
 410              		.loc 1 198 0
 411 0394 0020     		movs	r0, #0
 412 0396 FFF7FEFF 		bl	sendAcknowledgment
 413              		.loc 1 199 0
 414 039a 70E0     		b	.L1
 415              	.L13:
 200:..\src/command_processing.c **** 
 201:..\src/command_processing.c **** //=============================================================     CMD_INIT_MEM
 202:..\src/command_processing.c **** 
 203:..\src/command_processing.c ****         case CMD_INIT_MEM:
 204:..\src/command_processing.c ****             if(memInit())
 416              		.loc 1 204 0
 417 039c FFF7FEFF 		bl	memInit
 418 03a0 0346     		mov	r3, r0
 419 03a2 002B     		cmp	r3, #0
 420 03a4 03D0     		beq	.L35
 205:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 421              		.loc 1 205 0
 422 03a6 0120     		movs	r0, #1
 423 03a8 FFF7FEFF 		bl	sendAcknowledgment
 206:..\src/command_processing.c ****             else
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 26


 207:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 208:..\src/command_processing.c ****             break;
 424              		.loc 1 208 0
 425 03ac 67E0     		b	.L1
 426              	.L35:
 207:..\src/command_processing.c ****             break;
 427              		.loc 1 207 0
 428 03ae 0020     		movs	r0, #0
 429 03b0 FFF7FEFF 		bl	sendAcknowledgment
 430              		.loc 1 208 0
 431 03b4 63E0     		b	.L1
 432              	.L12:
 209:..\src/command_processing.c **** 
 210:..\src/command_processing.c **** //===========================================================     CMD_BOOTLOADER
 211:..\src/command_processing.c **** 
 212:..\src/command_processing.c ****         case CMD_BOOTLOADER:
 213:..\src/command_processing.c ****             //Not sure if ACK_OK is correct, should check
 214:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 433              		.loc 1 214 0
 434 03b6 0120     		movs	r0, #1
 435 03b8 FFF7FEFF 		bl	sendAcknowledgment
 215:..\src/command_processing.c ****             CyDelay(1000);
 436              		.loc 1 215 0
 437 03bc 4FF47A70 		mov	r0, #1000
 438 03c0 FFF7FEFF 		bl	CyDelay
 216:..\src/command_processing.c ****             FTDI_ENABLE_REG_Write(0x00);
 439              		.loc 1 216 0
 440 03c4 0020     		movs	r0, #0
 441 03c6 FFF7FEFF 		bl	FTDI_ENABLE_REG_Write
 217:..\src/command_processing.c ****             CyDelay(1000);
 442              		.loc 1 217 0
 443 03ca 4FF47A70 		mov	r0, #1000
 444 03ce FFF7FEFF 		bl	CyDelay
 218:..\src/command_processing.c ****             Bootloadable_Load();
 445              		.loc 1 218 0
 446 03d2 FFF7FEFF 		bl	Bootloadable_Load
 219:..\src/command_processing.c ****             break;
 447              		.loc 1 219 0
 448 03d6 52E0     		b	.L1
 449              	.L15:
 220:..\src/command_processing.c **** 
 221:..\src/command_processing.c **** //============================================================     CMD_HAND_CALIBRATE
 222:..\src/command_processing.c **** 
 223:..\src/command_processing.c ****         case CMD_HAND_CALIBRATE:
 224:..\src/command_processing.c ****             calib.speed = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 450              		.loc 1 224 0
 451 03d8 2A4B     		ldr	r3, .L44
 452 03da 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 453 03dc 1B02     		lsls	r3, r3, #8
 454 03de 1AB2     		sxth	r2, r3
 455 03e0 284B     		ldr	r3, .L44
 456 03e2 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 457 03e4 1BB2     		sxth	r3, r3
 458 03e6 1343     		orrs	r3, r3, r2
 459 03e8 1AB2     		sxth	r2, r3
 460 03ea 274B     		ldr	r3, .L44+4
 461 03ec 5A80     		strh	r2, [r3, #2]	@ movhi
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 27


 225:..\src/command_processing.c ****             calib.repetitions = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 462              		.loc 1 225 0
 463 03ee 254B     		ldr	r3, .L44
 464 03f0 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 465 03f2 1B02     		lsls	r3, r3, #8
 466 03f4 1AB2     		sxth	r2, r3
 467 03f6 234B     		ldr	r3, .L44
 468 03f8 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 469 03fa 1BB2     		sxth	r3, r3
 470 03fc 1343     		orrs	r3, r3, r2
 471 03fe 1AB2     		sxth	r2, r3
 472 0400 214B     		ldr	r3, .L44+4
 473 0402 9A80     		strh	r2, [r3, #4]	@ movhi
 226:..\src/command_processing.c ****             //calib.speed = *((int16 *) &g_rx.buffer[1]);
 227:..\src/command_processing.c ****             //calib.repetitions = *((int16 *) &g_rx.buffer[3]);
 228:..\src/command_processing.c ****             
 229:..\src/command_processing.c ****             if(calib.speed == -1 && calib.repetitions == -1) {
 474              		.loc 1 229 0
 475 0404 204B     		ldr	r3, .L44+4
 476 0406 B3F90230 		ldrsh	r3, [r3, #2]
 477 040a B3F1FF3F 		cmp	r3, #-1
 478 040e 0FD1     		bne	.L37
 479              		.loc 1 229 0 is_stmt 0 discriminator 1
 480 0410 1D4B     		ldr	r3, .L44+4
 481 0412 B3F90430 		ldrsh	r3, [r3, #4]
 482 0416 B3F1FF3F 		cmp	r3, #-1
 483 041a 09D1     		bne	.L37
 230:..\src/command_processing.c ****                 calib.enabled = FALSE;
 484              		.loc 1 230 0 is_stmt 1
 485 041c 1A4B     		ldr	r3, .L44+4
 486 041e 0022     		movs	r2, #0
 487 0420 1A70     		strb	r2, [r3]
 231:..\src/command_processing.c ****                 calib.speed = 0;
 488              		.loc 1 231 0
 489 0422 194B     		ldr	r3, .L44+4
 490 0424 0022     		movs	r2, #0
 491 0426 5A80     		strh	r2, [r3, #2]	@ movhi
 232:..\src/command_processing.c ****                 calib.repetitions = 0;
 492              		.loc 1 232 0
 493 0428 174B     		ldr	r3, .L44+4
 494 042a 0022     		movs	r2, #0
 495 042c 9A80     		strh	r2, [r3, #4]	@ movhi
 233:..\src/command_processing.c ****                 break;
 496              		.loc 1 233 0
 497 042e 26E0     		b	.L1
 498              	.L37:
 234:..\src/command_processing.c ****             }
 235:..\src/command_processing.c ****             // Speed & repetitions saturations
 236:..\src/command_processing.c ****             if (calib.speed < 0) {
 499              		.loc 1 236 0
 500 0430 154B     		ldr	r3, .L44+4
 501 0432 B3F90230 		ldrsh	r3, [r3, #2]
 502 0436 002B     		cmp	r3, #0
 503 0438 03DA     		bge	.L38
 237:..\src/command_processing.c ****                 calib.speed = 0;
 504              		.loc 1 237 0
 505 043a 134B     		ldr	r3, .L44+4
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 28


 506 043c 0022     		movs	r2, #0
 507 043e 5A80     		strh	r2, [r3, #2]	@ movhi
 508 0440 07E0     		b	.L39
 509              	.L38:
 238:..\src/command_processing.c ****             } else if (calib.speed > 200) {
 510              		.loc 1 238 0
 511 0442 114B     		ldr	r3, .L44+4
 512 0444 B3F90230 		ldrsh	r3, [r3, #2]
 513 0448 C82B     		cmp	r3, #200
 514 044a 02DD     		ble	.L39
 239:..\src/command_processing.c ****                 calib.speed = 200;
 515              		.loc 1 239 0
 516 044c 0E4B     		ldr	r3, .L44+4
 517 044e C822     		movs	r2, #200
 518 0450 5A80     		strh	r2, [r3, #2]	@ movhi
 519              	.L39:
 240:..\src/command_processing.c ****             }
 241:..\src/command_processing.c ****             if (calib.repetitions < 0) {
 520              		.loc 1 241 0
 521 0452 0D4B     		ldr	r3, .L44+4
 522 0454 B3F90430 		ldrsh	r3, [r3, #4]
 523 0458 002B     		cmp	r3, #0
 524 045a 02DA     		bge	.L40
 242:..\src/command_processing.c ****                 calib.repetitions = 0;
 525              		.loc 1 242 0
 526 045c 0A4B     		ldr	r3, .L44+4
 527 045e 0022     		movs	r2, #0
 528 0460 9A80     		strh	r2, [r3, #4]	@ movhi
 529              	.L40:
 243:..\src/command_processing.c ****             } else if (calib.repetitions > 32767) {
 244:..\src/command_processing.c ****                 calib.repetitions = 32767;
 245:..\src/command_processing.c ****             }
 246:..\src/command_processing.c ****             
 247:..\src/command_processing.c ****             g_refNew.pos = 0;
 530              		.loc 1 247 0
 531 0462 0A4B     		ldr	r3, .L44+8
 532 0464 0022     		movs	r2, #0
 533 0466 1A60     		str	r2, [r3]
 248:..\src/command_processing.c ****             calib.enabled = TRUE;
 534              		.loc 1 248 0
 535 0468 074B     		ldr	r3, .L44+4
 536 046a 0122     		movs	r2, #1
 537 046c 1A70     		strb	r2, [r3]
 249:..\src/command_processing.c ****          
 250:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 538              		.loc 1 250 0
 539 046e 0120     		movs	r0, #1
 540 0470 FFF7FEFF 		bl	sendAcknowledgment
 251:..\src/command_processing.c ****             break;
 541              		.loc 1 251 0
 542 0474 03E0     		b	.L1
 543              	.L28:
 252:..\src/command_processing.c ****             
 253:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_READINGS
 254:..\src/command_processing.c **** 
 255:..\src/command_processing.c ****         case CMD_GET_IMU_READINGS:
 256:..\src/command_processing.c ****             cmd_get_imu_readings();
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 29


 544              		.loc 1 256 0
 545 0476 FFF7FEFF 		bl	cmd_get_imu_readings
 257:..\src/command_processing.c ****             break;    
 546              		.loc 1 257 0
 547 047a 00E0     		b	.L1
 548              	.L41:
 258:..\src/command_processing.c ****             
 259:..\src/command_processing.c **** //=========================================================== ALL OTHER COMMANDS
 260:..\src/command_processing.c ****         default:
 261:..\src/command_processing.c ****             break;
 549              		.loc 1 261 0
 550 047c 00BF     		nop
 551              	.L1:
 262:..\src/command_processing.c **** 
 263:..\src/command_processing.c ****     }
 264:..\src/command_processing.c **** }
 552              		.loc 1 264 0
 553 047e 1837     		adds	r7, r7, #24
 554              		.cfi_def_cfa_offset 8
 555 0480 BD46     		mov	sp, r7
 556              		.cfi_def_cfa_register 13
 557              		@ sp needed
 558 0482 80BD     		pop	{r7, pc}
 559              	.L45:
 560              		.align	2
 561              	.L44:
 562 0484 00000000 		.word	g_rx
 563 0488 00000000 		.word	calib
 564 048c 00000000 		.word	g_refNew
 565              		.cfi_endproc
 566              	.LFE64:
 567              		.size	commProcess, .-commProcess
 568              		.section	.text.infoSend,"ax",%progbits
 569              		.align	2
 570              		.global	infoSend
 571              		.thumb
 572              		.thumb_func
 573              		.type	infoSend, %function
 574              	infoSend:
 575              	.LFB65:
 265:..\src/command_processing.c **** 
 266:..\src/command_processing.c **** 
 267:..\src/command_processing.c **** //==============================================================================
 268:..\src/command_processing.c **** //                                                                     INFO SEND
 269:..\src/command_processing.c **** //==============================================================================
 270:..\src/command_processing.c **** 
 271:..\src/command_processing.c **** void infoSend(void){
 576              		.loc 1 271 0
 577              		.cfi_startproc
 578              		@ args = 0, pretend = 0, frame = 1504
 579              		@ frame_needed = 1, uses_anonymous_args = 0
 580 0000 80B5     		push	{r7, lr}
 581              		.cfi_def_cfa_offset 8
 582              		.cfi_offset 7, -8
 583              		.cfi_offset 14, -4
 584 0002 ADF5BC6D 		sub	sp, sp, #1504
 585              		.cfi_def_cfa_offset 1512
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 30


 586 0006 00AF     		add	r7, sp, #0
 587              		.cfi_def_cfa_register 7
 272:..\src/command_processing.c ****     char packet_string[1500];
 273:..\src/command_processing.c ****     
 274:..\src/command_processing.c ****     prepare_generic_info(packet_string);
 588              		.loc 1 274 0
 589 0008 3B1D     		adds	r3, r7, #4
 590 000a 1846     		mov	r0, r3
 591 000c FFF7FEFF 		bl	prepare_generic_info
 275:..\src/command_processing.c ****     UART_RS485_PutString(packet_string);
 592              		.loc 1 275 0
 593 0010 3B1D     		adds	r3, r7, #4
 594 0012 1846     		mov	r0, r3
 595 0014 FFF7FEFF 		bl	UART_RS485_PutString
 276:..\src/command_processing.c **** }
 596              		.loc 1 276 0
 597 0018 00BF     		nop
 598 001a 07F5BC67 		add	r7, r7, #1504
 599              		.cfi_def_cfa_offset 8
 600 001e BD46     		mov	sp, r7
 601              		.cfi_def_cfa_register 13
 602              		@ sp needed
 603 0020 80BD     		pop	{r7, pc}
 604              		.cfi_endproc
 605              	.LFE65:
 606              		.size	infoSend, .-infoSend
 607 0022 00BF     		.section	.text.infoGet,"ax",%progbits
 608              		.align	2
 609              		.global	infoGet
 610              		.thumb
 611              		.thumb_func
 612              		.type	infoGet, %function
 613              	infoGet:
 614              	.LFB66:
 277:..\src/command_processing.c **** 
 278:..\src/command_processing.c **** 
 279:..\src/command_processing.c **** //==============================================================================
 280:..\src/command_processing.c **** //                                                              COMMAND GET INFO
 281:..\src/command_processing.c **** //==============================================================================
 282:..\src/command_processing.c **** 
 283:..\src/command_processing.c **** void infoGet(uint16 info_type) {
 615              		.loc 1 283 0
 616              		.cfi_startproc
 617              		@ args = 0, pretend = 0, frame = 4008
 618              		@ frame_needed = 1, uses_anonymous_args = 0
 619 0000 80B5     		push	{r7, lr}
 620              		.cfi_def_cfa_offset 8
 621              		.cfi_offset 7, -8
 622              		.cfi_offset 14, -4
 623 0002 ADF6A87D 		subw	sp, sp, #4008
 624              		.cfi_def_cfa_offset 4016
 625 0006 00AF     		add	r7, sp, #0
 626              		.cfi_def_cfa_register 7
 627 0008 0246     		mov	r2, r0
 628 000a BB1D     		adds	r3, r7, #6
 629 000c 1A80     		strh	r2, [r3]	@ movhi
 284:..\src/command_processing.c ****     char packet_string[4000] = "";
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 31


 630              		.loc 1 284 0
 631 000e 07F10803 		add	r3, r7, #8
 632 0012 0022     		movs	r2, #0
 633 0014 1A60     		str	r2, [r3]
 634 0016 0433     		adds	r3, r3, #4
 635 0018 40F69C72 		movw	r2, #3996
 636 001c 0021     		movs	r1, #0
 637 001e 1846     		mov	r0, r3
 638 0020 FFF7FEFF 		bl	memset
 285:..\src/command_processing.c ****     
 286:..\src/command_processing.c ****     //==================================     choose info type and prepare string
 287:..\src/command_processing.c **** 
 288:..\src/command_processing.c ****     switch (info_type) {
 639              		.loc 1 288 0
 640 0024 BB1D     		adds	r3, r7, #6
 641 0026 1B88     		ldrh	r3, [r3]
 642 0028 002B     		cmp	r3, #0
 643 002a 02D0     		beq	.L49
 644 002c 012B     		cmp	r3, #1
 645 002e 0DD0     		beq	.L50
 289:..\src/command_processing.c ****         case INFO_ALL:
 290:..\src/command_processing.c ****             prepare_generic_info(packet_string);
 291:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer(); 
 292:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 293:..\src/command_processing.c ****             break;
 294:..\src/command_processing.c ****         case CYCLES_INFO:
 295:..\src/command_processing.c ****             prepare_counter_info(packet_string);
 296:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 297:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 298:..\src/command_processing.c ****             break;
 299:..\src/command_processing.c ****         default:
 300:..\src/command_processing.c ****             break;
 646              		.loc 1 300 0
 647 0030 19E0     		b	.L51
 648              	.L49:
 290:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer(); 
 649              		.loc 1 290 0
 650 0032 07F10803 		add	r3, r7, #8
 651 0036 1846     		mov	r0, r3
 652 0038 FFF7FEFF 		bl	prepare_generic_info
 291:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 653              		.loc 1 291 0
 654 003c FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 292:..\src/command_processing.c ****             break;
 655              		.loc 1 292 0
 656 0040 07F10803 		add	r3, r7, #8
 657 0044 1846     		mov	r0, r3
 658 0046 FFF7FEFF 		bl	UART_RS485_PutString
 293:..\src/command_processing.c ****         case CYCLES_INFO:
 659              		.loc 1 293 0
 660 004a 0CE0     		b	.L51
 661              	.L50:
 295:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 662              		.loc 1 295 0
 663 004c 07F10803 		add	r3, r7, #8
 664 0050 1846     		mov	r0, r3
 665 0052 FFF7FEFF 		bl	prepare_counter_info
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 32


 296:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 666              		.loc 1 296 0
 667 0056 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 297:..\src/command_processing.c ****             break;
 668              		.loc 1 297 0
 669 005a 07F10803 		add	r3, r7, #8
 670 005e 1846     		mov	r0, r3
 671 0060 FFF7FEFF 		bl	UART_RS485_PutString
 298:..\src/command_processing.c ****         default:
 672              		.loc 1 298 0
 673 0064 00BF     		nop
 674              	.L51:
 301:..\src/command_processing.c ****     }
 302:..\src/command_processing.c **** }
 675              		.loc 1 302 0 discriminator 1
 676 0066 00BF     		nop
 677 0068 07F6A877 		addw	r7, r7, #4008
 678              		.cfi_def_cfa_offset 8
 679 006c BD46     		mov	sp, r7
 680              		.cfi_def_cfa_register 13
 681              		@ sp needed
 682 006e 80BD     		pop	{r7, pc}
 683              		.cfi_endproc
 684              	.LFE66:
 685              		.size	infoGet, .-infoGet
 686              		.global	__aeabi_i2f
 687              		.global	__aeabi_fdiv
 688              		.section	.rodata
 689              		.align	2
 690              	.LC37:
 691 0000 20557362 		.ascii	" Usb\000"
 691      00
 692 0005 000000   		.align	2
 693              	.LC38:
 694 0008 2048616E 		.ascii	" Handle\000"
 694      646C6500 
 695              		.align	2
 696              	.LC39:
 697 0010 20454D47 		.ascii	" EMG proportional\000"
 697      2070726F 
 697      706F7274 
 697      696F6E61 
 697      6C00
 698 0022 0000     		.align	2
 699              	.LC40:
 700 0024 20454D47 		.ascii	" EMG integral\000"
 700      20696E74 
 700      65677261 
 700      6C00
 701 0032 0000     		.align	2
 702              	.LC41:
 703 0034 20454D47 		.ascii	" EMG FCFS\000"
 703      20464346 
 703      5300
 704 003e 0000     		.align	2
 705              	.LC42:
 706 0040 20454D47 		.ascii	" EMG FCFS Advanced\000"
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 33


 706      20464346 
 706      53204164 
 706      76616E63 
 706      656400
 707 0053 00       		.align	2
 708              	.LC43:
 709 0054 20506F73 		.ascii	" Position\000"
 709      6974696F 
 709      6E00
 710 005e 0000     		.align	2
 711              	.LC44:
 712 0060 2050574D 		.ascii	" PWM\000"
 712      00
 713 0065 000000   		.align	2
 714              	.LC45:
 715 0068 20437572 		.ascii	" Current\000"
 715      72656E74 
 715      00
 716 0071 000000   		.align	2
 717              	.LC46:
 718 0074 20506F73 		.ascii	" Position and Current\000"
 718      6974696F 
 718      6E20616E 
 718      64204375 
 718      7272656E 
 719 008a 0000     		.align	2
 720              	.LC47:
 721 008c 20594553 		.ascii	" YES\000\000"
 721      0000
 722 0092 0000     		.align	2
 723              	.LC48:
 724 0094 204E4F00 		.ascii	" NO\000\000"
 724      00
 725 0099 000000   		.align	2
 726              	.LC0:
 727 009c 02       		.byte	2
 728 009d 07       		.byte	7
 729 009e 07       		.byte	7
 730 009f 00       		.byte	0
 731 00a0 00       		.byte	0
 732 00a1 00       		.byte	0
 733 00a2 02       		.byte	2
 734 00a3 03       		.byte	3
 735 00a4 07       		.byte	7
 736 00a5 00       		.byte	0
 737 00a6 05       		.byte	5
 738 00a7 05       		.byte	5
 739 00a8 03       		.byte	3
 740 00a9 04       		.byte	4
 741 00aa 00       		.byte	0
 742 00ab 06       		.byte	6
 743 00ac 02       		.byte	2
 744 00ad 00       		.byte	0
 745 00ae 01       		.byte	1
 746 00af 00       		.byte	0
 747 00b0 07       		.byte	7
 748 00b1 05       		.byte	5
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 34


 749 00b2 07       		.byte	7
 750 00b3 07       		.byte	7
 751 00b4 07       		.byte	7
 752 00b5 00       		.byte	0
 753 00b6 00       		.byte	0
 754 00b7 00       		.byte	0
 755 00b8 02       		.byte	2
 756 00b9 000000   		.align	2
 757              	.LC1:
 758 00bc 01       		.byte	1
 759 00bd 03       		.byte	3
 760 00be 03       		.byte	3
 761 00bf 01       		.byte	1
 762 00c0 01       		.byte	1
 763 00c1 01       		.byte	1
 764 00c2 03       		.byte	3
 765 00c3 03       		.byte	3
 766 00c4 03       		.byte	3
 767 00c5 01       		.byte	1
 768 00c6 02       		.byte	2
 769 00c7 02       		.byte	2
 770 00c8 01       		.byte	1
 771 00c9 02       		.byte	2
 772 00ca 01       		.byte	1
 773 00cb 02       		.byte	2
 774 00cc 01       		.byte	1
 775 00cd 01       		.byte	1
 776 00ce 01       		.byte	1
 777 00cf 01       		.byte	1
 778 00d0 06       		.byte	6
 779 00d1 01       		.byte	1
 780 00d2 01       		.byte	1
 781 00d3 01       		.byte	1
 782 00d4 01       		.byte	1
 783 00d5 01       		.byte	1
 784 00d6 01       		.byte	1
 785 00d7 01       		.byte	1
 786 00d8 06       		.byte	6
 787 00d9 000000   		.align	2
 788              	.LC2:
 789 00dc 03       		.byte	3
 790 00dd 01       		.byte	1
 791 00de 02       		.byte	2
 792 00df 03       		.byte	3
 793 00e0 03       		.byte	3
 794 00e1 03       		.byte	3
 795 00e2 03       		.byte	3
 796 00e3 03       		.byte	3
 797 00e4 03       		.byte	3
 798 00e5 03       		.byte	3
 799 00e6 0000     		.align	2
 800              	.LC3:
 801 00e8 31202D20 		.ascii	"1 - Device ID:\000"
 801      44657669 
 801      63652049 
 801      443A00
 802 00f7 00       		.align	2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 35


 803              	.LC4:
 804 00f8 32202D20 		.ascii	"2 - Position PID [P, I, D]:\000"
 804      506F7369 
 804      74696F6E 
 804      20504944 
 804      205B502C 
 805              		.align	2
 806              	.LC5:
 807 0114 33202D20 		.ascii	"3 - Current PID [P, I, D]:\000"
 807      43757272 
 807      656E7420 
 807      50494420 
 807      5B502C20 
 808 012f 00       		.align	2
 809              	.LC6:
 810 0130 34202D20 		.ascii	"4 - Startup Activation:\000"
 810      53746172 
 810      74757020 
 810      41637469 
 810      76617469 
 811              		.align	2
 812              	.LC7:
 813 0148 35202D20 		.ascii	"5 - Input mode:\000"
 813      496E7075 
 813      74206D6F 
 813      64653A00 
 814              		.align	2
 815              	.LC8:
 816 0158 36202D20 		.ascii	"6 - Control mode:\000"
 816      436F6E74 
 816      726F6C20 
 816      6D6F6465 
 816      3A00
 817 016a 0000     		.align	2
 818              	.LC9:
 819 016c 37202D20 		.ascii	"7 - Resolutions:\000"
 819      5265736F 
 819      6C757469 
 819      6F6E733A 
 819      00
 820 017d 000000   		.align	2
 821              	.LC10:
 822 0180 38202D20 		.ascii	"8 - Measurement Offsets:\000"
 822      4D656173 
 822      7572656D 
 822      656E7420 
 822      4F666673 
 823 0199 000000   		.align	2
 824              	.LC11:
 825 019c 39202D20 		.ascii	"9 - Multipliers:\000"
 825      4D756C74 
 825      69706C69 
 825      6572733A 
 825      00
 826 01ad 000000   		.align	2
 827              	.LC12:
 828 01b0 3130202D 		.ascii	"10 - Pos. limit active:\000"
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 36


 828      20506F73 
 828      2E206C69 
 828      6D697420 
 828      61637469 
 829              		.align	2
 830              	.LC13:
 831 01c8 3131202D 		.ascii	"11 - Pos. limits [inf, sup]:\000"
 831      20506F73 
 831      2E206C69 
 831      6D697473 
 831      205B696E 
 832 01e5 000000   		.align	2
 833              	.LC14:
 834 01e8 3132202D 		.ascii	"12 - Max steps [neg, pos]:\000"
 834      204D6178 
 834      20737465 
 834      7073205B 
 834      6E65672C 
 835 0203 00       		.align	2
 836              	.LC15:
 837 0204 3133202D 		.ascii	"13 - Current limit:\000"
 837      20437572 
 837      72656E74 
 837      206C696D 
 837      69743A00 
 838              		.align	2
 839              	.LC16:
 840 0218 3134202D 		.ascii	"14 - EMG thresholds:\000"
 840      20454D47 
 840      20746872 
 840      6573686F 
 840      6C64733A 
 841 022d 000000   		.align	2
 842              	.LC17:
 843 0230 3135202D 		.ascii	"15 - EMG calibration on startup:\000"
 843      20454D47 
 843      2063616C 
 843      69627261 
 843      74696F6E 
 844 0251 000000   		.align	2
 845              	.LC18:
 846 0254 3136202D 		.ascii	"16 - EMG max values:\000"
 846      20454D47 
 846      206D6178 
 846      2076616C 
 846      7565733A 
 847 0269 000000   		.align	2
 848              	.LC19:
 849 026c 3137202D 		.ascii	"17 - EMG max speed:\000"
 849      20454D47 
 849      206D6178 
 849      20737065 
 849      65643A00 
 850              		.align	2
 851              	.LC20:
 852 0280 3138202D 		.ascii	"18 - Absolute encoder position:\000"
 852      20416273 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 37


 852      6F6C7574 
 852      6520656E 
 852      636F6465 
 853              		.align	2
 854              	.LC21:
 855 02a0 3139202D 		.ascii	"19 - Motor handle ratio:\000"
 855      204D6F74 
 855      6F722068 
 855      616E646C 
 855      65207261 
 856 02b9 000000   		.align	2
 857              	.LC22:
 858 02bc 3230202D 		.ascii	"20 - PWM rescaling:\000"
 858      2050574D 
 858      20726573 
 858      63616C69 
 858      6E673A00 
 859              		.align	2
 860              	.LC23:
 861 02d0 3231202D 		.ascii	"21 - Current lookup:\000"
 861      20437572 
 861      72656E74 
 861      206C6F6F 
 861      6B75703A 
 862 02e5 000000   		.align	2
 863              	.LC24:
 864 02e8 3232202D 		.ascii	"22 - Rest position:\000"
 864      20526573 
 864      7420706F 
 864      73697469 
 864      6F6E3A00 
 865              		.align	2
 866              	.LC25:
 867 02fc 3233202D 		.ascii	"23 - Rest position time delay (ms):\000"
 867      20526573 
 867      7420706F 
 867      73697469 
 867      6F6E2074 
 868              		.align	2
 869              	.LC26:
 870 0320 3234202D 		.ascii	"24 - Rest vel closure (ticks/sec):\000"
 870      20526573 
 870      74207665 
 870      6C20636C 
 870      6F737572 
 871 0343 00       		.align	2
 872              	.LC27:
 873 0344 3235202D 		.ascii	"25 - Rest ratio:\000"
 873      20526573 
 873      74207261 
 873      74696F3A 
 873      00
 874 0355 000000   		.align	2
 875              	.LC28:
 876 0358 3236202D 		.ascii	"26 - Rest position enabled:\000"
 876      20526573 
 876      7420706F 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 38


 876      73697469 
 876      6F6E2065 
 877              		.align	2
 878              	.LC29:
 879 0374 3237202D 		.ascii	"27 - EMG inversion:\000"
 879      20454D47 
 879      20696E76 
 879      65727369 
 879      6F6E3A00 
 880              		.align	2
 881              	.LC30:
 882 0388 3238202D 		.ascii	"28 - Reset counters:\000"
 882      20526573 
 882      65742063 
 882      6F756E74 
 882      6572733A 
 883 039d 000000   		.align	2
 884              	.LC31:
 885 03a0 3239202D 		.ascii	"29 - Current Time [DD/MM/YY HH:MM:SS]:\000"
 885      20437572 
 885      72656E74 
 885      2054696D 
 885      65205B44 
 886 03c7 00       		.align	2
 887              	.LC33:
 888 03c8 E8000000 		.word	.LC3
 889 03cc F8000000 		.word	.LC4
 890 03d0 14010000 		.word	.LC5
 891 03d4 30010000 		.word	.LC6
 892 03d8 48010000 		.word	.LC7
 893 03dc 58010000 		.word	.LC8
 894 03e0 6C010000 		.word	.LC9
 895 03e4 80010000 		.word	.LC10
 896 03e8 9C010000 		.word	.LC11
 897 03ec B0010000 		.word	.LC12
 898 03f0 C8010000 		.word	.LC13
 899 03f4 E8010000 		.word	.LC14
 900 03f8 04020000 		.word	.LC15
 901 03fc 18020000 		.word	.LC16
 902 0400 30020000 		.word	.LC17
 903 0404 54020000 		.word	.LC18
 904 0408 6C020000 		.word	.LC19
 905 040c 80020000 		.word	.LC20
 906 0410 A0020000 		.word	.LC21
 907 0414 BC020000 		.word	.LC22
 908 0418 D0020000 		.word	.LC23
 909 041c E8020000 		.word	.LC24
 910 0420 FC020000 		.word	.LC25
 911 0424 20030000 		.word	.LC26
 912 0428 44030000 		.word	.LC27
 913 042c 58030000 		.word	.LC28
 914 0430 74030000 		.word	.LC29
 915 0434 88030000 		.word	.LC30
 916 0438 A0030000 		.word	.LC31
 917              		.align	2
 918              	.LC34:
 919 043c 30202D3E 		.ascii	"0 -> Usb\0121 -> Handle\0122 -> EMG proportional\012"
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 39


 919      20557362 
 919      0A31202D 
 919      3E204861 
 919      6E646C65 
 920 0467 33202D3E 		.ascii	"3 -> EMG Integral\0124 -> EMG FCFS\0125 -> EMG FCFS"
 920      20454D47 
 920      20496E74 
 920      65677261 
 920      6C0A3420 
 921 0494 20416476 		.ascii	" Advanced\012\000"
 921      616E6365 
 921      640A00
 922 049f 00       		.align	2
 923              	.LC35:
 924 04a0 30202D3E 		.ascii	"0 -> Position\0121 -> PWM\0122 -> Current\0123 -> P"
 924      20506F73 
 924      6974696F 
 924      6E0A3120 
 924      2D3E2050 
 925 04ca 6F736974 		.ascii	"osition and Current\012\000"
 925      696F6E20 
 925      616E6420 
 925      43757272 
 925      656E740A 
 926 04df 00       		.space	1
 927              		.align	2
 928              	.LC36:
 929 04e0 30202D3E 		.ascii	"0 -> Deactivate [NO]\0121 -> Activate [YES]\012\000"
 929      20446561 
 929      63746976 
 929      61746520 
 929      5B4E4F5D 
 930              		.section	.text.get_param_list,"ax",%progbits
 931              		.align	2
 932              		.global	get_param_list
 933              		.thumb
 934              		.thumb_func
 935              		.type	get_param_list, %function
 936              	get_param_list:
 937              	.LFB67:
 303:..\src/command_processing.c **** 
 304:..\src/command_processing.c **** 
 305:..\src/command_processing.c **** //==============================================================================
 306:..\src/command_processing.c **** //                                                                GET PARAM LIST
 307:..\src/command_processing.c **** //==============================================================================
 308:..\src/command_processing.c **** 
 309:..\src/command_processing.c **** void get_param_list() {
 938              		.loc 1 309 0
 939              		.cfi_startproc
 940              		@ args = 0, pretend = 0, frame = 2440
 941              		@ frame_needed = 1, uses_anonymous_args = 0
 942 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 943              		.cfi_def_cfa_offset 20
 944              		.cfi_offset 4, -20
 945              		.cfi_offset 5, -16
 946              		.cfi_offset 6, -12
 947              		.cfi_offset 7, -8
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 40


 948              		.cfi_offset 14, -4
 949 0002 ADF68C1D 		subw	sp, sp, #2444
 950              		.cfi_def_cfa_offset 2464
 951 0006 00AF     		add	r7, sp, #0
 952              		.cfi_def_cfa_register 7
 310:..\src/command_processing.c ****     
 311:..\src/command_processing.c ****     //Package to be sent variables
 312:..\src/command_processing.c ****     uint8 packet_data[PARAM_BYTE_SLOT*NUM_OF_PARAMS + PARAM_MENU_SLOT*3 + PARAM_BYTE_SLOT] = "";   
 953              		.loc 1 312 0
 954 0008 07F5EA73 		add	r3, r7, #468
 955 000c 0022     		movs	r2, #0
 956 000e 1A60     		str	r2, [r3]
 957 0010 0433     		adds	r3, r3, #4
 958 0012 40F29A72 		movw	r2, #1946
 959 0016 0021     		movs	r1, #0
 960 0018 1846     		mov	r0, r3
 961 001a FFF7FEFF 		bl	memset
 313:..\src/command_processing.c ****     uint16 packet_lenght = PARAM_BYTE_SLOT*NUM_OF_PARAMS + PARAM_MENU_SLOT*3 + PARAM_BYTE_SLOT;
 962              		.loc 1 313 0
 963 001e 40F29E73 		movw	r3, #1950
 964 0022 A7F87A39 		strh	r3, [r7, #2426]	@ movhi
 314:..\src/command_processing.c **** 
 315:..\src/command_processing.c ****     //Auxiliary variables
 316:..\src/command_processing.c ****     uint8 CYDATA i, j;
 317:..\src/command_processing.c ****     uint8 CYDATA idx = 0;       //Parameter number
 965              		.loc 1 317 0
 966 0026 0023     		movs	r3, #0
 967 0028 87F88539 		strb	r3, [r7, #2437]
 318:..\src/command_processing.c ****     uint8 CYDATA idx_menu = 0;
 968              		.loc 1 318 0
 969 002c 0023     		movs	r3, #0
 970 002e 87F88439 		strb	r3, [r7, #2436]
 319:..\src/command_processing.c ****     uint8 CYDATA sod = 0;       //sizeof data
 971              		.loc 1 319 0
 972 0032 0023     		movs	r3, #0
 973 0034 87F88339 		strb	r3, [r7, #2435]
 320:..\src/command_processing.c ****     uint8 CYDATA string_lenght;
 321:..\src/command_processing.c ****     char CYDATA aux_str[50] = "";
 974              		.loc 1 321 0
 975 0038 07F5D073 		add	r3, r7, #416
 976 003c 0022     		movs	r2, #0
 977 003e 1A60     		str	r2, [r3]
 978 0040 0433     		adds	r3, r3, #4
 979 0042 2E22     		movs	r2, #46
 980 0044 0021     		movs	r1, #0
 981 0046 1846     		mov	r0, r3
 982 0048 FFF7FEFF 		bl	memset
 322:..\src/command_processing.c ****     uint8* m_addr = (uint8*)&(c_mem.id);
 983              		.loc 1 322 0
 984 004c C84B     		ldr	r3, .L184
 985 004e C7F87C39 		str	r3, [r7, #2428]
 323:..\src/command_processing.c ****     uint8* m_tmp = m_addr;
 986              		.loc 1 323 0
 987 0052 D7F87C39 		ldr	r3, [r7, #2428]
 988 0056 C7F87439 		str	r3, [r7, #2420]
 324:..\src/command_processing.c ****     float aux_float;
 325:..\src/command_processing.c ****     int16 aux_int16;
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 41


 326:..\src/command_processing.c ****     uint16 aux_uint16;
 327:..\src/command_processing.c ****     int32 aux_int32;
 328:..\src/command_processing.c ****     uint32 aux_uint32;
 329:..\src/command_processing.c **** 
 330:..\src/command_processing.c ****     // Arrays
 331:..\src/command_processing.c ****     const uint8 TYPES[NUM_OF_PARAMS] = {
 989              		.loc 1 331 0
 990 005a 07F5B873 		add	r3, r7, #368
 991 005e C54A     		ldr	r2, .L184+4
 992 0060 1C46     		mov	r4, r3
 993 0062 1546     		mov	r5, r2
 994 0064 2868     		ldr	r0, [r5]	@ unaligned
 995 0066 6968     		ldr	r1, [r5, #4]	@ unaligned
 996 0068 AA68     		ldr	r2, [r5, #8]	@ unaligned
 997 006a EB68     		ldr	r3, [r5, #12]	@ unaligned
 998 006c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 999 006e 2869     		ldr	r0, [r5, #16]	@ unaligned
 1000 0070 6969     		ldr	r1, [r5, #20]	@ unaligned
 1001 0072 AA69     		ldr	r2, [r5, #24]	@ unaligned
 1002 0074 07C4     		stmia	r4!, {r0, r1, r2}
 1003 0076 2B7F     		ldrb	r3, [r5, #28]
 1004 0078 2370     		strb	r3, [r4]
 332:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLOAT, TYPE_FLOAT, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, TYPE_INT16
 333:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_INT32, TYPE_INT32, TYPE_INT16, TYPE_UINT16, TYPE_FLAG, TYPE_UIN
 334:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_INT8, TYPE_FLAG, TYPE_FLOAT, TYPE_INT32, TYPE_FLOAT, TYPE_FLOAT
 335:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, TYPE_UINT8
 336:..\src/command_processing.c ****     };
 337:..\src/command_processing.c **** 
 338:..\src/command_processing.c ****     const uint8 NUM_ITEMS[NUM_OF_PARAMS] = {
 1005              		.loc 1 338 0
 1006 007a 07F5A873 		add	r3, r7, #336
 1007 007e BE4A     		ldr	r2, .L184+8
 1008 0080 1C46     		mov	r4, r3
 1009 0082 1546     		mov	r5, r2
 1010 0084 2868     		ldr	r0, [r5]	@ unaligned
 1011 0086 6968     		ldr	r1, [r5, #4]	@ unaligned
 1012 0088 AA68     		ldr	r2, [r5, #8]	@ unaligned
 1013 008a EB68     		ldr	r3, [r5, #12]	@ unaligned
 1014 008c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1015 008e 2869     		ldr	r0, [r5, #16]	@ unaligned
 1016 0090 6969     		ldr	r1, [r5, #20]	@ unaligned
 1017 0092 AA69     		ldr	r2, [r5, #24]	@ unaligned
 1018 0094 07C4     		stmia	r4!, {r0, r1, r2}
 1019 0096 2B7F     		ldrb	r3, [r5, #28]
 1020 0098 2370     		strb	r3, [r4]
 339:..\src/command_processing.c ****         1, 3, 3, 1, 1, 1, 3, 3,
 340:..\src/command_processing.c ****         3, 1, 2, 2, 1, 2, 1, 2,
 341:..\src/command_processing.c ****         1, 1, 1, 1, 6, 1, 1, 1,
 342:..\src/command_processing.c ****         1, 1, 1, 1, 6
 343:..\src/command_processing.c ****     };
 344:..\src/command_processing.c **** 
 345:..\src/command_processing.c ****     const uint8 NUM_MENU[10] = {3, 1, 2, 3, 3, 3, 3, 3, 3, 3};
 1021              		.loc 1 345 0
 1022 009a 07F5A273 		add	r3, r7, #324
 1023 009e B74A     		ldr	r2, .L184+12
 1024 00a0 1068     		ldr	r0, [r2]	@ unaligned
 1025 00a2 5168     		ldr	r1, [r2, #4]	@ unaligned
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 42


 1026 00a4 03C3     		stmia	r3!, {r0, r1}
 1027 00a6 1289     		ldrh	r2, [r2, #8]	@ unaligned
 1028 00a8 1A80     		strh	r2, [r3]	@ unaligned
 346:..\src/command_processing.c ****     
 347:..\src/command_processing.c ****     const char* PARAMS_STR[NUM_OF_PARAMS] = {
 1029              		.loc 1 347 0
 1030 00aa 07F1D003 		add	r3, r7, #208
 1031 00ae B44A     		ldr	r2, .L184+16
 1032 00b0 1846     		mov	r0, r3
 1033 00b2 1146     		mov	r1, r2
 1034 00b4 7423     		movs	r3, #116
 1035 00b6 1A46     		mov	r2, r3
 1036 00b8 FFF7FEFF 		bl	memcpy
 348:..\src/command_processing.c ****         "1 - Device ID:", "2 - Position PID [P, I, D]:", "3 - Current PID [P, I, D]:", "4 - Startup
 349:..\src/command_processing.c ****         "5 - Input mode:", "6 - Control mode:", "7 - Resolutions:", "8 - Measurement Offsets:", 
 350:..\src/command_processing.c ****         "9 - Multipliers:", "10 - Pos. limit active:", "11 - Pos. limits [inf, sup]:", "12 - Max st
 351:..\src/command_processing.c ****         "13 - Current limit:", "14 - EMG thresholds:", "15 - EMG calibration on startup:", "16 - EM
 352:..\src/command_processing.c ****         "17 - EMG max speed:", "18 - Absolute encoder position:", "19 - Motor handle ratio:", "20 -
 353:..\src/command_processing.c ****         "21 - Current lookup:", "22 - Rest position:", "23 - Rest position time delay (ms):", "24 -
 354:..\src/command_processing.c ****         "25 - Rest ratio:", "26 - Rest position enabled:", "27 - EMG inversion:", "28 - Reset count
 355:..\src/command_processing.c ****     };
 356:..\src/command_processing.c **** 
 357:..\src/command_processing.c ****     //Parameters menu
 358:..\src/command_processing.c ****     const char input_mode_menu[99] = "0 -> Usb\n1 -> Handle\n2 -> EMG proportional\n3 -> EMG Integr
 1037              		.loc 1 358 0
 1038 00bc 07F16C03 		add	r3, r7, #108
 1039 00c0 B04A     		ldr	r2, .L184+20
 1040 00c2 1846     		mov	r0, r3
 1041 00c4 1146     		mov	r1, r2
 1042 00c6 6323     		movs	r3, #99
 1043 00c8 1A46     		mov	r2, r3
 1044 00ca FFF7FEFF 		bl	memcpy
 359:..\src/command_processing.c ****     const char control_mode_menu[64] = "0 -> Position\n1 -> PWM\n2 -> Current\n3 -> Position and Cu
 1045              		.loc 1 359 0
 1046 00ce 07F12C06 		add	r6, r7, #44
 1047 00d2 AD4B     		ldr	r3, .L184+24
 1048 00d4 3446     		mov	r4, r6
 1049 00d6 1D46     		mov	r5, r3
 1050 00d8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1051 00da 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1052 00dc 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1053 00de 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1054 00e0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1055 00e2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1056 00e4 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 1057 00e8 07C4     		stmia	r4!, {r0, r1, r2}
 1058 00ea 2380     		strh	r3, [r4]	@ movhi
 1059 00ec 0234     		adds	r4, r4, #2
 1060 00ee 1B0C     		lsrs	r3, r3, #16
 1061 00f0 2370     		strb	r3, [r4]
 1062 00f2 0023     		movs	r3, #0
 1063 00f4 86F83F30 		strb	r3, [r6, #63]
 360:..\src/command_processing.c ****     const char yes_no_menu[42] = "0 -> Deactivate [NO]\n1 -> Activate [YES]\n";
 1064              		.loc 1 360 0
 1065 00f8 3B46     		mov	r3, r7
 1066 00fa A44A     		ldr	r2, .L184+28
 1067 00fc 1C46     		mov	r4, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 43


 1068 00fe 1546     		mov	r5, r2
 1069 0100 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1070 0102 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1071 0104 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1072 0106 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1073 0108 95E80700 		ldmia	r5, {r0, r1, r2}
 1074 010c 03C4     		stmia	r4!, {r0, r1}
 1075 010e 2280     		strh	r2, [r4]	@ movhi
 361:..\src/command_processing.c ****    
 362:..\src/command_processing.c ****     packet_data[0] = CMD_GET_PARAM_LIST;
 1076              		.loc 1 362 0
 1077 0110 07F5EA73 		add	r3, r7, #468
 1078 0114 0C22     		movs	r2, #12
 1079 0116 1A70     		strb	r2, [r3]
 363:..\src/command_processing.c ****     packet_data[1] = NUM_OF_PARAMS;
 1080              		.loc 1 363 0
 1081 0118 07F5EA73 		add	r3, r7, #468
 1082 011c 1D22     		movs	r2, #29
 1083 011e 5A70     		strb	r2, [r3, #1]
 364:..\src/command_processing.c ****     
 365:..\src/command_processing.c ****     for (idx = 0; idx < NUM_OF_PARAMS; idx++) {
 1084              		.loc 1 365 0
 1085 0120 0023     		movs	r3, #0
 1086 0122 87F88539 		strb	r3, [r7, #2437]
 1087 0126 01F027B8 		b	.L53
 1088              	.L173:
 366:..\src/command_processing.c ****         
 367:..\src/command_processing.c ****         // Add parameter type and size to packet
 368:..\src/command_processing.c ****         packet_data[2 + PARAM_BYTE_SLOT*idx] = TYPES[idx];
 1089              		.loc 1 368 0
 1090 012a 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 1091 012e 3222     		movs	r2, #50
 1092 0130 02FB03F3 		mul	r3, r2, r3
 1093 0134 0233     		adds	r3, r3, #2
 1094 0136 97F88529 		ldrb	r2, [r7, #2437]	@ zero_extendqisi2
 1095 013a 07F5B871 		add	r1, r7, #368
 1096 013e 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 1097 0140 07F5EA72 		add	r2, r7, #468
 1098 0144 D154     		strb	r1, [r2, r3]
 369:..\src/command_processing.c ****         packet_data[3 + PARAM_BYTE_SLOT*idx] = NUM_ITEMS[idx];
 1099              		.loc 1 369 0
 1100 0146 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 1101 014a 3222     		movs	r2, #50
 1102 014c 02FB03F3 		mul	r3, r2, r3
 1103 0150 0333     		adds	r3, r3, #3
 1104 0152 97F88529 		ldrb	r2, [r7, #2437]	@ zero_extendqisi2
 1105 0156 07F5A871 		add	r1, r7, #336
 1106 015a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 1107 015c 07F5EA72 		add	r2, r7, #468
 1108 0160 D154     		strb	r1, [r2, r3]
 370:..\src/command_processing.c ****         
 371:..\src/command_processing.c ****         // Find size of data
 372:..\src/command_processing.c ****         switch (TYPES[idx]) {
 1109              		.loc 1 372 0
 1110 0162 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 1111 0166 07F5B872 		add	r2, r7, #368
 1112 016a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 44


 1113 016c 072B     		cmp	r3, #7
 1114 016e 1FD8     		bhi	.L54
 1115 0170 01A2     		adr	r2, .L56
 1116 0172 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1117 0176 00BF     		.p2align 2
 1118              	.L56:
 1119 0178 99010000 		.word	.L55+1
 1120 017c 99010000 		.word	.L55+1
 1121 0180 99010000 		.word	.L55+1
 1122 0184 A1010000 		.word	.L57+1
 1123 0188 A1010000 		.word	.L57+1
 1124 018c A9010000 		.word	.L58+1
 1125 0190 A9010000 		.word	.L58+1
 1126 0194 A9010000 		.word	.L58+1
 1127              		.p2align 1
 1128              	.L55:
 373:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8:
 374:..\src/command_processing.c ****                 sod = 1; break;
 1129              		.loc 1 374 0
 1130 0198 0123     		movs	r3, #1
 1131 019a 87F88339 		strb	r3, [r7, #2435]
 1132 019e 07E0     		b	.L54
 1133              	.L57:
 375:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 376:..\src/command_processing.c ****                 sod = 2; break;
 1134              		.loc 1 376 0
 1135 01a0 0223     		movs	r3, #2
 1136 01a2 87F88339 		strb	r3, [r7, #2435]
 1137 01a6 03E0     		b	.L54
 1138              	.L58:
 377:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 378:..\src/command_processing.c ****                 sod = 4; break;
 1139              		.loc 1 378 0
 1140 01a8 0423     		movs	r3, #4
 1141 01aa 87F88339 		strb	r3, [r7, #2435]
 1142 01ae 00BF     		nop
 1143              	.L54:
 379:..\src/command_processing.c ****         }
 380:..\src/command_processing.c ****         
 381:..\src/command_processing.c ****         // Add parameter data to packet
 382:..\src/command_processing.c ****         switch (TYPES[idx]) {
 1144              		.loc 1 382 0
 1145 01b0 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 1146 01b4 07F5B872 		add	r2, r7, #368
 1147 01b8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1148 01ba 072B     		cmp	r3, #7
 1149 01bc 00F2B985 		bhi	.L59
 1150 01c0 01A2     		adr	r2, .L61
 1151 01c2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1152 01c6 00BF     		.p2align 2
 1153              	.L61:
 1154 01c8 E9010000 		.word	.L60+1
 1155 01cc 4F020000 		.word	.L62+1
 1156 01d0 E9010000 		.word	.L60+1
 1157 01d4 B5020000 		.word	.L63+1
 1158 01d8 07040000 		.word	.L64+1
 1159 01dc AB040000 		.word	.L65+1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 45


 1160 01e0 85060000 		.word	.L66+1
 1161 01e4 27070000 		.word	.L67+1
 1162              		.p2align 1
 1163              	.L60:
 383:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_UINT8:
 384:..\src/command_processing.c ****                 for (i=0; i<NUM_ITEMS[idx]; i++){
 1164              		.loc 1 384 0
 1165 01e8 0023     		movs	r3, #0
 1166 01ea 87F88739 		strb	r3, [r7, #2439]
 1167 01ee 23E0     		b	.L68
 1168              	.L69:
 385:..\src/command_processing.c ****                     m_tmp = m_addr + i*sod;
 1169              		.loc 1 385 0 discriminator 3
 1170 01f0 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 1171 01f4 97F88329 		ldrb	r2, [r7, #2435]	@ zero_extendqisi2
 1172 01f8 02FB03F3 		mul	r3, r2, r3
 1173 01fc 1A46     		mov	r2, r3
 1174 01fe D7F87C39 		ldr	r3, [r7, #2428]
 1175 0202 1344     		add	r3, r3, r2
 1176 0204 C7F87439 		str	r3, [r7, #2420]
 386:..\src/command_processing.c ****                     packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1177              		.loc 1 386 0 discriminator 3
 1178 0208 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 1179 020c 3222     		movs	r2, #50
 1180 020e 02FB03F3 		mul	r3, r2, r3
 1181 0212 1A1D     		adds	r2, r3, #4
 1182 0214 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 1183 0218 97F88319 		ldrb	r1, [r7, #2435]	@ zero_extendqisi2
 1184 021c 01FB03F3 		mul	r3, r1, r3
 1185 0220 1344     		add	r3, r3, r2
 1186 0222 D7F87429 		ldr	r2, [r7, #2420]
 1187 0226 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1188 0228 07F5EA72 		add	r2, r7, #468
 1189 022c D154     		strb	r1, [r2, r3]
 384:..\src/command_processing.c ****                     m_tmp = m_addr + i*sod;
 1190              		.loc 1 384 0 discriminator 3
 1191 022e 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 1192 0232 0133     		adds	r3, r3, #1
 1193 0234 87F88739 		strb	r3, [r7, #2439]
 1194              	.L68:
 384:..\src/command_processing.c ****                     m_tmp = m_addr + i*sod;
 1195              		.loc 1 384 0 is_stmt 0 discriminator 1
 1196 0238 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 1197 023c 07F5A872 		add	r2, r7, #336
 1198 0240 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1199 0242 97F88729 		ldrb	r2, [r7, #2439]	@ zero_extendqisi2
 1200 0246 9A42     		cmp	r2, r3
 1201 0248 D2D3     		bcc	.L69
 387:..\src/command_processing.c ****                 }
 388:..\src/command_processing.c ****                 break;                
 1202              		.loc 1 388 0 is_stmt 1
 1203 024a 00F072BD 		b	.L59
 1204              	.L62:
 389:..\src/command_processing.c ****             case TYPE_INT8:
 390:..\src/command_processing.c ****                 for (i=0; i<NUM_ITEMS[idx]; i++){
 1205              		.loc 1 390 0
 1206 024e 0023     		movs	r3, #0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 46


 1207 0250 87F88739 		strb	r3, [r7, #2439]
 1208 0254 23E0     		b	.L70
 1209              	.L71:
 391:..\src/command_processing.c ****                     m_tmp = m_addr + i*sod;
 1210              		.loc 1 391 0 discriminator 3
 1211 0256 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 1212 025a 97F88329 		ldrb	r2, [r7, #2435]	@ zero_extendqisi2
 1213 025e 02FB03F3 		mul	r3, r2, r3
 1214 0262 1A46     		mov	r2, r3
 1215 0264 D7F87C39 		ldr	r3, [r7, #2428]
 1216 0268 1344     		add	r3, r3, r2
 1217 026a C7F87439 		str	r3, [r7, #2420]
 392:..\src/command_processing.c ****                     packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1218              		.loc 1 392 0 discriminator 3
 1219 026e 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 1220 0272 3222     		movs	r2, #50
 1221 0274 02FB03F3 		mul	r3, r2, r3
 1222 0278 1A1D     		adds	r2, r3, #4
 1223 027a 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 1224 027e 97F88319 		ldrb	r1, [r7, #2435]	@ zero_extendqisi2
 1225 0282 01FB03F3 		mul	r3, r1, r3
 1226 0286 1344     		add	r3, r3, r2
 1227 0288 D7F87429 		ldr	r2, [r7, #2420]
 1228 028c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1229 028e 07F5EA72 		add	r2, r7, #468
 1230 0292 D154     		strb	r1, [r2, r3]
 390:..\src/command_processing.c ****                     m_tmp = m_addr + i*sod;
 1231              		.loc 1 390 0 discriminator 3
 1232 0294 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 1233 0298 0133     		adds	r3, r3, #1
 1234 029a 87F88739 		strb	r3, [r7, #2439]
 1235              	.L70:
 390:..\src/command_processing.c ****                     m_tmp = m_addr + i*sod;
 1236              		.loc 1 390 0 is_stmt 0 discriminator 1
 1237 029e 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 1238 02a2 07F5A872 		add	r2, r7, #336
 1239 02a6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1240 02a8 97F88729 		ldrb	r2, [r7, #2439]	@ zero_extendqisi2
 1241 02ac 9A42     		cmp	r2, r3
 1242 02ae D2D3     		bcc	.L71
 393:..\src/command_processing.c ****                 }
 394:..\src/command_processing.c ****                 break;
 1243              		.loc 1 394 0 is_stmt 1
 1244 02b0 00F03FBD 		b	.L59
 1245              	.L63:
 395:..\src/command_processing.c ****             case TYPE_INT16:
 396:..\src/command_processing.c ****                 for (i=0; i<NUM_ITEMS[idx]; i++){
 1246              		.loc 1 396 0
 1247 02b4 0023     		movs	r3, #0
 1248 02b6 87F88739 		strb	r3, [r7, #2439]
 1249 02ba 98E0     		b	.L72
 1250              	.L79:
 397:..\src/command_processing.c ****                     if (idx == 7) {     //Offset measurements
 1251              		.loc 1 397 0
 1252 02bc 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 1253 02c0 072B     		cmp	r3, #7
 1254 02c2 3ED1     		bne	.L73
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 47


 398:..\src/command_processing.c ****                         aux_int16 = (c_mem.m_off[i] >> c_mem.res[i]);
 1255              		.loc 1 398 0
 1256 02c4 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 1257 02c8 314A     		ldr	r2, .L184+32
 1258 02ca 0E33     		adds	r3, r3, #14
 1259 02cc 9B00     		lsls	r3, r3, #2
 1260 02ce 1344     		add	r3, r3, r2
 1261 02d0 5B68     		ldr	r3, [r3, #4]
 1262 02d2 97F88729 		ldrb	r2, [r7, #2439]	@ zero_extendqisi2
 1263 02d6 2E49     		ldr	r1, .L184+32
 1264 02d8 0A44     		add	r2, r2, r1
 1265 02da 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 1266 02de 1341     		asrs	r3, r3, r2
 1267 02e0 1AB2     		sxth	r2, r3
 1268 02e2 07F5CD73 		add	r3, r7, #410
 1269 02e6 1A80     		strh	r2, [r3]	@ movhi
 399:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1270              		.loc 1 399 0
 1271 02e8 0023     		movs	r3, #0
 1272 02ea 87F88639 		strb	r3, [r7, #2438]
 1273 02ee 21E0     		b	.L74
 1274              	.L75:
 400:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1275              		.loc 1 400 0 discriminator 3
 1276 02f0 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 1277 02f4 3222     		movs	r2, #50
 1278 02f6 02FB03F3 		mul	r3, r2, r3
 1279 02fa 1A1D     		adds	r2, r3, #4
 1280 02fc 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 1281 0300 97F88319 		ldrb	r1, [r7, #2435]	@ zero_extendqisi2
 1282 0304 01FB03F3 		mul	r3, r1, r3
 1283 0308 1A44     		add	r2, r2, r3
 1284 030a 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 1285 030e 1A44     		add	r2, r2, r3
 1286 0310 97F88639 		ldrb	r3, [r7, #2438]	@ zero_extendqisi2
 1287 0314 D31A     		subs	r3, r2, r3
 1288 0316 013B     		subs	r3, r3, #1
 1289 0318 97F88629 		ldrb	r2, [r7, #2438]	@ zero_extendqisi2
 1290 031c 07F5CD71 		add	r1, r7, #410
 1291 0320 0A44     		add	r2, r2, r1
 1292 0322 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1293 0324 07F5EA72 		add	r2, r7, #468
 1294 0328 D154     		strb	r1, [r2, r3]
 399:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1295              		.loc 1 399 0 discriminator 3
 1296 032a 97F88639 		ldrb	r3, [r7, #2438]	@ zero_extendqisi2
 1297 032e 0133     		adds	r3, r3, #1
 1298 0330 87F88639 		strb	r3, [r7, #2438]
 1299              	.L74:
 399:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1300              		.loc 1 399 0 is_stmt 0 discriminator 1
 1301 0334 97F88629 		ldrb	r2, [r7, #2438]	@ zero_extendqisi2
 1302 0338 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 1303 033c 9A42     		cmp	r2, r3
 1304 033e D7D3     		bcc	.L75
 1305 0340 50E0     		b	.L76
 1306              	.L73:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 48


 401:..\src/command_processing.c ****                         }
 402:..\src/command_processing.c ****                         //*((int16*)(packet_data + (4 + PARAM_BYTE_SLOT*idx) + i*sod)) = (int16) (c
 403:..\src/command_processing.c ****                     }
 404:..\src/command_processing.c ****                     else {
 405:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1307              		.loc 1 405 0 is_stmt 1
 1308 0342 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 1309 0346 97F88329 		ldrb	r2, [r7, #2435]	@ zero_extendqisi2
 1310 034a 02FB03F3 		mul	r3, r2, r3
 1311 034e 1A46     		mov	r2, r3
 1312 0350 D7F87C39 		ldr	r3, [r7, #2428]
 1313 0354 1344     		add	r3, r3, r2
 1314 0356 C7F87439 		str	r3, [r7, #2420]
 406:..\src/command_processing.c ****                         aux_int16 = *((int16*)m_tmp);
 1315              		.loc 1 406 0
 1316 035a D7F87439 		ldr	r3, [r7, #2420]
 1317 035e B3F90020 		ldrsh	r2, [r3]
 1318 0362 07F5CD73 		add	r3, r7, #410
 1319 0366 1A80     		strh	r2, [r3]	@ movhi
 407:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1320              		.loc 1 407 0
 1321 0368 0023     		movs	r3, #0
 1322 036a 87F88639 		strb	r3, [r7, #2438]
 1323 036e 33E0     		b	.L77
 1324              	.L185:
 1325              		.align	2
 1326              	.L184:
 1327 0370 01000000 		.word	c_mem+1
 1328 0374 9C000000 		.word	.LC0
 1329 0378 BC000000 		.word	.LC1
 1330 037c DC000000 		.word	.LC2
 1331 0380 C8030000 		.word	.LC33
 1332 0384 3C040000 		.word	.LC34
 1333 0388 A0040000 		.word	.LC35
 1334 038c E0040000 		.word	.LC36
 1335 0390 00000000 		.word	c_mem
 1336              	.L78:
 408:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1337              		.loc 1 408 0 discriminator 3
 1338 0394 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 1339 0398 3222     		movs	r2, #50
 1340 039a 02FB03F3 		mul	r3, r2, r3
 1341 039e 1A1D     		adds	r2, r3, #4
 1342 03a0 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 1343 03a4 97F88319 		ldrb	r1, [r7, #2435]	@ zero_extendqisi2
 1344 03a8 01FB03F3 		mul	r3, r1, r3
 1345 03ac 1A44     		add	r2, r2, r3
 1346 03ae 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 1347 03b2 1A44     		add	r2, r2, r3
 1348 03b4 97F88639 		ldrb	r3, [r7, #2438]	@ zero_extendqisi2
 1349 03b8 D31A     		subs	r3, r2, r3
 1350 03ba 013B     		subs	r3, r3, #1
 1351 03bc 97F88629 		ldrb	r2, [r7, #2438]	@ zero_extendqisi2
 1352 03c0 07F5CD71 		add	r1, r7, #410
 1353 03c4 0A44     		add	r2, r2, r1
 1354 03c6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1355 03c8 07F5EA72 		add	r2, r7, #468
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 49


 1356 03cc D154     		strb	r1, [r2, r3]
 407:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1357              		.loc 1 407 0 discriminator 3
 1358 03ce 97F88639 		ldrb	r3, [r7, #2438]	@ zero_extendqisi2
 1359 03d2 0133     		adds	r3, r3, #1
 1360 03d4 87F88639 		strb	r3, [r7, #2438]
 1361              	.L77:
 407:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1362              		.loc 1 407 0 is_stmt 0 discriminator 1
 1363 03d8 97F88629 		ldrb	r2, [r7, #2438]	@ zero_extendqisi2
 1364 03dc 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 1365 03e0 9A42     		cmp	r2, r3
 1366 03e2 D7D3     		bcc	.L78
 1367              	.L76:
 396:..\src/command_processing.c ****                     if (idx == 7) {     //Offset measurements
 1368              		.loc 1 396 0 is_stmt 1 discriminator 2
 1369 03e4 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 1370 03e8 0133     		adds	r3, r3, #1
 1371 03ea 87F88739 		strb	r3, [r7, #2439]
 1372              	.L72:
 396:..\src/command_processing.c ****                     if (idx == 7) {     //Offset measurements
 1373              		.loc 1 396 0 is_stmt 0 discriminator 1
 1374 03ee 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 1375 03f2 07F5A872 		add	r2, r7, #336
 1376 03f6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1377 03f8 97F88729 		ldrb	r2, [r7, #2439]	@ zero_extendqisi2
 1378 03fc 9A42     		cmp	r2, r3
 1379 03fe FFF45DAF 		bcc	.L79
 409:..\src/command_processing.c ****                         }
 410:..\src/command_processing.c ****                         //*((int16*)(packet_data + (4 + PARAM_BYTE_SLOT*idx) + i*sod)) = *((int16*)
 411:..\src/command_processing.c ****                     }
 412:..\src/command_processing.c ****                 }
 413:..\src/command_processing.c ****                 break;
 1380              		.loc 1 413 0 is_stmt 1
 1381 0402 00F096BC 		b	.L59
 1382              	.L64:
 414:..\src/command_processing.c ****             case TYPE_UINT16:
 415:..\src/command_processing.c ****                 for (i=0; i<NUM_ITEMS[idx]; i++){
 1383              		.loc 1 415 0
 1384 0406 0023     		movs	r3, #0
 1385 0408 87F88739 		strb	r3, [r7, #2439]
 1386 040c 42E0     		b	.L80
 1387              	.L83:
 416:..\src/command_processing.c ****                     m_tmp = m_addr + i*sod;
 1388              		.loc 1 416 0
 1389 040e 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 1390 0412 97F88329 		ldrb	r2, [r7, #2435]	@ zero_extendqisi2
 1391 0416 02FB03F3 		mul	r3, r2, r3
 1392 041a 1A46     		mov	r2, r3
 1393 041c D7F87C39 		ldr	r3, [r7, #2428]
 1394 0420 1344     		add	r3, r3, r2
 1395 0422 C7F87439 		str	r3, [r7, #2420]
 417:..\src/command_processing.c ****                     aux_uint16 = *((uint16*)m_tmp);
 1396              		.loc 1 417 0
 1397 0426 D7F87439 		ldr	r3, [r7, #2420]
 1398 042a 1A88     		ldrh	r2, [r3]
 1399 042c 07F5CC73 		add	r3, r7, #408
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 50


 1400 0430 1A80     		strh	r2, [r3]	@ movhi
 418:..\src/command_processing.c ****                     for(j = 0; j < sod; j++) {
 1401              		.loc 1 418 0
 1402 0432 0023     		movs	r3, #0
 1403 0434 87F88639 		strb	r3, [r7, #2438]
 1404 0438 21E0     		b	.L81
 1405              	.L82:
 419:..\src/command_processing.c ****                         packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(&aux
 1406              		.loc 1 419 0 discriminator 3
 1407 043a 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 1408 043e 3222     		movs	r2, #50
 1409 0440 02FB03F3 		mul	r3, r2, r3
 1410 0444 1A1D     		adds	r2, r3, #4
 1411 0446 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 1412 044a 97F88319 		ldrb	r1, [r7, #2435]	@ zero_extendqisi2
 1413 044e 01FB03F3 		mul	r3, r1, r3
 1414 0452 1A44     		add	r2, r2, r3
 1415 0454 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 1416 0458 1A44     		add	r2, r2, r3
 1417 045a 97F88639 		ldrb	r3, [r7, #2438]	@ zero_extendqisi2
 1418 045e D31A     		subs	r3, r2, r3
 1419 0460 013B     		subs	r3, r3, #1
 1420 0462 97F88629 		ldrb	r2, [r7, #2438]	@ zero_extendqisi2
 1421 0466 07F5CC71 		add	r1, r7, #408
 1422 046a 0A44     		add	r2, r2, r1
 1423 046c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1424 046e 07F5EA72 		add	r2, r7, #468
 1425 0472 D154     		strb	r1, [r2, r3]
 418:..\src/command_processing.c ****                     for(j = 0; j < sod; j++) {
 1426              		.loc 1 418 0 discriminator 3
 1427 0474 97F88639 		ldrb	r3, [r7, #2438]	@ zero_extendqisi2
 1428 0478 0133     		adds	r3, r3, #1
 1429 047a 87F88639 		strb	r3, [r7, #2438]
 1430              	.L81:
 418:..\src/command_processing.c ****                     for(j = 0; j < sod; j++) {
 1431              		.loc 1 418 0 is_stmt 0 discriminator 1
 1432 047e 97F88629 		ldrb	r2, [r7, #2438]	@ zero_extendqisi2
 1433 0482 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 1434 0486 9A42     		cmp	r2, r3
 1435 0488 D7D3     		bcc	.L82
 415:..\src/command_processing.c ****                     m_tmp = m_addr + i*sod;
 1436              		.loc 1 415 0 is_stmt 1 discriminator 2
 1437 048a 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 1438 048e 0133     		adds	r3, r3, #1
 1439 0490 87F88739 		strb	r3, [r7, #2439]
 1440              	.L80:
 415:..\src/command_processing.c ****                     m_tmp = m_addr + i*sod;
 1441              		.loc 1 415 0 is_stmt 0 discriminator 1
 1442 0494 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 1443 0498 07F5A872 		add	r2, r7, #336
 1444 049c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1445 049e 97F88729 		ldrb	r2, [r7, #2439]	@ zero_extendqisi2
 1446 04a2 9A42     		cmp	r2, r3
 1447 04a4 B3D3     		bcc	.L83
 420:..\src/command_processing.c ****                     }
 421:..\src/command_processing.c ****                     //*((uint16*)(packet_data + (4 + PARAM_BYTE_SLOT*idx) + i*sod)) = *((uint16*)m_
 422:..\src/command_processing.c ****                 }
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 51


 423:..\src/command_processing.c ****                 break;
 1448              		.loc 1 423 0 is_stmt 1
 1449 04a6 00F044BC 		b	.L59
 1450              	.L65:
 424:..\src/command_processing.c ****             case TYPE_INT32: 
 425:..\src/command_processing.c ****                 for (i=0; i<NUM_ITEMS[idx]; i++){
 1451              		.loc 1 425 0
 1452 04aa 0023     		movs	r3, #0
 1453 04ac 87F88739 		strb	r3, [r7, #2439]
 1454 04b0 DDE0     		b	.L84
 1455              	.L97:
 426:..\src/command_processing.c ****                     switch (idx){
 1456              		.loc 1 426 0
 1457 04b2 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 1458 04b6 0A2B     		cmp	r3, #10
 1459 04b8 02D0     		beq	.L86
 1460 04ba 152B     		cmp	r3, #21
 1461 04bc 62D0     		beq	.L87
 1462 04be 92E0     		b	.L180
 1463              	.L86:
 427:..\src/command_processing.c ****                         case 10:    // POSITION LIMITS (param 11)
 428:..\src/command_processing.c ****                             aux_int32 = (c_mem.pos_lim_inf >> c_mem.res[0]);
 1464              		.loc 1 428 0
 1465 04c0 C44B     		ldr	r3, .L186
 1466 04c2 9B6D     		ldr	r3, [r3, #88]
 1467 04c4 C34A     		ldr	r2, .L186
 1468 04c6 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 1469 04ca 43FA02F2 		asr	r2, r3, r2
 1470 04ce 07F5CA73 		add	r3, r7, #404
 1471 04d2 1A60     		str	r2, [r3]
 429:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 1472              		.loc 1 429 0
 1473 04d4 0023     		movs	r3, #0
 1474 04d6 87F88639 		strb	r3, [r7, #2438]
 1475 04da 1AE0     		b	.L88
 1476              	.L89:
 430:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux
 1477              		.loc 1 430 0 discriminator 3
 1478 04dc 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 1479 04e0 3222     		movs	r2, #50
 1480 04e2 02FB03F3 		mul	r3, r2, r3
 1481 04e6 1A1D     		adds	r2, r3, #4
 1482 04e8 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 1483 04ec 1A44     		add	r2, r2, r3
 1484 04ee 97F88639 		ldrb	r3, [r7, #2438]	@ zero_extendqisi2
 1485 04f2 D31A     		subs	r3, r2, r3
 1486 04f4 013B     		subs	r3, r3, #1
 1487 04f6 97F88629 		ldrb	r2, [r7, #2438]	@ zero_extendqisi2
 1488 04fa 07F5CA71 		add	r1, r7, #404
 1489 04fe 0A44     		add	r2, r2, r1
 1490 0500 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1491 0502 07F5EA72 		add	r2, r7, #468
 1492 0506 D154     		strb	r1, [r2, r3]
 429:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 1493              		.loc 1 429 0 discriminator 3
 1494 0508 97F88639 		ldrb	r3, [r7, #2438]	@ zero_extendqisi2
 1495 050c 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 52


 1496 050e 87F88639 		strb	r3, [r7, #2438]
 1497              	.L88:
 429:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 1498              		.loc 1 429 0 is_stmt 0 discriminator 1
 1499 0512 97F88629 		ldrb	r2, [r7, #2438]	@ zero_extendqisi2
 1500 0516 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 1501 051a 9A42     		cmp	r2, r3
 1502 051c DED3     		bcc	.L89
 431:..\src/command_processing.c ****                             }
 432:..\src/command_processing.c ****                             aux_int32 = (c_mem.pos_lim_sup >> c_mem.res[0]);
 1503              		.loc 1 432 0 is_stmt 1
 1504 051e AD4B     		ldr	r3, .L186
 1505 0520 DB6D     		ldr	r3, [r3, #92]
 1506 0522 AC4A     		ldr	r2, .L186
 1507 0524 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 1508 0528 43FA02F2 		asr	r2, r3, r2
 1509 052c 07F5CA73 		add	r3, r7, #404
 1510 0530 1A60     		str	r2, [r3]
 433:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 1511              		.loc 1 433 0
 1512 0532 0023     		movs	r3, #0
 1513 0534 87F88639 		strb	r3, [r7, #2438]
 1514 0538 1DE0     		b	.L90
 1515              	.L91:
 434:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*
 1516              		.loc 1 434 0 discriminator 3
 1517 053a 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 1518 053e 3222     		movs	r2, #50
 1519 0540 02FB03F3 		mul	r3, r2, r3
 1520 0544 1A1D     		adds	r2, r3, #4
 1521 0546 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 1522 054a 1A44     		add	r2, r2, r3
 1523 054c 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 1524 0550 1A44     		add	r2, r2, r3
 1525 0552 97F88639 		ldrb	r3, [r7, #2438]	@ zero_extendqisi2
 1526 0556 D31A     		subs	r3, r2, r3
 1527 0558 013B     		subs	r3, r3, #1
 1528 055a 97F88629 		ldrb	r2, [r7, #2438]	@ zero_extendqisi2
 1529 055e 07F5CA71 		add	r1, r7, #404
 1530 0562 0A44     		add	r2, r2, r1
 1531 0564 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1532 0566 07F5EA72 		add	r2, r7, #468
 1533 056a D154     		strb	r1, [r2, r3]
 433:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 1534              		.loc 1 433 0 discriminator 3
 1535 056c 97F88639 		ldrb	r3, [r7, #2438]	@ zero_extendqisi2
 1536 0570 0133     		adds	r3, r3, #1
 1537 0572 87F88639 		strb	r3, [r7, #2438]
 1538              	.L90:
 433:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 1539              		.loc 1 433 0 is_stmt 0 discriminator 1
 1540 0576 97F88629 		ldrb	r2, [r7, #2438]	@ zero_extendqisi2
 1541 057a 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 1542 057e 9A42     		cmp	r2, r3
 1543 0580 DBD3     		bcc	.L91
 435:..\src/command_processing.c ****                             }
 436:..\src/command_processing.c ****                             //*((int32 *)( packet_data + (4 + PARAM_BYTE_SLOT*idx))) = (c_mem.pos_l
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 53


 437:..\src/command_processing.c ****                             //*((int32 *)( packet_data + (4 + PARAM_BYTE_SLOT*idx) + sod)) = (c_mem
 438:..\src/command_processing.c ****                             break;
 1544              		.loc 1 438 0 is_stmt 1
 1545 0582 6FE0     		b	.L92
 1546              	.L87:
 439:..\src/command_processing.c ****                         case 21:    // REST POSITION (param 22)
 440:..\src/command_processing.c ****                             aux_int32 = (c_mem.rest_pos >> c_mem.res[0]);
 1547              		.loc 1 440 0
 1548 0584 934B     		ldr	r3, .L186
 1549 0586 D3F89830 		ldr	r3, [r3, #152]
 1550 058a 924A     		ldr	r2, .L186
 1551 058c 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 1552 0590 43FA02F2 		asr	r2, r3, r2
 1553 0594 07F5CA73 		add	r3, r7, #404
 1554 0598 1A60     		str	r2, [r3]
 441:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 1555              		.loc 1 441 0
 1556 059a 0023     		movs	r3, #0
 1557 059c 87F88639 		strb	r3, [r7, #2438]
 1558 05a0 1AE0     		b	.L93
 1559              	.L94:
 442:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux
 1560              		.loc 1 442 0 discriminator 3
 1561 05a2 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 1562 05a6 3222     		movs	r2, #50
 1563 05a8 02FB03F3 		mul	r3, r2, r3
 1564 05ac 1A1D     		adds	r2, r3, #4
 1565 05ae 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 1566 05b2 1A44     		add	r2, r2, r3
 1567 05b4 97F88639 		ldrb	r3, [r7, #2438]	@ zero_extendqisi2
 1568 05b8 D31A     		subs	r3, r2, r3
 1569 05ba 013B     		subs	r3, r3, #1
 1570 05bc 97F88629 		ldrb	r2, [r7, #2438]	@ zero_extendqisi2
 1571 05c0 07F5CA71 		add	r1, r7, #404
 1572 05c4 0A44     		add	r2, r2, r1
 1573 05c6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1574 05c8 07F5EA72 		add	r2, r7, #468
 1575 05cc D154     		strb	r1, [r2, r3]
 441:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 1576              		.loc 1 441 0 discriminator 3
 1577 05ce 97F88639 		ldrb	r3, [r7, #2438]	@ zero_extendqisi2
 1578 05d2 0133     		adds	r3, r3, #1
 1579 05d4 87F88639 		strb	r3, [r7, #2438]
 1580              	.L93:
 441:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 1581              		.loc 1 441 0 is_stmt 0 discriminator 1
 1582 05d8 97F88629 		ldrb	r2, [r7, #2438]	@ zero_extendqisi2
 1583 05dc 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 1584 05e0 9A42     		cmp	r2, r3
 1585 05e2 DED3     		bcc	.L94
 443:..\src/command_processing.c ****                             }
 444:..\src/command_processing.c ****                             //*((int32 *)( packet_data + (4 + PARAM_BYTE_SLOT*idx))) = (c_mem.rest_
 445:..\src/command_processing.c ****                             break;
 1586              		.loc 1 445 0 is_stmt 1
 1587 05e4 3EE0     		b	.L92
 1588              	.L180:
 446:..\src/command_processing.c ****                         default:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 54


 447:..\src/command_processing.c ****                             m_tmp = m_addr + i*sod;
 1589              		.loc 1 447 0
 1590 05e6 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 1591 05ea 97F88329 		ldrb	r2, [r7, #2435]	@ zero_extendqisi2
 1592 05ee 02FB03F3 		mul	r3, r2, r3
 1593 05f2 1A46     		mov	r2, r3
 1594 05f4 D7F87C39 		ldr	r3, [r7, #2428]
 1595 05f8 1344     		add	r3, r3, r2
 1596 05fa C7F87439 		str	r3, [r7, #2420]
 448:..\src/command_processing.c ****                             aux_int32 = *((int32*)m_tmp);
 1597              		.loc 1 448 0
 1598 05fe D7F87439 		ldr	r3, [r7, #2420]
 1599 0602 1A68     		ldr	r2, [r3]
 1600 0604 07F5CA73 		add	r3, r7, #404
 1601 0608 1A60     		str	r2, [r3]
 449:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 1602              		.loc 1 449 0
 1603 060a 0023     		movs	r3, #0
 1604 060c 87F88639 		strb	r3, [r7, #2438]
 1605 0610 21E0     		b	.L95
 1606              	.L96:
 450:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((cha
 1607              		.loc 1 450 0 discriminator 3
 1608 0612 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 1609 0616 3222     		movs	r2, #50
 1610 0618 02FB03F3 		mul	r3, r2, r3
 1611 061c 1A1D     		adds	r2, r3, #4
 1612 061e 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 1613 0622 97F88319 		ldrb	r1, [r7, #2435]	@ zero_extendqisi2
 1614 0626 01FB03F3 		mul	r3, r1, r3
 1615 062a 1A44     		add	r2, r2, r3
 1616 062c 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 1617 0630 1A44     		add	r2, r2, r3
 1618 0632 97F88639 		ldrb	r3, [r7, #2438]	@ zero_extendqisi2
 1619 0636 D31A     		subs	r3, r2, r3
 1620 0638 013B     		subs	r3, r3, #1
 1621 063a 97F88629 		ldrb	r2, [r7, #2438]	@ zero_extendqisi2
 1622 063e 07F5CA71 		add	r1, r7, #404
 1623 0642 0A44     		add	r2, r2, r1
 1624 0644 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1625 0646 07F5EA72 		add	r2, r7, #468
 1626 064a D154     		strb	r1, [r2, r3]
 449:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 1627              		.loc 1 449 0 discriminator 3
 1628 064c 97F88639 		ldrb	r3, [r7, #2438]	@ zero_extendqisi2
 1629 0650 0133     		adds	r3, r3, #1
 1630 0652 87F88639 		strb	r3, [r7, #2438]
 1631              	.L95:
 449:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 1632              		.loc 1 449 0 is_stmt 0 discriminator 1
 1633 0656 97F88629 		ldrb	r2, [r7, #2438]	@ zero_extendqisi2
 1634 065a 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 1635 065e 9A42     		cmp	r2, r3
 1636 0660 D7D3     		bcc	.L96
 451:..\src/command_processing.c ****                             }
 452:..\src/command_processing.c ****                             //*((int32*)(packet_data + (4 + PARAM_BYTE_SLOT*idx) + i*sod)) = *((int
 453:..\src/command_processing.c ****                             break;
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 55


 1637              		.loc 1 453 0 is_stmt 1
 1638 0662 00BF     		nop
 1639              	.L92:
 425:..\src/command_processing.c ****                     switch (idx){
 1640              		.loc 1 425 0 discriminator 2
 1641 0664 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 1642 0668 0133     		adds	r3, r3, #1
 1643 066a 87F88739 		strb	r3, [r7, #2439]
 1644              	.L84:
 425:..\src/command_processing.c ****                     switch (idx){
 1645              		.loc 1 425 0 is_stmt 0 discriminator 1
 1646 066e 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 1647 0672 07F5A872 		add	r2, r7, #336
 1648 0676 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1649 0678 97F88729 		ldrb	r2, [r7, #2439]	@ zero_extendqisi2
 1650 067c 9A42     		cmp	r2, r3
 1651 067e FFF418AF 		bcc	.L97
 454:..\src/command_processing.c ****                     }
 455:..\src/command_processing.c ****                 }
 456:..\src/command_processing.c ****                 break;
 1652              		.loc 1 456 0 is_stmt 1
 1653 0682 56E3     		b	.L59
 1654              	.L66:
 457:..\src/command_processing.c ****             case TYPE_UINT32: 
 458:..\src/command_processing.c ****                 for (i=0; i<NUM_ITEMS[idx]; i++){
 1655              		.loc 1 458 0
 1656 0684 0023     		movs	r3, #0
 1657 0686 87F88739 		strb	r3, [r7, #2439]
 1658 068a 42E0     		b	.L98
 1659              	.L101:
 459:..\src/command_processing.c ****                     m_tmp = m_addr + i*sod;
 1660              		.loc 1 459 0
 1661 068c 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 1662 0690 97F88329 		ldrb	r2, [r7, #2435]	@ zero_extendqisi2
 1663 0694 02FB03F3 		mul	r3, r2, r3
 1664 0698 1A46     		mov	r2, r3
 1665 069a D7F87C39 		ldr	r3, [r7, #2428]
 1666 069e 1344     		add	r3, r3, r2
 1667 06a0 C7F87439 		str	r3, [r7, #2420]
 460:..\src/command_processing.c ****                     aux_uint32 = *((uint32*)m_tmp);
 1668              		.loc 1 460 0
 1669 06a4 D7F87439 		ldr	r3, [r7, #2420]
 1670 06a8 1A68     		ldr	r2, [r3]
 1671 06aa 07F5C873 		add	r3, r7, #400
 1672 06ae 1A60     		str	r2, [r3]
 461:..\src/command_processing.c ****                     for(j = 0; j < sod; j++) {
 1673              		.loc 1 461 0
 1674 06b0 0023     		movs	r3, #0
 1675 06b2 87F88639 		strb	r3, [r7, #2438]
 1676 06b6 21E0     		b	.L99
 1677              	.L100:
 462:..\src/command_processing.c ****                         packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(&aux
 1678              		.loc 1 462 0 discriminator 3
 1679 06b8 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 1680 06bc 3222     		movs	r2, #50
 1681 06be 02FB03F3 		mul	r3, r2, r3
 1682 06c2 1A1D     		adds	r2, r3, #4
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 56


 1683 06c4 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 1684 06c8 97F88319 		ldrb	r1, [r7, #2435]	@ zero_extendqisi2
 1685 06cc 01FB03F3 		mul	r3, r1, r3
 1686 06d0 1A44     		add	r2, r2, r3
 1687 06d2 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 1688 06d6 1A44     		add	r2, r2, r3
 1689 06d8 97F88639 		ldrb	r3, [r7, #2438]	@ zero_extendqisi2
 1690 06dc D31A     		subs	r3, r2, r3
 1691 06de 013B     		subs	r3, r3, #1
 1692 06e0 97F88629 		ldrb	r2, [r7, #2438]	@ zero_extendqisi2
 1693 06e4 07F5C871 		add	r1, r7, #400
 1694 06e8 0A44     		add	r2, r2, r1
 1695 06ea 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1696 06ec 07F5EA72 		add	r2, r7, #468
 1697 06f0 D154     		strb	r1, [r2, r3]
 461:..\src/command_processing.c ****                     for(j = 0; j < sod; j++) {
 1698              		.loc 1 461 0 discriminator 3
 1699 06f2 97F88639 		ldrb	r3, [r7, #2438]	@ zero_extendqisi2
 1700 06f6 0133     		adds	r3, r3, #1
 1701 06f8 87F88639 		strb	r3, [r7, #2438]
 1702              	.L99:
 461:..\src/command_processing.c ****                     for(j = 0; j < sod; j++) {
 1703              		.loc 1 461 0 is_stmt 0 discriminator 1
 1704 06fc 97F88629 		ldrb	r2, [r7, #2438]	@ zero_extendqisi2
 1705 0700 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 1706 0704 9A42     		cmp	r2, r3
 1707 0706 D7D3     		bcc	.L100
 458:..\src/command_processing.c ****                     m_tmp = m_addr + i*sod;
 1708              		.loc 1 458 0 is_stmt 1 discriminator 2
 1709 0708 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 1710 070c 0133     		adds	r3, r3, #1
 1711 070e 87F88739 		strb	r3, [r7, #2439]
 1712              	.L98:
 458:..\src/command_processing.c ****                     m_tmp = m_addr + i*sod;
 1713              		.loc 1 458 0 is_stmt 0 discriminator 1
 1714 0712 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 1715 0716 07F5A872 		add	r2, r7, #336
 1716 071a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1717 071c 97F88729 		ldrb	r2, [r7, #2439]	@ zero_extendqisi2
 1718 0720 9A42     		cmp	r2, r3
 1719 0722 B3D3     		bcc	.L101
 463:..\src/command_processing.c ****                     }
 464:..\src/command_processing.c ****                     //*((uint32*)(packet_data + (4 + PARAM_BYTE_SLOT*idx) + i*sod)) = *((uint32*)m_
 465:..\src/command_processing.c ****                 }
 466:..\src/command_processing.c ****                 break;
 1720              		.loc 1 466 0 is_stmt 1
 1721 0724 05E3     		b	.L59
 1722              	.L67:
 467:..\src/command_processing.c ****                 
 468:..\src/command_processing.c ****             case TYPE_FLOAT:
 469:..\src/command_processing.c ****                 switch (idx) {
 1723              		.loc 1 469 0
 1724 0726 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 1725 072a 012B     		cmp	r3, #1
 1726 072c 03D0     		beq	.L103
 1727 072e 022B     		cmp	r3, #2
 1728 0730 00F05781 		beq	.L104
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 57


 1729 0734 ABE2     		b	.L181
 1730              	.L103:
 470:..\src/command_processing.c ****                 
 471:..\src/command_processing.c ****                 case 1:     // POSITION PID (param 2)
 472:..\src/command_processing.c ****                     if(c_mem.control_mode != CURR_AND_POS_CONTROL) {
 1731              		.loc 1 472 0
 1732 0736 274B     		ldr	r3, .L186
 1733 0738 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 1734 073c 032B     		cmp	r3, #3
 1735 073e 00F0A980 		beq	.L105
 473:..\src/command_processing.c ****                         aux_float = (float) c_mem.k_p / 65536;
 1736              		.loc 1 473 0
 1737 0742 244B     		ldr	r3, .L186
 1738 0744 5B68     		ldr	r3, [r3, #4]
 1739 0746 1846     		mov	r0, r3
 1740 0748 FFF7FEFF 		bl	__aeabi_i2f
 1741 074c 0346     		mov	r3, r0
 1742 074e 4FF08F41 		mov	r1, #1199570944
 1743 0752 1846     		mov	r0, r3
 1744 0754 FFF7FEFF 		bl	__aeabi_fdiv
 1745 0758 0346     		mov	r3, r0
 1746 075a 1A46     		mov	r2, r3
 1747 075c 07F5CE73 		add	r3, r7, #412
 1748 0760 1A60     		str	r2, [r3]	@ float
 474:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 1749              		.loc 1 474 0
 1750 0762 0023     		movs	r3, #0
 1751 0764 87F88739 		strb	r3, [r7, #2439]
 1752 0768 1AE0     		b	.L106
 1753              	.L107:
 475:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux_flo
 1754              		.loc 1 475 0 discriminator 3
 1755 076a 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 1756 076e 3222     		movs	r2, #50
 1757 0770 02FB03F3 		mul	r3, r2, r3
 1758 0774 1A1D     		adds	r2, r3, #4
 1759 0776 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 1760 077a 1A44     		add	r2, r2, r3
 1761 077c 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 1762 0780 D31A     		subs	r3, r2, r3
 1763 0782 013B     		subs	r3, r3, #1
 1764 0784 97F88729 		ldrb	r2, [r7, #2439]	@ zero_extendqisi2
 1765 0788 07F5CE71 		add	r1, r7, #412
 1766 078c 0A44     		add	r2, r2, r1
 1767 078e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1768 0790 07F5EA72 		add	r2, r7, #468
 1769 0794 D154     		strb	r1, [r2, r3]
 474:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 1770              		.loc 1 474 0 discriminator 3
 1771 0796 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 1772 079a 0133     		adds	r3, r3, #1
 1773 079c 87F88739 		strb	r3, [r7, #2439]
 1774              	.L106:
 474:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 1775              		.loc 1 474 0 is_stmt 0 discriminator 1
 1776 07a0 97F88729 		ldrb	r2, [r7, #2439]	@ zero_extendqisi2
 1777 07a4 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 58


 1778 07a8 9A42     		cmp	r2, r3
 1779 07aa DED3     		bcc	.L107
 476:..\src/command_processing.c ****                         }
 477:..\src/command_processing.c ****                         aux_float = (float) c_mem.k_i / 65536;
 1780              		.loc 1 477 0 is_stmt 1
 1781 07ac 094B     		ldr	r3, .L186
 1782 07ae 9B68     		ldr	r3, [r3, #8]
 1783 07b0 1846     		mov	r0, r3
 1784 07b2 FFF7FEFF 		bl	__aeabi_i2f
 1785 07b6 0346     		mov	r3, r0
 1786 07b8 4FF08F41 		mov	r1, #1199570944
 1787 07bc 1846     		mov	r0, r3
 1788 07be FFF7FEFF 		bl	__aeabi_fdiv
 1789 07c2 0346     		mov	r3, r0
 1790 07c4 1A46     		mov	r2, r3
 1791 07c6 07F5CE73 		add	r3, r7, #412
 1792 07ca 1A60     		str	r2, [r3]	@ float
 478:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 1793              		.loc 1 478 0
 1794 07cc 0023     		movs	r3, #0
 1795 07ce 87F88739 		strb	r3, [r7, #2439]
 1796 07d2 1FE0     		b	.L108
 1797              	.L187:
 1798              		.align	2
 1799              	.L186:
 1800 07d4 00000000 		.word	c_mem
 1801              	.L109:
 479:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*)(&a
 1802              		.loc 1 479 0 discriminator 3
 1803 07d8 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 1804 07dc 3222     		movs	r2, #50
 1805 07de 02FB03F3 		mul	r3, r2, r3
 1806 07e2 1A1D     		adds	r2, r3, #4
 1807 07e4 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 1808 07e8 1A44     		add	r2, r2, r3
 1809 07ea 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 1810 07ee 1A44     		add	r2, r2, r3
 1811 07f0 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 1812 07f4 D31A     		subs	r3, r2, r3
 1813 07f6 013B     		subs	r3, r3, #1
 1814 07f8 97F88729 		ldrb	r2, [r7, #2439]	@ zero_extendqisi2
 1815 07fc 07F5CE71 		add	r1, r7, #412
 1816 0800 0A44     		add	r2, r2, r1
 1817 0802 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1818 0804 07F5EA72 		add	r2, r7, #468
 1819 0808 D154     		strb	r1, [r2, r3]
 478:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 1820              		.loc 1 478 0 discriminator 3
 1821 080a 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 1822 080e 0133     		adds	r3, r3, #1
 1823 0810 87F88739 		strb	r3, [r7, #2439]
 1824              	.L108:
 478:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 1825              		.loc 1 478 0 is_stmt 0 discriminator 1
 1826 0814 97F88729 		ldrb	r2, [r7, #2439]	@ zero_extendqisi2
 1827 0818 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 1828 081c 9A42     		cmp	r2, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 59


 1829 081e DBD3     		bcc	.L109
 480:..\src/command_processing.c ****                         }
 481:..\src/command_processing.c ****                         aux_float = (float) c_mem.k_d / 65536;
 1830              		.loc 1 481 0 is_stmt 1
 1831 0820 D04B     		ldr	r3, .L188
 1832 0822 DB68     		ldr	r3, [r3, #12]
 1833 0824 1846     		mov	r0, r3
 1834 0826 FFF7FEFF 		bl	__aeabi_i2f
 1835 082a 0346     		mov	r3, r0
 1836 082c 4FF08F41 		mov	r1, #1199570944
 1837 0830 1846     		mov	r0, r3
 1838 0832 FFF7FEFF 		bl	__aeabi_fdiv
 1839 0836 0346     		mov	r3, r0
 1840 0838 1A46     		mov	r2, r3
 1841 083a 07F5CE73 		add	r3, r7, #412
 1842 083e 1A60     		str	r2, [r3]	@ float
 482:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 1843              		.loc 1 482 0
 1844 0840 0023     		movs	r3, #0
 1845 0842 87F88739 		strb	r3, [r7, #2439]
 1846 0846 1EE0     		b	.L110
 1847              	.L111:
 483:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((char*)(
 1848              		.loc 1 483 0 discriminator 3
 1849 0848 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 1850 084c 3222     		movs	r2, #50
 1851 084e 02FB03F3 		mul	r3, r2, r3
 1852 0852 1A1D     		adds	r2, r3, #4
 1853 0854 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 1854 0858 5B00     		lsls	r3, r3, #1
 1855 085a 1A44     		add	r2, r2, r3
 1856 085c 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 1857 0860 1A44     		add	r2, r2, r3
 1858 0862 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 1859 0866 D31A     		subs	r3, r2, r3
 1860 0868 013B     		subs	r3, r3, #1
 1861 086a 97F88729 		ldrb	r2, [r7, #2439]	@ zero_extendqisi2
 1862 086e 07F5CE71 		add	r1, r7, #412
 1863 0872 0A44     		add	r2, r2, r1
 1864 0874 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1865 0876 07F5EA72 		add	r2, r7, #468
 1866 087a D154     		strb	r1, [r2, r3]
 482:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 1867              		.loc 1 482 0 discriminator 3
 1868 087c 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 1869 0880 0133     		adds	r3, r3, #1
 1870 0882 87F88739 		strb	r3, [r7, #2439]
 1871              	.L110:
 482:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 1872              		.loc 1 482 0 is_stmt 0 discriminator 1
 1873 0886 97F88729 		ldrb	r2, [r7, #2439]	@ zero_extendqisi2
 1874 088a 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 1875 088e 9A42     		cmp	r2, r3
 1876 0890 DAD3     		bcc	.L111
 484:..\src/command_processing.c ****                         }
 485:..\src/command_processing.c ****                         //*((float *) (packet_data + (4 + PARAM_BYTE_SLOT*idx))) = aux_float;
 486:..\src/command_processing.c ****                         //*((float *) (packet_data + (4 + PARAM_BYTE_SLOT*idx) + sod)) = (float) c_
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 60


 487:..\src/command_processing.c ****                         //*((float *) (packet_data + (4 + PARAM_BYTE_SLOT*idx) + 2*sod)) = (float) 
 488:..\src/command_processing.c ****                     
 489:..\src/command_processing.c ****                     }
 490:..\src/command_processing.c ****                     else {
 491:..\src/command_processing.c ****                         aux_float = (float) c_mem.k_p_dl / 65536;
 492:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 493:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux_flo
 494:..\src/command_processing.c ****                         }
 495:..\src/command_processing.c ****                         aux_float = (float) c_mem.k_i_dl / 65536;
 496:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 497:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*)(&a
 498:..\src/command_processing.c ****                         }
 499:..\src/command_processing.c ****                         aux_float = (float) c_mem.k_d_dl / 65536;
 500:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 501:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((char*)(
 502:..\src/command_processing.c ****                         }
 503:..\src/command_processing.c ****                         //*((float *) (packet_data + (4 + PARAM_BYTE_SLOT*idx))) = (float) c_mem.k_
 504:..\src/command_processing.c ****                         //*((float *) (packet_data + (4 + PARAM_BYTE_SLOT*idx) + sod)) = (float) c_
 505:..\src/command_processing.c ****                         //*((float *) (packet_data + (4 + PARAM_BYTE_SLOT*idx) + 2*sod)) = (float) 
 506:..\src/command_processing.c ****                     }
 507:..\src/command_processing.c ****                     
 508:..\src/command_processing.c ****                     break;
 1877              		.loc 1 508 0 is_stmt 1
 1878 0892 4DE2     		b	.L119
 1879              	.L105:
 491:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 1880              		.loc 1 491 0
 1881 0894 B34B     		ldr	r3, .L188
 1882 0896 DB69     		ldr	r3, [r3, #28]
 1883 0898 1846     		mov	r0, r3
 1884 089a FFF7FEFF 		bl	__aeabi_i2f
 1885 089e 0346     		mov	r3, r0
 1886 08a0 4FF08F41 		mov	r1, #1199570944
 1887 08a4 1846     		mov	r0, r3
 1888 08a6 FFF7FEFF 		bl	__aeabi_fdiv
 1889 08aa 0346     		mov	r3, r0
 1890 08ac 1A46     		mov	r2, r3
 1891 08ae 07F5CE73 		add	r3, r7, #412
 1892 08b2 1A60     		str	r2, [r3]	@ float
 492:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux_flo
 1893              		.loc 1 492 0
 1894 08b4 0023     		movs	r3, #0
 1895 08b6 87F88739 		strb	r3, [r7, #2439]
 1896 08ba 1AE0     		b	.L113
 1897              	.L114:
 493:..\src/command_processing.c ****                         }
 1898              		.loc 1 493 0 discriminator 3
 1899 08bc 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 1900 08c0 3222     		movs	r2, #50
 1901 08c2 02FB03F3 		mul	r3, r2, r3
 1902 08c6 1A1D     		adds	r2, r3, #4
 1903 08c8 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 1904 08cc 1A44     		add	r2, r2, r3
 1905 08ce 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 1906 08d2 D31A     		subs	r3, r2, r3
 1907 08d4 013B     		subs	r3, r3, #1
 1908 08d6 97F88729 		ldrb	r2, [r7, #2439]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 61


 1909 08da 07F5CE71 		add	r1, r7, #412
 1910 08de 0A44     		add	r2, r2, r1
 1911 08e0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1912 08e2 07F5EA72 		add	r2, r7, #468
 1913 08e6 D154     		strb	r1, [r2, r3]
 492:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux_flo
 1914              		.loc 1 492 0 discriminator 3
 1915 08e8 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 1916 08ec 0133     		adds	r3, r3, #1
 1917 08ee 87F88739 		strb	r3, [r7, #2439]
 1918              	.L113:
 492:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux_flo
 1919              		.loc 1 492 0 is_stmt 0 discriminator 1
 1920 08f2 97F88729 		ldrb	r2, [r7, #2439]	@ zero_extendqisi2
 1921 08f6 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 1922 08fa 9A42     		cmp	r2, r3
 1923 08fc DED3     		bcc	.L114
 495:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 1924              		.loc 1 495 0 is_stmt 1
 1925 08fe 994B     		ldr	r3, .L188
 1926 0900 1B6A     		ldr	r3, [r3, #32]
 1927 0902 1846     		mov	r0, r3
 1928 0904 FFF7FEFF 		bl	__aeabi_i2f
 1929 0908 0346     		mov	r3, r0
 1930 090a 4FF08F41 		mov	r1, #1199570944
 1931 090e 1846     		mov	r0, r3
 1932 0910 FFF7FEFF 		bl	__aeabi_fdiv
 1933 0914 0346     		mov	r3, r0
 1934 0916 1A46     		mov	r2, r3
 1935 0918 07F5CE73 		add	r3, r7, #412
 1936 091c 1A60     		str	r2, [r3]	@ float
 496:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*)(&a
 1937              		.loc 1 496 0
 1938 091e 0023     		movs	r3, #0
 1939 0920 87F88739 		strb	r3, [r7, #2439]
 1940 0924 1DE0     		b	.L115
 1941              	.L116:
 497:..\src/command_processing.c ****                         }
 1942              		.loc 1 497 0 discriminator 3
 1943 0926 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 1944 092a 3222     		movs	r2, #50
 1945 092c 02FB03F3 		mul	r3, r2, r3
 1946 0930 1A1D     		adds	r2, r3, #4
 1947 0932 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 1948 0936 1A44     		add	r2, r2, r3
 1949 0938 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 1950 093c 1A44     		add	r2, r2, r3
 1951 093e 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 1952 0942 D31A     		subs	r3, r2, r3
 1953 0944 013B     		subs	r3, r3, #1
 1954 0946 97F88729 		ldrb	r2, [r7, #2439]	@ zero_extendqisi2
 1955 094a 07F5CE71 		add	r1, r7, #412
 1956 094e 0A44     		add	r2, r2, r1
 1957 0950 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1958 0952 07F5EA72 		add	r2, r7, #468
 1959 0956 D154     		strb	r1, [r2, r3]
 496:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*)(&a
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 62


 1960              		.loc 1 496 0 discriminator 3
 1961 0958 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 1962 095c 0133     		adds	r3, r3, #1
 1963 095e 87F88739 		strb	r3, [r7, #2439]
 1964              	.L115:
 496:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*)(&a
 1965              		.loc 1 496 0 is_stmt 0 discriminator 1
 1966 0962 97F88729 		ldrb	r2, [r7, #2439]	@ zero_extendqisi2
 1967 0966 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 1968 096a 9A42     		cmp	r2, r3
 1969 096c DBD3     		bcc	.L116
 499:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 1970              		.loc 1 499 0 is_stmt 1
 1971 096e 7D4B     		ldr	r3, .L188
 1972 0970 5B6A     		ldr	r3, [r3, #36]
 1973 0972 1846     		mov	r0, r3
 1974 0974 FFF7FEFF 		bl	__aeabi_i2f
 1975 0978 0346     		mov	r3, r0
 1976 097a 4FF08F41 		mov	r1, #1199570944
 1977 097e 1846     		mov	r0, r3
 1978 0980 FFF7FEFF 		bl	__aeabi_fdiv
 1979 0984 0346     		mov	r3, r0
 1980 0986 1A46     		mov	r2, r3
 1981 0988 07F5CE73 		add	r3, r7, #412
 1982 098c 1A60     		str	r2, [r3]	@ float
 500:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((char*)(
 1983              		.loc 1 500 0
 1984 098e 0023     		movs	r3, #0
 1985 0990 87F88739 		strb	r3, [r7, #2439]
 1986 0994 1EE0     		b	.L117
 1987              	.L118:
 501:..\src/command_processing.c ****                         }
 1988              		.loc 1 501 0 discriminator 3
 1989 0996 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 1990 099a 3222     		movs	r2, #50
 1991 099c 02FB03F3 		mul	r3, r2, r3
 1992 09a0 1A1D     		adds	r2, r3, #4
 1993 09a2 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 1994 09a6 5B00     		lsls	r3, r3, #1
 1995 09a8 1A44     		add	r2, r2, r3
 1996 09aa 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 1997 09ae 1A44     		add	r2, r2, r3
 1998 09b0 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 1999 09b4 D31A     		subs	r3, r2, r3
 2000 09b6 013B     		subs	r3, r3, #1
 2001 09b8 97F88729 		ldrb	r2, [r7, #2439]	@ zero_extendqisi2
 2002 09bc 07F5CE71 		add	r1, r7, #412
 2003 09c0 0A44     		add	r2, r2, r1
 2004 09c2 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2005 09c4 07F5EA72 		add	r2, r7, #468
 2006 09c8 D154     		strb	r1, [r2, r3]
 500:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((char*)(
 2007              		.loc 1 500 0 discriminator 3
 2008 09ca 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 2009 09ce 0133     		adds	r3, r3, #1
 2010 09d0 87F88739 		strb	r3, [r7, #2439]
 2011              	.L117:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 63


 500:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((char*)(
 2012              		.loc 1 500 0 is_stmt 0 discriminator 1
 2013 09d4 97F88729 		ldrb	r2, [r7, #2439]	@ zero_extendqisi2
 2014 09d8 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 2015 09dc 9A42     		cmp	r2, r3
 2016 09de DAD3     		bcc	.L118
 2017              		.loc 1 508 0 is_stmt 1
 2018 09e0 A6E1     		b	.L119
 2019              	.L104:
 509:..\src/command_processing.c ****                 case 2:     // POSITION PID (param 3)
 510:..\src/command_processing.c ****                     if(c_mem.control_mode != CURR_AND_POS_CONTROL) {
 2020              		.loc 1 510 0
 2021 09e2 604B     		ldr	r3, .L188
 2022 09e4 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 2023 09e8 032B     		cmp	r3, #3
 2024 09ea 00F0A780 		beq	.L120
 511:..\src/command_processing.c ****                         aux_float = (float) c_mem.k_p_c / 65536;
 2025              		.loc 1 511 0
 2026 09ee 5D4B     		ldr	r3, .L188
 2027 09f0 1B69     		ldr	r3, [r3, #16]
 2028 09f2 1846     		mov	r0, r3
 2029 09f4 FFF7FEFF 		bl	__aeabi_i2f
 2030 09f8 0346     		mov	r3, r0
 2031 09fa 4FF08F41 		mov	r1, #1199570944
 2032 09fe 1846     		mov	r0, r3
 2033 0a00 FFF7FEFF 		bl	__aeabi_fdiv
 2034 0a04 0346     		mov	r3, r0
 2035 0a06 1A46     		mov	r2, r3
 2036 0a08 07F5CE73 		add	r3, r7, #412
 2037 0a0c 1A60     		str	r2, [r3]	@ float
 512:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2038              		.loc 1 512 0
 2039 0a0e 0023     		movs	r3, #0
 2040 0a10 87F88739 		strb	r3, [r7, #2439]
 2041 0a14 1AE0     		b	.L121
 2042              	.L122:
 513:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux_flo
 2043              		.loc 1 513 0 discriminator 3
 2044 0a16 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 2045 0a1a 3222     		movs	r2, #50
 2046 0a1c 02FB03F3 		mul	r3, r2, r3
 2047 0a20 1A1D     		adds	r2, r3, #4
 2048 0a22 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 2049 0a26 1A44     		add	r2, r2, r3
 2050 0a28 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 2051 0a2c D31A     		subs	r3, r2, r3
 2052 0a2e 013B     		subs	r3, r3, #1
 2053 0a30 97F88729 		ldrb	r2, [r7, #2439]	@ zero_extendqisi2
 2054 0a34 07F5CE71 		add	r1, r7, #412
 2055 0a38 0A44     		add	r2, r2, r1
 2056 0a3a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2057 0a3c 07F5EA72 		add	r2, r7, #468
 2058 0a40 D154     		strb	r1, [r2, r3]
 512:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2059              		.loc 1 512 0 discriminator 3
 2060 0a42 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 2061 0a46 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 64


 2062 0a48 87F88739 		strb	r3, [r7, #2439]
 2063              	.L121:
 512:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2064              		.loc 1 512 0 is_stmt 0 discriminator 1
 2065 0a4c 97F88729 		ldrb	r2, [r7, #2439]	@ zero_extendqisi2
 2066 0a50 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 2067 0a54 9A42     		cmp	r2, r3
 2068 0a56 DED3     		bcc	.L122
 514:..\src/command_processing.c ****                         }
 515:..\src/command_processing.c ****                         aux_float = (float) c_mem.k_i_c / 65536;
 2069              		.loc 1 515 0 is_stmt 1
 2070 0a58 424B     		ldr	r3, .L188
 2071 0a5a 5B69     		ldr	r3, [r3, #20]
 2072 0a5c 1846     		mov	r0, r3
 2073 0a5e FFF7FEFF 		bl	__aeabi_i2f
 2074 0a62 0346     		mov	r3, r0
 2075 0a64 4FF08F41 		mov	r1, #1199570944
 2076 0a68 1846     		mov	r0, r3
 2077 0a6a FFF7FEFF 		bl	__aeabi_fdiv
 2078 0a6e 0346     		mov	r3, r0
 2079 0a70 1A46     		mov	r2, r3
 2080 0a72 07F5CE73 		add	r3, r7, #412
 2081 0a76 1A60     		str	r2, [r3]	@ float
 516:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2082              		.loc 1 516 0
 2083 0a78 0023     		movs	r3, #0
 2084 0a7a 87F88739 		strb	r3, [r7, #2439]
 2085 0a7e 1DE0     		b	.L123
 2086              	.L124:
 517:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*)(&a
 2087              		.loc 1 517 0 discriminator 3
 2088 0a80 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 2089 0a84 3222     		movs	r2, #50
 2090 0a86 02FB03F3 		mul	r3, r2, r3
 2091 0a8a 1A1D     		adds	r2, r3, #4
 2092 0a8c 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 2093 0a90 1A44     		add	r2, r2, r3
 2094 0a92 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 2095 0a96 1A44     		add	r2, r2, r3
 2096 0a98 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 2097 0a9c D31A     		subs	r3, r2, r3
 2098 0a9e 013B     		subs	r3, r3, #1
 2099 0aa0 97F88729 		ldrb	r2, [r7, #2439]	@ zero_extendqisi2
 2100 0aa4 07F5CE71 		add	r1, r7, #412
 2101 0aa8 0A44     		add	r2, r2, r1
 2102 0aaa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2103 0aac 07F5EA72 		add	r2, r7, #468
 2104 0ab0 D154     		strb	r1, [r2, r3]
 516:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2105              		.loc 1 516 0 discriminator 3
 2106 0ab2 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 2107 0ab6 0133     		adds	r3, r3, #1
 2108 0ab8 87F88739 		strb	r3, [r7, #2439]
 2109              	.L123:
 516:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2110              		.loc 1 516 0 is_stmt 0 discriminator 1
 2111 0abc 97F88729 		ldrb	r2, [r7, #2439]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 65


 2112 0ac0 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 2113 0ac4 9A42     		cmp	r2, r3
 2114 0ac6 DBD3     		bcc	.L124
 518:..\src/command_processing.c ****                         }
 519:..\src/command_processing.c ****                         aux_float = (float) c_mem.k_d_c / 65536;
 2115              		.loc 1 519 0 is_stmt 1
 2116 0ac8 264B     		ldr	r3, .L188
 2117 0aca 9B69     		ldr	r3, [r3, #24]
 2118 0acc 1846     		mov	r0, r3
 2119 0ace FFF7FEFF 		bl	__aeabi_i2f
 2120 0ad2 0346     		mov	r3, r0
 2121 0ad4 4FF08F41 		mov	r1, #1199570944
 2122 0ad8 1846     		mov	r0, r3
 2123 0ada FFF7FEFF 		bl	__aeabi_fdiv
 2124 0ade 0346     		mov	r3, r0
 2125 0ae0 1A46     		mov	r2, r3
 2126 0ae2 07F5CE73 		add	r3, r7, #412
 2127 0ae6 1A60     		str	r2, [r3]	@ float
 520:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2128              		.loc 1 520 0
 2129 0ae8 0023     		movs	r3, #0
 2130 0aea 87F88739 		strb	r3, [r7, #2439]
 2131 0aee 1EE0     		b	.L125
 2132              	.L126:
 521:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((char*)(
 2133              		.loc 1 521 0 discriminator 3
 2134 0af0 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 2135 0af4 3222     		movs	r2, #50
 2136 0af6 02FB03F3 		mul	r3, r2, r3
 2137 0afa 1A1D     		adds	r2, r3, #4
 2138 0afc 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 2139 0b00 5B00     		lsls	r3, r3, #1
 2140 0b02 1A44     		add	r2, r2, r3
 2141 0b04 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 2142 0b08 1A44     		add	r2, r2, r3
 2143 0b0a 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 2144 0b0e D31A     		subs	r3, r2, r3
 2145 0b10 013B     		subs	r3, r3, #1
 2146 0b12 97F88729 		ldrb	r2, [r7, #2439]	@ zero_extendqisi2
 2147 0b16 07F5CE71 		add	r1, r7, #412
 2148 0b1a 0A44     		add	r2, r2, r1
 2149 0b1c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2150 0b1e 07F5EA72 		add	r2, r7, #468
 2151 0b22 D154     		strb	r1, [r2, r3]
 520:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2152              		.loc 1 520 0 discriminator 3
 2153 0b24 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 2154 0b28 0133     		adds	r3, r3, #1
 2155 0b2a 87F88739 		strb	r3, [r7, #2439]
 2156              	.L125:
 520:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2157              		.loc 1 520 0 is_stmt 0 discriminator 1
 2158 0b2e 97F88729 		ldrb	r2, [r7, #2439]	@ zero_extendqisi2
 2159 0b32 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 2160 0b36 9A42     		cmp	r2, r3
 2161 0b38 DAD3     		bcc	.L126
 522:..\src/command_processing.c ****                         }
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 66


 523:..\src/command_processing.c ****                         //*((float *) (packet_data + (4 + PARAM_BYTE_SLOT*idx))) = (float) c_mem.k_
 524:..\src/command_processing.c ****                         //*((float *) (packet_data + (4 + PARAM_BYTE_SLOT*idx) + sod)) = (float) c_
 525:..\src/command_processing.c ****                         //*((float *) (packet_data + (4 + PARAM_BYTE_SLOT*idx) + 2*sod)) = (float) 
 526:..\src/command_processing.c ****                     }
 527:..\src/command_processing.c ****                     else {
 528:..\src/command_processing.c ****                         aux_float = (float) c_mem.k_p_c_dl / 65536;
 529:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 530:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux_flo
 531:..\src/command_processing.c ****                         }
 532:..\src/command_processing.c ****                         aux_float = (float) c_mem.k_i_c_dl / 65536;
 533:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 534:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*)(&a
 535:..\src/command_processing.c ****                         }
 536:..\src/command_processing.c ****                         aux_float = (float) c_mem.k_d_c_dl / 65536;
 537:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 538:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((char*)(
 539:..\src/command_processing.c ****                         }
 540:..\src/command_processing.c ****                         //*((float *) (packet_data + (4 + PARAM_BYTE_SLOT*idx))) = (float) c_mem.k_
 541:..\src/command_processing.c ****                         //*((float *) (packet_data + (4 + PARAM_BYTE_SLOT*idx) + sod)) = (float) c_
 542:..\src/command_processing.c ****                         //*((float *) (packet_data + (4 + PARAM_BYTE_SLOT*idx) + 2*sod)) = (float) 
 543:..\src/command_processing.c ****                     }
 544:..\src/command_processing.c ****                     break;
 2162              		.loc 1 544 0 is_stmt 1
 2163 0b3a F9E0     		b	.L119
 2164              	.L120:
 528:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2165              		.loc 1 528 0
 2166 0b3c 094B     		ldr	r3, .L188
 2167 0b3e 9B6A     		ldr	r3, [r3, #40]
 2168 0b40 1846     		mov	r0, r3
 2169 0b42 FFF7FEFF 		bl	__aeabi_i2f
 2170 0b46 0346     		mov	r3, r0
 2171 0b48 4FF08F41 		mov	r1, #1199570944
 2172 0b4c 1846     		mov	r0, r3
 2173 0b4e FFF7FEFF 		bl	__aeabi_fdiv
 2174 0b52 0346     		mov	r3, r0
 2175 0b54 1A46     		mov	r2, r3
 2176 0b56 07F5CE73 		add	r3, r7, #412
 2177 0b5a 1A60     		str	r2, [r3]	@ float
 529:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux_flo
 2178              		.loc 1 529 0
 2179 0b5c 0023     		movs	r3, #0
 2180 0b5e 87F88739 		strb	r3, [r7, #2439]
 2181 0b62 1CE0     		b	.L128
 2182              	.L189:
 2183              		.align	2
 2184              	.L188:
 2185 0b64 00000000 		.word	c_mem
 2186              	.L129:
 530:..\src/command_processing.c ****                         }
 2187              		.loc 1 530 0 discriminator 3
 2188 0b68 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 2189 0b6c 3222     		movs	r2, #50
 2190 0b6e 02FB03F3 		mul	r3, r2, r3
 2191 0b72 1A1D     		adds	r2, r3, #4
 2192 0b74 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 2193 0b78 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 67


 2194 0b7a 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 2195 0b7e D31A     		subs	r3, r2, r3
 2196 0b80 013B     		subs	r3, r3, #1
 2197 0b82 97F88729 		ldrb	r2, [r7, #2439]	@ zero_extendqisi2
 2198 0b86 07F5CE71 		add	r1, r7, #412
 2199 0b8a 0A44     		add	r2, r2, r1
 2200 0b8c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2201 0b8e 07F5EA72 		add	r2, r7, #468
 2202 0b92 D154     		strb	r1, [r2, r3]
 529:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux_flo
 2203              		.loc 1 529 0 discriminator 3
 2204 0b94 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 2205 0b98 0133     		adds	r3, r3, #1
 2206 0b9a 87F88739 		strb	r3, [r7, #2439]
 2207              	.L128:
 529:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux_flo
 2208              		.loc 1 529 0 is_stmt 0 discriminator 1
 2209 0b9e 97F88729 		ldrb	r2, [r7, #2439]	@ zero_extendqisi2
 2210 0ba2 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 2211 0ba6 9A42     		cmp	r2, r3
 2212 0ba8 DED3     		bcc	.L129
 532:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2213              		.loc 1 532 0 is_stmt 1
 2214 0baa D74B     		ldr	r3, .L190
 2215 0bac DB6A     		ldr	r3, [r3, #44]
 2216 0bae 1846     		mov	r0, r3
 2217 0bb0 FFF7FEFF 		bl	__aeabi_i2f
 2218 0bb4 0346     		mov	r3, r0
 2219 0bb6 4FF08F41 		mov	r1, #1199570944
 2220 0bba 1846     		mov	r0, r3
 2221 0bbc FFF7FEFF 		bl	__aeabi_fdiv
 2222 0bc0 0346     		mov	r3, r0
 2223 0bc2 1A46     		mov	r2, r3
 2224 0bc4 07F5CE73 		add	r3, r7, #412
 2225 0bc8 1A60     		str	r2, [r3]	@ float
 533:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*)(&a
 2226              		.loc 1 533 0
 2227 0bca 0023     		movs	r3, #0
 2228 0bcc 87F88739 		strb	r3, [r7, #2439]
 2229 0bd0 1DE0     		b	.L130
 2230              	.L131:
 534:..\src/command_processing.c ****                         }
 2231              		.loc 1 534 0 discriminator 3
 2232 0bd2 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 2233 0bd6 3222     		movs	r2, #50
 2234 0bd8 02FB03F3 		mul	r3, r2, r3
 2235 0bdc 1A1D     		adds	r2, r3, #4
 2236 0bde 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 2237 0be2 1A44     		add	r2, r2, r3
 2238 0be4 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 2239 0be8 1A44     		add	r2, r2, r3
 2240 0bea 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 2241 0bee D31A     		subs	r3, r2, r3
 2242 0bf0 013B     		subs	r3, r3, #1
 2243 0bf2 97F88729 		ldrb	r2, [r7, #2439]	@ zero_extendqisi2
 2244 0bf6 07F5CE71 		add	r1, r7, #412
 2245 0bfa 0A44     		add	r2, r2, r1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 68


 2246 0bfc 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2247 0bfe 07F5EA72 		add	r2, r7, #468
 2248 0c02 D154     		strb	r1, [r2, r3]
 533:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*)(&a
 2249              		.loc 1 533 0 discriminator 3
 2250 0c04 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 2251 0c08 0133     		adds	r3, r3, #1
 2252 0c0a 87F88739 		strb	r3, [r7, #2439]
 2253              	.L130:
 533:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*)(&a
 2254              		.loc 1 533 0 is_stmt 0 discriminator 1
 2255 0c0e 97F88729 		ldrb	r2, [r7, #2439]	@ zero_extendqisi2
 2256 0c12 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 2257 0c16 9A42     		cmp	r2, r3
 2258 0c18 DBD3     		bcc	.L131
 536:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2259              		.loc 1 536 0 is_stmt 1
 2260 0c1a BB4B     		ldr	r3, .L190
 2261 0c1c 1B6B     		ldr	r3, [r3, #48]
 2262 0c1e 1846     		mov	r0, r3
 2263 0c20 FFF7FEFF 		bl	__aeabi_i2f
 2264 0c24 0346     		mov	r3, r0
 2265 0c26 4FF08F41 		mov	r1, #1199570944
 2266 0c2a 1846     		mov	r0, r3
 2267 0c2c FFF7FEFF 		bl	__aeabi_fdiv
 2268 0c30 0346     		mov	r3, r0
 2269 0c32 1A46     		mov	r2, r3
 2270 0c34 07F5CE73 		add	r3, r7, #412
 2271 0c38 1A60     		str	r2, [r3]	@ float
 537:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((char*)(
 2272              		.loc 1 537 0
 2273 0c3a 0023     		movs	r3, #0
 2274 0c3c 87F88739 		strb	r3, [r7, #2439]
 2275 0c40 1EE0     		b	.L132
 2276              	.L133:
 538:..\src/command_processing.c ****                         }
 2277              		.loc 1 538 0 discriminator 3
 2278 0c42 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 2279 0c46 3222     		movs	r2, #50
 2280 0c48 02FB03F3 		mul	r3, r2, r3
 2281 0c4c 1A1D     		adds	r2, r3, #4
 2282 0c4e 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 2283 0c52 5B00     		lsls	r3, r3, #1
 2284 0c54 1A44     		add	r2, r2, r3
 2285 0c56 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 2286 0c5a 1A44     		add	r2, r2, r3
 2287 0c5c 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 2288 0c60 D31A     		subs	r3, r2, r3
 2289 0c62 013B     		subs	r3, r3, #1
 2290 0c64 97F88729 		ldrb	r2, [r7, #2439]	@ zero_extendqisi2
 2291 0c68 07F5CE71 		add	r1, r7, #412
 2292 0c6c 0A44     		add	r2, r2, r1
 2293 0c6e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2294 0c70 07F5EA72 		add	r2, r7, #468
 2295 0c74 D154     		strb	r1, [r2, r3]
 537:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((char*)(
 2296              		.loc 1 537 0 discriminator 3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 69


 2297 0c76 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 2298 0c7a 0133     		adds	r3, r3, #1
 2299 0c7c 87F88739 		strb	r3, [r7, #2439]
 2300              	.L132:
 537:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((char*)(
 2301              		.loc 1 537 0 is_stmt 0 discriminator 1
 2302 0c80 97F88729 		ldrb	r2, [r7, #2439]	@ zero_extendqisi2
 2303 0c84 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 2304 0c88 9A42     		cmp	r2, r3
 2305 0c8a DAD3     		bcc	.L133
 2306              		.loc 1 544 0 is_stmt 1
 2307 0c8c 50E0     		b	.L119
 2308              	.L181:
 545:..\src/command_processing.c ****                 default:
 546:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 2309              		.loc 1 546 0
 2310 0c8e 0023     		movs	r3, #0
 2311 0c90 87F88739 		strb	r3, [r7, #2439]
 2312 0c94 42E0     		b	.L134
 2313              	.L137:
 547:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 2314              		.loc 1 547 0
 2315 0c96 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 2316 0c9a 97F88329 		ldrb	r2, [r7, #2435]	@ zero_extendqisi2
 2317 0c9e 02FB03F3 		mul	r3, r2, r3
 2318 0ca2 1A46     		mov	r2, r3
 2319 0ca4 D7F87C39 		ldr	r3, [r7, #2428]
 2320 0ca8 1344     		add	r3, r3, r2
 2321 0caa C7F87439 		str	r3, [r7, #2420]
 548:..\src/command_processing.c ****                         aux_float = *((float*)m_tmp);
 2322              		.loc 1 548 0
 2323 0cae D7F87439 		ldr	r3, [r7, #2420]
 2324 0cb2 1A68     		ldr	r2, [r3]	@ float
 2325 0cb4 07F5CE73 		add	r3, r7, #412
 2326 0cb8 1A60     		str	r2, [r3]	@ float
 549:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2327              		.loc 1 549 0
 2328 0cba 0023     		movs	r3, #0
 2329 0cbc 87F88639 		strb	r3, [r7, #2438]
 2330 0cc0 21E0     		b	.L135
 2331              	.L136:
 550:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 2332              		.loc 1 550 0 discriminator 3
 2333 0cc2 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 2334 0cc6 3222     		movs	r2, #50
 2335 0cc8 02FB03F3 		mul	r3, r2, r3
 2336 0ccc 1A1D     		adds	r2, r3, #4
 2337 0cce 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 2338 0cd2 97F88319 		ldrb	r1, [r7, #2435]	@ zero_extendqisi2
 2339 0cd6 01FB03F3 		mul	r3, r1, r3
 2340 0cda 1A44     		add	r2, r2, r3
 2341 0cdc 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 2342 0ce0 1A44     		add	r2, r2, r3
 2343 0ce2 97F88639 		ldrb	r3, [r7, #2438]	@ zero_extendqisi2
 2344 0ce6 D31A     		subs	r3, r2, r3
 2345 0ce8 013B     		subs	r3, r3, #1
 2346 0cea 97F88629 		ldrb	r2, [r7, #2438]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 70


 2347 0cee 07F5CE71 		add	r1, r7, #412
 2348 0cf2 0A44     		add	r2, r2, r1
 2349 0cf4 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2350 0cf6 07F5EA72 		add	r2, r7, #468
 2351 0cfa D154     		strb	r1, [r2, r3]
 549:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2352              		.loc 1 549 0 discriminator 3
 2353 0cfc 97F88639 		ldrb	r3, [r7, #2438]	@ zero_extendqisi2
 2354 0d00 0133     		adds	r3, r3, #1
 2355 0d02 87F88639 		strb	r3, [r7, #2438]
 2356              	.L135:
 549:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2357              		.loc 1 549 0 is_stmt 0 discriminator 1
 2358 0d06 97F88629 		ldrb	r2, [r7, #2438]	@ zero_extendqisi2
 2359 0d0a 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 2360 0d0e 9A42     		cmp	r2, r3
 2361 0d10 D7D3     		bcc	.L136
 546:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 2362              		.loc 1 546 0 is_stmt 1 discriminator 2
 2363 0d12 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 2364 0d16 0133     		adds	r3, r3, #1
 2365 0d18 87F88739 		strb	r3, [r7, #2439]
 2366              	.L134:
 546:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 2367              		.loc 1 546 0 is_stmt 0 discriminator 1
 2368 0d1c 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 2369 0d20 07F5A872 		add	r2, r7, #336
 2370 0d24 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2371 0d26 97F88729 		ldrb	r2, [r7, #2439]	@ zero_extendqisi2
 2372 0d2a 9A42     		cmp	r2, r3
 2373 0d2c B3D3     		bcc	.L137
 551:..\src/command_processing.c ****                         }
 552:..\src/command_processing.c ****                         //*((float*)(packet_data + (4 + PARAM_BYTE_SLOT*idx) + i*sod)) = *((float*)
 553:..\src/command_processing.c ****                     }
 554:..\src/command_processing.c ****                     break;
 2374              		.loc 1 554 0 is_stmt 1
 2375 0d2e 00BF     		nop
 2376              	.L119:
 555:..\src/command_processing.c ****                 }
 556:..\src/command_processing.c ****                 break;          
 2377              		.loc 1 556 0 discriminator 4
 2378 0d30 00BF     		nop
 2379              	.L59:
 557:..\src/command_processing.c ****         }
 558:..\src/command_processing.c ****         
 559:..\src/command_processing.c ****         sprintf(aux_str, (char*)PARAMS_STR[idx]);
 2380              		.loc 1 559 0
 2381 0d32 97F88529 		ldrb	r2, [r7, #2437]	@ zero_extendqisi2
 2382 0d36 07F1D003 		add	r3, r7, #208
 2383 0d3a 53F82220 		ldr	r2, [r3, r2, lsl #2]
 2384 0d3e 07F5D073 		add	r3, r7, #416
 2385 0d42 1146     		mov	r1, r2
 2386 0d44 1846     		mov	r0, r3
 2387 0d46 FFF7FEFF 		bl	sprintf
 560:..\src/command_processing.c ****         string_lenght = strlen(aux_str);
 2388              		.loc 1 560 0
 2389 0d4a 07F5D073 		add	r3, r7, #416
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 71


 2390 0d4e 1846     		mov	r0, r3
 2391 0d50 FFF7FEFF 		bl	strlen
 2392 0d54 0346     		mov	r3, r0
 2393 0d56 87F88239 		strb	r3, [r7, #2434]
 561:..\src/command_processing.c ****         
 562:..\src/command_processing.c ****         // Parameters with a menu
 563:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 2394              		.loc 1 563 0
 2395 0d5a 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 2396 0d5e 07F5B872 		add	r2, r7, #368
 2397 0d62 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2398 0d64 002B     		cmp	r3, #0
 2399 0d66 40F03C81 		bne	.L138
 564:..\src/command_processing.c ****             switch(NUM_MENU[idx_menu]){
 2400              		.loc 1 564 0
 2401 0d6a 97F88439 		ldrb	r3, [r7, #2436]	@ zero_extendqisi2
 2402 0d6e 07F5A272 		add	r2, r7, #324
 2403 0d72 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2404 0d74 022B     		cmp	r3, #2
 2405 0d76 00F09180 		beq	.L140
 2406 0d7a 032B     		cmp	r3, #3
 2407 0d7c 00F00181 		beq	.L141
 2408 0d80 012B     		cmp	r3, #1
 2409 0d82 40F02481 		bne	.L139
 565:..\src/command_processing.c ****                 case 1:     // input mode menu
 566:..\src/command_processing.c ****                     switch(*m_addr) {
 2410              		.loc 1 566 0
 2411 0d86 D7F87C39 		ldr	r3, [r7, #2428]
 2412 0d8a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2413 0d8c 052B     		cmp	r3, #5
 2414 0d8e 00F21B81 		bhi	.L182
 2415 0d92 01A2     		adr	r2, .L145
 2416 0d94 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2417              		.p2align 2
 2418              	.L145:
 2419 0d98 B10D0000 		.word	.L144+1
 2420 0d9c D10D0000 		.word	.L146+1
 2421 0da0 F30D0000 		.word	.L147+1
 2422 0da4 1D0E0000 		.word	.L148+1
 2423 0da8 450E0000 		.word	.L149+1
 2424 0dac 6B0E0000 		.word	.L150+1
 2425              		.p2align 1
 2426              	.L144:
 567:..\src/command_processing.c ****                         case INPUT_MODE_EXTERNAL:
 568:..\src/command_processing.c ****                             strcat(aux_str, " Usb");
 2427              		.loc 1 568 0
 2428 0db0 07F5D073 		add	r3, r7, #416
 2429 0db4 1846     		mov	r0, r3
 2430 0db6 FFF7FEFF 		bl	strlen
 2431 0dba 0346     		mov	r3, r0
 2432 0dbc 1A46     		mov	r2, r3
 2433 0dbe 07F5D073 		add	r3, r7, #416
 2434 0dc2 1344     		add	r3, r3, r2
 2435 0dc4 514A     		ldr	r2, .L190+4
 2436 0dc6 1068     		ldr	r0, [r2]	@ unaligned
 2437 0dc8 1860     		str	r0, [r3]	@ unaligned
 2438 0dca 1279     		ldrb	r2, [r2, #4]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 72


 2439 0dcc 1A71     		strb	r2, [r3, #4]
 569:..\src/command_processing.c ****                         break;
 2440              		.loc 1 569 0
 2441 0dce 64E0     		b	.L143
 2442              	.L146:
 570:..\src/command_processing.c ****                         case INPUT_MODE_ENCODER3:
 571:..\src/command_processing.c ****                             strcat(aux_str, " Handle");
 2443              		.loc 1 571 0
 2444 0dd0 07F5D073 		add	r3, r7, #416
 2445 0dd4 1846     		mov	r0, r3
 2446 0dd6 FFF7FEFF 		bl	strlen
 2447 0dda 0346     		mov	r3, r0
 2448 0ddc 1A46     		mov	r2, r3
 2449 0dde 07F5D073 		add	r3, r7, #416
 2450 0de2 1344     		add	r3, r3, r2
 2451 0de4 4A49     		ldr	r1, .L190+8
 2452 0de6 1A46     		mov	r2, r3
 2453 0de8 0B46     		mov	r3, r1
 2454 0dea 03CB     		ldmia	r3!, {r0, r1}
 2455 0dec 1060     		str	r0, [r2]	@ unaligned
 2456 0dee 5160     		str	r1, [r2, #4]	@ unaligned
 572:..\src/command_processing.c ****                         break;
 2457              		.loc 1 572 0
 2458 0df0 53E0     		b	.L143
 2459              	.L147:
 573:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL:
 574:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional");
 2460              		.loc 1 574 0
 2461 0df2 07F5D073 		add	r3, r7, #416
 2462 0df6 1846     		mov	r0, r3
 2463 0df8 FFF7FEFF 		bl	strlen
 2464 0dfc 0346     		mov	r3, r0
 2465 0dfe 1A46     		mov	r2, r3
 2466 0e00 07F5D073 		add	r3, r7, #416
 2467 0e04 1344     		add	r3, r3, r2
 2468 0e06 434A     		ldr	r2, .L190+12
 2469 0e08 1D46     		mov	r5, r3
 2470 0e0a 1446     		mov	r4, r2
 2471 0e0c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2472 0e0e 2860     		str	r0, [r5]	@ unaligned
 2473 0e10 6960     		str	r1, [r5, #4]	@ unaligned
 2474 0e12 AA60     		str	r2, [r5, #8]	@ unaligned
 2475 0e14 EB60     		str	r3, [r5, #12]	@ unaligned
 2476 0e16 2388     		ldrh	r3, [r4]	@ unaligned
 2477 0e18 2B82     		strh	r3, [r5, #16]	@ unaligned
 575:..\src/command_processing.c ****                         break;
 2478              		.loc 1 575 0
 2479 0e1a 3EE0     		b	.L143
 2480              	.L148:
 576:..\src/command_processing.c ****                         case INPUT_MODE_EMG_INTEGRAL:
 577:..\src/command_processing.c ****                             strcat(aux_str, " EMG integral");
 2481              		.loc 1 577 0
 2482 0e1c 07F5D073 		add	r3, r7, #416
 2483 0e20 1846     		mov	r0, r3
 2484 0e22 FFF7FEFF 		bl	strlen
 2485 0e26 0346     		mov	r3, r0
 2486 0e28 1A46     		mov	r2, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 73


 2487 0e2a 07F5D073 		add	r3, r7, #416
 2488 0e2e 1344     		add	r3, r3, r2
 2489 0e30 394A     		ldr	r2, .L190+16
 2490 0e32 1C46     		mov	r4, r3
 2491 0e34 1346     		mov	r3, r2
 2492 0e36 07CB     		ldmia	r3!, {r0, r1, r2}
 2493 0e38 2060     		str	r0, [r4]	@ unaligned
 2494 0e3a 6160     		str	r1, [r4, #4]	@ unaligned
 2495 0e3c A260     		str	r2, [r4, #8]	@ unaligned
 2496 0e3e 1B88     		ldrh	r3, [r3]	@ unaligned
 2497 0e40 A381     		strh	r3, [r4, #12]	@ unaligned
 578:..\src/command_processing.c ****                         break;
 2498              		.loc 1 578 0
 2499 0e42 2AE0     		b	.L143
 2500              	.L149:
 579:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS:
 580:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS");
 2501              		.loc 1 580 0
 2502 0e44 07F5D073 		add	r3, r7, #416
 2503 0e48 1846     		mov	r0, r3
 2504 0e4a FFF7FEFF 		bl	strlen
 2505 0e4e 0346     		mov	r3, r0
 2506 0e50 1A46     		mov	r2, r3
 2507 0e52 07F5D073 		add	r3, r7, #416
 2508 0e56 1344     		add	r3, r3, r2
 2509 0e58 3049     		ldr	r1, .L190+20
 2510 0e5a 1A46     		mov	r2, r3
 2511 0e5c 0B46     		mov	r3, r1
 2512 0e5e 03CB     		ldmia	r3!, {r0, r1}
 2513 0e60 1060     		str	r0, [r2]	@ unaligned
 2514 0e62 5160     		str	r1, [r2, #4]	@ unaligned
 2515 0e64 1B88     		ldrh	r3, [r3]	@ unaligned
 2516 0e66 1381     		strh	r3, [r2, #8]	@ unaligned
 581:..\src/command_processing.c ****                         break;
 2517              		.loc 1 581 0
 2518 0e68 17E0     		b	.L143
 2519              	.L150:
 582:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS_ADV:
 583:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS Advanced");
 2520              		.loc 1 583 0
 2521 0e6a 07F5D073 		add	r3, r7, #416
 2522 0e6e 1846     		mov	r0, r3
 2523 0e70 FFF7FEFF 		bl	strlen
 2524 0e74 0346     		mov	r3, r0
 2525 0e76 1A46     		mov	r2, r3
 2526 0e78 07F5D073 		add	r3, r7, #416
 2527 0e7c 1344     		add	r3, r3, r2
 2528 0e7e 284A     		ldr	r2, .L190+24
 2529 0e80 1D46     		mov	r5, r3
 2530 0e82 1446     		mov	r4, r2
 2531 0e84 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2532 0e86 2860     		str	r0, [r5]	@ unaligned
 2533 0e88 6960     		str	r1, [r5, #4]	@ unaligned
 2534 0e8a AA60     		str	r2, [r5, #8]	@ unaligned
 2535 0e8c EB60     		str	r3, [r5, #12]	@ unaligned
 2536 0e8e 2388     		ldrh	r3, [r4]	@ unaligned
 2537 0e90 A278     		ldrb	r2, [r4, #2]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 74


 2538 0e92 2B82     		strh	r3, [r5, #16]	@ unaligned
 2539 0e94 1346     		mov	r3, r2
 2540 0e96 AB74     		strb	r3, [r5, #18]
 584:..\src/command_processing.c ****                         break;
 2541              		.loc 1 584 0
 2542 0e98 00BF     		nop
 2543              	.L143:
 585:..\src/command_processing.c ****                     }
 586:..\src/command_processing.c ****                     break;
 2544              		.loc 1 586 0
 2545 0e9a 95E0     		b	.L182
 2546              	.L140:
 587:..\src/command_processing.c ****                 case 2:     // control mode menu
 588:..\src/command_processing.c ****                     switch(*m_addr){
 2547              		.loc 1 588 0
 2548 0e9c D7F87C39 		ldr	r3, [r7, #2428]
 2549 0ea0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2550 0ea2 032B     		cmp	r3, #3
 2551 0ea4 00F29280 		bhi	.L183
 2552 0ea8 01A2     		adr	r2, .L153
 2553 0eaa 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2554 0eae 00BF     		.p2align 2
 2555              	.L153:
 2556 0eb0 C10E0000 		.word	.L152+1
 2557 0eb4 E70E0000 		.word	.L154+1
 2558 0eb8 2D0F0000 		.word	.L155+1
 2559 0ebc 530F0000 		.word	.L156+1
 2560              		.p2align 1
 2561              	.L152:
 589:..\src/command_processing.c ****                         case CONTROL_ANGLE:
 590:..\src/command_processing.c ****                             strcat(aux_str, " Position");
 2562              		.loc 1 590 0
 2563 0ec0 07F5D073 		add	r3, r7, #416
 2564 0ec4 1846     		mov	r0, r3
 2565 0ec6 FFF7FEFF 		bl	strlen
 2566 0eca 0346     		mov	r3, r0
 2567 0ecc 1A46     		mov	r2, r3
 2568 0ece 07F5D073 		add	r3, r7, #416
 2569 0ed2 1344     		add	r3, r3, r2
 2570 0ed4 1349     		ldr	r1, .L190+28
 2571 0ed6 1A46     		mov	r2, r3
 2572 0ed8 0B46     		mov	r3, r1
 2573 0eda 03CB     		ldmia	r3!, {r0, r1}
 2574 0edc 1060     		str	r0, [r2]	@ unaligned
 2575 0ede 5160     		str	r1, [r2, #4]	@ unaligned
 2576 0ee0 1B88     		ldrh	r3, [r3]	@ unaligned
 2577 0ee2 1381     		strh	r3, [r2, #8]	@ unaligned
 591:..\src/command_processing.c ****                         break;
 2578              		.loc 1 591 0
 2579 0ee4 4CE0     		b	.L151
 2580              	.L154:
 592:..\src/command_processing.c ****                         case CONTROL_PWM:
 593:..\src/command_processing.c ****                             strcat(aux_str, " PWM");
 2581              		.loc 1 593 0
 2582 0ee6 07F5D073 		add	r3, r7, #416
 2583 0eea 1846     		mov	r0, r3
 2584 0eec FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 75


 2585 0ef0 0346     		mov	r3, r0
 2586 0ef2 1A46     		mov	r2, r3
 2587 0ef4 07F5D073 		add	r3, r7, #416
 2588 0ef8 1344     		add	r3, r3, r2
 2589 0efa 0B4A     		ldr	r2, .L190+32
 2590 0efc 1068     		ldr	r0, [r2]	@ unaligned
 2591 0efe 1860     		str	r0, [r3]	@ unaligned
 2592 0f00 1279     		ldrb	r2, [r2, #4]
 2593 0f02 1A71     		strb	r2, [r3, #4]
 594:..\src/command_processing.c ****                         break;
 2594              		.loc 1 594 0
 2595 0f04 3CE0     		b	.L151
 2596              	.L191:
 2597 0f06 00BF     		.align	2
 2598              	.L190:
 2599 0f08 00000000 		.word	c_mem
 2600 0f0c 00000000 		.word	.LC37
 2601 0f10 08000000 		.word	.LC38
 2602 0f14 10000000 		.word	.LC39
 2603 0f18 24000000 		.word	.LC40
 2604 0f1c 34000000 		.word	.LC41
 2605 0f20 40000000 		.word	.LC42
 2606 0f24 54000000 		.word	.LC43
 2607 0f28 60000000 		.word	.LC44
 2608              	.L155:
 595:..\src/command_processing.c ****                         case CONTROL_CURRENT:
 596:..\src/command_processing.c ****                             strcat(aux_str, " Current");
 2609              		.loc 1 596 0
 2610 0f2c 07F5D073 		add	r3, r7, #416
 2611 0f30 1846     		mov	r0, r3
 2612 0f32 FFF7FEFF 		bl	strlen
 2613 0f36 0346     		mov	r3, r0
 2614 0f38 1A46     		mov	r2, r3
 2615 0f3a 07F5D073 		add	r3, r7, #416
 2616 0f3e 1344     		add	r3, r3, r2
 2617 0f40 DB49     		ldr	r1, .L192
 2618 0f42 1A46     		mov	r2, r3
 2619 0f44 0B46     		mov	r3, r1
 2620 0f46 03CB     		ldmia	r3!, {r0, r1}
 2621 0f48 1060     		str	r0, [r2]	@ unaligned
 2622 0f4a 5160     		str	r1, [r2, #4]	@ unaligned
 2623 0f4c 1B78     		ldrb	r3, [r3]
 2624 0f4e 1372     		strb	r3, [r2, #8]
 597:..\src/command_processing.c ****                         break;
 2625              		.loc 1 597 0
 2626 0f50 16E0     		b	.L151
 2627              	.L156:
 598:..\src/command_processing.c ****                         case CURR_AND_POS_CONTROL:
 599:..\src/command_processing.c ****                             strcat(aux_str, " Position and Current");
 2628              		.loc 1 599 0
 2629 0f52 07F5D073 		add	r3, r7, #416
 2630 0f56 1846     		mov	r0, r3
 2631 0f58 FFF7FEFF 		bl	strlen
 2632 0f5c 0346     		mov	r3, r0
 2633 0f5e 1A46     		mov	r2, r3
 2634 0f60 07F5D073 		add	r3, r7, #416
 2635 0f64 1344     		add	r3, r3, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 76


 2636 0f66 D34A     		ldr	r2, .L192+4
 2637 0f68 1D46     		mov	r5, r3
 2638 0f6a 1446     		mov	r4, r2
 2639 0f6c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2640 0f6e 2860     		str	r0, [r5]	@ unaligned
 2641 0f70 6960     		str	r1, [r5, #4]	@ unaligned
 2642 0f72 AA60     		str	r2, [r5, #8]	@ unaligned
 2643 0f74 EB60     		str	r3, [r5, #12]	@ unaligned
 2644 0f76 2068     		ldr	r0, [r4]	@ unaligned
 2645 0f78 2861     		str	r0, [r5, #16]	@ unaligned
 2646 0f7a A388     		ldrh	r3, [r4, #4]	@ unaligned
 2647 0f7c AB82     		strh	r3, [r5, #20]	@ unaligned
 600:..\src/command_processing.c ****                         break;
 2648              		.loc 1 600 0
 2649 0f7e 00BF     		nop
 2650              	.L151:
 601:..\src/command_processing.c ****                     }
 602:..\src/command_processing.c ****                     break;
 2651              		.loc 1 602 0
 2652 0f80 24E0     		b	.L183
 2653              	.L141:
 603:..\src/command_processing.c ****                 case 3:     // yes/no menu
 604:..\src/command_processing.c ****                     if(*m_addr){
 2654              		.loc 1 604 0
 2655 0f82 D7F87C39 		ldr	r3, [r7, #2428]
 2656 0f86 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2657 0f88 002B     		cmp	r3, #0
 2658 0f8a 0FD0     		beq	.L157
 605:..\src/command_processing.c ****                         strcat(aux_str, " YES\0");
 2659              		.loc 1 605 0
 2660 0f8c 07F5D073 		add	r3, r7, #416
 2661 0f90 1846     		mov	r0, r3
 2662 0f92 FFF7FEFF 		bl	strlen
 2663 0f96 0346     		mov	r3, r0
 2664 0f98 1A46     		mov	r2, r3
 2665 0f9a 07F5D073 		add	r3, r7, #416
 2666 0f9e 1344     		add	r3, r3, r2
 2667 0fa0 C54A     		ldr	r2, .L192+8
 2668 0fa2 1068     		ldr	r0, [r2]	@ unaligned
 2669 0fa4 1860     		str	r0, [r3]	@ unaligned
 2670 0fa6 1279     		ldrb	r2, [r2, #4]
 2671 0fa8 1A71     		strb	r2, [r3, #4]
 606:..\src/command_processing.c ****                     }
 607:..\src/command_processing.c ****                     else {
 608:..\src/command_processing.c ****                         strcat(aux_str, " NO\0");
 609:..\src/command_processing.c ****                     }
 610:..\src/command_processing.c ****                     break;    
 2672              		.loc 1 610 0
 2673 0faa 10E0     		b	.L139
 2674              	.L157:
 608:..\src/command_processing.c ****                     }
 2675              		.loc 1 608 0
 2676 0fac 07F5D073 		add	r3, r7, #416
 2677 0fb0 1846     		mov	r0, r3
 2678 0fb2 FFF7FEFF 		bl	strlen
 2679 0fb6 0346     		mov	r3, r0
 2680 0fb8 1A46     		mov	r2, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 77


 2681 0fba 07F5D073 		add	r3, r7, #416
 2682 0fbe 1344     		add	r3, r3, r2
 2683 0fc0 BE4A     		ldr	r2, .L192+12
 2684 0fc2 1068     		ldr	r0, [r2]	@ unaligned
 2685 0fc4 1860     		str	r0, [r3]	@ unaligned
 2686              		.loc 1 610 0
 2687 0fc6 02E0     		b	.L139
 2688              	.L182:
 586:..\src/command_processing.c ****                 case 2:     // control mode menu
 2689              		.loc 1 586 0
 2690 0fc8 00BF     		nop
 2691 0fca 00E0     		b	.L139
 2692              	.L183:
 602:..\src/command_processing.c ****                 case 3:     // yes/no menu
 2693              		.loc 1 602 0
 2694 0fcc 00BF     		nop
 2695              	.L139:
 611:..\src/command_processing.c ****             }
 612:..\src/command_processing.c ****             //Recomputes string lenght
 613:..\src/command_processing.c ****             string_lenght = strlen(aux_str)+1;
 2696              		.loc 1 613 0
 2697 0fce 07F5D073 		add	r3, r7, #416
 2698 0fd2 1846     		mov	r0, r3
 2699 0fd4 FFF7FEFF 		bl	strlen
 2700 0fd8 0346     		mov	r3, r0
 2701 0fda DBB2     		uxtb	r3, r3
 2702 0fdc 0133     		adds	r3, r3, #1
 2703 0fde 87F88239 		strb	r3, [r7, #2434]
 2704              	.L138:
 614:..\src/command_processing.c ****         }
 615:..\src/command_processing.c **** 
 616:..\src/command_processing.c ****         // Add parameter string to packet
 617:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 2705              		.loc 1 617 0
 2706 0fe2 97F88239 		ldrb	r3, [r7, #2434]
 2707 0fe6 87F88739 		strb	r3, [r7, #2439]
 2708 0fea 25E0     		b	.L159
 2709              	.L160:
 618:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 2710              		.loc 1 618 0 discriminator 3
 2711 0fec 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 2712 0ff0 3222     		movs	r2, #50
 2713 0ff2 02FB03F3 		mul	r3, r2, r3
 2714 0ff6 1A1D     		adds	r2, r3, #4
 2715 0ff8 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 2716 0ffc 97F88519 		ldrb	r1, [r7, #2437]	@ zero_extendqisi2
 2717 1000 07F5A870 		add	r0, r7, #336
 2718 1004 415C     		ldrb	r1, [r0, r1]	@ zero_extendqisi2
 2719 1006 01FB03F3 		mul	r3, r1, r3
 2720 100a 1A44     		add	r2, r2, r3
 2721 100c 97F88239 		ldrb	r3, [r7, #2434]	@ zero_extendqisi2
 2722 1010 1A44     		add	r2, r2, r3
 2723 1012 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 2724 1016 D31A     		subs	r3, r2, r3
 2725 1018 97F88219 		ldrb	r1, [r7, #2434]	@ zero_extendqisi2
 2726 101c 97F88729 		ldrb	r2, [r7, #2439]	@ zero_extendqisi2
 2727 1020 8A1A     		subs	r2, r1, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 78


 2728 1022 07F5D071 		add	r1, r7, #416
 2729 1026 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 2730 1028 07F5EA72 		add	r2, r7, #468
 2731 102c D154     		strb	r1, [r2, r3]
 617:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 2732              		.loc 1 617 0 discriminator 3
 2733 102e 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 2734 1032 013B     		subs	r3, r3, #1
 2735 1034 87F88739 		strb	r3, [r7, #2439]
 2736              	.L159:
 617:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 2737              		.loc 1 617 0 is_stmt 0 discriminator 1
 2738 1038 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 2739 103c 002B     		cmp	r3, #0
 2740 103e D5D1     		bne	.L160
 619:..\src/command_processing.c ****         //The following byte indicates the number of menus at the end of the packet to send
 620:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 2741              		.loc 1 620 0 is_stmt 1
 2742 1040 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 2743 1044 07F5B872 		add	r2, r7, #368
 2744 1048 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2745 104a 002B     		cmp	r3, #0
 2746 104c 1FD1     		bne	.L161
 621:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght] = NUM_MEN
 2747              		.loc 1 621 0
 2748 104e 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 2749 1052 3222     		movs	r2, #50
 2750 1054 02FB03F3 		mul	r3, r2, r3
 2751 1058 1A1D     		adds	r2, r3, #4
 2752 105a 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 2753 105e 97F88519 		ldrb	r1, [r7, #2437]	@ zero_extendqisi2
 2754 1062 07F5A870 		add	r0, r7, #336
 2755 1066 415C     		ldrb	r1, [r0, r1]	@ zero_extendqisi2
 2756 1068 01FB03F3 		mul	r3, r1, r3
 2757 106c 1A44     		add	r2, r2, r3
 2758 106e 97F88239 		ldrb	r3, [r7, #2434]	@ zero_extendqisi2
 2759 1072 1344     		add	r3, r3, r2
 2760 1074 97F88429 		ldrb	r2, [r7, #2436]	@ zero_extendqisi2
 2761 1078 07F5A271 		add	r1, r7, #324
 2762 107c 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 2763 107e 07F5EA72 		add	r2, r7, #468
 2764 1082 D154     		strb	r1, [r2, r3]
 622:..\src/command_processing.c ****             idx_menu = idx_menu + 1;
 2765              		.loc 1 622 0
 2766 1084 97F88439 		ldrb	r3, [r7, #2436]
 2767 1088 0133     		adds	r3, r3, #1
 2768 108a 87F88439 		strb	r3, [r7, #2436]
 2769              	.L161:
 623:..\src/command_processing.c ****         }
 624:..\src/command_processing.c ****         
 625:..\src/command_processing.c ****         
 626:..\src/command_processing.c ****         // Adjust m_addr increment, according to c_mem structure
 627:..\src/command_processing.c ****         switch (idx) {
 2770              		.loc 1 627 0
 2771 108e 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 2772 1092 1B2B     		cmp	r3, #27
 2773 1094 5AD8     		bhi	.L162
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 79


 2774 1096 01A2     		adr	r2, .L164
 2775 1098 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2776              		.p2align 2
 2777              	.L164:
 2778 109c 0D110000 		.word	.L163+1
 2779 10a0 4D110000 		.word	.L162+1
 2780 10a4 15110000 		.word	.L165+1
 2781 10a8 4D110000 		.word	.L162+1
 2782 10ac 4D110000 		.word	.L162+1
 2783 10b0 4D110000 		.word	.L162+1
 2784 10b4 1D110000 		.word	.L166+1
 2785 10b8 25110000 		.word	.L167+1
 2786 10bc 4D110000 		.word	.L162+1
 2787 10c0 2D110000 		.word	.L168+1
 2788 10c4 4D110000 		.word	.L162+1
 2789 10c8 4D110000 		.word	.L162+1
 2790 10cc 4D110000 		.word	.L162+1
 2791 10d0 4D110000 		.word	.L162+1
 2792 10d4 35110000 		.word	.L169+1
 2793 10d8 4D110000 		.word	.L162+1
 2794 10dc 4D110000 		.word	.L162+1
 2795 10e0 4D110000 		.word	.L162+1
 2796 10e4 4D110000 		.word	.L162+1
 2797 10e8 4D110000 		.word	.L162+1
 2798 10ec 3D110000 		.word	.L170+1
 2799 10f0 4D110000 		.word	.L162+1
 2800 10f4 4D110000 		.word	.L162+1
 2801 10f8 4D110000 		.word	.L162+1
 2802 10fc 4D110000 		.word	.L162+1
 2803 1100 4D110000 		.word	.L162+1
 2804 1104 4D110000 		.word	.L162+1
 2805 1108 45110000 		.word	.L171+1
 2806              		.p2align 1
 2807              	.L163:
 628:..\src/command_processing.c ****             case 0:
 629:..\src/command_processing.c ****                 // Add 2 bytes free, since PSOC5 ARM memory is 4-bytes aligned
 630:..\src/command_processing.c ****                 m_addr = (uint8*)&c_mem.k_p;
 2808              		.loc 1 630 0
 2809 110c 6C4B     		ldr	r3, .L192+16
 2810 110e C7F87C39 		str	r3, [r7, #2428]
 631:..\src/command_processing.c ****                 break;
 2811              		.loc 1 631 0
 2812 1112 2CE0     		b	.L172
 2813              	.L165:
 632:..\src/command_processing.c ****             case 2:
 633:..\src/command_processing.c ****                 // double loop PID controller parameters 
 634:..\src/command_processing.c ****                 //(increment after CURRENT PID parameters)
 635:..\src/command_processing.c ****                 //m_addr = m_addr + NUM_ITEMS[idx]*sod + 6*sod;
 636:..\src/command_processing.c ****                 m_addr = &c_mem.activ;
 2814              		.loc 1 636 0
 2815 1114 6B4B     		ldr	r3, .L192+20
 2816 1116 C7F87C39 		str	r3, [r7, #2428]
 637:..\src/command_processing.c ****                 break; 
 2817              		.loc 1 637 0
 2818 111a 28E0     		b	.L172
 2819              	.L166:
 638:..\src/command_processing.c ****             case 6:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 80


 639:..\src/command_processing.c ****                 // Add 1 byte free, since PSOC5 ARM memory is 4-bytes aligned
 640:..\src/command_processing.c ****                 m_addr = (uint8*)&c_mem.m_off[0];
 2820              		.loc 1 640 0
 2821 111c 6A4B     		ldr	r3, .L192+24
 2822 111e C7F87C39 		str	r3, [r7, #2428]
 641:..\src/command_processing.c ****                 break;
 2823              		.loc 1 641 0
 2824 1122 24E0     		b	.L172
 2825              	.L167:
 642:..\src/command_processing.c ****             case 7:
 643:..\src/command_processing.c ****                 //(increment after OFFSET parameters)
 644:..\src/command_processing.c ****                 //m_addr = m_addr + NUM_ITEMS[idx]*4;     //int16->int32 conversion
 645:..\src/command_processing.c ****                 m_addr = (uint8*)&c_mem.m_mult[0];
 2826              		.loc 1 645 0
 2827 1124 694B     		ldr	r3, .L192+28
 2828 1126 C7F87C39 		str	r3, [r7, #2428]
 646:..\src/command_processing.c ****                 break;
 2829              		.loc 1 646 0
 2830 112a 20E0     		b	.L172
 2831              	.L168:
 647:..\src/command_processing.c ****             case 9:
 648:..\src/command_processing.c ****                 // Add 3 bytes free, since PSOC5 ARM memory is 4-bytes aligned
 649:..\src/command_processing.c ****                 m_addr = (uint8*)&c_mem.pos_lim_inf;
 2832              		.loc 1 649 0
 2833 112c 684B     		ldr	r3, .L192+32
 2834 112e C7F87C39 		str	r3, [r7, #2428]
 650:..\src/command_processing.c ****                 break;
 2835              		.loc 1 650 0
 2836 1132 1CE0     		b	.L172
 2837              	.L169:
 651:..\src/command_processing.c ****              case 14:
 652:..\src/command_processing.c ****                 // Add 1 byte free, since PSOC5 ARM memory is 4-bytes aligned
 653:..\src/command_processing.c ****                 m_addr = (uint8*)&c_mem.emg_max_value[0];
 2838              		.loc 1 653 0
 2839 1134 674B     		ldr	r3, .L192+36
 2840 1136 C7F87C39 		str	r3, [r7, #2428]
 654:..\src/command_processing.c ****                 break;
 2841              		.loc 1 654 0
 2842 113a 18E0     		b	.L172
 2843              	.L170:
 655:..\src/command_processing.c ****             case 20:
 656:..\src/command_processing.c ****                 //(increment after LOOKUP TABLE parameter)
 657:..\src/command_processing.c ****                 //m_addr = m_addr + NUM_ITEMS[idx]*sod + 1 + 3;   //1 = baudrate, 3 = maintenance d
 658:..\src/command_processing.c ****                 m_addr = (uint8*)&c_mem.rest_pos;
 2844              		.loc 1 658 0
 2845 113c 664B     		ldr	r3, .L192+40
 2846 113e C7F87C39 		str	r3, [r7, #2428]
 659:..\src/command_processing.c ****                 break;
 2847              		.loc 1 659 0
 2848 1142 14E0     		b	.L172
 2849              	.L171:
 660:..\src/command_processing.c ****             case 27:
 661:..\src/command_processing.c ****                 //(increment after RESET COUNTERS parameter)
 662:..\src/command_processing.c ****                 //m_addr = m_addr + NUM_ITEMS[idx]*sod + 22 + 80;   //22 = unused bytes, 80 = 20*4 
 663:..\src/command_processing.c ****                 m_addr = (uint8*)&c_mem.curr_time[0];
 2850              		.loc 1 663 0
 2851 1144 654B     		ldr	r3, .L192+44
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 81


 2852 1146 C7F87C39 		str	r3, [r7, #2428]
 664:..\src/command_processing.c ****                 break;                
 2853              		.loc 1 664 0
 2854 114a 10E0     		b	.L172
 2855              	.L162:
 665:..\src/command_processing.c ****             default:
 666:..\src/command_processing.c ****                 m_addr = m_addr + NUM_ITEMS[idx]*sod;
 2856              		.loc 1 666 0
 2857 114c 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 2858 1150 07F5A872 		add	r2, r7, #336
 2859 1154 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2860 1156 1A46     		mov	r2, r3
 2861 1158 97F88339 		ldrb	r3, [r7, #2435]	@ zero_extendqisi2
 2862 115c 03FB02F3 		mul	r3, r3, r2
 2863 1160 1A46     		mov	r2, r3
 2864 1162 D7F87C39 		ldr	r3, [r7, #2428]
 2865 1166 1344     		add	r3, r3, r2
 2866 1168 C7F87C39 		str	r3, [r7, #2428]
 667:..\src/command_processing.c ****                 break;
 2867              		.loc 1 667 0
 2868 116c 00BF     		nop
 2869              	.L172:
 365:..\src/command_processing.c ****         
 2870              		.loc 1 365 0 discriminator 2
 2871 116e 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 2872 1172 0133     		adds	r3, r3, #1
 2873 1174 87F88539 		strb	r3, [r7, #2437]
 2874              	.L53:
 365:..\src/command_processing.c ****         
 2875              		.loc 1 365 0 is_stmt 0 discriminator 1
 2876 1178 97F88539 		ldrb	r3, [r7, #2437]	@ zero_extendqisi2
 2877 117c 1C2B     		cmp	r3, #28
 2878 117e 7EF6D4AF 		bls	.L173
 668:..\src/command_processing.c ****                 
 669:..\src/command_processing.c ****             // reset counters reads g_mem.unused_bytes[0]
 670:..\src/command_processing.c ****         }
 671:..\src/command_processing.c ****     }
 672:..\src/command_processing.c **** 
 673:..\src/command_processing.c ****     string_lenght = strlen((char*)input_mode_menu);
 2879              		.loc 1 673 0 is_stmt 1
 2880 1182 07F16C03 		add	r3, r7, #108
 2881 1186 1846     		mov	r0, r3
 2882 1188 FFF7FEFF 		bl	strlen
 2883 118c 0346     		mov	r3, r0
 2884 118e 87F88239 		strb	r3, [r7, #2434]
 674:..\src/command_processing.c ****     for(i = string_lenght; i != 0; i--)
 2885              		.loc 1 674 0
 2886 1192 97F88239 		ldrb	r3, [r7, #2434]
 2887 1196 87F88739 		strb	r3, [r7, #2439]
 2888 119a 16E0     		b	.L174
 2889              	.L175:
 675:..\src/command_processing.c ****         packet_data[PARAM_BYTE_SLOT*NUM_OF_PARAMS + 2 + string_lenght - i] = input_mode_menu[string
 2890              		.loc 1 675 0 discriminator 3
 2891 119c 97F88239 		ldrb	r3, [r7, #2434]	@ zero_extendqisi2
 2892 11a0 03F2AC52 		addw	r2, r3, #1452
 2893 11a4 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 2894 11a8 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 82


 2895 11aa 97F88219 		ldrb	r1, [r7, #2434]	@ zero_extendqisi2
 2896 11ae 97F88729 		ldrb	r2, [r7, #2439]	@ zero_extendqisi2
 2897 11b2 8A1A     		subs	r2, r1, r2
 2898 11b4 07F16C01 		add	r1, r7, #108
 2899 11b8 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 2900 11ba 07F5EA72 		add	r2, r7, #468
 2901 11be D154     		strb	r1, [r2, r3]
 674:..\src/command_processing.c ****     for(i = string_lenght; i != 0; i--)
 2902              		.loc 1 674 0 discriminator 3
 2903 11c0 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 2904 11c4 013B     		subs	r3, r3, #1
 2905 11c6 87F88739 		strb	r3, [r7, #2439]
 2906              	.L174:
 674:..\src/command_processing.c ****     for(i = string_lenght; i != 0; i--)
 2907              		.loc 1 674 0 is_stmt 0 discriminator 1
 2908 11ca 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 2909 11ce 002B     		cmp	r3, #0
 2910 11d0 E4D1     		bne	.L175
 676:..\src/command_processing.c **** 
 677:..\src/command_processing.c ****     string_lenght = strlen((char*)control_mode_menu);
 2911              		.loc 1 677 0 is_stmt 1
 2912 11d2 07F12C03 		add	r3, r7, #44
 2913 11d6 1846     		mov	r0, r3
 2914 11d8 FFF7FEFF 		bl	strlen
 2915 11dc 0346     		mov	r3, r0
 2916 11de 87F88239 		strb	r3, [r7, #2434]
 678:..\src/command_processing.c ****     for(i = string_lenght; i != 0; i--)
 2917              		.loc 1 678 0
 2918 11e2 97F88239 		ldrb	r3, [r7, #2434]
 2919 11e6 87F88739 		strb	r3, [r7, #2439]
 2920 11ea 16E0     		b	.L176
 2921              	.L177:
 679:..\src/command_processing.c ****         packet_data[PARAM_BYTE_SLOT*NUM_OF_PARAMS + 2 + PARAM_MENU_SLOT + string_lenght - i] = cont
 2922              		.loc 1 679 0 discriminator 3
 2923 11ec 97F88239 		ldrb	r3, [r7, #2434]	@ zero_extendqisi2
 2924 11f0 03F24262 		addw	r2, r3, #1602
 2925 11f4 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 2926 11f8 D31A     		subs	r3, r2, r3
 2927 11fa 97F88219 		ldrb	r1, [r7, #2434]	@ zero_extendqisi2
 2928 11fe 97F88729 		ldrb	r2, [r7, #2439]	@ zero_extendqisi2
 2929 1202 8A1A     		subs	r2, r1, r2
 2930 1204 07F12C01 		add	r1, r7, #44
 2931 1208 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 2932 120a 07F5EA72 		add	r2, r7, #468
 2933 120e D154     		strb	r1, [r2, r3]
 678:..\src/command_processing.c ****     for(i = string_lenght; i != 0; i--)
 2934              		.loc 1 678 0 discriminator 3
 2935 1210 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 2936 1214 013B     		subs	r3, r3, #1
 2937 1216 87F88739 		strb	r3, [r7, #2439]
 2938              	.L176:
 678:..\src/command_processing.c ****     for(i = string_lenght; i != 0; i--)
 2939              		.loc 1 678 0 is_stmt 0 discriminator 1
 2940 121a 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 2941 121e 002B     		cmp	r3, #0
 2942 1220 E4D1     		bne	.L177
 680:..\src/command_processing.c **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 83


 681:..\src/command_processing.c ****     string_lenght = strlen((char*)yes_no_menu);
 2943              		.loc 1 681 0 is_stmt 1
 2944 1222 3B46     		mov	r3, r7
 2945 1224 1846     		mov	r0, r3
 2946 1226 FFF7FEFF 		bl	strlen
 2947 122a 0346     		mov	r3, r0
 2948 122c 87F88239 		strb	r3, [r7, #2434]
 682:..\src/command_processing.c ****     for(i = string_lenght; i!= 0; i--)
 2949              		.loc 1 682 0
 2950 1230 97F88239 		ldrb	r3, [r7, #2434]
 2951 1234 87F88739 		strb	r3, [r7, #2439]
 2952 1238 15E0     		b	.L178
 2953              	.L179:
 683:..\src/command_processing.c ****         packet_data[PARAM_BYTE_SLOT*NUM_OF_PARAMS + 2 + 2*PARAM_MENU_SLOT + string_lenght - i] = ye
 2954              		.loc 1 683 0 discriminator 3
 2955 123a 97F88239 		ldrb	r3, [r7, #2434]	@ zero_extendqisi2
 2956 123e 03F5DB62 		add	r2, r3, #1752
 2957 1242 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 2958 1246 D31A     		subs	r3, r2, r3
 2959 1248 97F88219 		ldrb	r1, [r7, #2434]	@ zero_extendqisi2
 2960 124c 97F88729 		ldrb	r2, [r7, #2439]	@ zero_extendqisi2
 2961 1250 8A1A     		subs	r2, r1, r2
 2962 1252 3946     		mov	r1, r7
 2963 1254 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 2964 1256 07F5EA72 		add	r2, r7, #468
 2965 125a D154     		strb	r1, [r2, r3]
 682:..\src/command_processing.c ****     for(i = string_lenght; i!= 0; i--)
 2966              		.loc 1 682 0 discriminator 3
 2967 125c 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 2968 1260 013B     		subs	r3, r3, #1
 2969 1262 87F88739 		strb	r3, [r7, #2439]
 2970              	.L178:
 682:..\src/command_processing.c ****     for(i = string_lenght; i!= 0; i--)
 2971              		.loc 1 682 0 is_stmt 0 discriminator 1
 2972 1266 97F88739 		ldrb	r3, [r7, #2439]	@ zero_extendqisi2
 2973 126a 002B     		cmp	r3, #0
 2974 126c E5D1     		bne	.L179
 684:..\src/command_processing.c **** 
 685:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
 2975              		.loc 1 685 0 is_stmt 1
 2976 126e B7F87A39 		ldrh	r3, [r7, #2426]
 2977 1272 5C1E     		subs	r4, r3, #1
 2978 1274 B7F87A39 		ldrh	r3, [r7, #2426]	@ movhi
 2979 1278 DBB2     		uxtb	r3, r3
 2980 127a 013B     		subs	r3, r3, #1
 2981 127c DAB2     		uxtb	r2, r3
 2982 127e 07F5EA73 		add	r3, r7, #468
 2983 1282 1146     		mov	r1, r2
 2984 1284 1846     		mov	r0, r3
 2985 1286 FFF7FEFF 		bl	LCRChecksum
 2986 128a 0346     		mov	r3, r0
 2987 128c 1A46     		mov	r2, r3
 2988 128e 07F5EA73 		add	r3, r7, #468
 2989 1292 1A55     		strb	r2, [r3, r4]
 686:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 2990              		.loc 1 686 0
 2991 1294 B7F87A29 		ldrh	r2, [r7, #2426]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 84


 2992 1298 07F5EA73 		add	r3, r7, #468
 2993 129c 1146     		mov	r1, r2
 2994 129e 1846     		mov	r0, r3
 2995 12a0 FFF7FEFF 		bl	commWrite
 687:..\src/command_processing.c **** }
 2996              		.loc 1 687 0
 2997 12a4 00BF     		nop
 2998 12a6 07F68C17 		addw	r7, r7, #2444
 2999              		.cfi_def_cfa_offset 20
 3000 12aa BD46     		mov	sp, r7
 3001              		.cfi_def_cfa_register 13
 3002              		@ sp needed
 3003 12ac F0BD     		pop	{r4, r5, r6, r7, pc}
 3004              	.L193:
 3005 12ae 00BF     		.align	2
 3006              	.L192:
 3007 12b0 68000000 		.word	.LC45
 3008 12b4 74000000 		.word	.LC46
 3009 12b8 8C000000 		.word	.LC47
 3010 12bc 94000000 		.word	.LC48
 3011 12c0 04000000 		.word	c_mem+4
 3012 12c4 34000000 		.word	c_mem+52
 3013 12c8 3C000000 		.word	c_mem+60
 3014 12cc 48000000 		.word	c_mem+72
 3015 12d0 58000000 		.word	c_mem+88
 3016 12d4 70000000 		.word	c_mem+112
 3017 12d8 98000000 		.word	c_mem+152
 3018 12dc 10010000 		.word	c_mem+272
 3019              		.cfi_endproc
 3020              	.LFE67:
 3021              		.size	get_param_list, .-get_param_list
 3022              		.global	__aeabi_fmul
 3023              		.global	__aeabi_f2iz
 3024              		.section	.text.manage_param_list,"ax",%progbits
 3025              		.align	2
 3026              		.global	manage_param_list
 3027              		.thumb
 3028              		.thumb_func
 3029              		.type	manage_param_list, %function
 3030              	manage_param_list:
 3031              	.LFB68:
 688:..\src/command_processing.c **** 
 689:..\src/command_processing.c **** //==============================================================================
 690:..\src/command_processing.c **** //                                                             MANAGE PARAM LIST
 691:..\src/command_processing.c **** //==============================================================================
 692:..\src/command_processing.c **** 
 693:..\src/command_processing.c **** void manage_param_list(uint16 index) {
 3032              		.loc 1 693 0
 3033              		.cfi_startproc
 3034              		@ args = 0, pretend = 0, frame = 24
 3035              		@ frame_needed = 1, uses_anonymous_args = 0
 3036 0000 80B5     		push	{r7, lr}
 3037              		.cfi_def_cfa_offset 8
 3038              		.cfi_offset 7, -8
 3039              		.cfi_offset 14, -4
 3040 0002 86B0     		sub	sp, sp, #24
 3041              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 85


 3042 0004 00AF     		add	r7, sp, #0
 3043              		.cfi_def_cfa_register 7
 3044 0006 0346     		mov	r3, r0
 3045 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 694:..\src/command_processing.c ****     uint8 CYDATA i, j;
 695:..\src/command_processing.c ****     uint8 aux_uchar;
 696:..\src/command_processing.c ****     float aux_float, aux_float2;
 697:..\src/command_processing.c ****     
 698:..\src/command_processing.c ****     switch(index) {
 3046              		.loc 1 698 0
 3047 000a FB88     		ldrh	r3, [r7, #6]
 3048 000c 1D2B     		cmp	r3, #29
 3049 000e 00F25A85 		bhi	.L282
 3050 0012 01A2     		adr	r2, .L197
 3051 0014 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3052              		.p2align 2
 3053              	.L197:
 3054 0018 91000000 		.word	.L196+1
 3055 001c 99000000 		.word	.L198+1
 3056 0020 A5000000 		.word	.L199+1
 3057 0024 73020000 		.word	.L200+1
 3058 0028 55040000 		.word	.L201+1
 3059 002c 71040000 		.word	.L202+1
 3060 0030 7D040000 		.word	.L203+1
 3061 0034 89040000 		.word	.L204+1
 3062 0038 B1040000 		.word	.L205+1
 3063 003c 29050000 		.word	.L206+1
 3064 0040 7B050000 		.word	.L207+1
 3065 0044 87050000 		.word	.L208+1
 3066 0048 05060000 		.word	.L209+1
 3067 004c 47060000 		.word	.L210+1
 3068 0050 61060000 		.word	.L211+1
 3069 0054 97060000 		.word	.L212+1
 3070 0058 A3060000 		.word	.L213+1
 3071 005c E9060000 		.word	.L214+1
 3072 0060 F5060000 		.word	.L215+1
 3073 0064 15070000 		.word	.L216+1
 3074 0068 23070000 		.word	.L217+1
 3075 006c 2F070000 		.word	.L218+1
 3076 0070 83070000 		.word	.L219+1
 3077 0074 BB070000 		.word	.L220+1
 3078 0078 EB070000 		.word	.L221+1
 3079 007c 33080000 		.word	.L222+1
 3080 0080 63080000 		.word	.L223+1
 3081 0084 83080000 		.word	.L224+1
 3082 0088 AD080000 		.word	.L225+1
 3083 008c 43090000 		.word	.L226+1
 3084              		.p2align 1
 3085              	.L196:
 699:..\src/command_processing.c ****         case 0:         //List of all parameters with relative types
 700:..\src/command_processing.c ****             get_param_list();
 3086              		.loc 1 700 0
 3087 0090 FFF7FEFF 		bl	get_param_list
 701:..\src/command_processing.c ****         break;
 3088              		.loc 1 701 0
 3089 0094 00F017BD 		b	.L195
 3090              	.L198:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 86


 702:..\src/command_processing.c **** 
 703:..\src/command_processing.c **** //===================================================================     set_id
 704:..\src/command_processing.c ****         case 1:         //ID - uint8
 705:..\src/command_processing.c ****             g_mem.id = g_rx.buffer[3];
 3091              		.loc 1 705 0
 3092 0098 B04B     		ldr	r3, .L283
 3093 009a DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 3094 009c B04B     		ldr	r3, .L283+4
 3095 009e 5A70     		strb	r2, [r3, #1]
 706:..\src/command_processing.c ****         break;
 3096              		.loc 1 706 0
 3097 00a0 00F011BD 		b	.L195
 3098              	.L199:
 707:..\src/command_processing.c ****         
 708:..\src/command_processing.c **** //=======================================================     set_pid_parameters
 709:..\src/command_processing.c ****         case 2:         //Position PID - float[3]
 710:..\src/command_processing.c ****             if(c_mem.control_mode != CURR_AND_POS_CONTROL) {
 3099              		.loc 1 710 0
 3100 00a4 AF4B     		ldr	r3, .L283+8
 3101 00a6 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 3102 00aa 032B     		cmp	r3, #3
 3103 00ac 70D0     		beq	.L227
 711:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 3104              		.loc 1 711 0
 3105 00ae AE4B     		ldr	r3, .L283+12
 3106 00b0 1B68     		ldr	r3, [r3]	@ float
 3107 00b2 3B61     		str	r3, [r7, #16]	@ float
 712:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3108              		.loc 1 712 0
 3109 00b4 0023     		movs	r3, #0
 3110 00b6 BB75     		strb	r3, [r7, #22]
 3111 00b8 0EE0     		b	.L228
 3112              	.L229:
 713:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 3113              		.loc 1 713 0 discriminator 3
 3114 00ba BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3115 00bc C3F10303 		rsb	r3, r3, #3
 3116 00c0 07F10C02 		add	r2, r7, #12
 3117 00c4 1344     		add	r3, r3, r2
 3118 00c6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 3119 00c8 07F11001 		add	r1, r7, #16
 3120 00cc 0A44     		add	r2, r2, r1
 3121 00ce 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3122 00d0 1A70     		strb	r2, [r3]
 712:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3123              		.loc 1 712 0 discriminator 3
 3124 00d2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3125 00d4 0133     		adds	r3, r3, #1
 3126 00d6 BB75     		strb	r3, [r7, #22]
 3127              	.L228:
 712:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3128              		.loc 1 712 0 is_stmt 0 discriminator 1
 3129 00d8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3130 00da 032B     		cmp	r3, #3
 3131 00dc EDD9     		bls	.L229
 714:..\src/command_processing.c ****                 }
 715:..\src/command_processing.c ****                 g_mem.k_p = aux_float2 * 65536;
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 87


 3132              		.loc 1 715 0 is_stmt 1
 3133 00de FB68     		ldr	r3, [r7, #12]	@ float
 3134 00e0 4FF08F41 		mov	r1, #1199570944
 3135 00e4 1846     		mov	r0, r3
 3136 00e6 FFF7FEFF 		bl	__aeabi_fmul
 3137 00ea 0346     		mov	r3, r0
 3138 00ec 1846     		mov	r0, r3
 3139 00ee FFF7FEFF 		bl	__aeabi_f2iz
 3140 00f2 0246     		mov	r2, r0
 3141 00f4 9A4B     		ldr	r3, .L283+4
 3142 00f6 5A60     		str	r2, [r3, #4]
 716:..\src/command_processing.c ****                 //g_mem.k_p = *((float *) &g_rx.buffer[3]) * 65536;
 717:..\src/command_processing.c ****                 
 718:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 3143              		.loc 1 718 0
 3144 00f8 9C4B     		ldr	r3, .L283+16
 3145 00fa 1B68     		ldr	r3, [r3]	@ float
 3146 00fc 3B61     		str	r3, [r7, #16]	@ float
 719:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3147              		.loc 1 719 0
 3148 00fe 0023     		movs	r3, #0
 3149 0100 BB75     		strb	r3, [r7, #22]
 3150 0102 0EE0     		b	.L230
 3151              	.L231:
 720:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 3152              		.loc 1 720 0 discriminator 3
 3153 0104 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3154 0106 C3F10303 		rsb	r3, r3, #3
 3155 010a 07F10C02 		add	r2, r7, #12
 3156 010e 1344     		add	r3, r3, r2
 3157 0110 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 3158 0112 07F11001 		add	r1, r7, #16
 3159 0116 0A44     		add	r2, r2, r1
 3160 0118 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3161 011a 1A70     		strb	r2, [r3]
 719:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3162              		.loc 1 719 0 discriminator 3
 3163 011c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3164 011e 0133     		adds	r3, r3, #1
 3165 0120 BB75     		strb	r3, [r7, #22]
 3166              	.L230:
 719:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3167              		.loc 1 719 0 is_stmt 0 discriminator 1
 3168 0122 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3169 0124 032B     		cmp	r3, #3
 3170 0126 EDD9     		bls	.L231
 721:..\src/command_processing.c ****                 }
 722:..\src/command_processing.c ****                 g_mem.k_i = aux_float2 * 65536;
 3171              		.loc 1 722 0 is_stmt 1
 3172 0128 FB68     		ldr	r3, [r7, #12]	@ float
 3173 012a 4FF08F41 		mov	r1, #1199570944
 3174 012e 1846     		mov	r0, r3
 3175 0130 FFF7FEFF 		bl	__aeabi_fmul
 3176 0134 0346     		mov	r3, r0
 3177 0136 1846     		mov	r0, r3
 3178 0138 FFF7FEFF 		bl	__aeabi_f2iz
 3179 013c 0246     		mov	r2, r0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 88


 3180 013e 884B     		ldr	r3, .L283+4
 3181 0140 9A60     		str	r2, [r3, #8]
 723:..\src/command_processing.c ****                 //g_mem.k_i = *((float *) &g_rx.buffer[3 + 4]) * 65536;
 724:..\src/command_processing.c ****                 
 725:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 3182              		.loc 1 725 0
 3183 0142 8B4B     		ldr	r3, .L283+20
 3184 0144 1B68     		ldr	r3, [r3]	@ float
 3185 0146 3B61     		str	r3, [r7, #16]	@ float
 726:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3186              		.loc 1 726 0
 3187 0148 0023     		movs	r3, #0
 3188 014a BB75     		strb	r3, [r7, #22]
 3189 014c 0EE0     		b	.L232
 3190              	.L233:
 727:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 3191              		.loc 1 727 0 discriminator 3
 3192 014e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3193 0150 C3F10303 		rsb	r3, r3, #3
 3194 0154 07F10C02 		add	r2, r7, #12
 3195 0158 1344     		add	r3, r3, r2
 3196 015a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 3197 015c 07F11001 		add	r1, r7, #16
 3198 0160 0A44     		add	r2, r2, r1
 3199 0162 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3200 0164 1A70     		strb	r2, [r3]
 726:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3201              		.loc 1 726 0 discriminator 3
 3202 0166 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3203 0168 0133     		adds	r3, r3, #1
 3204 016a BB75     		strb	r3, [r7, #22]
 3205              	.L232:
 726:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3206              		.loc 1 726 0 is_stmt 0 discriminator 1
 3207 016c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3208 016e 032B     		cmp	r3, #3
 3209 0170 EDD9     		bls	.L233
 728:..\src/command_processing.c ****                 }
 729:..\src/command_processing.c ****                 g_mem.k_d = aux_float2 * 65536;
 3210              		.loc 1 729 0 is_stmt 1
 3211 0172 FB68     		ldr	r3, [r7, #12]	@ float
 3212 0174 4FF08F41 		mov	r1, #1199570944
 3213 0178 1846     		mov	r0, r3
 3214 017a FFF7FEFF 		bl	__aeabi_fmul
 3215 017e 0346     		mov	r3, r0
 3216 0180 1846     		mov	r0, r3
 3217 0182 FFF7FEFF 		bl	__aeabi_f2iz
 3218 0186 0246     		mov	r2, r0
 3219 0188 754B     		ldr	r3, .L283+4
 3220 018a DA60     		str	r2, [r3, #12]
 730:..\src/command_processing.c ****                 //g_mem.k_d = *((float *) &g_rx.buffer[3 + 8]) * 65536;
 731:..\src/command_processing.c ****             }
 732:..\src/command_processing.c ****             else {
 733:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 734:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 735:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 736:..\src/command_processing.c ****                 }
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 89


 737:..\src/command_processing.c ****                 g_mem.k_p_dl = aux_float2 * 65536;
 738:..\src/command_processing.c ****                 //g_mem.k_p_dl = *((float *) &g_rx.buffer[3]) * 65536;
 739:..\src/command_processing.c ****                 
 740:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 741:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 742:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 743:..\src/command_processing.c ****                 }
 744:..\src/command_processing.c ****                 g_mem.k_i_dl = aux_float2 * 65536;
 745:..\src/command_processing.c ****                 //g_mem.k_i_dl = *((float *) &g_rx.buffer[3 + 4]);
 746:..\src/command_processing.c ****                 
 747:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 748:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 749:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 750:..\src/command_processing.c ****                 }
 751:..\src/command_processing.c ****                 g_mem.k_d_dl = aux_float2 * 65536;
 752:..\src/command_processing.c ****                 //g_mem.k_d_dl = *((float *) &g_rx.buffer[3 + 8]) * 65536;
 753:..\src/command_processing.c ****             }
 754:..\src/command_processing.c ****         break;
 3221              		.loc 1 754 0
 3222 018c 00F09BBC 		b	.L195
 3223              	.L227:
 733:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3224              		.loc 1 733 0
 3225 0190 754B     		ldr	r3, .L283+12
 3226 0192 1B68     		ldr	r3, [r3]	@ float
 3227 0194 3B61     		str	r3, [r7, #16]	@ float
 734:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 3228              		.loc 1 734 0
 3229 0196 0023     		movs	r3, #0
 3230 0198 BB75     		strb	r3, [r7, #22]
 3231 019a 0EE0     		b	.L235
 3232              	.L236:
 735:..\src/command_processing.c ****                 }
 3233              		.loc 1 735 0 discriminator 3
 3234 019c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3235 019e C3F10303 		rsb	r3, r3, #3
 3236 01a2 07F10C02 		add	r2, r7, #12
 3237 01a6 1344     		add	r3, r3, r2
 3238 01a8 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 3239 01aa 07F11001 		add	r1, r7, #16
 3240 01ae 0A44     		add	r2, r2, r1
 3241 01b0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3242 01b2 1A70     		strb	r2, [r3]
 734:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 3243              		.loc 1 734 0 discriminator 3
 3244 01b4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3245 01b6 0133     		adds	r3, r3, #1
 3246 01b8 BB75     		strb	r3, [r7, #22]
 3247              	.L235:
 734:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 3248              		.loc 1 734 0 is_stmt 0 discriminator 1
 3249 01ba BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3250 01bc 032B     		cmp	r3, #3
 3251 01be EDD9     		bls	.L236
 737:..\src/command_processing.c ****                 //g_mem.k_p_dl = *((float *) &g_rx.buffer[3]) * 65536;
 3252              		.loc 1 737 0 is_stmt 1
 3253 01c0 FB68     		ldr	r3, [r7, #12]	@ float
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 90


 3254 01c2 4FF08F41 		mov	r1, #1199570944
 3255 01c6 1846     		mov	r0, r3
 3256 01c8 FFF7FEFF 		bl	__aeabi_fmul
 3257 01cc 0346     		mov	r3, r0
 3258 01ce 1846     		mov	r0, r3
 3259 01d0 FFF7FEFF 		bl	__aeabi_f2iz
 3260 01d4 0246     		mov	r2, r0
 3261 01d6 624B     		ldr	r3, .L283+4
 3262 01d8 DA61     		str	r2, [r3, #28]
 740:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3263              		.loc 1 740 0
 3264 01da 644B     		ldr	r3, .L283+16
 3265 01dc 1B68     		ldr	r3, [r3]	@ float
 3266 01de 3B61     		str	r3, [r7, #16]	@ float
 741:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 3267              		.loc 1 741 0
 3268 01e0 0023     		movs	r3, #0
 3269 01e2 BB75     		strb	r3, [r7, #22]
 3270 01e4 0EE0     		b	.L237
 3271              	.L238:
 742:..\src/command_processing.c ****                 }
 3272              		.loc 1 742 0 discriminator 3
 3273 01e6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3274 01e8 C3F10303 		rsb	r3, r3, #3
 3275 01ec 07F10C02 		add	r2, r7, #12
 3276 01f0 1344     		add	r3, r3, r2
 3277 01f2 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 3278 01f4 07F11001 		add	r1, r7, #16
 3279 01f8 0A44     		add	r2, r2, r1
 3280 01fa 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3281 01fc 1A70     		strb	r2, [r3]
 741:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 3282              		.loc 1 741 0 discriminator 3
 3283 01fe BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3284 0200 0133     		adds	r3, r3, #1
 3285 0202 BB75     		strb	r3, [r7, #22]
 3286              	.L237:
 741:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 3287              		.loc 1 741 0 is_stmt 0 discriminator 1
 3288 0204 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3289 0206 032B     		cmp	r3, #3
 3290 0208 EDD9     		bls	.L238
 744:..\src/command_processing.c ****                 //g_mem.k_i_dl = *((float *) &g_rx.buffer[3 + 4]);
 3291              		.loc 1 744 0 is_stmt 1
 3292 020a FB68     		ldr	r3, [r7, #12]	@ float
 3293 020c 4FF08F41 		mov	r1, #1199570944
 3294 0210 1846     		mov	r0, r3
 3295 0212 FFF7FEFF 		bl	__aeabi_fmul
 3296 0216 0346     		mov	r3, r0
 3297 0218 1846     		mov	r0, r3
 3298 021a FFF7FEFF 		bl	__aeabi_f2iz
 3299 021e 0246     		mov	r2, r0
 3300 0220 4F4B     		ldr	r3, .L283+4
 3301 0222 1A62     		str	r2, [r3, #32]
 747:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3302              		.loc 1 747 0
 3303 0224 524B     		ldr	r3, .L283+20
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 91


 3304 0226 1B68     		ldr	r3, [r3]	@ float
 3305 0228 3B61     		str	r3, [r7, #16]	@ float
 748:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 3306              		.loc 1 748 0
 3307 022a 0023     		movs	r3, #0
 3308 022c BB75     		strb	r3, [r7, #22]
 3309 022e 0EE0     		b	.L239
 3310              	.L240:
 749:..\src/command_processing.c ****                 }
 3311              		.loc 1 749 0 discriminator 3
 3312 0230 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3313 0232 C3F10303 		rsb	r3, r3, #3
 3314 0236 07F10C02 		add	r2, r7, #12
 3315 023a 1344     		add	r3, r3, r2
 3316 023c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 3317 023e 07F11001 		add	r1, r7, #16
 3318 0242 0A44     		add	r2, r2, r1
 3319 0244 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3320 0246 1A70     		strb	r2, [r3]
 748:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 3321              		.loc 1 748 0 discriminator 3
 3322 0248 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3323 024a 0133     		adds	r3, r3, #1
 3324 024c BB75     		strb	r3, [r7, #22]
 3325              	.L239:
 748:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 3326              		.loc 1 748 0 is_stmt 0 discriminator 1
 3327 024e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3328 0250 032B     		cmp	r3, #3
 3329 0252 EDD9     		bls	.L240
 751:..\src/command_processing.c ****                 //g_mem.k_d_dl = *((float *) &g_rx.buffer[3 + 8]) * 65536;
 3330              		.loc 1 751 0 is_stmt 1
 3331 0254 FB68     		ldr	r3, [r7, #12]	@ float
 3332 0256 4FF08F41 		mov	r1, #1199570944
 3333 025a 1846     		mov	r0, r3
 3334 025c FFF7FEFF 		bl	__aeabi_fmul
 3335 0260 0346     		mov	r3, r0
 3336 0262 1846     		mov	r0, r3
 3337 0264 FFF7FEFF 		bl	__aeabi_f2iz
 3338 0268 0246     		mov	r2, r0
 3339 026a 3D4B     		ldr	r3, .L283+4
 3340 026c 5A62     		str	r2, [r3, #36]
 3341              		.loc 1 754 0
 3342 026e 00F02ABC 		b	.L195
 3343              	.L200:
 755:..\src/command_processing.c **** 
 756:..\src/command_processing.c **** //==================================================     set_curr_pid_parameters
 757:..\src/command_processing.c ****         case 3:         //Current PID - float[3]
 758:..\src/command_processing.c ****             if(c_mem.control_mode != CURR_AND_POS_CONTROL) {
 3344              		.loc 1 758 0
 3345 0272 3C4B     		ldr	r3, .L283+8
 3346 0274 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 3347 0278 032B     		cmp	r3, #3
 3348 027a 7BD0     		beq	.L241
 759:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 3349              		.loc 1 759 0
 3350 027c 3A4B     		ldr	r3, .L283+12
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 92


 3351 027e 1B68     		ldr	r3, [r3]	@ float
 3352 0280 3B61     		str	r3, [r7, #16]	@ float
 760:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3353              		.loc 1 760 0
 3354 0282 0023     		movs	r3, #0
 3355 0284 BB75     		strb	r3, [r7, #22]
 3356 0286 0EE0     		b	.L242
 3357              	.L243:
 761:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 3358              		.loc 1 761 0 discriminator 3
 3359 0288 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3360 028a C3F10303 		rsb	r3, r3, #3
 3361 028e 07F10C02 		add	r2, r7, #12
 3362 0292 1344     		add	r3, r3, r2
 3363 0294 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 3364 0296 07F11001 		add	r1, r7, #16
 3365 029a 0A44     		add	r2, r2, r1
 3366 029c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3367 029e 1A70     		strb	r2, [r3]
 760:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3368              		.loc 1 760 0 discriminator 3
 3369 02a0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3370 02a2 0133     		adds	r3, r3, #1
 3371 02a4 BB75     		strb	r3, [r7, #22]
 3372              	.L242:
 760:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3373              		.loc 1 760 0 is_stmt 0 discriminator 1
 3374 02a6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3375 02a8 032B     		cmp	r3, #3
 3376 02aa EDD9     		bls	.L243
 762:..\src/command_processing.c ****                 }
 763:..\src/command_processing.c ****                 g_mem.k_p_c = aux_float2 * 65536;
 3377              		.loc 1 763 0 is_stmt 1
 3378 02ac FB68     		ldr	r3, [r7, #12]	@ float
 3379 02ae 4FF08F41 		mov	r1, #1199570944
 3380 02b2 1846     		mov	r0, r3
 3381 02b4 FFF7FEFF 		bl	__aeabi_fmul
 3382 02b8 0346     		mov	r3, r0
 3383 02ba 1846     		mov	r0, r3
 3384 02bc FFF7FEFF 		bl	__aeabi_f2iz
 3385 02c0 0246     		mov	r2, r0
 3386 02c2 274B     		ldr	r3, .L283+4
 3387 02c4 1A61     		str	r2, [r3, #16]
 764:..\src/command_processing.c ****                 //g_mem.k_p_c = *((float *) &g_rx.buffer[3]) * 65536;
 765:..\src/command_processing.c ****                 
 766:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 3388              		.loc 1 766 0
 3389 02c6 294B     		ldr	r3, .L283+16
 3390 02c8 1B68     		ldr	r3, [r3]	@ float
 3391 02ca 3B61     		str	r3, [r7, #16]	@ float
 767:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3392              		.loc 1 767 0
 3393 02cc 0023     		movs	r3, #0
 3394 02ce BB75     		strb	r3, [r7, #22]
 3395 02d0 0EE0     		b	.L244
 3396              	.L245:
 768:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 93


 3397              		.loc 1 768 0 discriminator 3
 3398 02d2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3399 02d4 C3F10303 		rsb	r3, r3, #3
 3400 02d8 07F10C02 		add	r2, r7, #12
 3401 02dc 1344     		add	r3, r3, r2
 3402 02de BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 3403 02e0 07F11001 		add	r1, r7, #16
 3404 02e4 0A44     		add	r2, r2, r1
 3405 02e6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3406 02e8 1A70     		strb	r2, [r3]
 767:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3407              		.loc 1 767 0 discriminator 3
 3408 02ea BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3409 02ec 0133     		adds	r3, r3, #1
 3410 02ee BB75     		strb	r3, [r7, #22]
 3411              	.L244:
 767:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3412              		.loc 1 767 0 is_stmt 0 discriminator 1
 3413 02f0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3414 02f2 032B     		cmp	r3, #3
 3415 02f4 EDD9     		bls	.L245
 769:..\src/command_processing.c ****                 }
 770:..\src/command_processing.c ****                 g_mem.k_i_c = aux_float2 * 65536;
 3416              		.loc 1 770 0 is_stmt 1
 3417 02f6 FB68     		ldr	r3, [r7, #12]	@ float
 3418 02f8 4FF08F41 		mov	r1, #1199570944
 3419 02fc 1846     		mov	r0, r3
 3420 02fe FFF7FEFF 		bl	__aeabi_fmul
 3421 0302 0346     		mov	r3, r0
 3422 0304 1846     		mov	r0, r3
 3423 0306 FFF7FEFF 		bl	__aeabi_f2iz
 3424 030a 0246     		mov	r2, r0
 3425 030c 144B     		ldr	r3, .L283+4
 3426 030e 5A61     		str	r2, [r3, #20]
 771:..\src/command_processing.c ****                 //g_mem.k_i_c = *((float *) &g_rx.buffer[3 + 4]) * 65536;
 772:..\src/command_processing.c ****                 
 773:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 3427              		.loc 1 773 0
 3428 0310 174B     		ldr	r3, .L283+20
 3429 0312 1B68     		ldr	r3, [r3]	@ float
 3430 0314 3B61     		str	r3, [r7, #16]	@ float
 774:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3431              		.loc 1 774 0
 3432 0316 0023     		movs	r3, #0
 3433 0318 BB75     		strb	r3, [r7, #22]
 3434 031a 0EE0     		b	.L246
 3435              	.L247:
 775:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 3436              		.loc 1 775 0 discriminator 3
 3437 031c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3438 031e C3F10303 		rsb	r3, r3, #3
 3439 0322 07F10C02 		add	r2, r7, #12
 3440 0326 1344     		add	r3, r3, r2
 3441 0328 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 3442 032a 07F11001 		add	r1, r7, #16
 3443 032e 0A44     		add	r2, r2, r1
 3444 0330 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 94


 3445 0332 1A70     		strb	r2, [r3]
 774:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3446              		.loc 1 774 0 discriminator 3
 3447 0334 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3448 0336 0133     		adds	r3, r3, #1
 3449 0338 BB75     		strb	r3, [r7, #22]
 3450              	.L246:
 774:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3451              		.loc 1 774 0 is_stmt 0 discriminator 1
 3452 033a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3453 033c 032B     		cmp	r3, #3
 3454 033e EDD9     		bls	.L247
 776:..\src/command_processing.c ****                 }
 777:..\src/command_processing.c ****                 g_mem.k_d_c = aux_float2 * 65536;
 3455              		.loc 1 777 0 is_stmt 1
 3456 0340 FB68     		ldr	r3, [r7, #12]	@ float
 3457 0342 4FF08F41 		mov	r1, #1199570944
 3458 0346 1846     		mov	r0, r3
 3459 0348 FFF7FEFF 		bl	__aeabi_fmul
 3460 034c 0346     		mov	r3, r0
 3461 034e 1846     		mov	r0, r3
 3462 0350 FFF7FEFF 		bl	__aeabi_f2iz
 3463 0354 0246     		mov	r2, r0
 3464 0356 024B     		ldr	r3, .L283+4
 3465 0358 9A61     		str	r2, [r3, #24]
 778:..\src/command_processing.c ****                 //g_mem.k_d_c = *((float *) &g_rx.buffer[3 + 8]) * 65536;
 779:..\src/command_processing.c ****             }
 780:..\src/command_processing.c ****             else {
 781:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 782:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 783:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 784:..\src/command_processing.c ****                 }
 785:..\src/command_processing.c ****                 g_mem.k_p_c_dl = aux_float2 * 65536;
 786:..\src/command_processing.c ****                 //g_mem.k_p_c_dl = *((float *) &g_rx.buffer[3]) * 65536;
 787:..\src/command_processing.c ****                 
 788:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 789:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 790:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 791:..\src/command_processing.c ****                 }
 792:..\src/command_processing.c ****                 g_mem.k_i_c_dl = aux_float2 * 65536;
 793:..\src/command_processing.c ****                 //g_mem.k_i_c_dl = *((float *) &g_rx.buffer[3 + 4]) * 65536;
 794:..\src/command_processing.c ****                 
 795:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 796:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 797:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 798:..\src/command_processing.c ****                 }
 799:..\src/command_processing.c ****                 g_mem.k_d_c_dl = aux_float2 * 65536;
 800:..\src/command_processing.c ****                 //g_mem.k_d_c_dl = *((float *) &g_rx.buffer[3 + 8]) * 65536;
 801:..\src/command_processing.c ****             }
 802:..\src/command_processing.c ****             
 803:..\src/command_processing.c ****         break;
 3466              		.loc 1 803 0
 3467 035a B4E3     		b	.L195
 3468              	.L284:
 3469              		.align	2
 3470              	.L283:
 3471 035c 00000000 		.word	g_rx
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 95


 3472 0360 00000000 		.word	g_mem
 3473 0364 00000000 		.word	c_mem
 3474 0368 03000000 		.word	g_rx+3
 3475 036c 07000000 		.word	g_rx+7
 3476 0370 0B000000 		.word	g_rx+11
 3477              	.L241:
 781:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3478              		.loc 1 781 0
 3479 0374 9C4B     		ldr	r3, .L285
 3480 0376 1B68     		ldr	r3, [r3]	@ float
 3481 0378 3B61     		str	r3, [r7, #16]	@ float
 782:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 3482              		.loc 1 782 0
 3483 037a 0023     		movs	r3, #0
 3484 037c BB75     		strb	r3, [r7, #22]
 3485 037e 0EE0     		b	.L249
 3486              	.L250:
 783:..\src/command_processing.c ****                 }
 3487              		.loc 1 783 0 discriminator 3
 3488 0380 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3489 0382 C3F10303 		rsb	r3, r3, #3
 3490 0386 07F10C02 		add	r2, r7, #12
 3491 038a 1344     		add	r3, r3, r2
 3492 038c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 3493 038e 07F11001 		add	r1, r7, #16
 3494 0392 0A44     		add	r2, r2, r1
 3495 0394 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3496 0396 1A70     		strb	r2, [r3]
 782:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 3497              		.loc 1 782 0 discriminator 3
 3498 0398 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3499 039a 0133     		adds	r3, r3, #1
 3500 039c BB75     		strb	r3, [r7, #22]
 3501              	.L249:
 782:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 3502              		.loc 1 782 0 is_stmt 0 discriminator 1
 3503 039e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3504 03a0 032B     		cmp	r3, #3
 3505 03a2 EDD9     		bls	.L250
 785:..\src/command_processing.c ****                 //g_mem.k_p_c_dl = *((float *) &g_rx.buffer[3]) * 65536;
 3506              		.loc 1 785 0 is_stmt 1
 3507 03a4 FB68     		ldr	r3, [r7, #12]	@ float
 3508 03a6 4FF08F41 		mov	r1, #1199570944
 3509 03aa 1846     		mov	r0, r3
 3510 03ac FFF7FEFF 		bl	__aeabi_fmul
 3511 03b0 0346     		mov	r3, r0
 3512 03b2 1846     		mov	r0, r3
 3513 03b4 FFF7FEFF 		bl	__aeabi_f2iz
 3514 03b8 0246     		mov	r2, r0
 3515 03ba 8C4B     		ldr	r3, .L285+4
 3516 03bc 9A62     		str	r2, [r3, #40]
 788:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3517              		.loc 1 788 0
 3518 03be 8C4B     		ldr	r3, .L285+8
 3519 03c0 1B68     		ldr	r3, [r3]	@ float
 3520 03c2 3B61     		str	r3, [r7, #16]	@ float
 789:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 96


 3521              		.loc 1 789 0
 3522 03c4 0023     		movs	r3, #0
 3523 03c6 BB75     		strb	r3, [r7, #22]
 3524 03c8 0EE0     		b	.L251
 3525              	.L252:
 790:..\src/command_processing.c ****                 }
 3526              		.loc 1 790 0 discriminator 3
 3527 03ca BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3528 03cc C3F10303 		rsb	r3, r3, #3
 3529 03d0 07F10C02 		add	r2, r7, #12
 3530 03d4 1344     		add	r3, r3, r2
 3531 03d6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 3532 03d8 07F11001 		add	r1, r7, #16
 3533 03dc 0A44     		add	r2, r2, r1
 3534 03de 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3535 03e0 1A70     		strb	r2, [r3]
 789:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 3536              		.loc 1 789 0 discriminator 3
 3537 03e2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3538 03e4 0133     		adds	r3, r3, #1
 3539 03e6 BB75     		strb	r3, [r7, #22]
 3540              	.L251:
 789:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 3541              		.loc 1 789 0 is_stmt 0 discriminator 1
 3542 03e8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3543 03ea 032B     		cmp	r3, #3
 3544 03ec EDD9     		bls	.L252
 792:..\src/command_processing.c ****                 //g_mem.k_i_c_dl = *((float *) &g_rx.buffer[3 + 4]) * 65536;
 3545              		.loc 1 792 0 is_stmt 1
 3546 03ee FB68     		ldr	r3, [r7, #12]	@ float
 3547 03f0 4FF08F41 		mov	r1, #1199570944
 3548 03f4 1846     		mov	r0, r3
 3549 03f6 FFF7FEFF 		bl	__aeabi_fmul
 3550 03fa 0346     		mov	r3, r0
 3551 03fc 1846     		mov	r0, r3
 3552 03fe FFF7FEFF 		bl	__aeabi_f2iz
 3553 0402 0246     		mov	r2, r0
 3554 0404 794B     		ldr	r3, .L285+4
 3555 0406 DA62     		str	r2, [r3, #44]
 795:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3556              		.loc 1 795 0
 3557 0408 7A4B     		ldr	r3, .L285+12
 3558 040a 1B68     		ldr	r3, [r3]	@ float
 3559 040c 3B61     		str	r3, [r7, #16]	@ float
 796:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 3560              		.loc 1 796 0
 3561 040e 0023     		movs	r3, #0
 3562 0410 BB75     		strb	r3, [r7, #22]
 3563 0412 0EE0     		b	.L253
 3564              	.L254:
 797:..\src/command_processing.c ****                 }
 3565              		.loc 1 797 0 discriminator 3
 3566 0414 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3567 0416 C3F10303 		rsb	r3, r3, #3
 3568 041a 07F10C02 		add	r2, r7, #12
 3569 041e 1344     		add	r3, r3, r2
 3570 0420 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 97


 3571 0422 07F11001 		add	r1, r7, #16
 3572 0426 0A44     		add	r2, r2, r1
 3573 0428 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3574 042a 1A70     		strb	r2, [r3]
 796:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 3575              		.loc 1 796 0 discriminator 3
 3576 042c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3577 042e 0133     		adds	r3, r3, #1
 3578 0430 BB75     		strb	r3, [r7, #22]
 3579              	.L253:
 796:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 3580              		.loc 1 796 0 is_stmt 0 discriminator 1
 3581 0432 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3582 0434 032B     		cmp	r3, #3
 3583 0436 EDD9     		bls	.L254
 799:..\src/command_processing.c ****                 //g_mem.k_d_c_dl = *((float *) &g_rx.buffer[3 + 8]) * 65536;
 3584              		.loc 1 799 0 is_stmt 1
 3585 0438 FB68     		ldr	r3, [r7, #12]	@ float
 3586 043a 4FF08F41 		mov	r1, #1199570944
 3587 043e 1846     		mov	r0, r3
 3588 0440 FFF7FEFF 		bl	__aeabi_fmul
 3589 0444 0346     		mov	r3, r0
 3590 0446 1846     		mov	r0, r3
 3591 0448 FFF7FEFF 		bl	__aeabi_f2iz
 3592 044c 0246     		mov	r2, r0
 3593 044e 674B     		ldr	r3, .L285+4
 3594 0450 1A63     		str	r2, [r3, #48]
 3595              		.loc 1 803 0
 3596 0452 38E3     		b	.L195
 3597              	.L201:
 804:..\src/command_processing.c **** 
 805:..\src/command_processing.c **** //===================================================     set_startup_activation        
 806:..\src/command_processing.c ****         case 4:         //Startup flag - uint8
 807:..\src/command_processing.c ****             if(g_rx.buffer[3])
 3598              		.loc 1 807 0
 3599 0454 684B     		ldr	r3, .L285+16
 3600 0456 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 3601 0458 002B     		cmp	r3, #0
 3602 045a 04D0     		beq	.L255
 808:..\src/command_processing.c ****                 g_mem.activ = 0x01;
 3603              		.loc 1 808 0
 3604 045c 634B     		ldr	r3, .L285+4
 3605 045e 0122     		movs	r2, #1
 3606 0460 83F83420 		strb	r2, [r3, #52]
 809:..\src/command_processing.c ****             else
 810:..\src/command_processing.c ****                 g_mem.activ = 0x00;
 811:..\src/command_processing.c ****         break;
 3607              		.loc 1 811 0
 3608 0464 2FE3     		b	.L195
 3609              	.L255:
 810:..\src/command_processing.c ****         break;
 3610              		.loc 1 810 0
 3611 0466 614B     		ldr	r3, .L285+4
 3612 0468 0022     		movs	r2, #0
 3613 046a 83F83420 		strb	r2, [r3, #52]
 3614              		.loc 1 811 0
 3615 046e 2AE3     		b	.L195
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 98


 3616              	.L202:
 812:..\src/command_processing.c **** 
 813:..\src/command_processing.c **** //===========================================================     set_input_mode        
 814:..\src/command_processing.c ****         case 5:         //Input mode - uint8
 815:..\src/command_processing.c ****             g_mem.input_mode = g_rx.buffer[3];
 3617              		.loc 1 815 0
 3618 0470 614B     		ldr	r3, .L285+16
 3619 0472 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 3620 0474 5D4B     		ldr	r3, .L285+4
 3621 0476 83F83520 		strb	r2, [r3, #53]
 816:..\src/command_processing.c ****         break;
 3622              		.loc 1 816 0
 3623 047a 24E3     		b	.L195
 3624              	.L203:
 817:..\src/command_processing.c ****         
 818:..\src/command_processing.c **** //=========================================================     set_control_mode
 819:..\src/command_processing.c ****         case 6:         //Control mode - uint8
 820:..\src/command_processing.c ****             g_mem.control_mode = g_rx.buffer[3];
 3625              		.loc 1 820 0
 3626 047c 5E4B     		ldr	r3, .L285+16
 3627 047e DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 3628 0480 5A4B     		ldr	r3, .L285+4
 3629 0482 83F83620 		strb	r2, [r3, #54]
 821:..\src/command_processing.c ****         break;
 3630              		.loc 1 821 0
 3631 0486 1EE3     		b	.L195
 3632              	.L204:
 822:..\src/command_processing.c ****         
 823:..\src/command_processing.c **** //===========================================================     set_resolution
 824:..\src/command_processing.c ****         case 7:         //Resolution - uint8[3]
 825:..\src/command_processing.c ****             for (i =0; i < NUM_OF_SENSORS; i++) {
 3633              		.loc 1 825 0
 3634 0488 0023     		movs	r3, #0
 3635 048a FB75     		strb	r3, [r7, #23]
 3636 048c 0CE0     		b	.L257
 3637              	.L258:
 826:..\src/command_processing.c ****                 g_mem.res[i] = g_rx.buffer[i+3];
 3638              		.loc 1 826 0 discriminator 3
 3639 048e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3640 0490 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 3641 0492 0332     		adds	r2, r2, #3
 3642 0494 5849     		ldr	r1, .L285+16
 3643 0496 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 3644 0498 544A     		ldr	r2, .L285+4
 3645 049a 1344     		add	r3, r3, r2
 3646 049c 0A46     		mov	r2, r1
 3647 049e 83F83720 		strb	r2, [r3, #55]
 825:..\src/command_processing.c ****                 g_mem.res[i] = g_rx.buffer[i+3];
 3648              		.loc 1 825 0 discriminator 3
 3649 04a2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3650 04a4 0133     		adds	r3, r3, #1
 3651 04a6 FB75     		strb	r3, [r7, #23]
 3652              	.L257:
 825:..\src/command_processing.c ****                 g_mem.res[i] = g_rx.buffer[i+3];
 3653              		.loc 1 825 0 is_stmt 0 discriminator 1
 3654 04a8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3655 04aa 022B     		cmp	r3, #2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 99


 3656 04ac EFD9     		bls	.L258
 827:..\src/command_processing.c ****             }
 828:..\src/command_processing.c ****         break;
 3657              		.loc 1 828 0 is_stmt 1
 3658 04ae 0AE3     		b	.L195
 3659              	.L205:
 829:..\src/command_processing.c ****         
 830:..\src/command_processing.c **** //===============================================================     set_offset
 831:..\src/command_processing.c ****         case 8:         //Measurement Offset - int32[3] 
 832:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; ++i) {
 3660              		.loc 1 832 0
 3661 04b0 0023     		movs	r3, #0
 3662 04b2 FB75     		strb	r3, [r7, #23]
 3663 04b4 31E0     		b	.L259
 3664              	.L260:
 833:..\src/command_processing.c ****                 g_mem.m_off[i] = (int16)(g_rx.buffer[3 + i*2]<<8 | g_rx.buffer[4 + i*2]);
 3665              		.loc 1 833 0 discriminator 3
 3666 04b6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3667 04b8 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 3668 04ba 5200     		lsls	r2, r2, #1
 3669 04bc 0332     		adds	r2, r2, #3
 3670 04be 4E49     		ldr	r1, .L285+16
 3671 04c0 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 3672 04c2 1202     		lsls	r2, r2, #8
 3673 04c4 11B2     		sxth	r1, r2
 3674 04c6 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 3675 04c8 0232     		adds	r2, r2, #2
 3676 04ca 5200     		lsls	r2, r2, #1
 3677 04cc 4A48     		ldr	r0, .L285+16
 3678 04ce 825C     		ldrb	r2, [r0, r2]	@ zero_extendqisi2
 3679 04d0 12B2     		sxth	r2, r2
 3680 04d2 0A43     		orrs	r2, r2, r1
 3681 04d4 12B2     		sxth	r2, r2
 3682 04d6 1146     		mov	r1, r2
 3683 04d8 444A     		ldr	r2, .L285+4
 3684 04da 0E33     		adds	r3, r3, #14
 3685 04dc 9B00     		lsls	r3, r3, #2
 3686 04de 1344     		add	r3, r3, r2
 3687 04e0 5960     		str	r1, [r3, #4]
 834:..\src/command_processing.c ****                 //g_mem.m_off[i] = *((int16 *) &g_rx.buffer[3 + i * 2]);
 835:..\src/command_processing.c ****                 g_mem.m_off[i] = g_mem.m_off[i] << g_mem.res[i];
 3688              		.loc 1 835 0 discriminator 3
 3689 04e2 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 3690 04e4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3691 04e6 414A     		ldr	r2, .L285+4
 3692 04e8 0E33     		adds	r3, r3, #14
 3693 04ea 9B00     		lsls	r3, r3, #2
 3694 04ec 1344     		add	r3, r3, r2
 3695 04ee 5B68     		ldr	r3, [r3, #4]
 3696 04f0 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 3697 04f2 3E48     		ldr	r0, .L285+4
 3698 04f4 0244     		add	r2, r2, r0
 3699 04f6 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 3700 04fa 03FA02F2 		lsl	r2, r3, r2
 3701 04fe 3B48     		ldr	r0, .L285+4
 3702 0500 01F10E03 		add	r3, r1, #14
 3703 0504 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 100


 3704 0506 0344     		add	r3, r3, r0
 3705 0508 5A60     		str	r2, [r3, #4]
 836:..\src/command_processing.c **** 
 837:..\src/command_processing.c ****                 g_meas.rot[i] = 0;
 3706              		.loc 1 837 0 discriminator 3
 3707 050a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3708 050c 3B4A     		ldr	r2, .L285+20
 3709 050e 1344     		add	r3, r3, r2
 3710 0510 0022     		movs	r2, #0
 3711 0512 1A75     		strb	r2, [r3, #20]
 832:..\src/command_processing.c ****                 g_mem.m_off[i] = (int16)(g_rx.buffer[3 + i*2]<<8 | g_rx.buffer[4 + i*2]);
 3712              		.loc 1 832 0 discriminator 3
 3713 0514 FB7D     		ldrb	r3, [r7, #23]
 3714 0516 0133     		adds	r3, r3, #1
 3715 0518 FB75     		strb	r3, [r7, #23]
 3716              	.L259:
 832:..\src/command_processing.c ****                 g_mem.m_off[i] = (int16)(g_rx.buffer[3 + i*2]<<8 | g_rx.buffer[4 + i*2]);
 3717              		.loc 1 832 0 is_stmt 0 discriminator 1
 3718 051a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3719 051c 022B     		cmp	r3, #2
 3720 051e CAD9     		bls	.L260
 838:..\src/command_processing.c ****             }
 839:..\src/command_processing.c ****             reset_last_value_flag = 1;
 3721              		.loc 1 839 0 is_stmt 1
 3722 0520 374B     		ldr	r3, .L285+24
 3723 0522 0122     		movs	r2, #1
 3724 0524 1A70     		strb	r2, [r3]
 840:..\src/command_processing.c ****         break;
 3725              		.loc 1 840 0
 3726 0526 CEE2     		b	.L195
 3727              	.L206:
 841:..\src/command_processing.c ****         
 842:..\src/command_processing.c **** //===========================================================     set_multiplier
 843:..\src/command_processing.c ****         case 9:         //Multipliers - float[3]
 844:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; ++i){
 3728              		.loc 1 844 0
 3729 0528 0023     		movs	r3, #0
 3730 052a FB75     		strb	r3, [r7, #23]
 3731 052c 21E0     		b	.L261
 3732              	.L264:
 845:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + i*4]);
 3733              		.loc 1 845 0
 3734 052e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3735 0530 9B00     		lsls	r3, r3, #2
 3736 0532 0333     		adds	r3, r3, #3
 3737 0534 304A     		ldr	r2, .L285+16
 3738 0536 1344     		add	r3, r3, r2
 3739 0538 1B68     		ldr	r3, [r3]	@ float
 3740 053a 3B61     		str	r3, [r7, #16]	@ float
 846:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3741              		.loc 1 846 0
 3742 053c 0023     		movs	r3, #0
 3743 053e BB75     		strb	r3, [r7, #22]
 3744 0540 11E0     		b	.L262
 3745              	.L263:
 847:..\src/command_processing.c ****                     ((char*)(&g_mem.m_mult[i]))[4 - j -1] = ((char*)(&aux_float))[j];
 3746              		.loc 1 847 0 discriminator 3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 101


 3747 0542 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3748 0544 1233     		adds	r3, r3, #18
 3749 0546 9B00     		lsls	r3, r3, #2
 3750 0548 284A     		ldr	r2, .L285+4
 3751 054a 1A44     		add	r2, r2, r3
 3752 054c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3753 054e C3F10303 		rsb	r3, r3, #3
 3754 0552 1344     		add	r3, r3, r2
 3755 0554 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 3756 0556 07F11001 		add	r1, r7, #16
 3757 055a 0A44     		add	r2, r2, r1
 3758 055c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3759 055e 1A70     		strb	r2, [r3]
 846:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3760              		.loc 1 846 0 discriminator 3
 3761 0560 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3762 0562 0133     		adds	r3, r3, #1
 3763 0564 BB75     		strb	r3, [r7, #22]
 3764              	.L262:
 846:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3765              		.loc 1 846 0 is_stmt 0 discriminator 1
 3766 0566 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3767 0568 032B     		cmp	r3, #3
 3768 056a EAD9     		bls	.L263
 844:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + i*4]);
 3769              		.loc 1 844 0 is_stmt 1 discriminator 2
 3770 056c FB7D     		ldrb	r3, [r7, #23]
 3771 056e 0133     		adds	r3, r3, #1
 3772 0570 FB75     		strb	r3, [r7, #23]
 3773              	.L261:
 844:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + i*4]);
 3774              		.loc 1 844 0 is_stmt 0 discriminator 1
 3775 0572 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3776 0574 022B     		cmp	r3, #2
 3777 0576 DAD9     		bls	.L264
 848:..\src/command_processing.c ****                 }
 849:..\src/command_processing.c ****                 //g_mem.m_mult[i] = *((float *) &g_rx.buffer[3 + i * 4]);
 850:..\src/command_processing.c ****             }
 851:..\src/command_processing.c ****         break;
 3778              		.loc 1 851 0 is_stmt 1
 3779 0578 A5E2     		b	.L195
 3780              	.L207:
 852:..\src/command_processing.c ****         
 853:..\src/command_processing.c **** //=====================================================     set_pos_limit_enable
 854:..\src/command_processing.c ****         case 10:        //Position limit flag - uint8
 855:..\src/command_processing.c ****             g_mem.pos_lim_flag = *((uint8 *) &g_rx.buffer[3]);
 3781              		.loc 1 855 0
 3782 057a 1F4B     		ldr	r3, .L285+16
 3783 057c DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 3784 057e 1B4B     		ldr	r3, .L285+4
 3785 0580 83F85420 		strb	r2, [r3, #84]
 856:..\src/command_processing.c ****         break;
 3786              		.loc 1 856 0
 3787 0584 9FE2     		b	.L195
 3788              	.L208:
 857:..\src/command_processing.c **** 
 858:..\src/command_processing.c **** //============================================================     set_pos_limit
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 102


 859:..\src/command_processing.c ****         case 11:        //Position limits - int32[4]
 860:..\src/command_processing.c ****             g_mem.pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<8
 3789              		.loc 1 860 0
 3790 0586 1C4B     		ldr	r3, .L285+16
 3791 0588 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 3792 058a 1A06     		lsls	r2, r3, #24
 3793 058c 1A4B     		ldr	r3, .L285+16
 3794 058e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3795 0590 1B04     		lsls	r3, r3, #16
 3796 0592 1A43     		orrs	r2, r2, r3
 3797 0594 184B     		ldr	r3, .L285+16
 3798 0596 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 3799 0598 1B02     		lsls	r3, r3, #8
 3800 059a 1343     		orrs	r3, r3, r2
 3801 059c 164A     		ldr	r2, .L285+16
 3802 059e 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 3803 05a0 1343     		orrs	r3, r3, r2
 3804 05a2 124A     		ldr	r2, .L285+4
 3805 05a4 9365     		str	r3, [r2, #88]
 861:..\src/command_processing.c ****             g_mem.pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]<<16 | g_rx.buffer[9]<<8
 3806              		.loc 1 861 0
 3807 05a6 144B     		ldr	r3, .L285+16
 3808 05a8 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 3809 05aa 1A06     		lsls	r2, r3, #24
 3810 05ac 124B     		ldr	r3, .L285+16
 3811 05ae 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 3812 05b0 1B04     		lsls	r3, r3, #16
 3813 05b2 1A43     		orrs	r2, r2, r3
 3814 05b4 104B     		ldr	r3, .L285+16
 3815 05b6 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 3816 05b8 1B02     		lsls	r3, r3, #8
 3817 05ba 1343     		orrs	r3, r3, r2
 3818 05bc 0E4A     		ldr	r2, .L285+16
 3819 05be 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 3820 05c0 1343     		orrs	r3, r3, r2
 3821 05c2 0A4A     		ldr	r2, .L285+4
 3822 05c4 D365     		str	r3, [r2, #92]
 862:..\src/command_processing.c ****             //g_mem.pos_lim_inf = *((int32 *) &g_rx.buffer[3]);
 863:..\src/command_processing.c ****             //g_mem.pos_lim_sup = *((int32 *) &g_rx.buffer[7]);
 864:..\src/command_processing.c **** 
 865:..\src/command_processing.c ****             g_mem.pos_lim_inf = g_mem.pos_lim_inf << g_mem.res[0];
 3823              		.loc 1 865 0
 3824 05c6 094B     		ldr	r3, .L285+4
 3825 05c8 9B6D     		ldr	r3, [r3, #88]
 3826 05ca 084A     		ldr	r2, .L285+4
 3827 05cc 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 3828 05d0 9340     		lsls	r3, r3, r2
 3829 05d2 064A     		ldr	r2, .L285+4
 3830 05d4 9365     		str	r3, [r2, #88]
 866:..\src/command_processing.c ****             g_mem.pos_lim_sup = g_mem.pos_lim_sup << g_mem.res[0];
 3831              		.loc 1 866 0
 3832 05d6 054B     		ldr	r3, .L285+4
 3833 05d8 DB6D     		ldr	r3, [r3, #92]
 3834 05da 044A     		ldr	r2, .L285+4
 3835 05dc 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 3836 05e0 9340     		lsls	r3, r3, r2
 3837 05e2 024A     		ldr	r2, .L285+4
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 103


 3838 05e4 D365     		str	r3, [r2, #92]
 867:..\src/command_processing.c ****         break;
 3839              		.loc 1 867 0
 3840 05e6 6EE2     		b	.L195
 3841              	.L286:
 3842              		.align	2
 3843              	.L285:
 3844 05e8 03000000 		.word	g_rx+3
 3845 05ec 00000000 		.word	g_mem
 3846 05f0 07000000 		.word	g_rx+7
 3847 05f4 0B000000 		.word	g_rx+11
 3848 05f8 00000000 		.word	g_rx
 3849 05fc 00000000 		.word	g_meas
 3850 0600 00000000 		.word	reset_last_value_flag
 3851              	.L209:
 868:..\src/command_processing.c **** 
 869:..\src/command_processing.c **** //==================================================     set_max_steps_per_cycle
 870:..\src/command_processing.c ****         case 12:        //Max steps - int32[2]
 871:..\src/command_processing.c ****             g_mem.max_step_neg = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<
 3852              		.loc 1 871 0
 3853 0604 A24B     		ldr	r3, .L287
 3854 0606 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 3855 0608 1A06     		lsls	r2, r3, #24
 3856 060a A14B     		ldr	r3, .L287
 3857 060c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3858 060e 1B04     		lsls	r3, r3, #16
 3859 0610 1A43     		orrs	r2, r2, r3
 3860 0612 9F4B     		ldr	r3, .L287
 3861 0614 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 3862 0616 1B02     		lsls	r3, r3, #8
 3863 0618 1343     		orrs	r3, r3, r2
 3864 061a 9D4A     		ldr	r2, .L287
 3865 061c 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 3866 061e 1343     		orrs	r3, r3, r2
 3867 0620 9C4A     		ldr	r2, .L287+4
 3868 0622 1366     		str	r3, [r2, #96]
 872:..\src/command_processing.c ****             g_mem.max_step_pos = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]<<16 | g_rx.buffer[9]<<
 3869              		.loc 1 872 0
 3870 0624 9A4B     		ldr	r3, .L287
 3871 0626 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 3872 0628 1A06     		lsls	r2, r3, #24
 3873 062a 994B     		ldr	r3, .L287
 3874 062c 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 3875 062e 1B04     		lsls	r3, r3, #16
 3876 0630 1A43     		orrs	r2, r2, r3
 3877 0632 974B     		ldr	r3, .L287
 3878 0634 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 3879 0636 1B02     		lsls	r3, r3, #8
 3880 0638 1343     		orrs	r3, r3, r2
 3881 063a 954A     		ldr	r2, .L287
 3882 063c 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 3883 063e 1343     		orrs	r3, r3, r2
 3884 0640 944A     		ldr	r2, .L287+4
 3885 0642 5366     		str	r3, [r2, #100]
 873:..\src/command_processing.c ****             
 874:..\src/command_processing.c ****             //aux_int = *((int32 *) &g_rx.buffer[3]);
 875:..\src/command_processing.c ****             //if (aux_int <= 0)
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 104


 876:..\src/command_processing.c ****             //    g_mem.max_step_neg = aux_int;
 877:..\src/command_processing.c **** 
 878:..\src/command_processing.c ****             //aux_int = *((int32 *) &g_rx.buffer[3 + 4]);
 879:..\src/command_processing.c ****             //if (aux_int >= 0) 
 880:..\src/command_processing.c ****             //    g_mem.max_step_pos = aux_int;
 881:..\src/command_processing.c ****             
 882:..\src/command_processing.c ****         break;
 3886              		.loc 1 882 0
 3887 0644 3FE2     		b	.L195
 3888              	.L210:
 883:..\src/command_processing.c ****         
 884:..\src/command_processing.c **** //========================================================     set_current_limit
 885:..\src/command_processing.c ****         case 13:        //Current limit - int16
 886:..\src/command_processing.c ****             g_mem.current_limit = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 3889              		.loc 1 886 0
 3890 0646 924B     		ldr	r3, .L287
 3891 0648 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 3892 064a 1B02     		lsls	r3, r3, #8
 3893 064c 1AB2     		sxth	r2, r3
 3894 064e 904B     		ldr	r3, .L287
 3895 0650 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3896 0652 1BB2     		sxth	r3, r3
 3897 0654 1343     		orrs	r3, r3, r2
 3898 0656 1AB2     		sxth	r2, r3
 3899 0658 8E4B     		ldr	r3, .L287+4
 3900 065a A3F86820 		strh	r2, [r3, #104]	@ movhi
 887:..\src/command_processing.c ****             //g_mem.current_limit = *((int16*) &g_rx.buffer[3]);
 888:..\src/command_processing.c ****         break;
 3901              		.loc 1 888 0
 3902 065e 32E2     		b	.L195
 3903              	.L211:
 889:..\src/command_processing.c ****         
 890:..\src/command_processing.c **** //========================================================     set_emg_threshold
 891:..\src/command_processing.c ****         case 14:        //Emg threshold - uint16[2]
 892:..\src/command_processing.c ****             g_mem.emg_threshold[0] = (uint16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 3904              		.loc 1 892 0
 3905 0660 8B4B     		ldr	r3, .L287
 3906 0662 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 3907 0664 1B02     		lsls	r3, r3, #8
 3908 0666 1AB2     		sxth	r2, r3
 3909 0668 894B     		ldr	r3, .L287
 3910 066a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3911 066c 1BB2     		sxth	r3, r3
 3912 066e 1343     		orrs	r3, r3, r2
 3913 0670 1BB2     		sxth	r3, r3
 3914 0672 9AB2     		uxth	r2, r3
 3915 0674 874B     		ldr	r3, .L287+4
 3916 0676 A3F86A20 		strh	r2, [r3, #106]	@ movhi
 893:..\src/command_processing.c ****             g_mem.emg_threshold[1] = (uint16)(g_rx.buffer[5]<<8 | g_rx.buffer[6]);
 3917              		.loc 1 893 0
 3918 067a 854B     		ldr	r3, .L287
 3919 067c 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 3920 067e 1B02     		lsls	r3, r3, #8
 3921 0680 1AB2     		sxth	r2, r3
 3922 0682 834B     		ldr	r3, .L287
 3923 0684 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 3924 0686 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 105


 3925 0688 1343     		orrs	r3, r3, r2
 3926 068a 1BB2     		sxth	r3, r3
 3927 068c 9AB2     		uxth	r2, r3
 3928 068e 814B     		ldr	r3, .L287+4
 3929 0690 A3F86C20 		strh	r2, [r3, #108]	@ movhi
 894:..\src/command_processing.c ****             //g_mem.emg_threshold[0] = *((uint16*) &g_rx.buffer[3]);
 895:..\src/command_processing.c ****             //g_mem.emg_threshold[1] = *((uint16*) &g_rx.buffer[5]);
 896:..\src/command_processing.c ****         break;
 3930              		.loc 1 896 0
 3931 0694 17E2     		b	.L195
 3932              	.L212:
 897:..\src/command_processing.c ****             
 898:..\src/command_processing.c **** //=======================================================     set_emg_calib_flag
 899:..\src/command_processing.c ****         case 15:        //Emg calibration flag - uint8
 900:..\src/command_processing.c ****             g_mem.emg_calibration_flag = *((uint8*) &g_rx.buffer[3]);
 3933              		.loc 1 900 0
 3934 0696 7E4B     		ldr	r3, .L287
 3935 0698 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 3936 069a 7E4B     		ldr	r3, .L287+4
 3937 069c 83F86E20 		strb	r2, [r3, #110]
 901:..\src/command_processing.c ****         break;
 3938              		.loc 1 901 0
 3939 06a0 11E2     		b	.L195
 3940              	.L213:
 902:..\src/command_processing.c ****             
 903:..\src/command_processing.c **** //========================================================     set_emg_max_value
 904:..\src/command_processing.c ****         case 16:        //Emg max value - uint32[2]
 905:..\src/command_processing.c ****             g_mem.emg_max_value[0] = (uint32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer
 3941              		.loc 1 905 0
 3942 06a2 7B4B     		ldr	r3, .L287
 3943 06a4 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 3944 06a6 1A06     		lsls	r2, r3, #24
 3945 06a8 794B     		ldr	r3, .L287
 3946 06aa 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3947 06ac 1B04     		lsls	r3, r3, #16
 3948 06ae 1A43     		orrs	r2, r2, r3
 3949 06b0 774B     		ldr	r3, .L287
 3950 06b2 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 3951 06b4 1B02     		lsls	r3, r3, #8
 3952 06b6 1343     		orrs	r3, r3, r2
 3953 06b8 754A     		ldr	r2, .L287
 3954 06ba 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 3955 06bc 1343     		orrs	r3, r3, r2
 3956 06be 1A46     		mov	r2, r3
 3957 06c0 744B     		ldr	r3, .L287+4
 3958 06c2 1A67     		str	r2, [r3, #112]
 906:..\src/command_processing.c ****             g_mem.emg_max_value[1] = (uint32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]<<16 | g_rx.buffer
 3959              		.loc 1 906 0
 3960 06c4 724B     		ldr	r3, .L287
 3961 06c6 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 3962 06c8 1A06     		lsls	r2, r3, #24
 3963 06ca 714B     		ldr	r3, .L287
 3964 06cc 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 3965 06ce 1B04     		lsls	r3, r3, #16
 3966 06d0 1A43     		orrs	r2, r2, r3
 3967 06d2 6F4B     		ldr	r3, .L287
 3968 06d4 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 106


 3969 06d6 1B02     		lsls	r3, r3, #8
 3970 06d8 1343     		orrs	r3, r3, r2
 3971 06da 6D4A     		ldr	r2, .L287
 3972 06dc 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 3973 06de 1343     		orrs	r3, r3, r2
 3974 06e0 1A46     		mov	r2, r3
 3975 06e2 6C4B     		ldr	r3, .L287+4
 3976 06e4 5A67     		str	r2, [r3, #116]
 907:..\src/command_processing.c ****             //g_mem.emg_max_value[0] = *((uint32*) &g_rx.buffer[3]);
 908:..\src/command_processing.c ****             //g_mem.emg_max_value[1] = *((uint32*) &g_rx.buffer[7]);
 909:..\src/command_processing.c ****         break;
 3977              		.loc 1 909 0
 3978 06e6 EEE1     		b	.L195
 3979              	.L214:
 910:..\src/command_processing.c ****         
 911:..\src/command_processing.c **** //============================================================     set_emg_speed
 912:..\src/command_processing.c ****         case 17:        //Emg max speed - uint8
 913:..\src/command_processing.c ****             g_mem.emg_speed = *((uint8*) &g_rx.buffer[3]);
 3980              		.loc 1 913 0
 3981 06e8 694B     		ldr	r3, .L287
 3982 06ea DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 3983 06ec 694B     		ldr	r3, .L287+4
 3984 06ee 83F87820 		strb	r2, [r3, #120]
 914:..\src/command_processing.c ****         break;
 3985              		.loc 1 914 0
 3986 06f2 E8E1     		b	.L195
 3987              	.L215:
 915:..\src/command_processing.c ****         
 916:..\src/command_processing.c **** //================================================     set_double_encoder_on_off
 917:..\src/command_processing.c ****         case 18:        //Absolute encoder flag - uint8
 918:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 3988              		.loc 1 918 0
 3989 06f4 664B     		ldr	r3, .L287
 3990 06f6 DB78     		ldrb	r3, [r3, #3]
 3991 06f8 7B75     		strb	r3, [r7, #21]
 919:..\src/command_processing.c ****             if (aux_uchar) {
 3992              		.loc 1 919 0
 3993 06fa 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 3994 06fc 002B     		cmp	r3, #0
 3995 06fe 04D0     		beq	.L265
 920:..\src/command_processing.c ****                 g_mem.double_encoder_on_off = 1;
 3996              		.loc 1 920 0
 3997 0700 644B     		ldr	r3, .L287+4
 3998 0702 0122     		movs	r2, #1
 3999 0704 83F87920 		strb	r2, [r3, #121]
 921:..\src/command_processing.c ****             } else {
 922:..\src/command_processing.c ****                 g_mem.double_encoder_on_off = 0;
 923:..\src/command_processing.c ****             }
 924:..\src/command_processing.c ****         break;
 4000              		.loc 1 924 0
 4001 0708 DDE1     		b	.L195
 4002              	.L265:
 922:..\src/command_processing.c ****             }
 4003              		.loc 1 922 0
 4004 070a 624B     		ldr	r3, .L287+4
 4005 070c 0022     		movs	r2, #0
 4006 070e 83F87920 		strb	r2, [r3, #121]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 107


 4007              		.loc 1 924 0
 4008 0712 D8E1     		b	.L195
 4009              	.L216:
 925:..\src/command_processing.c ****         
 926:..\src/command_processing.c **** //===================================================     set_motor_handle_ratio
 927:..\src/command_processing.c ****         case 19:        //Motor handle ratio - int8
 928:..\src/command_processing.c ****             g_mem.motor_handle_ratio = *((int8*) &g_rx.buffer[3]);
 4010              		.loc 1 928 0
 4011 0714 604B     		ldr	r3, .L287+8
 4012 0716 93F90020 		ldrsb	r2, [r3]
 4013 071a 5E4B     		ldr	r3, .L287+4
 4014 071c 83F87A20 		strb	r2, [r3, #122]
 929:..\src/command_processing.c ****         break;
 4015              		.loc 1 929 0
 4016 0720 D1E1     		b	.L195
 4017              	.L217:
 930:..\src/command_processing.c ****         
 931:..\src/command_processing.c **** //===================================================     set_motor_supply_type
 932:..\src/command_processing.c ****         case 20:        //Motor type - uint8
 933:..\src/command_processing.c ****             g_mem.activate_pwm_rescaling = g_rx.buffer[3];
 4018              		.loc 1 933 0
 4019 0722 5B4B     		ldr	r3, .L287
 4020 0724 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 4021 0726 5B4B     		ldr	r3, .L287+4
 4022 0728 83F87B20 		strb	r2, [r3, #123]
 934:..\src/command_processing.c ****         break;
 4023              		.loc 1 934 0
 4024 072c CBE1     		b	.L195
 4025              	.L218:
 935:..\src/command_processing.c ****             
 936:..\src/command_processing.c **** //===================================================     set_curr_lookup_table
 937:..\src/command_processing.c ****         case 21:        //Current lookup table - float
 938:..\src/command_processing.c ****             for(i = 0; i < LOOKUP_DIM; i++){
 4026              		.loc 1 938 0
 4027 072e 0023     		movs	r3, #0
 4028 0730 FB75     		strb	r3, [r7, #23]
 4029 0732 22E0     		b	.L267
 4030              	.L270:
 939:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + i*4]);
 4031              		.loc 1 939 0
 4032 0734 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4033 0736 9B00     		lsls	r3, r3, #2
 4034 0738 0333     		adds	r3, r3, #3
 4035 073a 554A     		ldr	r2, .L287
 4036 073c 1344     		add	r3, r3, r2
 4037 073e 1B68     		ldr	r3, [r3]	@ float
 4038 0740 3B61     		str	r3, [r7, #16]	@ float
 940:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 4039              		.loc 1 940 0
 4040 0742 0023     		movs	r3, #0
 4041 0744 BB75     		strb	r3, [r7, #22]
 4042 0746 12E0     		b	.L268
 4043              	.L269:
 941:..\src/command_processing.c ****                     ((char*)(&g_mem.curr_lookup[i]))[4 - j -1] = ((char*)(&aux_float))[j];
 4044              		.loc 1 941 0 discriminator 3
 4045 0748 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4046 074a 1E33     		adds	r3, r3, #30
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 108


 4047 074c 9B00     		lsls	r3, r3, #2
 4048 074e 514A     		ldr	r2, .L287+4
 4049 0750 1344     		add	r3, r3, r2
 4050 0752 1A1D     		adds	r2, r3, #4
 4051 0754 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4052 0756 C3F10303 		rsb	r3, r3, #3
 4053 075a 1344     		add	r3, r3, r2
 4054 075c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 4055 075e 07F11001 		add	r1, r7, #16
 4056 0762 0A44     		add	r2, r2, r1
 4057 0764 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4058 0766 1A70     		strb	r2, [r3]
 940:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 4059              		.loc 1 940 0 discriminator 3
 4060 0768 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4061 076a 0133     		adds	r3, r3, #1
 4062 076c BB75     		strb	r3, [r7, #22]
 4063              	.L268:
 940:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 4064              		.loc 1 940 0 is_stmt 0 discriminator 1
 4065 076e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4066 0770 032B     		cmp	r3, #3
 4067 0772 E9D9     		bls	.L269
 938:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + i*4]);
 4068              		.loc 1 938 0 is_stmt 1 discriminator 2
 4069 0774 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4070 0776 0133     		adds	r3, r3, #1
 4071 0778 FB75     		strb	r3, [r7, #23]
 4072              	.L267:
 938:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + i*4]);
 4073              		.loc 1 938 0 is_stmt 0 discriminator 1
 4074 077a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4075 077c 052B     		cmp	r3, #5
 4076 077e D9D9     		bls	.L270
 942:..\src/command_processing.c ****                 }
 943:..\src/command_processing.c ****                 //g_mem.curr_lookup[i] = *((float *) &g_rx.buffer[3 + i*4]);
 944:..\src/command_processing.c ****             }
 945:..\src/command_processing.c ****         break;
 4077              		.loc 1 945 0 is_stmt 1
 4078 0780 A1E1     		b	.L195
 4079              	.L219:
 946:..\src/command_processing.c ****             
 947:..\src/command_processing.c **** //============================================================     set_rest_pos
 948:..\src/command_processing.c ****         case 22:        //Rest Position - int32
 949:..\src/command_processing.c ****             g_mem.rest_pos = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<8 | 
 4080              		.loc 1 949 0
 4081 0782 434B     		ldr	r3, .L287
 4082 0784 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 4083 0786 1A06     		lsls	r2, r3, #24
 4084 0788 414B     		ldr	r3, .L287
 4085 078a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4086 078c 1B04     		lsls	r3, r3, #16
 4087 078e 1A43     		orrs	r2, r2, r3
 4088 0790 3F4B     		ldr	r3, .L287
 4089 0792 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 4090 0794 1B02     		lsls	r3, r3, #8
 4091 0796 1343     		orrs	r3, r3, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 109


 4092 0798 3D4A     		ldr	r2, .L287
 4093 079a 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 4094 079c 1343     		orrs	r3, r3, r2
 4095 079e 3D4A     		ldr	r2, .L287+4
 4096 07a0 C2F89830 		str	r3, [r2, #152]
 950:..\src/command_processing.c ****             //g_mem.rest_pos = *((int32 *) &g_rx.buffer[3]);
 951:..\src/command_processing.c ****             g_mem.rest_pos = g_mem.rest_pos << g_mem.res[0];
 4097              		.loc 1 951 0
 4098 07a4 3B4B     		ldr	r3, .L287+4
 4099 07a6 D3F89830 		ldr	r3, [r3, #152]
 4100 07aa 3A4A     		ldr	r2, .L287+4
 4101 07ac 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 4102 07b0 9340     		lsls	r3, r3, r2
 4103 07b2 384A     		ldr	r2, .L287+4
 4104 07b4 C2F89830 		str	r3, [r2, #152]
 952:..\src/command_processing.c ****         break; 
 4105              		.loc 1 952 0
 4106 07b8 85E1     		b	.L195
 4107              	.L220:
 953:..\src/command_processing.c ****             
 954:..\src/command_processing.c **** //============================================================     set_rest_delay_pos
 955:..\src/command_processing.c ****         case 23:        //Rest Position Time Delay - float
 956:..\src/command_processing.c ****             aux_float = *((float *) &g_rx.buffer[3]);
 4108              		.loc 1 956 0
 4109 07ba 374B     		ldr	r3, .L287+8
 4110 07bc 1B68     		ldr	r3, [r3]	@ float
 4111 07be 3B61     		str	r3, [r7, #16]	@ float
 957:..\src/command_processing.c ****             for(i = 0; i < 4; i++) {
 4112              		.loc 1 957 0
 4113 07c0 0023     		movs	r3, #0
 4114 07c2 FB75     		strb	r3, [r7, #23]
 4115 07c4 0DE0     		b	.L271
 4116              	.L272:
 958:..\src/command_processing.c ****                 ((char*)(&g_mem.rest_delay))[4 - i -1] = ((char*)(&aux_float))[i];
 4117              		.loc 1 958 0 discriminator 3
 4118 07c6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4119 07c8 C3F10303 		rsb	r3, r3, #3
 4120 07cc 334A     		ldr	r2, .L287+12
 4121 07ce 1344     		add	r3, r3, r2
 4122 07d0 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 4123 07d2 07F11001 		add	r1, r7, #16
 4124 07d6 0A44     		add	r2, r2, r1
 4125 07d8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4126 07da 1A70     		strb	r2, [r3]
 957:..\src/command_processing.c ****             for(i = 0; i < 4; i++) {
 4127              		.loc 1 957 0 discriminator 3
 4128 07dc FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4129 07de 0133     		adds	r3, r3, #1
 4130 07e0 FB75     		strb	r3, [r7, #23]
 4131              	.L271:
 957:..\src/command_processing.c ****             for(i = 0; i < 4; i++) {
 4132              		.loc 1 957 0 is_stmt 0 discriminator 1
 4133 07e2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4134 07e4 032B     		cmp	r3, #3
 4135 07e6 EED9     		bls	.L272
 959:..\src/command_processing.c ****             }
 960:..\src/command_processing.c ****             //g_mem.rest_delay = *((float *) &g_rx.buffer[3]);
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 110


 961:..\src/command_processing.c ****         break; 
 4136              		.loc 1 961 0 is_stmt 1
 4137 07e8 6DE1     		b	.L195
 4138              	.L221:
 962:..\src/command_processing.c ****             
 963:..\src/command_processing.c **** //============================================================     set_rest_vel
 964:..\src/command_processing.c ****         case 24:        //Rest Position Velocity - float
 965:..\src/command_processing.c ****             aux_float = *((float *) &g_rx.buffer[3]);
 4139              		.loc 1 965 0
 4140 07ea 2B4B     		ldr	r3, .L287+8
 4141 07ec 1B68     		ldr	r3, [r3]	@ float
 4142 07ee 3B61     		str	r3, [r7, #16]	@ float
 966:..\src/command_processing.c ****             for(i = 0; i < 4; i++) {
 4143              		.loc 1 966 0
 4144 07f0 0023     		movs	r3, #0
 4145 07f2 FB75     		strb	r3, [r7, #23]
 4146 07f4 0DE0     		b	.L273
 4147              	.L274:
 967:..\src/command_processing.c ****                 ((char*)(&g_mem.rest_vel))[4 - i -1] = ((char*)(&aux_float))[i];
 4148              		.loc 1 967 0 discriminator 3
 4149 07f6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4150 07f8 C3F10303 		rsb	r3, r3, #3
 4151 07fc 284A     		ldr	r2, .L287+16
 4152 07fe 1344     		add	r3, r3, r2
 4153 0800 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 4154 0802 07F11001 		add	r1, r7, #16
 4155 0806 0A44     		add	r2, r2, r1
 4156 0808 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4157 080a 1A70     		strb	r2, [r3]
 966:..\src/command_processing.c ****             for(i = 0; i < 4; i++) {
 4158              		.loc 1 966 0 discriminator 3
 4159 080c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4160 080e 0133     		adds	r3, r3, #1
 4161 0810 FB75     		strb	r3, [r7, #23]
 4162              	.L273:
 966:..\src/command_processing.c ****             for(i = 0; i < 4; i++) {
 4163              		.loc 1 966 0 is_stmt 0 discriminator 1
 4164 0812 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4165 0814 032B     		cmp	r3, #3
 4166 0816 EED9     		bls	.L274
 968:..\src/command_processing.c ****             }
 969:..\src/command_processing.c ****             //g_mem.rest_vel = *((float *) &g_rx.buffer[3]);
 970:..\src/command_processing.c ****             g_mem.rest_vel = g_mem.rest_vel/1000.0;       //conversion [s -> ms]
 4167              		.loc 1 970 0 is_stmt 1
 4168 0818 1E4B     		ldr	r3, .L287+4
 4169 081a D3F8A030 		ldr	r3, [r3, #160]	@ float
 4170 081e 2149     		ldr	r1, .L287+20
 4171 0820 1846     		mov	r0, r3
 4172 0822 FFF7FEFF 		bl	__aeabi_fdiv
 4173 0826 0346     		mov	r3, r0
 4174 0828 1A46     		mov	r2, r3
 4175 082a 1A4B     		ldr	r3, .L287+4
 4176 082c C3F8A020 		str	r2, [r3, #160]	@ float
 971:..\src/command_processing.c ****         break;  
 4177              		.loc 1 971 0
 4178 0830 49E1     		b	.L195
 4179              	.L222:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 111


 972:..\src/command_processing.c ****             
 973:..\src/command_processing.c **** //============================================================     set_rest_ratio
 974:..\src/command_processing.c ****         case 25:        //Rest Ratio - float
 975:..\src/command_processing.c ****             aux_float = *((float *) &g_rx.buffer[3]);
 4180              		.loc 1 975 0
 4181 0832 194B     		ldr	r3, .L287+8
 4182 0834 1B68     		ldr	r3, [r3]	@ float
 4183 0836 3B61     		str	r3, [r7, #16]	@ float
 976:..\src/command_processing.c ****             for(i = 0; i < 4; i++) {
 4184              		.loc 1 976 0
 4185 0838 0023     		movs	r3, #0
 4186 083a FB75     		strb	r3, [r7, #23]
 4187 083c 0DE0     		b	.L275
 4188              	.L276:
 977:..\src/command_processing.c ****                 ((char*)(&g_mem.rest_ratio))[4 - i -1] = ((char*)(&aux_float))[i];
 4189              		.loc 1 977 0 discriminator 3
 4190 083e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4191 0840 C3F10303 		rsb	r3, r3, #3
 4192 0844 184A     		ldr	r2, .L287+24
 4193 0846 1344     		add	r3, r3, r2
 4194 0848 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 4195 084a 07F11001 		add	r1, r7, #16
 4196 084e 0A44     		add	r2, r2, r1
 4197 0850 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4198 0852 1A70     		strb	r2, [r3]
 976:..\src/command_processing.c ****             for(i = 0; i < 4; i++) {
 4199              		.loc 1 976 0 discriminator 3
 4200 0854 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4201 0856 0133     		adds	r3, r3, #1
 4202 0858 FB75     		strb	r3, [r7, #23]
 4203              	.L275:
 976:..\src/command_processing.c ****             for(i = 0; i < 4; i++) {
 4204              		.loc 1 976 0 is_stmt 0 discriminator 1
 4205 085a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4206 085c 032B     		cmp	r3, #3
 4207 085e EED9     		bls	.L276
 978:..\src/command_processing.c ****             }
 979:..\src/command_processing.c ****             //g_mem.rest_ratio = *((float *) &g_rx.buffer[3]);
 980:..\src/command_processing.c ****         break;  
 4208              		.loc 1 980 0 is_stmt 1
 4209 0860 31E1     		b	.L195
 4210              	.L223:
 981:..\src/command_processing.c ****             
 982:..\src/command_processing.c **** //================================================     set_rest_position_flag
 983:..\src/command_processing.c ****         case 26:        //Rest position flag - uint8
 984:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 4211              		.loc 1 984 0
 4212 0862 0B4B     		ldr	r3, .L287
 4213 0864 DB78     		ldrb	r3, [r3, #3]
 4214 0866 7B75     		strb	r3, [r7, #21]
 985:..\src/command_processing.c ****             if (aux_uchar) {
 4215              		.loc 1 985 0
 4216 0868 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 4217 086a 002B     		cmp	r3, #0
 4218 086c 04D0     		beq	.L277
 986:..\src/command_processing.c ****                 g_mem.rest_position_flag = TRUE;
 4219              		.loc 1 986 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 112


 4220 086e 094B     		ldr	r3, .L287+4
 4221 0870 0122     		movs	r2, #1
 4222 0872 83F8A820 		strb	r2, [r3, #168]
 987:..\src/command_processing.c ****             } else {
 988:..\src/command_processing.c ****                 g_mem.rest_position_flag = FALSE;
 989:..\src/command_processing.c ****             }
 990:..\src/command_processing.c ****         break; 
 4223              		.loc 1 990 0
 4224 0876 26E1     		b	.L195
 4225              	.L277:
 988:..\src/command_processing.c ****             }
 4226              		.loc 1 988 0
 4227 0878 064B     		ldr	r3, .L287+4
 4228 087a 0022     		movs	r2, #0
 4229 087c 83F8A820 		strb	r2, [r3, #168]
 4230              		.loc 1 990 0
 4231 0880 21E1     		b	.L195
 4232              	.L224:
 991:..\src/command_processing.c ****             
 992:..\src/command_processing.c **** //===================================================     set_switch_emg
 993:..\src/command_processing.c ****         case 27:        //EMG inversion - uint8
 994:..\src/command_processing.c ****             g_mem.switch_emg = g_rx.buffer[3];
 4233              		.loc 1 994 0
 4234 0882 034B     		ldr	r3, .L287
 4235 0884 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 4236 0886 034B     		ldr	r3, .L287+4
 4237 0888 83F8A920 		strb	r2, [r3, #169]
 995:..\src/command_processing.c ****         break; 
 4238              		.loc 1 995 0
 4239 088c 1BE1     		b	.L195
 4240              	.L288:
 4241 088e 00BF     		.align	2
 4242              	.L287:
 4243 0890 00000000 		.word	g_rx
 4244 0894 00000000 		.word	g_mem
 4245 0898 03000000 		.word	g_rx+3
 4246 089c 9C000000 		.word	g_mem+156
 4247 08a0 A0000000 		.word	g_mem+160
 4248 08a4 00007A44 		.word	1148846080
 4249 08a8 A4000000 		.word	g_mem+164
 4250              	.L225:
 996:..\src/command_processing.c **** 
 997:..\src/command_processing.c **** //===================================================     reset_counters
 998:..\src/command_processing.c ****         case 28:        //Reset counters - uint8
 999:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 4251              		.loc 1 999 0
 4252 08ac 884B     		ldr	r3, .L289
 4253 08ae DB78     		ldrb	r3, [r3, #3]
 4254 08b0 7B75     		strb	r3, [r7, #21]
1000:..\src/command_processing.c ****             if (aux_uchar) {
 4255              		.loc 1 1000 0
 4256 08b2 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 4257 08b4 002B     		cmp	r3, #0
 4258 08b6 01D0     		beq	.L279
1001:..\src/command_processing.c ****                 reset_counters();
 4259              		.loc 1 1001 0
 4260 08b8 FFF7FEFF 		bl	reset_counters
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 113


 4261              	.L279:
1002:..\src/command_processing.c ****             }
1003:..\src/command_processing.c ****             
1004:..\src/command_processing.c ****             // Set date of maintenance from RTC
1005:..\src/command_processing.c ****             aux_uchar = DS1302_read(DS1302_DATE_RD);
 4262              		.loc 1 1005 0
 4263 08bc 8720     		movs	r0, #135
 4264 08be FFF7FEFF 		bl	DS1302_read
 4265 08c2 0346     		mov	r3, r0
 4266 08c4 7B75     		strb	r3, [r7, #21]
1006:..\src/command_processing.c ****             g_mem.maint_day = (aux_uchar/16) * 10 + aux_uchar%16;
 4267              		.loc 1 1006 0
 4268 08c6 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 4269 08c8 1B09     		lsrs	r3, r3, #4
 4270 08ca DBB2     		uxtb	r3, r3
 4271 08cc 1A46     		mov	r2, r3
 4272 08ce 9200     		lsls	r2, r2, #2
 4273 08d0 1344     		add	r3, r3, r2
 4274 08d2 5B00     		lsls	r3, r3, #1
 4275 08d4 DAB2     		uxtb	r2, r3
 4276 08d6 7B7D     		ldrb	r3, [r7, #21]
 4277 08d8 03F00F03 		and	r3, r3, #15
 4278 08dc DBB2     		uxtb	r3, r3
 4279 08de 1344     		add	r3, r3, r2
 4280 08e0 DAB2     		uxtb	r2, r3
 4281 08e2 7C4B     		ldr	r3, .L289+4
 4282 08e4 83F89520 		strb	r2, [r3, #149]
1007:..\src/command_processing.c ****             aux_uchar = DS1302_read(DS1302_MONTH_RD);
 4283              		.loc 1 1007 0
 4284 08e8 8920     		movs	r0, #137
 4285 08ea FFF7FEFF 		bl	DS1302_read
 4286 08ee 0346     		mov	r3, r0
 4287 08f0 7B75     		strb	r3, [r7, #21]
1008:..\src/command_processing.c ****             g_mem.maint_month = (aux_uchar/16) * 10 + aux_uchar%16;
 4288              		.loc 1 1008 0
 4289 08f2 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 4290 08f4 1B09     		lsrs	r3, r3, #4
 4291 08f6 DBB2     		uxtb	r3, r3
 4292 08f8 1A46     		mov	r2, r3
 4293 08fa 9200     		lsls	r2, r2, #2
 4294 08fc 1344     		add	r3, r3, r2
 4295 08fe 5B00     		lsls	r3, r3, #1
 4296 0900 DAB2     		uxtb	r2, r3
 4297 0902 7B7D     		ldrb	r3, [r7, #21]
 4298 0904 03F00F03 		and	r3, r3, #15
 4299 0908 DBB2     		uxtb	r3, r3
 4300 090a 1344     		add	r3, r3, r2
 4301 090c DAB2     		uxtb	r2, r3
 4302 090e 714B     		ldr	r3, .L289+4
 4303 0910 83F89620 		strb	r2, [r3, #150]
1009:..\src/command_processing.c ****             aux_uchar = DS1302_read(DS1302_YEAR_RD);
 4304              		.loc 1 1009 0
 4305 0914 8D20     		movs	r0, #141
 4306 0916 FFF7FEFF 		bl	DS1302_read
 4307 091a 0346     		mov	r3, r0
 4308 091c 7B75     		strb	r3, [r7, #21]
1010:..\src/command_processing.c ****             g_mem.maint_year = (aux_uchar/16) * 10 + aux_uchar%16;  
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 114


 4309              		.loc 1 1010 0
 4310 091e 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 4311 0920 1B09     		lsrs	r3, r3, #4
 4312 0922 DBB2     		uxtb	r3, r3
 4313 0924 1A46     		mov	r2, r3
 4314 0926 9200     		lsls	r2, r2, #2
 4315 0928 1344     		add	r3, r3, r2
 4316 092a 5B00     		lsls	r3, r3, #1
 4317 092c DAB2     		uxtb	r2, r3
 4318 092e 7B7D     		ldrb	r3, [r7, #21]
 4319 0930 03F00F03 		and	r3, r3, #15
 4320 0934 DBB2     		uxtb	r3, r3
 4321 0936 1344     		add	r3, r3, r2
 4322 0938 DAB2     		uxtb	r2, r3
 4323 093a 664B     		ldr	r3, .L289+4
 4324 093c 83F89720 		strb	r2, [r3, #151]
1011:..\src/command_processing.c **** 
1012:..\src/command_processing.c ****         break;             
 4325              		.loc 1 1012 0
 4326 0940 C1E0     		b	.L195
 4327              	.L226:
1013:..\src/command_processing.c ****             
1014:..\src/command_processing.c **** //==================================================    set_current_time
1015:..\src/command_processing.c ****         case 29:         //Current Time - uint8[3]
1016:..\src/command_processing.c ****             for (i=0; i<6; i++){
 4328              		.loc 1 1016 0
 4329 0942 0023     		movs	r3, #0
 4330 0944 FB75     		strb	r3, [r7, #23]
 4331 0946 0CE0     		b	.L280
 4332              	.L281:
1017:..\src/command_processing.c ****                 g_mem.curr_time[i] = g_rx.buffer[3 + i];
 4333              		.loc 1 1017 0 discriminator 3
 4334 0948 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4335 094a FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 4336 094c 0332     		adds	r2, r2, #3
 4337 094e 6049     		ldr	r1, .L289
 4338 0950 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 4339 0952 604A     		ldr	r2, .L289+4
 4340 0954 1344     		add	r3, r3, r2
 4341 0956 0A46     		mov	r2, r1
 4342 0958 83F81021 		strb	r2, [r3, #272]
1016:..\src/command_processing.c ****                 g_mem.curr_time[i] = g_rx.buffer[3 + i];
 4343              		.loc 1 1016 0 discriminator 3
 4344 095c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4345 095e 0133     		adds	r3, r3, #1
 4346 0960 FB75     		strb	r3, [r7, #23]
 4347              	.L280:
1016:..\src/command_processing.c ****                 g_mem.curr_time[i] = g_rx.buffer[3 + i];
 4348              		.loc 1 1016 0 is_stmt 0 discriminator 1
 4349 0962 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4350 0964 052B     		cmp	r3, #5
 4351 0966 EFD9     		bls	.L281
1018:..\src/command_processing.c ****             }
1019:..\src/command_processing.c ****             
1020:..\src/command_processing.c ****             DS1302_write(DS1302_DATE_WR, (((g_mem.curr_time[0] / 10)*16) + (g_mem.curr_time[0] % 10
 4352              		.loc 1 1020 0 is_stmt 1
 4353 0968 5A4B     		ldr	r3, .L289+4
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 115


 4354 096a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 4355 096e 5A4A     		ldr	r2, .L289+8
 4356 0970 A2FB0323 		umull	r2, r3, r2, r3
 4357 0974 DB08     		lsrs	r3, r3, #3
 4358 0976 DBB2     		uxtb	r3, r3
 4359 0978 1B01     		lsls	r3, r3, #4
 4360 097a D8B2     		uxtb	r0, r3
 4361 097c 554B     		ldr	r3, .L289+4
 4362 097e 93F81021 		ldrb	r2, [r3, #272]	@ zero_extendqisi2
 4363 0982 554B     		ldr	r3, .L289+8
 4364 0984 A3FB0213 		umull	r1, r3, r3, r2
 4365 0988 D908     		lsrs	r1, r3, #3
 4366 098a 0B46     		mov	r3, r1
 4367 098c 9B00     		lsls	r3, r3, #2
 4368 098e 0B44     		add	r3, r3, r1
 4369 0990 5B00     		lsls	r3, r3, #1
 4370 0992 D31A     		subs	r3, r2, r3
 4371 0994 DBB2     		uxtb	r3, r3
 4372 0996 0344     		add	r3, r3, r0
 4373 0998 DBB2     		uxtb	r3, r3
 4374 099a 1946     		mov	r1, r3
 4375 099c 8620     		movs	r0, #134
 4376 099e FFF7FEFF 		bl	DS1302_write
1021:..\src/command_processing.c ****             DS1302_write(DS1302_MONTH_WR, (((g_mem.curr_time[1] / 10)*16) + (g_mem.curr_time[1] % 1
 4377              		.loc 1 1021 0
 4378 09a2 4C4B     		ldr	r3, .L289+4
 4379 09a4 93F81131 		ldrb	r3, [r3, #273]	@ zero_extendqisi2
 4380 09a8 4B4A     		ldr	r2, .L289+8
 4381 09aa A2FB0323 		umull	r2, r3, r2, r3
 4382 09ae DB08     		lsrs	r3, r3, #3
 4383 09b0 DBB2     		uxtb	r3, r3
 4384 09b2 1B01     		lsls	r3, r3, #4
 4385 09b4 D8B2     		uxtb	r0, r3
 4386 09b6 474B     		ldr	r3, .L289+4
 4387 09b8 93F81121 		ldrb	r2, [r3, #273]	@ zero_extendqisi2
 4388 09bc 464B     		ldr	r3, .L289+8
 4389 09be A3FB0213 		umull	r1, r3, r3, r2
 4390 09c2 D908     		lsrs	r1, r3, #3
 4391 09c4 0B46     		mov	r3, r1
 4392 09c6 9B00     		lsls	r3, r3, #2
 4393 09c8 0B44     		add	r3, r3, r1
 4394 09ca 5B00     		lsls	r3, r3, #1
 4395 09cc D31A     		subs	r3, r2, r3
 4396 09ce DBB2     		uxtb	r3, r3
 4397 09d0 0344     		add	r3, r3, r0
 4398 09d2 DBB2     		uxtb	r3, r3
 4399 09d4 1946     		mov	r1, r3
 4400 09d6 8820     		movs	r0, #136
 4401 09d8 FFF7FEFF 		bl	DS1302_write
1022:..\src/command_processing.c ****             DS1302_write(DS1302_YEAR_WR, (((g_mem.curr_time[2] / 10)*16) + (g_mem.curr_time[2] % 10
 4402              		.loc 1 1022 0
 4403 09dc 3D4B     		ldr	r3, .L289+4
 4404 09de 93F81231 		ldrb	r3, [r3, #274]	@ zero_extendqisi2
 4405 09e2 3D4A     		ldr	r2, .L289+8
 4406 09e4 A2FB0323 		umull	r2, r3, r2, r3
 4407 09e8 DB08     		lsrs	r3, r3, #3
 4408 09ea DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 116


 4409 09ec 1B01     		lsls	r3, r3, #4
 4410 09ee D8B2     		uxtb	r0, r3
 4411 09f0 384B     		ldr	r3, .L289+4
 4412 09f2 93F81221 		ldrb	r2, [r3, #274]	@ zero_extendqisi2
 4413 09f6 384B     		ldr	r3, .L289+8
 4414 09f8 A3FB0213 		umull	r1, r3, r3, r2
 4415 09fc D908     		lsrs	r1, r3, #3
 4416 09fe 0B46     		mov	r3, r1
 4417 0a00 9B00     		lsls	r3, r3, #2
 4418 0a02 0B44     		add	r3, r3, r1
 4419 0a04 5B00     		lsls	r3, r3, #1
 4420 0a06 D31A     		subs	r3, r2, r3
 4421 0a08 DBB2     		uxtb	r3, r3
 4422 0a0a 0344     		add	r3, r3, r0
 4423 0a0c DBB2     		uxtb	r3, r3
 4424 0a0e 1946     		mov	r1, r3
 4425 0a10 8C20     		movs	r0, #140
 4426 0a12 FFF7FEFF 		bl	DS1302_write
1023:..\src/command_processing.c ****             DS1302_write(DS1302_HOUR_WR, (((g_mem.curr_time[3] / 10)*16) + (g_mem.curr_time[3] % 10
 4427              		.loc 1 1023 0
 4428 0a16 2F4B     		ldr	r3, .L289+4
 4429 0a18 93F81331 		ldrb	r3, [r3, #275]	@ zero_extendqisi2
 4430 0a1c 2E4A     		ldr	r2, .L289+8
 4431 0a1e A2FB0323 		umull	r2, r3, r2, r3
 4432 0a22 DB08     		lsrs	r3, r3, #3
 4433 0a24 DBB2     		uxtb	r3, r3
 4434 0a26 1B01     		lsls	r3, r3, #4
 4435 0a28 D8B2     		uxtb	r0, r3
 4436 0a2a 2A4B     		ldr	r3, .L289+4
 4437 0a2c 93F81321 		ldrb	r2, [r3, #275]	@ zero_extendqisi2
 4438 0a30 294B     		ldr	r3, .L289+8
 4439 0a32 A3FB0213 		umull	r1, r3, r3, r2
 4440 0a36 D908     		lsrs	r1, r3, #3
 4441 0a38 0B46     		mov	r3, r1
 4442 0a3a 9B00     		lsls	r3, r3, #2
 4443 0a3c 0B44     		add	r3, r3, r1
 4444 0a3e 5B00     		lsls	r3, r3, #1
 4445 0a40 D31A     		subs	r3, r2, r3
 4446 0a42 DBB2     		uxtb	r3, r3
 4447 0a44 0344     		add	r3, r3, r0
 4448 0a46 DBB2     		uxtb	r3, r3
 4449 0a48 1946     		mov	r1, r3
 4450 0a4a 8420     		movs	r0, #132
 4451 0a4c FFF7FEFF 		bl	DS1302_write
1024:..\src/command_processing.c ****             DS1302_write(DS1302_MINUTES_WR, (((g_mem.curr_time[4] / 10)*16) + (g_mem.curr_time[4] %
 4452              		.loc 1 1024 0
 4453 0a50 204B     		ldr	r3, .L289+4
 4454 0a52 93F81431 		ldrb	r3, [r3, #276]	@ zero_extendqisi2
 4455 0a56 204A     		ldr	r2, .L289+8
 4456 0a58 A2FB0323 		umull	r2, r3, r2, r3
 4457 0a5c DB08     		lsrs	r3, r3, #3
 4458 0a5e DBB2     		uxtb	r3, r3
 4459 0a60 1B01     		lsls	r3, r3, #4
 4460 0a62 D8B2     		uxtb	r0, r3
 4461 0a64 1B4B     		ldr	r3, .L289+4
 4462 0a66 93F81421 		ldrb	r2, [r3, #276]	@ zero_extendqisi2
 4463 0a6a 1B4B     		ldr	r3, .L289+8
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 117


 4464 0a6c A3FB0213 		umull	r1, r3, r3, r2
 4465 0a70 D908     		lsrs	r1, r3, #3
 4466 0a72 0B46     		mov	r3, r1
 4467 0a74 9B00     		lsls	r3, r3, #2
 4468 0a76 0B44     		add	r3, r3, r1
 4469 0a78 5B00     		lsls	r3, r3, #1
 4470 0a7a D31A     		subs	r3, r2, r3
 4471 0a7c DBB2     		uxtb	r3, r3
 4472 0a7e 0344     		add	r3, r3, r0
 4473 0a80 DBB2     		uxtb	r3, r3
 4474 0a82 1946     		mov	r1, r3
 4475 0a84 8220     		movs	r0, #130
 4476 0a86 FFF7FEFF 		bl	DS1302_write
1025:..\src/command_processing.c ****             DS1302_write(DS1302_SECONDS_WR, (((g_mem.curr_time[5] / 10)*16) + (g_mem.curr_time[5] %
 4477              		.loc 1 1025 0
 4478 0a8a 124B     		ldr	r3, .L289+4
 4479 0a8c 93F81531 		ldrb	r3, [r3, #277]	@ zero_extendqisi2
 4480 0a90 114A     		ldr	r2, .L289+8
 4481 0a92 A2FB0323 		umull	r2, r3, r2, r3
 4482 0a96 DB08     		lsrs	r3, r3, #3
 4483 0a98 DBB2     		uxtb	r3, r3
 4484 0a9a 1B01     		lsls	r3, r3, #4
 4485 0a9c D8B2     		uxtb	r0, r3
 4486 0a9e 0D4B     		ldr	r3, .L289+4
 4487 0aa0 93F81521 		ldrb	r2, [r3, #277]	@ zero_extendqisi2
 4488 0aa4 0C4B     		ldr	r3, .L289+8
 4489 0aa6 A3FB0213 		umull	r1, r3, r3, r2
 4490 0aaa D908     		lsrs	r1, r3, #3
 4491 0aac 0B46     		mov	r3, r1
 4492 0aae 9B00     		lsls	r3, r3, #2
 4493 0ab0 0B44     		add	r3, r3, r1
 4494 0ab2 5B00     		lsls	r3, r3, #1
 4495 0ab4 D31A     		subs	r3, r2, r3
 4496 0ab6 DBB2     		uxtb	r3, r3
 4497 0ab8 0344     		add	r3, r3, r0
 4498 0aba DBB2     		uxtb	r3, r3
 4499 0abc 1946     		mov	r1, r3
 4500 0abe 8020     		movs	r0, #128
 4501 0ac0 FFF7FEFF 		bl	DS1302_write
1026:..\src/command_processing.c ****         break;  
 4502              		.loc 1 1026 0
 4503 0ac4 00BF     		nop
 4504              	.L195:
 4505              	.L282:
1027:..\src/command_processing.c ****     }                
1028:..\src/command_processing.c **** }
 4506              		.loc 1 1028 0
 4507 0ac6 00BF     		nop
 4508 0ac8 1837     		adds	r7, r7, #24
 4509              		.cfi_def_cfa_offset 8
 4510 0aca BD46     		mov	sp, r7
 4511              		.cfi_def_cfa_register 13
 4512              		@ sp needed
 4513 0acc 80BD     		pop	{r7, pc}
 4514              	.L290:
 4515 0ace 00BF     		.align	2
 4516              	.L289:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 118


 4517 0ad0 00000000 		.word	g_rx
 4518 0ad4 00000000 		.word	g_mem
 4519 0ad8 CDCCCCCC 		.word	-858993459
 4520              		.cfi_endproc
 4521              	.LFE68:
 4522              		.size	manage_param_list, .-manage_param_list
 4523              		.section	.rodata
 4524 050a 0000     		.align	2
 4525              	.LC51:
 4526 050c 30202D3E 		.ascii	"0 -> None\0121 -> Low (%u us delay for each 8-bit r"
 4526      204E6F6E 
 4526      650A3120 
 4526      2D3E204C 
 4526      6F772028 
 4527 053c 65676973 		.ascii	"egister read)\0122 -> High (%u us delay for each 8-"
 4527      74657220 
 4527      72656164 
 4527      290A3220 
 4527      2D3E2048 
 4528 056c 62697420 		.ascii	"bit register read)\012\000"
 4528      72656769 
 4528      73746572 
 4528      20726561 
 4528      64290A00 
 4529              		.align	2
 4530              	.LC52:
 4531 0580 506F7274 		.ascii	"Port %u ID:\000"
 4531      20257520 
 4531      49443A00 
 4532              		.align	2
 4533              	.LC53:
 4534 058c 2575202D 		.ascii	"%u - Device ID:\000"
 4534      20446576 
 4534      69636520 
 4534      49443A00 
 4535              		.align	2
 4536              	.LC54:
 4537 059c 2575202D 		.ascii	"%u - IMU %d configuration:\000"
 4537      20494D55 
 4537      20256420 
 4537      636F6E66 
 4537      69677572 
 4538 05b7 00       		.align	2
 4539              	.LC55:
 4540 05b8 2575202D 		.ascii	"%u - SPI read delay:\000"
 4540      20535049 
 4540      20726561 
 4540      64206465 
 4540      6C61793A 
 4541 05cd 000000   		.align	2
 4542              	.LC56:
 4543 05d0 204E6F6E 		.ascii	" None\000"
 4543      6500
 4544 05d6 0000     		.align	2
 4545              	.LC57:
 4546 05d8 204C6F77 		.ascii	" Low\000"
 4546      00
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 119


 4547 05dd 000000   		.align	2
 4548              	.LC58:
 4549 05e0 20486967 		.ascii	" High\000"
 4549      6800
 4550 05e6 0000     		.align	2
 4551              	.LC49:
 4552 05e8 4E756D62 		.ascii	"Number of connected IMUs:\000"
 4552      6572206F 
 4552      6620636F 
 4552      6E6E6563 
 4552      74656420 
 4553 0602 0000     		.align	2
 4554              	.LC50:
 4555 0604 4D616720 		.ascii	"Mag cal parameters:\000"
 4555      63616C20 
 4555      70617261 
 4555      6D657465 
 4555      72733A00 
 4556              		.section	.text.get_IMU_param_list,"ax",%progbits
 4557              		.align	2
 4558              		.global	get_IMU_param_list
 4559              		.thumb
 4560              		.thumb_func
 4561              		.type	get_IMU_param_list, %function
 4562              	get_IMU_param_list:
 4563              	.LFB69:
1029:..\src/command_processing.c **** 
1030:..\src/command_processing.c **** 
1031:..\src/command_processing.c **** //==============================================================================
1032:..\src/command_processing.c **** //                                                        GET IMU PARAMETER LIST
1033:..\src/command_processing.c **** //==============================================================================
1034:..\src/command_processing.c **** 
1035:..\src/command_processing.c **** void get_IMU_param_list(uint16 index)
1036:..\src/command_processing.c **** {
 4564              		.loc 1 1036 0
 4565              		.cfi_startproc
 4566              		@ args = 0, pretend = 0, frame = 1560
 4567              		@ frame_needed = 1, uses_anonymous_args = 0
 4568 0000 B0B5     		push	{r4, r5, r7, lr}
 4569              		.cfi_def_cfa_offset 16
 4570              		.cfi_offset 4, -16
 4571              		.cfi_offset 5, -12
 4572              		.cfi_offset 7, -8
 4573              		.cfi_offset 14, -4
 4574 0002 ADF5C36D 		sub	sp, sp, #1560
 4575              		.cfi_def_cfa_offset 1576
 4576 0006 00AF     		add	r7, sp, #0
 4577              		.cfi_def_cfa_register 7
 4578 0008 0246     		mov	r2, r0
 4579 000a BB1D     		adds	r3, r7, #6
 4580 000c 1A80     		strh	r2, [r3]	@ movhi
1037:..\src/command_processing.c ****     //Package to be sent variables
1038:..\src/command_processing.c ****     uint8 packet_data[  PARAM_BYTE_SLOT   +     // Number of connected IMUs
 4581              		.loc 1 1038 0
 4582 000e 07F58C73 		add	r3, r7, #280
 4583 0012 0022     		movs	r2, #0
 4584 0014 1A60     		str	r2, [r3]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 120


 4585 0016 0433     		adds	r3, r3, #4
 4586 0018 40F2DF42 		movw	r2, #1247
 4587 001c 0021     		movs	r1, #0
 4588 001e 1846     		mov	r0, r3
 4589 0020 FFF7FEFF 		bl	memset
1039:..\src/command_processing.c ****                         6*PARAM_BYTE_SLOT +     // IMUs ID  (1 port instead of 6)
1040:..\src/command_processing.c ****                         9*PARAM_BYTE_SLOT +     // Mag cal parameters (1 row instead of 9)
1041:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // 1 - Device ID
1042:..\src/command_processing.c ****                         PARAM_BYTE_SLOT*N_IMU_MAX + // IMU configurations
1043:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // SPI read delay
1044:..\src/command_processing.c ****                         PARAM_MENU_SLOT   + PARAM_BYTE_SLOT + 1 ] = "";
1045:..\src/command_processing.c ****     uint16 num_imus_id_params = 6;      //(1 port instead of 6)
 4590              		.loc 1 1045 0
 4591 0024 0623     		movs	r3, #6
 4592 0026 A7F80A36 		strh	r3, [r7, #1546]	@ movhi
1046:..\src/command_processing.c ****     uint16 num_mag_cal_params = 0;
 4593              		.loc 1 1046 0
 4594 002a 0023     		movs	r3, #0
 4595 002c A7F81636 		strh	r3, [r7, #1558]	@ movhi
1047:..\src/command_processing.c ****     uint16 first_imu_parameter = 2;
 4596              		.loc 1 1047 0
 4597 0030 0223     		movs	r3, #2
 4598 0032 A7F80836 		strh	r3, [r7, #1544]	@ movhi
1048:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 4599              		.loc 1 1048 0
 4600 0036 B7F80A36 		ldrh	r3, [r7, #1546]
 4601 003a 5A1C     		adds	r2, r3, #1
1049:..\src/command_processing.c ****                            num_imus_id_params*PARAM_BYTE_SLOT +
 4602              		.loc 1 1049 0
 4603 003c B7F81636 		ldrh	r3, [r7, #1558]
 4604 0040 1344     		add	r3, r3, r2
1050:..\src/command_processing.c ****                            num_mag_cal_params*PARAM_BYTE_SLOT +
 4605              		.loc 1 1050 0
 4606 0042 0133     		adds	r3, r3, #1
1048:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 4607              		.loc 1 1048 0
 4608 0044 9AB2     		uxth	r2, r3
 4609 0046 D24B     		ldr	r3, .L337
 4610 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4611 004a 9BB2     		uxth	r3, r3
 4612 004c 1344     		add	r3, r3, r2
 4613 004e 9BB2     		uxth	r3, r3
 4614 0050 1A46     		mov	r2, r3	@ movhi
 4615 0052 9200     		lsls	r2, r2, #2
 4616 0054 1344     		add	r3, r3, r2
 4617 0056 1A46     		mov	r2, r3	@ movhi
 4618 0058 9100     		lsls	r1, r2, #2
 4619 005a 1A46     		mov	r2, r3	@ movhi
 4620 005c 0B46     		mov	r3, r1	@ movhi
 4621 005e 1344     		add	r3, r3, r2
 4622 0060 5B00     		lsls	r3, r3, #1
 4623 0062 9BB2     		uxth	r3, r3
 4624 0064 FB33     		adds	r3, r3, #251
 4625 0066 A7F80636 		strh	r3, [r7, #1542]	@ movhi
1051:..\src/command_processing.c ****                            PARAM_BYTE_SLOT   + 
1052:..\src/command_processing.c ****                            (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1053:..\src/command_processing.c ****                            PARAM_BYTE_SLOT + PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 121


1054:..\src/command_processing.c **** 
1055:..\src/command_processing.c ****     //Auxiliary variables
1056:..\src/command_processing.c ****     uint16 CYDATA i, j, k, h;
1057:..\src/command_processing.c ****     uint16 start_byte = 0;
 4626              		.loc 1 1057 0
 4627 006a 0023     		movs	r3, #0
 4628 006c A7F80436 		strh	r3, [r7, #1540]	@ movhi
1058:..\src/command_processing.c **** 
1059:..\src/command_processing.c ****     //Parameters menu string definitions
1060:..\src/command_processing.c ****     char n_imu_str[26]          = "Number of connected IMUs:";
 4629              		.loc 1 1060 0
 4630 0070 07F1FC03 		add	r3, r7, #252
 4631 0074 C74A     		ldr	r2, .L337+4
 4632 0076 1C46     		mov	r4, r3
 4633 0078 1546     		mov	r5, r2
 4634 007a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4635 007c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4636 007e 95E80700 		ldmia	r5, {r0, r1, r2}
 4637 0082 03C4     		stmia	r4!, {r0, r1}
 4638 0084 2280     		strh	r2, [r4]	@ movhi
1061:..\src/command_processing.c ****     char ids_str[11]            = "";
 4639              		.loc 1 1061 0
 4640 0086 07F1F003 		add	r3, r7, #240
 4641 008a 0022     		movs	r2, #0
 4642 008c 1A60     		str	r2, [r3]
 4643 008e 0433     		adds	r3, r3, #4
 4644 0090 0022     		movs	r2, #0
 4645 0092 1A60     		str	r2, [r3]
 4646 0094 C3F80320 		str	r2, [r3, #3]	@ unaligned
1062:..\src/command_processing.c ****     char mag_param_str[20]      = "Mag cal parameters:";
 4647              		.loc 1 1062 0
 4648 0098 07F1DC03 		add	r3, r7, #220
 4649 009c BE4A     		ldr	r2, .L337+8
 4650 009e 1C46     		mov	r4, r3
 4651 00a0 1546     		mov	r5, r2
 4652 00a2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4653 00a4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4654 00a6 2B68     		ldr	r3, [r5]
 4655 00a8 2360     		str	r3, [r4]
1063:..\src/command_processing.c ****     char id_str[16]             = "";
 4656              		.loc 1 1063 0
 4657 00aa 07F1CC03 		add	r3, r7, #204
 4658 00ae 0022     		movs	r2, #0
 4659 00b0 1A60     		str	r2, [r3]
 4660 00b2 0433     		adds	r3, r3, #4
 4661 00b4 0022     		movs	r2, #0
 4662 00b6 1A60     		str	r2, [r3]
 4663 00b8 5A60     		str	r2, [r3, #4]
 4664 00ba 9A60     		str	r2, [r3, #8]
1064:..\src/command_processing.c ****     char imu_table_str[42]      = "";
 4665              		.loc 1 1064 0
 4666 00bc 07F1A003 		add	r3, r7, #160
 4667 00c0 0022     		movs	r2, #0
 4668 00c2 1A60     		str	r2, [r3]
 4669 00c4 0433     		adds	r3, r3, #4
 4670 00c6 2622     		movs	r2, #38
 4671 00c8 0021     		movs	r1, #0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 122


 4672 00ca 1846     		mov	r0, r3
 4673 00cc FFF7FEFF 		bl	memset
1065:..\src/command_processing.c ****     char spi_read_delay_str[26] = "";
 4674              		.loc 1 1065 0
 4675 00d0 07F18403 		add	r3, r7, #132
 4676 00d4 0022     		movs	r2, #0
 4677 00d6 1A60     		str	r2, [r3]
 4678 00d8 0433     		adds	r3, r3, #4
 4679 00da 0022     		movs	r2, #0
 4680 00dc 1A60     		str	r2, [r3]
 4681 00de 5A60     		str	r2, [r3, #4]
 4682 00e0 9A60     		str	r2, [r3, #8]
 4683 00e2 DA60     		str	r2, [r3, #12]
 4684 00e4 1A61     		str	r2, [r3, #16]
 4685 00e6 9A82     		strh	r2, [r3, #20]	@ movhi
1066:..\src/command_processing.c ****     
1067:..\src/command_processing.c ****     //Strings lenghts
1068:..\src/command_processing.c ****     uint8 CYDATA id_str_len = strlen(id_str);
 4686              		.loc 1 1068 0
 4687 00e8 07F1CC03 		add	r3, r7, #204
 4688 00ec 1846     		mov	r0, r3
 4689 00ee FFF7FEFF 		bl	strlen
 4690 00f2 0346     		mov	r3, r0
 4691 00f4 87F80336 		strb	r3, [r7, #1539]
1069:..\src/command_processing.c ****     uint8 CYDATA n_imu_str_len = strlen(n_imu_str);
 4692              		.loc 1 1069 0
 4693 00f8 07F1FC03 		add	r3, r7, #252
 4694 00fc 1846     		mov	r0, r3
 4695 00fe FFF7FEFF 		bl	strlen
 4696 0102 0346     		mov	r3, r0
 4697 0104 87F80236 		strb	r3, [r7, #1538]
1070:..\src/command_processing.c ****     uint8 CYDATA ids_str_len = strlen(ids_str);
 4698              		.loc 1 1070 0
 4699 0108 07F1F003 		add	r3, r7, #240
 4700 010c 1846     		mov	r0, r3
 4701 010e FFF7FEFF 		bl	strlen
 4702 0112 0346     		mov	r3, r0
 4703 0114 87F80136 		strb	r3, [r7, #1537]
1071:..\src/command_processing.c ****     uint8 CYDATA mag_param_str_len = strlen(mag_param_str);
 4704              		.loc 1 1071 0
 4705 0118 07F1DC03 		add	r3, r7, #220
 4706 011c 1846     		mov	r0, r3
 4707 011e FFF7FEFF 		bl	strlen
 4708 0122 0346     		mov	r3, r0
 4709 0124 87F80036 		strb	r3, [r7, #1536]
1072:..\src/command_processing.c ****     uint8 CYDATA imu_table_str_len = strlen(imu_table_str);
 4710              		.loc 1 1072 0
 4711 0128 07F1A003 		add	r3, r7, #160
 4712 012c 1846     		mov	r0, r3
 4713 012e FFF7FEFF 		bl	strlen
 4714 0132 0346     		mov	r3, r0
 4715 0134 87F8FF35 		strb	r3, [r7, #1535]
1073:..\src/command_processing.c ****     uint8 CYDATA spi_read_delay_str_len = strlen(spi_read_delay_str);
 4716              		.loc 1 1073 0
 4717 0138 07F18403 		add	r3, r7, #132
 4718 013c 1846     		mov	r0, r3
 4719 013e FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 123


 4720 0142 0346     		mov	r3, r0
 4721 0144 87F80D36 		strb	r3, [r7, #1549]
1074:..\src/command_processing.c ****     
1075:..\src/command_processing.c ****     char spi_delay_menu[118]    = "";
 4722              		.loc 1 1075 0
 4723 0148 07F10C03 		add	r3, r7, #12
 4724 014c 0022     		movs	r2, #0
 4725 014e 1A60     		str	r2, [r3]
 4726 0150 0433     		adds	r3, r3, #4
 4727 0152 7222     		movs	r2, #114
 4728 0154 0021     		movs	r1, #0
 4729 0156 1846     		mov	r0, r3
 4730 0158 FFF7FEFF 		bl	memset
1076:..\src/command_processing.c ****     uint8 CYDATA spi_delay_menu_len;
1077:..\src/command_processing.c ****  
1078:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 4731              		.loc 1 1078 0
 4732 015c 07F10C00 		add	r0, r7, #12
 4733 0160 6423     		movs	r3, #100
 4734 0162 0A22     		movs	r2, #10
 4735 0164 8D49     		ldr	r1, .L337+12
 4736 0166 FFF7FEFF 		bl	sprintf
1079:..\src/command_processing.c ****     spi_delay_menu_len = strlen(spi_delay_menu);
 4737              		.loc 1 1079 0
 4738 016a 07F10C03 		add	r3, r7, #12
 4739 016e 1846     		mov	r0, r3
 4740 0170 FFF7FEFF 		bl	strlen
 4741 0174 0346     		mov	r3, r0
 4742 0176 87F8FE35 		strb	r3, [r7, #1534]
1080:..\src/command_processing.c **** 
1081:..\src/command_processing.c ****     // Compute number of read parameters depending on N_IMU_Connected and
1082:..\src/command_processing.c ****     // update packet_length
1083:..\src/command_processing.c ****     num_mag_cal_params = (uint16)(N_IMU_Connected / 2);
 4743              		.loc 1 1083 0
 4744 017a 854B     		ldr	r3, .L337
 4745 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4746 017e 5B08     		lsrs	r3, r3, #1
 4747 0180 DBB2     		uxtb	r3, r3
 4748 0182 A7F81636 		strh	r3, [r7, #1558]	@ movhi
1084:..\src/command_processing.c ****     if ( (N_IMU_Connected - num_mag_cal_params*2) > 0 ) num_mag_cal_params++;
 4749              		.loc 1 1084 0
 4750 0186 824B     		ldr	r3, .L337
 4751 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4752 018a 1A46     		mov	r2, r3
 4753 018c B7F81636 		ldrh	r3, [r7, #1558]
 4754 0190 5B00     		lsls	r3, r3, #1
 4755 0192 D31A     		subs	r3, r2, r3
 4756 0194 002B     		cmp	r3, #0
 4757 0196 04DD     		ble	.L292
 4758              		.loc 1 1084 0 is_stmt 0 discriminator 1
 4759 0198 B7F81636 		ldrh	r3, [r7, #1558]
 4760 019c 0133     		adds	r3, r3, #1
 4761 019e A7F81636 		strh	r3, [r7, #1558]	@ movhi
 4762              	.L292:
1085:..\src/command_processing.c ****     
1086:..\src/command_processing.c ****     packet_length = PARAM_BYTE_SLOT +
 4763              		.loc 1 1086 0 is_stmt 1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 124


 4764 01a2 B7F80A36 		ldrh	r3, [r7, #1546]
 4765 01a6 5A1C     		adds	r2, r3, #1
1087:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 4766              		.loc 1 1087 0
 4767 01a8 B7F81636 		ldrh	r3, [r7, #1558]
 4768 01ac 1344     		add	r3, r3, r2
1088:..\src/command_processing.c ****                     num_mag_cal_params*PARAM_BYTE_SLOT +
 4769              		.loc 1 1088 0
 4770 01ae 0133     		adds	r3, r3, #1
1086:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 4771              		.loc 1 1086 0
 4772 01b0 9AB2     		uxth	r2, r3
 4773 01b2 774B     		ldr	r3, .L337
 4774 01b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4775 01b6 9BB2     		uxth	r3, r3
 4776 01b8 1344     		add	r3, r3, r2
 4777 01ba 9BB2     		uxth	r3, r3
 4778 01bc 1A46     		mov	r2, r3	@ movhi
 4779 01be 9200     		lsls	r2, r2, #2
 4780 01c0 1344     		add	r3, r3, r2
 4781 01c2 1A46     		mov	r2, r3	@ movhi
 4782 01c4 9100     		lsls	r1, r2, #2
 4783 01c6 1A46     		mov	r2, r3	@ movhi
 4784 01c8 0B46     		mov	r3, r1	@ movhi
 4785 01ca 1344     		add	r3, r3, r2
 4786 01cc 5B00     		lsls	r3, r3, #1
 4787 01ce 9BB2     		uxth	r3, r3
 4788 01d0 C933     		adds	r3, r3, #201
 4789 01d2 A7F80636 		strh	r3, [r7, #1542]	@ movhi
1089:..\src/command_processing.c ****                     PARAM_BYTE_SLOT   + 
1090:..\src/command_processing.c ****                     (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1091:..\src/command_processing.c ****                     PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1092:..\src/command_processing.c **** 
1093:..\src/command_processing.c ****     first_imu_parameter = 1 + num_imus_id_params + num_mag_cal_params + 2;
 4790              		.loc 1 1093 0
 4791 01d6 B7F80A26 		ldrh	r2, [r7, #1546]	@ movhi
 4792 01da B7F81636 		ldrh	r3, [r7, #1558]	@ movhi
 4793 01de 1344     		add	r3, r3, r2
 4794 01e0 9BB2     		uxth	r3, r3
 4795 01e2 0333     		adds	r3, r3, #3
 4796 01e4 A7F80836 		strh	r3, [r7, #1544]	@ movhi
1094:..\src/command_processing.c ****     packet_data[0] = CMD_GET_PARAM_LIST;
 4797              		.loc 1 1094 0
 4798 01e8 07F58C73 		add	r3, r7, #280
 4799 01ec 0C22     		movs	r2, #12
 4800 01ee 1A70     		strb	r2, [r3]
1095:..\src/command_processing.c ****     packet_data[1] = 1 + num_imus_id_params + num_mag_cal_params + 1 + (uint8)N_IMU_Connected + 1; 
 4801              		.loc 1 1095 0
 4802 01f0 B7F80A36 		ldrh	r3, [r7, #1546]	@ movhi
 4803 01f4 DAB2     		uxtb	r2, r3
 4804 01f6 B7F81636 		ldrh	r3, [r7, #1558]	@ movhi
 4805 01fa DBB2     		uxtb	r3, r3
 4806 01fc 1344     		add	r3, r3, r2
 4807 01fe DAB2     		uxtb	r2, r3
 4808 0200 634B     		ldr	r3, .L337
 4809 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4810 0204 1344     		add	r3, r3, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 125


 4811 0206 DBB2     		uxtb	r3, r3
 4812 0208 0333     		adds	r3, r3, #3
 4813 020a DAB2     		uxtb	r2, r3
 4814 020c 07F58C73 		add	r3, r7, #280
 4815 0210 5A70     		strb	r2, [r3, #1]
1096:..\src/command_processing.c **** 
1097:..\src/command_processing.c ****     switch(index) {
 4816              		.loc 1 1097 0
 4817 0212 BB1D     		adds	r3, r7, #6
 4818 0214 1B88     		ldrh	r3, [r3]
 4819 0216 002B     		cmp	r3, #0
 4820 0218 40F0CE84 		bne	.L335
1098:..\src/command_processing.c ****         case 0:         //List of all parameters with relative types
1099:..\src/command_processing.c ****             /*-------------N IMU--------------*/
1100:..\src/command_processing.c ****             start_byte = 0;
 4821              		.loc 1 1100 0
 4822 021c 0023     		movs	r3, #0
 4823 021e A7F80436 		strh	r3, [r7, #1540]	@ movhi
1101:..\src/command_processing.c ****             packet_data[2] = TYPE_UINT8;
 4824              		.loc 1 1101 0
 4825 0222 07F58C73 		add	r3, r7, #280
 4826 0226 0222     		movs	r2, #2
 4827 0228 9A70     		strb	r2, [r3, #2]
1102:..\src/command_processing.c ****             packet_data[3] = 1;
 4828              		.loc 1 1102 0
 4829 022a 07F58C73 		add	r3, r7, #280
 4830 022e 0122     		movs	r2, #1
 4831 0230 DA70     		strb	r2, [r3, #3]
1103:..\src/command_processing.c ****             packet_data[4] = (uint8)N_IMU_Connected;
 4832              		.loc 1 1103 0
 4833 0232 574B     		ldr	r3, .L337
 4834 0234 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4835 0236 07F58C73 		add	r3, r7, #280
 4836 023a 1A71     		strb	r2, [r3, #4]
1104:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 4837              		.loc 1 1104 0
 4838 023c 97F80236 		ldrb	r3, [r7, #1538]	@ zero_extendqisi2
 4839 0240 A7F81436 		strh	r3, [r7, #1556]	@ movhi
 4840 0244 15E0     		b	.L295
 4841              	.L296:
1105:..\src/command_processing.c ****                 packet_data[5 + n_imu_str_len - i] = n_imu_str[n_imu_str_len - i];
 4842              		.loc 1 1105 0 discriminator 3
 4843 0246 97F80236 		ldrb	r3, [r7, #1538]	@ zero_extendqisi2
 4844 024a 5A1D     		adds	r2, r3, #5
 4845 024c B7F81436 		ldrh	r3, [r7, #1556]
 4846 0250 D31A     		subs	r3, r2, r3
 4847 0252 97F80216 		ldrb	r1, [r7, #1538]	@ zero_extendqisi2
 4848 0256 B7F81426 		ldrh	r2, [r7, #1556]
 4849 025a 8A1A     		subs	r2, r1, r2
 4850 025c 07F1FC01 		add	r1, r7, #252
 4851 0260 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 4852 0262 07F58C72 		add	r2, r7, #280
 4853 0266 D154     		strb	r1, [r2, r3]
1104:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 4854              		.loc 1 1104 0 discriminator 3
 4855 0268 B7F81436 		ldrh	r3, [r7, #1556]
 4856 026c 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 126


 4857 026e A7F81436 		strh	r3, [r7, #1556]	@ movhi
 4858              	.L295:
1104:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 4859              		.loc 1 1104 0 is_stmt 0 discriminator 1
 4860 0272 B7F81436 		ldrh	r3, [r7, #1556]
 4861 0276 002B     		cmp	r3, #0
 4862 0278 E5D1     		bne	.L296
1106:..\src/command_processing.c ****                 
1107:..\src/command_processing.c ****             /*-------------IMUS ID--------------*/
1108:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 4863              		.loc 1 1108 0 is_stmt 1
 4864 027a B7F80436 		ldrh	r3, [r7, #1540]	@ movhi
 4865 027e 3233     		adds	r3, r3, #50
 4866 0280 A7F80436 		strh	r3, [r7, #1540]	@ movhi
1109:..\src/command_processing.c ****             i = 0;
 4867              		.loc 1 1109 0
 4868 0284 0023     		movs	r3, #0
 4869 0286 A7F81436 		strh	r3, [r7, #1556]	@ movhi
1110:..\src/command_processing.c ****             for (k = 0; k < num_imus_id_params; k++){
 4870              		.loc 1 1110 0
 4871 028a 0023     		movs	r3, #0
 4872 028c A7F81036 		strh	r3, [r7, #1552]	@ movhi
 4873 0290 B2E0     		b	.L297
 4874              	.L304:
1111:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 4875              		.loc 1 1111 0
 4876 0292 B7F81026 		ldrh	r2, [r7, #1552]
 4877 0296 07F1F003 		add	r3, r7, #240
 4878 029a 4149     		ldr	r1, .L337+16
 4879 029c 1846     		mov	r0, r3
 4880 029e FFF7FEFF 		bl	sprintf
1112:..\src/command_processing.c ****                 h = 4;
 4881              		.loc 1 1112 0
 4882 02a2 0423     		movs	r3, #4
 4883 02a4 A7F80E36 		strh	r3, [r7, #1550]	@ movhi
1113:..\src/command_processing.c ****                 ids_str_len = strlen(ids_str);
 4884              		.loc 1 1113 0
 4885 02a8 07F1F003 		add	r3, r7, #240
 4886 02ac 1846     		mov	r0, r3
 4887 02ae FFF7FEFF 		bl	strlen
 4888 02b2 0346     		mov	r3, r0
 4889 02b4 87F80136 		strb	r3, [r7, #1537]
1114:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 4890              		.loc 1 1114 0
 4891 02b8 B7F80436 		ldrh	r3, [r7, #1540]
 4892 02bc 9A1C     		adds	r2, r3, #2
 4893 02be B7F81036 		ldrh	r3, [r7, #1552]
 4894 02c2 3221     		movs	r1, #50
 4895 02c4 01FB03F3 		mul	r3, r1, r3
 4896 02c8 1344     		add	r3, r3, r2
 4897 02ca 07F58C72 		add	r2, r7, #280
 4898 02ce 0221     		movs	r1, #2
 4899 02d0 D154     		strb	r1, [r2, r3]
1115:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 4900              		.loc 1 1115 0
 4901 02d2 B7F80436 		ldrh	r3, [r7, #1540]
 4902 02d6 DA1C     		adds	r2, r3, #3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 127


 4903 02d8 B7F81036 		ldrh	r3, [r7, #1552]
 4904 02dc 3221     		movs	r1, #50
 4905 02de 01FB03F3 		mul	r3, r1, r3
 4906 02e2 1344     		add	r3, r3, r2
 4907 02e4 07F58C72 		add	r2, r7, #280
 4908 02e8 0321     		movs	r1, #3
 4909 02ea D154     		strb	r1, [r2, r3]
1116:..\src/command_processing.c ****                 
1117:..\src/command_processing.c ****                 for (j = 3*k; j <= 3*k+2; j++) {  // for each possible imu on port k
 4910              		.loc 1 1117 0
 4911 02ec B7F81036 		ldrh	r3, [r7, #1552]	@ movhi
 4912 02f0 1A46     		mov	r2, r3	@ movhi
 4913 02f2 5200     		lsls	r2, r2, #1
 4914 02f4 1344     		add	r3, r3, r2
 4915 02f6 A7F81236 		strh	r3, [r7, #1554]	@ movhi
 4916 02fa 39E0     		b	.L298
 4917              	.L301:
1118:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 4918              		.loc 1 1118 0
 4919 02fc B7F81436 		ldrh	r3, [r7, #1556]
 4920 0300 284A     		ldr	r2, .L337+20
 4921 0302 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 4922 0304 9BB2     		uxth	r3, r3
 4923 0306 B7F81226 		ldrh	r2, [r7, #1554]
 4924 030a 9A42     		cmp	r2, r3
 4925 030c 17D1     		bne	.L299
1119:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = (uint8)IMU_connected[i];   
 4926              		.loc 1 1119 0
 4927 030e B7F80E26 		ldrh	r2, [r7, #1550]
 4928 0312 B7F80436 		ldrh	r3, [r7, #1540]
 4929 0316 1A44     		add	r2, r2, r3
 4930 0318 B7F81036 		ldrh	r3, [r7, #1552]
 4931 031c 3221     		movs	r1, #50
 4932 031e 01FB03F3 		mul	r3, r1, r3
 4933 0322 1344     		add	r3, r3, r2
 4934 0324 B7F81426 		ldrh	r2, [r7, #1556]
 4935 0328 1E49     		ldr	r1, .L337+20
 4936 032a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 4937 032c 07F58C72 		add	r2, r7, #280
 4938 0330 D154     		strb	r1, [r2, r3]
1120:..\src/command_processing.c ****                         i++;
 4939              		.loc 1 1120 0
 4940 0332 B7F81436 		ldrh	r3, [r7, #1556]
 4941 0336 0133     		adds	r3, r3, #1
 4942 0338 A7F81436 		strh	r3, [r7, #1556]	@ movhi
 4943 033c 0EE0     		b	.L300
 4944              	.L299:
1121:..\src/command_processing.c ****                     } 
1122:..\src/command_processing.c ****                     else {
1123:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = 255;
 4945              		.loc 1 1123 0
 4946 033e B7F80E26 		ldrh	r2, [r7, #1550]
 4947 0342 B7F80436 		ldrh	r3, [r7, #1540]
 4948 0346 1A44     		add	r2, r2, r3
 4949 0348 B7F81036 		ldrh	r3, [r7, #1552]
 4950 034c 3221     		movs	r1, #50
 4951 034e 01FB03F3 		mul	r3, r1, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 128


 4952 0352 1344     		add	r3, r3, r2
 4953 0354 07F58C72 		add	r2, r7, #280
 4954 0358 FF21     		movs	r1, #255
 4955 035a D154     		strb	r1, [r2, r3]
 4956              	.L300:
1124:..\src/command_processing.c ****                     }
1125:..\src/command_processing.c ****                     h++;
 4957              		.loc 1 1125 0 discriminator 2
 4958 035c B7F80E36 		ldrh	r3, [r7, #1550]
 4959 0360 0133     		adds	r3, r3, #1
 4960 0362 A7F80E36 		strh	r3, [r7, #1550]	@ movhi
1117:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 4961              		.loc 1 1117 0 discriminator 2
 4962 0366 B7F81236 		ldrh	r3, [r7, #1554]
 4963 036a 0133     		adds	r3, r3, #1
 4964 036c A7F81236 		strh	r3, [r7, #1554]	@ movhi
 4965              	.L298:
1117:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 4966              		.loc 1 1117 0 is_stmt 0 discriminator 1
 4967 0370 B7F81216 		ldrh	r1, [r7, #1554]
 4968 0374 B7F81026 		ldrh	r2, [r7, #1552]
 4969 0378 1346     		mov	r3, r2
 4970 037a 5B00     		lsls	r3, r3, #1
 4971 037c 1344     		add	r3, r3, r2
 4972 037e 0233     		adds	r3, r3, #2
 4973 0380 9942     		cmp	r1, r3
 4974 0382 BBDD     		ble	.L301
1126:..\src/command_processing.c ****                 }
1127:..\src/command_processing.c **** 
1128:..\src/command_processing.c ****                 //if (IMU_connected[i] >= 3*k && IMU_connected[i] <= 3*k + 2)
1129:..\src/command_processing.c ****                 for(j = ids_str_len; j != 0; j--)
 4975              		.loc 1 1129 0 is_stmt 1
 4976 0384 97F80136 		ldrb	r3, [r7, #1537]	@ zero_extendqisi2
 4977 0388 A7F81236 		strh	r3, [r7, #1554]	@ movhi
 4978 038c 2BE0     		b	.L302
 4979              	.L338:
 4980 038e 00BF     		.align	2
 4981              	.L337:
 4982 0390 00000000 		.word	N_IMU_Connected
 4983 0394 E8050000 		.word	.LC49
 4984 0398 04060000 		.word	.LC50
 4985 039c 0C050000 		.word	.LC51
 4986 03a0 80050000 		.word	.LC52
 4987 03a4 00000000 		.word	IMU_connected
 4988              	.L303:
1130:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 4989              		.loc 1 1130 0 discriminator 3
 4990 03a8 B7F80436 		ldrh	r3, [r7, #1540]
 4991 03ac DA1D     		adds	r2, r3, #7
 4992 03ae B7F81036 		ldrh	r3, [r7, #1552]
 4993 03b2 3221     		movs	r1, #50
 4994 03b4 01FB03F3 		mul	r3, r1, r3
 4995 03b8 1A44     		add	r2, r2, r3
 4996 03ba 97F80136 		ldrb	r3, [r7, #1537]	@ zero_extendqisi2
 4997 03be 1A44     		add	r2, r2, r3
 4998 03c0 B7F81236 		ldrh	r3, [r7, #1554]
 4999 03c4 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 129


 5000 03c6 97F80116 		ldrb	r1, [r7, #1537]	@ zero_extendqisi2
 5001 03ca B7F81226 		ldrh	r2, [r7, #1554]
 5002 03ce 8A1A     		subs	r2, r1, r2
 5003 03d0 07F1F001 		add	r1, r7, #240
 5004 03d4 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 5005 03d6 07F58C72 		add	r2, r7, #280
 5006 03da D154     		strb	r1, [r2, r3]
1129:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 5007              		.loc 1 1129 0 discriminator 3
 5008 03dc B7F81236 		ldrh	r3, [r7, #1554]
 5009 03e0 013B     		subs	r3, r3, #1
 5010 03e2 A7F81236 		strh	r3, [r7, #1554]	@ movhi
 5011              	.L302:
1129:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 5012              		.loc 1 1129 0 is_stmt 0 discriminator 1
 5013 03e6 B7F81236 		ldrh	r3, [r7, #1554]
 5014 03ea 002B     		cmp	r3, #0
 5015 03ec DCD1     		bne	.L303
1110:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 5016              		.loc 1 1110 0 is_stmt 1 discriminator 2
 5017 03ee B7F81036 		ldrh	r3, [r7, #1552]
 5018 03f2 0133     		adds	r3, r3, #1
 5019 03f4 A7F81036 		strh	r3, [r7, #1552]	@ movhi
 5020              	.L297:
1110:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 5021              		.loc 1 1110 0 is_stmt 0 discriminator 1
 5022 03f8 B7F81026 		ldrh	r2, [r7, #1552]
 5023 03fc B7F80A36 		ldrh	r3, [r7, #1546]
 5024 0400 9A42     		cmp	r2, r3
 5025 0402 FFF446AF 		bcc	.L304
1131:..\src/command_processing.c ****             }
1132:..\src/command_processing.c ****             
1133:..\src/command_processing.c ****             /*-------------GET MAG PARAM--------------*/
1134:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_imus_id_params;
 5026              		.loc 1 1134 0 is_stmt 1
 5027 0406 B7F80A36 		ldrh	r3, [r7, #1546]	@ movhi
 5028 040a 1A46     		mov	r2, r3	@ movhi
 5029 040c 9200     		lsls	r2, r2, #2
 5030 040e 1344     		add	r3, r3, r2
 5031 0410 1A46     		mov	r2, r3	@ movhi
 5032 0412 9100     		lsls	r1, r2, #2
 5033 0414 1A46     		mov	r2, r3	@ movhi
 5034 0416 0B46     		mov	r3, r1	@ movhi
 5035 0418 1344     		add	r3, r3, r2
 5036 041a 5B00     		lsls	r3, r3, #1
 5037 041c 9AB2     		uxth	r2, r3
 5038 041e B7F80436 		ldrh	r3, [r7, #1540]	@ movhi
 5039 0422 1344     		add	r3, r3, r2
 5040 0424 A7F80436 		strh	r3, [r7, #1540]	@ movhi
1135:..\src/command_processing.c ****             for (k = 0; k < num_mag_cal_params; k++){
 5041              		.loc 1 1135 0
 5042 0428 0023     		movs	r3, #0
 5043 042a A7F81036 		strh	r3, [r7, #1552]	@ movhi
 5044 042e 1FE1     		b	.L305
 5045              	.L312:
1136:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 5046              		.loc 1 1136 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 130


 5047 0430 B7F80436 		ldrh	r3, [r7, #1540]
 5048 0434 9A1C     		adds	r2, r3, #2
 5049 0436 B7F81036 		ldrh	r3, [r7, #1552]
 5050 043a 3221     		movs	r1, #50
 5051 043c 01FB03F3 		mul	r3, r1, r3
 5052 0440 1344     		add	r3, r3, r2
 5053 0442 07F58C72 		add	r2, r7, #280
 5054 0446 0221     		movs	r1, #2
 5055 0448 D154     		strb	r1, [r2, r3]
1137:..\src/command_processing.c ****                 
1138:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 5056              		.loc 1 1138 0
 5057 044a B7F80436 		ldrh	r3, [r7, #1540]
 5058 044e DA1C     		adds	r2, r3, #3
 5059 0450 B7F81036 		ldrh	r3, [r7, #1552]
 5060 0454 3221     		movs	r1, #50
 5061 0456 01FB03F3 		mul	r3, r1, r3
 5062 045a 1344     		add	r3, r3, r2
 5063 045c 07F58C72 		add	r2, r7, #280
 5064 0460 0321     		movs	r1, #3
 5065 0462 D154     		strb	r1, [r2, r3]
1139:..\src/command_processing.c ****                 packet_data[4+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 5066              		.loc 1 1139 0
 5067 0464 B7F80436 		ldrh	r3, [r7, #1540]
 5068 0468 1A1D     		adds	r2, r3, #4
 5069 046a B7F81036 		ldrh	r3, [r7, #1552]
 5070 046e 3221     		movs	r1, #50
 5071 0470 01FB03F3 		mul	r3, r1, r3
 5072 0474 1A44     		add	r2, r2, r3
 5073 0476 B7F81036 		ldrh	r3, [r7, #1552]
 5074 047a 5B00     		lsls	r3, r3, #1
 5075 047c B149     		ldr	r1, .L339
 5076 047e CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 5077 0480 1846     		mov	r0, r3
 5078 0482 B149     		ldr	r1, .L339+4
 5079 0484 0346     		mov	r3, r0
 5080 0486 5B00     		lsls	r3, r3, #1
 5081 0488 0344     		add	r3, r3, r0
 5082 048a 0B44     		add	r3, r3, r1
 5083 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5084 048e 07F58C73 		add	r3, r7, #280
 5085 0492 9954     		strb	r1, [r3, r2]
1140:..\src/command_processing.c ****                 packet_data[5+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 5086              		.loc 1 1140 0
 5087 0494 B7F80436 		ldrh	r3, [r7, #1540]
 5088 0498 5A1D     		adds	r2, r3, #5
 5089 049a B7F81036 		ldrh	r3, [r7, #1552]
 5090 049e 3221     		movs	r1, #50
 5091 04a0 01FB03F3 		mul	r3, r1, r3
 5092 04a4 1A44     		add	r2, r2, r3
 5093 04a6 B7F81036 		ldrh	r3, [r7, #1552]
 5094 04aa 5B00     		lsls	r3, r3, #1
 5095 04ac A549     		ldr	r1, .L339
 5096 04ae CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 5097 04b0 1846     		mov	r0, r3
 5098 04b2 A549     		ldr	r1, .L339+4
 5099 04b4 0346     		mov	r3, r0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 131


 5100 04b6 5B00     		lsls	r3, r3, #1
 5101 04b8 0344     		add	r3, r3, r0
 5102 04ba 0B44     		add	r3, r3, r1
 5103 04bc 0133     		adds	r3, r3, #1
 5104 04be 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5105 04c0 07F58C73 		add	r3, r7, #280
 5106 04c4 9954     		strb	r1, [r3, r2]
1141:..\src/command_processing.c ****                 packet_data[6+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 5107              		.loc 1 1141 0
 5108 04c6 B7F80436 		ldrh	r3, [r7, #1540]
 5109 04ca 9A1D     		adds	r2, r3, #6
 5110 04cc B7F81036 		ldrh	r3, [r7, #1552]
 5111 04d0 3221     		movs	r1, #50
 5112 04d2 01FB03F3 		mul	r3, r1, r3
 5113 04d6 1A44     		add	r2, r2, r3
 5114 04d8 B7F81036 		ldrh	r3, [r7, #1552]
 5115 04dc 5B00     		lsls	r3, r3, #1
 5116 04de 9949     		ldr	r1, .L339
 5117 04e0 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 5118 04e2 1846     		mov	r0, r3
 5119 04e4 9849     		ldr	r1, .L339+4
 5120 04e6 0346     		mov	r3, r0
 5121 04e8 5B00     		lsls	r3, r3, #1
 5122 04ea 0344     		add	r3, r3, r0
 5123 04ec 0B44     		add	r3, r3, r1
 5124 04ee 0233     		adds	r3, r3, #2
 5125 04f0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5126 04f2 07F58C73 		add	r3, r7, #280
 5127 04f6 9954     		strb	r1, [r3, r2]
1142:..\src/command_processing.c ****                 
1143:..\src/command_processing.c ****                 // check if there is a second value
1144:..\src/command_processing.c ****                 if ( N_IMU_Connected < 2*(k+1) ) {
 5128              		.loc 1 1144 0
 5129 04f8 944B     		ldr	r3, .L339+8
 5130 04fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5131 04fc 1A46     		mov	r2, r3
 5132 04fe B7F81036 		ldrh	r3, [r7, #1552]
 5133 0502 0133     		adds	r3, r3, #1
 5134 0504 5B00     		lsls	r3, r3, #1
 5135 0506 9A42     		cmp	r2, r3
 5136 0508 28DA     		bge	.L306
1145:..\src/command_processing.c ****                     // there is only one value
1146:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 5137              		.loc 1 1146 0
 5138 050a 97F80036 		ldrb	r3, [r7, #1536]	@ zero_extendqisi2
 5139 050e A7F81236 		strh	r3, [r7, #1554]	@ movhi
 5140 0512 1EE0     		b	.L307
 5141              	.L308:
1147:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 5142              		.loc 1 1147 0 discriminator 3
 5143 0514 B7F80436 		ldrh	r3, [r7, #1540]
 5144 0518 DA1D     		adds	r2, r3, #7
 5145 051a B7F81036 		ldrh	r3, [r7, #1552]
 5146 051e 3221     		movs	r1, #50
 5147 0520 01FB03F3 		mul	r3, r1, r3
 5148 0524 1A44     		add	r2, r2, r3
 5149 0526 97F80036 		ldrb	r3, [r7, #1536]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 132


 5150 052a 1A44     		add	r2, r2, r3
 5151 052c B7F81236 		ldrh	r3, [r7, #1554]
 5152 0530 D31A     		subs	r3, r2, r3
 5153 0532 97F80016 		ldrb	r1, [r7, #1536]	@ zero_extendqisi2
 5154 0536 B7F81226 		ldrh	r2, [r7, #1554]
 5155 053a 8A1A     		subs	r2, r1, r2
 5156 053c 07F1DC01 		add	r1, r7, #220
 5157 0540 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 5158 0542 07F58C72 		add	r2, r7, #280
 5159 0546 D154     		strb	r1, [r2, r3]
1146:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 5160              		.loc 1 1146 0 discriminator 3
 5161 0548 B7F81236 		ldrh	r3, [r7, #1554]
 5162 054c 013B     		subs	r3, r3, #1
 5163 054e A7F81236 		strh	r3, [r7, #1554]	@ movhi
 5164              	.L307:
1146:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 5165              		.loc 1 1146 0 is_stmt 0 discriminator 1
 5166 0552 B7F81236 		ldrh	r3, [r7, #1554]
 5167 0556 002B     		cmp	r3, #0
 5168 0558 DCD1     		bne	.L308
 5169 055a 84E0     		b	.L309
 5170              	.L306:
1148:..\src/command_processing.c ****                 }
1149:..\src/command_processing.c ****                 else {
1150:..\src/command_processing.c ****                     // fill the second value
1151:..\src/command_processing.c ****                     packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 6;
 5171              		.loc 1 1151 0 is_stmt 1
 5172 055c B7F80436 		ldrh	r3, [r7, #1540]
 5173 0560 DA1C     		adds	r2, r3, #3
 5174 0562 B7F81036 		ldrh	r3, [r7, #1552]
 5175 0566 3221     		movs	r1, #50
 5176 0568 01FB03F3 		mul	r3, r1, r3
 5177 056c 1344     		add	r3, r3, r2
 5178 056e 07F58C72 		add	r2, r7, #280
 5179 0572 0621     		movs	r1, #6
 5180 0574 D154     		strb	r1, [r2, r3]
1152:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 5181              		.loc 1 1152 0
 5182 0576 B7F80436 		ldrh	r3, [r7, #1540]
 5183 057a DA1D     		adds	r2, r3, #7
 5184 057c B7F81036 		ldrh	r3, [r7, #1552]
 5185 0580 3221     		movs	r1, #50
 5186 0582 01FB03F3 		mul	r3, r1, r3
 5187 0586 1A44     		add	r2, r2, r3
 5188 0588 B7F81036 		ldrh	r3, [r7, #1552]
 5189 058c 5B00     		lsls	r3, r3, #1
 5190 058e 0133     		adds	r3, r3, #1
 5191 0590 6C49     		ldr	r1, .L339
 5192 0592 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 5193 0594 1846     		mov	r0, r3
 5194 0596 6C49     		ldr	r1, .L339+4
 5195 0598 0346     		mov	r3, r0
 5196 059a 5B00     		lsls	r3, r3, #1
 5197 059c 0344     		add	r3, r3, r0
 5198 059e 0B44     		add	r3, r3, r1
 5199 05a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 133


 5200 05a2 07F58C73 		add	r3, r7, #280
 5201 05a6 9954     		strb	r1, [r3, r2]
1153:..\src/command_processing.c ****                     packet_data[8+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 5202              		.loc 1 1153 0
 5203 05a8 B7F80436 		ldrh	r3, [r7, #1540]
 5204 05ac 03F10802 		add	r2, r3, #8
 5205 05b0 B7F81036 		ldrh	r3, [r7, #1552]
 5206 05b4 3221     		movs	r1, #50
 5207 05b6 01FB03F3 		mul	r3, r1, r3
 5208 05ba 1A44     		add	r2, r2, r3
 5209 05bc B7F81036 		ldrh	r3, [r7, #1552]
 5210 05c0 5B00     		lsls	r3, r3, #1
 5211 05c2 0133     		adds	r3, r3, #1
 5212 05c4 5F49     		ldr	r1, .L339
 5213 05c6 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 5214 05c8 1846     		mov	r0, r3
 5215 05ca 5F49     		ldr	r1, .L339+4
 5216 05cc 0346     		mov	r3, r0
 5217 05ce 5B00     		lsls	r3, r3, #1
 5218 05d0 0344     		add	r3, r3, r0
 5219 05d2 0B44     		add	r3, r3, r1
 5220 05d4 0133     		adds	r3, r3, #1
 5221 05d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5222 05d8 07F58C73 		add	r3, r7, #280
 5223 05dc 9954     		strb	r1, [r3, r2]
1154:..\src/command_processing.c ****                     packet_data[9+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 5224              		.loc 1 1154 0
 5225 05de B7F80436 		ldrh	r3, [r7, #1540]
 5226 05e2 03F10902 		add	r2, r3, #9
 5227 05e6 B7F81036 		ldrh	r3, [r7, #1552]
 5228 05ea 3221     		movs	r1, #50
 5229 05ec 01FB03F3 		mul	r3, r1, r3
 5230 05f0 1A44     		add	r2, r2, r3
 5231 05f2 B7F81036 		ldrh	r3, [r7, #1552]
 5232 05f6 5B00     		lsls	r3, r3, #1
 5233 05f8 0133     		adds	r3, r3, #1
 5234 05fa 5249     		ldr	r1, .L339
 5235 05fc CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 5236 05fe 1846     		mov	r0, r3
 5237 0600 5149     		ldr	r1, .L339+4
 5238 0602 0346     		mov	r3, r0
 5239 0604 5B00     		lsls	r3, r3, #1
 5240 0606 0344     		add	r3, r3, r0
 5241 0608 0B44     		add	r3, r3, r1
 5242 060a 0233     		adds	r3, r3, #2
 5243 060c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5244 060e 07F58C73 		add	r3, r7, #280
 5245 0612 9954     		strb	r1, [r3, r2]
1155:..\src/command_processing.c ****                 
1156:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 5246              		.loc 1 1156 0
 5247 0614 97F80036 		ldrb	r3, [r7, #1536]	@ zero_extendqisi2
 5248 0618 A7F81236 		strh	r3, [r7, #1554]	@ movhi
 5249 061c 1FE0     		b	.L310
 5250              	.L311:
1157:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 5251              		.loc 1 1157 0 discriminator 3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 134


 5252 061e B7F80436 		ldrh	r3, [r7, #1540]
 5253 0622 03F10A02 		add	r2, r3, #10
 5254 0626 B7F81036 		ldrh	r3, [r7, #1552]
 5255 062a 3221     		movs	r1, #50
 5256 062c 01FB03F3 		mul	r3, r1, r3
 5257 0630 1A44     		add	r2, r2, r3
 5258 0632 97F80036 		ldrb	r3, [r7, #1536]	@ zero_extendqisi2
 5259 0636 1A44     		add	r2, r2, r3
 5260 0638 B7F81236 		ldrh	r3, [r7, #1554]
 5261 063c D31A     		subs	r3, r2, r3
 5262 063e 97F80016 		ldrb	r1, [r7, #1536]	@ zero_extendqisi2
 5263 0642 B7F81226 		ldrh	r2, [r7, #1554]
 5264 0646 8A1A     		subs	r2, r1, r2
 5265 0648 07F1DC01 		add	r1, r7, #220
 5266 064c 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 5267 064e 07F58C72 		add	r2, r7, #280
 5268 0652 D154     		strb	r1, [r2, r3]
1156:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 5269              		.loc 1 1156 0 discriminator 3
 5270 0654 B7F81236 		ldrh	r3, [r7, #1554]
 5271 0658 013B     		subs	r3, r3, #1
 5272 065a A7F81236 		strh	r3, [r7, #1554]	@ movhi
 5273              	.L310:
1156:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 5274              		.loc 1 1156 0 is_stmt 0 discriminator 1
 5275 065e B7F81236 		ldrh	r3, [r7, #1554]
 5276 0662 002B     		cmp	r3, #0
 5277 0664 DBD1     		bne	.L311
 5278              	.L309:
1135:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 5279              		.loc 1 1135 0 is_stmt 1 discriminator 2
 5280 0666 B7F81036 		ldrh	r3, [r7, #1552]
 5281 066a 0133     		adds	r3, r3, #1
 5282 066c A7F81036 		strh	r3, [r7, #1552]	@ movhi
 5283              	.L305:
1135:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 5284              		.loc 1 1135 0 is_stmt 0 discriminator 1
 5285 0670 B7F81026 		ldrh	r2, [r7, #1552]
 5286 0674 B7F81636 		ldrh	r3, [r7, #1558]
 5287 0678 9A42     		cmp	r2, r3
 5288 067a FFF4D9AE 		bcc	.L312
1158:..\src/command_processing.c ****                 }
1159:..\src/command_processing.c ****             }
1160:..\src/command_processing.c ****             
1161:..\src/command_processing.c ****             /*-----------------ID-----------------*/
1162:..\src/command_processing.c ****             
1163:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_mag_cal_params;
 5289              		.loc 1 1163 0 is_stmt 1
 5290 067e B7F81636 		ldrh	r3, [r7, #1558]	@ movhi
 5291 0682 1A46     		mov	r2, r3	@ movhi
 5292 0684 9200     		lsls	r2, r2, #2
 5293 0686 1344     		add	r3, r3, r2
 5294 0688 1A46     		mov	r2, r3	@ movhi
 5295 068a 9100     		lsls	r1, r2, #2
 5296 068c 1A46     		mov	r2, r3	@ movhi
 5297 068e 0B46     		mov	r3, r1	@ movhi
 5298 0690 1344     		add	r3, r3, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 135


 5299 0692 5B00     		lsls	r3, r3, #1
 5300 0694 9AB2     		uxth	r2, r3
 5301 0696 B7F80436 		ldrh	r3, [r7, #1540]	@ movhi
 5302 069a 1344     		add	r3, r3, r2
 5303 069c A7F80436 		strh	r3, [r7, #1540]	@ movhi
1164:..\src/command_processing.c ****             sprintf(id_str, "%u - Device ID:", first_imu_parameter-1);
 5304              		.loc 1 1164 0
 5305 06a0 B7F80836 		ldrh	r3, [r7, #1544]
 5306 06a4 5A1E     		subs	r2, r3, #1
 5307 06a6 07F1CC03 		add	r3, r7, #204
 5308 06aa 2949     		ldr	r1, .L339+12
 5309 06ac 1846     		mov	r0, r3
 5310 06ae FFF7FEFF 		bl	sprintf
1165:..\src/command_processing.c ****             id_str_len = strlen(id_str);
 5311              		.loc 1 1165 0
 5312 06b2 07F1CC03 		add	r3, r7, #204
 5313 06b6 1846     		mov	r0, r3
 5314 06b8 FFF7FEFF 		bl	strlen
 5315 06bc 0346     		mov	r3, r0
 5316 06be 87F80336 		strb	r3, [r7, #1539]
1166:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_UINT8;
 5317              		.loc 1 1166 0
 5318 06c2 B7F80436 		ldrh	r3, [r7, #1540]
 5319 06c6 0233     		adds	r3, r3, #2
 5320 06c8 07F58C72 		add	r2, r7, #280
 5321 06cc 0221     		movs	r1, #2
 5322 06ce D154     		strb	r1, [r2, r3]
1167:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 5323              		.loc 1 1167 0
 5324 06d0 B7F80436 		ldrh	r3, [r7, #1540]
 5325 06d4 0333     		adds	r3, r3, #3
 5326 06d6 07F58C72 		add	r2, r7, #280
 5327 06da 0121     		movs	r1, #1
 5328 06dc D154     		strb	r1, [r2, r3]
1168:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.id;
 5329              		.loc 1 1168 0
 5330 06de B7F80436 		ldrh	r3, [r7, #1540]
 5331 06e2 0433     		adds	r3, r3, #4
 5332 06e4 1B4A     		ldr	r2, .L339+16
 5333 06e6 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 5334 06e8 07F58C72 		add	r2, r7, #280
 5335 06ec D154     		strb	r1, [r2, r3]
1169:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 5336              		.loc 1 1169 0
 5337 06ee 97F80336 		ldrb	r3, [r7, #1539]	@ zero_extendqisi2
 5338 06f2 A7F81436 		strh	r3, [r7, #1556]	@ movhi
 5339 06f6 18E0     		b	.L313
 5340              	.L314:
1170:..\src/command_processing.c ****                 packet_data[5+start_byte + id_str_len - i] = id_str[id_str_len - i];
 5341              		.loc 1 1170 0 discriminator 3
 5342 06f8 B7F80436 		ldrh	r3, [r7, #1540]
 5343 06fc 5A1D     		adds	r2, r3, #5
 5344 06fe 97F80336 		ldrb	r3, [r7, #1539]	@ zero_extendqisi2
 5345 0702 1A44     		add	r2, r2, r3
 5346 0704 B7F81436 		ldrh	r3, [r7, #1556]
 5347 0708 D31A     		subs	r3, r2, r3
 5348 070a 97F80316 		ldrb	r1, [r7, #1539]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 136


 5349 070e B7F81426 		ldrh	r2, [r7, #1556]
 5350 0712 8A1A     		subs	r2, r1, r2
 5351 0714 07F1CC01 		add	r1, r7, #204
 5352 0718 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 5353 071a 07F58C72 		add	r2, r7, #280
 5354 071e D154     		strb	r1, [r2, r3]
1169:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 5355              		.loc 1 1169 0 discriminator 3
 5356 0720 B7F81436 		ldrh	r3, [r7, #1556]
 5357 0724 013B     		subs	r3, r3, #1
 5358 0726 A7F81436 		strh	r3, [r7, #1556]	@ movhi
 5359              	.L313:
1169:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 5360              		.loc 1 1169 0 is_stmt 0 discriminator 1
 5361 072a B7F81436 		ldrh	r3, [r7, #1556]
 5362 072e 002B     		cmp	r3, #0
 5363 0730 E2D1     		bne	.L314
1171:..\src/command_processing.c ****                 
1172:..\src/command_processing.c ****             /*-------------GET IMUS MODE-------------*/
1173:..\src/command_processing.c ****             
1174:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 5364              		.loc 1 1174 0 is_stmt 1
 5365 0732 B7F80436 		ldrh	r3, [r7, #1540]	@ movhi
 5366 0736 3233     		adds	r3, r3, #50
 5367 0738 A7F80436 		strh	r3, [r7, #1540]	@ movhi
1175:..\src/command_processing.c ****             for (i = 0; i < (uint8)N_IMU_Connected; i++){
 5368              		.loc 1 1175 0
 5369 073c 0023     		movs	r3, #0
 5370 073e A7F81436 		strh	r3, [r7, #1556]	@ movhi
 5371 0742 37E1     		b	.L315
 5372              	.L340:
 5373              		.align	2
 5374              	.L339:
 5375 0744 00000000 		.word	IMU_connected
 5376 0748 00000000 		.word	MagCal
 5377 074c 00000000 		.word	N_IMU_Connected
 5378 0750 8C050000 		.word	.LC53
 5379 0754 00000000 		.word	c_mem
 5380              	.L318:
1176:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 5381              		.loc 1 1176 0
 5382 0758 B7F80826 		ldrh	r2, [r7, #1544]
 5383 075c B7F81436 		ldrh	r3, [r7, #1556]
 5384 0760 D118     		adds	r1, r2, r3
 5385 0762 B7F81436 		ldrh	r3, [r7, #1556]
 5386 0766 D54A     		ldr	r2, .L341
 5387 0768 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 5388 076a 07F1A000 		add	r0, r7, #160
 5389 076e 0A46     		mov	r2, r1
 5390 0770 D349     		ldr	r1, .L341+4
 5391 0772 FFF7FEFF 		bl	sprintf
1177:..\src/command_processing.c ****                 imu_table_str_len = strlen(imu_table_str);
 5392              		.loc 1 1177 0
 5393 0776 07F1A003 		add	r3, r7, #160
 5394 077a 1846     		mov	r0, r3
 5395 077c FFF7FEFF 		bl	strlen
 5396 0780 0346     		mov	r3, r0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 137


 5397 0782 87F8FF35 		strb	r3, [r7, #1535]
1178:..\src/command_processing.c ****             
1179:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte + PARAM_BYTE_SLOT*i)] = TYPE_UINT8;
 5398              		.loc 1 1179 0
 5399 0786 B7F81436 		ldrh	r3, [r7, #1556]	@ movhi
 5400 078a 1A46     		mov	r2, r3	@ movhi
 5401 078c 9200     		lsls	r2, r2, #2
 5402 078e 1344     		add	r3, r3, r2
 5403 0790 1A46     		mov	r2, r3	@ movhi
 5404 0792 9100     		lsls	r1, r2, #2
 5405 0794 1A46     		mov	r2, r3	@ movhi
 5406 0796 0B46     		mov	r3, r1	@ movhi
 5407 0798 1344     		add	r3, r3, r2
 5408 079a 5B00     		lsls	r3, r3, #1
 5409 079c 9AB2     		uxth	r2, r3
 5410 079e B7F80436 		ldrh	r3, [r7, #1540]	@ movhi
 5411 07a2 1344     		add	r3, r3, r2
 5412 07a4 9BB2     		uxth	r3, r3
 5413 07a6 0233     		adds	r3, r3, #2
 5414 07a8 9BB2     		uxth	r3, r3
 5415 07aa 1A46     		mov	r2, r3
 5416 07ac 07F58C73 		add	r3, r7, #280
 5417 07b0 0221     		movs	r1, #2
 5418 07b2 9954     		strb	r1, [r3, r2]
1180:..\src/command_processing.c ****                 packet_data[(uint16)(3 + start_byte + PARAM_BYTE_SLOT*i)] = 5;
 5419              		.loc 1 1180 0
 5420 07b4 B7F81436 		ldrh	r3, [r7, #1556]	@ movhi
 5421 07b8 1A46     		mov	r2, r3	@ movhi
 5422 07ba 9200     		lsls	r2, r2, #2
 5423 07bc 1344     		add	r3, r3, r2
 5424 07be 1A46     		mov	r2, r3	@ movhi
 5425 07c0 9100     		lsls	r1, r2, #2
 5426 07c2 1A46     		mov	r2, r3	@ movhi
 5427 07c4 0B46     		mov	r3, r1	@ movhi
 5428 07c6 1344     		add	r3, r3, r2
 5429 07c8 5B00     		lsls	r3, r3, #1
 5430 07ca 9AB2     		uxth	r2, r3
 5431 07cc B7F80436 		ldrh	r3, [r7, #1540]	@ movhi
 5432 07d0 1344     		add	r3, r3, r2
 5433 07d2 9BB2     		uxth	r3, r3
 5434 07d4 0333     		adds	r3, r3, #3
 5435 07d6 9BB2     		uxth	r3, r3
 5436 07d8 1A46     		mov	r2, r3
 5437 07da 07F58C73 		add	r3, r7, #280
 5438 07de 0521     		movs	r1, #5
 5439 07e0 9954     		strb	r1, [r3, r2]
1181:..\src/command_processing.c ****                 
1182:..\src/command_processing.c ****                 packet_data[(uint16)(4 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.IMU_conf[
 5440              		.loc 1 1182 0
 5441 07e2 B7F81436 		ldrh	r3, [r7, #1556]	@ movhi
 5442 07e6 1A46     		mov	r2, r3	@ movhi
 5443 07e8 9200     		lsls	r2, r2, #2
 5444 07ea 1344     		add	r3, r3, r2
 5445 07ec 1A46     		mov	r2, r3	@ movhi
 5446 07ee 9100     		lsls	r1, r2, #2
 5447 07f0 1A46     		mov	r2, r3	@ movhi
 5448 07f2 0B46     		mov	r3, r1	@ movhi
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 138


 5449 07f4 1344     		add	r3, r3, r2
 5450 07f6 5B00     		lsls	r3, r3, #1
 5451 07f8 9AB2     		uxth	r2, r3
 5452 07fa B7F80436 		ldrh	r3, [r7, #1540]	@ movhi
 5453 07fe 1344     		add	r3, r3, r2
 5454 0800 9BB2     		uxth	r3, r3
 5455 0802 0433     		adds	r3, r3, #4
 5456 0804 9BB2     		uxth	r3, r3
 5457 0806 1846     		mov	r0, r3
 5458 0808 B7F81436 		ldrh	r3, [r7, #1556]
 5459 080c AB4A     		ldr	r2, .L341
 5460 080e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 5461 0810 1946     		mov	r1, r3
 5462 0812 AC4A     		ldr	r2, .L341+8
 5463 0814 0B46     		mov	r3, r1
 5464 0816 9B00     		lsls	r3, r3, #2
 5465 0818 0B44     		add	r3, r3, r1
 5466 081a 1344     		add	r3, r3, r2
 5467 081c 03F22113 		addw	r3, r3, #289
 5468 0820 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5469 0822 07F58C73 		add	r3, r7, #280
 5470 0826 1A54     		strb	r2, [r3, r0]
1183:..\src/command_processing.c ****                 packet_data[(uint16)(5 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.IMU_conf[
 5471              		.loc 1 1183 0
 5472 0828 B7F81436 		ldrh	r3, [r7, #1556]	@ movhi
 5473 082c 1A46     		mov	r2, r3	@ movhi
 5474 082e 9200     		lsls	r2, r2, #2
 5475 0830 1344     		add	r3, r3, r2
 5476 0832 1A46     		mov	r2, r3	@ movhi
 5477 0834 9100     		lsls	r1, r2, #2
 5478 0836 1A46     		mov	r2, r3	@ movhi
 5479 0838 0B46     		mov	r3, r1	@ movhi
 5480 083a 1344     		add	r3, r3, r2
 5481 083c 5B00     		lsls	r3, r3, #1
 5482 083e 9AB2     		uxth	r2, r3
 5483 0840 B7F80436 		ldrh	r3, [r7, #1540]	@ movhi
 5484 0844 1344     		add	r3, r3, r2
 5485 0846 9BB2     		uxth	r3, r3
 5486 0848 0533     		adds	r3, r3, #5
 5487 084a 9BB2     		uxth	r3, r3
 5488 084c 1846     		mov	r0, r3
 5489 084e B7F81436 		ldrh	r3, [r7, #1556]
 5490 0852 9A4A     		ldr	r2, .L341
 5491 0854 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 5492 0856 1946     		mov	r1, r3
 5493 0858 9A4A     		ldr	r2, .L341+8
 5494 085a 0B46     		mov	r3, r1
 5495 085c 9B00     		lsls	r3, r3, #2
 5496 085e 0B44     		add	r3, r3, r1
 5497 0860 1344     		add	r3, r3, r2
 5498 0862 03F59173 		add	r3, r3, #290
 5499 0866 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5500 0868 07F58C73 		add	r3, r7, #280
 5501 086c 1A54     		strb	r2, [r3, r0]
1184:..\src/command_processing.c ****                 packet_data[(uint16)(6 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.IMU_conf[
 5502              		.loc 1 1184 0
 5503 086e B7F81436 		ldrh	r3, [r7, #1556]	@ movhi
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 139


 5504 0872 1A46     		mov	r2, r3	@ movhi
 5505 0874 9200     		lsls	r2, r2, #2
 5506 0876 1344     		add	r3, r3, r2
 5507 0878 1A46     		mov	r2, r3	@ movhi
 5508 087a 9100     		lsls	r1, r2, #2
 5509 087c 1A46     		mov	r2, r3	@ movhi
 5510 087e 0B46     		mov	r3, r1	@ movhi
 5511 0880 1344     		add	r3, r3, r2
 5512 0882 5B00     		lsls	r3, r3, #1
 5513 0884 9AB2     		uxth	r2, r3
 5514 0886 B7F80436 		ldrh	r3, [r7, #1540]	@ movhi
 5515 088a 1344     		add	r3, r3, r2
 5516 088c 9BB2     		uxth	r3, r3
 5517 088e 0633     		adds	r3, r3, #6
 5518 0890 9BB2     		uxth	r3, r3
 5519 0892 1846     		mov	r0, r3
 5520 0894 B7F81436 		ldrh	r3, [r7, #1556]
 5521 0898 884A     		ldr	r2, .L341
 5522 089a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 5523 089c 1946     		mov	r1, r3
 5524 089e 894A     		ldr	r2, .L341+8
 5525 08a0 0B46     		mov	r3, r1
 5526 08a2 9B00     		lsls	r3, r3, #2
 5527 08a4 0B44     		add	r3, r3, r1
 5528 08a6 1344     		add	r3, r3, r2
 5529 08a8 03F22313 		addw	r3, r3, #291
 5530 08ac 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5531 08ae 07F58C73 		add	r3, r7, #280
 5532 08b2 1A54     		strb	r2, [r3, r0]
1185:..\src/command_processing.c ****                 packet_data[(uint16)(7 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.IMU_conf[
 5533              		.loc 1 1185 0
 5534 08b4 B7F81436 		ldrh	r3, [r7, #1556]	@ movhi
 5535 08b8 1A46     		mov	r2, r3	@ movhi
 5536 08ba 9200     		lsls	r2, r2, #2
 5537 08bc 1344     		add	r3, r3, r2
 5538 08be 1A46     		mov	r2, r3	@ movhi
 5539 08c0 9100     		lsls	r1, r2, #2
 5540 08c2 1A46     		mov	r2, r3	@ movhi
 5541 08c4 0B46     		mov	r3, r1	@ movhi
 5542 08c6 1344     		add	r3, r3, r2
 5543 08c8 5B00     		lsls	r3, r3, #1
 5544 08ca 9AB2     		uxth	r2, r3
 5545 08cc B7F80436 		ldrh	r3, [r7, #1540]	@ movhi
 5546 08d0 1344     		add	r3, r3, r2
 5547 08d2 9BB2     		uxth	r3, r3
 5548 08d4 0733     		adds	r3, r3, #7
 5549 08d6 9BB2     		uxth	r3, r3
 5550 08d8 1846     		mov	r0, r3
 5551 08da B7F81436 		ldrh	r3, [r7, #1556]
 5552 08de 774A     		ldr	r2, .L341
 5553 08e0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 5554 08e2 1946     		mov	r1, r3
 5555 08e4 774A     		ldr	r2, .L341+8
 5556 08e6 0B46     		mov	r3, r1
 5557 08e8 9B00     		lsls	r3, r3, #2
 5558 08ea 0B44     		add	r3, r3, r1
 5559 08ec 1344     		add	r3, r3, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 140


 5560 08ee 03F59273 		add	r3, r3, #292
 5561 08f2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5562 08f4 07F58C73 		add	r3, r7, #280
 5563 08f8 1A54     		strb	r2, [r3, r0]
1186:..\src/command_processing.c ****                 packet_data[(uint16)(8 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.IMU_conf[
 5564              		.loc 1 1186 0
 5565 08fa B7F81436 		ldrh	r3, [r7, #1556]	@ movhi
 5566 08fe 1A46     		mov	r2, r3	@ movhi
 5567 0900 9200     		lsls	r2, r2, #2
 5568 0902 1344     		add	r3, r3, r2
 5569 0904 1A46     		mov	r2, r3	@ movhi
 5570 0906 9100     		lsls	r1, r2, #2
 5571 0908 1A46     		mov	r2, r3	@ movhi
 5572 090a 0B46     		mov	r3, r1	@ movhi
 5573 090c 1344     		add	r3, r3, r2
 5574 090e 5B00     		lsls	r3, r3, #1
 5575 0910 9AB2     		uxth	r2, r3
 5576 0912 B7F80436 		ldrh	r3, [r7, #1540]	@ movhi
 5577 0916 1344     		add	r3, r3, r2
 5578 0918 9BB2     		uxth	r3, r3
 5579 091a 0833     		adds	r3, r3, #8
 5580 091c 9BB2     		uxth	r3, r3
 5581 091e 1846     		mov	r0, r3
 5582 0920 B7F81436 		ldrh	r3, [r7, #1556]
 5583 0924 654A     		ldr	r2, .L341
 5584 0926 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 5585 0928 1946     		mov	r1, r3
 5586 092a 664A     		ldr	r2, .L341+8
 5587 092c 0B46     		mov	r3, r1
 5588 092e 9B00     		lsls	r3, r3, #2
 5589 0930 0B44     		add	r3, r3, r1
 5590 0932 1344     		add	r3, r3, r2
 5591 0934 03F22513 		addw	r3, r3, #293
 5592 0938 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5593 093a 07F58C73 		add	r3, r7, #280
 5594 093e 1A54     		strb	r2, [r3, r0]
1187:..\src/command_processing.c **** 
1188:..\src/command_processing.c ****                 for(j = imu_table_str_len; j != 0; j--)
 5595              		.loc 1 1188 0
 5596 0940 97F8FF35 		ldrb	r3, [r7, #1535]	@ zero_extendqisi2
 5597 0944 A7F81236 		strh	r3, [r7, #1554]	@ movhi
 5598 0948 2BE0     		b	.L316
 5599              	.L317:
1189:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 5600              		.loc 1 1189 0 discriminator 3
 5601 094a B7F81436 		ldrh	r3, [r7, #1556]	@ movhi
 5602 094e 1A46     		mov	r2, r3	@ movhi
 5603 0950 9200     		lsls	r2, r2, #2
 5604 0952 1344     		add	r3, r3, r2
 5605 0954 1A46     		mov	r2, r3	@ movhi
 5606 0956 9100     		lsls	r1, r2, #2
 5607 0958 1A46     		mov	r2, r3	@ movhi
 5608 095a 0B46     		mov	r3, r1	@ movhi
 5609 095c 1344     		add	r3, r3, r2
 5610 095e 5B00     		lsls	r3, r3, #1
 5611 0960 9AB2     		uxth	r2, r3
 5612 0962 B7F80436 		ldrh	r3, [r7, #1540]	@ movhi
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 141


 5613 0966 1344     		add	r3, r3, r2
 5614 0968 9AB2     		uxth	r2, r3
 5615 096a 97F8FF35 		ldrb	r3, [r7, #1535]	@ zero_extendqisi2
 5616 096e 9BB2     		uxth	r3, r3
 5617 0970 1344     		add	r3, r3, r2
 5618 0972 9AB2     		uxth	r2, r3
 5619 0974 B7F81236 		ldrh	r3, [r7, #1554]	@ movhi
 5620 0978 D31A     		subs	r3, r2, r3
 5621 097a 9BB2     		uxth	r3, r3
 5622 097c 0933     		adds	r3, r3, #9
 5623 097e 9BB2     		uxth	r3, r3
 5624 0980 1946     		mov	r1, r3
 5625 0982 97F8FF25 		ldrb	r2, [r7, #1535]	@ zero_extendqisi2
 5626 0986 B7F81236 		ldrh	r3, [r7, #1554]
 5627 098a D31A     		subs	r3, r2, r3
 5628 098c 07F1A002 		add	r2, r7, #160
 5629 0990 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 5630 0992 07F58C73 		add	r3, r7, #280
 5631 0996 5A54     		strb	r2, [r3, r1]
1188:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 5632              		.loc 1 1188 0 discriminator 3
 5633 0998 B7F81236 		ldrh	r3, [r7, #1554]
 5634 099c 013B     		subs	r3, r3, #1
 5635 099e A7F81236 		strh	r3, [r7, #1554]	@ movhi
 5636              	.L316:
1188:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 5637              		.loc 1 1188 0 is_stmt 0 discriminator 1
 5638 09a2 B7F81236 		ldrh	r3, [r7, #1554]
 5639 09a6 002B     		cmp	r3, #0
 5640 09a8 CFD1     		bne	.L317
1175:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 5641              		.loc 1 1175 0 is_stmt 1 discriminator 2
 5642 09aa B7F81436 		ldrh	r3, [r7, #1556]
 5643 09ae 0133     		adds	r3, r3, #1
 5644 09b0 A7F81436 		strh	r3, [r7, #1556]	@ movhi
 5645              	.L315:
1175:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 5646              		.loc 1 1175 0 is_stmt 0 discriminator 1
 5647 09b4 444B     		ldr	r3, .L341+12
 5648 09b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5649 09b8 9BB2     		uxth	r3, r3
 5650 09ba B7F81426 		ldrh	r2, [r7, #1556]
 5651 09be 9A42     		cmp	r2, r3
 5652 09c0 FFF4CAAE 		bcc	.L318
1190:..\src/command_processing.c ****             }  
1191:..\src/command_processing.c ****           
1192:..\src/command_processing.c **** 
1193:..\src/command_processing.c ****             /*-----------------SPI DELAY-----------------*/
1194:..\src/command_processing.c ****             
1195:..\src/command_processing.c ****             start_byte = start_byte + (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected);
 5653              		.loc 1 1195 0 is_stmt 1
 5654 09c4 404B     		ldr	r3, .L341+12
 5655 09c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5656 09c8 9BB2     		uxth	r3, r3
 5657 09ca 1A46     		mov	r2, r3	@ movhi
 5658 09cc 9200     		lsls	r2, r2, #2
 5659 09ce 1344     		add	r3, r3, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 142


 5660 09d0 1A46     		mov	r2, r3	@ movhi
 5661 09d2 9100     		lsls	r1, r2, #2
 5662 09d4 1A46     		mov	r2, r3	@ movhi
 5663 09d6 0B46     		mov	r3, r1	@ movhi
 5664 09d8 1344     		add	r3, r3, r2
 5665 09da 5B00     		lsls	r3, r3, #1
 5666 09dc 9AB2     		uxth	r2, r3
 5667 09de B7F80436 		ldrh	r3, [r7, #1540]	@ movhi
 5668 09e2 1344     		add	r3, r3, r2
 5669 09e4 A7F80436 		strh	r3, [r7, #1540]	@ movhi
1196:..\src/command_processing.c ****             sprintf(spi_read_delay_str, "%u - SPI read delay:", first_imu_parameter+N_IMU_Connected
 5670              		.loc 1 1196 0
 5671 09e8 B7F80836 		ldrh	r3, [r7, #1544]
 5672 09ec 364A     		ldr	r2, .L341+12
 5673 09ee 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 5674 09f0 1A44     		add	r2, r2, r3
 5675 09f2 07F18403 		add	r3, r7, #132
 5676 09f6 3549     		ldr	r1, .L341+16
 5677 09f8 1846     		mov	r0, r3
 5678 09fa FFF7FEFF 		bl	sprintf
1197:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_FLAG;
 5679              		.loc 1 1197 0
 5680 09fe B7F80436 		ldrh	r3, [r7, #1540]
 5681 0a02 0233     		adds	r3, r3, #2
 5682 0a04 07F58C72 		add	r2, r7, #280
 5683 0a08 0021     		movs	r1, #0
 5684 0a0a D154     		strb	r1, [r2, r3]
1198:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 5685              		.loc 1 1198 0
 5686 0a0c B7F80436 		ldrh	r3, [r7, #1540]
 5687 0a10 0333     		adds	r3, r3, #3
 5688 0a12 07F58C72 		add	r2, r7, #280
 5689 0a16 0121     		movs	r1, #1
 5690 0a18 D154     		strb	r1, [r2, r3]
1199:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.SPI_read_delay;
 5691              		.loc 1 1199 0
 5692 0a1a B7F80436 		ldrh	r3, [r7, #1540]
 5693 0a1e 0433     		adds	r3, r3, #4
 5694 0a20 284A     		ldr	r2, .L341+8
 5695 0a22 92F82011 		ldrb	r1, [r2, #288]	@ zero_extendqisi2
 5696 0a26 07F58C72 		add	r2, r7, #280
 5697 0a2a D154     		strb	r1, [r2, r3]
1200:..\src/command_processing.c ****             switch(c_mem.SPI_read_delay) {
 5698              		.loc 1 1200 0
 5699 0a2c 254B     		ldr	r3, .L341+8
 5700 0a2e 93F82031 		ldrb	r3, [r3, #288]	@ zero_extendqisi2
 5701 0a32 012B     		cmp	r3, #1
 5702 0a34 17D0     		beq	.L320
 5703 0a36 022B     		cmp	r3, #2
 5704 0a38 28D0     		beq	.L321
 5705 0a3a 002B     		cmp	r3, #0
 5706 0a3c 00D0     		beq	.L322
1201:..\src/command_processing.c ****                 case 0: 
1202:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " None"); 
1203:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1204:..\src/command_processing.c ****                     break;
1205:..\src/command_processing.c ****                 case 1: 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 143


1206:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " Low"); 
1207:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
1208:..\src/command_processing.c ****                     break;
1209:..\src/command_processing.c ****                 case 2: 
1210:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " High");
1211:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1212:..\src/command_processing.c ****                     break;
1213:..\src/command_processing.c ****                 default:
1214:..\src/command_processing.c ****                     break;
 5707              		.loc 1 1214 0
 5708 0a3e 38E0     		b	.L323
 5709              	.L322:
1202:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 5710              		.loc 1 1202 0
 5711 0a40 07F18403 		add	r3, r7, #132
 5712 0a44 1846     		mov	r0, r3
 5713 0a46 FFF7FEFF 		bl	strlen
 5714 0a4a 0346     		mov	r3, r0
 5715 0a4c 1A46     		mov	r2, r3
 5716 0a4e 07F18403 		add	r3, r7, #132
 5717 0a52 1344     		add	r3, r3, r2
 5718 0a54 1E4A     		ldr	r2, .L341+20
 5719 0a56 1068     		ldr	r0, [r2]	@ unaligned
 5720 0a58 1860     		str	r0, [r3]	@ unaligned
 5721 0a5a 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5722 0a5c 9A80     		strh	r2, [r3, #4]	@ unaligned
1203:..\src/command_processing.c ****                     break;
 5723              		.loc 1 1203 0
 5724 0a5e 1A23     		movs	r3, #26
 5725 0a60 87F80D36 		strb	r3, [r7, #1549]
1204:..\src/command_processing.c ****                 case 1: 
 5726              		.loc 1 1204 0
 5727 0a64 25E0     		b	.L323
 5728              	.L320:
1206:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
 5729              		.loc 1 1206 0
 5730 0a66 07F18403 		add	r3, r7, #132
 5731 0a6a 1846     		mov	r0, r3
 5732 0a6c FFF7FEFF 		bl	strlen
 5733 0a70 0346     		mov	r3, r0
 5734 0a72 1A46     		mov	r2, r3
 5735 0a74 07F18403 		add	r3, r7, #132
 5736 0a78 1344     		add	r3, r3, r2
 5737 0a7a 164A     		ldr	r2, .L341+24
 5738 0a7c 1068     		ldr	r0, [r2]	@ unaligned
 5739 0a7e 1860     		str	r0, [r3]	@ unaligned
 5740 0a80 1279     		ldrb	r2, [r2, #4]
 5741 0a82 1A71     		strb	r2, [r3, #4]
1207:..\src/command_processing.c ****                     break;
 5742              		.loc 1 1207 0
 5743 0a84 1923     		movs	r3, #25
 5744 0a86 87F80D36 		strb	r3, [r7, #1549]
1208:..\src/command_processing.c ****                 case 2: 
 5745              		.loc 1 1208 0
 5746 0a8a 12E0     		b	.L323
 5747              	.L321:
1210:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 144


 5748              		.loc 1 1210 0
 5749 0a8c 07F18403 		add	r3, r7, #132
 5750 0a90 1846     		mov	r0, r3
 5751 0a92 FFF7FEFF 		bl	strlen
 5752 0a96 0346     		mov	r3, r0
 5753 0a98 1A46     		mov	r2, r3
 5754 0a9a 07F18403 		add	r3, r7, #132
 5755 0a9e 1344     		add	r3, r3, r2
 5756 0aa0 0D4A     		ldr	r2, .L341+28
 5757 0aa2 1068     		ldr	r0, [r2]	@ unaligned
 5758 0aa4 1860     		str	r0, [r3]	@ unaligned
 5759 0aa6 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5760 0aa8 9A80     		strh	r2, [r3, #4]	@ unaligned
1211:..\src/command_processing.c ****                     break;
 5761              		.loc 1 1211 0
 5762 0aaa 1A23     		movs	r3, #26
 5763 0aac 87F80D36 		strb	r3, [r7, #1549]
1212:..\src/command_processing.c ****                 default:
 5764              		.loc 1 1212 0
 5765 0ab0 00BF     		nop
 5766              	.L323:
1215:..\src/command_processing.c ****             }            
1216:..\src/command_processing.c ****             for(i = spi_read_delay_str_len; i != 0; i--)
 5767              		.loc 1 1216 0
 5768 0ab2 97F80D36 		ldrb	r3, [r7, #1549]	@ zero_extendqisi2
 5769 0ab6 A7F81436 		strh	r3, [r7, #1556]	@ movhi
 5770 0aba 28E0     		b	.L324
 5771              	.L342:
 5772              		.align	2
 5773              	.L341:
 5774 0abc 00000000 		.word	IMU_connected
 5775 0ac0 9C050000 		.word	.LC54
 5776 0ac4 00000000 		.word	c_mem
 5777 0ac8 00000000 		.word	N_IMU_Connected
 5778 0acc B8050000 		.word	.LC55
 5779 0ad0 D0050000 		.word	.LC56
 5780 0ad4 D8050000 		.word	.LC57
 5781 0ad8 E0050000 		.word	.LC58
 5782              	.L325:
1217:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 5783              		.loc 1 1217 0 discriminator 3
 5784 0adc B7F80436 		ldrh	r3, [r7, #1540]
 5785 0ae0 5A1D     		adds	r2, r3, #5
 5786 0ae2 97F80D36 		ldrb	r3, [r7, #1549]	@ zero_extendqisi2
 5787 0ae6 1A44     		add	r2, r2, r3
 5788 0ae8 B7F81436 		ldrh	r3, [r7, #1556]
 5789 0aec D31A     		subs	r3, r2, r3
 5790 0aee 97F80D16 		ldrb	r1, [r7, #1549]	@ zero_extendqisi2
 5791 0af2 B7F81426 		ldrh	r2, [r7, #1556]
 5792 0af6 8A1A     		subs	r2, r1, r2
 5793 0af8 07F18401 		add	r1, r7, #132
 5794 0afc 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 5795 0afe 07F58C72 		add	r2, r7, #280
 5796 0b02 D154     		strb	r1, [r2, r3]
1216:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 5797              		.loc 1 1216 0 discriminator 3
 5798 0b04 B7F81436 		ldrh	r3, [r7, #1556]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 145


 5799 0b08 013B     		subs	r3, r3, #1
 5800 0b0a A7F81436 		strh	r3, [r7, #1556]	@ movhi
 5801              	.L324:
1216:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 5802              		.loc 1 1216 0 is_stmt 0 discriminator 1
 5803 0b0e B7F81436 		ldrh	r3, [r7, #1556]
 5804 0b12 002B     		cmp	r3, #0
 5805 0b14 E2D1     		bne	.L325
1218:..\src/command_processing.c ****             //The following byte indicates the number of menus at the end of the packet to send
1219:..\src/command_processing.c ****             packet_data[5+start_byte + spi_read_delay_str_len] = 1;
 5806              		.loc 1 1219 0 is_stmt 1
 5807 0b16 B7F80436 		ldrh	r3, [r7, #1540]
 5808 0b1a 5A1D     		adds	r2, r3, #5
 5809 0b1c 97F80D36 		ldrb	r3, [r7, #1549]	@ zero_extendqisi2
 5810 0b20 1344     		add	r3, r3, r2
 5811 0b22 07F58C72 		add	r2, r7, #280
 5812 0b26 0121     		movs	r1, #1
 5813 0b28 D154     		strb	r1, [r2, r3]
1220:..\src/command_processing.c ****                   
1221:..\src/command_processing.c ****             
1222:..\src/command_processing.c ****             /*------------PARAMETERS MENU-----------*/
1223:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 5814              		.loc 1 1223 0
 5815 0b2a B7F80436 		ldrh	r3, [r7, #1540]	@ movhi
 5816 0b2e 3233     		adds	r3, r3, #50
 5817 0b30 A7F80436 		strh	r3, [r7, #1540]	@ movhi
1224:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 5818              		.loc 1 1224 0
 5819 0b34 97F8FE35 		ldrb	r3, [r7, #1534]	@ zero_extendqisi2
 5820 0b38 A7F81436 		strh	r3, [r7, #1556]	@ movhi
 5821 0b3c 1AE0     		b	.L326
 5822              	.L327:
1225:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte) + spi_delay_menu_len - i] = spi_delay_menu[spi
 5823              		.loc 1 1225 0 discriminator 3
 5824 0b3e B7F80436 		ldrh	r3, [r7, #1540]	@ movhi
 5825 0b42 0233     		adds	r3, r3, #2
 5826 0b44 9BB2     		uxth	r3, r3
 5827 0b46 1A46     		mov	r2, r3
 5828 0b48 97F8FE35 		ldrb	r3, [r7, #1534]	@ zero_extendqisi2
 5829 0b4c 1A44     		add	r2, r2, r3
 5830 0b4e B7F81436 		ldrh	r3, [r7, #1556]
 5831 0b52 D31A     		subs	r3, r2, r3
 5832 0b54 97F8FE15 		ldrb	r1, [r7, #1534]	@ zero_extendqisi2
 5833 0b58 B7F81426 		ldrh	r2, [r7, #1556]
 5834 0b5c 8A1A     		subs	r2, r1, r2
 5835 0b5e 07F10C01 		add	r1, r7, #12
 5836 0b62 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 5837 0b64 07F58C72 		add	r2, r7, #280
 5838 0b68 D154     		strb	r1, [r2, r3]
1224:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 5839              		.loc 1 1224 0 discriminator 3
 5840 0b6a B7F81436 		ldrh	r3, [r7, #1556]
 5841 0b6e 013B     		subs	r3, r3, #1
 5842 0b70 A7F81436 		strh	r3, [r7, #1556]	@ movhi
 5843              	.L326:
1224:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 5844              		.loc 1 1224 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 146


 5845 0b74 B7F81436 		ldrh	r3, [r7, #1556]
 5846 0b78 002B     		cmp	r3, #0
 5847 0b7a E0D1     		bne	.L327
1226:..\src/command_processing.c **** 
1227:..\src/command_processing.c ****             packet_data[packet_length - 1] = LCRChecksum(packet_data,packet_length - 1);
 5848              		.loc 1 1227 0 is_stmt 1
 5849 0b7c B7F80636 		ldrh	r3, [r7, #1542]
 5850 0b80 5C1E     		subs	r4, r3, #1
 5851 0b82 B7F80636 		ldrh	r3, [r7, #1542]	@ movhi
 5852 0b86 DBB2     		uxtb	r3, r3
 5853 0b88 013B     		subs	r3, r3, #1
 5854 0b8a DAB2     		uxtb	r2, r3
 5855 0b8c 07F58C73 		add	r3, r7, #280
 5856 0b90 1146     		mov	r1, r2
 5857 0b92 1846     		mov	r0, r3
 5858 0b94 FFF7FEFF 		bl	LCRChecksum
 5859 0b98 0346     		mov	r3, r0
 5860 0b9a 1A46     		mov	r2, r3
 5861 0b9c 07F58C73 		add	r3, r7, #280
 5862 0ba0 1A55     		strb	r2, [r3, r4]
1228:..\src/command_processing.c ****             commWrite(packet_data, packet_length);
 5863              		.loc 1 1228 0
 5864 0ba2 B7F80626 		ldrh	r2, [r7, #1542]
 5865 0ba6 07F58C73 		add	r3, r7, #280
 5866 0baa 1146     		mov	r1, r2
 5867 0bac 1846     		mov	r0, r3
 5868 0bae FFF7FEFF 		bl	commWrite
1229:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 5869              		.loc 1 1229 0
 5870 0bb2 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
1230:..\src/command_processing.c ****         break;
 5871              		.loc 1 1230 0
 5872 0bb6 08E1     		b	.L328
 5873              	.L335:
1231:..\src/command_processing.c **** 
1232:..\src/command_processing.c **** //=========================================================     other_params
1233:..\src/command_processing.c ****         default: 
1234:..\src/command_processing.c ****             
1235:..\src/command_processing.c ****             if (index < first_imu_parameter-1)
 5874              		.loc 1 1235 0
 5875 0bb8 BB1D     		adds	r3, r7, #6
 5876 0bba 1A88     		ldrh	r2, [r3]
 5877 0bbc B7F80836 		ldrh	r3, [r7, #1544]
 5878 0bc0 013B     		subs	r3, r3, #1
 5879 0bc2 9A42     		cmp	r2, r3
 5880 0bc4 C0F20081 		blt	.L336
1236:..\src/command_processing.c ****                 break;
1237:..\src/command_processing.c ****             
1238:..\src/command_processing.c ****             if (index == first_imu_parameter+N_IMU_Connected) {
 5881              		.loc 1 1238 0
 5882 0bc8 BB1D     		adds	r3, r7, #6
 5883 0bca 1A88     		ldrh	r2, [r3]
 5884 0bcc B7F80836 		ldrh	r3, [r7, #1544]
 5885 0bd0 8049     		ldr	r1, .L343
 5886 0bd2 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 5887 0bd4 0B44     		add	r3, r3, r1
 5888 0bd6 9A42     		cmp	r2, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 147


 5889 0bd8 05D1     		bne	.L330
1239:..\src/command_processing.c ****                 g_mem.SPI_read_delay = g_rx.buffer[3];  //SPI read delay - uint8
 5890              		.loc 1 1239 0
 5891 0bda 7F4B     		ldr	r3, .L343+4
 5892 0bdc DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 5893 0bde 7F4B     		ldr	r3, .L343+8
 5894 0be0 83F82021 		strb	r2, [r3, #288]
1240:..\src/command_processing.c ****                 break;
 5895              		.loc 1 1240 0
 5896 0be4 F1E0     		b	.L328
 5897              	.L330:
1241:..\src/command_processing.c ****             }
1242:..\src/command_processing.c ****             
1243:..\src/command_processing.c ****             if (index == first_imu_parameter-1) {
 5898              		.loc 1 1243 0
 5899 0be6 BB1D     		adds	r3, r7, #6
 5900 0be8 1A88     		ldrh	r2, [r3]
 5901 0bea B7F80836 		ldrh	r3, [r7, #1544]
 5902 0bee 013B     		subs	r3, r3, #1
 5903 0bf0 9A42     		cmp	r2, r3
 5904 0bf2 04D1     		bne	.L331
1244:..\src/command_processing.c ****                 g_mem.id = g_rx.buffer[3];          //ID - uint8
 5905              		.loc 1 1244 0
 5906 0bf4 784B     		ldr	r3, .L343+4
 5907 0bf6 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 5908 0bf8 784B     		ldr	r3, .L343+8
 5909 0bfa 5A70     		strb	r2, [r3, #1]
1245:..\src/command_processing.c ****             }
1246:..\src/command_processing.c ****             else {
1247:..\src/command_processing.c ****             
1248:..\src/command_processing.c ****                 //Set Imu table (index > = first_imu_parameter)
1249:..\src/command_processing.c ****                 g_mem.IMU_conf[IMU_connected[index-first_imu_parameter]][0] = g_rx.buffer[3];
1250:..\src/command_processing.c ****                 g_mem.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
1251:..\src/command_processing.c ****                 g_mem.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
1252:..\src/command_processing.c ****                 g_mem.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
1253:..\src/command_processing.c ****                 g_mem.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
1254:..\src/command_processing.c ****                 
1255:..\src/command_processing.c ****                 // Recompute IMU packets dimension
1256:..\src/command_processing.c ****                 imus_data_size = 1; //header    
1257:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
1258:..\src/command_processing.c ****                 {
1259:..\src/command_processing.c ****                     single_imu_size[IMU_connected[i]] = 1 + 6*g_mem.IMU_conf[IMU_connected[i]][0] +
1260:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
1261:..\src/command_processing.c ****                 }
1262:..\src/command_processing.c ****                 imus_data_size = imus_data_size + 1;    //checksum
1263:..\src/command_processing.c ****             
1264:..\src/command_processing.c ****             }
1265:..\src/command_processing.c ****             
1266:..\src/command_processing.c ****         break;
 5910              		.loc 1 1266 0
 5911 0bfc E5E0     		b	.L328
 5912              	.L331:
1249:..\src/command_processing.c ****                 g_mem.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
 5913              		.loc 1 1249 0
 5914 0bfe BB1D     		adds	r3, r7, #6
 5915 0c00 1A88     		ldrh	r2, [r3]
 5916 0c02 B7F80836 		ldrh	r3, [r7, #1544]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 148


 5917 0c06 D31A     		subs	r3, r2, r3
 5918 0c08 754A     		ldr	r2, .L343+12
 5919 0c0a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 5920 0c0c 1946     		mov	r1, r3
 5921 0c0e 724B     		ldr	r3, .L343+4
 5922 0c10 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 5923 0c12 724A     		ldr	r2, .L343+8
 5924 0c14 0B46     		mov	r3, r1
 5925 0c16 9B00     		lsls	r3, r3, #2
 5926 0c18 0B44     		add	r3, r3, r1
 5927 0c1a 1344     		add	r3, r3, r2
 5928 0c1c 03F22113 		addw	r3, r3, #289
 5929 0c20 0246     		mov	r2, r0
 5930 0c22 1A70     		strb	r2, [r3]
1250:..\src/command_processing.c ****                 g_mem.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
 5931              		.loc 1 1250 0
 5932 0c24 BB1D     		adds	r3, r7, #6
 5933 0c26 1A88     		ldrh	r2, [r3]
 5934 0c28 B7F80836 		ldrh	r3, [r7, #1544]
 5935 0c2c D31A     		subs	r3, r2, r3
 5936 0c2e 6C4A     		ldr	r2, .L343+12
 5937 0c30 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 5938 0c32 1946     		mov	r1, r3
 5939 0c34 684B     		ldr	r3, .L343+4
 5940 0c36 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 5941 0c38 684A     		ldr	r2, .L343+8
 5942 0c3a 0B46     		mov	r3, r1
 5943 0c3c 9B00     		lsls	r3, r3, #2
 5944 0c3e 0B44     		add	r3, r3, r1
 5945 0c40 1344     		add	r3, r3, r2
 5946 0c42 03F59173 		add	r3, r3, #290
 5947 0c46 0246     		mov	r2, r0
 5948 0c48 1A70     		strb	r2, [r3]
1251:..\src/command_processing.c ****                 g_mem.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
 5949              		.loc 1 1251 0
 5950 0c4a BB1D     		adds	r3, r7, #6
 5951 0c4c 1A88     		ldrh	r2, [r3]
 5952 0c4e B7F80836 		ldrh	r3, [r7, #1544]
 5953 0c52 D31A     		subs	r3, r2, r3
 5954 0c54 624A     		ldr	r2, .L343+12
 5955 0c56 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 5956 0c58 1946     		mov	r1, r3
 5957 0c5a 5F4B     		ldr	r3, .L343+4
 5958 0c5c 5879     		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 5959 0c5e 5F4A     		ldr	r2, .L343+8
 5960 0c60 0B46     		mov	r3, r1
 5961 0c62 9B00     		lsls	r3, r3, #2
 5962 0c64 0B44     		add	r3, r3, r1
 5963 0c66 1344     		add	r3, r3, r2
 5964 0c68 03F22313 		addw	r3, r3, #291
 5965 0c6c 0246     		mov	r2, r0
 5966 0c6e 1A70     		strb	r2, [r3]
1252:..\src/command_processing.c ****                 g_mem.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
 5967              		.loc 1 1252 0
 5968 0c70 BB1D     		adds	r3, r7, #6
 5969 0c72 1A88     		ldrh	r2, [r3]
 5970 0c74 B7F80836 		ldrh	r3, [r7, #1544]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 149


 5971 0c78 D31A     		subs	r3, r2, r3
 5972 0c7a 594A     		ldr	r2, .L343+12
 5973 0c7c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 5974 0c7e 1946     		mov	r1, r3
 5975 0c80 554B     		ldr	r3, .L343+4
 5976 0c82 9879     		ldrb	r0, [r3, #6]	@ zero_extendqisi2
 5977 0c84 554A     		ldr	r2, .L343+8
 5978 0c86 0B46     		mov	r3, r1
 5979 0c88 9B00     		lsls	r3, r3, #2
 5980 0c8a 0B44     		add	r3, r3, r1
 5981 0c8c 1344     		add	r3, r3, r2
 5982 0c8e 03F59273 		add	r3, r3, #292
 5983 0c92 0246     		mov	r2, r0
 5984 0c94 1A70     		strb	r2, [r3]
1253:..\src/command_processing.c ****                 
 5985              		.loc 1 1253 0
 5986 0c96 BB1D     		adds	r3, r7, #6
 5987 0c98 1A88     		ldrh	r2, [r3]
 5988 0c9a B7F80836 		ldrh	r3, [r7, #1544]
 5989 0c9e D31A     		subs	r3, r2, r3
 5990 0ca0 4F4A     		ldr	r2, .L343+12
 5991 0ca2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 5992 0ca4 1946     		mov	r1, r3
 5993 0ca6 4C4B     		ldr	r3, .L343+4
 5994 0ca8 D879     		ldrb	r0, [r3, #7]	@ zero_extendqisi2
 5995 0caa 4C4A     		ldr	r2, .L343+8
 5996 0cac 0B46     		mov	r3, r1
 5997 0cae 9B00     		lsls	r3, r3, #2
 5998 0cb0 0B44     		add	r3, r3, r1
 5999 0cb2 1344     		add	r3, r3, r2
 6000 0cb4 03F22513 		addw	r3, r3, #293
 6001 0cb8 0246     		mov	r2, r0
 6002 0cba 1A70     		strb	r2, [r3]
1256:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
 6003              		.loc 1 1256 0
 6004 0cbc 494B     		ldr	r3, .L343+16
 6005 0cbe 0122     		movs	r2, #1
 6006 0cc0 1A60     		str	r2, [r3]
1257:..\src/command_processing.c ****                 {
 6007              		.loc 1 1257 0
 6008 0cc2 0023     		movs	r3, #0
 6009 0cc4 A7F81436 		strh	r3, [r7, #1556]	@ movhi
 6010 0cc8 71E0     		b	.L333
 6011              	.L334:
1259:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
 6012              		.loc 1 1259 0 discriminator 3
 6013 0cca B7F81436 		ldrh	r3, [r7, #1556]
 6014 0cce 444A     		ldr	r2, .L343+12
 6015 0cd0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6016 0cd2 1C46     		mov	r4, r3
 6017 0cd4 B7F81436 		ldrh	r3, [r7, #1556]
 6018 0cd8 414A     		ldr	r2, .L343+12
 6019 0cda D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6020 0cdc 1946     		mov	r1, r3
 6021 0cde 3F4A     		ldr	r2, .L343+8
 6022 0ce0 0B46     		mov	r3, r1
 6023 0ce2 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 150


 6024 0ce4 0B44     		add	r3, r3, r1
 6025 0ce6 1344     		add	r3, r3, r2
 6026 0ce8 03F22113 		addw	r3, r3, #289
 6027 0cec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6028 0cee 1A46     		mov	r2, r3
 6029 0cf0 1346     		mov	r3, r2
 6030 0cf2 5B00     		lsls	r3, r3, #1
 6031 0cf4 1344     		add	r3, r3, r2
 6032 0cf6 5B00     		lsls	r3, r3, #1
 6033 0cf8 5A1C     		adds	r2, r3, #1
 6034 0cfa B7F81436 		ldrh	r3, [r7, #1556]
 6035 0cfe 3849     		ldr	r1, .L343+12
 6036 0d00 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 6037 0d02 1846     		mov	r0, r3
 6038 0d04 3549     		ldr	r1, .L343+8
 6039 0d06 0346     		mov	r3, r0
 6040 0d08 9B00     		lsls	r3, r3, #2
 6041 0d0a 0344     		add	r3, r3, r0
 6042 0d0c 0B44     		add	r3, r3, r1
 6043 0d0e 03F59173 		add	r3, r3, #290
 6044 0d12 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6045 0d14 1946     		mov	r1, r3
 6046 0d16 0B46     		mov	r3, r1
 6047 0d18 5B00     		lsls	r3, r3, #1
 6048 0d1a 0B44     		add	r3, r3, r1
 6049 0d1c 5B00     		lsls	r3, r3, #1
 6050 0d1e 1A44     		add	r2, r2, r3
 6051 0d20 B7F81436 		ldrh	r3, [r7, #1556]
 6052 0d24 2E49     		ldr	r1, .L343+12
 6053 0d26 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 6054 0d28 1846     		mov	r0, r3
 6055 0d2a 2C49     		ldr	r1, .L343+8
 6056 0d2c 0346     		mov	r3, r0
 6057 0d2e 9B00     		lsls	r3, r3, #2
 6058 0d30 0344     		add	r3, r3, r0
 6059 0d32 0B44     		add	r3, r3, r1
 6060 0d34 03F22313 		addw	r3, r3, #291
 6061 0d38 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6062 0d3a 1946     		mov	r1, r3
 6063 0d3c 0B46     		mov	r3, r1
 6064 0d3e 5B00     		lsls	r3, r3, #1
 6065 0d40 0B44     		add	r3, r3, r1
 6066 0d42 5B00     		lsls	r3, r3, #1
 6067 0d44 1A44     		add	r2, r2, r3
 6068 0d46 B7F81436 		ldrh	r3, [r7, #1556]
 6069 0d4a 2549     		ldr	r1, .L343+12
 6070 0d4c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 6071 0d4e 1846     		mov	r0, r3
 6072 0d50 2249     		ldr	r1, .L343+8
 6073 0d52 0346     		mov	r3, r0
 6074 0d54 9B00     		lsls	r3, r3, #2
 6075 0d56 0344     		add	r3, r3, r0
 6076 0d58 0B44     		add	r3, r3, r1
 6077 0d5a 03F59273 		add	r3, r3, #292
 6078 0d5e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6079 0d60 1B01     		lsls	r3, r3, #4
 6080 0d62 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 151


 6081 0d64 B7F81436 		ldrh	r3, [r7, #1556]
 6082 0d68 1D49     		ldr	r1, .L343+12
 6083 0d6a CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 6084 0d6c 1846     		mov	r0, r3
 6085 0d6e 1B49     		ldr	r1, .L343+8
 6086 0d70 0346     		mov	r3, r0
 6087 0d72 9B00     		lsls	r3, r3, #2
 6088 0d74 0344     		add	r3, r3, r0
 6089 0d76 0B44     		add	r3, r3, r1
 6090 0d78 03F22513 		addw	r3, r3, #293
 6091 0d7c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6092 0d7e 5B00     		lsls	r3, r3, #1
 6093 0d80 1344     		add	r3, r3, r2
 6094 0d82 0133     		adds	r3, r3, #1
 6095 0d84 184A     		ldr	r2, .L343+20
 6096 0d86 42F82430 		str	r3, [r2, r4, lsl #2]
1260:..\src/command_processing.c ****                 }
 6097              		.loc 1 1260 0 discriminator 3
 6098 0d8a B7F81436 		ldrh	r3, [r7, #1556]
 6099 0d8e 144A     		ldr	r2, .L343+12
 6100 0d90 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6101 0d92 1A46     		mov	r2, r3
 6102 0d94 144B     		ldr	r3, .L343+20
 6103 0d96 53F82220 		ldr	r2, [r3, r2, lsl #2]
 6104 0d9a 124B     		ldr	r3, .L343+16
 6105 0d9c 1B68     		ldr	r3, [r3]
 6106 0d9e 1344     		add	r3, r3, r2
 6107 0da0 104A     		ldr	r2, .L343+16
 6108 0da2 1360     		str	r3, [r2]
1257:..\src/command_processing.c ****                 {
 6109              		.loc 1 1257 0 discriminator 3
 6110 0da4 B7F81436 		ldrh	r3, [r7, #1556]
 6111 0da8 0133     		adds	r3, r3, #1
 6112 0daa A7F81436 		strh	r3, [r7, #1556]	@ movhi
 6113              	.L333:
1257:..\src/command_processing.c ****                 {
 6114              		.loc 1 1257 0 is_stmt 0 discriminator 1
 6115 0dae 094B     		ldr	r3, .L343
 6116 0db0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6117 0db2 9BB2     		uxth	r3, r3
 6118 0db4 B7F81426 		ldrh	r2, [r7, #1556]
 6119 0db8 9A42     		cmp	r2, r3
 6120 0dba 86D3     		bcc	.L334
1262:..\src/command_processing.c ****             
 6121              		.loc 1 1262 0 is_stmt 1
 6122 0dbc 094B     		ldr	r3, .L343+16
 6123 0dbe 1B68     		ldr	r3, [r3]
 6124 0dc0 0133     		adds	r3, r3, #1
 6125 0dc2 084A     		ldr	r2, .L343+16
 6126 0dc4 1360     		str	r3, [r2]
 6127              		.loc 1 1266 0
 6128 0dc6 00E0     		b	.L328
 6129              	.L336:
1236:..\src/command_processing.c ****             
 6130              		.loc 1 1236 0
 6131 0dc8 00BF     		nop
 6132              	.L328:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 152


1267:..\src/command_processing.c ****     }
1268:..\src/command_processing.c **** }
 6133              		.loc 1 1268 0 discriminator 1
 6134 0dca 00BF     		nop
 6135 0dcc 07F5C367 		add	r7, r7, #1560
 6136              		.cfi_def_cfa_offset 16
 6137 0dd0 BD46     		mov	sp, r7
 6138              		.cfi_def_cfa_register 13
 6139              		@ sp needed
 6140 0dd2 B0BD     		pop	{r4, r5, r7, pc}
 6141              	.L344:
 6142              		.align	2
 6143              	.L343:
 6144 0dd4 00000000 		.word	N_IMU_Connected
 6145 0dd8 00000000 		.word	g_rx
 6146 0ddc 00000000 		.word	g_mem
 6147 0de0 00000000 		.word	IMU_connected
 6148 0de4 00000000 		.word	imus_data_size
 6149 0de8 00000000 		.word	single_imu_size
 6150              		.cfi_endproc
 6151              	.LFE69:
 6152              		.size	get_IMU_param_list, .-get_IMU_param_list
 6153              		.section	.text.setZeros,"ax",%progbits
 6154              		.align	2
 6155              		.global	setZeros
 6156              		.thumb
 6157              		.thumb_func
 6158              		.type	setZeros, %function
 6159              	setZeros:
 6160              	.LFB70:
1269:..\src/command_processing.c **** 
1270:..\src/command_processing.c **** //==============================================================================
1271:..\src/command_processing.c **** //                                                            COMMAND SET ZEROS
1272:..\src/command_processing.c **** //==============================================================================
1273:..\src/command_processing.c **** 
1274:..\src/command_processing.c **** void setZeros()
1275:..\src/command_processing.c **** {
 6161              		.loc 1 1275 0
 6162              		.cfi_startproc
 6163              		@ args = 0, pretend = 0, frame = 8
 6164              		@ frame_needed = 1, uses_anonymous_args = 0
 6165 0000 80B5     		push	{r7, lr}
 6166              		.cfi_def_cfa_offset 8
 6167              		.cfi_offset 7, -8
 6168              		.cfi_offset 14, -4
 6169 0002 82B0     		sub	sp, sp, #8
 6170              		.cfi_def_cfa_offset 16
 6171 0004 00AF     		add	r7, sp, #0
 6172              		.cfi_def_cfa_register 7
1276:..\src/command_processing.c ****     uint8 CYDATA i;        // iterator
1277:..\src/command_processing.c ****     
1278:..\src/command_processing.c ****     for(i = 0; i < NUM_OF_SENSORS; ++i) {
 6173              		.loc 1 1278 0
 6174 0006 0023     		movs	r3, #0
 6175 0008 FB71     		strb	r3, [r7, #7]
 6176 000a 31E0     		b	.L346
 6177              	.L347:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 153


1279:..\src/command_processing.c ****         g_mem.m_off[i] = (int16)(g_rx.buffer[1 + i*2]<<8 | g_rx.buffer[2 + i*2]);
 6178              		.loc 1 1279 0 discriminator 3
 6179 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6180 000e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6181 0010 5200     		lsls	r2, r2, #1
 6182 0012 0132     		adds	r2, r2, #1
 6183 0014 1D49     		ldr	r1, .L348
 6184 0016 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 6185 0018 1202     		lsls	r2, r2, #8
 6186 001a 11B2     		sxth	r1, r2
 6187 001c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6188 001e 0132     		adds	r2, r2, #1
 6189 0020 5200     		lsls	r2, r2, #1
 6190 0022 1A48     		ldr	r0, .L348
 6191 0024 825C     		ldrb	r2, [r0, r2]	@ zero_extendqisi2
 6192 0026 12B2     		sxth	r2, r2
 6193 0028 0A43     		orrs	r2, r2, r1
 6194 002a 12B2     		sxth	r2, r2
 6195 002c 1146     		mov	r1, r2
 6196 002e 184A     		ldr	r2, .L348+4
 6197 0030 0E33     		adds	r3, r3, #14
 6198 0032 9B00     		lsls	r3, r3, #2
 6199 0034 1344     		add	r3, r3, r2
 6200 0036 5960     		str	r1, [r3, #4]
1280:..\src/command_processing.c ****         //g_mem.m_off[i] = *((int16 *) &g_rx.buffer[1 + i * 2]);
1281:..\src/command_processing.c ****         g_mem.m_off[i] = g_mem.m_off[i] << g_mem.res[i];
 6201              		.loc 1 1281 0 discriminator 3
 6202 0038 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 6203 003a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6204 003c 144A     		ldr	r2, .L348+4
 6205 003e 0E33     		adds	r3, r3, #14
 6206 0040 9B00     		lsls	r3, r3, #2
 6207 0042 1344     		add	r3, r3, r2
 6208 0044 5B68     		ldr	r3, [r3, #4]
 6209 0046 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6210 0048 1148     		ldr	r0, .L348+4
 6211 004a 0244     		add	r2, r2, r0
 6212 004c 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 6213 0050 03FA02F2 		lsl	r2, r3, r2
 6214 0054 0E48     		ldr	r0, .L348+4
 6215 0056 01F10E03 		add	r3, r1, #14
 6216 005a 9B00     		lsls	r3, r3, #2
 6217 005c 0344     		add	r3, r3, r0
 6218 005e 5A60     		str	r2, [r3, #4]
1282:..\src/command_processing.c **** 
1283:..\src/command_processing.c ****         g_meas.rot[i] = 0;
 6219              		.loc 1 1283 0 discriminator 3
 6220 0060 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6221 0062 0C4A     		ldr	r2, .L348+8
 6222 0064 1344     		add	r3, r3, r2
 6223 0066 0022     		movs	r2, #0
 6224 0068 1A75     		strb	r2, [r3, #20]
1278:..\src/command_processing.c ****         g_mem.m_off[i] = (int16)(g_rx.buffer[1 + i*2]<<8 | g_rx.buffer[2 + i*2]);
 6225              		.loc 1 1278 0 discriminator 3
 6226 006a FB79     		ldrb	r3, [r7, #7]
 6227 006c 0133     		adds	r3, r3, #1
 6228 006e FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 154


 6229              	.L346:
1278:..\src/command_processing.c ****         g_mem.m_off[i] = (int16)(g_rx.buffer[1 + i*2]<<8 | g_rx.buffer[2 + i*2]);
 6230              		.loc 1 1278 0 is_stmt 0 discriminator 1
 6231 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6232 0072 022B     		cmp	r3, #2
 6233 0074 CAD9     		bls	.L347
1284:..\src/command_processing.c ****     }
1285:..\src/command_processing.c ****     reset_last_value_flag = 1;
 6234              		.loc 1 1285 0 is_stmt 1
 6235 0076 084B     		ldr	r3, .L348+12
 6236 0078 0122     		movs	r2, #1
 6237 007a 1A70     		strb	r2, [r3]
1286:..\src/command_processing.c **** 
1287:..\src/command_processing.c ****     sendAcknowledgment(ACK_OK);
 6238              		.loc 1 1287 0
 6239 007c 0120     		movs	r0, #1
 6240 007e FFF7FEFF 		bl	sendAcknowledgment
1288:..\src/command_processing.c **** }
 6241              		.loc 1 1288 0
 6242 0082 00BF     		nop
 6243 0084 0837     		adds	r7, r7, #8
 6244              		.cfi_def_cfa_offset 8
 6245 0086 BD46     		mov	sp, r7
 6246              		.cfi_def_cfa_register 13
 6247              		@ sp needed
 6248 0088 80BD     		pop	{r7, pc}
 6249              	.L349:
 6250 008a 00BF     		.align	2
 6251              	.L348:
 6252 008c 00000000 		.word	g_rx
 6253 0090 00000000 		.word	g_mem
 6254 0094 00000000 		.word	g_meas
 6255 0098 00000000 		.word	reset_last_value_flag
 6256              		.cfi_endproc
 6257              	.LFE70:
 6258              		.size	setZeros, .-setZeros
 6259              		.section	.rodata
 6260              		.align	2
 6261              	.LC59:
 6262 0618 0D0A00   		.ascii	"\015\012\000"
 6263 061b 00       		.align	2
 6264              	.LC60:
 6265 061c 4669726D 		.ascii	"Firmware version: \000"
 6265      77617265 
 6265      20766572 
 6265      73696F6E 
 6265      3A2000
 6266 062f 00       		.align	2
 6267              	.LC61:
 6268 0630 536F6674 		.ascii	"SoftHand PRO firmware v. 1.2 (PSoC5)\000"
 6268      48616E64 
 6268      2050524F 
 6268      20666972 
 6268      6D776172 
 6269 0655 000000   		.align	2
 6270              	.LC62:
 6271 0658 2E0D0A0D 		.ascii	".\015\012\015\012\000"
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 155


 6271      0A00
 6272 065e 0000     		.align	2
 6273              	.LC63:
 6274 0660 44455649 		.ascii	"DEVICE INFO\015\012\000"
 6274      43452049 
 6274      4E464F0D 
 6274      0A00
 6275 066e 0000     		.align	2
 6276              	.LC64:
 6277 0670 49443A20 		.ascii	"ID: %d\015\012\000"
 6277      25640D0A 
 6277      00
 6278 0679 000000   		.align	2
 6279              	.LC65:
 6280 067c 50574D20 		.ascii	"PWM rescaling activation: \000"
 6280      72657363 
 6280      616C696E 
 6280      67206163 
 6280      74697661 
 6281 0697 00       		.align	2
 6282              	.LC66:
 6283 0698 5945530A 		.ascii	"YES\012\000"
 6283      00
 6284 069d 000000   		.align	2
 6285              	.LC67:
 6286 06a0 4E4F0A00 		.ascii	"NO\012\000"
 6287              		.align	2
 6288              	.LC68:
 6289 06a4 50574D20 		.ascii	"PWM Limit: %d\015\012\000"
 6289      4C696D69 
 6289      743A2025 
 6289      640D0A00 
 6290              		.align	2
 6291              	.LC69:
 6292 06b4 4D4F544F 		.ascii	"MOTOR INFO\015\012\000"
 6292      5220494E 
 6292      464F0D0A 
 6292      00
 6293 06c1 000000   		.align	2
 6294              	.LC70:
 6295 06c4 4D6F746F 		.ascii	"Motor reference\000"
 6295      72207265 
 6295      66657265 
 6295      6E636500 
 6296              		.align	2
 6297              	.LC71:
 6298 06d4 202D2043 		.ascii	" - Currents: \000"
 6298      75727265 
 6298      6E74733A 
 6298      2000
 6299 06e2 0000     		.align	2
 6300              	.LC72:
 6301 06e4 202D2050 		.ascii	" - Pwm: \000"
 6301      776D3A20 
 6301      00
 6302 06ed 000000   		.align	2
 6303              	.LC73:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 156


 6304 06f0 202D2050 		.ascii	" - Position: \000"
 6304      6F736974 
 6304      696F6E3A 
 6304      2000
 6305 06fe 0000     		.align	2
 6306              	.LC74:
 6307 0700 25642000 		.ascii	"%d \000"
 6308              		.align	2
 6309              	.LC75:
 6310 0704 4D6F746F 		.ascii	"Motor enabled: \000"
 6310      7220656E 
 6310      61626C65 
 6310      643A2000 
 6311              		.align	2
 6312              	.LC76:
 6313 0714 5945530D 		.ascii	"YES\015\012\000"
 6313      0A00
 6314 071a 0000     		.align	2
 6315              	.LC77:
 6316 071c 4E4F0D0A 		.ascii	"NO\015\012\000"
 6316      00
 6317 0721 000000   		.align	2
 6318              	.LC78:
 6319 0724 0D0A4D45 		.ascii	"\015\012MEASUREMENTS INFO\015\012\000"
 6319      41535552 
 6319      454D454E 
 6319      54532049 
 6319      4E464F0D 
 6320 073a 0000     		.align	2
 6321              	.LC79:
 6322 073c 53656E73 		.ascii	"Sensor value:\015\012\000"
 6322      6F722076 
 6322      616C7565 
 6322      3A0D0A00 
 6323              		.align	2
 6324              	.LC80:
 6325 074c 2564202D 		.ascii	"%d -> %d\000"
 6325      3E202564 
 6325      00
 6326 0755 000000   		.align	2
 6327              	.LC81:
 6328 0758 42617474 		.ascii	"Battery Voltage (mV): %ld\000"
 6328      65727920 
 6328      566F6C74 
 6328      61676520 
 6328      286D5629 
 6329 0772 0000     		.align	2
 6330              	.LC82:
 6331 0774 42617474 		.ascii	"Battery Voltage Filtered (mV): %ld\000"
 6331      65727920 
 6331      566F6C74 
 6331      61676520 
 6331      46696C74 
 6332 0797 00       		.align	2
 6333              	.LC83:
 6334 0798 46756C6C 		.ascii	"Full charge power tension (mV): %ld\000"
 6334      20636861 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 157


 6334      72676520 
 6334      706F7765 
 6334      72207465 
 6335              		.align	2
 6336              	.LC84:
 6337 07bc 43757272 		.ascii	"Current (mA): %ld\000"
 6337      656E7420 
 6337      286D4129 
 6337      3A20256C 
 6337      6400
 6338 07ce 0000     		.align	2
 6339              	.LC85:
 6340 07d0 0D0A4445 		.ascii	"\015\012DEVICE PARAMETERS\015\012\000"
 6340      56494345 
 6340      20504152 
 6340      414D4554 
 6340      4552530D 
 6341 07e6 0000     		.align	2
 6342              	.LC86:
 6343 07e8 50494420 		.ascii	"PID Controller:\015\012\000"
 6343      436F6E74 
 6343      726F6C6C 
 6343      65723A0D 
 6343      0A00
 6344              		.global	__aeabi_i2d
 6345              		.global	__aeabi_ddiv
 6346 07fa 0000     		.align	2
 6347              	.LC87:
 6348 07fc 50202D3E 		.ascii	"P -> %f  \000"
 6348      20256620 
 6348      2000
 6349 0806 0000     		.align	2
 6350              	.LC88:
 6351 0808 49202D3E 		.ascii	"I -> %f  \000"
 6351      20256620 
 6351      2000
 6352 0812 0000     		.align	2
 6353              	.LC89:
 6354 0814 44202D3E 		.ascii	"D -> %f\015\012\000"
 6354      2025660D 
 6354      0A00
 6355 081e 0000     		.align	2
 6356              	.LC90:
 6357 0820 43757272 		.ascii	"Current PID Controller:\015\012\000"
 6357      656E7420 
 6357      50494420 
 6357      436F6E74 
 6357      726F6C6C 
 6358 083a 0000     		.align	2
 6359              	.LC91:
 6360 083c 53746172 		.ascii	"Startup activation: YES\015\012\000"
 6360      74757020 
 6360      61637469 
 6360      76617469 
 6360      6F6E3A20 
 6361 0856 0000     		.align	2
 6362              	.LC92:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 158


 6363 0858 53746172 		.ascii	"Startup activation: NO\015\012\000"
 6363      74757020 
 6363      61637469 
 6363      76617469 
 6363      6F6E3A20 
 6364 0871 000000   		.align	2
 6365              	.LC93:
 6366 0874 496E7075 		.ascii	"Input mode: USB\015\012\000"
 6366      74206D6F 
 6366      64653A20 
 6366      5553420D 
 6366      0A00
 6367 0886 0000     		.align	2
 6368              	.LC94:
 6369 0888 496E7075 		.ascii	"Input mode: Handle\015\012\000"
 6369      74206D6F 
 6369      64653A20 
 6369      48616E64 
 6369      6C650D0A 
 6370 089d 000000   		.align	2
 6371              	.LC95:
 6372 08a0 496E7075 		.ascii	"Input mode: EMG proportional\015\012\000"
 6372      74206D6F 
 6372      64653A20 
 6372      454D4720 
 6372      70726F70 
 6373 08bf 00       		.align	2
 6374              	.LC96:
 6375 08c0 496E7075 		.ascii	"Input mode: EMG integral\015\012\000"
 6375      74206D6F 
 6375      64653A20 
 6375      454D4720 
 6375      696E7465 
 6376 08db 00       		.align	2
 6377              	.LC97:
 6378 08dc 496E7075 		.ascii	"Input mode: EMG FCFS\015\012\000"
 6378      74206D6F 
 6378      64653A20 
 6378      454D4720 
 6378      46434653 
 6379 08f3 00       		.align	2
 6380              	.LC98:
 6381 08f4 496E7075 		.ascii	"Input mode: EMG FCFS ADV\015\012\000"
 6381      74206D6F 
 6381      64653A20 
 6381      454D4720 
 6381      46434653 
 6382 090f 00       		.align	2
 6383              	.LC99:
 6384 0910 436F6E74 		.ascii	"Control mode: Position\015\012\000"
 6384      726F6C20 
 6384      6D6F6465 
 6384      3A20506F 
 6384      73697469 
 6385 0929 000000   		.align	2
 6386              	.LC100:
 6387 092c 436F6E74 		.ascii	"Control mode: PWM\015\012\000"
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 159


 6387      726F6C20 
 6387      6D6F6465 
 6387      3A205057 
 6387      4D0D0A00 
 6388              		.align	2
 6389              	.LC101:
 6390 0940 436F6E74 		.ascii	"Control mode: Current\015\012\000"
 6390      726F6C20 
 6390      6D6F6465 
 6390      3A204375 
 6390      7272656E 
 6391              		.align	2
 6392              	.LC102:
 6393 0958 436F6E74 		.ascii	"Control mode: Position and Current\015\012\000"
 6393      726F6C20 
 6393      6D6F6465 
 6393      3A20506F 
 6393      73697469 
 6394 097d 000000   		.align	2
 6395              	.LC103:
 6396 0980 4162736F 		.ascii	"Absolute encoder position: YES\015\012\000"
 6396      6C757465 
 6396      20656E63 
 6396      6F646572 
 6396      20706F73 
 6397 09a1 000000   		.align	2
 6398              	.LC104:
 6399 09a4 4162736F 		.ascii	"Absolute encoder position: NO\015\012\000"
 6399      6C757465 
 6399      20656E63 
 6399      6F646572 
 6399      20706F73 
 6400              		.align	2
 6401              	.LC105:
 6402 09c4 4D6F746F 		.ascii	"Motor-Handle Ratio: %d\015\012\000"
 6402      722D4861 
 6402      6E646C65 
 6402      20526174 
 6402      696F3A20 
 6403 09dd 000000   		.align	2
 6404              	.LC106:
 6405 09e0 53656E73 		.ascii	"Sensor resolution:\015\012\000"
 6405      6F722072 
 6405      65736F6C 
 6405      7574696F 
 6405      6E3A0D0A 
 6406 09f5 000000   		.align	2
 6407              	.LC107:
 6408 09f8 4D656173 		.ascii	"Measurement Offset:\015\012\000"
 6408      7572656D 
 6408      656E7420 
 6408      4F666673 
 6408      65743A0D 
 6409 0a0e 0000     		.align	2
 6410              	.LC108:
 6411 0a10 2564202D 		.ascii	"%d -> %ld\000"
 6411      3E20256C 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 160


 6411      6400
 6412 0a1a 0000     		.align	2
 6413              	.LC109:
 6414 0a1c 4D656173 		.ascii	"Measurement Multiplier:\015\012\000"
 6414      7572656D 
 6414      656E7420 
 6414      4D756C74 
 6414      69706C69 
 6415              		.global	__aeabi_f2d
 6416 0a36 0000     		.align	2
 6417              	.LC110:
 6418 0a38 2564202D 		.ascii	"%d -> %f\000"
 6418      3E202566 
 6418      00
 6419 0a41 000000   		.align	2
 6420              	.LC111:
 6421 0a44 43757272 		.ascii	"Current lookup table:\015\012\000"
 6421      656E7420 
 6421      6C6F6F6B 
 6421      75702074 
 6421      61626C65 
 6422              		.align	2
 6423              	.LC112:
 6424 0a5c 705B305D 		.ascii	"p[0] - p[2]: %f, %f, %f\012\000"
 6424      202D2070 
 6424      5B325D3A 
 6424      2025662C 
 6424      2025662C 
 6425 0a75 000000   		.align	2
 6426              	.LC113:
 6427 0a78 705B335D 		.ascii	"p[3] - p[5]: %f, %f, %f\012\000"
 6427      202D2070 
 6427      5B355D3A 
 6427      2025662C 
 6427      2025662C 
 6428 0a91 000000   		.align	2
 6429              	.LC114:
 6430 0a94 506F7369 		.ascii	"Position limit active: %d\000"
 6430      74696F6E 
 6430      206C696D 
 6430      69742061 
 6430      63746976 
 6431 0aae 0000     		.align	2
 6432              	.LC115:
 6433 0ab0 506F7369 		.ascii	"Position limit motor: inf -> %ld  \000"
 6433      74696F6E 
 6433      206C696D 
 6433      6974206D 
 6433      6F746F72 
 6434 0ad3 00       		.align	2
 6435              	.LC116:
 6436 0ad4 73757020 		.ascii	"sup -> %ld\015\012\000"
 6436      2D3E2025 
 6436      6C640D0A 
 6436      00
 6437 0ae1 000000   		.align	2
 6438              	.LC117:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 161


 6439 0ae4 4D617820 		.ascii	"Max step pos and neg: %d %d\000"
 6439      73746570 
 6439      20706F73 
 6439      20616E64 
 6439      206E6567 
 6440              		.align	2
 6441              	.LC118:
 6442 0b00 43757272 		.ascii	"Current limit: %d\000"
 6442      656E7420 
 6442      6C696D69 
 6442      743A2025 
 6442      6400
 6443 0b12 0000     		.align	2
 6444              	.LC119:
 6445 0b14 454D4720 		.ascii	"EMG thresholds [0 - 1024]: %u, %u\000"
 6445      74687265 
 6445      73686F6C 
 6445      6473205B 
 6445      30202D20 
 6446 0b36 0000     		.align	2
 6447              	.LC120:
 6448 0b38 454D4720 		.ascii	"EMG max values [0 - 4096]: %lu, %lu\000"
 6448      6D617820 
 6448      76616C75 
 6448      6573205B 
 6448      30202D20 
 6449              		.align	2
 6450              	.LC121:
 6451 0b5c 43616C69 		.ascii	"Calibration enabled: YES\015\012\000"
 6451      62726174 
 6451      696F6E20 
 6451      656E6162 
 6451      6C65643A 
 6452 0b77 00       		.align	2
 6453              	.LC122:
 6454 0b78 43616C69 		.ascii	"Calibration enabled: NO\015\012\000"
 6454      62726174 
 6454      696F6E20 
 6454      656E6162 
 6454      6C65643A 
 6455 0b92 0000     		.align	2
 6456              	.LC123:
 6457 0b94 454D4720 		.ascii	"EMG max speed: %d\000"
 6457      6D617820 
 6457      73706565 
 6457      643A2025 
 6457      6400
 6458 0ba6 0000     		.align	2
 6459              	.LC124:
 6460 0ba8 52657374 		.ascii	"Rest time delay (ms): %f\000"
 6460      2074696D 
 6460      65206465 
 6460      6C617920 
 6460      286D7329 
 6461 0bc1 000000   		.align	2
 6462              	.LC125:
 6463 0bc4 52657374 		.ascii	"Rest velocity closure (ticks/sec): %f\000"
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 162


 6463      2076656C 
 6463      6F636974 
 6463      7920636C 
 6463      6F737572 
 6464 0bea 0000     		.align	2
 6465              	.LC126:
 6466 0bec 52657374 		.ascii	"Rest position: %d\000"
 6466      20706F73 
 6466      6974696F 
 6466      6E3A2025 
 6466      6400
 6467 0bfe 0000     		.align	2
 6468              	.LC127:
 6469 0c00 52657374 		.ascii	"Rest ratio: %f\000"
 6469      20726174 
 6469      696F3A20 
 6469      256600
 6470 0c0f 00       		.align	2
 6471              	.LC128:
 6472 0c10 494D5520 		.ascii	"IMU Connected: %d\015\012\000"
 6472      436F6E6E 
 6472      65637465 
 6472      643A2025 
 6472      640D0A00 
 6473              		.align	2
 6474              	.LC129:
 6475 0c24 494D5573 		.ascii	"IMUs CONFIGURATION\015\012\000"
 6475      20434F4E 
 6475      46494755 
 6475      52415449 
 6475      4F4E0D0A 
 6476 0c39 000000   		.align	2
 6477              	.LC130:
 6478 0c3c 496D7520 		.ascii	"Imu %d \015\012\011ID: %d\015\012\000"
 6478      2564200D 
 6478      0A094944 
 6478      3A202564 
 6478      0D0A00
 6479 0c4f 00       		.align	2
 6480              	.LC131:
 6481 0c50 09416363 		.ascii	"\011Accelerometers: \000"
 6481      656C6572 
 6481      6F6D6574 
 6481      6572733A 
 6481      2000
 6482 0c62 0000     		.align	2
 6483              	.LC132:
 6484 0c64 09477972 		.ascii	"\011Gyroscopes: \000"
 6484      6F73636F 
 6484      7065733A 
 6484      2000
 6485 0c72 0000     		.align	2
 6486              	.LC133:
 6487 0c74 094D6167 		.ascii	"\011Magnetometers: \000"
 6487      6E65746F 
 6487      6D657465 
 6487      72733A20 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 163


 6487      00
 6488 0c85 000000   		.align	2
 6489              	.LC134:
 6490 0c88 09517561 		.ascii	"\011Quaternion: \000"
 6490      7465726E 
 6490      696F6E3A 
 6490      2000
 6491 0c96 0000     		.align	2
 6492              	.LC135:
 6493 0c98 0954656D 		.ascii	"\011Temperature: \000"
 6493      70657261 
 6493      74757265 
 6493      3A2000
 6494 0ca7 00       		.align	2
 6495              	.LC136:
 6496 0ca8 64656275 		.ascii	"debug: %ld\015\012\000"
 6496      673A2025 
 6496      6C640D0A 
 6496      00
 6497              		.section	.text.prepare_generic_info,"ax",%progbits
 6498              		.align	2
 6499              		.global	prepare_generic_info
 6500              		.thumb
 6501              		.thumb_func
 6502              		.type	prepare_generic_info, %function
 6503              	prepare_generic_info:
 6504              	.LFB71:
1289:..\src/command_processing.c **** 
1290:..\src/command_processing.c **** //==============================================================================
1291:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
1292:..\src/command_processing.c **** //==============================================================================
1293:..\src/command_processing.c **** 
1294:..\src/command_processing.c **** void prepare_generic_info(char *info_string)
1295:..\src/command_processing.c **** {
 6505              		.loc 1 1295 0
 6506              		.cfi_startproc
 6507              		@ args = 0, pretend = 0, frame = 112
 6508              		@ frame_needed = 1, uses_anonymous_args = 0
 6509 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 6510              		.cfi_def_cfa_offset 28
 6511              		.cfi_offset 4, -28
 6512              		.cfi_offset 5, -24
 6513              		.cfi_offset 6, -20
 6514              		.cfi_offset 7, -16
 6515              		.cfi_offset 8, -12
 6516              		.cfi_offset 9, -8
 6517              		.cfi_offset 14, -4
 6518 0004 A1B0     		sub	sp, sp, #132
 6519              		.cfi_def_cfa_offset 160
 6520 0006 04AF     		add	r7, sp, #16
 6521              		.cfi_def_cfa 7, 144
 6522 0008 7860     		str	r0, [r7, #4]
1296:..\src/command_processing.c ****     int i;
1297:..\src/command_processing.c **** 
1298:..\src/command_processing.c ****     if(c_mem.id != 250){                //To avoid dummy board ping
 6523              		.loc 1 1298 0
 6524 000a C54B     		ldr	r3, .L412
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 164


 6525 000c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 6526 000e FA2B     		cmp	r3, #250
 6527 0010 01F09182 		beq	.L410
 6528              	.LBB10:
1299:..\src/command_processing.c ****         char str[100];
1300:..\src/command_processing.c ****         strcpy(info_string, "");
 6529              		.loc 1 1300 0
 6530 0014 7B68     		ldr	r3, [r7, #4]
 6531 0016 0022     		movs	r2, #0
 6532 0018 1A70     		strb	r2, [r3]
1301:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 6533              		.loc 1 1301 0
 6534 001a 7868     		ldr	r0, [r7, #4]
 6535 001c FFF7FEFF 		bl	strlen
 6536 0020 0346     		mov	r3, r0
 6537 0022 1A46     		mov	r2, r3
 6538 0024 7B68     		ldr	r3, [r7, #4]
 6539 0026 1344     		add	r3, r3, r2
 6540 0028 BE4A     		ldr	r2, .L412+4
 6541 002a 1188     		ldrh	r1, [r2]	@ unaligned
 6542 002c 9278     		ldrb	r2, [r2, #2]
 6543 002e 1980     		strh	r1, [r3]	@ unaligned
 6544 0030 9A70     		strb	r2, [r3, #2]
1302:..\src/command_processing.c ****         strcat(info_string, "Firmware version: ");
 6545              		.loc 1 1302 0
 6546 0032 7868     		ldr	r0, [r7, #4]
 6547 0034 FFF7FEFF 		bl	strlen
 6548 0038 0346     		mov	r3, r0
 6549 003a 1A46     		mov	r2, r3
 6550 003c 7B68     		ldr	r3, [r7, #4]
 6551 003e 1344     		add	r3, r3, r2
 6552 0040 B94A     		ldr	r2, .L412+8
 6553 0042 1D46     		mov	r5, r3
 6554 0044 1446     		mov	r4, r2
 6555 0046 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 6556 0048 2860     		str	r0, [r5]	@ unaligned
 6557 004a 6960     		str	r1, [r5, #4]	@ unaligned
 6558 004c AA60     		str	r2, [r5, #8]	@ unaligned
 6559 004e EB60     		str	r3, [r5, #12]	@ unaligned
 6560 0050 2388     		ldrh	r3, [r4]	@ unaligned
 6561 0052 A278     		ldrb	r2, [r4, #2]
 6562 0054 2B82     		strh	r3, [r5, #16]	@ unaligned
 6563 0056 1346     		mov	r3, r2
 6564 0058 AB74     		strb	r3, [r5, #18]
1303:..\src/command_processing.c ****         strcat(info_string, VERSION);
 6565              		.loc 1 1303 0
 6566 005a 7868     		ldr	r0, [r7, #4]
 6567 005c FFF7FEFF 		bl	strlen
 6568 0060 0346     		mov	r3, r0
 6569 0062 1A46     		mov	r2, r3
 6570 0064 7B68     		ldr	r3, [r7, #4]
 6571 0066 1344     		add	r3, r3, r2
 6572 0068 B04A     		ldr	r2, .L412+12
 6573 006a 1446     		mov	r4, r2
 6574 006c 9E46     		mov	lr, r3
 6575 006e 04F1200C 		add	ip, r4, #32
 6576              	.L352:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 165


 6577 0072 7546     		mov	r5, lr
 6578 0074 2646     		mov	r6, r4
 6579 0076 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 6580 0078 2860     		str	r0, [r5]	@ unaligned
 6581 007a 6960     		str	r1, [r5, #4]	@ unaligned
 6582 007c AA60     		str	r2, [r5, #8]	@ unaligned
 6583 007e EB60     		str	r3, [r5, #12]	@ unaligned
 6584 0080 1034     		adds	r4, r4, #16
 6585 0082 0EF1100E 		add	lr, lr, #16
 6586 0086 6445     		cmp	r4, ip
 6587 0088 F3D1     		bne	.L352
 6588 008a 7346     		mov	r3, lr
 6589 008c 2246     		mov	r2, r4
 6590 008e 1068     		ldr	r0, [r2]	@ unaligned
 6591 0090 1860     		str	r0, [r3]	@ unaligned
 6592 0092 1279     		ldrb	r2, [r2, #4]
 6593 0094 1A71     		strb	r2, [r3, #4]
1304:..\src/command_processing.c ****         strcat(info_string, ".\r\n\r\n");
 6594              		.loc 1 1304 0
 6595 0096 7868     		ldr	r0, [r7, #4]
 6596 0098 FFF7FEFF 		bl	strlen
 6597 009c 0346     		mov	r3, r0
 6598 009e 1A46     		mov	r2, r3
 6599 00a0 7B68     		ldr	r3, [r7, #4]
 6600 00a2 1344     		add	r3, r3, r2
 6601 00a4 A24A     		ldr	r2, .L412+16
 6602 00a6 1068     		ldr	r0, [r2]	@ unaligned
 6603 00a8 1860     		str	r0, [r3]	@ unaligned
 6604 00aa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 6605 00ac 9A80     		strh	r2, [r3, #4]	@ unaligned
1305:..\src/command_processing.c **** 
1306:..\src/command_processing.c ****         strcat(info_string, "DEVICE INFO\r\n");
 6606              		.loc 1 1306 0
 6607 00ae 7868     		ldr	r0, [r7, #4]
 6608 00b0 FFF7FEFF 		bl	strlen
 6609 00b4 0346     		mov	r3, r0
 6610 00b6 1A46     		mov	r2, r3
 6611 00b8 7B68     		ldr	r3, [r7, #4]
 6612 00ba 1344     		add	r3, r3, r2
 6613 00bc 9D4A     		ldr	r2, .L412+20
 6614 00be 1C46     		mov	r4, r3
 6615 00c0 1346     		mov	r3, r2
 6616 00c2 07CB     		ldmia	r3!, {r0, r1, r2}
 6617 00c4 2060     		str	r0, [r4]	@ unaligned
 6618 00c6 6160     		str	r1, [r4, #4]	@ unaligned
 6619 00c8 A260     		str	r2, [r4, #8]	@ unaligned
 6620 00ca 1B88     		ldrh	r3, [r3]	@ unaligned
 6621 00cc A381     		strh	r3, [r4, #12]	@ unaligned
1307:..\src/command_processing.c ****         sprintf(str, "ID: %d\r\n", (int) c_mem.id);
 6622              		.loc 1 1307 0
 6623 00ce 944B     		ldr	r3, .L412
 6624 00d0 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 6625 00d2 1A46     		mov	r2, r3
 6626 00d4 07F10803 		add	r3, r7, #8
 6627 00d8 9749     		ldr	r1, .L412+24
 6628 00da 1846     		mov	r0, r3
 6629 00dc FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 166


1308:..\src/command_processing.c ****         strcat(info_string, str);
 6630              		.loc 1 1308 0
 6631 00e0 07F10803 		add	r3, r7, #8
 6632 00e4 1946     		mov	r1, r3
 6633 00e6 7868     		ldr	r0, [r7, #4]
 6634 00e8 FFF7FEFF 		bl	strcat
1309:..\src/command_processing.c ****         strcat(info_string, "PWM rescaling activation: ");
 6635              		.loc 1 1309 0
 6636 00ec 7868     		ldr	r0, [r7, #4]
 6637 00ee FFF7FEFF 		bl	strlen
 6638 00f2 0346     		mov	r3, r0
 6639 00f4 1A46     		mov	r2, r3
 6640 00f6 7B68     		ldr	r3, [r7, #4]
 6641 00f8 1344     		add	r3, r3, r2
 6642 00fa 904A     		ldr	r2, .L412+28
 6643 00fc 1D46     		mov	r5, r3
 6644 00fe 1446     		mov	r4, r2
 6645 0100 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 6646 0102 2860     		str	r0, [r5]	@ unaligned
 6647 0104 6960     		str	r1, [r5, #4]	@ unaligned
 6648 0106 AA60     		str	r2, [r5, #8]	@ unaligned
 6649 0108 EB60     		str	r3, [r5, #12]	@ unaligned
 6650 010a 03CC     		ldmia	r4!, {r0, r1}
 6651 010c 2861     		str	r0, [r5, #16]	@ unaligned
 6652 010e 6961     		str	r1, [r5, #20]	@ unaligned
 6653 0110 2388     		ldrh	r3, [r4]	@ unaligned
 6654 0112 A278     		ldrb	r2, [r4, #2]
 6655 0114 2B83     		strh	r3, [r5, #24]	@ unaligned
 6656 0116 1346     		mov	r3, r2
 6657 0118 AB76     		strb	r3, [r5, #26]
1310:..\src/command_processing.c ****         if(c_mem.activate_pwm_rescaling == MAXON_12V)
 6658              		.loc 1 1310 0
 6659 011a 814B     		ldr	r3, .L412
 6660 011c 93F87B30 		ldrb	r3, [r3, #123]	@ zero_extendqisi2
 6661 0120 012B     		cmp	r3, #1
 6662 0122 0CD1     		bne	.L353
1311:..\src/command_processing.c ****             strcat(info_string, "YES\n");
 6663              		.loc 1 1311 0
 6664 0124 7868     		ldr	r0, [r7, #4]
 6665 0126 FFF7FEFF 		bl	strlen
 6666 012a 0346     		mov	r3, r0
 6667 012c 1A46     		mov	r2, r3
 6668 012e 7B68     		ldr	r3, [r7, #4]
 6669 0130 1344     		add	r3, r3, r2
 6670 0132 834A     		ldr	r2, .L412+32
 6671 0134 1068     		ldr	r0, [r2]	@ unaligned
 6672 0136 1860     		str	r0, [r3]	@ unaligned
 6673 0138 1279     		ldrb	r2, [r2, #4]
 6674 013a 1A71     		strb	r2, [r3, #4]
 6675 013c 09E0     		b	.L354
 6676              	.L353:
1312:..\src/command_processing.c ****         else
1313:..\src/command_processing.c ****             strcat(info_string, "NO\n");
 6677              		.loc 1 1313 0
 6678 013e 7868     		ldr	r0, [r7, #4]
 6679 0140 FFF7FEFF 		bl	strlen
 6680 0144 0346     		mov	r3, r0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 167


 6681 0146 1A46     		mov	r2, r3
 6682 0148 7B68     		ldr	r3, [r7, #4]
 6683 014a 1344     		add	r3, r3, r2
 6684 014c 7D4A     		ldr	r2, .L412+36
 6685 014e 1068     		ldr	r0, [r2]	@ unaligned
 6686 0150 1860     		str	r0, [r3]	@ unaligned
 6687              	.L354:
1314:..\src/command_processing.c ****         
1315:..\src/command_processing.c ****         sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit);
 6688              		.loc 1 1315 0
 6689 0152 7D4B     		ldr	r3, .L412+40
 6690 0154 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6691 0156 1A46     		mov	r2, r3
 6692 0158 07F10803 		add	r3, r7, #8
 6693 015c 7B49     		ldr	r1, .L412+44
 6694 015e 1846     		mov	r0, r3
 6695 0160 FFF7FEFF 		bl	sprintf
1316:..\src/command_processing.c ****         strcat(info_string, str);
 6696              		.loc 1 1316 0
 6697 0164 07F10803 		add	r3, r7, #8
 6698 0168 1946     		mov	r1, r3
 6699 016a 7868     		ldr	r0, [r7, #4]
 6700 016c FFF7FEFF 		bl	strcat
1317:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 6701              		.loc 1 1317 0
 6702 0170 7868     		ldr	r0, [r7, #4]
 6703 0172 FFF7FEFF 		bl	strlen
 6704 0176 0346     		mov	r3, r0
 6705 0178 1A46     		mov	r2, r3
 6706 017a 7B68     		ldr	r3, [r7, #4]
 6707 017c 1344     		add	r3, r3, r2
 6708 017e 694A     		ldr	r2, .L412+4
 6709 0180 1188     		ldrh	r1, [r2]	@ unaligned
 6710 0182 9278     		ldrb	r2, [r2, #2]
 6711 0184 1980     		strh	r1, [r3]	@ unaligned
 6712 0186 9A70     		strb	r2, [r3, #2]
1318:..\src/command_processing.c **** 
1319:..\src/command_processing.c ****         strcat(info_string, "MOTOR INFO\r\n");
 6713              		.loc 1 1319 0
 6714 0188 7868     		ldr	r0, [r7, #4]
 6715 018a FFF7FEFF 		bl	strlen
 6716 018e 0346     		mov	r3, r0
 6717 0190 1A46     		mov	r2, r3
 6718 0192 7B68     		ldr	r3, [r7, #4]
 6719 0194 1344     		add	r3, r3, r2
 6720 0196 6E4A     		ldr	r2, .L412+48
 6721 0198 1C46     		mov	r4, r3
 6722 019a 1346     		mov	r3, r2
 6723 019c 07CB     		ldmia	r3!, {r0, r1, r2}
 6724 019e 2060     		str	r0, [r4]	@ unaligned
 6725 01a0 6160     		str	r1, [r4, #4]	@ unaligned
 6726 01a2 A260     		str	r2, [r4, #8]	@ unaligned
 6727 01a4 1B78     		ldrb	r3, [r3]
 6728 01a6 2373     		strb	r3, [r4, #12]
1320:..\src/command_processing.c ****         strcat(info_string, "Motor reference");
 6729              		.loc 1 1320 0
 6730 01a8 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 168


 6731 01aa FFF7FEFF 		bl	strlen
 6732 01ae 0346     		mov	r3, r0
 6733 01b0 1A46     		mov	r2, r3
 6734 01b2 7B68     		ldr	r3, [r7, #4]
 6735 01b4 1344     		add	r3, r3, r2
 6736 01b6 674A     		ldr	r2, .L412+52
 6737 01b8 1C46     		mov	r4, r3
 6738 01ba 1546     		mov	r5, r2
 6739 01bc 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 6740 01be 2060     		str	r0, [r4]	@ unaligned
 6741 01c0 6160     		str	r1, [r4, #4]	@ unaligned
 6742 01c2 A260     		str	r2, [r4, #8]	@ unaligned
 6743 01c4 E360     		str	r3, [r4, #12]	@ unaligned
1321:..\src/command_processing.c ****         
1322:..\src/command_processing.c ****         if(g_mem.control_mode == CONTROL_CURRENT)
 6744              		.loc 1 1322 0
 6745 01c6 644B     		ldr	r3, .L412+56
 6746 01c8 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 6747 01cc 022B     		cmp	r3, #2
 6748 01ce 10D1     		bne	.L355
1323:..\src/command_processing.c ****             strcat(info_string," - Currents: ");
 6749              		.loc 1 1323 0
 6750 01d0 7868     		ldr	r0, [r7, #4]
 6751 01d2 FFF7FEFF 		bl	strlen
 6752 01d6 0346     		mov	r3, r0
 6753 01d8 1A46     		mov	r2, r3
 6754 01da 7B68     		ldr	r3, [r7, #4]
 6755 01dc 1344     		add	r3, r3, r2
 6756 01de 5F4A     		ldr	r2, .L412+60
 6757 01e0 1C46     		mov	r4, r3
 6758 01e2 1346     		mov	r3, r2
 6759 01e4 07CB     		ldmia	r3!, {r0, r1, r2}
 6760 01e6 2060     		str	r0, [r4]	@ unaligned
 6761 01e8 6160     		str	r1, [r4, #4]	@ unaligned
 6762 01ea A260     		str	r2, [r4, #8]	@ unaligned
 6763 01ec 1B88     		ldrh	r3, [r3]	@ unaligned
 6764 01ee A381     		strh	r3, [r4, #12]	@ unaligned
 6765 01f0 24E0     		b	.L356
 6766              	.L355:
1324:..\src/command_processing.c ****         else {
1325:..\src/command_processing.c ****             if (g_mem.control_mode == CONTROL_PWM)
 6767              		.loc 1 1325 0
 6768 01f2 594B     		ldr	r3, .L412+56
 6769 01f4 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 6770 01f8 012B     		cmp	r3, #1
 6771 01fa 0FD1     		bne	.L357
1326:..\src/command_processing.c ****                 strcat(info_string," - Pwm: ");
 6772              		.loc 1 1326 0
 6773 01fc 7868     		ldr	r0, [r7, #4]
 6774 01fe FFF7FEFF 		bl	strlen
 6775 0202 0346     		mov	r3, r0
 6776 0204 1A46     		mov	r2, r3
 6777 0206 7B68     		ldr	r3, [r7, #4]
 6778 0208 1344     		add	r3, r3, r2
 6779 020a 5549     		ldr	r1, .L412+64
 6780 020c 1A46     		mov	r2, r3
 6781 020e 0B46     		mov	r3, r1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 169


 6782 0210 03CB     		ldmia	r3!, {r0, r1}
 6783 0212 1060     		str	r0, [r2]	@ unaligned
 6784 0214 5160     		str	r1, [r2, #4]	@ unaligned
 6785 0216 1B78     		ldrb	r3, [r3]
 6786 0218 1372     		strb	r3, [r2, #8]
 6787 021a 0FE0     		b	.L356
 6788              	.L357:
1327:..\src/command_processing.c ****             else
1328:..\src/command_processing.c ****                 strcat(info_string," - Position: ");
 6789              		.loc 1 1328 0
 6790 021c 7868     		ldr	r0, [r7, #4]
 6791 021e FFF7FEFF 		bl	strlen
 6792 0222 0346     		mov	r3, r0
 6793 0224 1A46     		mov	r2, r3
 6794 0226 7B68     		ldr	r3, [r7, #4]
 6795 0228 1344     		add	r3, r3, r2
 6796 022a 4E4A     		ldr	r2, .L412+68
 6797 022c 1C46     		mov	r4, r3
 6798 022e 1346     		mov	r3, r2
 6799 0230 07CB     		ldmia	r3!, {r0, r1, r2}
 6800 0232 2060     		str	r0, [r4]	@ unaligned
 6801 0234 6160     		str	r1, [r4, #4]	@ unaligned
 6802 0236 A260     		str	r2, [r4, #8]	@ unaligned
 6803 0238 1B88     		ldrh	r3, [r3]	@ unaligned
 6804 023a A381     		strh	r3, [r4, #12]	@ unaligned
 6805              	.L356:
1329:..\src/command_processing.c ****         }
1330:..\src/command_processing.c **** 
1331:..\src/command_processing.c ****         if(g_mem.control_mode == CONTROL_CURRENT) {
 6806              		.loc 1 1331 0
 6807 023c 464B     		ldr	r3, .L412+56
 6808 023e 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 6809 0242 022B     		cmp	r3, #2
 6810 0244 0ED1     		bne	.L358
1332:..\src/command_processing.c ****             sprintf(str, "%d ", (int)(g_ref.curr));
 6811              		.loc 1 1332 0
 6812 0246 484B     		ldr	r3, .L412+72
 6813 0248 5A68     		ldr	r2, [r3, #4]
 6814 024a 07F10803 		add	r3, r7, #8
 6815 024e 4749     		ldr	r1, .L412+76
 6816 0250 1846     		mov	r0, r3
 6817 0252 FFF7FEFF 		bl	sprintf
1333:..\src/command_processing.c ****             strcat(info_string,str);
 6818              		.loc 1 1333 0
 6819 0256 07F10803 		add	r3, r7, #8
 6820 025a 1946     		mov	r1, r3
 6821 025c 7868     		ldr	r0, [r7, #4]
 6822 025e FFF7FEFF 		bl	strcat
 6823 0262 26E0     		b	.L359
 6824              	.L358:
1334:..\src/command_processing.c ****         }
1335:..\src/command_processing.c ****         else {
1336:..\src/command_processing.c ****             if(g_mem.control_mode == CONTROL_PWM) {
 6825              		.loc 1 1336 0
 6826 0264 3C4B     		ldr	r3, .L412+56
 6827 0266 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 6828 026a 012B     		cmp	r3, #1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 170


 6829 026c 0ED1     		bne	.L360
1337:..\src/command_processing.c ****                 sprintf(str, "%d ", (int)(g_ref.pwm));
 6830              		.loc 1 1337 0
 6831 026e 3E4B     		ldr	r3, .L412+72
 6832 0270 9A68     		ldr	r2, [r3, #8]
 6833 0272 07F10803 		add	r3, r7, #8
 6834 0276 3D49     		ldr	r1, .L412+76
 6835 0278 1846     		mov	r0, r3
 6836 027a FFF7FEFF 		bl	sprintf
1338:..\src/command_processing.c ****                 strcat(info_string,str);
 6837              		.loc 1 1338 0
 6838 027e 07F10803 		add	r3, r7, #8
 6839 0282 1946     		mov	r1, r3
 6840 0284 7868     		ldr	r0, [r7, #4]
 6841 0286 FFF7FEFF 		bl	strcat
 6842 028a 12E0     		b	.L359
 6843              	.L360:
1339:..\src/command_processing.c ****             }
1340:..\src/command_processing.c ****             else {
1341:..\src/command_processing.c ****                 sprintf(str, "%d ", (int)(g_ref.pos >> c_mem.res[0]));
 6844              		.loc 1 1341 0
 6845 028c 364B     		ldr	r3, .L412+72
 6846 028e 1B68     		ldr	r3, [r3]
 6847 0290 234A     		ldr	r2, .L412
 6848 0292 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 6849 0296 43FA02F2 		asr	r2, r3, r2
 6850 029a 07F10803 		add	r3, r7, #8
 6851 029e 3349     		ldr	r1, .L412+76
 6852 02a0 1846     		mov	r0, r3
 6853 02a2 FFF7FEFF 		bl	sprintf
1342:..\src/command_processing.c ****                 strcat(info_string,str);
 6854              		.loc 1 1342 0
 6855 02a6 07F10803 		add	r3, r7, #8
 6856 02aa 1946     		mov	r1, r3
 6857 02ac 7868     		ldr	r0, [r7, #4]
 6858 02ae FFF7FEFF 		bl	strcat
 6859              	.L359:
1343:..\src/command_processing.c ****             }
1344:..\src/command_processing.c ****         }
1345:..\src/command_processing.c ****         strcat(info_string,"\r\n");
 6860              		.loc 1 1345 0
 6861 02b2 7868     		ldr	r0, [r7, #4]
 6862 02b4 FFF7FEFF 		bl	strlen
 6863 02b8 0346     		mov	r3, r0
 6864 02ba 1A46     		mov	r2, r3
 6865 02bc 7B68     		ldr	r3, [r7, #4]
 6866 02be 1344     		add	r3, r3, r2
 6867 02c0 184A     		ldr	r2, .L412+4
 6868 02c2 1188     		ldrh	r1, [r2]	@ unaligned
 6869 02c4 9278     		ldrb	r2, [r2, #2]
 6870 02c6 1980     		strh	r1, [r3]	@ unaligned
 6871 02c8 9A70     		strb	r2, [r3, #2]
1346:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 6872              		.loc 1 1346 0
 6873 02ca 7868     		ldr	r0, [r7, #4]
 6874 02cc FFF7FEFF 		bl	strlen
 6875 02d0 0346     		mov	r3, r0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 171


 6876 02d2 1A46     		mov	r2, r3
 6877 02d4 7B68     		ldr	r3, [r7, #4]
 6878 02d6 1344     		add	r3, r3, r2
 6879 02d8 124A     		ldr	r2, .L412+4
 6880 02da 1188     		ldrh	r1, [r2]	@ unaligned
 6881 02dc 9278     		ldrb	r2, [r2, #2]
 6882 02de 1980     		strh	r1, [r3]	@ unaligned
 6883 02e0 9A70     		strb	r2, [r3, #2]
1347:..\src/command_processing.c **** 
1348:..\src/command_processing.c ****         sprintf(str, "Motor enabled: ");
 6884              		.loc 1 1348 0
 6885 02e2 07F10803 		add	r3, r7, #8
 6886 02e6 224A     		ldr	r2, .L412+80
 6887 02e8 1C46     		mov	r4, r3
 6888 02ea 1346     		mov	r3, r2
 6889 02ec 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 6890 02ee 84E80F00 		stmia	r4, {r0, r1, r2, r3}
1349:..\src/command_processing.c ****         if (g_ref.onoff & 0x01) {
 6891              		.loc 1 1349 0
 6892 02f2 1D4B     		ldr	r3, .L412+72
 6893 02f4 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 6894 02f6 03F00103 		and	r3, r3, #1
 6895 02fa 002B     		cmp	r3, #0
 6896 02fc 3CD0     		beq	.L361
1350:..\src/command_processing.c ****             strcat(str, "YES\r\n");
 6897              		.loc 1 1350 0
 6898 02fe 07F10803 		add	r3, r7, #8
 6899 0302 1846     		mov	r0, r3
 6900 0304 FFF7FEFF 		bl	strlen
 6901 0308 0346     		mov	r3, r0
 6902 030a 1A46     		mov	r2, r3
 6903 030c 07F10803 		add	r3, r7, #8
 6904 0310 1344     		add	r3, r3, r2
 6905 0312 184A     		ldr	r2, .L412+84
 6906 0314 1068     		ldr	r0, [r2]	@ unaligned
 6907 0316 1860     		str	r0, [r3]	@ unaligned
 6908 0318 9288     		ldrh	r2, [r2, #4]	@ unaligned
 6909 031a 9A80     		strh	r2, [r3, #4]	@ unaligned
 6910 031c 3BE0     		b	.L362
 6911              	.L413:
 6912 031e 00BF     		.align	2
 6913              	.L412:
 6914 0320 00000000 		.word	c_mem
 6915 0324 18060000 		.word	.LC59
 6916 0328 1C060000 		.word	.LC60
 6917 032c 30060000 		.word	.LC61
 6918 0330 58060000 		.word	.LC62
 6919 0334 60060000 		.word	.LC63
 6920 0338 70060000 		.word	.LC64
 6921 033c 7C060000 		.word	.LC65
 6922 0340 98060000 		.word	.LC66
 6923 0344 A0060000 		.word	.LC67
 6924 0348 00000000 		.word	dev_pwm_limit
 6925 034c A4060000 		.word	.LC68
 6926 0350 B4060000 		.word	.LC69
 6927 0354 C4060000 		.word	.LC70
 6928 0358 00000000 		.word	g_mem
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 172


 6929 035c D4060000 		.word	.LC71
 6930 0360 E4060000 		.word	.LC72
 6931 0364 F0060000 		.word	.LC73
 6932 0368 00000000 		.word	g_ref
 6933 036c 00070000 		.word	.LC74
 6934 0370 04070000 		.word	.LC75
 6935 0374 14070000 		.word	.LC76
 6936              	.L361:
1351:..\src/command_processing.c ****         } else {
1352:..\src/command_processing.c ****             strcat(str, "NO\r\n");
 6937              		.loc 1 1352 0
 6938 0378 07F10803 		add	r3, r7, #8
 6939 037c 1846     		mov	r0, r3
 6940 037e FFF7FEFF 		bl	strlen
 6941 0382 0346     		mov	r3, r0
 6942 0384 1A46     		mov	r2, r3
 6943 0386 07F10803 		add	r3, r7, #8
 6944 038a 1344     		add	r3, r3, r2
 6945 038c 9B4A     		ldr	r2, .L414
 6946 038e 1068     		ldr	r0, [r2]	@ unaligned
 6947 0390 1860     		str	r0, [r3]	@ unaligned
 6948 0392 1279     		ldrb	r2, [r2, #4]
 6949 0394 1A71     		strb	r2, [r3, #4]
 6950              	.L362:
1353:..\src/command_processing.c ****         }
1354:..\src/command_processing.c ****         strcat(info_string, str);
 6951              		.loc 1 1354 0
 6952 0396 07F10803 		add	r3, r7, #8
 6953 039a 1946     		mov	r1, r3
 6954 039c 7868     		ldr	r0, [r7, #4]
 6955 039e FFF7FEFF 		bl	strcat
1355:..\src/command_processing.c **** 
1356:..\src/command_processing.c ****         strcat(info_string, "\r\nMEASUREMENTS INFO\r\n");
 6956              		.loc 1 1356 0
 6957 03a2 7868     		ldr	r0, [r7, #4]
 6958 03a4 FFF7FEFF 		bl	strlen
 6959 03a8 0346     		mov	r3, r0
 6960 03aa 1A46     		mov	r2, r3
 6961 03ac 7B68     		ldr	r3, [r7, #4]
 6962 03ae 1344     		add	r3, r3, r2
 6963 03b0 934A     		ldr	r2, .L414+4
 6964 03b2 1D46     		mov	r5, r3
 6965 03b4 1446     		mov	r4, r2
 6966 03b6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 6967 03b8 2860     		str	r0, [r5]	@ unaligned
 6968 03ba 6960     		str	r1, [r5, #4]	@ unaligned
 6969 03bc AA60     		str	r2, [r5, #8]	@ unaligned
 6970 03be EB60     		str	r3, [r5, #12]	@ unaligned
 6971 03c0 2068     		ldr	r0, [r4]	@ unaligned
 6972 03c2 2861     		str	r0, [r5, #16]	@ unaligned
 6973 03c4 A388     		ldrh	r3, [r4, #4]	@ unaligned
 6974 03c6 AB82     		strh	r3, [r5, #20]	@ unaligned
1357:..\src/command_processing.c ****         strcat(info_string, "Sensor value:\r\n");
 6975              		.loc 1 1357 0
 6976 03c8 7868     		ldr	r0, [r7, #4]
 6977 03ca FFF7FEFF 		bl	strlen
 6978 03ce 0346     		mov	r3, r0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 173


 6979 03d0 1A46     		mov	r2, r3
 6980 03d2 7B68     		ldr	r3, [r7, #4]
 6981 03d4 1344     		add	r3, r3, r2
 6982 03d6 8B4A     		ldr	r2, .L414+8
 6983 03d8 1C46     		mov	r4, r3
 6984 03da 1546     		mov	r5, r2
 6985 03dc 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 6986 03de 2060     		str	r0, [r4]	@ unaligned
 6987 03e0 6160     		str	r1, [r4, #4]	@ unaligned
 6988 03e2 A260     		str	r2, [r4, #8]	@ unaligned
 6989 03e4 E360     		str	r3, [r4, #12]	@ unaligned
1358:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; i++) {
 6990              		.loc 1 1358 0
 6991 03e6 0023     		movs	r3, #0
 6992 03e8 FB66     		str	r3, [r7, #108]
 6993 03ea 26E0     		b	.L363
 6994              	.L364:
1359:..\src/command_processing.c ****             sprintf(str, "%d -> %d", i+1,
 6995              		.loc 1 1359 0 discriminator 3
 6996 03ec FB6E     		ldr	r3, [r7, #108]
 6997 03ee 5C1C     		adds	r4, r3, #1
1360:..\src/command_processing.c ****             (int)(g_meas.pos[i] >> c_mem.res[i]));
 6998              		.loc 1 1360 0 discriminator 3
 6999 03f0 854A     		ldr	r2, .L414+12
 7000 03f2 FB6E     		ldr	r3, [r7, #108]
 7001 03f4 52F82330 		ldr	r3, [r2, r3, lsl #2]
 7002 03f8 8449     		ldr	r1, .L414+16
 7003 03fa FA6E     		ldr	r2, [r7, #108]
 7004 03fc 0A44     		add	r2, r2, r1
 7005 03fe 3732     		adds	r2, r2, #55
 7006 0400 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7007 0402 1341     		asrs	r3, r3, r2
1359:..\src/command_processing.c ****             sprintf(str, "%d -> %d", i+1,
 7008              		.loc 1 1359 0 discriminator 3
 7009 0404 07F10800 		add	r0, r7, #8
 7010 0408 2246     		mov	r2, r4
 7011 040a 8149     		ldr	r1, .L414+20
 7012 040c FFF7FEFF 		bl	sprintf
1361:..\src/command_processing.c ****             strcat(info_string, str);
 7013              		.loc 1 1361 0 discriminator 3
 7014 0410 07F10803 		add	r3, r7, #8
 7015 0414 1946     		mov	r1, r3
 7016 0416 7868     		ldr	r0, [r7, #4]
 7017 0418 FFF7FEFF 		bl	strcat
1362:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 7018              		.loc 1 1362 0 discriminator 3
 7019 041c 7868     		ldr	r0, [r7, #4]
 7020 041e FFF7FEFF 		bl	strlen
 7021 0422 0346     		mov	r3, r0
 7022 0424 1A46     		mov	r2, r3
 7023 0426 7B68     		ldr	r3, [r7, #4]
 7024 0428 1344     		add	r3, r3, r2
 7025 042a 7A4A     		ldr	r2, .L414+24
 7026 042c 1188     		ldrh	r1, [r2]	@ unaligned
 7027 042e 9278     		ldrb	r2, [r2, #2]
 7028 0430 1980     		strh	r1, [r3]	@ unaligned
 7029 0432 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 174


1358:..\src/command_processing.c ****             sprintf(str, "%d -> %d", i+1,
 7030              		.loc 1 1358 0 discriminator 3
 7031 0434 FB6E     		ldr	r3, [r7, #108]
 7032 0436 0133     		adds	r3, r3, #1
 7033 0438 FB66     		str	r3, [r7, #108]
 7034              	.L363:
1358:..\src/command_processing.c ****             sprintf(str, "%d -> %d", i+1,
 7035              		.loc 1 1358 0 is_stmt 0 discriminator 1
 7036 043a FB6E     		ldr	r3, [r7, #108]
 7037 043c 022B     		cmp	r3, #2
 7038 043e D5DD     		ble	.L364
1363:..\src/command_processing.c ****         }
1364:..\src/command_processing.c **** 
1365:..\src/command_processing.c ****         sprintf(str, "Battery Voltage (mV): %ld", (int32) dev_tension );
 7039              		.loc 1 1365 0 is_stmt 1
 7040 0440 754B     		ldr	r3, .L414+28
 7041 0442 1A68     		ldr	r2, [r3]
 7042 0444 07F10803 		add	r3, r7, #8
 7043 0448 7449     		ldr	r1, .L414+32
 7044 044a 1846     		mov	r0, r3
 7045 044c FFF7FEFF 		bl	sprintf
1366:..\src/command_processing.c ****         strcat(info_string, str);
 7046              		.loc 1 1366 0
 7047 0450 07F10803 		add	r3, r7, #8
 7048 0454 1946     		mov	r1, r3
 7049 0456 7868     		ldr	r0, [r7, #4]
 7050 0458 FFF7FEFF 		bl	strcat
1367:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 7051              		.loc 1 1367 0
 7052 045c 7868     		ldr	r0, [r7, #4]
 7053 045e FFF7FEFF 		bl	strlen
 7054 0462 0346     		mov	r3, r0
 7055 0464 1A46     		mov	r2, r3
 7056 0466 7B68     		ldr	r3, [r7, #4]
 7057 0468 1344     		add	r3, r3, r2
 7058 046a 6A4A     		ldr	r2, .L414+24
 7059 046c 1188     		ldrh	r1, [r2]	@ unaligned
 7060 046e 9278     		ldrb	r2, [r2, #2]
 7061 0470 1980     		strh	r1, [r3]	@ unaligned
 7062 0472 9A70     		strb	r2, [r3, #2]
1368:..\src/command_processing.c ****         
1369:..\src/command_processing.c ****         sprintf(str, "Battery Voltage Filtered (mV): %ld", (int32) dev_tension_f );
 7063              		.loc 1 1369 0
 7064 0474 6A4B     		ldr	r3, .L414+36
 7065 0476 1A68     		ldr	r2, [r3]
 7066 0478 07F10803 		add	r3, r7, #8
 7067 047c 6949     		ldr	r1, .L414+40
 7068 047e 1846     		mov	r0, r3
 7069 0480 FFF7FEFF 		bl	sprintf
1370:..\src/command_processing.c ****         strcat(info_string, str);
 7070              		.loc 1 1370 0
 7071 0484 07F10803 		add	r3, r7, #8
 7072 0488 1946     		mov	r1, r3
 7073 048a 7868     		ldr	r0, [r7, #4]
 7074 048c FFF7FEFF 		bl	strcat
1371:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 7075              		.loc 1 1371 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 175


 7076 0490 7868     		ldr	r0, [r7, #4]
 7077 0492 FFF7FEFF 		bl	strlen
 7078 0496 0346     		mov	r3, r0
 7079 0498 1A46     		mov	r2, r3
 7080 049a 7B68     		ldr	r3, [r7, #4]
 7081 049c 1344     		add	r3, r3, r2
 7082 049e 5D4A     		ldr	r2, .L414+24
 7083 04a0 1188     		ldrh	r1, [r2]	@ unaligned
 7084 04a2 9278     		ldrb	r2, [r2, #2]
 7085 04a4 1980     		strh	r1, [r3]	@ unaligned
 7086 04a6 9A70     		strb	r2, [r3, #2]
1372:..\src/command_processing.c ****         
1373:..\src/command_processing.c ****         sprintf(str, "Full charge power tension (mV): %ld", (int32) pow_tension );
 7087              		.loc 1 1373 0
 7088 04a8 5F4B     		ldr	r3, .L414+44
 7089 04aa 1A68     		ldr	r2, [r3]
 7090 04ac 07F10803 		add	r3, r7, #8
 7091 04b0 5E49     		ldr	r1, .L414+48
 7092 04b2 1846     		mov	r0, r3
 7093 04b4 FFF7FEFF 		bl	sprintf
1374:..\src/command_processing.c ****         strcat(info_string, str);
 7094              		.loc 1 1374 0
 7095 04b8 07F10803 		add	r3, r7, #8
 7096 04bc 1946     		mov	r1, r3
 7097 04be 7868     		ldr	r0, [r7, #4]
 7098 04c0 FFF7FEFF 		bl	strcat
1375:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 7099              		.loc 1 1375 0
 7100 04c4 7868     		ldr	r0, [r7, #4]
 7101 04c6 FFF7FEFF 		bl	strlen
 7102 04ca 0346     		mov	r3, r0
 7103 04cc 1A46     		mov	r2, r3
 7104 04ce 7B68     		ldr	r3, [r7, #4]
 7105 04d0 1344     		add	r3, r3, r2
 7106 04d2 504A     		ldr	r2, .L414+24
 7107 04d4 1188     		ldrh	r1, [r2]	@ unaligned
 7108 04d6 9278     		ldrb	r2, [r2, #2]
 7109 04d8 1980     		strh	r1, [r3]	@ unaligned
 7110 04da 9A70     		strb	r2, [r3, #2]
1376:..\src/command_processing.c **** 
1377:..\src/command_processing.c ****         sprintf(str, "Current (mA): %ld", (int32) g_meas.curr );
 7111              		.loc 1 1377 0
 7112 04dc 4A4B     		ldr	r3, .L414+12
 7113 04de DA68     		ldr	r2, [r3, #12]
 7114 04e0 07F10803 		add	r3, r7, #8
 7115 04e4 5249     		ldr	r1, .L414+52
 7116 04e6 1846     		mov	r0, r3
 7117 04e8 FFF7FEFF 		bl	sprintf
1378:..\src/command_processing.c ****         strcat(info_string, str);
 7118              		.loc 1 1378 0
 7119 04ec 07F10803 		add	r3, r7, #8
 7120 04f0 1946     		mov	r1, r3
 7121 04f2 7868     		ldr	r0, [r7, #4]
 7122 04f4 FFF7FEFF 		bl	strcat
1379:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 7123              		.loc 1 1379 0
 7124 04f8 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 176


 7125 04fa FFF7FEFF 		bl	strlen
 7126 04fe 0346     		mov	r3, r0
 7127 0500 1A46     		mov	r2, r3
 7128 0502 7B68     		ldr	r3, [r7, #4]
 7129 0504 1344     		add	r3, r3, r2
 7130 0506 434A     		ldr	r2, .L414+24
 7131 0508 1188     		ldrh	r1, [r2]	@ unaligned
 7132 050a 9278     		ldrb	r2, [r2, #2]
 7133 050c 1980     		strh	r1, [r3]	@ unaligned
 7134 050e 9A70     		strb	r2, [r3, #2]
1380:..\src/command_processing.c **** 
1381:..\src/command_processing.c ****         strcat(info_string, "\r\nDEVICE PARAMETERS\r\n");
 7135              		.loc 1 1381 0
 7136 0510 7868     		ldr	r0, [r7, #4]
 7137 0512 FFF7FEFF 		bl	strlen
 7138 0516 0346     		mov	r3, r0
 7139 0518 1A46     		mov	r2, r3
 7140 051a 7B68     		ldr	r3, [r7, #4]
 7141 051c 1344     		add	r3, r3, r2
 7142 051e 454A     		ldr	r2, .L414+56
 7143 0520 1D46     		mov	r5, r3
 7144 0522 1446     		mov	r4, r2
 7145 0524 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 7146 0526 2860     		str	r0, [r5]	@ unaligned
 7147 0528 6960     		str	r1, [r5, #4]	@ unaligned
 7148 052a AA60     		str	r2, [r5, #8]	@ unaligned
 7149 052c EB60     		str	r3, [r5, #12]	@ unaligned
 7150 052e 2068     		ldr	r0, [r4]	@ unaligned
 7151 0530 2861     		str	r0, [r5, #16]	@ unaligned
 7152 0532 A388     		ldrh	r3, [r4, #4]	@ unaligned
 7153 0534 AB82     		strh	r3, [r5, #20]	@ unaligned
1382:..\src/command_processing.c **** 
1383:..\src/command_processing.c ****         strcat(info_string, "PID Controller:\r\n");
 7154              		.loc 1 1383 0
 7155 0536 7868     		ldr	r0, [r7, #4]
 7156 0538 FFF7FEFF 		bl	strlen
 7157 053c 0346     		mov	r3, r0
 7158 053e 1A46     		mov	r2, r3
 7159 0540 7B68     		ldr	r3, [r7, #4]
 7160 0542 1344     		add	r3, r3, r2
 7161 0544 3C4A     		ldr	r2, .L414+60
 7162 0546 1D46     		mov	r5, r3
 7163 0548 1446     		mov	r4, r2
 7164 054a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 7165 054c 2860     		str	r0, [r5]	@ unaligned
 7166 054e 6960     		str	r1, [r5, #4]	@ unaligned
 7167 0550 AA60     		str	r2, [r5, #8]	@ unaligned
 7168 0552 EB60     		str	r3, [r5, #12]	@ unaligned
 7169 0554 2388     		ldrh	r3, [r4]	@ unaligned
 7170 0556 2B82     		strh	r3, [r5, #16]	@ unaligned
1384:..\src/command_processing.c ****         if(c_mem.control_mode != CURR_AND_POS_CONTROL) {
 7171              		.loc 1 1384 0
 7172 0558 2C4B     		ldr	r3, .L414+16
 7173 055a 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 7174 055e 032B     		cmp	r3, #3
 7175 0560 74D0     		beq	.L365
1385:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) c_mem.k_p / 65536));
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 177


 7176              		.loc 1 1385 0
 7177 0562 2A4B     		ldr	r3, .L414+16
 7178 0564 5B68     		ldr	r3, [r3, #4]
 7179 0566 1846     		mov	r0, r3
 7180 0568 FFF7FEFF 		bl	__aeabi_i2d
 7181 056c 4FF00002 		mov	r2, #0
 7182 0570 324B     		ldr	r3, .L414+64
 7183 0572 FFF7FEFF 		bl	__aeabi_ddiv
 7184 0576 0346     		mov	r3, r0
 7185 0578 0C46     		mov	r4, r1
 7186 057a 07F10800 		add	r0, r7, #8
 7187 057e 1A46     		mov	r2, r3
 7188 0580 2346     		mov	r3, r4
 7189 0582 2F49     		ldr	r1, .L414+68
 7190 0584 FFF7FEFF 		bl	sprintf
1386:..\src/command_processing.c ****             strcat(info_string, str);
 7191              		.loc 1 1386 0
 7192 0588 07F10803 		add	r3, r7, #8
 7193 058c 1946     		mov	r1, r3
 7194 058e 7868     		ldr	r0, [r7, #4]
 7195 0590 FFF7FEFF 		bl	strcat
1387:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) c_mem.k_i / 65536));
 7196              		.loc 1 1387 0
 7197 0594 1D4B     		ldr	r3, .L414+16
 7198 0596 9B68     		ldr	r3, [r3, #8]
 7199 0598 1846     		mov	r0, r3
 7200 059a FFF7FEFF 		bl	__aeabi_i2d
 7201 059e 4FF00002 		mov	r2, #0
 7202 05a2 264B     		ldr	r3, .L414+64
 7203 05a4 FFF7FEFF 		bl	__aeabi_ddiv
 7204 05a8 0346     		mov	r3, r0
 7205 05aa 0C46     		mov	r4, r1
 7206 05ac 07F10800 		add	r0, r7, #8
 7207 05b0 1A46     		mov	r2, r3
 7208 05b2 2346     		mov	r3, r4
 7209 05b4 2349     		ldr	r1, .L414+72
 7210 05b6 FFF7FEFF 		bl	sprintf
1388:..\src/command_processing.c ****             strcat(info_string, str);
 7211              		.loc 1 1388 0
 7212 05ba 07F10803 		add	r3, r7, #8
 7213 05be 1946     		mov	r1, r3
 7214 05c0 7868     		ldr	r0, [r7, #4]
 7215 05c2 FFF7FEFF 		bl	strcat
1389:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) c_mem.k_d / 65536));
 7216              		.loc 1 1389 0
 7217 05c6 114B     		ldr	r3, .L414+16
 7218 05c8 DB68     		ldr	r3, [r3, #12]
 7219 05ca 1846     		mov	r0, r3
 7220 05cc FFF7FEFF 		bl	__aeabi_i2d
 7221 05d0 4FF00002 		mov	r2, #0
 7222 05d4 194B     		ldr	r3, .L414+64
 7223 05d6 FFF7FEFF 		bl	__aeabi_ddiv
 7224 05da 0346     		mov	r3, r0
 7225 05dc 0C46     		mov	r4, r1
 7226 05de 07F10800 		add	r0, r7, #8
 7227 05e2 1A46     		mov	r2, r3
 7228 05e4 2346     		mov	r3, r4
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 178


 7229 05e6 1849     		ldr	r1, .L414+76
 7230 05e8 FFF7FEFF 		bl	sprintf
1390:..\src/command_processing.c ****             strcat(info_string, str);
 7231              		.loc 1 1390 0
 7232 05ec 07F10803 		add	r3, r7, #8
 7233 05f0 1946     		mov	r1, r3
 7234 05f2 7868     		ldr	r0, [r7, #4]
 7235 05f4 FFF7FEFF 		bl	strcat
 7236 05f8 73E0     		b	.L366
 7237              	.L415:
 7238 05fa 00BF     		.align	2
 7239              	.L414:
 7240 05fc 1C070000 		.word	.LC77
 7241 0600 24070000 		.word	.LC78
 7242 0604 3C070000 		.word	.LC79
 7243 0608 00000000 		.word	g_meas
 7244 060c 00000000 		.word	c_mem
 7245 0610 4C070000 		.word	.LC80
 7246 0614 18060000 		.word	.LC59
 7247 0618 00000000 		.word	dev_tension
 7248 061c 58070000 		.word	.LC81
 7249 0620 00000000 		.word	dev_tension_f
 7250 0624 74070000 		.word	.LC82
 7251 0628 00000000 		.word	pow_tension
 7252 062c 98070000 		.word	.LC83
 7253 0630 BC070000 		.word	.LC84
 7254 0634 D0070000 		.word	.LC85
 7255 0638 E8070000 		.word	.LC86
 7256 063c 0000F040 		.word	1089470464
 7257 0640 FC070000 		.word	.LC87
 7258 0644 08080000 		.word	.LC88
 7259 0648 14080000 		.word	.LC89
 7260              	.L365:
1391:..\src/command_processing.c ****         }
1392:..\src/command_processing.c ****         else { 
1393:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) c_mem.k_p_dl / 65536));
 7261              		.loc 1 1393 0
 7262 064c C44B     		ldr	r3, .L416
 7263 064e DB69     		ldr	r3, [r3, #28]
 7264 0650 1846     		mov	r0, r3
 7265 0652 FFF7FEFF 		bl	__aeabi_i2d
 7266 0656 4FF00002 		mov	r2, #0
 7267 065a C24B     		ldr	r3, .L416+4
 7268 065c FFF7FEFF 		bl	__aeabi_ddiv
 7269 0660 0346     		mov	r3, r0
 7270 0662 0C46     		mov	r4, r1
 7271 0664 07F10800 		add	r0, r7, #8
 7272 0668 1A46     		mov	r2, r3
 7273 066a 2346     		mov	r3, r4
 7274 066c BE49     		ldr	r1, .L416+8
 7275 066e FFF7FEFF 		bl	sprintf
1394:..\src/command_processing.c ****             strcat(info_string, str);
 7276              		.loc 1 1394 0
 7277 0672 07F10803 		add	r3, r7, #8
 7278 0676 1946     		mov	r1, r3
 7279 0678 7868     		ldr	r0, [r7, #4]
 7280 067a FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 179


1395:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) c_mem.k_i_dl / 65536));
 7281              		.loc 1 1395 0
 7282 067e B84B     		ldr	r3, .L416
 7283 0680 1B6A     		ldr	r3, [r3, #32]
 7284 0682 1846     		mov	r0, r3
 7285 0684 FFF7FEFF 		bl	__aeabi_i2d
 7286 0688 4FF00002 		mov	r2, #0
 7287 068c B54B     		ldr	r3, .L416+4
 7288 068e FFF7FEFF 		bl	__aeabi_ddiv
 7289 0692 0346     		mov	r3, r0
 7290 0694 0C46     		mov	r4, r1
 7291 0696 07F10800 		add	r0, r7, #8
 7292 069a 1A46     		mov	r2, r3
 7293 069c 2346     		mov	r3, r4
 7294 069e B349     		ldr	r1, .L416+12
 7295 06a0 FFF7FEFF 		bl	sprintf
1396:..\src/command_processing.c ****             strcat(info_string, str);
 7296              		.loc 1 1396 0
 7297 06a4 07F10803 		add	r3, r7, #8
 7298 06a8 1946     		mov	r1, r3
 7299 06aa 7868     		ldr	r0, [r7, #4]
 7300 06ac FFF7FEFF 		bl	strcat
1397:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) c_mem.k_d_dl / 65536));
 7301              		.loc 1 1397 0
 7302 06b0 AB4B     		ldr	r3, .L416
 7303 06b2 5B6A     		ldr	r3, [r3, #36]
 7304 06b4 1846     		mov	r0, r3
 7305 06b6 FFF7FEFF 		bl	__aeabi_i2d
 7306 06ba 4FF00002 		mov	r2, #0
 7307 06be A94B     		ldr	r3, .L416+4
 7308 06c0 FFF7FEFF 		bl	__aeabi_ddiv
 7309 06c4 0346     		mov	r3, r0
 7310 06c6 0C46     		mov	r4, r1
 7311 06c8 07F10800 		add	r0, r7, #8
 7312 06cc 1A46     		mov	r2, r3
 7313 06ce 2346     		mov	r3, r4
 7314 06d0 A749     		ldr	r1, .L416+16
 7315 06d2 FFF7FEFF 		bl	sprintf
1398:..\src/command_processing.c ****             strcat(info_string, str);
 7316              		.loc 1 1398 0
 7317 06d6 07F10803 		add	r3, r7, #8
 7318 06da 1946     		mov	r1, r3
 7319 06dc 7868     		ldr	r0, [r7, #4]
 7320 06de FFF7FEFF 		bl	strcat
 7321              	.L366:
1399:..\src/command_processing.c ****         }
1400:..\src/command_processing.c **** 
1401:..\src/command_processing.c ****         strcat(info_string, "Current PID Controller:\r\n");
 7322              		.loc 1 1401 0
 7323 06e2 7868     		ldr	r0, [r7, #4]
 7324 06e4 FFF7FEFF 		bl	strlen
 7325 06e8 0346     		mov	r3, r0
 7326 06ea 1A46     		mov	r2, r3
 7327 06ec 7B68     		ldr	r3, [r7, #4]
 7328 06ee 1344     		add	r3, r3, r2
 7329 06f0 A04A     		ldr	r2, .L416+20
 7330 06f2 1D46     		mov	r5, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 180


 7331 06f4 1446     		mov	r4, r2
 7332 06f6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 7333 06f8 2860     		str	r0, [r5]	@ unaligned
 7334 06fa 6960     		str	r1, [r5, #4]	@ unaligned
 7335 06fc AA60     		str	r2, [r5, #8]	@ unaligned
 7336 06fe EB60     		str	r3, [r5, #12]	@ unaligned
 7337 0700 03CC     		ldmia	r4!, {r0, r1}
 7338 0702 2861     		str	r0, [r5, #16]	@ unaligned
 7339 0704 6961     		str	r1, [r5, #20]	@ unaligned
 7340 0706 2388     		ldrh	r3, [r4]	@ unaligned
 7341 0708 2B83     		strh	r3, [r5, #24]	@ unaligned
1402:..\src/command_processing.c ****         if(c_mem.control_mode != CURR_AND_POS_CONTROL) {
 7342              		.loc 1 1402 0
 7343 070a 954B     		ldr	r3, .L416
 7344 070c 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 7345 0710 032B     		cmp	r3, #3
 7346 0712 4BD0     		beq	.L367
1403:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) c_mem.k_p_c / 65536));
 7347              		.loc 1 1403 0
 7348 0714 924B     		ldr	r3, .L416
 7349 0716 1B69     		ldr	r3, [r3, #16]
 7350 0718 1846     		mov	r0, r3
 7351 071a FFF7FEFF 		bl	__aeabi_i2d
 7352 071e 4FF00002 		mov	r2, #0
 7353 0722 904B     		ldr	r3, .L416+4
 7354 0724 FFF7FEFF 		bl	__aeabi_ddiv
 7355 0728 0346     		mov	r3, r0
 7356 072a 0C46     		mov	r4, r1
 7357 072c 07F10800 		add	r0, r7, #8
 7358 0730 1A46     		mov	r2, r3
 7359 0732 2346     		mov	r3, r4
 7360 0734 8C49     		ldr	r1, .L416+8
 7361 0736 FFF7FEFF 		bl	sprintf
1404:..\src/command_processing.c ****             strcat(info_string, str);
 7362              		.loc 1 1404 0
 7363 073a 07F10803 		add	r3, r7, #8
 7364 073e 1946     		mov	r1, r3
 7365 0740 7868     		ldr	r0, [r7, #4]
 7366 0742 FFF7FEFF 		bl	strcat
1405:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) c_mem.k_i_c / 65536));
 7367              		.loc 1 1405 0
 7368 0746 864B     		ldr	r3, .L416
 7369 0748 5B69     		ldr	r3, [r3, #20]
 7370 074a 1846     		mov	r0, r3
 7371 074c FFF7FEFF 		bl	__aeabi_i2d
 7372 0750 4FF00002 		mov	r2, #0
 7373 0754 834B     		ldr	r3, .L416+4
 7374 0756 FFF7FEFF 		bl	__aeabi_ddiv
 7375 075a 0346     		mov	r3, r0
 7376 075c 0C46     		mov	r4, r1
 7377 075e 07F10800 		add	r0, r7, #8
 7378 0762 1A46     		mov	r2, r3
 7379 0764 2346     		mov	r3, r4
 7380 0766 8149     		ldr	r1, .L416+12
 7381 0768 FFF7FEFF 		bl	sprintf
1406:..\src/command_processing.c ****             strcat(info_string, str);
 7382              		.loc 1 1406 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 181


 7383 076c 07F10803 		add	r3, r7, #8
 7384 0770 1946     		mov	r1, r3
 7385 0772 7868     		ldr	r0, [r7, #4]
 7386 0774 FFF7FEFF 		bl	strcat
1407:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) c_mem.k_d_c / 65536));
 7387              		.loc 1 1407 0
 7388 0778 794B     		ldr	r3, .L416
 7389 077a 9B69     		ldr	r3, [r3, #24]
 7390 077c 1846     		mov	r0, r3
 7391 077e FFF7FEFF 		bl	__aeabi_i2d
 7392 0782 4FF00002 		mov	r2, #0
 7393 0786 774B     		ldr	r3, .L416+4
 7394 0788 FFF7FEFF 		bl	__aeabi_ddiv
 7395 078c 0346     		mov	r3, r0
 7396 078e 0C46     		mov	r4, r1
 7397 0790 07F10800 		add	r0, r7, #8
 7398 0794 1A46     		mov	r2, r3
 7399 0796 2346     		mov	r3, r4
 7400 0798 7549     		ldr	r1, .L416+16
 7401 079a FFF7FEFF 		bl	sprintf
1408:..\src/command_processing.c ****             strcat(info_string, str);
 7402              		.loc 1 1408 0
 7403 079e 07F10803 		add	r3, r7, #8
 7404 07a2 1946     		mov	r1, r3
 7405 07a4 7868     		ldr	r0, [r7, #4]
 7406 07a6 FFF7FEFF 		bl	strcat
 7407 07aa 4AE0     		b	.L368
 7408              	.L367:
1409:..\src/command_processing.c **** 
1410:..\src/command_processing.c ****         }
1411:..\src/command_processing.c ****         else {
1412:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) c_mem.k_p_c_dl / 65536));
 7409              		.loc 1 1412 0
 7410 07ac 6C4B     		ldr	r3, .L416
 7411 07ae 9B6A     		ldr	r3, [r3, #40]
 7412 07b0 1846     		mov	r0, r3
 7413 07b2 FFF7FEFF 		bl	__aeabi_i2d
 7414 07b6 4FF00002 		mov	r2, #0
 7415 07ba 6A4B     		ldr	r3, .L416+4
 7416 07bc FFF7FEFF 		bl	__aeabi_ddiv
 7417 07c0 0346     		mov	r3, r0
 7418 07c2 0C46     		mov	r4, r1
 7419 07c4 07F10800 		add	r0, r7, #8
 7420 07c8 1A46     		mov	r2, r3
 7421 07ca 2346     		mov	r3, r4
 7422 07cc 6649     		ldr	r1, .L416+8
 7423 07ce FFF7FEFF 		bl	sprintf
1413:..\src/command_processing.c ****             strcat(info_string, str);
 7424              		.loc 1 1413 0
 7425 07d2 07F10803 		add	r3, r7, #8
 7426 07d6 1946     		mov	r1, r3
 7427 07d8 7868     		ldr	r0, [r7, #4]
 7428 07da FFF7FEFF 		bl	strcat
1414:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) c_mem.k_i_c_dl / 65536));
 7429              		.loc 1 1414 0
 7430 07de 604B     		ldr	r3, .L416
 7431 07e0 DB6A     		ldr	r3, [r3, #44]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 182


 7432 07e2 1846     		mov	r0, r3
 7433 07e4 FFF7FEFF 		bl	__aeabi_i2d
 7434 07e8 4FF00002 		mov	r2, #0
 7435 07ec 5D4B     		ldr	r3, .L416+4
 7436 07ee FFF7FEFF 		bl	__aeabi_ddiv
 7437 07f2 0346     		mov	r3, r0
 7438 07f4 0C46     		mov	r4, r1
 7439 07f6 07F10800 		add	r0, r7, #8
 7440 07fa 1A46     		mov	r2, r3
 7441 07fc 2346     		mov	r3, r4
 7442 07fe 5B49     		ldr	r1, .L416+12
 7443 0800 FFF7FEFF 		bl	sprintf
1415:..\src/command_processing.c ****             strcat(info_string, str);
 7444              		.loc 1 1415 0
 7445 0804 07F10803 		add	r3, r7, #8
 7446 0808 1946     		mov	r1, r3
 7447 080a 7868     		ldr	r0, [r7, #4]
 7448 080c FFF7FEFF 		bl	strcat
1416:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) c_mem.k_d_c_dl / 65536));
 7449              		.loc 1 1416 0
 7450 0810 534B     		ldr	r3, .L416
 7451 0812 1B6B     		ldr	r3, [r3, #48]
 7452 0814 1846     		mov	r0, r3
 7453 0816 FFF7FEFF 		bl	__aeabi_i2d
 7454 081a 4FF00002 		mov	r2, #0
 7455 081e 514B     		ldr	r3, .L416+4
 7456 0820 FFF7FEFF 		bl	__aeabi_ddiv
 7457 0824 0346     		mov	r3, r0
 7458 0826 0C46     		mov	r4, r1
 7459 0828 07F10800 		add	r0, r7, #8
 7460 082c 1A46     		mov	r2, r3
 7461 082e 2346     		mov	r3, r4
 7462 0830 4F49     		ldr	r1, .L416+16
 7463 0832 FFF7FEFF 		bl	sprintf
1417:..\src/command_processing.c ****             strcat(info_string, str);
 7464              		.loc 1 1417 0
 7465 0836 07F10803 		add	r3, r7, #8
 7466 083a 1946     		mov	r1, r3
 7467 083c 7868     		ldr	r0, [r7, #4]
 7468 083e FFF7FEFF 		bl	strcat
 7469              	.L368:
1418:..\src/command_processing.c ****         }
1419:..\src/command_processing.c **** 
1420:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 7470              		.loc 1 1420 0
 7471 0842 7868     		ldr	r0, [r7, #4]
 7472 0844 FFF7FEFF 		bl	strlen
 7473 0848 0346     		mov	r3, r0
 7474 084a 1A46     		mov	r2, r3
 7475 084c 7B68     		ldr	r3, [r7, #4]
 7476 084e 1344     		add	r3, r3, r2
 7477 0850 494A     		ldr	r2, .L416+24
 7478 0852 1188     		ldrh	r1, [r2]	@ unaligned
 7479 0854 9278     		ldrb	r2, [r2, #2]
 7480 0856 1980     		strh	r1, [r3]	@ unaligned
 7481 0858 9A70     		strb	r2, [r3, #2]
1421:..\src/command_processing.c **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 183


1422:..\src/command_processing.c ****         if (c_mem.activ == 0x01)
 7482              		.loc 1 1422 0
 7483 085a 414B     		ldr	r3, .L416
 7484 085c 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
 7485 0860 012B     		cmp	r3, #1
 7486 0862 14D1     		bne	.L369
1423:..\src/command_processing.c ****             strcat(info_string, "Startup activation: YES\r\n");
 7487              		.loc 1 1423 0
 7488 0864 7868     		ldr	r0, [r7, #4]
 7489 0866 FFF7FEFF 		bl	strlen
 7490 086a 0346     		mov	r3, r0
 7491 086c 1A46     		mov	r2, r3
 7492 086e 7B68     		ldr	r3, [r7, #4]
 7493 0870 1344     		add	r3, r3, r2
 7494 0872 424A     		ldr	r2, .L416+28
 7495 0874 1D46     		mov	r5, r3
 7496 0876 1446     		mov	r4, r2
 7497 0878 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 7498 087a 2860     		str	r0, [r5]	@ unaligned
 7499 087c 6960     		str	r1, [r5, #4]	@ unaligned
 7500 087e AA60     		str	r2, [r5, #8]	@ unaligned
 7501 0880 EB60     		str	r3, [r5, #12]	@ unaligned
 7502 0882 03CC     		ldmia	r4!, {r0, r1}
 7503 0884 2861     		str	r0, [r5, #16]	@ unaligned
 7504 0886 6961     		str	r1, [r5, #20]	@ unaligned
 7505 0888 2388     		ldrh	r3, [r4]	@ unaligned
 7506 088a 2B83     		strh	r3, [r5, #24]	@ unaligned
 7507 088c 13E0     		b	.L370
 7508              	.L369:
1424:..\src/command_processing.c ****         else
1425:..\src/command_processing.c ****             strcat(info_string, "Startup activation: NO\r\n");
 7509              		.loc 1 1425 0
 7510 088e 7868     		ldr	r0, [r7, #4]
 7511 0890 FFF7FEFF 		bl	strlen
 7512 0894 0346     		mov	r3, r0
 7513 0896 1A46     		mov	r2, r3
 7514 0898 7B68     		ldr	r3, [r7, #4]
 7515 089a 1344     		add	r3, r3, r2
 7516 089c 384A     		ldr	r2, .L416+32
 7517 089e 1D46     		mov	r5, r3
 7518 08a0 1446     		mov	r4, r2
 7519 08a2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 7520 08a4 2860     		str	r0, [r5]	@ unaligned
 7521 08a6 6960     		str	r1, [r5, #4]	@ unaligned
 7522 08a8 AA60     		str	r2, [r5, #8]	@ unaligned
 7523 08aa EB60     		str	r3, [r5, #12]	@ unaligned
 7524 08ac 03CC     		ldmia	r4!, {r0, r1}
 7525 08ae 2861     		str	r0, [r5, #16]	@ unaligned
 7526 08b0 6961     		str	r1, [r5, #20]	@ unaligned
 7527 08b2 2378     		ldrb	r3, [r4]
 7528 08b4 2B76     		strb	r3, [r5, #24]
 7529              	.L370:
1426:..\src/command_processing.c **** 
1427:..\src/command_processing.c ****         switch(c_mem.input_mode) {
 7530              		.loc 1 1427 0
 7531 08b6 2A4B     		ldr	r3, .L416
 7532 08b8 93F83530 		ldrb	r3, [r3, #53]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 184


 7533 08bc 052B     		cmp	r3, #5
 7534 08be 00F2AE80 		bhi	.L371
 7535 08c2 01A2     		adr	r2, .L373
 7536 08c4 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7537              		.p2align 2
 7538              	.L373:
 7539 08c8 E1080000 		.word	.L372+1
 7540 08cc 05090000 		.word	.L374+1
 7541 08d0 2D090000 		.word	.L375+1
 7542 08d4 91090000 		.word	.L376+1
 7543 08d8 C1090000 		.word	.L377+1
 7544 08dc EF090000 		.word	.L378+1
 7545              		.p2align 1
 7546              	.L372:
1428:..\src/command_processing.c ****             case INPUT_MODE_EXTERNAL:
1429:..\src/command_processing.c ****                 strcat(info_string, "Input mode: USB\r\n");
 7547              		.loc 1 1429 0
 7548 08e0 7868     		ldr	r0, [r7, #4]
 7549 08e2 FFF7FEFF 		bl	strlen
 7550 08e6 0346     		mov	r3, r0
 7551 08e8 1A46     		mov	r2, r3
 7552 08ea 7B68     		ldr	r3, [r7, #4]
 7553 08ec 1344     		add	r3, r3, r2
 7554 08ee 254A     		ldr	r2, .L416+36
 7555 08f0 1D46     		mov	r5, r3
 7556 08f2 1446     		mov	r4, r2
 7557 08f4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 7558 08f6 2860     		str	r0, [r5]	@ unaligned
 7559 08f8 6960     		str	r1, [r5, #4]	@ unaligned
 7560 08fa AA60     		str	r2, [r5, #8]	@ unaligned
 7561 08fc EB60     		str	r3, [r5, #12]	@ unaligned
 7562 08fe 2388     		ldrh	r3, [r4]	@ unaligned
 7563 0900 2B82     		strh	r3, [r5, #16]	@ unaligned
1430:..\src/command_processing.c ****                 break;
 7564              		.loc 1 1430 0
 7565 0902 8CE0     		b	.L371
 7566              	.L374:
1431:..\src/command_processing.c ****             case INPUT_MODE_ENCODER3:
1432:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Handle\r\n");
 7567              		.loc 1 1432 0
 7568 0904 7868     		ldr	r0, [r7, #4]
 7569 0906 FFF7FEFF 		bl	strlen
 7570 090a 0346     		mov	r3, r0
 7571 090c 1A46     		mov	r2, r3
 7572 090e 7B68     		ldr	r3, [r7, #4]
 7573 0910 1344     		add	r3, r3, r2
 7574 0912 1D4A     		ldr	r2, .L416+40
 7575 0914 1D46     		mov	r5, r3
 7576 0916 1446     		mov	r4, r2
 7577 0918 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 7578 091a 2860     		str	r0, [r5]	@ unaligned
 7579 091c 6960     		str	r1, [r5, #4]	@ unaligned
 7580 091e AA60     		str	r2, [r5, #8]	@ unaligned
 7581 0920 EB60     		str	r3, [r5, #12]	@ unaligned
 7582 0922 2068     		ldr	r0, [r4]	@ unaligned
 7583 0924 2861     		str	r0, [r5, #16]	@ unaligned
 7584 0926 2379     		ldrb	r3, [r4, #4]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 185


 7585 0928 2B75     		strb	r3, [r5, #20]
1433:..\src/command_processing.c ****                 break;
 7586              		.loc 1 1433 0
 7587 092a 78E0     		b	.L371
 7588              	.L375:
1434:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL:
1435:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional\r\n");
 7589              		.loc 1 1435 0
 7590 092c 7868     		ldr	r0, [r7, #4]
 7591 092e FFF7FEFF 		bl	strlen
 7592 0932 0346     		mov	r3, r0
 7593 0934 1A46     		mov	r2, r3
 7594 0936 7B68     		ldr	r3, [r7, #4]
 7595 0938 1344     		add	r3, r3, r2
 7596 093a 144A     		ldr	r2, .L416+44
 7597 093c 1D46     		mov	r5, r3
 7598 093e 1446     		mov	r4, r2
 7599 0940 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 7600 0942 2860     		str	r0, [r5]	@ unaligned
 7601 0944 6960     		str	r1, [r5, #4]	@ unaligned
 7602 0946 AA60     		str	r2, [r5, #8]	@ unaligned
 7603 0948 EB60     		str	r3, [r5, #12]	@ unaligned
 7604 094a 07CC     		ldmia	r4!, {r0, r1, r2}
 7605 094c 2861     		str	r0, [r5, #16]	@ unaligned
 7606 094e 6961     		str	r1, [r5, #20]	@ unaligned
 7607 0950 AA61     		str	r2, [r5, #24]	@ unaligned
 7608 0952 2388     		ldrh	r3, [r4]	@ unaligned
 7609 0954 A278     		ldrb	r2, [r4, #2]
 7610 0956 AB83     		strh	r3, [r5, #28]	@ unaligned
 7611 0958 1346     		mov	r3, r2
 7612 095a AB77     		strb	r3, [r5, #30]
1436:..\src/command_processing.c ****                 break;
 7613              		.loc 1 1436 0
 7614 095c 5FE0     		b	.L371
 7615              	.L417:
 7616 095e 00BF     		.align	2
 7617              	.L416:
 7618 0960 00000000 		.word	c_mem
 7619 0964 0000F040 		.word	1089470464
 7620 0968 FC070000 		.word	.LC87
 7621 096c 08080000 		.word	.LC88
 7622 0970 14080000 		.word	.LC89
 7623 0974 20080000 		.word	.LC90
 7624 0978 18060000 		.word	.LC59
 7625 097c 3C080000 		.word	.LC91
 7626 0980 58080000 		.word	.LC92
 7627 0984 74080000 		.word	.LC93
 7628 0988 88080000 		.word	.LC94
 7629 098c A0080000 		.word	.LC95
 7630              	.L376:
1437:..\src/command_processing.c ****             case INPUT_MODE_EMG_INTEGRAL:
1438:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG integral\r\n");
 7631              		.loc 1 1438 0
 7632 0990 7868     		ldr	r0, [r7, #4]
 7633 0992 FFF7FEFF 		bl	strlen
 7634 0996 0346     		mov	r3, r0
 7635 0998 1A46     		mov	r2, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 186


 7636 099a 7B68     		ldr	r3, [r7, #4]
 7637 099c 1344     		add	r3, r3, r2
 7638 099e C24A     		ldr	r2, .L418
 7639 09a0 1D46     		mov	r5, r3
 7640 09a2 1446     		mov	r4, r2
 7641 09a4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 7642 09a6 2860     		str	r0, [r5]	@ unaligned
 7643 09a8 6960     		str	r1, [r5, #4]	@ unaligned
 7644 09aa AA60     		str	r2, [r5, #8]	@ unaligned
 7645 09ac EB60     		str	r3, [r5, #12]	@ unaligned
 7646 09ae 03CC     		ldmia	r4!, {r0, r1}
 7647 09b0 2861     		str	r0, [r5, #16]	@ unaligned
 7648 09b2 6961     		str	r1, [r5, #20]	@ unaligned
 7649 09b4 2388     		ldrh	r3, [r4]	@ unaligned
 7650 09b6 A278     		ldrb	r2, [r4, #2]
 7651 09b8 2B83     		strh	r3, [r5, #24]	@ unaligned
 7652 09ba 1346     		mov	r3, r2
 7653 09bc AB76     		strb	r3, [r5, #26]
1439:..\src/command_processing.c ****                 break;
 7654              		.loc 1 1439 0
 7655 09be 2EE0     		b	.L371
 7656              	.L377:
1440:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS:
1441:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS\r\n");
 7657              		.loc 1 1441 0
 7658 09c0 7868     		ldr	r0, [r7, #4]
 7659 09c2 FFF7FEFF 		bl	strlen
 7660 09c6 0346     		mov	r3, r0
 7661 09c8 1A46     		mov	r2, r3
 7662 09ca 7B68     		ldr	r3, [r7, #4]
 7663 09cc 1344     		add	r3, r3, r2
 7664 09ce B74A     		ldr	r2, .L418+4
 7665 09d0 1C46     		mov	r4, r3
 7666 09d2 1546     		mov	r5, r2
 7667 09d4 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7668 09d6 2060     		str	r0, [r4]	@ unaligned
 7669 09d8 6160     		str	r1, [r4, #4]	@ unaligned
 7670 09da A260     		str	r2, [r4, #8]	@ unaligned
 7671 09dc E360     		str	r3, [r4, #12]	@ unaligned
 7672 09de 2868     		ldr	r0, [r5]	@ unaligned
 7673 09e0 2061     		str	r0, [r4, #16]	@ unaligned
 7674 09e2 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 7675 09e4 AA79     		ldrb	r2, [r5, #6]
 7676 09e6 A382     		strh	r3, [r4, #20]	@ unaligned
 7677 09e8 1346     		mov	r3, r2
 7678 09ea A375     		strb	r3, [r4, #22]
1442:..\src/command_processing.c ****                 break;
 7679              		.loc 1 1442 0
 7680 09ec 17E0     		b	.L371
 7681              	.L378:
1443:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS_ADV:
1444:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 7682              		.loc 1 1444 0
 7683 09ee 7868     		ldr	r0, [r7, #4]
 7684 09f0 FFF7FEFF 		bl	strlen
 7685 09f4 0346     		mov	r3, r0
 7686 09f6 1A46     		mov	r2, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 187


 7687 09f8 7B68     		ldr	r3, [r7, #4]
 7688 09fa 1344     		add	r3, r3, r2
 7689 09fc AC4A     		ldr	r2, .L418+8
 7690 09fe 1D46     		mov	r5, r3
 7691 0a00 1446     		mov	r4, r2
 7692 0a02 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 7693 0a04 2860     		str	r0, [r5]	@ unaligned
 7694 0a06 6960     		str	r1, [r5, #4]	@ unaligned
 7695 0a08 AA60     		str	r2, [r5, #8]	@ unaligned
 7696 0a0a EB60     		str	r3, [r5, #12]	@ unaligned
 7697 0a0c 03CC     		ldmia	r4!, {r0, r1}
 7698 0a0e 2861     		str	r0, [r5, #16]	@ unaligned
 7699 0a10 6961     		str	r1, [r5, #20]	@ unaligned
 7700 0a12 2388     		ldrh	r3, [r4]	@ unaligned
 7701 0a14 A278     		ldrb	r2, [r4, #2]
 7702 0a16 2B83     		strh	r3, [r5, #24]	@ unaligned
 7703 0a18 1346     		mov	r3, r2
 7704 0a1a AB76     		strb	r3, [r5, #26]
1445:..\src/command_processing.c ****                 break;
 7705              		.loc 1 1445 0
 7706 0a1c 00BF     		nop
 7707              	.L371:
1446:..\src/command_processing.c ****         }
1447:..\src/command_processing.c **** 
1448:..\src/command_processing.c ****         switch(c_mem.control_mode) {
 7708              		.loc 1 1448 0
 7709 0a1e A54B     		ldr	r3, .L418+12
 7710 0a20 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 7711 0a24 032B     		cmp	r3, #3
 7712 0a26 64D8     		bhi	.L411
 7713 0a28 01A2     		adr	r2, .L381
 7714 0a2a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7715 0a2e 00BF     		.p2align 2
 7716              	.L381:
 7717 0a30 410A0000 		.word	.L380+1
 7718 0a34 6B0A0000 		.word	.L382+1
 7719 0a38 8F0A0000 		.word	.L383+1
 7720 0a3c B50A0000 		.word	.L384+1
 7721              		.p2align 1
 7722              	.L380:
1449:..\src/command_processing.c ****             case CONTROL_ANGLE:
1450:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position\r\n");
 7723              		.loc 1 1450 0
 7724 0a40 7868     		ldr	r0, [r7, #4]
 7725 0a42 FFF7FEFF 		bl	strlen
 7726 0a46 0346     		mov	r3, r0
 7727 0a48 1A46     		mov	r2, r3
 7728 0a4a 7B68     		ldr	r3, [r7, #4]
 7729 0a4c 1344     		add	r3, r3, r2
 7730 0a4e 9A4A     		ldr	r2, .L418+16
 7731 0a50 1D46     		mov	r5, r3
 7732 0a52 1446     		mov	r4, r2
 7733 0a54 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 7734 0a56 2860     		str	r0, [r5]	@ unaligned
 7735 0a58 6960     		str	r1, [r5, #4]	@ unaligned
 7736 0a5a AA60     		str	r2, [r5, #8]	@ unaligned
 7737 0a5c EB60     		str	r3, [r5, #12]	@ unaligned
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 188


 7738 0a5e 03CC     		ldmia	r4!, {r0, r1}
 7739 0a60 2861     		str	r0, [r5, #16]	@ unaligned
 7740 0a62 6961     		str	r1, [r5, #20]	@ unaligned
 7741 0a64 2378     		ldrb	r3, [r4]
 7742 0a66 2B76     		strb	r3, [r5, #24]
1451:..\src/command_processing.c ****                 break;
 7743              		.loc 1 1451 0
 7744 0a68 44E0     		b	.L385
 7745              	.L382:
1452:..\src/command_processing.c ****             case CONTROL_PWM:
1453:..\src/command_processing.c ****                 strcat(info_string, "Control mode: PWM\r\n");
 7746              		.loc 1 1453 0
 7747 0a6a 7868     		ldr	r0, [r7, #4]
 7748 0a6c FFF7FEFF 		bl	strlen
 7749 0a70 0346     		mov	r3, r0
 7750 0a72 1A46     		mov	r2, r3
 7751 0a74 7B68     		ldr	r3, [r7, #4]
 7752 0a76 1344     		add	r3, r3, r2
 7753 0a78 904A     		ldr	r2, .L418+20
 7754 0a7a 1D46     		mov	r5, r3
 7755 0a7c 1446     		mov	r4, r2
 7756 0a7e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 7757 0a80 2860     		str	r0, [r5]	@ unaligned
 7758 0a82 6960     		str	r1, [r5, #4]	@ unaligned
 7759 0a84 AA60     		str	r2, [r5, #8]	@ unaligned
 7760 0a86 EB60     		str	r3, [r5, #12]	@ unaligned
 7761 0a88 2068     		ldr	r0, [r4]	@ unaligned
 7762 0a8a 2861     		str	r0, [r5, #16]	@ unaligned
1454:..\src/command_processing.c ****                 break;
 7763              		.loc 1 1454 0
 7764 0a8c 32E0     		b	.L385
 7765              	.L383:
1455:..\src/command_processing.c ****             case CONTROL_CURRENT:
1456:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Current\r\n");
 7766              		.loc 1 1456 0
 7767 0a8e 7868     		ldr	r0, [r7, #4]
 7768 0a90 FFF7FEFF 		bl	strlen
 7769 0a94 0346     		mov	r3, r0
 7770 0a96 1A46     		mov	r2, r3
 7771 0a98 7B68     		ldr	r3, [r7, #4]
 7772 0a9a 1344     		add	r3, r3, r2
 7773 0a9c 884A     		ldr	r2, .L418+24
 7774 0a9e 1D46     		mov	r5, r3
 7775 0aa0 1446     		mov	r4, r2
 7776 0aa2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 7777 0aa4 2860     		str	r0, [r5]	@ unaligned
 7778 0aa6 6960     		str	r1, [r5, #4]	@ unaligned
 7779 0aa8 AA60     		str	r2, [r5, #8]	@ unaligned
 7780 0aaa EB60     		str	r3, [r5, #12]	@ unaligned
 7781 0aac 03CC     		ldmia	r4!, {r0, r1}
 7782 0aae 2861     		str	r0, [r5, #16]	@ unaligned
 7783 0ab0 6961     		str	r1, [r5, #20]	@ unaligned
1457:..\src/command_processing.c ****                 break;
 7784              		.loc 1 1457 0
 7785 0ab2 1FE0     		b	.L385
 7786              	.L384:
1458:..\src/command_processing.c ****             case CURR_AND_POS_CONTROL:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 189


1459:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position and Current\r\n");
 7787              		.loc 1 1459 0
 7788 0ab4 7868     		ldr	r0, [r7, #4]
 7789 0ab6 FFF7FEFF 		bl	strlen
 7790 0aba 0346     		mov	r3, r0
 7791 0abc 1A46     		mov	r2, r3
 7792 0abe 7B68     		ldr	r3, [r7, #4]
 7793 0ac0 1344     		add	r3, r3, r2
 7794 0ac2 804A     		ldr	r2, .L418+28
 7795 0ac4 1446     		mov	r4, r2
 7796 0ac6 9E46     		mov	lr, r3
 7797 0ac8 04F1200C 		add	ip, r4, #32
 7798              	.L386:
 7799 0acc 7546     		mov	r5, lr
 7800 0ace 2646     		mov	r6, r4
 7801 0ad0 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 7802 0ad2 2860     		str	r0, [r5]	@ unaligned
 7803 0ad4 6960     		str	r1, [r5, #4]	@ unaligned
 7804 0ad6 AA60     		str	r2, [r5, #8]	@ unaligned
 7805 0ad8 EB60     		str	r3, [r5, #12]	@ unaligned
 7806 0ada 1034     		adds	r4, r4, #16
 7807 0adc 0EF1100E 		add	lr, lr, #16
 7808 0ae0 6445     		cmp	r4, ip
 7809 0ae2 F3D1     		bne	.L386
 7810 0ae4 7346     		mov	r3, lr
 7811 0ae6 2246     		mov	r2, r4
 7812 0ae8 1068     		ldr	r0, [r2]	@ unaligned
 7813 0aea 1860     		str	r0, [r3]	@ unaligned
 7814 0aec 1279     		ldrb	r2, [r2, #4]
 7815 0aee 1A71     		strb	r2, [r3, #4]
1460:..\src/command_processing.c ****                 break;
 7816              		.loc 1 1460 0
 7817 0af0 00E0     		b	.L385
 7818              	.L411:
1461:..\src/command_processing.c ****             default:
1462:..\src/command_processing.c ****                 break;
 7819              		.loc 1 1462 0
 7820 0af2 00BF     		nop
 7821              	.L385:
1463:..\src/command_processing.c ****         }
1464:..\src/command_processing.c **** 
1465:..\src/command_processing.c ****         if (c_mem.double_encoder_on_off)
 7822              		.loc 1 1465 0
 7823 0af4 6F4B     		ldr	r3, .L418+12
 7824 0af6 93F87930 		ldrb	r3, [r3, #121]	@ zero_extendqisi2
 7825 0afa 002B     		cmp	r3, #0
 7826 0afc 1CD0     		beq	.L387
1466:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: YES\r\n");
 7827              		.loc 1 1466 0
 7828 0afe 7868     		ldr	r0, [r7, #4]
 7829 0b00 FFF7FEFF 		bl	strlen
 7830 0b04 0346     		mov	r3, r0
 7831 0b06 1A46     		mov	r2, r3
 7832 0b08 7B68     		ldr	r3, [r7, #4]
 7833 0b0a 1344     		add	r3, r3, r2
 7834 0b0c 6E4A     		ldr	r2, .L418+32
 7835 0b0e 1446     		mov	r4, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 190


 7836 0b10 9E46     		mov	lr, r3
 7837 0b12 04F1200C 		add	ip, r4, #32
 7838              	.L388:
 7839 0b16 7546     		mov	r5, lr
 7840 0b18 2646     		mov	r6, r4
 7841 0b1a 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 7842 0b1c 2860     		str	r0, [r5]	@ unaligned
 7843 0b1e 6960     		str	r1, [r5, #4]	@ unaligned
 7844 0b20 AA60     		str	r2, [r5, #8]	@ unaligned
 7845 0b22 EB60     		str	r3, [r5, #12]	@ unaligned
 7846 0b24 1034     		adds	r4, r4, #16
 7847 0b26 0EF1100E 		add	lr, lr, #16
 7848 0b2a 6445     		cmp	r4, ip
 7849 0b2c F3D1     		bne	.L388
 7850 0b2e 7346     		mov	r3, lr
 7851 0b30 2246     		mov	r2, r4
 7852 0b32 1278     		ldrb	r2, [r2]
 7853 0b34 1A70     		strb	r2, [r3]
 7854 0b36 13E0     		b	.L389
 7855              	.L387:
1467:..\src/command_processing.c ****         else
1468:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: NO\r\n");
 7856              		.loc 1 1468 0
 7857 0b38 7868     		ldr	r0, [r7, #4]
 7858 0b3a FFF7FEFF 		bl	strlen
 7859 0b3e 0346     		mov	r3, r0
 7860 0b40 1A46     		mov	r2, r3
 7861 0b42 7B68     		ldr	r3, [r7, #4]
 7862 0b44 1344     		add	r3, r3, r2
 7863 0b46 614A     		ldr	r2, .L418+36
 7864 0b48 1C46     		mov	r4, r3
 7865 0b4a 1546     		mov	r5, r2
 7866 0b4c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7867 0b4e 2060     		str	r0, [r4]	@ unaligned
 7868 0b50 6160     		str	r1, [r4, #4]	@ unaligned
 7869 0b52 A260     		str	r2, [r4, #8]	@ unaligned
 7870 0b54 E360     		str	r3, [r4, #12]	@ unaligned
 7871 0b56 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7872 0b58 2061     		str	r0, [r4, #16]	@ unaligned
 7873 0b5a 6161     		str	r1, [r4, #20]	@ unaligned
 7874 0b5c A261     		str	r2, [r4, #24]	@ unaligned
 7875 0b5e E361     		str	r3, [r4, #28]	@ unaligned
 7876              	.L389:
1469:..\src/command_processing.c **** 
1470:..\src/command_processing.c ****         sprintf(str, "Motor-Handle Ratio: %d\r\n", (int)c_mem.motor_handle_ratio);
 7877              		.loc 1 1470 0
 7878 0b60 544B     		ldr	r3, .L418+12
 7879 0b62 93F97A30 		ldrsb	r3, [r3, #122]
 7880 0b66 1A46     		mov	r2, r3
 7881 0b68 07F10803 		add	r3, r7, #8
 7882 0b6c 5849     		ldr	r1, .L418+40
 7883 0b6e 1846     		mov	r0, r3
 7884 0b70 FFF7FEFF 		bl	sprintf
1471:..\src/command_processing.c ****         strcat(info_string, str);
 7885              		.loc 1 1471 0
 7886 0b74 07F10803 		add	r3, r7, #8
 7887 0b78 1946     		mov	r1, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 191


 7888 0b7a 7868     		ldr	r0, [r7, #4]
 7889 0b7c FFF7FEFF 		bl	strcat
1472:..\src/command_processing.c **** 
1473:..\src/command_processing.c ****         strcat(info_string, "Sensor resolution:\r\n");
 7890              		.loc 1 1473 0
 7891 0b80 7868     		ldr	r0, [r7, #4]
 7892 0b82 FFF7FEFF 		bl	strlen
 7893 0b86 0346     		mov	r3, r0
 7894 0b88 1A46     		mov	r2, r3
 7895 0b8a 7B68     		ldr	r3, [r7, #4]
 7896 0b8c 1344     		add	r3, r3, r2
 7897 0b8e 514A     		ldr	r2, .L418+44
 7898 0b90 1D46     		mov	r5, r3
 7899 0b92 1446     		mov	r4, r2
 7900 0b94 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 7901 0b96 2860     		str	r0, [r5]	@ unaligned
 7902 0b98 6960     		str	r1, [r5, #4]	@ unaligned
 7903 0b9a AA60     		str	r2, [r5, #8]	@ unaligned
 7904 0b9c EB60     		str	r3, [r5, #12]	@ unaligned
 7905 0b9e 2068     		ldr	r0, [r4]	@ unaligned
 7906 0ba0 2861     		str	r0, [r5, #16]	@ unaligned
 7907 0ba2 2379     		ldrb	r3, [r4, #4]
 7908 0ba4 2B75     		strb	r3, [r5, #20]
1474:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 7909              		.loc 1 1474 0
 7910 0ba6 0023     		movs	r3, #0
 7911 0ba8 FB66     		str	r3, [r7, #108]
 7912 0baa 21E0     		b	.L390
 7913              	.L391:
1475:..\src/command_processing.c ****             sprintf(str, "%d -> %d", (int) (i + 1), (int) c_mem.res[i]);
 7914              		.loc 1 1475 0 discriminator 3
 7915 0bac FB6E     		ldr	r3, [r7, #108]
 7916 0bae 591C     		adds	r1, r3, #1
 7917 0bb0 404A     		ldr	r2, .L418+12
 7918 0bb2 FB6E     		ldr	r3, [r7, #108]
 7919 0bb4 1344     		add	r3, r3, r2
 7920 0bb6 3733     		adds	r3, r3, #55
 7921 0bb8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7922 0bba 07F10800 		add	r0, r7, #8
 7923 0bbe 0A46     		mov	r2, r1
 7924 0bc0 4549     		ldr	r1, .L418+48
 7925 0bc2 FFF7FEFF 		bl	sprintf
1476:..\src/command_processing.c ****             strcat(info_string, str);
 7926              		.loc 1 1476 0 discriminator 3
 7927 0bc6 07F10803 		add	r3, r7, #8
 7928 0bca 1946     		mov	r1, r3
 7929 0bcc 7868     		ldr	r0, [r7, #4]
 7930 0bce FFF7FEFF 		bl	strcat
1477:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 7931              		.loc 1 1477 0 discriminator 3
 7932 0bd2 7868     		ldr	r0, [r7, #4]
 7933 0bd4 FFF7FEFF 		bl	strlen
 7934 0bd8 0346     		mov	r3, r0
 7935 0bda 1A46     		mov	r2, r3
 7936 0bdc 7B68     		ldr	r3, [r7, #4]
 7937 0bde 1344     		add	r3, r3, r2
 7938 0be0 3E4A     		ldr	r2, .L418+52
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 192


 7939 0be2 1188     		ldrh	r1, [r2]	@ unaligned
 7940 0be4 9278     		ldrb	r2, [r2, #2]
 7941 0be6 1980     		strh	r1, [r3]	@ unaligned
 7942 0be8 9A70     		strb	r2, [r3, #2]
1474:..\src/command_processing.c ****             sprintf(str, "%d -> %d", (int) (i + 1), (int) c_mem.res[i]);
 7943              		.loc 1 1474 0 discriminator 3
 7944 0bea FB6E     		ldr	r3, [r7, #108]
 7945 0bec 0133     		adds	r3, r3, #1
 7946 0bee FB66     		str	r3, [r7, #108]
 7947              	.L390:
1474:..\src/command_processing.c ****             sprintf(str, "%d -> %d", (int) (i + 1), (int) c_mem.res[i]);
 7948              		.loc 1 1474 0 is_stmt 0 discriminator 1
 7949 0bf0 FB6E     		ldr	r3, [r7, #108]
 7950 0bf2 022B     		cmp	r3, #2
 7951 0bf4 DADD     		ble	.L391
1478:..\src/command_processing.c ****         }
1479:..\src/command_processing.c **** 
1480:..\src/command_processing.c ****         strcat(info_string, "Measurement Offset:\r\n");
 7952              		.loc 1 1480 0 is_stmt 1
 7953 0bf6 7868     		ldr	r0, [r7, #4]
 7954 0bf8 FFF7FEFF 		bl	strlen
 7955 0bfc 0346     		mov	r3, r0
 7956 0bfe 1A46     		mov	r2, r3
 7957 0c00 7B68     		ldr	r3, [r7, #4]
 7958 0c02 1344     		add	r3, r3, r2
 7959 0c04 364A     		ldr	r2, .L418+56
 7960 0c06 1D46     		mov	r5, r3
 7961 0c08 1446     		mov	r4, r2
 7962 0c0a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 7963 0c0c 2860     		str	r0, [r5]	@ unaligned
 7964 0c0e 6960     		str	r1, [r5, #4]	@ unaligned
 7965 0c10 AA60     		str	r2, [r5, #8]	@ unaligned
 7966 0c12 EB60     		str	r3, [r5, #12]	@ unaligned
 7967 0c14 2068     		ldr	r0, [r4]	@ unaligned
 7968 0c16 2861     		str	r0, [r5, #16]	@ unaligned
 7969 0c18 A388     		ldrh	r3, [r4, #4]	@ unaligned
 7970 0c1a AB82     		strh	r3, [r5, #20]	@ unaligned
1481:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 7971              		.loc 1 1481 0
 7972 0c1c 0023     		movs	r3, #0
 7973 0c1e FB66     		str	r3, [r7, #108]
 7974 0c20 28E0     		b	.L392
 7975              	.L393:
1482:..\src/command_processing.c ****             sprintf(str, "%d -> %ld", (int) (i + 1), (int32) c_mem.m_off[i] >> c_mem.res[i]);
 7976              		.loc 1 1482 0 discriminator 3
 7977 0c22 FB6E     		ldr	r3, [r7, #108]
 7978 0c24 5C1C     		adds	r4, r3, #1
 7979 0c26 234A     		ldr	r2, .L418+12
 7980 0c28 FB6E     		ldr	r3, [r7, #108]
 7981 0c2a 0E33     		adds	r3, r3, #14
 7982 0c2c 9B00     		lsls	r3, r3, #2
 7983 0c2e 1344     		add	r3, r3, r2
 7984 0c30 5B68     		ldr	r3, [r3, #4]
 7985 0c32 2049     		ldr	r1, .L418+12
 7986 0c34 FA6E     		ldr	r2, [r7, #108]
 7987 0c36 0A44     		add	r2, r2, r1
 7988 0c38 3732     		adds	r2, r2, #55
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 193


 7989 0c3a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7990 0c3c 1341     		asrs	r3, r3, r2
 7991 0c3e 07F10800 		add	r0, r7, #8
 7992 0c42 2246     		mov	r2, r4
 7993 0c44 2749     		ldr	r1, .L418+60
 7994 0c46 FFF7FEFF 		bl	sprintf
1483:..\src/command_processing.c ****             strcat(info_string, str);
 7995              		.loc 1 1483 0 discriminator 3
 7996 0c4a 07F10803 		add	r3, r7, #8
 7997 0c4e 1946     		mov	r1, r3
 7998 0c50 7868     		ldr	r0, [r7, #4]
 7999 0c52 FFF7FEFF 		bl	strcat
1484:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 8000              		.loc 1 1484 0 discriminator 3
 8001 0c56 7868     		ldr	r0, [r7, #4]
 8002 0c58 FFF7FEFF 		bl	strlen
 8003 0c5c 0346     		mov	r3, r0
 8004 0c5e 1A46     		mov	r2, r3
 8005 0c60 7B68     		ldr	r3, [r7, #4]
 8006 0c62 1344     		add	r3, r3, r2
 8007 0c64 1D4A     		ldr	r2, .L418+52
 8008 0c66 1188     		ldrh	r1, [r2]	@ unaligned
 8009 0c68 9278     		ldrb	r2, [r2, #2]
 8010 0c6a 1980     		strh	r1, [r3]	@ unaligned
 8011 0c6c 9A70     		strb	r2, [r3, #2]
1481:..\src/command_processing.c ****             sprintf(str, "%d -> %ld", (int) (i + 1), (int32) c_mem.m_off[i] >> c_mem.res[i]);
 8012              		.loc 1 1481 0 discriminator 3
 8013 0c6e FB6E     		ldr	r3, [r7, #108]
 8014 0c70 0133     		adds	r3, r3, #1
 8015 0c72 FB66     		str	r3, [r7, #108]
 8016              	.L392:
1481:..\src/command_processing.c ****             sprintf(str, "%d -> %ld", (int) (i + 1), (int32) c_mem.m_off[i] >> c_mem.res[i]);
 8017              		.loc 1 1481 0 is_stmt 0 discriminator 1
 8018 0c74 FB6E     		ldr	r3, [r7, #108]
 8019 0c76 022B     		cmp	r3, #2
 8020 0c78 D3DD     		ble	.L393
1485:..\src/command_processing.c ****         }
1486:..\src/command_processing.c ****             
1487:..\src/command_processing.c ****         strcat(info_string, "Measurement Multiplier:\r\n");
 8021              		.loc 1 1487 0 is_stmt 1
 8022 0c7a 7868     		ldr	r0, [r7, #4]
 8023 0c7c FFF7FEFF 		bl	strlen
 8024 0c80 0346     		mov	r3, r0
 8025 0c82 1A46     		mov	r2, r3
 8026 0c84 7B68     		ldr	r3, [r7, #4]
 8027 0c86 1344     		add	r3, r3, r2
 8028 0c88 174A     		ldr	r2, .L418+64
 8029 0c8a 1D46     		mov	r5, r3
 8030 0c8c 1446     		mov	r4, r2
 8031 0c8e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 8032 0c90 2860     		str	r0, [r5]	@ unaligned
 8033 0c92 6960     		str	r1, [r5, #4]	@ unaligned
 8034 0c94 AA60     		str	r2, [r5, #8]	@ unaligned
 8035 0c96 EB60     		str	r3, [r5, #12]	@ unaligned
 8036 0c98 03CC     		ldmia	r4!, {r0, r1}
 8037 0c9a 2861     		str	r0, [r5, #16]	@ unaligned
 8038 0c9c 6961     		str	r1, [r5, #20]	@ unaligned
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 194


 8039 0c9e 2388     		ldrh	r3, [r4]	@ unaligned
 8040 0ca0 2B83     		strh	r3, [r5, #24]	@ unaligned
1488:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 8041              		.loc 1 1488 0
 8042 0ca2 0023     		movs	r3, #0
 8043 0ca4 FB66     		str	r3, [r7, #108]
 8044 0ca6 4AE0     		b	.L394
 8045              	.L419:
 8046              		.align	2
 8047              	.L418:
 8048 0ca8 C0080000 		.word	.LC96
 8049 0cac DC080000 		.word	.LC97
 8050 0cb0 F4080000 		.word	.LC98
 8051 0cb4 00000000 		.word	c_mem
 8052 0cb8 10090000 		.word	.LC99
 8053 0cbc 2C090000 		.word	.LC100
 8054 0cc0 40090000 		.word	.LC101
 8055 0cc4 58090000 		.word	.LC102
 8056 0cc8 80090000 		.word	.LC103
 8057 0ccc A4090000 		.word	.LC104
 8058 0cd0 C4090000 		.word	.LC105
 8059 0cd4 E0090000 		.word	.LC106
 8060 0cd8 4C070000 		.word	.LC80
 8061 0cdc 18060000 		.word	.LC59
 8062 0ce0 F8090000 		.word	.LC107
 8063 0ce4 100A0000 		.word	.LC108
 8064 0ce8 1C0A0000 		.word	.LC109
 8065              	.L395:
1489:..\src/command_processing.c ****             sprintf(str,"%d -> %f", (int)(i + 1), (float) c_mem.m_mult[i]);
 8066              		.loc 1 1489 0 discriminator 3
 8067 0cec FB6E     		ldr	r3, [r7, #108]
 8068 0cee 5D1C     		adds	r5, r3, #1
 8069 0cf0 B34A     		ldr	r2, .L420
 8070 0cf2 FB6E     		ldr	r3, [r7, #108]
 8071 0cf4 1233     		adds	r3, r3, #18
 8072 0cf6 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 8073 0cfa 1846     		mov	r0, r3
 8074 0cfc FFF7FEFF 		bl	__aeabi_f2d
 8075 0d00 0346     		mov	r3, r0
 8076 0d02 0C46     		mov	r4, r1
 8077 0d04 07F10800 		add	r0, r7, #8
 8078 0d08 CDE90034 		strd	r3, [sp]
 8079 0d0c 2A46     		mov	r2, r5
 8080 0d0e AD49     		ldr	r1, .L420+4
 8081 0d10 FFF7FEFF 		bl	sprintf
1490:..\src/command_processing.c ****             strcat(info_string, str);
 8082              		.loc 1 1490 0 discriminator 3
 8083 0d14 07F10803 		add	r3, r7, #8
 8084 0d18 1946     		mov	r1, r3
 8085 0d1a 7868     		ldr	r0, [r7, #4]
 8086 0d1c FFF7FEFF 		bl	strcat
1491:..\src/command_processing.c ****             strcat(info_string,"\r\n");
 8087              		.loc 1 1491 0 discriminator 3
 8088 0d20 7868     		ldr	r0, [r7, #4]
 8089 0d22 FFF7FEFF 		bl	strlen
 8090 0d26 0346     		mov	r3, r0
 8091 0d28 1A46     		mov	r2, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 195


 8092 0d2a 7B68     		ldr	r3, [r7, #4]
 8093 0d2c 1344     		add	r3, r3, r2
 8094 0d2e A64A     		ldr	r2, .L420+8
 8095 0d30 1188     		ldrh	r1, [r2]	@ unaligned
 8096 0d32 9278     		ldrb	r2, [r2, #2]
 8097 0d34 1980     		strh	r1, [r3]	@ unaligned
 8098 0d36 9A70     		strb	r2, [r3, #2]
1488:..\src/command_processing.c ****             sprintf(str,"%d -> %f", (int)(i + 1), (float) c_mem.m_mult[i]);
 8099              		.loc 1 1488 0 discriminator 3
 8100 0d38 FB6E     		ldr	r3, [r7, #108]
 8101 0d3a 0133     		adds	r3, r3, #1
 8102 0d3c FB66     		str	r3, [r7, #108]
 8103              	.L394:
1488:..\src/command_processing.c ****             sprintf(str,"%d -> %f", (int)(i + 1), (float) c_mem.m_mult[i]);
 8104              		.loc 1 1488 0 is_stmt 0 discriminator 1
 8105 0d3e FB6E     		ldr	r3, [r7, #108]
 8106 0d40 022B     		cmp	r3, #2
 8107 0d42 D3DD     		ble	.L395
1492:..\src/command_processing.c ****         }
1493:..\src/command_processing.c ****         
1494:..\src/command_processing.c ****         strcat(info_string, "Current lookup table:\r\n");
 8108              		.loc 1 1494 0 is_stmt 1
 8109 0d44 7868     		ldr	r0, [r7, #4]
 8110 0d46 FFF7FEFF 		bl	strlen
 8111 0d4a 0346     		mov	r3, r0
 8112 0d4c 1A46     		mov	r2, r3
 8113 0d4e 7B68     		ldr	r3, [r7, #4]
 8114 0d50 1344     		add	r3, r3, r2
 8115 0d52 9E4A     		ldr	r2, .L420+12
 8116 0d54 1D46     		mov	r5, r3
 8117 0d56 1446     		mov	r4, r2
 8118 0d58 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 8119 0d5a 2860     		str	r0, [r5]	@ unaligned
 8120 0d5c 6960     		str	r1, [r5, #4]	@ unaligned
 8121 0d5e AA60     		str	r2, [r5, #8]	@ unaligned
 8122 0d60 EB60     		str	r3, [r5, #12]	@ unaligned
 8123 0d62 03CC     		ldmia	r4!, {r0, r1}
 8124 0d64 2861     		str	r0, [r5, #16]	@ unaligned
 8125 0d66 6961     		str	r1, [r5, #20]	@ unaligned
1495:..\src/command_processing.c ****         sprintf(str, "p[0] - p[2]: %f, %f, %f\n", c_mem.curr_lookup[0], c_mem.curr_lookup[1], c_mem
 8126              		.loc 1 1495 0
 8127 0d68 954B     		ldr	r3, .L420
 8128 0d6a DB6F     		ldr	r3, [r3, #124]	@ float
 8129 0d6c 1846     		mov	r0, r3
 8130 0d6e FFF7FEFF 		bl	__aeabi_f2d
 8131 0d72 8046     		mov	r8, r0
 8132 0d74 8946     		mov	r9, r1
 8133 0d76 924B     		ldr	r3, .L420
 8134 0d78 D3F88030 		ldr	r3, [r3, #128]	@ float
 8135 0d7c 1846     		mov	r0, r3
 8136 0d7e FFF7FEFF 		bl	__aeabi_f2d
 8137 0d82 0446     		mov	r4, r0
 8138 0d84 0D46     		mov	r5, r1
 8139 0d86 8E4B     		ldr	r3, .L420
 8140 0d88 D3F88430 		ldr	r3, [r3, #132]	@ float
 8141 0d8c 1846     		mov	r0, r3
 8142 0d8e FFF7FEFF 		bl	__aeabi_f2d
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 196


 8143 0d92 0246     		mov	r2, r0
 8144 0d94 0B46     		mov	r3, r1
 8145 0d96 07F10800 		add	r0, r7, #8
 8146 0d9a CDE90223 		strd	r2, [sp, #8]
 8147 0d9e CDE90045 		strd	r4, [sp]
 8148 0da2 4246     		mov	r2, r8
 8149 0da4 4B46     		mov	r3, r9
 8150 0da6 8A49     		ldr	r1, .L420+16
 8151 0da8 FFF7FEFF 		bl	sprintf
1496:..\src/command_processing.c ****         strcat(info_string, str);
 8152              		.loc 1 1496 0
 8153 0dac 07F10803 		add	r3, r7, #8
 8154 0db0 1946     		mov	r1, r3
 8155 0db2 7868     		ldr	r0, [r7, #4]
 8156 0db4 FFF7FEFF 		bl	strcat
1497:..\src/command_processing.c ****         sprintf(str, "p[3] - p[5]: %f, %f, %f\n", c_mem.curr_lookup[3], c_mem.curr_lookup[4], c_mem
 8157              		.loc 1 1497 0
 8158 0db8 814B     		ldr	r3, .L420
 8159 0dba D3F88830 		ldr	r3, [r3, #136]	@ float
 8160 0dbe 1846     		mov	r0, r3
 8161 0dc0 FFF7FEFF 		bl	__aeabi_f2d
 8162 0dc4 8046     		mov	r8, r0
 8163 0dc6 8946     		mov	r9, r1
 8164 0dc8 7D4B     		ldr	r3, .L420
 8165 0dca D3F88C30 		ldr	r3, [r3, #140]	@ float
 8166 0dce 1846     		mov	r0, r3
 8167 0dd0 FFF7FEFF 		bl	__aeabi_f2d
 8168 0dd4 0446     		mov	r4, r0
 8169 0dd6 0D46     		mov	r5, r1
 8170 0dd8 794B     		ldr	r3, .L420
 8171 0dda D3F89030 		ldr	r3, [r3, #144]	@ float
 8172 0dde 1846     		mov	r0, r3
 8173 0de0 FFF7FEFF 		bl	__aeabi_f2d
 8174 0de4 0246     		mov	r2, r0
 8175 0de6 0B46     		mov	r3, r1
 8176 0de8 07F10800 		add	r0, r7, #8
 8177 0dec CDE90223 		strd	r2, [sp, #8]
 8178 0df0 CDE90045 		strd	r4, [sp]
 8179 0df4 4246     		mov	r2, r8
 8180 0df6 4B46     		mov	r3, r9
 8181 0df8 7649     		ldr	r1, .L420+20
 8182 0dfa FFF7FEFF 		bl	sprintf
1498:..\src/command_processing.c ****         strcat(info_string, str);
 8183              		.loc 1 1498 0
 8184 0dfe 07F10803 		add	r3, r7, #8
 8185 0e02 1946     		mov	r1, r3
 8186 0e04 7868     		ldr	r0, [r7, #4]
 8187 0e06 FFF7FEFF 		bl	strcat
1499:..\src/command_processing.c ****         strcat(info_string,"\r\n");        
 8188              		.loc 1 1499 0
 8189 0e0a 7868     		ldr	r0, [r7, #4]
 8190 0e0c FFF7FEFF 		bl	strlen
 8191 0e10 0346     		mov	r3, r0
 8192 0e12 1A46     		mov	r2, r3
 8193 0e14 7B68     		ldr	r3, [r7, #4]
 8194 0e16 1344     		add	r3, r3, r2
 8195 0e18 6B4A     		ldr	r2, .L420+8
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 197


 8196 0e1a 1188     		ldrh	r1, [r2]	@ unaligned
 8197 0e1c 9278     		ldrb	r2, [r2, #2]
 8198 0e1e 1980     		strh	r1, [r3]	@ unaligned
 8199 0e20 9A70     		strb	r2, [r3, #2]
1500:..\src/command_processing.c **** 
1501:..\src/command_processing.c ****         sprintf(str, "Position limit active: %d", (int)g_mem.pos_lim_flag);
 8200              		.loc 1 1501 0
 8201 0e22 6D4B     		ldr	r3, .L420+24
 8202 0e24 93F85430 		ldrb	r3, [r3, #84]	@ zero_extendqisi2
 8203 0e28 1A46     		mov	r2, r3
 8204 0e2a 07F10803 		add	r3, r7, #8
 8205 0e2e 6B49     		ldr	r1, .L420+28
 8206 0e30 1846     		mov	r0, r3
 8207 0e32 FFF7FEFF 		bl	sprintf
1502:..\src/command_processing.c ****         strcat(info_string, str);
 8208              		.loc 1 1502 0
 8209 0e36 07F10803 		add	r3, r7, #8
 8210 0e3a 1946     		mov	r1, r3
 8211 0e3c 7868     		ldr	r0, [r7, #4]
 8212 0e3e FFF7FEFF 		bl	strcat
1503:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 8213              		.loc 1 1503 0
 8214 0e42 7868     		ldr	r0, [r7, #4]
 8215 0e44 FFF7FEFF 		bl	strlen
 8216 0e48 0346     		mov	r3, r0
 8217 0e4a 1A46     		mov	r2, r3
 8218 0e4c 7B68     		ldr	r3, [r7, #4]
 8219 0e4e 1344     		add	r3, r3, r2
 8220 0e50 5D4A     		ldr	r2, .L420+8
 8221 0e52 1188     		ldrh	r1, [r2]	@ unaligned
 8222 0e54 9278     		ldrb	r2, [r2, #2]
 8223 0e56 1980     		strh	r1, [r3]	@ unaligned
 8224 0e58 9A70     		strb	r2, [r3, #2]
1504:..\src/command_processing.c **** 
1505:..\src/command_processing.c ****         sprintf(str, "Position limit motor: inf -> %ld  ", (int32)g_mem.pos_lim_inf >> g_mem.res[0]
 8225              		.loc 1 1505 0
 8226 0e5a 5F4B     		ldr	r3, .L420+24
 8227 0e5c 9B6D     		ldr	r3, [r3, #88]
 8228 0e5e 5E4A     		ldr	r2, .L420+24
 8229 0e60 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 8230 0e64 43FA02F2 		asr	r2, r3, r2
 8231 0e68 07F10803 		add	r3, r7, #8
 8232 0e6c 5C49     		ldr	r1, .L420+32
 8233 0e6e 1846     		mov	r0, r3
 8234 0e70 FFF7FEFF 		bl	sprintf
1506:..\src/command_processing.c ****         strcat(info_string, str);
 8235              		.loc 1 1506 0
 8236 0e74 07F10803 		add	r3, r7, #8
 8237 0e78 1946     		mov	r1, r3
 8238 0e7a 7868     		ldr	r0, [r7, #4]
 8239 0e7c FFF7FEFF 		bl	strcat
1507:..\src/command_processing.c ****         sprintf(str, "sup -> %ld\r\n", (int32)g_mem.pos_lim_sup >> g_mem.res[0]);
 8240              		.loc 1 1507 0
 8241 0e80 554B     		ldr	r3, .L420+24
 8242 0e82 DB6D     		ldr	r3, [r3, #92]
 8243 0e84 544A     		ldr	r2, .L420+24
 8244 0e86 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 198


 8245 0e8a 43FA02F2 		asr	r2, r3, r2
 8246 0e8e 07F10803 		add	r3, r7, #8
 8247 0e92 5449     		ldr	r1, .L420+36
 8248 0e94 1846     		mov	r0, r3
 8249 0e96 FFF7FEFF 		bl	sprintf
1508:..\src/command_processing.c ****         strcat(info_string, str);
 8250              		.loc 1 1508 0
 8251 0e9a 07F10803 		add	r3, r7, #8
 8252 0e9e 1946     		mov	r1, r3
 8253 0ea0 7868     		ldr	r0, [r7, #4]
 8254 0ea2 FFF7FEFF 		bl	strcat
1509:..\src/command_processing.c **** 
1510:..\src/command_processing.c ****         sprintf(str, "Max step pos and neg: %d %d", (int)g_mem.max_step_pos, (int)g_mem.max_step_ne
 8255              		.loc 1 1510 0
 8256 0ea6 4C4B     		ldr	r3, .L420+24
 8257 0ea8 5A6E     		ldr	r2, [r3, #100]
 8258 0eaa 4B4B     		ldr	r3, .L420+24
 8259 0eac 1B6E     		ldr	r3, [r3, #96]
 8260 0eae 07F10800 		add	r0, r7, #8
 8261 0eb2 4D49     		ldr	r1, .L420+40
 8262 0eb4 FFF7FEFF 		bl	sprintf
1511:..\src/command_processing.c ****         strcat(info_string, str);
 8263              		.loc 1 1511 0
 8264 0eb8 07F10803 		add	r3, r7, #8
 8265 0ebc 1946     		mov	r1, r3
 8266 0ebe 7868     		ldr	r0, [r7, #4]
 8267 0ec0 FFF7FEFF 		bl	strcat
1512:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 8268              		.loc 1 1512 0
 8269 0ec4 7868     		ldr	r0, [r7, #4]
 8270 0ec6 FFF7FEFF 		bl	strlen
 8271 0eca 0346     		mov	r3, r0
 8272 0ecc 1A46     		mov	r2, r3
 8273 0ece 7B68     		ldr	r3, [r7, #4]
 8274 0ed0 1344     		add	r3, r3, r2
 8275 0ed2 3D4A     		ldr	r2, .L420+8
 8276 0ed4 1188     		ldrh	r1, [r2]	@ unaligned
 8277 0ed6 9278     		ldrb	r2, [r2, #2]
 8278 0ed8 1980     		strh	r1, [r3]	@ unaligned
 8279 0eda 9A70     		strb	r2, [r3, #2]
1513:..\src/command_processing.c **** 
1514:..\src/command_processing.c ****         sprintf(str, "Current limit: %d", (int)g_mem.current_limit);
 8280              		.loc 1 1514 0
 8281 0edc 3E4B     		ldr	r3, .L420+24
 8282 0ede B3F96830 		ldrsh	r3, [r3, #104]
 8283 0ee2 1A46     		mov	r2, r3
 8284 0ee4 07F10803 		add	r3, r7, #8
 8285 0ee8 4049     		ldr	r1, .L420+44
 8286 0eea 1846     		mov	r0, r3
 8287 0eec FFF7FEFF 		bl	sprintf
1515:..\src/command_processing.c ****         strcat(info_string, str);
 8288              		.loc 1 1515 0
 8289 0ef0 07F10803 		add	r3, r7, #8
 8290 0ef4 1946     		mov	r1, r3
 8291 0ef6 7868     		ldr	r0, [r7, #4]
 8292 0ef8 FFF7FEFF 		bl	strcat
1516:..\src/command_processing.c ****         strcat(info_string, "\r\n");
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 199


 8293              		.loc 1 1516 0
 8294 0efc 7868     		ldr	r0, [r7, #4]
 8295 0efe FFF7FEFF 		bl	strlen
 8296 0f02 0346     		mov	r3, r0
 8297 0f04 1A46     		mov	r2, r3
 8298 0f06 7B68     		ldr	r3, [r7, #4]
 8299 0f08 1344     		add	r3, r3, r2
 8300 0f0a 2F4A     		ldr	r2, .L420+8
 8301 0f0c 1188     		ldrh	r1, [r2]	@ unaligned
 8302 0f0e 9278     		ldrb	r2, [r2, #2]
 8303 0f10 1980     		strh	r1, [r3]	@ unaligned
 8304 0f12 9A70     		strb	r2, [r3, #2]
1517:..\src/command_processing.c **** 
1518:..\src/command_processing.c ****         sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", g_mem.emg_threshold[0], g_mem.emg_thresho
 8305              		.loc 1 1518 0
 8306 0f14 304B     		ldr	r3, .L420+24
 8307 0f16 B3F86A30 		ldrh	r3, [r3, #106]
 8308 0f1a 1A46     		mov	r2, r3
 8309 0f1c 2E4B     		ldr	r3, .L420+24
 8310 0f1e B3F86C30 		ldrh	r3, [r3, #108]
 8311 0f22 07F10800 		add	r0, r7, #8
 8312 0f26 3249     		ldr	r1, .L420+48
 8313 0f28 FFF7FEFF 		bl	sprintf
1519:..\src/command_processing.c ****         strcat(info_string, str);
 8314              		.loc 1 1519 0
 8315 0f2c 07F10803 		add	r3, r7, #8
 8316 0f30 1946     		mov	r1, r3
 8317 0f32 7868     		ldr	r0, [r7, #4]
 8318 0f34 FFF7FEFF 		bl	strcat
1520:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 8319              		.loc 1 1520 0
 8320 0f38 7868     		ldr	r0, [r7, #4]
 8321 0f3a FFF7FEFF 		bl	strlen
 8322 0f3e 0346     		mov	r3, r0
 8323 0f40 1A46     		mov	r2, r3
 8324 0f42 7B68     		ldr	r3, [r7, #4]
 8325 0f44 1344     		add	r3, r3, r2
 8326 0f46 204A     		ldr	r2, .L420+8
 8327 0f48 1188     		ldrh	r1, [r2]	@ unaligned
 8328 0f4a 9278     		ldrb	r2, [r2, #2]
 8329 0f4c 1980     		strh	r1, [r3]	@ unaligned
 8330 0f4e 9A70     		strb	r2, [r3, #2]
1521:..\src/command_processing.c **** 
1522:..\src/command_processing.c ****         sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", g_mem.emg_max_value[0], g_mem.emg_max_v
 8331              		.loc 1 1522 0
 8332 0f50 214B     		ldr	r3, .L420+24
 8333 0f52 1A6F     		ldr	r2, [r3, #112]
 8334 0f54 204B     		ldr	r3, .L420+24
 8335 0f56 5B6F     		ldr	r3, [r3, #116]
 8336 0f58 07F10800 		add	r0, r7, #8
 8337 0f5c 2549     		ldr	r1, .L420+52
 8338 0f5e FFF7FEFF 		bl	sprintf
1523:..\src/command_processing.c ****         strcat(info_string, str);
 8339              		.loc 1 1523 0
 8340 0f62 07F10803 		add	r3, r7, #8
 8341 0f66 1946     		mov	r1, r3
 8342 0f68 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 200


 8343 0f6a FFF7FEFF 		bl	strcat
1524:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 8344              		.loc 1 1524 0
 8345 0f6e 7868     		ldr	r0, [r7, #4]
 8346 0f70 FFF7FEFF 		bl	strlen
 8347 0f74 0346     		mov	r3, r0
 8348 0f76 1A46     		mov	r2, r3
 8349 0f78 7B68     		ldr	r3, [r7, #4]
 8350 0f7a 1344     		add	r3, r3, r2
 8351 0f7c 124A     		ldr	r2, .L420+8
 8352 0f7e 1188     		ldrh	r1, [r2]	@ unaligned
 8353 0f80 9278     		ldrb	r2, [r2, #2]
 8354 0f82 1980     		strh	r1, [r3]	@ unaligned
 8355 0f84 9A70     		strb	r2, [r3, #2]
1525:..\src/command_processing.c **** 
1526:..\src/command_processing.c ****         if (g_mem.emg_calibration_flag)
 8356              		.loc 1 1526 0
 8357 0f86 144B     		ldr	r3, .L420+24
 8358 0f88 93F86E30 		ldrb	r3, [r3, #110]	@ zero_extendqisi2
 8359 0f8c 002B     		cmp	r3, #0
 8360 0f8e 35D0     		beq	.L396
1527:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: YES\r\n");
 8361              		.loc 1 1527 0
 8362 0f90 7868     		ldr	r0, [r7, #4]
 8363 0f92 FFF7FEFF 		bl	strlen
 8364 0f96 0346     		mov	r3, r0
 8365 0f98 1A46     		mov	r2, r3
 8366 0f9a 7B68     		ldr	r3, [r7, #4]
 8367 0f9c 1344     		add	r3, r3, r2
 8368 0f9e 164A     		ldr	r2, .L420+56
 8369 0fa0 1D46     		mov	r5, r3
 8370 0fa2 1446     		mov	r4, r2
 8371 0fa4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 8372 0fa6 2860     		str	r0, [r5]	@ unaligned
 8373 0fa8 6960     		str	r1, [r5, #4]	@ unaligned
 8374 0faa AA60     		str	r2, [r5, #8]	@ unaligned
 8375 0fac EB60     		str	r3, [r5, #12]	@ unaligned
 8376 0fae 03CC     		ldmia	r4!, {r0, r1}
 8377 0fb0 2861     		str	r0, [r5, #16]	@ unaligned
 8378 0fb2 6961     		str	r1, [r5, #20]	@ unaligned
 8379 0fb4 2388     		ldrh	r3, [r4]	@ unaligned
 8380 0fb6 A278     		ldrb	r2, [r4, #2]
 8381 0fb8 2B83     		strh	r3, [r5, #24]	@ unaligned
 8382 0fba 1346     		mov	r3, r2
 8383 0fbc AB76     		strb	r3, [r5, #26]
 8384 0fbe 31E0     		b	.L397
 8385              	.L421:
 8386              		.align	2
 8387              	.L420:
 8388 0fc0 00000000 		.word	c_mem
 8389 0fc4 380A0000 		.word	.LC110
 8390 0fc8 18060000 		.word	.LC59
 8391 0fcc 440A0000 		.word	.LC111
 8392 0fd0 5C0A0000 		.word	.LC112
 8393 0fd4 780A0000 		.word	.LC113
 8394 0fd8 00000000 		.word	g_mem
 8395 0fdc 940A0000 		.word	.LC114
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 201


 8396 0fe0 B00A0000 		.word	.LC115
 8397 0fe4 D40A0000 		.word	.LC116
 8398 0fe8 E40A0000 		.word	.LC117
 8399 0fec 000B0000 		.word	.LC118
 8400 0ff0 140B0000 		.word	.LC119
 8401 0ff4 380B0000 		.word	.LC120
 8402 0ff8 5C0B0000 		.word	.LC121
 8403              	.L396:
1528:..\src/command_processing.c ****         else
1529:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: NO\r\n");
 8404              		.loc 1 1529 0
 8405 0ffc 7868     		ldr	r0, [r7, #4]
 8406 0ffe FFF7FEFF 		bl	strlen
 8407 1002 0346     		mov	r3, r0
 8408 1004 1A46     		mov	r2, r3
 8409 1006 7B68     		ldr	r3, [r7, #4]
 8410 1008 1344     		add	r3, r3, r2
 8411 100a AF4A     		ldr	r2, .L422
 8412 100c 1D46     		mov	r5, r3
 8413 100e 1446     		mov	r4, r2
 8414 1010 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 8415 1012 2860     		str	r0, [r5]	@ unaligned
 8416 1014 6960     		str	r1, [r5, #4]	@ unaligned
 8417 1016 AA60     		str	r2, [r5, #8]	@ unaligned
 8418 1018 EB60     		str	r3, [r5, #12]	@ unaligned
 8419 101a 03CC     		ldmia	r4!, {r0, r1}
 8420 101c 2861     		str	r0, [r5, #16]	@ unaligned
 8421 101e 6961     		str	r1, [r5, #20]	@ unaligned
 8422 1020 2388     		ldrh	r3, [r4]	@ unaligned
 8423 1022 2B83     		strh	r3, [r5, #24]	@ unaligned
 8424              	.L397:
1530:..\src/command_processing.c **** 
1531:..\src/command_processing.c ****         sprintf(str, "EMG max speed: %d", (int)g_mem.emg_speed);
 8425              		.loc 1 1531 0
 8426 1024 A94B     		ldr	r3, .L422+4
 8427 1026 93F87830 		ldrb	r3, [r3, #120]	@ zero_extendqisi2
 8428 102a 1A46     		mov	r2, r3
 8429 102c 07F10803 		add	r3, r7, #8
 8430 1030 A749     		ldr	r1, .L422+8
 8431 1032 1846     		mov	r0, r3
 8432 1034 FFF7FEFF 		bl	sprintf
1532:..\src/command_processing.c ****         strcat(info_string, str);
 8433              		.loc 1 1532 0
 8434 1038 07F10803 		add	r3, r7, #8
 8435 103c 1946     		mov	r1, r3
 8436 103e 7868     		ldr	r0, [r7, #4]
 8437 1040 FFF7FEFF 		bl	strcat
1533:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 8438              		.loc 1 1533 0
 8439 1044 7868     		ldr	r0, [r7, #4]
 8440 1046 FFF7FEFF 		bl	strlen
 8441 104a 0346     		mov	r3, r0
 8442 104c 1A46     		mov	r2, r3
 8443 104e 7B68     		ldr	r3, [r7, #4]
 8444 1050 1344     		add	r3, r3, r2
 8445 1052 A04A     		ldr	r2, .L422+12
 8446 1054 1188     		ldrh	r1, [r2]	@ unaligned
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 202


 8447 1056 9278     		ldrb	r2, [r2, #2]
 8448 1058 1980     		strh	r1, [r3]	@ unaligned
 8449 105a 9A70     		strb	r2, [r3, #2]
1534:..\src/command_processing.c **** 
1535:..\src/command_processing.c **** 		sprintf(str, "Rest time delay (ms): %f", (float)g_mem.rest_delay);
 8450              		.loc 1 1535 0
 8451 105c 9B4B     		ldr	r3, .L422+4
 8452 105e D3F89C30 		ldr	r3, [r3, #156]	@ float
 8453 1062 1846     		mov	r0, r3
 8454 1064 FFF7FEFF 		bl	__aeabi_f2d
 8455 1068 0346     		mov	r3, r0
 8456 106a 0C46     		mov	r4, r1
 8457 106c 07F10800 		add	r0, r7, #8
 8458 1070 1A46     		mov	r2, r3
 8459 1072 2346     		mov	r3, r4
 8460 1074 9849     		ldr	r1, .L422+16
 8461 1076 FFF7FEFF 		bl	sprintf
1536:..\src/command_processing.c ****         strcat(info_string, str);
 8462              		.loc 1 1536 0
 8463 107a 07F10803 		add	r3, r7, #8
 8464 107e 1946     		mov	r1, r3
 8465 1080 7868     		ldr	r0, [r7, #4]
 8466 1082 FFF7FEFF 		bl	strcat
1537:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 8467              		.loc 1 1537 0
 8468 1086 7868     		ldr	r0, [r7, #4]
 8469 1088 FFF7FEFF 		bl	strlen
 8470 108c 0346     		mov	r3, r0
 8471 108e 1A46     		mov	r2, r3
 8472 1090 7B68     		ldr	r3, [r7, #4]
 8473 1092 1344     		add	r3, r3, r2
 8474 1094 8F4A     		ldr	r2, .L422+12
 8475 1096 1188     		ldrh	r1, [r2]	@ unaligned
 8476 1098 9278     		ldrb	r2, [r2, #2]
 8477 109a 1980     		strh	r1, [r3]	@ unaligned
 8478 109c 9A70     		strb	r2, [r3, #2]
1538:..\src/command_processing.c ****         
1539:..\src/command_processing.c ****         sprintf(str, "Rest velocity closure (ticks/sec): %f", (float)(g_mem.rest_vel*1000));
 8479              		.loc 1 1539 0
 8480 109e 8B4B     		ldr	r3, .L422+4
 8481 10a0 D3F8A030 		ldr	r3, [r3, #160]	@ float
 8482 10a4 8D49     		ldr	r1, .L422+20
 8483 10a6 1846     		mov	r0, r3
 8484 10a8 FFF7FEFF 		bl	__aeabi_fmul
 8485 10ac 0346     		mov	r3, r0
 8486 10ae 1846     		mov	r0, r3
 8487 10b0 FFF7FEFF 		bl	__aeabi_f2d
 8488 10b4 0346     		mov	r3, r0
 8489 10b6 0C46     		mov	r4, r1
 8490 10b8 07F10800 		add	r0, r7, #8
 8491 10bc 1A46     		mov	r2, r3
 8492 10be 2346     		mov	r3, r4
 8493 10c0 8749     		ldr	r1, .L422+24
 8494 10c2 FFF7FEFF 		bl	sprintf
1540:..\src/command_processing.c ****         strcat(info_string, str);
 8495              		.loc 1 1540 0
 8496 10c6 07F10803 		add	r3, r7, #8
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 203


 8497 10ca 1946     		mov	r1, r3
 8498 10cc 7868     		ldr	r0, [r7, #4]
 8499 10ce FFF7FEFF 		bl	strcat
1541:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 8500              		.loc 1 1541 0
 8501 10d2 7868     		ldr	r0, [r7, #4]
 8502 10d4 FFF7FEFF 		bl	strlen
 8503 10d8 0346     		mov	r3, r0
 8504 10da 1A46     		mov	r2, r3
 8505 10dc 7B68     		ldr	r3, [r7, #4]
 8506 10de 1344     		add	r3, r3, r2
 8507 10e0 7C4A     		ldr	r2, .L422+12
 8508 10e2 1188     		ldrh	r1, [r2]	@ unaligned
 8509 10e4 9278     		ldrb	r2, [r2, #2]
 8510 10e6 1980     		strh	r1, [r3]	@ unaligned
 8511 10e8 9A70     		strb	r2, [r3, #2]
1542:..\src/command_processing.c ****         
1543:..\src/command_processing.c ****         sprintf(str, "Rest position: %d", (int)(g_mem.rest_pos >> c_mem.res[0]));
 8512              		.loc 1 1543 0
 8513 10ea 784B     		ldr	r3, .L422+4
 8514 10ec D3F89830 		ldr	r3, [r3, #152]
 8515 10f0 7C4A     		ldr	r2, .L422+28
 8516 10f2 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 8517 10f6 43FA02F2 		asr	r2, r3, r2
 8518 10fa 07F10803 		add	r3, r7, #8
 8519 10fe 7A49     		ldr	r1, .L422+32
 8520 1100 1846     		mov	r0, r3
 8521 1102 FFF7FEFF 		bl	sprintf
1544:..\src/command_processing.c ****         strcat(info_string, str);
 8522              		.loc 1 1544 0
 8523 1106 07F10803 		add	r3, r7, #8
 8524 110a 1946     		mov	r1, r3
 8525 110c 7868     		ldr	r0, [r7, #4]
 8526 110e FFF7FEFF 		bl	strcat
1545:..\src/command_processing.c ****         strcat(info_string, "\r\n");   
 8527              		.loc 1 1545 0
 8528 1112 7868     		ldr	r0, [r7, #4]
 8529 1114 FFF7FEFF 		bl	strlen
 8530 1118 0346     		mov	r3, r0
 8531 111a 1A46     		mov	r2, r3
 8532 111c 7B68     		ldr	r3, [r7, #4]
 8533 111e 1344     		add	r3, r3, r2
 8534 1120 6C4A     		ldr	r2, .L422+12
 8535 1122 1188     		ldrh	r1, [r2]	@ unaligned
 8536 1124 9278     		ldrb	r2, [r2, #2]
 8537 1126 1980     		strh	r1, [r3]	@ unaligned
 8538 1128 9A70     		strb	r2, [r3, #2]
1546:..\src/command_processing.c ****         
1547:..\src/command_processing.c ****         sprintf(str, "Rest ratio: %f", (float)(g_mem.rest_ratio));
 8539              		.loc 1 1547 0
 8540 112a 684B     		ldr	r3, .L422+4
 8541 112c D3F8A430 		ldr	r3, [r3, #164]	@ float
 8542 1130 1846     		mov	r0, r3
 8543 1132 FFF7FEFF 		bl	__aeabi_f2d
 8544 1136 0346     		mov	r3, r0
 8545 1138 0C46     		mov	r4, r1
 8546 113a 07F10800 		add	r0, r7, #8
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 204


 8547 113e 1A46     		mov	r2, r3
 8548 1140 2346     		mov	r3, r4
 8549 1142 6A49     		ldr	r1, .L422+36
 8550 1144 FFF7FEFF 		bl	sprintf
1548:..\src/command_processing.c ****         strcat(info_string, str);
 8551              		.loc 1 1548 0
 8552 1148 07F10803 		add	r3, r7, #8
 8553 114c 1946     		mov	r1, r3
 8554 114e 7868     		ldr	r0, [r7, #4]
 8555 1150 FFF7FEFF 		bl	strcat
1549:..\src/command_processing.c ****         strcat(info_string, "\r\n");          
 8556              		.loc 1 1549 0
 8557 1154 7868     		ldr	r0, [r7, #4]
 8558 1156 FFF7FEFF 		bl	strlen
 8559 115a 0346     		mov	r3, r0
 8560 115c 1A46     		mov	r2, r3
 8561 115e 7B68     		ldr	r3, [r7, #4]
 8562 1160 1344     		add	r3, r3, r2
 8563 1162 5C4A     		ldr	r2, .L422+12
 8564 1164 1188     		ldrh	r1, [r2]	@ unaligned
 8565 1166 9278     		ldrb	r2, [r2, #2]
 8566 1168 1980     		strh	r1, [r3]	@ unaligned
 8567 116a 9A70     		strb	r2, [r3, #2]
1550:..\src/command_processing.c **** 
1551:..\src/command_processing.c ****         prepare_counter_info(info_string);
 8568              		.loc 1 1551 0
 8569 116c 7868     		ldr	r0, [r7, #4]
 8570 116e FFF7FEFF 		bl	prepare_counter_info
1552:..\src/command_processing.c **** 
1553:..\src/command_processing.c ****         sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 8571              		.loc 1 1553 0
 8572 1172 5F4B     		ldr	r3, .L422+40
 8573 1174 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8574 1176 1A46     		mov	r2, r3
 8575 1178 07F10803 		add	r3, r7, #8
 8576 117c 5D49     		ldr	r1, .L422+44
 8577 117e 1846     		mov	r0, r3
 8578 1180 FFF7FEFF 		bl	sprintf
1554:..\src/command_processing.c ****         strcat(info_string, str);
 8579              		.loc 1 1554 0
 8580 1184 07F10803 		add	r3, r7, #8
 8581 1188 1946     		mov	r1, r3
 8582 118a 7868     		ldr	r0, [r7, #4]
 8583 118c FFF7FEFF 		bl	strcat
1555:..\src/command_processing.c ****         
1556:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 8584              		.loc 1 1556 0
 8585 1190 7868     		ldr	r0, [r7, #4]
 8586 1192 FFF7FEFF 		bl	strlen
 8587 1196 0346     		mov	r3, r0
 8588 1198 1A46     		mov	r2, r3
 8589 119a 7B68     		ldr	r3, [r7, #4]
 8590 119c 1344     		add	r3, r3, r2
 8591 119e 4D4A     		ldr	r2, .L422+12
 8592 11a0 1188     		ldrh	r1, [r2]	@ unaligned
 8593 11a2 9278     		ldrb	r2, [r2, #2]
 8594 11a4 1980     		strh	r1, [r3]	@ unaligned
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 205


 8595 11a6 9A70     		strb	r2, [r3, #2]
1557:..\src/command_processing.c ****         
1558:..\src/command_processing.c ****         strcat(info_string, "IMUs CONFIGURATION\r\n");
 8596              		.loc 1 1558 0
 8597 11a8 7868     		ldr	r0, [r7, #4]
 8598 11aa FFF7FEFF 		bl	strlen
 8599 11ae 0346     		mov	r3, r0
 8600 11b0 1A46     		mov	r2, r3
 8601 11b2 7B68     		ldr	r3, [r7, #4]
 8602 11b4 1344     		add	r3, r3, r2
 8603 11b6 504A     		ldr	r2, .L422+48
 8604 11b8 1D46     		mov	r5, r3
 8605 11ba 1446     		mov	r4, r2
 8606 11bc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 8607 11be 2860     		str	r0, [r5]	@ unaligned
 8608 11c0 6960     		str	r1, [r5, #4]	@ unaligned
 8609 11c2 AA60     		str	r2, [r5, #8]	@ unaligned
 8610 11c4 EB60     		str	r3, [r5, #12]	@ unaligned
 8611 11c6 2068     		ldr	r0, [r4]	@ unaligned
 8612 11c8 2861     		str	r0, [r5, #16]	@ unaligned
 8613 11ca 2379     		ldrb	r3, [r4, #4]
 8614 11cc 2B75     		strb	r3, [r5, #20]
1559:..\src/command_processing.c ****         for (i=0; i<N_IMU_Connected; i++){
 8615              		.loc 1 1559 0
 8616 11ce 0023     		movs	r3, #0
 8617 11d0 FB66     		str	r3, [r7, #108]
 8618 11d2 7DE1     		b	.L398
 8619              	.L409:
1560:..\src/command_processing.c ****             sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 8620              		.loc 1 1560 0
 8621 11d4 494A     		ldr	r2, .L422+52
 8622 11d6 FB6E     		ldr	r3, [r7, #108]
 8623 11d8 1344     		add	r3, r3, r2
 8624 11da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8625 11dc 07F10800 		add	r0, r7, #8
 8626 11e0 FA6E     		ldr	r2, [r7, #108]
 8627 11e2 4749     		ldr	r1, .L422+56
 8628 11e4 FFF7FEFF 		bl	sprintf
1561:..\src/command_processing.c ****             strcat(info_string, str);
 8629              		.loc 1 1561 0
 8630 11e8 07F10803 		add	r3, r7, #8
 8631 11ec 1946     		mov	r1, r3
 8632 11ee 7868     		ldr	r0, [r7, #4]
 8633 11f0 FFF7FEFF 		bl	strcat
1562:..\src/command_processing.c ****             
1563:..\src/command_processing.c ****             sprintf(str, "\tAccelerometers: ");
 8634              		.loc 1 1563 0
 8635 11f4 07F10803 		add	r3, r7, #8
 8636 11f8 424A     		ldr	r2, .L422+60
 8637 11fa 1C46     		mov	r4, r3
 8638 11fc 1546     		mov	r5, r2
 8639 11fe 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8640 1200 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8641 1202 2B68     		ldr	r3, [r5]
 8642 1204 2380     		strh	r3, [r4]	@ movhi
1564:..\src/command_processing.c ****             if ((c_mem.IMU_conf[IMU_connected[i]][0]))
 8643              		.loc 1 1564 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 206


 8644 1206 3D4A     		ldr	r2, .L422+52
 8645 1208 FB6E     		ldr	r3, [r7, #108]
 8646 120a 1344     		add	r3, r3, r2
 8647 120c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8648 120e 1946     		mov	r1, r3
 8649 1210 344A     		ldr	r2, .L422+28
 8650 1212 0B46     		mov	r3, r1
 8651 1214 9B00     		lsls	r3, r3, #2
 8652 1216 0B44     		add	r3, r3, r1
 8653 1218 1344     		add	r3, r3, r2
 8654 121a 03F22113 		addw	r3, r3, #289
 8655 121e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8656 1220 002B     		cmp	r3, #0
 8657 1222 0FD0     		beq	.L399
1565:..\src/command_processing.c ****                 strcat(str, "YES\r\n");
 8658              		.loc 1 1565 0
 8659 1224 07F10803 		add	r3, r7, #8
 8660 1228 1846     		mov	r0, r3
 8661 122a FFF7FEFF 		bl	strlen
 8662 122e 0346     		mov	r3, r0
 8663 1230 1A46     		mov	r2, r3
 8664 1232 07F10803 		add	r3, r7, #8
 8665 1236 1344     		add	r3, r3, r2
 8666 1238 334A     		ldr	r2, .L422+64
 8667 123a 1068     		ldr	r0, [r2]	@ unaligned
 8668 123c 1860     		str	r0, [r3]	@ unaligned
 8669 123e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 8670 1240 9A80     		strh	r2, [r3, #4]	@ unaligned
 8671 1242 0EE0     		b	.L400
 8672              	.L399:
1566:..\src/command_processing.c ****             else
1567:..\src/command_processing.c ****                 strcat(str, "NO\r\n"); 
 8673              		.loc 1 1567 0
 8674 1244 07F10803 		add	r3, r7, #8
 8675 1248 1846     		mov	r0, r3
 8676 124a FFF7FEFF 		bl	strlen
 8677 124e 0346     		mov	r3, r0
 8678 1250 1A46     		mov	r2, r3
 8679 1252 07F10803 		add	r3, r7, #8
 8680 1256 1344     		add	r3, r3, r2
 8681 1258 2C4A     		ldr	r2, .L422+68
 8682 125a 1068     		ldr	r0, [r2]	@ unaligned
 8683 125c 1860     		str	r0, [r3]	@ unaligned
 8684 125e 1279     		ldrb	r2, [r2, #4]
 8685 1260 1A71     		strb	r2, [r3, #4]
 8686              	.L400:
1568:..\src/command_processing.c ****             strcat(str, "\tGyroscopes: ");
 8687              		.loc 1 1568 0
 8688 1262 07F10803 		add	r3, r7, #8
 8689 1266 1846     		mov	r0, r3
 8690 1268 FFF7FEFF 		bl	strlen
 8691 126c 0346     		mov	r3, r0
 8692 126e 1A46     		mov	r2, r3
 8693 1270 07F10803 		add	r3, r7, #8
 8694 1274 1344     		add	r3, r3, r2
 8695 1276 264A     		ldr	r2, .L422+72
 8696 1278 1C46     		mov	r4, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 207


 8697 127a 1346     		mov	r3, r2
 8698 127c 07CB     		ldmia	r3!, {r0, r1, r2}
 8699 127e 2060     		str	r0, [r4]	@ unaligned
 8700 1280 6160     		str	r1, [r4, #4]	@ unaligned
 8701 1282 A260     		str	r2, [r4, #8]	@ unaligned
 8702 1284 1B88     		ldrh	r3, [r3]	@ unaligned
 8703 1286 A381     		strh	r3, [r4, #12]	@ unaligned
1569:..\src/command_processing.c ****             if ((c_mem.IMU_conf[IMU_connected[i]][1]))
 8704              		.loc 1 1569 0
 8705 1288 1C4A     		ldr	r2, .L422+52
 8706 128a FB6E     		ldr	r3, [r7, #108]
 8707 128c 1344     		add	r3, r3, r2
 8708 128e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8709 1290 1946     		mov	r1, r3
 8710 1292 144A     		ldr	r2, .L422+28
 8711 1294 0B46     		mov	r3, r1
 8712 1296 9B00     		lsls	r3, r3, #2
 8713 1298 0B44     		add	r3, r3, r1
 8714 129a 1344     		add	r3, r3, r2
 8715 129c 03F59173 		add	r3, r3, #290
 8716 12a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8717 12a2 002B     		cmp	r3, #0
 8718 12a4 36D0     		beq	.L401
1570:..\src/command_processing.c ****                 strcat(str, "YES\r\n");
 8719              		.loc 1 1570 0
 8720 12a6 07F10803 		add	r3, r7, #8
 8721 12aa 1846     		mov	r0, r3
 8722 12ac FFF7FEFF 		bl	strlen
 8723 12b0 0346     		mov	r3, r0
 8724 12b2 1A46     		mov	r2, r3
 8725 12b4 07F10803 		add	r3, r7, #8
 8726 12b8 1344     		add	r3, r3, r2
 8727 12ba 134A     		ldr	r2, .L422+64
 8728 12bc 1068     		ldr	r0, [r2]	@ unaligned
 8729 12be 1860     		str	r0, [r3]	@ unaligned
 8730 12c0 9288     		ldrh	r2, [r2, #4]	@ unaligned
 8731 12c2 9A80     		strh	r2, [r3, #4]	@ unaligned
 8732 12c4 35E0     		b	.L402
 8733              	.L423:
 8734 12c6 00BF     		.align	2
 8735              	.L422:
 8736 12c8 780B0000 		.word	.LC122
 8737 12cc 00000000 		.word	g_mem
 8738 12d0 940B0000 		.word	.LC123
 8739 12d4 18060000 		.word	.LC59
 8740 12d8 A80B0000 		.word	.LC124
 8741 12dc 00007A44 		.word	1148846080
 8742 12e0 C40B0000 		.word	.LC125
 8743 12e4 00000000 		.word	c_mem
 8744 12e8 EC0B0000 		.word	.LC126
 8745 12ec 000C0000 		.word	.LC127
 8746 12f0 00000000 		.word	N_IMU_Connected
 8747 12f4 100C0000 		.word	.LC128
 8748 12f8 240C0000 		.word	.LC129
 8749 12fc 00000000 		.word	IMU_connected
 8750 1300 3C0C0000 		.word	.LC130
 8751 1304 500C0000 		.word	.LC131
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 208


 8752 1308 14070000 		.word	.LC76
 8753 130c 1C070000 		.word	.LC77
 8754 1310 640C0000 		.word	.LC132
 8755              	.L401:
1571:..\src/command_processing.c ****             else
1572:..\src/command_processing.c ****                 strcat(str, "NO\r\n"); 
 8756              		.loc 1 1572 0
 8757 1314 07F10803 		add	r3, r7, #8
 8758 1318 1846     		mov	r0, r3
 8759 131a FFF7FEFF 		bl	strlen
 8760 131e 0346     		mov	r3, r0
 8761 1320 1A46     		mov	r2, r3
 8762 1322 07F10803 		add	r3, r7, #8
 8763 1326 1344     		add	r3, r3, r2
 8764 1328 854A     		ldr	r2, .L424
 8765 132a 1068     		ldr	r0, [r2]	@ unaligned
 8766 132c 1860     		str	r0, [r3]	@ unaligned
 8767 132e 1279     		ldrb	r2, [r2, #4]
 8768 1330 1A71     		strb	r2, [r3, #4]
 8769              	.L402:
1573:..\src/command_processing.c ****             strcat(str, "\tMagnetometers: ");
 8770              		.loc 1 1573 0
 8771 1332 07F10803 		add	r3, r7, #8
 8772 1336 1846     		mov	r0, r3
 8773 1338 FFF7FEFF 		bl	strlen
 8774 133c 0346     		mov	r3, r0
 8775 133e 1A46     		mov	r2, r3
 8776 1340 07F10803 		add	r3, r7, #8
 8777 1344 1344     		add	r3, r3, r2
 8778 1346 7F4A     		ldr	r2, .L424+4
 8779 1348 1D46     		mov	r5, r3
 8780 134a 1446     		mov	r4, r2
 8781 134c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 8782 134e 2860     		str	r0, [r5]	@ unaligned
 8783 1350 6960     		str	r1, [r5, #4]	@ unaligned
 8784 1352 AA60     		str	r2, [r5, #8]	@ unaligned
 8785 1354 EB60     		str	r3, [r5, #12]	@ unaligned
 8786 1356 2378     		ldrb	r3, [r4]
 8787 1358 2B74     		strb	r3, [r5, #16]
1574:..\src/command_processing.c ****             if ((c_mem.IMU_conf[IMU_connected[i]][2]))
 8788              		.loc 1 1574 0
 8789 135a 7B4A     		ldr	r2, .L424+8
 8790 135c FB6E     		ldr	r3, [r7, #108]
 8791 135e 1344     		add	r3, r3, r2
 8792 1360 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8793 1362 1946     		mov	r1, r3
 8794 1364 794A     		ldr	r2, .L424+12
 8795 1366 0B46     		mov	r3, r1
 8796 1368 9B00     		lsls	r3, r3, #2
 8797 136a 0B44     		add	r3, r3, r1
 8798 136c 1344     		add	r3, r3, r2
 8799 136e 03F22313 		addw	r3, r3, #291
 8800 1372 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8801 1374 002B     		cmp	r3, #0
 8802 1376 0FD0     		beq	.L403
1575:..\src/command_processing.c ****                 strcat(str, "YES\r\n");
 8803              		.loc 1 1575 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 209


 8804 1378 07F10803 		add	r3, r7, #8
 8805 137c 1846     		mov	r0, r3
 8806 137e FFF7FEFF 		bl	strlen
 8807 1382 0346     		mov	r3, r0
 8808 1384 1A46     		mov	r2, r3
 8809 1386 07F10803 		add	r3, r7, #8
 8810 138a 1344     		add	r3, r3, r2
 8811 138c 704A     		ldr	r2, .L424+16
 8812 138e 1068     		ldr	r0, [r2]	@ unaligned
 8813 1390 1860     		str	r0, [r3]	@ unaligned
 8814 1392 9288     		ldrh	r2, [r2, #4]	@ unaligned
 8815 1394 9A80     		strh	r2, [r3, #4]	@ unaligned
 8816 1396 0EE0     		b	.L404
 8817              	.L403:
1576:..\src/command_processing.c ****             else
1577:..\src/command_processing.c ****                 strcat(str, "NO\r\n");
 8818              		.loc 1 1577 0
 8819 1398 07F10803 		add	r3, r7, #8
 8820 139c 1846     		mov	r0, r3
 8821 139e FFF7FEFF 		bl	strlen
 8822 13a2 0346     		mov	r3, r0
 8823 13a4 1A46     		mov	r2, r3
 8824 13a6 07F10803 		add	r3, r7, #8
 8825 13aa 1344     		add	r3, r3, r2
 8826 13ac 644A     		ldr	r2, .L424
 8827 13ae 1068     		ldr	r0, [r2]	@ unaligned
 8828 13b0 1860     		str	r0, [r3]	@ unaligned
 8829 13b2 1279     		ldrb	r2, [r2, #4]
 8830 13b4 1A71     		strb	r2, [r3, #4]
 8831              	.L404:
1578:..\src/command_processing.c ****             strcat(str, "\tQuaternion: ");                
 8832              		.loc 1 1578 0
 8833 13b6 07F10803 		add	r3, r7, #8
 8834 13ba 1846     		mov	r0, r3
 8835 13bc FFF7FEFF 		bl	strlen
 8836 13c0 0346     		mov	r3, r0
 8837 13c2 1A46     		mov	r2, r3
 8838 13c4 07F10803 		add	r3, r7, #8
 8839 13c8 1344     		add	r3, r3, r2
 8840 13ca 624A     		ldr	r2, .L424+20
 8841 13cc 1C46     		mov	r4, r3
 8842 13ce 1346     		mov	r3, r2
 8843 13d0 07CB     		ldmia	r3!, {r0, r1, r2}
 8844 13d2 2060     		str	r0, [r4]	@ unaligned
 8845 13d4 6160     		str	r1, [r4, #4]	@ unaligned
 8846 13d6 A260     		str	r2, [r4, #8]	@ unaligned
 8847 13d8 1B88     		ldrh	r3, [r3]	@ unaligned
 8848 13da A381     		strh	r3, [r4, #12]	@ unaligned
1579:..\src/command_processing.c ****             if ((c_mem.IMU_conf[IMU_connected[i]][3]))
 8849              		.loc 1 1579 0
 8850 13dc 5A4A     		ldr	r2, .L424+8
 8851 13de FB6E     		ldr	r3, [r7, #108]
 8852 13e0 1344     		add	r3, r3, r2
 8853 13e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8854 13e4 1946     		mov	r1, r3
 8855 13e6 594A     		ldr	r2, .L424+12
 8856 13e8 0B46     		mov	r3, r1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 210


 8857 13ea 9B00     		lsls	r3, r3, #2
 8858 13ec 0B44     		add	r3, r3, r1
 8859 13ee 1344     		add	r3, r3, r2
 8860 13f0 03F59273 		add	r3, r3, #292
 8861 13f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8862 13f6 002B     		cmp	r3, #0
 8863 13f8 0FD0     		beq	.L405
1580:..\src/command_processing.c ****                 strcat(str, "YES\r\n");
 8864              		.loc 1 1580 0
 8865 13fa 07F10803 		add	r3, r7, #8
 8866 13fe 1846     		mov	r0, r3
 8867 1400 FFF7FEFF 		bl	strlen
 8868 1404 0346     		mov	r3, r0
 8869 1406 1A46     		mov	r2, r3
 8870 1408 07F10803 		add	r3, r7, #8
 8871 140c 1344     		add	r3, r3, r2
 8872 140e 504A     		ldr	r2, .L424+16
 8873 1410 1068     		ldr	r0, [r2]	@ unaligned
 8874 1412 1860     		str	r0, [r3]	@ unaligned
 8875 1414 9288     		ldrh	r2, [r2, #4]	@ unaligned
 8876 1416 9A80     		strh	r2, [r3, #4]	@ unaligned
 8877 1418 0EE0     		b	.L406
 8878              	.L405:
1581:..\src/command_processing.c ****             else
1582:..\src/command_processing.c ****                 strcat(str, "NO\r\n");
 8879              		.loc 1 1582 0
 8880 141a 07F10803 		add	r3, r7, #8
 8881 141e 1846     		mov	r0, r3
 8882 1420 FFF7FEFF 		bl	strlen
 8883 1424 0346     		mov	r3, r0
 8884 1426 1A46     		mov	r2, r3
 8885 1428 07F10803 		add	r3, r7, #8
 8886 142c 1344     		add	r3, r3, r2
 8887 142e 444A     		ldr	r2, .L424
 8888 1430 1068     		ldr	r0, [r2]	@ unaligned
 8889 1432 1860     		str	r0, [r3]	@ unaligned
 8890 1434 1279     		ldrb	r2, [r2, #4]
 8891 1436 1A71     		strb	r2, [r3, #4]
 8892              	.L406:
1583:..\src/command_processing.c ****             strcat(str, "\tTemperature: ");
 8893              		.loc 1 1583 0
 8894 1438 07F10803 		add	r3, r7, #8
 8895 143c 1846     		mov	r0, r3
 8896 143e FFF7FEFF 		bl	strlen
 8897 1442 0346     		mov	r3, r0
 8898 1444 1A46     		mov	r2, r3
 8899 1446 07F10803 		add	r3, r7, #8
 8900 144a 1344     		add	r3, r3, r2
 8901 144c 424A     		ldr	r2, .L424+24
 8902 144e 1C46     		mov	r4, r3
 8903 1450 1346     		mov	r3, r2
 8904 1452 07CB     		ldmia	r3!, {r0, r1, r2}
 8905 1454 2060     		str	r0, [r4]	@ unaligned
 8906 1456 6160     		str	r1, [r4, #4]	@ unaligned
 8907 1458 A260     		str	r2, [r4, #8]	@ unaligned
 8908 145a 1A88     		ldrh	r2, [r3]	@ unaligned
 8909 145c 9B78     		ldrb	r3, [r3, #2]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 211


 8910 145e A281     		strh	r2, [r4, #12]	@ unaligned
 8911 1460 A373     		strb	r3, [r4, #14]
1584:..\src/command_processing.c ****             if ((c_mem.IMU_conf[IMU_connected[i]][4]))
 8912              		.loc 1 1584 0
 8913 1462 394A     		ldr	r2, .L424+8
 8914 1464 FB6E     		ldr	r3, [r7, #108]
 8915 1466 1344     		add	r3, r3, r2
 8916 1468 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8917 146a 1946     		mov	r1, r3
 8918 146c 374A     		ldr	r2, .L424+12
 8919 146e 0B46     		mov	r3, r1
 8920 1470 9B00     		lsls	r3, r3, #2
 8921 1472 0B44     		add	r3, r3, r1
 8922 1474 1344     		add	r3, r3, r2
 8923 1476 03F22513 		addw	r3, r3, #293
 8924 147a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8925 147c 002B     		cmp	r3, #0
 8926 147e 0FD0     		beq	.L407
1585:..\src/command_processing.c ****                 strcat(str, "YES\r\n");
 8927              		.loc 1 1585 0
 8928 1480 07F10803 		add	r3, r7, #8
 8929 1484 1846     		mov	r0, r3
 8930 1486 FFF7FEFF 		bl	strlen
 8931 148a 0346     		mov	r3, r0
 8932 148c 1A46     		mov	r2, r3
 8933 148e 07F10803 		add	r3, r7, #8
 8934 1492 1344     		add	r3, r3, r2
 8935 1494 2E4A     		ldr	r2, .L424+16
 8936 1496 1068     		ldr	r0, [r2]	@ unaligned
 8937 1498 1860     		str	r0, [r3]	@ unaligned
 8938 149a 9288     		ldrh	r2, [r2, #4]	@ unaligned
 8939 149c 9A80     		strh	r2, [r3, #4]	@ unaligned
 8940 149e 0EE0     		b	.L408
 8941              	.L407:
1586:..\src/command_processing.c ****             else
1587:..\src/command_processing.c ****                 strcat(str, "NO\r\n");
 8942              		.loc 1 1587 0
 8943 14a0 07F10803 		add	r3, r7, #8
 8944 14a4 1846     		mov	r0, r3
 8945 14a6 FFF7FEFF 		bl	strlen
 8946 14aa 0346     		mov	r3, r0
 8947 14ac 1A46     		mov	r2, r3
 8948 14ae 07F10803 		add	r3, r7, #8
 8949 14b2 1344     		add	r3, r3, r2
 8950 14b4 224A     		ldr	r2, .L424
 8951 14b6 1068     		ldr	r0, [r2]	@ unaligned
 8952 14b8 1860     		str	r0, [r3]	@ unaligned
 8953 14ba 1279     		ldrb	r2, [r2, #4]
 8954 14bc 1A71     		strb	r2, [r3, #4]
 8955              	.L408:
1588:..\src/command_processing.c ****                  
1589:..\src/command_processing.c ****             strcat(info_string, str);
 8956              		.loc 1 1589 0 discriminator 2
 8957 14be 07F10803 		add	r3, r7, #8
 8958 14c2 1946     		mov	r1, r3
 8959 14c4 7868     		ldr	r0, [r7, #4]
 8960 14c6 FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 212


1559:..\src/command_processing.c ****             sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 8961              		.loc 1 1559 0 discriminator 2
 8962 14ca FB6E     		ldr	r3, [r7, #108]
 8963 14cc 0133     		adds	r3, r3, #1
 8964 14ce FB66     		str	r3, [r7, #108]
 8965              	.L398:
1559:..\src/command_processing.c ****             sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 8966              		.loc 1 1559 0 is_stmt 0 discriminator 1
 8967 14d0 224B     		ldr	r3, .L424+28
 8968 14d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8969 14d4 1A46     		mov	r2, r3
 8970 14d6 FB6E     		ldr	r3, [r7, #108]
 8971 14d8 9A42     		cmp	r2, r3
 8972 14da 3FF77BAE 		bgt	.L409
1590:..\src/command_processing.c ****         }       
1591:..\src/command_processing.c ****         
1592:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 8973              		.loc 1 1592 0 is_stmt 1
 8974 14de 7868     		ldr	r0, [r7, #4]
 8975 14e0 FFF7FEFF 		bl	strlen
 8976 14e4 0346     		mov	r3, r0
 8977 14e6 1A46     		mov	r2, r3
 8978 14e8 7B68     		ldr	r3, [r7, #4]
 8979 14ea 1344     		add	r3, r3, r2
 8980 14ec 1C4A     		ldr	r2, .L424+32
 8981 14ee 1188     		ldrh	r1, [r2]	@ unaligned
 8982 14f0 9278     		ldrb	r2, [r2, #2]
 8983 14f2 1980     		strh	r1, [r3]	@ unaligned
 8984 14f4 9A70     		strb	r2, [r3, #2]
1593:..\src/command_processing.c ****       
1594:..\src/command_processing.c ****         IMU_reading_info(info_string);
 8985              		.loc 1 1594 0
 8986 14f6 7868     		ldr	r0, [r7, #4]
 8987 14f8 FFF7FEFF 		bl	IMU_reading_info
1595:..\src/command_processing.c ****         
1596:..\src/command_processing.c ****         sprintf(str, "debug: %ld\r\n", (uint32)timer_value0 - (uint32)timer_value);
 8988              		.loc 1 1596 0
 8989 14fc 194B     		ldr	r3, .L424+36
 8990 14fe 1A68     		ldr	r2, [r3]
 8991 1500 194B     		ldr	r3, .L424+40
 8992 1502 1B68     		ldr	r3, [r3]
 8993 1504 D21A     		subs	r2, r2, r3
 8994 1506 07F10803 		add	r3, r7, #8
 8995 150a 1849     		ldr	r1, .L424+44
 8996 150c 1846     		mov	r0, r3
 8997 150e FFF7FEFF 		bl	sprintf
1597:..\src/command_processing.c ****         strcat(info_string, str);
 8998              		.loc 1 1597 0
 8999 1512 07F10803 		add	r3, r7, #8
 9000 1516 1946     		mov	r1, r3
 9001 1518 7868     		ldr	r0, [r7, #4]
 9002 151a FFF7FEFF 		bl	strcat
1598:..\src/command_processing.c ****       
1599:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 9003              		.loc 1 1599 0
 9004 151e 7868     		ldr	r0, [r7, #4]
 9005 1520 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 213


 9006 1524 0346     		mov	r3, r0
 9007 1526 1A46     		mov	r2, r3
 9008 1528 7B68     		ldr	r3, [r7, #4]
 9009 152a 1344     		add	r3, r3, r2
 9010 152c 0C4A     		ldr	r2, .L424+32
 9011 152e 1188     		ldrh	r1, [r2]	@ unaligned
 9012 1530 9278     		ldrb	r2, [r2, #2]
 9013 1532 1980     		strh	r1, [r3]	@ unaligned
 9014 1534 9A70     		strb	r2, [r3, #2]
 9015              	.L410:
 9016              	.LBE10:
1600:..\src/command_processing.c ****         
1601:..\src/command_processing.c ****     }
1602:..\src/command_processing.c **** }
 9017              		.loc 1 1602 0
 9018 1536 00BF     		nop
 9019 1538 7437     		adds	r7, r7, #116
 9020              		.cfi_def_cfa_offset 28
 9021 153a BD46     		mov	sp, r7
 9022              		.cfi_def_cfa_register 13
 9023              		@ sp needed
 9024 153c BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 9025              	.L425:
 9026              		.align	2
 9027              	.L424:
 9028 1540 1C070000 		.word	.LC77
 9029 1544 740C0000 		.word	.LC133
 9030 1548 00000000 		.word	IMU_connected
 9031 154c 00000000 		.word	c_mem
 9032 1550 14070000 		.word	.LC76
 9033 1554 880C0000 		.word	.LC134
 9034 1558 980C0000 		.word	.LC135
 9035 155c 00000000 		.word	N_IMU_Connected
 9036 1560 18060000 		.word	.LC59
 9037 1564 00000000 		.word	timer_value0
 9038 1568 00000000 		.word	timer_value
 9039 156c A80C0000 		.word	.LC136
 9040              		.cfi_endproc
 9041              	.LFE71:
 9042              		.size	prepare_generic_info, .-prepare_generic_info
 9043              		.section	.rodata
 9044 0cb5 000000   		.align	2
 9045              	.LC137:
 9046 0cb8 0D0A5553 		.ascii	"\015\012USAGE STATISTICS\015\012\000"
 9046      41474520 
 9046      53544154 
 9046      49535449 
 9046      43530D0A 
 9047 0ccd 000000   		.align	2
 9048              	.LC138:
 9049 0cd0 44617465 		.ascii	"Date of maintenance: %d/%d/20%d\015\012\000"
 9049      206F6620 
 9049      6D61696E 
 9049      74656E61 
 9049      6E63653A 
 9050 0cf2 0000     		.align	2
 9051              	.LC139:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 214


 9052 0cf4 43757272 		.ascii	"Current Time: %d/%d/20%d %d:%d:%d\015\012\000"
 9052      656E7420 
 9052      54696D65 
 9052      3A202564 
 9052      2F25642F 
 9053              		.align	2
 9054              	.LC140:
 9055 0d18 506F7369 		.ascii	"Positions histogram (ticks):\015\012\000"
 9055      74696F6E 
 9055      73206869 
 9055      73746F67 
 9055      72616D20 
 9056 0d37 00       		.align	2
 9057              	.LC141:
 9058 0d38 42696E20 		.ascii	"Bin %d [%d-%d]: %lu\015\012\000"
 9058      2564205B 
 9058      25642D25 
 9058      645D3A20 
 9058      256C750D 
 9059 0d4e 0000     		.align	2
 9060              	.LC142:
 9061 0d50 43757272 		.ascii	"Current histogram (mA):\015\012\000"
 9061      656E7420 
 9061      68697374 
 9061      6F677261 
 9061      6D20286D 
 9062 0d6a 0000     		.align	2
 9063              	.LC143:
 9064 0d6c 54687265 		.ascii	"Threshold %d [%d-%d]: %lu\015\012\000"
 9064      73686F6C 
 9064      64202564 
 9064      205B2564 
 9064      2D25645D 
 9065              		.align	2
 9066              	.LC144:
 9067 0d88 454D4720 		.ascii	"EMG activations counter: %lu, %lu\000"
 9067      61637469 
 9067      76617469 
 9067      6F6E7320 
 9067      636F756E 
 9068 0daa 0000     		.align	2
 9069              	.LC145:
 9070 0dac 52657374 		.ascii	"Rest position occurrences: %lu\000"
 9070      20706F73 
 9070      6974696F 
 9070      6E206F63 
 9070      63757272 
 9071 0dcb 00       		.align	2
 9072              	.LC146:
 9073 0dcc 416E676C 		.ascii	"Angle total displacement (ticks): %lu\000"
 9073      6520746F 
 9073      74616C20 
 9073      64697370 
 9073      6C616365 
 9074 0df2 0000     		.align	2
 9075              	.LC147:
 9076 0df4 546F7461 		.ascii	"Total power on time (sec): %lu\000"
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 215


 9076      6C20706F 
 9076      77657220 
 9076      6F6E2074 
 9076      696D6520 
 9077 0e13 00       		.align	2
 9078              	.LC148:
 9079 0e14 546F7461 		.ascii	"Total rest position time (sec): %lu\000"
 9079      6C207265 
 9079      73742070 
 9079      6F736974 
 9079      696F6E20 
 9080              		.section	.text.prepare_counter_info,"ax",%progbits
 9081              		.align	2
 9082              		.global	prepare_counter_info
 9083              		.thumb
 9084              		.thumb_func
 9085              		.type	prepare_counter_info, %function
 9086              	prepare_counter_info:
 9087              	.LFB72:
1603:..\src/command_processing.c **** 
1604:..\src/command_processing.c **** //==============================================================================
1605:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
1606:..\src/command_processing.c **** //==============================================================================
1607:..\src/command_processing.c **** 
1608:..\src/command_processing.c **** void prepare_counter_info(char *info_string)
1609:..\src/command_processing.c **** {
 9088              		.loc 1 1609 0
 9089              		.cfi_startproc
 9090              		@ args = 0, pretend = 0, frame = 120
 9091              		@ frame_needed = 1, uses_anonymous_args = 0
 9092 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 9093              		.cfi_def_cfa_offset 20
 9094              		.cfi_offset 4, -20
 9095              		.cfi_offset 5, -16
 9096              		.cfi_offset 6, -12
 9097              		.cfi_offset 7, -8
 9098              		.cfi_offset 14, -4
 9099 0002 A3B0     		sub	sp, sp, #140
 9100              		.cfi_def_cfa_offset 160
 9101 0004 04AF     		add	r7, sp, #16
 9102              		.cfi_def_cfa 7, 144
 9103 0006 7860     		str	r0, [r7, #4]
1610:..\src/command_processing.c ****     char str[100];  
1611:..\src/command_processing.c ****     int i;
1612:..\src/command_processing.c ****     int step;
1613:..\src/command_processing.c **** 
1614:..\src/command_processing.c ****     strcat(info_string, "\r\nUSAGE STATISTICS\r\n");
 9104              		.loc 1 1614 0
 9105 0008 7868     		ldr	r0, [r7, #4]
 9106 000a FFF7FEFF 		bl	strlen
 9107 000e 0346     		mov	r3, r0
 9108 0010 1A46     		mov	r2, r3
 9109 0012 7B68     		ldr	r3, [r7, #4]
 9110 0014 1344     		add	r3, r3, r2
 9111 0016 C34A     		ldr	r2, .L432
 9112 0018 1D46     		mov	r5, r3
 9113 001a 1446     		mov	r4, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 216


 9114 001c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 9115 001e 2860     		str	r0, [r5]	@ unaligned
 9116 0020 6960     		str	r1, [r5, #4]	@ unaligned
 9117 0022 AA60     		str	r2, [r5, #8]	@ unaligned
 9118 0024 EB60     		str	r3, [r5, #12]	@ unaligned
 9119 0026 2068     		ldr	r0, [r4]	@ unaligned
 9120 0028 2861     		str	r0, [r5, #16]	@ unaligned
 9121 002a 2379     		ldrb	r3, [r4, #4]
 9122 002c 2B75     		strb	r3, [r5, #20]
1615:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 9123              		.loc 1 1615 0
 9124 002e 7868     		ldr	r0, [r7, #4]
 9125 0030 FFF7FEFF 		bl	strlen
 9126 0034 0346     		mov	r3, r0
 9127 0036 1A46     		mov	r2, r3
 9128 0038 7B68     		ldr	r3, [r7, #4]
 9129 003a 1344     		add	r3, r3, r2
 9130 003c BA4A     		ldr	r2, .L432+4
 9131 003e 1188     		ldrh	r1, [r2]	@ unaligned
 9132 0040 9278     		ldrb	r2, [r2, #2]
 9133 0042 1980     		strh	r1, [r3]	@ unaligned
 9134 0044 9A70     		strb	r2, [r3, #2]
1616:..\src/command_processing.c ****     
1617:..\src/command_processing.c ****     sprintf(str, "Date of maintenance: %d/%d/20%d\r\n", (int)g_mem.maint_day, (int)g_mem.maint_mont
 9135              		.loc 1 1617 0
 9136 0046 B94B     		ldr	r3, .L432+8
 9137 0048 93F89530 		ldrb	r3, [r3, #149]	@ zero_extendqisi2
 9138 004c 1A46     		mov	r2, r3
 9139 004e B74B     		ldr	r3, .L432+8
 9140 0050 93F89630 		ldrb	r3, [r3, #150]	@ zero_extendqisi2
 9141 0054 1946     		mov	r1, r3
 9142 0056 B54B     		ldr	r3, .L432+8
 9143 0058 93F89730 		ldrb	r3, [r3, #151]	@ zero_extendqisi2
 9144 005c 07F10C00 		add	r0, r7, #12
 9145 0060 0093     		str	r3, [sp]
 9146 0062 0B46     		mov	r3, r1
 9147 0064 B249     		ldr	r1, .L432+12
 9148 0066 FFF7FEFF 		bl	sprintf
1618:..\src/command_processing.c ****     strcat(info_string, str);
 9149              		.loc 1 1618 0
 9150 006a 07F10C03 		add	r3, r7, #12
 9151 006e 1946     		mov	r1, r3
 9152 0070 7868     		ldr	r0, [r7, #4]
 9153 0072 FFF7FEFF 		bl	strcat
1619:..\src/command_processing.c ****             
1620:..\src/command_processing.c ****     sprintf(str, "Current Time: %d/%d/20%d %d:%d:%d\r\n", (int)g_mem.curr_time[0], (int)g_mem.curr_
 9154              		.loc 1 1620 0
 9155 0076 AD4B     		ldr	r3, .L432+8
 9156 0078 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 9157 007c 1D46     		mov	r5, r3
 9158 007e AB4B     		ldr	r3, .L432+8
 9159 0080 93F81131 		ldrb	r3, [r3, #273]	@ zero_extendqisi2
 9160 0084 1E46     		mov	r6, r3
 9161 0086 A94B     		ldr	r3, .L432+8
 9162 0088 93F81231 		ldrb	r3, [r3, #274]	@ zero_extendqisi2
 9163 008c 1A46     		mov	r2, r3
 9164 008e A74B     		ldr	r3, .L432+8
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 217


 9165 0090 93F81331 		ldrb	r3, [r3, #275]	@ zero_extendqisi2
 9166 0094 1946     		mov	r1, r3
 9167 0096 A54B     		ldr	r3, .L432+8
 9168 0098 93F81431 		ldrb	r3, [r3, #276]	@ zero_extendqisi2
 9169 009c 1C46     		mov	r4, r3
 9170 009e A34B     		ldr	r3, .L432+8
 9171 00a0 93F81531 		ldrb	r3, [r3, #277]	@ zero_extendqisi2
 9172 00a4 07F10C00 		add	r0, r7, #12
 9173 00a8 0393     		str	r3, [sp, #12]
 9174 00aa 0294     		str	r4, [sp, #8]
 9175 00ac 0191     		str	r1, [sp, #4]
 9176 00ae 0092     		str	r2, [sp]
 9177 00b0 3346     		mov	r3, r6
 9178 00b2 2A46     		mov	r2, r5
 9179 00b4 9F49     		ldr	r1, .L432+16
 9180 00b6 FFF7FEFF 		bl	sprintf
1621:..\src/command_processing.c ****     strcat(info_string, str);
 9181              		.loc 1 1621 0
 9182 00ba 07F10C03 		add	r3, r7, #12
 9183 00be 1946     		mov	r1, r3
 9184 00c0 7868     		ldr	r0, [r7, #4]
 9185 00c2 FFF7FEFF 		bl	strcat
1622:..\src/command_processing.c ****     
1623:..\src/command_processing.c ****     sprintf(str, "Positions histogram (ticks):\r\n");
 9186              		.loc 1 1623 0
 9187 00c6 07F10C03 		add	r3, r7, #12
 9188 00ca 9B4A     		ldr	r2, .L432+20
 9189 00cc 1C46     		mov	r4, r3
 9190 00ce 1546     		mov	r5, r2
 9191 00d0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 9192 00d2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 9193 00d4 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 9194 00d8 07C4     		stmia	r4!, {r0, r1, r2}
 9195 00da 2380     		strh	r3, [r4]	@ movhi
 9196 00dc 0234     		adds	r4, r4, #2
 9197 00de 1B0C     		lsrs	r3, r3, #16
 9198 00e0 2370     		strb	r3, [r4]
1624:..\src/command_processing.c ****     strcat(info_string, str);
 9199              		.loc 1 1624 0
 9200 00e2 07F10C03 		add	r3, r7, #12
 9201 00e6 1946     		mov	r1, r3
 9202 00e8 7868     		ldr	r0, [r7, #4]
 9203 00ea FFF7FEFF 		bl	strcat
1625:..\src/command_processing.c ****     step = ( (int)(g_mem.pos_lim_sup >> g_mem.res[0]) / 10);
 9204              		.loc 1 1625 0
 9205 00ee 8F4B     		ldr	r3, .L432+8
 9206 00f0 DB6D     		ldr	r3, [r3, #92]
 9207 00f2 8E4A     		ldr	r2, .L432+8
 9208 00f4 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 9209 00f8 1341     		asrs	r3, r3, r2
 9210 00fa 904A     		ldr	r2, .L432+24
 9211 00fc 82FB0312 		smull	r1, r2, r2, r3
 9212 0100 9210     		asrs	r2, r2, #2
 9213 0102 DB17     		asrs	r3, r3, #31
 9214 0104 D31A     		subs	r3, r2, r3
 9215 0106 3B67     		str	r3, [r7, #112]
1626:..\src/command_processing.c ****     for (i=1; i<=10;i++){
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 218


 9216              		.loc 1 1626 0
 9217 0108 0123     		movs	r3, #1
 9218 010a 7B67     		str	r3, [r7, #116]
 9219 010c 21E0     		b	.L427
 9220              	.L428:
1627:..\src/command_processing.c ****         sprintf(str, "Bin %d [%d-%d]: %lu\r\n", i, step*(i-1)+1, step*(i), g_mem.position_hist[i-1]
 9221              		.loc 1 1627 0 discriminator 3
 9222 010e 7B6F     		ldr	r3, [r7, #116]
 9223 0110 013B     		subs	r3, r3, #1
 9224 0112 3A6F     		ldr	r2, [r7, #112]
 9225 0114 02FB03F3 		mul	r3, r2, r3
 9226 0118 5C1C     		adds	r4, r3, #1
 9227 011a 3B6F     		ldr	r3, [r7, #112]
 9228 011c 7A6F     		ldr	r2, [r7, #116]
 9229 011e 02FB03F3 		mul	r3, r2, r3
 9230 0122 7A6F     		ldr	r2, [r7, #116]
 9231 0124 013A     		subs	r2, r2, #1
 9232 0126 8149     		ldr	r1, .L432+8
 9233 0128 3232     		adds	r2, r2, #50
 9234 012a 51F82220 		ldr	r2, [r1, r2, lsl #2]
 9235 012e 07F10C00 		add	r0, r7, #12
 9236 0132 0192     		str	r2, [sp, #4]
 9237 0134 0093     		str	r3, [sp]
 9238 0136 2346     		mov	r3, r4
 9239 0138 7A6F     		ldr	r2, [r7, #116]
 9240 013a 8149     		ldr	r1, .L432+28
 9241 013c FFF7FEFF 		bl	sprintf
1628:..\src/command_processing.c ****         strcat(info_string, str);
 9242              		.loc 1 1628 0 discriminator 3
 9243 0140 07F10C03 		add	r3, r7, #12
 9244 0144 1946     		mov	r1, r3
 9245 0146 7868     		ldr	r0, [r7, #4]
 9246 0148 FFF7FEFF 		bl	strcat
1626:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 9247              		.loc 1 1626 0 discriminator 3
 9248 014c 7B6F     		ldr	r3, [r7, #116]
 9249 014e 0133     		adds	r3, r3, #1
 9250 0150 7B67     		str	r3, [r7, #116]
 9251              	.L427:
1626:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 9252              		.loc 1 1626 0 is_stmt 0 discriminator 1
 9253 0152 7B6F     		ldr	r3, [r7, #116]
 9254 0154 0A2B     		cmp	r3, #10
 9255 0156 DADD     		ble	.L428
1629:..\src/command_processing.c ****     }
1630:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 9256              		.loc 1 1630 0 is_stmt 1
 9257 0158 7868     		ldr	r0, [r7, #4]
 9258 015a FFF7FEFF 		bl	strlen
 9259 015e 0346     		mov	r3, r0
 9260 0160 1A46     		mov	r2, r3
 9261 0162 7B68     		ldr	r3, [r7, #4]
 9262 0164 1344     		add	r3, r3, r2
 9263 0166 704A     		ldr	r2, .L432+4
 9264 0168 1188     		ldrh	r1, [r2]	@ unaligned
 9265 016a 9278     		ldrb	r2, [r2, #2]
 9266 016c 1980     		strh	r1, [r3]	@ unaligned
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 219


 9267 016e 9A70     		strb	r2, [r3, #2]
1631:..\src/command_processing.c ****     
1632:..\src/command_processing.c ****     sprintf(str, "Current histogram (mA):\r\n");
 9268              		.loc 1 1632 0
 9269 0170 07F10C03 		add	r3, r7, #12
 9270 0174 734A     		ldr	r2, .L432+32
 9271 0176 1C46     		mov	r4, r3
 9272 0178 1546     		mov	r5, r2
 9273 017a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 9274 017c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 9275 017e 95E80700 		ldmia	r5, {r0, r1, r2}
 9276 0182 03C4     		stmia	r4!, {r0, r1}
 9277 0184 2280     		strh	r2, [r4]	@ movhi
1633:..\src/command_processing.c ****     strcat(info_string, str);
 9278              		.loc 1 1633 0
 9279 0186 07F10C03 		add	r3, r7, #12
 9280 018a 1946     		mov	r1, r3
 9281 018c 7868     		ldr	r0, [r7, #4]
 9282 018e FFF7FEFF 		bl	strcat
1634:..\src/command_processing.c ****     step = ( (int)(g_mem.current_limit) / 4);
 9283              		.loc 1 1634 0
 9284 0192 664B     		ldr	r3, .L432+8
 9285 0194 B3F96830 		ldrsh	r3, [r3, #104]
 9286 0198 002B     		cmp	r3, #0
 9287 019a 00DA     		bge	.L429
 9288 019c 0333     		adds	r3, r3, #3
 9289              	.L429:
 9290 019e 9B10     		asrs	r3, r3, #2
 9291 01a0 1BB2     		sxth	r3, r3
 9292 01a2 3B67     		str	r3, [r7, #112]
1635:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 9293              		.loc 1 1635 0
 9294 01a4 0123     		movs	r3, #1
 9295 01a6 7B67     		str	r3, [r7, #116]
 9296 01a8 20E0     		b	.L430
 9297              	.L431:
1636:..\src/command_processing.c ****         sprintf(str, "Threshold %d [%d-%d]: %lu\r\n", i, step*(i-1), step*(i), g_mem.current_hist[i
 9298              		.loc 1 1636 0 discriminator 3
 9299 01aa 7B6F     		ldr	r3, [r7, #116]
 9300 01ac 013B     		subs	r3, r3, #1
 9301 01ae 3A6F     		ldr	r2, [r7, #112]
 9302 01b0 02FB03F4 		mul	r4, r2, r3
 9303 01b4 3B6F     		ldr	r3, [r7, #112]
 9304 01b6 7A6F     		ldr	r2, [r7, #116]
 9305 01b8 02FB03F3 		mul	r3, r2, r3
 9306 01bc 7A6F     		ldr	r2, [r7, #116]
 9307 01be 013A     		subs	r2, r2, #1
 9308 01c0 5A49     		ldr	r1, .L432+8
 9309 01c2 3C32     		adds	r2, r2, #60
 9310 01c4 51F82220 		ldr	r2, [r1, r2, lsl #2]
 9311 01c8 07F10C00 		add	r0, r7, #12
 9312 01cc 0192     		str	r2, [sp, #4]
 9313 01ce 0093     		str	r3, [sp]
 9314 01d0 2346     		mov	r3, r4
 9315 01d2 7A6F     		ldr	r2, [r7, #116]
 9316 01d4 5C49     		ldr	r1, .L432+36
 9317 01d6 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 220


1637:..\src/command_processing.c ****         strcat(info_string, str);
 9318              		.loc 1 1637 0 discriminator 3
 9319 01da 07F10C03 		add	r3, r7, #12
 9320 01de 1946     		mov	r1, r3
 9321 01e0 7868     		ldr	r0, [r7, #4]
 9322 01e2 FFF7FEFF 		bl	strcat
1635:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 9323              		.loc 1 1635 0 discriminator 3
 9324 01e6 7B6F     		ldr	r3, [r7, #116]
 9325 01e8 0133     		adds	r3, r3, #1
 9326 01ea 7B67     		str	r3, [r7, #116]
 9327              	.L430:
1635:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 9328              		.loc 1 1635 0 is_stmt 0 discriminator 1
 9329 01ec 7B6F     		ldr	r3, [r7, #116]
 9330 01ee 042B     		cmp	r3, #4
 9331 01f0 DBDD     		ble	.L431
1638:..\src/command_processing.c ****     }
1639:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 9332              		.loc 1 1639 0 is_stmt 1
 9333 01f2 7868     		ldr	r0, [r7, #4]
 9334 01f4 FFF7FEFF 		bl	strlen
 9335 01f8 0346     		mov	r3, r0
 9336 01fa 1A46     		mov	r2, r3
 9337 01fc 7B68     		ldr	r3, [r7, #4]
 9338 01fe 1344     		add	r3, r3, r2
 9339 0200 494A     		ldr	r2, .L432+4
 9340 0202 1188     		ldrh	r1, [r2]	@ unaligned
 9341 0204 9278     		ldrb	r2, [r2, #2]
 9342 0206 1980     		strh	r1, [r3]	@ unaligned
 9343 0208 9A70     		strb	r2, [r3, #2]
1640:..\src/command_processing.c ****             
1641:..\src/command_processing.c ****     sprintf(str, "EMG activations counter: %lu, %lu", g_mem.emg_counter[0], g_mem.emg_counter[1]);
 9344              		.loc 1 1641 0
 9345 020a 484B     		ldr	r3, .L432+8
 9346 020c D3F8C020 		ldr	r2, [r3, #192]
 9347 0210 464B     		ldr	r3, .L432+8
 9348 0212 D3F8C430 		ldr	r3, [r3, #196]
 9349 0216 07F10C00 		add	r0, r7, #12
 9350 021a 4C49     		ldr	r1, .L432+40
 9351 021c FFF7FEFF 		bl	sprintf
1642:..\src/command_processing.c ****     strcat(info_string, str);
 9352              		.loc 1 1642 0
 9353 0220 07F10C03 		add	r3, r7, #12
 9354 0224 1946     		mov	r1, r3
 9355 0226 7868     		ldr	r0, [r7, #4]
 9356 0228 FFF7FEFF 		bl	strcat
1643:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 9357              		.loc 1 1643 0
 9358 022c 7868     		ldr	r0, [r7, #4]
 9359 022e FFF7FEFF 		bl	strlen
 9360 0232 0346     		mov	r3, r0
 9361 0234 1A46     		mov	r2, r3
 9362 0236 7B68     		ldr	r3, [r7, #4]
 9363 0238 1344     		add	r3, r3, r2
 9364 023a 3B4A     		ldr	r2, .L432+4
 9365 023c 1188     		ldrh	r1, [r2]	@ unaligned
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 221


 9366 023e 9278     		ldrb	r2, [r2, #2]
 9367 0240 1980     		strh	r1, [r3]	@ unaligned
 9368 0242 9A70     		strb	r2, [r3, #2]
1644:..\src/command_processing.c ****     
1645:..\src/command_processing.c ****     sprintf(str, "Rest position occurrences: %lu", g_mem.rest_counter);
 9369              		.loc 1 1645 0
 9370 0244 394B     		ldr	r3, .L432+8
 9371 0246 D3F80021 		ldr	r2, [r3, #256]
 9372 024a 07F10C03 		add	r3, r7, #12
 9373 024e 4049     		ldr	r1, .L432+44
 9374 0250 1846     		mov	r0, r3
 9375 0252 FFF7FEFF 		bl	sprintf
1646:..\src/command_processing.c ****     strcat(info_string, str);
 9376              		.loc 1 1646 0
 9377 0256 07F10C03 		add	r3, r7, #12
 9378 025a 1946     		mov	r1, r3
 9379 025c 7868     		ldr	r0, [r7, #4]
 9380 025e FFF7FEFF 		bl	strcat
1647:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 9381              		.loc 1 1647 0
 9382 0262 7868     		ldr	r0, [r7, #4]
 9383 0264 FFF7FEFF 		bl	strlen
 9384 0268 0346     		mov	r3, r0
 9385 026a 1A46     		mov	r2, r3
 9386 026c 7B68     		ldr	r3, [r7, #4]
 9387 026e 1344     		add	r3, r3, r2
 9388 0270 2D4A     		ldr	r2, .L432+4
 9389 0272 1188     		ldrh	r1, [r2]	@ unaligned
 9390 0274 9278     		ldrb	r2, [r2, #2]
 9391 0276 1980     		strh	r1, [r3]	@ unaligned
 9392 0278 9A70     		strb	r2, [r3, #2]
1648:..\src/command_processing.c ****     
1649:..\src/command_processing.c ****     sprintf(str, "Angle total displacement (ticks): %lu", g_mem.wire_disp);
 9393              		.loc 1 1649 0
 9394 027a 2C4B     		ldr	r3, .L432+8
 9395 027c D3F80421 		ldr	r2, [r3, #260]
 9396 0280 07F10C03 		add	r3, r7, #12
 9397 0284 3349     		ldr	r1, .L432+48
 9398 0286 1846     		mov	r0, r3
 9399 0288 FFF7FEFF 		bl	sprintf
1650:..\src/command_processing.c ****     strcat(info_string, str);
 9400              		.loc 1 1650 0
 9401 028c 07F10C03 		add	r3, r7, #12
 9402 0290 1946     		mov	r1, r3
 9403 0292 7868     		ldr	r0, [r7, #4]
 9404 0294 FFF7FEFF 		bl	strcat
1651:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 9405              		.loc 1 1651 0
 9406 0298 7868     		ldr	r0, [r7, #4]
 9407 029a FFF7FEFF 		bl	strlen
 9408 029e 0346     		mov	r3, r0
 9409 02a0 1A46     		mov	r2, r3
 9410 02a2 7B68     		ldr	r3, [r7, #4]
 9411 02a4 1344     		add	r3, r3, r2
 9412 02a6 204A     		ldr	r2, .L432+4
 9413 02a8 1188     		ldrh	r1, [r2]	@ unaligned
 9414 02aa 9278     		ldrb	r2, [r2, #2]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 222


 9415 02ac 1980     		strh	r1, [r3]	@ unaligned
 9416 02ae 9A70     		strb	r2, [r3, #2]
1652:..\src/command_processing.c ****     
1653:..\src/command_processing.c ****     sprintf(str, "Total power on time (sec): %lu", g_mem.total_time_on);
 9417              		.loc 1 1653 0
 9418 02b0 1E4B     		ldr	r3, .L432+8
 9419 02b2 D3F80821 		ldr	r2, [r3, #264]
 9420 02b6 07F10C03 		add	r3, r7, #12
 9421 02ba 2749     		ldr	r1, .L432+52
 9422 02bc 1846     		mov	r0, r3
 9423 02be FFF7FEFF 		bl	sprintf
1654:..\src/command_processing.c ****     strcat(info_string, str);
 9424              		.loc 1 1654 0
 9425 02c2 07F10C03 		add	r3, r7, #12
 9426 02c6 1946     		mov	r1, r3
 9427 02c8 7868     		ldr	r0, [r7, #4]
 9428 02ca FFF7FEFF 		bl	strcat
1655:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 9429              		.loc 1 1655 0
 9430 02ce 7868     		ldr	r0, [r7, #4]
 9431 02d0 FFF7FEFF 		bl	strlen
 9432 02d4 0346     		mov	r3, r0
 9433 02d6 1A46     		mov	r2, r3
 9434 02d8 7B68     		ldr	r3, [r7, #4]
 9435 02da 1344     		add	r3, r3, r2
 9436 02dc 124A     		ldr	r2, .L432+4
 9437 02de 1188     		ldrh	r1, [r2]	@ unaligned
 9438 02e0 9278     		ldrb	r2, [r2, #2]
 9439 02e2 1980     		strh	r1, [r3]	@ unaligned
 9440 02e4 9A70     		strb	r2, [r3, #2]
1656:..\src/command_processing.c ****     
1657:..\src/command_processing.c ****     sprintf(str, "Total rest position time (sec): %lu", g_mem.total_time_rest);
 9441              		.loc 1 1657 0
 9442 02e6 114B     		ldr	r3, .L432+8
 9443 02e8 D3F80C21 		ldr	r2, [r3, #268]
 9444 02ec 07F10C03 		add	r3, r7, #12
 9445 02f0 1A49     		ldr	r1, .L432+56
 9446 02f2 1846     		mov	r0, r3
 9447 02f4 FFF7FEFF 		bl	sprintf
1658:..\src/command_processing.c ****     strcat(info_string, str);
 9448              		.loc 1 1658 0
 9449 02f8 07F10C03 		add	r3, r7, #12
 9450 02fc 1946     		mov	r1, r3
 9451 02fe 7868     		ldr	r0, [r7, #4]
 9452 0300 FFF7FEFF 		bl	strcat
1659:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 9453              		.loc 1 1659 0
 9454 0304 7868     		ldr	r0, [r7, #4]
 9455 0306 FFF7FEFF 		bl	strlen
 9456 030a 0346     		mov	r3, r0
 9457 030c 1A46     		mov	r2, r3
 9458 030e 7B68     		ldr	r3, [r7, #4]
 9459 0310 1344     		add	r3, r3, r2
 9460 0312 054A     		ldr	r2, .L432+4
 9461 0314 1188     		ldrh	r1, [r2]	@ unaligned
 9462 0316 9278     		ldrb	r2, [r2, #2]
 9463 0318 1980     		strh	r1, [r3]	@ unaligned
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 223


 9464 031a 9A70     		strb	r2, [r3, #2]
1660:..\src/command_processing.c **** 
1661:..\src/command_processing.c **** }
 9465              		.loc 1 1661 0
 9466 031c 00BF     		nop
 9467 031e 7C37     		adds	r7, r7, #124
 9468              		.cfi_def_cfa_offset 20
 9469 0320 BD46     		mov	sp, r7
 9470              		.cfi_def_cfa_register 13
 9471              		@ sp needed
 9472 0322 F0BD     		pop	{r4, r5, r6, r7, pc}
 9473              	.L433:
 9474              		.align	2
 9475              	.L432:
 9476 0324 B80C0000 		.word	.LC137
 9477 0328 18060000 		.word	.LC59
 9478 032c 00000000 		.word	g_mem
 9479 0330 D00C0000 		.word	.LC138
 9480 0334 F40C0000 		.word	.LC139
 9481 0338 180D0000 		.word	.LC140
 9482 033c 67666666 		.word	1717986919
 9483 0340 380D0000 		.word	.LC141
 9484 0344 500D0000 		.word	.LC142
 9485 0348 6C0D0000 		.word	.LC143
 9486 034c 880D0000 		.word	.LC144
 9487 0350 AC0D0000 		.word	.LC145
 9488 0354 CC0D0000 		.word	.LC146
 9489 0358 F40D0000 		.word	.LC147
 9490 035c 140E0000 		.word	.LC148
 9491              		.cfi_endproc
 9492              	.LFE72:
 9493              		.size	prepare_counter_info, .-prepare_counter_info
 9494              		.section	.rodata
 9495              		.align	2
 9496              	.LC149:
 9497 0e38 53454E53 		.ascii	"SENSORS INFO\015\012\000"
 9497      4F525320 
 9497      494E464F 
 9497      0D0A00
 9498 0e47 00       		.align	2
 9499              	.LC150:
 9500 0e48 09416363 		.ascii	"\011Acc: %d\011%d\011%d\015\012\000"
 9500      3A202564 
 9500      09256409 
 9500      25640D0A 
 9500      00
 9501 0e59 000000   		.align	2
 9502              	.LC151:
 9503 0e5c 09477972 		.ascii	"\011Gyro: %d\011%d\011%d\015\012\000"
 9503      6F3A2025 
 9503      64092564 
 9503      0925640D 
 9503      0A00
 9504 0e6e 0000     		.align	2
 9505              	.LC152:
 9506 0e70 094D6167 		.ascii	"\011Mag: %d\011%d\011%d\015\012\000"
 9506      3A202564 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 224


 9506      09256409 
 9506      25640D0A 
 9506      00
 9507 0e81 000000   		.align	2
 9508              	.LC153:
 9509 0e84 09517561 		.ascii	"\011Quat: %.3f\011%.3f\011%.3f\011%.3f\015\012\000"
 9509      743A2025 
 9509      2E336609 
 9509      252E3366 
 9509      09252E33 
 9510 0ea1 000000   		.align	2
 9511              	.LC154:
 9512 0ea4 0954656D 		.ascii	"\011Temperature: %d\015\012\000"
 9512      70657261 
 9512      74757265 
 9512      3A202564 
 9512      0D0A00
 9513              		.section	.text.IMU_reading_info,"ax",%progbits
 9514              		.align	2
 9515              		.global	IMU_reading_info
 9516              		.thumb
 9517              		.thumb_func
 9518              		.type	IMU_reading_info, %function
 9519              	IMU_reading_info:
 9520              	.LFB73:
1662:..\src/command_processing.c **** 
1663:..\src/command_processing.c **** //==============================================================================
1664:..\src/command_processing.c **** //                                                              IMU READING INFO
1665:..\src/command_processing.c **** //==============================================================================
1666:..\src/command_processing.c **** 
1667:..\src/command_processing.c **** void IMU_reading_info(char *info_string)
1668:..\src/command_processing.c **** {
 9521              		.loc 1 1668 0
 9522              		.cfi_startproc
 9523              		@ args = 0, pretend = 0, frame = 312
 9524              		@ frame_needed = 1, uses_anonymous_args = 0
 9525 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 9526              		.cfi_def_cfa_offset 32
 9527              		.cfi_offset 4, -32
 9528              		.cfi_offset 5, -28
 9529              		.cfi_offset 7, -24
 9530              		.cfi_offset 8, -20
 9531              		.cfi_offset 9, -16
 9532              		.cfi_offset 10, -12
 9533              		.cfi_offset 11, -8
 9534              		.cfi_offset 14, -4
 9535 0004 D4B0     		sub	sp, sp, #336
 9536              		.cfi_def_cfa_offset 368
 9537 0006 06AF     		add	r7, sp, #24
 9538              		.cfi_def_cfa 7, 344
 9539 0008 3B1D     		adds	r3, r7, #4
 9540 000a 1860     		str	r0, [r3]
1669:..\src/command_processing.c ****     char str[300];  
1670:..\src/command_processing.c ****     int i;
1671:..\src/command_processing.c ****                  
1672:..\src/command_processing.c ****     strcat(info_string, "SENSORS INFO\r\n");
 9541              		.loc 1 1672 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 225


 9542 000c 3B1D     		adds	r3, r7, #4
 9543 000e 1868     		ldr	r0, [r3]
 9544 0010 FFF7FEFF 		bl	strlen
 9545 0014 0346     		mov	r3, r0
 9546 0016 1A46     		mov	r2, r3
 9547 0018 3B1D     		adds	r3, r7, #4
 9548 001a 1B68     		ldr	r3, [r3]
 9549 001c 1344     		add	r3, r3, r2
 9550 001e C94A     		ldr	r2, .L442
 9551 0020 1C46     		mov	r4, r3
 9552 0022 1346     		mov	r3, r2
 9553 0024 07CB     		ldmia	r3!, {r0, r1, r2}
 9554 0026 2060     		str	r0, [r4]	@ unaligned
 9555 0028 6160     		str	r1, [r4, #4]	@ unaligned
 9556 002a A260     		str	r2, [r4, #8]	@ unaligned
 9557 002c 1A88     		ldrh	r2, [r3]	@ unaligned
 9558 002e 9B78     		ldrb	r3, [r3, #2]
 9559 0030 A281     		strh	r2, [r4, #12]	@ unaligned
 9560 0032 A373     		strb	r3, [r4, #14]
1673:..\src/command_processing.c ****     for (i=0; i<N_IMU_Connected; i++){
 9561              		.loc 1 1673 0
 9562 0034 0023     		movs	r3, #0
 9563 0036 C7F83431 		str	r3, [r7, #308]
 9564 003a 66E1     		b	.L435
 9565              	.L441:
1674:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 9566              		.loc 1 1674 0
 9567 003c C24A     		ldr	r2, .L442+4
 9568 003e D7F83431 		ldr	r3, [r7, #308]
 9569 0042 1344     		add	r3, r3, r2
 9570 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9571 0046 07F10800 		add	r0, r7, #8
 9572 004a D7F83421 		ldr	r2, [r7, #308]
 9573 004e BF49     		ldr	r1, .L442+8
 9574 0050 FFF7FEFF 		bl	sprintf
1675:..\src/command_processing.c ****         strcat(info_string, str);
 9575              		.loc 1 1675 0
 9576 0054 07F10802 		add	r2, r7, #8
 9577 0058 3B1D     		adds	r3, r7, #4
 9578 005a 1146     		mov	r1, r2
 9579 005c 1868     		ldr	r0, [r3]
 9580 005e FFF7FEFF 		bl	strcat
1676:..\src/command_processing.c ****         
1677:..\src/command_processing.c ****         if ((c_mem.IMU_conf[IMU_connected[i]][0])){
 9581              		.loc 1 1677 0
 9582 0062 B94A     		ldr	r2, .L442+4
 9583 0064 D7F83431 		ldr	r3, [r7, #308]
 9584 0068 1344     		add	r3, r3, r2
 9585 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9586 006c 1946     		mov	r1, r3
 9587 006e B84A     		ldr	r2, .L442+12
 9588 0070 0B46     		mov	r3, r1
 9589 0072 9B00     		lsls	r3, r3, #2
 9590 0074 0B44     		add	r3, r3, r1
 9591 0076 1344     		add	r3, r3, r2
 9592 0078 03F22113 		addw	r3, r3, #289
 9593 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 226


 9594 007e 002B     		cmp	r3, #0
 9595 0080 31D0     		beq	.L436
1678:..\src/command_processing.c ****             sprintf(str, "\tAcc: %d\t%d\t%d\r\n", (int16) g_imu[i].accel_value[0], (int16) g_imu[i]
 9596              		.loc 1 1678 0
 9597 0082 B449     		ldr	r1, .L442+16
 9598 0084 D7F83421 		ldr	r2, [r7, #308]
 9599 0088 1346     		mov	r3, r2
 9600 008a 9B00     		lsls	r3, r3, #2
 9601 008c 1344     		add	r3, r3, r2
 9602 008e DB00     		lsls	r3, r3, #3
 9603 0090 0B44     		add	r3, r3, r1
 9604 0092 0233     		adds	r3, r3, #2
 9605 0094 B3F90030 		ldrsh	r3, [r3]
 9606 0098 1C46     		mov	r4, r3
 9607 009a AE49     		ldr	r1, .L442+16
 9608 009c D7F83421 		ldr	r2, [r7, #308]
 9609 00a0 1346     		mov	r3, r2
 9610 00a2 9B00     		lsls	r3, r3, #2
 9611 00a4 1344     		add	r3, r3, r2
 9612 00a6 DB00     		lsls	r3, r3, #3
 9613 00a8 0B44     		add	r3, r3, r1
 9614 00aa 0433     		adds	r3, r3, #4
 9615 00ac B3F90030 		ldrsh	r3, [r3]
 9616 00b0 1D46     		mov	r5, r3
 9617 00b2 A849     		ldr	r1, .L442+16
 9618 00b4 D7F83421 		ldr	r2, [r7, #308]
 9619 00b8 1346     		mov	r3, r2
 9620 00ba 9B00     		lsls	r3, r3, #2
 9621 00bc 1344     		add	r3, r3, r2
 9622 00be DB00     		lsls	r3, r3, #3
 9623 00c0 0B44     		add	r3, r3, r1
 9624 00c2 0633     		adds	r3, r3, #6
 9625 00c4 B3F90030 		ldrsh	r3, [r3]
 9626 00c8 07F10800 		add	r0, r7, #8
 9627 00cc 0093     		str	r3, [sp]
 9628 00ce 2B46     		mov	r3, r5
 9629 00d0 2246     		mov	r2, r4
 9630 00d2 A149     		ldr	r1, .L442+20
 9631 00d4 FFF7FEFF 		bl	sprintf
1679:..\src/command_processing.c ****             strcat(info_string, str);
 9632              		.loc 1 1679 0
 9633 00d8 07F10802 		add	r2, r7, #8
 9634 00dc 3B1D     		adds	r3, r7, #4
 9635 00de 1146     		mov	r1, r2
 9636 00e0 1868     		ldr	r0, [r3]
 9637 00e2 FFF7FEFF 		bl	strcat
 9638              	.L436:
1680:..\src/command_processing.c ****         }
1681:..\src/command_processing.c **** 
1682:..\src/command_processing.c ****         if ((c_mem.IMU_conf[IMU_connected[i]][1])){
 9639              		.loc 1 1682 0
 9640 00e6 984A     		ldr	r2, .L442+4
 9641 00e8 D7F83431 		ldr	r3, [r7, #308]
 9642 00ec 1344     		add	r3, r3, r2
 9643 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9644 00f0 1946     		mov	r1, r3
 9645 00f2 974A     		ldr	r2, .L442+12
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 227


 9646 00f4 0B46     		mov	r3, r1
 9647 00f6 9B00     		lsls	r3, r3, #2
 9648 00f8 0B44     		add	r3, r3, r1
 9649 00fa 1344     		add	r3, r3, r2
 9650 00fc 03F59173 		add	r3, r3, #290
 9651 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9652 0102 002B     		cmp	r3, #0
 9653 0104 31D0     		beq	.L437
1683:..\src/command_processing.c ****             sprintf(str, "\tGyro: %d\t%d\t%d\r\n", (int16) g_imu[i].gyro_value[0], (int16) g_imu[i]
 9654              		.loc 1 1683 0
 9655 0106 9349     		ldr	r1, .L442+16
 9656 0108 D7F83421 		ldr	r2, [r7, #308]
 9657 010c 1346     		mov	r3, r2
 9658 010e 9B00     		lsls	r3, r3, #2
 9659 0110 1344     		add	r3, r3, r2
 9660 0112 DB00     		lsls	r3, r3, #3
 9661 0114 0B44     		add	r3, r3, r1
 9662 0116 0833     		adds	r3, r3, #8
 9663 0118 B3F90030 		ldrsh	r3, [r3]
 9664 011c 1C46     		mov	r4, r3
 9665 011e 8D49     		ldr	r1, .L442+16
 9666 0120 D7F83421 		ldr	r2, [r7, #308]
 9667 0124 1346     		mov	r3, r2
 9668 0126 9B00     		lsls	r3, r3, #2
 9669 0128 1344     		add	r3, r3, r2
 9670 012a DB00     		lsls	r3, r3, #3
 9671 012c 0B44     		add	r3, r3, r1
 9672 012e 0A33     		adds	r3, r3, #10
 9673 0130 B3F90030 		ldrsh	r3, [r3]
 9674 0134 1D46     		mov	r5, r3
 9675 0136 8749     		ldr	r1, .L442+16
 9676 0138 D7F83421 		ldr	r2, [r7, #308]
 9677 013c 1346     		mov	r3, r2
 9678 013e 9B00     		lsls	r3, r3, #2
 9679 0140 1344     		add	r3, r3, r2
 9680 0142 DB00     		lsls	r3, r3, #3
 9681 0144 0B44     		add	r3, r3, r1
 9682 0146 0C33     		adds	r3, r3, #12
 9683 0148 B3F90030 		ldrsh	r3, [r3]
 9684 014c 07F10800 		add	r0, r7, #8
 9685 0150 0093     		str	r3, [sp]
 9686 0152 2B46     		mov	r3, r5
 9687 0154 2246     		mov	r2, r4
 9688 0156 8149     		ldr	r1, .L442+24
 9689 0158 FFF7FEFF 		bl	sprintf
1684:..\src/command_processing.c ****             strcat(info_string, str);
 9690              		.loc 1 1684 0
 9691 015c 07F10802 		add	r2, r7, #8
 9692 0160 3B1D     		adds	r3, r7, #4
 9693 0162 1146     		mov	r1, r2
 9694 0164 1868     		ldr	r0, [r3]
 9695 0166 FFF7FEFF 		bl	strcat
 9696              	.L437:
1685:..\src/command_processing.c ****         }
1686:..\src/command_processing.c **** 
1687:..\src/command_processing.c ****         if ((c_mem.IMU_conf[IMU_connected[i]][2])){
 9697              		.loc 1 1687 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 228


 9698 016a 774A     		ldr	r2, .L442+4
 9699 016c D7F83431 		ldr	r3, [r7, #308]
 9700 0170 1344     		add	r3, r3, r2
 9701 0172 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9702 0174 1946     		mov	r1, r3
 9703 0176 764A     		ldr	r2, .L442+12
 9704 0178 0B46     		mov	r3, r1
 9705 017a 9B00     		lsls	r3, r3, #2
 9706 017c 0B44     		add	r3, r3, r1
 9707 017e 1344     		add	r3, r3, r2
 9708 0180 03F22313 		addw	r3, r3, #291
 9709 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9710 0186 002B     		cmp	r3, #0
 9711 0188 31D0     		beq	.L438
1688:..\src/command_processing.c ****             sprintf(str, "\tMag: %d\t%d\t%d\r\n", (int16) g_imu[i].mag_value[0], (int16) g_imu[i].m
 9712              		.loc 1 1688 0
 9713 018a 7249     		ldr	r1, .L442+16
 9714 018c D7F83421 		ldr	r2, [r7, #308]
 9715 0190 1346     		mov	r3, r2
 9716 0192 9B00     		lsls	r3, r3, #2
 9717 0194 1344     		add	r3, r3, r2
 9718 0196 DB00     		lsls	r3, r3, #3
 9719 0198 0B44     		add	r3, r3, r1
 9720 019a 0E33     		adds	r3, r3, #14
 9721 019c B3F90030 		ldrsh	r3, [r3]
 9722 01a0 1C46     		mov	r4, r3
 9723 01a2 6C49     		ldr	r1, .L442+16
 9724 01a4 D7F83421 		ldr	r2, [r7, #308]
 9725 01a8 1346     		mov	r3, r2
 9726 01aa 9B00     		lsls	r3, r3, #2
 9727 01ac 1344     		add	r3, r3, r2
 9728 01ae DB00     		lsls	r3, r3, #3
 9729 01b0 0B44     		add	r3, r3, r1
 9730 01b2 1033     		adds	r3, r3, #16
 9731 01b4 B3F90030 		ldrsh	r3, [r3]
 9732 01b8 1D46     		mov	r5, r3
 9733 01ba 6649     		ldr	r1, .L442+16
 9734 01bc D7F83421 		ldr	r2, [r7, #308]
 9735 01c0 1346     		mov	r3, r2
 9736 01c2 9B00     		lsls	r3, r3, #2
 9737 01c4 1344     		add	r3, r3, r2
 9738 01c6 DB00     		lsls	r3, r3, #3
 9739 01c8 0B44     		add	r3, r3, r1
 9740 01ca 1233     		adds	r3, r3, #18
 9741 01cc B3F90030 		ldrsh	r3, [r3]
 9742 01d0 07F10800 		add	r0, r7, #8
 9743 01d4 0093     		str	r3, [sp]
 9744 01d6 2B46     		mov	r3, r5
 9745 01d8 2246     		mov	r2, r4
 9746 01da 6149     		ldr	r1, .L442+28
 9747 01dc FFF7FEFF 		bl	sprintf
1689:..\src/command_processing.c ****             strcat(info_string, str);
 9748              		.loc 1 1689 0
 9749 01e0 07F10802 		add	r2, r7, #8
 9750 01e4 3B1D     		adds	r3, r7, #4
 9751 01e6 1146     		mov	r1, r2
 9752 01e8 1868     		ldr	r0, [r3]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 229


 9753 01ea FFF7FEFF 		bl	strcat
 9754              	.L438:
1690:..\src/command_processing.c ****         }
1691:..\src/command_processing.c ****         
1692:..\src/command_processing.c ****         if ((c_mem.IMU_conf[IMU_connected[i]][3])){
 9755              		.loc 1 1692 0
 9756 01ee 564A     		ldr	r2, .L442+4
 9757 01f0 D7F83431 		ldr	r3, [r7, #308]
 9758 01f4 1344     		add	r3, r3, r2
 9759 01f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9760 01f8 1946     		mov	r1, r3
 9761 01fa 554A     		ldr	r2, .L442+12
 9762 01fc 0B46     		mov	r3, r1
 9763 01fe 9B00     		lsls	r3, r3, #2
 9764 0200 0B44     		add	r3, r3, r1
 9765 0202 1344     		add	r3, r3, r2
 9766 0204 03F59273 		add	r3, r3, #292
 9767 0208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9768 020a 002B     		cmp	r3, #0
 9769 020c 4FD0     		beq	.L439
1693:..\src/command_processing.c ****             sprintf(str, "\tQuat: %.3f\t%.3f\t%.3f\t%.3f\r\n", (float) g_imu[i].quat_value[0], (flo
 9770              		.loc 1 1693 0
 9771 020e 5149     		ldr	r1, .L442+16
 9772 0210 D7F83421 		ldr	r2, [r7, #308]
 9773 0214 1346     		mov	r3, r2
 9774 0216 9B00     		lsls	r3, r3, #2
 9775 0218 1344     		add	r3, r3, r2
 9776 021a DB00     		lsls	r3, r3, #3
 9777 021c 0B44     		add	r3, r3, r1
 9778 021e 1433     		adds	r3, r3, #20
 9779 0220 1B68     		ldr	r3, [r3]	@ float
 9780 0222 1846     		mov	r0, r3
 9781 0224 FFF7FEFF 		bl	__aeabi_f2d
 9782 0228 8246     		mov	r10, r0
 9783 022a 8B46     		mov	fp, r1
 9784 022c 4949     		ldr	r1, .L442+16
 9785 022e D7F83421 		ldr	r2, [r7, #308]
 9786 0232 1346     		mov	r3, r2
 9787 0234 9B00     		lsls	r3, r3, #2
 9788 0236 1344     		add	r3, r3, r2
 9789 0238 DB00     		lsls	r3, r3, #3
 9790 023a 0B44     		add	r3, r3, r1
 9791 023c 1833     		adds	r3, r3, #24
 9792 023e 1B68     		ldr	r3, [r3]	@ float
 9793 0240 1846     		mov	r0, r3
 9794 0242 FFF7FEFF 		bl	__aeabi_f2d
 9795 0246 0446     		mov	r4, r0
 9796 0248 0D46     		mov	r5, r1
 9797 024a 4249     		ldr	r1, .L442+16
 9798 024c D7F83421 		ldr	r2, [r7, #308]
 9799 0250 1346     		mov	r3, r2
 9800 0252 9B00     		lsls	r3, r3, #2
 9801 0254 1344     		add	r3, r3, r2
 9802 0256 DB00     		lsls	r3, r3, #3
 9803 0258 0B44     		add	r3, r3, r1
 9804 025a 1C33     		adds	r3, r3, #28
 9805 025c 1B68     		ldr	r3, [r3]	@ float
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 230


 9806 025e 1846     		mov	r0, r3
 9807 0260 FFF7FEFF 		bl	__aeabi_f2d
 9808 0264 8046     		mov	r8, r0
 9809 0266 8946     		mov	r9, r1
 9810 0268 3A49     		ldr	r1, .L442+16
 9811 026a D7F83421 		ldr	r2, [r7, #308]
 9812 026e 1346     		mov	r3, r2
 9813 0270 9B00     		lsls	r3, r3, #2
 9814 0272 1344     		add	r3, r3, r2
 9815 0274 DB00     		lsls	r3, r3, #3
 9816 0276 0B44     		add	r3, r3, r1
 9817 0278 2033     		adds	r3, r3, #32
 9818 027a 1B68     		ldr	r3, [r3]	@ float
 9819 027c 1846     		mov	r0, r3
 9820 027e FFF7FEFF 		bl	__aeabi_f2d
 9821 0282 0246     		mov	r2, r0
 9822 0284 0B46     		mov	r3, r1
 9823 0286 07F10800 		add	r0, r7, #8
 9824 028a CDE90423 		strd	r2, [sp, #16]
 9825 028e CDE90289 		strd	r8, [sp, #8]
 9826 0292 CDE90045 		strd	r4, [sp]
 9827 0296 5246     		mov	r2, r10
 9828 0298 5B46     		mov	r3, fp
 9829 029a 3249     		ldr	r1, .L442+32
 9830 029c FFF7FEFF 		bl	sprintf
1694:..\src/command_processing.c ****             strcat(info_string, str);
 9831              		.loc 1 1694 0
 9832 02a0 07F10802 		add	r2, r7, #8
 9833 02a4 3B1D     		adds	r3, r7, #4
 9834 02a6 1146     		mov	r1, r2
 9835 02a8 1868     		ldr	r0, [r3]
 9836 02aa FFF7FEFF 		bl	strcat
 9837              	.L439:
1695:..\src/command_processing.c ****         }
1696:..\src/command_processing.c ****         
1697:..\src/command_processing.c ****         if ((c_mem.IMU_conf[IMU_connected[i]][4])){
 9838              		.loc 1 1697 0
 9839 02ae 264A     		ldr	r2, .L442+4
 9840 02b0 D7F83431 		ldr	r3, [r7, #308]
 9841 02b4 1344     		add	r3, r3, r2
 9842 02b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9843 02b8 1946     		mov	r1, r3
 9844 02ba 254A     		ldr	r2, .L442+12
 9845 02bc 0B46     		mov	r3, r1
 9846 02be 9B00     		lsls	r3, r3, #2
 9847 02c0 0B44     		add	r3, r3, r1
 9848 02c2 1344     		add	r3, r3, r2
 9849 02c4 03F22513 		addw	r3, r3, #293
 9850 02c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9851 02ca 002B     		cmp	r3, #0
 9852 02cc 18D0     		beq	.L440
1698:..\src/command_processing.c ****             sprintf(str, "\tTemperature: %d\r\n", (int16) g_imu[i].temp_value);
 9853              		.loc 1 1698 0
 9854 02ce 2149     		ldr	r1, .L442+16
 9855 02d0 D7F83421 		ldr	r2, [r7, #308]
 9856 02d4 1346     		mov	r3, r2
 9857 02d6 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 231


 9858 02d8 1344     		add	r3, r3, r2
 9859 02da DB00     		lsls	r3, r3, #3
 9860 02dc 0B44     		add	r3, r3, r1
 9861 02de 2433     		adds	r3, r3, #36
 9862 02e0 B3F90030 		ldrsh	r3, [r3]
 9863 02e4 1A46     		mov	r2, r3
 9864 02e6 07F10803 		add	r3, r7, #8
 9865 02ea 1F49     		ldr	r1, .L442+36
 9866 02ec 1846     		mov	r0, r3
 9867 02ee FFF7FEFF 		bl	sprintf
1699:..\src/command_processing.c ****             strcat(info_string, str);
 9868              		.loc 1 1699 0
 9869 02f2 07F10802 		add	r2, r7, #8
 9870 02f6 3B1D     		adds	r3, r7, #4
 9871 02f8 1146     		mov	r1, r2
 9872 02fa 1868     		ldr	r0, [r3]
 9873 02fc FFF7FEFF 		bl	strcat
 9874              	.L440:
1673:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 9875              		.loc 1 1673 0 discriminator 2
 9876 0300 D7F83431 		ldr	r3, [r7, #308]
 9877 0304 0133     		adds	r3, r3, #1
 9878 0306 C7F83431 		str	r3, [r7, #308]
 9879              	.L435:
1673:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 9880              		.loc 1 1673 0 is_stmt 0 discriminator 1
 9881 030a 184B     		ldr	r3, .L442+40
 9882 030c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9883 030e 1A46     		mov	r2, r3
 9884 0310 D7F83431 		ldr	r3, [r7, #308]
 9885 0314 9A42     		cmp	r2, r3
 9886 0316 3FF791AE 		bgt	.L441
1700:..\src/command_processing.c ****         }
1701:..\src/command_processing.c ****     }
1702:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 9887              		.loc 1 1702 0 is_stmt 1
 9888 031a 3B1D     		adds	r3, r7, #4
 9889 031c 1868     		ldr	r0, [r3]
 9890 031e FFF7FEFF 		bl	strlen
 9891 0322 0346     		mov	r3, r0
 9892 0324 1A46     		mov	r2, r3
 9893 0326 3B1D     		adds	r3, r7, #4
 9894 0328 1B68     		ldr	r3, [r3]
 9895 032a 1344     		add	r3, r3, r2
 9896 032c 104A     		ldr	r2, .L442+44
 9897 032e 1188     		ldrh	r1, [r2]	@ unaligned
 9898 0330 9278     		ldrb	r2, [r2, #2]
 9899 0332 1980     		strh	r1, [r3]	@ unaligned
 9900 0334 9A70     		strb	r2, [r3, #2]
1703:..\src/command_processing.c **** }
 9901              		.loc 1 1703 0
 9902 0336 00BF     		nop
 9903 0338 07F59C77 		add	r7, r7, #312
 9904              		.cfi_def_cfa_offset 32
 9905 033c BD46     		mov	sp, r7
 9906              		.cfi_def_cfa_register 13
 9907              		@ sp needed
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 232


 9908 033e BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 9909              	.L443:
 9910 0342 00BF     		.align	2
 9911              	.L442:
 9912 0344 380E0000 		.word	.LC149
 9913 0348 00000000 		.word	IMU_connected
 9914 034c 3C0C0000 		.word	.LC130
 9915 0350 00000000 		.word	c_mem
 9916 0354 00000000 		.word	g_imu
 9917 0358 480E0000 		.word	.LC150
 9918 035c 5C0E0000 		.word	.LC151
 9919 0360 700E0000 		.word	.LC152
 9920 0364 840E0000 		.word	.LC153
 9921 0368 A40E0000 		.word	.LC154
 9922 036c 00000000 		.word	N_IMU_Connected
 9923 0370 18060000 		.word	.LC59
 9924              		.cfi_endproc
 9925              	.LFE73:
 9926              		.size	IMU_reading_info, .-IMU_reading_info
 9927              		.section	.text.commWrite_old_id,"ax",%progbits
 9928              		.align	2
 9929              		.global	commWrite_old_id
 9930              		.thumb
 9931              		.thumb_func
 9932              		.type	commWrite_old_id, %function
 9933              	commWrite_old_id:
 9934              	.LFB74:
1704:..\src/command_processing.c **** 
1705:..\src/command_processing.c **** //==============================================================================
1706:..\src/command_processing.c **** //                                                     WRITE FUNCTIONS FOR RS485
1707:..\src/command_processing.c **** //==============================================================================
1708:..\src/command_processing.c **** 
1709:..\src/command_processing.c **** void commWrite_old_id(uint8 *packet_data, uint16 packet_lenght, uint8 old_id)
1710:..\src/command_processing.c **** {
 9935              		.loc 1 1710 0
 9936              		.cfi_startproc
 9937              		@ args = 0, pretend = 0, frame = 16
 9938              		@ frame_needed = 1, uses_anonymous_args = 0
 9939 0000 80B5     		push	{r7, lr}
 9940              		.cfi_def_cfa_offset 8
 9941              		.cfi_offset 7, -8
 9942              		.cfi_offset 14, -4
 9943 0002 84B0     		sub	sp, sp, #16
 9944              		.cfi_def_cfa_offset 24
 9945 0004 00AF     		add	r7, sp, #0
 9946              		.cfi_def_cfa_register 7
 9947 0006 7860     		str	r0, [r7, #4]
 9948 0008 0B46     		mov	r3, r1
 9949 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 9950 000c 1346     		mov	r3, r2
 9951 000e 7B70     		strb	r3, [r7, #1]
1711:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
1712:..\src/command_processing.c **** 
1713:..\src/command_processing.c ****     // frame - start
1714:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 9952              		.loc 1 1714 0
 9953 0010 3A20     		movs	r0, #58
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 233


 9954 0012 FFF7FEFF 		bl	UART_RS485_PutChar
1715:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 9955              		.loc 1 1715 0
 9956 0016 3A20     		movs	r0, #58
 9957 0018 FFF7FEFF 		bl	UART_RS485_PutChar
1716:..\src/command_processing.c ****     // frame - ID
1717:..\src/command_processing.c ****     //if(old_id)
1718:..\src/command_processing.c ****         UART_RS485_PutChar(old_id);
 9958              		.loc 1 1718 0
 9959 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 9960 001e 1846     		mov	r0, r3
 9961 0020 FFF7FEFF 		bl	UART_RS485_PutChar
1719:..\src/command_processing.c ****     //else
1720:..\src/command_processing.c ****         //UART_RS485_PutChar(g_mem.id);
1721:..\src/command_processing.c ****         
1722:..\src/command_processing.c ****     // frame - length
1723:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 9962              		.loc 1 1723 0
 9963 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 9964 0026 DBB2     		uxtb	r3, r3
 9965 0028 1846     		mov	r0, r3
 9966 002a FFF7FEFF 		bl	UART_RS485_PutChar
1724:..\src/command_processing.c ****     // frame - packet data
1725:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 9967              		.loc 1 1725 0
 9968 002e 0023     		movs	r3, #0
 9969 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 9970 0032 09E0     		b	.L445
 9971              	.L446:
1726:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 9972              		.loc 1 1726 0 discriminator 3
 9973 0034 FB89     		ldrh	r3, [r7, #14]
 9974 0036 7A68     		ldr	r2, [r7, #4]
 9975 0038 1344     		add	r3, r3, r2
 9976 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9977 003c 1846     		mov	r0, r3
 9978 003e FFF7FEFF 		bl	UART_RS485_PutChar
1725:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 9979              		.loc 1 1725 0 discriminator 3
 9980 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 9981 0044 0133     		adds	r3, r3, #1
 9982 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 9983              	.L445:
1725:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 9984              		.loc 1 1725 0 is_stmt 0 discriminator 1
 9985 0048 FA89     		ldrh	r2, [r7, #14]
 9986 004a 7B88     		ldrh	r3, [r7, #2]
 9987 004c 9A42     		cmp	r2, r3
 9988 004e F1D3     		bcc	.L446
1727:..\src/command_processing.c ****     }
1728:..\src/command_processing.c **** 
1729:..\src/command_processing.c ****     index = 0;
 9989              		.loc 1 1729 0 is_stmt 1
 9990 0050 0023     		movs	r3, #0
 9991 0052 FB81     		strh	r3, [r7, #14]	@ movhi
1730:..\src/command_processing.c **** 
1731:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 234


 9992              		.loc 1 1731 0
 9993 0054 00BF     		nop
 9994              	.L448:
 9995              		.loc 1 1731 0 is_stmt 0 discriminator 2
 9996 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 9997 005a 0346     		mov	r3, r0
 9998 005c 03F00103 		and	r3, r3, #1
 9999 0060 002B     		cmp	r3, #0
 10000 0062 05D1     		bne	.L447
 10001              		.loc 1 1731 0 discriminator 1
 10002 0064 FB89     		ldrh	r3, [r7, #14]
 10003 0066 5A1C     		adds	r2, r3, #1
 10004 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 10005 006a B3F57A7F 		cmp	r3, #1000
 10006 006e F2D9     		bls	.L448
 10007              	.L447:
1732:..\src/command_processing.c **** 
1733:..\src/command_processing.c ****     RS485_CTS_Write(1);
 10008              		.loc 1 1733 0 is_stmt 1
 10009 0070 0120     		movs	r0, #1
 10010 0072 FFF7FEFF 		bl	RS485_CTS_Write
1734:..\src/command_processing.c ****     RS485_CTS_Write(0);
 10011              		.loc 1 1734 0
 10012 0076 0020     		movs	r0, #0
 10013 0078 FFF7FEFF 		bl	RS485_CTS_Write
1735:..\src/command_processing.c **** }
 10014              		.loc 1 1735 0
 10015 007c 00BF     		nop
 10016 007e 1037     		adds	r7, r7, #16
 10017              		.cfi_def_cfa_offset 8
 10018 0080 BD46     		mov	sp, r7
 10019              		.cfi_def_cfa_register 13
 10020              		@ sp needed
 10021 0082 80BD     		pop	{r7, pc}
 10022              		.cfi_endproc
 10023              	.LFE74:
 10024              		.size	commWrite_old_id, .-commWrite_old_id
 10025              		.section	.text.commWrite,"ax",%progbits
 10026              		.align	2
 10027              		.global	commWrite
 10028              		.thumb
 10029              		.thumb_func
 10030              		.type	commWrite, %function
 10031              	commWrite:
 10032              	.LFB75:
1736:..\src/command_processing.c **** 
1737:..\src/command_processing.c **** void commWrite(uint8 *packet_data, uint16 packet_lenght)
1738:..\src/command_processing.c **** {
 10033              		.loc 1 1738 0
 10034              		.cfi_startproc
 10035              		@ args = 0, pretend = 0, frame = 16
 10036              		@ frame_needed = 1, uses_anonymous_args = 0
 10037 0000 80B5     		push	{r7, lr}
 10038              		.cfi_def_cfa_offset 8
 10039              		.cfi_offset 7, -8
 10040              		.cfi_offset 14, -4
 10041 0002 84B0     		sub	sp, sp, #16
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 235


 10042              		.cfi_def_cfa_offset 24
 10043 0004 00AF     		add	r7, sp, #0
 10044              		.cfi_def_cfa_register 7
 10045 0006 7860     		str	r0, [r7, #4]
 10046 0008 0B46     		mov	r3, r1
 10047 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1739:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
1740:..\src/command_processing.c **** 
1741:..\src/command_processing.c ****     // frame - start
1742:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 10048              		.loc 1 1742 0
 10049 000c 3A20     		movs	r0, #58
 10050 000e FFF7FEFF 		bl	UART_RS485_PutChar
1743:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 10051              		.loc 1 1743 0
 10052 0012 3A20     		movs	r0, #58
 10053 0014 FFF7FEFF 		bl	UART_RS485_PutChar
1744:..\src/command_processing.c ****     // frame - ID
1745:..\src/command_processing.c ****     UART_RS485_PutChar(g_mem.id);
 10054              		.loc 1 1745 0
 10055 0018 1A4B     		ldr	r3, .L454
 10056 001a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 10057 001c 1846     		mov	r0, r3
 10058 001e FFF7FEFF 		bl	UART_RS485_PutChar
1746:..\src/command_processing.c ****     // frame - length
1747:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 10059              		.loc 1 1747 0
 10060 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 10061 0024 DBB2     		uxtb	r3, r3
 10062 0026 1846     		mov	r0, r3
 10063 0028 FFF7FEFF 		bl	UART_RS485_PutChar
1748:..\src/command_processing.c ****     // frame - packet data
1749:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 10064              		.loc 1 1749 0
 10065 002c 0023     		movs	r3, #0
 10066 002e FB81     		strh	r3, [r7, #14]	@ movhi
 10067 0030 09E0     		b	.L450
 10068              	.L451:
1750:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 10069              		.loc 1 1750 0 discriminator 3
 10070 0032 FB89     		ldrh	r3, [r7, #14]
 10071 0034 7A68     		ldr	r2, [r7, #4]
 10072 0036 1344     		add	r3, r3, r2
 10073 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10074 003a 1846     		mov	r0, r3
 10075 003c FFF7FEFF 		bl	UART_RS485_PutChar
1749:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 10076              		.loc 1 1749 0 discriminator 3
 10077 0040 FB89     		ldrh	r3, [r7, #14]	@ movhi
 10078 0042 0133     		adds	r3, r3, #1
 10079 0044 FB81     		strh	r3, [r7, #14]	@ movhi
 10080              	.L450:
1749:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 10081              		.loc 1 1749 0 is_stmt 0 discriminator 1
 10082 0046 FA89     		ldrh	r2, [r7, #14]
 10083 0048 7B88     		ldrh	r3, [r7, #2]
 10084 004a 9A42     		cmp	r2, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 236


 10085 004c F1D3     		bcc	.L451
1751:..\src/command_processing.c ****     }
1752:..\src/command_processing.c **** 
1753:..\src/command_processing.c ****     index = 0;
 10086              		.loc 1 1753 0 is_stmt 1
 10087 004e 0023     		movs	r3, #0
 10088 0050 FB81     		strh	r3, [r7, #14]	@ movhi
1754:..\src/command_processing.c **** 
1755:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 10089              		.loc 1 1755 0
 10090 0052 00BF     		nop
 10091              	.L453:
 10092              		.loc 1 1755 0 is_stmt 0 discriminator 2
 10093 0054 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 10094 0058 0346     		mov	r3, r0
 10095 005a 03F00103 		and	r3, r3, #1
 10096 005e 002B     		cmp	r3, #0
 10097 0060 05D1     		bne	.L452
 10098              		.loc 1 1755 0 discriminator 1
 10099 0062 FB89     		ldrh	r3, [r7, #14]
 10100 0064 5A1C     		adds	r2, r3, #1
 10101 0066 FA81     		strh	r2, [r7, #14]	@ movhi
 10102 0068 B3F57A7F 		cmp	r3, #1000
 10103 006c F2D9     		bls	.L453
 10104              	.L452:
1756:..\src/command_processing.c **** 
1757:..\src/command_processing.c ****     RS485_CTS_Write(1);
 10105              		.loc 1 1757 0 is_stmt 1
 10106 006e 0120     		movs	r0, #1
 10107 0070 FFF7FEFF 		bl	RS485_CTS_Write
1758:..\src/command_processing.c ****     RS485_CTS_Write(0);
 10108              		.loc 1 1758 0
 10109 0074 0020     		movs	r0, #0
 10110 0076 FFF7FEFF 		bl	RS485_CTS_Write
1759:..\src/command_processing.c **** }
 10111              		.loc 1 1759 0
 10112 007a 00BF     		nop
 10113 007c 1037     		adds	r7, r7, #16
 10114              		.cfi_def_cfa_offset 8
 10115 007e BD46     		mov	sp, r7
 10116              		.cfi_def_cfa_register 13
 10117              		@ sp needed
 10118 0080 80BD     		pop	{r7, pc}
 10119              	.L455:
 10120 0082 00BF     		.align	2
 10121              	.L454:
 10122 0084 00000000 		.word	g_mem
 10123              		.cfi_endproc
 10124              	.LFE75:
 10125              		.size	commWrite, .-commWrite
 10126              		.section	.text.commWrite_to_cuff,"ax",%progbits
 10127              		.align	2
 10128              		.global	commWrite_to_cuff
 10129              		.thumb
 10130              		.thumb_func
 10131              		.type	commWrite_to_cuff, %function
 10132              	commWrite_to_cuff:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 237


 10133              	.LFB76:
1760:..\src/command_processing.c **** 
1761:..\src/command_processing.c **** void commWrite_to_cuff(uint8 *packet_data, uint16 packet_lenght)
1762:..\src/command_processing.c **** {
 10134              		.loc 1 1762 0
 10135              		.cfi_startproc
 10136              		@ args = 0, pretend = 0, frame = 16
 10137              		@ frame_needed = 1, uses_anonymous_args = 0
 10138 0000 80B5     		push	{r7, lr}
 10139              		.cfi_def_cfa_offset 8
 10140              		.cfi_offset 7, -8
 10141              		.cfi_offset 14, -4
 10142 0002 84B0     		sub	sp, sp, #16
 10143              		.cfi_def_cfa_offset 24
 10144 0004 00AF     		add	r7, sp, #0
 10145              		.cfi_def_cfa_register 7
 10146 0006 7860     		str	r0, [r7, #4]
 10147 0008 0B46     		mov	r3, r1
 10148 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1763:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
1764:..\src/command_processing.c **** 
1765:..\src/command_processing.c ****     // frame - start
1766:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 10149              		.loc 1 1766 0
 10150 000c 3A20     		movs	r0, #58
 10151 000e FFF7FEFF 		bl	UART_RS485_PutChar
1767:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 10152              		.loc 1 1767 0
 10153 0012 3A20     		movs	r0, #58
 10154 0014 FFF7FEFF 		bl	UART_RS485_PutChar
1768:..\src/command_processing.c ****     // frame - ID
1769:..\src/command_processing.c ****     UART_RS485_PutChar(g_mem.id - 1);
 10155              		.loc 1 1769 0
 10156 0018 184B     		ldr	r3, .L462
 10157 001a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 10158 001c 013B     		subs	r3, r3, #1
 10159 001e DBB2     		uxtb	r3, r3
 10160 0020 1846     		mov	r0, r3
 10161 0022 FFF7FEFF 		bl	UART_RS485_PutChar
1770:..\src/command_processing.c ****     // frame - length
1771:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 10162              		.loc 1 1771 0
 10163 0026 7B88     		ldrh	r3, [r7, #2]	@ movhi
 10164 0028 DBB2     		uxtb	r3, r3
 10165 002a 1846     		mov	r0, r3
 10166 002c FFF7FEFF 		bl	UART_RS485_PutChar
1772:..\src/command_processing.c ****     // frame - packet data
1773:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 10167              		.loc 1 1773 0
 10168 0030 0023     		movs	r3, #0
 10169 0032 FB81     		strh	r3, [r7, #14]	@ movhi
 10170 0034 09E0     		b	.L457
 10171              	.L458:
1774:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 10172              		.loc 1 1774 0 discriminator 3
 10173 0036 FB89     		ldrh	r3, [r7, #14]
 10174 0038 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 238


 10175 003a 1344     		add	r3, r3, r2
 10176 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10177 003e 1846     		mov	r0, r3
 10178 0040 FFF7FEFF 		bl	UART_RS485_PutChar
1773:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 10179              		.loc 1 1773 0 discriminator 3
 10180 0044 FB89     		ldrh	r3, [r7, #14]	@ movhi
 10181 0046 0133     		adds	r3, r3, #1
 10182 0048 FB81     		strh	r3, [r7, #14]	@ movhi
 10183              	.L457:
1773:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 10184              		.loc 1 1773 0 is_stmt 0 discriminator 1
 10185 004a FA89     		ldrh	r2, [r7, #14]
 10186 004c 7B88     		ldrh	r3, [r7, #2]
 10187 004e 9A42     		cmp	r2, r3
 10188 0050 F1D3     		bcc	.L458
1775:..\src/command_processing.c ****     }
1776:..\src/command_processing.c **** 
1777:..\src/command_processing.c ****     index = 0;
 10189              		.loc 1 1777 0 is_stmt 1
 10190 0052 0023     		movs	r3, #0
 10191 0054 FB81     		strh	r3, [r7, #14]	@ movhi
1778:..\src/command_processing.c **** 
1779:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 10192              		.loc 1 1779 0
 10193 0056 00BF     		nop
 10194              	.L460:
 10195              		.loc 1 1779 0 is_stmt 0 discriminator 2
 10196 0058 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 10197 005c 0346     		mov	r3, r0
 10198 005e 03F00103 		and	r3, r3, #1
 10199 0062 002B     		cmp	r3, #0
 10200 0064 05D1     		bne	.L461
 10201              		.loc 1 1779 0 discriminator 1
 10202 0066 FB89     		ldrh	r3, [r7, #14]
 10203 0068 5A1C     		adds	r2, r3, #1
 10204 006a FA81     		strh	r2, [r7, #14]	@ movhi
 10205 006c B3F57A7F 		cmp	r3, #1000
 10206 0070 F2D9     		bls	.L460
 10207              	.L461:
1780:..\src/command_processing.c **** }
 10208              		.loc 1 1780 0 is_stmt 1
 10209 0072 00BF     		nop
 10210 0074 1037     		adds	r7, r7, #16
 10211              		.cfi_def_cfa_offset 8
 10212 0076 BD46     		mov	sp, r7
 10213              		.cfi_def_cfa_register 13
 10214              		@ sp needed
 10215 0078 80BD     		pop	{r7, pc}
 10216              	.L463:
 10217 007a 00BF     		.align	2
 10218              	.L462:
 10219 007c 00000000 		.word	g_mem
 10220              		.cfi_endproc
 10221              	.LFE76:
 10222              		.size	commWrite_to_cuff, .-commWrite_to_cuff
 10223              		.section	.text.LCRChecksum,"ax",%progbits
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 239


 10224              		.align	2
 10225              		.global	LCRChecksum
 10226              		.thumb
 10227              		.thumb_func
 10228              		.type	LCRChecksum, %function
 10229              	LCRChecksum:
 10230              	.LFB77:
1781:..\src/command_processing.c **** 
1782:..\src/command_processing.c **** //==============================================================================
1783:..\src/command_processing.c **** //                                                             CHECKSUM FUNCTION
1784:..\src/command_processing.c **** //==============================================================================
1785:..\src/command_processing.c **** 
1786:..\src/command_processing.c **** // Performs a XOR byte by byte on the entire vector
1787:..\src/command_processing.c **** 
1788:..\src/command_processing.c **** uint8 LCRChecksum(uint8 *data_array, uint8 data_length) {
 10231              		.loc 1 1788 0
 10232              		.cfi_startproc
 10233              		@ args = 0, pretend = 0, frame = 16
 10234              		@ frame_needed = 1, uses_anonymous_args = 0
 10235              		@ link register save eliminated.
 10236 0000 80B4     		push	{r7}
 10237              		.cfi_def_cfa_offset 4
 10238              		.cfi_offset 7, -4
 10239 0002 85B0     		sub	sp, sp, #20
 10240              		.cfi_def_cfa_offset 24
 10241 0004 00AF     		add	r7, sp, #0
 10242              		.cfi_def_cfa_register 7
 10243 0006 7860     		str	r0, [r7, #4]
 10244 0008 0B46     		mov	r3, r1
 10245 000a FB70     		strb	r3, [r7, #3]
1789:..\src/command_processing.c ****     
1790:..\src/command_processing.c ****     uint8 CYDATA i;
1791:..\src/command_processing.c ****     uint8 CYDATA checksum = 0x00;
 10246              		.loc 1 1791 0
 10247 000c 0023     		movs	r3, #0
 10248 000e BB73     		strb	r3, [r7, #14]
1792:..\src/command_processing.c ****     
1793:..\src/command_processing.c ****     for(i = 0; i < data_length; ++i)
 10249              		.loc 1 1793 0
 10250 0010 0023     		movs	r3, #0
 10251 0012 FB73     		strb	r3, [r7, #15]
 10252 0014 09E0     		b	.L465
 10253              	.L466:
1794:..\src/command_processing.c ****        checksum ^= data_array[i];
 10254              		.loc 1 1794 0 discriminator 3
 10255 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 10256 0018 7A68     		ldr	r2, [r7, #4]
 10257 001a 1344     		add	r3, r3, r2
 10258 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 10259 001e BB7B     		ldrb	r3, [r7, #14]
 10260 0020 5340     		eors	r3, r3, r2
 10261 0022 BB73     		strb	r3, [r7, #14]
1793:..\src/command_processing.c ****        checksum ^= data_array[i];
 10262              		.loc 1 1793 0 discriminator 3
 10263 0024 FB7B     		ldrb	r3, [r7, #15]
 10264 0026 0133     		adds	r3, r3, #1
 10265 0028 FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 240


 10266              	.L465:
1793:..\src/command_processing.c ****        checksum ^= data_array[i];
 10267              		.loc 1 1793 0 is_stmt 0 discriminator 1
 10268 002a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 10269 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 10270 002e 9A42     		cmp	r2, r3
 10271 0030 F1D3     		bcc	.L466
1795:..\src/command_processing.c ****   
1796:..\src/command_processing.c ****     return checksum;
 10272              		.loc 1 1796 0 is_stmt 1
 10273 0032 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
1797:..\src/command_processing.c **** }
 10274              		.loc 1 1797 0
 10275 0034 1846     		mov	r0, r3
 10276 0036 1437     		adds	r7, r7, #20
 10277              		.cfi_def_cfa_offset 4
 10278 0038 BD46     		mov	sp, r7
 10279              		.cfi_def_cfa_register 13
 10280              		@ sp needed
 10281 003a 80BC     		pop	{r7}
 10282              		.cfi_restore 7
 10283              		.cfi_def_cfa_offset 0
 10284 003c 7047     		bx	lr
 10285              		.cfi_endproc
 10286              	.LFE77:
 10287              		.size	LCRChecksum, .-LCRChecksum
 10288 003e 00BF     		.section	.text.sendAcknowledgment,"ax",%progbits
 10289              		.align	2
 10290              		.global	sendAcknowledgment
 10291              		.thumb
 10292              		.thumb_func
 10293              		.type	sendAcknowledgment, %function
 10294              	sendAcknowledgment:
 10295              	.LFB78:
1798:..\src/command_processing.c **** 
1799:..\src/command_processing.c **** 
1800:..\src/command_processing.c **** //==============================================================================
1801:..\src/command_processing.c **** //                                                       ACKNOWLEDGMENT FUNCTION
1802:..\src/command_processing.c **** //==============================================================================
1803:..\src/command_processing.c **** 
1804:..\src/command_processing.c **** void sendAcknowledgment(uint8 value) {
 10296              		.loc 1 1804 0
 10297              		.cfi_startproc
 10298              		@ args = 0, pretend = 0, frame = 16
 10299              		@ frame_needed = 1, uses_anonymous_args = 0
 10300 0000 80B5     		push	{r7, lr}
 10301              		.cfi_def_cfa_offset 8
 10302              		.cfi_offset 7, -8
 10303              		.cfi_offset 14, -4
 10304 0002 84B0     		sub	sp, sp, #16
 10305              		.cfi_def_cfa_offset 24
 10306 0004 00AF     		add	r7, sp, #0
 10307              		.cfi_def_cfa_register 7
 10308 0006 0346     		mov	r3, r0
 10309 0008 FB71     		strb	r3, [r7, #7]
1805:..\src/command_processing.c ****     int packet_lenght = 2;
 10310              		.loc 1 1805 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 241


 10311 000a 0223     		movs	r3, #2
 10312 000c FB60     		str	r3, [r7, #12]
1806:..\src/command_processing.c ****     uint8 packet_data[2];
1807:..\src/command_processing.c **** 
1808:..\src/command_processing.c ****     packet_data[0] = value;
 10313              		.loc 1 1808 0
 10314 000e FB79     		ldrb	r3, [r7, #7]
 10315 0010 3B72     		strb	r3, [r7, #8]
1809:..\src/command_processing.c ****     packet_data[1] = value;
 10316              		.loc 1 1809 0
 10317 0012 FB79     		ldrb	r3, [r7, #7]
 10318 0014 7B72     		strb	r3, [r7, #9]
1810:..\src/command_processing.c **** 
1811:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 10319              		.loc 1 1811 0
 10320 0016 FB68     		ldr	r3, [r7, #12]
 10321 0018 9AB2     		uxth	r2, r3
 10322 001a 07F10803 		add	r3, r7, #8
 10323 001e 1146     		mov	r1, r2
 10324 0020 1846     		mov	r0, r3
 10325 0022 FFF7FEFF 		bl	commWrite
1812:..\src/command_processing.c **** }
 10326              		.loc 1 1812 0
 10327 0026 00BF     		nop
 10328 0028 1037     		adds	r7, r7, #16
 10329              		.cfi_def_cfa_offset 8
 10330 002a BD46     		mov	sp, r7
 10331              		.cfi_def_cfa_register 13
 10332              		@ sp needed
 10333 002c 80BD     		pop	{r7, pc}
 10334              		.cfi_endproc
 10335              	.LFE78:
 10336              		.size	sendAcknowledgment, .-sendAcknowledgment
 10337 002e 00BF     		.section	.text.memStore,"ax",%progbits
 10338              		.align	2
 10339              		.global	memStore
 10340              		.thumb
 10341              		.thumb_func
 10342              		.type	memStore, %function
 10343              	memStore:
 10344              	.LFB79:
1813:..\src/command_processing.c **** 
1814:..\src/command_processing.c **** //==============================================================================
1815:..\src/command_processing.c **** //                                                                  STORE MEMORY
1816:..\src/command_processing.c **** //==============================================================================
1817:..\src/command_processing.c **** 
1818:..\src/command_processing.c **** 
1819:..\src/command_processing.c **** uint8 memStore(int displacement)
1820:..\src/command_processing.c **** {
 10345              		.loc 1 1820 0
 10346              		.cfi_startproc
 10347              		@ args = 0, pretend = 0, frame = 24
 10348              		@ frame_needed = 1, uses_anonymous_args = 0
 10349 0000 80B5     		push	{r7, lr}
 10350              		.cfi_def_cfa_offset 8
 10351              		.cfi_offset 7, -8
 10352              		.cfi_offset 14, -4
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 242


 10353 0002 86B0     		sub	sp, sp, #24
 10354              		.cfi_def_cfa_offset 32
 10355 0004 00AF     		add	r7, sp, #0
 10356              		.cfi_def_cfa_register 7
 10357 0006 7860     		str	r0, [r7, #4]
1821:..\src/command_processing.c ****     int i;  // iterator
1822:..\src/command_processing.c ****     uint8 writeStatus;
1823:..\src/command_processing.c ****     int pages;
1824:..\src/command_processing.c ****     uint8 ret_val = 1;
 10358              		.loc 1 1824 0
 10359 0008 0123     		movs	r3, #1
 10360 000a FB74     		strb	r3, [r7, #19]
1825:..\src/command_processing.c **** 
1826:..\src/command_processing.c ****     // Disable Interrupt
1827:..\src/command_processing.c ****     ISR_RS485_RX_Disable();
 10361              		.loc 1 1827 0
 10362 000c FFF7FEFF 		bl	ISR_RS485_RX_Disable
1828:..\src/command_processing.c **** 
1829:..\src/command_processing.c ****     // Stop motor
1830:..\src/command_processing.c ****     PWM_MOTORS_WriteCompare(0);
 10363              		.loc 1 1830 0
 10364 0010 0020     		movs	r0, #0
 10365 0012 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare
1831:..\src/command_processing.c **** 
1832:..\src/command_processing.c ****     // Retrieve temperature for better writing performance
1833:..\src/command_processing.c ****     CySetTemp();
 10366              		.loc 1 1833 0
 10367 0016 FFF7FEFF 		bl	CySetTemp
1834:..\src/command_processing.c **** 
1835:..\src/command_processing.c ****     memcpy( &c_mem, &g_mem, sizeof(g_mem) );
 10368              		.loc 1 1835 0
 10369 001a 1D4A     		ldr	r2, .L475
 10370 001c 1D4B     		ldr	r3, .L475+4
 10371 001e 1046     		mov	r0, r2
 10372 0020 1946     		mov	r1, r3
 10373 0022 4FF49873 		mov	r3, #304
 10374 0026 1A46     		mov	r2, r3
 10375 0028 FFF7FEFF 		bl	memcpy
1836:..\src/command_processing.c **** 
1837:..\src/command_processing.c ****     pages = sizeof(g_mem) / 16 + (sizeof(g_mem) % 16 > 0);
 10376              		.loc 1 1837 0
 10377 002c 1323     		movs	r3, #19
 10378 002e FB60     		str	r3, [r7, #12]
1838:..\src/command_processing.c **** 
1839:..\src/command_processing.c ****     for(i = 0; i < pages; ++i) {
 10379              		.loc 1 1839 0
 10380 0030 0023     		movs	r3, #0
 10381 0032 7B61     		str	r3, [r7, #20]
 10382 0034 18E0     		b	.L470
 10383              	.L473:
1840:..\src/command_processing.c ****         writeStatus = EEPROM_Write(&g_mem.flag + 16 * i, i + displacement);
 10384              		.loc 1 1840 0
 10385 0036 7B69     		ldr	r3, [r7, #20]
 10386 0038 1B01     		lsls	r3, r3, #4
 10387 003a 1A46     		mov	r2, r3
 10388 003c 154B     		ldr	r3, .L475+4
 10389 003e D018     		adds	r0, r2, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 243


 10390 0040 7B69     		ldr	r3, [r7, #20]
 10391 0042 DAB2     		uxtb	r2, r3
 10392 0044 7B68     		ldr	r3, [r7, #4]
 10393 0046 DBB2     		uxtb	r3, r3
 10394 0048 1344     		add	r3, r3, r2
 10395 004a DBB2     		uxtb	r3, r3
 10396 004c 1946     		mov	r1, r3
 10397 004e FFF7FEFF 		bl	EEPROM_Write
 10398 0052 0346     		mov	r3, r0
 10399 0054 FB72     		strb	r3, [r7, #11]
1841:..\src/command_processing.c ****         if(writeStatus != CYRET_SUCCESS) {
 10400              		.loc 1 1841 0
 10401 0056 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 10402 0058 002B     		cmp	r3, #0
 10403 005a 02D0     		beq	.L471
1842:..\src/command_processing.c ****             ret_val = 0;
 10404              		.loc 1 1842 0
 10405 005c 0023     		movs	r3, #0
 10406 005e FB74     		strb	r3, [r7, #19]
1843:..\src/command_processing.c ****             break;
 10407              		.loc 1 1843 0
 10408 0060 06E0     		b	.L472
 10409              	.L471:
1839:..\src/command_processing.c ****         writeStatus = EEPROM_Write(&g_mem.flag + 16 * i, i + displacement);
 10410              		.loc 1 1839 0 discriminator 2
 10411 0062 7B69     		ldr	r3, [r7, #20]
 10412 0064 0133     		adds	r3, r3, #1
 10413 0066 7B61     		str	r3, [r7, #20]
 10414              	.L470:
1839:..\src/command_processing.c ****         writeStatus = EEPROM_Write(&g_mem.flag + 16 * i, i + displacement);
 10415              		.loc 1 1839 0 is_stmt 0 discriminator 1
 10416 0068 7A69     		ldr	r2, [r7, #20]
 10417 006a FB68     		ldr	r3, [r7, #12]
 10418 006c 9A42     		cmp	r2, r3
 10419 006e E2DB     		blt	.L473
 10420              	.L472:
1844:..\src/command_processing.c ****         }
1845:..\src/command_processing.c ****     }
1846:..\src/command_processing.c **** 
1847:..\src/command_processing.c ****     memcpy( &g_mem, &c_mem, sizeof(g_mem) );
 10421              		.loc 1 1847 0 is_stmt 1
 10422 0070 084A     		ldr	r2, .L475+4
 10423 0072 074B     		ldr	r3, .L475
 10424 0074 1046     		mov	r0, r2
 10425 0076 1946     		mov	r1, r3
 10426 0078 4FF49873 		mov	r3, #304
 10427 007c 1A46     		mov	r2, r3
 10428 007e FFF7FEFF 		bl	memcpy
1848:..\src/command_processing.c **** 
1849:..\src/command_processing.c ****     // Re-Enable Interrupt
1850:..\src/command_processing.c ****     ISR_RS485_RX_Enable();
 10429              		.loc 1 1850 0
 10430 0082 FFF7FEFF 		bl	ISR_RS485_RX_Enable
1851:..\src/command_processing.c **** 
1852:..\src/command_processing.c ****     return ret_val;
 10431              		.loc 1 1852 0
 10432 0086 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 244


1853:..\src/command_processing.c **** }
 10433              		.loc 1 1853 0
 10434 0088 1846     		mov	r0, r3
 10435 008a 1837     		adds	r7, r7, #24
 10436              		.cfi_def_cfa_offset 8
 10437 008c BD46     		mov	sp, r7
 10438              		.cfi_def_cfa_register 13
 10439              		@ sp needed
 10440 008e 80BD     		pop	{r7, pc}
 10441              	.L476:
 10442              		.align	2
 10443              	.L475:
 10444 0090 00000000 		.word	c_mem
 10445 0094 00000000 		.word	g_mem
 10446              		.cfi_endproc
 10447              	.LFE79:
 10448              		.size	memStore, .-memStore
 10449              		.section	.text.memRecall,"ax",%progbits
 10450              		.align	2
 10451              		.global	memRecall
 10452              		.thumb
 10453              		.thumb_func
 10454              		.type	memRecall, %function
 10455              	memRecall:
 10456              	.LFB80:
1854:..\src/command_processing.c **** 
1855:..\src/command_processing.c **** 
1856:..\src/command_processing.c **** //==============================================================================
1857:..\src/command_processing.c **** //                                                                 RECALL MEMORY
1858:..\src/command_processing.c **** //==============================================================================
1859:..\src/command_processing.c **** 
1860:..\src/command_processing.c **** 
1861:..\src/command_processing.c **** void memRecall(void)
1862:..\src/command_processing.c **** {
 10457              		.loc 1 1862 0
 10458              		.cfi_startproc
 10459              		@ args = 0, pretend = 0, frame = 8
 10460              		@ frame_needed = 1, uses_anonymous_args = 0
 10461 0000 80B5     		push	{r7, lr}
 10462              		.cfi_def_cfa_offset 8
 10463              		.cfi_offset 7, -8
 10464              		.cfi_offset 14, -4
 10465 0002 82B0     		sub	sp, sp, #8
 10466              		.cfi_def_cfa_offset 16
 10467 0004 00AF     		add	r7, sp, #0
 10468              		.cfi_def_cfa_register 7
1863:..\src/command_processing.c ****     uint16 i;
1864:..\src/command_processing.c **** 
1865:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 10469              		.loc 1 1865 0
 10470 0006 0023     		movs	r3, #0
 10471 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 10472 000a 0CE0     		b	.L478
 10473              	.L479:
1866:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 10474              		.loc 1 1866 0 discriminator 3
 10475 000c FB88     		ldrh	r3, [r7, #6]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 245


 10476 000e 124A     		ldr	r2, .L483
 10477 0010 1344     		add	r3, r3, r2
 10478 0012 124A     		ldr	r2, .L483+4
 10479 0014 1168     		ldr	r1, [r2]
 10480 0016 FA88     		ldrh	r2, [r7, #6]
 10481 0018 0A44     		add	r2, r2, r1
 10482 001a 1278     		ldrb	r2, [r2]
 10483 001c D2B2     		uxtb	r2, r2
 10484 001e 1A70     		strb	r2, [r3]
1865:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 10485              		.loc 1 1865 0 discriminator 3
 10486 0020 FB88     		ldrh	r3, [r7, #6]
 10487 0022 0133     		adds	r3, r3, #1
 10488 0024 FB80     		strh	r3, [r7, #6]	@ movhi
 10489              	.L478:
1865:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 10490              		.loc 1 1865 0 is_stmt 0 discriminator 1
 10491 0026 FB88     		ldrh	r3, [r7, #6]
 10492 0028 B3F5987F 		cmp	r3, #304
 10493 002c EED3     		bcc	.L479
1867:..\src/command_processing.c ****     }
1868:..\src/command_processing.c **** 
1869:..\src/command_processing.c ****     //check for initialization
1870:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 10494              		.loc 1 1870 0 is_stmt 1
 10495 002e 0A4B     		ldr	r3, .L483
 10496 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10497 0032 002B     		cmp	r3, #0
 10498 0034 02D1     		bne	.L480
1871:..\src/command_processing.c ****         memRestore();
 10499              		.loc 1 1871 0
 10500 0036 FFF7FEFF 		bl	memRestore
1872:..\src/command_processing.c ****     } else {
1873:..\src/command_processing.c ****         memcpy( &c_mem, &g_mem, sizeof(g_mem) );
1874:..\src/command_processing.c ****     }
1875:..\src/command_processing.c **** }
 10501              		.loc 1 1875 0
 10502 003a 08E0     		b	.L482
 10503              	.L480:
1873:..\src/command_processing.c ****     }
 10504              		.loc 1 1873 0
 10505 003c 084A     		ldr	r2, .L483+8
 10506 003e 064B     		ldr	r3, .L483
 10507 0040 1046     		mov	r0, r2
 10508 0042 1946     		mov	r1, r3
 10509 0044 4FF49873 		mov	r3, #304
 10510 0048 1A46     		mov	r2, r3
 10511 004a FFF7FEFF 		bl	memcpy
 10512              	.L482:
 10513              		.loc 1 1875 0
 10514 004e 00BF     		nop
 10515 0050 0837     		adds	r7, r7, #8
 10516              		.cfi_def_cfa_offset 8
 10517 0052 BD46     		mov	sp, r7
 10518              		.cfi_def_cfa_register 13
 10519              		@ sp needed
 10520 0054 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 246


 10521              	.L484:
 10522 0056 00BF     		.align	2
 10523              	.L483:
 10524 0058 00000000 		.word	g_mem
 10525 005c 00000000 		.word	EEPROM_ADDR
 10526 0060 00000000 		.word	c_mem
 10527              		.cfi_endproc
 10528              	.LFE80:
 10529              		.size	memRecall, .-memRecall
 10530              		.section	.text.memRestore,"ax",%progbits
 10531              		.align	2
 10532              		.global	memRestore
 10533              		.thumb
 10534              		.thumb_func
 10535              		.type	memRestore, %function
 10536              	memRestore:
 10537              	.LFB81:
1876:..\src/command_processing.c **** 
1877:..\src/command_processing.c **** 
1878:..\src/command_processing.c **** //==============================================================================
1879:..\src/command_processing.c **** //                                                                RESTORE MEMORY
1880:..\src/command_processing.c **** //==============================================================================
1881:..\src/command_processing.c **** 
1882:..\src/command_processing.c **** 
1883:..\src/command_processing.c **** uint8 memRestore(void) {
 10538              		.loc 1 1883 0
 10539              		.cfi_startproc
 10540              		@ args = 0, pretend = 0, frame = 8
 10541              		@ frame_needed = 1, uses_anonymous_args = 0
 10542 0000 80B5     		push	{r7, lr}
 10543              		.cfi_def_cfa_offset 8
 10544              		.cfi_offset 7, -8
 10545              		.cfi_offset 14, -4
 10546 0002 82B0     		sub	sp, sp, #8
 10547              		.cfi_def_cfa_offset 16
 10548 0004 00AF     		add	r7, sp, #0
 10549              		.cfi_def_cfa_register 7
1884:..\src/command_processing.c ****     uint16 i;
1885:..\src/command_processing.c **** 
1886:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 10550              		.loc 1 1886 0
 10551 0006 0023     		movs	r3, #0
 10552 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 10553 000a 0EE0     		b	.L486
 10554              	.L487:
1887:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 10555              		.loc 1 1887 0 discriminator 3
 10556 000c FB88     		ldrh	r3, [r7, #6]
 10557 000e 114A     		ldr	r2, .L490
 10558 0010 1344     		add	r3, r3, r2
 10559 0012 114A     		ldr	r2, .L490+4
 10560 0014 1168     		ldr	r1, [r2]
 10561 0016 FA88     		ldrh	r2, [r7, #6]
 10562 0018 02F54872 		add	r2, r2, #800
 10563 001c 0A44     		add	r2, r2, r1
 10564 001e 1278     		ldrb	r2, [r2]
 10565 0020 D2B2     		uxtb	r2, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 247


 10566 0022 1A70     		strb	r2, [r3]
1886:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 10567              		.loc 1 1886 0 discriminator 3
 10568 0024 FB88     		ldrh	r3, [r7, #6]
 10569 0026 0133     		adds	r3, r3, #1
 10570 0028 FB80     		strh	r3, [r7, #6]	@ movhi
 10571              	.L486:
1886:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 10572              		.loc 1 1886 0 is_stmt 0 discriminator 1
 10573 002a FB88     		ldrh	r3, [r7, #6]
 10574 002c B3F5987F 		cmp	r3, #304
 10575 0030 ECD3     		bcc	.L487
1888:..\src/command_processing.c ****     }
1889:..\src/command_processing.c **** 
1890:..\src/command_processing.c ****     //check for initialization
1891:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 10576              		.loc 1 1891 0 is_stmt 1
 10577 0032 084B     		ldr	r3, .L490
 10578 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10579 0036 002B     		cmp	r3, #0
 10580 0038 03D1     		bne	.L488
1892:..\src/command_processing.c ****         return memInit();
 10581              		.loc 1 1892 0
 10582 003a FFF7FEFF 		bl	memInit
 10583 003e 0346     		mov	r3, r0
 10584 0040 03E0     		b	.L489
 10585              	.L488:
1893:..\src/command_processing.c ****     } else {
1894:..\src/command_processing.c ****         return memStore(0);
 10586              		.loc 1 1894 0
 10587 0042 0020     		movs	r0, #0
 10588 0044 FFF7FEFF 		bl	memStore
 10589 0048 0346     		mov	r3, r0
 10590              	.L489:
1895:..\src/command_processing.c ****     }
1896:..\src/command_processing.c **** }
 10591              		.loc 1 1896 0
 10592 004a 1846     		mov	r0, r3
 10593 004c 0837     		adds	r7, r7, #8
 10594              		.cfi_def_cfa_offset 8
 10595 004e BD46     		mov	sp, r7
 10596              		.cfi_def_cfa_register 13
 10597              		@ sp needed
 10598 0050 80BD     		pop	{r7, pc}
 10599              	.L491:
 10600 0052 00BF     		.align	2
 10601              	.L490:
 10602 0054 00000000 		.word	g_mem
 10603 0058 00000000 		.word	EEPROM_ADDR
 10604              		.cfi_endproc
 10605              	.LFE81:
 10606              		.size	memRestore, .-memRestore
 10607              		.section	.text.memInit,"ax",%progbits
 10608              		.align	2
 10609              		.global	memInit
 10610              		.thumb
 10611              		.thumb_func
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 248


 10612              		.type	memInit, %function
 10613              	memInit:
 10614              	.LFB82:
1897:..\src/command_processing.c **** 
1898:..\src/command_processing.c **** //==============================================================================
1899:..\src/command_processing.c **** //                                                                   MEMORY INIT
1900:..\src/command_processing.c **** //==============================================================================
1901:..\src/command_processing.c **** 
1902:..\src/command_processing.c **** uint8 memInit(void)
1903:..\src/command_processing.c **** {
 10615              		.loc 1 1903 0
 10616              		.cfi_startproc
 10617              		@ args = 0, pretend = 0, frame = 8
 10618              		@ frame_needed = 1, uses_anonymous_args = 0
 10619 0000 80B5     		push	{r7, lr}
 10620              		.cfi_def_cfa_offset 8
 10621              		.cfi_offset 7, -8
 10622              		.cfi_offset 14, -4
 10623 0002 82B0     		sub	sp, sp, #8
 10624              		.cfi_def_cfa_offset 16
 10625 0004 00AF     		add	r7, sp, #0
 10626              		.cfi_def_cfa_register 7
1904:..\src/command_processing.c ****     uint8 i;
1905:..\src/command_processing.c **** 
1906:..\src/command_processing.c ****     //initialize memory settings
1907:..\src/command_processing.c ****     g_mem.id            = 1;
 10627              		.loc 1 1907 0
 10628 0006 BC4B     		ldr	r3, .L506
 10629 0008 0122     		movs	r2, #1
 10630 000a 5A70     		strb	r2, [r3, #1]
1908:..\src/command_processing.c **** 
1909:..\src/command_processing.c ****     g_mem.k_p           = 0.015 * 65536;
 10631              		.loc 1 1909 0
 10632 000c BA4B     		ldr	r3, .L506
 10633 000e 40F2D732 		movw	r2, #983
 10634 0012 5A60     		str	r2, [r3, #4]
1910:..\src/command_processing.c ****     g_mem.k_i           =     0 * 65536;
 10635              		.loc 1 1910 0
 10636 0014 B84B     		ldr	r3, .L506
 10637 0016 0022     		movs	r2, #0
 10638 0018 9A60     		str	r2, [r3, #8]
1911:..\src/command_processing.c ****     g_mem.k_d           = 0.007 * 65536;  // changed in order to avoid metallic clatter, previous v
 10639              		.loc 1 1911 0
 10640 001a B74B     		ldr	r3, .L506
 10641 001c 4FF4E572 		mov	r2, #458
 10642 0020 DA60     		str	r2, [r3, #12]
1912:..\src/command_processing.c ****     g_mem.k_p_c         =     1 * 65536;
 10643              		.loc 1 1912 0
 10644 0022 B54B     		ldr	r3, .L506
 10645 0024 4FF48032 		mov	r2, #65536
 10646 0028 1A61     		str	r2, [r3, #16]
1913:..\src/command_processing.c ****     g_mem.k_i_c         = 0.001 * 65536;
 10647              		.loc 1 1913 0
 10648 002a B34B     		ldr	r3, .L506
 10649 002c 4122     		movs	r2, #65
 10650 002e 5A61     		str	r2, [r3, #20]
1914:..\src/command_processing.c ****     g_mem.k_d_c         =     0 * 65536;
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 249


 10651              		.loc 1 1914 0
 10652 0030 B14B     		ldr	r3, .L506
 10653 0032 0022     		movs	r2, #0
 10654 0034 9A61     		str	r2, [r3, #24]
1915:..\src/command_processing.c **** 
1916:..\src/command_processing.c ****     g_mem.k_p_dl        =   0.1 * 65536;
 10655              		.loc 1 1916 0
 10656 0036 B04B     		ldr	r3, .L506
 10657 0038 41F69912 		movw	r2, #6553
 10658 003c DA61     		str	r2, [r3, #28]
1917:..\src/command_processing.c ****     g_mem.k_i_dl        =     0 * 65536;
 10659              		.loc 1 1917 0
 10660 003e AE4B     		ldr	r3, .L506
 10661 0040 0022     		movs	r2, #0
 10662 0042 1A62     		str	r2, [r3, #32]
1918:..\src/command_processing.c ****     g_mem.k_d_dl        =     0 * 65536;
 10663              		.loc 1 1918 0
 10664 0044 AC4B     		ldr	r3, .L506
 10665 0046 0022     		movs	r2, #0
 10666 0048 5A62     		str	r2, [r3, #36]
1919:..\src/command_processing.c ****     g_mem.k_p_c_dl      =   0.3 * 65536;
 10667              		.loc 1 1919 0
 10668 004a AB4B     		ldr	r3, .L506
 10669 004c 44F6CC42 		movw	r2, #19660
 10670 0050 9A62     		str	r2, [r3, #40]
1920:..\src/command_processing.c ****     g_mem.k_i_c_dl      =0.0002 * 65536;
 10671              		.loc 1 1920 0
 10672 0052 A94B     		ldr	r3, .L506
 10673 0054 0D22     		movs	r2, #13
 10674 0056 DA62     		str	r2, [r3, #44]
1921:..\src/command_processing.c ****     g_mem.k_d_c_dl      =     0 * 65536;
 10675              		.loc 1 1921 0
 10676 0058 A74B     		ldr	r3, .L506
 10677 005a 0022     		movs	r2, #0
 10678 005c 1A63     		str	r2, [r3, #48]
1922:..\src/command_processing.c **** 
1923:..\src/command_processing.c ****     g_mem.activ         = 1;
 10679              		.loc 1 1923 0
 10680 005e A64B     		ldr	r3, .L506
 10681 0060 0122     		movs	r2, #1
 10682 0062 83F83420 		strb	r2, [r3, #52]
1924:..\src/command_processing.c ****     g_mem.input_mode    = INPUT_MODE_EMG_FCFS;
 10683              		.loc 1 1924 0
 10684 0066 A44B     		ldr	r3, .L506
 10685 0068 0422     		movs	r2, #4
 10686 006a 83F83520 		strb	r2, [r3, #53]
1925:..\src/command_processing.c ****     g_mem.control_mode  = CONTROL_ANGLE;
 10687              		.loc 1 1925 0
 10688 006e A24B     		ldr	r3, .L506
 10689 0070 0022     		movs	r2, #0
 10690 0072 83F83620 		strb	r2, [r3, #54]
1926:..\src/command_processing.c **** 
1927:..\src/command_processing.c ****     g_mem.pos_lim_flag = 1;
 10691              		.loc 1 1927 0
 10692 0076 A04B     		ldr	r3, .L506
 10693 0078 0122     		movs	r2, #1
 10694 007a 83F85420 		strb	r2, [r3, #84]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 250


1928:..\src/command_processing.c **** 
1929:..\src/command_processing.c ****     g_mem.activate_pwm_rescaling = MAXON_24V;           //rescaling active for 12V motor
 10695              		.loc 1 1929 0
 10696 007e 9E4B     		ldr	r3, .L506
 10697 0080 0022     		movs	r2, #0
 10698 0082 83F87B20 		strb	r2, [r3, #123]
1930:..\src/command_processing.c **** 
1931:..\src/command_processing.c ****     g_mem.pos_lim_inf = 0;
 10699              		.loc 1 1931 0
 10700 0086 9C4B     		ldr	r3, .L506
 10701 0088 0022     		movs	r2, #0
 10702 008a 9A65     		str	r2, [r3, #88]
1932:..\src/command_processing.c ****     g_mem.pos_lim_sup = (int32)22000 << g_mem.res[0];
 10703              		.loc 1 1932 0
 10704 008c 9A4B     		ldr	r3, .L506
 10705 008e 93F83730 		ldrb	r3, [r3, #55]	@ zero_extendqisi2
 10706 0092 1A46     		mov	r2, r3
 10707 0094 45F2F053 		movw	r3, #22000
 10708 0098 9340     		lsls	r3, r3, r2
 10709 009a 974A     		ldr	r2, .L506
 10710 009c D365     		str	r3, [r2, #92]
1933:..\src/command_processing.c **** 
1934:..\src/command_processing.c ****     for(i = 0; i < NUM_OF_SENSORS; ++i)
 10711              		.loc 1 1934 0
 10712 009e 0023     		movs	r3, #0
 10713 00a0 FB71     		strb	r3, [r7, #7]
 10714 00a2 16E0     		b	.L493
 10715              	.L494:
1935:..\src/command_processing.c ****     {
1936:..\src/command_processing.c ****         g_mem.res[i] = 3;
 10716              		.loc 1 1936 0 discriminator 3
 10717 00a4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10718 00a6 944A     		ldr	r2, .L506
 10719 00a8 1344     		add	r3, r3, r2
 10720 00aa 0322     		movs	r2, #3
 10721 00ac 83F83720 		strb	r2, [r3, #55]
1937:..\src/command_processing.c ****         g_mem.m_mult[i] = 1;
 10722              		.loc 1 1937 0 discriminator 3
 10723 00b0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10724 00b2 914A     		ldr	r2, .L506
 10725 00b4 1233     		adds	r3, r3, #18
 10726 00b6 4FF07E51 		mov	r1, #1065353216
 10727 00ba 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
1938:..\src/command_processing.c ****         g_mem.m_off[i] = (int32)0 << g_mem.res[i];
 10728              		.loc 1 1938 0 discriminator 3
 10729 00be FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10730 00c0 8D4A     		ldr	r2, .L506
 10731 00c2 0E33     		adds	r3, r3, #14
 10732 00c4 9B00     		lsls	r3, r3, #2
 10733 00c6 1344     		add	r3, r3, r2
 10734 00c8 0022     		movs	r2, #0
 10735 00ca 5A60     		str	r2, [r3, #4]
1934:..\src/command_processing.c ****     {
 10736              		.loc 1 1934 0 discriminator 3
 10737 00cc FB79     		ldrb	r3, [r7, #7]
 10738 00ce 0133     		adds	r3, r3, #1
 10739 00d0 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 251


 10740              	.L493:
1934:..\src/command_processing.c ****     {
 10741              		.loc 1 1934 0 is_stmt 0 discriminator 1
 10742 00d2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10743 00d4 022B     		cmp	r3, #2
 10744 00d6 E5D9     		bls	.L494
1939:..\src/command_processing.c ****     }
1940:..\src/command_processing.c **** 
1941:..\src/command_processing.c ****     g_mem.max_step_pos = 0;
 10745              		.loc 1 1941 0 is_stmt 1
 10746 00d8 874B     		ldr	r3, .L506
 10747 00da 0022     		movs	r2, #0
 10748 00dc 5A66     		str	r2, [r3, #100]
1942:..\src/command_processing.c ****     g_mem.max_step_neg = 0;
 10749              		.loc 1 1942 0
 10750 00de 864B     		ldr	r3, .L506
 10751 00e0 0022     		movs	r2, #0
 10752 00e2 1A66     		str	r2, [r3, #96]
1943:..\src/command_processing.c **** 
1944:..\src/command_processing.c ****     g_mem.current_limit = DEFAULT_CURRENT_LIMIT;
 10753              		.loc 1 1944 0
 10754 00e4 844B     		ldr	r3, .L506
 10755 00e6 40F2DC52 		movw	r2, #1500
 10756 00ea A3F86820 		strh	r2, [r3, #104]	@ movhi
1945:..\src/command_processing.c **** 
1946:..\src/command_processing.c ****     // EMG calibration enabled by default
1947:..\src/command_processing.c ****     g_mem.emg_calibration_flag = 0;
 10757              		.loc 1 1947 0
 10758 00ee 824B     		ldr	r3, .L506
 10759 00f0 0022     		movs	r2, #0
 10760 00f2 83F86E20 		strb	r2, [r3, #110]
1948:..\src/command_processing.c **** 
1949:..\src/command_processing.c ****     g_mem.emg_max_value[0] = 1024;
 10761              		.loc 1 1949 0
 10762 00f6 804B     		ldr	r3, .L506
 10763 00f8 4FF48062 		mov	r2, #1024
 10764 00fc 1A67     		str	r2, [r3, #112]
1950:..\src/command_processing.c ****     g_mem.emg_max_value[1] = 1024;
 10765              		.loc 1 1950 0
 10766 00fe 7E4B     		ldr	r3, .L506
 10767 0100 4FF48062 		mov	r2, #1024
 10768 0104 5A67     		str	r2, [r3, #116]
1951:..\src/command_processing.c **** 
1952:..\src/command_processing.c ****     g_mem.emg_threshold[0] = 200;
 10769              		.loc 1 1952 0
 10770 0106 7C4B     		ldr	r3, .L506
 10771 0108 C822     		movs	r2, #200
 10772 010a A3F86A20 		strh	r2, [r3, #106]	@ movhi
1953:..\src/command_processing.c ****     g_mem.emg_threshold[1] = 200;
 10773              		.loc 1 1953 0
 10774 010e 7A4B     		ldr	r3, .L506
 10775 0110 C822     		movs	r2, #200
 10776 0112 A3F86C20 		strh	r2, [r3, #108]	@ movhi
1954:..\src/command_processing.c **** 
1955:..\src/command_processing.c ****     g_mem.emg_speed = 100;
 10777              		.loc 1 1955 0
 10778 0116 784B     		ldr	r3, .L506
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 252


 10779 0118 6422     		movs	r2, #100
 10780 011a 83F87820 		strb	r2, [r3, #120]
1956:..\src/command_processing.c **** 
1957:..\src/command_processing.c ****     g_mem.double_encoder_on_off = 0;
 10781              		.loc 1 1957 0
 10782 011e 764B     		ldr	r3, .L506
 10783 0120 0022     		movs	r2, #0
 10784 0122 83F87920 		strb	r2, [r3, #121]
1958:..\src/command_processing.c ****     g_mem.motor_handle_ratio = 22;
 10785              		.loc 1 1958 0
 10786 0126 744B     		ldr	r3, .L506
 10787 0128 1622     		movs	r2, #22
 10788 012a 83F87A20 		strb	r2, [r3, #122]
1959:..\src/command_processing.c ****     
1960:..\src/command_processing.c ****     for(i = 0; i < LOOKUP_DIM; i++) {
 10789              		.loc 1 1960 0
 10790 012e 0023     		movs	r3, #0
 10791 0130 FB71     		strb	r3, [r7, #7]
 10792 0132 0AE0     		b	.L495
 10793              	.L496:
1961:..\src/command_processing.c ****         g_mem.curr_lookup[i] = 0;
 10794              		.loc 1 1961 0 discriminator 3
 10795 0134 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10796 0136 704A     		ldr	r2, .L506
 10797 0138 1E33     		adds	r3, r3, #30
 10798 013a 9B00     		lsls	r3, r3, #2
 10799 013c 1344     		add	r3, r3, r2
 10800 013e 4FF00002 		mov	r2, #0
 10801 0142 5A60     		str	r2, [r3, #4]	@ float
1960:..\src/command_processing.c ****         g_mem.curr_lookup[i] = 0;
 10802              		.loc 1 1960 0 discriminator 3
 10803 0144 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10804 0146 0133     		adds	r3, r3, #1
 10805 0148 FB71     		strb	r3, [r7, #7]
 10806              	.L495:
1960:..\src/command_processing.c ****         g_mem.curr_lookup[i] = 0;
 10807              		.loc 1 1960 0 is_stmt 0 discriminator 1
 10808 014a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10809 014c 052B     		cmp	r3, #5
 10810 014e F1D9     		bls	.L496
1962:..\src/command_processing.c ****     }
1963:..\src/command_processing.c **** 
1964:..\src/command_processing.c ****     //Initialize rest position parameters        
1965:..\src/command_processing.c ****     g_mem.rest_pos = (int32)7000 << g_mem.res[0]; // 56000
 10811              		.loc 1 1965 0 is_stmt 1
 10812 0150 694B     		ldr	r3, .L506
 10813 0152 93F83730 		ldrb	r3, [r3, #55]	@ zero_extendqisi2
 10814 0156 1A46     		mov	r2, r3
 10815 0158 41F65833 		movw	r3, #7000
 10816 015c 9340     		lsls	r3, r3, r2
 10817 015e 664A     		ldr	r2, .L506
 10818 0160 C2F89830 		str	r3, [r2, #152]
1966:..\src/command_processing.c ****     g_mem.rest_delay = 5000;
 10819              		.loc 1 1966 0
 10820 0164 644B     		ldr	r3, .L506
 10821 0166 654A     		ldr	r2, .L506+4
 10822 0168 C3F89C20 		str	r2, [r3, #156]	@ float
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 253


1967:..\src/command_processing.c ****     g_mem.rest_vel = 2; //*1000
 10823              		.loc 1 1967 0
 10824 016c 624B     		ldr	r3, .L506
 10825 016e 4FF08042 		mov	r2, #1073741824
 10826 0172 C3F8A020 		str	r2, [r3, #160]	@ float
1968:..\src/command_processing.c ****     g_mem.rest_ratio = 5.0;
 10827              		.loc 1 1968 0
 10828 0176 604B     		ldr	r3, .L506
 10829 0178 614A     		ldr	r2, .L506+8
 10830 017a C3F8A420 		str	r2, [r3, #164]	@ float
1969:..\src/command_processing.c ****     
1970:..\src/command_processing.c ****     g_mem.rest_position_flag = 0;
 10831              		.loc 1 1970 0
 10832 017e 5E4B     		ldr	r3, .L506
 10833 0180 0022     		movs	r2, #0
 10834 0182 83F8A820 		strb	r2, [r3, #168]
1971:..\src/command_processing.c ****     g_mem.switch_emg = 0;
 10835              		.loc 1 1971 0
 10836 0186 5C4B     		ldr	r3, .L506
 10837 0188 0022     		movs	r2, #0
 10838 018a 83F8A920 		strb	r2, [r3, #169]
1972:..\src/command_processing.c ****     for (i=0; i<22; i++){
 10839              		.loc 1 1972 0
 10840 018e 0023     		movs	r3, #0
 10841 0190 FB71     		strb	r3, [r7, #7]
 10842 0192 08E0     		b	.L497
 10843              	.L498:
1973:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 10844              		.loc 1 1973 0 discriminator 3
 10845 0194 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10846 0196 584A     		ldr	r2, .L506
 10847 0198 1344     		add	r3, r3, r2
 10848 019a 0022     		movs	r2, #0
 10849 019c 83F8AA20 		strb	r2, [r3, #170]
1972:..\src/command_processing.c ****     for (i=0; i<22; i++){
 10850              		.loc 1 1972 0 discriminator 3
 10851 01a0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10852 01a2 0133     		adds	r3, r3, #1
 10853 01a4 FB71     		strb	r3, [r7, #7]
 10854              	.L497:
1972:..\src/command_processing.c ****     for (i=0; i<22; i++){
 10855              		.loc 1 1972 0 is_stmt 0 discriminator 1
 10856 01a6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10857 01a8 152B     		cmp	r3, #21
 10858 01aa F3D9     		bls	.L498
1974:..\src/command_processing.c ****     }
1975:..\src/command_processing.c **** 
1976:..\src/command_processing.c ****     //Initialize counters        
1977:..\src/command_processing.c ****     reset_counters();
 10859              		.loc 1 1977 0 is_stmt 1
 10860 01ac FFF7FEFF 		bl	reset_counters
1978:..\src/command_processing.c ****     for (i=0; i<10; i++){
 10861              		.loc 1 1978 0
 10862 01b0 0023     		movs	r3, #0
 10863 01b2 FB71     		strb	r3, [r7, #7]
 10864 01b4 08E0     		b	.L499
 10865              	.L500:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 254


1979:..\src/command_processing.c ****         g_mem.unused_bytes1[i] = 0;
 10866              		.loc 1 1979 0 discriminator 3
 10867 01b6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10868 01b8 4F4A     		ldr	r2, .L506
 10869 01ba 1344     		add	r3, r3, r2
 10870 01bc 0022     		movs	r2, #0
 10871 01be 83F81621 		strb	r2, [r3, #278]
1978:..\src/command_processing.c ****     for (i=0; i<10; i++){
 10872              		.loc 1 1978 0 discriminator 3
 10873 01c2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10874 01c4 0133     		adds	r3, r3, #1
 10875 01c6 FB71     		strb	r3, [r7, #7]
 10876              	.L499:
1978:..\src/command_processing.c ****     for (i=0; i<10; i++){
 10877              		.loc 1 1978 0 is_stmt 0 discriminator 1
 10878 01c8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10879 01ca 092B     		cmp	r3, #9
 10880 01cc F3D9     		bls	.L500
1980:..\src/command_processing.c ****     }
1981:..\src/command_processing.c ****     
1982:..\src/command_processing.c ****     // Set date of maintenance from RTC
1983:..\src/command_processing.c ****     i = DS1302_read(DS1302_DATE_RD);
 10881              		.loc 1 1983 0 is_stmt 1
 10882 01ce 8720     		movs	r0, #135
 10883 01d0 FFF7FEFF 		bl	DS1302_read
 10884 01d4 0346     		mov	r3, r0
 10885 01d6 FB71     		strb	r3, [r7, #7]
1984:..\src/command_processing.c ****     g_mem.maint_day = (i/16) * 10 + i%16;
 10886              		.loc 1 1984 0
 10887 01d8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10888 01da 1B09     		lsrs	r3, r3, #4
 10889 01dc DBB2     		uxtb	r3, r3
 10890 01de 1A46     		mov	r2, r3
 10891 01e0 9200     		lsls	r2, r2, #2
 10892 01e2 1344     		add	r3, r3, r2
 10893 01e4 5B00     		lsls	r3, r3, #1
 10894 01e6 DAB2     		uxtb	r2, r3
 10895 01e8 FB79     		ldrb	r3, [r7, #7]
 10896 01ea 03F00F03 		and	r3, r3, #15
 10897 01ee DBB2     		uxtb	r3, r3
 10898 01f0 1344     		add	r3, r3, r2
 10899 01f2 DAB2     		uxtb	r2, r3
 10900 01f4 404B     		ldr	r3, .L506
 10901 01f6 83F89520 		strb	r2, [r3, #149]
1985:..\src/command_processing.c ****     i = DS1302_read(DS1302_MONTH_RD);
 10902              		.loc 1 1985 0
 10903 01fa 8920     		movs	r0, #137
 10904 01fc FFF7FEFF 		bl	DS1302_read
 10905 0200 0346     		mov	r3, r0
 10906 0202 FB71     		strb	r3, [r7, #7]
1986:..\src/command_processing.c ****     g_mem.maint_month = (i/16) * 10 + i%16;
 10907              		.loc 1 1986 0
 10908 0204 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10909 0206 1B09     		lsrs	r3, r3, #4
 10910 0208 DBB2     		uxtb	r3, r3
 10911 020a 1A46     		mov	r2, r3
 10912 020c 9200     		lsls	r2, r2, #2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 255


 10913 020e 1344     		add	r3, r3, r2
 10914 0210 5B00     		lsls	r3, r3, #1
 10915 0212 DAB2     		uxtb	r2, r3
 10916 0214 FB79     		ldrb	r3, [r7, #7]
 10917 0216 03F00F03 		and	r3, r3, #15
 10918 021a DBB2     		uxtb	r3, r3
 10919 021c 1344     		add	r3, r3, r2
 10920 021e DAB2     		uxtb	r2, r3
 10921 0220 354B     		ldr	r3, .L506
 10922 0222 83F89620 		strb	r2, [r3, #150]
1987:..\src/command_processing.c ****     i = DS1302_read(DS1302_YEAR_RD);
 10923              		.loc 1 1987 0
 10924 0226 8D20     		movs	r0, #141
 10925 0228 FFF7FEFF 		bl	DS1302_read
 10926 022c 0346     		mov	r3, r0
 10927 022e FB71     		strb	r3, [r7, #7]
1988:..\src/command_processing.c ****     g_mem.maint_year = (i/16) * 10 + i%16;
 10928              		.loc 1 1988 0
 10929 0230 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10930 0232 1B09     		lsrs	r3, r3, #4
 10931 0234 DBB2     		uxtb	r3, r3
 10932 0236 1A46     		mov	r2, r3
 10933 0238 9200     		lsls	r2, r2, #2
 10934 023a 1344     		add	r3, r3, r2
 10935 023c 5B00     		lsls	r3, r3, #1
 10936 023e DAB2     		uxtb	r2, r3
 10937 0240 FB79     		ldrb	r3, [r7, #7]
 10938 0242 03F00F03 		and	r3, r3, #15
 10939 0246 DBB2     		uxtb	r3, r3
 10940 0248 1344     		add	r3, r3, r2
 10941 024a DAB2     		uxtb	r2, r3
 10942 024c 2A4B     		ldr	r3, .L506
 10943 024e 83F89720 		strb	r2, [r3, #151]
1989:..\src/command_processing.c **** 
1990:..\src/command_processing.c ****     // IMU Default value
1991:..\src/command_processing.c ****     for (i = 0; i< N_IMU_MAX; i++){
 10944              		.loc 1 1991 0
 10945 0252 0023     		movs	r3, #0
 10946 0254 FB71     		strb	r3, [r7, #7]
 10947 0256 34E0     		b	.L501
 10948              	.L502:
1992:..\src/command_processing.c ****         g_mem.IMU_conf[i][0] = 1;
 10949              		.loc 1 1992 0 discriminator 3
 10950 0258 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 10951 025a 2749     		ldr	r1, .L506
 10952 025c 1346     		mov	r3, r2
 10953 025e 9B00     		lsls	r3, r3, #2
 10954 0260 1344     		add	r3, r3, r2
 10955 0262 0B44     		add	r3, r3, r1
 10956 0264 03F22113 		addw	r3, r3, #289
 10957 0268 0122     		movs	r2, #1
 10958 026a 1A70     		strb	r2, [r3]
1993:..\src/command_processing.c ****         g_mem.IMU_conf[i][1] = 1;
 10959              		.loc 1 1993 0 discriminator 3
 10960 026c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 10961 026e 2249     		ldr	r1, .L506
 10962 0270 1346     		mov	r3, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 256


 10963 0272 9B00     		lsls	r3, r3, #2
 10964 0274 1344     		add	r3, r3, r2
 10965 0276 0B44     		add	r3, r3, r1
 10966 0278 03F59173 		add	r3, r3, #290
 10967 027c 0122     		movs	r2, #1
 10968 027e 1A70     		strb	r2, [r3]
1994:..\src/command_processing.c ****         g_mem.IMU_conf[i][2] = 0;
 10969              		.loc 1 1994 0 discriminator 3
 10970 0280 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 10971 0282 1D49     		ldr	r1, .L506
 10972 0284 1346     		mov	r3, r2
 10973 0286 9B00     		lsls	r3, r3, #2
 10974 0288 1344     		add	r3, r3, r2
 10975 028a 0B44     		add	r3, r3, r1
 10976 028c 03F22313 		addw	r3, r3, #291
 10977 0290 0022     		movs	r2, #0
 10978 0292 1A70     		strb	r2, [r3]
1995:..\src/command_processing.c ****         g_mem.IMU_conf[i][3] = 0;
 10979              		.loc 1 1995 0 discriminator 3
 10980 0294 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 10981 0296 1849     		ldr	r1, .L506
 10982 0298 1346     		mov	r3, r2
 10983 029a 9B00     		lsls	r3, r3, #2
 10984 029c 1344     		add	r3, r3, r2
 10985 029e 0B44     		add	r3, r3, r1
 10986 02a0 03F59273 		add	r3, r3, #292
 10987 02a4 0022     		movs	r2, #0
 10988 02a6 1A70     		strb	r2, [r3]
1996:..\src/command_processing.c ****         g_mem.IMU_conf[i][4] = 0;
 10989              		.loc 1 1996 0 discriminator 3
 10990 02a8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 10991 02aa 1349     		ldr	r1, .L506
 10992 02ac 1346     		mov	r3, r2
 10993 02ae 9B00     		lsls	r3, r3, #2
 10994 02b0 1344     		add	r3, r3, r2
 10995 02b2 0B44     		add	r3, r3, r1
 10996 02b4 03F22513 		addw	r3, r3, #293
 10997 02b8 0022     		movs	r2, #0
 10998 02ba 1A70     		strb	r2, [r3]
1991:..\src/command_processing.c ****         g_mem.IMU_conf[i][0] = 1;
 10999              		.loc 1 1991 0 discriminator 3
 11000 02bc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 11001 02be 0133     		adds	r3, r3, #1
 11002 02c0 FB71     		strb	r3, [r7, #7]
 11003              	.L501:
1991:..\src/command_processing.c ****         g_mem.IMU_conf[i][0] = 1;
 11004              		.loc 1 1991 0 is_stmt 0 discriminator 1
 11005 02c2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 11006 02c4 022B     		cmp	r3, #2
 11007 02c6 C7D9     		bls	.L502
1997:..\src/command_processing.c ****         //for (j=0; j< NUM_OF_DATA; j++) {
1998:..\src/command_processing.c ****         //    g_mem.IMU_conf[i][j] = 0;
1999:..\src/command_processing.c ****         //}
2000:..\src/command_processing.c ****     }
2001:..\src/command_processing.c ****     
2002:..\src/command_processing.c ****     // set the initialized flag to show EEPROM has been populated
2003:..\src/command_processing.c ****     g_mem.flag = TRUE;
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 257


 11008              		.loc 1 2003 0 is_stmt 1
 11009 02c8 0B4B     		ldr	r3, .L506
 11010 02ca 0122     		movs	r2, #1
 11011 02cc 1A70     		strb	r2, [r3]
2004:..\src/command_processing.c ****     
2005:..\src/command_processing.c ****     //write that configuration to EEPROM
2006:..\src/command_processing.c ****     return ( memStore(0) && memStore(DEFAULT_EEPROM_DISPLACEMENT) );
 11012              		.loc 1 2006 0
 11013 02ce 0020     		movs	r0, #0
 11014 02d0 FFF7FEFF 		bl	memStore
 11015 02d4 0346     		mov	r3, r0
 11016 02d6 002B     		cmp	r3, #0
 11017 02d8 07D0     		beq	.L503
 11018              		.loc 1 2006 0 is_stmt 0 discriminator 1
 11019 02da 3220     		movs	r0, #50
 11020 02dc FFF7FEFF 		bl	memStore
 11021 02e0 0346     		mov	r3, r0
 11022 02e2 002B     		cmp	r3, #0
 11023 02e4 01D0     		beq	.L503
 11024              		.loc 1 2006 0 discriminator 3
 11025 02e6 0123     		movs	r3, #1
 11026 02e8 00E0     		b	.L504
 11027              	.L503:
 11028              		.loc 1 2006 0 discriminator 4
 11029 02ea 0023     		movs	r3, #0
 11030              	.L504:
 11031              		.loc 1 2006 0 discriminator 6
 11032 02ec DBB2     		uxtb	r3, r3
2007:..\src/command_processing.c **** }
 11033              		.loc 1 2007 0 is_stmt 1 discriminator 6
 11034 02ee 1846     		mov	r0, r3
 11035 02f0 0837     		adds	r7, r7, #8
 11036              		.cfi_def_cfa_offset 8
 11037 02f2 BD46     		mov	sp, r7
 11038              		.cfi_def_cfa_register 13
 11039              		@ sp needed
 11040 02f4 80BD     		pop	{r7, pc}
 11041              	.L507:
 11042 02f6 00BF     		.align	2
 11043              	.L506:
 11044 02f8 00000000 		.word	g_mem
 11045 02fc 00409C45 		.word	1167867904
 11046 0300 0000A040 		.word	1084227584
 11047              		.cfi_endproc
 11048              	.LFE82:
 11049              		.size	memInit, .-memInit
 11050              		.section	.text.cmd_get_measurements,"ax",%progbits
 11051              		.align	2
 11052              		.global	cmd_get_measurements
 11053              		.thumb
 11054              		.thumb_func
 11055              		.type	cmd_get_measurements, %function
 11056              	cmd_get_measurements:
 11057              	.LFB83:
2008:..\src/command_processing.c **** 
2009:..\src/command_processing.c **** //==============================================================================
2010:..\src/command_processing.c **** //                                                    ROUTINE INTERRUPT FUNCTION
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 258


2011:..\src/command_processing.c **** //==============================================================================
2012:..\src/command_processing.c **** /**
2013:..\src/command_processing.c **** * Bunch of functions used on request from UART communication
2014:..\src/command_processing.c **** **/
2015:..\src/command_processing.c **** 
2016:..\src/command_processing.c **** void cmd_get_measurements(){
 11058              		.loc 1 2016 0
 11059              		.cfi_startproc
 11060              		@ args = 0, pretend = 0, frame = 16
 11061              		@ frame_needed = 1, uses_anonymous_args = 0
 11062 0000 80B5     		push	{r7, lr}
 11063              		.cfi_def_cfa_offset 8
 11064              		.cfi_offset 7, -8
 11065              		.cfi_offset 14, -4
 11066 0002 84B0     		sub	sp, sp, #16
 11067              		.cfi_def_cfa_offset 24
 11068 0004 00AF     		add	r7, sp, #0
 11069              		.cfi_def_cfa_register 7
2017:..\src/command_processing.c ****  
2018:..\src/command_processing.c ****     uint8 CYDATA index;
2019:..\src/command_processing.c ****     int16 aux_int16;
2020:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
2021:..\src/command_processing.c ****     
2022:..\src/command_processing.c ****     uint8 packet_data[8]; 
2023:..\src/command_processing.c ****     
2024:..\src/command_processing.c ****     //Header package
2025:..\src/command_processing.c ****     packet_data[0] = CMD_GET_MEASUREMENTS;   
 11070              		.loc 1 2025 0
 11071 0006 8423     		movs	r3, #132
 11072 0008 3B71     		strb	r3, [r7, #4]
2026:..\src/command_processing.c ****     
2027:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 11073              		.loc 1 2027 0
 11074 000a 0323     		movs	r3, #3
 11075 000c FB73     		strb	r3, [r7, #15]
 11076 000e 23E0     		b	.L509
 11077              	.L510:
2028:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld.pos[index] >> g_mem.res[index]);
 11078              		.loc 1 2028 0
 11079 0010 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 11080 0012 1C4A     		ldr	r2, .L511
 11081 0014 52F82330 		ldr	r3, [r2, r3, lsl #2]
 11082 0018 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 11083 001a 1B49     		ldr	r1, .L511+4
 11084 001c 0A44     		add	r2, r2, r1
 11085 001e 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 11086 0022 1341     		asrs	r3, r3, r2
 11087 0024 1BB2     		sxth	r3, r3
 11088 0026 BB81     		strh	r3, [r7, #12]	@ movhi
2029:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 11089              		.loc 1 2029 0
 11090 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 11091 002a 5B00     		lsls	r3, r3, #1
 11092 002c 0233     		adds	r3, r3, #2
 11093 002e 07F10C02 		add	r2, r7, #12
 11094 0032 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11095 0034 07F11001 		add	r1, r7, #16
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 259


 11096 0038 0B44     		add	r3, r3, r1
 11097 003a 03F80C2C 		strb	r2, [r3, #-12]
2030:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 11098              		.loc 1 2030 0
 11099 003e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 11100 0040 5B00     		lsls	r3, r3, #1
 11101 0042 5A1C     		adds	r2, r3, #1
 11102 0044 07F10C03 		add	r3, r7, #12
 11103 0048 0133     		adds	r3, r3, #1
 11104 004a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 11105 004c 07F11003 		add	r3, r7, #16
 11106 0050 1344     		add	r3, r3, r2
 11107 0052 0A46     		mov	r2, r1
 11108 0054 03F80C2C 		strb	r2, [r3, #-12]
 11109              	.L509:
2027:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld.pos[index] >> g_mem.res[index]);
 11110              		.loc 1 2027 0 discriminator 1
 11111 0058 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 11112 005a 5A1E     		subs	r2, r3, #1
 11113 005c FA73     		strb	r2, [r7, #15]
 11114 005e 002B     		cmp	r3, #0
 11115 0060 D6D1     		bne	.L510
2031:..\src/command_processing.c ****         //*((int16 *) &packet_data[(index << 1) + 1]) = (int16)(g_measOld.pos[index] >> g_mem.res[i
2032:..\src/command_processing.c ****     }
2033:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
2034:..\src/command_processing.c **** 
2035:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 11116              		.loc 1 2035 0
 11117 0062 3B1D     		adds	r3, r7, #4
 11118 0064 0721     		movs	r1, #7
 11119 0066 1846     		mov	r0, r3
 11120 0068 FFF7FEFF 		bl	LCRChecksum
 11121 006c 0346     		mov	r3, r0
 11122 006e FB72     		strb	r3, [r7, #11]
2036:..\src/command_processing.c **** 
2037:..\src/command_processing.c ****     commWrite(packet_data, 8);
 11123              		.loc 1 2037 0
 11124 0070 3B1D     		adds	r3, r7, #4
 11125 0072 0821     		movs	r1, #8
 11126 0074 1846     		mov	r0, r3
 11127 0076 FFF7FEFF 		bl	commWrite
2038:..\src/command_processing.c ****    
2039:..\src/command_processing.c **** }
 11128              		.loc 1 2039 0
 11129 007a 00BF     		nop
 11130 007c 1037     		adds	r7, r7, #16
 11131              		.cfi_def_cfa_offset 8
 11132 007e BD46     		mov	sp, r7
 11133              		.cfi_def_cfa_register 13
 11134              		@ sp needed
 11135 0080 80BD     		pop	{r7, pc}
 11136              	.L512:
 11137 0082 00BF     		.align	2
 11138              	.L511:
 11139 0084 00000000 		.word	g_measOld
 11140 0088 00000000 		.word	g_mem
 11141              		.cfi_endproc
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 260


 11142              	.LFE83:
 11143              		.size	cmd_get_measurements, .-cmd_get_measurements
 11144              		.section	.text.cmd_get_velocities,"ax",%progbits
 11145              		.align	2
 11146              		.global	cmd_get_velocities
 11147              		.thumb
 11148              		.thumb_func
 11149              		.type	cmd_get_velocities, %function
 11150              	cmd_get_velocities:
 11151              	.LFB84:
2040:..\src/command_processing.c **** 
2041:..\src/command_processing.c **** void cmd_get_velocities(){
 11152              		.loc 1 2041 0
 11153              		.cfi_startproc
 11154              		@ args = 0, pretend = 0, frame = 16
 11155              		@ frame_needed = 1, uses_anonymous_args = 0
 11156 0000 80B5     		push	{r7, lr}
 11157              		.cfi_def_cfa_offset 8
 11158              		.cfi_offset 7, -8
 11159              		.cfi_offset 14, -4
 11160 0002 84B0     		sub	sp, sp, #16
 11161              		.cfi_def_cfa_offset 24
 11162 0004 00AF     		add	r7, sp, #0
 11163              		.cfi_def_cfa_register 7
2042:..\src/command_processing.c ****  
2043:..\src/command_processing.c ****     uint8 CYDATA index;
2044:..\src/command_processing.c ****     int16 aux_int16;
2045:..\src/command_processing.c ****    
2046:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
2047:..\src/command_processing.c ****     
2048:..\src/command_processing.c ****     uint8 packet_data[8]; 
2049:..\src/command_processing.c ****     
2050:..\src/command_processing.c ****     //Header package
2051:..\src/command_processing.c ****     packet_data[0] = CMD_GET_VELOCITIES;
 11164              		.loc 1 2051 0
 11165 0006 8923     		movs	r3, #137
 11166 0008 3B71     		strb	r3, [r7, #4]
2052:..\src/command_processing.c ****     
2053:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 11167              		.loc 1 2053 0
 11168 000a 0323     		movs	r3, #3
 11169 000c FB73     		strb	r3, [r7, #15]
 11170 000e 24E0     		b	.L514
 11171              	.L515:
2054:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld.vel[index] >> g_mem.res[index]);
 11172              		.loc 1 2054 0
 11173 0010 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 11174 0012 1C4A     		ldr	r2, .L516
 11175 0014 0833     		adds	r3, r3, #8
 11176 0016 52F82330 		ldr	r3, [r2, r3, lsl #2]
 11177 001a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 11178 001c 1A49     		ldr	r1, .L516+4
 11179 001e 0A44     		add	r2, r2, r1
 11180 0020 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 11181 0024 1341     		asrs	r3, r3, r2
 11182 0026 1BB2     		sxth	r3, r3
 11183 0028 BB81     		strh	r3, [r7, #12]	@ movhi
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 261


2055:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 11184              		.loc 1 2055 0
 11185 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 11186 002c 5B00     		lsls	r3, r3, #1
 11187 002e 0233     		adds	r3, r3, #2
 11188 0030 07F10C02 		add	r2, r7, #12
 11189 0034 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11190 0036 07F11001 		add	r1, r7, #16
 11191 003a 0B44     		add	r3, r3, r1
 11192 003c 03F80C2C 		strb	r2, [r3, #-12]
2056:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 11193              		.loc 1 2056 0
 11194 0040 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 11195 0042 5B00     		lsls	r3, r3, #1
 11196 0044 5A1C     		adds	r2, r3, #1
 11197 0046 07F10C03 		add	r3, r7, #12
 11198 004a 0133     		adds	r3, r3, #1
 11199 004c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 11200 004e 07F11003 		add	r3, r7, #16
 11201 0052 1344     		add	r3, r3, r2
 11202 0054 0A46     		mov	r2, r1
 11203 0056 03F80C2C 		strb	r2, [r3, #-12]
 11204              	.L514:
2053:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld.vel[index] >> g_mem.res[index]);
 11205              		.loc 1 2053 0 discriminator 1
 11206 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 11207 005c 5A1E     		subs	r2, r3, #1
 11208 005e FA73     		strb	r2, [r7, #15]
 11209 0060 002B     		cmp	r3, #0
 11210 0062 D5D1     		bne	.L515
2057:..\src/command_processing.c ****         //*((int16 *) &packet_data[(index << 1) + 1]) = (int16) (g_measOld.vel[index] >> g_mem.res[
2058:..\src/command_processing.c ****     }
2059:..\src/command_processing.c ****             
2060:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
2061:..\src/command_processing.c **** 
2062:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 11211              		.loc 1 2062 0
 11212 0064 3B1D     		adds	r3, r7, #4
 11213 0066 0721     		movs	r1, #7
 11214 0068 1846     		mov	r0, r3
 11215 006a FFF7FEFF 		bl	LCRChecksum
 11216 006e 0346     		mov	r3, r0
 11217 0070 FB72     		strb	r3, [r7, #11]
2063:..\src/command_processing.c **** 
2064:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 11218              		.loc 1 2064 0
 11219 0072 3B1D     		adds	r3, r7, #4
 11220 0074 0821     		movs	r1, #8
 11221 0076 1846     		mov	r0, r3
 11222 0078 FFF7FEFF 		bl	commWrite
2065:..\src/command_processing.c **** }
 11223              		.loc 1 2065 0
 11224 007c 00BF     		nop
 11225 007e 1037     		adds	r7, r7, #16
 11226              		.cfi_def_cfa_offset 8
 11227 0080 BD46     		mov	sp, r7
 11228              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 262


 11229              		@ sp needed
 11230 0082 80BD     		pop	{r7, pc}
 11231              	.L517:
 11232              		.align	2
 11233              	.L516:
 11234 0084 00000000 		.word	g_measOld
 11235 0088 00000000 		.word	g_mem
 11236              		.cfi_endproc
 11237              	.LFE84:
 11238              		.size	cmd_get_velocities, .-cmd_get_velocities
 11239              		.section	.text.cmd_get_accelerations,"ax",%progbits
 11240              		.align	2
 11241              		.global	cmd_get_accelerations
 11242              		.thumb
 11243              		.thumb_func
 11244              		.type	cmd_get_accelerations, %function
 11245              	cmd_get_accelerations:
 11246              	.LFB85:
2066:..\src/command_processing.c **** 
2067:..\src/command_processing.c **** void cmd_get_accelerations(){
 11247              		.loc 1 2067 0
 11248              		.cfi_startproc
 11249              		@ args = 0, pretend = 0, frame = 16
 11250              		@ frame_needed = 1, uses_anonymous_args = 0
 11251 0000 80B5     		push	{r7, lr}
 11252              		.cfi_def_cfa_offset 8
 11253              		.cfi_offset 7, -8
 11254              		.cfi_offset 14, -4
 11255 0002 84B0     		sub	sp, sp, #16
 11256              		.cfi_def_cfa_offset 24
 11257 0004 00AF     		add	r7, sp, #0
 11258              		.cfi_def_cfa_register 7
2068:..\src/command_processing.c ****  
2069:..\src/command_processing.c ****     uint8 CYDATA index;
2070:..\src/command_processing.c ****     int16 aux_int16;
2071:..\src/command_processing.c ****     
2072:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
2073:..\src/command_processing.c ****     
2074:..\src/command_processing.c ****     uint8 packet_data[8]; 
2075:..\src/command_processing.c ****     
2076:..\src/command_processing.c ****     //Header package
2077:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACCEL;   
 11259              		.loc 1 2077 0
 11260 0006 8B23     		movs	r3, #139
 11261 0008 3B71     		strb	r3, [r7, #4]
2078:..\src/command_processing.c ****     
2079:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 11262              		.loc 1 2079 0
 11263 000a 0323     		movs	r3, #3
 11264 000c FB73     		strb	r3, [r7, #15]
 11265 000e 25E0     		b	.L519
 11266              	.L520:
2080:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld.acc[index] >> g_mem.res[index]);
 11267              		.loc 1 2080 0
 11268 0010 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 11269 0012 1D4A     		ldr	r2, .L521
 11270 0014 0A33     		adds	r3, r3, #10
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 263


 11271 0016 9B00     		lsls	r3, r3, #2
 11272 0018 1344     		add	r3, r3, r2
 11273 001a 5B68     		ldr	r3, [r3, #4]
 11274 001c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 11275 001e 1B49     		ldr	r1, .L521+4
 11276 0020 0A44     		add	r2, r2, r1
 11277 0022 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 11278 0026 1341     		asrs	r3, r3, r2
 11279 0028 1BB2     		sxth	r3, r3
 11280 002a BB81     		strh	r3, [r7, #12]	@ movhi
2081:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 11281              		.loc 1 2081 0
 11282 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 11283 002e 5B00     		lsls	r3, r3, #1
 11284 0030 0233     		adds	r3, r3, #2
 11285 0032 07F10C02 		add	r2, r7, #12
 11286 0036 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11287 0038 07F11001 		add	r1, r7, #16
 11288 003c 0B44     		add	r3, r3, r1
 11289 003e 03F80C2C 		strb	r2, [r3, #-12]
2082:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 11290              		.loc 1 2082 0
 11291 0042 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 11292 0044 5B00     		lsls	r3, r3, #1
 11293 0046 5A1C     		adds	r2, r3, #1
 11294 0048 07F10C03 		add	r3, r7, #12
 11295 004c 0133     		adds	r3, r3, #1
 11296 004e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 11297 0050 07F11003 		add	r3, r7, #16
 11298 0054 1344     		add	r3, r3, r2
 11299 0056 0A46     		mov	r2, r1
 11300 0058 03F80C2C 		strb	r2, [r3, #-12]
 11301              	.L519:
2079:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld.acc[index] >> g_mem.res[index]);
 11302              		.loc 1 2079 0 discriminator 1
 11303 005c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 11304 005e 5A1E     		subs	r2, r3, #1
 11305 0060 FA73     		strb	r2, [r7, #15]
 11306 0062 002B     		cmp	r3, #0
 11307 0064 D4D1     		bne	.L520
2083:..\src/command_processing.c ****         //*((int16 *) &packet_data[(index << 1) + 1]) = (int16)(g_measOld.acc[index] >> g_mem.res[i
2084:..\src/command_processing.c ****     }
2085:..\src/command_processing.c ****     
2086:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
2087:..\src/command_processing.c **** 
2088:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 11308              		.loc 1 2088 0
 11309 0066 3B1D     		adds	r3, r7, #4
 11310 0068 0721     		movs	r1, #7
 11311 006a 1846     		mov	r0, r3
 11312 006c FFF7FEFF 		bl	LCRChecksum
 11313 0070 0346     		mov	r3, r0
 11314 0072 FB72     		strb	r3, [r7, #11]
2089:..\src/command_processing.c **** 
2090:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 11315              		.loc 1 2090 0
 11316 0074 3B1D     		adds	r3, r7, #4
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 264


 11317 0076 0821     		movs	r1, #8
 11318 0078 1846     		mov	r0, r3
 11319 007a FFF7FEFF 		bl	commWrite
2091:..\src/command_processing.c **** }
 11320              		.loc 1 2091 0
 11321 007e 00BF     		nop
 11322 0080 1037     		adds	r7, r7, #16
 11323              		.cfi_def_cfa_offset 8
 11324 0082 BD46     		mov	sp, r7
 11325              		.cfi_def_cfa_register 13
 11326              		@ sp needed
 11327 0084 80BD     		pop	{r7, pc}
 11328              	.L522:
 11329 0086 00BF     		.align	2
 11330              	.L521:
 11331 0088 00000000 		.word	g_measOld
 11332 008c 00000000 		.word	g_mem
 11333              		.cfi_endproc
 11334              	.LFE85:
 11335              		.size	cmd_get_accelerations, .-cmd_get_accelerations
 11336              		.section	.text.cmd_set_inputs,"ax",%progbits
 11337              		.align	2
 11338              		.global	cmd_set_inputs
 11339              		.thumb
 11340              		.thumb_func
 11341              		.type	cmd_set_inputs, %function
 11342              	cmd_set_inputs:
 11343              	.LFB86:
2092:..\src/command_processing.c **** 
2093:..\src/command_processing.c **** void cmd_set_inputs(){
 11344              		.loc 1 2093 0
 11345              		.cfi_startproc
 11346              		@ args = 0, pretend = 0, frame = 8
 11347              		@ frame_needed = 1, uses_anonymous_args = 0
 11348              		@ link register save eliminated.
 11349 0000 80B4     		push	{r7}
 11350              		.cfi_def_cfa_offset 4
 11351              		.cfi_offset 7, -4
 11352 0002 83B0     		sub	sp, sp, #12
 11353              		.cfi_def_cfa_offset 16
 11354 0004 00AF     		add	r7, sp, #0
 11355              		.cfi_def_cfa_register 7
2094:..\src/command_processing.c ****     
2095:..\src/command_processing.c ****     // Store position setted in right variables
2096:..\src/command_processing.c ****     int16 aux_int16 = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 11356              		.loc 1 2096 0
 11357 0006 284B     		ldr	r3, .L531
 11358 0008 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 11359 000a 1B02     		lsls	r3, r3, #8
 11360 000c 1AB2     		sxth	r2, r3
 11361 000e 264B     		ldr	r3, .L531
 11362 0010 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 11363 0012 1BB2     		sxth	r3, r3
 11364 0014 1343     		orrs	r3, r3, r2
 11365 0016 FB80     		strh	r3, [r7, #6]	@ movhi
2097:..\src/command_processing.c ****     
2098:..\src/command_processing.c ****     if(g_mem.control_mode == CONTROL_CURRENT) {
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 265


 11366              		.loc 1 2098 0
 11367 0018 244B     		ldr	r3, .L531+4
 11368 001a 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 11369 001e 022B     		cmp	r3, #2
 11370 0020 04D1     		bne	.L524
2099:..\src/command_processing.c ****         g_refNew.curr = aux_int16;
 11371              		.loc 1 2099 0
 11372 0022 B7F90630 		ldrsh	r3, [r7, #6]
 11373 0026 224A     		ldr	r2, .L531+8
 11374 0028 5360     		str	r3, [r2, #4]
 11375 002a 15E0     		b	.L525
 11376              	.L524:
2100:..\src/command_processing.c ****         //g_refNew.pwm = *((int16 *) &g_rx.buffer[1]);
2101:..\src/command_processing.c ****     }
2102:..\src/command_processing.c ****     else {
2103:..\src/command_processing.c ****         if(g_mem.control_mode == CONTROL_PWM) {
 11377              		.loc 1 2103 0
 11378 002c 1F4B     		ldr	r3, .L531+4
 11379 002e 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 11380 0032 012B     		cmp	r3, #1
 11381 0034 04D1     		bne	.L526
2104:..\src/command_processing.c ****             g_refNew.pwm = aux_int16;
 11382              		.loc 1 2104 0
 11383 0036 B7F90630 		ldrsh	r3, [r7, #6]
 11384 003a 1D4A     		ldr	r2, .L531+8
 11385 003c 9360     		str	r3, [r2, #8]
 11386 003e 0BE0     		b	.L525
 11387              	.L526:
2105:..\src/command_processing.c ****             //g_refNew.pwm = *((int16 *) &g_rx.buffer[1]);
2106:..\src/command_processing.c ****         }
2107:..\src/command_processing.c ****         else {
2108:..\src/command_processing.c ****             g_refNew.pos = aux_int16;   // motor 1
 11388              		.loc 1 2108 0
 11389 0040 B7F90630 		ldrsh	r3, [r7, #6]
 11390 0044 1A4A     		ldr	r2, .L531+8
 11391 0046 1360     		str	r3, [r2]
2109:..\src/command_processing.c ****             //g_refNew.pos = *((int16 *) &g_rx.buffer[1]);   // motor 1
2110:..\src/command_processing.c ****             g_refNew.pos = g_refNew.pos << g_mem.res[0];
 11392              		.loc 1 2110 0
 11393 0048 194B     		ldr	r3, .L531+8
 11394 004a 1B68     		ldr	r3, [r3]
 11395 004c 174A     		ldr	r2, .L531+4
 11396 004e 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 11397 0052 9340     		lsls	r3, r3, r2
 11398 0054 164A     		ldr	r2, .L531+8
 11399 0056 1360     		str	r3, [r2]
 11400              	.L525:
2111:..\src/command_processing.c ****         }
2112:..\src/command_processing.c ****     }     
2113:..\src/command_processing.c **** 
2114:..\src/command_processing.c ****     // Check if the reference is nor higher or lower than the position limits
2115:..\src/command_processing.c ****     if (c_mem.pos_lim_flag && (g_mem.control_mode == CURR_AND_POS_CONTROL || g_mem.control_mode == 
 11401              		.loc 1 2115 0
 11402 0058 164B     		ldr	r3, .L531+12
 11403 005a 93F85430 		ldrb	r3, [r3, #84]	@ zero_extendqisi2
 11404 005e 002B     		cmp	r3, #0
 11405 0060 1DD0     		beq	.L530
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 266


 11406              		.loc 1 2115 0 is_stmt 0 discriminator 1
 11407 0062 124B     		ldr	r3, .L531+4
 11408 0064 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 11409 0068 032B     		cmp	r3, #3
 11410 006a 04D0     		beq	.L528
 11411              		.loc 1 2115 0 discriminator 2
 11412 006c 0F4B     		ldr	r3, .L531+4
 11413 006e 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 11414 0072 002B     		cmp	r3, #0
 11415 0074 13D1     		bne	.L530
 11416              	.L528:
2116:..\src/command_processing.c ****         
2117:..\src/command_processing.c ****         if (g_refNew.pos < c_mem.pos_lim_inf) 
 11417              		.loc 1 2117 0 is_stmt 1
 11418 0076 0E4B     		ldr	r3, .L531+8
 11419 0078 1A68     		ldr	r2, [r3]
 11420 007a 0E4B     		ldr	r3, .L531+12
 11421 007c 9B6D     		ldr	r3, [r3, #88]
 11422 007e 9A42     		cmp	r2, r3
 11423 0080 03DA     		bge	.L529
2118:..\src/command_processing.c ****             g_refNew.pos = c_mem.pos_lim_inf;
 11424              		.loc 1 2118 0
 11425 0082 0C4B     		ldr	r3, .L531+12
 11426 0084 9B6D     		ldr	r3, [r3, #88]
 11427 0086 0A4A     		ldr	r2, .L531+8
 11428 0088 1360     		str	r3, [r2]
 11429              	.L529:
2119:..\src/command_processing.c **** 
2120:..\src/command_processing.c ****         if (g_refNew.pos > c_mem.pos_lim_sup) 
 11430              		.loc 1 2120 0
 11431 008a 094B     		ldr	r3, .L531+8
 11432 008c 1A68     		ldr	r2, [r3]
 11433 008e 094B     		ldr	r3, .L531+12
 11434 0090 DB6D     		ldr	r3, [r3, #92]
 11435 0092 9A42     		cmp	r2, r3
 11436 0094 03DD     		ble	.L530
2121:..\src/command_processing.c ****             g_refNew.pos = c_mem.pos_lim_sup;
 11437              		.loc 1 2121 0
 11438 0096 074B     		ldr	r3, .L531+12
 11439 0098 DB6D     		ldr	r3, [r3, #92]
 11440 009a 054A     		ldr	r2, .L531+8
 11441 009c 1360     		str	r3, [r2]
 11442              	.L530:
2122:..\src/command_processing.c ****     }
2123:..\src/command_processing.c **** }
 11443              		.loc 1 2123 0
 11444 009e 00BF     		nop
 11445 00a0 0C37     		adds	r7, r7, #12
 11446              		.cfi_def_cfa_offset 4
 11447 00a2 BD46     		mov	sp, r7
 11448              		.cfi_def_cfa_register 13
 11449              		@ sp needed
 11450 00a4 80BC     		pop	{r7}
 11451              		.cfi_restore 7
 11452              		.cfi_def_cfa_offset 0
 11453 00a6 7047     		bx	lr
 11454              	.L532:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 267


 11455              		.align	2
 11456              	.L531:
 11457 00a8 00000000 		.word	g_rx
 11458 00ac 00000000 		.word	g_mem
 11459 00b0 00000000 		.word	g_refNew
 11460 00b4 00000000 		.word	c_mem
 11461              		.cfi_endproc
 11462              	.LFE86:
 11463              		.size	cmd_set_inputs, .-cmd_set_inputs
 11464              		.section	.text.cmd_activate,"ax",%progbits
 11465              		.align	2
 11466              		.global	cmd_activate
 11467              		.thumb
 11468              		.thumb_func
 11469              		.type	cmd_activate, %function
 11470              	cmd_activate:
 11471              	.LFB87:
2124:..\src/command_processing.c **** 
2125:..\src/command_processing.c **** void cmd_activate(){
 11472              		.loc 1 2125 0
 11473              		.cfi_startproc
 11474              		@ args = 0, pretend = 0, frame = 0
 11475              		@ frame_needed = 1, uses_anonymous_args = 0
 11476 0000 80B5     		push	{r7, lr}
 11477              		.cfi_def_cfa_offset 8
 11478              		.cfi_offset 7, -8
 11479              		.cfi_offset 14, -4
 11480 0002 00AF     		add	r7, sp, #0
 11481              		.cfi_def_cfa_register 7
2126:..\src/command_processing.c ****     
2127:..\src/command_processing.c ****     // Store new value reads
2128:..\src/command_processing.c ****     g_refNew.onoff = g_rx.buffer[1];
 11482              		.loc 1 2128 0
 11483 0004 0C4B     		ldr	r3, .L536
 11484 0006 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 11485 0008 0C4B     		ldr	r3, .L536+4
 11486 000a 1A73     		strb	r2, [r3, #12]
2129:..\src/command_processing.c ****     
2130:..\src/command_processing.c ****     // Check type of control mode enabled
2131:..\src/command_processing.c ****     if ((g_mem.control_mode == CONTROL_ANGLE) || (g_mem.control_mode == CURR_AND_POS_CONTROL)) {
 11487              		.loc 1 2131 0
 11488 000c 0C4B     		ldr	r3, .L536+8
 11489 000e 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 11490 0012 002B     		cmp	r3, #0
 11491 0014 04D0     		beq	.L534
 11492              		.loc 1 2131 0 is_stmt 0 discriminator 1
 11493 0016 0A4B     		ldr	r3, .L536+8
 11494 0018 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 11495 001c 032B     		cmp	r3, #3
 11496 001e 03D1     		bne	.L535
 11497              	.L534:
2132:..\src/command_processing.c ****         g_refNew.pos = g_meas.pos[0];
 11498              		.loc 1 2132 0 is_stmt 1
 11499 0020 084B     		ldr	r3, .L536+12
 11500 0022 1B68     		ldr	r3, [r3]
 11501 0024 054A     		ldr	r2, .L536+4
 11502 0026 1360     		str	r3, [r2]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 268


 11503              	.L535:
2133:..\src/command_processing.c ****     }
2134:..\src/command_processing.c **** 
2135:..\src/command_processing.c ****     // Activate/Disactivate motor
2136:..\src/command_processing.c ****     MOTOR_ON_OFF_Write(g_refNew.onoff);
 11504              		.loc 1 2136 0
 11505 0028 044B     		ldr	r3, .L536+4
 11506 002a 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 11507 002c 1846     		mov	r0, r3
 11508 002e FFF7FEFF 		bl	MOTOR_ON_OFF_Write
2137:..\src/command_processing.c **** }
 11509              		.loc 1 2137 0
 11510 0032 00BF     		nop
 11511 0034 80BD     		pop	{r7, pc}
 11512              	.L537:
 11513 0036 00BF     		.align	2
 11514              	.L536:
 11515 0038 00000000 		.word	g_rx
 11516 003c 00000000 		.word	g_refNew
 11517 0040 00000000 		.word	g_mem
 11518 0044 00000000 		.word	g_meas
 11519              		.cfi_endproc
 11520              	.LFE87:
 11521              		.size	cmd_activate, .-cmd_activate
 11522              		.section	.text.cmd_get_activate,"ax",%progbits
 11523              		.align	2
 11524              		.global	cmd_get_activate
 11525              		.thumb
 11526              		.thumb_func
 11527              		.type	cmd_get_activate, %function
 11528              	cmd_get_activate:
 11529              	.LFB88:
2138:..\src/command_processing.c **** 
2139:..\src/command_processing.c **** void cmd_get_activate(){
 11530              		.loc 1 2139 0
 11531              		.cfi_startproc
 11532              		@ args = 0, pretend = 0, frame = 8
 11533              		@ frame_needed = 1, uses_anonymous_args = 0
 11534 0000 80B5     		push	{r7, lr}
 11535              		.cfi_def_cfa_offset 8
 11536              		.cfi_offset 7, -8
 11537              		.cfi_offset 14, -4
 11538 0002 82B0     		sub	sp, sp, #8
 11539              		.cfi_def_cfa_offset 16
 11540 0004 00AF     		add	r7, sp, #0
 11541              		.cfi_def_cfa_register 7
2140:..\src/command_processing.c ****     
2141:..\src/command_processing.c ****     uint8 packet_data[3];
2142:..\src/command_processing.c **** 
2143:..\src/command_processing.c ****     // Header        
2144:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACTIVATE;
 11542              		.loc 1 2144 0
 11543 0006 8123     		movs	r3, #129
 11544 0008 3B71     		strb	r3, [r7, #4]
2145:..\src/command_processing.c ****     
2146:..\src/command_processing.c ****     // Fill payload
2147:..\src/command_processing.c ****     packet_data[1] = g_ref.onoff;
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 269


 11545              		.loc 1 2147 0
 11546 000a 094B     		ldr	r3, .L539
 11547 000c 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 11548 000e 7B71     		strb	r3, [r7, #5]
2148:..\src/command_processing.c ****     
2149:..\src/command_processing.c ****     // Calculate checksum
2150:..\src/command_processing.c ****     packet_data[2] = LCRChecksum(packet_data, 2);
 11549              		.loc 1 2150 0
 11550 0010 3B1D     		adds	r3, r7, #4
 11551 0012 0221     		movs	r1, #2
 11552 0014 1846     		mov	r0, r3
 11553 0016 FFF7FEFF 		bl	LCRChecksum
 11554 001a 0346     		mov	r3, r0
 11555 001c BB71     		strb	r3, [r7, #6]
2151:..\src/command_processing.c ****     
2152:..\src/command_processing.c ****     // Send package to UART
2153:..\src/command_processing.c ****     commWrite(packet_data, 3);
 11556              		.loc 1 2153 0
 11557 001e 3B1D     		adds	r3, r7, #4
 11558 0020 0321     		movs	r1, #3
 11559 0022 1846     		mov	r0, r3
 11560 0024 FFF7FEFF 		bl	commWrite
2154:..\src/command_processing.c **** 
2155:..\src/command_processing.c **** }
 11561              		.loc 1 2155 0
 11562 0028 00BF     		nop
 11563 002a 0837     		adds	r7, r7, #8
 11564              		.cfi_def_cfa_offset 8
 11565 002c BD46     		mov	sp, r7
 11566              		.cfi_def_cfa_register 13
 11567              		@ sp needed
 11568 002e 80BD     		pop	{r7, pc}
 11569              	.L540:
 11570              		.align	2
 11571              	.L539:
 11572 0030 00000000 		.word	g_ref
 11573              		.cfi_endproc
 11574              	.LFE88:
 11575              		.size	cmd_get_activate, .-cmd_get_activate
 11576              		.section	.text.cmd_get_curr_and_meas,"ax",%progbits
 11577              		.align	2
 11578              		.global	cmd_get_curr_and_meas
 11579              		.thumb
 11580              		.thumb_func
 11581              		.type	cmd_get_curr_and_meas, %function
 11582              	cmd_get_curr_and_meas:
 11583              	.LFB89:
2156:..\src/command_processing.c **** 
2157:..\src/command_processing.c **** void cmd_get_curr_and_meas(){
 11584              		.loc 1 2157 0
 11585              		.cfi_startproc
 11586              		@ args = 0, pretend = 0, frame = 16
 11587              		@ frame_needed = 1, uses_anonymous_args = 0
 11588 0000 80B5     		push	{r7, lr}
 11589              		.cfi_def_cfa_offset 8
 11590              		.cfi_offset 7, -8
 11591              		.cfi_offset 14, -4
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 270


 11592 0002 84B0     		sub	sp, sp, #16
 11593              		.cfi_def_cfa_offset 24
 11594 0004 00AF     		add	r7, sp, #0
 11595              		.cfi_def_cfa_register 7
2158:..\src/command_processing.c ****     
2159:..\src/command_processing.c ****     uint8 CYDATA index;
2160:..\src/command_processing.c ****     int16 aux_int16;
2161:..\src/command_processing.c ****    
2162:..\src/command_processing.c ****     //Packet: header + curr_meas(int16) + pos_meas(int16) + CRC
2163:..\src/command_processing.c ****     
2164:..\src/command_processing.c ****     uint8 packet_data[12]; 
2165:..\src/command_processing.c **** 
2166:..\src/command_processing.c ****     //Header package
2167:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_AND_MEAS;
 11596              		.loc 1 2167 0
 11597 0006 8623     		movs	r3, #134
 11598 0008 3B70     		strb	r3, [r7]
2168:..\src/command_processing.c **** 
2169:..\src/command_processing.c ****     // Currents
2170:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld.curr; //Real current
 11599              		.loc 1 2170 0
 11600 000a 2B4B     		ldr	r3, .L544
 11601 000c DB68     		ldr	r3, [r3, #12]
 11602 000e 1BB2     		sxth	r3, r3
 11603 0010 BB81     		strh	r3, [r7, #12]	@ movhi
2171:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 11604              		.loc 1 2171 0
 11605 0012 07F10C03 		add	r3, r7, #12
 11606 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11607 0018 BB70     		strb	r3, [r7, #2]
2172:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 11608              		.loc 1 2172 0
 11609 001a 07F10C03 		add	r3, r7, #12
 11610 001e 0133     		adds	r3, r3, #1
 11611 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11612 0022 7B70     		strb	r3, [r7, #1]
2173:..\src/command_processing.c ****     //*((int16 *) &packet_data[1]) = (int16) g_measOld.curr; //Real current
2174:..\src/command_processing.c ****     
2175:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld.estim_curr; //Estimated current
 11613              		.loc 1 2175 0
 11614 0024 244B     		ldr	r3, .L544
 11615 0026 1B69     		ldr	r3, [r3, #16]
 11616 0028 1BB2     		sxth	r3, r3
 11617 002a BB81     		strh	r3, [r7, #12]	@ movhi
2176:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 11618              		.loc 1 2176 0
 11619 002c 07F10C03 		add	r3, r7, #12
 11620 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11621 0032 3B71     		strb	r3, [r7, #4]
2177:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 11622              		.loc 1 2177 0
 11623 0034 07F10C03 		add	r3, r7, #12
 11624 0038 0133     		adds	r3, r3, #1
 11625 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11626 003c FB70     		strb	r3, [r7, #3]
2178:..\src/command_processing.c ****     //*((int16 *) &packet_data[3]) = (int16) g_measOld.estim_curr; //Estimated current
2179:..\src/command_processing.c **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 271


2180:..\src/command_processing.c ****     // Positions
2181:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 11627              		.loc 1 2181 0
 11628 003e 0323     		movs	r3, #3
 11629 0040 FB73     		strb	r3, [r7, #15]
 11630 0042 23E0     		b	.L542
 11631              	.L543:
2182:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld.pos[index] >> g_mem.res[index]);
 11632              		.loc 1 2182 0
 11633 0044 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 11634 0046 1C4A     		ldr	r2, .L544
 11635 0048 52F82330 		ldr	r3, [r2, r3, lsl #2]
 11636 004c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 11637 004e 1B49     		ldr	r1, .L544+4
 11638 0050 0A44     		add	r2, r2, r1
 11639 0052 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 11640 0056 1341     		asrs	r3, r3, r2
 11641 0058 1BB2     		sxth	r3, r3
 11642 005a BB81     		strh	r3, [r7, #12]	@ movhi
2183:..\src/command_processing.c ****         packet_data[(index << 1) + 6] = ((char*)(&aux_int16))[0];
 11643              		.loc 1 2183 0
 11644 005c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 11645 005e 5B00     		lsls	r3, r3, #1
 11646 0060 0633     		adds	r3, r3, #6
 11647 0062 07F10C02 		add	r2, r7, #12
 11648 0066 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11649 0068 07F11001 		add	r1, r7, #16
 11650 006c 0B44     		add	r3, r3, r1
 11651 006e 03F8102C 		strb	r2, [r3, #-16]
2184:..\src/command_processing.c ****         packet_data[(index << 1) + 5] = ((char*)(&aux_int16))[1];
 11652              		.loc 1 2184 0
 11653 0072 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 11654 0074 5B00     		lsls	r3, r3, #1
 11655 0076 5A1D     		adds	r2, r3, #5
 11656 0078 07F10C03 		add	r3, r7, #12
 11657 007c 0133     		adds	r3, r3, #1
 11658 007e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 11659 0080 07F11003 		add	r3, r7, #16
 11660 0084 1344     		add	r3, r3, r2
 11661 0086 0A46     		mov	r2, r1
 11662 0088 03F8102C 		strb	r2, [r3, #-16]
 11663              	.L542:
2181:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld.pos[index] >> g_mem.res[index]);
 11664              		.loc 1 2181 0 discriminator 1
 11665 008c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 11666 008e 5A1E     		subs	r2, r3, #1
 11667 0090 FA73     		strb	r2, [r7, #15]
 11668 0092 002B     		cmp	r3, #0
 11669 0094 D6D1     		bne	.L543
2185:..\src/command_processing.c ****         //*((int16 *) &packet_data[(index << 1) + 5]) = (int16)(g_measOld.pos[index] >> g_mem.res[i
2186:..\src/command_processing.c ****     }
2187:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
2188:..\src/command_processing.c ****         
2189:..\src/command_processing.c ****     packet_data[11] = LCRChecksum (packet_data, 11);
 11670              		.loc 1 2189 0
 11671 0096 3B46     		mov	r3, r7
 11672 0098 0B21     		movs	r1, #11
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 272


 11673 009a 1846     		mov	r0, r3
 11674 009c FFF7FEFF 		bl	LCRChecksum
 11675 00a0 0346     		mov	r3, r0
 11676 00a2 FB72     		strb	r3, [r7, #11]
2190:..\src/command_processing.c ****     commWrite(packet_data, 12);
 11677              		.loc 1 2190 0
 11678 00a4 3B46     		mov	r3, r7
 11679 00a6 0C21     		movs	r1, #12
 11680 00a8 1846     		mov	r0, r3
 11681 00aa FFF7FEFF 		bl	commWrite
2191:..\src/command_processing.c ****    
2192:..\src/command_processing.c **** }
 11682              		.loc 1 2192 0
 11683 00ae 00BF     		nop
 11684 00b0 1037     		adds	r7, r7, #16
 11685              		.cfi_def_cfa_offset 8
 11686 00b2 BD46     		mov	sp, r7
 11687              		.cfi_def_cfa_register 13
 11688              		@ sp needed
 11689 00b4 80BD     		pop	{r7, pc}
 11690              	.L545:
 11691 00b6 00BF     		.align	2
 11692              	.L544:
 11693 00b8 00000000 		.word	g_measOld
 11694 00bc 00000000 		.word	g_mem
 11695              		.cfi_endproc
 11696              	.LFE89:
 11697              		.size	cmd_get_curr_and_meas, .-cmd_get_curr_and_meas
 11698              		.section	.text.cmd_get_currents,"ax",%progbits
 11699              		.align	2
 11700              		.global	cmd_get_currents
 11701              		.thumb
 11702              		.thumb_func
 11703              		.type	cmd_get_currents, %function
 11704              	cmd_get_currents:
 11705              	.LFB90:
2193:..\src/command_processing.c **** 
2194:..\src/command_processing.c **** void cmd_get_currents(){
 11706              		.loc 1 2194 0
 11707              		.cfi_startproc
 11708              		@ args = 0, pretend = 0, frame = 16
 11709              		@ frame_needed = 1, uses_anonymous_args = 0
 11710 0000 80B5     		push	{r7, lr}
 11711              		.cfi_def_cfa_offset 8
 11712              		.cfi_offset 7, -8
 11713              		.cfi_offset 14, -4
 11714 0002 84B0     		sub	sp, sp, #16
 11715              		.cfi_def_cfa_offset 24
 11716 0004 00AF     		add	r7, sp, #0
 11717              		.cfi_def_cfa_register 7
2195:..\src/command_processing.c ****     
2196:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
2197:..\src/command_processing.c ****     
2198:..\src/command_processing.c ****     uint8 packet_data[6]; 
2199:..\src/command_processing.c ****     int16 aux_int16;
2200:..\src/command_processing.c ****     
2201:..\src/command_processing.c ****     //Header package
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 273


2202:..\src/command_processing.c **** 
2203:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURRENTS;
 11718              		.loc 1 2203 0
 11719 0006 8523     		movs	r3, #133
 11720 0008 3B72     		strb	r3, [r7, #8]
2204:..\src/command_processing.c **** 
2205:..\src/command_processing.c ****     // Currents
2206:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld.curr; //Real current
 11721              		.loc 1 2206 0
 11722 000a 144B     		ldr	r3, .L547
 11723 000c DB68     		ldr	r3, [r3, #12]
 11724 000e 1BB2     		sxth	r3, r3
 11725 0010 FB80     		strh	r3, [r7, #6]	@ movhi
2207:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 11726              		.loc 1 2207 0
 11727 0012 BB1D     		adds	r3, r7, #6
 11728 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11729 0016 BB72     		strb	r3, [r7, #10]
2208:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 11730              		.loc 1 2208 0
 11731 0018 BB1D     		adds	r3, r7, #6
 11732 001a 0133     		adds	r3, r3, #1
 11733 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11734 001e 7B72     		strb	r3, [r7, #9]
2209:..\src/command_processing.c ****     //*((int16 *) &packet_data[1]) = (int16) g_measOld.curr; //Real current
2210:..\src/command_processing.c ****     
2211:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld.estim_curr; //Estimated current
 11735              		.loc 1 2211 0
 11736 0020 0E4B     		ldr	r3, .L547
 11737 0022 1B69     		ldr	r3, [r3, #16]
 11738 0024 1BB2     		sxth	r3, r3
 11739 0026 FB80     		strh	r3, [r7, #6]	@ movhi
2212:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 11740              		.loc 1 2212 0
 11741 0028 BB1D     		adds	r3, r7, #6
 11742 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11743 002c 3B73     		strb	r3, [r7, #12]
2213:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 11744              		.loc 1 2213 0
 11745 002e BB1D     		adds	r3, r7, #6
 11746 0030 0133     		adds	r3, r3, #1
 11747 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11748 0034 FB72     		strb	r3, [r7, #11]
2214:..\src/command_processing.c ****     //*((int16 *) &packet_data[3]) = (int16) g_measOld.estim_curr; //Estimated current
2215:..\src/command_processing.c **** 
2216:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
2217:..\src/command_processing.c **** 
2218:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 11749              		.loc 1 2218 0
 11750 0036 07F10803 		add	r3, r7, #8
 11751 003a 0521     		movs	r1, #5
 11752 003c 1846     		mov	r0, r3
 11753 003e FFF7FEFF 		bl	LCRChecksum
 11754 0042 0346     		mov	r3, r0
 11755 0044 7B73     		strb	r3, [r7, #13]
2219:..\src/command_processing.c ****     
2220:..\src/command_processing.c ****     commWrite(packet_data, 6);
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 274


 11756              		.loc 1 2220 0
 11757 0046 07F10803 		add	r3, r7, #8
 11758 004a 0621     		movs	r1, #6
 11759 004c 1846     		mov	r0, r3
 11760 004e FFF7FEFF 		bl	commWrite
2221:..\src/command_processing.c **** }
 11761              		.loc 1 2221 0
 11762 0052 00BF     		nop
 11763 0054 1037     		adds	r7, r7, #16
 11764              		.cfi_def_cfa_offset 8
 11765 0056 BD46     		mov	sp, r7
 11766              		.cfi_def_cfa_register 13
 11767              		@ sp needed
 11768 0058 80BD     		pop	{r7, pc}
 11769              	.L548:
 11770 005a 00BF     		.align	2
 11771              	.L547:
 11772 005c 00000000 		.word	g_measOld
 11773              		.cfi_endproc
 11774              	.LFE90:
 11775              		.size	cmd_get_currents, .-cmd_get_currents
 11776              		.section	.text.cmd_get_currents_for_cuff,"ax",%progbits
 11777              		.align	2
 11778              		.global	cmd_get_currents_for_cuff
 11779              		.thumb
 11780              		.thumb_func
 11781              		.type	cmd_get_currents_for_cuff, %function
 11782              	cmd_get_currents_for_cuff:
 11783              	.LFB91:
2222:..\src/command_processing.c **** 
2223:..\src/command_processing.c **** void cmd_get_currents_for_cuff(){
 11784              		.loc 1 2223 0
 11785              		.cfi_startproc
 11786              		@ args = 0, pretend = 0, frame = 8
 11787              		@ frame_needed = 1, uses_anonymous_args = 0
 11788 0000 80B5     		push	{r7, lr}
 11789              		.cfi_def_cfa_offset 8
 11790              		.cfi_offset 7, -8
 11791              		.cfi_offset 14, -4
 11792 0002 82B0     		sub	sp, sp, #8
 11793              		.cfi_def_cfa_offset 16
 11794 0004 00AF     		add	r7, sp, #0
 11795              		.cfi_def_cfa_register 7
2224:..\src/command_processing.c ****     
2225:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
2226:..\src/command_processing.c ****     
2227:..\src/command_processing.c ****     uint8 packet_data[4]; 
2228:..\src/command_processing.c ****     int16 aux_int16;
2229:..\src/command_processing.c ****     
2230:..\src/command_processing.c ****     //Header package
2231:..\src/command_processing.c **** 
2232:..\src/command_processing.c ****     packet_data[0] = CMD_SET_CUFF_INPUTS;
 11796              		.loc 1 2232 0
 11797 0006 8E23     		movs	r3, #142
 11798 0008 3B71     		strb	r3, [r7, #4]
2233:..\src/command_processing.c **** 
2234:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld.estim_curr; //Estimated Current
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 275


 11799              		.loc 1 2234 0
 11800 000a 0D4B     		ldr	r3, .L550
 11801 000c 1B69     		ldr	r3, [r3, #16]
 11802 000e 1BB2     		sxth	r3, r3
 11803 0010 7B80     		strh	r3, [r7, #2]	@ movhi
2235:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 11804              		.loc 1 2235 0
 11805 0012 BB1C     		adds	r3, r7, #2
 11806 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11807 0016 BB71     		strb	r3, [r7, #6]
2236:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 11808              		.loc 1 2236 0
 11809 0018 BB1C     		adds	r3, r7, #2
 11810 001a 0133     		adds	r3, r3, #1
 11811 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11812 001e 7B71     		strb	r3, [r7, #5]
2237:..\src/command_processing.c ****    // *((int16 *) &packet_data[1]) = (int16) g_measOld.estim_curr; //Estimated Current
2238:..\src/command_processing.c **** 
2239:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
2240:..\src/command_processing.c **** 
2241:..\src/command_processing.c ****     packet_data[3] = LCRChecksum (packet_data, 3);
 11813              		.loc 1 2241 0
 11814 0020 3B1D     		adds	r3, r7, #4
 11815 0022 0321     		movs	r1, #3
 11816 0024 1846     		mov	r0, r3
 11817 0026 FFF7FEFF 		bl	LCRChecksum
 11818 002a 0346     		mov	r3, r0
 11819 002c FB71     		strb	r3, [r7, #7]
2242:..\src/command_processing.c ****     
2243:..\src/command_processing.c ****     commWrite_to_cuff(packet_data, 4);
 11820              		.loc 1 2243 0
 11821 002e 3B1D     		adds	r3, r7, #4
 11822 0030 0421     		movs	r1, #4
 11823 0032 1846     		mov	r0, r3
 11824 0034 FFF7FEFF 		bl	commWrite_to_cuff
2244:..\src/command_processing.c **** }
 11825              		.loc 1 2244 0
 11826 0038 00BF     		nop
 11827 003a 0837     		adds	r7, r7, #8
 11828              		.cfi_def_cfa_offset 8
 11829 003c BD46     		mov	sp, r7
 11830              		.cfi_def_cfa_register 13
 11831              		@ sp needed
 11832 003e 80BD     		pop	{r7, pc}
 11833              	.L551:
 11834              		.align	2
 11835              	.L550:
 11836 0040 00000000 		.word	g_measOld
 11837              		.cfi_endproc
 11838              	.LFE91:
 11839              		.size	cmd_get_currents_for_cuff, .-cmd_get_currents_for_cuff
 11840              		.section	.text.cmd_set_baudrate,"ax",%progbits
 11841              		.align	2
 11842              		.global	cmd_set_baudrate
 11843              		.thumb
 11844              		.thumb_func
 11845              		.type	cmd_set_baudrate, %function
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 276


 11846              	cmd_set_baudrate:
 11847              	.LFB92:
2245:..\src/command_processing.c **** 
2246:..\src/command_processing.c **** void cmd_set_baudrate(){
 11848              		.loc 1 2246 0
 11849              		.cfi_startproc
 11850              		@ args = 0, pretend = 0, frame = 0
 11851              		@ frame_needed = 1, uses_anonymous_args = 0
 11852 0000 80B5     		push	{r7, lr}
 11853              		.cfi_def_cfa_offset 8
 11854              		.cfi_offset 7, -8
 11855              		.cfi_offset 14, -4
 11856 0002 00AF     		add	r7, sp, #0
 11857              		.cfi_def_cfa_register 7
2247:..\src/command_processing.c ****     
2248:..\src/command_processing.c ****     // Set BaudRate
2249:..\src/command_processing.c ****     c_mem.baud_rate = g_rx.buffer[1];
 11858              		.loc 1 2249 0
 11859 0004 094B     		ldr	r3, .L557
 11860 0006 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 11861 0008 094B     		ldr	r3, .L557+4
 11862 000a 83F89420 		strb	r2, [r3, #148]
2250:..\src/command_processing.c ****     
2251:..\src/command_processing.c ****     switch(g_rx.buffer[1]){
 11863              		.loc 1 2251 0
 11864 000e 074B     		ldr	r3, .L557
 11865 0010 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 11866 0012 0D2B     		cmp	r3, #13
 11867 0014 04D1     		bne	.L556
2252:..\src/command_processing.c ****         case 13:
2253:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(13);
 11868              		.loc 1 2253 0
 11869 0016 0121     		movs	r1, #1
 11870 0018 0C20     		movs	r0, #12
 11871 001a FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
2254:..\src/command_processing.c ****             break;
 11872              		.loc 1 2254 0
 11873 001e 03E0     		b	.L555
 11874              	.L556:
2255:..\src/command_processing.c ****         default:
2256:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(3);
 11875              		.loc 1 2256 0
 11876 0020 0121     		movs	r1, #1
 11877 0022 0220     		movs	r0, #2
 11878 0024 FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
 11879              	.L555:
2257:..\src/command_processing.c ****     }
2258:..\src/command_processing.c **** }
 11880              		.loc 1 2258 0
 11881 0028 00BF     		nop
 11882 002a 80BD     		pop	{r7, pc}
 11883              	.L558:
 11884              		.align	2
 11885              	.L557:
 11886 002c 00000000 		.word	g_rx
 11887 0030 00000000 		.word	c_mem
 11888              		.cfi_endproc
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 277


 11889              	.LFE92:
 11890              		.size	cmd_set_baudrate, .-cmd_set_baudrate
 11891              		.section	.text.cmd_ping,"ax",%progbits
 11892              		.align	2
 11893              		.global	cmd_ping
 11894              		.thumb
 11895              		.thumb_func
 11896              		.type	cmd_ping, %function
 11897              	cmd_ping:
 11898              	.LFB93:
2259:..\src/command_processing.c **** 
2260:..\src/command_processing.c **** void cmd_ping(){
 11899              		.loc 1 2260 0
 11900              		.cfi_startproc
 11901              		@ args = 0, pretend = 0, frame = 8
 11902              		@ frame_needed = 1, uses_anonymous_args = 0
 11903 0000 80B5     		push	{r7, lr}
 11904              		.cfi_def_cfa_offset 8
 11905              		.cfi_offset 7, -8
 11906              		.cfi_offset 14, -4
 11907 0002 82B0     		sub	sp, sp, #8
 11908              		.cfi_def_cfa_offset 16
 11909 0004 00AF     		add	r7, sp, #0
 11910              		.cfi_def_cfa_register 7
2261:..\src/command_processing.c **** 
2262:..\src/command_processing.c ****     uint8 packet_data[2];
2263:..\src/command_processing.c **** 
2264:..\src/command_processing.c ****     // Header
2265:..\src/command_processing.c ****     packet_data[0] = CMD_PING;
 11911              		.loc 1 2265 0
 11912 0006 0023     		movs	r3, #0
 11913 0008 3B71     		strb	r3, [r7, #4]
2266:..\src/command_processing.c ****     
2267:..\src/command_processing.c ****     // Load Payload
2268:..\src/command_processing.c ****     packet_data[1] = CMD_PING;
 11914              		.loc 1 2268 0
 11915 000a 0023     		movs	r3, #0
 11916 000c 7B71     		strb	r3, [r7, #5]
2269:..\src/command_processing.c **** 
2270:..\src/command_processing.c ****     // Send Package to uart
2271:..\src/command_processing.c ****     commWrite(packet_data, 2);
 11917              		.loc 1 2271 0
 11918 000e 3B1D     		adds	r3, r7, #4
 11919 0010 0221     		movs	r1, #2
 11920 0012 1846     		mov	r0, r3
 11921 0014 FFF7FEFF 		bl	commWrite
2272:..\src/command_processing.c **** }
 11922              		.loc 1 2272 0
 11923 0018 00BF     		nop
 11924 001a 0837     		adds	r7, r7, #8
 11925              		.cfi_def_cfa_offset 8
 11926 001c BD46     		mov	sp, r7
 11927              		.cfi_def_cfa_register 13
 11928              		@ sp needed
 11929 001e 80BD     		pop	{r7, pc}
 11930              		.cfi_endproc
 11931              	.LFE93:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 278


 11932              		.size	cmd_ping, .-cmd_ping
 11933              		.section	.text.cmd_get_inputs,"ax",%progbits
 11934              		.align	2
 11935              		.global	cmd_get_inputs
 11936              		.thumb
 11937              		.thumb_func
 11938              		.type	cmd_get_inputs, %function
 11939              	cmd_get_inputs:
 11940              	.LFB94:
2273:..\src/command_processing.c **** 
2274:..\src/command_processing.c **** void cmd_get_inputs(){
 11941              		.loc 1 2274 0
 11942              		.cfi_startproc
 11943              		@ args = 0, pretend = 0, frame = 16
 11944              		@ frame_needed = 1, uses_anonymous_args = 0
 11945 0000 80B5     		push	{r7, lr}
 11946              		.cfi_def_cfa_offset 8
 11947              		.cfi_offset 7, -8
 11948              		.cfi_offset 14, -4
 11949 0002 84B0     		sub	sp, sp, #16
 11950              		.cfi_def_cfa_offset 24
 11951 0004 00AF     		add	r7, sp, #0
 11952              		.cfi_def_cfa_register 7
2275:..\src/command_processing.c **** 
2276:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
2277:..\src/command_processing.c **** 
2278:..\src/command_processing.c ****     uint8 packet_data[6]; 
2279:..\src/command_processing.c ****     int16 aux_int16;
2280:..\src/command_processing.c ****     
2281:..\src/command_processing.c ****     //Header package
2282:..\src/command_processing.c **** 
2283:..\src/command_processing.c ****     packet_data[0] = CMD_GET_INPUTS;
 11953              		.loc 1 2283 0
 11954 0006 8323     		movs	r3, #131
 11955 0008 3B72     		strb	r3, [r7, #8]
2284:..\src/command_processing.c ****         
2285:..\src/command_processing.c ****     aux_int16 = (int16) (g_refOld.pos  >> g_mem.res[0]);
 11956              		.loc 1 2285 0
 11957 000a 104B     		ldr	r3, .L561
 11958 000c 1B68     		ldr	r3, [r3]
 11959 000e 104A     		ldr	r2, .L561+4
 11960 0010 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 11961 0014 1341     		asrs	r3, r3, r2
 11962 0016 1BB2     		sxth	r3, r3
 11963 0018 FB80     		strh	r3, [r7, #6]	@ movhi
2286:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 11964              		.loc 1 2286 0
 11965 001a BB1D     		adds	r3, r7, #6
 11966 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11967 001e BB72     		strb	r3, [r7, #10]
2287:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 11968              		.loc 1 2287 0
 11969 0020 BB1D     		adds	r3, r7, #6
 11970 0022 0133     		adds	r3, r3, #1
 11971 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11972 0026 7B72     		strb	r3, [r7, #9]
2288:..\src/command_processing.c ****     //*((int16 *) &packet_data[1]) = (int16) (g_refOld.pos  >> g_mem.res[0]);
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 279


2289:..\src/command_processing.c ****     
2290:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
2291:..\src/command_processing.c **** 
2292:..\src/command_processing.c ****     packet_data[5] = LCRChecksum(packet_data, 5);
 11973              		.loc 1 2292 0
 11974 0028 07F10803 		add	r3, r7, #8
 11975 002c 0521     		movs	r1, #5
 11976 002e 1846     		mov	r0, r3
 11977 0030 FFF7FEFF 		bl	LCRChecksum
 11978 0034 0346     		mov	r3, r0
 11979 0036 7B73     		strb	r3, [r7, #13]
2293:..\src/command_processing.c **** 
2294:..\src/command_processing.c ****     commWrite(packet_data, 6);
 11980              		.loc 1 2294 0
 11981 0038 07F10803 		add	r3, r7, #8
 11982 003c 0621     		movs	r1, #6
 11983 003e 1846     		mov	r0, r3
 11984 0040 FFF7FEFF 		bl	commWrite
2295:..\src/command_processing.c **** }
 11985              		.loc 1 2295 0
 11986 0044 00BF     		nop
 11987 0046 1037     		adds	r7, r7, #16
 11988              		.cfi_def_cfa_offset 8
 11989 0048 BD46     		mov	sp, r7
 11990              		.cfi_def_cfa_register 13
 11991              		@ sp needed
 11992 004a 80BD     		pop	{r7, pc}
 11993              	.L562:
 11994              		.align	2
 11995              	.L561:
 11996 004c 00000000 		.word	g_refOld
 11997 0050 00000000 		.word	g_mem
 11998              		.cfi_endproc
 11999              	.LFE94:
 12000              		.size	cmd_get_inputs, .-cmd_get_inputs
 12001              		.section	.text.cmd_store_params,"ax",%progbits
 12002              		.align	2
 12003              		.global	cmd_store_params
 12004              		.thumb
 12005              		.thumb_func
 12006              		.type	cmd_store_params, %function
 12007              	cmd_store_params:
 12008              	.LFB95:
2296:..\src/command_processing.c **** 
2297:..\src/command_processing.c **** void cmd_store_params(){
 12009              		.loc 1 2297 0
 12010              		.cfi_startproc
 12011              		@ args = 0, pretend = 0, frame = 16
 12012              		@ frame_needed = 1, uses_anonymous_args = 0
 12013 0000 80B5     		push	{r7, lr}
 12014              		.cfi_def_cfa_offset 8
 12015              		.cfi_offset 7, -8
 12016              		.cfi_offset 14, -4
 12017 0002 84B0     		sub	sp, sp, #16
 12018              		.cfi_def_cfa_offset 24
 12019 0004 00AF     		add	r7, sp, #0
 12020              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 280


2298:..\src/command_processing.c ****     
2299:..\src/command_processing.c ****     // Check input mode enabled
2300:..\src/command_processing.c ****     uint32 off_1;
2301:..\src/command_processing.c ****     float mult_1;
2302:..\src/command_processing.c ****     uint8 CYDATA packet_lenght = 2;
 12021              		.loc 1 2302 0
 12022 0006 0223     		movs	r3, #2
 12023 0008 FB73     		strb	r3, [r7, #15]
2303:..\src/command_processing.c ****     uint8 CYDATA packet_data[2];
2304:..\src/command_processing.c ****     uint8 CYDATA old_id;
2305:..\src/command_processing.c ****     
2306:..\src/command_processing.c ****     if( c_mem.input_mode == INPUT_MODE_EXTERNAL ) {
 12024              		.loc 1 2306 0
 12025 000a 464B     		ldr	r3, .L572
 12026 000c 93F83530 		ldrb	r3, [r3, #53]	@ zero_extendqisi2
 12027 0010 002B     		cmp	r3, #0
 12028 0012 4ED1     		bne	.L564
2307:..\src/command_processing.c ****         off_1 = c_mem.m_off[0];
 12029              		.loc 1 2307 0
 12030 0014 434B     		ldr	r3, .L572
 12031 0016 DB6B     		ldr	r3, [r3, #60]
 12032 0018 BB60     		str	r3, [r7, #8]
2308:..\src/command_processing.c ****         mult_1 = c_mem.m_mult[0];
 12033              		.loc 1 2308 0
 12034 001a 424B     		ldr	r3, .L572
 12035 001c 9B6C     		ldr	r3, [r3, #72]	@ float
 12036 001e 7B60     		str	r3, [r7, #4]	@ float
2309:..\src/command_processing.c **** 
2310:..\src/command_processing.c ****         g_refNew.pos = (int32)((float)g_refNew.pos / mult_1);
 12037              		.loc 1 2310 0
 12038 0020 414B     		ldr	r3, .L572+4
 12039 0022 1B68     		ldr	r3, [r3]
 12040 0024 1846     		mov	r0, r3
 12041 0026 FFF7FEFF 		bl	__aeabi_i2f
 12042 002a 0346     		mov	r3, r0
 12043 002c 7968     		ldr	r1, [r7, #4]	@ float
 12044 002e 1846     		mov	r0, r3
 12045 0030 FFF7FEFF 		bl	__aeabi_fdiv
 12046 0034 0346     		mov	r3, r0
 12047 0036 1846     		mov	r0, r3
 12048 0038 FFF7FEFF 		bl	__aeabi_f2iz
 12049 003c 0246     		mov	r2, r0
 12050 003e 3A4B     		ldr	r3, .L572+4
 12051 0040 1A60     		str	r2, [r3]
2311:..\src/command_processing.c **** 
2312:..\src/command_processing.c ****         g_refNew.pos = (int32)((float)g_refNew.pos * g_mem.m_mult[0]);
 12052              		.loc 1 2312 0
 12053 0042 394B     		ldr	r3, .L572+4
 12054 0044 1B68     		ldr	r3, [r3]
 12055 0046 1846     		mov	r0, r3
 12056 0048 FFF7FEFF 		bl	__aeabi_i2f
 12057 004c 0246     		mov	r2, r0
 12058 004e 374B     		ldr	r3, .L572+8
 12059 0050 9B6C     		ldr	r3, [r3, #72]	@ float
 12060 0052 1946     		mov	r1, r3
 12061 0054 1046     		mov	r0, r2
 12062 0056 FFF7FEFF 		bl	__aeabi_fmul
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 281


 12063 005a 0346     		mov	r3, r0
 12064 005c 1846     		mov	r0, r3
 12065 005e FFF7FEFF 		bl	__aeabi_f2iz
 12066 0062 0246     		mov	r2, r0
 12067 0064 304B     		ldr	r3, .L572+4
 12068 0066 1A60     		str	r2, [r3]
2313:..\src/command_processing.c **** 
2314:..\src/command_processing.c ****         g_refNew.pos += (g_mem.m_off[0] - off_1);
 12069              		.loc 1 2314 0
 12070 0068 2F4B     		ldr	r3, .L572+4
 12071 006a 1B68     		ldr	r3, [r3]
 12072 006c 1A46     		mov	r2, r3
 12073 006e 2F4B     		ldr	r3, .L572+8
 12074 0070 DB6B     		ldr	r3, [r3, #60]
 12075 0072 1946     		mov	r1, r3
 12076 0074 BB68     		ldr	r3, [r7, #8]
 12077 0076 CB1A     		subs	r3, r1, r3
 12078 0078 1344     		add	r3, r3, r2
 12079 007a 1A46     		mov	r2, r3
 12080 007c 2A4B     		ldr	r3, .L572+4
 12081 007e 1A60     		str	r2, [r3]
2315:..\src/command_processing.c ****         
2316:..\src/command_processing.c ****         // Check position Limits
2317:..\src/command_processing.c **** 
2318:..\src/command_processing.c ****         if (c_mem.pos_lim_flag) {                   // position limiting
 12082              		.loc 1 2318 0
 12083 0080 284B     		ldr	r3, .L572
 12084 0082 93F85430 		ldrb	r3, [r3, #84]	@ zero_extendqisi2
 12085 0086 002B     		cmp	r3, #0
 12086 0088 13D0     		beq	.L564
2319:..\src/command_processing.c ****             if (g_refNew.pos < c_mem.pos_lim_inf) 
 12087              		.loc 1 2319 0
 12088 008a 274B     		ldr	r3, .L572+4
 12089 008c 1A68     		ldr	r2, [r3]
 12090 008e 254B     		ldr	r3, .L572
 12091 0090 9B6D     		ldr	r3, [r3, #88]
 12092 0092 9A42     		cmp	r2, r3
 12093 0094 03DA     		bge	.L565
2320:..\src/command_processing.c ****                 g_refNew.pos = c_mem.pos_lim_inf;
 12094              		.loc 1 2320 0
 12095 0096 234B     		ldr	r3, .L572
 12096 0098 9B6D     		ldr	r3, [r3, #88]
 12097 009a 234A     		ldr	r2, .L572+4
 12098 009c 1360     		str	r3, [r2]
 12099              	.L565:
2321:..\src/command_processing.c **** 
2322:..\src/command_processing.c ****             if (g_refNew.pos > c_mem.pos_lim_sup) 
 12100              		.loc 1 2322 0
 12101 009e 224B     		ldr	r3, .L572+4
 12102 00a0 1A68     		ldr	r2, [r3]
 12103 00a2 204B     		ldr	r3, .L572
 12104 00a4 DB6D     		ldr	r3, [r3, #92]
 12105 00a6 9A42     		cmp	r2, r3
 12106 00a8 03DD     		ble	.L564
2323:..\src/command_processing.c ****                 g_refNew.pos = c_mem.pos_lim_sup;
 12107              		.loc 1 2323 0
 12108 00aa 1E4B     		ldr	r3, .L572
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 282


 12109 00ac DB6D     		ldr	r3, [r3, #92]
 12110 00ae 1E4A     		ldr	r2, .L572+4
 12111 00b0 1360     		str	r3, [r2]
 12112              	.L564:
2324:..\src/command_processing.c ****         }
2325:..\src/command_processing.c ****     }
2326:..\src/command_processing.c ****     // Store params 
2327:..\src/command_processing.c **** 
2328:..\src/command_processing.c ****     if (c_mem.id != g_mem.id) {     //If a new id is going to be set we will lose communication 
 12113              		.loc 1 2328 0
 12114 00b2 1C4B     		ldr	r3, .L572
 12115 00b4 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 12116 00b6 1D4B     		ldr	r3, .L572+8
 12117 00b8 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 12118 00ba 9A42     		cmp	r2, r3
 12119 00bc 20D0     		beq	.L566
2329:..\src/command_processing.c ****         old_id = c_mem.id;          //after the memstore(0) and the ACK won't be recognised
 12120              		.loc 1 2329 0
 12121 00be 194B     		ldr	r3, .L572
 12122 00c0 5B78     		ldrb	r3, [r3, #1]
 12123 00c2 FB70     		strb	r3, [r7, #3]
2330:..\src/command_processing.c ****         if(memStore(0)) {
 12124              		.loc 1 2330 0
 12125 00c4 0020     		movs	r0, #0
 12126 00c6 FFF7FEFF 		bl	memStore
 12127 00ca 0346     		mov	r3, r0
 12128 00cc 002B     		cmp	r3, #0
 12129 00ce 0BD0     		beq	.L567
2331:..\src/command_processing.c ****             packet_data[0] = ACK_OK;
 12130              		.loc 1 2331 0
 12131 00d0 0123     		movs	r3, #1
 12132 00d2 3B70     		strb	r3, [r7]
2332:..\src/command_processing.c ****             packet_data[1] = ACK_OK;
 12133              		.loc 1 2332 0
 12134 00d4 0123     		movs	r3, #1
 12135 00d6 7B70     		strb	r3, [r7, #1]
2333:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 12136              		.loc 1 2333 0
 12137 00d8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 12138 00da 99B2     		uxth	r1, r3
 12139 00dc FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 12140 00de 3B46     		mov	r3, r7
 12141 00e0 1846     		mov	r0, r3
 12142 00e2 FFF7FEFF 		bl	commWrite_old_id
2334:..\src/command_processing.c ****         }    
2335:..\src/command_processing.c ****         else{
2336:..\src/command_processing.c ****             packet_data[0] = ACK_ERROR;
2337:..\src/command_processing.c ****             packet_data[1] = ACK_ERROR;
2338:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
2339:..\src/command_processing.c ****         }
2340:..\src/command_processing.c ****     }    
2341:..\src/command_processing.c ****     else {
2342:..\src/command_processing.c ****         if(memStore(0))
2343:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
2344:..\src/command_processing.c ****         else
2345:..\src/command_processing.c ****             sendAcknowledgment(ACK_ERROR);
2346:..\src/command_processing.c ****     }
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 283


2347:..\src/command_processing.c **** }
 12143              		.loc 1 2347 0
 12144 00e6 18E0     		b	.L571
 12145              	.L567:
2336:..\src/command_processing.c ****             packet_data[1] = ACK_ERROR;
 12146              		.loc 1 2336 0
 12147 00e8 0023     		movs	r3, #0
 12148 00ea 3B70     		strb	r3, [r7]
2337:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 12149              		.loc 1 2337 0
 12150 00ec 0023     		movs	r3, #0
 12151 00ee 7B70     		strb	r3, [r7, #1]
2338:..\src/command_processing.c ****         }
 12152              		.loc 1 2338 0
 12153 00f0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 12154 00f2 99B2     		uxth	r1, r3
 12155 00f4 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 12156 00f6 3B46     		mov	r3, r7
 12157 00f8 1846     		mov	r0, r3
 12158 00fa FFF7FEFF 		bl	commWrite_old_id
 12159              		.loc 1 2347 0
 12160 00fe 0CE0     		b	.L571
 12161              	.L566:
2342:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 12162              		.loc 1 2342 0
 12163 0100 0020     		movs	r0, #0
 12164 0102 FFF7FEFF 		bl	memStore
 12165 0106 0346     		mov	r3, r0
 12166 0108 002B     		cmp	r3, #0
 12167 010a 03D0     		beq	.L570
2343:..\src/command_processing.c ****         else
 12168              		.loc 1 2343 0
 12169 010c 0120     		movs	r0, #1
 12170 010e FFF7FEFF 		bl	sendAcknowledgment
 12171              		.loc 1 2347 0
 12172 0112 02E0     		b	.L571
 12173              	.L570:
2345:..\src/command_processing.c ****     }
 12174              		.loc 1 2345 0
 12175 0114 0020     		movs	r0, #0
 12176 0116 FFF7FEFF 		bl	sendAcknowledgment
 12177              	.L571:
 12178              		.loc 1 2347 0
 12179 011a 00BF     		nop
 12180 011c 1037     		adds	r7, r7, #16
 12181              		.cfi_def_cfa_offset 8
 12182 011e BD46     		mov	sp, r7
 12183              		.cfi_def_cfa_register 13
 12184              		@ sp needed
 12185 0120 80BD     		pop	{r7, pc}
 12186              	.L573:
 12187 0122 00BF     		.align	2
 12188              	.L572:
 12189 0124 00000000 		.word	c_mem
 12190 0128 00000000 		.word	g_refNew
 12191 012c 00000000 		.word	g_mem
 12192              		.cfi_endproc
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 284


 12193              	.LFE95:
 12194              		.size	cmd_store_params, .-cmd_store_params
 12195              		.section	.text.cmd_get_emg,"ax",%progbits
 12196              		.align	2
 12197              		.global	cmd_get_emg
 12198              		.thumb
 12199              		.thumb_func
 12200              		.type	cmd_get_emg, %function
 12201              	cmd_get_emg:
 12202              	.LFB96:
2348:..\src/command_processing.c **** 
2349:..\src/command_processing.c **** void cmd_get_emg(){
 12203              		.loc 1 2349 0
 12204              		.cfi_startproc
 12205              		@ args = 0, pretend = 0, frame = 16
 12206              		@ frame_needed = 1, uses_anonymous_args = 0
 12207 0000 80B5     		push	{r7, lr}
 12208              		.cfi_def_cfa_offset 8
 12209              		.cfi_offset 7, -8
 12210              		.cfi_offset 14, -4
 12211 0002 84B0     		sub	sp, sp, #16
 12212              		.cfi_def_cfa_offset 24
 12213 0004 00AF     		add	r7, sp, #0
 12214              		.cfi_def_cfa_register 7
2350:..\src/command_processing.c ****     
2351:..\src/command_processing.c ****     uint8 packet_data[6];
2352:..\src/command_processing.c ****     int16 aux_int16;
2353:..\src/command_processing.c ****     
2354:..\src/command_processing.c ****     // Header        
2355:..\src/command_processing.c ****     packet_data[0] = CMD_GET_EMG;
 12215              		.loc 1 2355 0
 12216 0006 8823     		movs	r3, #136
 12217 0008 3B72     		strb	r3, [r7, #8]
2356:..\src/command_processing.c ****     
2357:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld.emg[0];
 12218              		.loc 1 2357 0
 12219 000a 144B     		ldr	r3, .L575
 12220 000c 9B69     		ldr	r3, [r3, #24]
 12221 000e 1BB2     		sxth	r3, r3
 12222 0010 FB80     		strh	r3, [r7, #6]	@ movhi
2358:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 12223              		.loc 1 2358 0
 12224 0012 BB1D     		adds	r3, r7, #6
 12225 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12226 0016 BB72     		strb	r3, [r7, #10]
2359:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 12227              		.loc 1 2359 0
 12228 0018 BB1D     		adds	r3, r7, #6
 12229 001a 0133     		adds	r3, r3, #1
 12230 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12231 001e 7B72     		strb	r3, [r7, #9]
2360:..\src/command_processing.c ****     //*((int16 *) &packet_data[1]) = (int16) g_measOld.emg[0];
2361:..\src/command_processing.c ****     
2362:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld.emg[1];
 12232              		.loc 1 2362 0
 12233 0020 0E4B     		ldr	r3, .L575
 12234 0022 DB69     		ldr	r3, [r3, #28]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 285


 12235 0024 1BB2     		sxth	r3, r3
 12236 0026 FB80     		strh	r3, [r7, #6]	@ movhi
2363:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 12237              		.loc 1 2363 0
 12238 0028 BB1D     		adds	r3, r7, #6
 12239 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12240 002c 3B73     		strb	r3, [r7, #12]
2364:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 12241              		.loc 1 2364 0
 12242 002e BB1D     		adds	r3, r7, #6
 12243 0030 0133     		adds	r3, r3, #1
 12244 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12245 0034 FB72     		strb	r3, [r7, #11]
2365:..\src/command_processing.c ****     //*((int16 *) &packet_data[3]) = (int16) g_measOld.emg[1];
2366:..\src/command_processing.c **** 
2367:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 12246              		.loc 1 2367 0
 12247 0036 07F10803 		add	r3, r7, #8
 12248 003a 0521     		movs	r1, #5
 12249 003c 1846     		mov	r0, r3
 12250 003e FFF7FEFF 		bl	LCRChecksum
 12251 0042 0346     		mov	r3, r0
 12252 0044 7B73     		strb	r3, [r7, #13]
2368:..\src/command_processing.c **** 
2369:..\src/command_processing.c ****     commWrite(packet_data, 6);
 12253              		.loc 1 2369 0
 12254 0046 07F10803 		add	r3, r7, #8
 12255 004a 0621     		movs	r1, #6
 12256 004c 1846     		mov	r0, r3
 12257 004e FFF7FEFF 		bl	commWrite
2370:..\src/command_processing.c **** 
2371:..\src/command_processing.c **** }
 12258              		.loc 1 2371 0
 12259 0052 00BF     		nop
 12260 0054 1037     		adds	r7, r7, #16
 12261              		.cfi_def_cfa_offset 8
 12262 0056 BD46     		mov	sp, r7
 12263              		.cfi_def_cfa_register 13
 12264              		@ sp needed
 12265 0058 80BD     		pop	{r7, pc}
 12266              	.L576:
 12267 005a 00BF     		.align	2
 12268              	.L575:
 12269 005c 00000000 		.word	g_measOld
 12270              		.cfi_endproc
 12271              	.LFE96:
 12272              		.size	cmd_get_emg, .-cmd_get_emg
 12273              		.section	.text.cmd_get_imu_readings,"ax",%progbits
 12274              		.align	2
 12275              		.global	cmd_get_imu_readings
 12276              		.thumb
 12277              		.thumb_func
 12278              		.type	cmd_get_imu_readings, %function
 12279              	cmd_get_imu_readings:
 12280              	.LFB97:
2372:..\src/command_processing.c **** 
2373:..\src/command_processing.c **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 286


2374:..\src/command_processing.c **** void cmd_get_imu_readings(){
 12281              		.loc 1 2374 0
 12282              		.cfi_startproc
 12283              		@ args = 0, pretend = 0, frame = 392
 12284              		@ frame_needed = 1, uses_anonymous_args = 0
 12285 0000 90B5     		push	{r4, r7, lr}
 12286              		.cfi_def_cfa_offset 12
 12287              		.cfi_offset 4, -12
 12288              		.cfi_offset 7, -8
 12289              		.cfi_offset 14, -4
 12290 0002 E3B0     		sub	sp, sp, #396
 12291              		.cfi_def_cfa_offset 408
 12292 0004 00AF     		add	r7, sp, #0
 12293              		.cfi_def_cfa_register 7
2375:..\src/command_processing.c ****     //Retrieve accelerometers, gyroscopes and magnetometers readings
2376:..\src/command_processing.c ****     
2377:..\src/command_processing.c ****     uint8 k_imu;
2378:..\src/command_processing.c ****     uint8 c = 1;
 12294              		.loc 1 2378 0
 12295 0006 0123     		movs	r3, #1
 12296 0008 87F88631 		strb	r3, [r7, #390]
2379:..\src/command_processing.c ****     uint8 k = 0;
 12297              		.loc 1 2379 0
 12298 000c 0023     		movs	r3, #0
 12299 000e 87F88531 		strb	r3, [r7, #389]
2380:..\src/command_processing.c ****     uint8 gl_c = 1;
 12300              		.loc 1 2380 0
 12301 0012 0123     		movs	r3, #1
 12302 0014 87F88431 		strb	r3, [r7, #388]
2381:..\src/command_processing.c ****     int16 aux_int16;
2382:..\src/command_processing.c ****     float aux_float;
2383:..\src/command_processing.c ****     
2384:..\src/command_processing.c ****     // Packet: header + imu id(uint8) + imu flags(uint8) + crc  
2385:..\src/command_processing.c ****     uint8 packet_data[350];
2386:..\src/command_processing.c ****     uint8 single_packet[22];
2387:..\src/command_processing.c ****     
2388:..\src/command_processing.c ****     //Header package 
2389:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_READINGS;
 12303              		.loc 1 2389 0
 12304 0018 07F11C03 		add	r3, r7, #28
 12305 001c A122     		movs	r2, #161
 12306 001e 1A70     		strb	r2, [r3]
2390:..\src/command_processing.c ****  
2391:..\src/command_processing.c ****     for (k_imu = 0; k_imu < N_IMU_Connected; k_imu++) 
 12307              		.loc 1 2391 0
 12308 0020 0023     		movs	r3, #0
 12309 0022 87F88731 		strb	r3, [r7, #391]
 12310 0026 7EE2     		b	.L578
 12311              	.L594:
2392:..\src/command_processing.c ****     {	
2393:..\src/command_processing.c ****         
2394:..\src/command_processing.c ****         single_packet[0] = (uint8) 0x3A; //':';
 12312              		.loc 1 2394 0
 12313 0028 3B1D     		adds	r3, r7, #4
 12314 002a 3A22     		movs	r2, #58
 12315 002c 1A70     		strb	r2, [r3]
2395:..\src/command_processing.c ****         if (c_mem.IMU_conf[IMU_connected[k_imu]][0]){
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 287


 12316              		.loc 1 2395 0
 12317 002e 97F88731 		ldrb	r3, [r7, #391]	@ zero_extendqisi2
 12318 0032 DA4A     		ldr	r2, .L595
 12319 0034 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12320 0036 1946     		mov	r1, r3
 12321 0038 D94A     		ldr	r2, .L595+4
 12322 003a 0B46     		mov	r3, r1
 12323 003c 9B00     		lsls	r3, r3, #2
 12324 003e 0B44     		add	r3, r3, r1
 12325 0040 1344     		add	r3, r3, r2
 12326 0042 03F22113 		addw	r3, r3, #289
 12327 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12328 0048 002B     		cmp	r3, #0
 12329 004a 5DD0     		beq	.L579
2396:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[0];
 12330              		.loc 1 2396 0
 12331 004c 97F88721 		ldrb	r2, [r7, #391]	@ zero_extendqisi2
 12332 0050 D449     		ldr	r1, .L595+8
 12333 0052 1346     		mov	r3, r2
 12334 0054 9B00     		lsls	r3, r3, #2
 12335 0056 1344     		add	r3, r3, r2
 12336 0058 DB00     		lsls	r3, r3, #3
 12337 005a 0B44     		add	r3, r3, r1
 12338 005c 0233     		adds	r3, r3, #2
 12339 005e B3F90030 		ldrsh	r3, [r3]
 12340 0062 A7F88231 		strh	r3, [r7, #386]	@ movhi
2397:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 12341              		.loc 1 2397 0
 12342 0066 97F88631 		ldrb	r3, [r7, #390]	@ zero_extendqisi2
 12343 006a 0133     		adds	r3, r3, #1
 12344 006c 07F5C172 		add	r2, r7, #386
 12345 0070 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 12346 0072 3A1D     		adds	r2, r7, #4
 12347 0074 D154     		strb	r1, [r2, r3]
2398:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 12348              		.loc 1 2398 0
 12349 0076 97F88621 		ldrb	r2, [r7, #390]	@ zero_extendqisi2
 12350 007a 07F5C173 		add	r3, r7, #386
 12351 007e 0133     		adds	r3, r3, #1
 12352 0080 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12353 0082 3B1D     		adds	r3, r7, #4
 12354 0084 9954     		strb	r1, [r3, r2]
2399:..\src/command_processing.c ****             //*((int16 *) &single_packet[c]) = (int16) g_imu[k_imu].accel_value[0];
2400:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[1];
 12355              		.loc 1 2400 0
 12356 0086 97F88721 		ldrb	r2, [r7, #391]	@ zero_extendqisi2
 12357 008a C649     		ldr	r1, .L595+8
 12358 008c 1346     		mov	r3, r2
 12359 008e 9B00     		lsls	r3, r3, #2
 12360 0090 1344     		add	r3, r3, r2
 12361 0092 DB00     		lsls	r3, r3, #3
 12362 0094 0B44     		add	r3, r3, r1
 12363 0096 0433     		adds	r3, r3, #4
 12364 0098 B3F90030 		ldrsh	r3, [r3]
 12365 009c A7F88231 		strh	r3, [r7, #386]	@ movhi
2401:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 12366              		.loc 1 2401 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 288


 12367 00a0 97F88631 		ldrb	r3, [r7, #390]	@ zero_extendqisi2
 12368 00a4 0333     		adds	r3, r3, #3
 12369 00a6 07F5C172 		add	r2, r7, #386
 12370 00aa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 12371 00ac 3A1D     		adds	r2, r7, #4
 12372 00ae D154     		strb	r1, [r2, r3]
2402:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 12373              		.loc 1 2402 0
 12374 00b0 97F88631 		ldrb	r3, [r7, #390]	@ zero_extendqisi2
 12375 00b4 9A1C     		adds	r2, r3, #2
 12376 00b6 07F5C173 		add	r3, r7, #386
 12377 00ba 0133     		adds	r3, r3, #1
 12378 00bc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12379 00be 3B1D     		adds	r3, r7, #4
 12380 00c0 9954     		strb	r1, [r3, r2]
2403:..\src/command_processing.c ****             //*((int16 *) &single_packet[c+2]) = (int16) g_imu[k_imu].accel_value[1];
2404:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[2];
 12381              		.loc 1 2404 0
 12382 00c2 97F88721 		ldrb	r2, [r7, #391]	@ zero_extendqisi2
 12383 00c6 B749     		ldr	r1, .L595+8
 12384 00c8 1346     		mov	r3, r2
 12385 00ca 9B00     		lsls	r3, r3, #2
 12386 00cc 1344     		add	r3, r3, r2
 12387 00ce DB00     		lsls	r3, r3, #3
 12388 00d0 0B44     		add	r3, r3, r1
 12389 00d2 0633     		adds	r3, r3, #6
 12390 00d4 B3F90030 		ldrsh	r3, [r3]
 12391 00d8 A7F88231 		strh	r3, [r7, #386]	@ movhi
2405:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 12392              		.loc 1 2405 0
 12393 00dc 97F88631 		ldrb	r3, [r7, #390]	@ zero_extendqisi2
 12394 00e0 0533     		adds	r3, r3, #5
 12395 00e2 07F5C172 		add	r2, r7, #386
 12396 00e6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 12397 00e8 3A1D     		adds	r2, r7, #4
 12398 00ea D154     		strb	r1, [r2, r3]
2406:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 12399              		.loc 1 2406 0
 12400 00ec 97F88631 		ldrb	r3, [r7, #390]	@ zero_extendqisi2
 12401 00f0 1A1D     		adds	r2, r3, #4
 12402 00f2 07F5C173 		add	r3, r7, #386
 12403 00f6 0133     		adds	r3, r3, #1
 12404 00f8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12405 00fa 3B1D     		adds	r3, r7, #4
 12406 00fc 9954     		strb	r1, [r3, r2]
2407:..\src/command_processing.c ****             //*((int16 *) &single_packet[c+4]) = (int16) g_imu[k_imu].accel_value[2];
2408:..\src/command_processing.c ****             c = c + 6;
 12407              		.loc 1 2408 0
 12408 00fe 97F88631 		ldrb	r3, [r7, #390]
 12409 0102 0633     		adds	r3, r3, #6
 12410 0104 87F88631 		strb	r3, [r7, #390]
 12411              	.L579:
2409:..\src/command_processing.c ****         }
2410:..\src/command_processing.c ****         if (c_mem.IMU_conf[IMU_connected[k_imu]][1]){
 12412              		.loc 1 2410 0
 12413 0108 97F88731 		ldrb	r3, [r7, #391]	@ zero_extendqisi2
 12414 010c A34A     		ldr	r2, .L595
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 289


 12415 010e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12416 0110 1946     		mov	r1, r3
 12417 0112 A34A     		ldr	r2, .L595+4
 12418 0114 0B46     		mov	r3, r1
 12419 0116 9B00     		lsls	r3, r3, #2
 12420 0118 0B44     		add	r3, r3, r1
 12421 011a 1344     		add	r3, r3, r2
 12422 011c 03F59173 		add	r3, r3, #290
 12423 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12424 0122 002B     		cmp	r3, #0
 12425 0124 5DD0     		beq	.L580
2411:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[0];
 12426              		.loc 1 2411 0
 12427 0126 97F88721 		ldrb	r2, [r7, #391]	@ zero_extendqisi2
 12428 012a 9E49     		ldr	r1, .L595+8
 12429 012c 1346     		mov	r3, r2
 12430 012e 9B00     		lsls	r3, r3, #2
 12431 0130 1344     		add	r3, r3, r2
 12432 0132 DB00     		lsls	r3, r3, #3
 12433 0134 0B44     		add	r3, r3, r1
 12434 0136 0833     		adds	r3, r3, #8
 12435 0138 B3F90030 		ldrsh	r3, [r3]
 12436 013c A7F88231 		strh	r3, [r7, #386]	@ movhi
2412:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 12437              		.loc 1 2412 0
 12438 0140 97F88631 		ldrb	r3, [r7, #390]	@ zero_extendqisi2
 12439 0144 0133     		adds	r3, r3, #1
 12440 0146 07F5C172 		add	r2, r7, #386
 12441 014a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 12442 014c 3A1D     		adds	r2, r7, #4
 12443 014e D154     		strb	r1, [r2, r3]
2413:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 12444              		.loc 1 2413 0
 12445 0150 97F88621 		ldrb	r2, [r7, #390]	@ zero_extendqisi2
 12446 0154 07F5C173 		add	r3, r7, #386
 12447 0158 0133     		adds	r3, r3, #1
 12448 015a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12449 015c 3B1D     		adds	r3, r7, #4
 12450 015e 9954     		strb	r1, [r3, r2]
2414:..\src/command_processing.c ****             //*((int16 *) &single_packet[c])   = (int16) g_imu[k_imu].gyro_value[0];
2415:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[1];
 12451              		.loc 1 2415 0
 12452 0160 97F88721 		ldrb	r2, [r7, #391]	@ zero_extendqisi2
 12453 0164 8F49     		ldr	r1, .L595+8
 12454 0166 1346     		mov	r3, r2
 12455 0168 9B00     		lsls	r3, r3, #2
 12456 016a 1344     		add	r3, r3, r2
 12457 016c DB00     		lsls	r3, r3, #3
 12458 016e 0B44     		add	r3, r3, r1
 12459 0170 0A33     		adds	r3, r3, #10
 12460 0172 B3F90030 		ldrsh	r3, [r3]
 12461 0176 A7F88231 		strh	r3, [r7, #386]	@ movhi
2416:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 12462              		.loc 1 2416 0
 12463 017a 97F88631 		ldrb	r3, [r7, #390]	@ zero_extendqisi2
 12464 017e 0333     		adds	r3, r3, #3
 12465 0180 07F5C172 		add	r2, r7, #386
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 290


 12466 0184 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 12467 0186 3A1D     		adds	r2, r7, #4
 12468 0188 D154     		strb	r1, [r2, r3]
2417:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 12469              		.loc 1 2417 0
 12470 018a 97F88631 		ldrb	r3, [r7, #390]	@ zero_extendqisi2
 12471 018e 9A1C     		adds	r2, r3, #2
 12472 0190 07F5C173 		add	r3, r7, #386
 12473 0194 0133     		adds	r3, r3, #1
 12474 0196 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12475 0198 3B1D     		adds	r3, r7, #4
 12476 019a 9954     		strb	r1, [r3, r2]
2418:..\src/command_processing.c ****             //*((int16 *) &single_packet[c+2]) = (int16) g_imu[k_imu].gyro_value[1];
2419:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[2];
 12477              		.loc 1 2419 0
 12478 019c 97F88721 		ldrb	r2, [r7, #391]	@ zero_extendqisi2
 12479 01a0 8049     		ldr	r1, .L595+8
 12480 01a2 1346     		mov	r3, r2
 12481 01a4 9B00     		lsls	r3, r3, #2
 12482 01a6 1344     		add	r3, r3, r2
 12483 01a8 DB00     		lsls	r3, r3, #3
 12484 01aa 0B44     		add	r3, r3, r1
 12485 01ac 0C33     		adds	r3, r3, #12
 12486 01ae B3F90030 		ldrsh	r3, [r3]
 12487 01b2 A7F88231 		strh	r3, [r7, #386]	@ movhi
2420:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 12488              		.loc 1 2420 0
 12489 01b6 97F88631 		ldrb	r3, [r7, #390]	@ zero_extendqisi2
 12490 01ba 0533     		adds	r3, r3, #5
 12491 01bc 07F5C172 		add	r2, r7, #386
 12492 01c0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 12493 01c2 3A1D     		adds	r2, r7, #4
 12494 01c4 D154     		strb	r1, [r2, r3]
2421:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 12495              		.loc 1 2421 0
 12496 01c6 97F88631 		ldrb	r3, [r7, #390]	@ zero_extendqisi2
 12497 01ca 1A1D     		adds	r2, r3, #4
 12498 01cc 07F5C173 		add	r3, r7, #386
 12499 01d0 0133     		adds	r3, r3, #1
 12500 01d2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12501 01d4 3B1D     		adds	r3, r7, #4
 12502 01d6 9954     		strb	r1, [r3, r2]
2422:..\src/command_processing.c ****             //*((int16 *) &single_packet[c+4]) = (int16) g_imu[k_imu].gyro_value[2];
2423:..\src/command_processing.c ****             c = c + 6;
 12503              		.loc 1 2423 0
 12504 01d8 97F88631 		ldrb	r3, [r7, #390]
 12505 01dc 0633     		adds	r3, r3, #6
 12506 01de 87F88631 		strb	r3, [r7, #390]
 12507              	.L580:
2424:..\src/command_processing.c ****         }
2425:..\src/command_processing.c ****         if (c_mem.IMU_conf[IMU_connected[k_imu]][2]){
 12508              		.loc 1 2425 0
 12509 01e2 97F88731 		ldrb	r3, [r7, #391]	@ zero_extendqisi2
 12510 01e6 6D4A     		ldr	r2, .L595
 12511 01e8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12512 01ea 1946     		mov	r1, r3
 12513 01ec 6C4A     		ldr	r2, .L595+4
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 291


 12514 01ee 0B46     		mov	r3, r1
 12515 01f0 9B00     		lsls	r3, r3, #2
 12516 01f2 0B44     		add	r3, r3, r1
 12517 01f4 1344     		add	r3, r3, r2
 12518 01f6 03F22313 		addw	r3, r3, #291
 12519 01fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12520 01fc 002B     		cmp	r3, #0
 12521 01fe 5DD0     		beq	.L581
2426:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[0];
 12522              		.loc 1 2426 0
 12523 0200 97F88721 		ldrb	r2, [r7, #391]	@ zero_extendqisi2
 12524 0204 6749     		ldr	r1, .L595+8
 12525 0206 1346     		mov	r3, r2
 12526 0208 9B00     		lsls	r3, r3, #2
 12527 020a 1344     		add	r3, r3, r2
 12528 020c DB00     		lsls	r3, r3, #3
 12529 020e 0B44     		add	r3, r3, r1
 12530 0210 0E33     		adds	r3, r3, #14
 12531 0212 B3F90030 		ldrsh	r3, [r3]
 12532 0216 A7F88231 		strh	r3, [r7, #386]	@ movhi
2427:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 12533              		.loc 1 2427 0
 12534 021a 97F88631 		ldrb	r3, [r7, #390]	@ zero_extendqisi2
 12535 021e 0133     		adds	r3, r3, #1
 12536 0220 07F5C172 		add	r2, r7, #386
 12537 0224 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 12538 0226 3A1D     		adds	r2, r7, #4
 12539 0228 D154     		strb	r1, [r2, r3]
2428:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 12540              		.loc 1 2428 0
 12541 022a 97F88621 		ldrb	r2, [r7, #390]	@ zero_extendqisi2
 12542 022e 07F5C173 		add	r3, r7, #386
 12543 0232 0133     		adds	r3, r3, #1
 12544 0234 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12545 0236 3B1D     		adds	r3, r7, #4
 12546 0238 9954     		strb	r1, [r3, r2]
2429:..\src/command_processing.c ****             //*((int16 *) &single_packet[c])   = (int16) g_imu[k_imu].mag_value[0];
2430:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[1];
 12547              		.loc 1 2430 0
 12548 023a 97F88721 		ldrb	r2, [r7, #391]	@ zero_extendqisi2
 12549 023e 5949     		ldr	r1, .L595+8
 12550 0240 1346     		mov	r3, r2
 12551 0242 9B00     		lsls	r3, r3, #2
 12552 0244 1344     		add	r3, r3, r2
 12553 0246 DB00     		lsls	r3, r3, #3
 12554 0248 0B44     		add	r3, r3, r1
 12555 024a 1033     		adds	r3, r3, #16
 12556 024c B3F90030 		ldrsh	r3, [r3]
 12557 0250 A7F88231 		strh	r3, [r7, #386]	@ movhi
2431:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 12558              		.loc 1 2431 0
 12559 0254 97F88631 		ldrb	r3, [r7, #390]	@ zero_extendqisi2
 12560 0258 0333     		adds	r3, r3, #3
 12561 025a 07F5C172 		add	r2, r7, #386
 12562 025e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 12563 0260 3A1D     		adds	r2, r7, #4
 12564 0262 D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 292


2432:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 12565              		.loc 1 2432 0
 12566 0264 97F88631 		ldrb	r3, [r7, #390]	@ zero_extendqisi2
 12567 0268 9A1C     		adds	r2, r3, #2
 12568 026a 07F5C173 		add	r3, r7, #386
 12569 026e 0133     		adds	r3, r3, #1
 12570 0270 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12571 0272 3B1D     		adds	r3, r7, #4
 12572 0274 9954     		strb	r1, [r3, r2]
2433:..\src/command_processing.c ****             //*((int16 *) &single_packet[c+2]) = (int16) g_imu[k_imu].mag_value[1];
2434:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[2];
 12573              		.loc 1 2434 0
 12574 0276 97F88721 		ldrb	r2, [r7, #391]	@ zero_extendqisi2
 12575 027a 4A49     		ldr	r1, .L595+8
 12576 027c 1346     		mov	r3, r2
 12577 027e 9B00     		lsls	r3, r3, #2
 12578 0280 1344     		add	r3, r3, r2
 12579 0282 DB00     		lsls	r3, r3, #3
 12580 0284 0B44     		add	r3, r3, r1
 12581 0286 1233     		adds	r3, r3, #18
 12582 0288 B3F90030 		ldrsh	r3, [r3]
 12583 028c A7F88231 		strh	r3, [r7, #386]	@ movhi
2435:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 12584              		.loc 1 2435 0
 12585 0290 97F88631 		ldrb	r3, [r7, #390]	@ zero_extendqisi2
 12586 0294 0533     		adds	r3, r3, #5
 12587 0296 07F5C172 		add	r2, r7, #386
 12588 029a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 12589 029c 3A1D     		adds	r2, r7, #4
 12590 029e D154     		strb	r1, [r2, r3]
2436:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 12591              		.loc 1 2436 0
 12592 02a0 97F88631 		ldrb	r3, [r7, #390]	@ zero_extendqisi2
 12593 02a4 1A1D     		adds	r2, r3, #4
 12594 02a6 07F5C173 		add	r3, r7, #386
 12595 02aa 0133     		adds	r3, r3, #1
 12596 02ac 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12597 02ae 3B1D     		adds	r3, r7, #4
 12598 02b0 9954     		strb	r1, [r3, r2]
2437:..\src/command_processing.c ****             //*((int16 *) &single_packet[c+4]) = (int16) g_imu[k_imu].mag_value[2];
2438:..\src/command_processing.c ****             c = c + 6;
 12599              		.loc 1 2438 0
 12600 02b2 97F88631 		ldrb	r3, [r7, #390]
 12601 02b6 0633     		adds	r3, r3, #6
 12602 02b8 87F88631 		strb	r3, [r7, #390]
 12603              	.L581:
2439:..\src/command_processing.c ****         }
2440:..\src/command_processing.c ****         if (c_mem.IMU_conf[IMU_connected[k_imu]][3]){
 12604              		.loc 1 2440 0
 12605 02bc 97F88731 		ldrb	r3, [r7, #391]	@ zero_extendqisi2
 12606 02c0 364A     		ldr	r2, .L595
 12607 02c2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12608 02c4 1946     		mov	r1, r3
 12609 02c6 364A     		ldr	r2, .L595+4
 12610 02c8 0B46     		mov	r3, r1
 12611 02ca 9B00     		lsls	r3, r3, #2
 12612 02cc 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 293


 12613 02ce 1344     		add	r3, r3, r2
 12614 02d0 03F59273 		add	r3, r3, #292
 12615 02d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12616 02d6 002B     		cmp	r3, #0
 12617 02d8 00F0AB80 		beq	.L582
2441:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[0];
 12618              		.loc 1 2441 0
 12619 02dc 97F88721 		ldrb	r2, [r7, #391]	@ zero_extendqisi2
 12620 02e0 3049     		ldr	r1, .L595+8
 12621 02e2 1346     		mov	r3, r2
 12622 02e4 9B00     		lsls	r3, r3, #2
 12623 02e6 1344     		add	r3, r3, r2
 12624 02e8 DB00     		lsls	r3, r3, #3
 12625 02ea 0B44     		add	r3, r3, r1
 12626 02ec 1433     		adds	r3, r3, #20
 12627 02ee 1B68     		ldr	r3, [r3]	@ float
 12628 02f0 C7F87C31 		str	r3, [r7, #380]	@ float
2442:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 12629              		.loc 1 2442 0
 12630 02f4 0023     		movs	r3, #0
 12631 02f6 87F88531 		strb	r3, [r7, #389]
 12632 02fa 13E0     		b	.L583
 12633              	.L584:
2443:..\src/command_processing.c ****                 single_packet[c + 4 - k -1] = ((char*)(&aux_float))[k];
 12634              		.loc 1 2443 0 discriminator 3
 12635 02fc 97F88631 		ldrb	r3, [r7, #390]	@ zero_extendqisi2
 12636 0300 1A1D     		adds	r2, r3, #4
 12637 0302 97F88531 		ldrb	r3, [r7, #389]	@ zero_extendqisi2
 12638 0306 D31A     		subs	r3, r2, r3
 12639 0308 013B     		subs	r3, r3, #1
 12640 030a 97F88521 		ldrb	r2, [r7, #389]	@ zero_extendqisi2
 12641 030e 07F5BE71 		add	r1, r7, #380
 12642 0312 0A44     		add	r2, r2, r1
 12643 0314 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 12644 0316 3A1D     		adds	r2, r7, #4
 12645 0318 D154     		strb	r1, [r2, r3]
2442:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 12646              		.loc 1 2442 0 discriminator 3
 12647 031a 97F88531 		ldrb	r3, [r7, #389]	@ zero_extendqisi2
 12648 031e 0133     		adds	r3, r3, #1
 12649 0320 87F88531 		strb	r3, [r7, #389]
 12650              	.L583:
2442:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 12651              		.loc 1 2442 0 is_stmt 0 discriminator 1
 12652 0324 97F88531 		ldrb	r3, [r7, #389]	@ zero_extendqisi2
 12653 0328 032B     		cmp	r3, #3
 12654 032a E7D9     		bls	.L584
2444:..\src/command_processing.c ****             }
2445:..\src/command_processing.c ****             //*((float *) &single_packet[c])   = (float) g_imu[k_imu].quat_value[0];
2446:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[1];
 12655              		.loc 1 2446 0 is_stmt 1
 12656 032c 97F88721 		ldrb	r2, [r7, #391]	@ zero_extendqisi2
 12657 0330 1C49     		ldr	r1, .L595+8
 12658 0332 1346     		mov	r3, r2
 12659 0334 9B00     		lsls	r3, r3, #2
 12660 0336 1344     		add	r3, r3, r2
 12661 0338 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 294


 12662 033a 0B44     		add	r3, r3, r1
 12663 033c 1833     		adds	r3, r3, #24
 12664 033e 1B68     		ldr	r3, [r3]	@ float
 12665 0340 C7F87C31 		str	r3, [r7, #380]	@ float
2447:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 12666              		.loc 1 2447 0
 12667 0344 0023     		movs	r3, #0
 12668 0346 87F88531 		strb	r3, [r7, #389]
 12669 034a 13E0     		b	.L585
 12670              	.L586:
2448:..\src/command_processing.c ****                 single_packet[c + 4 - k -1] = ((char*)(&aux_float))[k];
 12671              		.loc 1 2448 0 discriminator 3
 12672 034c 97F88631 		ldrb	r3, [r7, #390]	@ zero_extendqisi2
 12673 0350 1A1D     		adds	r2, r3, #4
 12674 0352 97F88531 		ldrb	r3, [r7, #389]	@ zero_extendqisi2
 12675 0356 D31A     		subs	r3, r2, r3
 12676 0358 013B     		subs	r3, r3, #1
 12677 035a 97F88521 		ldrb	r2, [r7, #389]	@ zero_extendqisi2
 12678 035e 07F5BE71 		add	r1, r7, #380
 12679 0362 0A44     		add	r2, r2, r1
 12680 0364 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 12681 0366 3A1D     		adds	r2, r7, #4
 12682 0368 D154     		strb	r1, [r2, r3]
2447:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 12683              		.loc 1 2447 0 discriminator 3
 12684 036a 97F88531 		ldrb	r3, [r7, #389]	@ zero_extendqisi2
 12685 036e 0133     		adds	r3, r3, #1
 12686 0370 87F88531 		strb	r3, [r7, #389]
 12687              	.L585:
2447:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 12688              		.loc 1 2447 0 is_stmt 0 discriminator 1
 12689 0374 97F88531 		ldrb	r3, [r7, #389]	@ zero_extendqisi2
 12690 0378 032B     		cmp	r3, #3
 12691 037a E7D9     		bls	.L586
2449:..\src/command_processing.c ****             }
2450:..\src/command_processing.c ****             //*((float *) &single_packet[c+4]) = (float) g_imu[k_imu].quat_value[1];
2451:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[2];
 12692              		.loc 1 2451 0 is_stmt 1
 12693 037c 97F88721 		ldrb	r2, [r7, #391]	@ zero_extendqisi2
 12694 0380 0849     		ldr	r1, .L595+8
 12695 0382 1346     		mov	r3, r2
 12696 0384 9B00     		lsls	r3, r3, #2
 12697 0386 1344     		add	r3, r3, r2
 12698 0388 DB00     		lsls	r3, r3, #3
 12699 038a 0B44     		add	r3, r3, r1
 12700 038c 1C33     		adds	r3, r3, #28
 12701 038e 1B68     		ldr	r3, [r3]	@ float
 12702 0390 C7F87C31 		str	r3, [r7, #380]	@ float
2452:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 12703              		.loc 1 2452 0
 12704 0394 0023     		movs	r3, #0
 12705 0396 87F88531 		strb	r3, [r7, #389]
 12706 039a 19E0     		b	.L587
 12707              	.L596:
 12708              		.align	2
 12709              	.L595:
 12710 039c 00000000 		.word	IMU_connected
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 295


 12711 03a0 00000000 		.word	c_mem
 12712 03a4 00000000 		.word	g_imu
 12713              	.L588:
2453:..\src/command_processing.c ****                 single_packet[c + 4 - k -1] = ((char*)(&aux_float))[k];
 12714              		.loc 1 2453 0 discriminator 3
 12715 03a8 97F88631 		ldrb	r3, [r7, #390]	@ zero_extendqisi2
 12716 03ac 1A1D     		adds	r2, r3, #4
 12717 03ae 97F88531 		ldrb	r3, [r7, #389]	@ zero_extendqisi2
 12718 03b2 D31A     		subs	r3, r2, r3
 12719 03b4 013B     		subs	r3, r3, #1
 12720 03b6 97F88521 		ldrb	r2, [r7, #389]	@ zero_extendqisi2
 12721 03ba 07F5BE71 		add	r1, r7, #380
 12722 03be 0A44     		add	r2, r2, r1
 12723 03c0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 12724 03c2 3A1D     		adds	r2, r7, #4
 12725 03c4 D154     		strb	r1, [r2, r3]
2452:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 12726              		.loc 1 2452 0 discriminator 3
 12727 03c6 97F88531 		ldrb	r3, [r7, #389]	@ zero_extendqisi2
 12728 03ca 0133     		adds	r3, r3, #1
 12729 03cc 87F88531 		strb	r3, [r7, #389]
 12730              	.L587:
2452:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 12731              		.loc 1 2452 0 is_stmt 0 discriminator 1
 12732 03d0 97F88531 		ldrb	r3, [r7, #389]	@ zero_extendqisi2
 12733 03d4 032B     		cmp	r3, #3
 12734 03d6 E7D9     		bls	.L588
2454:..\src/command_processing.c ****             }
2455:..\src/command_processing.c ****             //*((float *) &single_packet[c+8]) = (float) g_imu[k_imu].quat_value[2];
2456:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[3];
 12735              		.loc 1 2456 0 is_stmt 1
 12736 03d8 97F88721 		ldrb	r2, [r7, #391]	@ zero_extendqisi2
 12737 03dc 6649     		ldr	r1, .L597
 12738 03de 1346     		mov	r3, r2
 12739 03e0 9B00     		lsls	r3, r3, #2
 12740 03e2 1344     		add	r3, r3, r2
 12741 03e4 DB00     		lsls	r3, r3, #3
 12742 03e6 0B44     		add	r3, r3, r1
 12743 03e8 2033     		adds	r3, r3, #32
 12744 03ea 1B68     		ldr	r3, [r3]	@ float
 12745 03ec C7F87C31 		str	r3, [r7, #380]	@ float
2457:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 12746              		.loc 1 2457 0
 12747 03f0 0023     		movs	r3, #0
 12748 03f2 87F88531 		strb	r3, [r7, #389]
 12749 03f6 13E0     		b	.L589
 12750              	.L590:
2458:..\src/command_processing.c ****                 single_packet[c + 4 - k -1] = ((char*)(&aux_float))[k];
 12751              		.loc 1 2458 0 discriminator 3
 12752 03f8 97F88631 		ldrb	r3, [r7, #390]	@ zero_extendqisi2
 12753 03fc 1A1D     		adds	r2, r3, #4
 12754 03fe 97F88531 		ldrb	r3, [r7, #389]	@ zero_extendqisi2
 12755 0402 D31A     		subs	r3, r2, r3
 12756 0404 013B     		subs	r3, r3, #1
 12757 0406 97F88521 		ldrb	r2, [r7, #389]	@ zero_extendqisi2
 12758 040a 07F5BE71 		add	r1, r7, #380
 12759 040e 0A44     		add	r2, r2, r1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 296


 12760 0410 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 12761 0412 3A1D     		adds	r2, r7, #4
 12762 0414 D154     		strb	r1, [r2, r3]
2457:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 12763              		.loc 1 2457 0 discriminator 3
 12764 0416 97F88531 		ldrb	r3, [r7, #389]	@ zero_extendqisi2
 12765 041a 0133     		adds	r3, r3, #1
 12766 041c 87F88531 		strb	r3, [r7, #389]
 12767              	.L589:
2457:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 12768              		.loc 1 2457 0 is_stmt 0 discriminator 1
 12769 0420 97F88531 		ldrb	r3, [r7, #389]	@ zero_extendqisi2
 12770 0424 032B     		cmp	r3, #3
 12771 0426 E7D9     		bls	.L590
2459:..\src/command_processing.c ****             }
2460:..\src/command_processing.c ****             //*((float *) &single_packet[c+12]) = (float) g_imu[k_imu].quat_value[3];
2461:..\src/command_processing.c ****             c = c + 16;
 12772              		.loc 1 2461 0 is_stmt 1
 12773 0428 97F88631 		ldrb	r3, [r7, #390]
 12774 042c 1033     		adds	r3, r3, #16
 12775 042e 87F88631 		strb	r3, [r7, #390]
 12776              	.L582:
2462:..\src/command_processing.c ****         }
2463:..\src/command_processing.c ****         if (c_mem.IMU_conf[IMU_connected[k_imu]][4]){
 12777              		.loc 1 2463 0
 12778 0432 97F88731 		ldrb	r3, [r7, #391]	@ zero_extendqisi2
 12779 0436 514A     		ldr	r2, .L597+4
 12780 0438 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12781 043a 1946     		mov	r1, r3
 12782 043c 504A     		ldr	r2, .L597+8
 12783 043e 0B46     		mov	r3, r1
 12784 0440 9B00     		lsls	r3, r3, #2
 12785 0442 0B44     		add	r3, r3, r1
 12786 0444 1344     		add	r3, r3, r2
 12787 0446 03F22513 		addw	r3, r3, #293
 12788 044a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12789 044c 002B     		cmp	r3, #0
 12790 044e 21D0     		beq	.L591
2464:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].temp_value;
 12791              		.loc 1 2464 0
 12792 0450 97F88721 		ldrb	r2, [r7, #391]	@ zero_extendqisi2
 12793 0454 4849     		ldr	r1, .L597
 12794 0456 1346     		mov	r3, r2
 12795 0458 9B00     		lsls	r3, r3, #2
 12796 045a 1344     		add	r3, r3, r2
 12797 045c DB00     		lsls	r3, r3, #3
 12798 045e 0B44     		add	r3, r3, r1
 12799 0460 2433     		adds	r3, r3, #36
 12800 0462 B3F90030 		ldrsh	r3, [r3]
 12801 0466 A7F88231 		strh	r3, [r7, #386]	@ movhi
2465:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 12802              		.loc 1 2465 0
 12803 046a 97F88631 		ldrb	r3, [r7, #390]	@ zero_extendqisi2
 12804 046e 0133     		adds	r3, r3, #1
 12805 0470 07F5C172 		add	r2, r7, #386
 12806 0474 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 12807 0476 3A1D     		adds	r2, r7, #4
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 297


 12808 0478 D154     		strb	r1, [r2, r3]
2466:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 12809              		.loc 1 2466 0
 12810 047a 97F88621 		ldrb	r2, [r7, #390]	@ zero_extendqisi2
 12811 047e 07F5C173 		add	r3, r7, #386
 12812 0482 0133     		adds	r3, r3, #1
 12813 0484 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12814 0486 3B1D     		adds	r3, r7, #4
 12815 0488 9954     		strb	r1, [r3, r2]
2467:..\src/command_processing.c ****             //*((int16 *) &single_packet[c])   = (int16) g_imu[k_imu].temp_value;
2468:..\src/command_processing.c ****             c = c + 2;
 12816              		.loc 1 2468 0
 12817 048a 97F88631 		ldrb	r3, [r7, #390]
 12818 048e 0233     		adds	r3, r3, #2
 12819 0490 87F88631 		strb	r3, [r7, #390]
 12820              	.L591:
2469:..\src/command_processing.c ****         }
2470:..\src/command_processing.c ****         single_packet[single_imu_size[IMU_connected[k_imu]] - 1] = (uint8) 0x3A; //':';
 12821              		.loc 1 2470 0
 12822 0494 97F88731 		ldrb	r3, [r7, #391]	@ zero_extendqisi2
 12823 0498 384A     		ldr	r2, .L597+4
 12824 049a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12825 049c 1A46     		mov	r2, r3
 12826 049e 394B     		ldr	r3, .L597+12
 12827 04a0 53F82230 		ldr	r3, [r3, r2, lsl #2]
 12828 04a4 013B     		subs	r3, r3, #1
 12829 04a6 3A1D     		adds	r2, r7, #4
 12830 04a8 3A21     		movs	r1, #58
 12831 04aa D154     		strb	r1, [r2, r3]
2471:..\src/command_processing.c ****         c = 1;
 12832              		.loc 1 2471 0
 12833 04ac 0123     		movs	r3, #1
 12834 04ae 87F88631 		strb	r3, [r7, #390]
2472:..\src/command_processing.c ****                
2473:..\src/command_processing.c ****         for(k=0; k < single_imu_size[IMU_connected[k_imu]]; k++) {
 12835              		.loc 1 2473 0
 12836 04b2 0023     		movs	r3, #0
 12837 04b4 87F88531 		strb	r3, [r7, #389]
 12838 04b8 10E0     		b	.L592
 12839              	.L593:
2474:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 12840              		.loc 1 2474 0 discriminator 3
 12841 04ba 97F88421 		ldrb	r2, [r7, #388]	@ zero_extendqisi2
 12842 04be 97F88531 		ldrb	r3, [r7, #389]	@ zero_extendqisi2
 12843 04c2 1344     		add	r3, r3, r2
 12844 04c4 97F88521 		ldrb	r2, [r7, #389]	@ zero_extendqisi2
 12845 04c8 391D     		adds	r1, r7, #4
 12846 04ca 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12847 04cc 07F11C02 		add	r2, r7, #28
 12848 04d0 D154     		strb	r1, [r2, r3]
2473:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 12849              		.loc 1 2473 0 discriminator 3
 12850 04d2 97F88531 		ldrb	r3, [r7, #389]	@ zero_extendqisi2
 12851 04d6 0133     		adds	r3, r3, #1
 12852 04d8 87F88531 		strb	r3, [r7, #389]
 12853              	.L592:
2473:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 298


 12854              		.loc 1 2473 0 is_stmt 0 discriminator 1
 12855 04dc 97F88521 		ldrb	r2, [r7, #389]	@ zero_extendqisi2
 12856 04e0 97F88731 		ldrb	r3, [r7, #391]	@ zero_extendqisi2
 12857 04e4 2549     		ldr	r1, .L597+4
 12858 04e6 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12859 04e8 1946     		mov	r1, r3
 12860 04ea 264B     		ldr	r3, .L597+12
 12861 04ec 53F82130 		ldr	r3, [r3, r1, lsl #2]
 12862 04f0 9A42     		cmp	r2, r3
 12863 04f2 E2DB     		blt	.L593
2475:..\src/command_processing.c ****         }
2476:..\src/command_processing.c ****         gl_c = gl_c + single_imu_size[IMU_connected[k_imu]];  
 12864              		.loc 1 2476 0 is_stmt 1 discriminator 2
 12865 04f4 97F88731 		ldrb	r3, [r7, #391]	@ zero_extendqisi2
 12866 04f8 204A     		ldr	r2, .L597+4
 12867 04fa D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12868 04fc 1A46     		mov	r2, r3
 12869 04fe 214B     		ldr	r3, .L597+12
 12870 0500 53F82230 		ldr	r3, [r3, r2, lsl #2]
 12871 0504 DAB2     		uxtb	r2, r3
 12872 0506 97F88431 		ldrb	r3, [r7, #388]
 12873 050a 1344     		add	r3, r3, r2
 12874 050c 87F88431 		strb	r3, [r7, #388]
2477:..\src/command_processing.c ****         
2478:..\src/command_processing.c ****         memset(&single_packet, 0, sizeof(single_packet));     
 12875              		.loc 1 2478 0 discriminator 2
 12876 0510 3B1D     		adds	r3, r7, #4
 12877 0512 1622     		movs	r2, #22
 12878 0514 0021     		movs	r1, #0
 12879 0516 1846     		mov	r0, r3
 12880 0518 FFF7FEFF 		bl	memset
2391:..\src/command_processing.c ****     {	
 12881              		.loc 1 2391 0 discriminator 2
 12882 051c 97F88731 		ldrb	r3, [r7, #391]	@ zero_extendqisi2
 12883 0520 0133     		adds	r3, r3, #1
 12884 0522 87F88731 		strb	r3, [r7, #391]
 12885              	.L578:
2391:..\src/command_processing.c ****     {	
 12886              		.loc 1 2391 0 is_stmt 0 discriminator 1
 12887 0526 184B     		ldr	r3, .L597+16
 12888 0528 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12889 052a 97F88721 		ldrb	r2, [r7, #391]	@ zero_extendqisi2
 12890 052e 9A42     		cmp	r2, r3
 12891 0530 FFF47AAD 		bcc	.L594
2479:..\src/command_processing.c ****         
2480:..\src/command_processing.c ****     }
2481:..\src/command_processing.c **** 
2482:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
2483:..\src/command_processing.c ****     packet_data[imus_data_size-1] = LCRChecksum (packet_data, imus_data_size-1);
 12892              		.loc 1 2483 0 is_stmt 1
 12893 0534 154B     		ldr	r3, .L597+20
 12894 0536 1B68     		ldr	r3, [r3]
 12895 0538 5C1E     		subs	r4, r3, #1
 12896 053a 144B     		ldr	r3, .L597+20
 12897 053c 1B68     		ldr	r3, [r3]
 12898 053e DBB2     		uxtb	r3, r3
 12899 0540 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 299


 12900 0542 DAB2     		uxtb	r2, r3
 12901 0544 07F11C03 		add	r3, r7, #28
 12902 0548 1146     		mov	r1, r2
 12903 054a 1846     		mov	r0, r3
 12904 054c FFF7FEFF 		bl	LCRChecksum
 12905 0550 0346     		mov	r3, r0
 12906 0552 1A46     		mov	r2, r3
 12907 0554 07F11C03 		add	r3, r7, #28
 12908 0558 1A55     		strb	r2, [r3, r4]
2484:..\src/command_processing.c ****     commWrite(packet_data, imus_data_size);
 12909              		.loc 1 2484 0
 12910 055a 0C4B     		ldr	r3, .L597+20
 12911 055c 1B68     		ldr	r3, [r3]
 12912 055e 9AB2     		uxth	r2, r3
 12913 0560 07F11C03 		add	r3, r7, #28
 12914 0564 1146     		mov	r1, r2
 12915 0566 1846     		mov	r0, r3
 12916 0568 FFF7FEFF 		bl	commWrite
2485:..\src/command_processing.c **** }
 12917              		.loc 1 2485 0
 12918 056c 00BF     		nop
 12919 056e 07F5C677 		add	r7, r7, #396
 12920              		.cfi_def_cfa_offset 12
 12921 0572 BD46     		mov	sp, r7
 12922              		.cfi_def_cfa_register 13
 12923              		@ sp needed
 12924 0574 90BD     		pop	{r4, r7, pc}
 12925              	.L598:
 12926 0576 00BF     		.align	2
 12927              	.L597:
 12928 0578 00000000 		.word	g_imu
 12929 057c 00000000 		.word	IMU_connected
 12930 0580 00000000 		.word	c_mem
 12931 0584 00000000 		.word	single_imu_size
 12932 0588 00000000 		.word	N_IMU_Connected
 12933 058c 00000000 		.word	imus_data_size
 12934              		.cfi_endproc
 12935              	.LFE97:
 12936              		.size	cmd_get_imu_readings, .-cmd_get_imu_readings
 12937              		.text
 12938              	.Letext0:
 12939              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 12940              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 12941              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 12942              		.file 6 "..\\src\\commands.h"
 12943              		.file 7 "..\\src\\globals.h"
 12944              		.file 8 "Generated_Source\\PSoC5/core_cm3.h"
 12945              		.section	.debug_info,"",%progbits
 12946              	.Ldebug_info0:
 12947 0000 46160000 		.4byte	0x1646
 12948 0004 0400     		.2byte	0x4
 12949 0006 00000000 		.4byte	.Ldebug_abbrev0
 12950 000a 04       		.byte	0x4
 12951 000b 01       		.uleb128 0x1
 12952 000c 52060000 		.4byte	.LASF270
 12953 0010 0C       		.byte	0xc
 12954 0011 B70D0000 		.4byte	.LASF271
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 300


 12955 0015 71000000 		.4byte	.LASF272
 12956 0019 00000000 		.4byte	.Ldebug_ranges0+0
 12957 001d 00000000 		.4byte	0
 12958 0021 00000000 		.4byte	.Ldebug_line0
 12959 0025 02       		.uleb128 0x2
 12960 0026 01       		.byte	0x1
 12961 0027 06       		.byte	0x6
 12962 0028 B8020000 		.4byte	.LASF0
 12963 002c 02       		.uleb128 0x2
 12964 002d 01       		.byte	0x1
 12965 002e 08       		.byte	0x8
 12966 002f FD020000 		.4byte	.LASF1
 12967 0033 02       		.uleb128 0x2
 12968 0034 02       		.byte	0x2
 12969 0035 05       		.byte	0x5
 12970 0036 410B0000 		.4byte	.LASF2
 12971 003a 02       		.uleb128 0x2
 12972 003b 02       		.byte	0x2
 12973 003c 07       		.byte	0x7
 12974 003d 0D0D0000 		.4byte	.LASF3
 12975 0041 03       		.uleb128 0x3
 12976 0042 860D0000 		.4byte	.LASF5
 12977 0046 03       		.byte	0x3
 12978 0047 3F       		.byte	0x3f
 12979 0048 4C000000 		.4byte	0x4c
 12980 004c 02       		.uleb128 0x2
 12981 004d 04       		.byte	0x4
 12982 004e 05       		.byte	0x5
 12983 004f 29020000 		.4byte	.LASF4
 12984 0053 03       		.uleb128 0x3
 12985 0054 01070000 		.4byte	.LASF6
 12986 0058 03       		.byte	0x3
 12987 0059 41       		.byte	0x41
 12988 005a 5E000000 		.4byte	0x5e
 12989 005e 02       		.uleb128 0x2
 12990 005f 04       		.byte	0x4
 12991 0060 07       		.byte	0x7
 12992 0061 3A050000 		.4byte	.LASF7
 12993 0065 02       		.uleb128 0x2
 12994 0066 08       		.byte	0x8
 12995 0067 05       		.byte	0x5
 12996 0068 0C070000 		.4byte	.LASF8
 12997 006c 02       		.uleb128 0x2
 12998 006d 08       		.byte	0x8
 12999 006e 07       		.byte	0x7
 13000 006f A9090000 		.4byte	.LASF9
 13001 0073 04       		.uleb128 0x4
 13002 0074 04       		.byte	0x4
 13003 0075 05       		.byte	0x5
 13004 0076 696E7400 		.ascii	"int\000"
 13005 007a 02       		.uleb128 0x2
 13006 007b 04       		.byte	0x4
 13007 007c 07       		.byte	0x7
 13008 007d C0070000 		.4byte	.LASF10
 13009 0081 03       		.uleb128 0x3
 13010 0082 49000000 		.4byte	.LASF11
 13011 0086 04       		.byte	0x4
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 301


 13012 0087 2C       		.byte	0x2c
 13013 0088 41000000 		.4byte	0x41
 13014 008c 03       		.uleb128 0x3
 13015 008d 840C0000 		.4byte	.LASF12
 13016 0091 04       		.byte	0x4
 13017 0092 30       		.byte	0x30
 13018 0093 53000000 		.4byte	0x53
 13019 0097 05       		.uleb128 0x5
 13020 0098 2F0B0000 		.4byte	.LASF13
 13021 009c 05       		.byte	0x5
 13022 009d E401     		.2byte	0x1e4
 13023 009f 2C000000 		.4byte	0x2c
 13024 00a3 05       		.uleb128 0x5
 13025 00a4 0A0E0000 		.4byte	.LASF14
 13026 00a8 05       		.byte	0x5
 13027 00a9 E501     		.2byte	0x1e5
 13028 00ab 3A000000 		.4byte	0x3a
 13029 00af 05       		.uleb128 0x5
 13030 00b0 6A000000 		.4byte	.LASF15
 13031 00b4 05       		.byte	0x5
 13032 00b5 E601     		.2byte	0x1e6
 13033 00b7 5E000000 		.4byte	0x5e
 13034 00bb 05       		.uleb128 0x5
 13035 00bc BB010000 		.4byte	.LASF16
 13036 00c0 05       		.byte	0x5
 13037 00c1 E701     		.2byte	0x1e7
 13038 00c3 25000000 		.4byte	0x25
 13039 00c7 05       		.uleb128 0x5
 13040 00c8 3C0C0000 		.4byte	.LASF17
 13041 00cc 05       		.byte	0x5
 13042 00cd E801     		.2byte	0x1e8
 13043 00cf 33000000 		.4byte	0x33
 13044 00d3 05       		.uleb128 0x5
 13045 00d4 460D0000 		.4byte	.LASF18
 13046 00d8 05       		.byte	0x5
 13047 00d9 E901     		.2byte	0x1e9
 13048 00db 4C000000 		.4byte	0x4c
 13049 00df 05       		.uleb128 0x5
 13050 00e0 6C020000 		.4byte	.LASF19
 13051 00e4 05       		.byte	0x5
 13052 00e5 EA01     		.2byte	0x1ea
 13053 00e7 EB000000 		.4byte	0xeb
 13054 00eb 02       		.uleb128 0x2
 13055 00ec 04       		.byte	0x4
 13056 00ed 04       		.byte	0x4
 13057 00ee 99070000 		.4byte	.LASF20
 13058 00f2 02       		.uleb128 0x2
 13059 00f3 08       		.byte	0x8
 13060 00f4 04       		.byte	0x4
 13061 00f5 5C070000 		.4byte	.LASF21
 13062 00f9 02       		.uleb128 0x2
 13063 00fa 01       		.byte	0x1
 13064 00fb 08       		.byte	0x8
 13065 00fc 8F030000 		.4byte	.LASF22
 13066 0100 05       		.uleb128 0x5
 13067 0101 670A0000 		.4byte	.LASF23
 13068 0105 05       		.byte	0x5
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 302


 13069 0106 8E02     		.2byte	0x28e
 13070 0108 0C010000 		.4byte	0x10c
 13071 010c 06       		.uleb128 0x6
 13072 010d 97000000 		.4byte	0x97
 13073 0111 02       		.uleb128 0x2
 13074 0112 08       		.byte	0x8
 13075 0113 04       		.byte	0x4
 13076 0114 D2080000 		.4byte	.LASF24
 13077 0118 02       		.uleb128 0x2
 13078 0119 04       		.byte	0x4
 13079 011a 07       		.byte	0x7
 13080 011b 09000000 		.4byte	.LASF25
 13081 011f 07       		.uleb128 0x7
 13082 0120 04       		.byte	0x4
 13083 0121 F9000000 		.4byte	0xf9
 13084 0125 07       		.uleb128 0x7
 13085 0126 04       		.byte	0x4
 13086 0127 2B010000 		.4byte	0x12b
 13087 012b 08       		.uleb128 0x8
 13088 012c F9000000 		.4byte	0xf9
 13089 0130 09       		.uleb128 0x9
 13090 0131 F9000000 		.4byte	0xf9
 13091 0135 40010000 		.4byte	0x140
 13092 0139 0A       		.uleb128 0xa
 13093 013a 18010000 		.4byte	0x118
 13094 013e 19       		.byte	0x19
 13095 013f 00       		.byte	0
 13096 0140 0B       		.uleb128 0xb
 13097 0141 E7070000 		.4byte	.LASF50
 13098 0145 01       		.byte	0x1
 13099 0146 2C000000 		.4byte	0x2c
 13100 014a 06       		.byte	0x6
 13101 014b 42       		.byte	0x42
 13102 014c E1010000 		.4byte	0x1e1
 13103 0150 0C       		.uleb128 0xc
 13104 0151 240E0000 		.4byte	.LASF26
 13105 0155 00       		.byte	0
 13106 0156 0C       		.uleb128 0xc
 13107 0157 8E0B0000 		.4byte	.LASF27
 13108 015b 01       		.byte	0x1
 13109 015c 0C       		.uleb128 0xc
 13110 015d 16050000 		.4byte	.LASF28
 13111 0161 03       		.byte	0x3
 13112 0162 0C       		.uleb128 0xc
 13113 0163 26030000 		.4byte	.LASF29
 13114 0167 04       		.byte	0x4
 13115 0168 0C       		.uleb128 0xc
 13116 0169 8F0A0000 		.4byte	.LASF30
 13117 016d 05       		.byte	0x5
 13118 016e 0C       		.uleb128 0xc
 13119 016f F6050000 		.4byte	.LASF31
 13120 0173 06       		.byte	0x6
 13121 0174 0C       		.uleb128 0xc
 13122 0175 5A050000 		.4byte	.LASF32
 13123 0179 09       		.byte	0x9
 13124 017a 0C       		.uleb128 0xc
 13125 017b 12000000 		.4byte	.LASF33
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 303


 13126 017f 0A       		.byte	0xa
 13127 0180 0C       		.uleb128 0xc
 13128 0181 1E0C0000 		.4byte	.LASF34
 13129 0185 0C       		.byte	0xc
 13130 0186 0C       		.uleb128 0xc
 13131 0187 0F090000 		.4byte	.LASF35
 13132 018b 0D       		.byte	0xd
 13133 018c 0C       		.uleb128 0xc
 13134 018d 3C000000 		.4byte	.LASF36
 13135 0191 80       		.byte	0x80
 13136 0192 0C       		.uleb128 0xc
 13137 0193 7E030000 		.4byte	.LASF37
 13138 0197 81       		.byte	0x81
 13139 0198 0C       		.uleb128 0xc
 13140 0199 59040000 		.4byte	.LASF38
 13141 019d 82       		.byte	0x82
 13142 019e 0C       		.uleb128 0xc
 13143 019f 770B0000 		.4byte	.LASF39
 13144 01a3 83       		.byte	0x83
 13145 01a4 0C       		.uleb128 0xc
 13146 01a5 1A0B0000 		.4byte	.LASF40
 13147 01a9 84       		.byte	0x84
 13148 01aa 0C       		.uleb128 0xc
 13149 01ab 74020000 		.4byte	.LASF41
 13150 01af 85       		.byte	0x85
 13151 01b0 0C       		.uleb128 0xc
 13152 01b1 3C060000 		.4byte	.LASF42
 13153 01b5 86       		.byte	0x86
 13154 01b6 0C       		.uleb128 0xc
 13155 01b7 EA050000 		.4byte	.LASF43
 13156 01bb 88       		.byte	0x88
 13157 01bc 0C       		.uleb128 0xc
 13158 01bd FF0B0000 		.4byte	.LASF44
 13159 01c1 89       		.byte	0x89
 13160 01c2 0C       		.uleb128 0xc
 13161 01c3 F7090000 		.4byte	.LASF45
 13162 01c7 8B       		.byte	0x8b
 13163 01c8 0C       		.uleb128 0xc
 13164 01c9 A3080000 		.4byte	.LASF46
 13165 01cd 8C       		.byte	0x8c
 13166 01ce 0C       		.uleb128 0xc
 13167 01cf E7060000 		.4byte	.LASF47
 13168 01d3 8E       		.byte	0x8e
 13169 01d4 0C       		.uleb128 0xc
 13170 01d5 2F0A0000 		.4byte	.LASF48
 13171 01d9 90       		.byte	0x90
 13172 01da 0C       		.uleb128 0xc
 13173 01db E60C0000 		.4byte	.LASF49
 13174 01df A1       		.byte	0xa1
 13175 01e0 00       		.byte	0
 13176 01e1 0B       		.uleb128 0xb
 13177 01e2 E10D0000 		.4byte	.LASF51
 13178 01e6 01       		.byte	0x1
 13179 01e7 2C000000 		.4byte	0x2c
 13180 01eb 06       		.byte	0x6
 13181 01ec 84       		.byte	0x84
 13182 01ed 16020000 		.4byte	0x216
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 304


 13183 01f1 0C       		.uleb128 0xc
 13184 01f2 B7040000 		.4byte	.LASF52
 13185 01f6 00       		.byte	0
 13186 01f7 0C       		.uleb128 0xc
 13187 01f8 25080000 		.4byte	.LASF53
 13188 01fc 01       		.byte	0x1
 13189 01fd 0C       		.uleb128 0xc
 13190 01fe 01020000 		.4byte	.LASF54
 13191 0202 02       		.byte	0x2
 13192 0203 0C       		.uleb128 0xc
 13193 0204 9D010000 		.4byte	.LASF55
 13194 0208 03       		.byte	0x3
 13195 0209 0C       		.uleb128 0xc
 13196 020a 50010000 		.4byte	.LASF56
 13197 020e 04       		.byte	0x4
 13198 020f 0C       		.uleb128 0xc
 13199 0210 24000000 		.4byte	.LASF57
 13200 0214 05       		.byte	0x5
 13201 0215 00       		.byte	0
 13202 0216 0B       		.uleb128 0xb
 13203 0217 1A070000 		.4byte	.LASF58
 13204 021b 01       		.byte	0x1
 13205 021c 2C000000 		.4byte	0x2c
 13206 0220 06       		.byte	0x6
 13207 0221 96       		.byte	0x96
 13208 0222 3F020000 		.4byte	0x23f
 13209 0226 0C       		.uleb128 0xc
 13210 0227 6B0D0000 		.4byte	.LASF59
 13211 022b 00       		.byte	0
 13212 022c 0C       		.uleb128 0xc
 13213 022d DE050000 		.4byte	.LASF60
 13214 0231 01       		.byte	0x1
 13215 0232 0C       		.uleb128 0xc
 13216 0233 C2080000 		.4byte	.LASF61
 13217 0237 02       		.byte	0x2
 13218 0238 0C       		.uleb128 0xc
 13219 0239 01050000 		.4byte	.LASF62
 13220 023d 03       		.byte	0x3
 13221 023e 00       		.byte	0
 13222 023f 0B       		.uleb128 0xb
 13223 0240 E6020000 		.4byte	.LASF63
 13224 0244 01       		.byte	0x1
 13225 0245 2C000000 		.4byte	0x2c
 13226 0249 06       		.byte	0x6
 13227 024a A0       		.byte	0xa0
 13228 024b 5C020000 		.4byte	0x25c
 13229 024f 0C       		.uleb128 0xc
 13230 0250 F90A0000 		.4byte	.LASF64
 13231 0254 00       		.byte	0
 13232 0255 0C       		.uleb128 0xc
 13233 0256 52070000 		.4byte	.LASF65
 13234 025a 01       		.byte	0x1
 13235 025b 00       		.byte	0
 13236 025c 0B       		.uleb128 0xb
 13237 025d 72090000 		.4byte	.LASF66
 13238 0261 01       		.byte	0x1
 13239 0262 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 305


 13240 0266 06       		.byte	0x6
 13241 0267 A5       		.byte	0xa5
 13242 0268 79020000 		.4byte	0x279
 13243 026c 0C       		.uleb128 0xc
 13244 026d AD040000 		.4byte	.LASF67
 13245 0271 00       		.byte	0
 13246 0272 0C       		.uleb128 0xc
 13247 0273 9B050000 		.4byte	.LASF68
 13248 0277 01       		.byte	0x1
 13249 0278 00       		.byte	0
 13250 0279 0B       		.uleb128 0xb
 13251 027a 310C0000 		.4byte	.LASF69
 13252 027e 01       		.byte	0x1
 13253 027f 2C000000 		.4byte	0x2c
 13254 0283 06       		.byte	0x6
 13255 0284 AD       		.byte	0xad
 13256 0285 C0020000 		.4byte	0x2c0
 13257 0289 0C       		.uleb128 0xc
 13258 028a A2050000 		.4byte	.LASF70
 13259 028e 00       		.byte	0
 13260 028f 0C       		.uleb128 0xc
 13261 0290 EF0D0000 		.4byte	.LASF71
 13262 0294 01       		.byte	0x1
 13263 0295 0C       		.uleb128 0xc
 13264 0296 2A070000 		.4byte	.LASF72
 13265 029a 02       		.byte	0x2
 13266 029b 0C       		.uleb128 0xc
 13267 029c 7F080000 		.4byte	.LASF73
 13268 02a0 03       		.byte	0x3
 13269 02a1 0C       		.uleb128 0xc
 13270 02a2 F2070000 		.4byte	.LASF74
 13271 02a6 04       		.byte	0x4
 13272 02a7 0C       		.uleb128 0xc
 13273 02a8 C0090000 		.4byte	.LASF75
 13274 02ac 05       		.byte	0x5
 13275 02ad 0C       		.uleb128 0xc
 13276 02ae DE080000 		.4byte	.LASF76
 13277 02b2 06       		.byte	0x6
 13278 02b3 0C       		.uleb128 0xc
 13279 02b4 6A080000 		.4byte	.LASF77
 13280 02b8 07       		.byte	0x7
 13281 02b9 0C       		.uleb128 0xc
 13282 02ba 9A040000 		.4byte	.LASF78
 13283 02be 08       		.byte	0x8
 13284 02bf 00       		.byte	0
 13285 02c0 0D       		.uleb128 0xd
 13286 02c1 E0060000 		.4byte	.LASF81
 13287 02c5 10       		.byte	0x10
 13288 02c6 07       		.byte	0x7
 13289 02c7 97       		.byte	0x97
 13290 02c8 FD020000 		.4byte	0x2fd
 13291 02cc 0E       		.uleb128 0xe
 13292 02cd 706F7300 		.ascii	"pos\000"
 13293 02d1 07       		.byte	0x7
 13294 02d2 98       		.byte	0x98
 13295 02d3 D3000000 		.4byte	0xd3
 13296 02d7 00       		.byte	0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 306


 13297 02d8 0F       		.uleb128 0xf
 13298 02d9 CE050000 		.4byte	.LASF79
 13299 02dd 07       		.byte	0x7
 13300 02de 99       		.byte	0x99
 13301 02df D3000000 		.4byte	0xd3
 13302 02e3 04       		.byte	0x4
 13303 02e4 0E       		.uleb128 0xe
 13304 02e5 70776D00 		.ascii	"pwm\000"
 13305 02e9 07       		.byte	0x7
 13306 02ea 9A       		.byte	0x9a
 13307 02eb D3000000 		.4byte	0xd3
 13308 02ef 08       		.byte	0x8
 13309 02f0 0F       		.uleb128 0xf
 13310 02f1 F1090000 		.4byte	.LASF80
 13311 02f5 07       		.byte	0x7
 13312 02f6 9B       		.byte	0x9b
 13313 02f7 97000000 		.4byte	0x97
 13314 02fb 0C       		.byte	0xc
 13315 02fc 00       		.byte	0
 13316 02fd 0D       		.uleb128 0xd
 13317 02fe F10A0000 		.4byte	.LASF82
 13318 0302 38       		.byte	0x38
 13319 0303 07       		.byte	0x7
 13320 0304 A2       		.byte	0xa2
 13321 0305 5E030000 		.4byte	0x35e
 13322 0309 0E       		.uleb128 0xe
 13323 030a 706F7300 		.ascii	"pos\000"
 13324 030e 07       		.byte	0x7
 13325 030f A3       		.byte	0xa3
 13326 0310 5E030000 		.4byte	0x35e
 13327 0314 00       		.byte	0
 13328 0315 0F       		.uleb128 0xf
 13329 0316 CE050000 		.4byte	.LASF79
 13330 031a 07       		.byte	0x7
 13331 031b A4       		.byte	0xa4
 13332 031c D3000000 		.4byte	0xd3
 13333 0320 0C       		.byte	0xc
 13334 0321 0F       		.uleb128 0xf
 13335 0322 6B0C0000 		.4byte	.LASF83
 13336 0326 07       		.byte	0x7
 13337 0327 A5       		.byte	0xa5
 13338 0328 D3000000 		.4byte	0xd3
 13339 032c 10       		.byte	0x10
 13340 032d 0E       		.uleb128 0xe
 13341 032e 726F7400 		.ascii	"rot\000"
 13342 0332 07       		.byte	0x7
 13343 0333 A6       		.byte	0xa6
 13344 0334 6E030000 		.4byte	0x36e
 13345 0338 14       		.byte	0x14
 13346 0339 0E       		.uleb128 0xe
 13347 033a 656D6700 		.ascii	"emg\000"
 13348 033e 07       		.byte	0x7
 13349 033f A8       		.byte	0xa8
 13350 0340 7E030000 		.4byte	0x37e
 13351 0344 18       		.byte	0x18
 13352 0345 0E       		.uleb128 0xe
 13353 0346 76656C00 		.ascii	"vel\000"
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 307


 13354 034a 07       		.byte	0x7
 13355 034b A9       		.byte	0xa9
 13356 034c 5E030000 		.4byte	0x35e
 13357 0350 20       		.byte	0x20
 13358 0351 0E       		.uleb128 0xe
 13359 0352 61636300 		.ascii	"acc\000"
 13360 0356 07       		.byte	0x7
 13361 0357 AA       		.byte	0xaa
 13362 0358 5E030000 		.4byte	0x35e
 13363 035c 2C       		.byte	0x2c
 13364 035d 00       		.byte	0
 13365 035e 09       		.uleb128 0x9
 13366 035f D3000000 		.4byte	0xd3
 13367 0363 6E030000 		.4byte	0x36e
 13368 0367 0A       		.uleb128 0xa
 13369 0368 18010000 		.4byte	0x118
 13370 036c 02       		.byte	0x2
 13371 036d 00       		.byte	0
 13372 036e 09       		.uleb128 0x9
 13373 036f BB000000 		.4byte	0xbb
 13374 0373 7E030000 		.4byte	0x37e
 13375 0377 0A       		.uleb128 0xa
 13376 0378 18010000 		.4byte	0x118
 13377 037c 02       		.byte	0x2
 13378 037d 00       		.byte	0
 13379 037e 09       		.uleb128 0x9
 13380 037f D3000000 		.4byte	0xd3
 13381 0383 8E030000 		.4byte	0x38e
 13382 0387 0A       		.uleb128 0xa
 13383 0388 18010000 		.4byte	0x118
 13384 038c 01       		.byte	0x1
 13385 038d 00       		.byte	0
 13386 038e 0D       		.uleb128 0xd
 13387 038f 56000000 		.4byte	.LASF84
 13388 0393 86       		.byte	0x86
 13389 0394 07       		.byte	0x7
 13390 0395 B1       		.byte	0xb1
 13391 0396 CB030000 		.4byte	0x3cb
 13392 039a 0F       		.uleb128 0xf
 13393 039b 68040000 		.4byte	.LASF85
 13394 039f 07       		.byte	0x7
 13395 03a0 B2       		.byte	0xb2
 13396 03a1 CB030000 		.4byte	0x3cb
 13397 03a5 00       		.byte	0
 13398 03a6 0F       		.uleb128 0xf
 13399 03a7 E0090000 		.4byte	.LASF86
 13400 03ab 07       		.byte	0x7
 13401 03ac B3       		.byte	0xb3
 13402 03ad C7000000 		.4byte	0xc7
 13403 03b1 80       		.byte	0x80
 13404 03b2 0E       		.uleb128 0xe
 13405 03b3 696E6400 		.ascii	"ind\000"
 13406 03b7 07       		.byte	0x7
 13407 03b8 B4       		.byte	0xb4
 13408 03b9 C7000000 		.4byte	0xc7
 13409 03bd 82       		.byte	0x82
 13410 03be 0F       		.uleb128 0xf
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 308


 13411 03bf FB010000 		.4byte	.LASF87
 13412 03c3 07       		.byte	0x7
 13413 03c4 B5       		.byte	0xb5
 13414 03c5 97000000 		.4byte	0x97
 13415 03c9 84       		.byte	0x84
 13416 03ca 00       		.byte	0
 13417 03cb 09       		.uleb128 0x9
 13418 03cc 97000000 		.4byte	0x97
 13419 03d0 DB030000 		.4byte	0x3db
 13420 03d4 0A       		.uleb128 0xa
 13421 03d5 18010000 		.4byte	0x118
 13422 03d9 7F       		.byte	0x7f
 13423 03da 00       		.byte	0
 13424 03db 10       		.uleb128 0x10
 13425 03dc 21060000 		.4byte	.LASF88
 13426 03e0 3001     		.2byte	0x130
 13427 03e2 07       		.byte	0x7
 13428 03e3 BD       		.byte	0xbd
 13429 03e4 98060000 		.4byte	0x698
 13430 03e8 0F       		.uleb128 0xf
 13431 03e9 FE070000 		.4byte	.LASF89
 13432 03ed 07       		.byte	0x7
 13433 03ee BE       		.byte	0xbe
 13434 03ef 97000000 		.4byte	0x97
 13435 03f3 00       		.byte	0
 13436 03f4 0E       		.uleb128 0xe
 13437 03f5 696400   		.ascii	"id\000"
 13438 03f8 07       		.byte	0x7
 13439 03f9 BF       		.byte	0xbf
 13440 03fa 97000000 		.4byte	0x97
 13441 03fe 01       		.byte	0x1
 13442 03ff 0E       		.uleb128 0xe
 13443 0400 6B5F7000 		.ascii	"k_p\000"
 13444 0404 07       		.byte	0x7
 13445 0405 C1       		.byte	0xc1
 13446 0406 D3000000 		.4byte	0xd3
 13447 040a 04       		.byte	0x4
 13448 040b 0E       		.uleb128 0xe
 13449 040c 6B5F6900 		.ascii	"k_i\000"
 13450 0410 07       		.byte	0x7
 13451 0411 C2       		.byte	0xc2
 13452 0412 D3000000 		.4byte	0xd3
 13453 0416 08       		.byte	0x8
 13454 0417 0E       		.uleb128 0xe
 13455 0418 6B5F6400 		.ascii	"k_d\000"
 13456 041c 07       		.byte	0x7
 13457 041d C3       		.byte	0xc3
 13458 041e D3000000 		.4byte	0xd3
 13459 0422 0C       		.byte	0xc
 13460 0423 0F       		.uleb128 0xf
 13461 0424 400A0000 		.4byte	.LASF90
 13462 0428 07       		.byte	0x7
 13463 0429 C5       		.byte	0xc5
 13464 042a D3000000 		.4byte	0xd3
 13465 042e 10       		.byte	0x10
 13466 042f 0F       		.uleb128 0xf
 13467 0430 E2030000 		.4byte	.LASF91
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 309


 13468 0434 07       		.byte	0x7
 13469 0435 C6       		.byte	0xc6
 13470 0436 D3000000 		.4byte	0xd3
 13471 043a 14       		.byte	0x14
 13472 043b 0F       		.uleb128 0xf
 13473 043c C7030000 		.4byte	.LASF92
 13474 0440 07       		.byte	0x7
 13475 0441 C7       		.byte	0xc7
 13476 0442 D3000000 		.4byte	0xd3
 13477 0446 18       		.byte	0x18
 13478 0447 0F       		.uleb128 0xf
 13479 0448 640C0000 		.4byte	.LASF93
 13480 044c 07       		.byte	0x7
 13481 044d C8       		.byte	0xc8
 13482 044e D3000000 		.4byte	0xd3
 13483 0452 1C       		.byte	0x1c
 13484 0453 0F       		.uleb128 0xf
 13485 0454 52040000 		.4byte	.LASF94
 13486 0458 07       		.byte	0x7
 13487 0459 CA       		.byte	0xca
 13488 045a D3000000 		.4byte	0xd3
 13489 045e 20       		.byte	0x20
 13490 045f 0F       		.uleb128 0xf
 13491 0460 570B0000 		.4byte	.LASF95
 13492 0464 07       		.byte	0x7
 13493 0465 CB       		.byte	0xcb
 13494 0466 D3000000 		.4byte	0xd3
 13495 046a 24       		.byte	0x24
 13496 046b 0F       		.uleb128 0xf
 13497 046c 6F040000 		.4byte	.LASF96
 13498 0470 07       		.byte	0x7
 13499 0471 CC       		.byte	0xcc
 13500 0472 D3000000 		.4byte	0xd3
 13501 0476 28       		.byte	0x28
 13502 0477 0F       		.uleb128 0xf
 13503 0478 EA040000 		.4byte	.LASF97
 13504 047c 07       		.byte	0x7
 13505 047d CD       		.byte	0xcd
 13506 047e D3000000 		.4byte	0xd3
 13507 0482 2C       		.byte	0x2c
 13508 0483 0F       		.uleb128 0xf
 13509 0484 2D0E0000 		.4byte	.LASF98
 13510 0488 07       		.byte	0x7
 13511 0489 CF       		.byte	0xcf
 13512 048a D3000000 		.4byte	0xd3
 13513 048e 30       		.byte	0x30
 13514 048f 0F       		.uleb128 0xf
 13515 0490 8F050000 		.4byte	.LASF99
 13516 0494 07       		.byte	0x7
 13517 0495 D0       		.byte	0xd0
 13518 0496 97000000 		.4byte	0x97
 13519 049a 34       		.byte	0x34
 13520 049b 0F       		.uleb128 0xf
 13521 049c D3050000 		.4byte	.LASF100
 13522 04a0 07       		.byte	0x7
 13523 04a1 D1       		.byte	0xd1
 13524 04a2 97000000 		.4byte	0x97
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 310


 13525 04a6 35       		.byte	0x35
 13526 04a7 0F       		.uleb128 0xf
 13527 04a8 12080000 		.4byte	.LASF101
 13528 04ac 07       		.byte	0x7
 13529 04ad D2       		.byte	0xd2
 13530 04ae 97000000 		.4byte	0x97
 13531 04b2 36       		.byte	0x36
 13532 04b3 0E       		.uleb128 0xe
 13533 04b4 72657300 		.ascii	"res\000"
 13534 04b8 07       		.byte	0x7
 13535 04b9 D3       		.byte	0xd3
 13536 04ba 98060000 		.4byte	0x698
 13537 04be 37       		.byte	0x37
 13538 04bf 0F       		.uleb128 0xf
 13539 04c0 95050000 		.4byte	.LASF102
 13540 04c4 07       		.byte	0x7
 13541 04c5 D5       		.byte	0xd5
 13542 04c6 5E030000 		.4byte	0x35e
 13543 04ca 3C       		.byte	0x3c
 13544 04cb 0F       		.uleb128 0xf
 13545 04cc DB030000 		.4byte	.LASF103
 13546 04d0 07       		.byte	0x7
 13547 04d1 D7       		.byte	0xd7
 13548 04d2 A8060000 		.4byte	0x6a8
 13549 04d6 48       		.byte	0x48
 13550 04d7 0F       		.uleb128 0xf
 13551 04d8 540D0000 		.4byte	.LASF104
 13552 04dc 07       		.byte	0x7
 13553 04dd D9       		.byte	0xd9
 13554 04de 97000000 		.4byte	0x97
 13555 04e2 54       		.byte	0x54
 13556 04e3 0F       		.uleb128 0xf
 13557 04e4 35010000 		.4byte	.LASF105
 13558 04e8 07       		.byte	0x7
 13559 04e9 DB       		.byte	0xdb
 13560 04ea D3000000 		.4byte	0xd3
 13561 04ee 58       		.byte	0x58
 13562 04ef 0F       		.uleb128 0xf
 13563 04f0 01040000 		.4byte	.LASF106
 13564 04f4 07       		.byte	0x7
 13565 04f5 DC       		.byte	0xdc
 13566 04f6 D3000000 		.4byte	0xd3
 13567 04fa 5C       		.byte	0x5c
 13568 04fb 0F       		.uleb128 0xf
 13569 04fc 76070000 		.4byte	.LASF107
 13570 0500 07       		.byte	0x7
 13571 0501 DE       		.byte	0xde
 13572 0502 D3000000 		.4byte	0xd3
 13573 0506 60       		.byte	0x60
 13574 0507 0F       		.uleb128 0xf
 13575 0508 94030000 		.4byte	.LASF108
 13576 050c 07       		.byte	0x7
 13577 050d DF       		.byte	0xdf
 13578 050e D3000000 		.4byte	0xd3
 13579 0512 64       		.byte	0x64
 13580 0513 0F       		.uleb128 0xf
 13581 0514 D30D0000 		.4byte	.LASF109
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 311


 13582 0518 07       		.byte	0x7
 13583 0519 E0       		.byte	0xe0
 13584 051a C7000000 		.4byte	0xc7
 13585 051e 68       		.byte	0x68
 13586 051f 0F       		.uleb128 0xf
 13587 0520 95080000 		.4byte	.LASF110
 13588 0524 07       		.byte	0x7
 13589 0525 E1       		.byte	0xe1
 13590 0526 B8060000 		.4byte	0x6b8
 13591 052a 6A       		.byte	0x6a
 13592 052b 0F       		.uleb128 0xf
 13593 052c DC0A0000 		.4byte	.LASF111
 13594 0530 07       		.byte	0x7
 13595 0531 E2       		.byte	0xe2
 13596 0532 97000000 		.4byte	0x97
 13597 0536 6E       		.byte	0x6e
 13598 0537 0F       		.uleb128 0xf
 13599 0538 A90D0000 		.4byte	.LASF112
 13600 053c 07       		.byte	0x7
 13601 053d E5       		.byte	0xe5
 13602 053e C8060000 		.4byte	0x6c8
 13603 0542 70       		.byte	0x70
 13604 0543 0F       		.uleb128 0xf
 13605 0544 0D040000 		.4byte	.LASF113
 13606 0548 07       		.byte	0x7
 13607 0549 E6       		.byte	0xe6
 13608 054a 97000000 		.4byte	0x97
 13609 054e 78       		.byte	0x78
 13610 054f 0F       		.uleb128 0xf
 13611 0550 42090000 		.4byte	.LASF114
 13612 0554 07       		.byte	0x7
 13613 0555 E7       		.byte	0xe7
 13614 0556 97000000 		.4byte	0x97
 13615 055a 79       		.byte	0x79
 13616 055b 0F       		.uleb128 0xf
 13617 055c EA080000 		.4byte	.LASF115
 13618 0560 07       		.byte	0x7
 13619 0561 E8       		.byte	0xe8
 13620 0562 BB000000 		.4byte	0xbb
 13621 0566 7A       		.byte	0x7a
 13622 0567 0F       		.uleb128 0xf
 13623 0568 4D0C0000 		.4byte	.LASF116
 13624 056c 07       		.byte	0x7
 13625 056d E9       		.byte	0xe9
 13626 056e 97000000 		.4byte	0x97
 13627 0572 7B       		.byte	0x7b
 13628 0573 0F       		.uleb128 0xf
 13629 0574 64010000 		.4byte	.LASF117
 13630 0578 07       		.byte	0x7
 13631 0579 EA       		.byte	0xea
 13632 057a D8060000 		.4byte	0x6d8
 13633 057e 7C       		.byte	0x7c
 13634 057f 0F       		.uleb128 0xf
 13635 0580 B80C0000 		.4byte	.LASF118
 13636 0584 07       		.byte	0x7
 13637 0585 ED       		.byte	0xed
 13638 0586 97000000 		.4byte	0x97
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 312


 13639 058a 94       		.byte	0x94
 13640 058b 0F       		.uleb128 0xf
 13641 058c CB090000 		.4byte	.LASF119
 13642 0590 07       		.byte	0x7
 13643 0591 EE       		.byte	0xee
 13644 0592 97000000 		.4byte	0x97
 13645 0596 95       		.byte	0x95
 13646 0597 0F       		.uleb128 0xf
 13647 0598 35070000 		.4byte	.LASF120
 13648 059c 07       		.byte	0x7
 13649 059d EF       		.byte	0xef
 13650 059e 97000000 		.4byte	0x97
 13651 05a2 96       		.byte	0x96
 13652 05a3 0F       		.uleb128 0xf
 13653 05a4 58090000 		.4byte	.LASF121
 13654 05a8 07       		.byte	0x7
 13655 05a9 F0       		.byte	0xf0
 13656 05aa 97000000 		.4byte	0x97
 13657 05ae 97       		.byte	0x97
 13658 05af 0F       		.uleb128 0xf
 13659 05b0 C5050000 		.4byte	.LASF122
 13660 05b4 07       		.byte	0x7
 13661 05b5 F1       		.byte	0xf1
 13662 05b6 D3000000 		.4byte	0xd3
 13663 05ba 98       		.byte	0x98
 13664 05bb 0F       		.uleb128 0xf
 13665 05bc 110E0000 		.4byte	.LASF123
 13666 05c0 07       		.byte	0x7
 13667 05c1 F2       		.byte	0xf2
 13668 05c2 EB000000 		.4byte	0xeb
 13669 05c6 9C       		.byte	0x9c
 13670 05c7 0F       		.uleb128 0xf
 13671 05c8 17040000 		.4byte	.LASF124
 13672 05cc 07       		.byte	0x7
 13673 05cd F4       		.byte	0xf4
 13674 05ce EB000000 		.4byte	0xeb
 13675 05d2 A0       		.byte	0xa0
 13676 05d3 0F       		.uleb128 0xf
 13677 05d4 22090000 		.4byte	.LASF125
 13678 05d8 07       		.byte	0x7
 13679 05d9 F5       		.byte	0xf5
 13680 05da EB000000 		.4byte	0xeb
 13681 05de A4       		.byte	0xa4
 13682 05df 0F       		.uleb128 0xf
 13683 05e0 D1040000 		.4byte	.LASF126
 13684 05e4 07       		.byte	0x7
 13685 05e5 F6       		.byte	0xf6
 13686 05e6 97000000 		.4byte	0x97
 13687 05ea A8       		.byte	0xa8
 13688 05eb 0F       		.uleb128 0xf
 13689 05ec 420C0000 		.4byte	.LASF127
 13690 05f0 07       		.byte	0x7
 13691 05f1 F7       		.byte	0xf7
 13692 05f2 97000000 		.4byte	0x97
 13693 05f6 A9       		.byte	0xa9
 13694 05f7 0F       		.uleb128 0xf
 13695 05f8 49020000 		.4byte	.LASF128
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 313


 13696 05fc 07       		.byte	0x7
 13697 05fd F8       		.byte	0xf8
 13698 05fe E8060000 		.4byte	0x6e8
 13699 0602 AA       		.byte	0xaa
 13700 0603 0F       		.uleb128 0xf
 13701 0604 85020000 		.4byte	.LASF129
 13702 0608 07       		.byte	0x7
 13703 0609 FA       		.byte	0xfa
 13704 060a C8060000 		.4byte	0x6c8
 13705 060e C0       		.byte	0xc0
 13706 060f 0F       		.uleb128 0xf
 13707 0610 DB010000 		.4byte	.LASF130
 13708 0614 07       		.byte	0x7
 13709 0615 FC       		.byte	0xfc
 13710 0616 F8060000 		.4byte	0x6f8
 13711 061a C8       		.byte	0xc8
 13712 061b 0F       		.uleb128 0xf
 13713 061c B5080000 		.4byte	.LASF131
 13714 0620 07       		.byte	0x7
 13715 0621 FE       		.byte	0xfe
 13716 0622 08070000 		.4byte	0x708
 13717 0626 F0       		.byte	0xf0
 13718 0627 11       		.uleb128 0x11
 13719 0628 70010000 		.4byte	.LASF132
 13720 062c 07       		.byte	0x7
 13721 062d 0001     		.2byte	0x100
 13722 062f AF000000 		.4byte	0xaf
 13723 0633 0001     		.2byte	0x100
 13724 0635 11       		.uleb128 0x11
 13725 0636 9F0D0000 		.4byte	.LASF133
 13726 063a 07       		.byte	0x7
 13727 063b 0101     		.2byte	0x101
 13728 063d AF000000 		.4byte	0xaf
 13729 0641 0401     		.2byte	0x104
 13730 0643 11       		.uleb128 0x11
 13731 0644 4C050000 		.4byte	.LASF134
 13732 0648 07       		.byte	0x7
 13733 0649 0201     		.2byte	0x102
 13734 064b AF000000 		.4byte	0xaf
 13735 064f 0801     		.2byte	0x108
 13736 0651 11       		.uleb128 0x11
 13737 0652 7F050000 		.4byte	.LASF135
 13738 0656 07       		.byte	0x7
 13739 0657 0301     		.2byte	0x103
 13740 0659 AF000000 		.4byte	0xaf
 13741 065d 0C01     		.2byte	0x10c
 13742 065f 11       		.uleb128 0x11
 13743 0660 38090000 		.4byte	.LASF136
 13744 0664 07       		.byte	0x7
 13745 0665 0501     		.2byte	0x105
 13746 0667 18070000 		.4byte	0x718
 13747 066b 1001     		.2byte	0x110
 13748 066d 11       		.uleb128 0x11
 13749 066e 32020000 		.4byte	.LASF137
 13750 0672 07       		.byte	0x7
 13751 0673 0601     		.2byte	0x106
 13752 0675 28070000 		.4byte	0x728
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 314


 13753 0679 1601     		.2byte	0x116
 13754 067b 11       		.uleb128 0x11
 13755 067c 63090000 		.4byte	.LASF138
 13756 0680 07       		.byte	0x7
 13757 0681 0901     		.2byte	0x109
 13758 0683 97000000 		.4byte	0x97
 13759 0687 2001     		.2byte	0x120
 13760 0689 11       		.uleb128 0x11
 13761 068a 9F070000 		.4byte	.LASF139
 13762 068e 07       		.byte	0x7
 13763 068f 0A01     		.2byte	0x10a
 13764 0691 38070000 		.4byte	0x738
 13765 0695 2101     		.2byte	0x121
 13766 0697 00       		.byte	0
 13767 0698 09       		.uleb128 0x9
 13768 0699 97000000 		.4byte	0x97
 13769 069d A8060000 		.4byte	0x6a8
 13770 06a1 0A       		.uleb128 0xa
 13771 06a2 18010000 		.4byte	0x118
 13772 06a6 02       		.byte	0x2
 13773 06a7 00       		.byte	0
 13774 06a8 09       		.uleb128 0x9
 13775 06a9 DF000000 		.4byte	0xdf
 13776 06ad B8060000 		.4byte	0x6b8
 13777 06b1 0A       		.uleb128 0xa
 13778 06b2 18010000 		.4byte	0x118
 13779 06b6 02       		.byte	0x2
 13780 06b7 00       		.byte	0
 13781 06b8 09       		.uleb128 0x9
 13782 06b9 A3000000 		.4byte	0xa3
 13783 06bd C8060000 		.4byte	0x6c8
 13784 06c1 0A       		.uleb128 0xa
 13785 06c2 18010000 		.4byte	0x118
 13786 06c6 01       		.byte	0x1
 13787 06c7 00       		.byte	0
 13788 06c8 09       		.uleb128 0x9
 13789 06c9 AF000000 		.4byte	0xaf
 13790 06cd D8060000 		.4byte	0x6d8
 13791 06d1 0A       		.uleb128 0xa
 13792 06d2 18010000 		.4byte	0x118
 13793 06d6 01       		.byte	0x1
 13794 06d7 00       		.byte	0
 13795 06d8 09       		.uleb128 0x9
 13796 06d9 EB000000 		.4byte	0xeb
 13797 06dd E8060000 		.4byte	0x6e8
 13798 06e1 0A       		.uleb128 0xa
 13799 06e2 18010000 		.4byte	0x118
 13800 06e6 05       		.byte	0x5
 13801 06e7 00       		.byte	0
 13802 06e8 09       		.uleb128 0x9
 13803 06e9 97000000 		.4byte	0x97
 13804 06ed F8060000 		.4byte	0x6f8
 13805 06f1 0A       		.uleb128 0xa
 13806 06f2 18010000 		.4byte	0x118
 13807 06f6 15       		.byte	0x15
 13808 06f7 00       		.byte	0
 13809 06f8 09       		.uleb128 0x9
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 315


 13810 06f9 AF000000 		.4byte	0xaf
 13811 06fd 08070000 		.4byte	0x708
 13812 0701 0A       		.uleb128 0xa
 13813 0702 18010000 		.4byte	0x118
 13814 0706 09       		.byte	0x9
 13815 0707 00       		.byte	0
 13816 0708 09       		.uleb128 0x9
 13817 0709 AF000000 		.4byte	0xaf
 13818 070d 18070000 		.4byte	0x718
 13819 0711 0A       		.uleb128 0xa
 13820 0712 18010000 		.4byte	0x118
 13821 0716 03       		.byte	0x3
 13822 0717 00       		.byte	0
 13823 0718 09       		.uleb128 0x9
 13824 0719 97000000 		.4byte	0x97
 13825 071d 28070000 		.4byte	0x728
 13826 0721 0A       		.uleb128 0xa
 13827 0722 18010000 		.4byte	0x118
 13828 0726 05       		.byte	0x5
 13829 0727 00       		.byte	0
 13830 0728 09       		.uleb128 0x9
 13831 0729 97000000 		.4byte	0x97
 13832 072d 38070000 		.4byte	0x738
 13833 0731 0A       		.uleb128 0xa
 13834 0732 18010000 		.4byte	0x118
 13835 0736 09       		.byte	0x9
 13836 0737 00       		.byte	0
 13837 0738 09       		.uleb128 0x9
 13838 0739 97000000 		.4byte	0x97
 13839 073d 4E070000 		.4byte	0x74e
 13840 0741 0A       		.uleb128 0xa
 13841 0742 18010000 		.4byte	0x118
 13842 0746 02       		.byte	0x2
 13843 0747 0A       		.uleb128 0xa
 13844 0748 18010000 		.4byte	0x118
 13845 074c 04       		.byte	0x4
 13846 074d 00       		.byte	0
 13847 074e 12       		.uleb128 0x12
 13848 074f 200D0000 		.4byte	.LASF140
 13849 0753 28       		.byte	0x28
 13850 0754 07       		.byte	0x7
 13851 0755 0E01     		.2byte	0x10e
 13852 0757 AA070000 		.4byte	0x7aa
 13853 075b 13       		.uleb128 0x13
 13854 075c 65030000 		.4byte	.LASF141
 13855 0760 07       		.byte	0x7
 13856 0761 0F01     		.2byte	0x10f
 13857 0763 97000000 		.4byte	0x97
 13858 0767 00       		.byte	0
 13859 0768 13       		.uleb128 0x13
 13860 0769 56020000 		.4byte	.LASF142
 13861 076d 07       		.byte	0x7
 13862 076e 1001     		.2byte	0x110
 13863 0770 AA070000 		.4byte	0x7aa
 13864 0774 02       		.byte	0x2
 13865 0775 13       		.uleb128 0x13
 13866 0776 2D090000 		.4byte	.LASF143
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 316


 13867 077a 07       		.byte	0x7
 13868 077b 1101     		.2byte	0x111
 13869 077d AA070000 		.4byte	0x7aa
 13870 0781 08       		.byte	0x8
 13871 0782 13       		.uleb128 0x13
 13872 0783 E7090000 		.4byte	.LASF144
 13873 0787 07       		.byte	0x7
 13874 0788 1201     		.2byte	0x112
 13875 078a AA070000 		.4byte	0x7aa
 13876 078e 0E       		.byte	0xe
 13877 078f 13       		.uleb128 0x13
 13878 0790 AC050000 		.4byte	.LASF145
 13879 0794 07       		.byte	0x7
 13880 0795 1301     		.2byte	0x113
 13881 0797 BA070000 		.4byte	0x7ba
 13882 079b 14       		.byte	0x14
 13883 079c 13       		.uleb128 0x13
 13884 079d E9010000 		.4byte	.LASF146
 13885 07a1 07       		.byte	0x7
 13886 07a2 1401     		.2byte	0x114
 13887 07a4 C7000000 		.4byte	0xc7
 13888 07a8 24       		.byte	0x24
 13889 07a9 00       		.byte	0
 13890 07aa 09       		.uleb128 0x9
 13891 07ab C7000000 		.4byte	0xc7
 13892 07af BA070000 		.4byte	0x7ba
 13893 07b3 0A       		.uleb128 0xa
 13894 07b4 18010000 		.4byte	0x118
 13895 07b8 02       		.byte	0x2
 13896 07b9 00       		.byte	0
 13897 07ba 09       		.uleb128 0x9
 13898 07bb EB000000 		.4byte	0xeb
 13899 07bf CA070000 		.4byte	0x7ca
 13900 07c3 0A       		.uleb128 0xa
 13901 07c4 18010000 		.4byte	0x118
 13902 07c8 03       		.byte	0x3
 13903 07c9 00       		.byte	0
 13904 07ca 12       		.uleb128 0x12
 13905 07cb C4020000 		.4byte	.LASF147
 13906 07cf 06       		.byte	0x6
 13907 07d0 07       		.byte	0x7
 13908 07d1 2401     		.2byte	0x124
 13909 07d3 0C080000 		.4byte	0x80c
 13910 07d7 13       		.uleb128 0x13
 13911 07d8 32050000 		.4byte	.LASF148
 13912 07dc 07       		.byte	0x7
 13913 07dd 2501     		.2byte	0x125
 13914 07df 97000000 		.4byte	0x97
 13915 07e3 00       		.byte	0
 13916 07e4 13       		.uleb128 0x13
 13917 07e5 360E0000 		.4byte	.LASF149
 13918 07e9 07       		.byte	0x7
 13919 07ea 2601     		.2byte	0x126
 13920 07ec 97000000 		.4byte	0x97
 13921 07f0 01       		.byte	0x1
 13922 07f1 13       		.uleb128 0x13
 13923 07f2 8D040000 		.4byte	.LASF150
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 317


 13924 07f6 07       		.byte	0x7
 13925 07f7 2701     		.2byte	0x127
 13926 07f9 C7000000 		.4byte	0xc7
 13927 07fd 02       		.byte	0x2
 13928 07fe 13       		.uleb128 0x13
 13929 07ff 6A070000 		.4byte	.LASF151
 13930 0803 07       		.byte	0x7
 13931 0804 2801     		.2byte	0x128
 13932 0806 C7000000 		.4byte	0xc7
 13933 080a 04       		.byte	0x4
 13934 080b 00       		.byte	0
 13935 080c 14       		.uleb128 0x14
 13936 080d BE0A0000 		.4byte	.LASF273
 13937 0811 02       		.byte	0x2
 13938 0812 1403     		.2byte	0x314
 13939 0814 8C000000 		.4byte	0x8c
 13940 0818 03       		.byte	0x3
 13941 0819 36080000 		.4byte	0x836
 13942 081d 15       		.uleb128 0x15
 13943 081e 5F030000 		.4byte	.LASF216
 13944 0822 02       		.byte	0x2
 13945 0823 1403     		.2byte	0x314
 13946 0825 8C000000 		.4byte	0x8c
 13947 0829 16       		.uleb128 0x16
 13948 082a F4010000 		.4byte	.LASF274
 13949 082e 02       		.byte	0x2
 13950 082f 1603     		.2byte	0x316
 13951 0831 8C000000 		.4byte	0x8c
 13952 0835 00       		.byte	0
 13953 0836 17       		.uleb128 0x17
 13954 0837 350B0000 		.4byte	.LASF152
 13955 083b 01       		.byte	0x1
 13956 083c 42       		.byte	0x42
 13957 083d 00000000 		.4byte	.LFB64
 13958 0841 90040000 		.4byte	.LFE64-.LFB64
 13959 0845 01       		.uleb128 0x1
 13960 0846 9C       		.byte	0x9c
 13961 0847 B2080000 		.4byte	0x8b2
 13962 084b 18       		.uleb128 0x18
 13963 084c 93040000 		.4byte	.LASF154
 13964 0850 01       		.byte	0x1
 13965 0851 44       		.byte	0x44
 13966 0852 97000000 		.4byte	0x97
 13967 0856 02       		.uleb128 0x2
 13968 0857 91       		.byte	0x91
 13969 0858 77       		.sleb128 -9
 13970 0859 19       		.uleb128 0x19
 13971 085a 0C080000 		.4byte	0x80c
 13972 085e 22030000 		.4byte	.LBB6
 13973 0862 08000000 		.4byte	.LBE6-.LBB6
 13974 0866 01       		.byte	0x1
 13975 0867 9B       		.byte	0x9b
 13976 0868 87080000 		.4byte	0x887
 13977 086c 1A       		.uleb128 0x1a
 13978 086d 1D080000 		.4byte	0x81d
 13979 0871 02       		.uleb128 0x2
 13980 0872 91       		.byte	0x91
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 318


 13981 0873 6C       		.sleb128 -20
 13982 0874 1B       		.uleb128 0x1b
 13983 0875 22030000 		.4byte	.LBB7
 13984 0879 08000000 		.4byte	.LBE7-.LBB7
 13985 087d 1C       		.uleb128 0x1c
 13986 087e 29080000 		.4byte	0x829
 13987 0882 02       		.uleb128 0x2
 13988 0883 91       		.byte	0x91
 13989 0884 68       		.sleb128 -24
 13990 0885 00       		.byte	0
 13991 0886 00       		.byte	0
 13992 0887 1D       		.uleb128 0x1d
 13993 0888 0C080000 		.4byte	0x80c
 13994 088c 40030000 		.4byte	.LBB8
 13995 0890 08000000 		.4byte	.LBE8-.LBB8
 13996 0894 01       		.byte	0x1
 13997 0895 A7       		.byte	0xa7
 13998 0896 1A       		.uleb128 0x1a
 13999 0897 1D080000 		.4byte	0x81d
 14000 089b 02       		.uleb128 0x2
 14001 089c 91       		.byte	0x91
 14002 089d 70       		.sleb128 -16
 14003 089e 1B       		.uleb128 0x1b
 14004 089f 40030000 		.4byte	.LBB9
 14005 08a3 08000000 		.4byte	.LBE9-.LBB9
 14006 08a7 1C       		.uleb128 0x1c
 14007 08a8 29080000 		.4byte	0x829
 14008 08ac 02       		.uleb128 0x2
 14009 08ad 91       		.byte	0x91
 14010 08ae 64       		.sleb128 -28
 14011 08af 00       		.byte	0
 14012 08b0 00       		.byte	0
 14013 08b1 00       		.byte	0
 14014 08b2 1E       		.uleb128 0x1e
 14015 08b3 00000000 		.4byte	.LASF153
 14016 08b7 01       		.byte	0x1
 14017 08b8 0F01     		.2byte	0x10f
 14018 08ba 00000000 		.4byte	.LFB65
 14019 08be 22000000 		.4byte	.LFE65-.LFB65
 14020 08c2 01       		.uleb128 0x1
 14021 08c3 9C       		.byte	0x9c
 14022 08c4 D9080000 		.4byte	0x8d9
 14023 08c8 1F       		.uleb128 0x1f
 14024 08c9 CD030000 		.4byte	.LASF155
 14025 08cd 01       		.byte	0x1
 14026 08ce 1001     		.2byte	0x110
 14027 08d0 D9080000 		.4byte	0x8d9
 14028 08d4 03       		.uleb128 0x3
 14029 08d5 91       		.byte	0x91
 14030 08d6 9C74     		.sleb128 -1508
 14031 08d8 00       		.byte	0
 14032 08d9 09       		.uleb128 0x9
 14033 08da F9000000 		.4byte	0xf9
 14034 08de EA080000 		.4byte	0x8ea
 14035 08e2 20       		.uleb128 0x20
 14036 08e3 18010000 		.4byte	0x118
 14037 08e7 DB05     		.2byte	0x5db
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 319


 14038 08e9 00       		.byte	0
 14039 08ea 1E       		.uleb128 0x1e
 14040 08eb 4C0D0000 		.4byte	.LASF156
 14041 08ef 01       		.byte	0x1
 14042 08f0 1B01     		.2byte	0x11b
 14043 08f2 00000000 		.4byte	.LFB66
 14044 08f6 70000000 		.4byte	.LFE66-.LFB66
 14045 08fa 01       		.uleb128 0x1
 14046 08fb 9C       		.byte	0x9c
 14047 08fc 21090000 		.4byte	0x921
 14048 0900 21       		.uleb128 0x21
 14049 0901 DC0C0000 		.4byte	.LASF177
 14050 0905 01       		.byte	0x1
 14051 0906 1B01     		.2byte	0x11b
 14052 0908 A3000000 		.4byte	0xa3
 14053 090c 03       		.uleb128 0x3
 14054 090d 91       		.byte	0x91
 14055 090e D660     		.sleb128 -4010
 14056 0910 1F       		.uleb128 0x1f
 14057 0911 CD030000 		.4byte	.LASF155
 14058 0915 01       		.byte	0x1
 14059 0916 1C01     		.2byte	0x11c
 14060 0918 21090000 		.4byte	0x921
 14061 091c 03       		.uleb128 0x3
 14062 091d 91       		.byte	0x91
 14063 091e D860     		.sleb128 -4008
 14064 0920 00       		.byte	0
 14065 0921 09       		.uleb128 0x9
 14066 0922 F9000000 		.4byte	0xf9
 14067 0926 32090000 		.4byte	0x932
 14068 092a 20       		.uleb128 0x20
 14069 092b 18010000 		.4byte	0x118
 14070 092f 9F0F     		.2byte	0xf9f
 14071 0931 00       		.byte	0
 14072 0932 22       		.uleb128 0x22
 14073 0933 C0010000 		.4byte	.LASF201
 14074 0937 01       		.byte	0x1
 14075 0938 3501     		.2byte	0x135
 14076 093a 00000000 		.4byte	.LFB67
 14077 093e E0120000 		.4byte	.LFE67-.LFB67
 14078 0942 01       		.uleb128 0x1
 14079 0943 9C       		.byte	0x9c
 14080 0944 AC0A0000 		.4byte	0xaac
 14081 0948 1F       		.uleb128 0x1f
 14082 0949 20040000 		.4byte	.LASF157
 14083 094d 01       		.byte	0x1
 14084 094e 3801     		.2byte	0x138
 14085 0950 AC0A0000 		.4byte	0xaac
 14086 0954 03       		.uleb128 0x3
 14087 0955 91       		.byte	0x91
 14088 0956 B470     		.sleb128 -1996
 14089 0958 1F       		.uleb128 0x1f
 14090 0959 12010000 		.4byte	.LASF158
 14091 095d 01       		.byte	0x1
 14092 095e 3901     		.2byte	0x139
 14093 0960 A3000000 		.4byte	0xa3
 14094 0964 02       		.uleb128 0x2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 320


 14095 0965 91       		.byte	0x91
 14096 0966 5A       		.sleb128 -38
 14097 0967 23       		.uleb128 0x23
 14098 0968 6900     		.ascii	"i\000"
 14099 096a 01       		.byte	0x1
 14100 096b 3C01     		.2byte	0x13c
 14101 096d 97000000 		.4byte	0x97
 14102 0971 02       		.uleb128 0x2
 14103 0972 91       		.byte	0x91
 14104 0973 67       		.sleb128 -25
 14105 0974 23       		.uleb128 0x23
 14106 0975 6A00     		.ascii	"j\000"
 14107 0977 01       		.byte	0x1
 14108 0978 3C01     		.2byte	0x13c
 14109 097a 97000000 		.4byte	0x97
 14110 097e 02       		.uleb128 0x2
 14111 097f 91       		.byte	0x91
 14112 0980 66       		.sleb128 -26
 14113 0981 23       		.uleb128 0x23
 14114 0982 69647800 		.ascii	"idx\000"
 14115 0986 01       		.byte	0x1
 14116 0987 3D01     		.2byte	0x13d
 14117 0989 97000000 		.4byte	0x97
 14118 098d 02       		.uleb128 0x2
 14119 098e 91       		.byte	0x91
 14120 098f 65       		.sleb128 -27
 14121 0990 1F       		.uleb128 0x1f
 14122 0991 5E0B0000 		.4byte	.LASF159
 14123 0995 01       		.byte	0x1
 14124 0996 3E01     		.2byte	0x13e
 14125 0998 97000000 		.4byte	0x97
 14126 099c 02       		.uleb128 0x2
 14127 099d 91       		.byte	0x91
 14128 099e 64       		.sleb128 -28
 14129 099f 23       		.uleb128 0x23
 14130 09a0 736F6400 		.ascii	"sod\000"
 14131 09a4 01       		.byte	0x1
 14132 09a5 3F01     		.2byte	0x13f
 14133 09a7 97000000 		.4byte	0x97
 14134 09ab 02       		.uleb128 0x2
 14135 09ac 91       		.byte	0x91
 14136 09ad 63       		.sleb128 -29
 14137 09ae 1F       		.uleb128 0x1f
 14138 09af 5C080000 		.4byte	.LASF160
 14139 09b3 01       		.byte	0x1
 14140 09b4 4001     		.2byte	0x140
 14141 09b6 97000000 		.4byte	0x97
 14142 09ba 02       		.uleb128 0x2
 14143 09bb 91       		.byte	0x91
 14144 09bc 62       		.sleb128 -30
 14145 09bd 1F       		.uleb128 0x1f
 14146 09be 1C0E0000 		.4byte	.LASF161
 14147 09c2 01       		.byte	0x1
 14148 09c3 4101     		.2byte	0x141
 14149 09c5 BD0A0000 		.4byte	0xabd
 14150 09c9 03       		.uleb128 0x3
 14151 09ca 91       		.byte	0x91
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 321


 14152 09cb 8070     		.sleb128 -2048
 14153 09cd 1F       		.uleb128 0x1f
 14154 09ce A8070000 		.4byte	.LASF162
 14155 09d2 01       		.byte	0x1
 14156 09d3 4201     		.2byte	0x142
 14157 09d5 CD0A0000 		.4byte	0xacd
 14158 09d9 02       		.uleb128 0x2
 14159 09da 91       		.byte	0x91
 14160 09db 5C       		.sleb128 -36
 14161 09dc 1F       		.uleb128 0x1f
 14162 09dd B5010000 		.4byte	.LASF163
 14163 09e1 01       		.byte	0x1
 14164 09e2 4301     		.2byte	0x143
 14165 09e4 CD0A0000 		.4byte	0xacd
 14166 09e8 02       		.uleb128 0x2
 14167 09e9 91       		.byte	0x91
 14168 09ea 54       		.sleb128 -44
 14169 09eb 1F       		.uleb128 0x1f
 14170 09ec 8D0C0000 		.4byte	.LASF164
 14171 09f0 01       		.byte	0x1
 14172 09f1 4401     		.2byte	0x144
 14173 09f3 EB000000 		.4byte	0xeb
 14174 09f7 03       		.uleb128 0x3
 14175 09f8 91       		.byte	0x91
 14176 09f9 FC6F     		.sleb128 -2052
 14177 09fb 1F       		.uleb128 0x1f
 14178 09fc C10B0000 		.4byte	.LASF165
 14179 0a00 01       		.byte	0x1
 14180 0a01 4501     		.2byte	0x145
 14181 0a03 C7000000 		.4byte	0xc7
 14182 0a07 03       		.uleb128 0x3
 14183 0a08 91       		.byte	0x91
 14184 0a09 FA6F     		.sleb128 -2054
 14185 0a0b 1F       		.uleb128 0x1f
 14186 0a0c 8A080000 		.4byte	.LASF166
 14187 0a10 01       		.byte	0x1
 14188 0a11 4601     		.2byte	0x146
 14189 0a13 A3000000 		.4byte	0xa3
 14190 0a17 03       		.uleb128 0x3
 14191 0a18 91       		.byte	0x91
 14192 0a19 F86F     		.sleb128 -2056
 14193 0a1b 1F       		.uleb128 0x1f
 14194 0a1c AE0C0000 		.4byte	.LASF167
 14195 0a20 01       		.byte	0x1
 14196 0a21 4701     		.2byte	0x147
 14197 0a23 D3000000 		.4byte	0xd3
 14198 0a27 03       		.uleb128 0x3
 14199 0a28 91       		.byte	0x91
 14200 0a29 F46F     		.sleb128 -2060
 14201 0a2b 1F       		.uleb128 0x1f
 14202 0a2c D5090000 		.4byte	.LASF168
 14203 0a30 01       		.byte	0x1
 14204 0a31 4801     		.2byte	0x148
 14205 0a33 AF000000 		.4byte	0xaf
 14206 0a37 03       		.uleb128 0x3
 14207 0a38 91       		.byte	0x91
 14208 0a39 F06F     		.sleb128 -2064
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 322


 14209 0a3b 1F       		.uleb128 0x1f
 14210 0a3c 3A0D0000 		.4byte	.LASF169
 14211 0a40 01       		.byte	0x1
 14212 0a41 4B01     		.2byte	0x14b
 14213 0a43 E80A0000 		.4byte	0xae8
 14214 0a47 03       		.uleb128 0x3
 14215 0a48 91       		.byte	0x91
 14216 0a49 D06F     		.sleb128 -2096
 14217 0a4b 1F       		.uleb128 0x1f
 14218 0a4c 62020000 		.4byte	.LASF170
 14219 0a50 01       		.byte	0x1
 14220 0a51 5201     		.2byte	0x152
 14221 0a53 ED0A0000 		.4byte	0xaed
 14222 0a57 03       		.uleb128 0x3
 14223 0a58 91       		.byte	0x91
 14224 0a59 B06F     		.sleb128 -2128
 14225 0a5b 1F       		.uleb128 0x1f
 14226 0a5c A50C0000 		.4byte	.LASF171
 14227 0a60 01       		.byte	0x1
 14228 0a61 5901     		.2byte	0x159
 14229 0a63 020B0000 		.4byte	0xb02
 14230 0a67 03       		.uleb128 0x3
 14231 0a68 91       		.byte	0x91
 14232 0a69 A46F     		.sleb128 -2140
 14233 0a6b 1F       		.uleb128 0x1f
 14234 0a6c 27050000 		.4byte	.LASF172
 14235 0a70 01       		.byte	0x1
 14236 0a71 5B01     		.2byte	0x15b
 14237 0a73 070B0000 		.4byte	0xb07
 14238 0a77 03       		.uleb128 0x3
 14239 0a78 91       		.byte	0x91
 14240 0a79 B06E     		.sleb128 -2256
 14241 0a7b 1F       		.uleb128 0x1f
 14242 0a7c 03060000 		.4byte	.LASF173
 14243 0a80 01       		.byte	0x1
 14244 0a81 6601     		.2byte	0x166
 14245 0a83 270B0000 		.4byte	0xb27
 14246 0a87 03       		.uleb128 0x3
 14247 0a88 91       		.byte	0x91
 14248 0a89 CC6D     		.sleb128 -2356
 14249 0a8b 1F       		.uleb128 0x1f
 14250 0a8c 14030000 		.4byte	.LASF174
 14251 0a90 01       		.byte	0x1
 14252 0a91 6701     		.2byte	0x167
 14253 0a93 3C0B0000 		.4byte	0xb3c
 14254 0a97 03       		.uleb128 0x3
 14255 0a98 91       		.byte	0x91
 14256 0a99 8C6D     		.sleb128 -2420
 14257 0a9b 1F       		.uleb128 0x1f
 14258 0a9c D70B0000 		.4byte	.LASF175
 14259 0aa0 01       		.byte	0x1
 14260 0aa1 6801     		.2byte	0x168
 14261 0aa3 510B0000 		.4byte	0xb51
 14262 0aa7 03       		.uleb128 0x3
 14263 0aa8 91       		.byte	0x91
 14264 0aa9 E06C     		.sleb128 -2464
 14265 0aab 00       		.byte	0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 323


 14266 0aac 09       		.uleb128 0x9
 14267 0aad 97000000 		.4byte	0x97
 14268 0ab1 BD0A0000 		.4byte	0xabd
 14269 0ab5 20       		.uleb128 0x20
 14270 0ab6 18010000 		.4byte	0x118
 14271 0aba 9D07     		.2byte	0x79d
 14272 0abc 00       		.byte	0
 14273 0abd 09       		.uleb128 0x9
 14274 0abe F9000000 		.4byte	0xf9
 14275 0ac2 CD0A0000 		.4byte	0xacd
 14276 0ac6 0A       		.uleb128 0xa
 14277 0ac7 18010000 		.4byte	0x118
 14278 0acb 31       		.byte	0x31
 14279 0acc 00       		.byte	0
 14280 0acd 07       		.uleb128 0x7
 14281 0ace 04       		.byte	0x4
 14282 0acf 97000000 		.4byte	0x97
 14283 0ad3 09       		.uleb128 0x9
 14284 0ad4 E30A0000 		.4byte	0xae3
 14285 0ad8 E30A0000 		.4byte	0xae3
 14286 0adc 0A       		.uleb128 0xa
 14287 0add 18010000 		.4byte	0x118
 14288 0ae1 1C       		.byte	0x1c
 14289 0ae2 00       		.byte	0
 14290 0ae3 08       		.uleb128 0x8
 14291 0ae4 97000000 		.4byte	0x97
 14292 0ae8 08       		.uleb128 0x8
 14293 0ae9 D30A0000 		.4byte	0xad3
 14294 0aed 08       		.uleb128 0x8
 14295 0aee D30A0000 		.4byte	0xad3
 14296 0af2 09       		.uleb128 0x9
 14297 0af3 E30A0000 		.4byte	0xae3
 14298 0af7 020B0000 		.4byte	0xb02
 14299 0afb 0A       		.uleb128 0xa
 14300 0afc 18010000 		.4byte	0x118
 14301 0b00 09       		.byte	0x9
 14302 0b01 00       		.byte	0
 14303 0b02 08       		.uleb128 0x8
 14304 0b03 F20A0000 		.4byte	0xaf2
 14305 0b07 09       		.uleb128 0x9
 14306 0b08 25010000 		.4byte	0x125
 14307 0b0c 170B0000 		.4byte	0xb17
 14308 0b10 0A       		.uleb128 0xa
 14309 0b11 18010000 		.4byte	0x118
 14310 0b15 1C       		.byte	0x1c
 14311 0b16 00       		.byte	0
 14312 0b17 09       		.uleb128 0x9
 14313 0b18 2B010000 		.4byte	0x12b
 14314 0b1c 270B0000 		.4byte	0xb27
 14315 0b20 0A       		.uleb128 0xa
 14316 0b21 18010000 		.4byte	0x118
 14317 0b25 62       		.byte	0x62
 14318 0b26 00       		.byte	0
 14319 0b27 08       		.uleb128 0x8
 14320 0b28 170B0000 		.4byte	0xb17
 14321 0b2c 09       		.uleb128 0x9
 14322 0b2d 2B010000 		.4byte	0x12b
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 324


 14323 0b31 3C0B0000 		.4byte	0xb3c
 14324 0b35 0A       		.uleb128 0xa
 14325 0b36 18010000 		.4byte	0x118
 14326 0b3a 3F       		.byte	0x3f
 14327 0b3b 00       		.byte	0
 14328 0b3c 08       		.uleb128 0x8
 14329 0b3d 2C0B0000 		.4byte	0xb2c
 14330 0b41 09       		.uleb128 0x9
 14331 0b42 2B010000 		.4byte	0x12b
 14332 0b46 510B0000 		.4byte	0xb51
 14333 0b4a 0A       		.uleb128 0xa
 14334 0b4b 18010000 		.4byte	0x118
 14335 0b4f 29       		.byte	0x29
 14336 0b50 00       		.byte	0
 14337 0b51 08       		.uleb128 0x8
 14338 0b52 410B0000 		.4byte	0xb41
 14339 0b56 1E       		.uleb128 0x1e
 14340 0b57 7D0A0000 		.4byte	.LASF176
 14341 0b5b 01       		.byte	0x1
 14342 0b5c B502     		.2byte	0x2b5
 14343 0b5e 00000000 		.4byte	.LFB68
 14344 0b62 DC0A0000 		.4byte	.LFE68-.LFB68
 14345 0b66 01       		.uleb128 0x1
 14346 0b67 9C       		.byte	0x9c
 14347 0b68 C30B0000 		.4byte	0xbc3
 14348 0b6c 21       		.uleb128 0x21
 14349 0b6d CB040000 		.4byte	.LASF178
 14350 0b71 01       		.byte	0x1
 14351 0b72 B502     		.2byte	0x2b5
 14352 0b74 A3000000 		.4byte	0xa3
 14353 0b78 02       		.uleb128 0x2
 14354 0b79 91       		.byte	0x91
 14355 0b7a 66       		.sleb128 -26
 14356 0b7b 23       		.uleb128 0x23
 14357 0b7c 6900     		.ascii	"i\000"
 14358 0b7e 01       		.byte	0x1
 14359 0b7f B602     		.2byte	0x2b6
 14360 0b81 97000000 		.4byte	0x97
 14361 0b85 02       		.uleb128 0x2
 14362 0b86 91       		.byte	0x91
 14363 0b87 77       		.sleb128 -9
 14364 0b88 23       		.uleb128 0x23
 14365 0b89 6A00     		.ascii	"j\000"
 14366 0b8b 01       		.byte	0x1
 14367 0b8c B602     		.2byte	0x2b6
 14368 0b8e 97000000 		.4byte	0x97
 14369 0b92 02       		.uleb128 0x2
 14370 0b93 91       		.byte	0x91
 14371 0b94 76       		.sleb128 -10
 14372 0b95 1F       		.uleb128 0x1f
 14373 0b96 75080000 		.4byte	.LASF179
 14374 0b9a 01       		.byte	0x1
 14375 0b9b B702     		.2byte	0x2b7
 14376 0b9d 97000000 		.4byte	0x97
 14377 0ba1 02       		.uleb128 0x2
 14378 0ba2 91       		.byte	0x91
 14379 0ba3 75       		.sleb128 -11
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 325


 14380 0ba4 1F       		.uleb128 0x1f
 14381 0ba5 8D0C0000 		.4byte	.LASF164
 14382 0ba9 01       		.byte	0x1
 14383 0baa B802     		.2byte	0x2b8
 14384 0bac EB000000 		.4byte	0xeb
 14385 0bb0 02       		.uleb128 0x2
 14386 0bb1 91       		.byte	0x91
 14387 0bb2 70       		.sleb128 -16
 14388 0bb3 1F       		.uleb128 0x1f
 14389 0bb4 91020000 		.4byte	.LASF180
 14390 0bb8 01       		.byte	0x1
 14391 0bb9 B802     		.2byte	0x2b8
 14392 0bbb EB000000 		.4byte	0xeb
 14393 0bbf 02       		.uleb128 0x2
 14394 0bc0 91       		.byte	0x91
 14395 0bc1 6C       		.sleb128 -20
 14396 0bc2 00       		.byte	0
 14397 0bc3 1E       		.uleb128 0x1e
 14398 0bc4 270D0000 		.4byte	.LASF181
 14399 0bc8 01       		.byte	0x1
 14400 0bc9 0B04     		.2byte	0x40b
 14401 0bcb 00000000 		.4byte	.LFB69
 14402 0bcf EC0D0000 		.4byte	.LFE69-.LFB69
 14403 0bd3 01       		.uleb128 0x1
 14404 0bd4 9C       		.byte	0x9c
 14405 0bd5 520D0000 		.4byte	0xd52
 14406 0bd9 21       		.uleb128 0x21
 14407 0bda CB040000 		.4byte	.LASF178
 14408 0bde 01       		.byte	0x1
 14409 0bdf 0B04     		.2byte	0x40b
 14410 0be1 A3000000 		.4byte	0xa3
 14411 0be5 03       		.uleb128 0x3
 14412 0be6 91       		.byte	0x91
 14413 0be7 DE73     		.sleb128 -1570
 14414 0be9 1F       		.uleb128 0x1f
 14415 0bea 20040000 		.4byte	.LASF157
 14416 0bee 01       		.byte	0x1
 14417 0bef 0E04     		.2byte	0x40e
 14418 0bf1 520D0000 		.4byte	0xd52
 14419 0bf5 03       		.uleb128 0x3
 14420 0bf6 91       		.byte	0x91
 14421 0bf7 F075     		.sleb128 -1296
 14422 0bf9 1F       		.uleb128 0x1f
 14423 0bfa AE0B0000 		.4byte	.LASF182
 14424 0bfe 01       		.byte	0x1
 14425 0bff 1504     		.2byte	0x415
 14426 0c01 A3000000 		.4byte	0xa3
 14427 0c05 02       		.uleb128 0x2
 14428 0c06 91       		.byte	0x91
 14429 0c07 62       		.sleb128 -30
 14430 0c08 1F       		.uleb128 0x1f
 14431 0c09 B4030000 		.4byte	.LASF183
 14432 0c0d 01       		.byte	0x1
 14433 0c0e 1604     		.2byte	0x416
 14434 0c10 A3000000 		.4byte	0xa3
 14435 0c14 02       		.uleb128 0x2
 14436 0c15 91       		.byte	0x91
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 326


 14437 0c16 6E       		.sleb128 -18
 14438 0c17 1F       		.uleb128 0x1f
 14439 0c18 28060000 		.4byte	.LASF184
 14440 0c1c 01       		.byte	0x1
 14441 0c1d 1704     		.2byte	0x417
 14442 0c1f A3000000 		.4byte	0xa3
 14443 0c23 02       		.uleb128 0x2
 14444 0c24 91       		.byte	0x91
 14445 0c25 60       		.sleb128 -32
 14446 0c26 1F       		.uleb128 0x1f
 14447 0c27 B7050000 		.4byte	.LASF185
 14448 0c2b 01       		.byte	0x1
 14449 0c2c 1804     		.2byte	0x418
 14450 0c2e A3000000 		.4byte	0xa3
 14451 0c32 02       		.uleb128 0x2
 14452 0c33 91       		.byte	0x91
 14453 0c34 5E       		.sleb128 -34
 14454 0c35 23       		.uleb128 0x23
 14455 0c36 6900     		.ascii	"i\000"
 14456 0c38 01       		.byte	0x1
 14457 0c39 2004     		.2byte	0x420
 14458 0c3b A3000000 		.4byte	0xa3
 14459 0c3f 02       		.uleb128 0x2
 14460 0c40 91       		.byte	0x91
 14461 0c41 6C       		.sleb128 -20
 14462 0c42 23       		.uleb128 0x23
 14463 0c43 6A00     		.ascii	"j\000"
 14464 0c45 01       		.byte	0x1
 14465 0c46 2004     		.2byte	0x420
 14466 0c48 A3000000 		.4byte	0xa3
 14467 0c4c 02       		.uleb128 0x2
 14468 0c4d 91       		.byte	0x91
 14469 0c4e 6A       		.sleb128 -22
 14470 0c4f 23       		.uleb128 0x23
 14471 0c50 6B00     		.ascii	"k\000"
 14472 0c52 01       		.byte	0x1
 14473 0c53 2004     		.2byte	0x420
 14474 0c55 A3000000 		.4byte	0xa3
 14475 0c59 02       		.uleb128 0x2
 14476 0c5a 91       		.byte	0x91
 14477 0c5b 68       		.sleb128 -24
 14478 0c5c 23       		.uleb128 0x23
 14479 0c5d 6800     		.ascii	"h\000"
 14480 0c5f 01       		.byte	0x1
 14481 0c60 2004     		.2byte	0x420
 14482 0c62 A3000000 		.4byte	0xa3
 14483 0c66 02       		.uleb128 0x2
 14484 0c67 91       		.byte	0x91
 14485 0c68 66       		.sleb128 -26
 14486 0c69 1F       		.uleb128 0x1f
 14487 0c6a A9030000 		.4byte	.LASF186
 14488 0c6e 01       		.byte	0x1
 14489 0c6f 2104     		.2byte	0x421
 14490 0c71 A3000000 		.4byte	0xa3
 14491 0c75 02       		.uleb128 0x2
 14492 0c76 91       		.byte	0x91
 14493 0c77 5C       		.sleb128 -36
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 327


 14494 0c78 1F       		.uleb128 0x1f
 14495 0c79 93090000 		.4byte	.LASF187
 14496 0c7d 01       		.byte	0x1
 14497 0c7e 2404     		.2byte	0x424
 14498 0c80 30010000 		.4byte	0x130
 14499 0c84 03       		.uleb128 0x3
 14500 0c85 91       		.byte	0x91
 14501 0c86 D475     		.sleb128 -1324
 14502 0c88 1F       		.uleb128 0x1f
 14503 0c89 860B0000 		.4byte	.LASF188
 14504 0c8d 01       		.byte	0x1
 14505 0c8e 2504     		.2byte	0x425
 14506 0c90 630D0000 		.4byte	0xd63
 14507 0c94 03       		.uleb128 0x3
 14508 0c95 91       		.byte	0x91
 14509 0c96 C875     		.sleb128 -1336
 14510 0c98 1F       		.uleb128 0x1f
 14511 0c99 F3040000 		.4byte	.LASF189
 14512 0c9d 01       		.byte	0x1
 14513 0c9e 2604     		.2byte	0x426
 14514 0ca0 730D0000 		.4byte	0xd73
 14515 0ca4 03       		.uleb128 0x3
 14516 0ca5 91       		.byte	0x91
 14517 0ca6 B475     		.sleb128 -1356
 14518 0ca8 1F       		.uleb128 0x1f
 14519 0ca9 63070000 		.4byte	.LASF190
 14520 0cad 01       		.byte	0x1
 14521 0cae 2704     		.2byte	0x427
 14522 0cb0 830D0000 		.4byte	0xd83
 14523 0cb4 03       		.uleb128 0x3
 14524 0cb5 91       		.byte	0x91
 14525 0cb6 A475     		.sleb128 -1372
 14526 0cb8 1F       		.uleb128 0x1f
 14527 0cb9 460A0000 		.4byte	.LASF191
 14528 0cbd 01       		.byte	0x1
 14529 0cbe 2804     		.2byte	0x428
 14530 0cc0 930D0000 		.4byte	0xd93
 14531 0cc4 03       		.uleb128 0x3
 14532 0cc5 91       		.byte	0x91
 14533 0cc6 F874     		.sleb128 -1416
 14534 0cc8 1F       		.uleb128 0x1f
 14535 0cc9 6B030000 		.4byte	.LASF192
 14536 0ccd 01       		.byte	0x1
 14537 0cce 2904     		.2byte	0x429
 14538 0cd0 30010000 		.4byte	0x130
 14539 0cd4 03       		.uleb128 0x3
 14540 0cd5 91       		.byte	0x91
 14541 0cd6 DC74     		.sleb128 -1444
 14542 0cd8 1F       		.uleb128 0x1f
 14543 0cd9 92010000 		.4byte	.LASF193
 14544 0cdd 01       		.byte	0x1
 14545 0cde 2C04     		.2byte	0x42c
 14546 0ce0 97000000 		.4byte	0x97
 14547 0ce4 02       		.uleb128 0x2
 14548 0ce5 91       		.byte	0x91
 14549 0ce6 5B       		.sleb128 -37
 14550 0ce7 1F       		.uleb128 0x1f
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 328


 14551 0ce8 3F030000 		.4byte	.LASF194
 14552 0cec 01       		.byte	0x1
 14553 0ced 2D04     		.2byte	0x42d
 14554 0cef 97000000 		.4byte	0x97
 14555 0cf3 02       		.uleb128 0x2
 14556 0cf4 91       		.byte	0x91
 14557 0cf5 5A       		.sleb128 -38
 14558 0cf6 1F       		.uleb128 0x1f
 14559 0cf7 4B0B0000 		.4byte	.LASF195
 14560 0cfb 01       		.byte	0x1
 14561 0cfc 2E04     		.2byte	0x42e
 14562 0cfe 97000000 		.4byte	0x97
 14563 0d02 02       		.uleb128 0x2
 14564 0d03 91       		.byte	0x91
 14565 0d04 59       		.sleb128 -39
 14566 0d05 1F       		.uleb128 0x1f
 14567 0d06 9C0B0000 		.4byte	.LASF196
 14568 0d0a 01       		.byte	0x1
 14569 0d0b 2F04     		.2byte	0x42f
 14570 0d0d 97000000 		.4byte	0x97
 14571 0d11 02       		.uleb128 0x2
 14572 0d12 91       		.byte	0x91
 14573 0d13 58       		.sleb128 -40
 14574 0d14 1F       		.uleb128 0x1f
 14575 0d15 4D030000 		.4byte	.LASF197
 14576 0d19 01       		.byte	0x1
 14577 0d1a 3004     		.2byte	0x430
 14578 0d1c 97000000 		.4byte	0x97
 14579 0d20 02       		.uleb128 0x2
 14580 0d21 91       		.byte	0x91
 14581 0d22 57       		.sleb128 -41
 14582 0d23 1F       		.uleb128 0x1f
 14583 0d24 FB000000 		.4byte	.LASF198
 14584 0d28 01       		.byte	0x1
 14585 0d29 3104     		.2byte	0x431
 14586 0d2b 97000000 		.4byte	0x97
 14587 0d2f 02       		.uleb128 0x2
 14588 0d30 91       		.byte	0x91
 14589 0d31 65       		.sleb128 -27
 14590 0d32 1F       		.uleb128 0x1f
 14591 0d33 900D0000 		.4byte	.LASF199
 14592 0d37 01       		.byte	0x1
 14593 0d38 3304     		.2byte	0x433
 14594 0d3a A30D0000 		.4byte	0xda3
 14595 0d3e 03       		.uleb128 0x3
 14596 0d3f 91       		.byte	0x91
 14597 0d40 E473     		.sleb128 -1564
 14598 0d42 1F       		.uleb128 0x1f
 14599 0d43 A5020000 		.4byte	.LASF200
 14600 0d47 01       		.byte	0x1
 14601 0d48 3404     		.2byte	0x434
 14602 0d4a 97000000 		.4byte	0x97
 14603 0d4e 02       		.uleb128 0x2
 14604 0d4f 91       		.byte	0x91
 14605 0d50 56       		.sleb128 -42
 14606 0d51 00       		.byte	0
 14607 0d52 09       		.uleb128 0x9
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 329


 14608 0d53 97000000 		.4byte	0x97
 14609 0d57 630D0000 		.4byte	0xd63
 14610 0d5b 20       		.uleb128 0x20
 14611 0d5c 18010000 		.4byte	0x118
 14612 0d60 E204     		.2byte	0x4e2
 14613 0d62 00       		.byte	0
 14614 0d63 09       		.uleb128 0x9
 14615 0d64 F9000000 		.4byte	0xf9
 14616 0d68 730D0000 		.4byte	0xd73
 14617 0d6c 0A       		.uleb128 0xa
 14618 0d6d 18010000 		.4byte	0x118
 14619 0d71 0A       		.byte	0xa
 14620 0d72 00       		.byte	0
 14621 0d73 09       		.uleb128 0x9
 14622 0d74 F9000000 		.4byte	0xf9
 14623 0d78 830D0000 		.4byte	0xd83
 14624 0d7c 0A       		.uleb128 0xa
 14625 0d7d 18010000 		.4byte	0x118
 14626 0d81 13       		.byte	0x13
 14627 0d82 00       		.byte	0
 14628 0d83 09       		.uleb128 0x9
 14629 0d84 F9000000 		.4byte	0xf9
 14630 0d88 930D0000 		.4byte	0xd93
 14631 0d8c 0A       		.uleb128 0xa
 14632 0d8d 18010000 		.4byte	0x118
 14633 0d91 0F       		.byte	0xf
 14634 0d92 00       		.byte	0
 14635 0d93 09       		.uleb128 0x9
 14636 0d94 F9000000 		.4byte	0xf9
 14637 0d98 A30D0000 		.4byte	0xda3
 14638 0d9c 0A       		.uleb128 0xa
 14639 0d9d 18010000 		.4byte	0x118
 14640 0da1 29       		.byte	0x29
 14641 0da2 00       		.byte	0
 14642 0da3 09       		.uleb128 0x9
 14643 0da4 F9000000 		.4byte	0xf9
 14644 0da8 B30D0000 		.4byte	0xdb3
 14645 0dac 0A       		.uleb128 0xa
 14646 0dad 18010000 		.4byte	0x118
 14647 0db1 75       		.byte	0x75
 14648 0db2 00       		.byte	0
 14649 0db3 22       		.uleb128 0x22
 14650 0db4 40020000 		.4byte	.LASF202
 14651 0db8 01       		.byte	0x1
 14652 0db9 FA04     		.2byte	0x4fa
 14653 0dbb 00000000 		.4byte	.LFB70
 14654 0dbf 9C000000 		.4byte	.LFE70-.LFB70
 14655 0dc3 01       		.uleb128 0x1
 14656 0dc4 9C       		.byte	0x9c
 14657 0dc5 D70D0000 		.4byte	0xdd7
 14658 0dc9 23       		.uleb128 0x23
 14659 0dca 6900     		.ascii	"i\000"
 14660 0dcc 01       		.byte	0x1
 14661 0dcd FC04     		.2byte	0x4fc
 14662 0dcf 97000000 		.4byte	0x97
 14663 0dd3 02       		.uleb128 0x2
 14664 0dd4 91       		.byte	0x91
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 330


 14665 0dd5 77       		.sleb128 -9
 14666 0dd6 00       		.byte	0
 14667 0dd7 1E       		.uleb128 0x1e
 14668 0dd8 20010000 		.4byte	.LASF203
 14669 0ddc 01       		.byte	0x1
 14670 0ddd 0E05     		.2byte	0x50e
 14671 0ddf 00000000 		.4byte	.LFB71
 14672 0de3 70150000 		.4byte	.LFE71-.LFB71
 14673 0de7 01       		.uleb128 0x1
 14674 0de8 9C       		.byte	0x9c
 14675 0de9 250E0000 		.4byte	0xe25
 14676 0ded 21       		.uleb128 0x21
 14677 0dee 9D090000 		.4byte	.LASF204
 14678 0df2 01       		.byte	0x1
 14679 0df3 0E05     		.2byte	0x50e
 14680 0df5 1F010000 		.4byte	0x11f
 14681 0df9 03       		.uleb128 0x3
 14682 0dfa 91       		.byte	0x91
 14683 0dfb F47E     		.sleb128 -140
 14684 0dfd 23       		.uleb128 0x23
 14685 0dfe 6900     		.ascii	"i\000"
 14686 0e00 01       		.byte	0x1
 14687 0e01 1005     		.2byte	0x510
 14688 0e03 73000000 		.4byte	0x73
 14689 0e07 02       		.uleb128 0x2
 14690 0e08 91       		.byte	0x91
 14691 0e09 5C       		.sleb128 -36
 14692 0e0a 1B       		.uleb128 0x1b
 14693 0e0b 14000000 		.4byte	.LBB10
 14694 0e0f 22150000 		.4byte	.LBE10-.LBB10
 14695 0e13 23       		.uleb128 0x23
 14696 0e14 73747200 		.ascii	"str\000"
 14697 0e18 01       		.byte	0x1
 14698 0e19 1305     		.2byte	0x513
 14699 0e1b 250E0000 		.4byte	0xe25
 14700 0e1f 03       		.uleb128 0x3
 14701 0e20 91       		.byte	0x91
 14702 0e21 F87E     		.sleb128 -136
 14703 0e23 00       		.byte	0
 14704 0e24 00       		.byte	0
 14705 0e25 09       		.uleb128 0x9
 14706 0e26 F9000000 		.4byte	0xf9
 14707 0e2a 350E0000 		.4byte	0xe35
 14708 0e2e 0A       		.uleb128 0xa
 14709 0e2f 18010000 		.4byte	0x118
 14710 0e33 63       		.byte	0x63
 14711 0e34 00       		.byte	0
 14712 0e35 1E       		.uleb128 0x1e
 14713 0e36 A20A0000 		.4byte	.LASF205
 14714 0e3a 01       		.byte	0x1
 14715 0e3b 4806     		.2byte	0x648
 14716 0e3d 00000000 		.4byte	.LFB72
 14717 0e41 60030000 		.4byte	.LFE72-.LFB72
 14718 0e45 01       		.uleb128 0x1
 14719 0e46 9C       		.byte	0x9c
 14720 0e47 880E0000 		.4byte	0xe88
 14721 0e4b 21       		.uleb128 0x21
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 331


 14722 0e4c 9D090000 		.4byte	.LASF204
 14723 0e50 01       		.byte	0x1
 14724 0e51 4806     		.2byte	0x648
 14725 0e53 1F010000 		.4byte	0x11f
 14726 0e57 03       		.uleb128 0x3
 14727 0e58 91       		.byte	0x91
 14728 0e59 F47E     		.sleb128 -140
 14729 0e5b 23       		.uleb128 0x23
 14730 0e5c 73747200 		.ascii	"str\000"
 14731 0e60 01       		.byte	0x1
 14732 0e61 4A06     		.2byte	0x64a
 14733 0e63 250E0000 		.4byte	0xe25
 14734 0e67 03       		.uleb128 0x3
 14735 0e68 91       		.byte	0x91
 14736 0e69 FC7E     		.sleb128 -132
 14737 0e6b 23       		.uleb128 0x23
 14738 0e6c 6900     		.ascii	"i\000"
 14739 0e6e 01       		.byte	0x1
 14740 0e6f 4B06     		.2byte	0x64b
 14741 0e71 73000000 		.4byte	0x73
 14742 0e75 02       		.uleb128 0x2
 14743 0e76 91       		.byte	0x91
 14744 0e77 64       		.sleb128 -28
 14745 0e78 1F       		.uleb128 0x1f
 14746 0e79 F8020000 		.4byte	.LASF206
 14747 0e7d 01       		.byte	0x1
 14748 0e7e 4C06     		.2byte	0x64c
 14749 0e80 73000000 		.4byte	0x73
 14750 0e84 02       		.uleb128 0x2
 14751 0e85 91       		.byte	0x91
 14752 0e86 60       		.sleb128 -32
 14753 0e87 00       		.byte	0
 14754 0e88 1E       		.uleb128 0x1e
 14755 0e89 F90D0000 		.4byte	.LASF207
 14756 0e8d 01       		.byte	0x1
 14757 0e8e 8306     		.2byte	0x683
 14758 0e90 00000000 		.4byte	.LFB73
 14759 0e94 74030000 		.4byte	.LFE73-.LFB73
 14760 0e98 01       		.uleb128 0x1
 14761 0e99 9C       		.byte	0x9c
 14762 0e9a CC0E0000 		.4byte	0xecc
 14763 0e9e 21       		.uleb128 0x21
 14764 0e9f 9D090000 		.4byte	.LASF204
 14765 0ea3 01       		.byte	0x1
 14766 0ea4 8306     		.2byte	0x683
 14767 0ea6 1F010000 		.4byte	0x11f
 14768 0eaa 03       		.uleb128 0x3
 14769 0eab 91       		.byte	0x91
 14770 0eac AC7D     		.sleb128 -340
 14771 0eae 23       		.uleb128 0x23
 14772 0eaf 73747200 		.ascii	"str\000"
 14773 0eb3 01       		.byte	0x1
 14774 0eb4 8506     		.2byte	0x685
 14775 0eb6 CC0E0000 		.4byte	0xecc
 14776 0eba 03       		.uleb128 0x3
 14777 0ebb 91       		.byte	0x91
 14778 0ebc B07D     		.sleb128 -336
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 332


 14779 0ebe 23       		.uleb128 0x23
 14780 0ebf 6900     		.ascii	"i\000"
 14781 0ec1 01       		.byte	0x1
 14782 0ec2 8606     		.2byte	0x686
 14783 0ec4 73000000 		.4byte	0x73
 14784 0ec8 02       		.uleb128 0x2
 14785 0ec9 91       		.byte	0x91
 14786 0eca 5C       		.sleb128 -36
 14787 0ecb 00       		.byte	0
 14788 0ecc 09       		.uleb128 0x9
 14789 0ecd F9000000 		.4byte	0xf9
 14790 0ed1 DD0E0000 		.4byte	0xedd
 14791 0ed5 20       		.uleb128 0x20
 14792 0ed6 18010000 		.4byte	0x118
 14793 0eda 2B01     		.2byte	0x12b
 14794 0edc 00       		.byte	0
 14795 0edd 1E       		.uleb128 0x1e
 14796 0ede 6C0A0000 		.4byte	.LASF208
 14797 0ee2 01       		.byte	0x1
 14798 0ee3 AD06     		.2byte	0x6ad
 14799 0ee5 00000000 		.4byte	.LFB74
 14800 0ee9 84000000 		.4byte	.LFE74-.LFB74
 14801 0eed 01       		.uleb128 0x1
 14802 0eee 9C       		.byte	0x9c
 14803 0eef 300F0000 		.4byte	0xf30
 14804 0ef3 21       		.uleb128 0x21
 14805 0ef4 20040000 		.4byte	.LASF157
 14806 0ef8 01       		.byte	0x1
 14807 0ef9 AD06     		.2byte	0x6ad
 14808 0efb CD0A0000 		.4byte	0xacd
 14809 0eff 02       		.uleb128 0x2
 14810 0f00 91       		.byte	0x91
 14811 0f01 6C       		.sleb128 -20
 14812 0f02 21       		.uleb128 0x21
 14813 0f03 12010000 		.4byte	.LASF158
 14814 0f07 01       		.byte	0x1
 14815 0f08 AD06     		.2byte	0x6ad
 14816 0f0a A3000000 		.4byte	0xa3
 14817 0f0e 02       		.uleb128 0x2
 14818 0f0f 91       		.byte	0x91
 14819 0f10 6A       		.sleb128 -22
 14820 0f11 21       		.uleb128 0x21
 14821 0f12 B70A0000 		.4byte	.LASF209
 14822 0f16 01       		.byte	0x1
 14823 0f17 AD06     		.2byte	0x6ad
 14824 0f19 97000000 		.4byte	0x97
 14825 0f1d 02       		.uleb128 0x2
 14826 0f1e 91       		.byte	0x91
 14827 0f1f 69       		.sleb128 -23
 14828 0f20 1F       		.uleb128 0x1f
 14829 0f21 CB040000 		.4byte	.LASF178
 14830 0f25 01       		.byte	0x1
 14831 0f26 AF06     		.2byte	0x6af
 14832 0f28 A3000000 		.4byte	0xa3
 14833 0f2c 02       		.uleb128 0x2
 14834 0f2d 91       		.byte	0x91
 14835 0f2e 76       		.sleb128 -10
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 333


 14836 0f2f 00       		.byte	0
 14837 0f30 1E       		.uleb128 0x1e
 14838 0f31 2C040000 		.4byte	.LASF210
 14839 0f35 01       		.byte	0x1
 14840 0f36 C906     		.2byte	0x6c9
 14841 0f38 00000000 		.4byte	.LFB75
 14842 0f3c 88000000 		.4byte	.LFE75-.LFB75
 14843 0f40 01       		.uleb128 0x1
 14844 0f41 9C       		.byte	0x9c
 14845 0f42 740F0000 		.4byte	0xf74
 14846 0f46 21       		.uleb128 0x21
 14847 0f47 20040000 		.4byte	.LASF157
 14848 0f4b 01       		.byte	0x1
 14849 0f4c C906     		.2byte	0x6c9
 14850 0f4e CD0A0000 		.4byte	0xacd
 14851 0f52 02       		.uleb128 0x2
 14852 0f53 91       		.byte	0x91
 14853 0f54 6C       		.sleb128 -20
 14854 0f55 21       		.uleb128 0x21
 14855 0f56 12010000 		.4byte	.LASF158
 14856 0f5a 01       		.byte	0x1
 14857 0f5b C906     		.2byte	0x6c9
 14858 0f5d A3000000 		.4byte	0xa3
 14859 0f61 02       		.uleb128 0x2
 14860 0f62 91       		.byte	0x91
 14861 0f63 6A       		.sleb128 -22
 14862 0f64 1F       		.uleb128 0x1f
 14863 0f65 CB040000 		.4byte	.LASF178
 14864 0f69 01       		.byte	0x1
 14865 0f6a CB06     		.2byte	0x6cb
 14866 0f6c A3000000 		.4byte	0xa3
 14867 0f70 02       		.uleb128 0x2
 14868 0f71 91       		.byte	0x91
 14869 0f72 76       		.sleb128 -10
 14870 0f73 00       		.byte	0
 14871 0f74 1E       		.uleb128 0x1e
 14872 0f75 4A080000 		.4byte	.LASF211
 14873 0f79 01       		.byte	0x1
 14874 0f7a E106     		.2byte	0x6e1
 14875 0f7c 00000000 		.4byte	.LFB76
 14876 0f80 80000000 		.4byte	.LFE76-.LFB76
 14877 0f84 01       		.uleb128 0x1
 14878 0f85 9C       		.byte	0x9c
 14879 0f86 B80F0000 		.4byte	0xfb8
 14880 0f8a 21       		.uleb128 0x21
 14881 0f8b 20040000 		.4byte	.LASF157
 14882 0f8f 01       		.byte	0x1
 14883 0f90 E106     		.2byte	0x6e1
 14884 0f92 CD0A0000 		.4byte	0xacd
 14885 0f96 02       		.uleb128 0x2
 14886 0f97 91       		.byte	0x91
 14887 0f98 6C       		.sleb128 -20
 14888 0f99 21       		.uleb128 0x21
 14889 0f9a 12010000 		.4byte	.LASF158
 14890 0f9e 01       		.byte	0x1
 14891 0f9f E106     		.2byte	0x6e1
 14892 0fa1 A3000000 		.4byte	0xa3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 334


 14893 0fa5 02       		.uleb128 0x2
 14894 0fa6 91       		.byte	0x91
 14895 0fa7 6A       		.sleb128 -22
 14896 0fa8 1F       		.uleb128 0x1f
 14897 0fa9 CB040000 		.4byte	.LASF178
 14898 0fad 01       		.byte	0x1
 14899 0fae E306     		.2byte	0x6e3
 14900 0fb0 A3000000 		.4byte	0xa3
 14901 0fb4 02       		.uleb128 0x2
 14902 0fb5 91       		.byte	0x91
 14903 0fb6 76       		.sleb128 -10
 14904 0fb7 00       		.byte	0
 14905 0fb8 24       		.uleb128 0x24
 14906 0fb9 FB0C0000 		.4byte	.LASF217
 14907 0fbd 01       		.byte	0x1
 14908 0fbe FC06     		.2byte	0x6fc
 14909 0fc0 97000000 		.4byte	0x97
 14910 0fc4 00000000 		.4byte	.LFB77
 14911 0fc8 3E000000 		.4byte	.LFE77-.LFB77
 14912 0fcc 01       		.uleb128 0x1
 14913 0fcd 9C       		.byte	0x9c
 14914 0fce 0D100000 		.4byte	0x100d
 14915 0fd2 21       		.uleb128 0x21
 14916 0fd3 B5070000 		.4byte	.LASF212
 14917 0fd7 01       		.byte	0x1
 14918 0fd8 FC06     		.2byte	0x6fc
 14919 0fda CD0A0000 		.4byte	0xacd
 14920 0fde 02       		.uleb128 0x2
 14921 0fdf 91       		.byte	0x91
 14922 0fe0 6C       		.sleb128 -20
 14923 0fe1 21       		.uleb128 0x21
 14924 0fe2 F5030000 		.4byte	.LASF213
 14925 0fe6 01       		.byte	0x1
 14926 0fe7 FC06     		.2byte	0x6fc
 14927 0fe9 97000000 		.4byte	0x97
 14928 0fed 02       		.uleb128 0x2
 14929 0fee 91       		.byte	0x91
 14930 0fef 6B       		.sleb128 -21
 14931 0ff0 23       		.uleb128 0x23
 14932 0ff1 6900     		.ascii	"i\000"
 14933 0ff3 01       		.byte	0x1
 14934 0ff4 FE06     		.2byte	0x6fe
 14935 0ff6 97000000 		.4byte	0x97
 14936 0ffa 02       		.uleb128 0x2
 14937 0ffb 91       		.byte	0x91
 14938 0ffc 77       		.sleb128 -9
 14939 0ffd 1F       		.uleb128 0x1f
 14940 0ffe FD080000 		.4byte	.LASF214
 14941 1002 01       		.byte	0x1
 14942 1003 FF06     		.2byte	0x6ff
 14943 1005 97000000 		.4byte	0x97
 14944 1009 02       		.uleb128 0x2
 14945 100a 91       		.byte	0x91
 14946 100b 76       		.sleb128 -10
 14947 100c 00       		.byte	0
 14948 100d 1E       		.uleb128 0x1e
 14949 100e CD070000 		.4byte	.LASF215
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 335


 14950 1012 01       		.byte	0x1
 14951 1013 0C07     		.2byte	0x70c
 14952 1015 00000000 		.4byte	.LFB78
 14953 1019 2E000000 		.4byte	.LFE78-.LFB78
 14954 101d 01       		.uleb128 0x1
 14955 101e 9C       		.byte	0x9c
 14956 101f 51100000 		.4byte	0x1051
 14957 1023 21       		.uleb128 0x21
 14958 1024 5F030000 		.4byte	.LASF216
 14959 1028 01       		.byte	0x1
 14960 1029 0C07     		.2byte	0x70c
 14961 102b 97000000 		.4byte	0x97
 14962 102f 02       		.uleb128 0x2
 14963 1030 91       		.byte	0x91
 14964 1031 6F       		.sleb128 -17
 14965 1032 1F       		.uleb128 0x1f
 14966 1033 12010000 		.4byte	.LASF158
 14967 1037 01       		.byte	0x1
 14968 1038 0D07     		.2byte	0x70d
 14969 103a 73000000 		.4byte	0x73
 14970 103e 02       		.uleb128 0x2
 14971 103f 91       		.byte	0x91
 14972 1040 74       		.sleb128 -12
 14973 1041 1F       		.uleb128 0x1f
 14974 1042 20040000 		.4byte	.LASF157
 14975 1046 01       		.byte	0x1
 14976 1047 0E07     		.2byte	0x70e
 14977 1049 51100000 		.4byte	0x1051
 14978 104d 02       		.uleb128 0x2
 14979 104e 91       		.byte	0x91
 14980 104f 70       		.sleb128 -16
 14981 1050 00       		.byte	0
 14982 1051 09       		.uleb128 0x9
 14983 1052 97000000 		.4byte	0x97
 14984 1056 61100000 		.4byte	0x1061
 14985 105a 0A       		.uleb128 0xa
 14986 105b 18010000 		.4byte	0x118
 14987 105f 01       		.byte	0x1
 14988 1060 00       		.byte	0
 14989 1061 25       		.uleb128 0x25
 14990 1062 CD020000 		.4byte	.LASF218
 14991 1066 01       		.byte	0x1
 14992 1067 1B07     		.2byte	0x71b
 14993 1069 97000000 		.4byte	0x97
 14994 106d 00000000 		.4byte	.LFB79
 14995 1071 98000000 		.4byte	.LFE79-.LFB79
 14996 1075 01       		.uleb128 0x1
 14997 1076 9C       		.byte	0x9c
 14998 1077 C5100000 		.4byte	0x10c5
 14999 107b 21       		.uleb128 0x21
 15000 107c E8030000 		.4byte	.LASF219
 15001 1080 01       		.byte	0x1
 15002 1081 1B07     		.2byte	0x71b
 15003 1083 73000000 		.4byte	0x73
 15004 1087 02       		.uleb128 0x2
 15005 1088 91       		.byte	0x91
 15006 1089 64       		.sleb128 -28
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 336


 15007 108a 23       		.uleb128 0x23
 15008 108b 6900     		.ascii	"i\000"
 15009 108d 01       		.byte	0x1
 15010 108e 1D07     		.2byte	0x71d
 15011 1090 73000000 		.4byte	0x73
 15012 1094 02       		.uleb128 0x2
 15013 1095 91       		.byte	0x91
 15014 1096 74       		.sleb128 -12
 15015 1097 1F       		.uleb128 0x1f
 15016 1098 5E000000 		.4byte	.LASF220
 15017 109c 01       		.byte	0x1
 15018 109d 1E07     		.2byte	0x71e
 15019 109f 97000000 		.4byte	0x97
 15020 10a3 02       		.uleb128 0x2
 15021 10a4 91       		.byte	0x91
 15022 10a5 6B       		.sleb128 -21
 15023 10a6 1F       		.uleb128 0x1f
 15024 10a7 44040000 		.4byte	.LASF221
 15025 10ab 01       		.byte	0x1
 15026 10ac 1F07     		.2byte	0x71f
 15027 10ae 73000000 		.4byte	0x73
 15028 10b2 02       		.uleb128 0x2
 15029 10b3 91       		.byte	0x91
 15030 10b4 6C       		.sleb128 -20
 15031 10b5 1F       		.uleb128 0x1f
 15032 10b6 A1030000 		.4byte	.LASF222
 15033 10ba 01       		.byte	0x1
 15034 10bb 2007     		.2byte	0x720
 15035 10bd 97000000 		.4byte	0x97
 15036 10c1 02       		.uleb128 0x2
 15037 10c2 91       		.byte	0x91
 15038 10c3 73       		.sleb128 -13
 15039 10c4 00       		.byte	0
 15040 10c5 1E       		.uleb128 0x1e
 15041 10c6 180A0000 		.4byte	.LASF223
 15042 10ca 01       		.byte	0x1
 15043 10cb 4507     		.2byte	0x745
 15044 10cd 00000000 		.4byte	.LFB80
 15045 10d1 64000000 		.4byte	.LFE80-.LFB80
 15046 10d5 01       		.uleb128 0x1
 15047 10d6 9C       		.byte	0x9c
 15048 10d7 E9100000 		.4byte	0x10e9
 15049 10db 23       		.uleb128 0x23
 15050 10dc 6900     		.ascii	"i\000"
 15051 10de 01       		.byte	0x1
 15052 10df 4707     		.2byte	0x747
 15053 10e1 A3000000 		.4byte	0xa3
 15054 10e5 02       		.uleb128 0x2
 15055 10e6 91       		.byte	0x91
 15056 10e7 76       		.sleb128 -10
 15057 10e8 00       		.byte	0
 15058 10e9 25       		.uleb128 0x25
 15059 10ea 88090000 		.4byte	.LASF224
 15060 10ee 01       		.byte	0x1
 15061 10ef 5B07     		.2byte	0x75b
 15062 10f1 97000000 		.4byte	0x97
 15063 10f5 00000000 		.4byte	.LFB81
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 337


 15064 10f9 5C000000 		.4byte	.LFE81-.LFB81
 15065 10fd 01       		.uleb128 0x1
 15066 10fe 9C       		.byte	0x9c
 15067 10ff 11110000 		.4byte	0x1111
 15068 1103 23       		.uleb128 0x23
 15069 1104 6900     		.ascii	"i\000"
 15070 1106 01       		.byte	0x1
 15071 1107 5C07     		.2byte	0x75c
 15072 1109 A3000000 		.4byte	0xa3
 15073 110d 02       		.uleb128 0x2
 15074 110e 91       		.byte	0x91
 15075 110f 76       		.sleb128 -10
 15076 1110 00       		.byte	0
 15077 1111 25       		.uleb128 0x25
 15078 1112 4A040000 		.4byte	.LASF225
 15079 1116 01       		.byte	0x1
 15080 1117 6E07     		.2byte	0x76e
 15081 1119 97000000 		.4byte	0x97
 15082 111d 00000000 		.4byte	.LFB82
 15083 1121 04030000 		.4byte	.LFE82-.LFB82
 15084 1125 01       		.uleb128 0x1
 15085 1126 9C       		.byte	0x9c
 15086 1127 39110000 		.4byte	0x1139
 15087 112b 23       		.uleb128 0x23
 15088 112c 6900     		.ascii	"i\000"
 15089 112e 01       		.byte	0x1
 15090 112f 7007     		.2byte	0x770
 15091 1131 97000000 		.4byte	0x97
 15092 1135 02       		.uleb128 0x2
 15093 1136 91       		.byte	0x91
 15094 1137 77       		.sleb128 -9
 15095 1138 00       		.byte	0
 15096 1139 22       		.uleb128 0x22
 15097 113a 78040000 		.4byte	.LASF226
 15098 113e 01       		.byte	0x1
 15099 113f E007     		.2byte	0x7e0
 15100 1141 00000000 		.4byte	.LFB83
 15101 1145 8C000000 		.4byte	.LFE83-.LFB83
 15102 1149 01       		.uleb128 0x1
 15103 114a 9C       		.byte	0x9c
 15104 114b 7D110000 		.4byte	0x117d
 15105 114f 1F       		.uleb128 0x1f
 15106 1150 CB040000 		.4byte	.LASF178
 15107 1154 01       		.byte	0x1
 15108 1155 E207     		.2byte	0x7e2
 15109 1157 97000000 		.4byte	0x97
 15110 115b 02       		.uleb128 0x2
 15111 115c 91       		.byte	0x91
 15112 115d 77       		.sleb128 -9
 15113 115e 1F       		.uleb128 0x1f
 15114 115f C10B0000 		.4byte	.LASF165
 15115 1163 01       		.byte	0x1
 15116 1164 E307     		.2byte	0x7e3
 15117 1166 C7000000 		.4byte	0xc7
 15118 116a 02       		.uleb128 0x2
 15119 116b 91       		.byte	0x91
 15120 116c 74       		.sleb128 -12
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 338


 15121 116d 1F       		.uleb128 0x1f
 15122 116e 20040000 		.4byte	.LASF157
 15123 1172 01       		.byte	0x1
 15124 1173 E607     		.2byte	0x7e6
 15125 1175 7D110000 		.4byte	0x117d
 15126 1179 02       		.uleb128 0x2
 15127 117a 91       		.byte	0x91
 15128 117b 6C       		.sleb128 -20
 15129 117c 00       		.byte	0
 15130 117d 09       		.uleb128 0x9
 15131 117e 97000000 		.4byte	0x97
 15132 1182 8D110000 		.4byte	0x118d
 15133 1186 0A       		.uleb128 0xa
 15134 1187 18010000 		.4byte	0x118
 15135 118b 07       		.byte	0x7
 15136 118c 00       		.byte	0
 15137 118d 22       		.uleb128 0x22
 15138 118e 050A0000 		.4byte	.LASF227
 15139 1192 01       		.byte	0x1
 15140 1193 F907     		.2byte	0x7f9
 15141 1195 00000000 		.4byte	.LFB84
 15142 1199 8C000000 		.4byte	.LFE84-.LFB84
 15143 119d 01       		.uleb128 0x1
 15144 119e 9C       		.byte	0x9c
 15145 119f D1110000 		.4byte	0x11d1
 15146 11a3 1F       		.uleb128 0x1f
 15147 11a4 CB040000 		.4byte	.LASF178
 15148 11a8 01       		.byte	0x1
 15149 11a9 FB07     		.2byte	0x7fb
 15150 11ab 97000000 		.4byte	0x97
 15151 11af 02       		.uleb128 0x2
 15152 11b0 91       		.byte	0x91
 15153 11b1 77       		.sleb128 -9
 15154 11b2 1F       		.uleb128 0x1f
 15155 11b3 C10B0000 		.4byte	.LASF165
 15156 11b7 01       		.byte	0x1
 15157 11b8 FC07     		.2byte	0x7fc
 15158 11ba C7000000 		.4byte	0xc7
 15159 11be 02       		.uleb128 0x2
 15160 11bf 91       		.byte	0x91
 15161 11c0 74       		.sleb128 -12
 15162 11c1 1F       		.uleb128 0x1f
 15163 11c2 20040000 		.4byte	.LASF157
 15164 11c6 01       		.byte	0x1
 15165 11c7 0008     		.2byte	0x800
 15166 11c9 7D110000 		.4byte	0x117d
 15167 11cd 02       		.uleb128 0x2
 15168 11ce 91       		.byte	0x91
 15169 11cf 6C       		.sleb128 -20
 15170 11d0 00       		.byte	0
 15171 11d1 22       		.uleb128 0x22
 15172 11d2 69050000 		.4byte	.LASF228
 15173 11d6 01       		.byte	0x1
 15174 11d7 1308     		.2byte	0x813
 15175 11d9 00000000 		.4byte	.LFB85
 15176 11dd 90000000 		.4byte	.LFE85-.LFB85
 15177 11e1 01       		.uleb128 0x1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 339


 15178 11e2 9C       		.byte	0x9c
 15179 11e3 15120000 		.4byte	0x1215
 15180 11e7 1F       		.uleb128 0x1f
 15181 11e8 CB040000 		.4byte	.LASF178
 15182 11ec 01       		.byte	0x1
 15183 11ed 1508     		.2byte	0x815
 15184 11ef 97000000 		.4byte	0x97
 15185 11f3 02       		.uleb128 0x2
 15186 11f4 91       		.byte	0x91
 15187 11f5 77       		.sleb128 -9
 15188 11f6 1F       		.uleb128 0x1f
 15189 11f7 C10B0000 		.4byte	.LASF165
 15190 11fb 01       		.byte	0x1
 15191 11fc 1608     		.2byte	0x816
 15192 11fe C7000000 		.4byte	0xc7
 15193 1202 02       		.uleb128 0x2
 15194 1203 91       		.byte	0x91
 15195 1204 74       		.sleb128 -12
 15196 1205 1F       		.uleb128 0x1f
 15197 1206 20040000 		.4byte	.LASF157
 15198 120a 01       		.byte	0x1
 15199 120b 1A08     		.2byte	0x81a
 15200 120d 7D110000 		.4byte	0x117d
 15201 1211 02       		.uleb128 0x2
 15202 1212 91       		.byte	0x91
 15203 1213 6C       		.sleb128 -20
 15204 1214 00       		.byte	0
 15205 1215 26       		.uleb128 0x26
 15206 1216 03080000 		.4byte	.LASF229
 15207 121a 01       		.byte	0x1
 15208 121b 2D08     		.2byte	0x82d
 15209 121d 00000000 		.4byte	.LFB86
 15210 1221 B8000000 		.4byte	.LFE86-.LFB86
 15211 1225 01       		.uleb128 0x1
 15212 1226 9C       		.byte	0x9c
 15213 1227 3B120000 		.4byte	0x123b
 15214 122b 1F       		.uleb128 0x1f
 15215 122c C10B0000 		.4byte	.LASF165
 15216 1230 01       		.byte	0x1
 15217 1231 3008     		.2byte	0x830
 15218 1233 C7000000 		.4byte	0xc7
 15219 1237 02       		.uleb128 0x2
 15220 1238 91       		.byte	0x91
 15221 1239 76       		.sleb128 -10
 15222 123a 00       		.byte	0
 15223 123b 27       		.uleb128 0x27
 15224 123c 790D0000 		.4byte	.LASF234
 15225 1240 01       		.byte	0x1
 15226 1241 4D08     		.2byte	0x84d
 15227 1243 00000000 		.4byte	.LFB87
 15228 1247 48000000 		.4byte	.LFE87-.LFB87
 15229 124b 01       		.uleb128 0x1
 15230 124c 9C       		.byte	0x9c
 15231 124d 22       		.uleb128 0x22
 15232 124e 39080000 		.4byte	.LASF230
 15233 1252 01       		.byte	0x1
 15234 1253 5B08     		.2byte	0x85b
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 340


 15235 1255 00000000 		.4byte	.LFB88
 15236 1259 34000000 		.4byte	.LFE88-.LFB88
 15237 125d 01       		.uleb128 0x1
 15238 125e 9C       		.byte	0x9c
 15239 125f 73120000 		.4byte	0x1273
 15240 1263 1F       		.uleb128 0x1f
 15241 1264 20040000 		.4byte	.LASF157
 15242 1268 01       		.byte	0x1
 15243 1269 5D08     		.2byte	0x85d
 15244 126b 98060000 		.4byte	0x698
 15245 126f 02       		.uleb128 0x2
 15246 1270 91       		.byte	0x91
 15247 1271 74       		.sleb128 -12
 15248 1272 00       		.byte	0
 15249 1273 22       		.uleb128 0x22
 15250 1274 C60A0000 		.4byte	.LASF231
 15251 1278 01       		.byte	0x1
 15252 1279 6D08     		.2byte	0x86d
 15253 127b 00000000 		.4byte	.LFB89
 15254 127f C0000000 		.4byte	.LFE89-.LFB89
 15255 1283 01       		.uleb128 0x1
 15256 1284 9C       		.byte	0x9c
 15257 1285 B7120000 		.4byte	0x12b7
 15258 1289 1F       		.uleb128 0x1f
 15259 128a CB040000 		.4byte	.LASF178
 15260 128e 01       		.byte	0x1
 15261 128f 6F08     		.2byte	0x86f
 15262 1291 97000000 		.4byte	0x97
 15263 1295 02       		.uleb128 0x2
 15264 1296 91       		.byte	0x91
 15265 1297 77       		.sleb128 -9
 15266 1298 1F       		.uleb128 0x1f
 15267 1299 C10B0000 		.4byte	.LASF165
 15268 129d 01       		.byte	0x1
 15269 129e 7008     		.2byte	0x870
 15270 12a0 C7000000 		.4byte	0xc7
 15271 12a4 02       		.uleb128 0x2
 15272 12a5 91       		.byte	0x91
 15273 12a6 74       		.sleb128 -12
 15274 12a7 1F       		.uleb128 0x1f
 15275 12a8 20040000 		.4byte	.LASF157
 15276 12ac 01       		.byte	0x1
 15277 12ad 7408     		.2byte	0x874
 15278 12af B7120000 		.4byte	0x12b7
 15279 12b3 02       		.uleb128 0x2
 15280 12b4 91       		.byte	0x91
 15281 12b5 68       		.sleb128 -24
 15282 12b6 00       		.byte	0
 15283 12b7 09       		.uleb128 0x9
 15284 12b8 97000000 		.4byte	0x97
 15285 12bc C7120000 		.4byte	0x12c7
 15286 12c0 0A       		.uleb128 0xa
 15287 12c1 18010000 		.4byte	0x118
 15288 12c5 0B       		.byte	0xb
 15289 12c6 00       		.byte	0
 15290 12c7 22       		.uleb128 0x22
 15291 12c8 41070000 		.4byte	.LASF232
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 341


 15292 12cc 01       		.byte	0x1
 15293 12cd 9208     		.2byte	0x892
 15294 12cf 00000000 		.4byte	.LFB90
 15295 12d3 60000000 		.4byte	.LFE90-.LFB90
 15296 12d7 01       		.uleb128 0x1
 15297 12d8 9C       		.byte	0x9c
 15298 12d9 FC120000 		.4byte	0x12fc
 15299 12dd 1F       		.uleb128 0x1f
 15300 12de 20040000 		.4byte	.LASF157
 15301 12e2 01       		.byte	0x1
 15302 12e3 9608     		.2byte	0x896
 15303 12e5 18070000 		.4byte	0x718
 15304 12e9 02       		.uleb128 0x2
 15305 12ea 91       		.byte	0x91
 15306 12eb 70       		.sleb128 -16
 15307 12ec 1F       		.uleb128 0x1f
 15308 12ed C10B0000 		.4byte	.LASF165
 15309 12f1 01       		.byte	0x1
 15310 12f2 9708     		.2byte	0x897
 15311 12f4 C7000000 		.4byte	0xc7
 15312 12f8 02       		.uleb128 0x2
 15313 12f9 91       		.byte	0x91
 15314 12fa 6E       		.sleb128 -18
 15315 12fb 00       		.byte	0
 15316 12fc 22       		.uleb128 0x22
 15317 12fd C20C0000 		.4byte	.LASF233
 15318 1301 01       		.byte	0x1
 15319 1302 AF08     		.2byte	0x8af
 15320 1304 00000000 		.4byte	.LFB91
 15321 1308 44000000 		.4byte	.LFE91-.LFB91
 15322 130c 01       		.uleb128 0x1
 15323 130d 9C       		.byte	0x9c
 15324 130e 31130000 		.4byte	0x1331
 15325 1312 1F       		.uleb128 0x1f
 15326 1313 20040000 		.4byte	.LASF157
 15327 1317 01       		.byte	0x1
 15328 1318 B308     		.2byte	0x8b3
 15329 131a 31130000 		.4byte	0x1331
 15330 131e 02       		.uleb128 0x2
 15331 131f 91       		.byte	0x91
 15332 1320 74       		.sleb128 -12
 15333 1321 1F       		.uleb128 0x1f
 15334 1322 C10B0000 		.4byte	.LASF165
 15335 1326 01       		.byte	0x1
 15336 1327 B408     		.2byte	0x8b4
 15337 1329 C7000000 		.4byte	0xc7
 15338 132d 02       		.uleb128 0x2
 15339 132e 91       		.byte	0x91
 15340 132f 72       		.sleb128 -14
 15341 1330 00       		.byte	0
 15342 1331 09       		.uleb128 0x9
 15343 1332 97000000 		.4byte	0x97
 15344 1336 41130000 		.4byte	0x1341
 15345 133a 0A       		.uleb128 0xa
 15346 133b 18010000 		.4byte	0x118
 15347 133f 03       		.byte	0x3
 15348 1340 00       		.byte	0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 342


 15349 1341 27       		.uleb128 0x27
 15350 1342 EA000000 		.4byte	.LASF235
 15351 1346 01       		.byte	0x1
 15352 1347 C608     		.2byte	0x8c6
 15353 1349 00000000 		.4byte	.LFB92
 15354 134d 34000000 		.4byte	.LFE92-.LFB92
 15355 1351 01       		.uleb128 0x1
 15356 1352 9C       		.byte	0x9c
 15357 1353 22       		.uleb128 0x22
 15358 1354 9C020000 		.4byte	.LASF236
 15359 1358 01       		.byte	0x1
 15360 1359 D408     		.2byte	0x8d4
 15361 135b 00000000 		.4byte	.LFB93
 15362 135f 20000000 		.4byte	.LFE93-.LFB93
 15363 1363 01       		.uleb128 0x1
 15364 1364 9C       		.byte	0x9c
 15365 1365 79130000 		.4byte	0x1379
 15366 1369 1F       		.uleb128 0x1f
 15367 136a 20040000 		.4byte	.LASF157
 15368 136e 01       		.byte	0x1
 15369 136f D608     		.2byte	0x8d6
 15370 1371 51100000 		.4byte	0x1051
 15371 1375 02       		.uleb128 0x2
 15372 1376 91       		.byte	0x91
 15373 1377 74       		.sleb128 -12
 15374 1378 00       		.byte	0
 15375 1379 22       		.uleb128 0x22
 15376 137a 41010000 		.4byte	.LASF237
 15377 137e 01       		.byte	0x1
 15378 137f E208     		.2byte	0x8e2
 15379 1381 00000000 		.4byte	.LFB94
 15380 1385 54000000 		.4byte	.LFE94-.LFB94
 15381 1389 01       		.uleb128 0x1
 15382 138a 9C       		.byte	0x9c
 15383 138b AE130000 		.4byte	0x13ae
 15384 138f 1F       		.uleb128 0x1f
 15385 1390 20040000 		.4byte	.LASF157
 15386 1394 01       		.byte	0x1
 15387 1395 E608     		.2byte	0x8e6
 15388 1397 18070000 		.4byte	0x718
 15389 139b 02       		.uleb128 0x2
 15390 139c 91       		.byte	0x91
 15391 139d 70       		.sleb128 -16
 15392 139e 1F       		.uleb128 0x1f
 15393 139f C10B0000 		.4byte	.LASF165
 15394 13a3 01       		.byte	0x1
 15395 13a4 E708     		.2byte	0x8e7
 15396 13a6 C7000000 		.4byte	0xc7
 15397 13aa 02       		.uleb128 0x2
 15398 13ab 91       		.byte	0x91
 15399 13ac 6E       		.sleb128 -18
 15400 13ad 00       		.byte	0
 15401 13ae 22       		.uleb128 0x22
 15402 13af 030B0000 		.4byte	.LASF238
 15403 13b3 01       		.byte	0x1
 15404 13b4 F908     		.2byte	0x8f9
 15405 13b6 00000000 		.4byte	.LFB95
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 343


 15406 13ba 30010000 		.4byte	.LFE95-.LFB95
 15407 13be 01       		.uleb128 0x1
 15408 13bf 9C       		.byte	0x9c
 15409 13c0 10140000 		.4byte	0x1410
 15410 13c4 1F       		.uleb128 0x1f
 15411 13c5 1F080000 		.4byte	.LASF239
 15412 13c9 01       		.byte	0x1
 15413 13ca FC08     		.2byte	0x8fc
 15414 13cc AF000000 		.4byte	0xaf
 15415 13d0 02       		.uleb128 0x2
 15416 13d1 91       		.byte	0x91
 15417 13d2 70       		.sleb128 -16
 15418 13d3 1F       		.uleb128 0x1f
 15419 13d4 600A0000 		.4byte	.LASF240
 15420 13d8 01       		.byte	0x1
 15421 13d9 FD08     		.2byte	0x8fd
 15422 13db EB000000 		.4byte	0xeb
 15423 13df 02       		.uleb128 0x2
 15424 13e0 91       		.byte	0x91
 15425 13e1 6C       		.sleb128 -20
 15426 13e2 1F       		.uleb128 0x1f
 15427 13e3 12010000 		.4byte	.LASF158
 15428 13e7 01       		.byte	0x1
 15429 13e8 FE08     		.2byte	0x8fe
 15430 13ea 97000000 		.4byte	0x97
 15431 13ee 02       		.uleb128 0x2
 15432 13ef 91       		.byte	0x91
 15433 13f0 77       		.sleb128 -9
 15434 13f1 1F       		.uleb128 0x1f
 15435 13f2 20040000 		.4byte	.LASF157
 15436 13f6 01       		.byte	0x1
 15437 13f7 FF08     		.2byte	0x8ff
 15438 13f9 51100000 		.4byte	0x1051
 15439 13fd 02       		.uleb128 0x2
 15440 13fe 91       		.byte	0x91
 15441 13ff 68       		.sleb128 -24
 15442 1400 1F       		.uleb128 0x1f
 15443 1401 B70A0000 		.4byte	.LASF209
 15444 1405 01       		.byte	0x1
 15445 1406 0009     		.2byte	0x900
 15446 1408 97000000 		.4byte	0x97
 15447 140c 02       		.uleb128 0x2
 15448 140d 91       		.byte	0x91
 15449 140e 6B       		.sleb128 -21
 15450 140f 00       		.byte	0
 15451 1410 22       		.uleb128 0x22
 15452 1411 CF010000 		.4byte	.LASF241
 15453 1415 01       		.byte	0x1
 15454 1416 2D09     		.2byte	0x92d
 15455 1418 00000000 		.4byte	.LFB96
 15456 141c 60000000 		.4byte	.LFE96-.LFB96
 15457 1420 01       		.uleb128 0x1
 15458 1421 9C       		.byte	0x9c
 15459 1422 45140000 		.4byte	0x1445
 15460 1426 1F       		.uleb128 0x1f
 15461 1427 20040000 		.4byte	.LASF157
 15462 142b 01       		.byte	0x1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 344


 15463 142c 2F09     		.2byte	0x92f
 15464 142e 18070000 		.4byte	0x718
 15465 1432 02       		.uleb128 0x2
 15466 1433 91       		.byte	0x91
 15467 1434 70       		.sleb128 -16
 15468 1435 1F       		.uleb128 0x1f
 15469 1436 C10B0000 		.4byte	.LASF165
 15470 143a 01       		.byte	0x1
 15471 143b 3009     		.2byte	0x930
 15472 143d C7000000 		.4byte	0xc7
 15473 1441 02       		.uleb128 0x2
 15474 1442 91       		.byte	0x91
 15475 1443 6E       		.sleb128 -18
 15476 1444 00       		.byte	0
 15477 1445 22       		.uleb128 0x22
 15478 1446 7D010000 		.4byte	.LASF242
 15479 144a 01       		.byte	0x1
 15480 144b 4609     		.2byte	0x946
 15481 144d 00000000 		.4byte	.LFB97
 15482 1451 90050000 		.4byte	.LFE97-.LFB97
 15483 1455 01       		.uleb128 0x1
 15484 1456 9C       		.byte	0x9c
 15485 1457 D2140000 		.4byte	0x14d2
 15486 145b 1F       		.uleb128 0x1f
 15487 145c 070D0000 		.4byte	.LASF243
 15488 1460 01       		.byte	0x1
 15489 1461 4909     		.2byte	0x949
 15490 1463 97000000 		.4byte	0x97
 15491 1467 02       		.uleb128 0x2
 15492 1468 91       		.byte	0x91
 15493 1469 6F       		.sleb128 -17
 15494 146a 23       		.uleb128 0x23
 15495 146b 6300     		.ascii	"c\000"
 15496 146d 01       		.byte	0x1
 15497 146e 4A09     		.2byte	0x94a
 15498 1470 97000000 		.4byte	0x97
 15499 1474 02       		.uleb128 0x2
 15500 1475 91       		.byte	0x91
 15501 1476 6E       		.sleb128 -18
 15502 1477 23       		.uleb128 0x23
 15503 1478 6B00     		.ascii	"k\000"
 15504 147a 01       		.byte	0x1
 15505 147b 4B09     		.2byte	0x94b
 15506 147d 97000000 		.4byte	0x97
 15507 1481 02       		.uleb128 0x2
 15508 1482 91       		.byte	0x91
 15509 1483 6D       		.sleb128 -19
 15510 1484 1F       		.uleb128 0x1f
 15511 1485 1F000000 		.4byte	.LASF244
 15512 1489 01       		.byte	0x1
 15513 148a 4C09     		.2byte	0x94c
 15514 148c 97000000 		.4byte	0x97
 15515 1490 02       		.uleb128 0x2
 15516 1491 91       		.byte	0x91
 15517 1492 6C       		.sleb128 -20
 15518 1493 1F       		.uleb128 0x1f
 15519 1494 C10B0000 		.4byte	.LASF165
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 345


 15520 1498 01       		.byte	0x1
 15521 1499 4D09     		.2byte	0x94d
 15522 149b C7000000 		.4byte	0xc7
 15523 149f 02       		.uleb128 0x2
 15524 14a0 91       		.byte	0x91
 15525 14a1 6A       		.sleb128 -22
 15526 14a2 1F       		.uleb128 0x1f
 15527 14a3 8D0C0000 		.4byte	.LASF164
 15528 14a7 01       		.byte	0x1
 15529 14a8 4E09     		.2byte	0x94e
 15530 14aa EB000000 		.4byte	0xeb
 15531 14ae 02       		.uleb128 0x2
 15532 14af 91       		.byte	0x91
 15533 14b0 64       		.sleb128 -28
 15534 14b1 1F       		.uleb128 0x1f
 15535 14b2 20040000 		.4byte	.LASF157
 15536 14b6 01       		.byte	0x1
 15537 14b7 5109     		.2byte	0x951
 15538 14b9 D2140000 		.4byte	0x14d2
 15539 14bd 03       		.uleb128 0x3
 15540 14be 91       		.byte	0x91
 15541 14bf 847D     		.sleb128 -380
 15542 14c1 1F       		.uleb128 0x1f
 15543 14c2 13060000 		.4byte	.LASF245
 15544 14c6 01       		.byte	0x1
 15545 14c7 5209     		.2byte	0x952
 15546 14c9 E8060000 		.4byte	0x6e8
 15547 14cd 03       		.uleb128 0x3
 15548 14ce 91       		.byte	0x91
 15549 14cf EC7C     		.sleb128 -404
 15550 14d1 00       		.byte	0
 15551 14d2 09       		.uleb128 0x9
 15552 14d3 97000000 		.4byte	0x97
 15553 14d7 E3140000 		.4byte	0x14e3
 15554 14db 20       		.uleb128 0x20
 15555 14dc 18010000 		.4byte	0x118
 15556 14e0 5D01     		.2byte	0x15d
 15557 14e2 00       		.byte	0
 15558 14e3 28       		.uleb128 0x28
 15559 14e4 F20B0000 		.4byte	.LASF246
 15560 14e8 08       		.byte	0x8
 15561 14e9 1207     		.2byte	0x712
 15562 14eb EF140000 		.4byte	0x14ef
 15563 14ef 06       		.uleb128 0x6
 15564 14f0 81000000 		.4byte	0x81
 15565 14f4 28       		.uleb128 0x28
 15566 14f5 400D0000 		.4byte	.LASF247
 15567 14f9 07       		.byte	0x7
 15568 14fa 4101     		.2byte	0x141
 15569 14fc C0020000 		.4byte	0x2c0
 15570 1500 28       		.uleb128 0x28
 15571 1501 0B030000 		.4byte	.LASF248
 15572 1505 07       		.byte	0x7
 15573 1506 4101     		.2byte	0x141
 15574 1508 C0020000 		.4byte	0x2c0
 15575 150c 28       		.uleb128 0x28
 15576 150d 06090000 		.4byte	.LASF249
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 346


 15577 1511 07       		.byte	0x7
 15578 1512 4101     		.2byte	0x141
 15579 1514 C0020000 		.4byte	0x2c0
 15580 1518 28       		.uleb128 0x28
 15581 1519 A6040000 		.4byte	.LASF250
 15582 151d 07       		.byte	0x7
 15583 151e 4201     		.2byte	0x142
 15584 1520 FD020000 		.4byte	0x2fd
 15585 1524 28       		.uleb128 0x28
 15586 1525 610D0000 		.4byte	.LASF251
 15587 1529 07       		.byte	0x7
 15588 152a 4201     		.2byte	0x142
 15589 152c FD020000 		.4byte	0x2fd
 15590 1530 28       		.uleb128 0x28
 15591 1531 51000000 		.4byte	.LASF252
 15592 1535 07       		.byte	0x7
 15593 1536 4301     		.2byte	0x143
 15594 1538 8E030000 		.4byte	0x38e
 15595 153c 28       		.uleb128 0x28
 15596 153d 140B0000 		.4byte	.LASF253
 15597 1541 07       		.byte	0x7
 15598 1542 4401     		.2byte	0x144
 15599 1544 DB030000 		.4byte	0x3db
 15600 1548 28       		.uleb128 0x28
 15601 1549 AF070000 		.4byte	.LASF254
 15602 154d 07       		.byte	0x7
 15603 154e 4401     		.2byte	0x144
 15604 1550 DB030000 		.4byte	0x3db
 15605 1554 28       		.uleb128 0x28
 15606 1555 FB060000 		.4byte	.LASF255
 15607 1559 07       		.byte	0x7
 15608 155a 4501     		.2byte	0x145
 15609 155c CA070000 		.4byte	0x7ca
 15610 1560 28       		.uleb128 0x28
 15611 1561 1D020000 		.4byte	.LASF256
 15612 1565 07       		.byte	0x7
 15613 1566 4A01     		.2byte	0x14a
 15614 1568 AF000000 		.4byte	0xaf
 15615 156c 28       		.uleb128 0x28
 15616 156d 220A0000 		.4byte	.LASF257
 15617 1571 07       		.byte	0x7
 15618 1572 4B01     		.2byte	0x14b
 15619 1574 AF000000 		.4byte	0xaf
 15620 1578 28       		.uleb128 0x28
 15621 1579 540A0000 		.4byte	.LASF258
 15622 157d 07       		.byte	0x7
 15623 157e 4E01     		.2byte	0x14e
 15624 1580 D3000000 		.4byte	0xd3
 15625 1584 28       		.uleb128 0x28
 15626 1585 760C0000 		.4byte	.LASF259
 15627 1589 07       		.byte	0x7
 15628 158a 4F01     		.2byte	0x14f
 15629 158c 97000000 		.4byte	0x97
 15630 1590 28       		.uleb128 0x28
 15631 1591 36040000 		.4byte	.LASF260
 15632 1595 07       		.byte	0x7
 15633 1596 5101     		.2byte	0x151
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 347


 15634 1598 D3000000 		.4byte	0xd3
 15635 159c 28       		.uleb128 0x28
 15636 159d 120C0000 		.4byte	.LASF261
 15637 15a1 07       		.byte	0x7
 15638 15a2 5201     		.2byte	0x152
 15639 15a4 D3000000 		.4byte	0xd3
 15640 15a8 28       		.uleb128 0x28
 15641 15a9 83070000 		.4byte	.LASF262
 15642 15ad 07       		.byte	0x7
 15643 15ae 5A01     		.2byte	0x15a
 15644 15b0 97000000 		.4byte	0x97
 15645 15b4 28       		.uleb128 0x28
 15646 15b5 670B0000 		.4byte	.LASF263
 15647 15b9 07       		.byte	0x7
 15648 15ba 7501     		.2byte	0x175
 15649 15bc 97000000 		.4byte	0x97
 15650 15c0 28       		.uleb128 0x28
 15651 15c1 970C0000 		.4byte	.LASF264
 15652 15c5 07       		.byte	0x7
 15653 15c6 7601     		.2byte	0x176
 15654 15c8 98060000 		.4byte	0x698
 15655 15cc 28       		.uleb128 0x28
 15656 15cd E30B0000 		.4byte	.LASF265
 15657 15d1 07       		.byte	0x7
 15658 15d2 7701     		.2byte	0x177
 15659 15d4 73000000 		.4byte	0x73
 15660 15d8 09       		.uleb128 0x9
 15661 15d9 73000000 		.4byte	0x73
 15662 15dd E8150000 		.4byte	0x15e8
 15663 15e1 0A       		.uleb128 0xa
 15664 15e2 18010000 		.4byte	0x118
 15665 15e6 02       		.byte	0x2
 15666 15e7 00       		.byte	0
 15667 15e8 28       		.uleb128 0x28
 15668 15e9 D6020000 		.4byte	.LASF266
 15669 15ed 07       		.byte	0x7
 15670 15ee 7801     		.2byte	0x178
 15671 15f0 D8150000 		.4byte	0x15d8
 15672 15f4 09       		.uleb128 0x9
 15673 15f5 4E070000 		.4byte	0x74e
 15674 15f9 04160000 		.4byte	0x1604
 15675 15fd 0A       		.uleb128 0xa
 15676 15fe 18010000 		.4byte	0x118
 15677 1602 02       		.byte	0x2
 15678 1603 00       		.byte	0
 15679 1604 28       		.uleb128 0x28
 15680 1605 E4040000 		.4byte	.LASF267
 15681 1609 07       		.byte	0x7
 15682 160a 7901     		.2byte	0x179
 15683 160c F4150000 		.4byte	0x15f4
 15684 1610 09       		.uleb128 0x9
 15685 1611 97000000 		.4byte	0x97
 15686 1615 26160000 		.4byte	0x1626
 15687 1619 0A       		.uleb128 0xa
 15688 161a 18010000 		.4byte	0x118
 15689 161e 02       		.byte	0x2
 15690 161f 0A       		.uleb128 0xa
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 348


 15691 1620 18010000 		.4byte	0x118
 15692 1624 02       		.byte	0x2
 15693 1625 00       		.byte	0
 15694 1626 28       		.uleb128 0x28
 15695 1627 E0070000 		.4byte	.LASF268
 15696 162b 07       		.byte	0x7
 15697 162c 7E01     		.2byte	0x17e
 15698 162e 10160000 		.4byte	0x1610
 15699 1632 29       		.uleb128 0x29
 15700 1633 CB0B0000 		.4byte	.LASF269
 15701 1637 01       		.byte	0x1
 15702 1638 38       		.byte	0x38
 15703 1639 43160000 		.4byte	0x1643
 15704 163d 05       		.uleb128 0x5
 15705 163e 03       		.byte	0x3
 15706 163f 00000000 		.4byte	EEPROM_ADDR
 15707 1643 07       		.uleb128 0x7
 15708 1644 04       		.byte	0x4
 15709 1645 00010000 		.4byte	0x100
 15710 1649 00       		.byte	0
 15711              		.section	.debug_abbrev,"",%progbits
 15712              	.Ldebug_abbrev0:
 15713 0000 01       		.uleb128 0x1
 15714 0001 11       		.uleb128 0x11
 15715 0002 01       		.byte	0x1
 15716 0003 25       		.uleb128 0x25
 15717 0004 0E       		.uleb128 0xe
 15718 0005 13       		.uleb128 0x13
 15719 0006 0B       		.uleb128 0xb
 15720 0007 03       		.uleb128 0x3
 15721 0008 0E       		.uleb128 0xe
 15722 0009 1B       		.uleb128 0x1b
 15723 000a 0E       		.uleb128 0xe
 15724 000b 55       		.uleb128 0x55
 15725 000c 17       		.uleb128 0x17
 15726 000d 11       		.uleb128 0x11
 15727 000e 01       		.uleb128 0x1
 15728 000f 10       		.uleb128 0x10
 15729 0010 17       		.uleb128 0x17
 15730 0011 00       		.byte	0
 15731 0012 00       		.byte	0
 15732 0013 02       		.uleb128 0x2
 15733 0014 24       		.uleb128 0x24
 15734 0015 00       		.byte	0
 15735 0016 0B       		.uleb128 0xb
 15736 0017 0B       		.uleb128 0xb
 15737 0018 3E       		.uleb128 0x3e
 15738 0019 0B       		.uleb128 0xb
 15739 001a 03       		.uleb128 0x3
 15740 001b 0E       		.uleb128 0xe
 15741 001c 00       		.byte	0
 15742 001d 00       		.byte	0
 15743 001e 03       		.uleb128 0x3
 15744 001f 16       		.uleb128 0x16
 15745 0020 00       		.byte	0
 15746 0021 03       		.uleb128 0x3
 15747 0022 0E       		.uleb128 0xe
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 349


 15748 0023 3A       		.uleb128 0x3a
 15749 0024 0B       		.uleb128 0xb
 15750 0025 3B       		.uleb128 0x3b
 15751 0026 0B       		.uleb128 0xb
 15752 0027 49       		.uleb128 0x49
 15753 0028 13       		.uleb128 0x13
 15754 0029 00       		.byte	0
 15755 002a 00       		.byte	0
 15756 002b 04       		.uleb128 0x4
 15757 002c 24       		.uleb128 0x24
 15758 002d 00       		.byte	0
 15759 002e 0B       		.uleb128 0xb
 15760 002f 0B       		.uleb128 0xb
 15761 0030 3E       		.uleb128 0x3e
 15762 0031 0B       		.uleb128 0xb
 15763 0032 03       		.uleb128 0x3
 15764 0033 08       		.uleb128 0x8
 15765 0034 00       		.byte	0
 15766 0035 00       		.byte	0
 15767 0036 05       		.uleb128 0x5
 15768 0037 16       		.uleb128 0x16
 15769 0038 00       		.byte	0
 15770 0039 03       		.uleb128 0x3
 15771 003a 0E       		.uleb128 0xe
 15772 003b 3A       		.uleb128 0x3a
 15773 003c 0B       		.uleb128 0xb
 15774 003d 3B       		.uleb128 0x3b
 15775 003e 05       		.uleb128 0x5
 15776 003f 49       		.uleb128 0x49
 15777 0040 13       		.uleb128 0x13
 15778 0041 00       		.byte	0
 15779 0042 00       		.byte	0
 15780 0043 06       		.uleb128 0x6
 15781 0044 35       		.uleb128 0x35
 15782 0045 00       		.byte	0
 15783 0046 49       		.uleb128 0x49
 15784 0047 13       		.uleb128 0x13
 15785 0048 00       		.byte	0
 15786 0049 00       		.byte	0
 15787 004a 07       		.uleb128 0x7
 15788 004b 0F       		.uleb128 0xf
 15789 004c 00       		.byte	0
 15790 004d 0B       		.uleb128 0xb
 15791 004e 0B       		.uleb128 0xb
 15792 004f 49       		.uleb128 0x49
 15793 0050 13       		.uleb128 0x13
 15794 0051 00       		.byte	0
 15795 0052 00       		.byte	0
 15796 0053 08       		.uleb128 0x8
 15797 0054 26       		.uleb128 0x26
 15798 0055 00       		.byte	0
 15799 0056 49       		.uleb128 0x49
 15800 0057 13       		.uleb128 0x13
 15801 0058 00       		.byte	0
 15802 0059 00       		.byte	0
 15803 005a 09       		.uleb128 0x9
 15804 005b 01       		.uleb128 0x1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 350


 15805 005c 01       		.byte	0x1
 15806 005d 49       		.uleb128 0x49
 15807 005e 13       		.uleb128 0x13
 15808 005f 01       		.uleb128 0x1
 15809 0060 13       		.uleb128 0x13
 15810 0061 00       		.byte	0
 15811 0062 00       		.byte	0
 15812 0063 0A       		.uleb128 0xa
 15813 0064 21       		.uleb128 0x21
 15814 0065 00       		.byte	0
 15815 0066 49       		.uleb128 0x49
 15816 0067 13       		.uleb128 0x13
 15817 0068 2F       		.uleb128 0x2f
 15818 0069 0B       		.uleb128 0xb
 15819 006a 00       		.byte	0
 15820 006b 00       		.byte	0
 15821 006c 0B       		.uleb128 0xb
 15822 006d 04       		.uleb128 0x4
 15823 006e 01       		.byte	0x1
 15824 006f 03       		.uleb128 0x3
 15825 0070 0E       		.uleb128 0xe
 15826 0071 0B       		.uleb128 0xb
 15827 0072 0B       		.uleb128 0xb
 15828 0073 49       		.uleb128 0x49
 15829 0074 13       		.uleb128 0x13
 15830 0075 3A       		.uleb128 0x3a
 15831 0076 0B       		.uleb128 0xb
 15832 0077 3B       		.uleb128 0x3b
 15833 0078 0B       		.uleb128 0xb
 15834 0079 01       		.uleb128 0x1
 15835 007a 13       		.uleb128 0x13
 15836 007b 00       		.byte	0
 15837 007c 00       		.byte	0
 15838 007d 0C       		.uleb128 0xc
 15839 007e 28       		.uleb128 0x28
 15840 007f 00       		.byte	0
 15841 0080 03       		.uleb128 0x3
 15842 0081 0E       		.uleb128 0xe
 15843 0082 1C       		.uleb128 0x1c
 15844 0083 0B       		.uleb128 0xb
 15845 0084 00       		.byte	0
 15846 0085 00       		.byte	0
 15847 0086 0D       		.uleb128 0xd
 15848 0087 13       		.uleb128 0x13
 15849 0088 01       		.byte	0x1
 15850 0089 03       		.uleb128 0x3
 15851 008a 0E       		.uleb128 0xe
 15852 008b 0B       		.uleb128 0xb
 15853 008c 0B       		.uleb128 0xb
 15854 008d 3A       		.uleb128 0x3a
 15855 008e 0B       		.uleb128 0xb
 15856 008f 3B       		.uleb128 0x3b
 15857 0090 0B       		.uleb128 0xb
 15858 0091 01       		.uleb128 0x1
 15859 0092 13       		.uleb128 0x13
 15860 0093 00       		.byte	0
 15861 0094 00       		.byte	0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 351


 15862 0095 0E       		.uleb128 0xe
 15863 0096 0D       		.uleb128 0xd
 15864 0097 00       		.byte	0
 15865 0098 03       		.uleb128 0x3
 15866 0099 08       		.uleb128 0x8
 15867 009a 3A       		.uleb128 0x3a
 15868 009b 0B       		.uleb128 0xb
 15869 009c 3B       		.uleb128 0x3b
 15870 009d 0B       		.uleb128 0xb
 15871 009e 49       		.uleb128 0x49
 15872 009f 13       		.uleb128 0x13
 15873 00a0 38       		.uleb128 0x38
 15874 00a1 0B       		.uleb128 0xb
 15875 00a2 00       		.byte	0
 15876 00a3 00       		.byte	0
 15877 00a4 0F       		.uleb128 0xf
 15878 00a5 0D       		.uleb128 0xd
 15879 00a6 00       		.byte	0
 15880 00a7 03       		.uleb128 0x3
 15881 00a8 0E       		.uleb128 0xe
 15882 00a9 3A       		.uleb128 0x3a
 15883 00aa 0B       		.uleb128 0xb
 15884 00ab 3B       		.uleb128 0x3b
 15885 00ac 0B       		.uleb128 0xb
 15886 00ad 49       		.uleb128 0x49
 15887 00ae 13       		.uleb128 0x13
 15888 00af 38       		.uleb128 0x38
 15889 00b0 0B       		.uleb128 0xb
 15890 00b1 00       		.byte	0
 15891 00b2 00       		.byte	0
 15892 00b3 10       		.uleb128 0x10
 15893 00b4 13       		.uleb128 0x13
 15894 00b5 01       		.byte	0x1
 15895 00b6 03       		.uleb128 0x3
 15896 00b7 0E       		.uleb128 0xe
 15897 00b8 0B       		.uleb128 0xb
 15898 00b9 05       		.uleb128 0x5
 15899 00ba 3A       		.uleb128 0x3a
 15900 00bb 0B       		.uleb128 0xb
 15901 00bc 3B       		.uleb128 0x3b
 15902 00bd 0B       		.uleb128 0xb
 15903 00be 01       		.uleb128 0x1
 15904 00bf 13       		.uleb128 0x13
 15905 00c0 00       		.byte	0
 15906 00c1 00       		.byte	0
 15907 00c2 11       		.uleb128 0x11
 15908 00c3 0D       		.uleb128 0xd
 15909 00c4 00       		.byte	0
 15910 00c5 03       		.uleb128 0x3
 15911 00c6 0E       		.uleb128 0xe
 15912 00c7 3A       		.uleb128 0x3a
 15913 00c8 0B       		.uleb128 0xb
 15914 00c9 3B       		.uleb128 0x3b
 15915 00ca 05       		.uleb128 0x5
 15916 00cb 49       		.uleb128 0x49
 15917 00cc 13       		.uleb128 0x13
 15918 00cd 38       		.uleb128 0x38
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 352


 15919 00ce 05       		.uleb128 0x5
 15920 00cf 00       		.byte	0
 15921 00d0 00       		.byte	0
 15922 00d1 12       		.uleb128 0x12
 15923 00d2 13       		.uleb128 0x13
 15924 00d3 01       		.byte	0x1
 15925 00d4 03       		.uleb128 0x3
 15926 00d5 0E       		.uleb128 0xe
 15927 00d6 0B       		.uleb128 0xb
 15928 00d7 0B       		.uleb128 0xb
 15929 00d8 3A       		.uleb128 0x3a
 15930 00d9 0B       		.uleb128 0xb
 15931 00da 3B       		.uleb128 0x3b
 15932 00db 05       		.uleb128 0x5
 15933 00dc 01       		.uleb128 0x1
 15934 00dd 13       		.uleb128 0x13
 15935 00de 00       		.byte	0
 15936 00df 00       		.byte	0
 15937 00e0 13       		.uleb128 0x13
 15938 00e1 0D       		.uleb128 0xd
 15939 00e2 00       		.byte	0
 15940 00e3 03       		.uleb128 0x3
 15941 00e4 0E       		.uleb128 0xe
 15942 00e5 3A       		.uleb128 0x3a
 15943 00e6 0B       		.uleb128 0xb
 15944 00e7 3B       		.uleb128 0x3b
 15945 00e8 05       		.uleb128 0x5
 15946 00e9 49       		.uleb128 0x49
 15947 00ea 13       		.uleb128 0x13
 15948 00eb 38       		.uleb128 0x38
 15949 00ec 0B       		.uleb128 0xb
 15950 00ed 00       		.byte	0
 15951 00ee 00       		.byte	0
 15952 00ef 14       		.uleb128 0x14
 15953 00f0 2E       		.uleb128 0x2e
 15954 00f1 01       		.byte	0x1
 15955 00f2 03       		.uleb128 0x3
 15956 00f3 0E       		.uleb128 0xe
 15957 00f4 3A       		.uleb128 0x3a
 15958 00f5 0B       		.uleb128 0xb
 15959 00f6 3B       		.uleb128 0x3b
 15960 00f7 05       		.uleb128 0x5
 15961 00f8 27       		.uleb128 0x27
 15962 00f9 19       		.uleb128 0x19
 15963 00fa 49       		.uleb128 0x49
 15964 00fb 13       		.uleb128 0x13
 15965 00fc 20       		.uleb128 0x20
 15966 00fd 0B       		.uleb128 0xb
 15967 00fe 01       		.uleb128 0x1
 15968 00ff 13       		.uleb128 0x13
 15969 0100 00       		.byte	0
 15970 0101 00       		.byte	0
 15971 0102 15       		.uleb128 0x15
 15972 0103 05       		.uleb128 0x5
 15973 0104 00       		.byte	0
 15974 0105 03       		.uleb128 0x3
 15975 0106 0E       		.uleb128 0xe
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 353


 15976 0107 3A       		.uleb128 0x3a
 15977 0108 0B       		.uleb128 0xb
 15978 0109 3B       		.uleb128 0x3b
 15979 010a 05       		.uleb128 0x5
 15980 010b 49       		.uleb128 0x49
 15981 010c 13       		.uleb128 0x13
 15982 010d 00       		.byte	0
 15983 010e 00       		.byte	0
 15984 010f 16       		.uleb128 0x16
 15985 0110 34       		.uleb128 0x34
 15986 0111 00       		.byte	0
 15987 0112 03       		.uleb128 0x3
 15988 0113 0E       		.uleb128 0xe
 15989 0114 3A       		.uleb128 0x3a
 15990 0115 0B       		.uleb128 0xb
 15991 0116 3B       		.uleb128 0x3b
 15992 0117 05       		.uleb128 0x5
 15993 0118 49       		.uleb128 0x49
 15994 0119 13       		.uleb128 0x13
 15995 011a 00       		.byte	0
 15996 011b 00       		.byte	0
 15997 011c 17       		.uleb128 0x17
 15998 011d 2E       		.uleb128 0x2e
 15999 011e 01       		.byte	0x1
 16000 011f 3F       		.uleb128 0x3f
 16001 0120 19       		.uleb128 0x19
 16002 0121 03       		.uleb128 0x3
 16003 0122 0E       		.uleb128 0xe
 16004 0123 3A       		.uleb128 0x3a
 16005 0124 0B       		.uleb128 0xb
 16006 0125 3B       		.uleb128 0x3b
 16007 0126 0B       		.uleb128 0xb
 16008 0127 27       		.uleb128 0x27
 16009 0128 19       		.uleb128 0x19
 16010 0129 11       		.uleb128 0x11
 16011 012a 01       		.uleb128 0x1
 16012 012b 12       		.uleb128 0x12
 16013 012c 06       		.uleb128 0x6
 16014 012d 40       		.uleb128 0x40
 16015 012e 18       		.uleb128 0x18
 16016 012f 9642     		.uleb128 0x2116
 16017 0131 19       		.uleb128 0x19
 16018 0132 01       		.uleb128 0x1
 16019 0133 13       		.uleb128 0x13
 16020 0134 00       		.byte	0
 16021 0135 00       		.byte	0
 16022 0136 18       		.uleb128 0x18
 16023 0137 34       		.uleb128 0x34
 16024 0138 00       		.byte	0
 16025 0139 03       		.uleb128 0x3
 16026 013a 0E       		.uleb128 0xe
 16027 013b 3A       		.uleb128 0x3a
 16028 013c 0B       		.uleb128 0xb
 16029 013d 3B       		.uleb128 0x3b
 16030 013e 0B       		.uleb128 0xb
 16031 013f 49       		.uleb128 0x49
 16032 0140 13       		.uleb128 0x13
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 354


 16033 0141 02       		.uleb128 0x2
 16034 0142 18       		.uleb128 0x18
 16035 0143 00       		.byte	0
 16036 0144 00       		.byte	0
 16037 0145 19       		.uleb128 0x19
 16038 0146 1D       		.uleb128 0x1d
 16039 0147 01       		.byte	0x1
 16040 0148 31       		.uleb128 0x31
 16041 0149 13       		.uleb128 0x13
 16042 014a 11       		.uleb128 0x11
 16043 014b 01       		.uleb128 0x1
 16044 014c 12       		.uleb128 0x12
 16045 014d 06       		.uleb128 0x6
 16046 014e 58       		.uleb128 0x58
 16047 014f 0B       		.uleb128 0xb
 16048 0150 59       		.uleb128 0x59
 16049 0151 0B       		.uleb128 0xb
 16050 0152 01       		.uleb128 0x1
 16051 0153 13       		.uleb128 0x13
 16052 0154 00       		.byte	0
 16053 0155 00       		.byte	0
 16054 0156 1A       		.uleb128 0x1a
 16055 0157 05       		.uleb128 0x5
 16056 0158 00       		.byte	0
 16057 0159 31       		.uleb128 0x31
 16058 015a 13       		.uleb128 0x13
 16059 015b 02       		.uleb128 0x2
 16060 015c 18       		.uleb128 0x18
 16061 015d 00       		.byte	0
 16062 015e 00       		.byte	0
 16063 015f 1B       		.uleb128 0x1b
 16064 0160 0B       		.uleb128 0xb
 16065 0161 01       		.byte	0x1
 16066 0162 11       		.uleb128 0x11
 16067 0163 01       		.uleb128 0x1
 16068 0164 12       		.uleb128 0x12
 16069 0165 06       		.uleb128 0x6
 16070 0166 00       		.byte	0
 16071 0167 00       		.byte	0
 16072 0168 1C       		.uleb128 0x1c
 16073 0169 34       		.uleb128 0x34
 16074 016a 00       		.byte	0
 16075 016b 31       		.uleb128 0x31
 16076 016c 13       		.uleb128 0x13
 16077 016d 02       		.uleb128 0x2
 16078 016e 18       		.uleb128 0x18
 16079 016f 00       		.byte	0
 16080 0170 00       		.byte	0
 16081 0171 1D       		.uleb128 0x1d
 16082 0172 1D       		.uleb128 0x1d
 16083 0173 01       		.byte	0x1
 16084 0174 31       		.uleb128 0x31
 16085 0175 13       		.uleb128 0x13
 16086 0176 11       		.uleb128 0x11
 16087 0177 01       		.uleb128 0x1
 16088 0178 12       		.uleb128 0x12
 16089 0179 06       		.uleb128 0x6
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 355


 16090 017a 58       		.uleb128 0x58
 16091 017b 0B       		.uleb128 0xb
 16092 017c 59       		.uleb128 0x59
 16093 017d 0B       		.uleb128 0xb
 16094 017e 00       		.byte	0
 16095 017f 00       		.byte	0
 16096 0180 1E       		.uleb128 0x1e
 16097 0181 2E       		.uleb128 0x2e
 16098 0182 01       		.byte	0x1
 16099 0183 3F       		.uleb128 0x3f
 16100 0184 19       		.uleb128 0x19
 16101 0185 03       		.uleb128 0x3
 16102 0186 0E       		.uleb128 0xe
 16103 0187 3A       		.uleb128 0x3a
 16104 0188 0B       		.uleb128 0xb
 16105 0189 3B       		.uleb128 0x3b
 16106 018a 05       		.uleb128 0x5
 16107 018b 27       		.uleb128 0x27
 16108 018c 19       		.uleb128 0x19
 16109 018d 11       		.uleb128 0x11
 16110 018e 01       		.uleb128 0x1
 16111 018f 12       		.uleb128 0x12
 16112 0190 06       		.uleb128 0x6
 16113 0191 40       		.uleb128 0x40
 16114 0192 18       		.uleb128 0x18
 16115 0193 9642     		.uleb128 0x2116
 16116 0195 19       		.uleb128 0x19
 16117 0196 01       		.uleb128 0x1
 16118 0197 13       		.uleb128 0x13
 16119 0198 00       		.byte	0
 16120 0199 00       		.byte	0
 16121 019a 1F       		.uleb128 0x1f
 16122 019b 34       		.uleb128 0x34
 16123 019c 00       		.byte	0
 16124 019d 03       		.uleb128 0x3
 16125 019e 0E       		.uleb128 0xe
 16126 019f 3A       		.uleb128 0x3a
 16127 01a0 0B       		.uleb128 0xb
 16128 01a1 3B       		.uleb128 0x3b
 16129 01a2 05       		.uleb128 0x5
 16130 01a3 49       		.uleb128 0x49
 16131 01a4 13       		.uleb128 0x13
 16132 01a5 02       		.uleb128 0x2
 16133 01a6 18       		.uleb128 0x18
 16134 01a7 00       		.byte	0
 16135 01a8 00       		.byte	0
 16136 01a9 20       		.uleb128 0x20
 16137 01aa 21       		.uleb128 0x21
 16138 01ab 00       		.byte	0
 16139 01ac 49       		.uleb128 0x49
 16140 01ad 13       		.uleb128 0x13
 16141 01ae 2F       		.uleb128 0x2f
 16142 01af 05       		.uleb128 0x5
 16143 01b0 00       		.byte	0
 16144 01b1 00       		.byte	0
 16145 01b2 21       		.uleb128 0x21
 16146 01b3 05       		.uleb128 0x5
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 356


 16147 01b4 00       		.byte	0
 16148 01b5 03       		.uleb128 0x3
 16149 01b6 0E       		.uleb128 0xe
 16150 01b7 3A       		.uleb128 0x3a
 16151 01b8 0B       		.uleb128 0xb
 16152 01b9 3B       		.uleb128 0x3b
 16153 01ba 05       		.uleb128 0x5
 16154 01bb 49       		.uleb128 0x49
 16155 01bc 13       		.uleb128 0x13
 16156 01bd 02       		.uleb128 0x2
 16157 01be 18       		.uleb128 0x18
 16158 01bf 00       		.byte	0
 16159 01c0 00       		.byte	0
 16160 01c1 22       		.uleb128 0x22
 16161 01c2 2E       		.uleb128 0x2e
 16162 01c3 01       		.byte	0x1
 16163 01c4 3F       		.uleb128 0x3f
 16164 01c5 19       		.uleb128 0x19
 16165 01c6 03       		.uleb128 0x3
 16166 01c7 0E       		.uleb128 0xe
 16167 01c8 3A       		.uleb128 0x3a
 16168 01c9 0B       		.uleb128 0xb
 16169 01ca 3B       		.uleb128 0x3b
 16170 01cb 05       		.uleb128 0x5
 16171 01cc 11       		.uleb128 0x11
 16172 01cd 01       		.uleb128 0x1
 16173 01ce 12       		.uleb128 0x12
 16174 01cf 06       		.uleb128 0x6
 16175 01d0 40       		.uleb128 0x40
 16176 01d1 18       		.uleb128 0x18
 16177 01d2 9642     		.uleb128 0x2116
 16178 01d4 19       		.uleb128 0x19
 16179 01d5 01       		.uleb128 0x1
 16180 01d6 13       		.uleb128 0x13
 16181 01d7 00       		.byte	0
 16182 01d8 00       		.byte	0
 16183 01d9 23       		.uleb128 0x23
 16184 01da 34       		.uleb128 0x34
 16185 01db 00       		.byte	0
 16186 01dc 03       		.uleb128 0x3
 16187 01dd 08       		.uleb128 0x8
 16188 01de 3A       		.uleb128 0x3a
 16189 01df 0B       		.uleb128 0xb
 16190 01e0 3B       		.uleb128 0x3b
 16191 01e1 05       		.uleb128 0x5
 16192 01e2 49       		.uleb128 0x49
 16193 01e3 13       		.uleb128 0x13
 16194 01e4 02       		.uleb128 0x2
 16195 01e5 18       		.uleb128 0x18
 16196 01e6 00       		.byte	0
 16197 01e7 00       		.byte	0
 16198 01e8 24       		.uleb128 0x24
 16199 01e9 2E       		.uleb128 0x2e
 16200 01ea 01       		.byte	0x1
 16201 01eb 3F       		.uleb128 0x3f
 16202 01ec 19       		.uleb128 0x19
 16203 01ed 03       		.uleb128 0x3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 357


 16204 01ee 0E       		.uleb128 0xe
 16205 01ef 3A       		.uleb128 0x3a
 16206 01f0 0B       		.uleb128 0xb
 16207 01f1 3B       		.uleb128 0x3b
 16208 01f2 05       		.uleb128 0x5
 16209 01f3 27       		.uleb128 0x27
 16210 01f4 19       		.uleb128 0x19
 16211 01f5 49       		.uleb128 0x49
 16212 01f6 13       		.uleb128 0x13
 16213 01f7 11       		.uleb128 0x11
 16214 01f8 01       		.uleb128 0x1
 16215 01f9 12       		.uleb128 0x12
 16216 01fa 06       		.uleb128 0x6
 16217 01fb 40       		.uleb128 0x40
 16218 01fc 18       		.uleb128 0x18
 16219 01fd 9742     		.uleb128 0x2117
 16220 01ff 19       		.uleb128 0x19
 16221 0200 01       		.uleb128 0x1
 16222 0201 13       		.uleb128 0x13
 16223 0202 00       		.byte	0
 16224 0203 00       		.byte	0
 16225 0204 25       		.uleb128 0x25
 16226 0205 2E       		.uleb128 0x2e
 16227 0206 01       		.byte	0x1
 16228 0207 3F       		.uleb128 0x3f
 16229 0208 19       		.uleb128 0x19
 16230 0209 03       		.uleb128 0x3
 16231 020a 0E       		.uleb128 0xe
 16232 020b 3A       		.uleb128 0x3a
 16233 020c 0B       		.uleb128 0xb
 16234 020d 3B       		.uleb128 0x3b
 16235 020e 05       		.uleb128 0x5
 16236 020f 27       		.uleb128 0x27
 16237 0210 19       		.uleb128 0x19
 16238 0211 49       		.uleb128 0x49
 16239 0212 13       		.uleb128 0x13
 16240 0213 11       		.uleb128 0x11
 16241 0214 01       		.uleb128 0x1
 16242 0215 12       		.uleb128 0x12
 16243 0216 06       		.uleb128 0x6
 16244 0217 40       		.uleb128 0x40
 16245 0218 18       		.uleb128 0x18
 16246 0219 9642     		.uleb128 0x2116
 16247 021b 19       		.uleb128 0x19
 16248 021c 01       		.uleb128 0x1
 16249 021d 13       		.uleb128 0x13
 16250 021e 00       		.byte	0
 16251 021f 00       		.byte	0
 16252 0220 26       		.uleb128 0x26
 16253 0221 2E       		.uleb128 0x2e
 16254 0222 01       		.byte	0x1
 16255 0223 3F       		.uleb128 0x3f
 16256 0224 19       		.uleb128 0x19
 16257 0225 03       		.uleb128 0x3
 16258 0226 0E       		.uleb128 0xe
 16259 0227 3A       		.uleb128 0x3a
 16260 0228 0B       		.uleb128 0xb
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 358


 16261 0229 3B       		.uleb128 0x3b
 16262 022a 05       		.uleb128 0x5
 16263 022b 11       		.uleb128 0x11
 16264 022c 01       		.uleb128 0x1
 16265 022d 12       		.uleb128 0x12
 16266 022e 06       		.uleb128 0x6
 16267 022f 40       		.uleb128 0x40
 16268 0230 18       		.uleb128 0x18
 16269 0231 9742     		.uleb128 0x2117
 16270 0233 19       		.uleb128 0x19
 16271 0234 01       		.uleb128 0x1
 16272 0235 13       		.uleb128 0x13
 16273 0236 00       		.byte	0
 16274 0237 00       		.byte	0
 16275 0238 27       		.uleb128 0x27
 16276 0239 2E       		.uleb128 0x2e
 16277 023a 00       		.byte	0
 16278 023b 3F       		.uleb128 0x3f
 16279 023c 19       		.uleb128 0x19
 16280 023d 03       		.uleb128 0x3
 16281 023e 0E       		.uleb128 0xe
 16282 023f 3A       		.uleb128 0x3a
 16283 0240 0B       		.uleb128 0xb
 16284 0241 3B       		.uleb128 0x3b
 16285 0242 05       		.uleb128 0x5
 16286 0243 11       		.uleb128 0x11
 16287 0244 01       		.uleb128 0x1
 16288 0245 12       		.uleb128 0x12
 16289 0246 06       		.uleb128 0x6
 16290 0247 40       		.uleb128 0x40
 16291 0248 18       		.uleb128 0x18
 16292 0249 9642     		.uleb128 0x2116
 16293 024b 19       		.uleb128 0x19
 16294 024c 00       		.byte	0
 16295 024d 00       		.byte	0
 16296 024e 28       		.uleb128 0x28
 16297 024f 34       		.uleb128 0x34
 16298 0250 00       		.byte	0
 16299 0251 03       		.uleb128 0x3
 16300 0252 0E       		.uleb128 0xe
 16301 0253 3A       		.uleb128 0x3a
 16302 0254 0B       		.uleb128 0xb
 16303 0255 3B       		.uleb128 0x3b
 16304 0256 05       		.uleb128 0x5
 16305 0257 49       		.uleb128 0x49
 16306 0258 13       		.uleb128 0x13
 16307 0259 3F       		.uleb128 0x3f
 16308 025a 19       		.uleb128 0x19
 16309 025b 3C       		.uleb128 0x3c
 16310 025c 19       		.uleb128 0x19
 16311 025d 00       		.byte	0
 16312 025e 00       		.byte	0
 16313 025f 29       		.uleb128 0x29
 16314 0260 34       		.uleb128 0x34
 16315 0261 00       		.byte	0
 16316 0262 03       		.uleb128 0x3
 16317 0263 0E       		.uleb128 0xe
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 359


 16318 0264 3A       		.uleb128 0x3a
 16319 0265 0B       		.uleb128 0xb
 16320 0266 3B       		.uleb128 0x3b
 16321 0267 0B       		.uleb128 0xb
 16322 0268 49       		.uleb128 0x49
 16323 0269 13       		.uleb128 0x13
 16324 026a 3F       		.uleb128 0x3f
 16325 026b 19       		.uleb128 0x19
 16326 026c 02       		.uleb128 0x2
 16327 026d 18       		.uleb128 0x18
 16328 026e 00       		.byte	0
 16329 026f 00       		.byte	0
 16330 0270 00       		.byte	0
 16331              		.section	.debug_aranges,"",%progbits
 16332 0000 24010000 		.4byte	0x124
 16333 0004 0200     		.2byte	0x2
 16334 0006 00000000 		.4byte	.Ldebug_info0
 16335 000a 04       		.byte	0x4
 16336 000b 00       		.byte	0
 16337 000c 0000     		.2byte	0
 16338 000e 0000     		.2byte	0
 16339 0010 00000000 		.4byte	.LFB64
 16340 0014 90040000 		.4byte	.LFE64-.LFB64
 16341 0018 00000000 		.4byte	.LFB65
 16342 001c 22000000 		.4byte	.LFE65-.LFB65
 16343 0020 00000000 		.4byte	.LFB66
 16344 0024 70000000 		.4byte	.LFE66-.LFB66
 16345 0028 00000000 		.4byte	.LFB67
 16346 002c E0120000 		.4byte	.LFE67-.LFB67
 16347 0030 00000000 		.4byte	.LFB68
 16348 0034 DC0A0000 		.4byte	.LFE68-.LFB68
 16349 0038 00000000 		.4byte	.LFB69
 16350 003c EC0D0000 		.4byte	.LFE69-.LFB69
 16351 0040 00000000 		.4byte	.LFB70
 16352 0044 9C000000 		.4byte	.LFE70-.LFB70
 16353 0048 00000000 		.4byte	.LFB71
 16354 004c 70150000 		.4byte	.LFE71-.LFB71
 16355 0050 00000000 		.4byte	.LFB72
 16356 0054 60030000 		.4byte	.LFE72-.LFB72
 16357 0058 00000000 		.4byte	.LFB73
 16358 005c 74030000 		.4byte	.LFE73-.LFB73
 16359 0060 00000000 		.4byte	.LFB74
 16360 0064 84000000 		.4byte	.LFE74-.LFB74
 16361 0068 00000000 		.4byte	.LFB75
 16362 006c 88000000 		.4byte	.LFE75-.LFB75
 16363 0070 00000000 		.4byte	.LFB76
 16364 0074 80000000 		.4byte	.LFE76-.LFB76
 16365 0078 00000000 		.4byte	.LFB77
 16366 007c 3E000000 		.4byte	.LFE77-.LFB77
 16367 0080 00000000 		.4byte	.LFB78
 16368 0084 2E000000 		.4byte	.LFE78-.LFB78
 16369 0088 00000000 		.4byte	.LFB79
 16370 008c 98000000 		.4byte	.LFE79-.LFB79
 16371 0090 00000000 		.4byte	.LFB80
 16372 0094 64000000 		.4byte	.LFE80-.LFB80
 16373 0098 00000000 		.4byte	.LFB81
 16374 009c 5C000000 		.4byte	.LFE81-.LFB81
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 360


 16375 00a0 00000000 		.4byte	.LFB82
 16376 00a4 04030000 		.4byte	.LFE82-.LFB82
 16377 00a8 00000000 		.4byte	.LFB83
 16378 00ac 8C000000 		.4byte	.LFE83-.LFB83
 16379 00b0 00000000 		.4byte	.LFB84
 16380 00b4 8C000000 		.4byte	.LFE84-.LFB84
 16381 00b8 00000000 		.4byte	.LFB85
 16382 00bc 90000000 		.4byte	.LFE85-.LFB85
 16383 00c0 00000000 		.4byte	.LFB86
 16384 00c4 B8000000 		.4byte	.LFE86-.LFB86
 16385 00c8 00000000 		.4byte	.LFB87
 16386 00cc 48000000 		.4byte	.LFE87-.LFB87
 16387 00d0 00000000 		.4byte	.LFB88
 16388 00d4 34000000 		.4byte	.LFE88-.LFB88
 16389 00d8 00000000 		.4byte	.LFB89
 16390 00dc C0000000 		.4byte	.LFE89-.LFB89
 16391 00e0 00000000 		.4byte	.LFB90
 16392 00e4 60000000 		.4byte	.LFE90-.LFB90
 16393 00e8 00000000 		.4byte	.LFB91
 16394 00ec 44000000 		.4byte	.LFE91-.LFB91
 16395 00f0 00000000 		.4byte	.LFB92
 16396 00f4 34000000 		.4byte	.LFE92-.LFB92
 16397 00f8 00000000 		.4byte	.LFB93
 16398 00fc 20000000 		.4byte	.LFE93-.LFB93
 16399 0100 00000000 		.4byte	.LFB94
 16400 0104 54000000 		.4byte	.LFE94-.LFB94
 16401 0108 00000000 		.4byte	.LFB95
 16402 010c 30010000 		.4byte	.LFE95-.LFB95
 16403 0110 00000000 		.4byte	.LFB96
 16404 0114 60000000 		.4byte	.LFE96-.LFB96
 16405 0118 00000000 		.4byte	.LFB97
 16406 011c 90050000 		.4byte	.LFE97-.LFB97
 16407 0120 00000000 		.4byte	0
 16408 0124 00000000 		.4byte	0
 16409              		.section	.debug_ranges,"",%progbits
 16410              	.Ldebug_ranges0:
 16411 0000 00000000 		.4byte	.LFB64
 16412 0004 90040000 		.4byte	.LFE64
 16413 0008 00000000 		.4byte	.LFB65
 16414 000c 22000000 		.4byte	.LFE65
 16415 0010 00000000 		.4byte	.LFB66
 16416 0014 70000000 		.4byte	.LFE66
 16417 0018 00000000 		.4byte	.LFB67
 16418 001c E0120000 		.4byte	.LFE67
 16419 0020 00000000 		.4byte	.LFB68
 16420 0024 DC0A0000 		.4byte	.LFE68
 16421 0028 00000000 		.4byte	.LFB69
 16422 002c EC0D0000 		.4byte	.LFE69
 16423 0030 00000000 		.4byte	.LFB70
 16424 0034 9C000000 		.4byte	.LFE70
 16425 0038 00000000 		.4byte	.LFB71
 16426 003c 70150000 		.4byte	.LFE71
 16427 0040 00000000 		.4byte	.LFB72
 16428 0044 60030000 		.4byte	.LFE72
 16429 0048 00000000 		.4byte	.LFB73
 16430 004c 74030000 		.4byte	.LFE73
 16431 0050 00000000 		.4byte	.LFB74
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 361


 16432 0054 84000000 		.4byte	.LFE74
 16433 0058 00000000 		.4byte	.LFB75
 16434 005c 88000000 		.4byte	.LFE75
 16435 0060 00000000 		.4byte	.LFB76
 16436 0064 80000000 		.4byte	.LFE76
 16437 0068 00000000 		.4byte	.LFB77
 16438 006c 3E000000 		.4byte	.LFE77
 16439 0070 00000000 		.4byte	.LFB78
 16440 0074 2E000000 		.4byte	.LFE78
 16441 0078 00000000 		.4byte	.LFB79
 16442 007c 98000000 		.4byte	.LFE79
 16443 0080 00000000 		.4byte	.LFB80
 16444 0084 64000000 		.4byte	.LFE80
 16445 0088 00000000 		.4byte	.LFB81
 16446 008c 5C000000 		.4byte	.LFE81
 16447 0090 00000000 		.4byte	.LFB82
 16448 0094 04030000 		.4byte	.LFE82
 16449 0098 00000000 		.4byte	.LFB83
 16450 009c 8C000000 		.4byte	.LFE83
 16451 00a0 00000000 		.4byte	.LFB84
 16452 00a4 8C000000 		.4byte	.LFE84
 16453 00a8 00000000 		.4byte	.LFB85
 16454 00ac 90000000 		.4byte	.LFE85
 16455 00b0 00000000 		.4byte	.LFB86
 16456 00b4 B8000000 		.4byte	.LFE86
 16457 00b8 00000000 		.4byte	.LFB87
 16458 00bc 48000000 		.4byte	.LFE87
 16459 00c0 00000000 		.4byte	.LFB88
 16460 00c4 34000000 		.4byte	.LFE88
 16461 00c8 00000000 		.4byte	.LFB89
 16462 00cc C0000000 		.4byte	.LFE89
 16463 00d0 00000000 		.4byte	.LFB90
 16464 00d4 60000000 		.4byte	.LFE90
 16465 00d8 00000000 		.4byte	.LFB91
 16466 00dc 44000000 		.4byte	.LFE91
 16467 00e0 00000000 		.4byte	.LFB92
 16468 00e4 34000000 		.4byte	.LFE92
 16469 00e8 00000000 		.4byte	.LFB93
 16470 00ec 20000000 		.4byte	.LFE93
 16471 00f0 00000000 		.4byte	.LFB94
 16472 00f4 54000000 		.4byte	.LFE94
 16473 00f8 00000000 		.4byte	.LFB95
 16474 00fc 30010000 		.4byte	.LFE95
 16475 0100 00000000 		.4byte	.LFB96
 16476 0104 60000000 		.4byte	.LFE96
 16477 0108 00000000 		.4byte	.LFB97
 16478 010c 90050000 		.4byte	.LFE97
 16479 0110 00000000 		.4byte	0
 16480 0114 00000000 		.4byte	0
 16481              		.section	.debug_line,"",%progbits
 16482              	.Ldebug_line0:
 16483 0000 57100000 		.section	.debug_str,"MS",%progbits,1
 16483      02008B01 
 16483      00000201 
 16483      FB0E0D00 
 16483      01010101 
 16484              	.LASF153:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 362


 16485 0000 696E666F 		.ascii	"infoSend\000"
 16485      53656E64 
 16485      00
 16486              	.LASF25:
 16487 0009 73697A65 		.ascii	"sizetype\000"
 16487      74797065 
 16487      00
 16488              	.LASF33:
 16489 0012 434D445F 		.ascii	"CMD_INIT_MEM\000"
 16489      494E4954 
 16489      5F4D454D 
 16489      00
 16490              	.LASF244:
 16491 001f 676C5F63 		.ascii	"gl_c\000"
 16491      00
 16492              	.LASF57:
 16493 0024 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS_ADV\000"
 16493      545F4D4F 
 16493      44455F45 
 16493      4D475F46 
 16493      4346535F 
 16494              	.LASF36:
 16495 003c 434D445F 		.ascii	"CMD_ACTIVATE\000"
 16495      41435449 
 16495      56415445 
 16495      00
 16496              	.LASF11:
 16497 0049 696E7433 		.ascii	"int32_t\000"
 16497      325F7400 
 16498              	.LASF252:
 16499 0051 675F7278 		.ascii	"g_rx\000"
 16499      00
 16500              	.LASF84:
 16501 0056 73745F64 		.ascii	"st_data\000"
 16501      61746100 
 16502              	.LASF220:
 16503 005e 77726974 		.ascii	"writeStatus\000"
 16503      65537461 
 16503      74757300 
 16504              	.LASF15:
 16505 006a 75696E74 		.ascii	"uint32\000"
 16505      333200
 16506              	.LASF272:
 16507 0071 433A5C55 		.ascii	"C:\\Users\\MattiaCP\\Dropbox (workgroup)\\Personal\\"
 16507      73657273 
 16507      5C4D6174 
 16507      74696143 
 16507      505C4472 
 16508 00a0 4D617474 		.ascii	"Mattia Poggiani\\FIRMWARES (local)\\SoftPro firmwar"
 16508      69612050 
 16508      6F676769 
 16508      616E695C 
 16508      4649524D 
 16509 00d1 65202850 		.ascii	"e (PSoC5)\\firmware.cydsn\000"
 16509      536F4335 
 16509      295C6669 
 16509      726D7761 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 363


 16509      72652E63 
 16510              	.LASF235:
 16511 00ea 636D645F 		.ascii	"cmd_set_baudrate\000"
 16511      7365745F 
 16511      62617564 
 16511      72617465 
 16511      00
 16512              	.LASF198:
 16513 00fb 7370695F 		.ascii	"spi_read_delay_str_len\000"
 16513      72656164 
 16513      5F64656C 
 16513      61795F73 
 16513      74725F6C 
 16514              	.LASF158:
 16515 0112 7061636B 		.ascii	"packet_lenght\000"
 16515      65745F6C 
 16515      656E6768 
 16515      7400
 16516              	.LASF203:
 16517 0120 70726570 		.ascii	"prepare_generic_info\000"
 16517      6172655F 
 16517      67656E65 
 16517      7269635F 
 16517      696E666F 
 16518              	.LASF105:
 16519 0135 706F735F 		.ascii	"pos_lim_inf\000"
 16519      6C696D5F 
 16519      696E6600 
 16520              	.LASF237:
 16521 0141 636D645F 		.ascii	"cmd_get_inputs\000"
 16521      6765745F 
 16521      696E7075 
 16521      747300
 16522              	.LASF56:
 16523 0150 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS\000"
 16523      545F4D4F 
 16523      44455F45 
 16523      4D475F46 
 16523      43465300 
 16524              	.LASF117:
 16525 0164 63757272 		.ascii	"curr_lookup\000"
 16525      5F6C6F6F 
 16525      6B757000 
 16526              	.LASF132:
 16527 0170 72657374 		.ascii	"rest_counter\000"
 16527      5F636F75 
 16527      6E746572 
 16527      00
 16528              	.LASF242:
 16529 017d 636D645F 		.ascii	"cmd_get_imu_readings\000"
 16529      6765745F 
 16529      696D755F 
 16529      72656164 
 16529      696E6773 
 16530              	.LASF193:
 16531 0192 69645F73 		.ascii	"id_str_len\000"
 16531      74725F6C 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 364


 16531      656E00
 16532              	.LASF55:
 16533 019d 494E5055 		.ascii	"INPUT_MODE_EMG_INTEGRAL\000"
 16533      545F4D4F 
 16533      44455F45 
 16533      4D475F49 
 16533      4E544547 
 16534              	.LASF163:
 16535 01b5 6D5F746D 		.ascii	"m_tmp\000"
 16535      7000
 16536              	.LASF16:
 16537 01bb 696E7438 		.ascii	"int8\000"
 16537      00
 16538              	.LASF201:
 16539 01c0 6765745F 		.ascii	"get_param_list\000"
 16539      70617261 
 16539      6D5F6C69 
 16539      737400
 16540              	.LASF241:
 16541 01cf 636D645F 		.ascii	"cmd_get_emg\000"
 16541      6765745F 
 16541      656D6700 
 16542              	.LASF130:
 16543 01db 706F7369 		.ascii	"position_hist\000"
 16543      74696F6E 
 16543      5F686973 
 16543      7400
 16544              	.LASF146:
 16545 01e9 74656D70 		.ascii	"temp_value\000"
 16545      5F76616C 
 16545      756500
 16546              	.LASF274:
 16547 01f4 72657375 		.ascii	"result\000"
 16547      6C7400
 16548              	.LASF87:
 16549 01fb 72656164 		.ascii	"ready\000"
 16549      7900
 16550              	.LASF54:
 16551 0201 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL\000"
 16551      545F4D4F 
 16551      44455F45 
 16551      4D475F50 
 16551      524F504F 
 16552              	.LASF256:
 16553 021d 74696D65 		.ascii	"timer_value\000"
 16553      725F7661 
 16553      6C756500 
 16554              	.LASF4:
 16555 0229 6C6F6E67 		.ascii	"long int\000"
 16555      20696E74 
 16555      00
 16556              	.LASF137:
 16557 0232 756E7573 		.ascii	"unused_bytes1\000"
 16557      65645F62 
 16557      79746573 
 16557      3100
 16558              	.LASF202:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 365


 16559 0240 7365745A 		.ascii	"setZeros\000"
 16559      65726F73 
 16559      00
 16560              	.LASF128:
 16561 0249 756E7573 		.ascii	"unused_bytes\000"
 16561      65645F62 
 16561      79746573 
 16561      00
 16562              	.LASF142:
 16563 0256 61636365 		.ascii	"accel_value\000"
 16563      6C5F7661 
 16563      6C756500 
 16564              	.LASF170:
 16565 0262 4E554D5F 		.ascii	"NUM_ITEMS\000"
 16565      4954454D 
 16565      5300
 16566              	.LASF19:
 16567 026c 666C6F61 		.ascii	"float32\000"
 16567      74333200 
 16568              	.LASF41:
 16569 0274 434D445F 		.ascii	"CMD_GET_CURRENTS\000"
 16569      4745545F 
 16569      43555252 
 16569      454E5453 
 16569      00
 16570              	.LASF129:
 16571 0285 656D675F 		.ascii	"emg_counter\000"
 16571      636F756E 
 16571      74657200 
 16572              	.LASF180:
 16573 0291 6175785F 		.ascii	"aux_float2\000"
 16573      666C6F61 
 16573      743200
 16574              	.LASF236:
 16575 029c 636D645F 		.ascii	"cmd_ping\000"
 16575      70696E67 
 16575      00
 16576              	.LASF200:
 16577 02a5 7370695F 		.ascii	"spi_delay_menu_len\000"
 16577      64656C61 
 16577      795F6D65 
 16577      6E755F6C 
 16577      656E00
 16578              	.LASF0:
 16579 02b8 7369676E 		.ascii	"signed char\000"
 16579      65642063 
 16579      68617200 
 16580              	.LASF147:
 16581 02c4 73745F63 		.ascii	"st_calib\000"
 16581      616C6962 
 16581      00
 16582              	.LASF218:
 16583 02cd 6D656D53 		.ascii	"memStore\000"
 16583      746F7265 
 16583      00
 16584              	.LASF266:
 16585 02d6 73696E67 		.ascii	"single_imu_size\000"
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 366


 16585      6C655F69 
 16585      6D755F73 
 16585      697A6500 
 16586              	.LASF63:
 16587 02e6 6D6F746F 		.ascii	"motor_supply_type\000"
 16587      725F7375 
 16587      70706C79 
 16587      5F747970 
 16587      6500
 16588              	.LASF206:
 16589 02f8 73746570 		.ascii	"step\000"
 16589      00
 16590              	.LASF1:
 16591 02fd 756E7369 		.ascii	"unsigned char\000"
 16591      676E6564 
 16591      20636861 
 16591      7200
 16592              	.LASF248:
 16593 030b 675F7265 		.ascii	"g_refNew\000"
 16593      664E6577 
 16593      00
 16594              	.LASF174:
 16595 0314 636F6E74 		.ascii	"control_mode_menu\000"
 16595      726F6C5F 
 16595      6D6F6465 
 16595      5F6D656E 
 16595      7500
 16596              	.LASF29:
 16597 0326 434D445F 		.ascii	"CMD_STORE_DEFAULT_PARAMS\000"
 16597      53544F52 
 16597      455F4445 
 16597      4641554C 
 16597      545F5041 
 16598              	.LASF194:
 16599 033f 6E5F696D 		.ascii	"n_imu_str_len\000"
 16599      755F7374 
 16599      725F6C65 
 16599      6E00
 16600              	.LASF197:
 16601 034d 696D755F 		.ascii	"imu_table_str_len\000"
 16601      7461626C 
 16601      655F7374 
 16601      725F6C65 
 16601      6E00
 16602              	.LASF216:
 16603 035f 76616C75 		.ascii	"value\000"
 16603      6500
 16604              	.LASF141:
 16605 0365 666C6167 		.ascii	"flags\000"
 16605      7300
 16606              	.LASF192:
 16607 036b 7370695F 		.ascii	"spi_read_delay_str\000"
 16607      72656164 
 16607      5F64656C 
 16607      61795F73 
 16607      747200
 16608              	.LASF37:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 367


 16609 037e 434D445F 		.ascii	"CMD_GET_ACTIVATE\000"
 16609      4745545F 
 16609      41435449 
 16609      56415445 
 16609      00
 16610              	.LASF22:
 16611 038f 63686172 		.ascii	"char\000"
 16611      00
 16612              	.LASF108:
 16613 0394 6D61785F 		.ascii	"max_step_pos\000"
 16613      73746570 
 16613      5F706F73 
 16613      00
 16614              	.LASF222:
 16615 03a1 7265745F 		.ascii	"ret_val\000"
 16615      76616C00 
 16616              	.LASF186:
 16617 03a9 73746172 		.ascii	"start_byte\000"
 16617      745F6279 
 16617      746500
 16618              	.LASF183:
 16619 03b4 6E756D5F 		.ascii	"num_mag_cal_params\000"
 16619      6D61675F 
 16619      63616C5F 
 16619      70617261 
 16619      6D7300
 16620              	.LASF92:
 16621 03c7 6B5F645F 		.ascii	"k_d_c\000"
 16621      6300
 16622              	.LASF155:
 16623 03cd 7061636B 		.ascii	"packet_string\000"
 16623      65745F73 
 16623      7472696E 
 16623      6700
 16624              	.LASF103:
 16625 03db 6D5F6D75 		.ascii	"m_mult\000"
 16625      6C7400
 16626              	.LASF91:
 16627 03e2 6B5F695F 		.ascii	"k_i_c\000"
 16627      6300
 16628              	.LASF219:
 16629 03e8 64697370 		.ascii	"displacement\000"
 16629      6C616365 
 16629      6D656E74 
 16629      00
 16630              	.LASF213:
 16631 03f5 64617461 		.ascii	"data_length\000"
 16631      5F6C656E 
 16631      67746800 
 16632              	.LASF106:
 16633 0401 706F735F 		.ascii	"pos_lim_sup\000"
 16633      6C696D5F 
 16633      73757000 
 16634              	.LASF113:
 16635 040d 656D675F 		.ascii	"emg_speed\000"
 16635      73706565 
 16635      6400
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 368


 16636              	.LASF124:
 16637 0417 72657374 		.ascii	"rest_vel\000"
 16637      5F76656C 
 16637      00
 16638              	.LASF157:
 16639 0420 7061636B 		.ascii	"packet_data\000"
 16639      65745F64 
 16639      61746100 
 16640              	.LASF210:
 16641 042c 636F6D6D 		.ascii	"commWrite\000"
 16641      57726974 
 16641      6500
 16642              	.LASF260:
 16643 0436 6465765F 		.ascii	"dev_tension_f\000"
 16643      74656E73 
 16643      696F6E5F 
 16643      6600
 16644              	.LASF221:
 16645 0444 70616765 		.ascii	"pages\000"
 16645      7300
 16646              	.LASF225:
 16647 044a 6D656D49 		.ascii	"memInit\000"
 16647      6E697400 
 16648              	.LASF94:
 16649 0452 6B5F695F 		.ascii	"k_i_dl\000"
 16649      646C00
 16650              	.LASF38:
 16651 0459 434D445F 		.ascii	"CMD_SET_INPUTS\000"
 16651      5345545F 
 16651      494E5055 
 16651      545300
 16652              	.LASF85:
 16653 0468 62756666 		.ascii	"buffer\000"
 16653      657200
 16654              	.LASF96:
 16655 046f 6B5F705F 		.ascii	"k_p_c_dl\000"
 16655      635F646C 
 16655      00
 16656              	.LASF226:
 16657 0478 636D645F 		.ascii	"cmd_get_measurements\000"
 16657      6765745F 
 16657      6D656173 
 16657      7572656D 
 16657      656E7473 
 16658              	.LASF150:
 16659 048d 73706565 		.ascii	"speed\000"
 16659      6400
 16660              	.LASF154:
 16661 0493 72785F63 		.ascii	"rx_cmd\000"
 16661      6D6400
 16662              	.LASF78:
 16663 049a 54595045 		.ascii	"TYPE_DOUBLE\000"
 16663      5F444F55 
 16663      424C4500 
 16664              	.LASF250:
 16665 04a6 675F6D65 		.ascii	"g_meas\000"
 16665      617300
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 369


 16666              	.LASF67:
 16667 04ad 41434B5F 		.ascii	"ACK_ERROR\000"
 16667      4552524F 
 16667      5200
 16668              	.LASF52:
 16669 04b7 494E5055 		.ascii	"INPUT_MODE_EXTERNAL\000"
 16669      545F4D4F 
 16669      44455F45 
 16669      58544552 
 16669      4E414C00 
 16670              	.LASF178:
 16671 04cb 696E6465 		.ascii	"index\000"
 16671      7800
 16672              	.LASF126:
 16673 04d1 72657374 		.ascii	"rest_position_flag\000"
 16673      5F706F73 
 16673      6974696F 
 16673      6E5F666C 
 16673      616700
 16674              	.LASF267:
 16675 04e4 675F696D 		.ascii	"g_imu\000"
 16675      7500
 16676              	.LASF97:
 16677 04ea 6B5F695F 		.ascii	"k_i_c_dl\000"
 16677      635F646C 
 16677      00
 16678              	.LASF189:
 16679 04f3 6D61675F 		.ascii	"mag_param_str\000"
 16679      70617261 
 16679      6D5F7374 
 16679      7200
 16680              	.LASF62:
 16681 0501 43555252 		.ascii	"CURR_AND_POS_CONTROL\000"
 16681      5F414E44 
 16681      5F504F53 
 16681      5F434F4E 
 16681      54524F4C 
 16682              	.LASF28:
 16683 0516 434D445F 		.ascii	"CMD_STORE_PARAMS\000"
 16683      53544F52 
 16683      455F5041 
 16683      52414D53 
 16683      00
 16684              	.LASF172:
 16685 0527 50415241 		.ascii	"PARAMS_STR\000"
 16685      4D535F53 
 16685      545200
 16686              	.LASF148:
 16687 0532 656E6162 		.ascii	"enabled\000"
 16687      6C656400 
 16688              	.LASF7:
 16689 053a 6C6F6E67 		.ascii	"long unsigned int\000"
 16689      20756E73 
 16689      69676E65 
 16689      6420696E 
 16689      7400
 16690              	.LASF134:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 370


 16691 054c 746F7461 		.ascii	"total_time_on\000"
 16691      6C5F7469 
 16691      6D655F6F 
 16691      6E00
 16692              	.LASF32:
 16693 055a 434D445F 		.ascii	"CMD_BOOTLOADER\000"
 16693      424F4F54 
 16693      4C4F4144 
 16693      455200
 16694              	.LASF228:
 16695 0569 636D645F 		.ascii	"cmd_get_accelerations\000"
 16695      6765745F 
 16695      61636365 
 16695      6C657261 
 16695      74696F6E 
 16696              	.LASF135:
 16697 057f 746F7461 		.ascii	"total_time_rest\000"
 16697      6C5F7469 
 16697      6D655F72 
 16697      65737400 
 16698              	.LASF99:
 16699 058f 61637469 		.ascii	"activ\000"
 16699      7600
 16700              	.LASF102:
 16701 0595 6D5F6F66 		.ascii	"m_off\000"
 16701      6600
 16702              	.LASF68:
 16703 059b 41434B5F 		.ascii	"ACK_OK\000"
 16703      4F4B00
 16704              	.LASF70:
 16705 05a2 54595045 		.ascii	"TYPE_FLAG\000"
 16705      5F464C41 
 16705      4700
 16706              	.LASF145:
 16707 05ac 71756174 		.ascii	"quat_value\000"
 16707      5F76616C 
 16707      756500
 16708              	.LASF185:
 16709 05b7 7061636B 		.ascii	"packet_length\000"
 16709      65745F6C 
 16709      656E6774 
 16709      6800
 16710              	.LASF122:
 16711 05c5 72657374 		.ascii	"rest_pos\000"
 16711      5F706F73 
 16711      00
 16712              	.LASF79:
 16713 05ce 63757272 		.ascii	"curr\000"
 16713      00
 16714              	.LASF100:
 16715 05d3 696E7075 		.ascii	"input_mode\000"
 16715      745F6D6F 
 16715      646500
 16716              	.LASF60:
 16717 05de 434F4E54 		.ascii	"CONTROL_PWM\000"
 16717      524F4C5F 
 16717      50574D00 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 371


 16718              	.LASF43:
 16719 05ea 434D445F 		.ascii	"CMD_GET_EMG\000"
 16719      4745545F 
 16719      454D4700 
 16720              	.LASF31:
 16721 05f6 434D445F 		.ascii	"CMD_GET_INFO\000"
 16721      4745545F 
 16721      494E464F 
 16721      00
 16722              	.LASF173:
 16723 0603 696E7075 		.ascii	"input_mode_menu\000"
 16723      745F6D6F 
 16723      64655F6D 
 16723      656E7500 
 16724              	.LASF245:
 16725 0613 73696E67 		.ascii	"single_packet\000"
 16725      6C655F70 
 16725      61636B65 
 16725      7400
 16726              	.LASF88:
 16727 0621 73745F6D 		.ascii	"st_mem\000"
 16727      656D00
 16728              	.LASF184:
 16729 0628 66697273 		.ascii	"first_imu_parameter\000"
 16729      745F696D 
 16729      755F7061 
 16729      72616D65 
 16729      74657200 
 16730              	.LASF42:
 16731 063c 434D445F 		.ascii	"CMD_GET_CURR_AND_MEAS\000"
 16731      4745545F 
 16731      43555252 
 16731      5F414E44 
 16731      5F4D4541 
 16732              	.LASF270:
 16733 0652 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 16733      43313120 
 16733      352E342E 
 16733      31203230 
 16733      31363036 
 16734 0685 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 16734      20726576 
 16734      6973696F 
 16734      6E203233 
 16734      37373135 
 16735 06b8 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 16735      66756E63 
 16735      74696F6E 
 16735      2D736563 
 16735      74696F6E 
 16736              	.LASF81:
 16737 06e0 73745F72 		.ascii	"st_ref\000"
 16737      656600
 16738              	.LASF47:
 16739 06e7 434D445F 		.ascii	"CMD_SET_CUFF_INPUTS\000"
 16739      5345545F 
 16739      43554646 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 372


 16739      5F494E50 
 16739      55545300 
 16740              	.LASF255:
 16741 06fb 63616C69 		.ascii	"calib\000"
 16741      6200
 16742              	.LASF6:
 16743 0701 5F5F7569 		.ascii	"__uint32_t\000"
 16743      6E743332 
 16743      5F7400
 16744              	.LASF8:
 16745 070c 6C6F6E67 		.ascii	"long long int\000"
 16745      206C6F6E 
 16745      6720696E 
 16745      7400
 16746              	.LASF58:
 16747 071a 53485F63 		.ascii	"SH_control_mode\000"
 16747      6F6E7472 
 16747      6F6C5F6D 
 16747      6F646500 
 16748              	.LASF72:
 16749 072a 54595045 		.ascii	"TYPE_UINT8\000"
 16749      5F55494E 
 16749      543800
 16750              	.LASF120:
 16751 0735 6D61696E 		.ascii	"maint_month\000"
 16751      745F6D6F 
 16751      6E746800 
 16752              	.LASF232:
 16753 0741 636D645F 		.ascii	"cmd_get_currents\000"
 16753      6765745F 
 16753      63757272 
 16753      656E7473 
 16753      00
 16754              	.LASF65:
 16755 0752 4D41584F 		.ascii	"MAXON_12V\000"
 16755      4E5F3132 
 16755      5600
 16756              	.LASF21:
 16757 075c 646F7562 		.ascii	"double\000"
 16757      6C6500
 16758              	.LASF190:
 16759 0763 69645F73 		.ascii	"id_str\000"
 16759      747200
 16760              	.LASF151:
 16761 076a 72657065 		.ascii	"repetitions\000"
 16761      74697469 
 16761      6F6E7300 
 16762              	.LASF107:
 16763 0776 6D61785F 		.ascii	"max_step_neg\000"
 16763      73746570 
 16763      5F6E6567 
 16763      00
 16764              	.LASF262:
 16765 0783 72657365 		.ascii	"reset_last_value_flag\000"
 16765      745F6C61 
 16765      73745F76 
 16765      616C7565 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 373


 16765      5F666C61 
 16766              	.LASF20:
 16767 0799 666C6F61 		.ascii	"float\000"
 16767      7400
 16768              	.LASF139:
 16769 079f 494D555F 		.ascii	"IMU_conf\000"
 16769      636F6E66 
 16769      00
 16770              	.LASF162:
 16771 07a8 6D5F6164 		.ascii	"m_addr\000"
 16771      647200
 16772              	.LASF254:
 16773 07af 635F6D65 		.ascii	"c_mem\000"
 16773      6D00
 16774              	.LASF212:
 16775 07b5 64617461 		.ascii	"data_array\000"
 16775      5F617272 
 16775      617900
 16776              	.LASF10:
 16777 07c0 756E7369 		.ascii	"unsigned int\000"
 16777      676E6564 
 16777      20696E74 
 16777      00
 16778              	.LASF215:
 16779 07cd 73656E64 		.ascii	"sendAcknowledgment\000"
 16779      41636B6E 
 16779      6F776C65 
 16779      64676D65 
 16779      6E7400
 16780              	.LASF268:
 16781 07e0 4D616743 		.ascii	"MagCal\000"
 16781      616C00
 16782              	.LASF50:
 16783 07e7 53485F63 		.ascii	"SH_command\000"
 16783      6F6D6D61 
 16783      6E6400
 16784              	.LASF74:
 16785 07f2 54595045 		.ascii	"TYPE_UINT16\000"
 16785      5F55494E 
 16785      54313600 
 16786              	.LASF89:
 16787 07fe 666C6167 		.ascii	"flag\000"
 16787      00
 16788              	.LASF229:
 16789 0803 636D645F 		.ascii	"cmd_set_inputs\000"
 16789      7365745F 
 16789      696E7075 
 16789      747300
 16790              	.LASF101:
 16791 0812 636F6E74 		.ascii	"control_mode\000"
 16791      726F6C5F 
 16791      6D6F6465 
 16791      00
 16792              	.LASF239:
 16793 081f 6F66665F 		.ascii	"off_1\000"
 16793      3100
 16794              	.LASF53:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 374


 16795 0825 494E5055 		.ascii	"INPUT_MODE_ENCODER3\000"
 16795      545F4D4F 
 16795      44455F45 
 16795      4E434F44 
 16795      45523300 
 16796              	.LASF230:
 16797 0839 636D645F 		.ascii	"cmd_get_activate\000"
 16797      6765745F 
 16797      61637469 
 16797      76617465 
 16797      00
 16798              	.LASF211:
 16799 084a 636F6D6D 		.ascii	"commWrite_to_cuff\000"
 16799      57726974 
 16799      655F746F 
 16799      5F637566 
 16799      6600
 16800              	.LASF160:
 16801 085c 73747269 		.ascii	"string_lenght\000"
 16801      6E675F6C 
 16801      656E6768 
 16801      7400
 16802              	.LASF77:
 16803 086a 54595045 		.ascii	"TYPE_FLOAT\000"
 16803      5F464C4F 
 16803      415400
 16804              	.LASF179:
 16805 0875 6175785F 		.ascii	"aux_uchar\000"
 16805      75636861 
 16805      7200
 16806              	.LASF73:
 16807 087f 54595045 		.ascii	"TYPE_INT16\000"
 16807      5F494E54 
 16807      313600
 16808              	.LASF166:
 16809 088a 6175785F 		.ascii	"aux_uint16\000"
 16809      75696E74 
 16809      313600
 16810              	.LASF110:
 16811 0895 656D675F 		.ascii	"emg_threshold\000"
 16811      74687265 
 16811      73686F6C 
 16811      6400
 16812              	.LASF46:
 16813 08a3 434D445F 		.ascii	"CMD_GET_CURR_DIFF\000"
 16813      4745545F 
 16813      43555252 
 16813      5F444946 
 16813      4600
 16814              	.LASF131:
 16815 08b5 63757272 		.ascii	"current_hist\000"
 16815      656E745F 
 16815      68697374 
 16815      00
 16816              	.LASF61:
 16817 08c2 434F4E54 		.ascii	"CONTROL_CURRENT\000"
 16817      524F4C5F 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 375


 16817      43555252 
 16817      454E5400 
 16818              	.LASF24:
 16819 08d2 6C6F6E67 		.ascii	"long double\000"
 16819      20646F75 
 16819      626C6500 
 16820              	.LASF76:
 16821 08de 54595045 		.ascii	"TYPE_UINT32\000"
 16821      5F55494E 
 16821      54333200 
 16822              	.LASF115:
 16823 08ea 6D6F746F 		.ascii	"motor_handle_ratio\000"
 16823      725F6861 
 16823      6E646C65 
 16823      5F726174 
 16823      696F00
 16824              	.LASF214:
 16825 08fd 63686563 		.ascii	"checksum\000"
 16825      6B73756D 
 16825      00
 16826              	.LASF249:
 16827 0906 675F7265 		.ascii	"g_refOld\000"
 16827      664F6C64 
 16827      00
 16828              	.LASF35:
 16829 090f 434D445F 		.ascii	"CMD_HAND_CALIBRATE\000"
 16829      48414E44 
 16829      5F43414C 
 16829      49425241 
 16829      544500
 16830              	.LASF125:
 16831 0922 72657374 		.ascii	"rest_ratio\000"
 16831      5F726174 
 16831      696F00
 16832              	.LASF143:
 16833 092d 6779726F 		.ascii	"gyro_value\000"
 16833      5F76616C 
 16833      756500
 16834              	.LASF136:
 16835 0938 63757272 		.ascii	"curr_time\000"
 16835      5F74696D 
 16835      6500
 16836              	.LASF114:
 16837 0942 646F7562 		.ascii	"double_encoder_on_off\000"
 16837      6C655F65 
 16837      6E636F64 
 16837      65725F6F 
 16837      6E5F6F66 
 16838              	.LASF121:
 16839 0958 6D61696E 		.ascii	"maint_year\000"
 16839      745F7965 
 16839      617200
 16840              	.LASF138:
 16841 0963 5350495F 		.ascii	"SPI_read_delay\000"
 16841      72656164 
 16841      5F64656C 
 16841      617900
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 376


 16842              	.LASF66:
 16843 0972 61636B6E 		.ascii	"acknowledgment_values\000"
 16843      6F776C65 
 16843      64676D65 
 16843      6E745F76 
 16843      616C7565 
 16844              	.LASF224:
 16845 0988 6D656D52 		.ascii	"memRestore\000"
 16845      6573746F 
 16845      726500
 16846              	.LASF187:
 16847 0993 6E5F696D 		.ascii	"n_imu_str\000"
 16847      755F7374 
 16847      7200
 16848              	.LASF204:
 16849 099d 696E666F 		.ascii	"info_string\000"
 16849      5F737472 
 16849      696E6700 
 16850              	.LASF9:
 16851 09a9 6C6F6E67 		.ascii	"long long unsigned int\000"
 16851      206C6F6E 
 16851      6720756E 
 16851      7369676E 
 16851      65642069 
 16852              	.LASF75:
 16853 09c0 54595045 		.ascii	"TYPE_INT32\000"
 16853      5F494E54 
 16853      333200
 16854              	.LASF119:
 16855 09cb 6D61696E 		.ascii	"maint_day\000"
 16855      745F6461 
 16855      7900
 16856              	.LASF168:
 16857 09d5 6175785F 		.ascii	"aux_uint32\000"
 16857      75696E74 
 16857      333200
 16858              	.LASF86:
 16859 09e0 6C656E67 		.ascii	"length\000"
 16859      746800
 16860              	.LASF144:
 16861 09e7 6D61675F 		.ascii	"mag_value\000"
 16861      76616C75 
 16861      6500
 16862              	.LASF80:
 16863 09f1 6F6E6F66 		.ascii	"onoff\000"
 16863      6600
 16864              	.LASF45:
 16865 09f7 434D445F 		.ascii	"CMD_GET_ACCEL\000"
 16865      4745545F 
 16865      41434345 
 16865      4C00
 16866              	.LASF227:
 16867 0a05 636D645F 		.ascii	"cmd_get_velocities\000"
 16867      6765745F 
 16867      76656C6F 
 16867      63697469 
 16867      657300
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 377


 16868              	.LASF223:
 16869 0a18 6D656D52 		.ascii	"memRecall\000"
 16869      6563616C 
 16869      6C00
 16870              	.LASF257:
 16871 0a22 74696D65 		.ascii	"timer_value0\000"
 16871      725F7661 
 16871      6C756530 
 16871      00
 16872              	.LASF48:
 16873 0a2f 434D445F 		.ascii	"CMD_SET_BAUDRATE\000"
 16873      5345545F 
 16873      42415544 
 16873      52415445 
 16873      00
 16874              	.LASF90:
 16875 0a40 6B5F705F 		.ascii	"k_p_c\000"
 16875      6300
 16876              	.LASF191:
 16877 0a46 696D755F 		.ascii	"imu_table_str\000"
 16877      7461626C 
 16877      655F7374 
 16877      7200
 16878              	.LASF258:
 16879 0a54 6465765F 		.ascii	"dev_tension\000"
 16879      74656E73 
 16879      696F6E00 
 16880              	.LASF240:
 16881 0a60 6D756C74 		.ascii	"mult_1\000"
 16881      5F3100
 16882              	.LASF23:
 16883 0a67 72656738 		.ascii	"reg8\000"
 16883      00
 16884              	.LASF208:
 16885 0a6c 636F6D6D 		.ascii	"commWrite_old_id\000"
 16885      57726974 
 16885      655F6F6C 
 16885      645F6964 
 16885      00
 16886              	.LASF176:
 16887 0a7d 6D616E61 		.ascii	"manage_param_list\000"
 16887      67655F70 
 16887      6172616D 
 16887      5F6C6973 
 16887      7400
 16888              	.LASF30:
 16889 0a8f 434D445F 		.ascii	"CMD_RESTORE_PARAMS\000"
 16889      52455354 
 16889      4F52455F 
 16889      50415241 
 16889      4D5300
 16890              	.LASF205:
 16891 0aa2 70726570 		.ascii	"prepare_counter_info\000"
 16891      6172655F 
 16891      636F756E 
 16891      7465725F 
 16891      696E666F 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 378


 16892              	.LASF209:
 16893 0ab7 6F6C645F 		.ascii	"old_id\000"
 16893      696400
 16894              	.LASF273:
 16895 0abe 5F5F5245 		.ascii	"__REV16\000"
 16895      56313600 
 16896              	.LASF231:
 16897 0ac6 636D645F 		.ascii	"cmd_get_curr_and_meas\000"
 16897      6765745F 
 16897      63757272 
 16897      5F616E64 
 16897      5F6D6561 
 16898              	.LASF111:
 16899 0adc 656D675F 		.ascii	"emg_calibration_flag\000"
 16899      63616C69 
 16899      62726174 
 16899      696F6E5F 
 16899      666C6167 
 16900              	.LASF82:
 16901 0af1 73745F6D 		.ascii	"st_meas\000"
 16901      65617300 
 16902              	.LASF64:
 16903 0af9 4D41584F 		.ascii	"MAXON_24V\000"
 16903      4E5F3234 
 16903      5600
 16904              	.LASF238:
 16905 0b03 636D645F 		.ascii	"cmd_store_params\000"
 16905      73746F72 
 16905      655F7061 
 16905      72616D73 
 16905      00
 16906              	.LASF253:
 16907 0b14 675F6D65 		.ascii	"g_mem\000"
 16907      6D00
 16908              	.LASF40:
 16909 0b1a 434D445F 		.ascii	"CMD_GET_MEASUREMENTS\000"
 16909      4745545F 
 16909      4D454153 
 16909      5552454D 
 16909      454E5453 
 16910              	.LASF13:
 16911 0b2f 75696E74 		.ascii	"uint8\000"
 16911      3800
 16912              	.LASF152:
 16913 0b35 636F6D6D 		.ascii	"commProcess\000"
 16913      50726F63 
 16913      65737300 
 16914              	.LASF2:
 16915 0b41 73686F72 		.ascii	"short int\000"
 16915      7420696E 
 16915      7400
 16916              	.LASF195:
 16917 0b4b 6964735F 		.ascii	"ids_str_len\000"
 16917      7374725F 
 16917      6C656E00 
 16918              	.LASF95:
 16919 0b57 6B5F645F 		.ascii	"k_d_dl\000"
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 379


 16919      646C00
 16920              	.LASF159:
 16921 0b5e 6964785F 		.ascii	"idx_menu\000"
 16921      6D656E75 
 16921      00
 16922              	.LASF263:
 16923 0b67 4E5F494D 		.ascii	"N_IMU_Connected\000"
 16923      555F436F 
 16923      6E6E6563 
 16923      74656400 
 16924              	.LASF39:
 16925 0b77 434D445F 		.ascii	"CMD_GET_INPUTS\000"
 16925      4745545F 
 16925      494E5055 
 16925      545300
 16926              	.LASF188:
 16927 0b86 6964735F 		.ascii	"ids_str\000"
 16927      73747200 
 16928              	.LASF27:
 16929 0b8e 434D445F 		.ascii	"CMD_SET_ZEROS\000"
 16929      5345545F 
 16929      5A45524F 
 16929      5300
 16930              	.LASF196:
 16931 0b9c 6D61675F 		.ascii	"mag_param_str_len\000"
 16931      70617261 
 16931      6D5F7374 
 16931      725F6C65 
 16931      6E00
 16932              	.LASF182:
 16933 0bae 6E756D5F 		.ascii	"num_imus_id_params\000"
 16933      696D7573 
 16933      5F69645F 
 16933      70617261 
 16933      6D7300
 16934              	.LASF165:
 16935 0bc1 6175785F 		.ascii	"aux_int16\000"
 16935      696E7431 
 16935      3600
 16936              	.LASF269:
 16937 0bcb 45455052 		.ascii	"EEPROM_ADDR\000"
 16937      4F4D5F41 
 16937      44445200 
 16938              	.LASF175:
 16939 0bd7 7965735F 		.ascii	"yes_no_menu\000"
 16939      6E6F5F6D 
 16939      656E7500 
 16940              	.LASF265:
 16941 0be3 696D7573 		.ascii	"imus_data_size\000"
 16941      5F646174 
 16941      615F7369 
 16941      7A6500
 16942              	.LASF246:
 16943 0bf2 49544D5F 		.ascii	"ITM_RxBuffer\000"
 16943      52784275 
 16943      66666572 
 16943      00
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 380


 16944              	.LASF44:
 16945 0bff 434D445F 		.ascii	"CMD_GET_VELOCITIES\000"
 16945      4745545F 
 16945      56454C4F 
 16945      43495449 
 16945      455300
 16946              	.LASF261:
 16947 0c12 706F775F 		.ascii	"pow_tension\000"
 16947      74656E73 
 16947      696F6E00 
 16948              	.LASF34:
 16949 0c1e 434D445F 		.ascii	"CMD_GET_PARAM_LIST\000"
 16949      4745545F 
 16949      50415241 
 16949      4D5F4C49 
 16949      535400
 16950              	.LASF69:
 16951 0c31 64617461 		.ascii	"data_types\000"
 16951      5F747970 
 16951      657300
 16952              	.LASF17:
 16953 0c3c 696E7431 		.ascii	"int16\000"
 16953      3600
 16954              	.LASF127:
 16955 0c42 73776974 		.ascii	"switch_emg\000"
 16955      63685F65 
 16955      6D6700
 16956              	.LASF116:
 16957 0c4d 61637469 		.ascii	"activate_pwm_rescaling\000"
 16957      76617465 
 16957      5F70776D 
 16957      5F726573 
 16957      63616C69 
 16958              	.LASF93:
 16959 0c64 6B5F705F 		.ascii	"k_p_dl\000"
 16959      646C00
 16960              	.LASF83:
 16961 0c6b 65737469 		.ascii	"estim_curr\000"
 16961      6D5F6375 
 16961      727200
 16962              	.LASF259:
 16963 0c76 6465765F 		.ascii	"dev_pwm_limit\000"
 16963      70776D5F 
 16963      6C696D69 
 16963      7400
 16964              	.LASF12:
 16965 0c84 75696E74 		.ascii	"uint32_t\000"
 16965      33325F74 
 16965      00
 16966              	.LASF164:
 16967 0c8d 6175785F 		.ascii	"aux_float\000"
 16967      666C6F61 
 16967      7400
 16968              	.LASF264:
 16969 0c97 494D555F 		.ascii	"IMU_connected\000"
 16969      636F6E6E 
 16969      65637465 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 381


 16969      6400
 16970              	.LASF171:
 16971 0ca5 4E554D5F 		.ascii	"NUM_MENU\000"
 16971      4D454E55 
 16971      00
 16972              	.LASF167:
 16973 0cae 6175785F 		.ascii	"aux_int32\000"
 16973      696E7433 
 16973      3200
 16974              	.LASF118:
 16975 0cb8 62617564 		.ascii	"baud_rate\000"
 16975      5F726174 
 16975      6500
 16976              	.LASF233:
 16977 0cc2 636D645F 		.ascii	"cmd_get_currents_for_cuff\000"
 16977      6765745F 
 16977      63757272 
 16977      656E7473 
 16977      5F666F72 
 16978              	.LASF177:
 16979 0cdc 696E666F 		.ascii	"info_type\000"
 16979      5F747970 
 16979      6500
 16980              	.LASF49:
 16981 0ce6 434D445F 		.ascii	"CMD_GET_IMU_READINGS\000"
 16981      4745545F 
 16981      494D555F 
 16981      52454144 
 16981      494E4753 
 16982              	.LASF217:
 16983 0cfb 4C435243 		.ascii	"LCRChecksum\000"
 16983      6865636B 
 16983      73756D00 
 16984              	.LASF243:
 16985 0d07 6B5F696D 		.ascii	"k_imu\000"
 16985      7500
 16986              	.LASF3:
 16987 0d0d 73686F72 		.ascii	"short unsigned int\000"
 16987      7420756E 
 16987      7369676E 
 16987      65642069 
 16987      6E7400
 16988              	.LASF140:
 16989 0d20 73745F69 		.ascii	"st_imu\000"
 16989      6D7500
 16990              	.LASF181:
 16991 0d27 6765745F 		.ascii	"get_IMU_param_list\000"
 16991      494D555F 
 16991      70617261 
 16991      6D5F6C69 
 16991      737400
 16992              	.LASF169:
 16993 0d3a 54595045 		.ascii	"TYPES\000"
 16993      5300
 16994              	.LASF247:
 16995 0d40 675F7265 		.ascii	"g_ref\000"
 16995      6600
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 382


 16996              	.LASF18:
 16997 0d46 696E7433 		.ascii	"int32\000"
 16997      3200
 16998              	.LASF156:
 16999 0d4c 696E666F 		.ascii	"infoGet\000"
 16999      47657400 
 17000              	.LASF104:
 17001 0d54 706F735F 		.ascii	"pos_lim_flag\000"
 17001      6C696D5F 
 17001      666C6167 
 17001      00
 17002              	.LASF251:
 17003 0d61 675F6D65 		.ascii	"g_measOld\000"
 17003      61734F6C 
 17003      6400
 17004              	.LASF59:
 17005 0d6b 434F4E54 		.ascii	"CONTROL_ANGLE\000"
 17005      524F4C5F 
 17005      414E474C 
 17005      4500
 17006              	.LASF234:
 17007 0d79 636D645F 		.ascii	"cmd_activate\000"
 17007      61637469 
 17007      76617465 
 17007      00
 17008              	.LASF5:
 17009 0d86 5F5F696E 		.ascii	"__int32_t\000"
 17009      7433325F 
 17009      7400
 17010              	.LASF199:
 17011 0d90 7370695F 		.ascii	"spi_delay_menu\000"
 17011      64656C61 
 17011      795F6D65 
 17011      6E7500
 17012              	.LASF133:
 17013 0d9f 77697265 		.ascii	"wire_disp\000"
 17013      5F646973 
 17013      7000
 17014              	.LASF112:
 17015 0da9 656D675F 		.ascii	"emg_max_value\000"
 17015      6D61785F 
 17015      76616C75 
 17015      6500
 17016              	.LASF271:
 17017 0db7 2E2E5C73 		.ascii	"..\\src\\command_processing.c\000"
 17017      72635C63 
 17017      6F6D6D61 
 17017      6E645F70 
 17017      726F6365 
 17018              	.LASF109:
 17019 0dd3 63757272 		.ascii	"current_limit\000"
 17019      656E745F 
 17019      6C696D69 
 17019      7400
 17020              	.LASF51:
 17021 0de1 53485F69 		.ascii	"SH_input_mode\000"
 17021      6E707574 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccEKzqCJ.s 			page 383


 17021      5F6D6F64 
 17021      6500
 17022              	.LASF71:
 17023 0def 54595045 		.ascii	"TYPE_INT8\000"
 17023      5F494E54 
 17023      3800
 17024              	.LASF207:
 17025 0df9 494D555F 		.ascii	"IMU_reading_info\000"
 17025      72656164 
 17025      696E675F 
 17025      696E666F 
 17025      00
 17026              	.LASF14:
 17027 0e0a 75696E74 		.ascii	"uint16\000"
 17027      313600
 17028              	.LASF123:
 17029 0e11 72657374 		.ascii	"rest_delay\000"
 17029      5F64656C 
 17029      617900
 17030              	.LASF161:
 17031 0e1c 6175785F 		.ascii	"aux_str\000"
 17031      73747200 
 17032              	.LASF26:
 17033 0e24 434D445F 		.ascii	"CMD_PING\000"
 17033      50494E47 
 17033      00
 17034              	.LASF98:
 17035 0e2d 6B5F645F 		.ascii	"k_d_c_dl\000"
 17035      635F646C 
 17035      00
 17036              	.LASF149:
 17037 0e36 64697265 		.ascii	"direction\000"
 17037      6374696F 
 17037      6E00
 17038              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
