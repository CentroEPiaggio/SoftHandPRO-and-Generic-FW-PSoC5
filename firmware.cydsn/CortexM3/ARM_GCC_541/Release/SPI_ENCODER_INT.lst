ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccAkBnvC.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"SPI_ENCODER_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.SPI_ENCODER_TX_ISR,"ax",%progbits
  20              		.align	2
  21              		.global	SPI_ENCODER_TX_ISR
  22              		.thumb
  23              		.thumb_func
  24              		.type	SPI_ENCODER_TX_ISR, %function
  25              	SPI_ENCODER_TX_ISR:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\SPI_ENCODER_INT.c"
   1:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** * File Name: SPI_ENCODER_INT.c
   3:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** * Version 2.50
   4:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** *
   5:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** * Description:
   6:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** *  This file provides all Interrupt Service Routine (ISR) for the SPI Master
   7:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** *  component.
   8:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** *
   9:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** * Note:
  10:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** *  None.
  11:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** *
  12:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** ********************************************************************************
  13:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** *******************************************************************************/
  18:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** 
  19:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** #include "SPI_ENCODER_PVT.h"
  20:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** #include "cyapicallbacks.h"
  21:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** 
  22:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** /* User code required at start of ISR */
  23:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** /* `#START SPI_ENCODER_ISR_START_DEF` */
  24:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** 
  25:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** /* `#END` */
  26:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** 
  27:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** 
  28:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** /*******************************************************************************
  29:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** * Function Name: SPI_ENCODER_TX_ISR
  30:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** ********************************************************************************
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccAkBnvC.s 			page 2


  31:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** *
  32:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** * Summary:
  33:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** *  Interrupt Service Routine for TX portion of the SPI Master.
  34:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** *
  35:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** * Parameters:
  36:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** *  None.
  37:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** *
  38:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** * Return:
  39:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** *  None.
  40:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** *
  41:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** * Global variables:
  42:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** *  SPI_ENCODER_txBufferWrite - used for the account of the bytes which
  43:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** *  have been written down in the TX software buffer.
  44:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** *  SPI_ENCODER_txBufferRead - used for the account of the bytes which
  45:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** *  have been read from the TX software buffer, modified when exist data to
  46:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** *  sending and FIFO Not Full.
  47:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** *  SPI_ENCODER_txBuffer[SPI_ENCODER_TX_BUFFER_SIZE] - used to store
  48:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** *  data to sending.
  49:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** *  All described above Global variables are used when Software Buffer is used.
  50:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** *
  51:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** *******************************************************************************/
  52:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** CY_ISR(SPI_ENCODER_TX_ISR)
  53:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** {
  28              		.loc 1 53 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
  54:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****     #if(SPI_ENCODER_TX_SOFTWARE_BUF_ENABLED)
  55:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****         uint8 tmpStatus;
  56:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****     #endif /* (SPI_ENCODER_TX_SOFTWARE_BUF_ENABLED) */
  57:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** 
  58:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****     #ifdef SPI_ENCODER_TX_ISR_ENTRY_CALLBACK
  59:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****         SPI_ENCODER_TX_ISR_EntryCallback();
  60:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****     #endif /* SPI_ENCODER_TX_ISR_ENTRY_CALLBACK */
  61:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** 
  62:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****     /* User code required at start of ISR */
  63:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****     /* `#START SPI_ENCODER_TX_ISR_START` */
  64:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** 
  65:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****     /* `#END` */
  66:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****     
  67:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****     #if(SPI_ENCODER_TX_SOFTWARE_BUF_ENABLED)
  68:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****         /* Check if TX data buffer is not empty and there is space in TX FIFO */
  69:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****         while(SPI_ENCODER_txBufferRead != SPI_ENCODER_txBufferWrite)
  70:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****         {
  71:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****             tmpStatus = SPI_ENCODER_GET_STATUS_TX(SPI_ENCODER_swStatusTx);
  72:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****             SPI_ENCODER_swStatusTx = tmpStatus;
  73:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** 
  74:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****             if(0u != (SPI_ENCODER_swStatusTx & SPI_ENCODER_STS_TX_FIFO_NOT_FULL))
  75:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****             {
  76:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****                 if(0u == SPI_ENCODER_txBufferFull)
  77:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****                 {
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccAkBnvC.s 			page 3


  78:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****                    SPI_ENCODER_txBufferRead++;
  79:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** 
  80:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****                     if(SPI_ENCODER_txBufferRead >= SPI_ENCODER_TX_BUFFER_SIZE)
  81:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****                     {
  82:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****                         SPI_ENCODER_txBufferRead = 0u;
  83:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****                     }
  84:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****                 }
  85:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****                 else
  86:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****                 {
  87:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****                     SPI_ENCODER_txBufferFull = 0u;
  88:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****                 }
  89:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** 
  90:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****                 /* Put data element into the TX FIFO */
  91:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****                 CY_SET_REG16(SPI_ENCODER_TXDATA_PTR, 
  92:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****                                              SPI_ENCODER_txBuffer[SPI_ENCODER_txBufferRead]);
  93:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****             }
  94:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****             else
  95:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****             {
  96:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****                 break;
  97:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****             }
  98:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****         }
  99:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** 
 100:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****         if(SPI_ENCODER_txBufferRead == SPI_ENCODER_txBufferWrite)
 101:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****         {
 102:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****             /* TX Buffer is EMPTY: disable interrupt on TX NOT FULL */
 103:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****             SPI_ENCODER_TX_STATUS_MASK_REG &= ((uint8) ~SPI_ENCODER_STS_TX_FIFO_NOT_FULL);
 104:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****         }
 105:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** 
 106:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****     #endif /* (SPI_ENCODER_TX_SOFTWARE_BUF_ENABLED) */
 107:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** 
 108:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****     /* User code required at end of ISR (Optional) */
 109:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****     /* `#START SPI_ENCODER_TX_ISR_END` */
 110:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** 
 111:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****     /* `#END` */
 112:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****     
 113:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****     #ifdef SPI_ENCODER_TX_ISR_EXIT_CALLBACK
 114:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****         SPI_ENCODER_TX_ISR_ExitCallback();
 115:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****     #endif /* SPI_ENCODER_TX_ISR_EXIT_CALLBACK */
 116:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** }
  38              		.loc 1 116 0
  39 0004 00BF     		nop
  40 0006 BD46     		mov	sp, r7
  41              		.cfi_def_cfa_register 13
  42              		@ sp needed
  43 0008 80BC     		pop	{r7}
  44              		.cfi_restore 7
  45              		.cfi_def_cfa_offset 0
  46 000a 7047     		bx	lr
  47              		.cfi_endproc
  48              	.LFE0:
  49              		.size	SPI_ENCODER_TX_ISR, .-SPI_ENCODER_TX_ISR
  50              		.section	.text.SPI_ENCODER_RX_ISR,"ax",%progbits
  51              		.align	2
  52              		.global	SPI_ENCODER_RX_ISR
  53              		.thumb
  54              		.thumb_func
  55              		.type	SPI_ENCODER_RX_ISR, %function
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccAkBnvC.s 			page 4


  56              	SPI_ENCODER_RX_ISR:
  57              	.LFB1:
 117:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** 
 118:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** 
 119:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** /*******************************************************************************
 120:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** * Function Name: SPI_ENCODER_RX_ISR
 121:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** ********************************************************************************
 122:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** *
 123:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** * Summary:
 124:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** *  Interrupt Service Routine for RX portion of the SPI Master.
 125:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** *
 126:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** * Parameters:
 127:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** *  None.
 128:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** *
 129:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** * Return:
 130:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** *  None.
 131:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** *
 132:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** * Global variables:
 133:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** *  SPI_ENCODER_rxBufferWrite - used for the account of the bytes which
 134:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** *  have been written down in the RX software buffer modified when FIFO contains
 135:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** *  new data.
 136:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** *  SPI_ENCODER_rxBufferRead - used for the account of the bytes which
 137:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** *  have been read from the RX software buffer, modified when overflow occurred.
 138:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** *  SPI_ENCODER_rxBuffer[SPI_ENCODER_RX_BUFFER_SIZE] - used to store
 139:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** *  received data, modified when FIFO contains new data.
 140:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** *  All described above Global variables are used when Software Buffer is used.
 141:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** *
 142:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** *******************************************************************************/
 143:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** CY_ISR(SPI_ENCODER_RX_ISR)
 144:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** {
  58              		.loc 1 144 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 8
  61              		@ frame_needed = 1, uses_anonymous_args = 0
  62              		@ link register save eliminated.
  63 0000 80B4     		push	{r7}
  64              		.cfi_def_cfa_offset 4
  65              		.cfi_offset 7, -4
  66 0002 83B0     		sub	sp, sp, #12
  67              		.cfi_def_cfa_offset 16
  68 0004 00AF     		add	r7, sp, #0
  69              		.cfi_def_cfa_register 7
 145:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****     #if(SPI_ENCODER_RX_SOFTWARE_BUF_ENABLED)
 146:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****         uint8 tmpStatus;
 147:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****         uint16 rxData;
 148:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****     #endif /* (SPI_ENCODER_RX_SOFTWARE_BUF_ENABLED) */
 149:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** 
 150:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****     #ifdef SPI_ENCODER_RX_ISR_ENTRY_CALLBACK
 151:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****         SPI_ENCODER_RX_ISR_EntryCallback();
 152:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****     #endif /* SPI_ENCODER_RX_ISR_ENTRY_CALLBACK */
 153:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** 
 154:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****     /* User code required at start of ISR */
 155:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****     /* `#START SPI_ENCODER_RX_ISR_START` */
 156:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** 
 157:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****     /* `#END` */
 158:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****     
 159:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****     #if(SPI_ENCODER_RX_SOFTWARE_BUF_ENABLED)
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccAkBnvC.s 			page 5


 160:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** 
 161:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****         tmpStatus = SPI_ENCODER_GET_STATUS_RX(SPI_ENCODER_swStatusRx);
  70              		.loc 1 161 0
  71 0006 2E4B     		ldr	r3, .L8
  72 0008 1B78     		ldrb	r3, [r3]
  73 000a DAB2     		uxtb	r2, r3
  74 000c 2D4B     		ldr	r3, .L8+4
  75 000e 1B78     		ldrb	r3, [r3]
  76 0010 DBB2     		uxtb	r3, r3
  77 0012 03F04003 		and	r3, r3, #64
  78 0016 DBB2     		uxtb	r3, r3
  79 0018 1343     		orrs	r3, r3, r2
  80 001a FB71     		strb	r3, [r7, #7]
 162:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****         SPI_ENCODER_swStatusRx = tmpStatus;
  81              		.loc 1 162 0
  82 001c 294A     		ldr	r2, .L8+4
  83 001e FB79     		ldrb	r3, [r7, #7]
  84 0020 1370     		strb	r3, [r2]
 163:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** 
 164:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****         /* Check if RX data FIFO has some data to be moved into the RX Buffer */
 165:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****         while(0u != (SPI_ENCODER_swStatusRx & SPI_ENCODER_STS_RX_FIFO_NOT_EMPTY))
  85              		.loc 1 165 0
  86 0022 41E0     		b	.L3
  87              	.L7:
 166:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****         {
 167:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****             rxData = CY_GET_REG16(SPI_ENCODER_RXDATA_PTR);
  88              		.loc 1 167 0
  89 0024 284B     		ldr	r3, .L8+8
  90 0026 1B88     		ldrh	r3, [r3]	@ movhi
  91 0028 BB80     		strh	r3, [r7, #4]	@ movhi
 168:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** 
 169:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****             /* Set next pointer. */
 170:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****             SPI_ENCODER_rxBufferWrite++;
  92              		.loc 1 170 0
  93 002a 284B     		ldr	r3, .L8+12
  94 002c 1B78     		ldrb	r3, [r3]
  95 002e DBB2     		uxtb	r3, r3
  96 0030 0133     		adds	r3, r3, #1
  97 0032 DAB2     		uxtb	r2, r3
  98 0034 254B     		ldr	r3, .L8+12
  99 0036 1A70     		strb	r2, [r3]
 171:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****             if(SPI_ENCODER_rxBufferWrite >= SPI_ENCODER_RX_BUFFER_SIZE)
 100              		.loc 1 171 0
 101 0038 244B     		ldr	r3, .L8+12
 102 003a 1B78     		ldrb	r3, [r3]
 103 003c DBB2     		uxtb	r3, r3
 104 003e 092B     		cmp	r3, #9
 105 0040 02D9     		bls	.L4
 172:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****             {
 173:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****                 SPI_ENCODER_rxBufferWrite = 0u;
 106              		.loc 1 173 0
 107 0042 224B     		ldr	r3, .L8+12
 108 0044 0022     		movs	r2, #0
 109 0046 1A70     		strb	r2, [r3]
 110              	.L4:
 174:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****             }
 175:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccAkBnvC.s 			page 6


 176:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****             if(SPI_ENCODER_rxBufferWrite == SPI_ENCODER_rxBufferRead)
 111              		.loc 1 176 0
 112 0048 204B     		ldr	r3, .L8+12
 113 004a 1B78     		ldrb	r3, [r3]
 114 004c DAB2     		uxtb	r2, r3
 115 004e 204B     		ldr	r3, .L8+16
 116 0050 1B78     		ldrb	r3, [r3]
 117 0052 DBB2     		uxtb	r3, r3
 118 0054 9A42     		cmp	r2, r3
 119 0056 11D1     		bne	.L5
 177:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****             {
 178:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****                 SPI_ENCODER_rxBufferRead++;
 120              		.loc 1 178 0
 121 0058 1D4B     		ldr	r3, .L8+16
 122 005a 1B78     		ldrb	r3, [r3]
 123 005c DBB2     		uxtb	r3, r3
 124 005e 0133     		adds	r3, r3, #1
 125 0060 DAB2     		uxtb	r2, r3
 126 0062 1B4B     		ldr	r3, .L8+16
 127 0064 1A70     		strb	r2, [r3]
 179:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****                 if(SPI_ENCODER_rxBufferRead >= SPI_ENCODER_RX_BUFFER_SIZE)
 128              		.loc 1 179 0
 129 0066 1A4B     		ldr	r3, .L8+16
 130 0068 1B78     		ldrb	r3, [r3]
 131 006a DBB2     		uxtb	r3, r3
 132 006c 092B     		cmp	r3, #9
 133 006e 02D9     		bls	.L6
 180:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****                 {
 181:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****                     SPI_ENCODER_rxBufferRead = 0u;
 134              		.loc 1 181 0
 135 0070 174B     		ldr	r3, .L8+16
 136 0072 0022     		movs	r2, #0
 137 0074 1A70     		strb	r2, [r3]
 138              	.L6:
 182:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****                 }
 183:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** 
 184:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****                 SPI_ENCODER_rxBufferFull = 1u;
 139              		.loc 1 184 0
 140 0076 174B     		ldr	r3, .L8+20
 141 0078 0122     		movs	r2, #1
 142 007a 1A70     		strb	r2, [r3]
 143              	.L5:
 185:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****             }
 186:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** 
 187:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****             /* Move data from the FIFO to the Buffer */
 188:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****             SPI_ENCODER_rxBuffer[SPI_ENCODER_rxBufferWrite] = rxData;
 144              		.loc 1 188 0
 145 007c 134B     		ldr	r3, .L8+12
 146 007e 1B78     		ldrb	r3, [r3]
 147 0080 DBB2     		uxtb	r3, r3
 148 0082 1946     		mov	r1, r3
 149 0084 144A     		ldr	r2, .L8+24
 150 0086 BB88     		ldrh	r3, [r7, #4]	@ movhi
 151 0088 22F81130 		strh	r3, [r2, r1, lsl #1]	@ movhi
 189:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** 
 190:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****             tmpStatus = SPI_ENCODER_GET_STATUS_RX(SPI_ENCODER_swStatusRx);
 152              		.loc 1 190 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccAkBnvC.s 			page 7


 153 008c 0C4B     		ldr	r3, .L8
 154 008e 1B78     		ldrb	r3, [r3]
 155 0090 DAB2     		uxtb	r2, r3
 156 0092 0C4B     		ldr	r3, .L8+4
 157 0094 1B78     		ldrb	r3, [r3]
 158 0096 DBB2     		uxtb	r3, r3
 159 0098 03F04003 		and	r3, r3, #64
 160 009c DBB2     		uxtb	r3, r3
 161 009e 1343     		orrs	r3, r3, r2
 162 00a0 FB71     		strb	r3, [r7, #7]
 191:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****             SPI_ENCODER_swStatusRx = tmpStatus;
 163              		.loc 1 191 0
 164 00a2 084A     		ldr	r2, .L8+4
 165 00a4 FB79     		ldrb	r3, [r7, #7]
 166 00a6 1370     		strb	r3, [r2]
 167              	.L3:
 165:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****         {
 168              		.loc 1 165 0
 169 00a8 064B     		ldr	r3, .L8+4
 170 00aa 1B78     		ldrb	r3, [r3]
 171 00ac DBB2     		uxtb	r3, r3
 172 00ae 03F02003 		and	r3, r3, #32
 173 00b2 002B     		cmp	r3, #0
 174 00b4 B6D1     		bne	.L7
 192:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****         }
 193:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** 
 194:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****     #endif /* (SPI_ENCODER_RX_SOFTWARE_BUF_ENABLED) */
 195:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** 
 196:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****     /* User code required at end of ISR (Optional) */
 197:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****     /* `#START SPI_ENCODER_RX_ISR_END` */
 198:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** 
 199:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****     /* `#END` */
 200:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****     
 201:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****     #ifdef SPI_ENCODER_RX_ISR_EXIT_CALLBACK
 202:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****         SPI_ENCODER_RX_ISR_ExitCallback();
 203:Generated_Source\PSoC5/SPI_ENCODER_INT.c ****     #endif /* SPI_ENCODER_RX_ISR_EXIT_CALLBACK */
 204:Generated_Source\PSoC5/SPI_ENCODER_INT.c **** }
 175              		.loc 1 204 0
 176 00b6 00BF     		nop
 177 00b8 0C37     		adds	r7, r7, #12
 178              		.cfi_def_cfa_offset 4
 179 00ba BD46     		mov	sp, r7
 180              		.cfi_def_cfa_register 13
 181              		@ sp needed
 182 00bc 80BC     		pop	{r7}
 183              		.cfi_restore 7
 184              		.cfi_def_cfa_offset 0
 185 00be 7047     		bx	lr
 186              	.L9:
 187              		.align	2
 188              	.L8:
 189 00c0 6C640040 		.word	1073767532
 190 00c4 00000000 		.word	SPI_ENCODER_swStatusRx
 191 00c8 52640040 		.word	1073767506
 192 00cc 00000000 		.word	SPI_ENCODER_rxBufferWrite
 193 00d0 00000000 		.word	SPI_ENCODER_rxBufferRead
 194 00d4 00000000 		.word	SPI_ENCODER_rxBufferFull
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccAkBnvC.s 			page 8


 195 00d8 00000000 		.word	SPI_ENCODER_rxBuffer
 196              		.cfi_endproc
 197              	.LFE1:
 198              		.size	SPI_ENCODER_RX_ISR, .-SPI_ENCODER_RX_ISR
 199              		.text
 200              	.Letext0:
 201              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 202              		.file 3 "Generated_Source\\PSoC5\\SPI_ENCODER_PVT.h"
 203              		.section	.debug_info,"",%progbits
 204              	.Ldebug_info0:
 205 0000 54010000 		.4byte	0x154
 206 0004 0400     		.2byte	0x4
 207 0006 00000000 		.4byte	.Ldebug_abbrev0
 208 000a 04       		.byte	0x4
 209 000b 01       		.uleb128 0x1
 210 000c 06000000 		.4byte	.LASF25
 211 0010 0C       		.byte	0xc
 212 0011 2B010000 		.4byte	.LASF26
 213 0015 1D020000 		.4byte	.LASF27
 214 0019 00000000 		.4byte	.Ldebug_ranges0+0
 215 001d 00000000 		.4byte	0
 216 0021 00000000 		.4byte	.Ldebug_line0
 217 0025 02       		.uleb128 0x2
 218 0026 01       		.byte	0x1
 219 0027 06       		.byte	0x6
 220 0028 62020000 		.4byte	.LASF0
 221 002c 02       		.uleb128 0x2
 222 002d 01       		.byte	0x1
 223 002e 08       		.byte	0x8
 224 002f F2000000 		.4byte	.LASF1
 225 0033 02       		.uleb128 0x2
 226 0034 02       		.byte	0x2
 227 0035 05       		.byte	0x5
 228 0036 DD010000 		.4byte	.LASF2
 229 003a 02       		.uleb128 0x2
 230 003b 02       		.byte	0x2
 231 003c 07       		.byte	0x7
 232 003d AD000000 		.4byte	.LASF3
 233 0041 02       		.uleb128 0x2
 234 0042 04       		.byte	0x4
 235 0043 05       		.byte	0x5
 236 0044 FE010000 		.4byte	.LASF4
 237 0048 02       		.uleb128 0x2
 238 0049 04       		.byte	0x4
 239 004a 07       		.byte	0x7
 240 004b 05010000 		.4byte	.LASF5
 241 004f 02       		.uleb128 0x2
 242 0050 08       		.byte	0x8
 243 0051 05       		.byte	0x5
 244 0052 B5010000 		.4byte	.LASF6
 245 0056 02       		.uleb128 0x2
 246 0057 08       		.byte	0x8
 247 0058 07       		.byte	0x7
 248 0059 68010000 		.4byte	.LASF7
 249 005d 03       		.uleb128 0x3
 250 005e 04       		.byte	0x4
 251 005f 05       		.byte	0x5
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccAkBnvC.s 			page 9


 252 0060 696E7400 		.ascii	"int\000"
 253 0064 02       		.uleb128 0x2
 254 0065 04       		.byte	0x4
 255 0066 07       		.byte	0x7
 256 0067 5B010000 		.4byte	.LASF8
 257 006b 04       		.uleb128 0x4
 258 006c 17010000 		.4byte	.LASF9
 259 0070 02       		.byte	0x2
 260 0071 E401     		.2byte	0x1e4
 261 0073 2C000000 		.4byte	0x2c
 262 0077 04       		.uleb128 0x4
 263 0078 54010000 		.4byte	.LASF10
 264 007c 02       		.byte	0x2
 265 007d E501     		.2byte	0x1e5
 266 007f 3A000000 		.4byte	0x3a
 267 0083 02       		.uleb128 0x2
 268 0084 04       		.byte	0x4
 269 0085 04       		.byte	0x4
 270 0086 D3000000 		.4byte	.LASF11
 271 008a 02       		.uleb128 0x2
 272 008b 08       		.byte	0x8
 273 008c 04       		.byte	0x4
 274 008d 24010000 		.4byte	.LASF12
 275 0091 02       		.uleb128 0x2
 276 0092 01       		.byte	0x1
 277 0093 08       		.byte	0x8
 278 0094 D8010000 		.4byte	.LASF13
 279 0098 04       		.uleb128 0x4
 280 0099 00010000 		.4byte	.LASF14
 281 009d 02       		.byte	0x2
 282 009e 8E02     		.2byte	0x28e
 283 00a0 A4000000 		.4byte	0xa4
 284 00a4 05       		.uleb128 0x5
 285 00a5 6B000000 		.4byte	0x6b
 286 00a9 04       		.uleb128 0x4
 287 00aa 00000000 		.4byte	.LASF15
 288 00ae 02       		.byte	0x2
 289 00af 8F02     		.2byte	0x28f
 290 00b1 B5000000 		.4byte	0xb5
 291 00b5 05       		.uleb128 0x5
 292 00b6 77000000 		.4byte	0x77
 293 00ba 02       		.uleb128 0x2
 294 00bb 08       		.byte	0x8
 295 00bc 04       		.byte	0x4
 296 00bd 11020000 		.4byte	.LASF16
 297 00c1 02       		.uleb128 0x2
 298 00c2 04       		.byte	0x4
 299 00c3 07       		.byte	0x7
 300 00c4 92010000 		.4byte	.LASF17
 301 00c8 06       		.uleb128 0x6
 302 00c9 C0000000 		.4byte	.LASF28
 303 00cd 01       		.byte	0x1
 304 00ce 34       		.byte	0x34
 305 00cf 00000000 		.4byte	.LFB0
 306 00d3 0C000000 		.4byte	.LFE0-.LFB0
 307 00d7 01       		.uleb128 0x1
 308 00d8 9C       		.byte	0x9c
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccAkBnvC.s 			page 10


 309 00d9 07       		.uleb128 0x7
 310 00da 7F010000 		.4byte	.LASF29
 311 00de 01       		.byte	0x1
 312 00df 8F       		.byte	0x8f
 313 00e0 00000000 		.4byte	.LFB1
 314 00e4 DC000000 		.4byte	.LFE1-.LFB1
 315 00e8 01       		.uleb128 0x1
 316 00e9 9C       		.byte	0x9c
 317 00ea 0B010000 		.4byte	0x10b
 318 00ee 08       		.uleb128 0x8
 319 00ef 07020000 		.4byte	.LASF18
 320 00f3 01       		.byte	0x1
 321 00f4 92       		.byte	0x92
 322 00f5 6B000000 		.4byte	0x6b
 323 00f9 02       		.uleb128 0x2
 324 00fa 91       		.byte	0x91
 325 00fb 77       		.sleb128 -9
 326 00fc 08       		.uleb128 0x8
 327 00fd 1D010000 		.4byte	.LASF19
 328 0101 01       		.byte	0x1
 329 0102 93       		.byte	0x93
 330 0103 77000000 		.4byte	0x77
 331 0107 02       		.uleb128 0x2
 332 0108 91       		.byte	0x91
 333 0109 74       		.sleb128 -12
 334 010a 00       		.byte	0
 335 010b 09       		.uleb128 0x9
 336 010c E7010000 		.4byte	.LASF20
 337 0110 03       		.byte	0x3
 338 0111 22       		.byte	0x22
 339 0112 A4000000 		.4byte	0xa4
 340 0116 0A       		.uleb128 0xa
 341 0117 B5000000 		.4byte	0xb5
 342 011b 26010000 		.4byte	0x126
 343 011f 0B       		.uleb128 0xb
 344 0120 C1000000 		.4byte	0xc1
 345 0124 09       		.byte	0x9
 346 0125 00       		.byte	0
 347 0126 09       		.uleb128 0x9
 348 0127 C3010000 		.4byte	.LASF21
 349 012b 03       		.byte	0x3
 350 012c 2C       		.byte	0x2c
 351 012d 31010000 		.4byte	0x131
 352 0131 05       		.uleb128 0x5
 353 0132 16010000 		.4byte	0x116
 354 0136 09       		.uleb128 0x9
 355 0137 D9000000 		.4byte	.LASF22
 356 013b 03       		.byte	0x3
 357 013c 2D       		.byte	0x2d
 358 013d A4000000 		.4byte	0xa4
 359 0141 09       		.uleb128 0x9
 360 0142 9B010000 		.4byte	.LASF23
 361 0146 03       		.byte	0x3
 362 0147 2E       		.byte	0x2e
 363 0148 A4000000 		.4byte	0xa4
 364 014c 09       		.uleb128 0x9
 365 014d 94000000 		.4byte	.LASF24
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccAkBnvC.s 			page 11


 366 0151 03       		.byte	0x3
 367 0152 2F       		.byte	0x2f
 368 0153 A4000000 		.4byte	0xa4
 369 0157 00       		.byte	0
 370              		.section	.debug_abbrev,"",%progbits
 371              	.Ldebug_abbrev0:
 372 0000 01       		.uleb128 0x1
 373 0001 11       		.uleb128 0x11
 374 0002 01       		.byte	0x1
 375 0003 25       		.uleb128 0x25
 376 0004 0E       		.uleb128 0xe
 377 0005 13       		.uleb128 0x13
 378 0006 0B       		.uleb128 0xb
 379 0007 03       		.uleb128 0x3
 380 0008 0E       		.uleb128 0xe
 381 0009 1B       		.uleb128 0x1b
 382 000a 0E       		.uleb128 0xe
 383 000b 55       		.uleb128 0x55
 384 000c 17       		.uleb128 0x17
 385 000d 11       		.uleb128 0x11
 386 000e 01       		.uleb128 0x1
 387 000f 10       		.uleb128 0x10
 388 0010 17       		.uleb128 0x17
 389 0011 00       		.byte	0
 390 0012 00       		.byte	0
 391 0013 02       		.uleb128 0x2
 392 0014 24       		.uleb128 0x24
 393 0015 00       		.byte	0
 394 0016 0B       		.uleb128 0xb
 395 0017 0B       		.uleb128 0xb
 396 0018 3E       		.uleb128 0x3e
 397 0019 0B       		.uleb128 0xb
 398 001a 03       		.uleb128 0x3
 399 001b 0E       		.uleb128 0xe
 400 001c 00       		.byte	0
 401 001d 00       		.byte	0
 402 001e 03       		.uleb128 0x3
 403 001f 24       		.uleb128 0x24
 404 0020 00       		.byte	0
 405 0021 0B       		.uleb128 0xb
 406 0022 0B       		.uleb128 0xb
 407 0023 3E       		.uleb128 0x3e
 408 0024 0B       		.uleb128 0xb
 409 0025 03       		.uleb128 0x3
 410 0026 08       		.uleb128 0x8
 411 0027 00       		.byte	0
 412 0028 00       		.byte	0
 413 0029 04       		.uleb128 0x4
 414 002a 16       		.uleb128 0x16
 415 002b 00       		.byte	0
 416 002c 03       		.uleb128 0x3
 417 002d 0E       		.uleb128 0xe
 418 002e 3A       		.uleb128 0x3a
 419 002f 0B       		.uleb128 0xb
 420 0030 3B       		.uleb128 0x3b
 421 0031 05       		.uleb128 0x5
 422 0032 49       		.uleb128 0x49
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccAkBnvC.s 			page 12


 423 0033 13       		.uleb128 0x13
 424 0034 00       		.byte	0
 425 0035 00       		.byte	0
 426 0036 05       		.uleb128 0x5
 427 0037 35       		.uleb128 0x35
 428 0038 00       		.byte	0
 429 0039 49       		.uleb128 0x49
 430 003a 13       		.uleb128 0x13
 431 003b 00       		.byte	0
 432 003c 00       		.byte	0
 433 003d 06       		.uleb128 0x6
 434 003e 2E       		.uleb128 0x2e
 435 003f 00       		.byte	0
 436 0040 3F       		.uleb128 0x3f
 437 0041 19       		.uleb128 0x19
 438 0042 03       		.uleb128 0x3
 439 0043 0E       		.uleb128 0xe
 440 0044 3A       		.uleb128 0x3a
 441 0045 0B       		.uleb128 0xb
 442 0046 3B       		.uleb128 0x3b
 443 0047 0B       		.uleb128 0xb
 444 0048 27       		.uleb128 0x27
 445 0049 19       		.uleb128 0x19
 446 004a 11       		.uleb128 0x11
 447 004b 01       		.uleb128 0x1
 448 004c 12       		.uleb128 0x12
 449 004d 06       		.uleb128 0x6
 450 004e 40       		.uleb128 0x40
 451 004f 18       		.uleb128 0x18
 452 0050 9742     		.uleb128 0x2117
 453 0052 19       		.uleb128 0x19
 454 0053 00       		.byte	0
 455 0054 00       		.byte	0
 456 0055 07       		.uleb128 0x7
 457 0056 2E       		.uleb128 0x2e
 458 0057 01       		.byte	0x1
 459 0058 3F       		.uleb128 0x3f
 460 0059 19       		.uleb128 0x19
 461 005a 03       		.uleb128 0x3
 462 005b 0E       		.uleb128 0xe
 463 005c 3A       		.uleb128 0x3a
 464 005d 0B       		.uleb128 0xb
 465 005e 3B       		.uleb128 0x3b
 466 005f 0B       		.uleb128 0xb
 467 0060 27       		.uleb128 0x27
 468 0061 19       		.uleb128 0x19
 469 0062 11       		.uleb128 0x11
 470 0063 01       		.uleb128 0x1
 471 0064 12       		.uleb128 0x12
 472 0065 06       		.uleb128 0x6
 473 0066 40       		.uleb128 0x40
 474 0067 18       		.uleb128 0x18
 475 0068 9742     		.uleb128 0x2117
 476 006a 19       		.uleb128 0x19
 477 006b 01       		.uleb128 0x1
 478 006c 13       		.uleb128 0x13
 479 006d 00       		.byte	0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccAkBnvC.s 			page 13


 480 006e 00       		.byte	0
 481 006f 08       		.uleb128 0x8
 482 0070 34       		.uleb128 0x34
 483 0071 00       		.byte	0
 484 0072 03       		.uleb128 0x3
 485 0073 0E       		.uleb128 0xe
 486 0074 3A       		.uleb128 0x3a
 487 0075 0B       		.uleb128 0xb
 488 0076 3B       		.uleb128 0x3b
 489 0077 0B       		.uleb128 0xb
 490 0078 49       		.uleb128 0x49
 491 0079 13       		.uleb128 0x13
 492 007a 02       		.uleb128 0x2
 493 007b 18       		.uleb128 0x18
 494 007c 00       		.byte	0
 495 007d 00       		.byte	0
 496 007e 09       		.uleb128 0x9
 497 007f 34       		.uleb128 0x34
 498 0080 00       		.byte	0
 499 0081 03       		.uleb128 0x3
 500 0082 0E       		.uleb128 0xe
 501 0083 3A       		.uleb128 0x3a
 502 0084 0B       		.uleb128 0xb
 503 0085 3B       		.uleb128 0x3b
 504 0086 0B       		.uleb128 0xb
 505 0087 49       		.uleb128 0x49
 506 0088 13       		.uleb128 0x13
 507 0089 3F       		.uleb128 0x3f
 508 008a 19       		.uleb128 0x19
 509 008b 3C       		.uleb128 0x3c
 510 008c 19       		.uleb128 0x19
 511 008d 00       		.byte	0
 512 008e 00       		.byte	0
 513 008f 0A       		.uleb128 0xa
 514 0090 01       		.uleb128 0x1
 515 0091 01       		.byte	0x1
 516 0092 49       		.uleb128 0x49
 517 0093 13       		.uleb128 0x13
 518 0094 01       		.uleb128 0x1
 519 0095 13       		.uleb128 0x13
 520 0096 00       		.byte	0
 521 0097 00       		.byte	0
 522 0098 0B       		.uleb128 0xb
 523 0099 21       		.uleb128 0x21
 524 009a 00       		.byte	0
 525 009b 49       		.uleb128 0x49
 526 009c 13       		.uleb128 0x13
 527 009d 2F       		.uleb128 0x2f
 528 009e 0B       		.uleb128 0xb
 529 009f 00       		.byte	0
 530 00a0 00       		.byte	0
 531 00a1 00       		.byte	0
 532              		.section	.debug_aranges,"",%progbits
 533 0000 24000000 		.4byte	0x24
 534 0004 0200     		.2byte	0x2
 535 0006 00000000 		.4byte	.Ldebug_info0
 536 000a 04       		.byte	0x4
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccAkBnvC.s 			page 14


 537 000b 00       		.byte	0
 538 000c 0000     		.2byte	0
 539 000e 0000     		.2byte	0
 540 0010 00000000 		.4byte	.LFB0
 541 0014 0C000000 		.4byte	.LFE0-.LFB0
 542 0018 00000000 		.4byte	.LFB1
 543 001c DC000000 		.4byte	.LFE1-.LFB1
 544 0020 00000000 		.4byte	0
 545 0024 00000000 		.4byte	0
 546              		.section	.debug_ranges,"",%progbits
 547              	.Ldebug_ranges0:
 548 0000 00000000 		.4byte	.LFB0
 549 0004 0C000000 		.4byte	.LFE0
 550 0008 00000000 		.4byte	.LFB1
 551 000c DC000000 		.4byte	.LFE1
 552 0010 00000000 		.4byte	0
 553 0014 00000000 		.4byte	0
 554              		.section	.debug_line,"",%progbits
 555              	.Ldebug_line0:
 556 0000 A0000000 		.section	.debug_str,"MS",%progbits,1
 556      02006100 
 556      00000201 
 556      FB0E0D00 
 556      01010101 
 557              	.LASF15:
 558 0000 72656731 		.ascii	"reg16\000"
 558      3600
 559              	.LASF25:
 560 0006 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 560      43313120 
 560      352E342E 
 560      31203230 
 560      31363036 
 561 0039 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 561      20726576 
 561      6973696F 
 561      6E203233 
 561      37373135 
 562 006c 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 562      66756E63 
 562      74696F6E 
 562      2D736563 
 562      74696F6E 
 563              	.LASF24:
 564 0094 5350495F 		.ascii	"SPI_ENCODER_rxBufferFull\000"
 564      454E434F 
 564      4445525F 
 564      72784275 
 564      66666572 
 565              	.LASF3:
 566 00ad 73686F72 		.ascii	"short unsigned int\000"
 566      7420756E 
 566      7369676E 
 566      65642069 
 566      6E7400
 567              	.LASF28:
 568 00c0 5350495F 		.ascii	"SPI_ENCODER_TX_ISR\000"
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccAkBnvC.s 			page 15


 568      454E434F 
 568      4445525F 
 568      54585F49 
 568      535200
 569              	.LASF11:
 570 00d3 666C6F61 		.ascii	"float\000"
 570      7400
 571              	.LASF22:
 572 00d9 5350495F 		.ascii	"SPI_ENCODER_rxBufferRead\000"
 572      454E434F 
 572      4445525F 
 572      72784275 
 572      66666572 
 573              	.LASF1:
 574 00f2 756E7369 		.ascii	"unsigned char\000"
 574      676E6564 
 574      20636861 
 574      7200
 575              	.LASF14:
 576 0100 72656738 		.ascii	"reg8\000"
 576      00
 577              	.LASF5:
 578 0105 6C6F6E67 		.ascii	"long unsigned int\000"
 578      20756E73 
 578      69676E65 
 578      6420696E 
 578      7400
 579              	.LASF9:
 580 0117 75696E74 		.ascii	"uint8\000"
 580      3800
 581              	.LASF19:
 582 011d 72784461 		.ascii	"rxData\000"
 582      746100
 583              	.LASF12:
 584 0124 646F7562 		.ascii	"double\000"
 584      6C6500
 585              	.LASF26:
 586 012b 47656E65 		.ascii	"Generated_Source\\PSoC5\\SPI_ENCODER_INT.c\000"
 586      72617465 
 586      645F536F 
 586      75726365 
 586      5C50536F 
 587              	.LASF10:
 588 0154 75696E74 		.ascii	"uint16\000"
 588      313600
 589              	.LASF8:
 590 015b 756E7369 		.ascii	"unsigned int\000"
 590      676E6564 
 590      20696E74 
 590      00
 591              	.LASF7:
 592 0168 6C6F6E67 		.ascii	"long long unsigned int\000"
 592      206C6F6E 
 592      6720756E 
 592      7369676E 
 592      65642069 
 593              	.LASF29:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccAkBnvC.s 			page 16


 594 017f 5350495F 		.ascii	"SPI_ENCODER_RX_ISR\000"
 594      454E434F 
 594      4445525F 
 594      52585F49 
 594      535200
 595              	.LASF17:
 596 0192 73697A65 		.ascii	"sizetype\000"
 596      74797065 
 596      00
 597              	.LASF23:
 598 019b 5350495F 		.ascii	"SPI_ENCODER_rxBufferWrite\000"
 598      454E434F 
 598      4445525F 
 598      72784275 
 598      66666572 
 599              	.LASF6:
 600 01b5 6C6F6E67 		.ascii	"long long int\000"
 600      206C6F6E 
 600      6720696E 
 600      7400
 601              	.LASF21:
 602 01c3 5350495F 		.ascii	"SPI_ENCODER_rxBuffer\000"
 602      454E434F 
 602      4445525F 
 602      72784275 
 602      66666572 
 603              	.LASF13:
 604 01d8 63686172 		.ascii	"char\000"
 604      00
 605              	.LASF2:
 606 01dd 73686F72 		.ascii	"short int\000"
 606      7420696E 
 606      7400
 607              	.LASF20:
 608 01e7 5350495F 		.ascii	"SPI_ENCODER_swStatusRx\000"
 608      454E434F 
 608      4445525F 
 608      73775374 
 608      61747573 
 609              	.LASF4:
 610 01fe 6C6F6E67 		.ascii	"long int\000"
 610      20696E74 
 610      00
 611              	.LASF18:
 612 0207 746D7053 		.ascii	"tmpStatus\000"
 612      74617475 
 612      7300
 613              	.LASF16:
 614 0211 6C6F6E67 		.ascii	"long double\000"
 614      20646F75 
 614      626C6500 
 615              	.LASF27:
 616 021d 433A5C55 		.ascii	"C:\\Users\\MattiaCP\\Documents\\GITHUB\\SoftHand-PR"
 616      73657273 
 616      5C4D6174 
 616      74696143 
 616      505C446F 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccAkBnvC.s 			page 17


 617 024b 4F2D5053 		.ascii	"O-PSoC5\\firmware.cydsn\000"
 617      6F43355C 
 617      6669726D 
 617      77617265 
 617      2E637964 
 618              	.LASF0:
 619 0262 7369676E 		.ascii	"signed char\000"
 619      65642063 
 619      68617200 
 620              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
