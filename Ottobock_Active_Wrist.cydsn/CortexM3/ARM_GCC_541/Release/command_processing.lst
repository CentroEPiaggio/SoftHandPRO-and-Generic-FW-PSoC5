ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"command_processing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	EEPROM_ADDR
  20              		.data
  21              		.align	2
  22              		.type	EEPROM_ADDR, %object
  23              		.size	EEPROM_ADDR, 4
  24              	EEPROM_ADDR:
  25 0000 00800040 		.word	1073774592
  26              		.section	.text.commProcess,"ax",%progbits
  27              		.align	2
  28              		.global	commProcess
  29              		.thumb
  30              		.thumb_func
  31              		.type	commProcess, %function
  32              	commProcess:
  33              	.LFB64:
  34              		.file 1 "..\\src\\command_processing.c"
   1:..\src/command_processing.c **** // ----------------------------------------------------------------------------
   2:..\src/command_processing.c **** // BSD 3-Clause License
   3:..\src/command_processing.c **** 
   4:..\src/command_processing.c **** // Copyright (c) 2016, qbrobotics
   5:..\src/command_processing.c **** // Copyright (c) 2017-2020, Centro "E.Piaggio"
   6:..\src/command_processing.c **** // All rights reserved.
   7:..\src/command_processing.c **** 
   8:..\src/command_processing.c **** // Redistribution and use in source and binary forms, with or without
   9:..\src/command_processing.c **** // modification, are permitted provided that the following conditions are met:
  10:..\src/command_processing.c **** 
  11:..\src/command_processing.c **** // * Redistributions of source code must retain the above copyright notice, this
  12:..\src/command_processing.c **** //   list of conditions and the following disclaimer.
  13:..\src/command_processing.c **** 
  14:..\src/command_processing.c **** // * Redistributions in binary form must reproduce the above copyright notice,
  15:..\src/command_processing.c **** //   this list of conditions and the following disclaimer in the documentation
  16:..\src/command_processing.c **** //   and/or other materials provided with the distribution.
  17:..\src/command_processing.c **** 
  18:..\src/command_processing.c **** // * Neither the name of the copyright holder nor the names of its
  19:..\src/command_processing.c **** //   contributors may be used to endorse or promote products derived from
  20:..\src/command_processing.c **** //   this software without specific prior written permission.
  21:..\src/command_processing.c **** 
  22:..\src/command_processing.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:..\src/command_processing.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 2


  24:..\src/command_processing.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:..\src/command_processing.c **** // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:..\src/command_processing.c **** // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:..\src/command_processing.c **** // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:..\src/command_processing.c **** // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:..\src/command_processing.c **** // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:..\src/command_processing.c **** // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:..\src/command_processing.c **** // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:..\src/command_processing.c **** // POSSIBILITY OF SUCH DAMAGE.
  33:..\src/command_processing.c **** // ----------------------------------------------------------------------------
  34:..\src/command_processing.c **** 
  35:..\src/command_processing.c **** 
  36:..\src/command_processing.c **** /**
  37:..\src/command_processing.c **** * \file         command_processing.c
  38:..\src/command_processing.c **** *
  39:..\src/command_processing.c **** 
  40:..\src/command_processing.c **** * \brief        Command processing functions.
  41:..\src/command_processing.c **** * \date         March 20th, 2020
  42:..\src/command_processing.c **** * \author       _Centro "E.Piaggio"_
  43:..\src/command_processing.c **** * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  44:..\src/command_processing.c **** * \copyright    (C) 2017-2020 Centro "E.Piaggio". All rights reserved.
  45:..\src/command_processing.c **** */
  46:..\src/command_processing.c **** //=================================================================     includes
  47:..\src/command_processing.c **** #include "command_processing.h"
  48:..\src/command_processing.c **** 
  49:..\src/command_processing.c **** //================================================================     variables
  50:..\src/command_processing.c **** 
  51:..\src/command_processing.c **** reg8 * EEPROM_ADDR = (reg8 *) CYDEV_EE_BASE;
  52:..\src/command_processing.c **** 
  53:..\src/command_processing.c **** //==============================================================================
  54:..\src/command_processing.c **** //                                                            RX DATA PROCESSING
  55:..\src/command_processing.c **** //==============================================================================
  56:..\src/command_processing.c **** //  This function checks for the availability of a data packet and process it:
  57:..\src/command_processing.c **** //      - Verify checksum;
  58:..\src/command_processing.c **** //      - Process commands;
  59:..\src/command_processing.c **** //==============================================================================
  60:..\src/command_processing.c **** 
  61:..\src/command_processing.c **** void commProcess(void){
  35              		.loc 1 61 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 32
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 88B0     		sub	sp, sp, #32
  44              		.cfi_def_cfa_offset 40
  45 0004 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  62:..\src/command_processing.c **** 
  63:..\src/command_processing.c ****     uint8 CYDATA rx_cmd;
  64:..\src/command_processing.c ****     rx_cmd = g_rx.buffer[0];
  47              		.loc 1 64 0
  48 0006 E34B     		ldr	r3, .L49
  49 0008 1B78     		ldrb	r3, [r3]
  50 000a FB77     		strb	r3, [r7, #31]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 3


  65:..\src/command_processing.c **** 
  66:..\src/command_processing.c **** //==========================================================     verify checksum
  67:..\src/command_processing.c **** 
  68:..\src/command_processing.c ****     if (!(LCRChecksum(g_rx.buffer, g_rx.length - 1) == g_rx.buffer[g_rx.length - 1])){
  51              		.loc 1 68 0
  52 000c E14B     		ldr	r3, .L49
  53 000e B3F98030 		ldrsh	r3, [r3, #128]
  54 0012 DBB2     		uxtb	r3, r3
  55 0014 013B     		subs	r3, r3, #1
  56 0016 DBB2     		uxtb	r3, r3
  57 0018 1946     		mov	r1, r3
  58 001a DE48     		ldr	r0, .L49
  59 001c FFF7FEFF 		bl	LCRChecksum
  60 0020 0346     		mov	r3, r0
  61 0022 1946     		mov	r1, r3
  62 0024 DB4B     		ldr	r3, .L49
  63 0026 B3F98030 		ldrsh	r3, [r3, #128]
  64 002a 013B     		subs	r3, r3, #1
  65 002c D94A     		ldr	r2, .L49
  66 002e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
  67 0030 9942     		cmp	r1, r3
  68 0032 04D0     		beq	.L2
  69:..\src/command_processing.c ****         // Wrong checksum
  70:..\src/command_processing.c ****         g_rx.ready = 0;
  69              		.loc 1 70 0
  70 0034 D74B     		ldr	r3, .L49
  71 0036 0022     		movs	r2, #0
  72 0038 83F88420 		strb	r2, [r3, #132]
  71:..\src/command_processing.c ****         return;
  73              		.loc 1 71 0
  74 003c 44E2     		b	.L1
  75              	.L2:
  72:..\src/command_processing.c ****     }
  73:..\src/command_processing.c **** 
  74:..\src/command_processing.c ****     switch(rx_cmd) {
  76              		.loc 1 74 0
  77 003e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
  78 0040 A62B     		cmp	r3, #166
  79 0042 00F24082 		bhi	.L48
  80 0046 01A2     		adr	r2, .L6
  81 0048 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  82              		.p2align 2
  83              	.L6:
  84 004c 6D030000 		.word	.L5+1
  85 0050 4F030000 		.word	.L7+1
  86 0054 C7040000 		.word	.L48+1
  87 0058 73030000 		.word	.L8+1
  88 005c 79030000 		.word	.L9+1
  89 0060 9D030000 		.word	.L10+1
  90 0064 37030000 		.word	.L11+1
  91 0068 C7040000 		.word	.L48+1
  92 006c C7040000 		.word	.L48+1
  93 0070 D1030000 		.word	.L12+1
  94 0074 B7030000 		.word	.L13+1
  95 0078 C7040000 		.word	.L48+1
  96 007c 55030000 		.word	.L14+1
  97 0080 F3030000 		.word	.L15+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 4


  98 0084 C7040000 		.word	.L48+1
  99 0088 C7040000 		.word	.L48+1
 100 008c C7040000 		.word	.L48+1
 101 0090 C7040000 		.word	.L48+1
 102 0094 C7040000 		.word	.L48+1
 103 0098 C7040000 		.word	.L48+1
 104 009c C7040000 		.word	.L48+1
 105 00a0 C7040000 		.word	.L48+1
 106 00a4 C7040000 		.word	.L48+1
 107 00a8 C7040000 		.word	.L48+1
 108 00ac C7040000 		.word	.L48+1
 109 00b0 C7040000 		.word	.L48+1
 110 00b4 C7040000 		.word	.L48+1
 111 00b8 C7040000 		.word	.L48+1
 112 00bc C7040000 		.word	.L48+1
 113 00c0 C7040000 		.word	.L48+1
 114 00c4 C7040000 		.word	.L48+1
 115 00c8 C7040000 		.word	.L48+1
 116 00cc C7040000 		.word	.L48+1
 117 00d0 C7040000 		.word	.L48+1
 118 00d4 C7040000 		.word	.L48+1
 119 00d8 C7040000 		.word	.L48+1
 120 00dc C7040000 		.word	.L48+1
 121 00e0 C7040000 		.word	.L48+1
 122 00e4 C7040000 		.word	.L48+1
 123 00e8 C7040000 		.word	.L48+1
 124 00ec C7040000 		.word	.L48+1
 125 00f0 C7040000 		.word	.L48+1
 126 00f4 C7040000 		.word	.L48+1
 127 00f8 C7040000 		.word	.L48+1
 128 00fc C7040000 		.word	.L48+1
 129 0100 C7040000 		.word	.L48+1
 130 0104 C7040000 		.word	.L48+1
 131 0108 C7040000 		.word	.L48+1
 132 010c C7040000 		.word	.L48+1
 133 0110 C7040000 		.word	.L48+1
 134 0114 C7040000 		.word	.L48+1
 135 0118 C7040000 		.word	.L48+1
 136 011c C7040000 		.word	.L48+1
 137 0120 C7040000 		.word	.L48+1
 138 0124 C7040000 		.word	.L48+1
 139 0128 C7040000 		.word	.L48+1
 140 012c C7040000 		.word	.L48+1
 141 0130 C7040000 		.word	.L48+1
 142 0134 C7040000 		.word	.L48+1
 143 0138 C7040000 		.word	.L48+1
 144 013c C7040000 		.word	.L48+1
 145 0140 C7040000 		.word	.L48+1
 146 0144 C7040000 		.word	.L48+1
 147 0148 C7040000 		.word	.L48+1
 148 014c C7040000 		.word	.L48+1
 149 0150 C7040000 		.word	.L48+1
 150 0154 C7040000 		.word	.L48+1
 151 0158 C7040000 		.word	.L48+1
 152 015c C7040000 		.word	.L48+1
 153 0160 C7040000 		.word	.L48+1
 154 0164 C7040000 		.word	.L48+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 5


 155 0168 C7040000 		.word	.L48+1
 156 016c C7040000 		.word	.L48+1
 157 0170 C7040000 		.word	.L48+1
 158 0174 C7040000 		.word	.L48+1
 159 0178 C7040000 		.word	.L48+1
 160 017c C7040000 		.word	.L48+1
 161 0180 C7040000 		.word	.L48+1
 162 0184 C7040000 		.word	.L48+1
 163 0188 C7040000 		.word	.L48+1
 164 018c C7040000 		.word	.L48+1
 165 0190 C7040000 		.word	.L48+1
 166 0194 C7040000 		.word	.L48+1
 167 0198 C7040000 		.word	.L48+1
 168 019c C7040000 		.word	.L48+1
 169 01a0 C7040000 		.word	.L48+1
 170 01a4 C7040000 		.word	.L48+1
 171 01a8 C7040000 		.word	.L48+1
 172 01ac C7040000 		.word	.L48+1
 173 01b0 C7040000 		.word	.L48+1
 174 01b4 C7040000 		.word	.L48+1
 175 01b8 C7040000 		.word	.L48+1
 176 01bc C7040000 		.word	.L48+1
 177 01c0 C7040000 		.word	.L48+1
 178 01c4 C7040000 		.word	.L48+1
 179 01c8 C7040000 		.word	.L48+1
 180 01cc C7040000 		.word	.L48+1
 181 01d0 C7040000 		.word	.L48+1
 182 01d4 C7040000 		.word	.L48+1
 183 01d8 C7040000 		.word	.L48+1
 184 01dc C7040000 		.word	.L48+1
 185 01e0 C7040000 		.word	.L48+1
 186 01e4 C7040000 		.word	.L48+1
 187 01e8 C7040000 		.word	.L48+1
 188 01ec C7040000 		.word	.L48+1
 189 01f0 C7040000 		.word	.L48+1
 190 01f4 C7040000 		.word	.L48+1
 191 01f8 C7040000 		.word	.L48+1
 192 01fc C7040000 		.word	.L48+1
 193 0200 C7040000 		.word	.L48+1
 194 0204 C7040000 		.word	.L48+1
 195 0208 C7040000 		.word	.L48+1
 196 020c C7040000 		.word	.L48+1
 197 0210 C7040000 		.word	.L48+1
 198 0214 C7040000 		.word	.L48+1
 199 0218 C7040000 		.word	.L48+1
 200 021c C7040000 		.word	.L48+1
 201 0220 C7040000 		.word	.L48+1
 202 0224 C7040000 		.word	.L48+1
 203 0228 C7040000 		.word	.L48+1
 204 022c C7040000 		.word	.L48+1
 205 0230 C7040000 		.word	.L48+1
 206 0234 C7040000 		.word	.L48+1
 207 0238 C7040000 		.word	.L48+1
 208 023c C7040000 		.word	.L48+1
 209 0240 C7040000 		.word	.L48+1
 210 0244 C7040000 		.word	.L48+1
 211 0248 C7040000 		.word	.L48+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 6


 212 024c E9020000 		.word	.L16+1
 213 0250 25030000 		.word	.L17+1
 214 0254 EF020000 		.word	.L18+1
 215 0258 31030000 		.word	.L19+1
 216 025c F5020000 		.word	.L20+1
 217 0260 01030000 		.word	.L21+1
 218 0264 FB020000 		.word	.L22+1
 219 0268 C7040000 		.word	.L48+1
 220 026c 1F030000 		.word	.L23+1
 221 0270 0D030000 		.word	.L24+1
 222 0274 C7040000 		.word	.L48+1
 223 0278 13030000 		.word	.L25+1
 224 027c 07030000 		.word	.L26+1
 225 0280 C7040000 		.word	.L48+1
 226 0284 C7040000 		.word	.L48+1
 227 0288 C7040000 		.word	.L48+1
 228 028c 2B030000 		.word	.L27+1
 229 0290 C7040000 		.word	.L48+1
 230 0294 19030000 		.word	.L28+1
 231 0298 C7040000 		.word	.L48+1
 232 029c C7040000 		.word	.L48+1
 233 02a0 C7040000 		.word	.L48+1
 234 02a4 C7040000 		.word	.L48+1
 235 02a8 C7040000 		.word	.L48+1
 236 02ac C7040000 		.word	.L48+1
 237 02b0 C7040000 		.word	.L48+1
 238 02b4 C7040000 		.word	.L48+1
 239 02b8 C7040000 		.word	.L48+1
 240 02bc C7040000 		.word	.L48+1
 241 02c0 C7040000 		.word	.L48+1
 242 02c4 C7040000 		.word	.L48+1
 243 02c8 C7040000 		.word	.L48+1
 244 02cc C7040000 		.word	.L48+1
 245 02d0 91040000 		.word	.L29+1
 246 02d4 97040000 		.word	.L30+1
 247 02d8 AF040000 		.word	.L31+1
 248 02dc B5040000 		.word	.L32+1
 249 02e0 BB040000 		.word	.L33+1
 250 02e4 C1040000 		.word	.L34+1
 251              		.p2align 1
 252              	.L16:
  75:..\src/command_processing.c **** 
  76:..\src/command_processing.c **** //=============================================================     CMD_ACTIVATE
  77:..\src/command_processing.c ****         case CMD_ACTIVATE:
  78:..\src/command_processing.c ****             cmd_activate();
 253              		.loc 1 78 0
 254 02e8 FFF7FEFF 		bl	cmd_activate
  79:..\src/command_processing.c ****             break;
 255              		.loc 1 79 0
 256 02ec ECE0     		b	.L1
 257              	.L18:
  80:..\src/command_processing.c **** 
  81:..\src/command_processing.c **** //===========================================================     CMD_SET_INPUTS
  82:..\src/command_processing.c **** 
  83:..\src/command_processing.c ****         case CMD_SET_INPUTS:
  84:..\src/command_processing.c ****             cmd_set_inputs();
 258              		.loc 1 84 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 7


 259 02ee FFF7FEFF 		bl	cmd_set_inputs
  85:..\src/command_processing.c ****             break;
 260              		.loc 1 85 0
 261 02f2 E9E0     		b	.L1
 262              	.L20:
  86:..\src/command_processing.c **** 
  87:..\src/command_processing.c **** //=====================================================     CMD_GET_MEASUREMENTS
  88:..\src/command_processing.c **** 
  89:..\src/command_processing.c ****         case CMD_GET_MEASUREMENTS:
  90:..\src/command_processing.c ****             cmd_get_measurements();
 263              		.loc 1 90 0
 264 02f4 FFF7FEFF 		bl	cmd_get_measurements
  91:..\src/command_processing.c ****             break;
 265              		.loc 1 91 0
 266 02f8 E6E0     		b	.L1
 267              	.L22:
  92:..\src/command_processing.c **** 
  93:..\src/command_processing.c **** //=====================================================     CMD_GET_CURR_AND_MEAS
  94:..\src/command_processing.c **** 
  95:..\src/command_processing.c ****         case CMD_GET_CURR_AND_MEAS:
  96:..\src/command_processing.c ****             cmd_get_curr_and_meas();
 268              		.loc 1 96 0
 269 02fa FFF7FEFF 		bl	cmd_get_curr_and_meas
  97:..\src/command_processing.c ****             break;
 270              		.loc 1 97 0
 271 02fe E3E0     		b	.L1
 272              	.L21:
  98:..\src/command_processing.c ****             
  99:..\src/command_processing.c **** //=========================================================     CMD_GET_CURRENTS
 100:..\src/command_processing.c **** 
 101:..\src/command_processing.c ****         case CMD_GET_CURRENTS:
 102:..\src/command_processing.c ****             cmd_get_currents();
 273              		.loc 1 102 0
 274 0300 FFF7FEFF 		bl	cmd_get_currents
 103:..\src/command_processing.c ****             break;
 275              		.loc 1 103 0
 276 0304 E0E0     		b	.L1
 277              	.L26:
 104:..\src/command_processing.c **** 
 105:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 106:..\src/command_processing.c ****          
 107:..\src/command_processing.c ****         case CMD_GET_CURR_DIFF:
 108:..\src/command_processing.c ****             cmd_get_currents_for_cuff();
 278              		.loc 1 108 0
 279 0306 FFF7FEFF 		bl	cmd_get_currents_for_cuff
 109:..\src/command_processing.c ****             break;
 280              		.loc 1 109 0
 281 030a DDE0     		b	.L1
 282              	.L24:
 110:..\src/command_processing.c ****             
 111:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 112:..\src/command_processing.c ****         
 113:..\src/command_processing.c ****         case CMD_GET_VELOCITIES:
 114:..\src/command_processing.c ****             cmd_get_velocities();
 283              		.loc 1 114 0
 284 030c FFF7FEFF 		bl	cmd_get_velocities
 115:..\src/command_processing.c ****             break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 8


 285              		.loc 1 115 0
 286 0310 DAE0     		b	.L1
 287              	.L25:
 116:..\src/command_processing.c ****             
 117:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 118:..\src/command_processing.c **** 
 119:..\src/command_processing.c ****         case CMD_GET_ACCEL:
 120:..\src/command_processing.c ****             cmd_get_accelerations();
 288              		.loc 1 120 0
 289 0312 FFF7FEFF 		bl	cmd_get_accelerations
 121:..\src/command_processing.c ****             break;
 290              		.loc 1 121 0
 291 0316 D7E0     		b	.L1
 292              	.L28:
 122:..\src/command_processing.c **** 
 123:..\src/command_processing.c **** //=========================================================     CMD_GET_JOYSTICK
 124:..\src/command_processing.c **** 
 125:..\src/command_processing.c ****         case CMD_GET_JOYSTICK:
 126:..\src/command_processing.c ****             cmd_get_joystick();
 293              		.loc 1 126 0
 294 0318 FFF7FEFF 		bl	cmd_get_joystick
 127:..\src/command_processing.c ****         break;
 295              		.loc 1 127 0
 296 031c D4E0     		b	.L1
 297              	.L23:
 128:..\src/command_processing.c ****             
 129:..\src/command_processing.c **** //=========================================================     CMD_GET_EMG
 130:..\src/command_processing.c **** 
 131:..\src/command_processing.c ****         case CMD_GET_EMG:
 132:..\src/command_processing.c ****             cmd_get_emg();
 298              		.loc 1 132 0
 299 031e FFF7FEFF 		bl	cmd_get_emg
 133:..\src/command_processing.c ****             break;
 300              		.loc 1 133 0
 301 0322 D1E0     		b	.L1
 302              	.L17:
 134:..\src/command_processing.c ****             
 135:..\src/command_processing.c **** //=========================================================     CMD_GET_ACTIVATE
 136:..\src/command_processing.c ****             
 137:..\src/command_processing.c ****         case CMD_GET_ACTIVATE:
 138:..\src/command_processing.c ****             cmd_get_activate();
 303              		.loc 1 138 0
 304 0324 FFF7FEFF 		bl	cmd_get_activate
 139:..\src/command_processing.c ****             break;
 305              		.loc 1 139 0
 306 0328 CEE0     		b	.L1
 307              	.L27:
 140:..\src/command_processing.c ****             
 141:..\src/command_processing.c **** //=========================================================     CMD_SET_BAUDRATE
 142:..\src/command_processing.c ****             
 143:..\src/command_processing.c ****         case CMD_SET_BAUDRATE:
 144:..\src/command_processing.c ****             cmd_set_baudrate();
 308              		.loc 1 144 0
 309 032a FFF7FEFF 		bl	cmd_set_baudrate
 145:..\src/command_processing.c ****             break;  
 310              		.loc 1 145 0
 311 032e CBE0     		b	.L1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 9


 312              	.L19:
 146:..\src/command_processing.c ****             
 147:..\src/command_processing.c **** //============================================================     CMD_GET_INPUT
 148:..\src/command_processing.c **** 
 149:..\src/command_processing.c ****         case CMD_GET_INPUTS:
 150:..\src/command_processing.c ****             cmd_get_inputs();
 313              		.loc 1 150 0
 314 0330 FFF7FEFF 		bl	cmd_get_inputs
 151:..\src/command_processing.c ****             break;
 315              		.loc 1 151 0
 316 0334 C8E0     		b	.L1
 317              	.L11:
 152:..\src/command_processing.c **** 
 153:..\src/command_processing.c **** //=============================================================     CMD_GET_INFO
 154:..\src/command_processing.c **** 
 155:..\src/command_processing.c ****         case CMD_GET_INFO:
 156:..\src/command_processing.c ****             infoGet(  __REV16(*((uint16 *) &g_rx.buffer[1])) );
 318              		.loc 1 156 0
 319 0336 184B     		ldr	r3, .L49+4
 320 0338 1B88     		ldrh	r3, [r3]
 321 033a 3B61     		str	r3, [r7, #16]
 322              	.LBB8:
 323              	.LBB9:
 324              		.file 2 "Generated_Source\\PSoC5/cmsis_gcc.h"
   1:Generated_Source\PSoC5/cmsis_gcc.h **** /**************************************************************************//**
   2:Generated_Source\PSoC5/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Generated_Source\PSoC5/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Generated_Source\PSoC5/cmsis_gcc.h ****  * @version  V5.00
   5:Generated_Source\PSoC5/cmsis_gcc.h ****  * @date     28. October 2016
   6:Generated_Source\PSoC5/cmsis_gcc.h ****  ******************************************************************************/
   7:Generated_Source\PSoC5/cmsis_gcc.h **** /*
   8:Generated_Source\PSoC5/cmsis_gcc.h ****  * Copyright (c) 2009-2016 ARM Limited. All rights reserved.
   9:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  10:Generated_Source\PSoC5/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  12:Generated_Source\PSoC5/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Generated_Source\PSoC5/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Generated_Source\PSoC5/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  16:Generated_Source\PSoC5/cmsis_gcc.h ****  * http://www.apache.org/licenses/LICENSE-2.0
  17:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  18:Generated_Source\PSoC5/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Generated_Source\PSoC5/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Generated_Source\PSoC5/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Generated_Source\PSoC5/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Generated_Source\PSoC5/cmsis_gcc.h ****  * limitations under the License.
  23:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  24:Generated_Source\PSoC5/cmsis_gcc.h **** 
  25:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Generated_Source\PSoC5/cmsis_gcc.h **** 
  28:Generated_Source\PSoC5/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 10


  34:Generated_Source\PSoC5/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ASM
  36:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ASM                     __asm
  37:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  38:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __INLINE
  39:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __INLINE                  inline
  40:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  41:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  44:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __NO_RETURN
  45:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  47:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __USED
  48:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  50:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   _WEAK
  51:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  53:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:Generated_Source\PSoC5/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  55:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  56:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  57:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ALIGNED
  58:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  59:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  60:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __PACKED
  61:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  62:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  63:Generated_Source\PSoC5/cmsis_gcc.h **** 
  64:Generated_Source\PSoC5/cmsis_gcc.h **** 
  65:Generated_Source\PSoC5/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  66:Generated_Source\PSoC5/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  67:Generated_Source\PSoC5/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  68:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
  69:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  70:Generated_Source\PSoC5/cmsis_gcc.h **** 
  71:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  72:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  73:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  74:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  75:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  76:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  77:Generated_Source\PSoC5/cmsis_gcc.h **** {
  78:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  79:Generated_Source\PSoC5/cmsis_gcc.h **** }
  80:Generated_Source\PSoC5/cmsis_gcc.h **** 
  81:Generated_Source\PSoC5/cmsis_gcc.h **** 
  82:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  83:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  84:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  85:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  86:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  87:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  88:Generated_Source\PSoC5/cmsis_gcc.h **** {
  89:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  90:Generated_Source\PSoC5/cmsis_gcc.h **** }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 11


  91:Generated_Source\PSoC5/cmsis_gcc.h **** 
  92:Generated_Source\PSoC5/cmsis_gcc.h **** 
  93:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  94:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register
  95:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  96:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Control Register value
  97:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  98:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
  99:Generated_Source\PSoC5/cmsis_gcc.h **** {
 100:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 101:Generated_Source\PSoC5/cmsis_gcc.h **** 
 102:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 103:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 104:Generated_Source\PSoC5/cmsis_gcc.h **** }
 105:Generated_Source\PSoC5/cmsis_gcc.h **** 
 106:Generated_Source\PSoC5/cmsis_gcc.h **** 
 107:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 108:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 109:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 110:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 111:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               non-secure Control Register value
 112:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 113:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 114:Generated_Source\PSoC5/cmsis_gcc.h **** {
 115:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 116:Generated_Source\PSoC5/cmsis_gcc.h **** 
 117:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 118:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 119:Generated_Source\PSoC5/cmsis_gcc.h **** }
 120:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 121:Generated_Source\PSoC5/cmsis_gcc.h **** 
 122:Generated_Source\PSoC5/cmsis_gcc.h **** 
 123:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 124:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register
 125:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 126:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 127:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 128:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 129:Generated_Source\PSoC5/cmsis_gcc.h **** {
 130:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 131:Generated_Source\PSoC5/cmsis_gcc.h **** }
 132:Generated_Source\PSoC5/cmsis_gcc.h **** 
 133:Generated_Source\PSoC5/cmsis_gcc.h **** 
 134:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 135:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 136:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 137:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 138:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 139:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 140:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 141:Generated_Source\PSoC5/cmsis_gcc.h **** {
 142:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 143:Generated_Source\PSoC5/cmsis_gcc.h **** }
 144:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 145:Generated_Source\PSoC5/cmsis_gcc.h **** 
 146:Generated_Source\PSoC5/cmsis_gcc.h **** 
 147:Generated_Source\PSoC5/cmsis_gcc.h **** /**
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 12


 148:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get IPSR Register
 149:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 150:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               IPSR Register value
 151:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 152:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 153:Generated_Source\PSoC5/cmsis_gcc.h **** {
 154:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 155:Generated_Source\PSoC5/cmsis_gcc.h **** 
 156:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 157:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 158:Generated_Source\PSoC5/cmsis_gcc.h **** }
 159:Generated_Source\PSoC5/cmsis_gcc.h **** 
 160:Generated_Source\PSoC5/cmsis_gcc.h **** 
 161:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 162:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get APSR Register
 163:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 164:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               APSR Register value
 165:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 166:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 167:Generated_Source\PSoC5/cmsis_gcc.h **** {
 168:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 169:Generated_Source\PSoC5/cmsis_gcc.h **** 
 170:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 171:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 172:Generated_Source\PSoC5/cmsis_gcc.h **** }
 173:Generated_Source\PSoC5/cmsis_gcc.h **** 
 174:Generated_Source\PSoC5/cmsis_gcc.h **** 
 175:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 176:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get xPSR Register
 177:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 178:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               xPSR Register value
 179:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 180:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 181:Generated_Source\PSoC5/cmsis_gcc.h **** {
 182:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 183:Generated_Source\PSoC5/cmsis_gcc.h **** 
 184:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 185:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 186:Generated_Source\PSoC5/cmsis_gcc.h **** }
 187:Generated_Source\PSoC5/cmsis_gcc.h **** 
 188:Generated_Source\PSoC5/cmsis_gcc.h **** 
 189:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 190:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 191:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 192:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 193:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 194:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 195:Generated_Source\PSoC5/cmsis_gcc.h **** {
 196:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 197:Generated_Source\PSoC5/cmsis_gcc.h **** 
 198:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 199:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 200:Generated_Source\PSoC5/cmsis_gcc.h **** }
 201:Generated_Source\PSoC5/cmsis_gcc.h **** 
 202:Generated_Source\PSoC5/cmsis_gcc.h **** 
 203:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 204:Generated_Source\PSoC5/cmsis_gcc.h **** /**
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 13


 205:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 206:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 207:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 208:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 209:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 210:Generated_Source\PSoC5/cmsis_gcc.h **** {
 211:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 212:Generated_Source\PSoC5/cmsis_gcc.h **** 
 213:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 214:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 215:Generated_Source\PSoC5/cmsis_gcc.h **** }
 216:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 217:Generated_Source\PSoC5/cmsis_gcc.h **** 
 218:Generated_Source\PSoC5/cmsis_gcc.h **** 
 219:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 220:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 221:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 222:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 223:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 224:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 225:Generated_Source\PSoC5/cmsis_gcc.h **** {
 226:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : "sp");
 227:Generated_Source\PSoC5/cmsis_gcc.h **** }
 228:Generated_Source\PSoC5/cmsis_gcc.h **** 
 229:Generated_Source\PSoC5/cmsis_gcc.h **** 
 230:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 231:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 232:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 233:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 234:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 235:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 236:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 237:Generated_Source\PSoC5/cmsis_gcc.h **** {
 238:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : "sp");
 239:Generated_Source\PSoC5/cmsis_gcc.h **** }
 240:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 241:Generated_Source\PSoC5/cmsis_gcc.h **** 
 242:Generated_Source\PSoC5/cmsis_gcc.h **** 
 243:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 244:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 245:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 246:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 247:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 248:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 249:Generated_Source\PSoC5/cmsis_gcc.h **** {
 250:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 251:Generated_Source\PSoC5/cmsis_gcc.h **** 
 252:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 253:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 254:Generated_Source\PSoC5/cmsis_gcc.h **** }
 255:Generated_Source\PSoC5/cmsis_gcc.h **** 
 256:Generated_Source\PSoC5/cmsis_gcc.h **** 
 257:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 258:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 259:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 260:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 261:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 14


 262:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 263:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 264:Generated_Source\PSoC5/cmsis_gcc.h **** {
 265:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 266:Generated_Source\PSoC5/cmsis_gcc.h **** 
 267:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 268:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 269:Generated_Source\PSoC5/cmsis_gcc.h **** }
 270:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 271:Generated_Source\PSoC5/cmsis_gcc.h **** 
 272:Generated_Source\PSoC5/cmsis_gcc.h **** 
 273:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 274:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 275:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 276:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 277:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 278:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 279:Generated_Source\PSoC5/cmsis_gcc.h **** {
 280:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : "sp");
 281:Generated_Source\PSoC5/cmsis_gcc.h **** }
 282:Generated_Source\PSoC5/cmsis_gcc.h **** 
 283:Generated_Source\PSoC5/cmsis_gcc.h **** 
 284:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 285:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 286:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 287:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 288:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 289:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 290:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 291:Generated_Source\PSoC5/cmsis_gcc.h **** {
 292:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : "sp");
 293:Generated_Source\PSoC5/cmsis_gcc.h **** }
 294:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 295:Generated_Source\PSoC5/cmsis_gcc.h **** 
 296:Generated_Source\PSoC5/cmsis_gcc.h **** 
 297:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 298:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask
 299:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 300:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 301:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 302:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 303:Generated_Source\PSoC5/cmsis_gcc.h **** {
 304:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 305:Generated_Source\PSoC5/cmsis_gcc.h **** 
 306:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 307:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 308:Generated_Source\PSoC5/cmsis_gcc.h **** }
 309:Generated_Source\PSoC5/cmsis_gcc.h **** 
 310:Generated_Source\PSoC5/cmsis_gcc.h **** 
 311:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 312:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 313:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 314:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 315:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 316:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 317:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 318:Generated_Source\PSoC5/cmsis_gcc.h **** {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 15


 319:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 320:Generated_Source\PSoC5/cmsis_gcc.h **** 
 321:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 322:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 323:Generated_Source\PSoC5/cmsis_gcc.h **** }
 324:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 325:Generated_Source\PSoC5/cmsis_gcc.h **** 
 326:Generated_Source\PSoC5/cmsis_gcc.h **** 
 327:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 328:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask
 329:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 330:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 331:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 332:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 333:Generated_Source\PSoC5/cmsis_gcc.h **** {
 334:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 335:Generated_Source\PSoC5/cmsis_gcc.h **** }
 336:Generated_Source\PSoC5/cmsis_gcc.h **** 
 337:Generated_Source\PSoC5/cmsis_gcc.h **** 
 338:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 339:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 340:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 341:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 342:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 343:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 344:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 345:Generated_Source\PSoC5/cmsis_gcc.h **** {
 346:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 347:Generated_Source\PSoC5/cmsis_gcc.h **** }
 348:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 349:Generated_Source\PSoC5/cmsis_gcc.h **** 
 350:Generated_Source\PSoC5/cmsis_gcc.h **** 
 351:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 352:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 353:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 354:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 355:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable FIQ
 356:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 357:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 358:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 359:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 360:Generated_Source\PSoC5/cmsis_gcc.h **** {
 361:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 362:Generated_Source\PSoC5/cmsis_gcc.h **** }
 363:Generated_Source\PSoC5/cmsis_gcc.h **** 
 364:Generated_Source\PSoC5/cmsis_gcc.h **** 
 365:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 366:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable FIQ
 367:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 368:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 369:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 370:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 371:Generated_Source\PSoC5/cmsis_gcc.h **** {
 372:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 373:Generated_Source\PSoC5/cmsis_gcc.h **** }
 374:Generated_Source\PSoC5/cmsis_gcc.h **** 
 375:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 16


 376:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 377:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority
 378:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 379:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 380:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 381:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 382:Generated_Source\PSoC5/cmsis_gcc.h **** {
 383:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 384:Generated_Source\PSoC5/cmsis_gcc.h **** 
 385:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 386:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 387:Generated_Source\PSoC5/cmsis_gcc.h **** }
 388:Generated_Source\PSoC5/cmsis_gcc.h **** 
 389:Generated_Source\PSoC5/cmsis_gcc.h **** 
 390:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 391:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 392:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 393:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 394:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 395:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 396:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 397:Generated_Source\PSoC5/cmsis_gcc.h **** {
 398:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 399:Generated_Source\PSoC5/cmsis_gcc.h **** 
 400:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 401:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 402:Generated_Source\PSoC5/cmsis_gcc.h **** }
 403:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 404:Generated_Source\PSoC5/cmsis_gcc.h **** 
 405:Generated_Source\PSoC5/cmsis_gcc.h **** 
 406:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 407:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority
 408:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 409:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 410:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 411:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 412:Generated_Source\PSoC5/cmsis_gcc.h **** {
 413:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 414:Generated_Source\PSoC5/cmsis_gcc.h **** }
 415:Generated_Source\PSoC5/cmsis_gcc.h **** 
 416:Generated_Source\PSoC5/cmsis_gcc.h **** 
 417:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 419:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 420:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 421:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 422:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 423:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 424:Generated_Source\PSoC5/cmsis_gcc.h **** {
 425:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 426:Generated_Source\PSoC5/cmsis_gcc.h **** }
 427:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 428:Generated_Source\PSoC5/cmsis_gcc.h **** 
 429:Generated_Source\PSoC5/cmsis_gcc.h **** 
 430:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 431:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 432:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 17


 433:Generated_Source\PSoC5/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 434:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 435:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 436:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 437:Generated_Source\PSoC5/cmsis_gcc.h **** {
 438:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 439:Generated_Source\PSoC5/cmsis_gcc.h **** }
 440:Generated_Source\PSoC5/cmsis_gcc.h **** 
 441:Generated_Source\PSoC5/cmsis_gcc.h **** 
 442:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 443:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask
 444:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 445:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 446:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 447:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 448:Generated_Source\PSoC5/cmsis_gcc.h **** {
 449:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 450:Generated_Source\PSoC5/cmsis_gcc.h **** 
 451:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 452:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 453:Generated_Source\PSoC5/cmsis_gcc.h **** }
 454:Generated_Source\PSoC5/cmsis_gcc.h **** 
 455:Generated_Source\PSoC5/cmsis_gcc.h **** 
 456:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 457:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 458:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 459:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 460:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 461:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 462:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 463:Generated_Source\PSoC5/cmsis_gcc.h **** {
 464:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 465:Generated_Source\PSoC5/cmsis_gcc.h **** 
 466:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 467:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 468:Generated_Source\PSoC5/cmsis_gcc.h **** }
 469:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 470:Generated_Source\PSoC5/cmsis_gcc.h **** 
 471:Generated_Source\PSoC5/cmsis_gcc.h **** 
 472:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 473:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask
 474:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 475:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 476:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 477:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 478:Generated_Source\PSoC5/cmsis_gcc.h **** {
 479:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 480:Generated_Source\PSoC5/cmsis_gcc.h **** }
 481:Generated_Source\PSoC5/cmsis_gcc.h **** 
 482:Generated_Source\PSoC5/cmsis_gcc.h **** 
 483:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 484:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 485:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 486:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 487:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 488:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 489:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 18


 490:Generated_Source\PSoC5/cmsis_gcc.h **** {
 491:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 492:Generated_Source\PSoC5/cmsis_gcc.h **** }
 493:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 494:Generated_Source\PSoC5/cmsis_gcc.h **** 
 495:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 496:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 497:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 498:Generated_Source\PSoC5/cmsis_gcc.h **** 
 499:Generated_Source\PSoC5/cmsis_gcc.h **** 
 500:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 501:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    )
 502:Generated_Source\PSoC5/cmsis_gcc.h **** 
 503:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 504:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 505:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 506:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 507:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 508:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 509:Generated_Source\PSoC5/cmsis_gcc.h **** {
 510:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 511:Generated_Source\PSoC5/cmsis_gcc.h **** 
 512:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 513:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 514:Generated_Source\PSoC5/cmsis_gcc.h **** }
 515:Generated_Source\PSoC5/cmsis_gcc.h **** 
 516:Generated_Source\PSoC5/cmsis_gcc.h **** 
 517:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 518:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 519:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 520:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 521:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 522:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 523:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 524:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 525:Generated_Source\PSoC5/cmsis_gcc.h **** {
 526:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 527:Generated_Source\PSoC5/cmsis_gcc.h **** 
 528:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 529:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 530:Generated_Source\PSoC5/cmsis_gcc.h **** }
 531:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 532:Generated_Source\PSoC5/cmsis_gcc.h **** 
 533:Generated_Source\PSoC5/cmsis_gcc.h **** 
 534:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 535:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 536:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 537:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 538:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 539:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 540:Generated_Source\PSoC5/cmsis_gcc.h **** {
 541:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 542:Generated_Source\PSoC5/cmsis_gcc.h **** }
 543:Generated_Source\PSoC5/cmsis_gcc.h **** 
 544:Generated_Source\PSoC5/cmsis_gcc.h **** 
 545:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 546:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 19


 547:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 548:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 549:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 550:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 551:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 552:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 553:Generated_Source\PSoC5/cmsis_gcc.h **** {
 554:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 555:Generated_Source\PSoC5/cmsis_gcc.h **** }
 556:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 557:Generated_Source\PSoC5/cmsis_gcc.h **** 
 558:Generated_Source\PSoC5/cmsis_gcc.h **** 
 559:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 560:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 561:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 562:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 563:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 564:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 565:Generated_Source\PSoC5/cmsis_gcc.h **** {
 566:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 567:Generated_Source\PSoC5/cmsis_gcc.h **** 
 568:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 569:Generated_Source\PSoC5/cmsis_gcc.h **** 
 570:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 571:Generated_Source\PSoC5/cmsis_gcc.h **** }
 572:Generated_Source\PSoC5/cmsis_gcc.h **** 
 573:Generated_Source\PSoC5/cmsis_gcc.h **** 
 574:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 575:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 576:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 577:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 578:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 579:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 580:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 581:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 582:Generated_Source\PSoC5/cmsis_gcc.h **** {
 583:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 584:Generated_Source\PSoC5/cmsis_gcc.h **** 
 585:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 586:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 587:Generated_Source\PSoC5/cmsis_gcc.h **** }
 588:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 589:Generated_Source\PSoC5/cmsis_gcc.h **** 
 590:Generated_Source\PSoC5/cmsis_gcc.h **** 
 591:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 592:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 593:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 594:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 595:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 596:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 597:Generated_Source\PSoC5/cmsis_gcc.h **** {
 598:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 599:Generated_Source\PSoC5/cmsis_gcc.h **** }
 600:Generated_Source\PSoC5/cmsis_gcc.h **** 
 601:Generated_Source\PSoC5/cmsis_gcc.h **** 
 602:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 603:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 20


 604:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 605:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 606:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 607:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 608:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 609:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 610:Generated_Source\PSoC5/cmsis_gcc.h **** {
 611:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 612:Generated_Source\PSoC5/cmsis_gcc.h **** }
 613:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 614:Generated_Source\PSoC5/cmsis_gcc.h **** 
 615:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 616:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    ) */
 617:Generated_Source\PSoC5/cmsis_gcc.h **** 
 618:Generated_Source\PSoC5/cmsis_gcc.h **** 
 619:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 620:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 621:Generated_Source\PSoC5/cmsis_gcc.h **** 
 622:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 623:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get FPSCR
 624:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 625:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 626:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 627:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 628:Generated_Source\PSoC5/cmsis_gcc.h **** {
 629:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 630:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 631:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 632:Generated_Source\PSoC5/cmsis_gcc.h **** 
 633:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                 /* Empty asm statement works as a scheduling
 634:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 635:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 636:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 637:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 638:Generated_Source\PSoC5/cmsis_gcc.h ****    return(0U);
 639:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 640:Generated_Source\PSoC5/cmsis_gcc.h **** }
 641:Generated_Source\PSoC5/cmsis_gcc.h **** 
 642:Generated_Source\PSoC5/cmsis_gcc.h **** 
 643:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 644:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set FPSCR
 645:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 646:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 647:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 648:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 649:Generated_Source\PSoC5/cmsis_gcc.h **** {
 650:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 651:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 652:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                           /* Empty asm statement works as a 
 653:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 654:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 655:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 656:Generated_Source\PSoC5/cmsis_gcc.h **** }
 657:Generated_Source\PSoC5/cmsis_gcc.h **** 
 658:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 659:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 660:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 21


 661:Generated_Source\PSoC5/cmsis_gcc.h **** 
 662:Generated_Source\PSoC5/cmsis_gcc.h **** 
 663:Generated_Source\PSoC5/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 664:Generated_Source\PSoC5/cmsis_gcc.h **** 
 665:Generated_Source\PSoC5/cmsis_gcc.h **** 
 666:Generated_Source\PSoC5/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 667:Generated_Source\PSoC5/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 668:Generated_Source\PSoC5/cmsis_gcc.h ****   Access to dedicated instructions
 669:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
 670:Generated_Source\PSoC5/cmsis_gcc.h **** */
 671:Generated_Source\PSoC5/cmsis_gcc.h **** 
 672:Generated_Source\PSoC5/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 673:Generated_Source\PSoC5/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 674:Generated_Source\PSoC5/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 675:Generated_Source\PSoC5/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 676:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 677:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 678:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 679:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 680:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 681:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 682:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 683:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 684:Generated_Source\PSoC5/cmsis_gcc.h **** 
 685:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 686:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   No Operation
 687:Generated_Source\PSoC5/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 688:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 689:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 690:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 691:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("nop");
 692:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 693:Generated_Source\PSoC5/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 694:Generated_Source\PSoC5/cmsis_gcc.h **** 
 695:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 696:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Interrupt
 697:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 698:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 699:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 700:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 701:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfi");
 702:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 703:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 704:Generated_Source\PSoC5/cmsis_gcc.h **** 
 705:Generated_Source\PSoC5/cmsis_gcc.h **** 
 706:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 707:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Event
 708:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 709:Generated_Source\PSoC5/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 710:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 711:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 712:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 713:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfe");
 714:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 715:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 716:Generated_Source\PSoC5/cmsis_gcc.h **** 
 717:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 22


 718:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 719:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Send Event
 720:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 721:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 722:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 723:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 724:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("sev");
 725:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 726:Generated_Source\PSoC5/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 727:Generated_Source\PSoC5/cmsis_gcc.h **** 
 728:Generated_Source\PSoC5/cmsis_gcc.h **** 
 729:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 730:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 731:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 732:Generated_Source\PSoC5/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 733:Generated_Source\PSoC5/cmsis_gcc.h ****            after the instruction has been completed.
 734:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 735:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 736:Generated_Source\PSoC5/cmsis_gcc.h **** {
 737:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 738:Generated_Source\PSoC5/cmsis_gcc.h **** }
 739:Generated_Source\PSoC5/cmsis_gcc.h **** 
 740:Generated_Source\PSoC5/cmsis_gcc.h **** 
 741:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 742:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 743:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 744:Generated_Source\PSoC5/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 745:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 746:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 747:Generated_Source\PSoC5/cmsis_gcc.h **** {
 748:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 749:Generated_Source\PSoC5/cmsis_gcc.h **** }
 750:Generated_Source\PSoC5/cmsis_gcc.h **** 
 751:Generated_Source\PSoC5/cmsis_gcc.h **** 
 752:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 753:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Memory Barrier
 754:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 755:Generated_Source\PSoC5/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 756:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 757:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 758:Generated_Source\PSoC5/cmsis_gcc.h **** {
 759:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 760:Generated_Source\PSoC5/cmsis_gcc.h **** }
 761:Generated_Source\PSoC5/cmsis_gcc.h **** 
 762:Generated_Source\PSoC5/cmsis_gcc.h **** 
 763:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 764:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 765:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 766:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 767:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 768:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 769:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 770:Generated_Source\PSoC5/cmsis_gcc.h **** {
 771:Generated_Source\PSoC5/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 772:Generated_Source\PSoC5/cmsis_gcc.h ****   return __builtin_bswap32(value);
 773:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 774:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 23


 775:Generated_Source\PSoC5/cmsis_gcc.h **** 
 776:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 777:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 778:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 779:Generated_Source\PSoC5/cmsis_gcc.h **** }
 780:Generated_Source\PSoC5/cmsis_gcc.h **** 
 781:Generated_Source\PSoC5/cmsis_gcc.h **** 
 782:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 783:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 784:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 785:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 786:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 787:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 788:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 789:Generated_Source\PSoC5/cmsis_gcc.h **** {
 790:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 791:Generated_Source\PSoC5/cmsis_gcc.h **** 
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 325              		.loc 2 792 0
 326 033c 3B69     		ldr	r3, [r7, #16]
 327              		.syntax unified
 328              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 329 033e 5BBA     		rev16 r3, r3
 330              	@ 0 "" 2
 331              		.thumb
 332              		.syntax unified
 333 0340 FB60     		str	r3, [r7, #12]
 793:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 334              		.loc 2 793 0
 335 0342 FB68     		ldr	r3, [r7, #12]
 336              	.LBE9:
 337              	.LBE8:
 338              		.loc 1 156 0
 339 0344 9BB2     		uxth	r3, r3
 340 0346 1846     		mov	r0, r3
 341 0348 FFF7FEFF 		bl	infoGet
 157:..\src/command_processing.c ****             break;
 342              		.loc 1 157 0
 343 034c BCE0     		b	.L1
 344              	.L7:
 158:..\src/command_processing.c **** 
 159:..\src/command_processing.c **** //============================================================     CMD_SET_PARAM
 160:..\src/command_processing.c **** 
 161:..\src/command_processing.c ****         case CMD_SET_ZEROS:
 162:..\src/command_processing.c ****             setZeros();
 345              		.loc 1 162 0
 346 034e FFF7FEFF 		bl	setZeros
 163:..\src/command_processing.c ****             break;
 347              		.loc 1 163 0
 348 0352 B9E0     		b	.L1
 349              	.L14:
 164:..\src/command_processing.c **** 
 165:..\src/command_processing.c **** //============================================================     CMD_GET_PARAM
 166:..\src/command_processing.c **** 
 167:..\src/command_processing.c ****         case CMD_GET_PARAM_LIST:
 168:..\src/command_processing.c ****             manage_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 350              		.loc 1 168 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 24


 351 0354 104B     		ldr	r3, .L49+4
 352 0356 1B88     		ldrh	r3, [r3]
 353 0358 BB61     		str	r3, [r7, #24]
 354              	.LBB10:
 355              	.LBB11:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 356              		.loc 2 792 0
 357 035a BB69     		ldr	r3, [r7, #24]
 358              		.syntax unified
 359              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 360 035c 5BBA     		rev16 r3, r3
 361              	@ 0 "" 2
 362              		.thumb
 363              		.syntax unified
 364 035e BB60     		str	r3, [r7, #8]
 365              		.loc 2 793 0
 366 0360 BB68     		ldr	r3, [r7, #8]
 367              	.LBE11:
 368              	.LBE10:
 369              		.loc 1 168 0
 370 0362 9BB2     		uxth	r3, r3
 371 0364 1846     		mov	r0, r3
 372 0366 FFF7FEFF 		bl	manage_param_list
 169:..\src/command_processing.c ****             break;
 373              		.loc 1 169 0
 374 036a ADE0     		b	.L1
 375              	.L5:
 170:..\src/command_processing.c **** 
 171:..\src/command_processing.c **** //=================================================================     CMD_PING
 172:..\src/command_processing.c ****             
 173:..\src/command_processing.c ****         case CMD_PING:
 174:..\src/command_processing.c ****             cmd_ping();
 376              		.loc 1 174 0
 377 036c FFF7FEFF 		bl	cmd_ping
 175:..\src/command_processing.c ****             break;
 378              		.loc 1 175 0
 379 0370 AAE0     		b	.L1
 380              	.L8:
 176:..\src/command_processing.c **** 
 177:..\src/command_processing.c **** //=========================================================     CMD_STORE_PARAMS
 178:..\src/command_processing.c ****             
 179:..\src/command_processing.c ****         case CMD_STORE_PARAMS:
 180:..\src/command_processing.c ****             cmd_store_params();
 381              		.loc 1 180 0
 382 0372 FFF7FEFF 		bl	cmd_store_params
 181:..\src/command_processing.c ****             break;
 383              		.loc 1 181 0
 384 0376 A7E0     		b	.L1
 385              	.L9:
 182:..\src/command_processing.c **** 
 183:..\src/command_processing.c **** //=================================================     CMD_STORE_DEFAULT_PARAMS
 184:..\src/command_processing.c **** 
 185:..\src/command_processing.c ****         case CMD_STORE_DEFAULT_PARAMS:
 186:..\src/command_processing.c ****             if(memStore(DEFAULT_EEPROM_DISPLACEMENT))
 386              		.loc 1 186 0
 387 0378 3220     		movs	r0, #50
 388 037a FFF7FEFF 		bl	memStore
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 25


 389 037e 0346     		mov	r3, r0
 390 0380 002B     		cmp	r3, #0
 391 0382 03D0     		beq	.L37
 187:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 392              		.loc 1 187 0
 393 0384 0120     		movs	r0, #1
 394 0386 FFF7FEFF 		bl	sendAcknowledgment
 188:..\src/command_processing.c ****             else
 189:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 190:..\src/command_processing.c ****             break;
 395              		.loc 1 190 0
 396 038a 9DE0     		b	.L1
 397              	.L37:
 189:..\src/command_processing.c ****             break;
 398              		.loc 1 189 0
 399 038c 0020     		movs	r0, #0
 400 038e FFF7FEFF 		bl	sendAcknowledgment
 401              		.loc 1 190 0
 402 0392 99E0     		b	.L1
 403              	.L50:
 404              		.align	2
 405              	.L49:
 406 0394 00000000 		.word	g_rx
 407 0398 01000000 		.word	g_rx+1
 408              	.L10:
 191:..\src/command_processing.c **** 
 192:..\src/command_processing.c **** //=======================================================     CMD_RESTORE_PARAMS
 193:..\src/command_processing.c **** 
 194:..\src/command_processing.c ****         case CMD_RESTORE_PARAMS:
 195:..\src/command_processing.c ****             if(memRestore())
 409              		.loc 1 195 0
 410 039c FFF7FEFF 		bl	memRestore
 411 03a0 0346     		mov	r3, r0
 412 03a2 002B     		cmp	r3, #0
 413 03a4 03D0     		beq	.L39
 196:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 414              		.loc 1 196 0
 415 03a6 0120     		movs	r0, #1
 416 03a8 FFF7FEFF 		bl	sendAcknowledgment
 197:..\src/command_processing.c ****             else
 198:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 199:..\src/command_processing.c ****             break;
 417              		.loc 1 199 0
 418 03ac 8CE0     		b	.L1
 419              	.L39:
 198:..\src/command_processing.c ****             break;
 420              		.loc 1 198 0
 421 03ae 0020     		movs	r0, #0
 422 03b0 FFF7FEFF 		bl	sendAcknowledgment
 423              		.loc 1 199 0
 424 03b4 88E0     		b	.L1
 425              	.L13:
 200:..\src/command_processing.c **** 
 201:..\src/command_processing.c **** //=============================================================     CMD_INIT_MEM
 202:..\src/command_processing.c **** 
 203:..\src/command_processing.c ****         case CMD_INIT_MEM:            
 204:..\src/command_processing.c ****             if(memInit())
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 26


 426              		.loc 1 204 0
 427 03b6 FFF7FEFF 		bl	memInit
 428 03ba 0346     		mov	r3, r0
 429 03bc 002B     		cmp	r3, #0
 430 03be 03D0     		beq	.L41
 205:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 431              		.loc 1 205 0
 432 03c0 0120     		movs	r0, #1
 433 03c2 FFF7FEFF 		bl	sendAcknowledgment
 206:..\src/command_processing.c ****             else
 207:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 208:..\src/command_processing.c ****             break;
 434              		.loc 1 208 0
 435 03c6 7FE0     		b	.L1
 436              	.L41:
 207:..\src/command_processing.c ****             break;
 437              		.loc 1 207 0
 438 03c8 0020     		movs	r0, #0
 439 03ca FFF7FEFF 		bl	sendAcknowledgment
 440              		.loc 1 208 0
 441 03ce 7BE0     		b	.L1
 442              	.L12:
 209:..\src/command_processing.c **** 
 210:..\src/command_processing.c **** //===========================================================     CMD_BOOTLOADER
 211:..\src/command_processing.c **** 
 212:..\src/command_processing.c ****         case CMD_BOOTLOADER:
 213:..\src/command_processing.c ****             //Not sure if ACK_OK is correct, should check
 214:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 443              		.loc 1 214 0
 444 03d0 0120     		movs	r0, #1
 445 03d2 FFF7FEFF 		bl	sendAcknowledgment
 215:..\src/command_processing.c ****             CyDelay(1000);
 446              		.loc 1 215 0
 447 03d6 4FF47A70 		mov	r0, #1000
 448 03da FFF7FEFF 		bl	CyDelay
 216:..\src/command_processing.c ****             FTDI_ENABLE_Write(0x00);
 449              		.loc 1 216 0
 450 03de 0020     		movs	r0, #0
 451 03e0 FFF7FEFF 		bl	FTDI_ENABLE_Write
 217:..\src/command_processing.c ****             CyDelay(1000);
 452              		.loc 1 217 0
 453 03e4 4FF47A70 		mov	r0, #1000
 454 03e8 FFF7FEFF 		bl	CyDelay
 218:..\src/command_processing.c ****             Bootloadable_Load();
 455              		.loc 1 218 0
 456 03ec FFF7FEFF 		bl	Bootloadable_Load
 219:..\src/command_processing.c ****             break;
 457              		.loc 1 219 0
 458 03f0 6AE0     		b	.L1
 459              	.L15:
 220:..\src/command_processing.c **** 
 221:..\src/command_processing.c **** //============================================================     CMD_HAND_CALIBRATE
 222:..\src/command_processing.c **** 
 223:..\src/command_processing.c ****         case CMD_HAND_CALIBRATE:
 224:..\src/command_processing.c ****             calib.speed = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 460              		.loc 1 224 0
 461 03f2 374B     		ldr	r3, .L51
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 27


 462 03f4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 463 03f6 1B02     		lsls	r3, r3, #8
 464 03f8 1AB2     		sxth	r2, r3
 465 03fa 354B     		ldr	r3, .L51
 466 03fc 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 467 03fe 1BB2     		sxth	r3, r3
 468 0400 1343     		orrs	r3, r3, r2
 469 0402 1AB2     		sxth	r2, r3
 470 0404 334B     		ldr	r3, .L51+4
 471 0406 5A80     		strh	r2, [r3, #2]	@ movhi
 225:..\src/command_processing.c ****             calib.repetitions = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 472              		.loc 1 225 0
 473 0408 314B     		ldr	r3, .L51
 474 040a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 475 040c 1B02     		lsls	r3, r3, #8
 476 040e 1AB2     		sxth	r2, r3
 477 0410 2F4B     		ldr	r3, .L51
 478 0412 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 479 0414 1BB2     		sxth	r3, r3
 480 0416 1343     		orrs	r3, r3, r2
 481 0418 1AB2     		sxth	r2, r3
 482 041a 2E4B     		ldr	r3, .L51+4
 483 041c 9A80     		strh	r2, [r3, #4]	@ movhi
 226:..\src/command_processing.c ****             
 227:..\src/command_processing.c ****             if(calib.speed == -1 && calib.repetitions == -1) {
 484              		.loc 1 227 0
 485 041e 2D4B     		ldr	r3, .L51+4
 486 0420 B3F90230 		ldrsh	r3, [r3, #2]
 487 0424 B3F1FF3F 		cmp	r3, #-1
 488 0428 0FD1     		bne	.L43
 489              		.loc 1 227 0 is_stmt 0 discriminator 1
 490 042a 2A4B     		ldr	r3, .L51+4
 491 042c B3F90430 		ldrsh	r3, [r3, #4]
 492 0430 B3F1FF3F 		cmp	r3, #-1
 493 0434 09D1     		bne	.L43
 228:..\src/command_processing.c ****                 calib.enabled = FALSE;
 494              		.loc 1 228 0 is_stmt 1
 495 0436 274B     		ldr	r3, .L51+4
 496 0438 0022     		movs	r2, #0
 497 043a 1A70     		strb	r2, [r3]
 229:..\src/command_processing.c ****                 calib.speed = 0;
 498              		.loc 1 229 0
 499 043c 254B     		ldr	r3, .L51+4
 500 043e 0022     		movs	r2, #0
 501 0440 5A80     		strh	r2, [r3, #2]	@ movhi
 230:..\src/command_processing.c ****                 calib.repetitions = 0;
 502              		.loc 1 230 0
 503 0442 244B     		ldr	r3, .L51+4
 504 0444 0022     		movs	r2, #0
 505 0446 9A80     		strh	r2, [r3, #4]	@ movhi
 231:..\src/command_processing.c ****                 break;
 506              		.loc 1 231 0
 507 0448 3EE0     		b	.L1
 508              	.L43:
 232:..\src/command_processing.c ****             }
 233:..\src/command_processing.c ****             // Speed & repetitions saturations
 234:..\src/command_processing.c ****             if (calib.speed < 0) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 28


 509              		.loc 1 234 0
 510 044a 224B     		ldr	r3, .L51+4
 511 044c B3F90230 		ldrsh	r3, [r3, #2]
 512 0450 002B     		cmp	r3, #0
 513 0452 03DA     		bge	.L44
 235:..\src/command_processing.c ****                 calib.speed = 0;
 514              		.loc 1 235 0
 515 0454 1F4B     		ldr	r3, .L51+4
 516 0456 0022     		movs	r2, #0
 517 0458 5A80     		strh	r2, [r3, #2]	@ movhi
 518 045a 07E0     		b	.L45
 519              	.L44:
 236:..\src/command_processing.c ****             } else if (calib.speed > 200) {
 520              		.loc 1 236 0
 521 045c 1D4B     		ldr	r3, .L51+4
 522 045e B3F90230 		ldrsh	r3, [r3, #2]
 523 0462 C82B     		cmp	r3, #200
 524 0464 02DD     		ble	.L45
 237:..\src/command_processing.c ****                 calib.speed = 200;
 525              		.loc 1 237 0
 526 0466 1B4B     		ldr	r3, .L51+4
 527 0468 C822     		movs	r2, #200
 528 046a 5A80     		strh	r2, [r3, #2]	@ movhi
 529              	.L45:
 238:..\src/command_processing.c ****             }
 239:..\src/command_processing.c ****             if (calib.repetitions < 0) {
 530              		.loc 1 239 0
 531 046c 194B     		ldr	r3, .L51+4
 532 046e B3F90430 		ldrsh	r3, [r3, #4]
 533 0472 002B     		cmp	r3, #0
 534 0474 02DA     		bge	.L46
 240:..\src/command_processing.c ****                 calib.repetitions = 0;
 535              		.loc 1 240 0
 536 0476 174B     		ldr	r3, .L51+4
 537 0478 0022     		movs	r2, #0
 538 047a 9A80     		strh	r2, [r3, #4]	@ movhi
 539              	.L46:
 241:..\src/command_processing.c ****             } else if (calib.repetitions > 32767) {
 242:..\src/command_processing.c ****                 calib.repetitions = 32767;
 243:..\src/command_processing.c ****             }
 244:..\src/command_processing.c ****             
 245:..\src/command_processing.c ****             g_refNew[0].pos = 0;                    // SoftHand is on motor 1
 540              		.loc 1 245 0
 541 047c 164B     		ldr	r3, .L51+8
 542 047e 0022     		movs	r2, #0
 543 0480 1A60     		str	r2, [r3]
 246:..\src/command_processing.c ****             calib.enabled = TRUE;
 544              		.loc 1 246 0
 545 0482 144B     		ldr	r3, .L51+4
 546 0484 0122     		movs	r2, #1
 547 0486 1A70     		strb	r2, [r3]
 247:..\src/command_processing.c ****          
 248:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 548              		.loc 1 248 0
 549 0488 0120     		movs	r0, #1
 550 048a FFF7FEFF 		bl	sendAcknowledgment
 249:..\src/command_processing.c ****             break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 29


 551              		.loc 1 249 0
 552 048e 1BE0     		b	.L1
 553              	.L29:
 250:..\src/command_processing.c ****             
 251:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_READINGS
 252:..\src/command_processing.c **** 
 253:..\src/command_processing.c ****         case CMD_GET_IMU_READINGS:
 254:..\src/command_processing.c ****             cmd_get_imu_readings();
 554              		.loc 1 254 0
 555 0490 FFF7FEFF 		bl	cmd_get_imu_readings
 255:..\src/command_processing.c ****             break; 
 556              		.loc 1 255 0
 557 0494 18E0     		b	.L1
 558              	.L30:
 256:..\src/command_processing.c ****             
 257:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_PARAM
 258:..\src/command_processing.c **** 
 259:..\src/command_processing.c ****         case CMD_GET_IMU_PARAM:
 260:..\src/command_processing.c ****             get_IMU_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 559              		.loc 1 260 0
 560 0496 114B     		ldr	r3, .L51+12
 561 0498 1B88     		ldrh	r3, [r3]
 562 049a 7B61     		str	r3, [r7, #20]
 563              	.LBB12:
 564              	.LBB13:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 565              		.loc 2 792 0
 566 049c 7B69     		ldr	r3, [r7, #20]
 567              		.syntax unified
 568              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 569 049e 5BBA     		rev16 r3, r3
 570              	@ 0 "" 2
 571              		.thumb
 572              		.syntax unified
 573 04a0 7B60     		str	r3, [r7, #4]
 574              		.loc 2 793 0
 575 04a2 7B68     		ldr	r3, [r7, #4]
 576              	.LBE13:
 577              	.LBE12:
 578              		.loc 1 260 0
 579 04a4 9BB2     		uxth	r3, r3
 580 04a6 1846     		mov	r0, r3
 581 04a8 FFF7FEFF 		bl	get_IMU_param_list
 261:..\src/command_processing.c ****             break;             
 582              		.loc 1 261 0
 583 04ac 0CE0     		b	.L1
 584              	.L31:
 262:..\src/command_processing.c ****             
 263:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_CONF
 264:..\src/command_processing.c **** 
 265:..\src/command_processing.c ****         case CMD_GET_ENCODER_CONF:
 266:..\src/command_processing.c ****             cmd_get_encoder_map();
 585              		.loc 1 266 0
 586 04ae FFF7FEFF 		bl	cmd_get_encoder_map
 267:..\src/command_processing.c ****             break; 
 587              		.loc 1 267 0
 588 04b2 09E0     		b	.L1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 30


 589              	.L32:
 268:..\src/command_processing.c **** 
 269:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_RAW
 270:..\src/command_processing.c **** 
 271:..\src/command_processing.c ****         case CMD_GET_ENCODER_RAW:
 272:..\src/command_processing.c ****             cmd_get_encoder_raw();
 590              		.loc 1 272 0
 591 04b4 FFF7FEFF 		bl	cmd_get_encoder_raw
 273:..\src/command_processing.c ****             break; 
 592              		.loc 1 273 0
 593 04b8 06E0     		b	.L1
 594              	.L33:
 274:..\src/command_processing.c **** 
 275:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_CONF
 276:..\src/command_processing.c **** 
 277:..\src/command_processing.c ****         case CMD_GET_ADC_CONF:
 278:..\src/command_processing.c ****             cmd_get_ADC_map();
 595              		.loc 1 278 0
 596 04ba FFF7FEFF 		bl	cmd_get_ADC_map
 279:..\src/command_processing.c ****             break; 
 597              		.loc 1 279 0
 598 04be 03E0     		b	.L1
 599              	.L34:
 280:..\src/command_processing.c ****             
 281:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_RAW
 282:..\src/command_processing.c **** 
 283:..\src/command_processing.c ****         case CMD_GET_ADC_RAW:
 284:..\src/command_processing.c ****             cmd_get_ADC_raw();
 600              		.loc 1 284 0
 601 04c0 FFF7FEFF 		bl	cmd_get_ADC_raw
 285:..\src/command_processing.c ****             break; 
 602              		.loc 1 285 0
 603 04c4 00E0     		b	.L1
 604              	.L48:
 286:..\src/command_processing.c ****             
 287:..\src/command_processing.c ****             
 288:..\src/command_processing.c **** //=========================================================== ALL OTHER COMMANDS
 289:..\src/command_processing.c ****         default:
 290:..\src/command_processing.c ****             break;
 605              		.loc 1 290 0
 606 04c6 00BF     		nop
 607              	.L1:
 291:..\src/command_processing.c **** 
 292:..\src/command_processing.c ****     }
 293:..\src/command_processing.c **** }  
 608              		.loc 1 293 0
 609 04c8 2037     		adds	r7, r7, #32
 610              		.cfi_def_cfa_offset 8
 611 04ca BD46     		mov	sp, r7
 612              		.cfi_def_cfa_register 13
 613              		@ sp needed
 614 04cc 80BD     		pop	{r7, pc}
 615              	.L52:
 616 04ce 00BF     		.align	2
 617              	.L51:
 618 04d0 00000000 		.word	g_rx
 619 04d4 00000000 		.word	calib
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 31


 620 04d8 00000000 		.word	g_refNew
 621 04dc 01000000 		.word	g_rx+1
 622              		.cfi_endproc
 623              	.LFE64:
 624              		.size	commProcess, .-commProcess
 625              		.section	.text.infoSend,"ax",%progbits
 626              		.align	2
 627              		.global	infoSend
 628              		.thumb
 629              		.thumb_func
 630              		.type	infoSend, %function
 631              	infoSend:
 632              	.LFB65:
 294:..\src/command_processing.c **** 
 295:..\src/command_processing.c **** //==============================================================================
 296:..\src/command_processing.c **** //                                                                     INFO SEND
 297:..\src/command_processing.c **** //==============================================================================
 298:..\src/command_processing.c **** 
 299:..\src/command_processing.c **** void infoSend(void){
 633              		.loc 1 299 0
 634              		.cfi_startproc
 635              		@ args = 0, pretend = 0, frame = 1504
 636              		@ frame_needed = 1, uses_anonymous_args = 0
 637 0000 80B5     		push	{r7, lr}
 638              		.cfi_def_cfa_offset 8
 639              		.cfi_offset 7, -8
 640              		.cfi_offset 14, -4
 641 0002 ADF5BC6D 		sub	sp, sp, #1504
 642              		.cfi_def_cfa_offset 1512
 643 0006 00AF     		add	r7, sp, #0
 644              		.cfi_def_cfa_register 7
 300:..\src/command_processing.c ****     char packet_string[1500];
 301:..\src/command_processing.c ****     
 302:..\src/command_processing.c ****     prepare_generic_info(packet_string);
 645              		.loc 1 302 0
 646 0008 3B1D     		adds	r3, r7, #4
 647 000a 1846     		mov	r0, r3
 648 000c FFF7FEFF 		bl	prepare_generic_info
 303:..\src/command_processing.c ****     UART_RS485_PutString(packet_string);
 649              		.loc 1 303 0
 650 0010 3B1D     		adds	r3, r7, #4
 651 0012 1846     		mov	r0, r3
 652 0014 FFF7FEFF 		bl	UART_RS485_PutString
 304:..\src/command_processing.c **** }
 653              		.loc 1 304 0
 654 0018 00BF     		nop
 655 001a 07F5BC67 		add	r7, r7, #1504
 656              		.cfi_def_cfa_offset 8
 657 001e BD46     		mov	sp, r7
 658              		.cfi_def_cfa_register 13
 659              		@ sp needed
 660 0020 80BD     		pop	{r7, pc}
 661              		.cfi_endproc
 662              	.LFE65:
 663              		.size	infoSend, .-infoSend
 664 0022 00BF     		.section	.text.infoGet,"ax",%progbits
 665              		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 32


 666              		.global	infoGet
 667              		.thumb
 668              		.thumb_func
 669              		.type	infoGet, %function
 670              	infoGet:
 671              	.LFB66:
 305:..\src/command_processing.c **** 
 306:..\src/command_processing.c **** 
 307:..\src/command_processing.c **** //==============================================================================
 308:..\src/command_processing.c **** //                                                              COMMAND GET INFO
 309:..\src/command_processing.c **** //==============================================================================
 310:..\src/command_processing.c **** 
 311:..\src/command_processing.c **** void infoGet(uint16 info_type) {
 672              		.loc 1 311 0
 673              		.cfi_startproc
 674              		@ args = 0, pretend = 0, frame = 24008
 675              		@ frame_needed = 1, uses_anonymous_args = 0
 676 0000 80B5     		push	{r7, lr}
 677              		.cfi_def_cfa_offset 8
 678              		.cfi_offset 7, -8
 679              		.cfi_offset 14, -4
 680 0002 ADF5BB4D 		sub	sp, sp, #23936
 681              		.cfi_def_cfa_offset 23944
 682 0006 92B0     		sub	sp, sp, #72
 683              		.cfi_def_cfa_offset 24016
 684 0008 00AF     		add	r7, sp, #0
 685              		.cfi_def_cfa_register 7
 686 000a 0246     		mov	r2, r0
 687 000c 07F14803 		add	r3, r7, #72
 688 0010 423B     		subs	r3, r3, #66
 689 0012 1A80     		strh	r2, [r3]	@ movhi
 312:..\src/command_processing.c ****     char packet_string[4000] = "";
 690              		.loc 1 312 0
 691 0014 07F59C43 		add	r3, r7, #19968
 692 0018 03F12803 		add	r3, r3, #40
 693 001c 0022     		movs	r2, #0
 694 001e 1A60     		str	r2, [r3]
 695 0020 0433     		adds	r3, r3, #4
 696 0022 40F69C72 		movw	r2, #3996
 697 0026 0021     		movs	r1, #0
 698 0028 1846     		mov	r0, r3
 699 002a FFF7FEFF 		bl	memset
 313:..\src/command_processing.c ****     char str_sd_data[20000] = "";
 700              		.loc 1 313 0
 701 002e 07F14803 		add	r3, r7, #72
 702 0032 403B     		subs	r3, r3, #64
 703 0034 0022     		movs	r2, #0
 704 0036 1A60     		str	r2, [r3]
 705 0038 0433     		adds	r3, r3, #4
 706 003a 44F61C62 		movw	r2, #19996
 707 003e 0021     		movs	r1, #0
 708 0040 1846     		mov	r0, r3
 709 0042 FFF7FEFF 		bl	memset
 314:..\src/command_processing.c ****     //==================================     choose info type and prepare string
 315:..\src/command_processing.c **** 
 316:..\src/command_processing.c ****     switch (info_type) {
 710              		.loc 1 316 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 33


 711 0046 07F14803 		add	r3, r7, #72
 712 004a 423B     		subs	r3, r3, #66
 713 004c 1B88     		ldrh	r3, [r3]
 714 004e 032B     		cmp	r3, #3
 715 0050 50D8     		bhi	.L62
 716 0052 01A2     		adr	r2, .L57
 717 0054 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 718              		.p2align 2
 719              	.L57:
 720 0058 69000000 		.word	.L56+1
 721 005c 8B000000 		.word	.L58+1
 722 0060 AD000000 		.word	.L59+1
 723 0064 D3000000 		.word	.L60+1
 724              		.p2align 1
 725              	.L56:
 317:..\src/command_processing.c ****         case INFO_ALL:
 318:..\src/command_processing.c ****             prepare_generic_info(packet_string);
 726              		.loc 1 318 0
 727 0068 07F59C43 		add	r3, r7, #19968
 728 006c 03F12803 		add	r3, r3, #40
 729 0070 1846     		mov	r0, r3
 730 0072 FFF7FEFF 		bl	prepare_generic_info
 319:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer(); 
 731              		.loc 1 319 0
 732 0076 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 320:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 733              		.loc 1 320 0
 734 007a 07F59C43 		add	r3, r7, #19968
 735 007e 03F12803 		add	r3, r3, #40
 736 0082 1846     		mov	r0, r3
 737 0084 FFF7FEFF 		bl	UART_RS485_PutString
 321:..\src/command_processing.c ****             break;
 738              		.loc 1 321 0
 739 0088 35E0     		b	.L61
 740              	.L58:
 322:..\src/command_processing.c ****         case CYCLES_INFO:
 323:..\src/command_processing.c ****             prepare_counter_info(packet_string);
 741              		.loc 1 323 0
 742 008a 07F59C43 		add	r3, r7, #19968
 743 008e 03F12803 		add	r3, r3, #40
 744 0092 1846     		mov	r0, r3
 745 0094 FFF7FEFF 		bl	prepare_counter_info
 324:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 746              		.loc 1 324 0
 747 0098 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 325:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 748              		.loc 1 325 0
 749 009c 07F59C43 		add	r3, r7, #19968
 750 00a0 03F12803 		add	r3, r3, #40
 751 00a4 1846     		mov	r0, r3
 752 00a6 FFF7FEFF 		bl	UART_RS485_PutString
 326:..\src/command_processing.c ****             break;
 753              		.loc 1 326 0
 754 00aa 24E0     		b	.L61
 755              	.L59:
 327:..\src/command_processing.c ****         case GET_SD_PARAM:
 328:..\src/command_processing.c ****             Read_SD_Param(packet_string, sizeof(packet_string));
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 34


 756              		.loc 1 328 0
 757 00ac 07F59C43 		add	r3, r7, #19968
 758 00b0 03F12803 		add	r3, r3, #40
 759 00b4 4FF47A61 		mov	r1, #4000
 760 00b8 1846     		mov	r0, r3
 761 00ba FFF7FEFF 		bl	Read_SD_Param
 329:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 762              		.loc 1 329 0
 763 00be FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 330:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 764              		.loc 1 330 0
 765 00c2 07F59C43 		add	r3, r7, #19968
 766 00c6 03F12803 		add	r3, r3, #40
 767 00ca 1846     		mov	r0, r3
 768 00cc FFF7FEFF 		bl	UART_RS485_PutString
 331:..\src/command_processing.c ****             break;
 769              		.loc 1 331 0
 770 00d0 11E0     		b	.L61
 771              	.L60:
 332:..\src/command_processing.c ****         case GET_SD_DATA:
 333:..\src/command_processing.c ****             Read_SD_Data(str_sd_data, sizeof(str_sd_data));
 772              		.loc 1 333 0
 773 00d2 07F14803 		add	r3, r7, #72
 774 00d6 403B     		subs	r3, r3, #64
 775 00d8 44F62061 		movw	r1, #20000
 776 00dc 1846     		mov	r0, r3
 777 00de FFF7FEFF 		bl	Read_SD_Data
 334:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 778              		.loc 1 334 0
 779 00e2 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 335:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 780              		.loc 1 335 0
 781 00e6 07F14803 		add	r3, r7, #72
 782 00ea 403B     		subs	r3, r3, #64
 783 00ec 1846     		mov	r0, r3
 784 00ee FFF7FEFF 		bl	UART_RS485_PutString
 336:..\src/command_processing.c **** 
 337:..\src/command_processing.c ****             break;
 785              		.loc 1 337 0
 786 00f2 00E0     		b	.L61
 787              	.L62:
 338:..\src/command_processing.c ****         default:
 339:..\src/command_processing.c ****             break;
 788              		.loc 1 339 0
 789 00f4 00BF     		nop
 790              	.L61:
 340:..\src/command_processing.c ****     }
 341:..\src/command_processing.c **** }
 791              		.loc 1 341 0 discriminator 1
 792 00f6 00BF     		nop
 793 00f8 07F5BB47 		add	r7, r7, #23936
 794 00fc 4837     		adds	r7, r7, #72
 795              		.cfi_def_cfa_offset 8
 796 00fe BD46     		mov	sp, r7
 797              		.cfi_def_cfa_register 13
 798              		@ sp needed
 799 0100 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 35


 800              		.cfi_endproc
 801              	.LFE66:
 802              		.size	infoGet, .-infoGet
 803              		.global	__aeabi_i2f
 804              		.global	__aeabi_fdiv
 805 0102 00BF     		.section	.rodata
 806              		.align	2
 807              	.LC87:
 808 0000 20557362 		.ascii	" Usb\000"
 808      00
 809 0005 000000   		.align	2
 810              	.LC88:
 811 0008 2048616E 		.ascii	" Handle\000"
 811      646C6500 
 812              		.align	2
 813              	.LC89:
 814 0010 20454D47 		.ascii	" EMG proportional\000"
 814      2070726F 
 814      706F7274 
 814      696F6E61 
 814      6C00
 815 0022 0000     		.align	2
 816              	.LC90:
 817 0024 20454D47 		.ascii	" EMG integral\000"
 817      20696E74 
 817      65677261 
 817      6C00
 818 0032 0000     		.align	2
 819              	.LC91:
 820 0034 20454D47 		.ascii	" EMG FCFS\000"
 820      20464346 
 820      5300
 821 003e 0000     		.align	2
 822              	.LC92:
 823 0040 20454D47 		.ascii	" EMG FCFS Advanced\000"
 823      20464346 
 823      53204164 
 823      76616E63 
 823      656400
 824 0053 00       		.align	2
 825              	.LC93:
 826 0054 204A6F79 		.ascii	" Joystick\000"
 826      73746963 
 826      6B00
 827 005e 0000     		.align	2
 828              	.LC94:
 829 0060 20454D47 		.ascii	" EMG proportional Normally Closed\000"
 829      2070726F 
 829      706F7274 
 829      696F6E61 
 829      6C204E6F 
 830 0082 0000     		.align	2
 831              	.LC95:
 832 0084 20506F73 		.ascii	" Position\000"
 832      6974696F 
 832      6E00
 833 008e 0000     		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 36


 834              	.LC96:
 835 0090 2050574D 		.ascii	" PWM\000"
 835      00
 836 0095 000000   		.align	2
 837              	.LC97:
 838 0098 20437572 		.ascii	" Current\000"
 838      72656E74 
 838      00
 839 00a1 000000   		.align	2
 840              	.LC98:
 841 00a4 20506F73 		.ascii	" Position and Current\000"
 841      6974696F 
 841      6E20616E 
 841      64204375 
 841      7272656E 
 842 00ba 0000     		.align	2
 843              	.LC99:
 844 00bc 20594553 		.ascii	" YES\000\000"
 844      0000
 845 00c2 0000     		.align	2
 846              	.LC100:
 847 00c4 204E4F00 		.ascii	" NO\000\000"
 847      00
 848 00c9 000000   		.align	2
 849              	.LC101:
 850 00cc 20526967 		.ascii	" Right\000\000"
 850      68740000 
 851              		.align	2
 852              	.LC102:
 853 00d4 204C6566 		.ascii	" Left\000\000"
 853      740000
 854 00db 00       		.align	2
 855              	.LC103:
 856 00dc 204F4646 		.ascii	" OFF\000\000"
 856      0000
 857 00e2 0000     		.align	2
 858              	.LC104:
 859 00e4 204F4E00 		.ascii	" ON\000\000"
 859      00
 860 00e9 000000   		.align	2
 861              	.LC105:
 862 00ec 204E6F6E 		.ascii	" None\000\000"
 862      650000
 863 00f3 00       		.align	2
 864              	.LC106:
 865 00f4 2053442F 		.ascii	" SD/RTC board\000\000"
 865      52544320 
 865      626F6172 
 865      640000
 866 0103 00       		.align	2
 867              	.LC107:
 868 0104 20576946 		.ascii	" WiFi board [N/A]\000\000"
 868      6920626F 
 868      61726420 
 868      5B4E2F41 
 868      5D0000
 869 0117 00       		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 37


 870              	.LC108:
 871 0118 204F7468 		.ascii	" Other [N/A]\000\000"
 871      6572205B 
 871      4E2F415D 
 871      0000
 872 0126 0000     		.align	2
 873              	.LC109:
 874 0128 204C6F77 		.ascii	" Low\000\000"
 874      0000
 875 012e 0000     		.align	2
 876              	.LC110:
 877 0130 20486967 		.ascii	" High\000\000"
 877      680000
 878 0137 00       		.align	2
 879              	.LC111:
 880 0138 2047454E 		.ascii	" GENERIC USER\000\000"
 880      45524943 
 880      20555345 
 880      520000
 881 0147 00       		.align	2
 882              	.LC112:
 883 0148 204D4152 		.ascii	" MARIA\000\000"
 883      49410000 
 884              		.align	2
 885              	.LC113:
 886 0150 20524F5A 		.ascii	" ROZA\000\000"
 886      410000
 887 0157 00       		.align	2
 888              	.LC114:
 889 0158 204D4333 		.ascii	" MC33887 (Standard)\000\000"
 889      33383837 
 889      20285374 
 889      616E6461 
 889      72642900 
 890 016d 000000   		.align	2
 891              	.LC115:
 892 0170 20564E48 		.ascii	" VNH5019 (High power)\000\000"
 892      35303139 
 892      20284869 
 892      67682070 
 892      6F776572 
 893 0187 00       		.align	2
 894              	.LC116:
 895 0188 20534F46 		.ascii	" SOFTHAND PRO\000\000"
 895      5448414E 
 895      44205052 
 895      4F0000
 896 0197 00       		.align	2
 897              	.LC117:
 898 0198 2047454E 		.ascii	" GENERIC 2 MOTORS\000\000"
 898      45524943 
 898      2032204D 
 898      4F544F52 
 898      530000
 899 01ab 00       		.align	2
 900              	.LC118:
 901 01ac 20414952 		.ascii	" AIR CHAMBERS\000\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 38


 901      20434841 
 901      4D424552 
 901      530000
 902 01bb 00       		.align	2
 903              	.LC119:
 904 01bc 204F5454 		.ascii	" OTTOBOCK WRIST\000\000"
 904      4F424F43 
 904      4B205752 
 904      49535400 
 904      00
 905 01cd 000000   		.align	2
 906              	.LC120:
 907 01d0 20534F46 		.ascii	" SOFTHAND 2 MOTORS\000\000"
 907      5448414E 
 907      44203220 
 907      4D4F544F 
 907      52530000 
 908              		.align	2
 909              	.LC121:
 910 01e4 20466173 		.ascii	" Fast:wrist, Slow:hand\000\000"
 910      743A7772 
 910      6973742C 
 910      20536C6F 
 910      773A6861 
 911              		.align	2
 912              	.LC122:
 913 01fc 20536C6F 		.ascii	" Slow:wrist, Fast:hand\000\000"
 913      773A7772 
 913      6973742C 
 913      20466173 
 913      743A6861 
 914              		.align	2
 915              	.LC123:
 916 0214 20436C6F 		.ascii	" Close:CW, Open:CCW\000\000"
 916      73653A43 
 916      572C204F 
 916      70656E3A 
 916      43435700 
 917 0229 000000   		.align	2
 918              	.LC124:
 919 022c 20436C6F 		.ascii	" Close:CCW, Open:CW\000\000"
 919      73653A43 
 919      43572C20 
 919      4F70656E 
 919      3A435700 
 920              		.section	.text.get_param_list,"ax",%progbits
 921              		.align	2
 922              		.global	get_param_list
 923              		.thumb
 924              		.thumb_func
 925              		.type	get_param_list, %function
 926              	get_param_list:
 927              	.LFB67:
 342:..\src/command_processing.c **** 
 343:..\src/command_processing.c **** 
 344:..\src/command_processing.c **** //==============================================================================
 345:..\src/command_processing.c **** //                                                                GET PARAM LIST
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 39


 346:..\src/command_processing.c **** //==============================================================================
 347:..\src/command_processing.c **** 
 348:..\src/command_processing.c **** void get_param_list (uint8* VAR_P[NUM_OF_PARAMS], uint8 TYPES[NUM_OF_PARAMS], 
 349:..\src/command_processing.c ****                      uint8 NUM_ITEMS[NUM_OF_PARAMS], uint8 NUM_STRUCT[NUM_OF_PARAMS],
 350:..\src/command_processing.c ****                      uint8* NUM_MENU, const char* PARAMS_STR[NUM_OF_PARAMS], 
 351:..\src/command_processing.c ****                      uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS], const char* MENU_STR[NUM_OF_PARAMS_MENU
 928              		.loc 1 351 0
 929              		.cfi_startproc
 930              		@ args = 16, pretend = 0, frame = 5904
 931              		@ frame_needed = 1, uses_anonymous_args = 0
 932 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 933              		.cfi_def_cfa_offset 20
 934              		.cfi_offset 4, -20
 935              		.cfi_offset 5, -16
 936              		.cfi_offset 6, -12
 937              		.cfi_offset 7, -8
 938              		.cfi_offset 14, -4
 939 0002 ADF5B85D 		sub	sp, sp, #5888
 940              		.cfi_def_cfa_offset 5908
 941 0006 85B0     		sub	sp, sp, #20
 942              		.cfi_def_cfa_offset 5928
 943 0008 00AF     		add	r7, sp, #0
 944              		.cfi_def_cfa_register 7
 945 000a 07F11004 		add	r4, r7, #16
 946 000e 043C     		subs	r4, r4, #4
 947 0010 2060     		str	r0, [r4]
 948 0012 07F11000 		add	r0, r7, #16
 949 0016 0838     		subs	r0, r0, #8
 950 0018 0160     		str	r1, [r0]
 951 001a 07F11001 		add	r1, r7, #16
 952 001e 0C39     		subs	r1, r1, #12
 953 0020 0A60     		str	r2, [r1]
 954 0022 07F11002 		add	r2, r7, #16
 955 0026 103A     		subs	r2, r2, #16
 956 0028 1360     		str	r3, [r2]
 352:..\src/command_processing.c ****     
 353:..\src/command_processing.c ****     //Package to be sent variables
 354:..\src/command_processing.c ****     uint8 packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MENUS + 
 957              		.loc 1 354 0
 958 002a 07F17003 		add	r3, r7, #112
 959 002e 1C3B     		subs	r3, r3, #28
 960 0030 0022     		movs	r2, #0
 961 0032 1A60     		str	r2, [r3]
 962 0034 0433     		adds	r3, r3, #4
 963 0036 41F2A462 		movw	r2, #5796
 964 003a 0021     		movs	r1, #0
 965 003c 1846     		mov	r0, r3
 966 003e FFF7FEFF 		bl	memset
 355:..\src/command_processing.c ****     uint16 packet_lenght = PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MEN
 967              		.loc 1 355 0
 968 0042 41F2A863 		movw	r3, #5800
 969 0046 07F5B852 		add	r2, r7, #5888
 970 004a 02F10802 		add	r2, r2, #8
 971 004e 1380     		strh	r3, [r2]	@ movhi
 356:..\src/command_processing.c **** 
 357:..\src/command_processing.c ****     //Auxiliary variables
 358:..\src/command_processing.c ****     uint8 CYDATA i, j;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 40


 359:..\src/command_processing.c ****     uint8 CYDATA idx = 0;       //Parameter number
 972              		.loc 1 359 0
 973 0050 0023     		movs	r3, #0
 974 0052 07F5B852 		add	r2, r7, #5888
 975 0056 02F10D02 		add	r2, r2, #13
 976 005a 1370     		strb	r3, [r2]
 360:..\src/command_processing.c ****     uint8 CYDATA idx_menu = 0;
 977              		.loc 1 360 0
 978 005c 0023     		movs	r3, #0
 979 005e 07F5B852 		add	r2, r7, #5888
 980 0062 02F10C02 		add	r2, r2, #12
 981 0066 1370     		strb	r3, [r2]
 361:..\src/command_processing.c ****     uint8 CYDATA sod = 0;       //sizeof data
 982              		.loc 1 361 0
 983 0068 0023     		movs	r3, #0
 984 006a 07F5B852 		add	r2, r7, #5888
 985 006e 02F10B02 		add	r2, r2, #11
 986 0072 1370     		strb	r3, [r2]
 362:..\src/command_processing.c ****     uint8 CYDATA string_lenght;
 363:..\src/command_processing.c ****     char CYDATA aux_str[50] = "";
 987              		.loc 1 363 0
 988 0074 07F13003 		add	r3, r7, #48
 989 0078 103B     		subs	r3, r3, #16
 990 007a 0022     		movs	r2, #0
 991 007c 1A60     		str	r2, [r3]
 992 007e 0433     		adds	r3, r3, #4
 993 0080 2E22     		movs	r2, #46
 994 0082 0021     		movs	r1, #0
 995 0084 1846     		mov	r0, r3
 996 0086 FFF7FEFF 		bl	memset
 364:..\src/command_processing.c ****     float aux_float;
 365:..\src/command_processing.c ****     int16 aux_int16;
 366:..\src/command_processing.c ****     uint16 aux_uint16;
 367:..\src/command_processing.c ****     int32 aux_int32;
 368:..\src/command_processing.c ****     uint32 aux_uint32;
 369:..\src/command_processing.c **** 
 370:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 997              		.loc 1 370 0
 998 008a 0023     		movs	r3, #0
 999 008c 07F5B852 		add	r2, r7, #5888
 1000 0090 02F10702 		add	r2, r2, #7
 1001 0094 1370     		strb	r3, [r2]
 371:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 1002              		.loc 1 371 0
 1003 0096 0123     		movs	r3, #1
 1004 0098 07F5B852 		add	r2, r7, #5888
 1005 009c 02F10602 		add	r2, r2, #6
 1006 00a0 1370     		strb	r3, [r2]
 372:..\src/command_processing.c ****   
 373:..\src/command_processing.c ****     uint8* m_addr = (uint8*)VAR_P[0];
 1007              		.loc 1 373 0
 1008 00a2 07F11003 		add	r3, r7, #16
 1009 00a6 043B     		subs	r3, r3, #4
 1010 00a8 1B68     		ldr	r3, [r3]
 1011 00aa 1B68     		ldr	r3, [r3]
 1012 00ac 07F5B852 		add	r2, r7, #5888
 1013 00b0 1360     		str	r3, [r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 41


 374:..\src/command_processing.c ****     uint8* m_tmp = m_addr;
 1014              		.loc 1 374 0
 1015 00b2 07F5B853 		add	r3, r7, #5888
 1016 00b6 1B68     		ldr	r3, [r3]
 1017 00b8 07F5B752 		add	r2, r7, #5856
 1018 00bc 02F11C02 		add	r2, r2, #28
 1019 00c0 1360     		str	r3, [r2]
 375:..\src/command_processing.c ****         
 376:..\src/command_processing.c ****     packet_data[0] = CMD_GET_PARAM_LIST;
 1020              		.loc 1 376 0
 1021 00c2 07F17003 		add	r3, r7, #112
 1022 00c6 1C3B     		subs	r3, r3, #28
 1023 00c8 0C22     		movs	r2, #12
 1024 00ca 1A70     		strb	r2, [r3]
 377:..\src/command_processing.c ****     packet_data[1] = NUM_OF_DEV_PARAMS;
 1025              		.loc 1 377 0
 1026 00cc 07F17003 		add	r3, r7, #112
 1027 00d0 1C3B     		subs	r3, r3, #28
 1028 00d2 4F22     		movs	r2, #79
 1029 00d4 5A70     		strb	r2, [r3, #1]
 378:..\src/command_processing.c ****     
 379:..\src/command_processing.c ****     for (idx = 0; idx < NUM_OF_DEV_PARAMS; idx++) {
 1030              		.loc 1 379 0
 1031 00d6 0023     		movs	r3, #0
 1032 00d8 07F5B852 		add	r2, r7, #5888
 1033 00dc 02F10D02 		add	r2, r2, #13
 1034 00e0 1370     		strb	r3, [r2]
 1035 00e2 02F078BF 		b	.L64
 1036              	.L262:
 380:..\src/command_processing.c ****         
 381:..\src/command_processing.c ****         // Assign m_addr memory address
 382:..\src/command_processing.c ****         m_addr = (uint8*)VAR_P[idx];
 1037              		.loc 1 382 0
 1038 00e6 07F5B853 		add	r3, r7, #5888
 1039 00ea 03F10D03 		add	r3, r3, #13
 1040 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1041 00f0 9A00     		lsls	r2, r3, #2
 1042 00f2 07F11003 		add	r3, r7, #16
 1043 00f6 043B     		subs	r3, r3, #4
 1044 00f8 1B68     		ldr	r3, [r3]
 1045 00fa 1344     		add	r3, r3, r2
 1046 00fc 1B68     		ldr	r3, [r3]
 1047 00fe 07F5B852 		add	r2, r7, #5888
 1048 0102 1360     		str	r3, [r2]
 383:..\src/command_processing.c ****         
 384:..\src/command_processing.c ****         // Add parameter type and size to packet
 385:..\src/command_processing.c ****         packet_data[2 + PARAM_BYTE_SLOT*idx] = TYPES[idx];
 1049              		.loc 1 385 0
 1050 0104 07F5B853 		add	r3, r7, #5888
 1051 0108 03F10D03 		add	r3, r3, #13
 1052 010c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1053 010e 3222     		movs	r2, #50
 1054 0110 02FB03F3 		mul	r3, r2, r3
 1055 0114 9A1C     		adds	r2, r3, #2
 1056 0116 07F5B853 		add	r3, r7, #5888
 1057 011a 03F10D03 		add	r3, r3, #13
 1058 011e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 42


 1059 0120 07F11003 		add	r3, r7, #16
 1060 0124 083B     		subs	r3, r3, #8
 1061 0126 1B68     		ldr	r3, [r3]
 1062 0128 0B44     		add	r3, r3, r1
 1063 012a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1064 012c 07F17003 		add	r3, r7, #112
 1065 0130 1C3B     		subs	r3, r3, #28
 1066 0132 9954     		strb	r1, [r3, r2]
 386:..\src/command_processing.c ****         packet_data[3 + PARAM_BYTE_SLOT*idx] = NUM_ITEMS[idx];
 1067              		.loc 1 386 0
 1068 0134 07F5B853 		add	r3, r7, #5888
 1069 0138 03F10D03 		add	r3, r3, #13
 1070 013c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1071 013e 3222     		movs	r2, #50
 1072 0140 02FB03F3 		mul	r3, r2, r3
 1073 0144 DA1C     		adds	r2, r3, #3
 1074 0146 07F5B853 		add	r3, r7, #5888
 1075 014a 03F10D03 		add	r3, r3, #13
 1076 014e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1077 0150 07F11003 		add	r3, r7, #16
 1078 0154 0C3B     		subs	r3, r3, #12
 1079 0156 1B68     		ldr	r3, [r3]
 1080 0158 0B44     		add	r3, r3, r1
 1081 015a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1082 015c 07F17003 		add	r3, r7, #112
 1083 0160 1C3B     		subs	r3, r3, #28
 1084 0162 9954     		strb	r1, [r3, r2]
 387:..\src/command_processing.c ****         
 388:..\src/command_processing.c ****         // Find size of data
 389:..\src/command_processing.c ****         switch (TYPES[idx]) {
 1085              		.loc 1 389 0
 1086 0164 07F5B853 		add	r3, r7, #5888
 1087 0168 03F10D03 		add	r3, r3, #13
 1088 016c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1089 016e 07F11003 		add	r3, r7, #16
 1090 0172 083B     		subs	r3, r3, #8
 1091 0174 1B68     		ldr	r3, [r3]
 1092 0176 1344     		add	r3, r3, r2
 1093 0178 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1094 017a 092B     		cmp	r3, #9
 1095 017c 2BD8     		bhi	.L65
 1096 017e 01A2     		adr	r2, .L67
 1097 0180 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1098              		.p2align 2
 1099              	.L67:
 1100 0184 AD010000 		.word	.L66+1
 1101 0188 AD010000 		.word	.L66+1
 1102 018c AD010000 		.word	.L66+1
 1103 0190 BB010000 		.word	.L68+1
 1104 0194 BB010000 		.word	.L68+1
 1105 0198 C9010000 		.word	.L69+1
 1106 019c C9010000 		.word	.L69+1
 1107 01a0 C9010000 		.word	.L69+1
 1108 01a4 D7010000 		.word	.L65+1
 1109 01a8 AD010000 		.word	.L66+1
 1110              		.p2align 1
 1111              	.L66:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 43


 390:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 391:..\src/command_processing.c ****                 sod = 1; break;
 1112              		.loc 1 391 0
 1113 01ac 0123     		movs	r3, #1
 1114 01ae 07F5B852 		add	r2, r7, #5888
 1115 01b2 02F10B02 		add	r2, r2, #11
 1116 01b6 1370     		strb	r3, [r2]
 1117 01b8 0DE0     		b	.L65
 1118              	.L68:
 392:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 393:..\src/command_processing.c ****                 sod = 2; break;
 1119              		.loc 1 393 0
 1120 01ba 0223     		movs	r3, #2
 1121 01bc 07F5B852 		add	r2, r7, #5888
 1122 01c0 02F10B02 		add	r2, r2, #11
 1123 01c4 1370     		strb	r3, [r2]
 1124 01c6 06E0     		b	.L65
 1125              	.L69:
 394:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 395:..\src/command_processing.c ****                 sod = 4; break;
 1126              		.loc 1 395 0
 1127 01c8 0423     		movs	r3, #4
 1128 01ca 07F5B852 		add	r2, r7, #5888
 1129 01ce 02F10B02 		add	r2, r2, #11
 1130 01d2 1370     		strb	r3, [r2]
 1131 01d4 00BF     		nop
 1132              	.L65:
 396:..\src/command_processing.c ****         }
 397:..\src/command_processing.c ****             
 398:..\src/command_processing.c ****         if (!CUSTOM_PARAM_GET[idx]) {       // Default param get
 1133              		.loc 1 398 0
 1134 01d6 07F5B853 		add	r3, r7, #5888
 1135 01da 03F10D03 		add	r3, r3, #13
 1136 01de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1137 01e0 07F5B952 		add	r2, r7, #5920
 1138 01e4 02F11002 		add	r2, r2, #16
 1139 01e8 1268     		ldr	r2, [r2]
 1140 01ea 1344     		add	r3, r3, r2
 1141 01ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1142 01ee 002B     		cmp	r3, #0
 1143 01f0 40F0CC83 		bne	.L70
 399:..\src/command_processing.c ****             
 400:..\src/command_processing.c ****             // Add parameter data to packet
 401:..\src/command_processing.c ****             switch (TYPES[idx]) {
 1144              		.loc 1 401 0
 1145 01f4 07F5B853 		add	r3, r7, #5888
 1146 01f8 03F10D03 		add	r3, r3, #13
 1147 01fc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1148 01fe 07F11003 		add	r3, r7, #16
 1149 0202 083B     		subs	r3, r3, #8
 1150 0204 1B68     		ldr	r3, [r3]
 1151 0206 1344     		add	r3, r3, r2
 1152 0208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1153 020a 092B     		cmp	r3, #9
 1154 020c 02F22581 		bhi	.L104
 1155 0210 01A2     		adr	r2, .L73
 1156 0212 52F823F0 		ldr	pc, [r2, r3, lsl #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 44


 1157 0216 00BF     		.p2align 2
 1158              	.L73:
 1159 0218 41020000 		.word	.L72+1
 1160 021c F9020000 		.word	.L74+1
 1161 0220 41020000 		.word	.L72+1
 1162 0224 B1030000 		.word	.L75+1
 1163 0228 DF040000 		.word	.L76+1
 1164 022c 0B060000 		.word	.L77+1
 1165 0230 37070000 		.word	.L78+1
 1166 0234 5F080000 		.word	.L79+1
 1167 0238 5B240000 		.word	.L104+1
 1168 023c 41020000 		.word	.L72+1
 1169              		.p2align 1
 1170              	.L72:
 402:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8: case TYPE_STRING:
 403:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1171              		.loc 1 403 0
 1172 0240 0023     		movs	r3, #0
 1173 0242 07F5B852 		add	r2, r7, #5888
 1174 0246 02F10F02 		add	r2, r2, #15
 1175 024a 1370     		strb	r3, [r2]
 1176 024c 40E0     		b	.L80
 1177              	.L81:
 404:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1178              		.loc 1 404 0 discriminator 3
 1179 024e 07F5B853 		add	r3, r7, #5888
 1180 0252 03F10F03 		add	r3, r3, #15
 1181 0256 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1182 0258 07F5B852 		add	r2, r7, #5888
 1183 025c 02F10B02 		add	r2, r2, #11
 1184 0260 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1185 0262 02FB03F3 		mul	r3, r2, r3
 1186 0266 1A46     		mov	r2, r3
 1187 0268 07F5B853 		add	r3, r7, #5888
 1188 026c 1B68     		ldr	r3, [r3]
 1189 026e 1344     		add	r3, r3, r2
 1190 0270 07F5B752 		add	r2, r7, #5856
 1191 0274 02F11C02 		add	r2, r2, #28
 1192 0278 1360     		str	r3, [r2]
 405:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1193              		.loc 1 405 0 discriminator 3
 1194 027a 07F5B853 		add	r3, r7, #5888
 1195 027e 03F10D03 		add	r3, r3, #13
 1196 0282 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1197 0284 3222     		movs	r2, #50
 1198 0286 02FB03F3 		mul	r3, r2, r3
 1199 028a 1A1D     		adds	r2, r3, #4
 1200 028c 07F5B853 		add	r3, r7, #5888
 1201 0290 03F10F03 		add	r3, r3, #15
 1202 0294 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1203 0296 07F5B851 		add	r1, r7, #5888
 1204 029a 01F10B01 		add	r1, r1, #11
 1205 029e 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1206 02a0 01FB03F3 		mul	r3, r1, r3
 1207 02a4 1A44     		add	r2, r2, r3
 1208 02a6 07F5B753 		add	r3, r7, #5856
 1209 02aa 03F11C03 		add	r3, r3, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 45


 1210 02ae 1B68     		ldr	r3, [r3]
 1211 02b0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1212 02b2 07F17003 		add	r3, r7, #112
 1213 02b6 1C3B     		subs	r3, r3, #28
 1214 02b8 9954     		strb	r1, [r3, r2]
 403:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1215              		.loc 1 403 0 discriminator 3
 1216 02ba 07F5B853 		add	r3, r7, #5888
 1217 02be 03F10F03 		add	r3, r3, #15
 1218 02c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1219 02c4 0133     		adds	r3, r3, #1
 1220 02c6 07F5B852 		add	r2, r7, #5888
 1221 02ca 02F10F02 		add	r2, r2, #15
 1222 02ce 1370     		strb	r3, [r2]
 1223              	.L80:
 403:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1224              		.loc 1 403 0 is_stmt 0 discriminator 1
 1225 02d0 07F5B853 		add	r3, r7, #5888
 1226 02d4 03F10D03 		add	r3, r3, #13
 1227 02d8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1228 02da 07F11003 		add	r3, r7, #16
 1229 02de 0C3B     		subs	r3, r3, #12
 1230 02e0 1B68     		ldr	r3, [r3]
 1231 02e2 1344     		add	r3, r3, r2
 1232 02e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1233 02e6 07F5B852 		add	r2, r7, #5888
 1234 02ea 02F10F02 		add	r2, r2, #15
 1235 02ee 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1236 02f0 9A42     		cmp	r2, r3
 1237 02f2 ACD3     		bcc	.L81
 406:..\src/command_processing.c ****                     }
 407:..\src/command_processing.c ****                     break;                
 1238              		.loc 1 407 0 is_stmt 1
 1239 02f4 02F0B1B8 		b	.L104
 1240              	.L74:
 408:..\src/command_processing.c ****                 case TYPE_INT8:
 409:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1241              		.loc 1 409 0
 1242 02f8 0023     		movs	r3, #0
 1243 02fa 07F5B852 		add	r2, r7, #5888
 1244 02fe 02F10F02 		add	r2, r2, #15
 1245 0302 1370     		strb	r3, [r2]
 1246 0304 40E0     		b	.L82
 1247              	.L83:
 410:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1248              		.loc 1 410 0 discriminator 3
 1249 0306 07F5B853 		add	r3, r7, #5888
 1250 030a 03F10F03 		add	r3, r3, #15
 1251 030e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1252 0310 07F5B852 		add	r2, r7, #5888
 1253 0314 02F10B02 		add	r2, r2, #11
 1254 0318 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1255 031a 02FB03F3 		mul	r3, r2, r3
 1256 031e 1A46     		mov	r2, r3
 1257 0320 07F5B853 		add	r3, r7, #5888
 1258 0324 1B68     		ldr	r3, [r3]
 1259 0326 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 46


 1260 0328 07F5B752 		add	r2, r7, #5856
 1261 032c 02F11C02 		add	r2, r2, #28
 1262 0330 1360     		str	r3, [r2]
 411:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1263              		.loc 1 411 0 discriminator 3
 1264 0332 07F5B853 		add	r3, r7, #5888
 1265 0336 03F10D03 		add	r3, r3, #13
 1266 033a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1267 033c 3222     		movs	r2, #50
 1268 033e 02FB03F3 		mul	r3, r2, r3
 1269 0342 1A1D     		adds	r2, r3, #4
 1270 0344 07F5B853 		add	r3, r7, #5888
 1271 0348 03F10F03 		add	r3, r3, #15
 1272 034c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1273 034e 07F5B851 		add	r1, r7, #5888
 1274 0352 01F10B01 		add	r1, r1, #11
 1275 0356 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1276 0358 01FB03F3 		mul	r3, r1, r3
 1277 035c 1A44     		add	r2, r2, r3
 1278 035e 07F5B753 		add	r3, r7, #5856
 1279 0362 03F11C03 		add	r3, r3, #28
 1280 0366 1B68     		ldr	r3, [r3]
 1281 0368 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1282 036a 07F17003 		add	r3, r7, #112
 1283 036e 1C3B     		subs	r3, r3, #28
 1284 0370 9954     		strb	r1, [r3, r2]
 409:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1285              		.loc 1 409 0 discriminator 3
 1286 0372 07F5B853 		add	r3, r7, #5888
 1287 0376 03F10F03 		add	r3, r3, #15
 1288 037a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1289 037c 0133     		adds	r3, r3, #1
 1290 037e 07F5B852 		add	r2, r7, #5888
 1291 0382 02F10F02 		add	r2, r2, #15
 1292 0386 1370     		strb	r3, [r2]
 1293              	.L82:
 409:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1294              		.loc 1 409 0 is_stmt 0 discriminator 1
 1295 0388 07F5B853 		add	r3, r7, #5888
 1296 038c 03F10D03 		add	r3, r3, #13
 1297 0390 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1298 0392 07F11003 		add	r3, r7, #16
 1299 0396 0C3B     		subs	r3, r3, #12
 1300 0398 1B68     		ldr	r3, [r3]
 1301 039a 1344     		add	r3, r3, r2
 1302 039c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1303 039e 07F5B852 		add	r2, r7, #5888
 1304 03a2 02F10F02 		add	r2, r2, #15
 1305 03a6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1306 03a8 9A42     		cmp	r2, r3
 1307 03aa ACD3     		bcc	.L83
 412:..\src/command_processing.c ****                     }
 413:..\src/command_processing.c ****                     break;
 1308              		.loc 1 413 0 is_stmt 1
 1309 03ac 02F055B8 		b	.L104
 1310              	.L75:
 414:..\src/command_processing.c ****                 case TYPE_INT16:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 47


 415:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1311              		.loc 1 415 0
 1312 03b0 0023     		movs	r3, #0
 1313 03b2 07F5B852 		add	r2, r7, #5888
 1314 03b6 02F10F02 		add	r2, r2, #15
 1315 03ba 1370     		strb	r3, [r2]
 1316 03bc 7AE0     		b	.L84
 1317              	.L87:
 416:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1318              		.loc 1 416 0
 1319 03be 07F5B853 		add	r3, r7, #5888
 1320 03c2 03F10F03 		add	r3, r3, #15
 1321 03c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1322 03c8 07F5B852 		add	r2, r7, #5888
 1323 03cc 02F10B02 		add	r2, r2, #11
 1324 03d0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1325 03d2 02FB03F3 		mul	r3, r2, r3
 1326 03d6 1A46     		mov	r2, r3
 1327 03d8 07F5B853 		add	r3, r7, #5888
 1328 03dc 1B68     		ldr	r3, [r3]
 1329 03de 1344     		add	r3, r3, r2
 1330 03e0 07F5B752 		add	r2, r7, #5856
 1331 03e4 02F11C02 		add	r2, r2, #28
 1332 03e8 1360     		str	r3, [r2]
 417:..\src/command_processing.c ****                         aux_int16 = *((int16*)m_tmp);
 1333              		.loc 1 417 0
 1334 03ea 07F5B753 		add	r3, r7, #5856
 1335 03ee 03F11C03 		add	r3, r3, #28
 1336 03f2 1B68     		ldr	r3, [r3]
 1337 03f4 B3F90020 		ldrsh	r2, [r3]
 1338 03f8 07F13003 		add	r3, r7, #48
 1339 03fc 163B     		subs	r3, r3, #22
 1340 03fe 1A80     		strh	r2, [r3]	@ movhi
 418:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1341              		.loc 1 418 0
 1342 0400 0023     		movs	r3, #0
 1343 0402 07F5B852 		add	r2, r7, #5888
 1344 0406 02F10E02 		add	r2, r2, #14
 1345 040a 1370     		strb	r3, [r2]
 1346 040c 3BE0     		b	.L85
 1347              	.L86:
 419:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1348              		.loc 1 419 0 discriminator 3
 1349 040e 07F5B853 		add	r3, r7, #5888
 1350 0412 03F10D03 		add	r3, r3, #13
 1351 0416 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1352 0418 3222     		movs	r2, #50
 1353 041a 02FB03F3 		mul	r3, r2, r3
 1354 041e 1A1D     		adds	r2, r3, #4
 1355 0420 07F5B853 		add	r3, r7, #5888
 1356 0424 03F10F03 		add	r3, r3, #15
 1357 0428 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1358 042a 07F5B851 		add	r1, r7, #5888
 1359 042e 01F10B01 		add	r1, r1, #11
 1360 0432 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1361 0434 01FB03F3 		mul	r3, r1, r3
 1362 0438 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 48


 1363 043a 07F5B853 		add	r3, r7, #5888
 1364 043e 03F10B03 		add	r3, r3, #11
 1365 0442 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1366 0444 1A44     		add	r2, r2, r3
 1367 0446 07F5B853 		add	r3, r7, #5888
 1368 044a 03F10E03 		add	r3, r3, #14
 1369 044e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1370 0450 D31A     		subs	r3, r2, r3
 1371 0452 5A1E     		subs	r2, r3, #1
 1372 0454 07F5B853 		add	r3, r7, #5888
 1373 0458 03F10E03 		add	r3, r3, #14
 1374 045c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1375 045e 07F13003 		add	r3, r7, #48
 1376 0462 163B     		subs	r3, r3, #22
 1377 0464 0B44     		add	r3, r3, r1
 1378 0466 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1379 0468 07F17003 		add	r3, r7, #112
 1380 046c 1C3B     		subs	r3, r3, #28
 1381 046e 9954     		strb	r1, [r3, r2]
 418:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1382              		.loc 1 418 0 discriminator 3
 1383 0470 07F5B853 		add	r3, r7, #5888
 1384 0474 03F10E03 		add	r3, r3, #14
 1385 0478 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1386 047a 0133     		adds	r3, r3, #1
 1387 047c 07F5B852 		add	r2, r7, #5888
 1388 0480 02F10E02 		add	r2, r2, #14
 1389 0484 1370     		strb	r3, [r2]
 1390              	.L85:
 418:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1391              		.loc 1 418 0 is_stmt 0 discriminator 1
 1392 0486 07F5B853 		add	r3, r7, #5888
 1393 048a 03F10E03 		add	r3, r3, #14
 1394 048e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1395 0490 07F5B853 		add	r3, r7, #5888
 1396 0494 03F10B03 		add	r3, r3, #11
 1397 0498 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1398 049a 9A42     		cmp	r2, r3
 1399 049c B7D3     		bcc	.L86
 415:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1400              		.loc 1 415 0 is_stmt 1 discriminator 2
 1401 049e 07F5B853 		add	r3, r7, #5888
 1402 04a2 03F10F03 		add	r3, r3, #15
 1403 04a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1404 04a8 0133     		adds	r3, r3, #1
 1405 04aa 07F5B852 		add	r2, r7, #5888
 1406 04ae 02F10F02 		add	r2, r2, #15
 1407 04b2 1370     		strb	r3, [r2]
 1408              	.L84:
 415:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1409              		.loc 1 415 0 is_stmt 0 discriminator 1
 1410 04b4 07F5B853 		add	r3, r7, #5888
 1411 04b8 03F10D03 		add	r3, r3, #13
 1412 04bc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1413 04be 07F11003 		add	r3, r7, #16
 1414 04c2 0C3B     		subs	r3, r3, #12
 1415 04c4 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 49


 1416 04c6 1344     		add	r3, r3, r2
 1417 04c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1418 04ca 07F5B852 		add	r2, r7, #5888
 1419 04ce 02F10F02 		add	r2, r2, #15
 1420 04d2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1421 04d4 9A42     		cmp	r2, r3
 1422 04d6 FFF472AF 		bcc	.L87
 420:..\src/command_processing.c ****                         }
 421:..\src/command_processing.c ****                     }
 422:..\src/command_processing.c ****                     break;
 1423              		.loc 1 422 0 is_stmt 1
 1424 04da 01F0BEBF 		b	.L104
 1425              	.L76:
 423:..\src/command_processing.c ****                 case TYPE_UINT16:
 424:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1426              		.loc 1 424 0
 1427 04de 0023     		movs	r3, #0
 1428 04e0 07F5B852 		add	r2, r7, #5888
 1429 04e4 02F10F02 		add	r2, r2, #15
 1430 04e8 1370     		strb	r3, [r2]
 1431 04ea 79E0     		b	.L88
 1432              	.L91:
 425:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1433              		.loc 1 425 0
 1434 04ec 07F5B853 		add	r3, r7, #5888
 1435 04f0 03F10F03 		add	r3, r3, #15
 1436 04f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1437 04f6 07F5B852 		add	r2, r7, #5888
 1438 04fa 02F10B02 		add	r2, r2, #11
 1439 04fe 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1440 0500 02FB03F3 		mul	r3, r2, r3
 1441 0504 1A46     		mov	r2, r3
 1442 0506 07F5B853 		add	r3, r7, #5888
 1443 050a 1B68     		ldr	r3, [r3]
 1444 050c 1344     		add	r3, r3, r2
 1445 050e 07F5B752 		add	r2, r7, #5856
 1446 0512 02F11C02 		add	r2, r2, #28
 1447 0516 1360     		str	r3, [r2]
 426:..\src/command_processing.c ****                         aux_uint16 = *((uint16*)m_tmp);
 1448              		.loc 1 426 0
 1449 0518 07F5B753 		add	r3, r7, #5856
 1450 051c 03F11C03 		add	r3, r3, #28
 1451 0520 1B68     		ldr	r3, [r3]
 1452 0522 1A88     		ldrh	r2, [r3]
 1453 0524 07F13003 		add	r3, r7, #48
 1454 0528 183B     		subs	r3, r3, #24
 1455 052a 1A80     		strh	r2, [r3]	@ movhi
 427:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1456              		.loc 1 427 0
 1457 052c 0023     		movs	r3, #0
 1458 052e 07F5B852 		add	r2, r7, #5888
 1459 0532 02F10E02 		add	r2, r2, #14
 1460 0536 1370     		strb	r3, [r2]
 1461 0538 3BE0     		b	.L89
 1462              	.L90:
 428:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1463              		.loc 1 428 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 50


 1464 053a 07F5B853 		add	r3, r7, #5888
 1465 053e 03F10D03 		add	r3, r3, #13
 1466 0542 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1467 0544 3222     		movs	r2, #50
 1468 0546 02FB03F3 		mul	r3, r2, r3
 1469 054a 1A1D     		adds	r2, r3, #4
 1470 054c 07F5B853 		add	r3, r7, #5888
 1471 0550 03F10F03 		add	r3, r3, #15
 1472 0554 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1473 0556 07F5B851 		add	r1, r7, #5888
 1474 055a 01F10B01 		add	r1, r1, #11
 1475 055e 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1476 0560 01FB03F3 		mul	r3, r1, r3
 1477 0564 1A44     		add	r2, r2, r3
 1478 0566 07F5B853 		add	r3, r7, #5888
 1479 056a 03F10B03 		add	r3, r3, #11
 1480 056e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1481 0570 1A44     		add	r2, r2, r3
 1482 0572 07F5B853 		add	r3, r7, #5888
 1483 0576 03F10E03 		add	r3, r3, #14
 1484 057a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1485 057c D31A     		subs	r3, r2, r3
 1486 057e 5A1E     		subs	r2, r3, #1
 1487 0580 07F5B853 		add	r3, r7, #5888
 1488 0584 03F10E03 		add	r3, r3, #14
 1489 0588 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1490 058a 07F13003 		add	r3, r7, #48
 1491 058e 183B     		subs	r3, r3, #24
 1492 0590 0B44     		add	r3, r3, r1
 1493 0592 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1494 0594 07F17003 		add	r3, r7, #112
 1495 0598 1C3B     		subs	r3, r3, #28
 1496 059a 9954     		strb	r1, [r3, r2]
 427:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1497              		.loc 1 427 0 discriminator 3
 1498 059c 07F5B853 		add	r3, r7, #5888
 1499 05a0 03F10E03 		add	r3, r3, #14
 1500 05a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1501 05a6 0133     		adds	r3, r3, #1
 1502 05a8 07F5B852 		add	r2, r7, #5888
 1503 05ac 02F10E02 		add	r2, r2, #14
 1504 05b0 1370     		strb	r3, [r2]
 1505              	.L89:
 427:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1506              		.loc 1 427 0 is_stmt 0 discriminator 1
 1507 05b2 07F5B853 		add	r3, r7, #5888
 1508 05b6 03F10E03 		add	r3, r3, #14
 1509 05ba 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1510 05bc 07F5B853 		add	r3, r7, #5888
 1511 05c0 03F10B03 		add	r3, r3, #11
 1512 05c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1513 05c6 9A42     		cmp	r2, r3
 1514 05c8 B7D3     		bcc	.L90
 424:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1515              		.loc 1 424 0 is_stmt 1 discriminator 2
 1516 05ca 07F5B853 		add	r3, r7, #5888
 1517 05ce 03F10F03 		add	r3, r3, #15
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 51


 1518 05d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1519 05d4 0133     		adds	r3, r3, #1
 1520 05d6 07F5B852 		add	r2, r7, #5888
 1521 05da 02F10F02 		add	r2, r2, #15
 1522 05de 1370     		strb	r3, [r2]
 1523              	.L88:
 424:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1524              		.loc 1 424 0 is_stmt 0 discriminator 1
 1525 05e0 07F5B853 		add	r3, r7, #5888
 1526 05e4 03F10D03 		add	r3, r3, #13
 1527 05e8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1528 05ea 07F11003 		add	r3, r7, #16
 1529 05ee 0C3B     		subs	r3, r3, #12
 1530 05f0 1B68     		ldr	r3, [r3]
 1531 05f2 1344     		add	r3, r3, r2
 1532 05f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1533 05f6 07F5B852 		add	r2, r7, #5888
 1534 05fa 02F10F02 		add	r2, r2, #15
 1535 05fe 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1536 0600 9A42     		cmp	r2, r3
 1537 0602 FFF473AF 		bcc	.L91
 429:..\src/command_processing.c ****                         }
 430:..\src/command_processing.c ****                     }
 431:..\src/command_processing.c ****                     break;
 1538              		.loc 1 431 0 is_stmt 1
 1539 0606 01F028BF 		b	.L104
 1540              	.L77:
 432:..\src/command_processing.c ****                 case TYPE_INT32: 
 433:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1541              		.loc 1 433 0
 1542 060a 0023     		movs	r3, #0
 1543 060c 07F5B852 		add	r2, r7, #5888
 1544 0610 02F10F02 		add	r2, r2, #15
 1545 0614 1370     		strb	r3, [r2]
 1546 0616 79E0     		b	.L92
 1547              	.L95:
 434:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1548              		.loc 1 434 0
 1549 0618 07F5B853 		add	r3, r7, #5888
 1550 061c 03F10F03 		add	r3, r3, #15
 1551 0620 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1552 0622 07F5B852 		add	r2, r7, #5888
 1553 0626 02F10B02 		add	r2, r2, #11
 1554 062a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1555 062c 02FB03F3 		mul	r3, r2, r3
 1556 0630 1A46     		mov	r2, r3
 1557 0632 07F5B853 		add	r3, r7, #5888
 1558 0636 1B68     		ldr	r3, [r3]
 1559 0638 1344     		add	r3, r3, r2
 1560 063a 07F5B752 		add	r2, r7, #5856
 1561 063e 02F11C02 		add	r2, r2, #28
 1562 0642 1360     		str	r3, [r2]
 435:..\src/command_processing.c ****                         aux_int32 = *((int32*)m_tmp);
 1563              		.loc 1 435 0
 1564 0644 07F5B753 		add	r3, r7, #5856
 1565 0648 03F11C03 		add	r3, r3, #28
 1566 064c 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 52


 1567 064e 1A68     		ldr	r2, [r3]
 1568 0650 07F13003 		add	r3, r7, #48
 1569 0654 1C3B     		subs	r3, r3, #28
 1570 0656 1A60     		str	r2, [r3]
 436:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1571              		.loc 1 436 0
 1572 0658 0023     		movs	r3, #0
 1573 065a 07F5B852 		add	r2, r7, #5888
 1574 065e 02F10E02 		add	r2, r2, #14
 1575 0662 1370     		strb	r3, [r2]
 1576 0664 3BE0     		b	.L93
 1577              	.L94:
 437:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1578              		.loc 1 437 0 discriminator 3
 1579 0666 07F5B853 		add	r3, r7, #5888
 1580 066a 03F10D03 		add	r3, r3, #13
 1581 066e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1582 0670 3222     		movs	r2, #50
 1583 0672 02FB03F3 		mul	r3, r2, r3
 1584 0676 1A1D     		adds	r2, r3, #4
 1585 0678 07F5B853 		add	r3, r7, #5888
 1586 067c 03F10F03 		add	r3, r3, #15
 1587 0680 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1588 0682 07F5B851 		add	r1, r7, #5888
 1589 0686 01F10B01 		add	r1, r1, #11
 1590 068a 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1591 068c 01FB03F3 		mul	r3, r1, r3
 1592 0690 1A44     		add	r2, r2, r3
 1593 0692 07F5B853 		add	r3, r7, #5888
 1594 0696 03F10B03 		add	r3, r3, #11
 1595 069a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1596 069c 1A44     		add	r2, r2, r3
 1597 069e 07F5B853 		add	r3, r7, #5888
 1598 06a2 03F10E03 		add	r3, r3, #14
 1599 06a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1600 06a8 D31A     		subs	r3, r2, r3
 1601 06aa 5A1E     		subs	r2, r3, #1
 1602 06ac 07F5B853 		add	r3, r7, #5888
 1603 06b0 03F10E03 		add	r3, r3, #14
 1604 06b4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1605 06b6 07F13003 		add	r3, r7, #48
 1606 06ba 1C3B     		subs	r3, r3, #28
 1607 06bc 0B44     		add	r3, r3, r1
 1608 06be 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1609 06c0 07F17003 		add	r3, r7, #112
 1610 06c4 1C3B     		subs	r3, r3, #28
 1611 06c6 9954     		strb	r1, [r3, r2]
 436:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1612              		.loc 1 436 0 discriminator 3
 1613 06c8 07F5B853 		add	r3, r7, #5888
 1614 06cc 03F10E03 		add	r3, r3, #14
 1615 06d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1616 06d2 0133     		adds	r3, r3, #1
 1617 06d4 07F5B852 		add	r2, r7, #5888
 1618 06d8 02F10E02 		add	r2, r2, #14
 1619 06dc 1370     		strb	r3, [r2]
 1620              	.L93:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 53


 436:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1621              		.loc 1 436 0 is_stmt 0 discriminator 1
 1622 06de 07F5B853 		add	r3, r7, #5888
 1623 06e2 03F10E03 		add	r3, r3, #14
 1624 06e6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1625 06e8 07F5B853 		add	r3, r7, #5888
 1626 06ec 03F10B03 		add	r3, r3, #11
 1627 06f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1628 06f2 9A42     		cmp	r2, r3
 1629 06f4 B7D3     		bcc	.L94
 433:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1630              		.loc 1 433 0 is_stmt 1 discriminator 2
 1631 06f6 07F5B853 		add	r3, r7, #5888
 1632 06fa 03F10F03 		add	r3, r3, #15
 1633 06fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1634 0700 0133     		adds	r3, r3, #1
 1635 0702 07F5B852 		add	r2, r7, #5888
 1636 0706 02F10F02 		add	r2, r2, #15
 1637 070a 1370     		strb	r3, [r2]
 1638              	.L92:
 433:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1639              		.loc 1 433 0 is_stmt 0 discriminator 1
 1640 070c 07F5B853 		add	r3, r7, #5888
 1641 0710 03F10D03 		add	r3, r3, #13
 1642 0714 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1643 0716 07F11003 		add	r3, r7, #16
 1644 071a 0C3B     		subs	r3, r3, #12
 1645 071c 1B68     		ldr	r3, [r3]
 1646 071e 1344     		add	r3, r3, r2
 1647 0720 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1648 0722 07F5B852 		add	r2, r7, #5888
 1649 0726 02F10F02 		add	r2, r2, #15
 1650 072a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1651 072c 9A42     		cmp	r2, r3
 1652 072e FFF473AF 		bcc	.L95
 438:..\src/command_processing.c ****                         }
 439:..\src/command_processing.c ****                     }
 440:..\src/command_processing.c ****                     break;
 1653              		.loc 1 440 0 is_stmt 1
 1654 0732 01F092BE 		b	.L104
 1655              	.L78:
 441:..\src/command_processing.c ****                 case TYPE_UINT32: 
 442:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1656              		.loc 1 442 0
 1657 0736 0023     		movs	r3, #0
 1658 0738 07F5B852 		add	r2, r7, #5888
 1659 073c 02F10F02 		add	r2, r2, #15
 1660 0740 1370     		strb	r3, [r2]
 1661 0742 77E0     		b	.L96
 1662              	.L99:
 443:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1663              		.loc 1 443 0
 1664 0744 07F5B853 		add	r3, r7, #5888
 1665 0748 03F10F03 		add	r3, r3, #15
 1666 074c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1667 074e 07F5B852 		add	r2, r7, #5888
 1668 0752 02F10B02 		add	r2, r2, #11
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 54


 1669 0756 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1670 0758 02FB03F3 		mul	r3, r2, r3
 1671 075c 1A46     		mov	r2, r3
 1672 075e 07F5B853 		add	r3, r7, #5888
 1673 0762 1B68     		ldr	r3, [r3]
 1674 0764 1344     		add	r3, r3, r2
 1675 0766 07F5B752 		add	r2, r7, #5856
 1676 076a 02F11C02 		add	r2, r2, #28
 1677 076e 1360     		str	r3, [r2]
 444:..\src/command_processing.c ****                         aux_uint32 = *((uint32*)m_tmp);
 1678              		.loc 1 444 0
 1679 0770 07F5B753 		add	r3, r7, #5856
 1680 0774 03F11C03 		add	r3, r3, #28
 1681 0778 1B68     		ldr	r3, [r3]
 1682 077a 1A68     		ldr	r2, [r3]
 1683 077c 07F11003 		add	r3, r7, #16
 1684 0780 1A60     		str	r2, [r3]
 445:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1685              		.loc 1 445 0
 1686 0782 0023     		movs	r3, #0
 1687 0784 07F5B852 		add	r2, r7, #5888
 1688 0788 02F10E02 		add	r2, r2, #14
 1689 078c 1370     		strb	r3, [r2]
 1690 078e 3AE0     		b	.L97
 1691              	.L98:
 446:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1692              		.loc 1 446 0 discriminator 3
 1693 0790 07F5B853 		add	r3, r7, #5888
 1694 0794 03F10D03 		add	r3, r3, #13
 1695 0798 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1696 079a 3222     		movs	r2, #50
 1697 079c 02FB03F3 		mul	r3, r2, r3
 1698 07a0 1A1D     		adds	r2, r3, #4
 1699 07a2 07F5B853 		add	r3, r7, #5888
 1700 07a6 03F10F03 		add	r3, r3, #15
 1701 07aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1702 07ac 07F5B851 		add	r1, r7, #5888
 1703 07b0 01F10B01 		add	r1, r1, #11
 1704 07b4 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1705 07b6 01FB03F3 		mul	r3, r1, r3
 1706 07ba 1A44     		add	r2, r2, r3
 1707 07bc 07F5B853 		add	r3, r7, #5888
 1708 07c0 03F10B03 		add	r3, r3, #11
 1709 07c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1710 07c6 1A44     		add	r2, r2, r3
 1711 07c8 07F5B853 		add	r3, r7, #5888
 1712 07cc 03F10E03 		add	r3, r3, #14
 1713 07d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1714 07d2 D31A     		subs	r3, r2, r3
 1715 07d4 5A1E     		subs	r2, r3, #1
 1716 07d6 07F5B853 		add	r3, r7, #5888
 1717 07da 03F10E03 		add	r3, r3, #14
 1718 07de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1719 07e0 07F11001 		add	r1, r7, #16
 1720 07e4 0B44     		add	r3, r3, r1
 1721 07e6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1722 07e8 07F17003 		add	r3, r7, #112
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 55


 1723 07ec 1C3B     		subs	r3, r3, #28
 1724 07ee 9954     		strb	r1, [r3, r2]
 445:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1725              		.loc 1 445 0 discriminator 3
 1726 07f0 07F5B853 		add	r3, r7, #5888
 1727 07f4 03F10E03 		add	r3, r3, #14
 1728 07f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1729 07fa 0133     		adds	r3, r3, #1
 1730 07fc 07F5B852 		add	r2, r7, #5888
 1731 0800 02F10E02 		add	r2, r2, #14
 1732 0804 1370     		strb	r3, [r2]
 1733              	.L97:
 445:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1734              		.loc 1 445 0 is_stmt 0 discriminator 1
 1735 0806 07F5B853 		add	r3, r7, #5888
 1736 080a 03F10E03 		add	r3, r3, #14
 1737 080e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1738 0810 07F5B853 		add	r3, r7, #5888
 1739 0814 03F10B03 		add	r3, r3, #11
 1740 0818 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1741 081a 9A42     		cmp	r2, r3
 1742 081c B8D3     		bcc	.L98
 442:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1743              		.loc 1 442 0 is_stmt 1 discriminator 2
 1744 081e 07F5B853 		add	r3, r7, #5888
 1745 0822 03F10F03 		add	r3, r3, #15
 1746 0826 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1747 0828 0133     		adds	r3, r3, #1
 1748 082a 07F5B852 		add	r2, r7, #5888
 1749 082e 02F10F02 		add	r2, r2, #15
 1750 0832 1370     		strb	r3, [r2]
 1751              	.L96:
 442:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1752              		.loc 1 442 0 is_stmt 0 discriminator 1
 1753 0834 07F5B853 		add	r3, r7, #5888
 1754 0838 03F10D03 		add	r3, r3, #13
 1755 083c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1756 083e 07F11003 		add	r3, r7, #16
 1757 0842 0C3B     		subs	r3, r3, #12
 1758 0844 1B68     		ldr	r3, [r3]
 1759 0846 1344     		add	r3, r3, r2
 1760 0848 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1761 084a 07F5B852 		add	r2, r7, #5888
 1762 084e 02F10F02 		add	r2, r2, #15
 1763 0852 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1764 0854 9A42     		cmp	r2, r3
 1765 0856 FFF475AF 		bcc	.L99
 447:..\src/command_processing.c ****                         }
 448:..\src/command_processing.c ****                     }
 449:..\src/command_processing.c ****                     break;
 1766              		.loc 1 449 0 is_stmt 1
 1767 085a 01F0FEBD 		b	.L104
 1768              	.L79:
 450:..\src/command_processing.c ****                     
 451:..\src/command_processing.c ****                 case TYPE_FLOAT:
 452:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1769              		.loc 1 452 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 56


 1770 085e 0023     		movs	r3, #0
 1771 0860 07F5B852 		add	r2, r7, #5888
 1772 0864 02F10F02 		add	r2, r2, #15
 1773 0868 1370     		strb	r3, [r2]
 1774 086a 79E0     		b	.L100
 1775              	.L103:
 453:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1776              		.loc 1 453 0
 1777 086c 07F5B853 		add	r3, r7, #5888
 1778 0870 03F10F03 		add	r3, r3, #15
 1779 0874 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1780 0876 07F5B852 		add	r2, r7, #5888
 1781 087a 02F10B02 		add	r2, r2, #11
 1782 087e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1783 0880 02FB03F3 		mul	r3, r2, r3
 1784 0884 1A46     		mov	r2, r3
 1785 0886 07F5B853 		add	r3, r7, #5888
 1786 088a 1B68     		ldr	r3, [r3]
 1787 088c 1344     		add	r3, r3, r2
 1788 088e 07F5B752 		add	r2, r7, #5856
 1789 0892 02F11C02 		add	r2, r2, #28
 1790 0896 1360     		str	r3, [r2]
 454:..\src/command_processing.c ****                         aux_float = *((float*)m_tmp);
 1791              		.loc 1 454 0
 1792 0898 07F5B753 		add	r3, r7, #5856
 1793 089c 03F11C03 		add	r3, r3, #28
 1794 08a0 1B68     		ldr	r3, [r3]
 1795 08a2 1A68     		ldr	r2, [r3]	@ float
 1796 08a4 07F13003 		add	r3, r7, #48
 1797 08a8 143B     		subs	r3, r3, #20
 1798 08aa 1A60     		str	r2, [r3]	@ float
 455:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1799              		.loc 1 455 0
 1800 08ac 0023     		movs	r3, #0
 1801 08ae 07F5B852 		add	r2, r7, #5888
 1802 08b2 02F10E02 		add	r2, r2, #14
 1803 08b6 1370     		strb	r3, [r2]
 1804 08b8 3BE0     		b	.L101
 1805              	.L102:
 456:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1806              		.loc 1 456 0 discriminator 3
 1807 08ba 07F5B853 		add	r3, r7, #5888
 1808 08be 03F10D03 		add	r3, r3, #13
 1809 08c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1810 08c4 3222     		movs	r2, #50
 1811 08c6 02FB03F3 		mul	r3, r2, r3
 1812 08ca 1A1D     		adds	r2, r3, #4
 1813 08cc 07F5B853 		add	r3, r7, #5888
 1814 08d0 03F10F03 		add	r3, r3, #15
 1815 08d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1816 08d6 07F5B851 		add	r1, r7, #5888
 1817 08da 01F10B01 		add	r1, r1, #11
 1818 08de 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1819 08e0 01FB03F3 		mul	r3, r1, r3
 1820 08e4 1A44     		add	r2, r2, r3
 1821 08e6 07F5B853 		add	r3, r7, #5888
 1822 08ea 03F10B03 		add	r3, r3, #11
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 57


 1823 08ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1824 08f0 1A44     		add	r2, r2, r3
 1825 08f2 07F5B853 		add	r3, r7, #5888
 1826 08f6 03F10E03 		add	r3, r3, #14
 1827 08fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1828 08fc D31A     		subs	r3, r2, r3
 1829 08fe 5A1E     		subs	r2, r3, #1
 1830 0900 07F5B853 		add	r3, r7, #5888
 1831 0904 03F10E03 		add	r3, r3, #14
 1832 0908 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1833 090a 07F13003 		add	r3, r7, #48
 1834 090e 143B     		subs	r3, r3, #20
 1835 0910 0B44     		add	r3, r3, r1
 1836 0912 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1837 0914 07F17003 		add	r3, r7, #112
 1838 0918 1C3B     		subs	r3, r3, #28
 1839 091a 9954     		strb	r1, [r3, r2]
 455:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1840              		.loc 1 455 0 discriminator 3
 1841 091c 07F5B853 		add	r3, r7, #5888
 1842 0920 03F10E03 		add	r3, r3, #14
 1843 0924 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1844 0926 0133     		adds	r3, r3, #1
 1845 0928 07F5B852 		add	r2, r7, #5888
 1846 092c 02F10E02 		add	r2, r2, #14
 1847 0930 1370     		strb	r3, [r2]
 1848              	.L101:
 455:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1849              		.loc 1 455 0 is_stmt 0 discriminator 1
 1850 0932 07F5B853 		add	r3, r7, #5888
 1851 0936 03F10E03 		add	r3, r3, #14
 1852 093a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1853 093c 07F5B853 		add	r3, r7, #5888
 1854 0940 03F10B03 		add	r3, r3, #11
 1855 0944 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1856 0946 9A42     		cmp	r2, r3
 1857 0948 B7D3     		bcc	.L102
 452:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1858              		.loc 1 452 0 is_stmt 1 discriminator 2
 1859 094a 07F5B853 		add	r3, r7, #5888
 1860 094e 03F10F03 		add	r3, r3, #15
 1861 0952 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1862 0954 0133     		adds	r3, r3, #1
 1863 0956 07F5B852 		add	r2, r7, #5888
 1864 095a 02F10F02 		add	r2, r2, #15
 1865 095e 1370     		strb	r3, [r2]
 1866              	.L100:
 452:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1867              		.loc 1 452 0 is_stmt 0 discriminator 1
 1868 0960 07F5B853 		add	r3, r7, #5888
 1869 0964 03F10D03 		add	r3, r3, #13
 1870 0968 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1871 096a 07F11003 		add	r3, r7, #16
 1872 096e 0C3B     		subs	r3, r3, #12
 1873 0970 1B68     		ldr	r3, [r3]
 1874 0972 1344     		add	r3, r3, r2
 1875 0974 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 58


 1876 0976 07F5B852 		add	r2, r7, #5888
 1877 097a 02F10F02 		add	r2, r2, #15
 1878 097e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1879 0980 9A42     		cmp	r2, r3
 1880 0982 FFF473AF 		bcc	.L103
 457:..\src/command_processing.c ****                         }
 458:..\src/command_processing.c ****                     }
 459:..\src/command_processing.c ****                     break;   
 1881              		.loc 1 459 0 is_stmt 1 discriminator 7
 1882 0986 00BF     		nop
 1883 0988 01F067BD 		b	.L104
 1884              	.L70:
 460:..\src/command_processing.c ****             }
 461:..\src/command_processing.c ****         }
 462:..\src/command_processing.c ****         else {
 463:..\src/command_processing.c ****             
 464:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION BEFORE THIS LINE
 465:..\src/command_processing.c ****             
 466:..\src/command_processing.c **** // MODIFY CUSTOM PARAM            
 467:..\src/command_processing.c ****                 switch(idx+1){
 1885              		.loc 1 467 0
 1886 098c 07F5B853 		add	r3, r7, #5888
 1887 0990 03F10D03 		add	r3, r3, #13
 1888 0994 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1889 0996 0133     		adds	r3, r3, #1
 1890 0998 023B     		subs	r3, r3, #2
 1891 099a 332B     		cmp	r3, #51
 1892 099c 01F25C85 		bhi	.L267
 1893 09a0 01A2     		adr	r2, .L107
 1894 09a2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1895 09a6 00BF     		.p2align 2
 1896              	.L107:
 1897 09a8 790A0000 		.word	.L106+1
 1898 09ac 450F0000 		.word	.L108+1
 1899 09b0 59240000 		.word	.L267+1
 1900 09b4 59240000 		.word	.L267+1
 1901 09b8 59240000 		.word	.L267+1
 1902 09bc 59240000 		.word	.L267+1
 1903 09c0 15140000 		.word	.L109+1
 1904 09c4 59240000 		.word	.L267+1
 1905 09c8 59240000 		.word	.L267+1
 1906 09cc 3B150000 		.word	.L110+1
 1907 09d0 59240000 		.word	.L267+1
 1908 09d4 59240000 		.word	.L267+1
 1909 09d8 59240000 		.word	.L267+1
 1910 09dc 59240000 		.word	.L267+1
 1911 09e0 59240000 		.word	.L267+1
 1912 09e4 59240000 		.word	.L267+1
 1913 09e8 59240000 		.word	.L267+1
 1914 09ec 59240000 		.word	.L267+1
 1915 09f0 59240000 		.word	.L267+1
 1916 09f4 59240000 		.word	.L267+1
 1917 09f8 59240000 		.word	.L267+1
 1918 09fc FF160000 		.word	.L111+1
 1919 0a00 59240000 		.word	.L267+1
 1920 0a04 59240000 		.word	.L267+1
 1921 0a08 59240000 		.word	.L267+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 59


 1922 0a0c 59240000 		.word	.L267+1
 1923 0a10 59240000 		.word	.L267+1
 1924 0a14 59240000 		.word	.L267+1
 1925 0a18 59240000 		.word	.L267+1
 1926 0a1c 59240000 		.word	.L267+1
 1927 0a20 59240000 		.word	.L267+1
 1928 0a24 59240000 		.word	.L267+1
 1929 0a28 59240000 		.word	.L267+1
 1930 0a2c 59240000 		.word	.L267+1
 1931 0a30 59240000 		.word	.L267+1
 1932 0a34 59240000 		.word	.L267+1
 1933 0a38 59240000 		.word	.L267+1
 1934 0a3c 59240000 		.word	.L267+1
 1935 0a40 59240000 		.word	.L267+1
 1936 0a44 59240000 		.word	.L267+1
 1937 0a48 59240000 		.word	.L267+1
 1938 0a4c 59240000 		.word	.L267+1
 1939 0a50 D3170000 		.word	.L112+1
 1940 0a54 9B1C0000 		.word	.L113+1
 1941 0a58 59240000 		.word	.L267+1
 1942 0a5c 59240000 		.word	.L267+1
 1943 0a60 59240000 		.word	.L267+1
 1944 0a64 59240000 		.word	.L267+1
 1945 0a68 69210000 		.word	.L114+1
 1946 0a6c 59240000 		.word	.L267+1
 1947 0a70 59240000 		.word	.L267+1
 1948 0a74 8D220000 		.word	.L115+1
 1949              		.p2align 1
 1950              	.L106:
 468:..\src/command_processing.c ****                     case 2:         // Position PID
 469:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 1951              		.loc 1 469 0
 1952 0a78 07F5B853 		add	r3, r7, #5888
 1953 0a7c 03F10703 		add	r3, r3, #7
 1954 0a80 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1955 0a82 AC49     		ldr	r1, .L272
 1956 0a84 1346     		mov	r3, r2
 1957 0a86 DB00     		lsls	r3, r3, #3
 1958 0a88 9B1A     		subs	r3, r3, r2
 1959 0a8a 1B01     		lsls	r3, r3, #4
 1960 0a8c 0B44     		add	r3, r3, r1
 1961 0a8e 03F20F13 		addw	r3, r3, #271
 1962 0a92 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1963 0a94 032B     		cmp	r3, #3
 1964 0a96 00F02981 		beq	.L116
 470:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p / 65536;
 1965              		.loc 1 470 0
 1966 0a9a 07F5B853 		add	r3, r7, #5888
 1967 0a9e 03F10703 		add	r3, r3, #7
 1968 0aa2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1969 0aa4 A349     		ldr	r1, .L272
 1970 0aa6 1346     		mov	r3, r2
 1971 0aa8 DB00     		lsls	r3, r3, #3
 1972 0aaa 9B1A     		subs	r3, r3, r2
 1973 0aac 1B01     		lsls	r3, r3, #4
 1974 0aae 0B44     		add	r3, r3, r1
 1975 0ab0 B033     		adds	r3, r3, #176
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 60


 1976 0ab2 1B68     		ldr	r3, [r3]
 1977 0ab4 1846     		mov	r0, r3
 1978 0ab6 FFF7FEFF 		bl	__aeabi_i2f
 1979 0aba 0346     		mov	r3, r0
 1980 0abc 4FF08F41 		mov	r1, #1199570944
 1981 0ac0 1846     		mov	r0, r3
 1982 0ac2 FFF7FEFF 		bl	__aeabi_fdiv
 1983 0ac6 0346     		mov	r3, r0
 1984 0ac8 1A46     		mov	r2, r3
 1985 0aca 07F13003 		add	r3, r7, #48
 1986 0ace 143B     		subs	r3, r3, #20
 1987 0ad0 1A60     		str	r2, [r3]	@ float
 471:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1988              		.loc 1 471 0
 1989 0ad2 0023     		movs	r3, #0
 1990 0ad4 07F5B852 		add	r2, r7, #5888
 1991 0ad8 02F10F02 		add	r2, r2, #15
 1992 0adc 1370     		strb	r3, [r2]
 1993 0ade 2EE0     		b	.L117
 1994              	.L118:
 472:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 1995              		.loc 1 472 0 discriminator 3
 1996 0ae0 07F5B853 		add	r3, r7, #5888
 1997 0ae4 03F10D03 		add	r3, r3, #13
 1998 0ae8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1999 0aea 3222     		movs	r2, #50
 2000 0aec 02FB03F3 		mul	r3, r2, r3
 2001 0af0 1A1D     		adds	r2, r3, #4
 2002 0af2 07F5B853 		add	r3, r7, #5888
 2003 0af6 03F10B03 		add	r3, r3, #11
 2004 0afa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2005 0afc 1A44     		add	r2, r2, r3
 2006 0afe 07F5B853 		add	r3, r7, #5888
 2007 0b02 03F10F03 		add	r3, r3, #15
 2008 0b06 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2009 0b08 D31A     		subs	r3, r2, r3
 2010 0b0a 5A1E     		subs	r2, r3, #1
 2011 0b0c 07F5B853 		add	r3, r7, #5888
 2012 0b10 03F10F03 		add	r3, r3, #15
 2013 0b14 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2014 0b16 07F13003 		add	r3, r7, #48
 2015 0b1a 143B     		subs	r3, r3, #20
 2016 0b1c 0B44     		add	r3, r3, r1
 2017 0b1e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2018 0b20 07F17003 		add	r3, r7, #112
 2019 0b24 1C3B     		subs	r3, r3, #28
 2020 0b26 9954     		strb	r1, [r3, r2]
 471:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2021              		.loc 1 471 0 discriminator 3
 2022 0b28 07F5B853 		add	r3, r7, #5888
 2023 0b2c 03F10F03 		add	r3, r3, #15
 2024 0b30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2025 0b32 0133     		adds	r3, r3, #1
 2026 0b34 07F5B852 		add	r2, r7, #5888
 2027 0b38 02F10F02 		add	r2, r2, #15
 2028 0b3c 1370     		strb	r3, [r2]
 2029              	.L117:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 61


 471:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2030              		.loc 1 471 0 is_stmt 0 discriminator 1
 2031 0b3e 07F5B853 		add	r3, r7, #5888
 2032 0b42 03F10F03 		add	r3, r3, #15
 2033 0b46 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2034 0b48 07F5B853 		add	r3, r7, #5888
 2035 0b4c 03F10B03 		add	r3, r3, #11
 2036 0b50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2037 0b52 9A42     		cmp	r2, r3
 2038 0b54 C4D3     		bcc	.L118
 473:..\src/command_processing.c ****                             }
 474:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i / 65536;
 2039              		.loc 1 474 0 is_stmt 1
 2040 0b56 07F5B853 		add	r3, r7, #5888
 2041 0b5a 03F10703 		add	r3, r3, #7
 2042 0b5e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2043 0b60 7449     		ldr	r1, .L272
 2044 0b62 1346     		mov	r3, r2
 2045 0b64 DB00     		lsls	r3, r3, #3
 2046 0b66 9B1A     		subs	r3, r3, r2
 2047 0b68 1B01     		lsls	r3, r3, #4
 2048 0b6a 0B44     		add	r3, r3, r1
 2049 0b6c B433     		adds	r3, r3, #180
 2050 0b6e 1B68     		ldr	r3, [r3]
 2051 0b70 1846     		mov	r0, r3
 2052 0b72 FFF7FEFF 		bl	__aeabi_i2f
 2053 0b76 0346     		mov	r3, r0
 2054 0b78 4FF08F41 		mov	r1, #1199570944
 2055 0b7c 1846     		mov	r0, r3
 2056 0b7e FFF7FEFF 		bl	__aeabi_fdiv
 2057 0b82 0346     		mov	r3, r0
 2058 0b84 1A46     		mov	r2, r3
 2059 0b86 07F13003 		add	r3, r7, #48
 2060 0b8a 143B     		subs	r3, r3, #20
 2061 0b8c 1A60     		str	r2, [r3]	@ float
 475:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2062              		.loc 1 475 0
 2063 0b8e 0023     		movs	r3, #0
 2064 0b90 07F5B852 		add	r2, r7, #5888
 2065 0b94 02F10F02 		add	r2, r2, #15
 2066 0b98 1370     		strb	r3, [r2]
 2067 0b9a 34E0     		b	.L119
 2068              	.L120:
 476:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2069              		.loc 1 476 0 discriminator 3
 2070 0b9c 07F5B853 		add	r3, r7, #5888
 2071 0ba0 03F10D03 		add	r3, r3, #13
 2072 0ba4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2073 0ba6 3222     		movs	r2, #50
 2074 0ba8 02FB03F3 		mul	r3, r2, r3
 2075 0bac 1A1D     		adds	r2, r3, #4
 2076 0bae 07F5B853 		add	r3, r7, #5888
 2077 0bb2 03F10B03 		add	r3, r3, #11
 2078 0bb6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2079 0bb8 1A44     		add	r2, r2, r3
 2080 0bba 07F5B853 		add	r3, r7, #5888
 2081 0bbe 03F10B03 		add	r3, r3, #11
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 62


 2082 0bc2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2083 0bc4 1A44     		add	r2, r2, r3
 2084 0bc6 07F5B853 		add	r3, r7, #5888
 2085 0bca 03F10F03 		add	r3, r3, #15
 2086 0bce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2087 0bd0 D31A     		subs	r3, r2, r3
 2088 0bd2 5A1E     		subs	r2, r3, #1
 2089 0bd4 07F5B853 		add	r3, r7, #5888
 2090 0bd8 03F10F03 		add	r3, r3, #15
 2091 0bdc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2092 0bde 07F13003 		add	r3, r7, #48
 2093 0be2 143B     		subs	r3, r3, #20
 2094 0be4 0B44     		add	r3, r3, r1
 2095 0be6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2096 0be8 07F17003 		add	r3, r7, #112
 2097 0bec 1C3B     		subs	r3, r3, #28
 2098 0bee 9954     		strb	r1, [r3, r2]
 475:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2099              		.loc 1 475 0 discriminator 3
 2100 0bf0 07F5B853 		add	r3, r7, #5888
 2101 0bf4 03F10F03 		add	r3, r3, #15
 2102 0bf8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2103 0bfa 0133     		adds	r3, r3, #1
 2104 0bfc 07F5B852 		add	r2, r7, #5888
 2105 0c00 02F10F02 		add	r2, r2, #15
 2106 0c04 1370     		strb	r3, [r2]
 2107              	.L119:
 475:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2108              		.loc 1 475 0 is_stmt 0 discriminator 1
 2109 0c06 07F5B853 		add	r3, r7, #5888
 2110 0c0a 03F10F03 		add	r3, r3, #15
 2111 0c0e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2112 0c10 07F5B853 		add	r3, r7, #5888
 2113 0c14 03F10B03 		add	r3, r3, #11
 2114 0c18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2115 0c1a 9A42     		cmp	r2, r3
 2116 0c1c BED3     		bcc	.L120
 477:..\src/command_processing.c ****                             }
 478:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d / 65536;
 2117              		.loc 1 478 0 is_stmt 1
 2118 0c1e 07F5B853 		add	r3, r7, #5888
 2119 0c22 03F10703 		add	r3, r3, #7
 2120 0c26 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2121 0c28 4249     		ldr	r1, .L272
 2122 0c2a 1346     		mov	r3, r2
 2123 0c2c DB00     		lsls	r3, r3, #3
 2124 0c2e 9B1A     		subs	r3, r3, r2
 2125 0c30 1B01     		lsls	r3, r3, #4
 2126 0c32 0B44     		add	r3, r3, r1
 2127 0c34 B833     		adds	r3, r3, #184
 2128 0c36 1B68     		ldr	r3, [r3]
 2129 0c38 1846     		mov	r0, r3
 2130 0c3a FFF7FEFF 		bl	__aeabi_i2f
 2131 0c3e 0346     		mov	r3, r0
 2132 0c40 4FF08F41 		mov	r1, #1199570944
 2133 0c44 1846     		mov	r0, r3
 2134 0c46 FFF7FEFF 		bl	__aeabi_fdiv
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 63


 2135 0c4a 0346     		mov	r3, r0
 2136 0c4c 1A46     		mov	r2, r3
 2137 0c4e 07F13003 		add	r3, r7, #48
 2138 0c52 143B     		subs	r3, r3, #20
 2139 0c54 1A60     		str	r2, [r3]	@ float
 479:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2140              		.loc 1 479 0
 2141 0c56 0023     		movs	r3, #0
 2142 0c58 07F5B852 		add	r2, r7, #5888
 2143 0c5c 02F10F02 		add	r2, r2, #15
 2144 0c60 1370     		strb	r3, [r2]
 2145 0c62 35E0     		b	.L121
 2146              	.L122:
 480:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2147              		.loc 1 480 0 discriminator 3
 2148 0c64 07F5B853 		add	r3, r7, #5888
 2149 0c68 03F10D03 		add	r3, r3, #13
 2150 0c6c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2151 0c6e 3222     		movs	r2, #50
 2152 0c70 02FB03F3 		mul	r3, r2, r3
 2153 0c74 1A1D     		adds	r2, r3, #4
 2154 0c76 07F5B853 		add	r3, r7, #5888
 2155 0c7a 03F10B03 		add	r3, r3, #11
 2156 0c7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2157 0c80 5B00     		lsls	r3, r3, #1
 2158 0c82 1A44     		add	r2, r2, r3
 2159 0c84 07F5B853 		add	r3, r7, #5888
 2160 0c88 03F10B03 		add	r3, r3, #11
 2161 0c8c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2162 0c8e 1A44     		add	r2, r2, r3
 2163 0c90 07F5B853 		add	r3, r7, #5888
 2164 0c94 03F10F03 		add	r3, r3, #15
 2165 0c98 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2166 0c9a D31A     		subs	r3, r2, r3
 2167 0c9c 5A1E     		subs	r2, r3, #1
 2168 0c9e 07F5B853 		add	r3, r7, #5888
 2169 0ca2 03F10F03 		add	r3, r3, #15
 2170 0ca6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2171 0ca8 07F13003 		add	r3, r7, #48
 2172 0cac 143B     		subs	r3, r3, #20
 2173 0cae 0B44     		add	r3, r3, r1
 2174 0cb0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2175 0cb2 07F17003 		add	r3, r7, #112
 2176 0cb6 1C3B     		subs	r3, r3, #28
 2177 0cb8 9954     		strb	r1, [r3, r2]
 479:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2178              		.loc 1 479 0 discriminator 3
 2179 0cba 07F5B853 		add	r3, r7, #5888
 2180 0cbe 03F10F03 		add	r3, r3, #15
 2181 0cc2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2182 0cc4 0133     		adds	r3, r3, #1
 2183 0cc6 07F5B852 		add	r2, r7, #5888
 2184 0cca 02F10F02 		add	r2, r2, #15
 2185 0cce 1370     		strb	r3, [r2]
 2186              	.L121:
 479:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2187              		.loc 1 479 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 64


 2188 0cd0 07F5B853 		add	r3, r7, #5888
 2189 0cd4 03F10F03 		add	r3, r3, #15
 2190 0cd8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2191 0cda 07F5B853 		add	r3, r7, #5888
 2192 0cde 03F10B03 		add	r3, r3, #11
 2193 0ce2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2194 0ce4 9A42     		cmp	r2, r3
 2195 0ce6 BDD3     		bcc	.L122
 481:..\src/command_processing.c ****                             } 
 482:..\src/command_processing.c ****                         }
 483:..\src/command_processing.c ****                         else {
 484:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_dl / 65536;
 485:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 486:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 487:..\src/command_processing.c ****                             }
 488:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_dl / 65536;
 489:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 490:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 491:..\src/command_processing.c ****                             }
 492:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_dl / 65536;
 493:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 494:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 495:..\src/command_processing.c ****                             }
 496:..\src/command_processing.c ****                         }
 497:..\src/command_processing.c ****                         break;
 2196              		.loc 1 497 0 is_stmt 1
 2197 0ce8 01F0B7BB 		b	.L104
 2198              	.L116:
 484:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2199              		.loc 1 484 0
 2200 0cec 07F5B853 		add	r3, r7, #5888
 2201 0cf0 03F10703 		add	r3, r3, #7
 2202 0cf4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2203 0cf6 0F49     		ldr	r1, .L272
 2204 0cf8 1346     		mov	r3, r2
 2205 0cfa DB00     		lsls	r3, r3, #3
 2206 0cfc 9B1A     		subs	r3, r3, r2
 2207 0cfe 1B01     		lsls	r3, r3, #4
 2208 0d00 0B44     		add	r3, r3, r1
 2209 0d02 C833     		adds	r3, r3, #200
 2210 0d04 1B68     		ldr	r3, [r3]
 2211 0d06 1846     		mov	r0, r3
 2212 0d08 FFF7FEFF 		bl	__aeabi_i2f
 2213 0d0c 0346     		mov	r3, r0
 2214 0d0e 4FF08F41 		mov	r1, #1199570944
 2215 0d12 1846     		mov	r0, r3
 2216 0d14 FFF7FEFF 		bl	__aeabi_fdiv
 2217 0d18 0346     		mov	r3, r0
 2218 0d1a 1A46     		mov	r2, r3
 2219 0d1c 07F13003 		add	r3, r7, #48
 2220 0d20 143B     		subs	r3, r3, #20
 2221 0d22 1A60     		str	r2, [r3]	@ float
 485:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2222              		.loc 1 485 0
 2223 0d24 0023     		movs	r3, #0
 2224 0d26 07F5B852 		add	r2, r7, #5888
 2225 0d2a 02F10F02 		add	r2, r2, #15
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 65


 2226 0d2e 1370     		strb	r3, [r2]
 2227 0d30 31E0     		b	.L124
 2228              	.L273:
 2229 0d32 00BF     		.align	2
 2230              	.L272:
 2231 0d34 00000000 		.word	c_mem
 2232              	.L125:
 486:..\src/command_processing.c ****                             }
 2233              		.loc 1 486 0 discriminator 3
 2234 0d38 07F5B853 		add	r3, r7, #5888
 2235 0d3c 03F10D03 		add	r3, r3, #13
 2236 0d40 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2237 0d42 3222     		movs	r2, #50
 2238 0d44 02FB03F3 		mul	r3, r2, r3
 2239 0d48 1A1D     		adds	r2, r3, #4
 2240 0d4a 07F5B853 		add	r3, r7, #5888
 2241 0d4e 03F10B03 		add	r3, r3, #11
 2242 0d52 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2243 0d54 1A44     		add	r2, r2, r3
 2244 0d56 07F5B853 		add	r3, r7, #5888
 2245 0d5a 03F10F03 		add	r3, r3, #15
 2246 0d5e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2247 0d60 D31A     		subs	r3, r2, r3
 2248 0d62 5A1E     		subs	r2, r3, #1
 2249 0d64 07F5B853 		add	r3, r7, #5888
 2250 0d68 03F10F03 		add	r3, r3, #15
 2251 0d6c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2252 0d6e 07F13003 		add	r3, r7, #48
 2253 0d72 143B     		subs	r3, r3, #20
 2254 0d74 0B44     		add	r3, r3, r1
 2255 0d76 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2256 0d78 07F17003 		add	r3, r7, #112
 2257 0d7c 1C3B     		subs	r3, r3, #28
 2258 0d7e 9954     		strb	r1, [r3, r2]
 485:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2259              		.loc 1 485 0 discriminator 3
 2260 0d80 07F5B853 		add	r3, r7, #5888
 2261 0d84 03F10F03 		add	r3, r3, #15
 2262 0d88 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2263 0d8a 0133     		adds	r3, r3, #1
 2264 0d8c 07F5B852 		add	r2, r7, #5888
 2265 0d90 02F10F02 		add	r2, r2, #15
 2266 0d94 1370     		strb	r3, [r2]
 2267              	.L124:
 485:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2268              		.loc 1 485 0 is_stmt 0 discriminator 1
 2269 0d96 07F5B853 		add	r3, r7, #5888
 2270 0d9a 03F10F03 		add	r3, r3, #15
 2271 0d9e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2272 0da0 07F5B853 		add	r3, r7, #5888
 2273 0da4 03F10B03 		add	r3, r3, #11
 2274 0da8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2275 0daa 9A42     		cmp	r2, r3
 2276 0dac C4D3     		bcc	.L125
 488:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2277              		.loc 1 488 0 is_stmt 1
 2278 0dae 07F5B853 		add	r3, r7, #5888
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 66


 2279 0db2 03F10703 		add	r3, r3, #7
 2280 0db6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2281 0db8 AB49     		ldr	r1, .L274
 2282 0dba 1346     		mov	r3, r2
 2283 0dbc DB00     		lsls	r3, r3, #3
 2284 0dbe 9B1A     		subs	r3, r3, r2
 2285 0dc0 1B01     		lsls	r3, r3, #4
 2286 0dc2 0B44     		add	r3, r3, r1
 2287 0dc4 CC33     		adds	r3, r3, #204
 2288 0dc6 1B68     		ldr	r3, [r3]
 2289 0dc8 1846     		mov	r0, r3
 2290 0dca FFF7FEFF 		bl	__aeabi_i2f
 2291 0dce 0346     		mov	r3, r0
 2292 0dd0 4FF08F41 		mov	r1, #1199570944
 2293 0dd4 1846     		mov	r0, r3
 2294 0dd6 FFF7FEFF 		bl	__aeabi_fdiv
 2295 0dda 0346     		mov	r3, r0
 2296 0ddc 1A46     		mov	r2, r3
 2297 0dde 07F13003 		add	r3, r7, #48
 2298 0de2 143B     		subs	r3, r3, #20
 2299 0de4 1A60     		str	r2, [r3]	@ float
 489:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2300              		.loc 1 489 0
 2301 0de6 0023     		movs	r3, #0
 2302 0de8 07F5B852 		add	r2, r7, #5888
 2303 0dec 02F10F02 		add	r2, r2, #15
 2304 0df0 1370     		strb	r3, [r2]
 2305 0df2 34E0     		b	.L126
 2306              	.L127:
 490:..\src/command_processing.c ****                             }
 2307              		.loc 1 490 0 discriminator 3
 2308 0df4 07F5B853 		add	r3, r7, #5888
 2309 0df8 03F10D03 		add	r3, r3, #13
 2310 0dfc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2311 0dfe 3222     		movs	r2, #50
 2312 0e00 02FB03F3 		mul	r3, r2, r3
 2313 0e04 1A1D     		adds	r2, r3, #4
 2314 0e06 07F5B853 		add	r3, r7, #5888
 2315 0e0a 03F10B03 		add	r3, r3, #11
 2316 0e0e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2317 0e10 1A44     		add	r2, r2, r3
 2318 0e12 07F5B853 		add	r3, r7, #5888
 2319 0e16 03F10B03 		add	r3, r3, #11
 2320 0e1a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2321 0e1c 1A44     		add	r2, r2, r3
 2322 0e1e 07F5B853 		add	r3, r7, #5888
 2323 0e22 03F10F03 		add	r3, r3, #15
 2324 0e26 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2325 0e28 D31A     		subs	r3, r2, r3
 2326 0e2a 5A1E     		subs	r2, r3, #1
 2327 0e2c 07F5B853 		add	r3, r7, #5888
 2328 0e30 03F10F03 		add	r3, r3, #15
 2329 0e34 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2330 0e36 07F13003 		add	r3, r7, #48
 2331 0e3a 143B     		subs	r3, r3, #20
 2332 0e3c 0B44     		add	r3, r3, r1
 2333 0e3e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 67


 2334 0e40 07F17003 		add	r3, r7, #112
 2335 0e44 1C3B     		subs	r3, r3, #28
 2336 0e46 9954     		strb	r1, [r3, r2]
 489:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2337              		.loc 1 489 0 discriminator 3
 2338 0e48 07F5B853 		add	r3, r7, #5888
 2339 0e4c 03F10F03 		add	r3, r3, #15
 2340 0e50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2341 0e52 0133     		adds	r3, r3, #1
 2342 0e54 07F5B852 		add	r2, r7, #5888
 2343 0e58 02F10F02 		add	r2, r2, #15
 2344 0e5c 1370     		strb	r3, [r2]
 2345              	.L126:
 489:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2346              		.loc 1 489 0 is_stmt 0 discriminator 1
 2347 0e5e 07F5B853 		add	r3, r7, #5888
 2348 0e62 03F10F03 		add	r3, r3, #15
 2349 0e66 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2350 0e68 07F5B853 		add	r3, r7, #5888
 2351 0e6c 03F10B03 		add	r3, r3, #11
 2352 0e70 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2353 0e72 9A42     		cmp	r2, r3
 2354 0e74 BED3     		bcc	.L127
 492:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2355              		.loc 1 492 0 is_stmt 1
 2356 0e76 07F5B853 		add	r3, r7, #5888
 2357 0e7a 03F10703 		add	r3, r3, #7
 2358 0e7e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2359 0e80 7949     		ldr	r1, .L274
 2360 0e82 1346     		mov	r3, r2
 2361 0e84 DB00     		lsls	r3, r3, #3
 2362 0e86 9B1A     		subs	r3, r3, r2
 2363 0e88 1B01     		lsls	r3, r3, #4
 2364 0e8a 0B44     		add	r3, r3, r1
 2365 0e8c D033     		adds	r3, r3, #208
 2366 0e8e 1B68     		ldr	r3, [r3]
 2367 0e90 1846     		mov	r0, r3
 2368 0e92 FFF7FEFF 		bl	__aeabi_i2f
 2369 0e96 0346     		mov	r3, r0
 2370 0e98 4FF08F41 		mov	r1, #1199570944
 2371 0e9c 1846     		mov	r0, r3
 2372 0e9e FFF7FEFF 		bl	__aeabi_fdiv
 2373 0ea2 0346     		mov	r3, r0
 2374 0ea4 1A46     		mov	r2, r3
 2375 0ea6 07F13003 		add	r3, r7, #48
 2376 0eaa 143B     		subs	r3, r3, #20
 2377 0eac 1A60     		str	r2, [r3]	@ float
 493:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2378              		.loc 1 493 0
 2379 0eae 0023     		movs	r3, #0
 2380 0eb0 07F5B852 		add	r2, r7, #5888
 2381 0eb4 02F10F02 		add	r2, r2, #15
 2382 0eb8 1370     		strb	r3, [r2]
 2383 0eba 35E0     		b	.L128
 2384              	.L129:
 494:..\src/command_processing.c ****                             }
 2385              		.loc 1 494 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 68


 2386 0ebc 07F5B853 		add	r3, r7, #5888
 2387 0ec0 03F10D03 		add	r3, r3, #13
 2388 0ec4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2389 0ec6 3222     		movs	r2, #50
 2390 0ec8 02FB03F3 		mul	r3, r2, r3
 2391 0ecc 1A1D     		adds	r2, r3, #4
 2392 0ece 07F5B853 		add	r3, r7, #5888
 2393 0ed2 03F10B03 		add	r3, r3, #11
 2394 0ed6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2395 0ed8 5B00     		lsls	r3, r3, #1
 2396 0eda 1A44     		add	r2, r2, r3
 2397 0edc 07F5B853 		add	r3, r7, #5888
 2398 0ee0 03F10B03 		add	r3, r3, #11
 2399 0ee4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2400 0ee6 1A44     		add	r2, r2, r3
 2401 0ee8 07F5B853 		add	r3, r7, #5888
 2402 0eec 03F10F03 		add	r3, r3, #15
 2403 0ef0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2404 0ef2 D31A     		subs	r3, r2, r3
 2405 0ef4 5A1E     		subs	r2, r3, #1
 2406 0ef6 07F5B853 		add	r3, r7, #5888
 2407 0efa 03F10F03 		add	r3, r3, #15
 2408 0efe 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2409 0f00 07F13003 		add	r3, r7, #48
 2410 0f04 143B     		subs	r3, r3, #20
 2411 0f06 0B44     		add	r3, r3, r1
 2412 0f08 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2413 0f0a 07F17003 		add	r3, r7, #112
 2414 0f0e 1C3B     		subs	r3, r3, #28
 2415 0f10 9954     		strb	r1, [r3, r2]
 493:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2416              		.loc 1 493 0 discriminator 3
 2417 0f12 07F5B853 		add	r3, r7, #5888
 2418 0f16 03F10F03 		add	r3, r3, #15
 2419 0f1a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2420 0f1c 0133     		adds	r3, r3, #1
 2421 0f1e 07F5B852 		add	r2, r7, #5888
 2422 0f22 02F10F02 		add	r2, r2, #15
 2423 0f26 1370     		strb	r3, [r2]
 2424              	.L128:
 493:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2425              		.loc 1 493 0 is_stmt 0 discriminator 1
 2426 0f28 07F5B853 		add	r3, r7, #5888
 2427 0f2c 03F10F03 		add	r3, r3, #15
 2428 0f30 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2429 0f32 07F5B853 		add	r3, r7, #5888
 2430 0f36 03F10B03 		add	r3, r3, #11
 2431 0f3a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2432 0f3c 9A42     		cmp	r2, r3
 2433 0f3e BDD3     		bcc	.L129
 2434              		.loc 1 497 0 is_stmt 1
 2435 0f40 01F08BBA 		b	.L104
 2436              	.L108:
 498:..\src/command_processing.c ****                         
 499:..\src/command_processing.c ****                     case 3:         //Current PID
 500:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 2437              		.loc 1 500 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 69


 2438 0f44 07F5B853 		add	r3, r7, #5888
 2439 0f48 03F10703 		add	r3, r3, #7
 2440 0f4c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2441 0f4e 4649     		ldr	r1, .L274
 2442 0f50 1346     		mov	r3, r2
 2443 0f52 DB00     		lsls	r3, r3, #3
 2444 0f54 9B1A     		subs	r3, r3, r2
 2445 0f56 1B01     		lsls	r3, r3, #4
 2446 0f58 0B44     		add	r3, r3, r1
 2447 0f5a 03F20F13 		addw	r3, r3, #271
 2448 0f5e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2449 0f60 032B     		cmp	r3, #3
 2450 0f62 00F02B81 		beq	.L130
 501:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c / 65536;
 2451              		.loc 1 501 0
 2452 0f66 07F5B853 		add	r3, r7, #5888
 2453 0f6a 03F10703 		add	r3, r3, #7
 2454 0f6e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2455 0f70 3D49     		ldr	r1, .L274
 2456 0f72 1346     		mov	r3, r2
 2457 0f74 DB00     		lsls	r3, r3, #3
 2458 0f76 9B1A     		subs	r3, r3, r2
 2459 0f78 1B01     		lsls	r3, r3, #4
 2460 0f7a 0B44     		add	r3, r3, r1
 2461 0f7c BC33     		adds	r3, r3, #188
 2462 0f7e 1B68     		ldr	r3, [r3]
 2463 0f80 1846     		mov	r0, r3
 2464 0f82 FFF7FEFF 		bl	__aeabi_i2f
 2465 0f86 0346     		mov	r3, r0
 2466 0f88 4FF08F41 		mov	r1, #1199570944
 2467 0f8c 1846     		mov	r0, r3
 2468 0f8e FFF7FEFF 		bl	__aeabi_fdiv
 2469 0f92 0346     		mov	r3, r0
 2470 0f94 1A46     		mov	r2, r3
 2471 0f96 07F13003 		add	r3, r7, #48
 2472 0f9a 143B     		subs	r3, r3, #20
 2473 0f9c 1A60     		str	r2, [r3]	@ float
 502:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2474              		.loc 1 502 0
 2475 0f9e 0023     		movs	r3, #0
 2476 0fa0 07F5B852 		add	r2, r7, #5888
 2477 0fa4 02F10F02 		add	r2, r2, #15
 2478 0fa8 1370     		strb	r3, [r2]
 2479 0faa 2EE0     		b	.L131
 2480              	.L132:
 503:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2481              		.loc 1 503 0 discriminator 3
 2482 0fac 07F5B853 		add	r3, r7, #5888
 2483 0fb0 03F10D03 		add	r3, r3, #13
 2484 0fb4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2485 0fb6 3222     		movs	r2, #50
 2486 0fb8 02FB03F3 		mul	r3, r2, r3
 2487 0fbc 1A1D     		adds	r2, r3, #4
 2488 0fbe 07F5B853 		add	r3, r7, #5888
 2489 0fc2 03F10B03 		add	r3, r3, #11
 2490 0fc6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2491 0fc8 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 70


 2492 0fca 07F5B853 		add	r3, r7, #5888
 2493 0fce 03F10F03 		add	r3, r3, #15
 2494 0fd2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2495 0fd4 D31A     		subs	r3, r2, r3
 2496 0fd6 5A1E     		subs	r2, r3, #1
 2497 0fd8 07F5B853 		add	r3, r7, #5888
 2498 0fdc 03F10F03 		add	r3, r3, #15
 2499 0fe0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2500 0fe2 07F13003 		add	r3, r7, #48
 2501 0fe6 143B     		subs	r3, r3, #20
 2502 0fe8 0B44     		add	r3, r3, r1
 2503 0fea 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2504 0fec 07F17003 		add	r3, r7, #112
 2505 0ff0 1C3B     		subs	r3, r3, #28
 2506 0ff2 9954     		strb	r1, [r3, r2]
 502:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2507              		.loc 1 502 0 discriminator 3
 2508 0ff4 07F5B853 		add	r3, r7, #5888
 2509 0ff8 03F10F03 		add	r3, r3, #15
 2510 0ffc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2511 0ffe 0133     		adds	r3, r3, #1
 2512 1000 07F5B852 		add	r2, r7, #5888
 2513 1004 02F10F02 		add	r2, r2, #15
 2514 1008 1370     		strb	r3, [r2]
 2515              	.L131:
 502:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2516              		.loc 1 502 0 is_stmt 0 discriminator 1
 2517 100a 07F5B853 		add	r3, r7, #5888
 2518 100e 03F10F03 		add	r3, r3, #15
 2519 1012 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2520 1014 07F5B853 		add	r3, r7, #5888
 2521 1018 03F10B03 		add	r3, r3, #11
 2522 101c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2523 101e 9A42     		cmp	r2, r3
 2524 1020 C4D3     		bcc	.L132
 504:..\src/command_processing.c ****                             }
 505:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c / 65536;
 2525              		.loc 1 505 0 is_stmt 1
 2526 1022 07F5B853 		add	r3, r7, #5888
 2527 1026 03F10703 		add	r3, r3, #7
 2528 102a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2529 102c 0E49     		ldr	r1, .L274
 2530 102e 1346     		mov	r3, r2
 2531 1030 DB00     		lsls	r3, r3, #3
 2532 1032 9B1A     		subs	r3, r3, r2
 2533 1034 1B01     		lsls	r3, r3, #4
 2534 1036 0B44     		add	r3, r3, r1
 2535 1038 C033     		adds	r3, r3, #192
 2536 103a 1B68     		ldr	r3, [r3]
 2537 103c 1846     		mov	r0, r3
 2538 103e FFF7FEFF 		bl	__aeabi_i2f
 2539 1042 0346     		mov	r3, r0
 2540 1044 4FF08F41 		mov	r1, #1199570944
 2541 1048 1846     		mov	r0, r3
 2542 104a FFF7FEFF 		bl	__aeabi_fdiv
 2543 104e 0346     		mov	r3, r0
 2544 1050 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 71


 2545 1052 07F13003 		add	r3, r7, #48
 2546 1056 143B     		subs	r3, r3, #20
 2547 1058 1A60     		str	r2, [r3]	@ float
 506:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2548              		.loc 1 506 0
 2549 105a 0023     		movs	r3, #0
 2550 105c 07F5B852 		add	r2, r7, #5888
 2551 1060 02F10F02 		add	r2, r2, #15
 2552 1064 1370     		strb	r3, [r2]
 2553 1066 36E0     		b	.L133
 2554              	.L275:
 2555              		.align	2
 2556              	.L274:
 2557 1068 00000000 		.word	c_mem
 2558              	.L134:
 507:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2559              		.loc 1 507 0 discriminator 3
 2560 106c 07F5B853 		add	r3, r7, #5888
 2561 1070 03F10D03 		add	r3, r3, #13
 2562 1074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2563 1076 3222     		movs	r2, #50
 2564 1078 02FB03F3 		mul	r3, r2, r3
 2565 107c 1A1D     		adds	r2, r3, #4
 2566 107e 07F5B853 		add	r3, r7, #5888
 2567 1082 03F10B03 		add	r3, r3, #11
 2568 1086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2569 1088 1A44     		add	r2, r2, r3
 2570 108a 07F5B853 		add	r3, r7, #5888
 2571 108e 03F10B03 		add	r3, r3, #11
 2572 1092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2573 1094 1A44     		add	r2, r2, r3
 2574 1096 07F5B853 		add	r3, r7, #5888
 2575 109a 03F10F03 		add	r3, r3, #15
 2576 109e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2577 10a0 D31A     		subs	r3, r2, r3
 2578 10a2 5A1E     		subs	r2, r3, #1
 2579 10a4 07F5B853 		add	r3, r7, #5888
 2580 10a8 03F10F03 		add	r3, r3, #15
 2581 10ac 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2582 10ae 07F13003 		add	r3, r7, #48
 2583 10b2 143B     		subs	r3, r3, #20
 2584 10b4 0B44     		add	r3, r3, r1
 2585 10b6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2586 10b8 07F17003 		add	r3, r7, #112
 2587 10bc 1C3B     		subs	r3, r3, #28
 2588 10be 9954     		strb	r1, [r3, r2]
 506:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2589              		.loc 1 506 0 discriminator 3
 2590 10c0 07F5B853 		add	r3, r7, #5888
 2591 10c4 03F10F03 		add	r3, r3, #15
 2592 10c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2593 10ca 0133     		adds	r3, r3, #1
 2594 10cc 07F5B852 		add	r2, r7, #5888
 2595 10d0 02F10F02 		add	r2, r2, #15
 2596 10d4 1370     		strb	r3, [r2]
 2597              	.L133:
 506:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 72


 2598              		.loc 1 506 0 is_stmt 0 discriminator 1
 2599 10d6 07F5B853 		add	r3, r7, #5888
 2600 10da 03F10F03 		add	r3, r3, #15
 2601 10de 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2602 10e0 07F5B853 		add	r3, r7, #5888
 2603 10e4 03F10B03 		add	r3, r3, #11
 2604 10e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2605 10ea 9A42     		cmp	r2, r3
 2606 10ec BED3     		bcc	.L134
 508:..\src/command_processing.c ****                             }
 509:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c / 65536;
 2607              		.loc 1 509 0 is_stmt 1
 2608 10ee 07F5B853 		add	r3, r7, #5888
 2609 10f2 03F10703 		add	r3, r3, #7
 2610 10f6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2611 10f8 C549     		ldr	r1, .L276
 2612 10fa 1346     		mov	r3, r2
 2613 10fc DB00     		lsls	r3, r3, #3
 2614 10fe 9B1A     		subs	r3, r3, r2
 2615 1100 1B01     		lsls	r3, r3, #4
 2616 1102 0B44     		add	r3, r3, r1
 2617 1104 C433     		adds	r3, r3, #196
 2618 1106 1B68     		ldr	r3, [r3]
 2619 1108 1846     		mov	r0, r3
 2620 110a FFF7FEFF 		bl	__aeabi_i2f
 2621 110e 0346     		mov	r3, r0
 2622 1110 4FF08F41 		mov	r1, #1199570944
 2623 1114 1846     		mov	r0, r3
 2624 1116 FFF7FEFF 		bl	__aeabi_fdiv
 2625 111a 0346     		mov	r3, r0
 2626 111c 1A46     		mov	r2, r3
 2627 111e 07F13003 		add	r3, r7, #48
 2628 1122 143B     		subs	r3, r3, #20
 2629 1124 1A60     		str	r2, [r3]	@ float
 510:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2630              		.loc 1 510 0
 2631 1126 0023     		movs	r3, #0
 2632 1128 07F5B852 		add	r2, r7, #5888
 2633 112c 02F10F02 		add	r2, r2, #15
 2634 1130 1370     		strb	r3, [r2]
 2635 1132 35E0     		b	.L135
 2636              	.L136:
 511:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2637              		.loc 1 511 0 discriminator 3
 2638 1134 07F5B853 		add	r3, r7, #5888
 2639 1138 03F10D03 		add	r3, r3, #13
 2640 113c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2641 113e 3222     		movs	r2, #50
 2642 1140 02FB03F3 		mul	r3, r2, r3
 2643 1144 1A1D     		adds	r2, r3, #4
 2644 1146 07F5B853 		add	r3, r7, #5888
 2645 114a 03F10B03 		add	r3, r3, #11
 2646 114e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2647 1150 5B00     		lsls	r3, r3, #1
 2648 1152 1A44     		add	r2, r2, r3
 2649 1154 07F5B853 		add	r3, r7, #5888
 2650 1158 03F10B03 		add	r3, r3, #11
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 73


 2651 115c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2652 115e 1A44     		add	r2, r2, r3
 2653 1160 07F5B853 		add	r3, r7, #5888
 2654 1164 03F10F03 		add	r3, r3, #15
 2655 1168 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2656 116a D31A     		subs	r3, r2, r3
 2657 116c 5A1E     		subs	r2, r3, #1
 2658 116e 07F5B853 		add	r3, r7, #5888
 2659 1172 03F10F03 		add	r3, r3, #15
 2660 1176 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2661 1178 07F13003 		add	r3, r7, #48
 2662 117c 143B     		subs	r3, r3, #20
 2663 117e 0B44     		add	r3, r3, r1
 2664 1180 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2665 1182 07F17003 		add	r3, r7, #112
 2666 1186 1C3B     		subs	r3, r3, #28
 2667 1188 9954     		strb	r1, [r3, r2]
 510:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2668              		.loc 1 510 0 discriminator 3
 2669 118a 07F5B853 		add	r3, r7, #5888
 2670 118e 03F10F03 		add	r3, r3, #15
 2671 1192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2672 1194 0133     		adds	r3, r3, #1
 2673 1196 07F5B852 		add	r2, r7, #5888
 2674 119a 02F10F02 		add	r2, r2, #15
 2675 119e 1370     		strb	r3, [r2]
 2676              	.L135:
 510:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2677              		.loc 1 510 0 is_stmt 0 discriminator 1
 2678 11a0 07F5B853 		add	r3, r7, #5888
 2679 11a4 03F10F03 		add	r3, r3, #15
 2680 11a8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2681 11aa 07F5B853 		add	r3, r7, #5888
 2682 11ae 03F10B03 		add	r3, r3, #11
 2683 11b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2684 11b4 9A42     		cmp	r2, r3
 2685 11b6 BDD3     		bcc	.L136
 512:..\src/command_processing.c ****                             }
 513:..\src/command_processing.c ****                         }
 514:..\src/command_processing.c ****                         else {
 515:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c_dl / 65536;
 516:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 517:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 518:..\src/command_processing.c ****                             }
 519:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c_dl / 65536;
 520:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 521:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 522:..\src/command_processing.c ****                             }
 523:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c_dl / 65536;
 524:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 525:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 526:..\src/command_processing.c ****                             }
 527:..\src/command_processing.c ****                         }            
 528:..\src/command_processing.c ****                         break;  
 2686              		.loc 1 528 0 is_stmt 1
 2687 11b8 01F04FB9 		b	.L104
 2688              	.L130:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 74


 515:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2689              		.loc 1 515 0
 2690 11bc 07F5B853 		add	r3, r7, #5888
 2691 11c0 03F10703 		add	r3, r3, #7
 2692 11c4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2693 11c6 9249     		ldr	r1, .L276
 2694 11c8 1346     		mov	r3, r2
 2695 11ca DB00     		lsls	r3, r3, #3
 2696 11cc 9B1A     		subs	r3, r3, r2
 2697 11ce 1B01     		lsls	r3, r3, #4
 2698 11d0 0B44     		add	r3, r3, r1
 2699 11d2 D433     		adds	r3, r3, #212
 2700 11d4 1B68     		ldr	r3, [r3]
 2701 11d6 1846     		mov	r0, r3
 2702 11d8 FFF7FEFF 		bl	__aeabi_i2f
 2703 11dc 0346     		mov	r3, r0
 2704 11de 4FF08F41 		mov	r1, #1199570944
 2705 11e2 1846     		mov	r0, r3
 2706 11e4 FFF7FEFF 		bl	__aeabi_fdiv
 2707 11e8 0346     		mov	r3, r0
 2708 11ea 1A46     		mov	r2, r3
 2709 11ec 07F13003 		add	r3, r7, #48
 2710 11f0 143B     		subs	r3, r3, #20
 2711 11f2 1A60     		str	r2, [r3]	@ float
 516:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2712              		.loc 1 516 0
 2713 11f4 0023     		movs	r3, #0
 2714 11f6 07F5B852 		add	r2, r7, #5888
 2715 11fa 02F10F02 		add	r2, r2, #15
 2716 11fe 1370     		strb	r3, [r2]
 2717 1200 2EE0     		b	.L138
 2718              	.L139:
 517:..\src/command_processing.c ****                             }
 2719              		.loc 1 517 0 discriminator 3
 2720 1202 07F5B853 		add	r3, r7, #5888
 2721 1206 03F10D03 		add	r3, r3, #13
 2722 120a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2723 120c 3222     		movs	r2, #50
 2724 120e 02FB03F3 		mul	r3, r2, r3
 2725 1212 1A1D     		adds	r2, r3, #4
 2726 1214 07F5B853 		add	r3, r7, #5888
 2727 1218 03F10B03 		add	r3, r3, #11
 2728 121c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2729 121e 1A44     		add	r2, r2, r3
 2730 1220 07F5B853 		add	r3, r7, #5888
 2731 1224 03F10F03 		add	r3, r3, #15
 2732 1228 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2733 122a D31A     		subs	r3, r2, r3
 2734 122c 5A1E     		subs	r2, r3, #1
 2735 122e 07F5B853 		add	r3, r7, #5888
 2736 1232 03F10F03 		add	r3, r3, #15
 2737 1236 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2738 1238 07F13003 		add	r3, r7, #48
 2739 123c 143B     		subs	r3, r3, #20
 2740 123e 0B44     		add	r3, r3, r1
 2741 1240 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2742 1242 07F17003 		add	r3, r7, #112
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 75


 2743 1246 1C3B     		subs	r3, r3, #28
 2744 1248 9954     		strb	r1, [r3, r2]
 516:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2745              		.loc 1 516 0 discriminator 3
 2746 124a 07F5B853 		add	r3, r7, #5888
 2747 124e 03F10F03 		add	r3, r3, #15
 2748 1252 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2749 1254 0133     		adds	r3, r3, #1
 2750 1256 07F5B852 		add	r2, r7, #5888
 2751 125a 02F10F02 		add	r2, r2, #15
 2752 125e 1370     		strb	r3, [r2]
 2753              	.L138:
 516:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2754              		.loc 1 516 0 is_stmt 0 discriminator 1
 2755 1260 07F5B853 		add	r3, r7, #5888
 2756 1264 03F10F03 		add	r3, r3, #15
 2757 1268 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2758 126a 07F5B853 		add	r3, r7, #5888
 2759 126e 03F10B03 		add	r3, r3, #11
 2760 1272 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2761 1274 9A42     		cmp	r2, r3
 2762 1276 C4D3     		bcc	.L139
 519:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2763              		.loc 1 519 0 is_stmt 1
 2764 1278 07F5B853 		add	r3, r7, #5888
 2765 127c 03F10703 		add	r3, r3, #7
 2766 1280 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2767 1282 6349     		ldr	r1, .L276
 2768 1284 1346     		mov	r3, r2
 2769 1286 DB00     		lsls	r3, r3, #3
 2770 1288 9B1A     		subs	r3, r3, r2
 2771 128a 1B01     		lsls	r3, r3, #4
 2772 128c 0B44     		add	r3, r3, r1
 2773 128e D833     		adds	r3, r3, #216
 2774 1290 1B68     		ldr	r3, [r3]
 2775 1292 1846     		mov	r0, r3
 2776 1294 FFF7FEFF 		bl	__aeabi_i2f
 2777 1298 0346     		mov	r3, r0
 2778 129a 4FF08F41 		mov	r1, #1199570944
 2779 129e 1846     		mov	r0, r3
 2780 12a0 FFF7FEFF 		bl	__aeabi_fdiv
 2781 12a4 0346     		mov	r3, r0
 2782 12a6 1A46     		mov	r2, r3
 2783 12a8 07F13003 		add	r3, r7, #48
 2784 12ac 143B     		subs	r3, r3, #20
 2785 12ae 1A60     		str	r2, [r3]	@ float
 520:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2786              		.loc 1 520 0
 2787 12b0 0023     		movs	r3, #0
 2788 12b2 07F5B852 		add	r2, r7, #5888
 2789 12b6 02F10F02 		add	r2, r2, #15
 2790 12ba 1370     		strb	r3, [r2]
 2791 12bc 34E0     		b	.L140
 2792              	.L141:
 521:..\src/command_processing.c ****                             }
 2793              		.loc 1 521 0 discriminator 3
 2794 12be 07F5B853 		add	r3, r7, #5888
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 76


 2795 12c2 03F10D03 		add	r3, r3, #13
 2796 12c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2797 12c8 3222     		movs	r2, #50
 2798 12ca 02FB03F3 		mul	r3, r2, r3
 2799 12ce 1A1D     		adds	r2, r3, #4
 2800 12d0 07F5B853 		add	r3, r7, #5888
 2801 12d4 03F10B03 		add	r3, r3, #11
 2802 12d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2803 12da 1A44     		add	r2, r2, r3
 2804 12dc 07F5B853 		add	r3, r7, #5888
 2805 12e0 03F10B03 		add	r3, r3, #11
 2806 12e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2807 12e6 1A44     		add	r2, r2, r3
 2808 12e8 07F5B853 		add	r3, r7, #5888
 2809 12ec 03F10F03 		add	r3, r3, #15
 2810 12f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2811 12f2 D31A     		subs	r3, r2, r3
 2812 12f4 5A1E     		subs	r2, r3, #1
 2813 12f6 07F5B853 		add	r3, r7, #5888
 2814 12fa 03F10F03 		add	r3, r3, #15
 2815 12fe 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2816 1300 07F13003 		add	r3, r7, #48
 2817 1304 143B     		subs	r3, r3, #20
 2818 1306 0B44     		add	r3, r3, r1
 2819 1308 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2820 130a 07F17003 		add	r3, r7, #112
 2821 130e 1C3B     		subs	r3, r3, #28
 2822 1310 9954     		strb	r1, [r3, r2]
 520:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2823              		.loc 1 520 0 discriminator 3
 2824 1312 07F5B853 		add	r3, r7, #5888
 2825 1316 03F10F03 		add	r3, r3, #15
 2826 131a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2827 131c 0133     		adds	r3, r3, #1
 2828 131e 07F5B852 		add	r2, r7, #5888
 2829 1322 02F10F02 		add	r2, r2, #15
 2830 1326 1370     		strb	r3, [r2]
 2831              	.L140:
 520:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2832              		.loc 1 520 0 is_stmt 0 discriminator 1
 2833 1328 07F5B853 		add	r3, r7, #5888
 2834 132c 03F10F03 		add	r3, r3, #15
 2835 1330 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2836 1332 07F5B853 		add	r3, r7, #5888
 2837 1336 03F10B03 		add	r3, r3, #11
 2838 133a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2839 133c 9A42     		cmp	r2, r3
 2840 133e BED3     		bcc	.L141
 523:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2841              		.loc 1 523 0 is_stmt 1
 2842 1340 07F5B853 		add	r3, r7, #5888
 2843 1344 03F10703 		add	r3, r3, #7
 2844 1348 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2845 134a 3149     		ldr	r1, .L276
 2846 134c 1346     		mov	r3, r2
 2847 134e DB00     		lsls	r3, r3, #3
 2848 1350 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 77


 2849 1352 1B01     		lsls	r3, r3, #4
 2850 1354 0B44     		add	r3, r3, r1
 2851 1356 DC33     		adds	r3, r3, #220
 2852 1358 1B68     		ldr	r3, [r3]
 2853 135a 1846     		mov	r0, r3
 2854 135c FFF7FEFF 		bl	__aeabi_i2f
 2855 1360 0346     		mov	r3, r0
 2856 1362 4FF08F41 		mov	r1, #1199570944
 2857 1366 1846     		mov	r0, r3
 2858 1368 FFF7FEFF 		bl	__aeabi_fdiv
 2859 136c 0346     		mov	r3, r0
 2860 136e 1A46     		mov	r2, r3
 2861 1370 07F13003 		add	r3, r7, #48
 2862 1374 143B     		subs	r3, r3, #20
 2863 1376 1A60     		str	r2, [r3]	@ float
 524:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2864              		.loc 1 524 0
 2865 1378 0023     		movs	r3, #0
 2866 137a 07F5B852 		add	r2, r7, #5888
 2867 137e 02F10F02 		add	r2, r2, #15
 2868 1382 1370     		strb	r3, [r2]
 2869 1384 35E0     		b	.L142
 2870              	.L143:
 525:..\src/command_processing.c ****                             }
 2871              		.loc 1 525 0 discriminator 3
 2872 1386 07F5B853 		add	r3, r7, #5888
 2873 138a 03F10D03 		add	r3, r3, #13
 2874 138e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2875 1390 3222     		movs	r2, #50
 2876 1392 02FB03F3 		mul	r3, r2, r3
 2877 1396 1A1D     		adds	r2, r3, #4
 2878 1398 07F5B853 		add	r3, r7, #5888
 2879 139c 03F10B03 		add	r3, r3, #11
 2880 13a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2881 13a2 5B00     		lsls	r3, r3, #1
 2882 13a4 1A44     		add	r2, r2, r3
 2883 13a6 07F5B853 		add	r3, r7, #5888
 2884 13aa 03F10B03 		add	r3, r3, #11
 2885 13ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2886 13b0 1A44     		add	r2, r2, r3
 2887 13b2 07F5B853 		add	r3, r7, #5888
 2888 13b6 03F10F03 		add	r3, r3, #15
 2889 13ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2890 13bc D31A     		subs	r3, r2, r3
 2891 13be 5A1E     		subs	r2, r3, #1
 2892 13c0 07F5B853 		add	r3, r7, #5888
 2893 13c4 03F10F03 		add	r3, r3, #15
 2894 13c8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2895 13ca 07F13003 		add	r3, r7, #48
 2896 13ce 143B     		subs	r3, r3, #20
 2897 13d0 0B44     		add	r3, r3, r1
 2898 13d2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2899 13d4 07F17003 		add	r3, r7, #112
 2900 13d8 1C3B     		subs	r3, r3, #28
 2901 13da 9954     		strb	r1, [r3, r2]
 524:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2902              		.loc 1 524 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 78


 2903 13dc 07F5B853 		add	r3, r7, #5888
 2904 13e0 03F10F03 		add	r3, r3, #15
 2905 13e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2906 13e6 0133     		adds	r3, r3, #1
 2907 13e8 07F5B852 		add	r2, r7, #5888
 2908 13ec 02F10F02 		add	r2, r2, #15
 2909 13f0 1370     		strb	r3, [r2]
 2910              	.L142:
 524:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2911              		.loc 1 524 0 is_stmt 0 discriminator 1
 2912 13f2 07F5B853 		add	r3, r7, #5888
 2913 13f6 03F10F03 		add	r3, r3, #15
 2914 13fa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2915 13fc 07F5B853 		add	r3, r7, #5888
 2916 1400 03F10B03 		add	r3, r3, #11
 2917 1404 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2918 1406 9A42     		cmp	r2, r3
 2919 1408 BDD3     		bcc	.L143
 2920              		.loc 1 528 0 is_stmt 1
 2921 140a 01F026B8 		b	.L104
 2922              	.L277:
 2923 140e 00BF     		.align	2
 2924              	.L276:
 2925 1410 00000000 		.word	c_mem
 2926              	.L109:
 529:..\src/command_processing.c **** 
 530:..\src/command_processing.c ****                     case 8:         //Measurement Offset
 531:..\src/command_processing.c ****                         aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >> c_m
 2927              		.loc 1 531 0
 2928 1414 07F5B853 		add	r3, r7, #5888
 2929 1418 03F10703 		add	r3, r3, #7
 2930 141c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2931 141e CC49     		ldr	r1, .L278
 2932 1420 1346     		mov	r3, r2
 2933 1422 DB00     		lsls	r3, r3, #3
 2934 1424 9B1A     		subs	r3, r3, r2
 2935 1426 1B01     		lsls	r3, r3, #4
 2936 1428 0B44     		add	r3, r3, r1
 2937 142a 03F58873 		add	r3, r3, #272
 2938 142e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2939 1430 1846     		mov	r0, r3
 2940 1432 07F5B853 		add	r3, r7, #5888
 2941 1436 03F10F03 		add	r3, r3, #15
 2942 143a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2943 143c C549     		ldr	r1, .L278+4
 2944 143e 0346     		mov	r3, r0
 2945 1440 5B00     		lsls	r3, r3, #1
 2946 1442 0344     		add	r3, r3, r0
 2947 1444 9B00     		lsls	r3, r3, #2
 2948 1446 1344     		add	r3, r3, r2
 2949 1448 6633     		adds	r3, r3, #102
 2950 144a 51F82310 		ldr	r1, [r1, r3, lsl #2]
 2951 144e 07F5B853 		add	r3, r7, #5888
 2952 1452 03F10703 		add	r3, r3, #7
 2953 1456 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2954 1458 BD48     		ldr	r0, .L278
 2955 145a 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 79


 2956 145c DB00     		lsls	r3, r3, #3
 2957 145e 9B1A     		subs	r3, r3, r2
 2958 1460 1B01     		lsls	r3, r3, #4
 2959 1462 0344     		add	r3, r3, r0
 2960 1464 03F58873 		add	r3, r3, #272
 2961 1468 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2962 146a 1C46     		mov	r4, r3
 2963 146c 07F5B853 		add	r3, r7, #5888
 2964 1470 03F10F03 		add	r3, r3, #15
 2965 1474 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2966 1476 B748     		ldr	r0, .L278+4
 2967 1478 2346     		mov	r3, r4
 2968 147a 5B00     		lsls	r3, r3, #1
 2969 147c 2344     		add	r3, r3, r4
 2970 147e 1B01     		lsls	r3, r3, #4
 2971 1480 0344     		add	r3, r3, r0
 2972 1482 1344     		add	r3, r3, r2
 2973 1484 03F29513 		addw	r3, r3, #405
 2974 1488 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2975 148a 41FA03F3 		asr	r3, r1, r3
 2976 148e 1AB2     		sxth	r2, r3
 2977 1490 07F13003 		add	r3, r7, #48
 2978 1494 163B     		subs	r3, r3, #22
 2979 1496 1A80     		strh	r2, [r3]	@ movhi
 532:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2980              		.loc 1 532 0
 2981 1498 0023     		movs	r3, #0
 2982 149a 07F5B852 		add	r2, r7, #5888
 2983 149e 02F10E02 		add	r2, r2, #14
 2984 14a2 1370     		strb	r3, [r2]
 2985 14a4 3BE0     		b	.L144
 2986              	.L145:
 533:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 2987              		.loc 1 533 0 discriminator 3
 2988 14a6 07F5B853 		add	r3, r7, #5888
 2989 14aa 03F10D03 		add	r3, r3, #13
 2990 14ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2991 14b0 3222     		movs	r2, #50
 2992 14b2 02FB03F3 		mul	r3, r2, r3
 2993 14b6 1A1D     		adds	r2, r3, #4
 2994 14b8 07F5B853 		add	r3, r7, #5888
 2995 14bc 03F10F03 		add	r3, r3, #15
 2996 14c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2997 14c2 07F5B851 		add	r1, r7, #5888
 2998 14c6 01F10B01 		add	r1, r1, #11
 2999 14ca 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 3000 14cc 01FB03F3 		mul	r3, r1, r3
 3001 14d0 1A44     		add	r2, r2, r3
 3002 14d2 07F5B853 		add	r3, r7, #5888
 3003 14d6 03F10B03 		add	r3, r3, #11
 3004 14da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3005 14dc 1A44     		add	r2, r2, r3
 3006 14de 07F5B853 		add	r3, r7, #5888
 3007 14e2 03F10E03 		add	r3, r3, #14
 3008 14e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3009 14e8 D31A     		subs	r3, r2, r3
 3010 14ea 5A1E     		subs	r2, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 80


 3011 14ec 07F5B853 		add	r3, r7, #5888
 3012 14f0 03F10E03 		add	r3, r3, #14
 3013 14f4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3014 14f6 07F13003 		add	r3, r7, #48
 3015 14fa 163B     		subs	r3, r3, #22
 3016 14fc 0B44     		add	r3, r3, r1
 3017 14fe 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3018 1500 07F17003 		add	r3, r7, #112
 3019 1504 1C3B     		subs	r3, r3, #28
 3020 1506 9954     		strb	r1, [r3, r2]
 532:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3021              		.loc 1 532 0 discriminator 3
 3022 1508 07F5B853 		add	r3, r7, #5888
 3023 150c 03F10E03 		add	r3, r3, #14
 3024 1510 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3025 1512 0133     		adds	r3, r3, #1
 3026 1514 07F5B852 		add	r2, r7, #5888
 3027 1518 02F10E02 		add	r2, r2, #14
 3028 151c 1370     		strb	r3, [r2]
 3029              	.L144:
 532:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3030              		.loc 1 532 0 is_stmt 0 discriminator 1
 3031 151e 07F5B853 		add	r3, r7, #5888
 3032 1522 03F10E03 		add	r3, r3, #14
 3033 1526 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3034 1528 07F5B853 		add	r3, r7, #5888
 3035 152c 03F10B03 		add	r3, r3, #11
 3036 1530 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3037 1532 9A42     		cmp	r2, r3
 3038 1534 B7D3     		bcc	.L145
 534:..\src/command_processing.c ****                         }
 535:..\src/command_processing.c ****                         break;
 3039              		.loc 1 535 0 is_stmt 1
 3040 1536 00F090BF 		b	.L104
 3041              	.L110:
 536:..\src/command_processing.c ****                 
 537:..\src/command_processing.c ****                     case 11:        //Position limits
 538:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.motor[MO
 3042              		.loc 1 538 0
 3043 153a 07F5B853 		add	r3, r7, #5888
 3044 153e 03F10703 		add	r3, r3, #7
 3045 1542 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3046 1544 8349     		ldr	r1, .L278+4
 3047 1546 1346     		mov	r3, r2
 3048 1548 DB00     		lsls	r3, r3, #3
 3049 154a 9B1A     		subs	r3, r3, r2
 3050 154c 1B01     		lsls	r3, r3, #4
 3051 154e 0B44     		add	r3, r3, r1
 3052 1550 E433     		adds	r3, r3, #228
 3053 1552 1968     		ldr	r1, [r3]
 3054 1554 07F5B853 		add	r3, r7, #5888
 3055 1558 03F10703 		add	r3, r3, #7
 3056 155c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3057 155e 7C48     		ldr	r0, .L278
 3058 1560 1346     		mov	r3, r2
 3059 1562 DB00     		lsls	r3, r3, #3
 3060 1564 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 81


 3061 1566 1B01     		lsls	r3, r3, #4
 3062 1568 0344     		add	r3, r3, r0
 3063 156a 03F58873 		add	r3, r3, #272
 3064 156e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3065 1570 1846     		mov	r0, r3
 3066 1572 784A     		ldr	r2, .L278+4
 3067 1574 0346     		mov	r3, r0
 3068 1576 5B00     		lsls	r3, r3, #1
 3069 1578 0344     		add	r3, r3, r0
 3070 157a 1B01     		lsls	r3, r3, #4
 3071 157c 1344     		add	r3, r3, r2
 3072 157e 03F29513 		addw	r3, r3, #405
 3073 1582 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3074 1584 41FA03F2 		asr	r2, r1, r3
 3075 1588 07F13003 		add	r3, r7, #48
 3076 158c 1C3B     		subs	r3, r3, #28
 3077 158e 1A60     		str	r2, [r3]
 539:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3078              		.loc 1 539 0
 3079 1590 0023     		movs	r3, #0
 3080 1592 07F5B852 		add	r2, r7, #5888
 3081 1596 02F10E02 		add	r2, r2, #14
 3082 159a 1370     		strb	r3, [r2]
 3083 159c 2EE0     		b	.L146
 3084              	.L147:
 540:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 3085              		.loc 1 540 0 discriminator 3
 3086 159e 07F5B853 		add	r3, r7, #5888
 3087 15a2 03F10D03 		add	r3, r3, #13
 3088 15a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3089 15a8 3222     		movs	r2, #50
 3090 15aa 02FB03F3 		mul	r3, r2, r3
 3091 15ae 1A1D     		adds	r2, r3, #4
 3092 15b0 07F5B853 		add	r3, r7, #5888
 3093 15b4 03F10B03 		add	r3, r3, #11
 3094 15b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3095 15ba 1A44     		add	r2, r2, r3
 3096 15bc 07F5B853 		add	r3, r7, #5888
 3097 15c0 03F10E03 		add	r3, r3, #14
 3098 15c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3099 15c6 D31A     		subs	r3, r2, r3
 3100 15c8 5A1E     		subs	r2, r3, #1
 3101 15ca 07F5B853 		add	r3, r7, #5888
 3102 15ce 03F10E03 		add	r3, r3, #14
 3103 15d2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3104 15d4 07F13003 		add	r3, r7, #48
 3105 15d8 1C3B     		subs	r3, r3, #28
 3106 15da 0B44     		add	r3, r3, r1
 3107 15dc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3108 15de 07F17003 		add	r3, r7, #112
 3109 15e2 1C3B     		subs	r3, r3, #28
 3110 15e4 9954     		strb	r1, [r3, r2]
 539:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3111              		.loc 1 539 0 discriminator 3
 3112 15e6 07F5B853 		add	r3, r7, #5888
 3113 15ea 03F10E03 		add	r3, r3, #14
 3114 15ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 82


 3115 15f0 0133     		adds	r3, r3, #1
 3116 15f2 07F5B852 		add	r2, r7, #5888
 3117 15f6 02F10E02 		add	r2, r2, #14
 3118 15fa 1370     		strb	r3, [r2]
 3119              	.L146:
 539:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3120              		.loc 1 539 0 is_stmt 0 discriminator 1
 3121 15fc 07F5B853 		add	r3, r7, #5888
 3122 1600 03F10E03 		add	r3, r3, #14
 3123 1604 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3124 1606 07F5B853 		add	r3, r7, #5888
 3125 160a 03F10B03 		add	r3, r3, #11
 3126 160e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3127 1610 9A42     		cmp	r2, r3
 3128 1612 C4D3     		bcc	.L147
 541:..\src/command_processing.c ****                         }
 542:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.motor[MO
 3129              		.loc 1 542 0 is_stmt 1
 3130 1614 07F5B853 		add	r3, r7, #5888
 3131 1618 03F10703 		add	r3, r3, #7
 3132 161c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3133 161e 4D49     		ldr	r1, .L278+4
 3134 1620 1346     		mov	r3, r2
 3135 1622 DB00     		lsls	r3, r3, #3
 3136 1624 9B1A     		subs	r3, r3, r2
 3137 1626 1B01     		lsls	r3, r3, #4
 3138 1628 0B44     		add	r3, r3, r1
 3139 162a E833     		adds	r3, r3, #232
 3140 162c 1968     		ldr	r1, [r3]
 3141 162e 07F5B853 		add	r3, r7, #5888
 3142 1632 03F10703 		add	r3, r3, #7
 3143 1636 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3144 1638 4548     		ldr	r0, .L278
 3145 163a 1346     		mov	r3, r2
 3146 163c DB00     		lsls	r3, r3, #3
 3147 163e 9B1A     		subs	r3, r3, r2
 3148 1640 1B01     		lsls	r3, r3, #4
 3149 1642 0344     		add	r3, r3, r0
 3150 1644 03F58873 		add	r3, r3, #272
 3151 1648 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3152 164a 1846     		mov	r0, r3
 3153 164c 414A     		ldr	r2, .L278+4
 3154 164e 0346     		mov	r3, r0
 3155 1650 5B00     		lsls	r3, r3, #1
 3156 1652 0344     		add	r3, r3, r0
 3157 1654 1B01     		lsls	r3, r3, #4
 3158 1656 1344     		add	r3, r3, r2
 3159 1658 03F29513 		addw	r3, r3, #405
 3160 165c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3161 165e 41FA03F2 		asr	r2, r1, r3
 3162 1662 07F13003 		add	r3, r7, #48
 3163 1666 1C3B     		subs	r3, r3, #28
 3164 1668 1A60     		str	r2, [r3]
 543:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3165              		.loc 1 543 0
 3166 166a 0023     		movs	r3, #0
 3167 166c 07F5B852 		add	r2, r7, #5888
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 83


 3168 1670 02F10E02 		add	r2, r2, #14
 3169 1674 1370     		strb	r3, [r2]
 3170 1676 34E0     		b	.L148
 3171              	.L149:
 544:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 3172              		.loc 1 544 0 discriminator 3
 3173 1678 07F5B853 		add	r3, r7, #5888
 3174 167c 03F10D03 		add	r3, r3, #13
 3175 1680 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3176 1682 3222     		movs	r2, #50
 3177 1684 02FB03F3 		mul	r3, r2, r3
 3178 1688 1A1D     		adds	r2, r3, #4
 3179 168a 07F5B853 		add	r3, r7, #5888
 3180 168e 03F10B03 		add	r3, r3, #11
 3181 1692 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3182 1694 1A44     		add	r2, r2, r3
 3183 1696 07F5B853 		add	r3, r7, #5888
 3184 169a 03F10B03 		add	r3, r3, #11
 3185 169e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3186 16a0 1A44     		add	r2, r2, r3
 3187 16a2 07F5B853 		add	r3, r7, #5888
 3188 16a6 03F10E03 		add	r3, r3, #14
 3189 16aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3190 16ac D31A     		subs	r3, r2, r3
 3191 16ae 5A1E     		subs	r2, r3, #1
 3192 16b0 07F5B853 		add	r3, r7, #5888
 3193 16b4 03F10E03 		add	r3, r3, #14
 3194 16b8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3195 16ba 07F13003 		add	r3, r7, #48
 3196 16be 1C3B     		subs	r3, r3, #28
 3197 16c0 0B44     		add	r3, r3, r1
 3198 16c2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3199 16c4 07F17003 		add	r3, r7, #112
 3200 16c8 1C3B     		subs	r3, r3, #28
 3201 16ca 9954     		strb	r1, [r3, r2]
 543:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3202              		.loc 1 543 0 discriminator 3
 3203 16cc 07F5B853 		add	r3, r7, #5888
 3204 16d0 03F10E03 		add	r3, r3, #14
 3205 16d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3206 16d6 0133     		adds	r3, r3, #1
 3207 16d8 07F5B852 		add	r2, r7, #5888
 3208 16dc 02F10E02 		add	r2, r2, #14
 3209 16e0 1370     		strb	r3, [r2]
 3210              	.L148:
 543:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3211              		.loc 1 543 0 is_stmt 0 discriminator 1
 3212 16e2 07F5B853 		add	r3, r7, #5888
 3213 16e6 03F10E03 		add	r3, r3, #14
 3214 16ea 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3215 16ec 07F5B853 		add	r3, r7, #5888
 3216 16f0 03F10B03 		add	r3, r3, #11
 3217 16f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3218 16f6 9A42     		cmp	r2, r3
 3219 16f8 BED3     		bcc	.L149
 545:..\src/command_processing.c ****                         }
 546:..\src/command_processing.c ****                         break;            
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 84


 3220              		.loc 1 546 0 is_stmt 1
 3221 16fa 00F0AEBE 		b	.L104
 3222              	.L111:
 547:..\src/command_processing.c **** 
 548:..\src/command_processing.c ****                     case 23:        //Rest Position
 549:..\src/command_processing.c ****                         aux_int32 = (c_mem.SH.rest_pos >> c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_
 3223              		.loc 1 549 0
 3224 16fe 154B     		ldr	r3, .L278+4
 3225 1700 D3F8A012 		ldr	r1, [r3, #672]
 3226 1704 07F5B853 		add	r3, r7, #5888
 3227 1708 03F10703 		add	r3, r3, #7
 3228 170c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3229 170e 1048     		ldr	r0, .L278
 3230 1710 1346     		mov	r3, r2
 3231 1712 DB00     		lsls	r3, r3, #3
 3232 1714 9B1A     		subs	r3, r3, r2
 3233 1716 1B01     		lsls	r3, r3, #4
 3234 1718 0344     		add	r3, r3, r0
 3235 171a 03F58873 		add	r3, r3, #272
 3236 171e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3237 1720 1846     		mov	r0, r3
 3238 1722 0C4A     		ldr	r2, .L278+4
 3239 1724 0346     		mov	r3, r0
 3240 1726 5B00     		lsls	r3, r3, #1
 3241 1728 0344     		add	r3, r3, r0
 3242 172a 1B01     		lsls	r3, r3, #4
 3243 172c 1344     		add	r3, r3, r2
 3244 172e 03F29513 		addw	r3, r3, #405
 3245 1732 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3246 1734 41FA03F2 		asr	r2, r1, r3
 3247 1738 07F13003 		add	r3, r7, #48
 3248 173c 1C3B     		subs	r3, r3, #28
 3249 173e 1A60     		str	r2, [r3]
 550:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3250              		.loc 1 550 0
 3251 1740 0023     		movs	r3, #0
 3252 1742 07F5B852 		add	r2, r7, #5888
 3253 1746 02F10E02 		add	r2, r2, #14
 3254 174a 1370     		strb	r3, [r2]
 3255 174c 33E0     		b	.L150
 3256              	.L279:
 3257 174e 00BF     		.align	2
 3258              	.L278:
 3259 1750 00000000 		.word	g_mem
 3260 1754 00000000 		.word	c_mem
 3261              	.L151:
 551:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 3262              		.loc 1 551 0 discriminator 3
 3263 1758 07F5B853 		add	r3, r7, #5888
 3264 175c 03F10D03 		add	r3, r3, #13
 3265 1760 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3266 1762 3222     		movs	r2, #50
 3267 1764 02FB03F3 		mul	r3, r2, r3
 3268 1768 1A1D     		adds	r2, r3, #4
 3269 176a 07F5B853 		add	r3, r7, #5888
 3270 176e 03F10B03 		add	r3, r3, #11
 3271 1772 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 85


 3272 1774 1A44     		add	r2, r2, r3
 3273 1776 07F5B853 		add	r3, r7, #5888
 3274 177a 03F10E03 		add	r3, r3, #14
 3275 177e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3276 1780 D31A     		subs	r3, r2, r3
 3277 1782 5A1E     		subs	r2, r3, #1
 3278 1784 07F5B853 		add	r3, r7, #5888
 3279 1788 03F10E03 		add	r3, r3, #14
 3280 178c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3281 178e 07F13003 		add	r3, r7, #48
 3282 1792 1C3B     		subs	r3, r3, #28
 3283 1794 0B44     		add	r3, r3, r1
 3284 1796 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3285 1798 07F17003 		add	r3, r7, #112
 3286 179c 1C3B     		subs	r3, r3, #28
 3287 179e 9954     		strb	r1, [r3, r2]
 550:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3288              		.loc 1 550 0 discriminator 3
 3289 17a0 07F5B853 		add	r3, r7, #5888
 3290 17a4 03F10E03 		add	r3, r3, #14
 3291 17a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3292 17aa 0133     		adds	r3, r3, #1
 3293 17ac 07F5B852 		add	r2, r7, #5888
 3294 17b0 02F10E02 		add	r2, r2, #14
 3295 17b4 1370     		strb	r3, [r2]
 3296              	.L150:
 550:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3297              		.loc 1 550 0 is_stmt 0 discriminator 1
 3298 17b6 07F5B853 		add	r3, r7, #5888
 3299 17ba 03F10E03 		add	r3, r3, #14
 3300 17be 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3301 17c0 07F5B853 		add	r3, r7, #5888
 3302 17c4 03F10B03 		add	r3, r3, #11
 3303 17c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3304 17ca 9A42     		cmp	r2, r3
 3305 17cc C4D3     		bcc	.L151
 552:..\src/command_processing.c ****                         }
 553:..\src/command_processing.c ****                         break; 
 3306              		.loc 1 553 0 is_stmt 1
 3307 17ce 00F044BE 		b	.L104
 3308              	.L112:
 554:..\src/command_processing.c ****                         
 555:..\src/command_processing.c ****                     case 44:         // Second Motor Position PID
 556:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 3309              		.loc 1 556 0
 3310 17d2 07F5B853 		add	r3, r7, #5888
 3311 17d6 03F10603 		add	r3, r3, #6
 3312 17da 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3313 17dc AB49     		ldr	r1, .L280
 3314 17de 1346     		mov	r3, r2
 3315 17e0 DB00     		lsls	r3, r3, #3
 3316 17e2 9B1A     		subs	r3, r3, r2
 3317 17e4 1B01     		lsls	r3, r3, #4
 3318 17e6 0B44     		add	r3, r3, r1
 3319 17e8 03F20F13 		addw	r3, r3, #271
 3320 17ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3321 17ee 032B     		cmp	r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 86


 3322 17f0 00F02981 		beq	.L152
 557:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p / 65536;
 3323              		.loc 1 557 0
 3324 17f4 07F5B853 		add	r3, r7, #5888
 3325 17f8 03F10603 		add	r3, r3, #6
 3326 17fc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3327 17fe A349     		ldr	r1, .L280
 3328 1800 1346     		mov	r3, r2
 3329 1802 DB00     		lsls	r3, r3, #3
 3330 1804 9B1A     		subs	r3, r3, r2
 3331 1806 1B01     		lsls	r3, r3, #4
 3332 1808 0B44     		add	r3, r3, r1
 3333 180a B033     		adds	r3, r3, #176
 3334 180c 1B68     		ldr	r3, [r3]
 3335 180e 1846     		mov	r0, r3
 3336 1810 FFF7FEFF 		bl	__aeabi_i2f
 3337 1814 0346     		mov	r3, r0
 3338 1816 4FF08F41 		mov	r1, #1199570944
 3339 181a 1846     		mov	r0, r3
 3340 181c FFF7FEFF 		bl	__aeabi_fdiv
 3341 1820 0346     		mov	r3, r0
 3342 1822 1A46     		mov	r2, r3
 3343 1824 07F13003 		add	r3, r7, #48
 3344 1828 143B     		subs	r3, r3, #20
 3345 182a 1A60     		str	r2, [r3]	@ float
 558:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3346              		.loc 1 558 0
 3347 182c 0023     		movs	r3, #0
 3348 182e 07F5B852 		add	r2, r7, #5888
 3349 1832 02F10F02 		add	r2, r2, #15
 3350 1836 1370     		strb	r3, [r2]
 3351 1838 2EE0     		b	.L153
 3352              	.L154:
 559:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3353              		.loc 1 559 0 discriminator 3
 3354 183a 07F5B853 		add	r3, r7, #5888
 3355 183e 03F10D03 		add	r3, r3, #13
 3356 1842 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3357 1844 3222     		movs	r2, #50
 3358 1846 02FB03F3 		mul	r3, r2, r3
 3359 184a 1A1D     		adds	r2, r3, #4
 3360 184c 07F5B853 		add	r3, r7, #5888
 3361 1850 03F10B03 		add	r3, r3, #11
 3362 1854 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3363 1856 1A44     		add	r2, r2, r3
 3364 1858 07F5B853 		add	r3, r7, #5888
 3365 185c 03F10F03 		add	r3, r3, #15
 3366 1860 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3367 1862 D31A     		subs	r3, r2, r3
 3368 1864 5A1E     		subs	r2, r3, #1
 3369 1866 07F5B853 		add	r3, r7, #5888
 3370 186a 03F10F03 		add	r3, r3, #15
 3371 186e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3372 1870 07F13003 		add	r3, r7, #48
 3373 1874 143B     		subs	r3, r3, #20
 3374 1876 0B44     		add	r3, r3, r1
 3375 1878 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 87


 3376 187a 07F17003 		add	r3, r7, #112
 3377 187e 1C3B     		subs	r3, r3, #28
 3378 1880 9954     		strb	r1, [r3, r2]
 558:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3379              		.loc 1 558 0 discriminator 3
 3380 1882 07F5B853 		add	r3, r7, #5888
 3381 1886 03F10F03 		add	r3, r3, #15
 3382 188a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3383 188c 0133     		adds	r3, r3, #1
 3384 188e 07F5B852 		add	r2, r7, #5888
 3385 1892 02F10F02 		add	r2, r2, #15
 3386 1896 1370     		strb	r3, [r2]
 3387              	.L153:
 558:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3388              		.loc 1 558 0 is_stmt 0 discriminator 1
 3389 1898 07F5B853 		add	r3, r7, #5888
 3390 189c 03F10F03 		add	r3, r3, #15
 3391 18a0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3392 18a2 07F5B853 		add	r3, r7, #5888
 3393 18a6 03F10B03 		add	r3, r3, #11
 3394 18aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3395 18ac 9A42     		cmp	r2, r3
 3396 18ae C4D3     		bcc	.L154
 560:..\src/command_processing.c ****                             }
 561:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i / 65536;
 3397              		.loc 1 561 0 is_stmt 1
 3398 18b0 07F5B853 		add	r3, r7, #5888
 3399 18b4 03F10603 		add	r3, r3, #6
 3400 18b8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3401 18ba 7449     		ldr	r1, .L280
 3402 18bc 1346     		mov	r3, r2
 3403 18be DB00     		lsls	r3, r3, #3
 3404 18c0 9B1A     		subs	r3, r3, r2
 3405 18c2 1B01     		lsls	r3, r3, #4
 3406 18c4 0B44     		add	r3, r3, r1
 3407 18c6 B433     		adds	r3, r3, #180
 3408 18c8 1B68     		ldr	r3, [r3]
 3409 18ca 1846     		mov	r0, r3
 3410 18cc FFF7FEFF 		bl	__aeabi_i2f
 3411 18d0 0346     		mov	r3, r0
 3412 18d2 4FF08F41 		mov	r1, #1199570944
 3413 18d6 1846     		mov	r0, r3
 3414 18d8 FFF7FEFF 		bl	__aeabi_fdiv
 3415 18dc 0346     		mov	r3, r0
 3416 18de 1A46     		mov	r2, r3
 3417 18e0 07F13003 		add	r3, r7, #48
 3418 18e4 143B     		subs	r3, r3, #20
 3419 18e6 1A60     		str	r2, [r3]	@ float
 562:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3420              		.loc 1 562 0
 3421 18e8 0023     		movs	r3, #0
 3422 18ea 07F5B852 		add	r2, r7, #5888
 3423 18ee 02F10F02 		add	r2, r2, #15
 3424 18f2 1370     		strb	r3, [r2]
 3425 18f4 34E0     		b	.L155
 3426              	.L156:
 563:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 88


 3427              		.loc 1 563 0 discriminator 3
 3428 18f6 07F5B853 		add	r3, r7, #5888
 3429 18fa 03F10D03 		add	r3, r3, #13
 3430 18fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3431 1900 3222     		movs	r2, #50
 3432 1902 02FB03F3 		mul	r3, r2, r3
 3433 1906 1A1D     		adds	r2, r3, #4
 3434 1908 07F5B853 		add	r3, r7, #5888
 3435 190c 03F10B03 		add	r3, r3, #11
 3436 1910 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3437 1912 1A44     		add	r2, r2, r3
 3438 1914 07F5B853 		add	r3, r7, #5888
 3439 1918 03F10B03 		add	r3, r3, #11
 3440 191c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3441 191e 1A44     		add	r2, r2, r3
 3442 1920 07F5B853 		add	r3, r7, #5888
 3443 1924 03F10F03 		add	r3, r3, #15
 3444 1928 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3445 192a D31A     		subs	r3, r2, r3
 3446 192c 5A1E     		subs	r2, r3, #1
 3447 192e 07F5B853 		add	r3, r7, #5888
 3448 1932 03F10F03 		add	r3, r3, #15
 3449 1936 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3450 1938 07F13003 		add	r3, r7, #48
 3451 193c 143B     		subs	r3, r3, #20
 3452 193e 0B44     		add	r3, r3, r1
 3453 1940 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3454 1942 07F17003 		add	r3, r7, #112
 3455 1946 1C3B     		subs	r3, r3, #28
 3456 1948 9954     		strb	r1, [r3, r2]
 562:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3457              		.loc 1 562 0 discriminator 3
 3458 194a 07F5B853 		add	r3, r7, #5888
 3459 194e 03F10F03 		add	r3, r3, #15
 3460 1952 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3461 1954 0133     		adds	r3, r3, #1
 3462 1956 07F5B852 		add	r2, r7, #5888
 3463 195a 02F10F02 		add	r2, r2, #15
 3464 195e 1370     		strb	r3, [r2]
 3465              	.L155:
 562:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3466              		.loc 1 562 0 is_stmt 0 discriminator 1
 3467 1960 07F5B853 		add	r3, r7, #5888
 3468 1964 03F10F03 		add	r3, r3, #15
 3469 1968 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3470 196a 07F5B853 		add	r3, r7, #5888
 3471 196e 03F10B03 		add	r3, r3, #11
 3472 1972 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3473 1974 9A42     		cmp	r2, r3
 3474 1976 BED3     		bcc	.L156
 564:..\src/command_processing.c ****                             }
 565:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d / 65536;
 3475              		.loc 1 565 0 is_stmt 1
 3476 1978 07F5B853 		add	r3, r7, #5888
 3477 197c 03F10603 		add	r3, r3, #6
 3478 1980 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3479 1982 4249     		ldr	r1, .L280
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 89


 3480 1984 1346     		mov	r3, r2
 3481 1986 DB00     		lsls	r3, r3, #3
 3482 1988 9B1A     		subs	r3, r3, r2
 3483 198a 1B01     		lsls	r3, r3, #4
 3484 198c 0B44     		add	r3, r3, r1
 3485 198e B833     		adds	r3, r3, #184
 3486 1990 1B68     		ldr	r3, [r3]
 3487 1992 1846     		mov	r0, r3
 3488 1994 FFF7FEFF 		bl	__aeabi_i2f
 3489 1998 0346     		mov	r3, r0
 3490 199a 4FF08F41 		mov	r1, #1199570944
 3491 199e 1846     		mov	r0, r3
 3492 19a0 FFF7FEFF 		bl	__aeabi_fdiv
 3493 19a4 0346     		mov	r3, r0
 3494 19a6 1A46     		mov	r2, r3
 3495 19a8 07F13003 		add	r3, r7, #48
 3496 19ac 143B     		subs	r3, r3, #20
 3497 19ae 1A60     		str	r2, [r3]	@ float
 566:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3498              		.loc 1 566 0
 3499 19b0 0023     		movs	r3, #0
 3500 19b2 07F5B852 		add	r2, r7, #5888
 3501 19b6 02F10F02 		add	r2, r2, #15
 3502 19ba 1370     		strb	r3, [r2]
 3503 19bc 35E0     		b	.L157
 3504              	.L158:
 567:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3505              		.loc 1 567 0 discriminator 3
 3506 19be 07F5B853 		add	r3, r7, #5888
 3507 19c2 03F10D03 		add	r3, r3, #13
 3508 19c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3509 19c8 3222     		movs	r2, #50
 3510 19ca 02FB03F3 		mul	r3, r2, r3
 3511 19ce 1A1D     		adds	r2, r3, #4
 3512 19d0 07F5B853 		add	r3, r7, #5888
 3513 19d4 03F10B03 		add	r3, r3, #11
 3514 19d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3515 19da 5B00     		lsls	r3, r3, #1
 3516 19dc 1A44     		add	r2, r2, r3
 3517 19de 07F5B853 		add	r3, r7, #5888
 3518 19e2 03F10B03 		add	r3, r3, #11
 3519 19e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3520 19e8 1A44     		add	r2, r2, r3
 3521 19ea 07F5B853 		add	r3, r7, #5888
 3522 19ee 03F10F03 		add	r3, r3, #15
 3523 19f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3524 19f4 D31A     		subs	r3, r2, r3
 3525 19f6 5A1E     		subs	r2, r3, #1
 3526 19f8 07F5B853 		add	r3, r7, #5888
 3527 19fc 03F10F03 		add	r3, r3, #15
 3528 1a00 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3529 1a02 07F13003 		add	r3, r7, #48
 3530 1a06 143B     		subs	r3, r3, #20
 3531 1a08 0B44     		add	r3, r3, r1
 3532 1a0a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3533 1a0c 07F17003 		add	r3, r7, #112
 3534 1a10 1C3B     		subs	r3, r3, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 90


 3535 1a12 9954     		strb	r1, [r3, r2]
 566:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3536              		.loc 1 566 0 discriminator 3
 3537 1a14 07F5B853 		add	r3, r7, #5888
 3538 1a18 03F10F03 		add	r3, r3, #15
 3539 1a1c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3540 1a1e 0133     		adds	r3, r3, #1
 3541 1a20 07F5B852 		add	r2, r7, #5888
 3542 1a24 02F10F02 		add	r2, r2, #15
 3543 1a28 1370     		strb	r3, [r2]
 3544              	.L157:
 566:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3545              		.loc 1 566 0 is_stmt 0 discriminator 1
 3546 1a2a 07F5B853 		add	r3, r7, #5888
 3547 1a2e 03F10F03 		add	r3, r3, #15
 3548 1a32 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3549 1a34 07F5B853 		add	r3, r7, #5888
 3550 1a38 03F10B03 		add	r3, r3, #11
 3551 1a3c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3552 1a3e 9A42     		cmp	r2, r3
 3553 1a40 BDD3     		bcc	.L158
 568:..\src/command_processing.c ****                             } 
 569:..\src/command_processing.c ****                         }
 570:..\src/command_processing.c ****                         else {
 571:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_dl / 65536;
 572:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 573:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 574:..\src/command_processing.c ****                             }
 575:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_dl / 65536;
 576:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 577:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 578:..\src/command_processing.c ****                             }
 579:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_dl / 65536;
 580:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 581:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 582:..\src/command_processing.c ****                             }
 583:..\src/command_processing.c ****                         }
 584:..\src/command_processing.c ****                         break;
 3554              		.loc 1 584 0 is_stmt 1
 3555 1a42 00F00ABD 		b	.L104
 3556              	.L152:
 571:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3557              		.loc 1 571 0
 3558 1a46 07F5B853 		add	r3, r7, #5888
 3559 1a4a 03F10603 		add	r3, r3, #6
 3560 1a4e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3561 1a50 0E49     		ldr	r1, .L280
 3562 1a52 1346     		mov	r3, r2
 3563 1a54 DB00     		lsls	r3, r3, #3
 3564 1a56 9B1A     		subs	r3, r3, r2
 3565 1a58 1B01     		lsls	r3, r3, #4
 3566 1a5a 0B44     		add	r3, r3, r1
 3567 1a5c C833     		adds	r3, r3, #200
 3568 1a5e 1B68     		ldr	r3, [r3]
 3569 1a60 1846     		mov	r0, r3
 3570 1a62 FFF7FEFF 		bl	__aeabi_i2f
 3571 1a66 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 91


 3572 1a68 4FF08F41 		mov	r1, #1199570944
 3573 1a6c 1846     		mov	r0, r3
 3574 1a6e FFF7FEFF 		bl	__aeabi_fdiv
 3575 1a72 0346     		mov	r3, r0
 3576 1a74 1A46     		mov	r2, r3
 3577 1a76 07F13003 		add	r3, r7, #48
 3578 1a7a 143B     		subs	r3, r3, #20
 3579 1a7c 1A60     		str	r2, [r3]	@ float
 572:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3580              		.loc 1 572 0
 3581 1a7e 0023     		movs	r3, #0
 3582 1a80 07F5B852 		add	r2, r7, #5888
 3583 1a84 02F10F02 		add	r2, r2, #15
 3584 1a88 1370     		strb	r3, [r2]
 3585 1a8a 30E0     		b	.L160
 3586              	.L281:
 3587              		.align	2
 3588              	.L280:
 3589 1a8c 00000000 		.word	c_mem
 3590              	.L161:
 573:..\src/command_processing.c ****                             }
 3591              		.loc 1 573 0 discriminator 3
 3592 1a90 07F5B853 		add	r3, r7, #5888
 3593 1a94 03F10D03 		add	r3, r3, #13
 3594 1a98 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3595 1a9a 3222     		movs	r2, #50
 3596 1a9c 02FB03F3 		mul	r3, r2, r3
 3597 1aa0 1A1D     		adds	r2, r3, #4
 3598 1aa2 07F5B853 		add	r3, r7, #5888
 3599 1aa6 03F10B03 		add	r3, r3, #11
 3600 1aaa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3601 1aac 1A44     		add	r2, r2, r3
 3602 1aae 07F5B853 		add	r3, r7, #5888
 3603 1ab2 03F10F03 		add	r3, r3, #15
 3604 1ab6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3605 1ab8 D31A     		subs	r3, r2, r3
 3606 1aba 5A1E     		subs	r2, r3, #1
 3607 1abc 07F5B853 		add	r3, r7, #5888
 3608 1ac0 03F10F03 		add	r3, r3, #15
 3609 1ac4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3610 1ac6 07F13003 		add	r3, r7, #48
 3611 1aca 143B     		subs	r3, r3, #20
 3612 1acc 0B44     		add	r3, r3, r1
 3613 1ace 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3614 1ad0 07F17003 		add	r3, r7, #112
 3615 1ad4 1C3B     		subs	r3, r3, #28
 3616 1ad6 9954     		strb	r1, [r3, r2]
 572:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3617              		.loc 1 572 0 discriminator 3
 3618 1ad8 07F5B853 		add	r3, r7, #5888
 3619 1adc 03F10F03 		add	r3, r3, #15
 3620 1ae0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3621 1ae2 0133     		adds	r3, r3, #1
 3622 1ae4 07F5B852 		add	r2, r7, #5888
 3623 1ae8 02F10F02 		add	r2, r2, #15
 3624 1aec 1370     		strb	r3, [r2]
 3625              	.L160:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 92


 572:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3626              		.loc 1 572 0 is_stmt 0 discriminator 1
 3627 1aee 07F5B853 		add	r3, r7, #5888
 3628 1af2 03F10F03 		add	r3, r3, #15
 3629 1af6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3630 1af8 07F5B853 		add	r3, r7, #5888
 3631 1afc 03F10B03 		add	r3, r3, #11
 3632 1b00 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3633 1b02 9A42     		cmp	r2, r3
 3634 1b04 C4D3     		bcc	.L161
 575:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3635              		.loc 1 575 0 is_stmt 1
 3636 1b06 07F5B853 		add	r3, r7, #5888
 3637 1b0a 03F10603 		add	r3, r3, #6
 3638 1b0e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3639 1b10 AB49     		ldr	r1, .L282
 3640 1b12 1346     		mov	r3, r2
 3641 1b14 DB00     		lsls	r3, r3, #3
 3642 1b16 9B1A     		subs	r3, r3, r2
 3643 1b18 1B01     		lsls	r3, r3, #4
 3644 1b1a 0B44     		add	r3, r3, r1
 3645 1b1c CC33     		adds	r3, r3, #204
 3646 1b1e 1B68     		ldr	r3, [r3]
 3647 1b20 1846     		mov	r0, r3
 3648 1b22 FFF7FEFF 		bl	__aeabi_i2f
 3649 1b26 0346     		mov	r3, r0
 3650 1b28 4FF08F41 		mov	r1, #1199570944
 3651 1b2c 1846     		mov	r0, r3
 3652 1b2e FFF7FEFF 		bl	__aeabi_fdiv
 3653 1b32 0346     		mov	r3, r0
 3654 1b34 1A46     		mov	r2, r3
 3655 1b36 07F13003 		add	r3, r7, #48
 3656 1b3a 143B     		subs	r3, r3, #20
 3657 1b3c 1A60     		str	r2, [r3]	@ float
 576:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3658              		.loc 1 576 0
 3659 1b3e 0023     		movs	r3, #0
 3660 1b40 07F5B852 		add	r2, r7, #5888
 3661 1b44 02F10F02 		add	r2, r2, #15
 3662 1b48 1370     		strb	r3, [r2]
 3663 1b4a 34E0     		b	.L162
 3664              	.L163:
 577:..\src/command_processing.c ****                             }
 3665              		.loc 1 577 0 discriminator 3
 3666 1b4c 07F5B853 		add	r3, r7, #5888
 3667 1b50 03F10D03 		add	r3, r3, #13
 3668 1b54 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3669 1b56 3222     		movs	r2, #50
 3670 1b58 02FB03F3 		mul	r3, r2, r3
 3671 1b5c 1A1D     		adds	r2, r3, #4
 3672 1b5e 07F5B853 		add	r3, r7, #5888
 3673 1b62 03F10B03 		add	r3, r3, #11
 3674 1b66 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3675 1b68 1A44     		add	r2, r2, r3
 3676 1b6a 07F5B853 		add	r3, r7, #5888
 3677 1b6e 03F10B03 		add	r3, r3, #11
 3678 1b72 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 93


 3679 1b74 1A44     		add	r2, r2, r3
 3680 1b76 07F5B853 		add	r3, r7, #5888
 3681 1b7a 03F10F03 		add	r3, r3, #15
 3682 1b7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3683 1b80 D31A     		subs	r3, r2, r3
 3684 1b82 5A1E     		subs	r2, r3, #1
 3685 1b84 07F5B853 		add	r3, r7, #5888
 3686 1b88 03F10F03 		add	r3, r3, #15
 3687 1b8c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3688 1b8e 07F13003 		add	r3, r7, #48
 3689 1b92 143B     		subs	r3, r3, #20
 3690 1b94 0B44     		add	r3, r3, r1
 3691 1b96 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3692 1b98 07F17003 		add	r3, r7, #112
 3693 1b9c 1C3B     		subs	r3, r3, #28
 3694 1b9e 9954     		strb	r1, [r3, r2]
 576:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3695              		.loc 1 576 0 discriminator 3
 3696 1ba0 07F5B853 		add	r3, r7, #5888
 3697 1ba4 03F10F03 		add	r3, r3, #15
 3698 1ba8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3699 1baa 0133     		adds	r3, r3, #1
 3700 1bac 07F5B852 		add	r2, r7, #5888
 3701 1bb0 02F10F02 		add	r2, r2, #15
 3702 1bb4 1370     		strb	r3, [r2]
 3703              	.L162:
 576:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3704              		.loc 1 576 0 is_stmt 0 discriminator 1
 3705 1bb6 07F5B853 		add	r3, r7, #5888
 3706 1bba 03F10F03 		add	r3, r3, #15
 3707 1bbe 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3708 1bc0 07F5B853 		add	r3, r7, #5888
 3709 1bc4 03F10B03 		add	r3, r3, #11
 3710 1bc8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3711 1bca 9A42     		cmp	r2, r3
 3712 1bcc BED3     		bcc	.L163
 579:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3713              		.loc 1 579 0 is_stmt 1
 3714 1bce 07F5B853 		add	r3, r7, #5888
 3715 1bd2 03F10603 		add	r3, r3, #6
 3716 1bd6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3717 1bd8 7949     		ldr	r1, .L282
 3718 1bda 1346     		mov	r3, r2
 3719 1bdc DB00     		lsls	r3, r3, #3
 3720 1bde 9B1A     		subs	r3, r3, r2
 3721 1be0 1B01     		lsls	r3, r3, #4
 3722 1be2 0B44     		add	r3, r3, r1
 3723 1be4 D033     		adds	r3, r3, #208
 3724 1be6 1B68     		ldr	r3, [r3]
 3725 1be8 1846     		mov	r0, r3
 3726 1bea FFF7FEFF 		bl	__aeabi_i2f
 3727 1bee 0346     		mov	r3, r0
 3728 1bf0 4FF08F41 		mov	r1, #1199570944
 3729 1bf4 1846     		mov	r0, r3
 3730 1bf6 FFF7FEFF 		bl	__aeabi_fdiv
 3731 1bfa 0346     		mov	r3, r0
 3732 1bfc 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 94


 3733 1bfe 07F13003 		add	r3, r7, #48
 3734 1c02 143B     		subs	r3, r3, #20
 3735 1c04 1A60     		str	r2, [r3]	@ float
 580:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3736              		.loc 1 580 0
 3737 1c06 0023     		movs	r3, #0
 3738 1c08 07F5B852 		add	r2, r7, #5888
 3739 1c0c 02F10F02 		add	r2, r2, #15
 3740 1c10 1370     		strb	r3, [r2]
 3741 1c12 35E0     		b	.L164
 3742              	.L165:
 581:..\src/command_processing.c ****                             }
 3743              		.loc 1 581 0 discriminator 3
 3744 1c14 07F5B853 		add	r3, r7, #5888
 3745 1c18 03F10D03 		add	r3, r3, #13
 3746 1c1c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3747 1c1e 3222     		movs	r2, #50
 3748 1c20 02FB03F3 		mul	r3, r2, r3
 3749 1c24 1A1D     		adds	r2, r3, #4
 3750 1c26 07F5B853 		add	r3, r7, #5888
 3751 1c2a 03F10B03 		add	r3, r3, #11
 3752 1c2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3753 1c30 5B00     		lsls	r3, r3, #1
 3754 1c32 1A44     		add	r2, r2, r3
 3755 1c34 07F5B853 		add	r3, r7, #5888
 3756 1c38 03F10B03 		add	r3, r3, #11
 3757 1c3c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3758 1c3e 1A44     		add	r2, r2, r3
 3759 1c40 07F5B853 		add	r3, r7, #5888
 3760 1c44 03F10F03 		add	r3, r3, #15
 3761 1c48 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3762 1c4a D31A     		subs	r3, r2, r3
 3763 1c4c 5A1E     		subs	r2, r3, #1
 3764 1c4e 07F5B853 		add	r3, r7, #5888
 3765 1c52 03F10F03 		add	r3, r3, #15
 3766 1c56 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3767 1c58 07F13003 		add	r3, r7, #48
 3768 1c5c 143B     		subs	r3, r3, #20
 3769 1c5e 0B44     		add	r3, r3, r1
 3770 1c60 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3771 1c62 07F17003 		add	r3, r7, #112
 3772 1c66 1C3B     		subs	r3, r3, #28
 3773 1c68 9954     		strb	r1, [r3, r2]
 580:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3774              		.loc 1 580 0 discriminator 3
 3775 1c6a 07F5B853 		add	r3, r7, #5888
 3776 1c6e 03F10F03 		add	r3, r3, #15
 3777 1c72 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3778 1c74 0133     		adds	r3, r3, #1
 3779 1c76 07F5B852 		add	r2, r7, #5888
 3780 1c7a 02F10F02 		add	r2, r2, #15
 3781 1c7e 1370     		strb	r3, [r2]
 3782              	.L164:
 580:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3783              		.loc 1 580 0 is_stmt 0 discriminator 1
 3784 1c80 07F5B853 		add	r3, r7, #5888
 3785 1c84 03F10F03 		add	r3, r3, #15
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 95


 3786 1c88 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3787 1c8a 07F5B853 		add	r3, r7, #5888
 3788 1c8e 03F10B03 		add	r3, r3, #11
 3789 1c92 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3790 1c94 9A42     		cmp	r2, r3
 3791 1c96 BDD3     		bcc	.L165
 3792              		.loc 1 584 0 is_stmt 1
 3793 1c98 DFE3     		b	.L104
 3794              	.L113:
 585:..\src/command_processing.c ****                         
 586:..\src/command_processing.c ****                     case 45:         // Second Motor Current PID
 587:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 3795              		.loc 1 587 0
 3796 1c9a 07F5B853 		add	r3, r7, #5888
 3797 1c9e 03F10603 		add	r3, r3, #6
 3798 1ca2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3799 1ca4 4649     		ldr	r1, .L282
 3800 1ca6 1346     		mov	r3, r2
 3801 1ca8 DB00     		lsls	r3, r3, #3
 3802 1caa 9B1A     		subs	r3, r3, r2
 3803 1cac 1B01     		lsls	r3, r3, #4
 3804 1cae 0B44     		add	r3, r3, r1
 3805 1cb0 03F20F13 		addw	r3, r3, #271
 3806 1cb4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3807 1cb6 032B     		cmp	r3, #3
 3808 1cb8 00F02B81 		beq	.L166
 588:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c / 65536;
 3809              		.loc 1 588 0
 3810 1cbc 07F5B853 		add	r3, r7, #5888
 3811 1cc0 03F10603 		add	r3, r3, #6
 3812 1cc4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3813 1cc6 3E49     		ldr	r1, .L282
 3814 1cc8 1346     		mov	r3, r2
 3815 1cca DB00     		lsls	r3, r3, #3
 3816 1ccc 9B1A     		subs	r3, r3, r2
 3817 1cce 1B01     		lsls	r3, r3, #4
 3818 1cd0 0B44     		add	r3, r3, r1
 3819 1cd2 BC33     		adds	r3, r3, #188
 3820 1cd4 1B68     		ldr	r3, [r3]
 3821 1cd6 1846     		mov	r0, r3
 3822 1cd8 FFF7FEFF 		bl	__aeabi_i2f
 3823 1cdc 0346     		mov	r3, r0
 3824 1cde 4FF08F41 		mov	r1, #1199570944
 3825 1ce2 1846     		mov	r0, r3
 3826 1ce4 FFF7FEFF 		bl	__aeabi_fdiv
 3827 1ce8 0346     		mov	r3, r0
 3828 1cea 1A46     		mov	r2, r3
 3829 1cec 07F13003 		add	r3, r7, #48
 3830 1cf0 143B     		subs	r3, r3, #20
 3831 1cf2 1A60     		str	r2, [r3]	@ float
 589:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3832              		.loc 1 589 0
 3833 1cf4 0023     		movs	r3, #0
 3834 1cf6 07F5B852 		add	r2, r7, #5888
 3835 1cfa 02F10F02 		add	r2, r2, #15
 3836 1cfe 1370     		strb	r3, [r2]
 3837 1d00 2EE0     		b	.L167
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 96


 3838              	.L168:
 590:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3839              		.loc 1 590 0 discriminator 3
 3840 1d02 07F5B853 		add	r3, r7, #5888
 3841 1d06 03F10D03 		add	r3, r3, #13
 3842 1d0a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3843 1d0c 3222     		movs	r2, #50
 3844 1d0e 02FB03F3 		mul	r3, r2, r3
 3845 1d12 1A1D     		adds	r2, r3, #4
 3846 1d14 07F5B853 		add	r3, r7, #5888
 3847 1d18 03F10B03 		add	r3, r3, #11
 3848 1d1c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3849 1d1e 1A44     		add	r2, r2, r3
 3850 1d20 07F5B853 		add	r3, r7, #5888
 3851 1d24 03F10F03 		add	r3, r3, #15
 3852 1d28 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3853 1d2a D31A     		subs	r3, r2, r3
 3854 1d2c 5A1E     		subs	r2, r3, #1
 3855 1d2e 07F5B853 		add	r3, r7, #5888
 3856 1d32 03F10F03 		add	r3, r3, #15
 3857 1d36 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3858 1d38 07F13003 		add	r3, r7, #48
 3859 1d3c 143B     		subs	r3, r3, #20
 3860 1d3e 0B44     		add	r3, r3, r1
 3861 1d40 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3862 1d42 07F17003 		add	r3, r7, #112
 3863 1d46 1C3B     		subs	r3, r3, #28
 3864 1d48 9954     		strb	r1, [r3, r2]
 589:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3865              		.loc 1 589 0 discriminator 3
 3866 1d4a 07F5B853 		add	r3, r7, #5888
 3867 1d4e 03F10F03 		add	r3, r3, #15
 3868 1d52 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3869 1d54 0133     		adds	r3, r3, #1
 3870 1d56 07F5B852 		add	r2, r7, #5888
 3871 1d5a 02F10F02 		add	r2, r2, #15
 3872 1d5e 1370     		strb	r3, [r2]
 3873              	.L167:
 589:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3874              		.loc 1 589 0 is_stmt 0 discriminator 1
 3875 1d60 07F5B853 		add	r3, r7, #5888
 3876 1d64 03F10F03 		add	r3, r3, #15
 3877 1d68 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3878 1d6a 07F5B853 		add	r3, r7, #5888
 3879 1d6e 03F10B03 		add	r3, r3, #11
 3880 1d72 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3881 1d74 9A42     		cmp	r2, r3
 3882 1d76 C4D3     		bcc	.L168
 591:..\src/command_processing.c ****                             }
 592:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c / 65536;
 3883              		.loc 1 592 0 is_stmt 1
 3884 1d78 07F5B853 		add	r3, r7, #5888
 3885 1d7c 03F10603 		add	r3, r3, #6
 3886 1d80 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3887 1d82 0F49     		ldr	r1, .L282
 3888 1d84 1346     		mov	r3, r2
 3889 1d86 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 97


 3890 1d88 9B1A     		subs	r3, r3, r2
 3891 1d8a 1B01     		lsls	r3, r3, #4
 3892 1d8c 0B44     		add	r3, r3, r1
 3893 1d8e C033     		adds	r3, r3, #192
 3894 1d90 1B68     		ldr	r3, [r3]
 3895 1d92 1846     		mov	r0, r3
 3896 1d94 FFF7FEFF 		bl	__aeabi_i2f
 3897 1d98 0346     		mov	r3, r0
 3898 1d9a 4FF08F41 		mov	r1, #1199570944
 3899 1d9e 1846     		mov	r0, r3
 3900 1da0 FFF7FEFF 		bl	__aeabi_fdiv
 3901 1da4 0346     		mov	r3, r0
 3902 1da6 1A46     		mov	r2, r3
 3903 1da8 07F13003 		add	r3, r7, #48
 3904 1dac 143B     		subs	r3, r3, #20
 3905 1dae 1A60     		str	r2, [r3]	@ float
 593:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3906              		.loc 1 593 0
 3907 1db0 0023     		movs	r3, #0
 3908 1db2 07F5B852 		add	r2, r7, #5888
 3909 1db6 02F10F02 		add	r2, r2, #15
 3910 1dba 1370     		strb	r3, [r2]
 3911 1dbc 37E0     		b	.L169
 3912              	.L283:
 3913 1dbe 00BF     		.align	2
 3914              	.L282:
 3915 1dc0 00000000 		.word	c_mem
 3916              	.L170:
 594:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3917              		.loc 1 594 0 discriminator 3
 3918 1dc4 07F5B853 		add	r3, r7, #5888
 3919 1dc8 03F10D03 		add	r3, r3, #13
 3920 1dcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3921 1dce 3222     		movs	r2, #50
 3922 1dd0 02FB03F3 		mul	r3, r2, r3
 3923 1dd4 1A1D     		adds	r2, r3, #4
 3924 1dd6 07F5B853 		add	r3, r7, #5888
 3925 1dda 03F10B03 		add	r3, r3, #11
 3926 1dde 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3927 1de0 1A44     		add	r2, r2, r3
 3928 1de2 07F5B853 		add	r3, r7, #5888
 3929 1de6 03F10B03 		add	r3, r3, #11
 3930 1dea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3931 1dec 1A44     		add	r2, r2, r3
 3932 1dee 07F5B853 		add	r3, r7, #5888
 3933 1df2 03F10F03 		add	r3, r3, #15
 3934 1df6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3935 1df8 D31A     		subs	r3, r2, r3
 3936 1dfa 5A1E     		subs	r2, r3, #1
 3937 1dfc 07F5B853 		add	r3, r7, #5888
 3938 1e00 03F10F03 		add	r3, r3, #15
 3939 1e04 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3940 1e06 07F13003 		add	r3, r7, #48
 3941 1e0a 143B     		subs	r3, r3, #20
 3942 1e0c 0B44     		add	r3, r3, r1
 3943 1e0e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3944 1e10 07F17003 		add	r3, r7, #112
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 98


 3945 1e14 1C3B     		subs	r3, r3, #28
 3946 1e16 9954     		strb	r1, [r3, r2]
 593:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3947              		.loc 1 593 0 discriminator 3
 3948 1e18 07F5B853 		add	r3, r7, #5888
 3949 1e1c 03F10F03 		add	r3, r3, #15
 3950 1e20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3951 1e22 0133     		adds	r3, r3, #1
 3952 1e24 07F5B852 		add	r2, r7, #5888
 3953 1e28 02F10F02 		add	r2, r2, #15
 3954 1e2c 1370     		strb	r3, [r2]
 3955              	.L169:
 593:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3956              		.loc 1 593 0 is_stmt 0 discriminator 1
 3957 1e2e 07F5B853 		add	r3, r7, #5888
 3958 1e32 03F10F03 		add	r3, r3, #15
 3959 1e36 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3960 1e38 07F5B853 		add	r3, r7, #5888
 3961 1e3c 03F10B03 		add	r3, r3, #11
 3962 1e40 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3963 1e42 9A42     		cmp	r2, r3
 3964 1e44 BED3     		bcc	.L170
 595:..\src/command_processing.c ****                             }
 596:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c / 65536;
 3965              		.loc 1 596 0 is_stmt 1
 3966 1e46 07F5B853 		add	r3, r7, #5888
 3967 1e4a 03F10603 		add	r3, r3, #6
 3968 1e4e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3969 1e50 C449     		ldr	r1, .L284
 3970 1e52 1346     		mov	r3, r2
 3971 1e54 DB00     		lsls	r3, r3, #3
 3972 1e56 9B1A     		subs	r3, r3, r2
 3973 1e58 1B01     		lsls	r3, r3, #4
 3974 1e5a 0B44     		add	r3, r3, r1
 3975 1e5c C433     		adds	r3, r3, #196
 3976 1e5e 1B68     		ldr	r3, [r3]
 3977 1e60 1846     		mov	r0, r3
 3978 1e62 FFF7FEFF 		bl	__aeabi_i2f
 3979 1e66 0346     		mov	r3, r0
 3980 1e68 4FF08F41 		mov	r1, #1199570944
 3981 1e6c 1846     		mov	r0, r3
 3982 1e6e FFF7FEFF 		bl	__aeabi_fdiv
 3983 1e72 0346     		mov	r3, r0
 3984 1e74 1A46     		mov	r2, r3
 3985 1e76 07F13003 		add	r3, r7, #48
 3986 1e7a 143B     		subs	r3, r3, #20
 3987 1e7c 1A60     		str	r2, [r3]	@ float
 597:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3988              		.loc 1 597 0
 3989 1e7e 0023     		movs	r3, #0
 3990 1e80 07F5B852 		add	r2, r7, #5888
 3991 1e84 02F10F02 		add	r2, r2, #15
 3992 1e88 1370     		strb	r3, [r2]
 3993 1e8a 35E0     		b	.L171
 3994              	.L172:
 598:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3995              		.loc 1 598 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 99


 3996 1e8c 07F5B853 		add	r3, r7, #5888
 3997 1e90 03F10D03 		add	r3, r3, #13
 3998 1e94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3999 1e96 3222     		movs	r2, #50
 4000 1e98 02FB03F3 		mul	r3, r2, r3
 4001 1e9c 1A1D     		adds	r2, r3, #4
 4002 1e9e 07F5B853 		add	r3, r7, #5888
 4003 1ea2 03F10B03 		add	r3, r3, #11
 4004 1ea6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4005 1ea8 5B00     		lsls	r3, r3, #1
 4006 1eaa 1A44     		add	r2, r2, r3
 4007 1eac 07F5B853 		add	r3, r7, #5888
 4008 1eb0 03F10B03 		add	r3, r3, #11
 4009 1eb4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4010 1eb6 1A44     		add	r2, r2, r3
 4011 1eb8 07F5B853 		add	r3, r7, #5888
 4012 1ebc 03F10F03 		add	r3, r3, #15
 4013 1ec0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4014 1ec2 D31A     		subs	r3, r2, r3
 4015 1ec4 5A1E     		subs	r2, r3, #1
 4016 1ec6 07F5B853 		add	r3, r7, #5888
 4017 1eca 03F10F03 		add	r3, r3, #15
 4018 1ece 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4019 1ed0 07F13003 		add	r3, r7, #48
 4020 1ed4 143B     		subs	r3, r3, #20
 4021 1ed6 0B44     		add	r3, r3, r1
 4022 1ed8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4023 1eda 07F17003 		add	r3, r7, #112
 4024 1ede 1C3B     		subs	r3, r3, #28
 4025 1ee0 9954     		strb	r1, [r3, r2]
 597:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4026              		.loc 1 597 0 discriminator 3
 4027 1ee2 07F5B853 		add	r3, r7, #5888
 4028 1ee6 03F10F03 		add	r3, r3, #15
 4029 1eea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4030 1eec 0133     		adds	r3, r3, #1
 4031 1eee 07F5B852 		add	r2, r7, #5888
 4032 1ef2 02F10F02 		add	r2, r2, #15
 4033 1ef6 1370     		strb	r3, [r2]
 4034              	.L171:
 597:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4035              		.loc 1 597 0 is_stmt 0 discriminator 1
 4036 1ef8 07F5B853 		add	r3, r7, #5888
 4037 1efc 03F10F03 		add	r3, r3, #15
 4038 1f00 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4039 1f02 07F5B853 		add	r3, r7, #5888
 4040 1f06 03F10B03 		add	r3, r3, #11
 4041 1f0a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4042 1f0c 9A42     		cmp	r2, r3
 4043 1f0e BDD3     		bcc	.L172
 599:..\src/command_processing.c ****                             }
 600:..\src/command_processing.c ****                         }
 601:..\src/command_processing.c ****                         else {
 602:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl / 65536;
 603:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 604:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 605:..\src/command_processing.c ****                             }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 100


 606:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl / 65536;
 607:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 608:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 609:..\src/command_processing.c ****                             }
 610:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl / 65536;
 611:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 612:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 613:..\src/command_processing.c ****                             }
 614:..\src/command_processing.c ****                         }            
 615:..\src/command_processing.c ****                         break;  
 4044              		.loc 1 615 0 is_stmt 1
 4045 1f10 A3E2     		b	.L104
 4046              	.L166:
 602:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4047              		.loc 1 602 0
 4048 1f12 07F5B853 		add	r3, r7, #5888
 4049 1f16 03F10603 		add	r3, r3, #6
 4050 1f1a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4051 1f1c 9149     		ldr	r1, .L284
 4052 1f1e 1346     		mov	r3, r2
 4053 1f20 DB00     		lsls	r3, r3, #3
 4054 1f22 9B1A     		subs	r3, r3, r2
 4055 1f24 1B01     		lsls	r3, r3, #4
 4056 1f26 0B44     		add	r3, r3, r1
 4057 1f28 D433     		adds	r3, r3, #212
 4058 1f2a 1B68     		ldr	r3, [r3]
 4059 1f2c 1846     		mov	r0, r3
 4060 1f2e FFF7FEFF 		bl	__aeabi_i2f
 4061 1f32 0346     		mov	r3, r0
 4062 1f34 4FF08F41 		mov	r1, #1199570944
 4063 1f38 1846     		mov	r0, r3
 4064 1f3a FFF7FEFF 		bl	__aeabi_fdiv
 4065 1f3e 0346     		mov	r3, r0
 4066 1f40 1A46     		mov	r2, r3
 4067 1f42 07F13003 		add	r3, r7, #48
 4068 1f46 143B     		subs	r3, r3, #20
 4069 1f48 1A60     		str	r2, [r3]	@ float
 603:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4070              		.loc 1 603 0
 4071 1f4a 0023     		movs	r3, #0
 4072 1f4c 07F5B852 		add	r2, r7, #5888
 4073 1f50 02F10F02 		add	r2, r2, #15
 4074 1f54 1370     		strb	r3, [r2]
 4075 1f56 2EE0     		b	.L174
 4076              	.L175:
 604:..\src/command_processing.c ****                             }
 4077              		.loc 1 604 0 discriminator 3
 4078 1f58 07F5B853 		add	r3, r7, #5888
 4079 1f5c 03F10D03 		add	r3, r3, #13
 4080 1f60 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4081 1f62 3222     		movs	r2, #50
 4082 1f64 02FB03F3 		mul	r3, r2, r3
 4083 1f68 1A1D     		adds	r2, r3, #4
 4084 1f6a 07F5B853 		add	r3, r7, #5888
 4085 1f6e 03F10B03 		add	r3, r3, #11
 4086 1f72 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4087 1f74 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 101


 4088 1f76 07F5B853 		add	r3, r7, #5888
 4089 1f7a 03F10F03 		add	r3, r3, #15
 4090 1f7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4091 1f80 D31A     		subs	r3, r2, r3
 4092 1f82 5A1E     		subs	r2, r3, #1
 4093 1f84 07F5B853 		add	r3, r7, #5888
 4094 1f88 03F10F03 		add	r3, r3, #15
 4095 1f8c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4096 1f8e 07F13003 		add	r3, r7, #48
 4097 1f92 143B     		subs	r3, r3, #20
 4098 1f94 0B44     		add	r3, r3, r1
 4099 1f96 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4100 1f98 07F17003 		add	r3, r7, #112
 4101 1f9c 1C3B     		subs	r3, r3, #28
 4102 1f9e 9954     		strb	r1, [r3, r2]
 603:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4103              		.loc 1 603 0 discriminator 3
 4104 1fa0 07F5B853 		add	r3, r7, #5888
 4105 1fa4 03F10F03 		add	r3, r3, #15
 4106 1fa8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4107 1faa 0133     		adds	r3, r3, #1
 4108 1fac 07F5B852 		add	r2, r7, #5888
 4109 1fb0 02F10F02 		add	r2, r2, #15
 4110 1fb4 1370     		strb	r3, [r2]
 4111              	.L174:
 603:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4112              		.loc 1 603 0 is_stmt 0 discriminator 1
 4113 1fb6 07F5B853 		add	r3, r7, #5888
 4114 1fba 03F10F03 		add	r3, r3, #15
 4115 1fbe 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4116 1fc0 07F5B853 		add	r3, r7, #5888
 4117 1fc4 03F10B03 		add	r3, r3, #11
 4118 1fc8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4119 1fca 9A42     		cmp	r2, r3
 4120 1fcc C4D3     		bcc	.L175
 606:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4121              		.loc 1 606 0 is_stmt 1
 4122 1fce 07F5B853 		add	r3, r7, #5888
 4123 1fd2 03F10603 		add	r3, r3, #6
 4124 1fd6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4125 1fd8 6249     		ldr	r1, .L284
 4126 1fda 1346     		mov	r3, r2
 4127 1fdc DB00     		lsls	r3, r3, #3
 4128 1fde 9B1A     		subs	r3, r3, r2
 4129 1fe0 1B01     		lsls	r3, r3, #4
 4130 1fe2 0B44     		add	r3, r3, r1
 4131 1fe4 D833     		adds	r3, r3, #216
 4132 1fe6 1B68     		ldr	r3, [r3]
 4133 1fe8 1846     		mov	r0, r3
 4134 1fea FFF7FEFF 		bl	__aeabi_i2f
 4135 1fee 0346     		mov	r3, r0
 4136 1ff0 4FF08F41 		mov	r1, #1199570944
 4137 1ff4 1846     		mov	r0, r3
 4138 1ff6 FFF7FEFF 		bl	__aeabi_fdiv
 4139 1ffa 0346     		mov	r3, r0
 4140 1ffc 1A46     		mov	r2, r3
 4141 1ffe 07F13003 		add	r3, r7, #48
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 102


 4142 2002 143B     		subs	r3, r3, #20
 4143 2004 1A60     		str	r2, [r3]	@ float
 607:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4144              		.loc 1 607 0
 4145 2006 0023     		movs	r3, #0
 4146 2008 07F5B852 		add	r2, r7, #5888
 4147 200c 02F10F02 		add	r2, r2, #15
 4148 2010 1370     		strb	r3, [r2]
 4149 2012 34E0     		b	.L176
 4150              	.L177:
 608:..\src/command_processing.c ****                             }
 4151              		.loc 1 608 0 discriminator 3
 4152 2014 07F5B853 		add	r3, r7, #5888
 4153 2018 03F10D03 		add	r3, r3, #13
 4154 201c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4155 201e 3222     		movs	r2, #50
 4156 2020 02FB03F3 		mul	r3, r2, r3
 4157 2024 1A1D     		adds	r2, r3, #4
 4158 2026 07F5B853 		add	r3, r7, #5888
 4159 202a 03F10B03 		add	r3, r3, #11
 4160 202e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4161 2030 1A44     		add	r2, r2, r3
 4162 2032 07F5B853 		add	r3, r7, #5888
 4163 2036 03F10B03 		add	r3, r3, #11
 4164 203a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4165 203c 1A44     		add	r2, r2, r3
 4166 203e 07F5B853 		add	r3, r7, #5888
 4167 2042 03F10F03 		add	r3, r3, #15
 4168 2046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4169 2048 D31A     		subs	r3, r2, r3
 4170 204a 5A1E     		subs	r2, r3, #1
 4171 204c 07F5B853 		add	r3, r7, #5888
 4172 2050 03F10F03 		add	r3, r3, #15
 4173 2054 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4174 2056 07F13003 		add	r3, r7, #48
 4175 205a 143B     		subs	r3, r3, #20
 4176 205c 0B44     		add	r3, r3, r1
 4177 205e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4178 2060 07F17003 		add	r3, r7, #112
 4179 2064 1C3B     		subs	r3, r3, #28
 4180 2066 9954     		strb	r1, [r3, r2]
 607:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4181              		.loc 1 607 0 discriminator 3
 4182 2068 07F5B853 		add	r3, r7, #5888
 4183 206c 03F10F03 		add	r3, r3, #15
 4184 2070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4185 2072 0133     		adds	r3, r3, #1
 4186 2074 07F5B852 		add	r2, r7, #5888
 4187 2078 02F10F02 		add	r2, r2, #15
 4188 207c 1370     		strb	r3, [r2]
 4189              	.L176:
 607:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4190              		.loc 1 607 0 is_stmt 0 discriminator 1
 4191 207e 07F5B853 		add	r3, r7, #5888
 4192 2082 03F10F03 		add	r3, r3, #15
 4193 2086 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4194 2088 07F5B853 		add	r3, r7, #5888
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 103


 4195 208c 03F10B03 		add	r3, r3, #11
 4196 2090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4197 2092 9A42     		cmp	r2, r3
 4198 2094 BED3     		bcc	.L177
 610:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4199              		.loc 1 610 0 is_stmt 1
 4200 2096 07F5B853 		add	r3, r7, #5888
 4201 209a 03F10603 		add	r3, r3, #6
 4202 209e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4203 20a0 3049     		ldr	r1, .L284
 4204 20a2 1346     		mov	r3, r2
 4205 20a4 DB00     		lsls	r3, r3, #3
 4206 20a6 9B1A     		subs	r3, r3, r2
 4207 20a8 1B01     		lsls	r3, r3, #4
 4208 20aa 0B44     		add	r3, r3, r1
 4209 20ac DC33     		adds	r3, r3, #220
 4210 20ae 1B68     		ldr	r3, [r3]
 4211 20b0 1846     		mov	r0, r3
 4212 20b2 FFF7FEFF 		bl	__aeabi_i2f
 4213 20b6 0346     		mov	r3, r0
 4214 20b8 4FF08F41 		mov	r1, #1199570944
 4215 20bc 1846     		mov	r0, r3
 4216 20be FFF7FEFF 		bl	__aeabi_fdiv
 4217 20c2 0346     		mov	r3, r0
 4218 20c4 1A46     		mov	r2, r3
 4219 20c6 07F13003 		add	r3, r7, #48
 4220 20ca 143B     		subs	r3, r3, #20
 4221 20cc 1A60     		str	r2, [r3]	@ float
 611:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4222              		.loc 1 611 0
 4223 20ce 0023     		movs	r3, #0
 4224 20d0 07F5B852 		add	r2, r7, #5888
 4225 20d4 02F10F02 		add	r2, r2, #15
 4226 20d8 1370     		strb	r3, [r2]
 4227 20da 35E0     		b	.L178
 4228              	.L179:
 612:..\src/command_processing.c ****                             }
 4229              		.loc 1 612 0 discriminator 3
 4230 20dc 07F5B853 		add	r3, r7, #5888
 4231 20e0 03F10D03 		add	r3, r3, #13
 4232 20e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4233 20e6 3222     		movs	r2, #50
 4234 20e8 02FB03F3 		mul	r3, r2, r3
 4235 20ec 1A1D     		adds	r2, r3, #4
 4236 20ee 07F5B853 		add	r3, r7, #5888
 4237 20f2 03F10B03 		add	r3, r3, #11
 4238 20f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4239 20f8 5B00     		lsls	r3, r3, #1
 4240 20fa 1A44     		add	r2, r2, r3
 4241 20fc 07F5B853 		add	r3, r7, #5888
 4242 2100 03F10B03 		add	r3, r3, #11
 4243 2104 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4244 2106 1A44     		add	r2, r2, r3
 4245 2108 07F5B853 		add	r3, r7, #5888
 4246 210c 03F10F03 		add	r3, r3, #15
 4247 2110 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4248 2112 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 104


 4249 2114 5A1E     		subs	r2, r3, #1
 4250 2116 07F5B853 		add	r3, r7, #5888
 4251 211a 03F10F03 		add	r3, r3, #15
 4252 211e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4253 2120 07F13003 		add	r3, r7, #48
 4254 2124 143B     		subs	r3, r3, #20
 4255 2126 0B44     		add	r3, r3, r1
 4256 2128 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4257 212a 07F17003 		add	r3, r7, #112
 4258 212e 1C3B     		subs	r3, r3, #28
 4259 2130 9954     		strb	r1, [r3, r2]
 611:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4260              		.loc 1 611 0 discriminator 3
 4261 2132 07F5B853 		add	r3, r7, #5888
 4262 2136 03F10F03 		add	r3, r3, #15
 4263 213a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4264 213c 0133     		adds	r3, r3, #1
 4265 213e 07F5B852 		add	r2, r7, #5888
 4266 2142 02F10F02 		add	r2, r2, #15
 4267 2146 1370     		strb	r3, [r2]
 4268              	.L178:
 611:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4269              		.loc 1 611 0 is_stmt 0 discriminator 1
 4270 2148 07F5B853 		add	r3, r7, #5888
 4271 214c 03F10F03 		add	r3, r3, #15
 4272 2150 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4273 2152 07F5B853 		add	r3, r7, #5888
 4274 2156 03F10B03 		add	r3, r3, #11
 4275 215a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4276 215c 9A42     		cmp	r2, r3
 4277 215e BDD3     		bcc	.L179
 4278              		.loc 1 615 0 is_stmt 1
 4279 2160 7BE1     		b	.L104
 4280              	.L285:
 4281 2162 00BF     		.align	2
 4282              	.L284:
 4283 2164 00000000 		.word	c_mem
 4284              	.L114:
 616:..\src/command_processing.c **** 
 617:..\src/command_processing.c ****                     case 50:         // Second Motor Measurement Offset
 618:..\src/command_processing.c ****                         aux_int16 = (c_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i]
 4285              		.loc 1 618 0
 4286 2168 07F5B853 		add	r3, r7, #5888
 4287 216c 03F10603 		add	r3, r3, #6
 4288 2170 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4289 2172 B749     		ldr	r1, .L286
 4290 2174 1346     		mov	r3, r2
 4291 2176 DB00     		lsls	r3, r3, #3
 4292 2178 9B1A     		subs	r3, r3, r2
 4293 217a 1B01     		lsls	r3, r3, #4
 4294 217c 0B44     		add	r3, r3, r1
 4295 217e 03F58873 		add	r3, r3, #272
 4296 2182 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4297 2184 1846     		mov	r0, r3
 4298 2186 07F5B853 		add	r3, r7, #5888
 4299 218a 03F10F03 		add	r3, r3, #15
 4300 218e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 105


 4301 2190 B049     		ldr	r1, .L286+4
 4302 2192 0346     		mov	r3, r0
 4303 2194 5B00     		lsls	r3, r3, #1
 4304 2196 0344     		add	r3, r3, r0
 4305 2198 9B00     		lsls	r3, r3, #2
 4306 219a 1344     		add	r3, r3, r2
 4307 219c 6633     		adds	r3, r3, #102
 4308 219e 51F82310 		ldr	r1, [r1, r3, lsl #2]
 4309 21a2 07F5B853 		add	r3, r7, #5888
 4310 21a6 03F10603 		add	r3, r3, #6
 4311 21aa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4312 21ac A848     		ldr	r0, .L286
 4313 21ae 1346     		mov	r3, r2
 4314 21b0 DB00     		lsls	r3, r3, #3
 4315 21b2 9B1A     		subs	r3, r3, r2
 4316 21b4 1B01     		lsls	r3, r3, #4
 4317 21b6 0344     		add	r3, r3, r0
 4318 21b8 03F58873 		add	r3, r3, #272
 4319 21bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4320 21be 1C46     		mov	r4, r3
 4321 21c0 07F5B853 		add	r3, r7, #5888
 4322 21c4 03F10F03 		add	r3, r3, #15
 4323 21c8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4324 21ca A248     		ldr	r0, .L286+4
 4325 21cc 2346     		mov	r3, r4
 4326 21ce 5B00     		lsls	r3, r3, #1
 4327 21d0 2344     		add	r3, r3, r4
 4328 21d2 1B01     		lsls	r3, r3, #4
 4329 21d4 0344     		add	r3, r3, r0
 4330 21d6 1344     		add	r3, r3, r2
 4331 21d8 03F29513 		addw	r3, r3, #405
 4332 21dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4333 21de 41FA03F3 		asr	r3, r1, r3
 4334 21e2 1AB2     		sxth	r2, r3
 4335 21e4 07F13003 		add	r3, r7, #48
 4336 21e8 163B     		subs	r3, r3, #22
 4337 21ea 1A80     		strh	r2, [r3]	@ movhi
 619:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4338              		.loc 1 619 0
 4339 21ec 0023     		movs	r3, #0
 4340 21ee 07F5B852 		add	r2, r7, #5888
 4341 21f2 02F10E02 		add	r2, r2, #14
 4342 21f6 1370     		strb	r3, [r2]
 4343 21f8 3BE0     		b	.L180
 4344              	.L181:
 620:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 4345              		.loc 1 620 0 discriminator 3
 4346 21fa 07F5B853 		add	r3, r7, #5888
 4347 21fe 03F10D03 		add	r3, r3, #13
 4348 2202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4349 2204 3222     		movs	r2, #50
 4350 2206 02FB03F3 		mul	r3, r2, r3
 4351 220a 1A1D     		adds	r2, r3, #4
 4352 220c 07F5B853 		add	r3, r7, #5888
 4353 2210 03F10F03 		add	r3, r3, #15
 4354 2214 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4355 2216 07F5B851 		add	r1, r7, #5888
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 106


 4356 221a 01F10B01 		add	r1, r1, #11
 4357 221e 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4358 2220 01FB03F3 		mul	r3, r1, r3
 4359 2224 1A44     		add	r2, r2, r3
 4360 2226 07F5B853 		add	r3, r7, #5888
 4361 222a 03F10B03 		add	r3, r3, #11
 4362 222e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4363 2230 1A44     		add	r2, r2, r3
 4364 2232 07F5B853 		add	r3, r7, #5888
 4365 2236 03F10E03 		add	r3, r3, #14
 4366 223a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4367 223c D31A     		subs	r3, r2, r3
 4368 223e 5A1E     		subs	r2, r3, #1
 4369 2240 07F5B853 		add	r3, r7, #5888
 4370 2244 03F10E03 		add	r3, r3, #14
 4371 2248 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4372 224a 07F13003 		add	r3, r7, #48
 4373 224e 163B     		subs	r3, r3, #22
 4374 2250 0B44     		add	r3, r3, r1
 4375 2252 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4376 2254 07F17003 		add	r3, r7, #112
 4377 2258 1C3B     		subs	r3, r3, #28
 4378 225a 9954     		strb	r1, [r3, r2]
 619:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4379              		.loc 1 619 0 discriminator 3
 4380 225c 07F5B853 		add	r3, r7, #5888
 4381 2260 03F10E03 		add	r3, r3, #14
 4382 2264 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4383 2266 0133     		adds	r3, r3, #1
 4384 2268 07F5B852 		add	r2, r7, #5888
 4385 226c 02F10E02 		add	r2, r2, #14
 4386 2270 1370     		strb	r3, [r2]
 4387              	.L180:
 619:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4388              		.loc 1 619 0 is_stmt 0 discriminator 1
 4389 2272 07F5B853 		add	r3, r7, #5888
 4390 2276 03F10E03 		add	r3, r3, #14
 4391 227a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4392 227c 07F5B853 		add	r3, r7, #5888
 4393 2280 03F10B03 		add	r3, r3, #11
 4394 2284 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4395 2286 9A42     		cmp	r2, r3
 4396 2288 B7D3     		bcc	.L181
 621:..\src/command_processing.c ****                         }
 622:..\src/command_processing.c ****                         break;
 4397              		.loc 1 622 0 is_stmt 1
 4398 228a E6E0     		b	.L104
 4399              	.L115:
 623:..\src/command_processing.c ****                 
 624:..\src/command_processing.c ****                     case 53:        // Second Motor Position limits
 625:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.m
 4400              		.loc 1 625 0
 4401 228c 07F5B853 		add	r3, r7, #5888
 4402 2290 03F10603 		add	r3, r3, #6
 4403 2294 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4404 2296 6F49     		ldr	r1, .L286+4
 4405 2298 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 107


 4406 229a DB00     		lsls	r3, r3, #3
 4407 229c 9B1A     		subs	r3, r3, r2
 4408 229e 1B01     		lsls	r3, r3, #4
 4409 22a0 0B44     		add	r3, r3, r1
 4410 22a2 E433     		adds	r3, r3, #228
 4411 22a4 1968     		ldr	r1, [r3]
 4412 22a6 07F5B853 		add	r3, r7, #5888
 4413 22aa 03F10603 		add	r3, r3, #6
 4414 22ae 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4415 22b0 6748     		ldr	r0, .L286
 4416 22b2 1346     		mov	r3, r2
 4417 22b4 DB00     		lsls	r3, r3, #3
 4418 22b6 9B1A     		subs	r3, r3, r2
 4419 22b8 1B01     		lsls	r3, r3, #4
 4420 22ba 0344     		add	r3, r3, r0
 4421 22bc 03F58873 		add	r3, r3, #272
 4422 22c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4423 22c2 1846     		mov	r0, r3
 4424 22c4 634A     		ldr	r2, .L286+4
 4425 22c6 0346     		mov	r3, r0
 4426 22c8 5B00     		lsls	r3, r3, #1
 4427 22ca 0344     		add	r3, r3, r0
 4428 22cc 1B01     		lsls	r3, r3, #4
 4429 22ce 1344     		add	r3, r3, r2
 4430 22d0 03F29513 		addw	r3, r3, #405
 4431 22d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4432 22d6 41FA03F2 		asr	r2, r1, r3
 4433 22da 07F13003 		add	r3, r7, #48
 4434 22de 1C3B     		subs	r3, r3, #28
 4435 22e0 1A60     		str	r2, [r3]
 626:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4436              		.loc 1 626 0
 4437 22e2 0023     		movs	r3, #0
 4438 22e4 07F5B852 		add	r2, r7, #5888
 4439 22e8 02F10E02 		add	r2, r2, #14
 4440 22ec 1370     		strb	r3, [r2]
 4441 22ee 2EE0     		b	.L182
 4442              	.L183:
 627:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 4443              		.loc 1 627 0 discriminator 3
 4444 22f0 07F5B853 		add	r3, r7, #5888
 4445 22f4 03F10D03 		add	r3, r3, #13
 4446 22f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4447 22fa 3222     		movs	r2, #50
 4448 22fc 02FB03F3 		mul	r3, r2, r3
 4449 2300 1A1D     		adds	r2, r3, #4
 4450 2302 07F5B853 		add	r3, r7, #5888
 4451 2306 03F10B03 		add	r3, r3, #11
 4452 230a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4453 230c 1A44     		add	r2, r2, r3
 4454 230e 07F5B853 		add	r3, r7, #5888
 4455 2312 03F10E03 		add	r3, r3, #14
 4456 2316 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4457 2318 D31A     		subs	r3, r2, r3
 4458 231a 5A1E     		subs	r2, r3, #1
 4459 231c 07F5B853 		add	r3, r7, #5888
 4460 2320 03F10E03 		add	r3, r3, #14
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 108


 4461 2324 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4462 2326 07F13003 		add	r3, r7, #48
 4463 232a 1C3B     		subs	r3, r3, #28
 4464 232c 0B44     		add	r3, r3, r1
 4465 232e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4466 2330 07F17003 		add	r3, r7, #112
 4467 2334 1C3B     		subs	r3, r3, #28
 4468 2336 9954     		strb	r1, [r3, r2]
 626:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4469              		.loc 1 626 0 discriminator 3
 4470 2338 07F5B853 		add	r3, r7, #5888
 4471 233c 03F10E03 		add	r3, r3, #14
 4472 2340 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4473 2342 0133     		adds	r3, r3, #1
 4474 2344 07F5B852 		add	r2, r7, #5888
 4475 2348 02F10E02 		add	r2, r2, #14
 4476 234c 1370     		strb	r3, [r2]
 4477              	.L182:
 626:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4478              		.loc 1 626 0 is_stmt 0 discriminator 1
 4479 234e 07F5B853 		add	r3, r7, #5888
 4480 2352 03F10E03 		add	r3, r3, #14
 4481 2356 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4482 2358 07F5B853 		add	r3, r7, #5888
 4483 235c 03F10B03 		add	r3, r3, #11
 4484 2360 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4485 2362 9A42     		cmp	r2, r3
 4486 2364 C4D3     		bcc	.L183
 628:..\src/command_processing.c ****                         }
 629:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.m
 4487              		.loc 1 629 0 is_stmt 1
 4488 2366 07F5B853 		add	r3, r7, #5888
 4489 236a 03F10603 		add	r3, r3, #6
 4490 236e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4491 2370 3849     		ldr	r1, .L286+4
 4492 2372 1346     		mov	r3, r2
 4493 2374 DB00     		lsls	r3, r3, #3
 4494 2376 9B1A     		subs	r3, r3, r2
 4495 2378 1B01     		lsls	r3, r3, #4
 4496 237a 0B44     		add	r3, r3, r1
 4497 237c E833     		adds	r3, r3, #232
 4498 237e 1968     		ldr	r1, [r3]
 4499 2380 07F5B853 		add	r3, r7, #5888
 4500 2384 03F10603 		add	r3, r3, #6
 4501 2388 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4502 238a 3148     		ldr	r0, .L286
 4503 238c 1346     		mov	r3, r2
 4504 238e DB00     		lsls	r3, r3, #3
 4505 2390 9B1A     		subs	r3, r3, r2
 4506 2392 1B01     		lsls	r3, r3, #4
 4507 2394 0344     		add	r3, r3, r0
 4508 2396 03F58873 		add	r3, r3, #272
 4509 239a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4510 239c 1846     		mov	r0, r3
 4511 239e 2D4A     		ldr	r2, .L286+4
 4512 23a0 0346     		mov	r3, r0
 4513 23a2 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 109


 4514 23a4 0344     		add	r3, r3, r0
 4515 23a6 1B01     		lsls	r3, r3, #4
 4516 23a8 1344     		add	r3, r3, r2
 4517 23aa 03F29513 		addw	r3, r3, #405
 4518 23ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4519 23b0 41FA03F2 		asr	r2, r1, r3
 4520 23b4 07F13003 		add	r3, r7, #48
 4521 23b8 1C3B     		subs	r3, r3, #28
 4522 23ba 1A60     		str	r2, [r3]
 630:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4523              		.loc 1 630 0
 4524 23bc 0023     		movs	r3, #0
 4525 23be 07F5B852 		add	r2, r7, #5888
 4526 23c2 02F10E02 		add	r2, r2, #14
 4527 23c6 1370     		strb	r3, [r2]
 4528 23c8 34E0     		b	.L184
 4529              	.L185:
 631:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 4530              		.loc 1 631 0 discriminator 3
 4531 23ca 07F5B853 		add	r3, r7, #5888
 4532 23ce 03F10D03 		add	r3, r3, #13
 4533 23d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4534 23d4 3222     		movs	r2, #50
 4535 23d6 02FB03F3 		mul	r3, r2, r3
 4536 23da 1A1D     		adds	r2, r3, #4
 4537 23dc 07F5B853 		add	r3, r7, #5888
 4538 23e0 03F10B03 		add	r3, r3, #11
 4539 23e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4540 23e6 1A44     		add	r2, r2, r3
 4541 23e8 07F5B853 		add	r3, r7, #5888
 4542 23ec 03F10B03 		add	r3, r3, #11
 4543 23f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4544 23f2 1A44     		add	r2, r2, r3
 4545 23f4 07F5B853 		add	r3, r7, #5888
 4546 23f8 03F10E03 		add	r3, r3, #14
 4547 23fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4548 23fe D31A     		subs	r3, r2, r3
 4549 2400 5A1E     		subs	r2, r3, #1
 4550 2402 07F5B853 		add	r3, r7, #5888
 4551 2406 03F10E03 		add	r3, r3, #14
 4552 240a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4553 240c 07F13003 		add	r3, r7, #48
 4554 2410 1C3B     		subs	r3, r3, #28
 4555 2412 0B44     		add	r3, r3, r1
 4556 2414 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4557 2416 07F17003 		add	r3, r7, #112
 4558 241a 1C3B     		subs	r3, r3, #28
 4559 241c 9954     		strb	r1, [r3, r2]
 630:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4560              		.loc 1 630 0 discriminator 3
 4561 241e 07F5B853 		add	r3, r7, #5888
 4562 2422 03F10E03 		add	r3, r3, #14
 4563 2426 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4564 2428 0133     		adds	r3, r3, #1
 4565 242a 07F5B852 		add	r2, r7, #5888
 4566 242e 02F10E02 		add	r2, r2, #14
 4567 2432 1370     		strb	r3, [r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 110


 4568              	.L184:
 630:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4569              		.loc 1 630 0 is_stmt 0 discriminator 1
 4570 2434 07F5B853 		add	r3, r7, #5888
 4571 2438 03F10E03 		add	r3, r3, #14
 4572 243c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4573 243e 07F5B853 		add	r3, r7, #5888
 4574 2442 03F10B03 		add	r3, r3, #11
 4575 2446 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4576 2448 9A42     		cmp	r2, r3
 4577 244a BED3     		bcc	.L185
 632:..\src/command_processing.c ****                         }
 633:..\src/command_processing.c ****                         break;
 4578              		.loc 1 633 0 is_stmt 1
 4579 244c 05E0     		b	.L104
 4580              	.L287:
 4581 244e 00BF     		.align	2
 4582              	.L286:
 4583 2450 00000000 		.word	g_mem
 4584 2454 00000000 		.word	c_mem
 4585              	.L267:
 634:..\src/command_processing.c ****                         
 635:..\src/command_processing.c ****                     default:
 636:..\src/command_processing.c ****                         break;
 4586              		.loc 1 636 0
 4587 2458 00BF     		nop
 4588              	.L104:
 637:..\src/command_processing.c ****                 }
 638:..\src/command_processing.c **** // END OF MODIFY CUSTOM PARAM  
 639:..\src/command_processing.c ****                         
 640:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
 641:..\src/command_processing.c ****         }
 642:..\src/command_processing.c ****         
 643:..\src/command_processing.c ****         sprintf(aux_str, (char*)PARAMS_STR[idx]);
 4589              		.loc 1 643 0
 4590 245a 07F5B853 		add	r3, r7, #5888
 4591 245e 03F10D03 		add	r3, r3, #13
 4592 2462 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4593 2464 9B00     		lsls	r3, r3, #2
 4594 2466 07F5B952 		add	r2, r7, #5920
 4595 246a 02F10C02 		add	r2, r2, #12
 4596 246e 1268     		ldr	r2, [r2]
 4597 2470 1344     		add	r3, r3, r2
 4598 2472 1A68     		ldr	r2, [r3]
 4599 2474 07F13003 		add	r3, r7, #48
 4600 2478 103B     		subs	r3, r3, #16
 4601 247a 1146     		mov	r1, r2
 4602 247c 1846     		mov	r0, r3
 4603 247e FFF7FEFF 		bl	sprintf
 644:..\src/command_processing.c ****         string_lenght = strlen(aux_str);
 4604              		.loc 1 644 0
 4605 2482 07F13003 		add	r3, r7, #48
 4606 2486 103B     		subs	r3, r3, #16
 4607 2488 1846     		mov	r0, r3
 4608 248a FFF7FEFF 		bl	strlen
 4609 248e 0346     		mov	r3, r0
 4610 2490 07F5B852 		add	r2, r7, #5888
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 111


 4611 2494 02F10A02 		add	r2, r2, #10
 4612 2498 1370     		strb	r3, [r2]
 645:..\src/command_processing.c ****         
 646:..\src/command_processing.c ****         // Parameters with a menu
 647:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 4613              		.loc 1 647 0
 4614 249a 07F5B853 		add	r3, r7, #5888
 4615 249e 03F10D03 		add	r3, r3, #13
 4616 24a2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4617 24a4 07F11003 		add	r3, r7, #16
 4618 24a8 083B     		subs	r3, r3, #8
 4619 24aa 1B68     		ldr	r3, [r3]
 4620 24ac 1344     		add	r3, r3, r2
 4621 24ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4622 24b0 002B     		cmp	r3, #0
 4623 24b2 40F07184 		bne	.L186
 648:..\src/command_processing.c ****             switch(NUM_MENU[idx_menu]){
 4624              		.loc 1 648 0
 4625 24b6 07F5B853 		add	r3, r7, #5888
 4626 24ba 03F10C03 		add	r3, r3, #12
 4627 24be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4628 24c0 07F5B952 		add	r2, r7, #5920
 4629 24c4 02F10802 		add	r2, r2, #8
 4630 24c8 1268     		ldr	r2, [r2]
 4631 24ca 1344     		add	r3, r3, r2
 4632 24cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4633 24ce 013B     		subs	r3, r3, #1
 4634 24d0 0B2B     		cmp	r3, #11
 4635 24d2 00F25384 		bhi	.L187
 4636 24d6 01A2     		adr	r2, .L189
 4637 24d8 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4638              		.p2align 2
 4639              	.L189:
 4640 24dc 0D250000 		.word	.L188+1
 4641 24e0 B3260000 		.word	.L190+1
 4642 24e4 85270000 		.word	.L191+1
 4643 24e8 D5270000 		.word	.L192+1
 4644 24ec 35280000 		.word	.L193+1
 4645 24f0 8D280000 		.word	.L194+1
 4646 24f4 A5290000 		.word	.L195+1
 4647 24f8 292A0000 		.word	.L196+1
 4648 24fc B92A0000 		.word	.L197+1
 4649 2500 2D2B0000 		.word	.L198+1
 4650 2504 3B2C0000 		.word	.L199+1
 4651 2508 FF2C0000 		.word	.L200+1
 4652              		.p2align 1
 4653              	.L188:
 649:..\src/command_processing.c ****                 case 1:     // input mode menu
 650:..\src/command_processing.c ****                     switch(*m_addr) {
 4654              		.loc 1 650 0
 4655 250c 07F5B853 		add	r3, r7, #5888
 4656 2510 1B68     		ldr	r3, [r3]
 4657 2512 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4658 2514 072B     		cmp	r3, #7
 4659 2516 00F22A84 		bhi	.L268
 4660 251a 01A2     		adr	r2, .L203
 4661 251c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 112


 4662              		.p2align 2
 4663              	.L203:
 4664 2520 41250000 		.word	.L202+1
 4665 2524 65250000 		.word	.L204+1
 4666 2528 8B250000 		.word	.L205+1
 4667 252c B9250000 		.word	.L206+1
 4668 2530 E5250000 		.word	.L207+1
 4669 2534 0F260000 		.word	.L208+1
 4670 2538 43260000 		.word	.L209+1
 4671 253c 6D260000 		.word	.L210+1
 4672              		.p2align 1
 4673              	.L202:
 651:..\src/command_processing.c ****                         case INPUT_MODE_EXTERNAL:
 652:..\src/command_processing.c ****                             strcat(aux_str, " Usb");
 4674              		.loc 1 652 0
 4675 2540 07F13003 		add	r3, r7, #48
 4676 2544 103B     		subs	r3, r3, #16
 4677 2546 1846     		mov	r0, r3
 4678 2548 FFF7FEFF 		bl	strlen
 4679 254c 0346     		mov	r3, r0
 4680 254e 1A46     		mov	r2, r3
 4681 2550 07F13003 		add	r3, r7, #48
 4682 2554 103B     		subs	r3, r3, #16
 4683 2556 1344     		add	r3, r3, r2
 4684 2558 D54A     		ldr	r2, .L288
 4685 255a 1068     		ldr	r0, [r2]	@ unaligned
 4686 255c 1860     		str	r0, [r3]	@ unaligned
 4687 255e 1279     		ldrb	r2, [r2, #4]
 4688 2560 1A71     		strb	r2, [r3, #4]
 653:..\src/command_processing.c ****                         break;
 4689              		.loc 1 653 0
 4690 2562 A5E0     		b	.L201
 4691              	.L204:
 654:..\src/command_processing.c ****                         case INPUT_MODE_ENCODER3:
 655:..\src/command_processing.c ****                             strcat(aux_str, " Handle");
 4692              		.loc 1 655 0
 4693 2564 07F13003 		add	r3, r7, #48
 4694 2568 103B     		subs	r3, r3, #16
 4695 256a 1846     		mov	r0, r3
 4696 256c FFF7FEFF 		bl	strlen
 4697 2570 0346     		mov	r3, r0
 4698 2572 1A46     		mov	r2, r3
 4699 2574 07F13003 		add	r3, r7, #48
 4700 2578 103B     		subs	r3, r3, #16
 4701 257a 1344     		add	r3, r3, r2
 4702 257c CD49     		ldr	r1, .L288+4
 4703 257e 1A46     		mov	r2, r3
 4704 2580 0B46     		mov	r3, r1
 4705 2582 03CB     		ldmia	r3!, {r0, r1}
 4706 2584 1060     		str	r0, [r2]	@ unaligned
 4707 2586 5160     		str	r1, [r2, #4]	@ unaligned
 656:..\src/command_processing.c ****                         break;
 4708              		.loc 1 656 0
 4709 2588 92E0     		b	.L201
 4710              	.L205:
 657:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL:
 658:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 113


 4711              		.loc 1 658 0
 4712 258a 07F13003 		add	r3, r7, #48
 4713 258e 103B     		subs	r3, r3, #16
 4714 2590 1846     		mov	r0, r3
 4715 2592 FFF7FEFF 		bl	strlen
 4716 2596 0346     		mov	r3, r0
 4717 2598 1A46     		mov	r2, r3
 4718 259a 07F13003 		add	r3, r7, #48
 4719 259e 103B     		subs	r3, r3, #16
 4720 25a0 1344     		add	r3, r3, r2
 4721 25a2 C54A     		ldr	r2, .L288+8
 4722 25a4 1D46     		mov	r5, r3
 4723 25a6 1446     		mov	r4, r2
 4724 25a8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4725 25aa 2860     		str	r0, [r5]	@ unaligned
 4726 25ac 6960     		str	r1, [r5, #4]	@ unaligned
 4727 25ae AA60     		str	r2, [r5, #8]	@ unaligned
 4728 25b0 EB60     		str	r3, [r5, #12]	@ unaligned
 4729 25b2 2388     		ldrh	r3, [r4]	@ unaligned
 4730 25b4 2B82     		strh	r3, [r5, #16]	@ unaligned
 659:..\src/command_processing.c ****                         break;
 4731              		.loc 1 659 0
 4732 25b6 7BE0     		b	.L201
 4733              	.L206:
 660:..\src/command_processing.c ****                         case INPUT_MODE_EMG_INTEGRAL:
 661:..\src/command_processing.c ****                             strcat(aux_str, " EMG integral");
 4734              		.loc 1 661 0
 4735 25b8 07F13003 		add	r3, r7, #48
 4736 25bc 103B     		subs	r3, r3, #16
 4737 25be 1846     		mov	r0, r3
 4738 25c0 FFF7FEFF 		bl	strlen
 4739 25c4 0346     		mov	r3, r0
 4740 25c6 1A46     		mov	r2, r3
 4741 25c8 07F13003 		add	r3, r7, #48
 4742 25cc 103B     		subs	r3, r3, #16
 4743 25ce 1344     		add	r3, r3, r2
 4744 25d0 BA4A     		ldr	r2, .L288+12
 4745 25d2 1C46     		mov	r4, r3
 4746 25d4 1346     		mov	r3, r2
 4747 25d6 07CB     		ldmia	r3!, {r0, r1, r2}
 4748 25d8 2060     		str	r0, [r4]	@ unaligned
 4749 25da 6160     		str	r1, [r4, #4]	@ unaligned
 4750 25dc A260     		str	r2, [r4, #8]	@ unaligned
 4751 25de 1B88     		ldrh	r3, [r3]	@ unaligned
 4752 25e0 A381     		strh	r3, [r4, #12]	@ unaligned
 662:..\src/command_processing.c ****                         break;
 4753              		.loc 1 662 0
 4754 25e2 65E0     		b	.L201
 4755              	.L207:
 663:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS:
 664:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS");
 4756              		.loc 1 664 0
 4757 25e4 07F13003 		add	r3, r7, #48
 4758 25e8 103B     		subs	r3, r3, #16
 4759 25ea 1846     		mov	r0, r3
 4760 25ec FFF7FEFF 		bl	strlen
 4761 25f0 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 114


 4762 25f2 1A46     		mov	r2, r3
 4763 25f4 07F13003 		add	r3, r7, #48
 4764 25f8 103B     		subs	r3, r3, #16
 4765 25fa 1344     		add	r3, r3, r2
 4766 25fc B049     		ldr	r1, .L288+16
 4767 25fe 1A46     		mov	r2, r3
 4768 2600 0B46     		mov	r3, r1
 4769 2602 03CB     		ldmia	r3!, {r0, r1}
 4770 2604 1060     		str	r0, [r2]	@ unaligned
 4771 2606 5160     		str	r1, [r2, #4]	@ unaligned
 4772 2608 1B88     		ldrh	r3, [r3]	@ unaligned
 4773 260a 1381     		strh	r3, [r2, #8]	@ unaligned
 665:..\src/command_processing.c ****                         break;
 4774              		.loc 1 665 0
 4775 260c 50E0     		b	.L201
 4776              	.L208:
 666:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS_ADV:
 667:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS Advanced");
 4777              		.loc 1 667 0
 4778 260e 07F13003 		add	r3, r7, #48
 4779 2612 103B     		subs	r3, r3, #16
 4780 2614 1846     		mov	r0, r3
 4781 2616 FFF7FEFF 		bl	strlen
 4782 261a 0346     		mov	r3, r0
 4783 261c 1A46     		mov	r2, r3
 4784 261e 07F13003 		add	r3, r7, #48
 4785 2622 103B     		subs	r3, r3, #16
 4786 2624 1344     		add	r3, r3, r2
 4787 2626 A74A     		ldr	r2, .L288+20
 4788 2628 1D46     		mov	r5, r3
 4789 262a 1446     		mov	r4, r2
 4790 262c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4791 262e 2860     		str	r0, [r5]	@ unaligned
 4792 2630 6960     		str	r1, [r5, #4]	@ unaligned
 4793 2632 AA60     		str	r2, [r5, #8]	@ unaligned
 4794 2634 EB60     		str	r3, [r5, #12]	@ unaligned
 4795 2636 2388     		ldrh	r3, [r4]	@ unaligned
 4796 2638 A278     		ldrb	r2, [r4, #2]
 4797 263a 2B82     		strh	r3, [r5, #16]	@ unaligned
 4798 263c 1346     		mov	r3, r2
 4799 263e AB74     		strb	r3, [r5, #18]
 668:..\src/command_processing.c ****                         break;
 4800              		.loc 1 668 0
 4801 2640 36E0     		b	.L201
 4802              	.L209:
 669:..\src/command_processing.c ****                         case INPUT_MODE_JOYSTICK:
 670:..\src/command_processing.c ****                             strcat(aux_str, " Joystick");
 4803              		.loc 1 670 0
 4804 2642 07F13003 		add	r3, r7, #48
 4805 2646 103B     		subs	r3, r3, #16
 4806 2648 1846     		mov	r0, r3
 4807 264a FFF7FEFF 		bl	strlen
 4808 264e 0346     		mov	r3, r0
 4809 2650 1A46     		mov	r2, r3
 4810 2652 07F13003 		add	r3, r7, #48
 4811 2656 103B     		subs	r3, r3, #16
 4812 2658 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 115


 4813 265a 9B49     		ldr	r1, .L288+24
 4814 265c 1A46     		mov	r2, r3
 4815 265e 0B46     		mov	r3, r1
 4816 2660 03CB     		ldmia	r3!, {r0, r1}
 4817 2662 1060     		str	r0, [r2]	@ unaligned
 4818 2664 5160     		str	r1, [r2, #4]	@ unaligned
 4819 2666 1B88     		ldrh	r3, [r3]	@ unaligned
 4820 2668 1381     		strh	r3, [r2, #8]	@ unaligned
 671:..\src/command_processing.c ****                         break;
 4821              		.loc 1 671 0
 4822 266a 21E0     		b	.L201
 4823              	.L210:
 672:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL_NC:
 673:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional Normally Closed");
 4824              		.loc 1 673 0
 4825 266c 07F13003 		add	r3, r7, #48
 4826 2670 103B     		subs	r3, r3, #16
 4827 2672 1846     		mov	r0, r3
 4828 2674 FFF7FEFF 		bl	strlen
 4829 2678 0346     		mov	r3, r0
 4830 267a 1A46     		mov	r2, r3
 4831 267c 07F13003 		add	r3, r7, #48
 4832 2680 103B     		subs	r3, r3, #16
 4833 2682 1344     		add	r3, r3, r2
 4834 2684 914A     		ldr	r2, .L288+28
 4835 2686 1446     		mov	r4, r2
 4836 2688 9E46     		mov	lr, r3
 4837 268a 04F1200C 		add	ip, r4, #32
 4838              	.L211:
 4839 268e 7546     		mov	r5, lr
 4840 2690 2646     		mov	r6, r4
 4841 2692 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 4842 2694 2860     		str	r0, [r5]	@ unaligned
 4843 2696 6960     		str	r1, [r5, #4]	@ unaligned
 4844 2698 AA60     		str	r2, [r5, #8]	@ unaligned
 4845 269a EB60     		str	r3, [r5, #12]	@ unaligned
 4846 269c 1034     		adds	r4, r4, #16
 4847 269e 0EF1100E 		add	lr, lr, #16
 4848 26a2 6445     		cmp	r4, ip
 4849 26a4 F3D1     		bne	.L211
 4850 26a6 7246     		mov	r2, lr
 4851 26a8 2346     		mov	r3, r4
 4852 26aa 1B88     		ldrh	r3, [r3]	@ unaligned
 4853 26ac 1380     		strh	r3, [r2]	@ unaligned
 674:..\src/command_processing.c ****                         break;
 4854              		.loc 1 674 0
 4855 26ae 00BF     		nop
 4856              	.L201:
 675:..\src/command_processing.c ****                     }
 676:..\src/command_processing.c ****                     break;
 4857              		.loc 1 676 0
 4858 26b0 5DE3     		b	.L268
 4859              	.L190:
 677:..\src/command_processing.c ****                 case 2:     // control mode menu
 678:..\src/command_processing.c ****                     switch(*m_addr){
 4860              		.loc 1 678 0
 4861 26b2 07F5B853 		add	r3, r7, #5888
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 116


 4862 26b6 1B68     		ldr	r3, [r3]
 4863 26b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4864 26ba 032B     		cmp	r3, #3
 4865 26bc 00F25983 		bhi	.L269
 4866 26c0 01A2     		adr	r2, .L214
 4867 26c2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4868 26c6 00BF     		.p2align 2
 4869              	.L214:
 4870 26c8 D9260000 		.word	.L213+1
 4871 26cc 03270000 		.word	.L215+1
 4872 26d0 27270000 		.word	.L216+1
 4873 26d4 51270000 		.word	.L217+1
 4874              		.p2align 1
 4875              	.L213:
 679:..\src/command_processing.c ****                         case CONTROL_ANGLE:
 680:..\src/command_processing.c ****                             strcat(aux_str, " Position");
 4876              		.loc 1 680 0
 4877 26d8 07F13003 		add	r3, r7, #48
 4878 26dc 103B     		subs	r3, r3, #16
 4879 26de 1846     		mov	r0, r3
 4880 26e0 FFF7FEFF 		bl	strlen
 4881 26e4 0346     		mov	r3, r0
 4882 26e6 1A46     		mov	r2, r3
 4883 26e8 07F13003 		add	r3, r7, #48
 4884 26ec 103B     		subs	r3, r3, #16
 4885 26ee 1344     		add	r3, r3, r2
 4886 26f0 7749     		ldr	r1, .L288+32
 4887 26f2 1A46     		mov	r2, r3
 4888 26f4 0B46     		mov	r3, r1
 4889 26f6 03CB     		ldmia	r3!, {r0, r1}
 4890 26f8 1060     		str	r0, [r2]	@ unaligned
 4891 26fa 5160     		str	r1, [r2, #4]	@ unaligned
 4892 26fc 1B88     		ldrh	r3, [r3]	@ unaligned
 4893 26fe 1381     		strh	r3, [r2, #8]	@ unaligned
 681:..\src/command_processing.c ****                         break;
 4894              		.loc 1 681 0
 4895 2700 3FE0     		b	.L212
 4896              	.L215:
 682:..\src/command_processing.c ****                         case CONTROL_PWM:
 683:..\src/command_processing.c ****                             strcat(aux_str, " PWM");
 4897              		.loc 1 683 0
 4898 2702 07F13003 		add	r3, r7, #48
 4899 2706 103B     		subs	r3, r3, #16
 4900 2708 1846     		mov	r0, r3
 4901 270a FFF7FEFF 		bl	strlen
 4902 270e 0346     		mov	r3, r0
 4903 2710 1A46     		mov	r2, r3
 4904 2712 07F13003 		add	r3, r7, #48
 4905 2716 103B     		subs	r3, r3, #16
 4906 2718 1344     		add	r3, r3, r2
 4907 271a 6E4A     		ldr	r2, .L288+36
 4908 271c 1068     		ldr	r0, [r2]	@ unaligned
 4909 271e 1860     		str	r0, [r3]	@ unaligned
 4910 2720 1279     		ldrb	r2, [r2, #4]
 4911 2722 1A71     		strb	r2, [r3, #4]
 684:..\src/command_processing.c ****                         break;
 4912              		.loc 1 684 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 117


 4913 2724 2DE0     		b	.L212
 4914              	.L216:
 685:..\src/command_processing.c ****                         case CONTROL_CURRENT:
 686:..\src/command_processing.c ****                             strcat(aux_str, " Current");
 4915              		.loc 1 686 0
 4916 2726 07F13003 		add	r3, r7, #48
 4917 272a 103B     		subs	r3, r3, #16
 4918 272c 1846     		mov	r0, r3
 4919 272e FFF7FEFF 		bl	strlen
 4920 2732 0346     		mov	r3, r0
 4921 2734 1A46     		mov	r2, r3
 4922 2736 07F13003 		add	r3, r7, #48
 4923 273a 103B     		subs	r3, r3, #16
 4924 273c 1344     		add	r3, r3, r2
 4925 273e 6649     		ldr	r1, .L288+40
 4926 2740 1A46     		mov	r2, r3
 4927 2742 0B46     		mov	r3, r1
 4928 2744 03CB     		ldmia	r3!, {r0, r1}
 4929 2746 1060     		str	r0, [r2]	@ unaligned
 4930 2748 5160     		str	r1, [r2, #4]	@ unaligned
 4931 274a 1B78     		ldrb	r3, [r3]
 4932 274c 1372     		strb	r3, [r2, #8]
 687:..\src/command_processing.c ****                         break;
 4933              		.loc 1 687 0
 4934 274e 18E0     		b	.L212
 4935              	.L217:
 688:..\src/command_processing.c ****                         case CURR_AND_POS_CONTROL:
 689:..\src/command_processing.c ****                             strcat(aux_str, " Position and Current");
 4936              		.loc 1 689 0
 4937 2750 07F13003 		add	r3, r7, #48
 4938 2754 103B     		subs	r3, r3, #16
 4939 2756 1846     		mov	r0, r3
 4940 2758 FFF7FEFF 		bl	strlen
 4941 275c 0346     		mov	r3, r0
 4942 275e 1A46     		mov	r2, r3
 4943 2760 07F13003 		add	r3, r7, #48
 4944 2764 103B     		subs	r3, r3, #16
 4945 2766 1344     		add	r3, r3, r2
 4946 2768 5C4A     		ldr	r2, .L288+44
 4947 276a 1D46     		mov	r5, r3
 4948 276c 1446     		mov	r4, r2
 4949 276e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4950 2770 2860     		str	r0, [r5]	@ unaligned
 4951 2772 6960     		str	r1, [r5, #4]	@ unaligned
 4952 2774 AA60     		str	r2, [r5, #8]	@ unaligned
 4953 2776 EB60     		str	r3, [r5, #12]	@ unaligned
 4954 2778 2068     		ldr	r0, [r4]	@ unaligned
 4955 277a 2861     		str	r0, [r5, #16]	@ unaligned
 4956 277c A388     		ldrh	r3, [r4, #4]	@ unaligned
 4957 277e AB82     		strh	r3, [r5, #20]	@ unaligned
 690:..\src/command_processing.c ****                         break;
 4958              		.loc 1 690 0
 4959 2780 00BF     		nop
 4960              	.L212:
 691:..\src/command_processing.c ****                     }
 692:..\src/command_processing.c ****                     break;
 4961              		.loc 1 692 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 118


 4962 2782 F6E2     		b	.L269
 4963              	.L191:
 693:..\src/command_processing.c ****                 case 3:     // yes/no menu
 694:..\src/command_processing.c ****                     if(*m_addr){
 4964              		.loc 1 694 0
 4965 2784 07F5B853 		add	r3, r7, #5888
 4966 2788 1B68     		ldr	r3, [r3]
 4967 278a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4968 278c 002B     		cmp	r3, #0
 4969 278e 11D0     		beq	.L218
 695:..\src/command_processing.c ****                         strcat(aux_str, " YES\0");
 4970              		.loc 1 695 0
 4971 2790 07F13003 		add	r3, r7, #48
 4972 2794 103B     		subs	r3, r3, #16
 4973 2796 1846     		mov	r0, r3
 4974 2798 FFF7FEFF 		bl	strlen
 4975 279c 0346     		mov	r3, r0
 4976 279e 1A46     		mov	r2, r3
 4977 27a0 07F13003 		add	r3, r7, #48
 4978 27a4 103B     		subs	r3, r3, #16
 4979 27a6 1344     		add	r3, r3, r2
 4980 27a8 4D4A     		ldr	r2, .L288+48
 4981 27aa 1068     		ldr	r0, [r2]	@ unaligned
 4982 27ac 1860     		str	r0, [r3]	@ unaligned
 4983 27ae 1279     		ldrb	r2, [r2, #4]
 4984 27b0 1A71     		strb	r2, [r3, #4]
 696:..\src/command_processing.c ****                     }
 697:..\src/command_processing.c ****                     else {
 698:..\src/command_processing.c ****                         strcat(aux_str, " NO\0");
 699:..\src/command_processing.c ****                     }
 700:..\src/command_processing.c ****                     break;    
 4985              		.loc 1 700 0
 4986 27b2 E3E2     		b	.L187
 4987              	.L218:
 698:..\src/command_processing.c ****                     }
 4988              		.loc 1 698 0
 4989 27b4 07F13003 		add	r3, r7, #48
 4990 27b8 103B     		subs	r3, r3, #16
 4991 27ba 1846     		mov	r0, r3
 4992 27bc FFF7FEFF 		bl	strlen
 4993 27c0 0346     		mov	r3, r0
 4994 27c2 1A46     		mov	r2, r3
 4995 27c4 07F13003 		add	r3, r7, #48
 4996 27c8 103B     		subs	r3, r3, #16
 4997 27ca 1344     		add	r3, r3, r2
 4998 27cc 454A     		ldr	r2, .L288+52
 4999 27ce 1068     		ldr	r0, [r2]	@ unaligned
 5000 27d0 1860     		str	r0, [r3]	@ unaligned
 5001              		.loc 1 700 0
 5002 27d2 D3E2     		b	.L187
 5003              	.L192:
 701:..\src/command_processing.c ****                 case 4:     // right/lef menu
 702:..\src/command_processing.c ****                     switch(*m_addr){
 5004              		.loc 1 702 0
 5005 27d4 07F5B853 		add	r3, r7, #5888
 5006 27d8 1B68     		ldr	r3, [r3]
 5007 27da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 119


 5008 27dc 002B     		cmp	r3, #0
 5009 27de 02D0     		beq	.L221
 5010 27e0 012B     		cmp	r3, #1
 5011 27e2 14D0     		beq	.L222
 703:..\src/command_processing.c ****                         case RIGHT_HAND:
 704:..\src/command_processing.c ****                             strcat(aux_str, " Right\0");
 705:..\src/command_processing.c ****                         break;
 706:..\src/command_processing.c ****                         case LEFT_HAND:
 707:..\src/command_processing.c ****                             strcat(aux_str, " Left\0");
 708:..\src/command_processing.c ****                         break;
 709:..\src/command_processing.c ****                     }
 710:..\src/command_processing.c ****                     break;
 5012              		.loc 1 710 0
 5013 27e4 CAE2     		b	.L187
 5014              	.L221:
 704:..\src/command_processing.c ****                         break;
 5015              		.loc 1 704 0
 5016 27e6 07F13003 		add	r3, r7, #48
 5017 27ea 103B     		subs	r3, r3, #16
 5018 27ec 1846     		mov	r0, r3
 5019 27ee FFF7FEFF 		bl	strlen
 5020 27f2 0346     		mov	r3, r0
 5021 27f4 1A46     		mov	r2, r3
 5022 27f6 07F13003 		add	r3, r7, #48
 5023 27fa 103B     		subs	r3, r3, #16
 5024 27fc 1344     		add	r3, r3, r2
 5025 27fe 3A4A     		ldr	r2, .L288+56
 5026 2800 1068     		ldr	r0, [r2]	@ unaligned
 5027 2802 1860     		str	r0, [r3]	@ unaligned
 5028 2804 9188     		ldrh	r1, [r2, #4]	@ unaligned
 5029 2806 9279     		ldrb	r2, [r2, #6]
 5030 2808 9980     		strh	r1, [r3, #4]	@ unaligned
 5031 280a 9A71     		strb	r2, [r3, #6]
 705:..\src/command_processing.c ****                         case LEFT_HAND:
 5032              		.loc 1 705 0
 5033 280c 11E0     		b	.L220
 5034              	.L222:
 707:..\src/command_processing.c ****                         break;
 5035              		.loc 1 707 0
 5036 280e 07F13003 		add	r3, r7, #48
 5037 2812 103B     		subs	r3, r3, #16
 5038 2814 1846     		mov	r0, r3
 5039 2816 FFF7FEFF 		bl	strlen
 5040 281a 0346     		mov	r3, r0
 5041 281c 1A46     		mov	r2, r3
 5042 281e 07F13003 		add	r3, r7, #48
 5043 2822 103B     		subs	r3, r3, #16
 5044 2824 1344     		add	r3, r3, r2
 5045 2826 314A     		ldr	r2, .L288+60
 5046 2828 1068     		ldr	r0, [r2]	@ unaligned
 5047 282a 1860     		str	r0, [r3]	@ unaligned
 5048 282c 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5049 282e 9A80     		strh	r2, [r3, #4]	@ unaligned
 708:..\src/command_processing.c ****                     }
 5050              		.loc 1 708 0
 5051 2830 00BF     		nop
 5052              	.L220:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 120


 5053              		.loc 1 710 0
 5054 2832 A3E2     		b	.L187
 5055              	.L193:
 711:..\src/command_processing.c ****                 case 5:     // on/off menu
 712:..\src/command_processing.c ****                     switch(*m_addr){
 5056              		.loc 1 712 0
 5057 2834 07F5B853 		add	r3, r7, #5888
 5058 2838 1B68     		ldr	r3, [r3]
 5059 283a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5060 283c 002B     		cmp	r3, #0
 5061 283e 02D0     		beq	.L224
 5062 2840 012B     		cmp	r3, #1
 5063 2842 12D0     		beq	.L225
 713:..\src/command_processing.c ****                         case 0:
 714:..\src/command_processing.c ****                             strcat(aux_str, " OFF\0");
 715:..\src/command_processing.c ****                         break;
 716:..\src/command_processing.c ****                         case 1:
 717:..\src/command_processing.c ****                             strcat(aux_str, " ON\0");
 718:..\src/command_processing.c ****                         break;
 719:..\src/command_processing.c ****                     }
 720:..\src/command_processing.c ****                     break;
 5064              		.loc 1 720 0
 5065 2844 9AE2     		b	.L187
 5066              	.L224:
 714:..\src/command_processing.c ****                         break;
 5067              		.loc 1 714 0
 5068 2846 07F13003 		add	r3, r7, #48
 5069 284a 103B     		subs	r3, r3, #16
 5070 284c 1846     		mov	r0, r3
 5071 284e FFF7FEFF 		bl	strlen
 5072 2852 0346     		mov	r3, r0
 5073 2854 1A46     		mov	r2, r3
 5074 2856 07F13003 		add	r3, r7, #48
 5075 285a 103B     		subs	r3, r3, #16
 5076 285c 1344     		add	r3, r3, r2
 5077 285e 244A     		ldr	r2, .L288+64
 5078 2860 1068     		ldr	r0, [r2]	@ unaligned
 5079 2862 1860     		str	r0, [r3]	@ unaligned
 5080 2864 1279     		ldrb	r2, [r2, #4]
 5081 2866 1A71     		strb	r2, [r3, #4]
 715:..\src/command_processing.c ****                         case 1:
 5082              		.loc 1 715 0
 5083 2868 0FE0     		b	.L223
 5084              	.L225:
 717:..\src/command_processing.c ****                         break;
 5085              		.loc 1 717 0
 5086 286a 07F13003 		add	r3, r7, #48
 5087 286e 103B     		subs	r3, r3, #16
 5088 2870 1846     		mov	r0, r3
 5089 2872 FFF7FEFF 		bl	strlen
 5090 2876 0346     		mov	r3, r0
 5091 2878 1A46     		mov	r2, r3
 5092 287a 07F13003 		add	r3, r7, #48
 5093 287e 103B     		subs	r3, r3, #16
 5094 2880 1344     		add	r3, r3, r2
 5095 2882 1C4A     		ldr	r2, .L288+68
 5096 2884 1068     		ldr	r0, [r2]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 121


 5097 2886 1860     		str	r0, [r3]	@ unaligned
 718:..\src/command_processing.c ****                     }
 5098              		.loc 1 718 0
 5099 2888 00BF     		nop
 5100              	.L223:
 5101              		.loc 1 720 0
 5102 288a 77E2     		b	.L187
 5103              	.L194:
 721:..\src/command_processing.c ****                 case 6:     // expansion port menu
 722:..\src/command_processing.c ****                     switch(*m_addr){
 5104              		.loc 1 722 0
 5105 288c 07F5B853 		add	r3, r7, #5888
 5106 2890 1B68     		ldr	r3, [r3]
 5107 2892 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5108 2894 032B     		cmp	r3, #3
 5109 2896 00F26E82 		bhi	.L270
 5110 289a 01A2     		adr	r2, .L228
 5111 289c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5112              		.p2align 2
 5113              	.L228:
 5114 28a0 F9280000 		.word	.L227+1
 5115 28a4 1D290000 		.word	.L229+1
 5116 28a8 49290000 		.word	.L230+1
 5117 28ac 77290000 		.word	.L231+1
 5118              		.p2align 1
 5119              	.L289:
 5120              		.align	2
 5121              	.L288:
 5122 28b0 00000000 		.word	.LC87
 5123 28b4 08000000 		.word	.LC88
 5124 28b8 10000000 		.word	.LC89
 5125 28bc 24000000 		.word	.LC90
 5126 28c0 34000000 		.word	.LC91
 5127 28c4 40000000 		.word	.LC92
 5128 28c8 54000000 		.word	.LC93
 5129 28cc 60000000 		.word	.LC94
 5130 28d0 84000000 		.word	.LC95
 5131 28d4 90000000 		.word	.LC96
 5132 28d8 98000000 		.word	.LC97
 5133 28dc A4000000 		.word	.LC98
 5134 28e0 BC000000 		.word	.LC99
 5135 28e4 C4000000 		.word	.LC100
 5136 28e8 CC000000 		.word	.LC101
 5137 28ec D4000000 		.word	.LC102
 5138 28f0 DC000000 		.word	.LC103
 5139 28f4 E4000000 		.word	.LC104
 5140              	.L227:
 723:..\src/command_processing.c ****                         case EXP_NONE:
 724:..\src/command_processing.c ****                             strcat(aux_str, " None\0");
 5141              		.loc 1 724 0
 5142 28f8 07F13003 		add	r3, r7, #48
 5143 28fc 103B     		subs	r3, r3, #16
 5144 28fe 1846     		mov	r0, r3
 5145 2900 FFF7FEFF 		bl	strlen
 5146 2904 0346     		mov	r3, r0
 5147 2906 1A46     		mov	r2, r3
 5148 2908 07F13003 		add	r3, r7, #48
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 122


 5149 290c 103B     		subs	r3, r3, #16
 5150 290e 1344     		add	r3, r3, r2
 5151 2910 CE4A     		ldr	r2, .L290
 5152 2912 1068     		ldr	r0, [r2]	@ unaligned
 5153 2914 1860     		str	r0, [r3]	@ unaligned
 5154 2916 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5155 2918 9A80     		strh	r2, [r3, #4]	@ unaligned
 725:..\src/command_processing.c ****                             break;
 5156              		.loc 1 725 0
 5157 291a 42E0     		b	.L226
 5158              	.L229:
 726:..\src/command_processing.c ****                         case EXP_SD_RTC:
 727:..\src/command_processing.c ****                             strcat(aux_str, " SD/RTC board\0");
 5159              		.loc 1 727 0
 5160 291c 07F13003 		add	r3, r7, #48
 5161 2920 103B     		subs	r3, r3, #16
 5162 2922 1846     		mov	r0, r3
 5163 2924 FFF7FEFF 		bl	strlen
 5164 2928 0346     		mov	r3, r0
 5165 292a 1A46     		mov	r2, r3
 5166 292c 07F13003 		add	r3, r7, #48
 5167 2930 103B     		subs	r3, r3, #16
 5168 2932 1344     		add	r3, r3, r2
 5169 2934 C64A     		ldr	r2, .L290+4
 5170 2936 1C46     		mov	r4, r3
 5171 2938 1346     		mov	r3, r2
 5172 293a 07CB     		ldmia	r3!, {r0, r1, r2}
 5173 293c 2060     		str	r0, [r4]	@ unaligned
 5174 293e 6160     		str	r1, [r4, #4]	@ unaligned
 5175 2940 A260     		str	r2, [r4, #8]	@ unaligned
 5176 2942 1B88     		ldrh	r3, [r3]	@ unaligned
 5177 2944 A381     		strh	r3, [r4, #12]	@ unaligned
 728:..\src/command_processing.c ****                             break;
 5178              		.loc 1 728 0
 5179 2946 2CE0     		b	.L226
 5180              	.L230:
 729:..\src/command_processing.c ****                         case EXP_WIFI:
 730:..\src/command_processing.c ****         					strcat(aux_str, " WiFi board [N/A]\0");
 5181              		.loc 1 730 0
 5182 2948 07F13003 		add	r3, r7, #48
 5183 294c 103B     		subs	r3, r3, #16
 5184 294e 1846     		mov	r0, r3
 5185 2950 FFF7FEFF 		bl	strlen
 5186 2954 0346     		mov	r3, r0
 5187 2956 1A46     		mov	r2, r3
 5188 2958 07F13003 		add	r3, r7, #48
 5189 295c 103B     		subs	r3, r3, #16
 5190 295e 1344     		add	r3, r3, r2
 5191 2960 BC4A     		ldr	r2, .L290+8
 5192 2962 1D46     		mov	r5, r3
 5193 2964 1446     		mov	r4, r2
 5194 2966 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5195 2968 2860     		str	r0, [r5]	@ unaligned
 5196 296a 6960     		str	r1, [r5, #4]	@ unaligned
 5197 296c AA60     		str	r2, [r5, #8]	@ unaligned
 5198 296e EB60     		str	r3, [r5, #12]	@ unaligned
 5199 2970 2388     		ldrh	r3, [r4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 123


 5200 2972 2B82     		strh	r3, [r5, #16]	@ unaligned
 731:..\src/command_processing.c ****         					break;
 5201              		.loc 1 731 0
 5202 2974 15E0     		b	.L226
 5203              	.L231:
 732:..\src/command_processing.c ****                         case EXP_OTHER:
 733:..\src/command_processing.c ****         					strcat(aux_str, " Other [N/A]\0");
 5204              		.loc 1 733 0
 5205 2976 07F13003 		add	r3, r7, #48
 5206 297a 103B     		subs	r3, r3, #16
 5207 297c 1846     		mov	r0, r3
 5208 297e FFF7FEFF 		bl	strlen
 5209 2982 0346     		mov	r3, r0
 5210 2984 1A46     		mov	r2, r3
 5211 2986 07F13003 		add	r3, r7, #48
 5212 298a 103B     		subs	r3, r3, #16
 5213 298c 1344     		add	r3, r3, r2
 5214 298e B24A     		ldr	r2, .L290+12
 5215 2990 1C46     		mov	r4, r3
 5216 2992 1346     		mov	r3, r2
 5217 2994 07CB     		ldmia	r3!, {r0, r1, r2}
 5218 2996 2060     		str	r0, [r4]	@ unaligned
 5219 2998 6160     		str	r1, [r4, #4]	@ unaligned
 5220 299a A260     		str	r2, [r4, #8]	@ unaligned
 5221 299c 1B78     		ldrb	r3, [r3]
 5222 299e 2373     		strb	r3, [r4, #12]
 734:..\src/command_processing.c ****         					break;
 5223              		.loc 1 734 0
 5224 29a0 00BF     		nop
 5225              	.L226:
 735:..\src/command_processing.c ****                     }
 736:..\src/command_processing.c ****                     break;
 5226              		.loc 1 736 0
 5227 29a2 E8E1     		b	.L270
 5228              	.L195:
 737:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 738:..\src/command_processing.c ****                     switch(*m_addr){
 5229              		.loc 1 738 0
 5230 29a4 07F5B853 		add	r3, r7, #5888
 5231 29a8 1B68     		ldr	r3, [r3]
 5232 29aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5233 29ac 012B     		cmp	r3, #1
 5234 29ae 16D0     		beq	.L233
 5235 29b0 022B     		cmp	r3, #2
 5236 29b2 26D0     		beq	.L234
 5237 29b4 002B     		cmp	r3, #0
 5238 29b6 00D0     		beq	.L235
 739:..\src/command_processing.c ****                         case 0: 
 740:..\src/command_processing.c ****                             strcat(aux_str, " None\0"); 
 741:..\src/command_processing.c ****                             break;
 742:..\src/command_processing.c ****                         case 1: 
 743:..\src/command_processing.c ****                             strcat(aux_str, " Low\0"); 
 744:..\src/command_processing.c ****                             break;
 745:..\src/command_processing.c ****                         case 2: 
 746:..\src/command_processing.c ****                             strcat(aux_str, " High\0");
 747:..\src/command_processing.c ****                             break;
 748:..\src/command_processing.c ****                         default:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 124


 749:..\src/command_processing.c ****                             break;
 5239              		.loc 1 749 0
 5240 29b8 35E0     		b	.L236
 5241              	.L235:
 740:..\src/command_processing.c ****                             break;
 5242              		.loc 1 740 0
 5243 29ba 07F13003 		add	r3, r7, #48
 5244 29be 103B     		subs	r3, r3, #16
 5245 29c0 1846     		mov	r0, r3
 5246 29c2 FFF7FEFF 		bl	strlen
 5247 29c6 0346     		mov	r3, r0
 5248 29c8 1A46     		mov	r2, r3
 5249 29ca 07F13003 		add	r3, r7, #48
 5250 29ce 103B     		subs	r3, r3, #16
 5251 29d0 1344     		add	r3, r3, r2
 5252 29d2 9E4A     		ldr	r2, .L290
 5253 29d4 1068     		ldr	r0, [r2]	@ unaligned
 5254 29d6 1860     		str	r0, [r3]	@ unaligned
 5255 29d8 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5256 29da 9A80     		strh	r2, [r3, #4]	@ unaligned
 741:..\src/command_processing.c ****                         case 1: 
 5257              		.loc 1 741 0
 5258 29dc 23E0     		b	.L236
 5259              	.L233:
 743:..\src/command_processing.c ****                             break;
 5260              		.loc 1 743 0
 5261 29de 07F13003 		add	r3, r7, #48
 5262 29e2 103B     		subs	r3, r3, #16
 5263 29e4 1846     		mov	r0, r3
 5264 29e6 FFF7FEFF 		bl	strlen
 5265 29ea 0346     		mov	r3, r0
 5266 29ec 1A46     		mov	r2, r3
 5267 29ee 07F13003 		add	r3, r7, #48
 5268 29f2 103B     		subs	r3, r3, #16
 5269 29f4 1344     		add	r3, r3, r2
 5270 29f6 994A     		ldr	r2, .L290+16
 5271 29f8 1068     		ldr	r0, [r2]	@ unaligned
 5272 29fa 1860     		str	r0, [r3]	@ unaligned
 5273 29fc 1279     		ldrb	r2, [r2, #4]
 5274 29fe 1A71     		strb	r2, [r3, #4]
 744:..\src/command_processing.c ****                         case 2: 
 5275              		.loc 1 744 0
 5276 2a00 11E0     		b	.L236
 5277              	.L234:
 746:..\src/command_processing.c ****                             break;
 5278              		.loc 1 746 0
 5279 2a02 07F13003 		add	r3, r7, #48
 5280 2a06 103B     		subs	r3, r3, #16
 5281 2a08 1846     		mov	r0, r3
 5282 2a0a FFF7FEFF 		bl	strlen
 5283 2a0e 0346     		mov	r3, r0
 5284 2a10 1A46     		mov	r2, r3
 5285 2a12 07F13003 		add	r3, r7, #48
 5286 2a16 103B     		subs	r3, r3, #16
 5287 2a18 1344     		add	r3, r3, r2
 5288 2a1a 914A     		ldr	r2, .L290+20
 5289 2a1c 1068     		ldr	r0, [r2]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 125


 5290 2a1e 1860     		str	r0, [r3]	@ unaligned
 5291 2a20 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5292 2a22 9A80     		strh	r2, [r3, #4]	@ unaligned
 747:..\src/command_processing.c ****                         default:
 5293              		.loc 1 747 0
 5294 2a24 00BF     		nop
 5295              	.L236:
 750:..\src/command_processing.c ****                     } 
 751:..\src/command_processing.c ****                     break;
 5296              		.loc 1 751 0 discriminator 12
 5297 2a26 A9E1     		b	.L187
 5298              	.L196:
 752:..\src/command_processing.c ****                 case 8:     // user menu          
 753:..\src/command_processing.c ****                     switch(*m_addr){
 5299              		.loc 1 753 0
 5300 2a28 07F5B853 		add	r3, r7, #5888
 5301 2a2c 1B68     		ldr	r3, [r3]
 5302 2a2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5303 2a30 012B     		cmp	r3, #1
 5304 2a32 1AD0     		beq	.L238
 5305 2a34 022B     		cmp	r3, #2
 5306 2a36 2CD0     		beq	.L239
 5307 2a38 002B     		cmp	r3, #0
 5308 2a3a 00D0     		beq	.L240
 754:..\src/command_processing.c ****                         case GENERIC_USER:
 755:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC USER\0");
 756:..\src/command_processing.c ****                         break;
 757:..\src/command_processing.c ****                         case MARIA:
 758:..\src/command_processing.c ****                             strcat(aux_str, " MARIA\0");
 759:..\src/command_processing.c ****                         break;
 760:..\src/command_processing.c ****                         case ROZA:
 761:..\src/command_processing.c ****                             strcat(aux_str, " ROZA\0");
 762:..\src/command_processing.c ****                         break;
 763:..\src/command_processing.c ****                     }   
 764:..\src/command_processing.c ****                     break;                    
 5309              		.loc 1 764 0
 5310 2a3c 9EE1     		b	.L187
 5311              	.L240:
 755:..\src/command_processing.c ****                         break;
 5312              		.loc 1 755 0
 5313 2a3e 07F13003 		add	r3, r7, #48
 5314 2a42 103B     		subs	r3, r3, #16
 5315 2a44 1846     		mov	r0, r3
 5316 2a46 FFF7FEFF 		bl	strlen
 5317 2a4a 0346     		mov	r3, r0
 5318 2a4c 1A46     		mov	r2, r3
 5319 2a4e 07F13003 		add	r3, r7, #48
 5320 2a52 103B     		subs	r3, r3, #16
 5321 2a54 1344     		add	r3, r3, r2
 5322 2a56 834A     		ldr	r2, .L290+24
 5323 2a58 1C46     		mov	r4, r3
 5324 2a5a 1346     		mov	r3, r2
 5325 2a5c 07CB     		ldmia	r3!, {r0, r1, r2}
 5326 2a5e 2060     		str	r0, [r4]	@ unaligned
 5327 2a60 6160     		str	r1, [r4, #4]	@ unaligned
 5328 2a62 A260     		str	r2, [r4, #8]	@ unaligned
 5329 2a64 1B88     		ldrh	r3, [r3]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 126


 5330 2a66 A381     		strh	r3, [r4, #12]	@ unaligned
 756:..\src/command_processing.c ****                         case MARIA:
 5331              		.loc 1 756 0
 5332 2a68 25E0     		b	.L237
 5333              	.L238:
 758:..\src/command_processing.c ****                         break;
 5334              		.loc 1 758 0
 5335 2a6a 07F13003 		add	r3, r7, #48
 5336 2a6e 103B     		subs	r3, r3, #16
 5337 2a70 1846     		mov	r0, r3
 5338 2a72 FFF7FEFF 		bl	strlen
 5339 2a76 0346     		mov	r3, r0
 5340 2a78 1A46     		mov	r2, r3
 5341 2a7a 07F13003 		add	r3, r7, #48
 5342 2a7e 103B     		subs	r3, r3, #16
 5343 2a80 1344     		add	r3, r3, r2
 5344 2a82 794A     		ldr	r2, .L290+28
 5345 2a84 1068     		ldr	r0, [r2]	@ unaligned
 5346 2a86 1860     		str	r0, [r3]	@ unaligned
 5347 2a88 9188     		ldrh	r1, [r2, #4]	@ unaligned
 5348 2a8a 9279     		ldrb	r2, [r2, #6]
 5349 2a8c 9980     		strh	r1, [r3, #4]	@ unaligned
 5350 2a8e 9A71     		strb	r2, [r3, #6]
 759:..\src/command_processing.c ****                         case ROZA:
 5351              		.loc 1 759 0
 5352 2a90 11E0     		b	.L237
 5353              	.L239:
 761:..\src/command_processing.c ****                         break;
 5354              		.loc 1 761 0
 5355 2a92 07F13003 		add	r3, r7, #48
 5356 2a96 103B     		subs	r3, r3, #16
 5357 2a98 1846     		mov	r0, r3
 5358 2a9a FFF7FEFF 		bl	strlen
 5359 2a9e 0346     		mov	r3, r0
 5360 2aa0 1A46     		mov	r2, r3
 5361 2aa2 07F13003 		add	r3, r7, #48
 5362 2aa6 103B     		subs	r3, r3, #16
 5363 2aa8 1344     		add	r3, r3, r2
 5364 2aaa 704A     		ldr	r2, .L290+32
 5365 2aac 1068     		ldr	r0, [r2]	@ unaligned
 5366 2aae 1860     		str	r0, [r3]	@ unaligned
 5367 2ab0 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5368 2ab2 9A80     		strh	r2, [r3, #4]	@ unaligned
 762:..\src/command_processing.c ****                     }   
 5369              		.loc 1 762 0
 5370 2ab4 00BF     		nop
 5371              	.L237:
 5372              		.loc 1 764 0
 5373 2ab6 61E1     		b	.L187
 5374              	.L197:
 765:..\src/command_processing.c ****                 case 9:     // driver type menu
 766:..\src/command_processing.c ****                     switch(*m_addr){
 5375              		.loc 1 766 0
 5376 2ab8 07F5B853 		add	r3, r7, #5888
 5377 2abc 1B68     		ldr	r3, [r3]
 5378 2abe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5379 2ac0 002B     		cmp	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 127


 5380 2ac2 02D0     		beq	.L242
 5381 2ac4 012B     		cmp	r3, #1
 5382 2ac6 17D0     		beq	.L243
 767:..\src/command_processing.c ****                         case 0:
 768:..\src/command_processing.c ****                             strcat(aux_str, " MC33887 (Standard)\0");
 769:..\src/command_processing.c ****                         break;
 770:..\src/command_processing.c ****                         case 1:
 771:..\src/command_processing.c ****                             strcat(aux_str, " VNH5019 (High power)\0");
 772:..\src/command_processing.c ****                         break;
 773:..\src/command_processing.c ****                     }
 774:..\src/command_processing.c ****                     break;
 5383              		.loc 1 774 0
 5384 2ac8 58E1     		b	.L187
 5385              	.L242:
 768:..\src/command_processing.c ****                         break;
 5386              		.loc 1 768 0
 5387 2aca 07F13003 		add	r3, r7, #48
 5388 2ace 103B     		subs	r3, r3, #16
 5389 2ad0 1846     		mov	r0, r3
 5390 2ad2 FFF7FEFF 		bl	strlen
 5391 2ad6 0346     		mov	r3, r0
 5392 2ad8 1A46     		mov	r2, r3
 5393 2ada 07F13003 		add	r3, r7, #48
 5394 2ade 103B     		subs	r3, r3, #16
 5395 2ae0 1344     		add	r3, r3, r2
 5396 2ae2 634A     		ldr	r2, .L290+36
 5397 2ae4 1D46     		mov	r5, r3
 5398 2ae6 1446     		mov	r4, r2
 5399 2ae8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5400 2aea 2860     		str	r0, [r5]	@ unaligned
 5401 2aec 6960     		str	r1, [r5, #4]	@ unaligned
 5402 2aee AA60     		str	r2, [r5, #8]	@ unaligned
 5403 2af0 EB60     		str	r3, [r5, #12]	@ unaligned
 5404 2af2 2068     		ldr	r0, [r4]	@ unaligned
 5405 2af4 2861     		str	r0, [r5, #16]	@ unaligned
 769:..\src/command_processing.c ****                         case 1:
 5406              		.loc 1 769 0
 5407 2af6 18E0     		b	.L241
 5408              	.L243:
 771:..\src/command_processing.c ****                         break;
 5409              		.loc 1 771 0
 5410 2af8 07F13003 		add	r3, r7, #48
 5411 2afc 103B     		subs	r3, r3, #16
 5412 2afe 1846     		mov	r0, r3
 5413 2b00 FFF7FEFF 		bl	strlen
 5414 2b04 0346     		mov	r3, r0
 5415 2b06 1A46     		mov	r2, r3
 5416 2b08 07F13003 		add	r3, r7, #48
 5417 2b0c 103B     		subs	r3, r3, #16
 5418 2b0e 1344     		add	r3, r3, r2
 5419 2b10 584A     		ldr	r2, .L290+40
 5420 2b12 1D46     		mov	r5, r3
 5421 2b14 1446     		mov	r4, r2
 5422 2b16 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5423 2b18 2860     		str	r0, [r5]	@ unaligned
 5424 2b1a 6960     		str	r1, [r5, #4]	@ unaligned
 5425 2b1c AA60     		str	r2, [r5, #8]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 128


 5426 2b1e EB60     		str	r3, [r5, #12]	@ unaligned
 5427 2b20 2068     		ldr	r0, [r4]	@ unaligned
 5428 2b22 2861     		str	r0, [r5, #16]	@ unaligned
 5429 2b24 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5430 2b26 AB82     		strh	r3, [r5, #20]	@ unaligned
 772:..\src/command_processing.c ****                     }
 5431              		.loc 1 772 0
 5432 2b28 00BF     		nop
 5433              	.L241:
 5434              		.loc 1 774 0
 5435 2b2a 27E1     		b	.L187
 5436              	.L198:
 775:..\src/command_processing.c ****                 case 10:    // device type menu
 776:..\src/command_processing.c ****                     switch(*m_addr){
 5437              		.loc 1 776 0
 5438 2b2c 07F5B853 		add	r3, r7, #5888
 5439 2b30 1B68     		ldr	r3, [r3]
 5440 2b32 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5441 2b34 042B     		cmp	r3, #4
 5442 2b36 00F22081 		bhi	.L271
 5443 2b3a 01A2     		adr	r2, .L246
 5444 2b3c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5445              		.p2align 2
 5446              	.L246:
 5447 2b40 552B0000 		.word	.L245+1
 5448 2b44 812B0000 		.word	.L247+1
 5449 2b48 AF2B0000 		.word	.L248+1
 5450 2b4c DB2B0000 		.word	.L249+1
 5451 2b50 052C0000 		.word	.L250+1
 5452              		.p2align 1
 5453              	.L245:
 777:..\src/command_processing.c ****                         case 0:
 778:..\src/command_processing.c ****                             strcat(aux_str, " SOFTHAND PRO\0");
 5454              		.loc 1 778 0
 5455 2b54 07F13003 		add	r3, r7, #48
 5456 2b58 103B     		subs	r3, r3, #16
 5457 2b5a 1846     		mov	r0, r3
 5458 2b5c FFF7FEFF 		bl	strlen
 5459 2b60 0346     		mov	r3, r0
 5460 2b62 1A46     		mov	r2, r3
 5461 2b64 07F13003 		add	r3, r7, #48
 5462 2b68 103B     		subs	r3, r3, #16
 5463 2b6a 1344     		add	r3, r3, r2
 5464 2b6c 424A     		ldr	r2, .L290+44
 5465 2b6e 1C46     		mov	r4, r3
 5466 2b70 1346     		mov	r3, r2
 5467 2b72 07CB     		ldmia	r3!, {r0, r1, r2}
 5468 2b74 2060     		str	r0, [r4]	@ unaligned
 5469 2b76 6160     		str	r1, [r4, #4]	@ unaligned
 5470 2b78 A260     		str	r2, [r4, #8]	@ unaligned
 5471 2b7a 1B88     		ldrh	r3, [r3]	@ unaligned
 5472 2b7c A381     		strh	r3, [r4, #12]	@ unaligned
 779:..\src/command_processing.c ****                         break;
 5473              		.loc 1 779 0
 5474 2b7e 5BE0     		b	.L244
 5475              	.L247:
 780:..\src/command_processing.c ****                         case 1:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 129


 781:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC 2 MOTORS\0");
 5476              		.loc 1 781 0
 5477 2b80 07F13003 		add	r3, r7, #48
 5478 2b84 103B     		subs	r3, r3, #16
 5479 2b86 1846     		mov	r0, r3
 5480 2b88 FFF7FEFF 		bl	strlen
 5481 2b8c 0346     		mov	r3, r0
 5482 2b8e 1A46     		mov	r2, r3
 5483 2b90 07F13003 		add	r3, r7, #48
 5484 2b94 103B     		subs	r3, r3, #16
 5485 2b96 1344     		add	r3, r3, r2
 5486 2b98 384A     		ldr	r2, .L290+48
 5487 2b9a 1D46     		mov	r5, r3
 5488 2b9c 1446     		mov	r4, r2
 5489 2b9e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5490 2ba0 2860     		str	r0, [r5]	@ unaligned
 5491 2ba2 6960     		str	r1, [r5, #4]	@ unaligned
 5492 2ba4 AA60     		str	r2, [r5, #8]	@ unaligned
 5493 2ba6 EB60     		str	r3, [r5, #12]	@ unaligned
 5494 2ba8 2388     		ldrh	r3, [r4]	@ unaligned
 5495 2baa 2B82     		strh	r3, [r5, #16]	@ unaligned
 782:..\src/command_processing.c ****                         break;
 5496              		.loc 1 782 0
 5497 2bac 44E0     		b	.L244
 5498              	.L248:
 783:..\src/command_processing.c ****                         case 2:
 784:..\src/command_processing.c ****                             strcat(aux_str, " AIR CHAMBERS\0");
 5499              		.loc 1 784 0
 5500 2bae 07F13003 		add	r3, r7, #48
 5501 2bb2 103B     		subs	r3, r3, #16
 5502 2bb4 1846     		mov	r0, r3
 5503 2bb6 FFF7FEFF 		bl	strlen
 5504 2bba 0346     		mov	r3, r0
 5505 2bbc 1A46     		mov	r2, r3
 5506 2bbe 07F13003 		add	r3, r7, #48
 5507 2bc2 103B     		subs	r3, r3, #16
 5508 2bc4 1344     		add	r3, r3, r2
 5509 2bc6 2E4A     		ldr	r2, .L290+52
 5510 2bc8 1C46     		mov	r4, r3
 5511 2bca 1346     		mov	r3, r2
 5512 2bcc 07CB     		ldmia	r3!, {r0, r1, r2}
 5513 2bce 2060     		str	r0, [r4]	@ unaligned
 5514 2bd0 6160     		str	r1, [r4, #4]	@ unaligned
 5515 2bd2 A260     		str	r2, [r4, #8]	@ unaligned
 5516 2bd4 1B88     		ldrh	r3, [r3]	@ unaligned
 5517 2bd6 A381     		strh	r3, [r4, #12]	@ unaligned
 785:..\src/command_processing.c ****                         break;
 5518              		.loc 1 785 0
 5519 2bd8 2EE0     		b	.L244
 5520              	.L249:
 786:..\src/command_processing.c ****                         case 3:
 787:..\src/command_processing.c ****                             strcat(aux_str, " OTTOBOCK WRIST\0");
 5521              		.loc 1 787 0
 5522 2bda 07F13003 		add	r3, r7, #48
 5523 2bde 103B     		subs	r3, r3, #16
 5524 2be0 1846     		mov	r0, r3
 5525 2be2 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 130


 5526 2be6 0346     		mov	r3, r0
 5527 2be8 1A46     		mov	r2, r3
 5528 2bea 07F13003 		add	r3, r7, #48
 5529 2bee 103B     		subs	r3, r3, #16
 5530 2bf0 1344     		add	r3, r3, r2
 5531 2bf2 244A     		ldr	r2, .L290+56
 5532 2bf4 1C46     		mov	r4, r3
 5533 2bf6 1546     		mov	r5, r2
 5534 2bf8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5535 2bfa 2060     		str	r0, [r4]	@ unaligned
 5536 2bfc 6160     		str	r1, [r4, #4]	@ unaligned
 5537 2bfe A260     		str	r2, [r4, #8]	@ unaligned
 5538 2c00 E360     		str	r3, [r4, #12]	@ unaligned
 788:..\src/command_processing.c ****                         break;
 5539              		.loc 1 788 0
 5540 2c02 19E0     		b	.L244
 5541              	.L250:
 789:..\src/command_processing.c ****                         case 4:
 790:..\src/command_processing.c ****                             strcat(aux_str, " SOFTHAND 2 MOTORS\0");
 5542              		.loc 1 790 0
 5543 2c04 07F13003 		add	r3, r7, #48
 5544 2c08 103B     		subs	r3, r3, #16
 5545 2c0a 1846     		mov	r0, r3
 5546 2c0c FFF7FEFF 		bl	strlen
 5547 2c10 0346     		mov	r3, r0
 5548 2c12 1A46     		mov	r2, r3
 5549 2c14 07F13003 		add	r3, r7, #48
 5550 2c18 103B     		subs	r3, r3, #16
 5551 2c1a 1344     		add	r3, r3, r2
 5552 2c1c 1A4A     		ldr	r2, .L290+60
 5553 2c1e 1D46     		mov	r5, r3
 5554 2c20 1446     		mov	r4, r2
 5555 2c22 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5556 2c24 2860     		str	r0, [r5]	@ unaligned
 5557 2c26 6960     		str	r1, [r5, #4]	@ unaligned
 5558 2c28 AA60     		str	r2, [r5, #8]	@ unaligned
 5559 2c2a EB60     		str	r3, [r5, #12]	@ unaligned
 5560 2c2c 2388     		ldrh	r3, [r4]	@ unaligned
 5561 2c2e A278     		ldrb	r2, [r4, #2]
 5562 2c30 2B82     		strh	r3, [r5, #16]	@ unaligned
 5563 2c32 1346     		mov	r3, r2
 5564 2c34 AB74     		strb	r3, [r5, #18]
 791:..\src/command_processing.c ****                         break;
 5565              		.loc 1 791 0
 5566 2c36 00BF     		nop
 5567              	.L244:
 792:..\src/command_processing.c ****                     }
 793:..\src/command_processing.c ****                     break;
 5568              		.loc 1 793 0
 5569 2c38 9FE0     		b	.L271
 5570              	.L199:
 794:..\src/command_processing.c ****                 case 11:    // wrist activation mode menu
 795:..\src/command_processing.c ****                     switch(*m_addr){
 5571              		.loc 1 795 0
 5572 2c3a 07F5B853 		add	r3, r7, #5888
 5573 2c3e 1B68     		ldr	r3, [r3]
 5574 2c40 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 131


 5575 2c42 002B     		cmp	r3, #0
 5576 2c44 22D0     		beq	.L252
 5577 2c46 012B     		cmp	r3, #1
 5578 2c48 3CD0     		beq	.L253
 796:..\src/command_processing.c ****                         case 0:
 797:..\src/command_processing.c ****                             strcat(aux_str, " Fast:wrist, Slow:hand\0");
 798:..\src/command_processing.c ****                         break;
 799:..\src/command_processing.c ****                         case 1:
 800:..\src/command_processing.c ****                             strcat(aux_str, " Slow:wrist, Fast:hand\0");
 801:..\src/command_processing.c ****                         break;
 802:..\src/command_processing.c ****                     }
 803:..\src/command_processing.c ****                     break;
 5579              		.loc 1 803 0
 5580 2c4a 97E0     		b	.L187
 5581              	.L291:
 5582              		.align	2
 5583              	.L290:
 5584 2c4c EC000000 		.word	.LC105
 5585 2c50 F4000000 		.word	.LC106
 5586 2c54 04010000 		.word	.LC107
 5587 2c58 18010000 		.word	.LC108
 5588 2c5c 28010000 		.word	.LC109
 5589 2c60 30010000 		.word	.LC110
 5590 2c64 38010000 		.word	.LC111
 5591 2c68 48010000 		.word	.LC112
 5592 2c6c 50010000 		.word	.LC113
 5593 2c70 58010000 		.word	.LC114
 5594 2c74 70010000 		.word	.LC115
 5595 2c78 88010000 		.word	.LC116
 5596 2c7c 98010000 		.word	.LC117
 5597 2c80 AC010000 		.word	.LC118
 5598 2c84 BC010000 		.word	.LC119
 5599 2c88 D0010000 		.word	.LC120
 5600              	.L252:
 797:..\src/command_processing.c ****                         break;
 5601              		.loc 1 797 0
 5602 2c8c 07F13003 		add	r3, r7, #48
 5603 2c90 103B     		subs	r3, r3, #16
 5604 2c92 1846     		mov	r0, r3
 5605 2c94 FFF7FEFF 		bl	strlen
 5606 2c98 0346     		mov	r3, r0
 5607 2c9a 1A46     		mov	r2, r3
 5608 2c9c 07F13003 		add	r3, r7, #48
 5609 2ca0 103B     		subs	r3, r3, #16
 5610 2ca2 1344     		add	r3, r3, r2
 5611 2ca4 D34A     		ldr	r2, .L292
 5612 2ca6 1C46     		mov	r4, r3
 5613 2ca8 1546     		mov	r5, r2
 5614 2caa 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5615 2cac 2060     		str	r0, [r4]	@ unaligned
 5616 2cae 6160     		str	r1, [r4, #4]	@ unaligned
 5617 2cb0 A260     		str	r2, [r4, #8]	@ unaligned
 5618 2cb2 E360     		str	r3, [r4, #12]	@ unaligned
 5619 2cb4 2868     		ldr	r0, [r5]	@ unaligned
 5620 2cb6 2061     		str	r0, [r4, #16]	@ unaligned
 5621 2cb8 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 5622 2cba AA79     		ldrb	r2, [r5, #6]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 132


 5623 2cbc A382     		strh	r3, [r4, #20]	@ unaligned
 5624 2cbe 1346     		mov	r3, r2
 5625 2cc0 A375     		strb	r3, [r4, #22]
 798:..\src/command_processing.c ****                         case 1:
 5626              		.loc 1 798 0
 5627 2cc2 1BE0     		b	.L251
 5628              	.L253:
 800:..\src/command_processing.c ****                         break;
 5629              		.loc 1 800 0
 5630 2cc4 07F13003 		add	r3, r7, #48
 5631 2cc8 103B     		subs	r3, r3, #16
 5632 2cca 1846     		mov	r0, r3
 5633 2ccc FFF7FEFF 		bl	strlen
 5634 2cd0 0346     		mov	r3, r0
 5635 2cd2 1A46     		mov	r2, r3
 5636 2cd4 07F13003 		add	r3, r7, #48
 5637 2cd8 103B     		subs	r3, r3, #16
 5638 2cda 1344     		add	r3, r3, r2
 5639 2cdc C64A     		ldr	r2, .L292+4
 5640 2cde 1C46     		mov	r4, r3
 5641 2ce0 1546     		mov	r5, r2
 5642 2ce2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5643 2ce4 2060     		str	r0, [r4]	@ unaligned
 5644 2ce6 6160     		str	r1, [r4, #4]	@ unaligned
 5645 2ce8 A260     		str	r2, [r4, #8]	@ unaligned
 5646 2cea E360     		str	r3, [r4, #12]	@ unaligned
 5647 2cec 2868     		ldr	r0, [r5]	@ unaligned
 5648 2cee 2061     		str	r0, [r4, #16]	@ unaligned
 5649 2cf0 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 5650 2cf2 AA79     		ldrb	r2, [r5, #6]
 5651 2cf4 A382     		strh	r3, [r4, #20]	@ unaligned
 5652 2cf6 1346     		mov	r3, r2
 5653 2cf8 A375     		strb	r3, [r4, #22]
 801:..\src/command_processing.c ****                     }
 5654              		.loc 1 801 0
 5655 2cfa 00BF     		nop
 5656              	.L251:
 5657              		.loc 1 803 0
 5658 2cfc 3EE0     		b	.L187
 5659              	.L200:
 804:..\src/command_processing.c ****                 case 12:    // wrist activation mode menu
 805:..\src/command_processing.c ****                     switch(*m_addr){
 5660              		.loc 1 805 0
 5661 2cfe 07F5B853 		add	r3, r7, #5888
 5662 2d02 1B68     		ldr	r3, [r3]
 5663 2d04 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5664 2d06 002B     		cmp	r3, #0
 5665 2d08 02D0     		beq	.L255
 5666 2d0a 012B     		cmp	r3, #1
 5667 2d0c 17D0     		beq	.L256
 806:..\src/command_processing.c ****                         case 0:
 807:..\src/command_processing.c ****                             strcat(aux_str, " Close:CW, Open:CCW\0");
 808:..\src/command_processing.c ****                         break;
 809:..\src/command_processing.c ****                         case 1:
 810:..\src/command_processing.c ****                             strcat(aux_str, " Close:CCW, Open:CW\0");
 811:..\src/command_processing.c ****                         break;
 812:..\src/command_processing.c ****                     }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 133


 813:..\src/command_processing.c ****                     break;
 5668              		.loc 1 813 0
 5669 2d0e 35E0     		b	.L187
 5670              	.L255:
 807:..\src/command_processing.c ****                         break;
 5671              		.loc 1 807 0
 5672 2d10 07F13003 		add	r3, r7, #48
 5673 2d14 103B     		subs	r3, r3, #16
 5674 2d16 1846     		mov	r0, r3
 5675 2d18 FFF7FEFF 		bl	strlen
 5676 2d1c 0346     		mov	r3, r0
 5677 2d1e 1A46     		mov	r2, r3
 5678 2d20 07F13003 		add	r3, r7, #48
 5679 2d24 103B     		subs	r3, r3, #16
 5680 2d26 1344     		add	r3, r3, r2
 5681 2d28 B44A     		ldr	r2, .L292+8
 5682 2d2a 1D46     		mov	r5, r3
 5683 2d2c 1446     		mov	r4, r2
 5684 2d2e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5685 2d30 2860     		str	r0, [r5]	@ unaligned
 5686 2d32 6960     		str	r1, [r5, #4]	@ unaligned
 5687 2d34 AA60     		str	r2, [r5, #8]	@ unaligned
 5688 2d36 EB60     		str	r3, [r5, #12]	@ unaligned
 5689 2d38 2068     		ldr	r0, [r4]	@ unaligned
 5690 2d3a 2861     		str	r0, [r5, #16]	@ unaligned
 808:..\src/command_processing.c ****                         case 1:
 5691              		.loc 1 808 0
 5692 2d3c 16E0     		b	.L254
 5693              	.L256:
 810:..\src/command_processing.c ****                         break;
 5694              		.loc 1 810 0
 5695 2d3e 07F13003 		add	r3, r7, #48
 5696 2d42 103B     		subs	r3, r3, #16
 5697 2d44 1846     		mov	r0, r3
 5698 2d46 FFF7FEFF 		bl	strlen
 5699 2d4a 0346     		mov	r3, r0
 5700 2d4c 1A46     		mov	r2, r3
 5701 2d4e 07F13003 		add	r3, r7, #48
 5702 2d52 103B     		subs	r3, r3, #16
 5703 2d54 1344     		add	r3, r3, r2
 5704 2d56 AA4A     		ldr	r2, .L292+12
 5705 2d58 1D46     		mov	r5, r3
 5706 2d5a 1446     		mov	r4, r2
 5707 2d5c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5708 2d5e 2860     		str	r0, [r5]	@ unaligned
 5709 2d60 6960     		str	r1, [r5, #4]	@ unaligned
 5710 2d62 AA60     		str	r2, [r5, #8]	@ unaligned
 5711 2d64 EB60     		str	r3, [r5, #12]	@ unaligned
 5712 2d66 2068     		ldr	r0, [r4]	@ unaligned
 5713 2d68 2861     		str	r0, [r5, #16]	@ unaligned
 811:..\src/command_processing.c ****                     }
 5714              		.loc 1 811 0
 5715 2d6a 00BF     		nop
 5716              	.L254:
 5717              		.loc 1 813 0
 5718 2d6c 06E0     		b	.L187
 5719              	.L268:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 134


 676:..\src/command_processing.c ****                 case 2:     // control mode menu
 5720              		.loc 1 676 0
 5721 2d6e 00BF     		nop
 5722 2d70 04E0     		b	.L187
 5723              	.L269:
 692:..\src/command_processing.c ****                 case 3:     // yes/no menu
 5724              		.loc 1 692 0
 5725 2d72 00BF     		nop
 5726 2d74 02E0     		b	.L187
 5727              	.L270:
 736:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 5728              		.loc 1 736 0
 5729 2d76 00BF     		nop
 5730 2d78 00E0     		b	.L187
 5731              	.L271:
 793:..\src/command_processing.c ****                 case 11:    // wrist activation mode menu
 5732              		.loc 1 793 0
 5733 2d7a 00BF     		nop
 5734              	.L187:
 814:..\src/command_processing.c ****             }
 815:..\src/command_processing.c ****             //Recomputes string lenght
 816:..\src/command_processing.c ****             string_lenght = strlen(aux_str)+1;
 5735              		.loc 1 816 0
 5736 2d7c 07F13003 		add	r3, r7, #48
 5737 2d80 103B     		subs	r3, r3, #16
 5738 2d82 1846     		mov	r0, r3
 5739 2d84 FFF7FEFF 		bl	strlen
 5740 2d88 0346     		mov	r3, r0
 5741 2d8a DBB2     		uxtb	r3, r3
 5742 2d8c 0133     		adds	r3, r3, #1
 5743 2d8e 07F5B852 		add	r2, r7, #5888
 5744 2d92 02F10A02 		add	r2, r2, #10
 5745 2d96 1370     		strb	r3, [r2]
 5746              	.L186:
 817:..\src/command_processing.c ****         }
 818:..\src/command_processing.c **** 
 819:..\src/command_processing.c ****         // Add parameter string to packet
 820:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 5747              		.loc 1 820 0
 5748 2d98 07F5B853 		add	r3, r7, #5888
 5749 2d9c 03F10A03 		add	r3, r3, #10
 5750 2da0 1B78     		ldrb	r3, [r3]
 5751 2da2 07F5B852 		add	r2, r7, #5888
 5752 2da6 02F10F02 		add	r2, r2, #15
 5753 2daa 1370     		strb	r3, [r2]
 5754 2dac 45E0     		b	.L257
 5755              	.L258:
 821:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 5756              		.loc 1 821 0 discriminator 3
 5757 2dae 07F5B853 		add	r3, r7, #5888
 5758 2db2 03F10D03 		add	r3, r3, #13
 5759 2db6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5760 2db8 3222     		movs	r2, #50
 5761 2dba 02FB03F3 		mul	r3, r2, r3
 5762 2dbe 1A1D     		adds	r2, r3, #4
 5763 2dc0 07F5B853 		add	r3, r7, #5888
 5764 2dc4 03F10B03 		add	r3, r3, #11
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 135


 5765 2dc8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5766 2dca 07F5B853 		add	r3, r7, #5888
 5767 2dce 03F10D03 		add	r3, r3, #13
 5768 2dd2 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5769 2dd4 07F11003 		add	r3, r7, #16
 5770 2dd8 0C3B     		subs	r3, r3, #12
 5771 2dda 1B68     		ldr	r3, [r3]
 5772 2ddc 0344     		add	r3, r3, r0
 5773 2dde 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5774 2de0 03FB01F3 		mul	r3, r3, r1
 5775 2de4 1A44     		add	r2, r2, r3
 5776 2de6 07F5B853 		add	r3, r7, #5888
 5777 2dea 03F10A03 		add	r3, r3, #10
 5778 2dee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5779 2df0 1A44     		add	r2, r2, r3
 5780 2df2 07F5B853 		add	r3, r7, #5888
 5781 2df6 03F10F03 		add	r3, r3, #15
 5782 2dfa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5783 2dfc D21A     		subs	r2, r2, r3
 5784 2dfe 07F5B853 		add	r3, r7, #5888
 5785 2e02 03F10A03 		add	r3, r3, #10
 5786 2e06 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5787 2e08 07F5B853 		add	r3, r7, #5888
 5788 2e0c 03F10F03 		add	r3, r3, #15
 5789 2e10 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5790 2e12 C91A     		subs	r1, r1, r3
 5791 2e14 07F13003 		add	r3, r7, #48
 5792 2e18 103B     		subs	r3, r3, #16
 5793 2e1a 595C     		ldrb	r1, [r3, r1]	@ zero_extendqisi2
 5794 2e1c 07F17003 		add	r3, r7, #112
 5795 2e20 1C3B     		subs	r3, r3, #28
 5796 2e22 9954     		strb	r1, [r3, r2]
 820:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 5797              		.loc 1 820 0 discriminator 3
 5798 2e24 07F5B853 		add	r3, r7, #5888
 5799 2e28 03F10F03 		add	r3, r3, #15
 5800 2e2c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5801 2e2e 013B     		subs	r3, r3, #1
 5802 2e30 07F5B852 		add	r2, r7, #5888
 5803 2e34 02F10F02 		add	r2, r2, #15
 5804 2e38 1370     		strb	r3, [r2]
 5805              	.L257:
 820:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 5806              		.loc 1 820 0 is_stmt 0 discriminator 1
 5807 2e3a 07F5B853 		add	r3, r7, #5888
 5808 2e3e 03F10F03 		add	r3, r3, #15
 5809 2e42 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5810 2e44 002B     		cmp	r3, #0
 5811 2e46 B2D1     		bne	.L258
 822:..\src/command_processing.c ****         //The following byte indicates the number of menus at the end of the packet to send
 823:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 5812              		.loc 1 823 0 is_stmt 1
 5813 2e48 07F5B853 		add	r3, r7, #5888
 5814 2e4c 03F10D03 		add	r3, r3, #13
 5815 2e50 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5816 2e52 07F11003 		add	r3, r7, #16
 5817 2e56 083B     		subs	r3, r3, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 136


 5818 2e58 1B68     		ldr	r3, [r3]
 5819 2e5a 1344     		add	r3, r3, r2
 5820 2e5c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5821 2e5e 002B     		cmp	r3, #0
 5822 2e60 3CD1     		bne	.L259
 824:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght] = NUM_MEN
 5823              		.loc 1 824 0
 5824 2e62 07F5B853 		add	r3, r7, #5888
 5825 2e66 03F10D03 		add	r3, r3, #13
 5826 2e6a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5827 2e6c 3222     		movs	r2, #50
 5828 2e6e 02FB03F3 		mul	r3, r2, r3
 5829 2e72 1A1D     		adds	r2, r3, #4
 5830 2e74 07F5B853 		add	r3, r7, #5888
 5831 2e78 03F10B03 		add	r3, r3, #11
 5832 2e7c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5833 2e7e 07F5B853 		add	r3, r7, #5888
 5834 2e82 03F10D03 		add	r3, r3, #13
 5835 2e86 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5836 2e88 07F11003 		add	r3, r7, #16
 5837 2e8c 0C3B     		subs	r3, r3, #12
 5838 2e8e 1B68     		ldr	r3, [r3]
 5839 2e90 0344     		add	r3, r3, r0
 5840 2e92 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5841 2e94 03FB01F3 		mul	r3, r3, r1
 5842 2e98 1A44     		add	r2, r2, r3
 5843 2e9a 07F5B853 		add	r3, r7, #5888
 5844 2e9e 03F10A03 		add	r3, r3, #10
 5845 2ea2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5846 2ea4 1A44     		add	r2, r2, r3
 5847 2ea6 07F5B853 		add	r3, r7, #5888
 5848 2eaa 03F10C03 		add	r3, r3, #12
 5849 2eae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5850 2eb0 07F5B951 		add	r1, r7, #5920
 5851 2eb4 01F10801 		add	r1, r1, #8
 5852 2eb8 0968     		ldr	r1, [r1]
 5853 2eba 0B44     		add	r3, r3, r1
 5854 2ebc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5855 2ebe 07F17003 		add	r3, r7, #112
 5856 2ec2 1C3B     		subs	r3, r3, #28
 5857 2ec4 9954     		strb	r1, [r3, r2]
 825:..\src/command_processing.c ****             idx_menu = idx_menu + 1;
 5858              		.loc 1 825 0
 5859 2ec6 07F5B853 		add	r3, r7, #5888
 5860 2eca 03F10C03 		add	r3, r3, #12
 5861 2ece 1B78     		ldrb	r3, [r3]
 5862 2ed0 0133     		adds	r3, r3, #1
 5863 2ed2 07F5B852 		add	r2, r7, #5888
 5864 2ed6 02F10C02 		add	r2, r2, #12
 5865 2eda 1370     		strb	r3, [r2]
 5866              	.L259:
 826:..\src/command_processing.c ****         }      
 827:..\src/command_processing.c ****         
 828:..\src/command_processing.c ****         // Add struct index after an empty bit
 829:..\src/command_processing.c ****         // Note: added here at the end of packets is transparent to old parameters retrieving versi
 830:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 5867              		.loc 1 830 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 137


 5868 2edc 07F5B853 		add	r3, r7, #5888
 5869 2ee0 03F10D03 		add	r3, r3, #13
 5870 2ee4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5871 2ee6 07F11003 		add	r3, r7, #16
 5872 2eea 083B     		subs	r3, r3, #8
 5873 2eec 1B68     		ldr	r3, [r3]
 5874 2eee 1344     		add	r3, r3, r2
 5875 2ef0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5876 2ef2 002B     		cmp	r3, #0
 5877 2ef4 32D1     		bne	.L260
 831:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght + 2] = NUM
 5878              		.loc 1 831 0
 5879 2ef6 07F5B853 		add	r3, r7, #5888
 5880 2efa 03F10D03 		add	r3, r3, #13
 5881 2efe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5882 2f00 3222     		movs	r2, #50
 5883 2f02 02FB03F3 		mul	r3, r2, r3
 5884 2f06 1A1D     		adds	r2, r3, #4
 5885 2f08 07F5B853 		add	r3, r7, #5888
 5886 2f0c 03F10B03 		add	r3, r3, #11
 5887 2f10 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5888 2f12 07F5B853 		add	r3, r7, #5888
 5889 2f16 03F10D03 		add	r3, r3, #13
 5890 2f1a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5891 2f1c 07F11003 		add	r3, r7, #16
 5892 2f20 0C3B     		subs	r3, r3, #12
 5893 2f22 1B68     		ldr	r3, [r3]
 5894 2f24 0344     		add	r3, r3, r0
 5895 2f26 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5896 2f28 03FB01F3 		mul	r3, r3, r1
 5897 2f2c 1A44     		add	r2, r2, r3
 5898 2f2e 07F5B853 		add	r3, r7, #5888
 5899 2f32 03F10A03 		add	r3, r3, #10
 5900 2f36 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5901 2f38 1344     		add	r3, r3, r2
 5902 2f3a 9A1C     		adds	r2, r3, #2
 5903 2f3c 07F5B853 		add	r3, r7, #5888
 5904 2f40 03F10D03 		add	r3, r3, #13
 5905 2f44 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5906 2f46 07F11003 		add	r3, r7, #16
 5907 2f4a 103B     		subs	r3, r3, #16
 5908 2f4c 1B68     		ldr	r3, [r3]
 5909 2f4e 0B44     		add	r3, r3, r1
 5910 2f50 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5911 2f52 07F17003 		add	r3, r7, #112
 5912 2f56 1C3B     		subs	r3, r3, #28
 5913 2f58 9954     		strb	r1, [r3, r2]
 5914 2f5a 31E0     		b	.L261
 5915              	.L260:
 832:..\src/command_processing.c ****         }
 833:..\src/command_processing.c ****         else {
 834:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght + 1] = NUM
 5916              		.loc 1 834 0
 5917 2f5c 07F5B853 		add	r3, r7, #5888
 5918 2f60 03F10D03 		add	r3, r3, #13
 5919 2f64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5920 2f66 3222     		movs	r2, #50
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 138


 5921 2f68 02FB03F3 		mul	r3, r2, r3
 5922 2f6c 1A1D     		adds	r2, r3, #4
 5923 2f6e 07F5B853 		add	r3, r7, #5888
 5924 2f72 03F10B03 		add	r3, r3, #11
 5925 2f76 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5926 2f78 07F5B853 		add	r3, r7, #5888
 5927 2f7c 03F10D03 		add	r3, r3, #13
 5928 2f80 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5929 2f82 07F11003 		add	r3, r7, #16
 5930 2f86 0C3B     		subs	r3, r3, #12
 5931 2f88 1B68     		ldr	r3, [r3]
 5932 2f8a 0344     		add	r3, r3, r0
 5933 2f8c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5934 2f8e 03FB01F3 		mul	r3, r3, r1
 5935 2f92 1A44     		add	r2, r2, r3
 5936 2f94 07F5B853 		add	r3, r7, #5888
 5937 2f98 03F10A03 		add	r3, r3, #10
 5938 2f9c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5939 2f9e 1344     		add	r3, r3, r2
 5940 2fa0 5A1C     		adds	r2, r3, #1
 5941 2fa2 07F5B853 		add	r3, r7, #5888
 5942 2fa6 03F10D03 		add	r3, r3, #13
 5943 2faa 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5944 2fac 07F11003 		add	r3, r7, #16
 5945 2fb0 103B     		subs	r3, r3, #16
 5946 2fb2 1B68     		ldr	r3, [r3]
 5947 2fb4 0B44     		add	r3, r3, r1
 5948 2fb6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5949 2fb8 07F17003 		add	r3, r7, #112
 5950 2fbc 1C3B     		subs	r3, r3, #28
 5951 2fbe 9954     		strb	r1, [r3, r2]
 5952              	.L261:
 379:..\src/command_processing.c ****         
 5953              		.loc 1 379 0 discriminator 2
 5954 2fc0 07F5B853 		add	r3, r7, #5888
 5955 2fc4 03F10D03 		add	r3, r3, #13
 5956 2fc8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5957 2fca 0133     		adds	r3, r3, #1
 5958 2fcc 07F5B852 		add	r2, r7, #5888
 5959 2fd0 02F10D02 		add	r2, r2, #13
 5960 2fd4 1370     		strb	r3, [r2]
 5961              	.L64:
 379:..\src/command_processing.c ****         
 5962              		.loc 1 379 0 is_stmt 0 discriminator 1
 5963 2fd6 07F5B853 		add	r3, r7, #5888
 5964 2fda 03F10D03 		add	r3, r3, #13
 5965 2fde 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5966 2fe0 4E2B     		cmp	r3, #78
 5967 2fe2 7DF680A8 		bls	.L262
 835:..\src/command_processing.c ****         }
 836:..\src/command_processing.c ****     }
 837:..\src/command_processing.c **** 
 838:..\src/command_processing.c ****     // Add menu
 839:..\src/command_processing.c ****     for (j = 0; j < NUM_OF_DEV_PARAM_MENUS; j++) {
 5968              		.loc 1 839 0 is_stmt 1
 5969 2fe6 0023     		movs	r3, #0
 5970 2fe8 07F5B852 		add	r2, r7, #5888
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 139


 5971 2fec 02F10E02 		add	r2, r2, #14
 5972 2ff0 1370     		strb	r3, [r2]
 5973 2ff2 79E0     		b	.L263
 5974              	.L293:
 5975              		.align	2
 5976              	.L292:
 5977 2ff4 E4010000 		.word	.LC121
 5978 2ff8 FC010000 		.word	.LC122
 5979 2ffc 14020000 		.word	.LC123
 5980 3000 2C020000 		.word	.LC124
 5981              	.L266:
 840:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 5982              		.loc 1 840 0
 5983 3004 07F5B853 		add	r3, r7, #5888
 5984 3008 03F10E03 		add	r3, r3, #14
 5985 300c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5986 300e 9B00     		lsls	r3, r3, #2
 5987 3010 07F5B952 		add	r2, r7, #5920
 5988 3014 02F11402 		add	r2, r2, #20
 5989 3018 1268     		ldr	r2, [r2]
 5990 301a 1344     		add	r3, r3, r2
 5991 301c 1B68     		ldr	r3, [r3]
 5992 301e 1846     		mov	r0, r3
 5993 3020 FFF7FEFF 		bl	strlen
 5994 3024 0346     		mov	r3, r0
 5995 3026 07F5B852 		add	r2, r7, #5888
 5996 302a 02F10A02 		add	r2, r2, #10
 5997 302e 1370     		strb	r3, [r2]
 841:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 5998              		.loc 1 841 0
 5999 3030 07F5B853 		add	r3, r7, #5888
 6000 3034 03F10A03 		add	r3, r3, #10
 6001 3038 1B78     		ldrb	r3, [r3]
 6002 303a 07F5B852 		add	r2, r7, #5888
 6003 303e 02F10F02 		add	r2, r2, #15
 6004 3042 1370     		strb	r3, [r2]
 6005 3044 3EE0     		b	.L264
 6006              	.L265:
 842:..\src/command_processing.c ****             packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + 2 + j*PARAM_MENU_SLOT + string_lenght -
 6007              		.loc 1 842 0 discriminator 3
 6008 3046 07F5B853 		add	r3, r7, #5888
 6009 304a 03F10E03 		add	r3, r3, #14
 6010 304e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6011 3050 9622     		movs	r2, #150
 6012 3052 02FB03F3 		mul	r3, r2, r3
 6013 3056 03F57762 		add	r2, r3, #3952
 6014 305a 07F5B853 		add	r3, r7, #5888
 6015 305e 03F10A03 		add	r3, r3, #10
 6016 3062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6017 3064 1A44     		add	r2, r2, r3
 6018 3066 07F5B853 		add	r3, r7, #5888
 6019 306a 03F10F03 		add	r3, r3, #15
 6020 306e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6021 3070 D21A     		subs	r2, r2, r3
 6022 3072 07F5B853 		add	r3, r7, #5888
 6023 3076 03F10E03 		add	r3, r3, #14
 6024 307a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 140


 6025 307c 9B00     		lsls	r3, r3, #2
 6026 307e 07F5B951 		add	r1, r7, #5920
 6027 3082 01F11401 		add	r1, r1, #20
 6028 3086 0968     		ldr	r1, [r1]
 6029 3088 0B44     		add	r3, r3, r1
 6030 308a 1B68     		ldr	r3, [r3]
 6031 308c 07F5B851 		add	r1, r7, #5888
 6032 3090 01F10A01 		add	r1, r1, #10
 6033 3094 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 6034 3096 07F5B851 		add	r1, r7, #5888
 6035 309a 01F10F01 		add	r1, r1, #15
 6036 309e 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 6037 30a0 411A     		subs	r1, r0, r1
 6038 30a2 0B44     		add	r3, r3, r1
 6039 30a4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6040 30a6 07F17003 		add	r3, r7, #112
 6041 30aa 1C3B     		subs	r3, r3, #28
 6042 30ac 9954     		strb	r1, [r3, r2]
 841:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 6043              		.loc 1 841 0 discriminator 3
 6044 30ae 07F5B853 		add	r3, r7, #5888
 6045 30b2 03F10F03 		add	r3, r3, #15
 6046 30b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6047 30b8 013B     		subs	r3, r3, #1
 6048 30ba 07F5B852 		add	r2, r7, #5888
 6049 30be 02F10F02 		add	r2, r2, #15
 6050 30c2 1370     		strb	r3, [r2]
 6051              	.L264:
 841:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 6052              		.loc 1 841 0 is_stmt 0 discriminator 1
 6053 30c4 07F5B853 		add	r3, r7, #5888
 6054 30c8 03F10F03 		add	r3, r3, #15
 6055 30cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6056 30ce 002B     		cmp	r3, #0
 6057 30d0 B9D1     		bne	.L265
 839:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 6058              		.loc 1 839 0 is_stmt 1 discriminator 2
 6059 30d2 07F5B853 		add	r3, r7, #5888
 6060 30d6 03F10E03 		add	r3, r3, #14
 6061 30da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6062 30dc 0133     		adds	r3, r3, #1
 6063 30de 07F5B852 		add	r2, r7, #5888
 6064 30e2 02F10E02 		add	r2, r2, #14
 6065 30e6 1370     		strb	r3, [r2]
 6066              	.L263:
 839:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 6067              		.loc 1 839 0 is_stmt 0 discriminator 1
 6068 30e8 07F5B853 		add	r3, r7, #5888
 6069 30ec 03F10E03 		add	r3, r3, #14
 6070 30f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6071 30f2 0B2B     		cmp	r3, #11
 6072 30f4 86D9     		bls	.L266
 843:..\src/command_processing.c ****     }
 844:..\src/command_processing.c ****     
 845:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
 6073              		.loc 1 845 0 is_stmt 1
 6074 30f6 07F5B853 		add	r3, r7, #5888
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 141


 6075 30fa 03F10803 		add	r3, r3, #8
 6076 30fe 1B88     		ldrh	r3, [r3]
 6077 3100 5C1E     		subs	r4, r3, #1
 6078 3102 07F5B853 		add	r3, r7, #5888
 6079 3106 03F10803 		add	r3, r3, #8
 6080 310a 1B88     		ldrh	r3, [r3]	@ movhi
 6081 310c DBB2     		uxtb	r3, r3
 6082 310e 013B     		subs	r3, r3, #1
 6083 3110 DAB2     		uxtb	r2, r3
 6084 3112 07F17003 		add	r3, r7, #112
 6085 3116 1C3B     		subs	r3, r3, #28
 6086 3118 1146     		mov	r1, r2
 6087 311a 1846     		mov	r0, r3
 6088 311c FFF7FEFF 		bl	LCRChecksum
 6089 3120 0346     		mov	r3, r0
 6090 3122 1A46     		mov	r2, r3
 6091 3124 07F17003 		add	r3, r7, #112
 6092 3128 1C3B     		subs	r3, r3, #28
 6093 312a 1A55     		strb	r2, [r3, r4]
 846:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 6094              		.loc 1 846 0
 6095 312c 07F5B853 		add	r3, r7, #5888
 6096 3130 03F10803 		add	r3, r3, #8
 6097 3134 1A88     		ldrh	r2, [r3]
 6098 3136 07F17003 		add	r3, r7, #112
 6099 313a 1C3B     		subs	r3, r3, #28
 6100 313c 1146     		mov	r1, r2
 6101 313e 1846     		mov	r0, r3
 6102 3140 FFF7FEFF 		bl	commWrite
 847:..\src/command_processing.c **** }
 6103              		.loc 1 847 0
 6104 3144 00BF     		nop
 6105 3146 07F5B857 		add	r7, r7, #5888
 6106 314a 1437     		adds	r7, r7, #20
 6107              		.cfi_def_cfa_offset 20
 6108 314c BD46     		mov	sp, r7
 6109              		.cfi_def_cfa_register 13
 6110              		@ sp needed
 6111 314e F0BD     		pop	{r4, r5, r6, r7, pc}
 6112              		.cfi_endproc
 6113              	.LFE67:
 6114              		.size	get_param_list, .-get_param_list
 6115              		.section	.rodata
 6116 0241 000000   		.align	2
 6117              	.LC126:
 6118 0244 30202D3E 		.ascii	"0 -> None\0121 -> Low (%u us delay for each 8-bit r"
 6118      204E6F6E 
 6118      650A3120 
 6118      2D3E204C 
 6118      6F772028 
 6119 0274 65676973 		.ascii	"egister read)\0122 -> High (%u us delay for each 8-"
 6119      74657220 
 6119      72656164 
 6119      290A3220 
 6119      2D3E2048 
 6120 02a4 62697420 		.ascii	"bit register read)\012\000"
 6120      72656769 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 142


 6120      73746572 
 6120      20726561 
 6120      64290A00 
 6121              		.align	2
 6122              	.LC127:
 6123 02b8 30202D3E 		.ascii	"0 -> Usb\0121 -> Handle\0122 -> EMG proportional\012"
 6123      20557362 
 6123      0A31202D 
 6123      3E204861 
 6123      6E646C65 
 6124 02e3 33202D3E 		.ascii	"3 -> EMG Integral\0124 -> EMG FCFS\0125 -> EMG FCFS"
 6124      20454D47 
 6124      20496E74 
 6124      65677261 
 6124      6C0A3420 
 6125 0310 20416476 		.ascii	" Advanced\0126 -> Joystick\0127 -> EMG proportional"
 6125      616E6365 
 6125      640A3620 
 6125      2D3E204A 
 6125      6F797374 
 6126 033d 204E430A 		.ascii	" NC\012\000"
 6126      00
 6127 0342 0000     		.align	2
 6128              	.LC128:
 6129 0344 30202D3E 		.ascii	"0 -> Position\0121 -> PWM\0122 -> Current\0123 -> P"
 6129      20506F73 
 6129      6974696F 
 6129      6E0A3120 
 6129      2D3E2050 
 6130 036e 6F736974 		.ascii	"osition and Current\012\000"
 6130      696F6E20 
 6130      616E6420 
 6130      43757272 
 6130      656E740A 
 6131 0383 00       		.align	2
 6132              	.LC129:
 6133 0384 30202D3E 		.ascii	"0 -> Deactivate [NO]\0121 -> Activate [YES]\012\000"
 6133      20446561 
 6133      63746976 
 6133      61746520 
 6133      5B4E4F5D 
 6134 03ae 0000     		.align	2
 6135              	.LC130:
 6136 03b0 30202D3E 		.ascii	"0 -> Right\0121 -> Left\012\000"
 6136      20526967 
 6136      68740A31 
 6136      202D3E20 
 6136      4C656674 
 6137 03c6 0000     		.align	2
 6138              	.LC131:
 6139 03c8 30202D3E 		.ascii	"0 -> OFF\0121 -> ON\012The board will reset\012\000"
 6139      204F4646 
 6139      0A31202D 
 6139      3E204F4E 
 6139      0A546865 
 6140 03ef 00       		.align	2
 6141              	.LC132:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 143


 6142 03f0 30202D3E 		.ascii	"0 -> None\0121 -> SD/RTC board\0122 -> WiFi board ["
 6142      204E6F6E 
 6142      650A3120 
 6142      2D3E2053 
 6142      442F5254 
 6143 041d 4E2F415D 		.ascii	"N/A]\0123 -> Other [N/A]\012The board will reset\012"
 6143      0A33202D 
 6143      3E204F74 
 6143      68657220 
 6143      5B4E2F41 
 6144 0448 00       		.ascii	"\000"
 6145 0449 000000   		.align	2
 6146              	.LC133:
 6147 044c 30202D3E 		.ascii	"0 -> Generic user\0121 -> Maria\0122 -> Roza\012The"
 6147      2047656E 
 6147      65726963 
 6147      20757365 
 6147      720A3120 
 6148 0476 20626F61 		.ascii	" board will reset\012\000"
 6148      72642077 
 6148      696C6C20 
 6148      72657365 
 6148      740A00
 6149 0489 000000   		.align	2
 6150              	.LC134:
 6151 048c 30202D3E 		.ascii	"0 -> MC33887 (Standard)\0121 -> VNH5019 (High power"
 6151      204D4333 
 6151      33383837 
 6151      20285374 
 6151      616E6461 
 6152 04bc 290A5468 		.ascii	")\012The board will reset\012\000"
 6152      6520626F 
 6152      61726420 
 6152      77696C6C 
 6152      20726573 
 6153              		.align	2
 6154              	.LC135:
 6155 04d4 30202D3E 		.ascii	"0 -> SOFTHAND PRO\0121 -> GENERIC 2 MOTORS\0122 -> "
 6155      20534F46 
 6155      5448414E 
 6155      44205052 
 6155      4F0A3120 
 6156 0501 41495220 		.ascii	"AIR CHAMBERS\0123 -> OTTOBOCK WRIST\0124 -> SOFTHAN"
 6156      4348414D 
 6156      42455253 
 6156      0A33202D 
 6156      3E204F54 
 6157 052e 44203220 		.ascii	"D 2 MOTORS\012The board will reset\012\000"
 6157      4D4F544F 
 6157      52530A54 
 6157      68652062 
 6157      6F617264 
 6158 054f 00       		.align	2
 6159              	.LC136:
 6160 0550 30202D3E 		.ascii	"0 -> Fast:wrist, Slow:hand\0121 -> Slow:wrist, Fast"
 6160      20466173 
 6160      743A7772 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 144


 6160      6973742C 
 6160      20536C6F 
 6161 0580 3A68616E 		.ascii	":hand\012\000"
 6161      640A00
 6162 0587 00       		.align	2
 6163              	.LC137:
 6164 0588 30202D3E 		.ascii	"0 -> Close:CW, Open:CCW\0121 -> Close:CCW, Open:CW\012"
 6164      20436C6F 
 6164      73653A43 
 6164      572C204F 
 6164      70656E3A 
 6165 05b8 00       		.ascii	"\000"
 6166 05b9 000000   		.align	2
 6167              	.LC0:
 6168 05bc 02       		.byte	2
 6169 05bd 07       		.byte	7
 6170 05be 07       		.byte	7
 6171 05bf 00       		.byte	0
 6172 05c0 00       		.byte	0
 6173 05c1 00       		.byte	0
 6174 05c2 02       		.byte	2
 6175 05c3 03       		.byte	3
 6176 05c4 07       		.byte	7
 6177 05c5 00       		.byte	0
 6178 05c6 05       		.byte	5
 6179 05c7 05       		.byte	5
 6180 05c8 03       		.byte	3
 6181 05c9 04       		.byte	4
 6182 05ca 00       		.byte	0
 6183 05cb 06       		.byte	6
 6184 05cc 02       		.byte	2
 6185 05cd 00       		.byte	0
 6186 05ce 01       		.byte	1
 6187 05cf 00       		.byte	0
 6188 05d0 07       		.byte	7
 6189 05d1 02       		.byte	2
 6190 05d2 05       		.byte	5
 6191 05d3 05       		.byte	5
 6192 05d4 05       		.byte	5
 6193 05d5 00       		.byte	0
 6194 05d6 00       		.byte	0
 6195 05d7 00       		.byte	0
 6196 05d8 00       		.byte	0
 6197 05d9 00       		.byte	0
 6198 05da 00       		.byte	0
 6199 05db 02       		.byte	2
 6200 05dc 00       		.byte	0
 6201 05dd 02       		.byte	2
 6202 05de 00       		.byte	0
 6203 05df 09       		.byte	9
 6204 05e0 02       		.byte	2
 6205 05e1 00       		.byte	0
 6206 05e2 02       		.byte	2
 6207 05e3 00       		.byte	0
 6208 05e4 02       		.byte	2
 6209 05e5 01       		.byte	1
 6210 05e6 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 145


 6211 05e7 07       		.byte	7
 6212 05e8 07       		.byte	7
 6213 05e9 00       		.byte	0
 6214 05ea 00       		.byte	0
 6215 05eb 00       		.byte	0
 6216 05ec 02       		.byte	2
 6217 05ed 03       		.byte	3
 6218 05ee 07       		.byte	7
 6219 05ef 00       		.byte	0
 6220 05f0 05       		.byte	5
 6221 05f1 05       		.byte	5
 6222 05f2 03       		.byte	3
 6223 05f3 00       		.byte	0
 6224 05f4 01       		.byte	1
 6225 05f5 00       		.byte	0
 6226 05f6 07       		.byte	7
 6227 05f7 02       		.byte	2
 6228 05f8 00       		.byte	0
 6229 05f9 02       		.byte	2
 6230 05fa 00       		.byte	0
 6231 05fb 02       		.byte	2
 6232 05fc 01       		.byte	1
 6233 05fd 02       		.byte	2
 6234 05fe 02       		.byte	2
 6235 05ff 00       		.byte	0
 6236 0600 02       		.byte	2
 6237 0601 02       		.byte	2
 6238 0602 04       		.byte	4
 6239 0603 03       		.byte	3
 6240 0604 04       		.byte	4
 6241 0605 00       		.byte	0
 6242 0606 00       		.byte	0
 6243 0607 04       		.byte	4
 6244 0608 00       		.byte	0
 6245 0609 00       		.byte	0
 6246 060a 02       		.byte	2
 6247 060b 05       		.byte	5
 6248 060c 07       		.byte	7
 6249 060d 07       		.byte	7
 6250 060e 0000     		.align	2
 6251              	.LC1:
 6252 0610 31202D20 		.ascii	"1 - Device ID:\000"
 6252      44657669 
 6252      63652049 
 6252      443A00
 6253 061f 00       		.align	2
 6254              	.LC2:
 6255 0620 32202D20 		.ascii	"2 - Position PID [P, I, D]:\000"
 6255      506F7369 
 6255      74696F6E 
 6255      20504944 
 6255      205B502C 
 6256              		.align	2
 6257              	.LC3:
 6258 063c 33202D20 		.ascii	"3 - Current PID [P, I, D]:\000"
 6258      43757272 
 6258      656E7420 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 146


 6258      50494420 
 6258      5B502C20 
 6259 0657 00       		.align	2
 6260              	.LC4:
 6261 0658 34202D20 		.ascii	"4 - Startup Activation:\000"
 6261      53746172 
 6261      74757020 
 6261      41637469 
 6261      76617469 
 6262              		.align	2
 6263              	.LC5:
 6264 0670 35202D20 		.ascii	"5 - Input mode:\000"
 6264      496E7075 
 6264      74206D6F 
 6264      64653A00 
 6265              		.align	2
 6266              	.LC6:
 6267 0680 36202D20 		.ascii	"6 - Control mode:\000"
 6267      436F6E74 
 6267      726F6C20 
 6267      6D6F6465 
 6267      3A00
 6268 0692 0000     		.align	2
 6269              	.LC7:
 6270 0694 37202D20 		.ascii	"7 - Resolutions:\000"
 6270      5265736F 
 6270      6C757469 
 6270      6F6E733A 
 6270      00
 6271 06a5 000000   		.align	2
 6272              	.LC8:
 6273 06a8 38202D20 		.ascii	"8 - Measurement Offsets:\000"
 6273      4D656173 
 6273      7572656D 
 6273      656E7420 
 6273      4F666673 
 6274 06c1 000000   		.align	2
 6275              	.LC9:
 6276 06c4 39202D20 		.ascii	"9 - Multipliers:\000"
 6276      4D756C74 
 6276      69706C69 
 6276      6572733A 
 6276      00
 6277 06d5 000000   		.align	2
 6278              	.LC10:
 6279 06d8 3130202D 		.ascii	"10 - Pos. limit active:\000"
 6279      20506F73 
 6279      2E206C69 
 6279      6D697420 
 6279      61637469 
 6280              		.align	2
 6281              	.LC11:
 6282 06f0 3131202D 		.ascii	"11 - Pos. limits [inf, sup]:\000"
 6282      20506F73 
 6282      2E206C69 
 6282      6D697473 
 6282      205B696E 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 147


 6283 070d 000000   		.align	2
 6284              	.LC12:
 6285 0710 3132202D 		.ascii	"12 - Max steps [neg, pos]:\000"
 6285      204D6178 
 6285      20737465 
 6285      7073205B 
 6285      6E65672C 
 6286 072b 00       		.align	2
 6287              	.LC13:
 6288 072c 3133202D 		.ascii	"13 - Current limit:\000"
 6288      20437572 
 6288      72656E74 
 6288      206C696D 
 6288      69743A00 
 6289              		.align	2
 6290              	.LC14:
 6291 0740 3134202D 		.ascii	"14 - EMG thresholds:\000"
 6291      20454D47 
 6291      20746872 
 6291      6573686F 
 6291      6C64733A 
 6292 0755 000000   		.align	2
 6293              	.LC15:
 6294 0758 3135202D 		.ascii	"15 - EMG calibration on startup:\000"
 6294      20454D47 
 6294      2063616C 
 6294      69627261 
 6294      74696F6E 
 6295 0779 000000   		.align	2
 6296              	.LC16:
 6297 077c 3136202D 		.ascii	"16 - EMG max values:\000"
 6297      20454D47 
 6297      206D6178 
 6297      2076616C 
 6297      7565733A 
 6298 0791 000000   		.align	2
 6299              	.LC17:
 6300 0794 3137202D 		.ascii	"17 - EMG max speeds:\000"
 6300      20454D47 
 6300      206D6178 
 6300      20737065 
 6300      6564733A 
 6301 07a9 000000   		.align	2
 6302              	.LC18:
 6303 07ac 3138202D 		.ascii	"18 - Absolute encoder position:\000"
 6303      20416273 
 6303      6F6C7574 
 6303      6520656E 
 6303      636F6465 
 6304              		.align	2
 6305              	.LC19:
 6306 07cc 3139202D 		.ascii	"19 - Motor handle ratio:\000"
 6306      204D6F74 
 6306      6F722068 
 6306      616E646C 
 6306      65207261 
 6307 07e5 000000   		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 148


 6308              	.LC20:
 6309 07e8 3230202D 		.ascii	"20 - PWM rescaling:\000"
 6309      2050574D 
 6309      20726573 
 6309      63616C69 
 6309      6E673A00 
 6310              		.align	2
 6311              	.LC21:
 6312 07fc 3231202D 		.ascii	"21 - Current lookup:\000"
 6312      20437572 
 6312      72656E74 
 6312      206C6F6F 
 6312      6B75703A 
 6313 0811 000000   		.align	2
 6314              	.LC22:
 6315 0814 3232202D 		.ascii	"22 - Date of maintenance [D/M/Y]:\000"
 6315      20446174 
 6315      65206F66 
 6315      206D6169 
 6315      6E74656E 
 6316 0836 0000     		.align	2
 6317              	.LC23:
 6318 0838 3233202D 		.ascii	"23 - Rest position:\000"
 6318      20526573 
 6318      7420706F 
 6318      73697469 
 6318      6F6E3A00 
 6319              		.align	2
 6320              	.LC24:
 6321 084c 3234202D 		.ascii	"24 - Rest position time delay (ms):\000"
 6321      20526573 
 6321      7420706F 
 6321      73697469 
 6321      6F6E2074 
 6322              		.align	2
 6323              	.LC25:
 6324 0870 3235202D 		.ascii	"25 - Rest vel closure (ticks/sec):\000"
 6324      20526573 
 6324      74207665 
 6324      6C20636C 
 6324      6F737572 
 6325 0893 00       		.align	2
 6326              	.LC26:
 6327 0894 3236202D 		.ascii	"26 - Rest position enabled:\000"
 6327      20526573 
 6327      7420706F 
 6327      73697469 
 6327      6F6E2065 
 6328              		.align	2
 6329              	.LC27:
 6330 08b0 3237202D 		.ascii	"27 - EMG inversion:\000"
 6330      20454D47 
 6330      20696E76 
 6330      65727369 
 6330      6F6E3A00 
 6331              		.align	2
 6332              	.LC28:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 149


 6333 08c4 3238202D 		.ascii	"28 - Hand side:\000"
 6333      2048616E 
 6333      64207369 
 6333      64653A00 
 6334              		.align	2
 6335              	.LC29:
 6336 08d4 3239202D 		.ascii	"29 - Enable IMUs:\000"
 6336      20456E61 
 6336      626C6520 
 6336      494D5573 
 6336      3A00
 6337 08e6 0000     		.align	2
 6338              	.LC30:
 6339 08e8 3330202D 		.ascii	"30 - Read Expansion port:\000"
 6339      20526561 
 6339      64204578 
 6339      70616E73 
 6339      696F6E20 
 6340 0902 0000     		.align	2
 6341              	.LC31:
 6342 0904 3331202D 		.ascii	"31 - Reset counters:\000"
 6342      20526573 
 6342      65742063 
 6342      6F756E74 
 6342      6572733A 
 6343 0919 000000   		.align	2
 6344              	.LC32:
 6345 091c 3332202D 		.ascii	"32 - Last checked Time [D/M/Y H:M:S]:\000"
 6345      204C6173 
 6345      74206368 
 6345      65636B65 
 6345      64205469 
 6346 0942 0000     		.align	2
 6347              	.LC33:
 6348 0944 3333202D 		.ascii	"33 - SPI read delay (IMU):\000"
 6348      20535049 
 6348      20726561 
 6348      64206465 
 6348      6C617920 
 6349 095f 00       		.align	2
 6350              	.LC34:
 6351 0960 3334202D 		.ascii	"34 - On board IMU conf. [a,g,m,q,t]:\000"
 6351      204F6E20 
 6351      626F6172 
 6351      6420494D 
 6351      5520636F 
 6352 0985 000000   		.align	2
 6353              	.LC35:
 6354 0988 3335202D 		.ascii	"35 - User ID:\000"
 6354      20557365 
 6354      72204944 
 6354      3A00
 6355 0996 0000     		.align	2
 6356              	.LC36:
 6357 0998 3336202D 		.ascii	"36 - User code:\000"
 6357      20557365 
 6357      7220636F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 150


 6357      64653A00 
 6358              		.align	2
 6359              	.LC37:
 6360 09a8 3337202D 		.ascii	"37 - Associated encoder line:\000"
 6360      20417373 
 6360      6F636961 
 6360      74656420 
 6360      656E636F 
 6361 09c6 0000     		.align	2
 6362              	.LC38:
 6363 09c8 3338202D 		.ascii	"38 - Driver type:\000"
 6363      20447269 
 6363      76657220 
 6363      74797065 
 6363      3A00
 6364 09da 0000     		.align	2
 6365              	.LC39:
 6366 09dc 3339202D 		.ascii	"39 - PWM rate limiter:\000"
 6366      2050574D 
 6366      20726174 
 6366      65206C69 
 6366      6D697465 
 6367 09f3 00       		.align	2
 6368              	.LC40:
 6369 09f4 3430202D 		.ascii	"40 - Not reversible:\000"
 6369      204E6F74 
 6369      20726576 
 6369      65727369 
 6369      626C653A 
 6370 0a09 000000   		.align	2
 6371              	.LC41:
 6372 0a0c 3431202D 		.ascii	"41 - Enc idx used for control:\000"
 6372      20456E63 
 6372      20696478 
 6372      20757365 
 6372      6420666F 
 6373 0a2b 00       		.align	2
 6374              	.LC42:
 6375 0a2c 3432202D 		.ascii	"42 - Gear params[N1, N2, I1]:\000"
 6375      20476561 
 6375      72207061 
 6375      72616D73 
 6375      5B4E312C 
 6376 0a4a 0000     		.align	2
 6377              	.LC43:
 6378 0a4c 3433202D 		.ascii	"43 - Use second motor:\000"
 6378      20557365 
 6378      20736563 
 6378      6F6E6420 
 6378      6D6F746F 
 6379 0a63 00       		.align	2
 6380              	.LC44:
 6381 0a64 3434202D 		.ascii	"44 - Position PID [P, I, D]:\000"
 6381      20506F73 
 6381      6974696F 
 6381      6E205049 
 6381      44205B50 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 151


 6382 0a81 000000   		.align	2
 6383              	.LC45:
 6384 0a84 3435202D 		.ascii	"45 - Current PID [P, I, D]:\000"
 6384      20437572 
 6384      72656E74 
 6384      20504944 
 6384      205B502C 
 6385              		.align	2
 6386              	.LC46:
 6387 0aa0 3436202D 		.ascii	"46 - Startup Activation:\000"
 6387      20537461 
 6387      72747570 
 6387      20416374 
 6387      69766174 
 6388 0ab9 000000   		.align	2
 6389              	.LC47:
 6390 0abc 3437202D 		.ascii	"47 - Input mode:\000"
 6390      20496E70 
 6390      7574206D 
 6390      6F64653A 
 6390      00
 6391 0acd 000000   		.align	2
 6392              	.LC48:
 6393 0ad0 3438202D 		.ascii	"48 - Control mode:\000"
 6393      20436F6E 
 6393      74726F6C 
 6393      206D6F64 
 6393      653A00
 6394 0ae3 00       		.align	2
 6395              	.LC49:
 6396 0ae4 3439202D 		.ascii	"49 - Resolutions:\000"
 6396      20526573 
 6396      6F6C7574 
 6396      696F6E73 
 6396      3A00
 6397 0af6 0000     		.align	2
 6398              	.LC50:
 6399 0af8 3530202D 		.ascii	"50 - Measurement Offsets:\000"
 6399      204D6561 
 6399      73757265 
 6399      6D656E74 
 6399      204F6666 
 6400 0b12 0000     		.align	2
 6401              	.LC51:
 6402 0b14 3531202D 		.ascii	"51 - Multipliers:\000"
 6402      204D756C 
 6402      7469706C 
 6402      69657273 
 6402      3A00
 6403 0b26 0000     		.align	2
 6404              	.LC52:
 6405 0b28 3532202D 		.ascii	"52 - Pos. limit active:\000"
 6405      20506F73 
 6405      2E206C69 
 6405      6D697420 
 6405      61637469 
 6406              		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 152


 6407              	.LC53:
 6408 0b40 3533202D 		.ascii	"53 - Pos. limits [inf, sup]:\000"
 6408      20506F73 
 6408      2E206C69 
 6408      6D697473 
 6408      205B696E 
 6409 0b5d 000000   		.align	2
 6410              	.LC54:
 6411 0b60 3534202D 		.ascii	"54 - Max steps [neg, pos]:\000"
 6411      204D6178 
 6411      20737465 
 6411      7073205B 
 6411      6E65672C 
 6412 0b7b 00       		.align	2
 6413              	.LC55:
 6414 0b7c 3535202D 		.ascii	"55 - Current limit:\000"
 6414      20437572 
 6414      72656E74 
 6414      206C696D 
 6414      69743A00 
 6415              		.align	2
 6416              	.LC56:
 6417 0b90 3536202D 		.ascii	"56 - Absolute encoder position:\000"
 6417      20416273 
 6417      6F6C7574 
 6417      6520656E 
 6417      636F6465 
 6418              		.align	2
 6419              	.LC57:
 6420 0bb0 3537202D 		.ascii	"57 - Motor handle ratio:\000"
 6420      204D6F74 
 6420      6F722068 
 6420      616E646C 
 6420      65207261 
 6421 0bc9 000000   		.align	2
 6422              	.LC58:
 6423 0bcc 3538202D 		.ascii	"58 - PWM rescaling:\000"
 6423      2050574D 
 6423      20726573 
 6423      63616C69 
 6423      6E673A00 
 6424              		.align	2
 6425              	.LC59:
 6426 0be0 3539202D 		.ascii	"59 - Current lookup:\000"
 6426      20437572 
 6426      72656E74 
 6426      206C6F6F 
 6426      6B75703A 
 6427 0bf5 000000   		.align	2
 6428              	.LC60:
 6429 0bf8 3630202D 		.ascii	"60 - Associated encoder line:\000"
 6429      20417373 
 6429      6F636961 
 6429      74656420 
 6429      656E636F 
 6430 0c16 0000     		.align	2
 6431              	.LC61:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 153


 6432 0c18 3631202D 		.ascii	"61 - Driver type:\000"
 6432      20447269 
 6432      76657220 
 6432      74797065 
 6432      3A00
 6433 0c2a 0000     		.align	2
 6434              	.LC62:
 6435 0c2c 3632202D 		.ascii	"62 - PWM rate limiter:\000"
 6435      2050574D 
 6435      20726174 
 6435      65206C69 
 6435      6D697465 
 6436 0c43 00       		.align	2
 6437              	.LC63:
 6438 0c44 3633202D 		.ascii	"63 - Not reversible:\000"
 6438      204E6F74 
 6438      20726576 
 6438      65727369 
 6438      626C653A 
 6439 0c59 000000   		.align	2
 6440              	.LC64:
 6441 0c5c 3634202D 		.ascii	"64 - Enc idx used for control:\000"
 6441      20456E63 
 6441      20696478 
 6441      20757365 
 6441      6420666F 
 6442 0c7b 00       		.align	2
 6443              	.LC65:
 6444 0c7c 3635202D 		.ascii	"65 - Gear params[N1, N2, I1]:\000"
 6444      20476561 
 6444      72207061 
 6444      72616D73 
 6444      5B4E312C 
 6445 0c9a 0000     		.align	2
 6446              	.LC66:
 6447 0c9c 3636202D 		.ascii	"66 - Read enc raw line 0:\000"
 6447      20526561 
 6447      6420656E 
 6447      63207261 
 6447      77206C69 
 6448 0cb6 0000     		.align	2
 6449              	.LC67:
 6450 0cb8 3637202D 		.ascii	"67 - Read enc raw line 1:\000"
 6450      20526561 
 6450      6420656E 
 6450      63207261 
 6450      77206C69 
 6451 0cd2 0000     		.align	2
 6452              	.LC68:
 6453 0cd4 3638202D 		.ascii	"68 - Read additional ADC port:\000"
 6453      20526561 
 6453      64206164 
 6453      64697469 
 6453      6F6E616C 
 6454 0cf3 00       		.align	2
 6455              	.LC69:
 6456 0cf4 3639202D 		.ascii	"69 - ADC channel [1-6]:\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 154


 6456      20414443 
 6456      20636861 
 6456      6E6E656C 
 6456      205B312D 
 6457              		.align	2
 6458              	.LC70:
 6459 0d0c 3730202D 		.ascii	"70 - ADC channel [7-12]:\000"
 6459      20414443 
 6459      20636861 
 6459      6E6E656C 
 6459      205B372D 
 6460 0d25 000000   		.align	2
 6461              	.LC71:
 6462 0d28 3731202D 		.ascii	"71 - Joystick closure speed:\000"
 6462      204A6F79 
 6462      73746963 
 6462      6B20636C 
 6462      6F737572 
 6463 0d45 000000   		.align	2
 6464              	.LC72:
 6465 0d48 3732202D 		.ascii	"72 - Joystick threshold:\000"
 6465      204A6F79 
 6465      73746963 
 6465      6B207468 
 6465      72657368 
 6466 0d61 000000   		.align	2
 6467              	.LC73:
 6468 0d64 3733202D 		.ascii	"73 - Joystick gains:\000"
 6468      204A6F79 
 6468      73746963 
 6468      6B206761 
 6468      696E733A 
 6469 0d79 000000   		.align	2
 6470              	.LC74:
 6471 0d7c 3734202D 		.ascii	"74 - Device type:\000"
 6471      20446576 
 6471      69636520 
 6471      74797065 
 6471      3A00
 6472 0d8e 0000     		.align	2
 6473              	.LC75:
 6474 0d90 3735202D 		.ascii	"75 - Wrist act. mode:\000"
 6474      20577269 
 6474      73742061 
 6474      63742E20 
 6474      6D6F6465 
 6475 0da6 0000     		.align	2
 6476              	.LC76:
 6477 0da8 3736202D 		.ascii	"76 - Fast act. thresholds:\000"
 6477      20466173 
 6477      74206163 
 6477      742E2074 
 6477      68726573 
 6478 0dc3 00       		.align	2
 6479              	.LC77:
 6480 0dc4 3737202D 		.ascii	"77 - Wrist direction:\000"
 6480      20577269 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 155


 6480      73742064 
 6480      69726563 
 6480      74696F6E 
 6481 0dda 0000     		.align	2
 6482              	.LC78:
 6483 0ddc 3738202D 		.ascii	"78 - Slave communication active:\000"
 6483      20536C61 
 6483      76652063 
 6483      6F6D6D75 
 6483      6E696361 
 6484 0dfd 000000   		.align	2
 6485              	.LC79:
 6486 0e00 3739202D 		.ascii	"79 - Slave ID:\000"
 6486      20536C61 
 6486      76652049 
 6486      443A00
 6487 0e0f 00       		.align	2
 6488              	.LC80:
 6489 0e10 3830202D 		.ascii	"80 - Maximum slave residual current:\000"
 6489      204D6178 
 6489      696D756D 
 6489      20736C61 
 6489      76652072 
 6490 0e35 000000   		.align	2
 6491              	.LC81:
 6492 0e38 3831202D 		.ascii	"81 - Maximum pressure feedback (kPa):\000"
 6492      204D6178 
 6492      696D756D 
 6492      20707265 
 6492      73737572 
 6493 0e5e 0000     		.align	2
 6494              	.LC82:
 6495 0e60 3832202D 		.ascii	"82 - Proportional pressure error gain:\000"
 6495      2050726F 
 6495      706F7274 
 6495      696F6E61 
 6495      6C207072 
 6496 0e87 00       		.align	2
 6497              	.LC125:
 6498 0e88 10060000 		.word	.LC1
 6499 0e8c 20060000 		.word	.LC2
 6500 0e90 3C060000 		.word	.LC3
 6501 0e94 58060000 		.word	.LC4
 6502 0e98 70060000 		.word	.LC5
 6503 0e9c 80060000 		.word	.LC6
 6504 0ea0 94060000 		.word	.LC7
 6505 0ea4 A8060000 		.word	.LC8
 6506 0ea8 C4060000 		.word	.LC9
 6507 0eac D8060000 		.word	.LC10
 6508 0eb0 F0060000 		.word	.LC11
 6509 0eb4 10070000 		.word	.LC12
 6510 0eb8 2C070000 		.word	.LC13
 6511 0ebc 40070000 		.word	.LC14
 6512 0ec0 58070000 		.word	.LC15
 6513 0ec4 7C070000 		.word	.LC16
 6514 0ec8 94070000 		.word	.LC17
 6515 0ecc AC070000 		.word	.LC18
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 156


 6516 0ed0 CC070000 		.word	.LC19
 6517 0ed4 E8070000 		.word	.LC20
 6518 0ed8 FC070000 		.word	.LC21
 6519 0edc 14080000 		.word	.LC22
 6520 0ee0 38080000 		.word	.LC23
 6521 0ee4 4C080000 		.word	.LC24
 6522 0ee8 70080000 		.word	.LC25
 6523 0eec 94080000 		.word	.LC26
 6524 0ef0 B0080000 		.word	.LC27
 6525 0ef4 C4080000 		.word	.LC28
 6526 0ef8 D4080000 		.word	.LC29
 6527 0efc E8080000 		.word	.LC30
 6528 0f00 04090000 		.word	.LC31
 6529 0f04 1C090000 		.word	.LC32
 6530 0f08 44090000 		.word	.LC33
 6531 0f0c 60090000 		.word	.LC34
 6532 0f10 88090000 		.word	.LC35
 6533 0f14 98090000 		.word	.LC36
 6534 0f18 A8090000 		.word	.LC37
 6535 0f1c C8090000 		.word	.LC38
 6536 0f20 DC090000 		.word	.LC39
 6537 0f24 F4090000 		.word	.LC40
 6538 0f28 0C0A0000 		.word	.LC41
 6539 0f2c 2C0A0000 		.word	.LC42
 6540 0f30 4C0A0000 		.word	.LC43
 6541 0f34 640A0000 		.word	.LC44
 6542 0f38 840A0000 		.word	.LC45
 6543 0f3c A00A0000 		.word	.LC46
 6544 0f40 BC0A0000 		.word	.LC47
 6545 0f44 D00A0000 		.word	.LC48
 6546 0f48 E40A0000 		.word	.LC49
 6547 0f4c F80A0000 		.word	.LC50
 6548 0f50 140B0000 		.word	.LC51
 6549 0f54 280B0000 		.word	.LC52
 6550 0f58 400B0000 		.word	.LC53
 6551 0f5c 600B0000 		.word	.LC54
 6552 0f60 7C0B0000 		.word	.LC55
 6553 0f64 900B0000 		.word	.LC56
 6554 0f68 B00B0000 		.word	.LC57
 6555 0f6c CC0B0000 		.word	.LC58
 6556 0f70 E00B0000 		.word	.LC59
 6557 0f74 F80B0000 		.word	.LC60
 6558 0f78 180C0000 		.word	.LC61
 6559 0f7c 2C0C0000 		.word	.LC62
 6560 0f80 440C0000 		.word	.LC63
 6561 0f84 5C0C0000 		.word	.LC64
 6562 0f88 7C0C0000 		.word	.LC65
 6563 0f8c 9C0C0000 		.word	.LC66
 6564 0f90 B80C0000 		.word	.LC67
 6565 0f94 D40C0000 		.word	.LC68
 6566 0f98 F40C0000 		.word	.LC69
 6567 0f9c 0C0D0000 		.word	.LC70
 6568 0fa0 280D0000 		.word	.LC71
 6569 0fa4 480D0000 		.word	.LC72
 6570 0fa8 640D0000 		.word	.LC73
 6571 0fac 7C0D0000 		.word	.LC74
 6572 0fb0 900D0000 		.word	.LC75
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 157


 6573 0fb4 A80D0000 		.word	.LC76
 6574 0fb8 C40D0000 		.word	.LC77
 6575 0fbc DC0D0000 		.word	.LC78
 6576 0fc0 000E0000 		.word	.LC79
 6577 0fc4 100E0000 		.word	.LC80
 6578 0fc8 380E0000 		.word	.LC81
 6579 0fcc 600E0000 		.word	.LC82
 6580              		.align	2
 6581              	.LC84:
 6582 0fd0 03       		.byte	3
 6583 0fd1 01       		.byte	1
 6584 0fd2 02       		.byte	2
 6585 0fd3 03       		.byte	3
 6586 0fd4 03       		.byte	3
 6587 0fd5 03       		.byte	3
 6588 0fd6 03       		.byte	3
 6589 0fd7 03       		.byte	3
 6590 0fd8 03       		.byte	3
 6591 0fd9 04       		.byte	4
 6592 0fda 05       		.byte	5
 6593 0fdb 06       		.byte	6
 6594 0fdc 03       		.byte	3
 6595 0fdd 07       		.byte	7
 6596 0fde 08       		.byte	8
 6597 0fdf 09       		.byte	9
 6598 0fe0 03       		.byte	3
 6599 0fe1 05       		.byte	5
 6600 0fe2 03       		.byte	3
 6601 0fe3 01       		.byte	1
 6602 0fe4 02       		.byte	2
 6603 0fe5 03       		.byte	3
 6604 0fe6 03       		.byte	3
 6605 0fe7 03       		.byte	3
 6606 0fe8 09       		.byte	9
 6607 0fe9 03       		.byte	3
 6608 0fea 05       		.byte	5
 6609 0feb 0A       		.byte	10
 6610 0fec 0B       		.byte	11
 6611 0fed 0C       		.byte	12
 6612 0fee 03       		.byte	3
 6613 0fef 00       		.align	2
 6614              	.LC85:
 6615 0ff0 02       		.byte	2
 6616 0ff1 03       		.byte	3
 6617 0ff2 08       		.byte	8
 6618 0ff3 0B       		.byte	11
 6619 0ff4 17       		.byte	23
 6620 0ff5 2C       		.byte	44
 6621 0ff6 2D       		.byte	45
 6622 0ff7 32       		.byte	50
 6623 0ff8 35       		.byte	53
 6624 0ff9 000000   		.align	2
 6625              	.LC86:
 6626 0ffc 02       		.byte	2
 6627 0ffd 03       		.byte	3
 6628 0ffe 05       		.byte	5
 6629 0fff 08       		.byte	8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 158


 6630 1000 0B       		.byte	11
 6631 1001 17       		.byte	23
 6632 1002 18       		.byte	24
 6633 1003 1C       		.byte	28
 6634 1004 1F       		.byte	31
 6635 1005 20       		.byte	32
 6636 1006 26       		.byte	38
 6637 1007 2C       		.byte	44
 6638 1008 2D       		.byte	45
 6639 1009 2F       		.byte	47
 6640 100a 32       		.byte	50
 6641 100b 35       		.byte	53
 6642 100c 3D       		.byte	61
 6643 100d 4A       		.byte	74
 6644              		.section	.text.manage_param_list,"ax",%progbits
 6645              		.align	2
 6646              		.global	manage_param_list
 6647              		.thumb
 6648              		.thumb_func
 6649              		.type	manage_param_list, %function
 6650              	manage_param_list:
 6651              	.LFB68:
 848:..\src/command_processing.c **** 
 849:..\src/command_processing.c **** //==============================================================================
 850:..\src/command_processing.c **** //                                                             MANAGE PARAM LIST
 851:..\src/command_processing.c **** //==============================================================================
 852:..\src/command_processing.c **** 
 853:..\src/command_processing.c **** void manage_param_list(uint16 index) {
 6652              		.loc 1 853 0
 6653              		.cfi_startproc
 6654              		@ args = 0, pretend = 0, frame = 1352
 6655              		@ frame_needed = 1, uses_anonymous_args = 0
 6656 0000 B0B5     		push	{r4, r5, r7, lr}
 6657              		.cfi_def_cfa_offset 16
 6658              		.cfi_offset 4, -16
 6659              		.cfi_offset 5, -12
 6660              		.cfi_offset 7, -8
 6661              		.cfi_offset 14, -4
 6662 0002 ADF5AB6D 		sub	sp, sp, #1368
 6663              		.cfi_def_cfa_offset 1384
 6664 0006 04AF     		add	r7, sp, #16
 6665              		.cfi_def_cfa 7, 1368
 6666 0008 0246     		mov	r2, r0
 6667 000a BB1D     		adds	r3, r7, #6
 6668 000c 1A80     		strh	r2, [r3]	@ movhi
 854:..\src/command_processing.c ****     uint8 CYDATA i, j;
 855:..\src/command_processing.c ****     uint8 CYDATA sod;
 856:..\src/command_processing.c ****     uint8 PARAM_IDX;
 857:..\src/command_processing.c ****     int16 aux_int16;
 858:..\src/command_processing.c ****     uint16 aux_uint16;
 859:..\src/command_processing.c ****     int32 aux_int32;
 860:..\src/command_processing.c ****     uint32 aux_uint32;
 861:..\src/command_processing.c ****     float aux_float;
 862:..\src/command_processing.c ****  
 863:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 6669              		.loc 1 863 0
 6670 000e 0023     		movs	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 159


 6671 0010 87F83D35 		strb	r3, [r7, #1341]
 864:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 6672              		.loc 1 864 0
 6673 0014 0123     		movs	r3, #1
 6674 0016 87F83C35 		strb	r3, [r7, #1340]
 865:..\src/command_processing.c ****     
 866:..\src/command_processing.c ****     // Arrays
 867:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem;   // c_mem is used for param reading
 6675              		.loc 1 867 0
 6676 001a 054B     		ldr	r3, .L356
 6677 001c C7F84035 		str	r3, [r7, #1344]
 868:..\src/command_processing.c ****     
 869:..\src/command_processing.c ****     if (index){                         // Switch from c_mem to g_mem
 6678              		.loc 1 869 0
 6679 0020 BB1D     		adds	r3, r7, #6
 6680 0022 1B88     		ldrh	r3, [r3]
 6681 0024 002B     		cmp	r3, #0
 6682 0026 07D0     		beq	.L295
 870:..\src/command_processing.c ****         MEM_P = &g_mem;                 // g_mem is used for param setting
 6683              		.loc 1 870 0
 6684 0028 024B     		ldr	r3, .L356+4
 6685 002a C7F84035 		str	r3, [r7, #1344]
 6686 002e 03E0     		b	.L357
 6687              	.L358:
 6688              		.align	2
 6689              	.L356:
 6690 0030 00000000 		.word	c_mem
 6691 0034 00000000 		.word	g_mem
 6692              	.L357:
 6693              	.L295:
 871:..\src/command_processing.c ****     }
 872:..\src/command_processing.c ****  
 873:..\src/command_processing.c ****     
 874:..\src/command_processing.c **** //------------------ BEGIN OF PARAMETERS VARIABLES --------------------//    
 875:..\src/command_processing.c ****     uint8* VAR_P[NUM_OF_PARAMS] = { 
 876:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6694              		.loc 1 876 0
 6695 0038 D7F84035 		ldr	r3, [r7, #1344]
 6696 003c 03F1A002 		add	r2, r3, #160
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6697              		.loc 1 875 0
 6698 0040 07F57873 		add	r3, r7, #992
 6699 0044 1A60     		str	r2, [r3]
 877:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p),
 6700              		.loc 1 877 0
 6701 0046 97F83D25 		ldrb	r2, [r7, #1341]	@ zero_extendqisi2
 6702 004a 1346     		mov	r3, r2
 6703 004c DB00     		lsls	r3, r3, #3
 6704 004e 9B1A     		subs	r3, r3, r2
 6705 0050 1B01     		lsls	r3, r3, #4
 6706 0052 B033     		adds	r3, r3, #176
 6707 0054 D7F84025 		ldr	r2, [r7, #1344]
 6708 0058 1A44     		add	r2, r2, r3
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6709              		.loc 1 875 0
 6710 005a 07F57873 		add	r3, r7, #992
 6711 005e 5A60     		str	r2, [r3, #4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 160


 878:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p_c), 
 6712              		.loc 1 878 0
 6713 0060 97F83D25 		ldrb	r2, [r7, #1341]	@ zero_extendqisi2
 6714 0064 1346     		mov	r3, r2
 6715 0066 DB00     		lsls	r3, r3, #3
 6716 0068 9B1A     		subs	r3, r3, r2
 6717 006a 1B01     		lsls	r3, r3, #4
 6718 006c B833     		adds	r3, r3, #184
 6719 006e D7F84025 		ldr	r2, [r7, #1344]
 6720 0072 1344     		add	r3, r3, r2
 6721 0074 1A1D     		adds	r2, r3, #4
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6722              		.loc 1 875 0
 6723 0076 07F57873 		add	r3, r7, #992
 6724 007a 9A60     		str	r2, [r3, #8]
 879:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activ),
 6725              		.loc 1 879 0
 6726 007c 97F83D25 		ldrb	r2, [r7, #1341]	@ zero_extendqisi2
 6727 0080 1346     		mov	r3, r2
 6728 0082 DB00     		lsls	r3, r3, #3
 6729 0084 9B1A     		subs	r3, r3, r2
 6730 0086 1B01     		lsls	r3, r3, #4
 6731 0088 E033     		adds	r3, r3, #224
 6732 008a D7F84025 		ldr	r2, [r7, #1344]
 6733 008e 1A44     		add	r2, r2, r3
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6734              		.loc 1 875 0
 6735 0090 07F57873 		add	r3, r7, #992
 6736 0094 DA60     		str	r2, [r3, #12]
 880:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].input_mode),
 6737              		.loc 1 880 0
 6738 0096 97F83D25 		ldrb	r2, [r7, #1341]	@ zero_extendqisi2
 6739 009a 1346     		mov	r3, r2
 6740 009c DB00     		lsls	r3, r3, #3
 6741 009e 9B1A     		subs	r3, r3, r2
 6742 00a0 1B01     		lsls	r3, r3, #4
 6743 00a2 03F58473 		add	r3, r3, #264
 6744 00a6 D7F84025 		ldr	r2, [r7, #1344]
 6745 00aa 1344     		add	r3, r3, r2
 6746 00ac 9A1D     		adds	r2, r3, #6
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6747              		.loc 1 875 0
 6748 00ae 07F57873 		add	r3, r7, #992
 6749 00b2 1A61     		str	r2, [r3, #16]
 881:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].control_mode), 
 6750              		.loc 1 881 0
 6751 00b4 97F83D25 		ldrb	r2, [r7, #1341]	@ zero_extendqisi2
 6752 00b8 1346     		mov	r3, r2
 6753 00ba DB00     		lsls	r3, r3, #3
 6754 00bc 9B1A     		subs	r3, r3, r2
 6755 00be 1B01     		lsls	r3, r3, #4
 6756 00c0 03F58473 		add	r3, r3, #264
 6757 00c4 D7F84025 		ldr	r2, [r7, #1344]
 6758 00c8 1344     		add	r3, r3, r2
 6759 00ca DA1D     		adds	r2, r3, #7
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6760              		.loc 1 875 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 161


 6761 00cc 07F57873 		add	r3, r7, #992
 6762 00d0 5A61     		str	r2, [r3, #20]
 882:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].res),
 6763              		.loc 1 882 0
 6764 00d2 97F83D25 		ldrb	r2, [r7, #1341]	@ zero_extendqisi2
 6765 00d6 D7F84015 		ldr	r1, [r7, #1344]
 6766 00da 1346     		mov	r3, r2
 6767 00dc DB00     		lsls	r3, r3, #3
 6768 00de 9B1A     		subs	r3, r3, r2
 6769 00e0 1B01     		lsls	r3, r3, #4
 6770 00e2 0B44     		add	r3, r3, r1
 6771 00e4 03F58873 		add	r3, r3, #272
 6772 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6773 00ea 1A46     		mov	r2, r3
 6774 00ec 1346     		mov	r3, r2
 6775 00ee 5B00     		lsls	r3, r3, #1
 6776 00f0 1344     		add	r3, r3, r2
 6777 00f2 1B01     		lsls	r3, r3, #4
 6778 00f4 03F5C873 		add	r3, r3, #400
 6779 00f8 D7F84025 		ldr	r2, [r7, #1344]
 6780 00fc 1344     		add	r3, r3, r2
 6781 00fe 5A1D     		adds	r2, r3, #5
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6782              		.loc 1 875 0
 6783 0100 07F57873 		add	r3, r7, #992
 6784 0104 9A61     		str	r2, [r3, #24]
 883:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_off[0]),
 6785              		.loc 1 883 0
 6786 0106 97F83D25 		ldrb	r2, [r7, #1341]	@ zero_extendqisi2
 6787 010a D7F84015 		ldr	r1, [r7, #1344]
 6788 010e 1346     		mov	r3, r2
 6789 0110 DB00     		lsls	r3, r3, #3
 6790 0112 9B1A     		subs	r3, r3, r2
 6791 0114 1B01     		lsls	r3, r3, #4
 6792 0116 0B44     		add	r3, r3, r1
 6793 0118 03F58873 		add	r3, r3, #272
 6794 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6795 011e 1A46     		mov	r2, r3
 6796 0120 1346     		mov	r3, r2
 6797 0122 5B00     		lsls	r3, r3, #1
 6798 0124 1344     		add	r3, r3, r2
 6799 0126 1B01     		lsls	r3, r3, #4
 6800 0128 03F5CC73 		add	r3, r3, #408
 6801 012c D7F84025 		ldr	r2, [r7, #1344]
 6802 0130 1A44     		add	r2, r2, r3
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6803              		.loc 1 875 0
 6804 0132 07F57873 		add	r3, r7, #992
 6805 0136 DA61     		str	r2, [r3, #28]
 884:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_mult[0]),
 6806              		.loc 1 884 0
 6807 0138 97F83D25 		ldrb	r2, [r7, #1341]	@ zero_extendqisi2
 6808 013c D7F84015 		ldr	r1, [r7, #1344]
 6809 0140 1346     		mov	r3, r2
 6810 0142 DB00     		lsls	r3, r3, #3
 6811 0144 9B1A     		subs	r3, r3, r2
 6812 0146 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 162


 6813 0148 0B44     		add	r3, r3, r1
 6814 014a 03F58873 		add	r3, r3, #272
 6815 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6816 0150 1A46     		mov	r2, r3
 6817 0152 1346     		mov	r3, r2
 6818 0154 5B00     		lsls	r3, r3, #1
 6819 0156 1344     		add	r3, r3, r2
 6820 0158 1B01     		lsls	r3, r3, #4
 6821 015a 03F5D073 		add	r3, r3, #416
 6822 015e D7F84025 		ldr	r2, [r7, #1344]
 6823 0162 1344     		add	r3, r3, r2
 6824 0164 1A1D     		adds	r2, r3, #4
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6825              		.loc 1 875 0
 6826 0166 07F57873 		add	r3, r7, #992
 6827 016a 1A62     		str	r2, [r3, #32]
 885:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_flag),                                    //10
 6828              		.loc 1 885 0
 6829 016c 97F83D25 		ldrb	r2, [r7, #1341]	@ zero_extendqisi2
 6830 0170 1346     		mov	r3, r2
 6831 0172 DB00     		lsls	r3, r3, #3
 6832 0174 9B1A     		subs	r3, r3, r2
 6833 0176 1B01     		lsls	r3, r3, #4
 6834 0178 E033     		adds	r3, r3, #224
 6835 017a D7F84025 		ldr	r2, [r7, #1344]
 6836 017e 1344     		add	r3, r3, r2
 6837 0180 DA1C     		adds	r2, r3, #3
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6838              		.loc 1 875 0
 6839 0182 07F57873 		add	r3, r7, #992
 6840 0186 5A62     		str	r2, [r3, #36]
 886:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_inf), 
 6841              		.loc 1 886 0
 6842 0188 97F83D25 		ldrb	r2, [r7, #1341]	@ zero_extendqisi2
 6843 018c 1346     		mov	r3, r2
 6844 018e DB00     		lsls	r3, r3, #3
 6845 0190 9B1A     		subs	r3, r3, r2
 6846 0192 1B01     		lsls	r3, r3, #4
 6847 0194 E033     		adds	r3, r3, #224
 6848 0196 D7F84025 		ldr	r2, [r7, #1344]
 6849 019a 1344     		add	r3, r3, r2
 6850 019c 1A1D     		adds	r2, r3, #4
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6851              		.loc 1 875 0
 6852 019e 07F57873 		add	r3, r7, #992
 6853 01a2 9A62     		str	r2, [r3, #40]
 887:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].max_step_neg),
 6854              		.loc 1 887 0
 6855 01a4 97F83D25 		ldrb	r2, [r7, #1341]	@ zero_extendqisi2
 6856 01a8 1346     		mov	r3, r2
 6857 01aa DB00     		lsls	r3, r3, #3
 6858 01ac 9B1A     		subs	r3, r3, r2
 6859 01ae 1B01     		lsls	r3, r3, #4
 6860 01b0 E833     		adds	r3, r3, #232
 6861 01b2 D7F84025 		ldr	r2, [r7, #1344]
 6862 01b6 1344     		add	r3, r3, r2
 6863 01b8 1A1D     		adds	r2, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 163


 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6864              		.loc 1 875 0
 6865 01ba 07F57873 		add	r3, r7, #992
 6866 01be DA62     		str	r2, [r3, #44]
 888:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].current_limit),
 6867              		.loc 1 888 0
 6868 01c0 97F83D25 		ldrb	r2, [r7, #1341]	@ zero_extendqisi2
 6869 01c4 1346     		mov	r3, r2
 6870 01c6 DB00     		lsls	r3, r3, #3
 6871 01c8 9B1A     		subs	r3, r3, r2
 6872 01ca 1B01     		lsls	r3, r3, #4
 6873 01cc 03F58473 		add	r3, r3, #264
 6874 01d0 D7F84025 		ldr	r2, [r7, #1344]
 6875 01d4 1344     		add	r3, r3, r2
 6876 01d6 1A1D     		adds	r2, r3, #4
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6877              		.loc 1 875 0
 6878 01d8 07F57873 		add	r3, r7, #992
 6879 01dc 1A63     		str	r2, [r3, #48]
 889:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_threshold[0]),
 6880              		.loc 1 889 0
 6881 01de D7F84035 		ldr	r3, [r7, #1344]
 6882 01e2 03F5F872 		add	r2, r3, #496
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6883              		.loc 1 875 0
 6884 01e6 07F57873 		add	r3, r7, #992
 6885 01ea 5A63     		str	r2, [r3, #52]
 890:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_calibration_flag),
 6886              		.loc 1 890 0
 6887 01ec D7F84035 		ldr	r3, [r7, #1344]
 6888 01f0 03F5FF72 		add	r2, r3, #510
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6889              		.loc 1 875 0
 6890 01f4 07F57873 		add	r3, r7, #992
 6891 01f8 9A63     		str	r2, [r3, #56]
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_max_value[0]),
 6892              		.loc 1 891 0
 6893 01fa D7F84035 		ldr	r3, [r7, #1344]
 6894 01fe 03F5FA72 		add	r2, r3, #500
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6895              		.loc 1 875 0
 6896 0202 07F57873 		add	r3, r7, #992
 6897 0206 DA63     		str	r2, [r3, #60]
 892:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_speed[0]), 
 6898              		.loc 1 892 0
 6899 0208 D7F84035 		ldr	r3, [r7, #1344]
 6900 020c 03F5FE72 		add	r2, r3, #508
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6901              		.loc 1 875 0
 6902 0210 07F57873 		add	r3, r7, #992
 6903 0214 1A64     		str	r2, [r3, #64]
 893:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].double_encoder_on_off),
 6904              		.loc 1 893 0
 6905 0216 97F83D25 		ldrb	r2, [r7, #1341]	@ zero_extendqisi2
 6906 021a D7F84015 		ldr	r1, [r7, #1344]
 6907 021e 1346     		mov	r3, r2
 6908 0220 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 164


 6909 0222 9B1A     		subs	r3, r3, r2
 6910 0224 1B01     		lsls	r3, r3, #4
 6911 0226 0B44     		add	r3, r3, r1
 6912 0228 03F58873 		add	r3, r3, #272
 6913 022c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6914 022e 1A46     		mov	r2, r3
 6915 0230 1346     		mov	r3, r2
 6916 0232 5B00     		lsls	r3, r3, #1
 6917 0234 1344     		add	r3, r3, r2
 6918 0236 1B01     		lsls	r3, r3, #4
 6919 0238 03F5D873 		add	r3, r3, #432
 6920 023c D7F84025 		ldr	r2, [r7, #1344]
 6921 0240 1A44     		add	r2, r2, r3
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6922              		.loc 1 875 0
 6923 0242 07F57873 		add	r3, r7, #992
 6924 0246 5A64     		str	r2, [r3, #68]
 894:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].motor_handle_ratio),
 6925              		.loc 1 894 0
 6926 0248 97F83D25 		ldrb	r2, [r7, #1341]	@ zero_extendqisi2
 6927 024c D7F84015 		ldr	r1, [r7, #1344]
 6928 0250 1346     		mov	r3, r2
 6929 0252 DB00     		lsls	r3, r3, #3
 6930 0254 9B1A     		subs	r3, r3, r2
 6931 0256 1B01     		lsls	r3, r3, #4
 6932 0258 0B44     		add	r3, r3, r1
 6933 025a 03F58873 		add	r3, r3, #272
 6934 025e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6935 0260 1A46     		mov	r2, r3
 6936 0262 1346     		mov	r3, r2
 6937 0264 5B00     		lsls	r3, r3, #1
 6938 0266 1344     		add	r3, r3, r2
 6939 0268 1B01     		lsls	r3, r3, #4
 6940 026a 03F5D873 		add	r3, r3, #432
 6941 026e D7F84025 		ldr	r2, [r7, #1344]
 6942 0272 1344     		add	r3, r3, r2
 6943 0274 1A1D     		adds	r2, r3, #4
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6944              		.loc 1 875 0
 6945 0276 07F57873 		add	r3, r7, #992
 6946 027a 9A64     		str	r2, [r3, #72]
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activate_pwm_rescaling),                          //20
 6947              		.loc 1 895 0
 6948 027c 97F83D25 		ldrb	r2, [r7, #1341]	@ zero_extendqisi2
 6949 0280 1346     		mov	r3, r2
 6950 0282 DB00     		lsls	r3, r3, #3
 6951 0284 9B1A     		subs	r3, r3, r2
 6952 0286 1B01     		lsls	r3, r3, #4
 6953 0288 E033     		adds	r3, r3, #224
 6954 028a D7F84025 		ldr	r2, [r7, #1344]
 6955 028e 1344     		add	r3, r3, r2
 6956 0290 5A1C     		adds	r2, r3, #1
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6957              		.loc 1 875 0
 6958 0292 07F57873 		add	r3, r7, #992
 6959 0296 DA64     		str	r2, [r3, #76]
 896:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].curr_lookup[0]),
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 165


 6960              		.loc 1 896 0
 6961 0298 97F83D25 		ldrb	r2, [r7, #1341]	@ zero_extendqisi2
 6962 029c 1346     		mov	r3, r2
 6963 029e DB00     		lsls	r3, r3, #3
 6964 02a0 9B1A     		subs	r3, r3, r2
 6965 02a2 1B01     		lsls	r3, r3, #4
 6966 02a4 F033     		adds	r3, r3, #240
 6967 02a6 D7F84025 		ldr	r2, [r7, #1344]
 6968 02aa 1344     		add	r3, r3, r2
 6969 02ac 1A1D     		adds	r2, r3, #4
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6970              		.loc 1 875 0
 6971 02ae 07F57873 		add	r3, r7, #992
 6972 02b2 1A65     		str	r2, [r3, #80]
 897:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.hw_maint_date),
 6973              		.loc 1 897 0
 6974 02b4 D7F84035 		ldr	r3, [r7, #1344]
 6975 02b8 03F1A102 		add	r2, r3, #161
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6976              		.loc 1 875 0
 6977 02bc 07F57873 		add	r3, r7, #992
 6978 02c0 5A65     		str	r2, [r3, #84]
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_pos), 
 6979              		.loc 1 898 0
 6980 02c2 D7F84035 		ldr	r3, [r7, #1344]
 6981 02c6 03F52872 		add	r2, r3, #672
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6982              		.loc 1 875 0
 6983 02ca 07F57873 		add	r3, r7, #992
 6984 02ce 9A65     		str	r2, [r3, #88]
 899:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_delay),
 6985              		.loc 1 899 0
 6986 02d0 D7F84035 		ldr	r3, [r7, #1344]
 6987 02d4 03F52972 		add	r2, r3, #676
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6988              		.loc 1 875 0
 6989 02d8 07F57873 		add	r3, r7, #992
 6990 02dc DA65     		str	r2, [r3, #92]
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_vel),
 6991              		.loc 1 900 0
 6992 02de D7F84035 		ldr	r3, [r7, #1344]
 6993 02e2 03F52A72 		add	r2, r3, #680
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6994              		.loc 1 875 0
 6995 02e6 07F57873 		add	r3, r7, #992
 6996 02ea 1A66     		str	r2, [r3, #96]
 901:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_position_flag),
 6997              		.loc 1 901 0
 6998 02ec D7F84035 		ldr	r3, [r7, #1344]
 6999 02f0 03F52B72 		add	r2, r3, #684
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7000              		.loc 1 875 0
 7001 02f4 07F57873 		add	r3, r7, #992
 7002 02f8 5A66     		str	r2, [r3, #100]
 902:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.switch_emg), 
 7003              		.loc 1 902 0
 7004 02fa D7F84035 		ldr	r3, [r7, #1344]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 166


 7005 02fe 03F2FF12 		addw	r2, r3, #511
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7006              		.loc 1 875 0
 7007 0302 07F57873 		add	r3, r7, #992
 7008 0306 9A66     		str	r2, [r3, #104]
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.right_left),
 7009              		.loc 1 903 0
 7010 0308 D7F84035 		ldr	r3, [r7, #1344]
 7011 030c 03F1A702 		add	r2, r3, #167
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7012              		.loc 1 875 0
 7013 0310 07F57873 		add	r3, r7, #992
 7014 0314 DA66     		str	r2, [r3, #108]
 904:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.read_imu_flag),
 7015              		.loc 1 904 0
 7016 0316 D7F84035 		ldr	r3, [r7, #1344]
 7017 031a 03F50072 		add	r2, r3, #512
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7018              		.loc 1 875 0
 7019 031e 07F57873 		add	r3, r7, #992
 7020 0322 1A67     		str	r2, [r3, #112]
 905:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.read_exp_port_flag),                                   //30
 7021              		.loc 1 905 0
 7022 0324 D7F84035 		ldr	r3, [r7, #1344]
 7023 0328 03F22622 		addw	r2, r3, #550
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7024              		.loc 1 875 0
 7025 032c 07F57873 		add	r3, r7, #992
 7026 0330 5A67     		str	r2, [r3, #116]
 906:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.reset_counters),
 7027              		.loc 1 906 0
 7028 0332 D7F84035 		ldr	r3, [r7, #1344]
 7029 0336 03F1A802 		add	r2, r3, #168
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7030              		.loc 1 875 0
 7031 033a 07F57873 		add	r3, r7, #992
 7032 033e 9A67     		str	r2, [r3, #120]
 907:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.curr_time[0]),
 7033              		.loc 1 907 0
 7034 0340 D7F84035 		ldr	r3, [r7, #1344]
 7035 0344 03F50872 		add	r2, r3, #544
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7036              		.loc 1 875 0
 7037 0348 07F57873 		add	r3, r7, #992
 7038 034c DA67     		str	r2, [r3, #124]
 908:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.SPI_read_delay),
 7039              		.loc 1 908 0
 7040 034e D7F84035 		ldr	r3, [r7, #1344]
 7041 0352 03F20122 		addw	r2, r3, #513
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7042              		.loc 1 875 0
 7043 0356 07F57873 		add	r3, r7, #992
 7044 035a C3F88020 		str	r2, [r3, #128]
 909:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.IMU_conf[0][0]),
 7045              		.loc 1 909 0
 7046 035e D7F84035 		ldr	r3, [r7, #1344]
 7047 0362 03F20222 		addw	r2, r3, #514
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 167


 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7048              		.loc 1 875 0
 7049 0366 07F57873 		add	r3, r7, #992
 7050 036a C3F88420 		str	r2, [r3, #132]
 910:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.user_id),
 7051              		.loc 1 910 0
 7052 036e D7F84035 		ldr	r3, [r7, #1344]
 7053 0372 03F1AB02 		add	r2, r3, #171
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7054              		.loc 1 875 0
 7055 0376 07F57873 		add	r3, r7, #992
 7056 037a C3F88820 		str	r2, [r3, #136]
 911:..\src/command_processing.c ****         (uint8*)&(MEM_P->user[MEM_P->dev.user_id].user_code_string),
 7057              		.loc 1 911 0
 7058 037e D7F84035 		ldr	r3, [r7, #1344]
 7059 0382 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 7060 0386 1233     		adds	r3, r3, #18
 7061 0388 5B01     		lsls	r3, r3, #5
 7062 038a D7F84025 		ldr	r2, [r7, #1344]
 7063 038e 1A44     		add	r2, r2, r3
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7064              		.loc 1 875 0
 7065 0390 07F57873 		add	r3, r7, #992
 7066 0394 C3F88C20 		str	r2, [r3, #140]
 912:..\src/command_processing.c ****         
 913:..\src/command_processing.c ****         // GENERIC PARAMS
 914:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[MOTOR_IDX].encoder_line),			// other params of 1st motor
 7067              		.loc 1 914 0
 7068 0398 97F83D25 		ldrb	r2, [r7, #1341]	@ zero_extendqisi2
 7069 039c 1346     		mov	r3, r2
 7070 039e DB00     		lsls	r3, r3, #3
 7071 03a0 9B1A     		subs	r3, r3, r2
 7072 03a2 1B01     		lsls	r3, r3, #4
 7073 03a4 03F58873 		add	r3, r3, #272
 7074 03a8 D7F84025 		ldr	r2, [r7, #1344]
 7075 03ac 1A44     		add	r2, r2, r3
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7076              		.loc 1 875 0
 7077 03ae 07F57873 		add	r3, r7, #992
 7078 03b2 C3F89020 		str	r2, [r3, #144]
 915:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].motor_driver_type),
 7079              		.loc 1 915 0
 7080 03b6 97F83D25 		ldrb	r2, [r7, #1341]	@ zero_extendqisi2
 7081 03ba 1346     		mov	r3, r2
 7082 03bc DB00     		lsls	r3, r3, #3
 7083 03be 9B1A     		subs	r3, r3, r2
 7084 03c0 1B01     		lsls	r3, r3, #4
 7085 03c2 E033     		adds	r3, r3, #224
 7086 03c4 D7F84025 		ldr	r2, [r7, #1344]
 7087 03c8 1344     		add	r3, r3, r2
 7088 03ca 9A1C     		adds	r2, r3, #2
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7089              		.loc 1 875 0
 7090 03cc 07F57873 		add	r3, r7, #992
 7091 03d0 C3F89420 		str	r2, [r3, #148]
 916:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].pwm_rate_limiter),
 7092              		.loc 1 916 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 168


 7093 03d4 97F83D25 		ldrb	r2, [r7, #1341]	@ zero_extendqisi2
 7094 03d8 1346     		mov	r3, r2
 7095 03da DB00     		lsls	r3, r3, #3
 7096 03dc 9B1A     		subs	r3, r3, r2
 7097 03de 1B01     		lsls	r3, r3, #4
 7098 03e0 03F58873 		add	r3, r3, #272
 7099 03e4 D7F84025 		ldr	r2, [r7, #1344]
 7100 03e8 1344     		add	r3, r3, r2
 7101 03ea 5A1C     		adds	r2, r3, #1
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7102              		.loc 1 875 0
 7103 03ec 07F57873 		add	r3, r7, #992
 7104 03f0 C3F89820 		str	r2, [r3, #152]
 917:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].not_revers_motor_flag), 	//40 
 7105              		.loc 1 917 0
 7106 03f4 97F83D25 		ldrb	r2, [r7, #1341]	@ zero_extendqisi2
 7107 03f8 1346     		mov	r3, r2
 7108 03fa DB00     		lsls	r3, r3, #3
 7109 03fc 9B1A     		subs	r3, r3, r2
 7110 03fe 1B01     		lsls	r3, r3, #4
 7111 0400 03F58873 		add	r3, r3, #272
 7112 0404 D7F84025 		ldr	r2, [r7, #1344]
 7113 0408 1344     		add	r3, r3, r2
 7114 040a 9A1C     		adds	r2, r3, #2
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7115              		.loc 1 875 0
 7116 040c 07F57873 		add	r3, r7, #992
 7117 0410 C3F89C20 		str	r2, [r3, #156]
 918:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 7118              		.loc 1 918 0
 7119 0414 97F83D25 		ldrb	r2, [r7, #1341]	@ zero_extendqisi2
 7120 0418 D7F84015 		ldr	r1, [r7, #1344]
 7121 041c 1346     		mov	r3, r2
 7122 041e DB00     		lsls	r3, r3, #3
 7123 0420 9B1A     		subs	r3, r3, r2
 7124 0422 1B01     		lsls	r3, r3, #4
 7125 0424 0B44     		add	r3, r3, r1
 7126 0426 03F58873 		add	r3, r3, #272
 7127 042a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7128 042c 1A46     		mov	r2, r3
 7129 042e 1346     		mov	r3, r2
 7130 0430 5B00     		lsls	r3, r3, #1
 7131 0432 1344     		add	r3, r3, r2
 7132 0434 1B01     		lsls	r3, r3, #4
 7133 0436 03F5D873 		add	r3, r3, #432
 7134 043a D7F84025 		ldr	r2, [r7, #1344]
 7135 043e 1344     		add	r3, r3, r2
 7136 0440 5A1C     		adds	r2, r3, #1
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7137              		.loc 1 875 0
 7138 0442 07F57873 		add	r3, r7, #992
 7139 0446 C3F8A020 		str	r2, [r3, #160]
 919:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].gears_params),        
 7140              		.loc 1 919 0
 7141 044a 97F83D25 		ldrb	r2, [r7, #1341]	@ zero_extendqisi2
 7142 044e D7F84015 		ldr	r1, [r7, #1344]
 7143 0452 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 169


 7144 0454 DB00     		lsls	r3, r3, #3
 7145 0456 9B1A     		subs	r3, r3, r2
 7146 0458 1B01     		lsls	r3, r3, #4
 7147 045a 0B44     		add	r3, r3, r1
 7148 045c 03F58873 		add	r3, r3, #272
 7149 0460 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7150 0462 1A46     		mov	r2, r3
 7151 0464 1346     		mov	r3, r2
 7152 0466 5B00     		lsls	r3, r3, #1
 7153 0468 1344     		add	r3, r3, r2
 7154 046a 1B01     		lsls	r3, r3, #4
 7155 046c 03F5D873 		add	r3, r3, #432
 7156 0470 D7F84025 		ldr	r2, [r7, #1344]
 7157 0474 1344     		add	r3, r3, r2
 7158 0476 5A1D     		adds	r2, r3, #5
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7159              		.loc 1 875 0
 7160 0478 07F57873 		add	r3, r7, #992
 7161 047c C3F8A420 		str	r2, [r3, #164]
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.use_2nd_motor_flag),					// second motor config and params
 7162              		.loc 1 920 0
 7163 0480 D7F84035 		ldr	r3, [r7, #1344]
 7164 0484 03F1A902 		add	r2, r3, #169
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7165              		.loc 1 875 0
 7166 0488 07F57873 		add	r3, r7, #992
 7167 048c C3F8A820 		str	r2, [r3, #168]
 921:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p),
 7168              		.loc 1 921 0
 7169 0490 97F83C25 		ldrb	r2, [r7, #1340]	@ zero_extendqisi2
 7170 0494 1346     		mov	r3, r2
 7171 0496 DB00     		lsls	r3, r3, #3
 7172 0498 9B1A     		subs	r3, r3, r2
 7173 049a 1B01     		lsls	r3, r3, #4
 7174 049c B033     		adds	r3, r3, #176
 7175 049e D7F84025 		ldr	r2, [r7, #1344]
 7176 04a2 1A44     		add	r2, r2, r3
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7177              		.loc 1 875 0
 7178 04a4 07F57873 		add	r3, r7, #992
 7179 04a8 C3F8AC20 		str	r2, [r3, #172]
 922:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p_c), 
 7180              		.loc 1 922 0
 7181 04ac 97F83C25 		ldrb	r2, [r7, #1340]	@ zero_extendqisi2
 7182 04b0 1346     		mov	r3, r2
 7183 04b2 DB00     		lsls	r3, r3, #3
 7184 04b4 9B1A     		subs	r3, r3, r2
 7185 04b6 1B01     		lsls	r3, r3, #4
 7186 04b8 B833     		adds	r3, r3, #184
 7187 04ba D7F84025 		ldr	r2, [r7, #1344]
 7188 04be 1344     		add	r3, r3, r2
 7189 04c0 1A1D     		adds	r2, r3, #4
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7190              		.loc 1 875 0
 7191 04c2 07F57873 		add	r3, r7, #992
 7192 04c6 C3F8B020 		str	r2, [r3, #176]
 923:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activ),
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 170


 7193              		.loc 1 923 0
 7194 04ca 97F83C25 		ldrb	r2, [r7, #1340]	@ zero_extendqisi2
 7195 04ce 1346     		mov	r3, r2
 7196 04d0 DB00     		lsls	r3, r3, #3
 7197 04d2 9B1A     		subs	r3, r3, r2
 7198 04d4 1B01     		lsls	r3, r3, #4
 7199 04d6 E033     		adds	r3, r3, #224
 7200 04d8 D7F84025 		ldr	r2, [r7, #1344]
 7201 04dc 1A44     		add	r2, r2, r3
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7202              		.loc 1 875 0
 7203 04de 07F57873 		add	r3, r7, #992
 7204 04e2 C3F8B420 		str	r2, [r3, #180]
 924:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].input_mode),
 7205              		.loc 1 924 0
 7206 04e6 97F83C25 		ldrb	r2, [r7, #1340]	@ zero_extendqisi2
 7207 04ea 1346     		mov	r3, r2
 7208 04ec DB00     		lsls	r3, r3, #3
 7209 04ee 9B1A     		subs	r3, r3, r2
 7210 04f0 1B01     		lsls	r3, r3, #4
 7211 04f2 03F58473 		add	r3, r3, #264
 7212 04f6 D7F84025 		ldr	r2, [r7, #1344]
 7213 04fa 1344     		add	r3, r3, r2
 7214 04fc 9A1D     		adds	r2, r3, #6
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7215              		.loc 1 875 0
 7216 04fe 07F57873 		add	r3, r7, #992
 7217 0502 C3F8B820 		str	r2, [r3, #184]
 925:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].control_mode), 
 7218              		.loc 1 925 0
 7219 0506 97F83C25 		ldrb	r2, [r7, #1340]	@ zero_extendqisi2
 7220 050a 1346     		mov	r3, r2
 7221 050c DB00     		lsls	r3, r3, #3
 7222 050e 9B1A     		subs	r3, r3, r2
 7223 0510 1B01     		lsls	r3, r3, #4
 7224 0512 03F58473 		add	r3, r3, #264
 7225 0516 D7F84025 		ldr	r2, [r7, #1344]
 7226 051a 1344     		add	r3, r3, r2
 7227 051c DA1D     		adds	r2, r3, #7
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7228              		.loc 1 875 0
 7229 051e 07F57873 		add	r3, r7, #992
 7230 0522 C3F8BC20 		str	r2, [r3, #188]
 926:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].res),
 7231              		.loc 1 926 0
 7232 0526 97F83C25 		ldrb	r2, [r7, #1340]	@ zero_extendqisi2
 7233 052a D7F84015 		ldr	r1, [r7, #1344]
 7234 052e 1346     		mov	r3, r2
 7235 0530 DB00     		lsls	r3, r3, #3
 7236 0532 9B1A     		subs	r3, r3, r2
 7237 0534 1B01     		lsls	r3, r3, #4
 7238 0536 0B44     		add	r3, r3, r1
 7239 0538 03F58873 		add	r3, r3, #272
 7240 053c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7241 053e 1A46     		mov	r2, r3
 7242 0540 1346     		mov	r3, r2
 7243 0542 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 171


 7244 0544 1344     		add	r3, r3, r2
 7245 0546 1B01     		lsls	r3, r3, #4
 7246 0548 03F5C873 		add	r3, r3, #400
 7247 054c D7F84025 		ldr	r2, [r7, #1344]
 7248 0550 1344     		add	r3, r3, r2
 7249 0552 5A1D     		adds	r2, r3, #5
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7250              		.loc 1 875 0
 7251 0554 07F57873 		add	r3, r7, #992
 7252 0558 C3F8C020 		str	r2, [r3, #192]
 927:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_off[0]),    //50
 7253              		.loc 1 927 0
 7254 055c 97F83C25 		ldrb	r2, [r7, #1340]	@ zero_extendqisi2
 7255 0560 D7F84015 		ldr	r1, [r7, #1344]
 7256 0564 1346     		mov	r3, r2
 7257 0566 DB00     		lsls	r3, r3, #3
 7258 0568 9B1A     		subs	r3, r3, r2
 7259 056a 1B01     		lsls	r3, r3, #4
 7260 056c 0B44     		add	r3, r3, r1
 7261 056e 03F58873 		add	r3, r3, #272
 7262 0572 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7263 0574 1A46     		mov	r2, r3
 7264 0576 1346     		mov	r3, r2
 7265 0578 5B00     		lsls	r3, r3, #1
 7266 057a 1344     		add	r3, r3, r2
 7267 057c 1B01     		lsls	r3, r3, #4
 7268 057e 03F5CC73 		add	r3, r3, #408
 7269 0582 D7F84025 		ldr	r2, [r7, #1344]
 7270 0586 1A44     		add	r2, r2, r3
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7271              		.loc 1 875 0
 7272 0588 07F57873 		add	r3, r7, #992
 7273 058c C3F8C420 		str	r2, [r3, #196]
 928:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_mult[0]),
 7274              		.loc 1 928 0
 7275 0590 97F83C25 		ldrb	r2, [r7, #1340]	@ zero_extendqisi2
 7276 0594 D7F84015 		ldr	r1, [r7, #1344]
 7277 0598 1346     		mov	r3, r2
 7278 059a DB00     		lsls	r3, r3, #3
 7279 059c 9B1A     		subs	r3, r3, r2
 7280 059e 1B01     		lsls	r3, r3, #4
 7281 05a0 0B44     		add	r3, r3, r1
 7282 05a2 03F58873 		add	r3, r3, #272
 7283 05a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7284 05a8 1A46     		mov	r2, r3
 7285 05aa 1346     		mov	r3, r2
 7286 05ac 5B00     		lsls	r3, r3, #1
 7287 05ae 1344     		add	r3, r3, r2
 7288 05b0 1B01     		lsls	r3, r3, #4
 7289 05b2 03F5D073 		add	r3, r3, #416
 7290 05b6 D7F84025 		ldr	r2, [r7, #1344]
 7291 05ba 1344     		add	r3, r3, r2
 7292 05bc 1A1D     		adds	r2, r3, #4
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7293              		.loc 1 875 0
 7294 05be 07F57873 		add	r3, r7, #992
 7295 05c2 C3F8C820 		str	r2, [r3, #200]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 172


 929:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_flag),
 7296              		.loc 1 929 0
 7297 05c6 97F83C25 		ldrb	r2, [r7, #1340]	@ zero_extendqisi2
 7298 05ca 1346     		mov	r3, r2
 7299 05cc DB00     		lsls	r3, r3, #3
 7300 05ce 9B1A     		subs	r3, r3, r2
 7301 05d0 1B01     		lsls	r3, r3, #4
 7302 05d2 E033     		adds	r3, r3, #224
 7303 05d4 D7F84025 		ldr	r2, [r7, #1344]
 7304 05d8 1344     		add	r3, r3, r2
 7305 05da DA1C     		adds	r2, r3, #3
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7306              		.loc 1 875 0
 7307 05dc 07F57873 		add	r3, r7, #992
 7308 05e0 C3F8CC20 		str	r2, [r3, #204]
 930:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_inf), 
 7309              		.loc 1 930 0
 7310 05e4 97F83C25 		ldrb	r2, [r7, #1340]	@ zero_extendqisi2
 7311 05e8 1346     		mov	r3, r2
 7312 05ea DB00     		lsls	r3, r3, #3
 7313 05ec 9B1A     		subs	r3, r3, r2
 7314 05ee 1B01     		lsls	r3, r3, #4
 7315 05f0 E033     		adds	r3, r3, #224
 7316 05f2 D7F84025 		ldr	r2, [r7, #1344]
 7317 05f6 1344     		add	r3, r3, r2
 7318 05f8 1A1D     		adds	r2, r3, #4
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7319              		.loc 1 875 0
 7320 05fa 07F57873 		add	r3, r7, #992
 7321 05fe C3F8D020 		str	r2, [r3, #208]
 931:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].max_step_neg),
 7322              		.loc 1 931 0
 7323 0602 97F83C25 		ldrb	r2, [r7, #1340]	@ zero_extendqisi2
 7324 0606 1346     		mov	r3, r2
 7325 0608 DB00     		lsls	r3, r3, #3
 7326 060a 9B1A     		subs	r3, r3, r2
 7327 060c 1B01     		lsls	r3, r3, #4
 7328 060e E833     		adds	r3, r3, #232
 7329 0610 D7F84025 		ldr	r2, [r7, #1344]
 7330 0614 1344     		add	r3, r3, r2
 7331 0616 1A1D     		adds	r2, r3, #4
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7332              		.loc 1 875 0
 7333 0618 07F57873 		add	r3, r7, #992
 7334 061c C3F8D420 		str	r2, [r3, #212]
 932:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].current_limit),
 7335              		.loc 1 932 0
 7336 0620 97F83C25 		ldrb	r2, [r7, #1340]	@ zero_extendqisi2
 7337 0624 1346     		mov	r3, r2
 7338 0626 DB00     		lsls	r3, r3, #3
 7339 0628 9B1A     		subs	r3, r3, r2
 7340 062a 1B01     		lsls	r3, r3, #4
 7341 062c 03F58473 		add	r3, r3, #264
 7342 0630 D7F84025 		ldr	r2, [r7, #1344]
 7343 0634 1344     		add	r3, r3, r2
 7344 0636 1A1D     		adds	r2, r3, #4
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 173


 7345              		.loc 1 875 0
 7346 0638 07F57873 		add	r3, r7, #992
 7347 063c C3F8D820 		str	r2, [r3, #216]
 933:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].double_encoder_on_off),
 7348              		.loc 1 933 0
 7349 0640 97F83C25 		ldrb	r2, [r7, #1340]	@ zero_extendqisi2
 7350 0644 D7F84015 		ldr	r1, [r7, #1344]
 7351 0648 1346     		mov	r3, r2
 7352 064a DB00     		lsls	r3, r3, #3
 7353 064c 9B1A     		subs	r3, r3, r2
 7354 064e 1B01     		lsls	r3, r3, #4
 7355 0650 0B44     		add	r3, r3, r1
 7356 0652 03F58873 		add	r3, r3, #272
 7357 0656 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7358 0658 1A46     		mov	r2, r3
 7359 065a 1346     		mov	r3, r2
 7360 065c 5B00     		lsls	r3, r3, #1
 7361 065e 1344     		add	r3, r3, r2
 7362 0660 1B01     		lsls	r3, r3, #4
 7363 0662 03F5D873 		add	r3, r3, #432
 7364 0666 D7F84025 		ldr	r2, [r7, #1344]
 7365 066a 1A44     		add	r2, r2, r3
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7366              		.loc 1 875 0
 7367 066c 07F57873 		add	r3, r7, #992
 7368 0670 C3F8DC20 		str	r2, [r3, #220]
 934:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].motor_handle_ratio),
 7369              		.loc 1 934 0
 7370 0674 97F83C25 		ldrb	r2, [r7, #1340]	@ zero_extendqisi2
 7371 0678 D7F84015 		ldr	r1, [r7, #1344]
 7372 067c 1346     		mov	r3, r2
 7373 067e DB00     		lsls	r3, r3, #3
 7374 0680 9B1A     		subs	r3, r3, r2
 7375 0682 1B01     		lsls	r3, r3, #4
 7376 0684 0B44     		add	r3, r3, r1
 7377 0686 03F58873 		add	r3, r3, #272
 7378 068a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7379 068c 1A46     		mov	r2, r3
 7380 068e 1346     		mov	r3, r2
 7381 0690 5B00     		lsls	r3, r3, #1
 7382 0692 1344     		add	r3, r3, r2
 7383 0694 1B01     		lsls	r3, r3, #4
 7384 0696 03F5D873 		add	r3, r3, #432
 7385 069a D7F84025 		ldr	r2, [r7, #1344]
 7386 069e 1344     		add	r3, r3, r2
 7387 06a0 1A1D     		adds	r2, r3, #4
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7388              		.loc 1 875 0
 7389 06a2 07F57873 		add	r3, r7, #992
 7390 06a6 C3F8E020 		str	r2, [r3, #224]
 935:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activate_pwm_rescaling),
 7391              		.loc 1 935 0
 7392 06aa 97F83C25 		ldrb	r2, [r7, #1340]	@ zero_extendqisi2
 7393 06ae 1346     		mov	r3, r2
 7394 06b0 DB00     		lsls	r3, r3, #3
 7395 06b2 9B1A     		subs	r3, r3, r2
 7396 06b4 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 174


 7397 06b6 E033     		adds	r3, r3, #224
 7398 06b8 D7F84025 		ldr	r2, [r7, #1344]
 7399 06bc 1344     		add	r3, r3, r2
 7400 06be 5A1C     		adds	r2, r3, #1
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7401              		.loc 1 875 0
 7402 06c0 07F57873 		add	r3, r7, #992
 7403 06c4 C3F8E420 		str	r2, [r3, #228]
 936:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].curr_lookup[0]),
 7404              		.loc 1 936 0
 7405 06c8 97F83C25 		ldrb	r2, [r7, #1340]	@ zero_extendqisi2
 7406 06cc 1346     		mov	r3, r2
 7407 06ce DB00     		lsls	r3, r3, #3
 7408 06d0 9B1A     		subs	r3, r3, r2
 7409 06d2 1B01     		lsls	r3, r3, #4
 7410 06d4 F033     		adds	r3, r3, #240
 7411 06d6 D7F84025 		ldr	r2, [r7, #1344]
 7412 06da 1344     		add	r3, r3, r2
 7413 06dc 1A1D     		adds	r2, r3, #4
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7414              		.loc 1 875 0
 7415 06de 07F57873 		add	r3, r7, #992
 7416 06e2 C3F8E820 		str	r2, [r3, #232]
 937:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line),         //60
 7417              		.loc 1 937 0
 7418 06e6 97F83C25 		ldrb	r2, [r7, #1340]	@ zero_extendqisi2
 7419 06ea 1346     		mov	r3, r2
 7420 06ec DB00     		lsls	r3, r3, #3
 7421 06ee 9B1A     		subs	r3, r3, r2
 7422 06f0 1B01     		lsls	r3, r3, #4
 7423 06f2 03F58873 		add	r3, r3, #272
 7424 06f6 D7F84025 		ldr	r2, [r7, #1344]
 7425 06fa 1A44     		add	r2, r2, r3
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7426              		.loc 1 875 0
 7427 06fc 07F57873 		add	r3, r7, #992
 7428 0700 C3F8EC20 		str	r2, [r3, #236]
 938:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].motor_driver_type),
 7429              		.loc 1 938 0
 7430 0704 97F83C25 		ldrb	r2, [r7, #1340]	@ zero_extendqisi2
 7431 0708 1346     		mov	r3, r2
 7432 070a DB00     		lsls	r3, r3, #3
 7433 070c 9B1A     		subs	r3, r3, r2
 7434 070e 1B01     		lsls	r3, r3, #4
 7435 0710 E033     		adds	r3, r3, #224
 7436 0712 D7F84025 		ldr	r2, [r7, #1344]
 7437 0716 1344     		add	r3, r3, r2
 7438 0718 9A1C     		adds	r2, r3, #2
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7439              		.loc 1 875 0
 7440 071a 07F57873 		add	r3, r7, #992
 7441 071e C3F8F020 		str	r2, [r3, #240]
 939:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pwm_rate_limiter),
 7442              		.loc 1 939 0
 7443 0722 97F83C25 		ldrb	r2, [r7, #1340]	@ zero_extendqisi2
 7444 0726 1346     		mov	r3, r2
 7445 0728 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 175


 7446 072a 9B1A     		subs	r3, r3, r2
 7447 072c 1B01     		lsls	r3, r3, #4
 7448 072e 03F58873 		add	r3, r3, #272
 7449 0732 D7F84025 		ldr	r2, [r7, #1344]
 7450 0736 1344     		add	r3, r3, r2
 7451 0738 5A1C     		adds	r2, r3, #1
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7452              		.loc 1 875 0
 7453 073a 07F57873 		add	r3, r7, #992
 7454 073e C3F8F420 		str	r2, [r3, #244]
 940:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].not_revers_motor_flag),
 7455              		.loc 1 940 0
 7456 0742 97F83C25 		ldrb	r2, [r7, #1340]	@ zero_extendqisi2
 7457 0746 1346     		mov	r3, r2
 7458 0748 DB00     		lsls	r3, r3, #3
 7459 074a 9B1A     		subs	r3, r3, r2
 7460 074c 1B01     		lsls	r3, r3, #4
 7461 074e 03F58873 		add	r3, r3, #272
 7462 0752 D7F84025 		ldr	r2, [r7, #1344]
 7463 0756 1344     		add	r3, r3, r2
 7464 0758 9A1C     		adds	r2, r3, #2
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7465              		.loc 1 875 0
 7466 075a 07F57873 		add	r3, r7, #992
 7467 075e C3F8F820 		str	r2, [r3, #248]
 941:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 7468              		.loc 1 941 0
 7469 0762 97F83C25 		ldrb	r2, [r7, #1340]	@ zero_extendqisi2
 7470 0766 D7F84015 		ldr	r1, [r7, #1344]
 7471 076a 1346     		mov	r3, r2
 7472 076c DB00     		lsls	r3, r3, #3
 7473 076e 9B1A     		subs	r3, r3, r2
 7474 0770 1B01     		lsls	r3, r3, #4
 7475 0772 0B44     		add	r3, r3, r1
 7476 0774 03F58873 		add	r3, r3, #272
 7477 0778 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7478 077a 1A46     		mov	r2, r3
 7479 077c 1346     		mov	r3, r2
 7480 077e 5B00     		lsls	r3, r3, #1
 7481 0780 1344     		add	r3, r3, r2
 7482 0782 1B01     		lsls	r3, r3, #4
 7483 0784 03F5D873 		add	r3, r3, #432
 7484 0788 D7F84025 		ldr	r2, [r7, #1344]
 7485 078c 1344     		add	r3, r3, r2
 7486 078e 5A1C     		adds	r2, r3, #1
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7487              		.loc 1 875 0
 7488 0790 07F57873 		add	r3, r7, #992
 7489 0794 C3F8FC20 		str	r2, [r3, #252]
 942:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].gears_params),
 7490              		.loc 1 942 0
 7491 0798 97F83C25 		ldrb	r2, [r7, #1340]	@ zero_extendqisi2
 7492 079c D7F84015 		ldr	r1, [r7, #1344]
 7493 07a0 1346     		mov	r3, r2
 7494 07a2 DB00     		lsls	r3, r3, #3
 7495 07a4 9B1A     		subs	r3, r3, r2
 7496 07a6 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 176


 7497 07a8 0B44     		add	r3, r3, r1
 7498 07aa 03F58873 		add	r3, r3, #272
 7499 07ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7500 07b0 1A46     		mov	r2, r3
 7501 07b2 1346     		mov	r3, r2
 7502 07b4 5B00     		lsls	r3, r3, #1
 7503 07b6 1344     		add	r3, r3, r2
 7504 07b8 1B01     		lsls	r3, r3, #4
 7505 07ba 03F5D873 		add	r3, r3, #432
 7506 07be D7F84025 		ldr	r2, [r7, #1344]
 7507 07c2 1344     		add	r3, r3, r2
 7508 07c4 5A1D     		adds	r2, r3, #5
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7509              		.loc 1 875 0
 7510 07c6 07F57873 		add	r3, r7, #992
 7511 07ca C3F80021 		str	r2, [r3, #256]
 943:..\src/command_processing.c ****         
 944:..\src/command_processing.c **** 		(uint8*)&(MEM_P->enc[0].Enc_raw_read_conf[0]),					// additional generic params
 7512              		.loc 1 944 0
 7513 07ce D7F84035 		ldr	r3, [r7, #1344]
 7514 07d2 03F5C872 		add	r2, r3, #400
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7515              		.loc 1 875 0
 7516 07d6 07F57873 		add	r3, r7, #992
 7517 07da C3F80421 		str	r2, [r3, #260]
 945:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[1].Enc_raw_read_conf[0]),
 7518              		.loc 1 945 0
 7519 07de D7F84035 		ldr	r3, [r7, #1344]
 7520 07e2 03F5E072 		add	r2, r3, #448
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7521              		.loc 1 875 0
 7522 07e6 07F57873 		add	r3, r7, #992
 7523 07ea C3F80821 		str	r2, [r3, #264]
 946:..\src/command_processing.c ****         (uint8*)&(MEM_P->exp.read_ADC_sensors_port_flag),		
 7524              		.loc 1 946 0
 7525 07ee D7F84035 		ldr	r3, [r7, #1344]
 7526 07f2 03F22722 		addw	r2, r3, #551
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7527              		.loc 1 875 0
 7528 07f6 07F57873 		add	r3, r7, #992
 7529 07fa C3F80C21 		str	r2, [r3, #268]
 947:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[0]),
 7530              		.loc 1 947 0
 7531 07fe D7F84035 		ldr	r3, [r7, #1344]
 7532 0802 03F50A72 		add	r2, r3, #552
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7533              		.loc 1 875 0
 7534 0806 07F57873 		add	r3, r7, #992
 7535 080a C3F81021 		str	r2, [r3, #272]
 948:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[6]),                          //70  
 7536              		.loc 1 948 0
 7537 080e D7F84035 		ldr	r3, [r7, #1344]
 7538 0812 03F22E22 		addw	r2, r3, #558
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7539              		.loc 1 875 0
 7540 0816 07F57873 		add	r3, r7, #992
 7541 081a C3F81421 		str	r2, [r3, #276]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 177


 949:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_closure_speed),
 7542              		.loc 1 949 0
 7543 081e D7F84035 		ldr	r3, [r7, #1344]
 7544 0822 03F52C72 		add	r2, r3, #688
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7545              		.loc 1 875 0
 7546 0826 07F57873 		add	r3, r7, #992
 7547 082a C3F81821 		str	r2, [r3, #280]
 950:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_threshold),
 7548              		.loc 1 950 0
 7549 082e D7F84035 		ldr	r3, [r7, #1344]
 7550 0832 03F2B222 		addw	r2, r3, #690
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7551              		.loc 1 875 0
 7552 0836 07F57873 		add	r3, r7, #992
 7553 083a C3F81C21 		str	r2, [r3, #284]
 951:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_gains[0]),
 7554              		.loc 1 951 0
 7555 083e D7F84035 		ldr	r3, [r7, #1344]
 7556 0842 03F52D72 		add	r2, r3, #692
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7557              		.loc 1 875 0
 7558 0846 07F57873 		add	r3, r7, #992
 7559 084a C3F82021 		str	r2, [r3, #288]
 952:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.dev_type),
 7560              		.loc 1 952 0
 7561 084e D7F84035 		ldr	r3, [r7, #1344]
 7562 0852 03F1AC02 		add	r2, r3, #172
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7563              		.loc 1 875 0
 7564 0856 07F57873 		add	r3, r7, #992
 7565 085a C3F82421 		str	r2, [r3, #292]
 953:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.activation_mode),                           
 7566              		.loc 1 953 0
 7567 085e D7F84035 		ldr	r3, [r7, #1344]
 7568 0862 03F53872 		add	r2, r3, #736
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7569              		.loc 1 875 0
 7570 0866 07F57873 		add	r3, r7, #992
 7571 086a C3F82821 		str	r2, [r3, #296]
 954:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.fast_act_threshold[0]),
 7572              		.loc 1 954 0
 7573 086e D7F84035 		ldr	r3, [r7, #1344]
 7574 0872 03F2E222 		addw	r2, r3, #738
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7575              		.loc 1 875 0
 7576 0876 07F57873 		add	r3, r7, #992
 7577 087a C3F82C21 		str	r2, [r3, #300]
 955:..\src/command_processing.c ****         
 956:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.wrist_direction_association),              // additional wrist params
 7578              		.loc 1 956 0
 7579 087e D7F84035 		ldr	r3, [r7, #1344]
 7580 0882 03F2E622 		addw	r2, r3, #742
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7581              		.loc 1 875 0
 7582 0886 07F57873 		add	r3, r7, #992
 7583 088a C3F83021 		str	r2, [r3, #304]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 178


 957:..\src/command_processing.c ****         
 958:..\src/command_processing.c ****         (uint8*)&(MEM_P->MS.slave_comm_active),                        // additional master params
 7584              		.loc 1 958 0
 7585 088e D7F84035 		ldr	r3, [r7, #1344]
 7586 0892 03F53072 		add	r2, r3, #704
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7587              		.loc 1 875 0
 7588 0896 07F57873 		add	r3, r7, #992
 7589 089a C3F83421 		str	r2, [r3, #308]
 959:..\src/command_processing.c ****         (uint8*)&(MEM_P->MS.slave_ID),
 7590              		.loc 1 959 0
 7591 089e D7F84035 		ldr	r3, [r7, #1344]
 7592 08a2 03F2C122 		addw	r2, r3, #705
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7593              		.loc 1 875 0
 7594 08a6 07F57873 		add	r3, r7, #992
 7595 08aa C3F83821 		str	r2, [r3, #312]
 960:..\src/command_processing.c ****         
 961:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.max_residual_current),                     // additional feedback param
 7596              		.loc 1 961 0
 7597 08ae D7F84035 		ldr	r3, [r7, #1344]
 7598 08b2 03F53472 		add	r2, r3, #720
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7599              		.loc 1 875 0
 7600 08b6 07F57873 		add	r3, r7, #992
 7601 08ba C3F83C21 		str	r2, [r3, #316]
 962:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.maximum_pressure_kPa),
 7602              		.loc 1 962 0
 7603 08be D7F84035 		ldr	r3, [r7, #1344]
 7604 08c2 03F53572 		add	r2, r3, #724
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7605              		.loc 1 875 0
 7606 08c6 07F57873 		add	r3, r7, #992
 7607 08ca C3F84021 		str	r2, [r3, #320]
 963:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.prop_err_fb_gain)
 7608              		.loc 1 963 0
 7609 08ce D7F84035 		ldr	r3, [r7, #1344]
 7610 08d2 03F53672 		add	r2, r3, #728
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7611              		.loc 1 875 0
 7612 08d6 07F57873 		add	r3, r7, #992
 7613 08da C3F84421 		str	r2, [r3, #324]
 964:..\src/command_processing.c ****         
 965:..\src/command_processing.c **** 
 966:..\src/command_processing.c ****     };
 967:..\src/command_processing.c ****     
 968:..\src/command_processing.c ****     uint8 TYPES[NUM_OF_PARAMS] = {
 7614              		.loc 1 968 0
 7615 08de 07F56373 		add	r3, r7, #908
 7616 08e2 F54A     		ldr	r2, .L359
 7617 08e4 1846     		mov	r0, r3
 7618 08e6 1146     		mov	r1, r2
 7619 08e8 5223     		movs	r3, #82
 7620 08ea 1A46     		mov	r2, r3
 7621 08ec FFF7FEFF 		bl	memcpy
 969:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLOAT, TYPE_FLOAT, TYPE_FLAG, 
 970:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, TYPE_INT16, 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 179


 971:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_INT32, TYPE_INT32, 
 972:..\src/command_processing.c ****         TYPE_INT16, TYPE_UINT16, TYPE_FLAG, TYPE_UINT32, 
 973:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_INT8, TYPE_FLAG, 
 974:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_UINT8, TYPE_INT32, TYPE_INT32,
 975:..\src/command_processing.c ****         TYPE_INT32, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, 
 976:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, 
 977:..\src/command_processing.c ****         TYPE_FLAG, TYPE_UINT8, TYPE_FLAG, TYPE_STRING,
 978:..\src/command_processing.c ****         
 979:..\src/command_processing.c ****         // GENERIC PARAMS
 980:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_UINT8, TYPE_FLAG,
 981:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT8, TYPE_FLAG, TYPE_FLOAT, 
 982:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG,
 983:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT16, TYPE_FLOAT, TYPE_FLAG, 
 984:..\src/command_processing.c ****         TYPE_INT32, TYPE_INT32, TYPE_INT16, TYPE_FLAG,
 985:..\src/command_processing.c ****         TYPE_INT8,  TYPE_FLAG, TYPE_FLOAT, TYPE_UINT8,
 986:..\src/command_processing.c ****         TYPE_FLAG,  TYPE_UINT8, TYPE_FLAG, TYPE_UINT8,
 987:..\src/command_processing.c ****         TYPE_INT8, TYPE_UINT8, TYPE_UINT8, TYPE_FLAG,
 988:..\src/command_processing.c ****         TYPE_UINT8, TYPE_UINT8, TYPE_UINT16, TYPE_INT16,
 989:..\src/command_processing.c ****         TYPE_UINT16, TYPE_FLAG, TYPE_FLAG, TYPE_UINT16,
 990:..\src/command_processing.c ****         
 991:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, TYPE_INT32,
 992:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLOAT
 993:..\src/command_processing.c ****     };
 994:..\src/command_processing.c **** 
 995:..\src/command_processing.c ****     uint8 NUM_ITEMS[NUM_OF_PARAMS] = {
 7622              		.loc 1 995 0
 7623 08f0 07F54E73 		add	r3, r7, #824
 7624 08f4 0122     		movs	r2, #1
 7625 08f6 1A70     		strb	r2, [r3]
 7626 08f8 07F54E73 		add	r3, r7, #824
 7627 08fc 0322     		movs	r2, #3
 7628 08fe 5A70     		strb	r2, [r3, #1]
 7629 0900 07F54E73 		add	r3, r7, #824
 7630 0904 0322     		movs	r2, #3
 7631 0906 9A70     		strb	r2, [r3, #2]
 7632 0908 07F54E73 		add	r3, r7, #824
 7633 090c 0122     		movs	r2, #1
 7634 090e DA70     		strb	r2, [r3, #3]
 7635 0910 07F54E73 		add	r3, r7, #824
 7636 0914 0122     		movs	r2, #1
 7637 0916 1A71     		strb	r2, [r3, #4]
 7638 0918 07F54E73 		add	r3, r7, #824
 7639 091c 0122     		movs	r2, #1
 7640 091e 5A71     		strb	r2, [r3, #5]
 7641 0920 07F54E73 		add	r3, r7, #824
 7642 0924 0322     		movs	r2, #3
 7643 0926 9A71     		strb	r2, [r3, #6]
 7644 0928 07F54E73 		add	r3, r7, #824
 7645 092c 0322     		movs	r2, #3
 7646 092e DA71     		strb	r2, [r3, #7]
 7647 0930 07F54E73 		add	r3, r7, #824
 7648 0934 0322     		movs	r2, #3
 7649 0936 1A72     		strb	r2, [r3, #8]
 7650 0938 07F54E73 		add	r3, r7, #824
 7651 093c 0122     		movs	r2, #1
 7652 093e 5A72     		strb	r2, [r3, #9]
 7653 0940 07F54E73 		add	r3, r7, #824
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 180


 7654 0944 0222     		movs	r2, #2
 7655 0946 9A72     		strb	r2, [r3, #10]
 7656 0948 07F54E73 		add	r3, r7, #824
 7657 094c 0222     		movs	r2, #2
 7658 094e DA72     		strb	r2, [r3, #11]
 7659 0950 07F54E73 		add	r3, r7, #824
 7660 0954 0122     		movs	r2, #1
 7661 0956 1A73     		strb	r2, [r3, #12]
 7662 0958 07F54E73 		add	r3, r7, #824
 7663 095c 0222     		movs	r2, #2
 7664 095e 5A73     		strb	r2, [r3, #13]
 7665 0960 07F54E73 		add	r3, r7, #824
 7666 0964 0122     		movs	r2, #1
 7667 0966 9A73     		strb	r2, [r3, #14]
 7668 0968 07F54E73 		add	r3, r7, #824
 7669 096c 0222     		movs	r2, #2
 7670 096e DA73     		strb	r2, [r3, #15]
 7671 0970 07F54E73 		add	r3, r7, #824
 7672 0974 0222     		movs	r2, #2
 7673 0976 1A74     		strb	r2, [r3, #16]
 7674 0978 07F54E73 		add	r3, r7, #824
 7675 097c 0122     		movs	r2, #1
 7676 097e 5A74     		strb	r2, [r3, #17]
 7677 0980 07F54E73 		add	r3, r7, #824
 7678 0984 0122     		movs	r2, #1
 7679 0986 9A74     		strb	r2, [r3, #18]
 7680 0988 07F54E73 		add	r3, r7, #824
 7681 098c 0122     		movs	r2, #1
 7682 098e DA74     		strb	r2, [r3, #19]
 7683 0990 07F54E73 		add	r3, r7, #824
 7684 0994 0622     		movs	r2, #6
 7685 0996 1A75     		strb	r2, [r3, #20]
 7686 0998 07F54E73 		add	r3, r7, #824
 7687 099c 0322     		movs	r2, #3
 7688 099e 5A75     		strb	r2, [r3, #21]
 7689 09a0 07F54E73 		add	r3, r7, #824
 7690 09a4 0122     		movs	r2, #1
 7691 09a6 9A75     		strb	r2, [r3, #22]
 7692 09a8 07F54E73 		add	r3, r7, #824
 7693 09ac 0122     		movs	r2, #1
 7694 09ae DA75     		strb	r2, [r3, #23]
 7695 09b0 07F54E73 		add	r3, r7, #824
 7696 09b4 0122     		movs	r2, #1
 7697 09b6 1A76     		strb	r2, [r3, #24]
 7698 09b8 07F54E73 		add	r3, r7, #824
 7699 09bc 0122     		movs	r2, #1
 7700 09be 5A76     		strb	r2, [r3, #25]
 7701 09c0 07F54E73 		add	r3, r7, #824
 7702 09c4 0122     		movs	r2, #1
 7703 09c6 9A76     		strb	r2, [r3, #26]
 7704 09c8 07F54E73 		add	r3, r7, #824
 7705 09cc 0122     		movs	r2, #1
 7706 09ce DA76     		strb	r2, [r3, #27]
 7707 09d0 07F54E73 		add	r3, r7, #824
 7708 09d4 0122     		movs	r2, #1
 7709 09d6 1A77     		strb	r2, [r3, #28]
 7710 09d8 07F54E73 		add	r3, r7, #824
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 181


 7711 09dc 0122     		movs	r2, #1
 7712 09de 5A77     		strb	r2, [r3, #29]
 7713 09e0 07F54E73 		add	r3, r7, #824
 7714 09e4 0122     		movs	r2, #1
 7715 09e6 9A77     		strb	r2, [r3, #30]
 7716 09e8 07F54E73 		add	r3, r7, #824
 7717 09ec 0622     		movs	r2, #6
 7718 09ee DA77     		strb	r2, [r3, #31]
 7719 09f0 07F54E73 		add	r3, r7, #824
 7720 09f4 0122     		movs	r2, #1
 7721 09f6 83F82020 		strb	r2, [r3, #32]
 7722 09fa 07F54E73 		add	r3, r7, #824
 7723 09fe 0522     		movs	r2, #5
 7724 0a00 83F82120 		strb	r2, [r3, #33]
 7725 0a04 07F54E73 		add	r3, r7, #824
 7726 0a08 0122     		movs	r2, #1
 7727 0a0a 83F82220 		strb	r2, [r3, #34]
 7728 0a0e 07F54E73 		add	r3, r7, #824
 7729 0a12 0622     		movs	r2, #6
 7730 0a14 83F82320 		strb	r2, [r3, #35]
 7731 0a18 07F54E73 		add	r3, r7, #824
 7732 0a1c 0122     		movs	r2, #1
 7733 0a1e 83F82420 		strb	r2, [r3, #36]
 7734 0a22 07F54E73 		add	r3, r7, #824
 7735 0a26 0122     		movs	r2, #1
 7736 0a28 83F82520 		strb	r2, [r3, #37]
 7737 0a2c 07F54E73 		add	r3, r7, #824
 7738 0a30 0122     		movs	r2, #1
 7739 0a32 83F82620 		strb	r2, [r3, #38]
 7740 0a36 07F54E73 		add	r3, r7, #824
 7741 0a3a 0122     		movs	r2, #1
 7742 0a3c 83F82720 		strb	r2, [r3, #39]
 7743 0a40 07F54E73 		add	r3, r7, #824
 7744 0a44 0322     		movs	r2, #3
 7745 0a46 83F82820 		strb	r2, [r3, #40]
 7746 0a4a 07F54E73 		add	r3, r7, #824
 7747 0a4e 0322     		movs	r2, #3
 7748 0a50 83F82920 		strb	r2, [r3, #41]
 7749 0a54 07F54E73 		add	r3, r7, #824
 7750 0a58 0122     		movs	r2, #1
 7751 0a5a 83F82A20 		strb	r2, [r3, #42]
 7752 0a5e 07F54E73 		add	r3, r7, #824
 7753 0a62 0322     		movs	r2, #3
 7754 0a64 83F82B20 		strb	r2, [r3, #43]
 7755 0a68 07F54E73 		add	r3, r7, #824
 7756 0a6c 0322     		movs	r2, #3
 7757 0a6e 83F82C20 		strb	r2, [r3, #44]
 7758 0a72 07F54E73 		add	r3, r7, #824
 7759 0a76 0122     		movs	r2, #1
 7760 0a78 83F82D20 		strb	r2, [r3, #45]
 7761 0a7c 07F54E73 		add	r3, r7, #824
 7762 0a80 0122     		movs	r2, #1
 7763 0a82 83F82E20 		strb	r2, [r3, #46]
 7764 0a86 07F54E73 		add	r3, r7, #824
 7765 0a8a 0122     		movs	r2, #1
 7766 0a8c 83F82F20 		strb	r2, [r3, #47]
 7767 0a90 07F54E73 		add	r3, r7, #824
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 182


 7768 0a94 0322     		movs	r2, #3
 7769 0a96 83F83020 		strb	r2, [r3, #48]
 7770 0a9a 07F54E73 		add	r3, r7, #824
 7771 0a9e 0322     		movs	r2, #3
 7772 0aa0 83F83120 		strb	r2, [r3, #49]
 7773 0aa4 07F54E73 		add	r3, r7, #824
 7774 0aa8 0322     		movs	r2, #3
 7775 0aaa 83F83220 		strb	r2, [r3, #50]
 7776 0aae 07F54E73 		add	r3, r7, #824
 7777 0ab2 0122     		movs	r2, #1
 7778 0ab4 83F83320 		strb	r2, [r3, #51]
 7779 0ab8 07F54E73 		add	r3, r7, #824
 7780 0abc 0222     		movs	r2, #2
 7781 0abe 83F83420 		strb	r2, [r3, #52]
 7782 0ac2 07F54E73 		add	r3, r7, #824
 7783 0ac6 0222     		movs	r2, #2
 7784 0ac8 83F83520 		strb	r2, [r3, #53]
 7785 0acc 07F54E73 		add	r3, r7, #824
 7786 0ad0 0122     		movs	r2, #1
 7787 0ad2 83F83620 		strb	r2, [r3, #54]
 7788 0ad6 07F54E73 		add	r3, r7, #824
 7789 0ada 0122     		movs	r2, #1
 7790 0adc 83F83720 		strb	r2, [r3, #55]
 7791 0ae0 07F54E73 		add	r3, r7, #824
 7792 0ae4 0122     		movs	r2, #1
 7793 0ae6 83F83820 		strb	r2, [r3, #56]
 7794 0aea 07F54E73 		add	r3, r7, #824
 7795 0aee 0122     		movs	r2, #1
 7796 0af0 83F83920 		strb	r2, [r3, #57]
 7797 0af4 07F54E73 		add	r3, r7, #824
 7798 0af8 0622     		movs	r2, #6
 7799 0afa 83F83A20 		strb	r2, [r3, #58]
 7800 0afe 07F54E73 		add	r3, r7, #824
 7801 0b02 0122     		movs	r2, #1
 7802 0b04 83F83B20 		strb	r2, [r3, #59]
 7803 0b08 07F54E73 		add	r3, r7, #824
 7804 0b0c 0122     		movs	r2, #1
 7805 0b0e 83F83C20 		strb	r2, [r3, #60]
 7806 0b12 07F54E73 		add	r3, r7, #824
 7807 0b16 0122     		movs	r2, #1
 7808 0b18 83F83D20 		strb	r2, [r3, #61]
 7809 0b1c 07F54E73 		add	r3, r7, #824
 7810 0b20 0122     		movs	r2, #1
 7811 0b22 83F83E20 		strb	r2, [r3, #62]
 7812 0b26 07F54E73 		add	r3, r7, #824
 7813 0b2a 0322     		movs	r2, #3
 7814 0b2c 83F83F20 		strb	r2, [r3, #63]
 7815 0b30 07F54E73 		add	r3, r7, #824
 7816 0b34 0322     		movs	r2, #3
 7817 0b36 83F84020 		strb	r2, [r3, #64]
 996:..\src/command_processing.c ****         1, 3, 3, 1, 
 997:..\src/command_processing.c ****         1, 1, 3, 3,
 998:..\src/command_processing.c ****         3, 1, 2, 2, 
 999:..\src/command_processing.c ****         1, 2, 1, 2,
1000:..\src/command_processing.c ****         2, 1, 1, 1, 
1001:..\src/command_processing.c ****         6, 3, 1, 1,
1002:..\src/command_processing.c ****         1, 1, 1, 1, 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 183


1003:..\src/command_processing.c ****         1, 1, 1, 6,
1004:..\src/command_processing.c ****         1, 5, 1, 6,
1005:..\src/command_processing.c ****         
1006:..\src/command_processing.c ****         // GENERIC PARAMS
1007:..\src/command_processing.c ****         1, 1, 1, 1,
1008:..\src/command_processing.c ****         3, 3, 1, 3,
1009:..\src/command_processing.c ****         3, 1, 1, 1,
1010:..\src/command_processing.c ****         3, 3, 3, 1,
1011:..\src/command_processing.c ****         2, 2, 1, 1,
1012:..\src/command_processing.c ****         1, 1, 6, 1,
1013:..\src/command_processing.c ****         1, 1, 1, 3, 
1014:..\src/command_processing.c ****         3, N_Encoder_Line_Connected[0], N_Encoder_Line_Connected[1], 1,
 7818              		.loc 1 1014 0
 7819 0b3a 604B     		ldr	r3, .L359+4
 7820 0b3c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 995:..\src/command_processing.c ****         1, 3, 3, 1, 
 7821              		.loc 1 995 0
 7822 0b3e 07F54E73 		add	r3, r7, #824
 7823 0b42 83F84120 		strb	r2, [r3, #65]
 7824              		.loc 1 1014 0
 7825 0b46 5D4B     		ldr	r3, .L359+4
 7826 0b48 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 995:..\src/command_processing.c ****         1, 3, 3, 1, 
 7827              		.loc 1 995 0
 7828 0b4a 07F54E73 		add	r3, r7, #824
 7829 0b4e 83F84220 		strb	r2, [r3, #66]
 7830 0b52 07F54E73 		add	r3, r7, #824
 7831 0b56 0122     		movs	r2, #1
 7832 0b58 83F84320 		strb	r2, [r3, #67]
 7833 0b5c 07F54E73 		add	r3, r7, #824
 7834 0b60 0622     		movs	r2, #6
 7835 0b62 83F84420 		strb	r2, [r3, #68]
 7836 0b66 07F54E73 		add	r3, r7, #824
 7837 0b6a 0622     		movs	r2, #6
 7838 0b6c 83F84520 		strb	r2, [r3, #69]
 7839 0b70 07F54E73 		add	r3, r7, #824
 7840 0b74 0122     		movs	r2, #1
 7841 0b76 83F84620 		strb	r2, [r3, #70]
 7842 0b7a 07F54E73 		add	r3, r7, #824
 7843 0b7e 0122     		movs	r2, #1
 7844 0b80 83F84720 		strb	r2, [r3, #71]
 7845 0b84 07F54E73 		add	r3, r7, #824
 7846 0b88 0222     		movs	r2, #2
 7847 0b8a 83F84820 		strb	r2, [r3, #72]
 7848 0b8e 07F54E73 		add	r3, r7, #824
 7849 0b92 0122     		movs	r2, #1
 7850 0b94 83F84920 		strb	r2, [r3, #73]
 7851 0b98 07F54E73 		add	r3, r7, #824
 7852 0b9c 0122     		movs	r2, #1
 7853 0b9e 83F84A20 		strb	r2, [r3, #74]
 7854 0ba2 07F54E73 		add	r3, r7, #824
 7855 0ba6 0222     		movs	r2, #2
 7856 0ba8 83F84B20 		strb	r2, [r3, #75]
 7857 0bac 07F54E73 		add	r3, r7, #824
 7858 0bb0 0122     		movs	r2, #1
 7859 0bb2 83F84C20 		strb	r2, [r3, #76]
 7860 0bb6 07F54E73 		add	r3, r7, #824
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 184


 7861 0bba 0122     		movs	r2, #1
 7862 0bbc 83F84D20 		strb	r2, [r3, #77]
 7863 0bc0 07F54E73 		add	r3, r7, #824
 7864 0bc4 0122     		movs	r2, #1
 7865 0bc6 83F84E20 		strb	r2, [r3, #78]
 7866 0bca 07F54E73 		add	r3, r7, #824
 7867 0bce 0122     		movs	r2, #1
 7868 0bd0 83F84F20 		strb	r2, [r3, #79]
 7869 0bd4 07F54E73 		add	r3, r7, #824
 7870 0bd8 0122     		movs	r2, #1
 7871 0bda 83F85020 		strb	r2, [r3, #80]
 7872 0bde 07F54E73 		add	r3, r7, #824
 7873 0be2 0122     		movs	r2, #1
 7874 0be4 83F85120 		strb	r2, [r3, #81]
1015:..\src/command_processing.c ****         6, 6, 1, 1,
1016:..\src/command_processing.c ****         2, 1, 1, 2,
1017:..\src/command_processing.c ****         
1018:..\src/command_processing.c ****         1, 1, 1, 1,
1019:..\src/command_processing.c ****         1, 1
1020:..\src/command_processing.c ****     };
1021:..\src/command_processing.c ****     
1022:..\src/command_processing.c ****     uint8 NUM_STRUCT[NUM_OF_PARAMS] = {     // see STRUCTURES INDEX in globals.h
 7875              		.loc 1 1022 0
 7876 0be8 07F53973 		add	r3, r7, #740
 7877 0bec 0022     		movs	r2, #0
 7878 0bee 1A70     		strb	r2, [r3]
 7879 0bf0 97F83D35 		ldrb	r3, [r7, #1341]
 7880 0bf4 0A33     		adds	r3, r3, #10
 7881 0bf6 DAB2     		uxtb	r2, r3
 7882 0bf8 07F53973 		add	r3, r7, #740
 7883 0bfc 5A70     		strb	r2, [r3, #1]
 7884 0bfe 97F83D35 		ldrb	r3, [r7, #1341]
 7885 0c02 0A33     		adds	r3, r3, #10
 7886 0c04 DAB2     		uxtb	r2, r3
 7887 0c06 07F53973 		add	r3, r7, #740
 7888 0c0a 9A70     		strb	r2, [r3, #2]
 7889 0c0c 97F83D35 		ldrb	r3, [r7, #1341]
 7890 0c10 0A33     		adds	r3, r3, #10
 7891 0c12 DAB2     		uxtb	r2, r3
 7892 0c14 07F53973 		add	r3, r7, #740
 7893 0c18 DA70     		strb	r2, [r3, #3]
 7894 0c1a 97F83D35 		ldrb	r3, [r7, #1341]
 7895 0c1e 0A33     		adds	r3, r3, #10
 7896 0c20 DAB2     		uxtb	r2, r3
 7897 0c22 07F53973 		add	r3, r7, #740
 7898 0c26 1A71     		strb	r2, [r3, #4]
 7899 0c28 97F83D35 		ldrb	r3, [r7, #1341]
 7900 0c2c 0A33     		adds	r3, r3, #10
 7901 0c2e DAB2     		uxtb	r2, r3
 7902 0c30 07F53973 		add	r3, r7, #740
 7903 0c34 5A71     		strb	r2, [r3, #5]
1023:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
1024:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), 
 7904              		.loc 1 1024 0
 7905 0c36 97F83D25 		ldrb	r2, [r7, #1341]	@ zero_extendqisi2
 7906 0c3a D7F84015 		ldr	r1, [r7, #1344]
 7907 0c3e 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 185


 7908 0c40 DB00     		lsls	r3, r3, #3
 7909 0c42 9B1A     		subs	r3, r3, r2
 7910 0c44 1B01     		lsls	r3, r3, #4
 7911 0c46 0B44     		add	r3, r3, r1
 7912 0c48 03F58873 		add	r3, r3, #272
 7913 0c4c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1022:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7914              		.loc 1 1022 0
 7915 0c4e 1433     		adds	r3, r3, #20
 7916 0c50 DAB2     		uxtb	r2, r3
 7917 0c52 07F53973 		add	r3, r7, #740
 7918 0c56 9A71     		strb	r2, [r3, #6]
 7919              		.loc 1 1024 0
 7920 0c58 97F83D25 		ldrb	r2, [r7, #1341]	@ zero_extendqisi2
 7921 0c5c D7F84015 		ldr	r1, [r7, #1344]
 7922 0c60 1346     		mov	r3, r2
 7923 0c62 DB00     		lsls	r3, r3, #3
 7924 0c64 9B1A     		subs	r3, r3, r2
 7925 0c66 1B01     		lsls	r3, r3, #4
 7926 0c68 0B44     		add	r3, r3, r1
 7927 0c6a 03F58873 		add	r3, r3, #272
 7928 0c6e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1022:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7929              		.loc 1 1022 0
 7930 0c70 1433     		adds	r3, r3, #20
 7931 0c72 DAB2     		uxtb	r2, r3
 7932 0c74 07F53973 		add	r3, r7, #740
 7933 0c78 DA71     		strb	r2, [r3, #7]
1025:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7934              		.loc 1 1025 0
 7935 0c7a 97F83D25 		ldrb	r2, [r7, #1341]	@ zero_extendqisi2
 7936 0c7e D7F84015 		ldr	r1, [r7, #1344]
 7937 0c82 1346     		mov	r3, r2
 7938 0c84 DB00     		lsls	r3, r3, #3
 7939 0c86 9B1A     		subs	r3, r3, r2
 7940 0c88 1B01     		lsls	r3, r3, #4
 7941 0c8a 0B44     		add	r3, r3, r1
 7942 0c8c 03F58873 		add	r3, r3, #272
 7943 0c90 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1022:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7944              		.loc 1 1022 0
 7945 0c92 1433     		adds	r3, r3, #20
 7946 0c94 DAB2     		uxtb	r2, r3
 7947 0c96 07F53973 		add	r3, r7, #740
 7948 0c9a 1A72     		strb	r2, [r3, #8]
 7949 0c9c 97F83D35 		ldrb	r3, [r7, #1341]
 7950 0ca0 0A33     		adds	r3, r3, #10
 7951 0ca2 DAB2     		uxtb	r2, r3
 7952 0ca4 07F53973 		add	r3, r7, #740
 7953 0ca8 5A72     		strb	r2, [r3, #9]
 7954 0caa 97F83D35 		ldrb	r3, [r7, #1341]
 7955 0cae 0A33     		adds	r3, r3, #10
 7956 0cb0 DAB2     		uxtb	r2, r3
 7957 0cb2 07F53973 		add	r3, r7, #740
 7958 0cb6 03E0     		b	.L360
 7959              	.L361:
 7960              		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 186


 7961              	.L359:
 7962 0cb8 BC050000 		.word	.LC0
 7963 0cbc 00000000 		.word	N_Encoder_Line_Connected
 7964              	.L360:
 7965 0cc0 9A72     		strb	r2, [r3, #10]
 7966 0cc2 97F83D35 		ldrb	r3, [r7, #1341]
 7967 0cc6 0A33     		adds	r3, r3, #10
 7968 0cc8 DAB2     		uxtb	r2, r3
 7969 0cca 07F53973 		add	r3, r7, #740
 7970 0cce DA72     		strb	r2, [r3, #11]
 7971 0cd0 97F83D35 		ldrb	r3, [r7, #1341]
 7972 0cd4 0A33     		adds	r3, r3, #10
 7973 0cd6 DAB2     		uxtb	r2, r3
 7974 0cd8 07F53973 		add	r3, r7, #740
 7975 0cdc 1A73     		strb	r2, [r3, #12]
 7976 0cde 07F53973 		add	r3, r7, #740
 7977 0ce2 1E22     		movs	r2, #30
 7978 0ce4 5A73     		strb	r2, [r3, #13]
 7979 0ce6 07F53973 		add	r3, r7, #740
 7980 0cea 1E22     		movs	r2, #30
 7981 0cec 9A73     		strb	r2, [r3, #14]
 7982 0cee 07F53973 		add	r3, r7, #740
 7983 0cf2 1E22     		movs	r2, #30
 7984 0cf4 DA73     		strb	r2, [r3, #15]
 7985 0cf6 07F53973 		add	r3, r7, #740
 7986 0cfa 1E22     		movs	r2, #30
 7987 0cfc 1A74     		strb	r2, [r3, #16]
1026:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_EMG, ST_EMG, ST_EMG, 
1027:..\src/command_processing.c ****         ST_EMG, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_I
 7988              		.loc 1 1027 0
 7989 0cfe 97F83D25 		ldrb	r2, [r7, #1341]	@ zero_extendqisi2
 7990 0d02 D7F84015 		ldr	r1, [r7, #1344]
 7991 0d06 1346     		mov	r3, r2
 7992 0d08 DB00     		lsls	r3, r3, #3
 7993 0d0a 9B1A     		subs	r3, r3, r2
 7994 0d0c 1B01     		lsls	r3, r3, #4
 7995 0d0e 0B44     		add	r3, r3, r1
 7996 0d10 03F58873 		add	r3, r3, #272
 7997 0d14 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1022:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7998              		.loc 1 1022 0
 7999 0d16 1433     		adds	r3, r3, #20
 8000 0d18 DAB2     		uxtb	r2, r3
 8001 0d1a 07F53973 		add	r3, r7, #740
 8002 0d1e 5A74     		strb	r2, [r3, #17]
 8003              		.loc 1 1027 0
 8004 0d20 97F83D25 		ldrb	r2, [r7, #1341]	@ zero_extendqisi2
 8005 0d24 D7F84015 		ldr	r1, [r7, #1344]
 8006 0d28 1346     		mov	r3, r2
 8007 0d2a DB00     		lsls	r3, r3, #3
 8008 0d2c 9B1A     		subs	r3, r3, r2
 8009 0d2e 1B01     		lsls	r3, r3, #4
 8010 0d30 0B44     		add	r3, r3, r1
 8011 0d32 03F58873 		add	r3, r3, #272
 8012 0d36 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1022:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8013              		.loc 1 1022 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 187


 8014 0d38 1433     		adds	r3, r3, #20
 8015 0d3a DAB2     		uxtb	r2, r3
 8016 0d3c 07F53973 		add	r3, r7, #740
 8017 0d40 9A74     		strb	r2, [r3, #18]
 8018 0d42 97F83D35 		ldrb	r3, [r7, #1341]
 8019 0d46 0A33     		adds	r3, r3, #10
 8020 0d48 DAB2     		uxtb	r2, r3
 8021 0d4a 07F53973 		add	r3, r7, #740
 8022 0d4e DA74     		strb	r2, [r3, #19]
 8023 0d50 97F83D35 		ldrb	r3, [r7, #1341]
 8024 0d54 0A33     		adds	r3, r3, #10
 8025 0d56 DAB2     		uxtb	r2, r3
 8026 0d58 07F53973 		add	r3, r7, #740
 8027 0d5c 1A75     		strb	r2, [r3, #20]
 8028 0d5e 07F53973 		add	r3, r7, #740
 8029 0d62 0022     		movs	r2, #0
 8030 0d64 5A75     		strb	r2, [r3, #21]
 8031 0d66 07F53973 		add	r3, r7, #740
 8032 0d6a 4622     		movs	r2, #70
 8033 0d6c 9A75     		strb	r2, [r3, #22]
 8034 0d6e 07F53973 		add	r3, r7, #740
 8035 0d72 4622     		movs	r2, #70
 8036 0d74 DA75     		strb	r2, [r3, #23]
 8037 0d76 07F53973 		add	r3, r7, #740
 8038 0d7a 4622     		movs	r2, #70
 8039 0d7c 1A76     		strb	r2, [r3, #24]
 8040 0d7e 07F53973 		add	r3, r7, #740
 8041 0d82 4622     		movs	r2, #70
 8042 0d84 5A76     		strb	r2, [r3, #25]
 8043 0d86 07F53973 		add	r3, r7, #740
 8044 0d8a 1E22     		movs	r2, #30
 8045 0d8c 9A76     		strb	r2, [r3, #26]
 8046 0d8e 07F53973 		add	r3, r7, #740
 8047 0d92 0022     		movs	r2, #0
 8048 0d94 DA76     		strb	r2, [r3, #27]
 8049 0d96 07F53973 		add	r3, r7, #740
 8050 0d9a 2822     		movs	r2, #40
 8051 0d9c 1A77     		strb	r2, [r3, #28]
 8052 0d9e 07F53973 		add	r3, r7, #740
 8053 0da2 3222     		movs	r2, #50
 8054 0da4 5A77     		strb	r2, [r3, #29]
 8055 0da6 07F53973 		add	r3, r7, #740
 8056 0daa 0022     		movs	r2, #0
 8057 0dac 9A77     		strb	r2, [r3, #30]
 8058 0dae 07F53973 		add	r3, r7, #740
 8059 0db2 3222     		movs	r2, #50
 8060 0db4 DA77     		strb	r2, [r3, #31]
 8061 0db6 07F53973 		add	r3, r7, #740
 8062 0dba 2822     		movs	r2, #40
 8063 0dbc 83F82020 		strb	r2, [r3, #32]
 8064 0dc0 07F53973 		add	r3, r7, #740
 8065 0dc4 2822     		movs	r2, #40
 8066 0dc6 83F82120 		strb	r2, [r3, #33]
 8067 0dca 07F53973 		add	r3, r7, #740
 8068 0dce 0022     		movs	r2, #0
 8069 0dd0 83F82220 		strb	r2, [r3, #34]
1028:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_DEVICE, ST_SH_SPEC, ST_SH_SPEC,
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 188


1029:..\src/command_processing.c ****         ST_SH_SPEC, ST_SH_SPEC, ST_EMG, ST_DEVICE,
1030:..\src/command_processing.c ****         ST_IMU, ST_EXPANSION, ST_DEVICE, ST_EXPANSION,
1031:..\src/command_processing.c ****         ST_IMU, ST_IMU, ST_DEVICE, ST_USER+(MEM_P->dev.user_id),
 8070              		.loc 1 1031 0
 8071 0dd4 D7F84035 		ldr	r3, [r7, #1344]
 8072 0dd8 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
1022:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8073              		.loc 1 1022 0
 8074 0ddc 3C33     		adds	r3, r3, #60
 8075 0dde DAB2     		uxtb	r2, r3
 8076 0de0 07F53973 		add	r3, r7, #740
 8077 0de4 83F82320 		strb	r2, [r3, #35]
 8078 0de8 97F83D35 		ldrb	r3, [r7, #1341]
 8079 0dec 0A33     		adds	r3, r3, #10
 8080 0dee DAB2     		uxtb	r2, r3
 8081 0df0 07F53973 		add	r3, r7, #740
 8082 0df4 83F82420 		strb	r2, [r3, #36]
 8083 0df8 97F83D35 		ldrb	r3, [r7, #1341]
 8084 0dfc 0A33     		adds	r3, r3, #10
 8085 0dfe DAB2     		uxtb	r2, r3
 8086 0e00 07F53973 		add	r3, r7, #740
 8087 0e04 83F82520 		strb	r2, [r3, #37]
 8088 0e08 97F83D35 		ldrb	r3, [r7, #1341]
 8089 0e0c 0A33     		adds	r3, r3, #10
 8090 0e0e DAB2     		uxtb	r2, r3
 8091 0e10 07F53973 		add	r3, r7, #740
 8092 0e14 83F82620 		strb	r2, [r3, #38]
 8093 0e18 97F83D35 		ldrb	r3, [r7, #1341]
 8094 0e1c 0A33     		adds	r3, r3, #10
 8095 0e1e DAB2     		uxtb	r2, r3
 8096 0e20 07F53973 		add	r3, r7, #740
 8097 0e24 83F82720 		strb	r2, [r3, #39]
1032:..\src/command_processing.c ****         
1033:..\src/command_processing.c ****         // GENERIC PARAMS
1034:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX,
1035:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_IDX].enco
 8098              		.loc 1 1035 0
 8099 0e28 97F83D25 		ldrb	r2, [r7, #1341]	@ zero_extendqisi2
 8100 0e2c D7F84015 		ldr	r1, [r7, #1344]
 8101 0e30 1346     		mov	r3, r2
 8102 0e32 DB00     		lsls	r3, r3, #3
 8103 0e34 9B1A     		subs	r3, r3, r2
 8104 0e36 1B01     		lsls	r3, r3, #4
 8105 0e38 0B44     		add	r3, r3, r1
 8106 0e3a 03F58873 		add	r3, r3, #272
 8107 0e3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1022:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8108              		.loc 1 1022 0
 8109 0e40 1433     		adds	r3, r3, #20
 8110 0e42 DAB2     		uxtb	r2, r3
 8111 0e44 07F53973 		add	r3, r7, #740
 8112 0e48 83F82820 		strb	r2, [r3, #40]
 8113              		.loc 1 1035 0
 8114 0e4c 97F83D25 		ldrb	r2, [r7, #1341]	@ zero_extendqisi2
 8115 0e50 D7F84015 		ldr	r1, [r7, #1344]
 8116 0e54 1346     		mov	r3, r2
 8117 0e56 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 189


 8118 0e58 9B1A     		subs	r3, r3, r2
 8119 0e5a 1B01     		lsls	r3, r3, #4
 8120 0e5c 0B44     		add	r3, r3, r1
 8121 0e5e 03F58873 		add	r3, r3, #272
 8122 0e62 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1022:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8123              		.loc 1 1022 0
 8124 0e64 1433     		adds	r3, r3, #20
 8125 0e66 DAB2     		uxtb	r2, r3
 8126 0e68 07F53973 		add	r3, r7, #740
 8127 0e6c 83F82920 		strb	r2, [r3, #41]
 8128 0e70 07F53973 		add	r3, r7, #740
 8129 0e74 0022     		movs	r2, #0
 8130 0e76 83F82A20 		strb	r2, [r3, #42]
 8131 0e7a 97F83C35 		ldrb	r3, [r7, #1340]
 8132 0e7e 0A33     		adds	r3, r3, #10
 8133 0e80 DAB2     		uxtb	r2, r3
 8134 0e82 07F53973 		add	r3, r7, #740
 8135 0e86 83F82B20 		strb	r2, [r3, #43]
 8136 0e8a 97F83C35 		ldrb	r3, [r7, #1340]
 8137 0e8e 0A33     		adds	r3, r3, #10
 8138 0e90 DAB2     		uxtb	r2, r3
 8139 0e92 07F53973 		add	r3, r7, #740
 8140 0e96 83F82C20 		strb	r2, [r3, #44]
 8141 0e9a 97F83C35 		ldrb	r3, [r7, #1340]
 8142 0e9e 0A33     		adds	r3, r3, #10
 8143 0ea0 DAB2     		uxtb	r2, r3
 8144 0ea2 07F53973 		add	r3, r7, #740
 8145 0ea6 83F82D20 		strb	r2, [r3, #45]
 8146 0eaa 97F83C35 		ldrb	r3, [r7, #1340]
 8147 0eae 0A33     		adds	r3, r3, #10
 8148 0eb0 DAB2     		uxtb	r2, r3
 8149 0eb2 07F53973 		add	r3, r7, #740
 8150 0eb6 83F82E20 		strb	r2, [r3, #46]
 8151 0eba 97F83C35 		ldrb	r3, [r7, #1340]
 8152 0ebe 0A33     		adds	r3, r3, #10
 8153 0ec0 DAB2     		uxtb	r2, r3
 8154 0ec2 07F53973 		add	r3, r7, #740
 8155 0ec6 83F82F20 		strb	r2, [r3, #47]
1036:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+S
1037:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[SECOND_M
 8156              		.loc 1 1037 0
 8157 0eca 97F83C25 		ldrb	r2, [r7, #1340]	@ zero_extendqisi2
 8158 0ece D7F84015 		ldr	r1, [r7, #1344]
 8159 0ed2 1346     		mov	r3, r2
 8160 0ed4 DB00     		lsls	r3, r3, #3
 8161 0ed6 9B1A     		subs	r3, r3, r2
 8162 0ed8 1B01     		lsls	r3, r3, #4
 8163 0eda 0B44     		add	r3, r3, r1
 8164 0edc 03F58873 		add	r3, r3, #272
 8165 0ee0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1022:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8166              		.loc 1 1022 0
 8167 0ee2 1433     		adds	r3, r3, #20
 8168 0ee4 DAB2     		uxtb	r2, r3
 8169 0ee6 07F53973 		add	r3, r7, #740
 8170 0eea 83F83020 		strb	r2, [r3, #48]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 190


 8171              		.loc 1 1037 0
 8172 0eee 97F83C25 		ldrb	r2, [r7, #1340]	@ zero_extendqisi2
 8173 0ef2 D7F84015 		ldr	r1, [r7, #1344]
 8174 0ef6 1346     		mov	r3, r2
 8175 0ef8 DB00     		lsls	r3, r3, #3
 8176 0efa 9B1A     		subs	r3, r3, r2
 8177 0efc 1B01     		lsls	r3, r3, #4
 8178 0efe 0B44     		add	r3, r3, r1
 8179 0f00 03F58873 		add	r3, r3, #272
 8180 0f04 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1022:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8181              		.loc 1 1022 0
 8182 0f06 1433     		adds	r3, r3, #20
 8183 0f08 DAB2     		uxtb	r2, r3
 8184 0f0a 07F53973 		add	r3, r7, #740
 8185 0f0e 83F83120 		strb	r2, [r3, #49]
 8186              		.loc 1 1037 0
 8187 0f12 97F83C25 		ldrb	r2, [r7, #1340]	@ zero_extendqisi2
 8188 0f16 D7F84015 		ldr	r1, [r7, #1344]
 8189 0f1a 1346     		mov	r3, r2
 8190 0f1c DB00     		lsls	r3, r3, #3
 8191 0f1e 9B1A     		subs	r3, r3, r2
 8192 0f20 1B01     		lsls	r3, r3, #4
 8193 0f22 0B44     		add	r3, r3, r1
 8194 0f24 03F58873 		add	r3, r3, #272
 8195 0f28 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1022:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8196              		.loc 1 1022 0
 8197 0f2a 1433     		adds	r3, r3, #20
 8198 0f2c DAB2     		uxtb	r2, r3
 8199 0f2e 07F53973 		add	r3, r7, #740
 8200 0f32 83F83220 		strb	r2, [r3, #50]
 8201 0f36 97F83C35 		ldrb	r3, [r7, #1340]
 8202 0f3a 0A33     		adds	r3, r3, #10
 8203 0f3c DAB2     		uxtb	r2, r3
 8204 0f3e 07F53973 		add	r3, r7, #740
 8205 0f42 83F83320 		strb	r2, [r3, #51]
 8206 0f46 97F83C35 		ldrb	r3, [r7, #1340]
 8207 0f4a 0A33     		adds	r3, r3, #10
 8208 0f4c DAB2     		uxtb	r2, r3
 8209 0f4e 07F53973 		add	r3, r7, #740
 8210 0f52 83F83420 		strb	r2, [r3, #52]
 8211 0f56 97F83C35 		ldrb	r3, [r7, #1340]
 8212 0f5a 0A33     		adds	r3, r3, #10
 8213 0f5c DAB2     		uxtb	r2, r3
 8214 0f5e 07F53973 		add	r3, r7, #740
 8215 0f62 83F83520 		strb	r2, [r3, #53]
 8216 0f66 97F83C35 		ldrb	r3, [r7, #1340]
 8217 0f6a 0A33     		adds	r3, r3, #10
 8218 0f6c DAB2     		uxtb	r2, r3
 8219 0f6e 07F53973 		add	r3, r7, #740
 8220 0f72 83F83620 		strb	r2, [r3, #54]
1038:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 8221              		.loc 1 1038 0
 8222 0f76 97F83C25 		ldrb	r2, [r7, #1340]	@ zero_extendqisi2
 8223 0f7a D7F84015 		ldr	r1, [r7, #1344]
 8224 0f7e 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 191


 8225 0f80 DB00     		lsls	r3, r3, #3
 8226 0f82 9B1A     		subs	r3, r3, r2
 8227 0f84 1B01     		lsls	r3, r3, #4
 8228 0f86 0B44     		add	r3, r3, r1
 8229 0f88 03F58873 		add	r3, r3, #272
 8230 0f8c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1022:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8231              		.loc 1 1022 0
 8232 0f8e 1433     		adds	r3, r3, #20
 8233 0f90 DAB2     		uxtb	r2, r3
 8234 0f92 07F53973 		add	r3, r7, #740
 8235 0f96 83F83720 		strb	r2, [r3, #55]
1039:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_MOTOR+SECOND_MOTOR_IDX, ST_MOT
 8236              		.loc 1 1039 0
 8237 0f9a 97F83C25 		ldrb	r2, [r7, #1340]	@ zero_extendqisi2
 8238 0f9e D7F84015 		ldr	r1, [r7, #1344]
 8239 0fa2 1346     		mov	r3, r2
 8240 0fa4 DB00     		lsls	r3, r3, #3
 8241 0fa6 9B1A     		subs	r3, r3, r2
 8242 0fa8 1B01     		lsls	r3, r3, #4
 8243 0faa 0B44     		add	r3, r3, r1
 8244 0fac 03F58873 		add	r3, r3, #272
 8245 0fb0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1022:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8246              		.loc 1 1022 0
 8247 0fb2 1433     		adds	r3, r3, #20
 8248 0fb4 DAB2     		uxtb	r2, r3
 8249 0fb6 07F53973 		add	r3, r7, #740
 8250 0fba 83F83820 		strb	r2, [r3, #56]
 8251 0fbe 97F83C35 		ldrb	r3, [r7, #1340]
 8252 0fc2 0A33     		adds	r3, r3, #10
 8253 0fc4 DAB2     		uxtb	r2, r3
 8254 0fc6 07F53973 		add	r3, r7, #740
 8255 0fca 83F83920 		strb	r2, [r3, #57]
 8256 0fce 97F83C35 		ldrb	r3, [r7, #1340]
 8257 0fd2 0A33     		adds	r3, r3, #10
 8258 0fd4 DAB2     		uxtb	r2, r3
 8259 0fd6 07F53973 		add	r3, r7, #740
 8260 0fda 83F83A20 		strb	r2, [r3, #58]
 8261 0fde 97F83C35 		ldrb	r3, [r7, #1340]
 8262 0fe2 0A33     		adds	r3, r3, #10
 8263 0fe4 DAB2     		uxtb	r2, r3
 8264 0fe6 07F53973 		add	r3, r7, #740
 8265 0fea 83F83B20 		strb	r2, [r3, #59]
 8266 0fee 97F83C35 		ldrb	r3, [r7, #1340]
 8267 0ff2 0A33     		adds	r3, r3, #10
 8268 0ff4 DAB2     		uxtb	r2, r3
 8269 0ff6 07F53973 		add	r3, r7, #740
 8270 0ffa 83F83C20 		strb	r2, [r3, #60]
 8271 0ffe 97F83C35 		ldrb	r3, [r7, #1340]
 8272 1002 0A33     		adds	r3, r3, #10
 8273 1004 DAB2     		uxtb	r2, r3
 8274 1006 07F53973 		add	r3, r7, #740
 8275 100a 83F83D20 		strb	r2, [r3, #61]
 8276 100e 97F83C35 		ldrb	r3, [r7, #1340]
 8277 1012 0A33     		adds	r3, r3, #10
 8278 1014 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 192


 8279 1016 07F53973 		add	r3, r7, #740
 8280 101a 83F83E20 		strb	r2, [r3, #62]
1040:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 8281              		.loc 1 1040 0
 8282 101e 97F83C25 		ldrb	r2, [r7, #1340]	@ zero_extendqisi2
 8283 1022 D7F84015 		ldr	r1, [r7, #1344]
 8284 1026 1346     		mov	r3, r2
 8285 1028 DB00     		lsls	r3, r3, #3
 8286 102a 9B1A     		subs	r3, r3, r2
 8287 102c 1B01     		lsls	r3, r3, #4
 8288 102e 0B44     		add	r3, r3, r1
 8289 1030 03F58873 		add	r3, r3, #272
 8290 1034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1022:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8291              		.loc 1 1022 0
 8292 1036 1433     		adds	r3, r3, #20
 8293 1038 DAB2     		uxtb	r2, r3
 8294 103a 07F53973 		add	r3, r7, #740
 8295 103e 83F83F20 		strb	r2, [r3, #63]
1041:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+0, ST_ENCODER+1, ST_EX
 8296              		.loc 1 1041 0
 8297 1042 97F83C25 		ldrb	r2, [r7, #1340]	@ zero_extendqisi2
 8298 1046 D7F84015 		ldr	r1, [r7, #1344]
 8299 104a 1346     		mov	r3, r2
 8300 104c DB00     		lsls	r3, r3, #3
 8301 104e 9B1A     		subs	r3, r3, r2
 8302 1050 1B01     		lsls	r3, r3, #4
 8303 1052 0B44     		add	r3, r3, r1
 8304 1054 03F58873 		add	r3, r3, #272
 8305 1058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1022:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8306              		.loc 1 1022 0
 8307 105a 1433     		adds	r3, r3, #20
 8308 105c DAB2     		uxtb	r2, r3
 8309 105e 07F53973 		add	r3, r7, #740
 8310 1062 83F84020 		strb	r2, [r3, #64]
 8311 1066 07F53973 		add	r3, r7, #740
 8312 106a 1422     		movs	r2, #20
 8313 106c 83F84120 		strb	r2, [r3, #65]
 8314 1070 07F53973 		add	r3, r7, #740
 8315 1074 1522     		movs	r2, #21
 8316 1076 83F84220 		strb	r2, [r3, #66]
 8317 107a 07F53973 		add	r3, r7, #740
 8318 107e 3222     		movs	r2, #50
 8319 1080 83F84320 		strb	r2, [r3, #67]
 8320 1084 07F53973 		add	r3, r7, #740
 8321 1088 3222     		movs	r2, #50
 8322 108a 83F84420 		strb	r2, [r3, #68]
 8323 108e 07F53973 		add	r3, r7, #740
 8324 1092 3222     		movs	r2, #50
 8325 1094 83F84520 		strb	r2, [r3, #69]
 8326 1098 07F53973 		add	r3, r7, #740
 8327 109c 6E22     		movs	r2, #110
 8328 109e 83F84620 		strb	r2, [r3, #70]
 8329 10a2 07F53973 		add	r3, r7, #740
 8330 10a6 6E22     		movs	r2, #110
 8331 10a8 83F84720 		strb	r2, [r3, #71]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 193


 8332 10ac 07F53973 		add	r3, r7, #740
 8333 10b0 6E22     		movs	r2, #110
 8334 10b2 83F84820 		strb	r2, [r3, #72]
 8335 10b6 07F53973 		add	r3, r7, #740
 8336 10ba 0022     		movs	r2, #0
 8337 10bc 83F84920 		strb	r2, [r3, #73]
 8338 10c0 07F53973 		add	r3, r7, #740
 8339 10c4 6422     		movs	r2, #100
 8340 10c6 83F84A20 		strb	r2, [r3, #74]
 8341 10ca 07F53973 		add	r3, r7, #740
 8342 10ce 6422     		movs	r2, #100
 8343 10d0 83F84B20 		strb	r2, [r3, #75]
 8344 10d4 07F53973 		add	r3, r7, #740
 8345 10d8 6422     		movs	r2, #100
 8346 10da 83F84C20 		strb	r2, [r3, #76]
 8347 10de 07F53973 		add	r3, r7, #740
 8348 10e2 5022     		movs	r2, #80
 8349 10e4 83F84D20 		strb	r2, [r3, #77]
 8350 10e8 07F53973 		add	r3, r7, #740
 8351 10ec 5022     		movs	r2, #80
 8352 10ee 83F84E20 		strb	r2, [r3, #78]
 8353 10f2 07F53973 		add	r3, r7, #740
 8354 10f6 5A22     		movs	r2, #90
 8355 10f8 83F84F20 		strb	r2, [r3, #79]
 8356 10fc 07F53973 		add	r3, r7, #740
 8357 1100 5A22     		movs	r2, #90
 8358 1102 83F85020 		strb	r2, [r3, #80]
 8359 1106 07F53973 		add	r3, r7, #740
 8360 110a 5A22     		movs	r2, #90
 8361 110c 83F85120 		strb	r2, [r3, #81]
1042:..\src/command_processing.c ****         ST_EXPANSION, ST_EXPANSION, ST_JOY_SPEC, ST_JOY_SPEC,
1043:..\src/command_processing.c ****         ST_JOY_SPEC, ST_DEVICE, ST_WR_SPEC, ST_WR_SPEC,
1044:..\src/command_processing.c ****         
1045:..\src/command_processing.c ****         ST_WR_SPEC, ST_MS_SPEC, ST_MS_SPEC, ST_FB_SPEC,
1046:..\src/command_processing.c ****         ST_FB_SPEC, ST_FB_SPEC
1047:..\src/command_processing.c ****         
1048:..\src/command_processing.c ****     };
1049:..\src/command_processing.c ****     
1050:..\src/command_processing.c ****     const char* PARAMS_STR[NUM_OF_PARAMS] = {
 8362              		.loc 1 1050 0
 8363 1110 07F5CE73 		add	r3, r7, #412
 8364 1114 D04A     		ldr	r2, .L362
 8365 1116 1846     		mov	r0, r3
 8366 1118 1146     		mov	r1, r2
 8367 111a 4FF4A473 		mov	r3, #328
 8368 111e 1A46     		mov	r2, r3
 8369 1120 FFF7FEFF 		bl	memcpy
1051:..\src/command_processing.c ****         "1 - Device ID:", "2 - Position PID [P, I, D]:", "3 - Current PID [P, I, D]:", "4 - Startup
1052:..\src/command_processing.c ****         "5 - Input mode:", "6 - Control mode:", "7 - Resolutions:", "8 - Measurement Offsets:", 
1053:..\src/command_processing.c ****         "9 - Multipliers:", "10 - Pos. limit active:", "11 - Pos. limits [inf, sup]:", "12 - Max st
1054:..\src/command_processing.c ****         "13 - Current limit:", "14 - EMG thresholds:", "15 - EMG calibration on startup:", "16 - EM
1055:..\src/command_processing.c ****         "17 - EMG max speeds:", "18 - Absolute encoder position:", "19 - Motor handle ratio:", "20 
1056:..\src/command_processing.c ****         "21 - Current lookup:", "22 - Date of maintenance [D/M/Y]:", "23 - Rest position:", "24 - R
1057:..\src/command_processing.c ****         "25 - Rest vel closure (ticks/sec):", "26 - Rest position enabled:", "27 - EMG inversion:",
1058:..\src/command_processing.c ****         "29 - Enable IMUs:", "30 - Read Expansion port:", "31 - Reset counters:", "32 - Last checke
1059:..\src/command_processing.c ****         "33 - SPI read delay (IMU):", "34 - On board IMU conf. [a,g,m,q,t]:", "35 - User ID:", "36 
1060:..\src/command_processing.c ****         
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 194


1061:..\src/command_processing.c ****         // GENERIC PARAMS
1062:..\src/command_processing.c ****         "37 - Associated encoder line:", "38 - Driver type:", "39 - PWM rate limiter:", "40 - Not r
1063:..\src/command_processing.c ****         "41 - Enc idx used for control:", "42 - Gear params[N1, N2, I1]:", "43 - Use second motor:"
1064:..\src/command_processing.c ****         "45 - Current PID [P, I, D]:", "46 - Startup Activation:", "47 - Input mode:", "48 - Contro
1065:..\src/command_processing.c ****         "49 - Resolutions:", "50 - Measurement Offsets:", "51 - Multipliers:", "52 - Pos. limit act
1066:..\src/command_processing.c ****         "53 - Pos. limits [inf, sup]:", "54 - Max steps [neg, pos]:", "55 - Current limit:", "56 - 
1067:..\src/command_processing.c ****         "57 - Motor handle ratio:", "58 - PWM rescaling:", "59 - Current lookup:", "60 - Associated
1068:..\src/command_processing.c ****         "61 - Driver type:", "62 - PWM rate limiter:", "63 - Not reversible:", "64 - Enc idx used f
1069:..\src/command_processing.c ****         "65 - Gear params[N1, N2, I1]:", "66 - Read enc raw line 0:", "67 - Read enc raw line 1:", 
1070:..\src/command_processing.c ****         "69 - ADC channel [1-6]:", "70 - ADC channel [7-12]:", "71 - Joystick closure speed:", "72 
1071:..\src/command_processing.c ****         "73 - Joystick gains:", "74 - Device type:", "75 - Wrist act. mode:", "76 - Fast act. thres
1072:..\src/command_processing.c ****         
1073:..\src/command_processing.c ****         "77 - Wrist direction:", "78 - Slave communication active:", "79 - Slave ID:", "80 - Maximu
1074:..\src/command_processing.c ****         "81 - Maximum pressure feedback (kPa):", "82 - Proportional pressure error gain:", 
1075:..\src/command_processing.c ****     };
1076:..\src/command_processing.c **** 
1077:..\src/command_processing.c ****     //Parameters menu
1078:..\src/command_processing.c ****     char spi_delay_menu[118]    = ""; 
 8370              		.loc 1 1078 0
 8371 1124 07F59273 		add	r3, r7, #292
 8372 1128 0022     		movs	r2, #0
 8373 112a 1A60     		str	r2, [r3]
 8374 112c 0433     		adds	r3, r3, #4
 8375 112e 7222     		movs	r2, #114
 8376 1130 0021     		movs	r1, #0
 8377 1132 1846     		mov	r0, r3
 8378 1134 FFF7FEFF 		bl	memset
1079:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 8379              		.loc 1 1079 0
 8380 1138 07F59270 		add	r0, r7, #292
 8381 113c 6423     		movs	r3, #100
 8382 113e 0A22     		movs	r2, #10
 8383 1140 C649     		ldr	r1, .L362+4
 8384 1142 FFF7FEFF 		bl	sprintf
1080:..\src/command_processing.c **** 
1081:..\src/command_processing.c ****     const char* MENU_STR[NUM_OF_PARAMS_MENU] = {
 8385              		.loc 1 1081 0
 8386 1146 07F1F403 		add	r3, r7, #244
 8387 114a C54A     		ldr	r2, .L362+8
 8388 114c 1A60     		str	r2, [r3]
 8389 114e 07F1F403 		add	r3, r7, #244
 8390 1152 C44A     		ldr	r2, .L362+12
 8391 1154 5A60     		str	r2, [r3, #4]
 8392 1156 07F1F403 		add	r3, r7, #244
 8393 115a C34A     		ldr	r2, .L362+16
 8394 115c 9A60     		str	r2, [r3, #8]
 8395 115e 07F1F403 		add	r3, r7, #244
 8396 1162 C24A     		ldr	r2, .L362+20
 8397 1164 DA60     		str	r2, [r3, #12]
 8398 1166 07F1F403 		add	r3, r7, #244
 8399 116a C14A     		ldr	r2, .L362+24
 8400 116c 1A61     		str	r2, [r3, #16]
 8401 116e 07F1F403 		add	r3, r7, #244
 8402 1172 C04A     		ldr	r2, .L362+28
 8403 1174 5A61     		str	r2, [r3, #20]
 8404 1176 07F1F403 		add	r3, r7, #244
 8405 117a 07F59272 		add	r2, r7, #292
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 195


 8406 117e 9A61     		str	r2, [r3, #24]
 8407 1180 07F1F403 		add	r3, r7, #244
 8408 1184 BC4A     		ldr	r2, .L362+32
 8409 1186 DA61     		str	r2, [r3, #28]
 8410 1188 07F1F403 		add	r3, r7, #244
 8411 118c BB4A     		ldr	r2, .L362+36
 8412 118e 1A62     		str	r2, [r3, #32]
 8413 1190 07F1F403 		add	r3, r7, #244
 8414 1194 BA4A     		ldr	r2, .L362+40
 8415 1196 5A62     		str	r2, [r3, #36]
 8416 1198 07F1F403 		add	r3, r7, #244
 8417 119c B94A     		ldr	r2, .L362+44
 8418 119e 9A62     		str	r2, [r3, #40]
 8419 11a0 07F1F403 		add	r3, r7, #244
 8420 11a4 B84A     		ldr	r2, .L362+48
 8421 11a6 DA62     		str	r2, [r3, #44]
1082:..\src/command_processing.c ****         "0 -> Usb\n1 -> Handle\n2 -> EMG proportional\n3 -> EMG Integral\n4 -> EMG FCFS\n5 -> EMG F
1083:..\src/command_processing.c ****         "0 -> Position\n1 -> PWM\n2 -> Current\n3 -> Position and Current\n",                      
1084:..\src/command_processing.c ****         "0 -> Deactivate [NO]\n1 -> Activate [YES]\n",                                             
1085:..\src/command_processing.c ****         "0 -> Right\n1 -> Left\n",                                                                 
1086:..\src/command_processing.c ****         "0 -> OFF\n1 -> ON\nThe board will reset\n",                                               
1087:..\src/command_processing.c ****         "0 -> None\n1 -> SD/RTC board\n2 -> WiFi board [N/A]\n3 -> Other [N/A]\nThe board will rese
1088:..\src/command_processing.c ****         spi_delay_menu,                                                                            
1089:..\src/command_processing.c ****         "0 -> Generic user\n1 -> Maria\n2 -> Roza\nThe board will reset\n",                        
1090:..\src/command_processing.c ****         "0 -> MC33887 (Standard)\n1 -> VNH5019 (High power)\nThe board will reset\n",              
1091:..\src/command_processing.c ****         "0 -> SOFTHAND PRO\n1 -> GENERIC 2 MOTORS\n2 -> AIR CHAMBERS\n3 -> OTTOBOCK WRIST\n4 -> SOF
1092:..\src/command_processing.c ****         "0 -> Fast:wrist, Slow:hand\n1 -> Slow:wrist, Fast:hand\n",                                
1093:..\src/command_processing.c ****         "0 -> Close:CW, Open:CCW\n1 -> Close:CCW, Open:CW\n"                                       
1094:..\src/command_processing.c ****     };   
1095:..\src/command_processing.c ****     
1096:..\src/command_processing.c ****     uint8 NUM_MENU[31] = {3, 1, 2, 3, 3, 3, 3, 3, 3, 4, 5, 6, 3, 7, 8, 9, 3, 5, 3, 1, 2, 3, 3, 3, 9
 8422              		.loc 1 1096 0
 8423 11a8 07F1D403 		add	r3, r7, #212
 8424 11ac B74A     		ldr	r2, .L362+52
 8425 11ae 1C46     		mov	r4, r3
 8426 11b0 1546     		mov	r5, r2
 8427 11b2 2868     		ldr	r0, [r5]	@ unaligned
 8428 11b4 6968     		ldr	r1, [r5, #4]	@ unaligned
 8429 11b6 AA68     		ldr	r2, [r5, #8]	@ unaligned
 8430 11b8 EB68     		ldr	r3, [r5, #12]	@ unaligned
 8431 11ba 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8432 11bc 2869     		ldr	r0, [r5, #16]	@ unaligned
 8433 11be 6969     		ldr	r1, [r5, #20]	@ unaligned
 8434 11c0 AA69     		ldr	r2, [r5, #24]	@ unaligned
 8435 11c2 07C4     		stmia	r4!, {r0, r1, r2}
 8436 11c4 AB8B     		ldrh	r3, [r5, #28]	@ unaligned
 8437 11c6 AA7F     		ldrb	r2, [r5, #30]
 8438 11c8 2380     		strh	r3, [r4]	@ unaligned
 8439 11ca 1346     		mov	r3, r2
 8440 11cc A370     		strb	r3, [r4, #2]
1097:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET_LIST[9]  = {2, 3, 8, 11, 23, 44, 45, 50, 53};
 8441              		.loc 1 1097 0
 8442 11ce 07F1C803 		add	r3, r7, #200
 8443 11d2 AF4A     		ldr	r2, .L362+56
 8444 11d4 1068     		ldr	r0, [r2]	@ unaligned
 8445 11d6 5168     		ldr	r1, [r2, #4]	@ unaligned
 8446 11d8 03C3     		stmia	r3!, {r0, r1}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 196


 8447 11da 127A     		ldrb	r2, [r2, #8]
 8448 11dc 1A70     		strb	r2, [r3]
1098:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET_LIST[18] = {2, 3, 5, 8, 11, 23, 24, 28, 31, 32, 38, 44, 45, 47, 50, 53, 
 8449              		.loc 1 1098 0
 8450 11de 07F1B403 		add	r3, r7, #180
 8451 11e2 AC4A     		ldr	r2, .L362+60
 8452 11e4 1C46     		mov	r4, r3
 8453 11e6 1546     		mov	r5, r2
 8454 11e8 2868     		ldr	r0, [r5]	@ unaligned
 8455 11ea 6968     		ldr	r1, [r5, #4]	@ unaligned
 8456 11ec AA68     		ldr	r2, [r5, #8]	@ unaligned
 8457 11ee EB68     		ldr	r3, [r5, #12]	@ unaligned
 8458 11f0 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8459 11f2 2B8A     		ldrh	r3, [r5, #16]	@ unaligned
 8460 11f4 2380     		strh	r3, [r4]	@ unaligned
1099:..\src/command_processing.c ****     uint8 USER_ID_PARAM = 35;
 8461              		.loc 1 1099 0
 8462 11f6 2323     		movs	r3, #35
 8463 11f8 87F83B35 		strb	r3, [r7, #1339]
1100:..\src/command_processing.c **** 
1101:..\src/command_processing.c **** // Note: If a custom parameter change is needed, add to CUSTOM_PARAM_LIST, then change it
1102:..\src/command_processing.c **** // in the dedicated function set_custom_param()    
1103:..\src/command_processing.c ****     
1104:..\src/command_processing.c **** //------------------ END OF PARAMETERS VARIABLES --------------------//        
1105:..\src/command_processing.c **** 
1106:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
1107:..\src/command_processing.c ****     
1108:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS];
1109:..\src/command_processing.c ****     j = 0;
 8464              		.loc 1 1109 0
 8465 11fc 0023     		movs	r3, #0
 8466 11fe 87F84635 		strb	r3, [r7, #1350]
1110:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 8467              		.loc 1 1110 0
 8468 1202 0023     		movs	r3, #0
 8469 1204 87F84735 		strb	r3, [r7, #1351]
 8470 1208 21E0     		b	.L296
 8471              	.L299:
1111:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8472              		.loc 1 1111 0
 8473 120a 97F84635 		ldrb	r3, [r7, #1350]	@ zero_extendqisi2
 8474 120e 07F1C802 		add	r2, r7, #200
 8475 1212 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8476 1214 1A46     		mov	r2, r3
 8477 1216 97F84735 		ldrb	r3, [r7, #1351]	@ zero_extendqisi2
 8478 121a 0133     		adds	r3, r3, #1
 8479 121c 9A42     		cmp	r2, r3
 8480 121e 0BD1     		bne	.L297
1112:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = TRUE;
 8481              		.loc 1 1112 0
 8482 1220 97F84735 		ldrb	r3, [r7, #1351]	@ zero_extendqisi2
 8483 1224 07F16002 		add	r2, r7, #96
 8484 1228 0121     		movs	r1, #1
 8485 122a D154     		strb	r1, [r2, r3]
1113:..\src/command_processing.c ****             j++;
 8486              		.loc 1 1113 0
 8487 122c 97F84635 		ldrb	r3, [r7, #1350]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 197


 8488 1230 0133     		adds	r3, r3, #1
 8489 1232 87F84635 		strb	r3, [r7, #1350]
 8490 1236 05E0     		b	.L298
 8491              	.L297:
1114:..\src/command_processing.c ****         }
1115:..\src/command_processing.c ****         else {
1116:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = FALSE;
 8492              		.loc 1 1116 0
 8493 1238 97F84735 		ldrb	r3, [r7, #1351]	@ zero_extendqisi2
 8494 123c 07F16002 		add	r2, r7, #96
 8495 1240 0021     		movs	r1, #0
 8496 1242 D154     		strb	r1, [r2, r3]
 8497              	.L298:
1110:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8498              		.loc 1 1110 0 discriminator 2
 8499 1244 97F84735 		ldrb	r3, [r7, #1351]	@ zero_extendqisi2
 8500 1248 0133     		adds	r3, r3, #1
 8501 124a 87F84735 		strb	r3, [r7, #1351]
 8502              	.L296:
1110:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8503              		.loc 1 1110 0 is_stmt 0 discriminator 1
 8504 124e 97F84735 		ldrb	r3, [r7, #1351]	@ zero_extendqisi2
 8505 1252 512B     		cmp	r3, #81
 8506 1254 D9D9     		bls	.L299
1117:..\src/command_processing.c ****         }
1118:..\src/command_processing.c ****     }   // All parameters can be get with default settings, except the following ones
1119:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET[NUM_OF_PARAMS];
1120:..\src/command_processing.c ****     j = 0;
 8507              		.loc 1 1120 0 is_stmt 1
 8508 1256 0023     		movs	r3, #0
 8509 1258 87F84635 		strb	r3, [r7, #1350]
1121:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 8510              		.loc 1 1121 0
 8511 125c 0023     		movs	r3, #0
 8512 125e 87F84735 		strb	r3, [r7, #1351]
 8513 1262 21E0     		b	.L300
 8514              	.L303:
1122:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8515              		.loc 1 1122 0
 8516 1264 97F84635 		ldrb	r3, [r7, #1350]	@ zero_extendqisi2
 8517 1268 07F1B402 		add	r2, r7, #180
 8518 126c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8519 126e 1A46     		mov	r2, r3
 8520 1270 97F84735 		ldrb	r3, [r7, #1351]	@ zero_extendqisi2
 8521 1274 0133     		adds	r3, r3, #1
 8522 1276 9A42     		cmp	r2, r3
 8523 1278 0BD1     		bne	.L301
1123:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = TRUE;
 8524              		.loc 1 1123 0
 8525 127a 97F84735 		ldrb	r3, [r7, #1351]	@ zero_extendqisi2
 8526 127e 07F10C02 		add	r2, r7, #12
 8527 1282 0121     		movs	r1, #1
 8528 1284 D154     		strb	r1, [r2, r3]
1124:..\src/command_processing.c ****             j++;
 8529              		.loc 1 1124 0
 8530 1286 97F84635 		ldrb	r3, [r7, #1350]	@ zero_extendqisi2
 8531 128a 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 198


 8532 128c 87F84635 		strb	r3, [r7, #1350]
 8533 1290 05E0     		b	.L302
 8534              	.L301:
1125:..\src/command_processing.c ****         }
1126:..\src/command_processing.c ****         else {
1127:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = FALSE;
 8535              		.loc 1 1127 0
 8536 1292 97F84735 		ldrb	r3, [r7, #1351]	@ zero_extendqisi2
 8537 1296 07F10C02 		add	r2, r7, #12
 8538 129a 0021     		movs	r1, #0
 8539 129c D154     		strb	r1, [r2, r3]
 8540              	.L302:
1121:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8541              		.loc 1 1121 0 discriminator 2
 8542 129e 97F84735 		ldrb	r3, [r7, #1351]	@ zero_extendqisi2
 8543 12a2 0133     		adds	r3, r3, #1
 8544 12a4 87F84735 		strb	r3, [r7, #1351]
 8545              	.L300:
1121:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8546              		.loc 1 1121 0 is_stmt 0 discriminator 1
 8547 12a8 97F84735 		ldrb	r3, [r7, #1351]	@ zero_extendqisi2
 8548 12ac 512B     		cmp	r3, #81
 8549 12ae D9D9     		bls	.L303
1128:..\src/command_processing.c ****         }
1129:..\src/command_processing.c ****     }   // All parameters can be setted with default settings, except the following ones
1130:..\src/command_processing.c ****         
1131:..\src/command_processing.c ****     if (!index) {
 8550              		.loc 1 1131 0 is_stmt 1
 8551 12b0 BB1D     		adds	r3, r7, #6
 8552 12b2 1B88     		ldrh	r3, [r3]
 8553 12b4 002B     		cmp	r3, #0
 8554 12b6 17D1     		bne	.L304
1132:..\src/command_processing.c ****         // Get parameters list with relative types
1133:..\src/command_processing.c ****         get_param_list(VAR_P, TYPES, NUM_ITEMS, NUM_STRUCT, NUM_MENU, PARAMS_STR, CUSTOM_PARAM_GET,
 8555              		.loc 1 1133 0
 8556 12b8 07F53974 		add	r4, r7, #740
 8557 12bc 07F54E72 		add	r2, r7, #824
 8558 12c0 07F56371 		add	r1, r7, #908
 8559 12c4 07F57870 		add	r0, r7, #992
 8560 12c8 07F1F403 		add	r3, r7, #244
 8561 12cc 0393     		str	r3, [sp, #12]
 8562 12ce 07F16003 		add	r3, r7, #96
 8563 12d2 0293     		str	r3, [sp, #8]
 8564 12d4 07F5CE73 		add	r3, r7, #412
 8565 12d8 0193     		str	r3, [sp, #4]
 8566 12da 07F1D403 		add	r3, r7, #212
 8567 12de 0093     		str	r3, [sp]
 8568 12e0 2346     		mov	r3, r4
 8569 12e2 FFF7FEFF 		bl	get_param_list
1134:..\src/command_processing.c ****     }
1135:..\src/command_processing.c ****     else {
1136:..\src/command_processing.c ****         // Set specific parameter        
1137:..\src/command_processing.c ****         PARAM_IDX = index -1;       // Get right vector param index
1138:..\src/command_processing.c ****         
1139:..\src/command_processing.c ****         // Find size of data
1140:..\src/command_processing.c ****         switch (TYPES[PARAM_IDX]) {
1141:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 199


1142:..\src/command_processing.c ****                 sod = 1; break;
1143:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
1144:..\src/command_processing.c ****                 sod = 2; break;
1145:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
1146:..\src/command_processing.c ****                 sod = 4; break;
1147:..\src/command_processing.c ****         }   
1148:..\src/command_processing.c ****             
1149:..\src/command_processing.c ****         if (!CUSTOM_PARAM_SET[PARAM_IDX]) {
1150:..\src/command_processing.c ****             // Use default specifications for param setting
1151:..\src/command_processing.c ****             switch(TYPES[PARAM_IDX]) {
1152:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
1153:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1154:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1155:..\src/command_processing.c ****                     }
1156:..\src/command_processing.c ****                     break;                
1157:..\src/command_processing.c ****                 case TYPE_STRING:
1158:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1159:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1160:..\src/command_processing.c ****                     }
1161:..\src/command_processing.c ****                     *(VAR_P[PARAM_IDX] + i*sod) = '\0';
1162:..\src/command_processing.c ****                 break; 
1163:..\src/command_processing.c ****                 case TYPE_INT8:
1164:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1165:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
1166:..\src/command_processing.c ****                     }
1167:..\src/command_processing.c ****                     break;                    
1168:..\src/command_processing.c ****                 case TYPE_INT16:
1169:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1170:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
1171:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1172:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
1173:..\src/command_processing.c ****                         }
1174:..\src/command_processing.c ****                     }                   
1175:..\src/command_processing.c ****                     break;
1176:..\src/command_processing.c ****                 case TYPE_UINT16:
1177:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1178:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
1179:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1180:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
1181:..\src/command_processing.c ****                         }
1182:..\src/command_processing.c ****                     }
1183:..\src/command_processing.c ****                     break;
1184:..\src/command_processing.c ****                 case TYPE_INT32:
1185:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1186:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
1187:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1188:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
1189:..\src/command_processing.c ****                         }
1190:..\src/command_processing.c ****                     }
1191:..\src/command_processing.c ****                     break;
1192:..\src/command_processing.c ****                 case TYPE_UINT32:
1193:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1194:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
1195:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1196:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
1197:..\src/command_processing.c ****                         }
1198:..\src/command_processing.c ****                     }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 200


1199:..\src/command_processing.c ****                     break;
1200:..\src/command_processing.c ****                 case TYPE_FLOAT:
1201:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1202:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
1203:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1204:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
1205:..\src/command_processing.c ****                         }
1206:..\src/command_processing.c ****                     }
1207:..\src/command_processing.c ****                     break;
1208:..\src/command_processing.c ****                 default:
1209:..\src/command_processing.c ****                     break;
1210:..\src/command_processing.c ****             }
1211:..\src/command_processing.c ****         }
1212:..\src/command_processing.c ****         else {  
1213:..\src/command_processing.c ****             // Use custom specifications for param setting
1214:..\src/command_processing.c ****             set_custom_param(index);
1215:..\src/command_processing.c ****         }
1216:..\src/command_processing.c ****         
1217:..\src/command_processing.c ****         // Store param also in user_emg structure
1218:..\src/command_processing.c ****         if (index != USER_ID_PARAM) {        // Not when changing user id
1219:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
1220:..\src/command_processing.c ****         }
1221:..\src/command_processing.c ****         
1222:..\src/command_processing.c ****         // Perform chip reset if needed
1223:..\src/command_processing.c ****         if (TYPES[PARAM_IDX] == TYPE_FLAG){
1224:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
1225:..\src/command_processing.c ****             do {
1226:..\src/command_processing.c ****                 if (TYPES[idx] == TYPE_FLAG) menu_idx++;    // Increment idx to find the right NUM_
1227:..\src/command_processing.c ****                 idx++;
1228:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
1229:..\src/command_processing.c ****             
1230:..\src/command_processing.c ****             if (NUM_MENU[menu_idx] == 5 || NUM_MENU[menu_idx] == 6 || NUM_MENU[menu_idx] == 8 || NU
1231:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
1232:..\src/command_processing.c ****             }   
1233:..\src/command_processing.c ****         }
1234:..\src/command_processing.c ****     }
1235:..\src/command_processing.c **** } 
 8570              		.loc 1 1235 0
 8571 12e6 DDE2     		b	.L355
 8572              	.L304:
1137:..\src/command_processing.c ****         
 8573              		.loc 1 1137 0
 8574 12e8 BB1D     		adds	r3, r7, #6
 8575 12ea 1B88     		ldrh	r3, [r3]	@ movhi
 8576 12ec DBB2     		uxtb	r3, r3
 8577 12ee 013B     		subs	r3, r3, #1
 8578 12f0 87F83A35 		strb	r3, [r7, #1338]
1140:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 8579              		.loc 1 1140 0
 8580 12f4 97F83A35 		ldrb	r3, [r7, #1338]	@ zero_extendqisi2
 8581 12f8 07F56372 		add	r2, r7, #908
 8582 12fc D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8583 12fe 092B     		cmp	r3, #9
 8584 1300 22D8     		bhi	.L306
 8585 1302 01A2     		adr	r2, .L308
 8586 1304 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8587              		.p2align 2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 201


 8588              	.L308:
 8589 1308 31130000 		.word	.L307+1
 8590 130c 31130000 		.word	.L307+1
 8591 1310 31130000 		.word	.L307+1
 8592 1314 39130000 		.word	.L309+1
 8593 1318 39130000 		.word	.L309+1
 8594 131c 41130000 		.word	.L310+1
 8595 1320 41130000 		.word	.L310+1
 8596 1324 41130000 		.word	.L310+1
 8597 1328 49130000 		.word	.L306+1
 8598 132c 31130000 		.word	.L307+1
 8599              		.p2align 1
 8600              	.L307:
1142:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 8601              		.loc 1 1142 0
 8602 1330 0123     		movs	r3, #1
 8603 1332 87F84535 		strb	r3, [r7, #1349]
 8604 1336 07E0     		b	.L306
 8605              	.L309:
1144:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 8606              		.loc 1 1144 0
 8607 1338 0223     		movs	r3, #2
 8608 133a 87F84535 		strb	r3, [r7, #1349]
 8609 133e 03E0     		b	.L306
 8610              	.L310:
1146:..\src/command_processing.c ****         }   
 8611              		.loc 1 1146 0
 8612 1340 0423     		movs	r3, #4
 8613 1342 87F84535 		strb	r3, [r7, #1349]
 8614 1346 00BF     		nop
 8615              	.L306:
1149:..\src/command_processing.c ****             // Use default specifications for param setting
 8616              		.loc 1 1149 0
 8617 1348 97F83A35 		ldrb	r3, [r7, #1338]	@ zero_extendqisi2
 8618 134c 07F10C02 		add	r2, r7, #12
 8619 1350 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8620 1352 002B     		cmp	r3, #0
 8621 1354 40F03A82 		bne	.L311
1151:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
 8622              		.loc 1 1151 0
 8623 1358 97F83A35 		ldrb	r3, [r7, #1338]	@ zero_extendqisi2
 8624 135c 07F56372 		add	r2, r7, #908
 8625 1360 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8626 1362 092B     		cmp	r3, #9
 8627 1364 00F23A82 		bhi	.L354
 8628 1368 01A2     		adr	r2, .L314
 8629 136a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8630 136e 00BF     		.p2align 2
 8631              	.L314:
 8632 1370 99130000 		.word	.L313+1
 8633 1374 4F140000 		.word	.L315+1
 8634 1378 99130000 		.word	.L313+1
 8635 137c E7140000 		.word	.L316+1
 8636 1380 7D150000 		.word	.L317+1
 8637 1384 11160000 		.word	.L318+1
 8638 1388 A5160000 		.word	.L319+1
 8639 138c 39170000 		.word	.L320+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 202


 8640 1390 DD170000 		.word	.L354+1
 8641 1394 E5130000 		.word	.L321+1
 8642              		.p2align 1
 8643              	.L313:
1153:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8644              		.loc 1 1153 0
 8645 1398 0023     		movs	r3, #0
 8646 139a 87F84735 		strb	r3, [r7, #1351]
 8647 139e 17E0     		b	.L322
 8648              	.L323:
1154:..\src/command_processing.c ****                     }
 8649              		.loc 1 1154 0 discriminator 3
 8650 13a0 97F83A25 		ldrb	r2, [r7, #1338]	@ zero_extendqisi2
 8651 13a4 07F57873 		add	r3, r7, #992
 8652 13a8 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8653 13ac 97F84725 		ldrb	r2, [r7, #1351]	@ zero_extendqisi2
 8654 13b0 97F84515 		ldrb	r1, [r7, #1349]	@ zero_extendqisi2
 8655 13b4 01FB02F2 		mul	r2, r1, r2
 8656 13b8 1344     		add	r3, r3, r2
 8657 13ba 97F84725 		ldrb	r2, [r7, #1351]	@ zero_extendqisi2
 8658 13be 0332     		adds	r2, r2, #3
 8659 13c0 3549     		ldr	r1, .L362+64
 8660 13c2 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8661 13c4 1A70     		strb	r2, [r3]
1153:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8662              		.loc 1 1153 0 discriminator 3
 8663 13c6 97F84735 		ldrb	r3, [r7, #1351]	@ zero_extendqisi2
 8664 13ca 0133     		adds	r3, r3, #1
 8665 13cc 87F84735 		strb	r3, [r7, #1351]
 8666              	.L322:
1153:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8667              		.loc 1 1153 0 is_stmt 0 discriminator 1
 8668 13d0 97F83A35 		ldrb	r3, [r7, #1338]	@ zero_extendqisi2
 8669 13d4 07F54E72 		add	r2, r7, #824
 8670 13d8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8671 13da 97F84725 		ldrb	r2, [r7, #1351]	@ zero_extendqisi2
 8672 13de 9A42     		cmp	r2, r3
 8673 13e0 DED3     		bcc	.L323
1156:..\src/command_processing.c ****                 case TYPE_STRING:
 8674              		.loc 1 1156 0 is_stmt 1
 8675 13e2 FCE1     		b	.L349
 8676              	.L321:
1158:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8677              		.loc 1 1158 0
 8678 13e4 0023     		movs	r3, #0
 8679 13e6 87F84735 		strb	r3, [r7, #1351]
 8680 13ea 17E0     		b	.L325
 8681              	.L326:
1159:..\src/command_processing.c ****                     }
 8682              		.loc 1 1159 0 discriminator 3
 8683 13ec 97F83A25 		ldrb	r2, [r7, #1338]	@ zero_extendqisi2
 8684 13f0 07F57873 		add	r3, r7, #992
 8685 13f4 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8686 13f8 97F84725 		ldrb	r2, [r7, #1351]	@ zero_extendqisi2
 8687 13fc 97F84515 		ldrb	r1, [r7, #1349]	@ zero_extendqisi2
 8688 1400 01FB02F2 		mul	r2, r1, r2
 8689 1404 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 203


 8690 1406 97F84725 		ldrb	r2, [r7, #1351]	@ zero_extendqisi2
 8691 140a 0332     		adds	r2, r2, #3
 8692 140c 2249     		ldr	r1, .L362+64
 8693 140e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8694 1410 1A70     		strb	r2, [r3]
1158:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8695              		.loc 1 1158 0 discriminator 3
 8696 1412 97F84735 		ldrb	r3, [r7, #1351]	@ zero_extendqisi2
 8697 1416 0133     		adds	r3, r3, #1
 8698 1418 87F84735 		strb	r3, [r7, #1351]
 8699              	.L325:
1158:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8700              		.loc 1 1158 0 is_stmt 0 discriminator 1
 8701 141c 97F83A35 		ldrb	r3, [r7, #1338]	@ zero_extendqisi2
 8702 1420 07F54E72 		add	r2, r7, #824
 8703 1424 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8704 1426 97F84725 		ldrb	r2, [r7, #1351]	@ zero_extendqisi2
 8705 142a 9A42     		cmp	r2, r3
 8706 142c DED3     		bcc	.L326
1161:..\src/command_processing.c ****                 break; 
 8707              		.loc 1 1161 0 is_stmt 1
 8708 142e 97F83A25 		ldrb	r2, [r7, #1338]	@ zero_extendqisi2
 8709 1432 07F57873 		add	r3, r7, #992
 8710 1436 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8711 143a 97F84725 		ldrb	r2, [r7, #1351]	@ zero_extendqisi2
 8712 143e 97F84515 		ldrb	r1, [r7, #1349]	@ zero_extendqisi2
 8713 1442 01FB02F2 		mul	r2, r1, r2
 8714 1446 1344     		add	r3, r3, r2
 8715 1448 0022     		movs	r2, #0
 8716 144a 1A70     		strb	r2, [r3]
1162:..\src/command_processing.c ****                 case TYPE_INT8:
 8717              		.loc 1 1162 0
 8718 144c C7E1     		b	.L349
 8719              	.L315:
1164:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 8720              		.loc 1 1164 0
 8721 144e 0023     		movs	r3, #0
 8722 1450 87F84735 		strb	r3, [r7, #1351]
 8723 1454 3DE0     		b	.L327
 8724              	.L363:
 8725 1456 00BF     		.align	2
 8726              	.L362:
 8727 1458 880E0000 		.word	.LC125
 8728 145c 44020000 		.word	.LC126
 8729 1460 B8020000 		.word	.LC127
 8730 1464 44030000 		.word	.LC128
 8731 1468 84030000 		.word	.LC129
 8732 146c B0030000 		.word	.LC130
 8733 1470 C8030000 		.word	.LC131
 8734 1474 F0030000 		.word	.LC132
 8735 1478 4C040000 		.word	.LC133
 8736 147c 8C040000 		.word	.LC134
 8737 1480 D4040000 		.word	.LC135
 8738 1484 50050000 		.word	.LC136
 8739 1488 88050000 		.word	.LC137
 8740 148c D00F0000 		.word	.LC84
 8741 1490 F00F0000 		.word	.LC85
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 204


 8742 1494 FC0F0000 		.word	.LC86
 8743 1498 00000000 		.word	g_rx
 8744              	.L328:
1165:..\src/command_processing.c ****                     }
 8745              		.loc 1 1165 0 discriminator 3
 8746 149c 97F83A25 		ldrb	r2, [r7, #1338]	@ zero_extendqisi2
 8747 14a0 07F57873 		add	r3, r7, #992
 8748 14a4 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8749 14a8 97F84725 		ldrb	r2, [r7, #1351]	@ zero_extendqisi2
 8750 14ac 97F84515 		ldrb	r1, [r7, #1349]	@ zero_extendqisi2
 8751 14b0 01FB02F2 		mul	r2, r1, r2
 8752 14b4 1344     		add	r3, r3, r2
 8753 14b6 97F84725 		ldrb	r2, [r7, #1351]	@ zero_extendqisi2
 8754 14ba 0332     		adds	r2, r2, #3
 8755 14bc C649     		ldr	r1, .L364
 8756 14be 0A44     		add	r2, r2, r1
 8757 14c0 92F90020 		ldrsb	r2, [r2]
 8758 14c4 D2B2     		uxtb	r2, r2
 8759 14c6 1A70     		strb	r2, [r3]
1164:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 8760              		.loc 1 1164 0 discriminator 3
 8761 14c8 97F84735 		ldrb	r3, [r7, #1351]	@ zero_extendqisi2
 8762 14cc 0133     		adds	r3, r3, #1
 8763 14ce 87F84735 		strb	r3, [r7, #1351]
 8764              	.L327:
1164:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 8765              		.loc 1 1164 0 is_stmt 0 discriminator 1
 8766 14d2 97F83A35 		ldrb	r3, [r7, #1338]	@ zero_extendqisi2
 8767 14d6 07F54E72 		add	r2, r7, #824
 8768 14da D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8769 14dc 97F84725 		ldrb	r2, [r7, #1351]	@ zero_extendqisi2
 8770 14e0 9A42     		cmp	r2, r3
 8771 14e2 DBD3     		bcc	.L328
1167:..\src/command_processing.c ****                 case TYPE_INT16:
 8772              		.loc 1 1167 0 is_stmt 1
 8773 14e4 7BE1     		b	.L349
 8774              	.L316:
1169:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 8775              		.loc 1 1169 0
 8776 14e6 0023     		movs	r3, #0
 8777 14e8 87F84735 		strb	r3, [r7, #1351]
 8778 14ec 3CE0     		b	.L329
 8779              	.L332:
1170:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 8780              		.loc 1 1170 0
 8781 14ee 97F84735 		ldrb	r3, [r7, #1351]	@ zero_extendqisi2
 8782 14f2 97F84525 		ldrb	r2, [r7, #1349]	@ zero_extendqisi2
 8783 14f6 02FB03F3 		mul	r3, r2, r3
 8784 14fa 0333     		adds	r3, r3, #3
 8785 14fc B64A     		ldr	r2, .L364
 8786 14fe 1344     		add	r3, r3, r2
 8787 1500 B3F90030 		ldrsh	r3, [r3]
 8788 1504 A7F83835 		strh	r3, [r7, #1336]	@ movhi
1171:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 8789              		.loc 1 1171 0
 8790 1508 0023     		movs	r3, #0
 8791 150a 87F84635 		strb	r3, [r7, #1350]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 205


 8792 150e 20E0     		b	.L330
 8793              	.L331:
1172:..\src/command_processing.c ****                         }
 8794              		.loc 1 1172 0 discriminator 3
 8795 1510 97F83A25 		ldrb	r2, [r7, #1338]	@ zero_extendqisi2
 8796 1514 07F57873 		add	r3, r7, #992
 8797 1518 53F82220 		ldr	r2, [r3, r2, lsl #2]
 8798 151c 97F84735 		ldrb	r3, [r7, #1351]	@ zero_extendqisi2
 8799 1520 97F84515 		ldrb	r1, [r7, #1349]	@ zero_extendqisi2
 8800 1524 01FB03F3 		mul	r3, r1, r3
 8801 1528 1846     		mov	r0, r3
 8802 152a 97F84515 		ldrb	r1, [r7, #1349]	@ zero_extendqisi2
 8803 152e 97F84635 		ldrb	r3, [r7, #1350]	@ zero_extendqisi2
 8804 1532 CB1A     		subs	r3, r1, r3
 8805 1534 0344     		add	r3, r3, r0
 8806 1536 013B     		subs	r3, r3, #1
 8807 1538 1344     		add	r3, r3, r2
 8808 153a 97F84625 		ldrb	r2, [r7, #1350]	@ zero_extendqisi2
 8809 153e 07F5A761 		add	r1, r7, #1336
 8810 1542 0A44     		add	r2, r2, r1
 8811 1544 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8812 1546 1A70     		strb	r2, [r3]
1171:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 8813              		.loc 1 1171 0 discriminator 3
 8814 1548 97F84635 		ldrb	r3, [r7, #1350]	@ zero_extendqisi2
 8815 154c 0133     		adds	r3, r3, #1
 8816 154e 87F84635 		strb	r3, [r7, #1350]
 8817              	.L330:
1171:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 8818              		.loc 1 1171 0 is_stmt 0 discriminator 1
 8819 1552 97F84625 		ldrb	r2, [r7, #1350]	@ zero_extendqisi2
 8820 1556 97F84535 		ldrb	r3, [r7, #1349]	@ zero_extendqisi2
 8821 155a 9A42     		cmp	r2, r3
 8822 155c D8D3     		bcc	.L331
1169:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 8823              		.loc 1 1169 0 is_stmt 1 discriminator 2
 8824 155e 97F84735 		ldrb	r3, [r7, #1351]	@ zero_extendqisi2
 8825 1562 0133     		adds	r3, r3, #1
 8826 1564 87F84735 		strb	r3, [r7, #1351]
 8827              	.L329:
1169:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 8828              		.loc 1 1169 0 is_stmt 0 discriminator 1
 8829 1568 97F83A35 		ldrb	r3, [r7, #1338]	@ zero_extendqisi2
 8830 156c 07F54E72 		add	r2, r7, #824
 8831 1570 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8832 1572 97F84725 		ldrb	r2, [r7, #1351]	@ zero_extendqisi2
 8833 1576 9A42     		cmp	r2, r3
 8834 1578 B9D3     		bcc	.L332
1175:..\src/command_processing.c ****                 case TYPE_UINT16:
 8835              		.loc 1 1175 0 is_stmt 1
 8836 157a 30E1     		b	.L349
 8837              	.L317:
1177:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 8838              		.loc 1 1177 0
 8839 157c 0023     		movs	r3, #0
 8840 157e 87F84735 		strb	r3, [r7, #1351]
 8841 1582 3BE0     		b	.L333
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 206


 8842              	.L336:
1178:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 8843              		.loc 1 1178 0
 8844 1584 97F84735 		ldrb	r3, [r7, #1351]	@ zero_extendqisi2
 8845 1588 97F84525 		ldrb	r2, [r7, #1349]	@ zero_extendqisi2
 8846 158c 02FB03F3 		mul	r3, r2, r3
 8847 1590 0333     		adds	r3, r3, #3
 8848 1592 914A     		ldr	r2, .L364
 8849 1594 1344     		add	r3, r3, r2
 8850 1596 1B88     		ldrh	r3, [r3]
 8851 1598 A7F83635 		strh	r3, [r7, #1334]	@ movhi
1179:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 8852              		.loc 1 1179 0
 8853 159c 0023     		movs	r3, #0
 8854 159e 87F84635 		strb	r3, [r7, #1350]
 8855 15a2 20E0     		b	.L334
 8856              	.L335:
1180:..\src/command_processing.c ****                         }
 8857              		.loc 1 1180 0 discriminator 3
 8858 15a4 97F83A25 		ldrb	r2, [r7, #1338]	@ zero_extendqisi2
 8859 15a8 07F57873 		add	r3, r7, #992
 8860 15ac 53F82220 		ldr	r2, [r3, r2, lsl #2]
 8861 15b0 97F84735 		ldrb	r3, [r7, #1351]	@ zero_extendqisi2
 8862 15b4 97F84515 		ldrb	r1, [r7, #1349]	@ zero_extendqisi2
 8863 15b8 01FB03F3 		mul	r3, r1, r3
 8864 15bc 1846     		mov	r0, r3
 8865 15be 97F84515 		ldrb	r1, [r7, #1349]	@ zero_extendqisi2
 8866 15c2 97F84635 		ldrb	r3, [r7, #1350]	@ zero_extendqisi2
 8867 15c6 CB1A     		subs	r3, r1, r3
 8868 15c8 0344     		add	r3, r3, r0
 8869 15ca 013B     		subs	r3, r3, #1
 8870 15cc 1344     		add	r3, r3, r2
 8871 15ce 97F84625 		ldrb	r2, [r7, #1350]	@ zero_extendqisi2
 8872 15d2 07F23651 		addw	r1, r7, #1334
 8873 15d6 0A44     		add	r2, r2, r1
 8874 15d8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8875 15da 1A70     		strb	r2, [r3]
1179:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 8876              		.loc 1 1179 0 discriminator 3
 8877 15dc 97F84635 		ldrb	r3, [r7, #1350]	@ zero_extendqisi2
 8878 15e0 0133     		adds	r3, r3, #1
 8879 15e2 87F84635 		strb	r3, [r7, #1350]
 8880              	.L334:
1179:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 8881              		.loc 1 1179 0 is_stmt 0 discriminator 1
 8882 15e6 97F84625 		ldrb	r2, [r7, #1350]	@ zero_extendqisi2
 8883 15ea 97F84535 		ldrb	r3, [r7, #1349]	@ zero_extendqisi2
 8884 15ee 9A42     		cmp	r2, r3
 8885 15f0 D8D3     		bcc	.L335
1177:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 8886              		.loc 1 1177 0 is_stmt 1 discriminator 2
 8887 15f2 97F84735 		ldrb	r3, [r7, #1351]	@ zero_extendqisi2
 8888 15f6 0133     		adds	r3, r3, #1
 8889 15f8 87F84735 		strb	r3, [r7, #1351]
 8890              	.L333:
1177:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 8891              		.loc 1 1177 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 207


 8892 15fc 97F83A35 		ldrb	r3, [r7, #1338]	@ zero_extendqisi2
 8893 1600 07F54E72 		add	r2, r7, #824
 8894 1604 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8895 1606 97F84725 		ldrb	r2, [r7, #1351]	@ zero_extendqisi2
 8896 160a 9A42     		cmp	r2, r3
 8897 160c BAD3     		bcc	.L336
1183:..\src/command_processing.c ****                 case TYPE_INT32:
 8898              		.loc 1 1183 0 is_stmt 1
 8899 160e E6E0     		b	.L349
 8900              	.L318:
1185:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 8901              		.loc 1 1185 0
 8902 1610 0023     		movs	r3, #0
 8903 1612 87F84735 		strb	r3, [r7, #1351]
 8904 1616 3BE0     		b	.L337
 8905              	.L340:
1186:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 8906              		.loc 1 1186 0
 8907 1618 97F84735 		ldrb	r3, [r7, #1351]	@ zero_extendqisi2
 8908 161c 97F84525 		ldrb	r2, [r7, #1349]	@ zero_extendqisi2
 8909 1620 02FB03F3 		mul	r3, r2, r3
 8910 1624 0333     		adds	r3, r3, #3
 8911 1626 6C4A     		ldr	r2, .L364
 8912 1628 1344     		add	r3, r3, r2
 8913 162a 1B68     		ldr	r3, [r3]
 8914 162c C7F83035 		str	r3, [r7, #1328]
1187:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 8915              		.loc 1 1187 0
 8916 1630 0023     		movs	r3, #0
 8917 1632 87F84635 		strb	r3, [r7, #1350]
 8918 1636 20E0     		b	.L338
 8919              	.L339:
1188:..\src/command_processing.c ****                         }
 8920              		.loc 1 1188 0 discriminator 3
 8921 1638 97F83A25 		ldrb	r2, [r7, #1338]	@ zero_extendqisi2
 8922 163c 07F57873 		add	r3, r7, #992
 8923 1640 53F82220 		ldr	r2, [r3, r2, lsl #2]
 8924 1644 97F84735 		ldrb	r3, [r7, #1351]	@ zero_extendqisi2
 8925 1648 97F84515 		ldrb	r1, [r7, #1349]	@ zero_extendqisi2
 8926 164c 01FB03F3 		mul	r3, r1, r3
 8927 1650 1846     		mov	r0, r3
 8928 1652 97F84515 		ldrb	r1, [r7, #1349]	@ zero_extendqisi2
 8929 1656 97F84635 		ldrb	r3, [r7, #1350]	@ zero_extendqisi2
 8930 165a CB1A     		subs	r3, r1, r3
 8931 165c 0344     		add	r3, r3, r0
 8932 165e 013B     		subs	r3, r3, #1
 8933 1660 1344     		add	r3, r3, r2
 8934 1662 97F84625 		ldrb	r2, [r7, #1350]	@ zero_extendqisi2
 8935 1666 07F5A661 		add	r1, r7, #1328
 8936 166a 0A44     		add	r2, r2, r1
 8937 166c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8938 166e 1A70     		strb	r2, [r3]
1187:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 8939              		.loc 1 1187 0 discriminator 3
 8940 1670 97F84635 		ldrb	r3, [r7, #1350]	@ zero_extendqisi2
 8941 1674 0133     		adds	r3, r3, #1
 8942 1676 87F84635 		strb	r3, [r7, #1350]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 208


 8943              	.L338:
1187:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 8944              		.loc 1 1187 0 is_stmt 0 discriminator 1
 8945 167a 97F84625 		ldrb	r2, [r7, #1350]	@ zero_extendqisi2
 8946 167e 97F84535 		ldrb	r3, [r7, #1349]	@ zero_extendqisi2
 8947 1682 9A42     		cmp	r2, r3
 8948 1684 D8D3     		bcc	.L339
1185:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 8949              		.loc 1 1185 0 is_stmt 1 discriminator 2
 8950 1686 97F84735 		ldrb	r3, [r7, #1351]	@ zero_extendqisi2
 8951 168a 0133     		adds	r3, r3, #1
 8952 168c 87F84735 		strb	r3, [r7, #1351]
 8953              	.L337:
1185:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 8954              		.loc 1 1185 0 is_stmt 0 discriminator 1
 8955 1690 97F83A35 		ldrb	r3, [r7, #1338]	@ zero_extendqisi2
 8956 1694 07F54E72 		add	r2, r7, #824
 8957 1698 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8958 169a 97F84725 		ldrb	r2, [r7, #1351]	@ zero_extendqisi2
 8959 169e 9A42     		cmp	r2, r3
 8960 16a0 BAD3     		bcc	.L340
1191:..\src/command_processing.c ****                 case TYPE_UINT32:
 8961              		.loc 1 1191 0 is_stmt 1
 8962 16a2 9CE0     		b	.L349
 8963              	.L319:
1193:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 8964              		.loc 1 1193 0
 8965 16a4 0023     		movs	r3, #0
 8966 16a6 87F84735 		strb	r3, [r7, #1351]
 8967 16aa 3BE0     		b	.L341
 8968              	.L344:
1194:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 8969              		.loc 1 1194 0
 8970 16ac 97F84735 		ldrb	r3, [r7, #1351]	@ zero_extendqisi2
 8971 16b0 97F84525 		ldrb	r2, [r7, #1349]	@ zero_extendqisi2
 8972 16b4 02FB03F3 		mul	r3, r2, r3
 8973 16b8 0333     		adds	r3, r3, #3
 8974 16ba 474A     		ldr	r2, .L364
 8975 16bc 1344     		add	r3, r3, r2
 8976 16be 1B68     		ldr	r3, [r3]
 8977 16c0 C7F82C35 		str	r3, [r7, #1324]
1195:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 8978              		.loc 1 1195 0
 8979 16c4 0023     		movs	r3, #0
 8980 16c6 87F84635 		strb	r3, [r7, #1350]
 8981 16ca 20E0     		b	.L342
 8982              	.L343:
1196:..\src/command_processing.c ****                         }
 8983              		.loc 1 1196 0 discriminator 3
 8984 16cc 97F83A25 		ldrb	r2, [r7, #1338]	@ zero_extendqisi2
 8985 16d0 07F57873 		add	r3, r7, #992
 8986 16d4 53F82220 		ldr	r2, [r3, r2, lsl #2]
 8987 16d8 97F84735 		ldrb	r3, [r7, #1351]	@ zero_extendqisi2
 8988 16dc 97F84515 		ldrb	r1, [r7, #1349]	@ zero_extendqisi2
 8989 16e0 01FB03F3 		mul	r3, r1, r3
 8990 16e4 1846     		mov	r0, r3
 8991 16e6 97F84515 		ldrb	r1, [r7, #1349]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 209


 8992 16ea 97F84635 		ldrb	r3, [r7, #1350]	@ zero_extendqisi2
 8993 16ee CB1A     		subs	r3, r1, r3
 8994 16f0 0344     		add	r3, r3, r0
 8995 16f2 013B     		subs	r3, r3, #1
 8996 16f4 1344     		add	r3, r3, r2
 8997 16f6 97F84625 		ldrb	r2, [r7, #1350]	@ zero_extendqisi2
 8998 16fa 07F22C51 		addw	r1, r7, #1324
 8999 16fe 0A44     		add	r2, r2, r1
 9000 1700 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9001 1702 1A70     		strb	r2, [r3]
1195:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 9002              		.loc 1 1195 0 discriminator 3
 9003 1704 97F84635 		ldrb	r3, [r7, #1350]	@ zero_extendqisi2
 9004 1708 0133     		adds	r3, r3, #1
 9005 170a 87F84635 		strb	r3, [r7, #1350]
 9006              	.L342:
1195:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 9007              		.loc 1 1195 0 is_stmt 0 discriminator 1
 9008 170e 97F84625 		ldrb	r2, [r7, #1350]	@ zero_extendqisi2
 9009 1712 97F84535 		ldrb	r3, [r7, #1349]	@ zero_extendqisi2
 9010 1716 9A42     		cmp	r2, r3
 9011 1718 D8D3     		bcc	.L343
1193:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 9012              		.loc 1 1193 0 is_stmt 1 discriminator 2
 9013 171a 97F84735 		ldrb	r3, [r7, #1351]	@ zero_extendqisi2
 9014 171e 0133     		adds	r3, r3, #1
 9015 1720 87F84735 		strb	r3, [r7, #1351]
 9016              	.L341:
1193:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 9017              		.loc 1 1193 0 is_stmt 0 discriminator 1
 9018 1724 97F83A35 		ldrb	r3, [r7, #1338]	@ zero_extendqisi2
 9019 1728 07F54E72 		add	r2, r7, #824
 9020 172c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9021 172e 97F84725 		ldrb	r2, [r7, #1351]	@ zero_extendqisi2
 9022 1732 9A42     		cmp	r2, r3
 9023 1734 BAD3     		bcc	.L344
1199:..\src/command_processing.c ****                 case TYPE_FLOAT:
 9024              		.loc 1 1199 0 is_stmt 1
 9025 1736 52E0     		b	.L349
 9026              	.L320:
1201:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 9027              		.loc 1 1201 0
 9028 1738 0023     		movs	r3, #0
 9029 173a 87F84735 		strb	r3, [r7, #1351]
 9030 173e 3BE0     		b	.L345
 9031              	.L348:
1202:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9032              		.loc 1 1202 0
 9033 1740 97F84735 		ldrb	r3, [r7, #1351]	@ zero_extendqisi2
 9034 1744 97F84525 		ldrb	r2, [r7, #1349]	@ zero_extendqisi2
 9035 1748 02FB03F3 		mul	r3, r2, r3
 9036 174c 0333     		adds	r3, r3, #3
 9037 174e 224A     		ldr	r2, .L364
 9038 1750 1344     		add	r3, r3, r2
 9039 1752 1B68     		ldr	r3, [r3]	@ float
 9040 1754 C7F82835 		str	r3, [r7, #1320]	@ float
1203:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 210


 9041              		.loc 1 1203 0
 9042 1758 0023     		movs	r3, #0
 9043 175a 87F84635 		strb	r3, [r7, #1350]
 9044 175e 20E0     		b	.L346
 9045              	.L347:
1204:..\src/command_processing.c ****                         }
 9046              		.loc 1 1204 0 discriminator 3
 9047 1760 97F83A25 		ldrb	r2, [r7, #1338]	@ zero_extendqisi2
 9048 1764 07F57873 		add	r3, r7, #992
 9049 1768 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9050 176c 97F84735 		ldrb	r3, [r7, #1351]	@ zero_extendqisi2
 9051 1770 97F84515 		ldrb	r1, [r7, #1349]	@ zero_extendqisi2
 9052 1774 01FB03F3 		mul	r3, r1, r3
 9053 1778 1846     		mov	r0, r3
 9054 177a 97F84515 		ldrb	r1, [r7, #1349]	@ zero_extendqisi2
 9055 177e 97F84635 		ldrb	r3, [r7, #1350]	@ zero_extendqisi2
 9056 1782 CB1A     		subs	r3, r1, r3
 9057 1784 0344     		add	r3, r3, r0
 9058 1786 013B     		subs	r3, r3, #1
 9059 1788 1344     		add	r3, r3, r2
 9060 178a 97F84625 		ldrb	r2, [r7, #1350]	@ zero_extendqisi2
 9061 178e 07F5A561 		add	r1, r7, #1320
 9062 1792 0A44     		add	r2, r2, r1
 9063 1794 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9064 1796 1A70     		strb	r2, [r3]
1203:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 9065              		.loc 1 1203 0 discriminator 3
 9066 1798 97F84635 		ldrb	r3, [r7, #1350]	@ zero_extendqisi2
 9067 179c 0133     		adds	r3, r3, #1
 9068 179e 87F84635 		strb	r3, [r7, #1350]
 9069              	.L346:
1203:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 9070              		.loc 1 1203 0 is_stmt 0 discriminator 1
 9071 17a2 97F84625 		ldrb	r2, [r7, #1350]	@ zero_extendqisi2
 9072 17a6 97F84535 		ldrb	r3, [r7, #1349]	@ zero_extendqisi2
 9073 17aa 9A42     		cmp	r2, r3
 9074 17ac D8D3     		bcc	.L347
1201:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 9075              		.loc 1 1201 0 is_stmt 1 discriminator 2
 9076 17ae 97F84735 		ldrb	r3, [r7, #1351]	@ zero_extendqisi2
 9077 17b2 0133     		adds	r3, r3, #1
 9078 17b4 87F84735 		strb	r3, [r7, #1351]
 9079              	.L345:
1201:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 9080              		.loc 1 1201 0 is_stmt 0 discriminator 1
 9081 17b8 97F83A35 		ldrb	r3, [r7, #1338]	@ zero_extendqisi2
 9082 17bc 07F54E72 		add	r2, r7, #824
 9083 17c0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9084 17c2 97F84725 		ldrb	r2, [r7, #1351]	@ zero_extendqisi2
 9085 17c6 9A42     		cmp	r2, r3
 9086 17c8 BAD3     		bcc	.L348
1207:..\src/command_processing.c ****                 default:
 9087              		.loc 1 1207 0 is_stmt 1
 9088 17ca 08E0     		b	.L349
 9089              	.L311:
1214:..\src/command_processing.c ****         }
 9090              		.loc 1 1214 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 211


 9091 17cc BB1D     		adds	r3, r7, #6
 9092 17ce 1B88     		ldrh	r3, [r3]
 9093 17d0 1846     		mov	r0, r3
 9094 17d2 FFF7FEFF 		bl	set_custom_param
 9095 17d6 02E0     		b	.L349
 9096              	.L365:
 9097              		.align	2
 9098              	.L364:
 9099 17d8 00000000 		.word	g_rx
 9100              	.L354:
1209:..\src/command_processing.c ****             }
 9101              		.loc 1 1209 0
 9102 17dc 00BF     		nop
 9103              	.L349:
1218:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
 9104              		.loc 1 1218 0
 9105 17de 97F83B35 		ldrb	r3, [r7, #1339]	@ zero_extendqisi2
 9106 17e2 9BB2     		uxth	r3, r3
 9107 17e4 BA1D     		adds	r2, r7, #6
 9108 17e6 1288     		ldrh	r2, [r2]
 9109 17e8 9A42     		cmp	r2, r3
 9110 17ea 11D0     		beq	.L350
1219:..\src/command_processing.c ****         }
 9111              		.loc 1 1219 0
 9112 17ec D7F84035 		ldr	r3, [r7, #1344]
 9113 17f0 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 9114 17f4 5B01     		lsls	r3, r3, #5
 9115 17f6 03F51273 		add	r3, r3, #584
 9116 17fa D7F84025 		ldr	r2, [r7, #1344]
 9117 17fe D018     		adds	r0, r2, r3
 9118 1800 D7F84035 		ldr	r3, [r7, #1344]
 9119 1804 03F5F873 		add	r3, r3, #496
 9120 1808 1022     		movs	r2, #16
 9121 180a 1946     		mov	r1, r3
 9122 180c FFF7FEFF 		bl	memcpy
 9123              	.L350:
1223:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
 9124              		.loc 1 1223 0
 9125 1810 97F83A35 		ldrb	r3, [r7, #1338]	@ zero_extendqisi2
 9126 1814 07F56372 		add	r2, r7, #908
 9127 1818 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9128 181a 002B     		cmp	r3, #0
 9129 181c 42D1     		bne	.L355
 9130              	.LBB14:
1224:..\src/command_processing.c ****             do {
 9131              		.loc 1 1224 0
 9132 181e 0023     		movs	r3, #0
 9133 1820 87F83F35 		strb	r3, [r7, #1343]
 9134 1824 FF23     		movs	r3, #255
 9135 1826 87F83E35 		strb	r3, [r7, #1342]
 9136              	.L352:
1226:..\src/command_processing.c ****                 idx++;
 9137              		.loc 1 1226 0
 9138 182a 97F83F35 		ldrb	r3, [r7, #1343]	@ zero_extendqisi2
 9139 182e 07F56372 		add	r2, r7, #908
 9140 1832 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9141 1834 002B     		cmp	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 212


 9142 1836 04D1     		bne	.L351
1226:..\src/command_processing.c ****                 idx++;
 9143              		.loc 1 1226 0 is_stmt 0 discriminator 1
 9144 1838 97F83E35 		ldrb	r3, [r7, #1342]	@ zero_extendqisi2
 9145 183c 0133     		adds	r3, r3, #1
 9146 183e 87F83E35 		strb	r3, [r7, #1342]
 9147              	.L351:
1227:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
 9148              		.loc 1 1227 0 is_stmt 1
 9149 1842 97F83F35 		ldrb	r3, [r7, #1343]	@ zero_extendqisi2
 9150 1846 0133     		adds	r3, r3, #1
 9151 1848 87F83F35 		strb	r3, [r7, #1343]
1228:..\src/command_processing.c ****             
 9152              		.loc 1 1228 0
 9153 184c 97F83F25 		ldrb	r2, [r7, #1343]	@ zero_extendqisi2
 9154 1850 97F83A35 		ldrb	r3, [r7, #1338]	@ zero_extendqisi2
 9155 1854 9A42     		cmp	r2, r3
 9156 1856 E8D9     		bls	.L352
1230:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9157              		.loc 1 1230 0
 9158 1858 97F83E35 		ldrb	r3, [r7, #1342]	@ zero_extendqisi2
 9159 185c 07F1D402 		add	r2, r7, #212
 9160 1860 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9161 1862 052B     		cmp	r3, #5
 9162 1864 1BD0     		beq	.L353
1230:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9163              		.loc 1 1230 0 is_stmt 0 discriminator 1
 9164 1866 97F83E35 		ldrb	r3, [r7, #1342]	@ zero_extendqisi2
 9165 186a 07F1D402 		add	r2, r7, #212
 9166 186e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9167 1870 062B     		cmp	r3, #6
 9168 1872 14D0     		beq	.L353
1230:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9169              		.loc 1 1230 0 discriminator 2
 9170 1874 97F83E35 		ldrb	r3, [r7, #1342]	@ zero_extendqisi2
 9171 1878 07F1D402 		add	r2, r7, #212
 9172 187c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9173 187e 082B     		cmp	r3, #8
 9174 1880 0DD0     		beq	.L353
1230:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9175              		.loc 1 1230 0 discriminator 3
 9176 1882 97F83E35 		ldrb	r3, [r7, #1342]	@ zero_extendqisi2
 9177 1886 07F1D402 		add	r2, r7, #212
 9178 188a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9179 188c 092B     		cmp	r3, #9
 9180 188e 06D0     		beq	.L353
1230:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9181              		.loc 1 1230 0 discriminator 4
 9182 1890 97F83E35 		ldrb	r3, [r7, #1342]	@ zero_extendqisi2
 9183 1894 07F1D402 		add	r2, r7, #212
 9184 1898 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9185 189a 0A2B     		cmp	r3, #10
 9186 189c 02D1     		bne	.L355
 9187              	.L353:
1231:..\src/command_processing.c ****             }   
 9188              		.loc 1 1231 0 is_stmt 1
 9189 189e 044B     		ldr	r3, .L366
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 213


 9190 18a0 0122     		movs	r2, #1
 9191 18a2 1A70     		strb	r2, [r3]
 9192              	.L355:
 9193              	.LBE14:
 9194              		.loc 1 1235 0
 9195 18a4 00BF     		nop
 9196 18a6 07F5A967 		add	r7, r7, #1352
 9197              		.cfi_def_cfa_offset 16
 9198 18aa BD46     		mov	sp, r7
 9199              		.cfi_def_cfa_register 13
 9200              		@ sp needed
 9201 18ac B0BD     		pop	{r4, r5, r7, pc}
 9202              	.L367:
 9203 18ae 00BF     		.align	2
 9204              	.L366:
 9205 18b0 00000000 		.word	reset_PSoC_flag
 9206              		.cfi_endproc
 9207              	.LFE68:
 9208              		.size	manage_param_list, .-manage_param_list
 9209              		.global	__aeabi_fmul
 9210              		.global	__aeabi_f2iz
 9211              		.section	.text.set_custom_param,"ax",%progbits
 9212              		.align	2
 9213              		.global	set_custom_param
 9214              		.thumb
 9215              		.thumb_func
 9216              		.type	set_custom_param, %function
 9217              	set_custom_param:
 9218              	.LFB69:
1236:..\src/command_processing.c **** 
1237:..\src/command_processing.c **** //==============================================================================
1238:..\src/command_processing.c **** //                                                              SET CUSTOM PARAM
1239:..\src/command_processing.c **** //==============================================================================
1240:..\src/command_processing.c **** 
1241:..\src/command_processing.c **** void set_custom_param(uint16 index) {
 9219              		.loc 1 1241 0
 9220              		.cfi_startproc
 9221              		@ args = 0, pretend = 0, frame = 24
 9222              		@ frame_needed = 1, uses_anonymous_args = 0
 9223 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 9224              		.cfi_def_cfa_offset 20
 9225              		.cfi_offset 4, -20
 9226              		.cfi_offset 5, -16
 9227              		.cfi_offset 6, -12
 9228              		.cfi_offset 7, -8
 9229              		.cfi_offset 14, -4
 9230 0002 87B0     		sub	sp, sp, #28
 9231              		.cfi_def_cfa_offset 48
 9232 0004 00AF     		add	r7, sp, #0
 9233              		.cfi_def_cfa_register 7
 9234 0006 0346     		mov	r3, r0
 9235 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1242:..\src/command_processing.c **** 
1243:..\src/command_processing.c ****     uint8 CYDATA i, j;
1244:..\src/command_processing.c ****     uint8 aux_uchar;
1245:..\src/command_processing.c ****     float aux_float, aux_float2;
1246:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 214


1247:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 9236              		.loc 1 1247 0
 9237 000a 0023     		movs	r3, #0
 9238 000c 3B75     		strb	r3, [r7, #20]
1248:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 9239              		.loc 1 1248 0
 9240 000e 0123     		movs	r3, #1
 9241 0010 FB74     		strb	r3, [r7, #19]
1249:..\src/command_processing.c ****     
1250:..\src/command_processing.c ****     switch(index){
 9242              		.loc 1 1250 0
 9243 0012 FB88     		ldrh	r3, [r7, #6]
 9244 0014 023B     		subs	r3, r3, #2
 9245 0016 482B     		cmp	r3, #72
 9246 0018 01F22482 		bhi	.L461
 9247 001c 01A2     		adr	r2, .L371
 9248 001e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 9249 0022 00BF     		.p2align 2
 9250              	.L371:
 9251 0024 49010000 		.word	.L370+1
 9252 0028 7B030000 		.word	.L372+1
 9253 002c 65140000 		.word	.L461+1
 9254 0030 C1050000 		.word	.L373+1
 9255 0034 65140000 		.word	.L461+1
 9256 0038 65140000 		.word	.L461+1
 9257 003c 0B060000 		.word	.L374+1
 9258 0040 65140000 		.word	.L461+1
 9259 0044 65140000 		.word	.L461+1
 9260 0048 41070000 		.word	.L375+1
 9261 004c 65140000 		.word	.L461+1
 9262 0050 65140000 		.word	.L461+1
 9263 0054 65140000 		.word	.L461+1
 9264 0058 65140000 		.word	.L461+1
 9265 005c 65140000 		.word	.L461+1
 9266 0060 65140000 		.word	.L461+1
 9267 0064 65140000 		.word	.L461+1
 9268 0068 65140000 		.word	.L461+1
 9269 006c 65140000 		.word	.L461+1
 9270 0070 65140000 		.word	.L461+1
 9271 0074 65140000 		.word	.L461+1
 9272 0078 41080000 		.word	.L376+1
 9273 007c 9F080000 		.word	.L377+1
 9274 0080 65140000 		.word	.L461+1
 9275 0084 65140000 		.word	.L461+1
 9276 0088 65140000 		.word	.L461+1
 9277 008c D9080000 		.word	.L378+1
 9278 0090 65140000 		.word	.L461+1
 9279 0094 65140000 		.word	.L461+1
 9280 0098 550A0000 		.word	.L379+1
 9281 009c 010B0000 		.word	.L380+1
 9282 00a0 65140000 		.word	.L461+1
 9283 00a4 65140000 		.word	.L461+1
 9284 00a8 65140000 		.word	.L461+1
 9285 00ac 65140000 		.word	.L461+1
 9286 00b0 65140000 		.word	.L461+1
 9287 00b4 3B0B0000 		.word	.L381+1
 9288 00b8 65140000 		.word	.L461+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 215


 9289 00bc 65140000 		.word	.L461+1
 9290 00c0 65140000 		.word	.L461+1
 9291 00c4 65140000 		.word	.L461+1
 9292 00c8 65140000 		.word	.L461+1
 9293 00cc 750B0000 		.word	.L382+1
 9294 00d0 BB0D0000 		.word	.L383+1
 9295 00d4 65140000 		.word	.L461+1
 9296 00d8 E90F0000 		.word	.L384+1
 9297 00dc 65140000 		.word	.L461+1
 9298 00e0 65140000 		.word	.L461+1
 9299 00e4 51100000 		.word	.L385+1
 9300 00e8 65140000 		.word	.L461+1
 9301 00ec 65140000 		.word	.L461+1
 9302 00f0 65110000 		.word	.L386+1
 9303 00f4 65140000 		.word	.L461+1
 9304 00f8 65140000 		.word	.L461+1
 9305 00fc 65140000 		.word	.L461+1
 9306 0100 65140000 		.word	.L461+1
 9307 0104 65140000 		.word	.L461+1
 9308 0108 65140000 		.word	.L461+1
 9309 010c 65140000 		.word	.L461+1
 9310 0110 63120000 		.word	.L387+1
 9311 0114 65140000 		.word	.L461+1
 9312 0118 65140000 		.word	.L461+1
 9313 011c 65140000 		.word	.L461+1
 9314 0120 65140000 		.word	.L461+1
 9315 0124 65140000 		.word	.L461+1
 9316 0128 65140000 		.word	.L461+1
 9317 012c 65140000 		.word	.L461+1
 9318 0130 65140000 		.word	.L461+1
 9319 0134 65140000 		.word	.L461+1
 9320 0138 65140000 		.word	.L461+1
 9321 013c 65140000 		.word	.L461+1
 9322 0140 65140000 		.word	.L461+1
 9323 0144 AD120000 		.word	.L388+1
 9324              		.p2align 1
 9325              	.L370:
1251:..\src/command_processing.c ****         case 2:         // Position PID
1252:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 9326              		.loc 1 1252 0
 9327 0148 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9328 014a AB49     		ldr	r1, .L467
 9329 014c 1346     		mov	r3, r2
 9330 014e DB00     		lsls	r3, r3, #3
 9331 0150 9B1A     		subs	r3, r3, r2
 9332 0152 1B01     		lsls	r3, r3, #4
 9333 0154 0B44     		add	r3, r3, r1
 9334 0156 03F20F13 		addw	r3, r3, #271
 9335 015a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9336 015c 032B     		cmp	r3, #3
 9337 015e 00F08680 		beq	.L389
1253:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 9338              		.loc 1 1253 0
 9339 0162 A64B     		ldr	r3, .L467+4
 9340 0164 1B68     		ldr	r3, [r3]	@ float
 9341 0166 FB60     		str	r3, [r7, #12]	@ float
1254:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 216


 9342              		.loc 1 1254 0
 9343 0168 0023     		movs	r3, #0
 9344 016a BB75     		strb	r3, [r7, #22]
 9345 016c 0EE0     		b	.L390
 9346              	.L391:
1255:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9347              		.loc 1 1255 0 discriminator 3
 9348 016e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9349 0170 C3F10303 		rsb	r3, r3, #3
 9350 0174 07F10802 		add	r2, r7, #8
 9351 0178 1344     		add	r3, r3, r2
 9352 017a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9353 017c 07F10C01 		add	r1, r7, #12
 9354 0180 0A44     		add	r2, r2, r1
 9355 0182 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9356 0184 1A70     		strb	r2, [r3]
1254:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9357              		.loc 1 1254 0 discriminator 3
 9358 0186 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9359 0188 0133     		adds	r3, r3, #1
 9360 018a BB75     		strb	r3, [r7, #22]
 9361              	.L390:
1254:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9362              		.loc 1 1254 0 is_stmt 0 discriminator 1
 9363 018c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9364 018e 032B     		cmp	r3, #3
 9365 0190 EDD9     		bls	.L391
1256:..\src/command_processing.c ****                 }
1257:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p = aux_float2 * 65536;
 9366              		.loc 1 1257 0 is_stmt 1
 9367 0192 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9368 0194 BB68     		ldr	r3, [r7, #8]	@ float
 9369 0196 4FF08F41 		mov	r1, #1199570944
 9370 019a 1846     		mov	r0, r3
 9371 019c FFF7FEFF 		bl	__aeabi_fmul
 9372 01a0 0346     		mov	r3, r0
 9373 01a2 1846     		mov	r0, r3
 9374 01a4 FFF7FEFF 		bl	__aeabi_f2iz
 9375 01a8 0146     		mov	r1, r0
 9376 01aa 954A     		ldr	r2, .L467+8
 9377 01ac 2346     		mov	r3, r4
 9378 01ae DB00     		lsls	r3, r3, #3
 9379 01b0 1B1B     		subs	r3, r3, r4
 9380 01b2 1B01     		lsls	r3, r3, #4
 9381 01b4 1344     		add	r3, r3, r2
 9382 01b6 B033     		adds	r3, r3, #176
 9383 01b8 1960     		str	r1, [r3]
1258:..\src/command_processing.c ****                 
1259:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 9384              		.loc 1 1259 0
 9385 01ba 924B     		ldr	r3, .L467+12
 9386 01bc 1B68     		ldr	r3, [r3]	@ float
 9387 01be FB60     		str	r3, [r7, #12]	@ float
1260:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9388              		.loc 1 1260 0
 9389 01c0 0023     		movs	r3, #0
 9390 01c2 BB75     		strb	r3, [r7, #22]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 217


 9391 01c4 0EE0     		b	.L392
 9392              	.L393:
1261:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9393              		.loc 1 1261 0 discriminator 3
 9394 01c6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9395 01c8 C3F10303 		rsb	r3, r3, #3
 9396 01cc 07F10802 		add	r2, r7, #8
 9397 01d0 1344     		add	r3, r3, r2
 9398 01d2 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9399 01d4 07F10C01 		add	r1, r7, #12
 9400 01d8 0A44     		add	r2, r2, r1
 9401 01da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9402 01dc 1A70     		strb	r2, [r3]
1260:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9403              		.loc 1 1260 0 discriminator 3
 9404 01de BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9405 01e0 0133     		adds	r3, r3, #1
 9406 01e2 BB75     		strb	r3, [r7, #22]
 9407              	.L392:
1260:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9408              		.loc 1 1260 0 is_stmt 0 discriminator 1
 9409 01e4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9410 01e6 032B     		cmp	r3, #3
 9411 01e8 EDD9     		bls	.L393
1262:..\src/command_processing.c ****                 }
1263:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i = aux_float2 * 65536;
 9412              		.loc 1 1263 0 is_stmt 1
 9413 01ea 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9414 01ec BB68     		ldr	r3, [r7, #8]	@ float
 9415 01ee 4FF08F41 		mov	r1, #1199570944
 9416 01f2 1846     		mov	r0, r3
 9417 01f4 FFF7FEFF 		bl	__aeabi_fmul
 9418 01f8 0346     		mov	r3, r0
 9419 01fa 1846     		mov	r0, r3
 9420 01fc FFF7FEFF 		bl	__aeabi_f2iz
 9421 0200 0146     		mov	r1, r0
 9422 0202 7F4A     		ldr	r2, .L467+8
 9423 0204 2346     		mov	r3, r4
 9424 0206 DB00     		lsls	r3, r3, #3
 9425 0208 1B1B     		subs	r3, r3, r4
 9426 020a 1B01     		lsls	r3, r3, #4
 9427 020c 1344     		add	r3, r3, r2
 9428 020e B433     		adds	r3, r3, #180
 9429 0210 1960     		str	r1, [r3]
1264:..\src/command_processing.c ****                 
1265:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 9430              		.loc 1 1265 0
 9431 0212 7D4B     		ldr	r3, .L467+16
 9432 0214 1B68     		ldr	r3, [r3]	@ float
 9433 0216 FB60     		str	r3, [r7, #12]	@ float
1266:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9434              		.loc 1 1266 0
 9435 0218 0023     		movs	r3, #0
 9436 021a BB75     		strb	r3, [r7, #22]
 9437 021c 0EE0     		b	.L394
 9438              	.L395:
1267:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 218


 9439              		.loc 1 1267 0 discriminator 3
 9440 021e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9441 0220 C3F10303 		rsb	r3, r3, #3
 9442 0224 07F10802 		add	r2, r7, #8
 9443 0228 1344     		add	r3, r3, r2
 9444 022a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9445 022c 07F10C01 		add	r1, r7, #12
 9446 0230 0A44     		add	r2, r2, r1
 9447 0232 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9448 0234 1A70     		strb	r2, [r3]
1266:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9449              		.loc 1 1266 0 discriminator 3
 9450 0236 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9451 0238 0133     		adds	r3, r3, #1
 9452 023a BB75     		strb	r3, [r7, #22]
 9453              	.L394:
1266:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9454              		.loc 1 1266 0 is_stmt 0 discriminator 1
 9455 023c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9456 023e 032B     		cmp	r3, #3
 9457 0240 EDD9     		bls	.L395
1268:..\src/command_processing.c ****                 }
1269:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d = aux_float2 * 65536;
 9458              		.loc 1 1269 0 is_stmt 1
 9459 0242 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9460 0244 BB68     		ldr	r3, [r7, #8]	@ float
 9461 0246 4FF08F41 		mov	r1, #1199570944
 9462 024a 1846     		mov	r0, r3
 9463 024c FFF7FEFF 		bl	__aeabi_fmul
 9464 0250 0346     		mov	r3, r0
 9465 0252 1846     		mov	r0, r3
 9466 0254 FFF7FEFF 		bl	__aeabi_f2iz
 9467 0258 0146     		mov	r1, r0
 9468 025a 694A     		ldr	r2, .L467+8
 9469 025c 2346     		mov	r3, r4
 9470 025e DB00     		lsls	r3, r3, #3
 9471 0260 1B1B     		subs	r3, r3, r4
 9472 0262 1B01     		lsls	r3, r3, #4
 9473 0264 1344     		add	r3, r3, r2
 9474 0266 B833     		adds	r3, r3, #184
 9475 0268 1960     		str	r1, [r3]
1270:..\src/command_processing.c ****             }
1271:..\src/command_processing.c ****             else {
1272:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1273:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1274:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1275:..\src/command_processing.c ****                 }
1276:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1277:..\src/command_processing.c ****                 
1278:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1279:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1280:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1281:..\src/command_processing.c ****                 }
1282:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1283:..\src/command_processing.c ****                 
1284:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1285:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 219


1286:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1287:..\src/command_processing.c ****                 }
1288:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1289:..\src/command_processing.c ****             }
1290:..\src/command_processing.c ****             break;
 9476              		.loc 1 1290 0
 9477 026a 01F006B9 		b	.L403
 9478              	.L389:
1272:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9479              		.loc 1 1272 0
 9480 026e 634B     		ldr	r3, .L467+4
 9481 0270 1B68     		ldr	r3, [r3]	@ float
 9482 0272 FB60     		str	r3, [r7, #12]	@ float
1273:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9483              		.loc 1 1273 0
 9484 0274 0023     		movs	r3, #0
 9485 0276 BB75     		strb	r3, [r7, #22]
 9486 0278 0EE0     		b	.L397
 9487              	.L398:
1274:..\src/command_processing.c ****                 }
 9488              		.loc 1 1274 0 discriminator 3
 9489 027a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9490 027c C3F10303 		rsb	r3, r3, #3
 9491 0280 07F10802 		add	r2, r7, #8
 9492 0284 1344     		add	r3, r3, r2
 9493 0286 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9494 0288 07F10C01 		add	r1, r7, #12
 9495 028c 0A44     		add	r2, r2, r1
 9496 028e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9497 0290 1A70     		strb	r2, [r3]
1273:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9498              		.loc 1 1273 0 discriminator 3
 9499 0292 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9500 0294 0133     		adds	r3, r3, #1
 9501 0296 BB75     		strb	r3, [r7, #22]
 9502              	.L397:
1273:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9503              		.loc 1 1273 0 is_stmt 0 discriminator 1
 9504 0298 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9505 029a 032B     		cmp	r3, #3
 9506 029c EDD9     		bls	.L398
1276:..\src/command_processing.c ****                 
 9507              		.loc 1 1276 0 is_stmt 1
 9508 029e 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9509 02a0 BB68     		ldr	r3, [r7, #8]	@ float
 9510 02a2 4FF08F41 		mov	r1, #1199570944
 9511 02a6 1846     		mov	r0, r3
 9512 02a8 FFF7FEFF 		bl	__aeabi_fmul
 9513 02ac 0346     		mov	r3, r0
 9514 02ae 1846     		mov	r0, r3
 9515 02b0 FFF7FEFF 		bl	__aeabi_f2iz
 9516 02b4 0146     		mov	r1, r0
 9517 02b6 524A     		ldr	r2, .L467+8
 9518 02b8 2346     		mov	r3, r4
 9519 02ba DB00     		lsls	r3, r3, #3
 9520 02bc 1B1B     		subs	r3, r3, r4
 9521 02be 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 220


 9522 02c0 1344     		add	r3, r3, r2
 9523 02c2 C833     		adds	r3, r3, #200
 9524 02c4 1960     		str	r1, [r3]
1278:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9525              		.loc 1 1278 0
 9526 02c6 4F4B     		ldr	r3, .L467+12
 9527 02c8 1B68     		ldr	r3, [r3]	@ float
 9528 02ca FB60     		str	r3, [r7, #12]	@ float
1279:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9529              		.loc 1 1279 0
 9530 02cc 0023     		movs	r3, #0
 9531 02ce BB75     		strb	r3, [r7, #22]
 9532 02d0 0EE0     		b	.L399
 9533              	.L400:
1280:..\src/command_processing.c ****                 }
 9534              		.loc 1 1280 0 discriminator 3
 9535 02d2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9536 02d4 C3F10303 		rsb	r3, r3, #3
 9537 02d8 07F10802 		add	r2, r7, #8
 9538 02dc 1344     		add	r3, r3, r2
 9539 02de BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9540 02e0 07F10C01 		add	r1, r7, #12
 9541 02e4 0A44     		add	r2, r2, r1
 9542 02e6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9543 02e8 1A70     		strb	r2, [r3]
1279:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9544              		.loc 1 1279 0 discriminator 3
 9545 02ea BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9546 02ec 0133     		adds	r3, r3, #1
 9547 02ee BB75     		strb	r3, [r7, #22]
 9548              	.L399:
1279:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9549              		.loc 1 1279 0 is_stmt 0 discriminator 1
 9550 02f0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9551 02f2 032B     		cmp	r3, #3
 9552 02f4 EDD9     		bls	.L400
1282:..\src/command_processing.c ****                 
 9553              		.loc 1 1282 0 is_stmt 1
 9554 02f6 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9555 02f8 BB68     		ldr	r3, [r7, #8]	@ float
 9556 02fa 4FF08F41 		mov	r1, #1199570944
 9557 02fe 1846     		mov	r0, r3
 9558 0300 FFF7FEFF 		bl	__aeabi_fmul
 9559 0304 0346     		mov	r3, r0
 9560 0306 1846     		mov	r0, r3
 9561 0308 FFF7FEFF 		bl	__aeabi_f2iz
 9562 030c 0146     		mov	r1, r0
 9563 030e 3C4A     		ldr	r2, .L467+8
 9564 0310 2346     		mov	r3, r4
 9565 0312 DB00     		lsls	r3, r3, #3
 9566 0314 1B1B     		subs	r3, r3, r4
 9567 0316 1B01     		lsls	r3, r3, #4
 9568 0318 1344     		add	r3, r3, r2
 9569 031a CC33     		adds	r3, r3, #204
 9570 031c 1960     		str	r1, [r3]
1284:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9571              		.loc 1 1284 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 221


 9572 031e 3A4B     		ldr	r3, .L467+16
 9573 0320 1B68     		ldr	r3, [r3]	@ float
 9574 0322 FB60     		str	r3, [r7, #12]	@ float
1285:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9575              		.loc 1 1285 0
 9576 0324 0023     		movs	r3, #0
 9577 0326 BB75     		strb	r3, [r7, #22]
 9578 0328 0EE0     		b	.L401
 9579              	.L402:
1286:..\src/command_processing.c ****                 }
 9580              		.loc 1 1286 0 discriminator 3
 9581 032a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9582 032c C3F10303 		rsb	r3, r3, #3
 9583 0330 07F10802 		add	r2, r7, #8
 9584 0334 1344     		add	r3, r3, r2
 9585 0336 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9586 0338 07F10C01 		add	r1, r7, #12
 9587 033c 0A44     		add	r2, r2, r1
 9588 033e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9589 0340 1A70     		strb	r2, [r3]
1285:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9590              		.loc 1 1285 0 discriminator 3
 9591 0342 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9592 0344 0133     		adds	r3, r3, #1
 9593 0346 BB75     		strb	r3, [r7, #22]
 9594              	.L401:
1285:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9595              		.loc 1 1285 0 is_stmt 0 discriminator 1
 9596 0348 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9597 034a 032B     		cmp	r3, #3
 9598 034c EDD9     		bls	.L402
1288:..\src/command_processing.c ****             }
 9599              		.loc 1 1288 0 is_stmt 1
 9600 034e 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9601 0350 BB68     		ldr	r3, [r7, #8]	@ float
 9602 0352 4FF08F41 		mov	r1, #1199570944
 9603 0356 1846     		mov	r0, r3
 9604 0358 FFF7FEFF 		bl	__aeabi_fmul
 9605 035c 0346     		mov	r3, r0
 9606 035e 1846     		mov	r0, r3
 9607 0360 FFF7FEFF 		bl	__aeabi_f2iz
 9608 0364 0146     		mov	r1, r0
 9609 0366 264A     		ldr	r2, .L467+8
 9610 0368 2346     		mov	r3, r4
 9611 036a DB00     		lsls	r3, r3, #3
 9612 036c 1B1B     		subs	r3, r3, r4
 9613 036e 1B01     		lsls	r3, r3, #4
 9614 0370 1344     		add	r3, r3, r2
 9615 0372 D033     		adds	r3, r3, #208
 9616 0374 1960     		str	r1, [r3]
 9617              		.loc 1 1290 0
 9618 0376 01F080B8 		b	.L403
 9619              	.L372:
1291:..\src/command_processing.c ****             
1292:..\src/command_processing.c ****         case 3:         //Current PID
1293:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 9620              		.loc 1 1293 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 222


 9621 037a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9622 037c 1E49     		ldr	r1, .L467
 9623 037e 1346     		mov	r3, r2
 9624 0380 DB00     		lsls	r3, r3, #3
 9625 0382 9B1A     		subs	r3, r3, r2
 9626 0384 1B01     		lsls	r3, r3, #4
 9627 0386 0B44     		add	r3, r3, r1
 9628 0388 03F20F13 		addw	r3, r3, #271
 9629 038c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9630 038e 032B     		cmp	r3, #3
 9631 0390 00F09080 		beq	.L404
1294:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 9632              		.loc 1 1294 0
 9633 0394 194B     		ldr	r3, .L467+4
 9634 0396 1B68     		ldr	r3, [r3]	@ float
 9635 0398 FB60     		str	r3, [r7, #12]	@ float
1295:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9636              		.loc 1 1295 0
 9637 039a 0023     		movs	r3, #0
 9638 039c BB75     		strb	r3, [r7, #22]
 9639 039e 0EE0     		b	.L405
 9640              	.L406:
1296:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9641              		.loc 1 1296 0 discriminator 3
 9642 03a0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9643 03a2 C3F10303 		rsb	r3, r3, #3
 9644 03a6 07F10802 		add	r2, r7, #8
 9645 03aa 1344     		add	r3, r3, r2
 9646 03ac BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9647 03ae 07F10C01 		add	r1, r7, #12
 9648 03b2 0A44     		add	r2, r2, r1
 9649 03b4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9650 03b6 1A70     		strb	r2, [r3]
1295:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9651              		.loc 1 1295 0 discriminator 3
 9652 03b8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9653 03ba 0133     		adds	r3, r3, #1
 9654 03bc BB75     		strb	r3, [r7, #22]
 9655              	.L405:
1295:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9656              		.loc 1 1295 0 is_stmt 0 discriminator 1
 9657 03be BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9658 03c0 032B     		cmp	r3, #3
 9659 03c2 EDD9     		bls	.L406
1297:..\src/command_processing.c ****                 }
1298:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c = aux_float2 * 65536;
 9660              		.loc 1 1298 0 is_stmt 1
 9661 03c4 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9662 03c6 BB68     		ldr	r3, [r7, #8]	@ float
 9663 03c8 4FF08F41 		mov	r1, #1199570944
 9664 03cc 1846     		mov	r0, r3
 9665 03ce FFF7FEFF 		bl	__aeabi_fmul
 9666 03d2 0346     		mov	r3, r0
 9667 03d4 1846     		mov	r0, r3
 9668 03d6 FFF7FEFF 		bl	__aeabi_f2iz
 9669 03da 0146     		mov	r1, r0
 9670 03dc 084A     		ldr	r2, .L467+8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 223


 9671 03de 2346     		mov	r3, r4
 9672 03e0 DB00     		lsls	r3, r3, #3
 9673 03e2 1B1B     		subs	r3, r3, r4
 9674 03e4 1B01     		lsls	r3, r3, #4
 9675 03e6 1344     		add	r3, r3, r2
 9676 03e8 BC33     		adds	r3, r3, #188
 9677 03ea 1960     		str	r1, [r3]
1299:..\src/command_processing.c ****                 
1300:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 9678              		.loc 1 1300 0
 9679 03ec 054B     		ldr	r3, .L467+12
 9680 03ee 1B68     		ldr	r3, [r3]	@ float
 9681 03f0 FB60     		str	r3, [r7, #12]	@ float
1301:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9682              		.loc 1 1301 0
 9683 03f2 0023     		movs	r3, #0
 9684 03f4 BB75     		strb	r3, [r7, #22]
 9685 03f6 18E0     		b	.L407
 9686              	.L468:
 9687              		.align	2
 9688              	.L467:
 9689 03f8 00000000 		.word	c_mem
 9690 03fc 03000000 		.word	g_rx+3
 9691 0400 00000000 		.word	g_mem
 9692 0404 07000000 		.word	g_rx+7
 9693 0408 0B000000 		.word	g_rx+11
 9694              	.L408:
1302:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9695              		.loc 1 1302 0 discriminator 3
 9696 040c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9697 040e C3F10303 		rsb	r3, r3, #3
 9698 0412 07F10802 		add	r2, r7, #8
 9699 0416 1344     		add	r3, r3, r2
 9700 0418 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9701 041a 07F10C01 		add	r1, r7, #12
 9702 041e 0A44     		add	r2, r2, r1
 9703 0420 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9704 0422 1A70     		strb	r2, [r3]
1301:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9705              		.loc 1 1301 0 discriminator 3
 9706 0424 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9707 0426 0133     		adds	r3, r3, #1
 9708 0428 BB75     		strb	r3, [r7, #22]
 9709              	.L407:
1301:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9710              		.loc 1 1301 0 is_stmt 0 discriminator 1
 9711 042a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9712 042c 032B     		cmp	r3, #3
 9713 042e EDD9     		bls	.L408
1303:..\src/command_processing.c ****                 }
1304:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c = aux_float2 * 65536;
 9714              		.loc 1 1304 0 is_stmt 1
 9715 0430 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9716 0432 BB68     		ldr	r3, [r7, #8]	@ float
 9717 0434 4FF08F41 		mov	r1, #1199570944
 9718 0438 1846     		mov	r0, r3
 9719 043a FFF7FEFF 		bl	__aeabi_fmul
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 224


 9720 043e 0346     		mov	r3, r0
 9721 0440 1846     		mov	r0, r3
 9722 0442 FFF7FEFF 		bl	__aeabi_f2iz
 9723 0446 0146     		mov	r1, r0
 9724 0448 B54A     		ldr	r2, .L469
 9725 044a 2346     		mov	r3, r4
 9726 044c DB00     		lsls	r3, r3, #3
 9727 044e 1B1B     		subs	r3, r3, r4
 9728 0450 1B01     		lsls	r3, r3, #4
 9729 0452 1344     		add	r3, r3, r2
 9730 0454 C033     		adds	r3, r3, #192
 9731 0456 1960     		str	r1, [r3]
1305:..\src/command_processing.c ****                 
1306:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 9732              		.loc 1 1306 0
 9733 0458 B24B     		ldr	r3, .L469+4
 9734 045a 1B68     		ldr	r3, [r3]	@ float
 9735 045c FB60     		str	r3, [r7, #12]	@ float
1307:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9736              		.loc 1 1307 0
 9737 045e 0023     		movs	r3, #0
 9738 0460 BB75     		strb	r3, [r7, #22]
 9739 0462 0EE0     		b	.L409
 9740              	.L410:
1308:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9741              		.loc 1 1308 0 discriminator 3
 9742 0464 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9743 0466 C3F10303 		rsb	r3, r3, #3
 9744 046a 07F10802 		add	r2, r7, #8
 9745 046e 1344     		add	r3, r3, r2
 9746 0470 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9747 0472 07F10C01 		add	r1, r7, #12
 9748 0476 0A44     		add	r2, r2, r1
 9749 0478 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9750 047a 1A70     		strb	r2, [r3]
1307:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9751              		.loc 1 1307 0 discriminator 3
 9752 047c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9753 047e 0133     		adds	r3, r3, #1
 9754 0480 BB75     		strb	r3, [r7, #22]
 9755              	.L409:
1307:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9756              		.loc 1 1307 0 is_stmt 0 discriminator 1
 9757 0482 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9758 0484 032B     		cmp	r3, #3
 9759 0486 EDD9     		bls	.L410
1309:..\src/command_processing.c ****                 }
1310:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c = aux_float2 * 65536;
 9760              		.loc 1 1310 0 is_stmt 1
 9761 0488 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9762 048a BB68     		ldr	r3, [r7, #8]	@ float
 9763 048c 4FF08F41 		mov	r1, #1199570944
 9764 0490 1846     		mov	r0, r3
 9765 0492 FFF7FEFF 		bl	__aeabi_fmul
 9766 0496 0346     		mov	r3, r0
 9767 0498 1846     		mov	r0, r3
 9768 049a FFF7FEFF 		bl	__aeabi_f2iz
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 225


 9769 049e 0146     		mov	r1, r0
 9770 04a0 9F4A     		ldr	r2, .L469
 9771 04a2 2346     		mov	r3, r4
 9772 04a4 DB00     		lsls	r3, r3, #3
 9773 04a6 1B1B     		subs	r3, r3, r4
 9774 04a8 1B01     		lsls	r3, r3, #4
 9775 04aa 1344     		add	r3, r3, r2
 9776 04ac C433     		adds	r3, r3, #196
 9777 04ae 1960     		str	r1, [r3]
1311:..\src/command_processing.c ****             }
1312:..\src/command_processing.c ****             else {
1313:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1314:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1315:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1316:..\src/command_processing.c ****                 }
1317:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1318:..\src/command_processing.c ****                 
1319:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1320:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1321:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1322:..\src/command_processing.c ****                 }
1323:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1324:..\src/command_processing.c ****                 
1325:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1326:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1327:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1328:..\src/command_processing.c ****                 }
1329:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1330:..\src/command_processing.c ****             }            
1331:..\src/command_processing.c ****             break;  
 9778              		.loc 1 1331 0
 9779 04b0 00F0E3BF 		b	.L403
 9780              	.L404:
1313:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9781              		.loc 1 1313 0
 9782 04b4 9C4B     		ldr	r3, .L469+8
 9783 04b6 1B68     		ldr	r3, [r3]	@ float
 9784 04b8 FB60     		str	r3, [r7, #12]	@ float
1314:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9785              		.loc 1 1314 0
 9786 04ba 0023     		movs	r3, #0
 9787 04bc BB75     		strb	r3, [r7, #22]
 9788 04be 0EE0     		b	.L412
 9789              	.L413:
1315:..\src/command_processing.c ****                 }
 9790              		.loc 1 1315 0 discriminator 3
 9791 04c0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9792 04c2 C3F10303 		rsb	r3, r3, #3
 9793 04c6 07F10802 		add	r2, r7, #8
 9794 04ca 1344     		add	r3, r3, r2
 9795 04cc BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9796 04ce 07F10C01 		add	r1, r7, #12
 9797 04d2 0A44     		add	r2, r2, r1
 9798 04d4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9799 04d6 1A70     		strb	r2, [r3]
1314:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9800              		.loc 1 1314 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 226


 9801 04d8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9802 04da 0133     		adds	r3, r3, #1
 9803 04dc BB75     		strb	r3, [r7, #22]
 9804              	.L412:
1314:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9805              		.loc 1 1314 0 is_stmt 0 discriminator 1
 9806 04de BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9807 04e0 032B     		cmp	r3, #3
 9808 04e2 EDD9     		bls	.L413
1317:..\src/command_processing.c ****                 
 9809              		.loc 1 1317 0 is_stmt 1
 9810 04e4 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9811 04e6 BB68     		ldr	r3, [r7, #8]	@ float
 9812 04e8 4FF08F41 		mov	r1, #1199570944
 9813 04ec 1846     		mov	r0, r3
 9814 04ee FFF7FEFF 		bl	__aeabi_fmul
 9815 04f2 0346     		mov	r3, r0
 9816 04f4 1846     		mov	r0, r3
 9817 04f6 FFF7FEFF 		bl	__aeabi_f2iz
 9818 04fa 0146     		mov	r1, r0
 9819 04fc 884A     		ldr	r2, .L469
 9820 04fe 2346     		mov	r3, r4
 9821 0500 DB00     		lsls	r3, r3, #3
 9822 0502 1B1B     		subs	r3, r3, r4
 9823 0504 1B01     		lsls	r3, r3, #4
 9824 0506 1344     		add	r3, r3, r2
 9825 0508 D433     		adds	r3, r3, #212
 9826 050a 1960     		str	r1, [r3]
1319:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9827              		.loc 1 1319 0
 9828 050c 874B     		ldr	r3, .L469+12
 9829 050e 1B68     		ldr	r3, [r3]	@ float
 9830 0510 FB60     		str	r3, [r7, #12]	@ float
1320:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9831              		.loc 1 1320 0
 9832 0512 0023     		movs	r3, #0
 9833 0514 BB75     		strb	r3, [r7, #22]
 9834 0516 0EE0     		b	.L414
 9835              	.L415:
1321:..\src/command_processing.c ****                 }
 9836              		.loc 1 1321 0 discriminator 3
 9837 0518 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9838 051a C3F10303 		rsb	r3, r3, #3
 9839 051e 07F10802 		add	r2, r7, #8
 9840 0522 1344     		add	r3, r3, r2
 9841 0524 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9842 0526 07F10C01 		add	r1, r7, #12
 9843 052a 0A44     		add	r2, r2, r1
 9844 052c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9845 052e 1A70     		strb	r2, [r3]
1320:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9846              		.loc 1 1320 0 discriminator 3
 9847 0530 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9848 0532 0133     		adds	r3, r3, #1
 9849 0534 BB75     		strb	r3, [r7, #22]
 9850              	.L414:
1320:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 227


 9851              		.loc 1 1320 0 is_stmt 0 discriminator 1
 9852 0536 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9853 0538 032B     		cmp	r3, #3
 9854 053a EDD9     		bls	.L415
1323:..\src/command_processing.c ****                 
 9855              		.loc 1 1323 0 is_stmt 1
 9856 053c 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9857 053e BB68     		ldr	r3, [r7, #8]	@ float
 9858 0540 4FF08F41 		mov	r1, #1199570944
 9859 0544 1846     		mov	r0, r3
 9860 0546 FFF7FEFF 		bl	__aeabi_fmul
 9861 054a 0346     		mov	r3, r0
 9862 054c 1846     		mov	r0, r3
 9863 054e FFF7FEFF 		bl	__aeabi_f2iz
 9864 0552 0146     		mov	r1, r0
 9865 0554 724A     		ldr	r2, .L469
 9866 0556 2346     		mov	r3, r4
 9867 0558 DB00     		lsls	r3, r3, #3
 9868 055a 1B1B     		subs	r3, r3, r4
 9869 055c 1B01     		lsls	r3, r3, #4
 9870 055e 1344     		add	r3, r3, r2
 9871 0560 D833     		adds	r3, r3, #216
 9872 0562 1960     		str	r1, [r3]
1325:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9873              		.loc 1 1325 0
 9874 0564 6F4B     		ldr	r3, .L469+4
 9875 0566 1B68     		ldr	r3, [r3]	@ float
 9876 0568 FB60     		str	r3, [r7, #12]	@ float
1326:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9877              		.loc 1 1326 0
 9878 056a 0023     		movs	r3, #0
 9879 056c BB75     		strb	r3, [r7, #22]
 9880 056e 0EE0     		b	.L416
 9881              	.L417:
1327:..\src/command_processing.c ****                 }
 9882              		.loc 1 1327 0 discriminator 3
 9883 0570 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9884 0572 C3F10303 		rsb	r3, r3, #3
 9885 0576 07F10802 		add	r2, r7, #8
 9886 057a 1344     		add	r3, r3, r2
 9887 057c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9888 057e 07F10C01 		add	r1, r7, #12
 9889 0582 0A44     		add	r2, r2, r1
 9890 0584 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9891 0586 1A70     		strb	r2, [r3]
1326:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9892              		.loc 1 1326 0 discriminator 3
 9893 0588 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9894 058a 0133     		adds	r3, r3, #1
 9895 058c BB75     		strb	r3, [r7, #22]
 9896              	.L416:
1326:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9897              		.loc 1 1326 0 is_stmt 0 discriminator 1
 9898 058e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9899 0590 032B     		cmp	r3, #3
 9900 0592 EDD9     		bls	.L417
1329:..\src/command_processing.c ****             }            
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 228


 9901              		.loc 1 1329 0 is_stmt 1
 9902 0594 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9903 0596 BB68     		ldr	r3, [r7, #8]	@ float
 9904 0598 4FF08F41 		mov	r1, #1199570944
 9905 059c 1846     		mov	r0, r3
 9906 059e FFF7FEFF 		bl	__aeabi_fmul
 9907 05a2 0346     		mov	r3, r0
 9908 05a4 1846     		mov	r0, r3
 9909 05a6 FFF7FEFF 		bl	__aeabi_f2iz
 9910 05aa 0146     		mov	r1, r0
 9911 05ac 5C4A     		ldr	r2, .L469
 9912 05ae 2346     		mov	r3, r4
 9913 05b0 DB00     		lsls	r3, r3, #3
 9914 05b2 1B1B     		subs	r3, r3, r4
 9915 05b4 1B01     		lsls	r3, r3, #4
 9916 05b6 1344     		add	r3, r3, r2
 9917 05b8 DC33     		adds	r3, r3, #220
 9918 05ba 1960     		str	r1, [r3]
 9919              		.loc 1 1331 0
 9920 05bc 00F05DBF 		b	.L403
 9921              	.L373:
1332:..\src/command_processing.c ****             
1333:..\src/command_processing.c ****         case 5:         //Input mode
1334:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].input_mode = g_rx.buffer[3];
 9922              		.loc 1 1334 0
 9923 05c0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9924 05c2 5B4B     		ldr	r3, .L469+16
 9925 05c4 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 9926 05c6 5649     		ldr	r1, .L469
 9927 05c8 1346     		mov	r3, r2
 9928 05ca DB00     		lsls	r3, r3, #3
 9929 05cc 9B1A     		subs	r3, r3, r2
 9930 05ce 1B01     		lsls	r3, r3, #4
 9931 05d0 0B44     		add	r3, r3, r1
 9932 05d2 03F58773 		add	r3, r3, #270
 9933 05d6 0246     		mov	r2, r0
 9934 05d8 1A70     		strb	r2, [r3]
1335:..\src/command_processing.c ****             
1336:..\src/command_processing.c ****             // Hold the actual position
1337:..\src/command_processing.c ****             g_refNew[MOTOR_IDX].pos = g_meas[g_mem.motor[MOTOR_IDX].encoder_line].pos[0];
 9935              		.loc 1 1337 0
 9936 05da 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 9937 05dc 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9938 05de 5048     		ldr	r0, .L469
 9939 05e0 1346     		mov	r3, r2
 9940 05e2 DB00     		lsls	r3, r3, #3
 9941 05e4 9B1A     		subs	r3, r3, r2
 9942 05e6 1B01     		lsls	r3, r3, #4
 9943 05e8 0344     		add	r3, r3, r0
 9944 05ea 03F58873 		add	r3, r3, #272
 9945 05ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9946 05f0 1846     		mov	r0, r3
 9947 05f2 504A     		ldr	r2, .L469+20
 9948 05f4 3423     		movs	r3, #52
 9949 05f6 03FB00F3 		mul	r3, r3, r0
 9950 05fa 1344     		add	r3, r3, r2
 9951 05fc 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 229


 9952 05fe 4E48     		ldr	r0, .L469+24
 9953 0600 0B01     		lsls	r3, r1, #4
 9954 0602 0344     		add	r3, r3, r0
 9955 0604 1A60     		str	r2, [r3]
1338:..\src/command_processing.c ****             break;   
 9956              		.loc 1 1338 0
 9957 0606 00F038BF 		b	.L403
 9958              	.L374:
1339:..\src/command_processing.c **** 
1340:..\src/command_processing.c ****         case 8:         //Measurement Offset
1341:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
 9959              		.loc 1 1341 0
 9960 060a 0023     		movs	r3, #0
 9961 060c FB75     		strb	r3, [r7, #23]
 9962 060e 7EE0     		b	.L418
 9963              	.L419:
1342:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 9964              		.loc 1 1342 0 discriminator 3
 9965 0610 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9966 0612 4349     		ldr	r1, .L469
 9967 0614 1346     		mov	r3, r2
 9968 0616 DB00     		lsls	r3, r3, #3
 9969 0618 9B1A     		subs	r3, r3, r2
 9970 061a 1B01     		lsls	r3, r3, #4
 9971 061c 0B44     		add	r3, r3, r1
 9972 061e 03F58873 		add	r3, r3, #272
 9973 0622 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9974 0624 1C46     		mov	r4, r3
 9975 0626 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 9976 0628 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9977 062a 5B00     		lsls	r3, r3, #1
 9978 062c 0333     		adds	r3, r3, #3
 9979 062e 4049     		ldr	r1, .L469+16
 9980 0630 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 9981 0632 1B02     		lsls	r3, r3, #8
 9982 0634 19B2     		sxth	r1, r3
 9983 0636 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9984 0638 0233     		adds	r3, r3, #2
 9985 063a 5B00     		lsls	r3, r3, #1
 9986 063c 3C48     		ldr	r0, .L469+16
 9987 063e C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 9988 0640 1BB2     		sxth	r3, r3
 9989 0642 0B43     		orrs	r3, r3, r1
 9990 0644 1BB2     		sxth	r3, r3
 9991 0646 1846     		mov	r0, r3
 9992 0648 3549     		ldr	r1, .L469
 9993 064a 2346     		mov	r3, r4
 9994 064c 5B00     		lsls	r3, r3, #1
 9995 064e 2344     		add	r3, r3, r4
 9996 0650 9B00     		lsls	r3, r3, #2
 9997 0652 1344     		add	r3, r3, r2
 9998 0654 6633     		adds	r3, r3, #102
 9999 0656 41F82300 		str	r0, [r1, r3, lsl #2]
1343:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.motor[MOT
 10000              		.loc 1 1343 0 discriminator 3
 10001 065a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10002 065c 3049     		ldr	r1, .L469
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 230


 10003 065e 1346     		mov	r3, r2
 10004 0660 DB00     		lsls	r3, r3, #3
 10005 0662 9B1A     		subs	r3, r3, r2
 10006 0664 1B01     		lsls	r3, r3, #4
 10007 0666 0B44     		add	r3, r3, r1
 10008 0668 03F58873 		add	r3, r3, #272
 10009 066c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10010 066e 1D46     		mov	r5, r3
 10011 0670 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 10012 0672 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10013 0674 2A48     		ldr	r0, .L469
 10014 0676 1346     		mov	r3, r2
 10015 0678 DB00     		lsls	r3, r3, #3
 10016 067a 9B1A     		subs	r3, r3, r2
 10017 067c 1B01     		lsls	r3, r3, #4
 10018 067e 0344     		add	r3, r3, r0
 10019 0680 03F58873 		add	r3, r3, #272
 10020 0684 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10021 0686 1C46     		mov	r4, r3
 10022 0688 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10023 068a 2548     		ldr	r0, .L469
 10024 068c 2346     		mov	r3, r4
 10025 068e 5B00     		lsls	r3, r3, #1
 10026 0690 2344     		add	r3, r3, r4
 10027 0692 9B00     		lsls	r3, r3, #2
 10028 0694 1344     		add	r3, r3, r2
 10029 0696 6633     		adds	r3, r3, #102
 10030 0698 50F82300 		ldr	r0, [r0, r3, lsl #2]
 10031 069c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10032 069e 204C     		ldr	r4, .L469
 10033 06a0 1346     		mov	r3, r2
 10034 06a2 DB00     		lsls	r3, r3, #3
 10035 06a4 9B1A     		subs	r3, r3, r2
 10036 06a6 1B01     		lsls	r3, r3, #4
 10037 06a8 2344     		add	r3, r3, r4
 10038 06aa 03F58873 		add	r3, r3, #272
 10039 06ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10040 06b0 1E46     		mov	r6, r3
 10041 06b2 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10042 06b4 1A4C     		ldr	r4, .L469
 10043 06b6 3346     		mov	r3, r6
 10044 06b8 5B00     		lsls	r3, r3, #1
 10045 06ba 3344     		add	r3, r3, r6
 10046 06bc 1B01     		lsls	r3, r3, #4
 10047 06be 2344     		add	r3, r3, r4
 10048 06c0 1344     		add	r3, r3, r2
 10049 06c2 03F29513 		addw	r3, r3, #405
 10050 06c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10051 06c8 00FA03F2 		lsl	r2, r0, r3
 10052 06cc 1448     		ldr	r0, .L469
 10053 06ce 2B46     		mov	r3, r5
 10054 06d0 5B00     		lsls	r3, r3, #1
 10055 06d2 2B44     		add	r3, r3, r5
 10056 06d4 9B00     		lsls	r3, r3, #2
 10057 06d6 0B44     		add	r3, r3, r1
 10058 06d8 6633     		adds	r3, r3, #102
 10059 06da 40F82320 		str	r2, [r0, r3, lsl #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 231


1344:..\src/command_processing.c **** 
1345:..\src/command_processing.c ****                 g_meas[g_mem.motor[MOTOR_IDX].encoder_line].rot[i] = 0;
 10060              		.loc 1 1345 0 discriminator 3
 10061 06de 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10062 06e0 0F49     		ldr	r1, .L469
 10063 06e2 1346     		mov	r3, r2
 10064 06e4 DB00     		lsls	r3, r3, #3
 10065 06e6 9B1A     		subs	r3, r3, r2
 10066 06e8 1B01     		lsls	r3, r3, #4
 10067 06ea 0B44     		add	r3, r3, r1
 10068 06ec 03F58873 		add	r3, r3, #272
 10069 06f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10070 06f2 1846     		mov	r0, r3
 10071 06f4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10072 06f6 0F49     		ldr	r1, .L469+20
 10073 06f8 3422     		movs	r2, #52
 10074 06fa 02FB00F2 		mul	r2, r2, r0
 10075 06fe 0A44     		add	r2, r2, r1
 10076 0700 1344     		add	r3, r3, r2
 10077 0702 1833     		adds	r3, r3, #24
 10078 0704 0022     		movs	r2, #0
 10079 0706 1A70     		strb	r2, [r3]
1341:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 10080              		.loc 1 1341 0 discriminator 3
 10081 0708 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10082 070a 0133     		adds	r3, r3, #1
 10083 070c FB75     		strb	r3, [r7, #23]
 10084              	.L418:
1341:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 10085              		.loc 1 1341 0 is_stmt 0 discriminator 1
 10086 070e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10087 0710 022B     		cmp	r3, #2
 10088 0712 7FF67DAF 		bls	.L419
1346:..\src/command_processing.c ****             }
1347:..\src/command_processing.c ****             reset_last_value_flag = 1;
 10089              		.loc 1 1347 0 is_stmt 1
 10090 0716 094B     		ldr	r3, .L469+28
 10091 0718 0122     		movs	r2, #1
 10092 071a 1A70     		strb	r2, [r3]
1348:..\src/command_processing.c ****             break;
 10093              		.loc 1 1348 0
 10094 071c 00F0ADBE 		b	.L403
 10095              	.L470:
 10096              		.align	2
 10097              	.L469:
 10098 0720 00000000 		.word	g_mem
 10099 0724 0B000000 		.word	g_rx+11
 10100 0728 03000000 		.word	g_rx+3
 10101 072c 07000000 		.word	g_rx+7
 10102 0730 00000000 		.word	g_rx
 10103 0734 00000000 		.word	g_meas
 10104 0738 00000000 		.word	g_refNew
 10105 073c 00000000 		.word	reset_last_value_flag
 10106              	.L375:
1349:..\src/command_processing.c ****     
1350:..\src/command_processing.c ****         case 11:        //Position limits
1351:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 232


 10107              		.loc 1 1351 0
 10108 0740 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10109 0742 C14B     		ldr	r3, .L471
 10110 0744 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 10111 0746 1906     		lsls	r1, r3, #24
 10112 0748 BF4B     		ldr	r3, .L471
 10113 074a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 10114 074c 1B04     		lsls	r3, r3, #16
 10115 074e 1943     		orrs	r1, r1, r3
 10116 0750 BD4B     		ldr	r3, .L471
 10117 0752 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 10118 0754 1B02     		lsls	r3, r3, #8
 10119 0756 0B43     		orrs	r3, r3, r1
 10120 0758 BB49     		ldr	r1, .L471
 10121 075a 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 10122 075c 1943     		orrs	r1, r1, r3
 10123 075e BB48     		ldr	r0, .L471+4
 10124 0760 1346     		mov	r3, r2
 10125 0762 DB00     		lsls	r3, r3, #3
 10126 0764 9B1A     		subs	r3, r3, r2
 10127 0766 1B01     		lsls	r3, r3, #4
 10128 0768 0344     		add	r3, r3, r0
 10129 076a E433     		adds	r3, r3, #228
 10130 076c 1960     		str	r1, [r3]
1352:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]<<16 | 
 10131              		.loc 1 1352 0
 10132 076e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10133 0770 B54B     		ldr	r3, .L471
 10134 0772 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 10135 0774 1906     		lsls	r1, r3, #24
 10136 0776 B44B     		ldr	r3, .L471
 10137 0778 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 10138 077a 1B04     		lsls	r3, r3, #16
 10139 077c 1943     		orrs	r1, r1, r3
 10140 077e B24B     		ldr	r3, .L471
 10141 0780 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 10142 0782 1B02     		lsls	r3, r3, #8
 10143 0784 0B43     		orrs	r3, r3, r1
 10144 0786 B049     		ldr	r1, .L471
 10145 0788 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 10146 078a 1943     		orrs	r1, r1, r3
 10147 078c AF48     		ldr	r0, .L471+4
 10148 078e 1346     		mov	r3, r2
 10149 0790 DB00     		lsls	r3, r3, #3
 10150 0792 9B1A     		subs	r3, r3, r2
 10151 0794 1B01     		lsls	r3, r3, #4
 10152 0796 0344     		add	r3, r3, r0
 10153 0798 E833     		adds	r3, r3, #232
 10154 079a 1960     		str	r1, [r3]
1353:..\src/command_processing.c **** 
1354:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = g_mem.motor[MOTOR_IDX].pos_lim_inf << g_mem.enc[g_
 10155              		.loc 1 1354 0
 10156 079c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10157 079e 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10158 07a0 AA48     		ldr	r0, .L471+4
 10159 07a2 0B46     		mov	r3, r1
 10160 07a4 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 233


 10161 07a6 5B1A     		subs	r3, r3, r1
 10162 07a8 1B01     		lsls	r3, r3, #4
 10163 07aa 0344     		add	r3, r3, r0
 10164 07ac E433     		adds	r3, r3, #228
 10165 07ae 1868     		ldr	r0, [r3]
 10166 07b0 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10167 07b2 A64C     		ldr	r4, .L471+4
 10168 07b4 0B46     		mov	r3, r1
 10169 07b6 DB00     		lsls	r3, r3, #3
 10170 07b8 5B1A     		subs	r3, r3, r1
 10171 07ba 1B01     		lsls	r3, r3, #4
 10172 07bc 2344     		add	r3, r3, r4
 10173 07be 03F58873 		add	r3, r3, #272
 10174 07c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10175 07c4 1C46     		mov	r4, r3
 10176 07c6 A149     		ldr	r1, .L471+4
 10177 07c8 2346     		mov	r3, r4
 10178 07ca 5B00     		lsls	r3, r3, #1
 10179 07cc 2344     		add	r3, r3, r4
 10180 07ce 1B01     		lsls	r3, r3, #4
 10181 07d0 0B44     		add	r3, r3, r1
 10182 07d2 03F29513 		addw	r3, r3, #405
 10183 07d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10184 07d8 00FA03F1 		lsl	r1, r0, r3
 10185 07dc 9B48     		ldr	r0, .L471+4
 10186 07de 1346     		mov	r3, r2
 10187 07e0 DB00     		lsls	r3, r3, #3
 10188 07e2 9B1A     		subs	r3, r3, r2
 10189 07e4 1B01     		lsls	r3, r3, #4
 10190 07e6 0344     		add	r3, r3, r0
 10191 07e8 E433     		adds	r3, r3, #228
 10192 07ea 1960     		str	r1, [r3]
1355:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = g_mem.motor[MOTOR_IDX].pos_lim_sup << g_mem.enc[g_
 10193              		.loc 1 1355 0
 10194 07ec 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10195 07ee 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10196 07f0 9648     		ldr	r0, .L471+4
 10197 07f2 0B46     		mov	r3, r1
 10198 07f4 DB00     		lsls	r3, r3, #3
 10199 07f6 5B1A     		subs	r3, r3, r1
 10200 07f8 1B01     		lsls	r3, r3, #4
 10201 07fa 0344     		add	r3, r3, r0
 10202 07fc E833     		adds	r3, r3, #232
 10203 07fe 1868     		ldr	r0, [r3]
 10204 0800 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10205 0802 924C     		ldr	r4, .L471+4
 10206 0804 0B46     		mov	r3, r1
 10207 0806 DB00     		lsls	r3, r3, #3
 10208 0808 5B1A     		subs	r3, r3, r1
 10209 080a 1B01     		lsls	r3, r3, #4
 10210 080c 2344     		add	r3, r3, r4
 10211 080e 03F58873 		add	r3, r3, #272
 10212 0812 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10213 0814 1C46     		mov	r4, r3
 10214 0816 8D49     		ldr	r1, .L471+4
 10215 0818 2346     		mov	r3, r4
 10216 081a 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 234


 10217 081c 2344     		add	r3, r3, r4
 10218 081e 1B01     		lsls	r3, r3, #4
 10219 0820 0B44     		add	r3, r3, r1
 10220 0822 03F29513 		addw	r3, r3, #405
 10221 0826 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10222 0828 00FA03F1 		lsl	r1, r0, r3
 10223 082c 8748     		ldr	r0, .L471+4
 10224 082e 1346     		mov	r3, r2
 10225 0830 DB00     		lsls	r3, r3, #3
 10226 0832 9B1A     		subs	r3, r3, r2
 10227 0834 1B01     		lsls	r3, r3, #4
 10228 0836 0344     		add	r3, r3, r0
 10229 0838 E833     		adds	r3, r3, #232
 10230 083a 1960     		str	r1, [r3]
1356:..\src/command_processing.c ****             break;            
 10231              		.loc 1 1356 0
 10232 083c 00F01DBE 		b	.L403
 10233              	.L376:
1357:..\src/command_processing.c **** 
1358:..\src/command_processing.c ****         case 23:        //Rest Position
1359:..\src/command_processing.c ****             g_mem.SH.rest_pos = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<8
 10234              		.loc 1 1359 0
 10235 0840 814B     		ldr	r3, .L471
 10236 0842 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 10237 0844 1A06     		lsls	r2, r3, #24
 10238 0846 804B     		ldr	r3, .L471
 10239 0848 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 10240 084a 1B04     		lsls	r3, r3, #16
 10241 084c 1A43     		orrs	r2, r2, r3
 10242 084e 7E4B     		ldr	r3, .L471
 10243 0850 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 10244 0852 1B02     		lsls	r3, r3, #8
 10245 0854 1343     		orrs	r3, r3, r2
 10246 0856 7C4A     		ldr	r2, .L471
 10247 0858 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 10248 085a 1343     		orrs	r3, r3, r2
 10249 085c 7B4A     		ldr	r2, .L471+4
 10250 085e C2F8A032 		str	r3, [r2, #672]
1360:..\src/command_processing.c ****             g_mem.SH.rest_pos = g_mem.SH.rest_pos << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line]
 10251              		.loc 1 1360 0
 10252 0862 7A4B     		ldr	r3, .L471+4
 10253 0864 D3F8A012 		ldr	r1, [r3, #672]
 10254 0868 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10255 086a 7848     		ldr	r0, .L471+4
 10256 086c 1346     		mov	r3, r2
 10257 086e DB00     		lsls	r3, r3, #3
 10258 0870 9B1A     		subs	r3, r3, r2
 10259 0872 1B01     		lsls	r3, r3, #4
 10260 0874 0344     		add	r3, r3, r0
 10261 0876 03F58873 		add	r3, r3, #272
 10262 087a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10263 087c 1846     		mov	r0, r3
 10264 087e 734A     		ldr	r2, .L471+4
 10265 0880 0346     		mov	r3, r0
 10266 0882 5B00     		lsls	r3, r3, #1
 10267 0884 0344     		add	r3, r3, r0
 10268 0886 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 235


 10269 0888 1344     		add	r3, r3, r2
 10270 088a 03F29513 		addw	r3, r3, #405
 10271 088e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10272 0890 01FA03F3 		lsl	r3, r1, r3
 10273 0894 6D4A     		ldr	r2, .L471+4
 10274 0896 C2F8A032 		str	r3, [r2, #672]
1361:..\src/command_processing.c ****             break; 
 10275              		.loc 1 1361 0
 10276 089a 00F0EEBD 		b	.L403
 10277              	.L377:
1362:..\src/command_processing.c ****             
1363:..\src/command_processing.c ****         case 24:        //Rest Position Time Delay
1364:..\src/command_processing.c ****            g_mem.SH.rest_delay = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<
 10278              		.loc 1 1364 0
 10279 089e 6A4B     		ldr	r3, .L471
 10280 08a0 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 10281 08a2 1A06     		lsls	r2, r3, #24
 10282 08a4 684B     		ldr	r3, .L471
 10283 08a6 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 10284 08a8 1B04     		lsls	r3, r3, #16
 10285 08aa 1A43     		orrs	r2, r2, r3
 10286 08ac 664B     		ldr	r3, .L471
 10287 08ae 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 10288 08b0 1B02     		lsls	r3, r3, #8
 10289 08b2 1343     		orrs	r3, r3, r2
 10290 08b4 644A     		ldr	r2, .L471
 10291 08b6 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 10292 08b8 1343     		orrs	r3, r3, r2
 10293 08ba 644A     		ldr	r2, .L471+4
 10294 08bc C2F8A432 		str	r3, [r2, #676]
1365:..\src/command_processing.c **** 		   if (g_mem.SH.rest_delay < 10) g_mem.SH.rest_delay = 10;
 10295              		.loc 1 1365 0
 10296 08c0 624B     		ldr	r3, .L471+4
 10297 08c2 D3F8A432 		ldr	r3, [r3, #676]
 10298 08c6 092B     		cmp	r3, #9
 10299 08c8 00F3CE85 		bgt	.L462
 10300              		.loc 1 1365 0 is_stmt 0 discriminator 1
 10301 08cc 5F4B     		ldr	r3, .L471+4
 10302 08ce 0A22     		movs	r2, #10
 10303 08d0 C3F8A422 		str	r2, [r3, #676]
1366:..\src/command_processing.c ****            break; 
 10304              		.loc 1 1366 0 is_stmt 1 discriminator 1
 10305 08d4 00F0C8BD 		b	.L462
 10306              	.L378:
1367:..\src/command_processing.c ****             
1368:..\src/command_processing.c ****         case 28:        //Right/Left hand flag
1369:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 10307              		.loc 1 1369 0
 10308 08d8 5B4B     		ldr	r3, .L471
 10309 08da DB78     		ldrb	r3, [r3, #3]
 10310 08dc BB74     		strb	r3, [r7, #18]
1370:..\src/command_processing.c ****             if (aux_uchar) {    // 1
 10311              		.loc 1 1370 0
 10312 08de BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10313 08e0 002B     		cmp	r3, #0
 10314 08e2 04D0     		beq	.L421
1371:..\src/command_processing.c ****                 g_mem.dev.right_left = LEFT_HAND;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 236


 10315              		.loc 1 1371 0
 10316 08e4 594B     		ldr	r3, .L471+4
 10317 08e6 0122     		movs	r2, #1
 10318 08e8 83F8A720 		strb	r2, [r3, #167]
 10319 08ec 03E0     		b	.L422
 10320              	.L421:
1372:..\src/command_processing.c ****             } else {            // 0
1373:..\src/command_processing.c ****                 g_mem.dev.right_left = RIGHT_HAND;
 10321              		.loc 1 1373 0
 10322 08ee 574B     		ldr	r3, .L471+4
 10323 08f0 0022     		movs	r2, #0
 10324 08f2 83F8A720 		strb	r2, [r3, #167]
 10325              	.L422:
1374:..\src/command_processing.c ****             }
1375:..\src/command_processing.c **** 			reset_last_value_flag = 1;
 10326              		.loc 1 1375 0
 10327 08f6 564B     		ldr	r3, .L471+8
 10328 08f8 0122     		movs	r2, #1
 10329 08fa 1A70     		strb	r2, [r3]
1376:..\src/command_processing.c **** 
1377:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    
 10330              		.loc 1 1377 0
 10331 08fc 534B     		ldr	r3, .L471+4
 10332 08fe 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 10333 0902 002B     		cmp	r3, #0
 10334 0904 40F0B285 		bne	.L463
1378:..\src/command_processing.c ****                 // Change also default encoder line (only with SoftHand FW)
1379:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line = g_mem.dev.right_left;
 10335              		.loc 1 1379 0
 10336 0908 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10337 090a 504B     		ldr	r3, .L471+4
 10338 090c 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 10339 0910 4E49     		ldr	r1, .L471+4
 10340 0912 1346     		mov	r3, r2
 10341 0914 DB00     		lsls	r3, r3, #3
 10342 0916 9B1A     		subs	r3, r3, r2
 10343 0918 1B01     		lsls	r3, r3, #4
 10344 091a 0B44     		add	r3, r3, r1
 10345 091c 03F58873 		add	r3, r3, #272
 10346 0920 0246     		mov	r2, r0
 10347 0922 1A70     		strb	r2, [r3]
1380:..\src/command_processing.c ****                 
1381:..\src/command_processing.c ****                 // Change also gears parameters
1382:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 10348              		.loc 1 1382 0
 10349 0924 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10350 0926 4949     		ldr	r1, .L471+4
 10351 0928 1346     		mov	r3, r2
 10352 092a DB00     		lsls	r3, r3, #3
 10353 092c 9B1A     		subs	r3, r3, r2
 10354 092e 1B01     		lsls	r3, r3, #4
 10355 0930 0B44     		add	r3, r3, r1
 10356 0932 03F58873 		add	r3, r3, #272
 10357 0936 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10358 0938 1946     		mov	r1, r3
 10359 093a 444A     		ldr	r2, .L471+4
 10360 093c 0B46     		mov	r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 237


 10361 093e 5B00     		lsls	r3, r3, #1
 10362 0940 0B44     		add	r3, r3, r1
 10363 0942 1B01     		lsls	r3, r3, #4
 10364 0944 1344     		add	r3, r3, r2
 10365 0946 03F5D873 		add	r3, r3, #432
 10366 094a 0122     		movs	r2, #1
 10367 094c 1A70     		strb	r2, [r3]
1383:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 10368              		.loc 1 1383 0
 10369 094e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10370 0950 3E49     		ldr	r1, .L471+4
 10371 0952 1346     		mov	r3, r2
 10372 0954 DB00     		lsls	r3, r3, #3
 10373 0956 9B1A     		subs	r3, r3, r2
 10374 0958 1B01     		lsls	r3, r3, #4
 10375 095a 0B44     		add	r3, r3, r1
 10376 095c 03F58873 		add	r3, r3, #272
 10377 0960 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10378 0962 1946     		mov	r1, r3
 10379 0964 394A     		ldr	r2, .L471+4
 10380 0966 0B46     		mov	r3, r1
 10381 0968 5B00     		lsls	r3, r3, #1
 10382 096a 0B44     		add	r3, r3, r1
 10383 096c 1B01     		lsls	r3, r3, #4
 10384 096e 1344     		add	r3, r3, r2
 10385 0970 03F2B513 		addw	r3, r3, #437
 10386 0974 2322     		movs	r2, #35
 10387 0976 1A70     		strb	r2, [r3]
1384:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 10388              		.loc 1 1384 0
 10389 0978 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10390 097a 3449     		ldr	r1, .L471+4
 10391 097c 1346     		mov	r3, r2
 10392 097e DB00     		lsls	r3, r3, #3
 10393 0980 9B1A     		subs	r3, r3, r2
 10394 0982 1B01     		lsls	r3, r3, #4
 10395 0984 0B44     		add	r3, r3, r1
 10396 0986 03F58873 		add	r3, r3, #272
 10397 098a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10398 098c 1946     		mov	r1, r3
 10399 098e 2F4A     		ldr	r2, .L471+4
 10400 0990 0B46     		mov	r3, r1
 10401 0992 5B00     		lsls	r3, r3, #1
 10402 0994 0B44     		add	r3, r3, r1
 10403 0996 1B01     		lsls	r3, r3, #4
 10404 0998 1344     		add	r3, r3, r2
 10405 099a 03F5DB73 		add	r3, r3, #438
 10406 099e 0322     		movs	r2, #3
 10407 09a0 1A70     		strb	r2, [r3]
1385:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 10408              		.loc 1 1385 0
 10409 09a2 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10410 09a4 2949     		ldr	r1, .L471+4
 10411 09a6 1346     		mov	r3, r2
 10412 09a8 DB00     		lsls	r3, r3, #3
 10413 09aa 9B1A     		subs	r3, r3, r2
 10414 09ac 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 238


 10415 09ae 0B44     		add	r3, r3, r1
 10416 09b0 03F58873 		add	r3, r3, #272
 10417 09b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10418 09b6 1946     		mov	r1, r3
 10419 09b8 244A     		ldr	r2, .L471+4
 10420 09ba 0B46     		mov	r3, r1
 10421 09bc 5B00     		lsls	r3, r3, #1
 10422 09be 0B44     		add	r3, r3, r1
 10423 09c0 1B01     		lsls	r3, r3, #4
 10424 09c2 1344     		add	r3, r3, r2
 10425 09c4 03F2B713 		addw	r3, r3, #439
 10426 09c8 FF22     		movs	r2, #255
 10427 09ca 1A70     		strb	r2, [r3]
1386:..\src/command_processing.c ****                 
1387:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1388:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 10428              		.loc 1 1388 0
 10429 09cc 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10430 09ce 1F49     		ldr	r1, .L471+4
 10431 09d0 1346     		mov	r3, r2
 10432 09d2 DB00     		lsls	r3, r3, #3
 10433 09d4 9B1A     		subs	r3, r3, r2
 10434 09d6 1B01     		lsls	r3, r3, #4
 10435 09d8 0B44     		add	r3, r3, r1
 10436 09da 03F21113 		addw	r3, r3, #273
 10437 09de 0122     		movs	r2, #1
 10438 09e0 1A70     		strb	r2, [r3]
1389:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 10439              		.loc 1 1389 0
 10440 09e2 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10441 09e4 1949     		ldr	r1, .L471+4
 10442 09e6 1346     		mov	r3, r2
 10443 09e8 DB00     		lsls	r3, r3, #3
 10444 09ea 9B1A     		subs	r3, r3, r2
 10445 09ec 1B01     		lsls	r3, r3, #4
 10446 09ee 0B44     		add	r3, r3, r1
 10447 09f0 03F58973 		add	r3, r3, #274
 10448 09f4 0122     		movs	r2, #1
 10449 09f6 1A70     		strb	r2, [r3]
1390:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 10450              		.loc 1 1390 0
 10451 09f8 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10452 09fa 1449     		ldr	r1, .L471+4
 10453 09fc 1346     		mov	r3, r2
 10454 09fe DB00     		lsls	r3, r3, #3
 10455 0a00 9B1A     		subs	r3, r3, r2
 10456 0a02 1B01     		lsls	r3, r3, #4
 10457 0a04 0B44     		add	r3, r3, r1
 10458 0a06 E433     		adds	r3, r3, #228
 10459 0a08 0022     		movs	r2, #0
 10460 0a0a 1A60     		str	r2, [r3]
1391:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[0].encod
 10461              		.loc 1 1391 0
 10462 0a0c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10463 0a0e 0F4B     		ldr	r3, .L471+4
 10464 0a10 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 10465 0a14 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 239


 10466 0a16 0D49     		ldr	r1, .L471+4
 10467 0a18 0346     		mov	r3, r0
 10468 0a1a 5B00     		lsls	r3, r3, #1
 10469 0a1c 0344     		add	r3, r3, r0
 10470 0a1e 1B01     		lsls	r3, r3, #4
 10471 0a20 0B44     		add	r3, r3, r1
 10472 0a22 03F29513 		addw	r3, r3, #405
 10473 0a26 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10474 0a28 1946     		mov	r1, r3
 10475 0a2a 4FF47A53 		mov	r3, #16000
 10476 0a2e 03FA01F1 		lsl	r1, r3, r1
 10477 0a32 0648     		ldr	r0, .L471+4
 10478 0a34 1346     		mov	r3, r2
 10479 0a36 DB00     		lsls	r3, r3, #3
 10480 0a38 9B1A     		subs	r3, r3, r2
 10481 0a3a 1B01     		lsls	r3, r3, #4
 10482 0a3c 0344     		add	r3, r3, r0
 10483 0a3e E833     		adds	r3, r3, #232
 10484 0a40 1960     		str	r1, [r3]
1392:..\src/command_processing.c ****             }    
1393:..\src/command_processing.c **** 
1394:..\src/command_processing.c ****             break; 
 10485              		.loc 1 1394 0
 10486 0a42 00F013BD 		b	.L463
 10487              	.L472:
 10488 0a46 00BF     		.align	2
 10489              	.L471:
 10490 0a48 00000000 		.word	g_rx
 10491 0a4c 00000000 		.word	g_mem
 10492 0a50 00000000 		.word	reset_last_value_flag
 10493              	.L379:
1395:..\src/command_processing.c **** 
1396:..\src/command_processing.c ****         case 31:        //Reset counters - uint8
1397:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 10494              		.loc 1 1397 0
 10495 0a54 A94B     		ldr	r3, .L473
 10496 0a56 DB78     		ldrb	r3, [r3, #3]
 10497 0a58 BB74     		strb	r3, [r7, #18]
1398:..\src/command_processing.c ****             if (aux_uchar) {
 10498              		.loc 1 1398 0
 10499 0a5a BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10500 0a5c 002B     		cmp	r3, #0
 10501 0a5e 05D0     		beq	.L424
1399:..\src/command_processing.c ****                 reset_counters();
 10502              		.loc 1 1399 0
 10503 0a60 FFF7FEFF 		bl	reset_counters
1400:..\src/command_processing.c ****                 g_mem.dev.reset_counters = FALSE;
 10504              		.loc 1 1400 0
 10505 0a64 A64B     		ldr	r3, .L473+4
 10506 0a66 0022     		movs	r2, #0
 10507 0a68 83F8A820 		strb	r2, [r3, #168]
 10508              	.L424:
1401:..\src/command_processing.c ****             }
1402:..\src/command_processing.c ****             
1403:..\src/command_processing.c ****             if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 10509              		.loc 1 1403 0
 10510 0a6c A54B     		ldr	r3, .L473+8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 240


 10511 0a6e 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 10512 0a72 012B     		cmp	r3, #1
 10513 0a74 40F0FC84 		bne	.L464
1404:..\src/command_processing.c ****                 // Set date of maintenance from RTC
1405:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_DATE_RD);
 10514              		.loc 1 1405 0
 10515 0a78 8720     		movs	r0, #135
 10516 0a7a FFF7FEFF 		bl	DS1302_read
 10517 0a7e 0346     		mov	r3, r0
 10518 0a80 BB74     		strb	r3, [r7, #18]
1406:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[0] = (aux_uchar/16) * 10 + aux_uchar%16;    //day
 10519              		.loc 1 1406 0
 10520 0a82 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10521 0a84 1B09     		lsrs	r3, r3, #4
 10522 0a86 DBB2     		uxtb	r3, r3
 10523 0a88 1A46     		mov	r2, r3
 10524 0a8a 9200     		lsls	r2, r2, #2
 10525 0a8c 1344     		add	r3, r3, r2
 10526 0a8e 5B00     		lsls	r3, r3, #1
 10527 0a90 DAB2     		uxtb	r2, r3
 10528 0a92 BB7C     		ldrb	r3, [r7, #18]
 10529 0a94 03F00F03 		and	r3, r3, #15
 10530 0a98 DBB2     		uxtb	r3, r3
 10531 0a9a 1344     		add	r3, r3, r2
 10532 0a9c DAB2     		uxtb	r2, r3
 10533 0a9e 984B     		ldr	r3, .L473+4
 10534 0aa0 83F8A420 		strb	r2, [r3, #164]
1407:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_MONTH_RD);
 10535              		.loc 1 1407 0
 10536 0aa4 8920     		movs	r0, #137
 10537 0aa6 FFF7FEFF 		bl	DS1302_read
 10538 0aaa 0346     		mov	r3, r0
 10539 0aac BB74     		strb	r3, [r7, #18]
1408:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[1] = (aux_uchar/16) * 10 + aux_uchar%16;    // mo
 10540              		.loc 1 1408 0
 10541 0aae BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10542 0ab0 1B09     		lsrs	r3, r3, #4
 10543 0ab2 DBB2     		uxtb	r3, r3
 10544 0ab4 1A46     		mov	r2, r3
 10545 0ab6 9200     		lsls	r2, r2, #2
 10546 0ab8 1344     		add	r3, r3, r2
 10547 0aba 5B00     		lsls	r3, r3, #1
 10548 0abc DAB2     		uxtb	r2, r3
 10549 0abe BB7C     		ldrb	r3, [r7, #18]
 10550 0ac0 03F00F03 		and	r3, r3, #15
 10551 0ac4 DBB2     		uxtb	r3, r3
 10552 0ac6 1344     		add	r3, r3, r2
 10553 0ac8 DAB2     		uxtb	r2, r3
 10554 0aca 8D4B     		ldr	r3, .L473+4
 10555 0acc 83F8A520 		strb	r2, [r3, #165]
1409:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_YEAR_RD);
 10556              		.loc 1 1409 0
 10557 0ad0 8D20     		movs	r0, #141
 10558 0ad2 FFF7FEFF 		bl	DS1302_read
 10559 0ad6 0346     		mov	r3, r0
 10560 0ad8 BB74     		strb	r3, [r7, #18]
1410:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[2] = (aux_uchar/16) * 10 + aux_uchar%16;         
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 241


 10561              		.loc 1 1410 0
 10562 0ada BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10563 0adc 1B09     		lsrs	r3, r3, #4
 10564 0ade DBB2     		uxtb	r3, r3
 10565 0ae0 1A46     		mov	r2, r3
 10566 0ae2 9200     		lsls	r2, r2, #2
 10567 0ae4 1344     		add	r3, r3, r2
 10568 0ae6 5B00     		lsls	r3, r3, #1
 10569 0ae8 DAB2     		uxtb	r2, r3
 10570 0aea BB7C     		ldrb	r3, [r7, #18]
 10571 0aec 03F00F03 		and	r3, r3, #15
 10572 0af0 DBB2     		uxtb	r3, r3
 10573 0af2 1344     		add	r3, r3, r2
 10574 0af4 DAB2     		uxtb	r2, r3
 10575 0af6 824B     		ldr	r3, .L473+4
 10576 0af8 83F8A620 		strb	r2, [r3, #166]
1411:..\src/command_processing.c ****             }
1412:..\src/command_processing.c ****             break;             
 10577              		.loc 1 1412 0
 10578 0afc 00F0B8BC 		b	.L464
 10579              	.L380:
 10580              	.LBB15:
1413:..\src/command_processing.c ****             
1414:..\src/command_processing.c ****         case 32:         //Current Time
1415:..\src/command_processing.c ****             for (uint8 i=0; i<6; i++){
 10581              		.loc 1 1415 0
 10582 0b00 0023     		movs	r3, #0
 10583 0b02 7B75     		strb	r3, [r7, #21]
 10584 0b04 0CE0     		b	.L426
 10585              	.L427:
1416:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10586              		.loc 1 1416 0 discriminator 3
 10587 0b06 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10588 0b08 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 10589 0b0a 0332     		adds	r2, r2, #3
 10590 0b0c 7B49     		ldr	r1, .L473
 10591 0b0e 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 10592 0b10 7B4A     		ldr	r2, .L473+4
 10593 0b12 1344     		add	r3, r3, r2
 10594 0b14 0A46     		mov	r2, r1
 10595 0b16 83F82022 		strb	r2, [r3, #544]
1415:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10596              		.loc 1 1415 0 discriminator 3
 10597 0b1a 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10598 0b1c 0133     		adds	r3, r3, #1
 10599 0b1e 7B75     		strb	r3, [r7, #21]
 10600              	.L426:
1415:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10601              		.loc 1 1415 0 is_stmt 0 discriminator 1
 10602 0b20 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10603 0b22 052B     		cmp	r3, #5
 10604 0b24 EFD9     		bls	.L427
 10605              	.LBE15:
1417:..\src/command_processing.c ****             }
1418:..\src/command_processing.c ****             
1419:..\src/command_processing.c ****             if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 10606              		.loc 1 1419 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 242


 10607 0b26 764B     		ldr	r3, .L473+4
 10608 0b28 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 10609 0b2c 012B     		cmp	r3, #1
 10610 0b2e 40F0A184 		bne	.L465
1420:..\src/command_processing.c ****                 set_RTC_time();
 10611              		.loc 1 1420 0
 10612 0b32 FFF7FEFF 		bl	set_RTC_time
1421:..\src/command_processing.c ****             }
1422:..\src/command_processing.c ****             break;
 10613              		.loc 1 1422 0
 10614 0b36 00F09DBC 		b	.L465
 10615              	.L381:
1423:..\src/command_processing.c ****            
1424:..\src/command_processing.c ****         case 38:        // First Motor Driver Type
1425:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 10616              		.loc 1 1425 0
 10617 0b3a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10618 0b3c 6F4B     		ldr	r3, .L473
 10619 0b3e D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 10620 0b40 6F49     		ldr	r1, .L473+4
 10621 0b42 1346     		mov	r3, r2
 10622 0b44 DB00     		lsls	r3, r3, #3
 10623 0b46 9B1A     		subs	r3, r3, r2
 10624 0b48 1B01     		lsls	r3, r3, #4
 10625 0b4a 0B44     		add	r3, r3, r1
 10626 0b4c E233     		adds	r3, r3, #226
 10627 0b4e 0246     		mov	r2, r0
 10628 0b50 1A70     		strb	r2, [r3]
1426:..\src/command_processing.c ****             MOTOR_DRIVER_TYPE_Write((g_mem.motor[1].motor_driver_type << 1) | g_mem.motor[0].motor_
 10629              		.loc 1 1426 0
 10630 0b52 6B4B     		ldr	r3, .L473+4
 10631 0b54 93F85231 		ldrb	r3, [r3, #338]	@ zero_extendqisi2
 10632 0b58 5B00     		lsls	r3, r3, #1
 10633 0b5a 5AB2     		sxtb	r2, r3
 10634 0b5c 684B     		ldr	r3, .L473+4
 10635 0b5e 93F8E230 		ldrb	r3, [r3, #226]	@ zero_extendqisi2
 10636 0b62 5BB2     		sxtb	r3, r3
 10637 0b64 1343     		orrs	r3, r3, r2
 10638 0b66 5BB2     		sxtb	r3, r3
 10639 0b68 DBB2     		uxtb	r3, r3
 10640 0b6a 1846     		mov	r0, r3
 10641 0b6c FFF7FEFF 		bl	MOTOR_DRIVER_TYPE_Write
1427:..\src/command_processing.c ****             break;
 10642              		.loc 1 1427 0
 10643 0b70 00F083BC 		b	.L403
 10644              	.L382:
1428:..\src/command_processing.c ****             
1429:..\src/command_processing.c ****         case 44:         // Second Motor Position PID
1430:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 10645              		.loc 1 1430 0
 10646 0b74 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10647 0b76 6349     		ldr	r1, .L473+8
 10648 0b78 1346     		mov	r3, r2
 10649 0b7a DB00     		lsls	r3, r3, #3
 10650 0b7c 9B1A     		subs	r3, r3, r2
 10651 0b7e 1B01     		lsls	r3, r3, #4
 10652 0b80 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 243


 10653 0b82 03F20F13 		addw	r3, r3, #271
 10654 0b86 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10655 0b88 032B     		cmp	r3, #3
 10656 0b8a 00F08580 		beq	.L429
1431:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 10657              		.loc 1 1431 0
 10658 0b8e 5E4B     		ldr	r3, .L473+12
 10659 0b90 1B68     		ldr	r3, [r3]	@ float
 10660 0b92 FB60     		str	r3, [r7, #12]	@ float
1432:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10661              		.loc 1 1432 0
 10662 0b94 0023     		movs	r3, #0
 10663 0b96 BB75     		strb	r3, [r7, #22]
 10664 0b98 0EE0     		b	.L430
 10665              	.L431:
1433:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10666              		.loc 1 1433 0 discriminator 3
 10667 0b9a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10668 0b9c C3F10303 		rsb	r3, r3, #3
 10669 0ba0 07F10802 		add	r2, r7, #8
 10670 0ba4 1344     		add	r3, r3, r2
 10671 0ba6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10672 0ba8 07F10C01 		add	r1, r7, #12
 10673 0bac 0A44     		add	r2, r2, r1
 10674 0bae 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10675 0bb0 1A70     		strb	r2, [r3]
1432:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10676              		.loc 1 1432 0 discriminator 3
 10677 0bb2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10678 0bb4 0133     		adds	r3, r3, #1
 10679 0bb6 BB75     		strb	r3, [r7, #22]
 10680              	.L430:
1432:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10681              		.loc 1 1432 0 is_stmt 0 discriminator 1
 10682 0bb8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10683 0bba 032B     		cmp	r3, #3
 10684 0bbc EDD9     		bls	.L431
1434:..\src/command_processing.c ****                 }
1435:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p = aux_float2 * 65536;
 10685              		.loc 1 1435 0 is_stmt 1
 10686 0bbe FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10687 0bc0 BB68     		ldr	r3, [r7, #8]	@ float
 10688 0bc2 4FF08F41 		mov	r1, #1199570944
 10689 0bc6 1846     		mov	r0, r3
 10690 0bc8 FFF7FEFF 		bl	__aeabi_fmul
 10691 0bcc 0346     		mov	r3, r0
 10692 0bce 1846     		mov	r0, r3
 10693 0bd0 FFF7FEFF 		bl	__aeabi_f2iz
 10694 0bd4 0146     		mov	r1, r0
 10695 0bd6 4A4A     		ldr	r2, .L473+4
 10696 0bd8 2346     		mov	r3, r4
 10697 0bda DB00     		lsls	r3, r3, #3
 10698 0bdc 1B1B     		subs	r3, r3, r4
 10699 0bde 1B01     		lsls	r3, r3, #4
 10700 0be0 1344     		add	r3, r3, r2
 10701 0be2 B033     		adds	r3, r3, #176
 10702 0be4 1960     		str	r1, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 244


1436:..\src/command_processing.c ****                 
1437:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 10703              		.loc 1 1437 0
 10704 0be6 494B     		ldr	r3, .L473+16
 10705 0be8 1B68     		ldr	r3, [r3]	@ float
 10706 0bea FB60     		str	r3, [r7, #12]	@ float
1438:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10707              		.loc 1 1438 0
 10708 0bec 0023     		movs	r3, #0
 10709 0bee BB75     		strb	r3, [r7, #22]
 10710 0bf0 0EE0     		b	.L432
 10711              	.L433:
1439:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10712              		.loc 1 1439 0 discriminator 3
 10713 0bf2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10714 0bf4 C3F10303 		rsb	r3, r3, #3
 10715 0bf8 07F10802 		add	r2, r7, #8
 10716 0bfc 1344     		add	r3, r3, r2
 10717 0bfe BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10718 0c00 07F10C01 		add	r1, r7, #12
 10719 0c04 0A44     		add	r2, r2, r1
 10720 0c06 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10721 0c08 1A70     		strb	r2, [r3]
1438:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10722              		.loc 1 1438 0 discriminator 3
 10723 0c0a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10724 0c0c 0133     		adds	r3, r3, #1
 10725 0c0e BB75     		strb	r3, [r7, #22]
 10726              	.L432:
1438:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10727              		.loc 1 1438 0 is_stmt 0 discriminator 1
 10728 0c10 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10729 0c12 032B     		cmp	r3, #3
 10730 0c14 EDD9     		bls	.L433
1440:..\src/command_processing.c ****                 }
1441:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i = aux_float2 * 65536;
 10731              		.loc 1 1441 0 is_stmt 1
 10732 0c16 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10733 0c18 BB68     		ldr	r3, [r7, #8]	@ float
 10734 0c1a 4FF08F41 		mov	r1, #1199570944
 10735 0c1e 1846     		mov	r0, r3
 10736 0c20 FFF7FEFF 		bl	__aeabi_fmul
 10737 0c24 0346     		mov	r3, r0
 10738 0c26 1846     		mov	r0, r3
 10739 0c28 FFF7FEFF 		bl	__aeabi_f2iz
 10740 0c2c 0146     		mov	r1, r0
 10741 0c2e 344A     		ldr	r2, .L473+4
 10742 0c30 2346     		mov	r3, r4
 10743 0c32 DB00     		lsls	r3, r3, #3
 10744 0c34 1B1B     		subs	r3, r3, r4
 10745 0c36 1B01     		lsls	r3, r3, #4
 10746 0c38 1344     		add	r3, r3, r2
 10747 0c3a B433     		adds	r3, r3, #180
 10748 0c3c 1960     		str	r1, [r3]
1442:..\src/command_processing.c ****                 
1443:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 10749              		.loc 1 1443 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 245


 10750 0c3e 344B     		ldr	r3, .L473+20
 10751 0c40 1B68     		ldr	r3, [r3]	@ float
 10752 0c42 FB60     		str	r3, [r7, #12]	@ float
1444:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10753              		.loc 1 1444 0
 10754 0c44 0023     		movs	r3, #0
 10755 0c46 BB75     		strb	r3, [r7, #22]
 10756 0c48 0EE0     		b	.L434
 10757              	.L435:
1445:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10758              		.loc 1 1445 0 discriminator 3
 10759 0c4a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10760 0c4c C3F10303 		rsb	r3, r3, #3
 10761 0c50 07F10802 		add	r2, r7, #8
 10762 0c54 1344     		add	r3, r3, r2
 10763 0c56 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10764 0c58 07F10C01 		add	r1, r7, #12
 10765 0c5c 0A44     		add	r2, r2, r1
 10766 0c5e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10767 0c60 1A70     		strb	r2, [r3]
1444:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10768              		.loc 1 1444 0 discriminator 3
 10769 0c62 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10770 0c64 0133     		adds	r3, r3, #1
 10771 0c66 BB75     		strb	r3, [r7, #22]
 10772              	.L434:
1444:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10773              		.loc 1 1444 0 is_stmt 0 discriminator 1
 10774 0c68 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10775 0c6a 032B     		cmp	r3, #3
 10776 0c6c EDD9     		bls	.L435
1446:..\src/command_processing.c ****                 }
1447:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d = aux_float2 * 65536;
 10777              		.loc 1 1447 0 is_stmt 1
 10778 0c6e FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10779 0c70 BB68     		ldr	r3, [r7, #8]	@ float
 10780 0c72 4FF08F41 		mov	r1, #1199570944
 10781 0c76 1846     		mov	r0, r3
 10782 0c78 FFF7FEFF 		bl	__aeabi_fmul
 10783 0c7c 0346     		mov	r3, r0
 10784 0c7e 1846     		mov	r0, r3
 10785 0c80 FFF7FEFF 		bl	__aeabi_f2iz
 10786 0c84 0146     		mov	r1, r0
 10787 0c86 1E4A     		ldr	r2, .L473+4
 10788 0c88 2346     		mov	r3, r4
 10789 0c8a DB00     		lsls	r3, r3, #3
 10790 0c8c 1B1B     		subs	r3, r3, r4
 10791 0c8e 1B01     		lsls	r3, r3, #4
 10792 0c90 1344     		add	r3, r3, r2
 10793 0c92 B833     		adds	r3, r3, #184
 10794 0c94 1960     		str	r1, [r3]
1448:..\src/command_processing.c ****             }
1449:..\src/command_processing.c ****             else {
1450:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1451:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1452:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1453:..\src/command_processing.c ****                 }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 246


1454:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1455:..\src/command_processing.c ****                 
1456:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1457:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1458:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1459:..\src/command_processing.c ****                 }
1460:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1461:..\src/command_processing.c ****                 
1462:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1463:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1464:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1465:..\src/command_processing.c ****                 }
1466:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1467:..\src/command_processing.c ****             }
1468:..\src/command_processing.c ****             break;
 10795              		.loc 1 1468 0
 10796 0c96 F0E3     		b	.L403
 10797              	.L429:
1450:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10798              		.loc 1 1450 0
 10799 0c98 1B4B     		ldr	r3, .L473+12
 10800 0c9a 1B68     		ldr	r3, [r3]	@ float
 10801 0c9c FB60     		str	r3, [r7, #12]	@ float
1451:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10802              		.loc 1 1451 0
 10803 0c9e 0023     		movs	r3, #0
 10804 0ca0 BB75     		strb	r3, [r7, #22]
 10805 0ca2 0EE0     		b	.L437
 10806              	.L438:
1452:..\src/command_processing.c ****                 }
 10807              		.loc 1 1452 0 discriminator 3
 10808 0ca4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10809 0ca6 C3F10303 		rsb	r3, r3, #3
 10810 0caa 07F10802 		add	r2, r7, #8
 10811 0cae 1344     		add	r3, r3, r2
 10812 0cb0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10813 0cb2 07F10C01 		add	r1, r7, #12
 10814 0cb6 0A44     		add	r2, r2, r1
 10815 0cb8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10816 0cba 1A70     		strb	r2, [r3]
1451:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10817              		.loc 1 1451 0 discriminator 3
 10818 0cbc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10819 0cbe 0133     		adds	r3, r3, #1
 10820 0cc0 BB75     		strb	r3, [r7, #22]
 10821              	.L437:
1451:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10822              		.loc 1 1451 0 is_stmt 0 discriminator 1
 10823 0cc2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10824 0cc4 032B     		cmp	r3, #3
 10825 0cc6 EDD9     		bls	.L438
1454:..\src/command_processing.c ****                 
 10826              		.loc 1 1454 0 is_stmt 1
 10827 0cc8 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10828 0cca BB68     		ldr	r3, [r7, #8]	@ float
 10829 0ccc 4FF08F41 		mov	r1, #1199570944
 10830 0cd0 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 247


 10831 0cd2 FFF7FEFF 		bl	__aeabi_fmul
 10832 0cd6 0346     		mov	r3, r0
 10833 0cd8 1846     		mov	r0, r3
 10834 0cda FFF7FEFF 		bl	__aeabi_f2iz
 10835 0cde 0146     		mov	r1, r0
 10836 0ce0 074A     		ldr	r2, .L473+4
 10837 0ce2 2346     		mov	r3, r4
 10838 0ce4 DB00     		lsls	r3, r3, #3
 10839 0ce6 1B1B     		subs	r3, r3, r4
 10840 0ce8 1B01     		lsls	r3, r3, #4
 10841 0cea 1344     		add	r3, r3, r2
 10842 0cec C833     		adds	r3, r3, #200
 10843 0cee 1960     		str	r1, [r3]
1456:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10844              		.loc 1 1456 0
 10845 0cf0 064B     		ldr	r3, .L473+16
 10846 0cf2 1B68     		ldr	r3, [r3]	@ float
 10847 0cf4 FB60     		str	r3, [r7, #12]	@ float
1457:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10848              		.loc 1 1457 0
 10849 0cf6 0023     		movs	r3, #0
 10850 0cf8 BB75     		strb	r3, [r7, #22]
 10851 0cfa 1AE0     		b	.L439
 10852              	.L474:
 10853              		.align	2
 10854              	.L473:
 10855 0cfc 00000000 		.word	g_rx
 10856 0d00 00000000 		.word	g_mem
 10857 0d04 00000000 		.word	c_mem
 10858 0d08 03000000 		.word	g_rx+3
 10859 0d0c 07000000 		.word	g_rx+7
 10860 0d10 0B000000 		.word	g_rx+11
 10861              	.L440:
1458:..\src/command_processing.c ****                 }
 10862              		.loc 1 1458 0 discriminator 3
 10863 0d14 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10864 0d16 C3F10303 		rsb	r3, r3, #3
 10865 0d1a 07F10802 		add	r2, r7, #8
 10866 0d1e 1344     		add	r3, r3, r2
 10867 0d20 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10868 0d22 07F10C01 		add	r1, r7, #12
 10869 0d26 0A44     		add	r2, r2, r1
 10870 0d28 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10871 0d2a 1A70     		strb	r2, [r3]
1457:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10872              		.loc 1 1457 0 discriminator 3
 10873 0d2c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10874 0d2e 0133     		adds	r3, r3, #1
 10875 0d30 BB75     		strb	r3, [r7, #22]
 10876              	.L439:
1457:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10877              		.loc 1 1457 0 is_stmt 0 discriminator 1
 10878 0d32 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10879 0d34 032B     		cmp	r3, #3
 10880 0d36 EDD9     		bls	.L440
1460:..\src/command_processing.c ****                 
 10881              		.loc 1 1460 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 248


 10882 0d38 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10883 0d3a BB68     		ldr	r3, [r7, #8]	@ float
 10884 0d3c 4FF08F41 		mov	r1, #1199570944
 10885 0d40 1846     		mov	r0, r3
 10886 0d42 FFF7FEFF 		bl	__aeabi_fmul
 10887 0d46 0346     		mov	r3, r0
 10888 0d48 1846     		mov	r0, r3
 10889 0d4a FFF7FEFF 		bl	__aeabi_f2iz
 10890 0d4e 0146     		mov	r1, r0
 10891 0d50 B74A     		ldr	r2, .L475
 10892 0d52 2346     		mov	r3, r4
 10893 0d54 DB00     		lsls	r3, r3, #3
 10894 0d56 1B1B     		subs	r3, r3, r4
 10895 0d58 1B01     		lsls	r3, r3, #4
 10896 0d5a 1344     		add	r3, r3, r2
 10897 0d5c CC33     		adds	r3, r3, #204
 10898 0d5e 1960     		str	r1, [r3]
1462:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10899              		.loc 1 1462 0
 10900 0d60 B44B     		ldr	r3, .L475+4
 10901 0d62 1B68     		ldr	r3, [r3]	@ float
 10902 0d64 FB60     		str	r3, [r7, #12]	@ float
1463:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10903              		.loc 1 1463 0
 10904 0d66 0023     		movs	r3, #0
 10905 0d68 BB75     		strb	r3, [r7, #22]
 10906 0d6a 0EE0     		b	.L441
 10907              	.L442:
1464:..\src/command_processing.c ****                 }
 10908              		.loc 1 1464 0 discriminator 3
 10909 0d6c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10910 0d6e C3F10303 		rsb	r3, r3, #3
 10911 0d72 07F10802 		add	r2, r7, #8
 10912 0d76 1344     		add	r3, r3, r2
 10913 0d78 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10914 0d7a 07F10C01 		add	r1, r7, #12
 10915 0d7e 0A44     		add	r2, r2, r1
 10916 0d80 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10917 0d82 1A70     		strb	r2, [r3]
1463:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10918              		.loc 1 1463 0 discriminator 3
 10919 0d84 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10920 0d86 0133     		adds	r3, r3, #1
 10921 0d88 BB75     		strb	r3, [r7, #22]
 10922              	.L441:
1463:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10923              		.loc 1 1463 0 is_stmt 0 discriminator 1
 10924 0d8a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10925 0d8c 032B     		cmp	r3, #3
 10926 0d8e EDD9     		bls	.L442
1466:..\src/command_processing.c ****             }
 10927              		.loc 1 1466 0 is_stmt 1
 10928 0d90 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10929 0d92 BB68     		ldr	r3, [r7, #8]	@ float
 10930 0d94 4FF08F41 		mov	r1, #1199570944
 10931 0d98 1846     		mov	r0, r3
 10932 0d9a FFF7FEFF 		bl	__aeabi_fmul
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 249


 10933 0d9e 0346     		mov	r3, r0
 10934 0da0 1846     		mov	r0, r3
 10935 0da2 FFF7FEFF 		bl	__aeabi_f2iz
 10936 0da6 0146     		mov	r1, r0
 10937 0da8 A14A     		ldr	r2, .L475
 10938 0daa 2346     		mov	r3, r4
 10939 0dac DB00     		lsls	r3, r3, #3
 10940 0dae 1B1B     		subs	r3, r3, r4
 10941 0db0 1B01     		lsls	r3, r3, #4
 10942 0db2 1344     		add	r3, r3, r2
 10943 0db4 D033     		adds	r3, r3, #208
 10944 0db6 1960     		str	r1, [r3]
 10945              		.loc 1 1468 0
 10946 0db8 5FE3     		b	.L403
 10947              	.L383:
1469:..\src/command_processing.c ****             
1470:..\src/command_processing.c ****         case 45:         // Second Motor Current PID
1471:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 10948              		.loc 1 1471 0
 10949 0dba FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10950 0dbc 9E49     		ldr	r1, .L475+8
 10951 0dbe 1346     		mov	r3, r2
 10952 0dc0 DB00     		lsls	r3, r3, #3
 10953 0dc2 9B1A     		subs	r3, r3, r2
 10954 0dc4 1B01     		lsls	r3, r3, #4
 10955 0dc6 0B44     		add	r3, r3, r1
 10956 0dc8 03F20F13 		addw	r3, r3, #271
 10957 0dcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10958 0dce 032B     		cmp	r3, #3
 10959 0dd0 00F08580 		beq	.L443
1472:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 10960              		.loc 1 1472 0
 10961 0dd4 994B     		ldr	r3, .L475+12
 10962 0dd6 1B68     		ldr	r3, [r3]	@ float
 10963 0dd8 FB60     		str	r3, [r7, #12]	@ float
1473:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10964              		.loc 1 1473 0
 10965 0dda 0023     		movs	r3, #0
 10966 0ddc BB75     		strb	r3, [r7, #22]
 10967 0dde 0EE0     		b	.L444
 10968              	.L445:
1474:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10969              		.loc 1 1474 0 discriminator 3
 10970 0de0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10971 0de2 C3F10303 		rsb	r3, r3, #3
 10972 0de6 07F10802 		add	r2, r7, #8
 10973 0dea 1344     		add	r3, r3, r2
 10974 0dec BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10975 0dee 07F10C01 		add	r1, r7, #12
 10976 0df2 0A44     		add	r2, r2, r1
 10977 0df4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10978 0df6 1A70     		strb	r2, [r3]
1473:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10979              		.loc 1 1473 0 discriminator 3
 10980 0df8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10981 0dfa 0133     		adds	r3, r3, #1
 10982 0dfc BB75     		strb	r3, [r7, #22]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 250


 10983              	.L444:
1473:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10984              		.loc 1 1473 0 is_stmt 0 discriminator 1
 10985 0dfe BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10986 0e00 032B     		cmp	r3, #3
 10987 0e02 EDD9     		bls	.L445
1475:..\src/command_processing.c ****                 }
1476:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c = aux_float2 * 65536;
 10988              		.loc 1 1476 0 is_stmt 1
 10989 0e04 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10990 0e06 BB68     		ldr	r3, [r7, #8]	@ float
 10991 0e08 4FF08F41 		mov	r1, #1199570944
 10992 0e0c 1846     		mov	r0, r3
 10993 0e0e FFF7FEFF 		bl	__aeabi_fmul
 10994 0e12 0346     		mov	r3, r0
 10995 0e14 1846     		mov	r0, r3
 10996 0e16 FFF7FEFF 		bl	__aeabi_f2iz
 10997 0e1a 0146     		mov	r1, r0
 10998 0e1c 844A     		ldr	r2, .L475
 10999 0e1e 2346     		mov	r3, r4
 11000 0e20 DB00     		lsls	r3, r3, #3
 11001 0e22 1B1B     		subs	r3, r3, r4
 11002 0e24 1B01     		lsls	r3, r3, #4
 11003 0e26 1344     		add	r3, r3, r2
 11004 0e28 BC33     		adds	r3, r3, #188
 11005 0e2a 1960     		str	r1, [r3]
1477:..\src/command_processing.c ****                 
1478:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 11006              		.loc 1 1478 0
 11007 0e2c 844B     		ldr	r3, .L475+16
 11008 0e2e 1B68     		ldr	r3, [r3]	@ float
 11009 0e30 FB60     		str	r3, [r7, #12]	@ float
1479:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11010              		.loc 1 1479 0
 11011 0e32 0023     		movs	r3, #0
 11012 0e34 BB75     		strb	r3, [r7, #22]
 11013 0e36 0EE0     		b	.L446
 11014              	.L447:
1480:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11015              		.loc 1 1480 0 discriminator 3
 11016 0e38 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11017 0e3a C3F10303 		rsb	r3, r3, #3
 11018 0e3e 07F10802 		add	r2, r7, #8
 11019 0e42 1344     		add	r3, r3, r2
 11020 0e44 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11021 0e46 07F10C01 		add	r1, r7, #12
 11022 0e4a 0A44     		add	r2, r2, r1
 11023 0e4c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11024 0e4e 1A70     		strb	r2, [r3]
1479:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11025              		.loc 1 1479 0 discriminator 3
 11026 0e50 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11027 0e52 0133     		adds	r3, r3, #1
 11028 0e54 BB75     		strb	r3, [r7, #22]
 11029              	.L446:
1479:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11030              		.loc 1 1479 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 251


 11031 0e56 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11032 0e58 032B     		cmp	r3, #3
 11033 0e5a EDD9     		bls	.L447
1481:..\src/command_processing.c ****                 }
1482:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c = aux_float2 * 65536;
 11034              		.loc 1 1482 0 is_stmt 1
 11035 0e5c FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11036 0e5e BB68     		ldr	r3, [r7, #8]	@ float
 11037 0e60 4FF08F41 		mov	r1, #1199570944
 11038 0e64 1846     		mov	r0, r3
 11039 0e66 FFF7FEFF 		bl	__aeabi_fmul
 11040 0e6a 0346     		mov	r3, r0
 11041 0e6c 1846     		mov	r0, r3
 11042 0e6e FFF7FEFF 		bl	__aeabi_f2iz
 11043 0e72 0146     		mov	r1, r0
 11044 0e74 6E4A     		ldr	r2, .L475
 11045 0e76 2346     		mov	r3, r4
 11046 0e78 DB00     		lsls	r3, r3, #3
 11047 0e7a 1B1B     		subs	r3, r3, r4
 11048 0e7c 1B01     		lsls	r3, r3, #4
 11049 0e7e 1344     		add	r3, r3, r2
 11050 0e80 C033     		adds	r3, r3, #192
 11051 0e82 1960     		str	r1, [r3]
1483:..\src/command_processing.c ****                 
1484:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 11052              		.loc 1 1484 0
 11053 0e84 6B4B     		ldr	r3, .L475+4
 11054 0e86 1B68     		ldr	r3, [r3]	@ float
 11055 0e88 FB60     		str	r3, [r7, #12]	@ float
1485:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11056              		.loc 1 1485 0
 11057 0e8a 0023     		movs	r3, #0
 11058 0e8c BB75     		strb	r3, [r7, #22]
 11059 0e8e 0EE0     		b	.L448
 11060              	.L449:
1486:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11061              		.loc 1 1486 0 discriminator 3
 11062 0e90 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11063 0e92 C3F10303 		rsb	r3, r3, #3
 11064 0e96 07F10802 		add	r2, r7, #8
 11065 0e9a 1344     		add	r3, r3, r2
 11066 0e9c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11067 0e9e 07F10C01 		add	r1, r7, #12
 11068 0ea2 0A44     		add	r2, r2, r1
 11069 0ea4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11070 0ea6 1A70     		strb	r2, [r3]
1485:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11071              		.loc 1 1485 0 discriminator 3
 11072 0ea8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11073 0eaa 0133     		adds	r3, r3, #1
 11074 0eac BB75     		strb	r3, [r7, #22]
 11075              	.L448:
1485:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11076              		.loc 1 1485 0 is_stmt 0 discriminator 1
 11077 0eae BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11078 0eb0 032B     		cmp	r3, #3
 11079 0eb2 EDD9     		bls	.L449
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 252


1487:..\src/command_processing.c ****                 }
1488:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c = aux_float2 * 65536;
 11080              		.loc 1 1488 0 is_stmt 1
 11081 0eb4 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11082 0eb6 BB68     		ldr	r3, [r7, #8]	@ float
 11083 0eb8 4FF08F41 		mov	r1, #1199570944
 11084 0ebc 1846     		mov	r0, r3
 11085 0ebe FFF7FEFF 		bl	__aeabi_fmul
 11086 0ec2 0346     		mov	r3, r0
 11087 0ec4 1846     		mov	r0, r3
 11088 0ec6 FFF7FEFF 		bl	__aeabi_f2iz
 11089 0eca 0146     		mov	r1, r0
 11090 0ecc 584A     		ldr	r2, .L475
 11091 0ece 2346     		mov	r3, r4
 11092 0ed0 DB00     		lsls	r3, r3, #3
 11093 0ed2 1B1B     		subs	r3, r3, r4
 11094 0ed4 1B01     		lsls	r3, r3, #4
 11095 0ed6 1344     		add	r3, r3, r2
 11096 0ed8 C433     		adds	r3, r3, #196
 11097 0eda 1960     		str	r1, [r3]
1489:..\src/command_processing.c ****             }
1490:..\src/command_processing.c ****             else {
1491:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1492:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1493:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1494:..\src/command_processing.c ****                 }
1495:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1496:..\src/command_processing.c ****                 
1497:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1498:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1499:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1500:..\src/command_processing.c ****                 }
1501:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1502:..\src/command_processing.c ****                 
1503:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1504:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1505:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1506:..\src/command_processing.c ****                 }
1507:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1508:..\src/command_processing.c ****             }            
1509:..\src/command_processing.c ****             break;  
 11098              		.loc 1 1509 0
 11099 0edc CDE2     		b	.L403
 11100              	.L443:
1491:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11101              		.loc 1 1491 0
 11102 0ede 574B     		ldr	r3, .L475+12
 11103 0ee0 1B68     		ldr	r3, [r3]	@ float
 11104 0ee2 FB60     		str	r3, [r7, #12]	@ float
1492:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11105              		.loc 1 1492 0
 11106 0ee4 0023     		movs	r3, #0
 11107 0ee6 BB75     		strb	r3, [r7, #22]
 11108 0ee8 0EE0     		b	.L451
 11109              	.L452:
1493:..\src/command_processing.c ****                 }
 11110              		.loc 1 1493 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 253


 11111 0eea BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11112 0eec C3F10303 		rsb	r3, r3, #3
 11113 0ef0 07F10802 		add	r2, r7, #8
 11114 0ef4 1344     		add	r3, r3, r2
 11115 0ef6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11116 0ef8 07F10C01 		add	r1, r7, #12
 11117 0efc 0A44     		add	r2, r2, r1
 11118 0efe 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11119 0f00 1A70     		strb	r2, [r3]
1492:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11120              		.loc 1 1492 0 discriminator 3
 11121 0f02 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11122 0f04 0133     		adds	r3, r3, #1
 11123 0f06 BB75     		strb	r3, [r7, #22]
 11124              	.L451:
1492:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11125              		.loc 1 1492 0 is_stmt 0 discriminator 1
 11126 0f08 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11127 0f0a 032B     		cmp	r3, #3
 11128 0f0c EDD9     		bls	.L452
1495:..\src/command_processing.c ****                 
 11129              		.loc 1 1495 0 is_stmt 1
 11130 0f0e FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11131 0f10 BB68     		ldr	r3, [r7, #8]	@ float
 11132 0f12 4FF08F41 		mov	r1, #1199570944
 11133 0f16 1846     		mov	r0, r3
 11134 0f18 FFF7FEFF 		bl	__aeabi_fmul
 11135 0f1c 0346     		mov	r3, r0
 11136 0f1e 1846     		mov	r0, r3
 11137 0f20 FFF7FEFF 		bl	__aeabi_f2iz
 11138 0f24 0146     		mov	r1, r0
 11139 0f26 424A     		ldr	r2, .L475
 11140 0f28 2346     		mov	r3, r4
 11141 0f2a DB00     		lsls	r3, r3, #3
 11142 0f2c 1B1B     		subs	r3, r3, r4
 11143 0f2e 1B01     		lsls	r3, r3, #4
 11144 0f30 1344     		add	r3, r3, r2
 11145 0f32 D433     		adds	r3, r3, #212
 11146 0f34 1960     		str	r1, [r3]
1497:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11147              		.loc 1 1497 0
 11148 0f36 424B     		ldr	r3, .L475+16
 11149 0f38 1B68     		ldr	r3, [r3]	@ float
 11150 0f3a FB60     		str	r3, [r7, #12]	@ float
1498:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11151              		.loc 1 1498 0
 11152 0f3c 0023     		movs	r3, #0
 11153 0f3e BB75     		strb	r3, [r7, #22]
 11154 0f40 0EE0     		b	.L453
 11155              	.L454:
1499:..\src/command_processing.c ****                 }
 11156              		.loc 1 1499 0 discriminator 3
 11157 0f42 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11158 0f44 C3F10303 		rsb	r3, r3, #3
 11159 0f48 07F10802 		add	r2, r7, #8
 11160 0f4c 1344     		add	r3, r3, r2
 11161 0f4e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 254


 11162 0f50 07F10C01 		add	r1, r7, #12
 11163 0f54 0A44     		add	r2, r2, r1
 11164 0f56 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11165 0f58 1A70     		strb	r2, [r3]
1498:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11166              		.loc 1 1498 0 discriminator 3
 11167 0f5a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11168 0f5c 0133     		adds	r3, r3, #1
 11169 0f5e BB75     		strb	r3, [r7, #22]
 11170              	.L453:
1498:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11171              		.loc 1 1498 0 is_stmt 0 discriminator 1
 11172 0f60 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11173 0f62 032B     		cmp	r3, #3
 11174 0f64 EDD9     		bls	.L454
1501:..\src/command_processing.c ****                 
 11175              		.loc 1 1501 0 is_stmt 1
 11176 0f66 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11177 0f68 BB68     		ldr	r3, [r7, #8]	@ float
 11178 0f6a 4FF08F41 		mov	r1, #1199570944
 11179 0f6e 1846     		mov	r0, r3
 11180 0f70 FFF7FEFF 		bl	__aeabi_fmul
 11181 0f74 0346     		mov	r3, r0
 11182 0f76 1846     		mov	r0, r3
 11183 0f78 FFF7FEFF 		bl	__aeabi_f2iz
 11184 0f7c 0146     		mov	r1, r0
 11185 0f7e 2C4A     		ldr	r2, .L475
 11186 0f80 2346     		mov	r3, r4
 11187 0f82 DB00     		lsls	r3, r3, #3
 11188 0f84 1B1B     		subs	r3, r3, r4
 11189 0f86 1B01     		lsls	r3, r3, #4
 11190 0f88 1344     		add	r3, r3, r2
 11191 0f8a D833     		adds	r3, r3, #216
 11192 0f8c 1960     		str	r1, [r3]
1503:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11193              		.loc 1 1503 0
 11194 0f8e 294B     		ldr	r3, .L475+4
 11195 0f90 1B68     		ldr	r3, [r3]	@ float
 11196 0f92 FB60     		str	r3, [r7, #12]	@ float
1504:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11197              		.loc 1 1504 0
 11198 0f94 0023     		movs	r3, #0
 11199 0f96 BB75     		strb	r3, [r7, #22]
 11200 0f98 0EE0     		b	.L455
 11201              	.L456:
1505:..\src/command_processing.c ****                 }
 11202              		.loc 1 1505 0 discriminator 3
 11203 0f9a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11204 0f9c C3F10303 		rsb	r3, r3, #3
 11205 0fa0 07F10802 		add	r2, r7, #8
 11206 0fa4 1344     		add	r3, r3, r2
 11207 0fa6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11208 0fa8 07F10C01 		add	r1, r7, #12
 11209 0fac 0A44     		add	r2, r2, r1
 11210 0fae 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11211 0fb0 1A70     		strb	r2, [r3]
1504:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 255


 11212              		.loc 1 1504 0 discriminator 3
 11213 0fb2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11214 0fb4 0133     		adds	r3, r3, #1
 11215 0fb6 BB75     		strb	r3, [r7, #22]
 11216              	.L455:
1504:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11217              		.loc 1 1504 0 is_stmt 0 discriminator 1
 11218 0fb8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11219 0fba 032B     		cmp	r3, #3
 11220 0fbc EDD9     		bls	.L456
1507:..\src/command_processing.c ****             }            
 11221              		.loc 1 1507 0 is_stmt 1
 11222 0fbe FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11223 0fc0 BB68     		ldr	r3, [r7, #8]	@ float
 11224 0fc2 4FF08F41 		mov	r1, #1199570944
 11225 0fc6 1846     		mov	r0, r3
 11226 0fc8 FFF7FEFF 		bl	__aeabi_fmul
 11227 0fcc 0346     		mov	r3, r0
 11228 0fce 1846     		mov	r0, r3
 11229 0fd0 FFF7FEFF 		bl	__aeabi_f2iz
 11230 0fd4 0146     		mov	r1, r0
 11231 0fd6 164A     		ldr	r2, .L475
 11232 0fd8 2346     		mov	r3, r4
 11233 0fda DB00     		lsls	r3, r3, #3
 11234 0fdc 1B1B     		subs	r3, r3, r4
 11235 0fde 1B01     		lsls	r3, r3, #4
 11236 0fe0 1344     		add	r3, r3, r2
 11237 0fe2 DC33     		adds	r3, r3, #220
 11238 0fe4 1960     		str	r1, [r3]
 11239              		.loc 1 1509 0
 11240 0fe6 48E2     		b	.L403
 11241              	.L384:
1510:..\src/command_processing.c ****             
1511:..\src/command_processing.c ****         case 47:         // Second Motor Input mode
1512:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].input_mode = g_rx.buffer[3];
 11242              		.loc 1 1512 0
 11243 0fe8 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11244 0fea 164B     		ldr	r3, .L475+20
 11245 0fec D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 11246 0fee 1049     		ldr	r1, .L475
 11247 0ff0 1346     		mov	r3, r2
 11248 0ff2 DB00     		lsls	r3, r3, #3
 11249 0ff4 9B1A     		subs	r3, r3, r2
 11250 0ff6 1B01     		lsls	r3, r3, #4
 11251 0ff8 0B44     		add	r3, r3, r1
 11252 0ffa 03F58773 		add	r3, r3, #270
 11253 0ffe 0246     		mov	r2, r0
 11254 1000 1A70     		strb	r2, [r3]
1513:..\src/command_processing.c ****             
1514:..\src/command_processing.c ****             // Hold the actual position
1515:..\src/command_processing.c ****             g_refNew[SECOND_MOTOR_IDX].pos = g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].pos
 11255              		.loc 1 1515 0
 11256 1002 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11257 1004 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11258 1006 0A48     		ldr	r0, .L475
 11259 1008 1346     		mov	r3, r2
 11260 100a DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 256


 11261 100c 9B1A     		subs	r3, r3, r2
 11262 100e 1B01     		lsls	r3, r3, #4
 11263 1010 0344     		add	r3, r3, r0
 11264 1012 03F58873 		add	r3, r3, #272
 11265 1016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11266 1018 1846     		mov	r0, r3
 11267 101a 0B4A     		ldr	r2, .L475+24
 11268 101c 3423     		movs	r3, #52
 11269 101e 03FB00F3 		mul	r3, r3, r0
 11270 1022 1344     		add	r3, r3, r2
 11271 1024 1A68     		ldr	r2, [r3]
 11272 1026 0948     		ldr	r0, .L475+28
 11273 1028 0B01     		lsls	r3, r1, #4
 11274 102a 0344     		add	r3, r3, r0
 11275 102c 1A60     		str	r2, [r3]
1516:..\src/command_processing.c ****             break;   
 11276              		.loc 1 1516 0
 11277 102e 24E2     		b	.L403
 11278              	.L476:
 11279              		.align	2
 11280              	.L475:
 11281 1030 00000000 		.word	g_mem
 11282 1034 0B000000 		.word	g_rx+11
 11283 1038 00000000 		.word	c_mem
 11284 103c 03000000 		.word	g_rx+3
 11285 1040 07000000 		.word	g_rx+7
 11286 1044 00000000 		.word	g_rx
 11287 1048 00000000 		.word	g_meas
 11288 104c 00000000 		.word	g_refNew
 11289              	.L385:
1517:..\src/command_processing.c **** 
1518:..\src/command_processing.c ****         case 50:         // Second Motor Measurement Offset
1519:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
 11290              		.loc 1 1519 0
 11291 1050 0023     		movs	r3, #0
 11292 1052 FB75     		strb	r3, [r7, #23]
 11293 1054 7EE0     		b	.L457
 11294              	.L458:
1520:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 11295              		.loc 1 1520 0 discriminator 3
 11296 1056 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11297 1058 9049     		ldr	r1, .L477
 11298 105a 1346     		mov	r3, r2
 11299 105c DB00     		lsls	r3, r3, #3
 11300 105e 9B1A     		subs	r3, r3, r2
 11301 1060 1B01     		lsls	r3, r3, #4
 11302 1062 0B44     		add	r3, r3, r1
 11303 1064 03F58873 		add	r3, r3, #272
 11304 1068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11305 106a 1C46     		mov	r4, r3
 11306 106c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 11307 106e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11308 1070 5B00     		lsls	r3, r3, #1
 11309 1072 0333     		adds	r3, r3, #3
 11310 1074 8A49     		ldr	r1, .L477+4
 11311 1076 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11312 1078 1B02     		lsls	r3, r3, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 257


 11313 107a 19B2     		sxth	r1, r3
 11314 107c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11315 107e 0233     		adds	r3, r3, #2
 11316 1080 5B00     		lsls	r3, r3, #1
 11317 1082 8748     		ldr	r0, .L477+4
 11318 1084 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 11319 1086 1BB2     		sxth	r3, r3
 11320 1088 0B43     		orrs	r3, r3, r1
 11321 108a 1BB2     		sxth	r3, r3
 11322 108c 1846     		mov	r0, r3
 11323 108e 8349     		ldr	r1, .L477
 11324 1090 2346     		mov	r3, r4
 11325 1092 5B00     		lsls	r3, r3, #1
 11326 1094 2344     		add	r3, r3, r4
 11327 1096 9B00     		lsls	r3, r3, #2
 11328 1098 1344     		add	r3, r3, r2
 11329 109a 6633     		adds	r3, r3, #102
 11330 109c 41F82300 		str	r0, [r1, r3, lsl #2]
1521:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.mo
 11331              		.loc 1 1521 0 discriminator 3
 11332 10a0 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11333 10a2 7E49     		ldr	r1, .L477
 11334 10a4 1346     		mov	r3, r2
 11335 10a6 DB00     		lsls	r3, r3, #3
 11336 10a8 9B1A     		subs	r3, r3, r2
 11337 10aa 1B01     		lsls	r3, r3, #4
 11338 10ac 0B44     		add	r3, r3, r1
 11339 10ae 03F58873 		add	r3, r3, #272
 11340 10b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11341 10b4 1D46     		mov	r5, r3
 11342 10b6 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 11343 10b8 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11344 10ba 7848     		ldr	r0, .L477
 11345 10bc 1346     		mov	r3, r2
 11346 10be DB00     		lsls	r3, r3, #3
 11347 10c0 9B1A     		subs	r3, r3, r2
 11348 10c2 1B01     		lsls	r3, r3, #4
 11349 10c4 0344     		add	r3, r3, r0
 11350 10c6 03F58873 		add	r3, r3, #272
 11351 10ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11352 10cc 1C46     		mov	r4, r3
 11353 10ce FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 11354 10d0 7248     		ldr	r0, .L477
 11355 10d2 2346     		mov	r3, r4
 11356 10d4 5B00     		lsls	r3, r3, #1
 11357 10d6 2344     		add	r3, r3, r4
 11358 10d8 9B00     		lsls	r3, r3, #2
 11359 10da 1344     		add	r3, r3, r2
 11360 10dc 6633     		adds	r3, r3, #102
 11361 10de 50F82300 		ldr	r0, [r0, r3, lsl #2]
 11362 10e2 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11363 10e4 6D4C     		ldr	r4, .L477
 11364 10e6 1346     		mov	r3, r2
 11365 10e8 DB00     		lsls	r3, r3, #3
 11366 10ea 9B1A     		subs	r3, r3, r2
 11367 10ec 1B01     		lsls	r3, r3, #4
 11368 10ee 2344     		add	r3, r3, r4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 258


 11369 10f0 03F58873 		add	r3, r3, #272
 11370 10f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11371 10f6 1E46     		mov	r6, r3
 11372 10f8 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 11373 10fa 684C     		ldr	r4, .L477
 11374 10fc 3346     		mov	r3, r6
 11375 10fe 5B00     		lsls	r3, r3, #1
 11376 1100 3344     		add	r3, r3, r6
 11377 1102 1B01     		lsls	r3, r3, #4
 11378 1104 2344     		add	r3, r3, r4
 11379 1106 1344     		add	r3, r3, r2
 11380 1108 03F29513 		addw	r3, r3, #405
 11381 110c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11382 110e 00FA03F2 		lsl	r2, r0, r3
 11383 1112 6248     		ldr	r0, .L477
 11384 1114 2B46     		mov	r3, r5
 11385 1116 5B00     		lsls	r3, r3, #1
 11386 1118 2B44     		add	r3, r3, r5
 11387 111a 9B00     		lsls	r3, r3, #2
 11388 111c 0B44     		add	r3, r3, r1
 11389 111e 6633     		adds	r3, r3, #102
 11390 1120 40F82320 		str	r2, [r0, r3, lsl #2]
1522:..\src/command_processing.c **** 
1523:..\src/command_processing.c ****                 g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].rot[i] = 0;
 11391              		.loc 1 1523 0 discriminator 3
 11392 1124 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11393 1126 5D49     		ldr	r1, .L477
 11394 1128 1346     		mov	r3, r2
 11395 112a DB00     		lsls	r3, r3, #3
 11396 112c 9B1A     		subs	r3, r3, r2
 11397 112e 1B01     		lsls	r3, r3, #4
 11398 1130 0B44     		add	r3, r3, r1
 11399 1132 03F58873 		add	r3, r3, #272
 11400 1136 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11401 1138 1846     		mov	r0, r3
 11402 113a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11403 113c 5949     		ldr	r1, .L477+8
 11404 113e 3422     		movs	r2, #52
 11405 1140 02FB00F2 		mul	r2, r2, r0
 11406 1144 0A44     		add	r2, r2, r1
 11407 1146 1344     		add	r3, r3, r2
 11408 1148 1833     		adds	r3, r3, #24
 11409 114a 0022     		movs	r2, #0
 11410 114c 1A70     		strb	r2, [r3]
1519:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 11411              		.loc 1 1519 0 discriminator 3
 11412 114e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11413 1150 0133     		adds	r3, r3, #1
 11414 1152 FB75     		strb	r3, [r7, #23]
 11415              	.L457:
1519:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 11416              		.loc 1 1519 0 is_stmt 0 discriminator 1
 11417 1154 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11418 1156 022B     		cmp	r3, #2
 11419 1158 7FF67DAF 		bls	.L458
1524:..\src/command_processing.c ****             }
1525:..\src/command_processing.c ****             reset_last_value_flag = 1;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 259


 11420              		.loc 1 1525 0 is_stmt 1
 11421 115c 524B     		ldr	r3, .L477+12
 11422 115e 0122     		movs	r2, #1
 11423 1160 1A70     		strb	r2, [r3]
1526:..\src/command_processing.c ****             break;
 11424              		.loc 1 1526 0
 11425 1162 8AE1     		b	.L403
 11426              	.L386:
1527:..\src/command_processing.c ****     
1528:..\src/command_processing.c ****         case 53:        // Second Motor Position limits
1529:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]
 11427              		.loc 1 1529 0
 11428 1164 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11429 1166 4E4B     		ldr	r3, .L477+4
 11430 1168 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 11431 116a 1906     		lsls	r1, r3, #24
 11432 116c 4C4B     		ldr	r3, .L477+4
 11433 116e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 11434 1170 1B04     		lsls	r3, r3, #16
 11435 1172 1943     		orrs	r1, r1, r3
 11436 1174 4A4B     		ldr	r3, .L477+4
 11437 1176 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 11438 1178 1B02     		lsls	r3, r3, #8
 11439 117a 0B43     		orrs	r3, r3, r1
 11440 117c 4849     		ldr	r1, .L477+4
 11441 117e 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 11442 1180 1943     		orrs	r1, r1, r3
 11443 1182 4648     		ldr	r0, .L477
 11444 1184 1346     		mov	r3, r2
 11445 1186 DB00     		lsls	r3, r3, #3
 11446 1188 9B1A     		subs	r3, r3, r2
 11447 118a 1B01     		lsls	r3, r3, #4
 11448 118c 0344     		add	r3, r3, r0
 11449 118e E433     		adds	r3, r3, #228
 11450 1190 1960     		str	r1, [r3]
1530:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]
 11451              		.loc 1 1530 0
 11452 1192 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11453 1194 424B     		ldr	r3, .L477+4
 11454 1196 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 11455 1198 1906     		lsls	r1, r3, #24
 11456 119a 414B     		ldr	r3, .L477+4
 11457 119c 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 11458 119e 1B04     		lsls	r3, r3, #16
 11459 11a0 1943     		orrs	r1, r1, r3
 11460 11a2 3F4B     		ldr	r3, .L477+4
 11461 11a4 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 11462 11a6 1B02     		lsls	r3, r3, #8
 11463 11a8 0B43     		orrs	r3, r3, r1
 11464 11aa 3D49     		ldr	r1, .L477+4
 11465 11ac 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 11466 11ae 1943     		orrs	r1, r1, r3
 11467 11b0 3A48     		ldr	r0, .L477
 11468 11b2 1346     		mov	r3, r2
 11469 11b4 DB00     		lsls	r3, r3, #3
 11470 11b6 9B1A     		subs	r3, r3, r2
 11471 11b8 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 260


 11472 11ba 0344     		add	r3, r3, r0
 11473 11bc E833     		adds	r3, r3, #232
 11474 11be 1960     		str	r1, [r3]
1531:..\src/command_processing.c **** 
1532:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf <
 11475              		.loc 1 1532 0
 11476 11c0 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11477 11c2 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11478 11c4 3548     		ldr	r0, .L477
 11479 11c6 0B46     		mov	r3, r1
 11480 11c8 DB00     		lsls	r3, r3, #3
 11481 11ca 5B1A     		subs	r3, r3, r1
 11482 11cc 1B01     		lsls	r3, r3, #4
 11483 11ce 0344     		add	r3, r3, r0
 11484 11d0 E433     		adds	r3, r3, #228
 11485 11d2 1868     		ldr	r0, [r3]
 11486 11d4 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11487 11d6 314C     		ldr	r4, .L477
 11488 11d8 0B46     		mov	r3, r1
 11489 11da DB00     		lsls	r3, r3, #3
 11490 11dc 5B1A     		subs	r3, r3, r1
 11491 11de 1B01     		lsls	r3, r3, #4
 11492 11e0 2344     		add	r3, r3, r4
 11493 11e2 03F58873 		add	r3, r3, #272
 11494 11e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11495 11e8 1C46     		mov	r4, r3
 11496 11ea 2C49     		ldr	r1, .L477
 11497 11ec 2346     		mov	r3, r4
 11498 11ee 5B00     		lsls	r3, r3, #1
 11499 11f0 2344     		add	r3, r3, r4
 11500 11f2 1B01     		lsls	r3, r3, #4
 11501 11f4 0B44     		add	r3, r3, r1
 11502 11f6 03F29513 		addw	r3, r3, #405
 11503 11fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11504 11fc 00FA03F1 		lsl	r1, r0, r3
 11505 1200 2648     		ldr	r0, .L477
 11506 1202 1346     		mov	r3, r2
 11507 1204 DB00     		lsls	r3, r3, #3
 11508 1206 9B1A     		subs	r3, r3, r2
 11509 1208 1B01     		lsls	r3, r3, #4
 11510 120a 0344     		add	r3, r3, r0
 11511 120c E433     		adds	r3, r3, #228
 11512 120e 1960     		str	r1, [r3]
1533:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup <
 11513              		.loc 1 1533 0
 11514 1210 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11515 1212 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11516 1214 2148     		ldr	r0, .L477
 11517 1216 0B46     		mov	r3, r1
 11518 1218 DB00     		lsls	r3, r3, #3
 11519 121a 5B1A     		subs	r3, r3, r1
 11520 121c 1B01     		lsls	r3, r3, #4
 11521 121e 0344     		add	r3, r3, r0
 11522 1220 E833     		adds	r3, r3, #232
 11523 1222 1868     		ldr	r0, [r3]
 11524 1224 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11525 1226 1D4C     		ldr	r4, .L477
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 261


 11526 1228 0B46     		mov	r3, r1
 11527 122a DB00     		lsls	r3, r3, #3
 11528 122c 5B1A     		subs	r3, r3, r1
 11529 122e 1B01     		lsls	r3, r3, #4
 11530 1230 2344     		add	r3, r3, r4
 11531 1232 03F58873 		add	r3, r3, #272
 11532 1236 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11533 1238 1C46     		mov	r4, r3
 11534 123a 1849     		ldr	r1, .L477
 11535 123c 2346     		mov	r3, r4
 11536 123e 5B00     		lsls	r3, r3, #1
 11537 1240 2344     		add	r3, r3, r4
 11538 1242 1B01     		lsls	r3, r3, #4
 11539 1244 0B44     		add	r3, r3, r1
 11540 1246 03F29513 		addw	r3, r3, #405
 11541 124a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11542 124c 00FA03F1 		lsl	r1, r0, r3
 11543 1250 1248     		ldr	r0, .L477
 11544 1252 1346     		mov	r3, r2
 11545 1254 DB00     		lsls	r3, r3, #3
 11546 1256 9B1A     		subs	r3, r3, r2
 11547 1258 1B01     		lsls	r3, r3, #4
 11548 125a 0344     		add	r3, r3, r0
 11549 125c E833     		adds	r3, r3, #232
 11550 125e 1960     		str	r1, [r3]
1534:..\src/command_processing.c ****             break;
 11551              		.loc 1 1534 0
 11552 1260 0BE1     		b	.L403
 11553              	.L387:
1535:..\src/command_processing.c ****             
1536:..\src/command_processing.c ****         case 61:        // Second Motor Driver Type
1537:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 11554              		.loc 1 1537 0
 11555 1262 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11556 1264 0E4B     		ldr	r3, .L477+4
 11557 1266 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 11558 1268 0C49     		ldr	r1, .L477
 11559 126a 1346     		mov	r3, r2
 11560 126c DB00     		lsls	r3, r3, #3
 11561 126e 9B1A     		subs	r3, r3, r2
 11562 1270 1B01     		lsls	r3, r3, #4
 11563 1272 0B44     		add	r3, r3, r1
 11564 1274 E233     		adds	r3, r3, #226
 11565 1276 0246     		mov	r2, r0
 11566 1278 1A70     		strb	r2, [r3]
1538:..\src/command_processing.c ****             MOTOR_DRIVER_TYPE_Write((g_mem.motor[1].motor_driver_type << 1) | g_mem.motor[0].motor_
 11567              		.loc 1 1538 0
 11568 127a 084B     		ldr	r3, .L477
 11569 127c 93F85231 		ldrb	r3, [r3, #338]	@ zero_extendqisi2
 11570 1280 5B00     		lsls	r3, r3, #1
 11571 1282 5AB2     		sxtb	r2, r3
 11572 1284 054B     		ldr	r3, .L477
 11573 1286 93F8E230 		ldrb	r3, [r3, #226]	@ zero_extendqisi2
 11574 128a 5BB2     		sxtb	r3, r3
 11575 128c 1343     		orrs	r3, r3, r2
 11576 128e 5BB2     		sxtb	r3, r3
 11577 1290 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 262


 11578 1292 1846     		mov	r0, r3
 11579 1294 FFF7FEFF 		bl	MOTOR_DRIVER_TYPE_Write
1539:..\src/command_processing.c ****             break;
 11580              		.loc 1 1539 0
 11581 1298 EFE0     		b	.L403
 11582              	.L478:
 11583 129a 00BF     		.align	2
 11584              	.L477:
 11585 129c 00000000 		.word	g_mem
 11586 12a0 00000000 		.word	g_rx
 11587 12a4 00000000 		.word	g_meas
 11588 12a8 00000000 		.word	reset_last_value_flag
 11589              	.L388:
1540:..\src/command_processing.c **** 
1541:..\src/command_processing.c ****         case 74:        // Device type
1542:..\src/command_processing.c ****             g_mem.dev.dev_type = g_rx.buffer[3];
 11590              		.loc 1 1542 0
 11591 12ac 754B     		ldr	r3, .L479
 11592 12ae DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 11593 12b0 754B     		ldr	r3, .L479+4
 11594 12b2 83F8AC20 		strb	r2, [r3, #172]
1543:..\src/command_processing.c ****             
1544:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    // change also gears parameters
 11595              		.loc 1 1544 0
 11596 12b6 744B     		ldr	r3, .L479+4
 11597 12b8 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 11598 12bc 002B     		cmp	r3, #0
 11599 12be 40F09D80 		bne	.L459
1545:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 11600              		.loc 1 1545 0
 11601 12c2 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11602 12c4 7049     		ldr	r1, .L479+4
 11603 12c6 1346     		mov	r3, r2
 11604 12c8 DB00     		lsls	r3, r3, #3
 11605 12ca 9B1A     		subs	r3, r3, r2
 11606 12cc 1B01     		lsls	r3, r3, #4
 11607 12ce 0B44     		add	r3, r3, r1
 11608 12d0 03F58873 		add	r3, r3, #272
 11609 12d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11610 12d6 1946     		mov	r1, r3
 11611 12d8 6B4A     		ldr	r2, .L479+4
 11612 12da 0B46     		mov	r3, r1
 11613 12dc 5B00     		lsls	r3, r3, #1
 11614 12de 0B44     		add	r3, r3, r1
 11615 12e0 1B01     		lsls	r3, r3, #4
 11616 12e2 1344     		add	r3, r3, r2
 11617 12e4 03F5D873 		add	r3, r3, #432
 11618 12e8 0122     		movs	r2, #1
 11619 12ea 1A70     		strb	r2, [r3]
1546:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 11620              		.loc 1 1546 0
 11621 12ec 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11622 12ee 6649     		ldr	r1, .L479+4
 11623 12f0 1346     		mov	r3, r2
 11624 12f2 DB00     		lsls	r3, r3, #3
 11625 12f4 9B1A     		subs	r3, r3, r2
 11626 12f6 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 263


 11627 12f8 0B44     		add	r3, r3, r1
 11628 12fa 03F58873 		add	r3, r3, #272
 11629 12fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11630 1300 1946     		mov	r1, r3
 11631 1302 614A     		ldr	r2, .L479+4
 11632 1304 0B46     		mov	r3, r1
 11633 1306 5B00     		lsls	r3, r3, #1
 11634 1308 0B44     		add	r3, r3, r1
 11635 130a 1B01     		lsls	r3, r3, #4
 11636 130c 1344     		add	r3, r3, r2
 11637 130e 03F2B513 		addw	r3, r3, #437
 11638 1312 2322     		movs	r2, #35
 11639 1314 1A70     		strb	r2, [r3]
1547:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 11640              		.loc 1 1547 0
 11641 1316 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11642 1318 5B49     		ldr	r1, .L479+4
 11643 131a 1346     		mov	r3, r2
 11644 131c DB00     		lsls	r3, r3, #3
 11645 131e 9B1A     		subs	r3, r3, r2
 11646 1320 1B01     		lsls	r3, r3, #4
 11647 1322 0B44     		add	r3, r3, r1
 11648 1324 03F58873 		add	r3, r3, #272
 11649 1328 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11650 132a 1946     		mov	r1, r3
 11651 132c 564A     		ldr	r2, .L479+4
 11652 132e 0B46     		mov	r3, r1
 11653 1330 5B00     		lsls	r3, r3, #1
 11654 1332 0B44     		add	r3, r3, r1
 11655 1334 1B01     		lsls	r3, r3, #4
 11656 1336 1344     		add	r3, r3, r2
 11657 1338 03F5DB73 		add	r3, r3, #438
 11658 133c 0322     		movs	r2, #3
 11659 133e 1A70     		strb	r2, [r3]
1548:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 11660              		.loc 1 1548 0
 11661 1340 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11662 1342 5149     		ldr	r1, .L479+4
 11663 1344 1346     		mov	r3, r2
 11664 1346 DB00     		lsls	r3, r3, #3
 11665 1348 9B1A     		subs	r3, r3, r2
 11666 134a 1B01     		lsls	r3, r3, #4
 11667 134c 0B44     		add	r3, r3, r1
 11668 134e 03F58873 		add	r3, r3, #272
 11669 1352 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11670 1354 1946     		mov	r1, r3
 11671 1356 4C4A     		ldr	r2, .L479+4
 11672 1358 0B46     		mov	r3, r1
 11673 135a 5B00     		lsls	r3, r3, #1
 11674 135c 0B44     		add	r3, r3, r1
 11675 135e 1B01     		lsls	r3, r3, #4
 11676 1360 1344     		add	r3, r3, r2
 11677 1362 03F2B713 		addw	r3, r3, #439
 11678 1366 FF22     		movs	r2, #255
 11679 1368 1A70     		strb	r2, [r3]
1549:..\src/command_processing.c ****                 
1550:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 264


1551:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 11680              		.loc 1 1551 0
 11681 136a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11682 136c 464B     		ldr	r3, .L479+4
 11683 136e 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 11684 1372 4549     		ldr	r1, .L479+4
 11685 1374 1346     		mov	r3, r2
 11686 1376 DB00     		lsls	r3, r3, #3
 11687 1378 9B1A     		subs	r3, r3, r2
 11688 137a 1B01     		lsls	r3, r3, #4
 11689 137c 0B44     		add	r3, r3, r1
 11690 137e 03F58873 		add	r3, r3, #272
 11691 1382 0246     		mov	r2, r0
 11692 1384 1A70     		strb	r2, [r3]
1552:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 11693              		.loc 1 1552 0
 11694 1386 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11695 1388 3F49     		ldr	r1, .L479+4
 11696 138a 1346     		mov	r3, r2
 11697 138c DB00     		lsls	r3, r3, #3
 11698 138e 9B1A     		subs	r3, r3, r2
 11699 1390 1B01     		lsls	r3, r3, #4
 11700 1392 0B44     		add	r3, r3, r1
 11701 1394 03F21113 		addw	r3, r3, #273
 11702 1398 0122     		movs	r2, #1
 11703 139a 1A70     		strb	r2, [r3]
1553:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 11704              		.loc 1 1553 0
 11705 139c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11706 139e 3A49     		ldr	r1, .L479+4
 11707 13a0 1346     		mov	r3, r2
 11708 13a2 DB00     		lsls	r3, r3, #3
 11709 13a4 9B1A     		subs	r3, r3, r2
 11710 13a6 1B01     		lsls	r3, r3, #4
 11711 13a8 0B44     		add	r3, r3, r1
 11712 13aa 03F58973 		add	r3, r3, #274
 11713 13ae 0122     		movs	r2, #1
 11714 13b0 1A70     		strb	r2, [r3]
1554:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 11715              		.loc 1 1554 0
 11716 13b2 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11717 13b4 3449     		ldr	r1, .L479+4
 11718 13b6 1346     		mov	r3, r2
 11719 13b8 DB00     		lsls	r3, r3, #3
 11720 13ba 9B1A     		subs	r3, r3, r2
 11721 13bc 1B01     		lsls	r3, r3, #4
 11722 13be 0B44     		add	r3, r3, r1
 11723 13c0 E433     		adds	r3, r3, #228
 11724 13c2 0022     		movs	r2, #0
 11725 13c4 1A60     		str	r2, [r3]
1555:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[0].encod
 11726              		.loc 1 1555 0
 11727 13c6 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11728 13c8 2F4B     		ldr	r3, .L479+4
 11729 13ca 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 11730 13ce 1846     		mov	r0, r3
 11731 13d0 2D49     		ldr	r1, .L479+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 265


 11732 13d2 0346     		mov	r3, r0
 11733 13d4 5B00     		lsls	r3, r3, #1
 11734 13d6 0344     		add	r3, r3, r0
 11735 13d8 1B01     		lsls	r3, r3, #4
 11736 13da 0B44     		add	r3, r3, r1
 11737 13dc 03F29513 		addw	r3, r3, #405
 11738 13e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11739 13e2 1946     		mov	r1, r3
 11740 13e4 4FF47A53 		mov	r3, #16000
 11741 13e8 03FA01F1 		lsl	r1, r3, r1
 11742 13ec 2648     		ldr	r0, .L479+4
 11743 13ee 1346     		mov	r3, r2
 11744 13f0 DB00     		lsls	r3, r3, #3
 11745 13f2 9B1A     		subs	r3, r3, r2
 11746 13f4 1B01     		lsls	r3, r3, #4
 11747 13f6 0344     		add	r3, r3, r0
 11748 13f8 E833     		adds	r3, r3, #232
 11749 13fa 1960     		str	r1, [r3]
 11750              	.L459:
1556:..\src/command_processing.c ****             }      
1557:..\src/command_processing.c ****             
1558:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_2_MOTORS){    // activate also 2nd motor and double_
 11751              		.loc 1 1558 0
 11752 13fc 224B     		ldr	r3, .L479+4
 11753 13fe 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 11754 1402 042B     		cmp	r3, #4
 11755 1404 38D1     		bne	.L466
1559:..\src/command_processing.c ****                 g_mem.dev.use_2nd_motor_flag = TRUE;
 11756              		.loc 1 1559 0
 11757 1406 204B     		ldr	r3, .L479+4
 11758 1408 0122     		movs	r2, #1
 11759 140a 83F8A920 		strb	r2, [r3, #169]
1560:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 11760              		.loc 1 1560 0
 11761 140e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11762 1410 1D49     		ldr	r1, .L479+4
 11763 1412 1346     		mov	r3, r2
 11764 1414 DB00     		lsls	r3, r3, #3
 11765 1416 9B1A     		subs	r3, r3, r2
 11766 1418 1B01     		lsls	r3, r3, #4
 11767 141a 0B44     		add	r3, r3, r1
 11768 141c 03F58873 		add	r3, r3, #272
 11769 1420 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11770 1422 1946     		mov	r1, r3
 11771 1424 184A     		ldr	r2, .L479+4
 11772 1426 0B46     		mov	r3, r1
 11773 1428 5B00     		lsls	r3, r3, #1
 11774 142a 0B44     		add	r3, r3, r1
 11775 142c 1B01     		lsls	r3, r3, #4
 11776 142e 1344     		add	r3, r3, r2
 11777 1430 03F5D873 		add	r3, r3, #432
 11778 1434 0122     		movs	r2, #1
 11779 1436 1A70     		strb	r2, [r3]
1561:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 11780              		.loc 1 1561 0
 11781 1438 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11782 143a 1349     		ldr	r1, .L479+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 266


 11783 143c 1346     		mov	r3, r2
 11784 143e DB00     		lsls	r3, r3, #3
 11785 1440 9B1A     		subs	r3, r3, r2
 11786 1442 1B01     		lsls	r3, r3, #4
 11787 1444 0B44     		add	r3, r3, r1
 11788 1446 03F58873 		add	r3, r3, #272
 11789 144a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11790 144c 1946     		mov	r1, r3
 11791 144e 0E4A     		ldr	r2, .L479+4
 11792 1450 0B46     		mov	r3, r1
 11793 1452 5B00     		lsls	r3, r3, #1
 11794 1454 0B44     		add	r3, r3, r1
 11795 1456 1B01     		lsls	r3, r3, #4
 11796 1458 1344     		add	r3, r3, r2
 11797 145a 03F5D873 		add	r3, r3, #432
 11798 145e 0122     		movs	r2, #1
 11799 1460 1A70     		strb	r2, [r3]
1562:..\src/command_processing.c ****             }      
1563:..\src/command_processing.c ****             
1564:..\src/command_processing.c ****             break;
 11800              		.loc 1 1564 0
 11801 1462 09E0     		b	.L466
 11802              	.L461:
1565:..\src/command_processing.c ****             
1566:..\src/command_processing.c ****         default:
1567:..\src/command_processing.c ****             break;
 11803              		.loc 1 1567 0
 11804 1464 00BF     		nop
 11805 1466 08E0     		b	.L403
 11806              	.L462:
1366:..\src/command_processing.c ****             
 11807              		.loc 1 1366 0
 11808 1468 00BF     		nop
 11809 146a 06E0     		b	.L403
 11810              	.L463:
1394:..\src/command_processing.c **** 
 11811              		.loc 1 1394 0
 11812 146c 00BF     		nop
 11813 146e 04E0     		b	.L403
 11814              	.L464:
1412:..\src/command_processing.c ****             
 11815              		.loc 1 1412 0
 11816 1470 00BF     		nop
 11817 1472 02E0     		b	.L403
 11818              	.L465:
1422:..\src/command_processing.c ****            
 11819              		.loc 1 1422 0
 11820 1474 00BF     		nop
 11821 1476 00E0     		b	.L403
 11822              	.L466:
1564:..\src/command_processing.c ****             
 11823              		.loc 1 1564 0
 11824 1478 00BF     		nop
 11825              	.L403:
1568:..\src/command_processing.c ****     }
1569:..\src/command_processing.c **** }
 11826              		.loc 1 1569 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 267


 11827 147a 00BF     		nop
 11828 147c 1C37     		adds	r7, r7, #28
 11829              		.cfi_def_cfa_offset 20
 11830 147e BD46     		mov	sp, r7
 11831              		.cfi_def_cfa_register 13
 11832              		@ sp needed
 11833 1480 F0BD     		pop	{r4, r5, r6, r7, pc}
 11834              	.L480:
 11835 1482 00BF     		.align	2
 11836              	.L479:
 11837 1484 00000000 		.word	g_rx
 11838 1488 00000000 		.word	g_mem
 11839              		.cfi_endproc
 11840              	.LFE69:
 11841              		.size	set_custom_param, .-set_custom_param
 11842              		.section	.rodata
 11843 100e 0000     		.align	2
 11844              	.LC140:
 11845 1010 506F7274 		.ascii	"Port %u ID:\000"
 11845      20257520 
 11845      49443A00 
 11846              		.align	2
 11847              	.LC141:
 11848 101c 2575202D 		.ascii	"%u - Device ID:\000"
 11848      20446576 
 11848      69636520 
 11848      49443A00 
 11849              		.align	2
 11850              	.LC142:
 11851 102c 2575202D 		.ascii	"%u - IMU %d configuration:\000"
 11851      20494D55 
 11851      20256420 
 11851      636F6E66 
 11851      69677572 
 11852 1047 00       		.align	2
 11853              	.LC143:
 11854 1048 2575202D 		.ascii	"%u - SPI read delay:\000"
 11854      20535049 
 11854      20726561 
 11854      64206465 
 11854      6C61793A 
 11855 105d 000000   		.align	2
 11856              	.LC144:
 11857 1060 204E6F6E 		.ascii	" None\000"
 11857      6500
 11858 1066 0000     		.align	2
 11859              	.LC145:
 11860 1068 204C6F77 		.ascii	" Low\000"
 11860      00
 11861 106d 000000   		.align	2
 11862              	.LC146:
 11863 1070 20486967 		.ascii	" High\000"
 11863      6800
 11864 1076 0000     		.align	2
 11865              	.LC138:
 11866 1078 4E756D62 		.ascii	"Number of connected IMUs:\000"
 11866      6572206F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 268


 11866      6620636F 
 11866      6E6E6563 
 11866      74656420 
 11867 1092 0000     		.align	2
 11868              	.LC139:
 11869 1094 4D616720 		.ascii	"Mag cal parameters:\000"
 11869      63616C20 
 11869      70617261 
 11869      6D657465 
 11869      72733A00 
 11870              		.section	.text.get_IMU_param_list,"ax",%progbits
 11871              		.align	2
 11872              		.global	get_IMU_param_list
 11873              		.thumb
 11874              		.thumb_func
 11875              		.type	get_IMU_param_list, %function
 11876              	get_IMU_param_list:
 11877              	.LFB70:
1570:..\src/command_processing.c **** 
1571:..\src/command_processing.c **** //==============================================================================
1572:..\src/command_processing.c **** //                                                        GET IMU PARAMETER LIST
1573:..\src/command_processing.c **** //==============================================================================
1574:..\src/command_processing.c **** 
1575:..\src/command_processing.c **** void get_IMU_param_list(uint16 index)
1576:..\src/command_processing.c **** {
 11878              		.loc 1 1576 0
 11879              		.cfi_startproc
 11880              		@ args = 0, pretend = 0, frame = 1704
 11881              		@ frame_needed = 1, uses_anonymous_args = 0
 11882 0000 B0B5     		push	{r4, r5, r7, lr}
 11883              		.cfi_def_cfa_offset 16
 11884              		.cfi_offset 4, -16
 11885              		.cfi_offset 5, -12
 11886              		.cfi_offset 7, -8
 11887              		.cfi_offset 14, -4
 11888 0002 ADF5D56D 		sub	sp, sp, #1704
 11889              		.cfi_def_cfa_offset 1720
 11890 0006 00AF     		add	r7, sp, #0
 11891              		.cfi_def_cfa_register 7
 11892 0008 0246     		mov	r2, r0
 11893 000a BB1D     		adds	r3, r7, #6
 11894 000c 1A80     		strh	r2, [r3]	@ movhi
1577:..\src/command_processing.c ****     //Package to be sent variables
1578:..\src/command_processing.c ****     uint8 packet_data[  PARAM_BYTE_SLOT   +     // Number of connected IMUs
 11895              		.loc 1 1578 0
 11896 000e 07F58A73 		add	r3, r7, #276
 11897 0012 0022     		movs	r2, #0
 11898 0014 1A60     		str	r2, [r3]
 11899 0016 0433     		adds	r3, r3, #4
 11900 0018 40F27552 		movw	r2, #1397
 11901 001c 0021     		movs	r1, #0
 11902 001e 1846     		mov	r0, r3
 11903 0020 FFF7FEFF 		bl	memset
1579:..\src/command_processing.c ****                         7*PARAM_BYTE_SLOT +     // IMUs ID  (1 port instead of 7)
1580:..\src/command_processing.c ****                         9*PARAM_BYTE_SLOT +     // Mag cal parameters (1 row instead of 9)
1581:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // 1 - Device ID
1582:..\src/command_processing.c ****                         PARAM_BYTE_SLOT*N_IMU_MAX + // IMU configurations
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 269


1583:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // SPI read delay
1584:..\src/command_processing.c ****                         PARAM_MENU_SLOT   + PARAM_BYTE_SLOT + 1 ] = "";
1585:..\src/command_processing.c ****     uint16 num_imus_id_params = 7;      //(1 port instead of 7)
 11904              		.loc 1 1585 0
 11905 0024 0723     		movs	r3, #7
 11906 0026 A7F89A36 		strh	r3, [r7, #1690]	@ movhi
1586:..\src/command_processing.c ****     uint16 num_mag_cal_params = 0;
 11907              		.loc 1 1586 0
 11908 002a 0023     		movs	r3, #0
 11909 002c A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1587:..\src/command_processing.c ****     uint16 first_imu_parameter = 2;
 11910              		.loc 1 1587 0
 11911 0030 0223     		movs	r3, #2
 11912 0032 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1588:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 11913              		.loc 1 1588 0
 11914 0036 B7F89A36 		ldrh	r3, [r7, #1690]
 11915 003a 5A1C     		adds	r2, r3, #1
1589:..\src/command_processing.c ****                            num_imus_id_params*PARAM_BYTE_SLOT +
 11916              		.loc 1 1589 0
 11917 003c B7F8A636 		ldrh	r3, [r7, #1702]
 11918 0040 1344     		add	r3, r3, r2
1590:..\src/command_processing.c ****                            num_mag_cal_params*PARAM_BYTE_SLOT +
 11919              		.loc 1 1590 0
 11920 0042 0133     		adds	r3, r3, #1
1588:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 11921              		.loc 1 1588 0
 11922 0044 9AB2     		uxth	r2, r3
 11923 0046 D24B     		ldr	r3, .L527
 11924 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11925 004a 9BB2     		uxth	r3, r3
 11926 004c 1344     		add	r3, r3, r2
 11927 004e 9BB2     		uxth	r3, r3
 11928 0050 1A46     		mov	r2, r3	@ movhi
 11929 0052 9200     		lsls	r2, r2, #2
 11930 0054 1344     		add	r3, r3, r2
 11931 0056 1A46     		mov	r2, r3	@ movhi
 11932 0058 9100     		lsls	r1, r2, #2
 11933 005a 1A46     		mov	r2, r3	@ movhi
 11934 005c 0B46     		mov	r3, r1	@ movhi
 11935 005e 1344     		add	r3, r3, r2
 11936 0060 5B00     		lsls	r3, r3, #1
 11937 0062 9BB2     		uxth	r3, r3
 11938 0064 FB33     		adds	r3, r3, #251
 11939 0066 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1591:..\src/command_processing.c ****                            PARAM_BYTE_SLOT   + 
1592:..\src/command_processing.c ****                            (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1593:..\src/command_processing.c ****                            PARAM_BYTE_SLOT + PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1594:..\src/command_processing.c **** 
1595:..\src/command_processing.c ****     //Auxiliary variables
1596:..\src/command_processing.c ****     uint16 CYDATA i, j, k, h;
1597:..\src/command_processing.c ****     uint16 start_byte = 0;
 11940              		.loc 1 1597 0
 11941 006a 0023     		movs	r3, #0
 11942 006c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1598:..\src/command_processing.c **** 
1599:..\src/command_processing.c ****     //Parameters menu string definitions
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 270


1600:..\src/command_processing.c ****     char n_imu_str[26]          = "Number of connected IMUs:";
 11943              		.loc 1 1600 0
 11944 0070 07F1F803 		add	r3, r7, #248
 11945 0074 C74A     		ldr	r2, .L527+4
 11946 0076 1C46     		mov	r4, r3
 11947 0078 1546     		mov	r5, r2
 11948 007a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 11949 007c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 11950 007e 95E80700 		ldmia	r5, {r0, r1, r2}
 11951 0082 03C4     		stmia	r4!, {r0, r1}
 11952 0084 2280     		strh	r2, [r4]	@ movhi
1601:..\src/command_processing.c ****     char ids_str[11]            = "";
 11953              		.loc 1 1601 0
 11954 0086 07F1EC03 		add	r3, r7, #236
 11955 008a 0022     		movs	r2, #0
 11956 008c 1A60     		str	r2, [r3]
 11957 008e 0433     		adds	r3, r3, #4
 11958 0090 0022     		movs	r2, #0
 11959 0092 1A60     		str	r2, [r3]
 11960 0094 C3F80320 		str	r2, [r3, #3]	@ unaligned
1602:..\src/command_processing.c ****     char mag_param_str[20]      = "Mag cal parameters:";
 11961              		.loc 1 1602 0
 11962 0098 07F1D803 		add	r3, r7, #216
 11963 009c BE4A     		ldr	r2, .L527+8
 11964 009e 1C46     		mov	r4, r3
 11965 00a0 1546     		mov	r5, r2
 11966 00a2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 11967 00a4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 11968 00a6 2B68     		ldr	r3, [r5]
 11969 00a8 2360     		str	r3, [r4]
1603:..\src/command_processing.c ****     char id_str[16]             = "";
 11970              		.loc 1 1603 0
 11971 00aa 07F1C803 		add	r3, r7, #200
 11972 00ae 0022     		movs	r2, #0
 11973 00b0 1A60     		str	r2, [r3]
 11974 00b2 0433     		adds	r3, r3, #4
 11975 00b4 0022     		movs	r2, #0
 11976 00b6 1A60     		str	r2, [r3]
 11977 00b8 5A60     		str	r2, [r3, #4]
 11978 00ba 9A60     		str	r2, [r3, #8]
1604:..\src/command_processing.c ****     char imu_table_str[42]      = "";
 11979              		.loc 1 1604 0
 11980 00bc 07F19C03 		add	r3, r7, #156
 11981 00c0 0022     		movs	r2, #0
 11982 00c2 1A60     		str	r2, [r3]
 11983 00c4 0433     		adds	r3, r3, #4
 11984 00c6 2622     		movs	r2, #38
 11985 00c8 0021     		movs	r1, #0
 11986 00ca 1846     		mov	r0, r3
 11987 00cc FFF7FEFF 		bl	memset
1605:..\src/command_processing.c ****     char spi_read_delay_str[26] = "";
 11988              		.loc 1 1605 0
 11989 00d0 07F18003 		add	r3, r7, #128
 11990 00d4 0022     		movs	r2, #0
 11991 00d6 1A60     		str	r2, [r3]
 11992 00d8 0433     		adds	r3, r3, #4
 11993 00da 0022     		movs	r2, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 271


 11994 00dc 1A60     		str	r2, [r3]
 11995 00de 5A60     		str	r2, [r3, #4]
 11996 00e0 9A60     		str	r2, [r3, #8]
 11997 00e2 DA60     		str	r2, [r3, #12]
 11998 00e4 1A61     		str	r2, [r3, #16]
 11999 00e6 9A82     		strh	r2, [r3, #20]	@ movhi
1606:..\src/command_processing.c ****     
1607:..\src/command_processing.c ****     //Strings lenghts
1608:..\src/command_processing.c ****     uint8 CYDATA id_str_len = strlen(id_str);
 12000              		.loc 1 1608 0
 12001 00e8 07F1C803 		add	r3, r7, #200
 12002 00ec 1846     		mov	r0, r3
 12003 00ee FFF7FEFF 		bl	strlen
 12004 00f2 0346     		mov	r3, r0
 12005 00f4 87F89336 		strb	r3, [r7, #1683]
1609:..\src/command_processing.c ****     uint8 CYDATA n_imu_str_len = strlen(n_imu_str);
 12006              		.loc 1 1609 0
 12007 00f8 07F1F803 		add	r3, r7, #248
 12008 00fc 1846     		mov	r0, r3
 12009 00fe FFF7FEFF 		bl	strlen
 12010 0102 0346     		mov	r3, r0
 12011 0104 87F89236 		strb	r3, [r7, #1682]
1610:..\src/command_processing.c ****     uint8 CYDATA ids_str_len = strlen(ids_str);
 12012              		.loc 1 1610 0
 12013 0108 07F1EC03 		add	r3, r7, #236
 12014 010c 1846     		mov	r0, r3
 12015 010e FFF7FEFF 		bl	strlen
 12016 0112 0346     		mov	r3, r0
 12017 0114 87F89136 		strb	r3, [r7, #1681]
1611:..\src/command_processing.c ****     uint8 CYDATA mag_param_str_len = strlen(mag_param_str);
 12018              		.loc 1 1611 0
 12019 0118 07F1D803 		add	r3, r7, #216
 12020 011c 1846     		mov	r0, r3
 12021 011e FFF7FEFF 		bl	strlen
 12022 0122 0346     		mov	r3, r0
 12023 0124 87F89036 		strb	r3, [r7, #1680]
1612:..\src/command_processing.c ****     uint8 CYDATA imu_table_str_len = strlen(imu_table_str);
 12024              		.loc 1 1612 0
 12025 0128 07F19C03 		add	r3, r7, #156
 12026 012c 1846     		mov	r0, r3
 12027 012e FFF7FEFF 		bl	strlen
 12028 0132 0346     		mov	r3, r0
 12029 0134 87F88F36 		strb	r3, [r7, #1679]
1613:..\src/command_processing.c ****     uint8 CYDATA spi_read_delay_str_len = strlen(spi_read_delay_str);
 12030              		.loc 1 1613 0
 12031 0138 07F18003 		add	r3, r7, #128
 12032 013c 1846     		mov	r0, r3
 12033 013e FFF7FEFF 		bl	strlen
 12034 0142 0346     		mov	r3, r0
 12035 0144 87F89D36 		strb	r3, [r7, #1693]
1614:..\src/command_processing.c ****     
1615:..\src/command_processing.c ****     char spi_delay_menu[118]    = "";
 12036              		.loc 1 1615 0
 12037 0148 07F10803 		add	r3, r7, #8
 12038 014c 0022     		movs	r2, #0
 12039 014e 1A60     		str	r2, [r3]
 12040 0150 0433     		adds	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 272


 12041 0152 7222     		movs	r2, #114
 12042 0154 0021     		movs	r1, #0
 12043 0156 1846     		mov	r0, r3
 12044 0158 FFF7FEFF 		bl	memset
1616:..\src/command_processing.c ****     uint8 CYDATA spi_delay_menu_len;
1617:..\src/command_processing.c ****  
1618:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 12045              		.loc 1 1618 0
 12046 015c 07F10800 		add	r0, r7, #8
 12047 0160 6423     		movs	r3, #100
 12048 0162 0A22     		movs	r2, #10
 12049 0164 8D49     		ldr	r1, .L527+12
 12050 0166 FFF7FEFF 		bl	sprintf
1619:..\src/command_processing.c ****     spi_delay_menu_len = strlen(spi_delay_menu);
 12051              		.loc 1 1619 0
 12052 016a 07F10803 		add	r3, r7, #8
 12053 016e 1846     		mov	r0, r3
 12054 0170 FFF7FEFF 		bl	strlen
 12055 0174 0346     		mov	r3, r0
 12056 0176 87F88E36 		strb	r3, [r7, #1678]
1620:..\src/command_processing.c **** 
1621:..\src/command_processing.c ****     // Compute number of read parameters depending on N_IMU_Connected and
1622:..\src/command_processing.c ****     // update packet_length
1623:..\src/command_processing.c ****     num_mag_cal_params = (uint16)(N_IMU_Connected / 2);
 12057              		.loc 1 1623 0
 12058 017a 854B     		ldr	r3, .L527
 12059 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12060 017e 5B08     		lsrs	r3, r3, #1
 12061 0180 DBB2     		uxtb	r3, r3
 12062 0182 A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1624:..\src/command_processing.c ****     if ( (N_IMU_Connected - num_mag_cal_params*2) > 0 ) num_mag_cal_params++;
 12063              		.loc 1 1624 0
 12064 0186 824B     		ldr	r3, .L527
 12065 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12066 018a 1A46     		mov	r2, r3
 12067 018c B7F8A636 		ldrh	r3, [r7, #1702]
 12068 0190 5B00     		lsls	r3, r3, #1
 12069 0192 D31A     		subs	r3, r2, r3
 12070 0194 002B     		cmp	r3, #0
 12071 0196 04DD     		ble	.L482
 12072              		.loc 1 1624 0 is_stmt 0 discriminator 1
 12073 0198 B7F8A636 		ldrh	r3, [r7, #1702]
 12074 019c 0133     		adds	r3, r3, #1
 12075 019e A7F8A636 		strh	r3, [r7, #1702]	@ movhi
 12076              	.L482:
1625:..\src/command_processing.c ****     
1626:..\src/command_processing.c ****     packet_length = PARAM_BYTE_SLOT +
 12077              		.loc 1 1626 0 is_stmt 1
 12078 01a2 B7F89A36 		ldrh	r3, [r7, #1690]
 12079 01a6 5A1C     		adds	r2, r3, #1
1627:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 12080              		.loc 1 1627 0
 12081 01a8 B7F8A636 		ldrh	r3, [r7, #1702]
 12082 01ac 1344     		add	r3, r3, r2
1628:..\src/command_processing.c ****                     num_mag_cal_params*PARAM_BYTE_SLOT +
 12083              		.loc 1 1628 0
 12084 01ae 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 273


1626:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 12085              		.loc 1 1626 0
 12086 01b0 9AB2     		uxth	r2, r3
 12087 01b2 774B     		ldr	r3, .L527
 12088 01b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12089 01b6 9BB2     		uxth	r3, r3
 12090 01b8 1344     		add	r3, r3, r2
 12091 01ba 9BB2     		uxth	r3, r3
 12092 01bc 1A46     		mov	r2, r3	@ movhi
 12093 01be 9200     		lsls	r2, r2, #2
 12094 01c0 1344     		add	r3, r3, r2
 12095 01c2 1A46     		mov	r2, r3	@ movhi
 12096 01c4 9100     		lsls	r1, r2, #2
 12097 01c6 1A46     		mov	r2, r3	@ movhi
 12098 01c8 0B46     		mov	r3, r1	@ movhi
 12099 01ca 1344     		add	r3, r3, r2
 12100 01cc 5B00     		lsls	r3, r3, #1
 12101 01ce 9BB2     		uxth	r3, r3
 12102 01d0 C933     		adds	r3, r3, #201
 12103 01d2 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1629:..\src/command_processing.c ****                     PARAM_BYTE_SLOT   + 
1630:..\src/command_processing.c ****                     (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1631:..\src/command_processing.c ****                     PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1632:..\src/command_processing.c **** 
1633:..\src/command_processing.c ****     first_imu_parameter = 1 + num_imus_id_params + num_mag_cal_params + 2;
 12104              		.loc 1 1633 0
 12105 01d6 B7F89A26 		ldrh	r2, [r7, #1690]	@ movhi
 12106 01da B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 12107 01de 1344     		add	r3, r3, r2
 12108 01e0 9BB2     		uxth	r3, r3
 12109 01e2 0333     		adds	r3, r3, #3
 12110 01e4 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1634:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_PARAM;
 12111              		.loc 1 1634 0
 12112 01e8 07F58A73 		add	r3, r7, #276
 12113 01ec A222     		movs	r2, #162
 12114 01ee 1A70     		strb	r2, [r3]
1635:..\src/command_processing.c ****     packet_data[1] = 1 + num_imus_id_params + num_mag_cal_params + 1 + (uint8)N_IMU_Connected + 1; 
 12115              		.loc 1 1635 0
 12116 01f0 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 12117 01f4 DAB2     		uxtb	r2, r3
 12118 01f6 B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 12119 01fa DBB2     		uxtb	r3, r3
 12120 01fc 1344     		add	r3, r3, r2
 12121 01fe DAB2     		uxtb	r2, r3
 12122 0200 634B     		ldr	r3, .L527
 12123 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12124 0204 1344     		add	r3, r3, r2
 12125 0206 DBB2     		uxtb	r3, r3
 12126 0208 0333     		adds	r3, r3, #3
 12127 020a DAB2     		uxtb	r2, r3
 12128 020c 07F58A73 		add	r3, r7, #276
 12129 0210 5A70     		strb	r2, [r3, #1]
1636:..\src/command_processing.c **** 
1637:..\src/command_processing.c ****     switch(index) {
 12130              		.loc 1 1637 0
 12131 0212 BB1D     		adds	r3, r7, #6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 274


 12132 0214 1B88     		ldrh	r3, [r3]
 12133 0216 002B     		cmp	r3, #0
 12134 0218 40F0D084 		bne	.L525
1638:..\src/command_processing.c ****         case 0:         //List of all parameters with relative types
1639:..\src/command_processing.c ****             /*-------------N IMU--------------*/
1640:..\src/command_processing.c ****             start_byte = 0;
 12135              		.loc 1 1640 0
 12136 021c 0023     		movs	r3, #0
 12137 021e A7F89436 		strh	r3, [r7, #1684]	@ movhi
1641:..\src/command_processing.c ****             packet_data[2] = TYPE_UINT8;
 12138              		.loc 1 1641 0
 12139 0222 07F58A73 		add	r3, r7, #276
 12140 0226 0222     		movs	r2, #2
 12141 0228 9A70     		strb	r2, [r3, #2]
1642:..\src/command_processing.c ****             packet_data[3] = 1;
 12142              		.loc 1 1642 0
 12143 022a 07F58A73 		add	r3, r7, #276
 12144 022e 0122     		movs	r2, #1
 12145 0230 DA70     		strb	r2, [r3, #3]
1643:..\src/command_processing.c ****             packet_data[4] = (uint8)N_IMU_Connected;
 12146              		.loc 1 1643 0
 12147 0232 574B     		ldr	r3, .L527
 12148 0234 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12149 0236 07F58A73 		add	r3, r7, #276
 12150 023a 1A71     		strb	r2, [r3, #4]
1644:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 12151              		.loc 1 1644 0
 12152 023c 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 12153 0240 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12154 0244 15E0     		b	.L485
 12155              	.L486:
1645:..\src/command_processing.c ****                 packet_data[5 + n_imu_str_len - i] = n_imu_str[n_imu_str_len - i];
 12156              		.loc 1 1645 0 discriminator 3
 12157 0246 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 12158 024a 5A1D     		adds	r2, r3, #5
 12159 024c B7F8A436 		ldrh	r3, [r7, #1700]
 12160 0250 D31A     		subs	r3, r2, r3
 12161 0252 97F89216 		ldrb	r1, [r7, #1682]	@ zero_extendqisi2
 12162 0256 B7F8A426 		ldrh	r2, [r7, #1700]
 12163 025a 8A1A     		subs	r2, r1, r2
 12164 025c 07F1F801 		add	r1, r7, #248
 12165 0260 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12166 0262 07F58A72 		add	r2, r7, #276
 12167 0266 D154     		strb	r1, [r2, r3]
1644:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 12168              		.loc 1 1644 0 discriminator 3
 12169 0268 B7F8A436 		ldrh	r3, [r7, #1700]
 12170 026c 013B     		subs	r3, r3, #1
 12171 026e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12172              	.L485:
1644:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 12173              		.loc 1 1644 0 is_stmt 0 discriminator 1
 12174 0272 B7F8A436 		ldrh	r3, [r7, #1700]
 12175 0276 002B     		cmp	r3, #0
 12176 0278 E5D1     		bne	.L486
1646:..\src/command_processing.c ****                 
1647:..\src/command_processing.c ****             /*-------------IMUS ID--------------*/
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 275


1648:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 12177              		.loc 1 1648 0 is_stmt 1
 12178 027a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12179 027e 3233     		adds	r3, r3, #50
 12180 0280 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1649:..\src/command_processing.c ****             i = 0;
 12181              		.loc 1 1649 0
 12182 0284 0023     		movs	r3, #0
 12183 0286 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
1650:..\src/command_processing.c ****             for (k = 0; k < num_imus_id_params; k++){
 12184              		.loc 1 1650 0
 12185 028a 0023     		movs	r3, #0
 12186 028c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12187 0290 B2E0     		b	.L487
 12188              	.L494:
1651:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 12189              		.loc 1 1651 0
 12190 0292 B7F8A026 		ldrh	r2, [r7, #1696]
 12191 0296 07F1EC03 		add	r3, r7, #236
 12192 029a 4149     		ldr	r1, .L527+16
 12193 029c 1846     		mov	r0, r3
 12194 029e FFF7FEFF 		bl	sprintf
1652:..\src/command_processing.c ****                 h = 4;
 12195              		.loc 1 1652 0
 12196 02a2 0423     		movs	r3, #4
 12197 02a4 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1653:..\src/command_processing.c ****                 ids_str_len = strlen(ids_str);
 12198              		.loc 1 1653 0
 12199 02a8 07F1EC03 		add	r3, r7, #236
 12200 02ac 1846     		mov	r0, r3
 12201 02ae FFF7FEFF 		bl	strlen
 12202 02b2 0346     		mov	r3, r0
 12203 02b4 87F89136 		strb	r3, [r7, #1681]
1654:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12204              		.loc 1 1654 0
 12205 02b8 B7F89436 		ldrh	r3, [r7, #1684]
 12206 02bc 9A1C     		adds	r2, r3, #2
 12207 02be B7F8A036 		ldrh	r3, [r7, #1696]
 12208 02c2 3221     		movs	r1, #50
 12209 02c4 01FB03F3 		mul	r3, r1, r3
 12210 02c8 1344     		add	r3, r3, r2
 12211 02ca 07F58A72 		add	r2, r7, #276
 12212 02ce 0221     		movs	r1, #2
 12213 02d0 D154     		strb	r1, [r2, r3]
1655:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 12214              		.loc 1 1655 0
 12215 02d2 B7F89436 		ldrh	r3, [r7, #1684]
 12216 02d6 DA1C     		adds	r2, r3, #3
 12217 02d8 B7F8A036 		ldrh	r3, [r7, #1696]
 12218 02dc 3221     		movs	r1, #50
 12219 02de 01FB03F3 		mul	r3, r1, r3
 12220 02e2 1344     		add	r3, r3, r2
 12221 02e4 07F58A72 		add	r2, r7, #276
 12222 02e8 0321     		movs	r1, #3
 12223 02ea D154     		strb	r1, [r2, r3]
1656:..\src/command_processing.c ****                 
1657:..\src/command_processing.c ****                 for (j = 3*k; j <= 3*k+2; j++) {  // for each possible imu on port k
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 276


 12224              		.loc 1 1657 0
 12225 02ec B7F8A036 		ldrh	r3, [r7, #1696]	@ movhi
 12226 02f0 1A46     		mov	r2, r3	@ movhi
 12227 02f2 5200     		lsls	r2, r2, #1
 12228 02f4 1344     		add	r3, r3, r2
 12229 02f6 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12230 02fa 39E0     		b	.L488
 12231              	.L491:
1658:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 12232              		.loc 1 1658 0
 12233 02fc B7F8A436 		ldrh	r3, [r7, #1700]
 12234 0300 284A     		ldr	r2, .L527+20
 12235 0302 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12236 0304 9BB2     		uxth	r3, r3
 12237 0306 B7F8A226 		ldrh	r2, [r7, #1698]
 12238 030a 9A42     		cmp	r2, r3
 12239 030c 17D1     		bne	.L489
1659:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = (uint8)IMU_connected[i];   
 12240              		.loc 1 1659 0
 12241 030e B7F89E26 		ldrh	r2, [r7, #1694]
 12242 0312 B7F89436 		ldrh	r3, [r7, #1684]
 12243 0316 1A44     		add	r2, r2, r3
 12244 0318 B7F8A036 		ldrh	r3, [r7, #1696]
 12245 031c 3221     		movs	r1, #50
 12246 031e 01FB03F3 		mul	r3, r1, r3
 12247 0322 1344     		add	r3, r3, r2
 12248 0324 B7F8A426 		ldrh	r2, [r7, #1700]
 12249 0328 1E49     		ldr	r1, .L527+20
 12250 032a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12251 032c 07F58A72 		add	r2, r7, #276
 12252 0330 D154     		strb	r1, [r2, r3]
1660:..\src/command_processing.c ****                         i++;
 12253              		.loc 1 1660 0
 12254 0332 B7F8A436 		ldrh	r3, [r7, #1700]
 12255 0336 0133     		adds	r3, r3, #1
 12256 0338 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12257 033c 0EE0     		b	.L490
 12258              	.L489:
1661:..\src/command_processing.c ****                     } 
1662:..\src/command_processing.c ****                     else {
1663:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = 255;
 12259              		.loc 1 1663 0
 12260 033e B7F89E26 		ldrh	r2, [r7, #1694]
 12261 0342 B7F89436 		ldrh	r3, [r7, #1684]
 12262 0346 1A44     		add	r2, r2, r3
 12263 0348 B7F8A036 		ldrh	r3, [r7, #1696]
 12264 034c 3221     		movs	r1, #50
 12265 034e 01FB03F3 		mul	r3, r1, r3
 12266 0352 1344     		add	r3, r3, r2
 12267 0354 07F58A72 		add	r2, r7, #276
 12268 0358 FF21     		movs	r1, #255
 12269 035a D154     		strb	r1, [r2, r3]
 12270              	.L490:
1664:..\src/command_processing.c ****                     }
1665:..\src/command_processing.c ****                     h++;
 12271              		.loc 1 1665 0 discriminator 2
 12272 035c B7F89E36 		ldrh	r3, [r7, #1694]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 277


 12273 0360 0133     		adds	r3, r3, #1
 12274 0362 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1657:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 12275              		.loc 1 1657 0 discriminator 2
 12276 0366 B7F8A236 		ldrh	r3, [r7, #1698]
 12277 036a 0133     		adds	r3, r3, #1
 12278 036c A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12279              	.L488:
1657:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 12280              		.loc 1 1657 0 is_stmt 0 discriminator 1
 12281 0370 B7F8A216 		ldrh	r1, [r7, #1698]
 12282 0374 B7F8A026 		ldrh	r2, [r7, #1696]
 12283 0378 1346     		mov	r3, r2
 12284 037a 5B00     		lsls	r3, r3, #1
 12285 037c 1344     		add	r3, r3, r2
 12286 037e 0233     		adds	r3, r3, #2
 12287 0380 9942     		cmp	r1, r3
 12288 0382 BBDD     		ble	.L491
1666:..\src/command_processing.c ****                 }
1667:..\src/command_processing.c **** 
1668:..\src/command_processing.c ****                 //if (IMU_connected[i] >= 3*k && IMU_connected[i] <= 3*k + 2)
1669:..\src/command_processing.c ****                 for(j = ids_str_len; j != 0; j--)
 12289              		.loc 1 1669 0 is_stmt 1
 12290 0384 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 12291 0388 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12292 038c 2BE0     		b	.L492
 12293              	.L528:
 12294 038e 00BF     		.align	2
 12295              	.L527:
 12296 0390 00000000 		.word	N_IMU_Connected
 12297 0394 78100000 		.word	.LC138
 12298 0398 94100000 		.word	.LC139
 12299 039c 44020000 		.word	.LC126
 12300 03a0 10100000 		.word	.LC140
 12301 03a4 00000000 		.word	IMU_connected
 12302              	.L493:
1670:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 12303              		.loc 1 1670 0 discriminator 3
 12304 03a8 B7F89436 		ldrh	r3, [r7, #1684]
 12305 03ac DA1D     		adds	r2, r3, #7
 12306 03ae B7F8A036 		ldrh	r3, [r7, #1696]
 12307 03b2 3221     		movs	r1, #50
 12308 03b4 01FB03F3 		mul	r3, r1, r3
 12309 03b8 1A44     		add	r2, r2, r3
 12310 03ba 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 12311 03be 1A44     		add	r2, r2, r3
 12312 03c0 B7F8A236 		ldrh	r3, [r7, #1698]
 12313 03c4 D31A     		subs	r3, r2, r3
 12314 03c6 97F89116 		ldrb	r1, [r7, #1681]	@ zero_extendqisi2
 12315 03ca B7F8A226 		ldrh	r2, [r7, #1698]
 12316 03ce 8A1A     		subs	r2, r1, r2
 12317 03d0 07F1EC01 		add	r1, r7, #236
 12318 03d4 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12319 03d6 07F58A72 		add	r2, r7, #276
 12320 03da D154     		strb	r1, [r2, r3]
1669:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 12321              		.loc 1 1669 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 278


 12322 03dc B7F8A236 		ldrh	r3, [r7, #1698]
 12323 03e0 013B     		subs	r3, r3, #1
 12324 03e2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12325              	.L492:
1669:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 12326              		.loc 1 1669 0 is_stmt 0 discriminator 1
 12327 03e6 B7F8A236 		ldrh	r3, [r7, #1698]
 12328 03ea 002B     		cmp	r3, #0
 12329 03ec DCD1     		bne	.L493
1650:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 12330              		.loc 1 1650 0 is_stmt 1 discriminator 2
 12331 03ee B7F8A036 		ldrh	r3, [r7, #1696]
 12332 03f2 0133     		adds	r3, r3, #1
 12333 03f4 A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12334              	.L487:
1650:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 12335              		.loc 1 1650 0 is_stmt 0 discriminator 1
 12336 03f8 B7F8A026 		ldrh	r2, [r7, #1696]
 12337 03fc B7F89A36 		ldrh	r3, [r7, #1690]
 12338 0400 9A42     		cmp	r2, r3
 12339 0402 FFF446AF 		bcc	.L494
1671:..\src/command_processing.c ****             }
1672:..\src/command_processing.c ****             
1673:..\src/command_processing.c ****             /*-------------GET MAG PARAM--------------*/
1674:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_imus_id_params;
 12340              		.loc 1 1674 0 is_stmt 1
 12341 0406 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 12342 040a 1A46     		mov	r2, r3	@ movhi
 12343 040c 9200     		lsls	r2, r2, #2
 12344 040e 1344     		add	r3, r3, r2
 12345 0410 1A46     		mov	r2, r3	@ movhi
 12346 0412 9100     		lsls	r1, r2, #2
 12347 0414 1A46     		mov	r2, r3	@ movhi
 12348 0416 0B46     		mov	r3, r1	@ movhi
 12349 0418 1344     		add	r3, r3, r2
 12350 041a 5B00     		lsls	r3, r3, #1
 12351 041c 9AB2     		uxth	r2, r3
 12352 041e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12353 0422 1344     		add	r3, r3, r2
 12354 0424 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1675:..\src/command_processing.c ****             for (k = 0; k < num_mag_cal_params; k++){
 12355              		.loc 1 1675 0
 12356 0428 0023     		movs	r3, #0
 12357 042a A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12358 042e 1FE1     		b	.L495
 12359              	.L502:
1676:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12360              		.loc 1 1676 0
 12361 0430 B7F89436 		ldrh	r3, [r7, #1684]
 12362 0434 9A1C     		adds	r2, r3, #2
 12363 0436 B7F8A036 		ldrh	r3, [r7, #1696]
 12364 043a 3221     		movs	r1, #50
 12365 043c 01FB03F3 		mul	r3, r1, r3
 12366 0440 1344     		add	r3, r3, r2
 12367 0442 07F58A72 		add	r2, r7, #276
 12368 0446 0221     		movs	r1, #2
 12369 0448 D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 279


1677:..\src/command_processing.c ****                 
1678:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 12370              		.loc 1 1678 0
 12371 044a B7F89436 		ldrh	r3, [r7, #1684]
 12372 044e DA1C     		adds	r2, r3, #3
 12373 0450 B7F8A036 		ldrh	r3, [r7, #1696]
 12374 0454 3221     		movs	r1, #50
 12375 0456 01FB03F3 		mul	r3, r1, r3
 12376 045a 1344     		add	r3, r3, r2
 12377 045c 07F58A72 		add	r2, r7, #276
 12378 0460 0321     		movs	r1, #3
 12379 0462 D154     		strb	r1, [r2, r3]
1679:..\src/command_processing.c ****                 packet_data[4+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 12380              		.loc 1 1679 0
 12381 0464 B7F89436 		ldrh	r3, [r7, #1684]
 12382 0468 1A1D     		adds	r2, r3, #4
 12383 046a B7F8A036 		ldrh	r3, [r7, #1696]
 12384 046e 3221     		movs	r1, #50
 12385 0470 01FB03F3 		mul	r3, r1, r3
 12386 0474 1A44     		add	r2, r2, r3
 12387 0476 B7F8A036 		ldrh	r3, [r7, #1696]
 12388 047a 5B00     		lsls	r3, r3, #1
 12389 047c B249     		ldr	r1, .L529
 12390 047e CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12391 0480 1846     		mov	r0, r3
 12392 0482 B249     		ldr	r1, .L529+4
 12393 0484 0346     		mov	r3, r0
 12394 0486 5B00     		lsls	r3, r3, #1
 12395 0488 0344     		add	r3, r3, r0
 12396 048a 0B44     		add	r3, r3, r1
 12397 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12398 048e 07F58A73 		add	r3, r7, #276
 12399 0492 9954     		strb	r1, [r3, r2]
1680:..\src/command_processing.c ****                 packet_data[5+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 12400              		.loc 1 1680 0
 12401 0494 B7F89436 		ldrh	r3, [r7, #1684]
 12402 0498 5A1D     		adds	r2, r3, #5
 12403 049a B7F8A036 		ldrh	r3, [r7, #1696]
 12404 049e 3221     		movs	r1, #50
 12405 04a0 01FB03F3 		mul	r3, r1, r3
 12406 04a4 1A44     		add	r2, r2, r3
 12407 04a6 B7F8A036 		ldrh	r3, [r7, #1696]
 12408 04aa 5B00     		lsls	r3, r3, #1
 12409 04ac A649     		ldr	r1, .L529
 12410 04ae CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12411 04b0 1846     		mov	r0, r3
 12412 04b2 A649     		ldr	r1, .L529+4
 12413 04b4 0346     		mov	r3, r0
 12414 04b6 5B00     		lsls	r3, r3, #1
 12415 04b8 0344     		add	r3, r3, r0
 12416 04ba 0B44     		add	r3, r3, r1
 12417 04bc 0133     		adds	r3, r3, #1
 12418 04be 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12419 04c0 07F58A73 		add	r3, r7, #276
 12420 04c4 9954     		strb	r1, [r3, r2]
1681:..\src/command_processing.c ****                 packet_data[6+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 12421              		.loc 1 1681 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 280


 12422 04c6 B7F89436 		ldrh	r3, [r7, #1684]
 12423 04ca 9A1D     		adds	r2, r3, #6
 12424 04cc B7F8A036 		ldrh	r3, [r7, #1696]
 12425 04d0 3221     		movs	r1, #50
 12426 04d2 01FB03F3 		mul	r3, r1, r3
 12427 04d6 1A44     		add	r2, r2, r3
 12428 04d8 B7F8A036 		ldrh	r3, [r7, #1696]
 12429 04dc 5B00     		lsls	r3, r3, #1
 12430 04de 9A49     		ldr	r1, .L529
 12431 04e0 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12432 04e2 1846     		mov	r0, r3
 12433 04e4 9949     		ldr	r1, .L529+4
 12434 04e6 0346     		mov	r3, r0
 12435 04e8 5B00     		lsls	r3, r3, #1
 12436 04ea 0344     		add	r3, r3, r0
 12437 04ec 0B44     		add	r3, r3, r1
 12438 04ee 0233     		adds	r3, r3, #2
 12439 04f0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12440 04f2 07F58A73 		add	r3, r7, #276
 12441 04f6 9954     		strb	r1, [r3, r2]
1682:..\src/command_processing.c ****                 
1683:..\src/command_processing.c ****                 // check if there is a second value
1684:..\src/command_processing.c ****                 if ( N_IMU_Connected < 2*(k+1) ) {
 12442              		.loc 1 1684 0
 12443 04f8 954B     		ldr	r3, .L529+8
 12444 04fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12445 04fc 1A46     		mov	r2, r3
 12446 04fe B7F8A036 		ldrh	r3, [r7, #1696]
 12447 0502 0133     		adds	r3, r3, #1
 12448 0504 5B00     		lsls	r3, r3, #1
 12449 0506 9A42     		cmp	r2, r3
 12450 0508 28DA     		bge	.L496
1685:..\src/command_processing.c ****                     // there is only one value
1686:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 12451              		.loc 1 1686 0
 12452 050a 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12453 050e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12454 0512 1EE0     		b	.L497
 12455              	.L498:
1687:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12456              		.loc 1 1687 0 discriminator 3
 12457 0514 B7F89436 		ldrh	r3, [r7, #1684]
 12458 0518 DA1D     		adds	r2, r3, #7
 12459 051a B7F8A036 		ldrh	r3, [r7, #1696]
 12460 051e 3221     		movs	r1, #50
 12461 0520 01FB03F3 		mul	r3, r1, r3
 12462 0524 1A44     		add	r2, r2, r3
 12463 0526 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12464 052a 1A44     		add	r2, r2, r3
 12465 052c B7F8A236 		ldrh	r3, [r7, #1698]
 12466 0530 D31A     		subs	r3, r2, r3
 12467 0532 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 12468 0536 B7F8A226 		ldrh	r2, [r7, #1698]
 12469 053a 8A1A     		subs	r2, r1, r2
 12470 053c 07F1D801 		add	r1, r7, #216
 12471 0540 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12472 0542 07F58A72 		add	r2, r7, #276
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 281


 12473 0546 D154     		strb	r1, [r2, r3]
1686:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12474              		.loc 1 1686 0 discriminator 3
 12475 0548 B7F8A236 		ldrh	r3, [r7, #1698]
 12476 054c 013B     		subs	r3, r3, #1
 12477 054e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12478              	.L497:
1686:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12479              		.loc 1 1686 0 is_stmt 0 discriminator 1
 12480 0552 B7F8A236 		ldrh	r3, [r7, #1698]
 12481 0556 002B     		cmp	r3, #0
 12482 0558 DCD1     		bne	.L498
 12483 055a 84E0     		b	.L499
 12484              	.L496:
1688:..\src/command_processing.c ****                 }
1689:..\src/command_processing.c ****                 else {
1690:..\src/command_processing.c ****                     // fill the second value
1691:..\src/command_processing.c ****                     packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 6;
 12485              		.loc 1 1691 0 is_stmt 1
 12486 055c B7F89436 		ldrh	r3, [r7, #1684]
 12487 0560 DA1C     		adds	r2, r3, #3
 12488 0562 B7F8A036 		ldrh	r3, [r7, #1696]
 12489 0566 3221     		movs	r1, #50
 12490 0568 01FB03F3 		mul	r3, r1, r3
 12491 056c 1344     		add	r3, r3, r2
 12492 056e 07F58A72 		add	r2, r7, #276
 12493 0572 0621     		movs	r1, #6
 12494 0574 D154     		strb	r1, [r2, r3]
1692:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12495              		.loc 1 1692 0
 12496 0576 B7F89436 		ldrh	r3, [r7, #1684]
 12497 057a DA1D     		adds	r2, r3, #7
 12498 057c B7F8A036 		ldrh	r3, [r7, #1696]
 12499 0580 3221     		movs	r1, #50
 12500 0582 01FB03F3 		mul	r3, r1, r3
 12501 0586 1A44     		add	r2, r2, r3
 12502 0588 B7F8A036 		ldrh	r3, [r7, #1696]
 12503 058c 5B00     		lsls	r3, r3, #1
 12504 058e 0133     		adds	r3, r3, #1
 12505 0590 6D49     		ldr	r1, .L529
 12506 0592 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12507 0594 1846     		mov	r0, r3
 12508 0596 6D49     		ldr	r1, .L529+4
 12509 0598 0346     		mov	r3, r0
 12510 059a 5B00     		lsls	r3, r3, #1
 12511 059c 0344     		add	r3, r3, r0
 12512 059e 0B44     		add	r3, r3, r1
 12513 05a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12514 05a2 07F58A73 		add	r3, r7, #276
 12515 05a6 9954     		strb	r1, [r3, r2]
1693:..\src/command_processing.c ****                     packet_data[8+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12516              		.loc 1 1693 0
 12517 05a8 B7F89436 		ldrh	r3, [r7, #1684]
 12518 05ac 03F10802 		add	r2, r3, #8
 12519 05b0 B7F8A036 		ldrh	r3, [r7, #1696]
 12520 05b4 3221     		movs	r1, #50
 12521 05b6 01FB03F3 		mul	r3, r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 282


 12522 05ba 1A44     		add	r2, r2, r3
 12523 05bc B7F8A036 		ldrh	r3, [r7, #1696]
 12524 05c0 5B00     		lsls	r3, r3, #1
 12525 05c2 0133     		adds	r3, r3, #1
 12526 05c4 6049     		ldr	r1, .L529
 12527 05c6 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12528 05c8 1846     		mov	r0, r3
 12529 05ca 6049     		ldr	r1, .L529+4
 12530 05cc 0346     		mov	r3, r0
 12531 05ce 5B00     		lsls	r3, r3, #1
 12532 05d0 0344     		add	r3, r3, r0
 12533 05d2 0B44     		add	r3, r3, r1
 12534 05d4 0133     		adds	r3, r3, #1
 12535 05d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12536 05d8 07F58A73 		add	r3, r7, #276
 12537 05dc 9954     		strb	r1, [r3, r2]
1694:..\src/command_processing.c ****                     packet_data[9+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12538              		.loc 1 1694 0
 12539 05de B7F89436 		ldrh	r3, [r7, #1684]
 12540 05e2 03F10902 		add	r2, r3, #9
 12541 05e6 B7F8A036 		ldrh	r3, [r7, #1696]
 12542 05ea 3221     		movs	r1, #50
 12543 05ec 01FB03F3 		mul	r3, r1, r3
 12544 05f0 1A44     		add	r2, r2, r3
 12545 05f2 B7F8A036 		ldrh	r3, [r7, #1696]
 12546 05f6 5B00     		lsls	r3, r3, #1
 12547 05f8 0133     		adds	r3, r3, #1
 12548 05fa 5349     		ldr	r1, .L529
 12549 05fc CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12550 05fe 1846     		mov	r0, r3
 12551 0600 5249     		ldr	r1, .L529+4
 12552 0602 0346     		mov	r3, r0
 12553 0604 5B00     		lsls	r3, r3, #1
 12554 0606 0344     		add	r3, r3, r0
 12555 0608 0B44     		add	r3, r3, r1
 12556 060a 0233     		adds	r3, r3, #2
 12557 060c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12558 060e 07F58A73 		add	r3, r7, #276
 12559 0612 9954     		strb	r1, [r3, r2]
1695:..\src/command_processing.c ****                 
1696:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 12560              		.loc 1 1696 0
 12561 0614 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12562 0618 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12563 061c 1FE0     		b	.L500
 12564              	.L501:
1697:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 12565              		.loc 1 1697 0 discriminator 3
 12566 061e B7F89436 		ldrh	r3, [r7, #1684]
 12567 0622 03F10A02 		add	r2, r3, #10
 12568 0626 B7F8A036 		ldrh	r3, [r7, #1696]
 12569 062a 3221     		movs	r1, #50
 12570 062c 01FB03F3 		mul	r3, r1, r3
 12571 0630 1A44     		add	r2, r2, r3
 12572 0632 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12573 0636 1A44     		add	r2, r2, r3
 12574 0638 B7F8A236 		ldrh	r3, [r7, #1698]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 283


 12575 063c D31A     		subs	r3, r2, r3
 12576 063e 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 12577 0642 B7F8A226 		ldrh	r2, [r7, #1698]
 12578 0646 8A1A     		subs	r2, r1, r2
 12579 0648 07F1D801 		add	r1, r7, #216
 12580 064c 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12581 064e 07F58A72 		add	r2, r7, #276
 12582 0652 D154     		strb	r1, [r2, r3]
1696:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 12583              		.loc 1 1696 0 discriminator 3
 12584 0654 B7F8A236 		ldrh	r3, [r7, #1698]
 12585 0658 013B     		subs	r3, r3, #1
 12586 065a A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12587              	.L500:
1696:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 12588              		.loc 1 1696 0 is_stmt 0 discriminator 1
 12589 065e B7F8A236 		ldrh	r3, [r7, #1698]
 12590 0662 002B     		cmp	r3, #0
 12591 0664 DBD1     		bne	.L501
 12592              	.L499:
1675:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12593              		.loc 1 1675 0 is_stmt 1 discriminator 2
 12594 0666 B7F8A036 		ldrh	r3, [r7, #1696]
 12595 066a 0133     		adds	r3, r3, #1
 12596 066c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12597              	.L495:
1675:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12598              		.loc 1 1675 0 is_stmt 0 discriminator 1
 12599 0670 B7F8A026 		ldrh	r2, [r7, #1696]
 12600 0674 B7F8A636 		ldrh	r3, [r7, #1702]
 12601 0678 9A42     		cmp	r2, r3
 12602 067a FFF4D9AE 		bcc	.L502
1698:..\src/command_processing.c ****                 }
1699:..\src/command_processing.c ****             }
1700:..\src/command_processing.c ****             
1701:..\src/command_processing.c ****             /*-----------------ID-----------------*/
1702:..\src/command_processing.c ****             
1703:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_mag_cal_params;
 12603              		.loc 1 1703 0 is_stmt 1
 12604 067e B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 12605 0682 1A46     		mov	r2, r3	@ movhi
 12606 0684 9200     		lsls	r2, r2, #2
 12607 0686 1344     		add	r3, r3, r2
 12608 0688 1A46     		mov	r2, r3	@ movhi
 12609 068a 9100     		lsls	r1, r2, #2
 12610 068c 1A46     		mov	r2, r3	@ movhi
 12611 068e 0B46     		mov	r3, r1	@ movhi
 12612 0690 1344     		add	r3, r3, r2
 12613 0692 5B00     		lsls	r3, r3, #1
 12614 0694 9AB2     		uxth	r2, r3
 12615 0696 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12616 069a 1344     		add	r3, r3, r2
 12617 069c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1704:..\src/command_processing.c ****             sprintf(id_str, "%u - Device ID:", first_imu_parameter-1);
 12618              		.loc 1 1704 0
 12619 06a0 B7F89836 		ldrh	r3, [r7, #1688]
 12620 06a4 5A1E     		subs	r2, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 284


 12621 06a6 07F1C803 		add	r3, r7, #200
 12622 06aa 2A49     		ldr	r1, .L529+12
 12623 06ac 1846     		mov	r0, r3
 12624 06ae FFF7FEFF 		bl	sprintf
1705:..\src/command_processing.c ****             id_str_len = strlen(id_str);
 12625              		.loc 1 1705 0
 12626 06b2 07F1C803 		add	r3, r7, #200
 12627 06b6 1846     		mov	r0, r3
 12628 06b8 FFF7FEFF 		bl	strlen
 12629 06bc 0346     		mov	r3, r0
 12630 06be 87F89336 		strb	r3, [r7, #1683]
1706:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_UINT8;
 12631              		.loc 1 1706 0
 12632 06c2 B7F89436 		ldrh	r3, [r7, #1684]
 12633 06c6 0233     		adds	r3, r3, #2
 12634 06c8 07F58A72 		add	r2, r7, #276
 12635 06cc 0221     		movs	r1, #2
 12636 06ce D154     		strb	r1, [r2, r3]
1707:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 12637              		.loc 1 1707 0
 12638 06d0 B7F89436 		ldrh	r3, [r7, #1684]
 12639 06d4 0333     		adds	r3, r3, #3
 12640 06d6 07F58A72 		add	r2, r7, #276
 12641 06da 0121     		movs	r1, #1
 12642 06dc D154     		strb	r1, [r2, r3]
1708:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.dev.id;
 12643              		.loc 1 1708 0
 12644 06de B7F89436 		ldrh	r3, [r7, #1684]
 12645 06e2 0433     		adds	r3, r3, #4
 12646 06e4 1C4A     		ldr	r2, .L529+16
 12647 06e6 92F8A010 		ldrb	r1, [r2, #160]	@ zero_extendqisi2
 12648 06ea 07F58A72 		add	r2, r7, #276
 12649 06ee D154     		strb	r1, [r2, r3]
1709:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 12650              		.loc 1 1709 0
 12651 06f0 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 12652 06f4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12653 06f8 18E0     		b	.L503
 12654              	.L504:
1710:..\src/command_processing.c ****                 packet_data[5+start_byte + id_str_len - i] = id_str[id_str_len - i];
 12655              		.loc 1 1710 0 discriminator 3
 12656 06fa B7F89436 		ldrh	r3, [r7, #1684]
 12657 06fe 5A1D     		adds	r2, r3, #5
 12658 0700 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 12659 0704 1A44     		add	r2, r2, r3
 12660 0706 B7F8A436 		ldrh	r3, [r7, #1700]
 12661 070a D31A     		subs	r3, r2, r3
 12662 070c 97F89316 		ldrb	r1, [r7, #1683]	@ zero_extendqisi2
 12663 0710 B7F8A426 		ldrh	r2, [r7, #1700]
 12664 0714 8A1A     		subs	r2, r1, r2
 12665 0716 07F1C801 		add	r1, r7, #200
 12666 071a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12667 071c 07F58A72 		add	r2, r7, #276
 12668 0720 D154     		strb	r1, [r2, r3]
1709:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 12669              		.loc 1 1709 0 discriminator 3
 12670 0722 B7F8A436 		ldrh	r3, [r7, #1700]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 285


 12671 0726 013B     		subs	r3, r3, #1
 12672 0728 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12673              	.L503:
1709:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 12674              		.loc 1 1709 0 is_stmt 0 discriminator 1
 12675 072c B7F8A436 		ldrh	r3, [r7, #1700]
 12676 0730 002B     		cmp	r3, #0
 12677 0732 E2D1     		bne	.L504
1711:..\src/command_processing.c ****                 
1712:..\src/command_processing.c ****             /*-------------GET IMUS MODE-------------*/
1713:..\src/command_processing.c ****             
1714:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 12678              		.loc 1 1714 0 is_stmt 1
 12679 0734 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12680 0738 3233     		adds	r3, r3, #50
 12681 073a A7F89436 		strh	r3, [r7, #1684]	@ movhi
1715:..\src/command_processing.c ****             for (i = 0; i < (uint8)N_IMU_Connected; i++){
 12682              		.loc 1 1715 0
 12683 073e 0023     		movs	r3, #0
 12684 0740 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12685 0744 38E1     		b	.L505
 12686              	.L530:
 12687 0746 00BF     		.align	2
 12688              	.L529:
 12689 0748 00000000 		.word	IMU_connected
 12690 074c 00000000 		.word	MagCal
 12691 0750 00000000 		.word	N_IMU_Connected
 12692 0754 1C100000 		.word	.LC141
 12693 0758 00000000 		.word	c_mem
 12694              	.L508:
1716:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 12695              		.loc 1 1716 0
 12696 075c B7F89826 		ldrh	r2, [r7, #1688]
 12697 0760 B7F8A436 		ldrh	r3, [r7, #1700]
 12698 0764 D118     		adds	r1, r2, r3
 12699 0766 B7F8A436 		ldrh	r3, [r7, #1700]
 12700 076a D54A     		ldr	r2, .L531
 12701 076c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12702 076e 07F19C00 		add	r0, r7, #156
 12703 0772 0A46     		mov	r2, r1
 12704 0774 D349     		ldr	r1, .L531+4
 12705 0776 FFF7FEFF 		bl	sprintf
1717:..\src/command_processing.c ****                 imu_table_str_len = strlen(imu_table_str);
 12706              		.loc 1 1717 0
 12707 077a 07F19C03 		add	r3, r7, #156
 12708 077e 1846     		mov	r0, r3
 12709 0780 FFF7FEFF 		bl	strlen
 12710 0784 0346     		mov	r3, r0
 12711 0786 87F88F36 		strb	r3, [r7, #1679]
1718:..\src/command_processing.c ****             
1719:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte + PARAM_BYTE_SLOT*i)] = TYPE_UINT8;
 12712              		.loc 1 1719 0
 12713 078a B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12714 078e 1A46     		mov	r2, r3	@ movhi
 12715 0790 9200     		lsls	r2, r2, #2
 12716 0792 1344     		add	r3, r3, r2
 12717 0794 1A46     		mov	r2, r3	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 286


 12718 0796 9100     		lsls	r1, r2, #2
 12719 0798 1A46     		mov	r2, r3	@ movhi
 12720 079a 0B46     		mov	r3, r1	@ movhi
 12721 079c 1344     		add	r3, r3, r2
 12722 079e 5B00     		lsls	r3, r3, #1
 12723 07a0 9AB2     		uxth	r2, r3
 12724 07a2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12725 07a6 1344     		add	r3, r3, r2
 12726 07a8 9BB2     		uxth	r3, r3
 12727 07aa 0233     		adds	r3, r3, #2
 12728 07ac 9BB2     		uxth	r3, r3
 12729 07ae 1A46     		mov	r2, r3
 12730 07b0 07F58A73 		add	r3, r7, #276
 12731 07b4 0221     		movs	r1, #2
 12732 07b6 9954     		strb	r1, [r3, r2]
1720:..\src/command_processing.c ****                 packet_data[(uint16)(3 + start_byte + PARAM_BYTE_SLOT*i)] = 5;
 12733              		.loc 1 1720 0
 12734 07b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12735 07bc 1A46     		mov	r2, r3	@ movhi
 12736 07be 9200     		lsls	r2, r2, #2
 12737 07c0 1344     		add	r3, r3, r2
 12738 07c2 1A46     		mov	r2, r3	@ movhi
 12739 07c4 9100     		lsls	r1, r2, #2
 12740 07c6 1A46     		mov	r2, r3	@ movhi
 12741 07c8 0B46     		mov	r3, r1	@ movhi
 12742 07ca 1344     		add	r3, r3, r2
 12743 07cc 5B00     		lsls	r3, r3, #1
 12744 07ce 9AB2     		uxth	r2, r3
 12745 07d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12746 07d4 1344     		add	r3, r3, r2
 12747 07d6 9BB2     		uxth	r3, r3
 12748 07d8 0333     		adds	r3, r3, #3
 12749 07da 9BB2     		uxth	r3, r3
 12750 07dc 1A46     		mov	r2, r3
 12751 07de 07F58A73 		add	r3, r7, #276
 12752 07e2 0521     		movs	r1, #5
 12753 07e4 9954     		strb	r1, [r3, r2]
1721:..\src/command_processing.c ****                 
1722:..\src/command_processing.c ****                 packet_data[(uint16)(4 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 12754              		.loc 1 1722 0
 12755 07e6 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12756 07ea 1A46     		mov	r2, r3	@ movhi
 12757 07ec 9200     		lsls	r2, r2, #2
 12758 07ee 1344     		add	r3, r3, r2
 12759 07f0 1A46     		mov	r2, r3	@ movhi
 12760 07f2 9100     		lsls	r1, r2, #2
 12761 07f4 1A46     		mov	r2, r3	@ movhi
 12762 07f6 0B46     		mov	r3, r1	@ movhi
 12763 07f8 1344     		add	r3, r3, r2
 12764 07fa 5B00     		lsls	r3, r3, #1
 12765 07fc 9AB2     		uxth	r2, r3
 12766 07fe B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12767 0802 1344     		add	r3, r3, r2
 12768 0804 9BB2     		uxth	r3, r3
 12769 0806 0433     		adds	r3, r3, #4
 12770 0808 9BB2     		uxth	r3, r3
 12771 080a 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 287


 12772 080c B7F8A436 		ldrh	r3, [r7, #1700]
 12773 0810 AB4A     		ldr	r2, .L531
 12774 0812 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12775 0814 1946     		mov	r1, r3
 12776 0816 AC4A     		ldr	r2, .L531+8
 12777 0818 0B46     		mov	r3, r1
 12778 081a 9B00     		lsls	r3, r3, #2
 12779 081c 0B44     		add	r3, r3, r1
 12780 081e 1344     		add	r3, r3, r2
 12781 0820 03F20223 		addw	r3, r3, #514
 12782 0824 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12783 0826 07F58A73 		add	r3, r7, #276
 12784 082a 1A54     		strb	r2, [r3, r0]
1723:..\src/command_processing.c ****                 packet_data[(uint16)(5 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 12785              		.loc 1 1723 0
 12786 082c B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12787 0830 1A46     		mov	r2, r3	@ movhi
 12788 0832 9200     		lsls	r2, r2, #2
 12789 0834 1344     		add	r3, r3, r2
 12790 0836 1A46     		mov	r2, r3	@ movhi
 12791 0838 9100     		lsls	r1, r2, #2
 12792 083a 1A46     		mov	r2, r3	@ movhi
 12793 083c 0B46     		mov	r3, r1	@ movhi
 12794 083e 1344     		add	r3, r3, r2
 12795 0840 5B00     		lsls	r3, r3, #1
 12796 0842 9AB2     		uxth	r2, r3
 12797 0844 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12798 0848 1344     		add	r3, r3, r2
 12799 084a 9BB2     		uxth	r3, r3
 12800 084c 0533     		adds	r3, r3, #5
 12801 084e 9BB2     		uxth	r3, r3
 12802 0850 1846     		mov	r0, r3
 12803 0852 B7F8A436 		ldrh	r3, [r7, #1700]
 12804 0856 9A4A     		ldr	r2, .L531
 12805 0858 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12806 085a 1946     		mov	r1, r3
 12807 085c 9A4A     		ldr	r2, .L531+8
 12808 085e 0B46     		mov	r3, r1
 12809 0860 9B00     		lsls	r3, r3, #2
 12810 0862 0B44     		add	r3, r3, r1
 12811 0864 1344     		add	r3, r3, r2
 12812 0866 03F20323 		addw	r3, r3, #515
 12813 086a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12814 086c 07F58A73 		add	r3, r7, #276
 12815 0870 1A54     		strb	r2, [r3, r0]
1724:..\src/command_processing.c ****                 packet_data[(uint16)(6 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 12816              		.loc 1 1724 0
 12817 0872 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12818 0876 1A46     		mov	r2, r3	@ movhi
 12819 0878 9200     		lsls	r2, r2, #2
 12820 087a 1344     		add	r3, r3, r2
 12821 087c 1A46     		mov	r2, r3	@ movhi
 12822 087e 9100     		lsls	r1, r2, #2
 12823 0880 1A46     		mov	r2, r3	@ movhi
 12824 0882 0B46     		mov	r3, r1	@ movhi
 12825 0884 1344     		add	r3, r3, r2
 12826 0886 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 288


 12827 0888 9AB2     		uxth	r2, r3
 12828 088a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12829 088e 1344     		add	r3, r3, r2
 12830 0890 9BB2     		uxth	r3, r3
 12831 0892 0633     		adds	r3, r3, #6
 12832 0894 9BB2     		uxth	r3, r3
 12833 0896 1846     		mov	r0, r3
 12834 0898 B7F8A436 		ldrh	r3, [r7, #1700]
 12835 089c 884A     		ldr	r2, .L531
 12836 089e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12837 08a0 1946     		mov	r1, r3
 12838 08a2 894A     		ldr	r2, .L531+8
 12839 08a4 0B46     		mov	r3, r1
 12840 08a6 9B00     		lsls	r3, r3, #2
 12841 08a8 0B44     		add	r3, r3, r1
 12842 08aa 1344     		add	r3, r3, r2
 12843 08ac 03F50173 		add	r3, r3, #516
 12844 08b0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12845 08b2 07F58A73 		add	r3, r7, #276
 12846 08b6 1A54     		strb	r2, [r3, r0]
1725:..\src/command_processing.c ****                 packet_data[(uint16)(7 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 12847              		.loc 1 1725 0
 12848 08b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12849 08bc 1A46     		mov	r2, r3	@ movhi
 12850 08be 9200     		lsls	r2, r2, #2
 12851 08c0 1344     		add	r3, r3, r2
 12852 08c2 1A46     		mov	r2, r3	@ movhi
 12853 08c4 9100     		lsls	r1, r2, #2
 12854 08c6 1A46     		mov	r2, r3	@ movhi
 12855 08c8 0B46     		mov	r3, r1	@ movhi
 12856 08ca 1344     		add	r3, r3, r2
 12857 08cc 5B00     		lsls	r3, r3, #1
 12858 08ce 9AB2     		uxth	r2, r3
 12859 08d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12860 08d4 1344     		add	r3, r3, r2
 12861 08d6 9BB2     		uxth	r3, r3
 12862 08d8 0733     		adds	r3, r3, #7
 12863 08da 9BB2     		uxth	r3, r3
 12864 08dc 1846     		mov	r0, r3
 12865 08de B7F8A436 		ldrh	r3, [r7, #1700]
 12866 08e2 774A     		ldr	r2, .L531
 12867 08e4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12868 08e6 1946     		mov	r1, r3
 12869 08e8 774A     		ldr	r2, .L531+8
 12870 08ea 0B46     		mov	r3, r1
 12871 08ec 9B00     		lsls	r3, r3, #2
 12872 08ee 0B44     		add	r3, r3, r1
 12873 08f0 1344     		add	r3, r3, r2
 12874 08f2 03F20523 		addw	r3, r3, #517
 12875 08f6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12876 08f8 07F58A73 		add	r3, r7, #276
 12877 08fc 1A54     		strb	r2, [r3, r0]
1726:..\src/command_processing.c ****                 packet_data[(uint16)(8 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 12878              		.loc 1 1726 0
 12879 08fe B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12880 0902 1A46     		mov	r2, r3	@ movhi
 12881 0904 9200     		lsls	r2, r2, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 289


 12882 0906 1344     		add	r3, r3, r2
 12883 0908 1A46     		mov	r2, r3	@ movhi
 12884 090a 9100     		lsls	r1, r2, #2
 12885 090c 1A46     		mov	r2, r3	@ movhi
 12886 090e 0B46     		mov	r3, r1	@ movhi
 12887 0910 1344     		add	r3, r3, r2
 12888 0912 5B00     		lsls	r3, r3, #1
 12889 0914 9AB2     		uxth	r2, r3
 12890 0916 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12891 091a 1344     		add	r3, r3, r2
 12892 091c 9BB2     		uxth	r3, r3
 12893 091e 0833     		adds	r3, r3, #8
 12894 0920 9BB2     		uxth	r3, r3
 12895 0922 1846     		mov	r0, r3
 12896 0924 B7F8A436 		ldrh	r3, [r7, #1700]
 12897 0928 654A     		ldr	r2, .L531
 12898 092a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12899 092c 1946     		mov	r1, r3
 12900 092e 664A     		ldr	r2, .L531+8
 12901 0930 0B46     		mov	r3, r1
 12902 0932 9B00     		lsls	r3, r3, #2
 12903 0934 0B44     		add	r3, r3, r1
 12904 0936 1344     		add	r3, r3, r2
 12905 0938 03F20623 		addw	r3, r3, #518
 12906 093c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12907 093e 07F58A73 		add	r3, r7, #276
 12908 0942 1A54     		strb	r2, [r3, r0]
1727:..\src/command_processing.c **** 
1728:..\src/command_processing.c ****                 for(j = imu_table_str_len; j != 0; j--)
 12909              		.loc 1 1728 0
 12910 0944 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 12911 0948 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12912 094c 2BE0     		b	.L506
 12913              	.L507:
1729:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 12914              		.loc 1 1729 0 discriminator 3
 12915 094e B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12916 0952 1A46     		mov	r2, r3	@ movhi
 12917 0954 9200     		lsls	r2, r2, #2
 12918 0956 1344     		add	r3, r3, r2
 12919 0958 1A46     		mov	r2, r3	@ movhi
 12920 095a 9100     		lsls	r1, r2, #2
 12921 095c 1A46     		mov	r2, r3	@ movhi
 12922 095e 0B46     		mov	r3, r1	@ movhi
 12923 0960 1344     		add	r3, r3, r2
 12924 0962 5B00     		lsls	r3, r3, #1
 12925 0964 9AB2     		uxth	r2, r3
 12926 0966 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12927 096a 1344     		add	r3, r3, r2
 12928 096c 9AB2     		uxth	r2, r3
 12929 096e 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 12930 0972 9BB2     		uxth	r3, r3
 12931 0974 1344     		add	r3, r3, r2
 12932 0976 9AB2     		uxth	r2, r3
 12933 0978 B7F8A236 		ldrh	r3, [r7, #1698]	@ movhi
 12934 097c D31A     		subs	r3, r2, r3
 12935 097e 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 290


 12936 0980 0933     		adds	r3, r3, #9
 12937 0982 9BB2     		uxth	r3, r3
 12938 0984 1946     		mov	r1, r3
 12939 0986 97F88F26 		ldrb	r2, [r7, #1679]	@ zero_extendqisi2
 12940 098a B7F8A236 		ldrh	r3, [r7, #1698]
 12941 098e D31A     		subs	r3, r2, r3
 12942 0990 07F19C02 		add	r2, r7, #156
 12943 0994 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 12944 0996 07F58A73 		add	r3, r7, #276
 12945 099a 5A54     		strb	r2, [r3, r1]
1728:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 12946              		.loc 1 1728 0 discriminator 3
 12947 099c B7F8A236 		ldrh	r3, [r7, #1698]
 12948 09a0 013B     		subs	r3, r3, #1
 12949 09a2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12950              	.L506:
1728:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 12951              		.loc 1 1728 0 is_stmt 0 discriminator 1
 12952 09a6 B7F8A236 		ldrh	r3, [r7, #1698]
 12953 09aa 002B     		cmp	r3, #0
 12954 09ac CFD1     		bne	.L507
1715:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 12955              		.loc 1 1715 0 is_stmt 1 discriminator 2
 12956 09ae B7F8A436 		ldrh	r3, [r7, #1700]
 12957 09b2 0133     		adds	r3, r3, #1
 12958 09b4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12959              	.L505:
1715:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 12960              		.loc 1 1715 0 is_stmt 0 discriminator 1
 12961 09b8 444B     		ldr	r3, .L531+12
 12962 09ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12963 09bc 9BB2     		uxth	r3, r3
 12964 09be B7F8A426 		ldrh	r2, [r7, #1700]
 12965 09c2 9A42     		cmp	r2, r3
 12966 09c4 FFF4CAAE 		bcc	.L508
1730:..\src/command_processing.c ****             }  
1731:..\src/command_processing.c ****           
1732:..\src/command_processing.c **** 
1733:..\src/command_processing.c ****             /*-----------------SPI DELAY-----------------*/
1734:..\src/command_processing.c ****             
1735:..\src/command_processing.c ****             start_byte = start_byte + (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected);
 12967              		.loc 1 1735 0 is_stmt 1
 12968 09c8 404B     		ldr	r3, .L531+12
 12969 09ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12970 09cc 9BB2     		uxth	r3, r3
 12971 09ce 1A46     		mov	r2, r3	@ movhi
 12972 09d0 9200     		lsls	r2, r2, #2
 12973 09d2 1344     		add	r3, r3, r2
 12974 09d4 1A46     		mov	r2, r3	@ movhi
 12975 09d6 9100     		lsls	r1, r2, #2
 12976 09d8 1A46     		mov	r2, r3	@ movhi
 12977 09da 0B46     		mov	r3, r1	@ movhi
 12978 09dc 1344     		add	r3, r3, r2
 12979 09de 5B00     		lsls	r3, r3, #1
 12980 09e0 9AB2     		uxth	r2, r3
 12981 09e2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12982 09e6 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 291


 12983 09e8 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1736:..\src/command_processing.c ****             sprintf(spi_read_delay_str, "%u - SPI read delay:", first_imu_parameter+N_IMU_Connected
 12984              		.loc 1 1736 0
 12985 09ec B7F89836 		ldrh	r3, [r7, #1688]
 12986 09f0 364A     		ldr	r2, .L531+12
 12987 09f2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 12988 09f4 1A44     		add	r2, r2, r3
 12989 09f6 07F18003 		add	r3, r7, #128
 12990 09fa 3549     		ldr	r1, .L531+16
 12991 09fc 1846     		mov	r0, r3
 12992 09fe FFF7FEFF 		bl	sprintf
1737:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_FLAG;
 12993              		.loc 1 1737 0
 12994 0a02 B7F89436 		ldrh	r3, [r7, #1684]
 12995 0a06 0233     		adds	r3, r3, #2
 12996 0a08 07F58A72 		add	r2, r7, #276
 12997 0a0c 0021     		movs	r1, #0
 12998 0a0e D154     		strb	r1, [r2, r3]
1738:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 12999              		.loc 1 1738 0
 13000 0a10 B7F89436 		ldrh	r3, [r7, #1684]
 13001 0a14 0333     		adds	r3, r3, #3
 13002 0a16 07F58A72 		add	r2, r7, #276
 13003 0a1a 0121     		movs	r1, #1
 13004 0a1c D154     		strb	r1, [r2, r3]
1739:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.imu.SPI_read_delay;
 13005              		.loc 1 1739 0
 13006 0a1e B7F89436 		ldrh	r3, [r7, #1684]
 13007 0a22 0433     		adds	r3, r3, #4
 13008 0a24 284A     		ldr	r2, .L531+8
 13009 0a26 92F80112 		ldrb	r1, [r2, #513]	@ zero_extendqisi2
 13010 0a2a 07F58A72 		add	r2, r7, #276
 13011 0a2e D154     		strb	r1, [r2, r3]
1740:..\src/command_processing.c ****             switch(c_mem.imu.SPI_read_delay) {
 13012              		.loc 1 1740 0
 13013 0a30 254B     		ldr	r3, .L531+8
 13014 0a32 93F80132 		ldrb	r3, [r3, #513]	@ zero_extendqisi2
 13015 0a36 012B     		cmp	r3, #1
 13016 0a38 17D0     		beq	.L510
 13017 0a3a 022B     		cmp	r3, #2
 13018 0a3c 28D0     		beq	.L511
 13019 0a3e 002B     		cmp	r3, #0
 13020 0a40 00D0     		beq	.L512
1741:..\src/command_processing.c ****                 case 0: 
1742:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " None"); 
1743:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1744:..\src/command_processing.c ****                     break;
1745:..\src/command_processing.c ****                 case 1: 
1746:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " Low"); 
1747:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
1748:..\src/command_processing.c ****                     break;
1749:..\src/command_processing.c ****                 case 2: 
1750:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " High");
1751:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1752:..\src/command_processing.c ****                     break;
1753:..\src/command_processing.c ****                 default:
1754:..\src/command_processing.c ****                     break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 292


 13021              		.loc 1 1754 0
 13022 0a42 38E0     		b	.L513
 13023              	.L512:
1742:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 13024              		.loc 1 1742 0
 13025 0a44 07F18003 		add	r3, r7, #128
 13026 0a48 1846     		mov	r0, r3
 13027 0a4a FFF7FEFF 		bl	strlen
 13028 0a4e 0346     		mov	r3, r0
 13029 0a50 1A46     		mov	r2, r3
 13030 0a52 07F18003 		add	r3, r7, #128
 13031 0a56 1344     		add	r3, r3, r2
 13032 0a58 1E4A     		ldr	r2, .L531+20
 13033 0a5a 1068     		ldr	r0, [r2]	@ unaligned
 13034 0a5c 1860     		str	r0, [r3]	@ unaligned
 13035 0a5e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 13036 0a60 9A80     		strh	r2, [r3, #4]	@ unaligned
1743:..\src/command_processing.c ****                     break;
 13037              		.loc 1 1743 0
 13038 0a62 1A23     		movs	r3, #26
 13039 0a64 87F89D36 		strb	r3, [r7, #1693]
1744:..\src/command_processing.c ****                 case 1: 
 13040              		.loc 1 1744 0
 13041 0a68 25E0     		b	.L513
 13042              	.L510:
1746:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
 13043              		.loc 1 1746 0
 13044 0a6a 07F18003 		add	r3, r7, #128
 13045 0a6e 1846     		mov	r0, r3
 13046 0a70 FFF7FEFF 		bl	strlen
 13047 0a74 0346     		mov	r3, r0
 13048 0a76 1A46     		mov	r2, r3
 13049 0a78 07F18003 		add	r3, r7, #128
 13050 0a7c 1344     		add	r3, r3, r2
 13051 0a7e 164A     		ldr	r2, .L531+24
 13052 0a80 1068     		ldr	r0, [r2]	@ unaligned
 13053 0a82 1860     		str	r0, [r3]	@ unaligned
 13054 0a84 1279     		ldrb	r2, [r2, #4]
 13055 0a86 1A71     		strb	r2, [r3, #4]
1747:..\src/command_processing.c ****                     break;
 13056              		.loc 1 1747 0
 13057 0a88 1923     		movs	r3, #25
 13058 0a8a 87F89D36 		strb	r3, [r7, #1693]
1748:..\src/command_processing.c ****                 case 2: 
 13059              		.loc 1 1748 0
 13060 0a8e 12E0     		b	.L513
 13061              	.L511:
1750:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 13062              		.loc 1 1750 0
 13063 0a90 07F18003 		add	r3, r7, #128
 13064 0a94 1846     		mov	r0, r3
 13065 0a96 FFF7FEFF 		bl	strlen
 13066 0a9a 0346     		mov	r3, r0
 13067 0a9c 1A46     		mov	r2, r3
 13068 0a9e 07F18003 		add	r3, r7, #128
 13069 0aa2 1344     		add	r3, r3, r2
 13070 0aa4 0D4A     		ldr	r2, .L531+28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 293


 13071 0aa6 1068     		ldr	r0, [r2]	@ unaligned
 13072 0aa8 1860     		str	r0, [r3]	@ unaligned
 13073 0aaa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 13074 0aac 9A80     		strh	r2, [r3, #4]	@ unaligned
1751:..\src/command_processing.c ****                     break;
 13075              		.loc 1 1751 0
 13076 0aae 1A23     		movs	r3, #26
 13077 0ab0 87F89D36 		strb	r3, [r7, #1693]
1752:..\src/command_processing.c ****                 default:
 13078              		.loc 1 1752 0
 13079 0ab4 00BF     		nop
 13080              	.L513:
1755:..\src/command_processing.c ****             }            
1756:..\src/command_processing.c ****             for(i = spi_read_delay_str_len; i != 0; i--)
 13081              		.loc 1 1756 0
 13082 0ab6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 13083 0aba A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13084 0abe 28E0     		b	.L514
 13085              	.L532:
 13086              		.align	2
 13087              	.L531:
 13088 0ac0 00000000 		.word	IMU_connected
 13089 0ac4 2C100000 		.word	.LC142
 13090 0ac8 00000000 		.word	c_mem
 13091 0acc 00000000 		.word	N_IMU_Connected
 13092 0ad0 48100000 		.word	.LC143
 13093 0ad4 60100000 		.word	.LC144
 13094 0ad8 68100000 		.word	.LC145
 13095 0adc 70100000 		.word	.LC146
 13096              	.L515:
1757:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 13097              		.loc 1 1757 0 discriminator 3
 13098 0ae0 B7F89436 		ldrh	r3, [r7, #1684]
 13099 0ae4 5A1D     		adds	r2, r3, #5
 13100 0ae6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 13101 0aea 1A44     		add	r2, r2, r3
 13102 0aec B7F8A436 		ldrh	r3, [r7, #1700]
 13103 0af0 D31A     		subs	r3, r2, r3
 13104 0af2 97F89D16 		ldrb	r1, [r7, #1693]	@ zero_extendqisi2
 13105 0af6 B7F8A426 		ldrh	r2, [r7, #1700]
 13106 0afa 8A1A     		subs	r2, r1, r2
 13107 0afc 07F18001 		add	r1, r7, #128
 13108 0b00 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 13109 0b02 07F58A72 		add	r2, r7, #276
 13110 0b06 D154     		strb	r1, [r2, r3]
1756:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 13111              		.loc 1 1756 0 discriminator 3
 13112 0b08 B7F8A436 		ldrh	r3, [r7, #1700]
 13113 0b0c 013B     		subs	r3, r3, #1
 13114 0b0e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13115              	.L514:
1756:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 13116              		.loc 1 1756 0 is_stmt 0 discriminator 1
 13117 0b12 B7F8A436 		ldrh	r3, [r7, #1700]
 13118 0b16 002B     		cmp	r3, #0
 13119 0b18 E2D1     		bne	.L515
1758:..\src/command_processing.c ****             //The following byte indicates the number of menus at the end of the packet to send
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 294


1759:..\src/command_processing.c ****             packet_data[5+start_byte + spi_read_delay_str_len] = 1;
 13120              		.loc 1 1759 0 is_stmt 1
 13121 0b1a B7F89436 		ldrh	r3, [r7, #1684]
 13122 0b1e 5A1D     		adds	r2, r3, #5
 13123 0b20 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 13124 0b24 1344     		add	r3, r3, r2
 13125 0b26 07F58A72 		add	r2, r7, #276
 13126 0b2a 0121     		movs	r1, #1
 13127 0b2c D154     		strb	r1, [r2, r3]
1760:..\src/command_processing.c ****                   
1761:..\src/command_processing.c ****             
1762:..\src/command_processing.c ****             /*------------PARAMETERS MENU-----------*/
1763:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 13128              		.loc 1 1763 0
 13129 0b2e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13130 0b32 3233     		adds	r3, r3, #50
 13131 0b34 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1764:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 13132              		.loc 1 1764 0
 13133 0b38 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 13134 0b3c A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13135 0b40 1AE0     		b	.L516
 13136              	.L517:
1765:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte) + spi_delay_menu_len - i] = spi_delay_menu[spi
 13137              		.loc 1 1765 0 discriminator 3
 13138 0b42 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13139 0b46 0233     		adds	r3, r3, #2
 13140 0b48 9BB2     		uxth	r3, r3
 13141 0b4a 1A46     		mov	r2, r3
 13142 0b4c 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 13143 0b50 1A44     		add	r2, r2, r3
 13144 0b52 B7F8A436 		ldrh	r3, [r7, #1700]
 13145 0b56 D31A     		subs	r3, r2, r3
 13146 0b58 97F88E16 		ldrb	r1, [r7, #1678]	@ zero_extendqisi2
 13147 0b5c B7F8A426 		ldrh	r2, [r7, #1700]
 13148 0b60 8A1A     		subs	r2, r1, r2
 13149 0b62 07F10801 		add	r1, r7, #8
 13150 0b66 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 13151 0b68 07F58A72 		add	r2, r7, #276
 13152 0b6c D154     		strb	r1, [r2, r3]
1764:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 13153              		.loc 1 1764 0 discriminator 3
 13154 0b6e B7F8A436 		ldrh	r3, [r7, #1700]
 13155 0b72 013B     		subs	r3, r3, #1
 13156 0b74 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13157              	.L516:
1764:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 13158              		.loc 1 1764 0 is_stmt 0 discriminator 1
 13159 0b78 B7F8A436 		ldrh	r3, [r7, #1700]
 13160 0b7c 002B     		cmp	r3, #0
 13161 0b7e E0D1     		bne	.L517
1766:..\src/command_processing.c **** 
1767:..\src/command_processing.c ****             packet_data[packet_length - 1] = LCRChecksum(packet_data,packet_length - 1);
 13162              		.loc 1 1767 0 is_stmt 1
 13163 0b80 B7F89636 		ldrh	r3, [r7, #1686]
 13164 0b84 5C1E     		subs	r4, r3, #1
 13165 0b86 B7F89636 		ldrh	r3, [r7, #1686]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 295


 13166 0b8a DBB2     		uxtb	r3, r3
 13167 0b8c 013B     		subs	r3, r3, #1
 13168 0b8e DAB2     		uxtb	r2, r3
 13169 0b90 07F58A73 		add	r3, r7, #276
 13170 0b94 1146     		mov	r1, r2
 13171 0b96 1846     		mov	r0, r3
 13172 0b98 FFF7FEFF 		bl	LCRChecksum
 13173 0b9c 0346     		mov	r3, r0
 13174 0b9e 1A46     		mov	r2, r3
 13175 0ba0 07F58A73 		add	r3, r7, #276
 13176 0ba4 1A55     		strb	r2, [r3, r4]
1768:..\src/command_processing.c ****             commWrite(packet_data, packet_length);
 13177              		.loc 1 1768 0
 13178 0ba6 B7F89626 		ldrh	r2, [r7, #1686]
 13179 0baa 07F58A73 		add	r3, r7, #276
 13180 0bae 1146     		mov	r1, r2
 13181 0bb0 1846     		mov	r0, r3
 13182 0bb2 FFF7FEFF 		bl	commWrite
1769:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 13183              		.loc 1 1769 0
 13184 0bb6 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
1770:..\src/command_processing.c ****         break;
 13185              		.loc 1 1770 0
 13186 0bba 09E1     		b	.L518
 13187              	.L525:
1771:..\src/command_processing.c **** 
1772:..\src/command_processing.c **** //=========================================================     other_params
1773:..\src/command_processing.c ****         default: 
1774:..\src/command_processing.c ****             
1775:..\src/command_processing.c ****             if (index < first_imu_parameter-1)
 13188              		.loc 1 1775 0
 13189 0bbc BB1D     		adds	r3, r7, #6
 13190 0bbe 1A88     		ldrh	r2, [r3]
 13191 0bc0 B7F89836 		ldrh	r3, [r7, #1688]
 13192 0bc4 013B     		subs	r3, r3, #1
 13193 0bc6 9A42     		cmp	r2, r3
 13194 0bc8 C0F20181 		blt	.L526
1776:..\src/command_processing.c ****                 break;
1777:..\src/command_processing.c ****             
1778:..\src/command_processing.c ****             if (index == first_imu_parameter+N_IMU_Connected) {
 13195              		.loc 1 1778 0
 13196 0bcc BB1D     		adds	r3, r7, #6
 13197 0bce 1A88     		ldrh	r2, [r3]
 13198 0bd0 B7F89836 		ldrh	r3, [r7, #1688]
 13199 0bd4 8149     		ldr	r1, .L533
 13200 0bd6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 13201 0bd8 0B44     		add	r3, r3, r1
 13202 0bda 9A42     		cmp	r2, r3
 13203 0bdc 05D1     		bne	.L520
1779:..\src/command_processing.c ****                 g_mem.imu.SPI_read_delay = g_rx.buffer[3];  //SPI read delay - uint8
 13204              		.loc 1 1779 0
 13205 0bde 804B     		ldr	r3, .L533+4
 13206 0be0 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 13207 0be2 804B     		ldr	r3, .L533+8
 13208 0be4 83F80122 		strb	r2, [r3, #513]
1780:..\src/command_processing.c ****                 break;
 13209              		.loc 1 1780 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 296


 13210 0be8 F2E0     		b	.L518
 13211              	.L520:
1781:..\src/command_processing.c ****             }
1782:..\src/command_processing.c ****             
1783:..\src/command_processing.c ****             if (index == first_imu_parameter-1) {
 13212              		.loc 1 1783 0
 13213 0bea BB1D     		adds	r3, r7, #6
 13214 0bec 1A88     		ldrh	r2, [r3]
 13215 0bee B7F89836 		ldrh	r3, [r7, #1688]
 13216 0bf2 013B     		subs	r3, r3, #1
 13217 0bf4 9A42     		cmp	r2, r3
 13218 0bf6 05D1     		bne	.L521
1784:..\src/command_processing.c ****                 g_mem.dev.id = g_rx.buffer[3];          //ID - uint8
 13219              		.loc 1 1784 0
 13220 0bf8 794B     		ldr	r3, .L533+4
 13221 0bfa DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 13222 0bfc 794B     		ldr	r3, .L533+8
 13223 0bfe 83F8A020 		strb	r2, [r3, #160]
1785:..\src/command_processing.c ****             }
1786:..\src/command_processing.c ****             else {
1787:..\src/command_processing.c ****             
1788:..\src/command_processing.c ****                 //Set Imu table (index > = first_imu_parameter)
1789:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][0] = g_rx.buffer[3];
1790:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
1791:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
1792:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
1793:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
1794:..\src/command_processing.c ****                 
1795:..\src/command_processing.c ****                 // Recompute IMU packets dimension
1796:..\src/command_processing.c ****                 imus_data_size = 1; //header    
1797:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
1798:..\src/command_processing.c ****                 {
1799:..\src/command_processing.c ****                     single_imu_size[IMU_connected[i]] = 1 + 6*g_mem.imu.IMU_conf[IMU_connected[i]][
1800:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
1801:..\src/command_processing.c ****                 }
1802:..\src/command_processing.c ****                 imus_data_size = imus_data_size + 1;    //checksum
1803:..\src/command_processing.c ****             
1804:..\src/command_processing.c ****             }
1805:..\src/command_processing.c ****             
1806:..\src/command_processing.c ****         break;
 13224              		.loc 1 1806 0
 13225 0c02 E5E0     		b	.L518
 13226              	.L521:
1789:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
 13227              		.loc 1 1789 0
 13228 0c04 BB1D     		adds	r3, r7, #6
 13229 0c06 1A88     		ldrh	r2, [r3]
 13230 0c08 B7F89836 		ldrh	r3, [r7, #1688]
 13231 0c0c D31A     		subs	r3, r2, r3
 13232 0c0e 764A     		ldr	r2, .L533+12
 13233 0c10 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13234 0c12 1946     		mov	r1, r3
 13235 0c14 724B     		ldr	r3, .L533+4
 13236 0c16 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 13237 0c18 724A     		ldr	r2, .L533+8
 13238 0c1a 0B46     		mov	r3, r1
 13239 0c1c 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 297


 13240 0c1e 0B44     		add	r3, r3, r1
 13241 0c20 1344     		add	r3, r3, r2
 13242 0c22 03F20223 		addw	r3, r3, #514
 13243 0c26 0246     		mov	r2, r0
 13244 0c28 1A70     		strb	r2, [r3]
1790:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
 13245              		.loc 1 1790 0
 13246 0c2a BB1D     		adds	r3, r7, #6
 13247 0c2c 1A88     		ldrh	r2, [r3]
 13248 0c2e B7F89836 		ldrh	r3, [r7, #1688]
 13249 0c32 D31A     		subs	r3, r2, r3
 13250 0c34 6C4A     		ldr	r2, .L533+12
 13251 0c36 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13252 0c38 1946     		mov	r1, r3
 13253 0c3a 694B     		ldr	r3, .L533+4
 13254 0c3c 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 13255 0c3e 694A     		ldr	r2, .L533+8
 13256 0c40 0B46     		mov	r3, r1
 13257 0c42 9B00     		lsls	r3, r3, #2
 13258 0c44 0B44     		add	r3, r3, r1
 13259 0c46 1344     		add	r3, r3, r2
 13260 0c48 03F20323 		addw	r3, r3, #515
 13261 0c4c 0246     		mov	r2, r0
 13262 0c4e 1A70     		strb	r2, [r3]
1791:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
 13263              		.loc 1 1791 0
 13264 0c50 BB1D     		adds	r3, r7, #6
 13265 0c52 1A88     		ldrh	r2, [r3]
 13266 0c54 B7F89836 		ldrh	r3, [r7, #1688]
 13267 0c58 D31A     		subs	r3, r2, r3
 13268 0c5a 634A     		ldr	r2, .L533+12
 13269 0c5c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13270 0c5e 1946     		mov	r1, r3
 13271 0c60 5F4B     		ldr	r3, .L533+4
 13272 0c62 5879     		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 13273 0c64 5F4A     		ldr	r2, .L533+8
 13274 0c66 0B46     		mov	r3, r1
 13275 0c68 9B00     		lsls	r3, r3, #2
 13276 0c6a 0B44     		add	r3, r3, r1
 13277 0c6c 1344     		add	r3, r3, r2
 13278 0c6e 03F50173 		add	r3, r3, #516
 13279 0c72 0246     		mov	r2, r0
 13280 0c74 1A70     		strb	r2, [r3]
1792:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
 13281              		.loc 1 1792 0
 13282 0c76 BB1D     		adds	r3, r7, #6
 13283 0c78 1A88     		ldrh	r2, [r3]
 13284 0c7a B7F89836 		ldrh	r3, [r7, #1688]
 13285 0c7e D31A     		subs	r3, r2, r3
 13286 0c80 594A     		ldr	r2, .L533+12
 13287 0c82 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13288 0c84 1946     		mov	r1, r3
 13289 0c86 564B     		ldr	r3, .L533+4
 13290 0c88 9879     		ldrb	r0, [r3, #6]	@ zero_extendqisi2
 13291 0c8a 564A     		ldr	r2, .L533+8
 13292 0c8c 0B46     		mov	r3, r1
 13293 0c8e 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 298


 13294 0c90 0B44     		add	r3, r3, r1
 13295 0c92 1344     		add	r3, r3, r2
 13296 0c94 03F20523 		addw	r3, r3, #517
 13297 0c98 0246     		mov	r2, r0
 13298 0c9a 1A70     		strb	r2, [r3]
1793:..\src/command_processing.c ****                 
 13299              		.loc 1 1793 0
 13300 0c9c BB1D     		adds	r3, r7, #6
 13301 0c9e 1A88     		ldrh	r2, [r3]
 13302 0ca0 B7F89836 		ldrh	r3, [r7, #1688]
 13303 0ca4 D31A     		subs	r3, r2, r3
 13304 0ca6 504A     		ldr	r2, .L533+12
 13305 0ca8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13306 0caa 1946     		mov	r1, r3
 13307 0cac 4C4B     		ldr	r3, .L533+4
 13308 0cae D879     		ldrb	r0, [r3, #7]	@ zero_extendqisi2
 13309 0cb0 4C4A     		ldr	r2, .L533+8
 13310 0cb2 0B46     		mov	r3, r1
 13311 0cb4 9B00     		lsls	r3, r3, #2
 13312 0cb6 0B44     		add	r3, r3, r1
 13313 0cb8 1344     		add	r3, r3, r2
 13314 0cba 03F20623 		addw	r3, r3, #518
 13315 0cbe 0246     		mov	r2, r0
 13316 0cc0 1A70     		strb	r2, [r3]
1796:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
 13317              		.loc 1 1796 0
 13318 0cc2 4A4B     		ldr	r3, .L533+16
 13319 0cc4 0122     		movs	r2, #1
 13320 0cc6 1A60     		str	r2, [r3]
1797:..\src/command_processing.c ****                 {
 13321              		.loc 1 1797 0
 13322 0cc8 0023     		movs	r3, #0
 13323 0cca A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13324 0cce 71E0     		b	.L523
 13325              	.L524:
1799:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
 13326              		.loc 1 1799 0 discriminator 3
 13327 0cd0 B7F8A436 		ldrh	r3, [r7, #1700]
 13328 0cd4 444A     		ldr	r2, .L533+12
 13329 0cd6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13330 0cd8 1C46     		mov	r4, r3
 13331 0cda B7F8A436 		ldrh	r3, [r7, #1700]
 13332 0cde 424A     		ldr	r2, .L533+12
 13333 0ce0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13334 0ce2 1946     		mov	r1, r3
 13335 0ce4 3F4A     		ldr	r2, .L533+8
 13336 0ce6 0B46     		mov	r3, r1
 13337 0ce8 9B00     		lsls	r3, r3, #2
 13338 0cea 0B44     		add	r3, r3, r1
 13339 0cec 1344     		add	r3, r3, r2
 13340 0cee 03F20223 		addw	r3, r3, #514
 13341 0cf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13342 0cf4 1A46     		mov	r2, r3
 13343 0cf6 1346     		mov	r3, r2
 13344 0cf8 5B00     		lsls	r3, r3, #1
 13345 0cfa 1344     		add	r3, r3, r2
 13346 0cfc 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 299


 13347 0cfe 5A1C     		adds	r2, r3, #1
 13348 0d00 B7F8A436 		ldrh	r3, [r7, #1700]
 13349 0d04 3849     		ldr	r1, .L533+12
 13350 0d06 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13351 0d08 1846     		mov	r0, r3
 13352 0d0a 3649     		ldr	r1, .L533+8
 13353 0d0c 0346     		mov	r3, r0
 13354 0d0e 9B00     		lsls	r3, r3, #2
 13355 0d10 0344     		add	r3, r3, r0
 13356 0d12 0B44     		add	r3, r3, r1
 13357 0d14 03F20323 		addw	r3, r3, #515
 13358 0d18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13359 0d1a 1946     		mov	r1, r3
 13360 0d1c 0B46     		mov	r3, r1
 13361 0d1e 5B00     		lsls	r3, r3, #1
 13362 0d20 0B44     		add	r3, r3, r1
 13363 0d22 5B00     		lsls	r3, r3, #1
 13364 0d24 1A44     		add	r2, r2, r3
 13365 0d26 B7F8A436 		ldrh	r3, [r7, #1700]
 13366 0d2a 2F49     		ldr	r1, .L533+12
 13367 0d2c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13368 0d2e 1846     		mov	r0, r3
 13369 0d30 2C49     		ldr	r1, .L533+8
 13370 0d32 0346     		mov	r3, r0
 13371 0d34 9B00     		lsls	r3, r3, #2
 13372 0d36 0344     		add	r3, r3, r0
 13373 0d38 0B44     		add	r3, r3, r1
 13374 0d3a 03F50173 		add	r3, r3, #516
 13375 0d3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13376 0d40 1946     		mov	r1, r3
 13377 0d42 0B46     		mov	r3, r1
 13378 0d44 5B00     		lsls	r3, r3, #1
 13379 0d46 0B44     		add	r3, r3, r1
 13380 0d48 5B00     		lsls	r3, r3, #1
 13381 0d4a 1A44     		add	r2, r2, r3
 13382 0d4c B7F8A436 		ldrh	r3, [r7, #1700]
 13383 0d50 2549     		ldr	r1, .L533+12
 13384 0d52 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13385 0d54 1846     		mov	r0, r3
 13386 0d56 2349     		ldr	r1, .L533+8
 13387 0d58 0346     		mov	r3, r0
 13388 0d5a 9B00     		lsls	r3, r3, #2
 13389 0d5c 0344     		add	r3, r3, r0
 13390 0d5e 0B44     		add	r3, r3, r1
 13391 0d60 03F20523 		addw	r3, r3, #517
 13392 0d64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13393 0d66 1B01     		lsls	r3, r3, #4
 13394 0d68 1A44     		add	r2, r2, r3
 13395 0d6a B7F8A436 		ldrh	r3, [r7, #1700]
 13396 0d6e 1E49     		ldr	r1, .L533+12
 13397 0d70 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13398 0d72 1846     		mov	r0, r3
 13399 0d74 1B49     		ldr	r1, .L533+8
 13400 0d76 0346     		mov	r3, r0
 13401 0d78 9B00     		lsls	r3, r3, #2
 13402 0d7a 0344     		add	r3, r3, r0
 13403 0d7c 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 300


 13404 0d7e 03F20623 		addw	r3, r3, #518
 13405 0d82 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13406 0d84 5B00     		lsls	r3, r3, #1
 13407 0d86 1344     		add	r3, r3, r2
 13408 0d88 0133     		adds	r3, r3, #1
 13409 0d8a 194A     		ldr	r2, .L533+20
 13410 0d8c 42F82430 		str	r3, [r2, r4, lsl #2]
1800:..\src/command_processing.c ****                 }
 13411              		.loc 1 1800 0 discriminator 3
 13412 0d90 B7F8A436 		ldrh	r3, [r7, #1700]
 13413 0d94 144A     		ldr	r2, .L533+12
 13414 0d96 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13415 0d98 1A46     		mov	r2, r3
 13416 0d9a 154B     		ldr	r3, .L533+20
 13417 0d9c 53F82220 		ldr	r2, [r3, r2, lsl #2]
 13418 0da0 124B     		ldr	r3, .L533+16
 13419 0da2 1B68     		ldr	r3, [r3]
 13420 0da4 1344     		add	r3, r3, r2
 13421 0da6 114A     		ldr	r2, .L533+16
 13422 0da8 1360     		str	r3, [r2]
1797:..\src/command_processing.c ****                 {
 13423              		.loc 1 1797 0 discriminator 3
 13424 0daa B7F8A436 		ldrh	r3, [r7, #1700]
 13425 0dae 0133     		adds	r3, r3, #1
 13426 0db0 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13427              	.L523:
1797:..\src/command_processing.c ****                 {
 13428              		.loc 1 1797 0 is_stmt 0 discriminator 1
 13429 0db4 094B     		ldr	r3, .L533
 13430 0db6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13431 0db8 9BB2     		uxth	r3, r3
 13432 0dba B7F8A426 		ldrh	r2, [r7, #1700]
 13433 0dbe 9A42     		cmp	r2, r3
 13434 0dc0 86D3     		bcc	.L524
1802:..\src/command_processing.c ****             
 13435              		.loc 1 1802 0 is_stmt 1
 13436 0dc2 0A4B     		ldr	r3, .L533+16
 13437 0dc4 1B68     		ldr	r3, [r3]
 13438 0dc6 0133     		adds	r3, r3, #1
 13439 0dc8 084A     		ldr	r2, .L533+16
 13440 0dca 1360     		str	r3, [r2]
 13441              		.loc 1 1806 0
 13442 0dcc 00E0     		b	.L518
 13443              	.L526:
1776:..\src/command_processing.c ****             
 13444              		.loc 1 1776 0
 13445 0dce 00BF     		nop
 13446              	.L518:
1807:..\src/command_processing.c ****     }
1808:..\src/command_processing.c **** }
 13447              		.loc 1 1808 0 discriminator 1
 13448 0dd0 00BF     		nop
 13449 0dd2 07F5D567 		add	r7, r7, #1704
 13450              		.cfi_def_cfa_offset 16
 13451 0dd6 BD46     		mov	sp, r7
 13452              		.cfi_def_cfa_register 13
 13453              		@ sp needed
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 301


 13454 0dd8 B0BD     		pop	{r4, r5, r7, pc}
 13455              	.L534:
 13456 0dda 00BF     		.align	2
 13457              	.L533:
 13458 0ddc 00000000 		.word	N_IMU_Connected
 13459 0de0 00000000 		.word	g_rx
 13460 0de4 00000000 		.word	g_mem
 13461 0de8 00000000 		.word	IMU_connected
 13462 0dec 00000000 		.word	imus_data_size
 13463 0df0 00000000 		.word	single_imu_size
 13464              		.cfi_endproc
 13465              	.LFE70:
 13466              		.size	get_IMU_param_list, .-get_IMU_param_list
 13467              		.section	.text.setZeros,"ax",%progbits
 13468              		.align	2
 13469              		.global	setZeros
 13470              		.thumb
 13471              		.thumb_func
 13472              		.type	setZeros, %function
 13473              	setZeros:
 13474              	.LFB71:
1809:..\src/command_processing.c **** 
1810:..\src/command_processing.c **** //==============================================================================
1811:..\src/command_processing.c **** //                                                            COMMAND SET ZEROS
1812:..\src/command_processing.c **** //==============================================================================
1813:..\src/command_processing.c **** 
1814:..\src/command_processing.c **** void setZeros()
1815:..\src/command_processing.c **** {
 13475              		.loc 1 1815 0
 13476              		.cfi_startproc
 13477              		@ args = 0, pretend = 0, frame = 8
 13478              		@ frame_needed = 1, uses_anonymous_args = 0
 13479 0000 90B5     		push	{r4, r7, lr}
 13480              		.cfi_def_cfa_offset 12
 13481              		.cfi_offset 4, -12
 13482              		.cfi_offset 7, -8
 13483              		.cfi_offset 14, -4
 13484 0002 83B0     		sub	sp, sp, #12
 13485              		.cfi_def_cfa_offset 24
 13486 0004 00AF     		add	r7, sp, #0
 13487              		.cfi_def_cfa_register 7
1816:..\src/command_processing.c ****     uint8 CYDATA i, j;        // iterator
1817:..\src/command_processing.c ****     
1818:..\src/command_processing.c ****     for (j = 0; j < N_ENCODER_LINE_MAX; j++) {
 13488              		.loc 1 1818 0
 13489 0006 0023     		movs	r3, #0
 13490 0008 BB71     		strb	r3, [r7, #6]
 13491 000a 26E0     		b	.L536
 13492              	.L539:
1819:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 13493              		.loc 1 1819 0
 13494 000c 0023     		movs	r3, #0
 13495 000e FB71     		strb	r3, [r7, #7]
 13496 0010 1DE0     		b	.L537
 13497              	.L538:
1820:..\src/command_processing.c ****             g_mem.enc[j].m_off[i] = data_encoder_raw[i];
 13498              		.loc 1 1820 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 302


 13499 0012 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 13500 0014 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 13501 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13502 0018 1648     		ldr	r0, .L540
 13503 001a 50F82330 		ldr	r3, [r0, r3, lsl #2]
 13504 001e 1C46     		mov	r4, r3
 13505 0020 1548     		ldr	r0, .L540+4
 13506 0022 1346     		mov	r3, r2
 13507 0024 5B00     		lsls	r3, r3, #1
 13508 0026 1344     		add	r3, r3, r2
 13509 0028 9B00     		lsls	r3, r3, #2
 13510 002a 0B44     		add	r3, r3, r1
 13511 002c 6633     		adds	r3, r3, #102
 13512 002e 40F82340 		str	r4, [r0, r3, lsl #2]
1821:..\src/command_processing.c ****             g_meas[j].rot[i] = 0;
 13513              		.loc 1 1821 0 discriminator 3
 13514 0032 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 13515 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13516 0036 1149     		ldr	r1, .L540+8
 13517 0038 3420     		movs	r0, #52
 13518 003a 00FB02F2 		mul	r2, r0, r2
 13519 003e 0A44     		add	r2, r2, r1
 13520 0040 1344     		add	r3, r3, r2
 13521 0042 1833     		adds	r3, r3, #24
 13522 0044 0022     		movs	r2, #0
 13523 0046 1A70     		strb	r2, [r3]
1819:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 13524              		.loc 1 1819 0 discriminator 3
 13525 0048 FB79     		ldrb	r3, [r7, #7]
 13526 004a 0133     		adds	r3, r3, #1
 13527 004c FB71     		strb	r3, [r7, #7]
 13528              	.L537:
1819:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 13529              		.loc 1 1819 0 is_stmt 0 discriminator 1
 13530 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13531 0050 022B     		cmp	r3, #2
 13532 0052 DED9     		bls	.L538
1818:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 13533              		.loc 1 1818 0 is_stmt 1 discriminator 2
 13534 0054 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 13535 0056 0133     		adds	r3, r3, #1
 13536 0058 BB71     		strb	r3, [r7, #6]
 13537              	.L536:
1818:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 13538              		.loc 1 1818 0 is_stmt 0 discriminator 1
 13539 005a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 13540 005c 012B     		cmp	r3, #1
 13541 005e D5D9     		bls	.L539
1822:..\src/command_processing.c ****         }
1823:..\src/command_processing.c ****     }
1824:..\src/command_processing.c ****     reset_last_value_flag = 1;
 13542              		.loc 1 1824 0 is_stmt 1
 13543 0060 074B     		ldr	r3, .L540+12
 13544 0062 0122     		movs	r2, #1
 13545 0064 1A70     		strb	r2, [r3]
1825:..\src/command_processing.c **** 
1826:..\src/command_processing.c ****     sendAcknowledgment(ACK_OK);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 303


 13546              		.loc 1 1826 0
 13547 0066 0120     		movs	r0, #1
 13548 0068 FFF7FEFF 		bl	sendAcknowledgment
1827:..\src/command_processing.c **** }
 13549              		.loc 1 1827 0
 13550 006c 00BF     		nop
 13551 006e 0C37     		adds	r7, r7, #12
 13552              		.cfi_def_cfa_offset 12
 13553 0070 BD46     		mov	sp, r7
 13554              		.cfi_def_cfa_register 13
 13555              		@ sp needed
 13556 0072 90BD     		pop	{r4, r7, pc}
 13557              	.L541:
 13558              		.align	2
 13559              	.L540:
 13560 0074 00000000 		.word	data_encoder_raw
 13561 0078 00000000 		.word	g_mem
 13562 007c 00000000 		.word	g_meas
 13563 0080 00000000 		.word	reset_last_value_flag
 13564              		.cfi_endproc
 13565              	.LFE71:
 13566              		.size	setZeros, .-setZeros
 13567              		.section	.rodata
 13568              		.align	2
 13569              	.LC147:
 13570 10a8 0D0A00   		.ascii	"\015\012\000"
 13571 10ab 00       		.align	2
 13572              	.LC148:
 13573 10ac 4669726D 		.ascii	"Firmware version: \000"
 13573      77617265 
 13573      20766572 
 13573      73696F6E 
 13573      3A2000
 13574 10bf 00       		.align	2
 13575              	.LC149:
 13576 10c0 4F74746F 		.ascii	"Ottobock Active Wrist firmware v. 1.9 (PSoC5) - Mas"
 13576      626F636B 
 13576      20416374 
 13576      69766520 
 13576      57726973 
 13577 10f3 74657220 		.ascii	"ter configuration\000"
 13577      636F6E66 
 13577      69677572 
 13577      6174696F 
 13577      6E00
 13578 1105 000000   		.align	2
 13579              	.LC150:
 13580 1108 2E0D0A0D 		.ascii	".\015\012\015\012\000"
 13580      0A00
 13581 110e 0000     		.align	2
 13582              	.LC151:
 13583 1110 44455649 		.ascii	"DEVICE INFO\015\012\000"
 13583      43452049 
 13583      4E464F0D 
 13583      0A00
 13584 111e 0000     		.align	2
 13585              	.LC152:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 304


 13586 1120 49443A20 		.ascii	"ID: %d\015\012\000"
 13586      25640D0A 
 13586      00
 13587 1129 000000   		.align	2
 13588              	.LC153:
 13589 112c 44657669 		.ascii	"Device: SOFTHAND PRO\015\012\000"
 13589      63653A20 
 13589      534F4654 
 13589      48414E44 
 13589      2050524F 
 13590 1143 00       		.align	2
 13591              	.LC154:
 13592 1144 44657669 		.ascii	"Device: GENERIC 2 MOTORS\015\012\000"
 13592      63653A20 
 13592      47454E45 
 13592      52494320 
 13592      32204D4F 
 13593 115f 00       		.align	2
 13594              	.LC155:
 13595 1160 44657669 		.ascii	"Device: AIR CHAMBERS HAPTIC FEEDBACK\015\012\000"
 13595      63653A20 
 13595      41495220 
 13595      4348414D 
 13595      42455253 
 13596 1187 00       		.align	2
 13597              	.LC156:
 13598 1188 44657669 		.ascii	"Device: OTTOBOCK 6v ACTIVE WRIST MASTER\015\012\000"
 13598      63653A20 
 13598      4F54544F 
 13598      424F434B 
 13598      20367620 
 13599 11b2 0000     		.align	2
 13600              	.LC157:
 13601 11b4 44657669 		.ascii	"Device: SOFTHAND 2 MOTORS\015\012\000"
 13601      63653A20 
 13601      534F4654 
 13601      48414E44 
 13601      2032204D 
 13602              		.align	2
 13603              	.LC158:
 13604 11d0 48616E64 		.ascii	"Hand side: RIGHT\015\012\000"
 13604      20736964 
 13604      653A2052 
 13604      49474854 
 13604      0D0A00
 13605 11e3 00       		.align	2
 13606              	.LC159:
 13607 11e4 48616E64 		.ascii	"Hand side: LEFT\015\012\000"
 13607      20736964 
 13607      653A204C 
 13607      4546540D 
 13607      0A00
 13608 11f6 0000     		.align	2
 13609              	.LC160:
 13610 11f8 55736572 		.ascii	"User: MARIA\015\012\000"
 13610      3A204D41 
 13610      5249410D 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 305


 13610      0A00
 13611 1206 0000     		.align	2
 13612              	.LC161:
 13613 1208 55736572 		.ascii	"User: ROZA\015\012\000"
 13613      3A20524F 
 13613      5A410D0A 
 13613      00
 13614 1215 000000   		.align	2
 13615              	.LC162:
 13616 1218 55736572 		.ascii	"User: GENERIC USER\015\012\000"
 13616      3A204745 
 13616      4E455249 
 13616      43205553 
 13616      45520D0A 
 13617 122d 000000   		.align	2
 13618              	.LC163:
 13619 1230 4D4F544F 		.ascii	"MOTOR %d INFO\015\012\000"
 13619      52202564 
 13619      20494E46 
 13619      4F0D0A00 
 13620              		.align	2
 13621              	.LC164:
 13622 1240 4D6F746F 		.ascii	"Motor reference\000"
 13622      72207265 
 13622      66657265 
 13622      6E636500 
 13623              		.align	2
 13624              	.LC165:
 13625 1250 202D2043 		.ascii	" - Currents: \000"
 13625      75727265 
 13625      6E74733A 
 13625      2000
 13626 125e 0000     		.align	2
 13627              	.LC166:
 13628 1260 202D2050 		.ascii	" - Pwm: \000"
 13628      776D3A20 
 13628      00
 13629 1269 000000   		.align	2
 13630              	.LC167:
 13631 126c 202D2050 		.ascii	" - Position: \000"
 13631      6F736974 
 13631      696F6E3A 
 13631      2000
 13632 127a 0000     		.align	2
 13633              	.LC168:
 13634 127c 25642000 		.ascii	"%d \000"
 13635              		.align	2
 13636              	.LC169:
 13637 1280 4D6F746F 		.ascii	"Motor enabled: \000"
 13637      7220656E 
 13637      61626C65 
 13637      643A2000 
 13638              		.align	2
 13639              	.LC170:
 13640 1290 5945530D 		.ascii	"YES\015\012\000"
 13640      0A00
 13641 1296 0000     		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 306


 13642              	.LC171:
 13643 1298 4E4F0D0A 		.ascii	"NO\015\012\000"
 13643      00
 13644 129d 000000   		.align	2
 13645              	.LC172:
 13646 12a0 50574D20 		.ascii	"PWM rescaling activation: \000"
 13646      72657363 
 13646      616C696E 
 13646      67206163 
 13646      74697661 
 13647 12bb 00       		.align	2
 13648              	.LC173:
 13649 12bc 5945530A 		.ascii	"YES\012\000"
 13649      00
 13650 12c1 000000   		.align	2
 13651              	.LC174:
 13652 12c4 4E4F0A00 		.ascii	"NO\012\000"
 13653              		.align	2
 13654              	.LC175:
 13655 12c8 50574D20 		.ascii	"PWM Limit: %d\015\012\000"
 13655      4C696D69 
 13655      743A2025 
 13655      640D0A00 
 13656              		.align	2
 13657              	.LC176:
 13658 12d8 0D0A4D45 		.ascii	"\015\012MEASUREMENTS INFO\015\012\000"
 13658      41535552 
 13658      454D454E 
 13658      54532049 
 13658      4E464F0D 
 13659 12ee 0000     		.align	2
 13660              	.LC177:
 13661 12f0 53656E73 		.ascii	"Sensor value: \000"
 13661      6F722076 
 13661      616C7565 
 13661      3A2000
 13662 12ff 00       		.align	2
 13663              	.LC178:
 13664 1300 256400   		.ascii	"%d\000"
 13665 1303 00       		.align	2
 13666              	.LC179:
 13667 1304 2C2000   		.ascii	", \000"
 13668 1307 00       		.align	2
 13669              	.LC180:
 13670 1308 4A6F7973 		.ascii	"Joystick measurements: %d, %d\000"
 13670      7469636B 
 13670      206D6561 
 13670      73757265 
 13670      6D656E74 
 13671 1326 0000     		.align	2
 13672              	.LC181:
 13673 1328 42617474 		.ascii	"Battery %d Voltage (mV): %ld\000"
 13673      65727920 
 13673      25642056 
 13673      6F6C7461 
 13673      67652028 
 13674 1345 000000   		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 307


 13675              	.LC182:
 13676 1348 46756C6C 		.ascii	"Full charge power tension %d (mV): %ld\000"
 13676      20636861 
 13676      72676520 
 13676      706F7765 
 13676      72207465 
 13677 136f 00       		.align	2
 13678              	.LC183:
 13679 1370 43757272 		.ascii	"Current %d (mA): %ld\000"
 13679      656E7420 
 13679      25642028 
 13679      6D41293A 
 13679      20256C64 
 13680 1385 000000   		.align	2
 13681              	.LC184:
 13682 1388 4C617374 		.ascii	"Last Grasp Hold Current %d (mA): %ld\000"
 13682      20477261 
 13682      73702048 
 13682      6F6C6420 
 13682      43757272 
 13683 13ad 000000   		.align	2
 13684              	.LC185:
 13685 13b0 0D0A4D4F 		.ascii	"\015\012MOTOR %d CONFIGURATION\015\012\000"
 13685      544F5220 
 13685      25642043 
 13685      4F4E4649 
 13685      47555241 
 13686 13cb 00       		.align	2
 13687              	.LC186:
 13688 13cc 50494420 		.ascii	"PID Controller: \000"
 13688      436F6E74 
 13688      726F6C6C 
 13688      65723A20 
 13688      00
 13689              		.global	__aeabi_i2d
 13690              		.global	__aeabi_ddiv
 13691 13dd 000000   		.align	2
 13692              	.LC187:
 13693 13e0 50202D3E 		.ascii	"P -> %f  \000"
 13693      20256620 
 13693      2000
 13694 13ea 0000     		.align	2
 13695              	.LC188:
 13696 13ec 49202D3E 		.ascii	"I -> %f  \000"
 13696      20256620 
 13696      2000
 13697 13f6 0000     		.align	2
 13698              	.LC189:
 13699 13f8 44202D3E 		.ascii	"D -> %f\015\012\000"
 13699      2025660D 
 13699      0A00
 13700 1402 0000     		.align	2
 13701              	.LC190:
 13702 1404 43757272 		.ascii	"Current PID Controller: \000"
 13702      656E7420 
 13702      50494420 
 13702      436F6E74 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 308


 13702      726F6C6C 
 13703 141d 000000   		.align	2
 13704              	.LC191:
 13705 1420 53746172 		.ascii	"Startup activation: YES\015\012\000"
 13705      74757020 
 13705      61637469 
 13705      76617469 
 13705      6F6E3A20 
 13706 143a 0000     		.align	2
 13707              	.LC192:
 13708 143c 53746172 		.ascii	"Startup activation: NO\015\012\000"
 13708      74757020 
 13708      61637469 
 13708      76617469 
 13708      6F6E3A20 
 13709 1455 000000   		.align	2
 13710              	.LC193:
 13711 1458 496E7075 		.ascii	"Input mode: USB\015\012\000"
 13711      74206D6F 
 13711      64653A20 
 13711      5553420D 
 13711      0A00
 13712 146a 0000     		.align	2
 13713              	.LC194:
 13714 146c 496E7075 		.ascii	"Input mode: Handle\015\012\000"
 13714      74206D6F 
 13714      64653A20 
 13714      48616E64 
 13714      6C650D0A 
 13715 1481 000000   		.align	2
 13716              	.LC195:
 13717 1484 496E7075 		.ascii	"Input mode: EMG proportional\015\012\000"
 13717      74206D6F 
 13717      64653A20 
 13717      454D4720 
 13717      70726F70 
 13718 14a3 00       		.align	2
 13719              	.LC196:
 13720 14a4 496E7075 		.ascii	"Input mode: EMG integral\015\012\000"
 13720      74206D6F 
 13720      64653A20 
 13720      454D4720 
 13720      696E7465 
 13721 14bf 00       		.align	2
 13722              	.LC197:
 13723 14c0 496E7075 		.ascii	"Input mode: EMG FCFS\015\012\000"
 13723      74206D6F 
 13723      64653A20 
 13723      454D4720 
 13723      46434653 
 13724 14d7 00       		.align	2
 13725              	.LC198:
 13726 14d8 496E7075 		.ascii	"Input mode: EMG FCFS ADV\015\012\000"
 13726      74206D6F 
 13726      64653A20 
 13726      454D4720 
 13726      46434653 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 309


 13727 14f3 00       		.align	2
 13728              	.LC199:
 13729 14f4 496E7075 		.ascii	"Input mode: Joystick\015\012\000"
 13729      74206D6F 
 13729      64653A20 
 13729      4A6F7973 
 13729      7469636B 
 13730 150b 00       		.align	2
 13731              	.LC200:
 13732 150c 496E7075 		.ascii	"Input mode: EMG proportional Normally Closed\015\012"
 13732      74206D6F 
 13732      64653A20 
 13732      454D4720 
 13732      70726F70 
 13733 153a 00       		.ascii	"\000"
 13734 153b 00       		.align	2
 13735              	.LC201:
 13736 153c 436F6E74 		.ascii	"Control mode: Position\015\012\000"
 13736      726F6C20 
 13736      6D6F6465 
 13736      3A20506F 
 13736      73697469 
 13737 1555 000000   		.align	2
 13738              	.LC202:
 13739 1558 436F6E74 		.ascii	"Control mode: PWM\015\012\000"
 13739      726F6C20 
 13739      6D6F6465 
 13739      3A205057 
 13739      4D0D0A00 
 13740              		.align	2
 13741              	.LC203:
 13742 156c 436F6E74 		.ascii	"Control mode: Current\015\012\000"
 13742      726F6C20 
 13742      6D6F6465 
 13742      3A204375 
 13742      7272656E 
 13743              		.align	2
 13744              	.LC204:
 13745 1584 436F6E74 		.ascii	"Control mode: Position and Current\015\012\000"
 13745      726F6C20 
 13745      6D6F6465 
 13745      3A20506F 
 13745      73697469 
 13746 15a9 000000   		.align	2
 13747              	.LC205:
 13748 15ac 4162736F 		.ascii	"Absolute encoder position: YES\015\012\000"
 13748      6C757465 
 13748      20656E63 
 13748      6F646572 
 13748      20706F73 
 13749 15cd 000000   		.align	2
 13750              	.LC206:
 13751 15d0 4162736F 		.ascii	"Absolute encoder position: NO\015\012\000"
 13751      6C757465 
 13751      20656E63 
 13751      6F646572 
 13751      20706F73 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 310


 13752              		.align	2
 13753              	.LC207:
 13754 15f0 4D6F746F 		.ascii	"Motor-Handle Ratio: %d\015\012\000"
 13754      722D4861 
 13754      6E646C65 
 13754      20526174 
 13754      696F3A20 
 13755 1609 000000   		.align	2
 13756              	.LC208:
 13757 160c 53656E73 		.ascii	"Sensor resolution: \000"
 13757      6F722072 
 13757      65736F6C 
 13757      7574696F 
 13757      6E3A2000 
 13758              		.align	2
 13759              	.LC209:
 13760 1620 4D656173 		.ascii	"Measurement Offset: \000"
 13760      7572656D 
 13760      656E7420 
 13760      4F666673 
 13760      65743A20 
 13761 1635 000000   		.align	2
 13762              	.LC210:
 13763 1638 256C6400 		.ascii	"%ld\000"
 13764              		.align	2
 13765              	.LC211:
 13766 163c 4D656173 		.ascii	"Measurement Multiplier: \000"
 13766      7572656D 
 13766      656E7420 
 13766      4D756C74 
 13766      69706C69 
 13767              		.global	__aeabi_f2d
 13768 1655 000000   		.align	2
 13769              	.LC212:
 13770 1658 256600   		.ascii	"%f\000"
 13771 165b 00       		.align	2
 13772              	.LC213:
 13773 165c 43757272 		.ascii	"Current lookup table: %f, %f, %f, %f, %f, %f\015\012"
 13773      656E7420 
 13773      6C6F6F6B 
 13773      75702074 
 13773      61626C65 
 13774 168a 00       		.ascii	"\000"
 13775 168b 00       		.align	2
 13776              	.LC214:
 13777 168c 506F7369 		.ascii	"Position limit active: %d\000"
 13777      74696F6E 
 13777      206C696D 
 13777      69742061 
 13777      63746976 
 13778 16a6 0000     		.align	2
 13779              	.LC215:
 13780 16a8 506F7369 		.ascii	"Position limit motor: inf -> %ld  \000"
 13780      74696F6E 
 13780      206C696D 
 13780      6974206D 
 13780      6F746F72 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 311


 13781 16cb 00       		.align	2
 13782              	.LC216:
 13783 16cc 73757020 		.ascii	"sup -> %ld\015\012\000"
 13783      2D3E2025 
 13783      6C640D0A 
 13783      00
 13784 16d9 000000   		.align	2
 13785              	.LC217:
 13786 16dc 4D617820 		.ascii	"Max step pos and neg: %d %d\000"
 13786      73746570 
 13786      20706F73 
 13786      20616E64 
 13786      206E6567 
 13787              		.align	2
 13788              	.LC218:
 13789 16f8 43757272 		.ascii	"Current limit: %d\015\012\000"
 13789      656E7420 
 13789      6C696D69 
 13789      743A2025 
 13789      640D0A00 
 13790              		.align	2
 13791              	.LC219:
 13792 170c 454D4720 		.ascii	"EMG CONFIGURATION\015\012\000"
 13792      434F4E46 
 13792      49475552 
 13792      4154494F 
 13792      4E0D0A00 
 13793              		.align	2
 13794              	.LC220:
 13795 1720 454D4720 		.ascii	"EMG thresholds [0 - 1024]: %u, %u\000"
 13795      74687265 
 13795      73686F6C 
 13795      6473205B 
 13795      30202D20 
 13796 1742 0000     		.align	2
 13797              	.LC221:
 13798 1744 454D4720 		.ascii	"EMG max values [0 - 4096]: %lu, %lu\000"
 13798      6D617820 
 13798      76616C75 
 13798      6573205B 
 13798      30202D20 
 13799              		.align	2
 13800              	.LC222:
 13801 1768 454D4720 		.ascii	"EMG inversion: YES\015\012\000"
 13801      696E7665 
 13801      7273696F 
 13801      6E3A2059 
 13801      45530D0A 
 13802 177d 000000   		.align	2
 13803              	.LC223:
 13804 1780 454D4720 		.ascii	"EMG inversion: NO\015\012\000"
 13804      696E7665 
 13804      7273696F 
 13804      6E3A204E 
 13804      4F0D0A00 
 13805              		.align	2
 13806              	.LC224:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 312


 13807 1794 43616C69 		.ascii	"Calibration enabled: YES\015\012\000"
 13807      62726174 
 13807      696F6E20 
 13807      656E6162 
 13807      6C65643A 
 13808 17af 00       		.align	2
 13809              	.LC225:
 13810 17b0 43616C69 		.ascii	"Calibration enabled: NO\015\012\000"
 13810      62726174 
 13810      696F6E20 
 13810      656E6162 
 13810      6C65643A 
 13811 17ca 0000     		.align	2
 13812              	.LC226:
 13813 17cc 454D4720 		.ascii	"EMG max speed: %d %d\000"
 13813      6D617820 
 13813      73706565 
 13813      643A2025 
 13813      64202564 
 13814 17e1 000000   		.align	2
 13815              	.LC227:
 13816 17e4 41646469 		.ascii	"Additional ADC sensors value:\015\012\000"
 13816      74696F6E 
 13816      616C2041 
 13816      44432073 
 13816      656E736F 
 13817              		.align	2
 13818              	.LC228:
 13819 1804 41444320 		.ascii	"ADC %d -> %d\000"
 13819      2564202D 
 13819      3E202564 
 13819      00
 13820 1811 000000   		.align	2
 13821              	.LC229:
 13822 1814 454D4720 		.ascii	"EMG input %d -> %d\000"
 13822      696E7075 
 13822      74202564 
 13822      202D3E20 
 13822      256400
 13823 1827 00       		.align	2
 13824              	.LC230:
 13825 1828 52657374 		.ascii	"Rest time delay (ms): %d\000"
 13825      2074696D 
 13825      65206465 
 13825      6C617920 
 13825      286D7329 
 13826 1841 000000   		.align	2
 13827              	.LC231:
 13828 1844 52657374 		.ascii	"Rest velocity closure (ticks/sec): %d\000"
 13828      2076656C 
 13828      6F636974 
 13828      7920636C 
 13828      6F737572 
 13829 186a 0000     		.align	2
 13830              	.LC232:
 13831 186c 52657374 		.ascii	"Rest position: %d\000"
 13831      20706F73 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 313


 13831      6974696F 
 13831      6E3A2025 
 13831      6400
 13832 187e 0000     		.align	2
 13833              	.LC233:
 13834 1880 494D5520 		.ascii	"IMU Connected: %d\015\012\000"
 13834      436F6E6E 
 13834      65637465 
 13834      643A2025 
 13834      640D0A00 
 13835              		.align	2
 13836              	.LC234:
 13837 1894 494D5573 		.ascii	"IMUs CONFIGURATION\015\012\000"
 13837      20434F4E 
 13837      46494755 
 13837      52415449 
 13837      4F4E0D0A 
 13838 18a9 000000   		.align	2
 13839              	.LC235:
 13840 18ac 496D7520 		.ascii	"Imu %d \015\012\011ID: %d\015\012\000"
 13840      2564200D 
 13840      0A094944 
 13840      3A202564 
 13840      0D0A00
 13841 18bf 00       		.align	2
 13842              	.LC236:
 13843 18c0 09416363 		.ascii	"\011Accelerometers: \000"
 13843      656C6572 
 13843      6F6D6574 
 13843      6572733A 
 13843      2000
 13844 18d2 0000     		.align	2
 13845              	.LC237:
 13846 18d4 09477972 		.ascii	"\011Gyroscopes: \000"
 13846      6F73636F 
 13846      7065733A 
 13846      2000
 13847 18e2 0000     		.align	2
 13848              	.LC238:
 13849 18e4 094D6167 		.ascii	"\011Magnetometers: \000"
 13849      6E65746F 
 13849      6D657465 
 13849      72733A20 
 13849      00
 13850 18f5 000000   		.align	2
 13851              	.LC239:
 13852 18f8 09517561 		.ascii	"\011Quaternion: \000"
 13852      7465726E 
 13852      696F6E3A 
 13852      2000
 13853 1906 0000     		.align	2
 13854              	.LC240:
 13855 1908 0954656D 		.ascii	"\011Temperature: \000"
 13855      70657261 
 13855      74757265 
 13855      3A2000
 13856 1917 00       		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 314


 13857              	.LC241:
 13858 1918 536C6176 		.ascii	"Slave communication active: YES\015\012\000"
 13858      6520636F 
 13858      6D6D756E 
 13858      69636174 
 13858      696F6E20 
 13859 193a 0000     		.align	2
 13860              	.LC242:
 13861 193c 536C6176 		.ascii	"Slave communication active: NO\015\012\000"
 13861      6520636F 
 13861      6D6D756E 
 13861      69636174 
 13861      696F6E20 
 13862 195d 000000   		.align	2
 13863              	.LC243:
 13864 1960 536C6176 		.ascii	"Slave ID: %d\015\012\000"
 13864      65204944 
 13864      3A202564 
 13864      0D0A00
 13865 196f 00       		.align	2
 13866              	.LC244:
 13867 1970 4C617374 		.ascii	"Last FW cycle time: %u us\015\012\000"
 13867      20465720 
 13867      6379636C 
 13867      65207469 
 13867      6D653A20 
 13868              		.align	2
 13869              	.LC245:
 13870 198c 0D0A0000 		.ascii	"\015\012\000\000"
 13871              		.section	.text.prepare_generic_info,"ax",%progbits
 13872              		.align	2
 13873              		.global	prepare_generic_info
 13874              		.thumb
 13875              		.thumb_func
 13876              		.type	prepare_generic_info, %function
 13877              	prepare_generic_info:
 13878              	.LFB72:
1828:..\src/command_processing.c **** 
1829:..\src/command_processing.c **** //==============================================================================
1830:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
1831:..\src/command_processing.c **** //==============================================================================
1832:..\src/command_processing.c **** 
1833:..\src/command_processing.c **** void prepare_generic_info(char *info_string)
1834:..\src/command_processing.c **** {
 13879              		.loc 1 1834 0
 13880              		.cfi_startproc
 13881              		@ args = 0, pretend = 0, frame = 152
 13882              		@ frame_needed = 1, uses_anonymous_args = 0
 13883 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 13884              		.cfi_def_cfa_offset 36
 13885              		.cfi_offset 4, -36
 13886              		.cfi_offset 5, -32
 13887              		.cfi_offset 6, -28
 13888              		.cfi_offset 7, -24
 13889              		.cfi_offset 8, -20
 13890              		.cfi_offset 9, -16
 13891              		.cfi_offset 10, -12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 315


 13892              		.cfi_offset 11, -8
 13893              		.cfi_offset 14, -4
 13894 0004 B1B0     		sub	sp, sp, #196
 13895              		.cfi_def_cfa_offset 232
 13896 0006 0AAF     		add	r7, sp, #40
 13897              		.cfi_def_cfa 7, 192
 13898 0008 7861     		str	r0, [r7, #20]
1835:..\src/command_processing.c ****     int i;
1836:..\src/command_processing.c **** 
1837:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem; 
 13899              		.loc 1 1837 0
 13900 000a C04B     		ldr	r3, .L646
 13901 000c C7F88C30 		str	r3, [r7, #140]
1838:..\src/command_processing.c ****     
1839:..\src/command_processing.c ****     if(c_mem.dev.id != 250){                //To avoid dummy board ping
 13902              		.loc 1 1839 0
 13903 0010 BE4B     		ldr	r3, .L646
 13904 0012 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 13905 0016 FA2B     		cmp	r3, #250
 13906 0018 01F01D86 		beq	.L643
 13907              	.LBB16:
1840:..\src/command_processing.c ****         char str[100];
1841:..\src/command_processing.c ****         strcpy(info_string, "");
 13908              		.loc 1 1841 0
 13909 001c 7B69     		ldr	r3, [r7, #20]
 13910 001e 0022     		movs	r2, #0
 13911 0020 1A70     		strb	r2, [r3]
1842:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 13912              		.loc 1 1842 0
 13913 0022 7869     		ldr	r0, [r7, #20]
 13914 0024 FFF7FEFF 		bl	strlen
 13915 0028 0346     		mov	r3, r0
 13916 002a 1A46     		mov	r2, r3
 13917 002c 7B69     		ldr	r3, [r7, #20]
 13918 002e 1344     		add	r3, r3, r2
 13919 0030 B74A     		ldr	r2, .L646+4
 13920 0032 1188     		ldrh	r1, [r2]	@ unaligned
 13921 0034 9278     		ldrb	r2, [r2, #2]
 13922 0036 1980     		strh	r1, [r3]	@ unaligned
 13923 0038 9A70     		strb	r2, [r3, #2]
1843:..\src/command_processing.c ****         strcat(info_string, "Firmware version: ");
 13924              		.loc 1 1843 0
 13925 003a 7869     		ldr	r0, [r7, #20]
 13926 003c FFF7FEFF 		bl	strlen
 13927 0040 0346     		mov	r3, r0
 13928 0042 1A46     		mov	r2, r3
 13929 0044 7B69     		ldr	r3, [r7, #20]
 13930 0046 1344     		add	r3, r3, r2
 13931 0048 B24A     		ldr	r2, .L646+8
 13932 004a 1D46     		mov	r5, r3
 13933 004c 1446     		mov	r4, r2
 13934 004e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13935 0050 2860     		str	r0, [r5]	@ unaligned
 13936 0052 6960     		str	r1, [r5, #4]	@ unaligned
 13937 0054 AA60     		str	r2, [r5, #8]	@ unaligned
 13938 0056 EB60     		str	r3, [r5, #12]	@ unaligned
 13939 0058 2388     		ldrh	r3, [r4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 316


 13940 005a A278     		ldrb	r2, [r4, #2]
 13941 005c 2B82     		strh	r3, [r5, #16]	@ unaligned
 13942 005e 1346     		mov	r3, r2
 13943 0060 AB74     		strb	r3, [r5, #18]
1844:..\src/command_processing.c ****         strcat(info_string, VERSION);
 13944              		.loc 1 1844 0
 13945 0062 7869     		ldr	r0, [r7, #20]
 13946 0064 FFF7FEFF 		bl	strlen
 13947 0068 0346     		mov	r3, r0
 13948 006a 1A46     		mov	r2, r3
 13949 006c 7B69     		ldr	r3, [r7, #20]
 13950 006e 1344     		add	r3, r3, r2
 13951 0070 A94A     		ldr	r2, .L646+12
 13952 0072 1846     		mov	r0, r3
 13953 0074 1146     		mov	r1, r2
 13954 0076 4523     		movs	r3, #69
 13955 0078 1A46     		mov	r2, r3
 13956 007a FFF7FEFF 		bl	memcpy
1845:..\src/command_processing.c ****         strcat(info_string, ".\r\n\r\n");      
 13957              		.loc 1 1845 0
 13958 007e 7869     		ldr	r0, [r7, #20]
 13959 0080 FFF7FEFF 		bl	strlen
 13960 0084 0346     		mov	r3, r0
 13961 0086 1A46     		mov	r2, r3
 13962 0088 7B69     		ldr	r3, [r7, #20]
 13963 008a 1344     		add	r3, r3, r2
 13964 008c A34A     		ldr	r2, .L646+16
 13965 008e 1068     		ldr	r0, [r2]	@ unaligned
 13966 0090 1860     		str	r0, [r3]	@ unaligned
 13967 0092 9288     		ldrh	r2, [r2, #4]	@ unaligned
 13968 0094 9A80     		strh	r2, [r3, #4]	@ unaligned
1846:..\src/command_processing.c **** 
1847:..\src/command_processing.c ****         strcat(info_string, "DEVICE INFO\r\n");
 13969              		.loc 1 1847 0
 13970 0096 7869     		ldr	r0, [r7, #20]
 13971 0098 FFF7FEFF 		bl	strlen
 13972 009c 0346     		mov	r3, r0
 13973 009e 1A46     		mov	r2, r3
 13974 00a0 7B69     		ldr	r3, [r7, #20]
 13975 00a2 1344     		add	r3, r3, r2
 13976 00a4 9E4A     		ldr	r2, .L646+20
 13977 00a6 1C46     		mov	r4, r3
 13978 00a8 1346     		mov	r3, r2
 13979 00aa 07CB     		ldmia	r3!, {r0, r1, r2}
 13980 00ac 2060     		str	r0, [r4]	@ unaligned
 13981 00ae 6160     		str	r1, [r4, #4]	@ unaligned
 13982 00b0 A260     		str	r2, [r4, #8]	@ unaligned
 13983 00b2 1B88     		ldrh	r3, [r3]	@ unaligned
 13984 00b4 A381     		strh	r3, [r4, #12]	@ unaligned
1848:..\src/command_processing.c ****         sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 13985              		.loc 1 1848 0
 13986 00b6 D7F88C30 		ldr	r3, [r7, #140]
 13987 00ba 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 13988 00be 1A46     		mov	r2, r3
 13989 00c0 07F11C03 		add	r3, r7, #28
 13990 00c4 9749     		ldr	r1, .L646+24
 13991 00c6 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 317


 13992 00c8 FFF7FEFF 		bl	sprintf
1849:..\src/command_processing.c ****         strcat(info_string, str);
 13993              		.loc 1 1849 0
 13994 00cc 07F11C03 		add	r3, r7, #28
 13995 00d0 1946     		mov	r1, r3
 13996 00d2 7869     		ldr	r0, [r7, #20]
 13997 00d4 FFF7FEFF 		bl	strcat
1850:..\src/command_processing.c ****         switch(MEM_P->dev.dev_type){
 13998              		.loc 1 1850 0
 13999 00d8 D7F88C30 		ldr	r3, [r7, #140]
 14000 00dc 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 14001 00e0 042B     		cmp	r3, #4
 14002 00e2 00F29180 		bhi	.L644
 14003 00e6 01A2     		adr	r2, .L546
 14004 00e8 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 14005              		.p2align 2
 14006              	.L546:
 14007 00ec 01010000 		.word	.L545+1
 14008 00f0 2F010000 		.word	.L547+1
 14009 00f4 5F010000 		.word	.L548+1
 14010 00f8 A1010000 		.word	.L549+1
 14011 00fc E1010000 		.word	.L550+1
 14012              		.p2align 1
 14013              	.L545:
1851:..\src/command_processing.c ****             case SOFTHAND_PRO:
1852:..\src/command_processing.c ****                 strcat(info_string, "Device: SOFTHAND PRO\r\n");
 14014              		.loc 1 1852 0
 14015 0100 7869     		ldr	r0, [r7, #20]
 14016 0102 FFF7FEFF 		bl	strlen
 14017 0106 0346     		mov	r3, r0
 14018 0108 1A46     		mov	r2, r3
 14019 010a 7B69     		ldr	r3, [r7, #20]
 14020 010c 1344     		add	r3, r3, r2
 14021 010e 864A     		ldr	r2, .L646+28
 14022 0110 1C46     		mov	r4, r3
 14023 0112 1546     		mov	r5, r2
 14024 0114 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14025 0116 2060     		str	r0, [r4]	@ unaligned
 14026 0118 6160     		str	r1, [r4, #4]	@ unaligned
 14027 011a A260     		str	r2, [r4, #8]	@ unaligned
 14028 011c E360     		str	r3, [r4, #12]	@ unaligned
 14029 011e 2868     		ldr	r0, [r5]	@ unaligned
 14030 0120 2061     		str	r0, [r4, #16]	@ unaligned
 14031 0122 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 14032 0124 AA79     		ldrb	r2, [r5, #6]
 14033 0126 A382     		strh	r3, [r4, #20]	@ unaligned
 14034 0128 1346     		mov	r3, r2
 14035 012a A375     		strb	r3, [r4, #22]
1853:..\src/command_processing.c ****                 break;
 14036              		.loc 1 1853 0
 14037 012c 6DE0     		b	.L551
 14038              	.L547:
1854:..\src/command_processing.c ****             case GENERIC_2_MOTORS:
1855:..\src/command_processing.c ****                 strcat(info_string, "Device: GENERIC 2 MOTORS\r\n");
 14039              		.loc 1 1855 0
 14040 012e 7869     		ldr	r0, [r7, #20]
 14041 0130 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 318


 14042 0134 0346     		mov	r3, r0
 14043 0136 1A46     		mov	r2, r3
 14044 0138 7B69     		ldr	r3, [r7, #20]
 14045 013a 1344     		add	r3, r3, r2
 14046 013c 7B4A     		ldr	r2, .L646+32
 14047 013e 1D46     		mov	r5, r3
 14048 0140 1446     		mov	r4, r2
 14049 0142 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14050 0144 2860     		str	r0, [r5]	@ unaligned
 14051 0146 6960     		str	r1, [r5, #4]	@ unaligned
 14052 0148 AA60     		str	r2, [r5, #8]	@ unaligned
 14053 014a EB60     		str	r3, [r5, #12]	@ unaligned
 14054 014c 03CC     		ldmia	r4!, {r0, r1}
 14055 014e 2861     		str	r0, [r5, #16]	@ unaligned
 14056 0150 6961     		str	r1, [r5, #20]	@ unaligned
 14057 0152 2388     		ldrh	r3, [r4]	@ unaligned
 14058 0154 A278     		ldrb	r2, [r4, #2]
 14059 0156 2B83     		strh	r3, [r5, #24]	@ unaligned
 14060 0158 1346     		mov	r3, r2
 14061 015a AB76     		strb	r3, [r5, #26]
1856:..\src/command_processing.c ****                 break;
 14062              		.loc 1 1856 0
 14063 015c 55E0     		b	.L551
 14064              	.L548:
1857:..\src/command_processing.c ****             case AIR_CHAMBERS_FB:
1858:..\src/command_processing.c ****                 strcat(info_string, "Device: AIR CHAMBERS HAPTIC FEEDBACK\r\n");
 14065              		.loc 1 1858 0
 14066 015e 7869     		ldr	r0, [r7, #20]
 14067 0160 FFF7FEFF 		bl	strlen
 14068 0164 0346     		mov	r3, r0
 14069 0166 1A46     		mov	r2, r3
 14070 0168 7B69     		ldr	r3, [r7, #20]
 14071 016a 1344     		add	r3, r3, r2
 14072 016c 704A     		ldr	r2, .L646+36
 14073 016e 1446     		mov	r4, r2
 14074 0170 9E46     		mov	lr, r3
 14075 0172 04F1200C 		add	ip, r4, #32
 14076              	.L552:
 14077 0176 7546     		mov	r5, lr
 14078 0178 2646     		mov	r6, r4
 14079 017a 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14080 017c 2860     		str	r0, [r5]	@ unaligned
 14081 017e 6960     		str	r1, [r5, #4]	@ unaligned
 14082 0180 AA60     		str	r2, [r5, #8]	@ unaligned
 14083 0182 EB60     		str	r3, [r5, #12]	@ unaligned
 14084 0184 1034     		adds	r4, r4, #16
 14085 0186 0EF1100E 		add	lr, lr, #16
 14086 018a 6445     		cmp	r4, ip
 14087 018c F3D1     		bne	.L552
 14088 018e 7346     		mov	r3, lr
 14089 0190 2246     		mov	r2, r4
 14090 0192 1068     		ldr	r0, [r2]	@ unaligned
 14091 0194 1860     		str	r0, [r3]	@ unaligned
 14092 0196 9188     		ldrh	r1, [r2, #4]	@ unaligned
 14093 0198 9279     		ldrb	r2, [r2, #6]
 14094 019a 9980     		strh	r1, [r3, #4]	@ unaligned
 14095 019c 9A71     		strb	r2, [r3, #6]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 319


1859:..\src/command_processing.c ****                 break;
 14096              		.loc 1 1859 0
 14097 019e 34E0     		b	.L551
 14098              	.L549:
1860:..\src/command_processing.c ****             case OTBK_ACT_WRIST_MS:
1861:..\src/command_processing.c ****                 strcat(info_string, "Device: OTTOBOCK 6v ACTIVE WRIST MASTER\r\n");
 14099              		.loc 1 1861 0
 14100 01a0 7869     		ldr	r0, [r7, #20]
 14101 01a2 FFF7FEFF 		bl	strlen
 14102 01a6 0346     		mov	r3, r0
 14103 01a8 1A46     		mov	r2, r3
 14104 01aa 7B69     		ldr	r3, [r7, #20]
 14105 01ac 1344     		add	r3, r3, r2
 14106 01ae 614A     		ldr	r2, .L646+40
 14107 01b0 1446     		mov	r4, r2
 14108 01b2 9E46     		mov	lr, r3
 14109 01b4 04F1200C 		add	ip, r4, #32
 14110              	.L553:
 14111 01b8 7546     		mov	r5, lr
 14112 01ba 2646     		mov	r6, r4
 14113 01bc 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14114 01be 2860     		str	r0, [r5]	@ unaligned
 14115 01c0 6960     		str	r1, [r5, #4]	@ unaligned
 14116 01c2 AA60     		str	r2, [r5, #8]	@ unaligned
 14117 01c4 EB60     		str	r3, [r5, #12]	@ unaligned
 14118 01c6 1034     		adds	r4, r4, #16
 14119 01c8 0EF1100E 		add	lr, lr, #16
 14120 01cc 6445     		cmp	r4, ip
 14121 01ce F3D1     		bne	.L553
 14122 01d0 7246     		mov	r2, lr
 14123 01d2 2346     		mov	r3, r4
 14124 01d4 03CB     		ldmia	r3!, {r0, r1}
 14125 01d6 1060     		str	r0, [r2]	@ unaligned
 14126 01d8 5160     		str	r1, [r2, #4]	@ unaligned
 14127 01da 1B88     		ldrh	r3, [r3]	@ unaligned
 14128 01dc 1381     		strh	r3, [r2, #8]	@ unaligned
1862:..\src/command_processing.c ****                 break;
 14129              		.loc 1 1862 0
 14130 01de 14E0     		b	.L551
 14131              	.L550:
1863:..\src/command_processing.c ****             case SOFTHAND_2_MOTORS:
1864:..\src/command_processing.c ****                 strcat(info_string, "Device: SOFTHAND 2 MOTORS\r\n");
 14132              		.loc 1 1864 0
 14133 01e0 7869     		ldr	r0, [r7, #20]
 14134 01e2 FFF7FEFF 		bl	strlen
 14135 01e6 0346     		mov	r3, r0
 14136 01e8 1A46     		mov	r2, r3
 14137 01ea 7B69     		ldr	r3, [r7, #20]
 14138 01ec 1344     		add	r3, r3, r2
 14139 01ee 524A     		ldr	r2, .L646+44
 14140 01f0 1D46     		mov	r5, r3
 14141 01f2 1446     		mov	r4, r2
 14142 01f4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14143 01f6 2860     		str	r0, [r5]	@ unaligned
 14144 01f8 6960     		str	r1, [r5, #4]	@ unaligned
 14145 01fa AA60     		str	r2, [r5, #8]	@ unaligned
 14146 01fc EB60     		str	r3, [r5, #12]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 320


 14147 01fe 07CC     		ldmia	r4!, {r0, r1, r2}
 14148 0200 2861     		str	r0, [r5, #16]	@ unaligned
 14149 0202 6961     		str	r1, [r5, #20]	@ unaligned
 14150 0204 AA61     		str	r2, [r5, #24]	@ unaligned
1865:..\src/command_processing.c ****                 break;
 14151              		.loc 1 1865 0
 14152 0206 00E0     		b	.L551
 14153              	.L644:
1866:..\src/command_processing.c ****             default:
1867:..\src/command_processing.c ****                 break;
 14154              		.loc 1 1867 0
 14155 0208 00BF     		nop
 14156              	.L551:
1868:..\src/command_processing.c ****         }
1869:..\src/command_processing.c ****         
1870:..\src/command_processing.c ****         switch(MEM_P->dev.right_left){
 14157              		.loc 1 1870 0
 14158 020a D7F88C30 		ldr	r3, [r7, #140]
 14159 020e 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 14160 0212 002B     		cmp	r3, #0
 14161 0214 02D0     		beq	.L555
 14162 0216 012B     		cmp	r3, #1
 14163 0218 15D0     		beq	.L556
 14164 021a 26E0     		b	.L554
 14165              	.L555:
1871:..\src/command_processing.c ****             case RIGHT_HAND:
1872:..\src/command_processing.c ****                 strcat(info_string, "Hand side: RIGHT\r\n");
 14166              		.loc 1 1872 0
 14167 021c 7869     		ldr	r0, [r7, #20]
 14168 021e FFF7FEFF 		bl	strlen
 14169 0222 0346     		mov	r3, r0
 14170 0224 1A46     		mov	r2, r3
 14171 0226 7B69     		ldr	r3, [r7, #20]
 14172 0228 1344     		add	r3, r3, r2
 14173 022a 444A     		ldr	r2, .L646+48
 14174 022c 1D46     		mov	r5, r3
 14175 022e 1446     		mov	r4, r2
 14176 0230 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14177 0232 2860     		str	r0, [r5]	@ unaligned
 14178 0234 6960     		str	r1, [r5, #4]	@ unaligned
 14179 0236 AA60     		str	r2, [r5, #8]	@ unaligned
 14180 0238 EB60     		str	r3, [r5, #12]	@ unaligned
 14181 023a 2388     		ldrh	r3, [r4]	@ unaligned
 14182 023c A278     		ldrb	r2, [r4, #2]
 14183 023e 2B82     		strh	r3, [r5, #16]	@ unaligned
 14184 0240 1346     		mov	r3, r2
 14185 0242 AB74     		strb	r3, [r5, #18]
1873:..\src/command_processing.c ****                 break;
 14186              		.loc 1 1873 0
 14187 0244 11E0     		b	.L554
 14188              	.L556:
1874:..\src/command_processing.c ****             case LEFT_HAND:
1875:..\src/command_processing.c ****                 strcat(info_string, "Hand side: LEFT\r\n");
 14189              		.loc 1 1875 0
 14190 0246 7869     		ldr	r0, [r7, #20]
 14191 0248 FFF7FEFF 		bl	strlen
 14192 024c 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 321


 14193 024e 1A46     		mov	r2, r3
 14194 0250 7B69     		ldr	r3, [r7, #20]
 14195 0252 1344     		add	r3, r3, r2
 14196 0254 3A4A     		ldr	r2, .L646+52
 14197 0256 1D46     		mov	r5, r3
 14198 0258 1446     		mov	r4, r2
 14199 025a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14200 025c 2860     		str	r0, [r5]	@ unaligned
 14201 025e 6960     		str	r1, [r5, #4]	@ unaligned
 14202 0260 AA60     		str	r2, [r5, #8]	@ unaligned
 14203 0262 EB60     		str	r3, [r5, #12]	@ unaligned
 14204 0264 2388     		ldrh	r3, [r4]	@ unaligned
 14205 0266 2B82     		strh	r3, [r5, #16]	@ unaligned
1876:..\src/command_processing.c ****                 break;
 14206              		.loc 1 1876 0
 14207 0268 00BF     		nop
 14208              	.L554:
1877:..\src/command_processing.c ****         }
1878:..\src/command_processing.c **** 
1879:..\src/command_processing.c ****         switch(MEM_P->dev.user_id) {
 14209              		.loc 1 1879 0
 14210 026a D7F88C30 		ldr	r3, [r7, #140]
 14211 026e 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 14212 0272 012B     		cmp	r3, #1
 14213 0274 02D0     		beq	.L558
 14214 0276 022B     		cmp	r3, #2
 14215 0278 11D0     		beq	.L559
 14216 027a 21E0     		b	.L642
 14217              	.L558:
1880:..\src/command_processing.c ****             case MARIA:
1881:..\src/command_processing.c ****                 strcat(info_string, "User: MARIA\r\n");
 14218              		.loc 1 1881 0
 14219 027c 7869     		ldr	r0, [r7, #20]
 14220 027e FFF7FEFF 		bl	strlen
 14221 0282 0346     		mov	r3, r0
 14222 0284 1A46     		mov	r2, r3
 14223 0286 7B69     		ldr	r3, [r7, #20]
 14224 0288 1344     		add	r3, r3, r2
 14225 028a 2E4A     		ldr	r2, .L646+56
 14226 028c 1C46     		mov	r4, r3
 14227 028e 1346     		mov	r3, r2
 14228 0290 07CB     		ldmia	r3!, {r0, r1, r2}
 14229 0292 2060     		str	r0, [r4]	@ unaligned
 14230 0294 6160     		str	r1, [r4, #4]	@ unaligned
 14231 0296 A260     		str	r2, [r4, #8]	@ unaligned
 14232 0298 1B88     		ldrh	r3, [r3]	@ unaligned
 14233 029a A381     		strh	r3, [r4, #12]	@ unaligned
1882:..\src/command_processing.c ****                 break;
 14234              		.loc 1 1882 0
 14235 029c 24E0     		b	.L560
 14236              	.L559:
1883:..\src/command_processing.c ****             case ROZA:
1884:..\src/command_processing.c ****                 strcat(info_string, "User: ROZA\r\n");
 14237              		.loc 1 1884 0
 14238 029e 7869     		ldr	r0, [r7, #20]
 14239 02a0 FFF7FEFF 		bl	strlen
 14240 02a4 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 322


 14241 02a6 1A46     		mov	r2, r3
 14242 02a8 7B69     		ldr	r3, [r7, #20]
 14243 02aa 1344     		add	r3, r3, r2
 14244 02ac 264A     		ldr	r2, .L646+60
 14245 02ae 1C46     		mov	r4, r3
 14246 02b0 1346     		mov	r3, r2
 14247 02b2 07CB     		ldmia	r3!, {r0, r1, r2}
 14248 02b4 2060     		str	r0, [r4]	@ unaligned
 14249 02b6 6160     		str	r1, [r4, #4]	@ unaligned
 14250 02b8 A260     		str	r2, [r4, #8]	@ unaligned
 14251 02ba 1B78     		ldrb	r3, [r3]
 14252 02bc 2373     		strb	r3, [r4, #12]
1885:..\src/command_processing.c ****                 break;
 14253              		.loc 1 1885 0
 14254 02be 13E0     		b	.L560
 14255              	.L642:
1886:..\src/command_processing.c ****             default:
1887:..\src/command_processing.c ****                 strcat(info_string, "User: GENERIC USER\r\n");
 14256              		.loc 1 1887 0
 14257 02c0 7869     		ldr	r0, [r7, #20]
 14258 02c2 FFF7FEFF 		bl	strlen
 14259 02c6 0346     		mov	r3, r0
 14260 02c8 1A46     		mov	r2, r3
 14261 02ca 7B69     		ldr	r3, [r7, #20]
 14262 02cc 1344     		add	r3, r3, r2
 14263 02ce 1F4A     		ldr	r2, .L646+64
 14264 02d0 1D46     		mov	r5, r3
 14265 02d2 1446     		mov	r4, r2
 14266 02d4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14267 02d6 2860     		str	r0, [r5]	@ unaligned
 14268 02d8 6960     		str	r1, [r5, #4]	@ unaligned
 14269 02da AA60     		str	r2, [r5, #8]	@ unaligned
 14270 02dc EB60     		str	r3, [r5, #12]	@ unaligned
 14271 02de 2068     		ldr	r0, [r4]	@ unaligned
 14272 02e0 2861     		str	r0, [r5, #16]	@ unaligned
 14273 02e2 2379     		ldrb	r3, [r4, #4]
 14274 02e4 2B75     		strb	r3, [r5, #20]
1888:..\src/command_processing.c ****                 break;
 14275              		.loc 1 1888 0
 14276 02e6 00BF     		nop
 14277              	.L560:
1889:..\src/command_processing.c ****         }
1890:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 14278              		.loc 1 1890 0
 14279 02e8 7869     		ldr	r0, [r7, #20]
 14280 02ea FFF7FEFF 		bl	strlen
 14281 02ee 0346     		mov	r3, r0
 14282 02f0 1A46     		mov	r2, r3
 14283 02f2 7B69     		ldr	r3, [r7, #20]
 14284 02f4 1344     		add	r3, r3, r2
 14285 02f6 064A     		ldr	r2, .L646+4
 14286 02f8 1188     		ldrh	r1, [r2]	@ unaligned
 14287 02fa 9278     		ldrb	r2, [r2, #2]
 14288 02fc 1980     		strh	r1, [r3]	@ unaligned
 14289 02fe 9A70     		strb	r2, [r3, #2]
 14290              	.LBB17:
1891:..\src/command_processing.c ****         
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 323


1892:..\src/command_processing.c ****         for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 14291              		.loc 1 1892 0
 14292 0300 0023     		movs	r3, #0
 14293 0302 87F89330 		strb	r3, [r7, #147]
 14294 0306 01F070B8 		b	.L561
 14295              	.L647:
 14296 030a 00BF     		.align	2
 14297              	.L646:
 14298 030c 00000000 		.word	c_mem
 14299 0310 A8100000 		.word	.LC147
 14300 0314 AC100000 		.word	.LC148
 14301 0318 C0100000 		.word	.LC149
 14302 031c 08110000 		.word	.LC150
 14303 0320 10110000 		.word	.LC151
 14304 0324 20110000 		.word	.LC152
 14305 0328 2C110000 		.word	.LC153
 14306 032c 44110000 		.word	.LC154
 14307 0330 60110000 		.word	.LC155
 14308 0334 88110000 		.word	.LC156
 14309 0338 B4110000 		.word	.LC157
 14310 033c D0110000 		.word	.LC158
 14311 0340 E4110000 		.word	.LC159
 14312 0344 F8110000 		.word	.LC160
 14313 0348 08120000 		.word	.LC161
 14314 034c 18120000 		.word	.LC162
 14315              	.L614:
 14316              	.LBB18:
1893:..\src/command_processing.c ****             
1894:..\src/command_processing.c ****             uint8 MOTOR_IDX = k;
 14317              		.loc 1 1894 0
 14318 0350 97F89330 		ldrb	r3, [r7, #147]
 14319 0354 87F88B30 		strb	r3, [r7, #139]
1895:..\src/command_processing.c ****             struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 14320              		.loc 1 1895 0
 14321 0358 97F88B20 		ldrb	r2, [r7, #139]	@ zero_extendqisi2
 14322 035c 1346     		mov	r3, r2
 14323 035e DB00     		lsls	r3, r3, #3
 14324 0360 9B1A     		subs	r3, r3, r2
 14325 0362 1B01     		lsls	r3, r3, #4
 14326 0364 B033     		adds	r3, r3, #176
 14327 0366 D7F88C20 		ldr	r2, [r7, #140]
 14328 036a 1344     		add	r3, r3, r2
 14329 036c C7F88430 		str	r3, [r7, #132]
1896:..\src/command_processing.c ****             uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 14330              		.loc 1 1896 0
 14331 0370 D7F88430 		ldr	r3, [r7, #132]
 14332 0374 93F86030 		ldrb	r3, [r3, #96]
 14333 0378 87F88330 		strb	r3, [r7, #131]
1897:..\src/command_processing.c ****                   
1898:..\src/command_processing.c ****             sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 14334              		.loc 1 1898 0
 14335 037c 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14336 0380 5A1C     		adds	r2, r3, #1
 14337 0382 07F11C03 		add	r3, r7, #28
 14338 0386 AE49     		ldr	r1, .L648
 14339 0388 1846     		mov	r0, r3
 14340 038a FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 324


1899:..\src/command_processing.c ****             strcat(info_string, str);
 14341              		.loc 1 1899 0
 14342 038e 07F11C03 		add	r3, r7, #28
 14343 0392 1946     		mov	r1, r3
 14344 0394 7869     		ldr	r0, [r7, #20]
 14345 0396 FFF7FEFF 		bl	strcat
1900:..\src/command_processing.c ****                         
1901:..\src/command_processing.c ****             strcat(info_string, "Motor reference");
 14346              		.loc 1 1901 0
 14347 039a 7869     		ldr	r0, [r7, #20]
 14348 039c FFF7FEFF 		bl	strlen
 14349 03a0 0346     		mov	r3, r0
 14350 03a2 1A46     		mov	r2, r3
 14351 03a4 7B69     		ldr	r3, [r7, #20]
 14352 03a6 1344     		add	r3, r3, r2
 14353 03a8 A64A     		ldr	r2, .L648+4
 14354 03aa 1C46     		mov	r4, r3
 14355 03ac 1546     		mov	r5, r2
 14356 03ae 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14357 03b0 2060     		str	r0, [r4]	@ unaligned
 14358 03b2 6160     		str	r1, [r4, #4]	@ unaligned
 14359 03b4 A260     		str	r2, [r4, #8]	@ unaligned
 14360 03b6 E360     		str	r3, [r4, #12]	@ unaligned
1902:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT)
 14361              		.loc 1 1902 0
 14362 03b8 D7F88430 		ldr	r3, [r7, #132]
 14363 03bc 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14364 03c0 022B     		cmp	r3, #2
 14365 03c2 10D1     		bne	.L562
1903:..\src/command_processing.c ****                 strcat(info_string," - Currents: ");
 14366              		.loc 1 1903 0
 14367 03c4 7869     		ldr	r0, [r7, #20]
 14368 03c6 FFF7FEFF 		bl	strlen
 14369 03ca 0346     		mov	r3, r0
 14370 03cc 1A46     		mov	r2, r3
 14371 03ce 7B69     		ldr	r3, [r7, #20]
 14372 03d0 1344     		add	r3, r3, r2
 14373 03d2 9D4A     		ldr	r2, .L648+8
 14374 03d4 1C46     		mov	r4, r3
 14375 03d6 1346     		mov	r3, r2
 14376 03d8 07CB     		ldmia	r3!, {r0, r1, r2}
 14377 03da 2060     		str	r0, [r4]	@ unaligned
 14378 03dc 6160     		str	r1, [r4, #4]	@ unaligned
 14379 03de A260     		str	r2, [r4, #8]	@ unaligned
 14380 03e0 1B88     		ldrh	r3, [r3]	@ unaligned
 14381 03e2 A381     		strh	r3, [r4, #12]	@ unaligned
 14382 03e4 25E0     		b	.L563
 14383              	.L562:
1904:..\src/command_processing.c ****             else {
1905:..\src/command_processing.c ****                 if (MOT->control_mode == CONTROL_PWM)
 14384              		.loc 1 1905 0
 14385 03e6 D7F88430 		ldr	r3, [r7, #132]
 14386 03ea 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14387 03ee 012B     		cmp	r3, #1
 14388 03f0 0FD1     		bne	.L564
1906:..\src/command_processing.c ****                     strcat(info_string," - Pwm: ");
 14389              		.loc 1 1906 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 325


 14390 03f2 7869     		ldr	r0, [r7, #20]
 14391 03f4 FFF7FEFF 		bl	strlen
 14392 03f8 0346     		mov	r3, r0
 14393 03fa 1A46     		mov	r2, r3
 14394 03fc 7B69     		ldr	r3, [r7, #20]
 14395 03fe 1344     		add	r3, r3, r2
 14396 0400 9249     		ldr	r1, .L648+12
 14397 0402 1A46     		mov	r2, r3
 14398 0404 0B46     		mov	r3, r1
 14399 0406 03CB     		ldmia	r3!, {r0, r1}
 14400 0408 1060     		str	r0, [r2]	@ unaligned
 14401 040a 5160     		str	r1, [r2, #4]	@ unaligned
 14402 040c 1B78     		ldrb	r3, [r3]
 14403 040e 1372     		strb	r3, [r2, #8]
 14404 0410 0FE0     		b	.L563
 14405              	.L564:
1907:..\src/command_processing.c ****                 else
1908:..\src/command_processing.c ****                     strcat(info_string," - Position: ");
 14406              		.loc 1 1908 0
 14407 0412 7869     		ldr	r0, [r7, #20]
 14408 0414 FFF7FEFF 		bl	strlen
 14409 0418 0346     		mov	r3, r0
 14410 041a 1A46     		mov	r2, r3
 14411 041c 7B69     		ldr	r3, [r7, #20]
 14412 041e 1344     		add	r3, r3, r2
 14413 0420 8B4A     		ldr	r2, .L648+16
 14414 0422 1C46     		mov	r4, r3
 14415 0424 1346     		mov	r3, r2
 14416 0426 07CB     		ldmia	r3!, {r0, r1, r2}
 14417 0428 2060     		str	r0, [r4]	@ unaligned
 14418 042a 6160     		str	r1, [r4, #4]	@ unaligned
 14419 042c A260     		str	r2, [r4, #8]	@ unaligned
 14420 042e 1B88     		ldrh	r3, [r3]	@ unaligned
 14421 0430 A381     		strh	r3, [r4, #12]	@ unaligned
 14422              	.L563:
1909:..\src/command_processing.c ****             }
1910:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT) {
 14423              		.loc 1 1910 0
 14424 0432 D7F88430 		ldr	r3, [r7, #132]
 14425 0436 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14426 043a 022B     		cmp	r3, #2
 14427 043c 13D1     		bne	.L565
1911:..\src/command_processing.c ****                 sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].curr));
 14428              		.loc 1 1911 0
 14429 043e 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14430 0442 844A     		ldr	r2, .L648+20
 14431 0444 1B01     		lsls	r3, r3, #4
 14432 0446 1344     		add	r3, r3, r2
 14433 0448 0433     		adds	r3, r3, #4
 14434 044a 1A68     		ldr	r2, [r3]
 14435 044c 07F11C03 		add	r3, r7, #28
 14436 0450 8149     		ldr	r1, .L648+24
 14437 0452 1846     		mov	r0, r3
 14438 0454 FFF7FEFF 		bl	sprintf
1912:..\src/command_processing.c ****                 strcat(info_string,str);
 14439              		.loc 1 1912 0
 14440 0458 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 326


 14441 045c 1946     		mov	r1, r3
 14442 045e 7869     		ldr	r0, [r7, #20]
 14443 0460 FFF7FEFF 		bl	strcat
 14444 0464 39E0     		b	.L566
 14445              	.L565:
1913:..\src/command_processing.c ****             }
1914:..\src/command_processing.c ****             else {
1915:..\src/command_processing.c ****                 if(MOT->control_mode == CONTROL_PWM) {
 14446              		.loc 1 1915 0
 14447 0466 D7F88430 		ldr	r3, [r7, #132]
 14448 046a 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14449 046e 012B     		cmp	r3, #1
 14450 0470 13D1     		bne	.L567
1916:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pwm));
 14451              		.loc 1 1916 0
 14452 0472 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14453 0476 774A     		ldr	r2, .L648+20
 14454 0478 1B01     		lsls	r3, r3, #4
 14455 047a 1344     		add	r3, r3, r2
 14456 047c 0833     		adds	r3, r3, #8
 14457 047e 1A68     		ldr	r2, [r3]
 14458 0480 07F11C03 		add	r3, r7, #28
 14459 0484 7449     		ldr	r1, .L648+24
 14460 0486 1846     		mov	r0, r3
 14461 0488 FFF7FEFF 		bl	sprintf
1917:..\src/command_processing.c ****                     strcat(info_string,str);
 14462              		.loc 1 1917 0
 14463 048c 07F11C03 		add	r3, r7, #28
 14464 0490 1946     		mov	r1, r3
 14465 0492 7869     		ldr	r0, [r7, #20]
 14466 0494 FFF7FEFF 		bl	strcat
 14467 0498 1FE0     		b	.L566
 14468              	.L567:
1918:..\src/command_processing.c ****                 }
1919:..\src/command_processing.c ****                 else {
1920:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pos >> MEM_P->enc[ENC_L].res[0]))
 14469              		.loc 1 1920 0
 14470 049a 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14471 049e 6D4A     		ldr	r2, .L648+20
 14472 04a0 1B01     		lsls	r3, r3, #4
 14473 04a2 1344     		add	r3, r3, r2
 14474 04a4 1968     		ldr	r1, [r3]
 14475 04a6 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 14476 04aa D7F88C00 		ldr	r0, [r7, #140]
 14477 04ae 1346     		mov	r3, r2
 14478 04b0 5B00     		lsls	r3, r3, #1
 14479 04b2 1344     		add	r3, r3, r2
 14480 04b4 1B01     		lsls	r3, r3, #4
 14481 04b6 0344     		add	r3, r3, r0
 14482 04b8 03F29513 		addw	r3, r3, #405
 14483 04bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14484 04be 41FA03F2 		asr	r2, r1, r3
 14485 04c2 07F11C03 		add	r3, r7, #28
 14486 04c6 6449     		ldr	r1, .L648+24
 14487 04c8 1846     		mov	r0, r3
 14488 04ca FFF7FEFF 		bl	sprintf
1921:..\src/command_processing.c ****                     strcat(info_string,str);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 327


 14489              		.loc 1 1921 0
 14490 04ce 07F11C03 		add	r3, r7, #28
 14491 04d2 1946     		mov	r1, r3
 14492 04d4 7869     		ldr	r0, [r7, #20]
 14493 04d6 FFF7FEFF 		bl	strcat
 14494              	.L566:
1922:..\src/command_processing.c ****                 }
1923:..\src/command_processing.c ****             }
1924:..\src/command_processing.c ****             strcat(info_string,"\r\n");
 14495              		.loc 1 1924 0
 14496 04da 7869     		ldr	r0, [r7, #20]
 14497 04dc FFF7FEFF 		bl	strlen
 14498 04e0 0346     		mov	r3, r0
 14499 04e2 1A46     		mov	r2, r3
 14500 04e4 7B69     		ldr	r3, [r7, #20]
 14501 04e6 1344     		add	r3, r3, r2
 14502 04e8 5C4A     		ldr	r2, .L648+28
 14503 04ea 1188     		ldrh	r1, [r2]	@ unaligned
 14504 04ec 9278     		ldrb	r2, [r2, #2]
 14505 04ee 1980     		strh	r1, [r3]	@ unaligned
 14506 04f0 9A70     		strb	r2, [r3, #2]
1925:..\src/command_processing.c **** 
1926:..\src/command_processing.c ****             sprintf(str, "Motor enabled: ");
 14507              		.loc 1 1926 0
 14508 04f2 07F11C03 		add	r3, r7, #28
 14509 04f6 5A4A     		ldr	r2, .L648+32
 14510 04f8 1C46     		mov	r4, r3
 14511 04fa 1346     		mov	r3, r2
 14512 04fc 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 14513 04fe 84E80F00 		stmia	r4, {r0, r1, r2, r3}
1927:..\src/command_processing.c ****             if (g_ref[MOTOR_IDX].onoff & 0x01) {
 14514              		.loc 1 1927 0
 14515 0502 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14516 0506 574A     		ldr	r2, .L648+36
 14517 0508 1B01     		lsls	r3, r3, #4
 14518 050a 1344     		add	r3, r3, r2
 14519 050c 0C33     		adds	r3, r3, #12
 14520 050e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14521 0510 03F00103 		and	r3, r3, #1
 14522 0514 002B     		cmp	r3, #0
 14523 0516 0FD0     		beq	.L568
1928:..\src/command_processing.c ****                 strcat(str, "YES\r\n");
 14524              		.loc 1 1928 0
 14525 0518 07F11C03 		add	r3, r7, #28
 14526 051c 1846     		mov	r0, r3
 14527 051e FFF7FEFF 		bl	strlen
 14528 0522 0346     		mov	r3, r0
 14529 0524 1A46     		mov	r2, r3
 14530 0526 07F11C03 		add	r3, r7, #28
 14531 052a 1344     		add	r3, r3, r2
 14532 052c 4E4A     		ldr	r2, .L648+40
 14533 052e 1068     		ldr	r0, [r2]	@ unaligned
 14534 0530 1860     		str	r0, [r3]	@ unaligned
 14535 0532 9288     		ldrh	r2, [r2, #4]	@ unaligned
 14536 0534 9A80     		strh	r2, [r3, #4]	@ unaligned
 14537 0536 0EE0     		b	.L569
 14538              	.L568:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 328


1929:..\src/command_processing.c ****             } else {
1930:..\src/command_processing.c ****                 strcat(str, "NO\r\n");
 14539              		.loc 1 1930 0
 14540 0538 07F11C03 		add	r3, r7, #28
 14541 053c 1846     		mov	r0, r3
 14542 053e FFF7FEFF 		bl	strlen
 14543 0542 0346     		mov	r3, r0
 14544 0544 1A46     		mov	r2, r3
 14545 0546 07F11C03 		add	r3, r7, #28
 14546 054a 1344     		add	r3, r3, r2
 14547 054c 474A     		ldr	r2, .L648+44
 14548 054e 1068     		ldr	r0, [r2]	@ unaligned
 14549 0550 1860     		str	r0, [r3]	@ unaligned
 14550 0552 1279     		ldrb	r2, [r2, #4]
 14551 0554 1A71     		strb	r2, [r3, #4]
 14552              	.L569:
1931:..\src/command_processing.c ****             }
1932:..\src/command_processing.c ****             strcat(info_string, str);
 14553              		.loc 1 1932 0
 14554 0556 07F11C03 		add	r3, r7, #28
 14555 055a 1946     		mov	r1, r3
 14556 055c 7869     		ldr	r0, [r7, #20]
 14557 055e FFF7FEFF 		bl	strcat
1933:..\src/command_processing.c ****                         
1934:..\src/command_processing.c ****             strcat(info_string, "PWM rescaling activation: ");
 14558              		.loc 1 1934 0
 14559 0562 7869     		ldr	r0, [r7, #20]
 14560 0564 FFF7FEFF 		bl	strlen
 14561 0568 0346     		mov	r3, r0
 14562 056a 1A46     		mov	r2, r3
 14563 056c 7B69     		ldr	r3, [r7, #20]
 14564 056e 1344     		add	r3, r3, r2
 14565 0570 3F4A     		ldr	r2, .L648+48
 14566 0572 1D46     		mov	r5, r3
 14567 0574 1446     		mov	r4, r2
 14568 0576 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14569 0578 2860     		str	r0, [r5]	@ unaligned
 14570 057a 6960     		str	r1, [r5, #4]	@ unaligned
 14571 057c AA60     		str	r2, [r5, #8]	@ unaligned
 14572 057e EB60     		str	r3, [r5, #12]	@ unaligned
 14573 0580 03CC     		ldmia	r4!, {r0, r1}
 14574 0582 2861     		str	r0, [r5, #16]	@ unaligned
 14575 0584 6961     		str	r1, [r5, #20]	@ unaligned
 14576 0586 2388     		ldrh	r3, [r4]	@ unaligned
 14577 0588 A278     		ldrb	r2, [r4, #2]
 14578 058a 2B83     		strh	r3, [r5, #24]	@ unaligned
 14579 058c 1346     		mov	r3, r2
 14580 058e AB76     		strb	r3, [r5, #26]
1935:..\src/command_processing.c ****             if(MOT->activate_pwm_rescaling == MAXON_12V)
 14581              		.loc 1 1935 0
 14582 0590 D7F88430 		ldr	r3, [r7, #132]
 14583 0594 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 14584 0598 012B     		cmp	r3, #1
 14585 059a 0CD1     		bne	.L570
1936:..\src/command_processing.c ****                 strcat(info_string, "YES\n");
 14586              		.loc 1 1936 0
 14587 059c 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 329


 14588 059e FFF7FEFF 		bl	strlen
 14589 05a2 0346     		mov	r3, r0
 14590 05a4 1A46     		mov	r2, r3
 14591 05a6 7B69     		ldr	r3, [r7, #20]
 14592 05a8 1344     		add	r3, r3, r2
 14593 05aa 324A     		ldr	r2, .L648+52
 14594 05ac 1068     		ldr	r0, [r2]	@ unaligned
 14595 05ae 1860     		str	r0, [r3]	@ unaligned
 14596 05b0 1279     		ldrb	r2, [r2, #4]
 14597 05b2 1A71     		strb	r2, [r3, #4]
 14598 05b4 09E0     		b	.L571
 14599              	.L570:
1937:..\src/command_processing.c ****             else
1938:..\src/command_processing.c ****                 strcat(info_string, "NO\n");
 14600              		.loc 1 1938 0
 14601 05b6 7869     		ldr	r0, [r7, #20]
 14602 05b8 FFF7FEFF 		bl	strlen
 14603 05bc 0346     		mov	r3, r0
 14604 05be 1A46     		mov	r2, r3
 14605 05c0 7B69     		ldr	r3, [r7, #20]
 14606 05c2 1344     		add	r3, r3, r2
 14607 05c4 2C4A     		ldr	r2, .L648+56
 14608 05c6 1068     		ldr	r0, [r2]	@ unaligned
 14609 05c8 1860     		str	r0, [r3]	@ unaligned
 14610              	.L571:
1939:..\src/command_processing.c ****             
1940:..\src/command_processing.c ****             sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 14611              		.loc 1 1940 0
 14612 05ca 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14613 05ce 2B4A     		ldr	r2, .L648+60
 14614 05d0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 14615 05d2 1A46     		mov	r2, r3
 14616 05d4 07F11C03 		add	r3, r7, #28
 14617 05d8 2949     		ldr	r1, .L648+64
 14618 05da 1846     		mov	r0, r3
 14619 05dc FFF7FEFF 		bl	sprintf
1941:..\src/command_processing.c ****             strcat(info_string, str);
 14620              		.loc 1 1941 0
 14621 05e0 07F11C03 		add	r3, r7, #28
 14622 05e4 1946     		mov	r1, r3
 14623 05e6 7869     		ldr	r0, [r7, #20]
 14624 05e8 FFF7FEFF 		bl	strcat
1942:..\src/command_processing.c **** 
1943:..\src/command_processing.c ****             strcat(info_string, "\r\nMEASUREMENTS INFO\r\n");
 14625              		.loc 1 1943 0
 14626 05ec 7869     		ldr	r0, [r7, #20]
 14627 05ee FFF7FEFF 		bl	strlen
 14628 05f2 0346     		mov	r3, r0
 14629 05f4 1A46     		mov	r2, r3
 14630 05f6 7B69     		ldr	r3, [r7, #20]
 14631 05f8 1344     		add	r3, r3, r2
 14632 05fa 224A     		ldr	r2, .L648+68
 14633 05fc 1D46     		mov	r5, r3
 14634 05fe 1446     		mov	r4, r2
 14635 0600 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14636 0602 2860     		str	r0, [r5]	@ unaligned
 14637 0604 6960     		str	r1, [r5, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 330


 14638 0606 AA60     		str	r2, [r5, #8]	@ unaligned
 14639 0608 EB60     		str	r3, [r5, #12]	@ unaligned
 14640 060a 2068     		ldr	r0, [r4]	@ unaligned
 14641 060c 2861     		str	r0, [r5, #16]	@ unaligned
 14642 060e A388     		ldrh	r3, [r4, #4]	@ unaligned
 14643 0610 AB82     		strh	r3, [r5, #20]	@ unaligned
1944:..\src/command_processing.c ****             strcat(info_string, "Sensor value: ");
 14644              		.loc 1 1944 0
 14645 0612 7869     		ldr	r0, [r7, #20]
 14646 0614 FFF7FEFF 		bl	strlen
 14647 0618 0346     		mov	r3, r0
 14648 061a 1A46     		mov	r2, r3
 14649 061c 7B69     		ldr	r3, [r7, #20]
 14650 061e 1344     		add	r3, r3, r2
 14651 0620 194A     		ldr	r2, .L648+72
 14652 0622 1C46     		mov	r4, r3
 14653 0624 1346     		mov	r3, r2
 14654 0626 07CB     		ldmia	r3!, {r0, r1, r2}
 14655 0628 2060     		str	r0, [r4]	@ unaligned
 14656 062a 6160     		str	r1, [r4, #4]	@ unaligned
 14657 062c A260     		str	r2, [r4, #8]	@ unaligned
 14658 062e 1A88     		ldrh	r2, [r3]	@ unaligned
 14659 0630 9B78     		ldrb	r3, [r3, #2]
 14660 0632 A281     		strh	r2, [r4, #12]	@ unaligned
 14661 0634 A373     		strb	r3, [r4, #14]
1945:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; i++) {
 14662              		.loc 1 1945 0
 14663 0636 0023     		movs	r3, #0
 14664 0638 C7F89430 		str	r3, [r7, #148]
 14665 063c 65E0     		b	.L572
 14666              	.L649:
 14667 063e 00BF     		.align	2
 14668              	.L648:
 14669 0640 30120000 		.word	.LC163
 14670 0644 40120000 		.word	.LC164
 14671 0648 50120000 		.word	.LC165
 14672 064c 60120000 		.word	.LC166
 14673 0650 6C120000 		.word	.LC167
 14674 0654 00000000 		.word	g_refOld
 14675 0658 7C120000 		.word	.LC168
 14676 065c A8100000 		.word	.LC147
 14677 0660 80120000 		.word	.LC169
 14678 0664 00000000 		.word	g_ref
 14679 0668 90120000 		.word	.LC170
 14680 066c 98120000 		.word	.LC171
 14681 0670 A0120000 		.word	.LC172
 14682 0674 BC120000 		.word	.LC173
 14683 0678 C4120000 		.word	.LC174
 14684 067c 00000000 		.word	dev_pwm_limit
 14685 0680 C8120000 		.word	.LC175
 14686 0684 D8120000 		.word	.LC176
 14687 0688 F0120000 		.word	.LC177
 14688              	.L574:
1946:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 14689              		.loc 1 1946 0
 14690 068c 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 14691 0690 B849     		ldr	r1, .L650
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 331


 14692 0692 1346     		mov	r3, r2
 14693 0694 5B00     		lsls	r3, r3, #1
 14694 0696 1344     		add	r3, r3, r2
 14695 0698 9B00     		lsls	r3, r3, #2
 14696 069a 1344     		add	r3, r3, r2
 14697 069c D7F89420 		ldr	r2, [r7, #148]
 14698 06a0 1344     		add	r3, r3, r2
 14699 06a2 51F82310 		ldr	r1, [r1, r3, lsl #2]
 14700 06a6 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 14701 06aa D7F88C00 		ldr	r0, [r7, #140]
 14702 06ae 1346     		mov	r3, r2
 14703 06b0 5B00     		lsls	r3, r3, #1
 14704 06b2 1344     		add	r3, r3, r2
 14705 06b4 1B01     		lsls	r3, r3, #4
 14706 06b6 C218     		adds	r2, r0, r3
 14707 06b8 D7F89430 		ldr	r3, [r7, #148]
 14708 06bc 1344     		add	r3, r3, r2
 14709 06be 03F29513 		addw	r3, r3, #405
 14710 06c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14711 06c4 41FA03F2 		asr	r2, r1, r3
 14712 06c8 07F11C03 		add	r3, r7, #28
 14713 06cc AA49     		ldr	r1, .L650+4
 14714 06ce 1846     		mov	r0, r3
 14715 06d0 FFF7FEFF 		bl	sprintf
1947:..\src/command_processing.c ****                 strcat(info_string, str);
 14716              		.loc 1 1947 0
 14717 06d4 07F11C03 		add	r3, r7, #28
 14718 06d8 1946     		mov	r1, r3
 14719 06da 7869     		ldr	r0, [r7, #20]
 14720 06dc FFF7FEFF 		bl	strcat
1948:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 14721              		.loc 1 1948 0
 14722 06e0 D7F89430 		ldr	r3, [r7, #148]
 14723 06e4 022B     		cmp	r3, #2
 14724 06e6 0BD0     		beq	.L573
1949:..\src/command_processing.c ****                     strcat(info_string, ", ");
 14725              		.loc 1 1949 0
 14726 06e8 7869     		ldr	r0, [r7, #20]
 14727 06ea FFF7FEFF 		bl	strlen
 14728 06ee 0346     		mov	r3, r0
 14729 06f0 1A46     		mov	r2, r3
 14730 06f2 7B69     		ldr	r3, [r7, #20]
 14731 06f4 1344     		add	r3, r3, r2
 14732 06f6 A14A     		ldr	r2, .L650+8
 14733 06f8 1188     		ldrh	r1, [r2]	@ unaligned
 14734 06fa 9278     		ldrb	r2, [r2, #2]
 14735 06fc 1980     		strh	r1, [r3]	@ unaligned
 14736 06fe 9A70     		strb	r2, [r3, #2]
 14737              	.L573:
1945:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 14738              		.loc 1 1945 0 discriminator 2
 14739 0700 D7F89430 		ldr	r3, [r7, #148]
 14740 0704 0133     		adds	r3, r3, #1
 14741 0706 C7F89430 		str	r3, [r7, #148]
 14742              	.L572:
1945:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 14743              		.loc 1 1945 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 332


 14744 070a D7F89430 		ldr	r3, [r7, #148]
 14745 070e 022B     		cmp	r3, #2
 14746 0710 BCDD     		ble	.L574
1950:..\src/command_processing.c ****                 }                
1951:..\src/command_processing.c ****             }
1952:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14747              		.loc 1 1952 0 is_stmt 1
 14748 0712 7869     		ldr	r0, [r7, #20]
 14749 0714 FFF7FEFF 		bl	strlen
 14750 0718 0346     		mov	r3, r0
 14751 071a 1A46     		mov	r2, r3
 14752 071c 7B69     		ldr	r3, [r7, #20]
 14753 071e 1344     		add	r3, r3, r2
 14754 0720 974A     		ldr	r2, .L650+12
 14755 0722 1188     		ldrh	r1, [r2]	@ unaligned
 14756 0724 9278     		ldrb	r2, [r2, #2]
 14757 0726 1980     		strh	r1, [r3]	@ unaligned
 14758 0728 9A70     		strb	r2, [r3, #2]
1953:..\src/command_processing.c ****             
1954:..\src/command_processing.c ****             if (MOT->input_mode == INPUT_MODE_JOYSTICK){
 14759              		.loc 1 1954 0
 14760 072a D7F88430 		ldr	r3, [r7, #132]
 14761 072e 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 14762 0732 062B     		cmp	r3, #6
 14763 0734 1AD1     		bne	.L575
1955:..\src/command_processing.c ****                 sprintf(str, "Joystick measurements: %d, %d", (int)g_adc_measOld.joystick[0], (int)
 14764              		.loc 1 1955 0
 14765 0736 934B     		ldr	r3, .L650+16
 14766 0738 1A6A     		ldr	r2, [r3, #32]
 14767 073a 924B     		ldr	r3, .L650+16
 14768 073c 5B6A     		ldr	r3, [r3, #36]
 14769 073e 07F11C00 		add	r0, r7, #28
 14770 0742 9149     		ldr	r1, .L650+20
 14771 0744 FFF7FEFF 		bl	sprintf
1956:..\src/command_processing.c ****                 strcat(info_string, str);
 14772              		.loc 1 1956 0
 14773 0748 07F11C03 		add	r3, r7, #28
 14774 074c 1946     		mov	r1, r3
 14775 074e 7869     		ldr	r0, [r7, #20]
 14776 0750 FFF7FEFF 		bl	strcat
1957:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 14777              		.loc 1 1957 0
 14778 0754 7869     		ldr	r0, [r7, #20]
 14779 0756 FFF7FEFF 		bl	strlen
 14780 075a 0346     		mov	r3, r0
 14781 075c 1A46     		mov	r2, r3
 14782 075e 7B69     		ldr	r3, [r7, #20]
 14783 0760 1344     		add	r3, r3, r2
 14784 0762 874A     		ldr	r2, .L650+12
 14785 0764 1188     		ldrh	r1, [r2]	@ unaligned
 14786 0766 9278     		ldrb	r2, [r2, #2]
 14787 0768 1980     		strh	r1, [r3]	@ unaligned
 14788 076a 9A70     		strb	r2, [r3, #2]
 14789              	.L575:
1958:..\src/command_processing.c ****             }
1959:..\src/command_processing.c **** 
1960:..\src/command_processing.c ****             sprintf(str, "Battery %d Voltage (mV): %ld", MOTOR_IDX+1, (int32) dev_tension[MOTOR_IDX
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 333


 14790              		.loc 1 1960 0
 14791 076c 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14792 0770 591C     		adds	r1, r3, #1
 14793 0772 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14794 0776 854A     		ldr	r2, .L650+24
 14795 0778 52F82330 		ldr	r3, [r2, r3, lsl #2]
 14796 077c 07F11C00 		add	r0, r7, #28
 14797 0780 0A46     		mov	r2, r1
 14798 0782 8349     		ldr	r1, .L650+28
 14799 0784 FFF7FEFF 		bl	sprintf
1961:..\src/command_processing.c ****             strcat(info_string, str);
 14800              		.loc 1 1961 0
 14801 0788 07F11C03 		add	r3, r7, #28
 14802 078c 1946     		mov	r1, r3
 14803 078e 7869     		ldr	r0, [r7, #20]
 14804 0790 FFF7FEFF 		bl	strcat
1962:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14805              		.loc 1 1962 0
 14806 0794 7869     		ldr	r0, [r7, #20]
 14807 0796 FFF7FEFF 		bl	strlen
 14808 079a 0346     		mov	r3, r0
 14809 079c 1A46     		mov	r2, r3
 14810 079e 7B69     		ldr	r3, [r7, #20]
 14811 07a0 1344     		add	r3, r3, r2
 14812 07a2 774A     		ldr	r2, .L650+12
 14813 07a4 1188     		ldrh	r1, [r2]	@ unaligned
 14814 07a6 9278     		ldrb	r2, [r2, #2]
 14815 07a8 1980     		strh	r1, [r3]	@ unaligned
 14816 07aa 9A70     		strb	r2, [r3, #2]
1963:..\src/command_processing.c ****             
1964:..\src/command_processing.c ****             sprintf(str, "Full charge power tension %d (mV): %ld", MOTOR_IDX+1, (int32) pow_tension
 14817              		.loc 1 1964 0
 14818 07ac 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14819 07b0 591C     		adds	r1, r3, #1
 14820 07b2 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14821 07b6 774A     		ldr	r2, .L650+32
 14822 07b8 52F82330 		ldr	r3, [r2, r3, lsl #2]
 14823 07bc 07F11C00 		add	r0, r7, #28
 14824 07c0 0A46     		mov	r2, r1
 14825 07c2 7549     		ldr	r1, .L650+36
 14826 07c4 FFF7FEFF 		bl	sprintf
1965:..\src/command_processing.c ****             strcat(info_string, str);
 14827              		.loc 1 1965 0
 14828 07c8 07F11C03 		add	r3, r7, #28
 14829 07cc 1946     		mov	r1, r3
 14830 07ce 7869     		ldr	r0, [r7, #20]
 14831 07d0 FFF7FEFF 		bl	strcat
1966:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14832              		.loc 1 1966 0
 14833 07d4 7869     		ldr	r0, [r7, #20]
 14834 07d6 FFF7FEFF 		bl	strlen
 14835 07da 0346     		mov	r3, r0
 14836 07dc 1A46     		mov	r2, r3
 14837 07de 7B69     		ldr	r3, [r7, #20]
 14838 07e0 1344     		add	r3, r3, r2
 14839 07e2 674A     		ldr	r2, .L650+12
 14840 07e4 1188     		ldrh	r1, [r2]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 334


 14841 07e6 9278     		ldrb	r2, [r2, #2]
 14842 07e8 1980     		strh	r1, [r3]	@ unaligned
 14843 07ea 9A70     		strb	r2, [r3, #2]
1967:..\src/command_processing.c **** 
1968:..\src/command_processing.c ****             sprintf(str, "Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[ENC_L].curr );
 14844              		.loc 1 1968 0
 14845 07ec 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14846 07f0 5C1C     		adds	r4, r3, #1
 14847 07f2 97F88330 		ldrb	r3, [r7, #131]	@ zero_extendqisi2
 14848 07f6 5F4A     		ldr	r2, .L650
 14849 07f8 3421     		movs	r1, #52
 14850 07fa 01FB03F3 		mul	r3, r1, r3
 14851 07fe 1344     		add	r3, r3, r2
 14852 0800 0C33     		adds	r3, r3, #12
 14853 0802 1B68     		ldr	r3, [r3]
 14854 0804 07F11C00 		add	r0, r7, #28
 14855 0808 2246     		mov	r2, r4
 14856 080a 6449     		ldr	r1, .L650+40
 14857 080c FFF7FEFF 		bl	sprintf
1969:..\src/command_processing.c ****             strcat(info_string, str);
 14858              		.loc 1 1969 0
 14859 0810 07F11C03 		add	r3, r7, #28
 14860 0814 1946     		mov	r1, r3
 14861 0816 7869     		ldr	r0, [r7, #20]
 14862 0818 FFF7FEFF 		bl	strcat
1970:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14863              		.loc 1 1970 0
 14864 081c 7869     		ldr	r0, [r7, #20]
 14865 081e FFF7FEFF 		bl	strlen
 14866 0822 0346     		mov	r3, r0
 14867 0824 1A46     		mov	r2, r3
 14868 0826 7B69     		ldr	r3, [r7, #20]
 14869 0828 1344     		add	r3, r3, r2
 14870 082a 554A     		ldr	r2, .L650+12
 14871 082c 1188     		ldrh	r1, [r2]	@ unaligned
 14872 082e 9278     		ldrb	r2, [r2, #2]
 14873 0830 1980     		strh	r1, [r3]	@ unaligned
 14874 0832 9A70     		strb	r2, [r3, #2]
1971:..\src/command_processing.c ****             
1972:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag == TRUE){
 14875              		.loc 1 1972 0
 14876 0834 D7F88430 		ldr	r3, [r7, #132]
 14877 0838 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 14878 083c 012B     		cmp	r3, #1
 14879 083e 23D1     		bne	.L576
1973:..\src/command_processing.c ****                 sprintf(str, "Last Grasp Hold Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[EN
 14880              		.loc 1 1973 0
 14881 0840 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14882 0844 5C1C     		adds	r4, r3, #1
 14883 0846 97F88330 		ldrb	r3, [r7, #131]	@ zero_extendqisi2
 14884 084a 4A4A     		ldr	r2, .L650
 14885 084c 3421     		movs	r1, #52
 14886 084e 01FB03F3 		mul	r3, r1, r3
 14887 0852 1344     		add	r3, r3, r2
 14888 0854 1433     		adds	r3, r3, #20
 14889 0856 1B68     		ldr	r3, [r3]
 14890 0858 07F11C00 		add	r0, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 335


 14891 085c 2246     		mov	r2, r4
 14892 085e 5049     		ldr	r1, .L650+44
 14893 0860 FFF7FEFF 		bl	sprintf
1974:..\src/command_processing.c ****                 strcat(info_string, str);
 14894              		.loc 1 1974 0
 14895 0864 07F11C03 		add	r3, r7, #28
 14896 0868 1946     		mov	r1, r3
 14897 086a 7869     		ldr	r0, [r7, #20]
 14898 086c FFF7FEFF 		bl	strcat
1975:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 14899              		.loc 1 1975 0
 14900 0870 7869     		ldr	r0, [r7, #20]
 14901 0872 FFF7FEFF 		bl	strlen
 14902 0876 0346     		mov	r3, r0
 14903 0878 1A46     		mov	r2, r3
 14904 087a 7B69     		ldr	r3, [r7, #20]
 14905 087c 1344     		add	r3, r3, r2
 14906 087e 404A     		ldr	r2, .L650+12
 14907 0880 1188     		ldrh	r1, [r2]	@ unaligned
 14908 0882 9278     		ldrb	r2, [r2, #2]
 14909 0884 1980     		strh	r1, [r3]	@ unaligned
 14910 0886 9A70     		strb	r2, [r3, #2]
 14911              	.L576:
1976:..\src/command_processing.c ****             }
1977:..\src/command_processing.c ****             
1978:..\src/command_processing.c ****             sprintf(str, "\r\nMOTOR %d CONFIGURATION\r\n", MOTOR_IDX+1);
 14912              		.loc 1 1978 0
 14913 0888 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14914 088c 5A1C     		adds	r2, r3, #1
 14915 088e 07F11C03 		add	r3, r7, #28
 14916 0892 4449     		ldr	r1, .L650+48
 14917 0894 1846     		mov	r0, r3
 14918 0896 FFF7FEFF 		bl	sprintf
1979:..\src/command_processing.c ****             strcat(info_string, str);
 14919              		.loc 1 1979 0
 14920 089a 07F11C03 		add	r3, r7, #28
 14921 089e 1946     		mov	r1, r3
 14922 08a0 7869     		ldr	r0, [r7, #20]
 14923 08a2 FFF7FEFF 		bl	strcat
1980:..\src/command_processing.c **** 
1981:..\src/command_processing.c ****             strcat(info_string, "PID Controller: ");
 14924              		.loc 1 1981 0
 14925 08a6 7869     		ldr	r0, [r7, #20]
 14926 08a8 FFF7FEFF 		bl	strlen
 14927 08ac 0346     		mov	r3, r0
 14928 08ae 1A46     		mov	r2, r3
 14929 08b0 7B69     		ldr	r3, [r7, #20]
 14930 08b2 1344     		add	r3, r3, r2
 14931 08b4 3C4A     		ldr	r2, .L650+52
 14932 08b6 1D46     		mov	r5, r3
 14933 08b8 1446     		mov	r4, r2
 14934 08ba 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14935 08bc 2860     		str	r0, [r5]	@ unaligned
 14936 08be 6960     		str	r1, [r5, #4]	@ unaligned
 14937 08c0 AA60     		str	r2, [r5, #8]	@ unaligned
 14938 08c2 EB60     		str	r3, [r5, #12]	@ unaligned
 14939 08c4 2378     		ldrb	r3, [r4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 336


 14940 08c6 2B74     		strb	r3, [r5, #16]
1982:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 14941              		.loc 1 1982 0
 14942 08c8 D7F88430 		ldr	r3, [r7, #132]
 14943 08cc 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14944 08d0 032B     		cmp	r3, #3
 14945 08d2 73D0     		beq	.L577
1983:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 14946              		.loc 1 1983 0
 14947 08d4 D7F88430 		ldr	r3, [r7, #132]
 14948 08d8 1B68     		ldr	r3, [r3]
 14949 08da 1846     		mov	r0, r3
 14950 08dc FFF7FEFF 		bl	__aeabi_i2d
 14951 08e0 4FF00002 		mov	r2, #0
 14952 08e4 314B     		ldr	r3, .L650+56
 14953 08e6 FFF7FEFF 		bl	__aeabi_ddiv
 14954 08ea 0346     		mov	r3, r0
 14955 08ec 0C46     		mov	r4, r1
 14956 08ee 07F11C00 		add	r0, r7, #28
 14957 08f2 1A46     		mov	r2, r3
 14958 08f4 2346     		mov	r3, r4
 14959 08f6 2E49     		ldr	r1, .L650+60
 14960 08f8 FFF7FEFF 		bl	sprintf
1984:..\src/command_processing.c ****                 strcat(info_string, str);
 14961              		.loc 1 1984 0
 14962 08fc 07F11C03 		add	r3, r7, #28
 14963 0900 1946     		mov	r1, r3
 14964 0902 7869     		ldr	r0, [r7, #20]
 14965 0904 FFF7FEFF 		bl	strcat
1985:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 14966              		.loc 1 1985 0
 14967 0908 D7F88430 		ldr	r3, [r7, #132]
 14968 090c 5B68     		ldr	r3, [r3, #4]
 14969 090e 1846     		mov	r0, r3
 14970 0910 FFF7FEFF 		bl	__aeabi_i2d
 14971 0914 4FF00002 		mov	r2, #0
 14972 0918 244B     		ldr	r3, .L650+56
 14973 091a FFF7FEFF 		bl	__aeabi_ddiv
 14974 091e 0346     		mov	r3, r0
 14975 0920 0C46     		mov	r4, r1
 14976 0922 07F11C00 		add	r0, r7, #28
 14977 0926 1A46     		mov	r2, r3
 14978 0928 2346     		mov	r3, r4
 14979 092a 2249     		ldr	r1, .L650+64
 14980 092c FFF7FEFF 		bl	sprintf
1986:..\src/command_processing.c ****                 strcat(info_string, str);
 14981              		.loc 1 1986 0
 14982 0930 07F11C03 		add	r3, r7, #28
 14983 0934 1946     		mov	r1, r3
 14984 0936 7869     		ldr	r0, [r7, #20]
 14985 0938 FFF7FEFF 		bl	strcat
1987:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 14986              		.loc 1 1987 0
 14987 093c D7F88430 		ldr	r3, [r7, #132]
 14988 0940 9B68     		ldr	r3, [r3, #8]
 14989 0942 1846     		mov	r0, r3
 14990 0944 FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 337


 14991 0948 4FF00002 		mov	r2, #0
 14992 094c 174B     		ldr	r3, .L650+56
 14993 094e FFF7FEFF 		bl	__aeabi_ddiv
 14994 0952 0346     		mov	r3, r0
 14995 0954 0C46     		mov	r4, r1
 14996 0956 07F11C00 		add	r0, r7, #28
 14997 095a 1A46     		mov	r2, r3
 14998 095c 2346     		mov	r3, r4
 14999 095e 1649     		ldr	r1, .L650+68
 15000 0960 FFF7FEFF 		bl	sprintf
1988:..\src/command_processing.c ****                 strcat(info_string, str);
 15001              		.loc 1 1988 0
 15002 0964 07F11C03 		add	r3, r7, #28
 15003 0968 1946     		mov	r1, r3
 15004 096a 7869     		ldr	r0, [r7, #20]
 15005 096c FFF7FEFF 		bl	strcat
 15006 0970 72E0     		b	.L578
 15007              	.L651:
 15008 0972 00BF     		.align	2
 15009              	.L650:
 15010 0974 00000000 		.word	g_meas
 15011 0978 00130000 		.word	.LC178
 15012 097c 04130000 		.word	.LC179
 15013 0980 A8100000 		.word	.LC147
 15014 0984 00000000 		.word	g_adc_measOld
 15015 0988 08130000 		.word	.LC180
 15016 098c 00000000 		.word	dev_tension
 15017 0990 28130000 		.word	.LC181
 15018 0994 00000000 		.word	pow_tension
 15019 0998 48130000 		.word	.LC182
 15020 099c 70130000 		.word	.LC183
 15021 09a0 88130000 		.word	.LC184
 15022 09a4 B0130000 		.word	.LC185
 15023 09a8 CC130000 		.word	.LC186
 15024 09ac 0000F040 		.word	1089470464
 15025 09b0 E0130000 		.word	.LC187
 15026 09b4 EC130000 		.word	.LC188
 15027 09b8 F8130000 		.word	.LC189
 15028              	.L577:
1989:..\src/command_processing.c ****             }
1990:..\src/command_processing.c ****             else { 
1991:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 15029              		.loc 1 1991 0
 15030 09bc D7F88430 		ldr	r3, [r7, #132]
 15031 09c0 9B69     		ldr	r3, [r3, #24]
 15032 09c2 1846     		mov	r0, r3
 15033 09c4 FFF7FEFF 		bl	__aeabi_i2d
 15034 09c8 4FF00002 		mov	r2, #0
 15035 09cc CE4B     		ldr	r3, .L652
 15036 09ce FFF7FEFF 		bl	__aeabi_ddiv
 15037 09d2 0346     		mov	r3, r0
 15038 09d4 0C46     		mov	r4, r1
 15039 09d6 07F11C00 		add	r0, r7, #28
 15040 09da 1A46     		mov	r2, r3
 15041 09dc 2346     		mov	r3, r4
 15042 09de CB49     		ldr	r1, .L652+4
 15043 09e0 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 338


1992:..\src/command_processing.c ****                 strcat(info_string, str);
 15044              		.loc 1 1992 0
 15045 09e4 07F11C03 		add	r3, r7, #28
 15046 09e8 1946     		mov	r1, r3
 15047 09ea 7869     		ldr	r0, [r7, #20]
 15048 09ec FFF7FEFF 		bl	strcat
1993:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 15049              		.loc 1 1993 0
 15050 09f0 D7F88430 		ldr	r3, [r7, #132]
 15051 09f4 DB69     		ldr	r3, [r3, #28]
 15052 09f6 1846     		mov	r0, r3
 15053 09f8 FFF7FEFF 		bl	__aeabi_i2d
 15054 09fc 4FF00002 		mov	r2, #0
 15055 0a00 C14B     		ldr	r3, .L652
 15056 0a02 FFF7FEFF 		bl	__aeabi_ddiv
 15057 0a06 0346     		mov	r3, r0
 15058 0a08 0C46     		mov	r4, r1
 15059 0a0a 07F11C00 		add	r0, r7, #28
 15060 0a0e 1A46     		mov	r2, r3
 15061 0a10 2346     		mov	r3, r4
 15062 0a12 BF49     		ldr	r1, .L652+8
 15063 0a14 FFF7FEFF 		bl	sprintf
1994:..\src/command_processing.c ****                 strcat(info_string, str);
 15064              		.loc 1 1994 0
 15065 0a18 07F11C03 		add	r3, r7, #28
 15066 0a1c 1946     		mov	r1, r3
 15067 0a1e 7869     		ldr	r0, [r7, #20]
 15068 0a20 FFF7FEFF 		bl	strcat
1995:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 15069              		.loc 1 1995 0
 15070 0a24 D7F88430 		ldr	r3, [r7, #132]
 15071 0a28 1B6A     		ldr	r3, [r3, #32]
 15072 0a2a 1846     		mov	r0, r3
 15073 0a2c FFF7FEFF 		bl	__aeabi_i2d
 15074 0a30 4FF00002 		mov	r2, #0
 15075 0a34 B44B     		ldr	r3, .L652
 15076 0a36 FFF7FEFF 		bl	__aeabi_ddiv
 15077 0a3a 0346     		mov	r3, r0
 15078 0a3c 0C46     		mov	r4, r1
 15079 0a3e 07F11C00 		add	r0, r7, #28
 15080 0a42 1A46     		mov	r2, r3
 15081 0a44 2346     		mov	r3, r4
 15082 0a46 B349     		ldr	r1, .L652+12
 15083 0a48 FFF7FEFF 		bl	sprintf
1996:..\src/command_processing.c ****                 strcat(info_string, str);
 15084              		.loc 1 1996 0
 15085 0a4c 07F11C03 		add	r3, r7, #28
 15086 0a50 1946     		mov	r1, r3
 15087 0a52 7869     		ldr	r0, [r7, #20]
 15088 0a54 FFF7FEFF 		bl	strcat
 15089              	.L578:
1997:..\src/command_processing.c ****             }
1998:..\src/command_processing.c **** 
1999:..\src/command_processing.c ****             strcat(info_string, "Current PID Controller: ");
 15090              		.loc 1 1999 0
 15091 0a58 7869     		ldr	r0, [r7, #20]
 15092 0a5a FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 339


 15093 0a5e 0346     		mov	r3, r0
 15094 0a60 1A46     		mov	r2, r3
 15095 0a62 7B69     		ldr	r3, [r7, #20]
 15096 0a64 1344     		add	r3, r3, r2
 15097 0a66 AC4A     		ldr	r2, .L652+16
 15098 0a68 1D46     		mov	r5, r3
 15099 0a6a 1446     		mov	r4, r2
 15100 0a6c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15101 0a6e 2860     		str	r0, [r5]	@ unaligned
 15102 0a70 6960     		str	r1, [r5, #4]	@ unaligned
 15103 0a72 AA60     		str	r2, [r5, #8]	@ unaligned
 15104 0a74 EB60     		str	r3, [r5, #12]	@ unaligned
 15105 0a76 03CC     		ldmia	r4!, {r0, r1}
 15106 0a78 2861     		str	r0, [r5, #16]	@ unaligned
 15107 0a7a 6961     		str	r1, [r5, #20]	@ unaligned
 15108 0a7c 2378     		ldrb	r3, [r4]
 15109 0a7e 2B76     		strb	r3, [r5, #24]
2000:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 15110              		.loc 1 2000 0
 15111 0a80 D7F88430 		ldr	r3, [r7, #132]
 15112 0a84 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 15113 0a88 032B     		cmp	r3, #3
 15114 0a8a 4ED0     		beq	.L579
2001:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 15115              		.loc 1 2001 0
 15116 0a8c D7F88430 		ldr	r3, [r7, #132]
 15117 0a90 DB68     		ldr	r3, [r3, #12]
 15118 0a92 1846     		mov	r0, r3
 15119 0a94 FFF7FEFF 		bl	__aeabi_i2d
 15120 0a98 4FF00002 		mov	r2, #0
 15121 0a9c 9A4B     		ldr	r3, .L652
 15122 0a9e FFF7FEFF 		bl	__aeabi_ddiv
 15123 0aa2 0346     		mov	r3, r0
 15124 0aa4 0C46     		mov	r4, r1
 15125 0aa6 07F11C00 		add	r0, r7, #28
 15126 0aaa 1A46     		mov	r2, r3
 15127 0aac 2346     		mov	r3, r4
 15128 0aae 9749     		ldr	r1, .L652+4
 15129 0ab0 FFF7FEFF 		bl	sprintf
2002:..\src/command_processing.c ****                 strcat(info_string, str);
 15130              		.loc 1 2002 0
 15131 0ab4 07F11C03 		add	r3, r7, #28
 15132 0ab8 1946     		mov	r1, r3
 15133 0aba 7869     		ldr	r0, [r7, #20]
 15134 0abc FFF7FEFF 		bl	strcat
2003:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 15135              		.loc 1 2003 0
 15136 0ac0 D7F88430 		ldr	r3, [r7, #132]
 15137 0ac4 1B69     		ldr	r3, [r3, #16]
 15138 0ac6 1846     		mov	r0, r3
 15139 0ac8 FFF7FEFF 		bl	__aeabi_i2d
 15140 0acc 4FF00002 		mov	r2, #0
 15141 0ad0 8D4B     		ldr	r3, .L652
 15142 0ad2 FFF7FEFF 		bl	__aeabi_ddiv
 15143 0ad6 0346     		mov	r3, r0
 15144 0ad8 0C46     		mov	r4, r1
 15145 0ada 07F11C00 		add	r0, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 340


 15146 0ade 1A46     		mov	r2, r3
 15147 0ae0 2346     		mov	r3, r4
 15148 0ae2 8B49     		ldr	r1, .L652+8
 15149 0ae4 FFF7FEFF 		bl	sprintf
2004:..\src/command_processing.c ****                 strcat(info_string, str);
 15150              		.loc 1 2004 0
 15151 0ae8 07F11C03 		add	r3, r7, #28
 15152 0aec 1946     		mov	r1, r3
 15153 0aee 7869     		ldr	r0, [r7, #20]
 15154 0af0 FFF7FEFF 		bl	strcat
2005:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 15155              		.loc 1 2005 0
 15156 0af4 D7F88430 		ldr	r3, [r7, #132]
 15157 0af8 5B69     		ldr	r3, [r3, #20]
 15158 0afa 1846     		mov	r0, r3
 15159 0afc FFF7FEFF 		bl	__aeabi_i2d
 15160 0b00 4FF00002 		mov	r2, #0
 15161 0b04 804B     		ldr	r3, .L652
 15162 0b06 FFF7FEFF 		bl	__aeabi_ddiv
 15163 0b0a 0346     		mov	r3, r0
 15164 0b0c 0C46     		mov	r4, r1
 15165 0b0e 07F11C00 		add	r0, r7, #28
 15166 0b12 1A46     		mov	r2, r3
 15167 0b14 2346     		mov	r3, r4
 15168 0b16 7F49     		ldr	r1, .L652+12
 15169 0b18 FFF7FEFF 		bl	sprintf
2006:..\src/command_processing.c ****                 strcat(info_string, str);
 15170              		.loc 1 2006 0
 15171 0b1c 07F11C03 		add	r3, r7, #28
 15172 0b20 1946     		mov	r1, r3
 15173 0b22 7869     		ldr	r0, [r7, #20]
 15174 0b24 FFF7FEFF 		bl	strcat
 15175 0b28 4DE0     		b	.L580
 15176              	.L579:
2007:..\src/command_processing.c **** 
2008:..\src/command_processing.c ****             }
2009:..\src/command_processing.c ****             else {
2010:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 15177              		.loc 1 2010 0
 15178 0b2a D7F88430 		ldr	r3, [r7, #132]
 15179 0b2e 5B6A     		ldr	r3, [r3, #36]
 15180 0b30 1846     		mov	r0, r3
 15181 0b32 FFF7FEFF 		bl	__aeabi_i2d
 15182 0b36 4FF00002 		mov	r2, #0
 15183 0b3a 734B     		ldr	r3, .L652
 15184 0b3c FFF7FEFF 		bl	__aeabi_ddiv
 15185 0b40 0346     		mov	r3, r0
 15186 0b42 0C46     		mov	r4, r1
 15187 0b44 07F11C00 		add	r0, r7, #28
 15188 0b48 1A46     		mov	r2, r3
 15189 0b4a 2346     		mov	r3, r4
 15190 0b4c 6F49     		ldr	r1, .L652+4
 15191 0b4e FFF7FEFF 		bl	sprintf
2011:..\src/command_processing.c ****                 strcat(info_string, str);
 15192              		.loc 1 2011 0
 15193 0b52 07F11C03 		add	r3, r7, #28
 15194 0b56 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 341


 15195 0b58 7869     		ldr	r0, [r7, #20]
 15196 0b5a FFF7FEFF 		bl	strcat
2012:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 15197              		.loc 1 2012 0
 15198 0b5e D7F88430 		ldr	r3, [r7, #132]
 15199 0b62 9B6A     		ldr	r3, [r3, #40]
 15200 0b64 1846     		mov	r0, r3
 15201 0b66 FFF7FEFF 		bl	__aeabi_i2d
 15202 0b6a 4FF00002 		mov	r2, #0
 15203 0b6e 664B     		ldr	r3, .L652
 15204 0b70 FFF7FEFF 		bl	__aeabi_ddiv
 15205 0b74 0346     		mov	r3, r0
 15206 0b76 0C46     		mov	r4, r1
 15207 0b78 07F11C00 		add	r0, r7, #28
 15208 0b7c 1A46     		mov	r2, r3
 15209 0b7e 2346     		mov	r3, r4
 15210 0b80 6349     		ldr	r1, .L652+8
 15211 0b82 FFF7FEFF 		bl	sprintf
2013:..\src/command_processing.c ****                 strcat(info_string, str);
 15212              		.loc 1 2013 0
 15213 0b86 07F11C03 		add	r3, r7, #28
 15214 0b8a 1946     		mov	r1, r3
 15215 0b8c 7869     		ldr	r0, [r7, #20]
 15216 0b8e FFF7FEFF 		bl	strcat
2014:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 15217              		.loc 1 2014 0
 15218 0b92 D7F88430 		ldr	r3, [r7, #132]
 15219 0b96 DB6A     		ldr	r3, [r3, #44]
 15220 0b98 1846     		mov	r0, r3
 15221 0b9a FFF7FEFF 		bl	__aeabi_i2d
 15222 0b9e 4FF00002 		mov	r2, #0
 15223 0ba2 594B     		ldr	r3, .L652
 15224 0ba4 FFF7FEFF 		bl	__aeabi_ddiv
 15225 0ba8 0346     		mov	r3, r0
 15226 0baa 0C46     		mov	r4, r1
 15227 0bac 07F11C00 		add	r0, r7, #28
 15228 0bb0 1A46     		mov	r2, r3
 15229 0bb2 2346     		mov	r3, r4
 15230 0bb4 5749     		ldr	r1, .L652+12
 15231 0bb6 FFF7FEFF 		bl	sprintf
2015:..\src/command_processing.c ****                 strcat(info_string, str);
 15232              		.loc 1 2015 0
 15233 0bba 07F11C03 		add	r3, r7, #28
 15234 0bbe 1946     		mov	r1, r3
 15235 0bc0 7869     		ldr	r0, [r7, #20]
 15236 0bc2 FFF7FEFF 		bl	strcat
 15237              	.L580:
2016:..\src/command_processing.c ****             }
2017:..\src/command_processing.c ****             if (MOT->activ == 0x01)
 15238              		.loc 1 2017 0
 15239 0bc6 D7F88430 		ldr	r3, [r7, #132]
 15240 0bca 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 15241 0bce 012B     		cmp	r3, #1
 15242 0bd0 14D1     		bne	.L581
2018:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: YES\r\n");
 15243              		.loc 1 2018 0
 15244 0bd2 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 342


 15245 0bd4 FFF7FEFF 		bl	strlen
 15246 0bd8 0346     		mov	r3, r0
 15247 0bda 1A46     		mov	r2, r3
 15248 0bdc 7B69     		ldr	r3, [r7, #20]
 15249 0bde 1344     		add	r3, r3, r2
 15250 0be0 4E4A     		ldr	r2, .L652+20
 15251 0be2 1D46     		mov	r5, r3
 15252 0be4 1446     		mov	r4, r2
 15253 0be6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15254 0be8 2860     		str	r0, [r5]	@ unaligned
 15255 0bea 6960     		str	r1, [r5, #4]	@ unaligned
 15256 0bec AA60     		str	r2, [r5, #8]	@ unaligned
 15257 0bee EB60     		str	r3, [r5, #12]	@ unaligned
 15258 0bf0 03CC     		ldmia	r4!, {r0, r1}
 15259 0bf2 2861     		str	r0, [r5, #16]	@ unaligned
 15260 0bf4 6961     		str	r1, [r5, #20]	@ unaligned
 15261 0bf6 2388     		ldrh	r3, [r4]	@ unaligned
 15262 0bf8 2B83     		strh	r3, [r5, #24]	@ unaligned
 15263 0bfa 13E0     		b	.L582
 15264              	.L581:
2019:..\src/command_processing.c ****             else
2020:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: NO\r\n");
 15265              		.loc 1 2020 0
 15266 0bfc 7869     		ldr	r0, [r7, #20]
 15267 0bfe FFF7FEFF 		bl	strlen
 15268 0c02 0346     		mov	r3, r0
 15269 0c04 1A46     		mov	r2, r3
 15270 0c06 7B69     		ldr	r3, [r7, #20]
 15271 0c08 1344     		add	r3, r3, r2
 15272 0c0a 454A     		ldr	r2, .L652+24
 15273 0c0c 1D46     		mov	r5, r3
 15274 0c0e 1446     		mov	r4, r2
 15275 0c10 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15276 0c12 2860     		str	r0, [r5]	@ unaligned
 15277 0c14 6960     		str	r1, [r5, #4]	@ unaligned
 15278 0c16 AA60     		str	r2, [r5, #8]	@ unaligned
 15279 0c18 EB60     		str	r3, [r5, #12]	@ unaligned
 15280 0c1a 03CC     		ldmia	r4!, {r0, r1}
 15281 0c1c 2861     		str	r0, [r5, #16]	@ unaligned
 15282 0c1e 6961     		str	r1, [r5, #20]	@ unaligned
 15283 0c20 2378     		ldrb	r3, [r4]
 15284 0c22 2B76     		strb	r3, [r5, #24]
 15285              	.L582:
2021:..\src/command_processing.c **** 
2022:..\src/command_processing.c ****             switch(MOT->input_mode) {
 15286              		.loc 1 2022 0
 15287 0c24 D7F88430 		ldr	r3, [r7, #132]
 15288 0c28 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 15289 0c2c 072B     		cmp	r3, #7
 15290 0c2e 00F2EA80 		bhi	.L583
 15291 0c32 01A2     		adr	r2, .L585
 15292 0c34 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 15293              		.p2align 2
 15294              	.L585:
 15295 0c38 590C0000 		.word	.L584+1
 15296 0c3c 7D0C0000 		.word	.L586+1
 15297 0c40 A50C0000 		.word	.L587+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 343


 15298 0c44 D70C0000 		.word	.L588+1
 15299 0c48 350D0000 		.word	.L589+1
 15300 0c4c 630D0000 		.word	.L590+1
 15301 0c50 930D0000 		.word	.L591+1
 15302 0c54 C10D0000 		.word	.L592+1
 15303              		.p2align 1
 15304              	.L584:
2023:..\src/command_processing.c ****                 case INPUT_MODE_EXTERNAL:
2024:..\src/command_processing.c ****                     strcat(info_string, "Input mode: USB\r\n");
 15305              		.loc 1 2024 0
 15306 0c58 7869     		ldr	r0, [r7, #20]
 15307 0c5a FFF7FEFF 		bl	strlen
 15308 0c5e 0346     		mov	r3, r0
 15309 0c60 1A46     		mov	r2, r3
 15310 0c62 7B69     		ldr	r3, [r7, #20]
 15311 0c64 1344     		add	r3, r3, r2
 15312 0c66 2F4A     		ldr	r2, .L652+28
 15313 0c68 1D46     		mov	r5, r3
 15314 0c6a 1446     		mov	r4, r2
 15315 0c6c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15316 0c6e 2860     		str	r0, [r5]	@ unaligned
 15317 0c70 6960     		str	r1, [r5, #4]	@ unaligned
 15318 0c72 AA60     		str	r2, [r5, #8]	@ unaligned
 15319 0c74 EB60     		str	r3, [r5, #12]	@ unaligned
 15320 0c76 2388     		ldrh	r3, [r4]	@ unaligned
 15321 0c78 2B82     		strh	r3, [r5, #16]	@ unaligned
2025:..\src/command_processing.c ****                     break;
 15322              		.loc 1 2025 0
 15323 0c7a C4E0     		b	.L583
 15324              	.L586:
2026:..\src/command_processing.c ****                 case INPUT_MODE_ENCODER3:
2027:..\src/command_processing.c ****                     strcat(info_string, "Input mode: Handle\r\n");
 15325              		.loc 1 2027 0
 15326 0c7c 7869     		ldr	r0, [r7, #20]
 15327 0c7e FFF7FEFF 		bl	strlen
 15328 0c82 0346     		mov	r3, r0
 15329 0c84 1A46     		mov	r2, r3
 15330 0c86 7B69     		ldr	r3, [r7, #20]
 15331 0c88 1344     		add	r3, r3, r2
 15332 0c8a 274A     		ldr	r2, .L652+32
 15333 0c8c 1D46     		mov	r5, r3
 15334 0c8e 1446     		mov	r4, r2
 15335 0c90 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15336 0c92 2860     		str	r0, [r5]	@ unaligned
 15337 0c94 6960     		str	r1, [r5, #4]	@ unaligned
 15338 0c96 AA60     		str	r2, [r5, #8]	@ unaligned
 15339 0c98 EB60     		str	r3, [r5, #12]	@ unaligned
 15340 0c9a 2068     		ldr	r0, [r4]	@ unaligned
 15341 0c9c 2861     		str	r0, [r5, #16]	@ unaligned
 15342 0c9e 2379     		ldrb	r3, [r4, #4]
 15343 0ca0 2B75     		strb	r3, [r5, #20]
2028:..\src/command_processing.c ****                     break;
 15344              		.loc 1 2028 0
 15345 0ca2 B0E0     		b	.L583
 15346              	.L587:
2029:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL:
2030:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional\r\n");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 344


 15347              		.loc 1 2030 0
 15348 0ca4 7869     		ldr	r0, [r7, #20]
 15349 0ca6 FFF7FEFF 		bl	strlen
 15350 0caa 0346     		mov	r3, r0
 15351 0cac 1A46     		mov	r2, r3
 15352 0cae 7B69     		ldr	r3, [r7, #20]
 15353 0cb0 1344     		add	r3, r3, r2
 15354 0cb2 1E4A     		ldr	r2, .L652+36
 15355 0cb4 1D46     		mov	r5, r3
 15356 0cb6 1446     		mov	r4, r2
 15357 0cb8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15358 0cba 2860     		str	r0, [r5]	@ unaligned
 15359 0cbc 6960     		str	r1, [r5, #4]	@ unaligned
 15360 0cbe AA60     		str	r2, [r5, #8]	@ unaligned
 15361 0cc0 EB60     		str	r3, [r5, #12]	@ unaligned
 15362 0cc2 07CC     		ldmia	r4!, {r0, r1, r2}
 15363 0cc4 2861     		str	r0, [r5, #16]	@ unaligned
 15364 0cc6 6961     		str	r1, [r5, #20]	@ unaligned
 15365 0cc8 AA61     		str	r2, [r5, #24]	@ unaligned
 15366 0cca 2388     		ldrh	r3, [r4]	@ unaligned
 15367 0ccc A278     		ldrb	r2, [r4, #2]
 15368 0cce AB83     		strh	r3, [r5, #28]	@ unaligned
 15369 0cd0 1346     		mov	r3, r2
 15370 0cd2 AB77     		strb	r3, [r5, #30]
2031:..\src/command_processing.c ****                     break;
 15371              		.loc 1 2031 0
 15372 0cd4 97E0     		b	.L583
 15373              	.L588:
2032:..\src/command_processing.c ****                 case INPUT_MODE_EMG_INTEGRAL:
2033:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG integral\r\n");
 15374              		.loc 1 2033 0
 15375 0cd6 7869     		ldr	r0, [r7, #20]
 15376 0cd8 FFF7FEFF 		bl	strlen
 15377 0cdc 0346     		mov	r3, r0
 15378 0cde 1A46     		mov	r2, r3
 15379 0ce0 7B69     		ldr	r3, [r7, #20]
 15380 0ce2 1344     		add	r3, r3, r2
 15381 0ce4 124A     		ldr	r2, .L652+40
 15382 0ce6 1D46     		mov	r5, r3
 15383 0ce8 1446     		mov	r4, r2
 15384 0cea 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15385 0cec 2860     		str	r0, [r5]	@ unaligned
 15386 0cee 6960     		str	r1, [r5, #4]	@ unaligned
 15387 0cf0 AA60     		str	r2, [r5, #8]	@ unaligned
 15388 0cf2 EB60     		str	r3, [r5, #12]	@ unaligned
 15389 0cf4 03CC     		ldmia	r4!, {r0, r1}
 15390 0cf6 2861     		str	r0, [r5, #16]	@ unaligned
 15391 0cf8 6961     		str	r1, [r5, #20]	@ unaligned
 15392 0cfa 2388     		ldrh	r3, [r4]	@ unaligned
 15393 0cfc A278     		ldrb	r2, [r4, #2]
 15394 0cfe 2B83     		strh	r3, [r5, #24]	@ unaligned
 15395 0d00 1346     		mov	r3, r2
 15396 0d02 AB76     		strb	r3, [r5, #26]
2034:..\src/command_processing.c ****                     break;
 15397              		.loc 1 2034 0
 15398 0d04 7FE0     		b	.L583
 15399              	.L653:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 345


 15400 0d06 00BF     		.align	2
 15401              	.L652:
 15402 0d08 0000F040 		.word	1089470464
 15403 0d0c E0130000 		.word	.LC187
 15404 0d10 EC130000 		.word	.LC188
 15405 0d14 F8130000 		.word	.LC189
 15406 0d18 04140000 		.word	.LC190
 15407 0d1c 20140000 		.word	.LC191
 15408 0d20 3C140000 		.word	.LC192
 15409 0d24 58140000 		.word	.LC193
 15410 0d28 6C140000 		.word	.LC194
 15411 0d2c 84140000 		.word	.LC195
 15412 0d30 A4140000 		.word	.LC196
 15413              	.L589:
2035:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS:
2036:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS\r\n");
 15414              		.loc 1 2036 0
 15415 0d34 7869     		ldr	r0, [r7, #20]
 15416 0d36 FFF7FEFF 		bl	strlen
 15417 0d3a 0346     		mov	r3, r0
 15418 0d3c 1A46     		mov	r2, r3
 15419 0d3e 7B69     		ldr	r3, [r7, #20]
 15420 0d40 1344     		add	r3, r3, r2
 15421 0d42 CF4A     		ldr	r2, .L654
 15422 0d44 1C46     		mov	r4, r3
 15423 0d46 1546     		mov	r5, r2
 15424 0d48 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15425 0d4a 2060     		str	r0, [r4]	@ unaligned
 15426 0d4c 6160     		str	r1, [r4, #4]	@ unaligned
 15427 0d4e A260     		str	r2, [r4, #8]	@ unaligned
 15428 0d50 E360     		str	r3, [r4, #12]	@ unaligned
 15429 0d52 2868     		ldr	r0, [r5]	@ unaligned
 15430 0d54 2061     		str	r0, [r4, #16]	@ unaligned
 15431 0d56 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 15432 0d58 AA79     		ldrb	r2, [r5, #6]
 15433 0d5a A382     		strh	r3, [r4, #20]	@ unaligned
 15434 0d5c 1346     		mov	r3, r2
 15435 0d5e A375     		strb	r3, [r4, #22]
2037:..\src/command_processing.c ****                     break;
 15436              		.loc 1 2037 0
 15437 0d60 51E0     		b	.L583
 15438              	.L590:
2038:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS_ADV:
2039:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 15439              		.loc 1 2039 0
 15440 0d62 7869     		ldr	r0, [r7, #20]
 15441 0d64 FFF7FEFF 		bl	strlen
 15442 0d68 0346     		mov	r3, r0
 15443 0d6a 1A46     		mov	r2, r3
 15444 0d6c 7B69     		ldr	r3, [r7, #20]
 15445 0d6e 1344     		add	r3, r3, r2
 15446 0d70 C44A     		ldr	r2, .L654+4
 15447 0d72 1D46     		mov	r5, r3
 15448 0d74 1446     		mov	r4, r2
 15449 0d76 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15450 0d78 2860     		str	r0, [r5]	@ unaligned
 15451 0d7a 6960     		str	r1, [r5, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 346


 15452 0d7c AA60     		str	r2, [r5, #8]	@ unaligned
 15453 0d7e EB60     		str	r3, [r5, #12]	@ unaligned
 15454 0d80 03CC     		ldmia	r4!, {r0, r1}
 15455 0d82 2861     		str	r0, [r5, #16]	@ unaligned
 15456 0d84 6961     		str	r1, [r5, #20]	@ unaligned
 15457 0d86 2388     		ldrh	r3, [r4]	@ unaligned
 15458 0d88 A278     		ldrb	r2, [r4, #2]
 15459 0d8a 2B83     		strh	r3, [r5, #24]	@ unaligned
 15460 0d8c 1346     		mov	r3, r2
 15461 0d8e AB76     		strb	r3, [r5, #26]
2040:..\src/command_processing.c ****                     break;
 15462              		.loc 1 2040 0
 15463 0d90 39E0     		b	.L583
 15464              	.L591:
2041:..\src/command_processing.c ****                 case INPUT_MODE_JOYSTICK:
2042:..\src/command_processing.c ****                     strcat(info_string, "Input mode: Joystick\r\n");
 15465              		.loc 1 2042 0
 15466 0d92 7869     		ldr	r0, [r7, #20]
 15467 0d94 FFF7FEFF 		bl	strlen
 15468 0d98 0346     		mov	r3, r0
 15469 0d9a 1A46     		mov	r2, r3
 15470 0d9c 7B69     		ldr	r3, [r7, #20]
 15471 0d9e 1344     		add	r3, r3, r2
 15472 0da0 B94A     		ldr	r2, .L654+8
 15473 0da2 1C46     		mov	r4, r3
 15474 0da4 1546     		mov	r5, r2
 15475 0da6 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15476 0da8 2060     		str	r0, [r4]	@ unaligned
 15477 0daa 6160     		str	r1, [r4, #4]	@ unaligned
 15478 0dac A260     		str	r2, [r4, #8]	@ unaligned
 15479 0dae E360     		str	r3, [r4, #12]	@ unaligned
 15480 0db0 2868     		ldr	r0, [r5]	@ unaligned
 15481 0db2 2061     		str	r0, [r4, #16]	@ unaligned
 15482 0db4 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 15483 0db6 AA79     		ldrb	r2, [r5, #6]
 15484 0db8 A382     		strh	r3, [r4, #20]	@ unaligned
 15485 0dba 1346     		mov	r3, r2
 15486 0dbc A375     		strb	r3, [r4, #22]
2043:..\src/command_processing.c ****                     break;
 15487              		.loc 1 2043 0
 15488 0dbe 22E0     		b	.L583
 15489              	.L592:
2044:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL_NC:
2045:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 15490              		.loc 1 2045 0
 15491 0dc0 7869     		ldr	r0, [r7, #20]
 15492 0dc2 FFF7FEFF 		bl	strlen
 15493 0dc6 0346     		mov	r3, r0
 15494 0dc8 1A46     		mov	r2, r3
 15495 0dca 7B69     		ldr	r3, [r7, #20]
 15496 0dcc 1344     		add	r3, r3, r2
 15497 0dce AF4A     		ldr	r2, .L654+12
 15498 0dd0 1546     		mov	r5, r2
 15499 0dd2 9E46     		mov	lr, r3
 15500 0dd4 05F1200C 		add	ip, r5, #32
 15501              	.L593:
 15502 0dd8 7446     		mov	r4, lr
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 347


 15503 0dda 2E46     		mov	r6, r5
 15504 0ddc 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15505 0dde 2060     		str	r0, [r4]	@ unaligned
 15506 0de0 6160     		str	r1, [r4, #4]	@ unaligned
 15507 0de2 A260     		str	r2, [r4, #8]	@ unaligned
 15508 0de4 E360     		str	r3, [r4, #12]	@ unaligned
 15509 0de6 1035     		adds	r5, r5, #16
 15510 0de8 0EF1100E 		add	lr, lr, #16
 15511 0dec 6545     		cmp	r5, ip
 15512 0dee F3D1     		bne	.L593
 15513 0df0 7446     		mov	r4, lr
 15514 0df2 2B46     		mov	r3, r5
 15515 0df4 07CB     		ldmia	r3!, {r0, r1, r2}
 15516 0df6 2060     		str	r0, [r4]	@ unaligned
 15517 0df8 6160     		str	r1, [r4, #4]	@ unaligned
 15518 0dfa A260     		str	r2, [r4, #8]	@ unaligned
 15519 0dfc 1A88     		ldrh	r2, [r3]	@ unaligned
 15520 0dfe 9B78     		ldrb	r3, [r3, #2]
 15521 0e00 A281     		strh	r2, [r4, #12]	@ unaligned
 15522 0e02 A373     		strb	r3, [r4, #14]
2046:..\src/command_processing.c ****                     break;
 15523              		.loc 1 2046 0
 15524 0e04 00BF     		nop
 15525              	.L583:
2047:..\src/command_processing.c ****             }
2048:..\src/command_processing.c **** 
2049:..\src/command_processing.c ****             switch(MOT->control_mode) {
 15526              		.loc 1 2049 0
 15527 0e06 D7F88430 		ldr	r3, [r7, #132]
 15528 0e0a 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 15529 0e0e 032B     		cmp	r3, #3
 15530 0e10 63D8     		bhi	.L645
 15531 0e12 01A2     		adr	r2, .L596
 15532 0e14 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 15533              		.p2align 2
 15534              	.L596:
 15535 0e18 290E0000 		.word	.L595+1
 15536 0e1c 530E0000 		.word	.L597+1
 15537 0e20 770E0000 		.word	.L598+1
 15538 0e24 9D0E0000 		.word	.L599+1
 15539              		.p2align 1
 15540              	.L595:
2050:..\src/command_processing.c ****                 case CONTROL_ANGLE:
2051:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position\r\n");
 15541              		.loc 1 2051 0
 15542 0e28 7869     		ldr	r0, [r7, #20]
 15543 0e2a FFF7FEFF 		bl	strlen
 15544 0e2e 0346     		mov	r3, r0
 15545 0e30 1A46     		mov	r2, r3
 15546 0e32 7B69     		ldr	r3, [r7, #20]
 15547 0e34 1344     		add	r3, r3, r2
 15548 0e36 964A     		ldr	r2, .L654+16
 15549 0e38 1D46     		mov	r5, r3
 15550 0e3a 1446     		mov	r4, r2
 15551 0e3c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15552 0e3e 2860     		str	r0, [r5]	@ unaligned
 15553 0e40 6960     		str	r1, [r5, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 348


 15554 0e42 AA60     		str	r2, [r5, #8]	@ unaligned
 15555 0e44 EB60     		str	r3, [r5, #12]	@ unaligned
 15556 0e46 03CC     		ldmia	r4!, {r0, r1}
 15557 0e48 2861     		str	r0, [r5, #16]	@ unaligned
 15558 0e4a 6961     		str	r1, [r5, #20]	@ unaligned
 15559 0e4c 2378     		ldrb	r3, [r4]
 15560 0e4e 2B76     		strb	r3, [r5, #24]
2052:..\src/command_processing.c ****                     break;
 15561              		.loc 1 2052 0
 15562 0e50 44E0     		b	.L600
 15563              	.L597:
2053:..\src/command_processing.c ****                 case CONTROL_PWM:
2054:..\src/command_processing.c ****                     strcat(info_string, "Control mode: PWM\r\n");
 15564              		.loc 1 2054 0
 15565 0e52 7869     		ldr	r0, [r7, #20]
 15566 0e54 FFF7FEFF 		bl	strlen
 15567 0e58 0346     		mov	r3, r0
 15568 0e5a 1A46     		mov	r2, r3
 15569 0e5c 7B69     		ldr	r3, [r7, #20]
 15570 0e5e 1344     		add	r3, r3, r2
 15571 0e60 8C4A     		ldr	r2, .L654+20
 15572 0e62 1D46     		mov	r5, r3
 15573 0e64 1446     		mov	r4, r2
 15574 0e66 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15575 0e68 2860     		str	r0, [r5]	@ unaligned
 15576 0e6a 6960     		str	r1, [r5, #4]	@ unaligned
 15577 0e6c AA60     		str	r2, [r5, #8]	@ unaligned
 15578 0e6e EB60     		str	r3, [r5, #12]	@ unaligned
 15579 0e70 2068     		ldr	r0, [r4]	@ unaligned
 15580 0e72 2861     		str	r0, [r5, #16]	@ unaligned
2055:..\src/command_processing.c ****                     break;
 15581              		.loc 1 2055 0
 15582 0e74 32E0     		b	.L600
 15583              	.L598:
2056:..\src/command_processing.c ****                 case CONTROL_CURRENT:
2057:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Current\r\n");
 15584              		.loc 1 2057 0
 15585 0e76 7869     		ldr	r0, [r7, #20]
 15586 0e78 FFF7FEFF 		bl	strlen
 15587 0e7c 0346     		mov	r3, r0
 15588 0e7e 1A46     		mov	r2, r3
 15589 0e80 7B69     		ldr	r3, [r7, #20]
 15590 0e82 1344     		add	r3, r3, r2
 15591 0e84 844A     		ldr	r2, .L654+24
 15592 0e86 1D46     		mov	r5, r3
 15593 0e88 1446     		mov	r4, r2
 15594 0e8a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15595 0e8c 2860     		str	r0, [r5]	@ unaligned
 15596 0e8e 6960     		str	r1, [r5, #4]	@ unaligned
 15597 0e90 AA60     		str	r2, [r5, #8]	@ unaligned
 15598 0e92 EB60     		str	r3, [r5, #12]	@ unaligned
 15599 0e94 03CC     		ldmia	r4!, {r0, r1}
 15600 0e96 2861     		str	r0, [r5, #16]	@ unaligned
 15601 0e98 6961     		str	r1, [r5, #20]	@ unaligned
2058:..\src/command_processing.c ****                     break;
 15602              		.loc 1 2058 0
 15603 0e9a 1FE0     		b	.L600
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 349


 15604              	.L599:
2059:..\src/command_processing.c ****                 case CURR_AND_POS_CONTROL:
2060:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position and Current\r\n");
 15605              		.loc 1 2060 0
 15606 0e9c 7869     		ldr	r0, [r7, #20]
 15607 0e9e FFF7FEFF 		bl	strlen
 15608 0ea2 0346     		mov	r3, r0
 15609 0ea4 1A46     		mov	r2, r3
 15610 0ea6 7B69     		ldr	r3, [r7, #20]
 15611 0ea8 1344     		add	r3, r3, r2
 15612 0eaa 7C4A     		ldr	r2, .L654+28
 15613 0eac 1446     		mov	r4, r2
 15614 0eae 9E46     		mov	lr, r3
 15615 0eb0 04F1200C 		add	ip, r4, #32
 15616              	.L601:
 15617 0eb4 7546     		mov	r5, lr
 15618 0eb6 2646     		mov	r6, r4
 15619 0eb8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15620 0eba 2860     		str	r0, [r5]	@ unaligned
 15621 0ebc 6960     		str	r1, [r5, #4]	@ unaligned
 15622 0ebe AA60     		str	r2, [r5, #8]	@ unaligned
 15623 0ec0 EB60     		str	r3, [r5, #12]	@ unaligned
 15624 0ec2 1034     		adds	r4, r4, #16
 15625 0ec4 0EF1100E 		add	lr, lr, #16
 15626 0ec8 6445     		cmp	r4, ip
 15627 0eca F3D1     		bne	.L601
 15628 0ecc 7346     		mov	r3, lr
 15629 0ece 2246     		mov	r2, r4
 15630 0ed0 1068     		ldr	r0, [r2]	@ unaligned
 15631 0ed2 1860     		str	r0, [r3]	@ unaligned
 15632 0ed4 1279     		ldrb	r2, [r2, #4]
 15633 0ed6 1A71     		strb	r2, [r3, #4]
2061:..\src/command_processing.c ****                     break;
 15634              		.loc 1 2061 0
 15635 0ed8 00E0     		b	.L600
 15636              	.L645:
2062:..\src/command_processing.c ****                 default:
2063:..\src/command_processing.c ****                     break;
 15637              		.loc 1 2063 0
 15638 0eda 00BF     		nop
 15639              	.L600:
2064:..\src/command_processing.c ****             }
2065:..\src/command_processing.c **** 
2066:..\src/command_processing.c ****             if (MEM_P->enc[ENC_L].double_encoder_on_off)
 15640              		.loc 1 2066 0
 15641 0edc 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 15642 0ee0 D7F88C10 		ldr	r1, [r7, #140]
 15643 0ee4 1346     		mov	r3, r2
 15644 0ee6 5B00     		lsls	r3, r3, #1
 15645 0ee8 1344     		add	r3, r3, r2
 15646 0eea 1B01     		lsls	r3, r3, #4
 15647 0eec 0B44     		add	r3, r3, r1
 15648 0eee 03F5D873 		add	r3, r3, #432
 15649 0ef2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15650 0ef4 002B     		cmp	r3, #0
 15651 0ef6 1CD0     		beq	.L602
2067:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: YES\r\n");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 350


 15652              		.loc 1 2067 0
 15653 0ef8 7869     		ldr	r0, [r7, #20]
 15654 0efa FFF7FEFF 		bl	strlen
 15655 0efe 0346     		mov	r3, r0
 15656 0f00 1A46     		mov	r2, r3
 15657 0f02 7B69     		ldr	r3, [r7, #20]
 15658 0f04 1344     		add	r3, r3, r2
 15659 0f06 664A     		ldr	r2, .L654+32
 15660 0f08 1446     		mov	r4, r2
 15661 0f0a 9E46     		mov	lr, r3
 15662 0f0c 04F1200C 		add	ip, r4, #32
 15663              	.L603:
 15664 0f10 7546     		mov	r5, lr
 15665 0f12 2646     		mov	r6, r4
 15666 0f14 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15667 0f16 2860     		str	r0, [r5]	@ unaligned
 15668 0f18 6960     		str	r1, [r5, #4]	@ unaligned
 15669 0f1a AA60     		str	r2, [r5, #8]	@ unaligned
 15670 0f1c EB60     		str	r3, [r5, #12]	@ unaligned
 15671 0f1e 1034     		adds	r4, r4, #16
 15672 0f20 0EF1100E 		add	lr, lr, #16
 15673 0f24 6445     		cmp	r4, ip
 15674 0f26 F3D1     		bne	.L603
 15675 0f28 7346     		mov	r3, lr
 15676 0f2a 2246     		mov	r2, r4
 15677 0f2c 1278     		ldrb	r2, [r2]
 15678 0f2e 1A70     		strb	r2, [r3]
 15679 0f30 13E0     		b	.L604
 15680              	.L602:
2068:..\src/command_processing.c ****             else
2069:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: NO\r\n");
 15681              		.loc 1 2069 0
 15682 0f32 7869     		ldr	r0, [r7, #20]
 15683 0f34 FFF7FEFF 		bl	strlen
 15684 0f38 0346     		mov	r3, r0
 15685 0f3a 1A46     		mov	r2, r3
 15686 0f3c 7B69     		ldr	r3, [r7, #20]
 15687 0f3e 1344     		add	r3, r3, r2
 15688 0f40 584A     		ldr	r2, .L654+36
 15689 0f42 1C46     		mov	r4, r3
 15690 0f44 1546     		mov	r5, r2
 15691 0f46 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15692 0f48 2060     		str	r0, [r4]	@ unaligned
 15693 0f4a 6160     		str	r1, [r4, #4]	@ unaligned
 15694 0f4c A260     		str	r2, [r4, #8]	@ unaligned
 15695 0f4e E360     		str	r3, [r4, #12]	@ unaligned
 15696 0f50 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15697 0f52 2061     		str	r0, [r4, #16]	@ unaligned
 15698 0f54 6161     		str	r1, [r4, #20]	@ unaligned
 15699 0f56 A261     		str	r2, [r4, #24]	@ unaligned
 15700 0f58 E361     		str	r3, [r4, #28]	@ unaligned
 15701              	.L604:
2070:..\src/command_processing.c **** 
2071:..\src/command_processing.c ****             sprintf(str, "Motor-Handle Ratio: %d\r\n", (int)MEM_P->enc[ENC_L].motor_handle_ratio);
 15702              		.loc 1 2071 0
 15703 0f5a 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 15704 0f5e D7F88C10 		ldr	r1, [r7, #140]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 351


 15705 0f62 1346     		mov	r3, r2
 15706 0f64 5B00     		lsls	r3, r3, #1
 15707 0f66 1344     		add	r3, r3, r2
 15708 0f68 1B01     		lsls	r3, r3, #4
 15709 0f6a 0B44     		add	r3, r3, r1
 15710 0f6c 03F5DA73 		add	r3, r3, #436
 15711 0f70 93F90030 		ldrsb	r3, [r3]
 15712 0f74 1A46     		mov	r2, r3
 15713 0f76 07F11C03 		add	r3, r7, #28
 15714 0f7a 4B49     		ldr	r1, .L654+40
 15715 0f7c 1846     		mov	r0, r3
 15716 0f7e FFF7FEFF 		bl	sprintf
2072:..\src/command_processing.c ****             strcat(info_string, str);
 15717              		.loc 1 2072 0
 15718 0f82 07F11C03 		add	r3, r7, #28
 15719 0f86 1946     		mov	r1, r3
 15720 0f88 7869     		ldr	r0, [r7, #20]
 15721 0f8a FFF7FEFF 		bl	strcat
2073:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
2074:..\src/command_processing.c ****             strcat(info_string, "Encoder indices used for motor control: ");
2075:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
2076:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
2077:..\src/command_processing.c ****                 strcat(info_string, str);
2078:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
2079:..\src/command_processing.c ****                     strcat(info_string, ", ");
2080:..\src/command_processing.c ****                 }                
2081:..\src/command_processing.c ****             }
2082:..\src/command_processing.c ****             strcat(info_string, "\r\n");
2083:..\src/command_processing.c ****             sprintf(str, "First Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[0]);
2084:..\src/command_processing.c ****             strcat(info_string, str);
2085:..\src/command_processing.c ****             sprintf(str, "Second Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[1]);
2086:..\src/command_processing.c ****             strcat(info_string, str);
2087:..\src/command_processing.c ****             sprintf(str, "Gear invariant: %d\r\n", (int)MEM_P->enc[ENC_L].gears_params[2]);
2088:..\src/command_processing.c ****             strcat(info_string, str);
2089:..\src/command_processing.c **** #endif            
2090:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15722              		.loc 1 2090 0
 15723 0f8e 7869     		ldr	r0, [r7, #20]
 15724 0f90 FFF7FEFF 		bl	strlen
 15725 0f94 0346     		mov	r3, r0
 15726 0f96 1A46     		mov	r2, r3
 15727 0f98 7B69     		ldr	r3, [r7, #20]
 15728 0f9a 1344     		add	r3, r3, r2
 15729 0f9c 434A     		ldr	r2, .L654+44
 15730 0f9e 1188     		ldrh	r1, [r2]	@ unaligned
 15731 0fa0 9278     		ldrb	r2, [r2, #2]
 15732 0fa2 1980     		strh	r1, [r3]	@ unaligned
 15733 0fa4 9A70     		strb	r2, [r3, #2]
2091:..\src/command_processing.c **** 
2092:..\src/command_processing.c ****             strcat(info_string, "Sensor resolution: ");
 15734              		.loc 1 2092 0
 15735 0fa6 7869     		ldr	r0, [r7, #20]
 15736 0fa8 FFF7FEFF 		bl	strlen
 15737 0fac 0346     		mov	r3, r0
 15738 0fae 1A46     		mov	r2, r3
 15739 0fb0 7B69     		ldr	r3, [r7, #20]
 15740 0fb2 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 352


 15741 0fb4 3E4A     		ldr	r2, .L654+48
 15742 0fb6 1D46     		mov	r5, r3
 15743 0fb8 1446     		mov	r4, r2
 15744 0fba 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15745 0fbc 2860     		str	r0, [r5]	@ unaligned
 15746 0fbe 6960     		str	r1, [r5, #4]	@ unaligned
 15747 0fc0 AA60     		str	r2, [r5, #8]	@ unaligned
 15748 0fc2 EB60     		str	r3, [r5, #12]	@ unaligned
 15749 0fc4 2068     		ldr	r0, [r4]	@ unaligned
 15750 0fc6 2861     		str	r0, [r5, #16]	@ unaligned
2093:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 15751              		.loc 1 2093 0
 15752 0fc8 0023     		movs	r3, #0
 15753 0fca C7F89430 		str	r3, [r7, #148]
 15754 0fce 30E0     		b	.L605
 15755              	.L607:
2094:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 15756              		.loc 1 2094 0
 15757 0fd0 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 15758 0fd4 D7F88C10 		ldr	r1, [r7, #140]
 15759 0fd8 1346     		mov	r3, r2
 15760 0fda 5B00     		lsls	r3, r3, #1
 15761 0fdc 1344     		add	r3, r3, r2
 15762 0fde 1B01     		lsls	r3, r3, #4
 15763 0fe0 CA18     		adds	r2, r1, r3
 15764 0fe2 D7F89430 		ldr	r3, [r7, #148]
 15765 0fe6 1344     		add	r3, r3, r2
 15766 0fe8 03F29513 		addw	r3, r3, #405
 15767 0fec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15768 0fee 1A46     		mov	r2, r3
 15769 0ff0 07F11C03 		add	r3, r7, #28
 15770 0ff4 2F49     		ldr	r1, .L654+52
 15771 0ff6 1846     		mov	r0, r3
 15772 0ff8 FFF7FEFF 		bl	sprintf
2095:..\src/command_processing.c ****                 strcat(info_string, str);
 15773              		.loc 1 2095 0
 15774 0ffc 07F11C03 		add	r3, r7, #28
 15775 1000 1946     		mov	r1, r3
 15776 1002 7869     		ldr	r0, [r7, #20]
 15777 1004 FFF7FEFF 		bl	strcat
2096:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 15778              		.loc 1 2096 0
 15779 1008 D7F89430 		ldr	r3, [r7, #148]
 15780 100c 022B     		cmp	r3, #2
 15781 100e 0BD0     		beq	.L606
2097:..\src/command_processing.c ****                     strcat(info_string, ", ");
 15782              		.loc 1 2097 0
 15783 1010 7869     		ldr	r0, [r7, #20]
 15784 1012 FFF7FEFF 		bl	strlen
 15785 1016 0346     		mov	r3, r0
 15786 1018 1A46     		mov	r2, r3
 15787 101a 7B69     		ldr	r3, [r7, #20]
 15788 101c 1344     		add	r3, r3, r2
 15789 101e 264A     		ldr	r2, .L654+56
 15790 1020 1188     		ldrh	r1, [r2]	@ unaligned
 15791 1022 9278     		ldrb	r2, [r2, #2]
 15792 1024 1980     		strh	r1, [r3]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 353


 15793 1026 9A70     		strb	r2, [r3, #2]
 15794              	.L606:
2093:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 15795              		.loc 1 2093 0 discriminator 2
 15796 1028 D7F89430 		ldr	r3, [r7, #148]
 15797 102c 0133     		adds	r3, r3, #1
 15798 102e C7F89430 		str	r3, [r7, #148]
 15799              	.L605:
2093:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 15800              		.loc 1 2093 0 is_stmt 0 discriminator 1
 15801 1032 D7F89430 		ldr	r3, [r7, #148]
 15802 1036 022B     		cmp	r3, #2
 15803 1038 CADD     		ble	.L607
2098:..\src/command_processing.c ****                 }                
2099:..\src/command_processing.c ****             }
2100:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15804              		.loc 1 2100 0 is_stmt 1
 15805 103a 7869     		ldr	r0, [r7, #20]
 15806 103c FFF7FEFF 		bl	strlen
 15807 1040 0346     		mov	r3, r0
 15808 1042 1A46     		mov	r2, r3
 15809 1044 7B69     		ldr	r3, [r7, #20]
 15810 1046 1344     		add	r3, r3, r2
 15811 1048 184A     		ldr	r2, .L654+44
 15812 104a 1188     		ldrh	r1, [r2]	@ unaligned
 15813 104c 9278     		ldrb	r2, [r2, #2]
 15814 104e 1980     		strh	r1, [r3]	@ unaligned
 15815 1050 9A70     		strb	r2, [r3, #2]
2101:..\src/command_processing.c **** 
2102:..\src/command_processing.c ****             strcat(info_string, "Measurement Offset: ");
 15816              		.loc 1 2102 0
 15817 1052 7869     		ldr	r0, [r7, #20]
 15818 1054 FFF7FEFF 		bl	strlen
 15819 1058 0346     		mov	r3, r0
 15820 105a 1A46     		mov	r2, r3
 15821 105c 7B69     		ldr	r3, [r7, #20]
 15822 105e 1344     		add	r3, r3, r2
 15823 1060 164A     		ldr	r2, .L654+60
 15824 1062 1D46     		mov	r5, r3
 15825 1064 1446     		mov	r4, r2
 15826 1066 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15827 1068 2860     		str	r0, [r5]	@ unaligned
 15828 106a 6960     		str	r1, [r5, #4]	@ unaligned
 15829 106c AA60     		str	r2, [r5, #8]	@ unaligned
 15830 106e EB60     		str	r3, [r5, #12]	@ unaligned
 15831 1070 2068     		ldr	r0, [r4]	@ unaligned
 15832 1072 2861     		str	r0, [r5, #16]	@ unaligned
 15833 1074 2379     		ldrb	r3, [r4, #4]
 15834 1076 2B75     		strb	r3, [r5, #20]
2103:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 15835              		.loc 1 2103 0
 15836 1078 0023     		movs	r3, #0
 15837 107a C7F89430 		str	r3, [r7, #148]
 15838 107e 5FE0     		b	.L608
 15839              	.L655:
 15840              		.align	2
 15841              	.L654:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 354


 15842 1080 C0140000 		.word	.LC197
 15843 1084 D8140000 		.word	.LC198
 15844 1088 F4140000 		.word	.LC199
 15845 108c 0C150000 		.word	.LC200
 15846 1090 3C150000 		.word	.LC201
 15847 1094 58150000 		.word	.LC202
 15848 1098 6C150000 		.word	.LC203
 15849 109c 84150000 		.word	.LC204
 15850 10a0 AC150000 		.word	.LC205
 15851 10a4 D0150000 		.word	.LC206
 15852 10a8 F0150000 		.word	.LC207
 15853 10ac A8100000 		.word	.LC147
 15854 10b0 0C160000 		.word	.LC208
 15855 10b4 00130000 		.word	.LC178
 15856 10b8 04130000 		.word	.LC179
 15857 10bc 20160000 		.word	.LC209
 15858              	.L610:
2104:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 15859              		.loc 1 2104 0
 15860 10c0 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 15861 10c4 D7F88C10 		ldr	r1, [r7, #140]
 15862 10c8 1346     		mov	r3, r2
 15863 10ca 5B00     		lsls	r3, r3, #1
 15864 10cc 1344     		add	r3, r3, r2
 15865 10ce 9B00     		lsls	r3, r3, #2
 15866 10d0 D7F89420 		ldr	r2, [r7, #148]
 15867 10d4 1344     		add	r3, r3, r2
 15868 10d6 6633     		adds	r3, r3, #102
 15869 10d8 51F82310 		ldr	r1, [r1, r3, lsl #2]
 15870 10dc 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 15871 10e0 D7F88C00 		ldr	r0, [r7, #140]
 15872 10e4 1346     		mov	r3, r2
 15873 10e6 5B00     		lsls	r3, r3, #1
 15874 10e8 1344     		add	r3, r3, r2
 15875 10ea 1B01     		lsls	r3, r3, #4
 15876 10ec C218     		adds	r2, r0, r3
 15877 10ee D7F89430 		ldr	r3, [r7, #148]
 15878 10f2 1344     		add	r3, r3, r2
 15879 10f4 03F29513 		addw	r3, r3, #405
 15880 10f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15881 10fa 41FA03F2 		asr	r2, r1, r3
 15882 10fe 07F11C03 		add	r3, r7, #28
 15883 1102 2349     		ldr	r1, .L656
 15884 1104 1846     		mov	r0, r3
 15885 1106 FFF7FEFF 		bl	sprintf
2105:..\src/command_processing.c ****                 strcat(info_string, str);
 15886              		.loc 1 2105 0
 15887 110a 07F11C03 		add	r3, r7, #28
 15888 110e 1946     		mov	r1, r3
 15889 1110 7869     		ldr	r0, [r7, #20]
 15890 1112 FFF7FEFF 		bl	strcat
2106:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 15891              		.loc 1 2106 0
 15892 1116 D7F89430 		ldr	r3, [r7, #148]
 15893 111a 022B     		cmp	r3, #2
 15894 111c 0BD0     		beq	.L609
2107:..\src/command_processing.c ****                     strcat(info_string, ", ");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 355


 15895              		.loc 1 2107 0
 15896 111e 7869     		ldr	r0, [r7, #20]
 15897 1120 FFF7FEFF 		bl	strlen
 15898 1124 0346     		mov	r3, r0
 15899 1126 1A46     		mov	r2, r3
 15900 1128 7B69     		ldr	r3, [r7, #20]
 15901 112a 1344     		add	r3, r3, r2
 15902 112c 194A     		ldr	r2, .L656+4
 15903 112e 1188     		ldrh	r1, [r2]	@ unaligned
 15904 1130 9278     		ldrb	r2, [r2, #2]
 15905 1132 1980     		strh	r1, [r3]	@ unaligned
 15906 1134 9A70     		strb	r2, [r3, #2]
 15907              	.L609:
2103:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 15908              		.loc 1 2103 0 discriminator 2
 15909 1136 D7F89430 		ldr	r3, [r7, #148]
 15910 113a 0133     		adds	r3, r3, #1
 15911 113c C7F89430 		str	r3, [r7, #148]
 15912              	.L608:
2103:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 15913              		.loc 1 2103 0 is_stmt 0 discriminator 1
 15914 1140 D7F89430 		ldr	r3, [r7, #148]
 15915 1144 022B     		cmp	r3, #2
 15916 1146 BBDD     		ble	.L610
2108:..\src/command_processing.c ****                 }
2109:..\src/command_processing.c ****             }
2110:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15917              		.loc 1 2110 0 is_stmt 1
 15918 1148 7869     		ldr	r0, [r7, #20]
 15919 114a FFF7FEFF 		bl	strlen
 15920 114e 0346     		mov	r3, r0
 15921 1150 1A46     		mov	r2, r3
 15922 1152 7B69     		ldr	r3, [r7, #20]
 15923 1154 1344     		add	r3, r3, r2
 15924 1156 104A     		ldr	r2, .L656+8
 15925 1158 1188     		ldrh	r1, [r2]	@ unaligned
 15926 115a 9278     		ldrb	r2, [r2, #2]
 15927 115c 1980     		strh	r1, [r3]	@ unaligned
 15928 115e 9A70     		strb	r2, [r3, #2]
2111:..\src/command_processing.c ****                 
2112:..\src/command_processing.c ****             strcat(info_string, "Measurement Multiplier: ");
 15929              		.loc 1 2112 0
 15930 1160 7869     		ldr	r0, [r7, #20]
 15931 1162 FFF7FEFF 		bl	strlen
 15932 1166 0346     		mov	r3, r0
 15933 1168 1A46     		mov	r2, r3
 15934 116a 7B69     		ldr	r3, [r7, #20]
 15935 116c 1344     		add	r3, r3, r2
 15936 116e 0B4A     		ldr	r2, .L656+12
 15937 1170 1D46     		mov	r5, r3
 15938 1172 1446     		mov	r4, r2
 15939 1174 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15940 1176 2860     		str	r0, [r5]	@ unaligned
 15941 1178 6960     		str	r1, [r5, #4]	@ unaligned
 15942 117a AA60     		str	r2, [r5, #8]	@ unaligned
 15943 117c EB60     		str	r3, [r5, #12]	@ unaligned
 15944 117e 03CC     		ldmia	r4!, {r0, r1}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 356


 15945 1180 2861     		str	r0, [r5, #16]	@ unaligned
 15946 1182 6961     		str	r1, [r5, #20]	@ unaligned
 15947 1184 2378     		ldrb	r3, [r4]
 15948 1186 2B76     		strb	r3, [r5, #24]
2113:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 15949              		.loc 1 2113 0
 15950 1188 0023     		movs	r3, #0
 15951 118a C7F89430 		str	r3, [r7, #148]
 15952 118e 3DE0     		b	.L611
 15953              	.L657:
 15954              		.align	2
 15955              	.L656:
 15956 1190 38160000 		.word	.LC210
 15957 1194 04130000 		.word	.LC179
 15958 1198 A8100000 		.word	.LC147
 15959 119c 3C160000 		.word	.LC211
 15960              	.L613:
2114:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 15961              		.loc 1 2114 0
 15962 11a0 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 15963 11a4 D7F88C10 		ldr	r1, [r7, #140]
 15964 11a8 1346     		mov	r3, r2
 15965 11aa 5B00     		lsls	r3, r3, #1
 15966 11ac 1344     		add	r3, r3, r2
 15967 11ae 9B00     		lsls	r3, r3, #2
 15968 11b0 D7F89420 		ldr	r2, [r7, #148]
 15969 11b4 1344     		add	r3, r3, r2
 15970 11b6 6833     		adds	r3, r3, #104
 15971 11b8 9B00     		lsls	r3, r3, #2
 15972 11ba 0B44     		add	r3, r3, r1
 15973 11bc 5B68     		ldr	r3, [r3, #4]	@ float
 15974 11be 1846     		mov	r0, r3
 15975 11c0 FFF7FEFF 		bl	__aeabi_f2d
 15976 11c4 0346     		mov	r3, r0
 15977 11c6 0C46     		mov	r4, r1
 15978 11c8 07F11C00 		add	r0, r7, #28
 15979 11cc 1A46     		mov	r2, r3
 15980 11ce 2346     		mov	r3, r4
 15981 11d0 BF49     		ldr	r1, .L658
 15982 11d2 FFF7FEFF 		bl	sprintf
2115:..\src/command_processing.c ****                 strcat(info_string, str);
 15983              		.loc 1 2115 0
 15984 11d6 07F11C03 		add	r3, r7, #28
 15985 11da 1946     		mov	r1, r3
 15986 11dc 7869     		ldr	r0, [r7, #20]
 15987 11de FFF7FEFF 		bl	strcat
2116:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 15988              		.loc 1 2116 0
 15989 11e2 D7F89430 		ldr	r3, [r7, #148]
 15990 11e6 022B     		cmp	r3, #2
 15991 11e8 0BD0     		beq	.L612
2117:..\src/command_processing.c ****                     strcat(info_string, ", ");
 15992              		.loc 1 2117 0
 15993 11ea 7869     		ldr	r0, [r7, #20]
 15994 11ec FFF7FEFF 		bl	strlen
 15995 11f0 0346     		mov	r3, r0
 15996 11f2 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 357


 15997 11f4 7B69     		ldr	r3, [r7, #20]
 15998 11f6 1344     		add	r3, r3, r2
 15999 11f8 B64A     		ldr	r2, .L658+4
 16000 11fa 1188     		ldrh	r1, [r2]	@ unaligned
 16001 11fc 9278     		ldrb	r2, [r2, #2]
 16002 11fe 1980     		strh	r1, [r3]	@ unaligned
 16003 1200 9A70     		strb	r2, [r3, #2]
 16004              	.L612:
2113:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16005              		.loc 1 2113 0 discriminator 2
 16006 1202 D7F89430 		ldr	r3, [r7, #148]
 16007 1206 0133     		adds	r3, r3, #1
 16008 1208 C7F89430 		str	r3, [r7, #148]
 16009              	.L611:
2113:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16010              		.loc 1 2113 0 is_stmt 0 discriminator 1
 16011 120c D7F89430 		ldr	r3, [r7, #148]
 16012 1210 022B     		cmp	r3, #2
 16013 1212 C5DD     		ble	.L613
2118:..\src/command_processing.c ****                 }
2119:..\src/command_processing.c ****             }
2120:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16014              		.loc 1 2120 0 is_stmt 1 discriminator 2
 16015 1214 7869     		ldr	r0, [r7, #20]
 16016 1216 FFF7FEFF 		bl	strlen
 16017 121a 0346     		mov	r3, r0
 16018 121c 1A46     		mov	r2, r3
 16019 121e 7B69     		ldr	r3, [r7, #20]
 16020 1220 1344     		add	r3, r3, r2
 16021 1222 AD4A     		ldr	r2, .L658+8
 16022 1224 1188     		ldrh	r1, [r2]	@ unaligned
 16023 1226 9278     		ldrb	r2, [r2, #2]
 16024 1228 1980     		strh	r1, [r3]	@ unaligned
 16025 122a 9A70     		strb	r2, [r3, #2]
2121:..\src/command_processing.c ****             
2122:..\src/command_processing.c ****     		sprintf(str, "Current lookup table: %f, %f, %f, %f, %f, %f\r\n", 
2123:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16026              		.loc 1 2123 0 discriminator 2
 16027 122c D7F88430 		ldr	r3, [r7, #132]
 16028 1230 5B6C     		ldr	r3, [r3, #68]	@ float
2122:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16029              		.loc 1 2122 0 discriminator 2
 16030 1232 1846     		mov	r0, r3
 16031 1234 FFF7FEFF 		bl	__aeabi_f2d
 16032 1238 C7E90201 		strd	r0, [r7, #8]
 16033              		.loc 1 2123 0 discriminator 2
 16034 123c D7F88430 		ldr	r3, [r7, #132]
 16035 1240 9B6C     		ldr	r3, [r3, #72]	@ float
2122:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16036              		.loc 1 2122 0 discriminator 2
 16037 1242 1846     		mov	r0, r3
 16038 1244 FFF7FEFF 		bl	__aeabi_f2d
 16039 1248 0446     		mov	r4, r0
 16040 124a 0D46     		mov	r5, r1
 16041              		.loc 1 2123 0 discriminator 2
 16042 124c D7F88430 		ldr	r3, [r7, #132]
 16043 1250 DB6C     		ldr	r3, [r3, #76]	@ float
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 358


2122:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16044              		.loc 1 2122 0 discriminator 2
 16045 1252 1846     		mov	r0, r3
 16046 1254 FFF7FEFF 		bl	__aeabi_f2d
 16047 1258 8046     		mov	r8, r0
 16048 125a 8946     		mov	r9, r1
2124:..\src/command_processing.c ****                 MOT->curr_lookup[3], MOT->curr_lookup[4], MOT->curr_lookup[5]);
 16049              		.loc 1 2124 0 discriminator 2
 16050 125c D7F88430 		ldr	r3, [r7, #132]
 16051 1260 1B6D     		ldr	r3, [r3, #80]	@ float
2122:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16052              		.loc 1 2122 0 discriminator 2
 16053 1262 1846     		mov	r0, r3
 16054 1264 FFF7FEFF 		bl	__aeabi_f2d
 16055 1268 8246     		mov	r10, r0
 16056 126a 8B46     		mov	fp, r1
 16057              		.loc 1 2124 0 discriminator 2
 16058 126c D7F88430 		ldr	r3, [r7, #132]
 16059 1270 5B6D     		ldr	r3, [r3, #84]	@ float
2122:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16060              		.loc 1 2122 0 discriminator 2
 16061 1272 1846     		mov	r0, r3
 16062 1274 FFF7FEFF 		bl	__aeabi_f2d
 16063 1278 C7E90001 		strd	r0, [r7]
 16064              		.loc 1 2124 0 discriminator 2
 16065 127c D7F88430 		ldr	r3, [r7, #132]
 16066 1280 9B6D     		ldr	r3, [r3, #88]	@ float
2122:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16067              		.loc 1 2122 0 discriminator 2
 16068 1282 1846     		mov	r0, r3
 16069 1284 FFF7FEFF 		bl	__aeabi_f2d
 16070 1288 0246     		mov	r2, r0
 16071 128a 0B46     		mov	r3, r1
 16072 128c 07F11C00 		add	r0, r7, #28
 16073 1290 CDE90823 		strd	r2, [sp, #32]
 16074 1294 D7E90012 		ldrd	r1, [r7]
 16075 1298 CDE90612 		strd	r1, [sp, #24]
 16076 129c CDE904AB 		strd	r10, [sp, #16]
 16077 12a0 CDE90289 		strd	r8, [sp, #8]
 16078 12a4 CDE90045 		strd	r4, [sp]
 16079 12a8 D7E90223 		ldrd	r2, [r7, #8]
 16080 12ac 8B49     		ldr	r1, .L658+12
 16081 12ae FFF7FEFF 		bl	sprintf
2125:..\src/command_processing.c **** 		    strcat(info_string, str);       
 16082              		.loc 1 2125 0 discriminator 2
 16083 12b2 07F11C03 		add	r3, r7, #28
 16084 12b6 1946     		mov	r1, r3
 16085 12b8 7869     		ldr	r0, [r7, #20]
 16086 12ba FFF7FEFF 		bl	strcat
2126:..\src/command_processing.c **** 
2127:..\src/command_processing.c ****             sprintf(str, "Position limit active: %d", (int)MOT->pos_lim_flag);
 16087              		.loc 1 2127 0 discriminator 2
 16088 12be D7F88430 		ldr	r3, [r7, #132]
 16089 12c2 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 16090 12c6 1A46     		mov	r2, r3
 16091 12c8 07F11C03 		add	r3, r7, #28
 16092 12cc 8449     		ldr	r1, .L658+16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 359


 16093 12ce 1846     		mov	r0, r3
 16094 12d0 FFF7FEFF 		bl	sprintf
2128:..\src/command_processing.c ****             strcat(info_string, str);
 16095              		.loc 1 2128 0 discriminator 2
 16096 12d4 07F11C03 		add	r3, r7, #28
 16097 12d8 1946     		mov	r1, r3
 16098 12da 7869     		ldr	r0, [r7, #20]
 16099 12dc FFF7FEFF 		bl	strcat
2129:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16100              		.loc 1 2129 0 discriminator 2
 16101 12e0 7869     		ldr	r0, [r7, #20]
 16102 12e2 FFF7FEFF 		bl	strlen
 16103 12e6 0346     		mov	r3, r0
 16104 12e8 1A46     		mov	r2, r3
 16105 12ea 7B69     		ldr	r3, [r7, #20]
 16106 12ec 1344     		add	r3, r3, r2
 16107 12ee 7A4A     		ldr	r2, .L658+8
 16108 12f0 1188     		ldrh	r1, [r2]	@ unaligned
 16109 12f2 9278     		ldrb	r2, [r2, #2]
 16110 12f4 1980     		strh	r1, [r3]	@ unaligned
 16111 12f6 9A70     		strb	r2, [r3, #2]
2130:..\src/command_processing.c **** 
2131:..\src/command_processing.c ****             sprintf(str, "Position limit motor: inf -> %ld  ", (int32)MOT->pos_lim_inf >> MEM_P->en
 16112              		.loc 1 2131 0 discriminator 2
 16113 12f8 D7F88430 		ldr	r3, [r7, #132]
 16114 12fc 596B     		ldr	r1, [r3, #52]
 16115 12fe 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16116 1302 D7F88C00 		ldr	r0, [r7, #140]
 16117 1306 1346     		mov	r3, r2
 16118 1308 5B00     		lsls	r3, r3, #1
 16119 130a 1344     		add	r3, r3, r2
 16120 130c 1B01     		lsls	r3, r3, #4
 16121 130e 0344     		add	r3, r3, r0
 16122 1310 03F29513 		addw	r3, r3, #405
 16123 1314 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16124 1316 41FA03F2 		asr	r2, r1, r3
 16125 131a 07F11C03 		add	r3, r7, #28
 16126 131e 7149     		ldr	r1, .L658+20
 16127 1320 1846     		mov	r0, r3
 16128 1322 FFF7FEFF 		bl	sprintf
2132:..\src/command_processing.c ****             strcat(info_string, str);
 16129              		.loc 1 2132 0 discriminator 2
 16130 1326 07F11C03 		add	r3, r7, #28
 16131 132a 1946     		mov	r1, r3
 16132 132c 7869     		ldr	r0, [r7, #20]
 16133 132e FFF7FEFF 		bl	strcat
2133:..\src/command_processing.c ****             sprintf(str, "sup -> %ld\r\n", (int32)MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]);
 16134              		.loc 1 2133 0 discriminator 2
 16135 1332 D7F88430 		ldr	r3, [r7, #132]
 16136 1336 996B     		ldr	r1, [r3, #56]
 16137 1338 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16138 133c D7F88C00 		ldr	r0, [r7, #140]
 16139 1340 1346     		mov	r3, r2
 16140 1342 5B00     		lsls	r3, r3, #1
 16141 1344 1344     		add	r3, r3, r2
 16142 1346 1B01     		lsls	r3, r3, #4
 16143 1348 0344     		add	r3, r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 360


 16144 134a 03F29513 		addw	r3, r3, #405
 16145 134e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16146 1350 41FA03F2 		asr	r2, r1, r3
 16147 1354 07F11C03 		add	r3, r7, #28
 16148 1358 6349     		ldr	r1, .L658+24
 16149 135a 1846     		mov	r0, r3
 16150 135c FFF7FEFF 		bl	sprintf
2134:..\src/command_processing.c ****             strcat(info_string, str);
 16151              		.loc 1 2134 0 discriminator 2
 16152 1360 07F11C03 		add	r3, r7, #28
 16153 1364 1946     		mov	r1, r3
 16154 1366 7869     		ldr	r0, [r7, #20]
 16155 1368 FFF7FEFF 		bl	strcat
2135:..\src/command_processing.c **** 
2136:..\src/command_processing.c ****             sprintf(str, "Max step pos and neg: %d %d", (int)MOT->max_step_pos, (int)MOT->max_step_
 16156              		.loc 1 2136 0 discriminator 2
 16157 136c D7F88430 		ldr	r3, [r7, #132]
 16158 1370 1A6C     		ldr	r2, [r3, #64]
 16159 1372 D7F88430 		ldr	r3, [r7, #132]
 16160 1376 DB6B     		ldr	r3, [r3, #60]
 16161 1378 07F11C00 		add	r0, r7, #28
 16162 137c 5B49     		ldr	r1, .L658+28
 16163 137e FFF7FEFF 		bl	sprintf
2137:..\src/command_processing.c ****             strcat(info_string, str);
 16164              		.loc 1 2137 0 discriminator 2
 16165 1382 07F11C03 		add	r3, r7, #28
 16166 1386 1946     		mov	r1, r3
 16167 1388 7869     		ldr	r0, [r7, #20]
 16168 138a FFF7FEFF 		bl	strcat
2138:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16169              		.loc 1 2138 0 discriminator 2
 16170 138e 7869     		ldr	r0, [r7, #20]
 16171 1390 FFF7FEFF 		bl	strlen
 16172 1394 0346     		mov	r3, r0
 16173 1396 1A46     		mov	r2, r3
 16174 1398 7B69     		ldr	r3, [r7, #20]
 16175 139a 1344     		add	r3, r3, r2
 16176 139c 4E4A     		ldr	r2, .L658+8
 16177 139e 1188     		ldrh	r1, [r2]	@ unaligned
 16178 13a0 9278     		ldrb	r2, [r2, #2]
 16179 13a2 1980     		strh	r1, [r3]	@ unaligned
 16180 13a4 9A70     		strb	r2, [r3, #2]
2139:..\src/command_processing.c **** 
2140:..\src/command_processing.c ****             sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 16181              		.loc 1 2140 0 discriminator 2
 16182 13a6 D7F88430 		ldr	r3, [r7, #132]
 16183 13aa B3F95C30 		ldrsh	r3, [r3, #92]
 16184 13ae 1A46     		mov	r2, r3
 16185 13b0 07F11C03 		add	r3, r7, #28
 16186 13b4 4E49     		ldr	r1, .L658+32
 16187 13b6 1846     		mov	r0, r3
 16188 13b8 FFF7FEFF 		bl	sprintf
2141:..\src/command_processing.c ****             strcat(info_string, str);
 16189              		.loc 1 2141 0 discriminator 2
 16190 13bc 07F11C03 		add	r3, r7, #28
 16191 13c0 1946     		mov	r1, r3
 16192 13c2 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 361


 16193 13c4 FFF7FEFF 		bl	strcat
2142:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
2143:..\src/command_processing.c ****             sprintf(str, "Motor board associated encoder line: %d\r\n", (int)MOT->encoder_line);
2144:..\src/command_processing.c ****             strcat(info_string, str);
2145:..\src/command_processing.c ****             switch(MOT->motor_driver_type) {
2146:..\src/command_processing.c ****                 case DRIVER_MC33887:
2147:..\src/command_processing.c ****                     strcat(info_string, "Driver type: MC33887 (Standard)\r\n");
2148:..\src/command_processing.c ****                     break;
2149:..\src/command_processing.c ****                 case DRIVER_VNH5019:
2150:..\src/command_processing.c ****                     strcat(info_string, "Driver type: VNH5019 (High power)\r\n");
2151:..\src/command_processing.c ****                     break;
2152:..\src/command_processing.c ****                 default:
2153:..\src/command_processing.c ****                     break;
2154:..\src/command_processing.c ****             }
2155:..\src/command_processing.c ****             sprintf(str, "PWM rate limiter value: %d\r\n", (int)MOT->pwm_rate_limiter);
2156:..\src/command_processing.c ****             strcat(info_string, str);
2157:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag)
2158:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: YES\r\n");
2159:..\src/command_processing.c ****             else
2160:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: NO\r\n");
2161:..\src/command_processing.c **** #endif                
2162:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16194              		.loc 1 2162 0 discriminator 2
 16195 13c8 7869     		ldr	r0, [r7, #20]
 16196 13ca FFF7FEFF 		bl	strlen
 16197 13ce 0346     		mov	r3, r0
 16198 13d0 1A46     		mov	r2, r3
 16199 13d2 7B69     		ldr	r3, [r7, #20]
 16200 13d4 1344     		add	r3, r3, r2
 16201 13d6 404A     		ldr	r2, .L658+8
 16202 13d8 1188     		ldrh	r1, [r2]	@ unaligned
 16203 13da 9278     		ldrb	r2, [r2, #2]
 16204 13dc 1980     		strh	r1, [r3]	@ unaligned
 16205 13de 9A70     		strb	r2, [r3, #2]
 16206              	.LBE18:
1892:..\src/command_processing.c ****             
 16207              		.loc 1 1892 0 discriminator 2
 16208 13e0 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 16209 13e4 0133     		adds	r3, r3, #1
 16210 13e6 87F89330 		strb	r3, [r7, #147]
 16211              	.L561:
1892:..\src/command_processing.c ****             
 16212              		.loc 1 1892 0 is_stmt 0 discriminator 1
 16213 13ea D7F88C30 		ldr	r3, [r7, #140]
 16214 13ee 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 16215 13f2 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 16216 13f6 9A42     		cmp	r2, r3
 16217 13f8 7EF6AAAF 		bls	.L614
 16218              	.LBE17:
2163:..\src/command_processing.c ****         }
2164:..\src/command_processing.c ****       
2165:..\src/command_processing.c ****         strcat(info_string, "EMG CONFIGURATION\r\n");
 16219              		.loc 1 2165 0 is_stmt 1
 16220 13fc 7869     		ldr	r0, [r7, #20]
 16221 13fe FFF7FEFF 		bl	strlen
 16222 1402 0346     		mov	r3, r0
 16223 1404 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 362


 16224 1406 7B69     		ldr	r3, [r7, #20]
 16225 1408 1344     		add	r3, r3, r2
 16226 140a 3A4A     		ldr	r2, .L658+36
 16227 140c 1D46     		mov	r5, r3
 16228 140e 1446     		mov	r4, r2
 16229 1410 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16230 1412 2860     		str	r0, [r5]	@ unaligned
 16231 1414 6960     		str	r1, [r5, #4]	@ unaligned
 16232 1416 AA60     		str	r2, [r5, #8]	@ unaligned
 16233 1418 EB60     		str	r3, [r5, #12]	@ unaligned
 16234 141a 2068     		ldr	r0, [r4]	@ unaligned
 16235 141c 2861     		str	r0, [r5, #16]	@ unaligned
2166:..\src/command_processing.c ****         sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.e
 16236              		.loc 1 2166 0
 16237 141e D7F88C30 		ldr	r3, [r7, #140]
 16238 1422 B3F8F031 		ldrh	r3, [r3, #496]
 16239 1426 1A46     		mov	r2, r3
 16240 1428 D7F88C30 		ldr	r3, [r7, #140]
 16241 142c B3F8F231 		ldrh	r3, [r3, #498]
 16242 1430 07F11C00 		add	r0, r7, #28
 16243 1434 3049     		ldr	r1, .L658+40
 16244 1436 FFF7FEFF 		bl	sprintf
2167:..\src/command_processing.c ****         strcat(info_string, str);
 16245              		.loc 1 2167 0
 16246 143a 07F11C03 		add	r3, r7, #28
 16247 143e 1946     		mov	r1, r3
 16248 1440 7869     		ldr	r0, [r7, #20]
 16249 1442 FFF7FEFF 		bl	strcat
2168:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16250              		.loc 1 2168 0
 16251 1446 7869     		ldr	r0, [r7, #20]
 16252 1448 FFF7FEFF 		bl	strlen
 16253 144c 0346     		mov	r3, r0
 16254 144e 1A46     		mov	r2, r3
 16255 1450 7B69     		ldr	r3, [r7, #20]
 16256 1452 1344     		add	r3, r3, r2
 16257 1454 204A     		ldr	r2, .L658+8
 16258 1456 1188     		ldrh	r1, [r2]	@ unaligned
 16259 1458 9278     		ldrb	r2, [r2, #2]
 16260 145a 1980     		strh	r1, [r3]	@ unaligned
 16261 145c 9A70     		strb	r2, [r3, #2]
2169:..\src/command_processing.c **** 
2170:..\src/command_processing.c ****         sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg
 16262              		.loc 1 2170 0
 16263 145e D7F88C30 		ldr	r3, [r7, #140]
 16264 1462 D3F8F421 		ldr	r2, [r3, #500]
 16265 1466 D7F88C30 		ldr	r3, [r7, #140]
 16266 146a D3F8F831 		ldr	r3, [r3, #504]
 16267 146e 07F11C00 		add	r0, r7, #28
 16268 1472 2249     		ldr	r1, .L658+44
 16269 1474 FFF7FEFF 		bl	sprintf
2171:..\src/command_processing.c ****         strcat(info_string, str);
 16270              		.loc 1 2171 0
 16271 1478 07F11C03 		add	r3, r7, #28
 16272 147c 1946     		mov	r1, r3
 16273 147e 7869     		ldr	r0, [r7, #20]
 16274 1480 FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 363


2172:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16275              		.loc 1 2172 0
 16276 1484 7869     		ldr	r0, [r7, #20]
 16277 1486 FFF7FEFF 		bl	strlen
 16278 148a 0346     		mov	r3, r0
 16279 148c 1A46     		mov	r2, r3
 16280 148e 7B69     		ldr	r3, [r7, #20]
 16281 1490 1344     		add	r3, r3, r2
 16282 1492 114A     		ldr	r2, .L658+8
 16283 1494 1188     		ldrh	r1, [r2]	@ unaligned
 16284 1496 9278     		ldrb	r2, [r2, #2]
 16285 1498 1980     		strh	r1, [r3]	@ unaligned
 16286 149a 9A70     		strb	r2, [r3, #2]
2173:..\src/command_processing.c **** 
2174:..\src/command_processing.c ****         if (MEM_P->emg.switch_emg)
 16287              		.loc 1 2174 0
 16288 149c D7F88C30 		ldr	r3, [r7, #140]
 16289 14a0 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 16290 14a4 002B     		cmp	r3, #0
 16291 14a6 2DD0     		beq	.L615
2175:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: YES\r\n");
 16292              		.loc 1 2175 0
 16293 14a8 7869     		ldr	r0, [r7, #20]
 16294 14aa FFF7FEFF 		bl	strlen
 16295 14ae 0346     		mov	r3, r0
 16296 14b0 1A46     		mov	r2, r3
 16297 14b2 7B69     		ldr	r3, [r7, #20]
 16298 14b4 1344     		add	r3, r3, r2
 16299 14b6 124A     		ldr	r2, .L658+48
 16300 14b8 1D46     		mov	r5, r3
 16301 14ba 1446     		mov	r4, r2
 16302 14bc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16303 14be 2860     		str	r0, [r5]	@ unaligned
 16304 14c0 6960     		str	r1, [r5, #4]	@ unaligned
 16305 14c2 AA60     		str	r2, [r5, #8]	@ unaligned
 16306 14c4 EB60     		str	r3, [r5, #12]	@ unaligned
 16307 14c6 2068     		ldr	r0, [r4]	@ unaligned
 16308 14c8 2861     		str	r0, [r5, #16]	@ unaligned
 16309 14ca 2379     		ldrb	r3, [r4, #4]
 16310 14cc 2B75     		strb	r3, [r5, #20]
 16311 14ce 2AE0     		b	.L616
 16312              	.L659:
 16313              		.align	2
 16314              	.L658:
 16315 14d0 58160000 		.word	.LC212
 16316 14d4 04130000 		.word	.LC179
 16317 14d8 A8100000 		.word	.LC147
 16318 14dc 5C160000 		.word	.LC213
 16319 14e0 8C160000 		.word	.LC214
 16320 14e4 A8160000 		.word	.LC215
 16321 14e8 CC160000 		.word	.LC216
 16322 14ec DC160000 		.word	.LC217
 16323 14f0 F8160000 		.word	.LC218
 16324 14f4 0C170000 		.word	.LC219
 16325 14f8 20170000 		.word	.LC220
 16326 14fc 44170000 		.word	.LC221
 16327 1500 68170000 		.word	.LC222
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 364


 16328              	.L615:
2176:..\src/command_processing.c ****         else
2177:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: NO\r\n");
 16329              		.loc 1 2177 0
 16330 1504 7869     		ldr	r0, [r7, #20]
 16331 1506 FFF7FEFF 		bl	strlen
 16332 150a 0346     		mov	r3, r0
 16333 150c 1A46     		mov	r2, r3
 16334 150e 7B69     		ldr	r3, [r7, #20]
 16335 1510 1344     		add	r3, r3, r2
 16336 1512 BA4A     		ldr	r2, .L660
 16337 1514 1D46     		mov	r5, r3
 16338 1516 1446     		mov	r4, r2
 16339 1518 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16340 151a 2860     		str	r0, [r5]	@ unaligned
 16341 151c 6960     		str	r1, [r5, #4]	@ unaligned
 16342 151e AA60     		str	r2, [r5, #8]	@ unaligned
 16343 1520 EB60     		str	r3, [r5, #12]	@ unaligned
 16344 1522 2068     		ldr	r0, [r4]	@ unaligned
 16345 1524 2861     		str	r0, [r5, #16]	@ unaligned
 16346              	.L616:
2178:..\src/command_processing.c ****             
2179:..\src/command_processing.c ****         if (MEM_P->emg.emg_calibration_flag)
 16347              		.loc 1 2179 0
 16348 1526 D7F88C30 		ldr	r3, [r7, #140]
 16349 152a 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 16350 152e 002B     		cmp	r3, #0
 16351 1530 17D0     		beq	.L617
2180:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: YES\r\n");
 16352              		.loc 1 2180 0
 16353 1532 7869     		ldr	r0, [r7, #20]
 16354 1534 FFF7FEFF 		bl	strlen
 16355 1538 0346     		mov	r3, r0
 16356 153a 1A46     		mov	r2, r3
 16357 153c 7B69     		ldr	r3, [r7, #20]
 16358 153e 1344     		add	r3, r3, r2
 16359 1540 AF4A     		ldr	r2, .L660+4
 16360 1542 1D46     		mov	r5, r3
 16361 1544 1446     		mov	r4, r2
 16362 1546 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16363 1548 2860     		str	r0, [r5]	@ unaligned
 16364 154a 6960     		str	r1, [r5, #4]	@ unaligned
 16365 154c AA60     		str	r2, [r5, #8]	@ unaligned
 16366 154e EB60     		str	r3, [r5, #12]	@ unaligned
 16367 1550 03CC     		ldmia	r4!, {r0, r1}
 16368 1552 2861     		str	r0, [r5, #16]	@ unaligned
 16369 1554 6961     		str	r1, [r5, #20]	@ unaligned
 16370 1556 2388     		ldrh	r3, [r4]	@ unaligned
 16371 1558 A278     		ldrb	r2, [r4, #2]
 16372 155a 2B83     		strh	r3, [r5, #24]	@ unaligned
 16373 155c 1346     		mov	r3, r2
 16374 155e AB76     		strb	r3, [r5, #26]
 16375 1560 13E0     		b	.L618
 16376              	.L617:
2181:..\src/command_processing.c ****         else
2182:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: NO\r\n");
 16377              		.loc 1 2182 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 365


 16378 1562 7869     		ldr	r0, [r7, #20]
 16379 1564 FFF7FEFF 		bl	strlen
 16380 1568 0346     		mov	r3, r0
 16381 156a 1A46     		mov	r2, r3
 16382 156c 7B69     		ldr	r3, [r7, #20]
 16383 156e 1344     		add	r3, r3, r2
 16384 1570 A44A     		ldr	r2, .L660+8
 16385 1572 1D46     		mov	r5, r3
 16386 1574 1446     		mov	r4, r2
 16387 1576 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16388 1578 2860     		str	r0, [r5]	@ unaligned
 16389 157a 6960     		str	r1, [r5, #4]	@ unaligned
 16390 157c AA60     		str	r2, [r5, #8]	@ unaligned
 16391 157e EB60     		str	r3, [r5, #12]	@ unaligned
 16392 1580 03CC     		ldmia	r4!, {r0, r1}
 16393 1582 2861     		str	r0, [r5, #16]	@ unaligned
 16394 1584 6961     		str	r1, [r5, #20]	@ unaligned
 16395 1586 2388     		ldrh	r3, [r4]	@ unaligned
 16396 1588 2B83     		strh	r3, [r5, #24]	@ unaligned
 16397              	.L618:
2183:..\src/command_processing.c **** 
2184:..\src/command_processing.c ****         sprintf(str, "EMG max speed: %d %d", (int)MEM_P->emg.emg_speed[0], (int)MEM_P->emg.emg_spee
 16398              		.loc 1 2184 0
 16399 158a D7F88C30 		ldr	r3, [r7, #140]
 16400 158e 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 16401 1592 1A46     		mov	r2, r3
 16402 1594 D7F88C30 		ldr	r3, [r7, #140]
 16403 1598 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 16404 159c 07F11C00 		add	r0, r7, #28
 16405 15a0 9949     		ldr	r1, .L660+12
 16406 15a2 FFF7FEFF 		bl	sprintf
2185:..\src/command_processing.c ****         strcat(info_string, str);
 16407              		.loc 1 2185 0
 16408 15a6 07F11C03 		add	r3, r7, #28
 16409 15aa 1946     		mov	r1, r3
 16410 15ac 7869     		ldr	r0, [r7, #20]
 16411 15ae FFF7FEFF 		bl	strcat
2186:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16412              		.loc 1 2186 0
 16413 15b2 7869     		ldr	r0, [r7, #20]
 16414 15b4 FFF7FEFF 		bl	strlen
 16415 15b8 0346     		mov	r3, r0
 16416 15ba 1A46     		mov	r2, r3
 16417 15bc 7B69     		ldr	r3, [r7, #20]
 16418 15be 1344     		add	r3, r3, r2
 16419 15c0 924A     		ldr	r2, .L660+16
 16420 15c2 1188     		ldrh	r1, [r2]	@ unaligned
 16421 15c4 9278     		ldrb	r2, [r2, #2]
 16422 15c6 1980     		strh	r1, [r3]	@ unaligned
 16423 15c8 9A70     		strb	r2, [r3, #2]
2187:..\src/command_processing.c **** 
2188:..\src/command_processing.c ****         if (MEM_P->exp.read_ADC_sensors_port_flag == TRUE){
 16424              		.loc 1 2188 0
 16425 15ca D7F88C30 		ldr	r3, [r7, #140]
 16426 15ce 93F82732 		ldrb	r3, [r3, #551]	@ zero_extendqisi2
 16427 15d2 012B     		cmp	r3, #1
 16428 15d4 6ED1     		bne	.L619
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 366


2189:..\src/command_processing.c ****             strcat(info_string, "Additional ADC sensors value:\r\n");
 16429              		.loc 1 2189 0
 16430 15d6 7869     		ldr	r0, [r7, #20]
 16431 15d8 FFF7FEFF 		bl	strlen
 16432 15dc 0346     		mov	r3, r0
 16433 15de 1A46     		mov	r2, r3
 16434 15e0 7B69     		ldr	r3, [r7, #20]
 16435 15e2 1344     		add	r3, r3, r2
 16436 15e4 8A4A     		ldr	r2, .L660+20
 16437 15e6 1C46     		mov	r4, r3
 16438 15e8 1546     		mov	r5, r2
 16439 15ea 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16440 15ec 2060     		str	r0, [r4]	@ unaligned
 16441 15ee 6160     		str	r1, [r4, #4]	@ unaligned
 16442 15f0 A260     		str	r2, [r4, #8]	@ unaligned
 16443 15f2 E360     		str	r3, [r4, #12]	@ unaligned
 16444 15f4 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16445 15f6 2061     		str	r0, [r4, #16]	@ unaligned
 16446 15f8 6161     		str	r1, [r4, #20]	@ unaligned
 16447 15fa A261     		str	r2, [r4, #24]	@ unaligned
 16448 15fc E361     		str	r3, [r4, #28]	@ unaligned
2190:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_ADDITIONAL_EMGS; ++i) {
 16449              		.loc 1 2190 0
 16450 15fe 0023     		movs	r3, #0
 16451 1600 C7F89430 		str	r3, [r7, #148]
 16452 1604 25E0     		b	.L620
 16453              	.L621:
2191:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 16454              		.loc 1 2191 0 discriminator 3
 16455 1606 D7F89430 		ldr	r3, [r7, #148]
 16456 160a 591C     		adds	r1, r3, #1
 16457 160c 814A     		ldr	r2, .L660+24
 16458 160e D7F89430 		ldr	r3, [r7, #148]
 16459 1612 0233     		adds	r3, r3, #2
 16460 1614 52F82330 		ldr	r3, [r2, r3, lsl #2]
 16461 1618 07F11C00 		add	r0, r7, #28
 16462 161c 0A46     		mov	r2, r1
 16463 161e 7E49     		ldr	r1, .L660+28
 16464 1620 FFF7FEFF 		bl	sprintf
2192:..\src/command_processing.c ****                 strcat(info_string, str);
 16465              		.loc 1 2192 0 discriminator 3
 16466 1624 07F11C03 		add	r3, r7, #28
 16467 1628 1946     		mov	r1, r3
 16468 162a 7869     		ldr	r0, [r7, #20]
 16469 162c FFF7FEFF 		bl	strcat
2193:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 16470              		.loc 1 2193 0 discriminator 3
 16471 1630 7869     		ldr	r0, [r7, #20]
 16472 1632 FFF7FEFF 		bl	strlen
 16473 1636 0346     		mov	r3, r0
 16474 1638 1A46     		mov	r2, r3
 16475 163a 7B69     		ldr	r3, [r7, #20]
 16476 163c 1344     		add	r3, r3, r2
 16477 163e 734A     		ldr	r2, .L660+16
 16478 1640 1188     		ldrh	r1, [r2]	@ unaligned
 16479 1642 9278     		ldrb	r2, [r2, #2]
 16480 1644 1980     		strh	r1, [r3]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 367


 16481 1646 9A70     		strb	r2, [r3, #2]
2190:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 16482              		.loc 1 2190 0 discriminator 3
 16483 1648 D7F89430 		ldr	r3, [r7, #148]
 16484 164c 0133     		adds	r3, r3, #1
 16485 164e C7F89430 		str	r3, [r7, #148]
 16486              	.L620:
2190:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 16487              		.loc 1 2190 0 is_stmt 0 discriminator 1
 16488 1652 D7F89430 		ldr	r3, [r7, #148]
 16489 1656 052B     		cmp	r3, #5
 16490 1658 D5DD     		ble	.L621
2194:..\src/command_processing.c ****             }
2195:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_INPUT_EMGS; ++i) {
 16491              		.loc 1 2195 0 is_stmt 1
 16492 165a 0023     		movs	r3, #0
 16493 165c C7F89430 		str	r3, [r7, #148]
 16494 1660 24E0     		b	.L622
 16495              	.L623:
2196:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 16496              		.loc 1 2196 0 discriminator 3
 16497 1662 D7F89430 		ldr	r3, [r7, #148]
 16498 1666 591C     		adds	r1, r3, #1
 16499 1668 6A4A     		ldr	r2, .L660+24
 16500 166a D7F89430 		ldr	r3, [r7, #148]
 16501 166e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 16502 1672 07F11C00 		add	r0, r7, #28
 16503 1676 0A46     		mov	r2, r1
 16504 1678 6849     		ldr	r1, .L660+32
 16505 167a FFF7FEFF 		bl	sprintf
2197:..\src/command_processing.c ****                 strcat(info_string, str);
 16506              		.loc 1 2197 0 discriminator 3
 16507 167e 07F11C03 		add	r3, r7, #28
 16508 1682 1946     		mov	r1, r3
 16509 1684 7869     		ldr	r0, [r7, #20]
 16510 1686 FFF7FEFF 		bl	strcat
2198:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 16511              		.loc 1 2198 0 discriminator 3
 16512 168a 7869     		ldr	r0, [r7, #20]
 16513 168c FFF7FEFF 		bl	strlen
 16514 1690 0346     		mov	r3, r0
 16515 1692 1A46     		mov	r2, r3
 16516 1694 7B69     		ldr	r3, [r7, #20]
 16517 1696 1344     		add	r3, r3, r2
 16518 1698 5C4A     		ldr	r2, .L660+16
 16519 169a 1188     		ldrh	r1, [r2]	@ unaligned
 16520 169c 9278     		ldrb	r2, [r2, #2]
 16521 169e 1980     		strh	r1, [r3]	@ unaligned
 16522 16a0 9A70     		strb	r2, [r3, #2]
2195:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 16523              		.loc 1 2195 0 discriminator 3
 16524 16a2 D7F89430 		ldr	r3, [r7, #148]
 16525 16a6 0133     		adds	r3, r3, #1
 16526 16a8 C7F89430 		str	r3, [r7, #148]
 16527              	.L622:
2195:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 16528              		.loc 1 2195 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 368


 16529 16ac D7F89430 		ldr	r3, [r7, #148]
 16530 16b0 012B     		cmp	r3, #1
 16531 16b2 D6DD     		ble	.L623
 16532              	.L619:
2199:..\src/command_processing.c ****             }
2200:..\src/command_processing.c ****         }
2201:..\src/command_processing.c **** 
2202:..\src/command_processing.c **** #ifdef GENERIC_FW
2203:..\src/command_processing.c ****     
2204:..\src/command_processing.c ****         strcat(info_string, "\r\n");
2205:..\src/command_processing.c ****         strcat(info_string, "JOYSTICK CONFIGURATION\r\n");
2206:..\src/command_processing.c ****         sprintf(str, "Closure speed: %d", c_mem.JOY_spec.joystick_closure_speed);
2207:..\src/command_processing.c ****         strcat(info_string, str);
2208:..\src/command_processing.c ****         strcat(info_string, "\r\n");
2209:..\src/command_processing.c **** 
2210:..\src/command_processing.c ****         sprintf(str, "Joystick Threshold: %d", c_mem.JOY_spec.joystick_threshold);
2211:..\src/command_processing.c ****         strcat(info_string, str);
2212:..\src/command_processing.c ****         strcat(info_string, "\r\n");
2213:..\src/command_processing.c ****         sprintf(str, "Joystick Gains - X:%hu  Y:%hu", c_mem.JOY_spec.joystick_gains[0], c_mem.JOY_s
2214:..\src/command_processing.c ****         strcat(info_string, str);
2215:..\src/command_processing.c ****         strcat(info_string, "\r\n");
2216:..\src/command_processing.c **** 
2217:..\src/command_processing.c **** #endif
2218:..\src/command_processing.c ****         
2219:..\src/command_processing.c ****         if (MEM_P->SH.rest_position_flag) {
 16533              		.loc 1 2219 0 is_stmt 1
 16534 16b4 D7F88C30 		ldr	r3, [r7, #140]
 16535 16b8 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 16536 16bc 002B     		cmp	r3, #0
 16537 16be 63D0     		beq	.L624
2220:..\src/command_processing.c ****     		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 16538              		.loc 1 2220 0
 16539 16c0 D7F88C30 		ldr	r3, [r7, #140]
 16540 16c4 D3F8A422 		ldr	r2, [r3, #676]
 16541 16c8 07F11C03 		add	r3, r7, #28
 16542 16cc 5449     		ldr	r1, .L660+36
 16543 16ce 1846     		mov	r0, r3
 16544 16d0 FFF7FEFF 		bl	sprintf
2221:..\src/command_processing.c ****             strcat(info_string, str);
 16545              		.loc 1 2221 0
 16546 16d4 07F11C03 		add	r3, r7, #28
 16547 16d8 1946     		mov	r1, r3
 16548 16da 7869     		ldr	r0, [r7, #20]
 16549 16dc FFF7FEFF 		bl	strcat
2222:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16550              		.loc 1 2222 0
 16551 16e0 7869     		ldr	r0, [r7, #20]
 16552 16e2 FFF7FEFF 		bl	strlen
 16553 16e6 0346     		mov	r3, r0
 16554 16e8 1A46     		mov	r2, r3
 16555 16ea 7B69     		ldr	r3, [r7, #20]
 16556 16ec 1344     		add	r3, r3, r2
 16557 16ee 474A     		ldr	r2, .L660+16
 16558 16f0 1188     		ldrh	r1, [r2]	@ unaligned
 16559 16f2 9278     		ldrb	r2, [r2, #2]
 16560 16f4 1980     		strh	r1, [r3]	@ unaligned
 16561 16f6 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 369


2223:..\src/command_processing.c ****             
2224:..\src/command_processing.c ****             sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 16562              		.loc 1 2224 0
 16563 16f8 D7F88C30 		ldr	r3, [r7, #140]
 16564 16fc D3F8A822 		ldr	r2, [r3, #680]
 16565 1700 07F11C03 		add	r3, r7, #28
 16566 1704 4749     		ldr	r1, .L660+40
 16567 1706 1846     		mov	r0, r3
 16568 1708 FFF7FEFF 		bl	sprintf
2225:..\src/command_processing.c ****             strcat(info_string, str);
 16569              		.loc 1 2225 0
 16570 170c 07F11C03 		add	r3, r7, #28
 16571 1710 1946     		mov	r1, r3
 16572 1712 7869     		ldr	r0, [r7, #20]
 16573 1714 FFF7FEFF 		bl	strcat
2226:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16574              		.loc 1 2226 0
 16575 1718 7869     		ldr	r0, [r7, #20]
 16576 171a FFF7FEFF 		bl	strlen
 16577 171e 0346     		mov	r3, r0
 16578 1720 1A46     		mov	r2, r3
 16579 1722 7B69     		ldr	r3, [r7, #20]
 16580 1724 1344     		add	r3, r3, r2
 16581 1726 394A     		ldr	r2, .L660+16
 16582 1728 1188     		ldrh	r1, [r2]	@ unaligned
 16583 172a 9278     		ldrb	r2, [r2, #2]
 16584 172c 1980     		strh	r1, [r3]	@ unaligned
 16585 172e 9A70     		strb	r2, [r3, #2]
2227:..\src/command_processing.c ****             
2228:..\src/command_processing.c ****             sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0
 16586              		.loc 1 2228 0
 16587 1730 D7F88C30 		ldr	r3, [r7, #140]
 16588 1734 D3F8A022 		ldr	r2, [r3, #672]
 16589 1738 D7F88C30 		ldr	r3, [r7, #140]
 16590 173c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 16591 1740 1846     		mov	r0, r3
 16592 1742 D7F88C10 		ldr	r1, [r7, #140]
 16593 1746 0346     		mov	r3, r0
 16594 1748 5B00     		lsls	r3, r3, #1
 16595 174a 0344     		add	r3, r3, r0
 16596 174c 1B01     		lsls	r3, r3, #4
 16597 174e 0B44     		add	r3, r3, r1
 16598 1750 03F29513 		addw	r3, r3, #405
 16599 1754 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16600 1756 1A41     		asrs	r2, r2, r3
 16601 1758 07F11C03 		add	r3, r7, #28
 16602 175c 3249     		ldr	r1, .L660+44
 16603 175e 1846     		mov	r0, r3
 16604 1760 FFF7FEFF 		bl	sprintf
2229:..\src/command_processing.c ****             strcat(info_string, str);
 16605              		.loc 1 2229 0
 16606 1764 07F11C03 		add	r3, r7, #28
 16607 1768 1946     		mov	r1, r3
 16608 176a 7869     		ldr	r0, [r7, #20]
 16609 176c FFF7FEFF 		bl	strcat
2230:..\src/command_processing.c ****             strcat(info_string, "\r\n");  
 16610              		.loc 1 2230 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 370


 16611 1770 7869     		ldr	r0, [r7, #20]
 16612 1772 FFF7FEFF 		bl	strlen
 16613 1776 0346     		mov	r3, r0
 16614 1778 1A46     		mov	r2, r3
 16615 177a 7B69     		ldr	r3, [r7, #20]
 16616 177c 1344     		add	r3, r3, r2
 16617 177e 234A     		ldr	r2, .L660+16
 16618 1780 1188     		ldrh	r1, [r2]	@ unaligned
 16619 1782 9278     		ldrb	r2, [r2, #2]
 16620 1784 1980     		strh	r1, [r3]	@ unaligned
 16621 1786 9A70     		strb	r2, [r3, #2]
 16622              	.L624:
2231:..\src/command_processing.c ****         }
2232:..\src/command_processing.c **** 
2233:..\src/command_processing.c ****         if (MEM_P->imu.read_imu_flag) {
 16623              		.loc 1 2233 0
 16624 1788 D7F88C30 		ldr	r3, [r7, #140]
 16625 178c 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 16626 1790 002B     		cmp	r3, #0
 16627 1792 00F0CD81 		beq	.L625
2234:..\src/command_processing.c ****             sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 16628              		.loc 1 2234 0
 16629 1796 254B     		ldr	r3, .L660+48
 16630 1798 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16631 179a 1A46     		mov	r2, r3
 16632 179c 07F11C03 		add	r3, r7, #28
 16633 17a0 2349     		ldr	r1, .L660+52
 16634 17a2 1846     		mov	r0, r3
 16635 17a4 FFF7FEFF 		bl	sprintf
2235:..\src/command_processing.c ****             strcat(info_string, str);
 16636              		.loc 1 2235 0
 16637 17a8 07F11C03 		add	r3, r7, #28
 16638 17ac 1946     		mov	r1, r3
 16639 17ae 7869     		ldr	r0, [r7, #20]
 16640 17b0 FFF7FEFF 		bl	strcat
2236:..\src/command_processing.c ****             
2237:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16641              		.loc 1 2237 0
 16642 17b4 7869     		ldr	r0, [r7, #20]
 16643 17b6 FFF7FEFF 		bl	strlen
 16644 17ba 0346     		mov	r3, r0
 16645 17bc 1A46     		mov	r2, r3
 16646 17be 7B69     		ldr	r3, [r7, #20]
 16647 17c0 1344     		add	r3, r3, r2
 16648 17c2 124A     		ldr	r2, .L660+16
 16649 17c4 1188     		ldrh	r1, [r2]	@ unaligned
 16650 17c6 9278     		ldrb	r2, [r2, #2]
 16651 17c8 1980     		strh	r1, [r3]	@ unaligned
 16652 17ca 9A70     		strb	r2, [r3, #2]
2238:..\src/command_processing.c ****             
2239:..\src/command_processing.c ****             strcat(info_string, "IMUs CONFIGURATION\r\n");
 16653              		.loc 1 2239 0
 16654 17cc 7869     		ldr	r0, [r7, #20]
 16655 17ce FFF7FEFF 		bl	strlen
 16656 17d2 0346     		mov	r3, r0
 16657 17d4 1A46     		mov	r2, r3
 16658 17d6 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 371


 16659 17d8 1344     		add	r3, r3, r2
 16660 17da 164A     		ldr	r2, .L660+56
 16661 17dc 1D46     		mov	r5, r3
 16662 17de 1446     		mov	r4, r2
 16663 17e0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16664 17e2 2860     		str	r0, [r5]	@ unaligned
 16665 17e4 6960     		str	r1, [r5, #4]	@ unaligned
 16666 17e6 AA60     		str	r2, [r5, #8]	@ unaligned
 16667 17e8 EB60     		str	r3, [r5, #12]	@ unaligned
 16668 17ea 2068     		ldr	r0, [r4]	@ unaligned
 16669 17ec 2861     		str	r0, [r5, #16]	@ unaligned
 16670 17ee 2379     		ldrb	r3, [r4, #4]
 16671 17f0 2B75     		strb	r3, [r5, #20]
2240:..\src/command_processing.c ****             for (i=0; i<N_IMU_Connected; i++){
 16672              		.loc 1 2240 0
 16673 17f2 0023     		movs	r3, #0
 16674 17f4 C7F89430 		str	r3, [r7, #148]
 16675 17f8 83E1     		b	.L626
 16676              	.L661:
 16677 17fa 00BF     		.align	2
 16678              	.L660:
 16679 17fc 80170000 		.word	.LC223
 16680 1800 94170000 		.word	.LC224
 16681 1804 B0170000 		.word	.LC225
 16682 1808 CC170000 		.word	.LC226
 16683 180c A8100000 		.word	.LC147
 16684 1810 E4170000 		.word	.LC227
 16685 1814 00000000 		.word	g_adc_meas
 16686 1818 04180000 		.word	.LC228
 16687 181c 14180000 		.word	.LC229
 16688 1820 28180000 		.word	.LC230
 16689 1824 44180000 		.word	.LC231
 16690 1828 6C180000 		.word	.LC232
 16691 182c 00000000 		.word	N_IMU_Connected
 16692 1830 80180000 		.word	.LC233
 16693 1834 94180000 		.word	.LC234
 16694              	.L637:
2241:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 16695              		.loc 1 2241 0
 16696 1838 D54A     		ldr	r2, .L662
 16697 183a D7F89430 		ldr	r3, [r7, #148]
 16698 183e 1344     		add	r3, r3, r2
 16699 1840 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16700 1842 07F11C00 		add	r0, r7, #28
 16701 1846 D7F89420 		ldr	r2, [r7, #148]
 16702 184a D249     		ldr	r1, .L662+4
 16703 184c FFF7FEFF 		bl	sprintf
2242:..\src/command_processing.c ****                 strcat(info_string, str);
 16704              		.loc 1 2242 0
 16705 1850 07F11C03 		add	r3, r7, #28
 16706 1854 1946     		mov	r1, r3
 16707 1856 7869     		ldr	r0, [r7, #20]
 16708 1858 FFF7FEFF 		bl	strcat
2243:..\src/command_processing.c ****                 
2244:..\src/command_processing.c ****                 sprintf(str, "\tAccelerometers: ");
 16709              		.loc 1 2244 0
 16710 185c 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 372


 16711 1860 CD4A     		ldr	r2, .L662+8
 16712 1862 1C46     		mov	r4, r3
 16713 1864 1546     		mov	r5, r2
 16714 1866 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16715 1868 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 16716 186a 2B68     		ldr	r3, [r5]
 16717 186c 2380     		strh	r3, [r4]	@ movhi
2245:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 16718              		.loc 1 2245 0
 16719 186e C84A     		ldr	r2, .L662
 16720 1870 D7F89430 		ldr	r3, [r7, #148]
 16721 1874 1344     		add	r3, r3, r2
 16722 1876 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16723 1878 1946     		mov	r1, r3
 16724 187a D7F88C20 		ldr	r2, [r7, #140]
 16725 187e 0B46     		mov	r3, r1
 16726 1880 9B00     		lsls	r3, r3, #2
 16727 1882 0B44     		add	r3, r3, r1
 16728 1884 1344     		add	r3, r3, r2
 16729 1886 03F20223 		addw	r3, r3, #514
 16730 188a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16731 188c 002B     		cmp	r3, #0
 16732 188e 0FD0     		beq	.L627
2246:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 16733              		.loc 1 2246 0
 16734 1890 07F11C03 		add	r3, r7, #28
 16735 1894 1846     		mov	r0, r3
 16736 1896 FFF7FEFF 		bl	strlen
 16737 189a 0346     		mov	r3, r0
 16738 189c 1A46     		mov	r2, r3
 16739 189e 07F11C03 		add	r3, r7, #28
 16740 18a2 1344     		add	r3, r3, r2
 16741 18a4 BD4A     		ldr	r2, .L662+12
 16742 18a6 1068     		ldr	r0, [r2]	@ unaligned
 16743 18a8 1860     		str	r0, [r3]	@ unaligned
 16744 18aa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 16745 18ac 9A80     		strh	r2, [r3, #4]	@ unaligned
 16746 18ae 0EE0     		b	.L628
 16747              	.L627:
2247:..\src/command_processing.c ****                 else
2248:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 16748              		.loc 1 2248 0
 16749 18b0 07F11C03 		add	r3, r7, #28
 16750 18b4 1846     		mov	r0, r3
 16751 18b6 FFF7FEFF 		bl	strlen
 16752 18ba 0346     		mov	r3, r0
 16753 18bc 1A46     		mov	r2, r3
 16754 18be 07F11C03 		add	r3, r7, #28
 16755 18c2 1344     		add	r3, r3, r2
 16756 18c4 B64A     		ldr	r2, .L662+16
 16757 18c6 1068     		ldr	r0, [r2]	@ unaligned
 16758 18c8 1860     		str	r0, [r3]	@ unaligned
 16759 18ca 1279     		ldrb	r2, [r2, #4]
 16760 18cc 1A71     		strb	r2, [r3, #4]
 16761              	.L628:
2249:..\src/command_processing.c ****                 strcat(str, "\tGyroscopes: ");
 16762              		.loc 1 2249 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 373


 16763 18ce 07F11C03 		add	r3, r7, #28
 16764 18d2 1846     		mov	r0, r3
 16765 18d4 FFF7FEFF 		bl	strlen
 16766 18d8 0346     		mov	r3, r0
 16767 18da 1A46     		mov	r2, r3
 16768 18dc 07F11C03 		add	r3, r7, #28
 16769 18e0 1344     		add	r3, r3, r2
 16770 18e2 B04A     		ldr	r2, .L662+20
 16771 18e4 1C46     		mov	r4, r3
 16772 18e6 1346     		mov	r3, r2
 16773 18e8 07CB     		ldmia	r3!, {r0, r1, r2}
 16774 18ea 2060     		str	r0, [r4]	@ unaligned
 16775 18ec 6160     		str	r1, [r4, #4]	@ unaligned
 16776 18ee A260     		str	r2, [r4, #8]	@ unaligned
 16777 18f0 1B88     		ldrh	r3, [r3]	@ unaligned
 16778 18f2 A381     		strh	r3, [r4, #12]	@ unaligned
2250:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 16779              		.loc 1 2250 0
 16780 18f4 A64A     		ldr	r2, .L662
 16781 18f6 D7F89430 		ldr	r3, [r7, #148]
 16782 18fa 1344     		add	r3, r3, r2
 16783 18fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16784 18fe 1946     		mov	r1, r3
 16785 1900 D7F88C20 		ldr	r2, [r7, #140]
 16786 1904 0B46     		mov	r3, r1
 16787 1906 9B00     		lsls	r3, r3, #2
 16788 1908 0B44     		add	r3, r3, r1
 16789 190a 1344     		add	r3, r3, r2
 16790 190c 03F20323 		addw	r3, r3, #515
 16791 1910 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16792 1912 002B     		cmp	r3, #0
 16793 1914 0FD0     		beq	.L629
2251:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 16794              		.loc 1 2251 0
 16795 1916 07F11C03 		add	r3, r7, #28
 16796 191a 1846     		mov	r0, r3
 16797 191c FFF7FEFF 		bl	strlen
 16798 1920 0346     		mov	r3, r0
 16799 1922 1A46     		mov	r2, r3
 16800 1924 07F11C03 		add	r3, r7, #28
 16801 1928 1344     		add	r3, r3, r2
 16802 192a 9C4A     		ldr	r2, .L662+12
 16803 192c 1068     		ldr	r0, [r2]	@ unaligned
 16804 192e 1860     		str	r0, [r3]	@ unaligned
 16805 1930 9288     		ldrh	r2, [r2, #4]	@ unaligned
 16806 1932 9A80     		strh	r2, [r3, #4]	@ unaligned
 16807 1934 0EE0     		b	.L630
 16808              	.L629:
2252:..\src/command_processing.c ****                 else
2253:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 16809              		.loc 1 2253 0
 16810 1936 07F11C03 		add	r3, r7, #28
 16811 193a 1846     		mov	r0, r3
 16812 193c FFF7FEFF 		bl	strlen
 16813 1940 0346     		mov	r3, r0
 16814 1942 1A46     		mov	r2, r3
 16815 1944 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 374


 16816 1948 1344     		add	r3, r3, r2
 16817 194a 954A     		ldr	r2, .L662+16
 16818 194c 1068     		ldr	r0, [r2]	@ unaligned
 16819 194e 1860     		str	r0, [r3]	@ unaligned
 16820 1950 1279     		ldrb	r2, [r2, #4]
 16821 1952 1A71     		strb	r2, [r3, #4]
 16822              	.L630:
2254:..\src/command_processing.c ****                 strcat(str, "\tMagnetometers: ");
 16823              		.loc 1 2254 0
 16824 1954 07F11C03 		add	r3, r7, #28
 16825 1958 1846     		mov	r0, r3
 16826 195a FFF7FEFF 		bl	strlen
 16827 195e 0346     		mov	r3, r0
 16828 1960 1A46     		mov	r2, r3
 16829 1962 07F11C03 		add	r3, r7, #28
 16830 1966 1344     		add	r3, r3, r2
 16831 1968 8F4A     		ldr	r2, .L662+24
 16832 196a 1D46     		mov	r5, r3
 16833 196c 1446     		mov	r4, r2
 16834 196e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16835 1970 2860     		str	r0, [r5]	@ unaligned
 16836 1972 6960     		str	r1, [r5, #4]	@ unaligned
 16837 1974 AA60     		str	r2, [r5, #8]	@ unaligned
 16838 1976 EB60     		str	r3, [r5, #12]	@ unaligned
 16839 1978 2378     		ldrb	r3, [r4]
 16840 197a 2B74     		strb	r3, [r5, #16]
2255:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 16841              		.loc 1 2255 0
 16842 197c 844A     		ldr	r2, .L662
 16843 197e D7F89430 		ldr	r3, [r7, #148]
 16844 1982 1344     		add	r3, r3, r2
 16845 1984 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16846 1986 1946     		mov	r1, r3
 16847 1988 D7F88C20 		ldr	r2, [r7, #140]
 16848 198c 0B46     		mov	r3, r1
 16849 198e 9B00     		lsls	r3, r3, #2
 16850 1990 0B44     		add	r3, r3, r1
 16851 1992 1344     		add	r3, r3, r2
 16852 1994 03F50173 		add	r3, r3, #516
 16853 1998 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16854 199a 002B     		cmp	r3, #0
 16855 199c 0FD0     		beq	.L631
2256:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 16856              		.loc 1 2256 0
 16857 199e 07F11C03 		add	r3, r7, #28
 16858 19a2 1846     		mov	r0, r3
 16859 19a4 FFF7FEFF 		bl	strlen
 16860 19a8 0346     		mov	r3, r0
 16861 19aa 1A46     		mov	r2, r3
 16862 19ac 07F11C03 		add	r3, r7, #28
 16863 19b0 1344     		add	r3, r3, r2
 16864 19b2 7A4A     		ldr	r2, .L662+12
 16865 19b4 1068     		ldr	r0, [r2]	@ unaligned
 16866 19b6 1860     		str	r0, [r3]	@ unaligned
 16867 19b8 9288     		ldrh	r2, [r2, #4]	@ unaligned
 16868 19ba 9A80     		strh	r2, [r3, #4]	@ unaligned
 16869 19bc 0EE0     		b	.L632
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 375


 16870              	.L631:
2257:..\src/command_processing.c ****                 else
2258:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 16871              		.loc 1 2258 0
 16872 19be 07F11C03 		add	r3, r7, #28
 16873 19c2 1846     		mov	r0, r3
 16874 19c4 FFF7FEFF 		bl	strlen
 16875 19c8 0346     		mov	r3, r0
 16876 19ca 1A46     		mov	r2, r3
 16877 19cc 07F11C03 		add	r3, r7, #28
 16878 19d0 1344     		add	r3, r3, r2
 16879 19d2 734A     		ldr	r2, .L662+16
 16880 19d4 1068     		ldr	r0, [r2]	@ unaligned
 16881 19d6 1860     		str	r0, [r3]	@ unaligned
 16882 19d8 1279     		ldrb	r2, [r2, #4]
 16883 19da 1A71     		strb	r2, [r3, #4]
 16884              	.L632:
2259:..\src/command_processing.c ****                 strcat(str, "\tQuaternion: ");                
 16885              		.loc 1 2259 0
 16886 19dc 07F11C03 		add	r3, r7, #28
 16887 19e0 1846     		mov	r0, r3
 16888 19e2 FFF7FEFF 		bl	strlen
 16889 19e6 0346     		mov	r3, r0
 16890 19e8 1A46     		mov	r2, r3
 16891 19ea 07F11C03 		add	r3, r7, #28
 16892 19ee 1344     		add	r3, r3, r2
 16893 19f0 6E4A     		ldr	r2, .L662+28
 16894 19f2 1C46     		mov	r4, r3
 16895 19f4 1346     		mov	r3, r2
 16896 19f6 07CB     		ldmia	r3!, {r0, r1, r2}
 16897 19f8 2060     		str	r0, [r4]	@ unaligned
 16898 19fa 6160     		str	r1, [r4, #4]	@ unaligned
 16899 19fc A260     		str	r2, [r4, #8]	@ unaligned
 16900 19fe 1B88     		ldrh	r3, [r3]	@ unaligned
 16901 1a00 A381     		strh	r3, [r4, #12]	@ unaligned
2260:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 16902              		.loc 1 2260 0
 16903 1a02 634A     		ldr	r2, .L662
 16904 1a04 D7F89430 		ldr	r3, [r7, #148]
 16905 1a08 1344     		add	r3, r3, r2
 16906 1a0a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16907 1a0c 1946     		mov	r1, r3
 16908 1a0e D7F88C20 		ldr	r2, [r7, #140]
 16909 1a12 0B46     		mov	r3, r1
 16910 1a14 9B00     		lsls	r3, r3, #2
 16911 1a16 0B44     		add	r3, r3, r1
 16912 1a18 1344     		add	r3, r3, r2
 16913 1a1a 03F20523 		addw	r3, r3, #517
 16914 1a1e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16915 1a20 002B     		cmp	r3, #0
 16916 1a22 0FD0     		beq	.L633
2261:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 16917              		.loc 1 2261 0
 16918 1a24 07F11C03 		add	r3, r7, #28
 16919 1a28 1846     		mov	r0, r3
 16920 1a2a FFF7FEFF 		bl	strlen
 16921 1a2e 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 376


 16922 1a30 1A46     		mov	r2, r3
 16923 1a32 07F11C03 		add	r3, r7, #28
 16924 1a36 1344     		add	r3, r3, r2
 16925 1a38 584A     		ldr	r2, .L662+12
 16926 1a3a 1068     		ldr	r0, [r2]	@ unaligned
 16927 1a3c 1860     		str	r0, [r3]	@ unaligned
 16928 1a3e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 16929 1a40 9A80     		strh	r2, [r3, #4]	@ unaligned
 16930 1a42 0EE0     		b	.L634
 16931              	.L633:
2262:..\src/command_processing.c ****                 else
2263:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 16932              		.loc 1 2263 0
 16933 1a44 07F11C03 		add	r3, r7, #28
 16934 1a48 1846     		mov	r0, r3
 16935 1a4a FFF7FEFF 		bl	strlen
 16936 1a4e 0346     		mov	r3, r0
 16937 1a50 1A46     		mov	r2, r3
 16938 1a52 07F11C03 		add	r3, r7, #28
 16939 1a56 1344     		add	r3, r3, r2
 16940 1a58 514A     		ldr	r2, .L662+16
 16941 1a5a 1068     		ldr	r0, [r2]	@ unaligned
 16942 1a5c 1860     		str	r0, [r3]	@ unaligned
 16943 1a5e 1279     		ldrb	r2, [r2, #4]
 16944 1a60 1A71     		strb	r2, [r3, #4]
 16945              	.L634:
2264:..\src/command_processing.c ****                 strcat(str, "\tTemperature: ");
 16946              		.loc 1 2264 0
 16947 1a62 07F11C03 		add	r3, r7, #28
 16948 1a66 1846     		mov	r0, r3
 16949 1a68 FFF7FEFF 		bl	strlen
 16950 1a6c 0346     		mov	r3, r0
 16951 1a6e 1A46     		mov	r2, r3
 16952 1a70 07F11C03 		add	r3, r7, #28
 16953 1a74 1344     		add	r3, r3, r2
 16954 1a76 4E4A     		ldr	r2, .L662+32
 16955 1a78 1C46     		mov	r4, r3
 16956 1a7a 1346     		mov	r3, r2
 16957 1a7c 07CB     		ldmia	r3!, {r0, r1, r2}
 16958 1a7e 2060     		str	r0, [r4]	@ unaligned
 16959 1a80 6160     		str	r1, [r4, #4]	@ unaligned
 16960 1a82 A260     		str	r2, [r4, #8]	@ unaligned
 16961 1a84 1A88     		ldrh	r2, [r3]	@ unaligned
 16962 1a86 9B78     		ldrb	r3, [r3, #2]
 16963 1a88 A281     		strh	r2, [r4, #12]	@ unaligned
 16964 1a8a A373     		strb	r3, [r4, #14]
2265:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 16965              		.loc 1 2265 0
 16966 1a8c 404A     		ldr	r2, .L662
 16967 1a8e D7F89430 		ldr	r3, [r7, #148]
 16968 1a92 1344     		add	r3, r3, r2
 16969 1a94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16970 1a96 1946     		mov	r1, r3
 16971 1a98 D7F88C20 		ldr	r2, [r7, #140]
 16972 1a9c 0B46     		mov	r3, r1
 16973 1a9e 9B00     		lsls	r3, r3, #2
 16974 1aa0 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 377


 16975 1aa2 1344     		add	r3, r3, r2
 16976 1aa4 03F20623 		addw	r3, r3, #518
 16977 1aa8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16978 1aaa 002B     		cmp	r3, #0
 16979 1aac 0FD0     		beq	.L635
2266:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 16980              		.loc 1 2266 0
 16981 1aae 07F11C03 		add	r3, r7, #28
 16982 1ab2 1846     		mov	r0, r3
 16983 1ab4 FFF7FEFF 		bl	strlen
 16984 1ab8 0346     		mov	r3, r0
 16985 1aba 1A46     		mov	r2, r3
 16986 1abc 07F11C03 		add	r3, r7, #28
 16987 1ac0 1344     		add	r3, r3, r2
 16988 1ac2 364A     		ldr	r2, .L662+12
 16989 1ac4 1068     		ldr	r0, [r2]	@ unaligned
 16990 1ac6 1860     		str	r0, [r3]	@ unaligned
 16991 1ac8 9288     		ldrh	r2, [r2, #4]	@ unaligned
 16992 1aca 9A80     		strh	r2, [r3, #4]	@ unaligned
 16993 1acc 0EE0     		b	.L636
 16994              	.L635:
2267:..\src/command_processing.c ****                 else
2268:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 16995              		.loc 1 2268 0
 16996 1ace 07F11C03 		add	r3, r7, #28
 16997 1ad2 1846     		mov	r0, r3
 16998 1ad4 FFF7FEFF 		bl	strlen
 16999 1ad8 0346     		mov	r3, r0
 17000 1ada 1A46     		mov	r2, r3
 17001 1adc 07F11C03 		add	r3, r7, #28
 17002 1ae0 1344     		add	r3, r3, r2
 17003 1ae2 2F4A     		ldr	r2, .L662+16
 17004 1ae4 1068     		ldr	r0, [r2]	@ unaligned
 17005 1ae6 1860     		str	r0, [r3]	@ unaligned
 17006 1ae8 1279     		ldrb	r2, [r2, #4]
 17007 1aea 1A71     		strb	r2, [r3, #4]
 17008              	.L636:
2269:..\src/command_processing.c ****                      
2270:..\src/command_processing.c ****                 strcat(info_string, str);
 17009              		.loc 1 2270 0 discriminator 2
 17010 1aec 07F11C03 		add	r3, r7, #28
 17011 1af0 1946     		mov	r1, r3
 17012 1af2 7869     		ldr	r0, [r7, #20]
 17013 1af4 FFF7FEFF 		bl	strcat
2240:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17014              		.loc 1 2240 0 discriminator 2
 17015 1af8 D7F89430 		ldr	r3, [r7, #148]
 17016 1afc 0133     		adds	r3, r3, #1
 17017 1afe C7F89430 		str	r3, [r7, #148]
 17018              	.L626:
2240:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17019              		.loc 1 2240 0 is_stmt 0 discriminator 1
 17020 1b02 2C4B     		ldr	r3, .L662+36
 17021 1b04 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17022 1b06 1A46     		mov	r2, r3
 17023 1b08 D7F89430 		ldr	r3, [r7, #148]
 17024 1b0c 9A42     		cmp	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 378


 17025 1b0e 3FF793AE 		bgt	.L637
2271:..\src/command_processing.c ****             }       
2272:..\src/command_processing.c ****             
2273:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17026              		.loc 1 2273 0 is_stmt 1
 17027 1b12 7869     		ldr	r0, [r7, #20]
 17028 1b14 FFF7FEFF 		bl	strlen
 17029 1b18 0346     		mov	r3, r0
 17030 1b1a 1A46     		mov	r2, r3
 17031 1b1c 7B69     		ldr	r3, [r7, #20]
 17032 1b1e 1344     		add	r3, r3, r2
 17033 1b20 254A     		ldr	r2, .L662+40
 17034 1b22 1188     		ldrh	r1, [r2]	@ unaligned
 17035 1b24 9278     		ldrb	r2, [r2, #2]
 17036 1b26 1980     		strh	r1, [r3]	@ unaligned
 17037 1b28 9A70     		strb	r2, [r3, #2]
2274:..\src/command_processing.c ****           
2275:..\src/command_processing.c ****             IMU_reading_info(info_string);
 17038              		.loc 1 2275 0
 17039 1b2a 7869     		ldr	r0, [r7, #20]
 17040 1b2c FFF7FEFF 		bl	IMU_reading_info
 17041              	.L625:
2276:..\src/command_processing.c ****         }
2277:..\src/command_processing.c ****         
2278:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17042              		.loc 1 2278 0
 17043 1b30 7869     		ldr	r0, [r7, #20]
 17044 1b32 FFF7FEFF 		bl	strlen
 17045 1b36 0346     		mov	r3, r0
 17046 1b38 1A46     		mov	r2, r3
 17047 1b3a 7B69     		ldr	r3, [r7, #20]
 17048 1b3c 1344     		add	r3, r3, r2
 17049 1b3e 1E4A     		ldr	r2, .L662+40
 17050 1b40 1188     		ldrh	r1, [r2]	@ unaligned
 17051 1b42 9278     		ldrb	r2, [r2, #2]
 17052 1b44 1980     		strh	r1, [r3]	@ unaligned
 17053 1b46 9A70     		strb	r2, [r3, #2]
2279:..\src/command_processing.c **** 
2280:..\src/command_processing.c **** #ifdef GENERIC_FW   
2281:..\src/command_processing.c ****         int j;
2282:..\src/command_processing.c ****         strcat(info_string, "ENCODER CONFIGURATION\r\n");
2283:..\src/command_processing.c ****         for (i = 0; i < N_ENCODER_LINE_MAX; i++) {
2284:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
2285:..\src/command_processing.c ****             strcat(info_string, str);
2286:..\src/command_processing.c ****             if (MEM_P->dev.right_left == i) {
2287:..\src/command_processing.c ****                 sprintf(str, " [%s HAND main encoder line]", (MEM_P->dev.right_left?"LEFT":"RIGHT")
2288:..\src/command_processing.c ****                 strcat(info_string, str);
2289:..\src/command_processing.c ****             }
2290:..\src/command_processing.c ****             strcat(info_string, "\r\n");
2291:..\src/command_processing.c ****             if (N_Encoder_Line_Connected[i] > 0) {
2292:..\src/command_processing.c ****                 strcat(info_string, "Raw value [status]:\r\n");
2293:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
2294:..\src/command_processing.c ****                     sprintf(str, "%d\t[%s]\r\n", (uint16) Encoder_Value[i][j], (Encoder_Check[i][j]
2295:..\src/command_processing.c ****                     strcat(info_string, str);
2296:..\src/command_processing.c ****                 }
2297:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
2298:..\src/command_processing.c ****             }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 379


2299:..\src/command_processing.c ****         }
2300:..\src/command_processing.c **** #endif   
2301:..\src/command_processing.c ****         
2302:..\src/command_processing.c **** #ifdef MASTER_FW
2303:..\src/command_processing.c ****         if (MEM_P->MS.slave_comm_active)
 17054              		.loc 1 2303 0
 17055 1b48 D7F88C30 		ldr	r3, [r7, #140]
 17056 1b4c 93F8C032 		ldrb	r3, [r3, #704]	@ zero_extendqisi2
 17057 1b50 002B     		cmp	r3, #0
 17058 1b52 35D0     		beq	.L638
2304:..\src/command_processing.c ****             strcat(info_string, "Slave communication active: YES\r\n");
 17059              		.loc 1 2304 0
 17060 1b54 7869     		ldr	r0, [r7, #20]
 17061 1b56 FFF7FEFF 		bl	strlen
 17062 1b5a 0346     		mov	r3, r0
 17063 1b5c 1A46     		mov	r2, r3
 17064 1b5e 7B69     		ldr	r3, [r7, #20]
 17065 1b60 1344     		add	r3, r3, r2
 17066 1b62 164A     		ldr	r2, .L662+44
 17067 1b64 1446     		mov	r4, r2
 17068 1b66 9E46     		mov	lr, r3
 17069 1b68 04F1200C 		add	ip, r4, #32
 17070              	.L639:
 17071 1b6c 7546     		mov	r5, lr
 17072 1b6e 2646     		mov	r6, r4
 17073 1b70 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 17074 1b72 2860     		str	r0, [r5]	@ unaligned
 17075 1b74 6960     		str	r1, [r5, #4]	@ unaligned
 17076 1b76 AA60     		str	r2, [r5, #8]	@ unaligned
 17077 1b78 EB60     		str	r3, [r5, #12]	@ unaligned
 17078 1b7a 1034     		adds	r4, r4, #16
 17079 1b7c 0EF1100E 		add	lr, lr, #16
 17080 1b80 6445     		cmp	r4, ip
 17081 1b82 F3D1     		bne	.L639
 17082 1b84 7246     		mov	r2, lr
 17083 1b86 2346     		mov	r3, r4
 17084 1b88 1B88     		ldrh	r3, [r3]	@ unaligned
 17085 1b8a 1380     		strh	r3, [r2]	@ unaligned
 17086 1b8c 34E0     		b	.L640
 17087              	.L663:
 17088 1b8e 00BF     		.align	2
 17089              	.L662:
 17090 1b90 00000000 		.word	IMU_connected
 17091 1b94 AC180000 		.word	.LC235
 17092 1b98 C0180000 		.word	.LC236
 17093 1b9c 90120000 		.word	.LC170
 17094 1ba0 98120000 		.word	.LC171
 17095 1ba4 D4180000 		.word	.LC237
 17096 1ba8 E4180000 		.word	.LC238
 17097 1bac F8180000 		.word	.LC239
 17098 1bb0 08190000 		.word	.LC240
 17099 1bb4 00000000 		.word	N_IMU_Connected
 17100 1bb8 A8100000 		.word	.LC147
 17101 1bbc 18190000 		.word	.LC241
 17102              	.L638:
2305:..\src/command_processing.c ****         else
2306:..\src/command_processing.c ****             strcat(info_string, "Slave communication active: NO\r\n");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 380


 17103              		.loc 1 2306 0
 17104 1bc0 7869     		ldr	r0, [r7, #20]
 17105 1bc2 FFF7FEFF 		bl	strlen
 17106 1bc6 0346     		mov	r3, r0
 17107 1bc8 1A46     		mov	r2, r3
 17108 1bca 7B69     		ldr	r3, [r7, #20]
 17109 1bcc 1344     		add	r3, r3, r2
 17110 1bce 244A     		ldr	r2, .L664
 17111 1bd0 1446     		mov	r4, r2
 17112 1bd2 9E46     		mov	lr, r3
 17113 1bd4 04F1200C 		add	ip, r4, #32
 17114              	.L641:
 17115 1bd8 7546     		mov	r5, lr
 17116 1bda 2646     		mov	r6, r4
 17117 1bdc 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 17118 1bde 2860     		str	r0, [r5]	@ unaligned
 17119 1be0 6960     		str	r1, [r5, #4]	@ unaligned
 17120 1be2 AA60     		str	r2, [r5, #8]	@ unaligned
 17121 1be4 EB60     		str	r3, [r5, #12]	@ unaligned
 17122 1be6 1034     		adds	r4, r4, #16
 17123 1be8 0EF1100E 		add	lr, lr, #16
 17124 1bec 6445     		cmp	r4, ip
 17125 1bee F3D1     		bne	.L641
 17126 1bf0 7346     		mov	r3, lr
 17127 1bf2 2246     		mov	r2, r4
 17128 1bf4 1278     		ldrb	r2, [r2]
 17129 1bf6 1A70     		strb	r2, [r3]
 17130              	.L640:
2307:..\src/command_processing.c **** 
2308:..\src/command_processing.c ****         sprintf(str, "Slave ID: %d\r\n", (int)MEM_P->MS.slave_ID);
 17131              		.loc 1 2308 0
 17132 1bf8 D7F88C30 		ldr	r3, [r7, #140]
 17133 1bfc 93F8C132 		ldrb	r3, [r3, #705]	@ zero_extendqisi2
 17134 1c00 1A46     		mov	r2, r3
 17135 1c02 07F11C03 		add	r3, r7, #28
 17136 1c06 1749     		ldr	r1, .L664+4
 17137 1c08 1846     		mov	r0, r3
 17138 1c0a FFF7FEFF 		bl	sprintf
2309:..\src/command_processing.c ****         strcat(info_string, str);
 17139              		.loc 1 2309 0
 17140 1c0e 07F11C03 		add	r3, r7, #28
 17141 1c12 1946     		mov	r1, r3
 17142 1c14 7869     		ldr	r0, [r7, #20]
 17143 1c16 FFF7FEFF 		bl	strcat
2310:..\src/command_processing.c **** #endif
2311:..\src/command_processing.c **** 
2312:..\src/command_processing.c ****         sprintf(str, "Last FW cycle time: %u us\r\n", (uint16)timer_value0 - (uint16)timer_value);
 17144              		.loc 1 2312 0
 17145 1c1a 134B     		ldr	r3, .L664+8
 17146 1c1c 1B88     		ldrh	r3, [r3]
 17147 1c1e 1A46     		mov	r2, r3
 17148 1c20 124B     		ldr	r3, .L664+12
 17149 1c22 1B88     		ldrh	r3, [r3]
 17150 1c24 D21A     		subs	r2, r2, r3
 17151 1c26 07F11C03 		add	r3, r7, #28
 17152 1c2a 1149     		ldr	r1, .L664+16
 17153 1c2c 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 381


 17154 1c2e FFF7FEFF 		bl	sprintf
2313:..\src/command_processing.c ****         strcat(info_string, str);
 17155              		.loc 1 2313 0
 17156 1c32 07F11C03 		add	r3, r7, #28
 17157 1c36 1946     		mov	r1, r3
 17158 1c38 7869     		ldr	r0, [r7, #20]
 17159 1c3a FFF7FEFF 		bl	strcat
2314:..\src/command_processing.c ****   
2315:..\src/command_processing.c ****         strcat(info_string, "\r\n\0");      // End of info_string
 17160              		.loc 1 2315 0
 17161 1c3e 7869     		ldr	r0, [r7, #20]
 17162 1c40 FFF7FEFF 		bl	strlen
 17163 1c44 0346     		mov	r3, r0
 17164 1c46 1A46     		mov	r2, r3
 17165 1c48 7B69     		ldr	r3, [r7, #20]
 17166 1c4a 1344     		add	r3, r3, r2
 17167 1c4c 094A     		ldr	r2, .L664+20
 17168 1c4e 1188     		ldrh	r1, [r2]	@ unaligned
 17169 1c50 9278     		ldrb	r2, [r2, #2]
 17170 1c52 1980     		strh	r1, [r3]	@ unaligned
 17171 1c54 9A70     		strb	r2, [r3, #2]
 17172              	.L643:
 17173              	.LBE16:
2316:..\src/command_processing.c ****     }
2317:..\src/command_processing.c **** }
 17174              		.loc 1 2317 0
 17175 1c56 00BF     		nop
 17176 1c58 9C37     		adds	r7, r7, #156
 17177              		.cfi_def_cfa_offset 36
 17178 1c5a BD46     		mov	sp, r7
 17179              		.cfi_def_cfa_register 13
 17180              		@ sp needed
 17181 1c5c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 17182              	.L665:
 17183              		.align	2
 17184              	.L664:
 17185 1c60 3C190000 		.word	.LC242
 17186 1c64 60190000 		.word	.LC243
 17187 1c68 00000000 		.word	timer_value0
 17188 1c6c 00000000 		.word	timer_value
 17189 1c70 70190000 		.word	.LC244
 17190 1c74 8C190000 		.word	.LC245
 17191              		.cfi_endproc
 17192              	.LFE72:
 17193              		.size	prepare_generic_info, .-prepare_generic_info
 17194              		.section	.rodata
 17195              		.align	2
 17196              	.LC246:
 17197 1990 0D0A5553 		.ascii	"\015\012USAGE STATISTICS\015\012\000"
 17197      41474520 
 17197      53544154 
 17197      49535449 
 17197      43530D0A 
 17198 19a5 000000   		.align	2
 17199              	.LC247:
 17200 19a8 44617465 		.ascii	"Date of HW maintenance: %02d/%02d/20%02d\015\012\000"
 17200      206F6620 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 382


 17200      4857206D 
 17200      61696E74 
 17200      656E616E 
 17201 19d3 00       		.align	2
 17202              	.LC248:
 17203 19d4 44617465 		.ascii	"Date of usage stats period begin: %02d/%02d/20%02d\015"
 17203      206F6620 
 17203      75736167 
 17203      65207374 
 17203      61747320 
 17204 1a07 0A00     		.ascii	"\012\000"
 17205 1a09 000000   		.align	2
 17206              	.LC249:
 17207 1a0c 4C617374 		.ascii	"Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\015"
 17207      20636865 
 17207      636B6564 
 17207      2054696D 
 17207      653A2025 
 17208 1a3f 0A00     		.ascii	"\012\000"
 17209 1a41 000000   		.align	2
 17210              	.LC250:
 17211 1a44 506F7369 		.ascii	"Positions histogram (ticks):\015\012\000"
 17211      74696F6E 
 17211      73206869 
 17211      73746F67 
 17211      72616D20 
 17212 1a63 00       		.align	2
 17213              	.LC251:
 17214 1a64 42696E20 		.ascii	"Bin %d [%d-%d]: %lu\015\012\000"
 17214      2564205B 
 17214      25642D25 
 17214      645D3A20 
 17214      256C750D 
 17215 1a7a 0000     		.align	2
 17216              	.LC252:
 17217 1a7c 43757272 		.ascii	"Current histogram (mA):\015\012\000"
 17217      656E7420 
 17217      68697374 
 17217      6F677261 
 17217      6D20286D 
 17218 1a96 0000     		.align	2
 17219              	.LC253:
 17220 1a98 54687265 		.ascii	"Threshold %d [%d-%d]: %lu\015\012\000"
 17220      73686F6C 
 17220      64202564 
 17220      205B2564 
 17220      2D25645D 
 17221              		.align	2
 17222              	.LC254:
 17223 1ab4 454D4720 		.ascii	"EMG activations counter: %lu, %lu\000"
 17223      61637469 
 17223      76617469 
 17223      6F6E7320 
 17223      636F756E 
 17224 1ad6 0000     		.align	2
 17225              	.LC255:
 17226 1ad8 52657374 		.ascii	"Rest position occurrences: %lu\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 383


 17226      20706F73 
 17226      6974696F 
 17226      6E206F63 
 17226      63757272 
 17227 1af7 00       		.align	2
 17228              	.LC256:
 17229 1af8 416E676C 		.ascii	"Angle total displacement (ticks): %lu\000"
 17229      6520746F 
 17229      74616C20 
 17229      64697370 
 17229      6C616365 
 17230 1b1e 0000     		.align	2
 17231              	.LC257:
 17232 1b20 546F7461 		.ascii	"Total power on time (sec): %lu\000"
 17232      6C20706F 
 17232      77657220 
 17232      6F6E2074 
 17232      696D6520 
 17233 1b3f 00       		.align	2
 17234              	.LC258:
 17235 1b40 546F7461 		.ascii	"Total rest position time (sec): %lu\000"
 17235      6C207265 
 17235      73742070 
 17235      6F736974 
 17235      696F6E20 
 17236              		.section	.text.prepare_counter_info,"ax",%progbits
 17237              		.align	2
 17238              		.global	prepare_counter_info
 17239              		.thumb
 17240              		.thumb_func
 17241              		.type	prepare_counter_info, %function
 17242              	prepare_counter_info:
 17243              	.LFB73:
2318:..\src/command_processing.c **** 
2319:..\src/command_processing.c **** //==============================================================================
2320:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
2321:..\src/command_processing.c **** //==============================================================================
2322:..\src/command_processing.c **** 
2323:..\src/command_processing.c **** void prepare_counter_info(char *info_string)
2324:..\src/command_processing.c **** {
 17244              		.loc 1 2324 0
 17245              		.cfi_startproc
 17246              		@ args = 0, pretend = 0, frame = 128
 17247              		@ frame_needed = 1, uses_anonymous_args = 0
 17248 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 17249              		.cfi_def_cfa_offset 20
 17250              		.cfi_offset 4, -20
 17251              		.cfi_offset 5, -16
 17252              		.cfi_offset 6, -12
 17253              		.cfi_offset 7, -8
 17254              		.cfi_offset 14, -4
 17255 0002 A5B0     		sub	sp, sp, #148
 17256              		.cfi_def_cfa_offset 168
 17257 0004 04AF     		add	r7, sp, #16
 17258              		.cfi_def_cfa 7, 152
 17259 0006 7860     		str	r0, [r7, #4]
2325:..\src/command_processing.c ****     char str[100];  
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 384


2326:..\src/command_processing.c ****     int i;
2327:..\src/command_processing.c ****     int step;
2328:..\src/command_processing.c **** 
2329:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 17260              		.loc 1 2329 0
 17261 0008 7D4B     		ldr	r3, .L672
 17262 000a BB67     		str	r3, [r7, #120]
2330:..\src/command_processing.c ****     struct st_motor* MOT = &(MEM_P->motor[0]);      // Default motor
 17263              		.loc 1 2330 0
 17264 000c BB6F     		ldr	r3, [r7, #120]
 17265 000e B033     		adds	r3, r3, #176
 17266 0010 7B67     		str	r3, [r7, #116]
2331:..\src/command_processing.c ****     uint8 ENC_L = MOT->encoder_line;                // Associated encoder line
 17267              		.loc 1 2331 0
 17268 0012 7B6F     		ldr	r3, [r7, #116]
 17269 0014 93F86030 		ldrb	r3, [r3, #96]
 17270 0018 87F87330 		strb	r3, [r7, #115]
2332:..\src/command_processing.c ****     
2333:..\src/command_processing.c ****     strcat(info_string, "\r\nUSAGE STATISTICS\r\n");
 17271              		.loc 1 2333 0
 17272 001c 7868     		ldr	r0, [r7, #4]
 17273 001e FFF7FEFF 		bl	strlen
 17274 0022 0346     		mov	r3, r0
 17275 0024 1A46     		mov	r2, r3
 17276 0026 7B68     		ldr	r3, [r7, #4]
 17277 0028 1344     		add	r3, r3, r2
 17278 002a 764A     		ldr	r2, .L672+4
 17279 002c 1D46     		mov	r5, r3
 17280 002e 1446     		mov	r4, r2
 17281 0030 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17282 0032 2860     		str	r0, [r5]	@ unaligned
 17283 0034 6960     		str	r1, [r5, #4]	@ unaligned
 17284 0036 AA60     		str	r2, [r5, #8]	@ unaligned
 17285 0038 EB60     		str	r3, [r5, #12]	@ unaligned
 17286 003a 2068     		ldr	r0, [r4]	@ unaligned
 17287 003c 2861     		str	r0, [r5, #16]	@ unaligned
 17288 003e 2379     		ldrb	r3, [r4, #4]
 17289 0040 2B75     		strb	r3, [r5, #20]
2334:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17290              		.loc 1 2334 0
 17291 0042 7868     		ldr	r0, [r7, #4]
 17292 0044 FFF7FEFF 		bl	strlen
 17293 0048 0346     		mov	r3, r0
 17294 004a 1A46     		mov	r2, r3
 17295 004c 7B68     		ldr	r3, [r7, #4]
 17296 004e 1344     		add	r3, r3, r2
 17297 0050 6D4A     		ldr	r2, .L672+8
 17298 0052 1188     		ldrh	r1, [r2]	@ unaligned
 17299 0054 9278     		ldrb	r2, [r2, #2]
 17300 0056 1980     		strh	r1, [r3]	@ unaligned
 17301 0058 9A70     		strb	r2, [r3, #2]
2335:..\src/command_processing.c ****     
2336:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 17302              		.loc 1 2336 0
 17303 005a BB6F     		ldr	r3, [r7, #120]
 17304 005c 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 17305 0060 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 385


 17306 0062 BB6F     		ldr	r3, [r7, #120]
 17307 0064 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 17308 0068 1946     		mov	r1, r3
 17309 006a BB6F     		ldr	r3, [r7, #120]
 17310 006c 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 17311 0070 07F10800 		add	r0, r7, #8
 17312 0074 0093     		str	r3, [sp]
 17313 0076 0B46     		mov	r3, r1
 17314 0078 6449     		ldr	r1, .L672+12
 17315 007a FFF7FEFF 		bl	sprintf
2337:..\src/command_processing.c ****     strcat(info_string, str);
 17316              		.loc 1 2337 0
 17317 007e 07F10803 		add	r3, r7, #8
 17318 0082 1946     		mov	r1, r3
 17319 0084 7868     		ldr	r0, [r7, #4]
 17320 0086 FFF7FEFF 		bl	strcat
2338:..\src/command_processing.c ****     
2339:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 17321              		.loc 1 2339 0
 17322 008a BB6F     		ldr	r3, [r7, #120]
 17323 008c 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 17324 0090 1A46     		mov	r2, r3
 17325 0092 BB6F     		ldr	r3, [r7, #120]
 17326 0094 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 17327 0098 1946     		mov	r1, r3
 17328 009a BB6F     		ldr	r3, [r7, #120]
 17329 009c 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 17330 00a0 07F10800 		add	r0, r7, #8
 17331 00a4 0093     		str	r3, [sp]
 17332 00a6 0B46     		mov	r3, r1
 17333 00a8 5949     		ldr	r1, .L672+16
 17334 00aa FFF7FEFF 		bl	sprintf
2340:..\src/command_processing.c ****     strcat(info_string, str);
 17335              		.loc 1 2340 0
 17336 00ae 07F10803 		add	r3, r7, #8
 17337 00b2 1946     		mov	r1, r3
 17338 00b4 7868     		ldr	r0, [r7, #4]
 17339 00b6 FFF7FEFF 		bl	strcat
2341:..\src/command_processing.c ****             
2342:..\src/command_processing.c ****     sprintf(str, "Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\r\n", (int)MEM_P->exp.curr_tim
 17340              		.loc 1 2342 0
 17341 00ba BB6F     		ldr	r3, [r7, #120]
 17342 00bc 93F82032 		ldrb	r3, [r3, #544]	@ zero_extendqisi2
 17343 00c0 1D46     		mov	r5, r3
 17344 00c2 BB6F     		ldr	r3, [r7, #120]
 17345 00c4 93F82132 		ldrb	r3, [r3, #545]	@ zero_extendqisi2
 17346 00c8 1E46     		mov	r6, r3
 17347 00ca BB6F     		ldr	r3, [r7, #120]
 17348 00cc 93F82232 		ldrb	r3, [r3, #546]	@ zero_extendqisi2
 17349 00d0 1A46     		mov	r2, r3
 17350 00d2 BB6F     		ldr	r3, [r7, #120]
 17351 00d4 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 17352 00d8 1946     		mov	r1, r3
 17353 00da BB6F     		ldr	r3, [r7, #120]
 17354 00dc 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 17355 00e0 1C46     		mov	r4, r3
 17356 00e2 BB6F     		ldr	r3, [r7, #120]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 386


 17357 00e4 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 17358 00e8 07F10800 		add	r0, r7, #8
 17359 00ec 0393     		str	r3, [sp, #12]
 17360 00ee 0294     		str	r4, [sp, #8]
 17361 00f0 0191     		str	r1, [sp, #4]
 17362 00f2 0092     		str	r2, [sp]
 17363 00f4 3346     		mov	r3, r6
 17364 00f6 2A46     		mov	r2, r5
 17365 00f8 4649     		ldr	r1, .L672+20
 17366 00fa FFF7FEFF 		bl	sprintf
2343:..\src/command_processing.c ****     strcat(info_string, str);
 17367              		.loc 1 2343 0
 17368 00fe 07F10803 		add	r3, r7, #8
 17369 0102 1946     		mov	r1, r3
 17370 0104 7868     		ldr	r0, [r7, #4]
 17371 0106 FFF7FEFF 		bl	strcat
2344:..\src/command_processing.c ****     
2345:..\src/command_processing.c ****     sprintf(str, "Positions histogram (ticks):\r\n");
 17372              		.loc 1 2345 0
 17373 010a 07F10803 		add	r3, r7, #8
 17374 010e 424A     		ldr	r2, .L672+24
 17375 0110 1C46     		mov	r4, r3
 17376 0112 1546     		mov	r5, r2
 17377 0114 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17378 0116 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 17379 0118 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 17380 011c 07C4     		stmia	r4!, {r0, r1, r2}
 17381 011e 2380     		strh	r3, [r4]	@ movhi
 17382 0120 0234     		adds	r4, r4, #2
 17383 0122 1B0C     		lsrs	r3, r3, #16
 17384 0124 2370     		strb	r3, [r4]
2346:..\src/command_processing.c ****     strcat(info_string, str);
 17385              		.loc 1 2346 0
 17386 0126 07F10803 		add	r3, r7, #8
 17387 012a 1946     		mov	r1, r3
 17388 012c 7868     		ldr	r0, [r7, #4]
 17389 012e FFF7FEFF 		bl	strcat
2347:..\src/command_processing.c ****     step = ( (int)(MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]) / 10);
 17390              		.loc 1 2347 0
 17391 0132 7B6F     		ldr	r3, [r7, #116]
 17392 0134 996B     		ldr	r1, [r3, #56]
 17393 0136 97F87320 		ldrb	r2, [r7, #115]	@ zero_extendqisi2
 17394 013a B86F     		ldr	r0, [r7, #120]
 17395 013c 1346     		mov	r3, r2
 17396 013e 5B00     		lsls	r3, r3, #1
 17397 0140 1344     		add	r3, r3, r2
 17398 0142 1B01     		lsls	r3, r3, #4
 17399 0144 0344     		add	r3, r3, r0
 17400 0146 03F29513 		addw	r3, r3, #405
 17401 014a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17402 014c 41FA03F3 		asr	r3, r1, r3
 17403 0150 324A     		ldr	r2, .L672+28
 17404 0152 82FB0312 		smull	r1, r2, r2, r3
 17405 0156 9210     		asrs	r2, r2, #2
 17406 0158 DB17     		asrs	r3, r3, #31
 17407 015a D31A     		subs	r3, r2, r3
 17408 015c FB66     		str	r3, [r7, #108]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 387


2348:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 17409              		.loc 1 2348 0
 17410 015e 0123     		movs	r3, #1
 17411 0160 FB67     		str	r3, [r7, #124]
 17412 0162 21E0     		b	.L667
 17413              	.L668:
2349:..\src/command_processing.c ****         sprintf(str, "Bin %d [%d-%d]: %lu\r\n", i, step*(i-1)+1, step*(i), MEM_P->cnt.position_hist
 17414              		.loc 1 2349 0 discriminator 3
 17415 0164 FB6F     		ldr	r3, [r7, #124]
 17416 0166 013B     		subs	r3, r3, #1
 17417 0168 FA6E     		ldr	r2, [r7, #108]
 17418 016a 02FB03F3 		mul	r3, r2, r3
 17419 016e 5C1C     		adds	r4, r3, #1
 17420 0170 FB6E     		ldr	r3, [r7, #108]
 17421 0172 FA6F     		ldr	r2, [r7, #124]
 17422 0174 02FB03F3 		mul	r3, r2, r3
 17423 0178 FA6F     		ldr	r2, [r7, #124]
 17424 017a 511E     		subs	r1, r2, #1
 17425 017c BA6F     		ldr	r2, [r7, #120]
 17426 017e 0631     		adds	r1, r1, #6
 17427 0180 52F82120 		ldr	r2, [r2, r1, lsl #2]
 17428 0184 07F10800 		add	r0, r7, #8
 17429 0188 0192     		str	r2, [sp, #4]
 17430 018a 0093     		str	r3, [sp]
 17431 018c 2346     		mov	r3, r4
 17432 018e FA6F     		ldr	r2, [r7, #124]
 17433 0190 2349     		ldr	r1, .L672+32
 17434 0192 FFF7FEFF 		bl	sprintf
2350:..\src/command_processing.c ****         strcat(info_string, str);
 17435              		.loc 1 2350 0 discriminator 3
 17436 0196 07F10803 		add	r3, r7, #8
 17437 019a 1946     		mov	r1, r3
 17438 019c 7868     		ldr	r0, [r7, #4]
 17439 019e FFF7FEFF 		bl	strcat
2348:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 17440              		.loc 1 2348 0 discriminator 3
 17441 01a2 FB6F     		ldr	r3, [r7, #124]
 17442 01a4 0133     		adds	r3, r3, #1
 17443 01a6 FB67     		str	r3, [r7, #124]
 17444              	.L667:
2348:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 17445              		.loc 1 2348 0 is_stmt 0 discriminator 1
 17446 01a8 FB6F     		ldr	r3, [r7, #124]
 17447 01aa 0A2B     		cmp	r3, #10
 17448 01ac DADD     		ble	.L668
2351:..\src/command_processing.c ****     }
2352:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17449              		.loc 1 2352 0 is_stmt 1
 17450 01ae 7868     		ldr	r0, [r7, #4]
 17451 01b0 FFF7FEFF 		bl	strlen
 17452 01b4 0346     		mov	r3, r0
 17453 01b6 1A46     		mov	r2, r3
 17454 01b8 7B68     		ldr	r3, [r7, #4]
 17455 01ba 1344     		add	r3, r3, r2
 17456 01bc 124A     		ldr	r2, .L672+8
 17457 01be 1188     		ldrh	r1, [r2]	@ unaligned
 17458 01c0 9278     		ldrb	r2, [r2, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 388


 17459 01c2 1980     		strh	r1, [r3]	@ unaligned
 17460 01c4 9A70     		strb	r2, [r3, #2]
2353:..\src/command_processing.c ****     
2354:..\src/command_processing.c ****     sprintf(str, "Current histogram (mA):\r\n");
 17461              		.loc 1 2354 0
 17462 01c6 07F10803 		add	r3, r7, #8
 17463 01ca 164A     		ldr	r2, .L672+36
 17464 01cc 1C46     		mov	r4, r3
 17465 01ce 1546     		mov	r5, r2
 17466 01d0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17467 01d2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 17468 01d4 95E80700 		ldmia	r5, {r0, r1, r2}
 17469 01d8 03C4     		stmia	r4!, {r0, r1}
 17470 01da 2280     		strh	r2, [r4]	@ movhi
2355:..\src/command_processing.c ****     strcat(info_string, str);
 17471              		.loc 1 2355 0
 17472 01dc 07F10803 		add	r3, r7, #8
 17473 01e0 1946     		mov	r1, r3
 17474 01e2 7868     		ldr	r0, [r7, #4]
 17475 01e4 FFF7FEFF 		bl	strcat
2356:..\src/command_processing.c ****     step = ( (int)(MOT->current_limit) / 4);
 17476              		.loc 1 2356 0
 17477 01e8 7B6F     		ldr	r3, [r7, #116]
 17478 01ea B3F95C30 		ldrsh	r3, [r3, #92]
 17479 01ee 002B     		cmp	r3, #0
 17480 01f0 00DA     		bge	.L669
 17481 01f2 0333     		adds	r3, r3, #3
 17482              	.L669:
 17483 01f4 9B10     		asrs	r3, r3, #2
 17484 01f6 1BB2     		sxth	r3, r3
 17485 01f8 FB66     		str	r3, [r7, #108]
2357:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 17486              		.loc 1 2357 0
 17487 01fa 0123     		movs	r3, #1
 17488 01fc FB67     		str	r3, [r7, #124]
 17489 01fe 34E0     		b	.L670
 17490              	.L673:
 17491              		.align	2
 17492              	.L672:
 17493 0200 00000000 		.word	g_mem
 17494 0204 90190000 		.word	.LC246
 17495 0208 A8100000 		.word	.LC147
 17496 020c A8190000 		.word	.LC247
 17497 0210 D4190000 		.word	.LC248
 17498 0214 0C1A0000 		.word	.LC249
 17499 0218 441A0000 		.word	.LC250
 17500 021c 67666666 		.word	1717986919
 17501 0220 641A0000 		.word	.LC251
 17502 0224 7C1A0000 		.word	.LC252
 17503              	.L671:
2358:..\src/command_processing.c ****         sprintf(str, "Threshold %d [%d-%d]: %lu\r\n", i, step*(i-1), step*(i), MEM_P->cnt.current_h
 17504              		.loc 1 2358 0 discriminator 3
 17505 0228 FB6F     		ldr	r3, [r7, #124]
 17506 022a 013B     		subs	r3, r3, #1
 17507 022c FA6E     		ldr	r2, [r7, #108]
 17508 022e 02FB03F4 		mul	r4, r2, r3
 17509 0232 FB6E     		ldr	r3, [r7, #108]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 389


 17510 0234 FA6F     		ldr	r2, [r7, #124]
 17511 0236 02FB03F3 		mul	r3, r2, r3
 17512 023a FA6F     		ldr	r2, [r7, #124]
 17513 023c 511E     		subs	r1, r2, #1
 17514 023e BA6F     		ldr	r2, [r7, #120]
 17515 0240 1031     		adds	r1, r1, #16
 17516 0242 52F82120 		ldr	r2, [r2, r1, lsl #2]
 17517 0246 07F10800 		add	r0, r7, #8
 17518 024a 0192     		str	r2, [sp, #4]
 17519 024c 0093     		str	r3, [sp]
 17520 024e 2346     		mov	r3, r4
 17521 0250 FA6F     		ldr	r2, [r7, #124]
 17522 0252 5149     		ldr	r1, .L674
 17523 0254 FFF7FEFF 		bl	sprintf
2359:..\src/command_processing.c ****         strcat(info_string, str);
 17524              		.loc 1 2359 0 discriminator 3
 17525 0258 07F10803 		add	r3, r7, #8
 17526 025c 1946     		mov	r1, r3
 17527 025e 7868     		ldr	r0, [r7, #4]
 17528 0260 FFF7FEFF 		bl	strcat
2357:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 17529              		.loc 1 2357 0 discriminator 3
 17530 0264 FB6F     		ldr	r3, [r7, #124]
 17531 0266 0133     		adds	r3, r3, #1
 17532 0268 FB67     		str	r3, [r7, #124]
 17533              	.L670:
2357:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 17534              		.loc 1 2357 0 is_stmt 0 discriminator 1
 17535 026a FB6F     		ldr	r3, [r7, #124]
 17536 026c 042B     		cmp	r3, #4
 17537 026e DBDD     		ble	.L671
2360:..\src/command_processing.c ****     }
2361:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17538              		.loc 1 2361 0 is_stmt 1
 17539 0270 7868     		ldr	r0, [r7, #4]
 17540 0272 FFF7FEFF 		bl	strlen
 17541 0276 0346     		mov	r3, r0
 17542 0278 1A46     		mov	r2, r3
 17543 027a 7B68     		ldr	r3, [r7, #4]
 17544 027c 1344     		add	r3, r3, r2
 17545 027e 474A     		ldr	r2, .L674+4
 17546 0280 1188     		ldrh	r1, [r2]	@ unaligned
 17547 0282 9278     		ldrb	r2, [r2, #2]
 17548 0284 1980     		strh	r1, [r3]	@ unaligned
 17549 0286 9A70     		strb	r2, [r3, #2]
2362:..\src/command_processing.c ****             
2363:..\src/command_processing.c ****     sprintf(str, "EMG activations counter: %lu, %lu", MEM_P->cnt.emg_counter[0], MEM_P->cnt.emg_cou
 17550              		.loc 1 2363 0
 17551 0288 BB6F     		ldr	r3, [r7, #120]
 17552 028a 1A69     		ldr	r2, [r3, #16]
 17553 028c BB6F     		ldr	r3, [r7, #120]
 17554 028e 5B69     		ldr	r3, [r3, #20]
 17555 0290 07F10800 		add	r0, r7, #8
 17556 0294 4249     		ldr	r1, .L674+8
 17557 0296 FFF7FEFF 		bl	sprintf
2364:..\src/command_processing.c ****     strcat(info_string, str);
 17558              		.loc 1 2364 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 390


 17559 029a 07F10803 		add	r3, r7, #8
 17560 029e 1946     		mov	r1, r3
 17561 02a0 7868     		ldr	r0, [r7, #4]
 17562 02a2 FFF7FEFF 		bl	strcat
2365:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17563              		.loc 1 2365 0
 17564 02a6 7868     		ldr	r0, [r7, #4]
 17565 02a8 FFF7FEFF 		bl	strlen
 17566 02ac 0346     		mov	r3, r0
 17567 02ae 1A46     		mov	r2, r3
 17568 02b0 7B68     		ldr	r3, [r7, #4]
 17569 02b2 1344     		add	r3, r3, r2
 17570 02b4 394A     		ldr	r2, .L674+4
 17571 02b6 1188     		ldrh	r1, [r2]	@ unaligned
 17572 02b8 9278     		ldrb	r2, [r2, #2]
 17573 02ba 1980     		strh	r1, [r3]	@ unaligned
 17574 02bc 9A70     		strb	r2, [r3, #2]
2366:..\src/command_processing.c ****     
2367:..\src/command_processing.c ****     sprintf(str, "Rest position occurrences: %lu", MEM_P->cnt.rest_counter);
 17575              		.loc 1 2367 0
 17576 02be BB6F     		ldr	r3, [r7, #120]
 17577 02c0 1A6D     		ldr	r2, [r3, #80]
 17578 02c2 07F10803 		add	r3, r7, #8
 17579 02c6 3749     		ldr	r1, .L674+12
 17580 02c8 1846     		mov	r0, r3
 17581 02ca FFF7FEFF 		bl	sprintf
2368:..\src/command_processing.c ****     strcat(info_string, str);
 17582              		.loc 1 2368 0
 17583 02ce 07F10803 		add	r3, r7, #8
 17584 02d2 1946     		mov	r1, r3
 17585 02d4 7868     		ldr	r0, [r7, #4]
 17586 02d6 FFF7FEFF 		bl	strcat
2369:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17587              		.loc 1 2369 0
 17588 02da 7868     		ldr	r0, [r7, #4]
 17589 02dc FFF7FEFF 		bl	strlen
 17590 02e0 0346     		mov	r3, r0
 17591 02e2 1A46     		mov	r2, r3
 17592 02e4 7B68     		ldr	r3, [r7, #4]
 17593 02e6 1344     		add	r3, r3, r2
 17594 02e8 2C4A     		ldr	r2, .L674+4
 17595 02ea 1188     		ldrh	r1, [r2]	@ unaligned
 17596 02ec 9278     		ldrb	r2, [r2, #2]
 17597 02ee 1980     		strh	r1, [r3]	@ unaligned
 17598 02f0 9A70     		strb	r2, [r3, #2]
2370:..\src/command_processing.c ****     
2371:..\src/command_processing.c ****     sprintf(str, "Angle total displacement (ticks): %lu", MEM_P->cnt.wire_disp);
 17599              		.loc 1 2371 0
 17600 02f2 BB6F     		ldr	r3, [r7, #120]
 17601 02f4 5A6D     		ldr	r2, [r3, #84]
 17602 02f6 07F10803 		add	r3, r7, #8
 17603 02fa 2B49     		ldr	r1, .L674+16
 17604 02fc 1846     		mov	r0, r3
 17605 02fe FFF7FEFF 		bl	sprintf
2372:..\src/command_processing.c ****     strcat(info_string, str);
 17606              		.loc 1 2372 0
 17607 0302 07F10803 		add	r3, r7, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 391


 17608 0306 1946     		mov	r1, r3
 17609 0308 7868     		ldr	r0, [r7, #4]
 17610 030a FFF7FEFF 		bl	strcat
2373:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17611              		.loc 1 2373 0
 17612 030e 7868     		ldr	r0, [r7, #4]
 17613 0310 FFF7FEFF 		bl	strlen
 17614 0314 0346     		mov	r3, r0
 17615 0316 1A46     		mov	r2, r3
 17616 0318 7B68     		ldr	r3, [r7, #4]
 17617 031a 1344     		add	r3, r3, r2
 17618 031c 1F4A     		ldr	r2, .L674+4
 17619 031e 1188     		ldrh	r1, [r2]	@ unaligned
 17620 0320 9278     		ldrb	r2, [r2, #2]
 17621 0322 1980     		strh	r1, [r3]	@ unaligned
 17622 0324 9A70     		strb	r2, [r3, #2]
2374:..\src/command_processing.c ****     
2375:..\src/command_processing.c ****     sprintf(str, "Total power on time (sec): %lu", MEM_P->cnt.total_time_on);
 17623              		.loc 1 2375 0
 17624 0326 BB6F     		ldr	r3, [r7, #120]
 17625 0328 9A6D     		ldr	r2, [r3, #88]
 17626 032a 07F10803 		add	r3, r7, #8
 17627 032e 1F49     		ldr	r1, .L674+20
 17628 0330 1846     		mov	r0, r3
 17629 0332 FFF7FEFF 		bl	sprintf
2376:..\src/command_processing.c ****     strcat(info_string, str);
 17630              		.loc 1 2376 0
 17631 0336 07F10803 		add	r3, r7, #8
 17632 033a 1946     		mov	r1, r3
 17633 033c 7868     		ldr	r0, [r7, #4]
 17634 033e FFF7FEFF 		bl	strcat
2377:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17635              		.loc 1 2377 0
 17636 0342 7868     		ldr	r0, [r7, #4]
 17637 0344 FFF7FEFF 		bl	strlen
 17638 0348 0346     		mov	r3, r0
 17639 034a 1A46     		mov	r2, r3
 17640 034c 7B68     		ldr	r3, [r7, #4]
 17641 034e 1344     		add	r3, r3, r2
 17642 0350 124A     		ldr	r2, .L674+4
 17643 0352 1188     		ldrh	r1, [r2]	@ unaligned
 17644 0354 9278     		ldrb	r2, [r2, #2]
 17645 0356 1980     		strh	r1, [r3]	@ unaligned
 17646 0358 9A70     		strb	r2, [r3, #2]
2378:..\src/command_processing.c ****     
2379:..\src/command_processing.c ****     sprintf(str, "Total rest position time (sec): %lu", MEM_P->cnt.total_time_rest);
 17647              		.loc 1 2379 0
 17648 035a BB6F     		ldr	r3, [r7, #120]
 17649 035c DA6D     		ldr	r2, [r3, #92]
 17650 035e 07F10803 		add	r3, r7, #8
 17651 0362 1349     		ldr	r1, .L674+24
 17652 0364 1846     		mov	r0, r3
 17653 0366 FFF7FEFF 		bl	sprintf
2380:..\src/command_processing.c ****     strcat(info_string, str);
 17654              		.loc 1 2380 0
 17655 036a 07F10803 		add	r3, r7, #8
 17656 036e 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 392


 17657 0370 7868     		ldr	r0, [r7, #4]
 17658 0372 FFF7FEFF 		bl	strcat
2381:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17659              		.loc 1 2381 0
 17660 0376 7868     		ldr	r0, [r7, #4]
 17661 0378 FFF7FEFF 		bl	strlen
 17662 037c 0346     		mov	r3, r0
 17663 037e 1A46     		mov	r2, r3
 17664 0380 7B68     		ldr	r3, [r7, #4]
 17665 0382 1344     		add	r3, r3, r2
 17666 0384 054A     		ldr	r2, .L674+4
 17667 0386 1188     		ldrh	r1, [r2]	@ unaligned
 17668 0388 9278     		ldrb	r2, [r2, #2]
 17669 038a 1980     		strh	r1, [r3]	@ unaligned
 17670 038c 9A70     		strb	r2, [r3, #2]
2382:..\src/command_processing.c **** 
2383:..\src/command_processing.c **** }
 17671              		.loc 1 2383 0
 17672 038e 00BF     		nop
 17673 0390 8437     		adds	r7, r7, #132
 17674              		.cfi_def_cfa_offset 20
 17675 0392 BD46     		mov	sp, r7
 17676              		.cfi_def_cfa_register 13
 17677              		@ sp needed
 17678 0394 F0BD     		pop	{r4, r5, r6, r7, pc}
 17679              	.L675:
 17680 0396 00BF     		.align	2
 17681              	.L674:
 17682 0398 981A0000 		.word	.LC253
 17683 039c A8100000 		.word	.LC147
 17684 03a0 B41A0000 		.word	.LC254
 17685 03a4 D81A0000 		.word	.LC255
 17686 03a8 F81A0000 		.word	.LC256
 17687 03ac 201B0000 		.word	.LC257
 17688 03b0 401B0000 		.word	.LC258
 17689              		.cfi_endproc
 17690              	.LFE73:
 17691              		.size	prepare_counter_info, .-prepare_counter_info
 17692              		.section	.rodata
 17693              		.align	2
 17694              	.LC259:
 17695 1b64 4669726D 		.ascii	"Firmware version: %s\015\012\000"
 17695      77617265 
 17695      20766572 
 17695      73696F6E 
 17695      3A202573 
 17696 1b7b 00       		.align	2
 17697              	.LC260:
 17698 1b7c 506F7369 		.ascii	"Position PID: \000"
 17698      74696F6E 
 17698      20504944 
 17698      3A2000
 17699 1b8b 00       		.align	2
 17700              	.LC261:
 17701 1b8c 43757272 		.ascii	"Current PID: \000"
 17701      656E7420 
 17701      5049443A 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 393


 17701      2000
 17702 1b9a 0000     		.align	2
 17703              	.LC262:
 17704 1b9c 5265736F 		.ascii	"Resolutions: \000"
 17704      6C757469 
 17704      6F6E733A 
 17704      2000
 17705 1baa 0000     		.align	2
 17706              	.LC263:
 17707 1bac 4F666673 		.ascii	"Offsets: \000"
 17707      6574733A 
 17707      2000
 17708 1bb6 0000     		.align	2
 17709              	.LC264:
 17710 1bb8 4D756C74 		.ascii	"Multipliers: \000"
 17710      69706C69 
 17710      6572733A 
 17710      2000
 17711 1bc6 0000     		.align	2
 17712              	.LC265:
 17713 1bc8 43757272 		.ascii	"Current lookup table p[0] - p[5]: %f, %f, %f, %f, %"
 17713      656E7420 
 17713      6C6F6F6B 
 17713      75702074 
 17713      61626C65 
 17714 1bfb 662C2025 		.ascii	"f, %f\015\012\000"
 17714      660D0A00 
 17715 1c03 00       		.align	2
 17716              	.LC266:
 17717 1c04 506F7369 		.ascii	"Position limit active: %d\015\012\000"
 17717      74696F6E 
 17717      206C696D 
 17717      69742061 
 17717      63746976 
 17718              		.align	2
 17719              	.LC267:
 17720 1c20 506F7369 		.ascii	"Position limits: inf -> %ld, sup -> %ld\015\012\000"
 17720      74696F6E 
 17720      206C696D 
 17720      6974733A 
 17720      20696E66 
 17721              		.section	.text.prepare_SD_param_info,"ax",%progbits
 17722              		.align	2
 17723              		.global	prepare_SD_param_info
 17724              		.thumb
 17725              		.thumb_func
 17726              		.type	prepare_SD_param_info, %function
 17727              	prepare_SD_param_info:
 17728              	.LFB74:
2384:..\src/command_processing.c **** 
2385:..\src/command_processing.c **** //==============================================================================
2386:..\src/command_processing.c **** //                                                    PREPARE SD CARD PARAM INFO
2387:..\src/command_processing.c **** //==============================================================================
2388:..\src/command_processing.c **** 
2389:..\src/command_processing.c **** void prepare_SD_param_info(char *info_string)
2390:..\src/command_processing.c **** {
 17729              		.loc 1 2390 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 394


 17730              		.cfi_startproc
 17731              		@ args = 0, pretend = 0, frame = 152
 17732              		@ frame_needed = 1, uses_anonymous_args = 0
 17733 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 17734              		.cfi_def_cfa_offset 36
 17735              		.cfi_offset 4, -36
 17736              		.cfi_offset 5, -32
 17737              		.cfi_offset 6, -28
 17738              		.cfi_offset 7, -24
 17739              		.cfi_offset 8, -20
 17740              		.cfi_offset 9, -16
 17741              		.cfi_offset 10, -12
 17742              		.cfi_offset 11, -8
 17743              		.cfi_offset 14, -4
 17744 0004 B1B0     		sub	sp, sp, #196
 17745              		.cfi_def_cfa_offset 232
 17746 0006 0AAF     		add	r7, sp, #40
 17747              		.cfi_def_cfa 7, 192
 17748 0008 7861     		str	r0, [r7, #20]
2391:..\src/command_processing.c ****     char str[100];  
2392:..\src/command_processing.c ****     int i;
2393:..\src/command_processing.c ****            
2394:..\src/command_processing.c ****     // NOTE: use g_mem structure instead of c_mem because when changing parameters c_mem struct is 
2395:..\src/command_processing.c ****     
2396:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 17749              		.loc 1 2396 0
 17750 000a AB4B     		ldr	r3, .L741
 17751 000c C7F88C30 		str	r3, [r7, #140]
2397:..\src/command_processing.c ****         
2398:..\src/command_processing.c ****     sprintf(info_string, "Firmware version: %s\r\n", VERSION);
 17752              		.loc 1 2398 0
 17753 0010 AA4A     		ldr	r2, .L741+4
 17754 0012 AB49     		ldr	r1, .L741+8
 17755 0014 7869     		ldr	r0, [r7, #20]
 17756 0016 FFF7FEFF 		bl	sprintf
2399:..\src/command_processing.c ****     
2400:..\src/command_processing.c ****     sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 17757              		.loc 1 2400 0
 17758 001a D7F88C30 		ldr	r3, [r7, #140]
 17759 001e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 17760 0022 1A46     		mov	r2, r3
 17761 0024 07F11C03 		add	r3, r7, #28
 17762 0028 A649     		ldr	r1, .L741+12
 17763 002a 1846     		mov	r0, r3
 17764 002c FFF7FEFF 		bl	sprintf
2401:..\src/command_processing.c ****     strcat(info_string, str);
 17765              		.loc 1 2401 0
 17766 0030 07F11C03 		add	r3, r7, #28
 17767 0034 1946     		mov	r1, r3
 17768 0036 7869     		ldr	r0, [r7, #20]
 17769 0038 FFF7FEFF 		bl	strcat
2402:..\src/command_processing.c ****     switch(MEM_P->dev.right_left){
 17770              		.loc 1 2402 0
 17771 003c D7F88C30 		ldr	r3, [r7, #140]
 17772 0040 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 17773 0044 002B     		cmp	r3, #0
 17774 0046 02D0     		beq	.L678
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 395


 17775 0048 012B     		cmp	r3, #1
 17776 004a 15D0     		beq	.L679
 17777 004c 26E0     		b	.L677
 17778              	.L678:
2403:..\src/command_processing.c ****         case RIGHT_HAND:
2404:..\src/command_processing.c ****             strcat(info_string, "Hand side: RIGHT\r\n");
 17779              		.loc 1 2404 0
 17780 004e 7869     		ldr	r0, [r7, #20]
 17781 0050 FFF7FEFF 		bl	strlen
 17782 0054 0346     		mov	r3, r0
 17783 0056 1A46     		mov	r2, r3
 17784 0058 7B69     		ldr	r3, [r7, #20]
 17785 005a 1344     		add	r3, r3, r2
 17786 005c 9A4A     		ldr	r2, .L741+16
 17787 005e 1D46     		mov	r5, r3
 17788 0060 1446     		mov	r4, r2
 17789 0062 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17790 0064 2860     		str	r0, [r5]	@ unaligned
 17791 0066 6960     		str	r1, [r5, #4]	@ unaligned
 17792 0068 AA60     		str	r2, [r5, #8]	@ unaligned
 17793 006a EB60     		str	r3, [r5, #12]	@ unaligned
 17794 006c 2388     		ldrh	r3, [r4]	@ unaligned
 17795 006e A278     		ldrb	r2, [r4, #2]
 17796 0070 2B82     		strh	r3, [r5, #16]	@ unaligned
 17797 0072 1346     		mov	r3, r2
 17798 0074 AB74     		strb	r3, [r5, #18]
2405:..\src/command_processing.c ****             break;
 17799              		.loc 1 2405 0
 17800 0076 11E0     		b	.L677
 17801              	.L679:
2406:..\src/command_processing.c ****         case LEFT_HAND:
2407:..\src/command_processing.c ****             strcat(info_string, "Hand side: LEFT\r\n");
 17802              		.loc 1 2407 0
 17803 0078 7869     		ldr	r0, [r7, #20]
 17804 007a FFF7FEFF 		bl	strlen
 17805 007e 0346     		mov	r3, r0
 17806 0080 1A46     		mov	r2, r3
 17807 0082 7B69     		ldr	r3, [r7, #20]
 17808 0084 1344     		add	r3, r3, r2
 17809 0086 914A     		ldr	r2, .L741+20
 17810 0088 1D46     		mov	r5, r3
 17811 008a 1446     		mov	r4, r2
 17812 008c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17813 008e 2860     		str	r0, [r5]	@ unaligned
 17814 0090 6960     		str	r1, [r5, #4]	@ unaligned
 17815 0092 AA60     		str	r2, [r5, #8]	@ unaligned
 17816 0094 EB60     		str	r3, [r5, #12]	@ unaligned
 17817 0096 2388     		ldrh	r3, [r4]	@ unaligned
 17818 0098 2B82     		strh	r3, [r5, #16]	@ unaligned
2408:..\src/command_processing.c ****             break;
 17819              		.loc 1 2408 0
 17820 009a 00BF     		nop
 17821              	.L677:
2409:..\src/command_processing.c ****     }
2410:..\src/command_processing.c **** 
2411:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 17822              		.loc 1 2411 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 396


 17823 009c D7F88C30 		ldr	r3, [r7, #140]
 17824 00a0 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 17825 00a4 1A46     		mov	r2, r3
 17826 00a6 D7F88C30 		ldr	r3, [r7, #140]
 17827 00aa 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 17828 00ae 1946     		mov	r1, r3
 17829 00b0 D7F88C30 		ldr	r3, [r7, #140]
 17830 00b4 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 17831 00b8 07F11C00 		add	r0, r7, #28
 17832 00bc 0093     		str	r3, [sp]
 17833 00be 0B46     		mov	r3, r1
 17834 00c0 8349     		ldr	r1, .L741+24
 17835 00c2 FFF7FEFF 		bl	sprintf
2412:..\src/command_processing.c ****     strcat(info_string, str);
 17836              		.loc 1 2412 0
 17837 00c6 07F11C03 		add	r3, r7, #28
 17838 00ca 1946     		mov	r1, r3
 17839 00cc 7869     		ldr	r0, [r7, #20]
 17840 00ce FFF7FEFF 		bl	strcat
2413:..\src/command_processing.c ****     
2414:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 17841              		.loc 1 2414 0
 17842 00d2 D7F88C30 		ldr	r3, [r7, #140]
 17843 00d6 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 17844 00da 1A46     		mov	r2, r3
 17845 00dc D7F88C30 		ldr	r3, [r7, #140]
 17846 00e0 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 17847 00e4 1946     		mov	r1, r3
 17848 00e6 D7F88C30 		ldr	r3, [r7, #140]
 17849 00ea 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 17850 00ee 07F11C00 		add	r0, r7, #28
 17851 00f2 0093     		str	r3, [sp]
 17852 00f4 0B46     		mov	r3, r1
 17853 00f6 7749     		ldr	r1, .L741+28
 17854 00f8 FFF7FEFF 		bl	sprintf
2415:..\src/command_processing.c ****     strcat(info_string, str);
 17855              		.loc 1 2415 0
 17856 00fc 07F11C03 		add	r3, r7, #28
 17857 0100 1946     		mov	r1, r3
 17858 0102 7869     		ldr	r0, [r7, #20]
 17859 0104 FFF7FEFF 		bl	strcat
 17860              	.LBB19:
2416:..\src/command_processing.c ****     
2417:..\src/command_processing.c **** 	for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 17861              		.loc 1 2417 0
 17862 0108 0023     		movs	r3, #0
 17863 010a 87F89330 		strb	r3, [r7, #147]
 17864 010e 00F05CBE 		b	.L680
 17865              	.L724:
 17866              	.LBB20:
2418:..\src/command_processing.c ****             
2419:..\src/command_processing.c **** 	    uint8 MOTOR_IDX = k;
 17867              		.loc 1 2419 0
 17868 0112 97F89330 		ldrb	r3, [r7, #147]
 17869 0116 87F88B30 		strb	r3, [r7, #139]
2420:..\src/command_processing.c ****         struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 17870              		.loc 1 2420 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 397


 17871 011a 97F88B20 		ldrb	r2, [r7, #139]	@ zero_extendqisi2
 17872 011e 1346     		mov	r3, r2
 17873 0120 DB00     		lsls	r3, r3, #3
 17874 0122 9B1A     		subs	r3, r3, r2
 17875 0124 1B01     		lsls	r3, r3, #4
 17876 0126 B033     		adds	r3, r3, #176
 17877 0128 D7F88C20 		ldr	r2, [r7, #140]
 17878 012c 1344     		add	r3, r3, r2
 17879 012e C7F88430 		str	r3, [r7, #132]
2421:..\src/command_processing.c ****         uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 17880              		.loc 1 2421 0
 17881 0132 D7F88430 		ldr	r3, [r7, #132]
 17882 0136 93F86030 		ldrb	r3, [r3, #96]
 17883 013a 87F88330 		strb	r3, [r7, #131]
2422:..\src/command_processing.c ****               
2423:..\src/command_processing.c ****         sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 17884              		.loc 1 2423 0
 17885 013e 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 17886 0142 5A1C     		adds	r2, r3, #1
 17887 0144 07F11C03 		add	r3, r7, #28
 17888 0148 6349     		ldr	r1, .L741+32
 17889 014a 1846     		mov	r0, r3
 17890 014c FFF7FEFF 		bl	sprintf
2424:..\src/command_processing.c ****         strcat(info_string, str);
 17891              		.loc 1 2424 0
 17892 0150 07F11C03 		add	r3, r7, #28
 17893 0154 1946     		mov	r1, r3
 17894 0156 7869     		ldr	r0, [r7, #20]
 17895 0158 FFF7FEFF 		bl	strcat
2425:..\src/command_processing.c ****                     
2426:..\src/command_processing.c ****         strcat(info_string, "PWM rescaling activation: ");
 17896              		.loc 1 2426 0
 17897 015c 7869     		ldr	r0, [r7, #20]
 17898 015e FFF7FEFF 		bl	strlen
 17899 0162 0346     		mov	r3, r0
 17900 0164 1A46     		mov	r2, r3
 17901 0166 7B69     		ldr	r3, [r7, #20]
 17902 0168 1344     		add	r3, r3, r2
 17903 016a 5C4A     		ldr	r2, .L741+36
 17904 016c 1D46     		mov	r5, r3
 17905 016e 1446     		mov	r4, r2
 17906 0170 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17907 0172 2860     		str	r0, [r5]	@ unaligned
 17908 0174 6960     		str	r1, [r5, #4]	@ unaligned
 17909 0176 AA60     		str	r2, [r5, #8]	@ unaligned
 17910 0178 EB60     		str	r3, [r5, #12]	@ unaligned
 17911 017a 03CC     		ldmia	r4!, {r0, r1}
 17912 017c 2861     		str	r0, [r5, #16]	@ unaligned
 17913 017e 6961     		str	r1, [r5, #20]	@ unaligned
 17914 0180 2388     		ldrh	r3, [r4]	@ unaligned
 17915 0182 A278     		ldrb	r2, [r4, #2]
 17916 0184 2B83     		strh	r3, [r5, #24]	@ unaligned
 17917 0186 1346     		mov	r3, r2
 17918 0188 AB76     		strb	r3, [r5, #26]
2427:..\src/command_processing.c ****         if(MOT->activate_pwm_rescaling == MAXON_12V)
 17919              		.loc 1 2427 0
 17920 018a D7F88430 		ldr	r3, [r7, #132]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 398


 17921 018e 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 17922 0192 012B     		cmp	r3, #1
 17923 0194 0CD1     		bne	.L681
2428:..\src/command_processing.c ****             strcat(info_string, "YES\r\n");
 17924              		.loc 1 2428 0
 17925 0196 7869     		ldr	r0, [r7, #20]
 17926 0198 FFF7FEFF 		bl	strlen
 17927 019c 0346     		mov	r3, r0
 17928 019e 1A46     		mov	r2, r3
 17929 01a0 7B69     		ldr	r3, [r7, #20]
 17930 01a2 1344     		add	r3, r3, r2
 17931 01a4 4E4A     		ldr	r2, .L741+40
 17932 01a6 1068     		ldr	r0, [r2]	@ unaligned
 17933 01a8 1860     		str	r0, [r3]	@ unaligned
 17934 01aa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17935 01ac 9A80     		strh	r2, [r3, #4]	@ unaligned
 17936 01ae 0BE0     		b	.L682
 17937              	.L681:
2429:..\src/command_processing.c ****         else
2430:..\src/command_processing.c ****             strcat(info_string, "NO\r\n");
 17938              		.loc 1 2430 0
 17939 01b0 7869     		ldr	r0, [r7, #20]
 17940 01b2 FFF7FEFF 		bl	strlen
 17941 01b6 0346     		mov	r3, r0
 17942 01b8 1A46     		mov	r2, r3
 17943 01ba 7B69     		ldr	r3, [r7, #20]
 17944 01bc 1344     		add	r3, r3, r2
 17945 01be 494A     		ldr	r2, .L741+44
 17946 01c0 1068     		ldr	r0, [r2]	@ unaligned
 17947 01c2 1860     		str	r0, [r3]	@ unaligned
 17948 01c4 1279     		ldrb	r2, [r2, #4]
 17949 01c6 1A71     		strb	r2, [r3, #4]
 17950              	.L682:
2431:..\src/command_processing.c ****         
2432:..\src/command_processing.c ****         sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 17951              		.loc 1 2432 0
 17952 01c8 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 17953 01cc 464A     		ldr	r2, .L741+48
 17954 01ce D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 17955 01d0 1A46     		mov	r2, r3
 17956 01d2 07F11C03 		add	r3, r7, #28
 17957 01d6 4549     		ldr	r1, .L741+52
 17958 01d8 1846     		mov	r0, r3
 17959 01da FFF7FEFF 		bl	sprintf
2433:..\src/command_processing.c ****         strcat(info_string, str);
 17960              		.loc 1 2433 0
 17961 01de 07F11C03 		add	r3, r7, #28
 17962 01e2 1946     		mov	r1, r3
 17963 01e4 7869     		ldr	r0, [r7, #20]
 17964 01e6 FFF7FEFF 		bl	strcat
2434:..\src/command_processing.c **** 
2435:..\src/command_processing.c ****         strcat(info_string, "Position PID: ");
 17965              		.loc 1 2435 0
 17966 01ea 7869     		ldr	r0, [r7, #20]
 17967 01ec FFF7FEFF 		bl	strlen
 17968 01f0 0346     		mov	r3, r0
 17969 01f2 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 399


 17970 01f4 7B69     		ldr	r3, [r7, #20]
 17971 01f6 1344     		add	r3, r3, r2
 17972 01f8 3D4A     		ldr	r2, .L741+56
 17973 01fa 1C46     		mov	r4, r3
 17974 01fc 1346     		mov	r3, r2
 17975 01fe 07CB     		ldmia	r3!, {r0, r1, r2}
 17976 0200 2060     		str	r0, [r4]	@ unaligned
 17977 0202 6160     		str	r1, [r4, #4]	@ unaligned
 17978 0204 A260     		str	r2, [r4, #8]	@ unaligned
 17979 0206 1A88     		ldrh	r2, [r3]	@ unaligned
 17980 0208 9B78     		ldrb	r3, [r3, #2]
 17981 020a A281     		strh	r2, [r4, #12]	@ unaligned
 17982 020c A373     		strb	r3, [r4, #14]
2436:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 17983              		.loc 1 2436 0
 17984 020e D7F88430 		ldr	r3, [r7, #132]
 17985 0212 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 17986 0216 032B     		cmp	r3, #3
 17987 0218 74D0     		beq	.L683
2437:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 17988              		.loc 1 2437 0
 17989 021a D7F88430 		ldr	r3, [r7, #132]
 17990 021e 1B68     		ldr	r3, [r3]
 17991 0220 1846     		mov	r0, r3
 17992 0222 FFF7FEFF 		bl	__aeabi_i2d
 17993 0226 4FF00002 		mov	r2, #0
 17994 022a 324B     		ldr	r3, .L741+60
 17995 022c FFF7FEFF 		bl	__aeabi_ddiv
 17996 0230 0346     		mov	r3, r0
 17997 0232 0C46     		mov	r4, r1
 17998 0234 07F11C00 		add	r0, r7, #28
 17999 0238 1A46     		mov	r2, r3
 18000 023a 2346     		mov	r3, r4
 18001 023c 2E49     		ldr	r1, .L741+64
 18002 023e FFF7FEFF 		bl	sprintf
2438:..\src/command_processing.c ****             strcat(info_string, str);
 18003              		.loc 1 2438 0
 18004 0242 07F11C03 		add	r3, r7, #28
 18005 0246 1946     		mov	r1, r3
 18006 0248 7869     		ldr	r0, [r7, #20]
 18007 024a FFF7FEFF 		bl	strcat
2439:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 18008              		.loc 1 2439 0
 18009 024e D7F88430 		ldr	r3, [r7, #132]
 18010 0252 5B68     		ldr	r3, [r3, #4]
 18011 0254 1846     		mov	r0, r3
 18012 0256 FFF7FEFF 		bl	__aeabi_i2d
 18013 025a 4FF00002 		mov	r2, #0
 18014 025e 254B     		ldr	r3, .L741+60
 18015 0260 FFF7FEFF 		bl	__aeabi_ddiv
 18016 0264 0346     		mov	r3, r0
 18017 0266 0C46     		mov	r4, r1
 18018 0268 07F11C00 		add	r0, r7, #28
 18019 026c 1A46     		mov	r2, r3
 18020 026e 2346     		mov	r3, r4
 18021 0270 2249     		ldr	r1, .L741+68
 18022 0272 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 400


2440:..\src/command_processing.c ****             strcat(info_string, str);
 18023              		.loc 1 2440 0
 18024 0276 07F11C03 		add	r3, r7, #28
 18025 027a 1946     		mov	r1, r3
 18026 027c 7869     		ldr	r0, [r7, #20]
 18027 027e FFF7FEFF 		bl	strcat
2441:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 18028              		.loc 1 2441 0
 18029 0282 D7F88430 		ldr	r3, [r7, #132]
 18030 0286 9B68     		ldr	r3, [r3, #8]
 18031 0288 1846     		mov	r0, r3
 18032 028a FFF7FEFF 		bl	__aeabi_i2d
 18033 028e 4FF00002 		mov	r2, #0
 18034 0292 184B     		ldr	r3, .L741+60
 18035 0294 FFF7FEFF 		bl	__aeabi_ddiv
 18036 0298 0346     		mov	r3, r0
 18037 029a 0C46     		mov	r4, r1
 18038 029c 07F11C00 		add	r0, r7, #28
 18039 02a0 1A46     		mov	r2, r3
 18040 02a2 2346     		mov	r3, r4
 18041 02a4 1649     		ldr	r1, .L741+72
 18042 02a6 FFF7FEFF 		bl	sprintf
2442:..\src/command_processing.c ****             strcat(info_string, str);
 18043              		.loc 1 2442 0
 18044 02aa 07F11C03 		add	r3, r7, #28
 18045 02ae 1946     		mov	r1, r3
 18046 02b0 7869     		ldr	r0, [r7, #20]
 18047 02b2 FFF7FEFF 		bl	strcat
 18048 02b6 73E0     		b	.L684
 18049              	.L742:
 18050              		.align	2
 18051              	.L741:
 18052 02b8 00000000 		.word	g_mem
 18053 02bc C0100000 		.word	.LC149
 18054 02c0 641B0000 		.word	.LC259
 18055 02c4 20110000 		.word	.LC152
 18056 02c8 D0110000 		.word	.LC158
 18057 02cc E4110000 		.word	.LC159
 18058 02d0 A8190000 		.word	.LC247
 18059 02d4 D4190000 		.word	.LC248
 18060 02d8 30120000 		.word	.LC163
 18061 02dc A0120000 		.word	.LC172
 18062 02e0 90120000 		.word	.LC170
 18063 02e4 98120000 		.word	.LC171
 18064 02e8 00000000 		.word	dev_pwm_limit
 18065 02ec C8120000 		.word	.LC175
 18066 02f0 7C1B0000 		.word	.LC260
 18067 02f4 0000F040 		.word	1089470464
 18068 02f8 E0130000 		.word	.LC187
 18069 02fc EC130000 		.word	.LC188
 18070 0300 F8130000 		.word	.LC189
 18071              	.L683:
2443:..\src/command_processing.c ****         }
2444:..\src/command_processing.c ****         else { 
2445:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 18072              		.loc 1 2445 0
 18073 0304 D7F88430 		ldr	r3, [r7, #132]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 401


 18074 0308 9B69     		ldr	r3, [r3, #24]
 18075 030a 1846     		mov	r0, r3
 18076 030c FFF7FEFF 		bl	__aeabi_i2d
 18077 0310 4FF00002 		mov	r2, #0
 18078 0314 CC4B     		ldr	r3, .L743
 18079 0316 FFF7FEFF 		bl	__aeabi_ddiv
 18080 031a 0346     		mov	r3, r0
 18081 031c 0C46     		mov	r4, r1
 18082 031e 07F11C00 		add	r0, r7, #28
 18083 0322 1A46     		mov	r2, r3
 18084 0324 2346     		mov	r3, r4
 18085 0326 C949     		ldr	r1, .L743+4
 18086 0328 FFF7FEFF 		bl	sprintf
2446:..\src/command_processing.c ****             strcat(info_string, str);
 18087              		.loc 1 2446 0
 18088 032c 07F11C03 		add	r3, r7, #28
 18089 0330 1946     		mov	r1, r3
 18090 0332 7869     		ldr	r0, [r7, #20]
 18091 0334 FFF7FEFF 		bl	strcat
2447:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 18092              		.loc 1 2447 0
 18093 0338 D7F88430 		ldr	r3, [r7, #132]
 18094 033c DB69     		ldr	r3, [r3, #28]
 18095 033e 1846     		mov	r0, r3
 18096 0340 FFF7FEFF 		bl	__aeabi_i2d
 18097 0344 4FF00002 		mov	r2, #0
 18098 0348 BF4B     		ldr	r3, .L743
 18099 034a FFF7FEFF 		bl	__aeabi_ddiv
 18100 034e 0346     		mov	r3, r0
 18101 0350 0C46     		mov	r4, r1
 18102 0352 07F11C00 		add	r0, r7, #28
 18103 0356 1A46     		mov	r2, r3
 18104 0358 2346     		mov	r3, r4
 18105 035a BD49     		ldr	r1, .L743+8
 18106 035c FFF7FEFF 		bl	sprintf
2448:..\src/command_processing.c ****             strcat(info_string, str);
 18107              		.loc 1 2448 0
 18108 0360 07F11C03 		add	r3, r7, #28
 18109 0364 1946     		mov	r1, r3
 18110 0366 7869     		ldr	r0, [r7, #20]
 18111 0368 FFF7FEFF 		bl	strcat
2449:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 18112              		.loc 1 2449 0
 18113 036c D7F88430 		ldr	r3, [r7, #132]
 18114 0370 1B6A     		ldr	r3, [r3, #32]
 18115 0372 1846     		mov	r0, r3
 18116 0374 FFF7FEFF 		bl	__aeabi_i2d
 18117 0378 4FF00002 		mov	r2, #0
 18118 037c B24B     		ldr	r3, .L743
 18119 037e FFF7FEFF 		bl	__aeabi_ddiv
 18120 0382 0346     		mov	r3, r0
 18121 0384 0C46     		mov	r4, r1
 18122 0386 07F11C00 		add	r0, r7, #28
 18123 038a 1A46     		mov	r2, r3
 18124 038c 2346     		mov	r3, r4
 18125 038e B149     		ldr	r1, .L743+12
 18126 0390 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 402


2450:..\src/command_processing.c ****             strcat(info_string, str);
 18127              		.loc 1 2450 0
 18128 0394 07F11C03 		add	r3, r7, #28
 18129 0398 1946     		mov	r1, r3
 18130 039a 7869     		ldr	r0, [r7, #20]
 18131 039c FFF7FEFF 		bl	strcat
 18132              	.L684:
2451:..\src/command_processing.c ****         }
2452:..\src/command_processing.c **** 
2453:..\src/command_processing.c ****         strcat(info_string, "Current PID: ");
 18133              		.loc 1 2453 0
 18134 03a0 7869     		ldr	r0, [r7, #20]
 18135 03a2 FFF7FEFF 		bl	strlen
 18136 03a6 0346     		mov	r3, r0
 18137 03a8 1A46     		mov	r2, r3
 18138 03aa 7B69     		ldr	r3, [r7, #20]
 18139 03ac 1344     		add	r3, r3, r2
 18140 03ae AA4A     		ldr	r2, .L743+16
 18141 03b0 1C46     		mov	r4, r3
 18142 03b2 1346     		mov	r3, r2
 18143 03b4 07CB     		ldmia	r3!, {r0, r1, r2}
 18144 03b6 2060     		str	r0, [r4]	@ unaligned
 18145 03b8 6160     		str	r1, [r4, #4]	@ unaligned
 18146 03ba A260     		str	r2, [r4, #8]	@ unaligned
 18147 03bc 1B88     		ldrh	r3, [r3]	@ unaligned
 18148 03be A381     		strh	r3, [r4, #12]	@ unaligned
2454:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 18149              		.loc 1 2454 0
 18150 03c0 D7F88430 		ldr	r3, [r7, #132]
 18151 03c4 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 18152 03c8 032B     		cmp	r3, #3
 18153 03ca 4ED0     		beq	.L685
2455:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 18154              		.loc 1 2455 0
 18155 03cc D7F88430 		ldr	r3, [r7, #132]
 18156 03d0 DB68     		ldr	r3, [r3, #12]
 18157 03d2 1846     		mov	r0, r3
 18158 03d4 FFF7FEFF 		bl	__aeabi_i2d
 18159 03d8 4FF00002 		mov	r2, #0
 18160 03dc 9A4B     		ldr	r3, .L743
 18161 03de FFF7FEFF 		bl	__aeabi_ddiv
 18162 03e2 0346     		mov	r3, r0
 18163 03e4 0C46     		mov	r4, r1
 18164 03e6 07F11C00 		add	r0, r7, #28
 18165 03ea 1A46     		mov	r2, r3
 18166 03ec 2346     		mov	r3, r4
 18167 03ee 9749     		ldr	r1, .L743+4
 18168 03f0 FFF7FEFF 		bl	sprintf
2456:..\src/command_processing.c ****             strcat(info_string, str);
 18169              		.loc 1 2456 0
 18170 03f4 07F11C03 		add	r3, r7, #28
 18171 03f8 1946     		mov	r1, r3
 18172 03fa 7869     		ldr	r0, [r7, #20]
 18173 03fc FFF7FEFF 		bl	strcat
2457:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 18174              		.loc 1 2457 0
 18175 0400 D7F88430 		ldr	r3, [r7, #132]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 403


 18176 0404 1B69     		ldr	r3, [r3, #16]
 18177 0406 1846     		mov	r0, r3
 18178 0408 FFF7FEFF 		bl	__aeabi_i2d
 18179 040c 4FF00002 		mov	r2, #0
 18180 0410 8D4B     		ldr	r3, .L743
 18181 0412 FFF7FEFF 		bl	__aeabi_ddiv
 18182 0416 0346     		mov	r3, r0
 18183 0418 0C46     		mov	r4, r1
 18184 041a 07F11C00 		add	r0, r7, #28
 18185 041e 1A46     		mov	r2, r3
 18186 0420 2346     		mov	r3, r4
 18187 0422 8B49     		ldr	r1, .L743+8
 18188 0424 FFF7FEFF 		bl	sprintf
2458:..\src/command_processing.c ****             strcat(info_string, str);
 18189              		.loc 1 2458 0
 18190 0428 07F11C03 		add	r3, r7, #28
 18191 042c 1946     		mov	r1, r3
 18192 042e 7869     		ldr	r0, [r7, #20]
 18193 0430 FFF7FEFF 		bl	strcat
2459:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 18194              		.loc 1 2459 0
 18195 0434 D7F88430 		ldr	r3, [r7, #132]
 18196 0438 5B69     		ldr	r3, [r3, #20]
 18197 043a 1846     		mov	r0, r3
 18198 043c FFF7FEFF 		bl	__aeabi_i2d
 18199 0440 4FF00002 		mov	r2, #0
 18200 0444 804B     		ldr	r3, .L743
 18201 0446 FFF7FEFF 		bl	__aeabi_ddiv
 18202 044a 0346     		mov	r3, r0
 18203 044c 0C46     		mov	r4, r1
 18204 044e 07F11C00 		add	r0, r7, #28
 18205 0452 1A46     		mov	r2, r3
 18206 0454 2346     		mov	r3, r4
 18207 0456 7F49     		ldr	r1, .L743+12
 18208 0458 FFF7FEFF 		bl	sprintf
2460:..\src/command_processing.c ****             strcat(info_string, str);
 18209              		.loc 1 2460 0
 18210 045c 07F11C03 		add	r3, r7, #28
 18211 0460 1946     		mov	r1, r3
 18212 0462 7869     		ldr	r0, [r7, #20]
 18213 0464 FFF7FEFF 		bl	strcat
 18214 0468 4DE0     		b	.L686
 18215              	.L685:
2461:..\src/command_processing.c **** 
2462:..\src/command_processing.c ****         }
2463:..\src/command_processing.c ****         else {
2464:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 18216              		.loc 1 2464 0
 18217 046a D7F88430 		ldr	r3, [r7, #132]
 18218 046e 5B6A     		ldr	r3, [r3, #36]
 18219 0470 1846     		mov	r0, r3
 18220 0472 FFF7FEFF 		bl	__aeabi_i2d
 18221 0476 4FF00002 		mov	r2, #0
 18222 047a 734B     		ldr	r3, .L743
 18223 047c FFF7FEFF 		bl	__aeabi_ddiv
 18224 0480 0346     		mov	r3, r0
 18225 0482 0C46     		mov	r4, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 404


 18226 0484 07F11C00 		add	r0, r7, #28
 18227 0488 1A46     		mov	r2, r3
 18228 048a 2346     		mov	r3, r4
 18229 048c 6F49     		ldr	r1, .L743+4
 18230 048e FFF7FEFF 		bl	sprintf
2465:..\src/command_processing.c ****             strcat(info_string, str);
 18231              		.loc 1 2465 0
 18232 0492 07F11C03 		add	r3, r7, #28
 18233 0496 1946     		mov	r1, r3
 18234 0498 7869     		ldr	r0, [r7, #20]
 18235 049a FFF7FEFF 		bl	strcat
2466:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 18236              		.loc 1 2466 0
 18237 049e D7F88430 		ldr	r3, [r7, #132]
 18238 04a2 9B6A     		ldr	r3, [r3, #40]
 18239 04a4 1846     		mov	r0, r3
 18240 04a6 FFF7FEFF 		bl	__aeabi_i2d
 18241 04aa 4FF00002 		mov	r2, #0
 18242 04ae 664B     		ldr	r3, .L743
 18243 04b0 FFF7FEFF 		bl	__aeabi_ddiv
 18244 04b4 0346     		mov	r3, r0
 18245 04b6 0C46     		mov	r4, r1
 18246 04b8 07F11C00 		add	r0, r7, #28
 18247 04bc 1A46     		mov	r2, r3
 18248 04be 2346     		mov	r3, r4
 18249 04c0 6349     		ldr	r1, .L743+8
 18250 04c2 FFF7FEFF 		bl	sprintf
2467:..\src/command_processing.c ****             strcat(info_string, str);
 18251              		.loc 1 2467 0
 18252 04c6 07F11C03 		add	r3, r7, #28
 18253 04ca 1946     		mov	r1, r3
 18254 04cc 7869     		ldr	r0, [r7, #20]
 18255 04ce FFF7FEFF 		bl	strcat
2468:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 18256              		.loc 1 2468 0
 18257 04d2 D7F88430 		ldr	r3, [r7, #132]
 18258 04d6 DB6A     		ldr	r3, [r3, #44]
 18259 04d8 1846     		mov	r0, r3
 18260 04da FFF7FEFF 		bl	__aeabi_i2d
 18261 04de 4FF00002 		mov	r2, #0
 18262 04e2 594B     		ldr	r3, .L743
 18263 04e4 FFF7FEFF 		bl	__aeabi_ddiv
 18264 04e8 0346     		mov	r3, r0
 18265 04ea 0C46     		mov	r4, r1
 18266 04ec 07F11C00 		add	r0, r7, #28
 18267 04f0 1A46     		mov	r2, r3
 18268 04f2 2346     		mov	r3, r4
 18269 04f4 5749     		ldr	r1, .L743+12
 18270 04f6 FFF7FEFF 		bl	sprintf
2469:..\src/command_processing.c ****             strcat(info_string, str);
 18271              		.loc 1 2469 0
 18272 04fa 07F11C03 		add	r3, r7, #28
 18273 04fe 1946     		mov	r1, r3
 18274 0500 7869     		ldr	r0, [r7, #20]
 18275 0502 FFF7FEFF 		bl	strcat
 18276              	.L686:
2470:..\src/command_processing.c ****         }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 405


2471:..\src/command_processing.c ****         if (MOT->activ == 0x01)
 18277              		.loc 1 2471 0
 18278 0506 D7F88430 		ldr	r3, [r7, #132]
 18279 050a 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 18280 050e 012B     		cmp	r3, #1
 18281 0510 14D1     		bne	.L687
2472:..\src/command_processing.c ****             strcat(info_string, "Startup activation: YES\r\n");
 18282              		.loc 1 2472 0
 18283 0512 7869     		ldr	r0, [r7, #20]
 18284 0514 FFF7FEFF 		bl	strlen
 18285 0518 0346     		mov	r3, r0
 18286 051a 1A46     		mov	r2, r3
 18287 051c 7B69     		ldr	r3, [r7, #20]
 18288 051e 1344     		add	r3, r3, r2
 18289 0520 4E4A     		ldr	r2, .L743+20
 18290 0522 1D46     		mov	r5, r3
 18291 0524 1446     		mov	r4, r2
 18292 0526 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18293 0528 2860     		str	r0, [r5]	@ unaligned
 18294 052a 6960     		str	r1, [r5, #4]	@ unaligned
 18295 052c AA60     		str	r2, [r5, #8]	@ unaligned
 18296 052e EB60     		str	r3, [r5, #12]	@ unaligned
 18297 0530 03CC     		ldmia	r4!, {r0, r1}
 18298 0532 2861     		str	r0, [r5, #16]	@ unaligned
 18299 0534 6961     		str	r1, [r5, #20]	@ unaligned
 18300 0536 2388     		ldrh	r3, [r4]	@ unaligned
 18301 0538 2B83     		strh	r3, [r5, #24]	@ unaligned
 18302 053a 13E0     		b	.L688
 18303              	.L687:
2473:..\src/command_processing.c ****         else
2474:..\src/command_processing.c ****             strcat(info_string, "Startup activation: NO\r\n");
 18304              		.loc 1 2474 0
 18305 053c 7869     		ldr	r0, [r7, #20]
 18306 053e FFF7FEFF 		bl	strlen
 18307 0542 0346     		mov	r3, r0
 18308 0544 1A46     		mov	r2, r3
 18309 0546 7B69     		ldr	r3, [r7, #20]
 18310 0548 1344     		add	r3, r3, r2
 18311 054a 454A     		ldr	r2, .L743+24
 18312 054c 1D46     		mov	r5, r3
 18313 054e 1446     		mov	r4, r2
 18314 0550 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18315 0552 2860     		str	r0, [r5]	@ unaligned
 18316 0554 6960     		str	r1, [r5, #4]	@ unaligned
 18317 0556 AA60     		str	r2, [r5, #8]	@ unaligned
 18318 0558 EB60     		str	r3, [r5, #12]	@ unaligned
 18319 055a 03CC     		ldmia	r4!, {r0, r1}
 18320 055c 2861     		str	r0, [r5, #16]	@ unaligned
 18321 055e 6961     		str	r1, [r5, #20]	@ unaligned
 18322 0560 2378     		ldrb	r3, [r4]
 18323 0562 2B76     		strb	r3, [r5, #24]
 18324              	.L688:
2475:..\src/command_processing.c **** 
2476:..\src/command_processing.c ****         switch(MOT->input_mode) {
 18325              		.loc 1 2476 0
 18326 0564 D7F88430 		ldr	r3, [r7, #132]
 18327 0568 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 406


 18328 056c 072B     		cmp	r3, #7
 18329 056e 00F2EA80 		bhi	.L689
 18330 0572 01A2     		adr	r2, .L691
 18331 0574 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 18332              		.p2align 2
 18333              	.L691:
 18334 0578 99050000 		.word	.L690+1
 18335 057c BD050000 		.word	.L692+1
 18336 0580 E5050000 		.word	.L693+1
 18337 0584 17060000 		.word	.L694+1
 18338 0588 75060000 		.word	.L695+1
 18339 058c A3060000 		.word	.L696+1
 18340 0590 D3060000 		.word	.L697+1
 18341 0594 01070000 		.word	.L698+1
 18342              		.p2align 1
 18343              	.L690:
2477:..\src/command_processing.c ****             case INPUT_MODE_EXTERNAL:
2478:..\src/command_processing.c ****                 strcat(info_string, "Input mode: USB\r\n");
 18344              		.loc 1 2478 0
 18345 0598 7869     		ldr	r0, [r7, #20]
 18346 059a FFF7FEFF 		bl	strlen
 18347 059e 0346     		mov	r3, r0
 18348 05a0 1A46     		mov	r2, r3
 18349 05a2 7B69     		ldr	r3, [r7, #20]
 18350 05a4 1344     		add	r3, r3, r2
 18351 05a6 2F4A     		ldr	r2, .L743+28
 18352 05a8 1D46     		mov	r5, r3
 18353 05aa 1446     		mov	r4, r2
 18354 05ac 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18355 05ae 2860     		str	r0, [r5]	@ unaligned
 18356 05b0 6960     		str	r1, [r5, #4]	@ unaligned
 18357 05b2 AA60     		str	r2, [r5, #8]	@ unaligned
 18358 05b4 EB60     		str	r3, [r5, #12]	@ unaligned
 18359 05b6 2388     		ldrh	r3, [r4]	@ unaligned
 18360 05b8 2B82     		strh	r3, [r5, #16]	@ unaligned
2479:..\src/command_processing.c ****                 break;
 18361              		.loc 1 2479 0
 18362 05ba C4E0     		b	.L689
 18363              	.L692:
2480:..\src/command_processing.c ****             case INPUT_MODE_ENCODER3:
2481:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Handle\r\n");
 18364              		.loc 1 2481 0
 18365 05bc 7869     		ldr	r0, [r7, #20]
 18366 05be FFF7FEFF 		bl	strlen
 18367 05c2 0346     		mov	r3, r0
 18368 05c4 1A46     		mov	r2, r3
 18369 05c6 7B69     		ldr	r3, [r7, #20]
 18370 05c8 1344     		add	r3, r3, r2
 18371 05ca 274A     		ldr	r2, .L743+32
 18372 05cc 1D46     		mov	r5, r3
 18373 05ce 1446     		mov	r4, r2
 18374 05d0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18375 05d2 2860     		str	r0, [r5]	@ unaligned
 18376 05d4 6960     		str	r1, [r5, #4]	@ unaligned
 18377 05d6 AA60     		str	r2, [r5, #8]	@ unaligned
 18378 05d8 EB60     		str	r3, [r5, #12]	@ unaligned
 18379 05da 2068     		ldr	r0, [r4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 407


 18380 05dc 2861     		str	r0, [r5, #16]	@ unaligned
 18381 05de 2379     		ldrb	r3, [r4, #4]
 18382 05e0 2B75     		strb	r3, [r5, #20]
2482:..\src/command_processing.c ****                 break;
 18383              		.loc 1 2482 0
 18384 05e2 B0E0     		b	.L689
 18385              	.L693:
2483:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL:
2484:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional\r\n");
 18386              		.loc 1 2484 0
 18387 05e4 7869     		ldr	r0, [r7, #20]
 18388 05e6 FFF7FEFF 		bl	strlen
 18389 05ea 0346     		mov	r3, r0
 18390 05ec 1A46     		mov	r2, r3
 18391 05ee 7B69     		ldr	r3, [r7, #20]
 18392 05f0 1344     		add	r3, r3, r2
 18393 05f2 1E4A     		ldr	r2, .L743+36
 18394 05f4 1D46     		mov	r5, r3
 18395 05f6 1446     		mov	r4, r2
 18396 05f8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18397 05fa 2860     		str	r0, [r5]	@ unaligned
 18398 05fc 6960     		str	r1, [r5, #4]	@ unaligned
 18399 05fe AA60     		str	r2, [r5, #8]	@ unaligned
 18400 0600 EB60     		str	r3, [r5, #12]	@ unaligned
 18401 0602 07CC     		ldmia	r4!, {r0, r1, r2}
 18402 0604 2861     		str	r0, [r5, #16]	@ unaligned
 18403 0606 6961     		str	r1, [r5, #20]	@ unaligned
 18404 0608 AA61     		str	r2, [r5, #24]	@ unaligned
 18405 060a 2388     		ldrh	r3, [r4]	@ unaligned
 18406 060c A278     		ldrb	r2, [r4, #2]
 18407 060e AB83     		strh	r3, [r5, #28]	@ unaligned
 18408 0610 1346     		mov	r3, r2
 18409 0612 AB77     		strb	r3, [r5, #30]
2485:..\src/command_processing.c ****                 break;
 18410              		.loc 1 2485 0
 18411 0614 97E0     		b	.L689
 18412              	.L694:
2486:..\src/command_processing.c ****             case INPUT_MODE_EMG_INTEGRAL:
2487:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG integral\r\n");
 18413              		.loc 1 2487 0
 18414 0616 7869     		ldr	r0, [r7, #20]
 18415 0618 FFF7FEFF 		bl	strlen
 18416 061c 0346     		mov	r3, r0
 18417 061e 1A46     		mov	r2, r3
 18418 0620 7B69     		ldr	r3, [r7, #20]
 18419 0622 1344     		add	r3, r3, r2
 18420 0624 124A     		ldr	r2, .L743+40
 18421 0626 1D46     		mov	r5, r3
 18422 0628 1446     		mov	r4, r2
 18423 062a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18424 062c 2860     		str	r0, [r5]	@ unaligned
 18425 062e 6960     		str	r1, [r5, #4]	@ unaligned
 18426 0630 AA60     		str	r2, [r5, #8]	@ unaligned
 18427 0632 EB60     		str	r3, [r5, #12]	@ unaligned
 18428 0634 03CC     		ldmia	r4!, {r0, r1}
 18429 0636 2861     		str	r0, [r5, #16]	@ unaligned
 18430 0638 6961     		str	r1, [r5, #20]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 408


 18431 063a 2388     		ldrh	r3, [r4]	@ unaligned
 18432 063c A278     		ldrb	r2, [r4, #2]
 18433 063e 2B83     		strh	r3, [r5, #24]	@ unaligned
 18434 0640 1346     		mov	r3, r2
 18435 0642 AB76     		strb	r3, [r5, #26]
2488:..\src/command_processing.c ****                 break;
 18436              		.loc 1 2488 0
 18437 0644 7FE0     		b	.L689
 18438              	.L744:
 18439 0646 00BF     		.align	2
 18440              	.L743:
 18441 0648 0000F040 		.word	1089470464
 18442 064c E0130000 		.word	.LC187
 18443 0650 EC130000 		.word	.LC188
 18444 0654 F8130000 		.word	.LC189
 18445 0658 8C1B0000 		.word	.LC261
 18446 065c 20140000 		.word	.LC191
 18447 0660 3C140000 		.word	.LC192
 18448 0664 58140000 		.word	.LC193
 18449 0668 6C140000 		.word	.LC194
 18450 066c 84140000 		.word	.LC195
 18451 0670 A4140000 		.word	.LC196
 18452              	.L695:
2489:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS:
2490:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS\r\n");
 18453              		.loc 1 2490 0
 18454 0674 7869     		ldr	r0, [r7, #20]
 18455 0676 FFF7FEFF 		bl	strlen
 18456 067a 0346     		mov	r3, r0
 18457 067c 1A46     		mov	r2, r3
 18458 067e 7B69     		ldr	r3, [r7, #20]
 18459 0680 1344     		add	r3, r3, r2
 18460 0682 BA4A     		ldr	r2, .L745
 18461 0684 1C46     		mov	r4, r3
 18462 0686 1546     		mov	r5, r2
 18463 0688 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 18464 068a 2060     		str	r0, [r4]	@ unaligned
 18465 068c 6160     		str	r1, [r4, #4]	@ unaligned
 18466 068e A260     		str	r2, [r4, #8]	@ unaligned
 18467 0690 E360     		str	r3, [r4, #12]	@ unaligned
 18468 0692 2868     		ldr	r0, [r5]	@ unaligned
 18469 0694 2061     		str	r0, [r4, #16]	@ unaligned
 18470 0696 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 18471 0698 AA79     		ldrb	r2, [r5, #6]
 18472 069a A382     		strh	r3, [r4, #20]	@ unaligned
 18473 069c 1346     		mov	r3, r2
 18474 069e A375     		strb	r3, [r4, #22]
2491:..\src/command_processing.c ****                 break;
 18475              		.loc 1 2491 0
 18476 06a0 51E0     		b	.L689
 18477              	.L696:
2492:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS_ADV:
2493:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 18478              		.loc 1 2493 0
 18479 06a2 7869     		ldr	r0, [r7, #20]
 18480 06a4 FFF7FEFF 		bl	strlen
 18481 06a8 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 409


 18482 06aa 1A46     		mov	r2, r3
 18483 06ac 7B69     		ldr	r3, [r7, #20]
 18484 06ae 1344     		add	r3, r3, r2
 18485 06b0 AF4A     		ldr	r2, .L745+4
 18486 06b2 1D46     		mov	r5, r3
 18487 06b4 1446     		mov	r4, r2
 18488 06b6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18489 06b8 2860     		str	r0, [r5]	@ unaligned
 18490 06ba 6960     		str	r1, [r5, #4]	@ unaligned
 18491 06bc AA60     		str	r2, [r5, #8]	@ unaligned
 18492 06be EB60     		str	r3, [r5, #12]	@ unaligned
 18493 06c0 03CC     		ldmia	r4!, {r0, r1}
 18494 06c2 2861     		str	r0, [r5, #16]	@ unaligned
 18495 06c4 6961     		str	r1, [r5, #20]	@ unaligned
 18496 06c6 2388     		ldrh	r3, [r4]	@ unaligned
 18497 06c8 A278     		ldrb	r2, [r4, #2]
 18498 06ca 2B83     		strh	r3, [r5, #24]	@ unaligned
 18499 06cc 1346     		mov	r3, r2
 18500 06ce AB76     		strb	r3, [r5, #26]
2494:..\src/command_processing.c ****                 break;
 18501              		.loc 1 2494 0
 18502 06d0 39E0     		b	.L689
 18503              	.L697:
2495:..\src/command_processing.c ****             case INPUT_MODE_JOYSTICK:
2496:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Joystick\r\n");
 18504              		.loc 1 2496 0
 18505 06d2 7869     		ldr	r0, [r7, #20]
 18506 06d4 FFF7FEFF 		bl	strlen
 18507 06d8 0346     		mov	r3, r0
 18508 06da 1A46     		mov	r2, r3
 18509 06dc 7B69     		ldr	r3, [r7, #20]
 18510 06de 1344     		add	r3, r3, r2
 18511 06e0 A44A     		ldr	r2, .L745+8
 18512 06e2 1C46     		mov	r4, r3
 18513 06e4 1546     		mov	r5, r2
 18514 06e6 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 18515 06e8 2060     		str	r0, [r4]	@ unaligned
 18516 06ea 6160     		str	r1, [r4, #4]	@ unaligned
 18517 06ec A260     		str	r2, [r4, #8]	@ unaligned
 18518 06ee E360     		str	r3, [r4, #12]	@ unaligned
 18519 06f0 2868     		ldr	r0, [r5]	@ unaligned
 18520 06f2 2061     		str	r0, [r4, #16]	@ unaligned
 18521 06f4 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 18522 06f6 AA79     		ldrb	r2, [r5, #6]
 18523 06f8 A382     		strh	r3, [r4, #20]	@ unaligned
 18524 06fa 1346     		mov	r3, r2
 18525 06fc A375     		strb	r3, [r4, #22]
2497:..\src/command_processing.c ****                 break;
 18526              		.loc 1 2497 0
 18527 06fe 22E0     		b	.L689
 18528              	.L698:
2498:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL_NC:
2499:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 18529              		.loc 1 2499 0
 18530 0700 7869     		ldr	r0, [r7, #20]
 18531 0702 FFF7FEFF 		bl	strlen
 18532 0706 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 410


 18533 0708 1A46     		mov	r2, r3
 18534 070a 7B69     		ldr	r3, [r7, #20]
 18535 070c 1344     		add	r3, r3, r2
 18536 070e 9A4A     		ldr	r2, .L745+12
 18537 0710 1546     		mov	r5, r2
 18538 0712 9E46     		mov	lr, r3
 18539 0714 05F1200C 		add	ip, r5, #32
 18540              	.L699:
 18541 0718 7446     		mov	r4, lr
 18542 071a 2E46     		mov	r6, r5
 18543 071c 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 18544 071e 2060     		str	r0, [r4]	@ unaligned
 18545 0720 6160     		str	r1, [r4, #4]	@ unaligned
 18546 0722 A260     		str	r2, [r4, #8]	@ unaligned
 18547 0724 E360     		str	r3, [r4, #12]	@ unaligned
 18548 0726 1035     		adds	r5, r5, #16
 18549 0728 0EF1100E 		add	lr, lr, #16
 18550 072c 6545     		cmp	r5, ip
 18551 072e F3D1     		bne	.L699
 18552 0730 7446     		mov	r4, lr
 18553 0732 2B46     		mov	r3, r5
 18554 0734 07CB     		ldmia	r3!, {r0, r1, r2}
 18555 0736 2060     		str	r0, [r4]	@ unaligned
 18556 0738 6160     		str	r1, [r4, #4]	@ unaligned
 18557 073a A260     		str	r2, [r4, #8]	@ unaligned
 18558 073c 1A88     		ldrh	r2, [r3]	@ unaligned
 18559 073e 9B78     		ldrb	r3, [r3, #2]
 18560 0740 A281     		strh	r2, [r4, #12]	@ unaligned
 18561 0742 A373     		strb	r3, [r4, #14]
2500:..\src/command_processing.c ****                 break;
 18562              		.loc 1 2500 0
 18563 0744 00BF     		nop
 18564              	.L689:
2501:..\src/command_processing.c ****         }
2502:..\src/command_processing.c **** 
2503:..\src/command_processing.c ****         switch(MOT->control_mode) {
 18565              		.loc 1 2503 0
 18566 0746 D7F88430 		ldr	r3, [r7, #132]
 18567 074a 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 18568 074e 032B     		cmp	r3, #3
 18569 0750 63D8     		bhi	.L739
 18570 0752 01A2     		adr	r2, .L702
 18571 0754 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 18572              		.p2align 2
 18573              	.L702:
 18574 0758 69070000 		.word	.L701+1
 18575 075c 93070000 		.word	.L703+1
 18576 0760 B7070000 		.word	.L704+1
 18577 0764 DD070000 		.word	.L705+1
 18578              		.p2align 1
 18579              	.L701:
2504:..\src/command_processing.c ****             case CONTROL_ANGLE:
2505:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position\r\n");
 18580              		.loc 1 2505 0
 18581 0768 7869     		ldr	r0, [r7, #20]
 18582 076a FFF7FEFF 		bl	strlen
 18583 076e 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 411


 18584 0770 1A46     		mov	r2, r3
 18585 0772 7B69     		ldr	r3, [r7, #20]
 18586 0774 1344     		add	r3, r3, r2
 18587 0776 814A     		ldr	r2, .L745+16
 18588 0778 1D46     		mov	r5, r3
 18589 077a 1446     		mov	r4, r2
 18590 077c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18591 077e 2860     		str	r0, [r5]	@ unaligned
 18592 0780 6960     		str	r1, [r5, #4]	@ unaligned
 18593 0782 AA60     		str	r2, [r5, #8]	@ unaligned
 18594 0784 EB60     		str	r3, [r5, #12]	@ unaligned
 18595 0786 03CC     		ldmia	r4!, {r0, r1}
 18596 0788 2861     		str	r0, [r5, #16]	@ unaligned
 18597 078a 6961     		str	r1, [r5, #20]	@ unaligned
 18598 078c 2378     		ldrb	r3, [r4]
 18599 078e 2B76     		strb	r3, [r5, #24]
2506:..\src/command_processing.c ****                 break;
 18600              		.loc 1 2506 0
 18601 0790 44E0     		b	.L706
 18602              	.L703:
2507:..\src/command_processing.c ****             case CONTROL_PWM:
2508:..\src/command_processing.c ****                 strcat(info_string, "Control mode: PWM\r\n");
 18603              		.loc 1 2508 0
 18604 0792 7869     		ldr	r0, [r7, #20]
 18605 0794 FFF7FEFF 		bl	strlen
 18606 0798 0346     		mov	r3, r0
 18607 079a 1A46     		mov	r2, r3
 18608 079c 7B69     		ldr	r3, [r7, #20]
 18609 079e 1344     		add	r3, r3, r2
 18610 07a0 774A     		ldr	r2, .L745+20
 18611 07a2 1D46     		mov	r5, r3
 18612 07a4 1446     		mov	r4, r2
 18613 07a6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18614 07a8 2860     		str	r0, [r5]	@ unaligned
 18615 07aa 6960     		str	r1, [r5, #4]	@ unaligned
 18616 07ac AA60     		str	r2, [r5, #8]	@ unaligned
 18617 07ae EB60     		str	r3, [r5, #12]	@ unaligned
 18618 07b0 2068     		ldr	r0, [r4]	@ unaligned
 18619 07b2 2861     		str	r0, [r5, #16]	@ unaligned
2509:..\src/command_processing.c ****                 break;
 18620              		.loc 1 2509 0
 18621 07b4 32E0     		b	.L706
 18622              	.L704:
2510:..\src/command_processing.c ****             case CONTROL_CURRENT:
2511:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Current\r\n");
 18623              		.loc 1 2511 0
 18624 07b6 7869     		ldr	r0, [r7, #20]
 18625 07b8 FFF7FEFF 		bl	strlen
 18626 07bc 0346     		mov	r3, r0
 18627 07be 1A46     		mov	r2, r3
 18628 07c0 7B69     		ldr	r3, [r7, #20]
 18629 07c2 1344     		add	r3, r3, r2
 18630 07c4 6F4A     		ldr	r2, .L745+24
 18631 07c6 1D46     		mov	r5, r3
 18632 07c8 1446     		mov	r4, r2
 18633 07ca 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18634 07cc 2860     		str	r0, [r5]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 412


 18635 07ce 6960     		str	r1, [r5, #4]	@ unaligned
 18636 07d0 AA60     		str	r2, [r5, #8]	@ unaligned
 18637 07d2 EB60     		str	r3, [r5, #12]	@ unaligned
 18638 07d4 03CC     		ldmia	r4!, {r0, r1}
 18639 07d6 2861     		str	r0, [r5, #16]	@ unaligned
 18640 07d8 6961     		str	r1, [r5, #20]	@ unaligned
2512:..\src/command_processing.c ****                 break;
 18641              		.loc 1 2512 0
 18642 07da 1FE0     		b	.L706
 18643              	.L705:
2513:..\src/command_processing.c ****             case CURR_AND_POS_CONTROL:
2514:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position and Current\r\n");
 18644              		.loc 1 2514 0
 18645 07dc 7869     		ldr	r0, [r7, #20]
 18646 07de FFF7FEFF 		bl	strlen
 18647 07e2 0346     		mov	r3, r0
 18648 07e4 1A46     		mov	r2, r3
 18649 07e6 7B69     		ldr	r3, [r7, #20]
 18650 07e8 1344     		add	r3, r3, r2
 18651 07ea 674A     		ldr	r2, .L745+28
 18652 07ec 1446     		mov	r4, r2
 18653 07ee 9E46     		mov	lr, r3
 18654 07f0 04F1200C 		add	ip, r4, #32
 18655              	.L707:
 18656 07f4 7546     		mov	r5, lr
 18657 07f6 2646     		mov	r6, r4
 18658 07f8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 18659 07fa 2860     		str	r0, [r5]	@ unaligned
 18660 07fc 6960     		str	r1, [r5, #4]	@ unaligned
 18661 07fe AA60     		str	r2, [r5, #8]	@ unaligned
 18662 0800 EB60     		str	r3, [r5, #12]	@ unaligned
 18663 0802 1034     		adds	r4, r4, #16
 18664 0804 0EF1100E 		add	lr, lr, #16
 18665 0808 6445     		cmp	r4, ip
 18666 080a F3D1     		bne	.L707
 18667 080c 7346     		mov	r3, lr
 18668 080e 2246     		mov	r2, r4
 18669 0810 1068     		ldr	r0, [r2]	@ unaligned
 18670 0812 1860     		str	r0, [r3]	@ unaligned
 18671 0814 1279     		ldrb	r2, [r2, #4]
 18672 0816 1A71     		strb	r2, [r3, #4]
2515:..\src/command_processing.c ****                 break;
 18673              		.loc 1 2515 0
 18674 0818 00E0     		b	.L706
 18675              	.L739:
2516:..\src/command_processing.c ****             default:
2517:..\src/command_processing.c ****                 break;
 18676              		.loc 1 2517 0
 18677 081a 00BF     		nop
 18678              	.L706:
2518:..\src/command_processing.c ****         }
2519:..\src/command_processing.c **** 
2520:..\src/command_processing.c ****         if (MEM_P->enc[ENC_L].double_encoder_on_off)
 18679              		.loc 1 2520 0
 18680 081c 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18681 0820 D7F88C10 		ldr	r1, [r7, #140]
 18682 0824 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 413


 18683 0826 5B00     		lsls	r3, r3, #1
 18684 0828 1344     		add	r3, r3, r2
 18685 082a 1B01     		lsls	r3, r3, #4
 18686 082c 0B44     		add	r3, r3, r1
 18687 082e 03F5D873 		add	r3, r3, #432
 18688 0832 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18689 0834 002B     		cmp	r3, #0
 18690 0836 1CD0     		beq	.L708
2521:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: YES\r\n");
 18691              		.loc 1 2521 0
 18692 0838 7869     		ldr	r0, [r7, #20]
 18693 083a FFF7FEFF 		bl	strlen
 18694 083e 0346     		mov	r3, r0
 18695 0840 1A46     		mov	r2, r3
 18696 0842 7B69     		ldr	r3, [r7, #20]
 18697 0844 1344     		add	r3, r3, r2
 18698 0846 514A     		ldr	r2, .L745+32
 18699 0848 1446     		mov	r4, r2
 18700 084a 9E46     		mov	lr, r3
 18701 084c 04F1200C 		add	ip, r4, #32
 18702              	.L709:
 18703 0850 7546     		mov	r5, lr
 18704 0852 2646     		mov	r6, r4
 18705 0854 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 18706 0856 2860     		str	r0, [r5]	@ unaligned
 18707 0858 6960     		str	r1, [r5, #4]	@ unaligned
 18708 085a AA60     		str	r2, [r5, #8]	@ unaligned
 18709 085c EB60     		str	r3, [r5, #12]	@ unaligned
 18710 085e 1034     		adds	r4, r4, #16
 18711 0860 0EF1100E 		add	lr, lr, #16
 18712 0864 6445     		cmp	r4, ip
 18713 0866 F3D1     		bne	.L709
 18714 0868 7346     		mov	r3, lr
 18715 086a 2246     		mov	r2, r4
 18716 086c 1278     		ldrb	r2, [r2]
 18717 086e 1A70     		strb	r2, [r3]
 18718 0870 13E0     		b	.L710
 18719              	.L708:
2522:..\src/command_processing.c ****         else
2523:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: NO\r\n");
 18720              		.loc 1 2523 0
 18721 0872 7869     		ldr	r0, [r7, #20]
 18722 0874 FFF7FEFF 		bl	strlen
 18723 0878 0346     		mov	r3, r0
 18724 087a 1A46     		mov	r2, r3
 18725 087c 7B69     		ldr	r3, [r7, #20]
 18726 087e 1344     		add	r3, r3, r2
 18727 0880 434A     		ldr	r2, .L745+36
 18728 0882 1C46     		mov	r4, r3
 18729 0884 1546     		mov	r5, r2
 18730 0886 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 18731 0888 2060     		str	r0, [r4]	@ unaligned
 18732 088a 6160     		str	r1, [r4, #4]	@ unaligned
 18733 088c A260     		str	r2, [r4, #8]	@ unaligned
 18734 088e E360     		str	r3, [r4, #12]	@ unaligned
 18735 0890 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 18736 0892 2061     		str	r0, [r4, #16]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 414


 18737 0894 6161     		str	r1, [r4, #20]	@ unaligned
 18738 0896 A261     		str	r2, [r4, #24]	@ unaligned
 18739 0898 E361     		str	r3, [r4, #28]	@ unaligned
 18740              	.L710:
2524:..\src/command_processing.c **** 
2525:..\src/command_processing.c ****         strcat(info_string, "Resolutions: ");
 18741              		.loc 1 2525 0
 18742 089a 7869     		ldr	r0, [r7, #20]
 18743 089c FFF7FEFF 		bl	strlen
 18744 08a0 0346     		mov	r3, r0
 18745 08a2 1A46     		mov	r2, r3
 18746 08a4 7B69     		ldr	r3, [r7, #20]
 18747 08a6 1344     		add	r3, r3, r2
 18748 08a8 3A4A     		ldr	r2, .L745+40
 18749 08aa 1C46     		mov	r4, r3
 18750 08ac 1346     		mov	r3, r2
 18751 08ae 07CB     		ldmia	r3!, {r0, r1, r2}
 18752 08b0 2060     		str	r0, [r4]	@ unaligned
 18753 08b2 6160     		str	r1, [r4, #4]	@ unaligned
 18754 08b4 A260     		str	r2, [r4, #8]	@ unaligned
 18755 08b6 1B88     		ldrh	r3, [r3]	@ unaligned
 18756 08b8 A381     		strh	r3, [r4, #12]	@ unaligned
2526:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 18757              		.loc 1 2526 0
 18758 08ba 0023     		movs	r3, #0
 18759 08bc C7F89430 		str	r3, [r7, #148]
 18760 08c0 30E0     		b	.L711
 18761              	.L713:
2527:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 18762              		.loc 1 2527 0
 18763 08c2 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18764 08c6 D7F88C10 		ldr	r1, [r7, #140]
 18765 08ca 1346     		mov	r3, r2
 18766 08cc 5B00     		lsls	r3, r3, #1
 18767 08ce 1344     		add	r3, r3, r2
 18768 08d0 1B01     		lsls	r3, r3, #4
 18769 08d2 CA18     		adds	r2, r1, r3
 18770 08d4 D7F89430 		ldr	r3, [r7, #148]
 18771 08d8 1344     		add	r3, r3, r2
 18772 08da 03F29513 		addw	r3, r3, #405
 18773 08de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18774 08e0 1A46     		mov	r2, r3
 18775 08e2 07F11C03 		add	r3, r7, #28
 18776 08e6 2C49     		ldr	r1, .L745+44
 18777 08e8 1846     		mov	r0, r3
 18778 08ea FFF7FEFF 		bl	sprintf
2528:..\src/command_processing.c ****             strcat(info_string, str);
 18779              		.loc 1 2528 0
 18780 08ee 07F11C03 		add	r3, r7, #28
 18781 08f2 1946     		mov	r1, r3
 18782 08f4 7869     		ldr	r0, [r7, #20]
 18783 08f6 FFF7FEFF 		bl	strcat
2529:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 18784              		.loc 1 2529 0
 18785 08fa D7F89430 		ldr	r3, [r7, #148]
 18786 08fe 022B     		cmp	r3, #2
 18787 0900 0BD0     		beq	.L712
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 415


2530:..\src/command_processing.c ****                 strcat(info_string, ", ");
 18788              		.loc 1 2530 0
 18789 0902 7869     		ldr	r0, [r7, #20]
 18790 0904 FFF7FEFF 		bl	strlen
 18791 0908 0346     		mov	r3, r0
 18792 090a 1A46     		mov	r2, r3
 18793 090c 7B69     		ldr	r3, [r7, #20]
 18794 090e 1344     		add	r3, r3, r2
 18795 0910 224A     		ldr	r2, .L745+48
 18796 0912 1188     		ldrh	r1, [r2]	@ unaligned
 18797 0914 9278     		ldrb	r2, [r2, #2]
 18798 0916 1980     		strh	r1, [r3]	@ unaligned
 18799 0918 9A70     		strb	r2, [r3, #2]
 18800              	.L712:
2526:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 18801              		.loc 1 2526 0 discriminator 2
 18802 091a D7F89430 		ldr	r3, [r7, #148]
 18803 091e 0133     		adds	r3, r3, #1
 18804 0920 C7F89430 		str	r3, [r7, #148]
 18805              	.L711:
2526:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 18806              		.loc 1 2526 0 is_stmt 0 discriminator 1
 18807 0924 D7F89430 		ldr	r3, [r7, #148]
 18808 0928 022B     		cmp	r3, #2
 18809 092a CADD     		ble	.L713
2531:..\src/command_processing.c ****             }                
2532:..\src/command_processing.c ****         }
2533:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 18810              		.loc 1 2533 0 is_stmt 1
 18811 092c 7869     		ldr	r0, [r7, #20]
 18812 092e FFF7FEFF 		bl	strlen
 18813 0932 0346     		mov	r3, r0
 18814 0934 1A46     		mov	r2, r3
 18815 0936 7B69     		ldr	r3, [r7, #20]
 18816 0938 1344     		add	r3, r3, r2
 18817 093a 194A     		ldr	r2, .L745+52
 18818 093c 1188     		ldrh	r1, [r2]	@ unaligned
 18819 093e 9278     		ldrb	r2, [r2, #2]
 18820 0940 1980     		strh	r1, [r3]	@ unaligned
 18821 0942 9A70     		strb	r2, [r3, #2]
2534:..\src/command_processing.c **** 
2535:..\src/command_processing.c ****         strcat(info_string, "Offsets: ");
 18822              		.loc 1 2535 0
 18823 0944 7869     		ldr	r0, [r7, #20]
 18824 0946 FFF7FEFF 		bl	strlen
 18825 094a 0346     		mov	r3, r0
 18826 094c 1A46     		mov	r2, r3
 18827 094e 7B69     		ldr	r3, [r7, #20]
 18828 0950 1344     		add	r3, r3, r2
 18829 0952 1449     		ldr	r1, .L745+56
 18830 0954 1A46     		mov	r2, r3
 18831 0956 0B46     		mov	r3, r1
 18832 0958 03CB     		ldmia	r3!, {r0, r1}
 18833 095a 1060     		str	r0, [r2]	@ unaligned
 18834 095c 5160     		str	r1, [r2, #4]	@ unaligned
 18835 095e 1B88     		ldrh	r3, [r3]	@ unaligned
 18836 0960 1381     		strh	r3, [r2, #8]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 416


2536:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 18837              		.loc 1 2536 0
 18838 0962 0023     		movs	r3, #0
 18839 0964 C7F89430 		str	r3, [r7, #148]
 18840 0968 5EE0     		b	.L714
 18841              	.L746:
 18842 096a 00BF     		.align	2
 18843              	.L745:
 18844 096c C0140000 		.word	.LC197
 18845 0970 D8140000 		.word	.LC198
 18846 0974 F4140000 		.word	.LC199
 18847 0978 0C150000 		.word	.LC200
 18848 097c 3C150000 		.word	.LC201
 18849 0980 58150000 		.word	.LC202
 18850 0984 6C150000 		.word	.LC203
 18851 0988 84150000 		.word	.LC204
 18852 098c AC150000 		.word	.LC205
 18853 0990 D0150000 		.word	.LC206
 18854 0994 9C1B0000 		.word	.LC262
 18855 0998 00130000 		.word	.LC178
 18856 099c 04130000 		.word	.LC179
 18857 09a0 A8100000 		.word	.LC147
 18858 09a4 AC1B0000 		.word	.LC263
 18859              	.L716:
2537:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 18860              		.loc 1 2537 0
 18861 09a8 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18862 09ac D7F88C10 		ldr	r1, [r7, #140]
 18863 09b0 1346     		mov	r3, r2
 18864 09b2 5B00     		lsls	r3, r3, #1
 18865 09b4 1344     		add	r3, r3, r2
 18866 09b6 9B00     		lsls	r3, r3, #2
 18867 09b8 D7F89420 		ldr	r2, [r7, #148]
 18868 09bc 1344     		add	r3, r3, r2
 18869 09be 6633     		adds	r3, r3, #102
 18870 09c0 51F82310 		ldr	r1, [r1, r3, lsl #2]
 18871 09c4 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18872 09c8 D7F88C00 		ldr	r0, [r7, #140]
 18873 09cc 1346     		mov	r3, r2
 18874 09ce 5B00     		lsls	r3, r3, #1
 18875 09d0 1344     		add	r3, r3, r2
 18876 09d2 1B01     		lsls	r3, r3, #4
 18877 09d4 C218     		adds	r2, r0, r3
 18878 09d6 D7F89430 		ldr	r3, [r7, #148]
 18879 09da 1344     		add	r3, r3, r2
 18880 09dc 03F29513 		addw	r3, r3, #405
 18881 09e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18882 09e2 41FA03F2 		asr	r2, r1, r3
 18883 09e6 07F11C03 		add	r3, r7, #28
 18884 09ea CF49     		ldr	r1, .L747
 18885 09ec 1846     		mov	r0, r3
 18886 09ee FFF7FEFF 		bl	sprintf
2538:..\src/command_processing.c ****             strcat(info_string, str);
 18887              		.loc 1 2538 0
 18888 09f2 07F11C03 		add	r3, r7, #28
 18889 09f6 1946     		mov	r1, r3
 18890 09f8 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 417


 18891 09fa FFF7FEFF 		bl	strcat
2539:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 18892              		.loc 1 2539 0
 18893 09fe D7F89430 		ldr	r3, [r7, #148]
 18894 0a02 022B     		cmp	r3, #2
 18895 0a04 0BD0     		beq	.L715
2540:..\src/command_processing.c ****                 strcat(info_string, ", ");
 18896              		.loc 1 2540 0
 18897 0a06 7869     		ldr	r0, [r7, #20]
 18898 0a08 FFF7FEFF 		bl	strlen
 18899 0a0c 0346     		mov	r3, r0
 18900 0a0e 1A46     		mov	r2, r3
 18901 0a10 7B69     		ldr	r3, [r7, #20]
 18902 0a12 1344     		add	r3, r3, r2
 18903 0a14 C54A     		ldr	r2, .L747+4
 18904 0a16 1188     		ldrh	r1, [r2]	@ unaligned
 18905 0a18 9278     		ldrb	r2, [r2, #2]
 18906 0a1a 1980     		strh	r1, [r3]	@ unaligned
 18907 0a1c 9A70     		strb	r2, [r3, #2]
 18908              	.L715:
2536:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 18909              		.loc 1 2536 0 discriminator 2
 18910 0a1e D7F89430 		ldr	r3, [r7, #148]
 18911 0a22 0133     		adds	r3, r3, #1
 18912 0a24 C7F89430 		str	r3, [r7, #148]
 18913              	.L714:
2536:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 18914              		.loc 1 2536 0 is_stmt 0 discriminator 1
 18915 0a28 D7F89430 		ldr	r3, [r7, #148]
 18916 0a2c 022B     		cmp	r3, #2
 18917 0a2e BBDD     		ble	.L716
2541:..\src/command_processing.c ****             }
2542:..\src/command_processing.c ****         }
2543:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 18918              		.loc 1 2543 0 is_stmt 1
 18919 0a30 7869     		ldr	r0, [r7, #20]
 18920 0a32 FFF7FEFF 		bl	strlen
 18921 0a36 0346     		mov	r3, r0
 18922 0a38 1A46     		mov	r2, r3
 18923 0a3a 7B69     		ldr	r3, [r7, #20]
 18924 0a3c 1344     		add	r3, r3, r2
 18925 0a3e BC4A     		ldr	r2, .L747+8
 18926 0a40 1188     		ldrh	r1, [r2]	@ unaligned
 18927 0a42 9278     		ldrb	r2, [r2, #2]
 18928 0a44 1980     		strh	r1, [r3]	@ unaligned
 18929 0a46 9A70     		strb	r2, [r3, #2]
2544:..\src/command_processing.c ****             
2545:..\src/command_processing.c ****         strcat(info_string, "Multipliers: ");
 18930              		.loc 1 2545 0
 18931 0a48 7869     		ldr	r0, [r7, #20]
 18932 0a4a FFF7FEFF 		bl	strlen
 18933 0a4e 0346     		mov	r3, r0
 18934 0a50 1A46     		mov	r2, r3
 18935 0a52 7B69     		ldr	r3, [r7, #20]
 18936 0a54 1344     		add	r3, r3, r2
 18937 0a56 B74A     		ldr	r2, .L747+12
 18938 0a58 1C46     		mov	r4, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 418


 18939 0a5a 1346     		mov	r3, r2
 18940 0a5c 07CB     		ldmia	r3!, {r0, r1, r2}
 18941 0a5e 2060     		str	r0, [r4]	@ unaligned
 18942 0a60 6160     		str	r1, [r4, #4]	@ unaligned
 18943 0a62 A260     		str	r2, [r4, #8]	@ unaligned
 18944 0a64 1B88     		ldrh	r3, [r3]	@ unaligned
 18945 0a66 A381     		strh	r3, [r4, #12]	@ unaligned
2546:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 18946              		.loc 1 2546 0
 18947 0a68 0023     		movs	r3, #0
 18948 0a6a C7F89430 		str	r3, [r7, #148]
 18949 0a6e 35E0     		b	.L717
 18950              	.L719:
2547:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 18951              		.loc 1 2547 0
 18952 0a70 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18953 0a74 D7F88C10 		ldr	r1, [r7, #140]
 18954 0a78 1346     		mov	r3, r2
 18955 0a7a 5B00     		lsls	r3, r3, #1
 18956 0a7c 1344     		add	r3, r3, r2
 18957 0a7e 9B00     		lsls	r3, r3, #2
 18958 0a80 D7F89420 		ldr	r2, [r7, #148]
 18959 0a84 1344     		add	r3, r3, r2
 18960 0a86 6833     		adds	r3, r3, #104
 18961 0a88 9B00     		lsls	r3, r3, #2
 18962 0a8a 0B44     		add	r3, r3, r1
 18963 0a8c 5B68     		ldr	r3, [r3, #4]	@ float
 18964 0a8e 1846     		mov	r0, r3
 18965 0a90 FFF7FEFF 		bl	__aeabi_f2d
 18966 0a94 0346     		mov	r3, r0
 18967 0a96 0C46     		mov	r4, r1
 18968 0a98 07F11C00 		add	r0, r7, #28
 18969 0a9c 1A46     		mov	r2, r3
 18970 0a9e 2346     		mov	r3, r4
 18971 0aa0 A549     		ldr	r1, .L747+16
 18972 0aa2 FFF7FEFF 		bl	sprintf
2548:..\src/command_processing.c ****             strcat(info_string, str);
 18973              		.loc 1 2548 0
 18974 0aa6 07F11C03 		add	r3, r7, #28
 18975 0aaa 1946     		mov	r1, r3
 18976 0aac 7869     		ldr	r0, [r7, #20]
 18977 0aae FFF7FEFF 		bl	strcat
2549:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 18978              		.loc 1 2549 0
 18979 0ab2 D7F89430 		ldr	r3, [r7, #148]
 18980 0ab6 022B     		cmp	r3, #2
 18981 0ab8 0BD0     		beq	.L718
2550:..\src/command_processing.c ****                 strcat(info_string, ", ");
 18982              		.loc 1 2550 0
 18983 0aba 7869     		ldr	r0, [r7, #20]
 18984 0abc FFF7FEFF 		bl	strlen
 18985 0ac0 0346     		mov	r3, r0
 18986 0ac2 1A46     		mov	r2, r3
 18987 0ac4 7B69     		ldr	r3, [r7, #20]
 18988 0ac6 1344     		add	r3, r3, r2
 18989 0ac8 984A     		ldr	r2, .L747+4
 18990 0aca 1188     		ldrh	r1, [r2]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 419


 18991 0acc 9278     		ldrb	r2, [r2, #2]
 18992 0ace 1980     		strh	r1, [r3]	@ unaligned
 18993 0ad0 9A70     		strb	r2, [r3, #2]
 18994              	.L718:
2546:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 18995              		.loc 1 2546 0 discriminator 2
 18996 0ad2 D7F89430 		ldr	r3, [r7, #148]
 18997 0ad6 0133     		adds	r3, r3, #1
 18998 0ad8 C7F89430 		str	r3, [r7, #148]
 18999              	.L717:
2546:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 19000              		.loc 1 2546 0 is_stmt 0 discriminator 1
 19001 0adc D7F89430 		ldr	r3, [r7, #148]
 19002 0ae0 022B     		cmp	r3, #2
 19003 0ae2 C5DD     		ble	.L719
2551:..\src/command_processing.c ****             }
2552:..\src/command_processing.c ****         }
2553:..\src/command_processing.c ****         strcat(info_string, "\r\n");       
 19004              		.loc 1 2553 0 is_stmt 1
 19005 0ae4 7869     		ldr	r0, [r7, #20]
 19006 0ae6 FFF7FEFF 		bl	strlen
 19007 0aea 0346     		mov	r3, r0
 19008 0aec 1A46     		mov	r2, r3
 19009 0aee 7B69     		ldr	r3, [r7, #20]
 19010 0af0 1344     		add	r3, r3, r2
 19011 0af2 8F4A     		ldr	r2, .L747+8
 19012 0af4 1188     		ldrh	r1, [r2]	@ unaligned
 19013 0af6 9278     		ldrb	r2, [r2, #2]
 19014 0af8 1980     		strh	r1, [r3]	@ unaligned
 19015 0afa 9A70     		strb	r2, [r3, #2]
2554:..\src/command_processing.c **** 
2555:..\src/command_processing.c **** 		sprintf(str, "Current lookup table p[0] - p[5]: %f, %f, %f, %f, %f, %f\r\n", MOT->curr_lookup[0],
 19016              		.loc 1 2555 0
 19017 0afc D7F88430 		ldr	r3, [r7, #132]
 19018 0b00 5B6C     		ldr	r3, [r3, #68]	@ float
 19019 0b02 1846     		mov	r0, r3
 19020 0b04 FFF7FEFF 		bl	__aeabi_f2d
 19021 0b08 C7E90201 		strd	r0, [r7, #8]
 19022 0b0c D7F88430 		ldr	r3, [r7, #132]
 19023 0b10 9B6C     		ldr	r3, [r3, #72]	@ float
 19024 0b12 1846     		mov	r0, r3
 19025 0b14 FFF7FEFF 		bl	__aeabi_f2d
 19026 0b18 0446     		mov	r4, r0
 19027 0b1a 0D46     		mov	r5, r1
 19028 0b1c D7F88430 		ldr	r3, [r7, #132]
 19029 0b20 DB6C     		ldr	r3, [r3, #76]	@ float
 19030 0b22 1846     		mov	r0, r3
 19031 0b24 FFF7FEFF 		bl	__aeabi_f2d
 19032 0b28 8046     		mov	r8, r0
 19033 0b2a 8946     		mov	r9, r1
 19034 0b2c D7F88430 		ldr	r3, [r7, #132]
 19035 0b30 1B6D     		ldr	r3, [r3, #80]	@ float
 19036 0b32 1846     		mov	r0, r3
 19037 0b34 FFF7FEFF 		bl	__aeabi_f2d
 19038 0b38 8246     		mov	r10, r0
 19039 0b3a 8B46     		mov	fp, r1
 19040 0b3c D7F88430 		ldr	r3, [r7, #132]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 420


 19041 0b40 5B6D     		ldr	r3, [r3, #84]	@ float
 19042 0b42 1846     		mov	r0, r3
 19043 0b44 FFF7FEFF 		bl	__aeabi_f2d
 19044 0b48 C7E90001 		strd	r0, [r7]
 19045 0b4c D7F88430 		ldr	r3, [r7, #132]
 19046 0b50 9B6D     		ldr	r3, [r3, #88]	@ float
 19047 0b52 1846     		mov	r0, r3
 19048 0b54 FFF7FEFF 		bl	__aeabi_f2d
 19049 0b58 0246     		mov	r2, r0
 19050 0b5a 0B46     		mov	r3, r1
 19051 0b5c 07F11C00 		add	r0, r7, #28
 19052 0b60 CDE90823 		strd	r2, [sp, #32]
 19053 0b64 D7E90012 		ldrd	r1, [r7]
 19054 0b68 CDE90612 		strd	r1, [sp, #24]
 19055 0b6c CDE904AB 		strd	r10, [sp, #16]
 19056 0b70 CDE90289 		strd	r8, [sp, #8]
 19057 0b74 CDE90045 		strd	r4, [sp]
 19058 0b78 D7E90223 		ldrd	r2, [r7, #8]
 19059 0b7c 6F49     		ldr	r1, .L747+20
 19060 0b7e FFF7FEFF 		bl	sprintf
2556:..\src/command_processing.c **** 		strcat(info_string, str);
 19061              		.loc 1 2556 0
 19062 0b82 07F11C03 		add	r3, r7, #28
 19063 0b86 1946     		mov	r1, r3
 19064 0b88 7869     		ldr	r0, [r7, #20]
 19065 0b8a FFF7FEFF 		bl	strcat
2557:..\src/command_processing.c **** 
2558:..\src/command_processing.c **** 		sprintf(str, "Position limit active: %d\r\n", (int)MOT->pos_lim_flag);
 19066              		.loc 1 2558 0
 19067 0b8e D7F88430 		ldr	r3, [r7, #132]
 19068 0b92 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 19069 0b96 1A46     		mov	r2, r3
 19070 0b98 07F11C03 		add	r3, r7, #28
 19071 0b9c 6849     		ldr	r1, .L747+24
 19072 0b9e 1846     		mov	r0, r3
 19073 0ba0 FFF7FEFF 		bl	sprintf
2559:..\src/command_processing.c **** 		strcat(info_string, str);
 19074              		.loc 1 2559 0
 19075 0ba4 07F11C03 		add	r3, r7, #28
 19076 0ba8 1946     		mov	r1, r3
 19077 0baa 7869     		ldr	r0, [r7, #20]
 19078 0bac FFF7FEFF 		bl	strcat
2560:..\src/command_processing.c **** 
2561:..\src/command_processing.c **** 		sprintf(str, "Position limits: inf -> %ld, sup -> %ld\r\n", (int32)MOT->pos_lim_inf >> MEM_P->enc
 19079              		.loc 1 2561 0
 19080 0bb0 D7F88430 		ldr	r3, [r7, #132]
 19081 0bb4 596B     		ldr	r1, [r3, #52]
 19082 0bb6 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19083 0bba D7F88C00 		ldr	r0, [r7, #140]
 19084 0bbe 1346     		mov	r3, r2
 19085 0bc0 5B00     		lsls	r3, r3, #1
 19086 0bc2 1344     		add	r3, r3, r2
 19087 0bc4 1B01     		lsls	r3, r3, #4
 19088 0bc6 0344     		add	r3, r3, r0
 19089 0bc8 03F29513 		addw	r3, r3, #405
 19090 0bcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19091 0bce 41FA03F4 		asr	r4, r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 421


 19092 0bd2 D7F88430 		ldr	r3, [r7, #132]
 19093 0bd6 996B     		ldr	r1, [r3, #56]
 19094 0bd8 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19095 0bdc D7F88C00 		ldr	r0, [r7, #140]
 19096 0be0 1346     		mov	r3, r2
 19097 0be2 5B00     		lsls	r3, r3, #1
 19098 0be4 1344     		add	r3, r3, r2
 19099 0be6 1B01     		lsls	r3, r3, #4
 19100 0be8 0344     		add	r3, r3, r0
 19101 0bea 03F29513 		addw	r3, r3, #405
 19102 0bee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19103 0bf0 41FA03F3 		asr	r3, r1, r3
 19104 0bf4 07F11C00 		add	r0, r7, #28
 19105 0bf8 2246     		mov	r2, r4
 19106 0bfa 5249     		ldr	r1, .L747+28
 19107 0bfc FFF7FEFF 		bl	sprintf
2562:..\src/command_processing.c **** 		strcat(info_string, str);
 19108              		.loc 1 2562 0
 19109 0c00 07F11C03 		add	r3, r7, #28
 19110 0c04 1946     		mov	r1, r3
 19111 0c06 7869     		ldr	r0, [r7, #20]
 19112 0c08 FFF7FEFF 		bl	strcat
2563:..\src/command_processing.c **** 
2564:..\src/command_processing.c **** 		sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 19113              		.loc 1 2564 0
 19114 0c0c D7F88430 		ldr	r3, [r7, #132]
 19115 0c10 B3F95C30 		ldrsh	r3, [r3, #92]
 19116 0c14 1A46     		mov	r2, r3
 19117 0c16 07F11C03 		add	r3, r7, #28
 19118 0c1a 4B49     		ldr	r1, .L747+32
 19119 0c1c 1846     		mov	r0, r3
 19120 0c1e FFF7FEFF 		bl	sprintf
2565:..\src/command_processing.c **** 		strcat(info_string, str);
 19121              		.loc 1 2565 0
 19122 0c22 07F11C03 		add	r3, r7, #28
 19123 0c26 1946     		mov	r1, r3
 19124 0c28 7869     		ldr	r0, [r7, #20]
 19125 0c2a FFF7FEFF 		bl	strcat
2566:..\src/command_processing.c **** 
2567:..\src/command_processing.c **** 		if ((MOT->input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 19126              		.loc 1 2567 0
 19127 0c2e D7F88430 		ldr	r3, [r7, #132]
 19128 0c32 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 19129 0c36 022B     		cmp	r3, #2
 19130 0c38 18D0     		beq	.L720
2568:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 19131              		.loc 1 2568 0 discriminator 1
 19132 0c3a D7F88430 		ldr	r3, [r7, #132]
 19133 0c3e 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2567:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 19134              		.loc 1 2567 0 discriminator 1
 19135 0c42 032B     		cmp	r3, #3
 19136 0c44 12D0     		beq	.L720
2569:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 19137              		.loc 1 2569 0
 19138 0c46 D7F88430 		ldr	r3, [r7, #132]
 19139 0c4a 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 422


2568:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 19140              		.loc 1 2568 0
 19141 0c4e 042B     		cmp	r3, #4
 19142 0c50 0CD0     		beq	.L720
2570:..\src/command_processing.c ****             (MOT->input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 19143              		.loc 1 2570 0
 19144 0c52 D7F88430 		ldr	r3, [r7, #132]
 19145 0c56 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2569:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 19146              		.loc 1 2569 0
 19147 0c5a 052B     		cmp	r3, #5
 19148 0c5c 06D0     		beq	.L720
2571:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_PROPORTIONAL_NC)) {
 19149              		.loc 1 2571 0
 19150 0c5e D7F88430 		ldr	r3, [r7, #132]
 19151 0c62 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2570:..\src/command_processing.c ****             (MOT->input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 19152              		.loc 1 2570 0
 19153 0c66 072B     		cmp	r3, #7
 19154 0c68 40F0AA80 		bne	.L721
 19155              	.L720:
2572:..\src/command_processing.c **** 			sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.emg_th
 19156              		.loc 1 2572 0
 19157 0c6c D7F88C30 		ldr	r3, [r7, #140]
 19158 0c70 B3F8F031 		ldrh	r3, [r3, #496]
 19159 0c74 1A46     		mov	r2, r3
 19160 0c76 D7F88C30 		ldr	r3, [r7, #140]
 19161 0c7a B3F8F231 		ldrh	r3, [r3, #498]
 19162 0c7e 07F11C00 		add	r0, r7, #28
 19163 0c82 3249     		ldr	r1, .L747+36
 19164 0c84 FFF7FEFF 		bl	sprintf
2573:..\src/command_processing.c **** 			strcat(info_string, str);
 19165              		.loc 1 2573 0
 19166 0c88 07F11C03 		add	r3, r7, #28
 19167 0c8c 1946     		mov	r1, r3
 19168 0c8e 7869     		ldr	r0, [r7, #20]
 19169 0c90 FFF7FEFF 		bl	strcat
2574:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 19170              		.loc 1 2574 0
 19171 0c94 7869     		ldr	r0, [r7, #20]
 19172 0c96 FFF7FEFF 		bl	strlen
 19173 0c9a 0346     		mov	r3, r0
 19174 0c9c 1A46     		mov	r2, r3
 19175 0c9e 7B69     		ldr	r3, [r7, #20]
 19176 0ca0 1344     		add	r3, r3, r2
 19177 0ca2 234A     		ldr	r2, .L747+8
 19178 0ca4 1188     		ldrh	r1, [r2]	@ unaligned
 19179 0ca6 9278     		ldrb	r2, [r2, #2]
 19180 0ca8 1980     		strh	r1, [r3]	@ unaligned
 19181 0caa 9A70     		strb	r2, [r3, #2]
2575:..\src/command_processing.c **** 
2576:..\src/command_processing.c **** 			sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg.emg_
 19182              		.loc 1 2576 0
 19183 0cac D7F88C30 		ldr	r3, [r7, #140]
 19184 0cb0 D3F8F421 		ldr	r2, [r3, #500]
 19185 0cb4 D7F88C30 		ldr	r3, [r7, #140]
 19186 0cb8 D3F8F831 		ldr	r3, [r3, #504]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 423


 19187 0cbc 07F11C00 		add	r0, r7, #28
 19188 0cc0 2349     		ldr	r1, .L747+40
 19189 0cc2 FFF7FEFF 		bl	sprintf
2577:..\src/command_processing.c **** 			strcat(info_string, str);
 19190              		.loc 1 2577 0
 19191 0cc6 07F11C03 		add	r3, r7, #28
 19192 0cca 1946     		mov	r1, r3
 19193 0ccc 7869     		ldr	r0, [r7, #20]
 19194 0cce FFF7FEFF 		bl	strcat
2578:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 19195              		.loc 1 2578 0
 19196 0cd2 7869     		ldr	r0, [r7, #20]
 19197 0cd4 FFF7FEFF 		bl	strlen
 19198 0cd8 0346     		mov	r3, r0
 19199 0cda 1A46     		mov	r2, r3
 19200 0cdc 7B69     		ldr	r3, [r7, #20]
 19201 0cde 1344     		add	r3, r3, r2
 19202 0ce0 134A     		ldr	r2, .L747+8
 19203 0ce2 1188     		ldrh	r1, [r2]	@ unaligned
 19204 0ce4 9278     		ldrb	r2, [r2, #2]
 19205 0ce6 1980     		strh	r1, [r3]	@ unaligned
 19206 0ce8 9A70     		strb	r2, [r3, #2]
2579:..\src/command_processing.c **** 
2580:..\src/command_processing.c **** 			if (MEM_P->emg.emg_calibration_flag)
 19207              		.loc 1 2580 0
 19208 0cea D7F88C30 		ldr	r3, [r7, #140]
 19209 0cee 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 19210 0cf2 002B     		cmp	r3, #0
 19211 0cf4 30D0     		beq	.L722
2581:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: YES\r\n");
 19212              		.loc 1 2581 0
 19213 0cf6 7869     		ldr	r0, [r7, #20]
 19214 0cf8 FFF7FEFF 		bl	strlen
 19215 0cfc 0346     		mov	r3, r0
 19216 0cfe 1A46     		mov	r2, r3
 19217 0d00 7B69     		ldr	r3, [r7, #20]
 19218 0d02 1344     		add	r3, r3, r2
 19219 0d04 134A     		ldr	r2, .L747+44
 19220 0d06 1D46     		mov	r5, r3
 19221 0d08 1446     		mov	r4, r2
 19222 0d0a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19223 0d0c 2860     		str	r0, [r5]	@ unaligned
 19224 0d0e 6960     		str	r1, [r5, #4]	@ unaligned
 19225 0d10 AA60     		str	r2, [r5, #8]	@ unaligned
 19226 0d12 EB60     		str	r3, [r5, #12]	@ unaligned
 19227 0d14 03CC     		ldmia	r4!, {r0, r1}
 19228 0d16 2861     		str	r0, [r5, #16]	@ unaligned
 19229 0d18 6961     		str	r1, [r5, #20]	@ unaligned
 19230 0d1a 2388     		ldrh	r3, [r4]	@ unaligned
 19231 0d1c A278     		ldrb	r2, [r4, #2]
 19232 0d1e 2B83     		strh	r3, [r5, #24]	@ unaligned
 19233 0d20 1346     		mov	r3, r2
 19234 0d22 AB76     		strb	r3, [r5, #26]
 19235 0d24 2CE0     		b	.L723
 19236              	.L748:
 19237 0d26 00BF     		.align	2
 19238              	.L747:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 424


 19239 0d28 38160000 		.word	.LC210
 19240 0d2c 04130000 		.word	.LC179
 19241 0d30 A8100000 		.word	.LC147
 19242 0d34 B81B0000 		.word	.LC264
 19243 0d38 58160000 		.word	.LC212
 19244 0d3c C81B0000 		.word	.LC265
 19245 0d40 041C0000 		.word	.LC266
 19246 0d44 201C0000 		.word	.LC267
 19247 0d48 F8160000 		.word	.LC218
 19248 0d4c 20170000 		.word	.LC220
 19249 0d50 44170000 		.word	.LC221
 19250 0d54 94170000 		.word	.LC224
 19251              	.L722:
2582:..\src/command_processing.c **** 			else
2583:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: NO\r\n");
 19252              		.loc 1 2583 0
 19253 0d58 7869     		ldr	r0, [r7, #20]
 19254 0d5a FFF7FEFF 		bl	strlen
 19255 0d5e 0346     		mov	r3, r0
 19256 0d60 1A46     		mov	r2, r3
 19257 0d62 7B69     		ldr	r3, [r7, #20]
 19258 0d64 1344     		add	r3, r3, r2
 19259 0d66 D04A     		ldr	r2, .L749
 19260 0d68 1D46     		mov	r5, r3
 19261 0d6a 1446     		mov	r4, r2
 19262 0d6c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19263 0d6e 2860     		str	r0, [r5]	@ unaligned
 19264 0d70 6960     		str	r1, [r5, #4]	@ unaligned
 19265 0d72 AA60     		str	r2, [r5, #8]	@ unaligned
 19266 0d74 EB60     		str	r3, [r5, #12]	@ unaligned
 19267 0d76 03CC     		ldmia	r4!, {r0, r1}
 19268 0d78 2861     		str	r0, [r5, #16]	@ unaligned
 19269 0d7a 6961     		str	r1, [r5, #20]	@ unaligned
 19270 0d7c 2388     		ldrh	r3, [r4]	@ unaligned
 19271 0d7e 2B83     		strh	r3, [r5, #24]	@ unaligned
 19272              	.L723:
2584:..\src/command_processing.c **** 
2585:..\src/command_processing.c **** 			sprintf(str, "EMG max speed: %d %d", (int)MEM_P->emg.emg_speed[0], (int)MEM_P->emg.emg_speed[1])
 19273              		.loc 1 2585 0
 19274 0d80 D7F88C30 		ldr	r3, [r7, #140]
 19275 0d84 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 19276 0d88 1A46     		mov	r2, r3
 19277 0d8a D7F88C30 		ldr	r3, [r7, #140]
 19278 0d8e 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 19279 0d92 07F11C00 		add	r0, r7, #28
 19280 0d96 C549     		ldr	r1, .L749+4
 19281 0d98 FFF7FEFF 		bl	sprintf
2586:..\src/command_processing.c **** 			strcat(info_string, str);
 19282              		.loc 1 2586 0
 19283 0d9c 07F11C03 		add	r3, r7, #28
 19284 0da0 1946     		mov	r1, r3
 19285 0da2 7869     		ldr	r0, [r7, #20]
 19286 0da4 FFF7FEFF 		bl	strcat
2587:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 19287              		.loc 1 2587 0
 19288 0da8 7869     		ldr	r0, [r7, #20]
 19289 0daa FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 425


 19290 0dae 0346     		mov	r3, r0
 19291 0db0 1A46     		mov	r2, r3
 19292 0db2 7B69     		ldr	r3, [r7, #20]
 19293 0db4 1344     		add	r3, r3, r2
 19294 0db6 BE4A     		ldr	r2, .L749+8
 19295 0db8 1188     		ldrh	r1, [r2]	@ unaligned
 19296 0dba 9278     		ldrb	r2, [r2, #2]
 19297 0dbc 1980     		strh	r1, [r3]	@ unaligned
 19298 0dbe 9A70     		strb	r2, [r3, #2]
 19299              	.L721:
 19300              	.LBE20:
2417:..\src/command_processing.c ****             
 19301              		.loc 1 2417 0 discriminator 2
 19302 0dc0 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 19303 0dc4 0133     		adds	r3, r3, #1
 19304 0dc6 87F89330 		strb	r3, [r7, #147]
 19305              	.L680:
2417:..\src/command_processing.c ****             
 19306              		.loc 1 2417 0 is_stmt 0 discriminator 1
 19307 0dca D7F88C30 		ldr	r3, [r7, #140]
 19308 0dce 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 19309 0dd2 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 19310 0dd6 9A42     		cmp	r2, r3
 19311 0dd8 7FF69BA9 		bls	.L724
 19312              	.LBE19:
2588:..\src/command_processing.c **** 		}
2589:..\src/command_processing.c **** 	}
2590:..\src/command_processing.c **** 	 
2591:..\src/command_processing.c ****     if (MEM_P->SH.rest_position_flag) {
 19313              		.loc 1 2591 0 is_stmt 1
 19314 0ddc D7F88C30 		ldr	r3, [r7, #140]
 19315 0de0 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 19316 0de4 002B     		cmp	r3, #0
 19317 0de6 63D0     		beq	.L725
2592:..\src/command_processing.c **** 		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 19318              		.loc 1 2592 0
 19319 0de8 D7F88C30 		ldr	r3, [r7, #140]
 19320 0dec D3F8A422 		ldr	r2, [r3, #676]
 19321 0df0 07F11C03 		add	r3, r7, #28
 19322 0df4 AF49     		ldr	r1, .L749+12
 19323 0df6 1846     		mov	r0, r3
 19324 0df8 FFF7FEFF 		bl	sprintf
2593:..\src/command_processing.c ****         strcat(info_string, str);
 19325              		.loc 1 2593 0
 19326 0dfc 07F11C03 		add	r3, r7, #28
 19327 0e00 1946     		mov	r1, r3
 19328 0e02 7869     		ldr	r0, [r7, #20]
 19329 0e04 FFF7FEFF 		bl	strcat
2594:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 19330              		.loc 1 2594 0
 19331 0e08 7869     		ldr	r0, [r7, #20]
 19332 0e0a FFF7FEFF 		bl	strlen
 19333 0e0e 0346     		mov	r3, r0
 19334 0e10 1A46     		mov	r2, r3
 19335 0e12 7B69     		ldr	r3, [r7, #20]
 19336 0e14 1344     		add	r3, r3, r2
 19337 0e16 A64A     		ldr	r2, .L749+8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 426


 19338 0e18 1188     		ldrh	r1, [r2]	@ unaligned
 19339 0e1a 9278     		ldrb	r2, [r2, #2]
 19340 0e1c 1980     		strh	r1, [r3]	@ unaligned
 19341 0e1e 9A70     		strb	r2, [r3, #2]
2595:..\src/command_processing.c ****         
2596:..\src/command_processing.c ****         sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 19342              		.loc 1 2596 0
 19343 0e20 D7F88C30 		ldr	r3, [r7, #140]
 19344 0e24 D3F8A822 		ldr	r2, [r3, #680]
 19345 0e28 07F11C03 		add	r3, r7, #28
 19346 0e2c A249     		ldr	r1, .L749+16
 19347 0e2e 1846     		mov	r0, r3
 19348 0e30 FFF7FEFF 		bl	sprintf
2597:..\src/command_processing.c ****         strcat(info_string, str);
 19349              		.loc 1 2597 0
 19350 0e34 07F11C03 		add	r3, r7, #28
 19351 0e38 1946     		mov	r1, r3
 19352 0e3a 7869     		ldr	r0, [r7, #20]
 19353 0e3c FFF7FEFF 		bl	strcat
2598:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 19354              		.loc 1 2598 0
 19355 0e40 7869     		ldr	r0, [r7, #20]
 19356 0e42 FFF7FEFF 		bl	strlen
 19357 0e46 0346     		mov	r3, r0
 19358 0e48 1A46     		mov	r2, r3
 19359 0e4a 7B69     		ldr	r3, [r7, #20]
 19360 0e4c 1344     		add	r3, r3, r2
 19361 0e4e 984A     		ldr	r2, .L749+8
 19362 0e50 1188     		ldrh	r1, [r2]	@ unaligned
 19363 0e52 9278     		ldrb	r2, [r2, #2]
 19364 0e54 1980     		strh	r1, [r3]	@ unaligned
 19365 0e56 9A70     		strb	r2, [r3, #2]
2599:..\src/command_processing.c ****         
2600:..\src/command_processing.c ****         sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0].en
 19366              		.loc 1 2600 0
 19367 0e58 D7F88C30 		ldr	r3, [r7, #140]
 19368 0e5c D3F8A022 		ldr	r2, [r3, #672]
 19369 0e60 D7F88C30 		ldr	r3, [r7, #140]
 19370 0e64 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 19371 0e68 1846     		mov	r0, r3
 19372 0e6a D7F88C10 		ldr	r1, [r7, #140]
 19373 0e6e 0346     		mov	r3, r0
 19374 0e70 5B00     		lsls	r3, r3, #1
 19375 0e72 0344     		add	r3, r3, r0
 19376 0e74 1B01     		lsls	r3, r3, #4
 19377 0e76 0B44     		add	r3, r3, r1
 19378 0e78 03F29513 		addw	r3, r3, #405
 19379 0e7c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19380 0e7e 1A41     		asrs	r2, r2, r3
 19381 0e80 07F11C03 		add	r3, r7, #28
 19382 0e84 8D49     		ldr	r1, .L749+20
 19383 0e86 1846     		mov	r0, r3
 19384 0e88 FFF7FEFF 		bl	sprintf
2601:..\src/command_processing.c ****         strcat(info_string, str);
 19385              		.loc 1 2601 0
 19386 0e8c 07F11C03 		add	r3, r7, #28
 19387 0e90 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 427


 19388 0e92 7869     		ldr	r0, [r7, #20]
 19389 0e94 FFF7FEFF 		bl	strcat
2602:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 19390              		.loc 1 2602 0
 19391 0e98 7869     		ldr	r0, [r7, #20]
 19392 0e9a FFF7FEFF 		bl	strlen
 19393 0e9e 0346     		mov	r3, r0
 19394 0ea0 1A46     		mov	r2, r3
 19395 0ea2 7B69     		ldr	r3, [r7, #20]
 19396 0ea4 1344     		add	r3, r3, r2
 19397 0ea6 824A     		ldr	r2, .L749+8
 19398 0ea8 1188     		ldrh	r1, [r2]	@ unaligned
 19399 0eaa 9278     		ldrb	r2, [r2, #2]
 19400 0eac 1980     		strh	r1, [r3]	@ unaligned
 19401 0eae 9A70     		strb	r2, [r3, #2]
 19402              	.L725:
2603:..\src/command_processing.c ****     }
2604:..\src/command_processing.c **** 	
2605:..\src/command_processing.c **** 	if (MEM_P->imu.read_imu_flag) {
 19403              		.loc 1 2605 0
 19404 0eb0 D7F88C30 		ldr	r3, [r7, #140]
 19405 0eb4 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 19406 0eb8 002B     		cmp	r3, #0
 19407 0eba 00F0CB81 		beq	.L740
2606:..\src/command_processing.c **** 		sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 19408              		.loc 1 2606 0
 19409 0ebe 804B     		ldr	r3, .L749+24
 19410 0ec0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19411 0ec2 1A46     		mov	r2, r3
 19412 0ec4 07F11C03 		add	r3, r7, #28
 19413 0ec8 7E49     		ldr	r1, .L749+28
 19414 0eca 1846     		mov	r0, r3
 19415 0ecc FFF7FEFF 		bl	sprintf
2607:..\src/command_processing.c **** 		strcat(info_string, str);
 19416              		.loc 1 2607 0
 19417 0ed0 07F11C03 		add	r3, r7, #28
 19418 0ed4 1946     		mov	r1, r3
 19419 0ed6 7869     		ldr	r0, [r7, #20]
 19420 0ed8 FFF7FEFF 		bl	strcat
2608:..\src/command_processing.c **** 		
2609:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 19421              		.loc 1 2609 0
 19422 0edc 7869     		ldr	r0, [r7, #20]
 19423 0ede FFF7FEFF 		bl	strlen
 19424 0ee2 0346     		mov	r3, r0
 19425 0ee4 1A46     		mov	r2, r3
 19426 0ee6 7B69     		ldr	r3, [r7, #20]
 19427 0ee8 1344     		add	r3, r3, r2
 19428 0eea 714A     		ldr	r2, .L749+8
 19429 0eec 1188     		ldrh	r1, [r2]	@ unaligned
 19430 0eee 9278     		ldrb	r2, [r2, #2]
 19431 0ef0 1980     		strh	r1, [r3]	@ unaligned
 19432 0ef2 9A70     		strb	r2, [r3, #2]
2610:..\src/command_processing.c **** 		
2611:..\src/command_processing.c **** 		strcat(info_string, "IMUs CONFIGURATION\r\n");
 19433              		.loc 1 2611 0
 19434 0ef4 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 428


 19435 0ef6 FFF7FEFF 		bl	strlen
 19436 0efa 0346     		mov	r3, r0
 19437 0efc 1A46     		mov	r2, r3
 19438 0efe 7B69     		ldr	r3, [r7, #20]
 19439 0f00 1344     		add	r3, r3, r2
 19440 0f02 714A     		ldr	r2, .L749+32
 19441 0f04 1D46     		mov	r5, r3
 19442 0f06 1446     		mov	r4, r2
 19443 0f08 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19444 0f0a 2860     		str	r0, [r5]	@ unaligned
 19445 0f0c 6960     		str	r1, [r5, #4]	@ unaligned
 19446 0f0e AA60     		str	r2, [r5, #8]	@ unaligned
 19447 0f10 EB60     		str	r3, [r5, #12]	@ unaligned
 19448 0f12 2068     		ldr	r0, [r4]	@ unaligned
 19449 0f14 2861     		str	r0, [r5, #16]	@ unaligned
 19450 0f16 2379     		ldrb	r3, [r4, #4]
 19451 0f18 2B75     		strb	r3, [r5, #20]
2612:..\src/command_processing.c **** 		for (i=0; i<N_IMU_Connected; i++){
 19452              		.loc 1 2612 0
 19453 0f1a 0023     		movs	r3, #0
 19454 0f1c C7F89430 		str	r3, [r7, #148]
 19455 0f20 84E1     		b	.L727
 19456              	.L738:
2613:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 19457              		.loc 1 2613 0
 19458 0f22 6A4A     		ldr	r2, .L749+36
 19459 0f24 D7F89430 		ldr	r3, [r7, #148]
 19460 0f28 1344     		add	r3, r3, r2
 19461 0f2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19462 0f2c 07F11C00 		add	r0, r7, #28
 19463 0f30 D7F89420 		ldr	r2, [r7, #148]
 19464 0f34 6649     		ldr	r1, .L749+40
 19465 0f36 FFF7FEFF 		bl	sprintf
2614:..\src/command_processing.c **** 			strcat(info_string, str);
 19466              		.loc 1 2614 0
 19467 0f3a 07F11C03 		add	r3, r7, #28
 19468 0f3e 1946     		mov	r1, r3
 19469 0f40 7869     		ldr	r0, [r7, #20]
 19470 0f42 FFF7FEFF 		bl	strcat
2615:..\src/command_processing.c **** 			
2616:..\src/command_processing.c **** 			sprintf(str, "\tAccelerometers: ");
 19471              		.loc 1 2616 0
 19472 0f46 07F11C03 		add	r3, r7, #28
 19473 0f4a 624A     		ldr	r2, .L749+44
 19474 0f4c 1C46     		mov	r4, r3
 19475 0f4e 1546     		mov	r5, r2
 19476 0f50 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19477 0f52 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 19478 0f54 2B68     		ldr	r3, [r5]
 19479 0f56 2380     		strh	r3, [r4]	@ movhi
2617:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 19480              		.loc 1 2617 0
 19481 0f58 5C4A     		ldr	r2, .L749+36
 19482 0f5a D7F89430 		ldr	r3, [r7, #148]
 19483 0f5e 1344     		add	r3, r3, r2
 19484 0f60 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19485 0f62 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 429


 19486 0f64 D7F88C20 		ldr	r2, [r7, #140]
 19487 0f68 0B46     		mov	r3, r1
 19488 0f6a 9B00     		lsls	r3, r3, #2
 19489 0f6c 0B44     		add	r3, r3, r1
 19490 0f6e 1344     		add	r3, r3, r2
 19491 0f70 03F20223 		addw	r3, r3, #514
 19492 0f74 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19493 0f76 002B     		cmp	r3, #0
 19494 0f78 0FD0     		beq	.L728
2618:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 19495              		.loc 1 2618 0
 19496 0f7a 07F11C03 		add	r3, r7, #28
 19497 0f7e 1846     		mov	r0, r3
 19498 0f80 FFF7FEFF 		bl	strlen
 19499 0f84 0346     		mov	r3, r0
 19500 0f86 1A46     		mov	r2, r3
 19501 0f88 07F11C03 		add	r3, r7, #28
 19502 0f8c 1344     		add	r3, r3, r2
 19503 0f8e 524A     		ldr	r2, .L749+48
 19504 0f90 1068     		ldr	r0, [r2]	@ unaligned
 19505 0f92 1860     		str	r0, [r3]	@ unaligned
 19506 0f94 9288     		ldrh	r2, [r2, #4]	@ unaligned
 19507 0f96 9A80     		strh	r2, [r3, #4]	@ unaligned
 19508 0f98 0EE0     		b	.L729
 19509              	.L728:
2619:..\src/command_processing.c **** 			else
2620:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 19510              		.loc 1 2620 0
 19511 0f9a 07F11C03 		add	r3, r7, #28
 19512 0f9e 1846     		mov	r0, r3
 19513 0fa0 FFF7FEFF 		bl	strlen
 19514 0fa4 0346     		mov	r3, r0
 19515 0fa6 1A46     		mov	r2, r3
 19516 0fa8 07F11C03 		add	r3, r7, #28
 19517 0fac 1344     		add	r3, r3, r2
 19518 0fae 4B4A     		ldr	r2, .L749+52
 19519 0fb0 1068     		ldr	r0, [r2]	@ unaligned
 19520 0fb2 1860     		str	r0, [r3]	@ unaligned
 19521 0fb4 1279     		ldrb	r2, [r2, #4]
 19522 0fb6 1A71     		strb	r2, [r3, #4]
 19523              	.L729:
2621:..\src/command_processing.c **** 			strcat(str, "\tGyroscopes: ");
 19524              		.loc 1 2621 0
 19525 0fb8 07F11C03 		add	r3, r7, #28
 19526 0fbc 1846     		mov	r0, r3
 19527 0fbe FFF7FEFF 		bl	strlen
 19528 0fc2 0346     		mov	r3, r0
 19529 0fc4 1A46     		mov	r2, r3
 19530 0fc6 07F11C03 		add	r3, r7, #28
 19531 0fca 1344     		add	r3, r3, r2
 19532 0fcc 444A     		ldr	r2, .L749+56
 19533 0fce 1C46     		mov	r4, r3
 19534 0fd0 1346     		mov	r3, r2
 19535 0fd2 07CB     		ldmia	r3!, {r0, r1, r2}
 19536 0fd4 2060     		str	r0, [r4]	@ unaligned
 19537 0fd6 6160     		str	r1, [r4, #4]	@ unaligned
 19538 0fd8 A260     		str	r2, [r4, #8]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 430


 19539 0fda 1B88     		ldrh	r3, [r3]	@ unaligned
 19540 0fdc A381     		strh	r3, [r4, #12]	@ unaligned
2622:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 19541              		.loc 1 2622 0
 19542 0fde 3B4A     		ldr	r2, .L749+36
 19543 0fe0 D7F89430 		ldr	r3, [r7, #148]
 19544 0fe4 1344     		add	r3, r3, r2
 19545 0fe6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19546 0fe8 1946     		mov	r1, r3
 19547 0fea D7F88C20 		ldr	r2, [r7, #140]
 19548 0fee 0B46     		mov	r3, r1
 19549 0ff0 9B00     		lsls	r3, r3, #2
 19550 0ff2 0B44     		add	r3, r3, r1
 19551 0ff4 1344     		add	r3, r3, r2
 19552 0ff6 03F20323 		addw	r3, r3, #515
 19553 0ffa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19554 0ffc 002B     		cmp	r3, #0
 19555 0ffe 0FD0     		beq	.L730
2623:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 19556              		.loc 1 2623 0
 19557 1000 07F11C03 		add	r3, r7, #28
 19558 1004 1846     		mov	r0, r3
 19559 1006 FFF7FEFF 		bl	strlen
 19560 100a 0346     		mov	r3, r0
 19561 100c 1A46     		mov	r2, r3
 19562 100e 07F11C03 		add	r3, r7, #28
 19563 1012 1344     		add	r3, r3, r2
 19564 1014 304A     		ldr	r2, .L749+48
 19565 1016 1068     		ldr	r0, [r2]	@ unaligned
 19566 1018 1860     		str	r0, [r3]	@ unaligned
 19567 101a 9288     		ldrh	r2, [r2, #4]	@ unaligned
 19568 101c 9A80     		strh	r2, [r3, #4]	@ unaligned
 19569 101e 0EE0     		b	.L731
 19570              	.L730:
2624:..\src/command_processing.c **** 			else
2625:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 19571              		.loc 1 2625 0
 19572 1020 07F11C03 		add	r3, r7, #28
 19573 1024 1846     		mov	r0, r3
 19574 1026 FFF7FEFF 		bl	strlen
 19575 102a 0346     		mov	r3, r0
 19576 102c 1A46     		mov	r2, r3
 19577 102e 07F11C03 		add	r3, r7, #28
 19578 1032 1344     		add	r3, r3, r2
 19579 1034 294A     		ldr	r2, .L749+52
 19580 1036 1068     		ldr	r0, [r2]	@ unaligned
 19581 1038 1860     		str	r0, [r3]	@ unaligned
 19582 103a 1279     		ldrb	r2, [r2, #4]
 19583 103c 1A71     		strb	r2, [r3, #4]
 19584              	.L731:
2626:..\src/command_processing.c **** 			strcat(str, "\tMagnetometers: ");
 19585              		.loc 1 2626 0
 19586 103e 07F11C03 		add	r3, r7, #28
 19587 1042 1846     		mov	r0, r3
 19588 1044 FFF7FEFF 		bl	strlen
 19589 1048 0346     		mov	r3, r0
 19590 104a 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 431


 19591 104c 07F11C03 		add	r3, r7, #28
 19592 1050 1344     		add	r3, r3, r2
 19593 1052 244A     		ldr	r2, .L749+60
 19594 1054 1D46     		mov	r5, r3
 19595 1056 1446     		mov	r4, r2
 19596 1058 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19597 105a 2860     		str	r0, [r5]	@ unaligned
 19598 105c 6960     		str	r1, [r5, #4]	@ unaligned
 19599 105e AA60     		str	r2, [r5, #8]	@ unaligned
 19600 1060 EB60     		str	r3, [r5, #12]	@ unaligned
 19601 1062 2378     		ldrb	r3, [r4]
 19602 1064 2B74     		strb	r3, [r5, #16]
2627:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 19603              		.loc 1 2627 0
 19604 1066 194A     		ldr	r2, .L749+36
 19605 1068 D7F89430 		ldr	r3, [r7, #148]
 19606 106c 1344     		add	r3, r3, r2
 19607 106e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19608 1070 1946     		mov	r1, r3
 19609 1072 D7F88C20 		ldr	r2, [r7, #140]
 19610 1076 0B46     		mov	r3, r1
 19611 1078 9B00     		lsls	r3, r3, #2
 19612 107a 0B44     		add	r3, r3, r1
 19613 107c 1344     		add	r3, r3, r2
 19614 107e 03F50173 		add	r3, r3, #516
 19615 1082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19616 1084 002B     		cmp	r3, #0
 19617 1086 2FD0     		beq	.L732
2628:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 19618              		.loc 1 2628 0
 19619 1088 07F11C03 		add	r3, r7, #28
 19620 108c 1846     		mov	r0, r3
 19621 108e FFF7FEFF 		bl	strlen
 19622 1092 0346     		mov	r3, r0
 19623 1094 1A46     		mov	r2, r3
 19624 1096 07F11C03 		add	r3, r7, #28
 19625 109a 1344     		add	r3, r3, r2
 19626 109c 0E4A     		ldr	r2, .L749+48
 19627 109e 1068     		ldr	r0, [r2]	@ unaligned
 19628 10a0 1860     		str	r0, [r3]	@ unaligned
 19629 10a2 9288     		ldrh	r2, [r2, #4]	@ unaligned
 19630 10a4 9A80     		strh	r2, [r3, #4]	@ unaligned
 19631 10a6 2EE0     		b	.L733
 19632              	.L750:
 19633              		.align	2
 19634              	.L749:
 19635 10a8 B0170000 		.word	.LC225
 19636 10ac CC170000 		.word	.LC226
 19637 10b0 A8100000 		.word	.LC147
 19638 10b4 28180000 		.word	.LC230
 19639 10b8 44180000 		.word	.LC231
 19640 10bc 6C180000 		.word	.LC232
 19641 10c0 00000000 		.word	N_IMU_Connected
 19642 10c4 80180000 		.word	.LC233
 19643 10c8 94180000 		.word	.LC234
 19644 10cc 00000000 		.word	IMU_connected
 19645 10d0 AC180000 		.word	.LC235
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 432


 19646 10d4 C0180000 		.word	.LC236
 19647 10d8 90120000 		.word	.LC170
 19648 10dc 98120000 		.word	.LC171
 19649 10e0 D4180000 		.word	.LC237
 19650 10e4 E4180000 		.word	.LC238
 19651              	.L732:
2629:..\src/command_processing.c **** 			else
2630:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 19652              		.loc 1 2630 0
 19653 10e8 07F11C03 		add	r3, r7, #28
 19654 10ec 1846     		mov	r0, r3
 19655 10ee FFF7FEFF 		bl	strlen
 19656 10f2 0346     		mov	r3, r0
 19657 10f4 1A46     		mov	r2, r3
 19658 10f6 07F11C03 		add	r3, r7, #28
 19659 10fa 1344     		add	r3, r3, r2
 19660 10fc 584A     		ldr	r2, .L751
 19661 10fe 1068     		ldr	r0, [r2]	@ unaligned
 19662 1100 1860     		str	r0, [r3]	@ unaligned
 19663 1102 1279     		ldrb	r2, [r2, #4]
 19664 1104 1A71     		strb	r2, [r3, #4]
 19665              	.L733:
2631:..\src/command_processing.c **** 			strcat(str, "\tQuaternion: ");                
 19666              		.loc 1 2631 0
 19667 1106 07F11C03 		add	r3, r7, #28
 19668 110a 1846     		mov	r0, r3
 19669 110c FFF7FEFF 		bl	strlen
 19670 1110 0346     		mov	r3, r0
 19671 1112 1A46     		mov	r2, r3
 19672 1114 07F11C03 		add	r3, r7, #28
 19673 1118 1344     		add	r3, r3, r2
 19674 111a 524A     		ldr	r2, .L751+4
 19675 111c 1C46     		mov	r4, r3
 19676 111e 1346     		mov	r3, r2
 19677 1120 07CB     		ldmia	r3!, {r0, r1, r2}
 19678 1122 2060     		str	r0, [r4]	@ unaligned
 19679 1124 6160     		str	r1, [r4, #4]	@ unaligned
 19680 1126 A260     		str	r2, [r4, #8]	@ unaligned
 19681 1128 1B88     		ldrh	r3, [r3]	@ unaligned
 19682 112a A381     		strh	r3, [r4, #12]	@ unaligned
2632:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 19683              		.loc 1 2632 0
 19684 112c 4E4A     		ldr	r2, .L751+8
 19685 112e D7F89430 		ldr	r3, [r7, #148]
 19686 1132 1344     		add	r3, r3, r2
 19687 1134 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19688 1136 1946     		mov	r1, r3
 19689 1138 D7F88C20 		ldr	r2, [r7, #140]
 19690 113c 0B46     		mov	r3, r1
 19691 113e 9B00     		lsls	r3, r3, #2
 19692 1140 0B44     		add	r3, r3, r1
 19693 1142 1344     		add	r3, r3, r2
 19694 1144 03F20523 		addw	r3, r3, #517
 19695 1148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19696 114a 002B     		cmp	r3, #0
 19697 114c 0FD0     		beq	.L734
2633:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 433


 19698              		.loc 1 2633 0
 19699 114e 07F11C03 		add	r3, r7, #28
 19700 1152 1846     		mov	r0, r3
 19701 1154 FFF7FEFF 		bl	strlen
 19702 1158 0346     		mov	r3, r0
 19703 115a 1A46     		mov	r2, r3
 19704 115c 07F11C03 		add	r3, r7, #28
 19705 1160 1344     		add	r3, r3, r2
 19706 1162 424A     		ldr	r2, .L751+12
 19707 1164 1068     		ldr	r0, [r2]	@ unaligned
 19708 1166 1860     		str	r0, [r3]	@ unaligned
 19709 1168 9288     		ldrh	r2, [r2, #4]	@ unaligned
 19710 116a 9A80     		strh	r2, [r3, #4]	@ unaligned
 19711 116c 0EE0     		b	.L735
 19712              	.L734:
2634:..\src/command_processing.c **** 			else
2635:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 19713              		.loc 1 2635 0
 19714 116e 07F11C03 		add	r3, r7, #28
 19715 1172 1846     		mov	r0, r3
 19716 1174 FFF7FEFF 		bl	strlen
 19717 1178 0346     		mov	r3, r0
 19718 117a 1A46     		mov	r2, r3
 19719 117c 07F11C03 		add	r3, r7, #28
 19720 1180 1344     		add	r3, r3, r2
 19721 1182 374A     		ldr	r2, .L751
 19722 1184 1068     		ldr	r0, [r2]	@ unaligned
 19723 1186 1860     		str	r0, [r3]	@ unaligned
 19724 1188 1279     		ldrb	r2, [r2, #4]
 19725 118a 1A71     		strb	r2, [r3, #4]
 19726              	.L735:
2636:..\src/command_processing.c **** 			strcat(str, "\tTemperature: ");
 19727              		.loc 1 2636 0
 19728 118c 07F11C03 		add	r3, r7, #28
 19729 1190 1846     		mov	r0, r3
 19730 1192 FFF7FEFF 		bl	strlen
 19731 1196 0346     		mov	r3, r0
 19732 1198 1A46     		mov	r2, r3
 19733 119a 07F11C03 		add	r3, r7, #28
 19734 119e 1344     		add	r3, r3, r2
 19735 11a0 334A     		ldr	r2, .L751+16
 19736 11a2 1C46     		mov	r4, r3
 19737 11a4 1346     		mov	r3, r2
 19738 11a6 07CB     		ldmia	r3!, {r0, r1, r2}
 19739 11a8 2060     		str	r0, [r4]	@ unaligned
 19740 11aa 6160     		str	r1, [r4, #4]	@ unaligned
 19741 11ac A260     		str	r2, [r4, #8]	@ unaligned
 19742 11ae 1A88     		ldrh	r2, [r3]	@ unaligned
 19743 11b0 9B78     		ldrb	r3, [r3, #2]
 19744 11b2 A281     		strh	r2, [r4, #12]	@ unaligned
 19745 11b4 A373     		strb	r3, [r4, #14]
2637:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 19746              		.loc 1 2637 0
 19747 11b6 2C4A     		ldr	r2, .L751+8
 19748 11b8 D7F89430 		ldr	r3, [r7, #148]
 19749 11bc 1344     		add	r3, r3, r2
 19750 11be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 434


 19751 11c0 1946     		mov	r1, r3
 19752 11c2 D7F88C20 		ldr	r2, [r7, #140]
 19753 11c6 0B46     		mov	r3, r1
 19754 11c8 9B00     		lsls	r3, r3, #2
 19755 11ca 0B44     		add	r3, r3, r1
 19756 11cc 1344     		add	r3, r3, r2
 19757 11ce 03F20623 		addw	r3, r3, #518
 19758 11d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19759 11d4 002B     		cmp	r3, #0
 19760 11d6 0FD0     		beq	.L736
2638:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 19761              		.loc 1 2638 0
 19762 11d8 07F11C03 		add	r3, r7, #28
 19763 11dc 1846     		mov	r0, r3
 19764 11de FFF7FEFF 		bl	strlen
 19765 11e2 0346     		mov	r3, r0
 19766 11e4 1A46     		mov	r2, r3
 19767 11e6 07F11C03 		add	r3, r7, #28
 19768 11ea 1344     		add	r3, r3, r2
 19769 11ec 1F4A     		ldr	r2, .L751+12
 19770 11ee 1068     		ldr	r0, [r2]	@ unaligned
 19771 11f0 1860     		str	r0, [r3]	@ unaligned
 19772 11f2 9288     		ldrh	r2, [r2, #4]	@ unaligned
 19773 11f4 9A80     		strh	r2, [r3, #4]	@ unaligned
 19774 11f6 0EE0     		b	.L737
 19775              	.L736:
2639:..\src/command_processing.c **** 			else
2640:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 19776              		.loc 1 2640 0
 19777 11f8 07F11C03 		add	r3, r7, #28
 19778 11fc 1846     		mov	r0, r3
 19779 11fe FFF7FEFF 		bl	strlen
 19780 1202 0346     		mov	r3, r0
 19781 1204 1A46     		mov	r2, r3
 19782 1206 07F11C03 		add	r3, r7, #28
 19783 120a 1344     		add	r3, r3, r2
 19784 120c 144A     		ldr	r2, .L751
 19785 120e 1068     		ldr	r0, [r2]	@ unaligned
 19786 1210 1860     		str	r0, [r3]	@ unaligned
 19787 1212 1279     		ldrb	r2, [r2, #4]
 19788 1214 1A71     		strb	r2, [r3, #4]
 19789              	.L737:
2641:..\src/command_processing.c **** 				 
2642:..\src/command_processing.c **** 			strcat(info_string, str);
 19790              		.loc 1 2642 0 discriminator 2
 19791 1216 07F11C03 		add	r3, r7, #28
 19792 121a 1946     		mov	r1, r3
 19793 121c 7869     		ldr	r0, [r7, #20]
 19794 121e FFF7FEFF 		bl	strcat
2612:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 19795              		.loc 1 2612 0 discriminator 2
 19796 1222 D7F89430 		ldr	r3, [r7, #148]
 19797 1226 0133     		adds	r3, r3, #1
 19798 1228 C7F89430 		str	r3, [r7, #148]
 19799              	.L727:
2612:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 19800              		.loc 1 2612 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 435


 19801 122c 114B     		ldr	r3, .L751+20
 19802 122e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19803 1230 1A46     		mov	r2, r3
 19804 1232 D7F89430 		ldr	r3, [r7, #148]
 19805 1236 9A42     		cmp	r2, r3
 19806 1238 3FF773AE 		bgt	.L738
2643:..\src/command_processing.c **** 		}       
2644:..\src/command_processing.c **** 		
2645:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 19807              		.loc 1 2645 0 is_stmt 1
 19808 123c 7869     		ldr	r0, [r7, #20]
 19809 123e FFF7FEFF 		bl	strlen
 19810 1242 0346     		mov	r3, r0
 19811 1244 1A46     		mov	r2, r3
 19812 1246 7B69     		ldr	r3, [r7, #20]
 19813 1248 1344     		add	r3, r3, r2
 19814 124a 0B4A     		ldr	r2, .L751+24
 19815 124c 1188     		ldrh	r1, [r2]	@ unaligned
 19816 124e 9278     		ldrb	r2, [r2, #2]
 19817 1250 1980     		strh	r1, [r3]	@ unaligned
 19818 1252 9A70     		strb	r2, [r3, #2]
 19819              	.L740:
2646:..\src/command_processing.c **** 	}
2647:..\src/command_processing.c **** }
 19820              		.loc 1 2647 0
 19821 1254 00BF     		nop
 19822 1256 9C37     		adds	r7, r7, #156
 19823              		.cfi_def_cfa_offset 36
 19824 1258 BD46     		mov	sp, r7
 19825              		.cfi_def_cfa_register 13
 19826              		@ sp needed
 19827 125a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 19828              	.L752:
 19829 125e 00BF     		.align	2
 19830              	.L751:
 19831 1260 98120000 		.word	.LC171
 19832 1264 F8180000 		.word	.LC239
 19833 1268 00000000 		.word	IMU_connected
 19834 126c 90120000 		.word	.LC170
 19835 1270 08190000 		.word	.LC240
 19836 1274 00000000 		.word	N_IMU_Connected
 19837 1278 A8100000 		.word	.LC147
 19838              		.cfi_endproc
 19839              	.LFE74:
 19840              		.size	prepare_SD_param_info, .-prepare_SD_param_info
 19841              		.section	.rodata
 19842 1c4a 0000     		.align	2
 19843              	.LC268:
 19844 1c4c 486F7572 		.ascii	"Hour,Min,Sec,\000"
 19844      2C4D696E 
 19844      2C536563 
 19844      2C00
 19845 1c5a 0000     		.align	2
 19846              	.LC269:
 19847 1c5c 42696E5F 		.ascii	"Bin_%d_Pos,\000"
 19847      25645F50 
 19847      6F732C00 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 436


 19848              		.align	2
 19849              	.LC270:
 19850 1c68 42696E5F 		.ascii	"Bin_%d_Curr,\000"
 19850      25645F43 
 19850      7572722C 
 19850      00
 19851 1c75 000000   		.align	2
 19852              	.LC271:
 19853 1c78 454D475F 		.ascii	"EMG_1_act,EMG_2_act,Rest_times,Wire_disp,Total_powe"
 19853      315F6163 
 19853      742C454D 
 19853      475F325F 
 19853      6163742C 
 19854 1cab 725F6F6E 		.ascii	"r_on_time,Total_rest_time\000"
 19854      5F74696D 
 19854      652C546F 
 19854      74616C5F 
 19854      72657374 
 19855              		.section	.text.prepare_SD_legend,"ax",%progbits
 19856              		.align	2
 19857              		.global	prepare_SD_legend
 19858              		.thumb
 19859              		.thumb_func
 19860              		.type	prepare_SD_legend, %function
 19861              	prepare_SD_legend:
 19862              	.LFB75:
2648:..\src/command_processing.c **** 
2649:..\src/command_processing.c **** 
2650:..\src/command_processing.c **** //==============================================================================
2651:..\src/command_processing.c **** //                                                        PREPARE SD CARD LEGEND
2652:..\src/command_processing.c **** //==============================================================================
2653:..\src/command_processing.c **** void prepare_SD_legend(char *info_string)
2654:..\src/command_processing.c **** {
 19863              		.loc 1 2654 0
 19864              		.cfi_startproc
 19865              		@ args = 0, pretend = 0, frame = 112
 19866              		@ frame_needed = 1, uses_anonymous_args = 0
 19867 0000 90B5     		push	{r4, r7, lr}
 19868              		.cfi_def_cfa_offset 12
 19869              		.cfi_offset 4, -12
 19870              		.cfi_offset 7, -8
 19871              		.cfi_offset 14, -4
 19872 0002 9DB0     		sub	sp, sp, #116
 19873              		.cfi_def_cfa_offset 128
 19874 0004 00AF     		add	r7, sp, #0
 19875              		.cfi_def_cfa_register 7
 19876 0006 7860     		str	r0, [r7, #4]
2655:..\src/command_processing.c ****     char str[100];  
2656:..\src/command_processing.c ****     int i;
2657:..\src/command_processing.c ****         
2658:..\src/command_processing.c ****     // Legend
2659:..\src/command_processing.c ****     strcpy(info_string, "Hour,Min,Sec,");
 19877              		.loc 1 2659 0
 19878 0008 7B68     		ldr	r3, [r7, #4]
 19879 000a 2A4A     		ldr	r2, .L758
 19880 000c 1C46     		mov	r4, r3
 19881 000e 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 437


 19882 0010 07CB     		ldmia	r3!, {r0, r1, r2}
 19883 0012 2060     		str	r0, [r4]	@ unaligned
 19884 0014 6160     		str	r1, [r4, #4]	@ unaligned
 19885 0016 A260     		str	r2, [r4, #8]	@ unaligned
 19886 0018 1B88     		ldrh	r3, [r3]	@ unaligned
 19887 001a A381     		strh	r3, [r4, #12]	@ unaligned
2660:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 19888              		.loc 1 2660 0
 19889 001c 0123     		movs	r3, #1
 19890 001e FB66     		str	r3, [r7, #108]
 19891 0020 0FE0     		b	.L754
 19892              	.L755:
2661:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Pos,", i); 
 19893              		.loc 1 2661 0 discriminator 3
 19894 0022 07F10803 		add	r3, r7, #8
 19895 0026 FA6E     		ldr	r2, [r7, #108]
 19896 0028 2349     		ldr	r1, .L758+4
 19897 002a 1846     		mov	r0, r3
 19898 002c FFF7FEFF 		bl	sprintf
2662:..\src/command_processing.c ****         strcat(info_string, str);
 19899              		.loc 1 2662 0 discriminator 3
 19900 0030 07F10803 		add	r3, r7, #8
 19901 0034 1946     		mov	r1, r3
 19902 0036 7868     		ldr	r0, [r7, #4]
 19903 0038 FFF7FEFF 		bl	strcat
2660:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 19904              		.loc 1 2660 0 discriminator 3
 19905 003c FB6E     		ldr	r3, [r7, #108]
 19906 003e 0133     		adds	r3, r3, #1
 19907 0040 FB66     		str	r3, [r7, #108]
 19908              	.L754:
2660:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 19909              		.loc 1 2660 0 is_stmt 0 discriminator 1
 19910 0042 FB6E     		ldr	r3, [r7, #108]
 19911 0044 0A2B     		cmp	r3, #10
 19912 0046 ECDD     		ble	.L755
2663:..\src/command_processing.c ****     }
2664:..\src/command_processing.c ****     for (i=1; i<=4;i++){        // Current bins
 19913              		.loc 1 2664 0 is_stmt 1
 19914 0048 0123     		movs	r3, #1
 19915 004a FB66     		str	r3, [r7, #108]
 19916 004c 0FE0     		b	.L756
 19917              	.L757:
2665:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 19918              		.loc 1 2665 0 discriminator 3
 19919 004e 07F10803 		add	r3, r7, #8
 19920 0052 FA6E     		ldr	r2, [r7, #108]
 19921 0054 1949     		ldr	r1, .L758+8
 19922 0056 1846     		mov	r0, r3
 19923 0058 FFF7FEFF 		bl	sprintf
2666:..\src/command_processing.c ****         strcat(info_string, str);
 19924              		.loc 1 2666 0 discriminator 3
 19925 005c 07F10803 		add	r3, r7, #8
 19926 0060 1946     		mov	r1, r3
 19927 0062 7868     		ldr	r0, [r7, #4]
 19928 0064 FFF7FEFF 		bl	strcat
2664:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 438


 19929              		.loc 1 2664 0 discriminator 3
 19930 0068 FB6E     		ldr	r3, [r7, #108]
 19931 006a 0133     		adds	r3, r3, #1
 19932 006c FB66     		str	r3, [r7, #108]
 19933              	.L756:
2664:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 19934              		.loc 1 2664 0 is_stmt 0 discriminator 1
 19935 006e FB6E     		ldr	r3, [r7, #108]
 19936 0070 042B     		cmp	r3, #4
 19937 0072 ECDD     		ble	.L757
2667:..\src/command_processing.c ****     }
2668:..\src/command_processing.c ****     sprintf(str, "EMG_1_act,EMG_2_act,Rest_times,Wire_disp,Total_power_on_time,Total_rest_time");
 19938              		.loc 1 2668 0 is_stmt 1
 19939 0074 07F10803 		add	r3, r7, #8
 19940 0078 114A     		ldr	r2, .L758+12
 19941 007a 1846     		mov	r0, r3
 19942 007c 1146     		mov	r1, r2
 19943 007e 4D23     		movs	r3, #77
 19944 0080 1A46     		mov	r2, r3
 19945 0082 FFF7FEFF 		bl	memcpy
2669:..\src/command_processing.c ****     strcat(info_string, str);
 19946              		.loc 1 2669 0
 19947 0086 07F10803 		add	r3, r7, #8
 19948 008a 1946     		mov	r1, r3
 19949 008c 7868     		ldr	r0, [r7, #4]
 19950 008e FFF7FEFF 		bl	strcat
2670:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 19951              		.loc 1 2670 0
 19952 0092 7868     		ldr	r0, [r7, #4]
 19953 0094 FFF7FEFF 		bl	strlen
 19954 0098 0346     		mov	r3, r0
 19955 009a 1A46     		mov	r2, r3
 19956 009c 7B68     		ldr	r3, [r7, #4]
 19957 009e 1344     		add	r3, r3, r2
 19958 00a0 084A     		ldr	r2, .L758+16
 19959 00a2 1188     		ldrh	r1, [r2]	@ unaligned
 19960 00a4 9278     		ldrb	r2, [r2, #2]
 19961 00a6 1980     		strh	r1, [r3]	@ unaligned
 19962 00a8 9A70     		strb	r2, [r3, #2]
2671:..\src/command_processing.c **** }
 19963              		.loc 1 2671 0
 19964 00aa 00BF     		nop
 19965 00ac 7437     		adds	r7, r7, #116
 19966              		.cfi_def_cfa_offset 12
 19967 00ae BD46     		mov	sp, r7
 19968              		.cfi_def_cfa_register 13
 19969              		@ sp needed
 19970 00b0 90BD     		pop	{r4, r7, pc}
 19971              	.L759:
 19972 00b2 00BF     		.align	2
 19973              	.L758:
 19974 00b4 4C1C0000 		.word	.LC268
 19975 00b8 5C1C0000 		.word	.LC269
 19976 00bc 681C0000 		.word	.LC270
 19977 00c0 781C0000 		.word	.LC271
 19978 00c4 A8100000 		.word	.LC147
 19979              		.cfi_endproc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 439


 19980              	.LFE75:
 19981              		.size	prepare_SD_legend, .-prepare_SD_legend
 19982              		.section	.rodata
 19983 1cc5 000000   		.align	2
 19984              	.LC272:
 19985 1cc8 25303264 		.ascii	"%02d,%02d,%02d,\000"
 19985      2C253032 
 19985      642C2530 
 19985      32642C00 
 19986              		.align	2
 19987              	.LC273:
 19988 1cd8 256C752C 		.ascii	"%lu,\000"
 19988      00
 19989 1cdd 000000   		.align	2
 19990              	.LC274:
 19991 1ce0 256C752C 		.ascii	"%lu,%lu,\000"
 19991      256C752C 
 19991      00
 19992 1ce9 000000   		.align	2
 19993              	.LC275:
 19994 1cec 256C752C 		.ascii	"%lu,%lu,%lu,%lu\000"
 19994      256C752C 
 19994      256C752C 
 19994      256C7500 
 19995              		.section	.text.prepare_SD_info,"ax",%progbits
 19996              		.align	2
 19997              		.global	prepare_SD_info
 19998              		.thumb
 19999              		.thumb_func
 20000              		.type	prepare_SD_info, %function
 20001              	prepare_SD_info:
 20002              	.LFB76:
2672:..\src/command_processing.c **** 
2673:..\src/command_processing.c **** //==============================================================================
2674:..\src/command_processing.c **** //                                                          PREPARE SD CARD INFO
2675:..\src/command_processing.c **** //==============================================================================
2676:..\src/command_processing.c **** void prepare_SD_info(char *info_string)
2677:..\src/command_processing.c **** {
 20003              		.loc 1 2677 0
 20004              		.cfi_startproc
 20005              		@ args = 0, pretend = 0, frame = 112
 20006              		@ frame_needed = 1, uses_anonymous_args = 0
 20007 0000 90B5     		push	{r4, r7, lr}
 20008              		.cfi_def_cfa_offset 12
 20009              		.cfi_offset 4, -12
 20010              		.cfi_offset 7, -8
 20011              		.cfi_offset 14, -4
 20012 0002 9FB0     		sub	sp, sp, #124
 20013              		.cfi_def_cfa_offset 136
 20014 0004 02AF     		add	r7, sp, #8
 20015              		.cfi_def_cfa 7, 128
 20016 0006 7860     		str	r0, [r7, #4]
2678:..\src/command_processing.c ****     char str[100];  
2679:..\src/command_processing.c ****     int i;
2680:..\src/command_processing.c ****             
2681:..\src/command_processing.c ****     strcpy(info_string, "");
 20017              		.loc 1 2681 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 440


 20018 0008 7B68     		ldr	r3, [r7, #4]
 20019 000a 0022     		movs	r2, #0
 20020 000c 1A70     		strb	r2, [r3]
2682:..\src/command_processing.c ****     
2683:..\src/command_processing.c ****     // Time
2684:..\src/command_processing.c ****     strcat(info_string, "");
2685:..\src/command_processing.c ****     sprintf(str, "%02d,%02d,%02d,", (int)g_mem.exp.curr_time[3], (int)g_mem.exp.curr_time[4], (int)
 20021              		.loc 1 2685 0
 20022 000e 424B     		ldr	r3, .L765
 20023 0010 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 20024 0014 1A46     		mov	r2, r3
 20025 0016 404B     		ldr	r3, .L765
 20026 0018 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 20027 001c 1946     		mov	r1, r3
 20028 001e 3E4B     		ldr	r3, .L765
 20029 0020 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 20030 0024 07F10800 		add	r0, r7, #8
 20031 0028 0093     		str	r3, [sp]
 20032 002a 0B46     		mov	r3, r1
 20033 002c 3B49     		ldr	r1, .L765+4
 20034 002e FFF7FEFF 		bl	sprintf
2686:..\src/command_processing.c ****     strcat(info_string, str);
 20035              		.loc 1 2686 0
 20036 0032 07F10803 		add	r3, r7, #8
 20037 0036 1946     		mov	r1, r3
 20038 0038 7868     		ldr	r0, [r7, #4]
 20039 003a FFF7FEFF 		bl	strcat
2687:..\src/command_processing.c **** 
2688:..\src/command_processing.c ****     // Pos_Bin
2689:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 20040              		.loc 1 2689 0
 20041 003e 0123     		movs	r3, #1
 20042 0040 FB66     		str	r3, [r7, #108]
 20043 0042 14E0     		b	.L761
 20044              	.L762:
2690:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 20045              		.loc 1 2690 0 discriminator 3
 20046 0044 FB6E     		ldr	r3, [r7, #108]
 20047 0046 013B     		subs	r3, r3, #1
 20048 0048 334A     		ldr	r2, .L765
 20049 004a 0633     		adds	r3, r3, #6
 20050 004c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 20051 0050 07F10803 		add	r3, r7, #8
 20052 0054 3249     		ldr	r1, .L765+8
 20053 0056 1846     		mov	r0, r3
 20054 0058 FFF7FEFF 		bl	sprintf
2691:..\src/command_processing.c ****         strcat(info_string, str);
 20055              		.loc 1 2691 0 discriminator 3
 20056 005c 07F10803 		add	r3, r7, #8
 20057 0060 1946     		mov	r1, r3
 20058 0062 7868     		ldr	r0, [r7, #4]
 20059 0064 FFF7FEFF 		bl	strcat
2689:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 20060              		.loc 1 2689 0 discriminator 3
 20061 0068 FB6E     		ldr	r3, [r7, #108]
 20062 006a 0133     		adds	r3, r3, #1
 20063 006c FB66     		str	r3, [r7, #108]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 441


 20064              	.L761:
2689:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 20065              		.loc 1 2689 0 is_stmt 0 discriminator 1
 20066 006e FB6E     		ldr	r3, [r7, #108]
 20067 0070 0A2B     		cmp	r3, #10
 20068 0072 E7DD     		ble	.L762
2692:..\src/command_processing.c ****     }
2693:..\src/command_processing.c ****     
2694:..\src/command_processing.c ****     // Curr_Bin
2695:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 20069              		.loc 1 2695 0 is_stmt 1
 20070 0074 0123     		movs	r3, #1
 20071 0076 FB66     		str	r3, [r7, #108]
 20072 0078 14E0     		b	.L763
 20073              	.L764:
2696:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 20074              		.loc 1 2696 0 discriminator 3
 20075 007a FB6E     		ldr	r3, [r7, #108]
 20076 007c 013B     		subs	r3, r3, #1
 20077 007e 264A     		ldr	r2, .L765
 20078 0080 1033     		adds	r3, r3, #16
 20079 0082 52F82320 		ldr	r2, [r2, r3, lsl #2]
 20080 0086 07F10803 		add	r3, r7, #8
 20081 008a 2549     		ldr	r1, .L765+8
 20082 008c 1846     		mov	r0, r3
 20083 008e FFF7FEFF 		bl	sprintf
2697:..\src/command_processing.c ****         strcat(info_string, str);
 20084              		.loc 1 2697 0 discriminator 3
 20085 0092 07F10803 		add	r3, r7, #8
 20086 0096 1946     		mov	r1, r3
 20087 0098 7868     		ldr	r0, [r7, #4]
 20088 009a FFF7FEFF 		bl	strcat
2695:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 20089              		.loc 1 2695 0 discriminator 3
 20090 009e FB6E     		ldr	r3, [r7, #108]
 20091 00a0 0133     		adds	r3, r3, #1
 20092 00a2 FB66     		str	r3, [r7, #108]
 20093              	.L763:
2695:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 20094              		.loc 1 2695 0 is_stmt 0 discriminator 1
 20095 00a4 FB6E     		ldr	r3, [r7, #108]
 20096 00a6 042B     		cmp	r3, #4
 20097 00a8 E7DD     		ble	.L764
2698:..\src/command_processing.c ****     }
2699:..\src/command_processing.c ****        
2700:..\src/command_processing.c ****     // EMG_1, EMG_2
2701:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,", g_mem.cnt.emg_counter[0], g_mem.cnt.emg_counter[1]);
 20098              		.loc 1 2701 0 is_stmt 1
 20099 00aa 1B4B     		ldr	r3, .L765
 20100 00ac 1A69     		ldr	r2, [r3, #16]
 20101 00ae 1A4B     		ldr	r3, .L765
 20102 00b0 5B69     		ldr	r3, [r3, #20]
 20103 00b2 07F10800 		add	r0, r7, #8
 20104 00b6 1B49     		ldr	r1, .L765+12
 20105 00b8 FFF7FEFF 		bl	sprintf
2702:..\src/command_processing.c ****     strcat(info_string, str);
 20106              		.loc 1 2702 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 442


 20107 00bc 07F10803 		add	r3, r7, #8
 20108 00c0 1946     		mov	r1, r3
 20109 00c2 7868     		ldr	r0, [r7, #4]
 20110 00c4 FFF7FEFF 		bl	strcat
2703:..\src/command_processing.c ****     
2704:..\src/command_processing.c ****     // Rest_times, Wire_disp, Total_power_on_time, Total_rest_time
2705:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,%lu,%lu", g_mem.cnt.rest_counter, g_mem.cnt.wire_disp, g_mem.cnt.total_ti
 20111              		.loc 1 2705 0
 20112 00c8 134B     		ldr	r3, .L765
 20113 00ca 196D     		ldr	r1, [r3, #80]
 20114 00cc 124B     		ldr	r3, .L765
 20115 00ce 5C6D     		ldr	r4, [r3, #84]
 20116 00d0 114B     		ldr	r3, .L765
 20117 00d2 9B6D     		ldr	r3, [r3, #88]
 20118 00d4 104A     		ldr	r2, .L765
 20119 00d6 D26D     		ldr	r2, [r2, #92]
 20120 00d8 07F10800 		add	r0, r7, #8
 20121 00dc 0192     		str	r2, [sp, #4]
 20122 00de 0093     		str	r3, [sp]
 20123 00e0 2346     		mov	r3, r4
 20124 00e2 0A46     		mov	r2, r1
 20125 00e4 1049     		ldr	r1, .L765+16
 20126 00e6 FFF7FEFF 		bl	sprintf
2706:..\src/command_processing.c ****     strcat(info_string, str);
 20127              		.loc 1 2706 0
 20128 00ea 07F10803 		add	r3, r7, #8
 20129 00ee 1946     		mov	r1, r3
 20130 00f0 7868     		ldr	r0, [r7, #4]
 20131 00f2 FFF7FEFF 		bl	strcat
2707:..\src/command_processing.c ****     
2708:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 20132              		.loc 1 2708 0
 20133 00f6 7868     		ldr	r0, [r7, #4]
 20134 00f8 FFF7FEFF 		bl	strlen
 20135 00fc 0346     		mov	r3, r0
 20136 00fe 1A46     		mov	r2, r3
 20137 0100 7B68     		ldr	r3, [r7, #4]
 20138 0102 1344     		add	r3, r3, r2
 20139 0104 094A     		ldr	r2, .L765+20
 20140 0106 1188     		ldrh	r1, [r2]	@ unaligned
 20141 0108 9278     		ldrb	r2, [r2, #2]
 20142 010a 1980     		strh	r1, [r3]	@ unaligned
 20143 010c 9A70     		strb	r2, [r3, #2]
2709:..\src/command_processing.c **** }
 20144              		.loc 1 2709 0
 20145 010e 00BF     		nop
 20146 0110 7437     		adds	r7, r7, #116
 20147              		.cfi_def_cfa_offset 12
 20148 0112 BD46     		mov	sp, r7
 20149              		.cfi_def_cfa_register 13
 20150              		@ sp needed
 20151 0114 90BD     		pop	{r4, r7, pc}
 20152              	.L766:
 20153 0116 00BF     		.align	2
 20154              	.L765:
 20155 0118 00000000 		.word	g_mem
 20156 011c C81C0000 		.word	.LC272
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 443


 20157 0120 D81C0000 		.word	.LC273
 20158 0124 E01C0000 		.word	.LC274
 20159 0128 EC1C0000 		.word	.LC275
 20160 012c A8100000 		.word	.LC147
 20161              		.cfi_endproc
 20162              	.LFE76:
 20163              		.size	prepare_SD_info, .-prepare_SD_info
 20164              		.section	.rodata
 20165              		.align	2
 20166              	.LC276:
 20167 1cfc 53454E53 		.ascii	"SENSORS INFO\015\012\000"
 20167      4F525320 
 20167      494E464F 
 20167      0D0A00
 20168 1d0b 00       		.align	2
 20169              	.LC277:
 20170 1d0c 09416363 		.ascii	"\011Acc: %d\011%d\011%d\015\012\000"
 20170      3A202564 
 20170      09256409 
 20170      25640D0A 
 20170      00
 20171 1d1d 000000   		.align	2
 20172              	.LC278:
 20173 1d20 09477972 		.ascii	"\011Gyro: %d\011%d\011%d\015\012\000"
 20173      6F3A2025 
 20173      64092564 
 20173      0925640D 
 20173      0A00
 20174 1d32 0000     		.align	2
 20175              	.LC279:
 20176 1d34 094D6167 		.ascii	"\011Mag: %d\011%d\011%d\015\012\000"
 20176      3A202564 
 20176      09256409 
 20176      25640D0A 
 20176      00
 20177 1d45 000000   		.align	2
 20178              	.LC280:
 20179 1d48 09517561 		.ascii	"\011Quat: %.3f\011%.3f\011%.3f\011%.3f\015\012\000"
 20179      743A2025 
 20179      2E336609 
 20179      252E3366 
 20179      09252E33 
 20180 1d65 000000   		.align	2
 20181              	.LC281:
 20182 1d68 0954656D 		.ascii	"\011Temperature: %d\015\012\000"
 20182      70657261 
 20182      74757265 
 20182      3A202564 
 20182      0D0A00
 20183              		.section	.text.IMU_reading_info,"ax",%progbits
 20184              		.align	2
 20185              		.global	IMU_reading_info
 20186              		.thumb
 20187              		.thumb_func
 20188              		.type	IMU_reading_info, %function
 20189              	IMU_reading_info:
 20190              	.LFB77:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 444


2710:..\src/command_processing.c **** 
2711:..\src/command_processing.c **** //==============================================================================
2712:..\src/command_processing.c **** //                                                              IMU READING INFO
2713:..\src/command_processing.c **** //==============================================================================
2714:..\src/command_processing.c **** 
2715:..\src/command_processing.c **** void IMU_reading_info(char *info_string)
2716:..\src/command_processing.c **** {
 20191              		.loc 1 2716 0
 20192              		.cfi_startproc
 20193              		@ args = 0, pretend = 0, frame = 312
 20194              		@ frame_needed = 1, uses_anonymous_args = 0
 20195 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 20196              		.cfi_def_cfa_offset 32
 20197              		.cfi_offset 4, -32
 20198              		.cfi_offset 5, -28
 20199              		.cfi_offset 7, -24
 20200              		.cfi_offset 8, -20
 20201              		.cfi_offset 9, -16
 20202              		.cfi_offset 10, -12
 20203              		.cfi_offset 11, -8
 20204              		.cfi_offset 14, -4
 20205 0004 D4B0     		sub	sp, sp, #336
 20206              		.cfi_def_cfa_offset 368
 20207 0006 06AF     		add	r7, sp, #24
 20208              		.cfi_def_cfa 7, 344
 20209 0008 3B1D     		adds	r3, r7, #4
 20210 000a 1860     		str	r0, [r3]
2717:..\src/command_processing.c ****     char str[300];  
2718:..\src/command_processing.c ****     int i;
2719:..\src/command_processing.c ****                  
2720:..\src/command_processing.c ****     strcat(info_string, "SENSORS INFO\r\n");
 20211              		.loc 1 2720 0
 20212 000c 3B1D     		adds	r3, r7, #4
 20213 000e 1868     		ldr	r0, [r3]
 20214 0010 FFF7FEFF 		bl	strlen
 20215 0014 0346     		mov	r3, r0
 20216 0016 1A46     		mov	r2, r3
 20217 0018 3B1D     		adds	r3, r7, #4
 20218 001a 1B68     		ldr	r3, [r3]
 20219 001c 1344     		add	r3, r3, r2
 20220 001e C94A     		ldr	r2, .L775
 20221 0020 1C46     		mov	r4, r3
 20222 0022 1346     		mov	r3, r2
 20223 0024 07CB     		ldmia	r3!, {r0, r1, r2}
 20224 0026 2060     		str	r0, [r4]	@ unaligned
 20225 0028 6160     		str	r1, [r4, #4]	@ unaligned
 20226 002a A260     		str	r2, [r4, #8]	@ unaligned
 20227 002c 1A88     		ldrh	r2, [r3]	@ unaligned
 20228 002e 9B78     		ldrb	r3, [r3, #2]
 20229 0030 A281     		strh	r2, [r4, #12]	@ unaligned
 20230 0032 A373     		strb	r3, [r4, #14]
2721:..\src/command_processing.c ****     for (i=0; i<N_IMU_Connected; i++){
 20231              		.loc 1 2721 0
 20232 0034 0023     		movs	r3, #0
 20233 0036 C7F83431 		str	r3, [r7, #308]
 20234 003a 66E1     		b	.L768
 20235              	.L774:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 445


2722:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20236              		.loc 1 2722 0
 20237 003c C24A     		ldr	r2, .L775+4
 20238 003e D7F83431 		ldr	r3, [r7, #308]
 20239 0042 1344     		add	r3, r3, r2
 20240 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20241 0046 07F10800 		add	r0, r7, #8
 20242 004a D7F83421 		ldr	r2, [r7, #308]
 20243 004e BF49     		ldr	r1, .L775+8
 20244 0050 FFF7FEFF 		bl	sprintf
2723:..\src/command_processing.c ****         strcat(info_string, str);
 20245              		.loc 1 2723 0
 20246 0054 07F10802 		add	r2, r7, #8
 20247 0058 3B1D     		adds	r3, r7, #4
 20248 005a 1146     		mov	r1, r2
 20249 005c 1868     		ldr	r0, [r3]
 20250 005e FFF7FEFF 		bl	strcat
2724:..\src/command_processing.c ****         
2725:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][0])){
 20251              		.loc 1 2725 0
 20252 0062 B94A     		ldr	r2, .L775+4
 20253 0064 D7F83431 		ldr	r3, [r7, #308]
 20254 0068 1344     		add	r3, r3, r2
 20255 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20256 006c 1946     		mov	r1, r3
 20257 006e B84A     		ldr	r2, .L775+12
 20258 0070 0B46     		mov	r3, r1
 20259 0072 9B00     		lsls	r3, r3, #2
 20260 0074 0B44     		add	r3, r3, r1
 20261 0076 1344     		add	r3, r3, r2
 20262 0078 03F20223 		addw	r3, r3, #514
 20263 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20264 007e 002B     		cmp	r3, #0
 20265 0080 31D0     		beq	.L769
2726:..\src/command_processing.c ****             sprintf(str, "\tAcc: %d\t%d\t%d\r\n", (int16) g_imu[i].accel_value[0], (int16) g_imu[i]
 20266              		.loc 1 2726 0
 20267 0082 B449     		ldr	r1, .L775+16
 20268 0084 D7F83421 		ldr	r2, [r7, #308]
 20269 0088 1346     		mov	r3, r2
 20270 008a 9B00     		lsls	r3, r3, #2
 20271 008c 1344     		add	r3, r3, r2
 20272 008e DB00     		lsls	r3, r3, #3
 20273 0090 0B44     		add	r3, r3, r1
 20274 0092 0233     		adds	r3, r3, #2
 20275 0094 B3F90030 		ldrsh	r3, [r3]
 20276 0098 1C46     		mov	r4, r3
 20277 009a AE49     		ldr	r1, .L775+16
 20278 009c D7F83421 		ldr	r2, [r7, #308]
 20279 00a0 1346     		mov	r3, r2
 20280 00a2 9B00     		lsls	r3, r3, #2
 20281 00a4 1344     		add	r3, r3, r2
 20282 00a6 DB00     		lsls	r3, r3, #3
 20283 00a8 0B44     		add	r3, r3, r1
 20284 00aa 0433     		adds	r3, r3, #4
 20285 00ac B3F90030 		ldrsh	r3, [r3]
 20286 00b0 1D46     		mov	r5, r3
 20287 00b2 A849     		ldr	r1, .L775+16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 446


 20288 00b4 D7F83421 		ldr	r2, [r7, #308]
 20289 00b8 1346     		mov	r3, r2
 20290 00ba 9B00     		lsls	r3, r3, #2
 20291 00bc 1344     		add	r3, r3, r2
 20292 00be DB00     		lsls	r3, r3, #3
 20293 00c0 0B44     		add	r3, r3, r1
 20294 00c2 0633     		adds	r3, r3, #6
 20295 00c4 B3F90030 		ldrsh	r3, [r3]
 20296 00c8 07F10800 		add	r0, r7, #8
 20297 00cc 0093     		str	r3, [sp]
 20298 00ce 2B46     		mov	r3, r5
 20299 00d0 2246     		mov	r2, r4
 20300 00d2 A149     		ldr	r1, .L775+20
 20301 00d4 FFF7FEFF 		bl	sprintf
2727:..\src/command_processing.c ****             strcat(info_string, str);
 20302              		.loc 1 2727 0
 20303 00d8 07F10802 		add	r2, r7, #8
 20304 00dc 3B1D     		adds	r3, r7, #4
 20305 00de 1146     		mov	r1, r2
 20306 00e0 1868     		ldr	r0, [r3]
 20307 00e2 FFF7FEFF 		bl	strcat
 20308              	.L769:
2728:..\src/command_processing.c ****         }
2729:..\src/command_processing.c **** 
2730:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][1])){
 20309              		.loc 1 2730 0
 20310 00e6 984A     		ldr	r2, .L775+4
 20311 00e8 D7F83431 		ldr	r3, [r7, #308]
 20312 00ec 1344     		add	r3, r3, r2
 20313 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20314 00f0 1946     		mov	r1, r3
 20315 00f2 974A     		ldr	r2, .L775+12
 20316 00f4 0B46     		mov	r3, r1
 20317 00f6 9B00     		lsls	r3, r3, #2
 20318 00f8 0B44     		add	r3, r3, r1
 20319 00fa 1344     		add	r3, r3, r2
 20320 00fc 03F20323 		addw	r3, r3, #515
 20321 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20322 0102 002B     		cmp	r3, #0
 20323 0104 31D0     		beq	.L770
2731:..\src/command_processing.c ****             sprintf(str, "\tGyro: %d\t%d\t%d\r\n", (int16) g_imu[i].gyro_value[0], (int16) g_imu[i]
 20324              		.loc 1 2731 0
 20325 0106 9349     		ldr	r1, .L775+16
 20326 0108 D7F83421 		ldr	r2, [r7, #308]
 20327 010c 1346     		mov	r3, r2
 20328 010e 9B00     		lsls	r3, r3, #2
 20329 0110 1344     		add	r3, r3, r2
 20330 0112 DB00     		lsls	r3, r3, #3
 20331 0114 0B44     		add	r3, r3, r1
 20332 0116 0833     		adds	r3, r3, #8
 20333 0118 B3F90030 		ldrsh	r3, [r3]
 20334 011c 1C46     		mov	r4, r3
 20335 011e 8D49     		ldr	r1, .L775+16
 20336 0120 D7F83421 		ldr	r2, [r7, #308]
 20337 0124 1346     		mov	r3, r2
 20338 0126 9B00     		lsls	r3, r3, #2
 20339 0128 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 447


 20340 012a DB00     		lsls	r3, r3, #3
 20341 012c 0B44     		add	r3, r3, r1
 20342 012e 0A33     		adds	r3, r3, #10
 20343 0130 B3F90030 		ldrsh	r3, [r3]
 20344 0134 1D46     		mov	r5, r3
 20345 0136 8749     		ldr	r1, .L775+16
 20346 0138 D7F83421 		ldr	r2, [r7, #308]
 20347 013c 1346     		mov	r3, r2
 20348 013e 9B00     		lsls	r3, r3, #2
 20349 0140 1344     		add	r3, r3, r2
 20350 0142 DB00     		lsls	r3, r3, #3
 20351 0144 0B44     		add	r3, r3, r1
 20352 0146 0C33     		adds	r3, r3, #12
 20353 0148 B3F90030 		ldrsh	r3, [r3]
 20354 014c 07F10800 		add	r0, r7, #8
 20355 0150 0093     		str	r3, [sp]
 20356 0152 2B46     		mov	r3, r5
 20357 0154 2246     		mov	r2, r4
 20358 0156 8149     		ldr	r1, .L775+24
 20359 0158 FFF7FEFF 		bl	sprintf
2732:..\src/command_processing.c ****             strcat(info_string, str);
 20360              		.loc 1 2732 0
 20361 015c 07F10802 		add	r2, r7, #8
 20362 0160 3B1D     		adds	r3, r7, #4
 20363 0162 1146     		mov	r1, r2
 20364 0164 1868     		ldr	r0, [r3]
 20365 0166 FFF7FEFF 		bl	strcat
 20366              	.L770:
2733:..\src/command_processing.c ****         }
2734:..\src/command_processing.c **** 
2735:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][2])){
 20367              		.loc 1 2735 0
 20368 016a 774A     		ldr	r2, .L775+4
 20369 016c D7F83431 		ldr	r3, [r7, #308]
 20370 0170 1344     		add	r3, r3, r2
 20371 0172 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20372 0174 1946     		mov	r1, r3
 20373 0176 764A     		ldr	r2, .L775+12
 20374 0178 0B46     		mov	r3, r1
 20375 017a 9B00     		lsls	r3, r3, #2
 20376 017c 0B44     		add	r3, r3, r1
 20377 017e 1344     		add	r3, r3, r2
 20378 0180 03F50173 		add	r3, r3, #516
 20379 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20380 0186 002B     		cmp	r3, #0
 20381 0188 31D0     		beq	.L771
2736:..\src/command_processing.c ****             sprintf(str, "\tMag: %d\t%d\t%d\r\n", (int16) g_imu[i].mag_value[0], (int16) g_imu[i].m
 20382              		.loc 1 2736 0
 20383 018a 7249     		ldr	r1, .L775+16
 20384 018c D7F83421 		ldr	r2, [r7, #308]
 20385 0190 1346     		mov	r3, r2
 20386 0192 9B00     		lsls	r3, r3, #2
 20387 0194 1344     		add	r3, r3, r2
 20388 0196 DB00     		lsls	r3, r3, #3
 20389 0198 0B44     		add	r3, r3, r1
 20390 019a 0E33     		adds	r3, r3, #14
 20391 019c B3F90030 		ldrsh	r3, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 448


 20392 01a0 1C46     		mov	r4, r3
 20393 01a2 6C49     		ldr	r1, .L775+16
 20394 01a4 D7F83421 		ldr	r2, [r7, #308]
 20395 01a8 1346     		mov	r3, r2
 20396 01aa 9B00     		lsls	r3, r3, #2
 20397 01ac 1344     		add	r3, r3, r2
 20398 01ae DB00     		lsls	r3, r3, #3
 20399 01b0 0B44     		add	r3, r3, r1
 20400 01b2 1033     		adds	r3, r3, #16
 20401 01b4 B3F90030 		ldrsh	r3, [r3]
 20402 01b8 1D46     		mov	r5, r3
 20403 01ba 6649     		ldr	r1, .L775+16
 20404 01bc D7F83421 		ldr	r2, [r7, #308]
 20405 01c0 1346     		mov	r3, r2
 20406 01c2 9B00     		lsls	r3, r3, #2
 20407 01c4 1344     		add	r3, r3, r2
 20408 01c6 DB00     		lsls	r3, r3, #3
 20409 01c8 0B44     		add	r3, r3, r1
 20410 01ca 1233     		adds	r3, r3, #18
 20411 01cc B3F90030 		ldrsh	r3, [r3]
 20412 01d0 07F10800 		add	r0, r7, #8
 20413 01d4 0093     		str	r3, [sp]
 20414 01d6 2B46     		mov	r3, r5
 20415 01d8 2246     		mov	r2, r4
 20416 01da 6149     		ldr	r1, .L775+28
 20417 01dc FFF7FEFF 		bl	sprintf
2737:..\src/command_processing.c ****             strcat(info_string, str);
 20418              		.loc 1 2737 0
 20419 01e0 07F10802 		add	r2, r7, #8
 20420 01e4 3B1D     		adds	r3, r7, #4
 20421 01e6 1146     		mov	r1, r2
 20422 01e8 1868     		ldr	r0, [r3]
 20423 01ea FFF7FEFF 		bl	strcat
 20424              	.L771:
2738:..\src/command_processing.c ****         }
2739:..\src/command_processing.c ****         
2740:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][3])){
 20425              		.loc 1 2740 0
 20426 01ee 564A     		ldr	r2, .L775+4
 20427 01f0 D7F83431 		ldr	r3, [r7, #308]
 20428 01f4 1344     		add	r3, r3, r2
 20429 01f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20430 01f8 1946     		mov	r1, r3
 20431 01fa 554A     		ldr	r2, .L775+12
 20432 01fc 0B46     		mov	r3, r1
 20433 01fe 9B00     		lsls	r3, r3, #2
 20434 0200 0B44     		add	r3, r3, r1
 20435 0202 1344     		add	r3, r3, r2
 20436 0204 03F20523 		addw	r3, r3, #517
 20437 0208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20438 020a 002B     		cmp	r3, #0
 20439 020c 4FD0     		beq	.L772
2741:..\src/command_processing.c ****             sprintf(str, "\tQuat: %.3f\t%.3f\t%.3f\t%.3f\r\n", (float) g_imu[i].quat_value[0], (flo
 20440              		.loc 1 2741 0
 20441 020e 5149     		ldr	r1, .L775+16
 20442 0210 D7F83421 		ldr	r2, [r7, #308]
 20443 0214 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 449


 20444 0216 9B00     		lsls	r3, r3, #2
 20445 0218 1344     		add	r3, r3, r2
 20446 021a DB00     		lsls	r3, r3, #3
 20447 021c 0B44     		add	r3, r3, r1
 20448 021e 1433     		adds	r3, r3, #20
 20449 0220 1B68     		ldr	r3, [r3]	@ float
 20450 0222 1846     		mov	r0, r3
 20451 0224 FFF7FEFF 		bl	__aeabi_f2d
 20452 0228 8246     		mov	r10, r0
 20453 022a 8B46     		mov	fp, r1
 20454 022c 4949     		ldr	r1, .L775+16
 20455 022e D7F83421 		ldr	r2, [r7, #308]
 20456 0232 1346     		mov	r3, r2
 20457 0234 9B00     		lsls	r3, r3, #2
 20458 0236 1344     		add	r3, r3, r2
 20459 0238 DB00     		lsls	r3, r3, #3
 20460 023a 0B44     		add	r3, r3, r1
 20461 023c 1833     		adds	r3, r3, #24
 20462 023e 1B68     		ldr	r3, [r3]	@ float
 20463 0240 1846     		mov	r0, r3
 20464 0242 FFF7FEFF 		bl	__aeabi_f2d
 20465 0246 0446     		mov	r4, r0
 20466 0248 0D46     		mov	r5, r1
 20467 024a 4249     		ldr	r1, .L775+16
 20468 024c D7F83421 		ldr	r2, [r7, #308]
 20469 0250 1346     		mov	r3, r2
 20470 0252 9B00     		lsls	r3, r3, #2
 20471 0254 1344     		add	r3, r3, r2
 20472 0256 DB00     		lsls	r3, r3, #3
 20473 0258 0B44     		add	r3, r3, r1
 20474 025a 1C33     		adds	r3, r3, #28
 20475 025c 1B68     		ldr	r3, [r3]	@ float
 20476 025e 1846     		mov	r0, r3
 20477 0260 FFF7FEFF 		bl	__aeabi_f2d
 20478 0264 8046     		mov	r8, r0
 20479 0266 8946     		mov	r9, r1
 20480 0268 3A49     		ldr	r1, .L775+16
 20481 026a D7F83421 		ldr	r2, [r7, #308]
 20482 026e 1346     		mov	r3, r2
 20483 0270 9B00     		lsls	r3, r3, #2
 20484 0272 1344     		add	r3, r3, r2
 20485 0274 DB00     		lsls	r3, r3, #3
 20486 0276 0B44     		add	r3, r3, r1
 20487 0278 2033     		adds	r3, r3, #32
 20488 027a 1B68     		ldr	r3, [r3]	@ float
 20489 027c 1846     		mov	r0, r3
 20490 027e FFF7FEFF 		bl	__aeabi_f2d
 20491 0282 0246     		mov	r2, r0
 20492 0284 0B46     		mov	r3, r1
 20493 0286 07F10800 		add	r0, r7, #8
 20494 028a CDE90423 		strd	r2, [sp, #16]
 20495 028e CDE90289 		strd	r8, [sp, #8]
 20496 0292 CDE90045 		strd	r4, [sp]
 20497 0296 5246     		mov	r2, r10
 20498 0298 5B46     		mov	r3, fp
 20499 029a 3249     		ldr	r1, .L775+32
 20500 029c FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 450


2742:..\src/command_processing.c ****             strcat(info_string, str);
 20501              		.loc 1 2742 0
 20502 02a0 07F10802 		add	r2, r7, #8
 20503 02a4 3B1D     		adds	r3, r7, #4
 20504 02a6 1146     		mov	r1, r2
 20505 02a8 1868     		ldr	r0, [r3]
 20506 02aa FFF7FEFF 		bl	strcat
 20507              	.L772:
2743:..\src/command_processing.c ****         }
2744:..\src/command_processing.c ****         
2745:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][4])){
 20508              		.loc 1 2745 0
 20509 02ae 264A     		ldr	r2, .L775+4
 20510 02b0 D7F83431 		ldr	r3, [r7, #308]
 20511 02b4 1344     		add	r3, r3, r2
 20512 02b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20513 02b8 1946     		mov	r1, r3
 20514 02ba 254A     		ldr	r2, .L775+12
 20515 02bc 0B46     		mov	r3, r1
 20516 02be 9B00     		lsls	r3, r3, #2
 20517 02c0 0B44     		add	r3, r3, r1
 20518 02c2 1344     		add	r3, r3, r2
 20519 02c4 03F20623 		addw	r3, r3, #518
 20520 02c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20521 02ca 002B     		cmp	r3, #0
 20522 02cc 18D0     		beq	.L773
2746:..\src/command_processing.c ****             sprintf(str, "\tTemperature: %d\r\n", (int16) g_imu[i].temp_value);
 20523              		.loc 1 2746 0
 20524 02ce 2149     		ldr	r1, .L775+16
 20525 02d0 D7F83421 		ldr	r2, [r7, #308]
 20526 02d4 1346     		mov	r3, r2
 20527 02d6 9B00     		lsls	r3, r3, #2
 20528 02d8 1344     		add	r3, r3, r2
 20529 02da DB00     		lsls	r3, r3, #3
 20530 02dc 0B44     		add	r3, r3, r1
 20531 02de 2433     		adds	r3, r3, #36
 20532 02e0 B3F90030 		ldrsh	r3, [r3]
 20533 02e4 1A46     		mov	r2, r3
 20534 02e6 07F10803 		add	r3, r7, #8
 20535 02ea 1F49     		ldr	r1, .L775+36
 20536 02ec 1846     		mov	r0, r3
 20537 02ee FFF7FEFF 		bl	sprintf
2747:..\src/command_processing.c ****             strcat(info_string, str);
 20538              		.loc 1 2747 0
 20539 02f2 07F10802 		add	r2, r7, #8
 20540 02f6 3B1D     		adds	r3, r7, #4
 20541 02f8 1146     		mov	r1, r2
 20542 02fa 1868     		ldr	r0, [r3]
 20543 02fc FFF7FEFF 		bl	strcat
 20544              	.L773:
2721:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20545              		.loc 1 2721 0 discriminator 2
 20546 0300 D7F83431 		ldr	r3, [r7, #308]
 20547 0304 0133     		adds	r3, r3, #1
 20548 0306 C7F83431 		str	r3, [r7, #308]
 20549              	.L768:
2721:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 451


 20550              		.loc 1 2721 0 is_stmt 0 discriminator 1
 20551 030a 184B     		ldr	r3, .L775+40
 20552 030c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20553 030e 1A46     		mov	r2, r3
 20554 0310 D7F83431 		ldr	r3, [r7, #308]
 20555 0314 9A42     		cmp	r2, r3
 20556 0316 3FF791AE 		bgt	.L774
2748:..\src/command_processing.c ****         }
2749:..\src/command_processing.c ****         
2750:..\src/command_processing.c ****     }
2751:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 20557              		.loc 1 2751 0 is_stmt 1
 20558 031a 3B1D     		adds	r3, r7, #4
 20559 031c 1868     		ldr	r0, [r3]
 20560 031e FFF7FEFF 		bl	strlen
 20561 0322 0346     		mov	r3, r0
 20562 0324 1A46     		mov	r2, r3
 20563 0326 3B1D     		adds	r3, r7, #4
 20564 0328 1B68     		ldr	r3, [r3]
 20565 032a 1344     		add	r3, r3, r2
 20566 032c 104A     		ldr	r2, .L775+44
 20567 032e 1188     		ldrh	r1, [r2]	@ unaligned
 20568 0330 9278     		ldrb	r2, [r2, #2]
 20569 0332 1980     		strh	r1, [r3]	@ unaligned
 20570 0334 9A70     		strb	r2, [r3, #2]
2752:..\src/command_processing.c **** }
 20571              		.loc 1 2752 0
 20572 0336 00BF     		nop
 20573 0338 07F59C77 		add	r7, r7, #312
 20574              		.cfi_def_cfa_offset 32
 20575 033c BD46     		mov	sp, r7
 20576              		.cfi_def_cfa_register 13
 20577              		@ sp needed
 20578 033e BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 20579              	.L776:
 20580 0342 00BF     		.align	2
 20581              	.L775:
 20582 0344 FC1C0000 		.word	.LC276
 20583 0348 00000000 		.word	IMU_connected
 20584 034c AC180000 		.word	.LC235
 20585 0350 00000000 		.word	c_mem
 20586 0354 00000000 		.word	g_imu
 20587 0358 0C1D0000 		.word	.LC277
 20588 035c 201D0000 		.word	.LC278
 20589 0360 341D0000 		.word	.LC279
 20590 0364 481D0000 		.word	.LC280
 20591 0368 681D0000 		.word	.LC281
 20592 036c 00000000 		.word	N_IMU_Connected
 20593 0370 A8100000 		.word	.LC147
 20594              		.cfi_endproc
 20595              	.LFE77:
 20596              		.size	IMU_reading_info, .-IMU_reading_info
 20597              		.section	.text.commWrite_old_id,"ax",%progbits
 20598              		.align	2
 20599              		.global	commWrite_old_id
 20600              		.thumb
 20601              		.thumb_func
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 452


 20602              		.type	commWrite_old_id, %function
 20603              	commWrite_old_id:
 20604              	.LFB78:
2753:..\src/command_processing.c **** 
2754:..\src/command_processing.c **** //==============================================================================
2755:..\src/command_processing.c **** //                                                     WRITE FUNCTIONS FOR RS485
2756:..\src/command_processing.c **** //==============================================================================
2757:..\src/command_processing.c **** 
2758:..\src/command_processing.c **** void commWrite_old_id(uint8 *packet_data, uint16 packet_lenght, uint8 old_id)
2759:..\src/command_processing.c **** {
 20605              		.loc 1 2759 0
 20606              		.cfi_startproc
 20607              		@ args = 0, pretend = 0, frame = 16
 20608              		@ frame_needed = 1, uses_anonymous_args = 0
 20609 0000 80B5     		push	{r7, lr}
 20610              		.cfi_def_cfa_offset 8
 20611              		.cfi_offset 7, -8
 20612              		.cfi_offset 14, -4
 20613 0002 84B0     		sub	sp, sp, #16
 20614              		.cfi_def_cfa_offset 24
 20615 0004 00AF     		add	r7, sp, #0
 20616              		.cfi_def_cfa_register 7
 20617 0006 7860     		str	r0, [r7, #4]
 20618 0008 0B46     		mov	r3, r1
 20619 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 20620 000c 1346     		mov	r3, r2
 20621 000e 7B70     		strb	r3, [r7, #1]
2760:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2761:..\src/command_processing.c **** 
2762:..\src/command_processing.c ****     // frame - start
2763:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 20622              		.loc 1 2763 0
 20623 0010 3A20     		movs	r0, #58
 20624 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2764:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 20625              		.loc 1 2764 0
 20626 0016 3A20     		movs	r0, #58
 20627 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2765:..\src/command_processing.c ****     // frame - ID
2766:..\src/command_processing.c ****     //if(old_id)
2767:..\src/command_processing.c ****         UART_RS485_PutChar(old_id);
 20628              		.loc 1 2767 0
 20629 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 20630 001e 1846     		mov	r0, r3
 20631 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2768:..\src/command_processing.c ****     //else
2769:..\src/command_processing.c ****         //UART_RS485_PutChar(g_mem.id);
2770:..\src/command_processing.c ****         
2771:..\src/command_processing.c ****     // frame - length
2772:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 20632              		.loc 1 2772 0
 20633 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 20634 0026 DBB2     		uxtb	r3, r3
 20635 0028 1846     		mov	r0, r3
 20636 002a FFF7FEFF 		bl	UART_RS485_PutChar
2773:..\src/command_processing.c ****     // frame - packet data
2774:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 453


 20637              		.loc 1 2774 0
 20638 002e 0023     		movs	r3, #0
 20639 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 20640 0032 09E0     		b	.L778
 20641              	.L779:
2775:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20642              		.loc 1 2775 0 discriminator 3
 20643 0034 FB89     		ldrh	r3, [r7, #14]
 20644 0036 7A68     		ldr	r2, [r7, #4]
 20645 0038 1344     		add	r3, r3, r2
 20646 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20647 003c 1846     		mov	r0, r3
 20648 003e FFF7FEFF 		bl	UART_RS485_PutChar
2774:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20649              		.loc 1 2774 0 discriminator 3
 20650 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 20651 0044 0133     		adds	r3, r3, #1
 20652 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 20653              	.L778:
2774:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20654              		.loc 1 2774 0 is_stmt 0 discriminator 1
 20655 0048 FA89     		ldrh	r2, [r7, #14]
 20656 004a 7B88     		ldrh	r3, [r7, #2]
 20657 004c 9A42     		cmp	r2, r3
 20658 004e F1D3     		bcc	.L779
2776:..\src/command_processing.c ****     }
2777:..\src/command_processing.c **** 
2778:..\src/command_processing.c ****     index = 0;
 20659              		.loc 1 2778 0 is_stmt 1
 20660 0050 0023     		movs	r3, #0
 20661 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2779:..\src/command_processing.c **** 
2780:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 20662              		.loc 1 2780 0
 20663 0054 00BF     		nop
 20664              	.L781:
 20665              		.loc 1 2780 0 is_stmt 0 discriminator 2
 20666 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 20667 005a 0346     		mov	r3, r0
 20668 005c 03F00103 		and	r3, r3, #1
 20669 0060 002B     		cmp	r3, #0
 20670 0062 05D1     		bne	.L780
 20671              		.loc 1 2780 0 discriminator 1
 20672 0064 FB89     		ldrh	r3, [r7, #14]
 20673 0066 5A1C     		adds	r2, r3, #1
 20674 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 20675 006a B3F57A7F 		cmp	r3, #1000
 20676 006e F2D9     		bls	.L781
 20677              	.L780:
2781:..\src/command_processing.c **** 
2782:..\src/command_processing.c ****     RS485_CTS_Write(1);
 20678              		.loc 1 2782 0 is_stmt 1
 20679 0070 0120     		movs	r0, #1
 20680 0072 FFF7FEFF 		bl	RS485_CTS_Write
2783:..\src/command_processing.c ****     RS485_CTS_Write(0);
 20681              		.loc 1 2783 0
 20682 0076 0020     		movs	r0, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 454


 20683 0078 FFF7FEFF 		bl	RS485_CTS_Write
2784:..\src/command_processing.c **** }
 20684              		.loc 1 2784 0
 20685 007c 00BF     		nop
 20686 007e 1037     		adds	r7, r7, #16
 20687              		.cfi_def_cfa_offset 8
 20688 0080 BD46     		mov	sp, r7
 20689              		.cfi_def_cfa_register 13
 20690              		@ sp needed
 20691 0082 80BD     		pop	{r7, pc}
 20692              		.cfi_endproc
 20693              	.LFE78:
 20694              		.size	commWrite_old_id, .-commWrite_old_id
 20695              		.section	.text.commWrite,"ax",%progbits
 20696              		.align	2
 20697              		.global	commWrite
 20698              		.thumb
 20699              		.thumb_func
 20700              		.type	commWrite, %function
 20701              	commWrite:
 20702              	.LFB79:
2785:..\src/command_processing.c **** 
2786:..\src/command_processing.c **** void commWrite(uint8 *packet_data, uint16 packet_lenght)
2787:..\src/command_processing.c **** {
 20703              		.loc 1 2787 0
 20704              		.cfi_startproc
 20705              		@ args = 0, pretend = 0, frame = 16
 20706              		@ frame_needed = 1, uses_anonymous_args = 0
 20707 0000 80B5     		push	{r7, lr}
 20708              		.cfi_def_cfa_offset 8
 20709              		.cfi_offset 7, -8
 20710              		.cfi_offset 14, -4
 20711 0002 84B0     		sub	sp, sp, #16
 20712              		.cfi_def_cfa_offset 24
 20713 0004 00AF     		add	r7, sp, #0
 20714              		.cfi_def_cfa_register 7
 20715 0006 7860     		str	r0, [r7, #4]
 20716 0008 0B46     		mov	r3, r1
 20717 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2788:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2789:..\src/command_processing.c **** 
2790:..\src/command_processing.c ****     // frame - start
2791:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 20718              		.loc 1 2791 0
 20719 000c 3A20     		movs	r0, #58
 20720 000e FFF7FEFF 		bl	UART_RS485_PutChar
2792:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 20721              		.loc 1 2792 0
 20722 0012 3A20     		movs	r0, #58
 20723 0014 FFF7FEFF 		bl	UART_RS485_PutChar
2793:..\src/command_processing.c ****     // frame - ID
2794:..\src/command_processing.c ****     UART_RS485_PutChar(g_mem.dev.id);
 20724              		.loc 1 2794 0
 20725 0018 1A4B     		ldr	r3, .L787
 20726 001a 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 20727 001e 1846     		mov	r0, r3
 20728 0020 FFF7FEFF 		bl	UART_RS485_PutChar
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 455


2795:..\src/command_processing.c ****     // frame - length
2796:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 20729              		.loc 1 2796 0
 20730 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 20731 0026 DBB2     		uxtb	r3, r3
 20732 0028 1846     		mov	r0, r3
 20733 002a FFF7FEFF 		bl	UART_RS485_PutChar
2797:..\src/command_processing.c ****     // frame - packet data
2798:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 20734              		.loc 1 2798 0
 20735 002e 0023     		movs	r3, #0
 20736 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 20737 0032 09E0     		b	.L783
 20738              	.L784:
2799:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20739              		.loc 1 2799 0 discriminator 3
 20740 0034 FB89     		ldrh	r3, [r7, #14]
 20741 0036 7A68     		ldr	r2, [r7, #4]
 20742 0038 1344     		add	r3, r3, r2
 20743 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20744 003c 1846     		mov	r0, r3
 20745 003e FFF7FEFF 		bl	UART_RS485_PutChar
2798:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20746              		.loc 1 2798 0 discriminator 3
 20747 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 20748 0044 0133     		adds	r3, r3, #1
 20749 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 20750              	.L783:
2798:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20751              		.loc 1 2798 0 is_stmt 0 discriminator 1
 20752 0048 FA89     		ldrh	r2, [r7, #14]
 20753 004a 7B88     		ldrh	r3, [r7, #2]
 20754 004c 9A42     		cmp	r2, r3
 20755 004e F1D3     		bcc	.L784
2800:..\src/command_processing.c ****     }
2801:..\src/command_processing.c **** 
2802:..\src/command_processing.c ****     index = 0;
 20756              		.loc 1 2802 0 is_stmt 1
 20757 0050 0023     		movs	r3, #0
 20758 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2803:..\src/command_processing.c **** 
2804:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 20759              		.loc 1 2804 0
 20760 0054 00BF     		nop
 20761              	.L786:
 20762              		.loc 1 2804 0 is_stmt 0 discriminator 2
 20763 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 20764 005a 0346     		mov	r3, r0
 20765 005c 03F00103 		and	r3, r3, #1
 20766 0060 002B     		cmp	r3, #0
 20767 0062 05D1     		bne	.L785
 20768              		.loc 1 2804 0 discriminator 1
 20769 0064 FB89     		ldrh	r3, [r7, #14]
 20770 0066 5A1C     		adds	r2, r3, #1
 20771 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 20772 006a B3F57A7F 		cmp	r3, #1000
 20773 006e F2D9     		bls	.L786
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 456


 20774              	.L785:
2805:..\src/command_processing.c **** 
2806:..\src/command_processing.c ****     RS485_CTS_Write(1);
 20775              		.loc 1 2806 0 is_stmt 1
 20776 0070 0120     		movs	r0, #1
 20777 0072 FFF7FEFF 		bl	RS485_CTS_Write
2807:..\src/command_processing.c ****     RS485_CTS_Write(0);
 20778              		.loc 1 2807 0
 20779 0076 0020     		movs	r0, #0
 20780 0078 FFF7FEFF 		bl	RS485_CTS_Write
2808:..\src/command_processing.c **** }
 20781              		.loc 1 2808 0
 20782 007c 00BF     		nop
 20783 007e 1037     		adds	r7, r7, #16
 20784              		.cfi_def_cfa_offset 8
 20785 0080 BD46     		mov	sp, r7
 20786              		.cfi_def_cfa_register 13
 20787              		@ sp needed
 20788 0082 80BD     		pop	{r7, pc}
 20789              	.L788:
 20790              		.align	2
 20791              	.L787:
 20792 0084 00000000 		.word	g_mem
 20793              		.cfi_endproc
 20794              	.LFE79:
 20795              		.size	commWrite, .-commWrite
 20796              		.section	.text.commWriteID,"ax",%progbits
 20797              		.align	2
 20798              		.global	commWriteID
 20799              		.thumb
 20800              		.thumb_func
 20801              		.type	commWriteID, %function
 20802              	commWriteID:
 20803              	.LFB80:
2809:..\src/command_processing.c **** 
2810:..\src/command_processing.c **** //==============================================================================
2811:..\src/command_processing.c **** //                                             WRITE FUNCTION FOR ANOTHER DEVICE
2812:..\src/command_processing.c **** //==============================================================================
2813:..\src/command_processing.c **** 
2814:..\src/command_processing.c **** void commWriteID(uint8 *packet_data, uint16 packet_lenght, uint8 id)
2815:..\src/command_processing.c **** {
 20804              		.loc 1 2815 0
 20805              		.cfi_startproc
 20806              		@ args = 0, pretend = 0, frame = 8
 20807              		@ frame_needed = 1, uses_anonymous_args = 0
 20808 0000 80B5     		push	{r7, lr}
 20809              		.cfi_def_cfa_offset 8
 20810              		.cfi_offset 7, -8
 20811              		.cfi_offset 14, -4
 20812 0002 82B0     		sub	sp, sp, #8
 20813              		.cfi_def_cfa_offset 16
 20814 0004 00AF     		add	r7, sp, #0
 20815              		.cfi_def_cfa_register 7
 20816 0006 7860     		str	r0, [r7, #4]
 20817 0008 0B46     		mov	r3, r1
 20818 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 20819 000c 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 457


 20820 000e 7B70     		strb	r3, [r7, #1]
2816:..\src/command_processing.c ****     static uint16 CYDATA i;    // iterator
2817:..\src/command_processing.c **** 
2818:..\src/command_processing.c ****     // frame - start
2819:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 20821              		.loc 1 2819 0
 20822 0010 3A20     		movs	r0, #58
 20823 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2820:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 20824              		.loc 1 2820 0
 20825 0016 3A20     		movs	r0, #58
 20826 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2821:..\src/command_processing.c ****     // frame - ID
2822:..\src/command_processing.c ****     UART_RS485_PutChar(id);
 20827              		.loc 1 2822 0
 20828 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 20829 001e 1846     		mov	r0, r3
 20830 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2823:..\src/command_processing.c ****     // frame - length
2824:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 20831              		.loc 1 2824 0
 20832 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 20833 0026 DBB2     		uxtb	r3, r3
 20834 0028 1846     		mov	r0, r3
 20835 002a FFF7FEFF 		bl	UART_RS485_PutChar
2825:..\src/command_processing.c ****     // frame - packet data
2826:..\src/command_processing.c ****     for(i = 0; i < packet_lenght; ++i) {
 20836              		.loc 1 2826 0
 20837 002e 1B4B     		ldr	r3, .L794
 20838 0030 0022     		movs	r2, #0
 20839 0032 1A80     		strh	r2, [r3]	@ movhi
 20840 0034 0EE0     		b	.L790
 20841              	.L791:
2827:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 20842              		.loc 1 2827 0 discriminator 3
 20843 0036 194B     		ldr	r3, .L794
 20844 0038 1B88     		ldrh	r3, [r3]
 20845 003a 1A46     		mov	r2, r3
 20846 003c 7B68     		ldr	r3, [r7, #4]
 20847 003e 1344     		add	r3, r3, r2
 20848 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20849 0042 1846     		mov	r0, r3
 20850 0044 FFF7FEFF 		bl	UART_RS485_PutChar
2826:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 20851              		.loc 1 2826 0 discriminator 3
 20852 0048 144B     		ldr	r3, .L794
 20853 004a 1B88     		ldrh	r3, [r3]
 20854 004c 0133     		adds	r3, r3, #1
 20855 004e 9AB2     		uxth	r2, r3
 20856 0050 124B     		ldr	r3, .L794
 20857 0052 1A80     		strh	r2, [r3]	@ movhi
 20858              	.L790:
2826:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 20859              		.loc 1 2826 0 is_stmt 0 discriminator 1
 20860 0054 114B     		ldr	r3, .L794
 20861 0056 1B88     		ldrh	r3, [r3]
 20862 0058 7A88     		ldrh	r2, [r7, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 458


 20863 005a 9A42     		cmp	r2, r3
 20864 005c EBD8     		bhi	.L791
2828:..\src/command_processing.c ****     }
2829:..\src/command_processing.c **** 
2830:..\src/command_processing.c ****     i = 0;
 20865              		.loc 1 2830 0 is_stmt 1
 20866 005e 0F4B     		ldr	r3, .L794
 20867 0060 0022     		movs	r2, #0
 20868 0062 1A80     		strh	r2, [r3]	@ movhi
2831:..\src/command_processing.c **** 
2832:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && i++ <= 1000){}
 20869              		.loc 1 2832 0
 20870 0064 00BF     		nop
 20871              	.L793:
 20872              		.loc 1 2832 0 is_stmt 0 discriminator 2
 20873 0066 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 20874 006a 0346     		mov	r3, r0
 20875 006c 03F00103 		and	r3, r3, #1
 20876 0070 002B     		cmp	r3, #0
 20877 0072 08D1     		bne	.L792
 20878              		.loc 1 2832 0 discriminator 1
 20879 0074 094B     		ldr	r3, .L794
 20880 0076 1B88     		ldrh	r3, [r3]
 20881 0078 5A1C     		adds	r2, r3, #1
 20882 007a 91B2     		uxth	r1, r2
 20883 007c 074A     		ldr	r2, .L794
 20884 007e 1180     		strh	r1, [r2]	@ movhi
 20885 0080 B3F57A7F 		cmp	r3, #1000
 20886 0084 EFD9     		bls	.L793
 20887              	.L792:
2833:..\src/command_processing.c ****     
2834:..\src/command_processing.c ****     RS485_CTS_Write(1);
 20888              		.loc 1 2834 0 is_stmt 1
 20889 0086 0120     		movs	r0, #1
 20890 0088 FFF7FEFF 		bl	RS485_CTS_Write
2835:..\src/command_processing.c ****     RS485_CTS_Write(0);
 20891              		.loc 1 2835 0
 20892 008c 0020     		movs	r0, #0
 20893 008e FFF7FEFF 		bl	RS485_CTS_Write
2836:..\src/command_processing.c **** }
 20894              		.loc 1 2836 0
 20895 0092 00BF     		nop
 20896 0094 0837     		adds	r7, r7, #8
 20897              		.cfi_def_cfa_offset 8
 20898 0096 BD46     		mov	sp, r7
 20899              		.cfi_def_cfa_register 13
 20900              		@ sp needed
 20901 0098 80BD     		pop	{r7, pc}
 20902              	.L795:
 20903 009a 00BF     		.align	2
 20904              	.L794:
 20905 009c 00000000 		.word	i.11188
 20906              		.cfi_endproc
 20907              	.LFE80:
 20908              		.size	commWriteID, .-commWriteID
 20909              		.section	.text.LCRChecksum,"ax",%progbits
 20910              		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 459


 20911              		.global	LCRChecksum
 20912              		.thumb
 20913              		.thumb_func
 20914              		.type	LCRChecksum, %function
 20915              	LCRChecksum:
 20916              	.LFB81:
2837:..\src/command_processing.c **** 
2838:..\src/command_processing.c **** //==============================================================================
2839:..\src/command_processing.c **** //                                                             CHECKSUM FUNCTION
2840:..\src/command_processing.c **** //==============================================================================
2841:..\src/command_processing.c **** 
2842:..\src/command_processing.c **** // Performs a XOR byte by byte on the entire vector
2843:..\src/command_processing.c **** 
2844:..\src/command_processing.c **** uint8 LCRChecksum(uint8 *data_array, uint8 data_length) {
 20917              		.loc 1 2844 0
 20918              		.cfi_startproc
 20919              		@ args = 0, pretend = 0, frame = 16
 20920              		@ frame_needed = 1, uses_anonymous_args = 0
 20921              		@ link register save eliminated.
 20922 0000 80B4     		push	{r7}
 20923              		.cfi_def_cfa_offset 4
 20924              		.cfi_offset 7, -4
 20925 0002 85B0     		sub	sp, sp, #20
 20926              		.cfi_def_cfa_offset 24
 20927 0004 00AF     		add	r7, sp, #0
 20928              		.cfi_def_cfa_register 7
 20929 0006 7860     		str	r0, [r7, #4]
 20930 0008 0B46     		mov	r3, r1
 20931 000a FB70     		strb	r3, [r7, #3]
2845:..\src/command_processing.c ****     
2846:..\src/command_processing.c ****     uint8 CYDATA i;
2847:..\src/command_processing.c ****     uint8 CYDATA checksum = 0x00;
 20932              		.loc 1 2847 0
 20933 000c 0023     		movs	r3, #0
 20934 000e BB73     		strb	r3, [r7, #14]
2848:..\src/command_processing.c ****     
2849:..\src/command_processing.c ****     for(i = 0; i < data_length; ++i)
 20935              		.loc 1 2849 0
 20936 0010 0023     		movs	r3, #0
 20937 0012 FB73     		strb	r3, [r7, #15]
 20938 0014 09E0     		b	.L797
 20939              	.L798:
2850:..\src/command_processing.c ****        checksum ^= data_array[i];
 20940              		.loc 1 2850 0 discriminator 3
 20941 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 20942 0018 7A68     		ldr	r2, [r7, #4]
 20943 001a 1344     		add	r3, r3, r2
 20944 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 20945 001e BB7B     		ldrb	r3, [r7, #14]
 20946 0020 5340     		eors	r3, r3, r2
 20947 0022 BB73     		strb	r3, [r7, #14]
2849:..\src/command_processing.c ****        checksum ^= data_array[i];
 20948              		.loc 1 2849 0 discriminator 3
 20949 0024 FB7B     		ldrb	r3, [r7, #15]
 20950 0026 0133     		adds	r3, r3, #1
 20951 0028 FB73     		strb	r3, [r7, #15]
 20952              	.L797:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 460


2849:..\src/command_processing.c ****        checksum ^= data_array[i];
 20953              		.loc 1 2849 0 is_stmt 0 discriminator 1
 20954 002a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 20955 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 20956 002e 9A42     		cmp	r2, r3
 20957 0030 F1D3     		bcc	.L798
2851:..\src/command_processing.c ****   
2852:..\src/command_processing.c ****     return checksum;
 20958              		.loc 1 2852 0 is_stmt 1
 20959 0032 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
2853:..\src/command_processing.c **** }
 20960              		.loc 1 2853 0
 20961 0034 1846     		mov	r0, r3
 20962 0036 1437     		adds	r7, r7, #20
 20963              		.cfi_def_cfa_offset 4
 20964 0038 BD46     		mov	sp, r7
 20965              		.cfi_def_cfa_register 13
 20966              		@ sp needed
 20967 003a 80BC     		pop	{r7}
 20968              		.cfi_restore 7
 20969              		.cfi_def_cfa_offset 0
 20970 003c 7047     		bx	lr
 20971              		.cfi_endproc
 20972              	.LFE81:
 20973              		.size	LCRChecksum, .-LCRChecksum
 20974 003e 00BF     		.section	.text.sendAcknowledgment,"ax",%progbits
 20975              		.align	2
 20976              		.global	sendAcknowledgment
 20977              		.thumb
 20978              		.thumb_func
 20979              		.type	sendAcknowledgment, %function
 20980              	sendAcknowledgment:
 20981              	.LFB82:
2854:..\src/command_processing.c **** 
2855:..\src/command_processing.c **** 
2856:..\src/command_processing.c **** //==============================================================================
2857:..\src/command_processing.c **** //                                                       ACKNOWLEDGMENT FUNCTION
2858:..\src/command_processing.c **** //==============================================================================
2859:..\src/command_processing.c **** 
2860:..\src/command_processing.c **** void sendAcknowledgment(uint8 value) {
 20982              		.loc 1 2860 0
 20983              		.cfi_startproc
 20984              		@ args = 0, pretend = 0, frame = 16
 20985              		@ frame_needed = 1, uses_anonymous_args = 0
 20986 0000 80B5     		push	{r7, lr}
 20987              		.cfi_def_cfa_offset 8
 20988              		.cfi_offset 7, -8
 20989              		.cfi_offset 14, -4
 20990 0002 84B0     		sub	sp, sp, #16
 20991              		.cfi_def_cfa_offset 24
 20992 0004 00AF     		add	r7, sp, #0
 20993              		.cfi_def_cfa_register 7
 20994 0006 0346     		mov	r3, r0
 20995 0008 FB71     		strb	r3, [r7, #7]
2861:..\src/command_processing.c ****     int packet_lenght = 2;
 20996              		.loc 1 2861 0
 20997 000a 0223     		movs	r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 461


 20998 000c FB60     		str	r3, [r7, #12]
2862:..\src/command_processing.c ****     uint8 packet_data[2];
2863:..\src/command_processing.c **** 
2864:..\src/command_processing.c ****     packet_data[0] = value;
 20999              		.loc 1 2864 0
 21000 000e FB79     		ldrb	r3, [r7, #7]
 21001 0010 3B72     		strb	r3, [r7, #8]
2865:..\src/command_processing.c ****     packet_data[1] = value;
 21002              		.loc 1 2865 0
 21003 0012 FB79     		ldrb	r3, [r7, #7]
 21004 0014 7B72     		strb	r3, [r7, #9]
2866:..\src/command_processing.c **** 
2867:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 21005              		.loc 1 2867 0
 21006 0016 FB68     		ldr	r3, [r7, #12]
 21007 0018 9AB2     		uxth	r2, r3
 21008 001a 07F10803 		add	r3, r7, #8
 21009 001e 1146     		mov	r1, r2
 21010 0020 1846     		mov	r0, r3
 21011 0022 FFF7FEFF 		bl	commWrite
2868:..\src/command_processing.c **** }
 21012              		.loc 1 2868 0
 21013 0026 00BF     		nop
 21014 0028 1037     		adds	r7, r7, #16
 21015              		.cfi_def_cfa_offset 8
 21016 002a BD46     		mov	sp, r7
 21017              		.cfi_def_cfa_register 13
 21018              		@ sp needed
 21019 002c 80BD     		pop	{r7, pc}
 21020              		.cfi_endproc
 21021              	.LFE82:
 21022              		.size	sendAcknowledgment, .-sendAcknowledgment
 21023 002e 00BF     		.section	.text.memStore,"ax",%progbits
 21024              		.align	2
 21025              		.global	memStore
 21026              		.thumb
 21027              		.thumb_func
 21028              		.type	memStore, %function
 21029              	memStore:
 21030              	.LFB83:
2869:..\src/command_processing.c **** 
2870:..\src/command_processing.c **** //==============================================================================
2871:..\src/command_processing.c **** //                                                                  STORE MEMORY
2872:..\src/command_processing.c **** //==============================================================================
2873:..\src/command_processing.c **** 
2874:..\src/command_processing.c **** 
2875:..\src/command_processing.c **** uint8 memStore(int displacement)
2876:..\src/command_processing.c **** {
 21031              		.loc 1 2876 0
 21032              		.cfi_startproc
 21033              		@ args = 0, pretend = 0, frame = 24
 21034              		@ frame_needed = 1, uses_anonymous_args = 0
 21035 0000 80B5     		push	{r7, lr}
 21036              		.cfi_def_cfa_offset 8
 21037              		.cfi_offset 7, -8
 21038              		.cfi_offset 14, -4
 21039 0002 86B0     		sub	sp, sp, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 462


 21040              		.cfi_def_cfa_offset 32
 21041 0004 00AF     		add	r7, sp, #0
 21042              		.cfi_def_cfa_register 7
 21043 0006 7860     		str	r0, [r7, #4]
2877:..\src/command_processing.c ****     int i;  // iterator
2878:..\src/command_processing.c ****     uint8 writeStatus;
2879:..\src/command_processing.c ****     int pages;
2880:..\src/command_processing.c ****     uint8 ret_val = 1;
 21044              		.loc 1 2880 0
 21045 0008 0123     		movs	r3, #1
 21046 000a FB74     		strb	r3, [r7, #19]
2881:..\src/command_processing.c **** 
2882:..\src/command_processing.c ****     // Disable Interrupt
2883:..\src/command_processing.c ****     ISR_RS485_RX_Disable();
 21047              		.loc 1 2883 0
 21048 000c FFF7FEFF 		bl	ISR_RS485_RX_Disable
2884:..\src/command_processing.c **** 
2885:..\src/command_processing.c ****     // Stop motor
2886:..\src/command_processing.c ****     PWM_MOTORS_WriteCompare1(0);
 21049              		.loc 1 2886 0
 21050 0010 0020     		movs	r0, #0
 21051 0012 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
2887:..\src/command_processing.c **** 
2888:..\src/command_processing.c ****     // Retrieve temperature for better writing performance
2889:..\src/command_processing.c ****     CySetTemp();
 21052              		.loc 1 2889 0
 21053 0016 FFF7FEFF 		bl	CySetTemp
2890:..\src/command_processing.c **** 
2891:..\src/command_processing.c ****     memcpy( &c_mem, &g_mem, sizeof(g_mem) );
 21054              		.loc 1 2891 0
 21055 001a 1D4A     		ldr	r2, .L807
 21056 001c 1D4B     		ldr	r3, .L807+4
 21057 001e 1046     		mov	r0, r2
 21058 0020 1946     		mov	r1, r3
 21059 0022 4FF43D73 		mov	r3, #756
 21060 0026 1A46     		mov	r2, r3
 21061 0028 FFF7FEFF 		bl	memcpy
2892:..\src/command_processing.c **** 
2893:..\src/command_processing.c ****     pages = sizeof(g_mem) / 16 + (sizeof(g_mem) % 16 > 0);
 21062              		.loc 1 2893 0
 21063 002c 3023     		movs	r3, #48
 21064 002e FB60     		str	r3, [r7, #12]
2894:..\src/command_processing.c **** 
2895:..\src/command_processing.c ****     for(i = 0; i < pages; ++i) {
 21065              		.loc 1 2895 0
 21066 0030 0023     		movs	r3, #0
 21067 0032 7B61     		str	r3, [r7, #20]
 21068 0034 18E0     		b	.L802
 21069              	.L805:
2896:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 21070              		.loc 1 2896 0
 21071 0036 7B69     		ldr	r3, [r7, #20]
 21072 0038 1B01     		lsls	r3, r3, #4
 21073 003a 1A46     		mov	r2, r3
 21074 003c 154B     		ldr	r3, .L807+4
 21075 003e D018     		adds	r0, r2, r3
 21076 0040 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 463


 21077 0042 DAB2     		uxtb	r2, r3
 21078 0044 7B68     		ldr	r3, [r7, #4]
 21079 0046 DBB2     		uxtb	r3, r3
 21080 0048 1344     		add	r3, r3, r2
 21081 004a DBB2     		uxtb	r3, r3
 21082 004c 1946     		mov	r1, r3
 21083 004e FFF7FEFF 		bl	EEPROM_Write
 21084 0052 0346     		mov	r3, r0
 21085 0054 FB72     		strb	r3, [r7, #11]
2897:..\src/command_processing.c ****         if(writeStatus != CYRET_SUCCESS) {
 21086              		.loc 1 2897 0
 21087 0056 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 21088 0058 002B     		cmp	r3, #0
 21089 005a 02D0     		beq	.L803
2898:..\src/command_processing.c ****             ret_val = 0;
 21090              		.loc 1 2898 0
 21091 005c 0023     		movs	r3, #0
 21092 005e FB74     		strb	r3, [r7, #19]
2899:..\src/command_processing.c ****             break;
 21093              		.loc 1 2899 0
 21094 0060 06E0     		b	.L804
 21095              	.L803:
2895:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 21096              		.loc 1 2895 0 discriminator 2
 21097 0062 7B69     		ldr	r3, [r7, #20]
 21098 0064 0133     		adds	r3, r3, #1
 21099 0066 7B61     		str	r3, [r7, #20]
 21100              	.L802:
2895:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 21101              		.loc 1 2895 0 is_stmt 0 discriminator 1
 21102 0068 7A69     		ldr	r2, [r7, #20]
 21103 006a FB68     		ldr	r3, [r7, #12]
 21104 006c 9A42     		cmp	r2, r3
 21105 006e E2DB     		blt	.L805
 21106              	.L804:
2900:..\src/command_processing.c ****         }
2901:..\src/command_processing.c ****     }
2902:..\src/command_processing.c **** 
2903:..\src/command_processing.c ****     memcpy( &g_mem, &c_mem, sizeof(g_mem) );
 21107              		.loc 1 2903 0 is_stmt 1
 21108 0070 084A     		ldr	r2, .L807+4
 21109 0072 074B     		ldr	r3, .L807
 21110 0074 1046     		mov	r0, r2
 21111 0076 1946     		mov	r1, r3
 21112 0078 4FF43D73 		mov	r3, #756
 21113 007c 1A46     		mov	r2, r3
 21114 007e FFF7FEFF 		bl	memcpy
2904:..\src/command_processing.c **** 
2905:..\src/command_processing.c ****     // Re-Enable Interrupt
2906:..\src/command_processing.c ****     ISR_RS485_RX_Enable();
 21115              		.loc 1 2906 0
 21116 0082 FFF7FEFF 		bl	ISR_RS485_RX_Enable
2907:..\src/command_processing.c **** 
2908:..\src/command_processing.c ****     return ret_val;
 21117              		.loc 1 2908 0
 21118 0086 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
2909:..\src/command_processing.c **** }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 464


 21119              		.loc 1 2909 0
 21120 0088 1846     		mov	r0, r3
 21121 008a 1837     		adds	r7, r7, #24
 21122              		.cfi_def_cfa_offset 8
 21123 008c BD46     		mov	sp, r7
 21124              		.cfi_def_cfa_register 13
 21125              		@ sp needed
 21126 008e 80BD     		pop	{r7, pc}
 21127              	.L808:
 21128              		.align	2
 21129              	.L807:
 21130 0090 00000000 		.word	c_mem
 21131 0094 00000000 		.word	g_mem
 21132              		.cfi_endproc
 21133              	.LFE83:
 21134              		.size	memStore, .-memStore
 21135              		.section	.text.memRecall,"ax",%progbits
 21136              		.align	2
 21137              		.global	memRecall
 21138              		.thumb
 21139              		.thumb_func
 21140              		.type	memRecall, %function
 21141              	memRecall:
 21142              	.LFB84:
2910:..\src/command_processing.c **** 
2911:..\src/command_processing.c **** 
2912:..\src/command_processing.c **** //==============================================================================
2913:..\src/command_processing.c **** //                                                                 RECALL MEMORY
2914:..\src/command_processing.c **** //==============================================================================
2915:..\src/command_processing.c **** 
2916:..\src/command_processing.c **** 
2917:..\src/command_processing.c **** void memRecall(void)
2918:..\src/command_processing.c **** {
 21143              		.loc 1 2918 0
 21144              		.cfi_startproc
 21145              		@ args = 0, pretend = 0, frame = 8
 21146              		@ frame_needed = 1, uses_anonymous_args = 0
 21147 0000 80B5     		push	{r7, lr}
 21148              		.cfi_def_cfa_offset 8
 21149              		.cfi_offset 7, -8
 21150              		.cfi_offset 14, -4
 21151 0002 82B0     		sub	sp, sp, #8
 21152              		.cfi_def_cfa_offset 16
 21153 0004 00AF     		add	r7, sp, #0
 21154              		.cfi_def_cfa_register 7
2919:..\src/command_processing.c ****     uint16 i;
2920:..\src/command_processing.c **** 
2921:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 21155              		.loc 1 2921 0
 21156 0006 0023     		movs	r3, #0
 21157 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 21158 000a 0CE0     		b	.L810
 21159              	.L811:
2922:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 21160              		.loc 1 2922 0 discriminator 3
 21161 000c FB88     		ldrh	r3, [r7, #6]
 21162 000e 184A     		ldr	r2, .L815
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 465


 21163 0010 1344     		add	r3, r3, r2
 21164 0012 184A     		ldr	r2, .L815+4
 21165 0014 1168     		ldr	r1, [r2]
 21166 0016 FA88     		ldrh	r2, [r7, #6]
 21167 0018 0A44     		add	r2, r2, r1
 21168 001a 1278     		ldrb	r2, [r2]
 21169 001c D2B2     		uxtb	r2, r2
 21170 001e 1A70     		strb	r2, [r3]
2921:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 21171              		.loc 1 2921 0 discriminator 3
 21172 0020 FB88     		ldrh	r3, [r7, #6]
 21173 0022 0133     		adds	r3, r3, #1
 21174 0024 FB80     		strh	r3, [r7, #6]	@ movhi
 21175              	.L810:
2921:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 21176              		.loc 1 2921 0 is_stmt 0 discriminator 1
 21177 0026 FB88     		ldrh	r3, [r7, #6]
 21178 0028 B3F53D7F 		cmp	r3, #756
 21179 002c EED3     		bcc	.L811
2923:..\src/command_processing.c ****     }
2924:..\src/command_processing.c ****     
2925:..\src/command_processing.c ****     // Recall saved user_emg structure
2926:..\src/command_processing.c ****     memcpy( &(g_mem.emg), &(g_mem.user[g_mem.dev.user_id].user_emg), sizeof(g_mem.emg) );
 21180              		.loc 1 2926 0 is_stmt 1
 21181 002e 104B     		ldr	r3, .L815
 21182 0030 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 21183 0034 5B01     		lsls	r3, r3, #5
 21184 0036 03F51273 		add	r3, r3, #584
 21185 003a 0D4A     		ldr	r2, .L815
 21186 003c 1344     		add	r3, r3, r2
 21187 003e 1022     		movs	r2, #16
 21188 0040 1946     		mov	r1, r3
 21189 0042 0D48     		ldr	r0, .L815+8
 21190 0044 FFF7FEFF 		bl	memcpy
2927:..\src/command_processing.c **** 
2928:..\src/command_processing.c ****     //check for initialization
2929:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 21191              		.loc 1 2929 0
 21192 0048 094B     		ldr	r3, .L815
 21193 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21194 004c 002B     		cmp	r3, #0
 21195 004e 02D1     		bne	.L812
2930:..\src/command_processing.c ****         memRestore();
 21196              		.loc 1 2930 0
 21197 0050 FFF7FEFF 		bl	memRestore
2931:..\src/command_processing.c ****     } else {
2932:..\src/command_processing.c ****         memcpy( &c_mem, &g_mem, sizeof(g_mem) );
2933:..\src/command_processing.c ****     }        
2934:..\src/command_processing.c **** }
 21198              		.loc 1 2934 0
 21199 0054 08E0     		b	.L814
 21200              	.L812:
2932:..\src/command_processing.c ****     }        
 21201              		.loc 1 2932 0
 21202 0056 094A     		ldr	r2, .L815+12
 21203 0058 054B     		ldr	r3, .L815
 21204 005a 1046     		mov	r0, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 466


 21205 005c 1946     		mov	r1, r3
 21206 005e 4FF43D73 		mov	r3, #756
 21207 0062 1A46     		mov	r2, r3
 21208 0064 FFF7FEFF 		bl	memcpy
 21209              	.L814:
 21210              		.loc 1 2934 0
 21211 0068 00BF     		nop
 21212 006a 0837     		adds	r7, r7, #8
 21213              		.cfi_def_cfa_offset 8
 21214 006c BD46     		mov	sp, r7
 21215              		.cfi_def_cfa_register 13
 21216              		@ sp needed
 21217 006e 80BD     		pop	{r7, pc}
 21218              	.L816:
 21219              		.align	2
 21220              	.L815:
 21221 0070 00000000 		.word	g_mem
 21222 0074 00000000 		.word	EEPROM_ADDR
 21223 0078 F0010000 		.word	g_mem+496
 21224 007c 00000000 		.word	c_mem
 21225              		.cfi_endproc
 21226              	.LFE84:
 21227              		.size	memRecall, .-memRecall
 21228              		.section	.text.memRestore,"ax",%progbits
 21229              		.align	2
 21230              		.global	memRestore
 21231              		.thumb
 21232              		.thumb_func
 21233              		.type	memRestore, %function
 21234              	memRestore:
 21235              	.LFB85:
2935:..\src/command_processing.c **** 
2936:..\src/command_processing.c **** 
2937:..\src/command_processing.c **** //==============================================================================
2938:..\src/command_processing.c **** //                                                                RESTORE MEMORY
2939:..\src/command_processing.c **** //==============================================================================
2940:..\src/command_processing.c **** 
2941:..\src/command_processing.c **** 
2942:..\src/command_processing.c **** uint8 memRestore(void) {
 21236              		.loc 1 2942 0
 21237              		.cfi_startproc
 21238              		@ args = 0, pretend = 0, frame = 8
 21239              		@ frame_needed = 1, uses_anonymous_args = 0
 21240 0000 80B5     		push	{r7, lr}
 21241              		.cfi_def_cfa_offset 8
 21242              		.cfi_offset 7, -8
 21243              		.cfi_offset 14, -4
 21244 0002 82B0     		sub	sp, sp, #8
 21245              		.cfi_def_cfa_offset 16
 21246 0004 00AF     		add	r7, sp, #0
 21247              		.cfi_def_cfa_register 7
2943:..\src/command_processing.c ****     uint16 i;
2944:..\src/command_processing.c **** 
2945:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 21248              		.loc 1 2945 0
 21249 0006 0023     		movs	r3, #0
 21250 0008 FB80     		strh	r3, [r7, #6]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 467


 21251 000a 0EE0     		b	.L818
 21252              	.L819:
2946:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 21253              		.loc 1 2946 0 discriminator 3
 21254 000c FB88     		ldrh	r3, [r7, #6]
 21255 000e 114A     		ldr	r2, .L822
 21256 0010 1344     		add	r3, r3, r2
 21257 0012 114A     		ldr	r2, .L822+4
 21258 0014 1168     		ldr	r1, [r2]
 21259 0016 FA88     		ldrh	r2, [r7, #6]
 21260 0018 02F54872 		add	r2, r2, #800
 21261 001c 0A44     		add	r2, r2, r1
 21262 001e 1278     		ldrb	r2, [r2]
 21263 0020 D2B2     		uxtb	r2, r2
 21264 0022 1A70     		strb	r2, [r3]
2945:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 21265              		.loc 1 2945 0 discriminator 3
 21266 0024 FB88     		ldrh	r3, [r7, #6]
 21267 0026 0133     		adds	r3, r3, #1
 21268 0028 FB80     		strh	r3, [r7, #6]	@ movhi
 21269              	.L818:
2945:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 21270              		.loc 1 2945 0 is_stmt 0 discriminator 1
 21271 002a FB88     		ldrh	r3, [r7, #6]
 21272 002c B3F53D7F 		cmp	r3, #756
 21273 0030 ECD3     		bcc	.L819
2947:..\src/command_processing.c ****     }
2948:..\src/command_processing.c **** 
2949:..\src/command_processing.c ****     //check for initialization
2950:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 21274              		.loc 1 2950 0 is_stmt 1
 21275 0032 084B     		ldr	r3, .L822
 21276 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21277 0036 002B     		cmp	r3, #0
 21278 0038 03D1     		bne	.L820
2951:..\src/command_processing.c ****         return memInit();
 21279              		.loc 1 2951 0
 21280 003a FFF7FEFF 		bl	memInit
 21281 003e 0346     		mov	r3, r0
 21282 0040 03E0     		b	.L821
 21283              	.L820:
2952:..\src/command_processing.c ****     } else {
2953:..\src/command_processing.c ****         return memStore(0);
 21284              		.loc 1 2953 0
 21285 0042 0020     		movs	r0, #0
 21286 0044 FFF7FEFF 		bl	memStore
 21287 0048 0346     		mov	r3, r0
 21288              	.L821:
2954:..\src/command_processing.c ****     }  
2955:..\src/command_processing.c **** }
 21289              		.loc 1 2955 0
 21290 004a 1846     		mov	r0, r3
 21291 004c 0837     		adds	r7, r7, #8
 21292              		.cfi_def_cfa_offset 8
 21293 004e BD46     		mov	sp, r7
 21294              		.cfi_def_cfa_register 13
 21295              		@ sp needed
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 468


 21296 0050 80BD     		pop	{r7, pc}
 21297              	.L823:
 21298 0052 00BF     		.align	2
 21299              	.L822:
 21300 0054 00000000 		.word	g_mem
 21301 0058 00000000 		.word	EEPROM_ADDR
 21302              		.cfi_endproc
 21303              	.LFE85:
 21304              		.size	memRestore, .-memRestore
 21305              		.section	.rodata
 21306 1d7b 00       		.align	2
 21307              	.LC282:
 21308 1d7c 47454E30 		.ascii	"GEN001\000"
 21308      303100
 21309              		.section	.text.memInit,"ax",%progbits
 21310              		.align	2
 21311              		.global	memInit
 21312              		.thumb
 21313              		.thumb_func
 21314              		.type	memInit, %function
 21315              	memInit:
 21316              	.LFB86:
2956:..\src/command_processing.c **** 
2957:..\src/command_processing.c **** //==============================================================================
2958:..\src/command_processing.c **** //                                                                   MEMORY INIT
2959:..\src/command_processing.c **** //==============================================================================
2960:..\src/command_processing.c **** 
2961:..\src/command_processing.c **** uint8 memInit(void)
2962:..\src/command_processing.c **** {
 21317              		.loc 1 2962 0
 21318              		.cfi_startproc
 21319              		@ args = 0, pretend = 0, frame = 8
 21320              		@ frame_needed = 1, uses_anonymous_args = 0
 21321 0000 80B5     		push	{r7, lr}
 21322              		.cfi_def_cfa_offset 8
 21323              		.cfi_offset 7, -8
 21324              		.cfi_offset 14, -4
 21325 0002 82B0     		sub	sp, sp, #8
 21326              		.cfi_def_cfa_offset 16
 21327 0004 00AF     		add	r7, sp, #0
 21328              		.cfi_def_cfa_register 7
2963:..\src/command_processing.c ****     uint8 i, j;
2964:..\src/command_processing.c **** 
2965:..\src/command_processing.c ****     //initialize memory settings
2966:..\src/command_processing.c ****     for (i=0; i<15; i++){
 21329              		.loc 1 2966 0
 21330 0006 0023     		movs	r3, #0
 21331 0008 FB71     		strb	r3, [r7, #7]
 21332 000a 07E0     		b	.L825
 21333              	.L826:
2967:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 21334              		.loc 1 2967 0 discriminator 3
 21335 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21336 000e B44A     		ldr	r2, .L851
 21337 0010 1344     		add	r3, r3, r2
 21338 0012 0022     		movs	r2, #0
 21339 0014 5A70     		strb	r2, [r3, #1]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 469


2966:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 21340              		.loc 1 2966 0 discriminator 3
 21341 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21342 0018 0133     		adds	r3, r3, #1
 21343 001a FB71     		strb	r3, [r7, #7]
 21344              	.L825:
2966:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 21345              		.loc 1 2966 0 is_stmt 0 discriminator 1
 21346 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21347 001e 0E2B     		cmp	r3, #14
 21348 0020 F4D9     		bls	.L826
2968:..\src/command_processing.c ****     }
2969:..\src/command_processing.c ****         
2970:..\src/command_processing.c ****     // DEV STRUCT
2971:..\src/command_processing.c ****     g_mem.dev.id                = 1;
 21349              		.loc 1 2971 0 is_stmt 1
 21350 0022 AF4B     		ldr	r3, .L851
 21351 0024 0122     		movs	r2, #1
 21352 0026 83F8A020 		strb	r2, [r3, #160]
2972:..\src/command_processing.c ****     g_mem.dev.right_left        = RIGHT_HAND;
 21353              		.loc 1 2972 0
 21354 002a AD4B     		ldr	r3, .L851
 21355 002c 0022     		movs	r2, #0
 21356 002e 83F8A720 		strb	r2, [r3, #167]
2973:..\src/command_processing.c ****     g_mem.dev.dev_type          = GENERIC_2_MOTORS;
 21357              		.loc 1 2973 0
 21358 0032 AB4B     		ldr	r3, .L851
 21359 0034 0122     		movs	r2, #1
 21360 0036 83F8AC20 		strb	r2, [r3, #172]
2974:..\src/command_processing.c ****     g_mem.dev.reset_counters    = FALSE;   
 21361              		.loc 1 2974 0
 21362 003a A94B     		ldr	r3, .L851
 21363 003c 0022     		movs	r2, #0
 21364 003e 83F8A820 		strb	r2, [r3, #168]
2975:..\src/command_processing.c ****     reset_counters();                       //Initialize counters
 21365              		.loc 1 2975 0
 21366 0042 FFF7FEFF 		bl	reset_counters
2976:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 21367              		.loc 1 2976 0
 21368 0046 0023     		movs	r3, #0
 21369 0048 FB71     		strb	r3, [r7, #7]
 21370 004a 08E0     		b	.L827
 21371              	.L828:
2977:..\src/command_processing.c ****         g_mem.unused_bytes1[i] = 0;
 21372              		.loc 1 2977 0 discriminator 3
 21373 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21374 004e A44A     		ldr	r2, .L851
 21375 0050 1344     		add	r3, r3, r2
 21376 0052 0022     		movs	r2, #0
 21377 0054 83F86020 		strb	r2, [r3, #96]
2976:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 21378              		.loc 1 2976 0 discriminator 3
 21379 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21380 005a 0133     		adds	r3, r3, #1
 21381 005c FB71     		strb	r3, [r7, #7]
 21382              	.L827:
2976:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 470


 21383              		.loc 1 2976 0 is_stmt 0 discriminator 1
 21384 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21385 0060 3F2B     		cmp	r3, #63
 21386 0062 F3D9     		bls	.L828
2978:..\src/command_processing.c ****     }
2979:..\src/command_processing.c ****     g_mem.dev.use_2nd_motor_flag = FALSE;
 21387              		.loc 1 2979 0 is_stmt 1
 21388 0064 9E4B     		ldr	r3, .L851
 21389 0066 0022     		movs	r2, #0
 21390 0068 83F8A920 		strb	r2, [r3, #169]
2980:..\src/command_processing.c **** 
2981:..\src/command_processing.c ****     // MOTOR STRUCT
2982:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 21391              		.loc 1 2982 0
 21392 006c 0023     		movs	r3, #0
 21393 006e FB71     		strb	r3, [r7, #7]
 21394 0070 15E1     		b	.L829
 21395              	.L832:
2983:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 21396              		.loc 1 2983 0
 21397 0072 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21398 0074 9A49     		ldr	r1, .L851
 21399 0076 1346     		mov	r3, r2
 21400 0078 DB00     		lsls	r3, r3, #3
 21401 007a 9B1A     		subs	r3, r3, r2
 21402 007c 1B01     		lsls	r3, r3, #4
 21403 007e 0B44     		add	r3, r3, r1
 21404 0080 B033     		adds	r3, r3, #176
 21405 0082 40F23942 		movw	r2, #1081
 21406 0086 1A60     		str	r2, [r3]
2984:..\src/command_processing.c ****         g_mem.motor[i].k_i           =     0 * 65536;
 21407              		.loc 1 2984 0
 21408 0088 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21409 008a 9549     		ldr	r1, .L851
 21410 008c 1346     		mov	r3, r2
 21411 008e DB00     		lsls	r3, r3, #3
 21412 0090 9B1A     		subs	r3, r3, r2
 21413 0092 1B01     		lsls	r3, r3, #4
 21414 0094 0B44     		add	r3, r3, r1
 21415 0096 B433     		adds	r3, r3, #180
 21416 0098 0022     		movs	r2, #0
 21417 009a 1A60     		str	r2, [r3]
2985:..\src/command_processing.c ****         g_mem.motor[i].k_d           = 0.007 * 65536;  // changed in order to avoid metallic clatte
 21418              		.loc 1 2985 0
 21419 009c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21420 009e 9049     		ldr	r1, .L851
 21421 00a0 1346     		mov	r3, r2
 21422 00a2 DB00     		lsls	r3, r3, #3
 21423 00a4 9B1A     		subs	r3, r3, r2
 21424 00a6 1B01     		lsls	r3, r3, #4
 21425 00a8 0B44     		add	r3, r3, r1
 21426 00aa B833     		adds	r3, r3, #184
 21427 00ac 4FF4E572 		mov	r2, #458
 21428 00b0 1A60     		str	r2, [r3]
2986:..\src/command_processing.c ****         g_mem.motor[i].k_p_c         =     1 * 65536;
 21429              		.loc 1 2986 0
 21430 00b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 471


 21431 00b4 8A49     		ldr	r1, .L851
 21432 00b6 1346     		mov	r3, r2
 21433 00b8 DB00     		lsls	r3, r3, #3
 21434 00ba 9B1A     		subs	r3, r3, r2
 21435 00bc 1B01     		lsls	r3, r3, #4
 21436 00be 0B44     		add	r3, r3, r1
 21437 00c0 BC33     		adds	r3, r3, #188
 21438 00c2 4FF48032 		mov	r2, #65536
 21439 00c6 1A60     		str	r2, [r3]
2987:..\src/command_processing.c ****         g_mem.motor[i].k_i_c         = 0.001 * 65536;
 21440              		.loc 1 2987 0
 21441 00c8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21442 00ca 8549     		ldr	r1, .L851
 21443 00cc 1346     		mov	r3, r2
 21444 00ce DB00     		lsls	r3, r3, #3
 21445 00d0 9B1A     		subs	r3, r3, r2
 21446 00d2 1B01     		lsls	r3, r3, #4
 21447 00d4 0B44     		add	r3, r3, r1
 21448 00d6 C033     		adds	r3, r3, #192
 21449 00d8 4122     		movs	r2, #65
 21450 00da 1A60     		str	r2, [r3]
2988:..\src/command_processing.c ****         g_mem.motor[i].k_d_c         =     0 * 65536;
 21451              		.loc 1 2988 0
 21452 00dc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21453 00de 8049     		ldr	r1, .L851
 21454 00e0 1346     		mov	r3, r2
 21455 00e2 DB00     		lsls	r3, r3, #3
 21456 00e4 9B1A     		subs	r3, r3, r2
 21457 00e6 1B01     		lsls	r3, r3, #4
 21458 00e8 0B44     		add	r3, r3, r1
 21459 00ea C433     		adds	r3, r3, #196
 21460 00ec 0022     		movs	r2, #0
 21461 00ee 1A60     		str	r2, [r3]
2989:..\src/command_processing.c **** 
2990:..\src/command_processing.c ****         g_mem.motor[i].k_p_dl        =   0.1 * 65536;
 21462              		.loc 1 2990 0
 21463 00f0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21464 00f2 7B49     		ldr	r1, .L851
 21465 00f4 1346     		mov	r3, r2
 21466 00f6 DB00     		lsls	r3, r3, #3
 21467 00f8 9B1A     		subs	r3, r3, r2
 21468 00fa 1B01     		lsls	r3, r3, #4
 21469 00fc 0B44     		add	r3, r3, r1
 21470 00fe C833     		adds	r3, r3, #200
 21471 0100 41F69912 		movw	r2, #6553
 21472 0104 1A60     		str	r2, [r3]
2991:..\src/command_processing.c ****         g_mem.motor[i].k_i_dl        =     0 * 65536;
 21473              		.loc 1 2991 0
 21474 0106 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21475 0108 7549     		ldr	r1, .L851
 21476 010a 1346     		mov	r3, r2
 21477 010c DB00     		lsls	r3, r3, #3
 21478 010e 9B1A     		subs	r3, r3, r2
 21479 0110 1B01     		lsls	r3, r3, #4
 21480 0112 0B44     		add	r3, r3, r1
 21481 0114 CC33     		adds	r3, r3, #204
 21482 0116 0022     		movs	r2, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 472


 21483 0118 1A60     		str	r2, [r3]
2992:..\src/command_processing.c ****         g_mem.motor[i].k_d_dl        =     0 * 65536;
 21484              		.loc 1 2992 0
 21485 011a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21486 011c 7049     		ldr	r1, .L851
 21487 011e 1346     		mov	r3, r2
 21488 0120 DB00     		lsls	r3, r3, #3
 21489 0122 9B1A     		subs	r3, r3, r2
 21490 0124 1B01     		lsls	r3, r3, #4
 21491 0126 0B44     		add	r3, r3, r1
 21492 0128 D033     		adds	r3, r3, #208
 21493 012a 0022     		movs	r2, #0
 21494 012c 1A60     		str	r2, [r3]
2993:..\src/command_processing.c ****         g_mem.motor[i].k_p_c_dl      =   0.3 * 65536;
 21495              		.loc 1 2993 0
 21496 012e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21497 0130 6B49     		ldr	r1, .L851
 21498 0132 1346     		mov	r3, r2
 21499 0134 DB00     		lsls	r3, r3, #3
 21500 0136 9B1A     		subs	r3, r3, r2
 21501 0138 1B01     		lsls	r3, r3, #4
 21502 013a 0B44     		add	r3, r3, r1
 21503 013c D433     		adds	r3, r3, #212
 21504 013e 44F6CC42 		movw	r2, #19660
 21505 0142 1A60     		str	r2, [r3]
2994:..\src/command_processing.c ****         g_mem.motor[i].k_i_c_dl      =0.0002 * 65536;
 21506              		.loc 1 2994 0
 21507 0144 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21508 0146 6649     		ldr	r1, .L851
 21509 0148 1346     		mov	r3, r2
 21510 014a DB00     		lsls	r3, r3, #3
 21511 014c 9B1A     		subs	r3, r3, r2
 21512 014e 1B01     		lsls	r3, r3, #4
 21513 0150 0B44     		add	r3, r3, r1
 21514 0152 D833     		adds	r3, r3, #216
 21515 0154 0D22     		movs	r2, #13
 21516 0156 1A60     		str	r2, [r3]
2995:..\src/command_processing.c ****         g_mem.motor[i].k_d_c_dl      =     0 * 65536;
 21517              		.loc 1 2995 0
 21518 0158 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21519 015a 6149     		ldr	r1, .L851
 21520 015c 1346     		mov	r3, r2
 21521 015e DB00     		lsls	r3, r3, #3
 21522 0160 9B1A     		subs	r3, r3, r2
 21523 0162 1B01     		lsls	r3, r3, #4
 21524 0164 0B44     		add	r3, r3, r1
 21525 0166 DC33     		adds	r3, r3, #220
 21526 0168 0022     		movs	r2, #0
 21527 016a 1A60     		str	r2, [r3]
2996:..\src/command_processing.c **** 
2997:..\src/command_processing.c ****         g_mem.motor[i].activ         = 1;
 21528              		.loc 1 2997 0
 21529 016c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21530 016e 5C49     		ldr	r1, .L851
 21531 0170 1346     		mov	r3, r2
 21532 0172 DB00     		lsls	r3, r3, #3
 21533 0174 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 473


 21534 0176 1B01     		lsls	r3, r3, #4
 21535 0178 0B44     		add	r3, r3, r1
 21536 017a E033     		adds	r3, r3, #224
 21537 017c 0122     		movs	r2, #1
 21538 017e 1A70     		strb	r2, [r3]
2998:..\src/command_processing.c ****         g_mem.motor[i].activate_pwm_rescaling = MAXON_24V;      //rescaling active for 12V motor
 21539              		.loc 1 2998 0
 21540 0180 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21541 0182 5749     		ldr	r1, .L851
 21542 0184 1346     		mov	r3, r2
 21543 0186 DB00     		lsls	r3, r3, #3
 21544 0188 9B1A     		subs	r3, r3, r2
 21545 018a 1B01     		lsls	r3, r3, #4
 21546 018c 0B44     		add	r3, r3, r1
 21547 018e E133     		adds	r3, r3, #225
 21548 0190 0022     		movs	r2, #0
 21549 0192 1A70     		strb	r2, [r3]
2999:..\src/command_processing.c ****         g_mem.motor[i].motor_driver_type = DRIVER_MC33887;      //SoftHand standard driver
 21550              		.loc 1 2999 0
 21551 0194 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21552 0196 5249     		ldr	r1, .L851
 21553 0198 1346     		mov	r3, r2
 21554 019a DB00     		lsls	r3, r3, #3
 21555 019c 9B1A     		subs	r3, r3, r2
 21556 019e 1B01     		lsls	r3, r3, #4
 21557 01a0 0B44     		add	r3, r3, r1
 21558 01a2 E233     		adds	r3, r3, #226
 21559 01a4 0022     		movs	r2, #0
 21560 01a6 1A70     		strb	r2, [r3]
3000:..\src/command_processing.c ****         g_mem.motor[i].input_mode    = INPUT_MODE_EXTERNAL;
 21561              		.loc 1 3000 0
 21562 01a8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21563 01aa 4D49     		ldr	r1, .L851
 21564 01ac 1346     		mov	r3, r2
 21565 01ae DB00     		lsls	r3, r3, #3
 21566 01b0 9B1A     		subs	r3, r3, r2
 21567 01b2 1B01     		lsls	r3, r3, #4
 21568 01b4 0B44     		add	r3, r3, r1
 21569 01b6 03F58773 		add	r3, r3, #270
 21570 01ba 0022     		movs	r2, #0
 21571 01bc 1A70     		strb	r2, [r3]
3001:..\src/command_processing.c ****         g_mem.motor[i].control_mode  = CONTROL_ANGLE;
 21572              		.loc 1 3001 0
 21573 01be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21574 01c0 4749     		ldr	r1, .L851
 21575 01c2 1346     		mov	r3, r2
 21576 01c4 DB00     		lsls	r3, r3, #3
 21577 01c6 9B1A     		subs	r3, r3, r2
 21578 01c8 1B01     		lsls	r3, r3, #4
 21579 01ca 0B44     		add	r3, r3, r1
 21580 01cc 03F20F13 		addw	r3, r3, #271
 21581 01d0 0022     		movs	r2, #0
 21582 01d2 1A70     		strb	r2, [r3]
3002:..\src/command_processing.c ****         g_mem.motor[i].max_step_pos = 0;
 21583              		.loc 1 3002 0
 21584 01d4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21585 01d6 4249     		ldr	r1, .L851
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 474


 21586 01d8 1346     		mov	r3, r2
 21587 01da DB00     		lsls	r3, r3, #3
 21588 01dc 9B1A     		subs	r3, r3, r2
 21589 01de 1B01     		lsls	r3, r3, #4
 21590 01e0 0B44     		add	r3, r3, r1
 21591 01e2 F033     		adds	r3, r3, #240
 21592 01e4 0022     		movs	r2, #0
 21593 01e6 1A60     		str	r2, [r3]
3003:..\src/command_processing.c ****         g_mem.motor[i].max_step_neg = 0;
 21594              		.loc 1 3003 0
 21595 01e8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21596 01ea 3D49     		ldr	r1, .L851
 21597 01ec 1346     		mov	r3, r2
 21598 01ee DB00     		lsls	r3, r3, #3
 21599 01f0 9B1A     		subs	r3, r3, r2
 21600 01f2 1B01     		lsls	r3, r3, #4
 21601 01f4 0B44     		add	r3, r3, r1
 21602 01f6 EC33     		adds	r3, r3, #236
 21603 01f8 0022     		movs	r2, #0
 21604 01fa 1A60     		str	r2, [r3]
3004:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 21605              		.loc 1 3004 0
 21606 01fc 0023     		movs	r3, #0
 21607 01fe BB71     		strb	r3, [r7, #6]
 21608 0200 10E0     		b	.L830
 21609              	.L831:
3005:..\src/command_processing.c ****             g_mem.motor[i].curr_lookup[j] = 0;
 21610              		.loc 1 3005 0 discriminator 3
 21611 0202 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21612 0204 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21613 0206 3648     		ldr	r0, .L851
 21614 0208 1346     		mov	r3, r2
 21615 020a DB00     		lsls	r3, r3, #3
 21616 020c 9B1A     		subs	r3, r3, r2
 21617 020e 9B00     		lsls	r3, r3, #2
 21618 0210 0B44     		add	r3, r3, r1
 21619 0212 3C33     		adds	r3, r3, #60
 21620 0214 9B00     		lsls	r3, r3, #2
 21621 0216 0344     		add	r3, r3, r0
 21622 0218 4FF00002 		mov	r2, #0
 21623 021c 5A60     		str	r2, [r3, #4]	@ float
3004:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 21624              		.loc 1 3004 0 discriminator 3
 21625 021e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21626 0220 0133     		adds	r3, r3, #1
 21627 0222 BB71     		strb	r3, [r7, #6]
 21628              	.L830:
3004:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 21629              		.loc 1 3004 0 is_stmt 0 discriminator 1
 21630 0224 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21631 0226 052B     		cmp	r3, #5
 21632 0228 EBD9     		bls	.L831
3006:..\src/command_processing.c ****         }
3007:..\src/command_processing.c ****         g_mem.motor[i].current_limit = DEFAULT_CURRENT_LIMIT;
 21633              		.loc 1 3007 0 is_stmt 1 discriminator 2
 21634 022a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21635 022c 2C49     		ldr	r1, .L851
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 475


 21636 022e 1346     		mov	r3, r2
 21637 0230 DB00     		lsls	r3, r3, #3
 21638 0232 9B1A     		subs	r3, r3, r2
 21639 0234 1B01     		lsls	r3, r3, #4
 21640 0236 0B44     		add	r3, r3, r1
 21641 0238 03F58673 		add	r3, r3, #268
 21642 023c 40F2DC52 		movw	r2, #1500
 21643 0240 1A80     		strh	r2, [r3]	@ movhi
3008:..\src/command_processing.c ****         g_mem.motor[i].encoder_line = i;    
 21644              		.loc 1 3008 0 discriminator 2
 21645 0242 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21646 0244 2649     		ldr	r1, .L851
 21647 0246 1346     		mov	r3, r2
 21648 0248 DB00     		lsls	r3, r3, #3
 21649 024a 9B1A     		subs	r3, r3, r2
 21650 024c 1B01     		lsls	r3, r3, #4
 21651 024e 0B44     		add	r3, r3, r1
 21652 0250 03F58873 		add	r3, r3, #272
 21653 0254 FA79     		ldrb	r2, [r7, #7]
 21654 0256 1A70     		strb	r2, [r3]
3009:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_flag = 1;
 21655              		.loc 1 3009 0 discriminator 2
 21656 0258 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21657 025a 2149     		ldr	r1, .L851
 21658 025c 1346     		mov	r3, r2
 21659 025e DB00     		lsls	r3, r3, #3
 21660 0260 9B1A     		subs	r3, r3, r2
 21661 0262 1B01     		lsls	r3, r3, #4
 21662 0264 0B44     		add	r3, r3, r1
 21663 0266 E333     		adds	r3, r3, #227
 21664 0268 0122     		movs	r2, #1
 21665 026a 1A70     		strb	r2, [r3]
3010:..\src/command_processing.c ****         
3011:..\src/command_processing.c ****         g_mem.motor[i].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 21666              		.loc 1 3011 0 discriminator 2
 21667 026c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21668 026e 1C49     		ldr	r1, .L851
 21669 0270 1346     		mov	r3, r2
 21670 0272 DB00     		lsls	r3, r3, #3
 21671 0274 9B1A     		subs	r3, r3, r2
 21672 0276 1B01     		lsls	r3, r3, #4
 21673 0278 0B44     		add	r3, r3, r1
 21674 027a 03F21113 		addw	r3, r3, #273
 21675 027e 0122     		movs	r2, #1
 21676 0280 1A70     		strb	r2, [r3]
3012:..\src/command_processing.c ****         g_mem.motor[i].not_revers_motor_flag = FALSE;       // Generic reversible motor  
 21677              		.loc 1 3012 0 discriminator 2
 21678 0282 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21679 0284 1649     		ldr	r1, .L851
 21680 0286 1346     		mov	r3, r2
 21681 0288 DB00     		lsls	r3, r3, #3
 21682 028a 9B1A     		subs	r3, r3, r2
 21683 028c 1B01     		lsls	r3, r3, #4
 21684 028e 0B44     		add	r3, r3, r1
 21685 0290 03F58973 		add	r3, r3, #274
 21686 0294 0022     		movs	r2, #0
 21687 0296 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 476


2982:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 21688              		.loc 1 2982 0 discriminator 2
 21689 0298 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21690 029a 0133     		adds	r3, r3, #1
 21691 029c FB71     		strb	r3, [r7, #7]
 21692              	.L829:
2982:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 21693              		.loc 1 2982 0 is_stmt 0 discriminator 1
 21694 029e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21695 02a0 012B     		cmp	r3, #1
 21696 02a2 7FF6E6AE 		bls	.L832
3013:..\src/command_processing.c ****     }
3014:..\src/command_processing.c ****     
3015:..\src/command_processing.c ****     // ENC STRUCT
3016:..\src/command_processing.c ****     for (i = 0; i< N_ENCODER_LINE_MAX; i++){
 21697              		.loc 1 3016 0 is_stmt 1
 21698 02a6 0023     		movs	r3, #0
 21699 02a8 FB71     		strb	r3, [r7, #7]
 21700 02aa 98E0     		b	.L833
 21701              	.L840:
3017:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 21702              		.loc 1 3017 0
 21703 02ac 0023     		movs	r3, #0
 21704 02ae BB71     		strb	r3, [r7, #6]
 21705 02b0 0FE0     		b	.L834
 21706              	.L835:
3018:..\src/command_processing.c ****             g_mem.enc[i].Enc_raw_read_conf[j] = 0;
 21707              		.loc 1 3018 0 discriminator 3
 21708 02b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21709 02b4 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21710 02b6 0A48     		ldr	r0, .L851
 21711 02b8 1346     		mov	r3, r2
 21712 02ba 5B00     		lsls	r3, r3, #1
 21713 02bc 1344     		add	r3, r3, r2
 21714 02be 1B01     		lsls	r3, r3, #4
 21715 02c0 0344     		add	r3, r3, r0
 21716 02c2 0B44     		add	r3, r3, r1
 21717 02c4 03F5C873 		add	r3, r3, #400
 21718 02c8 0022     		movs	r2, #0
 21719 02ca 1A70     		strb	r2, [r3]
3017:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 21720              		.loc 1 3017 0 discriminator 3
 21721 02cc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21722 02ce 0133     		adds	r3, r3, #1
 21723 02d0 BB71     		strb	r3, [r7, #6]
 21724              	.L834:
3017:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 21725              		.loc 1 3017 0 is_stmt 0 discriminator 1
 21726 02d2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21727 02d4 042B     		cmp	r3, #4
 21728 02d6 ECD9     		bls	.L835
3019:..\src/command_processing.c ****         }
3020:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 21729              		.loc 1 3020 0 is_stmt 1
 21730 02d8 0023     		movs	r3, #0
 21731 02da BB71     		strb	r3, [r7, #6]
 21732 02dc 2CE0     		b	.L836
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 477


 21733              	.L852:
 21734 02de 00BF     		.align	2
 21735              	.L851:
 21736 02e0 00000000 		.word	g_mem
 21737              	.L837:
3021:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 21738              		.loc 1 3021 0 discriminator 3
 21739 02e4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21740 02e6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21741 02e8 C748     		ldr	r0, .L853
 21742 02ea 1346     		mov	r3, r2
 21743 02ec 5B00     		lsls	r3, r3, #1
 21744 02ee 1344     		add	r3, r3, r2
 21745 02f0 1B01     		lsls	r3, r3, #4
 21746 02f2 0344     		add	r3, r3, r0
 21747 02f4 0B44     		add	r3, r3, r1
 21748 02f6 03F29513 		addw	r3, r3, #405
 21749 02fa 0322     		movs	r2, #3
 21750 02fc 1A70     		strb	r2, [r3]
3022:..\src/command_processing.c ****             g_mem.enc[i].m_mult[j] = 1;
 21751              		.loc 1 3022 0 discriminator 3
 21752 02fe FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21753 0300 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21754 0302 C148     		ldr	r0, .L853
 21755 0304 1346     		mov	r3, r2
 21756 0306 5B00     		lsls	r3, r3, #1
 21757 0308 1344     		add	r3, r3, r2
 21758 030a 9B00     		lsls	r3, r3, #2
 21759 030c 0B44     		add	r3, r3, r1
 21760 030e 6833     		adds	r3, r3, #104
 21761 0310 9B00     		lsls	r3, r3, #2
 21762 0312 0344     		add	r3, r3, r0
 21763 0314 4FF07E52 		mov	r2, #1065353216
 21764 0318 5A60     		str	r2, [r3, #4]	@ float
3023:..\src/command_processing.c ****             g_mem.enc[i].m_off[j] = (int32)0 << g_mem.enc[i].res[j];
 21765              		.loc 1 3023 0 discriminator 3
 21766 031a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21767 031c B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21768 031e BA48     		ldr	r0, .L853
 21769 0320 1346     		mov	r3, r2
 21770 0322 5B00     		lsls	r3, r3, #1
 21771 0324 1344     		add	r3, r3, r2
 21772 0326 9B00     		lsls	r3, r3, #2
 21773 0328 0B44     		add	r3, r3, r1
 21774 032a 6633     		adds	r3, r3, #102
 21775 032c 0022     		movs	r2, #0
 21776 032e 40F82320 		str	r2, [r0, r3, lsl #2]
3020:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 21777              		.loc 1 3020 0 discriminator 3
 21778 0332 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21779 0334 0133     		adds	r3, r3, #1
 21780 0336 BB71     		strb	r3, [r7, #6]
 21781              	.L836:
3020:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 21782              		.loc 1 3020 0 is_stmt 0 discriminator 1
 21783 0338 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21784 033a 022B     		cmp	r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 478


 21785 033c D2D9     		bls	.L837
3024:..\src/command_processing.c ****         }
3025:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = FALSE;
 21786              		.loc 1 3025 0 is_stmt 1
 21787 033e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21788 0340 B149     		ldr	r1, .L853
 21789 0342 1346     		mov	r3, r2
 21790 0344 5B00     		lsls	r3, r3, #1
 21791 0346 1344     		add	r3, r3, r2
 21792 0348 1B01     		lsls	r3, r3, #4
 21793 034a 0B44     		add	r3, r3, r1
 21794 034c 03F5D873 		add	r3, r3, #432
 21795 0350 0022     		movs	r2, #0
 21796 0352 1A70     		strb	r2, [r3]
3026:..\src/command_processing.c ****         g_mem.enc[i].motor_handle_ratio = 22;     
 21797              		.loc 1 3026 0
 21798 0354 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21799 0356 AC49     		ldr	r1, .L853
 21800 0358 1346     		mov	r3, r2
 21801 035a 5B00     		lsls	r3, r3, #1
 21802 035c 1344     		add	r3, r3, r2
 21803 035e 1B01     		lsls	r3, r3, #4
 21804 0360 0B44     		add	r3, r3, r1
 21805 0362 03F5DA73 		add	r3, r3, #436
 21806 0366 1622     		movs	r2, #22
 21807 0368 1A70     		strb	r2, [r3]
3027:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 21808              		.loc 1 3027 0
 21809 036a 0023     		movs	r3, #0
 21810 036c BB71     		strb	r3, [r7, #6]
 21811 036e 0FE0     		b	.L838
 21812              	.L839:
3028:..\src/command_processing.c ****             g_mem.enc[i].Enc_idx_use_for_control[j] = j;    // First encoder is that with index 0 a
 21813              		.loc 1 3028 0 discriminator 3
 21814 0370 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21815 0372 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21816 0374 A448     		ldr	r0, .L853
 21817 0376 1346     		mov	r3, r2
 21818 0378 5B00     		lsls	r3, r3, #1
 21819 037a 1344     		add	r3, r3, r2
 21820 037c 1B01     		lsls	r3, r3, #4
 21821 037e 0344     		add	r3, r3, r0
 21822 0380 0B44     		add	r3, r3, r1
 21823 0382 03F2B113 		addw	r3, r3, #433
 21824 0386 BA79     		ldrb	r2, [r7, #6]
 21825 0388 1A70     		strb	r2, [r3]
3027:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 21826              		.loc 1 3027 0 discriminator 3
 21827 038a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21828 038c 0133     		adds	r3, r3, #1
 21829 038e BB71     		strb	r3, [r7, #6]
 21830              	.L838:
3027:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 21831              		.loc 1 3027 0 is_stmt 0 discriminator 1
 21832 0390 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21833 0392 022B     		cmp	r3, #2
 21834 0394 ECD9     		bls	.L839
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 479


3029:..\src/command_processing.c ****         }
3030:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = 15;     
 21835              		.loc 1 3030 0 is_stmt 1 discriminator 2
 21836 0396 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21837 0398 9B49     		ldr	r1, .L853
 21838 039a 1346     		mov	r3, r2
 21839 039c 5B00     		lsls	r3, r3, #1
 21840 039e 1344     		add	r3, r3, r2
 21841 03a0 1B01     		lsls	r3, r3, #4
 21842 03a2 0B44     		add	r3, r3, r1
 21843 03a4 03F2B513 		addw	r3, r3, #437
 21844 03a8 0F22     		movs	r2, #15
 21845 03aa 1A70     		strb	r2, [r3]
3031:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = 14;     
 21846              		.loc 1 3031 0 discriminator 2
 21847 03ac FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21848 03ae 9649     		ldr	r1, .L853
 21849 03b0 1346     		mov	r3, r2
 21850 03b2 5B00     		lsls	r3, r3, #1
 21851 03b4 1344     		add	r3, r3, r2
 21852 03b6 1B01     		lsls	r3, r3, #4
 21853 03b8 0B44     		add	r3, r3, r1
 21854 03ba 03F5DB73 		add	r3, r3, #438
 21855 03be 0E22     		movs	r2, #14
 21856 03c0 1A70     		strb	r2, [r3]
3032:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = 1;  
 21857              		.loc 1 3032 0 discriminator 2
 21858 03c2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21859 03c4 9049     		ldr	r1, .L853
 21860 03c6 1346     		mov	r3, r2
 21861 03c8 5B00     		lsls	r3, r3, #1
 21862 03ca 1344     		add	r3, r3, r2
 21863 03cc 1B01     		lsls	r3, r3, #4
 21864 03ce 0B44     		add	r3, r3, r1
 21865 03d0 03F2B713 		addw	r3, r3, #439
 21866 03d4 0122     		movs	r2, #1
 21867 03d6 1A70     		strb	r2, [r3]
3016:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 21868              		.loc 1 3016 0 discriminator 2
 21869 03d8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21870 03da 0133     		adds	r3, r3, #1
 21871 03dc FB71     		strb	r3, [r7, #7]
 21872              	.L833:
3016:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 21873              		.loc 1 3016 0 is_stmt 0 discriminator 1
 21874 03de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21875 03e0 012B     		cmp	r3, #1
 21876 03e2 7FF663AF 		bls	.L840
3033:..\src/command_processing.c ****     }
3034:..\src/command_processing.c ****     
3035:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 21877              		.loc 1 3035 0 is_stmt 1
 21878 03e6 0023     		movs	r3, #0
 21879 03e8 FB71     		strb	r3, [r7, #7]
 21880 03ea 2EE0     		b	.L841
 21881              	.L842:
3036:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 480


 21882              		.loc 1 3036 0 discriminator 3
 21883 03ec FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21884 03ee 8649     		ldr	r1, .L853
 21885 03f0 1346     		mov	r3, r2
 21886 03f2 DB00     		lsls	r3, r3, #3
 21887 03f4 9B1A     		subs	r3, r3, r2
 21888 03f6 1B01     		lsls	r3, r3, #4
 21889 03f8 0B44     		add	r3, r3, r1
 21890 03fa E433     		adds	r3, r3, #228
 21891 03fc 0022     		movs	r2, #0
 21892 03fe 1A60     		str	r2, [r3]
3037:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_sup = (int32)19000 << g_mem.enc[g_mem.motor[i].encoder_line].res[0];
 21893              		.loc 1 3037 0 discriminator 3
 21894 0400 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21895 0402 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 21896 0404 8048     		ldr	r0, .L853
 21897 0406 0B46     		mov	r3, r1
 21898 0408 DB00     		lsls	r3, r3, #3
 21899 040a 5B1A     		subs	r3, r3, r1
 21900 040c 1B01     		lsls	r3, r3, #4
 21901 040e 0344     		add	r3, r3, r0
 21902 0410 03F58873 		add	r3, r3, #272
 21903 0414 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21904 0416 1846     		mov	r0, r3
 21905 0418 7B49     		ldr	r1, .L853
 21906 041a 0346     		mov	r3, r0
 21907 041c 5B00     		lsls	r3, r3, #1
 21908 041e 0344     		add	r3, r3, r0
 21909 0420 1B01     		lsls	r3, r3, #4
 21910 0422 0B44     		add	r3, r3, r1
 21911 0424 03F29513 		addw	r3, r3, #405
 21912 0428 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21913 042a 1946     		mov	r1, r3
 21914 042c 44F63823 		movw	r3, #19000
 21915 0430 03FA01F1 		lsl	r1, r3, r1
 21916 0434 7448     		ldr	r0, .L853
 21917 0436 1346     		mov	r3, r2
 21918 0438 DB00     		lsls	r3, r3, #3
 21919 043a 9B1A     		subs	r3, r3, r2
 21920 043c 1B01     		lsls	r3, r3, #4
 21921 043e 0344     		add	r3, r3, r0
 21922 0440 E833     		adds	r3, r3, #232
 21923 0442 1960     		str	r1, [r3]
3035:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 21924              		.loc 1 3035 0 discriminator 3
 21925 0444 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21926 0446 0133     		adds	r3, r3, #1
 21927 0448 FB71     		strb	r3, [r7, #7]
 21928              	.L841:
3035:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 21929              		.loc 1 3035 0 is_stmt 0 discriminator 1
 21930 044a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21931 044c 012B     		cmp	r3, #1
 21932 044e CDD9     		bls	.L842
3038:..\src/command_processing.c ****     }
3039:..\src/command_processing.c ****     
3040:..\src/command_processing.c ****     // EMG STRUCT     
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 481


3041:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 21933              		.loc 1 3041 0 is_stmt 1
 21934 0450 6D4B     		ldr	r3, .L853
 21935 0452 C822     		movs	r2, #200
 21936 0454 A3F8F021 		strh	r2, [r3, #496]	@ movhi
3042:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 21937              		.loc 1 3042 0
 21938 0458 6B4B     		ldr	r3, .L853
 21939 045a C822     		movs	r2, #200
 21940 045c A3F8F221 		strh	r2, [r3, #498]	@ movhi
3043:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 21941              		.loc 1 3043 0
 21942 0460 694B     		ldr	r3, .L853
 21943 0462 4FF48062 		mov	r2, #1024
 21944 0466 C3F8F421 		str	r2, [r3, #500]
3044:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;   
 21945              		.loc 1 3044 0
 21946 046a 674B     		ldr	r3, .L853
 21947 046c 4FF48062 		mov	r2, #1024
 21948 0470 C3F8F821 		str	r2, [r3, #504]
3045:..\src/command_processing.c ****     g_mem.emg.emg_speed[0] = 100; 
 21949              		.loc 1 3045 0
 21950 0474 644B     		ldr	r3, .L853
 21951 0476 6422     		movs	r2, #100
 21952 0478 83F8FC21 		strb	r2, [r3, #508]
3046:..\src/command_processing.c ****     g_mem.emg.emg_speed[1] = 100; 
 21953              		.loc 1 3046 0
 21954 047c 624B     		ldr	r3, .L853
 21955 047e 6422     		movs	r2, #100
 21956 0480 83F8FD21 		strb	r2, [r3, #509]
3047:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;      // EMG calibration disabled by default
 21957              		.loc 1 3047 0
 21958 0484 604B     		ldr	r3, .L853
 21959 0486 0022     		movs	r2, #0
 21960 0488 83F8FE21 		strb	r2, [r3, #510]
3048:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;    
 21961              		.loc 1 3048 0
 21962 048c 5E4B     		ldr	r3, .L853
 21963 048e 0022     		movs	r2, #0
 21964 0490 83F8FF21 		strb	r2, [r3, #511]
3049:..\src/command_processing.c **** 
3050:..\src/command_processing.c ****     // IMU STRUCT
3051:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 21965              		.loc 1 3051 0
 21966 0494 5C4B     		ldr	r3, .L853
 21967 0496 0022     		movs	r2, #0
 21968 0498 83F80022 		strb	r2, [r3, #512]
3052:..\src/command_processing.c ****     g_mem.imu.SPI_read_delay = 0;       // 0 - No delay
 21969              		.loc 1 3052 0
 21970 049c 5A4B     		ldr	r3, .L853
 21971 049e 0022     		movs	r2, #0
 21972 04a0 83F80122 		strb	r2, [r3, #513]
3053:..\src/command_processing.c ****     for (i = 0; i< N_IMU_MAX; i++){
 21973              		.loc 1 3053 0
 21974 04a4 0023     		movs	r3, #0
 21975 04a6 FB71     		strb	r3, [r7, #7]
 21976 04a8 34E0     		b	.L843
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 482


 21977              	.L844:
3054:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 21978              		.loc 1 3054 0 discriminator 3
 21979 04aa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21980 04ac 5649     		ldr	r1, .L853
 21981 04ae 1346     		mov	r3, r2
 21982 04b0 9B00     		lsls	r3, r3, #2
 21983 04b2 1344     		add	r3, r3, r2
 21984 04b4 0B44     		add	r3, r3, r1
 21985 04b6 03F20223 		addw	r3, r3, #514
 21986 04ba 0122     		movs	r2, #1
 21987 04bc 1A70     		strb	r2, [r3]
3055:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][1] = 1;   // Gyroscopes
 21988              		.loc 1 3055 0 discriminator 3
 21989 04be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21990 04c0 5149     		ldr	r1, .L853
 21991 04c2 1346     		mov	r3, r2
 21992 04c4 9B00     		lsls	r3, r3, #2
 21993 04c6 1344     		add	r3, r3, r2
 21994 04c8 0B44     		add	r3, r3, r1
 21995 04ca 03F20323 		addw	r3, r3, #515
 21996 04ce 0122     		movs	r2, #1
 21997 04d0 1A70     		strb	r2, [r3]
3056:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][2] = 0;   // Magnetometers
 21998              		.loc 1 3056 0 discriminator 3
 21999 04d2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22000 04d4 4C49     		ldr	r1, .L853
 22001 04d6 1346     		mov	r3, r2
 22002 04d8 9B00     		lsls	r3, r3, #2
 22003 04da 1344     		add	r3, r3, r2
 22004 04dc 0B44     		add	r3, r3, r1
 22005 04de 03F50173 		add	r3, r3, #516
 22006 04e2 0022     		movs	r2, #0
 22007 04e4 1A70     		strb	r2, [r3]
3057:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][3] = 0;   // Quaternions
 22008              		.loc 1 3057 0 discriminator 3
 22009 04e6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22010 04e8 4749     		ldr	r1, .L853
 22011 04ea 1346     		mov	r3, r2
 22012 04ec 9B00     		lsls	r3, r3, #2
 22013 04ee 1344     		add	r3, r3, r2
 22014 04f0 0B44     		add	r3, r3, r1
 22015 04f2 03F20523 		addw	r3, r3, #517
 22016 04f6 0022     		movs	r2, #0
 22017 04f8 1A70     		strb	r2, [r3]
3058:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][4] = 0;   // Temperatures
 22018              		.loc 1 3058 0 discriminator 3
 22019 04fa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22020 04fc 4249     		ldr	r1, .L853
 22021 04fe 1346     		mov	r3, r2
 22022 0500 9B00     		lsls	r3, r3, #2
 22023 0502 1344     		add	r3, r3, r2
 22024 0504 0B44     		add	r3, r3, r1
 22025 0506 03F20623 		addw	r3, r3, #518
 22026 050a 0022     		movs	r2, #0
 22027 050c 1A70     		strb	r2, [r3]
3053:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 483


 22028              		.loc 1 3053 0 discriminator 3
 22029 050e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22030 0510 0133     		adds	r3, r3, #1
 22031 0512 FB71     		strb	r3, [r7, #7]
 22032              	.L843:
3053:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 22033              		.loc 1 3053 0 is_stmt 0 discriminator 1
 22034 0514 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22035 0516 042B     		cmp	r3, #4
 22036 0518 C7D9     		bls	.L844
3059:..\src/command_processing.c ****     }
3060:..\src/command_processing.c ****      
3061:..\src/command_processing.c ****     // EXP STRUCT
3062:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 22037              		.loc 1 3062 0 is_stmt 1
 22038 051a 3B4B     		ldr	r3, .L853
 22039 051c 0022     		movs	r2, #0
 22040 051e 83F82622 		strb	r2, [r3, #550]
3063:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "GEN001");
 22041              		.loc 1 3063 0
 22042 0522 394B     		ldr	r3, .L853
 22043 0524 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 22044 0528 1233     		adds	r3, r3, #18
 22045 052a 5B01     		lsls	r3, r3, #5
 22046 052c 364A     		ldr	r2, .L853
 22047 052e 1344     		add	r3, r3, r2
 22048 0530 364A     		ldr	r2, .L853+4
 22049 0532 1068     		ldr	r0, [r2]	@ unaligned
 22050 0534 1860     		str	r0, [r3]	@ unaligned
 22051 0536 9188     		ldrh	r1, [r2, #4]	@ unaligned
 22052 0538 9279     		ldrb	r2, [r2, #6]
 22053 053a 9980     		strh	r1, [r3, #4]	@ unaligned
 22054 053c 9A71     		strb	r2, [r3, #6]
3064:..\src/command_processing.c ****     if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 22055              		.loc 1 3064 0
 22056 053e 324B     		ldr	r3, .L853
 22057 0540 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 22058 0544 012B     		cmp	r3, #1
 22059 0546 13D1     		bne	.L845
3065:..\src/command_processing.c ****         // Set date of maintenance from RTC
3066:..\src/command_processing.c ****         store_RTC_current_time();
 22060              		.loc 1 3066 0
 22061 0548 FFF7FEFF 		bl	store_RTC_current_time
3067:..\src/command_processing.c ****         
3068:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[0] = g_mem.exp.curr_time[0];
 22062              		.loc 1 3068 0
 22063 054c 2E4B     		ldr	r3, .L853
 22064 054e 93F82022 		ldrb	r2, [r3, #544]	@ zero_extendqisi2
 22065 0552 2D4B     		ldr	r3, .L853
 22066 0554 83F8A420 		strb	r2, [r3, #164]
3069:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[1] = g_mem.exp.curr_time[1];
 22067              		.loc 1 3069 0
 22068 0558 2B4B     		ldr	r3, .L853
 22069 055a 93F82122 		ldrb	r2, [r3, #545]	@ zero_extendqisi2
 22070 055e 2A4B     		ldr	r3, .L853
 22071 0560 83F8A520 		strb	r2, [r3, #165]
3070:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[2] = g_mem.exp.curr_time[2];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 484


 22072              		.loc 1 3070 0
 22073 0564 284B     		ldr	r3, .L853
 22074 0566 93F82222 		ldrb	r2, [r3, #546]	@ zero_extendqisi2
 22075 056a 274B     		ldr	r3, .L853
 22076 056c 83F8A620 		strb	r2, [r3, #166]
 22077              	.L845:
3071:..\src/command_processing.c ****     }
3072:..\src/command_processing.c ****     g_mem.exp.read_ADC_sensors_port_flag = FALSE;
 22078              		.loc 1 3072 0
 22079 0570 254B     		ldr	r3, .L853
 22080 0572 0022     		movs	r2, #0
 22081 0574 83F82722 		strb	r2, [r3, #551]
3073:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 22082              		.loc 1 3073 0
 22083 0578 0023     		movs	r3, #0
 22084 057a FB71     		strb	r3, [r7, #7]
 22085 057c 08E0     		b	.L846
 22086              	.L847:
3074:..\src/command_processing.c ****         g_mem.exp.ADC_conf[i] = 0;
 22087              		.loc 1 3074 0 discriminator 3
 22088 057e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22089 0580 214A     		ldr	r2, .L853
 22090 0582 1344     		add	r3, r3, r2
 22091 0584 0022     		movs	r2, #0
 22092 0586 83F82822 		strb	r2, [r3, #552]
3073:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 22093              		.loc 1 3073 0 discriminator 3
 22094 058a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22095 058c 0133     		adds	r3, r3, #1
 22096 058e FB71     		strb	r3, [r7, #7]
 22097              	.L846:
3073:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 22098              		.loc 1 3073 0 is_stmt 0 discriminator 1
 22099 0590 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22100 0592 0B2B     		cmp	r3, #11
 22101 0594 F3D9     		bls	.L847
3075:..\src/command_processing.c ****     }
3076:..\src/command_processing.c ****     //Activate only the two EMG channels by default for every firmware configuration
3077:..\src/command_processing.c ****     g_mem.exp.ADC_conf[2] = 1;
 22102              		.loc 1 3077 0 is_stmt 1
 22103 0596 1C4B     		ldr	r3, .L853
 22104 0598 0122     		movs	r2, #1
 22105 059a 83F82A22 		strb	r2, [r3, #554]
3078:..\src/command_processing.c ****     g_mem.exp.ADC_conf[3] = 1;
 22106              		.loc 1 3078 0
 22107 059e 1A4B     		ldr	r3, .L853
 22108 05a0 0122     		movs	r2, #1
 22109 05a2 83F82B22 		strb	r2, [r3, #555]
3079:..\src/command_processing.c **** 
3080:..\src/command_processing.c **** #ifdef SOFTHAND_FW
3081:..\src/command_processing.c ****     // Override memory values with specific ones for SoftHand Pro device
3082:..\src/command_processing.c ****     memInit_SoftHandPro();
3083:..\src/command_processing.c **** #endif 
3084:..\src/command_processing.c **** 
3085:..\src/command_processing.c **** #ifdef MASTER_FW
3086:..\src/command_processing.c ****     // Override memory values with specific ones for Master device
3087:..\src/command_processing.c ****     memInit_Master();
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 485


 22110              		.loc 1 3087 0
 22111 05a6 FFF7FEFF 		bl	memInit_Master
3088:..\src/command_processing.c **** #endif 
3089:..\src/command_processing.c **** 
3090:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
3091:..\src/command_processing.c ****     // Override memory values with specific ones for Air Chambers device
3092:..\src/command_processing.c ****     memInit_AirChambersFb();
3093:..\src/command_processing.c **** #endif 
3094:..\src/command_processing.c **** 
3095:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
3096:..\src/command_processing.c ****     // Override memory values with specific ones for Ottobock Wrist device
3097:..\src/command_processing.c ****     memInit_OtbkActWristMs();
 22112              		.loc 1 3097 0
 22113 05aa FFF7FEFF 		bl	memInit_OtbkActWristMs
3098:..\src/command_processing.c **** #endif
3099:..\src/command_processing.c **** 
3100:..\src/command_processing.c ****     // JOYSTICK STRUCT
3101:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_closure_speed = 150;
 22114              		.loc 1 3101 0
 22115 05ae 164B     		ldr	r3, .L853
 22116 05b0 9622     		movs	r2, #150
 22117 05b2 A3F8B022 		strh	r2, [r3, #688]	@ movhi
3102:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_threshold = 100;
 22118              		.loc 1 3102 0
 22119 05b6 144B     		ldr	r3, .L853
 22120 05b8 6422     		movs	r2, #100
 22121 05ba A3F8B222 		strh	r2, [r3, #690]	@ movhi
3103:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_gains[0] = 1024;
 22122              		.loc 1 3103 0
 22123 05be 124B     		ldr	r3, .L853
 22124 05c0 4FF48062 		mov	r2, #1024
 22125 05c4 A3F8B422 		strh	r2, [r3, #692]	@ movhi
3104:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_gains[1] = 1024;
 22126              		.loc 1 3104 0
 22127 05c8 0F4B     		ldr	r3, .L853
 22128 05ca 4FF48062 		mov	r2, #1024
 22129 05ce A3F8B622 		strh	r2, [r3, #694]	@ movhi
3105:..\src/command_processing.c **** 
3106:..\src/command_processing.c ****     // Default generic user_id
3107:..\src/command_processing.c ****     g_mem.dev.user_id = GENERIC_USER;    
 22130              		.loc 1 3107 0
 22131 05d2 0D4B     		ldr	r3, .L853
 22132 05d4 0022     		movs	r2, #0
 22133 05d6 83F8AB20 		strb	r2, [r3, #171]
3108:..\src/command_processing.c **** 
3109:..\src/command_processing.c ****     // set the initialized flag to show EEPROM has been populated
3110:..\src/command_processing.c ****     g_mem.flag = TRUE;
 22134              		.loc 1 3110 0
 22135 05da 0B4B     		ldr	r3, .L853
 22136 05dc 0122     		movs	r2, #1
 22137 05de 1A70     		strb	r2, [r3]
3111:..\src/command_processing.c ****     
3112:..\src/command_processing.c ****     //write that configuration to EEPROM
3113:..\src/command_processing.c ****     return ( memStore(0) && memStore(DEFAULT_EEPROM_DISPLACEMENT) );
 22138              		.loc 1 3113 0
 22139 05e0 0020     		movs	r0, #0
 22140 05e2 FFF7FEFF 		bl	memStore
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 486


 22141 05e6 0346     		mov	r3, r0
 22142 05e8 002B     		cmp	r3, #0
 22143 05ea 07D0     		beq	.L848
 22144              		.loc 1 3113 0 is_stmt 0 discriminator 1
 22145 05ec 3220     		movs	r0, #50
 22146 05ee FFF7FEFF 		bl	memStore
 22147 05f2 0346     		mov	r3, r0
 22148 05f4 002B     		cmp	r3, #0
 22149 05f6 01D0     		beq	.L848
 22150              		.loc 1 3113 0 discriminator 3
 22151 05f8 0123     		movs	r3, #1
 22152 05fa 00E0     		b	.L849
 22153              	.L848:
 22154              		.loc 1 3113 0 discriminator 4
 22155 05fc 0023     		movs	r3, #0
 22156              	.L849:
 22157              		.loc 1 3113 0 discriminator 6
 22158 05fe DBB2     		uxtb	r3, r3
3114:..\src/command_processing.c **** }
 22159              		.loc 1 3114 0 is_stmt 1 discriminator 6
 22160 0600 1846     		mov	r0, r3
 22161 0602 0837     		adds	r7, r7, #8
 22162              		.cfi_def_cfa_offset 8
 22163 0604 BD46     		mov	sp, r7
 22164              		.cfi_def_cfa_register 13
 22165              		@ sp needed
 22166 0606 80BD     		pop	{r7, pc}
 22167              	.L854:
 22168              		.align	2
 22169              	.L853:
 22170 0608 00000000 		.word	g_mem
 22171 060c 7C1D0000 		.word	.LC282
 22172              		.cfi_endproc
 22173              	.LFE86:
 22174              		.size	memInit, .-memInit
 22175              		.section	.rodata
 22176 1d83 00       		.align	2
 22177              	.LC283:
 22178 1d84 55535230 		.ascii	"USR001\000"
 22178      303100
 22179              		.section	.text.memInit_SoftHandPro,"ax",%progbits
 22180              		.align	2
 22181              		.global	memInit_SoftHandPro
 22182              		.thumb
 22183              		.thumb_func
 22184              		.type	memInit_SoftHandPro, %function
 22185              	memInit_SoftHandPro:
 22186              	.LFB87:
3115:..\src/command_processing.c **** 
3116:..\src/command_processing.c **** //==============================================================================
3117:..\src/command_processing.c **** //                                                          MEMORY INIT SOFTHAND
3118:..\src/command_processing.c **** //==============================================================================
3119:..\src/command_processing.c **** void memInit_SoftHandPro(void)
3120:..\src/command_processing.c **** {
 22187              		.loc 1 3120 0
 22188              		.cfi_startproc
 22189              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 487


 22190              		@ frame_needed = 1, uses_anonymous_args = 0
 22191              		@ link register save eliminated.
 22192 0000 80B4     		push	{r7}
 22193              		.cfi_def_cfa_offset 4
 22194              		.cfi_offset 7, -4
 22195 0002 83B0     		sub	sp, sp, #12
 22196              		.cfi_def_cfa_offset 16
 22197 0004 00AF     		add	r7, sp, #0
 22198              		.cfi_def_cfa_register 7
3121:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 22199              		.loc 1 3121 0
 22200 0006 0023     		movs	r3, #0
 22201 0008 FB70     		strb	r3, [r7, #3]
3122:..\src/command_processing.c ****     
3123:..\src/command_processing.c ****     //initialize memory settings ( Specific for SoftHand Pro device )    
3124:..\src/command_processing.c ****     g_mem.dev.right_left = LEFT_HAND;
 22202              		.loc 1 3124 0
 22203 000a 894B     		ldr	r3, .L858
 22204 000c 0122     		movs	r2, #1
 22205 000e 83F8A720 		strb	r2, [r3, #167]
3125:..\src/command_processing.c ****     g_mem.dev.dev_type = SOFTHAND_PRO;
 22206              		.loc 1 3125 0
 22207 0012 874B     		ldr	r3, .L858
 22208 0014 0022     		movs	r2, #0
 22209 0016 83F8AC20 		strb	r2, [r3, #172]
3126:..\src/command_processing.c ****     
3127:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].activ         = 1;
 22210              		.loc 1 3127 0
 22211 001a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 22212 001c 8449     		ldr	r1, .L858
 22213 001e 1346     		mov	r3, r2
 22214 0020 DB00     		lsls	r3, r3, #3
 22215 0022 9B1A     		subs	r3, r3, r2
 22216 0024 1B01     		lsls	r3, r3, #4
 22217 0026 0B44     		add	r3, r3, r1
 22218 0028 E033     		adds	r3, r3, #224
 22219 002a 0122     		movs	r2, #1
 22220 002c 1A70     		strb	r2, [r3]
3128:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].input_mode    = INPUT_MODE_EXTERNAL;
 22221              		.loc 1 3128 0
 22222 002e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 22223 0030 7F49     		ldr	r1, .L858
 22224 0032 1346     		mov	r3, r2
 22225 0034 DB00     		lsls	r3, r3, #3
 22226 0036 9B1A     		subs	r3, r3, r2
 22227 0038 1B01     		lsls	r3, r3, #4
 22228 003a 0B44     		add	r3, r3, r1
 22229 003c 03F58773 		add	r3, r3, #270
 22230 0040 0022     		movs	r2, #0
 22231 0042 1A70     		strb	r2, [r3]
3129:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].control_mode  = CONTROL_ANGLE;
 22232              		.loc 1 3129 0
 22233 0044 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 22234 0046 7A49     		ldr	r1, .L858
 22235 0048 1346     		mov	r3, r2
 22236 004a DB00     		lsls	r3, r3, #3
 22237 004c 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 488


 22238 004e 1B01     		lsls	r3, r3, #4
 22239 0050 0B44     		add	r3, r3, r1
 22240 0052 03F20F13 		addw	r3, r3, #271
 22241 0056 0022     		movs	r2, #0
 22242 0058 1A70     		strb	r2, [r3]
3130:..\src/command_processing.c ****     
3131:..\src/command_processing.c ****     // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
3132:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 22243              		.loc 1 3132 0
 22244 005a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 22245 005c 744B     		ldr	r3, .L858
 22246 005e 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 22247 0062 7349     		ldr	r1, .L858
 22248 0064 1346     		mov	r3, r2
 22249 0066 DB00     		lsls	r3, r3, #3
 22250 0068 9B1A     		subs	r3, r3, r2
 22251 006a 1B01     		lsls	r3, r3, #4
 22252 006c 0B44     		add	r3, r3, r1
 22253 006e 03F58873 		add	r3, r3, #272
 22254 0072 0246     		mov	r2, r0
 22255 0074 1A70     		strb	r2, [r3]
3133:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 22256              		.loc 1 3133 0
 22257 0076 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 22258 0078 6D49     		ldr	r1, .L858
 22259 007a 1346     		mov	r3, r2
 22260 007c DB00     		lsls	r3, r3, #3
 22261 007e 9B1A     		subs	r3, r3, r2
 22262 0080 1B01     		lsls	r3, r3, #4
 22263 0082 0B44     		add	r3, r3, r1
 22264 0084 03F21113 		addw	r3, r3, #273
 22265 0088 0122     		movs	r2, #1
 22266 008a 1A70     		strb	r2, [r3]
3134:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversible motor
 22267              		.loc 1 3134 0
 22268 008c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 22269 008e 6849     		ldr	r1, .L858
 22270 0090 1346     		mov	r3, r2
 22271 0092 DB00     		lsls	r3, r3, #3
 22272 0094 9B1A     		subs	r3, r3, r2
 22273 0096 1B01     		lsls	r3, r3, #4
 22274 0098 0B44     		add	r3, r3, r1
 22275 009a 03F58973 		add	r3, r3, #274
 22276 009e 0122     		movs	r2, #1
 22277 00a0 1A70     		strb	r2, [r3]
3135:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 22278              		.loc 1 3135 0
 22279 00a2 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 22280 00a4 6249     		ldr	r1, .L858
 22281 00a6 1346     		mov	r3, r2
 22282 00a8 DB00     		lsls	r3, r3, #3
 22283 00aa 9B1A     		subs	r3, r3, r2
 22284 00ac 1B01     		lsls	r3, r3, #4
 22285 00ae 0B44     		add	r3, r3, r1
 22286 00b0 E433     		adds	r3, r3, #228
 22287 00b2 0022     		movs	r2, #0
 22288 00b4 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 489


3136:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_l
 22289              		.loc 1 3136 0
 22290 00b6 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 22291 00b8 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 22292 00ba 5D48     		ldr	r0, .L858
 22293 00bc 0B46     		mov	r3, r1
 22294 00be DB00     		lsls	r3, r3, #3
 22295 00c0 5B1A     		subs	r3, r3, r1
 22296 00c2 1B01     		lsls	r3, r3, #4
 22297 00c4 0344     		add	r3, r3, r0
 22298 00c6 03F58873 		add	r3, r3, #272
 22299 00ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22300 00cc 1846     		mov	r0, r3
 22301 00ce 5849     		ldr	r1, .L858
 22302 00d0 0346     		mov	r3, r0
 22303 00d2 5B00     		lsls	r3, r3, #1
 22304 00d4 0344     		add	r3, r3, r0
 22305 00d6 1B01     		lsls	r3, r3, #4
 22306 00d8 0B44     		add	r3, r3, r1
 22307 00da 03F29513 		addw	r3, r3, #405
 22308 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22309 00e0 1946     		mov	r1, r3
 22310 00e2 4FF47A53 		mov	r3, #16000
 22311 00e6 03FA01F1 		lsl	r1, r3, r1
 22312 00ea 5148     		ldr	r0, .L858
 22313 00ec 1346     		mov	r3, r2
 22314 00ee DB00     		lsls	r3, r3, #3
 22315 00f0 9B1A     		subs	r3, r3, r2
 22316 00f2 1B01     		lsls	r3, r3, #4
 22317 00f4 0344     		add	r3, r3, r0
 22318 00f6 E833     		adds	r3, r3, #232
 22319 00f8 1960     		str	r1, [r3]
 22320              	.LBB21:
3137:..\src/command_processing.c ****     
3138:..\src/command_processing.c ****     for (int i=0; i < N_ENCODER_LINE_MAX; i++) {
 22321              		.loc 1 3138 0
 22322 00fa 0023     		movs	r3, #0
 22323 00fc 7B60     		str	r3, [r7, #4]
 22324 00fe 2EE0     		b	.L856
 22325              	.L857:
3139:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
3140:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = TRUE;
 22326              		.loc 1 3140 0 discriminator 3
 22327 0100 4B49     		ldr	r1, .L858
 22328 0102 7A68     		ldr	r2, [r7, #4]
 22329 0104 1346     		mov	r3, r2
 22330 0106 5B00     		lsls	r3, r3, #1
 22331 0108 1344     		add	r3, r3, r2
 22332 010a 1B01     		lsls	r3, r3, #4
 22333 010c 0B44     		add	r3, r3, r1
 22334 010e 03F5D873 		add	r3, r3, #432
 22335 0112 0122     		movs	r2, #1
 22336 0114 1A70     		strb	r2, [r3]
3141:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = SH_N1;     
 22337              		.loc 1 3141 0 discriminator 3
 22338 0116 4649     		ldr	r1, .L858
 22339 0118 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 490


 22340 011a 1346     		mov	r3, r2
 22341 011c 5B00     		lsls	r3, r3, #1
 22342 011e 1344     		add	r3, r3, r2
 22343 0120 1B01     		lsls	r3, r3, #4
 22344 0122 0B44     		add	r3, r3, r1
 22345 0124 03F2B513 		addw	r3, r3, #437
 22346 0128 2322     		movs	r2, #35
 22347 012a 1A70     		strb	r2, [r3]
3142:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = SH_N2;     
 22348              		.loc 1 3142 0 discriminator 3
 22349 012c 4049     		ldr	r1, .L858
 22350 012e 7A68     		ldr	r2, [r7, #4]
 22351 0130 1346     		mov	r3, r2
 22352 0132 5B00     		lsls	r3, r3, #1
 22353 0134 1344     		add	r3, r3, r2
 22354 0136 1B01     		lsls	r3, r3, #4
 22355 0138 0B44     		add	r3, r3, r1
 22356 013a 03F5DB73 		add	r3, r3, #438
 22357 013e 0322     		movs	r2, #3
 22358 0140 1A70     		strb	r2, [r3]
3143:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = SH_I1;  
 22359              		.loc 1 3143 0 discriminator 3
 22360 0142 3B49     		ldr	r1, .L858
 22361 0144 7A68     		ldr	r2, [r7, #4]
 22362 0146 1346     		mov	r3, r2
 22363 0148 5B00     		lsls	r3, r3, #1
 22364 014a 1344     		add	r3, r3, r2
 22365 014c 1B01     		lsls	r3, r3, #4
 22366 014e 0B44     		add	r3, r3, r1
 22367 0150 03F2B713 		addw	r3, r3, #439
 22368 0154 FF22     		movs	r2, #255
 22369 0156 1A70     		strb	r2, [r3]
3138:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 22370              		.loc 1 3138 0 discriminator 3
 22371 0158 7B68     		ldr	r3, [r7, #4]
 22372 015a 0133     		adds	r3, r3, #1
 22373 015c 7B60     		str	r3, [r7, #4]
 22374              	.L856:
3138:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 22375              		.loc 1 3138 0 is_stmt 0 discriminator 1
 22376 015e 7B68     		ldr	r3, [r7, #4]
 22377 0160 012B     		cmp	r3, #1
 22378 0162 CDDD     		ble	.L857
 22379              	.LBE21:
3144:..\src/command_processing.c ****     }
3145:..\src/command_processing.c ****     
3146:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 22380              		.loc 1 3146 0 is_stmt 1
 22381 0164 324B     		ldr	r3, .L858
 22382 0166 4FF48062 		mov	r2, #1024
 22383 016a C3F8F421 		str	r2, [r3, #500]
3147:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;
 22384              		.loc 1 3147 0
 22385 016e 304B     		ldr	r3, .L858
 22386 0170 4FF48062 		mov	r2, #1024
 22387 0174 C3F8F821 		str	r2, [r3, #504]
3148:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 491


 22388              		.loc 1 3148 0
 22389 0178 2D4B     		ldr	r3, .L858
 22390 017a C822     		movs	r2, #200
 22391 017c A3F8F021 		strh	r2, [r3, #496]	@ movhi
3149:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 22392              		.loc 1 3149 0
 22393 0180 2B4B     		ldr	r3, .L858
 22394 0182 C822     		movs	r2, #200
 22395 0184 A3F8F221 		strh	r2, [r3, #498]	@ movhi
3150:..\src/command_processing.c ****     g_mem.emg.emg_speed[0] = 100;
 22396              		.loc 1 3150 0
 22397 0188 294B     		ldr	r3, .L858
 22398 018a 6422     		movs	r2, #100
 22399 018c 83F8FC21 		strb	r2, [r3, #508]
3151:..\src/command_processing.c ****     g_mem.emg.emg_speed[1] = 100;
 22400              		.loc 1 3151 0
 22401 0190 274B     		ldr	r3, .L858
 22402 0192 6422     		movs	r2, #100
 22403 0194 83F8FD21 		strb	r2, [r3, #509]
3152:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;      // EMG calibration disabled by default
 22404              		.loc 1 3152 0
 22405 0198 254B     		ldr	r3, .L858
 22406 019a 0022     		movs	r2, #0
 22407 019c 83F8FE21 		strb	r2, [r3, #510]
3153:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;
 22408              		.loc 1 3153 0
 22409 01a0 234B     		ldr	r3, .L858
 22410 01a2 0022     		movs	r2, #0
 22411 01a4 83F8FF21 		strb	r2, [r3, #511]
3154:..\src/command_processing.c ****     
3155:..\src/command_processing.c ****     //Initialize rest position parameters  
3156:..\src/command_processing.c ****     g_mem.SH.rest_position_flag = FALSE;
 22412              		.loc 1 3156 0
 22413 01a8 214B     		ldr	r3, .L858
 22414 01aa 0022     		movs	r2, #0
 22415 01ac 83F8AC22 		strb	r2, [r3, #684]
3157:..\src/command_processing.c ****     g_mem.SH.rest_pos = (int32)7000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].res[0]; // 56
 22416              		.loc 1 3157 0
 22417 01b0 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 22418 01b2 1F49     		ldr	r1, .L858
 22419 01b4 1346     		mov	r3, r2
 22420 01b6 DB00     		lsls	r3, r3, #3
 22421 01b8 9B1A     		subs	r3, r3, r2
 22422 01ba 1B01     		lsls	r3, r3, #4
 22423 01bc 0B44     		add	r3, r3, r1
 22424 01be 03F58873 		add	r3, r3, #272
 22425 01c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22426 01c4 1946     		mov	r1, r3
 22427 01c6 1A4A     		ldr	r2, .L858
 22428 01c8 0B46     		mov	r3, r1
 22429 01ca 5B00     		lsls	r3, r3, #1
 22430 01cc 0B44     		add	r3, r3, r1
 22431 01ce 1B01     		lsls	r3, r3, #4
 22432 01d0 1344     		add	r3, r3, r2
 22433 01d2 03F29513 		addw	r3, r3, #405
 22434 01d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22435 01d8 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 492


 22436 01da 41F65833 		movw	r3, #7000
 22437 01de 9340     		lsls	r3, r3, r2
 22438 01e0 134A     		ldr	r2, .L858
 22439 01e2 C2F8A032 		str	r3, [r2, #672]
3158:..\src/command_processing.c **** 	g_mem.SH.rest_delay = 10;
 22440              		.loc 1 3158 0
 22441 01e6 124B     		ldr	r3, .L858
 22442 01e8 0A22     		movs	r2, #10
 22443 01ea C3F8A422 		str	r2, [r3, #676]
3159:..\src/command_processing.c ****     g_mem.SH.rest_vel = 10000;
 22444              		.loc 1 3159 0
 22445 01ee 104B     		ldr	r3, .L858
 22446 01f0 42F21072 		movw	r2, #10000
 22447 01f4 C3F8A822 		str	r2, [r3, #680]
3160:..\src/command_processing.c **** 	
3161:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 22448              		.loc 1 3161 0
 22449 01f8 0D4B     		ldr	r3, .L858
 22450 01fa 0022     		movs	r2, #0
 22451 01fc 83F80022 		strb	r2, [r3, #512]
3162:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 22452              		.loc 1 3162 0
 22453 0200 0B4B     		ldr	r3, .L858
 22454 0202 0022     		movs	r2, #0
 22455 0204 83F82622 		strb	r2, [r3, #550]
3163:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "USR001");
 22456              		.loc 1 3163 0
 22457 0208 094B     		ldr	r3, .L858
 22458 020a 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 22459 020e 1233     		adds	r3, r3, #18
 22460 0210 5B01     		lsls	r3, r3, #5
 22461 0212 074A     		ldr	r2, .L858
 22462 0214 1344     		add	r3, r3, r2
 22463 0216 074A     		ldr	r2, .L858+4
 22464 0218 1068     		ldr	r0, [r2]	@ unaligned
 22465 021a 1860     		str	r0, [r3]	@ unaligned
 22466 021c 9188     		ldrh	r1, [r2, #4]	@ unaligned
 22467 021e 9279     		ldrb	r2, [r2, #6]
 22468 0220 9980     		strh	r1, [r3, #4]	@ unaligned
 22469 0222 9A71     		strb	r2, [r3, #6]
3164:..\src/command_processing.c **** }
 22470              		.loc 1 3164 0
 22471 0224 00BF     		nop
 22472 0226 0C37     		adds	r7, r7, #12
 22473              		.cfi_def_cfa_offset 4
 22474 0228 BD46     		mov	sp, r7
 22475              		.cfi_def_cfa_register 13
 22476              		@ sp needed
 22477 022a 80BC     		pop	{r7}
 22478              		.cfi_restore 7
 22479              		.cfi_def_cfa_offset 0
 22480 022c 7047     		bx	lr
 22481              	.L859:
 22482 022e 00BF     		.align	2
 22483              	.L858:
 22484 0230 00000000 		.word	g_mem
 22485 0234 841D0000 		.word	.LC283
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 493


 22486              		.cfi_endproc
 22487              	.LFE87:
 22488              		.size	memInit_SoftHandPro, .-memInit_SoftHandPro
 22489              		.section	.text.memInit_Master,"ax",%progbits
 22490              		.align	2
 22491              		.global	memInit_Master
 22492              		.thumb
 22493              		.thumb_func
 22494              		.type	memInit_Master, %function
 22495              	memInit_Master:
 22496              	.LFB88:
3165:..\src/command_processing.c **** 
3166:..\src/command_processing.c **** //==============================================================================
3167:..\src/command_processing.c **** //                                                            MEMORY INIT MASTER
3168:..\src/command_processing.c **** //==============================================================================
3169:..\src/command_processing.c **** void memInit_Master(void)
3170:..\src/command_processing.c **** {
 22497              		.loc 1 3170 0
 22498              		.cfi_startproc
 22499              		@ args = 0, pretend = 0, frame = 0
 22500              		@ frame_needed = 1, uses_anonymous_args = 0
 22501              		@ link register save eliminated.
 22502 0000 80B4     		push	{r7}
 22503              		.cfi_def_cfa_offset 4
 22504              		.cfi_offset 7, -4
 22505 0002 00AF     		add	r7, sp, #0
 22506              		.cfi_def_cfa_register 7
3171:..\src/command_processing.c ****     g_mem.dev.id                = 2;
 22507              		.loc 1 3171 0
 22508 0004 074B     		ldr	r3, .L861
 22509 0006 0222     		movs	r2, #2
 22510 0008 83F8A020 		strb	r2, [r3, #160]
3172:..\src/command_processing.c ****     
3173:..\src/command_processing.c ****     // MS STRUCT
3174:..\src/command_processing.c ****     g_mem.MS.slave_ID = 1;
 22511              		.loc 1 3174 0
 22512 000c 054B     		ldr	r3, .L861
 22513 000e 0122     		movs	r2, #1
 22514 0010 83F8C122 		strb	r2, [r3, #705]
3175:..\src/command_processing.c ****     g_mem.MS.slave_comm_active = FALSE;
 22515              		.loc 1 3175 0
 22516 0014 034B     		ldr	r3, .L861
 22517 0016 0022     		movs	r2, #0
 22518 0018 83F8C022 		strb	r2, [r3, #704]
3176:..\src/command_processing.c **** }
 22519              		.loc 1 3176 0
 22520 001c 00BF     		nop
 22521 001e BD46     		mov	sp, r7
 22522              		.cfi_def_cfa_register 13
 22523              		@ sp needed
 22524 0020 80BC     		pop	{r7}
 22525              		.cfi_restore 7
 22526              		.cfi_def_cfa_offset 0
 22527 0022 7047     		bx	lr
 22528              	.L862:
 22529              		.align	2
 22530              	.L861:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 494


 22531 0024 00000000 		.word	g_mem
 22532              		.cfi_endproc
 22533              	.LFE88:
 22534              		.size	memInit_Master, .-memInit_Master
 22535              		.section	.text.memInit_AirChambersFb,"ax",%progbits
 22536              		.align	2
 22537              		.global	memInit_AirChambersFb
 22538              		.thumb
 22539              		.thumb_func
 22540              		.type	memInit_AirChambersFb, %function
 22541              	memInit_AirChambersFb:
 22542              	.LFB89:
3177:..\src/command_processing.c **** 
3178:..\src/command_processing.c **** //==============================================================================
3179:..\src/command_processing.c **** //                                                   MEMORY INIT AIR CHAMBERS FB
3180:..\src/command_processing.c **** //==============================================================================
3181:..\src/command_processing.c **** void memInit_AirChambersFb(void)
3182:..\src/command_processing.c **** {
 22543              		.loc 1 3182 0
 22544              		.cfi_startproc
 22545              		@ args = 0, pretend = 0, frame = 0
 22546              		@ frame_needed = 1, uses_anonymous_args = 0
 22547              		@ link register save eliminated.
 22548 0000 80B4     		push	{r7}
 22549              		.cfi_def_cfa_offset 4
 22550              		.cfi_offset 7, -4
 22551 0002 00AF     		add	r7, sp, #0
 22552              		.cfi_def_cfa_register 7
3183:..\src/command_processing.c ****     // Default configuration with Air Chambers Haptic feedback
3184:..\src/command_processing.c ****     g_mem.dev.dev_type          = AIR_CHAMBERS_FB;
 22553              		.loc 1 3184 0
 22554 0004 1A4B     		ldr	r3, .L864
 22555 0006 0222     		movs	r2, #2
 22556 0008 83F8AC20 		strb	r2, [r3, #172]
3185:..\src/command_processing.c ****     
3186:..\src/command_processing.c ****     g_mem.motor[0].control_mode  = CONTROL_PWM;
 22557              		.loc 1 3186 0
 22558 000c 184B     		ldr	r3, .L864
 22559 000e 0122     		movs	r2, #1
 22560 0010 83F80F21 		strb	r2, [r3, #271]
3187:..\src/command_processing.c ****     
3188:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
3189:..\src/command_processing.c ****     // Default slave configuration for haptic feedback with SoftHand 2.0.3            
3190:..\src/command_processing.c ****     g_mem.motor[1].input_mode = INPUT_MODE_EMG_FCFS;
 22561              		.loc 1 3190 0
 22562 0014 164B     		ldr	r3, .L864
 22563 0016 0422     		movs	r2, #4
 22564 0018 83F87E21 		strb	r2, [r3, #382]
3191:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_inf = 0;
 22565              		.loc 1 3191 0
 22566 001c 144B     		ldr	r3, .L864
 22567 001e 0022     		movs	r2, #0
 22568 0020 C3F85421 		str	r2, [r3, #340]
3192:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_sup = (int32)22000 << g_mem.enc[g_mem.motor[1].encoder_line].res[0];
 22569              		.loc 1 3192 0
 22570 0024 124B     		ldr	r3, .L864
 22571 0026 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 495


 22572 002a 1946     		mov	r1, r3
 22573 002c 104A     		ldr	r2, .L864
 22574 002e 0B46     		mov	r3, r1
 22575 0030 5B00     		lsls	r3, r3, #1
 22576 0032 0B44     		add	r3, r3, r1
 22577 0034 1B01     		lsls	r3, r3, #4
 22578 0036 1344     		add	r3, r3, r2
 22579 0038 03F29513 		addw	r3, r3, #405
 22580 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22581 003e 1A46     		mov	r2, r3
 22582 0040 45F2F053 		movw	r3, #22000
 22583 0044 9340     		lsls	r3, r3, r2
 22584 0046 0A4A     		ldr	r2, .L864
 22585 0048 C2F85831 		str	r3, [r2, #344]
3193:..\src/command_processing.c ****     
3194:..\src/command_processing.c ****     // FB STRUCT
3195:..\src/command_processing.c ****     g_mem.FB.max_residual_current = 450;
 22586              		.loc 1 3195 0
 22587 004c 084B     		ldr	r3, .L864
 22588 004e 4FF4E172 		mov	r2, #450
 22589 0052 C3F8D022 		str	r2, [r3, #720]
3196:..\src/command_processing.c ****     g_mem.FB.maximum_pressure_kPa = 25.0;
 22590              		.loc 1 3196 0
 22591 0056 064B     		ldr	r3, .L864
 22592 0058 064A     		ldr	r2, .L864+4
 22593 005a C3F8D422 		str	r2, [r3, #724]	@ float
3197:..\src/command_processing.c ****     g_mem.FB.prop_err_fb_gain = 1.0;
 22594              		.loc 1 3197 0
 22595 005e 044B     		ldr	r3, .L864
 22596 0060 4FF07E52 		mov	r2, #1065353216
 22597 0064 C3F8D822 		str	r2, [r3, #728]	@ float
3198:..\src/command_processing.c **** }
 22598              		.loc 1 3198 0
 22599 0068 00BF     		nop
 22600 006a BD46     		mov	sp, r7
 22601              		.cfi_def_cfa_register 13
 22602              		@ sp needed
 22603 006c 80BC     		pop	{r7}
 22604              		.cfi_restore 7
 22605              		.cfi_def_cfa_offset 0
 22606 006e 7047     		bx	lr
 22607              	.L865:
 22608              		.align	2
 22609              	.L864:
 22610 0070 00000000 		.word	g_mem
 22611 0074 0000C841 		.word	1103626240
 22612              		.cfi_endproc
 22613              	.LFE89:
 22614              		.size	memInit_AirChambersFb, .-memInit_AirChambersFb
 22615              		.section	.text.memInit_OtbkActWristMs,"ax",%progbits
 22616              		.align	2
 22617              		.global	memInit_OtbkActWristMs
 22618              		.thumb
 22619              		.thumb_func
 22620              		.type	memInit_OtbkActWristMs, %function
 22621              	memInit_OtbkActWristMs:
 22622              	.LFB90:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 496


3199:..\src/command_processing.c **** 
3200:..\src/command_processing.c **** //==============================================================================
3201:..\src/command_processing.c **** //                                   MEMORY INIT OTTOBOCK ACTIVE WRIST MASTER FB
3202:..\src/command_processing.c **** //==============================================================================
3203:..\src/command_processing.c **** void memInit_OtbkActWristMs(void)
3204:..\src/command_processing.c **** {
 22623              		.loc 1 3204 0
 22624              		.cfi_startproc
 22625              		@ args = 0, pretend = 0, frame = 0
 22626              		@ frame_needed = 1, uses_anonymous_args = 0
 22627              		@ link register save eliminated.
 22628 0000 80B4     		push	{r7}
 22629              		.cfi_def_cfa_offset 4
 22630              		.cfi_offset 7, -4
 22631 0002 00AF     		add	r7, sp, #0
 22632              		.cfi_def_cfa_register 7
3205:..\src/command_processing.c ****     // Default configuration with Ottobock Active Wrist feedback
3206:..\src/command_processing.c ****     g_mem.dev.dev_type  = OTBK_ACT_WRIST_MS;
 22633              		.loc 1 3206 0
 22634 0004 294B     		ldr	r3, .L867
 22635 0006 0322     		movs	r2, #3
 22636 0008 83F8AC20 		strb	r2, [r3, #172]
3207:..\src/command_processing.c ****     g_mem.dev.right_left = LEFT_HAND;
 22637              		.loc 1 3207 0
 22638 000c 274B     		ldr	r3, .L867
 22639 000e 0122     		movs	r2, #1
 22640 0010 83F8A720 		strb	r2, [r3, #167]
3208:..\src/command_processing.c ****     
3209:..\src/command_processing.c ****     g_mem.motor[0].control_mode = CONTROL_PWM;
 22641              		.loc 1 3209 0
 22642 0014 254B     		ldr	r3, .L867
 22643 0016 0122     		movs	r2, #1
 22644 0018 83F80F21 		strb	r2, [r3, #271]
3210:..\src/command_processing.c ****     g_mem.motor[0].pwm_rate_limiter = 100;
 22645              		.loc 1 3210 0
 22646 001c 234B     		ldr	r3, .L867
 22647 001e 6422     		movs	r2, #100
 22648 0020 83F81121 		strb	r2, [r3, #273]
3211:..\src/command_processing.c ****     g_mem.motor[0].not_revers_motor_flag = FALSE;
 22649              		.loc 1 3211 0
 22650 0024 214B     		ldr	r3, .L867
 22651 0026 0022     		movs	r2, #0
 22652 0028 83F81221 		strb	r2, [r3, #274]
3212:..\src/command_processing.c ****     
3213:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
3214:..\src/command_processing.c ****     // Default slave configuration for SoftHand 3.0            
3215:..\src/command_processing.c ****     g_mem.motor[1].input_mode = INPUT_MODE_EMG_FCFS;
 22653              		.loc 1 3215 0
 22654 002c 1F4B     		ldr	r3, .L867
 22655 002e 0422     		movs	r2, #4
 22656 0030 83F87E21 		strb	r2, [r3, #382]
3216:..\src/command_processing.c ****     g_mem.motor[1].encoder_line  = g_mem.dev.right_left;
 22657              		.loc 1 3216 0
 22658 0034 1D4B     		ldr	r3, .L867
 22659 0036 93F8A720 		ldrb	r2, [r3, #167]	@ zero_extendqisi2
 22660 003a 1C4B     		ldr	r3, .L867
 22661 003c 83F88021 		strb	r2, [r3, #384]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 497


3217:..\src/command_processing.c ****     g_mem.motor[1].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 22662              		.loc 1 3217 0
 22663 0040 1A4B     		ldr	r3, .L867
 22664 0042 0122     		movs	r2, #1
 22665 0044 83F88121 		strb	r2, [r3, #385]
3218:..\src/command_processing.c ****     g_mem.motor[1].not_revers_motor_flag = FALSE;       // False, because it is important only to c
 22666              		.loc 1 3218 0
 22667 0048 184B     		ldr	r3, .L867
 22668 004a 0022     		movs	r2, #0
 22669 004c 83F88221 		strb	r2, [r3, #386]
3219:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_inf = 0;
 22670              		.loc 1 3219 0
 22671 0050 164B     		ldr	r3, .L867
 22672 0052 0022     		movs	r2, #0
 22673 0054 C3F85421 		str	r2, [r3, #340]
3220:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[1].encoder_line].res[0];
 22674              		.loc 1 3220 0
 22675 0058 144B     		ldr	r3, .L867
 22676 005a 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 22677 005e 1946     		mov	r1, r3
 22678 0060 124A     		ldr	r2, .L867
 22679 0062 0B46     		mov	r3, r1
 22680 0064 5B00     		lsls	r3, r3, #1
 22681 0066 0B44     		add	r3, r3, r1
 22682 0068 1B01     		lsls	r3, r3, #4
 22683 006a 1344     		add	r3, r3, r2
 22684 006c 03F29513 		addw	r3, r3, #405
 22685 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22686 0072 1A46     		mov	r2, r3
 22687 0074 4FF47A53 		mov	r3, #16000
 22688 0078 9340     		lsls	r3, r3, r2
 22689 007a 0C4A     		ldr	r2, .L867
 22690 007c C2F85831 		str	r3, [r2, #344]
3221:..\src/command_processing.c ****     
3222:..\src/command_processing.c ****     // WR STRUCT
3223:..\src/command_processing.c ****     g_mem.WR.activation_mode = 0;                // Default Fast:wrist, Slow:hand
 22691              		.loc 1 3223 0
 22692 0080 0A4B     		ldr	r3, .L867
 22693 0082 0022     		movs	r2, #0
 22694 0084 83F8E022 		strb	r2, [r3, #736]
3224:..\src/command_processing.c ****     g_mem.WR.fast_act_threshold[0] = 800;
 22695              		.loc 1 3224 0
 22696 0088 084B     		ldr	r3, .L867
 22697 008a 4FF44872 		mov	r2, #800
 22698 008e A3F8E222 		strh	r2, [r3, #738]	@ movhi
3225:..\src/command_processing.c ****     g_mem.WR.fast_act_threshold[1] = 800;
 22699              		.loc 1 3225 0
 22700 0092 064B     		ldr	r3, .L867
 22701 0094 4FF44872 		mov	r2, #800
 22702 0098 A3F8E422 		strh	r2, [r3, #740]	@ movhi
3226:..\src/command_processing.c ****     g_mem.WR.wrist_direction_association = 0;   // Default Close:CW, Open:CCW
 22703              		.loc 1 3226 0
 22704 009c 034B     		ldr	r3, .L867
 22705 009e 0022     		movs	r2, #0
 22706 00a0 83F8E622 		strb	r2, [r3, #742]
3227:..\src/command_processing.c **** }
 22707              		.loc 1 3227 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 498


 22708 00a4 00BF     		nop
 22709 00a6 BD46     		mov	sp, r7
 22710              		.cfi_def_cfa_register 13
 22711              		@ sp needed
 22712 00a8 80BC     		pop	{r7}
 22713              		.cfi_restore 7
 22714              		.cfi_def_cfa_offset 0
 22715 00aa 7047     		bx	lr
 22716              	.L868:
 22717              		.align	2
 22718              	.L867:
 22719 00ac 00000000 		.word	g_mem
 22720              		.cfi_endproc
 22721              	.LFE90:
 22722              		.size	memInit_OtbkActWristMs, .-memInit_OtbkActWristMs
 22723              		.section	.text.cmd_get_measurements,"ax",%progbits
 22724              		.align	2
 22725              		.global	cmd_get_measurements
 22726              		.thumb
 22727              		.thumb_func
 22728              		.type	cmd_get_measurements, %function
 22729              	cmd_get_measurements:
 22730              	.LFB91:
3228:..\src/command_processing.c **** 
3229:..\src/command_processing.c **** //==============================================================================
3230:..\src/command_processing.c **** //                                                    ROUTINE INTERRUPT FUNCTION
3231:..\src/command_processing.c **** //==============================================================================
3232:..\src/command_processing.c **** /**
3233:..\src/command_processing.c **** * Bunch of functions used on request from UART communication
3234:..\src/command_processing.c **** **/
3235:..\src/command_processing.c **** 
3236:..\src/command_processing.c **** void cmd_get_measurements(){
 22731              		.loc 1 3236 0
 22732              		.cfi_startproc
 22733              		@ args = 0, pretend = 0, frame = 16
 22734              		@ frame_needed = 1, uses_anonymous_args = 0
 22735 0000 90B5     		push	{r4, r7, lr}
 22736              		.cfi_def_cfa_offset 12
 22737              		.cfi_offset 4, -12
 22738              		.cfi_offset 7, -8
 22739              		.cfi_offset 14, -4
 22740 0002 85B0     		sub	sp, sp, #20
 22741              		.cfi_def_cfa_offset 32
 22742 0004 00AF     		add	r7, sp, #0
 22743              		.cfi_def_cfa_register 7
3237:..\src/command_processing.c ****  
3238:..\src/command_processing.c ****     uint8 CYDATA index;
3239:..\src/command_processing.c ****     int16 aux_int16;
3240:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3241:..\src/command_processing.c ****     
3242:..\src/command_processing.c ****     uint8 packet_data[8]; 
3243:..\src/command_processing.c ****     
3244:..\src/command_processing.c ****     //Header package
3245:..\src/command_processing.c ****     packet_data[0] = CMD_GET_MEASUREMENTS;   
 22744              		.loc 1 3245 0
 22745 0006 8423     		movs	r3, #132
 22746 0008 3B71     		strb	r3, [r7, #4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 499


3246:..\src/command_processing.c ****     
3247:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 22747              		.loc 1 3247 0
 22748 000a 0323     		movs	r3, #3
 22749 000c FB73     		strb	r3, [r7, #15]
 22750 000e 38E0     		b	.L870
 22751              	.L871:
3248:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 22752              		.loc 1 3248 0
 22753 0010 264B     		ldr	r3, .L872
 22754 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22755 0016 1A46     		mov	r2, r3
 22756 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 22757 001a 2548     		ldr	r0, .L872+4
 22758 001c 1346     		mov	r3, r2
 22759 001e 5B00     		lsls	r3, r3, #1
 22760 0020 1344     		add	r3, r3, r2
 22761 0022 9B00     		lsls	r3, r3, #2
 22762 0024 1344     		add	r3, r3, r2
 22763 0026 0B44     		add	r3, r3, r1
 22764 0028 50F82320 		ldr	r2, [r0, r3, lsl #2]
 22765 002c 1F4B     		ldr	r3, .L872
 22766 002e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22767 0032 1C46     		mov	r4, r3
 22768 0034 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 22769 0036 1D48     		ldr	r0, .L872
 22770 0038 2346     		mov	r3, r4
 22771 003a 5B00     		lsls	r3, r3, #1
 22772 003c 2344     		add	r3, r3, r4
 22773 003e 1B01     		lsls	r3, r3, #4
 22774 0040 0344     		add	r3, r3, r0
 22775 0042 0B44     		add	r3, r3, r1
 22776 0044 03F29513 		addw	r3, r3, #405
 22777 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22778 004a 42FA03F3 		asr	r3, r2, r3
 22779 004e 1BB2     		sxth	r3, r3
 22780 0050 BB81     		strh	r3, [r7, #12]	@ movhi
3249:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 22781              		.loc 1 3249 0
 22782 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22783 0054 5B00     		lsls	r3, r3, #1
 22784 0056 0233     		adds	r3, r3, #2
 22785 0058 07F10C02 		add	r2, r7, #12
 22786 005c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 22787 005e 07F11001 		add	r1, r7, #16
 22788 0062 0B44     		add	r3, r3, r1
 22789 0064 03F80C2C 		strb	r2, [r3, #-12]
3250:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 22790              		.loc 1 3250 0
 22791 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22792 006a 5B00     		lsls	r3, r3, #1
 22793 006c 5A1C     		adds	r2, r3, #1
 22794 006e 07F10C03 		add	r3, r7, #12
 22795 0072 0133     		adds	r3, r3, #1
 22796 0074 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22797 0076 07F11003 		add	r3, r7, #16
 22798 007a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 500


 22799 007c 0A46     		mov	r2, r1
 22800 007e 03F80C2C 		strb	r2, [r3, #-12]
 22801              	.L870:
3247:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 22802              		.loc 1 3247 0 discriminator 1
 22803 0082 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22804 0084 5A1E     		subs	r2, r3, #1
 22805 0086 FA73     		strb	r2, [r7, #15]
 22806 0088 002B     		cmp	r3, #0
 22807 008a C1D1     		bne	.L871
3251:..\src/command_processing.c ****     }
3252:..\src/command_processing.c **** 
3253:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3254:..\src/command_processing.c **** 
3255:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 22808              		.loc 1 3255 0
 22809 008c 3B1D     		adds	r3, r7, #4
 22810 008e 0721     		movs	r1, #7
 22811 0090 1846     		mov	r0, r3
 22812 0092 FFF7FEFF 		bl	LCRChecksum
 22813 0096 0346     		mov	r3, r0
 22814 0098 FB72     		strb	r3, [r7, #11]
3256:..\src/command_processing.c **** 
3257:..\src/command_processing.c ****     commWrite(packet_data, 8);
 22815              		.loc 1 3257 0
 22816 009a 3B1D     		adds	r3, r7, #4
 22817 009c 0821     		movs	r1, #8
 22818 009e 1846     		mov	r0, r3
 22819 00a0 FFF7FEFF 		bl	commWrite
3258:..\src/command_processing.c ****    
3259:..\src/command_processing.c **** }
 22820              		.loc 1 3259 0
 22821 00a4 00BF     		nop
 22822 00a6 1437     		adds	r7, r7, #20
 22823              		.cfi_def_cfa_offset 12
 22824 00a8 BD46     		mov	sp, r7
 22825              		.cfi_def_cfa_register 13
 22826              		@ sp needed
 22827 00aa 90BD     		pop	{r4, r7, pc}
 22828              	.L873:
 22829              		.align	2
 22830              	.L872:
 22831 00ac 00000000 		.word	g_mem
 22832 00b0 00000000 		.word	g_measOld
 22833              		.cfi_endproc
 22834              	.LFE91:
 22835              		.size	cmd_get_measurements, .-cmd_get_measurements
 22836              		.section	.text.cmd_get_velocities,"ax",%progbits
 22837              		.align	2
 22838              		.global	cmd_get_velocities
 22839              		.thumb
 22840              		.thumb_func
 22841              		.type	cmd_get_velocities, %function
 22842              	cmd_get_velocities:
 22843              	.LFB92:
3260:..\src/command_processing.c **** 
3261:..\src/command_processing.c **** void cmd_get_velocities(){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 501


 22844              		.loc 1 3261 0
 22845              		.cfi_startproc
 22846              		@ args = 0, pretend = 0, frame = 16
 22847              		@ frame_needed = 1, uses_anonymous_args = 0
 22848 0000 90B5     		push	{r4, r7, lr}
 22849              		.cfi_def_cfa_offset 12
 22850              		.cfi_offset 4, -12
 22851              		.cfi_offset 7, -8
 22852              		.cfi_offset 14, -4
 22853 0002 85B0     		sub	sp, sp, #20
 22854              		.cfi_def_cfa_offset 32
 22855 0004 00AF     		add	r7, sp, #0
 22856              		.cfi_def_cfa_register 7
3262:..\src/command_processing.c ****  
3263:..\src/command_processing.c ****     uint8 CYDATA index;
3264:..\src/command_processing.c ****     int16 aux_int16;
3265:..\src/command_processing.c ****    
3266:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3267:..\src/command_processing.c ****     
3268:..\src/command_processing.c ****     uint8 packet_data[8]; 
3269:..\src/command_processing.c ****     
3270:..\src/command_processing.c ****     //Header package
3271:..\src/command_processing.c ****     packet_data[0] = CMD_GET_VELOCITIES;
 22857              		.loc 1 3271 0
 22858 0006 8923     		movs	r3, #137
 22859 0008 3B71     		strb	r3, [r7, #4]
3272:..\src/command_processing.c ****     
3273:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 22860              		.loc 1 3273 0
 22861 000a 0323     		movs	r3, #3
 22862 000c FB73     		strb	r3, [r7, #15]
 22863 000e 3AE0     		b	.L875
 22864              	.L876:
3274:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 22865              		.loc 1 3274 0
 22866 0010 274B     		ldr	r3, .L877
 22867 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22868 0016 1A46     		mov	r2, r3
 22869 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 22870 001a 2648     		ldr	r0, .L877+4
 22871 001c 1346     		mov	r3, r2
 22872 001e 5B00     		lsls	r3, r3, #1
 22873 0020 1344     		add	r3, r3, r2
 22874 0022 9B00     		lsls	r3, r3, #2
 22875 0024 1344     		add	r3, r3, r2
 22876 0026 0B44     		add	r3, r3, r1
 22877 0028 0633     		adds	r3, r3, #6
 22878 002a 9B00     		lsls	r3, r3, #2
 22879 002c 0344     		add	r3, r3, r0
 22880 002e 5A68     		ldr	r2, [r3, #4]
 22881 0030 1F4B     		ldr	r3, .L877
 22882 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22883 0036 1C46     		mov	r4, r3
 22884 0038 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 22885 003a 1D48     		ldr	r0, .L877
 22886 003c 2346     		mov	r3, r4
 22887 003e 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 502


 22888 0040 2344     		add	r3, r3, r4
 22889 0042 1B01     		lsls	r3, r3, #4
 22890 0044 0344     		add	r3, r3, r0
 22891 0046 0B44     		add	r3, r3, r1
 22892 0048 03F29513 		addw	r3, r3, #405
 22893 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22894 004e 42FA03F3 		asr	r3, r2, r3
 22895 0052 1BB2     		sxth	r3, r3
 22896 0054 BB81     		strh	r3, [r7, #12]	@ movhi
3275:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 22897              		.loc 1 3275 0
 22898 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22899 0058 5B00     		lsls	r3, r3, #1
 22900 005a 0233     		adds	r3, r3, #2
 22901 005c 07F10C02 		add	r2, r7, #12
 22902 0060 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 22903 0062 07F11001 		add	r1, r7, #16
 22904 0066 0B44     		add	r3, r3, r1
 22905 0068 03F80C2C 		strb	r2, [r3, #-12]
3276:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 22906              		.loc 1 3276 0
 22907 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22908 006e 5B00     		lsls	r3, r3, #1
 22909 0070 5A1C     		adds	r2, r3, #1
 22910 0072 07F10C03 		add	r3, r7, #12
 22911 0076 0133     		adds	r3, r3, #1
 22912 0078 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22913 007a 07F11003 		add	r3, r7, #16
 22914 007e 1344     		add	r3, r3, r2
 22915 0080 0A46     		mov	r2, r1
 22916 0082 03F80C2C 		strb	r2, [r3, #-12]
 22917              	.L875:
3273:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 22918              		.loc 1 3273 0 discriminator 1
 22919 0086 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22920 0088 5A1E     		subs	r2, r3, #1
 22921 008a FA73     		strb	r2, [r7, #15]
 22922 008c 002B     		cmp	r3, #0
 22923 008e BFD1     		bne	.L876
3277:..\src/command_processing.c ****     }
3278:..\src/command_processing.c ****             
3279:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3280:..\src/command_processing.c **** 
3281:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 22924              		.loc 1 3281 0
 22925 0090 3B1D     		adds	r3, r7, #4
 22926 0092 0721     		movs	r1, #7
 22927 0094 1846     		mov	r0, r3
 22928 0096 FFF7FEFF 		bl	LCRChecksum
 22929 009a 0346     		mov	r3, r0
 22930 009c FB72     		strb	r3, [r7, #11]
3282:..\src/command_processing.c **** 
3283:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 22931              		.loc 1 3283 0
 22932 009e 3B1D     		adds	r3, r7, #4
 22933 00a0 0821     		movs	r1, #8
 22934 00a2 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 503


 22935 00a4 FFF7FEFF 		bl	commWrite
3284:..\src/command_processing.c **** }
 22936              		.loc 1 3284 0
 22937 00a8 00BF     		nop
 22938 00aa 1437     		adds	r7, r7, #20
 22939              		.cfi_def_cfa_offset 12
 22940 00ac BD46     		mov	sp, r7
 22941              		.cfi_def_cfa_register 13
 22942              		@ sp needed
 22943 00ae 90BD     		pop	{r4, r7, pc}
 22944              	.L878:
 22945              		.align	2
 22946              	.L877:
 22947 00b0 00000000 		.word	g_mem
 22948 00b4 00000000 		.word	g_measOld
 22949              		.cfi_endproc
 22950              	.LFE92:
 22951              		.size	cmd_get_velocities, .-cmd_get_velocities
 22952              		.section	.text.cmd_get_accelerations,"ax",%progbits
 22953              		.align	2
 22954              		.global	cmd_get_accelerations
 22955              		.thumb
 22956              		.thumb_func
 22957              		.type	cmd_get_accelerations, %function
 22958              	cmd_get_accelerations:
 22959              	.LFB93:
3285:..\src/command_processing.c **** 
3286:..\src/command_processing.c **** void cmd_get_accelerations(){
 22960              		.loc 1 3286 0
 22961              		.cfi_startproc
 22962              		@ args = 0, pretend = 0, frame = 16
 22963              		@ frame_needed = 1, uses_anonymous_args = 0
 22964 0000 90B5     		push	{r4, r7, lr}
 22965              		.cfi_def_cfa_offset 12
 22966              		.cfi_offset 4, -12
 22967              		.cfi_offset 7, -8
 22968              		.cfi_offset 14, -4
 22969 0002 85B0     		sub	sp, sp, #20
 22970              		.cfi_def_cfa_offset 32
 22971 0004 00AF     		add	r7, sp, #0
 22972              		.cfi_def_cfa_register 7
3287:..\src/command_processing.c ****  
3288:..\src/command_processing.c ****     uint8 CYDATA index;
3289:..\src/command_processing.c ****     int16 aux_int16;
3290:..\src/command_processing.c ****     
3291:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3292:..\src/command_processing.c ****     
3293:..\src/command_processing.c ****     uint8 packet_data[8]; 
3294:..\src/command_processing.c ****     
3295:..\src/command_processing.c ****     //Header package
3296:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACCEL;   
 22973              		.loc 1 3296 0
 22974 0006 8B23     		movs	r3, #139
 22975 0008 3B71     		strb	r3, [r7, #4]
3297:..\src/command_processing.c ****     
3298:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 22976              		.loc 1 3298 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 504


 22977 000a 0323     		movs	r3, #3
 22978 000c FB73     		strb	r3, [r7, #15]
 22979 000e 39E0     		b	.L880
 22980              	.L881:
3299:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 22981              		.loc 1 3299 0
 22982 0010 274B     		ldr	r3, .L882
 22983 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22984 0016 1A46     		mov	r2, r3
 22985 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 22986 001a 2648     		ldr	r0, .L882+4
 22987 001c 1346     		mov	r3, r2
 22988 001e 5B00     		lsls	r3, r3, #1
 22989 0020 1344     		add	r3, r3, r2
 22990 0022 9B00     		lsls	r3, r3, #2
 22991 0024 1344     		add	r3, r3, r2
 22992 0026 0B44     		add	r3, r3, r1
 22993 0028 0A33     		adds	r3, r3, #10
 22994 002a 50F82320 		ldr	r2, [r0, r3, lsl #2]
 22995 002e 204B     		ldr	r3, .L882
 22996 0030 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22997 0034 1C46     		mov	r4, r3
 22998 0036 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 22999 0038 1D48     		ldr	r0, .L882
 23000 003a 2346     		mov	r3, r4
 23001 003c 5B00     		lsls	r3, r3, #1
 23002 003e 2344     		add	r3, r3, r4
 23003 0040 1B01     		lsls	r3, r3, #4
 23004 0042 0344     		add	r3, r3, r0
 23005 0044 0B44     		add	r3, r3, r1
 23006 0046 03F29513 		addw	r3, r3, #405
 23007 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23008 004c 42FA03F3 		asr	r3, r2, r3
 23009 0050 1BB2     		sxth	r3, r3
 23010 0052 BB81     		strh	r3, [r7, #12]	@ movhi
3300:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 23011              		.loc 1 3300 0
 23012 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23013 0056 5B00     		lsls	r3, r3, #1
 23014 0058 0233     		adds	r3, r3, #2
 23015 005a 07F10C02 		add	r2, r7, #12
 23016 005e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 23017 0060 07F11001 		add	r1, r7, #16
 23018 0064 0B44     		add	r3, r3, r1
 23019 0066 03F80C2C 		strb	r2, [r3, #-12]
3301:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 23020              		.loc 1 3301 0
 23021 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23022 006c 5B00     		lsls	r3, r3, #1
 23023 006e 5A1C     		adds	r2, r3, #1
 23024 0070 07F10C03 		add	r3, r7, #12
 23025 0074 0133     		adds	r3, r3, #1
 23026 0076 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23027 0078 07F11003 		add	r3, r7, #16
 23028 007c 1344     		add	r3, r3, r2
 23029 007e 0A46     		mov	r2, r1
 23030 0080 03F80C2C 		strb	r2, [r3, #-12]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 505


 23031              	.L880:
3298:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 23032              		.loc 1 3298 0 discriminator 1
 23033 0084 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23034 0086 5A1E     		subs	r2, r3, #1
 23035 0088 FA73     		strb	r2, [r7, #15]
 23036 008a 002B     		cmp	r3, #0
 23037 008c C0D1     		bne	.L881
3302:..\src/command_processing.c ****     }
3303:..\src/command_processing.c ****     
3304:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3305:..\src/command_processing.c **** 
3306:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 23038              		.loc 1 3306 0
 23039 008e 3B1D     		adds	r3, r7, #4
 23040 0090 0721     		movs	r1, #7
 23041 0092 1846     		mov	r0, r3
 23042 0094 FFF7FEFF 		bl	LCRChecksum
 23043 0098 0346     		mov	r3, r0
 23044 009a FB72     		strb	r3, [r7, #11]
3307:..\src/command_processing.c **** 
3308:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 23045              		.loc 1 3308 0
 23046 009c 3B1D     		adds	r3, r7, #4
 23047 009e 0821     		movs	r1, #8
 23048 00a0 1846     		mov	r0, r3
 23049 00a2 FFF7FEFF 		bl	commWrite
3309:..\src/command_processing.c **** }
 23050              		.loc 1 3309 0
 23051 00a6 00BF     		nop
 23052 00a8 1437     		adds	r7, r7, #20
 23053              		.cfi_def_cfa_offset 12
 23054 00aa BD46     		mov	sp, r7
 23055              		.cfi_def_cfa_register 13
 23056              		@ sp needed
 23057 00ac 90BD     		pop	{r4, r7, pc}
 23058              	.L883:
 23059 00ae 00BF     		.align	2
 23060              	.L882:
 23061 00b0 00000000 		.word	g_mem
 23062 00b4 00000000 		.word	g_measOld
 23063              		.cfi_endproc
 23064              	.LFE93:
 23065              		.size	cmd_get_accelerations, .-cmd_get_accelerations
 23066              		.section	.text.cmd_get_joystick,"ax",%progbits
 23067              		.align	2
 23068              		.global	cmd_get_joystick
 23069              		.thumb
 23070              		.thumb_func
 23071              		.type	cmd_get_joystick, %function
 23072              	cmd_get_joystick:
 23073              	.LFB94:
3310:..\src/command_processing.c **** 
3311:..\src/command_processing.c **** void cmd_get_joystick() {
 23074              		.loc 1 3311 0
 23075              		.cfi_startproc
 23076              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 506


 23077              		@ frame_needed = 1, uses_anonymous_args = 0
 23078 0000 80B5     		push	{r7, lr}
 23079              		.cfi_def_cfa_offset 8
 23080              		.cfi_offset 7, -8
 23081              		.cfi_offset 14, -4
 23082 0002 82B0     		sub	sp, sp, #8
 23083              		.cfi_def_cfa_offset 16
 23084 0004 00AF     		add	r7, sp, #0
 23085              		.cfi_def_cfa_register 7
3312:..\src/command_processing.c ****  
3313:..\src/command_processing.c ****     int16 aux_int16;
3314:..\src/command_processing.c ****     
3315:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3316:..\src/command_processing.c ****     
3317:..\src/command_processing.c ****     uint8 packet_data[6];
3318:..\src/command_processing.c ****     
3319:..\src/command_processing.c ****     // Header        
3320:..\src/command_processing.c ****     packet_data[0] = CMD_GET_JOYSTICK;
 23086              		.loc 1 3320 0
 23087 0006 9223     		movs	r3, #146
 23088 0008 3B70     		strb	r3, [r7]
3321:..\src/command_processing.c ****     
3322:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.joystick[0];
 23089              		.loc 1 3322 0
 23090 000a 134B     		ldr	r3, .L885
 23091 000c 1B6A     		ldr	r3, [r3, #32]
 23092 000e 1BB2     		sxth	r3, r3
 23093 0010 FB80     		strh	r3, [r7, #6]	@ movhi
3323:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 23094              		.loc 1 3323 0
 23095 0012 BB1D     		adds	r3, r7, #6
 23096 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23097 0016 BB70     		strb	r3, [r7, #2]
3324:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 23098              		.loc 1 3324 0
 23099 0018 BB1D     		adds	r3, r7, #6
 23100 001a 0133     		adds	r3, r3, #1
 23101 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23102 001e 7B70     		strb	r3, [r7, #1]
3325:..\src/command_processing.c ****     
3326:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.joystick[1];
 23103              		.loc 1 3326 0
 23104 0020 0D4B     		ldr	r3, .L885
 23105 0022 5B6A     		ldr	r3, [r3, #36]
 23106 0024 1BB2     		sxth	r3, r3
 23107 0026 FB80     		strh	r3, [r7, #6]	@ movhi
3327:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 23108              		.loc 1 3327 0
 23109 0028 BB1D     		adds	r3, r7, #6
 23110 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23111 002c 3B71     		strb	r3, [r7, #4]
3328:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 23112              		.loc 1 3328 0
 23113 002e BB1D     		adds	r3, r7, #6
 23114 0030 0133     		adds	r3, r3, #1
 23115 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23116 0034 FB70     		strb	r3, [r7, #3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 507


3329:..\src/command_processing.c **** 
3330:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 23117              		.loc 1 3330 0
 23118 0036 3B46     		mov	r3, r7
 23119 0038 0521     		movs	r1, #5
 23120 003a 1846     		mov	r0, r3
 23121 003c FFF7FEFF 		bl	LCRChecksum
 23122 0040 0346     		mov	r3, r0
 23123 0042 7B71     		strb	r3, [r7, #5]
3331:..\src/command_processing.c **** 
3332:..\src/command_processing.c ****     commWrite(packet_data, 6);
 23124              		.loc 1 3332 0
 23125 0044 3B46     		mov	r3, r7
 23126 0046 0621     		movs	r1, #6
 23127 0048 1846     		mov	r0, r3
 23128 004a FFF7FEFF 		bl	commWrite
3333:..\src/command_processing.c **** }
 23129              		.loc 1 3333 0
 23130 004e 00BF     		nop
 23131 0050 0837     		adds	r7, r7, #8
 23132              		.cfi_def_cfa_offset 8
 23133 0052 BD46     		mov	sp, r7
 23134              		.cfi_def_cfa_register 13
 23135              		@ sp needed
 23136 0054 80BD     		pop	{r7, pc}
 23137              	.L886:
 23138 0056 00BF     		.align	2
 23139              	.L885:
 23140 0058 00000000 		.word	g_adc_measOld
 23141              		.cfi_endproc
 23142              	.LFE94:
 23143              		.size	cmd_get_joystick, .-cmd_get_joystick
 23144              		.section	.text.cmd_set_inputs,"ax",%progbits
 23145              		.align	2
 23146              		.global	cmd_set_inputs
 23147              		.thumb
 23148              		.thumb_func
 23149              		.type	cmd_set_inputs, %function
 23150              	cmd_set_inputs:
 23151              	.LFB95:
3334:..\src/command_processing.c **** 
3335:..\src/command_processing.c **** void cmd_set_inputs(){
 23152              		.loc 1 3335 0
 23153              		.cfi_startproc
 23154              		@ args = 0, pretend = 0, frame = 8
 23155              		@ frame_needed = 1, uses_anonymous_args = 0
 23156              		@ link register save eliminated.
 23157 0000 90B4     		push	{r4, r7}
 23158              		.cfi_def_cfa_offset 8
 23159              		.cfi_offset 4, -8
 23160              		.cfi_offset 7, -4
 23161 0002 82B0     		sub	sp, sp, #8
 23162              		.cfi_def_cfa_offset 16
 23163 0004 00AF     		add	r7, sp, #0
 23164              		.cfi_def_cfa_register 7
3336:..\src/command_processing.c ****     
3337:..\src/command_processing.c ****     // Store position setted in right variables
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 508


3338:..\src/command_processing.c ****     int16 aux_int16[NUM_OF_MOTORS];
3339:..\src/command_processing.c ****     static int16 last_aux_int16[NUM_OF_MOTORS];
3340:..\src/command_processing.c ****     
3341:..\src/command_processing.c ****     aux_int16[0] = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 23165              		.loc 1 3341 0
 23166 0006 894B     		ldr	r3, .L901
 23167 0008 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 23168 000a 1B02     		lsls	r3, r3, #8
 23169 000c 1AB2     		sxth	r2, r3
 23170 000e 874B     		ldr	r3, .L901
 23171 0010 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 23172 0012 1BB2     		sxth	r3, r3
 23173 0014 1343     		orrs	r3, r3, r2
 23174 0016 1BB2     		sxth	r3, r3
 23175 0018 3B80     		strh	r3, [r7]	@ movhi
3342:..\src/command_processing.c ****     aux_int16[1] = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 23176              		.loc 1 3342 0
 23177 001a 844B     		ldr	r3, .L901
 23178 001c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 23179 001e 1B02     		lsls	r3, r3, #8
 23180 0020 1AB2     		sxth	r2, r3
 23181 0022 824B     		ldr	r3, .L901
 23182 0024 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 23183 0026 1BB2     		sxth	r3, r3
 23184 0028 1343     		orrs	r3, r3, r2
 23185 002a 1BB2     		sxth	r3, r3
 23186 002c 7B80     		strh	r3, [r7, #2]	@ movhi
 23187              	.LBB22:
3343:..\src/command_processing.c ****     
3344:..\src/command_processing.c ****     // Check if last command received was the same as this 
3345:..\src/command_processing.c ****     //(Note: last command not last motor reference in g_ref)
3346:..\src/command_processing.c ****     for (uint8 i = 0; i < (1 + c_mem.dev.use_2nd_motor_flag); i++) {
 23188              		.loc 1 3346 0
 23189 002e 0023     		movs	r3, #0
 23190 0030 FB71     		strb	r3, [r7, #7]
 23191 0032 1DE0     		b	.L888
 23192              	.L890:
3347:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 23193              		.loc 1 3347 0
 23194 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23195 0036 7E4A     		ldr	r2, .L901+4
 23196 0038 32F91320 		ldrsh	r2, [r2, r3, lsl #1]
 23197 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23198 003e 5B00     		lsls	r3, r3, #1
 23199 0040 07F10801 		add	r1, r7, #8
 23200 0044 0B44     		add	r3, r3, r1
 23201 0046 33F9083C 		ldrsh	r3, [r3, #-8]
 23202 004a 9A42     		cmp	r2, r3
 23203 004c 02D0     		beq	.L889
3348:..\src/command_processing.c ****             change_ext_ref_flag = TRUE;
 23204              		.loc 1 3348 0
 23205 004e 794B     		ldr	r3, .L901+8
 23206 0050 0122     		movs	r2, #1
 23207 0052 1A70     		strb	r2, [r3]
 23208              	.L889:
3349:..\src/command_processing.c ****        }
3350:..\src/command_processing.c ****         // Update last command
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 509


3351:..\src/command_processing.c ****        last_aux_int16[i] = aux_int16[i];
 23209              		.loc 1 3351 0 discriminator 2
 23210 0054 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23211 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23212 0058 5B00     		lsls	r3, r3, #1
 23213 005a 07F10801 		add	r1, r7, #8
 23214 005e 0B44     		add	r3, r3, r1
 23215 0060 33F9081C 		ldrsh	r1, [r3, #-8]
 23216 0064 724B     		ldr	r3, .L901+4
 23217 0066 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
3346:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 23218              		.loc 1 3346 0 discriminator 2
 23219 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23220 006c 0133     		adds	r3, r3, #1
 23221 006e FB71     		strb	r3, [r7, #7]
 23222              	.L888:
3346:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 23223              		.loc 1 3346 0 is_stmt 0 discriminator 1
 23224 0070 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23225 0072 714B     		ldr	r3, .L901+12
 23226 0074 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 23227 0078 0133     		adds	r3, r3, #1
 23228 007a 9A42     		cmp	r2, r3
 23229 007c DADB     		blt	.L890
 23230              	.LBE22:
3352:..\src/command_processing.c ****     }
3353:..\src/command_processing.c ****     
3354:..\src/command_processing.c ****     // Update g_refNew in case a new command has been received
3355:..\src/command_processing.c ****     if (change_ext_ref_flag) {
 23231              		.loc 1 3355 0 is_stmt 1
 23232 007e 6D4B     		ldr	r3, .L901+8
 23233 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23234 0082 002B     		cmp	r3, #0
 23235 0084 00F0CC80 		beq	.L900
 23236              	.LBB23:
3356:..\src/command_processing.c ****         for (uint8 i = 0; i< NUM_OF_MOTORS; i++) {
 23237              		.loc 1 3356 0
 23238 0088 0023     		movs	r3, #0
 23239 008a BB71     		strb	r3, [r7, #6]
 23240 008c C4E0     		b	.L892
 23241              	.L899:
3357:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 23242              		.loc 1 3357 0
 23243 008e BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 23244 0090 6A49     		ldr	r1, .L901+16
 23245 0092 1346     		mov	r3, r2
 23246 0094 DB00     		lsls	r3, r3, #3
 23247 0096 9B1A     		subs	r3, r3, r2
 23248 0098 1B01     		lsls	r3, r3, #4
 23249 009a 0B44     		add	r3, r3, r1
 23250 009c 03F20F13 		addw	r3, r3, #271
 23251 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23252 00a2 022B     		cmp	r3, #2
 23253 00a4 0ED1     		bne	.L893
3358:..\src/command_processing.c ****                 g_refNew[i].curr = aux_int16[i];
 23254              		.loc 1 3358 0
 23255 00a6 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 510


 23256 00a8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 23257 00aa 5B00     		lsls	r3, r3, #1
 23258 00ac 07F10801 		add	r1, r7, #8
 23259 00b0 0B44     		add	r3, r3, r1
 23260 00b2 33F9083C 		ldrsh	r3, [r3, #-8]
 23261 00b6 1846     		mov	r0, r3
 23262 00b8 6149     		ldr	r1, .L901+20
 23263 00ba 1301     		lsls	r3, r2, #4
 23264 00bc 0B44     		add	r3, r3, r1
 23265 00be 0433     		adds	r3, r3, #4
 23266 00c0 1860     		str	r0, [r3]
 23267 00c2 47E0     		b	.L894
 23268              	.L893:
3359:..\src/command_processing.c ****             }
3360:..\src/command_processing.c ****             else {
3361:..\src/command_processing.c ****                 if(g_mem.motor[i].control_mode == CONTROL_PWM) {
 23269              		.loc 1 3361 0
 23270 00c4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 23271 00c6 5D49     		ldr	r1, .L901+16
 23272 00c8 1346     		mov	r3, r2
 23273 00ca DB00     		lsls	r3, r3, #3
 23274 00cc 9B1A     		subs	r3, r3, r2
 23275 00ce 1B01     		lsls	r3, r3, #4
 23276 00d0 0B44     		add	r3, r3, r1
 23277 00d2 03F20F13 		addw	r3, r3, #271
 23278 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23279 00d8 012B     		cmp	r3, #1
 23280 00da 0ED1     		bne	.L895
3362:..\src/command_processing.c ****                     g_refNew[i].pwm = aux_int16[i];
 23281              		.loc 1 3362 0
 23282 00dc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 23283 00de BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 23284 00e0 5B00     		lsls	r3, r3, #1
 23285 00e2 07F10801 		add	r1, r7, #8
 23286 00e6 0B44     		add	r3, r3, r1
 23287 00e8 33F9083C 		ldrsh	r3, [r3, #-8]
 23288 00ec 1846     		mov	r0, r3
 23289 00ee 5449     		ldr	r1, .L901+20
 23290 00f0 1301     		lsls	r3, r2, #4
 23291 00f2 0B44     		add	r3, r3, r1
 23292 00f4 0833     		adds	r3, r3, #8
 23293 00f6 1860     		str	r0, [r3]
 23294 00f8 2CE0     		b	.L894
 23295              	.L895:
3363:..\src/command_processing.c ****                 }
3364:..\src/command_processing.c ****                 else {
3365:..\src/command_processing.c ****                     g_refNew[i].pos = aux_int16[i];   // motor ref
 23296              		.loc 1 3365 0
 23297 00fa BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 23298 00fc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 23299 00fe 5B00     		lsls	r3, r3, #1
 23300 0100 07F10801 		add	r1, r7, #8
 23301 0104 0B44     		add	r3, r3, r1
 23302 0106 33F9083C 		ldrsh	r3, [r3, #-8]
 23303 010a 1846     		mov	r0, r3
 23304 010c 4C49     		ldr	r1, .L901+20
 23305 010e 1301     		lsls	r3, r2, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 511


 23306 0110 0B44     		add	r3, r3, r1
 23307 0112 1860     		str	r0, [r3]
3366:..\src/command_processing.c ****                     g_refNew[i].pos = g_refNew[i].pos << g_mem.enc[c_mem.motor[i].encoder_line].res
 23308              		.loc 1 3366 0
 23309 0114 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 23310 0116 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 23311 0118 494A     		ldr	r2, .L901+20
 23312 011a 1B01     		lsls	r3, r3, #4
 23313 011c 1344     		add	r3, r3, r2
 23314 011e 1868     		ldr	r0, [r3]
 23315 0120 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 23316 0122 454C     		ldr	r4, .L901+12
 23317 0124 1346     		mov	r3, r2
 23318 0126 DB00     		lsls	r3, r3, #3
 23319 0128 9B1A     		subs	r3, r3, r2
 23320 012a 1B01     		lsls	r3, r3, #4
 23321 012c 2344     		add	r3, r3, r4
 23322 012e 03F58873 		add	r3, r3, #272
 23323 0132 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23324 0134 1C46     		mov	r4, r3
 23325 0136 414A     		ldr	r2, .L901+16
 23326 0138 2346     		mov	r3, r4
 23327 013a 5B00     		lsls	r3, r3, #1
 23328 013c 2344     		add	r3, r3, r4
 23329 013e 1B01     		lsls	r3, r3, #4
 23330 0140 1344     		add	r3, r3, r2
 23331 0142 03F29513 		addw	r3, r3, #405
 23332 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23333 0148 00FA03F2 		lsl	r2, r0, r3
 23334 014c 3C48     		ldr	r0, .L901+20
 23335 014e 0B01     		lsls	r3, r1, #4
 23336 0150 0344     		add	r3, r3, r0
 23337 0152 1A60     		str	r2, [r3]
 23338              	.L894:
3367:..\src/command_processing.c ****                 }
3368:..\src/command_processing.c ****             }  
3369:..\src/command_processing.c ****                
3370:..\src/command_processing.c ****             // Check if the reference is nor higher or lower than the position limits
3371:..\src/command_processing.c ****             if (c_mem.motor[i].pos_lim_flag && (g_mem.motor[i].control_mode == CURR_AND_POS_CONTROL
 23339              		.loc 1 3371 0
 23340 0154 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 23341 0156 3849     		ldr	r1, .L901+12
 23342 0158 1346     		mov	r3, r2
 23343 015a DB00     		lsls	r3, r3, #3
 23344 015c 9B1A     		subs	r3, r3, r2
 23345 015e 1B01     		lsls	r3, r3, #4
 23346 0160 0B44     		add	r3, r3, r1
 23347 0162 E333     		adds	r3, r3, #227
 23348 0164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23349 0166 002B     		cmp	r3, #0
 23350 0168 53D0     		beq	.L896
 23351              		.loc 1 3371 0 is_stmt 0 discriminator 1
 23352 016a BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 23353 016c 3349     		ldr	r1, .L901+16
 23354 016e 1346     		mov	r3, r2
 23355 0170 DB00     		lsls	r3, r3, #3
 23356 0172 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 512


 23357 0174 1B01     		lsls	r3, r3, #4
 23358 0176 0B44     		add	r3, r3, r1
 23359 0178 03F20F13 		addw	r3, r3, #271
 23360 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23361 017e 032B     		cmp	r3, #3
 23362 0180 0BD0     		beq	.L897
 23363              		.loc 1 3371 0 discriminator 2
 23364 0182 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 23365 0184 2D49     		ldr	r1, .L901+16
 23366 0186 1346     		mov	r3, r2
 23367 0188 DB00     		lsls	r3, r3, #3
 23368 018a 9B1A     		subs	r3, r3, r2
 23369 018c 1B01     		lsls	r3, r3, #4
 23370 018e 0B44     		add	r3, r3, r1
 23371 0190 03F20F13 		addw	r3, r3, #271
 23372 0194 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23373 0196 002B     		cmp	r3, #0
 23374 0198 3BD1     		bne	.L896
 23375              	.L897:
3372:..\src/command_processing.c ****                 
3373:..\src/command_processing.c ****                 if (g_refNew[i].pos < c_mem.motor[i].pos_lim_inf) 
 23376              		.loc 1 3373 0 is_stmt 1
 23377 019a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 23378 019c 284A     		ldr	r2, .L901+20
 23379 019e 1B01     		lsls	r3, r3, #4
 23380 01a0 1344     		add	r3, r3, r2
 23381 01a2 1968     		ldr	r1, [r3]
 23382 01a4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 23383 01a6 2448     		ldr	r0, .L901+12
 23384 01a8 1346     		mov	r3, r2
 23385 01aa DB00     		lsls	r3, r3, #3
 23386 01ac 9B1A     		subs	r3, r3, r2
 23387 01ae 1B01     		lsls	r3, r3, #4
 23388 01b0 0344     		add	r3, r3, r0
 23389 01b2 E433     		adds	r3, r3, #228
 23390 01b4 1B68     		ldr	r3, [r3]
 23391 01b6 9942     		cmp	r1, r3
 23392 01b8 0DDA     		bge	.L898
3374:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_inf;
 23393              		.loc 1 3374 0
 23394 01ba B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 23395 01bc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 23396 01be 1E48     		ldr	r0, .L901+12
 23397 01c0 1346     		mov	r3, r2
 23398 01c2 DB00     		lsls	r3, r3, #3
 23399 01c4 9B1A     		subs	r3, r3, r2
 23400 01c6 1B01     		lsls	r3, r3, #4
 23401 01c8 0344     		add	r3, r3, r0
 23402 01ca E433     		adds	r3, r3, #228
 23403 01cc 1A68     		ldr	r2, [r3]
 23404 01ce 1C48     		ldr	r0, .L901+20
 23405 01d0 0B01     		lsls	r3, r1, #4
 23406 01d2 0344     		add	r3, r3, r0
 23407 01d4 1A60     		str	r2, [r3]
 23408              	.L898:
3375:..\src/command_processing.c **** 
3376:..\src/command_processing.c ****                 if (g_refNew[i].pos > c_mem.motor[i].pos_lim_sup) 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 513


 23409              		.loc 1 3376 0
 23410 01d6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 23411 01d8 194A     		ldr	r2, .L901+20
 23412 01da 1B01     		lsls	r3, r3, #4
 23413 01dc 1344     		add	r3, r3, r2
 23414 01de 1968     		ldr	r1, [r3]
 23415 01e0 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 23416 01e2 1548     		ldr	r0, .L901+12
 23417 01e4 1346     		mov	r3, r2
 23418 01e6 DB00     		lsls	r3, r3, #3
 23419 01e8 9B1A     		subs	r3, r3, r2
 23420 01ea 1B01     		lsls	r3, r3, #4
 23421 01ec 0344     		add	r3, r3, r0
 23422 01ee E833     		adds	r3, r3, #232
 23423 01f0 1B68     		ldr	r3, [r3]
 23424 01f2 9942     		cmp	r1, r3
 23425 01f4 0DDD     		ble	.L896
3377:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_sup;
 23426              		.loc 1 3377 0
 23427 01f6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 23428 01f8 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 23429 01fa 0F48     		ldr	r0, .L901+12
 23430 01fc 1346     		mov	r3, r2
 23431 01fe DB00     		lsls	r3, r3, #3
 23432 0200 9B1A     		subs	r3, r3, r2
 23433 0202 1B01     		lsls	r3, r3, #4
 23434 0204 0344     		add	r3, r3, r0
 23435 0206 E833     		adds	r3, r3, #232
 23436 0208 1A68     		ldr	r2, [r3]
 23437 020a 0D48     		ldr	r0, .L901+20
 23438 020c 0B01     		lsls	r3, r1, #4
 23439 020e 0344     		add	r3, r3, r0
 23440 0210 1A60     		str	r2, [r3]
 23441              	.L896:
3356:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 23442              		.loc 1 3356 0 discriminator 2
 23443 0212 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 23444 0214 0133     		adds	r3, r3, #1
 23445 0216 BB71     		strb	r3, [r7, #6]
 23446              	.L892:
3356:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 23447              		.loc 1 3356 0 is_stmt 0 discriminator 1
 23448 0218 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 23449 021a 012B     		cmp	r3, #1
 23450 021c 7FF637AF 		bls	.L899
 23451              	.L900:
 23452              	.LBE23:
3378:..\src/command_processing.c ****             }
3379:..\src/command_processing.c ****         }  
3380:..\src/command_processing.c ****     }
3381:..\src/command_processing.c **** }
 23453              		.loc 1 3381 0 is_stmt 1
 23454 0220 00BF     		nop
 23455 0222 0837     		adds	r7, r7, #8
 23456              		.cfi_def_cfa_offset 8
 23457 0224 BD46     		mov	sp, r7
 23458              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 514


 23459              		@ sp needed
 23460 0226 90BC     		pop	{r4, r7}
 23461              		.cfi_restore 7
 23462              		.cfi_restore 4
 23463              		.cfi_def_cfa_offset 0
 23464 0228 7047     		bx	lr
 23465              	.L902:
 23466 022a 00BF     		.align	2
 23467              	.L901:
 23468 022c 00000000 		.word	g_rx
 23469 0230 04000000 		.word	last_aux_int16.11319
 23470 0234 00000000 		.word	change_ext_ref_flag
 23471 0238 00000000 		.word	c_mem
 23472 023c 00000000 		.word	g_mem
 23473 0240 00000000 		.word	g_refNew
 23474              		.cfi_endproc
 23475              	.LFE95:
 23476              		.size	cmd_set_inputs, .-cmd_set_inputs
 23477              		.section	.text.cmd_activate,"ax",%progbits
 23478              		.align	2
 23479              		.global	cmd_activate
 23480              		.thumb
 23481              		.thumb_func
 23482              		.type	cmd_activate, %function
 23483              	cmd_activate:
 23484              	.LFB96:
3382:..\src/command_processing.c **** 
3383:..\src/command_processing.c **** void cmd_activate(){
 23485              		.loc 1 3383 0
 23486              		.cfi_startproc
 23487              		@ args = 0, pretend = 0, frame = 8
 23488              		@ frame_needed = 1, uses_anonymous_args = 0
 23489 0000 80B5     		push	{r7, lr}
 23490              		.cfi_def_cfa_offset 8
 23491              		.cfi_offset 7, -8
 23492              		.cfi_offset 14, -4
 23493 0002 82B0     		sub	sp, sp, #8
 23494              		.cfi_def_cfa_offset 16
 23495 0004 00AF     		add	r7, sp, #0
 23496              		.cfi_def_cfa_register 7
3384:..\src/command_processing.c ****     
3385:..\src/command_processing.c ****     // Store new value reads
3386:..\src/command_processing.c ****     uint8 aux = g_rx.buffer[1];
 23497              		.loc 1 3386 0
 23498 0006 294B     		ldr	r3, .L910
 23499 0008 5B78     		ldrb	r3, [r3, #1]
 23500 000a FB71     		strb	r3, [r7, #7]
3387:..\src/command_processing.c ****     
3388:..\src/command_processing.c ****     // Check type of control mode enabled
3389:..\src/command_processing.c ****     if ((g_mem.motor[0].control_mode == CONTROL_ANGLE) || (g_mem.motor[0].control_mode == CURR_AND_
 23501              		.loc 1 3389 0
 23502 000c 284B     		ldr	r3, .L910+4
 23503 000e 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 23504 0012 002B     		cmp	r3, #0
 23505 0014 04D0     		beq	.L904
 23506              		.loc 1 3389 0 is_stmt 0 discriminator 1
 23507 0016 264B     		ldr	r3, .L910+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 515


 23508 0018 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 23509 001c 032B     		cmp	r3, #3
 23510 001e 0BD1     		bne	.L905
 23511              	.L904:
3390:..\src/command_processing.c ****         g_refNew[0].pos = g_meas[g_mem.motor[0].encoder_line].pos[0];
 23512              		.loc 1 3390 0 is_stmt 1
 23513 0020 234B     		ldr	r3, .L910+4
 23514 0022 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23515 0026 1946     		mov	r1, r3
 23516 0028 224A     		ldr	r2, .L910+8
 23517 002a 3423     		movs	r3, #52
 23518 002c 03FB01F3 		mul	r3, r3, r1
 23519 0030 1344     		add	r3, r3, r2
 23520 0032 1B68     		ldr	r3, [r3]
 23521 0034 204A     		ldr	r2, .L910+12
 23522 0036 1360     		str	r3, [r2]
 23523              	.L905:
3391:..\src/command_processing.c ****     }
3392:..\src/command_processing.c ****     g_refNew[0].onoff = (aux & 0x01);
 23524              		.loc 1 3392 0
 23525 0038 FB79     		ldrb	r3, [r7, #7]
 23526 003a 03F00103 		and	r3, r3, #1
 23527 003e DAB2     		uxtb	r2, r3
 23528 0040 1D4B     		ldr	r3, .L910+12
 23529 0042 1A73     		strb	r2, [r3, #12]
3393:..\src/command_processing.c ****     
3394:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
3395:..\src/command_processing.c ****     if (g_mem.dev.dev_type == AIR_CHAMBERS_FB){
3396:..\src/command_processing.c ****         // Send PWM 0 to the PUMP in case a deactivation command arrives
3397:..\src/command_processing.c ****         // [There is no driver activation, so g_refNew[i].onoff is useless]
3398:..\src/command_processing.c ****         if (!(g_refNew[0].onoff)) {
3399:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
3400:..\src/command_processing.c ****         }
3401:..\src/command_processing.c ****         
3402:..\src/command_processing.c ****         // Activate or deactivate the valve
3403:..\src/command_processing.c ****         VALVE_Write((aux >> 1) & 0x01);
3404:..\src/command_processing.c ****     }
3405:..\src/command_processing.c **** #endif
3406:..\src/command_processing.c ****     
3407:..\src/command_processing.c ****     // Activate/Deactivate motor
3408:..\src/command_processing.c ****     enable_motor(0, g_refNew[0].onoff); 
 23530              		.loc 1 3408 0
 23531 0044 1C4B     		ldr	r3, .L910+12
 23532 0046 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 23533 0048 1946     		mov	r1, r3
 23534 004a 0020     		movs	r0, #0
 23535 004c FFF7FEFF 		bl	enable_motor
3409:..\src/command_processing.c ****     
3410:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 23536              		.loc 1 3410 0
 23537 0050 174B     		ldr	r3, .L910+4
 23538 0052 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 23539 0056 012B     		cmp	r3, #1
 23540 0058 23D1     		bne	.L909
3411:..\src/command_processing.c ****         if ((g_mem.motor[1].control_mode == CONTROL_ANGLE) || (g_mem.motor[1].control_mode == CURR_
 23541              		.loc 1 3411 0
 23542 005a 154B     		ldr	r3, .L910+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 516


 23543 005c 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 23544 0060 002B     		cmp	r3, #0
 23545 0062 04D0     		beq	.L907
 23546              		.loc 1 3411 0 is_stmt 0 discriminator 1
 23547 0064 124B     		ldr	r3, .L910+4
 23548 0066 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 23549 006a 032B     		cmp	r3, #3
 23550 006c 0BD1     		bne	.L908
 23551              	.L907:
3412:..\src/command_processing.c ****             g_refNew[1].pos = g_meas[g_mem.motor[1].encoder_line].pos[0];
 23552              		.loc 1 3412 0 is_stmt 1
 23553 006e 104B     		ldr	r3, .L910+4
 23554 0070 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23555 0074 1946     		mov	r1, r3
 23556 0076 0F4A     		ldr	r2, .L910+8
 23557 0078 3423     		movs	r3, #52
 23558 007a 03FB01F3 		mul	r3, r3, r1
 23559 007e 1344     		add	r3, r3, r2
 23560 0080 1B68     		ldr	r3, [r3]
 23561 0082 0D4A     		ldr	r2, .L910+12
 23562 0084 1361     		str	r3, [r2, #16]
 23563              	.L908:
3413:..\src/command_processing.c ****         }
3414:..\src/command_processing.c ****         g_refNew[1].onoff = ((aux >> 1) & 0x01);
 23564              		.loc 1 3414 0
 23565 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23566 0088 5B08     		lsrs	r3, r3, #1
 23567 008a DBB2     		uxtb	r3, r3
 23568 008c 03F00103 		and	r3, r3, #1
 23569 0090 DAB2     		uxtb	r2, r3
 23570 0092 094B     		ldr	r3, .L910+12
 23571 0094 1A77     		strb	r2, [r3, #28]
3415:..\src/command_processing.c ****         enable_motor(1, g_refNew[1].onoff); 
 23572              		.loc 1 3415 0
 23573 0096 084B     		ldr	r3, .L910+12
 23574 0098 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 23575 009a 1946     		mov	r1, r3
 23576 009c 0120     		movs	r0, #1
 23577 009e FFF7FEFF 		bl	enable_motor
 23578              	.L909:
3416:..\src/command_processing.c ****     }
3417:..\src/command_processing.c ****     
3418:..\src/command_processing.c **** }
 23579              		.loc 1 3418 0
 23580 00a2 00BF     		nop
 23581 00a4 0837     		adds	r7, r7, #8
 23582              		.cfi_def_cfa_offset 8
 23583 00a6 BD46     		mov	sp, r7
 23584              		.cfi_def_cfa_register 13
 23585              		@ sp needed
 23586 00a8 80BD     		pop	{r7, pc}
 23587              	.L911:
 23588 00aa 00BF     		.align	2
 23589              	.L910:
 23590 00ac 00000000 		.word	g_rx
 23591 00b0 00000000 		.word	g_mem
 23592 00b4 00000000 		.word	g_meas
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 517


 23593 00b8 00000000 		.word	g_refNew
 23594              		.cfi_endproc
 23595              	.LFE96:
 23596              		.size	cmd_activate, .-cmd_activate
 23597              		.section	.text.cmd_get_activate,"ax",%progbits
 23598              		.align	2
 23599              		.global	cmd_get_activate
 23600              		.thumb
 23601              		.thumb_func
 23602              		.type	cmd_get_activate, %function
 23603              	cmd_get_activate:
 23604              	.LFB97:
3419:..\src/command_processing.c **** 
3420:..\src/command_processing.c **** void cmd_get_activate(){
 23605              		.loc 1 3420 0
 23606              		.cfi_startproc
 23607              		@ args = 0, pretend = 0, frame = 8
 23608              		@ frame_needed = 1, uses_anonymous_args = 0
 23609 0000 80B5     		push	{r7, lr}
 23610              		.cfi_def_cfa_offset 8
 23611              		.cfi_offset 7, -8
 23612              		.cfi_offset 14, -4
 23613 0002 82B0     		sub	sp, sp, #8
 23614              		.cfi_def_cfa_offset 16
 23615 0004 00AF     		add	r7, sp, #0
 23616              		.cfi_def_cfa_register 7
3421:..\src/command_processing.c ****     
3422:..\src/command_processing.c ****     uint8 packet_data[3];
3423:..\src/command_processing.c **** 
3424:..\src/command_processing.c ****     // Header        
3425:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACTIVATE;
 23617              		.loc 1 3425 0
 23618 0006 8123     		movs	r3, #129
 23619 0008 3B71     		strb	r3, [r7, #4]
3426:..\src/command_processing.c ****     
3427:..\src/command_processing.c ****     // Fill payload
3428:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 23620              		.loc 1 3428 0
 23621 000a 124B     		ldr	r3, .L915
 23622 000c 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 23623 0010 012B     		cmp	r3, #1
 23624 0012 0BD1     		bne	.L913
3429:..\src/command_processing.c ****         packet_data[1] = ((g_ref[1].onoff << 1) | g_ref[0].onoff);
 23625              		.loc 1 3429 0
 23626 0014 104B     		ldr	r3, .L915+4
 23627 0016 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 23628 0018 5B00     		lsls	r3, r3, #1
 23629 001a 5AB2     		sxtb	r2, r3
 23630 001c 0E4B     		ldr	r3, .L915+4
 23631 001e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 23632 0020 5BB2     		sxtb	r3, r3
 23633 0022 1343     		orrs	r3, r3, r2
 23634 0024 5BB2     		sxtb	r3, r3
 23635 0026 DBB2     		uxtb	r3, r3
 23636 0028 7B71     		strb	r3, [r7, #5]
 23637 002a 02E0     		b	.L914
 23638              	.L913:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 518


3430:..\src/command_processing.c ****     } 
3431:..\src/command_processing.c ****     else {
3432:..\src/command_processing.c ****         packet_data[1] = g_ref[0].onoff;
 23639              		.loc 1 3432 0
 23640 002c 0A4B     		ldr	r3, .L915+4
 23641 002e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 23642 0030 7B71     		strb	r3, [r7, #5]
 23643              	.L914:
3433:..\src/command_processing.c ****     }
3434:..\src/command_processing.c ****     
3435:..\src/command_processing.c ****     // Calculate checksum
3436:..\src/command_processing.c ****     packet_data[2] = LCRChecksum(packet_data, 2);
 23644              		.loc 1 3436 0
 23645 0032 3B1D     		adds	r3, r7, #4
 23646 0034 0221     		movs	r1, #2
 23647 0036 1846     		mov	r0, r3
 23648 0038 FFF7FEFF 		bl	LCRChecksum
 23649 003c 0346     		mov	r3, r0
 23650 003e BB71     		strb	r3, [r7, #6]
3437:..\src/command_processing.c ****     
3438:..\src/command_processing.c ****     // Send package to UART
3439:..\src/command_processing.c ****     commWrite(packet_data, 3);
 23651              		.loc 1 3439 0
 23652 0040 3B1D     		adds	r3, r7, #4
 23653 0042 0321     		movs	r1, #3
 23654 0044 1846     		mov	r0, r3
 23655 0046 FFF7FEFF 		bl	commWrite
3440:..\src/command_processing.c **** 
3441:..\src/command_processing.c **** }
 23656              		.loc 1 3441 0
 23657 004a 00BF     		nop
 23658 004c 0837     		adds	r7, r7, #8
 23659              		.cfi_def_cfa_offset 8
 23660 004e BD46     		mov	sp, r7
 23661              		.cfi_def_cfa_register 13
 23662              		@ sp needed
 23663 0050 80BD     		pop	{r7, pc}
 23664              	.L916:
 23665 0052 00BF     		.align	2
 23666              	.L915:
 23667 0054 00000000 		.word	g_mem
 23668 0058 00000000 		.word	g_ref
 23669              		.cfi_endproc
 23670              	.LFE97:
 23671              		.size	cmd_get_activate, .-cmd_get_activate
 23672              		.section	.text.cmd_get_curr_and_meas,"ax",%progbits
 23673              		.align	2
 23674              		.global	cmd_get_curr_and_meas
 23675              		.thumb
 23676              		.thumb_func
 23677              		.type	cmd_get_curr_and_meas, %function
 23678              	cmd_get_curr_and_meas:
 23679              	.LFB98:
3442:..\src/command_processing.c **** 
3443:..\src/command_processing.c **** void cmd_get_curr_and_meas(){
 23680              		.loc 1 3443 0
 23681              		.cfi_startproc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 519


 23682              		@ args = 0, pretend = 0, frame = 16
 23683              		@ frame_needed = 1, uses_anonymous_args = 0
 23684 0000 90B5     		push	{r4, r7, lr}
 23685              		.cfi_def_cfa_offset 12
 23686              		.cfi_offset 4, -12
 23687              		.cfi_offset 7, -8
 23688              		.cfi_offset 14, -4
 23689 0002 85B0     		sub	sp, sp, #20
 23690              		.cfi_def_cfa_offset 32
 23691 0004 00AF     		add	r7, sp, #0
 23692              		.cfi_def_cfa_register 7
3444:..\src/command_processing.c ****     
3445:..\src/command_processing.c ****     uint8 CYDATA index;
3446:..\src/command_processing.c ****     int16 aux_int16;
3447:..\src/command_processing.c ****    
3448:..\src/command_processing.c ****     //Packet: header + curr_meas(int16) + pos_meas(int16) + CRC
3449:..\src/command_processing.c ****     
3450:..\src/command_processing.c ****     uint8 packet_data[12]; 
3451:..\src/command_processing.c **** 
3452:..\src/command_processing.c ****     //Header package
3453:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_AND_MEAS;
 23693              		.loc 1 3453 0
 23694 0006 8623     		movs	r3, #134
 23695 0008 3B70     		strb	r3, [r7]
3454:..\src/command_processing.c **** 
3455:..\src/command_processing.c ****     // Currents
3456:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current motor1
 23696              		.loc 1 3456 0
 23697 000a 484B     		ldr	r3, .L922
 23698 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23699 0010 1946     		mov	r1, r3
 23700 0012 474A     		ldr	r2, .L922+4
 23701 0014 3423     		movs	r3, #52
 23702 0016 03FB01F3 		mul	r3, r3, r1
 23703 001a 1344     		add	r3, r3, r2
 23704 001c 0C33     		adds	r3, r3, #12
 23705 001e 1B68     		ldr	r3, [r3]
 23706 0020 1BB2     		sxth	r3, r3
 23707 0022 BB81     		strh	r3, [r7, #12]	@ movhi
3457:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 23708              		.loc 1 3457 0
 23709 0024 07F10C03 		add	r3, r7, #12
 23710 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23711 002a BB70     		strb	r3, [r7, #2]
3458:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 23712              		.loc 1 3458 0
 23713 002c 07F10C03 		add	r3, r7, #12
 23714 0030 0133     		adds	r3, r3, #1
 23715 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23716 0034 7B70     		strb	r3, [r7, #1]
3459:..\src/command_processing.c ****     
3460:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 23717              		.loc 1 3460 0
 23718 0036 3F4B     		ldr	r3, .L922+8
 23719 0038 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 23720 003c 012B     		cmp	r3, #1
 23721 003e 0DD1     		bne	.L918
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 520


3461:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 23722              		.loc 1 3461 0
 23723 0040 3A4B     		ldr	r3, .L922
 23724 0042 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23725 0046 1946     		mov	r1, r3
 23726 0048 394A     		ldr	r2, .L922+4
 23727 004a 3423     		movs	r3, #52
 23728 004c 03FB01F3 		mul	r3, r3, r1
 23729 0050 1344     		add	r3, r3, r2
 23730 0052 0C33     		adds	r3, r3, #12
 23731 0054 1B68     		ldr	r3, [r3]
 23732 0056 1BB2     		sxth	r3, r3
 23733 0058 BB81     		strh	r3, [r7, #12]	@ movhi
 23734 005a 0CE0     		b	.L919
 23735              	.L918:
3462:..\src/command_processing.c ****     }
3463:..\src/command_processing.c ****     else {
3464:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 23736              		.loc 1 3464 0
 23737 005c 334B     		ldr	r3, .L922
 23738 005e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23739 0062 1946     		mov	r1, r3
 23740 0064 324A     		ldr	r2, .L922+4
 23741 0066 3423     		movs	r3, #52
 23742 0068 03FB01F3 		mul	r3, r3, r1
 23743 006c 1344     		add	r3, r3, r2
 23744 006e 1033     		adds	r3, r3, #16
 23745 0070 1B68     		ldr	r3, [r3]
 23746 0072 1BB2     		sxth	r3, r3
 23747 0074 BB81     		strh	r3, [r7, #12]	@ movhi
 23748              	.L919:
3465:..\src/command_processing.c ****     }
3466:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 23749              		.loc 1 3466 0
 23750 0076 07F10C03 		add	r3, r7, #12
 23751 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23752 007c 3B71     		strb	r3, [r7, #4]
3467:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 23753              		.loc 1 3467 0
 23754 007e 07F10C03 		add	r3, r7, #12
 23755 0082 0133     		adds	r3, r3, #1
 23756 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23757 0086 FB70     		strb	r3, [r7, #3]
3468:..\src/command_processing.c **** 
3469:..\src/command_processing.c ****     // Positions
3470:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 23758              		.loc 1 3470 0
 23759 0088 0323     		movs	r3, #3
 23760 008a FB73     		strb	r3, [r7, #15]
 23761 008c 38E0     		b	.L920
 23762              	.L921:
3471:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 23763              		.loc 1 3471 0
 23764 008e 274B     		ldr	r3, .L922
 23765 0090 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23766 0094 1A46     		mov	r2, r3
 23767 0096 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 521


 23768 0098 2548     		ldr	r0, .L922+4
 23769 009a 1346     		mov	r3, r2
 23770 009c 5B00     		lsls	r3, r3, #1
 23771 009e 1344     		add	r3, r3, r2
 23772 00a0 9B00     		lsls	r3, r3, #2
 23773 00a2 1344     		add	r3, r3, r2
 23774 00a4 0B44     		add	r3, r3, r1
 23775 00a6 50F82320 		ldr	r2, [r0, r3, lsl #2]
 23776 00aa 204B     		ldr	r3, .L922
 23777 00ac 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23778 00b0 1C46     		mov	r4, r3
 23779 00b2 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23780 00b4 1D48     		ldr	r0, .L922
 23781 00b6 2346     		mov	r3, r4
 23782 00b8 5B00     		lsls	r3, r3, #1
 23783 00ba 2344     		add	r3, r3, r4
 23784 00bc 1B01     		lsls	r3, r3, #4
 23785 00be 0344     		add	r3, r3, r0
 23786 00c0 0B44     		add	r3, r3, r1
 23787 00c2 03F29513 		addw	r3, r3, #405
 23788 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23789 00c8 42FA03F3 		asr	r3, r2, r3
 23790 00cc 1BB2     		sxth	r3, r3
 23791 00ce BB81     		strh	r3, [r7, #12]	@ movhi
3472:..\src/command_processing.c ****         packet_data[(index << 1) + 6] = ((char*)(&aux_int16))[0];
 23792              		.loc 1 3472 0
 23793 00d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23794 00d2 5B00     		lsls	r3, r3, #1
 23795 00d4 0633     		adds	r3, r3, #6
 23796 00d6 07F10C02 		add	r2, r7, #12
 23797 00da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 23798 00dc 07F11001 		add	r1, r7, #16
 23799 00e0 0B44     		add	r3, r3, r1
 23800 00e2 03F8102C 		strb	r2, [r3, #-16]
3473:..\src/command_processing.c ****         packet_data[(index << 1) + 5] = ((char*)(&aux_int16))[1];
 23801              		.loc 1 3473 0
 23802 00e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23803 00e8 5B00     		lsls	r3, r3, #1
 23804 00ea 5A1D     		adds	r2, r3, #5
 23805 00ec 07F10C03 		add	r3, r7, #12
 23806 00f0 0133     		adds	r3, r3, #1
 23807 00f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23808 00f4 07F11003 		add	r3, r7, #16
 23809 00f8 1344     		add	r3, r3, r2
 23810 00fa 0A46     		mov	r2, r1
 23811 00fc 03F8102C 		strb	r2, [r3, #-16]
 23812              	.L920:
3470:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 23813              		.loc 1 3470 0 discriminator 1
 23814 0100 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23815 0102 5A1E     		subs	r2, r3, #1
 23816 0104 FA73     		strb	r2, [r7, #15]
 23817 0106 002B     		cmp	r3, #0
 23818 0108 C1D1     		bne	.L921
3474:..\src/command_processing.c ****     }
3475:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3476:..\src/command_processing.c ****         
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 522


3477:..\src/command_processing.c ****     packet_data[11] = LCRChecksum (packet_data, 11);
 23819              		.loc 1 3477 0
 23820 010a 3B46     		mov	r3, r7
 23821 010c 0B21     		movs	r1, #11
 23822 010e 1846     		mov	r0, r3
 23823 0110 FFF7FEFF 		bl	LCRChecksum
 23824 0114 0346     		mov	r3, r0
 23825 0116 FB72     		strb	r3, [r7, #11]
3478:..\src/command_processing.c ****     commWrite(packet_data, 12);
 23826              		.loc 1 3478 0
 23827 0118 3B46     		mov	r3, r7
 23828 011a 0C21     		movs	r1, #12
 23829 011c 1846     		mov	r0, r3
 23830 011e FFF7FEFF 		bl	commWrite
3479:..\src/command_processing.c ****    
3480:..\src/command_processing.c **** }
 23831              		.loc 1 3480 0
 23832 0122 00BF     		nop
 23833 0124 1437     		adds	r7, r7, #20
 23834              		.cfi_def_cfa_offset 12
 23835 0126 BD46     		mov	sp, r7
 23836              		.cfi_def_cfa_register 13
 23837              		@ sp needed
 23838 0128 90BD     		pop	{r4, r7, pc}
 23839              	.L923:
 23840 012a 00BF     		.align	2
 23841              	.L922:
 23842 012c 00000000 		.word	g_mem
 23843 0130 00000000 		.word	g_measOld
 23844 0134 00000000 		.word	c_mem
 23845              		.cfi_endproc
 23846              	.LFE98:
 23847              		.size	cmd_get_curr_and_meas, .-cmd_get_curr_and_meas
 23848              		.global	__aeabi_dmul
 23849              		.global	__aeabi_d2iz
 23850              		.section	.text.cmd_get_currents,"ax",%progbits
 23851              		.align	2
 23852              		.global	cmd_get_currents
 23853              		.thumb
 23854              		.thumb_func
 23855              		.type	cmd_get_currents, %function
 23856              	cmd_get_currents:
 23857              	.LFB99:
3481:..\src/command_processing.c **** 
3482:..\src/command_processing.c **** void cmd_get_currents(){
 23858              		.loc 1 3482 0
 23859              		.cfi_startproc
 23860              		@ args = 0, pretend = 0, frame = 16
 23861              		@ frame_needed = 1, uses_anonymous_args = 0
 23862 0000 90B5     		push	{r4, r7, lr}
 23863              		.cfi_def_cfa_offset 12
 23864              		.cfi_offset 4, -12
 23865              		.cfi_offset 7, -8
 23866              		.cfi_offset 14, -4
 23867 0002 85B0     		sub	sp, sp, #20
 23868              		.cfi_def_cfa_offset 32
 23869 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 523


 23870              		.cfi_def_cfa_register 7
3483:..\src/command_processing.c ****     
3484:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3485:..\src/command_processing.c ****     
3486:..\src/command_processing.c ****     uint8 packet_data[6]; 
3487:..\src/command_processing.c ****     int16 aux_int16;
3488:..\src/command_processing.c ****     
3489:..\src/command_processing.c ****     //Header package
3490:..\src/command_processing.c **** 
3491:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURRENTS;
 23871              		.loc 1 3491 0
 23872 0006 8523     		movs	r3, #133
 23873 0008 3B72     		strb	r3, [r7, #8]
3492:..\src/command_processing.c **** 
3493:..\src/command_processing.c ****     if (c_mem.dev.dev_type != AIR_CHAMBERS_FB){
 23874              		.loc 1 3493 0
 23875 000a 334B     		ldr	r3, .L929
 23876 000c 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 23877 0010 022B     		cmp	r3, #2
 23878 0012 0DD0     		beq	.L925
3494:..\src/command_processing.c ****         // Currents
3495:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current
 23879              		.loc 1 3495 0
 23880 0014 314B     		ldr	r3, .L929+4
 23881 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23882 001a 1946     		mov	r1, r3
 23883 001c 304A     		ldr	r2, .L929+8
 23884 001e 3423     		movs	r3, #52
 23885 0020 03FB01F3 		mul	r3, r3, r1
 23886 0024 1344     		add	r3, r3, r2
 23887 0026 0C33     		adds	r3, r3, #12
 23888 0028 1B68     		ldr	r3, [r3]
 23889 002a 1BB2     		sxth	r3, r3
 23890 002c FB80     		strh	r3, [r7, #6]	@ movhi
 23891 002e 12E0     		b	.L926
 23892              	.L925:
3496:..\src/command_processing.c ****     }
3497:..\src/command_processing.c ****     else {
3498:..\src/command_processing.c ****         // Send pressure times 100 here instead of current (Simulink use)
3499:..\src/command_processing.c ****         aux_int16 = (int16)(g_fb_meas.pressure*100.0); //Pressure
 23893              		.loc 1 3499 0
 23894 0030 2C4B     		ldr	r3, .L929+12
 23895 0032 1B68     		ldr	r3, [r3]	@ float
 23896 0034 1846     		mov	r0, r3
 23897 0036 FFF7FEFF 		bl	__aeabi_f2d
 23898 003a 4FF00002 		mov	r2, #0
 23899 003e 2A4B     		ldr	r3, .L929+16
 23900 0040 FFF7FEFF 		bl	__aeabi_dmul
 23901 0044 0346     		mov	r3, r0
 23902 0046 0C46     		mov	r4, r1
 23903 0048 1846     		mov	r0, r3
 23904 004a 2146     		mov	r1, r4
 23905 004c FFF7FEFF 		bl	__aeabi_d2iz
 23906 0050 0346     		mov	r3, r0
 23907 0052 1BB2     		sxth	r3, r3
 23908 0054 FB80     		strh	r3, [r7, #6]	@ movhi
 23909              	.L926:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 524


3500:..\src/command_processing.c ****     }
3501:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 23910              		.loc 1 3501 0
 23911 0056 BB1D     		adds	r3, r7, #6
 23912 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23913 005a BB72     		strb	r3, [r7, #10]
3502:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 23914              		.loc 1 3502 0
 23915 005c BB1D     		adds	r3, r7, #6
 23916 005e 0133     		adds	r3, r3, #1
 23917 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23918 0062 7B72     		strb	r3, [r7, #9]
3503:..\src/command_processing.c ****     
3504:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 23919              		.loc 1 3504 0
 23920 0064 1C4B     		ldr	r3, .L929
 23921 0066 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 23922 006a 012B     		cmp	r3, #1
 23923 006c 0DD1     		bne	.L927
3505:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 23924              		.loc 1 3505 0
 23925 006e 1B4B     		ldr	r3, .L929+4
 23926 0070 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23927 0074 1946     		mov	r1, r3
 23928 0076 1A4A     		ldr	r2, .L929+8
 23929 0078 3423     		movs	r3, #52
 23930 007a 03FB01F3 		mul	r3, r3, r1
 23931 007e 1344     		add	r3, r3, r2
 23932 0080 0C33     		adds	r3, r3, #12
 23933 0082 1B68     		ldr	r3, [r3]
 23934 0084 1BB2     		sxth	r3, r3
 23935 0086 FB80     		strh	r3, [r7, #6]	@ movhi
 23936 0088 0CE0     		b	.L928
 23937              	.L927:
3506:..\src/command_processing.c ****     }
3507:..\src/command_processing.c ****     else {
3508:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 23938              		.loc 1 3508 0
 23939 008a 144B     		ldr	r3, .L929+4
 23940 008c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23941 0090 1946     		mov	r1, r3
 23942 0092 134A     		ldr	r2, .L929+8
 23943 0094 3423     		movs	r3, #52
 23944 0096 03FB01F3 		mul	r3, r3, r1
 23945 009a 1344     		add	r3, r3, r2
 23946 009c 1033     		adds	r3, r3, #16
 23947 009e 1B68     		ldr	r3, [r3]
 23948 00a0 1BB2     		sxth	r3, r3
 23949 00a2 FB80     		strh	r3, [r7, #6]	@ movhi
 23950              	.L928:
3509:..\src/command_processing.c ****     }
3510:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 23951              		.loc 1 3510 0
 23952 00a4 BB1D     		adds	r3, r7, #6
 23953 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23954 00a8 3B73     		strb	r3, [r7, #12]
3511:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 525


 23955              		.loc 1 3511 0
 23956 00aa BB1D     		adds	r3, r7, #6
 23957 00ac 0133     		adds	r3, r3, #1
 23958 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23959 00b0 FB72     		strb	r3, [r7, #11]
3512:..\src/command_processing.c **** 
3513:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3514:..\src/command_processing.c **** 
3515:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 23960              		.loc 1 3515 0
 23961 00b2 07F10803 		add	r3, r7, #8
 23962 00b6 0521     		movs	r1, #5
 23963 00b8 1846     		mov	r0, r3
 23964 00ba FFF7FEFF 		bl	LCRChecksum
 23965 00be 0346     		mov	r3, r0
 23966 00c0 7B73     		strb	r3, [r7, #13]
3516:..\src/command_processing.c ****     
3517:..\src/command_processing.c ****     commWrite(packet_data, 6);
 23967              		.loc 1 3517 0
 23968 00c2 07F10803 		add	r3, r7, #8
 23969 00c6 0621     		movs	r1, #6
 23970 00c8 1846     		mov	r0, r3
 23971 00ca FFF7FEFF 		bl	commWrite
3518:..\src/command_processing.c **** }
 23972              		.loc 1 3518 0
 23973 00ce 00BF     		nop
 23974 00d0 1437     		adds	r7, r7, #20
 23975              		.cfi_def_cfa_offset 12
 23976 00d2 BD46     		mov	sp, r7
 23977              		.cfi_def_cfa_register 13
 23978              		@ sp needed
 23979 00d4 90BD     		pop	{r4, r7, pc}
 23980              	.L930:
 23981 00d6 00BF     		.align	2
 23982              	.L929:
 23983 00d8 00000000 		.word	c_mem
 23984 00dc 00000000 		.word	g_mem
 23985 00e0 00000000 		.word	g_measOld
 23986 00e4 00000000 		.word	g_fb_meas
 23987 00e8 00005940 		.word	1079574528
 23988              		.cfi_endproc
 23989              	.LFE99:
 23990              		.size	cmd_get_currents, .-cmd_get_currents
 23991              		.section	.text.cmd_get_currents_for_cuff,"ax",%progbits
 23992              		.align	2
 23993              		.global	cmd_get_currents_for_cuff
 23994              		.thumb
 23995              		.thumb_func
 23996              		.type	cmd_get_currents_for_cuff, %function
 23997              	cmd_get_currents_for_cuff:
 23998              	.LFB100:
3519:..\src/command_processing.c **** 
3520:..\src/command_processing.c **** void cmd_get_currents_for_cuff(){
 23999              		.loc 1 3520 0
 24000              		.cfi_startproc
 24001              		@ args = 0, pretend = 0, frame = 8
 24002              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 526


 24003 0000 80B5     		push	{r7, lr}
 24004              		.cfi_def_cfa_offset 8
 24005              		.cfi_offset 7, -8
 24006              		.cfi_offset 14, -4
 24007 0002 82B0     		sub	sp, sp, #8
 24008              		.cfi_def_cfa_offset 16
 24009 0004 00AF     		add	r7, sp, #0
 24010              		.cfi_def_cfa_register 7
3521:..\src/command_processing.c ****     
3522:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3523:..\src/command_processing.c ****     
3524:..\src/command_processing.c ****     uint8 packet_data[4]; 
3525:..\src/command_processing.c ****     int16 aux_int16;
3526:..\src/command_processing.c ****     
3527:..\src/command_processing.c ****     //Header package
3528:..\src/command_processing.c **** 
3529:..\src/command_processing.c ****     packet_data[0] = CMD_SET_CUFF_INPUTS;
 24011              		.loc 1 3529 0
 24012 0006 8E23     		movs	r3, #142
 24013 0008 3B71     		strb	r3, [r7, #4]
3530:..\src/command_processing.c **** 
3531:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated Current
 24014              		.loc 1 3531 0
 24015 000a 144B     		ldr	r3, .L932
 24016 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24017 0010 1946     		mov	r1, r3
 24018 0012 134A     		ldr	r2, .L932+4
 24019 0014 3423     		movs	r3, #52
 24020 0016 03FB01F3 		mul	r3, r3, r1
 24021 001a 1344     		add	r3, r3, r2
 24022 001c 1033     		adds	r3, r3, #16
 24023 001e 1B68     		ldr	r3, [r3]
 24024 0020 1BB2     		sxth	r3, r3
 24025 0022 7B80     		strh	r3, [r7, #2]	@ movhi
3532:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 24026              		.loc 1 3532 0
 24027 0024 BB1C     		adds	r3, r7, #2
 24028 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24029 0028 BB71     		strb	r3, [r7, #6]
3533:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 24030              		.loc 1 3533 0
 24031 002a BB1C     		adds	r3, r7, #2
 24032 002c 0133     		adds	r3, r3, #1
 24033 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24034 0030 7B71     		strb	r3, [r7, #5]
3534:..\src/command_processing.c **** 
3535:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3536:..\src/command_processing.c **** 
3537:..\src/command_processing.c ****     packet_data[3] = LCRChecksum (packet_data, 3);
 24035              		.loc 1 3537 0
 24036 0032 3B1D     		adds	r3, r7, #4
 24037 0034 0321     		movs	r1, #3
 24038 0036 1846     		mov	r0, r3
 24039 0038 FFF7FEFF 		bl	LCRChecksum
 24040 003c 0346     		mov	r3, r0
 24041 003e FB71     		strb	r3, [r7, #7]
3538:..\src/command_processing.c ****     
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 527


3539:..\src/command_processing.c ****     commWriteID(packet_data, 4, g_mem.dev.id -1);
 24042              		.loc 1 3539 0
 24043 0040 064B     		ldr	r3, .L932
 24044 0042 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 24045 0046 013B     		subs	r3, r3, #1
 24046 0048 DAB2     		uxtb	r2, r3
 24047 004a 3B1D     		adds	r3, r7, #4
 24048 004c 0421     		movs	r1, #4
 24049 004e 1846     		mov	r0, r3
 24050 0050 FFF7FEFF 		bl	commWriteID
3540:..\src/command_processing.c **** }
 24051              		.loc 1 3540 0
 24052 0054 00BF     		nop
 24053 0056 0837     		adds	r7, r7, #8
 24054              		.cfi_def_cfa_offset 8
 24055 0058 BD46     		mov	sp, r7
 24056              		.cfi_def_cfa_register 13
 24057              		@ sp needed
 24058 005a 80BD     		pop	{r7, pc}
 24059              	.L933:
 24060              		.align	2
 24061              	.L932:
 24062 005c 00000000 		.word	g_mem
 24063 0060 00000000 		.word	g_measOld
 24064              		.cfi_endproc
 24065              	.LFE100:
 24066              		.size	cmd_get_currents_for_cuff, .-cmd_get_currents_for_cuff
 24067              		.section	.text.commReadResCurrFromSH,"ax",%progbits
 24068              		.align	2
 24069              		.global	commReadResCurrFromSH
 24070              		.thumb
 24071              		.thumb_func
 24072              		.type	commReadResCurrFromSH, %function
 24073              	commReadResCurrFromSH:
 24074              	.LFB101:
3541:..\src/command_processing.c **** 
3542:..\src/command_processing.c **** //==============================================================================
3543:..\src/command_processing.c **** //                                  READ RESIDUAL CURRENT FUNCTION FROM SOFTHAND
3544:..\src/command_processing.c **** //==============================================================================
3545:..\src/command_processing.c **** 
3546:..\src/command_processing.c **** int16 commReadResCurrFromSH()
3547:..\src/command_processing.c **** {
 24075              		.loc 1 3547 0
 24076              		.cfi_startproc
 24077              		@ args = 0, pretend = 0, frame = 32
 24078              		@ frame_needed = 1, uses_anonymous_args = 0
 24079 0000 80B5     		push	{r7, lr}
 24080              		.cfi_def_cfa_offset 8
 24081              		.cfi_offset 7, -8
 24082              		.cfi_offset 14, -4
 24083 0002 88B0     		sub	sp, sp, #32
 24084              		.cfi_def_cfa_offset 40
 24085 0004 00AF     		add	r7, sp, #0
 24086              		.cfi_def_cfa_register 7
3548:..\src/command_processing.c ****     uint8 packet_data[16];
3549:..\src/command_processing.c ****     uint8 packet_lenght;
3550:..\src/command_processing.c ****     int16 curr_diff = 0;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 528


 24087              		.loc 1 3550 0
 24088 0006 0023     		movs	r3, #0
 24089 0008 FB83     		strh	r3, [r7, #30]	@ movhi
3551:..\src/command_processing.c ****     uint32 t_start, t_end;
3552:..\src/command_processing.c ****     uint8 read_flag = TRUE;
 24090              		.loc 1 3552 0
 24091 000a 0123     		movs	r3, #1
 24092 000c 7B77     		strb	r3, [r7, #29]
3553:..\src/command_processing.c **** 
3554:..\src/command_processing.c ****     packet_lenght = 2;
 24093              		.loc 1 3554 0
 24094 000e 0223     		movs	r3, #2
 24095 0010 3B77     		strb	r3, [r7, #28]
3555:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_DIFF;
 24096              		.loc 1 3555 0
 24097 0012 8C23     		movs	r3, #140
 24098 0014 3B71     		strb	r3, [r7, #4]
3556:..\src/command_processing.c ****     packet_data[1] = CMD_GET_CURR_DIFF;
 24099              		.loc 1 3556 0
 24100 0016 8C23     		movs	r3, #140
 24101 0018 7B71     		strb	r3, [r7, #5]
3557:..\src/command_processing.c ****     commWriteID(packet_data, packet_lenght, c_mem.MS.slave_ID);
 24102              		.loc 1 3557 0
 24103 001a 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 24104 001c 99B2     		uxth	r1, r3
 24105 001e 1D4B     		ldr	r3, .L941
 24106 0020 93F8C122 		ldrb	r2, [r3, #705]	@ zero_extendqisi2
 24107 0024 3B1D     		adds	r3, r7, #4
 24108 0026 1846     		mov	r0, r3
 24109 0028 FFF7FEFF 		bl	commWriteID
3558:..\src/command_processing.c **** 
3559:..\src/command_processing.c ****     t_start = (uint32) MY_TIMER_ReadCounter();
 24110              		.loc 1 3559 0
 24111 002c FFF7FEFF 		bl	MY_TIMER_ReadCounter
 24112 0030 0346     		mov	r3, r0
 24113 0032 BB61     		str	r3, [r7, #24]
3560:..\src/command_processing.c ****     while(g_rx.buffer[0] != CMD_SET_CUFF_INPUTS) {
 24114              		.loc 1 3560 0
 24115 0034 18E0     		b	.L935
 24116              	.L938:
3561:..\src/command_processing.c ****         if (interrupt_flag){
 24117              		.loc 1 3561 0
 24118 0036 184B     		ldr	r3, .L941+4
 24119 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24120 003a 002B     		cmp	r3, #0
 24121 003c 04D0     		beq	.L936
3562:..\src/command_processing.c ****             interrupt_flag = FALSE;
 24122              		.loc 1 3562 0
 24123 003e 164B     		ldr	r3, .L941+4
 24124 0040 0022     		movs	r2, #0
 24125 0042 1A70     		strb	r2, [r3]
3563:..\src/command_processing.c ****             interrupt_manager();
 24126              		.loc 1 3563 0
 24127 0044 FFF7FEFF 		bl	interrupt_manager
 24128              	.L936:
3564:..\src/command_processing.c ****         }
3565:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 529


3566:..\src/command_processing.c ****         t_end = (uint32) MY_TIMER_ReadCounter();
 24129              		.loc 1 3566 0
 24130 0048 FFF7FEFF 		bl	MY_TIMER_ReadCounter
 24131 004c 0346     		mov	r3, r0
 24132 004e 7B61     		str	r3, [r7, #20]
3567:..\src/command_processing.c ****         if((t_start - t_end) > 4500000){            // 4.5 s timeout
 24133              		.loc 1 3567 0
 24134 0050 BA69     		ldr	r2, [r7, #24]
 24135 0052 7B69     		ldr	r3, [r7, #20]
 24136 0054 D31A     		subs	r3, r2, r3
 24137 0056 114A     		ldr	r2, .L941+8
 24138 0058 9342     		cmp	r3, r2
 24139 005a 05D9     		bls	.L935
3568:..\src/command_processing.c ****             read_flag = FALSE;
 24140              		.loc 1 3568 0
 24141 005c 0023     		movs	r3, #0
 24142 005e 7B77     		strb	r3, [r7, #29]
3569:..\src/command_processing.c ****             master_mode = 0;                // Exit from master mode
 24143              		.loc 1 3569 0
 24144 0060 0F4B     		ldr	r3, .L941+12
 24145 0062 0022     		movs	r2, #0
 24146 0064 1A70     		strb	r2, [r3]
3570:..\src/command_processing.c ****             break;
 24147              		.loc 1 3570 0
 24148 0066 03E0     		b	.L937
 24149              	.L935:
3560:..\src/command_processing.c ****         if (interrupt_flag){
 24150              		.loc 1 3560 0
 24151 0068 0E4B     		ldr	r3, .L941+16
 24152 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24153 006c 8E2B     		cmp	r3, #142
 24154 006e E2D1     		bne	.L938
 24155              	.L937:
3571:..\src/command_processing.c ****         }
3572:..\src/command_processing.c ****     }
3573:..\src/command_processing.c **** 
3574:..\src/command_processing.c ****     if (read_flag) {
 24156              		.loc 1 3574 0
 24157 0070 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 24158 0072 002B     		cmp	r3, #0
 24159 0074 08D0     		beq	.L939
3575:..\src/command_processing.c ****         curr_diff = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);                        
 24160              		.loc 1 3575 0
 24161 0076 0B4B     		ldr	r3, .L941+16
 24162 0078 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 24163 007a 1B02     		lsls	r3, r3, #8
 24164 007c 1AB2     		sxth	r2, r3
 24165 007e 094B     		ldr	r3, .L941+16
 24166 0080 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 24167 0082 1BB2     		sxth	r3, r3
 24168 0084 1343     		orrs	r3, r3, r2
 24169 0086 FB83     		strh	r3, [r7, #30]	@ movhi
 24170              	.L939:
3576:..\src/command_processing.c ****     }
3577:..\src/command_processing.c ****     
3578:..\src/command_processing.c ****     return curr_diff;
 24171              		.loc 1 3578 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 530


 24172 0088 B7F91E30 		ldrsh	r3, [r7, #30]
3579:..\src/command_processing.c **** }
 24173              		.loc 1 3579 0
 24174 008c 1846     		mov	r0, r3
 24175 008e 2037     		adds	r7, r7, #32
 24176              		.cfi_def_cfa_offset 8
 24177 0090 BD46     		mov	sp, r7
 24178              		.cfi_def_cfa_register 13
 24179              		@ sp needed
 24180 0092 80BD     		pop	{r7, pc}
 24181              	.L942:
 24182              		.align	2
 24183              	.L941:
 24184 0094 00000000 		.word	c_mem
 24185 0098 00000000 		.word	interrupt_flag
 24186 009c 20AA4400 		.word	4500000
 24187 00a0 00000000 		.word	master_mode
 24188 00a4 00000000 		.word	g_rx
 24189              		.cfi_endproc
 24190              	.LFE101:
 24191              		.size	commReadResCurrFromSH, .-commReadResCurrFromSH
 24192              		.section	.text.cmd_set_baudrate,"ax",%progbits
 24193              		.align	2
 24194              		.global	cmd_set_baudrate
 24195              		.thumb
 24196              		.thumb_func
 24197              		.type	cmd_set_baudrate, %function
 24198              	cmd_set_baudrate:
 24199              	.LFB102:
3580:..\src/command_processing.c **** 
3581:..\src/command_processing.c **** void cmd_set_baudrate(){
 24200              		.loc 1 3581 0
 24201              		.cfi_startproc
 24202              		@ args = 0, pretend = 0, frame = 0
 24203              		@ frame_needed = 1, uses_anonymous_args = 0
 24204 0000 80B5     		push	{r7, lr}
 24205              		.cfi_def_cfa_offset 8
 24206              		.cfi_offset 7, -8
 24207              		.cfi_offset 14, -4
 24208 0002 00AF     		add	r7, sp, #0
 24209              		.cfi_def_cfa_register 7
3582:..\src/command_processing.c ****     
3583:..\src/command_processing.c ****     // Set BaudRate
3584:..\src/command_processing.c ****     c_mem.dev.baud_rate = g_rx.buffer[1];
 24210              		.loc 1 3584 0
 24211 0004 094B     		ldr	r3, .L948
 24212 0006 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 24213 0008 094B     		ldr	r3, .L948+4
 24214 000a 83F8AA20 		strb	r2, [r3, #170]
3585:..\src/command_processing.c ****     
3586:..\src/command_processing.c ****     switch(g_rx.buffer[1]){
 24215              		.loc 1 3586 0
 24216 000e 074B     		ldr	r3, .L948
 24217 0010 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 24218 0012 0D2B     		cmp	r3, #13
 24219 0014 04D1     		bne	.L947
3587:..\src/command_processing.c ****         case 13:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 531


3588:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(13);
 24220              		.loc 1 3588 0
 24221 0016 0121     		movs	r1, #1
 24222 0018 0C20     		movs	r0, #12
 24223 001a FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
3589:..\src/command_processing.c ****             break;
 24224              		.loc 1 3589 0
 24225 001e 03E0     		b	.L946
 24226              	.L947:
3590:..\src/command_processing.c ****         default:
3591:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(3);
 24227              		.loc 1 3591 0
 24228 0020 0121     		movs	r1, #1
 24229 0022 0220     		movs	r0, #2
 24230 0024 FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
 24231              	.L946:
3592:..\src/command_processing.c ****     }
3593:..\src/command_processing.c **** }
 24232              		.loc 1 3593 0
 24233 0028 00BF     		nop
 24234 002a 80BD     		pop	{r7, pc}
 24235              	.L949:
 24236              		.align	2
 24237              	.L948:
 24238 002c 00000000 		.word	g_rx
 24239 0030 00000000 		.word	c_mem
 24240              		.cfi_endproc
 24241              	.LFE102:
 24242              		.size	cmd_set_baudrate, .-cmd_set_baudrate
 24243              		.section	.text.cmd_ping,"ax",%progbits
 24244              		.align	2
 24245              		.global	cmd_ping
 24246              		.thumb
 24247              		.thumb_func
 24248              		.type	cmd_ping, %function
 24249              	cmd_ping:
 24250              	.LFB103:
3594:..\src/command_processing.c **** 
3595:..\src/command_processing.c **** void cmd_ping(){
 24251              		.loc 1 3595 0
 24252              		.cfi_startproc
 24253              		@ args = 0, pretend = 0, frame = 8
 24254              		@ frame_needed = 1, uses_anonymous_args = 0
 24255 0000 80B5     		push	{r7, lr}
 24256              		.cfi_def_cfa_offset 8
 24257              		.cfi_offset 7, -8
 24258              		.cfi_offset 14, -4
 24259 0002 82B0     		sub	sp, sp, #8
 24260              		.cfi_def_cfa_offset 16
 24261 0004 00AF     		add	r7, sp, #0
 24262              		.cfi_def_cfa_register 7
3596:..\src/command_processing.c **** 
3597:..\src/command_processing.c ****     uint8 packet_data[2];
3598:..\src/command_processing.c **** 
3599:..\src/command_processing.c ****     // Header
3600:..\src/command_processing.c ****     packet_data[0] = CMD_PING;
 24263              		.loc 1 3600 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 532


 24264 0006 0023     		movs	r3, #0
 24265 0008 3B71     		strb	r3, [r7, #4]
3601:..\src/command_processing.c ****     
3602:..\src/command_processing.c ****     // Load Payload
3603:..\src/command_processing.c ****     packet_data[1] = CMD_PING;
 24266              		.loc 1 3603 0
 24267 000a 0023     		movs	r3, #0
 24268 000c 7B71     		strb	r3, [r7, #5]
3604:..\src/command_processing.c **** 
3605:..\src/command_processing.c ****     // Send Package to uart
3606:..\src/command_processing.c ****     commWrite(packet_data, 2);
 24269              		.loc 1 3606 0
 24270 000e 3B1D     		adds	r3, r7, #4
 24271 0010 0221     		movs	r1, #2
 24272 0012 1846     		mov	r0, r3
 24273 0014 FFF7FEFF 		bl	commWrite
3607:..\src/command_processing.c **** }
 24274              		.loc 1 3607 0
 24275 0018 00BF     		nop
 24276 001a 0837     		adds	r7, r7, #8
 24277              		.cfi_def_cfa_offset 8
 24278 001c BD46     		mov	sp, r7
 24279              		.cfi_def_cfa_register 13
 24280              		@ sp needed
 24281 001e 80BD     		pop	{r7, pc}
 24282              		.cfi_endproc
 24283              	.LFE103:
 24284              		.size	cmd_ping, .-cmd_ping
 24285              		.section	.text.cmd_get_inputs,"ax",%progbits
 24286              		.align	2
 24287              		.global	cmd_get_inputs
 24288              		.thumb
 24289              		.thumb_func
 24290              		.type	cmd_get_inputs, %function
 24291              	cmd_get_inputs:
 24292              	.LFB104:
3608:..\src/command_processing.c **** 
3609:..\src/command_processing.c **** void cmd_get_inputs(){
 24293              		.loc 1 3609 0
 24294              		.cfi_startproc
 24295              		@ args = 0, pretend = 0, frame = 16
 24296              		@ frame_needed = 1, uses_anonymous_args = 0
 24297 0000 80B5     		push	{r7, lr}
 24298              		.cfi_def_cfa_offset 8
 24299              		.cfi_offset 7, -8
 24300              		.cfi_offset 14, -4
 24301 0002 84B0     		sub	sp, sp, #16
 24302              		.cfi_def_cfa_offset 24
 24303 0004 00AF     		add	r7, sp, #0
 24304              		.cfi_def_cfa_register 7
3610:..\src/command_processing.c **** 
3611:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3612:..\src/command_processing.c **** 
3613:..\src/command_processing.c ****     uint8 packet_data[6]; 
3614:..\src/command_processing.c ****     int16 aux_int16;
3615:..\src/command_processing.c ****     
3616:..\src/command_processing.c ****     //Header package
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 533


3617:..\src/command_processing.c **** 
3618:..\src/command_processing.c ****     packet_data[0] = CMD_GET_INPUTS;
 24305              		.loc 1 3618 0
 24306 0006 8323     		movs	r3, #131
 24307 0008 3B72     		strb	r3, [r7, #8]
3619:..\src/command_processing.c ****         
3620:..\src/command_processing.c ****     aux_int16 = (int16)(g_refOld[0].pos >> g_mem.enc[g_mem.motor[0].encoder_line].res[0]);
 24308              		.loc 1 3620 0
 24309 000a 164B     		ldr	r3, .L952
 24310 000c 1A68     		ldr	r2, [r3]
 24311 000e 164B     		ldr	r3, .L952+4
 24312 0010 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24313 0014 1846     		mov	r0, r3
 24314 0016 1449     		ldr	r1, .L952+4
 24315 0018 0346     		mov	r3, r0
 24316 001a 5B00     		lsls	r3, r3, #1
 24317 001c 0344     		add	r3, r3, r0
 24318 001e 1B01     		lsls	r3, r3, #4
 24319 0020 0B44     		add	r3, r3, r1
 24320 0022 03F29513 		addw	r3, r3, #405
 24321 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24322 0028 42FA03F3 		asr	r3, r2, r3
 24323 002c 1BB2     		sxth	r3, r3
 24324 002e FB80     		strh	r3, [r7, #6]	@ movhi
3621:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 24325              		.loc 1 3621 0
 24326 0030 BB1D     		adds	r3, r7, #6
 24327 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24328 0034 BB72     		strb	r3, [r7, #10]
3622:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 24329              		.loc 1 3622 0
 24330 0036 BB1D     		adds	r3, r7, #6
 24331 0038 0133     		adds	r3, r3, #1
 24332 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24333 003c 7B72     		strb	r3, [r7, #9]
3623:..\src/command_processing.c ****     
3624:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3625:..\src/command_processing.c **** 
3626:..\src/command_processing.c ****     packet_data[5] = LCRChecksum(packet_data, 5);
 24334              		.loc 1 3626 0
 24335 003e 07F10803 		add	r3, r7, #8
 24336 0042 0521     		movs	r1, #5
 24337 0044 1846     		mov	r0, r3
 24338 0046 FFF7FEFF 		bl	LCRChecksum
 24339 004a 0346     		mov	r3, r0
 24340 004c 7B73     		strb	r3, [r7, #13]
3627:..\src/command_processing.c **** 
3628:..\src/command_processing.c ****     commWrite(packet_data, 6);
 24341              		.loc 1 3628 0
 24342 004e 07F10803 		add	r3, r7, #8
 24343 0052 0621     		movs	r1, #6
 24344 0054 1846     		mov	r0, r3
 24345 0056 FFF7FEFF 		bl	commWrite
3629:..\src/command_processing.c **** }
 24346              		.loc 1 3629 0
 24347 005a 00BF     		nop
 24348 005c 1037     		adds	r7, r7, #16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 534


 24349              		.cfi_def_cfa_offset 8
 24350 005e BD46     		mov	sp, r7
 24351              		.cfi_def_cfa_register 13
 24352              		@ sp needed
 24353 0060 80BD     		pop	{r7, pc}
 24354              	.L953:
 24355 0062 00BF     		.align	2
 24356              	.L952:
 24357 0064 00000000 		.word	g_refOld
 24358 0068 00000000 		.word	g_mem
 24359              		.cfi_endproc
 24360              	.LFE104:
 24361              		.size	cmd_get_inputs, .-cmd_get_inputs
 24362              		.section	.text.cmd_store_params,"ax",%progbits
 24363              		.align	2
 24364              		.global	cmd_store_params
 24365              		.thumb
 24366              		.thumb_func
 24367              		.type	cmd_store_params, %function
 24368              	cmd_store_params:
 24369              	.LFB105:
3630:..\src/command_processing.c **** 
3631:..\src/command_processing.c **** void cmd_store_params(){
 24370              		.loc 1 3631 0
 24371              		.cfi_startproc
 24372              		@ args = 0, pretend = 0, frame = 16
 24373              		@ frame_needed = 1, uses_anonymous_args = 0
 24374 0000 80B5     		push	{r7, lr}
 24375              		.cfi_def_cfa_offset 8
 24376              		.cfi_offset 7, -8
 24377              		.cfi_offset 14, -4
 24378 0002 84B0     		sub	sp, sp, #16
 24379              		.cfi_def_cfa_offset 24
 24380 0004 00AF     		add	r7, sp, #0
 24381              		.cfi_def_cfa_register 7
3632:..\src/command_processing.c ****     
3633:..\src/command_processing.c ****     // Check input mode enabled
3634:..\src/command_processing.c ****     uint32 off_1;
3635:..\src/command_processing.c ****     float mult_1;
3636:..\src/command_processing.c ****     uint8 CYDATA packet_lenght = 2;
 24382              		.loc 1 3636 0
 24383 0006 0223     		movs	r3, #2
 24384 0008 FB73     		strb	r3, [r7, #15]
3637:..\src/command_processing.c ****     uint8 CYDATA packet_data[2];
3638:..\src/command_processing.c ****     uint8 CYDATA old_id;
3639:..\src/command_processing.c ****     
3640:..\src/command_processing.c ****     if( c_mem.motor[0].input_mode == INPUT_MODE_EXTERNAL ) {
 24385              		.loc 1 3640 0
 24386 000a 674B     		ldr	r3, .L965
 24387 000c 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 24388 0010 002B     		cmp	r3, #0
 24389 0012 7CD1     		bne	.L955
3641:..\src/command_processing.c ****         off_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_off[0];
 24390              		.loc 1 3641 0
 24391 0014 644B     		ldr	r3, .L965
 24392 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24393 001a 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 535


 24394 001c 624A     		ldr	r2, .L965
 24395 001e 0B46     		mov	r3, r1
 24396 0020 5B00     		lsls	r3, r3, #1
 24397 0022 0B44     		add	r3, r3, r1
 24398 0024 1B01     		lsls	r3, r3, #4
 24399 0026 1344     		add	r3, r3, r2
 24400 0028 03F5CC73 		add	r3, r3, #408
 24401 002c 1B68     		ldr	r3, [r3]
 24402 002e BB60     		str	r3, [r7, #8]
3642:..\src/command_processing.c ****         mult_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_mult[0];
 24403              		.loc 1 3642 0
 24404 0030 5D4B     		ldr	r3, .L965
 24405 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24406 0036 1946     		mov	r1, r3
 24407 0038 5B4A     		ldr	r2, .L965
 24408 003a 0B46     		mov	r3, r1
 24409 003c 5B00     		lsls	r3, r3, #1
 24410 003e 0B44     		add	r3, r3, r1
 24411 0040 1B01     		lsls	r3, r3, #4
 24412 0042 1344     		add	r3, r3, r2
 24413 0044 03F5D273 		add	r3, r3, #420
 24414 0048 1B68     		ldr	r3, [r3]	@ float
 24415 004a 7B60     		str	r3, [r7, #4]	@ float
3643:..\src/command_processing.c **** 
3644:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos / mult_1);
 24416              		.loc 1 3644 0
 24417 004c 574B     		ldr	r3, .L965+4
 24418 004e 1B68     		ldr	r3, [r3]
 24419 0050 1846     		mov	r0, r3
 24420 0052 FFF7FEFF 		bl	__aeabi_i2f
 24421 0056 0346     		mov	r3, r0
 24422 0058 7968     		ldr	r1, [r7, #4]	@ float
 24423 005a 1846     		mov	r0, r3
 24424 005c FFF7FEFF 		bl	__aeabi_fdiv
 24425 0060 0346     		mov	r3, r0
 24426 0062 1846     		mov	r0, r3
 24427 0064 FFF7FEFF 		bl	__aeabi_f2iz
 24428 0068 0246     		mov	r2, r0
 24429 006a 504B     		ldr	r3, .L965+4
 24430 006c 1A60     		str	r2, [r3]
3645:..\src/command_processing.c **** 
3646:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos * g_mem.enc[c_mem.motor[0].encoder_line].m
 24431              		.loc 1 3646 0
 24432 006e 4F4B     		ldr	r3, .L965+4
 24433 0070 1B68     		ldr	r3, [r3]
 24434 0072 1846     		mov	r0, r3
 24435 0074 FFF7FEFF 		bl	__aeabi_i2f
 24436 0078 4B4B     		ldr	r3, .L965
 24437 007a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24438 007e 1946     		mov	r1, r3
 24439 0080 4B4A     		ldr	r2, .L965+8
 24440 0082 0B46     		mov	r3, r1
 24441 0084 5B00     		lsls	r3, r3, #1
 24442 0086 0B44     		add	r3, r3, r1
 24443 0088 1B01     		lsls	r3, r3, #4
 24444 008a 1344     		add	r3, r3, r2
 24445 008c 03F5D273 		add	r3, r3, #420
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 536


 24446 0090 1B68     		ldr	r3, [r3]	@ float
 24447 0092 1946     		mov	r1, r3
 24448 0094 FFF7FEFF 		bl	__aeabi_fmul
 24449 0098 0346     		mov	r3, r0
 24450 009a 1846     		mov	r0, r3
 24451 009c FFF7FEFF 		bl	__aeabi_f2iz
 24452 00a0 0246     		mov	r2, r0
 24453 00a2 424B     		ldr	r3, .L965+4
 24454 00a4 1A60     		str	r2, [r3]
3647:..\src/command_processing.c **** 
3648:..\src/command_processing.c ****         g_refNew[0].pos += (g_mem.enc[c_mem.motor[0].encoder_line].m_off[0] - off_1);
 24455              		.loc 1 3648 0
 24456 00a6 414B     		ldr	r3, .L965+4
 24457 00a8 1B68     		ldr	r3, [r3]
 24458 00aa 1846     		mov	r0, r3
 24459 00ac 3E4B     		ldr	r3, .L965
 24460 00ae 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24461 00b2 1946     		mov	r1, r3
 24462 00b4 3E4A     		ldr	r2, .L965+8
 24463 00b6 0B46     		mov	r3, r1
 24464 00b8 5B00     		lsls	r3, r3, #1
 24465 00ba 0B44     		add	r3, r3, r1
 24466 00bc 1B01     		lsls	r3, r3, #4
 24467 00be 1344     		add	r3, r3, r2
 24468 00c0 03F5CC73 		add	r3, r3, #408
 24469 00c4 1B68     		ldr	r3, [r3]
 24470 00c6 1A46     		mov	r2, r3
 24471 00c8 BB68     		ldr	r3, [r7, #8]
 24472 00ca D31A     		subs	r3, r2, r3
 24473 00cc 0344     		add	r3, r3, r0
 24474 00ce 1A46     		mov	r2, r3
 24475 00d0 364B     		ldr	r3, .L965+4
 24476 00d2 1A60     		str	r2, [r3]
3649:..\src/command_processing.c ****         
3650:..\src/command_processing.c ****         // Check position Limits
3651:..\src/command_processing.c **** 
3652:..\src/command_processing.c ****         if (c_mem.motor[0].pos_lim_flag) {                   // position limiting
 24477              		.loc 1 3652 0
 24478 00d4 344B     		ldr	r3, .L965
 24479 00d6 93F8E330 		ldrb	r3, [r3, #227]	@ zero_extendqisi2
 24480 00da 002B     		cmp	r3, #0
 24481 00dc 17D0     		beq	.L955
3653:..\src/command_processing.c ****             if (g_refNew[0].pos < c_mem.motor[0].pos_lim_inf) 
 24482              		.loc 1 3653 0
 24483 00de 334B     		ldr	r3, .L965+4
 24484 00e0 1A68     		ldr	r2, [r3]
 24485 00e2 314B     		ldr	r3, .L965
 24486 00e4 D3F8E430 		ldr	r3, [r3, #228]
 24487 00e8 9A42     		cmp	r2, r3
 24488 00ea 04DA     		bge	.L956
3654:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_inf;
 24489              		.loc 1 3654 0
 24490 00ec 2E4B     		ldr	r3, .L965
 24491 00ee D3F8E430 		ldr	r3, [r3, #228]
 24492 00f2 2E4A     		ldr	r2, .L965+4
 24493 00f4 1360     		str	r3, [r2]
 24494              	.L956:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 537


3655:..\src/command_processing.c **** 
3656:..\src/command_processing.c ****             if (g_refNew[0].pos > c_mem.motor[0].pos_lim_sup) 
 24495              		.loc 1 3656 0
 24496 00f6 2D4B     		ldr	r3, .L965+4
 24497 00f8 1A68     		ldr	r2, [r3]
 24498 00fa 2B4B     		ldr	r3, .L965
 24499 00fc D3F8E830 		ldr	r3, [r3, #232]
 24500 0100 9A42     		cmp	r2, r3
 24501 0102 04DD     		ble	.L955
3657:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_sup;
 24502              		.loc 1 3657 0
 24503 0104 284B     		ldr	r3, .L965
 24504 0106 D3F8E830 		ldr	r3, [r3, #232]
 24505 010a 284A     		ldr	r2, .L965+4
 24506 010c 1360     		str	r3, [r2]
 24507              	.L955:
3658:..\src/command_processing.c ****         }
3659:..\src/command_processing.c ****     }
3660:..\src/command_processing.c ****     
3661:..\src/command_processing.c ****     // If SD is used, create new param and data file
3662:..\src/command_processing.c ****     if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 24508              		.loc 1 3662 0
 24509 010e 264B     		ldr	r3, .L965
 24510 0110 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 24511 0114 012B     		cmp	r3, #1
 24512 0116 06D1     		bne	.L957
3663:..\src/command_processing.c ****         FS_FClose(pFile);
 24513              		.loc 1 3663 0
 24514 0118 264B     		ldr	r3, .L965+12
 24515 011a 1B68     		ldr	r3, [r3]
 24516 011c 1846     		mov	r0, r3
 24517 011e FFF7FEFF 		bl	FS_FClose
3664:..\src/command_processing.c ****         
3665:..\src/command_processing.c ****         InitSD_FS();
 24518              		.loc 1 3665 0
 24519 0122 FFF7FEFF 		bl	InitSD_FS
 24520              	.L957:
3666:..\src/command_processing.c ****     }
3667:..\src/command_processing.c ****    
3668:..\src/command_processing.c ****     // Store params 
3669:..\src/command_processing.c **** 
3670:..\src/command_processing.c ****     if (c_mem.dev.id != g_mem.dev.id) {     //If a new id is going to be set we will lose communica
 24521              		.loc 1 3670 0
 24522 0126 204B     		ldr	r3, .L965
 24523 0128 93F8A020 		ldrb	r2, [r3, #160]	@ zero_extendqisi2
 24524 012c 204B     		ldr	r3, .L965+8
 24525 012e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 24526 0132 9A42     		cmp	r2, r3
 24527 0134 21D0     		beq	.L958
3671:..\src/command_processing.c ****         old_id = c_mem.dev.id;          //after the memstore(0) and the ACK won't be recognised
 24528              		.loc 1 3671 0
 24529 0136 1C4B     		ldr	r3, .L965
 24530 0138 93F8A030 		ldrb	r3, [r3, #160]
 24531 013c FB70     		strb	r3, [r7, #3]
3672:..\src/command_processing.c ****         if(memStore(0)) {
 24532              		.loc 1 3672 0
 24533 013e 0020     		movs	r0, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 538


 24534 0140 FFF7FEFF 		bl	memStore
 24535 0144 0346     		mov	r3, r0
 24536 0146 002B     		cmp	r3, #0
 24537 0148 0BD0     		beq	.L959
3673:..\src/command_processing.c ****             packet_data[0] = ACK_OK;
 24538              		.loc 1 3673 0
 24539 014a 0123     		movs	r3, #1
 24540 014c 3B70     		strb	r3, [r7]
3674:..\src/command_processing.c ****             packet_data[1] = ACK_OK;
 24541              		.loc 1 3674 0
 24542 014e 0123     		movs	r3, #1
 24543 0150 7B70     		strb	r3, [r7, #1]
3675:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 24544              		.loc 1 3675 0
 24545 0152 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24546 0154 99B2     		uxth	r1, r3
 24547 0156 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 24548 0158 3B46     		mov	r3, r7
 24549 015a 1846     		mov	r0, r3
 24550 015c FFF7FEFF 		bl	commWrite_old_id
 24551 0160 18E0     		b	.L961
 24552              	.L959:
3676:..\src/command_processing.c ****         }    
3677:..\src/command_processing.c ****         else{
3678:..\src/command_processing.c ****             packet_data[0] = ACK_ERROR;
 24553              		.loc 1 3678 0
 24554 0162 0023     		movs	r3, #0
 24555 0164 3B70     		strb	r3, [r7]
3679:..\src/command_processing.c ****             packet_data[1] = ACK_ERROR;
 24556              		.loc 1 3679 0
 24557 0166 0023     		movs	r3, #0
 24558 0168 7B70     		strb	r3, [r7, #1]
3680:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 24559              		.loc 1 3680 0
 24560 016a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24561 016c 99B2     		uxth	r1, r3
 24562 016e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 24563 0170 3B46     		mov	r3, r7
 24564 0172 1846     		mov	r0, r3
 24565 0174 FFF7FEFF 		bl	commWrite_old_id
 24566 0178 0CE0     		b	.L961
 24567              	.L958:
3681:..\src/command_processing.c ****         }
3682:..\src/command_processing.c ****     }    
3683:..\src/command_processing.c ****     else {
3684:..\src/command_processing.c ****         if(memStore(0))
 24568              		.loc 1 3684 0
 24569 017a 0020     		movs	r0, #0
 24570 017c FFF7FEFF 		bl	memStore
 24571 0180 0346     		mov	r3, r0
 24572 0182 002B     		cmp	r3, #0
 24573 0184 03D0     		beq	.L962
3685:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 24574              		.loc 1 3685 0
 24575 0186 0120     		movs	r0, #1
 24576 0188 FFF7FEFF 		bl	sendAcknowledgment
 24577 018c 02E0     		b	.L961
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 539


 24578              	.L962:
3686:..\src/command_processing.c ****         else
3687:..\src/command_processing.c ****             sendAcknowledgment(ACK_ERROR);
 24579              		.loc 1 3687 0
 24580 018e 0020     		movs	r0, #0
 24581 0190 FFF7FEFF 		bl	sendAcknowledgment
 24582              	.L961:
3688:..\src/command_processing.c ****     }
3689:..\src/command_processing.c ****     
3690:..\src/command_processing.c ****     // FW reset (if necessary)
3691:..\src/command_processing.c ****     if (reset_PSoC_flag == TRUE) {
 24583              		.loc 1 3691 0
 24584 0194 084B     		ldr	r3, .L965+16
 24585 0196 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24586 0198 012B     		cmp	r3, #1
 24587 019a 01D1     		bne	.L964
3692:..\src/command_processing.c ****         CySoftwareReset();
 24588              		.loc 1 3692 0
 24589 019c FFF7FEFF 		bl	CySoftwareReset
 24590              	.L964:
3693:..\src/command_processing.c ****     }
3694:..\src/command_processing.c **** }
 24591              		.loc 1 3694 0
 24592 01a0 00BF     		nop
 24593 01a2 1037     		adds	r7, r7, #16
 24594              		.cfi_def_cfa_offset 8
 24595 01a4 BD46     		mov	sp, r7
 24596              		.cfi_def_cfa_register 13
 24597              		@ sp needed
 24598 01a6 80BD     		pop	{r7, pc}
 24599              	.L966:
 24600              		.align	2
 24601              	.L965:
 24602 01a8 00000000 		.word	c_mem
 24603 01ac 00000000 		.word	g_refNew
 24604 01b0 00000000 		.word	g_mem
 24605 01b4 00000000 		.word	pFile
 24606 01b8 00000000 		.word	reset_PSoC_flag
 24607              		.cfi_endproc
 24608              	.LFE105:
 24609              		.size	cmd_store_params, .-cmd_store_params
 24610              		.section	.text.cmd_get_emg,"ax",%progbits
 24611              		.align	2
 24612              		.global	cmd_get_emg
 24613              		.thumb
 24614              		.thumb_func
 24615              		.type	cmd_get_emg, %function
 24616              	cmd_get_emg:
 24617              	.LFB106:
3695:..\src/command_processing.c **** 
3696:..\src/command_processing.c **** void cmd_get_emg(){
 24618              		.loc 1 3696 0
 24619              		.cfi_startproc
 24620              		@ args = 0, pretend = 0, frame = 16
 24621              		@ frame_needed = 1, uses_anonymous_args = 0
 24622 0000 80B5     		push	{r7, lr}
 24623              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 540


 24624              		.cfi_offset 7, -8
 24625              		.cfi_offset 14, -4
 24626 0002 84B0     		sub	sp, sp, #16
 24627              		.cfi_def_cfa_offset 24
 24628 0004 00AF     		add	r7, sp, #0
 24629              		.cfi_def_cfa_register 7
3697:..\src/command_processing.c ****     
3698:..\src/command_processing.c ****     uint8 packet_data[6];
3699:..\src/command_processing.c ****     int16 aux_int16;
3700:..\src/command_processing.c ****     
3701:..\src/command_processing.c ****     // Header        
3702:..\src/command_processing.c ****     packet_data[0] = CMD_GET_EMG;
 24630              		.loc 1 3702 0
 24631 0006 8823     		movs	r3, #136
 24632 0008 3B72     		strb	r3, [r7, #8]
3703:..\src/command_processing.c ****     
3704:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.emg[0];
 24633              		.loc 1 3704 0
 24634 000a 144B     		ldr	r3, .L968
 24635 000c 1B68     		ldr	r3, [r3]
 24636 000e 1BB2     		sxth	r3, r3
 24637 0010 FB80     		strh	r3, [r7, #6]	@ movhi
3705:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 24638              		.loc 1 3705 0
 24639 0012 BB1D     		adds	r3, r7, #6
 24640 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24641 0016 BB72     		strb	r3, [r7, #10]
3706:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 24642              		.loc 1 3706 0
 24643 0018 BB1D     		adds	r3, r7, #6
 24644 001a 0133     		adds	r3, r3, #1
 24645 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24646 001e 7B72     		strb	r3, [r7, #9]
3707:..\src/command_processing.c ****     
3708:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.emg[1];
 24647              		.loc 1 3708 0
 24648 0020 0E4B     		ldr	r3, .L968
 24649 0022 5B68     		ldr	r3, [r3, #4]
 24650 0024 1BB2     		sxth	r3, r3
 24651 0026 FB80     		strh	r3, [r7, #6]	@ movhi
3709:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 24652              		.loc 1 3709 0
 24653 0028 BB1D     		adds	r3, r7, #6
 24654 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24655 002c 3B73     		strb	r3, [r7, #12]
3710:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 24656              		.loc 1 3710 0
 24657 002e BB1D     		adds	r3, r7, #6
 24658 0030 0133     		adds	r3, r3, #1
 24659 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24660 0034 FB72     		strb	r3, [r7, #11]
3711:..\src/command_processing.c **** 
3712:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 24661              		.loc 1 3712 0
 24662 0036 07F10803 		add	r3, r7, #8
 24663 003a 0521     		movs	r1, #5
 24664 003c 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 541


 24665 003e FFF7FEFF 		bl	LCRChecksum
 24666 0042 0346     		mov	r3, r0
 24667 0044 7B73     		strb	r3, [r7, #13]
3713:..\src/command_processing.c **** 
3714:..\src/command_processing.c ****     commWrite(packet_data, 6);
 24668              		.loc 1 3714 0
 24669 0046 07F10803 		add	r3, r7, #8
 24670 004a 0621     		movs	r1, #6
 24671 004c 1846     		mov	r0, r3
 24672 004e FFF7FEFF 		bl	commWrite
3715:..\src/command_processing.c **** 
3716:..\src/command_processing.c **** }
 24673              		.loc 1 3716 0
 24674 0052 00BF     		nop
 24675 0054 1037     		adds	r7, r7, #16
 24676              		.cfi_def_cfa_offset 8
 24677 0056 BD46     		mov	sp, r7
 24678              		.cfi_def_cfa_register 13
 24679              		@ sp needed
 24680 0058 80BD     		pop	{r7, pc}
 24681              	.L969:
 24682 005a 00BF     		.align	2
 24683              	.L968:
 24684 005c 00000000 		.word	g_adc_measOld
 24685              		.cfi_endproc
 24686              	.LFE106:
 24687              		.size	cmd_get_emg, .-cmd_get_emg
 24688              		.section	.text.cmd_get_imu_readings,"ax",%progbits
 24689              		.align	2
 24690              		.global	cmd_get_imu_readings
 24691              		.thumb
 24692              		.thumb_func
 24693              		.type	cmd_get_imu_readings, %function
 24694              	cmd_get_imu_readings:
 24695              	.LFB107:
3717:..\src/command_processing.c **** 
3718:..\src/command_processing.c **** void cmd_get_imu_readings(){
 24696              		.loc 1 3718 0
 24697              		.cfi_startproc
 24698              		@ args = 0, pretend = 0, frame = 400
 24699              		@ frame_needed = 1, uses_anonymous_args = 0
 24700 0000 90B5     		push	{r4, r7, lr}
 24701              		.cfi_def_cfa_offset 12
 24702              		.cfi_offset 4, -12
 24703              		.cfi_offset 7, -8
 24704              		.cfi_offset 14, -4
 24705 0002 E5B0     		sub	sp, sp, #404
 24706              		.cfi_def_cfa_offset 416
 24707 0004 00AF     		add	r7, sp, #0
 24708              		.cfi_def_cfa_register 7
3719:..\src/command_processing.c ****     //Retrieve accelerometers, gyroscopes, magnetometers, quaternions and temperatures readings
3720:..\src/command_processing.c ****     
3721:..\src/command_processing.c ****     uint8 k_imu;
3722:..\src/command_processing.c ****     uint16 c = 1;
 24709              		.loc 1 3722 0
 24710 0006 0123     		movs	r3, #1
 24711 0008 A7F88C31 		strh	r3, [r7, #396]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 542


3723:..\src/command_processing.c ****     uint8 k = 0;
 24712              		.loc 1 3723 0
 24713 000c 0023     		movs	r3, #0
 24714 000e 87F88B31 		strb	r3, [r7, #395]
3724:..\src/command_processing.c ****     uint16 gl_c = 1;
 24715              		.loc 1 3724 0
 24716 0012 0123     		movs	r3, #1
 24717 0014 A7F88831 		strh	r3, [r7, #392]	@ movhi
3725:..\src/command_processing.c ****     int16 aux_int16;
3726:..\src/command_processing.c ****     float aux_float;
3727:..\src/command_processing.c ****     
3728:..\src/command_processing.c ****     // Packet: header + imu id(uint8) + imu flags(uint8) + crc  
3729:..\src/command_processing.c ****     uint8 packet_data[350];
3730:..\src/command_processing.c ****     uint8 single_packet[32];
3731:..\src/command_processing.c ****     
3732:..\src/command_processing.c ****     //Header package 
3733:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_READINGS;
 24718              		.loc 1 3733 0
 24719 0018 07F12003 		add	r3, r7, #32
 24720 001c A122     		movs	r2, #161
 24721 001e 1A70     		strb	r2, [r3]
3734:..\src/command_processing.c ****  
3735:..\src/command_processing.c ****     for (k_imu = 0; k_imu < N_IMU_Connected; k_imu++) 
 24722              		.loc 1 3735 0
 24723 0020 0023     		movs	r3, #0
 24724 0022 87F88F31 		strb	r3, [r7, #399]
 24725 0026 82E2     		b	.L971
 24726              	.L987:
3736:..\src/command_processing.c ****     {	
3737:..\src/command_processing.c ****             
3738:..\src/command_processing.c ****         single_packet[0] = (uint8) 0x3A; //':';
 24727              		.loc 1 3738 0
 24728 0028 3B46     		mov	r3, r7
 24729 002a 3A22     		movs	r2, #58
 24730 002c 1A70     		strb	r2, [r3]
3739:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][0]){
 24731              		.loc 1 3739 0
 24732 002e 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24733 0032 DB4A     		ldr	r2, .L988
 24734 0034 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24735 0036 1946     		mov	r1, r3
 24736 0038 DA4A     		ldr	r2, .L988+4
 24737 003a 0B46     		mov	r3, r1
 24738 003c 9B00     		lsls	r3, r3, #2
 24739 003e 0B44     		add	r3, r3, r1
 24740 0040 1344     		add	r3, r3, r2
 24741 0042 03F20223 		addw	r3, r3, #514
 24742 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24743 0048 002B     		cmp	r3, #0
 24744 004a 5DD0     		beq	.L972
3740:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[0];
 24745              		.loc 1 3740 0
 24746 004c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24747 0050 D549     		ldr	r1, .L988+8
 24748 0052 1346     		mov	r3, r2
 24749 0054 9B00     		lsls	r3, r3, #2
 24750 0056 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 543


 24751 0058 DB00     		lsls	r3, r3, #3
 24752 005a 0B44     		add	r3, r3, r1
 24753 005c 0233     		adds	r3, r3, #2
 24754 005e B3F90030 		ldrsh	r3, [r3]
 24755 0062 A7F88631 		strh	r3, [r7, #390]	@ movhi
3741:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 24756              		.loc 1 3741 0
 24757 0066 B7F88C31 		ldrh	r3, [r7, #396]
 24758 006a 0133     		adds	r3, r3, #1
 24759 006c 07F5C372 		add	r2, r7, #390
 24760 0070 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24761 0072 3A46     		mov	r2, r7
 24762 0074 D154     		strb	r1, [r2, r3]
3742:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 24763              		.loc 1 3742 0
 24764 0076 B7F88C21 		ldrh	r2, [r7, #396]
 24765 007a 07F5C373 		add	r3, r7, #390
 24766 007e 0133     		adds	r3, r3, #1
 24767 0080 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24768 0082 3B46     		mov	r3, r7
 24769 0084 9954     		strb	r1, [r3, r2]
3743:..\src/command_processing.c **** 
3744:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[1];
 24770              		.loc 1 3744 0
 24771 0086 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24772 008a C749     		ldr	r1, .L988+8
 24773 008c 1346     		mov	r3, r2
 24774 008e 9B00     		lsls	r3, r3, #2
 24775 0090 1344     		add	r3, r3, r2
 24776 0092 DB00     		lsls	r3, r3, #3
 24777 0094 0B44     		add	r3, r3, r1
 24778 0096 0433     		adds	r3, r3, #4
 24779 0098 B3F90030 		ldrsh	r3, [r3]
 24780 009c A7F88631 		strh	r3, [r7, #390]	@ movhi
3745:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 24781              		.loc 1 3745 0
 24782 00a0 B7F88C31 		ldrh	r3, [r7, #396]
 24783 00a4 0333     		adds	r3, r3, #3
 24784 00a6 07F5C372 		add	r2, r7, #390
 24785 00aa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24786 00ac 3A46     		mov	r2, r7
 24787 00ae D154     		strb	r1, [r2, r3]
3746:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 24788              		.loc 1 3746 0
 24789 00b0 B7F88C31 		ldrh	r3, [r7, #396]
 24790 00b4 9A1C     		adds	r2, r3, #2
 24791 00b6 07F5C373 		add	r3, r7, #390
 24792 00ba 0133     		adds	r3, r3, #1
 24793 00bc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24794 00be 3B46     		mov	r3, r7
 24795 00c0 9954     		strb	r1, [r3, r2]
3747:..\src/command_processing.c **** 
3748:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[2];
 24796              		.loc 1 3748 0
 24797 00c2 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24798 00c6 B849     		ldr	r1, .L988+8
 24799 00c8 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 544


 24800 00ca 9B00     		lsls	r3, r3, #2
 24801 00cc 1344     		add	r3, r3, r2
 24802 00ce DB00     		lsls	r3, r3, #3
 24803 00d0 0B44     		add	r3, r3, r1
 24804 00d2 0633     		adds	r3, r3, #6
 24805 00d4 B3F90030 		ldrsh	r3, [r3]
 24806 00d8 A7F88631 		strh	r3, [r7, #390]	@ movhi
3749:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 24807              		.loc 1 3749 0
 24808 00dc B7F88C31 		ldrh	r3, [r7, #396]
 24809 00e0 0533     		adds	r3, r3, #5
 24810 00e2 07F5C372 		add	r2, r7, #390
 24811 00e6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24812 00e8 3A46     		mov	r2, r7
 24813 00ea D154     		strb	r1, [r2, r3]
3750:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 24814              		.loc 1 3750 0
 24815 00ec B7F88C31 		ldrh	r3, [r7, #396]
 24816 00f0 1A1D     		adds	r2, r3, #4
 24817 00f2 07F5C373 		add	r3, r7, #390
 24818 00f6 0133     		adds	r3, r3, #1
 24819 00f8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24820 00fa 3B46     		mov	r3, r7
 24821 00fc 9954     		strb	r1, [r3, r2]
3751:..\src/command_processing.c **** 
3752:..\src/command_processing.c ****             c = c + 6;
 24822              		.loc 1 3752 0
 24823 00fe B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 24824 0102 0633     		adds	r3, r3, #6
 24825 0104 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 24826              	.L972:
3753:..\src/command_processing.c ****         }
3754:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][1]){
 24827              		.loc 1 3754 0
 24828 0108 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24829 010c A44A     		ldr	r2, .L988
 24830 010e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24831 0110 1946     		mov	r1, r3
 24832 0112 A44A     		ldr	r2, .L988+4
 24833 0114 0B46     		mov	r3, r1
 24834 0116 9B00     		lsls	r3, r3, #2
 24835 0118 0B44     		add	r3, r3, r1
 24836 011a 1344     		add	r3, r3, r2
 24837 011c 03F20323 		addw	r3, r3, #515
 24838 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24839 0122 002B     		cmp	r3, #0
 24840 0124 5DD0     		beq	.L973
3755:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[0];
 24841              		.loc 1 3755 0
 24842 0126 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24843 012a 9F49     		ldr	r1, .L988+8
 24844 012c 1346     		mov	r3, r2
 24845 012e 9B00     		lsls	r3, r3, #2
 24846 0130 1344     		add	r3, r3, r2
 24847 0132 DB00     		lsls	r3, r3, #3
 24848 0134 0B44     		add	r3, r3, r1
 24849 0136 0833     		adds	r3, r3, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 545


 24850 0138 B3F90030 		ldrsh	r3, [r3]
 24851 013c A7F88631 		strh	r3, [r7, #390]	@ movhi
3756:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 24852              		.loc 1 3756 0
 24853 0140 B7F88C31 		ldrh	r3, [r7, #396]
 24854 0144 0133     		adds	r3, r3, #1
 24855 0146 07F5C372 		add	r2, r7, #390
 24856 014a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24857 014c 3A46     		mov	r2, r7
 24858 014e D154     		strb	r1, [r2, r3]
3757:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 24859              		.loc 1 3757 0
 24860 0150 B7F88C21 		ldrh	r2, [r7, #396]
 24861 0154 07F5C373 		add	r3, r7, #390
 24862 0158 0133     		adds	r3, r3, #1
 24863 015a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24864 015c 3B46     		mov	r3, r7
 24865 015e 9954     		strb	r1, [r3, r2]
3758:..\src/command_processing.c **** 
3759:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[1];
 24866              		.loc 1 3759 0
 24867 0160 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24868 0164 9049     		ldr	r1, .L988+8
 24869 0166 1346     		mov	r3, r2
 24870 0168 9B00     		lsls	r3, r3, #2
 24871 016a 1344     		add	r3, r3, r2
 24872 016c DB00     		lsls	r3, r3, #3
 24873 016e 0B44     		add	r3, r3, r1
 24874 0170 0A33     		adds	r3, r3, #10
 24875 0172 B3F90030 		ldrsh	r3, [r3]
 24876 0176 A7F88631 		strh	r3, [r7, #390]	@ movhi
3760:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 24877              		.loc 1 3760 0
 24878 017a B7F88C31 		ldrh	r3, [r7, #396]
 24879 017e 0333     		adds	r3, r3, #3
 24880 0180 07F5C372 		add	r2, r7, #390
 24881 0184 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24882 0186 3A46     		mov	r2, r7
 24883 0188 D154     		strb	r1, [r2, r3]
3761:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 24884              		.loc 1 3761 0
 24885 018a B7F88C31 		ldrh	r3, [r7, #396]
 24886 018e 9A1C     		adds	r2, r3, #2
 24887 0190 07F5C373 		add	r3, r7, #390
 24888 0194 0133     		adds	r3, r3, #1
 24889 0196 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24890 0198 3B46     		mov	r3, r7
 24891 019a 9954     		strb	r1, [r3, r2]
3762:..\src/command_processing.c **** 
3763:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[2];
 24892              		.loc 1 3763 0
 24893 019c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24894 01a0 8149     		ldr	r1, .L988+8
 24895 01a2 1346     		mov	r3, r2
 24896 01a4 9B00     		lsls	r3, r3, #2
 24897 01a6 1344     		add	r3, r3, r2
 24898 01a8 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 546


 24899 01aa 0B44     		add	r3, r3, r1
 24900 01ac 0C33     		adds	r3, r3, #12
 24901 01ae B3F90030 		ldrsh	r3, [r3]
 24902 01b2 A7F88631 		strh	r3, [r7, #390]	@ movhi
3764:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 24903              		.loc 1 3764 0
 24904 01b6 B7F88C31 		ldrh	r3, [r7, #396]
 24905 01ba 0533     		adds	r3, r3, #5
 24906 01bc 07F5C372 		add	r2, r7, #390
 24907 01c0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24908 01c2 3A46     		mov	r2, r7
 24909 01c4 D154     		strb	r1, [r2, r3]
3765:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 24910              		.loc 1 3765 0
 24911 01c6 B7F88C31 		ldrh	r3, [r7, #396]
 24912 01ca 1A1D     		adds	r2, r3, #4
 24913 01cc 07F5C373 		add	r3, r7, #390
 24914 01d0 0133     		adds	r3, r3, #1
 24915 01d2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24916 01d4 3B46     		mov	r3, r7
 24917 01d6 9954     		strb	r1, [r3, r2]
3766:..\src/command_processing.c **** 
3767:..\src/command_processing.c ****             c = c + 6;
 24918              		.loc 1 3767 0
 24919 01d8 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 24920 01dc 0633     		adds	r3, r3, #6
 24921 01de A7F88C31 		strh	r3, [r7, #396]	@ movhi
 24922              	.L973:
3768:..\src/command_processing.c ****         }
3769:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][2]){
 24923              		.loc 1 3769 0
 24924 01e2 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24925 01e6 6E4A     		ldr	r2, .L988
 24926 01e8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24927 01ea 1946     		mov	r1, r3
 24928 01ec 6D4A     		ldr	r2, .L988+4
 24929 01ee 0B46     		mov	r3, r1
 24930 01f0 9B00     		lsls	r3, r3, #2
 24931 01f2 0B44     		add	r3, r3, r1
 24932 01f4 1344     		add	r3, r3, r2
 24933 01f6 03F50173 		add	r3, r3, #516
 24934 01fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24935 01fc 002B     		cmp	r3, #0
 24936 01fe 5DD0     		beq	.L974
3770:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[0];
 24937              		.loc 1 3770 0
 24938 0200 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24939 0204 6849     		ldr	r1, .L988+8
 24940 0206 1346     		mov	r3, r2
 24941 0208 9B00     		lsls	r3, r3, #2
 24942 020a 1344     		add	r3, r3, r2
 24943 020c DB00     		lsls	r3, r3, #3
 24944 020e 0B44     		add	r3, r3, r1
 24945 0210 0E33     		adds	r3, r3, #14
 24946 0212 B3F90030 		ldrsh	r3, [r3]
 24947 0216 A7F88631 		strh	r3, [r7, #390]	@ movhi
3771:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 547


 24948              		.loc 1 3771 0
 24949 021a B7F88C31 		ldrh	r3, [r7, #396]
 24950 021e 0133     		adds	r3, r3, #1
 24951 0220 07F5C372 		add	r2, r7, #390
 24952 0224 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24953 0226 3A46     		mov	r2, r7
 24954 0228 D154     		strb	r1, [r2, r3]
3772:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 24955              		.loc 1 3772 0
 24956 022a B7F88C21 		ldrh	r2, [r7, #396]
 24957 022e 07F5C373 		add	r3, r7, #390
 24958 0232 0133     		adds	r3, r3, #1
 24959 0234 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24960 0236 3B46     		mov	r3, r7
 24961 0238 9954     		strb	r1, [r3, r2]
3773:..\src/command_processing.c **** 
3774:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[1];
 24962              		.loc 1 3774 0
 24963 023a 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24964 023e 5A49     		ldr	r1, .L988+8
 24965 0240 1346     		mov	r3, r2
 24966 0242 9B00     		lsls	r3, r3, #2
 24967 0244 1344     		add	r3, r3, r2
 24968 0246 DB00     		lsls	r3, r3, #3
 24969 0248 0B44     		add	r3, r3, r1
 24970 024a 1033     		adds	r3, r3, #16
 24971 024c B3F90030 		ldrsh	r3, [r3]
 24972 0250 A7F88631 		strh	r3, [r7, #390]	@ movhi
3775:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 24973              		.loc 1 3775 0
 24974 0254 B7F88C31 		ldrh	r3, [r7, #396]
 24975 0258 0333     		adds	r3, r3, #3
 24976 025a 07F5C372 		add	r2, r7, #390
 24977 025e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24978 0260 3A46     		mov	r2, r7
 24979 0262 D154     		strb	r1, [r2, r3]
3776:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 24980              		.loc 1 3776 0
 24981 0264 B7F88C31 		ldrh	r3, [r7, #396]
 24982 0268 9A1C     		adds	r2, r3, #2
 24983 026a 07F5C373 		add	r3, r7, #390
 24984 026e 0133     		adds	r3, r3, #1
 24985 0270 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24986 0272 3B46     		mov	r3, r7
 24987 0274 9954     		strb	r1, [r3, r2]
3777:..\src/command_processing.c **** 
3778:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[2];
 24988              		.loc 1 3778 0
 24989 0276 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24990 027a 4B49     		ldr	r1, .L988+8
 24991 027c 1346     		mov	r3, r2
 24992 027e 9B00     		lsls	r3, r3, #2
 24993 0280 1344     		add	r3, r3, r2
 24994 0282 DB00     		lsls	r3, r3, #3
 24995 0284 0B44     		add	r3, r3, r1
 24996 0286 1233     		adds	r3, r3, #18
 24997 0288 B3F90030 		ldrsh	r3, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 548


 24998 028c A7F88631 		strh	r3, [r7, #390]	@ movhi
3779:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 24999              		.loc 1 3779 0
 25000 0290 B7F88C31 		ldrh	r3, [r7, #396]
 25001 0294 0533     		adds	r3, r3, #5
 25002 0296 07F5C372 		add	r2, r7, #390
 25003 029a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25004 029c 3A46     		mov	r2, r7
 25005 029e D154     		strb	r1, [r2, r3]
3780:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 25006              		.loc 1 3780 0
 25007 02a0 B7F88C31 		ldrh	r3, [r7, #396]
 25008 02a4 1A1D     		adds	r2, r3, #4
 25009 02a6 07F5C373 		add	r3, r7, #390
 25010 02aa 0133     		adds	r3, r3, #1
 25011 02ac 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25012 02ae 3B46     		mov	r3, r7
 25013 02b0 9954     		strb	r1, [r3, r2]
3781:..\src/command_processing.c **** 
3782:..\src/command_processing.c ****             c = c + 6;
 25014              		.loc 1 3782 0
 25015 02b2 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 25016 02b6 0633     		adds	r3, r3, #6
 25017 02b8 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 25018              	.L974:
3783:..\src/command_processing.c ****         }
3784:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][3]){
 25019              		.loc 1 3784 0
 25020 02bc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 25021 02c0 374A     		ldr	r2, .L988
 25022 02c2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 25023 02c4 1946     		mov	r1, r3
 25024 02c6 374A     		ldr	r2, .L988+4
 25025 02c8 0B46     		mov	r3, r1
 25026 02ca 9B00     		lsls	r3, r3, #2
 25027 02cc 0B44     		add	r3, r3, r1
 25028 02ce 1344     		add	r3, r3, r2
 25029 02d0 03F20523 		addw	r3, r3, #517
 25030 02d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25031 02d6 002B     		cmp	r3, #0
 25032 02d8 00F0AF80 		beq	.L975
3785:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[0];
 25033              		.loc 1 3785 0
 25034 02dc 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25035 02e0 3149     		ldr	r1, .L988+8
 25036 02e2 1346     		mov	r3, r2
 25037 02e4 9B00     		lsls	r3, r3, #2
 25038 02e6 1344     		add	r3, r3, r2
 25039 02e8 DB00     		lsls	r3, r3, #3
 25040 02ea 0B44     		add	r3, r3, r1
 25041 02ec 1433     		adds	r3, r3, #20
 25042 02ee 1B68     		ldr	r3, [r3]	@ float
 25043 02f0 C7F88031 		str	r3, [r7, #384]	@ float
3786:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 25044              		.loc 1 3786 0
 25045 02f4 0023     		movs	r3, #0
 25046 02f6 87F88B31 		strb	r3, [r7, #395]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 549


 25047 02fa 13E0     		b	.L976
 25048              	.L977:
3787:..\src/command_processing.c ****                 single_packet[c + 4 - k -1] = ((char*)(&aux_float))[k];
 25049              		.loc 1 3787 0 discriminator 3
 25050 02fc B7F88C31 		ldrh	r3, [r7, #396]
 25051 0300 1A1D     		adds	r2, r3, #4
 25052 0302 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 25053 0306 D31A     		subs	r3, r2, r3
 25054 0308 013B     		subs	r3, r3, #1
 25055 030a 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 25056 030e 07F5C071 		add	r1, r7, #384
 25057 0312 0A44     		add	r2, r2, r1
 25058 0314 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25059 0316 3A46     		mov	r2, r7
 25060 0318 D154     		strb	r1, [r2, r3]
3786:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 25061              		.loc 1 3786 0 discriminator 3
 25062 031a 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 25063 031e 0133     		adds	r3, r3, #1
 25064 0320 87F88B31 		strb	r3, [r7, #395]
 25065              	.L976:
3786:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 25066              		.loc 1 3786 0 is_stmt 0 discriminator 1
 25067 0324 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 25068 0328 032B     		cmp	r3, #3
 25069 032a E7D9     		bls	.L977
3788:..\src/command_processing.c ****             }
3789:..\src/command_processing.c **** 
3790:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[1];
 25070              		.loc 1 3790 0 is_stmt 1
 25071 032c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25072 0330 1D49     		ldr	r1, .L988+8
 25073 0332 1346     		mov	r3, r2
 25074 0334 9B00     		lsls	r3, r3, #2
 25075 0336 1344     		add	r3, r3, r2
 25076 0338 DB00     		lsls	r3, r3, #3
 25077 033a 0B44     		add	r3, r3, r1
 25078 033c 1833     		adds	r3, r3, #24
 25079 033e 1B68     		ldr	r3, [r3]	@ float
 25080 0340 C7F88031 		str	r3, [r7, #384]	@ float
3791:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 25081              		.loc 1 3791 0
 25082 0344 0023     		movs	r3, #0
 25083 0346 87F88B31 		strb	r3, [r7, #395]
 25084 034a 14E0     		b	.L978
 25085              	.L979:
3792:..\src/command_processing.c ****                 single_packet[c + 8 - k -1] = ((char*)(&aux_float))[k];
 25086              		.loc 1 3792 0 discriminator 3
 25087 034c B7F88C31 		ldrh	r3, [r7, #396]
 25088 0350 03F10802 		add	r2, r3, #8
 25089 0354 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 25090 0358 D31A     		subs	r3, r2, r3
 25091 035a 013B     		subs	r3, r3, #1
 25092 035c 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 25093 0360 07F5C071 		add	r1, r7, #384
 25094 0364 0A44     		add	r2, r2, r1
 25095 0366 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 550


 25096 0368 3A46     		mov	r2, r7
 25097 036a D154     		strb	r1, [r2, r3]
3791:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 25098              		.loc 1 3791 0 discriminator 3
 25099 036c 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 25100 0370 0133     		adds	r3, r3, #1
 25101 0372 87F88B31 		strb	r3, [r7, #395]
 25102              	.L978:
3791:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 25103              		.loc 1 3791 0 is_stmt 0 discriminator 1
 25104 0376 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 25105 037a 032B     		cmp	r3, #3
 25106 037c E6D9     		bls	.L979
3793:..\src/command_processing.c ****             }
3794:..\src/command_processing.c **** 
3795:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[2];
 25107              		.loc 1 3795 0 is_stmt 1
 25108 037e 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25109 0382 0949     		ldr	r1, .L988+8
 25110 0384 1346     		mov	r3, r2
 25111 0386 9B00     		lsls	r3, r3, #2
 25112 0388 1344     		add	r3, r3, r2
 25113 038a DB00     		lsls	r3, r3, #3
 25114 038c 0B44     		add	r3, r3, r1
 25115 038e 1C33     		adds	r3, r3, #28
 25116 0390 1B68     		ldr	r3, [r3]	@ float
 25117 0392 C7F88031 		str	r3, [r7, #384]	@ float
3796:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 25118              		.loc 1 3796 0
 25119 0396 0023     		movs	r3, #0
 25120 0398 87F88B31 		strb	r3, [r7, #395]
 25121 039c 1BE0     		b	.L980
 25122              	.L989:
 25123 039e 00BF     		.align	2
 25124              	.L988:
 25125 03a0 00000000 		.word	IMU_connected
 25126 03a4 00000000 		.word	c_mem
 25127 03a8 00000000 		.word	g_imu
 25128              	.L981:
3797:..\src/command_processing.c ****                 single_packet[c + 12 - k -1] = ((char*)(&aux_float))[k];
 25129              		.loc 1 3797 0 discriminator 3
 25130 03ac B7F88C31 		ldrh	r3, [r7, #396]
 25131 03b0 03F10C02 		add	r2, r3, #12
 25132 03b4 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 25133 03b8 D31A     		subs	r3, r2, r3
 25134 03ba 013B     		subs	r3, r3, #1
 25135 03bc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 25136 03c0 07F5C071 		add	r1, r7, #384
 25137 03c4 0A44     		add	r2, r2, r1
 25138 03c6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25139 03c8 3A46     		mov	r2, r7
 25140 03ca D154     		strb	r1, [r2, r3]
3796:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 25141              		.loc 1 3796 0 discriminator 3
 25142 03cc 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 25143 03d0 0133     		adds	r3, r3, #1
 25144 03d2 87F88B31 		strb	r3, [r7, #395]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 551


 25145              	.L980:
3796:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 25146              		.loc 1 3796 0 is_stmt 0 discriminator 1
 25147 03d6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 25148 03da 032B     		cmp	r3, #3
 25149 03dc E6D9     		bls	.L981
3798:..\src/command_processing.c ****             }
3799:..\src/command_processing.c **** 
3800:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[3];
 25150              		.loc 1 3800 0 is_stmt 1
 25151 03de 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25152 03e2 6749     		ldr	r1, .L990
 25153 03e4 1346     		mov	r3, r2
 25154 03e6 9B00     		lsls	r3, r3, #2
 25155 03e8 1344     		add	r3, r3, r2
 25156 03ea DB00     		lsls	r3, r3, #3
 25157 03ec 0B44     		add	r3, r3, r1
 25158 03ee 2033     		adds	r3, r3, #32
 25159 03f0 1B68     		ldr	r3, [r3]	@ float
 25160 03f2 C7F88031 		str	r3, [r7, #384]	@ float
3801:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 25161              		.loc 1 3801 0
 25162 03f6 0023     		movs	r3, #0
 25163 03f8 87F88B31 		strb	r3, [r7, #395]
 25164 03fc 14E0     		b	.L982
 25165              	.L983:
3802:..\src/command_processing.c ****                 single_packet[c + 16 - k -1] = ((char*)(&aux_float))[k];
 25166              		.loc 1 3802 0 discriminator 3
 25167 03fe B7F88C31 		ldrh	r3, [r7, #396]
 25168 0402 03F11002 		add	r2, r3, #16
 25169 0406 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 25170 040a D31A     		subs	r3, r2, r3
 25171 040c 013B     		subs	r3, r3, #1
 25172 040e 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 25173 0412 07F5C071 		add	r1, r7, #384
 25174 0416 0A44     		add	r2, r2, r1
 25175 0418 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25176 041a 3A46     		mov	r2, r7
 25177 041c D154     		strb	r1, [r2, r3]
3801:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 25178              		.loc 1 3801 0 discriminator 3
 25179 041e 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 25180 0422 0133     		adds	r3, r3, #1
 25181 0424 87F88B31 		strb	r3, [r7, #395]
 25182              	.L982:
3801:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 25183              		.loc 1 3801 0 is_stmt 0 discriminator 1
 25184 0428 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 25185 042c 032B     		cmp	r3, #3
 25186 042e E6D9     		bls	.L983
3803:..\src/command_processing.c ****             }
3804:..\src/command_processing.c ****             c = c + 16;
 25187              		.loc 1 3804 0 is_stmt 1
 25188 0430 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 25189 0434 1033     		adds	r3, r3, #16
 25190 0436 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 25191              	.L975:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 552


3805:..\src/command_processing.c ****         }
3806:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][4]){
 25192              		.loc 1 3806 0
 25193 043a 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 25194 043e 514A     		ldr	r2, .L990+4
 25195 0440 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 25196 0442 1946     		mov	r1, r3
 25197 0444 504A     		ldr	r2, .L990+8
 25198 0446 0B46     		mov	r3, r1
 25199 0448 9B00     		lsls	r3, r3, #2
 25200 044a 0B44     		add	r3, r3, r1
 25201 044c 1344     		add	r3, r3, r2
 25202 044e 03F20623 		addw	r3, r3, #518
 25203 0452 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25204 0454 002B     		cmp	r3, #0
 25205 0456 21D0     		beq	.L984
3807:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].temp_value;
 25206              		.loc 1 3807 0
 25207 0458 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25208 045c 4849     		ldr	r1, .L990
 25209 045e 1346     		mov	r3, r2
 25210 0460 9B00     		lsls	r3, r3, #2
 25211 0462 1344     		add	r3, r3, r2
 25212 0464 DB00     		lsls	r3, r3, #3
 25213 0466 0B44     		add	r3, r3, r1
 25214 0468 2433     		adds	r3, r3, #36
 25215 046a B3F90030 		ldrsh	r3, [r3]
 25216 046e A7F88631 		strh	r3, [r7, #390]	@ movhi
3808:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 25217              		.loc 1 3808 0
 25218 0472 B7F88C31 		ldrh	r3, [r7, #396]
 25219 0476 0133     		adds	r3, r3, #1
 25220 0478 07F5C372 		add	r2, r7, #390
 25221 047c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25222 047e 3A46     		mov	r2, r7
 25223 0480 D154     		strb	r1, [r2, r3]
3809:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 25224              		.loc 1 3809 0
 25225 0482 B7F88C21 		ldrh	r2, [r7, #396]
 25226 0486 07F5C373 		add	r3, r7, #390
 25227 048a 0133     		adds	r3, r3, #1
 25228 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25229 048e 3B46     		mov	r3, r7
 25230 0490 9954     		strb	r1, [r3, r2]
3810:..\src/command_processing.c ****             c = c + 2;
 25231              		.loc 1 3810 0
 25232 0492 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 25233 0496 0233     		adds	r3, r3, #2
 25234 0498 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 25235              	.L984:
3811:..\src/command_processing.c ****         }
3812:..\src/command_processing.c ****         single_packet[single_imu_size[IMU_connected[k_imu]] - 1] = (uint8) 0x3A; //':';
 25236              		.loc 1 3812 0
 25237 049c 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 25238 04a0 384A     		ldr	r2, .L990+4
 25239 04a2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 25240 04a4 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 553


 25241 04a6 394B     		ldr	r3, .L990+12
 25242 04a8 53F82230 		ldr	r3, [r3, r2, lsl #2]
 25243 04ac 013B     		subs	r3, r3, #1
 25244 04ae 3A46     		mov	r2, r7
 25245 04b0 3A21     		movs	r1, #58
 25246 04b2 D154     		strb	r1, [r2, r3]
3813:..\src/command_processing.c ****         c = 1;
 25247              		.loc 1 3813 0
 25248 04b4 0123     		movs	r3, #1
 25249 04b6 A7F88C31 		strh	r3, [r7, #396]	@ movhi
3814:..\src/command_processing.c ****                
3815:..\src/command_processing.c ****         for(k=0; k < single_imu_size[IMU_connected[k_imu]]; k++) {
 25250              		.loc 1 3815 0
 25251 04ba 0023     		movs	r3, #0
 25252 04bc 87F88B31 		strb	r3, [r7, #395]
 25253 04c0 10E0     		b	.L985
 25254              	.L986:
3816:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 25255              		.loc 1 3816 0 discriminator 3
 25256 04c2 B7F88821 		ldrh	r2, [r7, #392]
 25257 04c6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 25258 04ca 1344     		add	r3, r3, r2
 25259 04cc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 25260 04d0 3946     		mov	r1, r7
 25261 04d2 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 25262 04d4 07F12002 		add	r2, r7, #32
 25263 04d8 D154     		strb	r1, [r2, r3]
3815:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 25264              		.loc 1 3815 0 discriminator 3
 25265 04da 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 25266 04de 0133     		adds	r3, r3, #1
 25267 04e0 87F88B31 		strb	r3, [r7, #395]
 25268              	.L985:
3815:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 25269              		.loc 1 3815 0 is_stmt 0 discriminator 1
 25270 04e4 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 25271 04e8 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 25272 04ec 2549     		ldr	r1, .L990+4
 25273 04ee CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 25274 04f0 1946     		mov	r1, r3
 25275 04f2 264B     		ldr	r3, .L990+12
 25276 04f4 53F82130 		ldr	r3, [r3, r1, lsl #2]
 25277 04f8 9A42     		cmp	r2, r3
 25278 04fa E2DB     		blt	.L986
3817:..\src/command_processing.c ****         }
3818:..\src/command_processing.c ****         gl_c = gl_c + single_imu_size[IMU_connected[k_imu]];  
 25279              		.loc 1 3818 0 is_stmt 1 discriminator 2
 25280 04fc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 25281 0500 204A     		ldr	r2, .L990+4
 25282 0502 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 25283 0504 1A46     		mov	r2, r3
 25284 0506 214B     		ldr	r3, .L990+12
 25285 0508 53F82230 		ldr	r3, [r3, r2, lsl #2]
 25286 050c 9AB2     		uxth	r2, r3
 25287 050e B7F88831 		ldrh	r3, [r7, #392]	@ movhi
 25288 0512 1344     		add	r3, r3, r2
 25289 0514 A7F88831 		strh	r3, [r7, #392]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 554


3819:..\src/command_processing.c ****         
3820:..\src/command_processing.c ****         memset(&single_packet, 0, sizeof(single_packet));     
 25290              		.loc 1 3820 0 discriminator 2
 25291 0518 3B46     		mov	r3, r7
 25292 051a 2022     		movs	r2, #32
 25293 051c 0021     		movs	r1, #0
 25294 051e 1846     		mov	r0, r3
 25295 0520 FFF7FEFF 		bl	memset
3735:..\src/command_processing.c ****     {	
 25296              		.loc 1 3735 0 discriminator 2
 25297 0524 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 25298 0528 0133     		adds	r3, r3, #1
 25299 052a 87F88F31 		strb	r3, [r7, #399]
 25300              	.L971:
3735:..\src/command_processing.c ****     {	
 25301              		.loc 1 3735 0 is_stmt 0 discriminator 1
 25302 052e 184B     		ldr	r3, .L990+16
 25303 0530 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25304 0532 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25305 0536 9A42     		cmp	r2, r3
 25306 0538 FFF476AD 		bcc	.L987
3821:..\src/command_processing.c ****         
3822:..\src/command_processing.c ****     }
3823:..\src/command_processing.c **** 
3824:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3825:..\src/command_processing.c ****     packet_data[imus_data_size-1] = LCRChecksum (packet_data, imus_data_size-1);
 25307              		.loc 1 3825 0 is_stmt 1
 25308 053c 154B     		ldr	r3, .L990+20
 25309 053e 1B68     		ldr	r3, [r3]
 25310 0540 5C1E     		subs	r4, r3, #1
 25311 0542 144B     		ldr	r3, .L990+20
 25312 0544 1B68     		ldr	r3, [r3]
 25313 0546 DBB2     		uxtb	r3, r3
 25314 0548 013B     		subs	r3, r3, #1
 25315 054a DAB2     		uxtb	r2, r3
 25316 054c 07F12003 		add	r3, r7, #32
 25317 0550 1146     		mov	r1, r2
 25318 0552 1846     		mov	r0, r3
 25319 0554 FFF7FEFF 		bl	LCRChecksum
 25320 0558 0346     		mov	r3, r0
 25321 055a 1A46     		mov	r2, r3
 25322 055c 07F12003 		add	r3, r7, #32
 25323 0560 1A55     		strb	r2, [r3, r4]
3826:..\src/command_processing.c ****     commWrite(packet_data, imus_data_size);
 25324              		.loc 1 3826 0
 25325 0562 0C4B     		ldr	r3, .L990+20
 25326 0564 1B68     		ldr	r3, [r3]
 25327 0566 9AB2     		uxth	r2, r3
 25328 0568 07F12003 		add	r3, r7, #32
 25329 056c 1146     		mov	r1, r2
 25330 056e 1846     		mov	r0, r3
 25331 0570 FFF7FEFF 		bl	commWrite
3827:..\src/command_processing.c **** }
 25332              		.loc 1 3827 0
 25333 0574 00BF     		nop
 25334 0576 07F5CA77 		add	r7, r7, #404
 25335              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 555


 25336 057a BD46     		mov	sp, r7
 25337              		.cfi_def_cfa_register 13
 25338              		@ sp needed
 25339 057c 90BD     		pop	{r4, r7, pc}
 25340              	.L991:
 25341 057e 00BF     		.align	2
 25342              	.L990:
 25343 0580 00000000 		.word	g_imu
 25344 0584 00000000 		.word	IMU_connected
 25345 0588 00000000 		.word	c_mem
 25346 058c 00000000 		.word	single_imu_size
 25347 0590 00000000 		.word	N_IMU_Connected
 25348 0594 00000000 		.word	imus_data_size
 25349              		.cfi_endproc
 25350              	.LFE107:
 25351              		.size	cmd_get_imu_readings, .-cmd_get_imu_readings
 25352              		.section	.text.cmd_get_encoder_map,"ax",%progbits
 25353              		.align	2
 25354              		.global	cmd_get_encoder_map
 25355              		.thumb
 25356              		.thumb_func
 25357              		.type	cmd_get_encoder_map, %function
 25358              	cmd_get_encoder_map:
 25359              	.LFB108:
3828:..\src/command_processing.c **** 
3829:..\src/command_processing.c **** void cmd_get_encoder_map(){
 25360              		.loc 1 3829 0
 25361              		.cfi_startproc
 25362              		@ args = 0, pretend = 0, frame = 16
 25363              		@ frame_needed = 1, uses_anonymous_args = 0
 25364 0000 90B5     		push	{r4, r7, lr}
 25365              		.cfi_def_cfa_offset 12
 25366              		.cfi_offset 4, -12
 25367              		.cfi_offset 7, -8
 25368              		.cfi_offset 14, -4
 25369 0002 85B0     		sub	sp, sp, #20
 25370              		.cfi_def_cfa_offset 32
 25371 0004 00AF     		add	r7, sp, #0
 25372              		.cfi_def_cfa_register 7
3830:..\src/command_processing.c ****     //Retrieve Encoder map
3831:..\src/command_processing.c ****     
3832:..\src/command_processing.c ****     uint8 packet_data[4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
3833:..\src/command_processing.c ****     uint8 CYDATA i, j;
3834:..\src/command_processing.c ****     
3835:..\src/command_processing.c ****     // Header        
3836:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_CONF;
 25373              		.loc 1 3836 0
 25374 0006 A323     		movs	r3, #163
 25375 0008 3B70     		strb	r3, [r7]
3837:..\src/command_processing.c ****     
3838:..\src/command_processing.c ****     // Fill payload
3839:..\src/command_processing.c ****     packet_data[1] = N_ENCODER_LINE_MAX;
 25376              		.loc 1 3839 0
 25377 000a 0223     		movs	r3, #2
 25378 000c 7B70     		strb	r3, [r7, #1]
3840:..\src/command_processing.c ****     packet_data[2] = N_ENCODERS_PER_LINE_MAX;
 25379              		.loc 1 3840 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 556


 25380 000e 0523     		movs	r3, #5
 25381 0010 BB70     		strb	r3, [r7, #2]
3841:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 25382              		.loc 1 3841 0
 25383 0012 0023     		movs	r3, #0
 25384 0014 FB73     		strb	r3, [r7, #15]
 25385 0016 23E0     		b	.L993
 25386              	.L996:
3842:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 25387              		.loc 1 3842 0
 25388 0018 0023     		movs	r3, #0
 25389 001a BB73     		strb	r3, [r7, #14]
 25390 001c 1AE0     		b	.L994
 25391              	.L995:
3843:..\src/command_processing.c ****             packet_data[3 + i*N_ENCODERS_PER_LINE_MAX + j] = c_mem.enc[i].Enc_raw_read_conf[j];
 25392              		.loc 1 3843 0 discriminator 3
 25393 001e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 25394 0020 1346     		mov	r3, r2
 25395 0022 9B00     		lsls	r3, r3, #2
 25396 0024 1344     		add	r3, r3, r2
 25397 0026 DA1C     		adds	r2, r3, #3
 25398 0028 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 25399 002a D118     		adds	r1, r2, r3
 25400 002c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 25401 002e B87B     		ldrb	r0, [r7, #14]	@ zero_extendqisi2
 25402 0030 154C     		ldr	r4, .L997
 25403 0032 1346     		mov	r3, r2
 25404 0034 5B00     		lsls	r3, r3, #1
 25405 0036 1344     		add	r3, r3, r2
 25406 0038 1B01     		lsls	r3, r3, #4
 25407 003a 2344     		add	r3, r3, r4
 25408 003c 0344     		add	r3, r3, r0
 25409 003e 03F5C873 		add	r3, r3, #400
 25410 0042 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 25411 0044 07F11003 		add	r3, r7, #16
 25412 0048 0B44     		add	r3, r3, r1
 25413 004a 03F8102C 		strb	r2, [r3, #-16]
3842:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 25414              		.loc 1 3842 0 discriminator 3
 25415 004e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 25416 0050 0133     		adds	r3, r3, #1
 25417 0052 BB73     		strb	r3, [r7, #14]
 25418              	.L994:
3842:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 25419              		.loc 1 3842 0 is_stmt 0 discriminator 1
 25420 0054 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 25421 0056 042B     		cmp	r3, #4
 25422 0058 E1D9     		bls	.L995
3841:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 25423              		.loc 1 3841 0 is_stmt 1 discriminator 2
 25424 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25425 005c 0133     		adds	r3, r3, #1
 25426 005e FB73     		strb	r3, [r7, #15]
 25427              	.L993:
3841:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 25428              		.loc 1 3841 0 is_stmt 0 discriminator 1
 25429 0060 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 557


 25430 0062 012B     		cmp	r3, #1
 25431 0064 D8D9     		bls	.L996
3844:..\src/command_processing.c ****         }
3845:..\src/command_processing.c ****     }
3846:..\src/command_processing.c ****     
3847:..\src/command_processing.c ****     // Calculate checksum
3848:..\src/command_processing.c ****     packet_data[3+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX] = LCRChecksum(packet_data, 3+N_ENCODE
 25432              		.loc 1 3848 0 is_stmt 1
 25433 0066 3B46     		mov	r3, r7
 25434 0068 0D21     		movs	r1, #13
 25435 006a 1846     		mov	r0, r3
 25436 006c FFF7FEFF 		bl	LCRChecksum
 25437 0070 0346     		mov	r3, r0
 25438 0072 7B73     		strb	r3, [r7, #13]
3849:..\src/command_processing.c ****     
3850:..\src/command_processing.c ****     // Send package to UART
3851:..\src/command_processing.c ****     commWrite(packet_data, 4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX);
 25439              		.loc 1 3851 0
 25440 0074 3B46     		mov	r3, r7
 25441 0076 0E21     		movs	r1, #14
 25442 0078 1846     		mov	r0, r3
 25443 007a FFF7FEFF 		bl	commWrite
3852:..\src/command_processing.c **** }
 25444              		.loc 1 3852 0
 25445 007e 00BF     		nop
 25446 0080 1437     		adds	r7, r7, #20
 25447              		.cfi_def_cfa_offset 12
 25448 0082 BD46     		mov	sp, r7
 25449              		.cfi_def_cfa_register 13
 25450              		@ sp needed
 25451 0084 90BD     		pop	{r4, r7, pc}
 25452              	.L998:
 25453 0086 00BF     		.align	2
 25454              	.L997:
 25455 0088 00000000 		.word	c_mem
 25456              		.cfi_endproc
 25457              	.LFE108:
 25458              		.size	cmd_get_encoder_map, .-cmd_get_encoder_map
 25459              		.section	.text.cmd_get_encoder_raw,"ax",%progbits
 25460              		.align	2
 25461              		.global	cmd_get_encoder_raw
 25462              		.thumb
 25463              		.thumb_func
 25464              		.type	cmd_get_encoder_raw, %function
 25465              	cmd_get_encoder_raw:
 25466              	.LFB109:
3853:..\src/command_processing.c **** 
3854:..\src/command_processing.c **** void cmd_get_encoder_raw(){
 25467              		.loc 1 3854 0
 25468              		.cfi_startproc
 25469              		@ args = 0, pretend = 0, frame = 32
 25470              		@ frame_needed = 1, uses_anonymous_args = 0
 25471 0000 90B5     		push	{r4, r7, lr}
 25472              		.cfi_def_cfa_offset 12
 25473              		.cfi_offset 4, -12
 25474              		.cfi_offset 7, -8
 25475              		.cfi_offset 14, -4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 558


 25476 0002 89B0     		sub	sp, sp, #36
 25477              		.cfi_def_cfa_offset 48
 25478 0004 00AF     		add	r7, sp, #0
 25479              		.cfi_def_cfa_register 7
3855:..\src/command_processing.c ****     //Retrieve all Encoders raw values
3856:..\src/command_processing.c ****     
3857:..\src/command_processing.c ****     uint8 packet_data[2+2*N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
3858:..\src/command_processing.c ****     uint8 i, j, idx;
3859:..\src/command_processing.c ****     uint16 aux_uint16;
3860:..\src/command_processing.c ****     
3861:..\src/command_processing.c ****     //Header package 
3862:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_RAW;
 25480              		.loc 1 3862 0
 25481 0006 A423     		movs	r3, #164
 25482 0008 3B71     		strb	r3, [r7, #4]
3863:..\src/command_processing.c ****  
3864:..\src/command_processing.c ****     // Fill payload
3865:..\src/command_processing.c ****     idx = 0;
 25483              		.loc 1 3865 0
 25484 000a 0023     		movs	r3, #0
 25485 000c 7B77     		strb	r3, [r7, #29]
3866:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 25486              		.loc 1 3866 0
 25487 000e 0023     		movs	r3, #0
 25488 0010 FB77     		strb	r3, [r7, #31]
 25489 0012 3FE0     		b	.L1000
 25490              	.L1004:
3867:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 25491              		.loc 1 3867 0
 25492 0014 0023     		movs	r3, #0
 25493 0016 BB77     		strb	r3, [r7, #30]
 25494 0018 33E0     		b	.L1001
 25495              	.L1003:
3868:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 25496              		.loc 1 3868 0
 25497 001a FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 25498 001c B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 25499 001e 3048     		ldr	r0, .L1005
 25500 0020 1346     		mov	r3, r2
 25501 0022 5B00     		lsls	r3, r3, #1
 25502 0024 1344     		add	r3, r3, r2
 25503 0026 1B01     		lsls	r3, r3, #4
 25504 0028 0344     		add	r3, r3, r0
 25505 002a 0B44     		add	r3, r3, r1
 25506 002c 03F5C873 		add	r3, r3, #400
 25507 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25508 0032 012B     		cmp	r3, #1
 25509 0034 22D1     		bne	.L1002
3869:..\src/command_processing.c ****                 aux_uint16 = (uint16)Encoder_Value[i][j];
 25510              		.loc 1 3869 0
 25511 0036 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 25512 0038 B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 25513 003a 2A48     		ldr	r0, .L1005+4
 25514 003c 1346     		mov	r3, r2
 25515 003e 9B00     		lsls	r3, r3, #2
 25516 0040 1344     		add	r3, r3, r2
 25517 0042 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 559


 25518 0044 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 25519 0048 7B80     		strh	r3, [r7, #2]	@ movhi
3870:..\src/command_processing.c ****                 packet_data[(idx << 1) + 2] = ((char*)(&aux_uint16))[0];
 25520              		.loc 1 3870 0
 25521 004a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 25522 004c 5B00     		lsls	r3, r3, #1
 25523 004e 0233     		adds	r3, r3, #2
 25524 0050 BA1C     		adds	r2, r7, #2
 25525 0052 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 25526 0054 07F12001 		add	r1, r7, #32
 25527 0058 0B44     		add	r3, r3, r1
 25528 005a 03F81C2C 		strb	r2, [r3, #-28]
3871:..\src/command_processing.c ****                 packet_data[(idx << 1) + 1] = ((char*)(&aux_uint16))[1];
 25529              		.loc 1 3871 0
 25530 005e 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 25531 0060 5B00     		lsls	r3, r3, #1
 25532 0062 5A1C     		adds	r2, r3, #1
 25533 0064 BB1C     		adds	r3, r7, #2
 25534 0066 0133     		adds	r3, r3, #1
 25535 0068 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25536 006a 07F12003 		add	r3, r7, #32
 25537 006e 1344     		add	r3, r3, r2
 25538 0070 0A46     		mov	r2, r1
 25539 0072 03F81C2C 		strb	r2, [r3, #-28]
3872:..\src/command_processing.c ****                 idx++;
 25540              		.loc 1 3872 0
 25541 0076 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 25542 0078 0133     		adds	r3, r3, #1
 25543 007a 7B77     		strb	r3, [r7, #29]
 25544              	.L1002:
3867:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 25545              		.loc 1 3867 0 discriminator 2
 25546 007c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 25547 007e 0133     		adds	r3, r3, #1
 25548 0080 BB77     		strb	r3, [r7, #30]
 25549              	.L1001:
3867:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 25550              		.loc 1 3867 0 is_stmt 0 discriminator 1
 25551 0082 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 25552 0084 184A     		ldr	r2, .L1005+8
 25553 0086 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 25554 0088 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 25555 008a 9A42     		cmp	r2, r3
 25556 008c C5D3     		bcc	.L1003
3866:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 25557              		.loc 1 3866 0 is_stmt 1 discriminator 2
 25558 008e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 25559 0090 0133     		adds	r3, r3, #1
 25560 0092 FB77     		strb	r3, [r7, #31]
 25561              	.L1000:
3866:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 25562              		.loc 1 3866 0 is_stmt 0 discriminator 1
 25563 0094 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 25564 0096 012B     		cmp	r3, #1
 25565 0098 BCD9     		bls	.L1004
3873:..\src/command_processing.c ****             }
3874:..\src/command_processing.c ****         }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 560


3875:..\src/command_processing.c ****     }
3876:..\src/command_processing.c **** 
3877:..\src/command_processing.c ****     // Calculate checksum
3878:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 25566              		.loc 1 3878 0 is_stmt 1
 25567 009a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 25568 009c 5B00     		lsls	r3, r3, #1
 25569 009e 5C1C     		adds	r4, r3, #1
 25570 00a0 7B7F     		ldrb	r3, [r7, #29]
 25571 00a2 5B00     		lsls	r3, r3, #1
 25572 00a4 DBB2     		uxtb	r3, r3
 25573 00a6 0133     		adds	r3, r3, #1
 25574 00a8 DAB2     		uxtb	r2, r3
 25575 00aa 3B1D     		adds	r3, r7, #4
 25576 00ac 1146     		mov	r1, r2
 25577 00ae 1846     		mov	r0, r3
 25578 00b0 FFF7FEFF 		bl	LCRChecksum
 25579 00b4 0346     		mov	r3, r0
 25580 00b6 1A46     		mov	r2, r3
 25581 00b8 07F12003 		add	r3, r7, #32
 25582 00bc 2344     		add	r3, r3, r4
 25583 00be 03F81C2C 		strb	r2, [r3, #-28]
3879:..\src/command_processing.c ****     
3880:..\src/command_processing.c ****     // Send package to UART
3881:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 25584              		.loc 1 3881 0
 25585 00c2 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 25586 00c4 0133     		adds	r3, r3, #1
 25587 00c6 9BB2     		uxth	r3, r3
 25588 00c8 5B00     		lsls	r3, r3, #1
 25589 00ca 9AB2     		uxth	r2, r3
 25590 00cc 3B1D     		adds	r3, r7, #4
 25591 00ce 1146     		mov	r1, r2
 25592 00d0 1846     		mov	r0, r3
 25593 00d2 FFF7FEFF 		bl	commWrite
3882:..\src/command_processing.c **** }
 25594              		.loc 1 3882 0
 25595 00d6 00BF     		nop
 25596 00d8 2437     		adds	r7, r7, #36
 25597              		.cfi_def_cfa_offset 12
 25598 00da BD46     		mov	sp, r7
 25599              		.cfi_def_cfa_register 13
 25600              		@ sp needed
 25601 00dc 90BD     		pop	{r4, r7, pc}
 25602              	.L1006:
 25603 00de 00BF     		.align	2
 25604              	.L1005:
 25605 00e0 00000000 		.word	c_mem
 25606 00e4 00000000 		.word	Encoder_Value
 25607 00e8 00000000 		.word	N_Encoder_Line_Connected
 25608              		.cfi_endproc
 25609              	.LFE109:
 25610              		.size	cmd_get_encoder_raw, .-cmd_get_encoder_raw
 25611              		.section	.text.cmd_get_ADC_map,"ax",%progbits
 25612              		.align	2
 25613              		.global	cmd_get_ADC_map
 25614              		.thumb
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 561


 25615              		.thumb_func
 25616              		.type	cmd_get_ADC_map, %function
 25617              	cmd_get_ADC_map:
 25618              	.LFB110:
3883:..\src/command_processing.c **** 
3884:..\src/command_processing.c **** void cmd_get_ADC_map(){
 25619              		.loc 1 3884 0
 25620              		.cfi_startproc
 25621              		@ args = 0, pretend = 0, frame = 16
 25622              		@ frame_needed = 1, uses_anonymous_args = 0
 25623 0000 80B5     		push	{r7, lr}
 25624              		.cfi_def_cfa_offset 8
 25625              		.cfi_offset 7, -8
 25626              		.cfi_offset 14, -4
 25627 0002 84B0     		sub	sp, sp, #16
 25628              		.cfi_def_cfa_offset 24
 25629 0004 00AF     		add	r7, sp, #0
 25630              		.cfi_def_cfa_register 7
3885:..\src/command_processing.c ****     //Retrieve Encoder map
3886:..\src/command_processing.c ****     
3887:..\src/command_processing.c ****     uint8 packet_data[3+NUM_OF_ADC_CHANNELS_MAX];
3888:..\src/command_processing.c ****     uint8 CYDATA i;
3889:..\src/command_processing.c ****     
3890:..\src/command_processing.c ****     // Header        
3891:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_CONF;
 25631              		.loc 1 3891 0
 25632 0006 A523     		movs	r3, #165
 25633 0008 3B70     		strb	r3, [r7]
3892:..\src/command_processing.c ****     
3893:..\src/command_processing.c ****     // Fill payload
3894:..\src/command_processing.c ****     packet_data[1] = NUM_OF_ADC_CHANNELS_MAX;
 25634              		.loc 1 3894 0
 25635 000a 0C23     		movs	r3, #12
 25636 000c 7B70     		strb	r3, [r7, #1]
3895:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 25637              		.loc 1 3895 0
 25638 000e 0023     		movs	r3, #0
 25639 0010 FB73     		strb	r3, [r7, #15]
 25640 0012 0EE0     		b	.L1008
 25641              	.L1009:
3896:..\src/command_processing.c ****         packet_data[2 + i] = c_mem.exp.ADC_conf[i];
 25642              		.loc 1 3896 0 discriminator 3
 25643 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25644 0016 0233     		adds	r3, r3, #2
 25645 0018 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 25646 001a 0F49     		ldr	r1, .L1010
 25647 001c 0A44     		add	r2, r2, r1
 25648 001e 92F82822 		ldrb	r2, [r2, #552]	@ zero_extendqisi2
 25649 0022 07F11001 		add	r1, r7, #16
 25650 0026 0B44     		add	r3, r3, r1
 25651 0028 03F8102C 		strb	r2, [r3, #-16]
3895:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 25652              		.loc 1 3895 0 discriminator 3
 25653 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25654 002e 0133     		adds	r3, r3, #1
 25655 0030 FB73     		strb	r3, [r7, #15]
 25656              	.L1008:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 562


3895:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 25657              		.loc 1 3895 0 is_stmt 0 discriminator 1
 25658 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25659 0034 0B2B     		cmp	r3, #11
 25660 0036 EDD9     		bls	.L1009
3897:..\src/command_processing.c ****     }
3898:..\src/command_processing.c ****     
3899:..\src/command_processing.c ****     // Calculate checksum
3900:..\src/command_processing.c ****     packet_data[2+NUM_OF_ADC_CHANNELS_MAX] = LCRChecksum(packet_data, 2+NUM_OF_ADC_CHANNELS_MAX);
 25661              		.loc 1 3900 0 is_stmt 1
 25662 0038 3B46     		mov	r3, r7
 25663 003a 0E21     		movs	r1, #14
 25664 003c 1846     		mov	r0, r3
 25665 003e FFF7FEFF 		bl	LCRChecksum
 25666 0042 0346     		mov	r3, r0
 25667 0044 BB73     		strb	r3, [r7, #14]
3901:..\src/command_processing.c ****     
3902:..\src/command_processing.c ****     // Send package to UART
3903:..\src/command_processing.c ****     commWrite(packet_data, 3+NUM_OF_ADC_CHANNELS_MAX);
 25668              		.loc 1 3903 0
 25669 0046 3B46     		mov	r3, r7
 25670 0048 0F21     		movs	r1, #15
 25671 004a 1846     		mov	r0, r3
 25672 004c FFF7FEFF 		bl	commWrite
3904:..\src/command_processing.c ****     
3905:..\src/command_processing.c **** }
 25673              		.loc 1 3905 0
 25674 0050 00BF     		nop
 25675 0052 1037     		adds	r7, r7, #16
 25676              		.cfi_def_cfa_offset 8
 25677 0054 BD46     		mov	sp, r7
 25678              		.cfi_def_cfa_register 13
 25679              		@ sp needed
 25680 0056 80BD     		pop	{r7, pc}
 25681              	.L1011:
 25682              		.align	2
 25683              	.L1010:
 25684 0058 00000000 		.word	c_mem
 25685              		.cfi_endproc
 25686              	.LFE110:
 25687              		.size	cmd_get_ADC_map, .-cmd_get_ADC_map
 25688              		.section	.text.cmd_get_ADC_raw,"ax",%progbits
 25689              		.align	2
 25690              		.global	cmd_get_ADC_raw
 25691              		.thumb
 25692              		.thumb_func
 25693              		.type	cmd_get_ADC_raw, %function
 25694              	cmd_get_ADC_raw:
 25695              	.LFB111:
3906:..\src/command_processing.c **** 
3907:..\src/command_processing.c **** void cmd_get_ADC_raw(){
 25696              		.loc 1 3907 0
 25697              		.cfi_startproc
 25698              		@ args = 0, pretend = 0, frame = 32
 25699              		@ frame_needed = 1, uses_anonymous_args = 0
 25700 0000 90B5     		push	{r4, r7, lr}
 25701              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 563


 25702              		.cfi_offset 4, -12
 25703              		.cfi_offset 7, -8
 25704              		.cfi_offset 14, -4
 25705 0002 89B0     		sub	sp, sp, #36
 25706              		.cfi_def_cfa_offset 48
 25707 0004 00AF     		add	r7, sp, #0
 25708              		.cfi_def_cfa_register 7
3908:..\src/command_processing.c ****     //Retrieve Additional EMG port raw values
3909:..\src/command_processing.c ****     
3910:..\src/command_processing.c ****     uint8 packet_data[2+2*NUM_OF_ADC_CHANNELS_MAX];
3911:..\src/command_processing.c ****     uint8 CYDATA i, idx = 0;
 25709              		.loc 1 3911 0
 25710 0006 0023     		movs	r3, #0
 25711 0008 BB77     		strb	r3, [r7, #30]
3912:..\src/command_processing.c ****     int16 aux_int16;
3913:..\src/command_processing.c ****     
3914:..\src/command_processing.c ****     // Header        
3915:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_RAW;
 25712              		.loc 1 3915 0
 25713 000a A623     		movs	r3, #166
 25714 000c 3B71     		strb	r3, [r7, #4]
3916:..\src/command_processing.c ****     
3917:..\src/command_processing.c ****     // Fill payload
3918:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ANALOG_INPUTS; i++) {       
 25715              		.loc 1 3918 0
 25716 000e 0023     		movs	r3, #0
 25717 0010 FB77     		strb	r3, [r7, #31]
 25718 0012 27E0     		b	.L1013
 25719              	.L1015:
3919:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 25720              		.loc 1 3919 0
 25721 0014 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 25722 0016 274A     		ldr	r2, .L1016
 25723 0018 1344     		add	r3, r3, r2
 25724 001a 93F82832 		ldrb	r3, [r3, #552]	@ zero_extendqisi2
 25725 001e 012B     		cmp	r3, #1
 25726 0020 1DD1     		bne	.L1014
3920:..\src/command_processing.c ****             aux_int16 = (int16) ADC_buf[i];
 25727              		.loc 1 3920 0
 25728 0022 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 25729 0024 244A     		ldr	r2, .L1016+4
 25730 0026 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 25731 002a 7B80     		strh	r3, [r7, #2]	@ movhi
3921:..\src/command_processing.c ****             packet_data[(idx << 1) + 2] = ((char*)(&aux_int16))[0];
 25732              		.loc 1 3921 0
 25733 002c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 25734 002e 5B00     		lsls	r3, r3, #1
 25735 0030 0233     		adds	r3, r3, #2
 25736 0032 BA1C     		adds	r2, r7, #2
 25737 0034 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 25738 0036 07F12001 		add	r1, r7, #32
 25739 003a 0B44     		add	r3, r3, r1
 25740 003c 03F81C2C 		strb	r2, [r3, #-28]
3922:..\src/command_processing.c ****             packet_data[(idx << 1) + 1] = ((char*)(&aux_int16))[1];
 25741              		.loc 1 3922 0
 25742 0040 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 25743 0042 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 564


 25744 0044 5A1C     		adds	r2, r3, #1
 25745 0046 BB1C     		adds	r3, r7, #2
 25746 0048 0133     		adds	r3, r3, #1
 25747 004a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25748 004c 07F12003 		add	r3, r7, #32
 25749 0050 1344     		add	r3, r3, r2
 25750 0052 0A46     		mov	r2, r1
 25751 0054 03F81C2C 		strb	r2, [r3, #-28]
3923:..\src/command_processing.c ****             idx++;
 25752              		.loc 1 3923 0
 25753 0058 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 25754 005a 0133     		adds	r3, r3, #1
 25755 005c BB77     		strb	r3, [r7, #30]
 25756              	.L1014:
3918:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 25757              		.loc 1 3918 0 discriminator 2
 25758 005e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 25759 0060 0133     		adds	r3, r3, #1
 25760 0062 FB77     		strb	r3, [r7, #31]
 25761              	.L1013:
3918:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 25762              		.loc 1 3918 0 is_stmt 0 discriminator 1
 25763 0064 154B     		ldr	r3, .L1016+8
 25764 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25765 0068 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 25766 006a 9A42     		cmp	r2, r3
 25767 006c D2D3     		bcc	.L1015
3924:..\src/command_processing.c ****         }
3925:..\src/command_processing.c ****     }
3926:..\src/command_processing.c **** 
3927:..\src/command_processing.c ****     // Calculate checksum
3928:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 25768              		.loc 1 3928 0 is_stmt 1
 25769 006e BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 25770 0070 5B00     		lsls	r3, r3, #1
 25771 0072 5C1C     		adds	r4, r3, #1
 25772 0074 BB7F     		ldrb	r3, [r7, #30]
 25773 0076 5B00     		lsls	r3, r3, #1
 25774 0078 DBB2     		uxtb	r3, r3
 25775 007a 0133     		adds	r3, r3, #1
 25776 007c DAB2     		uxtb	r2, r3
 25777 007e 3B1D     		adds	r3, r7, #4
 25778 0080 1146     		mov	r1, r2
 25779 0082 1846     		mov	r0, r3
 25780 0084 FFF7FEFF 		bl	LCRChecksum
 25781 0088 0346     		mov	r3, r0
 25782 008a 1A46     		mov	r2, r3
 25783 008c 07F12003 		add	r3, r7, #32
 25784 0090 2344     		add	r3, r3, r4
 25785 0092 03F81C2C 		strb	r2, [r3, #-28]
3929:..\src/command_processing.c ****     
3930:..\src/command_processing.c ****     // Send package to UART
3931:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 25786              		.loc 1 3931 0
 25787 0096 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 25788 0098 0133     		adds	r3, r3, #1
 25789 009a 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 565


 25790 009c 5B00     		lsls	r3, r3, #1
 25791 009e 9AB2     		uxth	r2, r3
 25792 00a0 3B1D     		adds	r3, r7, #4
 25793 00a2 1146     		mov	r1, r2
 25794 00a4 1846     		mov	r0, r3
 25795 00a6 FFF7FEFF 		bl	commWrite
3932:..\src/command_processing.c **** }
 25796              		.loc 1 3932 0
 25797 00aa 00BF     		nop
 25798 00ac 2437     		adds	r7, r7, #36
 25799              		.cfi_def_cfa_offset 12
 25800 00ae BD46     		mov	sp, r7
 25801              		.cfi_def_cfa_register 13
 25802              		@ sp needed
 25803 00b0 90BD     		pop	{r4, r7, pc}
 25804              	.L1017:
 25805 00b2 00BF     		.align	2
 25806              	.L1016:
 25807 00b4 00000000 		.word	c_mem
 25808 00b8 00000000 		.word	ADC_buf
 25809 00bc 00000000 		.word	NUM_OF_ANALOG_INPUTS
 25810              		.cfi_endproc
 25811              	.LFE111:
 25812              		.size	cmd_get_ADC_raw, .-cmd_get_ADC_raw
 25813              		.section	.text.air_chambers_control,"ax",%progbits
 25814              		.align	2
 25815              		.global	air_chambers_control
 25816              		.thumb
 25817              		.thumb_func
 25818              		.type	air_chambers_control, %function
 25819              	air_chambers_control:
 25820              	.LFB112:
3933:..\src/command_processing.c **** 
3934:..\src/command_processing.c **** //==============================================================================
3935:..\src/command_processing.c **** //                                                          AIR CHAMBERS CONTROL
3936:..\src/command_processing.c **** //==============================================================================
3937:..\src/command_processing.c **** /* It asks current difference to the SoftHand and sets force feedback device inputs proportionally 
3938:..\src/command_processing.c **** 
3939:..\src/command_processing.c **** void air_chambers_control(int slave_motor_idx) {
 25821              		.loc 1 3939 0
 25822              		.cfi_startproc
 25823              		@ args = 0, pretend = 0, frame = 8
 25824              		@ frame_needed = 1, uses_anonymous_args = 0
 25825              		@ link register save eliminated.
 25826 0000 80B4     		push	{r7}
 25827              		.cfi_def_cfa_offset 4
 25828              		.cfi_offset 7, -4
 25829 0002 83B0     		sub	sp, sp, #12
 25830              		.cfi_def_cfa_offset 16
 25831 0004 00AF     		add	r7, sp, #0
 25832              		.cfi_def_cfa_register 7
 25833 0006 7860     		str	r0, [r7, #4]
3940:..\src/command_processing.c ****     
3941:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
3942:..\src/command_processing.c ****     
3943:..\src/command_processing.c ****     int16 curr_diff;
3944:..\src/command_processing.c ****     int32 pressure_reference, err_pressure, pressure_value;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 566


3945:..\src/command_processing.c ****     int32 valve_command;
3946:..\src/command_processing.c ****     int16 x_value;
3947:..\src/command_processing.c **** 
3948:..\src/command_processing.c ****     // Use pressure and residual current read from the SoftHand
3949:..\src/command_processing.c ****     
3950:..\src/command_processing.c ****     curr_diff = (int16)commReadResCurrFromSH();
3951:..\src/command_processing.c ****     
3952:..\src/command_processing.c ****     // Current difference saturation old mapping
3953:..\src/command_processing.c **** //    if(curr_diff > c_mem.FB.max_residual_current) {
3954:..\src/command_processing.c **** //        curr_diff = c_mem.FB.max_residual_current;
3955:..\src/command_processing.c **** //    }
3956:..\src/command_processing.c **** //    if(curr_diff < 0) {
3957:..\src/command_processing.c **** //        curr_diff = 0;
3958:..\src/command_processing.c **** //    }
3959:..\src/command_processing.c **** 
3960:..\src/command_processing.c ****     // Compute pressure reference
3961:..\src/command_processing.c **** 
3962:..\src/command_processing.c ****     x_value = curr_diff - 50.0;
3963:..\src/command_processing.c ****     if (x_value < 0)
3964:..\src/command_processing.c ****         x_value = 0;
3965:..\src/command_processing.c ****     
3966:..\src/command_processing.c ****     // old mapping --- linear mapping
3967:..\src/command_processing.c ****     //pressure_reference = (int32)(curr_diff * (c_mem.FB.maximum_pressure_kPa/c_mem.FB.max_residual
3968:..\src/command_processing.c ****     pressure_reference = (int32)((int32)(-30.0*x_value*x_value + 55.0*c_mem.FB.max_residual_current
3969:..\src/command_processing.c ****     if (pressure_reference < 0)
3970:..\src/command_processing.c ****         pressure_reference = 0;
3971:..\src/command_processing.c ****     if (pressure_reference > c_mem.FB.maximum_pressure_kPa)
3972:..\src/command_processing.c ****         pressure_reference = c_mem.FB.maximum_pressure_kPa;
3973:..\src/command_processing.c ****     
3974:..\src/command_processing.c ****     pressure_value = (int32)g_fb_meas.pressure;
3975:..\src/command_processing.c ****     err_pressure = pressure_reference - pressure_value;       // error in kPa
3976:..\src/command_processing.c **** //    if (err_pressure < 0){
3977:..\src/command_processing.c **** //        err_pressure = 0;
3978:..\src/command_processing.c **** //    }
3979:..\src/command_processing.c ****     
3980:..\src/command_processing.c ****     if (x_value <= 0){
3981:..\src/command_processing.c ****         //i.e the hand is opening
3982:..\src/command_processing.c ****         valve_command = 0;  //valve open: air passes
3983:..\src/command_processing.c ****     }
3984:..\src/command_processing.c ****     else {
3985:..\src/command_processing.c ****         //i.e the hand is closing, so valve should stay closed independently from the pressure erro
3986:..\src/command_processing.c ****         //if err_pressure greater than 0, it means pressure should increase, so valve should stay c
3987:..\src/command_processing.c ****         //if err_pressure==0, it means you reached the right pressure, so valve should stay closed
3988:..\src/command_processing.c ****         valve_command = 1;  //3.6V (5V - 2 diodes) - valve close: air doesn't pass
3989:..\src/command_processing.c ****     }
3990:..\src/command_processing.c ****     
3991:..\src/command_processing.c ****     // Pump control
3992:..\src/command_processing.c ****     g_refNew[0].pwm = (int32)(c_mem.FB.prop_err_fb_gain*err_pressure);
3993:..\src/command_processing.c ****     //c_mem.FB.prop_err_fb_gain default 1.0 gain since, max err_pressure is 25 and pwm range is app
3994:..\src/command_processing.c ****     
3995:..\src/command_processing.c ****     // Limit output voltage
3996:..\src/command_processing.c ****     if (g_refNew[0].pwm > 80) // 80 (3.5V) 80% of 4.3V (5V - 1 diode)
3997:..\src/command_processing.c ****         g_refNew[0].pwm = 80; // 80
3998:..\src/command_processing.c ****     if (g_refNew[0].pwm < 20)
3999:..\src/command_processing.c ****         g_refNew[0].pwm = 0;
4000:..\src/command_processing.c ****         
4001:..\src/command_processing.c ****     VALVE_Write(valve_command);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 567


4002:..\src/command_processing.c ****     
4003:..\src/command_processing.c ****     
4004:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
4005:..\src/command_processing.c ****     // Use second motor structures and parameters, only to generate position reference not for PID 
4006:..\src/command_processing.c ****     // IMPORTANT: configure second motor parameters with proper slave parameters
4007:..\src/command_processing.c ****     motor_control_generic(slave_motor_idx);
4008:..\src/command_processing.c **** #endif
4009:..\src/command_processing.c **** }
 25834              		.loc 1 4009 0
 25835 0008 00BF     		nop
 25836 000a 0C37     		adds	r7, r7, #12
 25837              		.cfi_def_cfa_offset 4
 25838 000c BD46     		mov	sp, r7
 25839              		.cfi_def_cfa_register 13
 25840              		@ sp needed
 25841 000e 80BC     		pop	{r7}
 25842              		.cfi_restore 7
 25843              		.cfi_def_cfa_offset 0
 25844 0010 7047     		bx	lr
 25845              		.cfi_endproc
 25846              	.LFE112:
 25847              		.size	air_chambers_control, .-air_chambers_control
 25848 0012 00BF     		.section	.text.emg_activation_velocity_fsm,"ax",%progbits
 25849              		.align	2
 25850              		.global	emg_activation_velocity_fsm
 25851              		.thumb
 25852              		.thumb_func
 25853              		.type	emg_activation_velocity_fsm, %function
 25854              	emg_activation_velocity_fsm:
 25855              	.LFB113:
4010:..\src/command_processing.c **** 
4011:..\src/command_processing.c **** 
4012:..\src/command_processing.c **** //==============================================================================
4013:..\src/command_processing.c **** //                                                   EMG ACTIVATION VELOCITY FSM
4014:..\src/command_processing.c **** //==============================================================================
4015:..\src/command_processing.c **** /* It decides which is the current emg activation velocity.*/
4016:..\src/command_processing.c **** 
4017:..\src/command_processing.c **** uint8 emg_activation_velocity_fsm() {
 25856              		.loc 1 4017 0
 25857              		.cfi_startproc
 25858              		@ args = 0, pretend = 0, frame = 16
 25859              		@ frame_needed = 1, uses_anonymous_args = 0
 25860              		@ link register save eliminated.
 25861 0000 80B4     		push	{r7}
 25862              		.cfi_def_cfa_offset 4
 25863              		.cfi_offset 7, -4
 25864 0002 85B0     		sub	sp, sp, #20
 25865              		.cfi_def_cfa_offset 24
 25866 0004 00AF     		add	r7, sp, #0
 25867              		.cfi_def_cfa_register 7
4018:..\src/command_processing.c ****       
4019:..\src/command_processing.c ****     static uint8 fsm_state = RELAX_STATE;     // Wrist FSM state
4020:..\src/command_processing.c ****     static int32 cnt = 0;
4021:..\src/command_processing.c ****     int32 CYDATA err_emg_1, err_emg_2; 
4022:..\src/command_processing.c ****     int32 CYDATA f_err_emg_1, f_err_emg_2; 
4023:..\src/command_processing.c ****     
4024:..\src/command_processing.c ****     err_emg_1 = g_adc_meas.emg[0] - c_mem.emg.emg_threshold[0];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 568


 25868              		.loc 1 4024 0
 25869 0006 534B     		ldr	r3, .L1048
 25870 0008 1B68     		ldr	r3, [r3]
 25871 000a 534A     		ldr	r2, .L1048+4
 25872 000c B2F8F021 		ldrh	r2, [r2, #496]
 25873 0010 9B1A     		subs	r3, r3, r2
 25874 0012 FB60     		str	r3, [r7, #12]
4025:..\src/command_processing.c ****     err_emg_2 = g_adc_meas.emg[1] - c_mem.emg.emg_threshold[1];
 25875              		.loc 1 4025 0
 25876 0014 4F4B     		ldr	r3, .L1048
 25877 0016 5B68     		ldr	r3, [r3, #4]
 25878 0018 4F4A     		ldr	r2, .L1048+4
 25879 001a B2F8F221 		ldrh	r2, [r2, #498]
 25880 001e 9B1A     		subs	r3, r3, r2
 25881 0020 BB60     		str	r3, [r7, #8]
4026:..\src/command_processing.c ****     f_err_emg_1 = g_adc_meas.emg[0] - c_mem.WR.fast_act_threshold[0];
 25882              		.loc 1 4026 0
 25883 0022 4C4B     		ldr	r3, .L1048
 25884 0024 1B68     		ldr	r3, [r3]
 25885 0026 4C4A     		ldr	r2, .L1048+4
 25886 0028 B2F8E222 		ldrh	r2, [r2, #738]
 25887 002c 9B1A     		subs	r3, r3, r2
 25888 002e 7B60     		str	r3, [r7, #4]
4027:..\src/command_processing.c ****     f_err_emg_2 = g_adc_meas.emg[1] - c_mem.WR.fast_act_threshold[1];
 25889              		.loc 1 4027 0
 25890 0030 484B     		ldr	r3, .L1048
 25891 0032 5B68     		ldr	r3, [r3, #4]
 25892 0034 484A     		ldr	r2, .L1048+4
 25893 0036 B2F8E422 		ldrh	r2, [r2, #740]
 25894 003a 9B1A     		subs	r3, r3, r2
 25895 003c 3B60     		str	r3, [r7]
4028:..\src/command_processing.c ****     
4029:..\src/command_processing.c **** 
4030:..\src/command_processing.c ****     // State machine - Evaluate emg activation status
4031:..\src/command_processing.c ****     // Note: in this way, diff_emg_1 and diff_emg_2 are for sure differences between two consecutiv
4032:..\src/command_processing.c ****     switch (fsm_state){
 25896              		.loc 1 4032 0
 25897 003e 474B     		ldr	r3, .L1048+8
 25898 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25899 0042 032B     		cmp	r3, #3
 25900 0044 7FD8     		bhi	.L1020
 25901 0046 01A2     		adr	r2, .L1022
 25902 0048 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 25903              		.p2align 2
 25904              	.L1022:
 25905 004c 5D000000 		.word	.L1021+1
 25906 0050 71000000 		.word	.L1023+1
 25907 0054 11010000 		.word	.L1024+1
 25908 0058 25010000 		.word	.L1025+1
 25909              		.p2align 1
 25910              	.L1021:
4033:..\src/command_processing.c ****         case RELAX_STATE:
4034:..\src/command_processing.c ****             if (err_emg_1 > 0 || err_emg_2 > 0){
 25911              		.loc 1 4034 0
 25912 005c FB68     		ldr	r3, [r7, #12]
 25913 005e 002B     		cmp	r3, #0
 25914 0060 02DC     		bgt	.L1026
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 569


 25915              		.loc 1 4034 0 is_stmt 0 discriminator 1
 25916 0062 BB68     		ldr	r3, [r7, #8]
 25917 0064 002B     		cmp	r3, #0
 25918 0066 67DD     		ble	.L1044
 25919              	.L1026:
4035:..\src/command_processing.c ****                 fsm_state = TIMER_STATE;
 25920              		.loc 1 4035 0 is_stmt 1
 25921 0068 3C4B     		ldr	r3, .L1048+8
 25922 006a 0122     		movs	r2, #1
 25923 006c 1A70     		strb	r2, [r3]
4036:..\src/command_processing.c ****             }
4037:..\src/command_processing.c ****             
4038:..\src/command_processing.c ****             break;
 25924              		.loc 1 4038 0
 25925 006e 63E0     		b	.L1044
 25926              	.L1023:
4039:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
4040:..\src/command_processing.c ****             if (err_emg_1 > 0 || err_emg_2 > 0){
 25927              		.loc 1 4040 0
 25928 0070 FB68     		ldr	r3, [r7, #12]
 25929 0072 002B     		cmp	r3, #0
 25930 0074 02DC     		bgt	.L1028
 25931              		.loc 1 4040 0 is_stmt 0 discriminator 1
 25932 0076 BB68     		ldr	r3, [r7, #8]
 25933 0078 002B     		cmp	r3, #0
 25934 007a 05DD     		ble	.L1029
 25935              	.L1028:
4041:..\src/command_processing.c ****                 cnt = cnt +1;
 25936              		.loc 1 4041 0 is_stmt 1
 25937 007c 384B     		ldr	r3, .L1048+12
 25938 007e 1B68     		ldr	r3, [r3]
 25939 0080 0133     		adds	r3, r3, #1
 25940 0082 374A     		ldr	r2, .L1048+12
 25941 0084 1360     		str	r3, [r2]
 25942 0086 02E0     		b	.L1030
 25943              	.L1029:
4042:..\src/command_processing.c ****             }
4043:..\src/command_processing.c ****             else {
4044:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
 25944              		.loc 1 4044 0
 25945 0088 344B     		ldr	r3, .L1048+8
 25946 008a 0022     		movs	r2, #0
 25947 008c 1A70     		strb	r2, [r3]
 25948              	.L1030:
4045:..\src/command_processing.c ****             }
4046:..\src/command_processing.c ****             
4047:..\src/command_processing.c ****             if (cnt > 100){
 25949              		.loc 1 4047 0
 25950 008e 344B     		ldr	r3, .L1048+12
 25951 0090 1B68     		ldr	r3, [r3]
 25952 0092 642B     		cmp	r3, #100
 25953 0094 52DD     		ble	.L1045
4048:..\src/command_processing.c ****                 if ((err_emg_1 > 0 && f_err_emg_1 > 0) || (err_emg_2 > 0 && f_err_emg_2 > 0)){
 25954              		.loc 1 4048 0
 25955 0096 FB68     		ldr	r3, [r7, #12]
 25956 0098 002B     		cmp	r3, #0
 25957 009a 02DD     		ble	.L1032
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 570


 25958              		.loc 1 4048 0 is_stmt 0 discriminator 1
 25959 009c 7B68     		ldr	r3, [r7, #4]
 25960 009e 002B     		cmp	r3, #0
 25961 00a0 05DC     		bgt	.L1033
 25962              	.L1032:
 25963              		.loc 1 4048 0 discriminator 3
 25964 00a2 BB68     		ldr	r3, [r7, #8]
 25965 00a4 002B     		cmp	r3, #0
 25966 00a6 0EDD     		ble	.L1034
 25967              		.loc 1 4048 0 discriminator 4
 25968 00a8 3B68     		ldr	r3, [r7]
 25969 00aa 002B     		cmp	r3, #0
 25970 00ac 0BDD     		ble	.L1034
 25971              	.L1033:
4049:..\src/command_processing.c ****                     // Fast activation
4050:..\src/command_processing.c ****                     if (c_mem.WR.activation_mode == 0){
 25972              		.loc 1 4050 0 is_stmt 1
 25973 00ae 2A4B     		ldr	r3, .L1048+4
 25974 00b0 93F8E032 		ldrb	r3, [r3, #736]	@ zero_extendqisi2
 25975 00b4 002B     		cmp	r3, #0
 25976 00b6 03D1     		bne	.L1035
4051:..\src/command_processing.c ****                         fsm_state = MOVE_DEVICE1;
 25977              		.loc 1 4051 0
 25978 00b8 284B     		ldr	r3, .L1048+8
 25979 00ba 0222     		movs	r2, #2
 25980 00bc 1A70     		strb	r2, [r3]
 25981 00be 02E0     		b	.L1034
 25982              	.L1035:
4052:..\src/command_processing.c ****                     }
4053:..\src/command_processing.c ****                     else{
4054:..\src/command_processing.c ****                         fsm_state = MOVE_DEVICE2;
 25983              		.loc 1 4054 0
 25984 00c0 264B     		ldr	r3, .L1048+8
 25985 00c2 0322     		movs	r2, #3
 25986 00c4 1A70     		strb	r2, [r3]
 25987              	.L1034:
4055:..\src/command_processing.c ****                     }
4056:..\src/command_processing.c ****                 }
4057:..\src/command_processing.c ****                 if ((err_emg_1 > 0 && f_err_emg_1 < 0) || (err_emg_2 > 0 && f_err_emg_2 < 0)){
 25988              		.loc 1 4057 0
 25989 00c6 FB68     		ldr	r3, [r7, #12]
 25990 00c8 002B     		cmp	r3, #0
 25991 00ca 02DD     		ble	.L1036
 25992              		.loc 1 4057 0 is_stmt 0 discriminator 1
 25993 00cc 7B68     		ldr	r3, [r7, #4]
 25994 00ce 002B     		cmp	r3, #0
 25995 00d0 05DB     		blt	.L1037
 25996              	.L1036:
 25997              		.loc 1 4057 0 discriminator 3
 25998 00d2 BB68     		ldr	r3, [r7, #8]
 25999 00d4 002B     		cmp	r3, #0
 26000 00d6 0EDD     		ble	.L1038
 26001              		.loc 1 4057 0 discriminator 4
 26002 00d8 3B68     		ldr	r3, [r7]
 26003 00da 002B     		cmp	r3, #0
 26004 00dc 0BDA     		bge	.L1038
 26005              	.L1037:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 571


4058:..\src/command_processing.c ****                     // Slow activation
4059:..\src/command_processing.c ****                     if (c_mem.WR.activation_mode == 0){
 26006              		.loc 1 4059 0 is_stmt 1
 26007 00de 1E4B     		ldr	r3, .L1048+4
 26008 00e0 93F8E032 		ldrb	r3, [r3, #736]	@ zero_extendqisi2
 26009 00e4 002B     		cmp	r3, #0
 26010 00e6 03D1     		bne	.L1039
4060:..\src/command_processing.c ****                         fsm_state = MOVE_DEVICE2;
 26011              		.loc 1 4060 0
 26012 00e8 1C4B     		ldr	r3, .L1048+8
 26013 00ea 0322     		movs	r2, #3
 26014 00ec 1A70     		strb	r2, [r3]
 26015 00ee 02E0     		b	.L1038
 26016              	.L1039:
4061:..\src/command_processing.c ****                     }
4062:..\src/command_processing.c ****                     else{
4063:..\src/command_processing.c ****                         fsm_state = MOVE_DEVICE1;
 26017              		.loc 1 4063 0
 26018 00f0 1A4B     		ldr	r3, .L1048+8
 26019 00f2 0222     		movs	r2, #2
 26020 00f4 1A70     		strb	r2, [r3]
 26021              	.L1038:
4064:..\src/command_processing.c ****                     }
4065:..\src/command_processing.c ****                 }
4066:..\src/command_processing.c ****                 if (err_emg_1 < 0 && err_emg_2 < 0){
 26022              		.loc 1 4066 0
 26023 00f6 FB68     		ldr	r3, [r7, #12]
 26024 00f8 002B     		cmp	r3, #0
 26025 00fa 05DA     		bge	.L1040
 26026              		.loc 1 4066 0 is_stmt 0 discriminator 1
 26027 00fc BB68     		ldr	r3, [r7, #8]
 26028 00fe 002B     		cmp	r3, #0
 26029 0100 02DA     		bge	.L1040
4067:..\src/command_processing.c ****                     // Involuntary activation
4068:..\src/command_processing.c ****                     fsm_state = RELAX_STATE;
 26030              		.loc 1 4068 0 is_stmt 1
 26031 0102 164B     		ldr	r3, .L1048+8
 26032 0104 0022     		movs	r2, #0
 26033 0106 1A70     		strb	r2, [r3]
 26034              	.L1040:
4069:..\src/command_processing.c ****                 }
4070:..\src/command_processing.c ****                 cnt = 0;
 26035              		.loc 1 4070 0
 26036 0108 154B     		ldr	r3, .L1048+12
 26037 010a 0022     		movs	r2, #0
 26038 010c 1A60     		str	r2, [r3]
4071:..\src/command_processing.c ****             }
4072:..\src/command_processing.c ****     
4073:..\src/command_processing.c ****             break;
 26039              		.loc 1 4073 0
 26040 010e 15E0     		b	.L1045
 26041              	.L1024:
4074:..\src/command_processing.c ****         case MOVE_DEVICE1:
4075:..\src/command_processing.c ****             
4076:..\src/command_processing.c ****             if (err_emg_1 < 0 && err_emg_2 < 0){
 26042              		.loc 1 4076 0
 26043 0110 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 572


 26044 0112 002B     		cmp	r3, #0
 26045 0114 14DA     		bge	.L1046
 26046              		.loc 1 4076 0 is_stmt 0 discriminator 1
 26047 0116 BB68     		ldr	r3, [r7, #8]
 26048 0118 002B     		cmp	r3, #0
 26049 011a 11DA     		bge	.L1046
4077:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
 26050              		.loc 1 4077 0 is_stmt 1
 26051 011c 0F4B     		ldr	r3, .L1048+8
 26052 011e 0022     		movs	r2, #0
 26053 0120 1A70     		strb	r2, [r3]
4078:..\src/command_processing.c ****             }
4079:..\src/command_processing.c ****         
4080:..\src/command_processing.c ****             break;
 26054              		.loc 1 4080 0
 26055 0122 0DE0     		b	.L1046
 26056              	.L1025:
4081:..\src/command_processing.c ****         case MOVE_DEVICE2:
4082:..\src/command_processing.c ****           
4083:..\src/command_processing.c ****             if (err_emg_1 < 0 && err_emg_2 < 0){
 26057              		.loc 1 4083 0
 26058 0124 FB68     		ldr	r3, [r7, #12]
 26059 0126 002B     		cmp	r3, #0
 26060 0128 0CDA     		bge	.L1047
 26061              		.loc 1 4083 0 is_stmt 0 discriminator 1
 26062 012a BB68     		ldr	r3, [r7, #8]
 26063 012c 002B     		cmp	r3, #0
 26064 012e 09DA     		bge	.L1047
4084:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
 26065              		.loc 1 4084 0 is_stmt 1
 26066 0130 0A4B     		ldr	r3, .L1048+8
 26067 0132 0022     		movs	r2, #0
 26068 0134 1A70     		strb	r2, [r3]
4085:..\src/command_processing.c ****             }
4086:..\src/command_processing.c ****             
4087:..\src/command_processing.c ****             break;
 26069              		.loc 1 4087 0
 26070 0136 05E0     		b	.L1047
 26071              	.L1044:
4038:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
 26072              		.loc 1 4038 0
 26073 0138 00BF     		nop
 26074 013a 04E0     		b	.L1020
 26075              	.L1045:
4073:..\src/command_processing.c ****         case MOVE_DEVICE1:
 26076              		.loc 1 4073 0
 26077 013c 00BF     		nop
 26078 013e 02E0     		b	.L1020
 26079              	.L1046:
4080:..\src/command_processing.c ****         case MOVE_DEVICE2:
 26080              		.loc 1 4080 0
 26081 0140 00BF     		nop
 26082 0142 00E0     		b	.L1020
 26083              	.L1047:
 26084              		.loc 1 4087 0
 26085 0144 00BF     		nop
 26086              	.L1020:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 573


4088:..\src/command_processing.c ****     }
4089:..\src/command_processing.c ****     
4090:..\src/command_processing.c ****     return fsm_state;
 26087              		.loc 1 4090 0
 26088 0146 054B     		ldr	r3, .L1048+8
 26089 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
4091:..\src/command_processing.c **** 
4092:..\src/command_processing.c **** }
 26090              		.loc 1 4092 0
 26091 014a 1846     		mov	r0, r3
 26092 014c 1437     		adds	r7, r7, #20
 26093              		.cfi_def_cfa_offset 4
 26094 014e BD46     		mov	sp, r7
 26095              		.cfi_def_cfa_register 13
 26096              		@ sp needed
 26097 0150 80BC     		pop	{r7}
 26098              		.cfi_restore 7
 26099              		.cfi_def_cfa_offset 0
 26100 0152 7047     		bx	lr
 26101              	.L1049:
 26102              		.align	2
 26103              	.L1048:
 26104 0154 00000000 		.word	g_adc_meas
 26105 0158 00000000 		.word	c_mem
 26106 015c 08000000 		.word	fsm_state.11457
 26107 0160 0C000000 		.word	cnt.11458
 26108              		.cfi_endproc
 26109              	.LFE113:
 26110              		.size	emg_activation_velocity_fsm, .-emg_activation_velocity_fsm
 26111              		.section	.text.otbk_act_wrist_control,"ax",%progbits
 26112              		.align	2
 26113              		.global	otbk_act_wrist_control
 26114              		.thumb
 26115              		.thumb_func
 26116              		.type	otbk_act_wrist_control, %function
 26117              	otbk_act_wrist_control:
 26118              	.LFB114:
4093:..\src/command_processing.c **** 
4094:..\src/command_processing.c **** //==============================================================================
4095:..\src/command_processing.c **** //                                          OTTOBOCK ACTIVE WRIST MASTER CONTROL
4096:..\src/command_processing.c **** //==============================================================================
4097:..\src/command_processing.c **** /* It moves Ottobock active wrist (as master) and connected SoftHand slave according to emg activat
4098:..\src/command_processing.c **** 
4099:..\src/command_processing.c **** void otbk_act_wrist_control(int slave_motor_idx) {
 26119              		.loc 1 4099 0
 26120              		.cfi_startproc
 26121              		@ args = 0, pretend = 0, frame = 16
 26122              		@ frame_needed = 1, uses_anonymous_args = 0
 26123 0000 80B5     		push	{r7, lr}
 26124              		.cfi_def_cfa_offset 8
 26125              		.cfi_offset 7, -8
 26126              		.cfi_offset 14, -4
 26127 0002 84B0     		sub	sp, sp, #16
 26128              		.cfi_def_cfa_offset 24
 26129 0004 00AF     		add	r7, sp, #0
 26130              		.cfi_def_cfa_register 7
 26131 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 574


4100:..\src/command_processing.c ****     
4101:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
4102:..\src/command_processing.c ****     
4103:..\src/command_processing.c ****     uint8 fsm_state = emg_activation_velocity_fsm();
 26132              		.loc 1 4103 0
 26133 0008 FFF7FEFF 		bl	emg_activation_velocity_fsm
 26134 000c 0346     		mov	r3, r0
 26135 000e FB73     		strb	r3, [r7, #15]
4104:..\src/command_processing.c ****         
4105:..\src/command_processing.c ****     // State machine - Evaluate emg activation status
4106:..\src/command_processing.c ****     // Note: in this way, diff_emg_1 and diff_emg_2 are for sure differences between two consecutiv
4107:..\src/command_processing.c ****     switch (fsm_state){
 26136              		.loc 1 4107 0
 26137 0010 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26138 0012 032B     		cmp	r3, #3
 26139 0014 61D8     		bhi	.L1051
 26140 0016 01A2     		adr	r2, .L1053
 26141 0018 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 26142              		.p2align 2
 26143              	.L1053:
 26144 001c 2D000000 		.word	.L1052+1
 26145 0020 DB000000 		.word	.L1051+1
 26146 0024 5D000000 		.word	.L1055+1
 26147 0028 C9000000 		.word	.L1056+1
 26148              		.p2align 1
 26149              	.L1052:
4108:..\src/command_processing.c ****         case RELAX_STATE:
4109:..\src/command_processing.c ****             
4110:..\src/command_processing.c ****             // Wrist stop
4111:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
 26150              		.loc 1 4111 0
 26151 002c 354B     		ldr	r3, .L1065
 26152 002e 0022     		movs	r2, #0
 26153 0030 9A60     		str	r2, [r3, #8]
4112:..\src/command_processing.c ****             
4113:..\src/command_processing.c ****             // Softhand stop
4114:..\src/command_processing.c ****             // Do not update the motor reference, so the SoftHand stays still
4115:..\src/command_processing.c ****             g_ref[slave_motor_idx].pos = g_refOld[slave_motor_idx].pos;
 26154              		.loc 1 4115 0
 26155 0032 354A     		ldr	r2, .L1065+4
 26156 0034 7B68     		ldr	r3, [r7, #4]
 26157 0036 1B01     		lsls	r3, r3, #4
 26158 0038 1344     		add	r3, r3, r2
 26159 003a 1A68     		ldr	r2, [r3]
 26160 003c 3349     		ldr	r1, .L1065+8
 26161 003e 7B68     		ldr	r3, [r7, #4]
 26162 0040 1B01     		lsls	r3, r3, #4
 26163 0042 0B44     		add	r3, r3, r1
 26164 0044 1A60     		str	r2, [r3]
4116:..\src/command_processing.c ****             g_refNew[slave_motor_idx].pos = g_ref[slave_motor_idx].pos;
 26165              		.loc 1 4116 0
 26166 0046 314A     		ldr	r2, .L1065+8
 26167 0048 7B68     		ldr	r3, [r7, #4]
 26168 004a 1B01     		lsls	r3, r3, #4
 26169 004c 1344     		add	r3, r3, r2
 26170 004e 1A68     		ldr	r2, [r3]
 26171 0050 2C49     		ldr	r1, .L1065
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 575


 26172 0052 7B68     		ldr	r3, [r7, #4]
 26173 0054 1B01     		lsls	r3, r3, #4
 26174 0056 0B44     		add	r3, r3, r1
 26175 0058 1A60     		str	r2, [r3]
4117:..\src/command_processing.c ****             
4118:..\src/command_processing.c ****             break;
 26176              		.loc 1 4118 0
 26177 005a 3EE0     		b	.L1051
 26178              	.L1055:
4119:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
4120:..\src/command_processing.c ****                 
4121:..\src/command_processing.c ****             break;
4122:..\src/command_processing.c ****         case MOVE_DEVICE1: // Wrist movement
4123:..\src/command_processing.c ****             
4124:..\src/command_processing.c ****             // Wrist movement
4125:..\src/command_processing.c ****             if (g_adc_meas.emg[0] > g_adc_meas.emg[1]){
 26179              		.loc 1 4125 0
 26180 005c 2C4B     		ldr	r3, .L1065+12
 26181 005e 1A68     		ldr	r2, [r3]
 26182 0060 2B4B     		ldr	r3, .L1065+12
 26183 0062 5B68     		ldr	r3, [r3, #4]
 26184 0064 9A42     		cmp	r2, r3
 26185 0066 0DDD     		ble	.L1057
4126:..\src/command_processing.c ****                 if (c_mem.WR.wrist_direction_association == 0){
 26186              		.loc 1 4126 0
 26187 0068 2A4B     		ldr	r3, .L1065+16
 26188 006a 93F8E632 		ldrb	r3, [r3, #742]	@ zero_extendqisi2
 26189 006e 002B     		cmp	r3, #0
 26190 0070 03D1     		bne	.L1058
4127:..\src/command_processing.c ****                     g_refNew[0].pwm = 60;       //Rotate CW
 26191              		.loc 1 4127 0
 26192 0072 244B     		ldr	r3, .L1065
 26193 0074 3C22     		movs	r2, #60
 26194 0076 9A60     		str	r2, [r3, #8]
 26195 0078 11E0     		b	.L1060
 26196              	.L1058:
4128:..\src/command_processing.c ****                 }
4129:..\src/command_processing.c ****                 else {
4130:..\src/command_processing.c ****                     g_refNew[0].pwm = -60;   // Rotate CCW
 26197              		.loc 1 4130 0
 26198 007a 224B     		ldr	r3, .L1065
 26199 007c 6FF03B02 		mvn	r2, #59
 26200 0080 9A60     		str	r2, [r3, #8]
 26201 0082 0CE0     		b	.L1060
 26202              	.L1057:
4131:..\src/command_processing.c ****                 }
4132:..\src/command_processing.c ****             }
4133:..\src/command_processing.c ****             else {
4134:..\src/command_processing.c ****                 if (c_mem.WR.wrist_direction_association == 0){
 26203              		.loc 1 4134 0
 26204 0084 234B     		ldr	r3, .L1065+16
 26205 0086 93F8E632 		ldrb	r3, [r3, #742]	@ zero_extendqisi2
 26206 008a 002B     		cmp	r3, #0
 26207 008c 04D1     		bne	.L1061
4135:..\src/command_processing.c ****                     g_refNew[0].pwm = -60;   // Rotate CCW
 26208              		.loc 1 4135 0
 26209 008e 1D4B     		ldr	r3, .L1065
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 576


 26210 0090 6FF03B02 		mvn	r2, #59
 26211 0094 9A60     		str	r2, [r3, #8]
 26212 0096 02E0     		b	.L1060
 26213              	.L1061:
4136:..\src/command_processing.c ****                 }
4137:..\src/command_processing.c ****                 else {
4138:..\src/command_processing.c ****                     g_refNew[0].pwm = 60;       //Rotate CW
 26214              		.loc 1 4138 0
 26215 0098 1A4B     		ldr	r3, .L1065
 26216 009a 3C22     		movs	r2, #60
 26217 009c 9A60     		str	r2, [r3, #8]
 26218              	.L1060:
4139:..\src/command_processing.c ****                 }
4140:..\src/command_processing.c ****             }
4141:..\src/command_processing.c ****             
4142:..\src/command_processing.c ****             // Softhand stop
4143:..\src/command_processing.c ****             // Do not update the motor reference, so the SoftHand stays still
4144:..\src/command_processing.c ****             g_ref[slave_motor_idx].pos = g_refOld[slave_motor_idx].pos;
 26219              		.loc 1 4144 0
 26220 009e 1A4A     		ldr	r2, .L1065+4
 26221 00a0 7B68     		ldr	r3, [r7, #4]
 26222 00a2 1B01     		lsls	r3, r3, #4
 26223 00a4 1344     		add	r3, r3, r2
 26224 00a6 1A68     		ldr	r2, [r3]
 26225 00a8 1849     		ldr	r1, .L1065+8
 26226 00aa 7B68     		ldr	r3, [r7, #4]
 26227 00ac 1B01     		lsls	r3, r3, #4
 26228 00ae 0B44     		add	r3, r3, r1
 26229 00b0 1A60     		str	r2, [r3]
4145:..\src/command_processing.c ****             g_refNew[slave_motor_idx].pos = g_ref[slave_motor_idx].pos;
 26230              		.loc 1 4145 0
 26231 00b2 164A     		ldr	r2, .L1065+8
 26232 00b4 7B68     		ldr	r3, [r7, #4]
 26233 00b6 1B01     		lsls	r3, r3, #4
 26234 00b8 1344     		add	r3, r3, r2
 26235 00ba 1A68     		ldr	r2, [r3]
 26236 00bc 1149     		ldr	r1, .L1065
 26237 00be 7B68     		ldr	r3, [r7, #4]
 26238 00c0 1B01     		lsls	r3, r3, #4
 26239 00c2 0B44     		add	r3, r3, r1
 26240 00c4 1A60     		str	r2, [r3]
4146:..\src/command_processing.c ****             
4147:..\src/command_processing.c ****             break;
 26241              		.loc 1 4147 0
 26242 00c6 08E0     		b	.L1051
 26243              	.L1056:
4148:..\src/command_processing.c ****         case MOVE_DEVICE2: // Hand movement
4149:..\src/command_processing.c ****             
4150:..\src/command_processing.c ****             // Wrist stop
4151:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
 26244              		.loc 1 4151 0
 26245 00c8 0E4B     		ldr	r3, .L1065
 26246 00ca 0022     		movs	r2, #0
 26247 00cc 9A60     		str	r2, [r3, #8]
4152:..\src/command_processing.c ****             
4153:..\src/command_processing.c ****             // SoftHand movement
4154:..\src/command_processing.c ****             // Drive slave with reference generated on second motor index
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 577


4155:..\src/command_processing.c ****             // Use second motor structures and parameters, only to generate position reference not 
4156:..\src/command_processing.c ****             // IMPORTANT: configure second motor parameters with proper slave parameters
4157:..\src/command_processing.c ****             motor_control_generic(slave_motor_idx);
 26248              		.loc 1 4157 0
 26249 00ce 7B68     		ldr	r3, [r7, #4]
 26250 00d0 DBB2     		uxtb	r3, r3
 26251 00d2 1846     		mov	r0, r3
 26252 00d4 FFF7FEFF 		bl	motor_control_generic
4158:..\src/command_processing.c ****             
4159:..\src/command_processing.c ****             break;
 26253              		.loc 1 4159 0
 26254 00d8 00BF     		nop
 26255              	.L1051:
4160:..\src/command_processing.c ****     }
4161:..\src/command_processing.c ****         
4162:..\src/command_processing.c ****     // Limit output voltage
4163:..\src/command_processing.c ****     if (g_refNew[0].pwm > 67) // 67 (8.4V max of 2S ottobock battery) 66.6% of 12.6V
 26256              		.loc 1 4163 0
 26257 00da 0A4B     		ldr	r3, .L1065
 26258 00dc 9B68     		ldr	r3, [r3, #8]
 26259 00de 432B     		cmp	r3, #67
 26260 00e0 02DD     		ble	.L1062
4164:..\src/command_processing.c ****         g_refNew[0].pwm = 67; // 67
 26261              		.loc 1 4164 0
 26262 00e2 084B     		ldr	r3, .L1065
 26263 00e4 4322     		movs	r2, #67
 26264 00e6 9A60     		str	r2, [r3, #8]
 26265              	.L1062:
4165:..\src/command_processing.c ****     if (g_refNew[0].pwm < -67)
 26266              		.loc 1 4165 0
 26267 00e8 064B     		ldr	r3, .L1065
 26268 00ea 9B68     		ldr	r3, [r3, #8]
 26269 00ec 13F1430F 		cmn	r3, #67
 26270 00f0 03DA     		bge	.L1064
4166:..\src/command_processing.c ****         g_refNew[0].pwm = -67;
 26271              		.loc 1 4166 0
 26272 00f2 044B     		ldr	r3, .L1065
 26273 00f4 6FF04202 		mvn	r2, #66
 26274 00f8 9A60     		str	r2, [r3, #8]
 26275              	.L1064:
4167:..\src/command_processing.c ****     
4168:..\src/command_processing.c **** #endif
4169:..\src/command_processing.c **** }
 26276              		.loc 1 4169 0
 26277 00fa 00BF     		nop
 26278 00fc 1037     		adds	r7, r7, #16
 26279              		.cfi_def_cfa_offset 8
 26280 00fe BD46     		mov	sp, r7
 26281              		.cfi_def_cfa_register 13
 26282              		@ sp needed
 26283 0100 80BD     		pop	{r7, pc}
 26284              	.L1066:
 26285 0102 00BF     		.align	2
 26286              	.L1065:
 26287 0104 00000000 		.word	g_refNew
 26288 0108 00000000 		.word	g_refOld
 26289 010c 00000000 		.word	g_ref
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 578


 26290 0110 00000000 		.word	g_adc_meas
 26291 0114 00000000 		.word	c_mem
 26292              		.cfi_endproc
 26293              	.LFE114:
 26294              		.size	otbk_act_wrist_control, .-otbk_act_wrist_control
 26295              		.section	.text.drive_slave,"ax",%progbits
 26296              		.align	2
 26297              		.global	drive_slave
 26298              		.thumb
 26299              		.thumb_func
 26300              		.type	drive_slave, %function
 26301              	drive_slave:
 26302              	.LFB115:
4170:..\src/command_processing.c **** 
4171:..\src/command_processing.c **** //==============================================================================
4172:..\src/command_processing.c **** //                                                                   DRIVE SLAVE
4173:..\src/command_processing.c **** //==============================================================================
4174:..\src/command_processing.c ****  
4175:..\src/command_processing.c **** void drive_slave(uint8 motor_idx, uint8 slave_ID) {
 26303              		.loc 1 4175 0
 26304              		.cfi_startproc
 26305              		@ args = 0, pretend = 0, frame = 24
 26306              		@ frame_needed = 1, uses_anonymous_args = 0
 26307 0000 90B5     		push	{r4, r7, lr}
 26308              		.cfi_def_cfa_offset 12
 26309              		.cfi_offset 4, -12
 26310              		.cfi_offset 7, -8
 26311              		.cfi_offset 14, -4
 26312 0002 87B0     		sub	sp, sp, #28
 26313              		.cfi_def_cfa_offset 40
 26314 0004 00AF     		add	r7, sp, #0
 26315              		.cfi_def_cfa_register 7
 26316 0006 0346     		mov	r3, r0
 26317 0008 0A46     		mov	r2, r1
 26318 000a FB71     		strb	r3, [r7, #7]
 26319 000c 1346     		mov	r3, r2
 26320 000e BB71     		strb	r3, [r7, #6]
4176:..\src/command_processing.c **** 
4177:..\src/command_processing.c **** #ifdef MASTER_FW
4178:..\src/command_processing.c ****     uint8 packet_data[6];
4179:..\src/command_processing.c ****     uint8 packet_lenght;
4180:..\src/command_processing.c ****     int16 aux_int16;
4181:..\src/command_processing.c **** 
4182:..\src/command_processing.c ****     // If not the use of handle or an emg input mode is set, exit from master_mode
4183:..\src/command_processing.c ****     if( c_mem.motor[motor_idx].input_mode != INPUT_MODE_ENCODER3          &&
 26321              		.loc 1 4183 0
 26322 0010 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 26323 0012 5349     		ldr	r1, .L1072
 26324 0014 1346     		mov	r3, r2
 26325 0016 DB00     		lsls	r3, r3, #3
 26326 0018 9B1A     		subs	r3, r3, r2
 26327 001a 1B01     		lsls	r3, r3, #4
 26328 001c 0B44     		add	r3, r3, r1
 26329 001e 03F58773 		add	r3, r3, #270
 26330 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26331 0024 012B     		cmp	r3, #1
 26332 0026 3FD0     		beq	.L1068
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 579


4184:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_PROPORTIONAL  &&
 26333              		.loc 1 4184 0 discriminator 1
 26334 0028 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 26335 002a 4D49     		ldr	r1, .L1072
 26336 002c 1346     		mov	r3, r2
 26337 002e DB00     		lsls	r3, r3, #3
 26338 0030 9B1A     		subs	r3, r3, r2
 26339 0032 1B01     		lsls	r3, r3, #4
 26340 0034 0B44     		add	r3, r3, r1
 26341 0036 03F58773 		add	r3, r3, #270
 26342 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
4183:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_PROPORTIONAL  &&
 26343              		.loc 1 4183 0 discriminator 1
 26344 003c 022B     		cmp	r3, #2
 26345 003e 33D0     		beq	.L1068
4185:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_INTEGRAL      &&
 26346              		.loc 1 4185 0
 26347 0040 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 26348 0042 4749     		ldr	r1, .L1072
 26349 0044 1346     		mov	r3, r2
 26350 0046 DB00     		lsls	r3, r3, #3
 26351 0048 9B1A     		subs	r3, r3, r2
 26352 004a 1B01     		lsls	r3, r3, #4
 26353 004c 0B44     		add	r3, r3, r1
 26354 004e 03F58773 		add	r3, r3, #270
 26355 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
4184:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_PROPORTIONAL  &&
 26356              		.loc 1 4184 0
 26357 0054 032B     		cmp	r3, #3
 26358 0056 27D0     		beq	.L1068
4186:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_FCFS          &&
 26359              		.loc 1 4186 0
 26360 0058 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 26361 005a 4149     		ldr	r1, .L1072
 26362 005c 1346     		mov	r3, r2
 26363 005e DB00     		lsls	r3, r3, #3
 26364 0060 9B1A     		subs	r3, r3, r2
 26365 0062 1B01     		lsls	r3, r3, #4
 26366 0064 0B44     		add	r3, r3, r1
 26367 0066 03F58773 		add	r3, r3, #270
 26368 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
4185:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_INTEGRAL      &&
 26369              		.loc 1 4185 0
 26370 006c 042B     		cmp	r3, #4
 26371 006e 1BD0     		beq	.L1068
4187:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_FCFS_ADV          &&
 26372              		.loc 1 4187 0
 26373 0070 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 26374 0072 3B49     		ldr	r1, .L1072
 26375 0074 1346     		mov	r3, r2
 26376 0076 DB00     		lsls	r3, r3, #3
 26377 0078 9B1A     		subs	r3, r3, r2
 26378 007a 1B01     		lsls	r3, r3, #4
 26379 007c 0B44     		add	r3, r3, r1
 26380 007e 03F58773 		add	r3, r3, #270
 26381 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
4186:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_FCFS          &&
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 580


 26382              		.loc 1 4186 0
 26383 0084 052B     		cmp	r3, #5
 26384 0086 0FD0     		beq	.L1068
4188:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_PROPORTIONAL_NC     ){
 26385              		.loc 1 4188 0
 26386 0088 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 26387 008a 3549     		ldr	r1, .L1072
 26388 008c 1346     		mov	r3, r2
 26389 008e DB00     		lsls	r3, r3, #3
 26390 0090 9B1A     		subs	r3, r3, r2
 26391 0092 1B01     		lsls	r3, r3, #4
 26392 0094 0B44     		add	r3, r3, r1
 26393 0096 03F58773 		add	r3, r3, #270
 26394 009a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
4187:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_FCFS_ADV          &&
 26395              		.loc 1 4187 0
 26396 009c 072B     		cmp	r3, #7
 26397 009e 03D0     		beq	.L1068
4189:..\src/command_processing.c ****         master_mode = 0;
 26398              		.loc 1 4189 0
 26399 00a0 304B     		ldr	r3, .L1072+4
 26400 00a2 0022     		movs	r2, #0
 26401 00a4 1A70     		strb	r2, [r3]
4190:..\src/command_processing.c ****         return;
 26402              		.loc 1 4190 0
 26403 00a6 58E0     		b	.L1067
 26404              	.L1068:
4191:..\src/command_processing.c ****     }
4192:..\src/command_processing.c ****         
4193:..\src/command_processing.c ****     if (dev_tension[0] >= 5000 && dev_tension[0] < 7000){
 26405              		.loc 1 4193 0
 26406 00a8 2F4B     		ldr	r3, .L1072+8
 26407 00aa 1B68     		ldr	r3, [r3]
 26408 00ac 41F28732 		movw	r2, #4999
 26409 00b0 9342     		cmp	r3, r2
 26410 00b2 09DD     		ble	.L1070
 26411              		.loc 1 4193 0 is_stmt 0 discriminator 1
 26412 00b4 2C4B     		ldr	r3, .L1072+8
 26413 00b6 1B68     		ldr	r3, [r3]
 26414 00b8 41F65732 		movw	r2, #6999
 26415 00bc 9342     		cmp	r3, r2
 26416 00be 03DC     		bgt	.L1070
4194:..\src/command_processing.c ****         master_mode = 0;
 26417              		.loc 1 4194 0 is_stmt 1
 26418 00c0 284B     		ldr	r3, .L1072+4
 26419 00c2 0022     		movs	r2, #0
 26420 00c4 1A70     		strb	r2, [r3]
4195:..\src/command_processing.c ****         return;
 26421              		.loc 1 4195 0
 26422 00c6 48E0     		b	.L1067
 26423              	.L1070:
4196:..\src/command_processing.c ****     }
4197:..\src/command_processing.c ****     
4198:..\src/command_processing.c ****        
4199:..\src/command_processing.c ****     //Sends a Set inputs command to a second board
4200:..\src/command_processing.c ****     packet_data[0] = CMD_SET_INPUTS;
 26424              		.loc 1 4200 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 581


 26425 00c8 8223     		movs	r3, #130
 26426 00ca 3B74     		strb	r3, [r7, #16]
4201:..\src/command_processing.c ****     aux_int16 = (int16) (g_ref[motor_idx].pos >> g_mem.enc[g_mem.motor[motor_idx].encoder_line].res
 26427              		.loc 1 4201 0
 26428 00cc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 26429 00ce 274A     		ldr	r2, .L1072+12
 26430 00d0 1B01     		lsls	r3, r3, #4
 26431 00d2 1344     		add	r3, r3, r2
 26432 00d4 1968     		ldr	r1, [r3]
 26433 00d6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 26434 00d8 2548     		ldr	r0, .L1072+16
 26435 00da 1346     		mov	r3, r2
 26436 00dc DB00     		lsls	r3, r3, #3
 26437 00de 9B1A     		subs	r3, r3, r2
 26438 00e0 1B01     		lsls	r3, r3, #4
 26439 00e2 0344     		add	r3, r3, r0
 26440 00e4 03F58873 		add	r3, r3, #272
 26441 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26442 00ea 1846     		mov	r0, r3
 26443 00ec 204A     		ldr	r2, .L1072+16
 26444 00ee 0346     		mov	r3, r0
 26445 00f0 5B00     		lsls	r3, r3, #1
 26446 00f2 0344     		add	r3, r3, r0
 26447 00f4 1B01     		lsls	r3, r3, #4
 26448 00f6 1344     		add	r3, r3, r2
 26449 00f8 03F29513 		addw	r3, r3, #405
 26450 00fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26451 00fe 41FA03F3 		asr	r3, r1, r3
 26452 0102 1BB2     		sxth	r3, r3
 26453 0104 FB81     		strh	r3, [r7, #14]	@ movhi
4202:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 26454              		.loc 1 4202 0
 26455 0106 07F10E03 		add	r3, r7, #14
 26456 010a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26457 010c BB74     		strb	r3, [r7, #18]
4203:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 26458              		.loc 1 4203 0
 26459 010e 07F10E03 		add	r3, r7, #14
 26460 0112 0133     		adds	r3, r3, #1
 26461 0114 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26462 0116 7B74     		strb	r3, [r7, #17]
4204:..\src/command_processing.c ****     *((int16 *) &packet_data[3]) = 0;
 26463              		.loc 1 4204 0
 26464 0118 07F11003 		add	r3, r7, #16
 26465 011c 0333     		adds	r3, r3, #3
 26466 011e 0022     		movs	r2, #0
 26467 0120 1A80     		strh	r2, [r3]	@ movhi
4205:..\src/command_processing.c ****     
4206:..\src/command_processing.c ****     packet_lenght = 6;
 26468              		.loc 1 4206 0
 26469 0122 0623     		movs	r3, #6
 26470 0124 FB75     		strb	r3, [r7, #23]
4207:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
 26471              		.loc 1 4207 0
 26472 0126 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 26473 0128 5C1E     		subs	r4, r3, #1
 26474 012a FB7D     		ldrb	r3, [r7, #23]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 582


 26475 012c 013B     		subs	r3, r3, #1
 26476 012e DAB2     		uxtb	r2, r3
 26477 0130 07F11003 		add	r3, r7, #16
 26478 0134 1146     		mov	r1, r2
 26479 0136 1846     		mov	r0, r3
 26480 0138 FFF7FEFF 		bl	LCRChecksum
 26481 013c 0346     		mov	r3, r0
 26482 013e 1A46     		mov	r2, r3
 26483 0140 07F11803 		add	r3, r7, #24
 26484 0144 2344     		add	r3, r3, r4
 26485 0146 03F8082C 		strb	r2, [r3, #-8]
4208:..\src/command_processing.c ****     commWriteID(packet_data, packet_lenght, slave_ID);
 26486              		.loc 1 4208 0
 26487 014a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 26488 014c 99B2     		uxth	r1, r3
 26489 014e BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 26490 0150 07F11003 		add	r3, r7, #16
 26491 0154 1846     		mov	r0, r3
 26492 0156 FFF7FEFF 		bl	commWriteID
 26493              	.L1067:
4209:..\src/command_processing.c **** 
4210:..\src/command_processing.c **** #endif
4211:..\src/command_processing.c **** }
 26494              		.loc 1 4211 0
 26495 015a 1C37     		adds	r7, r7, #28
 26496              		.cfi_def_cfa_offset 12
 26497 015c BD46     		mov	sp, r7
 26498              		.cfi_def_cfa_register 13
 26499              		@ sp needed
 26500 015e 90BD     		pop	{r4, r7, pc}
 26501              	.L1073:
 26502              		.align	2
 26503              	.L1072:
 26504 0160 00000000 		.word	c_mem
 26505 0164 00000000 		.word	master_mode
 26506 0168 00000000 		.word	dev_tension
 26507 016c 00000000 		.word	g_ref
 26508 0170 00000000 		.word	g_mem
 26509              		.cfi_endproc
 26510              	.LFE115:
 26511              		.size	drive_slave, .-drive_slave
 26512              		.section	.text.stop_master_device,"ax",%progbits
 26513              		.align	2
 26514              		.global	stop_master_device
 26515              		.thumb
 26516              		.thumb_func
 26517              		.type	stop_master_device, %function
 26518              	stop_master_device:
 26519              	.LFB116:
4212:..\src/command_processing.c **** 
4213:..\src/command_processing.c **** //==============================================================================
4214:..\src/command_processing.c **** //                                                            STOP MASTER DEVICE
4215:..\src/command_processing.c **** //==============================================================================
4216:..\src/command_processing.c ****  
4217:..\src/command_processing.c **** void stop_master_device() {
 26520              		.loc 1 4217 0
 26521              		.cfi_startproc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 583


 26522              		@ args = 0, pretend = 0, frame = 0
 26523              		@ frame_needed = 1, uses_anonymous_args = 0
 26524              		@ link register save eliminated.
 26525 0000 80B4     		push	{r7}
 26526              		.cfi_def_cfa_offset 4
 26527              		.cfi_offset 7, -4
 26528 0002 00AF     		add	r7, sp, #0
 26529              		.cfi_def_cfa_register 7
4218:..\src/command_processing.c ****     
4219:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
4220:..\src/command_processing.c ****     if (c_mem.dev.dev_type == AIR_CHAMBERS_FB){
4221:..\src/command_processing.c ****         // Stop pump and open valve
4222:..\src/command_processing.c ****         g_refNew[0].pwm = 0;    
4223:..\src/command_processing.c ****         VALVE_Write(0);
4224:..\src/command_processing.c ****     }
4225:..\src/command_processing.c **** #endif
4226:..\src/command_processing.c **** 
4227:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
4228:..\src/command_processing.c ****     if (c_mem.dev.dev_type == OTBK_ACT_WRIST_MS){
 26530              		.loc 1 4228 0
 26531 0004 054B     		ldr	r3, .L1077
 26532 0006 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 26533 000a 032B     		cmp	r3, #3
 26534 000c 02D1     		bne	.L1076
4229:..\src/command_processing.c ****         //Stop wrist motor
4230:..\src/command_processing.c ****         g_refNew[0].pwm = 0;
 26535              		.loc 1 4230 0
 26536 000e 044B     		ldr	r3, .L1077+4
 26537 0010 0022     		movs	r2, #0
 26538 0012 9A60     		str	r2, [r3, #8]
 26539              	.L1076:
4231:..\src/command_processing.c ****     }
4232:..\src/command_processing.c **** #endif    
4233:..\src/command_processing.c **** }
 26540              		.loc 1 4233 0
 26541 0014 00BF     		nop
 26542 0016 BD46     		mov	sp, r7
 26543              		.cfi_def_cfa_register 13
 26544              		@ sp needed
 26545 0018 80BC     		pop	{r7}
 26546              		.cfi_restore 7
 26547              		.cfi_def_cfa_offset 0
 26548 001a 7047     		bx	lr
 26549              	.L1078:
 26550              		.align	2
 26551              	.L1077:
 26552 001c 00000000 		.word	c_mem
 26553 0020 00000000 		.word	g_refNew
 26554              		.cfi_endproc
 26555              	.LFE116:
 26556              		.size	stop_master_device, .-stop_master_device
 26557              		.section	.text.deactivate_slaves,"ax",%progbits
 26558              		.align	2
 26559              		.global	deactivate_slaves
 26560              		.thumb
 26561              		.thumb_func
 26562              		.type	deactivate_slaves, %function
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 584


 26563              	deactivate_slaves:
 26564              	.LFB117:
4234:..\src/command_processing.c **** 
4235:..\src/command_processing.c **** //==============================================================================
4236:..\src/command_processing.c **** //                                                             DEACTIVATE SLAVES
4237:..\src/command_processing.c **** //==============================================================================
4238:..\src/command_processing.c ****  
4239:..\src/command_processing.c **** void deactivate_slaves() {
 26565              		.loc 1 4239 0
 26566              		.cfi_startproc
 26567              		@ args = 0, pretend = 0, frame = 16
 26568              		@ frame_needed = 1, uses_anonymous_args = 0
 26569 0000 90B5     		push	{r4, r7, lr}
 26570              		.cfi_def_cfa_offset 12
 26571              		.cfi_offset 4, -12
 26572              		.cfi_offset 7, -8
 26573              		.cfi_offset 14, -4
 26574 0002 85B0     		sub	sp, sp, #20
 26575              		.cfi_def_cfa_offset 32
 26576 0004 00AF     		add	r7, sp, #0
 26577              		.cfi_def_cfa_register 7
4240:..\src/command_processing.c ****     
4241:..\src/command_processing.c **** #ifdef MASTER_FW
4242:..\src/command_processing.c ****     
4243:..\src/command_processing.c ****     uint8 packet_data[10];
4244:..\src/command_processing.c ****     uint8 packet_lenght;
4245:..\src/command_processing.c ****     
4246:..\src/command_processing.c ****     // If not a emg input mode is set, exit from master_mode
4247:..\src/command_processing.c ****     if(c_mem.motor[0].input_mode != INPUT_MODE_EMG_PROPORTIONAL  &&
 26578              		.loc 1 4247 0
 26579 0006 204B     		ldr	r3, .L1082
 26580 0008 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 26581 000c 022B     		cmp	r3, #2
 26582 000e 17D0     		beq	.L1080
4248:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_INTEGRAL     &&
 26583              		.loc 1 4248 0 discriminator 1
 26584 0010 1D4B     		ldr	r3, .L1082
 26585 0012 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
4247:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_INTEGRAL     &&
 26586              		.loc 1 4247 0 discriminator 1
 26587 0016 032B     		cmp	r3, #3
 26588 0018 12D0     		beq	.L1080
4249:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS         &&
 26589              		.loc 1 4249 0
 26590 001a 1B4B     		ldr	r3, .L1082
 26591 001c 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
4248:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_INTEGRAL     &&
 26592              		.loc 1 4248 0
 26593 0020 042B     		cmp	r3, #4
 26594 0022 0DD0     		beq	.L1080
4250:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS_ADV     &&
 26595              		.loc 1 4250 0
 26596 0024 184B     		ldr	r3, .L1082
 26597 0026 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
4249:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS         &&
 26598              		.loc 1 4249 0
 26599 002a 052B     		cmp	r3, #5
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 585


 26600 002c 08D0     		beq	.L1080
4251:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_PROPORTIONAL_NC     ){
 26601              		.loc 1 4251 0
 26602 002e 164B     		ldr	r3, .L1082
 26603 0030 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
4250:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS_ADV     &&
 26604              		.loc 1 4250 0
 26605 0034 072B     		cmp	r3, #7
 26606 0036 03D0     		beq	.L1080
4252:..\src/command_processing.c ****         master_mode = 0;
 26607              		.loc 1 4252 0
 26608 0038 144B     		ldr	r3, .L1082+4
 26609 003a 0022     		movs	r2, #0
 26610 003c 1A70     		strb	r2, [r3]
 26611 003e 1FE0     		b	.L1079
 26612              	.L1080:
4253:..\src/command_processing.c ****         return;
4254:..\src/command_processing.c ****     }
4255:..\src/command_processing.c ****    
4256:..\src/command_processing.c ****     //Sends a Set inputs command to a second board
4257:..\src/command_processing.c ****     packet_data[0] = CMD_ACTIVATE;
 26613              		.loc 1 4257 0
 26614 0040 8023     		movs	r3, #128
 26615 0042 3B71     		strb	r3, [r7, #4]
4258:..\src/command_processing.c **** 
4259:..\src/command_processing.c ****     *((int16 *) &packet_data[1]) = 0;   //3 to activate, 0 to deactivate
 26616              		.loc 1 4259 0
 26617 0044 3B1D     		adds	r3, r7, #4
 26618 0046 0133     		adds	r3, r3, #1
 26619 0048 0022     		movs	r2, #0
 26620 004a 1A80     		strh	r2, [r3]	@ movhi
4260:..\src/command_processing.c ****     packet_lenght = 3;
 26621              		.loc 1 4260 0
 26622 004c 0323     		movs	r3, #3
 26623 004e FB73     		strb	r3, [r7, #15]
4261:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
 26624              		.loc 1 4261 0
 26625 0050 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26626 0052 5C1E     		subs	r4, r3, #1
 26627 0054 FB7B     		ldrb	r3, [r7, #15]
 26628 0056 013B     		subs	r3, r3, #1
 26629 0058 DAB2     		uxtb	r2, r3
 26630 005a 3B1D     		adds	r3, r7, #4
 26631 005c 1146     		mov	r1, r2
 26632 005e 1846     		mov	r0, r3
 26633 0060 FFF7FEFF 		bl	LCRChecksum
 26634 0064 0346     		mov	r3, r0
 26635 0066 1A46     		mov	r2, r3
 26636 0068 07F11003 		add	r3, r7, #16
 26637 006c 2344     		add	r3, r3, r4
 26638 006e 03F80C2C 		strb	r2, [r3, #-12]
4262:..\src/command_processing.c ****     
4263:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 26639              		.loc 1 4263 0
 26640 0072 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26641 0074 9AB2     		uxth	r2, r3
 26642 0076 3B1D     		adds	r3, r7, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 586


 26643 0078 1146     		mov	r1, r2
 26644 007a 1846     		mov	r0, r3
 26645 007c FFF7FEFF 		bl	commWrite
 26646              	.L1079:
4264:..\src/command_processing.c ****     
4265:..\src/command_processing.c **** #endif    
4266:..\src/command_processing.c **** }
 26647              		.loc 1 4266 0
 26648 0080 1437     		adds	r7, r7, #20
 26649              		.cfi_def_cfa_offset 12
 26650 0082 BD46     		mov	sp, r7
 26651              		.cfi_def_cfa_register 13
 26652              		@ sp needed
 26653 0084 90BD     		pop	{r4, r7, pc}
 26654              	.L1083:
 26655 0086 00BF     		.align	2
 26656              	.L1082:
 26657 0088 00000000 		.word	c_mem
 26658 008c 00000000 		.word	master_mode
 26659              		.cfi_endproc
 26660              	.LFE117:
 26661              		.size	deactivate_slaves, .-deactivate_slaves
 26662              		.bss
 26663              		.align	1
 26664              	i.11188:
 26665 0000 0000     		.space	2
 26666 0002 0000     		.align	2
 26667              	last_aux_int16.11319:
 26668 0004 00000000 		.space	4
 26669              	fsm_state.11457:
 26670 0008 00       		.space	1
 26671 0009 000000   		.align	2
 26672              	cnt.11458:
 26673 000c 00000000 		.space	4
 26674              		.text
 26675              	.Letext0:
 26676              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 26677              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 26678              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 26679              		.file 6 "..\\src\\commands.h"
 26680              		.file 7 "..\\src\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 26681              		.file 8 "..\\src\\globals.h"
 26682              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 26683              		.section	.debug_info,"",%progbits
 26684              	.Ldebug_info0:
 26685 0000 99240000 		.4byte	0x2499
 26686 0004 0400     		.2byte	0x4
 26687 0006 00000000 		.4byte	.Ldebug_abbrev0
 26688 000a 04       		.byte	0x4
 26689 000b 01       		.uleb128 0x1
 26690 000c 00090000 		.4byte	.LASF385
 26691 0010 0C       		.byte	0xc
 26692 0011 3B140000 		.4byte	.LASF386
 26693 0015 710D0000 		.4byte	.LASF387
 26694 0019 00000000 		.4byte	.Ldebug_ranges0+0
 26695 001d 00000000 		.4byte	0
 26696 0021 00000000 		.4byte	.Ldebug_line0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 587


 26697 0025 02       		.uleb128 0x2
 26698 0026 01       		.byte	0x1
 26699 0027 06       		.byte	0x6
 26700 0028 CB030000 		.4byte	.LASF0
 26701 002c 02       		.uleb128 0x2
 26702 002d 01       		.byte	0x1
 26703 002e 08       		.byte	0x8
 26704 002f 4C040000 		.4byte	.LASF1
 26705 0033 02       		.uleb128 0x2
 26706 0034 02       		.byte	0x2
 26707 0035 05       		.byte	0x5
 26708 0036 BA100000 		.4byte	.LASF2
 26709 003a 02       		.uleb128 0x2
 26710 003b 02       		.byte	0x2
 26711 003c 07       		.byte	0x7
 26712 003d 2D130000 		.4byte	.LASF3
 26713 0041 03       		.uleb128 0x3
 26714 0042 F9130000 		.4byte	.LASF5
 26715 0046 03       		.byte	0x3
 26716 0047 3F       		.byte	0x3f
 26717 0048 4C000000 		.4byte	0x4c
 26718 004c 02       		.uleb128 0x2
 26719 004d 04       		.byte	0x4
 26720 004e 05       		.byte	0x5
 26721 004f C0020000 		.4byte	.LASF4
 26722 0053 03       		.uleb128 0x3
 26723 0054 CB090000 		.4byte	.LASF6
 26724 0058 03       		.byte	0x3
 26725 0059 41       		.byte	0x41
 26726 005a 5E000000 		.4byte	0x5e
 26727 005e 02       		.uleb128 0x2
 26728 005f 04       		.byte	0x4
 26729 0060 07       		.byte	0x7
 26730 0061 AC070000 		.4byte	.LASF7
 26731 0065 02       		.uleb128 0x2
 26732 0066 08       		.byte	0x8
 26733 0067 05       		.byte	0x5
 26734 0068 D6090000 		.4byte	.LASF8
 26735 006c 02       		.uleb128 0x2
 26736 006d 08       		.byte	0x8
 26737 006e 07       		.byte	0x7
 26738 006f D90D0000 		.4byte	.LASF9
 26739 0073 04       		.uleb128 0x4
 26740 0074 04       		.byte	0x4
 26741 0075 05       		.byte	0x5
 26742 0076 696E7400 		.ascii	"int\000"
 26743 007a 02       		.uleb128 0x2
 26744 007b 04       		.byte	0x4
 26745 007c 07       		.byte	0x7
 26746 007d CD0A0000 		.4byte	.LASF10
 26747 0081 03       		.uleb128 0x3
 26748 0082 9C000000 		.4byte	.LASF11
 26749 0086 04       		.byte	0x4
 26750 0087 2C       		.byte	0x2c
 26751 0088 41000000 		.4byte	0x41
 26752 008c 03       		.uleb128 0x3
 26753 008d A5120000 		.4byte	.LASF12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 588


 26754 0091 04       		.byte	0x4
 26755 0092 30       		.byte	0x30
 26756 0093 53000000 		.4byte	0x53
 26757 0097 05       		.uleb128 0x5
 26758 0098 9C100000 		.4byte	.LASF13
 26759 009c 05       		.byte	0x5
 26760 009d E401     		.2byte	0x1e4
 26761 009f 2C000000 		.4byte	0x2c
 26762 00a3 05       		.uleb128 0x5
 26763 00a4 9E140000 		.4byte	.LASF14
 26764 00a8 05       		.byte	0x5
 26765 00a9 E501     		.2byte	0x1e5
 26766 00ab 3A000000 		.4byte	0x3a
 26767 00af 05       		.uleb128 0x5
 26768 00b0 BD000000 		.4byte	.LASF15
 26769 00b4 05       		.byte	0x5
 26770 00b5 E601     		.2byte	0x1e6
 26771 00b7 5E000000 		.4byte	0x5e
 26772 00bb 05       		.uleb128 0x5
 26773 00bc C5010000 		.4byte	.LASF16
 26774 00c0 05       		.byte	0x5
 26775 00c1 E701     		.2byte	0x1e7
 26776 00c3 25000000 		.4byte	0x25
 26777 00c7 05       		.uleb128 0x5
 26778 00c8 05120000 		.4byte	.LASF17
 26779 00cc 05       		.byte	0x5
 26780 00cd E801     		.2byte	0x1e8
 26781 00cf 33000000 		.4byte	0x33
 26782 00d3 05       		.uleb128 0x5
 26783 00d4 87130000 		.4byte	.LASF18
 26784 00d8 05       		.byte	0x5
 26785 00d9 E901     		.2byte	0x1e9
 26786 00db 4C000000 		.4byte	0x4c
 26787 00df 05       		.uleb128 0x5
 26788 00e0 37030000 		.4byte	.LASF19
 26789 00e4 05       		.byte	0x5
 26790 00e5 EA01     		.2byte	0x1ea
 26791 00e7 EB000000 		.4byte	0xeb
 26792 00eb 02       		.uleb128 0x2
 26793 00ec 04       		.byte	0x4
 26794 00ed 04       		.byte	0x4
 26795 00ee 900A0000 		.4byte	.LASF20
 26796 00f2 02       		.uleb128 0x2
 26797 00f3 08       		.byte	0x8
 26798 00f4 04       		.byte	0x4
 26799 00f5 2E0A0000 		.4byte	.LASF21
 26800 00f9 02       		.uleb128 0x2
 26801 00fa 01       		.byte	0x1
 26802 00fb 08       		.byte	0x8
 26803 00fc F0040000 		.4byte	.LASF22
 26804 0100 05       		.uleb128 0x5
 26805 0101 CE0E0000 		.4byte	.LASF23
 26806 0105 05       		.byte	0x5
 26807 0106 8E02     		.2byte	0x28e
 26808 0108 0C010000 		.4byte	0x10c
 26809 010c 06       		.uleb128 0x6
 26810 010d 97000000 		.4byte	0x97
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 589


 26811 0111 02       		.uleb128 0x2
 26812 0112 08       		.byte	0x8
 26813 0113 04       		.byte	0x4
 26814 0114 730C0000 		.4byte	.LASF24
 26815 0118 02       		.uleb128 0x2
 26816 0119 04       		.byte	0x4
 26817 011a 07       		.byte	0x7
 26818 011b 10000000 		.4byte	.LASF25
 26819 011f 07       		.uleb128 0x7
 26820 0120 04       		.byte	0x4
 26821 0121 F9000000 		.4byte	0xf9
 26822 0125 07       		.uleb128 0x7
 26823 0126 04       		.byte	0x4
 26824 0127 2B010000 		.4byte	0x12b
 26825 012b 08       		.uleb128 0x8
 26826 012c F9000000 		.4byte	0xf9
 26827 0130 09       		.uleb128 0x9
 26828 0131 F9000000 		.4byte	0xf9
 26829 0135 40010000 		.4byte	0x140
 26830 0139 0A       		.uleb128 0xa
 26831 013a 18010000 		.4byte	0x118
 26832 013e 19       		.byte	0x19
 26833 013f 00       		.byte	0
 26834 0140 09       		.uleb128 0x9
 26835 0141 F9000000 		.4byte	0xf9
 26836 0145 50010000 		.4byte	0x150
 26837 0149 0A       		.uleb128 0xa
 26838 014a 18010000 		.4byte	0x118
 26839 014e 07       		.byte	0x7
 26840 014f 00       		.byte	0
 26841 0150 0B       		.uleb128 0xb
 26842 0151 2D0B0000 		.4byte	.LASF56
 26843 0155 01       		.byte	0x1
 26844 0156 2C000000 		.4byte	0x2c
 26845 015a 06       		.byte	0x6
 26846 015b 42       		.byte	0x42
 26847 015c 15020000 		.4byte	0x215
 26848 0160 0C       		.uleb128 0xc
 26849 0161 B8140000 		.4byte	.LASF26
 26850 0165 00       		.byte	0
 26851 0166 0C       		.uleb128 0xc
 26852 0167 4B110000 		.4byte	.LASF27
 26853 016b 01       		.byte	0x1
 26854 016c 0C       		.uleb128 0xc
 26855 016d 88070000 		.4byte	.LASF28
 26856 0171 03       		.byte	0x3
 26857 0172 0C       		.uleb128 0xc
 26858 0173 84040000 		.4byte	.LASF29
 26859 0177 04       		.byte	0x4
 26860 0178 0C       		.uleb128 0xc
 26861 0179 070F0000 		.4byte	.LASF30
 26862 017d 05       		.byte	0x5
 26863 017e 0C       		.uleb128 0xc
 26864 017f A8080000 		.4byte	.LASF31
 26865 0183 06       		.byte	0x6
 26866 0184 0C       		.uleb128 0xc
 26867 0185 CC070000 		.4byte	.LASF32
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 590


 26868 0189 09       		.byte	0x9
 26869 018a 0C       		.uleb128 0xc
 26870 018b 19000000 		.4byte	.LASF33
 26871 018f 0A       		.byte	0xa
 26872 0190 0C       		.uleb128 0xc
 26873 0191 E7110000 		.4byte	.LASF34
 26874 0195 0C       		.byte	0xc
 26875 0196 0C       		.uleb128 0xc
 26876 0197 D70C0000 		.4byte	.LASF35
 26877 019b 0D       		.byte	0xd
 26878 019c 0C       		.uleb128 0xc
 26879 019d 5F000000 		.4byte	.LASF36
 26880 01a1 80       		.byte	0x80
 26881 01a2 0C       		.uleb128 0xc
 26882 01a3 DF040000 		.4byte	.LASF37
 26883 01a7 81       		.byte	0x81
 26884 01a8 0C       		.uleb128 0xc
 26885 01a9 12060000 		.4byte	.LASF38
 26886 01ad 82       		.byte	0x82
 26887 01ae 0C       		.uleb128 0xc
 26888 01af 15110000 		.4byte	.LASF39
 26889 01b3 83       		.byte	0x83
 26890 01b4 0C       		.uleb128 0xc
 26891 01b5 65100000 		.4byte	.LASF40
 26892 01b9 84       		.byte	0x84
 26893 01ba 0C       		.uleb128 0xc
 26894 01bb 4F030000 		.4byte	.LASF41
 26895 01bf 85       		.byte	0x85
 26896 01c0 0C       		.uleb128 0xc
 26897 01c1 EA080000 		.4byte	.LASF42
 26898 01c5 86       		.byte	0x86
 26899 01c6 0C       		.uleb128 0xc
 26900 01c7 88080000 		.4byte	.LASF43
 26901 01cb 88       		.byte	0x88
 26902 01cc 0C       		.uleb128 0xc
 26903 01cd C8110000 		.4byte	.LASF44
 26904 01d1 89       		.byte	0x89
 26905 01d2 0C       		.uleb128 0xc
 26906 01d3 370E0000 		.4byte	.LASF45
 26907 01d7 8B       		.byte	0x8b
 26908 01d8 0C       		.uleb128 0xc
 26909 01d9 440C0000 		.4byte	.LASF46
 26910 01dd 8C       		.byte	0x8c
 26911 01de 0C       		.uleb128 0xc
 26912 01df A6090000 		.4byte	.LASF47
 26913 01e3 8E       		.byte	0x8e
 26914 01e4 0C       		.uleb128 0xc
 26915 01e5 6F0E0000 		.4byte	.LASF48
 26916 01e9 90       		.byte	0x90
 26917 01ea 0C       		.uleb128 0xc
 26918 01eb 5E020000 		.4byte	.LASF49
 26919 01ef 92       		.byte	0x92
 26920 01f0 0C       		.uleb128 0xc
 26921 01f1 06130000 		.4byte	.LASF50
 26922 01f5 A1       		.byte	0xa1
 26923 01f6 0C       		.uleb128 0xc
 26924 01f7 1E100000 		.4byte	.LASF51
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 591


 26925 01fb A2       		.byte	0xa2
 26926 01fc 0C       		.uleb128 0xc
 26927 01fd 8B0B0000 		.4byte	.LASF52
 26928 0201 A3       		.byte	0xa3
 26929 0202 0C       		.uleb128 0xc
 26930 0203 3A100000 		.4byte	.LASF53
 26931 0207 A4       		.byte	0xa4
 26932 0208 0C       		.uleb128 0xc
 26933 0209 3A110000 		.4byte	.LASF54
 26934 020d A5       		.byte	0xa5
 26935 020e 0C       		.uleb128 0xc
 26936 020f D20F0000 		.4byte	.LASF55
 26937 0213 A6       		.byte	0xa6
 26938 0214 00       		.byte	0
 26939 0215 0B       		.uleb128 0xb
 26940 0216 65140000 		.4byte	.LASF57
 26941 021a 01       		.byte	0x1
 26942 021b 2C000000 		.4byte	0x2c
 26943 021f 06       		.byte	0x6
 26944 0220 8D       		.byte	0x8d
 26945 0221 56020000 		.4byte	0x256
 26946 0225 0C       		.uleb128 0xc
 26947 0226 A0060000 		.4byte	.LASF58
 26948 022a 00       		.byte	0
 26949 022b 0C       		.uleb128 0xc
 26950 022c 6B0B0000 		.4byte	.LASF59
 26951 0230 01       		.byte	0x1
 26952 0231 0C       		.uleb128 0xc
 26953 0232 6F020000 		.4byte	.LASF60
 26954 0236 02       		.byte	0x2
 26955 0237 0C       		.uleb128 0xc
 26956 0238 A7010000 		.4byte	.LASF61
 26957 023c 03       		.byte	0x3
 26958 023d 0C       		.uleb128 0xc
 26959 023e 4B010000 		.4byte	.LASF62
 26960 0242 04       		.byte	0x4
 26961 0243 0C       		.uleb128 0xc
 26962 0244 47000000 		.4byte	.LASF63
 26963 0248 05       		.byte	0x5
 26964 0249 0C       		.uleb128 0xc
 26965 024a F4070000 		.4byte	.LASF64
 26966 024e 06       		.byte	0x6
 26967 024f 0C       		.uleb128 0xc
 26968 0250 FF0F0000 		.4byte	.LASF65
 26969 0254 07       		.byte	0x7
 26970 0255 00       		.byte	0
 26971 0256 0B       		.uleb128 0xb
 26972 0257 E4090000 		.4byte	.LASF66
 26973 025b 01       		.byte	0x1
 26974 025c 2C000000 		.4byte	0x2c
 26975 0260 06       		.byte	0x6
 26976 0261 A1       		.byte	0xa1
 26977 0262 7F020000 		.4byte	0x27f
 26978 0266 0C       		.uleb128 0xc
 26979 0267 DE130000 		.4byte	.LASF67
 26980 026b 00       		.byte	0
 26981 026c 0C       		.uleb128 0xc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 592


 26982 026d 7C080000 		.4byte	.LASF68
 26983 0271 01       		.byte	0x1
 26984 0272 0C       		.uleb128 0xc
 26985 0273 630C0000 		.4byte	.LASF69
 26986 0277 02       		.byte	0x2
 26987 0278 0C       		.uleb128 0xc
 26988 0279 73070000 		.4byte	.LASF70
 26989 027d 03       		.byte	0x3
 26990 027e 00       		.byte	0
 26991 027f 0B       		.uleb128 0xb
 26992 0280 14040000 		.4byte	.LASF71
 26993 0284 01       		.byte	0x1
 26994 0285 2C000000 		.4byte	0x2c
 26995 0289 06       		.byte	0x6
 26996 028a AB       		.byte	0xab
 26997 028b 9C020000 		.4byte	0x29c
 26998 028f 0C       		.uleb128 0xc
 26999 0290 F50F0000 		.4byte	.LASF72
 27000 0294 00       		.byte	0
 27001 0295 0C       		.uleb128 0xc
 27002 0296 100A0000 		.4byte	.LASF73
 27003 029a 01       		.byte	0x1
 27004 029b 00       		.byte	0
 27005 029c 0B       		.uleb128 0xb
 27006 029d 300D0000 		.4byte	.LASF74
 27007 02a1 01       		.byte	0x1
 27008 02a2 2C000000 		.4byte	0x2c
 27009 02a6 06       		.byte	0x6
 27010 02a7 B0       		.byte	0xb0
 27011 02a8 B9020000 		.4byte	0x2b9
 27012 02ac 0C       		.uleb128 0xc
 27013 02ad 85060000 		.4byte	.LASF75
 27014 02b1 00       		.byte	0
 27015 02b2 0C       		.uleb128 0xc
 27016 02b3 39080000 		.4byte	.LASF76
 27017 02b7 01       		.byte	0x1
 27018 02b8 00       		.byte	0
 27019 02b9 0B       		.uleb128 0xb
 27020 02ba FA110000 		.4byte	.LASF77
 27021 02be 01       		.byte	0x1
 27022 02bf 2C000000 		.4byte	0x2c
 27023 02c3 06       		.byte	0x6
 27024 02c4 B8       		.byte	0xb8
 27025 02c5 06030000 		.4byte	0x306
 27026 02c9 0C       		.uleb128 0xc
 27027 02ca 40080000 		.4byte	.LASF78
 27028 02ce 00       		.byte	0
 27029 02cf 0C       		.uleb128 0xc
 27030 02d0 73140000 		.4byte	.LASF79
 27031 02d4 01       		.byte	0x1
 27032 02d5 0C       		.uleb128 0xc
 27033 02d6 F4090000 		.4byte	.LASF80
 27034 02da 02       		.byte	0x2
 27035 02db 0C       		.uleb128 0xc
 27036 02dc 200C0000 		.4byte	.LASF81
 27037 02e0 03       		.byte	0x3
 27038 02e1 0C       		.uleb128 0xc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 593


 27039 02e2 380B0000 		.4byte	.LASF82
 27040 02e6 04       		.byte	0x4
 27041 02e7 0C       		.uleb128 0xc
 27042 02e8 F00D0000 		.4byte	.LASF83
 27043 02ec 05       		.byte	0x5
 27044 02ed 0C       		.uleb128 0xc
 27045 02ee 7F0C0000 		.4byte	.LASF84
 27046 02f2 06       		.byte	0x6
 27047 02f3 0C       		.uleb128 0xc
 27048 02f4 E20B0000 		.4byte	.LASF85
 27049 02f8 07       		.byte	0x7
 27050 02f9 0C       		.uleb128 0xc
 27051 02fa 53060000 		.4byte	.LASF86
 27052 02fe 08       		.byte	0x8
 27053 02ff 0C       		.uleb128 0xc
 27054 0300 67070000 		.4byte	.LASF87
 27055 0304 09       		.byte	0x9
 27056 0305 00       		.byte	0
 27057 0306 03       		.uleb128 0x3
 27058 0307 BF130000 		.4byte	.LASF88
 27059 030b 07       		.byte	0x7
 27060 030c 7E       		.byte	0x7e
 27061 030d 11030000 		.4byte	0x311
 27062 0311 0D       		.uleb128 0xd
 27063 0312 BF130000 		.4byte	.LASF88
 27064 0316 07       		.uleb128 0x7
 27065 0317 04       		.byte	0x4
 27066 0318 06030000 		.4byte	0x306
 27067 031c 0E       		.uleb128 0xe
 27068 031d 8E090000 		.4byte	.LASF91
 27069 0321 10       		.byte	0x10
 27070 0322 08       		.byte	0x8
 27071 0323 E2       		.byte	0xe2
 27072 0324 59030000 		.4byte	0x359
 27073 0328 0F       		.uleb128 0xf
 27074 0329 706F7300 		.ascii	"pos\000"
 27075 032d 08       		.byte	0x8
 27076 032e E3       		.byte	0xe3
 27077 032f D3000000 		.4byte	0xd3
 27078 0333 00       		.byte	0
 27079 0334 10       		.uleb128 0x10
 27080 0335 6C080000 		.4byte	.LASF89
 27081 0339 08       		.byte	0x8
 27082 033a E4       		.byte	0xe4
 27083 033b D3000000 		.4byte	0xd3
 27084 033f 04       		.byte	0x4
 27085 0340 0F       		.uleb128 0xf
 27086 0341 70776D00 		.ascii	"pwm\000"
 27087 0345 08       		.byte	0x8
 27088 0346 E5       		.byte	0xe5
 27089 0347 D3000000 		.4byte	0xd3
 27090 034b 08       		.byte	0x8
 27091 034c 10       		.uleb128 0x10
 27092 034d 310E0000 		.4byte	.LASF90
 27093 0351 08       		.byte	0x8
 27094 0352 E6       		.byte	0xe6
 27095 0353 97000000 		.4byte	0x97
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 594


 27096 0357 0C       		.byte	0xc
 27097 0358 00       		.byte	0
 27098 0359 0E       		.uleb128 0xe
 27099 035a CA0F0000 		.4byte	.LASF92
 27100 035e 34       		.byte	0x34
 27101 035f 08       		.byte	0x8
 27102 0360 ED       		.byte	0xed
 27103 0361 BA030000 		.4byte	0x3ba
 27104 0365 0F       		.uleb128 0xf
 27105 0366 706F7300 		.ascii	"pos\000"
 27106 036a 08       		.byte	0x8
 27107 036b EE       		.byte	0xee
 27108 036c BA030000 		.4byte	0x3ba
 27109 0370 00       		.byte	0
 27110 0371 10       		.uleb128 0x10
 27111 0372 6C080000 		.4byte	.LASF89
 27112 0376 08       		.byte	0x8
 27113 0377 EF       		.byte	0xef
 27114 0378 D3000000 		.4byte	0xd3
 27115 037c 0C       		.byte	0xc
 27116 037d 10       		.uleb128 0x10
 27117 037e 47120000 		.4byte	.LASF93
 27118 0382 08       		.byte	0x8
 27119 0383 F0       		.byte	0xf0
 27120 0384 D3000000 		.4byte	0xd3
 27121 0388 10       		.byte	0x10
 27122 0389 10       		.uleb128 0x10
 27123 038a EA070000 		.4byte	.LASF94
 27124 038e 08       		.byte	0x8
 27125 038f F1       		.byte	0xf1
 27126 0390 D3000000 		.4byte	0xd3
 27127 0394 14       		.byte	0x14
 27128 0395 0F       		.uleb128 0xf
 27129 0396 726F7400 		.ascii	"rot\000"
 27130 039a 08       		.byte	0x8
 27131 039b F2       		.byte	0xf2
 27132 039c CA030000 		.4byte	0x3ca
 27133 03a0 18       		.byte	0x18
 27134 03a1 0F       		.uleb128 0xf
 27135 03a2 76656C00 		.ascii	"vel\000"
 27136 03a6 08       		.byte	0x8
 27137 03a7 F3       		.byte	0xf3
 27138 03a8 BA030000 		.4byte	0x3ba
 27139 03ac 1C       		.byte	0x1c
 27140 03ad 0F       		.uleb128 0xf
 27141 03ae 61636300 		.ascii	"acc\000"
 27142 03b2 08       		.byte	0x8
 27143 03b3 F4       		.byte	0xf4
 27144 03b4 BA030000 		.4byte	0x3ba
 27145 03b8 28       		.byte	0x28
 27146 03b9 00       		.byte	0
 27147 03ba 09       		.uleb128 0x9
 27148 03bb D3000000 		.4byte	0xd3
 27149 03bf CA030000 		.4byte	0x3ca
 27150 03c3 0A       		.uleb128 0xa
 27151 03c4 18010000 		.4byte	0x118
 27152 03c8 02       		.byte	0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 595


 27153 03c9 00       		.byte	0
 27154 03ca 09       		.uleb128 0x9
 27155 03cb BB000000 		.4byte	0xbb
 27156 03cf DA030000 		.4byte	0x3da
 27157 03d3 0A       		.uleb128 0xa
 27158 03d4 18010000 		.4byte	0x118
 27159 03d8 02       		.byte	0x2
 27160 03d9 00       		.byte	0
 27161 03da 0E       		.uleb128 0xe
 27162 03db A90A0000 		.4byte	.LASF95
 27163 03df 28       		.byte	0x28
 27164 03e0 08       		.byte	0x8
 27165 03e1 F7       		.byte	0xf7
 27166 03e2 0B040000 		.4byte	0x40b
 27167 03e6 0F       		.uleb128 0xf
 27168 03e7 656D6700 		.ascii	"emg\000"
 27169 03eb 08       		.byte	0x8
 27170 03ec F8       		.byte	0xf8
 27171 03ed 0B040000 		.4byte	0x40b
 27172 03f1 00       		.byte	0
 27173 03f2 10       		.uleb128 0x10
 27174 03f3 180C0000 		.4byte	.LASF96
 27175 03f7 08       		.byte	0x8
 27176 03f8 F9       		.byte	0xf9
 27177 03f9 1B040000 		.4byte	0x41b
 27178 03fd 08       		.byte	0x8
 27179 03fe 10       		.uleb128 0x10
 27180 03ff F6100000 		.4byte	.LASF97
 27181 0403 08       		.byte	0x8
 27182 0404 FA       		.byte	0xfa
 27183 0405 0B040000 		.4byte	0x40b
 27184 0409 20       		.byte	0x20
 27185 040a 00       		.byte	0
 27186 040b 09       		.uleb128 0x9
 27187 040c D3000000 		.4byte	0xd3
 27188 0410 1B040000 		.4byte	0x41b
 27189 0414 0A       		.uleb128 0xa
 27190 0415 18010000 		.4byte	0x118
 27191 0419 01       		.byte	0x1
 27192 041a 00       		.byte	0
 27193 041b 09       		.uleb128 0x9
 27194 041c D3000000 		.4byte	0xd3
 27195 0420 2B040000 		.4byte	0x42b
 27196 0424 0A       		.uleb128 0xa
 27197 0425 18010000 		.4byte	0x118
 27198 0429 05       		.byte	0x5
 27199 042a 00       		.byte	0
 27200 042b 0E       		.uleb128 0xe
 27201 042c 4E050000 		.4byte	.LASF98
 27202 0430 04       		.byte	0x4
 27203 0431 08       		.byte	0x8
 27204 0432 FD       		.byte	0xfd
 27205 0433 44040000 		.4byte	0x444
 27206 0437 10       		.uleb128 0x10
 27207 0438 D6040000 		.4byte	.LASF99
 27208 043c 08       		.byte	0x8
 27209 043d FE       		.byte	0xfe
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 596


 27210 043e EB000000 		.4byte	0xeb
 27211 0442 00       		.byte	0
 27212 0443 00       		.byte	0
 27213 0444 11       		.uleb128 0x11
 27214 0445 A9000000 		.4byte	.LASF100
 27215 0449 86       		.byte	0x86
 27216 044a 08       		.byte	0x8
 27217 044b 0501     		.2byte	0x105
 27218 044d 86040000 		.4byte	0x486
 27219 0451 12       		.uleb128 0x12
 27220 0452 21060000 		.4byte	.LASF101
 27221 0456 08       		.byte	0x8
 27222 0457 0601     		.2byte	0x106
 27223 0459 86040000 		.4byte	0x486
 27224 045d 00       		.byte	0
 27225 045e 12       		.uleb128 0x12
 27226 045f 060E0000 		.4byte	.LASF102
 27227 0463 08       		.byte	0x8
 27228 0464 0701     		.2byte	0x107
 27229 0466 C7000000 		.4byte	0xc7
 27230 046a 80       		.byte	0x80
 27231 046b 13       		.uleb128 0x13
 27232 046c 696E6400 		.ascii	"ind\000"
 27233 0470 08       		.byte	0x8
 27234 0471 0801     		.2byte	0x108
 27235 0473 C7000000 		.4byte	0xc7
 27236 0477 82       		.byte	0x82
 27237 0478 12       		.uleb128 0x12
 27238 0479 40020000 		.4byte	.LASF103
 27239 047d 08       		.byte	0x8
 27240 047e 0901     		.2byte	0x109
 27241 0480 97000000 		.4byte	0x97
 27242 0484 84       		.byte	0x84
 27243 0485 00       		.byte	0
 27244 0486 09       		.uleb128 0x9
 27245 0487 97000000 		.4byte	0x97
 27246 048b 96040000 		.4byte	0x496
 27247 048f 0A       		.uleb128 0xa
 27248 0490 18010000 		.4byte	0x118
 27249 0494 7F       		.byte	0x7f
 27250 0495 00       		.byte	0
 27251 0496 11       		.uleb128 0x11
 27252 0497 25030000 		.4byte	.LASF104
 27253 049b 50       		.byte	0x50
 27254 049c 08       		.byte	0x8
 27255 049d 1201     		.2byte	0x112
 27256 049f FF040000 		.4byte	0x4ff
 27257 04a3 12       		.uleb128 0x12
 27258 04a4 60030000 		.4byte	.LASF105
 27259 04a8 08       		.byte	0x8
 27260 04a9 1301     		.2byte	0x113
 27261 04ab FF040000 		.4byte	0x4ff
 27262 04af 00       		.byte	0
 27263 04b0 12       		.uleb128 0x12
 27264 04b1 02020000 		.4byte	.LASF106
 27265 04b5 08       		.byte	0x8
 27266 04b6 1401     		.2byte	0x114
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 597


 27267 04b8 0F050000 		.4byte	0x50f
 27268 04bc 08       		.byte	0x8
 27269 04bd 12       		.uleb128 0x12
 27270 04be 560C0000 		.4byte	.LASF107
 27271 04c2 08       		.byte	0x8
 27272 04c3 1501     		.2byte	0x115
 27273 04c5 1F050000 		.4byte	0x51f
 27274 04c9 30       		.byte	0x30
 27275 04ca 12       		.uleb128 0x12
 27276 04cb 6B010000 		.4byte	.LASF108
 27277 04cf 08       		.byte	0x8
 27278 04d0 1601     		.2byte	0x116
 27279 04d2 AF000000 		.4byte	0xaf
 27280 04d6 40       		.byte	0x40
 27281 04d7 12       		.uleb128 0x12
 27282 04d8 12140000 		.4byte	.LASF109
 27283 04dc 08       		.byte	0x8
 27284 04dd 1701     		.2byte	0x117
 27285 04df AF000000 		.4byte	0xaf
 27286 04e3 44       		.byte	0x44
 27287 04e4 12       		.uleb128 0x12
 27288 04e5 BE070000 		.4byte	.LASF110
 27289 04e9 08       		.byte	0x8
 27290 04ea 1801     		.2byte	0x118
 27291 04ec AF000000 		.4byte	0xaf
 27292 04f0 48       		.byte	0x48
 27293 04f1 12       		.uleb128 0x12
 27294 04f2 08080000 		.4byte	.LASF111
 27295 04f6 08       		.byte	0x8
 27296 04f7 1901     		.2byte	0x119
 27297 04f9 AF000000 		.4byte	0xaf
 27298 04fd 4C       		.byte	0x4c
 27299 04fe 00       		.byte	0
 27300 04ff 09       		.uleb128 0x9
 27301 0500 AF000000 		.4byte	0xaf
 27302 0504 0F050000 		.4byte	0x50f
 27303 0508 0A       		.uleb128 0xa
 27304 0509 18010000 		.4byte	0x118
 27305 050d 01       		.byte	0x1
 27306 050e 00       		.byte	0
 27307 050f 09       		.uleb128 0x9
 27308 0510 AF000000 		.4byte	0xaf
 27309 0514 1F050000 		.4byte	0x51f
 27310 0518 0A       		.uleb128 0xa
 27311 0519 18010000 		.4byte	0x118
 27312 051d 09       		.byte	0x9
 27313 051e 00       		.byte	0
 27314 051f 09       		.uleb128 0x9
 27315 0520 AF000000 		.4byte	0xaf
 27316 0524 2F050000 		.4byte	0x52f
 27317 0528 0A       		.uleb128 0xa
 27318 0529 18010000 		.4byte	0x118
 27319 052d 03       		.byte	0x3
 27320 052e 00       		.byte	0
 27321 052f 11       		.uleb128 0x11
 27322 0530 C8050000 		.4byte	.LASF112
 27323 0534 10       		.byte	0x10
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 598


 27324 0535 08       		.byte	0x8
 27325 0536 2001     		.2byte	0x120
 27326 0538 BE050000 		.4byte	0x5be
 27327 053c 13       		.uleb128 0x13
 27328 053d 696400   		.ascii	"id\000"
 27329 0540 08       		.byte	0x8
 27330 0541 2101     		.2byte	0x121
 27331 0543 97000000 		.4byte	0x97
 27332 0547 00       		.byte	0
 27333 0548 12       		.uleb128 0x12
 27334 0549 24110000 		.4byte	.LASF113
 27335 054d 08       		.byte	0x8
 27336 054e 2201     		.2byte	0x122
 27337 0550 BE050000 		.4byte	0x5be
 27338 0554 01       		.byte	0x1
 27339 0555 12       		.uleb128 0x12
 27340 0556 94110000 		.4byte	.LASF114
 27341 055a 08       		.byte	0x8
 27342 055b 2301     		.2byte	0x123
 27343 055d BE050000 		.4byte	0x5be
 27344 0561 04       		.byte	0x4
 27345 0562 12       		.uleb128 0x12
 27346 0563 79040000 		.4byte	.LASF115
 27347 0567 08       		.byte	0x8
 27348 0568 2401     		.2byte	0x124
 27349 056a 97000000 		.4byte	0x97
 27350 056e 07       		.byte	0x7
 27351 056f 12       		.uleb128 0x12
 27352 0570 E1020000 		.4byte	.LASF116
 27353 0574 08       		.byte	0x8
 27354 0575 2501     		.2byte	0x125
 27355 0577 97000000 		.4byte	0x97
 27356 057b 08       		.byte	0x8
 27357 057c 12       		.uleb128 0x12
 27358 057d 8B020000 		.4byte	.LASF117
 27359 0581 08       		.byte	0x8
 27360 0582 2601     		.2byte	0x126
 27361 0584 97000000 		.4byte	0x97
 27362 0588 09       		.byte	0x9
 27363 0589 12       		.uleb128 0x12
 27364 058a D9120000 		.4byte	.LASF118
 27365 058e 08       		.byte	0x8
 27366 058f 2701     		.2byte	0x127
 27367 0591 97000000 		.4byte	0x97
 27368 0595 0A       		.byte	0xa
 27369 0596 12       		.uleb128 0x12
 27370 0597 9D120000 		.4byte	.LASF119
 27371 059b 08       		.byte	0x8
 27372 059c 2801     		.2byte	0x128
 27373 059e 97000000 		.4byte	0x97
 27374 05a2 0B       		.byte	0xb
 27375 05a3 12       		.uleb128 0x12
 27376 05a4 740F0000 		.4byte	.LASF120
 27377 05a8 08       		.byte	0x8
 27378 05a9 2901     		.2byte	0x129
 27379 05ab 97000000 		.4byte	0x97
 27380 05af 0C       		.byte	0xc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 599


 27381 05b0 12       		.uleb128 0x12
 27382 05b1 02030000 		.4byte	.LASF121
 27383 05b5 08       		.byte	0x8
 27384 05b6 2A01     		.2byte	0x12a
 27385 05b8 BE050000 		.4byte	0x5be
 27386 05bc 0D       		.byte	0xd
 27387 05bd 00       		.byte	0
 27388 05be 09       		.uleb128 0x9
 27389 05bf 97000000 		.4byte	0x97
 27390 05c3 CE050000 		.4byte	0x5ce
 27391 05c7 0A       		.uleb128 0xa
 27392 05c8 18010000 		.4byte	0x118
 27393 05cc 02       		.byte	0x2
 27394 05cd 00       		.byte	0
 27395 05ce 11       		.uleb128 0x11
 27396 05cf AA130000 		.4byte	.LASF122
 27397 05d3 70       		.byte	0x70
 27398 05d4 08       		.byte	0x8
 27399 05d5 3101     		.2byte	0x131
 27400 05d7 48070000 		.4byte	0x748
 27401 05db 13       		.uleb128 0x13
 27402 05dc 6B5F7000 		.ascii	"k_p\000"
 27403 05e0 08       		.byte	0x8
 27404 05e1 3201     		.2byte	0x132
 27405 05e3 D3000000 		.4byte	0xd3
 27406 05e7 00       		.byte	0
 27407 05e8 13       		.uleb128 0x13
 27408 05e9 6B5F6900 		.ascii	"k_i\000"
 27409 05ed 08       		.byte	0x8
 27410 05ee 3301     		.2byte	0x133
 27411 05f0 D3000000 		.4byte	0xd3
 27412 05f4 04       		.byte	0x4
 27413 05f5 13       		.uleb128 0x13
 27414 05f6 6B5F6400 		.ascii	"k_d\000"
 27415 05fa 08       		.byte	0x8
 27416 05fb 3401     		.2byte	0x134
 27417 05fd D3000000 		.4byte	0xd3
 27418 0601 08       		.byte	0x8
 27419 0602 12       		.uleb128 0x12
 27420 0603 800E0000 		.4byte	.LASF123
 27421 0607 08       		.byte	0x8
 27422 0608 3501     		.2byte	0x135
 27423 060a D3000000 		.4byte	0xd3
 27424 060e 0C       		.byte	0xc
 27425 060f 12       		.uleb128 0x12
 27426 0610 6E050000 		.4byte	.LASF124
 27427 0614 08       		.byte	0x8
 27428 0615 3601     		.2byte	0x136
 27429 0617 D3000000 		.4byte	0xd3
 27430 061b 10       		.byte	0x10
 27431 061c 12       		.uleb128 0x12
 27432 061d 48050000 		.4byte	.LASF125
 27433 0621 08       		.byte	0x8
 27434 0622 3701     		.2byte	0x137
 27435 0624 D3000000 		.4byte	0xd3
 27436 0628 14       		.byte	0x14
 27437 0629 12       		.uleb128 0x12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 600


 27438 062a 40120000 		.4byte	.LASF126
 27439 062e 08       		.byte	0x8
 27440 062f 3801     		.2byte	0x138
 27441 0631 D3000000 		.4byte	0xd3
 27442 0635 18       		.byte	0x18
 27443 0636 12       		.uleb128 0x12
 27444 0637 0B060000 		.4byte	.LASF127
 27445 063b 08       		.byte	0x8
 27446 063c 3901     		.2byte	0x139
 27447 063e D3000000 		.4byte	0xd3
 27448 0642 1C       		.byte	0x1c
 27449 0643 12       		.uleb128 0x12
 27450 0644 E6100000 		.4byte	.LASF128
 27451 0648 08       		.byte	0x8
 27452 0649 3A01     		.2byte	0x13a
 27453 064b D3000000 		.4byte	0xd3
 27454 064f 20       		.byte	0x20
 27455 0650 12       		.uleb128 0x12
 27456 0651 28060000 		.4byte	.LASF129
 27457 0655 08       		.byte	0x8
 27458 0656 3B01     		.2byte	0x13b
 27459 0658 D3000000 		.4byte	0xd3
 27460 065c 24       		.byte	0x24
 27461 065d 12       		.uleb128 0x12
 27462 065e F9060000 		.4byte	.LASF130
 27463 0662 08       		.byte	0x8
 27464 0663 3C01     		.2byte	0x13c
 27465 0665 D3000000 		.4byte	0xd3
 27466 0669 28       		.byte	0x28
 27467 066a 12       		.uleb128 0x12
 27468 066b C1140000 		.4byte	.LASF131
 27469 066f 08       		.byte	0x8
 27470 0670 3D01     		.2byte	0x13d
 27471 0672 D3000000 		.4byte	0xd3
 27472 0676 2C       		.byte	0x2c
 27473 0677 12       		.uleb128 0x12
 27474 0678 24080000 		.4byte	.LASF132
 27475 067c 08       		.byte	0x8
 27476 067d 3E01     		.2byte	0x13e
 27477 067f 97000000 		.4byte	0x97
 27478 0683 30       		.byte	0x30
 27479 0684 12       		.uleb128 0x12
 27480 0685 29120000 		.4byte	.LASF133
 27481 0689 08       		.byte	0x8
 27482 068a 3F01     		.2byte	0x13f
 27483 068c 97000000 		.4byte	0x97
 27484 0690 31       		.byte	0x31
 27485 0691 12       		.uleb128 0x12
 27486 0692 A00E0000 		.4byte	.LASF134
 27487 0696 08       		.byte	0x8
 27488 0697 4001     		.2byte	0x140
 27489 0699 97000000 		.4byte	0x97
 27490 069d 32       		.byte	0x32
 27491 069e 12       		.uleb128 0x12
 27492 069f C7130000 		.4byte	.LASF135
 27493 06a3 08       		.byte	0x8
 27494 06a4 4101     		.2byte	0x141
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 601


 27495 06a6 97000000 		.4byte	0x97
 27496 06aa 33       		.byte	0x33
 27497 06ab 12       		.uleb128 0x12
 27498 06ac 1F010000 		.4byte	.LASF136
 27499 06b0 08       		.byte	0x8
 27500 06b1 4201     		.2byte	0x142
 27501 06b3 D3000000 		.4byte	0xd3
 27502 06b7 34       		.byte	0x34
 27503 06b8 12       		.uleb128 0x12
 27504 06b9 9D050000 		.4byte	.LASF137
 27505 06bd 08       		.byte	0x8
 27506 06be 4301     		.2byte	0x143
 27507 06c0 D3000000 		.4byte	0xd3
 27508 06c4 38       		.byte	0x38
 27509 06c5 12       		.uleb128 0x12
 27510 06c6 530A0000 		.4byte	.LASF138
 27511 06ca 08       		.byte	0x8
 27512 06cb 4401     		.2byte	0x144
 27513 06cd D3000000 		.4byte	0xd3
 27514 06d1 3C       		.byte	0x3c
 27515 06d2 12       		.uleb128 0x12
 27516 06d3 F5040000 		.4byte	.LASF139
 27517 06d7 08       		.byte	0x8
 27518 06d8 4501     		.2byte	0x145
 27519 06da D3000000 		.4byte	0xd3
 27520 06de 40       		.byte	0x40
 27521 06df 12       		.uleb128 0x12
 27522 06e0 5F010000 		.4byte	.LASF140
 27523 06e4 08       		.byte	0x8
 27524 06e5 4601     		.2byte	0x146
 27525 06e7 48070000 		.4byte	0x748
 27526 06eb 44       		.byte	0x44
 27527 06ec 12       		.uleb128 0x12
 27528 06ed 57140000 		.4byte	.LASF141
 27529 06f1 08       		.byte	0x8
 27530 06f2 4701     		.2byte	0x147
 27531 06f4 C7000000 		.4byte	0xc7
 27532 06f8 5C       		.byte	0x5c
 27533 06f9 12       		.uleb128 0x12
 27534 06fa 71080000 		.4byte	.LASF142
 27535 06fe 08       		.byte	0x8
 27536 06ff 4801     		.2byte	0x148
 27537 0701 97000000 		.4byte	0x97
 27538 0705 5E       		.byte	0x5e
 27539 0706 12       		.uleb128 0x12
 27540 0707 580B0000 		.4byte	.LASF143
 27541 070b 08       		.byte	0x8
 27542 070c 4901     		.2byte	0x149
 27543 070e 97000000 		.4byte	0x97
 27544 0712 5F       		.byte	0x5f
 27545 0713 12       		.uleb128 0x12
 27546 0714 9D040000 		.4byte	.LASF144
 27547 0718 08       		.byte	0x8
 27548 0719 4A01     		.2byte	0x14a
 27549 071b 97000000 		.4byte	0x97
 27550 071f 60       		.byte	0x60
 27551 0720 12       		.uleb128 0x12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 602


 27552 0721 37050000 		.4byte	.LASF145
 27553 0725 08       		.byte	0x8
 27554 0726 4B01     		.2byte	0x14b
 27555 0728 97000000 		.4byte	0x97
 27556 072c 61       		.byte	0x61
 27557 072d 12       		.uleb128 0x12
 27558 072e 5A040000 		.4byte	.LASF146
 27559 0732 08       		.byte	0x8
 27560 0733 4C01     		.2byte	0x14c
 27561 0735 97000000 		.4byte	0x97
 27562 0739 62       		.byte	0x62
 27563 073a 12       		.uleb128 0x12
 27564 073b 02030000 		.4byte	.LASF121
 27565 073f 08       		.byte	0x8
 27566 0740 4D01     		.2byte	0x14d
 27567 0742 58070000 		.4byte	0x758
 27568 0746 63       		.byte	0x63
 27569 0747 00       		.byte	0
 27570 0748 09       		.uleb128 0x9
 27571 0749 EB000000 		.4byte	0xeb
 27572 074d 58070000 		.4byte	0x758
 27573 0751 0A       		.uleb128 0xa
 27574 0752 18010000 		.4byte	0x118
 27575 0756 05       		.byte	0x5
 27576 0757 00       		.byte	0
 27577 0758 09       		.uleb128 0x9
 27578 0759 97000000 		.4byte	0x97
 27579 075d 68070000 		.4byte	0x768
 27580 0761 0A       		.uleb128 0xa
 27581 0762 18010000 		.4byte	0x118
 27582 0766 0C       		.byte	0xc
 27583 0767 00       		.byte	0
 27584 0768 11       		.uleb128 0x11
 27585 0769 40130000 		.4byte	.LASF147
 27586 076d 30       		.byte	0x30
 27587 076e 08       		.byte	0x8
 27588 076f 5401     		.2byte	0x154
 27589 0771 EB070000 		.4byte	0x7eb
 27590 0775 12       		.uleb128 0x12
 27591 0776 350A0000 		.4byte	.LASF148
 27592 077a 08       		.byte	0x8
 27593 077b 5501     		.2byte	0x155
 27594 077d EB070000 		.4byte	0x7eb
 27595 0781 00       		.byte	0
 27596 0782 13       		.uleb128 0x13
 27597 0783 72657300 		.ascii	"res\000"
 27598 0787 08       		.byte	0x8
 27599 0788 5601     		.2byte	0x156
 27600 078a BE050000 		.4byte	0x5be
 27601 078e 05       		.byte	0x5
 27602 078f 12       		.uleb128 0x12
 27603 0790 33080000 		.4byte	.LASF149
 27604 0794 08       		.byte	0x8
 27605 0795 5701     		.2byte	0x157
 27606 0797 BA030000 		.4byte	0x3ba
 27607 079b 08       		.byte	0x8
 27608 079c 12       		.uleb128 0x12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 603


 27609 079d 67050000 		.4byte	.LASF150
 27610 07a1 08       		.byte	0x8
 27611 07a2 5801     		.2byte	0x158
 27612 07a4 FB070000 		.4byte	0x7fb
 27613 07a8 14       		.byte	0x14
 27614 07a9 12       		.uleb128 0x12
 27615 07aa FF0C0000 		.4byte	.LASF151
 27616 07ae 08       		.byte	0x8
 27617 07af 5901     		.2byte	0x159
 27618 07b1 97000000 		.4byte	0x97
 27619 07b5 20       		.byte	0x20
 27620 07b6 12       		.uleb128 0x12
 27621 07b7 46020000 		.4byte	.LASF152
 27622 07bb 08       		.byte	0x8
 27623 07bc 5A01     		.2byte	0x15a
 27624 07be BE050000 		.4byte	0x5be
 27625 07c2 21       		.byte	0x21
 27626 07c3 12       		.uleb128 0x12
 27627 07c4 B20C0000 		.4byte	.LASF153
 27628 07c8 08       		.byte	0x8
 27629 07c9 5B01     		.2byte	0x15b
 27630 07cb BB000000 		.4byte	0xbb
 27631 07cf 24       		.byte	0x24
 27632 07d0 12       		.uleb128 0x12
 27633 07d1 9B0F0000 		.4byte	.LASF154
 27634 07d5 08       		.byte	0x8
 27635 07d6 5C01     		.2byte	0x15c
 27636 07d8 CA030000 		.4byte	0x3ca
 27637 07dc 25       		.byte	0x25
 27638 07dd 12       		.uleb128 0x12
 27639 07de 02030000 		.4byte	.LASF121
 27640 07e2 08       		.byte	0x8
 27641 07e3 5D01     		.2byte	0x15d
 27642 07e5 0B080000 		.4byte	0x80b
 27643 07e9 28       		.byte	0x28
 27644 07ea 00       		.byte	0
 27645 07eb 09       		.uleb128 0x9
 27646 07ec 97000000 		.4byte	0x97
 27647 07f0 FB070000 		.4byte	0x7fb
 27648 07f4 0A       		.uleb128 0xa
 27649 07f5 18010000 		.4byte	0x118
 27650 07f9 04       		.byte	0x4
 27651 07fa 00       		.byte	0
 27652 07fb 09       		.uleb128 0x9
 27653 07fc DF000000 		.4byte	0xdf
 27654 0800 0B080000 		.4byte	0x80b
 27655 0804 0A       		.uleb128 0xa
 27656 0805 18010000 		.4byte	0x118
 27657 0809 02       		.byte	0x2
 27658 080a 00       		.byte	0
 27659 080b 09       		.uleb128 0x9
 27660 080c 97000000 		.4byte	0x97
 27661 0810 1B080000 		.4byte	0x81b
 27662 0814 0A       		.uleb128 0xa
 27663 0815 18010000 		.4byte	0x118
 27664 0819 07       		.byte	0x7
 27665 081a 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 604


 27666 081b 11       		.uleb128 0x11
 27667 081c FB010000 		.4byte	.LASF155
 27668 0820 10       		.byte	0x10
 27669 0821 08       		.byte	0x8
 27670 0822 6401     		.2byte	0x164
 27671 0824 6A080000 		.4byte	0x86a
 27672 0828 12       		.uleb128 0x12
 27673 0829 360C0000 		.4byte	.LASF156
 27674 082d 08       		.byte	0x8
 27675 082e 6501     		.2byte	0x165
 27676 0830 6A080000 		.4byte	0x86a
 27677 0834 00       		.byte	0
 27678 0835 12       		.uleb128 0x12
 27679 0836 1C140000 		.4byte	.LASF157
 27680 083a 08       		.byte	0x8
 27681 083b 6601     		.2byte	0x166
 27682 083d FF040000 		.4byte	0x4ff
 27683 0841 04       		.byte	0x4
 27684 0842 12       		.uleb128 0x12
 27685 0843 A9050000 		.4byte	.LASF158
 27686 0847 08       		.byte	0x8
 27687 0848 6701     		.2byte	0x167
 27688 084a 7A080000 		.4byte	0x87a
 27689 084e 0C       		.byte	0xc
 27690 084f 12       		.uleb128 0x12
 27691 0850 B50F0000 		.4byte	.LASF159
 27692 0854 08       		.byte	0x8
 27693 0855 6801     		.2byte	0x168
 27694 0857 97000000 		.4byte	0x97
 27695 085b 0E       		.byte	0xe
 27696 085c 12       		.uleb128 0x12
 27697 085d 1E120000 		.4byte	.LASF160
 27698 0861 08       		.byte	0x8
 27699 0862 6901     		.2byte	0x169
 27700 0864 97000000 		.4byte	0x97
 27701 0868 0F       		.byte	0xf
 27702 0869 00       		.byte	0
 27703 086a 09       		.uleb128 0x9
 27704 086b A3000000 		.4byte	0xa3
 27705 086f 7A080000 		.4byte	0x87a
 27706 0873 0A       		.uleb128 0xa
 27707 0874 18010000 		.4byte	0x118
 27708 0878 01       		.byte	0x1
 27709 0879 00       		.byte	0
 27710 087a 09       		.uleb128 0x9
 27711 087b 97000000 		.4byte	0x97
 27712 087f 8A080000 		.4byte	0x88a
 27713 0883 0A       		.uleb128 0xa
 27714 0884 18010000 		.4byte	0x118
 27715 0888 01       		.byte	0x1
 27716 0889 00       		.byte	0
 27717 088a 11       		.uleb128 0x11
 27718 088b A00B0000 		.4byte	.LASF161
 27719 088f 20       		.byte	0x20
 27720 0890 08       		.byte	0x8
 27721 0891 7001     		.2byte	0x170
 27722 0893 CC080000 		.4byte	0x8cc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 605


 27723 0897 12       		.uleb128 0x12
 27724 0898 A6020000 		.4byte	.LASF162
 27725 089c 08       		.byte	0x8
 27726 089d 7101     		.2byte	0x171
 27727 089f 97000000 		.4byte	0x97
 27728 08a3 00       		.byte	0
 27729 08a4 12       		.uleb128 0x12
 27730 08a5 210D0000 		.4byte	.LASF163
 27731 08a9 08       		.byte	0x8
 27732 08aa 7201     		.2byte	0x172
 27733 08ac 97000000 		.4byte	0x97
 27734 08b0 01       		.byte	0x1
 27735 08b1 12       		.uleb128 0x12
 27736 08b2 960A0000 		.4byte	.LASF164
 27737 08b6 08       		.byte	0x8
 27738 08b7 7301     		.2byte	0x173
 27739 08b9 CC080000 		.4byte	0x8cc
 27740 08bd 02       		.byte	0x2
 27741 08be 12       		.uleb128 0x12
 27742 08bf 02030000 		.4byte	.LASF121
 27743 08c3 08       		.byte	0x8
 27744 08c4 7401     		.2byte	0x174
 27745 08c6 EB070000 		.4byte	0x7eb
 27746 08ca 1B       		.byte	0x1b
 27747 08cb 00       		.byte	0
 27748 08cc 09       		.uleb128 0x9
 27749 08cd 97000000 		.4byte	0x97
 27750 08d1 E2080000 		.4byte	0x8e2
 27751 08d5 0A       		.uleb128 0xa
 27752 08d6 18010000 		.4byte	0x118
 27753 08da 04       		.byte	0x4
 27754 08db 0A       		.uleb128 0xa
 27755 08dc 18010000 		.4byte	0x118
 27756 08e0 04       		.byte	0x4
 27757 08e1 00       		.byte	0
 27758 08e2 11       		.uleb128 0x11
 27759 08e3 A80F0000 		.4byte	.LASF165
 27760 08e7 20       		.byte	0x20
 27761 08e8 08       		.byte	0x8
 27762 08e9 7B01     		.2byte	0x17b
 27763 08eb 31090000 		.4byte	0x931
 27764 08ef 12       		.uleb128 0x12
 27765 08f0 F50C0000 		.4byte	.LASF166
 27766 08f4 08       		.byte	0x8
 27767 08f5 7C01     		.2byte	0x17c
 27768 08f7 31090000 		.4byte	0x931
 27769 08fb 00       		.byte	0
 27770 08fc 12       		.uleb128 0x12
 27771 08fd 0B120000 		.4byte	.LASF167
 27772 0901 08       		.byte	0x8
 27773 0902 7D01     		.2byte	0x17d
 27774 0904 97000000 		.4byte	0x97
 27775 0908 06       		.byte	0x6
 27776 0909 12       		.uleb128 0x12
 27777 090a 60120000 		.4byte	.LASF168
 27778 090e 08       		.byte	0x8
 27779 090f 7E01     		.2byte	0x17e
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 606


 27780 0911 97000000 		.4byte	0x97
 27781 0915 07       		.byte	0x7
 27782 0916 12       		.uleb128 0x12
 27783 0917 D8050000 		.4byte	.LASF169
 27784 091b 08       		.byte	0x8
 27785 091c 7F01     		.2byte	0x17f
 27786 091e 41090000 		.4byte	0x941
 27787 0922 08       		.byte	0x8
 27788 0923 12       		.uleb128 0x12
 27789 0924 02030000 		.4byte	.LASF121
 27790 0928 08       		.byte	0x8
 27791 0929 8001     		.2byte	0x180
 27792 092b 41090000 		.4byte	0x941
 27793 092f 14       		.byte	0x14
 27794 0930 00       		.byte	0
 27795 0931 09       		.uleb128 0x9
 27796 0932 97000000 		.4byte	0x97
 27797 0936 41090000 		.4byte	0x941
 27798 093a 0A       		.uleb128 0xa
 27799 093b 18010000 		.4byte	0x118
 27800 093f 05       		.byte	0x5
 27801 0940 00       		.byte	0
 27802 0941 09       		.uleb128 0x9
 27803 0942 97000000 		.4byte	0x97
 27804 0946 51090000 		.4byte	0x951
 27805 094a 0A       		.uleb128 0xa
 27806 094b 18010000 		.4byte	0x118
 27807 094f 0B       		.byte	0xb
 27808 0950 00       		.byte	0
 27809 0951 11       		.uleb128 0x11
 27810 0952 7D0F0000 		.4byte	.LASF170
 27811 0956 20       		.byte	0x20
 27812 0957 08       		.byte	0x8
 27813 0958 8701     		.2byte	0x187
 27814 095a 86090000 		.4byte	0x986
 27815 095e 12       		.uleb128 0x12
 27816 095f D7030000 		.4byte	.LASF171
 27817 0963 08       		.byte	0x8
 27818 0964 8801     		.2byte	0x188
 27819 0966 40010000 		.4byte	0x140
 27820 096a 00       		.byte	0
 27821 096b 12       		.uleb128 0x12
 27822 096c F0020000 		.4byte	.LASF172
 27823 0970 08       		.byte	0x8
 27824 0971 8901     		.2byte	0x189
 27825 0973 1B080000 		.4byte	0x81b
 27826 0977 08       		.byte	0x8
 27827 0978 12       		.uleb128 0x12
 27828 0979 02030000 		.4byte	.LASF121
 27829 097d 08       		.byte	0x8
 27830 097e 8A01     		.2byte	0x18a
 27831 0980 0B080000 		.4byte	0x80b
 27832 0984 18       		.byte	0x18
 27833 0985 00       		.byte	0
 27834 0986 11       		.uleb128 0x11
 27835 0987 BA090000 		.4byte	.LASF173
 27836 098b 10       		.byte	0x10
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 607


 27837 098c 08       		.byte	0x8
 27838 098d 9101     		.2byte	0x191
 27839 098f D5090000 		.4byte	0x9d5
 27840 0993 12       		.uleb128 0x12
 27841 0994 63080000 		.4byte	.LASF174
 27842 0998 08       		.byte	0x8
 27843 0999 9201     		.2byte	0x192
 27844 099b D3000000 		.4byte	0xd3
 27845 099f 00       		.byte	0
 27846 09a0 12       		.uleb128 0x12
 27847 09a1 A5140000 		.4byte	.LASF175
 27848 09a5 08       		.byte	0x8
 27849 09a6 9301     		.2byte	0x193
 27850 09a8 D3000000 		.4byte	0xd3
 27851 09ac 04       		.byte	0x4
 27852 09ad 12       		.uleb128 0x12
 27853 09ae B3050000 		.4byte	.LASF176
 27854 09b2 08       		.byte	0x8
 27855 09b3 9401     		.2byte	0x194
 27856 09b5 D3000000 		.4byte	0xd3
 27857 09b9 08       		.byte	0x8
 27858 09ba 12       		.uleb128 0x12
 27859 09bb CF060000 		.4byte	.LASF177
 27860 09bf 08       		.byte	0x8
 27861 09c0 9501     		.2byte	0x195
 27862 09c2 97000000 		.4byte	0x97
 27863 09c6 0C       		.byte	0xc
 27864 09c7 12       		.uleb128 0x12
 27865 09c8 02030000 		.4byte	.LASF121
 27866 09cc 08       		.byte	0x8
 27867 09cd 9601     		.2byte	0x196
 27868 09cf BE050000 		.4byte	0x5be
 27869 09d3 0D       		.byte	0xd
 27870 09d4 00       		.byte	0
 27871 09d5 11       		.uleb128 0x11
 27872 09d6 AE100000 		.4byte	.LASF178
 27873 09da 10       		.byte	0x10
 27874 09db 08       		.byte	0x8
 27875 09dc 9D01     		.2byte	0x19d
 27876 09de 170A0000 		.4byte	0xa17
 27877 09e2 12       		.uleb128 0x12
 27878 09e3 E2060000 		.4byte	.LASF179
 27879 09e7 08       		.byte	0x8
 27880 09e8 9E01     		.2byte	0x19e
 27881 09ea A3000000 		.4byte	0xa3
 27882 09ee 00       		.byte	0
 27883 09ef 12       		.uleb128 0x12
 27884 09f0 E20F0000 		.4byte	.LASF180
 27885 09f4 08       		.byte	0x8
 27886 09f5 9F01     		.2byte	0x19f
 27887 09f7 C7000000 		.4byte	0xc7
 27888 09fb 02       		.byte	0x2
 27889 09fc 12       		.uleb128 0x12
 27890 09fd DB070000 		.4byte	.LASF181
 27891 0a01 08       		.byte	0x8
 27892 0a02 A001     		.2byte	0x1a0
 27893 0a04 6A080000 		.4byte	0x86a
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 608


 27894 0a08 04       		.byte	0x4
 27895 0a09 12       		.uleb128 0x12
 27896 0a0a 02030000 		.4byte	.LASF121
 27897 0a0e 08       		.byte	0x8
 27898 0a0f A101     		.2byte	0x1a1
 27899 0a11 0B080000 		.4byte	0x80b
 27900 0a15 08       		.byte	0x8
 27901 0a16 00       		.byte	0
 27902 0a17 11       		.uleb128 0x11
 27903 0a18 8D010000 		.4byte	.LASF182
 27904 0a1c 10       		.byte	0x10
 27905 0a1d 08       		.byte	0x8
 27906 0a1e A801     		.2byte	0x1a8
 27907 0a20 4C0A0000 		.4byte	0xa4c
 27908 0a24 12       		.uleb128 0x12
 27909 0a25 3A0F0000 		.4byte	.LASF183
 27910 0a29 08       		.byte	0x8
 27911 0a2a A901     		.2byte	0x1a9
 27912 0a2c 97000000 		.4byte	0x97
 27913 0a30 00       		.byte	0
 27914 0a31 12       		.uleb128 0x12
 27915 0a32 600A0000 		.4byte	.LASF184
 27916 0a36 08       		.byte	0x8
 27917 0a37 AA01     		.2byte	0x1aa
 27918 0a39 97000000 		.4byte	0x97
 27919 0a3d 01       		.byte	0x1
 27920 0a3e 12       		.uleb128 0x12
 27921 0a3f 02030000 		.4byte	.LASF121
 27922 0a43 08       		.byte	0x8
 27923 0a44 AB01     		.2byte	0x1ab
 27924 0a46 4C0A0000 		.4byte	0xa4c
 27925 0a4a 02       		.byte	0x2
 27926 0a4b 00       		.byte	0
 27927 0a4c 09       		.uleb128 0x9
 27928 0a4d 97000000 		.4byte	0x97
 27929 0a51 5C0A0000 		.4byte	0xa5c
 27930 0a55 0A       		.uleb128 0xa
 27931 0a56 18010000 		.4byte	0x118
 27932 0a5a 0D       		.byte	0xd
 27933 0a5b 00       		.byte	0
 27934 0a5c 11       		.uleb128 0x11
 27935 0a5d 8B0C0000 		.4byte	.LASF185
 27936 0a61 10       		.byte	0x10
 27937 0a62 08       		.byte	0x8
 27938 0a63 B201     		.2byte	0x1b2
 27939 0a65 9E0A0000 		.4byte	0xa9e
 27940 0a69 12       		.uleb128 0x12
 27941 0a6a 56130000 		.4byte	.LASF186
 27942 0a6e 08       		.byte	0x8
 27943 0a6f B301     		.2byte	0x1b3
 27944 0a71 D3000000 		.4byte	0xd3
 27945 0a75 00       		.byte	0
 27946 0a76 12       		.uleb128 0x12
 27947 0a77 BA060000 		.4byte	.LASF187
 27948 0a7b 08       		.byte	0x8
 27949 0a7c B401     		.2byte	0x1b4
 27950 0a7e EB000000 		.4byte	0xeb
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 609


 27951 0a82 04       		.byte	0x4
 27952 0a83 12       		.uleb128 0x12
 27953 0a84 D30E0000 		.4byte	.LASF188
 27954 0a88 08       		.byte	0x8
 27955 0a89 B501     		.2byte	0x1b5
 27956 0a8b EB000000 		.4byte	0xeb
 27957 0a8f 08       		.byte	0x8
 27958 0a90 12       		.uleb128 0x12
 27959 0a91 02030000 		.4byte	.LASF121
 27960 0a95 08       		.byte	0x8
 27961 0a96 B601     		.2byte	0x1b6
 27962 0a98 9E0A0000 		.4byte	0xa9e
 27963 0a9c 0C       		.byte	0xc
 27964 0a9d 00       		.byte	0
 27965 0a9e 09       		.uleb128 0x9
 27966 0a9f 97000000 		.4byte	0x97
 27967 0aa3 AE0A0000 		.4byte	0xaae
 27968 0aa7 0A       		.uleb128 0xa
 27969 0aa8 18010000 		.4byte	0x118
 27970 0aac 03       		.byte	0x3
 27971 0aad 00       		.byte	0
 27972 0aae 11       		.uleb128 0x11
 27973 0aaf 35020000 		.4byte	.LASF189
 27974 0ab3 12       		.byte	0x12
 27975 0ab4 08       		.byte	0x8
 27976 0ab5 BD01     		.2byte	0x1bd
 27977 0ab7 F00A0000 		.4byte	0xaf0
 27978 0abb 12       		.uleb128 0x12
 27979 0abc 7D140000 		.4byte	.LASF190
 27980 0ac0 08       		.byte	0x8
 27981 0ac1 BE01     		.2byte	0x1be
 27982 0ac3 97000000 		.4byte	0x97
 27983 0ac7 00       		.byte	0
 27984 0ac8 12       		.uleb128 0x12
 27985 0ac9 E9120000 		.4byte	.LASF191
 27986 0acd 08       		.byte	0x8
 27987 0ace BF01     		.2byte	0x1bf
 27988 0ad0 6A080000 		.4byte	0x86a
 27989 0ad4 02       		.byte	0x2
 27990 0ad5 12       		.uleb128 0x12
 27991 0ad6 2B000000 		.4byte	.LASF192
 27992 0ada 08       		.byte	0x8
 27993 0adb C001     		.2byte	0x1c0
 27994 0add 97000000 		.4byte	0x97
 27995 0ae1 06       		.byte	0x6
 27996 0ae2 12       		.uleb128 0x12
 27997 0ae3 02030000 		.4byte	.LASF121
 27998 0ae7 08       		.byte	0x8
 27999 0ae8 C101     		.2byte	0x1c1
 28000 0aea F00A0000 		.4byte	0xaf0
 28001 0aee 07       		.byte	0x7
 28002 0aef 00       		.byte	0
 28003 0af0 09       		.uleb128 0x9
 28004 0af1 97000000 		.4byte	0x97
 28005 0af5 000B0000 		.4byte	0xb00
 28006 0af9 0A       		.uleb128 0xa
 28007 0afa 18010000 		.4byte	0x118
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 610


 28008 0afe 09       		.byte	0x9
 28009 0aff 00       		.byte	0
 28010 0b00 14       		.uleb128 0x14
 28011 0b01 71130000 		.4byte	.LASF193
 28012 0b05 F402     		.2byte	0x2f4
 28013 0b07 08       		.byte	0x8
 28014 0b08 CA01     		.2byte	0x1ca
 28015 0b0a E50B0000 		.4byte	0xbe5
 28016 0b0e 12       		.uleb128 0x12
 28017 0b0f 440B0000 		.4byte	.LASF194
 28018 0b13 08       		.byte	0x8
 28019 0b14 CC01     		.2byte	0x1cc
 28020 0b16 97000000 		.4byte	0x97
 28021 0b1a 00       		.byte	0
 28022 0b1b 12       		.uleb128 0x12
 28023 0b1c 02030000 		.4byte	.LASF121
 28024 0b20 08       		.byte	0x8
 28025 0b21 CD01     		.2byte	0x1cd
 28026 0b23 E50B0000 		.4byte	0xbe5
 28027 0b27 01       		.byte	0x1
 28028 0b28 13       		.uleb128 0x13
 28029 0b29 636E7400 		.ascii	"cnt\000"
 28030 0b2d 08       		.byte	0x8
 28031 0b2e CE01     		.2byte	0x1ce
 28032 0b30 96040000 		.4byte	0x496
 28033 0b34 10       		.byte	0x10
 28034 0b35 12       		.uleb128 0x12
 28035 0b36 C9020000 		.4byte	.LASF195
 28036 0b3a 08       		.byte	0x8
 28037 0b3b CF01     		.2byte	0x1cf
 28038 0b3d F50B0000 		.4byte	0xbf5
 28039 0b41 60       		.byte	0x60
 28040 0b42 13       		.uleb128 0x13
 28041 0b43 64657600 		.ascii	"dev\000"
 28042 0b47 08       		.byte	0x8
 28043 0b48 D001     		.2byte	0x1d0
 28044 0b4a 2F050000 		.4byte	0x52f
 28045 0b4e A0       		.byte	0xa0
 28046 0b4f 12       		.uleb128 0x12
 28047 0b50 FF100000 		.4byte	.LASF196
 28048 0b54 08       		.byte	0x8
 28049 0b55 D101     		.2byte	0x1d1
 28050 0b57 050C0000 		.4byte	0xc05
 28051 0b5b B0       		.byte	0xb0
 28052 0b5c 15       		.uleb128 0x15
 28053 0b5d 656E6300 		.ascii	"enc\000"
 28054 0b61 08       		.byte	0x8
 28055 0b62 D201     		.2byte	0x1d2
 28056 0b64 150C0000 		.4byte	0xc15
 28057 0b68 9001     		.2byte	0x190
 28058 0b6a 15       		.uleb128 0x15
 28059 0b6b 656D6700 		.ascii	"emg\000"
 28060 0b6f 08       		.byte	0x8
 28061 0b70 D301     		.2byte	0x1d3
 28062 0b72 1B080000 		.4byte	0x81b
 28063 0b76 F001     		.2byte	0x1f0
 28064 0b78 15       		.uleb128 0x15
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 611


 28065 0b79 696D7500 		.ascii	"imu\000"
 28066 0b7d 08       		.byte	0x8
 28067 0b7e D401     		.2byte	0x1d4
 28068 0b80 8A080000 		.4byte	0x88a
 28069 0b84 0002     		.2byte	0x200
 28070 0b86 15       		.uleb128 0x15
 28071 0b87 65787000 		.ascii	"exp\000"
 28072 0b8b 08       		.byte	0x8
 28073 0b8c D501     		.2byte	0x1d5
 28074 0b8e E2080000 		.4byte	0x8e2
 28075 0b92 2002     		.2byte	0x220
 28076 0b94 16       		.uleb128 0x16
 28077 0b95 6C000000 		.4byte	.LASF197
 28078 0b99 08       		.byte	0x8
 28079 0b9a D601     		.2byte	0x1d6
 28080 0b9c 250C0000 		.4byte	0xc25
 28081 0ba0 4002     		.2byte	0x240
 28082 0ba2 15       		.uleb128 0x15
 28083 0ba3 534800   		.ascii	"SH\000"
 28084 0ba6 08       		.byte	0x8
 28085 0ba7 D801     		.2byte	0x1d8
 28086 0ba9 86090000 		.4byte	0x986
 28087 0bad A002     		.2byte	0x2a0
 28088 0baf 16       		.uleb128 0x16
 28089 0bb0 01010000 		.4byte	.LASF198
 28090 0bb4 08       		.byte	0x8
 28091 0bb5 D901     		.2byte	0x1d9
 28092 0bb7 D5090000 		.4byte	0x9d5
 28093 0bbb B002     		.2byte	0x2b0
 28094 0bbd 15       		.uleb128 0x15
 28095 0bbe 4D5300   		.ascii	"MS\000"
 28096 0bc1 08       		.byte	0x8
 28097 0bc2 DA01     		.2byte	0x1da
 28098 0bc4 170A0000 		.4byte	0xa17
 28099 0bc8 C002     		.2byte	0x2c0
 28100 0bca 15       		.uleb128 0x15
 28101 0bcb 464200   		.ascii	"FB\000"
 28102 0bce 08       		.byte	0x8
 28103 0bcf DB01     		.2byte	0x1db
 28104 0bd1 5C0A0000 		.4byte	0xa5c
 28105 0bd5 D002     		.2byte	0x2d0
 28106 0bd7 15       		.uleb128 0x15
 28107 0bd8 575200   		.ascii	"WR\000"
 28108 0bdb 08       		.byte	0x8
 28109 0bdc DC01     		.2byte	0x1dc
 28110 0bde AE0A0000 		.4byte	0xaae
 28111 0be2 E002     		.2byte	0x2e0
 28112 0be4 00       		.byte	0
 28113 0be5 09       		.uleb128 0x9
 28114 0be6 97000000 		.4byte	0x97
 28115 0bea F50B0000 		.4byte	0xbf5
 28116 0bee 0A       		.uleb128 0xa
 28117 0bef 18010000 		.4byte	0x118
 28118 0bf3 0E       		.byte	0xe
 28119 0bf4 00       		.byte	0
 28120 0bf5 09       		.uleb128 0x9
 28121 0bf6 97000000 		.4byte	0x97
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 612


 28122 0bfa 050C0000 		.4byte	0xc05
 28123 0bfe 0A       		.uleb128 0xa
 28124 0bff 18010000 		.4byte	0x118
 28125 0c03 3F       		.byte	0x3f
 28126 0c04 00       		.byte	0
 28127 0c05 09       		.uleb128 0x9
 28128 0c06 CE050000 		.4byte	0x5ce
 28129 0c0a 150C0000 		.4byte	0xc15
 28130 0c0e 0A       		.uleb128 0xa
 28131 0c0f 18010000 		.4byte	0x118
 28132 0c13 01       		.byte	0x1
 28133 0c14 00       		.byte	0
 28134 0c15 09       		.uleb128 0x9
 28135 0c16 68070000 		.4byte	0x768
 28136 0c1a 250C0000 		.4byte	0xc25
 28137 0c1e 0A       		.uleb128 0xa
 28138 0c1f 18010000 		.4byte	0x118
 28139 0c23 01       		.byte	0x1
 28140 0c24 00       		.byte	0
 28141 0c25 09       		.uleb128 0x9
 28142 0c26 51090000 		.4byte	0x951
 28143 0c2a 350C0000 		.4byte	0xc35
 28144 0c2e 0A       		.uleb128 0xa
 28145 0c2f 18010000 		.4byte	0x118
 28146 0c33 02       		.byte	0x2
 28147 0c34 00       		.byte	0
 28148 0c35 11       		.uleb128 0x11
 28149 0c36 1B0E0000 		.4byte	.LASF199
 28150 0c3a 28       		.byte	0x28
 28151 0c3b 08       		.byte	0x8
 28152 0c3c E701     		.2byte	0x1e7
 28153 0c3e 910C0000 		.4byte	0xc91
 28154 0c42 12       		.uleb128 0x12
 28155 0c43 D0040000 		.4byte	.LASF200
 28156 0c47 08       		.byte	0x8
 28157 0c48 E801     		.2byte	0x1e8
 28158 0c4a 97000000 		.4byte	0x97
 28159 0c4e 00       		.byte	0
 28160 0c4f 12       		.uleb128 0x12
 28161 0c50 0F030000 		.4byte	.LASF201
 28162 0c54 08       		.byte	0x8
 28163 0c55 E901     		.2byte	0x1e9
 28164 0c57 910C0000 		.4byte	0xc91
 28165 0c5b 02       		.byte	0x2
 28166 0c5c 12       		.uleb128 0x12
 28167 0c5d EA0C0000 		.4byte	.LASF202
 28168 0c61 08       		.byte	0x8
 28169 0c62 EA01     		.2byte	0x1ea
 28170 0c64 910C0000 		.4byte	0xc91
 28171 0c68 08       		.byte	0x8
 28172 0c69 12       		.uleb128 0x12
 28173 0c6a 270E0000 		.4byte	.LASF203
 28174 0c6e 08       		.byte	0x8
 28175 0c6f EB01     		.2byte	0x1eb
 28176 0c71 910C0000 		.4byte	0xc91
 28177 0c75 0E       		.byte	0xe
 28178 0c76 12       		.uleb128 0x12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 613


 28179 0c77 4A080000 		.4byte	.LASF204
 28180 0c7b 08       		.byte	0x8
 28181 0c7c EC01     		.2byte	0x1ec
 28182 0c7e A10C0000 		.4byte	0xca1
 28183 0c82 14       		.byte	0x14
 28184 0c83 12       		.uleb128 0x12
 28185 0c84 10020000 		.4byte	.LASF205
 28186 0c88 08       		.byte	0x8
 28187 0c89 ED01     		.2byte	0x1ed
 28188 0c8b C7000000 		.4byte	0xc7
 28189 0c8f 24       		.byte	0x24
 28190 0c90 00       		.byte	0
 28191 0c91 09       		.uleb128 0x9
 28192 0c92 C7000000 		.4byte	0xc7
 28193 0c96 A10C0000 		.4byte	0xca1
 28194 0c9a 0A       		.uleb128 0xa
 28195 0c9b 18010000 		.4byte	0x118
 28196 0c9f 02       		.byte	0x2
 28197 0ca0 00       		.byte	0
 28198 0ca1 09       		.uleb128 0x9
 28199 0ca2 EB000000 		.4byte	0xeb
 28200 0ca6 B10C0000 		.4byte	0xcb1
 28201 0caa 0A       		.uleb128 0xa
 28202 0cab 18010000 		.4byte	0x118
 28203 0caf 03       		.byte	0x3
 28204 0cb0 00       		.byte	0
 28205 0cb1 11       		.uleb128 0x11
 28206 0cb2 E8030000 		.4byte	.LASF206
 28207 0cb6 06       		.byte	0x6
 28208 0cb7 08       		.byte	0x8
 28209 0cb8 FD01     		.2byte	0x1fd
 28210 0cba F30C0000 		.4byte	0xcf3
 28211 0cbe 12       		.uleb128 0x12
 28212 0cbf A4070000 		.4byte	.LASF207
 28213 0cc3 08       		.byte	0x8
 28214 0cc4 FE01     		.2byte	0x1fe
 28215 0cc6 97000000 		.4byte	0x97
 28216 0cca 00       		.byte	0
 28217 0ccb 12       		.uleb128 0x12
 28218 0ccc CA140000 		.4byte	.LASF208
 28219 0cd0 08       		.byte	0x8
 28220 0cd1 FF01     		.2byte	0x1ff
 28221 0cd3 97000000 		.4byte	0x97
 28222 0cd7 01       		.byte	0x1
 28223 0cd8 12       		.uleb128 0x12
 28224 0cd9 46060000 		.4byte	.LASF209
 28225 0cdd 08       		.byte	0x8
 28226 0cde 0002     		.2byte	0x200
 28227 0ce0 C7000000 		.4byte	0xc7
 28228 0ce4 02       		.byte	0x2
 28229 0ce5 12       		.uleb128 0x12
 28230 0ce6 470A0000 		.4byte	.LASF210
 28231 0cea 08       		.byte	0x8
 28232 0ceb 0102     		.2byte	0x201
 28233 0ced C7000000 		.4byte	0xc7
 28234 0cf1 04       		.byte	0x4
 28235 0cf2 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 614


 28236 0cf3 17       		.uleb128 0x17
 28237 0cf4 530F0000 		.4byte	.LASF388
 28238 0cf8 02       		.byte	0x2
 28239 0cf9 1403     		.2byte	0x314
 28240 0cfb 8C000000 		.4byte	0x8c
 28241 0cff 03       		.byte	0x3
 28242 0d00 1D0D0000 		.4byte	0xd1d
 28243 0d04 18       		.uleb128 0x18
 28244 0d05 CA040000 		.4byte	.LASF290
 28245 0d09 02       		.byte	0x2
 28246 0d0a 1403     		.2byte	0x314
 28247 0d0c 8C000000 		.4byte	0x8c
 28248 0d10 19       		.uleb128 0x19
 28249 0d11 1B020000 		.4byte	.LASF389
 28250 0d15 02       		.byte	0x2
 28251 0d16 1603     		.2byte	0x316
 28252 0d18 8C000000 		.4byte	0x8c
 28253 0d1c 00       		.byte	0
 28254 0d1d 1A       		.uleb128 0x1a
 28255 0d1e A2100000 		.4byte	.LASF211
 28256 0d22 01       		.byte	0x1
 28257 0d23 3D       		.byte	0x3d
 28258 0d24 00000000 		.4byte	.LFB64
 28259 0d28 E0040000 		.4byte	.LFE64-.LFB64
 28260 0d2c 01       		.uleb128 0x1
 28261 0d2d 9C       		.byte	0x9c
 28262 0d2e C80D0000 		.4byte	0xdc8
 28263 0d32 1B       		.uleb128 0x1b
 28264 0d33 4C060000 		.4byte	.LASF213
 28265 0d37 01       		.byte	0x1
 28266 0d38 3F       		.byte	0x3f
 28267 0d39 97000000 		.4byte	0x97
 28268 0d3d 02       		.uleb128 0x2
 28269 0d3e 91       		.byte	0x91
 28270 0d3f 77       		.sleb128 -9
 28271 0d40 1C       		.uleb128 0x1c
 28272 0d41 F30C0000 		.4byte	0xcf3
 28273 0d45 3C030000 		.4byte	.LBB8
 28274 0d49 08000000 		.4byte	.LBE8-.LBB8
 28275 0d4d 01       		.byte	0x1
 28276 0d4e 9C       		.byte	0x9c
 28277 0d4f 6E0D0000 		.4byte	0xd6e
 28278 0d53 1D       		.uleb128 0x1d
 28279 0d54 040D0000 		.4byte	0xd04
 28280 0d58 02       		.uleb128 0x2
 28281 0d59 91       		.byte	0x91
 28282 0d5a 68       		.sleb128 -24
 28283 0d5b 1E       		.uleb128 0x1e
 28284 0d5c 3C030000 		.4byte	.LBB9
 28285 0d60 08000000 		.4byte	.LBE9-.LBB9
 28286 0d64 1F       		.uleb128 0x1f
 28287 0d65 100D0000 		.4byte	0xd10
 28288 0d69 02       		.uleb128 0x2
 28289 0d6a 91       		.byte	0x91
 28290 0d6b 64       		.sleb128 -28
 28291 0d6c 00       		.byte	0
 28292 0d6d 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 615


 28293 0d6e 1C       		.uleb128 0x1c
 28294 0d6f F30C0000 		.4byte	0xcf3
 28295 0d73 5A030000 		.4byte	.LBB10
 28296 0d77 08000000 		.4byte	.LBE10-.LBB10
 28297 0d7b 01       		.byte	0x1
 28298 0d7c A8       		.byte	0xa8
 28299 0d7d 9C0D0000 		.4byte	0xd9c
 28300 0d81 1D       		.uleb128 0x1d
 28301 0d82 040D0000 		.4byte	0xd04
 28302 0d86 02       		.uleb128 0x2
 28303 0d87 91       		.byte	0x91
 28304 0d88 70       		.sleb128 -16
 28305 0d89 1E       		.uleb128 0x1e
 28306 0d8a 5A030000 		.4byte	.LBB11
 28307 0d8e 08000000 		.4byte	.LBE11-.LBB11
 28308 0d92 1F       		.uleb128 0x1f
 28309 0d93 100D0000 		.4byte	0xd10
 28310 0d97 02       		.uleb128 0x2
 28311 0d98 91       		.byte	0x91
 28312 0d99 60       		.sleb128 -32
 28313 0d9a 00       		.byte	0
 28314 0d9b 00       		.byte	0
 28315 0d9c 20       		.uleb128 0x20
 28316 0d9d F30C0000 		.4byte	0xcf3
 28317 0da1 9C040000 		.4byte	.LBB12
 28318 0da5 08000000 		.4byte	.LBE12-.LBB12
 28319 0da9 01       		.byte	0x1
 28320 0daa 0401     		.2byte	0x104
 28321 0dac 1D       		.uleb128 0x1d
 28322 0dad 040D0000 		.4byte	0xd04
 28323 0db1 02       		.uleb128 0x2
 28324 0db2 91       		.byte	0x91
 28325 0db3 6C       		.sleb128 -20
 28326 0db4 1E       		.uleb128 0x1e
 28327 0db5 9C040000 		.4byte	.LBB13
 28328 0db9 08000000 		.4byte	.LBE13-.LBB13
 28329 0dbd 1F       		.uleb128 0x1f
 28330 0dbe 100D0000 		.4byte	0xd10
 28331 0dc2 02       		.uleb128 0x2
 28332 0dc3 91       		.byte	0x91
 28333 0dc4 5C       		.sleb128 -36
 28334 0dc5 00       		.byte	0
 28335 0dc6 00       		.byte	0
 28336 0dc7 00       		.byte	0
 28337 0dc8 21       		.uleb128 0x21
 28338 0dc9 00000000 		.4byte	.LASF212
 28339 0dcd 01       		.byte	0x1
 28340 0dce 2B01     		.2byte	0x12b
 28341 0dd0 00000000 		.4byte	.LFB65
 28342 0dd4 22000000 		.4byte	.LFE65-.LFB65
 28343 0dd8 01       		.uleb128 0x1
 28344 0dd9 9C       		.byte	0x9c
 28345 0dda EF0D0000 		.4byte	0xdef
 28346 0dde 22       		.uleb128 0x22
 28347 0ddf 59050000 		.4byte	.LASF214
 28348 0de3 01       		.byte	0x1
 28349 0de4 2C01     		.2byte	0x12c
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 616


 28350 0de6 EF0D0000 		.4byte	0xdef
 28351 0dea 03       		.uleb128 0x3
 28352 0deb 91       		.byte	0x91
 28353 0dec 9C74     		.sleb128 -1508
 28354 0dee 00       		.byte	0
 28355 0def 09       		.uleb128 0x9
 28356 0df0 F9000000 		.4byte	0xf9
 28357 0df4 000E0000 		.4byte	0xe00
 28358 0df8 23       		.uleb128 0x23
 28359 0df9 18010000 		.4byte	0x118
 28360 0dfd DB05     		.2byte	0x5db
 28361 0dff 00       		.byte	0
 28362 0e00 21       		.uleb128 0x21
 28363 0e01 A2130000 		.4byte	.LASF215
 28364 0e05 01       		.byte	0x1
 28365 0e06 3701     		.2byte	0x137
 28366 0e08 00000000 		.4byte	.LFB66
 28367 0e0c 02010000 		.4byte	.LFE66-.LFB66
 28368 0e10 01       		.uleb128 0x1
 28369 0e11 9C       		.byte	0x9c
 28370 0e12 490E0000 		.4byte	0xe49
 28371 0e16 24       		.uleb128 0x24
 28372 0e17 FC120000 		.4byte	.LASF218
 28373 0e1b 01       		.byte	0x1
 28374 0e1c 3701     		.2byte	0x137
 28375 0e1e A3000000 		.4byte	0xa3
 28376 0e22 04       		.uleb128 0x4
 28377 0e23 91       		.byte	0x91
 28378 0e24 B6C47E   		.sleb128 -24010
 28379 0e27 22       		.uleb128 0x22
 28380 0e28 59050000 		.4byte	.LASF214
 28381 0e2c 01       		.byte	0x1
 28382 0e2d 3801     		.2byte	0x138
 28383 0e2f 490E0000 		.4byte	0xe49
 28384 0e33 03       		.uleb128 0x3
 28385 0e34 91       		.byte	0x91
 28386 0e35 D860     		.sleb128 -4008
 28387 0e37 22       		.uleb128 0x22
 28388 0e38 18080000 		.4byte	.LASF216
 28389 0e3c 01       		.byte	0x1
 28390 0e3d 3901     		.2byte	0x139
 28391 0e3f 5A0E0000 		.4byte	0xe5a
 28392 0e43 04       		.uleb128 0x4
 28393 0e44 91       		.byte	0x91
 28394 0e45 B8C47E   		.sleb128 -24008
 28395 0e48 00       		.byte	0
 28396 0e49 09       		.uleb128 0x9
 28397 0e4a F9000000 		.4byte	0xf9
 28398 0e4e 5A0E0000 		.4byte	0xe5a
 28399 0e52 23       		.uleb128 0x23
 28400 0e53 18010000 		.4byte	0x118
 28401 0e57 9F0F     		.2byte	0xf9f
 28402 0e59 00       		.byte	0
 28403 0e5a 09       		.uleb128 0x9
 28404 0e5b F9000000 		.4byte	0xf9
 28405 0e5f 6B0E0000 		.4byte	0xe6b
 28406 0e63 23       		.uleb128 0x23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 617


 28407 0e64 18010000 		.4byte	0x118
 28408 0e68 1F4E     		.2byte	0x4e1f
 28409 0e6a 00       		.byte	0
 28410 0e6b 21       		.uleb128 0x21
 28411 0e6c CA010000 		.4byte	.LASF217
 28412 0e70 01       		.byte	0x1
 28413 0e71 5C01     		.2byte	0x15c
 28414 0e73 00000000 		.4byte	.LFB67
 28415 0e77 50310000 		.4byte	.LFE67-.LFB67
 28416 0e7b 01       		.uleb128 0x1
 28417 0e7c 9C       		.byte	0x9c
 28418 0e7d 0F100000 		.4byte	0x100f
 28419 0e81 24       		.uleb128 0x24
 28420 0e82 960C0000 		.4byte	.LASF219
 28421 0e86 01       		.byte	0x1
 28422 0e87 5C01     		.2byte	0x15c
 28423 0e89 0F100000 		.4byte	0x100f
 28424 0e8d 03       		.uleb128 0x3
 28425 0e8e 91       		.byte	0x91
 28426 0e8f E451     		.sleb128 -5916
 28427 0e91 24       		.uleb128 0x24
 28428 0e92 7B130000 		.4byte	.LASF220
 28429 0e96 01       		.byte	0x1
 28430 0e97 5C01     		.2byte	0x15c
 28431 0e99 15100000 		.4byte	0x1015
 28432 0e9d 03       		.uleb128 0x3
 28433 0e9e 91       		.byte	0x91
 28434 0e9f E051     		.sleb128 -5920
 28435 0ea1 24       		.uleb128 0x24
 28436 0ea2 1B030000 		.4byte	.LASF221
 28437 0ea6 01       		.byte	0x1
 28438 0ea7 5D01     		.2byte	0x15d
 28439 0ea9 15100000 		.4byte	0x1015
 28440 0ead 03       		.uleb128 0x3
 28441 0eae 91       		.byte	0x91
 28442 0eaf DC51     		.sleb128 -5924
 28443 0eb1 24       		.uleb128 0x24
 28444 0eb2 030C0000 		.4byte	.LASF222
 28445 0eb6 01       		.byte	0x1
 28446 0eb7 5D01     		.2byte	0x15d
 28447 0eb9 15100000 		.4byte	0x1015
 28448 0ebd 03       		.uleb128 0x3
 28449 0ebe 91       		.byte	0x91
 28450 0ebf D851     		.sleb128 -5928
 28451 0ec1 24       		.uleb128 0x24
 28452 0ec2 C6120000 		.4byte	.LASF223
 28453 0ec6 01       		.byte	0x1
 28454 0ec7 5E01     		.2byte	0x15e
 28455 0ec9 15100000 		.4byte	0x1015
 28456 0ecd 02       		.uleb128 0x2
 28457 0ece 91       		.byte	0x91
 28458 0ecf 00       		.sleb128 0
 28459 0ed0 24       		.uleb128 0x24
 28460 0ed1 99070000 		.4byte	.LASF224
 28461 0ed5 01       		.byte	0x1
 28462 0ed6 5E01     		.2byte	0x15e
 28463 0ed8 1B100000 		.4byte	0x101b
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 618


 28464 0edc 02       		.uleb128 0x2
 28465 0edd 91       		.byte	0x91
 28466 0ede 04       		.sleb128 4
 28467 0edf 24       		.uleb128 0x24
 28468 0ee0 7F0A0000 		.4byte	.LASF225
 28469 0ee4 01       		.byte	0x1
 28470 0ee5 5F01     		.2byte	0x15f
 28471 0ee7 15100000 		.4byte	0x1015
 28472 0eeb 02       		.uleb128 0x2
 28473 0eec 91       		.byte	0x91
 28474 0eed 08       		.sleb128 8
 28475 0eee 24       		.uleb128 0x24
 28476 0eef 2A080000 		.4byte	.LASF226
 28477 0ef3 01       		.byte	0x1
 28478 0ef4 5F01     		.2byte	0x15f
 28479 0ef6 1B100000 		.4byte	0x101b
 28480 0efa 02       		.uleb128 0x2
 28481 0efb 91       		.byte	0x91
 28482 0efc 0C       		.sleb128 12
 28483 0efd 22       		.uleb128 0x22
 28484 0efe BC050000 		.4byte	.LASF227
 28485 0f02 01       		.byte	0x1
 28486 0f03 6201     		.2byte	0x162
 28487 0f05 21100000 		.4byte	0x1021
 28488 0f09 03       		.uleb128 0x3
 28489 0f0a 91       		.byte	0x91
 28490 0f0b AC52     		.sleb128 -5844
 28491 0f0d 22       		.uleb128 0x22
 28492 0f0e F30A0000 		.4byte	.LASF228
 28493 0f12 01       		.byte	0x1
 28494 0f13 6301     		.2byte	0x163
 28495 0f15 A3000000 		.4byte	0xa3
 28496 0f19 02       		.uleb128 0x2
 28497 0f1a 91       		.byte	0x91
 28498 0f1b 60       		.sleb128 -32
 28499 0f1c 25       		.uleb128 0x25
 28500 0f1d 6900     		.ascii	"i\000"
 28501 0f1f 01       		.byte	0x1
 28502 0f20 6601     		.2byte	0x166
 28503 0f22 97000000 		.4byte	0x97
 28504 0f26 02       		.uleb128 0x2
 28505 0f27 91       		.byte	0x91
 28506 0f28 67       		.sleb128 -25
 28507 0f29 25       		.uleb128 0x25
 28508 0f2a 6A00     		.ascii	"j\000"
 28509 0f2c 01       		.byte	0x1
 28510 0f2d 6601     		.2byte	0x166
 28511 0f2f 97000000 		.4byte	0x97
 28512 0f33 02       		.uleb128 0x2
 28513 0f34 91       		.byte	0x91
 28514 0f35 66       		.sleb128 -26
 28515 0f36 25       		.uleb128 0x25
 28516 0f37 69647800 		.ascii	"idx\000"
 28517 0f3b 01       		.byte	0x1
 28518 0f3c 6701     		.2byte	0x167
 28519 0f3e 97000000 		.4byte	0x97
 28520 0f42 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 619


 28521 0f43 91       		.byte	0x91
 28522 0f44 65       		.sleb128 -27
 28523 0f45 22       		.uleb128 0x22
 28524 0f46 ED100000 		.4byte	.LASF229
 28525 0f4a 01       		.byte	0x1
 28526 0f4b 6801     		.2byte	0x168
 28527 0f4d 97000000 		.4byte	0x97
 28528 0f51 02       		.uleb128 0x2
 28529 0f52 91       		.byte	0x91
 28530 0f53 64       		.sleb128 -28
 28531 0f54 25       		.uleb128 0x25
 28532 0f55 736F6400 		.ascii	"sod\000"
 28533 0f59 01       		.byte	0x1
 28534 0f5a 6901     		.2byte	0x169
 28535 0f5c 97000000 		.4byte	0x97
 28536 0f60 02       		.uleb128 0x2
 28537 0f61 91       		.byte	0x91
 28538 0f62 63       		.sleb128 -29
 28539 0f63 22       		.uleb128 0x22
 28540 0f64 D40B0000 		.4byte	.LASF230
 28541 0f68 01       		.byte	0x1
 28542 0f69 6A01     		.2byte	0x16a
 28543 0f6b 97000000 		.4byte	0x97
 28544 0f6f 02       		.uleb128 0x2
 28545 0f70 91       		.byte	0x91
 28546 0f71 62       		.sleb128 -30
 28547 0f72 22       		.uleb128 0x22
 28548 0f73 B0140000 		.4byte	.LASF231
 28549 0f77 01       		.byte	0x1
 28550 0f78 6B01     		.2byte	0x16b
 28551 0f7a 32100000 		.4byte	0x1032
 28552 0f7e 03       		.uleb128 0x3
 28553 0f7f 91       		.byte	0x91
 28554 0f80 F851     		.sleb128 -5896
 28555 0f82 22       		.uleb128 0x22
 28556 0f83 AE120000 		.4byte	.LASF232
 28557 0f87 01       		.byte	0x1
 28558 0f88 6C01     		.2byte	0x16c
 28559 0f8a EB000000 		.4byte	0xeb
 28560 0f8e 03       		.uleb128 0x3
 28561 0f8f 91       		.byte	0x91
 28562 0f90 F451     		.sleb128 -5900
 28563 0f92 22       		.uleb128 0x22
 28564 0f93 7E110000 		.4byte	.LASF233
 28565 0f97 01       		.byte	0x1
 28566 0f98 6D01     		.2byte	0x16d
 28567 0f9a C7000000 		.4byte	0xc7
 28568 0f9e 03       		.uleb128 0x3
 28569 0f9f 91       		.byte	0x91
 28570 0fa0 F251     		.sleb128 -5902
 28571 0fa2 22       		.uleb128 0x22
 28572 0fa3 2B0C0000 		.4byte	.LASF234
 28573 0fa7 01       		.byte	0x1
 28574 0fa8 6E01     		.2byte	0x16e
 28575 0faa A3000000 		.4byte	0xa3
 28576 0fae 03       		.uleb128 0x3
 28577 0faf 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 620


 28578 0fb0 F051     		.sleb128 -5904
 28579 0fb2 22       		.uleb128 0x22
 28580 0fb3 CF120000 		.4byte	.LASF235
 28581 0fb7 01       		.byte	0x1
 28582 0fb8 6F01     		.2byte	0x16f
 28583 0fba D3000000 		.4byte	0xd3
 28584 0fbe 03       		.uleb128 0x3
 28585 0fbf 91       		.byte	0x91
 28586 0fc0 EC51     		.sleb128 -5908
 28587 0fc2 22       		.uleb128 0x22
 28588 0fc3 FB0D0000 		.4byte	.LASF236
 28589 0fc7 01       		.byte	0x1
 28590 0fc8 7001     		.2byte	0x170
 28591 0fca AF000000 		.4byte	0xaf
 28592 0fce 03       		.uleb128 0x3
 28593 0fcf 91       		.byte	0x91
 28594 0fd0 E851     		.sleb128 -5912
 28595 0fd2 22       		.uleb128 0x22
 28596 0fd3 460D0000 		.4byte	.LASF237
 28597 0fd7 01       		.byte	0x1
 28598 0fd8 7201     		.2byte	0x172
 28599 0fda 97000000 		.4byte	0x97
 28600 0fde 02       		.uleb128 0x2
 28601 0fdf 91       		.byte	0x91
 28602 0fe0 5F       		.sleb128 -33
 28603 0fe1 22       		.uleb128 0x22
 28604 0fe2 2B010000 		.4byte	.LASF238
 28605 0fe6 01       		.byte	0x1
 28606 0fe7 7301     		.2byte	0x173
 28607 0fe9 97000000 		.4byte	0x97
 28608 0fed 02       		.uleb128 0x2
 28609 0fee 91       		.byte	0x91
 28610 0fef 5E       		.sleb128 -34
 28611 0ff0 22       		.uleb128 0x22
 28612 0ff1 B50A0000 		.4byte	.LASF239
 28613 0ff5 01       		.byte	0x1
 28614 0ff6 7501     		.2byte	0x175
 28615 0ff8 15100000 		.4byte	0x1015
 28616 0ffc 02       		.uleb128 0x2
 28617 0ffd 91       		.byte	0x91
 28618 0ffe 58       		.sleb128 -40
 28619 0fff 22       		.uleb128 0x22
 28620 1000 BF010000 		.4byte	.LASF240
 28621 1004 01       		.byte	0x1
 28622 1005 7601     		.2byte	0x176
 28623 1007 15100000 		.4byte	0x1015
 28624 100b 02       		.uleb128 0x2
 28625 100c 91       		.byte	0x91
 28626 100d 54       		.sleb128 -44
 28627 100e 00       		.byte	0
 28628 100f 07       		.uleb128 0x7
 28629 1010 04       		.byte	0x4
 28630 1011 15100000 		.4byte	0x1015
 28631 1015 07       		.uleb128 0x7
 28632 1016 04       		.byte	0x4
 28633 1017 97000000 		.4byte	0x97
 28634 101b 07       		.uleb128 0x7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 621


 28635 101c 04       		.byte	0x4
 28636 101d 25010000 		.4byte	0x125
 28637 1021 09       		.uleb128 0x9
 28638 1022 97000000 		.4byte	0x97
 28639 1026 32100000 		.4byte	0x1032
 28640 102a 23       		.uleb128 0x23
 28641 102b 18010000 		.4byte	0x118
 28642 102f A716     		.2byte	0x16a7
 28643 1031 00       		.byte	0
 28644 1032 09       		.uleb128 0x9
 28645 1033 F9000000 		.4byte	0xf9
 28646 1037 42100000 		.4byte	0x1042
 28647 103b 0A       		.uleb128 0xa
 28648 103c 18010000 		.4byte	0x118
 28649 1040 31       		.byte	0x31
 28650 1041 00       		.byte	0
 28651 1042 21       		.uleb128 0x21
 28652 1043 F50E0000 		.4byte	.LASF241
 28653 1047 01       		.byte	0x1
 28654 1048 5503     		.2byte	0x355
 28655 104a 00000000 		.4byte	.LFB68
 28656 104e B4180000 		.4byte	.LFE68-.LFB68
 28657 1052 01       		.uleb128 0x1
 28658 1053 9C       		.byte	0x9c
 28659 1054 10120000 		.4byte	0x1210
 28660 1058 24       		.uleb128 0x24
 28661 1059 B4060000 		.4byte	.LASF242
 28662 105d 01       		.byte	0x1
 28663 105e 5503     		.2byte	0x355
 28664 1060 A3000000 		.4byte	0xa3
 28665 1064 03       		.uleb128 0x3
 28666 1065 91       		.byte	0x91
 28667 1066 AE75     		.sleb128 -1362
 28668 1068 25       		.uleb128 0x25
 28669 1069 6900     		.ascii	"i\000"
 28670 106b 01       		.byte	0x1
 28671 106c 5603     		.2byte	0x356
 28672 106e 97000000 		.4byte	0x97
 28673 1072 02       		.uleb128 0x2
 28674 1073 91       		.byte	0x91
 28675 1074 6F       		.sleb128 -17
 28676 1075 25       		.uleb128 0x25
 28677 1076 6A00     		.ascii	"j\000"
 28678 1078 01       		.byte	0x1
 28679 1079 5603     		.2byte	0x356
 28680 107b 97000000 		.4byte	0x97
 28681 107f 02       		.uleb128 0x2
 28682 1080 91       		.byte	0x91
 28683 1081 6E       		.sleb128 -18
 28684 1082 25       		.uleb128 0x25
 28685 1083 736F6400 		.ascii	"sod\000"
 28686 1087 01       		.byte	0x1
 28687 1088 5703     		.2byte	0x357
 28688 108a 97000000 		.4byte	0x97
 28689 108e 02       		.uleb128 0x2
 28690 108f 91       		.byte	0x91
 28691 1090 6D       		.sleb128 -19
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 622


 28692 1091 22       		.uleb128 0x22
 28693 1092 9F0A0000 		.4byte	.LASF243
 28694 1096 01       		.byte	0x1
 28695 1097 5803     		.2byte	0x358
 28696 1099 97000000 		.4byte	0x97
 28697 109d 02       		.uleb128 0x2
 28698 109e 91       		.byte	0x91
 28699 109f 62       		.sleb128 -30
 28700 10a0 22       		.uleb128 0x22
 28701 10a1 7E110000 		.4byte	.LASF233
 28702 10a5 01       		.byte	0x1
 28703 10a6 5903     		.2byte	0x359
 28704 10a8 C7000000 		.4byte	0xc7
 28705 10ac 02       		.uleb128 0x2
 28706 10ad 91       		.byte	0x91
 28707 10ae 60       		.sleb128 -32
 28708 10af 22       		.uleb128 0x22
 28709 10b0 2B0C0000 		.4byte	.LASF234
 28710 10b4 01       		.byte	0x1
 28711 10b5 5A03     		.2byte	0x35a
 28712 10b7 A3000000 		.4byte	0xa3
 28713 10bb 02       		.uleb128 0x2
 28714 10bc 91       		.byte	0x91
 28715 10bd 5E       		.sleb128 -34
 28716 10be 22       		.uleb128 0x22
 28717 10bf CF120000 		.4byte	.LASF235
 28718 10c3 01       		.byte	0x1
 28719 10c4 5B03     		.2byte	0x35b
 28720 10c6 D3000000 		.4byte	0xd3
 28721 10ca 02       		.uleb128 0x2
 28722 10cb 91       		.byte	0x91
 28723 10cc 58       		.sleb128 -40
 28724 10cd 22       		.uleb128 0x22
 28725 10ce FB0D0000 		.4byte	.LASF236
 28726 10d2 01       		.byte	0x1
 28727 10d3 5C03     		.2byte	0x35c
 28728 10d5 AF000000 		.4byte	0xaf
 28729 10d9 02       		.uleb128 0x2
 28730 10da 91       		.byte	0x91
 28731 10db 54       		.sleb128 -44
 28732 10dc 22       		.uleb128 0x22
 28733 10dd AE120000 		.4byte	.LASF232
 28734 10e1 01       		.byte	0x1
 28735 10e2 5D03     		.2byte	0x35d
 28736 10e4 EB000000 		.4byte	0xeb
 28737 10e8 02       		.uleb128 0x2
 28738 10e9 91       		.byte	0x91
 28739 10ea 50       		.sleb128 -48
 28740 10eb 22       		.uleb128 0x22
 28741 10ec 460D0000 		.4byte	.LASF237
 28742 10f0 01       		.byte	0x1
 28743 10f1 5F03     		.2byte	0x35f
 28744 10f3 97000000 		.4byte	0x97
 28745 10f7 02       		.uleb128 0x2
 28746 10f8 91       		.byte	0x91
 28747 10f9 65       		.sleb128 -27
 28748 10fa 22       		.uleb128 0x22
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 623


 28749 10fb 2B010000 		.4byte	.LASF238
 28750 10ff 01       		.byte	0x1
 28751 1100 6003     		.2byte	0x360
 28752 1102 97000000 		.4byte	0x97
 28753 1106 02       		.uleb128 0x2
 28754 1107 91       		.byte	0x91
 28755 1108 64       		.sleb128 -28
 28756 1109 22       		.uleb128 0x22
 28757 110a 31030000 		.4byte	.LASF244
 28758 110e 01       		.byte	0x1
 28759 110f 6303     		.2byte	0x363
 28760 1111 10120000 		.4byte	0x1210
 28761 1115 02       		.uleb128 0x2
 28762 1116 91       		.byte	0x91
 28763 1117 68       		.sleb128 -24
 28764 1118 22       		.uleb128 0x22
 28765 1119 960C0000 		.4byte	.LASF219
 28766 111d 01       		.byte	0x1
 28767 111e 6B03     		.2byte	0x36b
 28768 1120 16120000 		.4byte	0x1216
 28769 1124 03       		.uleb128 0x3
 28770 1125 91       		.byte	0x91
 28771 1126 887D     		.sleb128 -376
 28772 1128 22       		.uleb128 0x22
 28773 1129 7B130000 		.4byte	.LASF220
 28774 112d 01       		.byte	0x1
 28775 112e C803     		.2byte	0x3c8
 28776 1130 26120000 		.4byte	0x1226
 28777 1134 03       		.uleb128 0x3
 28778 1135 91       		.byte	0x91
 28779 1136 B47C     		.sleb128 -460
 28780 1138 22       		.uleb128 0x22
 28781 1139 1B030000 		.4byte	.LASF221
 28782 113d 01       		.byte	0x1
 28783 113e E303     		.2byte	0x3e3
 28784 1140 26120000 		.4byte	0x1226
 28785 1144 03       		.uleb128 0x3
 28786 1145 91       		.byte	0x91
 28787 1146 E07B     		.sleb128 -544
 28788 1148 22       		.uleb128 0x22
 28789 1149 030C0000 		.4byte	.LASF222
 28790 114d 01       		.byte	0x1
 28791 114e FE03     		.2byte	0x3fe
 28792 1150 26120000 		.4byte	0x1226
 28793 1154 03       		.uleb128 0x3
 28794 1155 91       		.byte	0x91
 28795 1156 8C7B     		.sleb128 -628
 28796 1158 22       		.uleb128 0x22
 28797 1159 99070000 		.4byte	.LASF224
 28798 115d 01       		.byte	0x1
 28799 115e 1A04     		.2byte	0x41a
 28800 1160 36120000 		.4byte	0x1236
 28801 1164 03       		.uleb128 0x3
 28802 1165 91       		.byte	0x91
 28803 1166 C478     		.sleb128 -956
 28804 1168 22       		.uleb128 0x22
 28805 1169 03140000 		.4byte	.LASF245
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 624


 28806 116d 01       		.byte	0x1
 28807 116e 3604     		.2byte	0x436
 28808 1170 46120000 		.4byte	0x1246
 28809 1174 03       		.uleb128 0x3
 28810 1175 91       		.byte	0x91
 28811 1176 CC77     		.sleb128 -1076
 28812 1178 22       		.uleb128 0x22
 28813 1179 2A080000 		.4byte	.LASF226
 28814 117d 01       		.byte	0x1
 28815 117e 3904     		.2byte	0x439
 28816 1180 56120000 		.4byte	0x1256
 28817 1184 03       		.uleb128 0x3
 28818 1185 91       		.byte	0x91
 28819 1186 9C77     		.sleb128 -1124
 28820 1188 22       		.uleb128 0x22
 28821 1189 C6120000 		.4byte	.LASF223
 28822 118d 01       		.byte	0x1
 28823 118e 4804     		.2byte	0x448
 28824 1190 66120000 		.4byte	0x1266
 28825 1194 03       		.uleb128 0x3
 28826 1195 91       		.byte	0x91
 28827 1196 FC76     		.sleb128 -1156
 28828 1198 22       		.uleb128 0x22
 28829 1199 9C0C0000 		.4byte	.LASF246
 28830 119d 01       		.byte	0x1
 28831 119e 4904     		.2byte	0x449
 28832 11a0 76120000 		.4byte	0x1276
 28833 11a4 03       		.uleb128 0x3
 28834 11a5 91       		.byte	0x91
 28835 11a6 F076     		.sleb128 -1168
 28836 11a8 22       		.uleb128 0x22
 28837 11a9 ED0B0000 		.4byte	.LASF247
 28838 11ad 01       		.byte	0x1
 28839 11ae 4A04     		.2byte	0x44a
 28840 11b0 86120000 		.4byte	0x1286
 28841 11b4 03       		.uleb128 0x3
 28842 11b5 91       		.byte	0x91
 28843 11b6 DC76     		.sleb128 -1188
 28844 11b8 22       		.uleb128 0x22
 28845 11b9 0D0E0000 		.4byte	.LASF248
 28846 11bd 01       		.byte	0x1
 28847 11be 4B04     		.2byte	0x44b
 28848 11c0 97000000 		.4byte	0x97
 28849 11c4 02       		.uleb128 0x2
 28850 11c5 91       		.byte	0x91
 28851 11c6 63       		.sleb128 -29
 28852 11c7 22       		.uleb128 0x22
 28853 11c8 7F0A0000 		.4byte	.LASF225
 28854 11cc 01       		.byte	0x1
 28855 11cd 5404     		.2byte	0x454
 28856 11cf 26120000 		.4byte	0x1226
 28857 11d3 03       		.uleb128 0x3
 28858 11d4 91       		.byte	0x91
 28859 11d5 8876     		.sleb128 -1272
 28860 11d7 22       		.uleb128 0x22
 28861 11d8 2A140000 		.4byte	.LASF249
 28862 11dc 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 625


 28863 11dd 5F04     		.2byte	0x45f
 28864 11df 26120000 		.4byte	0x1226
 28865 11e3 03       		.uleb128 0x3
 28866 11e4 91       		.byte	0x91
 28867 11e5 B475     		.sleb128 -1356
 28868 11e7 1E       		.uleb128 0x1e
 28869 11e8 1E180000 		.4byte	.LBB14
 28870 11ec 86000000 		.4byte	.LBE14-.LBB14
 28871 11f0 25       		.uleb128 0x25
 28872 11f1 69647800 		.ascii	"idx\000"
 28873 11f5 01       		.byte	0x1
 28874 11f6 C804     		.2byte	0x4c8
 28875 11f8 97000000 		.4byte	0x97
 28876 11fc 02       		.uleb128 0x2
 28877 11fd 91       		.byte	0x91
 28878 11fe 67       		.sleb128 -25
 28879 11ff 22       		.uleb128 0x22
 28880 1200 10050000 		.4byte	.LASF250
 28881 1204 01       		.byte	0x1
 28882 1205 C804     		.2byte	0x4c8
 28883 1207 97000000 		.4byte	0x97
 28884 120b 02       		.uleb128 0x2
 28885 120c 91       		.byte	0x91
 28886 120d 66       		.sleb128 -26
 28887 120e 00       		.byte	0
 28888 120f 00       		.byte	0
 28889 1210 07       		.uleb128 0x7
 28890 1211 04       		.byte	0x4
 28891 1212 000B0000 		.4byte	0xb00
 28892 1216 09       		.uleb128 0x9
 28893 1217 15100000 		.4byte	0x1015
 28894 121b 26120000 		.4byte	0x1226
 28895 121f 0A       		.uleb128 0xa
 28896 1220 18010000 		.4byte	0x118
 28897 1224 51       		.byte	0x51
 28898 1225 00       		.byte	0
 28899 1226 09       		.uleb128 0x9
 28900 1227 97000000 		.4byte	0x97
 28901 122b 36120000 		.4byte	0x1236
 28902 122f 0A       		.uleb128 0xa
 28903 1230 18010000 		.4byte	0x118
 28904 1234 51       		.byte	0x51
 28905 1235 00       		.byte	0
 28906 1236 09       		.uleb128 0x9
 28907 1237 25010000 		.4byte	0x125
 28908 123b 46120000 		.4byte	0x1246
 28909 123f 0A       		.uleb128 0xa
 28910 1240 18010000 		.4byte	0x118
 28911 1244 51       		.byte	0x51
 28912 1245 00       		.byte	0
 28913 1246 09       		.uleb128 0x9
 28914 1247 F9000000 		.4byte	0xf9
 28915 124b 56120000 		.4byte	0x1256
 28916 124f 0A       		.uleb128 0xa
 28917 1250 18010000 		.4byte	0x118
 28918 1254 75       		.byte	0x75
 28919 1255 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 626


 28920 1256 09       		.uleb128 0x9
 28921 1257 25010000 		.4byte	0x125
 28922 125b 66120000 		.4byte	0x1266
 28923 125f 0A       		.uleb128 0xa
 28924 1260 18010000 		.4byte	0x118
 28925 1264 0B       		.byte	0xb
 28926 1265 00       		.byte	0
 28927 1266 09       		.uleb128 0x9
 28928 1267 97000000 		.4byte	0x97
 28929 126b 76120000 		.4byte	0x1276
 28930 126f 0A       		.uleb128 0xa
 28931 1270 18010000 		.4byte	0x118
 28932 1274 1E       		.byte	0x1e
 28933 1275 00       		.byte	0
 28934 1276 09       		.uleb128 0x9
 28935 1277 97000000 		.4byte	0x97
 28936 127b 86120000 		.4byte	0x1286
 28937 127f 0A       		.uleb128 0xa
 28938 1280 18010000 		.4byte	0x118
 28939 1284 08       		.byte	0x8
 28940 1285 00       		.byte	0
 28941 1286 09       		.uleb128 0x9
 28942 1287 97000000 		.4byte	0x97
 28943 128b 96120000 		.4byte	0x1296
 28944 128f 0A       		.uleb128 0xa
 28945 1290 18010000 		.4byte	0x118
 28946 1294 11       		.byte	0x11
 28947 1295 00       		.byte	0
 28948 1296 21       		.uleb128 0x21
 28949 1297 A3030000 		.4byte	.LASF251
 28950 129b 01       		.byte	0x1
 28951 129c D904     		.2byte	0x4d9
 28952 129e 00000000 		.4byte	.LFB69
 28953 12a2 8C140000 		.4byte	.LFE69-.LFB69
 28954 12a6 01       		.uleb128 0x1
 28955 12a7 9C       		.byte	0x9c
 28956 12a8 38130000 		.4byte	0x1338
 28957 12ac 24       		.uleb128 0x24
 28958 12ad B4060000 		.4byte	.LASF242
 28959 12b1 01       		.byte	0x1
 28960 12b2 D904     		.2byte	0x4d9
 28961 12b4 A3000000 		.4byte	0xa3
 28962 12b8 02       		.uleb128 0x2
 28963 12b9 91       		.byte	0x91
 28964 12ba 56       		.sleb128 -42
 28965 12bb 25       		.uleb128 0x25
 28966 12bc 6900     		.ascii	"i\000"
 28967 12be 01       		.byte	0x1
 28968 12bf DB04     		.2byte	0x4db
 28969 12c1 97000000 		.4byte	0x97
 28970 12c5 02       		.uleb128 0x2
 28971 12c6 91       		.byte	0x91
 28972 12c7 67       		.sleb128 -25
 28973 12c8 25       		.uleb128 0x25
 28974 12c9 6A00     		.ascii	"j\000"
 28975 12cb 01       		.byte	0x1
 28976 12cc DB04     		.2byte	0x4db
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 627


 28977 12ce 97000000 		.4byte	0x97
 28978 12d2 02       		.uleb128 0x2
 28979 12d3 91       		.byte	0x91
 28980 12d4 66       		.sleb128 -26
 28981 12d5 22       		.uleb128 0x22
 28982 12d6 0E0C0000 		.4byte	.LASF252
 28983 12da 01       		.byte	0x1
 28984 12db DC04     		.2byte	0x4dc
 28985 12dd 97000000 		.4byte	0x97
 28986 12e1 02       		.uleb128 0x2
 28987 12e2 91       		.byte	0x91
 28988 12e3 62       		.sleb128 -30
 28989 12e4 22       		.uleb128 0x22
 28990 12e5 AE120000 		.4byte	.LASF232
 28991 12e9 01       		.byte	0x1
 28992 12ea DD04     		.2byte	0x4dd
 28993 12ec EB000000 		.4byte	0xeb
 28994 12f0 02       		.uleb128 0x2
 28995 12f1 91       		.byte	0x91
 28996 12f2 5C       		.sleb128 -36
 28997 12f3 22       		.uleb128 0x22
 28998 12f4 7C030000 		.4byte	.LASF253
 28999 12f8 01       		.byte	0x1
 29000 12f9 DD04     		.2byte	0x4dd
 29001 12fb EB000000 		.4byte	0xeb
 29002 12ff 02       		.uleb128 0x2
 29003 1300 91       		.byte	0x91
 29004 1301 58       		.sleb128 -40
 29005 1302 22       		.uleb128 0x22
 29006 1303 460D0000 		.4byte	.LASF237
 29007 1307 01       		.byte	0x1
 29008 1308 DF04     		.2byte	0x4df
 29009 130a 97000000 		.4byte	0x97
 29010 130e 02       		.uleb128 0x2
 29011 130f 91       		.byte	0x91
 29012 1310 64       		.sleb128 -28
 29013 1311 22       		.uleb128 0x22
 29014 1312 2B010000 		.4byte	.LASF238
 29015 1316 01       		.byte	0x1
 29016 1317 E004     		.2byte	0x4e0
 29017 1319 97000000 		.4byte	0x97
 29018 131d 02       		.uleb128 0x2
 29019 131e 91       		.byte	0x91
 29020 131f 63       		.sleb128 -29
 29021 1320 1E       		.uleb128 0x1e
 29022 1321 000B0000 		.4byte	.LBB15
 29023 1325 26000000 		.4byte	.LBE15-.LBB15
 29024 1329 25       		.uleb128 0x25
 29025 132a 6900     		.ascii	"i\000"
 29026 132c 01       		.byte	0x1
 29027 132d 8705     		.2byte	0x587
 29028 132f 97000000 		.4byte	0x97
 29029 1333 02       		.uleb128 0x2
 29030 1334 91       		.byte	0x91
 29031 1335 65       		.sleb128 -27
 29032 1336 00       		.byte	0
 29033 1337 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 628


 29034 1338 21       		.uleb128 0x21
 29035 1339 B5080000 		.4byte	.LASF254
 29036 133d 01       		.byte	0x1
 29037 133e 2706     		.2byte	0x627
 29038 1340 00000000 		.4byte	.LFB70
 29039 1344 F40D0000 		.4byte	.LFE70-.LFB70
 29040 1348 01       		.uleb128 0x1
 29041 1349 9C       		.byte	0x9c
 29042 134a C7140000 		.4byte	0x14c7
 29043 134e 24       		.uleb128 0x24
 29044 134f B4060000 		.4byte	.LASF242
 29045 1353 01       		.byte	0x1
 29046 1354 2706     		.2byte	0x627
 29047 1356 A3000000 		.4byte	0xa3
 29048 135a 03       		.uleb128 0x3
 29049 135b 91       		.byte	0x91
 29050 135c CE72     		.sleb128 -1714
 29051 135e 22       		.uleb128 0x22
 29052 135f BC050000 		.4byte	.LASF227
 29053 1363 01       		.byte	0x1
 29054 1364 2A06     		.2byte	0x62a
 29055 1366 C7140000 		.4byte	0x14c7
 29056 136a 03       		.uleb128 0x3
 29057 136b 91       		.byte	0x91
 29058 136c DC74     		.sleb128 -1444
 29059 136e 22       		.uleb128 0x22
 29060 136f 6B110000 		.4byte	.LASF255
 29061 1373 01       		.byte	0x1
 29062 1374 3106     		.2byte	0x631
 29063 1376 A3000000 		.4byte	0xa3
 29064 137a 02       		.uleb128 0x2
 29065 137b 91       		.byte	0x91
 29066 137c 62       		.sleb128 -30
 29067 137d 22       		.uleb128 0x22
 29068 137e 24050000 		.4byte	.LASF256
 29069 1382 01       		.byte	0x1
 29070 1383 3206     		.2byte	0x632
 29071 1385 A3000000 		.4byte	0xa3
 29072 1389 02       		.uleb128 0x2
 29073 138a 91       		.byte	0x91
 29074 138b 6E       		.sleb128 -18
 29075 138c 22       		.uleb128 0x22
 29076 138d D6080000 		.4byte	.LASF257
 29077 1391 01       		.byte	0x1
 29078 1392 3306     		.2byte	0x633
 29079 1394 A3000000 		.4byte	0xa3
 29080 1398 02       		.uleb128 0x2
 29081 1399 91       		.byte	0x91
 29082 139a 60       		.sleb128 -32
 29083 139b 22       		.uleb128 0x22
 29084 139c 55080000 		.4byte	.LASF258
 29085 13a0 01       		.byte	0x1
 29086 13a1 3406     		.2byte	0x634
 29087 13a3 A3000000 		.4byte	0xa3
 29088 13a7 02       		.uleb128 0x2
 29089 13a8 91       		.byte	0x91
 29090 13a9 5E       		.sleb128 -34
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 629


 29091 13aa 25       		.uleb128 0x25
 29092 13ab 6900     		.ascii	"i\000"
 29093 13ad 01       		.byte	0x1
 29094 13ae 3C06     		.2byte	0x63c
 29095 13b0 A3000000 		.4byte	0xa3
 29096 13b4 02       		.uleb128 0x2
 29097 13b5 91       		.byte	0x91
 29098 13b6 6C       		.sleb128 -20
 29099 13b7 25       		.uleb128 0x25
 29100 13b8 6A00     		.ascii	"j\000"
 29101 13ba 01       		.byte	0x1
 29102 13bb 3C06     		.2byte	0x63c
 29103 13bd A3000000 		.4byte	0xa3
 29104 13c1 02       		.uleb128 0x2
 29105 13c2 91       		.byte	0x91
 29106 13c3 6A       		.sleb128 -22
 29107 13c4 25       		.uleb128 0x25
 29108 13c5 6B00     		.ascii	"k\000"
 29109 13c7 01       		.byte	0x1
 29110 13c8 3C06     		.2byte	0x63c
 29111 13ca A3000000 		.4byte	0xa3
 29112 13ce 02       		.uleb128 0x2
 29113 13cf 91       		.byte	0x91
 29114 13d0 68       		.sleb128 -24
 29115 13d1 25       		.uleb128 0x25
 29116 13d2 6800     		.ascii	"h\000"
 29117 13d4 01       		.byte	0x1
 29118 13d5 3C06     		.2byte	0x63c
 29119 13d7 A3000000 		.4byte	0xa3
 29120 13db 02       		.uleb128 0x2
 29121 13dc 91       		.byte	0x91
 29122 13dd 66       		.sleb128 -26
 29123 13de 22       		.uleb128 0x22
 29124 13df 19050000 		.4byte	.LASF259
 29125 13e3 01       		.byte	0x1
 29126 13e4 3D06     		.2byte	0x63d
 29127 13e6 A3000000 		.4byte	0xa3
 29128 13ea 02       		.uleb128 0x2
 29129 13eb 91       		.byte	0x91
 29130 13ec 5C       		.sleb128 -36
 29131 13ed 22       		.uleb128 0x22
 29132 13ee 5B0D0000 		.4byte	.LASF260
 29133 13f2 01       		.byte	0x1
 29134 13f3 4006     		.2byte	0x640
 29135 13f5 30010000 		.4byte	0x130
 29136 13f9 03       		.uleb128 0x3
 29137 13fa 91       		.byte	0x91
 29138 13fb C074     		.sleb128 -1472
 29139 13fd 22       		.uleb128 0x22
 29140 13fe 32110000 		.4byte	.LASF261
 29141 1402 01       		.byte	0x1
 29142 1403 4106     		.2byte	0x641
 29143 1405 D8140000 		.4byte	0x14d8
 29144 1409 03       		.uleb128 0x3
 29145 140a 91       		.byte	0x91
 29146 140b B474     		.sleb128 -1484
 29147 140d 22       		.uleb128 0x22
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 630


 29148 140e 32070000 		.4byte	.LASF262
 29149 1412 01       		.byte	0x1
 29150 1413 4206     		.2byte	0x642
 29151 1415 E8140000 		.4byte	0x14e8
 29152 1419 03       		.uleb128 0x3
 29153 141a 91       		.byte	0x91
 29154 141b A074     		.sleb128 -1504
 29155 141d 22       		.uleb128 0x22
 29156 141e 09000000 		.4byte	.LASF263
 29157 1422 01       		.byte	0x1
 29158 1423 4306     		.2byte	0x643
 29159 1425 F8140000 		.4byte	0x14f8
 29160 1429 03       		.uleb128 0x3
 29161 142a 91       		.byte	0x91
 29162 142b 9074     		.sleb128 -1520
 29163 142d 22       		.uleb128 0x22
 29164 142e 860E0000 		.4byte	.LASF264
 29165 1432 01       		.byte	0x1
 29166 1433 4406     		.2byte	0x644
 29167 1435 08150000 		.4byte	0x1508
 29168 1439 03       		.uleb128 0x3
 29169 143a 91       		.byte	0x91
 29170 143b E473     		.sleb128 -1564
 29171 143d 22       		.uleb128 0x22
 29172 143e 22020000 		.4byte	.LASF265
 29173 1442 01       		.byte	0x1
 29174 1443 4506     		.2byte	0x645
 29175 1445 30010000 		.4byte	0x130
 29176 1449 03       		.uleb128 0x3
 29177 144a 91       		.byte	0x91
 29178 144b C873     		.sleb128 -1592
 29179 144d 22       		.uleb128 0x22
 29180 144e 9C010000 		.4byte	.LASF266
 29181 1452 01       		.byte	0x1
 29182 1453 4806     		.2byte	0x648
 29183 1455 97000000 		.4byte	0x97
 29184 1459 02       		.uleb128 0x2
 29185 145a 91       		.byte	0x91
 29186 145b 5B       		.sleb128 -37
 29187 145c 22       		.uleb128 0x22
 29188 145d AA040000 		.4byte	.LASF267
 29189 1461 01       		.byte	0x1
 29190 1462 4906     		.2byte	0x649
 29191 1464 97000000 		.4byte	0x97
 29192 1468 02       		.uleb128 0x2
 29193 1469 91       		.byte	0x91
 29194 146a 5A       		.sleb128 -38
 29195 146b 22       		.uleb128 0x22
 29196 146c DA100000 		.4byte	.LASF268
 29197 1470 01       		.byte	0x1
 29198 1471 4A06     		.2byte	0x64a
 29199 1473 97000000 		.4byte	0x97
 29200 1477 02       		.uleb128 0x2
 29201 1478 91       		.byte	0x91
 29202 1479 59       		.sleb128 -39
 29203 147a 22       		.uleb128 0x22
 29204 147b 59110000 		.4byte	.LASF269
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 631


 29205 147f 01       		.byte	0x1
 29206 1480 4B06     		.2byte	0x64b
 29207 1482 97000000 		.4byte	0x97
 29208 1486 02       		.uleb128 0x2
 29209 1487 91       		.byte	0x91
 29210 1488 58       		.sleb128 -40
 29211 1489 22       		.uleb128 0x22
 29212 148a B8040000 		.4byte	.LASF270
 29213 148e 01       		.byte	0x1
 29214 148f 4C06     		.2byte	0x64c
 29215 1491 97000000 		.4byte	0x97
 29216 1495 02       		.uleb128 0x2
 29217 1496 91       		.byte	0x91
 29218 1497 57       		.sleb128 -41
 29219 1498 22       		.uleb128 0x22
 29220 1499 EA000000 		.4byte	.LASF271
 29221 149d 01       		.byte	0x1
 29222 149e 4D06     		.2byte	0x64d
 29223 14a0 97000000 		.4byte	0x97
 29224 14a4 02       		.uleb128 0x2
 29225 14a5 91       		.byte	0x91
 29226 14a6 65       		.sleb128 -27
 29227 14a7 22       		.uleb128 0x22
 29228 14a8 03140000 		.4byte	.LASF245
 29229 14ac 01       		.byte	0x1
 29230 14ad 4F06     		.2byte	0x64f
 29231 14af 46120000 		.4byte	0x1246
 29232 14b3 03       		.uleb128 0x3
 29233 14b4 91       		.byte	0x91
 29234 14b5 D072     		.sleb128 -1712
 29235 14b7 22       		.uleb128 0x22
 29236 14b8 90030000 		.4byte	.LASF272
 29237 14bc 01       		.byte	0x1
 29238 14bd 5006     		.2byte	0x650
 29239 14bf 97000000 		.4byte	0x97
 29240 14c3 02       		.uleb128 0x2
 29241 14c4 91       		.byte	0x91
 29242 14c5 56       		.sleb128 -42
 29243 14c6 00       		.byte	0
 29244 14c7 09       		.uleb128 0x9
 29245 14c8 97000000 		.4byte	0x97
 29246 14cc D8140000 		.4byte	0x14d8
 29247 14d0 23       		.uleb128 0x23
 29248 14d1 18010000 		.4byte	0x118
 29249 14d5 7805     		.2byte	0x578
 29250 14d7 00       		.byte	0
 29251 14d8 09       		.uleb128 0x9
 29252 14d9 F9000000 		.4byte	0xf9
 29253 14dd E8140000 		.4byte	0x14e8
 29254 14e1 0A       		.uleb128 0xa
 29255 14e2 18010000 		.4byte	0x118
 29256 14e6 0A       		.byte	0xa
 29257 14e7 00       		.byte	0
 29258 14e8 09       		.uleb128 0x9
 29259 14e9 F9000000 		.4byte	0xf9
 29260 14ed F8140000 		.4byte	0x14f8
 29261 14f1 0A       		.uleb128 0xa
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 632


 29262 14f2 18010000 		.4byte	0x118
 29263 14f6 13       		.byte	0x13
 29264 14f7 00       		.byte	0
 29265 14f8 09       		.uleb128 0x9
 29266 14f9 F9000000 		.4byte	0xf9
 29267 14fd 08150000 		.4byte	0x1508
 29268 1501 0A       		.uleb128 0xa
 29269 1502 18010000 		.4byte	0x118
 29270 1506 0F       		.byte	0xf
 29271 1507 00       		.byte	0
 29272 1508 09       		.uleb128 0x9
 29273 1509 F9000000 		.4byte	0xf9
 29274 150d 18150000 		.4byte	0x1518
 29275 1511 0A       		.uleb128 0xa
 29276 1512 18010000 		.4byte	0x118
 29277 1516 29       		.byte	0x29
 29278 1517 00       		.byte	0
 29279 1518 26       		.uleb128 0x26
 29280 1519 F9020000 		.4byte	.LASF304
 29281 151d 01       		.byte	0x1
 29282 151e 1607     		.2byte	0x716
 29283 1520 00000000 		.4byte	.LFB71
 29284 1524 84000000 		.4byte	.LFE71-.LFB71
 29285 1528 01       		.uleb128 0x1
 29286 1529 9C       		.byte	0x9c
 29287 152a 49150000 		.4byte	0x1549
 29288 152e 25       		.uleb128 0x25
 29289 152f 6900     		.ascii	"i\000"
 29290 1531 01       		.byte	0x1
 29291 1532 1807     		.2byte	0x718
 29292 1534 97000000 		.4byte	0x97
 29293 1538 02       		.uleb128 0x2
 29294 1539 91       		.byte	0x91
 29295 153a 6F       		.sleb128 -17
 29296 153b 25       		.uleb128 0x25
 29297 153c 6A00     		.ascii	"j\000"
 29298 153e 01       		.byte	0x1
 29299 153f 1807     		.2byte	0x718
 29300 1541 97000000 		.4byte	0x97
 29301 1545 02       		.uleb128 0x2
 29302 1546 91       		.byte	0x91
 29303 1547 6E       		.sleb128 -18
 29304 1548 00       		.byte	0
 29305 1549 21       		.uleb128 0x21
 29306 154a 0A010000 		.4byte	.LASF273
 29307 154e 01       		.byte	0x1
 29308 154f 2907     		.2byte	0x729
 29309 1551 00000000 		.4byte	.LFB72
 29310 1555 781C0000 		.4byte	.LFE72-.LFB72
 29311 1559 01       		.uleb128 0x1
 29312 155a 9C       		.byte	0x9c
 29313 155b F4150000 		.4byte	0x15f4
 29314 155f 24       		.uleb128 0x24
 29315 1560 650D0000 		.4byte	.LASF274
 29316 1564 01       		.byte	0x1
 29317 1565 2907     		.2byte	0x729
 29318 1567 1F010000 		.4byte	0x11f
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 633


 29319 156b 03       		.uleb128 0x3
 29320 156c 91       		.byte	0x91
 29321 156d D47E     		.sleb128 -172
 29322 156f 25       		.uleb128 0x25
 29323 1570 6900     		.ascii	"i\000"
 29324 1572 01       		.byte	0x1
 29325 1573 2B07     		.2byte	0x72b
 29326 1575 73000000 		.4byte	0x73
 29327 1579 02       		.uleb128 0x2
 29328 157a 91       		.byte	0x91
 29329 157b 54       		.sleb128 -44
 29330 157c 22       		.uleb128 0x22
 29331 157d 31030000 		.4byte	.LASF244
 29332 1581 01       		.byte	0x1
 29333 1582 2D07     		.2byte	0x72d
 29334 1584 10120000 		.4byte	0x1210
 29335 1588 02       		.uleb128 0x2
 29336 1589 91       		.byte	0x91
 29337 158a 4C       		.sleb128 -52
 29338 158b 1E       		.uleb128 0x1e
 29339 158c 1C000000 		.4byte	.LBB16
 29340 1590 3A1C0000 		.4byte	.LBE16-.LBB16
 29341 1594 25       		.uleb128 0x25
 29342 1595 73747200 		.ascii	"str\000"
 29343 1599 01       		.byte	0x1
 29344 159a 3007     		.2byte	0x730
 29345 159c F4150000 		.4byte	0x15f4
 29346 15a0 03       		.uleb128 0x3
 29347 15a1 91       		.byte	0x91
 29348 15a2 DC7E     		.sleb128 -164
 29349 15a4 1E       		.uleb128 0x1e
 29350 15a5 00030000 		.4byte	.LBB17
 29351 15a9 FC100000 		.4byte	.LBE17-.LBB17
 29352 15ad 25       		.uleb128 0x25
 29353 15ae 6B00     		.ascii	"k\000"
 29354 15b0 01       		.byte	0x1
 29355 15b1 6407     		.2byte	0x764
 29356 15b3 97000000 		.4byte	0x97
 29357 15b7 02       		.uleb128 0x2
 29358 15b8 91       		.byte	0x91
 29359 15b9 53       		.sleb128 -45
 29360 15ba 1E       		.uleb128 0x1e
 29361 15bb 50030000 		.4byte	.LBB18
 29362 15bf 90100000 		.4byte	.LBE18-.LBB18
 29363 15c3 22       		.uleb128 0x22
 29364 15c4 460D0000 		.4byte	.LASF237
 29365 15c8 01       		.byte	0x1
 29366 15c9 6607     		.2byte	0x766
 29367 15cb 97000000 		.4byte	0x97
 29368 15cf 02       		.uleb128 0x2
 29369 15d0 91       		.byte	0x91
 29370 15d1 4B       		.sleb128 -53
 29371 15d2 25       		.uleb128 0x25
 29372 15d3 4D4F5400 		.ascii	"MOT\000"
 29373 15d7 01       		.byte	0x1
 29374 15d8 6707     		.2byte	0x767
 29375 15da 04160000 		.4byte	0x1604
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 634


 29376 15de 02       		.uleb128 0x2
 29377 15df 91       		.byte	0x91
 29378 15e0 44       		.sleb128 -60
 29379 15e1 22       		.uleb128 0x22
 29380 15e2 6B130000 		.4byte	.LASF275
 29381 15e6 01       		.byte	0x1
 29382 15e7 6807     		.2byte	0x768
 29383 15e9 97000000 		.4byte	0x97
 29384 15ed 02       		.uleb128 0x2
 29385 15ee 91       		.byte	0x91
 29386 15ef 43       		.sleb128 -61
 29387 15f0 00       		.byte	0
 29388 15f1 00       		.byte	0
 29389 15f2 00       		.byte	0
 29390 15f3 00       		.byte	0
 29391 15f4 09       		.uleb128 0x9
 29392 15f5 F9000000 		.4byte	0xf9
 29393 15f9 04160000 		.4byte	0x1604
 29394 15fd 0A       		.uleb128 0xa
 29395 15fe 18010000 		.4byte	0x118
 29396 1602 63       		.byte	0x63
 29397 1603 00       		.byte	0
 29398 1604 07       		.uleb128 0x7
 29399 1605 04       		.byte	0x4
 29400 1606 CE050000 		.4byte	0x5ce
 29401 160a 21       		.uleb128 0x21
 29402 160b B90E0000 		.4byte	.LASF276
 29403 160f 01       		.byte	0x1
 29404 1610 1309     		.2byte	0x913
 29405 1612 00000000 		.4byte	.LFB73
 29406 1616 B4030000 		.4byte	.LFE73-.LFB73
 29407 161a 01       		.uleb128 0x1
 29408 161b 9C       		.byte	0x9c
 29409 161c 8A160000 		.4byte	0x168a
 29410 1620 24       		.uleb128 0x24
 29411 1621 650D0000 		.4byte	.LASF274
 29412 1625 01       		.byte	0x1
 29413 1626 1309     		.2byte	0x913
 29414 1628 1F010000 		.4byte	0x11f
 29415 162c 03       		.uleb128 0x3
 29416 162d 91       		.byte	0x91
 29417 162e EC7E     		.sleb128 -148
 29418 1630 25       		.uleb128 0x25
 29419 1631 73747200 		.ascii	"str\000"
 29420 1635 01       		.byte	0x1
 29421 1636 1509     		.2byte	0x915
 29422 1638 F4150000 		.4byte	0x15f4
 29423 163c 03       		.uleb128 0x3
 29424 163d 91       		.byte	0x91
 29425 163e F07E     		.sleb128 -144
 29426 1640 25       		.uleb128 0x25
 29427 1641 6900     		.ascii	"i\000"
 29428 1643 01       		.byte	0x1
 29429 1644 1609     		.2byte	0x916
 29430 1646 73000000 		.4byte	0x73
 29431 164a 02       		.uleb128 0x2
 29432 164b 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 635


 29433 164c 64       		.sleb128 -28
 29434 164d 22       		.uleb128 0x22
 29435 164e 47040000 		.4byte	.LASF277
 29436 1652 01       		.byte	0x1
 29437 1653 1709     		.2byte	0x917
 29438 1655 73000000 		.4byte	0x73
 29439 1659 02       		.uleb128 0x2
 29440 165a 91       		.byte	0x91
 29441 165b 54       		.sleb128 -44
 29442 165c 22       		.uleb128 0x22
 29443 165d 31030000 		.4byte	.LASF244
 29444 1661 01       		.byte	0x1
 29445 1662 1909     		.2byte	0x919
 29446 1664 10120000 		.4byte	0x1210
 29447 1668 02       		.uleb128 0x2
 29448 1669 91       		.byte	0x91
 29449 166a 60       		.sleb128 -32
 29450 166b 25       		.uleb128 0x25
 29451 166c 4D4F5400 		.ascii	"MOT\000"
 29452 1670 01       		.byte	0x1
 29453 1671 1A09     		.2byte	0x91a
 29454 1673 04160000 		.4byte	0x1604
 29455 1677 02       		.uleb128 0x2
 29456 1678 91       		.byte	0x91
 29457 1679 5C       		.sleb128 -36
 29458 167a 22       		.uleb128 0x22
 29459 167b 6B130000 		.4byte	.LASF275
 29460 167f 01       		.byte	0x1
 29461 1680 1B09     		.2byte	0x91b
 29462 1682 97000000 		.4byte	0x97
 29463 1686 02       		.uleb128 0x2
 29464 1687 91       		.byte	0x91
 29465 1688 5B       		.sleb128 -37
 29466 1689 00       		.byte	0
 29467 168a 21       		.uleb128 0x21
 29468 168b 1A0F0000 		.4byte	.LASF278
 29469 168f 01       		.byte	0x1
 29470 1690 5509     		.2byte	0x955
 29471 1692 00000000 		.4byte	.LFB74
 29472 1696 7C120000 		.4byte	.LFE74-.LFB74
 29473 169a 01       		.uleb128 0x1
 29474 169b 9C       		.byte	0x9c
 29475 169c 2B170000 		.4byte	0x172b
 29476 16a0 24       		.uleb128 0x24
 29477 16a1 650D0000 		.4byte	.LASF274
 29478 16a5 01       		.byte	0x1
 29479 16a6 5509     		.2byte	0x955
 29480 16a8 1F010000 		.4byte	0x11f
 29481 16ac 03       		.uleb128 0x3
 29482 16ad 91       		.byte	0x91
 29483 16ae D47E     		.sleb128 -172
 29484 16b0 25       		.uleb128 0x25
 29485 16b1 73747200 		.ascii	"str\000"
 29486 16b5 01       		.byte	0x1
 29487 16b6 5709     		.2byte	0x957
 29488 16b8 F4150000 		.4byte	0x15f4
 29489 16bc 03       		.uleb128 0x3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 636


 29490 16bd 91       		.byte	0x91
 29491 16be DC7E     		.sleb128 -164
 29492 16c0 25       		.uleb128 0x25
 29493 16c1 6900     		.ascii	"i\000"
 29494 16c3 01       		.byte	0x1
 29495 16c4 5809     		.2byte	0x958
 29496 16c6 73000000 		.4byte	0x73
 29497 16ca 02       		.uleb128 0x2
 29498 16cb 91       		.byte	0x91
 29499 16cc 54       		.sleb128 -44
 29500 16cd 22       		.uleb128 0x22
 29501 16ce 31030000 		.4byte	.LASF244
 29502 16d2 01       		.byte	0x1
 29503 16d3 5C09     		.2byte	0x95c
 29504 16d5 10120000 		.4byte	0x1210
 29505 16d9 02       		.uleb128 0x2
 29506 16da 91       		.byte	0x91
 29507 16db 4C       		.sleb128 -52
 29508 16dc 1E       		.uleb128 0x1e
 29509 16dd 08010000 		.4byte	.LBB19
 29510 16e1 D40C0000 		.4byte	.LBE19-.LBB19
 29511 16e5 25       		.uleb128 0x25
 29512 16e6 6B00     		.ascii	"k\000"
 29513 16e8 01       		.byte	0x1
 29514 16e9 7109     		.2byte	0x971
 29515 16eb 97000000 		.4byte	0x97
 29516 16ef 02       		.uleb128 0x2
 29517 16f0 91       		.byte	0x91
 29518 16f1 53       		.sleb128 -45
 29519 16f2 1E       		.uleb128 0x1e
 29520 16f3 12010000 		.4byte	.LBB20
 29521 16f7 AE0C0000 		.4byte	.LBE20-.LBB20
 29522 16fb 22       		.uleb128 0x22
 29523 16fc 460D0000 		.4byte	.LASF237
 29524 1700 01       		.byte	0x1
 29525 1701 7309     		.2byte	0x973
 29526 1703 97000000 		.4byte	0x97
 29527 1707 02       		.uleb128 0x2
 29528 1708 91       		.byte	0x91
 29529 1709 4B       		.sleb128 -53
 29530 170a 25       		.uleb128 0x25
 29531 170b 4D4F5400 		.ascii	"MOT\000"
 29532 170f 01       		.byte	0x1
 29533 1710 7409     		.2byte	0x974
 29534 1712 04160000 		.4byte	0x1604
 29535 1716 02       		.uleb128 0x2
 29536 1717 91       		.byte	0x91
 29537 1718 44       		.sleb128 -60
 29538 1719 22       		.uleb128 0x22
 29539 171a 6B130000 		.4byte	.LASF275
 29540 171e 01       		.byte	0x1
 29541 171f 7509     		.2byte	0x975
 29542 1721 97000000 		.4byte	0x97
 29543 1725 02       		.uleb128 0x2
 29544 1726 91       		.byte	0x91
 29545 1727 43       		.sleb128 -61
 29546 1728 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 637


 29547 1729 00       		.byte	0
 29548 172a 00       		.byte	0
 29549 172b 21       		.uleb128 0x21
 29550 172c 140B0000 		.4byte	.LASF279
 29551 1730 01       		.byte	0x1
 29552 1731 5D0A     		.2byte	0xa5d
 29553 1733 00000000 		.4byte	.LFB75
 29554 1737 C8000000 		.4byte	.LFE75-.LFB75
 29555 173b 01       		.uleb128 0x1
 29556 173c 9C       		.byte	0x9c
 29557 173d 6F170000 		.4byte	0x176f
 29558 1741 24       		.uleb128 0x24
 29559 1742 650D0000 		.4byte	.LASF274
 29560 1746 01       		.byte	0x1
 29561 1747 5D0A     		.2byte	0xa5d
 29562 1749 1F010000 		.4byte	0x11f
 29563 174d 03       		.uleb128 0x3
 29564 174e 91       		.byte	0x91
 29565 174f 847F     		.sleb128 -124
 29566 1751 25       		.uleb128 0x25
 29567 1752 73747200 		.ascii	"str\000"
 29568 1756 01       		.byte	0x1
 29569 1757 5F0A     		.2byte	0xa5f
 29570 1759 F4150000 		.4byte	0x15f4
 29571 175d 03       		.uleb128 0x3
 29572 175e 91       		.byte	0x91
 29573 175f 887F     		.sleb128 -120
 29574 1761 25       		.uleb128 0x25
 29575 1762 6900     		.ascii	"i\000"
 29576 1764 01       		.byte	0x1
 29577 1765 600A     		.2byte	0xa60
 29578 1767 73000000 		.4byte	0x73
 29579 176b 02       		.uleb128 0x2
 29580 176c 91       		.byte	0x91
 29581 176d 6C       		.sleb128 -20
 29582 176e 00       		.byte	0
 29583 176f 21       		.uleb128 0x21
 29584 1770 74050000 		.4byte	.LASF280
 29585 1774 01       		.byte	0x1
 29586 1775 740A     		.2byte	0xa74
 29587 1777 00000000 		.4byte	.LFB76
 29588 177b 30010000 		.4byte	.LFE76-.LFB76
 29589 177f 01       		.uleb128 0x1
 29590 1780 9C       		.byte	0x9c
 29591 1781 B3170000 		.4byte	0x17b3
 29592 1785 24       		.uleb128 0x24
 29593 1786 650D0000 		.4byte	.LASF274
 29594 178a 01       		.byte	0x1
 29595 178b 740A     		.2byte	0xa74
 29596 178d 1F010000 		.4byte	0x11f
 29597 1791 03       		.uleb128 0x3
 29598 1792 91       		.byte	0x91
 29599 1793 847F     		.sleb128 -124
 29600 1795 25       		.uleb128 0x25
 29601 1796 73747200 		.ascii	"str\000"
 29602 179a 01       		.byte	0x1
 29603 179b 760A     		.2byte	0xa76
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 638


 29604 179d F4150000 		.4byte	0x15f4
 29605 17a1 03       		.uleb128 0x3
 29606 17a2 91       		.byte	0x91
 29607 17a3 887F     		.sleb128 -120
 29608 17a5 25       		.uleb128 0x25
 29609 17a6 6900     		.ascii	"i\000"
 29610 17a8 01       		.byte	0x1
 29611 17a9 770A     		.2byte	0xa77
 29612 17ab 73000000 		.4byte	0x73
 29613 17af 02       		.uleb128 0x2
 29614 17b0 91       		.byte	0x91
 29615 17b1 6C       		.sleb128 -20
 29616 17b2 00       		.byte	0
 29617 17b3 21       		.uleb128 0x21
 29618 17b4 8D140000 		.4byte	.LASF281
 29619 17b8 01       		.byte	0x1
 29620 17b9 9B0A     		.2byte	0xa9b
 29621 17bb 00000000 		.4byte	.LFB77
 29622 17bf 74030000 		.4byte	.LFE77-.LFB77
 29623 17c3 01       		.uleb128 0x1
 29624 17c4 9C       		.byte	0x9c
 29625 17c5 F7170000 		.4byte	0x17f7
 29626 17c9 24       		.uleb128 0x24
 29627 17ca 650D0000 		.4byte	.LASF274
 29628 17ce 01       		.byte	0x1
 29629 17cf 9B0A     		.2byte	0xa9b
 29630 17d1 1F010000 		.4byte	0x11f
 29631 17d5 03       		.uleb128 0x3
 29632 17d6 91       		.byte	0x91
 29633 17d7 AC7D     		.sleb128 -340
 29634 17d9 25       		.uleb128 0x25
 29635 17da 73747200 		.ascii	"str\000"
 29636 17de 01       		.byte	0x1
 29637 17df 9D0A     		.2byte	0xa9d
 29638 17e1 F7170000 		.4byte	0x17f7
 29639 17e5 03       		.uleb128 0x3
 29640 17e6 91       		.byte	0x91
 29641 17e7 B07D     		.sleb128 -336
 29642 17e9 25       		.uleb128 0x25
 29643 17ea 6900     		.ascii	"i\000"
 29644 17ec 01       		.byte	0x1
 29645 17ed 9E0A     		.2byte	0xa9e
 29646 17ef 73000000 		.4byte	0x73
 29647 17f3 02       		.uleb128 0x2
 29648 17f4 91       		.byte	0x91
 29649 17f5 5C       		.sleb128 -36
 29650 17f6 00       		.byte	0
 29651 17f7 09       		.uleb128 0x9
 29652 17f8 F9000000 		.4byte	0xf9
 29653 17fc 08180000 		.4byte	0x1808
 29654 1800 23       		.uleb128 0x23
 29655 1801 18010000 		.4byte	0x118
 29656 1805 2B01     		.2byte	0x12b
 29657 1807 00       		.byte	0
 29658 1808 21       		.uleb128 0x21
 29659 1809 E40E0000 		.4byte	.LASF282
 29660 180d 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 639


 29661 180e C60A     		.2byte	0xac6
 29662 1810 00000000 		.4byte	.LFB78
 29663 1814 84000000 		.4byte	.LFE78-.LFB78
 29664 1818 01       		.uleb128 0x1
 29665 1819 9C       		.byte	0x9c
 29666 181a 5B180000 		.4byte	0x185b
 29667 181e 24       		.uleb128 0x24
 29668 181f BC050000 		.4byte	.LASF227
 29669 1823 01       		.byte	0x1
 29670 1824 C60A     		.2byte	0xac6
 29671 1826 15100000 		.4byte	0x1015
 29672 182a 02       		.uleb128 0x2
 29673 182b 91       		.byte	0x91
 29674 182c 6C       		.sleb128 -20
 29675 182d 24       		.uleb128 0x24
 29676 182e F30A0000 		.4byte	.LASF228
 29677 1832 01       		.byte	0x1
 29678 1833 C60A     		.2byte	0xac6
 29679 1835 A3000000 		.4byte	0xa3
 29680 1839 02       		.uleb128 0x2
 29681 183a 91       		.byte	0x91
 29682 183b 6A       		.sleb128 -22
 29683 183c 24       		.uleb128 0x24
 29684 183d 4C0F0000 		.4byte	.LASF283
 29685 1841 01       		.byte	0x1
 29686 1842 C60A     		.2byte	0xac6
 29687 1844 97000000 		.4byte	0x97
 29688 1848 02       		.uleb128 0x2
 29689 1849 91       		.byte	0x91
 29690 184a 69       		.sleb128 -23
 29691 184b 22       		.uleb128 0x22
 29692 184c B4060000 		.4byte	.LASF242
 29693 1850 01       		.byte	0x1
 29694 1851 C80A     		.2byte	0xac8
 29695 1853 A3000000 		.4byte	0xa3
 29696 1857 02       		.uleb128 0x2
 29697 1858 91       		.byte	0x91
 29698 1859 76       		.sleb128 -10
 29699 185a 00       		.byte	0
 29700 185b 21       		.uleb128 0x21
 29701 185c E1050000 		.4byte	.LASF284
 29702 1860 01       		.byte	0x1
 29703 1861 E20A     		.2byte	0xae2
 29704 1863 00000000 		.4byte	.LFB79
 29705 1867 88000000 		.4byte	.LFE79-.LFB79
 29706 186b 01       		.uleb128 0x1
 29707 186c 9C       		.byte	0x9c
 29708 186d 9F180000 		.4byte	0x189f
 29709 1871 24       		.uleb128 0x24
 29710 1872 BC050000 		.4byte	.LASF227
 29711 1876 01       		.byte	0x1
 29712 1877 E20A     		.2byte	0xae2
 29713 1879 15100000 		.4byte	0x1015
 29714 187d 02       		.uleb128 0x2
 29715 187e 91       		.byte	0x91
 29716 187f 6C       		.sleb128 -20
 29717 1880 24       		.uleb128 0x24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 640


 29718 1881 F30A0000 		.4byte	.LASF228
 29719 1885 01       		.byte	0x1
 29720 1886 E20A     		.2byte	0xae2
 29721 1888 A3000000 		.4byte	0xa3
 29722 188c 02       		.uleb128 0x2
 29723 188d 91       		.byte	0x91
 29724 188e 6A       		.sleb128 -22
 29725 188f 22       		.uleb128 0x22
 29726 1890 B4060000 		.4byte	.LASF242
 29727 1894 01       		.byte	0x1
 29728 1895 E40A     		.2byte	0xae4
 29729 1897 A3000000 		.4byte	0xa3
 29730 189b 02       		.uleb128 0x2
 29731 189c 91       		.byte	0x91
 29732 189d 76       		.sleb128 -10
 29733 189e 00       		.byte	0
 29734 189f 21       		.uleb128 0x21
 29735 18a0 7F0B0000 		.4byte	.LASF285
 29736 18a4 01       		.byte	0x1
 29737 18a5 FE0A     		.2byte	0xafe
 29738 18a7 00000000 		.4byte	.LFB80
 29739 18ab A0000000 		.4byte	.LFE80-.LFB80
 29740 18af 01       		.uleb128 0x1
 29741 18b0 9C       		.byte	0x9c
 29742 18b1 F2180000 		.4byte	0x18f2
 29743 18b5 24       		.uleb128 0x24
 29744 18b6 BC050000 		.4byte	.LASF227
 29745 18ba 01       		.byte	0x1
 29746 18bb FE0A     		.2byte	0xafe
 29747 18bd 15100000 		.4byte	0x1015
 29748 18c1 02       		.uleb128 0x2
 29749 18c2 91       		.byte	0x91
 29750 18c3 74       		.sleb128 -12
 29751 18c4 24       		.uleb128 0x24
 29752 18c5 F30A0000 		.4byte	.LASF228
 29753 18c9 01       		.byte	0x1
 29754 18ca FE0A     		.2byte	0xafe
 29755 18cc A3000000 		.4byte	0xa3
 29756 18d0 02       		.uleb128 0x2
 29757 18d1 91       		.byte	0x91
 29758 18d2 72       		.sleb128 -14
 29759 18d3 27       		.uleb128 0x27
 29760 18d4 696400   		.ascii	"id\000"
 29761 18d7 01       		.byte	0x1
 29762 18d8 FE0A     		.2byte	0xafe
 29763 18da 97000000 		.4byte	0x97
 29764 18de 02       		.uleb128 0x2
 29765 18df 91       		.byte	0x91
 29766 18e0 71       		.sleb128 -15
 29767 18e1 25       		.uleb128 0x25
 29768 18e2 6900     		.ascii	"i\000"
 29769 18e4 01       		.byte	0x1
 29770 18e5 000B     		.2byte	0xb00
 29771 18e7 A3000000 		.4byte	0xa3
 29772 18eb 05       		.uleb128 0x5
 29773 18ec 03       		.byte	0x3
 29774 18ed 00000000 		.4byte	i.11188
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 641


 29775 18f1 00       		.byte	0
 29776 18f2 28       		.uleb128 0x28
 29777 18f3 1B130000 		.4byte	.LASF291
 29778 18f7 01       		.byte	0x1
 29779 18f8 1C0B     		.2byte	0xb1c
 29780 18fa 97000000 		.4byte	0x97
 29781 18fe 00000000 		.4byte	.LFB81
 29782 1902 3E000000 		.4byte	.LFE81-.LFB81
 29783 1906 01       		.uleb128 0x1
 29784 1907 9C       		.byte	0x9c
 29785 1908 47190000 		.4byte	0x1947
 29786 190c 24       		.uleb128 0x24
 29787 190d C20A0000 		.4byte	.LASF286
 29788 1911 01       		.byte	0x1
 29789 1912 1C0B     		.2byte	0xb1c
 29790 1914 15100000 		.4byte	0x1015
 29791 1918 02       		.uleb128 0x2
 29792 1919 91       		.byte	0x91
 29793 191a 6C       		.sleb128 -20
 29794 191b 24       		.uleb128 0x24
 29795 191c 91050000 		.4byte	.LASF287
 29796 1920 01       		.byte	0x1
 29797 1921 1C0B     		.2byte	0xb1c
 29798 1923 97000000 		.4byte	0x97
 29799 1927 02       		.uleb128 0x2
 29800 1928 91       		.byte	0x91
 29801 1929 6B       		.sleb128 -21
 29802 192a 25       		.uleb128 0x25
 29803 192b 6900     		.ascii	"i\000"
 29804 192d 01       		.byte	0x1
 29805 192e 1E0B     		.2byte	0xb1e
 29806 1930 97000000 		.4byte	0x97
 29807 1934 02       		.uleb128 0x2
 29808 1935 91       		.byte	0x91
 29809 1936 77       		.sleb128 -9
 29810 1937 22       		.uleb128 0x22
 29811 1938 C50C0000 		.4byte	.LASF288
 29812 193c 01       		.byte	0x1
 29813 193d 1F0B     		.2byte	0xb1f
 29814 193f 97000000 		.4byte	0x97
 29815 1943 02       		.uleb128 0x2
 29816 1944 91       		.byte	0x91
 29817 1945 76       		.sleb128 -10
 29818 1946 00       		.byte	0
 29819 1947 21       		.uleb128 0x21
 29820 1948 010B0000 		.4byte	.LASF289
 29821 194c 01       		.byte	0x1
 29822 194d 2C0B     		.2byte	0xb2c
 29823 194f 00000000 		.4byte	.LFB82
 29824 1953 2E000000 		.4byte	.LFE82-.LFB82
 29825 1957 01       		.uleb128 0x1
 29826 1958 9C       		.byte	0x9c
 29827 1959 8B190000 		.4byte	0x198b
 29828 195d 24       		.uleb128 0x24
 29829 195e CA040000 		.4byte	.LASF290
 29830 1962 01       		.byte	0x1
 29831 1963 2C0B     		.2byte	0xb2c
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 642


 29832 1965 97000000 		.4byte	0x97
 29833 1969 02       		.uleb128 0x2
 29834 196a 91       		.byte	0x91
 29835 196b 6F       		.sleb128 -17
 29836 196c 22       		.uleb128 0x22
 29837 196d F30A0000 		.4byte	.LASF228
 29838 1971 01       		.byte	0x1
 29839 1972 2D0B     		.2byte	0xb2d
 29840 1974 73000000 		.4byte	0x73
 29841 1978 02       		.uleb128 0x2
 29842 1979 91       		.byte	0x91
 29843 197a 74       		.sleb128 -12
 29844 197b 22       		.uleb128 0x22
 29845 197c BC050000 		.4byte	.LASF227
 29846 1980 01       		.byte	0x1
 29847 1981 2E0B     		.2byte	0xb2e
 29848 1983 7A080000 		.4byte	0x87a
 29849 1987 02       		.uleb128 0x2
 29850 1988 91       		.byte	0x91
 29851 1989 70       		.sleb128 -16
 29852 198a 00       		.byte	0
 29853 198b 29       		.uleb128 0x29
 29854 198c FB030000 		.4byte	.LASF292
 29855 1990 01       		.byte	0x1
 29856 1991 3B0B     		.2byte	0xb3b
 29857 1993 97000000 		.4byte	0x97
 29858 1997 00000000 		.4byte	.LFB83
 29859 199b 98000000 		.4byte	.LFE83-.LFB83
 29860 199f 01       		.uleb128 0x1
 29861 19a0 9C       		.byte	0x9c
 29862 19a1 EF190000 		.4byte	0x19ef
 29863 19a5 24       		.uleb128 0x24
 29864 19a6 84050000 		.4byte	.LASF293
 29865 19aa 01       		.byte	0x1
 29866 19ab 3B0B     		.2byte	0xb3b
 29867 19ad 73000000 		.4byte	0x73
 29868 19b1 02       		.uleb128 0x2
 29869 19b2 91       		.byte	0x91
 29870 19b3 64       		.sleb128 -28
 29871 19b4 25       		.uleb128 0x25
 29872 19b5 6900     		.ascii	"i\000"
 29873 19b7 01       		.byte	0x1
 29874 19b8 3D0B     		.2byte	0xb3d
 29875 19ba 73000000 		.4byte	0x73
 29876 19be 02       		.uleb128 0x2
 29877 19bf 91       		.byte	0x91
 29878 19c0 74       		.sleb128 -12
 29879 19c1 22       		.uleb128 0x22
 29880 19c2 B1000000 		.4byte	.LASF294
 29881 19c6 01       		.byte	0x1
 29882 19c7 3E0B     		.2byte	0xb3e
 29883 19c9 97000000 		.4byte	0x97
 29884 19cd 02       		.uleb128 0x2
 29885 19ce 91       		.byte	0x91
 29886 19cf 6B       		.sleb128 -21
 29887 19d0 22       		.uleb128 0x22
 29888 19d1 FD050000 		.4byte	.LASF295
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 643


 29889 19d5 01       		.byte	0x1
 29890 19d6 3F0B     		.2byte	0xb3f
 29891 19d8 73000000 		.4byte	0x73
 29892 19dc 02       		.uleb128 0x2
 29893 19dd 91       		.byte	0x91
 29894 19de 6C       		.sleb128 -20
 29895 19df 22       		.uleb128 0x22
 29896 19e0 08050000 		.4byte	.LASF296
 29897 19e4 01       		.byte	0x1
 29898 19e5 400B     		.2byte	0xb40
 29899 19e7 97000000 		.4byte	0x97
 29900 19eb 02       		.uleb128 0x2
 29901 19ec 91       		.byte	0x91
 29902 19ed 73       		.sleb128 -13
 29903 19ee 00       		.byte	0
 29904 19ef 21       		.uleb128 0x21
 29905 19f0 580E0000 		.4byte	.LASF297
 29906 19f4 01       		.byte	0x1
 29907 19f5 650B     		.2byte	0xb65
 29908 19f7 00000000 		.4byte	.LFB84
 29909 19fb 80000000 		.4byte	.LFE84-.LFB84
 29910 19ff 01       		.uleb128 0x1
 29911 1a00 9C       		.byte	0x9c
 29912 1a01 131A0000 		.4byte	0x1a13
 29913 1a05 25       		.uleb128 0x25
 29914 1a06 6900     		.ascii	"i\000"
 29915 1a08 01       		.byte	0x1
 29916 1a09 670B     		.2byte	0xb67
 29917 1a0b A3000000 		.4byte	0xa3
 29918 1a0f 02       		.uleb128 0x2
 29919 1a10 91       		.byte	0x91
 29920 1a11 76       		.sleb128 -10
 29921 1a12 00       		.byte	0
 29922 1a13 29       		.uleb128 0x29
 29923 1a14 500D0000 		.4byte	.LASF298
 29924 1a18 01       		.byte	0x1
 29925 1a19 7E0B     		.2byte	0xb7e
 29926 1a1b 97000000 		.4byte	0x97
 29927 1a1f 00000000 		.4byte	.LFB85
 29928 1a23 5C000000 		.4byte	.LFE85-.LFB85
 29929 1a27 01       		.uleb128 0x1
 29930 1a28 9C       		.byte	0x9c
 29931 1a29 3B1A0000 		.4byte	0x1a3b
 29932 1a2d 25       		.uleb128 0x25
 29933 1a2e 6900     		.ascii	"i\000"
 29934 1a30 01       		.byte	0x1
 29935 1a31 7F0B     		.2byte	0xb7f
 29936 1a33 A3000000 		.4byte	0xa3
 29937 1a37 02       		.uleb128 0x2
 29938 1a38 91       		.byte	0x91
 29939 1a39 76       		.sleb128 -10
 29940 1a3a 00       		.byte	0
 29941 1a3b 29       		.uleb128 0x29
 29942 1a3c 03060000 		.4byte	.LASF299
 29943 1a40 01       		.byte	0x1
 29944 1a41 910B     		.2byte	0xb91
 29945 1a43 97000000 		.4byte	0x97
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 644


 29946 1a47 00000000 		.4byte	.LFB86
 29947 1a4b 10060000 		.4byte	.LFE86-.LFB86
 29948 1a4f 01       		.uleb128 0x1
 29949 1a50 9C       		.byte	0x9c
 29950 1a51 701A0000 		.4byte	0x1a70
 29951 1a55 25       		.uleb128 0x25
 29952 1a56 6900     		.ascii	"i\000"
 29953 1a58 01       		.byte	0x1
 29954 1a59 930B     		.2byte	0xb93
 29955 1a5b 97000000 		.4byte	0x97
 29956 1a5f 02       		.uleb128 0x2
 29957 1a60 91       		.byte	0x91
 29958 1a61 77       		.sleb128 -9
 29959 1a62 25       		.uleb128 0x25
 29960 1a63 6A00     		.ascii	"j\000"
 29961 1a65 01       		.byte	0x1
 29962 1a66 930B     		.2byte	0xb93
 29963 1a68 97000000 		.4byte	0x97
 29964 1a6c 02       		.uleb128 0x2
 29965 1a6d 91       		.byte	0x91
 29966 1a6e 76       		.sleb128 -10
 29967 1a6f 00       		.byte	0
 29968 1a70 2A       		.uleb128 0x2a
 29969 1a71 94080000 		.4byte	.LASF300
 29970 1a75 01       		.byte	0x1
 29971 1a76 2F0C     		.2byte	0xc2f
 29972 1a78 00000000 		.4byte	.LFB87
 29973 1a7c 38020000 		.4byte	.LFE87-.LFB87
 29974 1a80 01       		.uleb128 0x1
 29975 1a81 9C       		.byte	0x9c
 29976 1a82 AD1A0000 		.4byte	0x1aad
 29977 1a86 22       		.uleb128 0x22
 29978 1a87 460D0000 		.4byte	.LASF237
 29979 1a8b 01       		.byte	0x1
 29980 1a8c 310C     		.2byte	0xc31
 29981 1a8e 97000000 		.4byte	0x97
 29982 1a92 02       		.uleb128 0x2
 29983 1a93 91       		.byte	0x91
 29984 1a94 73       		.sleb128 -13
 29985 1a95 1E       		.uleb128 0x1e
 29986 1a96 FA000000 		.4byte	.LBB21
 29987 1a9a 6A000000 		.4byte	.LBE21-.LBB21
 29988 1a9e 25       		.uleb128 0x25
 29989 1a9f 6900     		.ascii	"i\000"
 29990 1aa1 01       		.byte	0x1
 29991 1aa2 420C     		.2byte	0xc42
 29992 1aa4 73000000 		.4byte	0x73
 29993 1aa8 02       		.uleb128 0x2
 29994 1aa9 91       		.byte	0x91
 29995 1aaa 74       		.sleb128 -12
 29996 1aab 00       		.byte	0
 29997 1aac 00       		.byte	0
 29998 1aad 2B       		.uleb128 0x2b
 29999 1aae E40A0000 		.4byte	.LASF301
 30000 1ab2 01       		.byte	0x1
 30001 1ab3 610C     		.2byte	0xc61
 30002 1ab5 00000000 		.4byte	.LFB88
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 645


 30003 1ab9 28000000 		.4byte	.LFE88-.LFB88
 30004 1abd 01       		.uleb128 0x1
 30005 1abe 9C       		.byte	0x9c
 30006 1abf 2B       		.uleb128 0x2b
 30007 1ac0 C4100000 		.4byte	.LASF302
 30008 1ac4 01       		.byte	0x1
 30009 1ac5 6D0C     		.2byte	0xc6d
 30010 1ac7 00000000 		.4byte	.LFB89
 30011 1acb 78000000 		.4byte	.LFE89-.LFB89
 30012 1acf 01       		.uleb128 0x1
 30013 1ad0 9C       		.byte	0x9c
 30014 1ad1 2B       		.uleb128 0x2b
 30015 1ad2 B4030000 		.4byte	.LASF303
 30016 1ad6 01       		.byte	0x1
 30017 1ad7 830C     		.2byte	0xc83
 30018 1ad9 00000000 		.4byte	.LFB90
 30019 1add B0000000 		.4byte	.LFE90-.LFB90
 30020 1ae1 01       		.uleb128 0x1
 30021 1ae2 9C       		.byte	0x9c
 30022 1ae3 26       		.uleb128 0x26
 30023 1ae4 31060000 		.4byte	.LASF305
 30024 1ae8 01       		.byte	0x1
 30025 1ae9 A40C     		.2byte	0xca4
 30026 1aeb 00000000 		.4byte	.LFB91
 30027 1aef B4000000 		.4byte	.LFE91-.LFB91
 30028 1af3 01       		.uleb128 0x1
 30029 1af4 9C       		.byte	0x9c
 30030 1af5 271B0000 		.4byte	0x1b27
 30031 1af9 22       		.uleb128 0x22
 30032 1afa B4060000 		.4byte	.LASF242
 30033 1afe 01       		.byte	0x1
 30034 1aff A60C     		.2byte	0xca6
 30035 1b01 97000000 		.4byte	0x97
 30036 1b05 02       		.uleb128 0x2
 30037 1b06 91       		.byte	0x91
 30038 1b07 6F       		.sleb128 -17
 30039 1b08 22       		.uleb128 0x22
 30040 1b09 7E110000 		.4byte	.LASF233
 30041 1b0d 01       		.byte	0x1
 30042 1b0e A70C     		.2byte	0xca7
 30043 1b10 C7000000 		.4byte	0xc7
 30044 1b14 02       		.uleb128 0x2
 30045 1b15 91       		.byte	0x91
 30046 1b16 6C       		.sleb128 -20
 30047 1b17 22       		.uleb128 0x22
 30048 1b18 BC050000 		.4byte	.LASF227
 30049 1b1c 01       		.byte	0x1
 30050 1b1d AA0C     		.2byte	0xcaa
 30051 1b1f 0B080000 		.4byte	0x80b
 30052 1b23 02       		.uleb128 0x2
 30053 1b24 91       		.byte	0x91
 30054 1b25 64       		.sleb128 -28
 30055 1b26 00       		.byte	0
 30056 1b27 26       		.uleb128 0x26
 30057 1b28 450E0000 		.4byte	.LASF306
 30058 1b2c 01       		.byte	0x1
 30059 1b2d BD0C     		.2byte	0xcbd
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 646


 30060 1b2f 00000000 		.4byte	.LFB92
 30061 1b33 B8000000 		.4byte	.LFE92-.LFB92
 30062 1b37 01       		.uleb128 0x1
 30063 1b38 9C       		.byte	0x9c
 30064 1b39 6B1B0000 		.4byte	0x1b6b
 30065 1b3d 22       		.uleb128 0x22
 30066 1b3e B4060000 		.4byte	.LASF242
 30067 1b42 01       		.byte	0x1
 30068 1b43 BF0C     		.2byte	0xcbf
 30069 1b45 97000000 		.4byte	0x97
 30070 1b49 02       		.uleb128 0x2
 30071 1b4a 91       		.byte	0x91
 30072 1b4b 6F       		.sleb128 -17
 30073 1b4c 22       		.uleb128 0x22
 30074 1b4d 7E110000 		.4byte	.LASF233
 30075 1b51 01       		.byte	0x1
 30076 1b52 C00C     		.2byte	0xcc0
 30077 1b54 C7000000 		.4byte	0xc7
 30078 1b58 02       		.uleb128 0x2
 30079 1b59 91       		.byte	0x91
 30080 1b5a 6C       		.sleb128 -20
 30081 1b5b 22       		.uleb128 0x22
 30082 1b5c BC050000 		.4byte	.LASF227
 30083 1b60 01       		.byte	0x1
 30084 1b61 C40C     		.2byte	0xcc4
 30085 1b63 0B080000 		.4byte	0x80b
 30086 1b67 02       		.uleb128 0x2
 30087 1b68 91       		.byte	0x91
 30088 1b69 64       		.sleb128 -28
 30089 1b6a 00       		.byte	0
 30090 1b6b 26       		.uleb128 0x26
 30091 1b6c D9010000 		.4byte	.LASF307
 30092 1b70 01       		.byte	0x1
 30093 1b71 D60C     		.2byte	0xcd6
 30094 1b73 00000000 		.4byte	.LFB93
 30095 1b77 B8000000 		.4byte	.LFE93-.LFB93
 30096 1b7b 01       		.uleb128 0x1
 30097 1b7c 9C       		.byte	0x9c
 30098 1b7d AF1B0000 		.4byte	0x1baf
 30099 1b81 22       		.uleb128 0x22
 30100 1b82 B4060000 		.4byte	.LASF242
 30101 1b86 01       		.byte	0x1
 30102 1b87 D80C     		.2byte	0xcd8
 30103 1b89 97000000 		.4byte	0x97
 30104 1b8d 02       		.uleb128 0x2
 30105 1b8e 91       		.byte	0x91
 30106 1b8f 6F       		.sleb128 -17
 30107 1b90 22       		.uleb128 0x22
 30108 1b91 7E110000 		.4byte	.LASF233
 30109 1b95 01       		.byte	0x1
 30110 1b96 D90C     		.2byte	0xcd9
 30111 1b98 C7000000 		.4byte	0xc7
 30112 1b9c 02       		.uleb128 0x2
 30113 1b9d 91       		.byte	0x91
 30114 1b9e 6C       		.sleb128 -20
 30115 1b9f 22       		.uleb128 0x22
 30116 1ba0 BC050000 		.4byte	.LASF227
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 647


 30117 1ba4 01       		.byte	0x1
 30118 1ba5 DD0C     		.2byte	0xcdd
 30119 1ba7 0B080000 		.4byte	0x80b
 30120 1bab 02       		.uleb128 0x2
 30121 1bac 91       		.byte	0x91
 30122 1bad 64       		.sleb128 -28
 30123 1bae 00       		.byte	0
 30124 1baf 26       		.uleb128 0x26
 30125 1bb0 95090000 		.4byte	.LASF308
 30126 1bb4 01       		.byte	0x1
 30127 1bb5 EF0C     		.2byte	0xcef
 30128 1bb7 00000000 		.4byte	.LFB94
 30129 1bbb 5C000000 		.4byte	.LFE94-.LFB94
 30130 1bbf 01       		.uleb128 0x1
 30131 1bc0 9C       		.byte	0x9c
 30132 1bc1 E41B0000 		.4byte	0x1be4
 30133 1bc5 22       		.uleb128 0x22
 30134 1bc6 7E110000 		.4byte	.LASF233
 30135 1bca 01       		.byte	0x1
 30136 1bcb F10C     		.2byte	0xcf1
 30137 1bcd C7000000 		.4byte	0xc7
 30138 1bd1 02       		.uleb128 0x2
 30139 1bd2 91       		.byte	0x91
 30140 1bd3 76       		.sleb128 -10
 30141 1bd4 22       		.uleb128 0x22
 30142 1bd5 BC050000 		.4byte	.LASF227
 30143 1bd9 01       		.byte	0x1
 30144 1bda F50C     		.2byte	0xcf5
 30145 1bdc 31090000 		.4byte	0x931
 30146 1be0 02       		.uleb128 0x2
 30147 1be1 91       		.byte	0x91
 30148 1be2 70       		.sleb128 -16
 30149 1be3 00       		.byte	0
 30150 1be4 2C       		.uleb128 0x2c
 30151 1be5 490B0000 		.4byte	.LASF309
 30152 1be9 01       		.byte	0x1
 30153 1bea 070D     		.2byte	0xd07
 30154 1bec 00000000 		.4byte	.LFB95
 30155 1bf0 44020000 		.4byte	.LFE95-.LFB95
 30156 1bf4 01       		.uleb128 0x1
 30157 1bf5 9C       		.byte	0x9c
 30158 1bf6 4E1C0000 		.4byte	0x1c4e
 30159 1bfa 22       		.uleb128 0x22
 30160 1bfb 7E110000 		.4byte	.LASF233
 30161 1bff 01       		.byte	0x1
 30162 1c00 0A0D     		.2byte	0xd0a
 30163 1c02 4E1C0000 		.4byte	0x1c4e
 30164 1c06 02       		.uleb128 0x2
 30165 1c07 91       		.byte	0x91
 30166 1c08 70       		.sleb128 -16
 30167 1c09 22       		.uleb128 0x22
 30168 1c0a 76060000 		.4byte	.LASF310
 30169 1c0e 01       		.byte	0x1
 30170 1c0f 0B0D     		.2byte	0xd0b
 30171 1c11 4E1C0000 		.4byte	0x1c4e
 30172 1c15 05       		.uleb128 0x5
 30173 1c16 03       		.byte	0x3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 648


 30174 1c17 04000000 		.4byte	last_aux_int16.11319
 30175 1c1b 2D       		.uleb128 0x2d
 30176 1c1c 2E000000 		.4byte	.LBB22
 30177 1c20 50000000 		.4byte	.LBE22-.LBB22
 30178 1c24 361C0000 		.4byte	0x1c36
 30179 1c28 25       		.uleb128 0x25
 30180 1c29 6900     		.ascii	"i\000"
 30181 1c2b 01       		.byte	0x1
 30182 1c2c 120D     		.2byte	0xd12
 30183 1c2e 97000000 		.4byte	0x97
 30184 1c32 02       		.uleb128 0x2
 30185 1c33 91       		.byte	0x91
 30186 1c34 77       		.sleb128 -9
 30187 1c35 00       		.byte	0
 30188 1c36 1E       		.uleb128 0x1e
 30189 1c37 88000000 		.4byte	.LBB23
 30190 1c3b 98010000 		.4byte	.LBE23-.LBB23
 30191 1c3f 25       		.uleb128 0x25
 30192 1c40 6900     		.ascii	"i\000"
 30193 1c42 01       		.byte	0x1
 30194 1c43 1C0D     		.2byte	0xd1c
 30195 1c45 97000000 		.4byte	0x97
 30196 1c49 02       		.uleb128 0x2
 30197 1c4a 91       		.byte	0x91
 30198 1c4b 76       		.sleb128 -10
 30199 1c4c 00       		.byte	0
 30200 1c4d 00       		.byte	0
 30201 1c4e 09       		.uleb128 0x9
 30202 1c4f C7000000 		.4byte	0xc7
 30203 1c53 5E1C0000 		.4byte	0x1c5e
 30204 1c57 0A       		.uleb128 0xa
 30205 1c58 18010000 		.4byte	0x118
 30206 1c5c 01       		.byte	0x1
 30207 1c5d 00       		.byte	0
 30208 1c5e 26       		.uleb128 0x26
 30209 1c5f EC130000 		.4byte	.LASF311
 30210 1c63 01       		.byte	0x1
 30211 1c64 370D     		.2byte	0xd37
 30212 1c66 00000000 		.4byte	.LFB96
 30213 1c6a BC000000 		.4byte	.LFE96-.LFB96
 30214 1c6e 01       		.uleb128 0x1
 30215 1c6f 9C       		.byte	0x9c
 30216 1c70 841C0000 		.4byte	0x1c84
 30217 1c74 25       		.uleb128 0x25
 30218 1c75 61757800 		.ascii	"aux\000"
 30219 1c79 01       		.byte	0x1
 30220 1c7a 3A0D     		.2byte	0xd3a
 30221 1c7c 97000000 		.4byte	0x97
 30222 1c80 02       		.uleb128 0x2
 30223 1c81 91       		.byte	0x91
 30224 1c82 77       		.sleb128 -9
 30225 1c83 00       		.byte	0
 30226 1c84 26       		.uleb128 0x26
 30227 1c85 A70B0000 		.4byte	.LASF312
 30228 1c89 01       		.byte	0x1
 30229 1c8a 5C0D     		.2byte	0xd5c
 30230 1c8c 00000000 		.4byte	.LFB97
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 649


 30231 1c90 5C000000 		.4byte	.LFE97-.LFB97
 30232 1c94 01       		.uleb128 0x1
 30233 1c95 9C       		.byte	0x9c
 30234 1c96 AA1C0000 		.4byte	0x1caa
 30235 1c9a 22       		.uleb128 0x22
 30236 1c9b BC050000 		.4byte	.LASF227
 30237 1c9f 01       		.byte	0x1
 30238 1ca0 5E0D     		.2byte	0xd5e
 30239 1ca2 BE050000 		.4byte	0x5be
 30240 1ca6 02       		.uleb128 0x2
 30241 1ca7 91       		.byte	0x91
 30242 1ca8 74       		.sleb128 -12
 30243 1ca9 00       		.byte	0
 30244 1caa 26       		.uleb128 0x26
 30245 1cab 850F0000 		.4byte	.LASF313
 30246 1caf 01       		.byte	0x1
 30247 1cb0 730D     		.2byte	0xd73
 30248 1cb2 00000000 		.4byte	.LFB98
 30249 1cb6 38010000 		.4byte	.LFE98-.LFB98
 30250 1cba 01       		.uleb128 0x1
 30251 1cbb 9C       		.byte	0x9c
 30252 1cbc EE1C0000 		.4byte	0x1cee
 30253 1cc0 22       		.uleb128 0x22
 30254 1cc1 B4060000 		.4byte	.LASF242
 30255 1cc5 01       		.byte	0x1
 30256 1cc6 750D     		.2byte	0xd75
 30257 1cc8 97000000 		.4byte	0x97
 30258 1ccc 02       		.uleb128 0x2
 30259 1ccd 91       		.byte	0x91
 30260 1cce 6F       		.sleb128 -17
 30261 1ccf 22       		.uleb128 0x22
 30262 1cd0 7E110000 		.4byte	.LASF233
 30263 1cd4 01       		.byte	0x1
 30264 1cd5 760D     		.2byte	0xd76
 30265 1cd7 C7000000 		.4byte	0xc7
 30266 1cdb 02       		.uleb128 0x2
 30267 1cdc 91       		.byte	0x91
 30268 1cdd 6C       		.sleb128 -20
 30269 1cde 22       		.uleb128 0x22
 30270 1cdf BC050000 		.4byte	.LASF227
 30271 1ce3 01       		.byte	0x1
 30272 1ce4 7A0D     		.2byte	0xd7a
 30273 1ce6 41090000 		.4byte	0x941
 30274 1cea 02       		.uleb128 0x2
 30275 1ceb 91       		.byte	0x91
 30276 1cec 60       		.sleb128 -32
 30277 1ced 00       		.byte	0
 30278 1cee 26       		.uleb128 0x26
 30279 1cef FF090000 		.4byte	.LASF314
 30280 1cf3 01       		.byte	0x1
 30281 1cf4 9A0D     		.2byte	0xd9a
 30282 1cf6 00000000 		.4byte	.LFB99
 30283 1cfa EC000000 		.4byte	.LFE99-.LFB99
 30284 1cfe 01       		.uleb128 0x1
 30285 1cff 9C       		.byte	0x9c
 30286 1d00 231D0000 		.4byte	0x1d23
 30287 1d04 22       		.uleb128 0x22
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 650


 30288 1d05 BC050000 		.4byte	.LASF227
 30289 1d09 01       		.byte	0x1
 30290 1d0a 9E0D     		.2byte	0xd9e
 30291 1d0c 31090000 		.4byte	0x931
 30292 1d10 02       		.uleb128 0x2
 30293 1d11 91       		.byte	0x91
 30294 1d12 68       		.sleb128 -24
 30295 1d13 22       		.uleb128 0x22
 30296 1d14 7E110000 		.4byte	.LASF233
 30297 1d18 01       		.byte	0x1
 30298 1d19 9F0D     		.2byte	0xd9f
 30299 1d1b C7000000 		.4byte	0xc7
 30300 1d1f 02       		.uleb128 0x2
 30301 1d20 91       		.byte	0x91
 30302 1d21 66       		.sleb128 -26
 30303 1d22 00       		.byte	0
 30304 1d23 26       		.uleb128 0x26
 30305 1d24 18070000 		.4byte	.LASF315
 30306 1d28 01       		.byte	0x1
 30307 1d29 C00D     		.2byte	0xdc0
 30308 1d2b 00000000 		.4byte	.LFB100
 30309 1d2f 64000000 		.4byte	.LFE100-.LFB100
 30310 1d33 01       		.uleb128 0x1
 30311 1d34 9C       		.byte	0x9c
 30312 1d35 581D0000 		.4byte	0x1d58
 30313 1d39 22       		.uleb128 0x22
 30314 1d3a BC050000 		.4byte	.LASF227
 30315 1d3e 01       		.byte	0x1
 30316 1d3f C40D     		.2byte	0xdc4
 30317 1d41 9E0A0000 		.4byte	0xa9e
 30318 1d45 02       		.uleb128 0x2
 30319 1d46 91       		.byte	0x91
 30320 1d47 74       		.sleb128 -12
 30321 1d48 22       		.uleb128 0x22
 30322 1d49 7E110000 		.4byte	.LASF233
 30323 1d4d 01       		.byte	0x1
 30324 1d4e C50D     		.2byte	0xdc5
 30325 1d50 C7000000 		.4byte	0xc7
 30326 1d54 02       		.uleb128 0x2
 30327 1d55 91       		.byte	0x91
 30328 1d56 72       		.sleb128 -14
 30329 1d57 00       		.byte	0
 30330 1d58 2E       		.uleb128 0x2e
 30331 1d59 02070000 		.4byte	.LASF316
 30332 1d5d 01       		.byte	0x1
 30333 1d5e DA0D     		.2byte	0xdda
 30334 1d60 C7000000 		.4byte	0xc7
 30335 1d64 00000000 		.4byte	.LFB101
 30336 1d68 A8000000 		.4byte	.LFE101-.LFB101
 30337 1d6c 01       		.uleb128 0x1
 30338 1d6d 9C       		.byte	0x9c
 30339 1d6e CD1D0000 		.4byte	0x1dcd
 30340 1d72 22       		.uleb128 0x22
 30341 1d73 BC050000 		.4byte	.LASF227
 30342 1d77 01       		.byte	0x1
 30343 1d78 DC0D     		.2byte	0xddc
 30344 1d7a CD1D0000 		.4byte	0x1dcd
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 651


 30345 1d7e 02       		.uleb128 0x2
 30346 1d7f 91       		.byte	0x91
 30347 1d80 5C       		.sleb128 -36
 30348 1d81 22       		.uleb128 0x22
 30349 1d82 F30A0000 		.4byte	.LASF228
 30350 1d86 01       		.byte	0x1
 30351 1d87 DD0D     		.2byte	0xddd
 30352 1d89 97000000 		.4byte	0x97
 30353 1d8d 02       		.uleb128 0x2
 30354 1d8e 91       		.byte	0x91
 30355 1d8f 74       		.sleb128 -12
 30356 1d90 22       		.uleb128 0x22
 30357 1d91 300F0000 		.4byte	.LASF317
 30358 1d95 01       		.byte	0x1
 30359 1d96 DE0D     		.2byte	0xdde
 30360 1d98 C7000000 		.4byte	0xc7
 30361 1d9c 02       		.uleb128 0x2
 30362 1d9d 91       		.byte	0x91
 30363 1d9e 76       		.sleb128 -10
 30364 1d9f 22       		.uleb128 0x22
 30365 1da0 9E020000 		.4byte	.LASF318
 30366 1da4 01       		.byte	0x1
 30367 1da5 DF0D     		.2byte	0xddf
 30368 1da7 AF000000 		.4byte	0xaf
 30369 1dab 02       		.uleb128 0x2
 30370 1dac 91       		.byte	0x91
 30371 1dad 70       		.sleb128 -16
 30372 1dae 22       		.uleb128 0x22
 30373 1daf E3120000 		.4byte	.LASF319
 30374 1db3 01       		.byte	0x1
 30375 1db4 DF0D     		.2byte	0xddf
 30376 1db6 AF000000 		.4byte	0xaf
 30377 1dba 02       		.uleb128 0x2
 30378 1dbb 91       		.byte	0x91
 30379 1dbc 6C       		.sleb128 -20
 30380 1dbd 22       		.uleb128 0x22
 30381 1dbe 26040000 		.4byte	.LASF320
 30382 1dc2 01       		.byte	0x1
 30383 1dc3 E00D     		.2byte	0xde0
 30384 1dc5 97000000 		.4byte	0x97
 30385 1dc9 02       		.uleb128 0x2
 30386 1dca 91       		.byte	0x91
 30387 1dcb 75       		.sleb128 -11
 30388 1dcc 00       		.byte	0
 30389 1dcd 09       		.uleb128 0x9
 30390 1dce 97000000 		.4byte	0x97
 30391 1dd2 DD1D0000 		.4byte	0x1ddd
 30392 1dd6 0A       		.uleb128 0xa
 30393 1dd7 18010000 		.4byte	0x118
 30394 1ddb 0F       		.byte	0xf
 30395 1ddc 00       		.byte	0
 30396 1ddd 2F       		.uleb128 0x2f
 30397 1dde C4000000 		.4byte	.LASF346
 30398 1de2 01       		.byte	0x1
 30399 1de3 FD0D     		.2byte	0xdfd
 30400 1de5 00000000 		.4byte	.LFB102
 30401 1de9 34000000 		.4byte	.LFE102-.LFB102
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 652


 30402 1ded 01       		.uleb128 0x1
 30403 1dee 9C       		.byte	0x9c
 30404 1def 26       		.uleb128 0x26
 30405 1df0 87030000 		.4byte	.LASF321
 30406 1df4 01       		.byte	0x1
 30407 1df5 0B0E     		.2byte	0xe0b
 30408 1df7 00000000 		.4byte	.LFB103
 30409 1dfb 20000000 		.4byte	.LFE103-.LFB103
 30410 1dff 01       		.uleb128 0x1
 30411 1e00 9C       		.byte	0x9c
 30412 1e01 151E0000 		.4byte	0x1e15
 30413 1e05 22       		.uleb128 0x22
 30414 1e06 BC050000 		.4byte	.LASF227
 30415 1e0a 01       		.byte	0x1
 30416 1e0b 0D0E     		.2byte	0xe0d
 30417 1e0d 7A080000 		.4byte	0x87a
 30418 1e11 02       		.uleb128 0x2
 30419 1e12 91       		.byte	0x91
 30420 1e13 74       		.sleb128 -12
 30421 1e14 00       		.byte	0
 30422 1e15 26       		.uleb128 0x26
 30423 1e16 3C010000 		.4byte	.LASF322
 30424 1e1a 01       		.byte	0x1
 30425 1e1b 190E     		.2byte	0xe19
 30426 1e1d 00000000 		.4byte	.LFB104
 30427 1e21 6C000000 		.4byte	.LFE104-.LFB104
 30428 1e25 01       		.uleb128 0x1
 30429 1e26 9C       		.byte	0x9c
 30430 1e27 4A1E0000 		.4byte	0x1e4a
 30431 1e2b 22       		.uleb128 0x22
 30432 1e2c BC050000 		.4byte	.LASF227
 30433 1e30 01       		.byte	0x1
 30434 1e31 1D0E     		.2byte	0xe1d
 30435 1e33 31090000 		.4byte	0x931
 30436 1e37 02       		.uleb128 0x2
 30437 1e38 91       		.byte	0x91
 30438 1e39 70       		.sleb128 -16
 30439 1e3a 22       		.uleb128 0x22
 30440 1e3b 7E110000 		.4byte	.LASF233
 30441 1e3f 01       		.byte	0x1
 30442 1e40 1E0E     		.2byte	0xe1e
 30443 1e42 C7000000 		.4byte	0xc7
 30444 1e46 02       		.uleb128 0x2
 30445 1e47 91       		.byte	0x91
 30446 1e48 6E       		.sleb128 -18
 30447 1e49 00       		.byte	0
 30448 1e4a 26       		.uleb128 0x26
 30449 1e4b 4E100000 		.4byte	.LASF323
 30450 1e4f 01       		.byte	0x1
 30451 1e50 2F0E     		.2byte	0xe2f
 30452 1e52 00000000 		.4byte	.LFB105
 30453 1e56 BC010000 		.4byte	.LFE105-.LFB105
 30454 1e5a 01       		.uleb128 0x1
 30455 1e5b 9C       		.byte	0x9c
 30456 1e5c AC1E0000 		.4byte	0x1eac
 30457 1e60 22       		.uleb128 0x22
 30458 1e61 650B0000 		.4byte	.LASF324
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 653


 30459 1e65 01       		.byte	0x1
 30460 1e66 320E     		.2byte	0xe32
 30461 1e68 AF000000 		.4byte	0xaf
 30462 1e6c 02       		.uleb128 0x2
 30463 1e6d 91       		.byte	0x91
 30464 1e6e 70       		.sleb128 -16
 30465 1e6f 22       		.uleb128 0x22
 30466 1e70 B20E0000 		.4byte	.LASF325
 30467 1e74 01       		.byte	0x1
 30468 1e75 330E     		.2byte	0xe33
 30469 1e77 EB000000 		.4byte	0xeb
 30470 1e7b 02       		.uleb128 0x2
 30471 1e7c 91       		.byte	0x91
 30472 1e7d 6C       		.sleb128 -20
 30473 1e7e 22       		.uleb128 0x22
 30474 1e7f F30A0000 		.4byte	.LASF228
 30475 1e83 01       		.byte	0x1
 30476 1e84 340E     		.2byte	0xe34
 30477 1e86 97000000 		.4byte	0x97
 30478 1e8a 02       		.uleb128 0x2
 30479 1e8b 91       		.byte	0x91
 30480 1e8c 77       		.sleb128 -9
 30481 1e8d 22       		.uleb128 0x22
 30482 1e8e BC050000 		.4byte	.LASF227
 30483 1e92 01       		.byte	0x1
 30484 1e93 350E     		.2byte	0xe35
 30485 1e95 7A080000 		.4byte	0x87a
 30486 1e99 02       		.uleb128 0x2
 30487 1e9a 91       		.byte	0x91
 30488 1e9b 68       		.sleb128 -24
 30489 1e9c 22       		.uleb128 0x22
 30490 1e9d 4C0F0000 		.4byte	.LASF283
 30491 1ea1 01       		.byte	0x1
 30492 1ea2 360E     		.2byte	0xe36
 30493 1ea4 97000000 		.4byte	0x97
 30494 1ea8 02       		.uleb128 0x2
 30495 1ea9 91       		.byte	0x91
 30496 1eaa 6B       		.sleb128 -21
 30497 1eab 00       		.byte	0
 30498 1eac 26       		.uleb128 0x26
 30499 1ead EF010000 		.4byte	.LASF326
 30500 1eb1 01       		.byte	0x1
 30501 1eb2 700E     		.2byte	0xe70
 30502 1eb4 00000000 		.4byte	.LFB106
 30503 1eb8 60000000 		.4byte	.LFE106-.LFB106
 30504 1ebc 01       		.uleb128 0x1
 30505 1ebd 9C       		.byte	0x9c
 30506 1ebe E11E0000 		.4byte	0x1ee1
 30507 1ec2 22       		.uleb128 0x22
 30508 1ec3 BC050000 		.4byte	.LASF227
 30509 1ec7 01       		.byte	0x1
 30510 1ec8 720E     		.2byte	0xe72
 30511 1eca 31090000 		.4byte	0x931
 30512 1ece 02       		.uleb128 0x2
 30513 1ecf 91       		.byte	0x91
 30514 1ed0 70       		.sleb128 -16
 30515 1ed1 22       		.uleb128 0x22
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 654


 30516 1ed2 7E110000 		.4byte	.LASF233
 30517 1ed6 01       		.byte	0x1
 30518 1ed7 730E     		.2byte	0xe73
 30519 1ed9 C7000000 		.4byte	0xc7
 30520 1edd 02       		.uleb128 0x2
 30521 1ede 91       		.byte	0x91
 30522 1edf 6E       		.sleb128 -18
 30523 1ee0 00       		.byte	0
 30524 1ee1 26       		.uleb128 0x26
 30525 1ee2 78010000 		.4byte	.LASF327
 30526 1ee6 01       		.byte	0x1
 30527 1ee7 860E     		.2byte	0xe86
 30528 1ee9 00000000 		.4byte	.LFB107
 30529 1eed 98050000 		.4byte	.LFE107-.LFB107
 30530 1ef1 01       		.uleb128 0x1
 30531 1ef2 9C       		.byte	0x9c
 30532 1ef3 6E1F0000 		.4byte	0x1f6e
 30533 1ef7 22       		.uleb128 0x22
 30534 1ef8 27130000 		.4byte	.LASF328
 30535 1efc 01       		.byte	0x1
 30536 1efd 890E     		.2byte	0xe89
 30537 1eff 97000000 		.4byte	0x97
 30538 1f03 02       		.uleb128 0x2
 30539 1f04 91       		.byte	0x91
 30540 1f05 6F       		.sleb128 -17
 30541 1f06 25       		.uleb128 0x25
 30542 1f07 6300     		.ascii	"c\000"
 30543 1f09 01       		.byte	0x1
 30544 1f0a 8A0E     		.2byte	0xe8a
 30545 1f0c A3000000 		.4byte	0xa3
 30546 1f10 02       		.uleb128 0x2
 30547 1f11 91       		.byte	0x91
 30548 1f12 6C       		.sleb128 -20
 30549 1f13 25       		.uleb128 0x25
 30550 1f14 6B00     		.ascii	"k\000"
 30551 1f16 01       		.byte	0x1
 30552 1f17 8B0E     		.2byte	0xe8b
 30553 1f19 97000000 		.4byte	0x97
 30554 1f1d 02       		.uleb128 0x2
 30555 1f1e 91       		.byte	0x91
 30556 1f1f 6B       		.sleb128 -21
 30557 1f20 22       		.uleb128 0x22
 30558 1f21 26000000 		.4byte	.LASF329
 30559 1f25 01       		.byte	0x1
 30560 1f26 8C0E     		.2byte	0xe8c
 30561 1f28 A3000000 		.4byte	0xa3
 30562 1f2c 02       		.uleb128 0x2
 30563 1f2d 91       		.byte	0x91
 30564 1f2e 68       		.sleb128 -24
 30565 1f2f 22       		.uleb128 0x22
 30566 1f30 7E110000 		.4byte	.LASF233
 30567 1f34 01       		.byte	0x1
 30568 1f35 8D0E     		.2byte	0xe8d
 30569 1f37 C7000000 		.4byte	0xc7
 30570 1f3b 02       		.uleb128 0x2
 30571 1f3c 91       		.byte	0x91
 30572 1f3d 66       		.sleb128 -26
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 655


 30573 1f3e 22       		.uleb128 0x22
 30574 1f3f AE120000 		.4byte	.LASF232
 30575 1f43 01       		.byte	0x1
 30576 1f44 8E0E     		.2byte	0xe8e
 30577 1f46 EB000000 		.4byte	0xeb
 30578 1f4a 02       		.uleb128 0x2
 30579 1f4b 91       		.byte	0x91
 30580 1f4c 60       		.sleb128 -32
 30581 1f4d 22       		.uleb128 0x22
 30582 1f4e BC050000 		.4byte	.LASF227
 30583 1f52 01       		.byte	0x1
 30584 1f53 910E     		.2byte	0xe91
 30585 1f55 6E1F0000 		.4byte	0x1f6e
 30586 1f59 03       		.uleb128 0x3
 30587 1f5a 91       		.byte	0x91
 30588 1f5b 807D     		.sleb128 -384
 30589 1f5d 22       		.uleb128 0x22
 30590 1f5e C8080000 		.4byte	.LASF330
 30591 1f62 01       		.byte	0x1
 30592 1f63 920E     		.2byte	0xe92
 30593 1f65 7F1F0000 		.4byte	0x1f7f
 30594 1f69 03       		.uleb128 0x3
 30595 1f6a 91       		.byte	0x91
 30596 1f6b E07C     		.sleb128 -416
 30597 1f6d 00       		.byte	0
 30598 1f6e 09       		.uleb128 0x9
 30599 1f6f 97000000 		.4byte	0x97
 30600 1f73 7F1F0000 		.4byte	0x1f7f
 30601 1f77 23       		.uleb128 0x23
 30602 1f78 18010000 		.4byte	0x118
 30603 1f7c 5D01     		.2byte	0x15d
 30604 1f7e 00       		.byte	0
 30605 1f7f 09       		.uleb128 0x9
 30606 1f80 97000000 		.4byte	0x97
 30607 1f84 8F1F0000 		.4byte	0x1f8f
 30608 1f88 0A       		.uleb128 0xa
 30609 1f89 18010000 		.4byte	0x118
 30610 1f8d 1F       		.byte	0x1f
 30611 1f8e 00       		.byte	0
 30612 1f8f 26       		.uleb128 0x26
 30613 1f90 89120000 		.4byte	.LASF331
 30614 1f94 01       		.byte	0x1
 30615 1f95 F50E     		.2byte	0xef5
 30616 1f97 00000000 		.4byte	.LFB108
 30617 1f9b 8C000000 		.4byte	.LFE108-.LFB108
 30618 1f9f 01       		.uleb128 0x1
 30619 1fa0 9C       		.byte	0x9c
 30620 1fa1 CF1F0000 		.4byte	0x1fcf
 30621 1fa5 22       		.uleb128 0x22
 30622 1fa6 BC050000 		.4byte	.LASF227
 30623 1faa 01       		.byte	0x1
 30624 1fab F80E     		.2byte	0xef8
 30625 1fad 4C0A0000 		.4byte	0xa4c
 30626 1fb1 02       		.uleb128 0x2
 30627 1fb2 91       		.byte	0x91
 30628 1fb3 60       		.sleb128 -32
 30629 1fb4 25       		.uleb128 0x25
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 656


 30630 1fb5 6900     		.ascii	"i\000"
 30631 1fb7 01       		.byte	0x1
 30632 1fb8 F90E     		.2byte	0xef9
 30633 1fba 97000000 		.4byte	0x97
 30634 1fbe 02       		.uleb128 0x2
 30635 1fbf 91       		.byte	0x91
 30636 1fc0 6F       		.sleb128 -17
 30637 1fc1 25       		.uleb128 0x25
 30638 1fc2 6A00     		.ascii	"j\000"
 30639 1fc4 01       		.byte	0x1
 30640 1fc5 F90E     		.2byte	0xef9
 30641 1fc7 97000000 		.4byte	0x97
 30642 1fcb 02       		.uleb128 0x2
 30643 1fcc 91       		.byte	0x91
 30644 1fcd 6E       		.sleb128 -18
 30645 1fce 00       		.byte	0
 30646 1fcf 26       		.uleb128 0x26
 30647 1fd0 88100000 		.4byte	.LASF332
 30648 1fd4 01       		.byte	0x1
 30649 1fd5 0E0F     		.2byte	0xf0e
 30650 1fd7 00000000 		.4byte	.LFB109
 30651 1fdb EC000000 		.4byte	.LFE109-.LFB109
 30652 1fdf 01       		.uleb128 0x1
 30653 1fe0 9C       		.byte	0x9c
 30654 1fe1 2D200000 		.4byte	0x202d
 30655 1fe5 22       		.uleb128 0x22
 30656 1fe6 BC050000 		.4byte	.LASF227
 30657 1fea 01       		.byte	0x1
 30658 1feb 110F     		.2byte	0xf11
 30659 1fed 2D200000 		.4byte	0x202d
 30660 1ff1 02       		.uleb128 0x2
 30661 1ff2 91       		.byte	0x91
 30662 1ff3 54       		.sleb128 -44
 30663 1ff4 25       		.uleb128 0x25
 30664 1ff5 6900     		.ascii	"i\000"
 30665 1ff7 01       		.byte	0x1
 30666 1ff8 120F     		.2byte	0xf12
 30667 1ffa 97000000 		.4byte	0x97
 30668 1ffe 02       		.uleb128 0x2
 30669 1fff 91       		.byte	0x91
 30670 2000 6F       		.sleb128 -17
 30671 2001 25       		.uleb128 0x25
 30672 2002 6A00     		.ascii	"j\000"
 30673 2004 01       		.byte	0x1
 30674 2005 120F     		.2byte	0xf12
 30675 2007 97000000 		.4byte	0x97
 30676 200b 02       		.uleb128 0x2
 30677 200c 91       		.byte	0x91
 30678 200d 6E       		.sleb128 -18
 30679 200e 25       		.uleb128 0x25
 30680 200f 69647800 		.ascii	"idx\000"
 30681 2013 01       		.byte	0x1
 30682 2014 120F     		.2byte	0xf12
 30683 2016 97000000 		.4byte	0x97
 30684 201a 02       		.uleb128 0x2
 30685 201b 91       		.byte	0x91
 30686 201c 6D       		.sleb128 -19
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 657


 30687 201d 22       		.uleb128 0x22
 30688 201e 2B0C0000 		.4byte	.LASF234
 30689 2022 01       		.byte	0x1
 30690 2023 130F     		.2byte	0xf13
 30691 2025 A3000000 		.4byte	0xa3
 30692 2029 02       		.uleb128 0x2
 30693 202a 91       		.byte	0x91
 30694 202b 52       		.sleb128 -46
 30695 202c 00       		.byte	0
 30696 202d 09       		.uleb128 0x9
 30697 202e 97000000 		.4byte	0x97
 30698 2032 3D200000 		.4byte	0x203d
 30699 2036 0A       		.uleb128 0xa
 30700 2037 18010000 		.4byte	0x118
 30701 203b 15       		.byte	0x15
 30702 203c 00       		.byte	0
 30703 203d 26       		.uleb128 0x26
 30704 203e 3F030000 		.4byte	.LASF333
 30705 2042 01       		.byte	0x1
 30706 2043 2C0F     		.2byte	0xf2c
 30707 2045 00000000 		.4byte	.LFB110
 30708 2049 5C000000 		.4byte	.LFE110-.LFB110
 30709 204d 01       		.uleb128 0x1
 30710 204e 9C       		.byte	0x9c
 30711 204f 70200000 		.4byte	0x2070
 30712 2053 22       		.uleb128 0x22
 30713 2054 BC050000 		.4byte	.LASF227
 30714 2058 01       		.byte	0x1
 30715 2059 2F0F     		.2byte	0xf2f
 30716 205b E50B0000 		.4byte	0xbe5
 30717 205f 02       		.uleb128 0x2
 30718 2060 91       		.byte	0x91
 30719 2061 68       		.sleb128 -24
 30720 2062 25       		.uleb128 0x25
 30721 2063 6900     		.ascii	"i\000"
 30722 2065 01       		.byte	0x1
 30723 2066 300F     		.2byte	0xf30
 30724 2068 97000000 		.4byte	0x97
 30725 206c 02       		.uleb128 0x2
 30726 206d 91       		.byte	0x91
 30727 206e 77       		.sleb128 -9
 30728 206f 00       		.byte	0
 30729 2070 26       		.uleb128 0x26
 30730 2071 6C030000 		.4byte	.LASF334
 30731 2075 01       		.byte	0x1
 30732 2076 430F     		.2byte	0xf43
 30733 2078 00000000 		.4byte	.LFB111
 30734 207c C0000000 		.4byte	.LFE111-.LFB111
 30735 2080 01       		.uleb128 0x1
 30736 2081 9C       		.byte	0x9c
 30737 2082 C1200000 		.4byte	0x20c1
 30738 2086 22       		.uleb128 0x22
 30739 2087 BC050000 		.4byte	.LASF227
 30740 208b 01       		.byte	0x1
 30741 208c 460F     		.2byte	0xf46
 30742 208e C1200000 		.4byte	0x20c1
 30743 2092 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 658


 30744 2093 91       		.byte	0x91
 30745 2094 54       		.sleb128 -44
 30746 2095 25       		.uleb128 0x25
 30747 2096 6900     		.ascii	"i\000"
 30748 2098 01       		.byte	0x1
 30749 2099 470F     		.2byte	0xf47
 30750 209b 97000000 		.4byte	0x97
 30751 209f 02       		.uleb128 0x2
 30752 20a0 91       		.byte	0x91
 30753 20a1 6F       		.sleb128 -17
 30754 20a2 25       		.uleb128 0x25
 30755 20a3 69647800 		.ascii	"idx\000"
 30756 20a7 01       		.byte	0x1
 30757 20a8 470F     		.2byte	0xf47
 30758 20aa 97000000 		.4byte	0x97
 30759 20ae 02       		.uleb128 0x2
 30760 20af 91       		.byte	0x91
 30761 20b0 6E       		.sleb128 -18
 30762 20b1 22       		.uleb128 0x22
 30763 20b2 7E110000 		.4byte	.LASF233
 30764 20b6 01       		.byte	0x1
 30765 20b7 480F     		.2byte	0xf48
 30766 20b9 C7000000 		.4byte	0xc7
 30767 20bd 02       		.uleb128 0x2
 30768 20be 91       		.byte	0x91
 30769 20bf 52       		.sleb128 -46
 30770 20c0 00       		.byte	0
 30771 20c1 09       		.uleb128 0x9
 30772 20c2 97000000 		.4byte	0x97
 30773 20c6 D1200000 		.4byte	0x20d1
 30774 20ca 0A       		.uleb128 0xa
 30775 20cb 18010000 		.4byte	0x118
 30776 20cf 19       		.byte	0x19
 30777 20d0 00       		.byte	0
 30778 20d1 2A       		.uleb128 0x2a
 30779 20d2 D5000000 		.4byte	.LASF335
 30780 20d6 01       		.byte	0x1
 30781 20d7 630F     		.2byte	0xf63
 30782 20d9 00000000 		.4byte	.LFB112
 30783 20dd 12000000 		.4byte	.LFE112-.LFB112
 30784 20e1 01       		.uleb128 0x1
 30785 20e2 9C       		.byte	0x9c
 30786 20e3 F7200000 		.4byte	0x20f7
 30787 20e7 24       		.uleb128 0x24
 30788 20e8 5F060000 		.4byte	.LASF336
 30789 20ec 01       		.byte	0x1
 30790 20ed 630F     		.2byte	0xf63
 30791 20ef 73000000 		.4byte	0x73
 30792 20f3 02       		.uleb128 0x2
 30793 20f4 91       		.byte	0x91
 30794 20f5 74       		.sleb128 -12
 30795 20f6 00       		.byte	0
 30796 20f7 30       		.uleb128 0x30
 30797 20f8 B80B0000 		.4byte	.LASF337
 30798 20fc 01       		.byte	0x1
 30799 20fd B10F     		.2byte	0xfb1
 30800 20ff 97000000 		.4byte	0x97
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 659


 30801 2103 00000000 		.4byte	.LFB113
 30802 2107 64010000 		.4byte	.LFE113-.LFB113
 30803 210b 01       		.uleb128 0x1
 30804 210c 9C       		.byte	0x9c
 30805 210d 72210000 		.4byte	0x2172
 30806 2111 22       		.uleb128 0x22
 30807 2112 CF0D0000 		.4byte	.LASF338
 30808 2116 01       		.byte	0x1
 30809 2117 B30F     		.2byte	0xfb3
 30810 2119 97000000 		.4byte	0x97
 30811 211d 05       		.uleb128 0x5
 30812 211e 03       		.byte	0x3
 30813 211f 08000000 		.4byte	fsm_state.11457
 30814 2123 25       		.uleb128 0x25
 30815 2124 636E7400 		.ascii	"cnt\000"
 30816 2128 01       		.byte	0x1
 30817 2129 B40F     		.2byte	0xfb4
 30818 212b D3000000 		.4byte	0xd3
 30819 212f 05       		.uleb128 0x5
 30820 2130 03       		.byte	0x3
 30821 2131 0C000000 		.4byte	cnt.11458
 30822 2135 22       		.uleb128 0x22
 30823 2136 F1030000 		.4byte	.LASF339
 30824 213a 01       		.byte	0x1
 30825 213b B50F     		.2byte	0xfb5
 30826 213d D3000000 		.4byte	0xd3
 30827 2141 02       		.uleb128 0x2
 30828 2142 91       		.byte	0x91
 30829 2143 74       		.sleb128 -12
 30830 2144 22       		.uleb128 0x22
 30831 2145 DA0A0000 		.4byte	.LASF340
 30832 2149 01       		.byte	0x1
 30833 214a B50F     		.2byte	0xfb5
 30834 214c D3000000 		.4byte	0xd3
 30835 2150 02       		.uleb128 0x2
 30836 2151 91       		.byte	0x91
 30837 2152 70       		.sleb128 -16
 30838 2153 22       		.uleb128 0x22
 30839 2154 71000000 		.4byte	.LASF341
 30840 2158 01       		.byte	0x1
 30841 2159 B60F     		.2byte	0xfb6
 30842 215b D3000000 		.4byte	0xd3
 30843 215f 02       		.uleb128 0x2
 30844 2160 91       		.byte	0x91
 30845 2161 6C       		.sleb128 -20
 30846 2162 22       		.uleb128 0x22
 30847 2163 7D000000 		.4byte	.LASF342
 30848 2167 01       		.byte	0x1
 30849 2168 B60F     		.2byte	0xfb6
 30850 216a D3000000 		.4byte	0xd3
 30851 216e 02       		.uleb128 0x2
 30852 216f 91       		.byte	0x91
 30853 2170 68       		.sleb128 -24
 30854 2171 00       		.byte	0
 30855 2172 21       		.uleb128 0x21
 30856 2173 50070000 		.4byte	.LASF343
 30857 2177 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 660


 30858 2178 0310     		.2byte	0x1003
 30859 217a 00000000 		.4byte	.LFB114
 30860 217e 18010000 		.4byte	.LFE114-.LFB114
 30861 2182 01       		.uleb128 0x1
 30862 2183 9C       		.byte	0x9c
 30863 2184 A7210000 		.4byte	0x21a7
 30864 2188 24       		.uleb128 0x24
 30865 2189 5F060000 		.4byte	.LASF336
 30866 218d 01       		.byte	0x1
 30867 218e 0310     		.2byte	0x1003
 30868 2190 73000000 		.4byte	0x73
 30869 2194 02       		.uleb128 0x2
 30870 2195 91       		.byte	0x91
 30871 2196 6C       		.sleb128 -20
 30872 2197 22       		.uleb128 0x22
 30873 2198 CF0D0000 		.4byte	.LASF338
 30874 219c 01       		.byte	0x1
 30875 219d 0710     		.2byte	0x1007
 30876 219f 97000000 		.4byte	0x97
 30877 21a3 02       		.uleb128 0x2
 30878 21a4 91       		.byte	0x91
 30879 21a5 77       		.sleb128 -9
 30880 21a6 00       		.byte	0
 30881 21a7 21       		.uleb128 0x21
 30882 21a8 150D0000 		.4byte	.LASF344
 30883 21ac 01       		.byte	0x1
 30884 21ad 4F10     		.2byte	0x104f
 30885 21af 00000000 		.4byte	.LFB115
 30886 21b3 74010000 		.4byte	.LFE115-.LFB115
 30887 21b7 01       		.uleb128 0x1
 30888 21b8 9C       		.byte	0x9c
 30889 21b9 09220000 		.4byte	0x2209
 30890 21bd 24       		.uleb128 0x24
 30891 21be D7020000 		.4byte	.LASF345
 30892 21c2 01       		.byte	0x1
 30893 21c3 4F10     		.2byte	0x104f
 30894 21c5 97000000 		.4byte	0x97
 30895 21c9 02       		.uleb128 0x2
 30896 21ca 91       		.byte	0x91
 30897 21cb 5F       		.sleb128 -33
 30898 21cc 24       		.uleb128 0x24
 30899 21cd 600A0000 		.4byte	.LASF184
 30900 21d1 01       		.byte	0x1
 30901 21d2 4F10     		.2byte	0x104f
 30902 21d4 97000000 		.4byte	0x97
 30903 21d8 02       		.uleb128 0x2
 30904 21d9 91       		.byte	0x91
 30905 21da 5E       		.sleb128 -34
 30906 21db 22       		.uleb128 0x22
 30907 21dc BC050000 		.4byte	.LASF227
 30908 21e0 01       		.byte	0x1
 30909 21e1 5210     		.2byte	0x1052
 30910 21e3 31090000 		.4byte	0x931
 30911 21e7 02       		.uleb128 0x2
 30912 21e8 91       		.byte	0x91
 30913 21e9 68       		.sleb128 -24
 30914 21ea 22       		.uleb128 0x22
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 661


 30915 21eb F30A0000 		.4byte	.LASF228
 30916 21ef 01       		.byte	0x1
 30917 21f0 5310     		.2byte	0x1053
 30918 21f2 97000000 		.4byte	0x97
 30919 21f6 02       		.uleb128 0x2
 30920 21f7 91       		.byte	0x91
 30921 21f8 6F       		.sleb128 -17
 30922 21f9 22       		.uleb128 0x22
 30923 21fa 7E110000 		.4byte	.LASF233
 30924 21fe 01       		.byte	0x1
 30925 21ff 5410     		.2byte	0x1054
 30926 2201 C7000000 		.4byte	0xc7
 30927 2205 02       		.uleb128 0x2
 30928 2206 91       		.byte	0x91
 30929 2207 66       		.sleb128 -26
 30930 2208 00       		.byte	0
 30931 2209 31       		.uleb128 0x31
 30932 220a 89000000 		.4byte	.LASF347
 30933 220e 01       		.byte	0x1
 30934 220f 7910     		.2byte	0x1079
 30935 2211 00000000 		.4byte	.LFB116
 30936 2215 24000000 		.4byte	.LFE116-.LFB116
 30937 2219 01       		.uleb128 0x1
 30938 221a 9C       		.byte	0x9c
 30939 221b 26       		.uleb128 0x26
 30940 221c EB050000 		.4byte	.LASF348
 30941 2220 01       		.byte	0x1
 30942 2221 8F10     		.2byte	0x108f
 30943 2223 00000000 		.4byte	.LFB117
 30944 2227 90000000 		.4byte	.LFE117-.LFB117
 30945 222b 01       		.uleb128 0x1
 30946 222c 9C       		.byte	0x9c
 30947 222d 50220000 		.4byte	0x2250
 30948 2231 22       		.uleb128 0x22
 30949 2232 BC050000 		.4byte	.LASF227
 30950 2236 01       		.byte	0x1
 30951 2237 9310     		.2byte	0x1093
 30952 2239 F00A0000 		.4byte	0xaf0
 30953 223d 02       		.uleb128 0x2
 30954 223e 91       		.byte	0x91
 30955 223f 64       		.sleb128 -28
 30956 2240 22       		.uleb128 0x22
 30957 2241 F30A0000 		.4byte	.LASF228
 30958 2245 01       		.byte	0x1
 30959 2246 9410     		.2byte	0x1094
 30960 2248 97000000 		.4byte	0x97
 30961 224c 02       		.uleb128 0x2
 30962 224d 91       		.byte	0x91
 30963 224e 6F       		.sleb128 -17
 30964 224f 00       		.byte	0
 30965 2250 32       		.uleb128 0x32
 30966 2251 BB110000 		.4byte	.LASF349
 30967 2255 09       		.byte	0x9
 30968 2256 1207     		.2byte	0x712
 30969 2258 5C220000 		.4byte	0x225c
 30970 225c 06       		.uleb128 0x6
 30971 225d 81000000 		.4byte	0x81
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 662


 30972 2261 09       		.uleb128 0x9
 30973 2262 1C030000 		.4byte	0x31c
 30974 2266 71220000 		.4byte	0x2271
 30975 226a 0A       		.uleb128 0xa
 30976 226b 18010000 		.4byte	0x118
 30977 226f 01       		.byte	0x1
 30978 2270 00       		.byte	0
 30979 2271 32       		.uleb128 0x32
 30980 2272 81130000 		.4byte	.LASF350
 30981 2276 08       		.byte	0x8
 30982 2277 1A02     		.2byte	0x21a
 30983 2279 61220000 		.4byte	0x2261
 30984 227d 32       		.uleb128 0x32
 30985 227e 70040000 		.4byte	.LASF351
 30986 2282 08       		.byte	0x8
 30987 2283 1A02     		.2byte	0x21a
 30988 2285 61220000 		.4byte	0x2261
 30989 2289 32       		.uleb128 0x32
 30990 228a CE0C0000 		.4byte	.LASF352
 30991 228e 08       		.byte	0x8
 30992 228f 1A02     		.2byte	0x21a
 30993 2291 61220000 		.4byte	0x2261
 30994 2295 09       		.uleb128 0x9
 30995 2296 59030000 		.4byte	0x359
 30996 229a A5220000 		.4byte	0x22a5
 30997 229e 0A       		.uleb128 0xa
 30998 229f 18010000 		.4byte	0x118
 30999 22a3 01       		.byte	0x1
 31000 22a4 00       		.byte	0
 31001 22a5 32       		.uleb128 0x32
 31002 22a6 6F060000 		.4byte	.LASF353
 31003 22aa 08       		.byte	0x8
 31004 22ab 1B02     		.2byte	0x21b
 31005 22ad 95220000 		.4byte	0x2295
 31006 22b1 32       		.uleb128 0x32
 31007 22b2 D4130000 		.4byte	.LASF354
 31008 22b6 08       		.byte	0x8
 31009 22b7 1B02     		.2byte	0x21b
 31010 22b9 95220000 		.4byte	0x2295
 31011 22bd 32       		.uleb128 0x32
 31012 22be 4B130000 		.4byte	.LASF355
 31013 22c2 08       		.byte	0x8
 31014 22c3 1C02     		.2byte	0x21c
 31015 22c5 DA030000 		.4byte	0x3da
 31016 22c9 32       		.uleb128 0x32
 31017 22ca 7A100000 		.4byte	.LASF356
 31018 22ce 08       		.byte	0x8
 31019 22cf 1C02     		.2byte	0x21c
 31020 22d1 DA030000 		.4byte	0x3da
 31021 22d5 32       		.uleb128 0x32
 31022 22d6 30100000 		.4byte	.LASF357
 31023 22da 08       		.byte	0x8
 31024 22db 1D02     		.2byte	0x21d
 31025 22dd 2B040000 		.4byte	0x42b
 31026 22e1 32       		.uleb128 0x32
 31027 22e2 A4000000 		.4byte	.LASF358
 31028 22e6 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 663


 31029 22e7 1E02     		.2byte	0x21e
 31030 22e9 44040000 		.4byte	0x444
 31031 22ed 32       		.uleb128 0x32
 31032 22ee 5F100000 		.4byte	.LASF359
 31033 22f2 08       		.byte	0x8
 31034 22f3 1F02     		.2byte	0x21f
 31035 22f5 000B0000 		.4byte	0xb00
 31036 22f9 32       		.uleb128 0x32
 31037 22fa BC0A0000 		.4byte	.LASF360
 31038 22fe 08       		.byte	0x8
 31039 22ff 1F02     		.2byte	0x21f
 31040 2301 000B0000 		.4byte	0xb00
 31041 2305 32       		.uleb128 0x32
 31042 2306 C5090000 		.4byte	.LASF361
 31043 230a 08       		.byte	0x8
 31044 230b 2002     		.2byte	0x220
 31045 230d B10C0000 		.4byte	0xcb1
 31046 2311 32       		.uleb128 0x32
 31047 2312 B4020000 		.4byte	.LASF362
 31048 2316 08       		.byte	0x8
 31049 2317 2502     		.2byte	0x225
 31050 2319 A3000000 		.4byte	0xa3
 31051 231d 32       		.uleb128 0x32
 31052 231e 620E0000 		.4byte	.LASF363
 31053 2322 08       		.byte	0x8
 31054 2323 2602     		.2byte	0x226
 31055 2325 A3000000 		.4byte	0xa3
 31056 2329 32       		.uleb128 0x32
 31057 232a 940E0000 		.4byte	.LASF364
 31058 232e 08       		.byte	0x8
 31059 232f 2902     		.2byte	0x229
 31060 2331 0B040000 		.4byte	0x40b
 31061 2335 32       		.uleb128 0x32
 31062 2336 52120000 		.4byte	.LASF365
 31063 233a 08       		.byte	0x8
 31064 233b 2A02     		.2byte	0x22a
 31065 233d 7A080000 		.4byte	0x87a
 31066 2341 32       		.uleb128 0x32
 31067 2342 DB110000 		.4byte	.LASF366
 31068 2346 08       		.byte	0x8
 31069 2347 2D02     		.2byte	0x22d
 31070 2349 0B040000 		.4byte	0x40b
 31071 234d 32       		.uleb128 0x32
 31072 234e 690A0000 		.4byte	.LASF367
 31073 2352 08       		.byte	0x8
 31074 2353 3602     		.2byte	0x236
 31075 2355 97000000 		.4byte	0x97
 31076 2359 32       		.uleb128 0x32
 31077 235a 38040000 		.4byte	.LASF368
 31078 235e 08       		.byte	0x8
 31079 235f 3802     		.2byte	0x238
 31080 2361 97000000 		.4byte	0x97
 31081 2365 32       		.uleb128 0x32
 31082 2366 1A0A0000 		.4byte	.LASF369
 31083 236a 08       		.byte	0x8
 31084 236b 3F02     		.2byte	0x23f
 31085 236d 97000000 		.4byte	0x97
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 664


 31086 2371 32       		.uleb128 0x32
 31087 2372 40070000 		.4byte	.LASF370
 31088 2376 08       		.byte	0x8
 31089 2377 4002     		.2byte	0x240
 31090 2379 97000000 		.4byte	0x97
 31091 237d 09       		.uleb128 0x9
 31092 237e C7000000 		.4byte	0xc7
 31093 2382 8D230000 		.4byte	0x238d
 31094 2386 0A       		.uleb128 0xa
 31095 2387 18010000 		.4byte	0x118
 31096 238b 0B       		.byte	0xb
 31097 238c 00       		.byte	0
 31098 238d 32       		.uleb128 0x32
 31099 238e 30040000 		.4byte	.LASF371
 31100 2392 08       		.byte	0x8
 31101 2393 4302     		.2byte	0x243
 31102 2395 7D230000 		.4byte	0x237d
 31103 2399 32       		.uleb128 0x32
 31104 239a 8D130000 		.4byte	.LASF372
 31105 239e 08       		.byte	0x8
 31106 239f 4402     		.2byte	0x244
 31107 23a1 97000000 		.4byte	0x97
 31108 23a5 09       		.uleb128 0x9
 31109 23a6 AF000000 		.4byte	0xaf
 31110 23aa B5230000 		.4byte	0x23b5
 31111 23ae 0A       		.uleb128 0xa
 31112 23af 18010000 		.4byte	0x118
 31113 23b3 04       		.byte	0x4
 31114 23b4 00       		.byte	0
 31115 23b5 32       		.uleb128 0x32
 31116 23b6 8F060000 		.4byte	.LASF373
 31117 23ba 08       		.byte	0x8
 31118 23bb 4A02     		.2byte	0x24a
 31119 23bd A5230000 		.4byte	0x23a5
 31120 23c1 32       		.uleb128 0x32
 31121 23c2 5B0F0000 		.4byte	.LASF374
 31122 23c6 08       		.byte	0x8
 31123 23c7 4B02     		.2byte	0x24b
 31124 23c9 7A080000 		.4byte	0x87a
 31125 23cd 09       		.uleb128 0x9
 31126 23ce A3000000 		.4byte	0xa3
 31127 23d2 E3230000 		.4byte	0x23e3
 31128 23d6 0A       		.uleb128 0xa
 31129 23d7 18010000 		.4byte	0x118
 31130 23db 01       		.byte	0x1
 31131 23dc 0A       		.uleb128 0xa
 31132 23dd 18010000 		.4byte	0x118
 31133 23e1 04       		.byte	0x4
 31134 23e2 00       		.byte	0
 31135 23e3 32       		.uleb128 0x32
 31136 23e4 7B120000 		.4byte	.LASF375
 31137 23e8 08       		.byte	0x8
 31138 23e9 4C02     		.2byte	0x24c
 31139 23eb CD230000 		.4byte	0x23cd
 31140 23ef 32       		.uleb128 0x32
 31141 23f0 D2050000 		.4byte	.LASF376
 31142 23f4 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 665


 31143 23f5 5302     		.2byte	0x253
 31144 23f7 16030000 		.4byte	0x316
 31145 23fb 32       		.uleb128 0x32
 31146 23fc 05110000 		.4byte	.LASF377
 31147 2400 08       		.byte	0x8
 31148 2401 5802     		.2byte	0x258
 31149 2403 97000000 		.4byte	0x97
 31150 2407 32       		.uleb128 0x32
 31151 2408 B8120000 		.4byte	.LASF378
 31152 240c 08       		.byte	0x8
 31153 240d 5902     		.2byte	0x259
 31154 240f EB070000 		.4byte	0x7eb
 31155 2413 32       		.uleb128 0x32
 31156 2414 AC110000 		.4byte	.LASF379
 31157 2418 08       		.byte	0x8
 31158 2419 5A02     		.2byte	0x25a
 31159 241b 73000000 		.4byte	0x73
 31160 241f 09       		.uleb128 0x9
 31161 2420 73000000 		.4byte	0x73
 31162 2424 2F240000 		.4byte	0x242f
 31163 2428 0A       		.uleb128 0xa
 31164 2429 18010000 		.4byte	0x118
 31165 242d 04       		.byte	0x4
 31166 242e 00       		.byte	0
 31167 242f 32       		.uleb128 0x32
 31168 2430 04040000 		.4byte	.LASF380
 31169 2434 08       		.byte	0x8
 31170 2435 5B02     		.2byte	0x25b
 31171 2437 1F240000 		.4byte	0x241f
 31172 243b 09       		.uleb128 0x9
 31173 243c 350C0000 		.4byte	0xc35
 31174 2440 4B240000 		.4byte	0x244b
 31175 2444 0A       		.uleb128 0xa
 31176 2445 18010000 		.4byte	0x118
 31177 2449 04       		.byte	0x4
 31178 244a 00       		.byte	0
 31179 244b 32       		.uleb128 0x32
 31180 244c 02050000 		.4byte	.LASF381
 31181 2450 08       		.byte	0x8
 31182 2451 5C02     		.2byte	0x25c
 31183 2453 3B240000 		.4byte	0x243b
 31184 2457 09       		.uleb128 0x9
 31185 2458 97000000 		.4byte	0x97
 31186 245c 6D240000 		.4byte	0x246d
 31187 2460 0A       		.uleb128 0xa
 31188 2461 18010000 		.4byte	0x118
 31189 2465 04       		.byte	0x4
 31190 2466 0A       		.uleb128 0xa
 31191 2467 18010000 		.4byte	0x118
 31192 246b 02       		.byte	0x2
 31193 246c 00       		.byte	0
 31194 246d 32       		.uleb128 0x32
 31195 246e 260B0000 		.4byte	.LASF382
 31196 2472 08       		.byte	0x8
 31197 2473 6002     		.2byte	0x260
 31198 2475 57240000 		.4byte	0x2457
 31199 2479 32       		.uleb128 0x32
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 666


 31200 247a B3130000 		.4byte	.LASF383
 31201 247e 08       		.byte	0x8
 31202 247f 6502     		.2byte	0x265
 31203 2481 97000000 		.4byte	0x97
 31204 2485 33       		.uleb128 0x33
 31205 2486 88110000 		.4byte	.LASF384
 31206 248a 01       		.byte	0x1
 31207 248b 33       		.byte	0x33
 31208 248c 96240000 		.4byte	0x2496
 31209 2490 05       		.uleb128 0x5
 31210 2491 03       		.byte	0x3
 31211 2492 00000000 		.4byte	EEPROM_ADDR
 31212 2496 07       		.uleb128 0x7
 31213 2497 04       		.byte	0x4
 31214 2498 00010000 		.4byte	0x100
 31215 249c 00       		.byte	0
 31216              		.section	.debug_abbrev,"",%progbits
 31217              	.Ldebug_abbrev0:
 31218 0000 01       		.uleb128 0x1
 31219 0001 11       		.uleb128 0x11
 31220 0002 01       		.byte	0x1
 31221 0003 25       		.uleb128 0x25
 31222 0004 0E       		.uleb128 0xe
 31223 0005 13       		.uleb128 0x13
 31224 0006 0B       		.uleb128 0xb
 31225 0007 03       		.uleb128 0x3
 31226 0008 0E       		.uleb128 0xe
 31227 0009 1B       		.uleb128 0x1b
 31228 000a 0E       		.uleb128 0xe
 31229 000b 55       		.uleb128 0x55
 31230 000c 17       		.uleb128 0x17
 31231 000d 11       		.uleb128 0x11
 31232 000e 01       		.uleb128 0x1
 31233 000f 10       		.uleb128 0x10
 31234 0010 17       		.uleb128 0x17
 31235 0011 00       		.byte	0
 31236 0012 00       		.byte	0
 31237 0013 02       		.uleb128 0x2
 31238 0014 24       		.uleb128 0x24
 31239 0015 00       		.byte	0
 31240 0016 0B       		.uleb128 0xb
 31241 0017 0B       		.uleb128 0xb
 31242 0018 3E       		.uleb128 0x3e
 31243 0019 0B       		.uleb128 0xb
 31244 001a 03       		.uleb128 0x3
 31245 001b 0E       		.uleb128 0xe
 31246 001c 00       		.byte	0
 31247 001d 00       		.byte	0
 31248 001e 03       		.uleb128 0x3
 31249 001f 16       		.uleb128 0x16
 31250 0020 00       		.byte	0
 31251 0021 03       		.uleb128 0x3
 31252 0022 0E       		.uleb128 0xe
 31253 0023 3A       		.uleb128 0x3a
 31254 0024 0B       		.uleb128 0xb
 31255 0025 3B       		.uleb128 0x3b
 31256 0026 0B       		.uleb128 0xb
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 667


 31257 0027 49       		.uleb128 0x49
 31258 0028 13       		.uleb128 0x13
 31259 0029 00       		.byte	0
 31260 002a 00       		.byte	0
 31261 002b 04       		.uleb128 0x4
 31262 002c 24       		.uleb128 0x24
 31263 002d 00       		.byte	0
 31264 002e 0B       		.uleb128 0xb
 31265 002f 0B       		.uleb128 0xb
 31266 0030 3E       		.uleb128 0x3e
 31267 0031 0B       		.uleb128 0xb
 31268 0032 03       		.uleb128 0x3
 31269 0033 08       		.uleb128 0x8
 31270 0034 00       		.byte	0
 31271 0035 00       		.byte	0
 31272 0036 05       		.uleb128 0x5
 31273 0037 16       		.uleb128 0x16
 31274 0038 00       		.byte	0
 31275 0039 03       		.uleb128 0x3
 31276 003a 0E       		.uleb128 0xe
 31277 003b 3A       		.uleb128 0x3a
 31278 003c 0B       		.uleb128 0xb
 31279 003d 3B       		.uleb128 0x3b
 31280 003e 05       		.uleb128 0x5
 31281 003f 49       		.uleb128 0x49
 31282 0040 13       		.uleb128 0x13
 31283 0041 00       		.byte	0
 31284 0042 00       		.byte	0
 31285 0043 06       		.uleb128 0x6
 31286 0044 35       		.uleb128 0x35
 31287 0045 00       		.byte	0
 31288 0046 49       		.uleb128 0x49
 31289 0047 13       		.uleb128 0x13
 31290 0048 00       		.byte	0
 31291 0049 00       		.byte	0
 31292 004a 07       		.uleb128 0x7
 31293 004b 0F       		.uleb128 0xf
 31294 004c 00       		.byte	0
 31295 004d 0B       		.uleb128 0xb
 31296 004e 0B       		.uleb128 0xb
 31297 004f 49       		.uleb128 0x49
 31298 0050 13       		.uleb128 0x13
 31299 0051 00       		.byte	0
 31300 0052 00       		.byte	0
 31301 0053 08       		.uleb128 0x8
 31302 0054 26       		.uleb128 0x26
 31303 0055 00       		.byte	0
 31304 0056 49       		.uleb128 0x49
 31305 0057 13       		.uleb128 0x13
 31306 0058 00       		.byte	0
 31307 0059 00       		.byte	0
 31308 005a 09       		.uleb128 0x9
 31309 005b 01       		.uleb128 0x1
 31310 005c 01       		.byte	0x1
 31311 005d 49       		.uleb128 0x49
 31312 005e 13       		.uleb128 0x13
 31313 005f 01       		.uleb128 0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 668


 31314 0060 13       		.uleb128 0x13
 31315 0061 00       		.byte	0
 31316 0062 00       		.byte	0
 31317 0063 0A       		.uleb128 0xa
 31318 0064 21       		.uleb128 0x21
 31319 0065 00       		.byte	0
 31320 0066 49       		.uleb128 0x49
 31321 0067 13       		.uleb128 0x13
 31322 0068 2F       		.uleb128 0x2f
 31323 0069 0B       		.uleb128 0xb
 31324 006a 00       		.byte	0
 31325 006b 00       		.byte	0
 31326 006c 0B       		.uleb128 0xb
 31327 006d 04       		.uleb128 0x4
 31328 006e 01       		.byte	0x1
 31329 006f 03       		.uleb128 0x3
 31330 0070 0E       		.uleb128 0xe
 31331 0071 0B       		.uleb128 0xb
 31332 0072 0B       		.uleb128 0xb
 31333 0073 49       		.uleb128 0x49
 31334 0074 13       		.uleb128 0x13
 31335 0075 3A       		.uleb128 0x3a
 31336 0076 0B       		.uleb128 0xb
 31337 0077 3B       		.uleb128 0x3b
 31338 0078 0B       		.uleb128 0xb
 31339 0079 01       		.uleb128 0x1
 31340 007a 13       		.uleb128 0x13
 31341 007b 00       		.byte	0
 31342 007c 00       		.byte	0
 31343 007d 0C       		.uleb128 0xc
 31344 007e 28       		.uleb128 0x28
 31345 007f 00       		.byte	0
 31346 0080 03       		.uleb128 0x3
 31347 0081 0E       		.uleb128 0xe
 31348 0082 1C       		.uleb128 0x1c
 31349 0083 0B       		.uleb128 0xb
 31350 0084 00       		.byte	0
 31351 0085 00       		.byte	0
 31352 0086 0D       		.uleb128 0xd
 31353 0087 13       		.uleb128 0x13
 31354 0088 00       		.byte	0
 31355 0089 03       		.uleb128 0x3
 31356 008a 0E       		.uleb128 0xe
 31357 008b 3C       		.uleb128 0x3c
 31358 008c 19       		.uleb128 0x19
 31359 008d 00       		.byte	0
 31360 008e 00       		.byte	0
 31361 008f 0E       		.uleb128 0xe
 31362 0090 13       		.uleb128 0x13
 31363 0091 01       		.byte	0x1
 31364 0092 03       		.uleb128 0x3
 31365 0093 0E       		.uleb128 0xe
 31366 0094 0B       		.uleb128 0xb
 31367 0095 0B       		.uleb128 0xb
 31368 0096 3A       		.uleb128 0x3a
 31369 0097 0B       		.uleb128 0xb
 31370 0098 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 669


 31371 0099 0B       		.uleb128 0xb
 31372 009a 01       		.uleb128 0x1
 31373 009b 13       		.uleb128 0x13
 31374 009c 00       		.byte	0
 31375 009d 00       		.byte	0
 31376 009e 0F       		.uleb128 0xf
 31377 009f 0D       		.uleb128 0xd
 31378 00a0 00       		.byte	0
 31379 00a1 03       		.uleb128 0x3
 31380 00a2 08       		.uleb128 0x8
 31381 00a3 3A       		.uleb128 0x3a
 31382 00a4 0B       		.uleb128 0xb
 31383 00a5 3B       		.uleb128 0x3b
 31384 00a6 0B       		.uleb128 0xb
 31385 00a7 49       		.uleb128 0x49
 31386 00a8 13       		.uleb128 0x13
 31387 00a9 38       		.uleb128 0x38
 31388 00aa 0B       		.uleb128 0xb
 31389 00ab 00       		.byte	0
 31390 00ac 00       		.byte	0
 31391 00ad 10       		.uleb128 0x10
 31392 00ae 0D       		.uleb128 0xd
 31393 00af 00       		.byte	0
 31394 00b0 03       		.uleb128 0x3
 31395 00b1 0E       		.uleb128 0xe
 31396 00b2 3A       		.uleb128 0x3a
 31397 00b3 0B       		.uleb128 0xb
 31398 00b4 3B       		.uleb128 0x3b
 31399 00b5 0B       		.uleb128 0xb
 31400 00b6 49       		.uleb128 0x49
 31401 00b7 13       		.uleb128 0x13
 31402 00b8 38       		.uleb128 0x38
 31403 00b9 0B       		.uleb128 0xb
 31404 00ba 00       		.byte	0
 31405 00bb 00       		.byte	0
 31406 00bc 11       		.uleb128 0x11
 31407 00bd 13       		.uleb128 0x13
 31408 00be 01       		.byte	0x1
 31409 00bf 03       		.uleb128 0x3
 31410 00c0 0E       		.uleb128 0xe
 31411 00c1 0B       		.uleb128 0xb
 31412 00c2 0B       		.uleb128 0xb
 31413 00c3 3A       		.uleb128 0x3a
 31414 00c4 0B       		.uleb128 0xb
 31415 00c5 3B       		.uleb128 0x3b
 31416 00c6 05       		.uleb128 0x5
 31417 00c7 01       		.uleb128 0x1
 31418 00c8 13       		.uleb128 0x13
 31419 00c9 00       		.byte	0
 31420 00ca 00       		.byte	0
 31421 00cb 12       		.uleb128 0x12
 31422 00cc 0D       		.uleb128 0xd
 31423 00cd 00       		.byte	0
 31424 00ce 03       		.uleb128 0x3
 31425 00cf 0E       		.uleb128 0xe
 31426 00d0 3A       		.uleb128 0x3a
 31427 00d1 0B       		.uleb128 0xb
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 670


 31428 00d2 3B       		.uleb128 0x3b
 31429 00d3 05       		.uleb128 0x5
 31430 00d4 49       		.uleb128 0x49
 31431 00d5 13       		.uleb128 0x13
 31432 00d6 38       		.uleb128 0x38
 31433 00d7 0B       		.uleb128 0xb
 31434 00d8 00       		.byte	0
 31435 00d9 00       		.byte	0
 31436 00da 13       		.uleb128 0x13
 31437 00db 0D       		.uleb128 0xd
 31438 00dc 00       		.byte	0
 31439 00dd 03       		.uleb128 0x3
 31440 00de 08       		.uleb128 0x8
 31441 00df 3A       		.uleb128 0x3a
 31442 00e0 0B       		.uleb128 0xb
 31443 00e1 3B       		.uleb128 0x3b
 31444 00e2 05       		.uleb128 0x5
 31445 00e3 49       		.uleb128 0x49
 31446 00e4 13       		.uleb128 0x13
 31447 00e5 38       		.uleb128 0x38
 31448 00e6 0B       		.uleb128 0xb
 31449 00e7 00       		.byte	0
 31450 00e8 00       		.byte	0
 31451 00e9 14       		.uleb128 0x14
 31452 00ea 13       		.uleb128 0x13
 31453 00eb 01       		.byte	0x1
 31454 00ec 03       		.uleb128 0x3
 31455 00ed 0E       		.uleb128 0xe
 31456 00ee 0B       		.uleb128 0xb
 31457 00ef 05       		.uleb128 0x5
 31458 00f0 3A       		.uleb128 0x3a
 31459 00f1 0B       		.uleb128 0xb
 31460 00f2 3B       		.uleb128 0x3b
 31461 00f3 05       		.uleb128 0x5
 31462 00f4 01       		.uleb128 0x1
 31463 00f5 13       		.uleb128 0x13
 31464 00f6 00       		.byte	0
 31465 00f7 00       		.byte	0
 31466 00f8 15       		.uleb128 0x15
 31467 00f9 0D       		.uleb128 0xd
 31468 00fa 00       		.byte	0
 31469 00fb 03       		.uleb128 0x3
 31470 00fc 08       		.uleb128 0x8
 31471 00fd 3A       		.uleb128 0x3a
 31472 00fe 0B       		.uleb128 0xb
 31473 00ff 3B       		.uleb128 0x3b
 31474 0100 05       		.uleb128 0x5
 31475 0101 49       		.uleb128 0x49
 31476 0102 13       		.uleb128 0x13
 31477 0103 38       		.uleb128 0x38
 31478 0104 05       		.uleb128 0x5
 31479 0105 00       		.byte	0
 31480 0106 00       		.byte	0
 31481 0107 16       		.uleb128 0x16
 31482 0108 0D       		.uleb128 0xd
 31483 0109 00       		.byte	0
 31484 010a 03       		.uleb128 0x3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 671


 31485 010b 0E       		.uleb128 0xe
 31486 010c 3A       		.uleb128 0x3a
 31487 010d 0B       		.uleb128 0xb
 31488 010e 3B       		.uleb128 0x3b
 31489 010f 05       		.uleb128 0x5
 31490 0110 49       		.uleb128 0x49
 31491 0111 13       		.uleb128 0x13
 31492 0112 38       		.uleb128 0x38
 31493 0113 05       		.uleb128 0x5
 31494 0114 00       		.byte	0
 31495 0115 00       		.byte	0
 31496 0116 17       		.uleb128 0x17
 31497 0117 2E       		.uleb128 0x2e
 31498 0118 01       		.byte	0x1
 31499 0119 03       		.uleb128 0x3
 31500 011a 0E       		.uleb128 0xe
 31501 011b 3A       		.uleb128 0x3a
 31502 011c 0B       		.uleb128 0xb
 31503 011d 3B       		.uleb128 0x3b
 31504 011e 05       		.uleb128 0x5
 31505 011f 27       		.uleb128 0x27
 31506 0120 19       		.uleb128 0x19
 31507 0121 49       		.uleb128 0x49
 31508 0122 13       		.uleb128 0x13
 31509 0123 20       		.uleb128 0x20
 31510 0124 0B       		.uleb128 0xb
 31511 0125 01       		.uleb128 0x1
 31512 0126 13       		.uleb128 0x13
 31513 0127 00       		.byte	0
 31514 0128 00       		.byte	0
 31515 0129 18       		.uleb128 0x18
 31516 012a 05       		.uleb128 0x5
 31517 012b 00       		.byte	0
 31518 012c 03       		.uleb128 0x3
 31519 012d 0E       		.uleb128 0xe
 31520 012e 3A       		.uleb128 0x3a
 31521 012f 0B       		.uleb128 0xb
 31522 0130 3B       		.uleb128 0x3b
 31523 0131 05       		.uleb128 0x5
 31524 0132 49       		.uleb128 0x49
 31525 0133 13       		.uleb128 0x13
 31526 0134 00       		.byte	0
 31527 0135 00       		.byte	0
 31528 0136 19       		.uleb128 0x19
 31529 0137 34       		.uleb128 0x34
 31530 0138 00       		.byte	0
 31531 0139 03       		.uleb128 0x3
 31532 013a 0E       		.uleb128 0xe
 31533 013b 3A       		.uleb128 0x3a
 31534 013c 0B       		.uleb128 0xb
 31535 013d 3B       		.uleb128 0x3b
 31536 013e 05       		.uleb128 0x5
 31537 013f 49       		.uleb128 0x49
 31538 0140 13       		.uleb128 0x13
 31539 0141 00       		.byte	0
 31540 0142 00       		.byte	0
 31541 0143 1A       		.uleb128 0x1a
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 672


 31542 0144 2E       		.uleb128 0x2e
 31543 0145 01       		.byte	0x1
 31544 0146 3F       		.uleb128 0x3f
 31545 0147 19       		.uleb128 0x19
 31546 0148 03       		.uleb128 0x3
 31547 0149 0E       		.uleb128 0xe
 31548 014a 3A       		.uleb128 0x3a
 31549 014b 0B       		.uleb128 0xb
 31550 014c 3B       		.uleb128 0x3b
 31551 014d 0B       		.uleb128 0xb
 31552 014e 27       		.uleb128 0x27
 31553 014f 19       		.uleb128 0x19
 31554 0150 11       		.uleb128 0x11
 31555 0151 01       		.uleb128 0x1
 31556 0152 12       		.uleb128 0x12
 31557 0153 06       		.uleb128 0x6
 31558 0154 40       		.uleb128 0x40
 31559 0155 18       		.uleb128 0x18
 31560 0156 9642     		.uleb128 0x2116
 31561 0158 19       		.uleb128 0x19
 31562 0159 01       		.uleb128 0x1
 31563 015a 13       		.uleb128 0x13
 31564 015b 00       		.byte	0
 31565 015c 00       		.byte	0
 31566 015d 1B       		.uleb128 0x1b
 31567 015e 34       		.uleb128 0x34
 31568 015f 00       		.byte	0
 31569 0160 03       		.uleb128 0x3
 31570 0161 0E       		.uleb128 0xe
 31571 0162 3A       		.uleb128 0x3a
 31572 0163 0B       		.uleb128 0xb
 31573 0164 3B       		.uleb128 0x3b
 31574 0165 0B       		.uleb128 0xb
 31575 0166 49       		.uleb128 0x49
 31576 0167 13       		.uleb128 0x13
 31577 0168 02       		.uleb128 0x2
 31578 0169 18       		.uleb128 0x18
 31579 016a 00       		.byte	0
 31580 016b 00       		.byte	0
 31581 016c 1C       		.uleb128 0x1c
 31582 016d 1D       		.uleb128 0x1d
 31583 016e 01       		.byte	0x1
 31584 016f 31       		.uleb128 0x31
 31585 0170 13       		.uleb128 0x13
 31586 0171 11       		.uleb128 0x11
 31587 0172 01       		.uleb128 0x1
 31588 0173 12       		.uleb128 0x12
 31589 0174 06       		.uleb128 0x6
 31590 0175 58       		.uleb128 0x58
 31591 0176 0B       		.uleb128 0xb
 31592 0177 59       		.uleb128 0x59
 31593 0178 0B       		.uleb128 0xb
 31594 0179 01       		.uleb128 0x1
 31595 017a 13       		.uleb128 0x13
 31596 017b 00       		.byte	0
 31597 017c 00       		.byte	0
 31598 017d 1D       		.uleb128 0x1d
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 673


 31599 017e 05       		.uleb128 0x5
 31600 017f 00       		.byte	0
 31601 0180 31       		.uleb128 0x31
 31602 0181 13       		.uleb128 0x13
 31603 0182 02       		.uleb128 0x2
 31604 0183 18       		.uleb128 0x18
 31605 0184 00       		.byte	0
 31606 0185 00       		.byte	0
 31607 0186 1E       		.uleb128 0x1e
 31608 0187 0B       		.uleb128 0xb
 31609 0188 01       		.byte	0x1
 31610 0189 11       		.uleb128 0x11
 31611 018a 01       		.uleb128 0x1
 31612 018b 12       		.uleb128 0x12
 31613 018c 06       		.uleb128 0x6
 31614 018d 00       		.byte	0
 31615 018e 00       		.byte	0
 31616 018f 1F       		.uleb128 0x1f
 31617 0190 34       		.uleb128 0x34
 31618 0191 00       		.byte	0
 31619 0192 31       		.uleb128 0x31
 31620 0193 13       		.uleb128 0x13
 31621 0194 02       		.uleb128 0x2
 31622 0195 18       		.uleb128 0x18
 31623 0196 00       		.byte	0
 31624 0197 00       		.byte	0
 31625 0198 20       		.uleb128 0x20
 31626 0199 1D       		.uleb128 0x1d
 31627 019a 01       		.byte	0x1
 31628 019b 31       		.uleb128 0x31
 31629 019c 13       		.uleb128 0x13
 31630 019d 11       		.uleb128 0x11
 31631 019e 01       		.uleb128 0x1
 31632 019f 12       		.uleb128 0x12
 31633 01a0 06       		.uleb128 0x6
 31634 01a1 58       		.uleb128 0x58
 31635 01a2 0B       		.uleb128 0xb
 31636 01a3 59       		.uleb128 0x59
 31637 01a4 05       		.uleb128 0x5
 31638 01a5 00       		.byte	0
 31639 01a6 00       		.byte	0
 31640 01a7 21       		.uleb128 0x21
 31641 01a8 2E       		.uleb128 0x2e
 31642 01a9 01       		.byte	0x1
 31643 01aa 3F       		.uleb128 0x3f
 31644 01ab 19       		.uleb128 0x19
 31645 01ac 03       		.uleb128 0x3
 31646 01ad 0E       		.uleb128 0xe
 31647 01ae 3A       		.uleb128 0x3a
 31648 01af 0B       		.uleb128 0xb
 31649 01b0 3B       		.uleb128 0x3b
 31650 01b1 05       		.uleb128 0x5
 31651 01b2 27       		.uleb128 0x27
 31652 01b3 19       		.uleb128 0x19
 31653 01b4 11       		.uleb128 0x11
 31654 01b5 01       		.uleb128 0x1
 31655 01b6 12       		.uleb128 0x12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 674


 31656 01b7 06       		.uleb128 0x6
 31657 01b8 40       		.uleb128 0x40
 31658 01b9 18       		.uleb128 0x18
 31659 01ba 9642     		.uleb128 0x2116
 31660 01bc 19       		.uleb128 0x19
 31661 01bd 01       		.uleb128 0x1
 31662 01be 13       		.uleb128 0x13
 31663 01bf 00       		.byte	0
 31664 01c0 00       		.byte	0
 31665 01c1 22       		.uleb128 0x22
 31666 01c2 34       		.uleb128 0x34
 31667 01c3 00       		.byte	0
 31668 01c4 03       		.uleb128 0x3
 31669 01c5 0E       		.uleb128 0xe
 31670 01c6 3A       		.uleb128 0x3a
 31671 01c7 0B       		.uleb128 0xb
 31672 01c8 3B       		.uleb128 0x3b
 31673 01c9 05       		.uleb128 0x5
 31674 01ca 49       		.uleb128 0x49
 31675 01cb 13       		.uleb128 0x13
 31676 01cc 02       		.uleb128 0x2
 31677 01cd 18       		.uleb128 0x18
 31678 01ce 00       		.byte	0
 31679 01cf 00       		.byte	0
 31680 01d0 23       		.uleb128 0x23
 31681 01d1 21       		.uleb128 0x21
 31682 01d2 00       		.byte	0
 31683 01d3 49       		.uleb128 0x49
 31684 01d4 13       		.uleb128 0x13
 31685 01d5 2F       		.uleb128 0x2f
 31686 01d6 05       		.uleb128 0x5
 31687 01d7 00       		.byte	0
 31688 01d8 00       		.byte	0
 31689 01d9 24       		.uleb128 0x24
 31690 01da 05       		.uleb128 0x5
 31691 01db 00       		.byte	0
 31692 01dc 03       		.uleb128 0x3
 31693 01dd 0E       		.uleb128 0xe
 31694 01de 3A       		.uleb128 0x3a
 31695 01df 0B       		.uleb128 0xb
 31696 01e0 3B       		.uleb128 0x3b
 31697 01e1 05       		.uleb128 0x5
 31698 01e2 49       		.uleb128 0x49
 31699 01e3 13       		.uleb128 0x13
 31700 01e4 02       		.uleb128 0x2
 31701 01e5 18       		.uleb128 0x18
 31702 01e6 00       		.byte	0
 31703 01e7 00       		.byte	0
 31704 01e8 25       		.uleb128 0x25
 31705 01e9 34       		.uleb128 0x34
 31706 01ea 00       		.byte	0
 31707 01eb 03       		.uleb128 0x3
 31708 01ec 08       		.uleb128 0x8
 31709 01ed 3A       		.uleb128 0x3a
 31710 01ee 0B       		.uleb128 0xb
 31711 01ef 3B       		.uleb128 0x3b
 31712 01f0 05       		.uleb128 0x5
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 675


 31713 01f1 49       		.uleb128 0x49
 31714 01f2 13       		.uleb128 0x13
 31715 01f3 02       		.uleb128 0x2
 31716 01f4 18       		.uleb128 0x18
 31717 01f5 00       		.byte	0
 31718 01f6 00       		.byte	0
 31719 01f7 26       		.uleb128 0x26
 31720 01f8 2E       		.uleb128 0x2e
 31721 01f9 01       		.byte	0x1
 31722 01fa 3F       		.uleb128 0x3f
 31723 01fb 19       		.uleb128 0x19
 31724 01fc 03       		.uleb128 0x3
 31725 01fd 0E       		.uleb128 0xe
 31726 01fe 3A       		.uleb128 0x3a
 31727 01ff 0B       		.uleb128 0xb
 31728 0200 3B       		.uleb128 0x3b
 31729 0201 05       		.uleb128 0x5
 31730 0202 11       		.uleb128 0x11
 31731 0203 01       		.uleb128 0x1
 31732 0204 12       		.uleb128 0x12
 31733 0205 06       		.uleb128 0x6
 31734 0206 40       		.uleb128 0x40
 31735 0207 18       		.uleb128 0x18
 31736 0208 9642     		.uleb128 0x2116
 31737 020a 19       		.uleb128 0x19
 31738 020b 01       		.uleb128 0x1
 31739 020c 13       		.uleb128 0x13
 31740 020d 00       		.byte	0
 31741 020e 00       		.byte	0
 31742 020f 27       		.uleb128 0x27
 31743 0210 05       		.uleb128 0x5
 31744 0211 00       		.byte	0
 31745 0212 03       		.uleb128 0x3
 31746 0213 08       		.uleb128 0x8
 31747 0214 3A       		.uleb128 0x3a
 31748 0215 0B       		.uleb128 0xb
 31749 0216 3B       		.uleb128 0x3b
 31750 0217 05       		.uleb128 0x5
 31751 0218 49       		.uleb128 0x49
 31752 0219 13       		.uleb128 0x13
 31753 021a 02       		.uleb128 0x2
 31754 021b 18       		.uleb128 0x18
 31755 021c 00       		.byte	0
 31756 021d 00       		.byte	0
 31757 021e 28       		.uleb128 0x28
 31758 021f 2E       		.uleb128 0x2e
 31759 0220 01       		.byte	0x1
 31760 0221 3F       		.uleb128 0x3f
 31761 0222 19       		.uleb128 0x19
 31762 0223 03       		.uleb128 0x3
 31763 0224 0E       		.uleb128 0xe
 31764 0225 3A       		.uleb128 0x3a
 31765 0226 0B       		.uleb128 0xb
 31766 0227 3B       		.uleb128 0x3b
 31767 0228 05       		.uleb128 0x5
 31768 0229 27       		.uleb128 0x27
 31769 022a 19       		.uleb128 0x19
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 676


 31770 022b 49       		.uleb128 0x49
 31771 022c 13       		.uleb128 0x13
 31772 022d 11       		.uleb128 0x11
 31773 022e 01       		.uleb128 0x1
 31774 022f 12       		.uleb128 0x12
 31775 0230 06       		.uleb128 0x6
 31776 0231 40       		.uleb128 0x40
 31777 0232 18       		.uleb128 0x18
 31778 0233 9742     		.uleb128 0x2117
 31779 0235 19       		.uleb128 0x19
 31780 0236 01       		.uleb128 0x1
 31781 0237 13       		.uleb128 0x13
 31782 0238 00       		.byte	0
 31783 0239 00       		.byte	0
 31784 023a 29       		.uleb128 0x29
 31785 023b 2E       		.uleb128 0x2e
 31786 023c 01       		.byte	0x1
 31787 023d 3F       		.uleb128 0x3f
 31788 023e 19       		.uleb128 0x19
 31789 023f 03       		.uleb128 0x3
 31790 0240 0E       		.uleb128 0xe
 31791 0241 3A       		.uleb128 0x3a
 31792 0242 0B       		.uleb128 0xb
 31793 0243 3B       		.uleb128 0x3b
 31794 0244 05       		.uleb128 0x5
 31795 0245 27       		.uleb128 0x27
 31796 0246 19       		.uleb128 0x19
 31797 0247 49       		.uleb128 0x49
 31798 0248 13       		.uleb128 0x13
 31799 0249 11       		.uleb128 0x11
 31800 024a 01       		.uleb128 0x1
 31801 024b 12       		.uleb128 0x12
 31802 024c 06       		.uleb128 0x6
 31803 024d 40       		.uleb128 0x40
 31804 024e 18       		.uleb128 0x18
 31805 024f 9642     		.uleb128 0x2116
 31806 0251 19       		.uleb128 0x19
 31807 0252 01       		.uleb128 0x1
 31808 0253 13       		.uleb128 0x13
 31809 0254 00       		.byte	0
 31810 0255 00       		.byte	0
 31811 0256 2A       		.uleb128 0x2a
 31812 0257 2E       		.uleb128 0x2e
 31813 0258 01       		.byte	0x1
 31814 0259 3F       		.uleb128 0x3f
 31815 025a 19       		.uleb128 0x19
 31816 025b 03       		.uleb128 0x3
 31817 025c 0E       		.uleb128 0xe
 31818 025d 3A       		.uleb128 0x3a
 31819 025e 0B       		.uleb128 0xb
 31820 025f 3B       		.uleb128 0x3b
 31821 0260 05       		.uleb128 0x5
 31822 0261 27       		.uleb128 0x27
 31823 0262 19       		.uleb128 0x19
 31824 0263 11       		.uleb128 0x11
 31825 0264 01       		.uleb128 0x1
 31826 0265 12       		.uleb128 0x12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 677


 31827 0266 06       		.uleb128 0x6
 31828 0267 40       		.uleb128 0x40
 31829 0268 18       		.uleb128 0x18
 31830 0269 9742     		.uleb128 0x2117
 31831 026b 19       		.uleb128 0x19
 31832 026c 01       		.uleb128 0x1
 31833 026d 13       		.uleb128 0x13
 31834 026e 00       		.byte	0
 31835 026f 00       		.byte	0
 31836 0270 2B       		.uleb128 0x2b
 31837 0271 2E       		.uleb128 0x2e
 31838 0272 00       		.byte	0
 31839 0273 3F       		.uleb128 0x3f
 31840 0274 19       		.uleb128 0x19
 31841 0275 03       		.uleb128 0x3
 31842 0276 0E       		.uleb128 0xe
 31843 0277 3A       		.uleb128 0x3a
 31844 0278 0B       		.uleb128 0xb
 31845 0279 3B       		.uleb128 0x3b
 31846 027a 05       		.uleb128 0x5
 31847 027b 27       		.uleb128 0x27
 31848 027c 19       		.uleb128 0x19
 31849 027d 11       		.uleb128 0x11
 31850 027e 01       		.uleb128 0x1
 31851 027f 12       		.uleb128 0x12
 31852 0280 06       		.uleb128 0x6
 31853 0281 40       		.uleb128 0x40
 31854 0282 18       		.uleb128 0x18
 31855 0283 9742     		.uleb128 0x2117
 31856 0285 19       		.uleb128 0x19
 31857 0286 00       		.byte	0
 31858 0287 00       		.byte	0
 31859 0288 2C       		.uleb128 0x2c
 31860 0289 2E       		.uleb128 0x2e
 31861 028a 01       		.byte	0x1
 31862 028b 3F       		.uleb128 0x3f
 31863 028c 19       		.uleb128 0x19
 31864 028d 03       		.uleb128 0x3
 31865 028e 0E       		.uleb128 0xe
 31866 028f 3A       		.uleb128 0x3a
 31867 0290 0B       		.uleb128 0xb
 31868 0291 3B       		.uleb128 0x3b
 31869 0292 05       		.uleb128 0x5
 31870 0293 11       		.uleb128 0x11
 31871 0294 01       		.uleb128 0x1
 31872 0295 12       		.uleb128 0x12
 31873 0296 06       		.uleb128 0x6
 31874 0297 40       		.uleb128 0x40
 31875 0298 18       		.uleb128 0x18
 31876 0299 9742     		.uleb128 0x2117
 31877 029b 19       		.uleb128 0x19
 31878 029c 01       		.uleb128 0x1
 31879 029d 13       		.uleb128 0x13
 31880 029e 00       		.byte	0
 31881 029f 00       		.byte	0
 31882 02a0 2D       		.uleb128 0x2d
 31883 02a1 0B       		.uleb128 0xb
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 678


 31884 02a2 01       		.byte	0x1
 31885 02a3 11       		.uleb128 0x11
 31886 02a4 01       		.uleb128 0x1
 31887 02a5 12       		.uleb128 0x12
 31888 02a6 06       		.uleb128 0x6
 31889 02a7 01       		.uleb128 0x1
 31890 02a8 13       		.uleb128 0x13
 31891 02a9 00       		.byte	0
 31892 02aa 00       		.byte	0
 31893 02ab 2E       		.uleb128 0x2e
 31894 02ac 2E       		.uleb128 0x2e
 31895 02ad 01       		.byte	0x1
 31896 02ae 3F       		.uleb128 0x3f
 31897 02af 19       		.uleb128 0x19
 31898 02b0 03       		.uleb128 0x3
 31899 02b1 0E       		.uleb128 0xe
 31900 02b2 3A       		.uleb128 0x3a
 31901 02b3 0B       		.uleb128 0xb
 31902 02b4 3B       		.uleb128 0x3b
 31903 02b5 05       		.uleb128 0x5
 31904 02b6 49       		.uleb128 0x49
 31905 02b7 13       		.uleb128 0x13
 31906 02b8 11       		.uleb128 0x11
 31907 02b9 01       		.uleb128 0x1
 31908 02ba 12       		.uleb128 0x12
 31909 02bb 06       		.uleb128 0x6
 31910 02bc 40       		.uleb128 0x40
 31911 02bd 18       		.uleb128 0x18
 31912 02be 9642     		.uleb128 0x2116
 31913 02c0 19       		.uleb128 0x19
 31914 02c1 01       		.uleb128 0x1
 31915 02c2 13       		.uleb128 0x13
 31916 02c3 00       		.byte	0
 31917 02c4 00       		.byte	0
 31918 02c5 2F       		.uleb128 0x2f
 31919 02c6 2E       		.uleb128 0x2e
 31920 02c7 00       		.byte	0
 31921 02c8 3F       		.uleb128 0x3f
 31922 02c9 19       		.uleb128 0x19
 31923 02ca 03       		.uleb128 0x3
 31924 02cb 0E       		.uleb128 0xe
 31925 02cc 3A       		.uleb128 0x3a
 31926 02cd 0B       		.uleb128 0xb
 31927 02ce 3B       		.uleb128 0x3b
 31928 02cf 05       		.uleb128 0x5
 31929 02d0 11       		.uleb128 0x11
 31930 02d1 01       		.uleb128 0x1
 31931 02d2 12       		.uleb128 0x12
 31932 02d3 06       		.uleb128 0x6
 31933 02d4 40       		.uleb128 0x40
 31934 02d5 18       		.uleb128 0x18
 31935 02d6 9642     		.uleb128 0x2116
 31936 02d8 19       		.uleb128 0x19
 31937 02d9 00       		.byte	0
 31938 02da 00       		.byte	0
 31939 02db 30       		.uleb128 0x30
 31940 02dc 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 679


 31941 02dd 01       		.byte	0x1
 31942 02de 3F       		.uleb128 0x3f
 31943 02df 19       		.uleb128 0x19
 31944 02e0 03       		.uleb128 0x3
 31945 02e1 0E       		.uleb128 0xe
 31946 02e2 3A       		.uleb128 0x3a
 31947 02e3 0B       		.uleb128 0xb
 31948 02e4 3B       		.uleb128 0x3b
 31949 02e5 05       		.uleb128 0x5
 31950 02e6 49       		.uleb128 0x49
 31951 02e7 13       		.uleb128 0x13
 31952 02e8 11       		.uleb128 0x11
 31953 02e9 01       		.uleb128 0x1
 31954 02ea 12       		.uleb128 0x12
 31955 02eb 06       		.uleb128 0x6
 31956 02ec 40       		.uleb128 0x40
 31957 02ed 18       		.uleb128 0x18
 31958 02ee 9742     		.uleb128 0x2117
 31959 02f0 19       		.uleb128 0x19
 31960 02f1 01       		.uleb128 0x1
 31961 02f2 13       		.uleb128 0x13
 31962 02f3 00       		.byte	0
 31963 02f4 00       		.byte	0
 31964 02f5 31       		.uleb128 0x31
 31965 02f6 2E       		.uleb128 0x2e
 31966 02f7 00       		.byte	0
 31967 02f8 3F       		.uleb128 0x3f
 31968 02f9 19       		.uleb128 0x19
 31969 02fa 03       		.uleb128 0x3
 31970 02fb 0E       		.uleb128 0xe
 31971 02fc 3A       		.uleb128 0x3a
 31972 02fd 0B       		.uleb128 0xb
 31973 02fe 3B       		.uleb128 0x3b
 31974 02ff 05       		.uleb128 0x5
 31975 0300 11       		.uleb128 0x11
 31976 0301 01       		.uleb128 0x1
 31977 0302 12       		.uleb128 0x12
 31978 0303 06       		.uleb128 0x6
 31979 0304 40       		.uleb128 0x40
 31980 0305 18       		.uleb128 0x18
 31981 0306 9742     		.uleb128 0x2117
 31982 0308 19       		.uleb128 0x19
 31983 0309 00       		.byte	0
 31984 030a 00       		.byte	0
 31985 030b 32       		.uleb128 0x32
 31986 030c 34       		.uleb128 0x34
 31987 030d 00       		.byte	0
 31988 030e 03       		.uleb128 0x3
 31989 030f 0E       		.uleb128 0xe
 31990 0310 3A       		.uleb128 0x3a
 31991 0311 0B       		.uleb128 0xb
 31992 0312 3B       		.uleb128 0x3b
 31993 0313 05       		.uleb128 0x5
 31994 0314 49       		.uleb128 0x49
 31995 0315 13       		.uleb128 0x13
 31996 0316 3F       		.uleb128 0x3f
 31997 0317 19       		.uleb128 0x19
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 680


 31998 0318 3C       		.uleb128 0x3c
 31999 0319 19       		.uleb128 0x19
 32000 031a 00       		.byte	0
 32001 031b 00       		.byte	0
 32002 031c 33       		.uleb128 0x33
 32003 031d 34       		.uleb128 0x34
 32004 031e 00       		.byte	0
 32005 031f 03       		.uleb128 0x3
 32006 0320 0E       		.uleb128 0xe
 32007 0321 3A       		.uleb128 0x3a
 32008 0322 0B       		.uleb128 0xb
 32009 0323 3B       		.uleb128 0x3b
 32010 0324 0B       		.uleb128 0xb
 32011 0325 49       		.uleb128 0x49
 32012 0326 13       		.uleb128 0x13
 32013 0327 3F       		.uleb128 0x3f
 32014 0328 19       		.uleb128 0x19
 32015 0329 02       		.uleb128 0x2
 32016 032a 18       		.uleb128 0x18
 32017 032b 00       		.byte	0
 32018 032c 00       		.byte	0
 32019 032d 00       		.byte	0
 32020              		.section	.debug_aranges,"",%progbits
 32021 0000 C4010000 		.4byte	0x1c4
 32022 0004 0200     		.2byte	0x2
 32023 0006 00000000 		.4byte	.Ldebug_info0
 32024 000a 04       		.byte	0x4
 32025 000b 00       		.byte	0
 32026 000c 0000     		.2byte	0
 32027 000e 0000     		.2byte	0
 32028 0010 00000000 		.4byte	.LFB64
 32029 0014 E0040000 		.4byte	.LFE64-.LFB64
 32030 0018 00000000 		.4byte	.LFB65
 32031 001c 22000000 		.4byte	.LFE65-.LFB65
 32032 0020 00000000 		.4byte	.LFB66
 32033 0024 02010000 		.4byte	.LFE66-.LFB66
 32034 0028 00000000 		.4byte	.LFB67
 32035 002c 50310000 		.4byte	.LFE67-.LFB67
 32036 0030 00000000 		.4byte	.LFB68
 32037 0034 B4180000 		.4byte	.LFE68-.LFB68
 32038 0038 00000000 		.4byte	.LFB69
 32039 003c 8C140000 		.4byte	.LFE69-.LFB69
 32040 0040 00000000 		.4byte	.LFB70
 32041 0044 F40D0000 		.4byte	.LFE70-.LFB70
 32042 0048 00000000 		.4byte	.LFB71
 32043 004c 84000000 		.4byte	.LFE71-.LFB71
 32044 0050 00000000 		.4byte	.LFB72
 32045 0054 781C0000 		.4byte	.LFE72-.LFB72
 32046 0058 00000000 		.4byte	.LFB73
 32047 005c B4030000 		.4byte	.LFE73-.LFB73
 32048 0060 00000000 		.4byte	.LFB74
 32049 0064 7C120000 		.4byte	.LFE74-.LFB74
 32050 0068 00000000 		.4byte	.LFB75
 32051 006c C8000000 		.4byte	.LFE75-.LFB75
 32052 0070 00000000 		.4byte	.LFB76
 32053 0074 30010000 		.4byte	.LFE76-.LFB76
 32054 0078 00000000 		.4byte	.LFB77
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 681


 32055 007c 74030000 		.4byte	.LFE77-.LFB77
 32056 0080 00000000 		.4byte	.LFB78
 32057 0084 84000000 		.4byte	.LFE78-.LFB78
 32058 0088 00000000 		.4byte	.LFB79
 32059 008c 88000000 		.4byte	.LFE79-.LFB79
 32060 0090 00000000 		.4byte	.LFB80
 32061 0094 A0000000 		.4byte	.LFE80-.LFB80
 32062 0098 00000000 		.4byte	.LFB81
 32063 009c 3E000000 		.4byte	.LFE81-.LFB81
 32064 00a0 00000000 		.4byte	.LFB82
 32065 00a4 2E000000 		.4byte	.LFE82-.LFB82
 32066 00a8 00000000 		.4byte	.LFB83
 32067 00ac 98000000 		.4byte	.LFE83-.LFB83
 32068 00b0 00000000 		.4byte	.LFB84
 32069 00b4 80000000 		.4byte	.LFE84-.LFB84
 32070 00b8 00000000 		.4byte	.LFB85
 32071 00bc 5C000000 		.4byte	.LFE85-.LFB85
 32072 00c0 00000000 		.4byte	.LFB86
 32073 00c4 10060000 		.4byte	.LFE86-.LFB86
 32074 00c8 00000000 		.4byte	.LFB87
 32075 00cc 38020000 		.4byte	.LFE87-.LFB87
 32076 00d0 00000000 		.4byte	.LFB88
 32077 00d4 28000000 		.4byte	.LFE88-.LFB88
 32078 00d8 00000000 		.4byte	.LFB89
 32079 00dc 78000000 		.4byte	.LFE89-.LFB89
 32080 00e0 00000000 		.4byte	.LFB90
 32081 00e4 B0000000 		.4byte	.LFE90-.LFB90
 32082 00e8 00000000 		.4byte	.LFB91
 32083 00ec B4000000 		.4byte	.LFE91-.LFB91
 32084 00f0 00000000 		.4byte	.LFB92
 32085 00f4 B8000000 		.4byte	.LFE92-.LFB92
 32086 00f8 00000000 		.4byte	.LFB93
 32087 00fc B8000000 		.4byte	.LFE93-.LFB93
 32088 0100 00000000 		.4byte	.LFB94
 32089 0104 5C000000 		.4byte	.LFE94-.LFB94
 32090 0108 00000000 		.4byte	.LFB95
 32091 010c 44020000 		.4byte	.LFE95-.LFB95
 32092 0110 00000000 		.4byte	.LFB96
 32093 0114 BC000000 		.4byte	.LFE96-.LFB96
 32094 0118 00000000 		.4byte	.LFB97
 32095 011c 5C000000 		.4byte	.LFE97-.LFB97
 32096 0120 00000000 		.4byte	.LFB98
 32097 0124 38010000 		.4byte	.LFE98-.LFB98
 32098 0128 00000000 		.4byte	.LFB99
 32099 012c EC000000 		.4byte	.LFE99-.LFB99
 32100 0130 00000000 		.4byte	.LFB100
 32101 0134 64000000 		.4byte	.LFE100-.LFB100
 32102 0138 00000000 		.4byte	.LFB101
 32103 013c A8000000 		.4byte	.LFE101-.LFB101
 32104 0140 00000000 		.4byte	.LFB102
 32105 0144 34000000 		.4byte	.LFE102-.LFB102
 32106 0148 00000000 		.4byte	.LFB103
 32107 014c 20000000 		.4byte	.LFE103-.LFB103
 32108 0150 00000000 		.4byte	.LFB104
 32109 0154 6C000000 		.4byte	.LFE104-.LFB104
 32110 0158 00000000 		.4byte	.LFB105
 32111 015c BC010000 		.4byte	.LFE105-.LFB105
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 682


 32112 0160 00000000 		.4byte	.LFB106
 32113 0164 60000000 		.4byte	.LFE106-.LFB106
 32114 0168 00000000 		.4byte	.LFB107
 32115 016c 98050000 		.4byte	.LFE107-.LFB107
 32116 0170 00000000 		.4byte	.LFB108
 32117 0174 8C000000 		.4byte	.LFE108-.LFB108
 32118 0178 00000000 		.4byte	.LFB109
 32119 017c EC000000 		.4byte	.LFE109-.LFB109
 32120 0180 00000000 		.4byte	.LFB110
 32121 0184 5C000000 		.4byte	.LFE110-.LFB110
 32122 0188 00000000 		.4byte	.LFB111
 32123 018c C0000000 		.4byte	.LFE111-.LFB111
 32124 0190 00000000 		.4byte	.LFB112
 32125 0194 12000000 		.4byte	.LFE112-.LFB112
 32126 0198 00000000 		.4byte	.LFB113
 32127 019c 64010000 		.4byte	.LFE113-.LFB113
 32128 01a0 00000000 		.4byte	.LFB114
 32129 01a4 18010000 		.4byte	.LFE114-.LFB114
 32130 01a8 00000000 		.4byte	.LFB115
 32131 01ac 74010000 		.4byte	.LFE115-.LFB115
 32132 01b0 00000000 		.4byte	.LFB116
 32133 01b4 24000000 		.4byte	.LFE116-.LFB116
 32134 01b8 00000000 		.4byte	.LFB117
 32135 01bc 90000000 		.4byte	.LFE117-.LFB117
 32136 01c0 00000000 		.4byte	0
 32137 01c4 00000000 		.4byte	0
 32138              		.section	.debug_ranges,"",%progbits
 32139              	.Ldebug_ranges0:
 32140 0000 00000000 		.4byte	.LFB64
 32141 0004 E0040000 		.4byte	.LFE64
 32142 0008 00000000 		.4byte	.LFB65
 32143 000c 22000000 		.4byte	.LFE65
 32144 0010 00000000 		.4byte	.LFB66
 32145 0014 02010000 		.4byte	.LFE66
 32146 0018 00000000 		.4byte	.LFB67
 32147 001c 50310000 		.4byte	.LFE67
 32148 0020 00000000 		.4byte	.LFB68
 32149 0024 B4180000 		.4byte	.LFE68
 32150 0028 00000000 		.4byte	.LFB69
 32151 002c 8C140000 		.4byte	.LFE69
 32152 0030 00000000 		.4byte	.LFB70
 32153 0034 F40D0000 		.4byte	.LFE70
 32154 0038 00000000 		.4byte	.LFB71
 32155 003c 84000000 		.4byte	.LFE71
 32156 0040 00000000 		.4byte	.LFB72
 32157 0044 781C0000 		.4byte	.LFE72
 32158 0048 00000000 		.4byte	.LFB73
 32159 004c B4030000 		.4byte	.LFE73
 32160 0050 00000000 		.4byte	.LFB74
 32161 0054 7C120000 		.4byte	.LFE74
 32162 0058 00000000 		.4byte	.LFB75
 32163 005c C8000000 		.4byte	.LFE75
 32164 0060 00000000 		.4byte	.LFB76
 32165 0064 30010000 		.4byte	.LFE76
 32166 0068 00000000 		.4byte	.LFB77
 32167 006c 74030000 		.4byte	.LFE77
 32168 0070 00000000 		.4byte	.LFB78
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 683


 32169 0074 84000000 		.4byte	.LFE78
 32170 0078 00000000 		.4byte	.LFB79
 32171 007c 88000000 		.4byte	.LFE79
 32172 0080 00000000 		.4byte	.LFB80
 32173 0084 A0000000 		.4byte	.LFE80
 32174 0088 00000000 		.4byte	.LFB81
 32175 008c 3E000000 		.4byte	.LFE81
 32176 0090 00000000 		.4byte	.LFB82
 32177 0094 2E000000 		.4byte	.LFE82
 32178 0098 00000000 		.4byte	.LFB83
 32179 009c 98000000 		.4byte	.LFE83
 32180 00a0 00000000 		.4byte	.LFB84
 32181 00a4 80000000 		.4byte	.LFE84
 32182 00a8 00000000 		.4byte	.LFB85
 32183 00ac 5C000000 		.4byte	.LFE85
 32184 00b0 00000000 		.4byte	.LFB86
 32185 00b4 10060000 		.4byte	.LFE86
 32186 00b8 00000000 		.4byte	.LFB87
 32187 00bc 38020000 		.4byte	.LFE87
 32188 00c0 00000000 		.4byte	.LFB88
 32189 00c4 28000000 		.4byte	.LFE88
 32190 00c8 00000000 		.4byte	.LFB89
 32191 00cc 78000000 		.4byte	.LFE89
 32192 00d0 00000000 		.4byte	.LFB90
 32193 00d4 B0000000 		.4byte	.LFE90
 32194 00d8 00000000 		.4byte	.LFB91
 32195 00dc B4000000 		.4byte	.LFE91
 32196 00e0 00000000 		.4byte	.LFB92
 32197 00e4 B8000000 		.4byte	.LFE92
 32198 00e8 00000000 		.4byte	.LFB93
 32199 00ec B8000000 		.4byte	.LFE93
 32200 00f0 00000000 		.4byte	.LFB94
 32201 00f4 5C000000 		.4byte	.LFE94
 32202 00f8 00000000 		.4byte	.LFB95
 32203 00fc 44020000 		.4byte	.LFE95
 32204 0100 00000000 		.4byte	.LFB96
 32205 0104 BC000000 		.4byte	.LFE96
 32206 0108 00000000 		.4byte	.LFB97
 32207 010c 5C000000 		.4byte	.LFE97
 32208 0110 00000000 		.4byte	.LFB98
 32209 0114 38010000 		.4byte	.LFE98
 32210 0118 00000000 		.4byte	.LFB99
 32211 011c EC000000 		.4byte	.LFE99
 32212 0120 00000000 		.4byte	.LFB100
 32213 0124 64000000 		.4byte	.LFE100
 32214 0128 00000000 		.4byte	.LFB101
 32215 012c A8000000 		.4byte	.LFE101
 32216 0130 00000000 		.4byte	.LFB102
 32217 0134 34000000 		.4byte	.LFE102
 32218 0138 00000000 		.4byte	.LFB103
 32219 013c 20000000 		.4byte	.LFE103
 32220 0140 00000000 		.4byte	.LFB104
 32221 0144 6C000000 		.4byte	.LFE104
 32222 0148 00000000 		.4byte	.LFB105
 32223 014c BC010000 		.4byte	.LFE105
 32224 0150 00000000 		.4byte	.LFB106
 32225 0154 60000000 		.4byte	.LFE106
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 684


 32226 0158 00000000 		.4byte	.LFB107
 32227 015c 98050000 		.4byte	.LFE107
 32228 0160 00000000 		.4byte	.LFB108
 32229 0164 8C000000 		.4byte	.LFE108
 32230 0168 00000000 		.4byte	.LFB109
 32231 016c EC000000 		.4byte	.LFE109
 32232 0170 00000000 		.4byte	.LFB110
 32233 0174 5C000000 		.4byte	.LFE110
 32234 0178 00000000 		.4byte	.LFB111
 32235 017c C0000000 		.4byte	.LFE111
 32236 0180 00000000 		.4byte	.LFB112
 32237 0184 12000000 		.4byte	.LFE112
 32238 0188 00000000 		.4byte	.LFB113
 32239 018c 64010000 		.4byte	.LFE113
 32240 0190 00000000 		.4byte	.LFB114
 32241 0194 18010000 		.4byte	.LFE114
 32242 0198 00000000 		.4byte	.LFB115
 32243 019c 74010000 		.4byte	.LFE115
 32244 01a0 00000000 		.4byte	.LFB116
 32245 01a4 24000000 		.4byte	.LFE116
 32246 01a8 00000000 		.4byte	.LFB117
 32247 01ac 90000000 		.4byte	.LFE117
 32248 01b0 00000000 		.4byte	0
 32249 01b4 00000000 		.4byte	0
 32250              		.section	.debug_line,"",%progbits
 32251              	.Ldebug_line0:
 32252 0000 091E0000 		.section	.debug_str,"MS",%progbits,1
 32252      0200C001 
 32252      00000201 
 32252      FB0E0D00 
 32252      01010101 
 32253              	.LASF212:
 32254 0000 696E666F 		.ascii	"infoSend\000"
 32254      53656E64 
 32254      00
 32255              	.LASF263:
 32256 0009 69645F73 		.ascii	"id_str\000"
 32256      747200
 32257              	.LASF25:
 32258 0010 73697A65 		.ascii	"sizetype\000"
 32258      74797065 
 32258      00
 32259              	.LASF33:
 32260 0019 434D445F 		.ascii	"CMD_INIT_MEM\000"
 32260      494E4954 
 32260      5F4D454D 
 32260      00
 32261              	.LASF329:
 32262 0026 676C5F63 		.ascii	"gl_c\000"
 32262      00
 32263              	.LASF192:
 32264 002b 77726973 		.ascii	"wrist_direction_association\000"
 32264      745F6469 
 32264      72656374 
 32264      696F6E5F 
 32264      6173736F 
 32265              	.LASF63:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 685


 32266 0047 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS_ADV\000"
 32266      545F4D4F 
 32266      44455F45 
 32266      4D475F46 
 32266      4346535F 
 32267              	.LASF36:
 32268 005f 434D445F 		.ascii	"CMD_ACTIVATE\000"
 32268      41435449 
 32268      56415445 
 32268      00
 32269              	.LASF197:
 32270 006c 75736572 		.ascii	"user\000"
 32270      00
 32271              	.LASF341:
 32272 0071 665F6572 		.ascii	"f_err_emg_1\000"
 32272      725F656D 
 32272      675F3100 
 32273              	.LASF342:
 32274 007d 665F6572 		.ascii	"f_err_emg_2\000"
 32274      725F656D 
 32274      675F3200 
 32275              	.LASF347:
 32276 0089 73746F70 		.ascii	"stop_master_device\000"
 32276      5F6D6173 
 32276      7465725F 
 32276      64657669 
 32276      636500
 32277              	.LASF11:
 32278 009c 696E7433 		.ascii	"int32_t\000"
 32278      325F7400 
 32279              	.LASF358:
 32280 00a4 675F7278 		.ascii	"g_rx\000"
 32280      00
 32281              	.LASF100:
 32282 00a9 73745F64 		.ascii	"st_data\000"
 32282      61746100 
 32283              	.LASF294:
 32284 00b1 77726974 		.ascii	"writeStatus\000"
 32284      65537461 
 32284      74757300 
 32285              	.LASF15:
 32286 00bd 75696E74 		.ascii	"uint32\000"
 32286      333200
 32287              	.LASF346:
 32288 00c4 636D645F 		.ascii	"cmd_set_baudrate\000"
 32288      7365745F 
 32288      62617564 
 32288      72617465 
 32288      00
 32289              	.LASF335:
 32290 00d5 6169725F 		.ascii	"air_chambers_control\000"
 32290      6368616D 
 32290      62657273 
 32290      5F636F6E 
 32290      74726F6C 
 32291              	.LASF271:
 32292 00ea 7370695F 		.ascii	"spi_read_delay_str_len\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 686


 32292      72656164 
 32292      5F64656C 
 32292      61795F73 
 32292      74725F6C 
 32293              	.LASF198:
 32294 0101 4A4F595F 		.ascii	"JOY_spec\000"
 32294      73706563 
 32294      00
 32295              	.LASF273:
 32296 010a 70726570 		.ascii	"prepare_generic_info\000"
 32296      6172655F 
 32296      67656E65 
 32296      7269635F 
 32296      696E666F 
 32297              	.LASF136:
 32298 011f 706F735F 		.ascii	"pos_lim_inf\000"
 32298      6C696D5F 
 32298      696E6600 
 32299              	.LASF238:
 32300 012b 5345434F 		.ascii	"SECOND_MOTOR_IDX\000"
 32300      4E445F4D 
 32300      4F544F52 
 32300      5F494458 
 32300      00
 32301              	.LASF322:
 32302 013c 636D645F 		.ascii	"cmd_get_inputs\000"
 32302      6765745F 
 32302      696E7075 
 32302      747300
 32303              	.LASF62:
 32304 014b 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS\000"
 32304      545F4D4F 
 32304      44455F45 
 32304      4D475F46 
 32304      43465300 
 32305              	.LASF140:
 32306 015f 63757272 		.ascii	"curr_lookup\000"
 32306      5F6C6F6F 
 32306      6B757000 
 32307              	.LASF108:
 32308 016b 72657374 		.ascii	"rest_counter\000"
 32308      5F636F75 
 32308      6E746572 
 32308      00
 32309              	.LASF327:
 32310 0178 636D645F 		.ascii	"cmd_get_imu_readings\000"
 32310      6765745F 
 32310      696D755F 
 32310      72656164 
 32310      696E6773 
 32311              	.LASF182:
 32312 018d 73745F4D 		.ascii	"st_MASTER_spec\000"
 32312      41535445 
 32312      525F7370 
 32312      656300
 32313              	.LASF266:
 32314 019c 69645F73 		.ascii	"id_str_len\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 687


 32314      74725F6C 
 32314      656E00
 32315              	.LASF61:
 32316 01a7 494E5055 		.ascii	"INPUT_MODE_EMG_INTEGRAL\000"
 32316      545F4D4F 
 32316      44455F45 
 32316      4D475F49 
 32316      4E544547 
 32317              	.LASF240:
 32318 01bf 6D5F746D 		.ascii	"m_tmp\000"
 32318      7000
 32319              	.LASF16:
 32320 01c5 696E7438 		.ascii	"int8\000"
 32320      00
 32321              	.LASF217:
 32322 01ca 6765745F 		.ascii	"get_param_list\000"
 32322      70617261 
 32322      6D5F6C69 
 32322      737400
 32323              	.LASF307:
 32324 01d9 636D645F 		.ascii	"cmd_get_accelerations\000"
 32324      6765745F 
 32324      61636365 
 32324      6C657261 
 32324      74696F6E 
 32325              	.LASF326:
 32326 01ef 636D645F 		.ascii	"cmd_get_emg\000"
 32326      6765745F 
 32326      656D6700 
 32327              	.LASF155:
 32328 01fb 73745F65 		.ascii	"st_emg\000"
 32328      6D6700
 32329              	.LASF106:
 32330 0202 706F7369 		.ascii	"position_hist\000"
 32330      74696F6E 
 32330      5F686973 
 32330      7400
 32331              	.LASF205:
 32332 0210 74656D70 		.ascii	"temp_value\000"
 32332      5F76616C 
 32332      756500
 32333              	.LASF389:
 32334 021b 72657375 		.ascii	"result\000"
 32334      6C7400
 32335              	.LASF265:
 32336 0222 7370695F 		.ascii	"spi_read_delay_str\000"
 32336      72656164 
 32336      5F64656C 
 32336      61795F73 
 32336      747200
 32337              	.LASF189:
 32338 0235 73745F57 		.ascii	"st_WR_spec\000"
 32338      525F7370 
 32338      656300
 32339              	.LASF103:
 32340 0240 72656164 		.ascii	"ready\000"
 32340      7900
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 688


 32341              	.LASF152:
 32342 0246 456E635F 		.ascii	"Enc_idx_use_for_control\000"
 32342      6964785F 
 32342      7573655F 
 32342      666F725F 
 32342      636F6E74 
 32343              	.LASF49:
 32344 025e 434D445F 		.ascii	"CMD_GET_JOYSTICK\000"
 32344      4745545F 
 32344      4A4F5953 
 32344      5449434B 
 32344      00
 32345              	.LASF60:
 32346 026f 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL\000"
 32346      545F4D4F 
 32346      44455F45 
 32346      4D475F50 
 32346      524F504F 
 32347              	.LASF117:
 32348 028b 7573655F 		.ascii	"use_2nd_motor_flag\000"
 32348      326E645F 
 32348      6D6F746F 
 32348      725F666C 
 32348      616700
 32349              	.LASF318:
 32350 029e 745F7374 		.ascii	"t_start\000"
 32350      61727400 
 32351              	.LASF162:
 32352 02a6 72656164 		.ascii	"read_imu_flag\000"
 32352      5F696D75 
 32352      5F666C61 
 32352      6700
 32353              	.LASF362:
 32354 02b4 74696D65 		.ascii	"timer_value\000"
 32354      725F7661 
 32354      6C756500 
 32355              	.LASF4:
 32356 02c0 6C6F6E67 		.ascii	"long int\000"
 32356      20696E74 
 32356      00
 32357              	.LASF195:
 32358 02c9 756E7573 		.ascii	"unused_bytes1\000"
 32358      65645F62 
 32358      79746573 
 32358      3100
 32359              	.LASF345:
 32360 02d7 6D6F746F 		.ascii	"motor_idx\000"
 32360      725F6964 
 32360      7800
 32361              	.LASF116:
 32362 02e1 72657365 		.ascii	"reset_counters\000"
 32362      745F636F 
 32362      756E7465 
 32362      727300
 32363              	.LASF172:
 32364 02f0 75736572 		.ascii	"user_emg\000"
 32364      5F656D67 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 689


 32364      00
 32365              	.LASF304:
 32366 02f9 7365745A 		.ascii	"setZeros\000"
 32366      65726F73 
 32366      00
 32367              	.LASF121:
 32368 0302 756E7573 		.ascii	"unused_bytes\000"
 32368      65645F62 
 32368      79746573 
 32368      00
 32369              	.LASF201:
 32370 030f 61636365 		.ascii	"accel_value\000"
 32370      6C5F7661 
 32370      6C756500 
 32371              	.LASF221:
 32372 031b 4E554D5F 		.ascii	"NUM_ITEMS\000"
 32372      4954454D 
 32372      5300
 32373              	.LASF104:
 32374 0325 73745F63 		.ascii	"st_counters\000"
 32374      6F756E74 
 32374      65727300 
 32375              	.LASF244:
 32376 0331 4D454D5F 		.ascii	"MEM_P\000"
 32376      5000
 32377              	.LASF19:
 32378 0337 666C6F61 		.ascii	"float32\000"
 32378      74333200 
 32379              	.LASF333:
 32380 033f 636D645F 		.ascii	"cmd_get_ADC_map\000"
 32380      6765745F 
 32380      4144435F 
 32380      6D617000 
 32381              	.LASF41:
 32382 034f 434D445F 		.ascii	"CMD_GET_CURRENTS\000"
 32382      4745545F 
 32382      43555252 
 32382      454E5453 
 32382      00
 32383              	.LASF105:
 32384 0360 656D675F 		.ascii	"emg_counter\000"
 32384      636F756E 
 32384      74657200 
 32385              	.LASF334:
 32386 036c 636D645F 		.ascii	"cmd_get_ADC_raw\000"
 32386      6765745F 
 32386      4144435F 
 32386      72617700 
 32387              	.LASF253:
 32388 037c 6175785F 		.ascii	"aux_float2\000"
 32388      666C6F61 
 32388      743200
 32389              	.LASF321:
 32390 0387 636D645F 		.ascii	"cmd_ping\000"
 32390      70696E67 
 32390      00
 32391              	.LASF272:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 690


 32392 0390 7370695F 		.ascii	"spi_delay_menu_len\000"
 32392      64656C61 
 32392      795F6D65 
 32392      6E755F6C 
 32392      656E00
 32393              	.LASF251:
 32394 03a3 7365745F 		.ascii	"set_custom_param\000"
 32394      63757374 
 32394      6F6D5F70 
 32394      6172616D 
 32394      00
 32395              	.LASF303:
 32396 03b4 6D656D49 		.ascii	"memInit_OtbkActWristMs\000"
 32396      6E69745F 
 32396      4F74626B 
 32396      41637457 
 32396      72697374 
 32397              	.LASF0:
 32398 03cb 7369676E 		.ascii	"signed char\000"
 32398      65642063 
 32398      68617200 
 32399              	.LASF171:
 32400 03d7 75736572 		.ascii	"user_code_string\000"
 32400      5F636F64 
 32400      655F7374 
 32400      72696E67 
 32400      00
 32401              	.LASF206:
 32402 03e8 73745F63 		.ascii	"st_calib\000"
 32402      616C6962 
 32402      00
 32403              	.LASF339:
 32404 03f1 6572725F 		.ascii	"err_emg_1\000"
 32404      656D675F 
 32404      3100
 32405              	.LASF292:
 32406 03fb 6D656D53 		.ascii	"memStore\000"
 32406      746F7265 
 32406      00
 32407              	.LASF380:
 32408 0404 73696E67 		.ascii	"single_imu_size\000"
 32408      6C655F69 
 32408      6D755F73 
 32408      697A6500 
 32409              	.LASF71:
 32410 0414 6D6F746F 		.ascii	"motor_supply_type\000"
 32410      725F7375 
 32410      70706C79 
 32410      5F747970 
 32410      6500
 32411              	.LASF320:
 32412 0426 72656164 		.ascii	"read_flag\000"
 32412      5F666C61 
 32412      6700
 32413              	.LASF371:
 32414 0430 4144435F 		.ascii	"ADC_buf\000"
 32414      62756600 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 691


 32415              	.LASF368:
 32416 0438 696E7465 		.ascii	"interrupt_flag\000"
 32416      72727570 
 32416      745F666C 
 32416      616700
 32417              	.LASF277:
 32418 0447 73746570 		.ascii	"step\000"
 32418      00
 32419              	.LASF1:
 32420 044c 756E7369 		.ascii	"unsigned char\000"
 32420      676E6564 
 32420      20636861 
 32420      7200
 32421              	.LASF146:
 32422 045a 6E6F745F 		.ascii	"not_revers_motor_flag\000"
 32422      72657665 
 32422      72735F6D 
 32422      6F746F72 
 32422      5F666C61 
 32423              	.LASF351:
 32424 0470 675F7265 		.ascii	"g_refNew\000"
 32424      664E6577 
 32424      00
 32425              	.LASF115:
 32426 0479 72696768 		.ascii	"right_left\000"
 32426      745F6C65 
 32426      667400
 32427              	.LASF29:
 32428 0484 434D445F 		.ascii	"CMD_STORE_DEFAULT_PARAMS\000"
 32428      53544F52 
 32428      455F4445 
 32428      4641554C 
 32428      545F5041 
 32429              	.LASF144:
 32430 049d 656E636F 		.ascii	"encoder_line\000"
 32430      6465725F 
 32430      6C696E65 
 32430      00
 32431              	.LASF267:
 32432 04aa 6E5F696D 		.ascii	"n_imu_str_len\000"
 32432      755F7374 
 32432      725F6C65 
 32432      6E00
 32433              	.LASF270:
 32434 04b8 696D755F 		.ascii	"imu_table_str_len\000"
 32434      7461626C 
 32434      655F7374 
 32434      725F6C65 
 32434      6E00
 32435              	.LASF290:
 32436 04ca 76616C75 		.ascii	"value\000"
 32436      6500
 32437              	.LASF200:
 32438 04d0 666C6167 		.ascii	"flags\000"
 32438      7300
 32439              	.LASF99:
 32440 04d6 70726573 		.ascii	"pressure\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 692


 32440      73757265 
 32440      00
 32441              	.LASF37:
 32442 04df 434D445F 		.ascii	"CMD_GET_ACTIVATE\000"
 32442      4745545F 
 32442      41435449 
 32442      56415445 
 32442      00
 32443              	.LASF22:
 32444 04f0 63686172 		.ascii	"char\000"
 32444      00
 32445              	.LASF139:
 32446 04f5 6D61785F 		.ascii	"max_step_pos\000"
 32446      73746570 
 32446      5F706F73 
 32446      00
 32447              	.LASF381:
 32448 0502 675F696D 		.ascii	"g_imu\000"
 32448      7500
 32449              	.LASF296:
 32450 0508 7265745F 		.ascii	"ret_val\000"
 32450      76616C00 
 32451              	.LASF250:
 32452 0510 6D656E75 		.ascii	"menu_idx\000"
 32452      5F696478 
 32452      00
 32453              	.LASF259:
 32454 0519 73746172 		.ascii	"start_byte\000"
 32454      745F6279 
 32454      746500
 32455              	.LASF256:
 32456 0524 6E756D5F 		.ascii	"num_mag_cal_params\000"
 32456      6D61675F 
 32456      63616C5F 
 32456      70617261 
 32456      6D7300
 32457              	.LASF145:
 32458 0537 70776D5F 		.ascii	"pwm_rate_limiter\000"
 32458      72617465 
 32458      5F6C696D 
 32458      69746572 
 32458      00
 32459              	.LASF125:
 32460 0548 6B5F645F 		.ascii	"k_d_c\000"
 32460      6300
 32461              	.LASF98:
 32462 054e 73745F66 		.ascii	"st_fb_meas\000"
 32462      625F6D65 
 32462      617300
 32463              	.LASF214:
 32464 0559 7061636B 		.ascii	"packet_string\000"
 32464      65745F73 
 32464      7472696E 
 32464      6700
 32465              	.LASF150:
 32466 0567 6D5F6D75 		.ascii	"m_mult\000"
 32466      6C7400
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 693


 32467              	.LASF124:
 32468 056e 6B5F695F 		.ascii	"k_i_c\000"
 32468      6300
 32469              	.LASF280:
 32470 0574 70726570 		.ascii	"prepare_SD_info\000"
 32470      6172655F 
 32470      53445F69 
 32470      6E666F00 
 32471              	.LASF293:
 32472 0584 64697370 		.ascii	"displacement\000"
 32472      6C616365 
 32472      6D656E74 
 32472      00
 32473              	.LASF287:
 32474 0591 64617461 		.ascii	"data_length\000"
 32474      5F6C656E 
 32474      67746800 
 32475              	.LASF137:
 32476 059d 706F735F 		.ascii	"pos_lim_sup\000"
 32476      6C696D5F 
 32476      73757000 
 32477              	.LASF158:
 32478 05a9 656D675F 		.ascii	"emg_speed\000"
 32478      73706565 
 32478      6400
 32479              	.LASF176:
 32480 05b3 72657374 		.ascii	"rest_vel\000"
 32480      5F76656C 
 32480      00
 32481              	.LASF227:
 32482 05bc 7061636B 		.ascii	"packet_data\000"
 32482      65745F64 
 32482      61746100 
 32483              	.LASF112:
 32484 05c8 73745F64 		.ascii	"st_device\000"
 32484      65766963 
 32484      6500
 32485              	.LASF376:
 32486 05d2 7046696C 		.ascii	"pFile\000"
 32486      6500
 32487              	.LASF169:
 32488 05d8 4144435F 		.ascii	"ADC_conf\000"
 32488      636F6E66 
 32488      00
 32489              	.LASF284:
 32490 05e1 636F6D6D 		.ascii	"commWrite\000"
 32490      57726974 
 32490      6500
 32491              	.LASF348:
 32492 05eb 64656163 		.ascii	"deactivate_slaves\000"
 32492      74697661 
 32492      74655F73 
 32492      6C617665 
 32492      7300
 32493              	.LASF295:
 32494 05fd 70616765 		.ascii	"pages\000"
 32494      7300
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 694


 32495              	.LASF299:
 32496 0603 6D656D49 		.ascii	"memInit\000"
 32496      6E697400 
 32497              	.LASF127:
 32498 060b 6B5F695F 		.ascii	"k_i_dl\000"
 32498      646C00
 32499              	.LASF38:
 32500 0612 434D445F 		.ascii	"CMD_SET_INPUTS\000"
 32500      5345545F 
 32500      494E5055 
 32500      545300
 32501              	.LASF101:
 32502 0621 62756666 		.ascii	"buffer\000"
 32502      657200
 32503              	.LASF129:
 32504 0628 6B5F705F 		.ascii	"k_p_c_dl\000"
 32504      635F646C 
 32504      00
 32505              	.LASF305:
 32506 0631 636D645F 		.ascii	"cmd_get_measurements\000"
 32506      6765745F 
 32506      6D656173 
 32506      7572656D 
 32506      656E7473 
 32507              	.LASF209:
 32508 0646 73706565 		.ascii	"speed\000"
 32508      6400
 32509              	.LASF213:
 32510 064c 72785F63 		.ascii	"rx_cmd\000"
 32510      6D6400
 32511              	.LASF86:
 32512 0653 54595045 		.ascii	"TYPE_DOUBLE\000"
 32512      5F444F55 
 32512      424C4500 
 32513              	.LASF336:
 32514 065f 736C6176 		.ascii	"slave_motor_idx\000"
 32514      655F6D6F 
 32514      746F725F 
 32514      69647800 
 32515              	.LASF353:
 32516 066f 675F6D65 		.ascii	"g_meas\000"
 32516      617300
 32517              	.LASF310:
 32518 0676 6C617374 		.ascii	"last_aux_int16\000"
 32518      5F617578 
 32518      5F696E74 
 32518      313600
 32519              	.LASF75:
 32520 0685 41434B5F 		.ascii	"ACK_ERROR\000"
 32520      4552524F 
 32520      5200
 32521              	.LASF373:
 32522 068f 64617461 		.ascii	"data_encoder_raw\000"
 32522      5F656E63 
 32522      6F646572 
 32522      5F726177 
 32522      00
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 695


 32523              	.LASF58:
 32524 06a0 494E5055 		.ascii	"INPUT_MODE_EXTERNAL\000"
 32524      545F4D4F 
 32524      44455F45 
 32524      58544552 
 32524      4E414C00 
 32525              	.LASF242:
 32526 06b4 696E6465 		.ascii	"index\000"
 32526      7800
 32527              	.LASF187:
 32528 06ba 6D617869 		.ascii	"maximum_pressure_kPa\000"
 32528      6D756D5F 
 32528      70726573 
 32528      73757265 
 32528      5F6B5061 
 32529              	.LASF177:
 32530 06cf 72657374 		.ascii	"rest_position_flag\000"
 32530      5F706F73 
 32530      6974696F 
 32530      6E5F666C 
 32530      616700
 32531              	.LASF179:
 32532 06e2 6A6F7973 		.ascii	"joystick_closure_speed\000"
 32532      7469636B 
 32532      5F636C6F 
 32532      73757265 
 32532      5F737065 
 32533              	.LASF130:
 32534 06f9 6B5F695F 		.ascii	"k_i_c_dl\000"
 32534      635F646C 
 32534      00
 32535              	.LASF316:
 32536 0702 636F6D6D 		.ascii	"commReadResCurrFromSH\000"
 32536      52656164 
 32536      52657343 
 32536      75727246 
 32536      726F6D53 
 32537              	.LASF315:
 32538 0718 636D645F 		.ascii	"cmd_get_currents_for_cuff\000"
 32538      6765745F 
 32538      63757272 
 32538      656E7473 
 32538      5F666F72 
 32539              	.LASF262:
 32540 0732 6D61675F 		.ascii	"mag_param_str\000"
 32540      70617261 
 32540      6D5F7374 
 32540      7200
 32541              	.LASF370:
 32542 0740 72657365 		.ascii	"reset_PSoC_flag\000"
 32542      745F5053 
 32542      6F435F66 
 32542      6C616700 
 32543              	.LASF343:
 32544 0750 6F74626B 		.ascii	"otbk_act_wrist_control\000"
 32544      5F616374 
 32544      5F777269 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 696


 32544      73745F63 
 32544      6F6E7472 
 32545              	.LASF87:
 32546 0767 54595045 		.ascii	"TYPE_STRING\000"
 32546      5F535452 
 32546      494E4700 
 32547              	.LASF70:
 32548 0773 43555252 		.ascii	"CURR_AND_POS_CONTROL\000"
 32548      5F414E44 
 32548      5F504F53 
 32548      5F434F4E 
 32548      54524F4C 
 32549              	.LASF28:
 32550 0788 434D445F 		.ascii	"CMD_STORE_PARAMS\000"
 32550      53544F52 
 32550      455F5041 
 32550      52414D53 
 32550      00
 32551              	.LASF224:
 32552 0799 50415241 		.ascii	"PARAMS_STR\000"
 32552      4D535F53 
 32552      545200
 32553              	.LASF207:
 32554 07a4 656E6162 		.ascii	"enabled\000"
 32554      6C656400 
 32555              	.LASF7:
 32556 07ac 6C6F6E67 		.ascii	"long unsigned int\000"
 32556      20756E73 
 32556      69676E65 
 32556      6420696E 
 32556      7400
 32557              	.LASF110:
 32558 07be 746F7461 		.ascii	"total_time_on\000"
 32558      6C5F7469 
 32558      6D655F6F 
 32558      6E00
 32559              	.LASF32:
 32560 07cc 434D445F 		.ascii	"CMD_BOOTLOADER\000"
 32560      424F4F54 
 32560      4C4F4144 
 32560      455200
 32561              	.LASF181:
 32562 07db 6A6F7973 		.ascii	"joystick_gains\000"
 32562      7469636B 
 32562      5F676169 
 32562      6E7300
 32563              	.LASF94:
 32564 07ea 686F6C64 		.ascii	"hold_curr\000"
 32564      5F637572 
 32564      7200
 32565              	.LASF64:
 32566 07f4 494E5055 		.ascii	"INPUT_MODE_JOYSTICK\000"
 32566      545F4D4F 
 32566      44455F4A 
 32566      4F595354 
 32566      49434B00 
 32567              	.LASF111:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 697


 32568 0808 746F7461 		.ascii	"total_time_rest\000"
 32568      6C5F7469 
 32568      6D655F72 
 32568      65737400 
 32569              	.LASF216:
 32570 0818 7374725F 		.ascii	"str_sd_data\000"
 32570      73645F64 
 32570      61746100 
 32571              	.LASF132:
 32572 0824 61637469 		.ascii	"activ\000"
 32572      7600
 32573              	.LASF226:
 32574 082a 4D454E55 		.ascii	"MENU_STR\000"
 32574      5F535452 
 32574      00
 32575              	.LASF149:
 32576 0833 6D5F6F66 		.ascii	"m_off\000"
 32576      6600
 32577              	.LASF76:
 32578 0839 41434B5F 		.ascii	"ACK_OK\000"
 32578      4F4B00
 32579              	.LASF78:
 32580 0840 54595045 		.ascii	"TYPE_FLAG\000"
 32580      5F464C41 
 32580      4700
 32581              	.LASF204:
 32582 084a 71756174 		.ascii	"quat_value\000"
 32582      5F76616C 
 32582      756500
 32583              	.LASF258:
 32584 0855 7061636B 		.ascii	"packet_length\000"
 32584      65745F6C 
 32584      656E6774 
 32584      6800
 32585              	.LASF174:
 32586 0863 72657374 		.ascii	"rest_pos\000"
 32586      5F706F73 
 32586      00
 32587              	.LASF89:
 32588 086c 63757272 		.ascii	"curr\000"
 32588      00
 32589              	.LASF142:
 32590 0871 696E7075 		.ascii	"input_mode\000"
 32590      745F6D6F 
 32590      646500
 32591              	.LASF68:
 32592 087c 434F4E54 		.ascii	"CONTROL_PWM\000"
 32592      524F4C5F 
 32592      50574D00 
 32593              	.LASF43:
 32594 0888 434D445F 		.ascii	"CMD_GET_EMG\000"
 32594      4745545F 
 32594      454D4700 
 32595              	.LASF300:
 32596 0894 6D656D49 		.ascii	"memInit_SoftHandPro\000"
 32596      6E69745F 
 32596      536F6674 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 698


 32596      48616E64 
 32596      50726F00 
 32597              	.LASF31:
 32598 08a8 434D445F 		.ascii	"CMD_GET_INFO\000"
 32598      4745545F 
 32598      494E464F 
 32598      00
 32599              	.LASF254:
 32600 08b5 6765745F 		.ascii	"get_IMU_param_list\000"
 32600      494D555F 
 32600      70617261 
 32600      6D5F6C69 
 32600      737400
 32601              	.LASF330:
 32602 08c8 73696E67 		.ascii	"single_packet\000"
 32602      6C655F70 
 32602      61636B65 
 32602      7400
 32603              	.LASF257:
 32604 08d6 66697273 		.ascii	"first_imu_parameter\000"
 32604      745F696D 
 32604      755F7061 
 32604      72616D65 
 32604      74657200 
 32605              	.LASF42:
 32606 08ea 434D445F 		.ascii	"CMD_GET_CURR_AND_MEAS\000"
 32606      4745545F 
 32606      43555252 
 32606      5F414E44 
 32606      5F4D4541 
 32607              	.LASF385:
 32608 0900 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 32608      43313120 
 32608      352E342E 
 32608      31203230 
 32608      31363036 
 32609 0933 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 32609      20726576 
 32609      6973696F 
 32609      6E203233 
 32609      37373135 
 32610 0966 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 32610      66756E63 
 32610      74696F6E 
 32610      2D736563 
 32610      74696F6E 
 32611              	.LASF91:
 32612 098e 73745F72 		.ascii	"st_ref\000"
 32612      656600
 32613              	.LASF308:
 32614 0995 636D645F 		.ascii	"cmd_get_joystick\000"
 32614      6765745F 
 32614      6A6F7973 
 32614      7469636B 
 32614      00
 32615              	.LASF47:
 32616 09a6 434D445F 		.ascii	"CMD_SET_CUFF_INPUTS\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 699


 32616      5345545F 
 32616      43554646 
 32616      5F494E50 
 32616      55545300 
 32617              	.LASF173:
 32618 09ba 73745F53 		.ascii	"st_SH_spec\000"
 32618      485F7370 
 32618      656300
 32619              	.LASF361:
 32620 09c5 63616C69 		.ascii	"calib\000"
 32620      6200
 32621              	.LASF6:
 32622 09cb 5F5F7569 		.ascii	"__uint32_t\000"
 32622      6E743332 
 32622      5F7400
 32623              	.LASF8:
 32624 09d6 6C6F6E67 		.ascii	"long long int\000"
 32624      206C6F6E 
 32624      6720696E 
 32624      7400
 32625              	.LASF66:
 32626 09e4 53485F63 		.ascii	"SH_control_mode\000"
 32626      6F6E7472 
 32626      6F6C5F6D 
 32626      6F646500 
 32627              	.LASF80:
 32628 09f4 54595045 		.ascii	"TYPE_UINT8\000"
 32628      5F55494E 
 32628      543800
 32629              	.LASF314:
 32630 09ff 636D645F 		.ascii	"cmd_get_currents\000"
 32630      6765745F 
 32630      63757272 
 32630      656E7473 
 32630      00
 32631              	.LASF73:
 32632 0a10 4D41584F 		.ascii	"MAXON_12V\000"
 32632      4E5F3132 
 32632      5600
 32633              	.LASF369:
 32634 0a1a 6368616E 		.ascii	"change_ext_ref_flag\000"
 32634      67655F65 
 32634      78745F72 
 32634      65665F66 
 32634      6C616700 
 32635              	.LASF21:
 32636 0a2e 646F7562 		.ascii	"double\000"
 32636      6C6500
 32637              	.LASF148:
 32638 0a35 456E635F 		.ascii	"Enc_raw_read_conf\000"
 32638      7261775F 
 32638      72656164 
 32638      5F636F6E 
 32638      6600
 32639              	.LASF210:
 32640 0a47 72657065 		.ascii	"repetitions\000"
 32640      74697469 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 700


 32640      6F6E7300 
 32641              	.LASF138:
 32642 0a53 6D61785F 		.ascii	"max_step_neg\000"
 32642      73746570 
 32642      5F6E6567 
 32642      00
 32643              	.LASF184:
 32644 0a60 736C6176 		.ascii	"slave_ID\000"
 32644      655F4944 
 32644      00
 32645              	.LASF367:
 32646 0a69 72657365 		.ascii	"reset_last_value_flag\000"
 32646      745F6C61 
 32646      73745F76 
 32646      616C7565 
 32646      5F666C61 
 32647              	.LASF225:
 32648 0a7f 43555354 		.ascii	"CUSTOM_PARAM_GET\000"
 32648      4F4D5F50 
 32648      4152414D 
 32648      5F474554 
 32648      00
 32649              	.LASF20:
 32650 0a90 666C6F61 		.ascii	"float\000"
 32650      7400
 32651              	.LASF164:
 32652 0a96 494D555F 		.ascii	"IMU_conf\000"
 32652      636F6E66 
 32652      00
 32653              	.LASF243:
 32654 0a9f 50415241 		.ascii	"PARAM_IDX\000"
 32654      4D5F4944 
 32654      5800
 32655              	.LASF95:
 32656 0aa9 73745F61 		.ascii	"st_adc_meas\000"
 32656      64635F6D 
 32656      65617300 
 32657              	.LASF239:
 32658 0ab5 6D5F6164 		.ascii	"m_addr\000"
 32658      647200
 32659              	.LASF360:
 32660 0abc 635F6D65 		.ascii	"c_mem\000"
 32660      6D00
 32661              	.LASF286:
 32662 0ac2 64617461 		.ascii	"data_array\000"
 32662      5F617272 
 32662      617900
 32663              	.LASF10:
 32664 0acd 756E7369 		.ascii	"unsigned int\000"
 32664      676E6564 
 32664      20696E74 
 32664      00
 32665              	.LASF340:
 32666 0ada 6572725F 		.ascii	"err_emg_2\000"
 32666      656D675F 
 32666      3200
 32667              	.LASF301:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 701


 32668 0ae4 6D656D49 		.ascii	"memInit_Master\000"
 32668      6E69745F 
 32668      4D617374 
 32668      657200
 32669              	.LASF228:
 32670 0af3 7061636B 		.ascii	"packet_lenght\000"
 32670      65745F6C 
 32670      656E6768 
 32670      7400
 32671              	.LASF289:
 32672 0b01 73656E64 		.ascii	"sendAcknowledgment\000"
 32672      41636B6E 
 32672      6F776C65 
 32672      64676D65 
 32672      6E7400
 32673              	.LASF279:
 32674 0b14 70726570 		.ascii	"prepare_SD_legend\000"
 32674      6172655F 
 32674      53445F6C 
 32674      6567656E 
 32674      6400
 32675              	.LASF382:
 32676 0b26 4D616743 		.ascii	"MagCal\000"
 32676      616C00
 32677              	.LASF56:
 32678 0b2d 53485F63 		.ascii	"SH_command\000"
 32678      6F6D6D61 
 32678      6E6400
 32679              	.LASF82:
 32680 0b38 54595045 		.ascii	"TYPE_UINT16\000"
 32680      5F55494E 
 32680      54313600 
 32681              	.LASF194:
 32682 0b44 666C6167 		.ascii	"flag\000"
 32682      00
 32683              	.LASF309:
 32684 0b49 636D645F 		.ascii	"cmd_set_inputs\000"
 32684      7365745F 
 32684      696E7075 
 32684      747300
 32685              	.LASF143:
 32686 0b58 636F6E74 		.ascii	"control_mode\000"
 32686      726F6C5F 
 32686      6D6F6465 
 32686      00
 32687              	.LASF324:
 32688 0b65 6F66665F 		.ascii	"off_1\000"
 32688      3100
 32689              	.LASF59:
 32690 0b6b 494E5055 		.ascii	"INPUT_MODE_ENCODER3\000"
 32690      545F4D4F 
 32690      44455F45 
 32690      4E434F44 
 32690      45523300 
 32691              	.LASF285:
 32692 0b7f 636F6D6D 		.ascii	"commWriteID\000"
 32692      57726974 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 702


 32692      65494400 
 32693              	.LASF52:
 32694 0b8b 434D445F 		.ascii	"CMD_GET_ENCODER_CONF\000"
 32694      4745545F 
 32694      454E434F 
 32694      4445525F 
 32694      434F4E46 
 32695              	.LASF161:
 32696 0ba0 73745F69 		.ascii	"st_imu\000"
 32696      6D7500
 32697              	.LASF312:
 32698 0ba7 636D645F 		.ascii	"cmd_get_activate\000"
 32698      6765745F 
 32698      61637469 
 32698      76617465 
 32698      00
 32699              	.LASF337:
 32700 0bb8 656D675F 		.ascii	"emg_activation_velocity_fsm\000"
 32700      61637469 
 32700      76617469 
 32700      6F6E5F76 
 32700      656C6F63 
 32701              	.LASF230:
 32702 0bd4 73747269 		.ascii	"string_lenght\000"
 32702      6E675F6C 
 32702      656E6768 
 32702      7400
 32703              	.LASF85:
 32704 0be2 54595045 		.ascii	"TYPE_FLOAT\000"
 32704      5F464C4F 
 32704      415400
 32705              	.LASF247:
 32706 0bed 43555354 		.ascii	"CUSTOM_PARAM_SET_LIST\000"
 32706      4F4D5F50 
 32706      4152414D 
 32706      5F534554 
 32706      5F4C4953 
 32707              	.LASF222:
 32708 0c03 4E554D5F 		.ascii	"NUM_STRUCT\000"
 32708      53545255 
 32708      435400
 32709              	.LASF252:
 32710 0c0e 6175785F 		.ascii	"aux_uchar\000"
 32710      75636861 
 32710      7200
 32711              	.LASF96:
 32712 0c18 6164645F 		.ascii	"add_emg\000"
 32712      656D6700 
 32713              	.LASF81:
 32714 0c20 54595045 		.ascii	"TYPE_INT16\000"
 32714      5F494E54 
 32714      313600
 32715              	.LASF234:
 32716 0c2b 6175785F 		.ascii	"aux_uint16\000"
 32716      75696E74 
 32716      313600
 32717              	.LASF156:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 703


 32718 0c36 656D675F 		.ascii	"emg_threshold\000"
 32718      74687265 
 32718      73686F6C 
 32718      6400
 32719              	.LASF46:
 32720 0c44 434D445F 		.ascii	"CMD_GET_CURR_DIFF\000"
 32720      4745545F 
 32720      43555252 
 32720      5F444946 
 32720      4600
 32721              	.LASF107:
 32722 0c56 63757272 		.ascii	"current_hist\000"
 32722      656E745F 
 32722      68697374 
 32722      00
 32723              	.LASF69:
 32724 0c63 434F4E54 		.ascii	"CONTROL_CURRENT\000"
 32724      524F4C5F 
 32724      43555252 
 32724      454E5400 
 32725              	.LASF24:
 32726 0c73 6C6F6E67 		.ascii	"long double\000"
 32726      20646F75 
 32726      626C6500 
 32727              	.LASF84:
 32728 0c7f 54595045 		.ascii	"TYPE_UINT32\000"
 32728      5F55494E 
 32728      54333200 
 32729              	.LASF185:
 32730 0c8b 73745F46 		.ascii	"st_FB_spec\000"
 32730      425F7370 
 32730      656300
 32731              	.LASF219:
 32732 0c96 5641525F 		.ascii	"VAR_P\000"
 32732      5000
 32733              	.LASF246:
 32734 0c9c 43555354 		.ascii	"CUSTOM_PARAM_GET_LIST\000"
 32734      4F4D5F50 
 32734      4152414D 
 32734      5F474554 
 32734      5F4C4953 
 32735              	.LASF153:
 32736 0cb2 6D6F746F 		.ascii	"motor_handle_ratio\000"
 32736      725F6861 
 32736      6E646C65 
 32736      5F726174 
 32736      696F00
 32737              	.LASF288:
 32738 0cc5 63686563 		.ascii	"checksum\000"
 32738      6B73756D 
 32738      00
 32739              	.LASF352:
 32740 0cce 675F7265 		.ascii	"g_refOld\000"
 32740      664F6C64 
 32740      00
 32741              	.LASF35:
 32742 0cd7 434D445F 		.ascii	"CMD_HAND_CALIBRATE\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 704


 32742      48414E44 
 32742      5F43414C 
 32742      49425241 
 32742      544500
 32743              	.LASF202:
 32744 0cea 6779726F 		.ascii	"gyro_value\000"
 32744      5F76616C 
 32744      756500
 32745              	.LASF166:
 32746 0cf5 63757272 		.ascii	"curr_time\000"
 32746      5F74696D 
 32746      6500
 32747              	.LASF151:
 32748 0cff 646F7562 		.ascii	"double_encoder_on_off\000"
 32748      6C655F65 
 32748      6E636F64 
 32748      65725F6F 
 32748      6E5F6F66 
 32749              	.LASF344:
 32750 0d15 64726976 		.ascii	"drive_slave\000"
 32750      655F736C 
 32750      61766500 
 32751              	.LASF163:
 32752 0d21 5350495F 		.ascii	"SPI_read_delay\000"
 32752      72656164 
 32752      5F64656C 
 32752      617900
 32753              	.LASF74:
 32754 0d30 61636B6E 		.ascii	"acknowledgment_values\000"
 32754      6F776C65 
 32754      64676D65 
 32754      6E745F76 
 32754      616C7565 
 32755              	.LASF237:
 32756 0d46 4D4F544F 		.ascii	"MOTOR_IDX\000"
 32756      525F4944 
 32756      5800
 32757              	.LASF298:
 32758 0d50 6D656D52 		.ascii	"memRestore\000"
 32758      6573746F 
 32758      726500
 32759              	.LASF260:
 32760 0d5b 6E5F696D 		.ascii	"n_imu_str\000"
 32760      755F7374 
 32760      7200
 32761              	.LASF274:
 32762 0d65 696E666F 		.ascii	"info_string\000"
 32762      5F737472 
 32762      696E6700 
 32763              	.LASF387:
 32764 0d71 433A5C55 		.ascii	"C:\\Users\\Mattia\\Documents\\GITHUB\\SoftHandPRO-a"
 32764      73657273 
 32764      5C4D6174 
 32764      7469615C 
 32764      446F6375 
 32765 0d9f 6E642D47 		.ascii	"nd-Generic-FW-PSoC5\\Ottobock_Active_Wrist.cydsn\000"
 32765      656E6572 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 705


 32765      69632D46 
 32765      572D5053 
 32765      6F43355C 
 32766              	.LASF338:
 32767 0dcf 66736D5F 		.ascii	"fsm_state\000"
 32767      73746174 
 32767      6500
 32768              	.LASF9:
 32769 0dd9 6C6F6E67 		.ascii	"long long unsigned int\000"
 32769      206C6F6E 
 32769      6720756E 
 32769      7369676E 
 32769      65642069 
 32770              	.LASF83:
 32771 0df0 54595045 		.ascii	"TYPE_INT32\000"
 32771      5F494E54 
 32771      333200
 32772              	.LASF236:
 32773 0dfb 6175785F 		.ascii	"aux_uint32\000"
 32773      75696E74 
 32773      333200
 32774              	.LASF102:
 32775 0e06 6C656E67 		.ascii	"length\000"
 32775      746800
 32776              	.LASF248:
 32777 0e0d 55534552 		.ascii	"USER_ID_PARAM\000"
 32777      5F49445F 
 32777      50415241 
 32777      4D00
 32778              	.LASF199:
 32779 0e1b 73745F69 		.ascii	"st_imu_data\000"
 32779      6D755F64 
 32779      61746100 
 32780              	.LASF203:
 32781 0e27 6D61675F 		.ascii	"mag_value\000"
 32781      76616C75 
 32781      6500
 32782              	.LASF90:
 32783 0e31 6F6E6F66 		.ascii	"onoff\000"
 32783      6600
 32784              	.LASF45:
 32785 0e37 434D445F 		.ascii	"CMD_GET_ACCEL\000"
 32785      4745545F 
 32785      41434345 
 32785      4C00
 32786              	.LASF306:
 32787 0e45 636D645F 		.ascii	"cmd_get_velocities\000"
 32787      6765745F 
 32787      76656C6F 
 32787      63697469 
 32787      657300
 32788              	.LASF297:
 32789 0e58 6D656D52 		.ascii	"memRecall\000"
 32789      6563616C 
 32789      6C00
 32790              	.LASF363:
 32791 0e62 74696D65 		.ascii	"timer_value0\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 706


 32791      725F7661 
 32791      6C756530 
 32791      00
 32792              	.LASF48:
 32793 0e6f 434D445F 		.ascii	"CMD_SET_BAUDRATE\000"
 32793      5345545F 
 32793      42415544 
 32793      52415445 
 32793      00
 32794              	.LASF123:
 32795 0e80 6B5F705F 		.ascii	"k_p_c\000"
 32795      6300
 32796              	.LASF264:
 32797 0e86 696D755F 		.ascii	"imu_table_str\000"
 32797      7461626C 
 32797      655F7374 
 32797      7200
 32798              	.LASF364:
 32799 0e94 6465765F 		.ascii	"dev_tension\000"
 32799      74656E73 
 32799      696F6E00 
 32800              	.LASF134:
 32801 0ea0 6D6F746F 		.ascii	"motor_driver_type\000"
 32801      725F6472 
 32801      69766572 
 32801      5F747970 
 32801      6500
 32802              	.LASF325:
 32803 0eb2 6D756C74 		.ascii	"mult_1\000"
 32803      5F3100
 32804              	.LASF276:
 32805 0eb9 70726570 		.ascii	"prepare_counter_info\000"
 32805      6172655F 
 32805      636F756E 
 32805      7465725F 
 32805      696E666F 
 32806              	.LASF23:
 32807 0ece 72656738 		.ascii	"reg8\000"
 32807      00
 32808              	.LASF188:
 32809 0ed3 70726F70 		.ascii	"prop_err_fb_gain\000"
 32809      5F657272 
 32809      5F66625F 
 32809      6761696E 
 32809      00
 32810              	.LASF282:
 32811 0ee4 636F6D6D 		.ascii	"commWrite_old_id\000"
 32811      57726974 
 32811      655F6F6C 
 32811      645F6964 
 32811      00
 32812              	.LASF241:
 32813 0ef5 6D616E61 		.ascii	"manage_param_list\000"
 32813      67655F70 
 32813      6172616D 
 32813      5F6C6973 
 32813      7400
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 707


 32814              	.LASF30:
 32815 0f07 434D445F 		.ascii	"CMD_RESTORE_PARAMS\000"
 32815      52455354 
 32815      4F52455F 
 32815      50415241 
 32815      4D5300
 32816              	.LASF278:
 32817 0f1a 70726570 		.ascii	"prepare_SD_param_info\000"
 32817      6172655F 
 32817      53445F70 
 32817      6172616D 
 32817      5F696E66 
 32818              	.LASF317:
 32819 0f30 63757272 		.ascii	"curr_diff\000"
 32819      5F646966 
 32819      6600
 32820              	.LASF183:
 32821 0f3a 736C6176 		.ascii	"slave_comm_active\000"
 32821      655F636F 
 32821      6D6D5F61 
 32821      63746976 
 32821      6500
 32822              	.LASF283:
 32823 0f4c 6F6C645F 		.ascii	"old_id\000"
 32823      696400
 32824              	.LASF388:
 32825 0f53 5F5F5245 		.ascii	"__REV16\000"
 32825      56313600 
 32826              	.LASF374:
 32827 0f5b 4E5F456E 		.ascii	"N_Encoder_Line_Connected\000"
 32827      636F6465 
 32827      725F4C69 
 32827      6E655F43 
 32827      6F6E6E65 
 32828              	.LASF120:
 32829 0f74 6465765F 		.ascii	"dev_type\000"
 32829      74797065 
 32829      00
 32830              	.LASF170:
 32831 0f7d 73745F75 		.ascii	"st_user\000"
 32831      73657200 
 32832              	.LASF313:
 32833 0f85 636D645F 		.ascii	"cmd_get_curr_and_meas\000"
 32833      6765745F 
 32833      63757272 
 32833      5F616E64 
 32833      5F6D6561 
 32834              	.LASF154:
 32835 0f9b 67656172 		.ascii	"gears_params\000"
 32835      735F7061 
 32835      72616D73 
 32835      00
 32836              	.LASF165:
 32837 0fa8 73745F65 		.ascii	"st_expansion\000"
 32837      7870616E 
 32837      73696F6E 
 32837      00
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 708


 32838              	.LASF159:
 32839 0fb5 656D675F 		.ascii	"emg_calibration_flag\000"
 32839      63616C69 
 32839      62726174 
 32839      696F6E5F 
 32839      666C6167 
 32840              	.LASF92:
 32841 0fca 73745F6D 		.ascii	"st_meas\000"
 32841      65617300 
 32842              	.LASF55:
 32843 0fd2 434D445F 		.ascii	"CMD_GET_ADC_RAW\000"
 32843      4745545F 
 32843      4144435F 
 32843      52415700 
 32844              	.LASF180:
 32845 0fe2 6A6F7973 		.ascii	"joystick_threshold\000"
 32845      7469636B 
 32845      5F746872 
 32845      6573686F 
 32845      6C6400
 32846              	.LASF72:
 32847 0ff5 4D41584F 		.ascii	"MAXON_24V\000"
 32847      4E5F3234 
 32847      5600
 32848              	.LASF65:
 32849 0fff 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL_NC\000"
 32849      545F4D4F 
 32849      44455F45 
 32849      4D475F50 
 32849      524F504F 
 32850              	.LASF51:
 32851 101e 434D445F 		.ascii	"CMD_GET_IMU_PARAM\000"
 32851      4745545F 
 32851      494D555F 
 32851      50415241 
 32851      4D00
 32852              	.LASF357:
 32853 1030 675F6662 		.ascii	"g_fb_meas\000"
 32853      5F6D6561 
 32853      7300
 32854              	.LASF53:
 32855 103a 434D445F 		.ascii	"CMD_GET_ENCODER_RAW\000"
 32855      4745545F 
 32855      454E434F 
 32855      4445525F 
 32855      52415700 
 32856              	.LASF323:
 32857 104e 636D645F 		.ascii	"cmd_store_params\000"
 32857      73746F72 
 32857      655F7061 
 32857      72616D73 
 32857      00
 32858              	.LASF359:
 32859 105f 675F6D65 		.ascii	"g_mem\000"
 32859      6D00
 32860              	.LASF40:
 32861 1065 434D445F 		.ascii	"CMD_GET_MEASUREMENTS\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 709


 32861      4745545F 
 32861      4D454153 
 32861      5552454D 
 32861      454E5453 
 32862              	.LASF356:
 32863 107a 675F6164 		.ascii	"g_adc_measOld\000"
 32863      635F6D65 
 32863      61734F6C 
 32863      6400
 32864              	.LASF332:
 32865 1088 636D645F 		.ascii	"cmd_get_encoder_raw\000"
 32865      6765745F 
 32865      656E636F 
 32865      6465725F 
 32865      72617700 
 32866              	.LASF13:
 32867 109c 75696E74 		.ascii	"uint8\000"
 32867      3800
 32868              	.LASF211:
 32869 10a2 636F6D6D 		.ascii	"commProcess\000"
 32869      50726F63 
 32869      65737300 
 32870              	.LASF178:
 32871 10ae 73745F4A 		.ascii	"st_JOY_spec\000"
 32871      4F595F73 
 32871      70656300 
 32872              	.LASF2:
 32873 10ba 73686F72 		.ascii	"short int\000"
 32873      7420696E 
 32873      7400
 32874              	.LASF302:
 32875 10c4 6D656D49 		.ascii	"memInit_AirChambersFb\000"
 32875      6E69745F 
 32875      41697243 
 32875      68616D62 
 32875      65727346 
 32876              	.LASF268:
 32877 10da 6964735F 		.ascii	"ids_str_len\000"
 32877      7374725F 
 32877      6C656E00 
 32878              	.LASF128:
 32879 10e6 6B5F645F 		.ascii	"k_d_dl\000"
 32879      646C00
 32880              	.LASF229:
 32881 10ed 6964785F 		.ascii	"idx_menu\000"
 32881      6D656E75 
 32881      00
 32882              	.LASF97:
 32883 10f6 6A6F7973 		.ascii	"joystick\000"
 32883      7469636B 
 32883      00
 32884              	.LASF196:
 32885 10ff 6D6F746F 		.ascii	"motor\000"
 32885      7200
 32886              	.LASF377:
 32887 1105 4E5F494D 		.ascii	"N_IMU_Connected\000"
 32887      555F436F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 710


 32887      6E6E6563 
 32887      74656400 
 32888              	.LASF39:
 32889 1115 434D445F 		.ascii	"CMD_GET_INPUTS\000"
 32889      4745545F 
 32889      494E5055 
 32889      545300
 32890              	.LASF113:
 32891 1124 68775F6D 		.ascii	"hw_maint_date\000"
 32891      61696E74 
 32891      5F646174 
 32891      6500
 32892              	.LASF261:
 32893 1132 6964735F 		.ascii	"ids_str\000"
 32893      73747200 
 32894              	.LASF54:
 32895 113a 434D445F 		.ascii	"CMD_GET_ADC_CONF\000"
 32895      4745545F 
 32895      4144435F 
 32895      434F4E46 
 32895      00
 32896              	.LASF27:
 32897 114b 434D445F 		.ascii	"CMD_SET_ZEROS\000"
 32897      5345545F 
 32897      5A45524F 
 32897      5300
 32898              	.LASF269:
 32899 1159 6D61675F 		.ascii	"mag_param_str_len\000"
 32899      70617261 
 32899      6D5F7374 
 32899      725F6C65 
 32899      6E00
 32900              	.LASF255:
 32901 116b 6E756D5F 		.ascii	"num_imus_id_params\000"
 32901      696D7573 
 32901      5F69645F 
 32901      70617261 
 32901      6D7300
 32902              	.LASF233:
 32903 117e 6175785F 		.ascii	"aux_int16\000"
 32903      696E7431 
 32903      3600
 32904              	.LASF384:
 32905 1188 45455052 		.ascii	"EEPROM_ADDR\000"
 32905      4F4D5F41 
 32905      44445200 
 32906              	.LASF114:
 32907 1194 73746174 		.ascii	"stats_period_begin_date\000"
 32907      735F7065 
 32907      72696F64 
 32907      5F626567 
 32907      696E5F64 
 32908              	.LASF379:
 32909 11ac 696D7573 		.ascii	"imus_data_size\000"
 32909      5F646174 
 32909      615F7369 
 32909      7A6500
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 711


 32910              	.LASF349:
 32911 11bb 49544D5F 		.ascii	"ITM_RxBuffer\000"
 32911      52784275 
 32911      66666572 
 32911      00
 32912              	.LASF44:
 32913 11c8 434D445F 		.ascii	"CMD_GET_VELOCITIES\000"
 32913      4745545F 
 32913      56454C4F 
 32913      43495449 
 32913      455300
 32914              	.LASF366:
 32915 11db 706F775F 		.ascii	"pow_tension\000"
 32915      74656E73 
 32915      696F6E00 
 32916              	.LASF34:
 32917 11e7 434D445F 		.ascii	"CMD_GET_PARAM_LIST\000"
 32917      4745545F 
 32917      50415241 
 32917      4D5F4C49 
 32917      535400
 32918              	.LASF77:
 32919 11fa 64617461 		.ascii	"data_types\000"
 32919      5F747970 
 32919      657300
 32920              	.LASF17:
 32921 1205 696E7431 		.ascii	"int16\000"
 32921      3600
 32922              	.LASF167:
 32923 120b 72656164 		.ascii	"read_exp_port_flag\000"
 32923      5F657870 
 32923      5F706F72 
 32923      745F666C 
 32923      616700
 32924              	.LASF160:
 32925 121e 73776974 		.ascii	"switch_emg\000"
 32925      63685F65 
 32925      6D6700
 32926              	.LASF133:
 32927 1229 61637469 		.ascii	"activate_pwm_rescaling\000"
 32927      76617465 
 32927      5F70776D 
 32927      5F726573 
 32927      63616C69 
 32928              	.LASF126:
 32929 1240 6B5F705F 		.ascii	"k_p_dl\000"
 32929      646C00
 32930              	.LASF93:
 32931 1247 65737469 		.ascii	"estim_curr\000"
 32931      6D5F6375 
 32931      727200
 32932              	.LASF365:
 32933 1252 6465765F 		.ascii	"dev_pwm_limit\000"
 32933      70776D5F 
 32933      6C696D69 
 32933      7400
 32934              	.LASF168:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 712


 32935 1260 72656164 		.ascii	"read_ADC_sensors_port_flag\000"
 32935      5F414443 
 32935      5F73656E 
 32935      736F7273 
 32935      5F706F72 
 32936              	.LASF375:
 32937 127b 456E636F 		.ascii	"Encoder_Value\000"
 32937      6465725F 
 32937      56616C75 
 32937      6500
 32938              	.LASF331:
 32939 1289 636D645F 		.ascii	"cmd_get_encoder_map\000"
 32939      6765745F 
 32939      656E636F 
 32939      6465725F 
 32939      6D617000 
 32940              	.LASF119:
 32941 129d 75736572 		.ascii	"user_id\000"
 32941      5F696400 
 32942              	.LASF12:
 32943 12a5 75696E74 		.ascii	"uint32_t\000"
 32943      33325F74 
 32943      00
 32944              	.LASF232:
 32945 12ae 6175785F 		.ascii	"aux_float\000"
 32945      666C6F61 
 32945      7400
 32946              	.LASF378:
 32947 12b8 494D555F 		.ascii	"IMU_connected\000"
 32947      636F6E6E 
 32947      65637465 
 32947      6400
 32948              	.LASF223:
 32949 12c6 4E554D5F 		.ascii	"NUM_MENU\000"
 32949      4D454E55 
 32949      00
 32950              	.LASF235:
 32951 12cf 6175785F 		.ascii	"aux_int32\000"
 32951      696E7433 
 32951      3200
 32952              	.LASF118:
 32953 12d9 62617564 		.ascii	"baud_rate\000"
 32953      5F726174 
 32953      6500
 32954              	.LASF319:
 32955 12e3 745F656E 		.ascii	"t_end\000"
 32955      6400
 32956              	.LASF191:
 32957 12e9 66617374 		.ascii	"fast_act_threshold\000"
 32957      5F616374 
 32957      5F746872 
 32957      6573686F 
 32957      6C6400
 32958              	.LASF218:
 32959 12fc 696E666F 		.ascii	"info_type\000"
 32959      5F747970 
 32959      6500
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 713


 32960              	.LASF50:
 32961 1306 434D445F 		.ascii	"CMD_GET_IMU_READINGS\000"
 32961      4745545F 
 32961      494D555F 
 32961      52454144 
 32961      494E4753 
 32962              	.LASF291:
 32963 131b 4C435243 		.ascii	"LCRChecksum\000"
 32963      6865636B 
 32963      73756D00 
 32964              	.LASF328:
 32965 1327 6B5F696D 		.ascii	"k_imu\000"
 32965      7500
 32966              	.LASF3:
 32967 132d 73686F72 		.ascii	"short unsigned int\000"
 32967      7420756E 
 32967      7369676E 
 32967      65642069 
 32967      6E7400
 32968              	.LASF147:
 32969 1340 73745F65 		.ascii	"st_encoder\000"
 32969      6E636F64 
 32969      657200
 32970              	.LASF355:
 32971 134b 675F6164 		.ascii	"g_adc_meas\000"
 32971      635F6D65 
 32971      617300
 32972              	.LASF186:
 32973 1356 6D61785F 		.ascii	"max_residual_current\000"
 32973      72657369 
 32973      6475616C 
 32973      5F637572 
 32973      72656E74 
 32974              	.LASF275:
 32975 136b 454E435F 		.ascii	"ENC_L\000"
 32975      4C00
 32976              	.LASF193:
 32977 1371 73745F65 		.ascii	"st_eeprom\000"
 32977      6570726F 
 32977      6D00
 32978              	.LASF220:
 32979 137b 54595045 		.ascii	"TYPES\000"
 32979      5300
 32980              	.LASF350:
 32981 1381 675F7265 		.ascii	"g_ref\000"
 32981      6600
 32982              	.LASF18:
 32983 1387 696E7433 		.ascii	"int32\000"
 32983      3200
 32984              	.LASF372:
 32985 138d 4E554D5F 		.ascii	"NUM_OF_ANALOG_INPUTS\000"
 32985      4F465F41 
 32985      4E414C4F 
 32985      475F494E 
 32985      50555453 
 32986              	.LASF215:
 32987 13a2 696E666F 		.ascii	"infoGet\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 714


 32987      47657400 
 32988              	.LASF122:
 32989 13aa 73745F6D 		.ascii	"st_motor\000"
 32989      6F746F72 
 32989      00
 32990              	.LASF383:
 32991 13b3 6D617374 		.ascii	"master_mode\000"
 32991      65725F6D 
 32991      6F646500 
 32992              	.LASF88:
 32993 13bf 46535F46 		.ascii	"FS_FILE\000"
 32993      494C4500 
 32994              	.LASF135:
 32995 13c7 706F735F 		.ascii	"pos_lim_flag\000"
 32995      6C696D5F 
 32995      666C6167 
 32995      00
 32996              	.LASF354:
 32997 13d4 675F6D65 		.ascii	"g_measOld\000"
 32997      61734F6C 
 32997      6400
 32998              	.LASF67:
 32999 13de 434F4E54 		.ascii	"CONTROL_ANGLE\000"
 32999      524F4C5F 
 32999      414E474C 
 32999      4500
 33000              	.LASF311:
 33001 13ec 636D645F 		.ascii	"cmd_activate\000"
 33001      61637469 
 33001      76617465 
 33001      00
 33002              	.LASF5:
 33003 13f9 5F5F696E 		.ascii	"__int32_t\000"
 33003      7433325F 
 33003      7400
 33004              	.LASF245:
 33005 1403 7370695F 		.ascii	"spi_delay_menu\000"
 33005      64656C61 
 33005      795F6D65 
 33005      6E7500
 33006              	.LASF109:
 33007 1412 77697265 		.ascii	"wire_disp\000"
 33007      5F646973 
 33007      7000
 33008              	.LASF157:
 33009 141c 656D675F 		.ascii	"emg_max_value\000"
 33009      6D61785F 
 33009      76616C75 
 33009      6500
 33010              	.LASF249:
 33011 142a 43555354 		.ascii	"CUSTOM_PARAM_SET\000"
 33011      4F4D5F50 
 33011      4152414D 
 33011      5F534554 
 33011      00
 33012              	.LASF386:
 33013 143b 2E2E5C73 		.ascii	"..\\src\\command_processing.c\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc6cGCA5.s 			page 715


 33013      72635C63 
 33013      6F6D6D61 
 33013      6E645F70 
 33013      726F6365 
 33014              	.LASF141:
 33015 1457 63757272 		.ascii	"current_limit\000"
 33015      656E745F 
 33015      6C696D69 
 33015      7400
 33016              	.LASF57:
 33017 1465 53485F69 		.ascii	"SH_input_mode\000"
 33017      6E707574 
 33017      5F6D6F64 
 33017      6500
 33018              	.LASF79:
 33019 1473 54595045 		.ascii	"TYPE_INT8\000"
 33019      5F494E54 
 33019      3800
 33020              	.LASF190:
 33021 147d 61637469 		.ascii	"activation_mode\000"
 33021      76617469 
 33021      6F6E5F6D 
 33021      6F646500 
 33022              	.LASF281:
 33023 148d 494D555F 		.ascii	"IMU_reading_info\000"
 33023      72656164 
 33023      696E675F 
 33023      696E666F 
 33023      00
 33024              	.LASF14:
 33025 149e 75696E74 		.ascii	"uint16\000"
 33025      313600
 33026              	.LASF175:
 33027 14a5 72657374 		.ascii	"rest_delay\000"
 33027      5F64656C 
 33027      617900
 33028              	.LASF231:
 33029 14b0 6175785F 		.ascii	"aux_str\000"
 33029      73747200 
 33030              	.LASF26:
 33031 14b8 434D445F 		.ascii	"CMD_PING\000"
 33031      50494E47 
 33031      00
 33032              	.LASF131:
 33033 14c1 6B5F645F 		.ascii	"k_d_c_dl\000"
 33033      635F646C 
 33033      00
 33034              	.LASF208:
 33035 14ca 64697265 		.ascii	"direction\000"
 33035      6374696F 
 33035      6E00
 33036              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
