ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"command_processing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	EEPROM_ADDR
  20              		.data
  21              		.align	2
  22              		.type	EEPROM_ADDR, %object
  23              		.size	EEPROM_ADDR, 4
  24              	EEPROM_ADDR:
  25 0000 00800040 		.word	1073774592
  26              		.section	.text.commProcess,"ax",%progbits
  27              		.align	2
  28              		.global	commProcess
  29              		.thumb
  30              		.thumb_func
  31              		.type	commProcess, %function
  32              	commProcess:
  33              	.LFB64:
  34              		.file 1 "..\\src\\command_processing.c"
   1:..\src/command_processing.c **** // ----------------------------------------------------------------------------
   2:..\src/command_processing.c **** // BSD 3-Clause License
   3:..\src/command_processing.c **** 
   4:..\src/command_processing.c **** // Copyright (c) 2016, qbrobotics
   5:..\src/command_processing.c **** // Copyright (c) 2017-2019, Centro "E.Piaggio"
   6:..\src/command_processing.c **** // All rights reserved.
   7:..\src/command_processing.c **** 
   8:..\src/command_processing.c **** // Redistribution and use in source and binary forms, with or without
   9:..\src/command_processing.c **** // modification, are permitted provided that the following conditions are met:
  10:..\src/command_processing.c **** 
  11:..\src/command_processing.c **** // * Redistributions of source code must retain the above copyright notice, this
  12:..\src/command_processing.c **** //   list of conditions and the following disclaimer.
  13:..\src/command_processing.c **** 
  14:..\src/command_processing.c **** // * Redistributions in binary form must reproduce the above copyright notice,
  15:..\src/command_processing.c **** //   this list of conditions and the following disclaimer in the documentation
  16:..\src/command_processing.c **** //   and/or other materials provided with the distribution.
  17:..\src/command_processing.c **** 
  18:..\src/command_processing.c **** // * Neither the name of the copyright holder nor the names of its
  19:..\src/command_processing.c **** //   contributors may be used to endorse or promote products derived from
  20:..\src/command_processing.c **** //   this software without specific prior written permission.
  21:..\src/command_processing.c **** 
  22:..\src/command_processing.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:..\src/command_processing.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 2


  24:..\src/command_processing.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:..\src/command_processing.c **** // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:..\src/command_processing.c **** // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:..\src/command_processing.c **** // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:..\src/command_processing.c **** // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:..\src/command_processing.c **** // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:..\src/command_processing.c **** // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:..\src/command_processing.c **** // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:..\src/command_processing.c **** // POSSIBILITY OF SUCH DAMAGE.
  33:..\src/command_processing.c **** // ----------------------------------------------------------------------------
  34:..\src/command_processing.c **** 
  35:..\src/command_processing.c **** 
  36:..\src/command_processing.c **** /**
  37:..\src/command_processing.c **** * \file         command_processing.c
  38:..\src/command_processing.c **** *
  39:..\src/command_processing.c **** 
  40:..\src/command_processing.c **** * \brief        Command processing functions.
  41:..\src/command_processing.c **** * \date         October 01, 2017
  42:..\src/command_processing.c **** * \author       _Centro "E.Piaggio"_
  43:..\src/command_processing.c **** * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  44:..\src/command_processing.c **** * \copyright    (C) 2017-2019 Centro "E.Piaggio". All rights reserved.
  45:..\src/command_processing.c **** */
  46:..\src/command_processing.c **** //=================================================================     includes
  47:..\src/command_processing.c **** #include "command_processing.h"
  48:..\src/command_processing.c **** 
  49:..\src/command_processing.c **** //================================================================     variables
  50:..\src/command_processing.c **** 
  51:..\src/command_processing.c **** reg8 * EEPROM_ADDR = (reg8 *) CYDEV_EE_BASE;
  52:..\src/command_processing.c **** 
  53:..\src/command_processing.c **** //==============================================================================
  54:..\src/command_processing.c **** //                                                            RX DATA PROCESSING
  55:..\src/command_processing.c **** //==============================================================================
  56:..\src/command_processing.c **** //  This function checks for the availability of a data packet and process it:
  57:..\src/command_processing.c **** //      - Verify checksum;
  58:..\src/command_processing.c **** //      - Process commands;
  59:..\src/command_processing.c **** //==============================================================================
  60:..\src/command_processing.c **** 
  61:..\src/command_processing.c **** void commProcess(void){
  35              		.loc 1 61 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 32
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 88B0     		sub	sp, sp, #32
  44              		.cfi_def_cfa_offset 40
  45 0004 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  62:..\src/command_processing.c **** 
  63:..\src/command_processing.c ****     uint8 CYDATA rx_cmd;
  64:..\src/command_processing.c ****     rx_cmd = g_rx.buffer[0];
  47              		.loc 1 64 0
  48 0006 E24B     		ldr	r3, .L48
  49 0008 1B78     		ldrb	r3, [r3]
  50 000a FB77     		strb	r3, [r7, #31]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 3


  65:..\src/command_processing.c **** 
  66:..\src/command_processing.c **** //==========================================================     verify checksum
  67:..\src/command_processing.c **** 
  68:..\src/command_processing.c ****     if (!(LCRChecksum(g_rx.buffer, g_rx.length - 1) == g_rx.buffer[g_rx.length - 1])){
  51              		.loc 1 68 0
  52 000c E04B     		ldr	r3, .L48
  53 000e B3F98030 		ldrsh	r3, [r3, #128]
  54 0012 DBB2     		uxtb	r3, r3
  55 0014 013B     		subs	r3, r3, #1
  56 0016 DBB2     		uxtb	r3, r3
  57 0018 1946     		mov	r1, r3
  58 001a DD48     		ldr	r0, .L48
  59 001c FFF7FEFF 		bl	LCRChecksum
  60 0020 0346     		mov	r3, r0
  61 0022 1946     		mov	r1, r3
  62 0024 DA4B     		ldr	r3, .L48
  63 0026 B3F98030 		ldrsh	r3, [r3, #128]
  64 002a 013B     		subs	r3, r3, #1
  65 002c D84A     		ldr	r2, .L48
  66 002e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
  67 0030 9942     		cmp	r1, r3
  68 0032 04D0     		beq	.L2
  69:..\src/command_processing.c ****         // Wrong checksum
  70:..\src/command_processing.c ****         g_rx.ready = 0;
  69              		.loc 1 70 0
  70 0034 D64B     		ldr	r3, .L48
  71 0036 0022     		movs	r2, #0
  72 0038 83F88420 		strb	r2, [r3, #132]
  71:..\src/command_processing.c ****         return;
  73              		.loc 1 71 0
  74 003c 42E2     		b	.L1
  75              	.L2:
  72:..\src/command_processing.c ****     }
  73:..\src/command_processing.c **** 
  74:..\src/command_processing.c ****     switch(rx_cmd) {
  76              		.loc 1 74 0
  77 003e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
  78 0040 A62B     		cmp	r3, #166
  79 0042 00F23E82 		bhi	.L47
  80 0046 01A2     		adr	r2, .L6
  81 0048 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  82              		.p2align 2
  83              	.L6:
  84 004c 67030000 		.word	.L5+1
  85 0050 49030000 		.word	.L7+1
  86 0054 C3040000 		.word	.L47+1
  87 0058 6D030000 		.word	.L8+1
  88 005c 73030000 		.word	.L9+1
  89 0060 99030000 		.word	.L10+1
  90 0064 31030000 		.word	.L11+1
  91 0068 C3040000 		.word	.L47+1
  92 006c C3040000 		.word	.L47+1
  93 0070 CD030000 		.word	.L12+1
  94 0074 B3030000 		.word	.L13+1
  95 0078 C3040000 		.word	.L47+1
  96 007c 4F030000 		.word	.L14+1
  97 0080 EF030000 		.word	.L15+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 4


  98 0084 C3040000 		.word	.L47+1
  99 0088 C3040000 		.word	.L47+1
 100 008c C3040000 		.word	.L47+1
 101 0090 C3040000 		.word	.L47+1
 102 0094 C3040000 		.word	.L47+1
 103 0098 C3040000 		.word	.L47+1
 104 009c C3040000 		.word	.L47+1
 105 00a0 C3040000 		.word	.L47+1
 106 00a4 C3040000 		.word	.L47+1
 107 00a8 C3040000 		.word	.L47+1
 108 00ac C3040000 		.word	.L47+1
 109 00b0 C3040000 		.word	.L47+1
 110 00b4 C3040000 		.word	.L47+1
 111 00b8 C3040000 		.word	.L47+1
 112 00bc C3040000 		.word	.L47+1
 113 00c0 C3040000 		.word	.L47+1
 114 00c4 C3040000 		.word	.L47+1
 115 00c8 C3040000 		.word	.L47+1
 116 00cc C3040000 		.word	.L47+1
 117 00d0 C3040000 		.word	.L47+1
 118 00d4 C3040000 		.word	.L47+1
 119 00d8 C3040000 		.word	.L47+1
 120 00dc C3040000 		.word	.L47+1
 121 00e0 C3040000 		.word	.L47+1
 122 00e4 C3040000 		.word	.L47+1
 123 00e8 C3040000 		.word	.L47+1
 124 00ec C3040000 		.word	.L47+1
 125 00f0 C3040000 		.word	.L47+1
 126 00f4 C3040000 		.word	.L47+1
 127 00f8 C3040000 		.word	.L47+1
 128 00fc C3040000 		.word	.L47+1
 129 0100 C3040000 		.word	.L47+1
 130 0104 C3040000 		.word	.L47+1
 131 0108 C3040000 		.word	.L47+1
 132 010c C3040000 		.word	.L47+1
 133 0110 C3040000 		.word	.L47+1
 134 0114 C3040000 		.word	.L47+1
 135 0118 C3040000 		.word	.L47+1
 136 011c C3040000 		.word	.L47+1
 137 0120 C3040000 		.word	.L47+1
 138 0124 C3040000 		.word	.L47+1
 139 0128 C3040000 		.word	.L47+1
 140 012c C3040000 		.word	.L47+1
 141 0130 C3040000 		.word	.L47+1
 142 0134 C3040000 		.word	.L47+1
 143 0138 C3040000 		.word	.L47+1
 144 013c C3040000 		.word	.L47+1
 145 0140 C3040000 		.word	.L47+1
 146 0144 C3040000 		.word	.L47+1
 147 0148 C3040000 		.word	.L47+1
 148 014c C3040000 		.word	.L47+1
 149 0150 C3040000 		.word	.L47+1
 150 0154 C3040000 		.word	.L47+1
 151 0158 C3040000 		.word	.L47+1
 152 015c C3040000 		.word	.L47+1
 153 0160 C3040000 		.word	.L47+1
 154 0164 C3040000 		.word	.L47+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 5


 155 0168 C3040000 		.word	.L47+1
 156 016c C3040000 		.word	.L47+1
 157 0170 C3040000 		.word	.L47+1
 158 0174 C3040000 		.word	.L47+1
 159 0178 C3040000 		.word	.L47+1
 160 017c C3040000 		.word	.L47+1
 161 0180 C3040000 		.word	.L47+1
 162 0184 C3040000 		.word	.L47+1
 163 0188 C3040000 		.word	.L47+1
 164 018c C3040000 		.word	.L47+1
 165 0190 C3040000 		.word	.L47+1
 166 0194 C3040000 		.word	.L47+1
 167 0198 C3040000 		.word	.L47+1
 168 019c C3040000 		.word	.L47+1
 169 01a0 C3040000 		.word	.L47+1
 170 01a4 C3040000 		.word	.L47+1
 171 01a8 C3040000 		.word	.L47+1
 172 01ac C3040000 		.word	.L47+1
 173 01b0 C3040000 		.word	.L47+1
 174 01b4 C3040000 		.word	.L47+1
 175 01b8 C3040000 		.word	.L47+1
 176 01bc C3040000 		.word	.L47+1
 177 01c0 C3040000 		.word	.L47+1
 178 01c4 C3040000 		.word	.L47+1
 179 01c8 C3040000 		.word	.L47+1
 180 01cc C3040000 		.word	.L47+1
 181 01d0 C3040000 		.word	.L47+1
 182 01d4 C3040000 		.word	.L47+1
 183 01d8 C3040000 		.word	.L47+1
 184 01dc C3040000 		.word	.L47+1
 185 01e0 C3040000 		.word	.L47+1
 186 01e4 C3040000 		.word	.L47+1
 187 01e8 C3040000 		.word	.L47+1
 188 01ec C3040000 		.word	.L47+1
 189 01f0 C3040000 		.word	.L47+1
 190 01f4 C3040000 		.word	.L47+1
 191 01f8 C3040000 		.word	.L47+1
 192 01fc C3040000 		.word	.L47+1
 193 0200 C3040000 		.word	.L47+1
 194 0204 C3040000 		.word	.L47+1
 195 0208 C3040000 		.word	.L47+1
 196 020c C3040000 		.word	.L47+1
 197 0210 C3040000 		.word	.L47+1
 198 0214 C3040000 		.word	.L47+1
 199 0218 C3040000 		.word	.L47+1
 200 021c C3040000 		.word	.L47+1
 201 0220 C3040000 		.word	.L47+1
 202 0224 C3040000 		.word	.L47+1
 203 0228 C3040000 		.word	.L47+1
 204 022c C3040000 		.word	.L47+1
 205 0230 C3040000 		.word	.L47+1
 206 0234 C3040000 		.word	.L47+1
 207 0238 C3040000 		.word	.L47+1
 208 023c C3040000 		.word	.L47+1
 209 0240 C3040000 		.word	.L47+1
 210 0244 C3040000 		.word	.L47+1
 211 0248 C3040000 		.word	.L47+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 6


 212 024c E9020000 		.word	.L16+1
 213 0250 1F030000 		.word	.L17+1
 214 0254 EF020000 		.word	.L18+1
 215 0258 2B030000 		.word	.L19+1
 216 025c F5020000 		.word	.L20+1
 217 0260 01030000 		.word	.L21+1
 218 0264 FB020000 		.word	.L22+1
 219 0268 C3040000 		.word	.L47+1
 220 026c 19030000 		.word	.L23+1
 221 0270 0D030000 		.word	.L24+1
 222 0274 C3040000 		.word	.L47+1
 223 0278 13030000 		.word	.L25+1
 224 027c 07030000 		.word	.L26+1
 225 0280 C3040000 		.word	.L47+1
 226 0284 C3040000 		.word	.L47+1
 227 0288 C3040000 		.word	.L47+1
 228 028c 25030000 		.word	.L27+1
 229 0290 C3040000 		.word	.L47+1
 230 0294 C3040000 		.word	.L47+1
 231 0298 C3040000 		.word	.L47+1
 232 029c C3040000 		.word	.L47+1
 233 02a0 C3040000 		.word	.L47+1
 234 02a4 C3040000 		.word	.L47+1
 235 02a8 C3040000 		.word	.L47+1
 236 02ac C3040000 		.word	.L47+1
 237 02b0 C3040000 		.word	.L47+1
 238 02b4 C3040000 		.word	.L47+1
 239 02b8 C3040000 		.word	.L47+1
 240 02bc C3040000 		.word	.L47+1
 241 02c0 C3040000 		.word	.L47+1
 242 02c4 C3040000 		.word	.L47+1
 243 02c8 C3040000 		.word	.L47+1
 244 02cc C3040000 		.word	.L47+1
 245 02d0 8D040000 		.word	.L28+1
 246 02d4 93040000 		.word	.L29+1
 247 02d8 AB040000 		.word	.L30+1
 248 02dc B1040000 		.word	.L31+1
 249 02e0 B7040000 		.word	.L32+1
 250 02e4 BD040000 		.word	.L33+1
 251              		.p2align 1
 252              	.L16:
  75:..\src/command_processing.c **** 
  76:..\src/command_processing.c **** //=============================================================     CMD_ACTIVATE
  77:..\src/command_processing.c ****         case CMD_ACTIVATE:
  78:..\src/command_processing.c ****             cmd_activate();
 253              		.loc 1 78 0
 254 02e8 FFF7FEFF 		bl	cmd_activate
  79:..\src/command_processing.c ****             break;
 255              		.loc 1 79 0
 256 02ec EAE0     		b	.L1
 257              	.L18:
  80:..\src/command_processing.c **** 
  81:..\src/command_processing.c **** //===========================================================     CMD_SET_INPUTS
  82:..\src/command_processing.c **** 
  83:..\src/command_processing.c ****         case CMD_SET_INPUTS:
  84:..\src/command_processing.c ****             cmd_set_inputs();
 258              		.loc 1 84 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 7


 259 02ee FFF7FEFF 		bl	cmd_set_inputs
  85:..\src/command_processing.c ****             break;
 260              		.loc 1 85 0
 261 02f2 E7E0     		b	.L1
 262              	.L20:
  86:..\src/command_processing.c **** 
  87:..\src/command_processing.c **** //=====================================================     CMD_GET_MEASUREMENTS
  88:..\src/command_processing.c **** 
  89:..\src/command_processing.c ****         case CMD_GET_MEASUREMENTS:
  90:..\src/command_processing.c ****             cmd_get_measurements();
 263              		.loc 1 90 0
 264 02f4 FFF7FEFF 		bl	cmd_get_measurements
  91:..\src/command_processing.c ****             break;
 265              		.loc 1 91 0
 266 02f8 E4E0     		b	.L1
 267              	.L22:
  92:..\src/command_processing.c **** 
  93:..\src/command_processing.c **** //=====================================================     CMD_GET_CURR_AND_MEAS
  94:..\src/command_processing.c **** 
  95:..\src/command_processing.c ****         case CMD_GET_CURR_AND_MEAS:
  96:..\src/command_processing.c ****             cmd_get_curr_and_meas();
 268              		.loc 1 96 0
 269 02fa FFF7FEFF 		bl	cmd_get_curr_and_meas
  97:..\src/command_processing.c ****             break;
 270              		.loc 1 97 0
 271 02fe E1E0     		b	.L1
 272              	.L21:
  98:..\src/command_processing.c ****             
  99:..\src/command_processing.c **** //=========================================================     CMD_GET_CURRENTS
 100:..\src/command_processing.c **** 
 101:..\src/command_processing.c ****         case CMD_GET_CURRENTS:
 102:..\src/command_processing.c ****             cmd_get_currents();
 273              		.loc 1 102 0
 274 0300 FFF7FEFF 		bl	cmd_get_currents
 103:..\src/command_processing.c ****             break;
 275              		.loc 1 103 0
 276 0304 DEE0     		b	.L1
 277              	.L26:
 104:..\src/command_processing.c **** 
 105:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 106:..\src/command_processing.c ****          
 107:..\src/command_processing.c ****         case CMD_GET_CURR_DIFF:
 108:..\src/command_processing.c ****             cmd_get_currents_for_cuff();
 278              		.loc 1 108 0
 279 0306 FFF7FEFF 		bl	cmd_get_currents_for_cuff
 109:..\src/command_processing.c ****             break;
 280              		.loc 1 109 0
 281 030a DBE0     		b	.L1
 282              	.L24:
 110:..\src/command_processing.c ****             
 111:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 112:..\src/command_processing.c ****         
 113:..\src/command_processing.c ****         case CMD_GET_VELOCITIES:
 114:..\src/command_processing.c ****             cmd_get_velocities();
 283              		.loc 1 114 0
 284 030c FFF7FEFF 		bl	cmd_get_velocities
 115:..\src/command_processing.c ****             break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 8


 285              		.loc 1 115 0
 286 0310 D8E0     		b	.L1
 287              	.L25:
 116:..\src/command_processing.c ****             
 117:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 118:..\src/command_processing.c **** 
 119:..\src/command_processing.c ****         case CMD_GET_ACCEL:
 120:..\src/command_processing.c ****             cmd_get_accelerations();
 288              		.loc 1 120 0
 289 0312 FFF7FEFF 		bl	cmd_get_accelerations
 121:..\src/command_processing.c ****             break;
 290              		.loc 1 121 0
 291 0316 D5E0     		b	.L1
 292              	.L23:
 122:..\src/command_processing.c ****             
 123:..\src/command_processing.c **** //=========================================================     CMD_GET_EMG
 124:..\src/command_processing.c **** 
 125:..\src/command_processing.c ****         case CMD_GET_EMG:
 126:..\src/command_processing.c ****             cmd_get_emg();
 293              		.loc 1 126 0
 294 0318 FFF7FEFF 		bl	cmd_get_emg
 127:..\src/command_processing.c ****             break;
 295              		.loc 1 127 0
 296 031c D2E0     		b	.L1
 297              	.L17:
 128:..\src/command_processing.c ****             
 129:..\src/command_processing.c **** //=========================================================     CMD_GET_ACTIVATE
 130:..\src/command_processing.c ****             
 131:..\src/command_processing.c ****         case CMD_GET_ACTIVATE:
 132:..\src/command_processing.c ****             cmd_get_activate();
 298              		.loc 1 132 0
 299 031e FFF7FEFF 		bl	cmd_get_activate
 133:..\src/command_processing.c ****             break;
 300              		.loc 1 133 0
 301 0322 CFE0     		b	.L1
 302              	.L27:
 134:..\src/command_processing.c ****             
 135:..\src/command_processing.c **** //=========================================================     CMD_SET_BAUDRATE
 136:..\src/command_processing.c ****             
 137:..\src/command_processing.c ****         case CMD_SET_BAUDRATE:
 138:..\src/command_processing.c ****             cmd_set_baudrate();
 303              		.loc 1 138 0
 304 0324 FFF7FEFF 		bl	cmd_set_baudrate
 139:..\src/command_processing.c ****             break;  
 305              		.loc 1 139 0
 306 0328 CCE0     		b	.L1
 307              	.L19:
 140:..\src/command_processing.c ****             
 141:..\src/command_processing.c **** //============================================================     CMD_GET_INPUT
 142:..\src/command_processing.c **** 
 143:..\src/command_processing.c ****         case CMD_GET_INPUTS:
 144:..\src/command_processing.c ****             cmd_get_inputs();
 308              		.loc 1 144 0
 309 032a FFF7FEFF 		bl	cmd_get_inputs
 145:..\src/command_processing.c ****             break;
 310              		.loc 1 145 0
 311 032e C9E0     		b	.L1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 9


 312              	.L11:
 146:..\src/command_processing.c **** 
 147:..\src/command_processing.c **** //=============================================================     CMD_GET_INFO
 148:..\src/command_processing.c **** 
 149:..\src/command_processing.c ****         case CMD_GET_INFO:
 150:..\src/command_processing.c ****             infoGet(  __REV16(*((uint16 *) &g_rx.buffer[1])) );
 313              		.loc 1 150 0
 314 0330 184B     		ldr	r3, .L48+4
 315 0332 1B88     		ldrh	r3, [r3]
 316 0334 3B61     		str	r3, [r7, #16]
 317              	.LBB8:
 318              	.LBB9:
 319              		.file 2 "Generated_Source\\PSoC5/cmsis_gcc.h"
   1:Generated_Source\PSoC5/cmsis_gcc.h **** /**************************************************************************//**
   2:Generated_Source\PSoC5/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Generated_Source\PSoC5/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Generated_Source\PSoC5/cmsis_gcc.h ****  * @version  V5.00
   5:Generated_Source\PSoC5/cmsis_gcc.h ****  * @date     28. October 2016
   6:Generated_Source\PSoC5/cmsis_gcc.h ****  ******************************************************************************/
   7:Generated_Source\PSoC5/cmsis_gcc.h **** /*
   8:Generated_Source\PSoC5/cmsis_gcc.h ****  * Copyright (c) 2009-2016 ARM Limited. All rights reserved.
   9:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  10:Generated_Source\PSoC5/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  12:Generated_Source\PSoC5/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Generated_Source\PSoC5/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Generated_Source\PSoC5/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  16:Generated_Source\PSoC5/cmsis_gcc.h ****  * http://www.apache.org/licenses/LICENSE-2.0
  17:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  18:Generated_Source\PSoC5/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Generated_Source\PSoC5/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Generated_Source\PSoC5/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Generated_Source\PSoC5/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Generated_Source\PSoC5/cmsis_gcc.h ****  * limitations under the License.
  23:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  24:Generated_Source\PSoC5/cmsis_gcc.h **** 
  25:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Generated_Source\PSoC5/cmsis_gcc.h **** 
  28:Generated_Source\PSoC5/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Generated_Source\PSoC5/cmsis_gcc.h **** 
  34:Generated_Source\PSoC5/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ASM
  36:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ASM                     __asm
  37:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  38:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __INLINE
  39:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __INLINE                  inline
  40:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  41:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  44:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __NO_RETURN
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 10


  45:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  47:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __USED
  48:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  50:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   _WEAK
  51:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  53:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:Generated_Source\PSoC5/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  55:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  56:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  57:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ALIGNED
  58:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  59:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  60:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __PACKED
  61:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  62:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  63:Generated_Source\PSoC5/cmsis_gcc.h **** 
  64:Generated_Source\PSoC5/cmsis_gcc.h **** 
  65:Generated_Source\PSoC5/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  66:Generated_Source\PSoC5/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  67:Generated_Source\PSoC5/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  68:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
  69:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  70:Generated_Source\PSoC5/cmsis_gcc.h **** 
  71:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  72:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  73:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  74:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  75:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  76:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  77:Generated_Source\PSoC5/cmsis_gcc.h **** {
  78:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  79:Generated_Source\PSoC5/cmsis_gcc.h **** }
  80:Generated_Source\PSoC5/cmsis_gcc.h **** 
  81:Generated_Source\PSoC5/cmsis_gcc.h **** 
  82:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  83:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  84:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  85:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  86:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  87:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  88:Generated_Source\PSoC5/cmsis_gcc.h **** {
  89:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  90:Generated_Source\PSoC5/cmsis_gcc.h **** }
  91:Generated_Source\PSoC5/cmsis_gcc.h **** 
  92:Generated_Source\PSoC5/cmsis_gcc.h **** 
  93:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  94:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register
  95:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  96:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Control Register value
  97:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  98:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
  99:Generated_Source\PSoC5/cmsis_gcc.h **** {
 100:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 101:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 11


 102:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 103:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 104:Generated_Source\PSoC5/cmsis_gcc.h **** }
 105:Generated_Source\PSoC5/cmsis_gcc.h **** 
 106:Generated_Source\PSoC5/cmsis_gcc.h **** 
 107:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 108:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 109:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 110:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 111:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               non-secure Control Register value
 112:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 113:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 114:Generated_Source\PSoC5/cmsis_gcc.h **** {
 115:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 116:Generated_Source\PSoC5/cmsis_gcc.h **** 
 117:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 118:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 119:Generated_Source\PSoC5/cmsis_gcc.h **** }
 120:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 121:Generated_Source\PSoC5/cmsis_gcc.h **** 
 122:Generated_Source\PSoC5/cmsis_gcc.h **** 
 123:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 124:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register
 125:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 126:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 127:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 128:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 129:Generated_Source\PSoC5/cmsis_gcc.h **** {
 130:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 131:Generated_Source\PSoC5/cmsis_gcc.h **** }
 132:Generated_Source\PSoC5/cmsis_gcc.h **** 
 133:Generated_Source\PSoC5/cmsis_gcc.h **** 
 134:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 135:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 136:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 137:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 138:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 139:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 140:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 141:Generated_Source\PSoC5/cmsis_gcc.h **** {
 142:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 143:Generated_Source\PSoC5/cmsis_gcc.h **** }
 144:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 145:Generated_Source\PSoC5/cmsis_gcc.h **** 
 146:Generated_Source\PSoC5/cmsis_gcc.h **** 
 147:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 148:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get IPSR Register
 149:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 150:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               IPSR Register value
 151:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 152:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 153:Generated_Source\PSoC5/cmsis_gcc.h **** {
 154:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 155:Generated_Source\PSoC5/cmsis_gcc.h **** 
 156:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 157:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 158:Generated_Source\PSoC5/cmsis_gcc.h **** }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 12


 159:Generated_Source\PSoC5/cmsis_gcc.h **** 
 160:Generated_Source\PSoC5/cmsis_gcc.h **** 
 161:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 162:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get APSR Register
 163:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 164:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               APSR Register value
 165:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 166:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 167:Generated_Source\PSoC5/cmsis_gcc.h **** {
 168:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 169:Generated_Source\PSoC5/cmsis_gcc.h **** 
 170:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 171:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 172:Generated_Source\PSoC5/cmsis_gcc.h **** }
 173:Generated_Source\PSoC5/cmsis_gcc.h **** 
 174:Generated_Source\PSoC5/cmsis_gcc.h **** 
 175:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 176:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get xPSR Register
 177:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 178:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               xPSR Register value
 179:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 180:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 181:Generated_Source\PSoC5/cmsis_gcc.h **** {
 182:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 183:Generated_Source\PSoC5/cmsis_gcc.h **** 
 184:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 185:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 186:Generated_Source\PSoC5/cmsis_gcc.h **** }
 187:Generated_Source\PSoC5/cmsis_gcc.h **** 
 188:Generated_Source\PSoC5/cmsis_gcc.h **** 
 189:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 190:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 191:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 192:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 193:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 194:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 195:Generated_Source\PSoC5/cmsis_gcc.h **** {
 196:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 197:Generated_Source\PSoC5/cmsis_gcc.h **** 
 198:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 199:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 200:Generated_Source\PSoC5/cmsis_gcc.h **** }
 201:Generated_Source\PSoC5/cmsis_gcc.h **** 
 202:Generated_Source\PSoC5/cmsis_gcc.h **** 
 203:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 204:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 205:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 206:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 207:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 208:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 209:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 210:Generated_Source\PSoC5/cmsis_gcc.h **** {
 211:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 212:Generated_Source\PSoC5/cmsis_gcc.h **** 
 213:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 214:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 215:Generated_Source\PSoC5/cmsis_gcc.h **** }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 13


 216:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 217:Generated_Source\PSoC5/cmsis_gcc.h **** 
 218:Generated_Source\PSoC5/cmsis_gcc.h **** 
 219:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 220:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 221:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 222:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 223:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 224:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 225:Generated_Source\PSoC5/cmsis_gcc.h **** {
 226:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : "sp");
 227:Generated_Source\PSoC5/cmsis_gcc.h **** }
 228:Generated_Source\PSoC5/cmsis_gcc.h **** 
 229:Generated_Source\PSoC5/cmsis_gcc.h **** 
 230:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 231:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 232:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 233:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 234:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 235:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 236:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 237:Generated_Source\PSoC5/cmsis_gcc.h **** {
 238:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : "sp");
 239:Generated_Source\PSoC5/cmsis_gcc.h **** }
 240:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 241:Generated_Source\PSoC5/cmsis_gcc.h **** 
 242:Generated_Source\PSoC5/cmsis_gcc.h **** 
 243:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 244:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 245:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 246:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 247:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 248:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 249:Generated_Source\PSoC5/cmsis_gcc.h **** {
 250:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 251:Generated_Source\PSoC5/cmsis_gcc.h **** 
 252:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 253:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 254:Generated_Source\PSoC5/cmsis_gcc.h **** }
 255:Generated_Source\PSoC5/cmsis_gcc.h **** 
 256:Generated_Source\PSoC5/cmsis_gcc.h **** 
 257:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 258:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 259:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 260:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 261:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 262:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 263:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 264:Generated_Source\PSoC5/cmsis_gcc.h **** {
 265:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 266:Generated_Source\PSoC5/cmsis_gcc.h **** 
 267:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 268:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 269:Generated_Source\PSoC5/cmsis_gcc.h **** }
 270:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 271:Generated_Source\PSoC5/cmsis_gcc.h **** 
 272:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 14


 273:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 274:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 275:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 276:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 277:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 278:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 279:Generated_Source\PSoC5/cmsis_gcc.h **** {
 280:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : "sp");
 281:Generated_Source\PSoC5/cmsis_gcc.h **** }
 282:Generated_Source\PSoC5/cmsis_gcc.h **** 
 283:Generated_Source\PSoC5/cmsis_gcc.h **** 
 284:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 285:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 286:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 287:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 288:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 289:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 290:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 291:Generated_Source\PSoC5/cmsis_gcc.h **** {
 292:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : "sp");
 293:Generated_Source\PSoC5/cmsis_gcc.h **** }
 294:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 295:Generated_Source\PSoC5/cmsis_gcc.h **** 
 296:Generated_Source\PSoC5/cmsis_gcc.h **** 
 297:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 298:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask
 299:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 300:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 301:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 302:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 303:Generated_Source\PSoC5/cmsis_gcc.h **** {
 304:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 305:Generated_Source\PSoC5/cmsis_gcc.h **** 
 306:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 307:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 308:Generated_Source\PSoC5/cmsis_gcc.h **** }
 309:Generated_Source\PSoC5/cmsis_gcc.h **** 
 310:Generated_Source\PSoC5/cmsis_gcc.h **** 
 311:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 312:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 313:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 314:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 315:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 316:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 317:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 318:Generated_Source\PSoC5/cmsis_gcc.h **** {
 319:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 320:Generated_Source\PSoC5/cmsis_gcc.h **** 
 321:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 322:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 323:Generated_Source\PSoC5/cmsis_gcc.h **** }
 324:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 325:Generated_Source\PSoC5/cmsis_gcc.h **** 
 326:Generated_Source\PSoC5/cmsis_gcc.h **** 
 327:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 328:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask
 329:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 15


 330:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 331:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 332:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 333:Generated_Source\PSoC5/cmsis_gcc.h **** {
 334:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 335:Generated_Source\PSoC5/cmsis_gcc.h **** }
 336:Generated_Source\PSoC5/cmsis_gcc.h **** 
 337:Generated_Source\PSoC5/cmsis_gcc.h **** 
 338:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 339:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 340:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 341:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 342:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 343:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 344:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 345:Generated_Source\PSoC5/cmsis_gcc.h **** {
 346:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 347:Generated_Source\PSoC5/cmsis_gcc.h **** }
 348:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 349:Generated_Source\PSoC5/cmsis_gcc.h **** 
 350:Generated_Source\PSoC5/cmsis_gcc.h **** 
 351:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 352:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 353:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 354:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 355:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable FIQ
 356:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 357:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 358:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 359:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 360:Generated_Source\PSoC5/cmsis_gcc.h **** {
 361:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 362:Generated_Source\PSoC5/cmsis_gcc.h **** }
 363:Generated_Source\PSoC5/cmsis_gcc.h **** 
 364:Generated_Source\PSoC5/cmsis_gcc.h **** 
 365:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 366:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable FIQ
 367:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 368:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 369:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 370:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 371:Generated_Source\PSoC5/cmsis_gcc.h **** {
 372:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 373:Generated_Source\PSoC5/cmsis_gcc.h **** }
 374:Generated_Source\PSoC5/cmsis_gcc.h **** 
 375:Generated_Source\PSoC5/cmsis_gcc.h **** 
 376:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 377:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority
 378:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 379:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 380:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 381:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 382:Generated_Source\PSoC5/cmsis_gcc.h **** {
 383:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 384:Generated_Source\PSoC5/cmsis_gcc.h **** 
 385:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 386:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 16


 387:Generated_Source\PSoC5/cmsis_gcc.h **** }
 388:Generated_Source\PSoC5/cmsis_gcc.h **** 
 389:Generated_Source\PSoC5/cmsis_gcc.h **** 
 390:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 391:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 392:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 393:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 394:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 395:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 396:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 397:Generated_Source\PSoC5/cmsis_gcc.h **** {
 398:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 399:Generated_Source\PSoC5/cmsis_gcc.h **** 
 400:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 401:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 402:Generated_Source\PSoC5/cmsis_gcc.h **** }
 403:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 404:Generated_Source\PSoC5/cmsis_gcc.h **** 
 405:Generated_Source\PSoC5/cmsis_gcc.h **** 
 406:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 407:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority
 408:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 409:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 410:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 411:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 412:Generated_Source\PSoC5/cmsis_gcc.h **** {
 413:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 414:Generated_Source\PSoC5/cmsis_gcc.h **** }
 415:Generated_Source\PSoC5/cmsis_gcc.h **** 
 416:Generated_Source\PSoC5/cmsis_gcc.h **** 
 417:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 419:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 420:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 421:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 422:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 423:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 424:Generated_Source\PSoC5/cmsis_gcc.h **** {
 425:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 426:Generated_Source\PSoC5/cmsis_gcc.h **** }
 427:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 428:Generated_Source\PSoC5/cmsis_gcc.h **** 
 429:Generated_Source\PSoC5/cmsis_gcc.h **** 
 430:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 431:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 432:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 433:Generated_Source\PSoC5/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 434:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 435:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 436:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 437:Generated_Source\PSoC5/cmsis_gcc.h **** {
 438:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 439:Generated_Source\PSoC5/cmsis_gcc.h **** }
 440:Generated_Source\PSoC5/cmsis_gcc.h **** 
 441:Generated_Source\PSoC5/cmsis_gcc.h **** 
 442:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 443:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 17


 444:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 445:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 446:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 447:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 448:Generated_Source\PSoC5/cmsis_gcc.h **** {
 449:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 450:Generated_Source\PSoC5/cmsis_gcc.h **** 
 451:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 452:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 453:Generated_Source\PSoC5/cmsis_gcc.h **** }
 454:Generated_Source\PSoC5/cmsis_gcc.h **** 
 455:Generated_Source\PSoC5/cmsis_gcc.h **** 
 456:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 457:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 458:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 459:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 460:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 461:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 462:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 463:Generated_Source\PSoC5/cmsis_gcc.h **** {
 464:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 465:Generated_Source\PSoC5/cmsis_gcc.h **** 
 466:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 467:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 468:Generated_Source\PSoC5/cmsis_gcc.h **** }
 469:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 470:Generated_Source\PSoC5/cmsis_gcc.h **** 
 471:Generated_Source\PSoC5/cmsis_gcc.h **** 
 472:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 473:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask
 474:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 475:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 476:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 477:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 478:Generated_Source\PSoC5/cmsis_gcc.h **** {
 479:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 480:Generated_Source\PSoC5/cmsis_gcc.h **** }
 481:Generated_Source\PSoC5/cmsis_gcc.h **** 
 482:Generated_Source\PSoC5/cmsis_gcc.h **** 
 483:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 484:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 485:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 486:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 487:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 488:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 489:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 490:Generated_Source\PSoC5/cmsis_gcc.h **** {
 491:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 492:Generated_Source\PSoC5/cmsis_gcc.h **** }
 493:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 494:Generated_Source\PSoC5/cmsis_gcc.h **** 
 495:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 496:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 497:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 498:Generated_Source\PSoC5/cmsis_gcc.h **** 
 499:Generated_Source\PSoC5/cmsis_gcc.h **** 
 500:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 18


 501:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    )
 502:Generated_Source\PSoC5/cmsis_gcc.h **** 
 503:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 504:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 505:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 506:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 507:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 508:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 509:Generated_Source\PSoC5/cmsis_gcc.h **** {
 510:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 511:Generated_Source\PSoC5/cmsis_gcc.h **** 
 512:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 513:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 514:Generated_Source\PSoC5/cmsis_gcc.h **** }
 515:Generated_Source\PSoC5/cmsis_gcc.h **** 
 516:Generated_Source\PSoC5/cmsis_gcc.h **** 
 517:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 518:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 519:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 520:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 521:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 522:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 523:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 524:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 525:Generated_Source\PSoC5/cmsis_gcc.h **** {
 526:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 527:Generated_Source\PSoC5/cmsis_gcc.h **** 
 528:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 529:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 530:Generated_Source\PSoC5/cmsis_gcc.h **** }
 531:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 532:Generated_Source\PSoC5/cmsis_gcc.h **** 
 533:Generated_Source\PSoC5/cmsis_gcc.h **** 
 534:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 535:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 536:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 537:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 538:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 539:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 540:Generated_Source\PSoC5/cmsis_gcc.h **** {
 541:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 542:Generated_Source\PSoC5/cmsis_gcc.h **** }
 543:Generated_Source\PSoC5/cmsis_gcc.h **** 
 544:Generated_Source\PSoC5/cmsis_gcc.h **** 
 545:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 546:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 547:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 548:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 549:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 550:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 551:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 552:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 553:Generated_Source\PSoC5/cmsis_gcc.h **** {
 554:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 555:Generated_Source\PSoC5/cmsis_gcc.h **** }
 556:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 557:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 19


 558:Generated_Source\PSoC5/cmsis_gcc.h **** 
 559:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 560:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 561:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 562:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 563:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 564:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 565:Generated_Source\PSoC5/cmsis_gcc.h **** {
 566:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 567:Generated_Source\PSoC5/cmsis_gcc.h **** 
 568:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 569:Generated_Source\PSoC5/cmsis_gcc.h **** 
 570:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 571:Generated_Source\PSoC5/cmsis_gcc.h **** }
 572:Generated_Source\PSoC5/cmsis_gcc.h **** 
 573:Generated_Source\PSoC5/cmsis_gcc.h **** 
 574:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 575:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 576:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 577:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 578:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 579:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 580:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 581:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 582:Generated_Source\PSoC5/cmsis_gcc.h **** {
 583:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 584:Generated_Source\PSoC5/cmsis_gcc.h **** 
 585:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 586:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 587:Generated_Source\PSoC5/cmsis_gcc.h **** }
 588:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 589:Generated_Source\PSoC5/cmsis_gcc.h **** 
 590:Generated_Source\PSoC5/cmsis_gcc.h **** 
 591:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 592:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 593:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 594:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 595:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 596:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 597:Generated_Source\PSoC5/cmsis_gcc.h **** {
 598:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 599:Generated_Source\PSoC5/cmsis_gcc.h **** }
 600:Generated_Source\PSoC5/cmsis_gcc.h **** 
 601:Generated_Source\PSoC5/cmsis_gcc.h **** 
 602:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 603:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 604:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 605:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 606:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 607:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 608:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 609:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 610:Generated_Source\PSoC5/cmsis_gcc.h **** {
 611:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 612:Generated_Source\PSoC5/cmsis_gcc.h **** }
 613:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 614:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 20


 615:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 616:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    ) */
 617:Generated_Source\PSoC5/cmsis_gcc.h **** 
 618:Generated_Source\PSoC5/cmsis_gcc.h **** 
 619:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 620:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 621:Generated_Source\PSoC5/cmsis_gcc.h **** 
 622:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 623:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get FPSCR
 624:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 625:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 626:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 627:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 628:Generated_Source\PSoC5/cmsis_gcc.h **** {
 629:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 630:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 631:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 632:Generated_Source\PSoC5/cmsis_gcc.h **** 
 633:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                 /* Empty asm statement works as a scheduling
 634:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 635:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 636:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 637:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 638:Generated_Source\PSoC5/cmsis_gcc.h ****    return(0U);
 639:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 640:Generated_Source\PSoC5/cmsis_gcc.h **** }
 641:Generated_Source\PSoC5/cmsis_gcc.h **** 
 642:Generated_Source\PSoC5/cmsis_gcc.h **** 
 643:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 644:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set FPSCR
 645:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 646:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 647:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 648:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 649:Generated_Source\PSoC5/cmsis_gcc.h **** {
 650:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 651:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 652:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                           /* Empty asm statement works as a 
 653:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 654:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 655:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 656:Generated_Source\PSoC5/cmsis_gcc.h **** }
 657:Generated_Source\PSoC5/cmsis_gcc.h **** 
 658:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 659:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 660:Generated_Source\PSoC5/cmsis_gcc.h **** 
 661:Generated_Source\PSoC5/cmsis_gcc.h **** 
 662:Generated_Source\PSoC5/cmsis_gcc.h **** 
 663:Generated_Source\PSoC5/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 664:Generated_Source\PSoC5/cmsis_gcc.h **** 
 665:Generated_Source\PSoC5/cmsis_gcc.h **** 
 666:Generated_Source\PSoC5/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 667:Generated_Source\PSoC5/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 668:Generated_Source\PSoC5/cmsis_gcc.h ****   Access to dedicated instructions
 669:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
 670:Generated_Source\PSoC5/cmsis_gcc.h **** */
 671:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 21


 672:Generated_Source\PSoC5/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 673:Generated_Source\PSoC5/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 674:Generated_Source\PSoC5/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 675:Generated_Source\PSoC5/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 676:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 677:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 678:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 679:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 680:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 681:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 682:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 683:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 684:Generated_Source\PSoC5/cmsis_gcc.h **** 
 685:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 686:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   No Operation
 687:Generated_Source\PSoC5/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 688:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 689:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 690:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 691:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("nop");
 692:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 693:Generated_Source\PSoC5/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 694:Generated_Source\PSoC5/cmsis_gcc.h **** 
 695:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 696:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Interrupt
 697:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 698:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 699:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 700:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 701:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfi");
 702:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 703:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 704:Generated_Source\PSoC5/cmsis_gcc.h **** 
 705:Generated_Source\PSoC5/cmsis_gcc.h **** 
 706:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 707:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Event
 708:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 709:Generated_Source\PSoC5/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 710:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 711:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 712:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 713:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfe");
 714:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 715:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 716:Generated_Source\PSoC5/cmsis_gcc.h **** 
 717:Generated_Source\PSoC5/cmsis_gcc.h **** 
 718:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 719:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Send Event
 720:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 721:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 722:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 723:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 724:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("sev");
 725:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 726:Generated_Source\PSoC5/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 727:Generated_Source\PSoC5/cmsis_gcc.h **** 
 728:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 22


 729:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 730:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 731:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 732:Generated_Source\PSoC5/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 733:Generated_Source\PSoC5/cmsis_gcc.h ****            after the instruction has been completed.
 734:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 735:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 736:Generated_Source\PSoC5/cmsis_gcc.h **** {
 737:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 738:Generated_Source\PSoC5/cmsis_gcc.h **** }
 739:Generated_Source\PSoC5/cmsis_gcc.h **** 
 740:Generated_Source\PSoC5/cmsis_gcc.h **** 
 741:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 742:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 743:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 744:Generated_Source\PSoC5/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 745:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 746:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 747:Generated_Source\PSoC5/cmsis_gcc.h **** {
 748:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 749:Generated_Source\PSoC5/cmsis_gcc.h **** }
 750:Generated_Source\PSoC5/cmsis_gcc.h **** 
 751:Generated_Source\PSoC5/cmsis_gcc.h **** 
 752:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 753:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Memory Barrier
 754:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 755:Generated_Source\PSoC5/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 756:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 757:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 758:Generated_Source\PSoC5/cmsis_gcc.h **** {
 759:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 760:Generated_Source\PSoC5/cmsis_gcc.h **** }
 761:Generated_Source\PSoC5/cmsis_gcc.h **** 
 762:Generated_Source\PSoC5/cmsis_gcc.h **** 
 763:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 764:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 765:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 766:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 767:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 768:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 769:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 770:Generated_Source\PSoC5/cmsis_gcc.h **** {
 771:Generated_Source\PSoC5/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 772:Generated_Source\PSoC5/cmsis_gcc.h ****   return __builtin_bswap32(value);
 773:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 774:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 775:Generated_Source\PSoC5/cmsis_gcc.h **** 
 776:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 777:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 778:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 779:Generated_Source\PSoC5/cmsis_gcc.h **** }
 780:Generated_Source\PSoC5/cmsis_gcc.h **** 
 781:Generated_Source\PSoC5/cmsis_gcc.h **** 
 782:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 783:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 784:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 785:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 23


 786:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 787:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 788:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 789:Generated_Source\PSoC5/cmsis_gcc.h **** {
 790:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 791:Generated_Source\PSoC5/cmsis_gcc.h **** 
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 320              		.loc 2 792 0
 321 0336 3B69     		ldr	r3, [r7, #16]
 322              		.syntax unified
 323              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 324 0338 5BBA     		rev16 r3, r3
 325              	@ 0 "" 2
 326              		.thumb
 327              		.syntax unified
 328 033a FB60     		str	r3, [r7, #12]
 793:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 329              		.loc 2 793 0
 330 033c FB68     		ldr	r3, [r7, #12]
 331              	.LBE9:
 332              	.LBE8:
 333              		.loc 1 150 0
 334 033e 9BB2     		uxth	r3, r3
 335 0340 1846     		mov	r0, r3
 336 0342 FFF7FEFF 		bl	infoGet
 151:..\src/command_processing.c ****             break;
 337              		.loc 1 151 0
 338 0346 BDE0     		b	.L1
 339              	.L7:
 152:..\src/command_processing.c **** 
 153:..\src/command_processing.c **** //============================================================     CMD_SET_PARAM
 154:..\src/command_processing.c **** 
 155:..\src/command_processing.c ****         case CMD_SET_ZEROS:
 156:..\src/command_processing.c ****             setZeros();
 340              		.loc 1 156 0
 341 0348 FFF7FEFF 		bl	setZeros
 157:..\src/command_processing.c ****             break;
 342              		.loc 1 157 0
 343 034c BAE0     		b	.L1
 344              	.L14:
 158:..\src/command_processing.c **** 
 159:..\src/command_processing.c **** //============================================================     CMD_GET_PARAM
 160:..\src/command_processing.c **** 
 161:..\src/command_processing.c ****         case CMD_GET_PARAM_LIST:
 162:..\src/command_processing.c ****             manage_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 345              		.loc 1 162 0
 346 034e 114B     		ldr	r3, .L48+4
 347 0350 1B88     		ldrh	r3, [r3]
 348 0352 BB61     		str	r3, [r7, #24]
 349              	.LBB10:
 350              	.LBB11:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 351              		.loc 2 792 0
 352 0354 BB69     		ldr	r3, [r7, #24]
 353              		.syntax unified
 354              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 355 0356 5BBA     		rev16 r3, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 24


 356              	@ 0 "" 2
 357              		.thumb
 358              		.syntax unified
 359 0358 BB60     		str	r3, [r7, #8]
 360              		.loc 2 793 0
 361 035a BB68     		ldr	r3, [r7, #8]
 362              	.LBE11:
 363              	.LBE10:
 364              		.loc 1 162 0
 365 035c 9BB2     		uxth	r3, r3
 366 035e 1846     		mov	r0, r3
 367 0360 FFF7FEFF 		bl	manage_param_list
 163:..\src/command_processing.c ****             break;
 368              		.loc 1 163 0
 369 0364 AEE0     		b	.L1
 370              	.L5:
 164:..\src/command_processing.c **** 
 165:..\src/command_processing.c **** //=================================================================     CMD_PING
 166:..\src/command_processing.c ****             
 167:..\src/command_processing.c ****         case CMD_PING:
 168:..\src/command_processing.c ****             cmd_ping();
 371              		.loc 1 168 0
 372 0366 FFF7FEFF 		bl	cmd_ping
 169:..\src/command_processing.c ****             break;
 373              		.loc 1 169 0
 374 036a ABE0     		b	.L1
 375              	.L8:
 170:..\src/command_processing.c **** 
 171:..\src/command_processing.c **** //=========================================================     CMD_STORE_PARAMS
 172:..\src/command_processing.c ****             
 173:..\src/command_processing.c ****         case CMD_STORE_PARAMS:
 174:..\src/command_processing.c ****             cmd_store_params();
 376              		.loc 1 174 0
 377 036c FFF7FEFF 		bl	cmd_store_params
 175:..\src/command_processing.c ****             break;
 378              		.loc 1 175 0
 379 0370 A8E0     		b	.L1
 380              	.L9:
 176:..\src/command_processing.c **** 
 177:..\src/command_processing.c **** //=================================================     CMD_STORE_DEFAULT_PARAMS
 178:..\src/command_processing.c **** 
 179:..\src/command_processing.c ****         case CMD_STORE_DEFAULT_PARAMS:
 180:..\src/command_processing.c ****             if(memStore(DEFAULT_EEPROM_DISPLACEMENT))
 381              		.loc 1 180 0
 382 0372 3220     		movs	r0, #50
 383 0374 FFF7FEFF 		bl	memStore
 384 0378 0346     		mov	r3, r0
 385 037a 002B     		cmp	r3, #0
 386 037c 03D0     		beq	.L36
 181:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 387              		.loc 1 181 0
 388 037e 0120     		movs	r0, #1
 389 0380 FFF7FEFF 		bl	sendAcknowledgment
 182:..\src/command_processing.c ****             else
 183:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 184:..\src/command_processing.c ****             break;
 390              		.loc 1 184 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 25


 391 0384 9EE0     		b	.L1
 392              	.L36:
 183:..\src/command_processing.c ****             break;
 393              		.loc 1 183 0
 394 0386 0020     		movs	r0, #0
 395 0388 FFF7FEFF 		bl	sendAcknowledgment
 396              		.loc 1 184 0
 397 038c 9AE0     		b	.L1
 398              	.L49:
 399 038e 00BF     		.align	2
 400              	.L48:
 401 0390 00000000 		.word	g_rx
 402 0394 01000000 		.word	g_rx+1
 403              	.L10:
 185:..\src/command_processing.c **** 
 186:..\src/command_processing.c **** //=======================================================     CMD_RESTORE_PARAMS
 187:..\src/command_processing.c **** 
 188:..\src/command_processing.c ****         case CMD_RESTORE_PARAMS:
 189:..\src/command_processing.c ****             if(memRestore())
 404              		.loc 1 189 0
 405 0398 FFF7FEFF 		bl	memRestore
 406 039c 0346     		mov	r3, r0
 407 039e 002B     		cmp	r3, #0
 408 03a0 03D0     		beq	.L38
 190:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 409              		.loc 1 190 0
 410 03a2 0120     		movs	r0, #1
 411 03a4 FFF7FEFF 		bl	sendAcknowledgment
 191:..\src/command_processing.c ****             else
 192:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 193:..\src/command_processing.c ****             break;
 412              		.loc 1 193 0
 413 03a8 8CE0     		b	.L1
 414              	.L38:
 192:..\src/command_processing.c ****             break;
 415              		.loc 1 192 0
 416 03aa 0020     		movs	r0, #0
 417 03ac FFF7FEFF 		bl	sendAcknowledgment
 418              		.loc 1 193 0
 419 03b0 88E0     		b	.L1
 420              	.L13:
 194:..\src/command_processing.c **** 
 195:..\src/command_processing.c **** //=============================================================     CMD_INIT_MEM
 196:..\src/command_processing.c **** 
 197:..\src/command_processing.c ****         case CMD_INIT_MEM:            
 198:..\src/command_processing.c ****             if(memInit())
 421              		.loc 1 198 0
 422 03b2 FFF7FEFF 		bl	memInit
 423 03b6 0346     		mov	r3, r0
 424 03b8 002B     		cmp	r3, #0
 425 03ba 03D0     		beq	.L40
 199:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 426              		.loc 1 199 0
 427 03bc 0120     		movs	r0, #1
 428 03be FFF7FEFF 		bl	sendAcknowledgment
 200:..\src/command_processing.c ****             else
 201:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 26


 202:..\src/command_processing.c ****             break;
 429              		.loc 1 202 0
 430 03c2 7FE0     		b	.L1
 431              	.L40:
 201:..\src/command_processing.c ****             break;
 432              		.loc 1 201 0
 433 03c4 0020     		movs	r0, #0
 434 03c6 FFF7FEFF 		bl	sendAcknowledgment
 435              		.loc 1 202 0
 436 03ca 7BE0     		b	.L1
 437              	.L12:
 203:..\src/command_processing.c **** 
 204:..\src/command_processing.c **** //===========================================================     CMD_BOOTLOADER
 205:..\src/command_processing.c **** 
 206:..\src/command_processing.c ****         case CMD_BOOTLOADER:
 207:..\src/command_processing.c ****             //Not sure if ACK_OK is correct, should check
 208:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 438              		.loc 1 208 0
 439 03cc 0120     		movs	r0, #1
 440 03ce FFF7FEFF 		bl	sendAcknowledgment
 209:..\src/command_processing.c ****             CyDelay(1000);
 441              		.loc 1 209 0
 442 03d2 4FF47A70 		mov	r0, #1000
 443 03d6 FFF7FEFF 		bl	CyDelay
 210:..\src/command_processing.c ****             FTDI_ENABLE_Write(0x00);
 444              		.loc 1 210 0
 445 03da 0020     		movs	r0, #0
 446 03dc FFF7FEFF 		bl	FTDI_ENABLE_Write
 211:..\src/command_processing.c ****             CyDelay(1000);
 447              		.loc 1 211 0
 448 03e0 4FF47A70 		mov	r0, #1000
 449 03e4 FFF7FEFF 		bl	CyDelay
 212:..\src/command_processing.c ****             Bootloadable_Load();
 450              		.loc 1 212 0
 451 03e8 FFF7FEFF 		bl	Bootloadable_Load
 213:..\src/command_processing.c ****             break;
 452              		.loc 1 213 0
 453 03ec 6AE0     		b	.L1
 454              	.L15:
 214:..\src/command_processing.c **** 
 215:..\src/command_processing.c **** //============================================================     CMD_HAND_CALIBRATE
 216:..\src/command_processing.c **** 
 217:..\src/command_processing.c ****         case CMD_HAND_CALIBRATE:
 218:..\src/command_processing.c ****             calib.speed = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 455              		.loc 1 218 0
 456 03ee 374B     		ldr	r3, .L50
 457 03f0 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 458 03f2 1B02     		lsls	r3, r3, #8
 459 03f4 1AB2     		sxth	r2, r3
 460 03f6 354B     		ldr	r3, .L50
 461 03f8 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 462 03fa 1BB2     		sxth	r3, r3
 463 03fc 1343     		orrs	r3, r3, r2
 464 03fe 1AB2     		sxth	r2, r3
 465 0400 334B     		ldr	r3, .L50+4
 466 0402 5A80     		strh	r2, [r3, #2]	@ movhi
 219:..\src/command_processing.c ****             calib.repetitions = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 27


 467              		.loc 1 219 0
 468 0404 314B     		ldr	r3, .L50
 469 0406 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 470 0408 1B02     		lsls	r3, r3, #8
 471 040a 1AB2     		sxth	r2, r3
 472 040c 2F4B     		ldr	r3, .L50
 473 040e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 474 0410 1BB2     		sxth	r3, r3
 475 0412 1343     		orrs	r3, r3, r2
 476 0414 1AB2     		sxth	r2, r3
 477 0416 2E4B     		ldr	r3, .L50+4
 478 0418 9A80     		strh	r2, [r3, #4]	@ movhi
 220:..\src/command_processing.c ****             
 221:..\src/command_processing.c ****             if(calib.speed == -1 && calib.repetitions == -1) {
 479              		.loc 1 221 0
 480 041a 2D4B     		ldr	r3, .L50+4
 481 041c B3F90230 		ldrsh	r3, [r3, #2]
 482 0420 B3F1FF3F 		cmp	r3, #-1
 483 0424 0FD1     		bne	.L42
 484              		.loc 1 221 0 is_stmt 0 discriminator 1
 485 0426 2A4B     		ldr	r3, .L50+4
 486 0428 B3F90430 		ldrsh	r3, [r3, #4]
 487 042c B3F1FF3F 		cmp	r3, #-1
 488 0430 09D1     		bne	.L42
 222:..\src/command_processing.c ****                 calib.enabled = FALSE;
 489              		.loc 1 222 0 is_stmt 1
 490 0432 274B     		ldr	r3, .L50+4
 491 0434 0022     		movs	r2, #0
 492 0436 1A70     		strb	r2, [r3]
 223:..\src/command_processing.c ****                 calib.speed = 0;
 493              		.loc 1 223 0
 494 0438 254B     		ldr	r3, .L50+4
 495 043a 0022     		movs	r2, #0
 496 043c 5A80     		strh	r2, [r3, #2]	@ movhi
 224:..\src/command_processing.c ****                 calib.repetitions = 0;
 497              		.loc 1 224 0
 498 043e 244B     		ldr	r3, .L50+4
 499 0440 0022     		movs	r2, #0
 500 0442 9A80     		strh	r2, [r3, #4]	@ movhi
 225:..\src/command_processing.c ****                 break;
 501              		.loc 1 225 0
 502 0444 3EE0     		b	.L1
 503              	.L42:
 226:..\src/command_processing.c ****             }
 227:..\src/command_processing.c ****             // Speed & repetitions saturations
 228:..\src/command_processing.c ****             if (calib.speed < 0) {
 504              		.loc 1 228 0
 505 0446 224B     		ldr	r3, .L50+4
 506 0448 B3F90230 		ldrsh	r3, [r3, #2]
 507 044c 002B     		cmp	r3, #0
 508 044e 03DA     		bge	.L43
 229:..\src/command_processing.c ****                 calib.speed = 0;
 509              		.loc 1 229 0
 510 0450 1F4B     		ldr	r3, .L50+4
 511 0452 0022     		movs	r2, #0
 512 0454 5A80     		strh	r2, [r3, #2]	@ movhi
 513 0456 07E0     		b	.L44
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 28


 514              	.L43:
 230:..\src/command_processing.c ****             } else if (calib.speed > 200) {
 515              		.loc 1 230 0
 516 0458 1D4B     		ldr	r3, .L50+4
 517 045a B3F90230 		ldrsh	r3, [r3, #2]
 518 045e C82B     		cmp	r3, #200
 519 0460 02DD     		ble	.L44
 231:..\src/command_processing.c ****                 calib.speed = 200;
 520              		.loc 1 231 0
 521 0462 1B4B     		ldr	r3, .L50+4
 522 0464 C822     		movs	r2, #200
 523 0466 5A80     		strh	r2, [r3, #2]	@ movhi
 524              	.L44:
 232:..\src/command_processing.c ****             }
 233:..\src/command_processing.c ****             if (calib.repetitions < 0) {
 525              		.loc 1 233 0
 526 0468 194B     		ldr	r3, .L50+4
 527 046a B3F90430 		ldrsh	r3, [r3, #4]
 528 046e 002B     		cmp	r3, #0
 529 0470 02DA     		bge	.L45
 234:..\src/command_processing.c ****                 calib.repetitions = 0;
 530              		.loc 1 234 0
 531 0472 174B     		ldr	r3, .L50+4
 532 0474 0022     		movs	r2, #0
 533 0476 9A80     		strh	r2, [r3, #4]	@ movhi
 534              	.L45:
 235:..\src/command_processing.c ****             } else if (calib.repetitions > 32767) {
 236:..\src/command_processing.c ****                 calib.repetitions = 32767;
 237:..\src/command_processing.c ****             }
 238:..\src/command_processing.c ****             
 239:..\src/command_processing.c ****             g_refNew[0].pos = 0;                    // SoftHand is on motor 1
 535              		.loc 1 239 0
 536 0478 164B     		ldr	r3, .L50+8
 537 047a 0022     		movs	r2, #0
 538 047c 1A60     		str	r2, [r3]
 240:..\src/command_processing.c ****             calib.enabled = TRUE;
 539              		.loc 1 240 0
 540 047e 144B     		ldr	r3, .L50+4
 541 0480 0122     		movs	r2, #1
 542 0482 1A70     		strb	r2, [r3]
 241:..\src/command_processing.c ****          
 242:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 543              		.loc 1 242 0
 544 0484 0120     		movs	r0, #1
 545 0486 FFF7FEFF 		bl	sendAcknowledgment
 243:..\src/command_processing.c ****             break;
 546              		.loc 1 243 0
 547 048a 1BE0     		b	.L1
 548              	.L28:
 244:..\src/command_processing.c ****             
 245:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_READINGS
 246:..\src/command_processing.c **** 
 247:..\src/command_processing.c ****         case CMD_GET_IMU_READINGS:
 248:..\src/command_processing.c ****             cmd_get_imu_readings();
 549              		.loc 1 248 0
 550 048c FFF7FEFF 		bl	cmd_get_imu_readings
 249:..\src/command_processing.c ****             break; 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 29


 551              		.loc 1 249 0
 552 0490 18E0     		b	.L1
 553              	.L29:
 250:..\src/command_processing.c ****             
 251:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_PARAM
 252:..\src/command_processing.c **** 
 253:..\src/command_processing.c ****         case CMD_GET_IMU_PARAM:
 254:..\src/command_processing.c ****             get_IMU_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 554              		.loc 1 254 0
 555 0492 114B     		ldr	r3, .L50+12
 556 0494 1B88     		ldrh	r3, [r3]
 557 0496 7B61     		str	r3, [r7, #20]
 558              	.LBB12:
 559              	.LBB13:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 560              		.loc 2 792 0
 561 0498 7B69     		ldr	r3, [r7, #20]
 562              		.syntax unified
 563              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 564 049a 5BBA     		rev16 r3, r3
 565              	@ 0 "" 2
 566              		.thumb
 567              		.syntax unified
 568 049c 7B60     		str	r3, [r7, #4]
 569              		.loc 2 793 0
 570 049e 7B68     		ldr	r3, [r7, #4]
 571              	.LBE13:
 572              	.LBE12:
 573              		.loc 1 254 0
 574 04a0 9BB2     		uxth	r3, r3
 575 04a2 1846     		mov	r0, r3
 576 04a4 FFF7FEFF 		bl	get_IMU_param_list
 255:..\src/command_processing.c ****             break;             
 577              		.loc 1 255 0
 578 04a8 0CE0     		b	.L1
 579              	.L30:
 256:..\src/command_processing.c ****             
 257:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_CONF
 258:..\src/command_processing.c **** 
 259:..\src/command_processing.c ****         case CMD_GET_ENCODER_CONF:
 260:..\src/command_processing.c ****             cmd_get_encoder_map();
 580              		.loc 1 260 0
 581 04aa FFF7FEFF 		bl	cmd_get_encoder_map
 261:..\src/command_processing.c ****             break; 
 582              		.loc 1 261 0
 583 04ae 09E0     		b	.L1
 584              	.L31:
 262:..\src/command_processing.c **** 
 263:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_RAW
 264:..\src/command_processing.c **** 
 265:..\src/command_processing.c ****         case CMD_GET_ENCODER_RAW:
 266:..\src/command_processing.c ****             cmd_get_encoder_raw();
 585              		.loc 1 266 0
 586 04b0 FFF7FEFF 		bl	cmd_get_encoder_raw
 267:..\src/command_processing.c ****             break; 
 587              		.loc 1 267 0
 588 04b4 06E0     		b	.L1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 30


 589              	.L32:
 268:..\src/command_processing.c **** 
 269:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_CONF
 270:..\src/command_processing.c **** 
 271:..\src/command_processing.c ****         case CMD_GET_ADC_CONF:
 272:..\src/command_processing.c ****             cmd_get_ADC_map();
 590              		.loc 1 272 0
 591 04b6 FFF7FEFF 		bl	cmd_get_ADC_map
 273:..\src/command_processing.c ****             break; 
 592              		.loc 1 273 0
 593 04ba 03E0     		b	.L1
 594              	.L33:
 274:..\src/command_processing.c ****             
 275:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_RAW
 276:..\src/command_processing.c **** 
 277:..\src/command_processing.c ****         case CMD_GET_ADC_RAW:
 278:..\src/command_processing.c ****             cmd_get_ADC_raw();
 595              		.loc 1 278 0
 596 04bc FFF7FEFF 		bl	cmd_get_ADC_raw
 279:..\src/command_processing.c ****             break; 
 597              		.loc 1 279 0
 598 04c0 00E0     		b	.L1
 599              	.L47:
 280:..\src/command_processing.c ****             
 281:..\src/command_processing.c ****             
 282:..\src/command_processing.c **** //=========================================================== ALL OTHER COMMANDS
 283:..\src/command_processing.c ****         default:
 284:..\src/command_processing.c ****             break;
 600              		.loc 1 284 0
 601 04c2 00BF     		nop
 602              	.L1:
 285:..\src/command_processing.c **** 
 286:..\src/command_processing.c ****     }
 287:..\src/command_processing.c **** }  
 603              		.loc 1 287 0
 604 04c4 2037     		adds	r7, r7, #32
 605              		.cfi_def_cfa_offset 8
 606 04c6 BD46     		mov	sp, r7
 607              		.cfi_def_cfa_register 13
 608              		@ sp needed
 609 04c8 80BD     		pop	{r7, pc}
 610              	.L51:
 611 04ca 00BF     		.align	2
 612              	.L50:
 613 04cc 00000000 		.word	g_rx
 614 04d0 00000000 		.word	calib
 615 04d4 00000000 		.word	g_refNew
 616 04d8 01000000 		.word	g_rx+1
 617              		.cfi_endproc
 618              	.LFE64:
 619              		.size	commProcess, .-commProcess
 620              		.section	.text.infoSend,"ax",%progbits
 621              		.align	2
 622              		.global	infoSend
 623              		.thumb
 624              		.thumb_func
 625              		.type	infoSend, %function
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 31


 626              	infoSend:
 627              	.LFB65:
 288:..\src/command_processing.c **** 
 289:..\src/command_processing.c **** //==============================================================================
 290:..\src/command_processing.c **** //                                                                     INFO SEND
 291:..\src/command_processing.c **** //==============================================================================
 292:..\src/command_processing.c **** 
 293:..\src/command_processing.c **** void infoSend(void){
 628              		.loc 1 293 0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 1504
 631              		@ frame_needed = 1, uses_anonymous_args = 0
 632 0000 80B5     		push	{r7, lr}
 633              		.cfi_def_cfa_offset 8
 634              		.cfi_offset 7, -8
 635              		.cfi_offset 14, -4
 636 0002 ADF5BC6D 		sub	sp, sp, #1504
 637              		.cfi_def_cfa_offset 1512
 638 0006 00AF     		add	r7, sp, #0
 639              		.cfi_def_cfa_register 7
 294:..\src/command_processing.c ****     char packet_string[1500];
 295:..\src/command_processing.c ****     
 296:..\src/command_processing.c ****     prepare_generic_info(packet_string);
 640              		.loc 1 296 0
 641 0008 3B1D     		adds	r3, r7, #4
 642 000a 1846     		mov	r0, r3
 643 000c FFF7FEFF 		bl	prepare_generic_info
 297:..\src/command_processing.c ****     UART_RS485_PutString(packet_string);
 644              		.loc 1 297 0
 645 0010 3B1D     		adds	r3, r7, #4
 646 0012 1846     		mov	r0, r3
 647 0014 FFF7FEFF 		bl	UART_RS485_PutString
 298:..\src/command_processing.c **** }
 648              		.loc 1 298 0
 649 0018 00BF     		nop
 650 001a 07F5BC67 		add	r7, r7, #1504
 651              		.cfi_def_cfa_offset 8
 652 001e BD46     		mov	sp, r7
 653              		.cfi_def_cfa_register 13
 654              		@ sp needed
 655 0020 80BD     		pop	{r7, pc}
 656              		.cfi_endproc
 657              	.LFE65:
 658              		.size	infoSend, .-infoSend
 659 0022 00BF     		.section	.text.infoGet,"ax",%progbits
 660              		.align	2
 661              		.global	infoGet
 662              		.thumb
 663              		.thumb_func
 664              		.type	infoGet, %function
 665              	infoGet:
 666              	.LFB66:
 299:..\src/command_processing.c **** 
 300:..\src/command_processing.c **** 
 301:..\src/command_processing.c **** //==============================================================================
 302:..\src/command_processing.c **** //                                                              COMMAND GET INFO
 303:..\src/command_processing.c **** //==============================================================================
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 32


 304:..\src/command_processing.c **** 
 305:..\src/command_processing.c **** void infoGet(uint16 info_type) {
 667              		.loc 1 305 0
 668              		.cfi_startproc
 669              		@ args = 0, pretend = 0, frame = 24008
 670              		@ frame_needed = 1, uses_anonymous_args = 0
 671 0000 80B5     		push	{r7, lr}
 672              		.cfi_def_cfa_offset 8
 673              		.cfi_offset 7, -8
 674              		.cfi_offset 14, -4
 675 0002 ADF5BB4D 		sub	sp, sp, #23936
 676              		.cfi_def_cfa_offset 23944
 677 0006 92B0     		sub	sp, sp, #72
 678              		.cfi_def_cfa_offset 24016
 679 0008 00AF     		add	r7, sp, #0
 680              		.cfi_def_cfa_register 7
 681 000a 0246     		mov	r2, r0
 682 000c 07F14803 		add	r3, r7, #72
 683 0010 423B     		subs	r3, r3, #66
 684 0012 1A80     		strh	r2, [r3]	@ movhi
 306:..\src/command_processing.c ****     char packet_string[4000] = "";
 685              		.loc 1 306 0
 686 0014 07F59C43 		add	r3, r7, #19968
 687 0018 03F12803 		add	r3, r3, #40
 688 001c 0022     		movs	r2, #0
 689 001e 1A60     		str	r2, [r3]
 690 0020 0433     		adds	r3, r3, #4
 691 0022 40F69C72 		movw	r2, #3996
 692 0026 0021     		movs	r1, #0
 693 0028 1846     		mov	r0, r3
 694 002a FFF7FEFF 		bl	memset
 307:..\src/command_processing.c ****     char str_sd_data[20000] = "";
 695              		.loc 1 307 0
 696 002e 07F14803 		add	r3, r7, #72
 697 0032 403B     		subs	r3, r3, #64
 698 0034 0022     		movs	r2, #0
 699 0036 1A60     		str	r2, [r3]
 700 0038 0433     		adds	r3, r3, #4
 701 003a 44F61C62 		movw	r2, #19996
 702 003e 0021     		movs	r1, #0
 703 0040 1846     		mov	r0, r3
 704 0042 FFF7FEFF 		bl	memset
 308:..\src/command_processing.c ****     //==================================     choose info type and prepare string
 309:..\src/command_processing.c **** 
 310:..\src/command_processing.c ****     switch (info_type) {
 705              		.loc 1 310 0
 706 0046 07F14803 		add	r3, r7, #72
 707 004a 423B     		subs	r3, r3, #66
 708 004c 1B88     		ldrh	r3, [r3]
 709 004e 032B     		cmp	r3, #3
 710 0050 50D8     		bhi	.L61
 711 0052 01A2     		adr	r2, .L56
 712 0054 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 713              		.p2align 2
 714              	.L56:
 715 0058 69000000 		.word	.L55+1
 716 005c 8B000000 		.word	.L57+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 33


 717 0060 AD000000 		.word	.L58+1
 718 0064 D3000000 		.word	.L59+1
 719              		.p2align 1
 720              	.L55:
 311:..\src/command_processing.c ****         case INFO_ALL:
 312:..\src/command_processing.c ****             prepare_generic_info(packet_string);
 721              		.loc 1 312 0
 722 0068 07F59C43 		add	r3, r7, #19968
 723 006c 03F12803 		add	r3, r3, #40
 724 0070 1846     		mov	r0, r3
 725 0072 FFF7FEFF 		bl	prepare_generic_info
 313:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer(); 
 726              		.loc 1 313 0
 727 0076 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 314:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 728              		.loc 1 314 0
 729 007a 07F59C43 		add	r3, r7, #19968
 730 007e 03F12803 		add	r3, r3, #40
 731 0082 1846     		mov	r0, r3
 732 0084 FFF7FEFF 		bl	UART_RS485_PutString
 315:..\src/command_processing.c ****             break;
 733              		.loc 1 315 0
 734 0088 35E0     		b	.L60
 735              	.L57:
 316:..\src/command_processing.c ****         case CYCLES_INFO:
 317:..\src/command_processing.c ****             prepare_counter_info(packet_string);
 736              		.loc 1 317 0
 737 008a 07F59C43 		add	r3, r7, #19968
 738 008e 03F12803 		add	r3, r3, #40
 739 0092 1846     		mov	r0, r3
 740 0094 FFF7FEFF 		bl	prepare_counter_info
 318:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 741              		.loc 1 318 0
 742 0098 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 319:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 743              		.loc 1 319 0
 744 009c 07F59C43 		add	r3, r7, #19968
 745 00a0 03F12803 		add	r3, r3, #40
 746 00a4 1846     		mov	r0, r3
 747 00a6 FFF7FEFF 		bl	UART_RS485_PutString
 320:..\src/command_processing.c ****             break;
 748              		.loc 1 320 0
 749 00aa 24E0     		b	.L60
 750              	.L58:
 321:..\src/command_processing.c ****         case GET_SD_PARAM:
 322:..\src/command_processing.c ****             Read_SD_Param(packet_string, sizeof(packet_string));
 751              		.loc 1 322 0
 752 00ac 07F59C43 		add	r3, r7, #19968
 753 00b0 03F12803 		add	r3, r3, #40
 754 00b4 4FF47A61 		mov	r1, #4000
 755 00b8 1846     		mov	r0, r3
 756 00ba FFF7FEFF 		bl	Read_SD_Param
 323:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 757              		.loc 1 323 0
 758 00be FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 324:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 759              		.loc 1 324 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 34


 760 00c2 07F59C43 		add	r3, r7, #19968
 761 00c6 03F12803 		add	r3, r3, #40
 762 00ca 1846     		mov	r0, r3
 763 00cc FFF7FEFF 		bl	UART_RS485_PutString
 325:..\src/command_processing.c ****             break;
 764              		.loc 1 325 0
 765 00d0 11E0     		b	.L60
 766              	.L59:
 326:..\src/command_processing.c ****         case GET_SD_DATA:
 327:..\src/command_processing.c ****             Read_SD_Data(str_sd_data, sizeof(str_sd_data));
 767              		.loc 1 327 0
 768 00d2 07F14803 		add	r3, r7, #72
 769 00d6 403B     		subs	r3, r3, #64
 770 00d8 44F62061 		movw	r1, #20000
 771 00dc 1846     		mov	r0, r3
 772 00de FFF7FEFF 		bl	Read_SD_Data
 328:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 773              		.loc 1 328 0
 774 00e2 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 329:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 775              		.loc 1 329 0
 776 00e6 07F14803 		add	r3, r7, #72
 777 00ea 403B     		subs	r3, r3, #64
 778 00ec 1846     		mov	r0, r3
 779 00ee FFF7FEFF 		bl	UART_RS485_PutString
 330:..\src/command_processing.c **** 
 331:..\src/command_processing.c ****             break;
 780              		.loc 1 331 0
 781 00f2 00E0     		b	.L60
 782              	.L61:
 332:..\src/command_processing.c ****         default:
 333:..\src/command_processing.c ****             break;
 783              		.loc 1 333 0
 784 00f4 00BF     		nop
 785              	.L60:
 334:..\src/command_processing.c ****     }
 335:..\src/command_processing.c **** }
 786              		.loc 1 335 0 discriminator 1
 787 00f6 00BF     		nop
 788 00f8 07F5BB47 		add	r7, r7, #23936
 789 00fc 4837     		adds	r7, r7, #72
 790              		.cfi_def_cfa_offset 8
 791 00fe BD46     		mov	sp, r7
 792              		.cfi_def_cfa_register 13
 793              		@ sp needed
 794 0100 80BD     		pop	{r7, pc}
 795              		.cfi_endproc
 796              	.LFE66:
 797              		.size	infoGet, .-infoGet
 798              		.global	__aeabi_i2f
 799              		.global	__aeabi_fdiv
 800 0102 00BF     		.section	.rodata
 801              		.align	2
 802              	.LC81:
 803 0000 20557362 		.ascii	" Usb\000"
 803      00
 804 0005 000000   		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 35


 805              	.LC82:
 806 0008 2048616E 		.ascii	" Handle\000"
 806      646C6500 
 807              		.align	2
 808              	.LC83:
 809 0010 20454D47 		.ascii	" EMG proportional\000"
 809      2070726F 
 809      706F7274 
 809      696F6E61 
 809      6C00
 810 0022 0000     		.align	2
 811              	.LC84:
 812 0024 20454D47 		.ascii	" EMG integral\000"
 812      20696E74 
 812      65677261 
 812      6C00
 813 0032 0000     		.align	2
 814              	.LC85:
 815 0034 20454D47 		.ascii	" EMG FCFS\000"
 815      20464346 
 815      5300
 816 003e 0000     		.align	2
 817              	.LC86:
 818 0040 20454D47 		.ascii	" EMG FCFS Advanced\000"
 818      20464346 
 818      53204164 
 818      76616E63 
 818      656400
 819 0053 00       		.align	2
 820              	.LC87:
 821 0054 20454D47 		.ascii	" EMG proportional Normally Closed\000"
 821      2070726F 
 821      706F7274 
 821      696F6E61 
 821      6C204E6F 
 822 0076 0000     		.align	2
 823              	.LC88:
 824 0078 20506F73 		.ascii	" Position\000"
 824      6974696F 
 824      6E00
 825 0082 0000     		.align	2
 826              	.LC89:
 827 0084 2050574D 		.ascii	" PWM\000"
 827      00
 828 0089 000000   		.align	2
 829              	.LC90:
 830 008c 20437572 		.ascii	" Current\000"
 830      72656E74 
 830      00
 831 0095 000000   		.align	2
 832              	.LC91:
 833 0098 20506F73 		.ascii	" Position and Current\000"
 833      6974696F 
 833      6E20616E 
 833      64204375 
 833      7272656E 
 834 00ae 0000     		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 36


 835              	.LC92:
 836 00b0 20594553 		.ascii	" YES\000\000"
 836      0000
 837 00b6 0000     		.align	2
 838              	.LC93:
 839 00b8 204E4F00 		.ascii	" NO\000\000"
 839      00
 840 00bd 000000   		.align	2
 841              	.LC94:
 842 00c0 20526967 		.ascii	" Right\000\000"
 842      68740000 
 843              		.align	2
 844              	.LC95:
 845 00c8 204C6566 		.ascii	" Left\000\000"
 845      740000
 846 00cf 00       		.align	2
 847              	.LC96:
 848 00d0 204F4646 		.ascii	" OFF\000\000"
 848      0000
 849 00d6 0000     		.align	2
 850              	.LC97:
 851 00d8 204F4E00 		.ascii	" ON\000\000"
 851      00
 852 00dd 000000   		.align	2
 853              	.LC98:
 854 00e0 204E6F6E 		.ascii	" None\000\000"
 854      650000
 855 00e7 00       		.align	2
 856              	.LC99:
 857 00e8 2053442F 		.ascii	" SD/RTC board\000\000"
 857      52544320 
 857      626F6172 
 857      640000
 858 00f7 00       		.align	2
 859              	.LC100:
 860 00f8 20576946 		.ascii	" WiFi board [N/A]\000\000"
 860      6920626F 
 860      61726420 
 860      5B4E2F41 
 860      5D0000
 861 010b 00       		.align	2
 862              	.LC101:
 863 010c 204F7468 		.ascii	" Other [N/A]\000\000"
 863      6572205B 
 863      4E2F415D 
 863      0000
 864 011a 0000     		.align	2
 865              	.LC102:
 866 011c 204C6F77 		.ascii	" Low\000\000"
 866      0000
 867 0122 0000     		.align	2
 868              	.LC103:
 869 0124 20486967 		.ascii	" High\000\000"
 869      680000
 870 012b 00       		.align	2
 871              	.LC104:
 872 012c 2047454E 		.ascii	" GENERIC USER\000\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 37


 872      45524943 
 872      20555345 
 872      520000
 873 013b 00       		.align	2
 874              	.LC105:
 875 013c 204D4152 		.ascii	" MARIA\000\000"
 875      49410000 
 876              		.align	2
 877              	.LC106:
 878 0144 20524F5A 		.ascii	" ROZA\000\000"
 878      410000
 879 014b 00       		.align	2
 880              	.LC107:
 881 014c 204D4333 		.ascii	" MC33887 (Standard)\000\000"
 881      33383837 
 881      20285374 
 881      616E6461 
 881      72642900 
 882 0161 000000   		.align	2
 883              	.LC108:
 884 0164 20564E48 		.ascii	" VNH5019 (High power)\000\000"
 884      35303139 
 884      20284869 
 884      67682070 
 884      6F776572 
 885 017b 00       		.align	2
 886              	.LC109:
 887 017c 20534F46 		.ascii	" SOFTHAND PRO\000\000"
 887      5448414E 
 887      44205052 
 887      4F0000
 888 018b 00       		.align	2
 889              	.LC110:
 890 018c 2047454E 		.ascii	" GENERIC 2 MOTORS\000\000"
 890      45524943 
 890      2032204D 
 890      4F544F52 
 890      530000
 891 019f 00       		.align	2
 892              	.LC111:
 893 01a0 20414952 		.ascii	" AIR CHAMBERS \000\000"
 893      20434841 
 893      4D424552 
 893      53200000 
 894              		.section	.text.get_param_list,"ax",%progbits
 895              		.align	2
 896              		.global	get_param_list
 897              		.thumb
 898              		.thumb_func
 899              		.type	get_param_list, %function
 900              	get_param_list:
 901              	.LFB67:
 336:..\src/command_processing.c **** 
 337:..\src/command_processing.c **** 
 338:..\src/command_processing.c **** //==============================================================================
 339:..\src/command_processing.c **** //                                                                GET PARAM LIST
 340:..\src/command_processing.c **** //==============================================================================
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 38


 341:..\src/command_processing.c **** 
 342:..\src/command_processing.c **** void get_param_list (uint8* VAR_P[NUM_OF_PARAMS], uint8 TYPES[NUM_OF_PARAMS], 
 343:..\src/command_processing.c ****                      uint8 NUM_ITEMS[NUM_OF_PARAMS], uint8 NUM_STRUCT[NUM_OF_PARAMS],
 344:..\src/command_processing.c ****                      uint8* NUM_MENU, const char* PARAMS_STR[NUM_OF_PARAMS], 
 345:..\src/command_processing.c ****                      uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS], const char* MENU_STR[NUM_OF_PARAMS_MENU
 902              		.loc 1 345 0
 903              		.cfi_startproc
 904              		@ args = 16, pretend = 0, frame = 5456
 905              		@ frame_needed = 1, uses_anonymous_args = 0
 906 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 907              		.cfi_def_cfa_offset 20
 908              		.cfi_offset 4, -20
 909              		.cfi_offset 5, -16
 910              		.cfi_offset 6, -12
 911              		.cfi_offset 7, -8
 912              		.cfi_offset 14, -4
 913 0002 ADF5AA5D 		sub	sp, sp, #5440
 914              		.cfi_def_cfa_offset 5460
 915 0006 85B0     		sub	sp, sp, #20
 916              		.cfi_def_cfa_offset 5480
 917 0008 00AF     		add	r7, sp, #0
 918              		.cfi_def_cfa_register 7
 919 000a 07F11004 		add	r4, r7, #16
 920 000e 043C     		subs	r4, r4, #4
 921 0010 2060     		str	r0, [r4]
 922 0012 07F11000 		add	r0, r7, #16
 923 0016 0838     		subs	r0, r0, #8
 924 0018 0160     		str	r1, [r0]
 925 001a 07F11001 		add	r1, r7, #16
 926 001e 0C39     		subs	r1, r1, #12
 927 0020 0A60     		str	r2, [r1]
 928 0022 07F11002 		add	r2, r7, #16
 929 0026 103A     		subs	r2, r2, #16
 930 0028 1360     		str	r3, [r2]
 346:..\src/command_processing.c ****     
 347:..\src/command_processing.c ****     //Package to be sent variables
 348:..\src/command_processing.c ****     uint8 packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MENUS + 
 931              		.loc 1 348 0
 932 002a 07F17003 		add	r3, r7, #112
 933 002e 1C3B     		subs	r3, r3, #28
 934 0030 0022     		movs	r2, #0
 935 0032 1A60     		str	r2, [r3]
 936 0034 0433     		adds	r3, r3, #4
 937 0036 41F2E242 		movw	r2, #5346
 938 003a 0021     		movs	r1, #0
 939 003c 1846     		mov	r0, r3
 940 003e FFF7FEFF 		bl	memset
 349:..\src/command_processing.c ****     uint16 packet_lenght = PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MEN
 941              		.loc 1 349 0
 942 0042 41F2E643 		movw	r3, #5350
 943 0046 07F5AA52 		add	r2, r7, #5440
 944 004a 02F10802 		add	r2, r2, #8
 945 004e 1380     		strh	r3, [r2]	@ movhi
 350:..\src/command_processing.c **** 
 351:..\src/command_processing.c ****     //Auxiliary variables
 352:..\src/command_processing.c ****     uint8 CYDATA i, j;
 353:..\src/command_processing.c ****     uint8 CYDATA idx = 0;       //Parameter number
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 39


 946              		.loc 1 353 0
 947 0050 0023     		movs	r3, #0
 948 0052 07F5AA52 		add	r2, r7, #5440
 949 0056 02F10D02 		add	r2, r2, #13
 950 005a 1370     		strb	r3, [r2]
 354:..\src/command_processing.c ****     uint8 CYDATA idx_menu = 0;
 951              		.loc 1 354 0
 952 005c 0023     		movs	r3, #0
 953 005e 07F5AA52 		add	r2, r7, #5440
 954 0062 02F10C02 		add	r2, r2, #12
 955 0066 1370     		strb	r3, [r2]
 355:..\src/command_processing.c ****     uint8 CYDATA sod = 0;       //sizeof data
 956              		.loc 1 355 0
 957 0068 0023     		movs	r3, #0
 958 006a 07F5AA52 		add	r2, r7, #5440
 959 006e 02F10B02 		add	r2, r2, #11
 960 0072 1370     		strb	r3, [r2]
 356:..\src/command_processing.c ****     uint8 CYDATA string_lenght;
 357:..\src/command_processing.c ****     char CYDATA aux_str[50] = "";
 961              		.loc 1 357 0
 962 0074 07F13003 		add	r3, r7, #48
 963 0078 103B     		subs	r3, r3, #16
 964 007a 0022     		movs	r2, #0
 965 007c 1A60     		str	r2, [r3]
 966 007e 0433     		adds	r3, r3, #4
 967 0080 2E22     		movs	r2, #46
 968 0082 0021     		movs	r1, #0
 969 0084 1846     		mov	r0, r3
 970 0086 FFF7FEFF 		bl	memset
 358:..\src/command_processing.c ****     float aux_float;
 359:..\src/command_processing.c ****     int16 aux_int16;
 360:..\src/command_processing.c ****     uint16 aux_uint16;
 361:..\src/command_processing.c ****     int32 aux_int32;
 362:..\src/command_processing.c ****     uint32 aux_uint32;
 363:..\src/command_processing.c **** 
 364:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 971              		.loc 1 364 0
 972 008a 0023     		movs	r3, #0
 973 008c 07F5AA52 		add	r2, r7, #5440
 974 0090 02F10702 		add	r2, r2, #7
 975 0094 1370     		strb	r3, [r2]
 365:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 976              		.loc 1 365 0
 977 0096 0123     		movs	r3, #1
 978 0098 07F5AA52 		add	r2, r7, #5440
 979 009c 02F10602 		add	r2, r2, #6
 980 00a0 1370     		strb	r3, [r2]
 366:..\src/command_processing.c ****   
 367:..\src/command_processing.c ****     uint8* m_addr = (uint8*)VAR_P[0];
 981              		.loc 1 367 0
 982 00a2 07F11003 		add	r3, r7, #16
 983 00a6 043B     		subs	r3, r3, #4
 984 00a8 1B68     		ldr	r3, [r3]
 985 00aa 1B68     		ldr	r3, [r3]
 986 00ac 07F5AA52 		add	r2, r7, #5440
 987 00b0 1360     		str	r3, [r2]
 368:..\src/command_processing.c ****     uint8* m_tmp = m_addr;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 40


 988              		.loc 1 368 0
 989 00b2 07F5AA53 		add	r3, r7, #5440
 990 00b6 1B68     		ldr	r3, [r3]
 991 00b8 07F5A952 		add	r2, r7, #5408
 992 00bc 02F11C02 		add	r2, r2, #28
 993 00c0 1360     		str	r3, [r2]
 369:..\src/command_processing.c ****         
 370:..\src/command_processing.c ****     packet_data[0] = CMD_GET_PARAM_LIST;
 994              		.loc 1 370 0
 995 00c2 07F17003 		add	r3, r7, #112
 996 00c6 1C3B     		subs	r3, r3, #28
 997 00c8 0C22     		movs	r2, #12
 998 00ca 1A70     		strb	r2, [r3]
 371:..\src/command_processing.c ****     packet_data[1] = NUM_OF_DEV_PARAMS;
 999              		.loc 1 371 0
 1000 00cc 07F17003 		add	r3, r7, #112
 1001 00d0 1C3B     		subs	r3, r3, #28
 1002 00d2 4C22     		movs	r2, #76
 1003 00d4 5A70     		strb	r2, [r3, #1]
 372:..\src/command_processing.c ****     
 373:..\src/command_processing.c ****     for (idx = 0; idx < NUM_OF_DEV_PARAMS; idx++) {
 1004              		.loc 1 373 0
 1005 00d6 0023     		movs	r3, #0
 1006 00d8 07F5AA52 		add	r2, r7, #5440
 1007 00dc 02F10D02 		add	r2, r2, #13
 1008 00e0 1370     		strb	r3, [r2]
 1009 00e2 02F0A7BE 		b	.L63
 1010              	.L249:
 374:..\src/command_processing.c ****         
 375:..\src/command_processing.c ****         // Assign m_addr memory address
 376:..\src/command_processing.c ****         m_addr = (uint8*)VAR_P[idx];
 1011              		.loc 1 376 0
 1012 00e6 07F5AA53 		add	r3, r7, #5440
 1013 00ea 03F10D03 		add	r3, r3, #13
 1014 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1015 00f0 9A00     		lsls	r2, r3, #2
 1016 00f2 07F11003 		add	r3, r7, #16
 1017 00f6 043B     		subs	r3, r3, #4
 1018 00f8 1B68     		ldr	r3, [r3]
 1019 00fa 1344     		add	r3, r3, r2
 1020 00fc 1B68     		ldr	r3, [r3]
 1021 00fe 07F5AA52 		add	r2, r7, #5440
 1022 0102 1360     		str	r3, [r2]
 377:..\src/command_processing.c ****         
 378:..\src/command_processing.c ****         // Add parameter type and size to packet
 379:..\src/command_processing.c ****         packet_data[2 + PARAM_BYTE_SLOT*idx] = TYPES[idx];
 1023              		.loc 1 379 0
 1024 0104 07F5AA53 		add	r3, r7, #5440
 1025 0108 03F10D03 		add	r3, r3, #13
 1026 010c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1027 010e 3222     		movs	r2, #50
 1028 0110 02FB03F3 		mul	r3, r2, r3
 1029 0114 9A1C     		adds	r2, r3, #2
 1030 0116 07F5AA53 		add	r3, r7, #5440
 1031 011a 03F10D03 		add	r3, r3, #13
 1032 011e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1033 0120 07F11003 		add	r3, r7, #16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 41


 1034 0124 083B     		subs	r3, r3, #8
 1035 0126 1B68     		ldr	r3, [r3]
 1036 0128 0B44     		add	r3, r3, r1
 1037 012a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1038 012c 07F17003 		add	r3, r7, #112
 1039 0130 1C3B     		subs	r3, r3, #28
 1040 0132 9954     		strb	r1, [r3, r2]
 380:..\src/command_processing.c ****         packet_data[3 + PARAM_BYTE_SLOT*idx] = NUM_ITEMS[idx];
 1041              		.loc 1 380 0
 1042 0134 07F5AA53 		add	r3, r7, #5440
 1043 0138 03F10D03 		add	r3, r3, #13
 1044 013c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1045 013e 3222     		movs	r2, #50
 1046 0140 02FB03F3 		mul	r3, r2, r3
 1047 0144 DA1C     		adds	r2, r3, #3
 1048 0146 07F5AA53 		add	r3, r7, #5440
 1049 014a 03F10D03 		add	r3, r3, #13
 1050 014e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1051 0150 07F11003 		add	r3, r7, #16
 1052 0154 0C3B     		subs	r3, r3, #12
 1053 0156 1B68     		ldr	r3, [r3]
 1054 0158 0B44     		add	r3, r3, r1
 1055 015a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1056 015c 07F17003 		add	r3, r7, #112
 1057 0160 1C3B     		subs	r3, r3, #28
 1058 0162 9954     		strb	r1, [r3, r2]
 381:..\src/command_processing.c ****         
 382:..\src/command_processing.c ****         // Find size of data
 383:..\src/command_processing.c ****         switch (TYPES[idx]) {
 1059              		.loc 1 383 0
 1060 0164 07F5AA53 		add	r3, r7, #5440
 1061 0168 03F10D03 		add	r3, r3, #13
 1062 016c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1063 016e 07F11003 		add	r3, r7, #16
 1064 0172 083B     		subs	r3, r3, #8
 1065 0174 1B68     		ldr	r3, [r3]
 1066 0176 1344     		add	r3, r3, r2
 1067 0178 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1068 017a 092B     		cmp	r3, #9
 1069 017c 2BD8     		bhi	.L64
 1070 017e 01A2     		adr	r2, .L66
 1071 0180 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1072              		.p2align 2
 1073              	.L66:
 1074 0184 AD010000 		.word	.L65+1
 1075 0188 AD010000 		.word	.L65+1
 1076 018c AD010000 		.word	.L65+1
 1077 0190 BB010000 		.word	.L67+1
 1078 0194 BB010000 		.word	.L67+1
 1079 0198 C9010000 		.word	.L68+1
 1080 019c C9010000 		.word	.L68+1
 1081 01a0 C9010000 		.word	.L68+1
 1082 01a4 D7010000 		.word	.L64+1
 1083 01a8 AD010000 		.word	.L65+1
 1084              		.p2align 1
 1085              	.L65:
 384:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 42


 385:..\src/command_processing.c ****                 sod = 1; break;
 1086              		.loc 1 385 0
 1087 01ac 0123     		movs	r3, #1
 1088 01ae 07F5AA52 		add	r2, r7, #5440
 1089 01b2 02F10B02 		add	r2, r2, #11
 1090 01b6 1370     		strb	r3, [r2]
 1091 01b8 0DE0     		b	.L64
 1092              	.L67:
 386:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 387:..\src/command_processing.c ****                 sod = 2; break;
 1093              		.loc 1 387 0
 1094 01ba 0223     		movs	r3, #2
 1095 01bc 07F5AA52 		add	r2, r7, #5440
 1096 01c0 02F10B02 		add	r2, r2, #11
 1097 01c4 1370     		strb	r3, [r2]
 1098 01c6 06E0     		b	.L64
 1099              	.L68:
 388:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 389:..\src/command_processing.c ****                 sod = 4; break;
 1100              		.loc 1 389 0
 1101 01c8 0423     		movs	r3, #4
 1102 01ca 07F5AA52 		add	r2, r7, #5440
 1103 01ce 02F10B02 		add	r2, r2, #11
 1104 01d2 1370     		strb	r3, [r2]
 1105 01d4 00BF     		nop
 1106              	.L64:
 390:..\src/command_processing.c ****         }
 391:..\src/command_processing.c ****             
 392:..\src/command_processing.c ****         if (!CUSTOM_PARAM_GET[idx]) {       // Default param get
 1107              		.loc 1 392 0
 1108 01d6 07F5AA53 		add	r3, r7, #5440
 1109 01da 03F10D03 		add	r3, r3, #13
 1110 01de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1111 01e0 07F5AB52 		add	r2, r7, #5472
 1112 01e4 02F11002 		add	r2, r2, #16
 1113 01e8 1268     		ldr	r2, [r2]
 1114 01ea 1344     		add	r3, r3, r2
 1115 01ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1116 01ee 002B     		cmp	r3, #0
 1117 01f0 40F0CC83 		bne	.L69
 393:..\src/command_processing.c ****             
 394:..\src/command_processing.c ****             // Add parameter data to packet
 395:..\src/command_processing.c ****             switch (TYPES[idx]) {
 1118              		.loc 1 395 0
 1119 01f4 07F5AA53 		add	r3, r7, #5440
 1120 01f8 03F10D03 		add	r3, r3, #13
 1121 01fc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1122 01fe 07F11003 		add	r3, r7, #16
 1123 0202 083B     		subs	r3, r3, #8
 1124 0204 1B68     		ldr	r3, [r3]
 1125 0206 1344     		add	r3, r3, r2
 1126 0208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1127 020a 092B     		cmp	r3, #9
 1128 020c 02F22581 		bhi	.L103
 1129 0210 01A2     		adr	r2, .L72
 1130 0212 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1131 0216 00BF     		.p2align 2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 43


 1132              	.L72:
 1133 0218 41020000 		.word	.L71+1
 1134 021c F9020000 		.word	.L73+1
 1135 0220 41020000 		.word	.L71+1
 1136 0224 B1030000 		.word	.L74+1
 1137 0228 DF040000 		.word	.L75+1
 1138 022c 0B060000 		.word	.L76+1
 1139 0230 37070000 		.word	.L77+1
 1140 0234 5F080000 		.word	.L78+1
 1141 0238 5B240000 		.word	.L103+1
 1142 023c 41020000 		.word	.L71+1
 1143              		.p2align 1
 1144              	.L71:
 396:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8: case TYPE_STRING:
 397:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1145              		.loc 1 397 0
 1146 0240 0023     		movs	r3, #0
 1147 0242 07F5AA52 		add	r2, r7, #5440
 1148 0246 02F10F02 		add	r2, r2, #15
 1149 024a 1370     		strb	r3, [r2]
 1150 024c 40E0     		b	.L79
 1151              	.L80:
 398:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1152              		.loc 1 398 0 discriminator 3
 1153 024e 07F5AA53 		add	r3, r7, #5440
 1154 0252 03F10F03 		add	r3, r3, #15
 1155 0256 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1156 0258 07F5AA52 		add	r2, r7, #5440
 1157 025c 02F10B02 		add	r2, r2, #11
 1158 0260 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1159 0262 02FB03F3 		mul	r3, r2, r3
 1160 0266 1A46     		mov	r2, r3
 1161 0268 07F5AA53 		add	r3, r7, #5440
 1162 026c 1B68     		ldr	r3, [r3]
 1163 026e 1344     		add	r3, r3, r2
 1164 0270 07F5A952 		add	r2, r7, #5408
 1165 0274 02F11C02 		add	r2, r2, #28
 1166 0278 1360     		str	r3, [r2]
 399:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1167              		.loc 1 399 0 discriminator 3
 1168 027a 07F5AA53 		add	r3, r7, #5440
 1169 027e 03F10D03 		add	r3, r3, #13
 1170 0282 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1171 0284 3222     		movs	r2, #50
 1172 0286 02FB03F3 		mul	r3, r2, r3
 1173 028a 1A1D     		adds	r2, r3, #4
 1174 028c 07F5AA53 		add	r3, r7, #5440
 1175 0290 03F10F03 		add	r3, r3, #15
 1176 0294 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1177 0296 07F5AA51 		add	r1, r7, #5440
 1178 029a 01F10B01 		add	r1, r1, #11
 1179 029e 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1180 02a0 01FB03F3 		mul	r3, r1, r3
 1181 02a4 1A44     		add	r2, r2, r3
 1182 02a6 07F5A953 		add	r3, r7, #5408
 1183 02aa 03F11C03 		add	r3, r3, #28
 1184 02ae 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 44


 1185 02b0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1186 02b2 07F17003 		add	r3, r7, #112
 1187 02b6 1C3B     		subs	r3, r3, #28
 1188 02b8 9954     		strb	r1, [r3, r2]
 397:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1189              		.loc 1 397 0 discriminator 3
 1190 02ba 07F5AA53 		add	r3, r7, #5440
 1191 02be 03F10F03 		add	r3, r3, #15
 1192 02c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1193 02c4 0133     		adds	r3, r3, #1
 1194 02c6 07F5AA52 		add	r2, r7, #5440
 1195 02ca 02F10F02 		add	r2, r2, #15
 1196 02ce 1370     		strb	r3, [r2]
 1197              	.L79:
 397:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1198              		.loc 1 397 0 is_stmt 0 discriminator 1
 1199 02d0 07F5AA53 		add	r3, r7, #5440
 1200 02d4 03F10D03 		add	r3, r3, #13
 1201 02d8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1202 02da 07F11003 		add	r3, r7, #16
 1203 02de 0C3B     		subs	r3, r3, #12
 1204 02e0 1B68     		ldr	r3, [r3]
 1205 02e2 1344     		add	r3, r3, r2
 1206 02e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1207 02e6 07F5AA52 		add	r2, r7, #5440
 1208 02ea 02F10F02 		add	r2, r2, #15
 1209 02ee 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1210 02f0 9A42     		cmp	r2, r3
 1211 02f2 ACD3     		bcc	.L80
 400:..\src/command_processing.c ****                     }
 401:..\src/command_processing.c ****                     break;                
 1212              		.loc 1 401 0 is_stmt 1
 1213 02f4 02F0B1B8 		b	.L103
 1214              	.L73:
 402:..\src/command_processing.c ****                 case TYPE_INT8:
 403:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1215              		.loc 1 403 0
 1216 02f8 0023     		movs	r3, #0
 1217 02fa 07F5AA52 		add	r2, r7, #5440
 1218 02fe 02F10F02 		add	r2, r2, #15
 1219 0302 1370     		strb	r3, [r2]
 1220 0304 40E0     		b	.L81
 1221              	.L82:
 404:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1222              		.loc 1 404 0 discriminator 3
 1223 0306 07F5AA53 		add	r3, r7, #5440
 1224 030a 03F10F03 		add	r3, r3, #15
 1225 030e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1226 0310 07F5AA52 		add	r2, r7, #5440
 1227 0314 02F10B02 		add	r2, r2, #11
 1228 0318 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1229 031a 02FB03F3 		mul	r3, r2, r3
 1230 031e 1A46     		mov	r2, r3
 1231 0320 07F5AA53 		add	r3, r7, #5440
 1232 0324 1B68     		ldr	r3, [r3]
 1233 0326 1344     		add	r3, r3, r2
 1234 0328 07F5A952 		add	r2, r7, #5408
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 45


 1235 032c 02F11C02 		add	r2, r2, #28
 1236 0330 1360     		str	r3, [r2]
 405:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1237              		.loc 1 405 0 discriminator 3
 1238 0332 07F5AA53 		add	r3, r7, #5440
 1239 0336 03F10D03 		add	r3, r3, #13
 1240 033a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1241 033c 3222     		movs	r2, #50
 1242 033e 02FB03F3 		mul	r3, r2, r3
 1243 0342 1A1D     		adds	r2, r3, #4
 1244 0344 07F5AA53 		add	r3, r7, #5440
 1245 0348 03F10F03 		add	r3, r3, #15
 1246 034c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1247 034e 07F5AA51 		add	r1, r7, #5440
 1248 0352 01F10B01 		add	r1, r1, #11
 1249 0356 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1250 0358 01FB03F3 		mul	r3, r1, r3
 1251 035c 1A44     		add	r2, r2, r3
 1252 035e 07F5A953 		add	r3, r7, #5408
 1253 0362 03F11C03 		add	r3, r3, #28
 1254 0366 1B68     		ldr	r3, [r3]
 1255 0368 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1256 036a 07F17003 		add	r3, r7, #112
 1257 036e 1C3B     		subs	r3, r3, #28
 1258 0370 9954     		strb	r1, [r3, r2]
 403:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1259              		.loc 1 403 0 discriminator 3
 1260 0372 07F5AA53 		add	r3, r7, #5440
 1261 0376 03F10F03 		add	r3, r3, #15
 1262 037a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1263 037c 0133     		adds	r3, r3, #1
 1264 037e 07F5AA52 		add	r2, r7, #5440
 1265 0382 02F10F02 		add	r2, r2, #15
 1266 0386 1370     		strb	r3, [r2]
 1267              	.L81:
 403:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1268              		.loc 1 403 0 is_stmt 0 discriminator 1
 1269 0388 07F5AA53 		add	r3, r7, #5440
 1270 038c 03F10D03 		add	r3, r3, #13
 1271 0390 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1272 0392 07F11003 		add	r3, r7, #16
 1273 0396 0C3B     		subs	r3, r3, #12
 1274 0398 1B68     		ldr	r3, [r3]
 1275 039a 1344     		add	r3, r3, r2
 1276 039c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1277 039e 07F5AA52 		add	r2, r7, #5440
 1278 03a2 02F10F02 		add	r2, r2, #15
 1279 03a6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1280 03a8 9A42     		cmp	r2, r3
 1281 03aa ACD3     		bcc	.L82
 406:..\src/command_processing.c ****                     }
 407:..\src/command_processing.c ****                     break;
 1282              		.loc 1 407 0 is_stmt 1
 1283 03ac 02F055B8 		b	.L103
 1284              	.L74:
 408:..\src/command_processing.c ****                 case TYPE_INT16:
 409:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 46


 1285              		.loc 1 409 0
 1286 03b0 0023     		movs	r3, #0
 1287 03b2 07F5AA52 		add	r2, r7, #5440
 1288 03b6 02F10F02 		add	r2, r2, #15
 1289 03ba 1370     		strb	r3, [r2]
 1290 03bc 7AE0     		b	.L83
 1291              	.L86:
 410:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1292              		.loc 1 410 0
 1293 03be 07F5AA53 		add	r3, r7, #5440
 1294 03c2 03F10F03 		add	r3, r3, #15
 1295 03c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1296 03c8 07F5AA52 		add	r2, r7, #5440
 1297 03cc 02F10B02 		add	r2, r2, #11
 1298 03d0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1299 03d2 02FB03F3 		mul	r3, r2, r3
 1300 03d6 1A46     		mov	r2, r3
 1301 03d8 07F5AA53 		add	r3, r7, #5440
 1302 03dc 1B68     		ldr	r3, [r3]
 1303 03de 1344     		add	r3, r3, r2
 1304 03e0 07F5A952 		add	r2, r7, #5408
 1305 03e4 02F11C02 		add	r2, r2, #28
 1306 03e8 1360     		str	r3, [r2]
 411:..\src/command_processing.c ****                         aux_int16 = *((int16*)m_tmp);
 1307              		.loc 1 411 0
 1308 03ea 07F5A953 		add	r3, r7, #5408
 1309 03ee 03F11C03 		add	r3, r3, #28
 1310 03f2 1B68     		ldr	r3, [r3]
 1311 03f4 B3F90020 		ldrsh	r2, [r3]
 1312 03f8 07F13003 		add	r3, r7, #48
 1313 03fc 163B     		subs	r3, r3, #22
 1314 03fe 1A80     		strh	r2, [r3]	@ movhi
 412:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1315              		.loc 1 412 0
 1316 0400 0023     		movs	r3, #0
 1317 0402 07F5AA52 		add	r2, r7, #5440
 1318 0406 02F10E02 		add	r2, r2, #14
 1319 040a 1370     		strb	r3, [r2]
 1320 040c 3BE0     		b	.L84
 1321              	.L85:
 413:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1322              		.loc 1 413 0 discriminator 3
 1323 040e 07F5AA53 		add	r3, r7, #5440
 1324 0412 03F10D03 		add	r3, r3, #13
 1325 0416 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1326 0418 3222     		movs	r2, #50
 1327 041a 02FB03F3 		mul	r3, r2, r3
 1328 041e 1A1D     		adds	r2, r3, #4
 1329 0420 07F5AA53 		add	r3, r7, #5440
 1330 0424 03F10F03 		add	r3, r3, #15
 1331 0428 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1332 042a 07F5AA51 		add	r1, r7, #5440
 1333 042e 01F10B01 		add	r1, r1, #11
 1334 0432 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1335 0434 01FB03F3 		mul	r3, r1, r3
 1336 0438 1A44     		add	r2, r2, r3
 1337 043a 07F5AA53 		add	r3, r7, #5440
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 47


 1338 043e 03F10B03 		add	r3, r3, #11
 1339 0442 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1340 0444 1A44     		add	r2, r2, r3
 1341 0446 07F5AA53 		add	r3, r7, #5440
 1342 044a 03F10E03 		add	r3, r3, #14
 1343 044e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1344 0450 D31A     		subs	r3, r2, r3
 1345 0452 5A1E     		subs	r2, r3, #1
 1346 0454 07F5AA53 		add	r3, r7, #5440
 1347 0458 03F10E03 		add	r3, r3, #14
 1348 045c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1349 045e 07F13003 		add	r3, r7, #48
 1350 0462 163B     		subs	r3, r3, #22
 1351 0464 0B44     		add	r3, r3, r1
 1352 0466 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1353 0468 07F17003 		add	r3, r7, #112
 1354 046c 1C3B     		subs	r3, r3, #28
 1355 046e 9954     		strb	r1, [r3, r2]
 412:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1356              		.loc 1 412 0 discriminator 3
 1357 0470 07F5AA53 		add	r3, r7, #5440
 1358 0474 03F10E03 		add	r3, r3, #14
 1359 0478 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1360 047a 0133     		adds	r3, r3, #1
 1361 047c 07F5AA52 		add	r2, r7, #5440
 1362 0480 02F10E02 		add	r2, r2, #14
 1363 0484 1370     		strb	r3, [r2]
 1364              	.L84:
 412:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1365              		.loc 1 412 0 is_stmt 0 discriminator 1
 1366 0486 07F5AA53 		add	r3, r7, #5440
 1367 048a 03F10E03 		add	r3, r3, #14
 1368 048e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1369 0490 07F5AA53 		add	r3, r7, #5440
 1370 0494 03F10B03 		add	r3, r3, #11
 1371 0498 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1372 049a 9A42     		cmp	r2, r3
 1373 049c B7D3     		bcc	.L85
 409:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1374              		.loc 1 409 0 is_stmt 1 discriminator 2
 1375 049e 07F5AA53 		add	r3, r7, #5440
 1376 04a2 03F10F03 		add	r3, r3, #15
 1377 04a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1378 04a8 0133     		adds	r3, r3, #1
 1379 04aa 07F5AA52 		add	r2, r7, #5440
 1380 04ae 02F10F02 		add	r2, r2, #15
 1381 04b2 1370     		strb	r3, [r2]
 1382              	.L83:
 409:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1383              		.loc 1 409 0 is_stmt 0 discriminator 1
 1384 04b4 07F5AA53 		add	r3, r7, #5440
 1385 04b8 03F10D03 		add	r3, r3, #13
 1386 04bc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1387 04be 07F11003 		add	r3, r7, #16
 1388 04c2 0C3B     		subs	r3, r3, #12
 1389 04c4 1B68     		ldr	r3, [r3]
 1390 04c6 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 48


 1391 04c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1392 04ca 07F5AA52 		add	r2, r7, #5440
 1393 04ce 02F10F02 		add	r2, r2, #15
 1394 04d2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1395 04d4 9A42     		cmp	r2, r3
 1396 04d6 FFF472AF 		bcc	.L86
 414:..\src/command_processing.c ****                         }
 415:..\src/command_processing.c ****                     }
 416:..\src/command_processing.c ****                     break;
 1397              		.loc 1 416 0 is_stmt 1
 1398 04da 01F0BEBF 		b	.L103
 1399              	.L75:
 417:..\src/command_processing.c ****                 case TYPE_UINT16:
 418:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1400              		.loc 1 418 0
 1401 04de 0023     		movs	r3, #0
 1402 04e0 07F5AA52 		add	r2, r7, #5440
 1403 04e4 02F10F02 		add	r2, r2, #15
 1404 04e8 1370     		strb	r3, [r2]
 1405 04ea 79E0     		b	.L87
 1406              	.L90:
 419:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1407              		.loc 1 419 0
 1408 04ec 07F5AA53 		add	r3, r7, #5440
 1409 04f0 03F10F03 		add	r3, r3, #15
 1410 04f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1411 04f6 07F5AA52 		add	r2, r7, #5440
 1412 04fa 02F10B02 		add	r2, r2, #11
 1413 04fe 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1414 0500 02FB03F3 		mul	r3, r2, r3
 1415 0504 1A46     		mov	r2, r3
 1416 0506 07F5AA53 		add	r3, r7, #5440
 1417 050a 1B68     		ldr	r3, [r3]
 1418 050c 1344     		add	r3, r3, r2
 1419 050e 07F5A952 		add	r2, r7, #5408
 1420 0512 02F11C02 		add	r2, r2, #28
 1421 0516 1360     		str	r3, [r2]
 420:..\src/command_processing.c ****                         aux_uint16 = *((uint16*)m_tmp);
 1422              		.loc 1 420 0
 1423 0518 07F5A953 		add	r3, r7, #5408
 1424 051c 03F11C03 		add	r3, r3, #28
 1425 0520 1B68     		ldr	r3, [r3]
 1426 0522 1A88     		ldrh	r2, [r3]
 1427 0524 07F13003 		add	r3, r7, #48
 1428 0528 183B     		subs	r3, r3, #24
 1429 052a 1A80     		strh	r2, [r3]	@ movhi
 421:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1430              		.loc 1 421 0
 1431 052c 0023     		movs	r3, #0
 1432 052e 07F5AA52 		add	r2, r7, #5440
 1433 0532 02F10E02 		add	r2, r2, #14
 1434 0536 1370     		strb	r3, [r2]
 1435 0538 3BE0     		b	.L88
 1436              	.L89:
 422:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1437              		.loc 1 422 0 discriminator 3
 1438 053a 07F5AA53 		add	r3, r7, #5440
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 49


 1439 053e 03F10D03 		add	r3, r3, #13
 1440 0542 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1441 0544 3222     		movs	r2, #50
 1442 0546 02FB03F3 		mul	r3, r2, r3
 1443 054a 1A1D     		adds	r2, r3, #4
 1444 054c 07F5AA53 		add	r3, r7, #5440
 1445 0550 03F10F03 		add	r3, r3, #15
 1446 0554 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1447 0556 07F5AA51 		add	r1, r7, #5440
 1448 055a 01F10B01 		add	r1, r1, #11
 1449 055e 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1450 0560 01FB03F3 		mul	r3, r1, r3
 1451 0564 1A44     		add	r2, r2, r3
 1452 0566 07F5AA53 		add	r3, r7, #5440
 1453 056a 03F10B03 		add	r3, r3, #11
 1454 056e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1455 0570 1A44     		add	r2, r2, r3
 1456 0572 07F5AA53 		add	r3, r7, #5440
 1457 0576 03F10E03 		add	r3, r3, #14
 1458 057a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1459 057c D31A     		subs	r3, r2, r3
 1460 057e 5A1E     		subs	r2, r3, #1
 1461 0580 07F5AA53 		add	r3, r7, #5440
 1462 0584 03F10E03 		add	r3, r3, #14
 1463 0588 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1464 058a 07F13003 		add	r3, r7, #48
 1465 058e 183B     		subs	r3, r3, #24
 1466 0590 0B44     		add	r3, r3, r1
 1467 0592 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1468 0594 07F17003 		add	r3, r7, #112
 1469 0598 1C3B     		subs	r3, r3, #28
 1470 059a 9954     		strb	r1, [r3, r2]
 421:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1471              		.loc 1 421 0 discriminator 3
 1472 059c 07F5AA53 		add	r3, r7, #5440
 1473 05a0 03F10E03 		add	r3, r3, #14
 1474 05a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1475 05a6 0133     		adds	r3, r3, #1
 1476 05a8 07F5AA52 		add	r2, r7, #5440
 1477 05ac 02F10E02 		add	r2, r2, #14
 1478 05b0 1370     		strb	r3, [r2]
 1479              	.L88:
 421:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1480              		.loc 1 421 0 is_stmt 0 discriminator 1
 1481 05b2 07F5AA53 		add	r3, r7, #5440
 1482 05b6 03F10E03 		add	r3, r3, #14
 1483 05ba 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1484 05bc 07F5AA53 		add	r3, r7, #5440
 1485 05c0 03F10B03 		add	r3, r3, #11
 1486 05c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1487 05c6 9A42     		cmp	r2, r3
 1488 05c8 B7D3     		bcc	.L89
 418:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1489              		.loc 1 418 0 is_stmt 1 discriminator 2
 1490 05ca 07F5AA53 		add	r3, r7, #5440
 1491 05ce 03F10F03 		add	r3, r3, #15
 1492 05d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 50


 1493 05d4 0133     		adds	r3, r3, #1
 1494 05d6 07F5AA52 		add	r2, r7, #5440
 1495 05da 02F10F02 		add	r2, r2, #15
 1496 05de 1370     		strb	r3, [r2]
 1497              	.L87:
 418:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1498              		.loc 1 418 0 is_stmt 0 discriminator 1
 1499 05e0 07F5AA53 		add	r3, r7, #5440
 1500 05e4 03F10D03 		add	r3, r3, #13
 1501 05e8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1502 05ea 07F11003 		add	r3, r7, #16
 1503 05ee 0C3B     		subs	r3, r3, #12
 1504 05f0 1B68     		ldr	r3, [r3]
 1505 05f2 1344     		add	r3, r3, r2
 1506 05f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1507 05f6 07F5AA52 		add	r2, r7, #5440
 1508 05fa 02F10F02 		add	r2, r2, #15
 1509 05fe 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1510 0600 9A42     		cmp	r2, r3
 1511 0602 FFF473AF 		bcc	.L90
 423:..\src/command_processing.c ****                         }
 424:..\src/command_processing.c ****                     }
 425:..\src/command_processing.c ****                     break;
 1512              		.loc 1 425 0 is_stmt 1
 1513 0606 01F028BF 		b	.L103
 1514              	.L76:
 426:..\src/command_processing.c ****                 case TYPE_INT32: 
 427:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1515              		.loc 1 427 0
 1516 060a 0023     		movs	r3, #0
 1517 060c 07F5AA52 		add	r2, r7, #5440
 1518 0610 02F10F02 		add	r2, r2, #15
 1519 0614 1370     		strb	r3, [r2]
 1520 0616 79E0     		b	.L91
 1521              	.L94:
 428:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1522              		.loc 1 428 0
 1523 0618 07F5AA53 		add	r3, r7, #5440
 1524 061c 03F10F03 		add	r3, r3, #15
 1525 0620 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1526 0622 07F5AA52 		add	r2, r7, #5440
 1527 0626 02F10B02 		add	r2, r2, #11
 1528 062a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1529 062c 02FB03F3 		mul	r3, r2, r3
 1530 0630 1A46     		mov	r2, r3
 1531 0632 07F5AA53 		add	r3, r7, #5440
 1532 0636 1B68     		ldr	r3, [r3]
 1533 0638 1344     		add	r3, r3, r2
 1534 063a 07F5A952 		add	r2, r7, #5408
 1535 063e 02F11C02 		add	r2, r2, #28
 1536 0642 1360     		str	r3, [r2]
 429:..\src/command_processing.c ****                         aux_int32 = *((int32*)m_tmp);
 1537              		.loc 1 429 0
 1538 0644 07F5A953 		add	r3, r7, #5408
 1539 0648 03F11C03 		add	r3, r3, #28
 1540 064c 1B68     		ldr	r3, [r3]
 1541 064e 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 51


 1542 0650 07F13003 		add	r3, r7, #48
 1543 0654 1C3B     		subs	r3, r3, #28
 1544 0656 1A60     		str	r2, [r3]
 430:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1545              		.loc 1 430 0
 1546 0658 0023     		movs	r3, #0
 1547 065a 07F5AA52 		add	r2, r7, #5440
 1548 065e 02F10E02 		add	r2, r2, #14
 1549 0662 1370     		strb	r3, [r2]
 1550 0664 3BE0     		b	.L92
 1551              	.L93:
 431:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1552              		.loc 1 431 0 discriminator 3
 1553 0666 07F5AA53 		add	r3, r7, #5440
 1554 066a 03F10D03 		add	r3, r3, #13
 1555 066e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1556 0670 3222     		movs	r2, #50
 1557 0672 02FB03F3 		mul	r3, r2, r3
 1558 0676 1A1D     		adds	r2, r3, #4
 1559 0678 07F5AA53 		add	r3, r7, #5440
 1560 067c 03F10F03 		add	r3, r3, #15
 1561 0680 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1562 0682 07F5AA51 		add	r1, r7, #5440
 1563 0686 01F10B01 		add	r1, r1, #11
 1564 068a 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1565 068c 01FB03F3 		mul	r3, r1, r3
 1566 0690 1A44     		add	r2, r2, r3
 1567 0692 07F5AA53 		add	r3, r7, #5440
 1568 0696 03F10B03 		add	r3, r3, #11
 1569 069a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1570 069c 1A44     		add	r2, r2, r3
 1571 069e 07F5AA53 		add	r3, r7, #5440
 1572 06a2 03F10E03 		add	r3, r3, #14
 1573 06a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1574 06a8 D31A     		subs	r3, r2, r3
 1575 06aa 5A1E     		subs	r2, r3, #1
 1576 06ac 07F5AA53 		add	r3, r7, #5440
 1577 06b0 03F10E03 		add	r3, r3, #14
 1578 06b4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1579 06b6 07F13003 		add	r3, r7, #48
 1580 06ba 1C3B     		subs	r3, r3, #28
 1581 06bc 0B44     		add	r3, r3, r1
 1582 06be 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1583 06c0 07F17003 		add	r3, r7, #112
 1584 06c4 1C3B     		subs	r3, r3, #28
 1585 06c6 9954     		strb	r1, [r3, r2]
 430:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1586              		.loc 1 430 0 discriminator 3
 1587 06c8 07F5AA53 		add	r3, r7, #5440
 1588 06cc 03F10E03 		add	r3, r3, #14
 1589 06d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1590 06d2 0133     		adds	r3, r3, #1
 1591 06d4 07F5AA52 		add	r2, r7, #5440
 1592 06d8 02F10E02 		add	r2, r2, #14
 1593 06dc 1370     		strb	r3, [r2]
 1594              	.L92:
 430:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 52


 1595              		.loc 1 430 0 is_stmt 0 discriminator 1
 1596 06de 07F5AA53 		add	r3, r7, #5440
 1597 06e2 03F10E03 		add	r3, r3, #14
 1598 06e6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1599 06e8 07F5AA53 		add	r3, r7, #5440
 1600 06ec 03F10B03 		add	r3, r3, #11
 1601 06f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1602 06f2 9A42     		cmp	r2, r3
 1603 06f4 B7D3     		bcc	.L93
 427:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1604              		.loc 1 427 0 is_stmt 1 discriminator 2
 1605 06f6 07F5AA53 		add	r3, r7, #5440
 1606 06fa 03F10F03 		add	r3, r3, #15
 1607 06fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1608 0700 0133     		adds	r3, r3, #1
 1609 0702 07F5AA52 		add	r2, r7, #5440
 1610 0706 02F10F02 		add	r2, r2, #15
 1611 070a 1370     		strb	r3, [r2]
 1612              	.L91:
 427:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1613              		.loc 1 427 0 is_stmt 0 discriminator 1
 1614 070c 07F5AA53 		add	r3, r7, #5440
 1615 0710 03F10D03 		add	r3, r3, #13
 1616 0714 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1617 0716 07F11003 		add	r3, r7, #16
 1618 071a 0C3B     		subs	r3, r3, #12
 1619 071c 1B68     		ldr	r3, [r3]
 1620 071e 1344     		add	r3, r3, r2
 1621 0720 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1622 0722 07F5AA52 		add	r2, r7, #5440
 1623 0726 02F10F02 		add	r2, r2, #15
 1624 072a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1625 072c 9A42     		cmp	r2, r3
 1626 072e FFF473AF 		bcc	.L94
 432:..\src/command_processing.c ****                         }
 433:..\src/command_processing.c ****                     }
 434:..\src/command_processing.c ****                     break;
 1627              		.loc 1 434 0 is_stmt 1
 1628 0732 01F092BE 		b	.L103
 1629              	.L77:
 435:..\src/command_processing.c ****                 case TYPE_UINT32: 
 436:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1630              		.loc 1 436 0
 1631 0736 0023     		movs	r3, #0
 1632 0738 07F5AA52 		add	r2, r7, #5440
 1633 073c 02F10F02 		add	r2, r2, #15
 1634 0740 1370     		strb	r3, [r2]
 1635 0742 77E0     		b	.L95
 1636              	.L98:
 437:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1637              		.loc 1 437 0
 1638 0744 07F5AA53 		add	r3, r7, #5440
 1639 0748 03F10F03 		add	r3, r3, #15
 1640 074c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1641 074e 07F5AA52 		add	r2, r7, #5440
 1642 0752 02F10B02 		add	r2, r2, #11
 1643 0756 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 53


 1644 0758 02FB03F3 		mul	r3, r2, r3
 1645 075c 1A46     		mov	r2, r3
 1646 075e 07F5AA53 		add	r3, r7, #5440
 1647 0762 1B68     		ldr	r3, [r3]
 1648 0764 1344     		add	r3, r3, r2
 1649 0766 07F5A952 		add	r2, r7, #5408
 1650 076a 02F11C02 		add	r2, r2, #28
 1651 076e 1360     		str	r3, [r2]
 438:..\src/command_processing.c ****                         aux_uint32 = *((uint32*)m_tmp);
 1652              		.loc 1 438 0
 1653 0770 07F5A953 		add	r3, r7, #5408
 1654 0774 03F11C03 		add	r3, r3, #28
 1655 0778 1B68     		ldr	r3, [r3]
 1656 077a 1A68     		ldr	r2, [r3]
 1657 077c 07F11003 		add	r3, r7, #16
 1658 0780 1A60     		str	r2, [r3]
 439:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1659              		.loc 1 439 0
 1660 0782 0023     		movs	r3, #0
 1661 0784 07F5AA52 		add	r2, r7, #5440
 1662 0788 02F10E02 		add	r2, r2, #14
 1663 078c 1370     		strb	r3, [r2]
 1664 078e 3AE0     		b	.L96
 1665              	.L97:
 440:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1666              		.loc 1 440 0 discriminator 3
 1667 0790 07F5AA53 		add	r3, r7, #5440
 1668 0794 03F10D03 		add	r3, r3, #13
 1669 0798 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1670 079a 3222     		movs	r2, #50
 1671 079c 02FB03F3 		mul	r3, r2, r3
 1672 07a0 1A1D     		adds	r2, r3, #4
 1673 07a2 07F5AA53 		add	r3, r7, #5440
 1674 07a6 03F10F03 		add	r3, r3, #15
 1675 07aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1676 07ac 07F5AA51 		add	r1, r7, #5440
 1677 07b0 01F10B01 		add	r1, r1, #11
 1678 07b4 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1679 07b6 01FB03F3 		mul	r3, r1, r3
 1680 07ba 1A44     		add	r2, r2, r3
 1681 07bc 07F5AA53 		add	r3, r7, #5440
 1682 07c0 03F10B03 		add	r3, r3, #11
 1683 07c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1684 07c6 1A44     		add	r2, r2, r3
 1685 07c8 07F5AA53 		add	r3, r7, #5440
 1686 07cc 03F10E03 		add	r3, r3, #14
 1687 07d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1688 07d2 D31A     		subs	r3, r2, r3
 1689 07d4 5A1E     		subs	r2, r3, #1
 1690 07d6 07F5AA53 		add	r3, r7, #5440
 1691 07da 03F10E03 		add	r3, r3, #14
 1692 07de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1693 07e0 07F11001 		add	r1, r7, #16
 1694 07e4 0B44     		add	r3, r3, r1
 1695 07e6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1696 07e8 07F17003 		add	r3, r7, #112
 1697 07ec 1C3B     		subs	r3, r3, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 54


 1698 07ee 9954     		strb	r1, [r3, r2]
 439:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1699              		.loc 1 439 0 discriminator 3
 1700 07f0 07F5AA53 		add	r3, r7, #5440
 1701 07f4 03F10E03 		add	r3, r3, #14
 1702 07f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1703 07fa 0133     		adds	r3, r3, #1
 1704 07fc 07F5AA52 		add	r2, r7, #5440
 1705 0800 02F10E02 		add	r2, r2, #14
 1706 0804 1370     		strb	r3, [r2]
 1707              	.L96:
 439:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1708              		.loc 1 439 0 is_stmt 0 discriminator 1
 1709 0806 07F5AA53 		add	r3, r7, #5440
 1710 080a 03F10E03 		add	r3, r3, #14
 1711 080e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1712 0810 07F5AA53 		add	r3, r7, #5440
 1713 0814 03F10B03 		add	r3, r3, #11
 1714 0818 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1715 081a 9A42     		cmp	r2, r3
 1716 081c B8D3     		bcc	.L97
 436:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1717              		.loc 1 436 0 is_stmt 1 discriminator 2
 1718 081e 07F5AA53 		add	r3, r7, #5440
 1719 0822 03F10F03 		add	r3, r3, #15
 1720 0826 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1721 0828 0133     		adds	r3, r3, #1
 1722 082a 07F5AA52 		add	r2, r7, #5440
 1723 082e 02F10F02 		add	r2, r2, #15
 1724 0832 1370     		strb	r3, [r2]
 1725              	.L95:
 436:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1726              		.loc 1 436 0 is_stmt 0 discriminator 1
 1727 0834 07F5AA53 		add	r3, r7, #5440
 1728 0838 03F10D03 		add	r3, r3, #13
 1729 083c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1730 083e 07F11003 		add	r3, r7, #16
 1731 0842 0C3B     		subs	r3, r3, #12
 1732 0844 1B68     		ldr	r3, [r3]
 1733 0846 1344     		add	r3, r3, r2
 1734 0848 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1735 084a 07F5AA52 		add	r2, r7, #5440
 1736 084e 02F10F02 		add	r2, r2, #15
 1737 0852 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1738 0854 9A42     		cmp	r2, r3
 1739 0856 FFF475AF 		bcc	.L98
 441:..\src/command_processing.c ****                         }
 442:..\src/command_processing.c ****                     }
 443:..\src/command_processing.c ****                     break;
 1740              		.loc 1 443 0 is_stmt 1
 1741 085a 01F0FEBD 		b	.L103
 1742              	.L78:
 444:..\src/command_processing.c ****                     
 445:..\src/command_processing.c ****                 case TYPE_FLOAT:
 446:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1743              		.loc 1 446 0
 1744 085e 0023     		movs	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 55


 1745 0860 07F5AA52 		add	r2, r7, #5440
 1746 0864 02F10F02 		add	r2, r2, #15
 1747 0868 1370     		strb	r3, [r2]
 1748 086a 79E0     		b	.L99
 1749              	.L102:
 447:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1750              		.loc 1 447 0
 1751 086c 07F5AA53 		add	r3, r7, #5440
 1752 0870 03F10F03 		add	r3, r3, #15
 1753 0874 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1754 0876 07F5AA52 		add	r2, r7, #5440
 1755 087a 02F10B02 		add	r2, r2, #11
 1756 087e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1757 0880 02FB03F3 		mul	r3, r2, r3
 1758 0884 1A46     		mov	r2, r3
 1759 0886 07F5AA53 		add	r3, r7, #5440
 1760 088a 1B68     		ldr	r3, [r3]
 1761 088c 1344     		add	r3, r3, r2
 1762 088e 07F5A952 		add	r2, r7, #5408
 1763 0892 02F11C02 		add	r2, r2, #28
 1764 0896 1360     		str	r3, [r2]
 448:..\src/command_processing.c ****                         aux_float = *((float*)m_tmp);
 1765              		.loc 1 448 0
 1766 0898 07F5A953 		add	r3, r7, #5408
 1767 089c 03F11C03 		add	r3, r3, #28
 1768 08a0 1B68     		ldr	r3, [r3]
 1769 08a2 1A68     		ldr	r2, [r3]	@ float
 1770 08a4 07F13003 		add	r3, r7, #48
 1771 08a8 143B     		subs	r3, r3, #20
 1772 08aa 1A60     		str	r2, [r3]	@ float
 449:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1773              		.loc 1 449 0
 1774 08ac 0023     		movs	r3, #0
 1775 08ae 07F5AA52 		add	r2, r7, #5440
 1776 08b2 02F10E02 		add	r2, r2, #14
 1777 08b6 1370     		strb	r3, [r2]
 1778 08b8 3BE0     		b	.L100
 1779              	.L101:
 450:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1780              		.loc 1 450 0 discriminator 3
 1781 08ba 07F5AA53 		add	r3, r7, #5440
 1782 08be 03F10D03 		add	r3, r3, #13
 1783 08c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1784 08c4 3222     		movs	r2, #50
 1785 08c6 02FB03F3 		mul	r3, r2, r3
 1786 08ca 1A1D     		adds	r2, r3, #4
 1787 08cc 07F5AA53 		add	r3, r7, #5440
 1788 08d0 03F10F03 		add	r3, r3, #15
 1789 08d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1790 08d6 07F5AA51 		add	r1, r7, #5440
 1791 08da 01F10B01 		add	r1, r1, #11
 1792 08de 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1793 08e0 01FB03F3 		mul	r3, r1, r3
 1794 08e4 1A44     		add	r2, r2, r3
 1795 08e6 07F5AA53 		add	r3, r7, #5440
 1796 08ea 03F10B03 		add	r3, r3, #11
 1797 08ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 56


 1798 08f0 1A44     		add	r2, r2, r3
 1799 08f2 07F5AA53 		add	r3, r7, #5440
 1800 08f6 03F10E03 		add	r3, r3, #14
 1801 08fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1802 08fc D31A     		subs	r3, r2, r3
 1803 08fe 5A1E     		subs	r2, r3, #1
 1804 0900 07F5AA53 		add	r3, r7, #5440
 1805 0904 03F10E03 		add	r3, r3, #14
 1806 0908 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1807 090a 07F13003 		add	r3, r7, #48
 1808 090e 143B     		subs	r3, r3, #20
 1809 0910 0B44     		add	r3, r3, r1
 1810 0912 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1811 0914 07F17003 		add	r3, r7, #112
 1812 0918 1C3B     		subs	r3, r3, #28
 1813 091a 9954     		strb	r1, [r3, r2]
 449:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1814              		.loc 1 449 0 discriminator 3
 1815 091c 07F5AA53 		add	r3, r7, #5440
 1816 0920 03F10E03 		add	r3, r3, #14
 1817 0924 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1818 0926 0133     		adds	r3, r3, #1
 1819 0928 07F5AA52 		add	r2, r7, #5440
 1820 092c 02F10E02 		add	r2, r2, #14
 1821 0930 1370     		strb	r3, [r2]
 1822              	.L100:
 449:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1823              		.loc 1 449 0 is_stmt 0 discriminator 1
 1824 0932 07F5AA53 		add	r3, r7, #5440
 1825 0936 03F10E03 		add	r3, r3, #14
 1826 093a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1827 093c 07F5AA53 		add	r3, r7, #5440
 1828 0940 03F10B03 		add	r3, r3, #11
 1829 0944 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1830 0946 9A42     		cmp	r2, r3
 1831 0948 B7D3     		bcc	.L101
 446:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1832              		.loc 1 446 0 is_stmt 1 discriminator 2
 1833 094a 07F5AA53 		add	r3, r7, #5440
 1834 094e 03F10F03 		add	r3, r3, #15
 1835 0952 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1836 0954 0133     		adds	r3, r3, #1
 1837 0956 07F5AA52 		add	r2, r7, #5440
 1838 095a 02F10F02 		add	r2, r2, #15
 1839 095e 1370     		strb	r3, [r2]
 1840              	.L99:
 446:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1841              		.loc 1 446 0 is_stmt 0 discriminator 1
 1842 0960 07F5AA53 		add	r3, r7, #5440
 1843 0964 03F10D03 		add	r3, r3, #13
 1844 0968 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1845 096a 07F11003 		add	r3, r7, #16
 1846 096e 0C3B     		subs	r3, r3, #12
 1847 0970 1B68     		ldr	r3, [r3]
 1848 0972 1344     		add	r3, r3, r2
 1849 0974 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1850 0976 07F5AA52 		add	r2, r7, #5440
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 57


 1851 097a 02F10F02 		add	r2, r2, #15
 1852 097e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1853 0980 9A42     		cmp	r2, r3
 1854 0982 FFF473AF 		bcc	.L102
 451:..\src/command_processing.c ****                         }
 452:..\src/command_processing.c ****                     }
 453:..\src/command_processing.c ****                     break;   
 1855              		.loc 1 453 0 is_stmt 1 discriminator 7
 1856 0986 00BF     		nop
 1857 0988 01F067BD 		b	.L103
 1858              	.L69:
 454:..\src/command_processing.c ****             }
 455:..\src/command_processing.c ****         }
 456:..\src/command_processing.c ****         else {
 457:..\src/command_processing.c ****             
 458:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION BEFORE THIS LINE
 459:..\src/command_processing.c ****             
 460:..\src/command_processing.c **** // MODIFY CUSTOM PARAM            
 461:..\src/command_processing.c ****                 switch(idx+1){
 1859              		.loc 1 461 0
 1860 098c 07F5AA53 		add	r3, r7, #5440
 1861 0990 03F10D03 		add	r3, r3, #13
 1862 0994 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1863 0996 0133     		adds	r3, r3, #1
 1864 0998 023B     		subs	r3, r3, #2
 1865 099a 332B     		cmp	r3, #51
 1866 099c 01F25C85 		bhi	.L254
 1867 09a0 01A2     		adr	r2, .L106
 1868 09a2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1869 09a6 00BF     		.p2align 2
 1870              	.L106:
 1871 09a8 790A0000 		.word	.L105+1
 1872 09ac 450F0000 		.word	.L107+1
 1873 09b0 59240000 		.word	.L254+1
 1874 09b4 59240000 		.word	.L254+1
 1875 09b8 59240000 		.word	.L254+1
 1876 09bc 59240000 		.word	.L254+1
 1877 09c0 15140000 		.word	.L108+1
 1878 09c4 59240000 		.word	.L254+1
 1879 09c8 59240000 		.word	.L254+1
 1880 09cc 3B150000 		.word	.L109+1
 1881 09d0 59240000 		.word	.L254+1
 1882 09d4 59240000 		.word	.L254+1
 1883 09d8 59240000 		.word	.L254+1
 1884 09dc 59240000 		.word	.L254+1
 1885 09e0 59240000 		.word	.L254+1
 1886 09e4 59240000 		.word	.L254+1
 1887 09e8 59240000 		.word	.L254+1
 1888 09ec 59240000 		.word	.L254+1
 1889 09f0 59240000 		.word	.L254+1
 1890 09f4 59240000 		.word	.L254+1
 1891 09f8 59240000 		.word	.L254+1
 1892 09fc FF160000 		.word	.L110+1
 1893 0a00 59240000 		.word	.L254+1
 1894 0a04 59240000 		.word	.L254+1
 1895 0a08 59240000 		.word	.L254+1
 1896 0a0c 59240000 		.word	.L254+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 58


 1897 0a10 59240000 		.word	.L254+1
 1898 0a14 59240000 		.word	.L254+1
 1899 0a18 59240000 		.word	.L254+1
 1900 0a1c 59240000 		.word	.L254+1
 1901 0a20 59240000 		.word	.L254+1
 1902 0a24 59240000 		.word	.L254+1
 1903 0a28 59240000 		.word	.L254+1
 1904 0a2c 59240000 		.word	.L254+1
 1905 0a30 59240000 		.word	.L254+1
 1906 0a34 59240000 		.word	.L254+1
 1907 0a38 59240000 		.word	.L254+1
 1908 0a3c 59240000 		.word	.L254+1
 1909 0a40 59240000 		.word	.L254+1
 1910 0a44 59240000 		.word	.L254+1
 1911 0a48 59240000 		.word	.L254+1
 1912 0a4c 59240000 		.word	.L254+1
 1913 0a50 D3170000 		.word	.L111+1
 1914 0a54 9B1C0000 		.word	.L112+1
 1915 0a58 59240000 		.word	.L254+1
 1916 0a5c 59240000 		.word	.L254+1
 1917 0a60 59240000 		.word	.L254+1
 1918 0a64 59240000 		.word	.L254+1
 1919 0a68 69210000 		.word	.L113+1
 1920 0a6c 59240000 		.word	.L254+1
 1921 0a70 59240000 		.word	.L254+1
 1922 0a74 8D220000 		.word	.L114+1
 1923              		.p2align 1
 1924              	.L105:
 462:..\src/command_processing.c ****                     case 2:         // Position PID
 463:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 1925              		.loc 1 463 0
 1926 0a78 07F5AA53 		add	r3, r7, #5440
 1927 0a7c 03F10703 		add	r3, r3, #7
 1928 0a80 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1929 0a82 AC49     		ldr	r1, .L258
 1930 0a84 1346     		mov	r3, r2
 1931 0a86 DB00     		lsls	r3, r3, #3
 1932 0a88 9B1A     		subs	r3, r3, r2
 1933 0a8a 1B01     		lsls	r3, r3, #4
 1934 0a8c 0B44     		add	r3, r3, r1
 1935 0a8e 03F20F13 		addw	r3, r3, #271
 1936 0a92 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1937 0a94 032B     		cmp	r3, #3
 1938 0a96 00F02981 		beq	.L115
 464:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p / 65536;
 1939              		.loc 1 464 0
 1940 0a9a 07F5AA53 		add	r3, r7, #5440
 1941 0a9e 03F10703 		add	r3, r3, #7
 1942 0aa2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1943 0aa4 A349     		ldr	r1, .L258
 1944 0aa6 1346     		mov	r3, r2
 1945 0aa8 DB00     		lsls	r3, r3, #3
 1946 0aaa 9B1A     		subs	r3, r3, r2
 1947 0aac 1B01     		lsls	r3, r3, #4
 1948 0aae 0B44     		add	r3, r3, r1
 1949 0ab0 B033     		adds	r3, r3, #176
 1950 0ab2 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 59


 1951 0ab4 1846     		mov	r0, r3
 1952 0ab6 FFF7FEFF 		bl	__aeabi_i2f
 1953 0aba 0346     		mov	r3, r0
 1954 0abc 4FF08F41 		mov	r1, #1199570944
 1955 0ac0 1846     		mov	r0, r3
 1956 0ac2 FFF7FEFF 		bl	__aeabi_fdiv
 1957 0ac6 0346     		mov	r3, r0
 1958 0ac8 1A46     		mov	r2, r3
 1959 0aca 07F13003 		add	r3, r7, #48
 1960 0ace 143B     		subs	r3, r3, #20
 1961 0ad0 1A60     		str	r2, [r3]	@ float
 465:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1962              		.loc 1 465 0
 1963 0ad2 0023     		movs	r3, #0
 1964 0ad4 07F5AA52 		add	r2, r7, #5440
 1965 0ad8 02F10F02 		add	r2, r2, #15
 1966 0adc 1370     		strb	r3, [r2]
 1967 0ade 2EE0     		b	.L116
 1968              	.L117:
 466:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 1969              		.loc 1 466 0 discriminator 3
 1970 0ae0 07F5AA53 		add	r3, r7, #5440
 1971 0ae4 03F10D03 		add	r3, r3, #13
 1972 0ae8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1973 0aea 3222     		movs	r2, #50
 1974 0aec 02FB03F3 		mul	r3, r2, r3
 1975 0af0 1A1D     		adds	r2, r3, #4
 1976 0af2 07F5AA53 		add	r3, r7, #5440
 1977 0af6 03F10B03 		add	r3, r3, #11
 1978 0afa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1979 0afc 1A44     		add	r2, r2, r3
 1980 0afe 07F5AA53 		add	r3, r7, #5440
 1981 0b02 03F10F03 		add	r3, r3, #15
 1982 0b06 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1983 0b08 D31A     		subs	r3, r2, r3
 1984 0b0a 5A1E     		subs	r2, r3, #1
 1985 0b0c 07F5AA53 		add	r3, r7, #5440
 1986 0b10 03F10F03 		add	r3, r3, #15
 1987 0b14 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1988 0b16 07F13003 		add	r3, r7, #48
 1989 0b1a 143B     		subs	r3, r3, #20
 1990 0b1c 0B44     		add	r3, r3, r1
 1991 0b1e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1992 0b20 07F17003 		add	r3, r7, #112
 1993 0b24 1C3B     		subs	r3, r3, #28
 1994 0b26 9954     		strb	r1, [r3, r2]
 465:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1995              		.loc 1 465 0 discriminator 3
 1996 0b28 07F5AA53 		add	r3, r7, #5440
 1997 0b2c 03F10F03 		add	r3, r3, #15
 1998 0b30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1999 0b32 0133     		adds	r3, r3, #1
 2000 0b34 07F5AA52 		add	r2, r7, #5440
 2001 0b38 02F10F02 		add	r2, r2, #15
 2002 0b3c 1370     		strb	r3, [r2]
 2003              	.L116:
 465:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 60


 2004              		.loc 1 465 0 is_stmt 0 discriminator 1
 2005 0b3e 07F5AA53 		add	r3, r7, #5440
 2006 0b42 03F10F03 		add	r3, r3, #15
 2007 0b46 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2008 0b48 07F5AA53 		add	r3, r7, #5440
 2009 0b4c 03F10B03 		add	r3, r3, #11
 2010 0b50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2011 0b52 9A42     		cmp	r2, r3
 2012 0b54 C4D3     		bcc	.L117
 467:..\src/command_processing.c ****                             }
 468:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i / 65536;
 2013              		.loc 1 468 0 is_stmt 1
 2014 0b56 07F5AA53 		add	r3, r7, #5440
 2015 0b5a 03F10703 		add	r3, r3, #7
 2016 0b5e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2017 0b60 7449     		ldr	r1, .L258
 2018 0b62 1346     		mov	r3, r2
 2019 0b64 DB00     		lsls	r3, r3, #3
 2020 0b66 9B1A     		subs	r3, r3, r2
 2021 0b68 1B01     		lsls	r3, r3, #4
 2022 0b6a 0B44     		add	r3, r3, r1
 2023 0b6c B433     		adds	r3, r3, #180
 2024 0b6e 1B68     		ldr	r3, [r3]
 2025 0b70 1846     		mov	r0, r3
 2026 0b72 FFF7FEFF 		bl	__aeabi_i2f
 2027 0b76 0346     		mov	r3, r0
 2028 0b78 4FF08F41 		mov	r1, #1199570944
 2029 0b7c 1846     		mov	r0, r3
 2030 0b7e FFF7FEFF 		bl	__aeabi_fdiv
 2031 0b82 0346     		mov	r3, r0
 2032 0b84 1A46     		mov	r2, r3
 2033 0b86 07F13003 		add	r3, r7, #48
 2034 0b8a 143B     		subs	r3, r3, #20
 2035 0b8c 1A60     		str	r2, [r3]	@ float
 469:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2036              		.loc 1 469 0
 2037 0b8e 0023     		movs	r3, #0
 2038 0b90 07F5AA52 		add	r2, r7, #5440
 2039 0b94 02F10F02 		add	r2, r2, #15
 2040 0b98 1370     		strb	r3, [r2]
 2041 0b9a 34E0     		b	.L118
 2042              	.L119:
 470:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2043              		.loc 1 470 0 discriminator 3
 2044 0b9c 07F5AA53 		add	r3, r7, #5440
 2045 0ba0 03F10D03 		add	r3, r3, #13
 2046 0ba4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2047 0ba6 3222     		movs	r2, #50
 2048 0ba8 02FB03F3 		mul	r3, r2, r3
 2049 0bac 1A1D     		adds	r2, r3, #4
 2050 0bae 07F5AA53 		add	r3, r7, #5440
 2051 0bb2 03F10B03 		add	r3, r3, #11
 2052 0bb6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2053 0bb8 1A44     		add	r2, r2, r3
 2054 0bba 07F5AA53 		add	r3, r7, #5440
 2055 0bbe 03F10B03 		add	r3, r3, #11
 2056 0bc2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 61


 2057 0bc4 1A44     		add	r2, r2, r3
 2058 0bc6 07F5AA53 		add	r3, r7, #5440
 2059 0bca 03F10F03 		add	r3, r3, #15
 2060 0bce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2061 0bd0 D31A     		subs	r3, r2, r3
 2062 0bd2 5A1E     		subs	r2, r3, #1
 2063 0bd4 07F5AA53 		add	r3, r7, #5440
 2064 0bd8 03F10F03 		add	r3, r3, #15
 2065 0bdc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2066 0bde 07F13003 		add	r3, r7, #48
 2067 0be2 143B     		subs	r3, r3, #20
 2068 0be4 0B44     		add	r3, r3, r1
 2069 0be6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2070 0be8 07F17003 		add	r3, r7, #112
 2071 0bec 1C3B     		subs	r3, r3, #28
 2072 0bee 9954     		strb	r1, [r3, r2]
 469:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2073              		.loc 1 469 0 discriminator 3
 2074 0bf0 07F5AA53 		add	r3, r7, #5440
 2075 0bf4 03F10F03 		add	r3, r3, #15
 2076 0bf8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2077 0bfa 0133     		adds	r3, r3, #1
 2078 0bfc 07F5AA52 		add	r2, r7, #5440
 2079 0c00 02F10F02 		add	r2, r2, #15
 2080 0c04 1370     		strb	r3, [r2]
 2081              	.L118:
 469:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2082              		.loc 1 469 0 is_stmt 0 discriminator 1
 2083 0c06 07F5AA53 		add	r3, r7, #5440
 2084 0c0a 03F10F03 		add	r3, r3, #15
 2085 0c0e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2086 0c10 07F5AA53 		add	r3, r7, #5440
 2087 0c14 03F10B03 		add	r3, r3, #11
 2088 0c18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2089 0c1a 9A42     		cmp	r2, r3
 2090 0c1c BED3     		bcc	.L119
 471:..\src/command_processing.c ****                             }
 472:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d / 65536;
 2091              		.loc 1 472 0 is_stmt 1
 2092 0c1e 07F5AA53 		add	r3, r7, #5440
 2093 0c22 03F10703 		add	r3, r3, #7
 2094 0c26 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2095 0c28 4249     		ldr	r1, .L258
 2096 0c2a 1346     		mov	r3, r2
 2097 0c2c DB00     		lsls	r3, r3, #3
 2098 0c2e 9B1A     		subs	r3, r3, r2
 2099 0c30 1B01     		lsls	r3, r3, #4
 2100 0c32 0B44     		add	r3, r3, r1
 2101 0c34 B833     		adds	r3, r3, #184
 2102 0c36 1B68     		ldr	r3, [r3]
 2103 0c38 1846     		mov	r0, r3
 2104 0c3a FFF7FEFF 		bl	__aeabi_i2f
 2105 0c3e 0346     		mov	r3, r0
 2106 0c40 4FF08F41 		mov	r1, #1199570944
 2107 0c44 1846     		mov	r0, r3
 2108 0c46 FFF7FEFF 		bl	__aeabi_fdiv
 2109 0c4a 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 62


 2110 0c4c 1A46     		mov	r2, r3
 2111 0c4e 07F13003 		add	r3, r7, #48
 2112 0c52 143B     		subs	r3, r3, #20
 2113 0c54 1A60     		str	r2, [r3]	@ float
 473:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2114              		.loc 1 473 0
 2115 0c56 0023     		movs	r3, #0
 2116 0c58 07F5AA52 		add	r2, r7, #5440
 2117 0c5c 02F10F02 		add	r2, r2, #15
 2118 0c60 1370     		strb	r3, [r2]
 2119 0c62 35E0     		b	.L120
 2120              	.L121:
 474:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2121              		.loc 1 474 0 discriminator 3
 2122 0c64 07F5AA53 		add	r3, r7, #5440
 2123 0c68 03F10D03 		add	r3, r3, #13
 2124 0c6c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2125 0c6e 3222     		movs	r2, #50
 2126 0c70 02FB03F3 		mul	r3, r2, r3
 2127 0c74 1A1D     		adds	r2, r3, #4
 2128 0c76 07F5AA53 		add	r3, r7, #5440
 2129 0c7a 03F10B03 		add	r3, r3, #11
 2130 0c7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2131 0c80 5B00     		lsls	r3, r3, #1
 2132 0c82 1A44     		add	r2, r2, r3
 2133 0c84 07F5AA53 		add	r3, r7, #5440
 2134 0c88 03F10B03 		add	r3, r3, #11
 2135 0c8c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2136 0c8e 1A44     		add	r2, r2, r3
 2137 0c90 07F5AA53 		add	r3, r7, #5440
 2138 0c94 03F10F03 		add	r3, r3, #15
 2139 0c98 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2140 0c9a D31A     		subs	r3, r2, r3
 2141 0c9c 5A1E     		subs	r2, r3, #1
 2142 0c9e 07F5AA53 		add	r3, r7, #5440
 2143 0ca2 03F10F03 		add	r3, r3, #15
 2144 0ca6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2145 0ca8 07F13003 		add	r3, r7, #48
 2146 0cac 143B     		subs	r3, r3, #20
 2147 0cae 0B44     		add	r3, r3, r1
 2148 0cb0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2149 0cb2 07F17003 		add	r3, r7, #112
 2150 0cb6 1C3B     		subs	r3, r3, #28
 2151 0cb8 9954     		strb	r1, [r3, r2]
 473:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2152              		.loc 1 473 0 discriminator 3
 2153 0cba 07F5AA53 		add	r3, r7, #5440
 2154 0cbe 03F10F03 		add	r3, r3, #15
 2155 0cc2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2156 0cc4 0133     		adds	r3, r3, #1
 2157 0cc6 07F5AA52 		add	r2, r7, #5440
 2158 0cca 02F10F02 		add	r2, r2, #15
 2159 0cce 1370     		strb	r3, [r2]
 2160              	.L120:
 473:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2161              		.loc 1 473 0 is_stmt 0 discriminator 1
 2162 0cd0 07F5AA53 		add	r3, r7, #5440
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 63


 2163 0cd4 03F10F03 		add	r3, r3, #15
 2164 0cd8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2165 0cda 07F5AA53 		add	r3, r7, #5440
 2166 0cde 03F10B03 		add	r3, r3, #11
 2167 0ce2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2168 0ce4 9A42     		cmp	r2, r3
 2169 0ce6 BDD3     		bcc	.L121
 475:..\src/command_processing.c ****                             } 
 476:..\src/command_processing.c ****                         }
 477:..\src/command_processing.c ****                         else {
 478:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_dl / 65536;
 479:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 480:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 481:..\src/command_processing.c ****                             }
 482:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_dl / 65536;
 483:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 484:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 485:..\src/command_processing.c ****                             }
 486:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_dl / 65536;
 487:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 488:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 489:..\src/command_processing.c ****                             }
 490:..\src/command_processing.c ****                         }
 491:..\src/command_processing.c ****                         break;
 2170              		.loc 1 491 0 is_stmt 1
 2171 0ce8 01F0B7BB 		b	.L103
 2172              	.L115:
 478:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2173              		.loc 1 478 0
 2174 0cec 07F5AA53 		add	r3, r7, #5440
 2175 0cf0 03F10703 		add	r3, r3, #7
 2176 0cf4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2177 0cf6 0F49     		ldr	r1, .L258
 2178 0cf8 1346     		mov	r3, r2
 2179 0cfa DB00     		lsls	r3, r3, #3
 2180 0cfc 9B1A     		subs	r3, r3, r2
 2181 0cfe 1B01     		lsls	r3, r3, #4
 2182 0d00 0B44     		add	r3, r3, r1
 2183 0d02 C833     		adds	r3, r3, #200
 2184 0d04 1B68     		ldr	r3, [r3]
 2185 0d06 1846     		mov	r0, r3
 2186 0d08 FFF7FEFF 		bl	__aeabi_i2f
 2187 0d0c 0346     		mov	r3, r0
 2188 0d0e 4FF08F41 		mov	r1, #1199570944
 2189 0d12 1846     		mov	r0, r3
 2190 0d14 FFF7FEFF 		bl	__aeabi_fdiv
 2191 0d18 0346     		mov	r3, r0
 2192 0d1a 1A46     		mov	r2, r3
 2193 0d1c 07F13003 		add	r3, r7, #48
 2194 0d20 143B     		subs	r3, r3, #20
 2195 0d22 1A60     		str	r2, [r3]	@ float
 479:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2196              		.loc 1 479 0
 2197 0d24 0023     		movs	r3, #0
 2198 0d26 07F5AA52 		add	r2, r7, #5440
 2199 0d2a 02F10F02 		add	r2, r2, #15
 2200 0d2e 1370     		strb	r3, [r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 64


 2201 0d30 31E0     		b	.L123
 2202              	.L259:
 2203 0d32 00BF     		.align	2
 2204              	.L258:
 2205 0d34 00000000 		.word	c_mem
 2206              	.L124:
 480:..\src/command_processing.c ****                             }
 2207              		.loc 1 480 0 discriminator 3
 2208 0d38 07F5AA53 		add	r3, r7, #5440
 2209 0d3c 03F10D03 		add	r3, r3, #13
 2210 0d40 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2211 0d42 3222     		movs	r2, #50
 2212 0d44 02FB03F3 		mul	r3, r2, r3
 2213 0d48 1A1D     		adds	r2, r3, #4
 2214 0d4a 07F5AA53 		add	r3, r7, #5440
 2215 0d4e 03F10B03 		add	r3, r3, #11
 2216 0d52 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2217 0d54 1A44     		add	r2, r2, r3
 2218 0d56 07F5AA53 		add	r3, r7, #5440
 2219 0d5a 03F10F03 		add	r3, r3, #15
 2220 0d5e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2221 0d60 D31A     		subs	r3, r2, r3
 2222 0d62 5A1E     		subs	r2, r3, #1
 2223 0d64 07F5AA53 		add	r3, r7, #5440
 2224 0d68 03F10F03 		add	r3, r3, #15
 2225 0d6c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2226 0d6e 07F13003 		add	r3, r7, #48
 2227 0d72 143B     		subs	r3, r3, #20
 2228 0d74 0B44     		add	r3, r3, r1
 2229 0d76 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2230 0d78 07F17003 		add	r3, r7, #112
 2231 0d7c 1C3B     		subs	r3, r3, #28
 2232 0d7e 9954     		strb	r1, [r3, r2]
 479:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2233              		.loc 1 479 0 discriminator 3
 2234 0d80 07F5AA53 		add	r3, r7, #5440
 2235 0d84 03F10F03 		add	r3, r3, #15
 2236 0d88 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2237 0d8a 0133     		adds	r3, r3, #1
 2238 0d8c 07F5AA52 		add	r2, r7, #5440
 2239 0d90 02F10F02 		add	r2, r2, #15
 2240 0d94 1370     		strb	r3, [r2]
 2241              	.L123:
 479:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2242              		.loc 1 479 0 is_stmt 0 discriminator 1
 2243 0d96 07F5AA53 		add	r3, r7, #5440
 2244 0d9a 03F10F03 		add	r3, r3, #15
 2245 0d9e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2246 0da0 07F5AA53 		add	r3, r7, #5440
 2247 0da4 03F10B03 		add	r3, r3, #11
 2248 0da8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2249 0daa 9A42     		cmp	r2, r3
 2250 0dac C4D3     		bcc	.L124
 482:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2251              		.loc 1 482 0 is_stmt 1
 2252 0dae 07F5AA53 		add	r3, r7, #5440
 2253 0db2 03F10703 		add	r3, r3, #7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 65


 2254 0db6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2255 0db8 AB49     		ldr	r1, .L260
 2256 0dba 1346     		mov	r3, r2
 2257 0dbc DB00     		lsls	r3, r3, #3
 2258 0dbe 9B1A     		subs	r3, r3, r2
 2259 0dc0 1B01     		lsls	r3, r3, #4
 2260 0dc2 0B44     		add	r3, r3, r1
 2261 0dc4 CC33     		adds	r3, r3, #204
 2262 0dc6 1B68     		ldr	r3, [r3]
 2263 0dc8 1846     		mov	r0, r3
 2264 0dca FFF7FEFF 		bl	__aeabi_i2f
 2265 0dce 0346     		mov	r3, r0
 2266 0dd0 4FF08F41 		mov	r1, #1199570944
 2267 0dd4 1846     		mov	r0, r3
 2268 0dd6 FFF7FEFF 		bl	__aeabi_fdiv
 2269 0dda 0346     		mov	r3, r0
 2270 0ddc 1A46     		mov	r2, r3
 2271 0dde 07F13003 		add	r3, r7, #48
 2272 0de2 143B     		subs	r3, r3, #20
 2273 0de4 1A60     		str	r2, [r3]	@ float
 483:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2274              		.loc 1 483 0
 2275 0de6 0023     		movs	r3, #0
 2276 0de8 07F5AA52 		add	r2, r7, #5440
 2277 0dec 02F10F02 		add	r2, r2, #15
 2278 0df0 1370     		strb	r3, [r2]
 2279 0df2 34E0     		b	.L125
 2280              	.L126:
 484:..\src/command_processing.c ****                             }
 2281              		.loc 1 484 0 discriminator 3
 2282 0df4 07F5AA53 		add	r3, r7, #5440
 2283 0df8 03F10D03 		add	r3, r3, #13
 2284 0dfc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2285 0dfe 3222     		movs	r2, #50
 2286 0e00 02FB03F3 		mul	r3, r2, r3
 2287 0e04 1A1D     		adds	r2, r3, #4
 2288 0e06 07F5AA53 		add	r3, r7, #5440
 2289 0e0a 03F10B03 		add	r3, r3, #11
 2290 0e0e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2291 0e10 1A44     		add	r2, r2, r3
 2292 0e12 07F5AA53 		add	r3, r7, #5440
 2293 0e16 03F10B03 		add	r3, r3, #11
 2294 0e1a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2295 0e1c 1A44     		add	r2, r2, r3
 2296 0e1e 07F5AA53 		add	r3, r7, #5440
 2297 0e22 03F10F03 		add	r3, r3, #15
 2298 0e26 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2299 0e28 D31A     		subs	r3, r2, r3
 2300 0e2a 5A1E     		subs	r2, r3, #1
 2301 0e2c 07F5AA53 		add	r3, r7, #5440
 2302 0e30 03F10F03 		add	r3, r3, #15
 2303 0e34 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2304 0e36 07F13003 		add	r3, r7, #48
 2305 0e3a 143B     		subs	r3, r3, #20
 2306 0e3c 0B44     		add	r3, r3, r1
 2307 0e3e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2308 0e40 07F17003 		add	r3, r7, #112
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 66


 2309 0e44 1C3B     		subs	r3, r3, #28
 2310 0e46 9954     		strb	r1, [r3, r2]
 483:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2311              		.loc 1 483 0 discriminator 3
 2312 0e48 07F5AA53 		add	r3, r7, #5440
 2313 0e4c 03F10F03 		add	r3, r3, #15
 2314 0e50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2315 0e52 0133     		adds	r3, r3, #1
 2316 0e54 07F5AA52 		add	r2, r7, #5440
 2317 0e58 02F10F02 		add	r2, r2, #15
 2318 0e5c 1370     		strb	r3, [r2]
 2319              	.L125:
 483:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2320              		.loc 1 483 0 is_stmt 0 discriminator 1
 2321 0e5e 07F5AA53 		add	r3, r7, #5440
 2322 0e62 03F10F03 		add	r3, r3, #15
 2323 0e66 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2324 0e68 07F5AA53 		add	r3, r7, #5440
 2325 0e6c 03F10B03 		add	r3, r3, #11
 2326 0e70 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2327 0e72 9A42     		cmp	r2, r3
 2328 0e74 BED3     		bcc	.L126
 486:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2329              		.loc 1 486 0 is_stmt 1
 2330 0e76 07F5AA53 		add	r3, r7, #5440
 2331 0e7a 03F10703 		add	r3, r3, #7
 2332 0e7e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2333 0e80 7949     		ldr	r1, .L260
 2334 0e82 1346     		mov	r3, r2
 2335 0e84 DB00     		lsls	r3, r3, #3
 2336 0e86 9B1A     		subs	r3, r3, r2
 2337 0e88 1B01     		lsls	r3, r3, #4
 2338 0e8a 0B44     		add	r3, r3, r1
 2339 0e8c D033     		adds	r3, r3, #208
 2340 0e8e 1B68     		ldr	r3, [r3]
 2341 0e90 1846     		mov	r0, r3
 2342 0e92 FFF7FEFF 		bl	__aeabi_i2f
 2343 0e96 0346     		mov	r3, r0
 2344 0e98 4FF08F41 		mov	r1, #1199570944
 2345 0e9c 1846     		mov	r0, r3
 2346 0e9e FFF7FEFF 		bl	__aeabi_fdiv
 2347 0ea2 0346     		mov	r3, r0
 2348 0ea4 1A46     		mov	r2, r3
 2349 0ea6 07F13003 		add	r3, r7, #48
 2350 0eaa 143B     		subs	r3, r3, #20
 2351 0eac 1A60     		str	r2, [r3]	@ float
 487:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2352              		.loc 1 487 0
 2353 0eae 0023     		movs	r3, #0
 2354 0eb0 07F5AA52 		add	r2, r7, #5440
 2355 0eb4 02F10F02 		add	r2, r2, #15
 2356 0eb8 1370     		strb	r3, [r2]
 2357 0eba 35E0     		b	.L127
 2358              	.L128:
 488:..\src/command_processing.c ****                             }
 2359              		.loc 1 488 0 discriminator 3
 2360 0ebc 07F5AA53 		add	r3, r7, #5440
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 67


 2361 0ec0 03F10D03 		add	r3, r3, #13
 2362 0ec4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2363 0ec6 3222     		movs	r2, #50
 2364 0ec8 02FB03F3 		mul	r3, r2, r3
 2365 0ecc 1A1D     		adds	r2, r3, #4
 2366 0ece 07F5AA53 		add	r3, r7, #5440
 2367 0ed2 03F10B03 		add	r3, r3, #11
 2368 0ed6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2369 0ed8 5B00     		lsls	r3, r3, #1
 2370 0eda 1A44     		add	r2, r2, r3
 2371 0edc 07F5AA53 		add	r3, r7, #5440
 2372 0ee0 03F10B03 		add	r3, r3, #11
 2373 0ee4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2374 0ee6 1A44     		add	r2, r2, r3
 2375 0ee8 07F5AA53 		add	r3, r7, #5440
 2376 0eec 03F10F03 		add	r3, r3, #15
 2377 0ef0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2378 0ef2 D31A     		subs	r3, r2, r3
 2379 0ef4 5A1E     		subs	r2, r3, #1
 2380 0ef6 07F5AA53 		add	r3, r7, #5440
 2381 0efa 03F10F03 		add	r3, r3, #15
 2382 0efe 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2383 0f00 07F13003 		add	r3, r7, #48
 2384 0f04 143B     		subs	r3, r3, #20
 2385 0f06 0B44     		add	r3, r3, r1
 2386 0f08 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2387 0f0a 07F17003 		add	r3, r7, #112
 2388 0f0e 1C3B     		subs	r3, r3, #28
 2389 0f10 9954     		strb	r1, [r3, r2]
 487:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2390              		.loc 1 487 0 discriminator 3
 2391 0f12 07F5AA53 		add	r3, r7, #5440
 2392 0f16 03F10F03 		add	r3, r3, #15
 2393 0f1a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2394 0f1c 0133     		adds	r3, r3, #1
 2395 0f1e 07F5AA52 		add	r2, r7, #5440
 2396 0f22 02F10F02 		add	r2, r2, #15
 2397 0f26 1370     		strb	r3, [r2]
 2398              	.L127:
 487:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2399              		.loc 1 487 0 is_stmt 0 discriminator 1
 2400 0f28 07F5AA53 		add	r3, r7, #5440
 2401 0f2c 03F10F03 		add	r3, r3, #15
 2402 0f30 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2403 0f32 07F5AA53 		add	r3, r7, #5440
 2404 0f36 03F10B03 		add	r3, r3, #11
 2405 0f3a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2406 0f3c 9A42     		cmp	r2, r3
 2407 0f3e BDD3     		bcc	.L128
 2408              		.loc 1 491 0 is_stmt 1
 2409 0f40 01F08BBA 		b	.L103
 2410              	.L107:
 492:..\src/command_processing.c ****                         
 493:..\src/command_processing.c ****                     case 3:         //Current PID
 494:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 2411              		.loc 1 494 0
 2412 0f44 07F5AA53 		add	r3, r7, #5440
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 68


 2413 0f48 03F10703 		add	r3, r3, #7
 2414 0f4c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2415 0f4e 4649     		ldr	r1, .L260
 2416 0f50 1346     		mov	r3, r2
 2417 0f52 DB00     		lsls	r3, r3, #3
 2418 0f54 9B1A     		subs	r3, r3, r2
 2419 0f56 1B01     		lsls	r3, r3, #4
 2420 0f58 0B44     		add	r3, r3, r1
 2421 0f5a 03F20F13 		addw	r3, r3, #271
 2422 0f5e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2423 0f60 032B     		cmp	r3, #3
 2424 0f62 00F02B81 		beq	.L129
 495:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c / 65536;
 2425              		.loc 1 495 0
 2426 0f66 07F5AA53 		add	r3, r7, #5440
 2427 0f6a 03F10703 		add	r3, r3, #7
 2428 0f6e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2429 0f70 3D49     		ldr	r1, .L260
 2430 0f72 1346     		mov	r3, r2
 2431 0f74 DB00     		lsls	r3, r3, #3
 2432 0f76 9B1A     		subs	r3, r3, r2
 2433 0f78 1B01     		lsls	r3, r3, #4
 2434 0f7a 0B44     		add	r3, r3, r1
 2435 0f7c BC33     		adds	r3, r3, #188
 2436 0f7e 1B68     		ldr	r3, [r3]
 2437 0f80 1846     		mov	r0, r3
 2438 0f82 FFF7FEFF 		bl	__aeabi_i2f
 2439 0f86 0346     		mov	r3, r0
 2440 0f88 4FF08F41 		mov	r1, #1199570944
 2441 0f8c 1846     		mov	r0, r3
 2442 0f8e FFF7FEFF 		bl	__aeabi_fdiv
 2443 0f92 0346     		mov	r3, r0
 2444 0f94 1A46     		mov	r2, r3
 2445 0f96 07F13003 		add	r3, r7, #48
 2446 0f9a 143B     		subs	r3, r3, #20
 2447 0f9c 1A60     		str	r2, [r3]	@ float
 496:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2448              		.loc 1 496 0
 2449 0f9e 0023     		movs	r3, #0
 2450 0fa0 07F5AA52 		add	r2, r7, #5440
 2451 0fa4 02F10F02 		add	r2, r2, #15
 2452 0fa8 1370     		strb	r3, [r2]
 2453 0faa 2EE0     		b	.L130
 2454              	.L131:
 497:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2455              		.loc 1 497 0 discriminator 3
 2456 0fac 07F5AA53 		add	r3, r7, #5440
 2457 0fb0 03F10D03 		add	r3, r3, #13
 2458 0fb4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2459 0fb6 3222     		movs	r2, #50
 2460 0fb8 02FB03F3 		mul	r3, r2, r3
 2461 0fbc 1A1D     		adds	r2, r3, #4
 2462 0fbe 07F5AA53 		add	r3, r7, #5440
 2463 0fc2 03F10B03 		add	r3, r3, #11
 2464 0fc6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2465 0fc8 1A44     		add	r2, r2, r3
 2466 0fca 07F5AA53 		add	r3, r7, #5440
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 69


 2467 0fce 03F10F03 		add	r3, r3, #15
 2468 0fd2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2469 0fd4 D31A     		subs	r3, r2, r3
 2470 0fd6 5A1E     		subs	r2, r3, #1
 2471 0fd8 07F5AA53 		add	r3, r7, #5440
 2472 0fdc 03F10F03 		add	r3, r3, #15
 2473 0fe0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2474 0fe2 07F13003 		add	r3, r7, #48
 2475 0fe6 143B     		subs	r3, r3, #20
 2476 0fe8 0B44     		add	r3, r3, r1
 2477 0fea 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2478 0fec 07F17003 		add	r3, r7, #112
 2479 0ff0 1C3B     		subs	r3, r3, #28
 2480 0ff2 9954     		strb	r1, [r3, r2]
 496:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2481              		.loc 1 496 0 discriminator 3
 2482 0ff4 07F5AA53 		add	r3, r7, #5440
 2483 0ff8 03F10F03 		add	r3, r3, #15
 2484 0ffc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2485 0ffe 0133     		adds	r3, r3, #1
 2486 1000 07F5AA52 		add	r2, r7, #5440
 2487 1004 02F10F02 		add	r2, r2, #15
 2488 1008 1370     		strb	r3, [r2]
 2489              	.L130:
 496:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2490              		.loc 1 496 0 is_stmt 0 discriminator 1
 2491 100a 07F5AA53 		add	r3, r7, #5440
 2492 100e 03F10F03 		add	r3, r3, #15
 2493 1012 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2494 1014 07F5AA53 		add	r3, r7, #5440
 2495 1018 03F10B03 		add	r3, r3, #11
 2496 101c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2497 101e 9A42     		cmp	r2, r3
 2498 1020 C4D3     		bcc	.L131
 498:..\src/command_processing.c ****                             }
 499:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c / 65536;
 2499              		.loc 1 499 0 is_stmt 1
 2500 1022 07F5AA53 		add	r3, r7, #5440
 2501 1026 03F10703 		add	r3, r3, #7
 2502 102a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2503 102c 0E49     		ldr	r1, .L260
 2504 102e 1346     		mov	r3, r2
 2505 1030 DB00     		lsls	r3, r3, #3
 2506 1032 9B1A     		subs	r3, r3, r2
 2507 1034 1B01     		lsls	r3, r3, #4
 2508 1036 0B44     		add	r3, r3, r1
 2509 1038 C033     		adds	r3, r3, #192
 2510 103a 1B68     		ldr	r3, [r3]
 2511 103c 1846     		mov	r0, r3
 2512 103e FFF7FEFF 		bl	__aeabi_i2f
 2513 1042 0346     		mov	r3, r0
 2514 1044 4FF08F41 		mov	r1, #1199570944
 2515 1048 1846     		mov	r0, r3
 2516 104a FFF7FEFF 		bl	__aeabi_fdiv
 2517 104e 0346     		mov	r3, r0
 2518 1050 1A46     		mov	r2, r3
 2519 1052 07F13003 		add	r3, r7, #48
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 70


 2520 1056 143B     		subs	r3, r3, #20
 2521 1058 1A60     		str	r2, [r3]	@ float
 500:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2522              		.loc 1 500 0
 2523 105a 0023     		movs	r3, #0
 2524 105c 07F5AA52 		add	r2, r7, #5440
 2525 1060 02F10F02 		add	r2, r2, #15
 2526 1064 1370     		strb	r3, [r2]
 2527 1066 36E0     		b	.L132
 2528              	.L261:
 2529              		.align	2
 2530              	.L260:
 2531 1068 00000000 		.word	c_mem
 2532              	.L133:
 501:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2533              		.loc 1 501 0 discriminator 3
 2534 106c 07F5AA53 		add	r3, r7, #5440
 2535 1070 03F10D03 		add	r3, r3, #13
 2536 1074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2537 1076 3222     		movs	r2, #50
 2538 1078 02FB03F3 		mul	r3, r2, r3
 2539 107c 1A1D     		adds	r2, r3, #4
 2540 107e 07F5AA53 		add	r3, r7, #5440
 2541 1082 03F10B03 		add	r3, r3, #11
 2542 1086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2543 1088 1A44     		add	r2, r2, r3
 2544 108a 07F5AA53 		add	r3, r7, #5440
 2545 108e 03F10B03 		add	r3, r3, #11
 2546 1092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2547 1094 1A44     		add	r2, r2, r3
 2548 1096 07F5AA53 		add	r3, r7, #5440
 2549 109a 03F10F03 		add	r3, r3, #15
 2550 109e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2551 10a0 D31A     		subs	r3, r2, r3
 2552 10a2 5A1E     		subs	r2, r3, #1
 2553 10a4 07F5AA53 		add	r3, r7, #5440
 2554 10a8 03F10F03 		add	r3, r3, #15
 2555 10ac 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2556 10ae 07F13003 		add	r3, r7, #48
 2557 10b2 143B     		subs	r3, r3, #20
 2558 10b4 0B44     		add	r3, r3, r1
 2559 10b6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2560 10b8 07F17003 		add	r3, r7, #112
 2561 10bc 1C3B     		subs	r3, r3, #28
 2562 10be 9954     		strb	r1, [r3, r2]
 500:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2563              		.loc 1 500 0 discriminator 3
 2564 10c0 07F5AA53 		add	r3, r7, #5440
 2565 10c4 03F10F03 		add	r3, r3, #15
 2566 10c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2567 10ca 0133     		adds	r3, r3, #1
 2568 10cc 07F5AA52 		add	r2, r7, #5440
 2569 10d0 02F10F02 		add	r2, r2, #15
 2570 10d4 1370     		strb	r3, [r2]
 2571              	.L132:
 500:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2572              		.loc 1 500 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 71


 2573 10d6 07F5AA53 		add	r3, r7, #5440
 2574 10da 03F10F03 		add	r3, r3, #15
 2575 10de 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2576 10e0 07F5AA53 		add	r3, r7, #5440
 2577 10e4 03F10B03 		add	r3, r3, #11
 2578 10e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2579 10ea 9A42     		cmp	r2, r3
 2580 10ec BED3     		bcc	.L133
 502:..\src/command_processing.c ****                             }
 503:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c / 65536;
 2581              		.loc 1 503 0 is_stmt 1
 2582 10ee 07F5AA53 		add	r3, r7, #5440
 2583 10f2 03F10703 		add	r3, r3, #7
 2584 10f6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2585 10f8 C549     		ldr	r1, .L262
 2586 10fa 1346     		mov	r3, r2
 2587 10fc DB00     		lsls	r3, r3, #3
 2588 10fe 9B1A     		subs	r3, r3, r2
 2589 1100 1B01     		lsls	r3, r3, #4
 2590 1102 0B44     		add	r3, r3, r1
 2591 1104 C433     		adds	r3, r3, #196
 2592 1106 1B68     		ldr	r3, [r3]
 2593 1108 1846     		mov	r0, r3
 2594 110a FFF7FEFF 		bl	__aeabi_i2f
 2595 110e 0346     		mov	r3, r0
 2596 1110 4FF08F41 		mov	r1, #1199570944
 2597 1114 1846     		mov	r0, r3
 2598 1116 FFF7FEFF 		bl	__aeabi_fdiv
 2599 111a 0346     		mov	r3, r0
 2600 111c 1A46     		mov	r2, r3
 2601 111e 07F13003 		add	r3, r7, #48
 2602 1122 143B     		subs	r3, r3, #20
 2603 1124 1A60     		str	r2, [r3]	@ float
 504:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2604              		.loc 1 504 0
 2605 1126 0023     		movs	r3, #0
 2606 1128 07F5AA52 		add	r2, r7, #5440
 2607 112c 02F10F02 		add	r2, r2, #15
 2608 1130 1370     		strb	r3, [r2]
 2609 1132 35E0     		b	.L134
 2610              	.L135:
 505:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2611              		.loc 1 505 0 discriminator 3
 2612 1134 07F5AA53 		add	r3, r7, #5440
 2613 1138 03F10D03 		add	r3, r3, #13
 2614 113c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2615 113e 3222     		movs	r2, #50
 2616 1140 02FB03F3 		mul	r3, r2, r3
 2617 1144 1A1D     		adds	r2, r3, #4
 2618 1146 07F5AA53 		add	r3, r7, #5440
 2619 114a 03F10B03 		add	r3, r3, #11
 2620 114e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2621 1150 5B00     		lsls	r3, r3, #1
 2622 1152 1A44     		add	r2, r2, r3
 2623 1154 07F5AA53 		add	r3, r7, #5440
 2624 1158 03F10B03 		add	r3, r3, #11
 2625 115c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 72


 2626 115e 1A44     		add	r2, r2, r3
 2627 1160 07F5AA53 		add	r3, r7, #5440
 2628 1164 03F10F03 		add	r3, r3, #15
 2629 1168 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2630 116a D31A     		subs	r3, r2, r3
 2631 116c 5A1E     		subs	r2, r3, #1
 2632 116e 07F5AA53 		add	r3, r7, #5440
 2633 1172 03F10F03 		add	r3, r3, #15
 2634 1176 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2635 1178 07F13003 		add	r3, r7, #48
 2636 117c 143B     		subs	r3, r3, #20
 2637 117e 0B44     		add	r3, r3, r1
 2638 1180 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2639 1182 07F17003 		add	r3, r7, #112
 2640 1186 1C3B     		subs	r3, r3, #28
 2641 1188 9954     		strb	r1, [r3, r2]
 504:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2642              		.loc 1 504 0 discriminator 3
 2643 118a 07F5AA53 		add	r3, r7, #5440
 2644 118e 03F10F03 		add	r3, r3, #15
 2645 1192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2646 1194 0133     		adds	r3, r3, #1
 2647 1196 07F5AA52 		add	r2, r7, #5440
 2648 119a 02F10F02 		add	r2, r2, #15
 2649 119e 1370     		strb	r3, [r2]
 2650              	.L134:
 504:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2651              		.loc 1 504 0 is_stmt 0 discriminator 1
 2652 11a0 07F5AA53 		add	r3, r7, #5440
 2653 11a4 03F10F03 		add	r3, r3, #15
 2654 11a8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2655 11aa 07F5AA53 		add	r3, r7, #5440
 2656 11ae 03F10B03 		add	r3, r3, #11
 2657 11b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2658 11b4 9A42     		cmp	r2, r3
 2659 11b6 BDD3     		bcc	.L135
 506:..\src/command_processing.c ****                             }
 507:..\src/command_processing.c ****                         }
 508:..\src/command_processing.c ****                         else {
 509:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c_dl / 65536;
 510:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 511:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 512:..\src/command_processing.c ****                             }
 513:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c_dl / 65536;
 514:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 515:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 516:..\src/command_processing.c ****                             }
 517:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c_dl / 65536;
 518:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 519:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 520:..\src/command_processing.c ****                             }
 521:..\src/command_processing.c ****                         }            
 522:..\src/command_processing.c ****                         break;  
 2660              		.loc 1 522 0 is_stmt 1
 2661 11b8 01F04FB9 		b	.L103
 2662              	.L129:
 509:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 73


 2663              		.loc 1 509 0
 2664 11bc 07F5AA53 		add	r3, r7, #5440
 2665 11c0 03F10703 		add	r3, r3, #7
 2666 11c4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2667 11c6 9249     		ldr	r1, .L262
 2668 11c8 1346     		mov	r3, r2
 2669 11ca DB00     		lsls	r3, r3, #3
 2670 11cc 9B1A     		subs	r3, r3, r2
 2671 11ce 1B01     		lsls	r3, r3, #4
 2672 11d0 0B44     		add	r3, r3, r1
 2673 11d2 D433     		adds	r3, r3, #212
 2674 11d4 1B68     		ldr	r3, [r3]
 2675 11d6 1846     		mov	r0, r3
 2676 11d8 FFF7FEFF 		bl	__aeabi_i2f
 2677 11dc 0346     		mov	r3, r0
 2678 11de 4FF08F41 		mov	r1, #1199570944
 2679 11e2 1846     		mov	r0, r3
 2680 11e4 FFF7FEFF 		bl	__aeabi_fdiv
 2681 11e8 0346     		mov	r3, r0
 2682 11ea 1A46     		mov	r2, r3
 2683 11ec 07F13003 		add	r3, r7, #48
 2684 11f0 143B     		subs	r3, r3, #20
 2685 11f2 1A60     		str	r2, [r3]	@ float
 510:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2686              		.loc 1 510 0
 2687 11f4 0023     		movs	r3, #0
 2688 11f6 07F5AA52 		add	r2, r7, #5440
 2689 11fa 02F10F02 		add	r2, r2, #15
 2690 11fe 1370     		strb	r3, [r2]
 2691 1200 2EE0     		b	.L137
 2692              	.L138:
 511:..\src/command_processing.c ****                             }
 2693              		.loc 1 511 0 discriminator 3
 2694 1202 07F5AA53 		add	r3, r7, #5440
 2695 1206 03F10D03 		add	r3, r3, #13
 2696 120a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2697 120c 3222     		movs	r2, #50
 2698 120e 02FB03F3 		mul	r3, r2, r3
 2699 1212 1A1D     		adds	r2, r3, #4
 2700 1214 07F5AA53 		add	r3, r7, #5440
 2701 1218 03F10B03 		add	r3, r3, #11
 2702 121c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2703 121e 1A44     		add	r2, r2, r3
 2704 1220 07F5AA53 		add	r3, r7, #5440
 2705 1224 03F10F03 		add	r3, r3, #15
 2706 1228 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2707 122a D31A     		subs	r3, r2, r3
 2708 122c 5A1E     		subs	r2, r3, #1
 2709 122e 07F5AA53 		add	r3, r7, #5440
 2710 1232 03F10F03 		add	r3, r3, #15
 2711 1236 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2712 1238 07F13003 		add	r3, r7, #48
 2713 123c 143B     		subs	r3, r3, #20
 2714 123e 0B44     		add	r3, r3, r1
 2715 1240 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2716 1242 07F17003 		add	r3, r7, #112
 2717 1246 1C3B     		subs	r3, r3, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 74


 2718 1248 9954     		strb	r1, [r3, r2]
 510:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2719              		.loc 1 510 0 discriminator 3
 2720 124a 07F5AA53 		add	r3, r7, #5440
 2721 124e 03F10F03 		add	r3, r3, #15
 2722 1252 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2723 1254 0133     		adds	r3, r3, #1
 2724 1256 07F5AA52 		add	r2, r7, #5440
 2725 125a 02F10F02 		add	r2, r2, #15
 2726 125e 1370     		strb	r3, [r2]
 2727              	.L137:
 510:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2728              		.loc 1 510 0 is_stmt 0 discriminator 1
 2729 1260 07F5AA53 		add	r3, r7, #5440
 2730 1264 03F10F03 		add	r3, r3, #15
 2731 1268 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2732 126a 07F5AA53 		add	r3, r7, #5440
 2733 126e 03F10B03 		add	r3, r3, #11
 2734 1272 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2735 1274 9A42     		cmp	r2, r3
 2736 1276 C4D3     		bcc	.L138
 513:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2737              		.loc 1 513 0 is_stmt 1
 2738 1278 07F5AA53 		add	r3, r7, #5440
 2739 127c 03F10703 		add	r3, r3, #7
 2740 1280 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2741 1282 6349     		ldr	r1, .L262
 2742 1284 1346     		mov	r3, r2
 2743 1286 DB00     		lsls	r3, r3, #3
 2744 1288 9B1A     		subs	r3, r3, r2
 2745 128a 1B01     		lsls	r3, r3, #4
 2746 128c 0B44     		add	r3, r3, r1
 2747 128e D833     		adds	r3, r3, #216
 2748 1290 1B68     		ldr	r3, [r3]
 2749 1292 1846     		mov	r0, r3
 2750 1294 FFF7FEFF 		bl	__aeabi_i2f
 2751 1298 0346     		mov	r3, r0
 2752 129a 4FF08F41 		mov	r1, #1199570944
 2753 129e 1846     		mov	r0, r3
 2754 12a0 FFF7FEFF 		bl	__aeabi_fdiv
 2755 12a4 0346     		mov	r3, r0
 2756 12a6 1A46     		mov	r2, r3
 2757 12a8 07F13003 		add	r3, r7, #48
 2758 12ac 143B     		subs	r3, r3, #20
 2759 12ae 1A60     		str	r2, [r3]	@ float
 514:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2760              		.loc 1 514 0
 2761 12b0 0023     		movs	r3, #0
 2762 12b2 07F5AA52 		add	r2, r7, #5440
 2763 12b6 02F10F02 		add	r2, r2, #15
 2764 12ba 1370     		strb	r3, [r2]
 2765 12bc 34E0     		b	.L139
 2766              	.L140:
 515:..\src/command_processing.c ****                             }
 2767              		.loc 1 515 0 discriminator 3
 2768 12be 07F5AA53 		add	r3, r7, #5440
 2769 12c2 03F10D03 		add	r3, r3, #13
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 75


 2770 12c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2771 12c8 3222     		movs	r2, #50
 2772 12ca 02FB03F3 		mul	r3, r2, r3
 2773 12ce 1A1D     		adds	r2, r3, #4
 2774 12d0 07F5AA53 		add	r3, r7, #5440
 2775 12d4 03F10B03 		add	r3, r3, #11
 2776 12d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2777 12da 1A44     		add	r2, r2, r3
 2778 12dc 07F5AA53 		add	r3, r7, #5440
 2779 12e0 03F10B03 		add	r3, r3, #11
 2780 12e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2781 12e6 1A44     		add	r2, r2, r3
 2782 12e8 07F5AA53 		add	r3, r7, #5440
 2783 12ec 03F10F03 		add	r3, r3, #15
 2784 12f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2785 12f2 D31A     		subs	r3, r2, r3
 2786 12f4 5A1E     		subs	r2, r3, #1
 2787 12f6 07F5AA53 		add	r3, r7, #5440
 2788 12fa 03F10F03 		add	r3, r3, #15
 2789 12fe 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2790 1300 07F13003 		add	r3, r7, #48
 2791 1304 143B     		subs	r3, r3, #20
 2792 1306 0B44     		add	r3, r3, r1
 2793 1308 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2794 130a 07F17003 		add	r3, r7, #112
 2795 130e 1C3B     		subs	r3, r3, #28
 2796 1310 9954     		strb	r1, [r3, r2]
 514:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2797              		.loc 1 514 0 discriminator 3
 2798 1312 07F5AA53 		add	r3, r7, #5440
 2799 1316 03F10F03 		add	r3, r3, #15
 2800 131a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2801 131c 0133     		adds	r3, r3, #1
 2802 131e 07F5AA52 		add	r2, r7, #5440
 2803 1322 02F10F02 		add	r2, r2, #15
 2804 1326 1370     		strb	r3, [r2]
 2805              	.L139:
 514:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2806              		.loc 1 514 0 is_stmt 0 discriminator 1
 2807 1328 07F5AA53 		add	r3, r7, #5440
 2808 132c 03F10F03 		add	r3, r3, #15
 2809 1330 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2810 1332 07F5AA53 		add	r3, r7, #5440
 2811 1336 03F10B03 		add	r3, r3, #11
 2812 133a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2813 133c 9A42     		cmp	r2, r3
 2814 133e BED3     		bcc	.L140
 517:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2815              		.loc 1 517 0 is_stmt 1
 2816 1340 07F5AA53 		add	r3, r7, #5440
 2817 1344 03F10703 		add	r3, r3, #7
 2818 1348 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2819 134a 3149     		ldr	r1, .L262
 2820 134c 1346     		mov	r3, r2
 2821 134e DB00     		lsls	r3, r3, #3
 2822 1350 9B1A     		subs	r3, r3, r2
 2823 1352 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 76


 2824 1354 0B44     		add	r3, r3, r1
 2825 1356 DC33     		adds	r3, r3, #220
 2826 1358 1B68     		ldr	r3, [r3]
 2827 135a 1846     		mov	r0, r3
 2828 135c FFF7FEFF 		bl	__aeabi_i2f
 2829 1360 0346     		mov	r3, r0
 2830 1362 4FF08F41 		mov	r1, #1199570944
 2831 1366 1846     		mov	r0, r3
 2832 1368 FFF7FEFF 		bl	__aeabi_fdiv
 2833 136c 0346     		mov	r3, r0
 2834 136e 1A46     		mov	r2, r3
 2835 1370 07F13003 		add	r3, r7, #48
 2836 1374 143B     		subs	r3, r3, #20
 2837 1376 1A60     		str	r2, [r3]	@ float
 518:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2838              		.loc 1 518 0
 2839 1378 0023     		movs	r3, #0
 2840 137a 07F5AA52 		add	r2, r7, #5440
 2841 137e 02F10F02 		add	r2, r2, #15
 2842 1382 1370     		strb	r3, [r2]
 2843 1384 35E0     		b	.L141
 2844              	.L142:
 519:..\src/command_processing.c ****                             }
 2845              		.loc 1 519 0 discriminator 3
 2846 1386 07F5AA53 		add	r3, r7, #5440
 2847 138a 03F10D03 		add	r3, r3, #13
 2848 138e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2849 1390 3222     		movs	r2, #50
 2850 1392 02FB03F3 		mul	r3, r2, r3
 2851 1396 1A1D     		adds	r2, r3, #4
 2852 1398 07F5AA53 		add	r3, r7, #5440
 2853 139c 03F10B03 		add	r3, r3, #11
 2854 13a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2855 13a2 5B00     		lsls	r3, r3, #1
 2856 13a4 1A44     		add	r2, r2, r3
 2857 13a6 07F5AA53 		add	r3, r7, #5440
 2858 13aa 03F10B03 		add	r3, r3, #11
 2859 13ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2860 13b0 1A44     		add	r2, r2, r3
 2861 13b2 07F5AA53 		add	r3, r7, #5440
 2862 13b6 03F10F03 		add	r3, r3, #15
 2863 13ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2864 13bc D31A     		subs	r3, r2, r3
 2865 13be 5A1E     		subs	r2, r3, #1
 2866 13c0 07F5AA53 		add	r3, r7, #5440
 2867 13c4 03F10F03 		add	r3, r3, #15
 2868 13c8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2869 13ca 07F13003 		add	r3, r7, #48
 2870 13ce 143B     		subs	r3, r3, #20
 2871 13d0 0B44     		add	r3, r3, r1
 2872 13d2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2873 13d4 07F17003 		add	r3, r7, #112
 2874 13d8 1C3B     		subs	r3, r3, #28
 2875 13da 9954     		strb	r1, [r3, r2]
 518:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2876              		.loc 1 518 0 discriminator 3
 2877 13dc 07F5AA53 		add	r3, r7, #5440
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 77


 2878 13e0 03F10F03 		add	r3, r3, #15
 2879 13e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2880 13e6 0133     		adds	r3, r3, #1
 2881 13e8 07F5AA52 		add	r2, r7, #5440
 2882 13ec 02F10F02 		add	r2, r2, #15
 2883 13f0 1370     		strb	r3, [r2]
 2884              	.L141:
 518:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2885              		.loc 1 518 0 is_stmt 0 discriminator 1
 2886 13f2 07F5AA53 		add	r3, r7, #5440
 2887 13f6 03F10F03 		add	r3, r3, #15
 2888 13fa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2889 13fc 07F5AA53 		add	r3, r7, #5440
 2890 1400 03F10B03 		add	r3, r3, #11
 2891 1404 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2892 1406 9A42     		cmp	r2, r3
 2893 1408 BDD3     		bcc	.L142
 2894              		.loc 1 522 0 is_stmt 1
 2895 140a 01F026B8 		b	.L103
 2896              	.L263:
 2897 140e 00BF     		.align	2
 2898              	.L262:
 2899 1410 00000000 		.word	c_mem
 2900              	.L108:
 523:..\src/command_processing.c **** 
 524:..\src/command_processing.c ****                     case 8:         //Measurement Offset
 525:..\src/command_processing.c ****                         aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >> c_m
 2901              		.loc 1 525 0
 2902 1414 07F5AA53 		add	r3, r7, #5440
 2903 1418 03F10703 		add	r3, r3, #7
 2904 141c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2905 141e CC49     		ldr	r1, .L264
 2906 1420 1346     		mov	r3, r2
 2907 1422 DB00     		lsls	r3, r3, #3
 2908 1424 9B1A     		subs	r3, r3, r2
 2909 1426 1B01     		lsls	r3, r3, #4
 2910 1428 0B44     		add	r3, r3, r1
 2911 142a 03F58873 		add	r3, r3, #272
 2912 142e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2913 1430 1846     		mov	r0, r3
 2914 1432 07F5AA53 		add	r3, r7, #5440
 2915 1436 03F10F03 		add	r3, r3, #15
 2916 143a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2917 143c C549     		ldr	r1, .L264+4
 2918 143e 0346     		mov	r3, r0
 2919 1440 5B00     		lsls	r3, r3, #1
 2920 1442 0344     		add	r3, r3, r0
 2921 1444 9B00     		lsls	r3, r3, #2
 2922 1446 1344     		add	r3, r3, r2
 2923 1448 6633     		adds	r3, r3, #102
 2924 144a 51F82310 		ldr	r1, [r1, r3, lsl #2]
 2925 144e 07F5AA53 		add	r3, r7, #5440
 2926 1452 03F10703 		add	r3, r3, #7
 2927 1456 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2928 1458 BD48     		ldr	r0, .L264
 2929 145a 1346     		mov	r3, r2
 2930 145c DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 78


 2931 145e 9B1A     		subs	r3, r3, r2
 2932 1460 1B01     		lsls	r3, r3, #4
 2933 1462 0344     		add	r3, r3, r0
 2934 1464 03F58873 		add	r3, r3, #272
 2935 1468 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2936 146a 1C46     		mov	r4, r3
 2937 146c 07F5AA53 		add	r3, r7, #5440
 2938 1470 03F10F03 		add	r3, r3, #15
 2939 1474 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2940 1476 B748     		ldr	r0, .L264+4
 2941 1478 2346     		mov	r3, r4
 2942 147a 5B00     		lsls	r3, r3, #1
 2943 147c 2344     		add	r3, r3, r4
 2944 147e 1B01     		lsls	r3, r3, #4
 2945 1480 0344     		add	r3, r3, r0
 2946 1482 1344     		add	r3, r3, r2
 2947 1484 03F29513 		addw	r3, r3, #405
 2948 1488 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2949 148a 41FA03F3 		asr	r3, r1, r3
 2950 148e 1AB2     		sxth	r2, r3
 2951 1490 07F13003 		add	r3, r7, #48
 2952 1494 163B     		subs	r3, r3, #22
 2953 1496 1A80     		strh	r2, [r3]	@ movhi
 526:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2954              		.loc 1 526 0
 2955 1498 0023     		movs	r3, #0
 2956 149a 07F5AA52 		add	r2, r7, #5440
 2957 149e 02F10E02 		add	r2, r2, #14
 2958 14a2 1370     		strb	r3, [r2]
 2959 14a4 3BE0     		b	.L143
 2960              	.L144:
 527:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 2961              		.loc 1 527 0 discriminator 3
 2962 14a6 07F5AA53 		add	r3, r7, #5440
 2963 14aa 03F10D03 		add	r3, r3, #13
 2964 14ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2965 14b0 3222     		movs	r2, #50
 2966 14b2 02FB03F3 		mul	r3, r2, r3
 2967 14b6 1A1D     		adds	r2, r3, #4
 2968 14b8 07F5AA53 		add	r3, r7, #5440
 2969 14bc 03F10F03 		add	r3, r3, #15
 2970 14c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2971 14c2 07F5AA51 		add	r1, r7, #5440
 2972 14c6 01F10B01 		add	r1, r1, #11
 2973 14ca 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 2974 14cc 01FB03F3 		mul	r3, r1, r3
 2975 14d0 1A44     		add	r2, r2, r3
 2976 14d2 07F5AA53 		add	r3, r7, #5440
 2977 14d6 03F10B03 		add	r3, r3, #11
 2978 14da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2979 14dc 1A44     		add	r2, r2, r3
 2980 14de 07F5AA53 		add	r3, r7, #5440
 2981 14e2 03F10E03 		add	r3, r3, #14
 2982 14e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2983 14e8 D31A     		subs	r3, r2, r3
 2984 14ea 5A1E     		subs	r2, r3, #1
 2985 14ec 07F5AA53 		add	r3, r7, #5440
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 79


 2986 14f0 03F10E03 		add	r3, r3, #14
 2987 14f4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2988 14f6 07F13003 		add	r3, r7, #48
 2989 14fa 163B     		subs	r3, r3, #22
 2990 14fc 0B44     		add	r3, r3, r1
 2991 14fe 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2992 1500 07F17003 		add	r3, r7, #112
 2993 1504 1C3B     		subs	r3, r3, #28
 2994 1506 9954     		strb	r1, [r3, r2]
 526:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2995              		.loc 1 526 0 discriminator 3
 2996 1508 07F5AA53 		add	r3, r7, #5440
 2997 150c 03F10E03 		add	r3, r3, #14
 2998 1510 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2999 1512 0133     		adds	r3, r3, #1
 3000 1514 07F5AA52 		add	r2, r7, #5440
 3001 1518 02F10E02 		add	r2, r2, #14
 3002 151c 1370     		strb	r3, [r2]
 3003              	.L143:
 526:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3004              		.loc 1 526 0 is_stmt 0 discriminator 1
 3005 151e 07F5AA53 		add	r3, r7, #5440
 3006 1522 03F10E03 		add	r3, r3, #14
 3007 1526 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3008 1528 07F5AA53 		add	r3, r7, #5440
 3009 152c 03F10B03 		add	r3, r3, #11
 3010 1530 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3011 1532 9A42     		cmp	r2, r3
 3012 1534 B7D3     		bcc	.L144
 528:..\src/command_processing.c ****                         }
 529:..\src/command_processing.c ****                         break;
 3013              		.loc 1 529 0 is_stmt 1
 3014 1536 00F090BF 		b	.L103
 3015              	.L109:
 530:..\src/command_processing.c ****                 
 531:..\src/command_processing.c ****                     case 11:        //Position limits
 532:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.motor[MO
 3016              		.loc 1 532 0
 3017 153a 07F5AA53 		add	r3, r7, #5440
 3018 153e 03F10703 		add	r3, r3, #7
 3019 1542 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3020 1544 8349     		ldr	r1, .L264+4
 3021 1546 1346     		mov	r3, r2
 3022 1548 DB00     		lsls	r3, r3, #3
 3023 154a 9B1A     		subs	r3, r3, r2
 3024 154c 1B01     		lsls	r3, r3, #4
 3025 154e 0B44     		add	r3, r3, r1
 3026 1550 E433     		adds	r3, r3, #228
 3027 1552 1968     		ldr	r1, [r3]
 3028 1554 07F5AA53 		add	r3, r7, #5440
 3029 1558 03F10703 		add	r3, r3, #7
 3030 155c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3031 155e 7C48     		ldr	r0, .L264
 3032 1560 1346     		mov	r3, r2
 3033 1562 DB00     		lsls	r3, r3, #3
 3034 1564 9B1A     		subs	r3, r3, r2
 3035 1566 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 80


 3036 1568 0344     		add	r3, r3, r0
 3037 156a 03F58873 		add	r3, r3, #272
 3038 156e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3039 1570 1846     		mov	r0, r3
 3040 1572 784A     		ldr	r2, .L264+4
 3041 1574 0346     		mov	r3, r0
 3042 1576 5B00     		lsls	r3, r3, #1
 3043 1578 0344     		add	r3, r3, r0
 3044 157a 1B01     		lsls	r3, r3, #4
 3045 157c 1344     		add	r3, r3, r2
 3046 157e 03F29513 		addw	r3, r3, #405
 3047 1582 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3048 1584 41FA03F2 		asr	r2, r1, r3
 3049 1588 07F13003 		add	r3, r7, #48
 3050 158c 1C3B     		subs	r3, r3, #28
 3051 158e 1A60     		str	r2, [r3]
 533:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3052              		.loc 1 533 0
 3053 1590 0023     		movs	r3, #0
 3054 1592 07F5AA52 		add	r2, r7, #5440
 3055 1596 02F10E02 		add	r2, r2, #14
 3056 159a 1370     		strb	r3, [r2]
 3057 159c 2EE0     		b	.L145
 3058              	.L146:
 534:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 3059              		.loc 1 534 0 discriminator 3
 3060 159e 07F5AA53 		add	r3, r7, #5440
 3061 15a2 03F10D03 		add	r3, r3, #13
 3062 15a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3063 15a8 3222     		movs	r2, #50
 3064 15aa 02FB03F3 		mul	r3, r2, r3
 3065 15ae 1A1D     		adds	r2, r3, #4
 3066 15b0 07F5AA53 		add	r3, r7, #5440
 3067 15b4 03F10B03 		add	r3, r3, #11
 3068 15b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3069 15ba 1A44     		add	r2, r2, r3
 3070 15bc 07F5AA53 		add	r3, r7, #5440
 3071 15c0 03F10E03 		add	r3, r3, #14
 3072 15c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3073 15c6 D31A     		subs	r3, r2, r3
 3074 15c8 5A1E     		subs	r2, r3, #1
 3075 15ca 07F5AA53 		add	r3, r7, #5440
 3076 15ce 03F10E03 		add	r3, r3, #14
 3077 15d2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3078 15d4 07F13003 		add	r3, r7, #48
 3079 15d8 1C3B     		subs	r3, r3, #28
 3080 15da 0B44     		add	r3, r3, r1
 3081 15dc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3082 15de 07F17003 		add	r3, r7, #112
 3083 15e2 1C3B     		subs	r3, r3, #28
 3084 15e4 9954     		strb	r1, [r3, r2]
 533:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3085              		.loc 1 533 0 discriminator 3
 3086 15e6 07F5AA53 		add	r3, r7, #5440
 3087 15ea 03F10E03 		add	r3, r3, #14
 3088 15ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3089 15f0 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 81


 3090 15f2 07F5AA52 		add	r2, r7, #5440
 3091 15f6 02F10E02 		add	r2, r2, #14
 3092 15fa 1370     		strb	r3, [r2]
 3093              	.L145:
 533:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3094              		.loc 1 533 0 is_stmt 0 discriminator 1
 3095 15fc 07F5AA53 		add	r3, r7, #5440
 3096 1600 03F10E03 		add	r3, r3, #14
 3097 1604 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3098 1606 07F5AA53 		add	r3, r7, #5440
 3099 160a 03F10B03 		add	r3, r3, #11
 3100 160e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3101 1610 9A42     		cmp	r2, r3
 3102 1612 C4D3     		bcc	.L146
 535:..\src/command_processing.c ****                         }
 536:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.motor[MO
 3103              		.loc 1 536 0 is_stmt 1
 3104 1614 07F5AA53 		add	r3, r7, #5440
 3105 1618 03F10703 		add	r3, r3, #7
 3106 161c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3107 161e 4D49     		ldr	r1, .L264+4
 3108 1620 1346     		mov	r3, r2
 3109 1622 DB00     		lsls	r3, r3, #3
 3110 1624 9B1A     		subs	r3, r3, r2
 3111 1626 1B01     		lsls	r3, r3, #4
 3112 1628 0B44     		add	r3, r3, r1
 3113 162a E833     		adds	r3, r3, #232
 3114 162c 1968     		ldr	r1, [r3]
 3115 162e 07F5AA53 		add	r3, r7, #5440
 3116 1632 03F10703 		add	r3, r3, #7
 3117 1636 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3118 1638 4548     		ldr	r0, .L264
 3119 163a 1346     		mov	r3, r2
 3120 163c DB00     		lsls	r3, r3, #3
 3121 163e 9B1A     		subs	r3, r3, r2
 3122 1640 1B01     		lsls	r3, r3, #4
 3123 1642 0344     		add	r3, r3, r0
 3124 1644 03F58873 		add	r3, r3, #272
 3125 1648 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3126 164a 1846     		mov	r0, r3
 3127 164c 414A     		ldr	r2, .L264+4
 3128 164e 0346     		mov	r3, r0
 3129 1650 5B00     		lsls	r3, r3, #1
 3130 1652 0344     		add	r3, r3, r0
 3131 1654 1B01     		lsls	r3, r3, #4
 3132 1656 1344     		add	r3, r3, r2
 3133 1658 03F29513 		addw	r3, r3, #405
 3134 165c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3135 165e 41FA03F2 		asr	r2, r1, r3
 3136 1662 07F13003 		add	r3, r7, #48
 3137 1666 1C3B     		subs	r3, r3, #28
 3138 1668 1A60     		str	r2, [r3]
 537:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3139              		.loc 1 537 0
 3140 166a 0023     		movs	r3, #0
 3141 166c 07F5AA52 		add	r2, r7, #5440
 3142 1670 02F10E02 		add	r2, r2, #14
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 82


 3143 1674 1370     		strb	r3, [r2]
 3144 1676 34E0     		b	.L147
 3145              	.L148:
 538:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 3146              		.loc 1 538 0 discriminator 3
 3147 1678 07F5AA53 		add	r3, r7, #5440
 3148 167c 03F10D03 		add	r3, r3, #13
 3149 1680 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3150 1682 3222     		movs	r2, #50
 3151 1684 02FB03F3 		mul	r3, r2, r3
 3152 1688 1A1D     		adds	r2, r3, #4
 3153 168a 07F5AA53 		add	r3, r7, #5440
 3154 168e 03F10B03 		add	r3, r3, #11
 3155 1692 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3156 1694 1A44     		add	r2, r2, r3
 3157 1696 07F5AA53 		add	r3, r7, #5440
 3158 169a 03F10B03 		add	r3, r3, #11
 3159 169e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3160 16a0 1A44     		add	r2, r2, r3
 3161 16a2 07F5AA53 		add	r3, r7, #5440
 3162 16a6 03F10E03 		add	r3, r3, #14
 3163 16aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3164 16ac D31A     		subs	r3, r2, r3
 3165 16ae 5A1E     		subs	r2, r3, #1
 3166 16b0 07F5AA53 		add	r3, r7, #5440
 3167 16b4 03F10E03 		add	r3, r3, #14
 3168 16b8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3169 16ba 07F13003 		add	r3, r7, #48
 3170 16be 1C3B     		subs	r3, r3, #28
 3171 16c0 0B44     		add	r3, r3, r1
 3172 16c2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3173 16c4 07F17003 		add	r3, r7, #112
 3174 16c8 1C3B     		subs	r3, r3, #28
 3175 16ca 9954     		strb	r1, [r3, r2]
 537:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3176              		.loc 1 537 0 discriminator 3
 3177 16cc 07F5AA53 		add	r3, r7, #5440
 3178 16d0 03F10E03 		add	r3, r3, #14
 3179 16d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3180 16d6 0133     		adds	r3, r3, #1
 3181 16d8 07F5AA52 		add	r2, r7, #5440
 3182 16dc 02F10E02 		add	r2, r2, #14
 3183 16e0 1370     		strb	r3, [r2]
 3184              	.L147:
 537:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3185              		.loc 1 537 0 is_stmt 0 discriminator 1
 3186 16e2 07F5AA53 		add	r3, r7, #5440
 3187 16e6 03F10E03 		add	r3, r3, #14
 3188 16ea 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3189 16ec 07F5AA53 		add	r3, r7, #5440
 3190 16f0 03F10B03 		add	r3, r3, #11
 3191 16f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3192 16f6 9A42     		cmp	r2, r3
 3193 16f8 BED3     		bcc	.L148
 539:..\src/command_processing.c ****                         }
 540:..\src/command_processing.c ****                         break;            
 3194              		.loc 1 540 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 83


 3195 16fa 00F0AEBE 		b	.L103
 3196              	.L110:
 541:..\src/command_processing.c **** 
 542:..\src/command_processing.c ****                     case 23:        //Rest Position
 543:..\src/command_processing.c ****                         aux_int32 = (c_mem.SH.rest_pos >> c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_
 3197              		.loc 1 543 0
 3198 16fe 154B     		ldr	r3, .L264+4
 3199 1700 D3F8A012 		ldr	r1, [r3, #672]
 3200 1704 07F5AA53 		add	r3, r7, #5440
 3201 1708 03F10703 		add	r3, r3, #7
 3202 170c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3203 170e 1048     		ldr	r0, .L264
 3204 1710 1346     		mov	r3, r2
 3205 1712 DB00     		lsls	r3, r3, #3
 3206 1714 9B1A     		subs	r3, r3, r2
 3207 1716 1B01     		lsls	r3, r3, #4
 3208 1718 0344     		add	r3, r3, r0
 3209 171a 03F58873 		add	r3, r3, #272
 3210 171e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3211 1720 1846     		mov	r0, r3
 3212 1722 0C4A     		ldr	r2, .L264+4
 3213 1724 0346     		mov	r3, r0
 3214 1726 5B00     		lsls	r3, r3, #1
 3215 1728 0344     		add	r3, r3, r0
 3216 172a 1B01     		lsls	r3, r3, #4
 3217 172c 1344     		add	r3, r3, r2
 3218 172e 03F29513 		addw	r3, r3, #405
 3219 1732 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3220 1734 41FA03F2 		asr	r2, r1, r3
 3221 1738 07F13003 		add	r3, r7, #48
 3222 173c 1C3B     		subs	r3, r3, #28
 3223 173e 1A60     		str	r2, [r3]
 544:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3224              		.loc 1 544 0
 3225 1740 0023     		movs	r3, #0
 3226 1742 07F5AA52 		add	r2, r7, #5440
 3227 1746 02F10E02 		add	r2, r2, #14
 3228 174a 1370     		strb	r3, [r2]
 3229 174c 33E0     		b	.L149
 3230              	.L265:
 3231 174e 00BF     		.align	2
 3232              	.L264:
 3233 1750 00000000 		.word	g_mem
 3234 1754 00000000 		.word	c_mem
 3235              	.L150:
 545:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 3236              		.loc 1 545 0 discriminator 3
 3237 1758 07F5AA53 		add	r3, r7, #5440
 3238 175c 03F10D03 		add	r3, r3, #13
 3239 1760 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3240 1762 3222     		movs	r2, #50
 3241 1764 02FB03F3 		mul	r3, r2, r3
 3242 1768 1A1D     		adds	r2, r3, #4
 3243 176a 07F5AA53 		add	r3, r7, #5440
 3244 176e 03F10B03 		add	r3, r3, #11
 3245 1772 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3246 1774 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 84


 3247 1776 07F5AA53 		add	r3, r7, #5440
 3248 177a 03F10E03 		add	r3, r3, #14
 3249 177e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3250 1780 D31A     		subs	r3, r2, r3
 3251 1782 5A1E     		subs	r2, r3, #1
 3252 1784 07F5AA53 		add	r3, r7, #5440
 3253 1788 03F10E03 		add	r3, r3, #14
 3254 178c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3255 178e 07F13003 		add	r3, r7, #48
 3256 1792 1C3B     		subs	r3, r3, #28
 3257 1794 0B44     		add	r3, r3, r1
 3258 1796 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3259 1798 07F17003 		add	r3, r7, #112
 3260 179c 1C3B     		subs	r3, r3, #28
 3261 179e 9954     		strb	r1, [r3, r2]
 544:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3262              		.loc 1 544 0 discriminator 3
 3263 17a0 07F5AA53 		add	r3, r7, #5440
 3264 17a4 03F10E03 		add	r3, r3, #14
 3265 17a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3266 17aa 0133     		adds	r3, r3, #1
 3267 17ac 07F5AA52 		add	r2, r7, #5440
 3268 17b0 02F10E02 		add	r2, r2, #14
 3269 17b4 1370     		strb	r3, [r2]
 3270              	.L149:
 544:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3271              		.loc 1 544 0 is_stmt 0 discriminator 1
 3272 17b6 07F5AA53 		add	r3, r7, #5440
 3273 17ba 03F10E03 		add	r3, r3, #14
 3274 17be 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3275 17c0 07F5AA53 		add	r3, r7, #5440
 3276 17c4 03F10B03 		add	r3, r3, #11
 3277 17c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3278 17ca 9A42     		cmp	r2, r3
 3279 17cc C4D3     		bcc	.L150
 546:..\src/command_processing.c ****                         }
 547:..\src/command_processing.c ****                         break; 
 3280              		.loc 1 547 0 is_stmt 1
 3281 17ce 00F044BE 		b	.L103
 3282              	.L111:
 548:..\src/command_processing.c ****                         
 549:..\src/command_processing.c ****                     case 44:         // Second Motor Position PID
 550:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 3283              		.loc 1 550 0
 3284 17d2 07F5AA53 		add	r3, r7, #5440
 3285 17d6 03F10603 		add	r3, r3, #6
 3286 17da 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3287 17dc AB49     		ldr	r1, .L266
 3288 17de 1346     		mov	r3, r2
 3289 17e0 DB00     		lsls	r3, r3, #3
 3290 17e2 9B1A     		subs	r3, r3, r2
 3291 17e4 1B01     		lsls	r3, r3, #4
 3292 17e6 0B44     		add	r3, r3, r1
 3293 17e8 03F20F13 		addw	r3, r3, #271
 3294 17ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3295 17ee 032B     		cmp	r3, #3
 3296 17f0 00F02981 		beq	.L151
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 85


 551:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p / 65536;
 3297              		.loc 1 551 0
 3298 17f4 07F5AA53 		add	r3, r7, #5440
 3299 17f8 03F10603 		add	r3, r3, #6
 3300 17fc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3301 17fe A349     		ldr	r1, .L266
 3302 1800 1346     		mov	r3, r2
 3303 1802 DB00     		lsls	r3, r3, #3
 3304 1804 9B1A     		subs	r3, r3, r2
 3305 1806 1B01     		lsls	r3, r3, #4
 3306 1808 0B44     		add	r3, r3, r1
 3307 180a B033     		adds	r3, r3, #176
 3308 180c 1B68     		ldr	r3, [r3]
 3309 180e 1846     		mov	r0, r3
 3310 1810 FFF7FEFF 		bl	__aeabi_i2f
 3311 1814 0346     		mov	r3, r0
 3312 1816 4FF08F41 		mov	r1, #1199570944
 3313 181a 1846     		mov	r0, r3
 3314 181c FFF7FEFF 		bl	__aeabi_fdiv
 3315 1820 0346     		mov	r3, r0
 3316 1822 1A46     		mov	r2, r3
 3317 1824 07F13003 		add	r3, r7, #48
 3318 1828 143B     		subs	r3, r3, #20
 3319 182a 1A60     		str	r2, [r3]	@ float
 552:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3320              		.loc 1 552 0
 3321 182c 0023     		movs	r3, #0
 3322 182e 07F5AA52 		add	r2, r7, #5440
 3323 1832 02F10F02 		add	r2, r2, #15
 3324 1836 1370     		strb	r3, [r2]
 3325 1838 2EE0     		b	.L152
 3326              	.L153:
 553:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3327              		.loc 1 553 0 discriminator 3
 3328 183a 07F5AA53 		add	r3, r7, #5440
 3329 183e 03F10D03 		add	r3, r3, #13
 3330 1842 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3331 1844 3222     		movs	r2, #50
 3332 1846 02FB03F3 		mul	r3, r2, r3
 3333 184a 1A1D     		adds	r2, r3, #4
 3334 184c 07F5AA53 		add	r3, r7, #5440
 3335 1850 03F10B03 		add	r3, r3, #11
 3336 1854 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3337 1856 1A44     		add	r2, r2, r3
 3338 1858 07F5AA53 		add	r3, r7, #5440
 3339 185c 03F10F03 		add	r3, r3, #15
 3340 1860 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3341 1862 D31A     		subs	r3, r2, r3
 3342 1864 5A1E     		subs	r2, r3, #1
 3343 1866 07F5AA53 		add	r3, r7, #5440
 3344 186a 03F10F03 		add	r3, r3, #15
 3345 186e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3346 1870 07F13003 		add	r3, r7, #48
 3347 1874 143B     		subs	r3, r3, #20
 3348 1876 0B44     		add	r3, r3, r1
 3349 1878 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3350 187a 07F17003 		add	r3, r7, #112
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 86


 3351 187e 1C3B     		subs	r3, r3, #28
 3352 1880 9954     		strb	r1, [r3, r2]
 552:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3353              		.loc 1 552 0 discriminator 3
 3354 1882 07F5AA53 		add	r3, r7, #5440
 3355 1886 03F10F03 		add	r3, r3, #15
 3356 188a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3357 188c 0133     		adds	r3, r3, #1
 3358 188e 07F5AA52 		add	r2, r7, #5440
 3359 1892 02F10F02 		add	r2, r2, #15
 3360 1896 1370     		strb	r3, [r2]
 3361              	.L152:
 552:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3362              		.loc 1 552 0 is_stmt 0 discriminator 1
 3363 1898 07F5AA53 		add	r3, r7, #5440
 3364 189c 03F10F03 		add	r3, r3, #15
 3365 18a0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3366 18a2 07F5AA53 		add	r3, r7, #5440
 3367 18a6 03F10B03 		add	r3, r3, #11
 3368 18aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3369 18ac 9A42     		cmp	r2, r3
 3370 18ae C4D3     		bcc	.L153
 554:..\src/command_processing.c ****                             }
 555:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i / 65536;
 3371              		.loc 1 555 0 is_stmt 1
 3372 18b0 07F5AA53 		add	r3, r7, #5440
 3373 18b4 03F10603 		add	r3, r3, #6
 3374 18b8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3375 18ba 7449     		ldr	r1, .L266
 3376 18bc 1346     		mov	r3, r2
 3377 18be DB00     		lsls	r3, r3, #3
 3378 18c0 9B1A     		subs	r3, r3, r2
 3379 18c2 1B01     		lsls	r3, r3, #4
 3380 18c4 0B44     		add	r3, r3, r1
 3381 18c6 B433     		adds	r3, r3, #180
 3382 18c8 1B68     		ldr	r3, [r3]
 3383 18ca 1846     		mov	r0, r3
 3384 18cc FFF7FEFF 		bl	__aeabi_i2f
 3385 18d0 0346     		mov	r3, r0
 3386 18d2 4FF08F41 		mov	r1, #1199570944
 3387 18d6 1846     		mov	r0, r3
 3388 18d8 FFF7FEFF 		bl	__aeabi_fdiv
 3389 18dc 0346     		mov	r3, r0
 3390 18de 1A46     		mov	r2, r3
 3391 18e0 07F13003 		add	r3, r7, #48
 3392 18e4 143B     		subs	r3, r3, #20
 3393 18e6 1A60     		str	r2, [r3]	@ float
 556:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3394              		.loc 1 556 0
 3395 18e8 0023     		movs	r3, #0
 3396 18ea 07F5AA52 		add	r2, r7, #5440
 3397 18ee 02F10F02 		add	r2, r2, #15
 3398 18f2 1370     		strb	r3, [r2]
 3399 18f4 34E0     		b	.L154
 3400              	.L155:
 557:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3401              		.loc 1 557 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 87


 3402 18f6 07F5AA53 		add	r3, r7, #5440
 3403 18fa 03F10D03 		add	r3, r3, #13
 3404 18fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3405 1900 3222     		movs	r2, #50
 3406 1902 02FB03F3 		mul	r3, r2, r3
 3407 1906 1A1D     		adds	r2, r3, #4
 3408 1908 07F5AA53 		add	r3, r7, #5440
 3409 190c 03F10B03 		add	r3, r3, #11
 3410 1910 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3411 1912 1A44     		add	r2, r2, r3
 3412 1914 07F5AA53 		add	r3, r7, #5440
 3413 1918 03F10B03 		add	r3, r3, #11
 3414 191c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3415 191e 1A44     		add	r2, r2, r3
 3416 1920 07F5AA53 		add	r3, r7, #5440
 3417 1924 03F10F03 		add	r3, r3, #15
 3418 1928 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3419 192a D31A     		subs	r3, r2, r3
 3420 192c 5A1E     		subs	r2, r3, #1
 3421 192e 07F5AA53 		add	r3, r7, #5440
 3422 1932 03F10F03 		add	r3, r3, #15
 3423 1936 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3424 1938 07F13003 		add	r3, r7, #48
 3425 193c 143B     		subs	r3, r3, #20
 3426 193e 0B44     		add	r3, r3, r1
 3427 1940 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3428 1942 07F17003 		add	r3, r7, #112
 3429 1946 1C3B     		subs	r3, r3, #28
 3430 1948 9954     		strb	r1, [r3, r2]
 556:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3431              		.loc 1 556 0 discriminator 3
 3432 194a 07F5AA53 		add	r3, r7, #5440
 3433 194e 03F10F03 		add	r3, r3, #15
 3434 1952 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3435 1954 0133     		adds	r3, r3, #1
 3436 1956 07F5AA52 		add	r2, r7, #5440
 3437 195a 02F10F02 		add	r2, r2, #15
 3438 195e 1370     		strb	r3, [r2]
 3439              	.L154:
 556:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3440              		.loc 1 556 0 is_stmt 0 discriminator 1
 3441 1960 07F5AA53 		add	r3, r7, #5440
 3442 1964 03F10F03 		add	r3, r3, #15
 3443 1968 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3444 196a 07F5AA53 		add	r3, r7, #5440
 3445 196e 03F10B03 		add	r3, r3, #11
 3446 1972 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3447 1974 9A42     		cmp	r2, r3
 3448 1976 BED3     		bcc	.L155
 558:..\src/command_processing.c ****                             }
 559:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d / 65536;
 3449              		.loc 1 559 0 is_stmt 1
 3450 1978 07F5AA53 		add	r3, r7, #5440
 3451 197c 03F10603 		add	r3, r3, #6
 3452 1980 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3453 1982 4249     		ldr	r1, .L266
 3454 1984 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 88


 3455 1986 DB00     		lsls	r3, r3, #3
 3456 1988 9B1A     		subs	r3, r3, r2
 3457 198a 1B01     		lsls	r3, r3, #4
 3458 198c 0B44     		add	r3, r3, r1
 3459 198e B833     		adds	r3, r3, #184
 3460 1990 1B68     		ldr	r3, [r3]
 3461 1992 1846     		mov	r0, r3
 3462 1994 FFF7FEFF 		bl	__aeabi_i2f
 3463 1998 0346     		mov	r3, r0
 3464 199a 4FF08F41 		mov	r1, #1199570944
 3465 199e 1846     		mov	r0, r3
 3466 19a0 FFF7FEFF 		bl	__aeabi_fdiv
 3467 19a4 0346     		mov	r3, r0
 3468 19a6 1A46     		mov	r2, r3
 3469 19a8 07F13003 		add	r3, r7, #48
 3470 19ac 143B     		subs	r3, r3, #20
 3471 19ae 1A60     		str	r2, [r3]	@ float
 560:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3472              		.loc 1 560 0
 3473 19b0 0023     		movs	r3, #0
 3474 19b2 07F5AA52 		add	r2, r7, #5440
 3475 19b6 02F10F02 		add	r2, r2, #15
 3476 19ba 1370     		strb	r3, [r2]
 3477 19bc 35E0     		b	.L156
 3478              	.L157:
 561:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3479              		.loc 1 561 0 discriminator 3
 3480 19be 07F5AA53 		add	r3, r7, #5440
 3481 19c2 03F10D03 		add	r3, r3, #13
 3482 19c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3483 19c8 3222     		movs	r2, #50
 3484 19ca 02FB03F3 		mul	r3, r2, r3
 3485 19ce 1A1D     		adds	r2, r3, #4
 3486 19d0 07F5AA53 		add	r3, r7, #5440
 3487 19d4 03F10B03 		add	r3, r3, #11
 3488 19d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3489 19da 5B00     		lsls	r3, r3, #1
 3490 19dc 1A44     		add	r2, r2, r3
 3491 19de 07F5AA53 		add	r3, r7, #5440
 3492 19e2 03F10B03 		add	r3, r3, #11
 3493 19e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3494 19e8 1A44     		add	r2, r2, r3
 3495 19ea 07F5AA53 		add	r3, r7, #5440
 3496 19ee 03F10F03 		add	r3, r3, #15
 3497 19f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3498 19f4 D31A     		subs	r3, r2, r3
 3499 19f6 5A1E     		subs	r2, r3, #1
 3500 19f8 07F5AA53 		add	r3, r7, #5440
 3501 19fc 03F10F03 		add	r3, r3, #15
 3502 1a00 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3503 1a02 07F13003 		add	r3, r7, #48
 3504 1a06 143B     		subs	r3, r3, #20
 3505 1a08 0B44     		add	r3, r3, r1
 3506 1a0a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3507 1a0c 07F17003 		add	r3, r7, #112
 3508 1a10 1C3B     		subs	r3, r3, #28
 3509 1a12 9954     		strb	r1, [r3, r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 89


 560:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3510              		.loc 1 560 0 discriminator 3
 3511 1a14 07F5AA53 		add	r3, r7, #5440
 3512 1a18 03F10F03 		add	r3, r3, #15
 3513 1a1c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3514 1a1e 0133     		adds	r3, r3, #1
 3515 1a20 07F5AA52 		add	r2, r7, #5440
 3516 1a24 02F10F02 		add	r2, r2, #15
 3517 1a28 1370     		strb	r3, [r2]
 3518              	.L156:
 560:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3519              		.loc 1 560 0 is_stmt 0 discriminator 1
 3520 1a2a 07F5AA53 		add	r3, r7, #5440
 3521 1a2e 03F10F03 		add	r3, r3, #15
 3522 1a32 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3523 1a34 07F5AA53 		add	r3, r7, #5440
 3524 1a38 03F10B03 		add	r3, r3, #11
 3525 1a3c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3526 1a3e 9A42     		cmp	r2, r3
 3527 1a40 BDD3     		bcc	.L157
 562:..\src/command_processing.c ****                             } 
 563:..\src/command_processing.c ****                         }
 564:..\src/command_processing.c ****                         else {
 565:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_dl / 65536;
 566:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 567:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 568:..\src/command_processing.c ****                             }
 569:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_dl / 65536;
 570:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 571:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 572:..\src/command_processing.c ****                             }
 573:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_dl / 65536;
 574:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 575:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 576:..\src/command_processing.c ****                             }
 577:..\src/command_processing.c ****                         }
 578:..\src/command_processing.c ****                         break;
 3528              		.loc 1 578 0 is_stmt 1
 3529 1a42 00F00ABD 		b	.L103
 3530              	.L151:
 565:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3531              		.loc 1 565 0
 3532 1a46 07F5AA53 		add	r3, r7, #5440
 3533 1a4a 03F10603 		add	r3, r3, #6
 3534 1a4e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3535 1a50 0E49     		ldr	r1, .L266
 3536 1a52 1346     		mov	r3, r2
 3537 1a54 DB00     		lsls	r3, r3, #3
 3538 1a56 9B1A     		subs	r3, r3, r2
 3539 1a58 1B01     		lsls	r3, r3, #4
 3540 1a5a 0B44     		add	r3, r3, r1
 3541 1a5c C833     		adds	r3, r3, #200
 3542 1a5e 1B68     		ldr	r3, [r3]
 3543 1a60 1846     		mov	r0, r3
 3544 1a62 FFF7FEFF 		bl	__aeabi_i2f
 3545 1a66 0346     		mov	r3, r0
 3546 1a68 4FF08F41 		mov	r1, #1199570944
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 90


 3547 1a6c 1846     		mov	r0, r3
 3548 1a6e FFF7FEFF 		bl	__aeabi_fdiv
 3549 1a72 0346     		mov	r3, r0
 3550 1a74 1A46     		mov	r2, r3
 3551 1a76 07F13003 		add	r3, r7, #48
 3552 1a7a 143B     		subs	r3, r3, #20
 3553 1a7c 1A60     		str	r2, [r3]	@ float
 566:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3554              		.loc 1 566 0
 3555 1a7e 0023     		movs	r3, #0
 3556 1a80 07F5AA52 		add	r2, r7, #5440
 3557 1a84 02F10F02 		add	r2, r2, #15
 3558 1a88 1370     		strb	r3, [r2]
 3559 1a8a 30E0     		b	.L159
 3560              	.L267:
 3561              		.align	2
 3562              	.L266:
 3563 1a8c 00000000 		.word	c_mem
 3564              	.L160:
 567:..\src/command_processing.c ****                             }
 3565              		.loc 1 567 0 discriminator 3
 3566 1a90 07F5AA53 		add	r3, r7, #5440
 3567 1a94 03F10D03 		add	r3, r3, #13
 3568 1a98 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3569 1a9a 3222     		movs	r2, #50
 3570 1a9c 02FB03F3 		mul	r3, r2, r3
 3571 1aa0 1A1D     		adds	r2, r3, #4
 3572 1aa2 07F5AA53 		add	r3, r7, #5440
 3573 1aa6 03F10B03 		add	r3, r3, #11
 3574 1aaa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3575 1aac 1A44     		add	r2, r2, r3
 3576 1aae 07F5AA53 		add	r3, r7, #5440
 3577 1ab2 03F10F03 		add	r3, r3, #15
 3578 1ab6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3579 1ab8 D31A     		subs	r3, r2, r3
 3580 1aba 5A1E     		subs	r2, r3, #1
 3581 1abc 07F5AA53 		add	r3, r7, #5440
 3582 1ac0 03F10F03 		add	r3, r3, #15
 3583 1ac4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3584 1ac6 07F13003 		add	r3, r7, #48
 3585 1aca 143B     		subs	r3, r3, #20
 3586 1acc 0B44     		add	r3, r3, r1
 3587 1ace 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3588 1ad0 07F17003 		add	r3, r7, #112
 3589 1ad4 1C3B     		subs	r3, r3, #28
 3590 1ad6 9954     		strb	r1, [r3, r2]
 566:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3591              		.loc 1 566 0 discriminator 3
 3592 1ad8 07F5AA53 		add	r3, r7, #5440
 3593 1adc 03F10F03 		add	r3, r3, #15
 3594 1ae0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3595 1ae2 0133     		adds	r3, r3, #1
 3596 1ae4 07F5AA52 		add	r2, r7, #5440
 3597 1ae8 02F10F02 		add	r2, r2, #15
 3598 1aec 1370     		strb	r3, [r2]
 3599              	.L159:
 566:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 91


 3600              		.loc 1 566 0 is_stmt 0 discriminator 1
 3601 1aee 07F5AA53 		add	r3, r7, #5440
 3602 1af2 03F10F03 		add	r3, r3, #15
 3603 1af6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3604 1af8 07F5AA53 		add	r3, r7, #5440
 3605 1afc 03F10B03 		add	r3, r3, #11
 3606 1b00 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3607 1b02 9A42     		cmp	r2, r3
 3608 1b04 C4D3     		bcc	.L160
 569:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3609              		.loc 1 569 0 is_stmt 1
 3610 1b06 07F5AA53 		add	r3, r7, #5440
 3611 1b0a 03F10603 		add	r3, r3, #6
 3612 1b0e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3613 1b10 AB49     		ldr	r1, .L268
 3614 1b12 1346     		mov	r3, r2
 3615 1b14 DB00     		lsls	r3, r3, #3
 3616 1b16 9B1A     		subs	r3, r3, r2
 3617 1b18 1B01     		lsls	r3, r3, #4
 3618 1b1a 0B44     		add	r3, r3, r1
 3619 1b1c CC33     		adds	r3, r3, #204
 3620 1b1e 1B68     		ldr	r3, [r3]
 3621 1b20 1846     		mov	r0, r3
 3622 1b22 FFF7FEFF 		bl	__aeabi_i2f
 3623 1b26 0346     		mov	r3, r0
 3624 1b28 4FF08F41 		mov	r1, #1199570944
 3625 1b2c 1846     		mov	r0, r3
 3626 1b2e FFF7FEFF 		bl	__aeabi_fdiv
 3627 1b32 0346     		mov	r3, r0
 3628 1b34 1A46     		mov	r2, r3
 3629 1b36 07F13003 		add	r3, r7, #48
 3630 1b3a 143B     		subs	r3, r3, #20
 3631 1b3c 1A60     		str	r2, [r3]	@ float
 570:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3632              		.loc 1 570 0
 3633 1b3e 0023     		movs	r3, #0
 3634 1b40 07F5AA52 		add	r2, r7, #5440
 3635 1b44 02F10F02 		add	r2, r2, #15
 3636 1b48 1370     		strb	r3, [r2]
 3637 1b4a 34E0     		b	.L161
 3638              	.L162:
 571:..\src/command_processing.c ****                             }
 3639              		.loc 1 571 0 discriminator 3
 3640 1b4c 07F5AA53 		add	r3, r7, #5440
 3641 1b50 03F10D03 		add	r3, r3, #13
 3642 1b54 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3643 1b56 3222     		movs	r2, #50
 3644 1b58 02FB03F3 		mul	r3, r2, r3
 3645 1b5c 1A1D     		adds	r2, r3, #4
 3646 1b5e 07F5AA53 		add	r3, r7, #5440
 3647 1b62 03F10B03 		add	r3, r3, #11
 3648 1b66 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3649 1b68 1A44     		add	r2, r2, r3
 3650 1b6a 07F5AA53 		add	r3, r7, #5440
 3651 1b6e 03F10B03 		add	r3, r3, #11
 3652 1b72 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3653 1b74 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 92


 3654 1b76 07F5AA53 		add	r3, r7, #5440
 3655 1b7a 03F10F03 		add	r3, r3, #15
 3656 1b7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3657 1b80 D31A     		subs	r3, r2, r3
 3658 1b82 5A1E     		subs	r2, r3, #1
 3659 1b84 07F5AA53 		add	r3, r7, #5440
 3660 1b88 03F10F03 		add	r3, r3, #15
 3661 1b8c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3662 1b8e 07F13003 		add	r3, r7, #48
 3663 1b92 143B     		subs	r3, r3, #20
 3664 1b94 0B44     		add	r3, r3, r1
 3665 1b96 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3666 1b98 07F17003 		add	r3, r7, #112
 3667 1b9c 1C3B     		subs	r3, r3, #28
 3668 1b9e 9954     		strb	r1, [r3, r2]
 570:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3669              		.loc 1 570 0 discriminator 3
 3670 1ba0 07F5AA53 		add	r3, r7, #5440
 3671 1ba4 03F10F03 		add	r3, r3, #15
 3672 1ba8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3673 1baa 0133     		adds	r3, r3, #1
 3674 1bac 07F5AA52 		add	r2, r7, #5440
 3675 1bb0 02F10F02 		add	r2, r2, #15
 3676 1bb4 1370     		strb	r3, [r2]
 3677              	.L161:
 570:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3678              		.loc 1 570 0 is_stmt 0 discriminator 1
 3679 1bb6 07F5AA53 		add	r3, r7, #5440
 3680 1bba 03F10F03 		add	r3, r3, #15
 3681 1bbe 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3682 1bc0 07F5AA53 		add	r3, r7, #5440
 3683 1bc4 03F10B03 		add	r3, r3, #11
 3684 1bc8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3685 1bca 9A42     		cmp	r2, r3
 3686 1bcc BED3     		bcc	.L162
 573:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3687              		.loc 1 573 0 is_stmt 1
 3688 1bce 07F5AA53 		add	r3, r7, #5440
 3689 1bd2 03F10603 		add	r3, r3, #6
 3690 1bd6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3691 1bd8 7949     		ldr	r1, .L268
 3692 1bda 1346     		mov	r3, r2
 3693 1bdc DB00     		lsls	r3, r3, #3
 3694 1bde 9B1A     		subs	r3, r3, r2
 3695 1be0 1B01     		lsls	r3, r3, #4
 3696 1be2 0B44     		add	r3, r3, r1
 3697 1be4 D033     		adds	r3, r3, #208
 3698 1be6 1B68     		ldr	r3, [r3]
 3699 1be8 1846     		mov	r0, r3
 3700 1bea FFF7FEFF 		bl	__aeabi_i2f
 3701 1bee 0346     		mov	r3, r0
 3702 1bf0 4FF08F41 		mov	r1, #1199570944
 3703 1bf4 1846     		mov	r0, r3
 3704 1bf6 FFF7FEFF 		bl	__aeabi_fdiv
 3705 1bfa 0346     		mov	r3, r0
 3706 1bfc 1A46     		mov	r2, r3
 3707 1bfe 07F13003 		add	r3, r7, #48
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 93


 3708 1c02 143B     		subs	r3, r3, #20
 3709 1c04 1A60     		str	r2, [r3]	@ float
 574:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3710              		.loc 1 574 0
 3711 1c06 0023     		movs	r3, #0
 3712 1c08 07F5AA52 		add	r2, r7, #5440
 3713 1c0c 02F10F02 		add	r2, r2, #15
 3714 1c10 1370     		strb	r3, [r2]
 3715 1c12 35E0     		b	.L163
 3716              	.L164:
 575:..\src/command_processing.c ****                             }
 3717              		.loc 1 575 0 discriminator 3
 3718 1c14 07F5AA53 		add	r3, r7, #5440
 3719 1c18 03F10D03 		add	r3, r3, #13
 3720 1c1c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3721 1c1e 3222     		movs	r2, #50
 3722 1c20 02FB03F3 		mul	r3, r2, r3
 3723 1c24 1A1D     		adds	r2, r3, #4
 3724 1c26 07F5AA53 		add	r3, r7, #5440
 3725 1c2a 03F10B03 		add	r3, r3, #11
 3726 1c2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3727 1c30 5B00     		lsls	r3, r3, #1
 3728 1c32 1A44     		add	r2, r2, r3
 3729 1c34 07F5AA53 		add	r3, r7, #5440
 3730 1c38 03F10B03 		add	r3, r3, #11
 3731 1c3c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3732 1c3e 1A44     		add	r2, r2, r3
 3733 1c40 07F5AA53 		add	r3, r7, #5440
 3734 1c44 03F10F03 		add	r3, r3, #15
 3735 1c48 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3736 1c4a D31A     		subs	r3, r2, r3
 3737 1c4c 5A1E     		subs	r2, r3, #1
 3738 1c4e 07F5AA53 		add	r3, r7, #5440
 3739 1c52 03F10F03 		add	r3, r3, #15
 3740 1c56 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3741 1c58 07F13003 		add	r3, r7, #48
 3742 1c5c 143B     		subs	r3, r3, #20
 3743 1c5e 0B44     		add	r3, r3, r1
 3744 1c60 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3745 1c62 07F17003 		add	r3, r7, #112
 3746 1c66 1C3B     		subs	r3, r3, #28
 3747 1c68 9954     		strb	r1, [r3, r2]
 574:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3748              		.loc 1 574 0 discriminator 3
 3749 1c6a 07F5AA53 		add	r3, r7, #5440
 3750 1c6e 03F10F03 		add	r3, r3, #15
 3751 1c72 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3752 1c74 0133     		adds	r3, r3, #1
 3753 1c76 07F5AA52 		add	r2, r7, #5440
 3754 1c7a 02F10F02 		add	r2, r2, #15
 3755 1c7e 1370     		strb	r3, [r2]
 3756              	.L163:
 574:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3757              		.loc 1 574 0 is_stmt 0 discriminator 1
 3758 1c80 07F5AA53 		add	r3, r7, #5440
 3759 1c84 03F10F03 		add	r3, r3, #15
 3760 1c88 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 94


 3761 1c8a 07F5AA53 		add	r3, r7, #5440
 3762 1c8e 03F10B03 		add	r3, r3, #11
 3763 1c92 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3764 1c94 9A42     		cmp	r2, r3
 3765 1c96 BDD3     		bcc	.L164
 3766              		.loc 1 578 0 is_stmt 1
 3767 1c98 DFE3     		b	.L103
 3768              	.L112:
 579:..\src/command_processing.c ****                         
 580:..\src/command_processing.c ****                     case 45:         // Second Motor Current PID
 581:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 3769              		.loc 1 581 0
 3770 1c9a 07F5AA53 		add	r3, r7, #5440
 3771 1c9e 03F10603 		add	r3, r3, #6
 3772 1ca2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3773 1ca4 4649     		ldr	r1, .L268
 3774 1ca6 1346     		mov	r3, r2
 3775 1ca8 DB00     		lsls	r3, r3, #3
 3776 1caa 9B1A     		subs	r3, r3, r2
 3777 1cac 1B01     		lsls	r3, r3, #4
 3778 1cae 0B44     		add	r3, r3, r1
 3779 1cb0 03F20F13 		addw	r3, r3, #271
 3780 1cb4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3781 1cb6 032B     		cmp	r3, #3
 3782 1cb8 00F02B81 		beq	.L165
 582:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c / 65536;
 3783              		.loc 1 582 0
 3784 1cbc 07F5AA53 		add	r3, r7, #5440
 3785 1cc0 03F10603 		add	r3, r3, #6
 3786 1cc4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3787 1cc6 3E49     		ldr	r1, .L268
 3788 1cc8 1346     		mov	r3, r2
 3789 1cca DB00     		lsls	r3, r3, #3
 3790 1ccc 9B1A     		subs	r3, r3, r2
 3791 1cce 1B01     		lsls	r3, r3, #4
 3792 1cd0 0B44     		add	r3, r3, r1
 3793 1cd2 BC33     		adds	r3, r3, #188
 3794 1cd4 1B68     		ldr	r3, [r3]
 3795 1cd6 1846     		mov	r0, r3
 3796 1cd8 FFF7FEFF 		bl	__aeabi_i2f
 3797 1cdc 0346     		mov	r3, r0
 3798 1cde 4FF08F41 		mov	r1, #1199570944
 3799 1ce2 1846     		mov	r0, r3
 3800 1ce4 FFF7FEFF 		bl	__aeabi_fdiv
 3801 1ce8 0346     		mov	r3, r0
 3802 1cea 1A46     		mov	r2, r3
 3803 1cec 07F13003 		add	r3, r7, #48
 3804 1cf0 143B     		subs	r3, r3, #20
 3805 1cf2 1A60     		str	r2, [r3]	@ float
 583:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3806              		.loc 1 583 0
 3807 1cf4 0023     		movs	r3, #0
 3808 1cf6 07F5AA52 		add	r2, r7, #5440
 3809 1cfa 02F10F02 		add	r2, r2, #15
 3810 1cfe 1370     		strb	r3, [r2]
 3811 1d00 2EE0     		b	.L166
 3812              	.L167:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 95


 584:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3813              		.loc 1 584 0 discriminator 3
 3814 1d02 07F5AA53 		add	r3, r7, #5440
 3815 1d06 03F10D03 		add	r3, r3, #13
 3816 1d0a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3817 1d0c 3222     		movs	r2, #50
 3818 1d0e 02FB03F3 		mul	r3, r2, r3
 3819 1d12 1A1D     		adds	r2, r3, #4
 3820 1d14 07F5AA53 		add	r3, r7, #5440
 3821 1d18 03F10B03 		add	r3, r3, #11
 3822 1d1c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3823 1d1e 1A44     		add	r2, r2, r3
 3824 1d20 07F5AA53 		add	r3, r7, #5440
 3825 1d24 03F10F03 		add	r3, r3, #15
 3826 1d28 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3827 1d2a D31A     		subs	r3, r2, r3
 3828 1d2c 5A1E     		subs	r2, r3, #1
 3829 1d2e 07F5AA53 		add	r3, r7, #5440
 3830 1d32 03F10F03 		add	r3, r3, #15
 3831 1d36 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3832 1d38 07F13003 		add	r3, r7, #48
 3833 1d3c 143B     		subs	r3, r3, #20
 3834 1d3e 0B44     		add	r3, r3, r1
 3835 1d40 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3836 1d42 07F17003 		add	r3, r7, #112
 3837 1d46 1C3B     		subs	r3, r3, #28
 3838 1d48 9954     		strb	r1, [r3, r2]
 583:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3839              		.loc 1 583 0 discriminator 3
 3840 1d4a 07F5AA53 		add	r3, r7, #5440
 3841 1d4e 03F10F03 		add	r3, r3, #15
 3842 1d52 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3843 1d54 0133     		adds	r3, r3, #1
 3844 1d56 07F5AA52 		add	r2, r7, #5440
 3845 1d5a 02F10F02 		add	r2, r2, #15
 3846 1d5e 1370     		strb	r3, [r2]
 3847              	.L166:
 583:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3848              		.loc 1 583 0 is_stmt 0 discriminator 1
 3849 1d60 07F5AA53 		add	r3, r7, #5440
 3850 1d64 03F10F03 		add	r3, r3, #15
 3851 1d68 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3852 1d6a 07F5AA53 		add	r3, r7, #5440
 3853 1d6e 03F10B03 		add	r3, r3, #11
 3854 1d72 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3855 1d74 9A42     		cmp	r2, r3
 3856 1d76 C4D3     		bcc	.L167
 585:..\src/command_processing.c ****                             }
 586:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c / 65536;
 3857              		.loc 1 586 0 is_stmt 1
 3858 1d78 07F5AA53 		add	r3, r7, #5440
 3859 1d7c 03F10603 		add	r3, r3, #6
 3860 1d80 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3861 1d82 0F49     		ldr	r1, .L268
 3862 1d84 1346     		mov	r3, r2
 3863 1d86 DB00     		lsls	r3, r3, #3
 3864 1d88 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 96


 3865 1d8a 1B01     		lsls	r3, r3, #4
 3866 1d8c 0B44     		add	r3, r3, r1
 3867 1d8e C033     		adds	r3, r3, #192
 3868 1d90 1B68     		ldr	r3, [r3]
 3869 1d92 1846     		mov	r0, r3
 3870 1d94 FFF7FEFF 		bl	__aeabi_i2f
 3871 1d98 0346     		mov	r3, r0
 3872 1d9a 4FF08F41 		mov	r1, #1199570944
 3873 1d9e 1846     		mov	r0, r3
 3874 1da0 FFF7FEFF 		bl	__aeabi_fdiv
 3875 1da4 0346     		mov	r3, r0
 3876 1da6 1A46     		mov	r2, r3
 3877 1da8 07F13003 		add	r3, r7, #48
 3878 1dac 143B     		subs	r3, r3, #20
 3879 1dae 1A60     		str	r2, [r3]	@ float
 587:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3880              		.loc 1 587 0
 3881 1db0 0023     		movs	r3, #0
 3882 1db2 07F5AA52 		add	r2, r7, #5440
 3883 1db6 02F10F02 		add	r2, r2, #15
 3884 1dba 1370     		strb	r3, [r2]
 3885 1dbc 37E0     		b	.L168
 3886              	.L269:
 3887 1dbe 00BF     		.align	2
 3888              	.L268:
 3889 1dc0 00000000 		.word	c_mem
 3890              	.L169:
 588:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3891              		.loc 1 588 0 discriminator 3
 3892 1dc4 07F5AA53 		add	r3, r7, #5440
 3893 1dc8 03F10D03 		add	r3, r3, #13
 3894 1dcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3895 1dce 3222     		movs	r2, #50
 3896 1dd0 02FB03F3 		mul	r3, r2, r3
 3897 1dd4 1A1D     		adds	r2, r3, #4
 3898 1dd6 07F5AA53 		add	r3, r7, #5440
 3899 1dda 03F10B03 		add	r3, r3, #11
 3900 1dde 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3901 1de0 1A44     		add	r2, r2, r3
 3902 1de2 07F5AA53 		add	r3, r7, #5440
 3903 1de6 03F10B03 		add	r3, r3, #11
 3904 1dea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3905 1dec 1A44     		add	r2, r2, r3
 3906 1dee 07F5AA53 		add	r3, r7, #5440
 3907 1df2 03F10F03 		add	r3, r3, #15
 3908 1df6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3909 1df8 D31A     		subs	r3, r2, r3
 3910 1dfa 5A1E     		subs	r2, r3, #1
 3911 1dfc 07F5AA53 		add	r3, r7, #5440
 3912 1e00 03F10F03 		add	r3, r3, #15
 3913 1e04 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3914 1e06 07F13003 		add	r3, r7, #48
 3915 1e0a 143B     		subs	r3, r3, #20
 3916 1e0c 0B44     		add	r3, r3, r1
 3917 1e0e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3918 1e10 07F17003 		add	r3, r7, #112
 3919 1e14 1C3B     		subs	r3, r3, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 97


 3920 1e16 9954     		strb	r1, [r3, r2]
 587:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3921              		.loc 1 587 0 discriminator 3
 3922 1e18 07F5AA53 		add	r3, r7, #5440
 3923 1e1c 03F10F03 		add	r3, r3, #15
 3924 1e20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3925 1e22 0133     		adds	r3, r3, #1
 3926 1e24 07F5AA52 		add	r2, r7, #5440
 3927 1e28 02F10F02 		add	r2, r2, #15
 3928 1e2c 1370     		strb	r3, [r2]
 3929              	.L168:
 587:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3930              		.loc 1 587 0 is_stmt 0 discriminator 1
 3931 1e2e 07F5AA53 		add	r3, r7, #5440
 3932 1e32 03F10F03 		add	r3, r3, #15
 3933 1e36 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3934 1e38 07F5AA53 		add	r3, r7, #5440
 3935 1e3c 03F10B03 		add	r3, r3, #11
 3936 1e40 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3937 1e42 9A42     		cmp	r2, r3
 3938 1e44 BED3     		bcc	.L169
 589:..\src/command_processing.c ****                             }
 590:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c / 65536;
 3939              		.loc 1 590 0 is_stmt 1
 3940 1e46 07F5AA53 		add	r3, r7, #5440
 3941 1e4a 03F10603 		add	r3, r3, #6
 3942 1e4e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3943 1e50 C449     		ldr	r1, .L270
 3944 1e52 1346     		mov	r3, r2
 3945 1e54 DB00     		lsls	r3, r3, #3
 3946 1e56 9B1A     		subs	r3, r3, r2
 3947 1e58 1B01     		lsls	r3, r3, #4
 3948 1e5a 0B44     		add	r3, r3, r1
 3949 1e5c C433     		adds	r3, r3, #196
 3950 1e5e 1B68     		ldr	r3, [r3]
 3951 1e60 1846     		mov	r0, r3
 3952 1e62 FFF7FEFF 		bl	__aeabi_i2f
 3953 1e66 0346     		mov	r3, r0
 3954 1e68 4FF08F41 		mov	r1, #1199570944
 3955 1e6c 1846     		mov	r0, r3
 3956 1e6e FFF7FEFF 		bl	__aeabi_fdiv
 3957 1e72 0346     		mov	r3, r0
 3958 1e74 1A46     		mov	r2, r3
 3959 1e76 07F13003 		add	r3, r7, #48
 3960 1e7a 143B     		subs	r3, r3, #20
 3961 1e7c 1A60     		str	r2, [r3]	@ float
 591:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3962              		.loc 1 591 0
 3963 1e7e 0023     		movs	r3, #0
 3964 1e80 07F5AA52 		add	r2, r7, #5440
 3965 1e84 02F10F02 		add	r2, r2, #15
 3966 1e88 1370     		strb	r3, [r2]
 3967 1e8a 35E0     		b	.L170
 3968              	.L171:
 592:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3969              		.loc 1 592 0 discriminator 3
 3970 1e8c 07F5AA53 		add	r3, r7, #5440
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 98


 3971 1e90 03F10D03 		add	r3, r3, #13
 3972 1e94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3973 1e96 3222     		movs	r2, #50
 3974 1e98 02FB03F3 		mul	r3, r2, r3
 3975 1e9c 1A1D     		adds	r2, r3, #4
 3976 1e9e 07F5AA53 		add	r3, r7, #5440
 3977 1ea2 03F10B03 		add	r3, r3, #11
 3978 1ea6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3979 1ea8 5B00     		lsls	r3, r3, #1
 3980 1eaa 1A44     		add	r2, r2, r3
 3981 1eac 07F5AA53 		add	r3, r7, #5440
 3982 1eb0 03F10B03 		add	r3, r3, #11
 3983 1eb4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3984 1eb6 1A44     		add	r2, r2, r3
 3985 1eb8 07F5AA53 		add	r3, r7, #5440
 3986 1ebc 03F10F03 		add	r3, r3, #15
 3987 1ec0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3988 1ec2 D31A     		subs	r3, r2, r3
 3989 1ec4 5A1E     		subs	r2, r3, #1
 3990 1ec6 07F5AA53 		add	r3, r7, #5440
 3991 1eca 03F10F03 		add	r3, r3, #15
 3992 1ece 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3993 1ed0 07F13003 		add	r3, r7, #48
 3994 1ed4 143B     		subs	r3, r3, #20
 3995 1ed6 0B44     		add	r3, r3, r1
 3996 1ed8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3997 1eda 07F17003 		add	r3, r7, #112
 3998 1ede 1C3B     		subs	r3, r3, #28
 3999 1ee0 9954     		strb	r1, [r3, r2]
 591:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4000              		.loc 1 591 0 discriminator 3
 4001 1ee2 07F5AA53 		add	r3, r7, #5440
 4002 1ee6 03F10F03 		add	r3, r3, #15
 4003 1eea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4004 1eec 0133     		adds	r3, r3, #1
 4005 1eee 07F5AA52 		add	r2, r7, #5440
 4006 1ef2 02F10F02 		add	r2, r2, #15
 4007 1ef6 1370     		strb	r3, [r2]
 4008              	.L170:
 591:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4009              		.loc 1 591 0 is_stmt 0 discriminator 1
 4010 1ef8 07F5AA53 		add	r3, r7, #5440
 4011 1efc 03F10F03 		add	r3, r3, #15
 4012 1f00 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4013 1f02 07F5AA53 		add	r3, r7, #5440
 4014 1f06 03F10B03 		add	r3, r3, #11
 4015 1f0a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4016 1f0c 9A42     		cmp	r2, r3
 4017 1f0e BDD3     		bcc	.L171
 593:..\src/command_processing.c ****                             }
 594:..\src/command_processing.c ****                         }
 595:..\src/command_processing.c ****                         else {
 596:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl / 65536;
 597:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 598:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 599:..\src/command_processing.c ****                             }
 600:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl / 65536;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 99


 601:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 602:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 603:..\src/command_processing.c ****                             }
 604:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl / 65536;
 605:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 606:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 607:..\src/command_processing.c ****                             }
 608:..\src/command_processing.c ****                         }            
 609:..\src/command_processing.c ****                         break;  
 4018              		.loc 1 609 0 is_stmt 1
 4019 1f10 A3E2     		b	.L103
 4020              	.L165:
 596:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4021              		.loc 1 596 0
 4022 1f12 07F5AA53 		add	r3, r7, #5440
 4023 1f16 03F10603 		add	r3, r3, #6
 4024 1f1a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4025 1f1c 9149     		ldr	r1, .L270
 4026 1f1e 1346     		mov	r3, r2
 4027 1f20 DB00     		lsls	r3, r3, #3
 4028 1f22 9B1A     		subs	r3, r3, r2
 4029 1f24 1B01     		lsls	r3, r3, #4
 4030 1f26 0B44     		add	r3, r3, r1
 4031 1f28 D433     		adds	r3, r3, #212
 4032 1f2a 1B68     		ldr	r3, [r3]
 4033 1f2c 1846     		mov	r0, r3
 4034 1f2e FFF7FEFF 		bl	__aeabi_i2f
 4035 1f32 0346     		mov	r3, r0
 4036 1f34 4FF08F41 		mov	r1, #1199570944
 4037 1f38 1846     		mov	r0, r3
 4038 1f3a FFF7FEFF 		bl	__aeabi_fdiv
 4039 1f3e 0346     		mov	r3, r0
 4040 1f40 1A46     		mov	r2, r3
 4041 1f42 07F13003 		add	r3, r7, #48
 4042 1f46 143B     		subs	r3, r3, #20
 4043 1f48 1A60     		str	r2, [r3]	@ float
 597:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4044              		.loc 1 597 0
 4045 1f4a 0023     		movs	r3, #0
 4046 1f4c 07F5AA52 		add	r2, r7, #5440
 4047 1f50 02F10F02 		add	r2, r2, #15
 4048 1f54 1370     		strb	r3, [r2]
 4049 1f56 2EE0     		b	.L173
 4050              	.L174:
 598:..\src/command_processing.c ****                             }
 4051              		.loc 1 598 0 discriminator 3
 4052 1f58 07F5AA53 		add	r3, r7, #5440
 4053 1f5c 03F10D03 		add	r3, r3, #13
 4054 1f60 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4055 1f62 3222     		movs	r2, #50
 4056 1f64 02FB03F3 		mul	r3, r2, r3
 4057 1f68 1A1D     		adds	r2, r3, #4
 4058 1f6a 07F5AA53 		add	r3, r7, #5440
 4059 1f6e 03F10B03 		add	r3, r3, #11
 4060 1f72 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4061 1f74 1A44     		add	r2, r2, r3
 4062 1f76 07F5AA53 		add	r3, r7, #5440
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 100


 4063 1f7a 03F10F03 		add	r3, r3, #15
 4064 1f7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4065 1f80 D31A     		subs	r3, r2, r3
 4066 1f82 5A1E     		subs	r2, r3, #1
 4067 1f84 07F5AA53 		add	r3, r7, #5440
 4068 1f88 03F10F03 		add	r3, r3, #15
 4069 1f8c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4070 1f8e 07F13003 		add	r3, r7, #48
 4071 1f92 143B     		subs	r3, r3, #20
 4072 1f94 0B44     		add	r3, r3, r1
 4073 1f96 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4074 1f98 07F17003 		add	r3, r7, #112
 4075 1f9c 1C3B     		subs	r3, r3, #28
 4076 1f9e 9954     		strb	r1, [r3, r2]
 597:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4077              		.loc 1 597 0 discriminator 3
 4078 1fa0 07F5AA53 		add	r3, r7, #5440
 4079 1fa4 03F10F03 		add	r3, r3, #15
 4080 1fa8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4081 1faa 0133     		adds	r3, r3, #1
 4082 1fac 07F5AA52 		add	r2, r7, #5440
 4083 1fb0 02F10F02 		add	r2, r2, #15
 4084 1fb4 1370     		strb	r3, [r2]
 4085              	.L173:
 597:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4086              		.loc 1 597 0 is_stmt 0 discriminator 1
 4087 1fb6 07F5AA53 		add	r3, r7, #5440
 4088 1fba 03F10F03 		add	r3, r3, #15
 4089 1fbe 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4090 1fc0 07F5AA53 		add	r3, r7, #5440
 4091 1fc4 03F10B03 		add	r3, r3, #11
 4092 1fc8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4093 1fca 9A42     		cmp	r2, r3
 4094 1fcc C4D3     		bcc	.L174
 600:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4095              		.loc 1 600 0 is_stmt 1
 4096 1fce 07F5AA53 		add	r3, r7, #5440
 4097 1fd2 03F10603 		add	r3, r3, #6
 4098 1fd6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4099 1fd8 6249     		ldr	r1, .L270
 4100 1fda 1346     		mov	r3, r2
 4101 1fdc DB00     		lsls	r3, r3, #3
 4102 1fde 9B1A     		subs	r3, r3, r2
 4103 1fe0 1B01     		lsls	r3, r3, #4
 4104 1fe2 0B44     		add	r3, r3, r1
 4105 1fe4 D833     		adds	r3, r3, #216
 4106 1fe6 1B68     		ldr	r3, [r3]
 4107 1fe8 1846     		mov	r0, r3
 4108 1fea FFF7FEFF 		bl	__aeabi_i2f
 4109 1fee 0346     		mov	r3, r0
 4110 1ff0 4FF08F41 		mov	r1, #1199570944
 4111 1ff4 1846     		mov	r0, r3
 4112 1ff6 FFF7FEFF 		bl	__aeabi_fdiv
 4113 1ffa 0346     		mov	r3, r0
 4114 1ffc 1A46     		mov	r2, r3
 4115 1ffe 07F13003 		add	r3, r7, #48
 4116 2002 143B     		subs	r3, r3, #20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 101


 4117 2004 1A60     		str	r2, [r3]	@ float
 601:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4118              		.loc 1 601 0
 4119 2006 0023     		movs	r3, #0
 4120 2008 07F5AA52 		add	r2, r7, #5440
 4121 200c 02F10F02 		add	r2, r2, #15
 4122 2010 1370     		strb	r3, [r2]
 4123 2012 34E0     		b	.L175
 4124              	.L176:
 602:..\src/command_processing.c ****                             }
 4125              		.loc 1 602 0 discriminator 3
 4126 2014 07F5AA53 		add	r3, r7, #5440
 4127 2018 03F10D03 		add	r3, r3, #13
 4128 201c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4129 201e 3222     		movs	r2, #50
 4130 2020 02FB03F3 		mul	r3, r2, r3
 4131 2024 1A1D     		adds	r2, r3, #4
 4132 2026 07F5AA53 		add	r3, r7, #5440
 4133 202a 03F10B03 		add	r3, r3, #11
 4134 202e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4135 2030 1A44     		add	r2, r2, r3
 4136 2032 07F5AA53 		add	r3, r7, #5440
 4137 2036 03F10B03 		add	r3, r3, #11
 4138 203a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4139 203c 1A44     		add	r2, r2, r3
 4140 203e 07F5AA53 		add	r3, r7, #5440
 4141 2042 03F10F03 		add	r3, r3, #15
 4142 2046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4143 2048 D31A     		subs	r3, r2, r3
 4144 204a 5A1E     		subs	r2, r3, #1
 4145 204c 07F5AA53 		add	r3, r7, #5440
 4146 2050 03F10F03 		add	r3, r3, #15
 4147 2054 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4148 2056 07F13003 		add	r3, r7, #48
 4149 205a 143B     		subs	r3, r3, #20
 4150 205c 0B44     		add	r3, r3, r1
 4151 205e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4152 2060 07F17003 		add	r3, r7, #112
 4153 2064 1C3B     		subs	r3, r3, #28
 4154 2066 9954     		strb	r1, [r3, r2]
 601:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4155              		.loc 1 601 0 discriminator 3
 4156 2068 07F5AA53 		add	r3, r7, #5440
 4157 206c 03F10F03 		add	r3, r3, #15
 4158 2070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4159 2072 0133     		adds	r3, r3, #1
 4160 2074 07F5AA52 		add	r2, r7, #5440
 4161 2078 02F10F02 		add	r2, r2, #15
 4162 207c 1370     		strb	r3, [r2]
 4163              	.L175:
 601:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4164              		.loc 1 601 0 is_stmt 0 discriminator 1
 4165 207e 07F5AA53 		add	r3, r7, #5440
 4166 2082 03F10F03 		add	r3, r3, #15
 4167 2086 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4168 2088 07F5AA53 		add	r3, r7, #5440
 4169 208c 03F10B03 		add	r3, r3, #11
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 102


 4170 2090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4171 2092 9A42     		cmp	r2, r3
 4172 2094 BED3     		bcc	.L176
 604:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4173              		.loc 1 604 0 is_stmt 1
 4174 2096 07F5AA53 		add	r3, r7, #5440
 4175 209a 03F10603 		add	r3, r3, #6
 4176 209e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4177 20a0 3049     		ldr	r1, .L270
 4178 20a2 1346     		mov	r3, r2
 4179 20a4 DB00     		lsls	r3, r3, #3
 4180 20a6 9B1A     		subs	r3, r3, r2
 4181 20a8 1B01     		lsls	r3, r3, #4
 4182 20aa 0B44     		add	r3, r3, r1
 4183 20ac DC33     		adds	r3, r3, #220
 4184 20ae 1B68     		ldr	r3, [r3]
 4185 20b0 1846     		mov	r0, r3
 4186 20b2 FFF7FEFF 		bl	__aeabi_i2f
 4187 20b6 0346     		mov	r3, r0
 4188 20b8 4FF08F41 		mov	r1, #1199570944
 4189 20bc 1846     		mov	r0, r3
 4190 20be FFF7FEFF 		bl	__aeabi_fdiv
 4191 20c2 0346     		mov	r3, r0
 4192 20c4 1A46     		mov	r2, r3
 4193 20c6 07F13003 		add	r3, r7, #48
 4194 20ca 143B     		subs	r3, r3, #20
 4195 20cc 1A60     		str	r2, [r3]	@ float
 605:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4196              		.loc 1 605 0
 4197 20ce 0023     		movs	r3, #0
 4198 20d0 07F5AA52 		add	r2, r7, #5440
 4199 20d4 02F10F02 		add	r2, r2, #15
 4200 20d8 1370     		strb	r3, [r2]
 4201 20da 35E0     		b	.L177
 4202              	.L178:
 606:..\src/command_processing.c ****                             }
 4203              		.loc 1 606 0 discriminator 3
 4204 20dc 07F5AA53 		add	r3, r7, #5440
 4205 20e0 03F10D03 		add	r3, r3, #13
 4206 20e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4207 20e6 3222     		movs	r2, #50
 4208 20e8 02FB03F3 		mul	r3, r2, r3
 4209 20ec 1A1D     		adds	r2, r3, #4
 4210 20ee 07F5AA53 		add	r3, r7, #5440
 4211 20f2 03F10B03 		add	r3, r3, #11
 4212 20f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4213 20f8 5B00     		lsls	r3, r3, #1
 4214 20fa 1A44     		add	r2, r2, r3
 4215 20fc 07F5AA53 		add	r3, r7, #5440
 4216 2100 03F10B03 		add	r3, r3, #11
 4217 2104 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4218 2106 1A44     		add	r2, r2, r3
 4219 2108 07F5AA53 		add	r3, r7, #5440
 4220 210c 03F10F03 		add	r3, r3, #15
 4221 2110 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4222 2112 D31A     		subs	r3, r2, r3
 4223 2114 5A1E     		subs	r2, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 103


 4224 2116 07F5AA53 		add	r3, r7, #5440
 4225 211a 03F10F03 		add	r3, r3, #15
 4226 211e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4227 2120 07F13003 		add	r3, r7, #48
 4228 2124 143B     		subs	r3, r3, #20
 4229 2126 0B44     		add	r3, r3, r1
 4230 2128 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4231 212a 07F17003 		add	r3, r7, #112
 4232 212e 1C3B     		subs	r3, r3, #28
 4233 2130 9954     		strb	r1, [r3, r2]
 605:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4234              		.loc 1 605 0 discriminator 3
 4235 2132 07F5AA53 		add	r3, r7, #5440
 4236 2136 03F10F03 		add	r3, r3, #15
 4237 213a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4238 213c 0133     		adds	r3, r3, #1
 4239 213e 07F5AA52 		add	r2, r7, #5440
 4240 2142 02F10F02 		add	r2, r2, #15
 4241 2146 1370     		strb	r3, [r2]
 4242              	.L177:
 605:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4243              		.loc 1 605 0 is_stmt 0 discriminator 1
 4244 2148 07F5AA53 		add	r3, r7, #5440
 4245 214c 03F10F03 		add	r3, r3, #15
 4246 2150 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4247 2152 07F5AA53 		add	r3, r7, #5440
 4248 2156 03F10B03 		add	r3, r3, #11
 4249 215a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4250 215c 9A42     		cmp	r2, r3
 4251 215e BDD3     		bcc	.L178
 4252              		.loc 1 609 0 is_stmt 1
 4253 2160 7BE1     		b	.L103
 4254              	.L271:
 4255 2162 00BF     		.align	2
 4256              	.L270:
 4257 2164 00000000 		.word	c_mem
 4258              	.L113:
 610:..\src/command_processing.c **** 
 611:..\src/command_processing.c ****                     case 50:         // Second Motor Measurement Offset
 612:..\src/command_processing.c ****                         aux_int16 = (c_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i]
 4259              		.loc 1 612 0
 4260 2168 07F5AA53 		add	r3, r7, #5440
 4261 216c 03F10603 		add	r3, r3, #6
 4262 2170 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4263 2172 B749     		ldr	r1, .L272
 4264 2174 1346     		mov	r3, r2
 4265 2176 DB00     		lsls	r3, r3, #3
 4266 2178 9B1A     		subs	r3, r3, r2
 4267 217a 1B01     		lsls	r3, r3, #4
 4268 217c 0B44     		add	r3, r3, r1
 4269 217e 03F58873 		add	r3, r3, #272
 4270 2182 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4271 2184 1846     		mov	r0, r3
 4272 2186 07F5AA53 		add	r3, r7, #5440
 4273 218a 03F10F03 		add	r3, r3, #15
 4274 218e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4275 2190 B049     		ldr	r1, .L272+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 104


 4276 2192 0346     		mov	r3, r0
 4277 2194 5B00     		lsls	r3, r3, #1
 4278 2196 0344     		add	r3, r3, r0
 4279 2198 9B00     		lsls	r3, r3, #2
 4280 219a 1344     		add	r3, r3, r2
 4281 219c 6633     		adds	r3, r3, #102
 4282 219e 51F82310 		ldr	r1, [r1, r3, lsl #2]
 4283 21a2 07F5AA53 		add	r3, r7, #5440
 4284 21a6 03F10603 		add	r3, r3, #6
 4285 21aa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4286 21ac A848     		ldr	r0, .L272
 4287 21ae 1346     		mov	r3, r2
 4288 21b0 DB00     		lsls	r3, r3, #3
 4289 21b2 9B1A     		subs	r3, r3, r2
 4290 21b4 1B01     		lsls	r3, r3, #4
 4291 21b6 0344     		add	r3, r3, r0
 4292 21b8 03F58873 		add	r3, r3, #272
 4293 21bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4294 21be 1C46     		mov	r4, r3
 4295 21c0 07F5AA53 		add	r3, r7, #5440
 4296 21c4 03F10F03 		add	r3, r3, #15
 4297 21c8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4298 21ca A248     		ldr	r0, .L272+4
 4299 21cc 2346     		mov	r3, r4
 4300 21ce 5B00     		lsls	r3, r3, #1
 4301 21d0 2344     		add	r3, r3, r4
 4302 21d2 1B01     		lsls	r3, r3, #4
 4303 21d4 0344     		add	r3, r3, r0
 4304 21d6 1344     		add	r3, r3, r2
 4305 21d8 03F29513 		addw	r3, r3, #405
 4306 21dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4307 21de 41FA03F3 		asr	r3, r1, r3
 4308 21e2 1AB2     		sxth	r2, r3
 4309 21e4 07F13003 		add	r3, r7, #48
 4310 21e8 163B     		subs	r3, r3, #22
 4311 21ea 1A80     		strh	r2, [r3]	@ movhi
 613:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4312              		.loc 1 613 0
 4313 21ec 0023     		movs	r3, #0
 4314 21ee 07F5AA52 		add	r2, r7, #5440
 4315 21f2 02F10E02 		add	r2, r2, #14
 4316 21f6 1370     		strb	r3, [r2]
 4317 21f8 3BE0     		b	.L179
 4318              	.L180:
 614:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 4319              		.loc 1 614 0 discriminator 3
 4320 21fa 07F5AA53 		add	r3, r7, #5440
 4321 21fe 03F10D03 		add	r3, r3, #13
 4322 2202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4323 2204 3222     		movs	r2, #50
 4324 2206 02FB03F3 		mul	r3, r2, r3
 4325 220a 1A1D     		adds	r2, r3, #4
 4326 220c 07F5AA53 		add	r3, r7, #5440
 4327 2210 03F10F03 		add	r3, r3, #15
 4328 2214 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4329 2216 07F5AA51 		add	r1, r7, #5440
 4330 221a 01F10B01 		add	r1, r1, #11
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 105


 4331 221e 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4332 2220 01FB03F3 		mul	r3, r1, r3
 4333 2224 1A44     		add	r2, r2, r3
 4334 2226 07F5AA53 		add	r3, r7, #5440
 4335 222a 03F10B03 		add	r3, r3, #11
 4336 222e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4337 2230 1A44     		add	r2, r2, r3
 4338 2232 07F5AA53 		add	r3, r7, #5440
 4339 2236 03F10E03 		add	r3, r3, #14
 4340 223a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4341 223c D31A     		subs	r3, r2, r3
 4342 223e 5A1E     		subs	r2, r3, #1
 4343 2240 07F5AA53 		add	r3, r7, #5440
 4344 2244 03F10E03 		add	r3, r3, #14
 4345 2248 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4346 224a 07F13003 		add	r3, r7, #48
 4347 224e 163B     		subs	r3, r3, #22
 4348 2250 0B44     		add	r3, r3, r1
 4349 2252 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4350 2254 07F17003 		add	r3, r7, #112
 4351 2258 1C3B     		subs	r3, r3, #28
 4352 225a 9954     		strb	r1, [r3, r2]
 613:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4353              		.loc 1 613 0 discriminator 3
 4354 225c 07F5AA53 		add	r3, r7, #5440
 4355 2260 03F10E03 		add	r3, r3, #14
 4356 2264 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4357 2266 0133     		adds	r3, r3, #1
 4358 2268 07F5AA52 		add	r2, r7, #5440
 4359 226c 02F10E02 		add	r2, r2, #14
 4360 2270 1370     		strb	r3, [r2]
 4361              	.L179:
 613:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4362              		.loc 1 613 0 is_stmt 0 discriminator 1
 4363 2272 07F5AA53 		add	r3, r7, #5440
 4364 2276 03F10E03 		add	r3, r3, #14
 4365 227a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4366 227c 07F5AA53 		add	r3, r7, #5440
 4367 2280 03F10B03 		add	r3, r3, #11
 4368 2284 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4369 2286 9A42     		cmp	r2, r3
 4370 2288 B7D3     		bcc	.L180
 615:..\src/command_processing.c ****                         }
 616:..\src/command_processing.c ****                         break;
 4371              		.loc 1 616 0 is_stmt 1
 4372 228a E6E0     		b	.L103
 4373              	.L114:
 617:..\src/command_processing.c ****                 
 618:..\src/command_processing.c ****                     case 53:        // Second Motor Position limits
 619:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.m
 4374              		.loc 1 619 0
 4375 228c 07F5AA53 		add	r3, r7, #5440
 4376 2290 03F10603 		add	r3, r3, #6
 4377 2294 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4378 2296 6F49     		ldr	r1, .L272+4
 4379 2298 1346     		mov	r3, r2
 4380 229a DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 106


 4381 229c 9B1A     		subs	r3, r3, r2
 4382 229e 1B01     		lsls	r3, r3, #4
 4383 22a0 0B44     		add	r3, r3, r1
 4384 22a2 E433     		adds	r3, r3, #228
 4385 22a4 1968     		ldr	r1, [r3]
 4386 22a6 07F5AA53 		add	r3, r7, #5440
 4387 22aa 03F10603 		add	r3, r3, #6
 4388 22ae 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4389 22b0 6748     		ldr	r0, .L272
 4390 22b2 1346     		mov	r3, r2
 4391 22b4 DB00     		lsls	r3, r3, #3
 4392 22b6 9B1A     		subs	r3, r3, r2
 4393 22b8 1B01     		lsls	r3, r3, #4
 4394 22ba 0344     		add	r3, r3, r0
 4395 22bc 03F58873 		add	r3, r3, #272
 4396 22c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4397 22c2 1846     		mov	r0, r3
 4398 22c4 634A     		ldr	r2, .L272+4
 4399 22c6 0346     		mov	r3, r0
 4400 22c8 5B00     		lsls	r3, r3, #1
 4401 22ca 0344     		add	r3, r3, r0
 4402 22cc 1B01     		lsls	r3, r3, #4
 4403 22ce 1344     		add	r3, r3, r2
 4404 22d0 03F29513 		addw	r3, r3, #405
 4405 22d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4406 22d6 41FA03F2 		asr	r2, r1, r3
 4407 22da 07F13003 		add	r3, r7, #48
 4408 22de 1C3B     		subs	r3, r3, #28
 4409 22e0 1A60     		str	r2, [r3]
 620:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4410              		.loc 1 620 0
 4411 22e2 0023     		movs	r3, #0
 4412 22e4 07F5AA52 		add	r2, r7, #5440
 4413 22e8 02F10E02 		add	r2, r2, #14
 4414 22ec 1370     		strb	r3, [r2]
 4415 22ee 2EE0     		b	.L181
 4416              	.L182:
 621:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 4417              		.loc 1 621 0 discriminator 3
 4418 22f0 07F5AA53 		add	r3, r7, #5440
 4419 22f4 03F10D03 		add	r3, r3, #13
 4420 22f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4421 22fa 3222     		movs	r2, #50
 4422 22fc 02FB03F3 		mul	r3, r2, r3
 4423 2300 1A1D     		adds	r2, r3, #4
 4424 2302 07F5AA53 		add	r3, r7, #5440
 4425 2306 03F10B03 		add	r3, r3, #11
 4426 230a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4427 230c 1A44     		add	r2, r2, r3
 4428 230e 07F5AA53 		add	r3, r7, #5440
 4429 2312 03F10E03 		add	r3, r3, #14
 4430 2316 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4431 2318 D31A     		subs	r3, r2, r3
 4432 231a 5A1E     		subs	r2, r3, #1
 4433 231c 07F5AA53 		add	r3, r7, #5440
 4434 2320 03F10E03 		add	r3, r3, #14
 4435 2324 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 107


 4436 2326 07F13003 		add	r3, r7, #48
 4437 232a 1C3B     		subs	r3, r3, #28
 4438 232c 0B44     		add	r3, r3, r1
 4439 232e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4440 2330 07F17003 		add	r3, r7, #112
 4441 2334 1C3B     		subs	r3, r3, #28
 4442 2336 9954     		strb	r1, [r3, r2]
 620:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4443              		.loc 1 620 0 discriminator 3
 4444 2338 07F5AA53 		add	r3, r7, #5440
 4445 233c 03F10E03 		add	r3, r3, #14
 4446 2340 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4447 2342 0133     		adds	r3, r3, #1
 4448 2344 07F5AA52 		add	r2, r7, #5440
 4449 2348 02F10E02 		add	r2, r2, #14
 4450 234c 1370     		strb	r3, [r2]
 4451              	.L181:
 620:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4452              		.loc 1 620 0 is_stmt 0 discriminator 1
 4453 234e 07F5AA53 		add	r3, r7, #5440
 4454 2352 03F10E03 		add	r3, r3, #14
 4455 2356 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4456 2358 07F5AA53 		add	r3, r7, #5440
 4457 235c 03F10B03 		add	r3, r3, #11
 4458 2360 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4459 2362 9A42     		cmp	r2, r3
 4460 2364 C4D3     		bcc	.L182
 622:..\src/command_processing.c ****                         }
 623:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.m
 4461              		.loc 1 623 0 is_stmt 1
 4462 2366 07F5AA53 		add	r3, r7, #5440
 4463 236a 03F10603 		add	r3, r3, #6
 4464 236e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4465 2370 3849     		ldr	r1, .L272+4
 4466 2372 1346     		mov	r3, r2
 4467 2374 DB00     		lsls	r3, r3, #3
 4468 2376 9B1A     		subs	r3, r3, r2
 4469 2378 1B01     		lsls	r3, r3, #4
 4470 237a 0B44     		add	r3, r3, r1
 4471 237c E833     		adds	r3, r3, #232
 4472 237e 1968     		ldr	r1, [r3]
 4473 2380 07F5AA53 		add	r3, r7, #5440
 4474 2384 03F10603 		add	r3, r3, #6
 4475 2388 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4476 238a 3148     		ldr	r0, .L272
 4477 238c 1346     		mov	r3, r2
 4478 238e DB00     		lsls	r3, r3, #3
 4479 2390 9B1A     		subs	r3, r3, r2
 4480 2392 1B01     		lsls	r3, r3, #4
 4481 2394 0344     		add	r3, r3, r0
 4482 2396 03F58873 		add	r3, r3, #272
 4483 239a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4484 239c 1846     		mov	r0, r3
 4485 239e 2D4A     		ldr	r2, .L272+4
 4486 23a0 0346     		mov	r3, r0
 4487 23a2 5B00     		lsls	r3, r3, #1
 4488 23a4 0344     		add	r3, r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 108


 4489 23a6 1B01     		lsls	r3, r3, #4
 4490 23a8 1344     		add	r3, r3, r2
 4491 23aa 03F29513 		addw	r3, r3, #405
 4492 23ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4493 23b0 41FA03F2 		asr	r2, r1, r3
 4494 23b4 07F13003 		add	r3, r7, #48
 4495 23b8 1C3B     		subs	r3, r3, #28
 4496 23ba 1A60     		str	r2, [r3]
 624:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4497              		.loc 1 624 0
 4498 23bc 0023     		movs	r3, #0
 4499 23be 07F5AA52 		add	r2, r7, #5440
 4500 23c2 02F10E02 		add	r2, r2, #14
 4501 23c6 1370     		strb	r3, [r2]
 4502 23c8 34E0     		b	.L183
 4503              	.L184:
 625:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 4504              		.loc 1 625 0 discriminator 3
 4505 23ca 07F5AA53 		add	r3, r7, #5440
 4506 23ce 03F10D03 		add	r3, r3, #13
 4507 23d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4508 23d4 3222     		movs	r2, #50
 4509 23d6 02FB03F3 		mul	r3, r2, r3
 4510 23da 1A1D     		adds	r2, r3, #4
 4511 23dc 07F5AA53 		add	r3, r7, #5440
 4512 23e0 03F10B03 		add	r3, r3, #11
 4513 23e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4514 23e6 1A44     		add	r2, r2, r3
 4515 23e8 07F5AA53 		add	r3, r7, #5440
 4516 23ec 03F10B03 		add	r3, r3, #11
 4517 23f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4518 23f2 1A44     		add	r2, r2, r3
 4519 23f4 07F5AA53 		add	r3, r7, #5440
 4520 23f8 03F10E03 		add	r3, r3, #14
 4521 23fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4522 23fe D31A     		subs	r3, r2, r3
 4523 2400 5A1E     		subs	r2, r3, #1
 4524 2402 07F5AA53 		add	r3, r7, #5440
 4525 2406 03F10E03 		add	r3, r3, #14
 4526 240a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4527 240c 07F13003 		add	r3, r7, #48
 4528 2410 1C3B     		subs	r3, r3, #28
 4529 2412 0B44     		add	r3, r3, r1
 4530 2414 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4531 2416 07F17003 		add	r3, r7, #112
 4532 241a 1C3B     		subs	r3, r3, #28
 4533 241c 9954     		strb	r1, [r3, r2]
 624:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4534              		.loc 1 624 0 discriminator 3
 4535 241e 07F5AA53 		add	r3, r7, #5440
 4536 2422 03F10E03 		add	r3, r3, #14
 4537 2426 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4538 2428 0133     		adds	r3, r3, #1
 4539 242a 07F5AA52 		add	r2, r7, #5440
 4540 242e 02F10E02 		add	r2, r2, #14
 4541 2432 1370     		strb	r3, [r2]
 4542              	.L183:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 109


 624:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4543              		.loc 1 624 0 is_stmt 0 discriminator 1
 4544 2434 07F5AA53 		add	r3, r7, #5440
 4545 2438 03F10E03 		add	r3, r3, #14
 4546 243c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4547 243e 07F5AA53 		add	r3, r7, #5440
 4548 2442 03F10B03 		add	r3, r3, #11
 4549 2446 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4550 2448 9A42     		cmp	r2, r3
 4551 244a BED3     		bcc	.L184
 626:..\src/command_processing.c ****                         }
 627:..\src/command_processing.c ****                         break;
 4552              		.loc 1 627 0 is_stmt 1
 4553 244c 05E0     		b	.L103
 4554              	.L273:
 4555 244e 00BF     		.align	2
 4556              	.L272:
 4557 2450 00000000 		.word	g_mem
 4558 2454 00000000 		.word	c_mem
 4559              	.L254:
 628:..\src/command_processing.c ****                         
 629:..\src/command_processing.c ****                     default:
 630:..\src/command_processing.c ****                         break;
 4560              		.loc 1 630 0
 4561 2458 00BF     		nop
 4562              	.L103:
 631:..\src/command_processing.c ****                 }
 632:..\src/command_processing.c **** // END OF MODIFY CUSTOM PARAM  
 633:..\src/command_processing.c ****                         
 634:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
 635:..\src/command_processing.c ****         }
 636:..\src/command_processing.c ****         
 637:..\src/command_processing.c ****         sprintf(aux_str, (char*)PARAMS_STR[idx]);
 4563              		.loc 1 637 0
 4564 245a 07F5AA53 		add	r3, r7, #5440
 4565 245e 03F10D03 		add	r3, r3, #13
 4566 2462 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4567 2464 9B00     		lsls	r3, r3, #2
 4568 2466 07F5AB52 		add	r2, r7, #5472
 4569 246a 02F10C02 		add	r2, r2, #12
 4570 246e 1268     		ldr	r2, [r2]
 4571 2470 1344     		add	r3, r3, r2
 4572 2472 1A68     		ldr	r2, [r3]
 4573 2474 07F13003 		add	r3, r7, #48
 4574 2478 103B     		subs	r3, r3, #16
 4575 247a 1146     		mov	r1, r2
 4576 247c 1846     		mov	r0, r3
 4577 247e FFF7FEFF 		bl	sprintf
 638:..\src/command_processing.c ****         string_lenght = strlen(aux_str);
 4578              		.loc 1 638 0
 4579 2482 07F13003 		add	r3, r7, #48
 4580 2486 103B     		subs	r3, r3, #16
 4581 2488 1846     		mov	r0, r3
 4582 248a FFF7FEFF 		bl	strlen
 4583 248e 0346     		mov	r3, r0
 4584 2490 07F5AA52 		add	r2, r7, #5440
 4585 2494 02F10A02 		add	r2, r2, #10
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 110


 4586 2498 1370     		strb	r3, [r2]
 639:..\src/command_processing.c ****         
 640:..\src/command_processing.c ****         // Parameters with a menu
 641:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 4587              		.loc 1 641 0
 4588 249a 07F5AA53 		add	r3, r7, #5440
 4589 249e 03F10D03 		add	r3, r3, #13
 4590 24a2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4591 24a4 07F11003 		add	r3, r7, #16
 4592 24a8 083B     		subs	r3, r3, #8
 4593 24aa 1B68     		ldr	r3, [r3]
 4594 24ac 1344     		add	r3, r3, r2
 4595 24ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4596 24b0 002B     		cmp	r3, #0
 4597 24b2 40F08383 		bne	.L185
 642:..\src/command_processing.c ****             switch(NUM_MENU[idx_menu]){
 4598              		.loc 1 642 0
 4599 24b6 07F5AA53 		add	r3, r7, #5440
 4600 24ba 03F10C03 		add	r3, r3, #12
 4601 24be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4602 24c0 07F5AB52 		add	r2, r7, #5472
 4603 24c4 02F10802 		add	r2, r2, #8
 4604 24c8 1268     		ldr	r2, [r2]
 4605 24ca 1344     		add	r3, r3, r2
 4606 24cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4607 24ce 013B     		subs	r3, r3, #1
 4608 24d0 092B     		cmp	r3, #9
 4609 24d2 00F26583 		bhi	.L186
 4610 24d6 01A2     		adr	r2, .L188
 4611 24d8 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4612              		.p2align 2
 4613              	.L188:
 4614 24dc 05250000 		.word	.L187+1
 4615 24e0 7D260000 		.word	.L189+1
 4616 24e4 4D270000 		.word	.L190+1
 4617 24e8 9D270000 		.word	.L191+1
 4618 24ec FD270000 		.word	.L192+1
 4619 24f0 55280000 		.word	.L193+1
 4620 24f4 6D290000 		.word	.L194+1
 4621 24f8 F1290000 		.word	.L195+1
 4622 24fc 812A0000 		.word	.L196+1
 4623 2500 F52A0000 		.word	.L197+1
 4624              		.p2align 1
 4625              	.L187:
 643:..\src/command_processing.c ****                 case 1:     // input mode menu
 644:..\src/command_processing.c ****                     switch(*m_addr) {
 4626              		.loc 1 644 0
 4627 2504 07F5AA53 		add	r3, r7, #5440
 4628 2508 1B68     		ldr	r3, [r3]
 4629 250a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4630 250c 062B     		cmp	r3, #6
 4631 250e 00F24283 		bhi	.L255
 4632 2512 01A2     		adr	r2, .L200
 4633 2514 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4634              		.p2align 2
 4635              	.L200:
 4636 2518 35250000 		.word	.L199+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 111


 4637 251c 59250000 		.word	.L201+1
 4638 2520 7F250000 		.word	.L202+1
 4639 2524 AD250000 		.word	.L203+1
 4640 2528 D9250000 		.word	.L204+1
 4641 252c 03260000 		.word	.L205+1
 4642 2530 37260000 		.word	.L206+1
 4643              		.p2align 1
 4644              	.L199:
 645:..\src/command_processing.c ****                         case INPUT_MODE_EXTERNAL:
 646:..\src/command_processing.c ****                             strcat(aux_str, " Usb");
 4645              		.loc 1 646 0
 4646 2534 07F13003 		add	r3, r7, #48
 4647 2538 103B     		subs	r3, r3, #16
 4648 253a 1846     		mov	r0, r3
 4649 253c FFF7FEFF 		bl	strlen
 4650 2540 0346     		mov	r3, r0
 4651 2542 1A46     		mov	r2, r3
 4652 2544 07F13003 		add	r3, r7, #48
 4653 2548 103B     		subs	r3, r3, #16
 4654 254a 1344     		add	r3, r3, r2
 4655 254c D34A     		ldr	r2, .L274
 4656 254e 1068     		ldr	r0, [r2]	@ unaligned
 4657 2550 1860     		str	r0, [r3]	@ unaligned
 4658 2552 1279     		ldrb	r2, [r2, #4]
 4659 2554 1A71     		strb	r2, [r3, #4]
 647:..\src/command_processing.c ****                         break;
 4660              		.loc 1 647 0
 4661 2556 90E0     		b	.L198
 4662              	.L201:
 648:..\src/command_processing.c ****                         case INPUT_MODE_ENCODER3:
 649:..\src/command_processing.c ****                             strcat(aux_str, " Handle");
 4663              		.loc 1 649 0
 4664 2558 07F13003 		add	r3, r7, #48
 4665 255c 103B     		subs	r3, r3, #16
 4666 255e 1846     		mov	r0, r3
 4667 2560 FFF7FEFF 		bl	strlen
 4668 2564 0346     		mov	r3, r0
 4669 2566 1A46     		mov	r2, r3
 4670 2568 07F13003 		add	r3, r7, #48
 4671 256c 103B     		subs	r3, r3, #16
 4672 256e 1344     		add	r3, r3, r2
 4673 2570 CB49     		ldr	r1, .L274+4
 4674 2572 1A46     		mov	r2, r3
 4675 2574 0B46     		mov	r3, r1
 4676 2576 03CB     		ldmia	r3!, {r0, r1}
 4677 2578 1060     		str	r0, [r2]	@ unaligned
 4678 257a 5160     		str	r1, [r2, #4]	@ unaligned
 650:..\src/command_processing.c ****                         break;
 4679              		.loc 1 650 0
 4680 257c 7DE0     		b	.L198
 4681              	.L202:
 651:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL:
 652:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional");
 4682              		.loc 1 652 0
 4683 257e 07F13003 		add	r3, r7, #48
 4684 2582 103B     		subs	r3, r3, #16
 4685 2584 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 112


 4686 2586 FFF7FEFF 		bl	strlen
 4687 258a 0346     		mov	r3, r0
 4688 258c 1A46     		mov	r2, r3
 4689 258e 07F13003 		add	r3, r7, #48
 4690 2592 103B     		subs	r3, r3, #16
 4691 2594 1344     		add	r3, r3, r2
 4692 2596 C34A     		ldr	r2, .L274+8
 4693 2598 1D46     		mov	r5, r3
 4694 259a 1446     		mov	r4, r2
 4695 259c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4696 259e 2860     		str	r0, [r5]	@ unaligned
 4697 25a0 6960     		str	r1, [r5, #4]	@ unaligned
 4698 25a2 AA60     		str	r2, [r5, #8]	@ unaligned
 4699 25a4 EB60     		str	r3, [r5, #12]	@ unaligned
 4700 25a6 2388     		ldrh	r3, [r4]	@ unaligned
 4701 25a8 2B82     		strh	r3, [r5, #16]	@ unaligned
 653:..\src/command_processing.c ****                         break;
 4702              		.loc 1 653 0
 4703 25aa 66E0     		b	.L198
 4704              	.L203:
 654:..\src/command_processing.c ****                         case INPUT_MODE_EMG_INTEGRAL:
 655:..\src/command_processing.c ****                             strcat(aux_str, " EMG integral");
 4705              		.loc 1 655 0
 4706 25ac 07F13003 		add	r3, r7, #48
 4707 25b0 103B     		subs	r3, r3, #16
 4708 25b2 1846     		mov	r0, r3
 4709 25b4 FFF7FEFF 		bl	strlen
 4710 25b8 0346     		mov	r3, r0
 4711 25ba 1A46     		mov	r2, r3
 4712 25bc 07F13003 		add	r3, r7, #48
 4713 25c0 103B     		subs	r3, r3, #16
 4714 25c2 1344     		add	r3, r3, r2
 4715 25c4 B84A     		ldr	r2, .L274+12
 4716 25c6 1C46     		mov	r4, r3
 4717 25c8 1346     		mov	r3, r2
 4718 25ca 07CB     		ldmia	r3!, {r0, r1, r2}
 4719 25cc 2060     		str	r0, [r4]	@ unaligned
 4720 25ce 6160     		str	r1, [r4, #4]	@ unaligned
 4721 25d0 A260     		str	r2, [r4, #8]	@ unaligned
 4722 25d2 1B88     		ldrh	r3, [r3]	@ unaligned
 4723 25d4 A381     		strh	r3, [r4, #12]	@ unaligned
 656:..\src/command_processing.c ****                         break;
 4724              		.loc 1 656 0
 4725 25d6 50E0     		b	.L198
 4726              	.L204:
 657:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS:
 658:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS");
 4727              		.loc 1 658 0
 4728 25d8 07F13003 		add	r3, r7, #48
 4729 25dc 103B     		subs	r3, r3, #16
 4730 25de 1846     		mov	r0, r3
 4731 25e0 FFF7FEFF 		bl	strlen
 4732 25e4 0346     		mov	r3, r0
 4733 25e6 1A46     		mov	r2, r3
 4734 25e8 07F13003 		add	r3, r7, #48
 4735 25ec 103B     		subs	r3, r3, #16
 4736 25ee 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 113


 4737 25f0 AE49     		ldr	r1, .L274+16
 4738 25f2 1A46     		mov	r2, r3
 4739 25f4 0B46     		mov	r3, r1
 4740 25f6 03CB     		ldmia	r3!, {r0, r1}
 4741 25f8 1060     		str	r0, [r2]	@ unaligned
 4742 25fa 5160     		str	r1, [r2, #4]	@ unaligned
 4743 25fc 1B88     		ldrh	r3, [r3]	@ unaligned
 4744 25fe 1381     		strh	r3, [r2, #8]	@ unaligned
 659:..\src/command_processing.c ****                         break;
 4745              		.loc 1 659 0
 4746 2600 3BE0     		b	.L198
 4747              	.L205:
 660:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS_ADV:
 661:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS Advanced");
 4748              		.loc 1 661 0
 4749 2602 07F13003 		add	r3, r7, #48
 4750 2606 103B     		subs	r3, r3, #16
 4751 2608 1846     		mov	r0, r3
 4752 260a FFF7FEFF 		bl	strlen
 4753 260e 0346     		mov	r3, r0
 4754 2610 1A46     		mov	r2, r3
 4755 2612 07F13003 		add	r3, r7, #48
 4756 2616 103B     		subs	r3, r3, #16
 4757 2618 1344     		add	r3, r3, r2
 4758 261a A54A     		ldr	r2, .L274+20
 4759 261c 1D46     		mov	r5, r3
 4760 261e 1446     		mov	r4, r2
 4761 2620 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4762 2622 2860     		str	r0, [r5]	@ unaligned
 4763 2624 6960     		str	r1, [r5, #4]	@ unaligned
 4764 2626 AA60     		str	r2, [r5, #8]	@ unaligned
 4765 2628 EB60     		str	r3, [r5, #12]	@ unaligned
 4766 262a 2388     		ldrh	r3, [r4]	@ unaligned
 4767 262c A278     		ldrb	r2, [r4, #2]
 4768 262e 2B82     		strh	r3, [r5, #16]	@ unaligned
 4769 2630 1346     		mov	r3, r2
 4770 2632 AB74     		strb	r3, [r5, #18]
 662:..\src/command_processing.c ****                         break;
 4771              		.loc 1 662 0
 4772 2634 21E0     		b	.L198
 4773              	.L206:
 663:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL_NC:
 664:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional Normally Closed");
 4774              		.loc 1 664 0
 4775 2636 07F13003 		add	r3, r7, #48
 4776 263a 103B     		subs	r3, r3, #16
 4777 263c 1846     		mov	r0, r3
 4778 263e FFF7FEFF 		bl	strlen
 4779 2642 0346     		mov	r3, r0
 4780 2644 1A46     		mov	r2, r3
 4781 2646 07F13003 		add	r3, r7, #48
 4782 264a 103B     		subs	r3, r3, #16
 4783 264c 1344     		add	r3, r3, r2
 4784 264e 994A     		ldr	r2, .L274+24
 4785 2650 1446     		mov	r4, r2
 4786 2652 9E46     		mov	lr, r3
 4787 2654 04F1200C 		add	ip, r4, #32
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 114


 4788              	.L207:
 4789 2658 7546     		mov	r5, lr
 4790 265a 2646     		mov	r6, r4
 4791 265c 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 4792 265e 2860     		str	r0, [r5]	@ unaligned
 4793 2660 6960     		str	r1, [r5, #4]	@ unaligned
 4794 2662 AA60     		str	r2, [r5, #8]	@ unaligned
 4795 2664 EB60     		str	r3, [r5, #12]	@ unaligned
 4796 2666 1034     		adds	r4, r4, #16
 4797 2668 0EF1100E 		add	lr, lr, #16
 4798 266c 6445     		cmp	r4, ip
 4799 266e F3D1     		bne	.L207
 4800 2670 7246     		mov	r2, lr
 4801 2672 2346     		mov	r3, r4
 4802 2674 1B88     		ldrh	r3, [r3]	@ unaligned
 4803 2676 1380     		strh	r3, [r2]	@ unaligned
 665:..\src/command_processing.c ****                         break;
 4804              		.loc 1 665 0
 4805 2678 00BF     		nop
 4806              	.L198:
 666:..\src/command_processing.c ****                     }
 667:..\src/command_processing.c ****                     break;
 4807              		.loc 1 667 0
 4808 267a 8CE2     		b	.L255
 4809              	.L189:
 668:..\src/command_processing.c ****                 case 2:     // control mode menu
 669:..\src/command_processing.c ****                     switch(*m_addr){
 4810              		.loc 1 669 0
 4811 267c 07F5AA53 		add	r3, r7, #5440
 4812 2680 1B68     		ldr	r3, [r3]
 4813 2682 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4814 2684 032B     		cmp	r3, #3
 4815 2686 00F28882 		bhi	.L256
 4816 268a 01A2     		adr	r2, .L210
 4817 268c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4818              		.p2align 2
 4819              	.L210:
 4820 2690 A1260000 		.word	.L209+1
 4821 2694 CB260000 		.word	.L211+1
 4822 2698 EF260000 		.word	.L212+1
 4823 269c 19270000 		.word	.L213+1
 4824              		.p2align 1
 4825              	.L209:
 670:..\src/command_processing.c ****                         case CONTROL_ANGLE:
 671:..\src/command_processing.c ****                             strcat(aux_str, " Position");
 4826              		.loc 1 671 0
 4827 26a0 07F13003 		add	r3, r7, #48
 4828 26a4 103B     		subs	r3, r3, #16
 4829 26a6 1846     		mov	r0, r3
 4830 26a8 FFF7FEFF 		bl	strlen
 4831 26ac 0346     		mov	r3, r0
 4832 26ae 1A46     		mov	r2, r3
 4833 26b0 07F13003 		add	r3, r7, #48
 4834 26b4 103B     		subs	r3, r3, #16
 4835 26b6 1344     		add	r3, r3, r2
 4836 26b8 7F49     		ldr	r1, .L274+28
 4837 26ba 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 115


 4838 26bc 0B46     		mov	r3, r1
 4839 26be 03CB     		ldmia	r3!, {r0, r1}
 4840 26c0 1060     		str	r0, [r2]	@ unaligned
 4841 26c2 5160     		str	r1, [r2, #4]	@ unaligned
 4842 26c4 1B88     		ldrh	r3, [r3]	@ unaligned
 4843 26c6 1381     		strh	r3, [r2, #8]	@ unaligned
 672:..\src/command_processing.c ****                         break;
 4844              		.loc 1 672 0
 4845 26c8 3FE0     		b	.L208
 4846              	.L211:
 673:..\src/command_processing.c ****                         case CONTROL_PWM:
 674:..\src/command_processing.c ****                             strcat(aux_str, " PWM");
 4847              		.loc 1 674 0
 4848 26ca 07F13003 		add	r3, r7, #48
 4849 26ce 103B     		subs	r3, r3, #16
 4850 26d0 1846     		mov	r0, r3
 4851 26d2 FFF7FEFF 		bl	strlen
 4852 26d6 0346     		mov	r3, r0
 4853 26d8 1A46     		mov	r2, r3
 4854 26da 07F13003 		add	r3, r7, #48
 4855 26de 103B     		subs	r3, r3, #16
 4856 26e0 1344     		add	r3, r3, r2
 4857 26e2 764A     		ldr	r2, .L274+32
 4858 26e4 1068     		ldr	r0, [r2]	@ unaligned
 4859 26e6 1860     		str	r0, [r3]	@ unaligned
 4860 26e8 1279     		ldrb	r2, [r2, #4]
 4861 26ea 1A71     		strb	r2, [r3, #4]
 675:..\src/command_processing.c ****                         break;
 4862              		.loc 1 675 0
 4863 26ec 2DE0     		b	.L208
 4864              	.L212:
 676:..\src/command_processing.c ****                         case CONTROL_CURRENT:
 677:..\src/command_processing.c ****                             strcat(aux_str, " Current");
 4865              		.loc 1 677 0
 4866 26ee 07F13003 		add	r3, r7, #48
 4867 26f2 103B     		subs	r3, r3, #16
 4868 26f4 1846     		mov	r0, r3
 4869 26f6 FFF7FEFF 		bl	strlen
 4870 26fa 0346     		mov	r3, r0
 4871 26fc 1A46     		mov	r2, r3
 4872 26fe 07F13003 		add	r3, r7, #48
 4873 2702 103B     		subs	r3, r3, #16
 4874 2704 1344     		add	r3, r3, r2
 4875 2706 6E49     		ldr	r1, .L274+36
 4876 2708 1A46     		mov	r2, r3
 4877 270a 0B46     		mov	r3, r1
 4878 270c 03CB     		ldmia	r3!, {r0, r1}
 4879 270e 1060     		str	r0, [r2]	@ unaligned
 4880 2710 5160     		str	r1, [r2, #4]	@ unaligned
 4881 2712 1B78     		ldrb	r3, [r3]
 4882 2714 1372     		strb	r3, [r2, #8]
 678:..\src/command_processing.c ****                         break;
 4883              		.loc 1 678 0
 4884 2716 18E0     		b	.L208
 4885              	.L213:
 679:..\src/command_processing.c ****                         case CURR_AND_POS_CONTROL:
 680:..\src/command_processing.c ****                             strcat(aux_str, " Position and Current");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 116


 4886              		.loc 1 680 0
 4887 2718 07F13003 		add	r3, r7, #48
 4888 271c 103B     		subs	r3, r3, #16
 4889 271e 1846     		mov	r0, r3
 4890 2720 FFF7FEFF 		bl	strlen
 4891 2724 0346     		mov	r3, r0
 4892 2726 1A46     		mov	r2, r3
 4893 2728 07F13003 		add	r3, r7, #48
 4894 272c 103B     		subs	r3, r3, #16
 4895 272e 1344     		add	r3, r3, r2
 4896 2730 644A     		ldr	r2, .L274+40
 4897 2732 1D46     		mov	r5, r3
 4898 2734 1446     		mov	r4, r2
 4899 2736 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4900 2738 2860     		str	r0, [r5]	@ unaligned
 4901 273a 6960     		str	r1, [r5, #4]	@ unaligned
 4902 273c AA60     		str	r2, [r5, #8]	@ unaligned
 4903 273e EB60     		str	r3, [r5, #12]	@ unaligned
 4904 2740 2068     		ldr	r0, [r4]	@ unaligned
 4905 2742 2861     		str	r0, [r5, #16]	@ unaligned
 4906 2744 A388     		ldrh	r3, [r4, #4]	@ unaligned
 4907 2746 AB82     		strh	r3, [r5, #20]	@ unaligned
 681:..\src/command_processing.c ****                         break;
 4908              		.loc 1 681 0
 4909 2748 00BF     		nop
 4910              	.L208:
 682:..\src/command_processing.c ****                     }
 683:..\src/command_processing.c ****                     break;
 4911              		.loc 1 683 0
 4912 274a 26E2     		b	.L256
 4913              	.L190:
 684:..\src/command_processing.c ****                 case 3:     // yes/no menu
 685:..\src/command_processing.c ****                     if(*m_addr){
 4914              		.loc 1 685 0
 4915 274c 07F5AA53 		add	r3, r7, #5440
 4916 2750 1B68     		ldr	r3, [r3]
 4917 2752 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4918 2754 002B     		cmp	r3, #0
 4919 2756 11D0     		beq	.L214
 686:..\src/command_processing.c ****                         strcat(aux_str, " YES\0");
 4920              		.loc 1 686 0
 4921 2758 07F13003 		add	r3, r7, #48
 4922 275c 103B     		subs	r3, r3, #16
 4923 275e 1846     		mov	r0, r3
 4924 2760 FFF7FEFF 		bl	strlen
 4925 2764 0346     		mov	r3, r0
 4926 2766 1A46     		mov	r2, r3
 4927 2768 07F13003 		add	r3, r7, #48
 4928 276c 103B     		subs	r3, r3, #16
 4929 276e 1344     		add	r3, r3, r2
 4930 2770 554A     		ldr	r2, .L274+44
 4931 2772 1068     		ldr	r0, [r2]	@ unaligned
 4932 2774 1860     		str	r0, [r3]	@ unaligned
 4933 2776 1279     		ldrb	r2, [r2, #4]
 4934 2778 1A71     		strb	r2, [r3, #4]
 687:..\src/command_processing.c ****                     }
 688:..\src/command_processing.c ****                     else {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 117


 689:..\src/command_processing.c ****                         strcat(aux_str, " NO\0");
 690:..\src/command_processing.c ****                     }
 691:..\src/command_processing.c ****                     break;    
 4935              		.loc 1 691 0
 4936 277a 11E2     		b	.L186
 4937              	.L214:
 689:..\src/command_processing.c ****                     }
 4938              		.loc 1 689 0
 4939 277c 07F13003 		add	r3, r7, #48
 4940 2780 103B     		subs	r3, r3, #16
 4941 2782 1846     		mov	r0, r3
 4942 2784 FFF7FEFF 		bl	strlen
 4943 2788 0346     		mov	r3, r0
 4944 278a 1A46     		mov	r2, r3
 4945 278c 07F13003 		add	r3, r7, #48
 4946 2790 103B     		subs	r3, r3, #16
 4947 2792 1344     		add	r3, r3, r2
 4948 2794 4D4A     		ldr	r2, .L274+48
 4949 2796 1068     		ldr	r0, [r2]	@ unaligned
 4950 2798 1860     		str	r0, [r3]	@ unaligned
 4951              		.loc 1 691 0
 4952 279a 01E2     		b	.L186
 4953              	.L191:
 692:..\src/command_processing.c ****                 case 4:     // right/lef menu
 693:..\src/command_processing.c ****                     switch(*m_addr){
 4954              		.loc 1 693 0
 4955 279c 07F5AA53 		add	r3, r7, #5440
 4956 27a0 1B68     		ldr	r3, [r3]
 4957 27a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4958 27a4 002B     		cmp	r3, #0
 4959 27a6 02D0     		beq	.L217
 4960 27a8 012B     		cmp	r3, #1
 4961 27aa 14D0     		beq	.L218
 694:..\src/command_processing.c ****                         case RIGHT_HAND:
 695:..\src/command_processing.c ****                             strcat(aux_str, " Right\0");
 696:..\src/command_processing.c ****                         break;
 697:..\src/command_processing.c ****                         case LEFT_HAND:
 698:..\src/command_processing.c ****                             strcat(aux_str, " Left\0");
 699:..\src/command_processing.c ****                         break;
 700:..\src/command_processing.c ****                     }
 701:..\src/command_processing.c ****                     break;
 4962              		.loc 1 701 0
 4963 27ac F8E1     		b	.L186
 4964              	.L217:
 695:..\src/command_processing.c ****                         break;
 4965              		.loc 1 695 0
 4966 27ae 07F13003 		add	r3, r7, #48
 4967 27b2 103B     		subs	r3, r3, #16
 4968 27b4 1846     		mov	r0, r3
 4969 27b6 FFF7FEFF 		bl	strlen
 4970 27ba 0346     		mov	r3, r0
 4971 27bc 1A46     		mov	r2, r3
 4972 27be 07F13003 		add	r3, r7, #48
 4973 27c2 103B     		subs	r3, r3, #16
 4974 27c4 1344     		add	r3, r3, r2
 4975 27c6 424A     		ldr	r2, .L274+52
 4976 27c8 1068     		ldr	r0, [r2]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 118


 4977 27ca 1860     		str	r0, [r3]	@ unaligned
 4978 27cc 9188     		ldrh	r1, [r2, #4]	@ unaligned
 4979 27ce 9279     		ldrb	r2, [r2, #6]
 4980 27d0 9980     		strh	r1, [r3, #4]	@ unaligned
 4981 27d2 9A71     		strb	r2, [r3, #6]
 696:..\src/command_processing.c ****                         case LEFT_HAND:
 4982              		.loc 1 696 0
 4983 27d4 11E0     		b	.L216
 4984              	.L218:
 698:..\src/command_processing.c ****                         break;
 4985              		.loc 1 698 0
 4986 27d6 07F13003 		add	r3, r7, #48
 4987 27da 103B     		subs	r3, r3, #16
 4988 27dc 1846     		mov	r0, r3
 4989 27de FFF7FEFF 		bl	strlen
 4990 27e2 0346     		mov	r3, r0
 4991 27e4 1A46     		mov	r2, r3
 4992 27e6 07F13003 		add	r3, r7, #48
 4993 27ea 103B     		subs	r3, r3, #16
 4994 27ec 1344     		add	r3, r3, r2
 4995 27ee 394A     		ldr	r2, .L274+56
 4996 27f0 1068     		ldr	r0, [r2]	@ unaligned
 4997 27f2 1860     		str	r0, [r3]	@ unaligned
 4998 27f4 9288     		ldrh	r2, [r2, #4]	@ unaligned
 4999 27f6 9A80     		strh	r2, [r3, #4]	@ unaligned
 699:..\src/command_processing.c ****                     }
 5000              		.loc 1 699 0
 5001 27f8 00BF     		nop
 5002              	.L216:
 5003              		.loc 1 701 0
 5004 27fa D1E1     		b	.L186
 5005              	.L192:
 702:..\src/command_processing.c ****                 case 5:     // on/off menu
 703:..\src/command_processing.c ****                     switch(*m_addr){
 5006              		.loc 1 703 0
 5007 27fc 07F5AA53 		add	r3, r7, #5440
 5008 2800 1B68     		ldr	r3, [r3]
 5009 2802 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5010 2804 002B     		cmp	r3, #0
 5011 2806 02D0     		beq	.L220
 5012 2808 012B     		cmp	r3, #1
 5013 280a 12D0     		beq	.L221
 704:..\src/command_processing.c ****                         case 0:
 705:..\src/command_processing.c ****                             strcat(aux_str, " OFF\0");
 706:..\src/command_processing.c ****                         break;
 707:..\src/command_processing.c ****                         case 1:
 708:..\src/command_processing.c ****                             strcat(aux_str, " ON\0");
 709:..\src/command_processing.c ****                         break;
 710:..\src/command_processing.c ****                     }
 711:..\src/command_processing.c ****                     break;
 5014              		.loc 1 711 0
 5015 280c C8E1     		b	.L186
 5016              	.L220:
 705:..\src/command_processing.c ****                         break;
 5017              		.loc 1 705 0
 5018 280e 07F13003 		add	r3, r7, #48
 5019 2812 103B     		subs	r3, r3, #16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 119


 5020 2814 1846     		mov	r0, r3
 5021 2816 FFF7FEFF 		bl	strlen
 5022 281a 0346     		mov	r3, r0
 5023 281c 1A46     		mov	r2, r3
 5024 281e 07F13003 		add	r3, r7, #48
 5025 2822 103B     		subs	r3, r3, #16
 5026 2824 1344     		add	r3, r3, r2
 5027 2826 2C4A     		ldr	r2, .L274+60
 5028 2828 1068     		ldr	r0, [r2]	@ unaligned
 5029 282a 1860     		str	r0, [r3]	@ unaligned
 5030 282c 1279     		ldrb	r2, [r2, #4]
 5031 282e 1A71     		strb	r2, [r3, #4]
 706:..\src/command_processing.c ****                         case 1:
 5032              		.loc 1 706 0
 5033 2830 0FE0     		b	.L219
 5034              	.L221:
 708:..\src/command_processing.c ****                         break;
 5035              		.loc 1 708 0
 5036 2832 07F13003 		add	r3, r7, #48
 5037 2836 103B     		subs	r3, r3, #16
 5038 2838 1846     		mov	r0, r3
 5039 283a FFF7FEFF 		bl	strlen
 5040 283e 0346     		mov	r3, r0
 5041 2840 1A46     		mov	r2, r3
 5042 2842 07F13003 		add	r3, r7, #48
 5043 2846 103B     		subs	r3, r3, #16
 5044 2848 1344     		add	r3, r3, r2
 5045 284a 244A     		ldr	r2, .L274+64
 5046 284c 1068     		ldr	r0, [r2]	@ unaligned
 5047 284e 1860     		str	r0, [r3]	@ unaligned
 709:..\src/command_processing.c ****                     }
 5048              		.loc 1 709 0
 5049 2850 00BF     		nop
 5050              	.L219:
 5051              		.loc 1 711 0
 5052 2852 A5E1     		b	.L186
 5053              	.L193:
 712:..\src/command_processing.c ****                 case 6:     // expansion port menu
 713:..\src/command_processing.c ****                     switch(*m_addr){
 5054              		.loc 1 713 0
 5055 2854 07F5AA53 		add	r3, r7, #5440
 5056 2858 1B68     		ldr	r3, [r3]
 5057 285a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5058 285c 032B     		cmp	r3, #3
 5059 285e 00F29E81 		bhi	.L257
 5060 2862 01A2     		adr	r2, .L224
 5061 2864 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5062              		.p2align 2
 5063              	.L224:
 5064 2868 79280000 		.word	.L223+1
 5065 286c E5280000 		.word	.L225+1
 5066 2870 11290000 		.word	.L226+1
 5067 2874 3F290000 		.word	.L227+1
 5068              		.p2align 1
 5069              	.L223:
 714:..\src/command_processing.c ****                         case EXP_NONE:
 715:..\src/command_processing.c ****                             strcat(aux_str, " None\0");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 120


 5070              		.loc 1 715 0
 5071 2878 07F13003 		add	r3, r7, #48
 5072 287c 103B     		subs	r3, r3, #16
 5073 287e 1846     		mov	r0, r3
 5074 2880 FFF7FEFF 		bl	strlen
 5075 2884 0346     		mov	r3, r0
 5076 2886 1A46     		mov	r2, r3
 5077 2888 07F13003 		add	r3, r7, #48
 5078 288c 103B     		subs	r3, r3, #16
 5079 288e 1344     		add	r3, r3, r2
 5080 2890 134A     		ldr	r2, .L274+68
 5081 2892 1068     		ldr	r0, [r2]	@ unaligned
 5082 2894 1860     		str	r0, [r3]	@ unaligned
 5083 2896 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5084 2898 9A80     		strh	r2, [r3, #4]	@ unaligned
 716:..\src/command_processing.c ****                             break;
 5085              		.loc 1 716 0
 5086 289a 66E0     		b	.L222
 5087              	.L275:
 5088              		.align	2
 5089              	.L274:
 5090 289c 00000000 		.word	.LC81
 5091 28a0 08000000 		.word	.LC82
 5092 28a4 10000000 		.word	.LC83
 5093 28a8 24000000 		.word	.LC84
 5094 28ac 34000000 		.word	.LC85
 5095 28b0 40000000 		.word	.LC86
 5096 28b4 54000000 		.word	.LC87
 5097 28b8 78000000 		.word	.LC88
 5098 28bc 84000000 		.word	.LC89
 5099 28c0 8C000000 		.word	.LC90
 5100 28c4 98000000 		.word	.LC91
 5101 28c8 B0000000 		.word	.LC92
 5102 28cc B8000000 		.word	.LC93
 5103 28d0 C0000000 		.word	.LC94
 5104 28d4 C8000000 		.word	.LC95
 5105 28d8 D0000000 		.word	.LC96
 5106 28dc D8000000 		.word	.LC97
 5107 28e0 E0000000 		.word	.LC98
 5108              	.L225:
 717:..\src/command_processing.c ****                         case EXP_SD_RTC:
 718:..\src/command_processing.c ****                             strcat(aux_str, " SD/RTC board\0");
 5109              		.loc 1 718 0
 5110 28e4 07F13003 		add	r3, r7, #48
 5111 28e8 103B     		subs	r3, r3, #16
 5112 28ea 1846     		mov	r0, r3
 5113 28ec FFF7FEFF 		bl	strlen
 5114 28f0 0346     		mov	r3, r0
 5115 28f2 1A46     		mov	r2, r3
 5116 28f4 07F13003 		add	r3, r7, #48
 5117 28f8 103B     		subs	r3, r3, #16
 5118 28fa 1344     		add	r3, r3, r2
 5119 28fc B54A     		ldr	r2, .L276
 5120 28fe 1C46     		mov	r4, r3
 5121 2900 1346     		mov	r3, r2
 5122 2902 07CB     		ldmia	r3!, {r0, r1, r2}
 5123 2904 2060     		str	r0, [r4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 121


 5124 2906 6160     		str	r1, [r4, #4]	@ unaligned
 5125 2908 A260     		str	r2, [r4, #8]	@ unaligned
 5126 290a 1B88     		ldrh	r3, [r3]	@ unaligned
 5127 290c A381     		strh	r3, [r4, #12]	@ unaligned
 719:..\src/command_processing.c ****                             break;
 5128              		.loc 1 719 0
 5129 290e 2CE0     		b	.L222
 5130              	.L226:
 720:..\src/command_processing.c ****                         case EXP_WIFI:
 721:..\src/command_processing.c ****         					strcat(aux_str, " WiFi board [N/A]\0");
 5131              		.loc 1 721 0
 5132 2910 07F13003 		add	r3, r7, #48
 5133 2914 103B     		subs	r3, r3, #16
 5134 2916 1846     		mov	r0, r3
 5135 2918 FFF7FEFF 		bl	strlen
 5136 291c 0346     		mov	r3, r0
 5137 291e 1A46     		mov	r2, r3
 5138 2920 07F13003 		add	r3, r7, #48
 5139 2924 103B     		subs	r3, r3, #16
 5140 2926 1344     		add	r3, r3, r2
 5141 2928 AB4A     		ldr	r2, .L276+4
 5142 292a 1D46     		mov	r5, r3
 5143 292c 1446     		mov	r4, r2
 5144 292e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5145 2930 2860     		str	r0, [r5]	@ unaligned
 5146 2932 6960     		str	r1, [r5, #4]	@ unaligned
 5147 2934 AA60     		str	r2, [r5, #8]	@ unaligned
 5148 2936 EB60     		str	r3, [r5, #12]	@ unaligned
 5149 2938 2388     		ldrh	r3, [r4]	@ unaligned
 5150 293a 2B82     		strh	r3, [r5, #16]	@ unaligned
 722:..\src/command_processing.c ****         					break;
 5151              		.loc 1 722 0
 5152 293c 15E0     		b	.L222
 5153              	.L227:
 723:..\src/command_processing.c ****                         case EXP_OTHER:
 724:..\src/command_processing.c ****         					strcat(aux_str, " Other [N/A]\0");
 5154              		.loc 1 724 0
 5155 293e 07F13003 		add	r3, r7, #48
 5156 2942 103B     		subs	r3, r3, #16
 5157 2944 1846     		mov	r0, r3
 5158 2946 FFF7FEFF 		bl	strlen
 5159 294a 0346     		mov	r3, r0
 5160 294c 1A46     		mov	r2, r3
 5161 294e 07F13003 		add	r3, r7, #48
 5162 2952 103B     		subs	r3, r3, #16
 5163 2954 1344     		add	r3, r3, r2
 5164 2956 A14A     		ldr	r2, .L276+8
 5165 2958 1C46     		mov	r4, r3
 5166 295a 1346     		mov	r3, r2
 5167 295c 07CB     		ldmia	r3!, {r0, r1, r2}
 5168 295e 2060     		str	r0, [r4]	@ unaligned
 5169 2960 6160     		str	r1, [r4, #4]	@ unaligned
 5170 2962 A260     		str	r2, [r4, #8]	@ unaligned
 5171 2964 1B78     		ldrb	r3, [r3]
 5172 2966 2373     		strb	r3, [r4, #12]
 725:..\src/command_processing.c ****         					break;
 5173              		.loc 1 725 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 122


 5174 2968 00BF     		nop
 5175              	.L222:
 726:..\src/command_processing.c ****                     }
 727:..\src/command_processing.c ****                     break;
 5176              		.loc 1 727 0
 5177 296a 18E1     		b	.L257
 5178              	.L194:
 728:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 729:..\src/command_processing.c ****                     switch(*m_addr){
 5179              		.loc 1 729 0
 5180 296c 07F5AA53 		add	r3, r7, #5440
 5181 2970 1B68     		ldr	r3, [r3]
 5182 2972 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5183 2974 012B     		cmp	r3, #1
 5184 2976 16D0     		beq	.L229
 5185 2978 022B     		cmp	r3, #2
 5186 297a 26D0     		beq	.L230
 5187 297c 002B     		cmp	r3, #0
 5188 297e 00D0     		beq	.L231
 730:..\src/command_processing.c ****                         case 0: 
 731:..\src/command_processing.c ****                             strcat(aux_str, " None\0"); 
 732:..\src/command_processing.c ****                             break;
 733:..\src/command_processing.c ****                         case 1: 
 734:..\src/command_processing.c ****                             strcat(aux_str, " Low\0"); 
 735:..\src/command_processing.c ****                             break;
 736:..\src/command_processing.c ****                         case 2: 
 737:..\src/command_processing.c ****                             strcat(aux_str, " High\0");
 738:..\src/command_processing.c ****                             break;
 739:..\src/command_processing.c ****                         default:
 740:..\src/command_processing.c ****                             break;
 5189              		.loc 1 740 0
 5190 2980 35E0     		b	.L232
 5191              	.L231:
 731:..\src/command_processing.c ****                             break;
 5192              		.loc 1 731 0
 5193 2982 07F13003 		add	r3, r7, #48
 5194 2986 103B     		subs	r3, r3, #16
 5195 2988 1846     		mov	r0, r3
 5196 298a FFF7FEFF 		bl	strlen
 5197 298e 0346     		mov	r3, r0
 5198 2990 1A46     		mov	r2, r3
 5199 2992 07F13003 		add	r3, r7, #48
 5200 2996 103B     		subs	r3, r3, #16
 5201 2998 1344     		add	r3, r3, r2
 5202 299a 914A     		ldr	r2, .L276+12
 5203 299c 1068     		ldr	r0, [r2]	@ unaligned
 5204 299e 1860     		str	r0, [r3]	@ unaligned
 5205 29a0 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5206 29a2 9A80     		strh	r2, [r3, #4]	@ unaligned
 732:..\src/command_processing.c ****                         case 1: 
 5207              		.loc 1 732 0
 5208 29a4 23E0     		b	.L232
 5209              	.L229:
 734:..\src/command_processing.c ****                             break;
 5210              		.loc 1 734 0
 5211 29a6 07F13003 		add	r3, r7, #48
 5212 29aa 103B     		subs	r3, r3, #16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 123


 5213 29ac 1846     		mov	r0, r3
 5214 29ae FFF7FEFF 		bl	strlen
 5215 29b2 0346     		mov	r3, r0
 5216 29b4 1A46     		mov	r2, r3
 5217 29b6 07F13003 		add	r3, r7, #48
 5218 29ba 103B     		subs	r3, r3, #16
 5219 29bc 1344     		add	r3, r3, r2
 5220 29be 894A     		ldr	r2, .L276+16
 5221 29c0 1068     		ldr	r0, [r2]	@ unaligned
 5222 29c2 1860     		str	r0, [r3]	@ unaligned
 5223 29c4 1279     		ldrb	r2, [r2, #4]
 5224 29c6 1A71     		strb	r2, [r3, #4]
 735:..\src/command_processing.c ****                         case 2: 
 5225              		.loc 1 735 0
 5226 29c8 11E0     		b	.L232
 5227              	.L230:
 737:..\src/command_processing.c ****                             break;
 5228              		.loc 1 737 0
 5229 29ca 07F13003 		add	r3, r7, #48
 5230 29ce 103B     		subs	r3, r3, #16
 5231 29d0 1846     		mov	r0, r3
 5232 29d2 FFF7FEFF 		bl	strlen
 5233 29d6 0346     		mov	r3, r0
 5234 29d8 1A46     		mov	r2, r3
 5235 29da 07F13003 		add	r3, r7, #48
 5236 29de 103B     		subs	r3, r3, #16
 5237 29e0 1344     		add	r3, r3, r2
 5238 29e2 814A     		ldr	r2, .L276+20
 5239 29e4 1068     		ldr	r0, [r2]	@ unaligned
 5240 29e6 1860     		str	r0, [r3]	@ unaligned
 5241 29e8 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5242 29ea 9A80     		strh	r2, [r3, #4]	@ unaligned
 738:..\src/command_processing.c ****                         default:
 5243              		.loc 1 738 0
 5244 29ec 00BF     		nop
 5245              	.L232:
 741:..\src/command_processing.c ****                     } 
 742:..\src/command_processing.c ****                     break;
 5246              		.loc 1 742 0 discriminator 12
 5247 29ee D7E0     		b	.L186
 5248              	.L195:
 743:..\src/command_processing.c ****                 case 8:     // user menu          
 744:..\src/command_processing.c ****                     switch(*m_addr){
 5249              		.loc 1 744 0
 5250 29f0 07F5AA53 		add	r3, r7, #5440
 5251 29f4 1B68     		ldr	r3, [r3]
 5252 29f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5253 29f8 012B     		cmp	r3, #1
 5254 29fa 1AD0     		beq	.L234
 5255 29fc 022B     		cmp	r3, #2
 5256 29fe 2CD0     		beq	.L235
 5257 2a00 002B     		cmp	r3, #0
 5258 2a02 00D0     		beq	.L236
 745:..\src/command_processing.c ****                         case GENERIC_USER:
 746:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC USER\0");
 747:..\src/command_processing.c ****                         break;
 748:..\src/command_processing.c ****                         case MARIA:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 124


 749:..\src/command_processing.c ****                             strcat(aux_str, " MARIA\0");
 750:..\src/command_processing.c ****                         break;
 751:..\src/command_processing.c ****                         case ROZA:
 752:..\src/command_processing.c ****                             strcat(aux_str, " ROZA\0");
 753:..\src/command_processing.c ****                         break;
 754:..\src/command_processing.c ****                     }   
 755:..\src/command_processing.c ****                     break;                    
 5259              		.loc 1 755 0
 5260 2a04 CCE0     		b	.L186
 5261              	.L236:
 746:..\src/command_processing.c ****                         break;
 5262              		.loc 1 746 0
 5263 2a06 07F13003 		add	r3, r7, #48
 5264 2a0a 103B     		subs	r3, r3, #16
 5265 2a0c 1846     		mov	r0, r3
 5266 2a0e FFF7FEFF 		bl	strlen
 5267 2a12 0346     		mov	r3, r0
 5268 2a14 1A46     		mov	r2, r3
 5269 2a16 07F13003 		add	r3, r7, #48
 5270 2a1a 103B     		subs	r3, r3, #16
 5271 2a1c 1344     		add	r3, r3, r2
 5272 2a1e 734A     		ldr	r2, .L276+24
 5273 2a20 1C46     		mov	r4, r3
 5274 2a22 1346     		mov	r3, r2
 5275 2a24 07CB     		ldmia	r3!, {r0, r1, r2}
 5276 2a26 2060     		str	r0, [r4]	@ unaligned
 5277 2a28 6160     		str	r1, [r4, #4]	@ unaligned
 5278 2a2a A260     		str	r2, [r4, #8]	@ unaligned
 5279 2a2c 1B88     		ldrh	r3, [r3]	@ unaligned
 5280 2a2e A381     		strh	r3, [r4, #12]	@ unaligned
 747:..\src/command_processing.c ****                         case MARIA:
 5281              		.loc 1 747 0
 5282 2a30 25E0     		b	.L233
 5283              	.L234:
 749:..\src/command_processing.c ****                         break;
 5284              		.loc 1 749 0
 5285 2a32 07F13003 		add	r3, r7, #48
 5286 2a36 103B     		subs	r3, r3, #16
 5287 2a38 1846     		mov	r0, r3
 5288 2a3a FFF7FEFF 		bl	strlen
 5289 2a3e 0346     		mov	r3, r0
 5290 2a40 1A46     		mov	r2, r3
 5291 2a42 07F13003 		add	r3, r7, #48
 5292 2a46 103B     		subs	r3, r3, #16
 5293 2a48 1344     		add	r3, r3, r2
 5294 2a4a 694A     		ldr	r2, .L276+28
 5295 2a4c 1068     		ldr	r0, [r2]	@ unaligned
 5296 2a4e 1860     		str	r0, [r3]	@ unaligned
 5297 2a50 9188     		ldrh	r1, [r2, #4]	@ unaligned
 5298 2a52 9279     		ldrb	r2, [r2, #6]
 5299 2a54 9980     		strh	r1, [r3, #4]	@ unaligned
 5300 2a56 9A71     		strb	r2, [r3, #6]
 750:..\src/command_processing.c ****                         case ROZA:
 5301              		.loc 1 750 0
 5302 2a58 11E0     		b	.L233
 5303              	.L235:
 752:..\src/command_processing.c ****                         break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 125


 5304              		.loc 1 752 0
 5305 2a5a 07F13003 		add	r3, r7, #48
 5306 2a5e 103B     		subs	r3, r3, #16
 5307 2a60 1846     		mov	r0, r3
 5308 2a62 FFF7FEFF 		bl	strlen
 5309 2a66 0346     		mov	r3, r0
 5310 2a68 1A46     		mov	r2, r3
 5311 2a6a 07F13003 		add	r3, r7, #48
 5312 2a6e 103B     		subs	r3, r3, #16
 5313 2a70 1344     		add	r3, r3, r2
 5314 2a72 604A     		ldr	r2, .L276+32
 5315 2a74 1068     		ldr	r0, [r2]	@ unaligned
 5316 2a76 1860     		str	r0, [r3]	@ unaligned
 5317 2a78 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5318 2a7a 9A80     		strh	r2, [r3, #4]	@ unaligned
 753:..\src/command_processing.c ****                     }   
 5319              		.loc 1 753 0
 5320 2a7c 00BF     		nop
 5321              	.L233:
 5322              		.loc 1 755 0
 5323 2a7e 8FE0     		b	.L186
 5324              	.L196:
 756:..\src/command_processing.c ****                 case 9:     // driver type menu
 757:..\src/command_processing.c ****                     switch(*m_addr){
 5325              		.loc 1 757 0
 5326 2a80 07F5AA53 		add	r3, r7, #5440
 5327 2a84 1B68     		ldr	r3, [r3]
 5328 2a86 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5329 2a88 002B     		cmp	r3, #0
 5330 2a8a 02D0     		beq	.L238
 5331 2a8c 012B     		cmp	r3, #1
 5332 2a8e 17D0     		beq	.L239
 758:..\src/command_processing.c ****                         case 0:
 759:..\src/command_processing.c ****                             strcat(aux_str, " MC33887 (Standard)\0");
 760:..\src/command_processing.c ****                         break;
 761:..\src/command_processing.c ****                         case 1:
 762:..\src/command_processing.c ****                             strcat(aux_str, " VNH5019 (High power)\0");
 763:..\src/command_processing.c ****                         break;
 764:..\src/command_processing.c ****                     }
 765:..\src/command_processing.c ****                     break;
 5333              		.loc 1 765 0
 5334 2a90 86E0     		b	.L186
 5335              	.L238:
 759:..\src/command_processing.c ****                         break;
 5336              		.loc 1 759 0
 5337 2a92 07F13003 		add	r3, r7, #48
 5338 2a96 103B     		subs	r3, r3, #16
 5339 2a98 1846     		mov	r0, r3
 5340 2a9a FFF7FEFF 		bl	strlen
 5341 2a9e 0346     		mov	r3, r0
 5342 2aa0 1A46     		mov	r2, r3
 5343 2aa2 07F13003 		add	r3, r7, #48
 5344 2aa6 103B     		subs	r3, r3, #16
 5345 2aa8 1344     		add	r3, r3, r2
 5346 2aaa 534A     		ldr	r2, .L276+36
 5347 2aac 1D46     		mov	r5, r3
 5348 2aae 1446     		mov	r4, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 126


 5349 2ab0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5350 2ab2 2860     		str	r0, [r5]	@ unaligned
 5351 2ab4 6960     		str	r1, [r5, #4]	@ unaligned
 5352 2ab6 AA60     		str	r2, [r5, #8]	@ unaligned
 5353 2ab8 EB60     		str	r3, [r5, #12]	@ unaligned
 5354 2aba 2068     		ldr	r0, [r4]	@ unaligned
 5355 2abc 2861     		str	r0, [r5, #16]	@ unaligned
 760:..\src/command_processing.c ****                         case 1:
 5356              		.loc 1 760 0
 5357 2abe 18E0     		b	.L237
 5358              	.L239:
 762:..\src/command_processing.c ****                         break;
 5359              		.loc 1 762 0
 5360 2ac0 07F13003 		add	r3, r7, #48
 5361 2ac4 103B     		subs	r3, r3, #16
 5362 2ac6 1846     		mov	r0, r3
 5363 2ac8 FFF7FEFF 		bl	strlen
 5364 2acc 0346     		mov	r3, r0
 5365 2ace 1A46     		mov	r2, r3
 5366 2ad0 07F13003 		add	r3, r7, #48
 5367 2ad4 103B     		subs	r3, r3, #16
 5368 2ad6 1344     		add	r3, r3, r2
 5369 2ad8 484A     		ldr	r2, .L276+40
 5370 2ada 1D46     		mov	r5, r3
 5371 2adc 1446     		mov	r4, r2
 5372 2ade 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5373 2ae0 2860     		str	r0, [r5]	@ unaligned
 5374 2ae2 6960     		str	r1, [r5, #4]	@ unaligned
 5375 2ae4 AA60     		str	r2, [r5, #8]	@ unaligned
 5376 2ae6 EB60     		str	r3, [r5, #12]	@ unaligned
 5377 2ae8 2068     		ldr	r0, [r4]	@ unaligned
 5378 2aea 2861     		str	r0, [r5, #16]	@ unaligned
 5379 2aec A388     		ldrh	r3, [r4, #4]	@ unaligned
 5380 2aee AB82     		strh	r3, [r5, #20]	@ unaligned
 763:..\src/command_processing.c ****                     }
 5381              		.loc 1 763 0
 5382 2af0 00BF     		nop
 5383              	.L237:
 5384              		.loc 1 765 0
 5385 2af2 55E0     		b	.L186
 5386              	.L197:
 766:..\src/command_processing.c ****                 case 10:    // device type menu
 767:..\src/command_processing.c ****                     switch(*m_addr){
 5387              		.loc 1 767 0
 5388 2af4 07F5AA53 		add	r3, r7, #5440
 5389 2af8 1B68     		ldr	r3, [r3]
 5390 2afa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5391 2afc 012B     		cmp	r3, #1
 5392 2afe 1AD0     		beq	.L241
 5393 2b00 022B     		cmp	r3, #2
 5394 2b02 2FD0     		beq	.L242
 5395 2b04 002B     		cmp	r3, #0
 5396 2b06 00D0     		beq	.L243
 768:..\src/command_processing.c ****                         case 0:
 769:..\src/command_processing.c ****                             strcat(aux_str, " SOFTHAND PRO\0");
 770:..\src/command_processing.c ****                         break;
 771:..\src/command_processing.c ****                         case 1:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 127


 772:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC 2 MOTORS\0");
 773:..\src/command_processing.c ****                         break;
 774:..\src/command_processing.c ****                         case 2:
 775:..\src/command_processing.c ****                             strcat(aux_str, " AIR CHAMBERS \0");
 776:..\src/command_processing.c ****                     }
 777:..\src/command_processing.c ****                     break;
 5397              		.loc 1 777 0
 5398 2b08 4AE0     		b	.L186
 5399              	.L243:
 769:..\src/command_processing.c ****                         break;
 5400              		.loc 1 769 0
 5401 2b0a 07F13003 		add	r3, r7, #48
 5402 2b0e 103B     		subs	r3, r3, #16
 5403 2b10 1846     		mov	r0, r3
 5404 2b12 FFF7FEFF 		bl	strlen
 5405 2b16 0346     		mov	r3, r0
 5406 2b18 1A46     		mov	r2, r3
 5407 2b1a 07F13003 		add	r3, r7, #48
 5408 2b1e 103B     		subs	r3, r3, #16
 5409 2b20 1344     		add	r3, r3, r2
 5410 2b22 374A     		ldr	r2, .L276+44
 5411 2b24 1C46     		mov	r4, r3
 5412 2b26 1346     		mov	r3, r2
 5413 2b28 07CB     		ldmia	r3!, {r0, r1, r2}
 5414 2b2a 2060     		str	r0, [r4]	@ unaligned
 5415 2b2c 6160     		str	r1, [r4, #4]	@ unaligned
 5416 2b2e A260     		str	r2, [r4, #8]	@ unaligned
 5417 2b30 1B88     		ldrh	r3, [r3]	@ unaligned
 5418 2b32 A381     		strh	r3, [r4, #12]	@ unaligned
 770:..\src/command_processing.c ****                         case 1:
 5419              		.loc 1 770 0
 5420 2b34 2EE0     		b	.L240
 5421              	.L241:
 772:..\src/command_processing.c ****                         break;
 5422              		.loc 1 772 0
 5423 2b36 07F13003 		add	r3, r7, #48
 5424 2b3a 103B     		subs	r3, r3, #16
 5425 2b3c 1846     		mov	r0, r3
 5426 2b3e FFF7FEFF 		bl	strlen
 5427 2b42 0346     		mov	r3, r0
 5428 2b44 1A46     		mov	r2, r3
 5429 2b46 07F13003 		add	r3, r7, #48
 5430 2b4a 103B     		subs	r3, r3, #16
 5431 2b4c 1344     		add	r3, r3, r2
 5432 2b4e 2D4A     		ldr	r2, .L276+48
 5433 2b50 1D46     		mov	r5, r3
 5434 2b52 1446     		mov	r4, r2
 5435 2b54 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5436 2b56 2860     		str	r0, [r5]	@ unaligned
 5437 2b58 6960     		str	r1, [r5, #4]	@ unaligned
 5438 2b5a AA60     		str	r2, [r5, #8]	@ unaligned
 5439 2b5c EB60     		str	r3, [r5, #12]	@ unaligned
 5440 2b5e 2388     		ldrh	r3, [r4]	@ unaligned
 5441 2b60 2B82     		strh	r3, [r5, #16]	@ unaligned
 773:..\src/command_processing.c ****                         case 2:
 5442              		.loc 1 773 0
 5443 2b62 17E0     		b	.L240
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 128


 5444              	.L242:
 775:..\src/command_processing.c ****                     }
 5445              		.loc 1 775 0
 5446 2b64 07F13003 		add	r3, r7, #48
 5447 2b68 103B     		subs	r3, r3, #16
 5448 2b6a 1846     		mov	r0, r3
 5449 2b6c FFF7FEFF 		bl	strlen
 5450 2b70 0346     		mov	r3, r0
 5451 2b72 1A46     		mov	r2, r3
 5452 2b74 07F13003 		add	r3, r7, #48
 5453 2b78 103B     		subs	r3, r3, #16
 5454 2b7a 1344     		add	r3, r3, r2
 5455 2b7c 224A     		ldr	r2, .L276+52
 5456 2b7e 1C46     		mov	r4, r3
 5457 2b80 1346     		mov	r3, r2
 5458 2b82 07CB     		ldmia	r3!, {r0, r1, r2}
 5459 2b84 2060     		str	r0, [r4]	@ unaligned
 5460 2b86 6160     		str	r1, [r4, #4]	@ unaligned
 5461 2b88 A260     		str	r2, [r4, #8]	@ unaligned
 5462 2b8a 1A88     		ldrh	r2, [r3]	@ unaligned
 5463 2b8c 9B78     		ldrb	r3, [r3, #2]
 5464 2b8e A281     		strh	r2, [r4, #12]	@ unaligned
 5465 2b90 A373     		strb	r3, [r4, #14]
 5466              		.loc 1 777 0
 5467 2b92 05E0     		b	.L186
 5468              	.L240:
 5469 2b94 04E0     		b	.L186
 5470              	.L255:
 667:..\src/command_processing.c ****                 case 2:     // control mode menu
 5471              		.loc 1 667 0
 5472 2b96 00BF     		nop
 5473 2b98 02E0     		b	.L186
 5474              	.L256:
 683:..\src/command_processing.c ****                 case 3:     // yes/no menu
 5475              		.loc 1 683 0
 5476 2b9a 00BF     		nop
 5477 2b9c 00E0     		b	.L186
 5478              	.L257:
 727:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 5479              		.loc 1 727 0
 5480 2b9e 00BF     		nop
 5481              	.L186:
 778:..\src/command_processing.c ****             }
 779:..\src/command_processing.c ****             //Recomputes string lenght
 780:..\src/command_processing.c ****             string_lenght = strlen(aux_str)+1;
 5482              		.loc 1 780 0
 5483 2ba0 07F13003 		add	r3, r7, #48
 5484 2ba4 103B     		subs	r3, r3, #16
 5485 2ba6 1846     		mov	r0, r3
 5486 2ba8 FFF7FEFF 		bl	strlen
 5487 2bac 0346     		mov	r3, r0
 5488 2bae DBB2     		uxtb	r3, r3
 5489 2bb0 0133     		adds	r3, r3, #1
 5490 2bb2 07F5AA52 		add	r2, r7, #5440
 5491 2bb6 02F10A02 		add	r2, r2, #10
 5492 2bba 1370     		strb	r3, [r2]
 5493              	.L185:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 129


 781:..\src/command_processing.c ****         }
 782:..\src/command_processing.c **** 
 783:..\src/command_processing.c ****         // Add parameter string to packet
 784:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 5494              		.loc 1 784 0
 5495 2bbc 07F5AA53 		add	r3, r7, #5440
 5496 2bc0 03F10A03 		add	r3, r3, #10
 5497 2bc4 1B78     		ldrb	r3, [r3]
 5498 2bc6 07F5AA52 		add	r2, r7, #5440
 5499 2bca 02F10F02 		add	r2, r2, #15
 5500 2bce 1370     		strb	r3, [r2]
 5501 2bd0 62E0     		b	.L244
 5502              	.L277:
 5503 2bd2 00BF     		.align	2
 5504              	.L276:
 5505 2bd4 E8000000 		.word	.LC99
 5506 2bd8 F8000000 		.word	.LC100
 5507 2bdc 0C010000 		.word	.LC101
 5508 2be0 E0000000 		.word	.LC98
 5509 2be4 1C010000 		.word	.LC102
 5510 2be8 24010000 		.word	.LC103
 5511 2bec 2C010000 		.word	.LC104
 5512 2bf0 3C010000 		.word	.LC105
 5513 2bf4 44010000 		.word	.LC106
 5514 2bf8 4C010000 		.word	.LC107
 5515 2bfc 64010000 		.word	.LC108
 5516 2c00 7C010000 		.word	.LC109
 5517 2c04 8C010000 		.word	.LC110
 5518 2c08 A0010000 		.word	.LC111
 5519              	.L245:
 785:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 5520              		.loc 1 785 0 discriminator 3
 5521 2c0c 07F5AA53 		add	r3, r7, #5440
 5522 2c10 03F10D03 		add	r3, r3, #13
 5523 2c14 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5524 2c16 3222     		movs	r2, #50
 5525 2c18 02FB03F3 		mul	r3, r2, r3
 5526 2c1c 1A1D     		adds	r2, r3, #4
 5527 2c1e 07F5AA53 		add	r3, r7, #5440
 5528 2c22 03F10B03 		add	r3, r3, #11
 5529 2c26 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5530 2c28 07F5AA53 		add	r3, r7, #5440
 5531 2c2c 03F10D03 		add	r3, r3, #13
 5532 2c30 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5533 2c32 07F11003 		add	r3, r7, #16
 5534 2c36 0C3B     		subs	r3, r3, #12
 5535 2c38 1B68     		ldr	r3, [r3]
 5536 2c3a 0344     		add	r3, r3, r0
 5537 2c3c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5538 2c3e 03FB01F3 		mul	r3, r3, r1
 5539 2c42 1A44     		add	r2, r2, r3
 5540 2c44 07F5AA53 		add	r3, r7, #5440
 5541 2c48 03F10A03 		add	r3, r3, #10
 5542 2c4c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5543 2c4e 1A44     		add	r2, r2, r3
 5544 2c50 07F5AA53 		add	r3, r7, #5440
 5545 2c54 03F10F03 		add	r3, r3, #15
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 130


 5546 2c58 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5547 2c5a D21A     		subs	r2, r2, r3
 5548 2c5c 07F5AA53 		add	r3, r7, #5440
 5549 2c60 03F10A03 		add	r3, r3, #10
 5550 2c64 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5551 2c66 07F5AA53 		add	r3, r7, #5440
 5552 2c6a 03F10F03 		add	r3, r3, #15
 5553 2c6e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5554 2c70 C91A     		subs	r1, r1, r3
 5555 2c72 07F13003 		add	r3, r7, #48
 5556 2c76 103B     		subs	r3, r3, #16
 5557 2c78 595C     		ldrb	r1, [r3, r1]	@ zero_extendqisi2
 5558 2c7a 07F17003 		add	r3, r7, #112
 5559 2c7e 1C3B     		subs	r3, r3, #28
 5560 2c80 9954     		strb	r1, [r3, r2]
 784:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 5561              		.loc 1 784 0 discriminator 3
 5562 2c82 07F5AA53 		add	r3, r7, #5440
 5563 2c86 03F10F03 		add	r3, r3, #15
 5564 2c8a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5565 2c8c 013B     		subs	r3, r3, #1
 5566 2c8e 07F5AA52 		add	r2, r7, #5440
 5567 2c92 02F10F02 		add	r2, r2, #15
 5568 2c96 1370     		strb	r3, [r2]
 5569              	.L244:
 784:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 5570              		.loc 1 784 0 is_stmt 0 discriminator 1
 5571 2c98 07F5AA53 		add	r3, r7, #5440
 5572 2c9c 03F10F03 		add	r3, r3, #15
 5573 2ca0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5574 2ca2 002B     		cmp	r3, #0
 5575 2ca4 B2D1     		bne	.L245
 786:..\src/command_processing.c ****         //The following byte indicates the number of menus at the end of the packet to send
 787:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 5576              		.loc 1 787 0 is_stmt 1
 5577 2ca6 07F5AA53 		add	r3, r7, #5440
 5578 2caa 03F10D03 		add	r3, r3, #13
 5579 2cae 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5580 2cb0 07F11003 		add	r3, r7, #16
 5581 2cb4 083B     		subs	r3, r3, #8
 5582 2cb6 1B68     		ldr	r3, [r3]
 5583 2cb8 1344     		add	r3, r3, r2
 5584 2cba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5585 2cbc 002B     		cmp	r3, #0
 5586 2cbe 3CD1     		bne	.L246
 788:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght] = NUM_MEN
 5587              		.loc 1 788 0
 5588 2cc0 07F5AA53 		add	r3, r7, #5440
 5589 2cc4 03F10D03 		add	r3, r3, #13
 5590 2cc8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5591 2cca 3222     		movs	r2, #50
 5592 2ccc 02FB03F3 		mul	r3, r2, r3
 5593 2cd0 1A1D     		adds	r2, r3, #4
 5594 2cd2 07F5AA53 		add	r3, r7, #5440
 5595 2cd6 03F10B03 		add	r3, r3, #11
 5596 2cda 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5597 2cdc 07F5AA53 		add	r3, r7, #5440
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 131


 5598 2ce0 03F10D03 		add	r3, r3, #13
 5599 2ce4 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5600 2ce6 07F11003 		add	r3, r7, #16
 5601 2cea 0C3B     		subs	r3, r3, #12
 5602 2cec 1B68     		ldr	r3, [r3]
 5603 2cee 0344     		add	r3, r3, r0
 5604 2cf0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5605 2cf2 03FB01F3 		mul	r3, r3, r1
 5606 2cf6 1A44     		add	r2, r2, r3
 5607 2cf8 07F5AA53 		add	r3, r7, #5440
 5608 2cfc 03F10A03 		add	r3, r3, #10
 5609 2d00 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5610 2d02 1A44     		add	r2, r2, r3
 5611 2d04 07F5AA53 		add	r3, r7, #5440
 5612 2d08 03F10C03 		add	r3, r3, #12
 5613 2d0c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5614 2d0e 07F5AB51 		add	r1, r7, #5472
 5615 2d12 01F10801 		add	r1, r1, #8
 5616 2d16 0968     		ldr	r1, [r1]
 5617 2d18 0B44     		add	r3, r3, r1
 5618 2d1a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5619 2d1c 07F17003 		add	r3, r7, #112
 5620 2d20 1C3B     		subs	r3, r3, #28
 5621 2d22 9954     		strb	r1, [r3, r2]
 789:..\src/command_processing.c ****             idx_menu = idx_menu + 1;
 5622              		.loc 1 789 0
 5623 2d24 07F5AA53 		add	r3, r7, #5440
 5624 2d28 03F10C03 		add	r3, r3, #12
 5625 2d2c 1B78     		ldrb	r3, [r3]
 5626 2d2e 0133     		adds	r3, r3, #1
 5627 2d30 07F5AA52 		add	r2, r7, #5440
 5628 2d34 02F10C02 		add	r2, r2, #12
 5629 2d38 1370     		strb	r3, [r2]
 5630              	.L246:
 790:..\src/command_processing.c ****         }      
 791:..\src/command_processing.c ****         
 792:..\src/command_processing.c ****         // Add struct index after an empty bit
 793:..\src/command_processing.c ****         // Note: added here at the end of packets is transparent to old parameters retrieving versi
 794:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 5631              		.loc 1 794 0
 5632 2d3a 07F5AA53 		add	r3, r7, #5440
 5633 2d3e 03F10D03 		add	r3, r3, #13
 5634 2d42 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5635 2d44 07F11003 		add	r3, r7, #16
 5636 2d48 083B     		subs	r3, r3, #8
 5637 2d4a 1B68     		ldr	r3, [r3]
 5638 2d4c 1344     		add	r3, r3, r2
 5639 2d4e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5640 2d50 002B     		cmp	r3, #0
 5641 2d52 32D1     		bne	.L247
 795:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght + 2] = NUM
 5642              		.loc 1 795 0
 5643 2d54 07F5AA53 		add	r3, r7, #5440
 5644 2d58 03F10D03 		add	r3, r3, #13
 5645 2d5c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5646 2d5e 3222     		movs	r2, #50
 5647 2d60 02FB03F3 		mul	r3, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 132


 5648 2d64 1A1D     		adds	r2, r3, #4
 5649 2d66 07F5AA53 		add	r3, r7, #5440
 5650 2d6a 03F10B03 		add	r3, r3, #11
 5651 2d6e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5652 2d70 07F5AA53 		add	r3, r7, #5440
 5653 2d74 03F10D03 		add	r3, r3, #13
 5654 2d78 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5655 2d7a 07F11003 		add	r3, r7, #16
 5656 2d7e 0C3B     		subs	r3, r3, #12
 5657 2d80 1B68     		ldr	r3, [r3]
 5658 2d82 0344     		add	r3, r3, r0
 5659 2d84 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5660 2d86 03FB01F3 		mul	r3, r3, r1
 5661 2d8a 1A44     		add	r2, r2, r3
 5662 2d8c 07F5AA53 		add	r3, r7, #5440
 5663 2d90 03F10A03 		add	r3, r3, #10
 5664 2d94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5665 2d96 1344     		add	r3, r3, r2
 5666 2d98 9A1C     		adds	r2, r3, #2
 5667 2d9a 07F5AA53 		add	r3, r7, #5440
 5668 2d9e 03F10D03 		add	r3, r3, #13
 5669 2da2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5670 2da4 07F11003 		add	r3, r7, #16
 5671 2da8 103B     		subs	r3, r3, #16
 5672 2daa 1B68     		ldr	r3, [r3]
 5673 2dac 0B44     		add	r3, r3, r1
 5674 2dae 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5675 2db0 07F17003 		add	r3, r7, #112
 5676 2db4 1C3B     		subs	r3, r3, #28
 5677 2db6 9954     		strb	r1, [r3, r2]
 5678 2db8 31E0     		b	.L248
 5679              	.L247:
 796:..\src/command_processing.c ****         }
 797:..\src/command_processing.c ****         else {
 798:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght + 1] = NUM
 5680              		.loc 1 798 0
 5681 2dba 07F5AA53 		add	r3, r7, #5440
 5682 2dbe 03F10D03 		add	r3, r3, #13
 5683 2dc2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5684 2dc4 3222     		movs	r2, #50
 5685 2dc6 02FB03F3 		mul	r3, r2, r3
 5686 2dca 1A1D     		adds	r2, r3, #4
 5687 2dcc 07F5AA53 		add	r3, r7, #5440
 5688 2dd0 03F10B03 		add	r3, r3, #11
 5689 2dd4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5690 2dd6 07F5AA53 		add	r3, r7, #5440
 5691 2dda 03F10D03 		add	r3, r3, #13
 5692 2dde 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5693 2de0 07F11003 		add	r3, r7, #16
 5694 2de4 0C3B     		subs	r3, r3, #12
 5695 2de6 1B68     		ldr	r3, [r3]
 5696 2de8 0344     		add	r3, r3, r0
 5697 2dea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5698 2dec 03FB01F3 		mul	r3, r3, r1
 5699 2df0 1A44     		add	r2, r2, r3
 5700 2df2 07F5AA53 		add	r3, r7, #5440
 5701 2df6 03F10A03 		add	r3, r3, #10
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 133


 5702 2dfa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5703 2dfc 1344     		add	r3, r3, r2
 5704 2dfe 5A1C     		adds	r2, r3, #1
 5705 2e00 07F5AA53 		add	r3, r7, #5440
 5706 2e04 03F10D03 		add	r3, r3, #13
 5707 2e08 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5708 2e0a 07F11003 		add	r3, r7, #16
 5709 2e0e 103B     		subs	r3, r3, #16
 5710 2e10 1B68     		ldr	r3, [r3]
 5711 2e12 0B44     		add	r3, r3, r1
 5712 2e14 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5713 2e16 07F17003 		add	r3, r7, #112
 5714 2e1a 1C3B     		subs	r3, r3, #28
 5715 2e1c 9954     		strb	r1, [r3, r2]
 5716              	.L248:
 373:..\src/command_processing.c ****         
 5717              		.loc 1 373 0 discriminator 2
 5718 2e1e 07F5AA53 		add	r3, r7, #5440
 5719 2e22 03F10D03 		add	r3, r3, #13
 5720 2e26 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5721 2e28 0133     		adds	r3, r3, #1
 5722 2e2a 07F5AA52 		add	r2, r7, #5440
 5723 2e2e 02F10D02 		add	r2, r2, #13
 5724 2e32 1370     		strb	r3, [r2]
 5725              	.L63:
 373:..\src/command_processing.c ****         
 5726              		.loc 1 373 0 is_stmt 0 discriminator 1
 5727 2e34 07F5AA53 		add	r3, r7, #5440
 5728 2e38 03F10D03 		add	r3, r3, #13
 5729 2e3c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5730 2e3e 4B2B     		cmp	r3, #75
 5731 2e40 7DF651A9 		bls	.L249
 799:..\src/command_processing.c ****         }
 800:..\src/command_processing.c ****     }
 801:..\src/command_processing.c **** 
 802:..\src/command_processing.c ****     // Add menu
 803:..\src/command_processing.c ****     for (j = 0; j < NUM_OF_DEV_PARAM_MENUS; j++) {
 5732              		.loc 1 803 0 is_stmt 1
 5733 2e44 0023     		movs	r3, #0
 5734 2e46 07F5AA52 		add	r2, r7, #5440
 5735 2e4a 02F10E02 		add	r2, r2, #14
 5736 2e4e 1370     		strb	r3, [r2]
 5737 2e50 71E0     		b	.L250
 5738              	.L253:
 804:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 5739              		.loc 1 804 0
 5740 2e52 07F5AA53 		add	r3, r7, #5440
 5741 2e56 03F10E03 		add	r3, r3, #14
 5742 2e5a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5743 2e5c 9B00     		lsls	r3, r3, #2
 5744 2e5e 07F5AB52 		add	r2, r7, #5472
 5745 2e62 02F11402 		add	r2, r2, #20
 5746 2e66 1268     		ldr	r2, [r2]
 5747 2e68 1344     		add	r3, r3, r2
 5748 2e6a 1B68     		ldr	r3, [r3]
 5749 2e6c 1846     		mov	r0, r3
 5750 2e6e FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 134


 5751 2e72 0346     		mov	r3, r0
 5752 2e74 07F5AA52 		add	r2, r7, #5440
 5753 2e78 02F10A02 		add	r2, r2, #10
 5754 2e7c 1370     		strb	r3, [r2]
 805:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 5755              		.loc 1 805 0
 5756 2e7e 07F5AA53 		add	r3, r7, #5440
 5757 2e82 03F10A03 		add	r3, r3, #10
 5758 2e86 1B78     		ldrb	r3, [r3]
 5759 2e88 07F5AA52 		add	r2, r7, #5440
 5760 2e8c 02F10F02 		add	r2, r2, #15
 5761 2e90 1370     		strb	r3, [r2]
 5762 2e92 3EE0     		b	.L251
 5763              	.L252:
 806:..\src/command_processing.c ****             packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + 2 + j*PARAM_MENU_SLOT + string_lenght -
 5764              		.loc 1 806 0 discriminator 3
 5765 2e94 07F5AA53 		add	r3, r7, #5440
 5766 2e98 03F10E03 		add	r3, r3, #14
 5767 2e9c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5768 2e9e 9622     		movs	r2, #150
 5769 2ea0 02FB03F3 		mul	r3, r2, r3
 5770 2ea4 03F6DA62 		addw	r2, r3, #3802
 5771 2ea8 07F5AA53 		add	r3, r7, #5440
 5772 2eac 03F10A03 		add	r3, r3, #10
 5773 2eb0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5774 2eb2 1A44     		add	r2, r2, r3
 5775 2eb4 07F5AA53 		add	r3, r7, #5440
 5776 2eb8 03F10F03 		add	r3, r3, #15
 5777 2ebc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5778 2ebe D21A     		subs	r2, r2, r3
 5779 2ec0 07F5AA53 		add	r3, r7, #5440
 5780 2ec4 03F10E03 		add	r3, r3, #14
 5781 2ec8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5782 2eca 9B00     		lsls	r3, r3, #2
 5783 2ecc 07F5AB51 		add	r1, r7, #5472
 5784 2ed0 01F11401 		add	r1, r1, #20
 5785 2ed4 0968     		ldr	r1, [r1]
 5786 2ed6 0B44     		add	r3, r3, r1
 5787 2ed8 1B68     		ldr	r3, [r3]
 5788 2eda 07F5AA51 		add	r1, r7, #5440
 5789 2ede 01F10A01 		add	r1, r1, #10
 5790 2ee2 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 5791 2ee4 07F5AA51 		add	r1, r7, #5440
 5792 2ee8 01F10F01 		add	r1, r1, #15
 5793 2eec 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 5794 2eee 411A     		subs	r1, r0, r1
 5795 2ef0 0B44     		add	r3, r3, r1
 5796 2ef2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5797 2ef4 07F17003 		add	r3, r7, #112
 5798 2ef8 1C3B     		subs	r3, r3, #28
 5799 2efa 9954     		strb	r1, [r3, r2]
 805:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 5800              		.loc 1 805 0 discriminator 3
 5801 2efc 07F5AA53 		add	r3, r7, #5440
 5802 2f00 03F10F03 		add	r3, r3, #15
 5803 2f04 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5804 2f06 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 135


 5805 2f08 07F5AA52 		add	r2, r7, #5440
 5806 2f0c 02F10F02 		add	r2, r2, #15
 5807 2f10 1370     		strb	r3, [r2]
 5808              	.L251:
 805:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 5809              		.loc 1 805 0 is_stmt 0 discriminator 1
 5810 2f12 07F5AA53 		add	r3, r7, #5440
 5811 2f16 03F10F03 		add	r3, r3, #15
 5812 2f1a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5813 2f1c 002B     		cmp	r3, #0
 5814 2f1e B9D1     		bne	.L252
 803:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 5815              		.loc 1 803 0 is_stmt 1 discriminator 2
 5816 2f20 07F5AA53 		add	r3, r7, #5440
 5817 2f24 03F10E03 		add	r3, r3, #14
 5818 2f28 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5819 2f2a 0133     		adds	r3, r3, #1
 5820 2f2c 07F5AA52 		add	r2, r7, #5440
 5821 2f30 02F10E02 		add	r2, r2, #14
 5822 2f34 1370     		strb	r3, [r2]
 5823              	.L250:
 803:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 5824              		.loc 1 803 0 is_stmt 0 discriminator 1
 5825 2f36 07F5AA53 		add	r3, r7, #5440
 5826 2f3a 03F10E03 		add	r3, r3, #14
 5827 2f3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5828 2f40 092B     		cmp	r3, #9
 5829 2f42 86D9     		bls	.L253
 807:..\src/command_processing.c ****     }
 808:..\src/command_processing.c ****     
 809:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
 5830              		.loc 1 809 0 is_stmt 1
 5831 2f44 07F5AA53 		add	r3, r7, #5440
 5832 2f48 03F10803 		add	r3, r3, #8
 5833 2f4c 1B88     		ldrh	r3, [r3]
 5834 2f4e 5C1E     		subs	r4, r3, #1
 5835 2f50 07F5AA53 		add	r3, r7, #5440
 5836 2f54 03F10803 		add	r3, r3, #8
 5837 2f58 1B88     		ldrh	r3, [r3]	@ movhi
 5838 2f5a DBB2     		uxtb	r3, r3
 5839 2f5c 013B     		subs	r3, r3, #1
 5840 2f5e DAB2     		uxtb	r2, r3
 5841 2f60 07F17003 		add	r3, r7, #112
 5842 2f64 1C3B     		subs	r3, r3, #28
 5843 2f66 1146     		mov	r1, r2
 5844 2f68 1846     		mov	r0, r3
 5845 2f6a FFF7FEFF 		bl	LCRChecksum
 5846 2f6e 0346     		mov	r3, r0
 5847 2f70 1A46     		mov	r2, r3
 5848 2f72 07F17003 		add	r3, r7, #112
 5849 2f76 1C3B     		subs	r3, r3, #28
 5850 2f78 1A55     		strb	r2, [r3, r4]
 810:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 5851              		.loc 1 810 0
 5852 2f7a 07F5AA53 		add	r3, r7, #5440
 5853 2f7e 03F10803 		add	r3, r3, #8
 5854 2f82 1A88     		ldrh	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 136


 5855 2f84 07F17003 		add	r3, r7, #112
 5856 2f88 1C3B     		subs	r3, r3, #28
 5857 2f8a 1146     		mov	r1, r2
 5858 2f8c 1846     		mov	r0, r3
 5859 2f8e FFF7FEFF 		bl	commWrite
 811:..\src/command_processing.c **** }
 5860              		.loc 1 811 0
 5861 2f92 00BF     		nop
 5862 2f94 07F5AA57 		add	r7, r7, #5440
 5863 2f98 1437     		adds	r7, r7, #20
 5864              		.cfi_def_cfa_offset 20
 5865 2f9a BD46     		mov	sp, r7
 5866              		.cfi_def_cfa_register 13
 5867              		@ sp needed
 5868 2f9c F0BD     		pop	{r4, r5, r6, r7, pc}
 5869              		.cfi_endproc
 5870              	.LFE67:
 5871              		.size	get_param_list, .-get_param_list
 5872 2f9e 00BF     		.section	.rodata
 5873              		.align	2
 5874              	.LC113:
 5875 01b0 30202D3E 		.ascii	"0 -> None\0121 -> Low (%u us delay for each 8-bit r"
 5875      204E6F6E 
 5875      650A3120 
 5875      2D3E204C 
 5875      6F772028 
 5876 01e0 65676973 		.ascii	"egister read)\0122 -> High (%u us delay for each 8-"
 5876      74657220 
 5876      72656164 
 5876      290A3220 
 5876      2D3E2048 
 5877 0210 62697420 		.ascii	"bit register read)\012\000"
 5877      72656769 
 5877      73746572 
 5877      20726561 
 5877      64290A00 
 5878              		.align	2
 5879              	.LC114:
 5880 0224 30202D3E 		.ascii	"0 -> Usb\0121 -> Handle\0122 -> EMG proportional\012"
 5880      20557362 
 5880      0A31202D 
 5880      3E204861 
 5880      6E646C65 
 5881 024f 33202D3E 		.ascii	"3 -> EMG Integral\0124 -> EMG FCFS\0125 -> EMG FCFS"
 5881      20454D47 
 5881      20496E74 
 5881      65677261 
 5881      6C0A3420 
 5882 027c 20416476 		.ascii	" Advanced\0126 -> EMG proportional NC\012\000"
 5882      616E6365 
 5882      640A3620 
 5882      2D3E2045 
 5882      4D472070 
 5883              		.align	2
 5884              	.LC115:
 5885 02a0 30202D3E 		.ascii	"0 -> Position\0121 -> PWM\0122 -> Current\0123 -> P"
 5885      20506F73 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 137


 5885      6974696F 
 5885      6E0A3120 
 5885      2D3E2050 
 5886 02ca 6F736974 		.ascii	"osition and Current\012\000"
 5886      696F6E20 
 5886      616E6420 
 5886      43757272 
 5886      656E740A 
 5887 02df 00       		.align	2
 5888              	.LC116:
 5889 02e0 30202D3E 		.ascii	"0 -> Deactivate [NO]\0121 -> Activate [YES]\012\000"
 5889      20446561 
 5889      63746976 
 5889      61746520 
 5889      5B4E4F5D 
 5890 030a 0000     		.align	2
 5891              	.LC117:
 5892 030c 30202D3E 		.ascii	"0 -> Right\0121 -> Left\012\000"
 5892      20526967 
 5892      68740A31 
 5892      202D3E20 
 5892      4C656674 
 5893 0322 0000     		.align	2
 5894              	.LC118:
 5895 0324 30202D3E 		.ascii	"0 -> OFF\0121 -> ON\012The board will reset\012\000"
 5895      204F4646 
 5895      0A31202D 
 5895      3E204F4E 
 5895      0A546865 
 5896 034b 00       		.align	2
 5897              	.LC119:
 5898 034c 30202D3E 		.ascii	"0 -> None\0121 -> SD/RTC board\0122 -> WiFi board ["
 5898      204E6F6E 
 5898      650A3120 
 5898      2D3E2053 
 5898      442F5254 
 5899 0379 4E2F415D 		.ascii	"N/A]\0123 -> Other [N/A]\012The board will reset\012"
 5899      0A33202D 
 5899      3E204F74 
 5899      68657220 
 5899      5B4E2F41 
 5900 03a4 00       		.ascii	"\000"
 5901 03a5 000000   		.align	2
 5902              	.LC120:
 5903 03a8 30202D3E 		.ascii	"0 -> Generic user\0121 -> Maria\0122 -> Roza\012The"
 5903      2047656E 
 5903      65726963 
 5903      20757365 
 5903      720A3120 
 5904 03d2 20626F61 		.ascii	" board will reset\012\000"
 5904      72642077 
 5904      696C6C20 
 5904      72657365 
 5904      740A00
 5905 03e5 000000   		.align	2
 5906              	.LC121:
 5907 03e8 30202D3E 		.ascii	"0 -> MC33887 (Standard)\0121 -> VNH5019 (High power"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 138


 5907      204D4333 
 5907      33383837 
 5907      20285374 
 5907      616E6461 
 5908 0418 290A5468 		.ascii	")\012The board will reset\012\000"
 5908      6520626F 
 5908      61726420 
 5908      77696C6C 
 5908      20726573 
 5909              		.align	2
 5910              	.LC122:
 5911 0430 30202D3E 		.ascii	"0 -> SOFTHAND PRO\0121 -> GENERIC 2 MOTORS\0122 -> "
 5911      20534F46 
 5911      5448414E 
 5911      44205052 
 5911      4F0A3120 
 5912 045d 41495220 		.ascii	"AIR CHAMBERS\012The board will reset\012\000"
 5912      4348414D 
 5912      42455253 
 5912      0A546865 
 5912      20626F61 
 5913              		.align	2
 5914              	.LC0:
 5915 0480 02       		.byte	2
 5916 0481 07       		.byte	7
 5917 0482 07       		.byte	7
 5918 0483 00       		.byte	0
 5919 0484 00       		.byte	0
 5920 0485 00       		.byte	0
 5921 0486 02       		.byte	2
 5922 0487 03       		.byte	3
 5923 0488 07       		.byte	7
 5924 0489 00       		.byte	0
 5925 048a 05       		.byte	5
 5926 048b 05       		.byte	5
 5927 048c 03       		.byte	3
 5928 048d 04       		.byte	4
 5929 048e 00       		.byte	0
 5930 048f 06       		.byte	6
 5931 0490 02       		.byte	2
 5932 0491 00       		.byte	0
 5933 0492 01       		.byte	1
 5934 0493 00       		.byte	0
 5935 0494 07       		.byte	7
 5936 0495 02       		.byte	2
 5937 0496 05       		.byte	5
 5938 0497 05       		.byte	5
 5939 0498 05       		.byte	5
 5940 0499 00       		.byte	0
 5941 049a 00       		.byte	0
 5942 049b 00       		.byte	0
 5943 049c 00       		.byte	0
 5944 049d 00       		.byte	0
 5945 049e 00       		.byte	0
 5946 049f 02       		.byte	2
 5947 04a0 00       		.byte	0
 5948 04a1 02       		.byte	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 139


 5949 04a2 00       		.byte	0
 5950 04a3 09       		.byte	9
 5951 04a4 02       		.byte	2
 5952 04a5 00       		.byte	0
 5953 04a6 02       		.byte	2
 5954 04a7 00       		.byte	0
 5955 04a8 02       		.byte	2
 5956 04a9 01       		.byte	1
 5957 04aa 00       		.byte	0
 5958 04ab 07       		.byte	7
 5959 04ac 07       		.byte	7
 5960 04ad 00       		.byte	0
 5961 04ae 00       		.byte	0
 5962 04af 00       		.byte	0
 5963 04b0 02       		.byte	2
 5964 04b1 03       		.byte	3
 5965 04b2 07       		.byte	7
 5966 04b3 00       		.byte	0
 5967 04b4 05       		.byte	5
 5968 04b5 05       		.byte	5
 5969 04b6 03       		.byte	3
 5970 04b7 00       		.byte	0
 5971 04b8 01       		.byte	1
 5972 04b9 00       		.byte	0
 5973 04ba 07       		.byte	7
 5974 04bb 02       		.byte	2
 5975 04bc 00       		.byte	0
 5976 04bd 02       		.byte	2
 5977 04be 00       		.byte	0
 5978 04bf 02       		.byte	2
 5979 04c0 01       		.byte	1
 5980 04c1 02       		.byte	2
 5981 04c2 02       		.byte	2
 5982 04c3 00       		.byte	0
 5983 04c4 02       		.byte	2
 5984 04c5 02       		.byte	2
 5985 04c6 00       		.byte	0
 5986 04c7 00       		.byte	0
 5987 04c8 02       		.byte	2
 5988 04c9 05       		.byte	5
 5989 04ca 07       		.byte	7
 5990 04cb 07       		.byte	7
 5991              		.align	2
 5992              	.LC1:
 5993 04cc 31202D20 		.ascii	"1 - Device ID:\000"
 5993      44657669 
 5993      63652049 
 5993      443A00
 5994 04db 00       		.align	2
 5995              	.LC2:
 5996 04dc 32202D20 		.ascii	"2 - Position PID [P, I, D]:\000"
 5996      506F7369 
 5996      74696F6E 
 5996      20504944 
 5996      205B502C 
 5997              		.align	2
 5998              	.LC3:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 140


 5999 04f8 33202D20 		.ascii	"3 - Current PID [P, I, D]:\000"
 5999      43757272 
 5999      656E7420 
 5999      50494420 
 5999      5B502C20 
 6000 0513 00       		.align	2
 6001              	.LC4:
 6002 0514 34202D20 		.ascii	"4 - Startup Activation:\000"
 6002      53746172 
 6002      74757020 
 6002      41637469 
 6002      76617469 
 6003              		.align	2
 6004              	.LC5:
 6005 052c 35202D20 		.ascii	"5 - Input mode:\000"
 6005      496E7075 
 6005      74206D6F 
 6005      64653A00 
 6006              		.align	2
 6007              	.LC6:
 6008 053c 36202D20 		.ascii	"6 - Control mode:\000"
 6008      436F6E74 
 6008      726F6C20 
 6008      6D6F6465 
 6008      3A00
 6009 054e 0000     		.align	2
 6010              	.LC7:
 6011 0550 37202D20 		.ascii	"7 - Resolutions:\000"
 6011      5265736F 
 6011      6C757469 
 6011      6F6E733A 
 6011      00
 6012 0561 000000   		.align	2
 6013              	.LC8:
 6014 0564 38202D20 		.ascii	"8 - Measurement Offsets:\000"
 6014      4D656173 
 6014      7572656D 
 6014      656E7420 
 6014      4F666673 
 6015 057d 000000   		.align	2
 6016              	.LC9:
 6017 0580 39202D20 		.ascii	"9 - Multipliers:\000"
 6017      4D756C74 
 6017      69706C69 
 6017      6572733A 
 6017      00
 6018 0591 000000   		.align	2
 6019              	.LC10:
 6020 0594 3130202D 		.ascii	"10 - Pos. limit active:\000"
 6020      20506F73 
 6020      2E206C69 
 6020      6D697420 
 6020      61637469 
 6021              		.align	2
 6022              	.LC11:
 6023 05ac 3131202D 		.ascii	"11 - Pos. limits [inf, sup]:\000"
 6023      20506F73 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 141


 6023      2E206C69 
 6023      6D697473 
 6023      205B696E 
 6024 05c9 000000   		.align	2
 6025              	.LC12:
 6026 05cc 3132202D 		.ascii	"12 - Max steps [neg, pos]:\000"
 6026      204D6178 
 6026      20737465 
 6026      7073205B 
 6026      6E65672C 
 6027 05e7 00       		.align	2
 6028              	.LC13:
 6029 05e8 3133202D 		.ascii	"13 - Current limit:\000"
 6029      20437572 
 6029      72656E74 
 6029      206C696D 
 6029      69743A00 
 6030              		.align	2
 6031              	.LC14:
 6032 05fc 3134202D 		.ascii	"14 - EMG thresholds:\000"
 6032      20454D47 
 6032      20746872 
 6032      6573686F 
 6032      6C64733A 
 6033 0611 000000   		.align	2
 6034              	.LC15:
 6035 0614 3135202D 		.ascii	"15 - EMG calibration on startup:\000"
 6035      20454D47 
 6035      2063616C 
 6035      69627261 
 6035      74696F6E 
 6036 0635 000000   		.align	2
 6037              	.LC16:
 6038 0638 3136202D 		.ascii	"16 - EMG max values:\000"
 6038      20454D47 
 6038      206D6178 
 6038      2076616C 
 6038      7565733A 
 6039 064d 000000   		.align	2
 6040              	.LC17:
 6041 0650 3137202D 		.ascii	"17 - EMG max speed:\000"
 6041      20454D47 
 6041      206D6178 
 6041      20737065 
 6041      65643A00 
 6042              		.align	2
 6043              	.LC18:
 6044 0664 3138202D 		.ascii	"18 - Absolute encoder position:\000"
 6044      20416273 
 6044      6F6C7574 
 6044      6520656E 
 6044      636F6465 
 6045              		.align	2
 6046              	.LC19:
 6047 0684 3139202D 		.ascii	"19 - Motor handle ratio:\000"
 6047      204D6F74 
 6047      6F722068 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 142


 6047      616E646C 
 6047      65207261 
 6048 069d 000000   		.align	2
 6049              	.LC20:
 6050 06a0 3230202D 		.ascii	"20 - PWM rescaling:\000"
 6050      2050574D 
 6050      20726573 
 6050      63616C69 
 6050      6E673A00 
 6051              		.align	2
 6052              	.LC21:
 6053 06b4 3231202D 		.ascii	"21 - Current lookup:\000"
 6053      20437572 
 6053      72656E74 
 6053      206C6F6F 
 6053      6B75703A 
 6054 06c9 000000   		.align	2
 6055              	.LC22:
 6056 06cc 3232202D 		.ascii	"22 - Date of maintenance [D/M/Y]:\000"
 6056      20446174 
 6056      65206F66 
 6056      206D6169 
 6056      6E74656E 
 6057 06ee 0000     		.align	2
 6058              	.LC23:
 6059 06f0 3233202D 		.ascii	"23 - Rest position:\000"
 6059      20526573 
 6059      7420706F 
 6059      73697469 
 6059      6F6E3A00 
 6060              		.align	2
 6061              	.LC24:
 6062 0704 3234202D 		.ascii	"24 - Rest position time delay (ms):\000"
 6062      20526573 
 6062      7420706F 
 6062      73697469 
 6062      6F6E2074 
 6063              		.align	2
 6064              	.LC25:
 6065 0728 3235202D 		.ascii	"25 - Rest vel closure (ticks/sec):\000"
 6065      20526573 
 6065      74207665 
 6065      6C20636C 
 6065      6F737572 
 6066 074b 00       		.align	2
 6067              	.LC26:
 6068 074c 3236202D 		.ascii	"26 - Rest position enabled:\000"
 6068      20526573 
 6068      7420706F 
 6068      73697469 
 6068      6F6E2065 
 6069              		.align	2
 6070              	.LC27:
 6071 0768 3237202D 		.ascii	"27 - EMG inversion:\000"
 6071      20454D47 
 6071      20696E76 
 6071      65727369 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 143


 6071      6F6E3A00 
 6072              		.align	2
 6073              	.LC28:
 6074 077c 3238202D 		.ascii	"28 - Hand side:\000"
 6074      2048616E 
 6074      64207369 
 6074      64653A00 
 6075              		.align	2
 6076              	.LC29:
 6077 078c 3239202D 		.ascii	"29 - Enable IMUs:\000"
 6077      20456E61 
 6077      626C6520 
 6077      494D5573 
 6077      3A00
 6078 079e 0000     		.align	2
 6079              	.LC30:
 6080 07a0 3330202D 		.ascii	"30 - Read Expansion port:\000"
 6080      20526561 
 6080      64204578 
 6080      70616E73 
 6080      696F6E20 
 6081 07ba 0000     		.align	2
 6082              	.LC31:
 6083 07bc 3331202D 		.ascii	"31 - Reset counters:\000"
 6083      20526573 
 6083      65742063 
 6083      6F756E74 
 6083      6572733A 
 6084 07d1 000000   		.align	2
 6085              	.LC32:
 6086 07d4 3332202D 		.ascii	"32 - Last checked Time [D/M/Y H:M:S]:\000"
 6086      204C6173 
 6086      74206368 
 6086      65636B65 
 6086      64205469 
 6087 07fa 0000     		.align	2
 6088              	.LC33:
 6089 07fc 3333202D 		.ascii	"33 - SPI read delay (IMU):\000"
 6089      20535049 
 6089      20726561 
 6089      64206465 
 6089      6C617920 
 6090 0817 00       		.align	2
 6091              	.LC34:
 6092 0818 3334202D 		.ascii	"34 - On board IMU conf. [a,g,m,q,t]:\000"
 6092      204F6E20 
 6092      626F6172 
 6092      6420494D 
 6092      5520636F 
 6093 083d 000000   		.align	2
 6094              	.LC35:
 6095 0840 3335202D 		.ascii	"35 - User ID:\000"
 6095      20557365 
 6095      72204944 
 6095      3A00
 6096 084e 0000     		.align	2
 6097              	.LC36:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 144


 6098 0850 3336202D 		.ascii	"36 - User code:\000"
 6098      20557365 
 6098      7220636F 
 6098      64653A00 
 6099              		.align	2
 6100              	.LC37:
 6101 0860 3337202D 		.ascii	"37 - Associated encoder line:\000"
 6101      20417373 
 6101      6F636961 
 6101      74656420 
 6101      656E636F 
 6102 087e 0000     		.align	2
 6103              	.LC38:
 6104 0880 3338202D 		.ascii	"38 - Driver type:\000"
 6104      20447269 
 6104      76657220 
 6104      74797065 
 6104      3A00
 6105 0892 0000     		.align	2
 6106              	.LC39:
 6107 0894 3339202D 		.ascii	"39 - PWM rate limiter:\000"
 6107      2050574D 
 6107      20726174 
 6107      65206C69 
 6107      6D697465 
 6108 08ab 00       		.align	2
 6109              	.LC40:
 6110 08ac 3430202D 		.ascii	"40 - Not reversible:\000"
 6110      204E6F74 
 6110      20726576 
 6110      65727369 
 6110      626C653A 
 6111 08c1 000000   		.align	2
 6112              	.LC41:
 6113 08c4 3431202D 		.ascii	"41 - Enc idx used for control:\000"
 6113      20456E63 
 6113      20696478 
 6113      20757365 
 6113      6420666F 
 6114 08e3 00       		.align	2
 6115              	.LC42:
 6116 08e4 3432202D 		.ascii	"42 - Gear params[N1, N2, I1]:\000"
 6116      20476561 
 6116      72207061 
 6116      72616D73 
 6116      5B4E312C 
 6117 0902 0000     		.align	2
 6118              	.LC43:
 6119 0904 3433202D 		.ascii	"43 - Use second motor:\000"
 6119      20557365 
 6119      20736563 
 6119      6F6E6420 
 6119      6D6F746F 
 6120 091b 00       		.align	2
 6121              	.LC44:
 6122 091c 3434202D 		.ascii	"44 - Position PID [P, I, D]:\000"
 6122      20506F73 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 145


 6122      6974696F 
 6122      6E205049 
 6122      44205B50 
 6123 0939 000000   		.align	2
 6124              	.LC45:
 6125 093c 3435202D 		.ascii	"45 - Current PID [P, I, D]:\000"
 6125      20437572 
 6125      72656E74 
 6125      20504944 
 6125      205B502C 
 6126              		.align	2
 6127              	.LC46:
 6128 0958 3436202D 		.ascii	"46 - Startup Activation:\000"
 6128      20537461 
 6128      72747570 
 6128      20416374 
 6128      69766174 
 6129 0971 000000   		.align	2
 6130              	.LC47:
 6131 0974 3437202D 		.ascii	"47 - Input mode:\000"
 6131      20496E70 
 6131      7574206D 
 6131      6F64653A 
 6131      00
 6132 0985 000000   		.align	2
 6133              	.LC48:
 6134 0988 3438202D 		.ascii	"48 - Control mode:\000"
 6134      20436F6E 
 6134      74726F6C 
 6134      206D6F64 
 6134      653A00
 6135 099b 00       		.align	2
 6136              	.LC49:
 6137 099c 3439202D 		.ascii	"49 - Resolutions:\000"
 6137      20526573 
 6137      6F6C7574 
 6137      696F6E73 
 6137      3A00
 6138 09ae 0000     		.align	2
 6139              	.LC50:
 6140 09b0 3530202D 		.ascii	"50 - Measurement Offsets:\000"
 6140      204D6561 
 6140      73757265 
 6140      6D656E74 
 6140      204F6666 
 6141 09ca 0000     		.align	2
 6142              	.LC51:
 6143 09cc 3531202D 		.ascii	"51 - Multipliers:\000"
 6143      204D756C 
 6143      7469706C 
 6143      69657273 
 6143      3A00
 6144 09de 0000     		.align	2
 6145              	.LC52:
 6146 09e0 3532202D 		.ascii	"52 - Pos. limit active:\000"
 6146      20506F73 
 6146      2E206C69 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 146


 6146      6D697420 
 6146      61637469 
 6147              		.align	2
 6148              	.LC53:
 6149 09f8 3533202D 		.ascii	"53 - Pos. limits [inf, sup]:\000"
 6149      20506F73 
 6149      2E206C69 
 6149      6D697473 
 6149      205B696E 
 6150 0a15 000000   		.align	2
 6151              	.LC54:
 6152 0a18 3534202D 		.ascii	"54 - Max steps [neg, pos]:\000"
 6152      204D6178 
 6152      20737465 
 6152      7073205B 
 6152      6E65672C 
 6153 0a33 00       		.align	2
 6154              	.LC55:
 6155 0a34 3535202D 		.ascii	"55 - Current limit:\000"
 6155      20437572 
 6155      72656E74 
 6155      206C696D 
 6155      69743A00 
 6156              		.align	2
 6157              	.LC56:
 6158 0a48 3536202D 		.ascii	"56 - Absolute encoder position:\000"
 6158      20416273 
 6158      6F6C7574 
 6158      6520656E 
 6158      636F6465 
 6159              		.align	2
 6160              	.LC57:
 6161 0a68 3537202D 		.ascii	"57 - Motor handle ratio:\000"
 6161      204D6F74 
 6161      6F722068 
 6161      616E646C 
 6161      65207261 
 6162 0a81 000000   		.align	2
 6163              	.LC58:
 6164 0a84 3538202D 		.ascii	"58 - PWM rescaling:\000"
 6164      2050574D 
 6164      20726573 
 6164      63616C69 
 6164      6E673A00 
 6165              		.align	2
 6166              	.LC59:
 6167 0a98 3539202D 		.ascii	"59 - Current lookup:\000"
 6167      20437572 
 6167      72656E74 
 6167      206C6F6F 
 6167      6B75703A 
 6168 0aad 000000   		.align	2
 6169              	.LC60:
 6170 0ab0 3630202D 		.ascii	"60 - Associated encoder line:\000"
 6170      20417373 
 6170      6F636961 
 6170      74656420 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 147


 6170      656E636F 
 6171 0ace 0000     		.align	2
 6172              	.LC61:
 6173 0ad0 3631202D 		.ascii	"61 - Driver type:\000"
 6173      20447269 
 6173      76657220 
 6173      74797065 
 6173      3A00
 6174 0ae2 0000     		.align	2
 6175              	.LC62:
 6176 0ae4 3632202D 		.ascii	"62 - PWM rate limiter:\000"
 6176      2050574D 
 6176      20726174 
 6176      65206C69 
 6176      6D697465 
 6177 0afb 00       		.align	2
 6178              	.LC63:
 6179 0afc 3633202D 		.ascii	"63 - Not reversible:\000"
 6179      204E6F74 
 6179      20726576 
 6179      65727369 
 6179      626C653A 
 6180 0b11 000000   		.align	2
 6181              	.LC64:
 6182 0b14 3634202D 		.ascii	"64 - Enc idx used for control:\000"
 6182      20456E63 
 6182      20696478 
 6182      20757365 
 6182      6420666F 
 6183 0b33 00       		.align	2
 6184              	.LC65:
 6185 0b34 3635202D 		.ascii	"65 - Gear params[N1, N2, I1]:\000"
 6185      20476561 
 6185      72207061 
 6185      72616D73 
 6185      5B4E312C 
 6186 0b52 0000     		.align	2
 6187              	.LC66:
 6188 0b54 3636202D 		.ascii	"66 - Read enc raw line 0:\000"
 6188      20526561 
 6188      6420656E 
 6188      63207261 
 6188      77206C69 
 6189 0b6e 0000     		.align	2
 6190              	.LC67:
 6191 0b70 3637202D 		.ascii	"67 - Read enc raw line 1:\000"
 6191      20526561 
 6191      6420656E 
 6191      63207261 
 6191      77206C69 
 6192 0b8a 0000     		.align	2
 6193              	.LC68:
 6194 0b8c 3638202D 		.ascii	"68 - Read additional ADC port:\000"
 6194      20526561 
 6194      64206164 
 6194      64697469 
 6194      6F6E616C 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 148


 6195 0bab 00       		.align	2
 6196              	.LC69:
 6197 0bac 3639202D 		.ascii	"69 - ADC channel [1-6]:\000"
 6197      20414443 
 6197      20636861 
 6197      6E6E656C 
 6197      205B312D 
 6198              		.align	2
 6199              	.LC70:
 6200 0bc4 3730202D 		.ascii	"70 - ADC channel [7-12]:\000"
 6200      20414443 
 6200      20636861 
 6200      6E6E656C 
 6200      205B372D 
 6201 0bdd 000000   		.align	2
 6202              	.LC71:
 6203 0be0 3731202D 		.ascii	"71 - Device type:\000"
 6203      20446576 
 6203      69636520 
 6203      74797065 
 6203      3A00
 6204 0bf2 0000     		.align	2
 6205              	.LC72:
 6206 0bf4 3732202D 		.ascii	"72 - Slave communication active:\000"
 6206      20536C61 
 6206      76652063 
 6206      6F6D6D75 
 6206      6E696361 
 6207 0c15 000000   		.align	2
 6208              	.LC73:
 6209 0c18 3733202D 		.ascii	"73 - Slave ID:\000"
 6209      20536C61 
 6209      76652049 
 6209      443A00
 6210 0c27 00       		.align	2
 6211              	.LC74:
 6212 0c28 3734202D 		.ascii	"74 - Maximum slave residual current:\000"
 6212      204D6178 
 6212      696D756D 
 6212      20736C61 
 6212      76652072 
 6213 0c4d 000000   		.align	2
 6214              	.LC75:
 6215 0c50 3735202D 		.ascii	"75 - Maximum pressure feedback (kPa):\000"
 6215      204D6178 
 6215      696D756D 
 6215      20707265 
 6215      73737572 
 6216 0c76 0000     		.align	2
 6217              	.LC76:
 6218 0c78 3736202D 		.ascii	"76 - Proportional pressure error gain:\000"
 6218      2050726F 
 6218      706F7274 
 6218      696F6E61 
 6218      6C207072 
 6219 0c9f 00       		.align	2
 6220              	.LC112:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 149


 6221 0ca0 CC040000 		.word	.LC1
 6222 0ca4 DC040000 		.word	.LC2
 6223 0ca8 F8040000 		.word	.LC3
 6224 0cac 14050000 		.word	.LC4
 6225 0cb0 2C050000 		.word	.LC5
 6226 0cb4 3C050000 		.word	.LC6
 6227 0cb8 50050000 		.word	.LC7
 6228 0cbc 64050000 		.word	.LC8
 6229 0cc0 80050000 		.word	.LC9
 6230 0cc4 94050000 		.word	.LC10
 6231 0cc8 AC050000 		.word	.LC11
 6232 0ccc CC050000 		.word	.LC12
 6233 0cd0 E8050000 		.word	.LC13
 6234 0cd4 FC050000 		.word	.LC14
 6235 0cd8 14060000 		.word	.LC15
 6236 0cdc 38060000 		.word	.LC16
 6237 0ce0 50060000 		.word	.LC17
 6238 0ce4 64060000 		.word	.LC18
 6239 0ce8 84060000 		.word	.LC19
 6240 0cec A0060000 		.word	.LC20
 6241 0cf0 B4060000 		.word	.LC21
 6242 0cf4 CC060000 		.word	.LC22
 6243 0cf8 F0060000 		.word	.LC23
 6244 0cfc 04070000 		.word	.LC24
 6245 0d00 28070000 		.word	.LC25
 6246 0d04 4C070000 		.word	.LC26
 6247 0d08 68070000 		.word	.LC27
 6248 0d0c 7C070000 		.word	.LC28
 6249 0d10 8C070000 		.word	.LC29
 6250 0d14 A0070000 		.word	.LC30
 6251 0d18 BC070000 		.word	.LC31
 6252 0d1c D4070000 		.word	.LC32
 6253 0d20 FC070000 		.word	.LC33
 6254 0d24 18080000 		.word	.LC34
 6255 0d28 40080000 		.word	.LC35
 6256 0d2c 50080000 		.word	.LC36
 6257 0d30 60080000 		.word	.LC37
 6258 0d34 80080000 		.word	.LC38
 6259 0d38 94080000 		.word	.LC39
 6260 0d3c AC080000 		.word	.LC40
 6261 0d40 C4080000 		.word	.LC41
 6262 0d44 E4080000 		.word	.LC42
 6263 0d48 04090000 		.word	.LC43
 6264 0d4c 1C090000 		.word	.LC44
 6265 0d50 3C090000 		.word	.LC45
 6266 0d54 58090000 		.word	.LC46
 6267 0d58 74090000 		.word	.LC47
 6268 0d5c 88090000 		.word	.LC48
 6269 0d60 9C090000 		.word	.LC49
 6270 0d64 B0090000 		.word	.LC50
 6271 0d68 CC090000 		.word	.LC51
 6272 0d6c E0090000 		.word	.LC52
 6273 0d70 F8090000 		.word	.LC53
 6274 0d74 180A0000 		.word	.LC54
 6275 0d78 340A0000 		.word	.LC55
 6276 0d7c 480A0000 		.word	.LC56
 6277 0d80 680A0000 		.word	.LC57
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 150


 6278 0d84 840A0000 		.word	.LC58
 6279 0d88 980A0000 		.word	.LC59
 6280 0d8c B00A0000 		.word	.LC60
 6281 0d90 D00A0000 		.word	.LC61
 6282 0d94 E40A0000 		.word	.LC62
 6283 0d98 FC0A0000 		.word	.LC63
 6284 0d9c 140B0000 		.word	.LC64
 6285 0da0 340B0000 		.word	.LC65
 6286 0da4 540B0000 		.word	.LC66
 6287 0da8 700B0000 		.word	.LC67
 6288 0dac 8C0B0000 		.word	.LC68
 6289 0db0 AC0B0000 		.word	.LC69
 6290 0db4 C40B0000 		.word	.LC70
 6291 0db8 E00B0000 		.word	.LC71
 6292 0dbc F40B0000 		.word	.LC72
 6293 0dc0 180C0000 		.word	.LC73
 6294 0dc4 280C0000 		.word	.LC74
 6295 0dc8 500C0000 		.word	.LC75
 6296 0dcc 780C0000 		.word	.LC76
 6297              		.align	2
 6298              	.LC78:
 6299 0dd0 03       		.byte	3
 6300 0dd1 01       		.byte	1
 6301 0dd2 02       		.byte	2
 6302 0dd3 03       		.byte	3
 6303 0dd4 03       		.byte	3
 6304 0dd5 03       		.byte	3
 6305 0dd6 03       		.byte	3
 6306 0dd7 03       		.byte	3
 6307 0dd8 03       		.byte	3
 6308 0dd9 04       		.byte	4
 6309 0dda 05       		.byte	5
 6310 0ddb 06       		.byte	6
 6311 0ddc 03       		.byte	3
 6312 0ddd 07       		.byte	7
 6313 0dde 08       		.byte	8
 6314 0ddf 09       		.byte	9
 6315 0de0 03       		.byte	3
 6316 0de1 05       		.byte	5
 6317 0de2 03       		.byte	3
 6318 0de3 01       		.byte	1
 6319 0de4 02       		.byte	2
 6320 0de5 03       		.byte	3
 6321 0de6 03       		.byte	3
 6322 0de7 03       		.byte	3
 6323 0de8 09       		.byte	9
 6324 0de9 03       		.byte	3
 6325 0dea 05       		.byte	5
 6326 0deb 0A       		.byte	10
 6327 0dec 03       		.byte	3
 6328 0ded 000000   		.align	2
 6329              	.LC79:
 6330 0df0 02       		.byte	2
 6331 0df1 03       		.byte	3
 6332 0df2 08       		.byte	8
 6333 0df3 0B       		.byte	11
 6334 0df4 17       		.byte	23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 151


 6335 0df5 2C       		.byte	44
 6336 0df6 2D       		.byte	45
 6337 0df7 32       		.byte	50
 6338 0df8 35       		.byte	53
 6339 0df9 000000   		.align	2
 6340              	.LC80:
 6341 0dfc 02       		.byte	2
 6342 0dfd 03       		.byte	3
 6343 0dfe 05       		.byte	5
 6344 0dff 08       		.byte	8
 6345 0e00 0B       		.byte	11
 6346 0e01 17       		.byte	23
 6347 0e02 18       		.byte	24
 6348 0e03 1C       		.byte	28
 6349 0e04 1F       		.byte	31
 6350 0e05 20       		.byte	32
 6351 0e06 26       		.byte	38
 6352 0e07 2C       		.byte	44
 6353 0e08 2D       		.byte	45
 6354 0e09 2F       		.byte	47
 6355 0e0a 32       		.byte	50
 6356 0e0b 35       		.byte	53
 6357 0e0c 3D       		.byte	61
 6358 0e0d 47       		.byte	71
 6359              		.section	.text.manage_param_list,"ax",%progbits
 6360              		.align	2
 6361              		.global	manage_param_list
 6362              		.thumb
 6363              		.thumb_func
 6364              		.type	manage_param_list, %function
 6365              	manage_param_list:
 6366              	.LFB68:
 812:..\src/command_processing.c **** 
 813:..\src/command_processing.c **** //==============================================================================
 814:..\src/command_processing.c **** //                                                             MANAGE PARAM LIST
 815:..\src/command_processing.c **** //==============================================================================
 816:..\src/command_processing.c **** 
 817:..\src/command_processing.c **** void manage_param_list(uint16 index) {
 6367              		.loc 1 817 0
 6368              		.cfi_startproc
 6369              		@ args = 0, pretend = 0, frame = 1256
 6370              		@ frame_needed = 1, uses_anonymous_args = 0
 6371 0000 B0B5     		push	{r4, r5, r7, lr}
 6372              		.cfi_def_cfa_offset 16
 6373              		.cfi_offset 4, -16
 6374              		.cfi_offset 5, -12
 6375              		.cfi_offset 7, -8
 6376              		.cfi_offset 14, -4
 6377 0002 ADF59F6D 		sub	sp, sp, #1272
 6378              		.cfi_def_cfa_offset 1288
 6379 0006 04AF     		add	r7, sp, #16
 6380              		.cfi_def_cfa 7, 1272
 6381 0008 0246     		mov	r2, r0
 6382 000a BB1D     		adds	r3, r7, #6
 6383 000c 1A80     		strh	r2, [r3]	@ movhi
 818:..\src/command_processing.c ****     uint8 CYDATA i, j;
 819:..\src/command_processing.c ****     uint8 CYDATA sod;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 152


 820:..\src/command_processing.c ****     uint8 PARAM_IDX;
 821:..\src/command_processing.c ****     int16 aux_int16;
 822:..\src/command_processing.c ****     uint16 aux_uint16;
 823:..\src/command_processing.c ****     int32 aux_int32;
 824:..\src/command_processing.c ****     uint32 aux_uint32;
 825:..\src/command_processing.c ****     float aux_float;
 826:..\src/command_processing.c ****  
 827:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 6384              		.loc 1 827 0
 6385 000e 0023     		movs	r3, #0
 6386 0010 87F8DD34 		strb	r3, [r7, #1245]
 828:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 6387              		.loc 1 828 0
 6388 0014 0123     		movs	r3, #1
 6389 0016 87F8DC34 		strb	r3, [r7, #1244]
 829:..\src/command_processing.c ****     
 830:..\src/command_processing.c ****     // Arrays
 831:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem;   // c_mem is used for param reading
 6390              		.loc 1 831 0
 6391 001a 054B     		ldr	r3, .L340
 6392 001c C7F8E034 		str	r3, [r7, #1248]
 832:..\src/command_processing.c ****     
 833:..\src/command_processing.c ****     if (index){                         // Switch from c_mem to g_mem
 6393              		.loc 1 833 0
 6394 0020 BB1D     		adds	r3, r7, #6
 6395 0022 1B88     		ldrh	r3, [r3]
 6396 0024 002B     		cmp	r3, #0
 6397 0026 07D0     		beq	.L279
 834:..\src/command_processing.c ****         MEM_P = &g_mem;                 // g_mem is used for param setting
 6398              		.loc 1 834 0
 6399 0028 024B     		ldr	r3, .L340+4
 6400 002a C7F8E034 		str	r3, [r7, #1248]
 6401 002e 03E0     		b	.L341
 6402              	.L342:
 6403              		.align	2
 6404              	.L340:
 6405 0030 00000000 		.word	c_mem
 6406 0034 00000000 		.word	g_mem
 6407              	.L341:
 6408              	.L279:
 835:..\src/command_processing.c ****     }
 836:..\src/command_processing.c ****  
 837:..\src/command_processing.c ****     
 838:..\src/command_processing.c **** //------------------ BEGIN OF PARAMETERS VARIABLES --------------------//    
 839:..\src/command_processing.c ****     uint8* VAR_P[NUM_OF_PARAMS] = { 
 840:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6409              		.loc 1 840 0
 6410 0038 D7F8E034 		ldr	r3, [r7, #1248]
 6411 003c 03F1A002 		add	r2, r3, #160
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6412              		.loc 1 839 0
 6413 0040 07F56673 		add	r3, r7, #920
 6414 0044 1A60     		str	r2, [r3]
 841:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p),
 6415              		.loc 1 841 0
 6416 0046 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6417 004a 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 153


 6418 004c DB00     		lsls	r3, r3, #3
 6419 004e 9B1A     		subs	r3, r3, r2
 6420 0050 1B01     		lsls	r3, r3, #4
 6421 0052 B033     		adds	r3, r3, #176
 6422 0054 D7F8E024 		ldr	r2, [r7, #1248]
 6423 0058 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6424              		.loc 1 839 0
 6425 005a 07F56673 		add	r3, r7, #920
 6426 005e 5A60     		str	r2, [r3, #4]
 842:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p_c), 
 6427              		.loc 1 842 0
 6428 0060 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6429 0064 1346     		mov	r3, r2
 6430 0066 DB00     		lsls	r3, r3, #3
 6431 0068 9B1A     		subs	r3, r3, r2
 6432 006a 1B01     		lsls	r3, r3, #4
 6433 006c B833     		adds	r3, r3, #184
 6434 006e D7F8E024 		ldr	r2, [r7, #1248]
 6435 0072 1344     		add	r3, r3, r2
 6436 0074 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6437              		.loc 1 839 0
 6438 0076 07F56673 		add	r3, r7, #920
 6439 007a 9A60     		str	r2, [r3, #8]
 843:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activ),
 6440              		.loc 1 843 0
 6441 007c 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6442 0080 1346     		mov	r3, r2
 6443 0082 DB00     		lsls	r3, r3, #3
 6444 0084 9B1A     		subs	r3, r3, r2
 6445 0086 1B01     		lsls	r3, r3, #4
 6446 0088 E033     		adds	r3, r3, #224
 6447 008a D7F8E024 		ldr	r2, [r7, #1248]
 6448 008e 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6449              		.loc 1 839 0
 6450 0090 07F56673 		add	r3, r7, #920
 6451 0094 DA60     		str	r2, [r3, #12]
 844:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].input_mode),
 6452              		.loc 1 844 0
 6453 0096 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6454 009a 1346     		mov	r3, r2
 6455 009c DB00     		lsls	r3, r3, #3
 6456 009e 9B1A     		subs	r3, r3, r2
 6457 00a0 1B01     		lsls	r3, r3, #4
 6458 00a2 03F58473 		add	r3, r3, #264
 6459 00a6 D7F8E024 		ldr	r2, [r7, #1248]
 6460 00aa 1344     		add	r3, r3, r2
 6461 00ac 9A1D     		adds	r2, r3, #6
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6462              		.loc 1 839 0
 6463 00ae 07F56673 		add	r3, r7, #920
 6464 00b2 1A61     		str	r2, [r3, #16]
 845:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].control_mode), 
 6465              		.loc 1 845 0
 6466 00b4 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 154


 6467 00b8 1346     		mov	r3, r2
 6468 00ba DB00     		lsls	r3, r3, #3
 6469 00bc 9B1A     		subs	r3, r3, r2
 6470 00be 1B01     		lsls	r3, r3, #4
 6471 00c0 03F58473 		add	r3, r3, #264
 6472 00c4 D7F8E024 		ldr	r2, [r7, #1248]
 6473 00c8 1344     		add	r3, r3, r2
 6474 00ca DA1D     		adds	r2, r3, #7
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6475              		.loc 1 839 0
 6476 00cc 07F56673 		add	r3, r7, #920
 6477 00d0 5A61     		str	r2, [r3, #20]
 846:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].res),
 6478              		.loc 1 846 0
 6479 00d2 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6480 00d6 D7F8E014 		ldr	r1, [r7, #1248]
 6481 00da 1346     		mov	r3, r2
 6482 00dc DB00     		lsls	r3, r3, #3
 6483 00de 9B1A     		subs	r3, r3, r2
 6484 00e0 1B01     		lsls	r3, r3, #4
 6485 00e2 0B44     		add	r3, r3, r1
 6486 00e4 03F58873 		add	r3, r3, #272
 6487 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6488 00ea 1A46     		mov	r2, r3
 6489 00ec 1346     		mov	r3, r2
 6490 00ee 5B00     		lsls	r3, r3, #1
 6491 00f0 1344     		add	r3, r3, r2
 6492 00f2 1B01     		lsls	r3, r3, #4
 6493 00f4 03F5C873 		add	r3, r3, #400
 6494 00f8 D7F8E024 		ldr	r2, [r7, #1248]
 6495 00fc 1344     		add	r3, r3, r2
 6496 00fe 5A1D     		adds	r2, r3, #5
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6497              		.loc 1 839 0
 6498 0100 07F56673 		add	r3, r7, #920
 6499 0104 9A61     		str	r2, [r3, #24]
 847:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_off[0]),
 6500              		.loc 1 847 0
 6501 0106 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6502 010a D7F8E014 		ldr	r1, [r7, #1248]
 6503 010e 1346     		mov	r3, r2
 6504 0110 DB00     		lsls	r3, r3, #3
 6505 0112 9B1A     		subs	r3, r3, r2
 6506 0114 1B01     		lsls	r3, r3, #4
 6507 0116 0B44     		add	r3, r3, r1
 6508 0118 03F58873 		add	r3, r3, #272
 6509 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6510 011e 1A46     		mov	r2, r3
 6511 0120 1346     		mov	r3, r2
 6512 0122 5B00     		lsls	r3, r3, #1
 6513 0124 1344     		add	r3, r3, r2
 6514 0126 1B01     		lsls	r3, r3, #4
 6515 0128 03F5CC73 		add	r3, r3, #408
 6516 012c D7F8E024 		ldr	r2, [r7, #1248]
 6517 0130 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6518              		.loc 1 839 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 155


 6519 0132 07F56673 		add	r3, r7, #920
 6520 0136 DA61     		str	r2, [r3, #28]
 848:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_mult[0]),
 6521              		.loc 1 848 0
 6522 0138 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6523 013c D7F8E014 		ldr	r1, [r7, #1248]
 6524 0140 1346     		mov	r3, r2
 6525 0142 DB00     		lsls	r3, r3, #3
 6526 0144 9B1A     		subs	r3, r3, r2
 6527 0146 1B01     		lsls	r3, r3, #4
 6528 0148 0B44     		add	r3, r3, r1
 6529 014a 03F58873 		add	r3, r3, #272
 6530 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6531 0150 1A46     		mov	r2, r3
 6532 0152 1346     		mov	r3, r2
 6533 0154 5B00     		lsls	r3, r3, #1
 6534 0156 1344     		add	r3, r3, r2
 6535 0158 1B01     		lsls	r3, r3, #4
 6536 015a 03F5D073 		add	r3, r3, #416
 6537 015e D7F8E024 		ldr	r2, [r7, #1248]
 6538 0162 1344     		add	r3, r3, r2
 6539 0164 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6540              		.loc 1 839 0
 6541 0166 07F56673 		add	r3, r7, #920
 6542 016a 1A62     		str	r2, [r3, #32]
 849:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_flag),                                    //10
 6543              		.loc 1 849 0
 6544 016c 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6545 0170 1346     		mov	r3, r2
 6546 0172 DB00     		lsls	r3, r3, #3
 6547 0174 9B1A     		subs	r3, r3, r2
 6548 0176 1B01     		lsls	r3, r3, #4
 6549 0178 E033     		adds	r3, r3, #224
 6550 017a D7F8E024 		ldr	r2, [r7, #1248]
 6551 017e 1344     		add	r3, r3, r2
 6552 0180 DA1C     		adds	r2, r3, #3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6553              		.loc 1 839 0
 6554 0182 07F56673 		add	r3, r7, #920
 6555 0186 5A62     		str	r2, [r3, #36]
 850:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_inf), 
 6556              		.loc 1 850 0
 6557 0188 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6558 018c 1346     		mov	r3, r2
 6559 018e DB00     		lsls	r3, r3, #3
 6560 0190 9B1A     		subs	r3, r3, r2
 6561 0192 1B01     		lsls	r3, r3, #4
 6562 0194 E033     		adds	r3, r3, #224
 6563 0196 D7F8E024 		ldr	r2, [r7, #1248]
 6564 019a 1344     		add	r3, r3, r2
 6565 019c 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6566              		.loc 1 839 0
 6567 019e 07F56673 		add	r3, r7, #920
 6568 01a2 9A62     		str	r2, [r3, #40]
 851:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].max_step_neg),
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 156


 6569              		.loc 1 851 0
 6570 01a4 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6571 01a8 1346     		mov	r3, r2
 6572 01aa DB00     		lsls	r3, r3, #3
 6573 01ac 9B1A     		subs	r3, r3, r2
 6574 01ae 1B01     		lsls	r3, r3, #4
 6575 01b0 E833     		adds	r3, r3, #232
 6576 01b2 D7F8E024 		ldr	r2, [r7, #1248]
 6577 01b6 1344     		add	r3, r3, r2
 6578 01b8 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6579              		.loc 1 839 0
 6580 01ba 07F56673 		add	r3, r7, #920
 6581 01be DA62     		str	r2, [r3, #44]
 852:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].current_limit),
 6582              		.loc 1 852 0
 6583 01c0 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6584 01c4 1346     		mov	r3, r2
 6585 01c6 DB00     		lsls	r3, r3, #3
 6586 01c8 9B1A     		subs	r3, r3, r2
 6587 01ca 1B01     		lsls	r3, r3, #4
 6588 01cc 03F58473 		add	r3, r3, #264
 6589 01d0 D7F8E024 		ldr	r2, [r7, #1248]
 6590 01d4 1344     		add	r3, r3, r2
 6591 01d6 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6592              		.loc 1 839 0
 6593 01d8 07F56673 		add	r3, r7, #920
 6594 01dc 1A63     		str	r2, [r3, #48]
 853:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_threshold[0]),
 6595              		.loc 1 853 0
 6596 01de D7F8E034 		ldr	r3, [r7, #1248]
 6597 01e2 03F5F872 		add	r2, r3, #496
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6598              		.loc 1 839 0
 6599 01e6 07F56673 		add	r3, r7, #920
 6600 01ea 5A63     		str	r2, [r3, #52]
 854:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_calibration_flag),
 6601              		.loc 1 854 0
 6602 01ec D7F8E034 		ldr	r3, [r7, #1248]
 6603 01f0 03F2FD12 		addw	r2, r3, #509
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6604              		.loc 1 839 0
 6605 01f4 07F56673 		add	r3, r7, #920
 6606 01f8 9A63     		str	r2, [r3, #56]
 855:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_max_value[0]),
 6607              		.loc 1 855 0
 6608 01fa D7F8E034 		ldr	r3, [r7, #1248]
 6609 01fe 03F5FA72 		add	r2, r3, #500
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6610              		.loc 1 839 0
 6611 0202 07F56673 		add	r3, r7, #920
 6612 0206 DA63     		str	r2, [r3, #60]
 856:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_speed), 
 6613              		.loc 1 856 0
 6614 0208 D7F8E034 		ldr	r3, [r7, #1248]
 6615 020c 03F5FE72 		add	r2, r3, #508
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 157


 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6616              		.loc 1 839 0
 6617 0210 07F56673 		add	r3, r7, #920
 6618 0214 1A64     		str	r2, [r3, #64]
 857:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].double_encoder_on_off),
 6619              		.loc 1 857 0
 6620 0216 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6621 021a D7F8E014 		ldr	r1, [r7, #1248]
 6622 021e 1346     		mov	r3, r2
 6623 0220 DB00     		lsls	r3, r3, #3
 6624 0222 9B1A     		subs	r3, r3, r2
 6625 0224 1B01     		lsls	r3, r3, #4
 6626 0226 0B44     		add	r3, r3, r1
 6627 0228 03F58873 		add	r3, r3, #272
 6628 022c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6629 022e 1A46     		mov	r2, r3
 6630 0230 1346     		mov	r3, r2
 6631 0232 5B00     		lsls	r3, r3, #1
 6632 0234 1344     		add	r3, r3, r2
 6633 0236 1B01     		lsls	r3, r3, #4
 6634 0238 03F5D873 		add	r3, r3, #432
 6635 023c D7F8E024 		ldr	r2, [r7, #1248]
 6636 0240 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6637              		.loc 1 839 0
 6638 0242 07F56673 		add	r3, r7, #920
 6639 0246 5A64     		str	r2, [r3, #68]
 858:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].motor_handle_ratio),
 6640              		.loc 1 858 0
 6641 0248 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6642 024c D7F8E014 		ldr	r1, [r7, #1248]
 6643 0250 1346     		mov	r3, r2
 6644 0252 DB00     		lsls	r3, r3, #3
 6645 0254 9B1A     		subs	r3, r3, r2
 6646 0256 1B01     		lsls	r3, r3, #4
 6647 0258 0B44     		add	r3, r3, r1
 6648 025a 03F58873 		add	r3, r3, #272
 6649 025e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6650 0260 1A46     		mov	r2, r3
 6651 0262 1346     		mov	r3, r2
 6652 0264 5B00     		lsls	r3, r3, #1
 6653 0266 1344     		add	r3, r3, r2
 6654 0268 1B01     		lsls	r3, r3, #4
 6655 026a 03F5D873 		add	r3, r3, #432
 6656 026e D7F8E024 		ldr	r2, [r7, #1248]
 6657 0272 1344     		add	r3, r3, r2
 6658 0274 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6659              		.loc 1 839 0
 6660 0276 07F56673 		add	r3, r7, #920
 6661 027a 9A64     		str	r2, [r3, #72]
 859:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activate_pwm_rescaling),                          //20
 6662              		.loc 1 859 0
 6663 027c 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6664 0280 1346     		mov	r3, r2
 6665 0282 DB00     		lsls	r3, r3, #3
 6666 0284 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 158


 6667 0286 1B01     		lsls	r3, r3, #4
 6668 0288 E033     		adds	r3, r3, #224
 6669 028a D7F8E024 		ldr	r2, [r7, #1248]
 6670 028e 1344     		add	r3, r3, r2
 6671 0290 5A1C     		adds	r2, r3, #1
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6672              		.loc 1 839 0
 6673 0292 07F56673 		add	r3, r7, #920
 6674 0296 DA64     		str	r2, [r3, #76]
 860:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].curr_lookup[0]),
 6675              		.loc 1 860 0
 6676 0298 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6677 029c 1346     		mov	r3, r2
 6678 029e DB00     		lsls	r3, r3, #3
 6679 02a0 9B1A     		subs	r3, r3, r2
 6680 02a2 1B01     		lsls	r3, r3, #4
 6681 02a4 F033     		adds	r3, r3, #240
 6682 02a6 D7F8E024 		ldr	r2, [r7, #1248]
 6683 02aa 1344     		add	r3, r3, r2
 6684 02ac 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6685              		.loc 1 839 0
 6686 02ae 07F56673 		add	r3, r7, #920
 6687 02b2 1A65     		str	r2, [r3, #80]
 861:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.hw_maint_date),
 6688              		.loc 1 861 0
 6689 02b4 D7F8E034 		ldr	r3, [r7, #1248]
 6690 02b8 03F1A102 		add	r2, r3, #161
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6691              		.loc 1 839 0
 6692 02bc 07F56673 		add	r3, r7, #920
 6693 02c0 5A65     		str	r2, [r3, #84]
 862:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_pos), 
 6694              		.loc 1 862 0
 6695 02c2 D7F8E034 		ldr	r3, [r7, #1248]
 6696 02c6 03F52872 		add	r2, r3, #672
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6697              		.loc 1 839 0
 6698 02ca 07F56673 		add	r3, r7, #920
 6699 02ce 9A65     		str	r2, [r3, #88]
 863:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_delay),
 6700              		.loc 1 863 0
 6701 02d0 D7F8E034 		ldr	r3, [r7, #1248]
 6702 02d4 03F52972 		add	r2, r3, #676
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6703              		.loc 1 839 0
 6704 02d8 07F56673 		add	r3, r7, #920
 6705 02dc DA65     		str	r2, [r3, #92]
 864:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_vel),
 6706              		.loc 1 864 0
 6707 02de D7F8E034 		ldr	r3, [r7, #1248]
 6708 02e2 03F52A72 		add	r2, r3, #680
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6709              		.loc 1 839 0
 6710 02e6 07F56673 		add	r3, r7, #920
 6711 02ea 1A66     		str	r2, [r3, #96]
 865:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_position_flag),
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 159


 6712              		.loc 1 865 0
 6713 02ec D7F8E034 		ldr	r3, [r7, #1248]
 6714 02f0 03F52B72 		add	r2, r3, #684
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6715              		.loc 1 839 0
 6716 02f4 07F56673 		add	r3, r7, #920
 6717 02f8 5A66     		str	r2, [r3, #100]
 866:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.switch_emg), 
 6718              		.loc 1 866 0
 6719 02fa D7F8E034 		ldr	r3, [r7, #1248]
 6720 02fe 03F5FF72 		add	r2, r3, #510
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6721              		.loc 1 839 0
 6722 0302 07F56673 		add	r3, r7, #920
 6723 0306 9A66     		str	r2, [r3, #104]
 867:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.right_left),
 6724              		.loc 1 867 0
 6725 0308 D7F8E034 		ldr	r3, [r7, #1248]
 6726 030c 03F1A702 		add	r2, r3, #167
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6727              		.loc 1 839 0
 6728 0310 07F56673 		add	r3, r7, #920
 6729 0314 DA66     		str	r2, [r3, #108]
 868:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.read_imu_flag),
 6730              		.loc 1 868 0
 6731 0316 D7F8E034 		ldr	r3, [r7, #1248]
 6732 031a 03F50072 		add	r2, r3, #512
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6733              		.loc 1 839 0
 6734 031e 07F56673 		add	r3, r7, #920
 6735 0322 1A67     		str	r2, [r3, #112]
 869:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.read_exp_port_flag),                                   //30
 6736              		.loc 1 869 0
 6737 0324 D7F8E034 		ldr	r3, [r7, #1248]
 6738 0328 03F22622 		addw	r2, r3, #550
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6739              		.loc 1 839 0
 6740 032c 07F56673 		add	r3, r7, #920
 6741 0330 5A67     		str	r2, [r3, #116]
 870:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.reset_counters),
 6742              		.loc 1 870 0
 6743 0332 D7F8E034 		ldr	r3, [r7, #1248]
 6744 0336 03F1A802 		add	r2, r3, #168
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6745              		.loc 1 839 0
 6746 033a 07F56673 		add	r3, r7, #920
 6747 033e 9A67     		str	r2, [r3, #120]
 871:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.curr_time[0]),
 6748              		.loc 1 871 0
 6749 0340 D7F8E034 		ldr	r3, [r7, #1248]
 6750 0344 03F50872 		add	r2, r3, #544
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6751              		.loc 1 839 0
 6752 0348 07F56673 		add	r3, r7, #920
 6753 034c DA67     		str	r2, [r3, #124]
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.SPI_read_delay),
 6754              		.loc 1 872 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 160


 6755 034e D7F8E034 		ldr	r3, [r7, #1248]
 6756 0352 03F20122 		addw	r2, r3, #513
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6757              		.loc 1 839 0
 6758 0356 07F56673 		add	r3, r7, #920
 6759 035a C3F88020 		str	r2, [r3, #128]
 873:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.IMU_conf[0][0]),
 6760              		.loc 1 873 0
 6761 035e D7F8E034 		ldr	r3, [r7, #1248]
 6762 0362 03F20222 		addw	r2, r3, #514
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6763              		.loc 1 839 0
 6764 0366 07F56673 		add	r3, r7, #920
 6765 036a C3F88420 		str	r2, [r3, #132]
 874:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.user_id),
 6766              		.loc 1 874 0
 6767 036e D7F8E034 		ldr	r3, [r7, #1248]
 6768 0372 03F1AB02 		add	r2, r3, #171
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6769              		.loc 1 839 0
 6770 0376 07F56673 		add	r3, r7, #920
 6771 037a C3F88820 		str	r2, [r3, #136]
 875:..\src/command_processing.c ****         (uint8*)&(MEM_P->user[MEM_P->dev.user_id].user_code_string),
 6772              		.loc 1 875 0
 6773 037e D7F8E034 		ldr	r3, [r7, #1248]
 6774 0382 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 6775 0386 1233     		adds	r3, r3, #18
 6776 0388 5B01     		lsls	r3, r3, #5
 6777 038a D7F8E024 		ldr	r2, [r7, #1248]
 6778 038e 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6779              		.loc 1 839 0
 6780 0390 07F56673 		add	r3, r7, #920
 6781 0394 C3F88C20 		str	r2, [r3, #140]
 876:..\src/command_processing.c ****         
 877:..\src/command_processing.c ****         // GENERIC PARAMS
 878:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[MOTOR_IDX].encoder_line),			// other params of 1st motor
 6782              		.loc 1 878 0
 6783 0398 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6784 039c 1346     		mov	r3, r2
 6785 039e DB00     		lsls	r3, r3, #3
 6786 03a0 9B1A     		subs	r3, r3, r2
 6787 03a2 1B01     		lsls	r3, r3, #4
 6788 03a4 03F58873 		add	r3, r3, #272
 6789 03a8 D7F8E024 		ldr	r2, [r7, #1248]
 6790 03ac 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6791              		.loc 1 839 0
 6792 03ae 07F56673 		add	r3, r7, #920
 6793 03b2 C3F89020 		str	r2, [r3, #144]
 879:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].motor_driver_type),
 6794              		.loc 1 879 0
 6795 03b6 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6796 03ba 1346     		mov	r3, r2
 6797 03bc DB00     		lsls	r3, r3, #3
 6798 03be 9B1A     		subs	r3, r3, r2
 6799 03c0 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 161


 6800 03c2 E033     		adds	r3, r3, #224
 6801 03c4 D7F8E024 		ldr	r2, [r7, #1248]
 6802 03c8 1344     		add	r3, r3, r2
 6803 03ca 9A1C     		adds	r2, r3, #2
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6804              		.loc 1 839 0
 6805 03cc 07F56673 		add	r3, r7, #920
 6806 03d0 C3F89420 		str	r2, [r3, #148]
 880:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].pwm_rate_limiter),
 6807              		.loc 1 880 0
 6808 03d4 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6809 03d8 1346     		mov	r3, r2
 6810 03da DB00     		lsls	r3, r3, #3
 6811 03dc 9B1A     		subs	r3, r3, r2
 6812 03de 1B01     		lsls	r3, r3, #4
 6813 03e0 03F58873 		add	r3, r3, #272
 6814 03e4 D7F8E024 		ldr	r2, [r7, #1248]
 6815 03e8 1344     		add	r3, r3, r2
 6816 03ea 5A1C     		adds	r2, r3, #1
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6817              		.loc 1 839 0
 6818 03ec 07F56673 		add	r3, r7, #920
 6819 03f0 C3F89820 		str	r2, [r3, #152]
 881:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].not_revers_motor_flag), 	//40 
 6820              		.loc 1 881 0
 6821 03f4 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6822 03f8 1346     		mov	r3, r2
 6823 03fa DB00     		lsls	r3, r3, #3
 6824 03fc 9B1A     		subs	r3, r3, r2
 6825 03fe 1B01     		lsls	r3, r3, #4
 6826 0400 03F58873 		add	r3, r3, #272
 6827 0404 D7F8E024 		ldr	r2, [r7, #1248]
 6828 0408 1344     		add	r3, r3, r2
 6829 040a 9A1C     		adds	r2, r3, #2
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6830              		.loc 1 839 0
 6831 040c 07F56673 		add	r3, r7, #920
 6832 0410 C3F89C20 		str	r2, [r3, #156]
 882:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 6833              		.loc 1 882 0
 6834 0414 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6835 0418 D7F8E014 		ldr	r1, [r7, #1248]
 6836 041c 1346     		mov	r3, r2
 6837 041e DB00     		lsls	r3, r3, #3
 6838 0420 9B1A     		subs	r3, r3, r2
 6839 0422 1B01     		lsls	r3, r3, #4
 6840 0424 0B44     		add	r3, r3, r1
 6841 0426 03F58873 		add	r3, r3, #272
 6842 042a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6843 042c 1A46     		mov	r2, r3
 6844 042e 1346     		mov	r3, r2
 6845 0430 5B00     		lsls	r3, r3, #1
 6846 0432 1344     		add	r3, r3, r2
 6847 0434 1B01     		lsls	r3, r3, #4
 6848 0436 03F5D873 		add	r3, r3, #432
 6849 043a D7F8E024 		ldr	r2, [r7, #1248]
 6850 043e 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 162


 6851 0440 5A1C     		adds	r2, r3, #1
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6852              		.loc 1 839 0
 6853 0442 07F56673 		add	r3, r7, #920
 6854 0446 C3F8A020 		str	r2, [r3, #160]
 883:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].gears_params),        
 6855              		.loc 1 883 0
 6856 044a 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6857 044e D7F8E014 		ldr	r1, [r7, #1248]
 6858 0452 1346     		mov	r3, r2
 6859 0454 DB00     		lsls	r3, r3, #3
 6860 0456 9B1A     		subs	r3, r3, r2
 6861 0458 1B01     		lsls	r3, r3, #4
 6862 045a 0B44     		add	r3, r3, r1
 6863 045c 03F58873 		add	r3, r3, #272
 6864 0460 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6865 0462 1A46     		mov	r2, r3
 6866 0464 1346     		mov	r3, r2
 6867 0466 5B00     		lsls	r3, r3, #1
 6868 0468 1344     		add	r3, r3, r2
 6869 046a 1B01     		lsls	r3, r3, #4
 6870 046c 03F5D873 		add	r3, r3, #432
 6871 0470 D7F8E024 		ldr	r2, [r7, #1248]
 6872 0474 1344     		add	r3, r3, r2
 6873 0476 5A1D     		adds	r2, r3, #5
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6874              		.loc 1 839 0
 6875 0478 07F56673 		add	r3, r7, #920
 6876 047c C3F8A420 		str	r2, [r3, #164]
 884:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.use_2nd_motor_flag),					// second motor config and params
 6877              		.loc 1 884 0
 6878 0480 D7F8E034 		ldr	r3, [r7, #1248]
 6879 0484 03F1A902 		add	r2, r3, #169
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6880              		.loc 1 839 0
 6881 0488 07F56673 		add	r3, r7, #920
 6882 048c C3F8A820 		str	r2, [r3, #168]
 885:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p),
 6883              		.loc 1 885 0
 6884 0490 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 6885 0494 1346     		mov	r3, r2
 6886 0496 DB00     		lsls	r3, r3, #3
 6887 0498 9B1A     		subs	r3, r3, r2
 6888 049a 1B01     		lsls	r3, r3, #4
 6889 049c B033     		adds	r3, r3, #176
 6890 049e D7F8E024 		ldr	r2, [r7, #1248]
 6891 04a2 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6892              		.loc 1 839 0
 6893 04a4 07F56673 		add	r3, r7, #920
 6894 04a8 C3F8AC20 		str	r2, [r3, #172]
 886:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p_c), 
 6895              		.loc 1 886 0
 6896 04ac 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 6897 04b0 1346     		mov	r3, r2
 6898 04b2 DB00     		lsls	r3, r3, #3
 6899 04b4 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 163


 6900 04b6 1B01     		lsls	r3, r3, #4
 6901 04b8 B833     		adds	r3, r3, #184
 6902 04ba D7F8E024 		ldr	r2, [r7, #1248]
 6903 04be 1344     		add	r3, r3, r2
 6904 04c0 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6905              		.loc 1 839 0
 6906 04c2 07F56673 		add	r3, r7, #920
 6907 04c6 C3F8B020 		str	r2, [r3, #176]
 887:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activ),
 6908              		.loc 1 887 0
 6909 04ca 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 6910 04ce 1346     		mov	r3, r2
 6911 04d0 DB00     		lsls	r3, r3, #3
 6912 04d2 9B1A     		subs	r3, r3, r2
 6913 04d4 1B01     		lsls	r3, r3, #4
 6914 04d6 E033     		adds	r3, r3, #224
 6915 04d8 D7F8E024 		ldr	r2, [r7, #1248]
 6916 04dc 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6917              		.loc 1 839 0
 6918 04de 07F56673 		add	r3, r7, #920
 6919 04e2 C3F8B420 		str	r2, [r3, #180]
 888:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].input_mode),
 6920              		.loc 1 888 0
 6921 04e6 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 6922 04ea 1346     		mov	r3, r2
 6923 04ec DB00     		lsls	r3, r3, #3
 6924 04ee 9B1A     		subs	r3, r3, r2
 6925 04f0 1B01     		lsls	r3, r3, #4
 6926 04f2 03F58473 		add	r3, r3, #264
 6927 04f6 D7F8E024 		ldr	r2, [r7, #1248]
 6928 04fa 1344     		add	r3, r3, r2
 6929 04fc 9A1D     		adds	r2, r3, #6
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6930              		.loc 1 839 0
 6931 04fe 07F56673 		add	r3, r7, #920
 6932 0502 C3F8B820 		str	r2, [r3, #184]
 889:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].control_mode), 
 6933              		.loc 1 889 0
 6934 0506 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 6935 050a 1346     		mov	r3, r2
 6936 050c DB00     		lsls	r3, r3, #3
 6937 050e 9B1A     		subs	r3, r3, r2
 6938 0510 1B01     		lsls	r3, r3, #4
 6939 0512 03F58473 		add	r3, r3, #264
 6940 0516 D7F8E024 		ldr	r2, [r7, #1248]
 6941 051a 1344     		add	r3, r3, r2
 6942 051c DA1D     		adds	r2, r3, #7
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6943              		.loc 1 839 0
 6944 051e 07F56673 		add	r3, r7, #920
 6945 0522 C3F8BC20 		str	r2, [r3, #188]
 890:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].res),
 6946              		.loc 1 890 0
 6947 0526 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 6948 052a D7F8E014 		ldr	r1, [r7, #1248]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 164


 6949 052e 1346     		mov	r3, r2
 6950 0530 DB00     		lsls	r3, r3, #3
 6951 0532 9B1A     		subs	r3, r3, r2
 6952 0534 1B01     		lsls	r3, r3, #4
 6953 0536 0B44     		add	r3, r3, r1
 6954 0538 03F58873 		add	r3, r3, #272
 6955 053c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6956 053e 1A46     		mov	r2, r3
 6957 0540 1346     		mov	r3, r2
 6958 0542 5B00     		lsls	r3, r3, #1
 6959 0544 1344     		add	r3, r3, r2
 6960 0546 1B01     		lsls	r3, r3, #4
 6961 0548 03F5C873 		add	r3, r3, #400
 6962 054c D7F8E024 		ldr	r2, [r7, #1248]
 6963 0550 1344     		add	r3, r3, r2
 6964 0552 5A1D     		adds	r2, r3, #5
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6965              		.loc 1 839 0
 6966 0554 07F56673 		add	r3, r7, #920
 6967 0558 C3F8C020 		str	r2, [r3, #192]
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_off[0]),    //50
 6968              		.loc 1 891 0
 6969 055c 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 6970 0560 D7F8E014 		ldr	r1, [r7, #1248]
 6971 0564 1346     		mov	r3, r2
 6972 0566 DB00     		lsls	r3, r3, #3
 6973 0568 9B1A     		subs	r3, r3, r2
 6974 056a 1B01     		lsls	r3, r3, #4
 6975 056c 0B44     		add	r3, r3, r1
 6976 056e 03F58873 		add	r3, r3, #272
 6977 0572 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6978 0574 1A46     		mov	r2, r3
 6979 0576 1346     		mov	r3, r2
 6980 0578 5B00     		lsls	r3, r3, #1
 6981 057a 1344     		add	r3, r3, r2
 6982 057c 1B01     		lsls	r3, r3, #4
 6983 057e 03F5CC73 		add	r3, r3, #408
 6984 0582 D7F8E024 		ldr	r2, [r7, #1248]
 6985 0586 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6986              		.loc 1 839 0
 6987 0588 07F56673 		add	r3, r7, #920
 6988 058c C3F8C420 		str	r2, [r3, #196]
 892:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_mult[0]),
 6989              		.loc 1 892 0
 6990 0590 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 6991 0594 D7F8E014 		ldr	r1, [r7, #1248]
 6992 0598 1346     		mov	r3, r2
 6993 059a DB00     		lsls	r3, r3, #3
 6994 059c 9B1A     		subs	r3, r3, r2
 6995 059e 1B01     		lsls	r3, r3, #4
 6996 05a0 0B44     		add	r3, r3, r1
 6997 05a2 03F58873 		add	r3, r3, #272
 6998 05a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6999 05a8 1A46     		mov	r2, r3
 7000 05aa 1346     		mov	r3, r2
 7001 05ac 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 165


 7002 05ae 1344     		add	r3, r3, r2
 7003 05b0 1B01     		lsls	r3, r3, #4
 7004 05b2 03F5D073 		add	r3, r3, #416
 7005 05b6 D7F8E024 		ldr	r2, [r7, #1248]
 7006 05ba 1344     		add	r3, r3, r2
 7007 05bc 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7008              		.loc 1 839 0
 7009 05be 07F56673 		add	r3, r7, #920
 7010 05c2 C3F8C820 		str	r2, [r3, #200]
 893:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_flag),
 7011              		.loc 1 893 0
 7012 05c6 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7013 05ca 1346     		mov	r3, r2
 7014 05cc DB00     		lsls	r3, r3, #3
 7015 05ce 9B1A     		subs	r3, r3, r2
 7016 05d0 1B01     		lsls	r3, r3, #4
 7017 05d2 E033     		adds	r3, r3, #224
 7018 05d4 D7F8E024 		ldr	r2, [r7, #1248]
 7019 05d8 1344     		add	r3, r3, r2
 7020 05da DA1C     		adds	r2, r3, #3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7021              		.loc 1 839 0
 7022 05dc 07F56673 		add	r3, r7, #920
 7023 05e0 C3F8CC20 		str	r2, [r3, #204]
 894:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_inf), 
 7024              		.loc 1 894 0
 7025 05e4 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7026 05e8 1346     		mov	r3, r2
 7027 05ea DB00     		lsls	r3, r3, #3
 7028 05ec 9B1A     		subs	r3, r3, r2
 7029 05ee 1B01     		lsls	r3, r3, #4
 7030 05f0 E033     		adds	r3, r3, #224
 7031 05f2 D7F8E024 		ldr	r2, [r7, #1248]
 7032 05f6 1344     		add	r3, r3, r2
 7033 05f8 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7034              		.loc 1 839 0
 7035 05fa 07F56673 		add	r3, r7, #920
 7036 05fe C3F8D020 		str	r2, [r3, #208]
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].max_step_neg),
 7037              		.loc 1 895 0
 7038 0602 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7039 0606 1346     		mov	r3, r2
 7040 0608 DB00     		lsls	r3, r3, #3
 7041 060a 9B1A     		subs	r3, r3, r2
 7042 060c 1B01     		lsls	r3, r3, #4
 7043 060e E833     		adds	r3, r3, #232
 7044 0610 D7F8E024 		ldr	r2, [r7, #1248]
 7045 0614 1344     		add	r3, r3, r2
 7046 0616 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7047              		.loc 1 839 0
 7048 0618 07F56673 		add	r3, r7, #920
 7049 061c C3F8D420 		str	r2, [r3, #212]
 896:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].current_limit),
 7050              		.loc 1 896 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 166


 7051 0620 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7052 0624 1346     		mov	r3, r2
 7053 0626 DB00     		lsls	r3, r3, #3
 7054 0628 9B1A     		subs	r3, r3, r2
 7055 062a 1B01     		lsls	r3, r3, #4
 7056 062c 03F58473 		add	r3, r3, #264
 7057 0630 D7F8E024 		ldr	r2, [r7, #1248]
 7058 0634 1344     		add	r3, r3, r2
 7059 0636 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7060              		.loc 1 839 0
 7061 0638 07F56673 		add	r3, r7, #920
 7062 063c C3F8D820 		str	r2, [r3, #216]
 897:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].double_encoder_on_off),
 7063              		.loc 1 897 0
 7064 0640 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7065 0644 D7F8E014 		ldr	r1, [r7, #1248]
 7066 0648 1346     		mov	r3, r2
 7067 064a DB00     		lsls	r3, r3, #3
 7068 064c 9B1A     		subs	r3, r3, r2
 7069 064e 1B01     		lsls	r3, r3, #4
 7070 0650 0B44     		add	r3, r3, r1
 7071 0652 03F58873 		add	r3, r3, #272
 7072 0656 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7073 0658 1A46     		mov	r2, r3
 7074 065a 1346     		mov	r3, r2
 7075 065c 5B00     		lsls	r3, r3, #1
 7076 065e 1344     		add	r3, r3, r2
 7077 0660 1B01     		lsls	r3, r3, #4
 7078 0662 03F5D873 		add	r3, r3, #432
 7079 0666 D7F8E024 		ldr	r2, [r7, #1248]
 7080 066a 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7081              		.loc 1 839 0
 7082 066c 07F56673 		add	r3, r7, #920
 7083 0670 C3F8DC20 		str	r2, [r3, #220]
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].motor_handle_ratio),
 7084              		.loc 1 898 0
 7085 0674 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7086 0678 D7F8E014 		ldr	r1, [r7, #1248]
 7087 067c 1346     		mov	r3, r2
 7088 067e DB00     		lsls	r3, r3, #3
 7089 0680 9B1A     		subs	r3, r3, r2
 7090 0682 1B01     		lsls	r3, r3, #4
 7091 0684 0B44     		add	r3, r3, r1
 7092 0686 03F58873 		add	r3, r3, #272
 7093 068a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7094 068c 1A46     		mov	r2, r3
 7095 068e 1346     		mov	r3, r2
 7096 0690 5B00     		lsls	r3, r3, #1
 7097 0692 1344     		add	r3, r3, r2
 7098 0694 1B01     		lsls	r3, r3, #4
 7099 0696 03F5D873 		add	r3, r3, #432
 7100 069a D7F8E024 		ldr	r2, [r7, #1248]
 7101 069e 1344     		add	r3, r3, r2
 7102 06a0 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 167


 7103              		.loc 1 839 0
 7104 06a2 07F56673 		add	r3, r7, #920
 7105 06a6 C3F8E020 		str	r2, [r3, #224]
 899:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activate_pwm_rescaling),
 7106              		.loc 1 899 0
 7107 06aa 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7108 06ae 1346     		mov	r3, r2
 7109 06b0 DB00     		lsls	r3, r3, #3
 7110 06b2 9B1A     		subs	r3, r3, r2
 7111 06b4 1B01     		lsls	r3, r3, #4
 7112 06b6 E033     		adds	r3, r3, #224
 7113 06b8 D7F8E024 		ldr	r2, [r7, #1248]
 7114 06bc 1344     		add	r3, r3, r2
 7115 06be 5A1C     		adds	r2, r3, #1
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7116              		.loc 1 839 0
 7117 06c0 07F56673 		add	r3, r7, #920
 7118 06c4 C3F8E420 		str	r2, [r3, #228]
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].curr_lookup[0]),
 7119              		.loc 1 900 0
 7120 06c8 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7121 06cc 1346     		mov	r3, r2
 7122 06ce DB00     		lsls	r3, r3, #3
 7123 06d0 9B1A     		subs	r3, r3, r2
 7124 06d2 1B01     		lsls	r3, r3, #4
 7125 06d4 F033     		adds	r3, r3, #240
 7126 06d6 D7F8E024 		ldr	r2, [r7, #1248]
 7127 06da 1344     		add	r3, r3, r2
 7128 06dc 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7129              		.loc 1 839 0
 7130 06de 07F56673 		add	r3, r7, #920
 7131 06e2 C3F8E820 		str	r2, [r3, #232]
 901:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line),         //60
 7132              		.loc 1 901 0
 7133 06e6 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7134 06ea 1346     		mov	r3, r2
 7135 06ec DB00     		lsls	r3, r3, #3
 7136 06ee 9B1A     		subs	r3, r3, r2
 7137 06f0 1B01     		lsls	r3, r3, #4
 7138 06f2 03F58873 		add	r3, r3, #272
 7139 06f6 D7F8E024 		ldr	r2, [r7, #1248]
 7140 06fa 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7141              		.loc 1 839 0
 7142 06fc 07F56673 		add	r3, r7, #920
 7143 0700 C3F8EC20 		str	r2, [r3, #236]
 902:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].motor_driver_type),
 7144              		.loc 1 902 0
 7145 0704 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7146 0708 1346     		mov	r3, r2
 7147 070a DB00     		lsls	r3, r3, #3
 7148 070c 9B1A     		subs	r3, r3, r2
 7149 070e 1B01     		lsls	r3, r3, #4
 7150 0710 E033     		adds	r3, r3, #224
 7151 0712 D7F8E024 		ldr	r2, [r7, #1248]
 7152 0716 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 168


 7153 0718 9A1C     		adds	r2, r3, #2
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7154              		.loc 1 839 0
 7155 071a 07F56673 		add	r3, r7, #920
 7156 071e C3F8F020 		str	r2, [r3, #240]
 903:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pwm_rate_limiter),
 7157              		.loc 1 903 0
 7158 0722 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7159 0726 1346     		mov	r3, r2
 7160 0728 DB00     		lsls	r3, r3, #3
 7161 072a 9B1A     		subs	r3, r3, r2
 7162 072c 1B01     		lsls	r3, r3, #4
 7163 072e 03F58873 		add	r3, r3, #272
 7164 0732 D7F8E024 		ldr	r2, [r7, #1248]
 7165 0736 1344     		add	r3, r3, r2
 7166 0738 5A1C     		adds	r2, r3, #1
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7167              		.loc 1 839 0
 7168 073a 07F56673 		add	r3, r7, #920
 7169 073e C3F8F420 		str	r2, [r3, #244]
 904:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].not_revers_motor_flag),
 7170              		.loc 1 904 0
 7171 0742 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7172 0746 1346     		mov	r3, r2
 7173 0748 DB00     		lsls	r3, r3, #3
 7174 074a 9B1A     		subs	r3, r3, r2
 7175 074c 1B01     		lsls	r3, r3, #4
 7176 074e 03F58873 		add	r3, r3, #272
 7177 0752 D7F8E024 		ldr	r2, [r7, #1248]
 7178 0756 1344     		add	r3, r3, r2
 7179 0758 9A1C     		adds	r2, r3, #2
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7180              		.loc 1 839 0
 7181 075a 07F56673 		add	r3, r7, #920
 7182 075e C3F8F820 		str	r2, [r3, #248]
 905:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 7183              		.loc 1 905 0
 7184 0762 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7185 0766 D7F8E014 		ldr	r1, [r7, #1248]
 7186 076a 1346     		mov	r3, r2
 7187 076c DB00     		lsls	r3, r3, #3
 7188 076e 9B1A     		subs	r3, r3, r2
 7189 0770 1B01     		lsls	r3, r3, #4
 7190 0772 0B44     		add	r3, r3, r1
 7191 0774 03F58873 		add	r3, r3, #272
 7192 0778 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7193 077a 1A46     		mov	r2, r3
 7194 077c 1346     		mov	r3, r2
 7195 077e 5B00     		lsls	r3, r3, #1
 7196 0780 1344     		add	r3, r3, r2
 7197 0782 1B01     		lsls	r3, r3, #4
 7198 0784 03F5D873 		add	r3, r3, #432
 7199 0788 D7F8E024 		ldr	r2, [r7, #1248]
 7200 078c 1344     		add	r3, r3, r2
 7201 078e 5A1C     		adds	r2, r3, #1
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7202              		.loc 1 839 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 169


 7203 0790 07F56673 		add	r3, r7, #920
 7204 0794 C3F8FC20 		str	r2, [r3, #252]
 906:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].gears_params),
 7205              		.loc 1 906 0
 7206 0798 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7207 079c D7F8E014 		ldr	r1, [r7, #1248]
 7208 07a0 1346     		mov	r3, r2
 7209 07a2 DB00     		lsls	r3, r3, #3
 7210 07a4 9B1A     		subs	r3, r3, r2
 7211 07a6 1B01     		lsls	r3, r3, #4
 7212 07a8 0B44     		add	r3, r3, r1
 7213 07aa 03F58873 		add	r3, r3, #272
 7214 07ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7215 07b0 1A46     		mov	r2, r3
 7216 07b2 1346     		mov	r3, r2
 7217 07b4 5B00     		lsls	r3, r3, #1
 7218 07b6 1344     		add	r3, r3, r2
 7219 07b8 1B01     		lsls	r3, r3, #4
 7220 07ba 03F5D873 		add	r3, r3, #432
 7221 07be D7F8E024 		ldr	r2, [r7, #1248]
 7222 07c2 1344     		add	r3, r3, r2
 7223 07c4 5A1D     		adds	r2, r3, #5
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7224              		.loc 1 839 0
 7225 07c6 07F56673 		add	r3, r7, #920
 7226 07ca C3F80021 		str	r2, [r3, #256]
 907:..\src/command_processing.c ****         
 908:..\src/command_processing.c **** 		(uint8*)&(MEM_P->enc[0].Enc_raw_read_conf[0]),					// additional generic params
 7227              		.loc 1 908 0
 7228 07ce D7F8E034 		ldr	r3, [r7, #1248]
 7229 07d2 03F5C872 		add	r2, r3, #400
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7230              		.loc 1 839 0
 7231 07d6 07F56673 		add	r3, r7, #920
 7232 07da C3F80421 		str	r2, [r3, #260]
 909:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[1].Enc_raw_read_conf[0]),
 7233              		.loc 1 909 0
 7234 07de D7F8E034 		ldr	r3, [r7, #1248]
 7235 07e2 03F5E072 		add	r2, r3, #448
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7236              		.loc 1 839 0
 7237 07e6 07F56673 		add	r3, r7, #920
 7238 07ea C3F80821 		str	r2, [r3, #264]
 910:..\src/command_processing.c ****         (uint8*)&(MEM_P->exp.read_ADC_sensors_port_flag),		
 7239              		.loc 1 910 0
 7240 07ee D7F8E034 		ldr	r3, [r7, #1248]
 7241 07f2 03F22722 		addw	r2, r3, #551
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7242              		.loc 1 839 0
 7243 07f6 07F56673 		add	r3, r7, #920
 7244 07fa C3F80C21 		str	r2, [r3, #268]
 911:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[0]),
 7245              		.loc 1 911 0
 7246 07fe D7F8E034 		ldr	r3, [r7, #1248]
 7247 0802 03F50A72 		add	r2, r3, #552
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7248              		.loc 1 839 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 170


 7249 0806 07F56673 		add	r3, r7, #920
 7250 080a C3F81021 		str	r2, [r3, #272]
 912:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[6]),                          //70         
 7251              		.loc 1 912 0
 7252 080e D7F8E034 		ldr	r3, [r7, #1248]
 7253 0812 03F22E22 		addw	r2, r3, #558
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7254              		.loc 1 839 0
 7255 0816 07F56673 		add	r3, r7, #920
 7256 081a C3F81421 		str	r2, [r3, #276]
 913:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.dev_type),
 7257              		.loc 1 913 0
 7258 081e D7F8E034 		ldr	r3, [r7, #1248]
 7259 0822 03F1AC02 		add	r2, r3, #172
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7260              		.loc 1 839 0
 7261 0826 07F56673 		add	r3, r7, #920
 7262 082a C3F81821 		str	r2, [r3, #280]
 914:..\src/command_processing.c ****         
 915:..\src/command_processing.c ****         (uint8*)&(MEM_P->MS.slave_comm_active),                        // additional master params
 7263              		.loc 1 915 0
 7264 082e D7F8E034 		ldr	r3, [r7, #1248]
 7265 0832 03F52C72 		add	r2, r3, #688
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7266              		.loc 1 839 0
 7267 0836 07F56673 		add	r3, r7, #920
 7268 083a C3F81C21 		str	r2, [r3, #284]
 916:..\src/command_processing.c ****         (uint8*)&(MEM_P->MS.slave_ID),
 7269              		.loc 1 916 0
 7270 083e D7F8E034 		ldr	r3, [r7, #1248]
 7271 0842 03F2B122 		addw	r2, r3, #689
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7272              		.loc 1 839 0
 7273 0846 07F56673 		add	r3, r7, #920
 7274 084a C3F82021 		str	r2, [r3, #288]
 917:..\src/command_processing.c ****         
 918:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.max_residual_current),                     // additional feedback param
 7275              		.loc 1 918 0
 7276 084e D7F8E034 		ldr	r3, [r7, #1248]
 7277 0852 03F53072 		add	r2, r3, #704
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7278              		.loc 1 839 0
 7279 0856 07F56673 		add	r3, r7, #920
 7280 085a C3F82421 		str	r2, [r3, #292]
 919:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.maximum_pressure_kPa),
 7281              		.loc 1 919 0
 7282 085e D7F8E034 		ldr	r3, [r7, #1248]
 7283 0862 03F53172 		add	r2, r3, #708
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7284              		.loc 1 839 0
 7285 0866 07F56673 		add	r3, r7, #920
 7286 086a C3F82821 		str	r2, [r3, #296]
 920:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.prop_err_fb_gain)
 7287              		.loc 1 920 0
 7288 086e D7F8E034 		ldr	r3, [r7, #1248]
 7289 0872 03F53272 		add	r2, r3, #712
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 171


 7290              		.loc 1 839 0
 7291 0876 07F56673 		add	r3, r7, #920
 7292 087a C3F82C21 		str	r2, [r3, #300]
 921:..\src/command_processing.c ****     };
 922:..\src/command_processing.c ****     
 923:..\src/command_processing.c ****     uint8 TYPES[NUM_OF_PARAMS] = {
 7293              		.loc 1 923 0
 7294 087e 07F55373 		add	r3, r7, #844
 7295 0882 F44A     		ldr	r2, .L343
 7296 0884 1846     		mov	r0, r3
 7297 0886 1146     		mov	r1, r2
 7298 0888 4C23     		movs	r3, #76
 7299 088a 1A46     		mov	r2, r3
 7300 088c FFF7FEFF 		bl	memcpy
 924:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLOAT, TYPE_FLOAT, TYPE_FLAG, 
 925:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, TYPE_INT16, 
 926:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_INT32, TYPE_INT32, 
 927:..\src/command_processing.c ****         TYPE_INT16, TYPE_UINT16, TYPE_FLAG, TYPE_UINT32, 
 928:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_INT8, TYPE_FLAG, 
 929:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_UINT8, TYPE_INT32, TYPE_INT32,
 930:..\src/command_processing.c ****         TYPE_INT32, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, 
 931:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, 
 932:..\src/command_processing.c ****         TYPE_FLAG, TYPE_UINT8, TYPE_FLAG, TYPE_STRING,
 933:..\src/command_processing.c ****         
 934:..\src/command_processing.c ****         // GENERIC PARAMS
 935:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_UINT8, TYPE_FLAG,
 936:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT8, TYPE_FLAG, TYPE_FLOAT, 
 937:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG,
 938:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT16, TYPE_FLOAT, TYPE_FLAG, 
 939:..\src/command_processing.c ****         TYPE_INT32, TYPE_INT32, TYPE_INT16, TYPE_FLAG,
 940:..\src/command_processing.c ****         TYPE_INT8,  TYPE_FLAG, TYPE_FLOAT, TYPE_UINT8,
 941:..\src/command_processing.c ****         TYPE_FLAG,  TYPE_UINT8, TYPE_FLAG, TYPE_UINT8,
 942:..\src/command_processing.c ****         TYPE_INT8, TYPE_UINT8, TYPE_UINT8, TYPE_FLAG,
 943:..\src/command_processing.c ****         TYPE_UINT8, TYPE_UINT8, TYPE_FLAG, TYPE_FLAG,
 944:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT32, TYPE_FLOAT, TYPE_FLOAT      
 945:..\src/command_processing.c ****     };
 946:..\src/command_processing.c **** 
 947:..\src/command_processing.c ****     uint8 NUM_ITEMS[NUM_OF_PARAMS] = {
 7301              		.loc 1 947 0
 7302 0890 07F54073 		add	r3, r7, #768
 7303 0894 0122     		movs	r2, #1
 7304 0896 1A70     		strb	r2, [r3]
 7305 0898 07F54073 		add	r3, r7, #768
 7306 089c 0322     		movs	r2, #3
 7307 089e 5A70     		strb	r2, [r3, #1]
 7308 08a0 07F54073 		add	r3, r7, #768
 7309 08a4 0322     		movs	r2, #3
 7310 08a6 9A70     		strb	r2, [r3, #2]
 7311 08a8 07F54073 		add	r3, r7, #768
 7312 08ac 0122     		movs	r2, #1
 7313 08ae DA70     		strb	r2, [r3, #3]
 7314 08b0 07F54073 		add	r3, r7, #768
 7315 08b4 0122     		movs	r2, #1
 7316 08b6 1A71     		strb	r2, [r3, #4]
 7317 08b8 07F54073 		add	r3, r7, #768
 7318 08bc 0122     		movs	r2, #1
 7319 08be 5A71     		strb	r2, [r3, #5]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 172


 7320 08c0 07F54073 		add	r3, r7, #768
 7321 08c4 0322     		movs	r2, #3
 7322 08c6 9A71     		strb	r2, [r3, #6]
 7323 08c8 07F54073 		add	r3, r7, #768
 7324 08cc 0322     		movs	r2, #3
 7325 08ce DA71     		strb	r2, [r3, #7]
 7326 08d0 07F54073 		add	r3, r7, #768
 7327 08d4 0322     		movs	r2, #3
 7328 08d6 1A72     		strb	r2, [r3, #8]
 7329 08d8 07F54073 		add	r3, r7, #768
 7330 08dc 0122     		movs	r2, #1
 7331 08de 5A72     		strb	r2, [r3, #9]
 7332 08e0 07F54073 		add	r3, r7, #768
 7333 08e4 0222     		movs	r2, #2
 7334 08e6 9A72     		strb	r2, [r3, #10]
 7335 08e8 07F54073 		add	r3, r7, #768
 7336 08ec 0222     		movs	r2, #2
 7337 08ee DA72     		strb	r2, [r3, #11]
 7338 08f0 07F54073 		add	r3, r7, #768
 7339 08f4 0122     		movs	r2, #1
 7340 08f6 1A73     		strb	r2, [r3, #12]
 7341 08f8 07F54073 		add	r3, r7, #768
 7342 08fc 0222     		movs	r2, #2
 7343 08fe 5A73     		strb	r2, [r3, #13]
 7344 0900 07F54073 		add	r3, r7, #768
 7345 0904 0122     		movs	r2, #1
 7346 0906 9A73     		strb	r2, [r3, #14]
 7347 0908 07F54073 		add	r3, r7, #768
 7348 090c 0222     		movs	r2, #2
 7349 090e DA73     		strb	r2, [r3, #15]
 7350 0910 07F54073 		add	r3, r7, #768
 7351 0914 0122     		movs	r2, #1
 7352 0916 1A74     		strb	r2, [r3, #16]
 7353 0918 07F54073 		add	r3, r7, #768
 7354 091c 0122     		movs	r2, #1
 7355 091e 5A74     		strb	r2, [r3, #17]
 7356 0920 07F54073 		add	r3, r7, #768
 7357 0924 0122     		movs	r2, #1
 7358 0926 9A74     		strb	r2, [r3, #18]
 7359 0928 07F54073 		add	r3, r7, #768
 7360 092c 0122     		movs	r2, #1
 7361 092e DA74     		strb	r2, [r3, #19]
 7362 0930 07F54073 		add	r3, r7, #768
 7363 0934 0622     		movs	r2, #6
 7364 0936 1A75     		strb	r2, [r3, #20]
 7365 0938 07F54073 		add	r3, r7, #768
 7366 093c 0322     		movs	r2, #3
 7367 093e 5A75     		strb	r2, [r3, #21]
 7368 0940 07F54073 		add	r3, r7, #768
 7369 0944 0122     		movs	r2, #1
 7370 0946 9A75     		strb	r2, [r3, #22]
 7371 0948 07F54073 		add	r3, r7, #768
 7372 094c 0122     		movs	r2, #1
 7373 094e DA75     		strb	r2, [r3, #23]
 7374 0950 07F54073 		add	r3, r7, #768
 7375 0954 0122     		movs	r2, #1
 7376 0956 1A76     		strb	r2, [r3, #24]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 173


 7377 0958 07F54073 		add	r3, r7, #768
 7378 095c 0122     		movs	r2, #1
 7379 095e 5A76     		strb	r2, [r3, #25]
 7380 0960 07F54073 		add	r3, r7, #768
 7381 0964 0122     		movs	r2, #1
 7382 0966 9A76     		strb	r2, [r3, #26]
 7383 0968 07F54073 		add	r3, r7, #768
 7384 096c 0122     		movs	r2, #1
 7385 096e DA76     		strb	r2, [r3, #27]
 7386 0970 07F54073 		add	r3, r7, #768
 7387 0974 0122     		movs	r2, #1
 7388 0976 1A77     		strb	r2, [r3, #28]
 7389 0978 07F54073 		add	r3, r7, #768
 7390 097c 0122     		movs	r2, #1
 7391 097e 5A77     		strb	r2, [r3, #29]
 7392 0980 07F54073 		add	r3, r7, #768
 7393 0984 0122     		movs	r2, #1
 7394 0986 9A77     		strb	r2, [r3, #30]
 7395 0988 07F54073 		add	r3, r7, #768
 7396 098c 0622     		movs	r2, #6
 7397 098e DA77     		strb	r2, [r3, #31]
 7398 0990 07F54073 		add	r3, r7, #768
 7399 0994 0122     		movs	r2, #1
 7400 0996 83F82020 		strb	r2, [r3, #32]
 7401 099a 07F54073 		add	r3, r7, #768
 7402 099e 0522     		movs	r2, #5
 7403 09a0 83F82120 		strb	r2, [r3, #33]
 7404 09a4 07F54073 		add	r3, r7, #768
 7405 09a8 0122     		movs	r2, #1
 7406 09aa 83F82220 		strb	r2, [r3, #34]
 7407 09ae 07F54073 		add	r3, r7, #768
 7408 09b2 0622     		movs	r2, #6
 7409 09b4 83F82320 		strb	r2, [r3, #35]
 7410 09b8 07F54073 		add	r3, r7, #768
 7411 09bc 0122     		movs	r2, #1
 7412 09be 83F82420 		strb	r2, [r3, #36]
 7413 09c2 07F54073 		add	r3, r7, #768
 7414 09c6 0122     		movs	r2, #1
 7415 09c8 83F82520 		strb	r2, [r3, #37]
 7416 09cc 07F54073 		add	r3, r7, #768
 7417 09d0 0122     		movs	r2, #1
 7418 09d2 83F82620 		strb	r2, [r3, #38]
 7419 09d6 07F54073 		add	r3, r7, #768
 7420 09da 0122     		movs	r2, #1
 7421 09dc 83F82720 		strb	r2, [r3, #39]
 7422 09e0 07F54073 		add	r3, r7, #768
 7423 09e4 0322     		movs	r2, #3
 7424 09e6 83F82820 		strb	r2, [r3, #40]
 7425 09ea 07F54073 		add	r3, r7, #768
 7426 09ee 0322     		movs	r2, #3
 7427 09f0 83F82920 		strb	r2, [r3, #41]
 7428 09f4 07F54073 		add	r3, r7, #768
 7429 09f8 0122     		movs	r2, #1
 7430 09fa 83F82A20 		strb	r2, [r3, #42]
 7431 09fe 07F54073 		add	r3, r7, #768
 7432 0a02 0322     		movs	r2, #3
 7433 0a04 83F82B20 		strb	r2, [r3, #43]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 174


 7434 0a08 07F54073 		add	r3, r7, #768
 7435 0a0c 0322     		movs	r2, #3
 7436 0a0e 83F82C20 		strb	r2, [r3, #44]
 7437 0a12 07F54073 		add	r3, r7, #768
 7438 0a16 0122     		movs	r2, #1
 7439 0a18 83F82D20 		strb	r2, [r3, #45]
 7440 0a1c 07F54073 		add	r3, r7, #768
 7441 0a20 0122     		movs	r2, #1
 7442 0a22 83F82E20 		strb	r2, [r3, #46]
 7443 0a26 07F54073 		add	r3, r7, #768
 7444 0a2a 0122     		movs	r2, #1
 7445 0a2c 83F82F20 		strb	r2, [r3, #47]
 7446 0a30 07F54073 		add	r3, r7, #768
 7447 0a34 0322     		movs	r2, #3
 7448 0a36 83F83020 		strb	r2, [r3, #48]
 7449 0a3a 07F54073 		add	r3, r7, #768
 7450 0a3e 0322     		movs	r2, #3
 7451 0a40 83F83120 		strb	r2, [r3, #49]
 7452 0a44 07F54073 		add	r3, r7, #768
 7453 0a48 0322     		movs	r2, #3
 7454 0a4a 83F83220 		strb	r2, [r3, #50]
 7455 0a4e 07F54073 		add	r3, r7, #768
 7456 0a52 0122     		movs	r2, #1
 7457 0a54 83F83320 		strb	r2, [r3, #51]
 7458 0a58 07F54073 		add	r3, r7, #768
 7459 0a5c 0222     		movs	r2, #2
 7460 0a5e 83F83420 		strb	r2, [r3, #52]
 7461 0a62 07F54073 		add	r3, r7, #768
 7462 0a66 0222     		movs	r2, #2
 7463 0a68 83F83520 		strb	r2, [r3, #53]
 7464 0a6c 07F54073 		add	r3, r7, #768
 7465 0a70 0122     		movs	r2, #1
 7466 0a72 83F83620 		strb	r2, [r3, #54]
 7467 0a76 07F54073 		add	r3, r7, #768
 7468 0a7a 0122     		movs	r2, #1
 7469 0a7c 83F83720 		strb	r2, [r3, #55]
 7470 0a80 07F54073 		add	r3, r7, #768
 7471 0a84 0122     		movs	r2, #1
 7472 0a86 83F83820 		strb	r2, [r3, #56]
 7473 0a8a 07F54073 		add	r3, r7, #768
 7474 0a8e 0122     		movs	r2, #1
 7475 0a90 83F83920 		strb	r2, [r3, #57]
 7476 0a94 07F54073 		add	r3, r7, #768
 7477 0a98 0622     		movs	r2, #6
 7478 0a9a 83F83A20 		strb	r2, [r3, #58]
 7479 0a9e 07F54073 		add	r3, r7, #768
 7480 0aa2 0122     		movs	r2, #1
 7481 0aa4 83F83B20 		strb	r2, [r3, #59]
 7482 0aa8 07F54073 		add	r3, r7, #768
 7483 0aac 0122     		movs	r2, #1
 7484 0aae 83F83C20 		strb	r2, [r3, #60]
 7485 0ab2 07F54073 		add	r3, r7, #768
 7486 0ab6 0122     		movs	r2, #1
 7487 0ab8 83F83D20 		strb	r2, [r3, #61]
 7488 0abc 07F54073 		add	r3, r7, #768
 7489 0ac0 0122     		movs	r2, #1
 7490 0ac2 83F83E20 		strb	r2, [r3, #62]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 175


 7491 0ac6 07F54073 		add	r3, r7, #768
 7492 0aca 0322     		movs	r2, #3
 7493 0acc 83F83F20 		strb	r2, [r3, #63]
 7494 0ad0 07F54073 		add	r3, r7, #768
 7495 0ad4 0322     		movs	r2, #3
 7496 0ad6 83F84020 		strb	r2, [r3, #64]
 948:..\src/command_processing.c ****         1, 3, 3, 1, 
 949:..\src/command_processing.c ****         1, 1, 3, 3,
 950:..\src/command_processing.c ****         3, 1, 2, 2, 
 951:..\src/command_processing.c ****         1, 2, 1, 2,
 952:..\src/command_processing.c ****         1, 1, 1, 1, 
 953:..\src/command_processing.c ****         6, 3, 1, 1,
 954:..\src/command_processing.c ****         1, 1, 1, 1, 
 955:..\src/command_processing.c ****         1, 1, 1, 6,
 956:..\src/command_processing.c ****         1, 5, 1, 6,
 957:..\src/command_processing.c ****         
 958:..\src/command_processing.c ****         // GENERIC PARAMS
 959:..\src/command_processing.c ****         1, 1, 1, 1,
 960:..\src/command_processing.c ****         3, 3, 1, 3,
 961:..\src/command_processing.c ****         3, 1, 1, 1,
 962:..\src/command_processing.c ****         3, 3, 3, 1,
 963:..\src/command_processing.c ****         2, 2, 1, 1,
 964:..\src/command_processing.c ****         1, 1, 6, 1,
 965:..\src/command_processing.c ****         1, 1, 1, 3, 
 966:..\src/command_processing.c ****         3, N_Encoder_Line_Connected[0], N_Encoder_Line_Connected[1], 1,
 7497              		.loc 1 966 0
 7498 0ada 5F4B     		ldr	r3, .L343+4
 7499 0adc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 947:..\src/command_processing.c ****         1, 3, 3, 1, 
 7500              		.loc 1 947 0
 7501 0ade 07F54073 		add	r3, r7, #768
 7502 0ae2 83F84120 		strb	r2, [r3, #65]
 7503              		.loc 1 966 0
 7504 0ae6 5C4B     		ldr	r3, .L343+4
 7505 0ae8 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 947:..\src/command_processing.c ****         1, 3, 3, 1, 
 7506              		.loc 1 947 0
 7507 0aea 07F54073 		add	r3, r7, #768
 7508 0aee 83F84220 		strb	r2, [r3, #66]
 7509 0af2 07F54073 		add	r3, r7, #768
 7510 0af6 0122     		movs	r2, #1
 7511 0af8 83F84320 		strb	r2, [r3, #67]
 7512 0afc 07F54073 		add	r3, r7, #768
 7513 0b00 0622     		movs	r2, #6
 7514 0b02 83F84420 		strb	r2, [r3, #68]
 7515 0b06 07F54073 		add	r3, r7, #768
 7516 0b0a 0622     		movs	r2, #6
 7517 0b0c 83F84520 		strb	r2, [r3, #69]
 7518 0b10 07F54073 		add	r3, r7, #768
 7519 0b14 0122     		movs	r2, #1
 7520 0b16 83F84620 		strb	r2, [r3, #70]
 7521 0b1a 07F54073 		add	r3, r7, #768
 7522 0b1e 0122     		movs	r2, #1
 7523 0b20 83F84720 		strb	r2, [r3, #71]
 7524 0b24 07F54073 		add	r3, r7, #768
 7525 0b28 0122     		movs	r2, #1
 7526 0b2a 83F84820 		strb	r2, [r3, #72]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 176


 7527 0b2e 07F54073 		add	r3, r7, #768
 7528 0b32 0122     		movs	r2, #1
 7529 0b34 83F84920 		strb	r2, [r3, #73]
 7530 0b38 07F54073 		add	r3, r7, #768
 7531 0b3c 0122     		movs	r2, #1
 7532 0b3e 83F84A20 		strb	r2, [r3, #74]
 7533 0b42 07F54073 		add	r3, r7, #768
 7534 0b46 0122     		movs	r2, #1
 7535 0b48 83F84B20 		strb	r2, [r3, #75]
 967:..\src/command_processing.c ****         6, 6, 1, 1,
 968:..\src/command_processing.c ****         1, 1, 1, 1
 969:..\src/command_processing.c ****     };
 970:..\src/command_processing.c ****     
 971:..\src/command_processing.c ****     uint8 NUM_STRUCT[NUM_OF_PARAMS] = {     // see STRUCTURES INDEX in globals.h
 7536              		.loc 1 971 0
 7537 0b4c 07F52D73 		add	r3, r7, #692
 7538 0b50 0022     		movs	r2, #0
 7539 0b52 1A70     		strb	r2, [r3]
 7540 0b54 97F8DD34 		ldrb	r3, [r7, #1245]
 7541 0b58 0A33     		adds	r3, r3, #10
 7542 0b5a DAB2     		uxtb	r2, r3
 7543 0b5c 07F52D73 		add	r3, r7, #692
 7544 0b60 5A70     		strb	r2, [r3, #1]
 7545 0b62 97F8DD34 		ldrb	r3, [r7, #1245]
 7546 0b66 0A33     		adds	r3, r3, #10
 7547 0b68 DAB2     		uxtb	r2, r3
 7548 0b6a 07F52D73 		add	r3, r7, #692
 7549 0b6e 9A70     		strb	r2, [r3, #2]
 7550 0b70 97F8DD34 		ldrb	r3, [r7, #1245]
 7551 0b74 0A33     		adds	r3, r3, #10
 7552 0b76 DAB2     		uxtb	r2, r3
 7553 0b78 07F52D73 		add	r3, r7, #692
 7554 0b7c DA70     		strb	r2, [r3, #3]
 7555 0b7e 97F8DD34 		ldrb	r3, [r7, #1245]
 7556 0b82 0A33     		adds	r3, r3, #10
 7557 0b84 DAB2     		uxtb	r2, r3
 7558 0b86 07F52D73 		add	r3, r7, #692
 7559 0b8a 1A71     		strb	r2, [r3, #4]
 7560 0b8c 97F8DD34 		ldrb	r3, [r7, #1245]
 7561 0b90 0A33     		adds	r3, r3, #10
 7562 0b92 DAB2     		uxtb	r2, r3
 7563 0b94 07F52D73 		add	r3, r7, #692
 7564 0b98 5A71     		strb	r2, [r3, #5]
 972:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 973:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), 
 7565              		.loc 1 973 0
 7566 0b9a 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 7567 0b9e D7F8E014 		ldr	r1, [r7, #1248]
 7568 0ba2 1346     		mov	r3, r2
 7569 0ba4 DB00     		lsls	r3, r3, #3
 7570 0ba6 9B1A     		subs	r3, r3, r2
 7571 0ba8 1B01     		lsls	r3, r3, #4
 7572 0baa 0B44     		add	r3, r3, r1
 7573 0bac 03F58873 		add	r3, r3, #272
 7574 0bb0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7575              		.loc 1 971 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 177


 7576 0bb2 1433     		adds	r3, r3, #20
 7577 0bb4 DAB2     		uxtb	r2, r3
 7578 0bb6 07F52D73 		add	r3, r7, #692
 7579 0bba 9A71     		strb	r2, [r3, #6]
 7580              		.loc 1 973 0
 7581 0bbc 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 7582 0bc0 D7F8E014 		ldr	r1, [r7, #1248]
 7583 0bc4 1346     		mov	r3, r2
 7584 0bc6 DB00     		lsls	r3, r3, #3
 7585 0bc8 9B1A     		subs	r3, r3, r2
 7586 0bca 1B01     		lsls	r3, r3, #4
 7587 0bcc 0B44     		add	r3, r3, r1
 7588 0bce 03F58873 		add	r3, r3, #272
 7589 0bd2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7590              		.loc 1 971 0
 7591 0bd4 1433     		adds	r3, r3, #20
 7592 0bd6 DAB2     		uxtb	r2, r3
 7593 0bd8 07F52D73 		add	r3, r7, #692
 7594 0bdc DA71     		strb	r2, [r3, #7]
 974:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7595              		.loc 1 974 0
 7596 0bde 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 7597 0be2 D7F8E014 		ldr	r1, [r7, #1248]
 7598 0be6 1346     		mov	r3, r2
 7599 0be8 DB00     		lsls	r3, r3, #3
 7600 0bea 9B1A     		subs	r3, r3, r2
 7601 0bec 1B01     		lsls	r3, r3, #4
 7602 0bee 0B44     		add	r3, r3, r1
 7603 0bf0 03F58873 		add	r3, r3, #272
 7604 0bf4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7605              		.loc 1 971 0
 7606 0bf6 1433     		adds	r3, r3, #20
 7607 0bf8 DAB2     		uxtb	r2, r3
 7608 0bfa 07F52D73 		add	r3, r7, #692
 7609 0bfe 1A72     		strb	r2, [r3, #8]
 7610 0c00 97F8DD34 		ldrb	r3, [r7, #1245]
 7611 0c04 0A33     		adds	r3, r3, #10
 7612 0c06 DAB2     		uxtb	r2, r3
 7613 0c08 07F52D73 		add	r3, r7, #692
 7614 0c0c 5A72     		strb	r2, [r3, #9]
 7615 0c0e 97F8DD34 		ldrb	r3, [r7, #1245]
 7616 0c12 0A33     		adds	r3, r3, #10
 7617 0c14 DAB2     		uxtb	r2, r3
 7618 0c16 07F52D73 		add	r3, r7, #692
 7619 0c1a 9A72     		strb	r2, [r3, #10]
 7620 0c1c 97F8DD34 		ldrb	r3, [r7, #1245]
 7621 0c20 0A33     		adds	r3, r3, #10
 7622 0c22 DAB2     		uxtb	r2, r3
 7623 0c24 07F52D73 		add	r3, r7, #692
 7624 0c28 DA72     		strb	r2, [r3, #11]
 7625 0c2a 97F8DD34 		ldrb	r3, [r7, #1245]
 7626 0c2e 0A33     		adds	r3, r3, #10
 7627 0c30 DAB2     		uxtb	r2, r3
 7628 0c32 07F52D73 		add	r3, r7, #692
 7629 0c36 1A73     		strb	r2, [r3, #12]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 178


 7630 0c38 07F52D73 		add	r3, r7, #692
 7631 0c3c 1E22     		movs	r2, #30
 7632 0c3e 5A73     		strb	r2, [r3, #13]
 7633 0c40 07F52D73 		add	r3, r7, #692
 7634 0c44 1E22     		movs	r2, #30
 7635 0c46 9A73     		strb	r2, [r3, #14]
 7636 0c48 07F52D73 		add	r3, r7, #692
 7637 0c4c 1E22     		movs	r2, #30
 7638 0c4e DA73     		strb	r2, [r3, #15]
 7639 0c50 04E0     		b	.L344
 7640              	.L345:
 7641 0c52 00BF     		.align	2
 7642              	.L343:
 7643 0c54 80040000 		.word	.LC0
 7644 0c58 00000000 		.word	N_Encoder_Line_Connected
 7645              	.L344:
 7646 0c5c 07F52D73 		add	r3, r7, #692
 7647 0c60 1E22     		movs	r2, #30
 7648 0c62 1A74     		strb	r2, [r3, #16]
 975:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_EMG, ST_EMG, ST_EMG, 
 976:..\src/command_processing.c ****         ST_EMG, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_I
 7649              		.loc 1 976 0
 7650 0c64 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 7651 0c68 D7F8E014 		ldr	r1, [r7, #1248]
 7652 0c6c 1346     		mov	r3, r2
 7653 0c6e DB00     		lsls	r3, r3, #3
 7654 0c70 9B1A     		subs	r3, r3, r2
 7655 0c72 1B01     		lsls	r3, r3, #4
 7656 0c74 0B44     		add	r3, r3, r1
 7657 0c76 03F58873 		add	r3, r3, #272
 7658 0c7a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7659              		.loc 1 971 0
 7660 0c7c 1433     		adds	r3, r3, #20
 7661 0c7e DAB2     		uxtb	r2, r3
 7662 0c80 07F52D73 		add	r3, r7, #692
 7663 0c84 5A74     		strb	r2, [r3, #17]
 7664              		.loc 1 976 0
 7665 0c86 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 7666 0c8a D7F8E014 		ldr	r1, [r7, #1248]
 7667 0c8e 1346     		mov	r3, r2
 7668 0c90 DB00     		lsls	r3, r3, #3
 7669 0c92 9B1A     		subs	r3, r3, r2
 7670 0c94 1B01     		lsls	r3, r3, #4
 7671 0c96 0B44     		add	r3, r3, r1
 7672 0c98 03F58873 		add	r3, r3, #272
 7673 0c9c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7674              		.loc 1 971 0
 7675 0c9e 1433     		adds	r3, r3, #20
 7676 0ca0 DAB2     		uxtb	r2, r3
 7677 0ca2 07F52D73 		add	r3, r7, #692
 7678 0ca6 9A74     		strb	r2, [r3, #18]
 7679 0ca8 97F8DD34 		ldrb	r3, [r7, #1245]
 7680 0cac 0A33     		adds	r3, r3, #10
 7681 0cae DAB2     		uxtb	r2, r3
 7682 0cb0 07F52D73 		add	r3, r7, #692
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 179


 7683 0cb4 DA74     		strb	r2, [r3, #19]
 7684 0cb6 97F8DD34 		ldrb	r3, [r7, #1245]
 7685 0cba 0A33     		adds	r3, r3, #10
 7686 0cbc DAB2     		uxtb	r2, r3
 7687 0cbe 07F52D73 		add	r3, r7, #692
 7688 0cc2 1A75     		strb	r2, [r3, #20]
 7689 0cc4 07F52D73 		add	r3, r7, #692
 7690 0cc8 0022     		movs	r2, #0
 7691 0cca 5A75     		strb	r2, [r3, #21]
 7692 0ccc 07F52D73 		add	r3, r7, #692
 7693 0cd0 4622     		movs	r2, #70
 7694 0cd2 9A75     		strb	r2, [r3, #22]
 7695 0cd4 07F52D73 		add	r3, r7, #692
 7696 0cd8 4622     		movs	r2, #70
 7697 0cda DA75     		strb	r2, [r3, #23]
 7698 0cdc 07F52D73 		add	r3, r7, #692
 7699 0ce0 4622     		movs	r2, #70
 7700 0ce2 1A76     		strb	r2, [r3, #24]
 7701 0ce4 07F52D73 		add	r3, r7, #692
 7702 0ce8 4622     		movs	r2, #70
 7703 0cea 5A76     		strb	r2, [r3, #25]
 7704 0cec 07F52D73 		add	r3, r7, #692
 7705 0cf0 1E22     		movs	r2, #30
 7706 0cf2 9A76     		strb	r2, [r3, #26]
 7707 0cf4 07F52D73 		add	r3, r7, #692
 7708 0cf8 0022     		movs	r2, #0
 7709 0cfa DA76     		strb	r2, [r3, #27]
 7710 0cfc 07F52D73 		add	r3, r7, #692
 7711 0d00 2822     		movs	r2, #40
 7712 0d02 1A77     		strb	r2, [r3, #28]
 7713 0d04 07F52D73 		add	r3, r7, #692
 7714 0d08 3222     		movs	r2, #50
 7715 0d0a 5A77     		strb	r2, [r3, #29]
 7716 0d0c 07F52D73 		add	r3, r7, #692
 7717 0d10 0022     		movs	r2, #0
 7718 0d12 9A77     		strb	r2, [r3, #30]
 7719 0d14 07F52D73 		add	r3, r7, #692
 7720 0d18 3222     		movs	r2, #50
 7721 0d1a DA77     		strb	r2, [r3, #31]
 7722 0d1c 07F52D73 		add	r3, r7, #692
 7723 0d20 2822     		movs	r2, #40
 7724 0d22 83F82020 		strb	r2, [r3, #32]
 7725 0d26 07F52D73 		add	r3, r7, #692
 7726 0d2a 2822     		movs	r2, #40
 7727 0d2c 83F82120 		strb	r2, [r3, #33]
 7728 0d30 07F52D73 		add	r3, r7, #692
 7729 0d34 0022     		movs	r2, #0
 7730 0d36 83F82220 		strb	r2, [r3, #34]
 977:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_DEVICE, ST_SH_SPEC, ST_SH_SPEC,
 978:..\src/command_processing.c ****         ST_SH_SPEC, ST_SH_SPEC, ST_EMG, ST_DEVICE,
 979:..\src/command_processing.c ****         ST_IMU, ST_EXPANSION, ST_DEVICE, ST_EXPANSION,
 980:..\src/command_processing.c ****         ST_IMU, ST_IMU, ST_DEVICE, ST_USER+(MEM_P->dev.user_id),
 7731              		.loc 1 980 0
 7732 0d3a D7F8E034 		ldr	r3, [r7, #1248]
 7733 0d3e 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7734              		.loc 1 971 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 180


 7735 0d42 3C33     		adds	r3, r3, #60
 7736 0d44 DAB2     		uxtb	r2, r3
 7737 0d46 07F52D73 		add	r3, r7, #692
 7738 0d4a 83F82320 		strb	r2, [r3, #35]
 7739 0d4e 97F8DD34 		ldrb	r3, [r7, #1245]
 7740 0d52 0A33     		adds	r3, r3, #10
 7741 0d54 DAB2     		uxtb	r2, r3
 7742 0d56 07F52D73 		add	r3, r7, #692
 7743 0d5a 83F82420 		strb	r2, [r3, #36]
 7744 0d5e 97F8DD34 		ldrb	r3, [r7, #1245]
 7745 0d62 0A33     		adds	r3, r3, #10
 7746 0d64 DAB2     		uxtb	r2, r3
 7747 0d66 07F52D73 		add	r3, r7, #692
 7748 0d6a 83F82520 		strb	r2, [r3, #37]
 7749 0d6e 97F8DD34 		ldrb	r3, [r7, #1245]
 7750 0d72 0A33     		adds	r3, r3, #10
 7751 0d74 DAB2     		uxtb	r2, r3
 7752 0d76 07F52D73 		add	r3, r7, #692
 7753 0d7a 83F82620 		strb	r2, [r3, #38]
 7754 0d7e 97F8DD34 		ldrb	r3, [r7, #1245]
 7755 0d82 0A33     		adds	r3, r3, #10
 7756 0d84 DAB2     		uxtb	r2, r3
 7757 0d86 07F52D73 		add	r3, r7, #692
 7758 0d8a 83F82720 		strb	r2, [r3, #39]
 981:..\src/command_processing.c ****         
 982:..\src/command_processing.c ****         // GENERIC PARAMS
 983:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX,
 984:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_IDX].enco
 7759              		.loc 1 984 0
 7760 0d8e 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 7761 0d92 D7F8E014 		ldr	r1, [r7, #1248]
 7762 0d96 1346     		mov	r3, r2
 7763 0d98 DB00     		lsls	r3, r3, #3
 7764 0d9a 9B1A     		subs	r3, r3, r2
 7765 0d9c 1B01     		lsls	r3, r3, #4
 7766 0d9e 0B44     		add	r3, r3, r1
 7767 0da0 03F58873 		add	r3, r3, #272
 7768 0da4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7769              		.loc 1 971 0
 7770 0da6 1433     		adds	r3, r3, #20
 7771 0da8 DAB2     		uxtb	r2, r3
 7772 0daa 07F52D73 		add	r3, r7, #692
 7773 0dae 83F82820 		strb	r2, [r3, #40]
 7774              		.loc 1 984 0
 7775 0db2 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 7776 0db6 D7F8E014 		ldr	r1, [r7, #1248]
 7777 0dba 1346     		mov	r3, r2
 7778 0dbc DB00     		lsls	r3, r3, #3
 7779 0dbe 9B1A     		subs	r3, r3, r2
 7780 0dc0 1B01     		lsls	r3, r3, #4
 7781 0dc2 0B44     		add	r3, r3, r1
 7782 0dc4 03F58873 		add	r3, r3, #272
 7783 0dc8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7784              		.loc 1 971 0
 7785 0dca 1433     		adds	r3, r3, #20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 181


 7786 0dcc DAB2     		uxtb	r2, r3
 7787 0dce 07F52D73 		add	r3, r7, #692
 7788 0dd2 83F82920 		strb	r2, [r3, #41]
 7789 0dd6 07F52D73 		add	r3, r7, #692
 7790 0dda 0022     		movs	r2, #0
 7791 0ddc 83F82A20 		strb	r2, [r3, #42]
 7792 0de0 97F8DC34 		ldrb	r3, [r7, #1244]
 7793 0de4 0A33     		adds	r3, r3, #10
 7794 0de6 DAB2     		uxtb	r2, r3
 7795 0de8 07F52D73 		add	r3, r7, #692
 7796 0dec 83F82B20 		strb	r2, [r3, #43]
 7797 0df0 97F8DC34 		ldrb	r3, [r7, #1244]
 7798 0df4 0A33     		adds	r3, r3, #10
 7799 0df6 DAB2     		uxtb	r2, r3
 7800 0df8 07F52D73 		add	r3, r7, #692
 7801 0dfc 83F82C20 		strb	r2, [r3, #44]
 7802 0e00 97F8DC34 		ldrb	r3, [r7, #1244]
 7803 0e04 0A33     		adds	r3, r3, #10
 7804 0e06 DAB2     		uxtb	r2, r3
 7805 0e08 07F52D73 		add	r3, r7, #692
 7806 0e0c 83F82D20 		strb	r2, [r3, #45]
 7807 0e10 97F8DC34 		ldrb	r3, [r7, #1244]
 7808 0e14 0A33     		adds	r3, r3, #10
 7809 0e16 DAB2     		uxtb	r2, r3
 7810 0e18 07F52D73 		add	r3, r7, #692
 7811 0e1c 83F82E20 		strb	r2, [r3, #46]
 7812 0e20 97F8DC34 		ldrb	r3, [r7, #1244]
 7813 0e24 0A33     		adds	r3, r3, #10
 7814 0e26 DAB2     		uxtb	r2, r3
 7815 0e28 07F52D73 		add	r3, r7, #692
 7816 0e2c 83F82F20 		strb	r2, [r3, #47]
 985:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+S
 986:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[SECOND_M
 7817              		.loc 1 986 0
 7818 0e30 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7819 0e34 D7F8E014 		ldr	r1, [r7, #1248]
 7820 0e38 1346     		mov	r3, r2
 7821 0e3a DB00     		lsls	r3, r3, #3
 7822 0e3c 9B1A     		subs	r3, r3, r2
 7823 0e3e 1B01     		lsls	r3, r3, #4
 7824 0e40 0B44     		add	r3, r3, r1
 7825 0e42 03F58873 		add	r3, r3, #272
 7826 0e46 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7827              		.loc 1 971 0
 7828 0e48 1433     		adds	r3, r3, #20
 7829 0e4a DAB2     		uxtb	r2, r3
 7830 0e4c 07F52D73 		add	r3, r7, #692
 7831 0e50 83F83020 		strb	r2, [r3, #48]
 7832              		.loc 1 986 0
 7833 0e54 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7834 0e58 D7F8E014 		ldr	r1, [r7, #1248]
 7835 0e5c 1346     		mov	r3, r2
 7836 0e5e DB00     		lsls	r3, r3, #3
 7837 0e60 9B1A     		subs	r3, r3, r2
 7838 0e62 1B01     		lsls	r3, r3, #4
 7839 0e64 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 182


 7840 0e66 03F58873 		add	r3, r3, #272
 7841 0e6a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7842              		.loc 1 971 0
 7843 0e6c 1433     		adds	r3, r3, #20
 7844 0e6e DAB2     		uxtb	r2, r3
 7845 0e70 07F52D73 		add	r3, r7, #692
 7846 0e74 83F83120 		strb	r2, [r3, #49]
 7847              		.loc 1 986 0
 7848 0e78 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7849 0e7c D7F8E014 		ldr	r1, [r7, #1248]
 7850 0e80 1346     		mov	r3, r2
 7851 0e82 DB00     		lsls	r3, r3, #3
 7852 0e84 9B1A     		subs	r3, r3, r2
 7853 0e86 1B01     		lsls	r3, r3, #4
 7854 0e88 0B44     		add	r3, r3, r1
 7855 0e8a 03F58873 		add	r3, r3, #272
 7856 0e8e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7857              		.loc 1 971 0
 7858 0e90 1433     		adds	r3, r3, #20
 7859 0e92 DAB2     		uxtb	r2, r3
 7860 0e94 07F52D73 		add	r3, r7, #692
 7861 0e98 83F83220 		strb	r2, [r3, #50]
 7862 0e9c 97F8DC34 		ldrb	r3, [r7, #1244]
 7863 0ea0 0A33     		adds	r3, r3, #10
 7864 0ea2 DAB2     		uxtb	r2, r3
 7865 0ea4 07F52D73 		add	r3, r7, #692
 7866 0ea8 83F83320 		strb	r2, [r3, #51]
 7867 0eac 97F8DC34 		ldrb	r3, [r7, #1244]
 7868 0eb0 0A33     		adds	r3, r3, #10
 7869 0eb2 DAB2     		uxtb	r2, r3
 7870 0eb4 07F52D73 		add	r3, r7, #692
 7871 0eb8 83F83420 		strb	r2, [r3, #52]
 7872 0ebc 97F8DC34 		ldrb	r3, [r7, #1244]
 7873 0ec0 0A33     		adds	r3, r3, #10
 7874 0ec2 DAB2     		uxtb	r2, r3
 7875 0ec4 07F52D73 		add	r3, r7, #692
 7876 0ec8 83F83520 		strb	r2, [r3, #53]
 7877 0ecc 97F8DC34 		ldrb	r3, [r7, #1244]
 7878 0ed0 0A33     		adds	r3, r3, #10
 7879 0ed2 DAB2     		uxtb	r2, r3
 7880 0ed4 07F52D73 		add	r3, r7, #692
 7881 0ed8 83F83620 		strb	r2, [r3, #54]
 987:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 7882              		.loc 1 987 0
 7883 0edc 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7884 0ee0 D7F8E014 		ldr	r1, [r7, #1248]
 7885 0ee4 1346     		mov	r3, r2
 7886 0ee6 DB00     		lsls	r3, r3, #3
 7887 0ee8 9B1A     		subs	r3, r3, r2
 7888 0eea 1B01     		lsls	r3, r3, #4
 7889 0eec 0B44     		add	r3, r3, r1
 7890 0eee 03F58873 		add	r3, r3, #272
 7891 0ef2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7892              		.loc 1 971 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 183


 7893 0ef4 1433     		adds	r3, r3, #20
 7894 0ef6 DAB2     		uxtb	r2, r3
 7895 0ef8 07F52D73 		add	r3, r7, #692
 7896 0efc 83F83720 		strb	r2, [r3, #55]
 988:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_MOTOR+SECOND_MOTOR_IDX, ST_MOT
 7897              		.loc 1 988 0
 7898 0f00 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7899 0f04 D7F8E014 		ldr	r1, [r7, #1248]
 7900 0f08 1346     		mov	r3, r2
 7901 0f0a DB00     		lsls	r3, r3, #3
 7902 0f0c 9B1A     		subs	r3, r3, r2
 7903 0f0e 1B01     		lsls	r3, r3, #4
 7904 0f10 0B44     		add	r3, r3, r1
 7905 0f12 03F58873 		add	r3, r3, #272
 7906 0f16 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7907              		.loc 1 971 0
 7908 0f18 1433     		adds	r3, r3, #20
 7909 0f1a DAB2     		uxtb	r2, r3
 7910 0f1c 07F52D73 		add	r3, r7, #692
 7911 0f20 83F83820 		strb	r2, [r3, #56]
 7912 0f24 97F8DC34 		ldrb	r3, [r7, #1244]
 7913 0f28 0A33     		adds	r3, r3, #10
 7914 0f2a DAB2     		uxtb	r2, r3
 7915 0f2c 07F52D73 		add	r3, r7, #692
 7916 0f30 83F83920 		strb	r2, [r3, #57]
 7917 0f34 97F8DC34 		ldrb	r3, [r7, #1244]
 7918 0f38 0A33     		adds	r3, r3, #10
 7919 0f3a DAB2     		uxtb	r2, r3
 7920 0f3c 07F52D73 		add	r3, r7, #692
 7921 0f40 83F83A20 		strb	r2, [r3, #58]
 7922 0f44 97F8DC34 		ldrb	r3, [r7, #1244]
 7923 0f48 0A33     		adds	r3, r3, #10
 7924 0f4a DAB2     		uxtb	r2, r3
 7925 0f4c 07F52D73 		add	r3, r7, #692
 7926 0f50 83F83B20 		strb	r2, [r3, #59]
 7927 0f54 97F8DC34 		ldrb	r3, [r7, #1244]
 7928 0f58 0A33     		adds	r3, r3, #10
 7929 0f5a DAB2     		uxtb	r2, r3
 7930 0f5c 07F52D73 		add	r3, r7, #692
 7931 0f60 83F83C20 		strb	r2, [r3, #60]
 7932 0f64 97F8DC34 		ldrb	r3, [r7, #1244]
 7933 0f68 0A33     		adds	r3, r3, #10
 7934 0f6a DAB2     		uxtb	r2, r3
 7935 0f6c 07F52D73 		add	r3, r7, #692
 7936 0f70 83F83D20 		strb	r2, [r3, #61]
 7937 0f74 97F8DC34 		ldrb	r3, [r7, #1244]
 7938 0f78 0A33     		adds	r3, r3, #10
 7939 0f7a DAB2     		uxtb	r2, r3
 7940 0f7c 07F52D73 		add	r3, r7, #692
 7941 0f80 83F83E20 		strb	r2, [r3, #62]
 989:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 7942              		.loc 1 989 0
 7943 0f84 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7944 0f88 D7F8E014 		ldr	r1, [r7, #1248]
 7945 0f8c 1346     		mov	r3, r2
 7946 0f8e DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 184


 7947 0f90 9B1A     		subs	r3, r3, r2
 7948 0f92 1B01     		lsls	r3, r3, #4
 7949 0f94 0B44     		add	r3, r3, r1
 7950 0f96 03F58873 		add	r3, r3, #272
 7951 0f9a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7952              		.loc 1 971 0
 7953 0f9c 1433     		adds	r3, r3, #20
 7954 0f9e DAB2     		uxtb	r2, r3
 7955 0fa0 07F52D73 		add	r3, r7, #692
 7956 0fa4 83F83F20 		strb	r2, [r3, #63]
 990:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+0, ST_ENCODER+1, ST_EX
 7957              		.loc 1 990 0
 7958 0fa8 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7959 0fac D7F8E014 		ldr	r1, [r7, #1248]
 7960 0fb0 1346     		mov	r3, r2
 7961 0fb2 DB00     		lsls	r3, r3, #3
 7962 0fb4 9B1A     		subs	r3, r3, r2
 7963 0fb6 1B01     		lsls	r3, r3, #4
 7964 0fb8 0B44     		add	r3, r3, r1
 7965 0fba 03F58873 		add	r3, r3, #272
 7966 0fbe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7967              		.loc 1 971 0
 7968 0fc0 1433     		adds	r3, r3, #20
 7969 0fc2 DAB2     		uxtb	r2, r3
 7970 0fc4 07F52D73 		add	r3, r7, #692
 7971 0fc8 83F84020 		strb	r2, [r3, #64]
 7972 0fcc 07F52D73 		add	r3, r7, #692
 7973 0fd0 1422     		movs	r2, #20
 7974 0fd2 83F84120 		strb	r2, [r3, #65]
 7975 0fd6 07F52D73 		add	r3, r7, #692
 7976 0fda 1522     		movs	r2, #21
 7977 0fdc 83F84220 		strb	r2, [r3, #66]
 7978 0fe0 07F52D73 		add	r3, r7, #692
 7979 0fe4 3222     		movs	r2, #50
 7980 0fe6 83F84320 		strb	r2, [r3, #67]
 7981 0fea 07F52D73 		add	r3, r7, #692
 7982 0fee 3222     		movs	r2, #50
 7983 0ff0 83F84420 		strb	r2, [r3, #68]
 7984 0ff4 07F52D73 		add	r3, r7, #692
 7985 0ff8 3222     		movs	r2, #50
 7986 0ffa 83F84520 		strb	r2, [r3, #69]
 7987 0ffe 07F52D73 		add	r3, r7, #692
 7988 1002 0022     		movs	r2, #0
 7989 1004 83F84620 		strb	r2, [r3, #70]
 7990 1008 07F52D73 		add	r3, r7, #692
 7991 100c 5022     		movs	r2, #80
 7992 100e 83F84720 		strb	r2, [r3, #71]
 7993 1012 07F52D73 		add	r3, r7, #692
 7994 1016 5022     		movs	r2, #80
 7995 1018 83F84820 		strb	r2, [r3, #72]
 7996 101c 07F52D73 		add	r3, r7, #692
 7997 1020 5A22     		movs	r2, #90
 7998 1022 83F84920 		strb	r2, [r3, #73]
 7999 1026 07F52D73 		add	r3, r7, #692
 8000 102a 5A22     		movs	r2, #90
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 185


 8001 102c 83F84A20 		strb	r2, [r3, #74]
 8002 1030 07F52D73 		add	r3, r7, #692
 8003 1034 5A22     		movs	r2, #90
 8004 1036 83F84B20 		strb	r2, [r3, #75]
 991:..\src/command_processing.c ****         ST_EXPANSION, ST_EXPANSION, ST_DEVICE, ST_MS_SPEC, 
 992:..\src/command_processing.c ****         ST_MS_SPEC, ST_FB_SPEC, ST_FB_SPEC, ST_FB_SPEC
 993:..\src/command_processing.c ****     };
 994:..\src/command_processing.c ****     
 995:..\src/command_processing.c ****     const char* PARAMS_STR[NUM_OF_PARAMS] = {
 8005              		.loc 1 995 0
 8006 103a 07F5C273 		add	r3, r7, #388
 8007 103e CB4A     		ldr	r2, .L346
 8008 1040 1846     		mov	r0, r3
 8009 1042 1146     		mov	r1, r2
 8010 1044 4FF49873 		mov	r3, #304
 8011 1048 1A46     		mov	r2, r3
 8012 104a FFF7FEFF 		bl	memcpy
 996:..\src/command_processing.c ****         "1 - Device ID:", "2 - Position PID [P, I, D]:", "3 - Current PID [P, I, D]:", "4 - Startup
 997:..\src/command_processing.c ****         "5 - Input mode:", "6 - Control mode:", "7 - Resolutions:", "8 - Measurement Offsets:", 
 998:..\src/command_processing.c ****         "9 - Multipliers:", "10 - Pos. limit active:", "11 - Pos. limits [inf, sup]:", "12 - Max st
 999:..\src/command_processing.c ****         "13 - Current limit:", "14 - EMG thresholds:", "15 - EMG calibration on startup:", "16 - EM
1000:..\src/command_processing.c ****         "17 - EMG max speed:", "18 - Absolute encoder position:", "19 - Motor handle ratio:", "20 -
1001:..\src/command_processing.c ****         "21 - Current lookup:", "22 - Date of maintenance [D/M/Y]:", "23 - Rest position:", "24 - R
1002:..\src/command_processing.c ****         "25 - Rest vel closure (ticks/sec):", "26 - Rest position enabled:", "27 - EMG inversion:",
1003:..\src/command_processing.c ****         "29 - Enable IMUs:", "30 - Read Expansion port:", "31 - Reset counters:", "32 - Last checke
1004:..\src/command_processing.c ****         "33 - SPI read delay (IMU):", "34 - On board IMU conf. [a,g,m,q,t]:", "35 - User ID:", "36 
1005:..\src/command_processing.c ****         
1006:..\src/command_processing.c ****         // GENERIC PARAMS
1007:..\src/command_processing.c ****         "37 - Associated encoder line:", "38 - Driver type:", "39 - PWM rate limiter:", "40 - Not r
1008:..\src/command_processing.c ****         "41 - Enc idx used for control:", "42 - Gear params[N1, N2, I1]:", "43 - Use second motor:"
1009:..\src/command_processing.c ****         "45 - Current PID [P, I, D]:", "46 - Startup Activation:", "47 - Input mode:", "48 - Contro
1010:..\src/command_processing.c ****         "49 - Resolutions:", "50 - Measurement Offsets:", "51 - Multipliers:", "52 - Pos. limit act
1011:..\src/command_processing.c ****         "53 - Pos. limits [inf, sup]:", "54 - Max steps [neg, pos]:", "55 - Current limit:", "56 - 
1012:..\src/command_processing.c ****         "57 - Motor handle ratio:", "58 - PWM rescaling:", "59 - Current lookup:", "60 - Associated
1013:..\src/command_processing.c ****         "61 - Driver type:", "62 - PWM rate limiter:", "63 - Not reversible:", "64 - Enc idx used f
1014:..\src/command_processing.c ****         "65 - Gear params[N1, N2, I1]:", "66 - Read enc raw line 0:", "67 - Read enc raw line 1:", 
1015:..\src/command_processing.c ****         "69 - ADC channel [1-6]:", "70 - ADC channel [7-12]:", "71 - Device type:", "72 - Slave com
1016:..\src/command_processing.c ****         "73 - Slave ID:", "74 - Maximum slave residual current:", "75 - Maximum pressure feedback (
1017:..\src/command_processing.c ****     };
1018:..\src/command_processing.c **** 
1019:..\src/command_processing.c ****     //Parameters menu
1020:..\src/command_processing.c ****     char spi_delay_menu[118]    = ""; 
 8013              		.loc 1 1020 0
 8014 104e 07F58673 		add	r3, r7, #268
 8015 1052 0022     		movs	r2, #0
 8016 1054 1A60     		str	r2, [r3]
 8017 1056 0433     		adds	r3, r3, #4
 8018 1058 7222     		movs	r2, #114
 8019 105a 0021     		movs	r1, #0
 8020 105c 1846     		mov	r0, r3
 8021 105e FFF7FEFF 		bl	memset
1021:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 8022              		.loc 1 1021 0
 8023 1062 07F58670 		add	r0, r7, #268
 8024 1066 6423     		movs	r3, #100
 8025 1068 0A22     		movs	r2, #10
 8026 106a C149     		ldr	r1, .L346+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 186


 8027 106c FFF7FEFF 		bl	sprintf
1022:..\src/command_processing.c **** 
1023:..\src/command_processing.c ****     const char* MENU_STR[NUM_OF_PARAMS_MENU] = {
 8028              		.loc 1 1023 0
 8029 1070 07F1E403 		add	r3, r7, #228
 8030 1074 BF4A     		ldr	r2, .L346+8
 8031 1076 1A60     		str	r2, [r3]
 8032 1078 07F1E403 		add	r3, r7, #228
 8033 107c BE4A     		ldr	r2, .L346+12
 8034 107e 5A60     		str	r2, [r3, #4]
 8035 1080 07F1E403 		add	r3, r7, #228
 8036 1084 BD4A     		ldr	r2, .L346+16
 8037 1086 9A60     		str	r2, [r3, #8]
 8038 1088 07F1E403 		add	r3, r7, #228
 8039 108c BC4A     		ldr	r2, .L346+20
 8040 108e DA60     		str	r2, [r3, #12]
 8041 1090 07F1E403 		add	r3, r7, #228
 8042 1094 BB4A     		ldr	r2, .L346+24
 8043 1096 1A61     		str	r2, [r3, #16]
 8044 1098 07F1E403 		add	r3, r7, #228
 8045 109c BA4A     		ldr	r2, .L346+28
 8046 109e 5A61     		str	r2, [r3, #20]
 8047 10a0 07F1E403 		add	r3, r7, #228
 8048 10a4 07F58672 		add	r2, r7, #268
 8049 10a8 9A61     		str	r2, [r3, #24]
 8050 10aa 07F1E403 		add	r3, r7, #228
 8051 10ae B74A     		ldr	r2, .L346+32
 8052 10b0 DA61     		str	r2, [r3, #28]
 8053 10b2 07F1E403 		add	r3, r7, #228
 8054 10b6 B64A     		ldr	r2, .L346+36
 8055 10b8 1A62     		str	r2, [r3, #32]
 8056 10ba 07F1E403 		add	r3, r7, #228
 8057 10be B54A     		ldr	r2, .L346+40
 8058 10c0 5A62     		str	r2, [r3, #36]
1024:..\src/command_processing.c ****         "0 -> Usb\n1 -> Handle\n2 -> EMG proportional\n3 -> EMG Integral\n4 -> EMG FCFS\n5 -> EMG F
1025:..\src/command_processing.c ****         "0 -> Position\n1 -> PWM\n2 -> Current\n3 -> Position and Current\n",                      
1026:..\src/command_processing.c ****         "0 -> Deactivate [NO]\n1 -> Activate [YES]\n",                                             
1027:..\src/command_processing.c ****         "0 -> Right\n1 -> Left\n",                                                                 
1028:..\src/command_processing.c ****         "0 -> OFF\n1 -> ON\nThe board will reset\n",                                               
1029:..\src/command_processing.c ****         "0 -> None\n1 -> SD/RTC board\n2 -> WiFi board [N/A]\n3 -> Other [N/A]\nThe board will rese
1030:..\src/command_processing.c ****         spi_delay_menu,                                                                            
1031:..\src/command_processing.c ****         "0 -> Generic user\n1 -> Maria\n2 -> Roza\nThe board will reset\n",                        
1032:..\src/command_processing.c ****         "0 -> MC33887 (Standard)\n1 -> VNH5019 (High power)\nThe board will reset\n",              
1033:..\src/command_processing.c ****         "0 -> SOFTHAND PRO\n1 -> GENERIC 2 MOTORS\n2 -> AIR CHAMBERS\nThe board will reset\n"      
1034:..\src/command_processing.c ****     };   
1035:..\src/command_processing.c ****     
1036:..\src/command_processing.c ****     uint8 NUM_MENU[29] = {3, 1, 2, 3, 3, 3, 3, 3, 3, 4, 5, 6, 3, 7, 8, 9, 3, 5, 3, 1, 2, 3, 3, 3, 9
 8059              		.loc 1 1036 0
 8060 10c2 07F1C403 		add	r3, r7, #196
 8061 10c6 B44A     		ldr	r2, .L346+44
 8062 10c8 1C46     		mov	r4, r3
 8063 10ca 1546     		mov	r5, r2
 8064 10cc 2868     		ldr	r0, [r5]	@ unaligned
 8065 10ce 6968     		ldr	r1, [r5, #4]	@ unaligned
 8066 10d0 AA68     		ldr	r2, [r5, #8]	@ unaligned
 8067 10d2 EB68     		ldr	r3, [r5, #12]	@ unaligned
 8068 10d4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 187


 8069 10d6 2869     		ldr	r0, [r5, #16]	@ unaligned
 8070 10d8 6969     		ldr	r1, [r5, #20]	@ unaligned
 8071 10da AA69     		ldr	r2, [r5, #24]	@ unaligned
 8072 10dc 07C4     		stmia	r4!, {r0, r1, r2}
 8073 10de 2B7F     		ldrb	r3, [r5, #28]
 8074 10e0 2370     		strb	r3, [r4]
1037:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET_LIST[9]  = {2, 3, 8, 11, 23, 44, 45, 50, 53};
 8075              		.loc 1 1037 0
 8076 10e2 07F1B803 		add	r3, r7, #184
 8077 10e6 AD4A     		ldr	r2, .L346+48
 8078 10e8 1068     		ldr	r0, [r2]	@ unaligned
 8079 10ea 5168     		ldr	r1, [r2, #4]	@ unaligned
 8080 10ec 03C3     		stmia	r3!, {r0, r1}
 8081 10ee 127A     		ldrb	r2, [r2, #8]
 8082 10f0 1A70     		strb	r2, [r3]
1038:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET_LIST[18] = {2, 3, 5, 8, 11, 23, 24, 28, 31, 32, 38, 44, 45, 47, 50, 53, 
 8083              		.loc 1 1038 0
 8084 10f2 07F1A403 		add	r3, r7, #164
 8085 10f6 AA4A     		ldr	r2, .L346+52
 8086 10f8 1C46     		mov	r4, r3
 8087 10fa 1546     		mov	r5, r2
 8088 10fc 2868     		ldr	r0, [r5]	@ unaligned
 8089 10fe 6968     		ldr	r1, [r5, #4]	@ unaligned
 8090 1100 AA68     		ldr	r2, [r5, #8]	@ unaligned
 8091 1102 EB68     		ldr	r3, [r5, #12]	@ unaligned
 8092 1104 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8093 1106 2B8A     		ldrh	r3, [r5, #16]	@ unaligned
 8094 1108 2380     		strh	r3, [r4]	@ unaligned
1039:..\src/command_processing.c ****     uint8 USER_ID_PARAM = 35;
 8095              		.loc 1 1039 0
 8096 110a 2323     		movs	r3, #35
 8097 110c 87F8DB34 		strb	r3, [r7, #1243]
1040:..\src/command_processing.c **** 
1041:..\src/command_processing.c **** // Note: If a custom parameter change is needed, add to CUSTOM_PARAM_LIST, then change it
1042:..\src/command_processing.c **** // in the dedicated function set_custom_param()    
1043:..\src/command_processing.c ****     
1044:..\src/command_processing.c **** //------------------ END OF PARAMETERS VARIABLES --------------------//        
1045:..\src/command_processing.c **** 
1046:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
1047:..\src/command_processing.c ****     
1048:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS];
1049:..\src/command_processing.c ****     j = 0;
 8098              		.loc 1 1049 0
 8099 1110 0023     		movs	r3, #0
 8100 1112 87F8E634 		strb	r3, [r7, #1254]
1050:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 8101              		.loc 1 1050 0
 8102 1116 0023     		movs	r3, #0
 8103 1118 87F8E734 		strb	r3, [r7, #1255]
 8104 111c 21E0     		b	.L280
 8105              	.L283:
1051:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8106              		.loc 1 1051 0
 8107 111e 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 8108 1122 07F1B802 		add	r2, r7, #184
 8109 1126 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8110 1128 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 188


 8111 112a 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8112 112e 0133     		adds	r3, r3, #1
 8113 1130 9A42     		cmp	r2, r3
 8114 1132 0BD1     		bne	.L281
1052:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = TRUE;
 8115              		.loc 1 1052 0
 8116 1134 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8117 1138 07F15802 		add	r2, r7, #88
 8118 113c 0121     		movs	r1, #1
 8119 113e D154     		strb	r1, [r2, r3]
1053:..\src/command_processing.c ****             j++;
 8120              		.loc 1 1053 0
 8121 1140 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 8122 1144 0133     		adds	r3, r3, #1
 8123 1146 87F8E634 		strb	r3, [r7, #1254]
 8124 114a 05E0     		b	.L282
 8125              	.L281:
1054:..\src/command_processing.c ****         }
1055:..\src/command_processing.c ****         else {
1056:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = FALSE;
 8126              		.loc 1 1056 0
 8127 114c 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8128 1150 07F15802 		add	r2, r7, #88
 8129 1154 0021     		movs	r1, #0
 8130 1156 D154     		strb	r1, [r2, r3]
 8131              	.L282:
1050:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8132              		.loc 1 1050 0 discriminator 2
 8133 1158 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8134 115c 0133     		adds	r3, r3, #1
 8135 115e 87F8E734 		strb	r3, [r7, #1255]
 8136              	.L280:
1050:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8137              		.loc 1 1050 0 is_stmt 0 discriminator 1
 8138 1162 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8139 1166 4B2B     		cmp	r3, #75
 8140 1168 D9D9     		bls	.L283
1057:..\src/command_processing.c ****         }
1058:..\src/command_processing.c ****     }   // All parameters can be get with default settings, except the following ones
1059:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET[NUM_OF_PARAMS];
1060:..\src/command_processing.c ****     j = 0;
 8141              		.loc 1 1060 0 is_stmt 1
 8142 116a 0023     		movs	r3, #0
 8143 116c 87F8E634 		strb	r3, [r7, #1254]
1061:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 8144              		.loc 1 1061 0
 8145 1170 0023     		movs	r3, #0
 8146 1172 87F8E734 		strb	r3, [r7, #1255]
 8147 1176 21E0     		b	.L284
 8148              	.L287:
1062:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8149              		.loc 1 1062 0
 8150 1178 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 8151 117c 07F1A402 		add	r2, r7, #164
 8152 1180 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8153 1182 1A46     		mov	r2, r3
 8154 1184 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 189


 8155 1188 0133     		adds	r3, r3, #1
 8156 118a 9A42     		cmp	r2, r3
 8157 118c 0BD1     		bne	.L285
1063:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = TRUE;
 8158              		.loc 1 1063 0
 8159 118e 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8160 1192 07F10C02 		add	r2, r7, #12
 8161 1196 0121     		movs	r1, #1
 8162 1198 D154     		strb	r1, [r2, r3]
1064:..\src/command_processing.c ****             j++;
 8163              		.loc 1 1064 0
 8164 119a 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 8165 119e 0133     		adds	r3, r3, #1
 8166 11a0 87F8E634 		strb	r3, [r7, #1254]
 8167 11a4 05E0     		b	.L286
 8168              	.L285:
1065:..\src/command_processing.c ****         }
1066:..\src/command_processing.c ****         else {
1067:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = FALSE;
 8169              		.loc 1 1067 0
 8170 11a6 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8171 11aa 07F10C02 		add	r2, r7, #12
 8172 11ae 0021     		movs	r1, #0
 8173 11b0 D154     		strb	r1, [r2, r3]
 8174              	.L286:
1061:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8175              		.loc 1 1061 0 discriminator 2
 8176 11b2 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8177 11b6 0133     		adds	r3, r3, #1
 8178 11b8 87F8E734 		strb	r3, [r7, #1255]
 8179              	.L284:
1061:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8180              		.loc 1 1061 0 is_stmt 0 discriminator 1
 8181 11bc 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8182 11c0 4B2B     		cmp	r3, #75
 8183 11c2 D9D9     		bls	.L287
1068:..\src/command_processing.c ****         }
1069:..\src/command_processing.c ****     }   // All parameters can be setted with default settings, except the following ones
1070:..\src/command_processing.c ****         
1071:..\src/command_processing.c ****     if (!index) {
 8184              		.loc 1 1071 0 is_stmt 1
 8185 11c4 BB1D     		adds	r3, r7, #6
 8186 11c6 1B88     		ldrh	r3, [r3]
 8187 11c8 002B     		cmp	r3, #0
 8188 11ca 17D1     		bne	.L288
1072:..\src/command_processing.c ****         // Get parameters list with relative types
1073:..\src/command_processing.c ****         get_param_list(VAR_P, TYPES, NUM_ITEMS, NUM_STRUCT, NUM_MENU, PARAMS_STR, CUSTOM_PARAM_GET,
 8189              		.loc 1 1073 0
 8190 11cc 07F52D74 		add	r4, r7, #692
 8191 11d0 07F54072 		add	r2, r7, #768
 8192 11d4 07F55371 		add	r1, r7, #844
 8193 11d8 07F56670 		add	r0, r7, #920
 8194 11dc 07F1E403 		add	r3, r7, #228
 8195 11e0 0393     		str	r3, [sp, #12]
 8196 11e2 07F15803 		add	r3, r7, #88
 8197 11e6 0293     		str	r3, [sp, #8]
 8198 11e8 07F5C273 		add	r3, r7, #388
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 190


 8199 11ec 0193     		str	r3, [sp, #4]
 8200 11ee 07F1C403 		add	r3, r7, #196
 8201 11f2 0093     		str	r3, [sp]
 8202 11f4 2346     		mov	r3, r4
 8203 11f6 FFF7FEFF 		bl	get_param_list
1074:..\src/command_processing.c ****     }
1075:..\src/command_processing.c ****     else {
1076:..\src/command_processing.c ****         // Set specific parameter        
1077:..\src/command_processing.c ****         PARAM_IDX = index -1;       // Get right vector param index
1078:..\src/command_processing.c ****         
1079:..\src/command_processing.c ****         // Find size of data
1080:..\src/command_processing.c ****         switch (TYPES[PARAM_IDX]) {
1081:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
1082:..\src/command_processing.c ****                 sod = 1; break;
1083:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
1084:..\src/command_processing.c ****                 sod = 2; break;
1085:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
1086:..\src/command_processing.c ****                 sod = 4; break;
1087:..\src/command_processing.c ****         }   
1088:..\src/command_processing.c ****             
1089:..\src/command_processing.c ****         if (!CUSTOM_PARAM_SET[PARAM_IDX]) {
1090:..\src/command_processing.c ****             // Use default specifications for param setting
1091:..\src/command_processing.c ****             switch(TYPES[PARAM_IDX]) {
1092:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
1093:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1094:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1095:..\src/command_processing.c ****                     }
1096:..\src/command_processing.c ****                     break;                
1097:..\src/command_processing.c ****                 case TYPE_STRING:
1098:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1099:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1100:..\src/command_processing.c ****                     }
1101:..\src/command_processing.c ****                     *(VAR_P[PARAM_IDX] + i*sod) = '\0';
1102:..\src/command_processing.c ****                 break; 
1103:..\src/command_processing.c ****                 case TYPE_INT8:
1104:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1105:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
1106:..\src/command_processing.c ****                     }
1107:..\src/command_processing.c ****                     break;                    
1108:..\src/command_processing.c ****                 case TYPE_INT16:
1109:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1110:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
1111:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1112:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
1113:..\src/command_processing.c ****                         }
1114:..\src/command_processing.c ****                     }                   
1115:..\src/command_processing.c ****                     break;
1116:..\src/command_processing.c ****                 case TYPE_UINT16:
1117:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1118:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
1119:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1120:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
1121:..\src/command_processing.c ****                         }
1122:..\src/command_processing.c ****                     }
1123:..\src/command_processing.c ****                     break;
1124:..\src/command_processing.c ****                 case TYPE_INT32:
1125:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 191


1126:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
1127:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1128:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
1129:..\src/command_processing.c ****                         }
1130:..\src/command_processing.c ****                     }
1131:..\src/command_processing.c ****                     break;
1132:..\src/command_processing.c ****                 case TYPE_UINT32:
1133:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1134:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
1135:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1136:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
1137:..\src/command_processing.c ****                         }
1138:..\src/command_processing.c ****                     }
1139:..\src/command_processing.c ****                     break;
1140:..\src/command_processing.c ****                 case TYPE_FLOAT:
1141:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1142:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
1143:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1144:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
1145:..\src/command_processing.c ****                         }
1146:..\src/command_processing.c ****                     }
1147:..\src/command_processing.c ****                     break;
1148:..\src/command_processing.c ****                 default:
1149:..\src/command_processing.c ****                     break;
1150:..\src/command_processing.c ****             }
1151:..\src/command_processing.c ****         }
1152:..\src/command_processing.c ****         else {  
1153:..\src/command_processing.c ****             // Use custom specifications for param setting
1154:..\src/command_processing.c ****             set_custom_param(index);
1155:..\src/command_processing.c ****         }
1156:..\src/command_processing.c ****         
1157:..\src/command_processing.c ****         // Store param also in user_emg structure
1158:..\src/command_processing.c ****         if (index != USER_ID_PARAM) {        // Not when changing user id
1159:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
1160:..\src/command_processing.c ****         }
1161:..\src/command_processing.c ****         
1162:..\src/command_processing.c ****         // Perform chip reset if needed
1163:..\src/command_processing.c ****         if (TYPES[PARAM_IDX] == TYPE_FLAG){
1164:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
1165:..\src/command_processing.c ****             do {
1166:..\src/command_processing.c ****                 if (TYPES[idx] == TYPE_FLAG) menu_idx++;    // Increment idx to find the right NUM_
1167:..\src/command_processing.c ****                 idx++;
1168:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
1169:..\src/command_processing.c ****             
1170:..\src/command_processing.c ****             if (NUM_MENU[menu_idx] == 5 || NUM_MENU[menu_idx] == 6 || NUM_MENU[menu_idx] == 8 || NU
1171:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
1172:..\src/command_processing.c ****             }   
1173:..\src/command_processing.c ****         }
1174:..\src/command_processing.c ****     }
1175:..\src/command_processing.c **** } 
 8204              		.loc 1 1175 0
 8205 11fa D9E2     		b	.L339
 8206              	.L288:
1077:..\src/command_processing.c ****         
 8207              		.loc 1 1077 0
 8208 11fc BB1D     		adds	r3, r7, #6
 8209 11fe 1B88     		ldrh	r3, [r3]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 192


 8210 1200 DBB2     		uxtb	r3, r3
 8211 1202 013B     		subs	r3, r3, #1
 8212 1204 87F8DA34 		strb	r3, [r7, #1242]
1080:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 8213              		.loc 1 1080 0
 8214 1208 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 8215 120c 07F55372 		add	r2, r7, #844
 8216 1210 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8217 1212 092B     		cmp	r3, #9
 8218 1214 22D8     		bhi	.L290
 8219 1216 01A2     		adr	r2, .L292
 8220 1218 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8221              		.p2align 2
 8222              	.L292:
 8223 121c 45120000 		.word	.L291+1
 8224 1220 45120000 		.word	.L291+1
 8225 1224 45120000 		.word	.L291+1
 8226 1228 4D120000 		.word	.L293+1
 8227 122c 4D120000 		.word	.L293+1
 8228 1230 55120000 		.word	.L294+1
 8229 1234 55120000 		.word	.L294+1
 8230 1238 55120000 		.word	.L294+1
 8231 123c 5D120000 		.word	.L290+1
 8232 1240 45120000 		.word	.L291+1
 8233              		.p2align 1
 8234              	.L291:
1082:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 8235              		.loc 1 1082 0
 8236 1244 0123     		movs	r3, #1
 8237 1246 87F8E534 		strb	r3, [r7, #1253]
 8238 124a 07E0     		b	.L290
 8239              	.L293:
1084:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 8240              		.loc 1 1084 0
 8241 124c 0223     		movs	r3, #2
 8242 124e 87F8E534 		strb	r3, [r7, #1253]
 8243 1252 03E0     		b	.L290
 8244              	.L294:
1086:..\src/command_processing.c ****         }   
 8245              		.loc 1 1086 0
 8246 1254 0423     		movs	r3, #4
 8247 1256 87F8E534 		strb	r3, [r7, #1253]
 8248 125a 00BF     		nop
 8249              	.L290:
1089:..\src/command_processing.c ****             // Use default specifications for param setting
 8250              		.loc 1 1089 0
 8251 125c 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 8252 1260 07F10C02 		add	r2, r7, #12
 8253 1264 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8254 1266 002B     		cmp	r3, #0
 8255 1268 40F03682 		bne	.L295
1091:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
 8256              		.loc 1 1091 0
 8257 126c 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 8258 1270 07F55372 		add	r2, r7, #844
 8259 1274 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8260 1276 092B     		cmp	r3, #9
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 193


 8261 1278 00F23682 		bhi	.L338
 8262 127c 01A2     		adr	r2, .L298
 8263 127e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8264 1282 00BF     		.p2align 2
 8265              	.L298:
 8266 1284 AD120000 		.word	.L297+1
 8267 1288 63130000 		.word	.L299+1
 8268 128c AD120000 		.word	.L297+1
 8269 1290 F3130000 		.word	.L300+1
 8270 1294 89140000 		.word	.L301+1
 8271 1298 1D150000 		.word	.L302+1
 8272 129c B1150000 		.word	.L303+1
 8273 12a0 45160000 		.word	.L304+1
 8274 12a4 E9160000 		.word	.L338+1
 8275 12a8 F9120000 		.word	.L305+1
 8276              		.p2align 1
 8277              	.L297:
1093:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8278              		.loc 1 1093 0
 8279 12ac 0023     		movs	r3, #0
 8280 12ae 87F8E734 		strb	r3, [r7, #1255]
 8281 12b2 17E0     		b	.L306
 8282              	.L307:
1094:..\src/command_processing.c ****                     }
 8283              		.loc 1 1094 0 discriminator 3
 8284 12b4 97F8DA24 		ldrb	r2, [r7, #1242]	@ zero_extendqisi2
 8285 12b8 07F56673 		add	r3, r7, #920
 8286 12bc 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8287 12c0 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8288 12c4 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 8289 12c8 01FB02F2 		mul	r2, r1, r2
 8290 12cc 1344     		add	r3, r3, r2
 8291 12ce 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8292 12d2 0332     		adds	r2, r2, #3
 8293 12d4 3349     		ldr	r1, .L346+56
 8294 12d6 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8295 12d8 1A70     		strb	r2, [r3]
1093:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8296              		.loc 1 1093 0 discriminator 3
 8297 12da 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8298 12de 0133     		adds	r3, r3, #1
 8299 12e0 87F8E734 		strb	r3, [r7, #1255]
 8300              	.L306:
1093:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8301              		.loc 1 1093 0 is_stmt 0 discriminator 1
 8302 12e4 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 8303 12e8 07F54072 		add	r2, r7, #768
 8304 12ec D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8305 12ee 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8306 12f2 9A42     		cmp	r2, r3
 8307 12f4 DED3     		bcc	.L307
1096:..\src/command_processing.c ****                 case TYPE_STRING:
 8308              		.loc 1 1096 0 is_stmt 1
 8309 12f6 F8E1     		b	.L333
 8310              	.L305:
1098:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8311              		.loc 1 1098 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 194


 8312 12f8 0023     		movs	r3, #0
 8313 12fa 87F8E734 		strb	r3, [r7, #1255]
 8314 12fe 17E0     		b	.L309
 8315              	.L310:
1099:..\src/command_processing.c ****                     }
 8316              		.loc 1 1099 0 discriminator 3
 8317 1300 97F8DA24 		ldrb	r2, [r7, #1242]	@ zero_extendqisi2
 8318 1304 07F56673 		add	r3, r7, #920
 8319 1308 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8320 130c 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8321 1310 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 8322 1314 01FB02F2 		mul	r2, r1, r2
 8323 1318 1344     		add	r3, r3, r2
 8324 131a 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8325 131e 0332     		adds	r2, r2, #3
 8326 1320 2049     		ldr	r1, .L346+56
 8327 1322 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8328 1324 1A70     		strb	r2, [r3]
1098:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8329              		.loc 1 1098 0 discriminator 3
 8330 1326 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8331 132a 0133     		adds	r3, r3, #1
 8332 132c 87F8E734 		strb	r3, [r7, #1255]
 8333              	.L309:
1098:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8334              		.loc 1 1098 0 is_stmt 0 discriminator 1
 8335 1330 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 8336 1334 07F54072 		add	r2, r7, #768
 8337 1338 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8338 133a 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8339 133e 9A42     		cmp	r2, r3
 8340 1340 DED3     		bcc	.L310
1101:..\src/command_processing.c ****                 break; 
 8341              		.loc 1 1101 0 is_stmt 1
 8342 1342 97F8DA24 		ldrb	r2, [r7, #1242]	@ zero_extendqisi2
 8343 1346 07F56673 		add	r3, r7, #920
 8344 134a 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8345 134e 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8346 1352 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 8347 1356 01FB02F2 		mul	r2, r1, r2
 8348 135a 1344     		add	r3, r3, r2
 8349 135c 0022     		movs	r2, #0
 8350 135e 1A70     		strb	r2, [r3]
1102:..\src/command_processing.c ****                 case TYPE_INT8:
 8351              		.loc 1 1102 0
 8352 1360 C3E1     		b	.L333
 8353              	.L299:
1104:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 8354              		.loc 1 1104 0
 8355 1362 0023     		movs	r3, #0
 8356 1364 87F8E734 		strb	r3, [r7, #1255]
 8357 1368 39E0     		b	.L311
 8358              	.L347:
 8359 136a 00BF     		.align	2
 8360              	.L346:
 8361 136c A00C0000 		.word	.LC112
 8362 1370 B0010000 		.word	.LC113
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 195


 8363 1374 24020000 		.word	.LC114
 8364 1378 A0020000 		.word	.LC115
 8365 137c E0020000 		.word	.LC116
 8366 1380 0C030000 		.word	.LC117
 8367 1384 24030000 		.word	.LC118
 8368 1388 4C030000 		.word	.LC119
 8369 138c A8030000 		.word	.LC120
 8370 1390 E8030000 		.word	.LC121
 8371 1394 30040000 		.word	.LC122
 8372 1398 D00D0000 		.word	.LC78
 8373 139c F00D0000 		.word	.LC79
 8374 13a0 FC0D0000 		.word	.LC80
 8375 13a4 00000000 		.word	g_rx
 8376              	.L312:
1105:..\src/command_processing.c ****                     }
 8377              		.loc 1 1105 0 discriminator 3
 8378 13a8 97F8DA24 		ldrb	r2, [r7, #1242]	@ zero_extendqisi2
 8379 13ac 07F56673 		add	r3, r7, #920
 8380 13b0 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8381 13b4 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8382 13b8 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 8383 13bc 01FB02F2 		mul	r2, r1, r2
 8384 13c0 1344     		add	r3, r3, r2
 8385 13c2 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8386 13c6 0332     		adds	r2, r2, #3
 8387 13c8 C649     		ldr	r1, .L348
 8388 13ca 0A44     		add	r2, r2, r1
 8389 13cc 92F90020 		ldrsb	r2, [r2]
 8390 13d0 D2B2     		uxtb	r2, r2
 8391 13d2 1A70     		strb	r2, [r3]
1104:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 8392              		.loc 1 1104 0 discriminator 3
 8393 13d4 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8394 13d8 0133     		adds	r3, r3, #1
 8395 13da 87F8E734 		strb	r3, [r7, #1255]
 8396              	.L311:
1104:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 8397              		.loc 1 1104 0 is_stmt 0 discriminator 1
 8398 13de 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 8399 13e2 07F54072 		add	r2, r7, #768
 8400 13e6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8401 13e8 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8402 13ec 9A42     		cmp	r2, r3
 8403 13ee DBD3     		bcc	.L312
1107:..\src/command_processing.c ****                 case TYPE_INT16:
 8404              		.loc 1 1107 0 is_stmt 1
 8405 13f0 7BE1     		b	.L333
 8406              	.L300:
1109:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 8407              		.loc 1 1109 0
 8408 13f2 0023     		movs	r3, #0
 8409 13f4 87F8E734 		strb	r3, [r7, #1255]
 8410 13f8 3CE0     		b	.L313
 8411              	.L316:
1110:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 8412              		.loc 1 1110 0
 8413 13fa 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 196


 8414 13fe 97F8E524 		ldrb	r2, [r7, #1253]	@ zero_extendqisi2
 8415 1402 02FB03F3 		mul	r3, r2, r3
 8416 1406 0333     		adds	r3, r3, #3
 8417 1408 B64A     		ldr	r2, .L348
 8418 140a 1344     		add	r3, r3, r2
 8419 140c B3F90030 		ldrsh	r3, [r3]
 8420 1410 A7F8D834 		strh	r3, [r7, #1240]	@ movhi
1111:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 8421              		.loc 1 1111 0
 8422 1414 0023     		movs	r3, #0
 8423 1416 87F8E634 		strb	r3, [r7, #1254]
 8424 141a 20E0     		b	.L314
 8425              	.L315:
1112:..\src/command_processing.c ****                         }
 8426              		.loc 1 1112 0 discriminator 3
 8427 141c 97F8DA24 		ldrb	r2, [r7, #1242]	@ zero_extendqisi2
 8428 1420 07F56673 		add	r3, r7, #920
 8429 1424 53F82220 		ldr	r2, [r3, r2, lsl #2]
 8430 1428 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8431 142c 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 8432 1430 01FB03F3 		mul	r3, r1, r3
 8433 1434 1846     		mov	r0, r3
 8434 1436 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 8435 143a 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 8436 143e CB1A     		subs	r3, r1, r3
 8437 1440 0344     		add	r3, r3, r0
 8438 1442 013B     		subs	r3, r3, #1
 8439 1444 1344     		add	r3, r3, r2
 8440 1446 97F8E624 		ldrb	r2, [r7, #1254]	@ zero_extendqisi2
 8441 144a 07F59B61 		add	r1, r7, #1240
 8442 144e 0A44     		add	r2, r2, r1
 8443 1450 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8444 1452 1A70     		strb	r2, [r3]
1111:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 8445              		.loc 1 1111 0 discriminator 3
 8446 1454 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 8447 1458 0133     		adds	r3, r3, #1
 8448 145a 87F8E634 		strb	r3, [r7, #1254]
 8449              	.L314:
1111:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 8450              		.loc 1 1111 0 is_stmt 0 discriminator 1
 8451 145e 97F8E624 		ldrb	r2, [r7, #1254]	@ zero_extendqisi2
 8452 1462 97F8E534 		ldrb	r3, [r7, #1253]	@ zero_extendqisi2
 8453 1466 9A42     		cmp	r2, r3
 8454 1468 D8D3     		bcc	.L315
1109:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 8455              		.loc 1 1109 0 is_stmt 1 discriminator 2
 8456 146a 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8457 146e 0133     		adds	r3, r3, #1
 8458 1470 87F8E734 		strb	r3, [r7, #1255]
 8459              	.L313:
1109:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 8460              		.loc 1 1109 0 is_stmt 0 discriminator 1
 8461 1474 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 8462 1478 07F54072 		add	r2, r7, #768
 8463 147c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8464 147e 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 197


 8465 1482 9A42     		cmp	r2, r3
 8466 1484 B9D3     		bcc	.L316
1115:..\src/command_processing.c ****                 case TYPE_UINT16:
 8467              		.loc 1 1115 0 is_stmt 1
 8468 1486 30E1     		b	.L333
 8469              	.L301:
1117:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 8470              		.loc 1 1117 0
 8471 1488 0023     		movs	r3, #0
 8472 148a 87F8E734 		strb	r3, [r7, #1255]
 8473 148e 3BE0     		b	.L317
 8474              	.L320:
1118:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 8475              		.loc 1 1118 0
 8476 1490 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8477 1494 97F8E524 		ldrb	r2, [r7, #1253]	@ zero_extendqisi2
 8478 1498 02FB03F3 		mul	r3, r2, r3
 8479 149c 0333     		adds	r3, r3, #3
 8480 149e 914A     		ldr	r2, .L348
 8481 14a0 1344     		add	r3, r3, r2
 8482 14a2 1B88     		ldrh	r3, [r3]
 8483 14a4 A7F8D634 		strh	r3, [r7, #1238]	@ movhi
1119:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 8484              		.loc 1 1119 0
 8485 14a8 0023     		movs	r3, #0
 8486 14aa 87F8E634 		strb	r3, [r7, #1254]
 8487 14ae 20E0     		b	.L318
 8488              	.L319:
1120:..\src/command_processing.c ****                         }
 8489              		.loc 1 1120 0 discriminator 3
 8490 14b0 97F8DA24 		ldrb	r2, [r7, #1242]	@ zero_extendqisi2
 8491 14b4 07F56673 		add	r3, r7, #920
 8492 14b8 53F82220 		ldr	r2, [r3, r2, lsl #2]
 8493 14bc 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8494 14c0 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 8495 14c4 01FB03F3 		mul	r3, r1, r3
 8496 14c8 1846     		mov	r0, r3
 8497 14ca 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 8498 14ce 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 8499 14d2 CB1A     		subs	r3, r1, r3
 8500 14d4 0344     		add	r3, r3, r0
 8501 14d6 013B     		subs	r3, r3, #1
 8502 14d8 1344     		add	r3, r3, r2
 8503 14da 97F8E624 		ldrb	r2, [r7, #1254]	@ zero_extendqisi2
 8504 14de 07F2D641 		addw	r1, r7, #1238
 8505 14e2 0A44     		add	r2, r2, r1
 8506 14e4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8507 14e6 1A70     		strb	r2, [r3]
1119:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 8508              		.loc 1 1119 0 discriminator 3
 8509 14e8 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 8510 14ec 0133     		adds	r3, r3, #1
 8511 14ee 87F8E634 		strb	r3, [r7, #1254]
 8512              	.L318:
1119:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 8513              		.loc 1 1119 0 is_stmt 0 discriminator 1
 8514 14f2 97F8E624 		ldrb	r2, [r7, #1254]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 198


 8515 14f6 97F8E534 		ldrb	r3, [r7, #1253]	@ zero_extendqisi2
 8516 14fa 9A42     		cmp	r2, r3
 8517 14fc D8D3     		bcc	.L319
1117:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 8518              		.loc 1 1117 0 is_stmt 1 discriminator 2
 8519 14fe 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8520 1502 0133     		adds	r3, r3, #1
 8521 1504 87F8E734 		strb	r3, [r7, #1255]
 8522              	.L317:
1117:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 8523              		.loc 1 1117 0 is_stmt 0 discriminator 1
 8524 1508 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 8525 150c 07F54072 		add	r2, r7, #768
 8526 1510 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8527 1512 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8528 1516 9A42     		cmp	r2, r3
 8529 1518 BAD3     		bcc	.L320
1123:..\src/command_processing.c ****                 case TYPE_INT32:
 8530              		.loc 1 1123 0 is_stmt 1
 8531 151a E6E0     		b	.L333
 8532              	.L302:
1125:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 8533              		.loc 1 1125 0
 8534 151c 0023     		movs	r3, #0
 8535 151e 87F8E734 		strb	r3, [r7, #1255]
 8536 1522 3BE0     		b	.L321
 8537              	.L324:
1126:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 8538              		.loc 1 1126 0
 8539 1524 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8540 1528 97F8E524 		ldrb	r2, [r7, #1253]	@ zero_extendqisi2
 8541 152c 02FB03F3 		mul	r3, r2, r3
 8542 1530 0333     		adds	r3, r3, #3
 8543 1532 6C4A     		ldr	r2, .L348
 8544 1534 1344     		add	r3, r3, r2
 8545 1536 1B68     		ldr	r3, [r3]
 8546 1538 C7F8D034 		str	r3, [r7, #1232]
1127:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 8547              		.loc 1 1127 0
 8548 153c 0023     		movs	r3, #0
 8549 153e 87F8E634 		strb	r3, [r7, #1254]
 8550 1542 20E0     		b	.L322
 8551              	.L323:
1128:..\src/command_processing.c ****                         }
 8552              		.loc 1 1128 0 discriminator 3
 8553 1544 97F8DA24 		ldrb	r2, [r7, #1242]	@ zero_extendqisi2
 8554 1548 07F56673 		add	r3, r7, #920
 8555 154c 53F82220 		ldr	r2, [r3, r2, lsl #2]
 8556 1550 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8557 1554 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 8558 1558 01FB03F3 		mul	r3, r1, r3
 8559 155c 1846     		mov	r0, r3
 8560 155e 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 8561 1562 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 8562 1566 CB1A     		subs	r3, r1, r3
 8563 1568 0344     		add	r3, r3, r0
 8564 156a 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 199


 8565 156c 1344     		add	r3, r3, r2
 8566 156e 97F8E624 		ldrb	r2, [r7, #1254]	@ zero_extendqisi2
 8567 1572 07F59A61 		add	r1, r7, #1232
 8568 1576 0A44     		add	r2, r2, r1
 8569 1578 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8570 157a 1A70     		strb	r2, [r3]
1127:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 8571              		.loc 1 1127 0 discriminator 3
 8572 157c 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 8573 1580 0133     		adds	r3, r3, #1
 8574 1582 87F8E634 		strb	r3, [r7, #1254]
 8575              	.L322:
1127:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 8576              		.loc 1 1127 0 is_stmt 0 discriminator 1
 8577 1586 97F8E624 		ldrb	r2, [r7, #1254]	@ zero_extendqisi2
 8578 158a 97F8E534 		ldrb	r3, [r7, #1253]	@ zero_extendqisi2
 8579 158e 9A42     		cmp	r2, r3
 8580 1590 D8D3     		bcc	.L323
1125:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 8581              		.loc 1 1125 0 is_stmt 1 discriminator 2
 8582 1592 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8583 1596 0133     		adds	r3, r3, #1
 8584 1598 87F8E734 		strb	r3, [r7, #1255]
 8585              	.L321:
1125:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 8586              		.loc 1 1125 0 is_stmt 0 discriminator 1
 8587 159c 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 8588 15a0 07F54072 		add	r2, r7, #768
 8589 15a4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8590 15a6 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8591 15aa 9A42     		cmp	r2, r3
 8592 15ac BAD3     		bcc	.L324
1131:..\src/command_processing.c ****                 case TYPE_UINT32:
 8593              		.loc 1 1131 0 is_stmt 1
 8594 15ae 9CE0     		b	.L333
 8595              	.L303:
1133:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 8596              		.loc 1 1133 0
 8597 15b0 0023     		movs	r3, #0
 8598 15b2 87F8E734 		strb	r3, [r7, #1255]
 8599 15b6 3BE0     		b	.L325
 8600              	.L328:
1134:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 8601              		.loc 1 1134 0
 8602 15b8 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8603 15bc 97F8E524 		ldrb	r2, [r7, #1253]	@ zero_extendqisi2
 8604 15c0 02FB03F3 		mul	r3, r2, r3
 8605 15c4 0333     		adds	r3, r3, #3
 8606 15c6 474A     		ldr	r2, .L348
 8607 15c8 1344     		add	r3, r3, r2
 8608 15ca 1B68     		ldr	r3, [r3]
 8609 15cc C7F8CC34 		str	r3, [r7, #1228]
1135:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 8610              		.loc 1 1135 0
 8611 15d0 0023     		movs	r3, #0
 8612 15d2 87F8E634 		strb	r3, [r7, #1254]
 8613 15d6 20E0     		b	.L326
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 200


 8614              	.L327:
1136:..\src/command_processing.c ****                         }
 8615              		.loc 1 1136 0 discriminator 3
 8616 15d8 97F8DA24 		ldrb	r2, [r7, #1242]	@ zero_extendqisi2
 8617 15dc 07F56673 		add	r3, r7, #920
 8618 15e0 53F82220 		ldr	r2, [r3, r2, lsl #2]
 8619 15e4 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8620 15e8 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 8621 15ec 01FB03F3 		mul	r3, r1, r3
 8622 15f0 1846     		mov	r0, r3
 8623 15f2 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 8624 15f6 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 8625 15fa CB1A     		subs	r3, r1, r3
 8626 15fc 0344     		add	r3, r3, r0
 8627 15fe 013B     		subs	r3, r3, #1
 8628 1600 1344     		add	r3, r3, r2
 8629 1602 97F8E624 		ldrb	r2, [r7, #1254]	@ zero_extendqisi2
 8630 1606 07F2CC41 		addw	r1, r7, #1228
 8631 160a 0A44     		add	r2, r2, r1
 8632 160c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8633 160e 1A70     		strb	r2, [r3]
1135:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 8634              		.loc 1 1135 0 discriminator 3
 8635 1610 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 8636 1614 0133     		adds	r3, r3, #1
 8637 1616 87F8E634 		strb	r3, [r7, #1254]
 8638              	.L326:
1135:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 8639              		.loc 1 1135 0 is_stmt 0 discriminator 1
 8640 161a 97F8E624 		ldrb	r2, [r7, #1254]	@ zero_extendqisi2
 8641 161e 97F8E534 		ldrb	r3, [r7, #1253]	@ zero_extendqisi2
 8642 1622 9A42     		cmp	r2, r3
 8643 1624 D8D3     		bcc	.L327
1133:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 8644              		.loc 1 1133 0 is_stmt 1 discriminator 2
 8645 1626 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8646 162a 0133     		adds	r3, r3, #1
 8647 162c 87F8E734 		strb	r3, [r7, #1255]
 8648              	.L325:
1133:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 8649              		.loc 1 1133 0 is_stmt 0 discriminator 1
 8650 1630 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 8651 1634 07F54072 		add	r2, r7, #768
 8652 1638 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8653 163a 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8654 163e 9A42     		cmp	r2, r3
 8655 1640 BAD3     		bcc	.L328
1139:..\src/command_processing.c ****                 case TYPE_FLOAT:
 8656              		.loc 1 1139 0 is_stmt 1
 8657 1642 52E0     		b	.L333
 8658              	.L304:
1141:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 8659              		.loc 1 1141 0
 8660 1644 0023     		movs	r3, #0
 8661 1646 87F8E734 		strb	r3, [r7, #1255]
 8662 164a 3BE0     		b	.L329
 8663              	.L332:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 201


1142:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 8664              		.loc 1 1142 0
 8665 164c 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8666 1650 97F8E524 		ldrb	r2, [r7, #1253]	@ zero_extendqisi2
 8667 1654 02FB03F3 		mul	r3, r2, r3
 8668 1658 0333     		adds	r3, r3, #3
 8669 165a 224A     		ldr	r2, .L348
 8670 165c 1344     		add	r3, r3, r2
 8671 165e 1B68     		ldr	r3, [r3]	@ float
 8672 1660 C7F8C834 		str	r3, [r7, #1224]	@ float
1143:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 8673              		.loc 1 1143 0
 8674 1664 0023     		movs	r3, #0
 8675 1666 87F8E634 		strb	r3, [r7, #1254]
 8676 166a 20E0     		b	.L330
 8677              	.L331:
1144:..\src/command_processing.c ****                         }
 8678              		.loc 1 1144 0 discriminator 3
 8679 166c 97F8DA24 		ldrb	r2, [r7, #1242]	@ zero_extendqisi2
 8680 1670 07F56673 		add	r3, r7, #920
 8681 1674 53F82220 		ldr	r2, [r3, r2, lsl #2]
 8682 1678 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8683 167c 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 8684 1680 01FB03F3 		mul	r3, r1, r3
 8685 1684 1846     		mov	r0, r3
 8686 1686 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 8687 168a 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 8688 168e CB1A     		subs	r3, r1, r3
 8689 1690 0344     		add	r3, r3, r0
 8690 1692 013B     		subs	r3, r3, #1
 8691 1694 1344     		add	r3, r3, r2
 8692 1696 97F8E624 		ldrb	r2, [r7, #1254]	@ zero_extendqisi2
 8693 169a 07F59961 		add	r1, r7, #1224
 8694 169e 0A44     		add	r2, r2, r1
 8695 16a0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8696 16a2 1A70     		strb	r2, [r3]
1143:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 8697              		.loc 1 1143 0 discriminator 3
 8698 16a4 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 8699 16a8 0133     		adds	r3, r3, #1
 8700 16aa 87F8E634 		strb	r3, [r7, #1254]
 8701              	.L330:
1143:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 8702              		.loc 1 1143 0 is_stmt 0 discriminator 1
 8703 16ae 97F8E624 		ldrb	r2, [r7, #1254]	@ zero_extendqisi2
 8704 16b2 97F8E534 		ldrb	r3, [r7, #1253]	@ zero_extendqisi2
 8705 16b6 9A42     		cmp	r2, r3
 8706 16b8 D8D3     		bcc	.L331
1141:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 8707              		.loc 1 1141 0 is_stmt 1 discriminator 2
 8708 16ba 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8709 16be 0133     		adds	r3, r3, #1
 8710 16c0 87F8E734 		strb	r3, [r7, #1255]
 8711              	.L329:
1141:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 8712              		.loc 1 1141 0 is_stmt 0 discriminator 1
 8713 16c4 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 202


 8714 16c8 07F54072 		add	r2, r7, #768
 8715 16cc D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8716 16ce 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8717 16d2 9A42     		cmp	r2, r3
 8718 16d4 BAD3     		bcc	.L332
1147:..\src/command_processing.c ****                 default:
 8719              		.loc 1 1147 0 is_stmt 1
 8720 16d6 08E0     		b	.L333
 8721              	.L295:
1154:..\src/command_processing.c ****         }
 8722              		.loc 1 1154 0
 8723 16d8 BB1D     		adds	r3, r7, #6
 8724 16da 1B88     		ldrh	r3, [r3]
 8725 16dc 1846     		mov	r0, r3
 8726 16de FFF7FEFF 		bl	set_custom_param
 8727 16e2 02E0     		b	.L333
 8728              	.L349:
 8729              		.align	2
 8730              	.L348:
 8731 16e4 00000000 		.word	g_rx
 8732              	.L338:
1149:..\src/command_processing.c ****             }
 8733              		.loc 1 1149 0
 8734 16e8 00BF     		nop
 8735              	.L333:
1158:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
 8736              		.loc 1 1158 0
 8737 16ea 97F8DB34 		ldrb	r3, [r7, #1243]	@ zero_extendqisi2
 8738 16ee 9BB2     		uxth	r3, r3
 8739 16f0 BA1D     		adds	r2, r7, #6
 8740 16f2 1288     		ldrh	r2, [r2]
 8741 16f4 9A42     		cmp	r2, r3
 8742 16f6 11D0     		beq	.L334
1159:..\src/command_processing.c ****         }
 8743              		.loc 1 1159 0
 8744 16f8 D7F8E034 		ldr	r3, [r7, #1248]
 8745 16fc 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 8746 1700 5B01     		lsls	r3, r3, #5
 8747 1702 03F51273 		add	r3, r3, #584
 8748 1706 D7F8E024 		ldr	r2, [r7, #1248]
 8749 170a D018     		adds	r0, r2, r3
 8750 170c D7F8E034 		ldr	r3, [r7, #1248]
 8751 1710 03F5F873 		add	r3, r3, #496
 8752 1714 1022     		movs	r2, #16
 8753 1716 1946     		mov	r1, r3
 8754 1718 FFF7FEFF 		bl	memcpy
 8755              	.L334:
1163:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
 8756              		.loc 1 1163 0
 8757 171c 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 8758 1720 07F55372 		add	r2, r7, #844
 8759 1724 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8760 1726 002B     		cmp	r3, #0
 8761 1728 42D1     		bne	.L339
 8762              	.LBB14:
1164:..\src/command_processing.c ****             do {
 8763              		.loc 1 1164 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 203


 8764 172a 0023     		movs	r3, #0
 8765 172c 87F8DF34 		strb	r3, [r7, #1247]
 8766 1730 FF23     		movs	r3, #255
 8767 1732 87F8DE34 		strb	r3, [r7, #1246]
 8768              	.L336:
1166:..\src/command_processing.c ****                 idx++;
 8769              		.loc 1 1166 0
 8770 1736 97F8DF34 		ldrb	r3, [r7, #1247]	@ zero_extendqisi2
 8771 173a 07F55372 		add	r2, r7, #844
 8772 173e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8773 1740 002B     		cmp	r3, #0
 8774 1742 04D1     		bne	.L335
1166:..\src/command_processing.c ****                 idx++;
 8775              		.loc 1 1166 0 is_stmt 0 discriminator 1
 8776 1744 97F8DE34 		ldrb	r3, [r7, #1246]	@ zero_extendqisi2
 8777 1748 0133     		adds	r3, r3, #1
 8778 174a 87F8DE34 		strb	r3, [r7, #1246]
 8779              	.L335:
1167:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
 8780              		.loc 1 1167 0 is_stmt 1
 8781 174e 97F8DF34 		ldrb	r3, [r7, #1247]	@ zero_extendqisi2
 8782 1752 0133     		adds	r3, r3, #1
 8783 1754 87F8DF34 		strb	r3, [r7, #1247]
1168:..\src/command_processing.c ****             
 8784              		.loc 1 1168 0
 8785 1758 97F8DF24 		ldrb	r2, [r7, #1247]	@ zero_extendqisi2
 8786 175c 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 8787 1760 9A42     		cmp	r2, r3
 8788 1762 E8D9     		bls	.L336
1170:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 8789              		.loc 1 1170 0
 8790 1764 97F8DE34 		ldrb	r3, [r7, #1246]	@ zero_extendqisi2
 8791 1768 07F1C402 		add	r2, r7, #196
 8792 176c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8793 176e 052B     		cmp	r3, #5
 8794 1770 1BD0     		beq	.L337
1170:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 8795              		.loc 1 1170 0 is_stmt 0 discriminator 1
 8796 1772 97F8DE34 		ldrb	r3, [r7, #1246]	@ zero_extendqisi2
 8797 1776 07F1C402 		add	r2, r7, #196
 8798 177a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8799 177c 062B     		cmp	r3, #6
 8800 177e 14D0     		beq	.L337
1170:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 8801              		.loc 1 1170 0 discriminator 2
 8802 1780 97F8DE34 		ldrb	r3, [r7, #1246]	@ zero_extendqisi2
 8803 1784 07F1C402 		add	r2, r7, #196
 8804 1788 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8805 178a 082B     		cmp	r3, #8
 8806 178c 0DD0     		beq	.L337
1170:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 8807              		.loc 1 1170 0 discriminator 3
 8808 178e 97F8DE34 		ldrb	r3, [r7, #1246]	@ zero_extendqisi2
 8809 1792 07F1C402 		add	r2, r7, #196
 8810 1796 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8811 1798 092B     		cmp	r3, #9
 8812 179a 06D0     		beq	.L337
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 204


1170:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 8813              		.loc 1 1170 0 discriminator 4
 8814 179c 97F8DE34 		ldrb	r3, [r7, #1246]	@ zero_extendqisi2
 8815 17a0 07F1C402 		add	r2, r7, #196
 8816 17a4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8817 17a6 0A2B     		cmp	r3, #10
 8818 17a8 02D1     		bne	.L339
 8819              	.L337:
1171:..\src/command_processing.c ****             }   
 8820              		.loc 1 1171 0 is_stmt 1
 8821 17aa 044B     		ldr	r3, .L350
 8822 17ac 0122     		movs	r2, #1
 8823 17ae 1A70     		strb	r2, [r3]
 8824              	.L339:
 8825              	.LBE14:
 8826              		.loc 1 1175 0
 8827 17b0 00BF     		nop
 8828 17b2 07F59D67 		add	r7, r7, #1256
 8829              		.cfi_def_cfa_offset 16
 8830 17b6 BD46     		mov	sp, r7
 8831              		.cfi_def_cfa_register 13
 8832              		@ sp needed
 8833 17b8 B0BD     		pop	{r4, r5, r7, pc}
 8834              	.L351:
 8835 17ba 00BF     		.align	2
 8836              	.L350:
 8837 17bc 00000000 		.word	reset_PSoC_flag
 8838              		.cfi_endproc
 8839              	.LFE68:
 8840              		.size	manage_param_list, .-manage_param_list
 8841              		.global	__aeabi_fmul
 8842              		.global	__aeabi_f2iz
 8843              		.section	.text.set_custom_param,"ax",%progbits
 8844              		.align	2
 8845              		.global	set_custom_param
 8846              		.thumb
 8847              		.thumb_func
 8848              		.type	set_custom_param, %function
 8849              	set_custom_param:
 8850              	.LFB69:
1176:..\src/command_processing.c **** 
1177:..\src/command_processing.c **** //==============================================================================
1178:..\src/command_processing.c **** //                                                              SET CUSTOM PARAM
1179:..\src/command_processing.c **** //==============================================================================
1180:..\src/command_processing.c **** 
1181:..\src/command_processing.c **** void set_custom_param(uint16 index) {
 8851              		.loc 1 1181 0
 8852              		.cfi_startproc
 8853              		@ args = 0, pretend = 0, frame = 24
 8854              		@ frame_needed = 1, uses_anonymous_args = 0
 8855 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 8856              		.cfi_def_cfa_offset 20
 8857              		.cfi_offset 4, -20
 8858              		.cfi_offset 5, -16
 8859              		.cfi_offset 6, -12
 8860              		.cfi_offset 7, -8
 8861              		.cfi_offset 14, -4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 205


 8862 0002 87B0     		sub	sp, sp, #28
 8863              		.cfi_def_cfa_offset 48
 8864 0004 00AF     		add	r7, sp, #0
 8865              		.cfi_def_cfa_register 7
 8866 0006 0346     		mov	r3, r0
 8867 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1182:..\src/command_processing.c **** 
1183:..\src/command_processing.c ****     uint8 CYDATA i, j;
1184:..\src/command_processing.c ****     uint8 aux_uchar;
1185:..\src/command_processing.c ****     float aux_float, aux_float2;
1186:..\src/command_processing.c **** 
1187:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 8868              		.loc 1 1187 0
 8869 000a 0023     		movs	r3, #0
 8870 000c 3B75     		strb	r3, [r7, #20]
1188:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 8871              		.loc 1 1188 0
 8872 000e 0123     		movs	r3, #1
 8873 0010 FB74     		strb	r3, [r7, #19]
1189:..\src/command_processing.c ****     
1190:..\src/command_processing.c ****     switch(index){
 8874              		.loc 1 1190 0
 8875 0012 FB88     		ldrh	r3, [r7, #6]
 8876 0014 023B     		subs	r3, r3, #2
 8877 0016 452B     		cmp	r3, #69
 8878 0018 01F2EB81 		bhi	.L444
 8879 001c 01A2     		adr	r2, .L355
 8880 001e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8881 0022 00BF     		.p2align 2
 8882              	.L355:
 8883 0024 3D010000 		.word	.L354+1
 8884 0028 6F030000 		.word	.L356+1
 8885 002c F3130000 		.word	.L444+1
 8886 0030 B5050000 		.word	.L357+1
 8887 0034 F3130000 		.word	.L444+1
 8888 0038 F3130000 		.word	.L444+1
 8889 003c FF050000 		.word	.L358+1
 8890 0040 F3130000 		.word	.L444+1
 8891 0044 F3130000 		.word	.L444+1
 8892 0048 35070000 		.word	.L359+1
 8893 004c F3130000 		.word	.L444+1
 8894 0050 F3130000 		.word	.L444+1
 8895 0054 F3130000 		.word	.L444+1
 8896 0058 F3130000 		.word	.L444+1
 8897 005c F3130000 		.word	.L444+1
 8898 0060 F3130000 		.word	.L444+1
 8899 0064 F3130000 		.word	.L444+1
 8900 0068 F3130000 		.word	.L444+1
 8901 006c F3130000 		.word	.L444+1
 8902 0070 F3130000 		.word	.L444+1
 8903 0074 F3130000 		.word	.L444+1
 8904 0078 35080000 		.word	.L360+1
 8905 007c 93080000 		.word	.L361+1
 8906 0080 F3130000 		.word	.L444+1
 8907 0084 F3130000 		.word	.L444+1
 8908 0088 F3130000 		.word	.L444+1
 8909 008c CD080000 		.word	.L362+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 206


 8910 0090 F3130000 		.word	.L444+1
 8911 0094 F3130000 		.word	.L444+1
 8912 0098 490A0000 		.word	.L363+1
 8913 009c F50A0000 		.word	.L364+1
 8914 00a0 F3130000 		.word	.L444+1
 8915 00a4 F3130000 		.word	.L444+1
 8916 00a8 F3130000 		.word	.L444+1
 8917 00ac F3130000 		.word	.L444+1
 8918 00b0 F3130000 		.word	.L444+1
 8919 00b4 2F0B0000 		.word	.L365+1
 8920 00b8 F3130000 		.word	.L444+1
 8921 00bc F3130000 		.word	.L444+1
 8922 00c0 F3130000 		.word	.L444+1
 8923 00c4 F3130000 		.word	.L444+1
 8924 00c8 F3130000 		.word	.L444+1
 8925 00cc 690B0000 		.word	.L366+1
 8926 00d0 AF0D0000 		.word	.L367+1
 8927 00d4 F3130000 		.word	.L444+1
 8928 00d8 DD0F0000 		.word	.L368+1
 8929 00dc F3130000 		.word	.L444+1
 8930 00e0 F3130000 		.word	.L444+1
 8931 00e4 45100000 		.word	.L369+1
 8932 00e8 F3130000 		.word	.L444+1
 8933 00ec F3130000 		.word	.L444+1
 8934 00f0 59110000 		.word	.L370+1
 8935 00f4 F3130000 		.word	.L444+1
 8936 00f8 F3130000 		.word	.L444+1
 8937 00fc F3130000 		.word	.L444+1
 8938 0100 F3130000 		.word	.L444+1
 8939 0104 F3130000 		.word	.L444+1
 8940 0108 F3130000 		.word	.L444+1
 8941 010c F3130000 		.word	.L444+1
 8942 0110 57120000 		.word	.L371+1
 8943 0114 F3130000 		.word	.L444+1
 8944 0118 F3130000 		.word	.L444+1
 8945 011c F3130000 		.word	.L444+1
 8946 0120 F3130000 		.word	.L444+1
 8947 0124 F3130000 		.word	.L444+1
 8948 0128 F3130000 		.word	.L444+1
 8949 012c F3130000 		.word	.L444+1
 8950 0130 F3130000 		.word	.L444+1
 8951 0134 F3130000 		.word	.L444+1
 8952 0138 A1120000 		.word	.L372+1
 8953              		.p2align 1
 8954              	.L354:
1191:..\src/command_processing.c ****         case 2:         // Position PID
1192:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 8955              		.loc 1 1192 0
 8956 013c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8957 013e AB49     		ldr	r1, .L450
 8958 0140 1346     		mov	r3, r2
 8959 0142 DB00     		lsls	r3, r3, #3
 8960 0144 9B1A     		subs	r3, r3, r2
 8961 0146 1B01     		lsls	r3, r3, #4
 8962 0148 0B44     		add	r3, r3, r1
 8963 014a 03F20F13 		addw	r3, r3, #271
 8964 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 207


 8965 0150 032B     		cmp	r3, #3
 8966 0152 00F08680 		beq	.L373
1193:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 8967              		.loc 1 1193 0
 8968 0156 A64B     		ldr	r3, .L450+4
 8969 0158 1B68     		ldr	r3, [r3]	@ float
 8970 015a FB60     		str	r3, [r7, #12]	@ float
1194:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8971              		.loc 1 1194 0
 8972 015c 0023     		movs	r3, #0
 8973 015e BB75     		strb	r3, [r7, #22]
 8974 0160 0EE0     		b	.L374
 8975              	.L375:
1195:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8976              		.loc 1 1195 0 discriminator 3
 8977 0162 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8978 0164 C3F10303 		rsb	r3, r3, #3
 8979 0168 07F10802 		add	r2, r7, #8
 8980 016c 1344     		add	r3, r3, r2
 8981 016e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8982 0170 07F10C01 		add	r1, r7, #12
 8983 0174 0A44     		add	r2, r2, r1
 8984 0176 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8985 0178 1A70     		strb	r2, [r3]
1194:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8986              		.loc 1 1194 0 discriminator 3
 8987 017a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8988 017c 0133     		adds	r3, r3, #1
 8989 017e BB75     		strb	r3, [r7, #22]
 8990              	.L374:
1194:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8991              		.loc 1 1194 0 is_stmt 0 discriminator 1
 8992 0180 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8993 0182 032B     		cmp	r3, #3
 8994 0184 EDD9     		bls	.L375
1196:..\src/command_processing.c ****                 }
1197:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p = aux_float2 * 65536;
 8995              		.loc 1 1197 0 is_stmt 1
 8996 0186 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 8997 0188 BB68     		ldr	r3, [r7, #8]	@ float
 8998 018a 4FF08F41 		mov	r1, #1199570944
 8999 018e 1846     		mov	r0, r3
 9000 0190 FFF7FEFF 		bl	__aeabi_fmul
 9001 0194 0346     		mov	r3, r0
 9002 0196 1846     		mov	r0, r3
 9003 0198 FFF7FEFF 		bl	__aeabi_f2iz
 9004 019c 0146     		mov	r1, r0
 9005 019e 954A     		ldr	r2, .L450+8
 9006 01a0 2346     		mov	r3, r4
 9007 01a2 DB00     		lsls	r3, r3, #3
 9008 01a4 1B1B     		subs	r3, r3, r4
 9009 01a6 1B01     		lsls	r3, r3, #4
 9010 01a8 1344     		add	r3, r3, r2
 9011 01aa B033     		adds	r3, r3, #176
 9012 01ac 1960     		str	r1, [r3]
1198:..\src/command_processing.c ****                 
1199:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 208


 9013              		.loc 1 1199 0
 9014 01ae 924B     		ldr	r3, .L450+12
 9015 01b0 1B68     		ldr	r3, [r3]	@ float
 9016 01b2 FB60     		str	r3, [r7, #12]	@ float
1200:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9017              		.loc 1 1200 0
 9018 01b4 0023     		movs	r3, #0
 9019 01b6 BB75     		strb	r3, [r7, #22]
 9020 01b8 0EE0     		b	.L376
 9021              	.L377:
1201:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9022              		.loc 1 1201 0 discriminator 3
 9023 01ba BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9024 01bc C3F10303 		rsb	r3, r3, #3
 9025 01c0 07F10802 		add	r2, r7, #8
 9026 01c4 1344     		add	r3, r3, r2
 9027 01c6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9028 01c8 07F10C01 		add	r1, r7, #12
 9029 01cc 0A44     		add	r2, r2, r1
 9030 01ce 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9031 01d0 1A70     		strb	r2, [r3]
1200:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9032              		.loc 1 1200 0 discriminator 3
 9033 01d2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9034 01d4 0133     		adds	r3, r3, #1
 9035 01d6 BB75     		strb	r3, [r7, #22]
 9036              	.L376:
1200:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9037              		.loc 1 1200 0 is_stmt 0 discriminator 1
 9038 01d8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9039 01da 032B     		cmp	r3, #3
 9040 01dc EDD9     		bls	.L377
1202:..\src/command_processing.c ****                 }
1203:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i = aux_float2 * 65536;
 9041              		.loc 1 1203 0 is_stmt 1
 9042 01de 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9043 01e0 BB68     		ldr	r3, [r7, #8]	@ float
 9044 01e2 4FF08F41 		mov	r1, #1199570944
 9045 01e6 1846     		mov	r0, r3
 9046 01e8 FFF7FEFF 		bl	__aeabi_fmul
 9047 01ec 0346     		mov	r3, r0
 9048 01ee 1846     		mov	r0, r3
 9049 01f0 FFF7FEFF 		bl	__aeabi_f2iz
 9050 01f4 0146     		mov	r1, r0
 9051 01f6 7F4A     		ldr	r2, .L450+8
 9052 01f8 2346     		mov	r3, r4
 9053 01fa DB00     		lsls	r3, r3, #3
 9054 01fc 1B1B     		subs	r3, r3, r4
 9055 01fe 1B01     		lsls	r3, r3, #4
 9056 0200 1344     		add	r3, r3, r2
 9057 0202 B433     		adds	r3, r3, #180
 9058 0204 1960     		str	r1, [r3]
1204:..\src/command_processing.c ****                 
1205:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 9059              		.loc 1 1205 0
 9060 0206 7D4B     		ldr	r3, .L450+16
 9061 0208 1B68     		ldr	r3, [r3]	@ float
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 209


 9062 020a FB60     		str	r3, [r7, #12]	@ float
1206:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9063              		.loc 1 1206 0
 9064 020c 0023     		movs	r3, #0
 9065 020e BB75     		strb	r3, [r7, #22]
 9066 0210 0EE0     		b	.L378
 9067              	.L379:
1207:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9068              		.loc 1 1207 0 discriminator 3
 9069 0212 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9070 0214 C3F10303 		rsb	r3, r3, #3
 9071 0218 07F10802 		add	r2, r7, #8
 9072 021c 1344     		add	r3, r3, r2
 9073 021e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9074 0220 07F10C01 		add	r1, r7, #12
 9075 0224 0A44     		add	r2, r2, r1
 9076 0226 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9077 0228 1A70     		strb	r2, [r3]
1206:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9078              		.loc 1 1206 0 discriminator 3
 9079 022a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9080 022c 0133     		adds	r3, r3, #1
 9081 022e BB75     		strb	r3, [r7, #22]
 9082              	.L378:
1206:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9083              		.loc 1 1206 0 is_stmt 0 discriminator 1
 9084 0230 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9085 0232 032B     		cmp	r3, #3
 9086 0234 EDD9     		bls	.L379
1208:..\src/command_processing.c ****                 }
1209:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d = aux_float2 * 65536;
 9087              		.loc 1 1209 0 is_stmt 1
 9088 0236 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9089 0238 BB68     		ldr	r3, [r7, #8]	@ float
 9090 023a 4FF08F41 		mov	r1, #1199570944
 9091 023e 1846     		mov	r0, r3
 9092 0240 FFF7FEFF 		bl	__aeabi_fmul
 9093 0244 0346     		mov	r3, r0
 9094 0246 1846     		mov	r0, r3
 9095 0248 FFF7FEFF 		bl	__aeabi_f2iz
 9096 024c 0146     		mov	r1, r0
 9097 024e 694A     		ldr	r2, .L450+8
 9098 0250 2346     		mov	r3, r4
 9099 0252 DB00     		lsls	r3, r3, #3
 9100 0254 1B1B     		subs	r3, r3, r4
 9101 0256 1B01     		lsls	r3, r3, #4
 9102 0258 1344     		add	r3, r3, r2
 9103 025a B833     		adds	r3, r3, #184
 9104 025c 1960     		str	r1, [r3]
1210:..\src/command_processing.c ****             }
1211:..\src/command_processing.c ****             else {
1212:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1213:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1214:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1215:..\src/command_processing.c ****                 }
1216:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1217:..\src/command_processing.c ****                 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 210


1218:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1219:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1220:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1221:..\src/command_processing.c ****                 }
1222:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1223:..\src/command_processing.c ****                 
1224:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1225:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1226:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1227:..\src/command_processing.c ****                 }
1228:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1229:..\src/command_processing.c ****             }
1230:..\src/command_processing.c ****             break;
 9105              		.loc 1 1230 0
 9106 025e 01F0D3B8 		b	.L387
 9107              	.L373:
1212:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9108              		.loc 1 1212 0
 9109 0262 634B     		ldr	r3, .L450+4
 9110 0264 1B68     		ldr	r3, [r3]	@ float
 9111 0266 FB60     		str	r3, [r7, #12]	@ float
1213:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9112              		.loc 1 1213 0
 9113 0268 0023     		movs	r3, #0
 9114 026a BB75     		strb	r3, [r7, #22]
 9115 026c 0EE0     		b	.L381
 9116              	.L382:
1214:..\src/command_processing.c ****                 }
 9117              		.loc 1 1214 0 discriminator 3
 9118 026e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9119 0270 C3F10303 		rsb	r3, r3, #3
 9120 0274 07F10802 		add	r2, r7, #8
 9121 0278 1344     		add	r3, r3, r2
 9122 027a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9123 027c 07F10C01 		add	r1, r7, #12
 9124 0280 0A44     		add	r2, r2, r1
 9125 0282 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9126 0284 1A70     		strb	r2, [r3]
1213:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9127              		.loc 1 1213 0 discriminator 3
 9128 0286 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9129 0288 0133     		adds	r3, r3, #1
 9130 028a BB75     		strb	r3, [r7, #22]
 9131              	.L381:
1213:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9132              		.loc 1 1213 0 is_stmt 0 discriminator 1
 9133 028c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9134 028e 032B     		cmp	r3, #3
 9135 0290 EDD9     		bls	.L382
1216:..\src/command_processing.c ****                 
 9136              		.loc 1 1216 0 is_stmt 1
 9137 0292 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9138 0294 BB68     		ldr	r3, [r7, #8]	@ float
 9139 0296 4FF08F41 		mov	r1, #1199570944
 9140 029a 1846     		mov	r0, r3
 9141 029c FFF7FEFF 		bl	__aeabi_fmul
 9142 02a0 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 211


 9143 02a2 1846     		mov	r0, r3
 9144 02a4 FFF7FEFF 		bl	__aeabi_f2iz
 9145 02a8 0146     		mov	r1, r0
 9146 02aa 524A     		ldr	r2, .L450+8
 9147 02ac 2346     		mov	r3, r4
 9148 02ae DB00     		lsls	r3, r3, #3
 9149 02b0 1B1B     		subs	r3, r3, r4
 9150 02b2 1B01     		lsls	r3, r3, #4
 9151 02b4 1344     		add	r3, r3, r2
 9152 02b6 C833     		adds	r3, r3, #200
 9153 02b8 1960     		str	r1, [r3]
1218:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9154              		.loc 1 1218 0
 9155 02ba 4F4B     		ldr	r3, .L450+12
 9156 02bc 1B68     		ldr	r3, [r3]	@ float
 9157 02be FB60     		str	r3, [r7, #12]	@ float
1219:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9158              		.loc 1 1219 0
 9159 02c0 0023     		movs	r3, #0
 9160 02c2 BB75     		strb	r3, [r7, #22]
 9161 02c4 0EE0     		b	.L383
 9162              	.L384:
1220:..\src/command_processing.c ****                 }
 9163              		.loc 1 1220 0 discriminator 3
 9164 02c6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9165 02c8 C3F10303 		rsb	r3, r3, #3
 9166 02cc 07F10802 		add	r2, r7, #8
 9167 02d0 1344     		add	r3, r3, r2
 9168 02d2 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9169 02d4 07F10C01 		add	r1, r7, #12
 9170 02d8 0A44     		add	r2, r2, r1
 9171 02da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9172 02dc 1A70     		strb	r2, [r3]
1219:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9173              		.loc 1 1219 0 discriminator 3
 9174 02de BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9175 02e0 0133     		adds	r3, r3, #1
 9176 02e2 BB75     		strb	r3, [r7, #22]
 9177              	.L383:
1219:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9178              		.loc 1 1219 0 is_stmt 0 discriminator 1
 9179 02e4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9180 02e6 032B     		cmp	r3, #3
 9181 02e8 EDD9     		bls	.L384
1222:..\src/command_processing.c ****                 
 9182              		.loc 1 1222 0 is_stmt 1
 9183 02ea 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9184 02ec BB68     		ldr	r3, [r7, #8]	@ float
 9185 02ee 4FF08F41 		mov	r1, #1199570944
 9186 02f2 1846     		mov	r0, r3
 9187 02f4 FFF7FEFF 		bl	__aeabi_fmul
 9188 02f8 0346     		mov	r3, r0
 9189 02fa 1846     		mov	r0, r3
 9190 02fc FFF7FEFF 		bl	__aeabi_f2iz
 9191 0300 0146     		mov	r1, r0
 9192 0302 3C4A     		ldr	r2, .L450+8
 9193 0304 2346     		mov	r3, r4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 212


 9194 0306 DB00     		lsls	r3, r3, #3
 9195 0308 1B1B     		subs	r3, r3, r4
 9196 030a 1B01     		lsls	r3, r3, #4
 9197 030c 1344     		add	r3, r3, r2
 9198 030e CC33     		adds	r3, r3, #204
 9199 0310 1960     		str	r1, [r3]
1224:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9200              		.loc 1 1224 0
 9201 0312 3A4B     		ldr	r3, .L450+16
 9202 0314 1B68     		ldr	r3, [r3]	@ float
 9203 0316 FB60     		str	r3, [r7, #12]	@ float
1225:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9204              		.loc 1 1225 0
 9205 0318 0023     		movs	r3, #0
 9206 031a BB75     		strb	r3, [r7, #22]
 9207 031c 0EE0     		b	.L385
 9208              	.L386:
1226:..\src/command_processing.c ****                 }
 9209              		.loc 1 1226 0 discriminator 3
 9210 031e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9211 0320 C3F10303 		rsb	r3, r3, #3
 9212 0324 07F10802 		add	r2, r7, #8
 9213 0328 1344     		add	r3, r3, r2
 9214 032a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9215 032c 07F10C01 		add	r1, r7, #12
 9216 0330 0A44     		add	r2, r2, r1
 9217 0332 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9218 0334 1A70     		strb	r2, [r3]
1225:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9219              		.loc 1 1225 0 discriminator 3
 9220 0336 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9221 0338 0133     		adds	r3, r3, #1
 9222 033a BB75     		strb	r3, [r7, #22]
 9223              	.L385:
1225:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9224              		.loc 1 1225 0 is_stmt 0 discriminator 1
 9225 033c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9226 033e 032B     		cmp	r3, #3
 9227 0340 EDD9     		bls	.L386
1228:..\src/command_processing.c ****             }
 9228              		.loc 1 1228 0 is_stmt 1
 9229 0342 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9230 0344 BB68     		ldr	r3, [r7, #8]	@ float
 9231 0346 4FF08F41 		mov	r1, #1199570944
 9232 034a 1846     		mov	r0, r3
 9233 034c FFF7FEFF 		bl	__aeabi_fmul
 9234 0350 0346     		mov	r3, r0
 9235 0352 1846     		mov	r0, r3
 9236 0354 FFF7FEFF 		bl	__aeabi_f2iz
 9237 0358 0146     		mov	r1, r0
 9238 035a 264A     		ldr	r2, .L450+8
 9239 035c 2346     		mov	r3, r4
 9240 035e DB00     		lsls	r3, r3, #3
 9241 0360 1B1B     		subs	r3, r3, r4
 9242 0362 1B01     		lsls	r3, r3, #4
 9243 0364 1344     		add	r3, r3, r2
 9244 0366 D033     		adds	r3, r3, #208
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 213


 9245 0368 1960     		str	r1, [r3]
 9246              		.loc 1 1230 0
 9247 036a 01F04DB8 		b	.L387
 9248              	.L356:
1231:..\src/command_processing.c ****             
1232:..\src/command_processing.c ****         case 3:         //Current PID
1233:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 9249              		.loc 1 1233 0
 9250 036e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9251 0370 1E49     		ldr	r1, .L450
 9252 0372 1346     		mov	r3, r2
 9253 0374 DB00     		lsls	r3, r3, #3
 9254 0376 9B1A     		subs	r3, r3, r2
 9255 0378 1B01     		lsls	r3, r3, #4
 9256 037a 0B44     		add	r3, r3, r1
 9257 037c 03F20F13 		addw	r3, r3, #271
 9258 0380 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9259 0382 032B     		cmp	r3, #3
 9260 0384 00F09080 		beq	.L388
1234:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 9261              		.loc 1 1234 0
 9262 0388 194B     		ldr	r3, .L450+4
 9263 038a 1B68     		ldr	r3, [r3]	@ float
 9264 038c FB60     		str	r3, [r7, #12]	@ float
1235:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9265              		.loc 1 1235 0
 9266 038e 0023     		movs	r3, #0
 9267 0390 BB75     		strb	r3, [r7, #22]
 9268 0392 0EE0     		b	.L389
 9269              	.L390:
1236:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9270              		.loc 1 1236 0 discriminator 3
 9271 0394 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9272 0396 C3F10303 		rsb	r3, r3, #3
 9273 039a 07F10802 		add	r2, r7, #8
 9274 039e 1344     		add	r3, r3, r2
 9275 03a0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9276 03a2 07F10C01 		add	r1, r7, #12
 9277 03a6 0A44     		add	r2, r2, r1
 9278 03a8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9279 03aa 1A70     		strb	r2, [r3]
1235:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9280              		.loc 1 1235 0 discriminator 3
 9281 03ac BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9282 03ae 0133     		adds	r3, r3, #1
 9283 03b0 BB75     		strb	r3, [r7, #22]
 9284              	.L389:
1235:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9285              		.loc 1 1235 0 is_stmt 0 discriminator 1
 9286 03b2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9287 03b4 032B     		cmp	r3, #3
 9288 03b6 EDD9     		bls	.L390
1237:..\src/command_processing.c ****                 }
1238:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c = aux_float2 * 65536;
 9289              		.loc 1 1238 0 is_stmt 1
 9290 03b8 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9291 03ba BB68     		ldr	r3, [r7, #8]	@ float
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 214


 9292 03bc 4FF08F41 		mov	r1, #1199570944
 9293 03c0 1846     		mov	r0, r3
 9294 03c2 FFF7FEFF 		bl	__aeabi_fmul
 9295 03c6 0346     		mov	r3, r0
 9296 03c8 1846     		mov	r0, r3
 9297 03ca FFF7FEFF 		bl	__aeabi_f2iz
 9298 03ce 0146     		mov	r1, r0
 9299 03d0 084A     		ldr	r2, .L450+8
 9300 03d2 2346     		mov	r3, r4
 9301 03d4 DB00     		lsls	r3, r3, #3
 9302 03d6 1B1B     		subs	r3, r3, r4
 9303 03d8 1B01     		lsls	r3, r3, #4
 9304 03da 1344     		add	r3, r3, r2
 9305 03dc BC33     		adds	r3, r3, #188
 9306 03de 1960     		str	r1, [r3]
1239:..\src/command_processing.c ****                 
1240:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 9307              		.loc 1 1240 0
 9308 03e0 054B     		ldr	r3, .L450+12
 9309 03e2 1B68     		ldr	r3, [r3]	@ float
 9310 03e4 FB60     		str	r3, [r7, #12]	@ float
1241:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9311              		.loc 1 1241 0
 9312 03e6 0023     		movs	r3, #0
 9313 03e8 BB75     		strb	r3, [r7, #22]
 9314 03ea 18E0     		b	.L391
 9315              	.L451:
 9316              		.align	2
 9317              	.L450:
 9318 03ec 00000000 		.word	c_mem
 9319 03f0 03000000 		.word	g_rx+3
 9320 03f4 00000000 		.word	g_mem
 9321 03f8 07000000 		.word	g_rx+7
 9322 03fc 0B000000 		.word	g_rx+11
 9323              	.L392:
1242:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9324              		.loc 1 1242 0 discriminator 3
 9325 0400 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9326 0402 C3F10303 		rsb	r3, r3, #3
 9327 0406 07F10802 		add	r2, r7, #8
 9328 040a 1344     		add	r3, r3, r2
 9329 040c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9330 040e 07F10C01 		add	r1, r7, #12
 9331 0412 0A44     		add	r2, r2, r1
 9332 0414 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9333 0416 1A70     		strb	r2, [r3]
1241:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9334              		.loc 1 1241 0 discriminator 3
 9335 0418 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9336 041a 0133     		adds	r3, r3, #1
 9337 041c BB75     		strb	r3, [r7, #22]
 9338              	.L391:
1241:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9339              		.loc 1 1241 0 is_stmt 0 discriminator 1
 9340 041e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9341 0420 032B     		cmp	r3, #3
 9342 0422 EDD9     		bls	.L392
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 215


1243:..\src/command_processing.c ****                 }
1244:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c = aux_float2 * 65536;
 9343              		.loc 1 1244 0 is_stmt 1
 9344 0424 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9345 0426 BB68     		ldr	r3, [r7, #8]	@ float
 9346 0428 4FF08F41 		mov	r1, #1199570944
 9347 042c 1846     		mov	r0, r3
 9348 042e FFF7FEFF 		bl	__aeabi_fmul
 9349 0432 0346     		mov	r3, r0
 9350 0434 1846     		mov	r0, r3
 9351 0436 FFF7FEFF 		bl	__aeabi_f2iz
 9352 043a 0146     		mov	r1, r0
 9353 043c B54A     		ldr	r2, .L452
 9354 043e 2346     		mov	r3, r4
 9355 0440 DB00     		lsls	r3, r3, #3
 9356 0442 1B1B     		subs	r3, r3, r4
 9357 0444 1B01     		lsls	r3, r3, #4
 9358 0446 1344     		add	r3, r3, r2
 9359 0448 C033     		adds	r3, r3, #192
 9360 044a 1960     		str	r1, [r3]
1245:..\src/command_processing.c ****                 
1246:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 9361              		.loc 1 1246 0
 9362 044c B24B     		ldr	r3, .L452+4
 9363 044e 1B68     		ldr	r3, [r3]	@ float
 9364 0450 FB60     		str	r3, [r7, #12]	@ float
1247:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9365              		.loc 1 1247 0
 9366 0452 0023     		movs	r3, #0
 9367 0454 BB75     		strb	r3, [r7, #22]
 9368 0456 0EE0     		b	.L393
 9369              	.L394:
1248:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9370              		.loc 1 1248 0 discriminator 3
 9371 0458 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9372 045a C3F10303 		rsb	r3, r3, #3
 9373 045e 07F10802 		add	r2, r7, #8
 9374 0462 1344     		add	r3, r3, r2
 9375 0464 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9376 0466 07F10C01 		add	r1, r7, #12
 9377 046a 0A44     		add	r2, r2, r1
 9378 046c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9379 046e 1A70     		strb	r2, [r3]
1247:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9380              		.loc 1 1247 0 discriminator 3
 9381 0470 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9382 0472 0133     		adds	r3, r3, #1
 9383 0474 BB75     		strb	r3, [r7, #22]
 9384              	.L393:
1247:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9385              		.loc 1 1247 0 is_stmt 0 discriminator 1
 9386 0476 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9387 0478 032B     		cmp	r3, #3
 9388 047a EDD9     		bls	.L394
1249:..\src/command_processing.c ****                 }
1250:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c = aux_float2 * 65536;
 9389              		.loc 1 1250 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 216


 9390 047c 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9391 047e BB68     		ldr	r3, [r7, #8]	@ float
 9392 0480 4FF08F41 		mov	r1, #1199570944
 9393 0484 1846     		mov	r0, r3
 9394 0486 FFF7FEFF 		bl	__aeabi_fmul
 9395 048a 0346     		mov	r3, r0
 9396 048c 1846     		mov	r0, r3
 9397 048e FFF7FEFF 		bl	__aeabi_f2iz
 9398 0492 0146     		mov	r1, r0
 9399 0494 9F4A     		ldr	r2, .L452
 9400 0496 2346     		mov	r3, r4
 9401 0498 DB00     		lsls	r3, r3, #3
 9402 049a 1B1B     		subs	r3, r3, r4
 9403 049c 1B01     		lsls	r3, r3, #4
 9404 049e 1344     		add	r3, r3, r2
 9405 04a0 C433     		adds	r3, r3, #196
 9406 04a2 1960     		str	r1, [r3]
1251:..\src/command_processing.c ****             }
1252:..\src/command_processing.c ****             else {
1253:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1254:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1255:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1256:..\src/command_processing.c ****                 }
1257:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1258:..\src/command_processing.c ****                 
1259:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1260:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1261:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1262:..\src/command_processing.c ****                 }
1263:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1264:..\src/command_processing.c ****                 
1265:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1266:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1267:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1268:..\src/command_processing.c ****                 }
1269:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1270:..\src/command_processing.c ****             }            
1271:..\src/command_processing.c ****             break;  
 9407              		.loc 1 1271 0
 9408 04a4 00F0B0BF 		b	.L387
 9409              	.L388:
1253:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9410              		.loc 1 1253 0
 9411 04a8 9C4B     		ldr	r3, .L452+8
 9412 04aa 1B68     		ldr	r3, [r3]	@ float
 9413 04ac FB60     		str	r3, [r7, #12]	@ float
1254:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9414              		.loc 1 1254 0
 9415 04ae 0023     		movs	r3, #0
 9416 04b0 BB75     		strb	r3, [r7, #22]
 9417 04b2 0EE0     		b	.L396
 9418              	.L397:
1255:..\src/command_processing.c ****                 }
 9419              		.loc 1 1255 0 discriminator 3
 9420 04b4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9421 04b6 C3F10303 		rsb	r3, r3, #3
 9422 04ba 07F10802 		add	r2, r7, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 217


 9423 04be 1344     		add	r3, r3, r2
 9424 04c0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9425 04c2 07F10C01 		add	r1, r7, #12
 9426 04c6 0A44     		add	r2, r2, r1
 9427 04c8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9428 04ca 1A70     		strb	r2, [r3]
1254:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9429              		.loc 1 1254 0 discriminator 3
 9430 04cc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9431 04ce 0133     		adds	r3, r3, #1
 9432 04d0 BB75     		strb	r3, [r7, #22]
 9433              	.L396:
1254:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9434              		.loc 1 1254 0 is_stmt 0 discriminator 1
 9435 04d2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9436 04d4 032B     		cmp	r3, #3
 9437 04d6 EDD9     		bls	.L397
1257:..\src/command_processing.c ****                 
 9438              		.loc 1 1257 0 is_stmt 1
 9439 04d8 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9440 04da BB68     		ldr	r3, [r7, #8]	@ float
 9441 04dc 4FF08F41 		mov	r1, #1199570944
 9442 04e0 1846     		mov	r0, r3
 9443 04e2 FFF7FEFF 		bl	__aeabi_fmul
 9444 04e6 0346     		mov	r3, r0
 9445 04e8 1846     		mov	r0, r3
 9446 04ea FFF7FEFF 		bl	__aeabi_f2iz
 9447 04ee 0146     		mov	r1, r0
 9448 04f0 884A     		ldr	r2, .L452
 9449 04f2 2346     		mov	r3, r4
 9450 04f4 DB00     		lsls	r3, r3, #3
 9451 04f6 1B1B     		subs	r3, r3, r4
 9452 04f8 1B01     		lsls	r3, r3, #4
 9453 04fa 1344     		add	r3, r3, r2
 9454 04fc D433     		adds	r3, r3, #212
 9455 04fe 1960     		str	r1, [r3]
1259:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9456              		.loc 1 1259 0
 9457 0500 874B     		ldr	r3, .L452+12
 9458 0502 1B68     		ldr	r3, [r3]	@ float
 9459 0504 FB60     		str	r3, [r7, #12]	@ float
1260:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9460              		.loc 1 1260 0
 9461 0506 0023     		movs	r3, #0
 9462 0508 BB75     		strb	r3, [r7, #22]
 9463 050a 0EE0     		b	.L398
 9464              	.L399:
1261:..\src/command_processing.c ****                 }
 9465              		.loc 1 1261 0 discriminator 3
 9466 050c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9467 050e C3F10303 		rsb	r3, r3, #3
 9468 0512 07F10802 		add	r2, r7, #8
 9469 0516 1344     		add	r3, r3, r2
 9470 0518 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9471 051a 07F10C01 		add	r1, r7, #12
 9472 051e 0A44     		add	r2, r2, r1
 9473 0520 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 218


 9474 0522 1A70     		strb	r2, [r3]
1260:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9475              		.loc 1 1260 0 discriminator 3
 9476 0524 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9477 0526 0133     		adds	r3, r3, #1
 9478 0528 BB75     		strb	r3, [r7, #22]
 9479              	.L398:
1260:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9480              		.loc 1 1260 0 is_stmt 0 discriminator 1
 9481 052a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9482 052c 032B     		cmp	r3, #3
 9483 052e EDD9     		bls	.L399
1263:..\src/command_processing.c ****                 
 9484              		.loc 1 1263 0 is_stmt 1
 9485 0530 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9486 0532 BB68     		ldr	r3, [r7, #8]	@ float
 9487 0534 4FF08F41 		mov	r1, #1199570944
 9488 0538 1846     		mov	r0, r3
 9489 053a FFF7FEFF 		bl	__aeabi_fmul
 9490 053e 0346     		mov	r3, r0
 9491 0540 1846     		mov	r0, r3
 9492 0542 FFF7FEFF 		bl	__aeabi_f2iz
 9493 0546 0146     		mov	r1, r0
 9494 0548 724A     		ldr	r2, .L452
 9495 054a 2346     		mov	r3, r4
 9496 054c DB00     		lsls	r3, r3, #3
 9497 054e 1B1B     		subs	r3, r3, r4
 9498 0550 1B01     		lsls	r3, r3, #4
 9499 0552 1344     		add	r3, r3, r2
 9500 0554 D833     		adds	r3, r3, #216
 9501 0556 1960     		str	r1, [r3]
1265:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9502              		.loc 1 1265 0
 9503 0558 6F4B     		ldr	r3, .L452+4
 9504 055a 1B68     		ldr	r3, [r3]	@ float
 9505 055c FB60     		str	r3, [r7, #12]	@ float
1266:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9506              		.loc 1 1266 0
 9507 055e 0023     		movs	r3, #0
 9508 0560 BB75     		strb	r3, [r7, #22]
 9509 0562 0EE0     		b	.L400
 9510              	.L401:
1267:..\src/command_processing.c ****                 }
 9511              		.loc 1 1267 0 discriminator 3
 9512 0564 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9513 0566 C3F10303 		rsb	r3, r3, #3
 9514 056a 07F10802 		add	r2, r7, #8
 9515 056e 1344     		add	r3, r3, r2
 9516 0570 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9517 0572 07F10C01 		add	r1, r7, #12
 9518 0576 0A44     		add	r2, r2, r1
 9519 0578 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9520 057a 1A70     		strb	r2, [r3]
1266:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9521              		.loc 1 1266 0 discriminator 3
 9522 057c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9523 057e 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 219


 9524 0580 BB75     		strb	r3, [r7, #22]
 9525              	.L400:
1266:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9526              		.loc 1 1266 0 is_stmt 0 discriminator 1
 9527 0582 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9528 0584 032B     		cmp	r3, #3
 9529 0586 EDD9     		bls	.L401
1269:..\src/command_processing.c ****             }            
 9530              		.loc 1 1269 0 is_stmt 1
 9531 0588 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9532 058a BB68     		ldr	r3, [r7, #8]	@ float
 9533 058c 4FF08F41 		mov	r1, #1199570944
 9534 0590 1846     		mov	r0, r3
 9535 0592 FFF7FEFF 		bl	__aeabi_fmul
 9536 0596 0346     		mov	r3, r0
 9537 0598 1846     		mov	r0, r3
 9538 059a FFF7FEFF 		bl	__aeabi_f2iz
 9539 059e 0146     		mov	r1, r0
 9540 05a0 5C4A     		ldr	r2, .L452
 9541 05a2 2346     		mov	r3, r4
 9542 05a4 DB00     		lsls	r3, r3, #3
 9543 05a6 1B1B     		subs	r3, r3, r4
 9544 05a8 1B01     		lsls	r3, r3, #4
 9545 05aa 1344     		add	r3, r3, r2
 9546 05ac DC33     		adds	r3, r3, #220
 9547 05ae 1960     		str	r1, [r3]
 9548              		.loc 1 1271 0
 9549 05b0 00F02ABF 		b	.L387
 9550              	.L357:
1272:..\src/command_processing.c ****             
1273:..\src/command_processing.c ****         case 5:         //Input mode
1274:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].input_mode = g_rx.buffer[3];
 9551              		.loc 1 1274 0
 9552 05b4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9553 05b6 5B4B     		ldr	r3, .L452+16
 9554 05b8 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 9555 05ba 5649     		ldr	r1, .L452
 9556 05bc 1346     		mov	r3, r2
 9557 05be DB00     		lsls	r3, r3, #3
 9558 05c0 9B1A     		subs	r3, r3, r2
 9559 05c2 1B01     		lsls	r3, r3, #4
 9560 05c4 0B44     		add	r3, r3, r1
 9561 05c6 03F58773 		add	r3, r3, #270
 9562 05ca 0246     		mov	r2, r0
 9563 05cc 1A70     		strb	r2, [r3]
1275:..\src/command_processing.c ****             
1276:..\src/command_processing.c ****             // Hold the actual position
1277:..\src/command_processing.c ****             g_refNew[MOTOR_IDX].pos = g_meas[g_mem.motor[MOTOR_IDX].encoder_line].pos[0];
 9564              		.loc 1 1277 0
 9565 05ce 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 9566 05d0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9567 05d2 5048     		ldr	r0, .L452
 9568 05d4 1346     		mov	r3, r2
 9569 05d6 DB00     		lsls	r3, r3, #3
 9570 05d8 9B1A     		subs	r3, r3, r2
 9571 05da 1B01     		lsls	r3, r3, #4
 9572 05dc 0344     		add	r3, r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 220


 9573 05de 03F58873 		add	r3, r3, #272
 9574 05e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9575 05e4 1846     		mov	r0, r3
 9576 05e6 504A     		ldr	r2, .L452+20
 9577 05e8 3423     		movs	r3, #52
 9578 05ea 03FB00F3 		mul	r3, r3, r0
 9579 05ee 1344     		add	r3, r3, r2
 9580 05f0 1A68     		ldr	r2, [r3]
 9581 05f2 4E48     		ldr	r0, .L452+24
 9582 05f4 0B01     		lsls	r3, r1, #4
 9583 05f6 0344     		add	r3, r3, r0
 9584 05f8 1A60     		str	r2, [r3]
1278:..\src/command_processing.c ****             break;   
 9585              		.loc 1 1278 0
 9586 05fa 00F005BF 		b	.L387
 9587              	.L358:
1279:..\src/command_processing.c **** 
1280:..\src/command_processing.c ****         case 8:         //Measurement Offset
1281:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
 9588              		.loc 1 1281 0
 9589 05fe 0023     		movs	r3, #0
 9590 0600 FB75     		strb	r3, [r7, #23]
 9591 0602 7EE0     		b	.L402
 9592              	.L403:
1282:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 9593              		.loc 1 1282 0 discriminator 3
 9594 0604 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9595 0606 4349     		ldr	r1, .L452
 9596 0608 1346     		mov	r3, r2
 9597 060a DB00     		lsls	r3, r3, #3
 9598 060c 9B1A     		subs	r3, r3, r2
 9599 060e 1B01     		lsls	r3, r3, #4
 9600 0610 0B44     		add	r3, r3, r1
 9601 0612 03F58873 		add	r3, r3, #272
 9602 0616 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9603 0618 1C46     		mov	r4, r3
 9604 061a FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 9605 061c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9606 061e 5B00     		lsls	r3, r3, #1
 9607 0620 0333     		adds	r3, r3, #3
 9608 0622 4049     		ldr	r1, .L452+16
 9609 0624 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 9610 0626 1B02     		lsls	r3, r3, #8
 9611 0628 19B2     		sxth	r1, r3
 9612 062a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9613 062c 0233     		adds	r3, r3, #2
 9614 062e 5B00     		lsls	r3, r3, #1
 9615 0630 3C48     		ldr	r0, .L452+16
 9616 0632 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 9617 0634 1BB2     		sxth	r3, r3
 9618 0636 0B43     		orrs	r3, r3, r1
 9619 0638 1BB2     		sxth	r3, r3
 9620 063a 1846     		mov	r0, r3
 9621 063c 3549     		ldr	r1, .L452
 9622 063e 2346     		mov	r3, r4
 9623 0640 5B00     		lsls	r3, r3, #1
 9624 0642 2344     		add	r3, r3, r4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 221


 9625 0644 9B00     		lsls	r3, r3, #2
 9626 0646 1344     		add	r3, r3, r2
 9627 0648 6633     		adds	r3, r3, #102
 9628 064a 41F82300 		str	r0, [r1, r3, lsl #2]
1283:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.motor[MOT
 9629              		.loc 1 1283 0 discriminator 3
 9630 064e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9631 0650 3049     		ldr	r1, .L452
 9632 0652 1346     		mov	r3, r2
 9633 0654 DB00     		lsls	r3, r3, #3
 9634 0656 9B1A     		subs	r3, r3, r2
 9635 0658 1B01     		lsls	r3, r3, #4
 9636 065a 0B44     		add	r3, r3, r1
 9637 065c 03F58873 		add	r3, r3, #272
 9638 0660 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9639 0662 1D46     		mov	r5, r3
 9640 0664 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 9641 0666 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9642 0668 2A48     		ldr	r0, .L452
 9643 066a 1346     		mov	r3, r2
 9644 066c DB00     		lsls	r3, r3, #3
 9645 066e 9B1A     		subs	r3, r3, r2
 9646 0670 1B01     		lsls	r3, r3, #4
 9647 0672 0344     		add	r3, r3, r0
 9648 0674 03F58873 		add	r3, r3, #272
 9649 0678 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9650 067a 1C46     		mov	r4, r3
 9651 067c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 9652 067e 2548     		ldr	r0, .L452
 9653 0680 2346     		mov	r3, r4
 9654 0682 5B00     		lsls	r3, r3, #1
 9655 0684 2344     		add	r3, r3, r4
 9656 0686 9B00     		lsls	r3, r3, #2
 9657 0688 1344     		add	r3, r3, r2
 9658 068a 6633     		adds	r3, r3, #102
 9659 068c 50F82300 		ldr	r0, [r0, r3, lsl #2]
 9660 0690 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9661 0692 204C     		ldr	r4, .L452
 9662 0694 1346     		mov	r3, r2
 9663 0696 DB00     		lsls	r3, r3, #3
 9664 0698 9B1A     		subs	r3, r3, r2
 9665 069a 1B01     		lsls	r3, r3, #4
 9666 069c 2344     		add	r3, r3, r4
 9667 069e 03F58873 		add	r3, r3, #272
 9668 06a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9669 06a4 1E46     		mov	r6, r3
 9670 06a6 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 9671 06a8 1A4C     		ldr	r4, .L452
 9672 06aa 3346     		mov	r3, r6
 9673 06ac 5B00     		lsls	r3, r3, #1
 9674 06ae 3344     		add	r3, r3, r6
 9675 06b0 1B01     		lsls	r3, r3, #4
 9676 06b2 2344     		add	r3, r3, r4
 9677 06b4 1344     		add	r3, r3, r2
 9678 06b6 03F29513 		addw	r3, r3, #405
 9679 06ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9680 06bc 00FA03F2 		lsl	r2, r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 222


 9681 06c0 1448     		ldr	r0, .L452
 9682 06c2 2B46     		mov	r3, r5
 9683 06c4 5B00     		lsls	r3, r3, #1
 9684 06c6 2B44     		add	r3, r3, r5
 9685 06c8 9B00     		lsls	r3, r3, #2
 9686 06ca 0B44     		add	r3, r3, r1
 9687 06cc 6633     		adds	r3, r3, #102
 9688 06ce 40F82320 		str	r2, [r0, r3, lsl #2]
1284:..\src/command_processing.c **** 
1285:..\src/command_processing.c ****                 g_meas[g_mem.motor[MOTOR_IDX].encoder_line].rot[i] = 0;
 9689              		.loc 1 1285 0 discriminator 3
 9690 06d2 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9691 06d4 0F49     		ldr	r1, .L452
 9692 06d6 1346     		mov	r3, r2
 9693 06d8 DB00     		lsls	r3, r3, #3
 9694 06da 9B1A     		subs	r3, r3, r2
 9695 06dc 1B01     		lsls	r3, r3, #4
 9696 06de 0B44     		add	r3, r3, r1
 9697 06e0 03F58873 		add	r3, r3, #272
 9698 06e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9699 06e6 1846     		mov	r0, r3
 9700 06e8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9701 06ea 0F49     		ldr	r1, .L452+20
 9702 06ec 3422     		movs	r2, #52
 9703 06ee 02FB00F2 		mul	r2, r2, r0
 9704 06f2 0A44     		add	r2, r2, r1
 9705 06f4 1344     		add	r3, r3, r2
 9706 06f6 1833     		adds	r3, r3, #24
 9707 06f8 0022     		movs	r2, #0
 9708 06fa 1A70     		strb	r2, [r3]
1281:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 9709              		.loc 1 1281 0 discriminator 3
 9710 06fc FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9711 06fe 0133     		adds	r3, r3, #1
 9712 0700 FB75     		strb	r3, [r7, #23]
 9713              	.L402:
1281:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 9714              		.loc 1 1281 0 is_stmt 0 discriminator 1
 9715 0702 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9716 0704 022B     		cmp	r3, #2
 9717 0706 7FF67DAF 		bls	.L403
1286:..\src/command_processing.c ****             }
1287:..\src/command_processing.c ****             reset_last_value_flag = 1;
 9718              		.loc 1 1287 0 is_stmt 1
 9719 070a 094B     		ldr	r3, .L452+28
 9720 070c 0122     		movs	r2, #1
 9721 070e 1A70     		strb	r2, [r3]
1288:..\src/command_processing.c ****             break;
 9722              		.loc 1 1288 0
 9723 0710 00F07ABE 		b	.L387
 9724              	.L453:
 9725              		.align	2
 9726              	.L452:
 9727 0714 00000000 		.word	g_mem
 9728 0718 0B000000 		.word	g_rx+11
 9729 071c 03000000 		.word	g_rx+3
 9730 0720 07000000 		.word	g_rx+7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 223


 9731 0724 00000000 		.word	g_rx
 9732 0728 00000000 		.word	g_meas
 9733 072c 00000000 		.word	g_refNew
 9734 0730 00000000 		.word	reset_last_value_flag
 9735              	.L359:
1289:..\src/command_processing.c ****     
1290:..\src/command_processing.c ****         case 11:        //Position limits
1291:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | 
 9736              		.loc 1 1291 0
 9737 0734 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9738 0736 C14B     		ldr	r3, .L454
 9739 0738 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 9740 073a 1906     		lsls	r1, r3, #24
 9741 073c BF4B     		ldr	r3, .L454
 9742 073e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9743 0740 1B04     		lsls	r3, r3, #16
 9744 0742 1943     		orrs	r1, r1, r3
 9745 0744 BD4B     		ldr	r3, .L454
 9746 0746 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 9747 0748 1B02     		lsls	r3, r3, #8
 9748 074a 0B43     		orrs	r3, r3, r1
 9749 074c BB49     		ldr	r1, .L454
 9750 074e 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 9751 0750 1943     		orrs	r1, r1, r3
 9752 0752 BB48     		ldr	r0, .L454+4
 9753 0754 1346     		mov	r3, r2
 9754 0756 DB00     		lsls	r3, r3, #3
 9755 0758 9B1A     		subs	r3, r3, r2
 9756 075a 1B01     		lsls	r3, r3, #4
 9757 075c 0344     		add	r3, r3, r0
 9758 075e E433     		adds	r3, r3, #228
 9759 0760 1960     		str	r1, [r3]
1292:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]<<16 | 
 9760              		.loc 1 1292 0
 9761 0762 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9762 0764 B54B     		ldr	r3, .L454
 9763 0766 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 9764 0768 1906     		lsls	r1, r3, #24
 9765 076a B44B     		ldr	r3, .L454
 9766 076c 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 9767 076e 1B04     		lsls	r3, r3, #16
 9768 0770 1943     		orrs	r1, r1, r3
 9769 0772 B24B     		ldr	r3, .L454
 9770 0774 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 9771 0776 1B02     		lsls	r3, r3, #8
 9772 0778 0B43     		orrs	r3, r3, r1
 9773 077a B049     		ldr	r1, .L454
 9774 077c 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 9775 077e 1943     		orrs	r1, r1, r3
 9776 0780 AF48     		ldr	r0, .L454+4
 9777 0782 1346     		mov	r3, r2
 9778 0784 DB00     		lsls	r3, r3, #3
 9779 0786 9B1A     		subs	r3, r3, r2
 9780 0788 1B01     		lsls	r3, r3, #4
 9781 078a 0344     		add	r3, r3, r0
 9782 078c E833     		adds	r3, r3, #232
 9783 078e 1960     		str	r1, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 224


1293:..\src/command_processing.c **** 
1294:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = g_mem.motor[MOTOR_IDX].pos_lim_inf << g_mem.enc[g_
 9784              		.loc 1 1294 0
 9785 0790 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9786 0792 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 9787 0794 AA48     		ldr	r0, .L454+4
 9788 0796 0B46     		mov	r3, r1
 9789 0798 DB00     		lsls	r3, r3, #3
 9790 079a 5B1A     		subs	r3, r3, r1
 9791 079c 1B01     		lsls	r3, r3, #4
 9792 079e 0344     		add	r3, r3, r0
 9793 07a0 E433     		adds	r3, r3, #228
 9794 07a2 1868     		ldr	r0, [r3]
 9795 07a4 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 9796 07a6 A64C     		ldr	r4, .L454+4
 9797 07a8 0B46     		mov	r3, r1
 9798 07aa DB00     		lsls	r3, r3, #3
 9799 07ac 5B1A     		subs	r3, r3, r1
 9800 07ae 1B01     		lsls	r3, r3, #4
 9801 07b0 2344     		add	r3, r3, r4
 9802 07b2 03F58873 		add	r3, r3, #272
 9803 07b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9804 07b8 1C46     		mov	r4, r3
 9805 07ba A149     		ldr	r1, .L454+4
 9806 07bc 2346     		mov	r3, r4
 9807 07be 5B00     		lsls	r3, r3, #1
 9808 07c0 2344     		add	r3, r3, r4
 9809 07c2 1B01     		lsls	r3, r3, #4
 9810 07c4 0B44     		add	r3, r3, r1
 9811 07c6 03F29513 		addw	r3, r3, #405
 9812 07ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9813 07cc 00FA03F1 		lsl	r1, r0, r3
 9814 07d0 9B48     		ldr	r0, .L454+4
 9815 07d2 1346     		mov	r3, r2
 9816 07d4 DB00     		lsls	r3, r3, #3
 9817 07d6 9B1A     		subs	r3, r3, r2
 9818 07d8 1B01     		lsls	r3, r3, #4
 9819 07da 0344     		add	r3, r3, r0
 9820 07dc E433     		adds	r3, r3, #228
 9821 07de 1960     		str	r1, [r3]
1295:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = g_mem.motor[MOTOR_IDX].pos_lim_sup << g_mem.enc[g_
 9822              		.loc 1 1295 0
 9823 07e0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9824 07e2 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 9825 07e4 9648     		ldr	r0, .L454+4
 9826 07e6 0B46     		mov	r3, r1
 9827 07e8 DB00     		lsls	r3, r3, #3
 9828 07ea 5B1A     		subs	r3, r3, r1
 9829 07ec 1B01     		lsls	r3, r3, #4
 9830 07ee 0344     		add	r3, r3, r0
 9831 07f0 E833     		adds	r3, r3, #232
 9832 07f2 1868     		ldr	r0, [r3]
 9833 07f4 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 9834 07f6 924C     		ldr	r4, .L454+4
 9835 07f8 0B46     		mov	r3, r1
 9836 07fa DB00     		lsls	r3, r3, #3
 9837 07fc 5B1A     		subs	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 225


 9838 07fe 1B01     		lsls	r3, r3, #4
 9839 0800 2344     		add	r3, r3, r4
 9840 0802 03F58873 		add	r3, r3, #272
 9841 0806 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9842 0808 1C46     		mov	r4, r3
 9843 080a 8D49     		ldr	r1, .L454+4
 9844 080c 2346     		mov	r3, r4
 9845 080e 5B00     		lsls	r3, r3, #1
 9846 0810 2344     		add	r3, r3, r4
 9847 0812 1B01     		lsls	r3, r3, #4
 9848 0814 0B44     		add	r3, r3, r1
 9849 0816 03F29513 		addw	r3, r3, #405
 9850 081a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9851 081c 00FA03F1 		lsl	r1, r0, r3
 9852 0820 8748     		ldr	r0, .L454+4
 9853 0822 1346     		mov	r3, r2
 9854 0824 DB00     		lsls	r3, r3, #3
 9855 0826 9B1A     		subs	r3, r3, r2
 9856 0828 1B01     		lsls	r3, r3, #4
 9857 082a 0344     		add	r3, r3, r0
 9858 082c E833     		adds	r3, r3, #232
 9859 082e 1960     		str	r1, [r3]
1296:..\src/command_processing.c ****             break;            
 9860              		.loc 1 1296 0
 9861 0830 00F0EABD 		b	.L387
 9862              	.L360:
1297:..\src/command_processing.c **** 
1298:..\src/command_processing.c ****         case 23:        //Rest Position
1299:..\src/command_processing.c ****             g_mem.SH.rest_pos = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<8
 9863              		.loc 1 1299 0
 9864 0834 814B     		ldr	r3, .L454
 9865 0836 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 9866 0838 1A06     		lsls	r2, r3, #24
 9867 083a 804B     		ldr	r3, .L454
 9868 083c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9869 083e 1B04     		lsls	r3, r3, #16
 9870 0840 1A43     		orrs	r2, r2, r3
 9871 0842 7E4B     		ldr	r3, .L454
 9872 0844 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 9873 0846 1B02     		lsls	r3, r3, #8
 9874 0848 1343     		orrs	r3, r3, r2
 9875 084a 7C4A     		ldr	r2, .L454
 9876 084c 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 9877 084e 1343     		orrs	r3, r3, r2
 9878 0850 7B4A     		ldr	r2, .L454+4
 9879 0852 C2F8A032 		str	r3, [r2, #672]
1300:..\src/command_processing.c ****             g_mem.SH.rest_pos = g_mem.SH.rest_pos << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line]
 9880              		.loc 1 1300 0
 9881 0856 7A4B     		ldr	r3, .L454+4
 9882 0858 D3F8A012 		ldr	r1, [r3, #672]
 9883 085c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9884 085e 7848     		ldr	r0, .L454+4
 9885 0860 1346     		mov	r3, r2
 9886 0862 DB00     		lsls	r3, r3, #3
 9887 0864 9B1A     		subs	r3, r3, r2
 9888 0866 1B01     		lsls	r3, r3, #4
 9889 0868 0344     		add	r3, r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 226


 9890 086a 03F58873 		add	r3, r3, #272
 9891 086e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9892 0870 1846     		mov	r0, r3
 9893 0872 734A     		ldr	r2, .L454+4
 9894 0874 0346     		mov	r3, r0
 9895 0876 5B00     		lsls	r3, r3, #1
 9896 0878 0344     		add	r3, r3, r0
 9897 087a 1B01     		lsls	r3, r3, #4
 9898 087c 1344     		add	r3, r3, r2
 9899 087e 03F29513 		addw	r3, r3, #405
 9900 0882 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9901 0884 01FA03F3 		lsl	r3, r1, r3
 9902 0888 6D4A     		ldr	r2, .L454+4
 9903 088a C2F8A032 		str	r3, [r2, #672]
1301:..\src/command_processing.c ****             break; 
 9904              		.loc 1 1301 0
 9905 088e 00F0BBBD 		b	.L387
 9906              	.L361:
1302:..\src/command_processing.c ****             
1303:..\src/command_processing.c ****         case 24:        //Rest Position Time Delay
1304:..\src/command_processing.c ****            g_mem.SH.rest_delay = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<
 9907              		.loc 1 1304 0
 9908 0892 6A4B     		ldr	r3, .L454
 9909 0894 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 9910 0896 1A06     		lsls	r2, r3, #24
 9911 0898 684B     		ldr	r3, .L454
 9912 089a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9913 089c 1B04     		lsls	r3, r3, #16
 9914 089e 1A43     		orrs	r2, r2, r3
 9915 08a0 664B     		ldr	r3, .L454
 9916 08a2 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 9917 08a4 1B02     		lsls	r3, r3, #8
 9918 08a6 1343     		orrs	r3, r3, r2
 9919 08a8 644A     		ldr	r2, .L454
 9920 08aa 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 9921 08ac 1343     		orrs	r3, r3, r2
 9922 08ae 644A     		ldr	r2, .L454+4
 9923 08b0 C2F8A432 		str	r3, [r2, #676]
1305:..\src/command_processing.c **** 		   if (g_mem.SH.rest_delay < 10) g_mem.SH.rest_delay = 10;
 9924              		.loc 1 1305 0
 9925 08b4 624B     		ldr	r3, .L454+4
 9926 08b6 D3F8A432 		ldr	r3, [r3, #676]
 9927 08ba 092B     		cmp	r3, #9
 9928 08bc 00F39B85 		bgt	.L445
 9929              		.loc 1 1305 0 is_stmt 0 discriminator 1
 9930 08c0 5F4B     		ldr	r3, .L454+4
 9931 08c2 0A22     		movs	r2, #10
 9932 08c4 C3F8A422 		str	r2, [r3, #676]
1306:..\src/command_processing.c ****            break; 
 9933              		.loc 1 1306 0 is_stmt 1 discriminator 1
 9934 08c8 00F095BD 		b	.L445
 9935              	.L362:
1307:..\src/command_processing.c ****             
1308:..\src/command_processing.c ****         case 28:        //Right/Left hand flag
1309:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 9936              		.loc 1 1309 0
 9937 08cc 5B4B     		ldr	r3, .L454
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 227


 9938 08ce DB78     		ldrb	r3, [r3, #3]
 9939 08d0 BB74     		strb	r3, [r7, #18]
1310:..\src/command_processing.c ****             if (aux_uchar) {    // 1
 9940              		.loc 1 1310 0
 9941 08d2 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 9942 08d4 002B     		cmp	r3, #0
 9943 08d6 04D0     		beq	.L405
1311:..\src/command_processing.c ****                 g_mem.dev.right_left = LEFT_HAND;
 9944              		.loc 1 1311 0
 9945 08d8 594B     		ldr	r3, .L454+4
 9946 08da 0122     		movs	r2, #1
 9947 08dc 83F8A720 		strb	r2, [r3, #167]
 9948 08e0 03E0     		b	.L406
 9949              	.L405:
1312:..\src/command_processing.c ****             } else {            // 0
1313:..\src/command_processing.c ****                 g_mem.dev.right_left = RIGHT_HAND;
 9950              		.loc 1 1313 0
 9951 08e2 574B     		ldr	r3, .L454+4
 9952 08e4 0022     		movs	r2, #0
 9953 08e6 83F8A720 		strb	r2, [r3, #167]
 9954              	.L406:
1314:..\src/command_processing.c ****             }
1315:..\src/command_processing.c **** 			reset_last_value_flag = 1;
 9955              		.loc 1 1315 0
 9956 08ea 564B     		ldr	r3, .L454+8
 9957 08ec 0122     		movs	r2, #1
 9958 08ee 1A70     		strb	r2, [r3]
1316:..\src/command_processing.c **** 
1317:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    
 9959              		.loc 1 1317 0
 9960 08f0 534B     		ldr	r3, .L454+4
 9961 08f2 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 9962 08f6 002B     		cmp	r3, #0
 9963 08f8 40F07F85 		bne	.L446
1318:..\src/command_processing.c ****                 // Change also default encoder line (only with SoftHand FW)
1319:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line = g_mem.dev.right_left;
 9964              		.loc 1 1319 0
 9965 08fc 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9966 08fe 504B     		ldr	r3, .L454+4
 9967 0900 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 9968 0904 4E49     		ldr	r1, .L454+4
 9969 0906 1346     		mov	r3, r2
 9970 0908 DB00     		lsls	r3, r3, #3
 9971 090a 9B1A     		subs	r3, r3, r2
 9972 090c 1B01     		lsls	r3, r3, #4
 9973 090e 0B44     		add	r3, r3, r1
 9974 0910 03F58873 		add	r3, r3, #272
 9975 0914 0246     		mov	r2, r0
 9976 0916 1A70     		strb	r2, [r3]
1320:..\src/command_processing.c ****                 
1321:..\src/command_processing.c ****                 // Change also gears parameters
1322:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 9977              		.loc 1 1322 0
 9978 0918 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9979 091a 4949     		ldr	r1, .L454+4
 9980 091c 1346     		mov	r3, r2
 9981 091e DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 228


 9982 0920 9B1A     		subs	r3, r3, r2
 9983 0922 1B01     		lsls	r3, r3, #4
 9984 0924 0B44     		add	r3, r3, r1
 9985 0926 03F58873 		add	r3, r3, #272
 9986 092a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9987 092c 1946     		mov	r1, r3
 9988 092e 444A     		ldr	r2, .L454+4
 9989 0930 0B46     		mov	r3, r1
 9990 0932 5B00     		lsls	r3, r3, #1
 9991 0934 0B44     		add	r3, r3, r1
 9992 0936 1B01     		lsls	r3, r3, #4
 9993 0938 1344     		add	r3, r3, r2
 9994 093a 03F5D873 		add	r3, r3, #432
 9995 093e 0122     		movs	r2, #1
 9996 0940 1A70     		strb	r2, [r3]
1323:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 9997              		.loc 1 1323 0
 9998 0942 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9999 0944 3E49     		ldr	r1, .L454+4
 10000 0946 1346     		mov	r3, r2
 10001 0948 DB00     		lsls	r3, r3, #3
 10002 094a 9B1A     		subs	r3, r3, r2
 10003 094c 1B01     		lsls	r3, r3, #4
 10004 094e 0B44     		add	r3, r3, r1
 10005 0950 03F58873 		add	r3, r3, #272
 10006 0954 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10007 0956 1946     		mov	r1, r3
 10008 0958 394A     		ldr	r2, .L454+4
 10009 095a 0B46     		mov	r3, r1
 10010 095c 5B00     		lsls	r3, r3, #1
 10011 095e 0B44     		add	r3, r3, r1
 10012 0960 1B01     		lsls	r3, r3, #4
 10013 0962 1344     		add	r3, r3, r2
 10014 0964 03F2B513 		addw	r3, r3, #437
 10015 0968 2322     		movs	r2, #35
 10016 096a 1A70     		strb	r2, [r3]
1324:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 10017              		.loc 1 1324 0
 10018 096c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10019 096e 3449     		ldr	r1, .L454+4
 10020 0970 1346     		mov	r3, r2
 10021 0972 DB00     		lsls	r3, r3, #3
 10022 0974 9B1A     		subs	r3, r3, r2
 10023 0976 1B01     		lsls	r3, r3, #4
 10024 0978 0B44     		add	r3, r3, r1
 10025 097a 03F58873 		add	r3, r3, #272
 10026 097e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10027 0980 1946     		mov	r1, r3
 10028 0982 2F4A     		ldr	r2, .L454+4
 10029 0984 0B46     		mov	r3, r1
 10030 0986 5B00     		lsls	r3, r3, #1
 10031 0988 0B44     		add	r3, r3, r1
 10032 098a 1B01     		lsls	r3, r3, #4
 10033 098c 1344     		add	r3, r3, r2
 10034 098e 03F5DB73 		add	r3, r3, #438
 10035 0992 0322     		movs	r2, #3
 10036 0994 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 229


1325:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 10037              		.loc 1 1325 0
 10038 0996 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10039 0998 2949     		ldr	r1, .L454+4
 10040 099a 1346     		mov	r3, r2
 10041 099c DB00     		lsls	r3, r3, #3
 10042 099e 9B1A     		subs	r3, r3, r2
 10043 09a0 1B01     		lsls	r3, r3, #4
 10044 09a2 0B44     		add	r3, r3, r1
 10045 09a4 03F58873 		add	r3, r3, #272
 10046 09a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10047 09aa 1946     		mov	r1, r3
 10048 09ac 244A     		ldr	r2, .L454+4
 10049 09ae 0B46     		mov	r3, r1
 10050 09b0 5B00     		lsls	r3, r3, #1
 10051 09b2 0B44     		add	r3, r3, r1
 10052 09b4 1B01     		lsls	r3, r3, #4
 10053 09b6 1344     		add	r3, r3, r2
 10054 09b8 03F2B713 		addw	r3, r3, #439
 10055 09bc FF22     		movs	r2, #255
 10056 09be 1A70     		strb	r2, [r3]
1326:..\src/command_processing.c ****                 
1327:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1328:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 10057              		.loc 1 1328 0
 10058 09c0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10059 09c2 1F49     		ldr	r1, .L454+4
 10060 09c4 1346     		mov	r3, r2
 10061 09c6 DB00     		lsls	r3, r3, #3
 10062 09c8 9B1A     		subs	r3, r3, r2
 10063 09ca 1B01     		lsls	r3, r3, #4
 10064 09cc 0B44     		add	r3, r3, r1
 10065 09ce 03F21113 		addw	r3, r3, #273
 10066 09d2 0122     		movs	r2, #1
 10067 09d4 1A70     		strb	r2, [r3]
1329:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 10068              		.loc 1 1329 0
 10069 09d6 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10070 09d8 1949     		ldr	r1, .L454+4
 10071 09da 1346     		mov	r3, r2
 10072 09dc DB00     		lsls	r3, r3, #3
 10073 09de 9B1A     		subs	r3, r3, r2
 10074 09e0 1B01     		lsls	r3, r3, #4
 10075 09e2 0B44     		add	r3, r3, r1
 10076 09e4 03F58973 		add	r3, r3, #274
 10077 09e8 0122     		movs	r2, #1
 10078 09ea 1A70     		strb	r2, [r3]
1330:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 10079              		.loc 1 1330 0
 10080 09ec 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10081 09ee 1449     		ldr	r1, .L454+4
 10082 09f0 1346     		mov	r3, r2
 10083 09f2 DB00     		lsls	r3, r3, #3
 10084 09f4 9B1A     		subs	r3, r3, r2
 10085 09f6 1B01     		lsls	r3, r3, #4
 10086 09f8 0B44     		add	r3, r3, r1
 10087 09fa E433     		adds	r3, r3, #228
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 230


 10088 09fc 0022     		movs	r2, #0
 10089 09fe 1A60     		str	r2, [r3]
1331:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[0].encod
 10090              		.loc 1 1331 0
 10091 0a00 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10092 0a02 0F4B     		ldr	r3, .L454+4
 10093 0a04 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 10094 0a08 1846     		mov	r0, r3
 10095 0a0a 0D49     		ldr	r1, .L454+4
 10096 0a0c 0346     		mov	r3, r0
 10097 0a0e 5B00     		lsls	r3, r3, #1
 10098 0a10 0344     		add	r3, r3, r0
 10099 0a12 1B01     		lsls	r3, r3, #4
 10100 0a14 0B44     		add	r3, r3, r1
 10101 0a16 03F29513 		addw	r3, r3, #405
 10102 0a1a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10103 0a1c 1946     		mov	r1, r3
 10104 0a1e 4FF47A53 		mov	r3, #16000
 10105 0a22 03FA01F1 		lsl	r1, r3, r1
 10106 0a26 0648     		ldr	r0, .L454+4
 10107 0a28 1346     		mov	r3, r2
 10108 0a2a DB00     		lsls	r3, r3, #3
 10109 0a2c 9B1A     		subs	r3, r3, r2
 10110 0a2e 1B01     		lsls	r3, r3, #4
 10111 0a30 0344     		add	r3, r3, r0
 10112 0a32 E833     		adds	r3, r3, #232
 10113 0a34 1960     		str	r1, [r3]
1332:..\src/command_processing.c ****             }    
1333:..\src/command_processing.c **** 
1334:..\src/command_processing.c ****             break; 
 10114              		.loc 1 1334 0
 10115 0a36 00F0E0BC 		b	.L446
 10116              	.L455:
 10117 0a3a 00BF     		.align	2
 10118              	.L454:
 10119 0a3c 00000000 		.word	g_rx
 10120 0a40 00000000 		.word	g_mem
 10121 0a44 00000000 		.word	reset_last_value_flag
 10122              	.L363:
1335:..\src/command_processing.c **** 
1336:..\src/command_processing.c ****         case 31:        //Reset counters - uint8
1337:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 10123              		.loc 1 1337 0
 10124 0a48 A94B     		ldr	r3, .L456
 10125 0a4a DB78     		ldrb	r3, [r3, #3]
 10126 0a4c BB74     		strb	r3, [r7, #18]
1338:..\src/command_processing.c ****             if (aux_uchar) {
 10127              		.loc 1 1338 0
 10128 0a4e BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10129 0a50 002B     		cmp	r3, #0
 10130 0a52 05D0     		beq	.L408
1339:..\src/command_processing.c ****                 reset_counters();
 10131              		.loc 1 1339 0
 10132 0a54 FFF7FEFF 		bl	reset_counters
1340:..\src/command_processing.c ****                 g_mem.dev.reset_counters = FALSE;
 10133              		.loc 1 1340 0
 10134 0a58 A64B     		ldr	r3, .L456+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 231


 10135 0a5a 0022     		movs	r2, #0
 10136 0a5c 83F8A820 		strb	r2, [r3, #168]
 10137              	.L408:
1341:..\src/command_processing.c ****             }
1342:..\src/command_processing.c ****             
1343:..\src/command_processing.c ****             if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 10138              		.loc 1 1343 0
 10139 0a60 A54B     		ldr	r3, .L456+8
 10140 0a62 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 10141 0a66 012B     		cmp	r3, #1
 10142 0a68 40F0C984 		bne	.L447
1344:..\src/command_processing.c ****                 // Set date of maintenance from RTC
1345:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_DATE_RD);
 10143              		.loc 1 1345 0
 10144 0a6c 8720     		movs	r0, #135
 10145 0a6e FFF7FEFF 		bl	DS1302_read
 10146 0a72 0346     		mov	r3, r0
 10147 0a74 BB74     		strb	r3, [r7, #18]
1346:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[0] = (aux_uchar/16) * 10 + aux_uchar%16;    //day
 10148              		.loc 1 1346 0
 10149 0a76 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10150 0a78 1B09     		lsrs	r3, r3, #4
 10151 0a7a DBB2     		uxtb	r3, r3
 10152 0a7c 1A46     		mov	r2, r3
 10153 0a7e 9200     		lsls	r2, r2, #2
 10154 0a80 1344     		add	r3, r3, r2
 10155 0a82 5B00     		lsls	r3, r3, #1
 10156 0a84 DAB2     		uxtb	r2, r3
 10157 0a86 BB7C     		ldrb	r3, [r7, #18]
 10158 0a88 03F00F03 		and	r3, r3, #15
 10159 0a8c DBB2     		uxtb	r3, r3
 10160 0a8e 1344     		add	r3, r3, r2
 10161 0a90 DAB2     		uxtb	r2, r3
 10162 0a92 984B     		ldr	r3, .L456+4
 10163 0a94 83F8A420 		strb	r2, [r3, #164]
1347:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_MONTH_RD);
 10164              		.loc 1 1347 0
 10165 0a98 8920     		movs	r0, #137
 10166 0a9a FFF7FEFF 		bl	DS1302_read
 10167 0a9e 0346     		mov	r3, r0
 10168 0aa0 BB74     		strb	r3, [r7, #18]
1348:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[1] = (aux_uchar/16) * 10 + aux_uchar%16;    // mo
 10169              		.loc 1 1348 0
 10170 0aa2 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10171 0aa4 1B09     		lsrs	r3, r3, #4
 10172 0aa6 DBB2     		uxtb	r3, r3
 10173 0aa8 1A46     		mov	r2, r3
 10174 0aaa 9200     		lsls	r2, r2, #2
 10175 0aac 1344     		add	r3, r3, r2
 10176 0aae 5B00     		lsls	r3, r3, #1
 10177 0ab0 DAB2     		uxtb	r2, r3
 10178 0ab2 BB7C     		ldrb	r3, [r7, #18]
 10179 0ab4 03F00F03 		and	r3, r3, #15
 10180 0ab8 DBB2     		uxtb	r3, r3
 10181 0aba 1344     		add	r3, r3, r2
 10182 0abc DAB2     		uxtb	r2, r3
 10183 0abe 8D4B     		ldr	r3, .L456+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 232


 10184 0ac0 83F8A520 		strb	r2, [r3, #165]
1349:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_YEAR_RD);
 10185              		.loc 1 1349 0
 10186 0ac4 8D20     		movs	r0, #141
 10187 0ac6 FFF7FEFF 		bl	DS1302_read
 10188 0aca 0346     		mov	r3, r0
 10189 0acc BB74     		strb	r3, [r7, #18]
1350:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[2] = (aux_uchar/16) * 10 + aux_uchar%16;         
 10190              		.loc 1 1350 0
 10191 0ace BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10192 0ad0 1B09     		lsrs	r3, r3, #4
 10193 0ad2 DBB2     		uxtb	r3, r3
 10194 0ad4 1A46     		mov	r2, r3
 10195 0ad6 9200     		lsls	r2, r2, #2
 10196 0ad8 1344     		add	r3, r3, r2
 10197 0ada 5B00     		lsls	r3, r3, #1
 10198 0adc DAB2     		uxtb	r2, r3
 10199 0ade BB7C     		ldrb	r3, [r7, #18]
 10200 0ae0 03F00F03 		and	r3, r3, #15
 10201 0ae4 DBB2     		uxtb	r3, r3
 10202 0ae6 1344     		add	r3, r3, r2
 10203 0ae8 DAB2     		uxtb	r2, r3
 10204 0aea 824B     		ldr	r3, .L456+4
 10205 0aec 83F8A620 		strb	r2, [r3, #166]
1351:..\src/command_processing.c ****             }
1352:..\src/command_processing.c ****             break;             
 10206              		.loc 1 1352 0
 10207 0af0 00F085BC 		b	.L447
 10208              	.L364:
 10209              	.LBB15:
1353:..\src/command_processing.c ****             
1354:..\src/command_processing.c ****         case 32:         //Current Time
1355:..\src/command_processing.c ****             for (uint8 i=0; i<6; i++){
 10210              		.loc 1 1355 0
 10211 0af4 0023     		movs	r3, #0
 10212 0af6 7B75     		strb	r3, [r7, #21]
 10213 0af8 0CE0     		b	.L410
 10214              	.L411:
1356:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10215              		.loc 1 1356 0 discriminator 3
 10216 0afa 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10217 0afc 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 10218 0afe 0332     		adds	r2, r2, #3
 10219 0b00 7B49     		ldr	r1, .L456
 10220 0b02 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 10221 0b04 7B4A     		ldr	r2, .L456+4
 10222 0b06 1344     		add	r3, r3, r2
 10223 0b08 0A46     		mov	r2, r1
 10224 0b0a 83F82022 		strb	r2, [r3, #544]
1355:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10225              		.loc 1 1355 0 discriminator 3
 10226 0b0e 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10227 0b10 0133     		adds	r3, r3, #1
 10228 0b12 7B75     		strb	r3, [r7, #21]
 10229              	.L410:
1355:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10230              		.loc 1 1355 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 233


 10231 0b14 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10232 0b16 052B     		cmp	r3, #5
 10233 0b18 EFD9     		bls	.L411
 10234              	.LBE15:
1357:..\src/command_processing.c ****             }
1358:..\src/command_processing.c ****             
1359:..\src/command_processing.c ****             if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 10235              		.loc 1 1359 0 is_stmt 1
 10236 0b1a 764B     		ldr	r3, .L456+4
 10237 0b1c 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 10238 0b20 012B     		cmp	r3, #1
 10239 0b22 40F06E84 		bne	.L448
1360:..\src/command_processing.c ****                 set_RTC_time();
 10240              		.loc 1 1360 0
 10241 0b26 FFF7FEFF 		bl	set_RTC_time
1361:..\src/command_processing.c ****             }
1362:..\src/command_processing.c ****             break;
 10242              		.loc 1 1362 0
 10243 0b2a 00F06ABC 		b	.L448
 10244              	.L365:
1363:..\src/command_processing.c ****            
1364:..\src/command_processing.c ****         case 38:        // First Motor Driver Type
1365:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 10245              		.loc 1 1365 0
 10246 0b2e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10247 0b30 6F4B     		ldr	r3, .L456
 10248 0b32 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 10249 0b34 6F49     		ldr	r1, .L456+4
 10250 0b36 1346     		mov	r3, r2
 10251 0b38 DB00     		lsls	r3, r3, #3
 10252 0b3a 9B1A     		subs	r3, r3, r2
 10253 0b3c 1B01     		lsls	r3, r3, #4
 10254 0b3e 0B44     		add	r3, r3, r1
 10255 0b40 E233     		adds	r3, r3, #226
 10256 0b42 0246     		mov	r2, r0
 10257 0b44 1A70     		strb	r2, [r3]
1366:..\src/command_processing.c ****             MOTOR_DRIVER_TYPE_Write((g_mem.motor[1].motor_driver_type << 1) | g_mem.motor[0].motor_
 10258              		.loc 1 1366 0
 10259 0b46 6B4B     		ldr	r3, .L456+4
 10260 0b48 93F85231 		ldrb	r3, [r3, #338]	@ zero_extendqisi2
 10261 0b4c 5B00     		lsls	r3, r3, #1
 10262 0b4e 5AB2     		sxtb	r2, r3
 10263 0b50 684B     		ldr	r3, .L456+4
 10264 0b52 93F8E230 		ldrb	r3, [r3, #226]	@ zero_extendqisi2
 10265 0b56 5BB2     		sxtb	r3, r3
 10266 0b58 1343     		orrs	r3, r3, r2
 10267 0b5a 5BB2     		sxtb	r3, r3
 10268 0b5c DBB2     		uxtb	r3, r3
 10269 0b5e 1846     		mov	r0, r3
 10270 0b60 FFF7FEFF 		bl	MOTOR_DRIVER_TYPE_Write
1367:..\src/command_processing.c ****             break;
 10271              		.loc 1 1367 0
 10272 0b64 00F050BC 		b	.L387
 10273              	.L366:
1368:..\src/command_processing.c ****             
1369:..\src/command_processing.c ****         case 44:         // Second Motor Position PID
1370:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 234


 10274              		.loc 1 1370 0
 10275 0b68 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10276 0b6a 6349     		ldr	r1, .L456+8
 10277 0b6c 1346     		mov	r3, r2
 10278 0b6e DB00     		lsls	r3, r3, #3
 10279 0b70 9B1A     		subs	r3, r3, r2
 10280 0b72 1B01     		lsls	r3, r3, #4
 10281 0b74 0B44     		add	r3, r3, r1
 10282 0b76 03F20F13 		addw	r3, r3, #271
 10283 0b7a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10284 0b7c 032B     		cmp	r3, #3
 10285 0b7e 00F08580 		beq	.L413
1371:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 10286              		.loc 1 1371 0
 10287 0b82 5E4B     		ldr	r3, .L456+12
 10288 0b84 1B68     		ldr	r3, [r3]	@ float
 10289 0b86 FB60     		str	r3, [r7, #12]	@ float
1372:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10290              		.loc 1 1372 0
 10291 0b88 0023     		movs	r3, #0
 10292 0b8a BB75     		strb	r3, [r7, #22]
 10293 0b8c 0EE0     		b	.L414
 10294              	.L415:
1373:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10295              		.loc 1 1373 0 discriminator 3
 10296 0b8e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10297 0b90 C3F10303 		rsb	r3, r3, #3
 10298 0b94 07F10802 		add	r2, r7, #8
 10299 0b98 1344     		add	r3, r3, r2
 10300 0b9a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10301 0b9c 07F10C01 		add	r1, r7, #12
 10302 0ba0 0A44     		add	r2, r2, r1
 10303 0ba2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10304 0ba4 1A70     		strb	r2, [r3]
1372:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10305              		.loc 1 1372 0 discriminator 3
 10306 0ba6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10307 0ba8 0133     		adds	r3, r3, #1
 10308 0baa BB75     		strb	r3, [r7, #22]
 10309              	.L414:
1372:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10310              		.loc 1 1372 0 is_stmt 0 discriminator 1
 10311 0bac BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10312 0bae 032B     		cmp	r3, #3
 10313 0bb0 EDD9     		bls	.L415
1374:..\src/command_processing.c ****                 }
1375:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p = aux_float2 * 65536;
 10314              		.loc 1 1375 0 is_stmt 1
 10315 0bb2 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10316 0bb4 BB68     		ldr	r3, [r7, #8]	@ float
 10317 0bb6 4FF08F41 		mov	r1, #1199570944
 10318 0bba 1846     		mov	r0, r3
 10319 0bbc FFF7FEFF 		bl	__aeabi_fmul
 10320 0bc0 0346     		mov	r3, r0
 10321 0bc2 1846     		mov	r0, r3
 10322 0bc4 FFF7FEFF 		bl	__aeabi_f2iz
 10323 0bc8 0146     		mov	r1, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 235


 10324 0bca 4A4A     		ldr	r2, .L456+4
 10325 0bcc 2346     		mov	r3, r4
 10326 0bce DB00     		lsls	r3, r3, #3
 10327 0bd0 1B1B     		subs	r3, r3, r4
 10328 0bd2 1B01     		lsls	r3, r3, #4
 10329 0bd4 1344     		add	r3, r3, r2
 10330 0bd6 B033     		adds	r3, r3, #176
 10331 0bd8 1960     		str	r1, [r3]
1376:..\src/command_processing.c ****                 
1377:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 10332              		.loc 1 1377 0
 10333 0bda 494B     		ldr	r3, .L456+16
 10334 0bdc 1B68     		ldr	r3, [r3]	@ float
 10335 0bde FB60     		str	r3, [r7, #12]	@ float
1378:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10336              		.loc 1 1378 0
 10337 0be0 0023     		movs	r3, #0
 10338 0be2 BB75     		strb	r3, [r7, #22]
 10339 0be4 0EE0     		b	.L416
 10340              	.L417:
1379:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10341              		.loc 1 1379 0 discriminator 3
 10342 0be6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10343 0be8 C3F10303 		rsb	r3, r3, #3
 10344 0bec 07F10802 		add	r2, r7, #8
 10345 0bf0 1344     		add	r3, r3, r2
 10346 0bf2 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10347 0bf4 07F10C01 		add	r1, r7, #12
 10348 0bf8 0A44     		add	r2, r2, r1
 10349 0bfa 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10350 0bfc 1A70     		strb	r2, [r3]
1378:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10351              		.loc 1 1378 0 discriminator 3
 10352 0bfe BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10353 0c00 0133     		adds	r3, r3, #1
 10354 0c02 BB75     		strb	r3, [r7, #22]
 10355              	.L416:
1378:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10356              		.loc 1 1378 0 is_stmt 0 discriminator 1
 10357 0c04 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10358 0c06 032B     		cmp	r3, #3
 10359 0c08 EDD9     		bls	.L417
1380:..\src/command_processing.c ****                 }
1381:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i = aux_float2 * 65536;
 10360              		.loc 1 1381 0 is_stmt 1
 10361 0c0a FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10362 0c0c BB68     		ldr	r3, [r7, #8]	@ float
 10363 0c0e 4FF08F41 		mov	r1, #1199570944
 10364 0c12 1846     		mov	r0, r3
 10365 0c14 FFF7FEFF 		bl	__aeabi_fmul
 10366 0c18 0346     		mov	r3, r0
 10367 0c1a 1846     		mov	r0, r3
 10368 0c1c FFF7FEFF 		bl	__aeabi_f2iz
 10369 0c20 0146     		mov	r1, r0
 10370 0c22 344A     		ldr	r2, .L456+4
 10371 0c24 2346     		mov	r3, r4
 10372 0c26 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 236


 10373 0c28 1B1B     		subs	r3, r3, r4
 10374 0c2a 1B01     		lsls	r3, r3, #4
 10375 0c2c 1344     		add	r3, r3, r2
 10376 0c2e B433     		adds	r3, r3, #180
 10377 0c30 1960     		str	r1, [r3]
1382:..\src/command_processing.c ****                 
1383:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 10378              		.loc 1 1383 0
 10379 0c32 344B     		ldr	r3, .L456+20
 10380 0c34 1B68     		ldr	r3, [r3]	@ float
 10381 0c36 FB60     		str	r3, [r7, #12]	@ float
1384:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10382              		.loc 1 1384 0
 10383 0c38 0023     		movs	r3, #0
 10384 0c3a BB75     		strb	r3, [r7, #22]
 10385 0c3c 0EE0     		b	.L418
 10386              	.L419:
1385:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10387              		.loc 1 1385 0 discriminator 3
 10388 0c3e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10389 0c40 C3F10303 		rsb	r3, r3, #3
 10390 0c44 07F10802 		add	r2, r7, #8
 10391 0c48 1344     		add	r3, r3, r2
 10392 0c4a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10393 0c4c 07F10C01 		add	r1, r7, #12
 10394 0c50 0A44     		add	r2, r2, r1
 10395 0c52 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10396 0c54 1A70     		strb	r2, [r3]
1384:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10397              		.loc 1 1384 0 discriminator 3
 10398 0c56 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10399 0c58 0133     		adds	r3, r3, #1
 10400 0c5a BB75     		strb	r3, [r7, #22]
 10401              	.L418:
1384:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10402              		.loc 1 1384 0 is_stmt 0 discriminator 1
 10403 0c5c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10404 0c5e 032B     		cmp	r3, #3
 10405 0c60 EDD9     		bls	.L419
1386:..\src/command_processing.c ****                 }
1387:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d = aux_float2 * 65536;
 10406              		.loc 1 1387 0 is_stmt 1
 10407 0c62 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10408 0c64 BB68     		ldr	r3, [r7, #8]	@ float
 10409 0c66 4FF08F41 		mov	r1, #1199570944
 10410 0c6a 1846     		mov	r0, r3
 10411 0c6c FFF7FEFF 		bl	__aeabi_fmul
 10412 0c70 0346     		mov	r3, r0
 10413 0c72 1846     		mov	r0, r3
 10414 0c74 FFF7FEFF 		bl	__aeabi_f2iz
 10415 0c78 0146     		mov	r1, r0
 10416 0c7a 1E4A     		ldr	r2, .L456+4
 10417 0c7c 2346     		mov	r3, r4
 10418 0c7e DB00     		lsls	r3, r3, #3
 10419 0c80 1B1B     		subs	r3, r3, r4
 10420 0c82 1B01     		lsls	r3, r3, #4
 10421 0c84 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 237


 10422 0c86 B833     		adds	r3, r3, #184
 10423 0c88 1960     		str	r1, [r3]
1388:..\src/command_processing.c ****             }
1389:..\src/command_processing.c ****             else {
1390:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1391:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1392:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1393:..\src/command_processing.c ****                 }
1394:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1395:..\src/command_processing.c ****                 
1396:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1397:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1398:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1399:..\src/command_processing.c ****                 }
1400:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1401:..\src/command_processing.c ****                 
1402:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1403:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1404:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1405:..\src/command_processing.c ****                 }
1406:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1407:..\src/command_processing.c ****             }
1408:..\src/command_processing.c ****             break;
 10424              		.loc 1 1408 0
 10425 0c8a BDE3     		b	.L387
 10426              	.L413:
1390:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10427              		.loc 1 1390 0
 10428 0c8c 1B4B     		ldr	r3, .L456+12
 10429 0c8e 1B68     		ldr	r3, [r3]	@ float
 10430 0c90 FB60     		str	r3, [r7, #12]	@ float
1391:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10431              		.loc 1 1391 0
 10432 0c92 0023     		movs	r3, #0
 10433 0c94 BB75     		strb	r3, [r7, #22]
 10434 0c96 0EE0     		b	.L421
 10435              	.L422:
1392:..\src/command_processing.c ****                 }
 10436              		.loc 1 1392 0 discriminator 3
 10437 0c98 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10438 0c9a C3F10303 		rsb	r3, r3, #3
 10439 0c9e 07F10802 		add	r2, r7, #8
 10440 0ca2 1344     		add	r3, r3, r2
 10441 0ca4 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10442 0ca6 07F10C01 		add	r1, r7, #12
 10443 0caa 0A44     		add	r2, r2, r1
 10444 0cac 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10445 0cae 1A70     		strb	r2, [r3]
1391:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10446              		.loc 1 1391 0 discriminator 3
 10447 0cb0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10448 0cb2 0133     		adds	r3, r3, #1
 10449 0cb4 BB75     		strb	r3, [r7, #22]
 10450              	.L421:
1391:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10451              		.loc 1 1391 0 is_stmt 0 discriminator 1
 10452 0cb6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 238


 10453 0cb8 032B     		cmp	r3, #3
 10454 0cba EDD9     		bls	.L422
1394:..\src/command_processing.c ****                 
 10455              		.loc 1 1394 0 is_stmt 1
 10456 0cbc FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10457 0cbe BB68     		ldr	r3, [r7, #8]	@ float
 10458 0cc0 4FF08F41 		mov	r1, #1199570944
 10459 0cc4 1846     		mov	r0, r3
 10460 0cc6 FFF7FEFF 		bl	__aeabi_fmul
 10461 0cca 0346     		mov	r3, r0
 10462 0ccc 1846     		mov	r0, r3
 10463 0cce FFF7FEFF 		bl	__aeabi_f2iz
 10464 0cd2 0146     		mov	r1, r0
 10465 0cd4 074A     		ldr	r2, .L456+4
 10466 0cd6 2346     		mov	r3, r4
 10467 0cd8 DB00     		lsls	r3, r3, #3
 10468 0cda 1B1B     		subs	r3, r3, r4
 10469 0cdc 1B01     		lsls	r3, r3, #4
 10470 0cde 1344     		add	r3, r3, r2
 10471 0ce0 C833     		adds	r3, r3, #200
 10472 0ce2 1960     		str	r1, [r3]
1396:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10473              		.loc 1 1396 0
 10474 0ce4 064B     		ldr	r3, .L456+16
 10475 0ce6 1B68     		ldr	r3, [r3]	@ float
 10476 0ce8 FB60     		str	r3, [r7, #12]	@ float
1397:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10477              		.loc 1 1397 0
 10478 0cea 0023     		movs	r3, #0
 10479 0cec BB75     		strb	r3, [r7, #22]
 10480 0cee 1AE0     		b	.L423
 10481              	.L457:
 10482              		.align	2
 10483              	.L456:
 10484 0cf0 00000000 		.word	g_rx
 10485 0cf4 00000000 		.word	g_mem
 10486 0cf8 00000000 		.word	c_mem
 10487 0cfc 03000000 		.word	g_rx+3
 10488 0d00 07000000 		.word	g_rx+7
 10489 0d04 0B000000 		.word	g_rx+11
 10490              	.L424:
1398:..\src/command_processing.c ****                 }
 10491              		.loc 1 1398 0 discriminator 3
 10492 0d08 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10493 0d0a C3F10303 		rsb	r3, r3, #3
 10494 0d0e 07F10802 		add	r2, r7, #8
 10495 0d12 1344     		add	r3, r3, r2
 10496 0d14 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10497 0d16 07F10C01 		add	r1, r7, #12
 10498 0d1a 0A44     		add	r2, r2, r1
 10499 0d1c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10500 0d1e 1A70     		strb	r2, [r3]
1397:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10501              		.loc 1 1397 0 discriminator 3
 10502 0d20 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10503 0d22 0133     		adds	r3, r3, #1
 10504 0d24 BB75     		strb	r3, [r7, #22]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 239


 10505              	.L423:
1397:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10506              		.loc 1 1397 0 is_stmt 0 discriminator 1
 10507 0d26 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10508 0d28 032B     		cmp	r3, #3
 10509 0d2a EDD9     		bls	.L424
1400:..\src/command_processing.c ****                 
 10510              		.loc 1 1400 0 is_stmt 1
 10511 0d2c FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10512 0d2e BB68     		ldr	r3, [r7, #8]	@ float
 10513 0d30 4FF08F41 		mov	r1, #1199570944
 10514 0d34 1846     		mov	r0, r3
 10515 0d36 FFF7FEFF 		bl	__aeabi_fmul
 10516 0d3a 0346     		mov	r3, r0
 10517 0d3c 1846     		mov	r0, r3
 10518 0d3e FFF7FEFF 		bl	__aeabi_f2iz
 10519 0d42 0146     		mov	r1, r0
 10520 0d44 B74A     		ldr	r2, .L458
 10521 0d46 2346     		mov	r3, r4
 10522 0d48 DB00     		lsls	r3, r3, #3
 10523 0d4a 1B1B     		subs	r3, r3, r4
 10524 0d4c 1B01     		lsls	r3, r3, #4
 10525 0d4e 1344     		add	r3, r3, r2
 10526 0d50 CC33     		adds	r3, r3, #204
 10527 0d52 1960     		str	r1, [r3]
1402:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10528              		.loc 1 1402 0
 10529 0d54 B44B     		ldr	r3, .L458+4
 10530 0d56 1B68     		ldr	r3, [r3]	@ float
 10531 0d58 FB60     		str	r3, [r7, #12]	@ float
1403:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10532              		.loc 1 1403 0
 10533 0d5a 0023     		movs	r3, #0
 10534 0d5c BB75     		strb	r3, [r7, #22]
 10535 0d5e 0EE0     		b	.L425
 10536              	.L426:
1404:..\src/command_processing.c ****                 }
 10537              		.loc 1 1404 0 discriminator 3
 10538 0d60 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10539 0d62 C3F10303 		rsb	r3, r3, #3
 10540 0d66 07F10802 		add	r2, r7, #8
 10541 0d6a 1344     		add	r3, r3, r2
 10542 0d6c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10543 0d6e 07F10C01 		add	r1, r7, #12
 10544 0d72 0A44     		add	r2, r2, r1
 10545 0d74 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10546 0d76 1A70     		strb	r2, [r3]
1403:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10547              		.loc 1 1403 0 discriminator 3
 10548 0d78 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10549 0d7a 0133     		adds	r3, r3, #1
 10550 0d7c BB75     		strb	r3, [r7, #22]
 10551              	.L425:
1403:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10552              		.loc 1 1403 0 is_stmt 0 discriminator 1
 10553 0d7e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10554 0d80 032B     		cmp	r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 240


 10555 0d82 EDD9     		bls	.L426
1406:..\src/command_processing.c ****             }
 10556              		.loc 1 1406 0 is_stmt 1
 10557 0d84 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10558 0d86 BB68     		ldr	r3, [r7, #8]	@ float
 10559 0d88 4FF08F41 		mov	r1, #1199570944
 10560 0d8c 1846     		mov	r0, r3
 10561 0d8e FFF7FEFF 		bl	__aeabi_fmul
 10562 0d92 0346     		mov	r3, r0
 10563 0d94 1846     		mov	r0, r3
 10564 0d96 FFF7FEFF 		bl	__aeabi_f2iz
 10565 0d9a 0146     		mov	r1, r0
 10566 0d9c A14A     		ldr	r2, .L458
 10567 0d9e 2346     		mov	r3, r4
 10568 0da0 DB00     		lsls	r3, r3, #3
 10569 0da2 1B1B     		subs	r3, r3, r4
 10570 0da4 1B01     		lsls	r3, r3, #4
 10571 0da6 1344     		add	r3, r3, r2
 10572 0da8 D033     		adds	r3, r3, #208
 10573 0daa 1960     		str	r1, [r3]
 10574              		.loc 1 1408 0
 10575 0dac 2CE3     		b	.L387
 10576              	.L367:
1409:..\src/command_processing.c ****             
1410:..\src/command_processing.c ****         case 45:         // Second Motor Current PID
1411:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 10577              		.loc 1 1411 0
 10578 0dae FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10579 0db0 9E49     		ldr	r1, .L458+8
 10580 0db2 1346     		mov	r3, r2
 10581 0db4 DB00     		lsls	r3, r3, #3
 10582 0db6 9B1A     		subs	r3, r3, r2
 10583 0db8 1B01     		lsls	r3, r3, #4
 10584 0dba 0B44     		add	r3, r3, r1
 10585 0dbc 03F20F13 		addw	r3, r3, #271
 10586 0dc0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10587 0dc2 032B     		cmp	r3, #3
 10588 0dc4 00F08580 		beq	.L427
1412:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 10589              		.loc 1 1412 0
 10590 0dc8 994B     		ldr	r3, .L458+12
 10591 0dca 1B68     		ldr	r3, [r3]	@ float
 10592 0dcc FB60     		str	r3, [r7, #12]	@ float
1413:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10593              		.loc 1 1413 0
 10594 0dce 0023     		movs	r3, #0
 10595 0dd0 BB75     		strb	r3, [r7, #22]
 10596 0dd2 0EE0     		b	.L428
 10597              	.L429:
1414:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10598              		.loc 1 1414 0 discriminator 3
 10599 0dd4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10600 0dd6 C3F10303 		rsb	r3, r3, #3
 10601 0dda 07F10802 		add	r2, r7, #8
 10602 0dde 1344     		add	r3, r3, r2
 10603 0de0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10604 0de2 07F10C01 		add	r1, r7, #12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 241


 10605 0de6 0A44     		add	r2, r2, r1
 10606 0de8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10607 0dea 1A70     		strb	r2, [r3]
1413:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10608              		.loc 1 1413 0 discriminator 3
 10609 0dec BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10610 0dee 0133     		adds	r3, r3, #1
 10611 0df0 BB75     		strb	r3, [r7, #22]
 10612              	.L428:
1413:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10613              		.loc 1 1413 0 is_stmt 0 discriminator 1
 10614 0df2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10615 0df4 032B     		cmp	r3, #3
 10616 0df6 EDD9     		bls	.L429
1415:..\src/command_processing.c ****                 }
1416:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c = aux_float2 * 65536;
 10617              		.loc 1 1416 0 is_stmt 1
 10618 0df8 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10619 0dfa BB68     		ldr	r3, [r7, #8]	@ float
 10620 0dfc 4FF08F41 		mov	r1, #1199570944
 10621 0e00 1846     		mov	r0, r3
 10622 0e02 FFF7FEFF 		bl	__aeabi_fmul
 10623 0e06 0346     		mov	r3, r0
 10624 0e08 1846     		mov	r0, r3
 10625 0e0a FFF7FEFF 		bl	__aeabi_f2iz
 10626 0e0e 0146     		mov	r1, r0
 10627 0e10 844A     		ldr	r2, .L458
 10628 0e12 2346     		mov	r3, r4
 10629 0e14 DB00     		lsls	r3, r3, #3
 10630 0e16 1B1B     		subs	r3, r3, r4
 10631 0e18 1B01     		lsls	r3, r3, #4
 10632 0e1a 1344     		add	r3, r3, r2
 10633 0e1c BC33     		adds	r3, r3, #188
 10634 0e1e 1960     		str	r1, [r3]
1417:..\src/command_processing.c ****                 
1418:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 10635              		.loc 1 1418 0
 10636 0e20 844B     		ldr	r3, .L458+16
 10637 0e22 1B68     		ldr	r3, [r3]	@ float
 10638 0e24 FB60     		str	r3, [r7, #12]	@ float
1419:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10639              		.loc 1 1419 0
 10640 0e26 0023     		movs	r3, #0
 10641 0e28 BB75     		strb	r3, [r7, #22]
 10642 0e2a 0EE0     		b	.L430
 10643              	.L431:
1420:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10644              		.loc 1 1420 0 discriminator 3
 10645 0e2c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10646 0e2e C3F10303 		rsb	r3, r3, #3
 10647 0e32 07F10802 		add	r2, r7, #8
 10648 0e36 1344     		add	r3, r3, r2
 10649 0e38 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10650 0e3a 07F10C01 		add	r1, r7, #12
 10651 0e3e 0A44     		add	r2, r2, r1
 10652 0e40 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10653 0e42 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 242


1419:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10654              		.loc 1 1419 0 discriminator 3
 10655 0e44 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10656 0e46 0133     		adds	r3, r3, #1
 10657 0e48 BB75     		strb	r3, [r7, #22]
 10658              	.L430:
1419:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10659              		.loc 1 1419 0 is_stmt 0 discriminator 1
 10660 0e4a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10661 0e4c 032B     		cmp	r3, #3
 10662 0e4e EDD9     		bls	.L431
1421:..\src/command_processing.c ****                 }
1422:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c = aux_float2 * 65536;
 10663              		.loc 1 1422 0 is_stmt 1
 10664 0e50 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10665 0e52 BB68     		ldr	r3, [r7, #8]	@ float
 10666 0e54 4FF08F41 		mov	r1, #1199570944
 10667 0e58 1846     		mov	r0, r3
 10668 0e5a FFF7FEFF 		bl	__aeabi_fmul
 10669 0e5e 0346     		mov	r3, r0
 10670 0e60 1846     		mov	r0, r3
 10671 0e62 FFF7FEFF 		bl	__aeabi_f2iz
 10672 0e66 0146     		mov	r1, r0
 10673 0e68 6E4A     		ldr	r2, .L458
 10674 0e6a 2346     		mov	r3, r4
 10675 0e6c DB00     		lsls	r3, r3, #3
 10676 0e6e 1B1B     		subs	r3, r3, r4
 10677 0e70 1B01     		lsls	r3, r3, #4
 10678 0e72 1344     		add	r3, r3, r2
 10679 0e74 C033     		adds	r3, r3, #192
 10680 0e76 1960     		str	r1, [r3]
1423:..\src/command_processing.c ****                 
1424:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 10681              		.loc 1 1424 0
 10682 0e78 6B4B     		ldr	r3, .L458+4
 10683 0e7a 1B68     		ldr	r3, [r3]	@ float
 10684 0e7c FB60     		str	r3, [r7, #12]	@ float
1425:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10685              		.loc 1 1425 0
 10686 0e7e 0023     		movs	r3, #0
 10687 0e80 BB75     		strb	r3, [r7, #22]
 10688 0e82 0EE0     		b	.L432
 10689              	.L433:
1426:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10690              		.loc 1 1426 0 discriminator 3
 10691 0e84 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10692 0e86 C3F10303 		rsb	r3, r3, #3
 10693 0e8a 07F10802 		add	r2, r7, #8
 10694 0e8e 1344     		add	r3, r3, r2
 10695 0e90 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10696 0e92 07F10C01 		add	r1, r7, #12
 10697 0e96 0A44     		add	r2, r2, r1
 10698 0e98 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10699 0e9a 1A70     		strb	r2, [r3]
1425:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10700              		.loc 1 1425 0 discriminator 3
 10701 0e9c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 243


 10702 0e9e 0133     		adds	r3, r3, #1
 10703 0ea0 BB75     		strb	r3, [r7, #22]
 10704              	.L432:
1425:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10705              		.loc 1 1425 0 is_stmt 0 discriminator 1
 10706 0ea2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10707 0ea4 032B     		cmp	r3, #3
 10708 0ea6 EDD9     		bls	.L433
1427:..\src/command_processing.c ****                 }
1428:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c = aux_float2 * 65536;
 10709              		.loc 1 1428 0 is_stmt 1
 10710 0ea8 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10711 0eaa BB68     		ldr	r3, [r7, #8]	@ float
 10712 0eac 4FF08F41 		mov	r1, #1199570944
 10713 0eb0 1846     		mov	r0, r3
 10714 0eb2 FFF7FEFF 		bl	__aeabi_fmul
 10715 0eb6 0346     		mov	r3, r0
 10716 0eb8 1846     		mov	r0, r3
 10717 0eba FFF7FEFF 		bl	__aeabi_f2iz
 10718 0ebe 0146     		mov	r1, r0
 10719 0ec0 584A     		ldr	r2, .L458
 10720 0ec2 2346     		mov	r3, r4
 10721 0ec4 DB00     		lsls	r3, r3, #3
 10722 0ec6 1B1B     		subs	r3, r3, r4
 10723 0ec8 1B01     		lsls	r3, r3, #4
 10724 0eca 1344     		add	r3, r3, r2
 10725 0ecc C433     		adds	r3, r3, #196
 10726 0ece 1960     		str	r1, [r3]
1429:..\src/command_processing.c ****             }
1430:..\src/command_processing.c ****             else {
1431:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1432:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1433:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1434:..\src/command_processing.c ****                 }
1435:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1436:..\src/command_processing.c ****                 
1437:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1438:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1439:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1440:..\src/command_processing.c ****                 }
1441:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1442:..\src/command_processing.c ****                 
1443:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1444:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1445:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1446:..\src/command_processing.c ****                 }
1447:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1448:..\src/command_processing.c ****             }            
1449:..\src/command_processing.c ****             break;  
 10727              		.loc 1 1449 0
 10728 0ed0 9AE2     		b	.L387
 10729              	.L427:
1431:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10730              		.loc 1 1431 0
 10731 0ed2 574B     		ldr	r3, .L458+12
 10732 0ed4 1B68     		ldr	r3, [r3]	@ float
 10733 0ed6 FB60     		str	r3, [r7, #12]	@ float
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 244


1432:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10734              		.loc 1 1432 0
 10735 0ed8 0023     		movs	r3, #0
 10736 0eda BB75     		strb	r3, [r7, #22]
 10737 0edc 0EE0     		b	.L435
 10738              	.L436:
1433:..\src/command_processing.c ****                 }
 10739              		.loc 1 1433 0 discriminator 3
 10740 0ede BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10741 0ee0 C3F10303 		rsb	r3, r3, #3
 10742 0ee4 07F10802 		add	r2, r7, #8
 10743 0ee8 1344     		add	r3, r3, r2
 10744 0eea BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10745 0eec 07F10C01 		add	r1, r7, #12
 10746 0ef0 0A44     		add	r2, r2, r1
 10747 0ef2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10748 0ef4 1A70     		strb	r2, [r3]
1432:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10749              		.loc 1 1432 0 discriminator 3
 10750 0ef6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10751 0ef8 0133     		adds	r3, r3, #1
 10752 0efa BB75     		strb	r3, [r7, #22]
 10753              	.L435:
1432:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10754              		.loc 1 1432 0 is_stmt 0 discriminator 1
 10755 0efc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10756 0efe 032B     		cmp	r3, #3
 10757 0f00 EDD9     		bls	.L436
1435:..\src/command_processing.c ****                 
 10758              		.loc 1 1435 0 is_stmt 1
 10759 0f02 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10760 0f04 BB68     		ldr	r3, [r7, #8]	@ float
 10761 0f06 4FF08F41 		mov	r1, #1199570944
 10762 0f0a 1846     		mov	r0, r3
 10763 0f0c FFF7FEFF 		bl	__aeabi_fmul
 10764 0f10 0346     		mov	r3, r0
 10765 0f12 1846     		mov	r0, r3
 10766 0f14 FFF7FEFF 		bl	__aeabi_f2iz
 10767 0f18 0146     		mov	r1, r0
 10768 0f1a 424A     		ldr	r2, .L458
 10769 0f1c 2346     		mov	r3, r4
 10770 0f1e DB00     		lsls	r3, r3, #3
 10771 0f20 1B1B     		subs	r3, r3, r4
 10772 0f22 1B01     		lsls	r3, r3, #4
 10773 0f24 1344     		add	r3, r3, r2
 10774 0f26 D433     		adds	r3, r3, #212
 10775 0f28 1960     		str	r1, [r3]
1437:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10776              		.loc 1 1437 0
 10777 0f2a 424B     		ldr	r3, .L458+16
 10778 0f2c 1B68     		ldr	r3, [r3]	@ float
 10779 0f2e FB60     		str	r3, [r7, #12]	@ float
1438:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10780              		.loc 1 1438 0
 10781 0f30 0023     		movs	r3, #0
 10782 0f32 BB75     		strb	r3, [r7, #22]
 10783 0f34 0EE0     		b	.L437
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 245


 10784              	.L438:
1439:..\src/command_processing.c ****                 }
 10785              		.loc 1 1439 0 discriminator 3
 10786 0f36 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10787 0f38 C3F10303 		rsb	r3, r3, #3
 10788 0f3c 07F10802 		add	r2, r7, #8
 10789 0f40 1344     		add	r3, r3, r2
 10790 0f42 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10791 0f44 07F10C01 		add	r1, r7, #12
 10792 0f48 0A44     		add	r2, r2, r1
 10793 0f4a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10794 0f4c 1A70     		strb	r2, [r3]
1438:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10795              		.loc 1 1438 0 discriminator 3
 10796 0f4e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10797 0f50 0133     		adds	r3, r3, #1
 10798 0f52 BB75     		strb	r3, [r7, #22]
 10799              	.L437:
1438:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10800              		.loc 1 1438 0 is_stmt 0 discriminator 1
 10801 0f54 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10802 0f56 032B     		cmp	r3, #3
 10803 0f58 EDD9     		bls	.L438
1441:..\src/command_processing.c ****                 
 10804              		.loc 1 1441 0 is_stmt 1
 10805 0f5a FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10806 0f5c BB68     		ldr	r3, [r7, #8]	@ float
 10807 0f5e 4FF08F41 		mov	r1, #1199570944
 10808 0f62 1846     		mov	r0, r3
 10809 0f64 FFF7FEFF 		bl	__aeabi_fmul
 10810 0f68 0346     		mov	r3, r0
 10811 0f6a 1846     		mov	r0, r3
 10812 0f6c FFF7FEFF 		bl	__aeabi_f2iz
 10813 0f70 0146     		mov	r1, r0
 10814 0f72 2C4A     		ldr	r2, .L458
 10815 0f74 2346     		mov	r3, r4
 10816 0f76 DB00     		lsls	r3, r3, #3
 10817 0f78 1B1B     		subs	r3, r3, r4
 10818 0f7a 1B01     		lsls	r3, r3, #4
 10819 0f7c 1344     		add	r3, r3, r2
 10820 0f7e D833     		adds	r3, r3, #216
 10821 0f80 1960     		str	r1, [r3]
1443:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10822              		.loc 1 1443 0
 10823 0f82 294B     		ldr	r3, .L458+4
 10824 0f84 1B68     		ldr	r3, [r3]	@ float
 10825 0f86 FB60     		str	r3, [r7, #12]	@ float
1444:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10826              		.loc 1 1444 0
 10827 0f88 0023     		movs	r3, #0
 10828 0f8a BB75     		strb	r3, [r7, #22]
 10829 0f8c 0EE0     		b	.L439
 10830              	.L440:
1445:..\src/command_processing.c ****                 }
 10831              		.loc 1 1445 0 discriminator 3
 10832 0f8e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10833 0f90 C3F10303 		rsb	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 246


 10834 0f94 07F10802 		add	r2, r7, #8
 10835 0f98 1344     		add	r3, r3, r2
 10836 0f9a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10837 0f9c 07F10C01 		add	r1, r7, #12
 10838 0fa0 0A44     		add	r2, r2, r1
 10839 0fa2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10840 0fa4 1A70     		strb	r2, [r3]
1444:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10841              		.loc 1 1444 0 discriminator 3
 10842 0fa6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10843 0fa8 0133     		adds	r3, r3, #1
 10844 0faa BB75     		strb	r3, [r7, #22]
 10845              	.L439:
1444:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10846              		.loc 1 1444 0 is_stmt 0 discriminator 1
 10847 0fac BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10848 0fae 032B     		cmp	r3, #3
 10849 0fb0 EDD9     		bls	.L440
1447:..\src/command_processing.c ****             }            
 10850              		.loc 1 1447 0 is_stmt 1
 10851 0fb2 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10852 0fb4 BB68     		ldr	r3, [r7, #8]	@ float
 10853 0fb6 4FF08F41 		mov	r1, #1199570944
 10854 0fba 1846     		mov	r0, r3
 10855 0fbc FFF7FEFF 		bl	__aeabi_fmul
 10856 0fc0 0346     		mov	r3, r0
 10857 0fc2 1846     		mov	r0, r3
 10858 0fc4 FFF7FEFF 		bl	__aeabi_f2iz
 10859 0fc8 0146     		mov	r1, r0
 10860 0fca 164A     		ldr	r2, .L458
 10861 0fcc 2346     		mov	r3, r4
 10862 0fce DB00     		lsls	r3, r3, #3
 10863 0fd0 1B1B     		subs	r3, r3, r4
 10864 0fd2 1B01     		lsls	r3, r3, #4
 10865 0fd4 1344     		add	r3, r3, r2
 10866 0fd6 DC33     		adds	r3, r3, #220
 10867 0fd8 1960     		str	r1, [r3]
 10868              		.loc 1 1449 0
 10869 0fda 15E2     		b	.L387
 10870              	.L368:
1450:..\src/command_processing.c ****             
1451:..\src/command_processing.c ****         case 47:         // Second Motor Input mode
1452:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].input_mode = g_rx.buffer[3];
 10871              		.loc 1 1452 0
 10872 0fdc FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10873 0fde 164B     		ldr	r3, .L458+20
 10874 0fe0 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 10875 0fe2 1049     		ldr	r1, .L458
 10876 0fe4 1346     		mov	r3, r2
 10877 0fe6 DB00     		lsls	r3, r3, #3
 10878 0fe8 9B1A     		subs	r3, r3, r2
 10879 0fea 1B01     		lsls	r3, r3, #4
 10880 0fec 0B44     		add	r3, r3, r1
 10881 0fee 03F58773 		add	r3, r3, #270
 10882 0ff2 0246     		mov	r2, r0
 10883 0ff4 1A70     		strb	r2, [r3]
1453:..\src/command_processing.c ****             
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 247


1454:..\src/command_processing.c ****             // Hold the actual position
1455:..\src/command_processing.c ****             g_refNew[SECOND_MOTOR_IDX].pos = g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].pos
 10884              		.loc 1 1455 0
 10885 0ff6 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 10886 0ff8 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10887 0ffa 0A48     		ldr	r0, .L458
 10888 0ffc 1346     		mov	r3, r2
 10889 0ffe DB00     		lsls	r3, r3, #3
 10890 1000 9B1A     		subs	r3, r3, r2
 10891 1002 1B01     		lsls	r3, r3, #4
 10892 1004 0344     		add	r3, r3, r0
 10893 1006 03F58873 		add	r3, r3, #272
 10894 100a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10895 100c 1846     		mov	r0, r3
 10896 100e 0B4A     		ldr	r2, .L458+24
 10897 1010 3423     		movs	r3, #52
 10898 1012 03FB00F3 		mul	r3, r3, r0
 10899 1016 1344     		add	r3, r3, r2
 10900 1018 1A68     		ldr	r2, [r3]
 10901 101a 0948     		ldr	r0, .L458+28
 10902 101c 0B01     		lsls	r3, r1, #4
 10903 101e 0344     		add	r3, r3, r0
 10904 1020 1A60     		str	r2, [r3]
1456:..\src/command_processing.c ****             break;   
 10905              		.loc 1 1456 0
 10906 1022 F1E1     		b	.L387
 10907              	.L459:
 10908              		.align	2
 10909              	.L458:
 10910 1024 00000000 		.word	g_mem
 10911 1028 0B000000 		.word	g_rx+11
 10912 102c 00000000 		.word	c_mem
 10913 1030 03000000 		.word	g_rx+3
 10914 1034 07000000 		.word	g_rx+7
 10915 1038 00000000 		.word	g_rx
 10916 103c 00000000 		.word	g_meas
 10917 1040 00000000 		.word	g_refNew
 10918              	.L369:
1457:..\src/command_processing.c **** 
1458:..\src/command_processing.c ****         case 50:         // Second Motor Measurement Offset
1459:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
 10919              		.loc 1 1459 0
 10920 1044 0023     		movs	r3, #0
 10921 1046 FB75     		strb	r3, [r7, #23]
 10922 1048 7EE0     		b	.L441
 10923              	.L442:
1460:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 10924              		.loc 1 1460 0 discriminator 3
 10925 104a FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10926 104c 9049     		ldr	r1, .L460
 10927 104e 1346     		mov	r3, r2
 10928 1050 DB00     		lsls	r3, r3, #3
 10929 1052 9B1A     		subs	r3, r3, r2
 10930 1054 1B01     		lsls	r3, r3, #4
 10931 1056 0B44     		add	r3, r3, r1
 10932 1058 03F58873 		add	r3, r3, #272
 10933 105c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 248


 10934 105e 1C46     		mov	r4, r3
 10935 1060 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10936 1062 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10937 1064 5B00     		lsls	r3, r3, #1
 10938 1066 0333     		adds	r3, r3, #3
 10939 1068 8A49     		ldr	r1, .L460+4
 10940 106a CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 10941 106c 1B02     		lsls	r3, r3, #8
 10942 106e 19B2     		sxth	r1, r3
 10943 1070 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10944 1072 0233     		adds	r3, r3, #2
 10945 1074 5B00     		lsls	r3, r3, #1
 10946 1076 8748     		ldr	r0, .L460+4
 10947 1078 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 10948 107a 1BB2     		sxth	r3, r3
 10949 107c 0B43     		orrs	r3, r3, r1
 10950 107e 1BB2     		sxth	r3, r3
 10951 1080 1846     		mov	r0, r3
 10952 1082 8349     		ldr	r1, .L460
 10953 1084 2346     		mov	r3, r4
 10954 1086 5B00     		lsls	r3, r3, #1
 10955 1088 2344     		add	r3, r3, r4
 10956 108a 9B00     		lsls	r3, r3, #2
 10957 108c 1344     		add	r3, r3, r2
 10958 108e 6633     		adds	r3, r3, #102
 10959 1090 41F82300 		str	r0, [r1, r3, lsl #2]
1461:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.mo
 10960              		.loc 1 1461 0 discriminator 3
 10961 1094 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10962 1096 7E49     		ldr	r1, .L460
 10963 1098 1346     		mov	r3, r2
 10964 109a DB00     		lsls	r3, r3, #3
 10965 109c 9B1A     		subs	r3, r3, r2
 10966 109e 1B01     		lsls	r3, r3, #4
 10967 10a0 0B44     		add	r3, r3, r1
 10968 10a2 03F58873 		add	r3, r3, #272
 10969 10a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10970 10a8 1D46     		mov	r5, r3
 10971 10aa F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 10972 10ac FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10973 10ae 7848     		ldr	r0, .L460
 10974 10b0 1346     		mov	r3, r2
 10975 10b2 DB00     		lsls	r3, r3, #3
 10976 10b4 9B1A     		subs	r3, r3, r2
 10977 10b6 1B01     		lsls	r3, r3, #4
 10978 10b8 0344     		add	r3, r3, r0
 10979 10ba 03F58873 		add	r3, r3, #272
 10980 10be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10981 10c0 1C46     		mov	r4, r3
 10982 10c2 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10983 10c4 7248     		ldr	r0, .L460
 10984 10c6 2346     		mov	r3, r4
 10985 10c8 5B00     		lsls	r3, r3, #1
 10986 10ca 2344     		add	r3, r3, r4
 10987 10cc 9B00     		lsls	r3, r3, #2
 10988 10ce 1344     		add	r3, r3, r2
 10989 10d0 6633     		adds	r3, r3, #102
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 249


 10990 10d2 50F82300 		ldr	r0, [r0, r3, lsl #2]
 10991 10d6 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10992 10d8 6D4C     		ldr	r4, .L460
 10993 10da 1346     		mov	r3, r2
 10994 10dc DB00     		lsls	r3, r3, #3
 10995 10de 9B1A     		subs	r3, r3, r2
 10996 10e0 1B01     		lsls	r3, r3, #4
 10997 10e2 2344     		add	r3, r3, r4
 10998 10e4 03F58873 		add	r3, r3, #272
 10999 10e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11000 10ea 1E46     		mov	r6, r3
 11001 10ec FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 11002 10ee 684C     		ldr	r4, .L460
 11003 10f0 3346     		mov	r3, r6
 11004 10f2 5B00     		lsls	r3, r3, #1
 11005 10f4 3344     		add	r3, r3, r6
 11006 10f6 1B01     		lsls	r3, r3, #4
 11007 10f8 2344     		add	r3, r3, r4
 11008 10fa 1344     		add	r3, r3, r2
 11009 10fc 03F29513 		addw	r3, r3, #405
 11010 1100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11011 1102 00FA03F2 		lsl	r2, r0, r3
 11012 1106 6248     		ldr	r0, .L460
 11013 1108 2B46     		mov	r3, r5
 11014 110a 5B00     		lsls	r3, r3, #1
 11015 110c 2B44     		add	r3, r3, r5
 11016 110e 9B00     		lsls	r3, r3, #2
 11017 1110 0B44     		add	r3, r3, r1
 11018 1112 6633     		adds	r3, r3, #102
 11019 1114 40F82320 		str	r2, [r0, r3, lsl #2]
1462:..\src/command_processing.c **** 
1463:..\src/command_processing.c ****                 g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].rot[i] = 0;
 11020              		.loc 1 1463 0 discriminator 3
 11021 1118 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11022 111a 5D49     		ldr	r1, .L460
 11023 111c 1346     		mov	r3, r2
 11024 111e DB00     		lsls	r3, r3, #3
 11025 1120 9B1A     		subs	r3, r3, r2
 11026 1122 1B01     		lsls	r3, r3, #4
 11027 1124 0B44     		add	r3, r3, r1
 11028 1126 03F58873 		add	r3, r3, #272
 11029 112a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11030 112c 1846     		mov	r0, r3
 11031 112e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11032 1130 5949     		ldr	r1, .L460+8
 11033 1132 3422     		movs	r2, #52
 11034 1134 02FB00F2 		mul	r2, r2, r0
 11035 1138 0A44     		add	r2, r2, r1
 11036 113a 1344     		add	r3, r3, r2
 11037 113c 1833     		adds	r3, r3, #24
 11038 113e 0022     		movs	r2, #0
 11039 1140 1A70     		strb	r2, [r3]
1459:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 11040              		.loc 1 1459 0 discriminator 3
 11041 1142 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11042 1144 0133     		adds	r3, r3, #1
 11043 1146 FB75     		strb	r3, [r7, #23]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 250


 11044              	.L441:
1459:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 11045              		.loc 1 1459 0 is_stmt 0 discriminator 1
 11046 1148 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11047 114a 022B     		cmp	r3, #2
 11048 114c 7FF67DAF 		bls	.L442
1464:..\src/command_processing.c ****             }
1465:..\src/command_processing.c ****             reset_last_value_flag = 1;
 11049              		.loc 1 1465 0 is_stmt 1
 11050 1150 524B     		ldr	r3, .L460+12
 11051 1152 0122     		movs	r2, #1
 11052 1154 1A70     		strb	r2, [r3]
1466:..\src/command_processing.c ****             break;
 11053              		.loc 1 1466 0
 11054 1156 57E1     		b	.L387
 11055              	.L370:
1467:..\src/command_processing.c ****     
1468:..\src/command_processing.c ****         case 53:        // Second Motor Position limits
1469:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]
 11056              		.loc 1 1469 0
 11057 1158 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11058 115a 4E4B     		ldr	r3, .L460+4
 11059 115c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 11060 115e 1906     		lsls	r1, r3, #24
 11061 1160 4C4B     		ldr	r3, .L460+4
 11062 1162 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 11063 1164 1B04     		lsls	r3, r3, #16
 11064 1166 1943     		orrs	r1, r1, r3
 11065 1168 4A4B     		ldr	r3, .L460+4
 11066 116a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 11067 116c 1B02     		lsls	r3, r3, #8
 11068 116e 0B43     		orrs	r3, r3, r1
 11069 1170 4849     		ldr	r1, .L460+4
 11070 1172 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 11071 1174 1943     		orrs	r1, r1, r3
 11072 1176 4648     		ldr	r0, .L460
 11073 1178 1346     		mov	r3, r2
 11074 117a DB00     		lsls	r3, r3, #3
 11075 117c 9B1A     		subs	r3, r3, r2
 11076 117e 1B01     		lsls	r3, r3, #4
 11077 1180 0344     		add	r3, r3, r0
 11078 1182 E433     		adds	r3, r3, #228
 11079 1184 1960     		str	r1, [r3]
1470:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]
 11080              		.loc 1 1470 0
 11081 1186 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11082 1188 424B     		ldr	r3, .L460+4
 11083 118a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 11084 118c 1906     		lsls	r1, r3, #24
 11085 118e 414B     		ldr	r3, .L460+4
 11086 1190 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 11087 1192 1B04     		lsls	r3, r3, #16
 11088 1194 1943     		orrs	r1, r1, r3
 11089 1196 3F4B     		ldr	r3, .L460+4
 11090 1198 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 11091 119a 1B02     		lsls	r3, r3, #8
 11092 119c 0B43     		orrs	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 251


 11093 119e 3D49     		ldr	r1, .L460+4
 11094 11a0 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 11095 11a2 1943     		orrs	r1, r1, r3
 11096 11a4 3A48     		ldr	r0, .L460
 11097 11a6 1346     		mov	r3, r2
 11098 11a8 DB00     		lsls	r3, r3, #3
 11099 11aa 9B1A     		subs	r3, r3, r2
 11100 11ac 1B01     		lsls	r3, r3, #4
 11101 11ae 0344     		add	r3, r3, r0
 11102 11b0 E833     		adds	r3, r3, #232
 11103 11b2 1960     		str	r1, [r3]
1471:..\src/command_processing.c **** 
1472:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf <
 11104              		.loc 1 1472 0
 11105 11b4 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11106 11b6 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11107 11b8 3548     		ldr	r0, .L460
 11108 11ba 0B46     		mov	r3, r1
 11109 11bc DB00     		lsls	r3, r3, #3
 11110 11be 5B1A     		subs	r3, r3, r1
 11111 11c0 1B01     		lsls	r3, r3, #4
 11112 11c2 0344     		add	r3, r3, r0
 11113 11c4 E433     		adds	r3, r3, #228
 11114 11c6 1868     		ldr	r0, [r3]
 11115 11c8 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11116 11ca 314C     		ldr	r4, .L460
 11117 11cc 0B46     		mov	r3, r1
 11118 11ce DB00     		lsls	r3, r3, #3
 11119 11d0 5B1A     		subs	r3, r3, r1
 11120 11d2 1B01     		lsls	r3, r3, #4
 11121 11d4 2344     		add	r3, r3, r4
 11122 11d6 03F58873 		add	r3, r3, #272
 11123 11da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11124 11dc 1C46     		mov	r4, r3
 11125 11de 2C49     		ldr	r1, .L460
 11126 11e0 2346     		mov	r3, r4
 11127 11e2 5B00     		lsls	r3, r3, #1
 11128 11e4 2344     		add	r3, r3, r4
 11129 11e6 1B01     		lsls	r3, r3, #4
 11130 11e8 0B44     		add	r3, r3, r1
 11131 11ea 03F29513 		addw	r3, r3, #405
 11132 11ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11133 11f0 00FA03F1 		lsl	r1, r0, r3
 11134 11f4 2648     		ldr	r0, .L460
 11135 11f6 1346     		mov	r3, r2
 11136 11f8 DB00     		lsls	r3, r3, #3
 11137 11fa 9B1A     		subs	r3, r3, r2
 11138 11fc 1B01     		lsls	r3, r3, #4
 11139 11fe 0344     		add	r3, r3, r0
 11140 1200 E433     		adds	r3, r3, #228
 11141 1202 1960     		str	r1, [r3]
1473:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup <
 11142              		.loc 1 1473 0
 11143 1204 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11144 1206 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11145 1208 2148     		ldr	r0, .L460
 11146 120a 0B46     		mov	r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 252


 11147 120c DB00     		lsls	r3, r3, #3
 11148 120e 5B1A     		subs	r3, r3, r1
 11149 1210 1B01     		lsls	r3, r3, #4
 11150 1212 0344     		add	r3, r3, r0
 11151 1214 E833     		adds	r3, r3, #232
 11152 1216 1868     		ldr	r0, [r3]
 11153 1218 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11154 121a 1D4C     		ldr	r4, .L460
 11155 121c 0B46     		mov	r3, r1
 11156 121e DB00     		lsls	r3, r3, #3
 11157 1220 5B1A     		subs	r3, r3, r1
 11158 1222 1B01     		lsls	r3, r3, #4
 11159 1224 2344     		add	r3, r3, r4
 11160 1226 03F58873 		add	r3, r3, #272
 11161 122a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11162 122c 1C46     		mov	r4, r3
 11163 122e 1849     		ldr	r1, .L460
 11164 1230 2346     		mov	r3, r4
 11165 1232 5B00     		lsls	r3, r3, #1
 11166 1234 2344     		add	r3, r3, r4
 11167 1236 1B01     		lsls	r3, r3, #4
 11168 1238 0B44     		add	r3, r3, r1
 11169 123a 03F29513 		addw	r3, r3, #405
 11170 123e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11171 1240 00FA03F1 		lsl	r1, r0, r3
 11172 1244 1248     		ldr	r0, .L460
 11173 1246 1346     		mov	r3, r2
 11174 1248 DB00     		lsls	r3, r3, #3
 11175 124a 9B1A     		subs	r3, r3, r2
 11176 124c 1B01     		lsls	r3, r3, #4
 11177 124e 0344     		add	r3, r3, r0
 11178 1250 E833     		adds	r3, r3, #232
 11179 1252 1960     		str	r1, [r3]
1474:..\src/command_processing.c ****             break;
 11180              		.loc 1 1474 0
 11181 1254 D8E0     		b	.L387
 11182              	.L371:
1475:..\src/command_processing.c ****             
1476:..\src/command_processing.c ****         case 61:        // Second Motor Driver Type
1477:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 11183              		.loc 1 1477 0
 11184 1256 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11185 1258 0E4B     		ldr	r3, .L460+4
 11186 125a D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 11187 125c 0C49     		ldr	r1, .L460
 11188 125e 1346     		mov	r3, r2
 11189 1260 DB00     		lsls	r3, r3, #3
 11190 1262 9B1A     		subs	r3, r3, r2
 11191 1264 1B01     		lsls	r3, r3, #4
 11192 1266 0B44     		add	r3, r3, r1
 11193 1268 E233     		adds	r3, r3, #226
 11194 126a 0246     		mov	r2, r0
 11195 126c 1A70     		strb	r2, [r3]
1478:..\src/command_processing.c ****             MOTOR_DRIVER_TYPE_Write((g_mem.motor[1].motor_driver_type << 1) | g_mem.motor[0].motor_
 11196              		.loc 1 1478 0
 11197 126e 084B     		ldr	r3, .L460
 11198 1270 93F85231 		ldrb	r3, [r3, #338]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 253


 11199 1274 5B00     		lsls	r3, r3, #1
 11200 1276 5AB2     		sxtb	r2, r3
 11201 1278 054B     		ldr	r3, .L460
 11202 127a 93F8E230 		ldrb	r3, [r3, #226]	@ zero_extendqisi2
 11203 127e 5BB2     		sxtb	r3, r3
 11204 1280 1343     		orrs	r3, r3, r2
 11205 1282 5BB2     		sxtb	r3, r3
 11206 1284 DBB2     		uxtb	r3, r3
 11207 1286 1846     		mov	r0, r3
 11208 1288 FFF7FEFF 		bl	MOTOR_DRIVER_TYPE_Write
1479:..\src/command_processing.c ****             break;
 11209              		.loc 1 1479 0
 11210 128c BCE0     		b	.L387
 11211              	.L461:
 11212 128e 00BF     		.align	2
 11213              	.L460:
 11214 1290 00000000 		.word	g_mem
 11215 1294 00000000 		.word	g_rx
 11216 1298 00000000 		.word	g_meas
 11217 129c 00000000 		.word	reset_last_value_flag
 11218              	.L372:
1480:..\src/command_processing.c **** 
1481:..\src/command_processing.c ****         case 71:        // Device type
1482:..\src/command_processing.c ****             g_mem.dev.dev_type = g_rx.buffer[3];
 11219              		.loc 1 1482 0
 11220 12a0 5B4B     		ldr	r3, .L462
 11221 12a2 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 11222 12a4 5B4B     		ldr	r3, .L462+4
 11223 12a6 83F8AC20 		strb	r2, [r3, #172]
1483:..\src/command_processing.c ****             
1484:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    // change also gears parameters
 11224              		.loc 1 1484 0
 11225 12aa 5A4B     		ldr	r3, .L462+4
 11226 12ac 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 11227 12b0 002B     		cmp	r3, #0
 11228 12b2 40F0A880 		bne	.L449
1485:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 11229              		.loc 1 1485 0
 11230 12b6 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11231 12b8 5649     		ldr	r1, .L462+4
 11232 12ba 1346     		mov	r3, r2
 11233 12bc DB00     		lsls	r3, r3, #3
 11234 12be 9B1A     		subs	r3, r3, r2
 11235 12c0 1B01     		lsls	r3, r3, #4
 11236 12c2 0B44     		add	r3, r3, r1
 11237 12c4 03F58873 		add	r3, r3, #272
 11238 12c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11239 12ca 1946     		mov	r1, r3
 11240 12cc 514A     		ldr	r2, .L462+4
 11241 12ce 0B46     		mov	r3, r1
 11242 12d0 5B00     		lsls	r3, r3, #1
 11243 12d2 0B44     		add	r3, r3, r1
 11244 12d4 1B01     		lsls	r3, r3, #4
 11245 12d6 1344     		add	r3, r3, r2
 11246 12d8 03F5D873 		add	r3, r3, #432
 11247 12dc 0122     		movs	r2, #1
 11248 12de 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 254


1486:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 11249              		.loc 1 1486 0
 11250 12e0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11251 12e2 4C49     		ldr	r1, .L462+4
 11252 12e4 1346     		mov	r3, r2
 11253 12e6 DB00     		lsls	r3, r3, #3
 11254 12e8 9B1A     		subs	r3, r3, r2
 11255 12ea 1B01     		lsls	r3, r3, #4
 11256 12ec 0B44     		add	r3, r3, r1
 11257 12ee 03F58873 		add	r3, r3, #272
 11258 12f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11259 12f4 1946     		mov	r1, r3
 11260 12f6 474A     		ldr	r2, .L462+4
 11261 12f8 0B46     		mov	r3, r1
 11262 12fa 5B00     		lsls	r3, r3, #1
 11263 12fc 0B44     		add	r3, r3, r1
 11264 12fe 1B01     		lsls	r3, r3, #4
 11265 1300 1344     		add	r3, r3, r2
 11266 1302 03F2B513 		addw	r3, r3, #437
 11267 1306 2322     		movs	r2, #35
 11268 1308 1A70     		strb	r2, [r3]
1487:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 11269              		.loc 1 1487 0
 11270 130a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11271 130c 4149     		ldr	r1, .L462+4
 11272 130e 1346     		mov	r3, r2
 11273 1310 DB00     		lsls	r3, r3, #3
 11274 1312 9B1A     		subs	r3, r3, r2
 11275 1314 1B01     		lsls	r3, r3, #4
 11276 1316 0B44     		add	r3, r3, r1
 11277 1318 03F58873 		add	r3, r3, #272
 11278 131c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11279 131e 1946     		mov	r1, r3
 11280 1320 3C4A     		ldr	r2, .L462+4
 11281 1322 0B46     		mov	r3, r1
 11282 1324 5B00     		lsls	r3, r3, #1
 11283 1326 0B44     		add	r3, r3, r1
 11284 1328 1B01     		lsls	r3, r3, #4
 11285 132a 1344     		add	r3, r3, r2
 11286 132c 03F5DB73 		add	r3, r3, #438
 11287 1330 0322     		movs	r2, #3
 11288 1332 1A70     		strb	r2, [r3]
1488:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 11289              		.loc 1 1488 0
 11290 1334 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11291 1336 3749     		ldr	r1, .L462+4
 11292 1338 1346     		mov	r3, r2
 11293 133a DB00     		lsls	r3, r3, #3
 11294 133c 9B1A     		subs	r3, r3, r2
 11295 133e 1B01     		lsls	r3, r3, #4
 11296 1340 0B44     		add	r3, r3, r1
 11297 1342 03F58873 		add	r3, r3, #272
 11298 1346 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11299 1348 1946     		mov	r1, r3
 11300 134a 324A     		ldr	r2, .L462+4
 11301 134c 0B46     		mov	r3, r1
 11302 134e 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 255


 11303 1350 0B44     		add	r3, r3, r1
 11304 1352 1B01     		lsls	r3, r3, #4
 11305 1354 1344     		add	r3, r3, r2
 11306 1356 03F2B713 		addw	r3, r3, #439
 11307 135a FF22     		movs	r2, #255
 11308 135c 1A70     		strb	r2, [r3]
1489:..\src/command_processing.c ****                 
1490:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1491:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 11309              		.loc 1 1491 0
 11310 135e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11311 1360 2C4B     		ldr	r3, .L462+4
 11312 1362 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 11313 1366 2B49     		ldr	r1, .L462+4
 11314 1368 1346     		mov	r3, r2
 11315 136a DB00     		lsls	r3, r3, #3
 11316 136c 9B1A     		subs	r3, r3, r2
 11317 136e 1B01     		lsls	r3, r3, #4
 11318 1370 0B44     		add	r3, r3, r1
 11319 1372 03F58873 		add	r3, r3, #272
 11320 1376 0246     		mov	r2, r0
 11321 1378 1A70     		strb	r2, [r3]
1492:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 11322              		.loc 1 1492 0
 11323 137a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11324 137c 2549     		ldr	r1, .L462+4
 11325 137e 1346     		mov	r3, r2
 11326 1380 DB00     		lsls	r3, r3, #3
 11327 1382 9B1A     		subs	r3, r3, r2
 11328 1384 1B01     		lsls	r3, r3, #4
 11329 1386 0B44     		add	r3, r3, r1
 11330 1388 03F21113 		addw	r3, r3, #273
 11331 138c 0122     		movs	r2, #1
 11332 138e 1A70     		strb	r2, [r3]
1493:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 11333              		.loc 1 1493 0
 11334 1390 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11335 1392 2049     		ldr	r1, .L462+4
 11336 1394 1346     		mov	r3, r2
 11337 1396 DB00     		lsls	r3, r3, #3
 11338 1398 9B1A     		subs	r3, r3, r2
 11339 139a 1B01     		lsls	r3, r3, #4
 11340 139c 0B44     		add	r3, r3, r1
 11341 139e 03F58973 		add	r3, r3, #274
 11342 13a2 0122     		movs	r2, #1
 11343 13a4 1A70     		strb	r2, [r3]
1494:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 11344              		.loc 1 1494 0
 11345 13a6 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11346 13a8 1A49     		ldr	r1, .L462+4
 11347 13aa 1346     		mov	r3, r2
 11348 13ac DB00     		lsls	r3, r3, #3
 11349 13ae 9B1A     		subs	r3, r3, r2
 11350 13b0 1B01     		lsls	r3, r3, #4
 11351 13b2 0B44     		add	r3, r3, r1
 11352 13b4 E433     		adds	r3, r3, #228
 11353 13b6 0022     		movs	r2, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 256


 11354 13b8 1A60     		str	r2, [r3]
1495:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[0].encod
 11355              		.loc 1 1495 0
 11356 13ba 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11357 13bc 154B     		ldr	r3, .L462+4
 11358 13be 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 11359 13c2 1846     		mov	r0, r3
 11360 13c4 1349     		ldr	r1, .L462+4
 11361 13c6 0346     		mov	r3, r0
 11362 13c8 5B00     		lsls	r3, r3, #1
 11363 13ca 0344     		add	r3, r3, r0
 11364 13cc 1B01     		lsls	r3, r3, #4
 11365 13ce 0B44     		add	r3, r3, r1
 11366 13d0 03F29513 		addw	r3, r3, #405
 11367 13d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11368 13d6 1946     		mov	r1, r3
 11369 13d8 4FF47A53 		mov	r3, #16000
 11370 13dc 03FA01F1 		lsl	r1, r3, r1
 11371 13e0 0C48     		ldr	r0, .L462+4
 11372 13e2 1346     		mov	r3, r2
 11373 13e4 DB00     		lsls	r3, r3, #3
 11374 13e6 9B1A     		subs	r3, r3, r2
 11375 13e8 1B01     		lsls	r3, r3, #4
 11376 13ea 0344     		add	r3, r3, r0
 11377 13ec E833     		adds	r3, r3, #232
 11378 13ee 1960     		str	r1, [r3]
1496:..\src/command_processing.c ****             }        
1497:..\src/command_processing.c ****             break;
 11379              		.loc 1 1497 0
 11380 13f0 09E0     		b	.L449
 11381              	.L444:
1498:..\src/command_processing.c ****             
1499:..\src/command_processing.c ****         default:
1500:..\src/command_processing.c ****             break;
 11382              		.loc 1 1500 0
 11383 13f2 00BF     		nop
 11384 13f4 08E0     		b	.L387
 11385              	.L445:
1306:..\src/command_processing.c ****             
 11386              		.loc 1 1306 0
 11387 13f6 00BF     		nop
 11388 13f8 06E0     		b	.L387
 11389              	.L446:
1334:..\src/command_processing.c **** 
 11390              		.loc 1 1334 0
 11391 13fa 00BF     		nop
 11392 13fc 04E0     		b	.L387
 11393              	.L447:
1352:..\src/command_processing.c ****             
 11394              		.loc 1 1352 0
 11395 13fe 00BF     		nop
 11396 1400 02E0     		b	.L387
 11397              	.L448:
1362:..\src/command_processing.c ****            
 11398              		.loc 1 1362 0
 11399 1402 00BF     		nop
 11400 1404 00E0     		b	.L387
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 257


 11401              	.L449:
1497:..\src/command_processing.c ****             
 11402              		.loc 1 1497 0
 11403 1406 00BF     		nop
 11404              	.L387:
1501:..\src/command_processing.c ****     }
1502:..\src/command_processing.c **** }
 11405              		.loc 1 1502 0 discriminator 1
 11406 1408 00BF     		nop
 11407 140a 1C37     		adds	r7, r7, #28
 11408              		.cfi_def_cfa_offset 20
 11409 140c BD46     		mov	sp, r7
 11410              		.cfi_def_cfa_register 13
 11411              		@ sp needed
 11412 140e F0BD     		pop	{r4, r5, r6, r7, pc}
 11413              	.L463:
 11414              		.align	2
 11415              	.L462:
 11416 1410 00000000 		.word	g_rx
 11417 1414 00000000 		.word	g_mem
 11418              		.cfi_endproc
 11419              	.LFE69:
 11420              		.size	set_custom_param, .-set_custom_param
 11421              		.section	.rodata
 11422 0e0e 0000     		.align	2
 11423              	.LC125:
 11424 0e10 506F7274 		.ascii	"Port %u ID:\000"
 11424      20257520 
 11424      49443A00 
 11425              		.align	2
 11426              	.LC126:
 11427 0e1c 2575202D 		.ascii	"%u - Device ID:\000"
 11427      20446576 
 11427      69636520 
 11427      49443A00 
 11428              		.align	2
 11429              	.LC127:
 11430 0e2c 2575202D 		.ascii	"%u - IMU %d configuration:\000"
 11430      20494D55 
 11430      20256420 
 11430      636F6E66 
 11430      69677572 
 11431 0e47 00       		.align	2
 11432              	.LC128:
 11433 0e48 2575202D 		.ascii	"%u - SPI read delay:\000"
 11433      20535049 
 11433      20726561 
 11433      64206465 
 11433      6C61793A 
 11434 0e5d 000000   		.align	2
 11435              	.LC129:
 11436 0e60 204E6F6E 		.ascii	" None\000"
 11436      6500
 11437 0e66 0000     		.align	2
 11438              	.LC130:
 11439 0e68 204C6F77 		.ascii	" Low\000"
 11439      00
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 258


 11440 0e6d 000000   		.align	2
 11441              	.LC131:
 11442 0e70 20486967 		.ascii	" High\000"
 11442      6800
 11443 0e76 0000     		.align	2
 11444              	.LC123:
 11445 0e78 4E756D62 		.ascii	"Number of connected IMUs:\000"
 11445      6572206F 
 11445      6620636F 
 11445      6E6E6563 
 11445      74656420 
 11446 0e92 0000     		.align	2
 11447              	.LC124:
 11448 0e94 4D616720 		.ascii	"Mag cal parameters:\000"
 11448      63616C20 
 11448      70617261 
 11448      6D657465 
 11448      72733A00 
 11449              		.section	.text.get_IMU_param_list,"ax",%progbits
 11450              		.align	2
 11451              		.global	get_IMU_param_list
 11452              		.thumb
 11453              		.thumb_func
 11454              		.type	get_IMU_param_list, %function
 11455              	get_IMU_param_list:
 11456              	.LFB70:
1503:..\src/command_processing.c **** 
1504:..\src/command_processing.c **** //==============================================================================
1505:..\src/command_processing.c **** //                                                        GET IMU PARAMETER LIST
1506:..\src/command_processing.c **** //==============================================================================
1507:..\src/command_processing.c **** 
1508:..\src/command_processing.c **** void get_IMU_param_list(uint16 index)
1509:..\src/command_processing.c **** {
 11457              		.loc 1 1509 0
 11458              		.cfi_startproc
 11459              		@ args = 0, pretend = 0, frame = 1704
 11460              		@ frame_needed = 1, uses_anonymous_args = 0
 11461 0000 B0B5     		push	{r4, r5, r7, lr}
 11462              		.cfi_def_cfa_offset 16
 11463              		.cfi_offset 4, -16
 11464              		.cfi_offset 5, -12
 11465              		.cfi_offset 7, -8
 11466              		.cfi_offset 14, -4
 11467 0002 ADF5D56D 		sub	sp, sp, #1704
 11468              		.cfi_def_cfa_offset 1720
 11469 0006 00AF     		add	r7, sp, #0
 11470              		.cfi_def_cfa_register 7
 11471 0008 0246     		mov	r2, r0
 11472 000a BB1D     		adds	r3, r7, #6
 11473 000c 1A80     		strh	r2, [r3]	@ movhi
1510:..\src/command_processing.c ****     //Package to be sent variables
1511:..\src/command_processing.c ****     uint8 packet_data[  PARAM_BYTE_SLOT   +     // Number of connected IMUs
 11474              		.loc 1 1511 0
 11475 000e 07F58A73 		add	r3, r7, #276
 11476 0012 0022     		movs	r2, #0
 11477 0014 1A60     		str	r2, [r3]
 11478 0016 0433     		adds	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 259


 11479 0018 40F27552 		movw	r2, #1397
 11480 001c 0021     		movs	r1, #0
 11481 001e 1846     		mov	r0, r3
 11482 0020 FFF7FEFF 		bl	memset
1512:..\src/command_processing.c ****                         7*PARAM_BYTE_SLOT +     // IMUs ID  (1 port instead of 7)
1513:..\src/command_processing.c ****                         9*PARAM_BYTE_SLOT +     // Mag cal parameters (1 row instead of 9)
1514:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // 1 - Device ID
1515:..\src/command_processing.c ****                         PARAM_BYTE_SLOT*N_IMU_MAX + // IMU configurations
1516:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // SPI read delay
1517:..\src/command_processing.c ****                         PARAM_MENU_SLOT   + PARAM_BYTE_SLOT + 1 ] = "";
1518:..\src/command_processing.c ****     uint16 num_imus_id_params = 7;      //(1 port instead of 7)
 11483              		.loc 1 1518 0
 11484 0024 0723     		movs	r3, #7
 11485 0026 A7F89A36 		strh	r3, [r7, #1690]	@ movhi
1519:..\src/command_processing.c ****     uint16 num_mag_cal_params = 0;
 11486              		.loc 1 1519 0
 11487 002a 0023     		movs	r3, #0
 11488 002c A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1520:..\src/command_processing.c ****     uint16 first_imu_parameter = 2;
 11489              		.loc 1 1520 0
 11490 0030 0223     		movs	r3, #2
 11491 0032 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1521:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 11492              		.loc 1 1521 0
 11493 0036 B7F89A36 		ldrh	r3, [r7, #1690]
 11494 003a 5A1C     		adds	r2, r3, #1
1522:..\src/command_processing.c ****                            num_imus_id_params*PARAM_BYTE_SLOT +
 11495              		.loc 1 1522 0
 11496 003c B7F8A636 		ldrh	r3, [r7, #1702]
 11497 0040 1344     		add	r3, r3, r2
1523:..\src/command_processing.c ****                            num_mag_cal_params*PARAM_BYTE_SLOT +
 11498              		.loc 1 1523 0
 11499 0042 0133     		adds	r3, r3, #1
1521:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 11500              		.loc 1 1521 0
 11501 0044 9AB2     		uxth	r2, r3
 11502 0046 D24B     		ldr	r3, .L510
 11503 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11504 004a 9BB2     		uxth	r3, r3
 11505 004c 1344     		add	r3, r3, r2
 11506 004e 9BB2     		uxth	r3, r3
 11507 0050 1A46     		mov	r2, r3	@ movhi
 11508 0052 9200     		lsls	r2, r2, #2
 11509 0054 1344     		add	r3, r3, r2
 11510 0056 1A46     		mov	r2, r3	@ movhi
 11511 0058 9100     		lsls	r1, r2, #2
 11512 005a 1A46     		mov	r2, r3	@ movhi
 11513 005c 0B46     		mov	r3, r1	@ movhi
 11514 005e 1344     		add	r3, r3, r2
 11515 0060 5B00     		lsls	r3, r3, #1
 11516 0062 9BB2     		uxth	r3, r3
 11517 0064 FB33     		adds	r3, r3, #251
 11518 0066 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1524:..\src/command_processing.c ****                            PARAM_BYTE_SLOT   + 
1525:..\src/command_processing.c ****                            (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1526:..\src/command_processing.c ****                            PARAM_BYTE_SLOT + PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1527:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 260


1528:..\src/command_processing.c ****     //Auxiliary variables
1529:..\src/command_processing.c ****     uint16 CYDATA i, j, k, h;
1530:..\src/command_processing.c ****     uint16 start_byte = 0;
 11519              		.loc 1 1530 0
 11520 006a 0023     		movs	r3, #0
 11521 006c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1531:..\src/command_processing.c **** 
1532:..\src/command_processing.c ****     //Parameters menu string definitions
1533:..\src/command_processing.c ****     char n_imu_str[26]          = "Number of connected IMUs:";
 11522              		.loc 1 1533 0
 11523 0070 07F1F803 		add	r3, r7, #248
 11524 0074 C74A     		ldr	r2, .L510+4
 11525 0076 1C46     		mov	r4, r3
 11526 0078 1546     		mov	r5, r2
 11527 007a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 11528 007c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 11529 007e 95E80700 		ldmia	r5, {r0, r1, r2}
 11530 0082 03C4     		stmia	r4!, {r0, r1}
 11531 0084 2280     		strh	r2, [r4]	@ movhi
1534:..\src/command_processing.c ****     char ids_str[11]            = "";
 11532              		.loc 1 1534 0
 11533 0086 07F1EC03 		add	r3, r7, #236
 11534 008a 0022     		movs	r2, #0
 11535 008c 1A60     		str	r2, [r3]
 11536 008e 0433     		adds	r3, r3, #4
 11537 0090 0022     		movs	r2, #0
 11538 0092 1A60     		str	r2, [r3]
 11539 0094 C3F80320 		str	r2, [r3, #3]	@ unaligned
1535:..\src/command_processing.c ****     char mag_param_str[20]      = "Mag cal parameters:";
 11540              		.loc 1 1535 0
 11541 0098 07F1D803 		add	r3, r7, #216
 11542 009c BE4A     		ldr	r2, .L510+8
 11543 009e 1C46     		mov	r4, r3
 11544 00a0 1546     		mov	r5, r2
 11545 00a2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 11546 00a4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 11547 00a6 2B68     		ldr	r3, [r5]
 11548 00a8 2360     		str	r3, [r4]
1536:..\src/command_processing.c ****     char id_str[16]             = "";
 11549              		.loc 1 1536 0
 11550 00aa 07F1C803 		add	r3, r7, #200
 11551 00ae 0022     		movs	r2, #0
 11552 00b0 1A60     		str	r2, [r3]
 11553 00b2 0433     		adds	r3, r3, #4
 11554 00b4 0022     		movs	r2, #0
 11555 00b6 1A60     		str	r2, [r3]
 11556 00b8 5A60     		str	r2, [r3, #4]
 11557 00ba 9A60     		str	r2, [r3, #8]
1537:..\src/command_processing.c ****     char imu_table_str[42]      = "";
 11558              		.loc 1 1537 0
 11559 00bc 07F19C03 		add	r3, r7, #156
 11560 00c0 0022     		movs	r2, #0
 11561 00c2 1A60     		str	r2, [r3]
 11562 00c4 0433     		adds	r3, r3, #4
 11563 00c6 2622     		movs	r2, #38
 11564 00c8 0021     		movs	r1, #0
 11565 00ca 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 261


 11566 00cc FFF7FEFF 		bl	memset
1538:..\src/command_processing.c ****     char spi_read_delay_str[26] = "";
 11567              		.loc 1 1538 0
 11568 00d0 07F18003 		add	r3, r7, #128
 11569 00d4 0022     		movs	r2, #0
 11570 00d6 1A60     		str	r2, [r3]
 11571 00d8 0433     		adds	r3, r3, #4
 11572 00da 0022     		movs	r2, #0
 11573 00dc 1A60     		str	r2, [r3]
 11574 00de 5A60     		str	r2, [r3, #4]
 11575 00e0 9A60     		str	r2, [r3, #8]
 11576 00e2 DA60     		str	r2, [r3, #12]
 11577 00e4 1A61     		str	r2, [r3, #16]
 11578 00e6 9A82     		strh	r2, [r3, #20]	@ movhi
1539:..\src/command_processing.c ****     
1540:..\src/command_processing.c ****     //Strings lenghts
1541:..\src/command_processing.c ****     uint8 CYDATA id_str_len = strlen(id_str);
 11579              		.loc 1 1541 0
 11580 00e8 07F1C803 		add	r3, r7, #200
 11581 00ec 1846     		mov	r0, r3
 11582 00ee FFF7FEFF 		bl	strlen
 11583 00f2 0346     		mov	r3, r0
 11584 00f4 87F89336 		strb	r3, [r7, #1683]
1542:..\src/command_processing.c ****     uint8 CYDATA n_imu_str_len = strlen(n_imu_str);
 11585              		.loc 1 1542 0
 11586 00f8 07F1F803 		add	r3, r7, #248
 11587 00fc 1846     		mov	r0, r3
 11588 00fe FFF7FEFF 		bl	strlen
 11589 0102 0346     		mov	r3, r0
 11590 0104 87F89236 		strb	r3, [r7, #1682]
1543:..\src/command_processing.c ****     uint8 CYDATA ids_str_len = strlen(ids_str);
 11591              		.loc 1 1543 0
 11592 0108 07F1EC03 		add	r3, r7, #236
 11593 010c 1846     		mov	r0, r3
 11594 010e FFF7FEFF 		bl	strlen
 11595 0112 0346     		mov	r3, r0
 11596 0114 87F89136 		strb	r3, [r7, #1681]
1544:..\src/command_processing.c ****     uint8 CYDATA mag_param_str_len = strlen(mag_param_str);
 11597              		.loc 1 1544 0
 11598 0118 07F1D803 		add	r3, r7, #216
 11599 011c 1846     		mov	r0, r3
 11600 011e FFF7FEFF 		bl	strlen
 11601 0122 0346     		mov	r3, r0
 11602 0124 87F89036 		strb	r3, [r7, #1680]
1545:..\src/command_processing.c ****     uint8 CYDATA imu_table_str_len = strlen(imu_table_str);
 11603              		.loc 1 1545 0
 11604 0128 07F19C03 		add	r3, r7, #156
 11605 012c 1846     		mov	r0, r3
 11606 012e FFF7FEFF 		bl	strlen
 11607 0132 0346     		mov	r3, r0
 11608 0134 87F88F36 		strb	r3, [r7, #1679]
1546:..\src/command_processing.c ****     uint8 CYDATA spi_read_delay_str_len = strlen(spi_read_delay_str);
 11609              		.loc 1 1546 0
 11610 0138 07F18003 		add	r3, r7, #128
 11611 013c 1846     		mov	r0, r3
 11612 013e FFF7FEFF 		bl	strlen
 11613 0142 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 262


 11614 0144 87F89D36 		strb	r3, [r7, #1693]
1547:..\src/command_processing.c ****     
1548:..\src/command_processing.c ****     char spi_delay_menu[118]    = "";
 11615              		.loc 1 1548 0
 11616 0148 07F10803 		add	r3, r7, #8
 11617 014c 0022     		movs	r2, #0
 11618 014e 1A60     		str	r2, [r3]
 11619 0150 0433     		adds	r3, r3, #4
 11620 0152 7222     		movs	r2, #114
 11621 0154 0021     		movs	r1, #0
 11622 0156 1846     		mov	r0, r3
 11623 0158 FFF7FEFF 		bl	memset
1549:..\src/command_processing.c ****     uint8 CYDATA spi_delay_menu_len;
1550:..\src/command_processing.c ****  
1551:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 11624              		.loc 1 1551 0
 11625 015c 07F10800 		add	r0, r7, #8
 11626 0160 6423     		movs	r3, #100
 11627 0162 0A22     		movs	r2, #10
 11628 0164 8D49     		ldr	r1, .L510+12
 11629 0166 FFF7FEFF 		bl	sprintf
1552:..\src/command_processing.c ****     spi_delay_menu_len = strlen(spi_delay_menu);
 11630              		.loc 1 1552 0
 11631 016a 07F10803 		add	r3, r7, #8
 11632 016e 1846     		mov	r0, r3
 11633 0170 FFF7FEFF 		bl	strlen
 11634 0174 0346     		mov	r3, r0
 11635 0176 87F88E36 		strb	r3, [r7, #1678]
1553:..\src/command_processing.c **** 
1554:..\src/command_processing.c ****     // Compute number of read parameters depending on N_IMU_Connected and
1555:..\src/command_processing.c ****     // update packet_length
1556:..\src/command_processing.c ****     num_mag_cal_params = (uint16)(N_IMU_Connected / 2);
 11636              		.loc 1 1556 0
 11637 017a 854B     		ldr	r3, .L510
 11638 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11639 017e 5B08     		lsrs	r3, r3, #1
 11640 0180 DBB2     		uxtb	r3, r3
 11641 0182 A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1557:..\src/command_processing.c ****     if ( (N_IMU_Connected - num_mag_cal_params*2) > 0 ) num_mag_cal_params++;
 11642              		.loc 1 1557 0
 11643 0186 824B     		ldr	r3, .L510
 11644 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11645 018a 1A46     		mov	r2, r3
 11646 018c B7F8A636 		ldrh	r3, [r7, #1702]
 11647 0190 5B00     		lsls	r3, r3, #1
 11648 0192 D31A     		subs	r3, r2, r3
 11649 0194 002B     		cmp	r3, #0
 11650 0196 04DD     		ble	.L465
 11651              		.loc 1 1557 0 is_stmt 0 discriminator 1
 11652 0198 B7F8A636 		ldrh	r3, [r7, #1702]
 11653 019c 0133     		adds	r3, r3, #1
 11654 019e A7F8A636 		strh	r3, [r7, #1702]	@ movhi
 11655              	.L465:
1558:..\src/command_processing.c ****     
1559:..\src/command_processing.c ****     packet_length = PARAM_BYTE_SLOT +
 11656              		.loc 1 1559 0 is_stmt 1
 11657 01a2 B7F89A36 		ldrh	r3, [r7, #1690]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 263


 11658 01a6 5A1C     		adds	r2, r3, #1
1560:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 11659              		.loc 1 1560 0
 11660 01a8 B7F8A636 		ldrh	r3, [r7, #1702]
 11661 01ac 1344     		add	r3, r3, r2
1561:..\src/command_processing.c ****                     num_mag_cal_params*PARAM_BYTE_SLOT +
 11662              		.loc 1 1561 0
 11663 01ae 0133     		adds	r3, r3, #1
1559:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 11664              		.loc 1 1559 0
 11665 01b0 9AB2     		uxth	r2, r3
 11666 01b2 774B     		ldr	r3, .L510
 11667 01b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11668 01b6 9BB2     		uxth	r3, r3
 11669 01b8 1344     		add	r3, r3, r2
 11670 01ba 9BB2     		uxth	r3, r3
 11671 01bc 1A46     		mov	r2, r3	@ movhi
 11672 01be 9200     		lsls	r2, r2, #2
 11673 01c0 1344     		add	r3, r3, r2
 11674 01c2 1A46     		mov	r2, r3	@ movhi
 11675 01c4 9100     		lsls	r1, r2, #2
 11676 01c6 1A46     		mov	r2, r3	@ movhi
 11677 01c8 0B46     		mov	r3, r1	@ movhi
 11678 01ca 1344     		add	r3, r3, r2
 11679 01cc 5B00     		lsls	r3, r3, #1
 11680 01ce 9BB2     		uxth	r3, r3
 11681 01d0 C933     		adds	r3, r3, #201
 11682 01d2 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1562:..\src/command_processing.c ****                     PARAM_BYTE_SLOT   + 
1563:..\src/command_processing.c ****                     (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1564:..\src/command_processing.c ****                     PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1565:..\src/command_processing.c **** 
1566:..\src/command_processing.c ****     first_imu_parameter = 1 + num_imus_id_params + num_mag_cal_params + 2;
 11683              		.loc 1 1566 0
 11684 01d6 B7F89A26 		ldrh	r2, [r7, #1690]	@ movhi
 11685 01da B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 11686 01de 1344     		add	r3, r3, r2
 11687 01e0 9BB2     		uxth	r3, r3
 11688 01e2 0333     		adds	r3, r3, #3
 11689 01e4 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1567:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_PARAM;
 11690              		.loc 1 1567 0
 11691 01e8 07F58A73 		add	r3, r7, #276
 11692 01ec A222     		movs	r2, #162
 11693 01ee 1A70     		strb	r2, [r3]
1568:..\src/command_processing.c ****     packet_data[1] = 1 + num_imus_id_params + num_mag_cal_params + 1 + (uint8)N_IMU_Connected + 1; 
 11694              		.loc 1 1568 0
 11695 01f0 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 11696 01f4 DAB2     		uxtb	r2, r3
 11697 01f6 B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 11698 01fa DBB2     		uxtb	r3, r3
 11699 01fc 1344     		add	r3, r3, r2
 11700 01fe DAB2     		uxtb	r2, r3
 11701 0200 634B     		ldr	r3, .L510
 11702 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11703 0204 1344     		add	r3, r3, r2
 11704 0206 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 264


 11705 0208 0333     		adds	r3, r3, #3
 11706 020a DAB2     		uxtb	r2, r3
 11707 020c 07F58A73 		add	r3, r7, #276
 11708 0210 5A70     		strb	r2, [r3, #1]
1569:..\src/command_processing.c **** 
1570:..\src/command_processing.c ****     switch(index) {
 11709              		.loc 1 1570 0
 11710 0212 BB1D     		adds	r3, r7, #6
 11711 0214 1B88     		ldrh	r3, [r3]
 11712 0216 002B     		cmp	r3, #0
 11713 0218 40F0D084 		bne	.L508
1571:..\src/command_processing.c ****         case 0:         //List of all parameters with relative types
1572:..\src/command_processing.c ****             /*-------------N IMU--------------*/
1573:..\src/command_processing.c ****             start_byte = 0;
 11714              		.loc 1 1573 0
 11715 021c 0023     		movs	r3, #0
 11716 021e A7F89436 		strh	r3, [r7, #1684]	@ movhi
1574:..\src/command_processing.c ****             packet_data[2] = TYPE_UINT8;
 11717              		.loc 1 1574 0
 11718 0222 07F58A73 		add	r3, r7, #276
 11719 0226 0222     		movs	r2, #2
 11720 0228 9A70     		strb	r2, [r3, #2]
1575:..\src/command_processing.c ****             packet_data[3] = 1;
 11721              		.loc 1 1575 0
 11722 022a 07F58A73 		add	r3, r7, #276
 11723 022e 0122     		movs	r2, #1
 11724 0230 DA70     		strb	r2, [r3, #3]
1576:..\src/command_processing.c ****             packet_data[4] = (uint8)N_IMU_Connected;
 11725              		.loc 1 1576 0
 11726 0232 574B     		ldr	r3, .L510
 11727 0234 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 11728 0236 07F58A73 		add	r3, r7, #276
 11729 023a 1A71     		strb	r2, [r3, #4]
1577:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 11730              		.loc 1 1577 0
 11731 023c 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 11732 0240 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11733 0244 15E0     		b	.L468
 11734              	.L469:
1578:..\src/command_processing.c ****                 packet_data[5 + n_imu_str_len - i] = n_imu_str[n_imu_str_len - i];
 11735              		.loc 1 1578 0 discriminator 3
 11736 0246 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 11737 024a 5A1D     		adds	r2, r3, #5
 11738 024c B7F8A436 		ldrh	r3, [r7, #1700]
 11739 0250 D31A     		subs	r3, r2, r3
 11740 0252 97F89216 		ldrb	r1, [r7, #1682]	@ zero_extendqisi2
 11741 0256 B7F8A426 		ldrh	r2, [r7, #1700]
 11742 025a 8A1A     		subs	r2, r1, r2
 11743 025c 07F1F801 		add	r1, r7, #248
 11744 0260 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 11745 0262 07F58A72 		add	r2, r7, #276
 11746 0266 D154     		strb	r1, [r2, r3]
1577:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 11747              		.loc 1 1577 0 discriminator 3
 11748 0268 B7F8A436 		ldrh	r3, [r7, #1700]
 11749 026c 013B     		subs	r3, r3, #1
 11750 026e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 265


 11751              	.L468:
1577:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 11752              		.loc 1 1577 0 is_stmt 0 discriminator 1
 11753 0272 B7F8A436 		ldrh	r3, [r7, #1700]
 11754 0276 002B     		cmp	r3, #0
 11755 0278 E5D1     		bne	.L469
1579:..\src/command_processing.c ****                 
1580:..\src/command_processing.c ****             /*-------------IMUS ID--------------*/
1581:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 11756              		.loc 1 1581 0 is_stmt 1
 11757 027a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11758 027e 3233     		adds	r3, r3, #50
 11759 0280 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1582:..\src/command_processing.c ****             i = 0;
 11760              		.loc 1 1582 0
 11761 0284 0023     		movs	r3, #0
 11762 0286 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
1583:..\src/command_processing.c ****             for (k = 0; k < num_imus_id_params; k++){
 11763              		.loc 1 1583 0
 11764 028a 0023     		movs	r3, #0
 11765 028c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 11766 0290 B2E0     		b	.L470
 11767              	.L477:
1584:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 11768              		.loc 1 1584 0
 11769 0292 B7F8A026 		ldrh	r2, [r7, #1696]
 11770 0296 07F1EC03 		add	r3, r7, #236
 11771 029a 4149     		ldr	r1, .L510+16
 11772 029c 1846     		mov	r0, r3
 11773 029e FFF7FEFF 		bl	sprintf
1585:..\src/command_processing.c ****                 h = 4;
 11774              		.loc 1 1585 0
 11775 02a2 0423     		movs	r3, #4
 11776 02a4 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1586:..\src/command_processing.c ****                 ids_str_len = strlen(ids_str);
 11777              		.loc 1 1586 0
 11778 02a8 07F1EC03 		add	r3, r7, #236
 11779 02ac 1846     		mov	r0, r3
 11780 02ae FFF7FEFF 		bl	strlen
 11781 02b2 0346     		mov	r3, r0
 11782 02b4 87F89136 		strb	r3, [r7, #1681]
1587:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 11783              		.loc 1 1587 0
 11784 02b8 B7F89436 		ldrh	r3, [r7, #1684]
 11785 02bc 9A1C     		adds	r2, r3, #2
 11786 02be B7F8A036 		ldrh	r3, [r7, #1696]
 11787 02c2 3221     		movs	r1, #50
 11788 02c4 01FB03F3 		mul	r3, r1, r3
 11789 02c8 1344     		add	r3, r3, r2
 11790 02ca 07F58A72 		add	r2, r7, #276
 11791 02ce 0221     		movs	r1, #2
 11792 02d0 D154     		strb	r1, [r2, r3]
1588:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 11793              		.loc 1 1588 0
 11794 02d2 B7F89436 		ldrh	r3, [r7, #1684]
 11795 02d6 DA1C     		adds	r2, r3, #3
 11796 02d8 B7F8A036 		ldrh	r3, [r7, #1696]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 266


 11797 02dc 3221     		movs	r1, #50
 11798 02de 01FB03F3 		mul	r3, r1, r3
 11799 02e2 1344     		add	r3, r3, r2
 11800 02e4 07F58A72 		add	r2, r7, #276
 11801 02e8 0321     		movs	r1, #3
 11802 02ea D154     		strb	r1, [r2, r3]
1589:..\src/command_processing.c ****                 
1590:..\src/command_processing.c ****                 for (j = 3*k; j <= 3*k+2; j++) {  // for each possible imu on port k
 11803              		.loc 1 1590 0
 11804 02ec B7F8A036 		ldrh	r3, [r7, #1696]	@ movhi
 11805 02f0 1A46     		mov	r2, r3	@ movhi
 11806 02f2 5200     		lsls	r2, r2, #1
 11807 02f4 1344     		add	r3, r3, r2
 11808 02f6 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11809 02fa 39E0     		b	.L471
 11810              	.L474:
1591:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 11811              		.loc 1 1591 0
 11812 02fc B7F8A436 		ldrh	r3, [r7, #1700]
 11813 0300 284A     		ldr	r2, .L510+20
 11814 0302 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11815 0304 9BB2     		uxth	r3, r3
 11816 0306 B7F8A226 		ldrh	r2, [r7, #1698]
 11817 030a 9A42     		cmp	r2, r3
 11818 030c 17D1     		bne	.L472
1592:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = (uint8)IMU_connected[i];   
 11819              		.loc 1 1592 0
 11820 030e B7F89E26 		ldrh	r2, [r7, #1694]
 11821 0312 B7F89436 		ldrh	r3, [r7, #1684]
 11822 0316 1A44     		add	r2, r2, r3
 11823 0318 B7F8A036 		ldrh	r3, [r7, #1696]
 11824 031c 3221     		movs	r1, #50
 11825 031e 01FB03F3 		mul	r3, r1, r3
 11826 0322 1344     		add	r3, r3, r2
 11827 0324 B7F8A426 		ldrh	r2, [r7, #1700]
 11828 0328 1E49     		ldr	r1, .L510+20
 11829 032a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 11830 032c 07F58A72 		add	r2, r7, #276
 11831 0330 D154     		strb	r1, [r2, r3]
1593:..\src/command_processing.c ****                         i++;
 11832              		.loc 1 1593 0
 11833 0332 B7F8A436 		ldrh	r3, [r7, #1700]
 11834 0336 0133     		adds	r3, r3, #1
 11835 0338 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11836 033c 0EE0     		b	.L473
 11837              	.L472:
1594:..\src/command_processing.c ****                     } 
1595:..\src/command_processing.c ****                     else {
1596:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = 255;
 11838              		.loc 1 1596 0
 11839 033e B7F89E26 		ldrh	r2, [r7, #1694]
 11840 0342 B7F89436 		ldrh	r3, [r7, #1684]
 11841 0346 1A44     		add	r2, r2, r3
 11842 0348 B7F8A036 		ldrh	r3, [r7, #1696]
 11843 034c 3221     		movs	r1, #50
 11844 034e 01FB03F3 		mul	r3, r1, r3
 11845 0352 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 267


 11846 0354 07F58A72 		add	r2, r7, #276
 11847 0358 FF21     		movs	r1, #255
 11848 035a D154     		strb	r1, [r2, r3]
 11849              	.L473:
1597:..\src/command_processing.c ****                     }
1598:..\src/command_processing.c ****                     h++;
 11850              		.loc 1 1598 0 discriminator 2
 11851 035c B7F89E36 		ldrh	r3, [r7, #1694]
 11852 0360 0133     		adds	r3, r3, #1
 11853 0362 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1590:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 11854              		.loc 1 1590 0 discriminator 2
 11855 0366 B7F8A236 		ldrh	r3, [r7, #1698]
 11856 036a 0133     		adds	r3, r3, #1
 11857 036c A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11858              	.L471:
1590:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 11859              		.loc 1 1590 0 is_stmt 0 discriminator 1
 11860 0370 B7F8A216 		ldrh	r1, [r7, #1698]
 11861 0374 B7F8A026 		ldrh	r2, [r7, #1696]
 11862 0378 1346     		mov	r3, r2
 11863 037a 5B00     		lsls	r3, r3, #1
 11864 037c 1344     		add	r3, r3, r2
 11865 037e 0233     		adds	r3, r3, #2
 11866 0380 9942     		cmp	r1, r3
 11867 0382 BBDD     		ble	.L474
1599:..\src/command_processing.c ****                 }
1600:..\src/command_processing.c **** 
1601:..\src/command_processing.c ****                 //if (IMU_connected[i] >= 3*k && IMU_connected[i] <= 3*k + 2)
1602:..\src/command_processing.c ****                 for(j = ids_str_len; j != 0; j--)
 11868              		.loc 1 1602 0 is_stmt 1
 11869 0384 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 11870 0388 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11871 038c 2BE0     		b	.L475
 11872              	.L511:
 11873 038e 00BF     		.align	2
 11874              	.L510:
 11875 0390 00000000 		.word	N_IMU_Connected
 11876 0394 780E0000 		.word	.LC123
 11877 0398 940E0000 		.word	.LC124
 11878 039c B0010000 		.word	.LC113
 11879 03a0 100E0000 		.word	.LC125
 11880 03a4 00000000 		.word	IMU_connected
 11881              	.L476:
1603:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 11882              		.loc 1 1603 0 discriminator 3
 11883 03a8 B7F89436 		ldrh	r3, [r7, #1684]
 11884 03ac DA1D     		adds	r2, r3, #7
 11885 03ae B7F8A036 		ldrh	r3, [r7, #1696]
 11886 03b2 3221     		movs	r1, #50
 11887 03b4 01FB03F3 		mul	r3, r1, r3
 11888 03b8 1A44     		add	r2, r2, r3
 11889 03ba 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 11890 03be 1A44     		add	r2, r2, r3
 11891 03c0 B7F8A236 		ldrh	r3, [r7, #1698]
 11892 03c4 D31A     		subs	r3, r2, r3
 11893 03c6 97F89116 		ldrb	r1, [r7, #1681]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 268


 11894 03ca B7F8A226 		ldrh	r2, [r7, #1698]
 11895 03ce 8A1A     		subs	r2, r1, r2
 11896 03d0 07F1EC01 		add	r1, r7, #236
 11897 03d4 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 11898 03d6 07F58A72 		add	r2, r7, #276
 11899 03da D154     		strb	r1, [r2, r3]
1602:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 11900              		.loc 1 1602 0 discriminator 3
 11901 03dc B7F8A236 		ldrh	r3, [r7, #1698]
 11902 03e0 013B     		subs	r3, r3, #1
 11903 03e2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11904              	.L475:
1602:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 11905              		.loc 1 1602 0 is_stmt 0 discriminator 1
 11906 03e6 B7F8A236 		ldrh	r3, [r7, #1698]
 11907 03ea 002B     		cmp	r3, #0
 11908 03ec DCD1     		bne	.L476
1583:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 11909              		.loc 1 1583 0 is_stmt 1 discriminator 2
 11910 03ee B7F8A036 		ldrh	r3, [r7, #1696]
 11911 03f2 0133     		adds	r3, r3, #1
 11912 03f4 A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 11913              	.L470:
1583:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 11914              		.loc 1 1583 0 is_stmt 0 discriminator 1
 11915 03f8 B7F8A026 		ldrh	r2, [r7, #1696]
 11916 03fc B7F89A36 		ldrh	r3, [r7, #1690]
 11917 0400 9A42     		cmp	r2, r3
 11918 0402 FFF446AF 		bcc	.L477
1604:..\src/command_processing.c ****             }
1605:..\src/command_processing.c ****             
1606:..\src/command_processing.c ****             /*-------------GET MAG PARAM--------------*/
1607:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_imus_id_params;
 11919              		.loc 1 1607 0 is_stmt 1
 11920 0406 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 11921 040a 1A46     		mov	r2, r3	@ movhi
 11922 040c 9200     		lsls	r2, r2, #2
 11923 040e 1344     		add	r3, r3, r2
 11924 0410 1A46     		mov	r2, r3	@ movhi
 11925 0412 9100     		lsls	r1, r2, #2
 11926 0414 1A46     		mov	r2, r3	@ movhi
 11927 0416 0B46     		mov	r3, r1	@ movhi
 11928 0418 1344     		add	r3, r3, r2
 11929 041a 5B00     		lsls	r3, r3, #1
 11930 041c 9AB2     		uxth	r2, r3
 11931 041e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11932 0422 1344     		add	r3, r3, r2
 11933 0424 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1608:..\src/command_processing.c ****             for (k = 0; k < num_mag_cal_params; k++){
 11934              		.loc 1 1608 0
 11935 0428 0023     		movs	r3, #0
 11936 042a A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 11937 042e 1FE1     		b	.L478
 11938              	.L485:
1609:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 11939              		.loc 1 1609 0
 11940 0430 B7F89436 		ldrh	r3, [r7, #1684]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 269


 11941 0434 9A1C     		adds	r2, r3, #2
 11942 0436 B7F8A036 		ldrh	r3, [r7, #1696]
 11943 043a 3221     		movs	r1, #50
 11944 043c 01FB03F3 		mul	r3, r1, r3
 11945 0440 1344     		add	r3, r3, r2
 11946 0442 07F58A72 		add	r2, r7, #276
 11947 0446 0221     		movs	r1, #2
 11948 0448 D154     		strb	r1, [r2, r3]
1610:..\src/command_processing.c ****                 
1611:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 11949              		.loc 1 1611 0
 11950 044a B7F89436 		ldrh	r3, [r7, #1684]
 11951 044e DA1C     		adds	r2, r3, #3
 11952 0450 B7F8A036 		ldrh	r3, [r7, #1696]
 11953 0454 3221     		movs	r1, #50
 11954 0456 01FB03F3 		mul	r3, r1, r3
 11955 045a 1344     		add	r3, r3, r2
 11956 045c 07F58A72 		add	r2, r7, #276
 11957 0460 0321     		movs	r1, #3
 11958 0462 D154     		strb	r1, [r2, r3]
1612:..\src/command_processing.c ****                 packet_data[4+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 11959              		.loc 1 1612 0
 11960 0464 B7F89436 		ldrh	r3, [r7, #1684]
 11961 0468 1A1D     		adds	r2, r3, #4
 11962 046a B7F8A036 		ldrh	r3, [r7, #1696]
 11963 046e 3221     		movs	r1, #50
 11964 0470 01FB03F3 		mul	r3, r1, r3
 11965 0474 1A44     		add	r2, r2, r3
 11966 0476 B7F8A036 		ldrh	r3, [r7, #1696]
 11967 047a 5B00     		lsls	r3, r3, #1
 11968 047c B249     		ldr	r1, .L512
 11969 047e CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11970 0480 1846     		mov	r0, r3
 11971 0482 B249     		ldr	r1, .L512+4
 11972 0484 0346     		mov	r3, r0
 11973 0486 5B00     		lsls	r3, r3, #1
 11974 0488 0344     		add	r3, r3, r0
 11975 048a 0B44     		add	r3, r3, r1
 11976 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 11977 048e 07F58A73 		add	r3, r7, #276
 11978 0492 9954     		strb	r1, [r3, r2]
1613:..\src/command_processing.c ****                 packet_data[5+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 11979              		.loc 1 1613 0
 11980 0494 B7F89436 		ldrh	r3, [r7, #1684]
 11981 0498 5A1D     		adds	r2, r3, #5
 11982 049a B7F8A036 		ldrh	r3, [r7, #1696]
 11983 049e 3221     		movs	r1, #50
 11984 04a0 01FB03F3 		mul	r3, r1, r3
 11985 04a4 1A44     		add	r2, r2, r3
 11986 04a6 B7F8A036 		ldrh	r3, [r7, #1696]
 11987 04aa 5B00     		lsls	r3, r3, #1
 11988 04ac A649     		ldr	r1, .L512
 11989 04ae CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11990 04b0 1846     		mov	r0, r3
 11991 04b2 A649     		ldr	r1, .L512+4
 11992 04b4 0346     		mov	r3, r0
 11993 04b6 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 270


 11994 04b8 0344     		add	r3, r3, r0
 11995 04ba 0B44     		add	r3, r3, r1
 11996 04bc 0133     		adds	r3, r3, #1
 11997 04be 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 11998 04c0 07F58A73 		add	r3, r7, #276
 11999 04c4 9954     		strb	r1, [r3, r2]
1614:..\src/command_processing.c ****                 packet_data[6+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 12000              		.loc 1 1614 0
 12001 04c6 B7F89436 		ldrh	r3, [r7, #1684]
 12002 04ca 9A1D     		adds	r2, r3, #6
 12003 04cc B7F8A036 		ldrh	r3, [r7, #1696]
 12004 04d0 3221     		movs	r1, #50
 12005 04d2 01FB03F3 		mul	r3, r1, r3
 12006 04d6 1A44     		add	r2, r2, r3
 12007 04d8 B7F8A036 		ldrh	r3, [r7, #1696]
 12008 04dc 5B00     		lsls	r3, r3, #1
 12009 04de 9A49     		ldr	r1, .L512
 12010 04e0 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12011 04e2 1846     		mov	r0, r3
 12012 04e4 9949     		ldr	r1, .L512+4
 12013 04e6 0346     		mov	r3, r0
 12014 04e8 5B00     		lsls	r3, r3, #1
 12015 04ea 0344     		add	r3, r3, r0
 12016 04ec 0B44     		add	r3, r3, r1
 12017 04ee 0233     		adds	r3, r3, #2
 12018 04f0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12019 04f2 07F58A73 		add	r3, r7, #276
 12020 04f6 9954     		strb	r1, [r3, r2]
1615:..\src/command_processing.c ****                 
1616:..\src/command_processing.c ****                 // check if there is a second value
1617:..\src/command_processing.c ****                 if ( N_IMU_Connected < 2*(k+1) ) {
 12021              		.loc 1 1617 0
 12022 04f8 954B     		ldr	r3, .L512+8
 12023 04fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12024 04fc 1A46     		mov	r2, r3
 12025 04fe B7F8A036 		ldrh	r3, [r7, #1696]
 12026 0502 0133     		adds	r3, r3, #1
 12027 0504 5B00     		lsls	r3, r3, #1
 12028 0506 9A42     		cmp	r2, r3
 12029 0508 28DA     		bge	.L479
1618:..\src/command_processing.c ****                     // there is only one value
1619:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 12030              		.loc 1 1619 0
 12031 050a 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12032 050e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12033 0512 1EE0     		b	.L480
 12034              	.L481:
1620:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12035              		.loc 1 1620 0 discriminator 3
 12036 0514 B7F89436 		ldrh	r3, [r7, #1684]
 12037 0518 DA1D     		adds	r2, r3, #7
 12038 051a B7F8A036 		ldrh	r3, [r7, #1696]
 12039 051e 3221     		movs	r1, #50
 12040 0520 01FB03F3 		mul	r3, r1, r3
 12041 0524 1A44     		add	r2, r2, r3
 12042 0526 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12043 052a 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 271


 12044 052c B7F8A236 		ldrh	r3, [r7, #1698]
 12045 0530 D31A     		subs	r3, r2, r3
 12046 0532 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 12047 0536 B7F8A226 		ldrh	r2, [r7, #1698]
 12048 053a 8A1A     		subs	r2, r1, r2
 12049 053c 07F1D801 		add	r1, r7, #216
 12050 0540 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12051 0542 07F58A72 		add	r2, r7, #276
 12052 0546 D154     		strb	r1, [r2, r3]
1619:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12053              		.loc 1 1619 0 discriminator 3
 12054 0548 B7F8A236 		ldrh	r3, [r7, #1698]
 12055 054c 013B     		subs	r3, r3, #1
 12056 054e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12057              	.L480:
1619:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12058              		.loc 1 1619 0 is_stmt 0 discriminator 1
 12059 0552 B7F8A236 		ldrh	r3, [r7, #1698]
 12060 0556 002B     		cmp	r3, #0
 12061 0558 DCD1     		bne	.L481
 12062 055a 84E0     		b	.L482
 12063              	.L479:
1621:..\src/command_processing.c ****                 }
1622:..\src/command_processing.c ****                 else {
1623:..\src/command_processing.c ****                     // fill the second value
1624:..\src/command_processing.c ****                     packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 6;
 12064              		.loc 1 1624 0 is_stmt 1
 12065 055c B7F89436 		ldrh	r3, [r7, #1684]
 12066 0560 DA1C     		adds	r2, r3, #3
 12067 0562 B7F8A036 		ldrh	r3, [r7, #1696]
 12068 0566 3221     		movs	r1, #50
 12069 0568 01FB03F3 		mul	r3, r1, r3
 12070 056c 1344     		add	r3, r3, r2
 12071 056e 07F58A72 		add	r2, r7, #276
 12072 0572 0621     		movs	r1, #6
 12073 0574 D154     		strb	r1, [r2, r3]
1625:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12074              		.loc 1 1625 0
 12075 0576 B7F89436 		ldrh	r3, [r7, #1684]
 12076 057a DA1D     		adds	r2, r3, #7
 12077 057c B7F8A036 		ldrh	r3, [r7, #1696]
 12078 0580 3221     		movs	r1, #50
 12079 0582 01FB03F3 		mul	r3, r1, r3
 12080 0586 1A44     		add	r2, r2, r3
 12081 0588 B7F8A036 		ldrh	r3, [r7, #1696]
 12082 058c 5B00     		lsls	r3, r3, #1
 12083 058e 0133     		adds	r3, r3, #1
 12084 0590 6D49     		ldr	r1, .L512
 12085 0592 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12086 0594 1846     		mov	r0, r3
 12087 0596 6D49     		ldr	r1, .L512+4
 12088 0598 0346     		mov	r3, r0
 12089 059a 5B00     		lsls	r3, r3, #1
 12090 059c 0344     		add	r3, r3, r0
 12091 059e 0B44     		add	r3, r3, r1
 12092 05a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12093 05a2 07F58A73 		add	r3, r7, #276
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 272


 12094 05a6 9954     		strb	r1, [r3, r2]
1626:..\src/command_processing.c ****                     packet_data[8+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12095              		.loc 1 1626 0
 12096 05a8 B7F89436 		ldrh	r3, [r7, #1684]
 12097 05ac 03F10802 		add	r2, r3, #8
 12098 05b0 B7F8A036 		ldrh	r3, [r7, #1696]
 12099 05b4 3221     		movs	r1, #50
 12100 05b6 01FB03F3 		mul	r3, r1, r3
 12101 05ba 1A44     		add	r2, r2, r3
 12102 05bc B7F8A036 		ldrh	r3, [r7, #1696]
 12103 05c0 5B00     		lsls	r3, r3, #1
 12104 05c2 0133     		adds	r3, r3, #1
 12105 05c4 6049     		ldr	r1, .L512
 12106 05c6 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12107 05c8 1846     		mov	r0, r3
 12108 05ca 6049     		ldr	r1, .L512+4
 12109 05cc 0346     		mov	r3, r0
 12110 05ce 5B00     		lsls	r3, r3, #1
 12111 05d0 0344     		add	r3, r3, r0
 12112 05d2 0B44     		add	r3, r3, r1
 12113 05d4 0133     		adds	r3, r3, #1
 12114 05d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12115 05d8 07F58A73 		add	r3, r7, #276
 12116 05dc 9954     		strb	r1, [r3, r2]
1627:..\src/command_processing.c ****                     packet_data[9+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12117              		.loc 1 1627 0
 12118 05de B7F89436 		ldrh	r3, [r7, #1684]
 12119 05e2 03F10902 		add	r2, r3, #9
 12120 05e6 B7F8A036 		ldrh	r3, [r7, #1696]
 12121 05ea 3221     		movs	r1, #50
 12122 05ec 01FB03F3 		mul	r3, r1, r3
 12123 05f0 1A44     		add	r2, r2, r3
 12124 05f2 B7F8A036 		ldrh	r3, [r7, #1696]
 12125 05f6 5B00     		lsls	r3, r3, #1
 12126 05f8 0133     		adds	r3, r3, #1
 12127 05fa 5349     		ldr	r1, .L512
 12128 05fc CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12129 05fe 1846     		mov	r0, r3
 12130 0600 5249     		ldr	r1, .L512+4
 12131 0602 0346     		mov	r3, r0
 12132 0604 5B00     		lsls	r3, r3, #1
 12133 0606 0344     		add	r3, r3, r0
 12134 0608 0B44     		add	r3, r3, r1
 12135 060a 0233     		adds	r3, r3, #2
 12136 060c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12137 060e 07F58A73 		add	r3, r7, #276
 12138 0612 9954     		strb	r1, [r3, r2]
1628:..\src/command_processing.c ****                 
1629:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 12139              		.loc 1 1629 0
 12140 0614 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12141 0618 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12142 061c 1FE0     		b	.L483
 12143              	.L484:
1630:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 12144              		.loc 1 1630 0 discriminator 3
 12145 061e B7F89436 		ldrh	r3, [r7, #1684]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 273


 12146 0622 03F10A02 		add	r2, r3, #10
 12147 0626 B7F8A036 		ldrh	r3, [r7, #1696]
 12148 062a 3221     		movs	r1, #50
 12149 062c 01FB03F3 		mul	r3, r1, r3
 12150 0630 1A44     		add	r2, r2, r3
 12151 0632 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12152 0636 1A44     		add	r2, r2, r3
 12153 0638 B7F8A236 		ldrh	r3, [r7, #1698]
 12154 063c D31A     		subs	r3, r2, r3
 12155 063e 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 12156 0642 B7F8A226 		ldrh	r2, [r7, #1698]
 12157 0646 8A1A     		subs	r2, r1, r2
 12158 0648 07F1D801 		add	r1, r7, #216
 12159 064c 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12160 064e 07F58A72 		add	r2, r7, #276
 12161 0652 D154     		strb	r1, [r2, r3]
1629:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 12162              		.loc 1 1629 0 discriminator 3
 12163 0654 B7F8A236 		ldrh	r3, [r7, #1698]
 12164 0658 013B     		subs	r3, r3, #1
 12165 065a A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12166              	.L483:
1629:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 12167              		.loc 1 1629 0 is_stmt 0 discriminator 1
 12168 065e B7F8A236 		ldrh	r3, [r7, #1698]
 12169 0662 002B     		cmp	r3, #0
 12170 0664 DBD1     		bne	.L484
 12171              	.L482:
1608:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12172              		.loc 1 1608 0 is_stmt 1 discriminator 2
 12173 0666 B7F8A036 		ldrh	r3, [r7, #1696]
 12174 066a 0133     		adds	r3, r3, #1
 12175 066c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12176              	.L478:
1608:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12177              		.loc 1 1608 0 is_stmt 0 discriminator 1
 12178 0670 B7F8A026 		ldrh	r2, [r7, #1696]
 12179 0674 B7F8A636 		ldrh	r3, [r7, #1702]
 12180 0678 9A42     		cmp	r2, r3
 12181 067a FFF4D9AE 		bcc	.L485
1631:..\src/command_processing.c ****                 }
1632:..\src/command_processing.c ****             }
1633:..\src/command_processing.c ****             
1634:..\src/command_processing.c ****             /*-----------------ID-----------------*/
1635:..\src/command_processing.c ****             
1636:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_mag_cal_params;
 12182              		.loc 1 1636 0 is_stmt 1
 12183 067e B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 12184 0682 1A46     		mov	r2, r3	@ movhi
 12185 0684 9200     		lsls	r2, r2, #2
 12186 0686 1344     		add	r3, r3, r2
 12187 0688 1A46     		mov	r2, r3	@ movhi
 12188 068a 9100     		lsls	r1, r2, #2
 12189 068c 1A46     		mov	r2, r3	@ movhi
 12190 068e 0B46     		mov	r3, r1	@ movhi
 12191 0690 1344     		add	r3, r3, r2
 12192 0692 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 274


 12193 0694 9AB2     		uxth	r2, r3
 12194 0696 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12195 069a 1344     		add	r3, r3, r2
 12196 069c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1637:..\src/command_processing.c ****             sprintf(id_str, "%u - Device ID:", first_imu_parameter-1);
 12197              		.loc 1 1637 0
 12198 06a0 B7F89836 		ldrh	r3, [r7, #1688]
 12199 06a4 5A1E     		subs	r2, r3, #1
 12200 06a6 07F1C803 		add	r3, r7, #200
 12201 06aa 2A49     		ldr	r1, .L512+12
 12202 06ac 1846     		mov	r0, r3
 12203 06ae FFF7FEFF 		bl	sprintf
1638:..\src/command_processing.c ****             id_str_len = strlen(id_str);
 12204              		.loc 1 1638 0
 12205 06b2 07F1C803 		add	r3, r7, #200
 12206 06b6 1846     		mov	r0, r3
 12207 06b8 FFF7FEFF 		bl	strlen
 12208 06bc 0346     		mov	r3, r0
 12209 06be 87F89336 		strb	r3, [r7, #1683]
1639:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_UINT8;
 12210              		.loc 1 1639 0
 12211 06c2 B7F89436 		ldrh	r3, [r7, #1684]
 12212 06c6 0233     		adds	r3, r3, #2
 12213 06c8 07F58A72 		add	r2, r7, #276
 12214 06cc 0221     		movs	r1, #2
 12215 06ce D154     		strb	r1, [r2, r3]
1640:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 12216              		.loc 1 1640 0
 12217 06d0 B7F89436 		ldrh	r3, [r7, #1684]
 12218 06d4 0333     		adds	r3, r3, #3
 12219 06d6 07F58A72 		add	r2, r7, #276
 12220 06da 0121     		movs	r1, #1
 12221 06dc D154     		strb	r1, [r2, r3]
1641:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.dev.id;
 12222              		.loc 1 1641 0
 12223 06de B7F89436 		ldrh	r3, [r7, #1684]
 12224 06e2 0433     		adds	r3, r3, #4
 12225 06e4 1C4A     		ldr	r2, .L512+16
 12226 06e6 92F8A010 		ldrb	r1, [r2, #160]	@ zero_extendqisi2
 12227 06ea 07F58A72 		add	r2, r7, #276
 12228 06ee D154     		strb	r1, [r2, r3]
1642:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 12229              		.loc 1 1642 0
 12230 06f0 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 12231 06f4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12232 06f8 18E0     		b	.L486
 12233              	.L487:
1643:..\src/command_processing.c ****                 packet_data[5+start_byte + id_str_len - i] = id_str[id_str_len - i];
 12234              		.loc 1 1643 0 discriminator 3
 12235 06fa B7F89436 		ldrh	r3, [r7, #1684]
 12236 06fe 5A1D     		adds	r2, r3, #5
 12237 0700 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 12238 0704 1A44     		add	r2, r2, r3
 12239 0706 B7F8A436 		ldrh	r3, [r7, #1700]
 12240 070a D31A     		subs	r3, r2, r3
 12241 070c 97F89316 		ldrb	r1, [r7, #1683]	@ zero_extendqisi2
 12242 0710 B7F8A426 		ldrh	r2, [r7, #1700]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 275


 12243 0714 8A1A     		subs	r2, r1, r2
 12244 0716 07F1C801 		add	r1, r7, #200
 12245 071a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12246 071c 07F58A72 		add	r2, r7, #276
 12247 0720 D154     		strb	r1, [r2, r3]
1642:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 12248              		.loc 1 1642 0 discriminator 3
 12249 0722 B7F8A436 		ldrh	r3, [r7, #1700]
 12250 0726 013B     		subs	r3, r3, #1
 12251 0728 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12252              	.L486:
1642:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 12253              		.loc 1 1642 0 is_stmt 0 discriminator 1
 12254 072c B7F8A436 		ldrh	r3, [r7, #1700]
 12255 0730 002B     		cmp	r3, #0
 12256 0732 E2D1     		bne	.L487
1644:..\src/command_processing.c ****                 
1645:..\src/command_processing.c ****             /*-------------GET IMUS MODE-------------*/
1646:..\src/command_processing.c ****             
1647:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 12257              		.loc 1 1647 0 is_stmt 1
 12258 0734 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12259 0738 3233     		adds	r3, r3, #50
 12260 073a A7F89436 		strh	r3, [r7, #1684]	@ movhi
1648:..\src/command_processing.c ****             for (i = 0; i < (uint8)N_IMU_Connected; i++){
 12261              		.loc 1 1648 0
 12262 073e 0023     		movs	r3, #0
 12263 0740 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12264 0744 38E1     		b	.L488
 12265              	.L513:
 12266 0746 00BF     		.align	2
 12267              	.L512:
 12268 0748 00000000 		.word	IMU_connected
 12269 074c 00000000 		.word	MagCal
 12270 0750 00000000 		.word	N_IMU_Connected
 12271 0754 1C0E0000 		.word	.LC126
 12272 0758 00000000 		.word	c_mem
 12273              	.L491:
1649:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 12274              		.loc 1 1649 0
 12275 075c B7F89826 		ldrh	r2, [r7, #1688]
 12276 0760 B7F8A436 		ldrh	r3, [r7, #1700]
 12277 0764 D118     		adds	r1, r2, r3
 12278 0766 B7F8A436 		ldrh	r3, [r7, #1700]
 12279 076a D54A     		ldr	r2, .L514
 12280 076c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12281 076e 07F19C00 		add	r0, r7, #156
 12282 0772 0A46     		mov	r2, r1
 12283 0774 D349     		ldr	r1, .L514+4
 12284 0776 FFF7FEFF 		bl	sprintf
1650:..\src/command_processing.c ****                 imu_table_str_len = strlen(imu_table_str);
 12285              		.loc 1 1650 0
 12286 077a 07F19C03 		add	r3, r7, #156
 12287 077e 1846     		mov	r0, r3
 12288 0780 FFF7FEFF 		bl	strlen
 12289 0784 0346     		mov	r3, r0
 12290 0786 87F88F36 		strb	r3, [r7, #1679]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 276


1651:..\src/command_processing.c ****             
1652:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte + PARAM_BYTE_SLOT*i)] = TYPE_UINT8;
 12291              		.loc 1 1652 0
 12292 078a B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12293 078e 1A46     		mov	r2, r3	@ movhi
 12294 0790 9200     		lsls	r2, r2, #2
 12295 0792 1344     		add	r3, r3, r2
 12296 0794 1A46     		mov	r2, r3	@ movhi
 12297 0796 9100     		lsls	r1, r2, #2
 12298 0798 1A46     		mov	r2, r3	@ movhi
 12299 079a 0B46     		mov	r3, r1	@ movhi
 12300 079c 1344     		add	r3, r3, r2
 12301 079e 5B00     		lsls	r3, r3, #1
 12302 07a0 9AB2     		uxth	r2, r3
 12303 07a2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12304 07a6 1344     		add	r3, r3, r2
 12305 07a8 9BB2     		uxth	r3, r3
 12306 07aa 0233     		adds	r3, r3, #2
 12307 07ac 9BB2     		uxth	r3, r3
 12308 07ae 1A46     		mov	r2, r3
 12309 07b0 07F58A73 		add	r3, r7, #276
 12310 07b4 0221     		movs	r1, #2
 12311 07b6 9954     		strb	r1, [r3, r2]
1653:..\src/command_processing.c ****                 packet_data[(uint16)(3 + start_byte + PARAM_BYTE_SLOT*i)] = 5;
 12312              		.loc 1 1653 0
 12313 07b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12314 07bc 1A46     		mov	r2, r3	@ movhi
 12315 07be 9200     		lsls	r2, r2, #2
 12316 07c0 1344     		add	r3, r3, r2
 12317 07c2 1A46     		mov	r2, r3	@ movhi
 12318 07c4 9100     		lsls	r1, r2, #2
 12319 07c6 1A46     		mov	r2, r3	@ movhi
 12320 07c8 0B46     		mov	r3, r1	@ movhi
 12321 07ca 1344     		add	r3, r3, r2
 12322 07cc 5B00     		lsls	r3, r3, #1
 12323 07ce 9AB2     		uxth	r2, r3
 12324 07d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12325 07d4 1344     		add	r3, r3, r2
 12326 07d6 9BB2     		uxth	r3, r3
 12327 07d8 0333     		adds	r3, r3, #3
 12328 07da 9BB2     		uxth	r3, r3
 12329 07dc 1A46     		mov	r2, r3
 12330 07de 07F58A73 		add	r3, r7, #276
 12331 07e2 0521     		movs	r1, #5
 12332 07e4 9954     		strb	r1, [r3, r2]
1654:..\src/command_processing.c ****                 
1655:..\src/command_processing.c ****                 packet_data[(uint16)(4 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 12333              		.loc 1 1655 0
 12334 07e6 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12335 07ea 1A46     		mov	r2, r3	@ movhi
 12336 07ec 9200     		lsls	r2, r2, #2
 12337 07ee 1344     		add	r3, r3, r2
 12338 07f0 1A46     		mov	r2, r3	@ movhi
 12339 07f2 9100     		lsls	r1, r2, #2
 12340 07f4 1A46     		mov	r2, r3	@ movhi
 12341 07f6 0B46     		mov	r3, r1	@ movhi
 12342 07f8 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 277


 12343 07fa 5B00     		lsls	r3, r3, #1
 12344 07fc 9AB2     		uxth	r2, r3
 12345 07fe B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12346 0802 1344     		add	r3, r3, r2
 12347 0804 9BB2     		uxth	r3, r3
 12348 0806 0433     		adds	r3, r3, #4
 12349 0808 9BB2     		uxth	r3, r3
 12350 080a 1846     		mov	r0, r3
 12351 080c B7F8A436 		ldrh	r3, [r7, #1700]
 12352 0810 AB4A     		ldr	r2, .L514
 12353 0812 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12354 0814 1946     		mov	r1, r3
 12355 0816 AC4A     		ldr	r2, .L514+8
 12356 0818 0B46     		mov	r3, r1
 12357 081a 9B00     		lsls	r3, r3, #2
 12358 081c 0B44     		add	r3, r3, r1
 12359 081e 1344     		add	r3, r3, r2
 12360 0820 03F20223 		addw	r3, r3, #514
 12361 0824 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12362 0826 07F58A73 		add	r3, r7, #276
 12363 082a 1A54     		strb	r2, [r3, r0]
1656:..\src/command_processing.c ****                 packet_data[(uint16)(5 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 12364              		.loc 1 1656 0
 12365 082c B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12366 0830 1A46     		mov	r2, r3	@ movhi
 12367 0832 9200     		lsls	r2, r2, #2
 12368 0834 1344     		add	r3, r3, r2
 12369 0836 1A46     		mov	r2, r3	@ movhi
 12370 0838 9100     		lsls	r1, r2, #2
 12371 083a 1A46     		mov	r2, r3	@ movhi
 12372 083c 0B46     		mov	r3, r1	@ movhi
 12373 083e 1344     		add	r3, r3, r2
 12374 0840 5B00     		lsls	r3, r3, #1
 12375 0842 9AB2     		uxth	r2, r3
 12376 0844 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12377 0848 1344     		add	r3, r3, r2
 12378 084a 9BB2     		uxth	r3, r3
 12379 084c 0533     		adds	r3, r3, #5
 12380 084e 9BB2     		uxth	r3, r3
 12381 0850 1846     		mov	r0, r3
 12382 0852 B7F8A436 		ldrh	r3, [r7, #1700]
 12383 0856 9A4A     		ldr	r2, .L514
 12384 0858 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12385 085a 1946     		mov	r1, r3
 12386 085c 9A4A     		ldr	r2, .L514+8
 12387 085e 0B46     		mov	r3, r1
 12388 0860 9B00     		lsls	r3, r3, #2
 12389 0862 0B44     		add	r3, r3, r1
 12390 0864 1344     		add	r3, r3, r2
 12391 0866 03F20323 		addw	r3, r3, #515
 12392 086a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12393 086c 07F58A73 		add	r3, r7, #276
 12394 0870 1A54     		strb	r2, [r3, r0]
1657:..\src/command_processing.c ****                 packet_data[(uint16)(6 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 12395              		.loc 1 1657 0
 12396 0872 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12397 0876 1A46     		mov	r2, r3	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 278


 12398 0878 9200     		lsls	r2, r2, #2
 12399 087a 1344     		add	r3, r3, r2
 12400 087c 1A46     		mov	r2, r3	@ movhi
 12401 087e 9100     		lsls	r1, r2, #2
 12402 0880 1A46     		mov	r2, r3	@ movhi
 12403 0882 0B46     		mov	r3, r1	@ movhi
 12404 0884 1344     		add	r3, r3, r2
 12405 0886 5B00     		lsls	r3, r3, #1
 12406 0888 9AB2     		uxth	r2, r3
 12407 088a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12408 088e 1344     		add	r3, r3, r2
 12409 0890 9BB2     		uxth	r3, r3
 12410 0892 0633     		adds	r3, r3, #6
 12411 0894 9BB2     		uxth	r3, r3
 12412 0896 1846     		mov	r0, r3
 12413 0898 B7F8A436 		ldrh	r3, [r7, #1700]
 12414 089c 884A     		ldr	r2, .L514
 12415 089e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12416 08a0 1946     		mov	r1, r3
 12417 08a2 894A     		ldr	r2, .L514+8
 12418 08a4 0B46     		mov	r3, r1
 12419 08a6 9B00     		lsls	r3, r3, #2
 12420 08a8 0B44     		add	r3, r3, r1
 12421 08aa 1344     		add	r3, r3, r2
 12422 08ac 03F50173 		add	r3, r3, #516
 12423 08b0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12424 08b2 07F58A73 		add	r3, r7, #276
 12425 08b6 1A54     		strb	r2, [r3, r0]
1658:..\src/command_processing.c ****                 packet_data[(uint16)(7 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 12426              		.loc 1 1658 0
 12427 08b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12428 08bc 1A46     		mov	r2, r3	@ movhi
 12429 08be 9200     		lsls	r2, r2, #2
 12430 08c0 1344     		add	r3, r3, r2
 12431 08c2 1A46     		mov	r2, r3	@ movhi
 12432 08c4 9100     		lsls	r1, r2, #2
 12433 08c6 1A46     		mov	r2, r3	@ movhi
 12434 08c8 0B46     		mov	r3, r1	@ movhi
 12435 08ca 1344     		add	r3, r3, r2
 12436 08cc 5B00     		lsls	r3, r3, #1
 12437 08ce 9AB2     		uxth	r2, r3
 12438 08d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12439 08d4 1344     		add	r3, r3, r2
 12440 08d6 9BB2     		uxth	r3, r3
 12441 08d8 0733     		adds	r3, r3, #7
 12442 08da 9BB2     		uxth	r3, r3
 12443 08dc 1846     		mov	r0, r3
 12444 08de B7F8A436 		ldrh	r3, [r7, #1700]
 12445 08e2 774A     		ldr	r2, .L514
 12446 08e4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12447 08e6 1946     		mov	r1, r3
 12448 08e8 774A     		ldr	r2, .L514+8
 12449 08ea 0B46     		mov	r3, r1
 12450 08ec 9B00     		lsls	r3, r3, #2
 12451 08ee 0B44     		add	r3, r3, r1
 12452 08f0 1344     		add	r3, r3, r2
 12453 08f2 03F20523 		addw	r3, r3, #517
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 279


 12454 08f6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12455 08f8 07F58A73 		add	r3, r7, #276
 12456 08fc 1A54     		strb	r2, [r3, r0]
1659:..\src/command_processing.c ****                 packet_data[(uint16)(8 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 12457              		.loc 1 1659 0
 12458 08fe B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12459 0902 1A46     		mov	r2, r3	@ movhi
 12460 0904 9200     		lsls	r2, r2, #2
 12461 0906 1344     		add	r3, r3, r2
 12462 0908 1A46     		mov	r2, r3	@ movhi
 12463 090a 9100     		lsls	r1, r2, #2
 12464 090c 1A46     		mov	r2, r3	@ movhi
 12465 090e 0B46     		mov	r3, r1	@ movhi
 12466 0910 1344     		add	r3, r3, r2
 12467 0912 5B00     		lsls	r3, r3, #1
 12468 0914 9AB2     		uxth	r2, r3
 12469 0916 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12470 091a 1344     		add	r3, r3, r2
 12471 091c 9BB2     		uxth	r3, r3
 12472 091e 0833     		adds	r3, r3, #8
 12473 0920 9BB2     		uxth	r3, r3
 12474 0922 1846     		mov	r0, r3
 12475 0924 B7F8A436 		ldrh	r3, [r7, #1700]
 12476 0928 654A     		ldr	r2, .L514
 12477 092a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12478 092c 1946     		mov	r1, r3
 12479 092e 664A     		ldr	r2, .L514+8
 12480 0930 0B46     		mov	r3, r1
 12481 0932 9B00     		lsls	r3, r3, #2
 12482 0934 0B44     		add	r3, r3, r1
 12483 0936 1344     		add	r3, r3, r2
 12484 0938 03F20623 		addw	r3, r3, #518
 12485 093c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12486 093e 07F58A73 		add	r3, r7, #276
 12487 0942 1A54     		strb	r2, [r3, r0]
1660:..\src/command_processing.c **** 
1661:..\src/command_processing.c ****                 for(j = imu_table_str_len; j != 0; j--)
 12488              		.loc 1 1661 0
 12489 0944 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 12490 0948 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12491 094c 2BE0     		b	.L489
 12492              	.L490:
1662:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 12493              		.loc 1 1662 0 discriminator 3
 12494 094e B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12495 0952 1A46     		mov	r2, r3	@ movhi
 12496 0954 9200     		lsls	r2, r2, #2
 12497 0956 1344     		add	r3, r3, r2
 12498 0958 1A46     		mov	r2, r3	@ movhi
 12499 095a 9100     		lsls	r1, r2, #2
 12500 095c 1A46     		mov	r2, r3	@ movhi
 12501 095e 0B46     		mov	r3, r1	@ movhi
 12502 0960 1344     		add	r3, r3, r2
 12503 0962 5B00     		lsls	r3, r3, #1
 12504 0964 9AB2     		uxth	r2, r3
 12505 0966 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12506 096a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 280


 12507 096c 9AB2     		uxth	r2, r3
 12508 096e 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 12509 0972 9BB2     		uxth	r3, r3
 12510 0974 1344     		add	r3, r3, r2
 12511 0976 9AB2     		uxth	r2, r3
 12512 0978 B7F8A236 		ldrh	r3, [r7, #1698]	@ movhi
 12513 097c D31A     		subs	r3, r2, r3
 12514 097e 9BB2     		uxth	r3, r3
 12515 0980 0933     		adds	r3, r3, #9
 12516 0982 9BB2     		uxth	r3, r3
 12517 0984 1946     		mov	r1, r3
 12518 0986 97F88F26 		ldrb	r2, [r7, #1679]	@ zero_extendqisi2
 12519 098a B7F8A236 		ldrh	r3, [r7, #1698]
 12520 098e D31A     		subs	r3, r2, r3
 12521 0990 07F19C02 		add	r2, r7, #156
 12522 0994 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 12523 0996 07F58A73 		add	r3, r7, #276
 12524 099a 5A54     		strb	r2, [r3, r1]
1661:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 12525              		.loc 1 1661 0 discriminator 3
 12526 099c B7F8A236 		ldrh	r3, [r7, #1698]
 12527 09a0 013B     		subs	r3, r3, #1
 12528 09a2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12529              	.L489:
1661:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 12530              		.loc 1 1661 0 is_stmt 0 discriminator 1
 12531 09a6 B7F8A236 		ldrh	r3, [r7, #1698]
 12532 09aa 002B     		cmp	r3, #0
 12533 09ac CFD1     		bne	.L490
1648:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 12534              		.loc 1 1648 0 is_stmt 1 discriminator 2
 12535 09ae B7F8A436 		ldrh	r3, [r7, #1700]
 12536 09b2 0133     		adds	r3, r3, #1
 12537 09b4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12538              	.L488:
1648:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 12539              		.loc 1 1648 0 is_stmt 0 discriminator 1
 12540 09b8 444B     		ldr	r3, .L514+12
 12541 09ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12542 09bc 9BB2     		uxth	r3, r3
 12543 09be B7F8A426 		ldrh	r2, [r7, #1700]
 12544 09c2 9A42     		cmp	r2, r3
 12545 09c4 FFF4CAAE 		bcc	.L491
1663:..\src/command_processing.c ****             }  
1664:..\src/command_processing.c ****           
1665:..\src/command_processing.c **** 
1666:..\src/command_processing.c ****             /*-----------------SPI DELAY-----------------*/
1667:..\src/command_processing.c ****             
1668:..\src/command_processing.c ****             start_byte = start_byte + (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected);
 12546              		.loc 1 1668 0 is_stmt 1
 12547 09c8 404B     		ldr	r3, .L514+12
 12548 09ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12549 09cc 9BB2     		uxth	r3, r3
 12550 09ce 1A46     		mov	r2, r3	@ movhi
 12551 09d0 9200     		lsls	r2, r2, #2
 12552 09d2 1344     		add	r3, r3, r2
 12553 09d4 1A46     		mov	r2, r3	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 281


 12554 09d6 9100     		lsls	r1, r2, #2
 12555 09d8 1A46     		mov	r2, r3	@ movhi
 12556 09da 0B46     		mov	r3, r1	@ movhi
 12557 09dc 1344     		add	r3, r3, r2
 12558 09de 5B00     		lsls	r3, r3, #1
 12559 09e0 9AB2     		uxth	r2, r3
 12560 09e2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12561 09e6 1344     		add	r3, r3, r2
 12562 09e8 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1669:..\src/command_processing.c ****             sprintf(spi_read_delay_str, "%u - SPI read delay:", first_imu_parameter+N_IMU_Connected
 12563              		.loc 1 1669 0
 12564 09ec B7F89836 		ldrh	r3, [r7, #1688]
 12565 09f0 364A     		ldr	r2, .L514+12
 12566 09f2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 12567 09f4 1A44     		add	r2, r2, r3
 12568 09f6 07F18003 		add	r3, r7, #128
 12569 09fa 3549     		ldr	r1, .L514+16
 12570 09fc 1846     		mov	r0, r3
 12571 09fe FFF7FEFF 		bl	sprintf
1670:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_FLAG;
 12572              		.loc 1 1670 0
 12573 0a02 B7F89436 		ldrh	r3, [r7, #1684]
 12574 0a06 0233     		adds	r3, r3, #2
 12575 0a08 07F58A72 		add	r2, r7, #276
 12576 0a0c 0021     		movs	r1, #0
 12577 0a0e D154     		strb	r1, [r2, r3]
1671:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 12578              		.loc 1 1671 0
 12579 0a10 B7F89436 		ldrh	r3, [r7, #1684]
 12580 0a14 0333     		adds	r3, r3, #3
 12581 0a16 07F58A72 		add	r2, r7, #276
 12582 0a1a 0121     		movs	r1, #1
 12583 0a1c D154     		strb	r1, [r2, r3]
1672:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.imu.SPI_read_delay;
 12584              		.loc 1 1672 0
 12585 0a1e B7F89436 		ldrh	r3, [r7, #1684]
 12586 0a22 0433     		adds	r3, r3, #4
 12587 0a24 284A     		ldr	r2, .L514+8
 12588 0a26 92F80112 		ldrb	r1, [r2, #513]	@ zero_extendqisi2
 12589 0a2a 07F58A72 		add	r2, r7, #276
 12590 0a2e D154     		strb	r1, [r2, r3]
1673:..\src/command_processing.c ****             switch(c_mem.imu.SPI_read_delay) {
 12591              		.loc 1 1673 0
 12592 0a30 254B     		ldr	r3, .L514+8
 12593 0a32 93F80132 		ldrb	r3, [r3, #513]	@ zero_extendqisi2
 12594 0a36 012B     		cmp	r3, #1
 12595 0a38 17D0     		beq	.L493
 12596 0a3a 022B     		cmp	r3, #2
 12597 0a3c 28D0     		beq	.L494
 12598 0a3e 002B     		cmp	r3, #0
 12599 0a40 00D0     		beq	.L495
1674:..\src/command_processing.c ****                 case 0: 
1675:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " None"); 
1676:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1677:..\src/command_processing.c ****                     break;
1678:..\src/command_processing.c ****                 case 1: 
1679:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " Low"); 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 282


1680:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
1681:..\src/command_processing.c ****                     break;
1682:..\src/command_processing.c ****                 case 2: 
1683:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " High");
1684:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1685:..\src/command_processing.c ****                     break;
1686:..\src/command_processing.c ****                 default:
1687:..\src/command_processing.c ****                     break;
 12600              		.loc 1 1687 0
 12601 0a42 38E0     		b	.L496
 12602              	.L495:
1675:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 12603              		.loc 1 1675 0
 12604 0a44 07F18003 		add	r3, r7, #128
 12605 0a48 1846     		mov	r0, r3
 12606 0a4a FFF7FEFF 		bl	strlen
 12607 0a4e 0346     		mov	r3, r0
 12608 0a50 1A46     		mov	r2, r3
 12609 0a52 07F18003 		add	r3, r7, #128
 12610 0a56 1344     		add	r3, r3, r2
 12611 0a58 1E4A     		ldr	r2, .L514+20
 12612 0a5a 1068     		ldr	r0, [r2]	@ unaligned
 12613 0a5c 1860     		str	r0, [r3]	@ unaligned
 12614 0a5e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 12615 0a60 9A80     		strh	r2, [r3, #4]	@ unaligned
1676:..\src/command_processing.c ****                     break;
 12616              		.loc 1 1676 0
 12617 0a62 1A23     		movs	r3, #26
 12618 0a64 87F89D36 		strb	r3, [r7, #1693]
1677:..\src/command_processing.c ****                 case 1: 
 12619              		.loc 1 1677 0
 12620 0a68 25E0     		b	.L496
 12621              	.L493:
1679:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
 12622              		.loc 1 1679 0
 12623 0a6a 07F18003 		add	r3, r7, #128
 12624 0a6e 1846     		mov	r0, r3
 12625 0a70 FFF7FEFF 		bl	strlen
 12626 0a74 0346     		mov	r3, r0
 12627 0a76 1A46     		mov	r2, r3
 12628 0a78 07F18003 		add	r3, r7, #128
 12629 0a7c 1344     		add	r3, r3, r2
 12630 0a7e 164A     		ldr	r2, .L514+24
 12631 0a80 1068     		ldr	r0, [r2]	@ unaligned
 12632 0a82 1860     		str	r0, [r3]	@ unaligned
 12633 0a84 1279     		ldrb	r2, [r2, #4]
 12634 0a86 1A71     		strb	r2, [r3, #4]
1680:..\src/command_processing.c ****                     break;
 12635              		.loc 1 1680 0
 12636 0a88 1923     		movs	r3, #25
 12637 0a8a 87F89D36 		strb	r3, [r7, #1693]
1681:..\src/command_processing.c ****                 case 2: 
 12638              		.loc 1 1681 0
 12639 0a8e 12E0     		b	.L496
 12640              	.L494:
1683:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 12641              		.loc 1 1683 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 283


 12642 0a90 07F18003 		add	r3, r7, #128
 12643 0a94 1846     		mov	r0, r3
 12644 0a96 FFF7FEFF 		bl	strlen
 12645 0a9a 0346     		mov	r3, r0
 12646 0a9c 1A46     		mov	r2, r3
 12647 0a9e 07F18003 		add	r3, r7, #128
 12648 0aa2 1344     		add	r3, r3, r2
 12649 0aa4 0D4A     		ldr	r2, .L514+28
 12650 0aa6 1068     		ldr	r0, [r2]	@ unaligned
 12651 0aa8 1860     		str	r0, [r3]	@ unaligned
 12652 0aaa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 12653 0aac 9A80     		strh	r2, [r3, #4]	@ unaligned
1684:..\src/command_processing.c ****                     break;
 12654              		.loc 1 1684 0
 12655 0aae 1A23     		movs	r3, #26
 12656 0ab0 87F89D36 		strb	r3, [r7, #1693]
1685:..\src/command_processing.c ****                 default:
 12657              		.loc 1 1685 0
 12658 0ab4 00BF     		nop
 12659              	.L496:
1688:..\src/command_processing.c ****             }            
1689:..\src/command_processing.c ****             for(i = spi_read_delay_str_len; i != 0; i--)
 12660              		.loc 1 1689 0
 12661 0ab6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 12662 0aba A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12663 0abe 28E0     		b	.L497
 12664              	.L515:
 12665              		.align	2
 12666              	.L514:
 12667 0ac0 00000000 		.word	IMU_connected
 12668 0ac4 2C0E0000 		.word	.LC127
 12669 0ac8 00000000 		.word	c_mem
 12670 0acc 00000000 		.word	N_IMU_Connected
 12671 0ad0 480E0000 		.word	.LC128
 12672 0ad4 600E0000 		.word	.LC129
 12673 0ad8 680E0000 		.word	.LC130
 12674 0adc 700E0000 		.word	.LC131
 12675              	.L498:
1690:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 12676              		.loc 1 1690 0 discriminator 3
 12677 0ae0 B7F89436 		ldrh	r3, [r7, #1684]
 12678 0ae4 5A1D     		adds	r2, r3, #5
 12679 0ae6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 12680 0aea 1A44     		add	r2, r2, r3
 12681 0aec B7F8A436 		ldrh	r3, [r7, #1700]
 12682 0af0 D31A     		subs	r3, r2, r3
 12683 0af2 97F89D16 		ldrb	r1, [r7, #1693]	@ zero_extendqisi2
 12684 0af6 B7F8A426 		ldrh	r2, [r7, #1700]
 12685 0afa 8A1A     		subs	r2, r1, r2
 12686 0afc 07F18001 		add	r1, r7, #128
 12687 0b00 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12688 0b02 07F58A72 		add	r2, r7, #276
 12689 0b06 D154     		strb	r1, [r2, r3]
1689:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 12690              		.loc 1 1689 0 discriminator 3
 12691 0b08 B7F8A436 		ldrh	r3, [r7, #1700]
 12692 0b0c 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 284


 12693 0b0e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12694              	.L497:
1689:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 12695              		.loc 1 1689 0 is_stmt 0 discriminator 1
 12696 0b12 B7F8A436 		ldrh	r3, [r7, #1700]
 12697 0b16 002B     		cmp	r3, #0
 12698 0b18 E2D1     		bne	.L498
1691:..\src/command_processing.c ****             //The following byte indicates the number of menus at the end of the packet to send
1692:..\src/command_processing.c ****             packet_data[5+start_byte + spi_read_delay_str_len] = 1;
 12699              		.loc 1 1692 0 is_stmt 1
 12700 0b1a B7F89436 		ldrh	r3, [r7, #1684]
 12701 0b1e 5A1D     		adds	r2, r3, #5
 12702 0b20 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 12703 0b24 1344     		add	r3, r3, r2
 12704 0b26 07F58A72 		add	r2, r7, #276
 12705 0b2a 0121     		movs	r1, #1
 12706 0b2c D154     		strb	r1, [r2, r3]
1693:..\src/command_processing.c ****                   
1694:..\src/command_processing.c ****             
1695:..\src/command_processing.c ****             /*------------PARAMETERS MENU-----------*/
1696:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 12707              		.loc 1 1696 0
 12708 0b2e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12709 0b32 3233     		adds	r3, r3, #50
 12710 0b34 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1697:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 12711              		.loc 1 1697 0
 12712 0b38 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 12713 0b3c A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12714 0b40 1AE0     		b	.L499
 12715              	.L500:
1698:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte) + spi_delay_menu_len - i] = spi_delay_menu[spi
 12716              		.loc 1 1698 0 discriminator 3
 12717 0b42 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12718 0b46 0233     		adds	r3, r3, #2
 12719 0b48 9BB2     		uxth	r3, r3
 12720 0b4a 1A46     		mov	r2, r3
 12721 0b4c 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 12722 0b50 1A44     		add	r2, r2, r3
 12723 0b52 B7F8A436 		ldrh	r3, [r7, #1700]
 12724 0b56 D31A     		subs	r3, r2, r3
 12725 0b58 97F88E16 		ldrb	r1, [r7, #1678]	@ zero_extendqisi2
 12726 0b5c B7F8A426 		ldrh	r2, [r7, #1700]
 12727 0b60 8A1A     		subs	r2, r1, r2
 12728 0b62 07F10801 		add	r1, r7, #8
 12729 0b66 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12730 0b68 07F58A72 		add	r2, r7, #276
 12731 0b6c D154     		strb	r1, [r2, r3]
1697:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 12732              		.loc 1 1697 0 discriminator 3
 12733 0b6e B7F8A436 		ldrh	r3, [r7, #1700]
 12734 0b72 013B     		subs	r3, r3, #1
 12735 0b74 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12736              	.L499:
1697:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 12737              		.loc 1 1697 0 is_stmt 0 discriminator 1
 12738 0b78 B7F8A436 		ldrh	r3, [r7, #1700]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 285


 12739 0b7c 002B     		cmp	r3, #0
 12740 0b7e E0D1     		bne	.L500
1699:..\src/command_processing.c **** 
1700:..\src/command_processing.c ****             packet_data[packet_length - 1] = LCRChecksum(packet_data,packet_length - 1);
 12741              		.loc 1 1700 0 is_stmt 1
 12742 0b80 B7F89636 		ldrh	r3, [r7, #1686]
 12743 0b84 5C1E     		subs	r4, r3, #1
 12744 0b86 B7F89636 		ldrh	r3, [r7, #1686]	@ movhi
 12745 0b8a DBB2     		uxtb	r3, r3
 12746 0b8c 013B     		subs	r3, r3, #1
 12747 0b8e DAB2     		uxtb	r2, r3
 12748 0b90 07F58A73 		add	r3, r7, #276
 12749 0b94 1146     		mov	r1, r2
 12750 0b96 1846     		mov	r0, r3
 12751 0b98 FFF7FEFF 		bl	LCRChecksum
 12752 0b9c 0346     		mov	r3, r0
 12753 0b9e 1A46     		mov	r2, r3
 12754 0ba0 07F58A73 		add	r3, r7, #276
 12755 0ba4 1A55     		strb	r2, [r3, r4]
1701:..\src/command_processing.c ****             commWrite(packet_data, packet_length);
 12756              		.loc 1 1701 0
 12757 0ba6 B7F89626 		ldrh	r2, [r7, #1686]
 12758 0baa 07F58A73 		add	r3, r7, #276
 12759 0bae 1146     		mov	r1, r2
 12760 0bb0 1846     		mov	r0, r3
 12761 0bb2 FFF7FEFF 		bl	commWrite
1702:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 12762              		.loc 1 1702 0
 12763 0bb6 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
1703:..\src/command_processing.c ****         break;
 12764              		.loc 1 1703 0
 12765 0bba 09E1     		b	.L501
 12766              	.L508:
1704:..\src/command_processing.c **** 
1705:..\src/command_processing.c **** //=========================================================     other_params
1706:..\src/command_processing.c ****         default: 
1707:..\src/command_processing.c ****             
1708:..\src/command_processing.c ****             if (index < first_imu_parameter-1)
 12767              		.loc 1 1708 0
 12768 0bbc BB1D     		adds	r3, r7, #6
 12769 0bbe 1A88     		ldrh	r2, [r3]
 12770 0bc0 B7F89836 		ldrh	r3, [r7, #1688]
 12771 0bc4 013B     		subs	r3, r3, #1
 12772 0bc6 9A42     		cmp	r2, r3
 12773 0bc8 C0F20181 		blt	.L509
1709:..\src/command_processing.c ****                 break;
1710:..\src/command_processing.c ****             
1711:..\src/command_processing.c ****             if (index == first_imu_parameter+N_IMU_Connected) {
 12774              		.loc 1 1711 0
 12775 0bcc BB1D     		adds	r3, r7, #6
 12776 0bce 1A88     		ldrh	r2, [r3]
 12777 0bd0 B7F89836 		ldrh	r3, [r7, #1688]
 12778 0bd4 8149     		ldr	r1, .L516
 12779 0bd6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 12780 0bd8 0B44     		add	r3, r3, r1
 12781 0bda 9A42     		cmp	r2, r3
 12782 0bdc 05D1     		bne	.L503
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 286


1712:..\src/command_processing.c ****                 g_mem.imu.SPI_read_delay = g_rx.buffer[3];  //SPI read delay - uint8
 12783              		.loc 1 1712 0
 12784 0bde 804B     		ldr	r3, .L516+4
 12785 0be0 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 12786 0be2 804B     		ldr	r3, .L516+8
 12787 0be4 83F80122 		strb	r2, [r3, #513]
1713:..\src/command_processing.c ****                 break;
 12788              		.loc 1 1713 0
 12789 0be8 F2E0     		b	.L501
 12790              	.L503:
1714:..\src/command_processing.c ****             }
1715:..\src/command_processing.c ****             
1716:..\src/command_processing.c ****             if (index == first_imu_parameter-1) {
 12791              		.loc 1 1716 0
 12792 0bea BB1D     		adds	r3, r7, #6
 12793 0bec 1A88     		ldrh	r2, [r3]
 12794 0bee B7F89836 		ldrh	r3, [r7, #1688]
 12795 0bf2 013B     		subs	r3, r3, #1
 12796 0bf4 9A42     		cmp	r2, r3
 12797 0bf6 05D1     		bne	.L504
1717:..\src/command_processing.c ****                 g_mem.dev.id = g_rx.buffer[3];          //ID - uint8
 12798              		.loc 1 1717 0
 12799 0bf8 794B     		ldr	r3, .L516+4
 12800 0bfa DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 12801 0bfc 794B     		ldr	r3, .L516+8
 12802 0bfe 83F8A020 		strb	r2, [r3, #160]
1718:..\src/command_processing.c ****             }
1719:..\src/command_processing.c ****             else {
1720:..\src/command_processing.c ****             
1721:..\src/command_processing.c ****                 //Set Imu table (index > = first_imu_parameter)
1722:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][0] = g_rx.buffer[3];
1723:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
1724:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
1725:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
1726:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
1727:..\src/command_processing.c ****                 
1728:..\src/command_processing.c ****                 // Recompute IMU packets dimension
1729:..\src/command_processing.c ****                 imus_data_size = 1; //header    
1730:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
1731:..\src/command_processing.c ****                 {
1732:..\src/command_processing.c ****                     single_imu_size[IMU_connected[i]] = 1 + 6*g_mem.imu.IMU_conf[IMU_connected[i]][
1733:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
1734:..\src/command_processing.c ****                 }
1735:..\src/command_processing.c ****                 imus_data_size = imus_data_size + 1;    //checksum
1736:..\src/command_processing.c ****             
1737:..\src/command_processing.c ****             }
1738:..\src/command_processing.c ****             
1739:..\src/command_processing.c ****         break;
 12803              		.loc 1 1739 0
 12804 0c02 E5E0     		b	.L501
 12805              	.L504:
1722:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
 12806              		.loc 1 1722 0
 12807 0c04 BB1D     		adds	r3, r7, #6
 12808 0c06 1A88     		ldrh	r2, [r3]
 12809 0c08 B7F89836 		ldrh	r3, [r7, #1688]
 12810 0c0c D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 287


 12811 0c0e 764A     		ldr	r2, .L516+12
 12812 0c10 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12813 0c12 1946     		mov	r1, r3
 12814 0c14 724B     		ldr	r3, .L516+4
 12815 0c16 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 12816 0c18 724A     		ldr	r2, .L516+8
 12817 0c1a 0B46     		mov	r3, r1
 12818 0c1c 9B00     		lsls	r3, r3, #2
 12819 0c1e 0B44     		add	r3, r3, r1
 12820 0c20 1344     		add	r3, r3, r2
 12821 0c22 03F20223 		addw	r3, r3, #514
 12822 0c26 0246     		mov	r2, r0
 12823 0c28 1A70     		strb	r2, [r3]
1723:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
 12824              		.loc 1 1723 0
 12825 0c2a BB1D     		adds	r3, r7, #6
 12826 0c2c 1A88     		ldrh	r2, [r3]
 12827 0c2e B7F89836 		ldrh	r3, [r7, #1688]
 12828 0c32 D31A     		subs	r3, r2, r3
 12829 0c34 6C4A     		ldr	r2, .L516+12
 12830 0c36 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12831 0c38 1946     		mov	r1, r3
 12832 0c3a 694B     		ldr	r3, .L516+4
 12833 0c3c 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 12834 0c3e 694A     		ldr	r2, .L516+8
 12835 0c40 0B46     		mov	r3, r1
 12836 0c42 9B00     		lsls	r3, r3, #2
 12837 0c44 0B44     		add	r3, r3, r1
 12838 0c46 1344     		add	r3, r3, r2
 12839 0c48 03F20323 		addw	r3, r3, #515
 12840 0c4c 0246     		mov	r2, r0
 12841 0c4e 1A70     		strb	r2, [r3]
1724:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
 12842              		.loc 1 1724 0
 12843 0c50 BB1D     		adds	r3, r7, #6
 12844 0c52 1A88     		ldrh	r2, [r3]
 12845 0c54 B7F89836 		ldrh	r3, [r7, #1688]
 12846 0c58 D31A     		subs	r3, r2, r3
 12847 0c5a 634A     		ldr	r2, .L516+12
 12848 0c5c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12849 0c5e 1946     		mov	r1, r3
 12850 0c60 5F4B     		ldr	r3, .L516+4
 12851 0c62 5879     		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 12852 0c64 5F4A     		ldr	r2, .L516+8
 12853 0c66 0B46     		mov	r3, r1
 12854 0c68 9B00     		lsls	r3, r3, #2
 12855 0c6a 0B44     		add	r3, r3, r1
 12856 0c6c 1344     		add	r3, r3, r2
 12857 0c6e 03F50173 		add	r3, r3, #516
 12858 0c72 0246     		mov	r2, r0
 12859 0c74 1A70     		strb	r2, [r3]
1725:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
 12860              		.loc 1 1725 0
 12861 0c76 BB1D     		adds	r3, r7, #6
 12862 0c78 1A88     		ldrh	r2, [r3]
 12863 0c7a B7F89836 		ldrh	r3, [r7, #1688]
 12864 0c7e D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 288


 12865 0c80 594A     		ldr	r2, .L516+12
 12866 0c82 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12867 0c84 1946     		mov	r1, r3
 12868 0c86 564B     		ldr	r3, .L516+4
 12869 0c88 9879     		ldrb	r0, [r3, #6]	@ zero_extendqisi2
 12870 0c8a 564A     		ldr	r2, .L516+8
 12871 0c8c 0B46     		mov	r3, r1
 12872 0c8e 9B00     		lsls	r3, r3, #2
 12873 0c90 0B44     		add	r3, r3, r1
 12874 0c92 1344     		add	r3, r3, r2
 12875 0c94 03F20523 		addw	r3, r3, #517
 12876 0c98 0246     		mov	r2, r0
 12877 0c9a 1A70     		strb	r2, [r3]
1726:..\src/command_processing.c ****                 
 12878              		.loc 1 1726 0
 12879 0c9c BB1D     		adds	r3, r7, #6
 12880 0c9e 1A88     		ldrh	r2, [r3]
 12881 0ca0 B7F89836 		ldrh	r3, [r7, #1688]
 12882 0ca4 D31A     		subs	r3, r2, r3
 12883 0ca6 504A     		ldr	r2, .L516+12
 12884 0ca8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12885 0caa 1946     		mov	r1, r3
 12886 0cac 4C4B     		ldr	r3, .L516+4
 12887 0cae D879     		ldrb	r0, [r3, #7]	@ zero_extendqisi2
 12888 0cb0 4C4A     		ldr	r2, .L516+8
 12889 0cb2 0B46     		mov	r3, r1
 12890 0cb4 9B00     		lsls	r3, r3, #2
 12891 0cb6 0B44     		add	r3, r3, r1
 12892 0cb8 1344     		add	r3, r3, r2
 12893 0cba 03F20623 		addw	r3, r3, #518
 12894 0cbe 0246     		mov	r2, r0
 12895 0cc0 1A70     		strb	r2, [r3]
1729:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
 12896              		.loc 1 1729 0
 12897 0cc2 4A4B     		ldr	r3, .L516+16
 12898 0cc4 0122     		movs	r2, #1
 12899 0cc6 1A60     		str	r2, [r3]
1730:..\src/command_processing.c ****                 {
 12900              		.loc 1 1730 0
 12901 0cc8 0023     		movs	r3, #0
 12902 0cca A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12903 0cce 71E0     		b	.L506
 12904              	.L507:
1732:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
 12905              		.loc 1 1732 0 discriminator 3
 12906 0cd0 B7F8A436 		ldrh	r3, [r7, #1700]
 12907 0cd4 444A     		ldr	r2, .L516+12
 12908 0cd6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12909 0cd8 1C46     		mov	r4, r3
 12910 0cda B7F8A436 		ldrh	r3, [r7, #1700]
 12911 0cde 424A     		ldr	r2, .L516+12
 12912 0ce0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12913 0ce2 1946     		mov	r1, r3
 12914 0ce4 3F4A     		ldr	r2, .L516+8
 12915 0ce6 0B46     		mov	r3, r1
 12916 0ce8 9B00     		lsls	r3, r3, #2
 12917 0cea 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 289


 12918 0cec 1344     		add	r3, r3, r2
 12919 0cee 03F20223 		addw	r3, r3, #514
 12920 0cf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12921 0cf4 1A46     		mov	r2, r3
 12922 0cf6 1346     		mov	r3, r2
 12923 0cf8 5B00     		lsls	r3, r3, #1
 12924 0cfa 1344     		add	r3, r3, r2
 12925 0cfc 5B00     		lsls	r3, r3, #1
 12926 0cfe 5A1C     		adds	r2, r3, #1
 12927 0d00 B7F8A436 		ldrh	r3, [r7, #1700]
 12928 0d04 3849     		ldr	r1, .L516+12
 12929 0d06 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12930 0d08 1846     		mov	r0, r3
 12931 0d0a 3649     		ldr	r1, .L516+8
 12932 0d0c 0346     		mov	r3, r0
 12933 0d0e 9B00     		lsls	r3, r3, #2
 12934 0d10 0344     		add	r3, r3, r0
 12935 0d12 0B44     		add	r3, r3, r1
 12936 0d14 03F20323 		addw	r3, r3, #515
 12937 0d18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12938 0d1a 1946     		mov	r1, r3
 12939 0d1c 0B46     		mov	r3, r1
 12940 0d1e 5B00     		lsls	r3, r3, #1
 12941 0d20 0B44     		add	r3, r3, r1
 12942 0d22 5B00     		lsls	r3, r3, #1
 12943 0d24 1A44     		add	r2, r2, r3
 12944 0d26 B7F8A436 		ldrh	r3, [r7, #1700]
 12945 0d2a 2F49     		ldr	r1, .L516+12
 12946 0d2c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12947 0d2e 1846     		mov	r0, r3
 12948 0d30 2C49     		ldr	r1, .L516+8
 12949 0d32 0346     		mov	r3, r0
 12950 0d34 9B00     		lsls	r3, r3, #2
 12951 0d36 0344     		add	r3, r3, r0
 12952 0d38 0B44     		add	r3, r3, r1
 12953 0d3a 03F50173 		add	r3, r3, #516
 12954 0d3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12955 0d40 1946     		mov	r1, r3
 12956 0d42 0B46     		mov	r3, r1
 12957 0d44 5B00     		lsls	r3, r3, #1
 12958 0d46 0B44     		add	r3, r3, r1
 12959 0d48 5B00     		lsls	r3, r3, #1
 12960 0d4a 1A44     		add	r2, r2, r3
 12961 0d4c B7F8A436 		ldrh	r3, [r7, #1700]
 12962 0d50 2549     		ldr	r1, .L516+12
 12963 0d52 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12964 0d54 1846     		mov	r0, r3
 12965 0d56 2349     		ldr	r1, .L516+8
 12966 0d58 0346     		mov	r3, r0
 12967 0d5a 9B00     		lsls	r3, r3, #2
 12968 0d5c 0344     		add	r3, r3, r0
 12969 0d5e 0B44     		add	r3, r3, r1
 12970 0d60 03F20523 		addw	r3, r3, #517
 12971 0d64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12972 0d66 1B01     		lsls	r3, r3, #4
 12973 0d68 1A44     		add	r2, r2, r3
 12974 0d6a B7F8A436 		ldrh	r3, [r7, #1700]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 290


 12975 0d6e 1E49     		ldr	r1, .L516+12
 12976 0d70 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12977 0d72 1846     		mov	r0, r3
 12978 0d74 1B49     		ldr	r1, .L516+8
 12979 0d76 0346     		mov	r3, r0
 12980 0d78 9B00     		lsls	r3, r3, #2
 12981 0d7a 0344     		add	r3, r3, r0
 12982 0d7c 0B44     		add	r3, r3, r1
 12983 0d7e 03F20623 		addw	r3, r3, #518
 12984 0d82 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12985 0d84 5B00     		lsls	r3, r3, #1
 12986 0d86 1344     		add	r3, r3, r2
 12987 0d88 0133     		adds	r3, r3, #1
 12988 0d8a 194A     		ldr	r2, .L516+20
 12989 0d8c 42F82430 		str	r3, [r2, r4, lsl #2]
1733:..\src/command_processing.c ****                 }
 12990              		.loc 1 1733 0 discriminator 3
 12991 0d90 B7F8A436 		ldrh	r3, [r7, #1700]
 12992 0d94 144A     		ldr	r2, .L516+12
 12993 0d96 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12994 0d98 1A46     		mov	r2, r3
 12995 0d9a 154B     		ldr	r3, .L516+20
 12996 0d9c 53F82220 		ldr	r2, [r3, r2, lsl #2]
 12997 0da0 124B     		ldr	r3, .L516+16
 12998 0da2 1B68     		ldr	r3, [r3]
 12999 0da4 1344     		add	r3, r3, r2
 13000 0da6 114A     		ldr	r2, .L516+16
 13001 0da8 1360     		str	r3, [r2]
1730:..\src/command_processing.c ****                 {
 13002              		.loc 1 1730 0 discriminator 3
 13003 0daa B7F8A436 		ldrh	r3, [r7, #1700]
 13004 0dae 0133     		adds	r3, r3, #1
 13005 0db0 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13006              	.L506:
1730:..\src/command_processing.c ****                 {
 13007              		.loc 1 1730 0 is_stmt 0 discriminator 1
 13008 0db4 094B     		ldr	r3, .L516
 13009 0db6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13010 0db8 9BB2     		uxth	r3, r3
 13011 0dba B7F8A426 		ldrh	r2, [r7, #1700]
 13012 0dbe 9A42     		cmp	r2, r3
 13013 0dc0 86D3     		bcc	.L507
1735:..\src/command_processing.c ****             
 13014              		.loc 1 1735 0 is_stmt 1
 13015 0dc2 0A4B     		ldr	r3, .L516+16
 13016 0dc4 1B68     		ldr	r3, [r3]
 13017 0dc6 0133     		adds	r3, r3, #1
 13018 0dc8 084A     		ldr	r2, .L516+16
 13019 0dca 1360     		str	r3, [r2]
 13020              		.loc 1 1739 0
 13021 0dcc 00E0     		b	.L501
 13022              	.L509:
1709:..\src/command_processing.c ****             
 13023              		.loc 1 1709 0
 13024 0dce 00BF     		nop
 13025              	.L501:
1740:..\src/command_processing.c ****     }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 291


1741:..\src/command_processing.c **** }
 13026              		.loc 1 1741 0 discriminator 1
 13027 0dd0 00BF     		nop
 13028 0dd2 07F5D567 		add	r7, r7, #1704
 13029              		.cfi_def_cfa_offset 16
 13030 0dd6 BD46     		mov	sp, r7
 13031              		.cfi_def_cfa_register 13
 13032              		@ sp needed
 13033 0dd8 B0BD     		pop	{r4, r5, r7, pc}
 13034              	.L517:
 13035 0dda 00BF     		.align	2
 13036              	.L516:
 13037 0ddc 00000000 		.word	N_IMU_Connected
 13038 0de0 00000000 		.word	g_rx
 13039 0de4 00000000 		.word	g_mem
 13040 0de8 00000000 		.word	IMU_connected
 13041 0dec 00000000 		.word	imus_data_size
 13042 0df0 00000000 		.word	single_imu_size
 13043              		.cfi_endproc
 13044              	.LFE70:
 13045              		.size	get_IMU_param_list, .-get_IMU_param_list
 13046              		.section	.text.setZeros,"ax",%progbits
 13047              		.align	2
 13048              		.global	setZeros
 13049              		.thumb
 13050              		.thumb_func
 13051              		.type	setZeros, %function
 13052              	setZeros:
 13053              	.LFB71:
1742:..\src/command_processing.c **** 
1743:..\src/command_processing.c **** //==============================================================================
1744:..\src/command_processing.c **** //                                                            COMMAND SET ZEROS
1745:..\src/command_processing.c **** //==============================================================================
1746:..\src/command_processing.c **** 
1747:..\src/command_processing.c **** void setZeros()
1748:..\src/command_processing.c **** {
 13054              		.loc 1 1748 0
 13055              		.cfi_startproc
 13056              		@ args = 0, pretend = 0, frame = 8
 13057              		@ frame_needed = 1, uses_anonymous_args = 0
 13058 0000 90B5     		push	{r4, r7, lr}
 13059              		.cfi_def_cfa_offset 12
 13060              		.cfi_offset 4, -12
 13061              		.cfi_offset 7, -8
 13062              		.cfi_offset 14, -4
 13063 0002 83B0     		sub	sp, sp, #12
 13064              		.cfi_def_cfa_offset 24
 13065 0004 00AF     		add	r7, sp, #0
 13066              		.cfi_def_cfa_register 7
1749:..\src/command_processing.c ****     uint8 CYDATA i, j;        // iterator
1750:..\src/command_processing.c ****     
1751:..\src/command_processing.c ****     for (j = 0; j < N_ENCODER_LINE_MAX; j++) {
 13067              		.loc 1 1751 0
 13068 0006 0023     		movs	r3, #0
 13069 0008 BB71     		strb	r3, [r7, #6]
 13070 000a 26E0     		b	.L519
 13071              	.L522:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 292


1752:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 13072              		.loc 1 1752 0
 13073 000c 0023     		movs	r3, #0
 13074 000e FB71     		strb	r3, [r7, #7]
 13075 0010 1DE0     		b	.L520
 13076              	.L521:
1753:..\src/command_processing.c ****             g_mem.enc[j].m_off[i] = data_encoder_raw[i];
 13077              		.loc 1 1753 0 discriminator 3
 13078 0012 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 13079 0014 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 13080 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13081 0018 1648     		ldr	r0, .L523
 13082 001a 50F82330 		ldr	r3, [r0, r3, lsl #2]
 13083 001e 1C46     		mov	r4, r3
 13084 0020 1548     		ldr	r0, .L523+4
 13085 0022 1346     		mov	r3, r2
 13086 0024 5B00     		lsls	r3, r3, #1
 13087 0026 1344     		add	r3, r3, r2
 13088 0028 9B00     		lsls	r3, r3, #2
 13089 002a 0B44     		add	r3, r3, r1
 13090 002c 6633     		adds	r3, r3, #102
 13091 002e 40F82340 		str	r4, [r0, r3, lsl #2]
1754:..\src/command_processing.c ****             g_meas[j].rot[i] = 0;
 13092              		.loc 1 1754 0 discriminator 3
 13093 0032 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 13094 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13095 0036 1149     		ldr	r1, .L523+8
 13096 0038 3420     		movs	r0, #52
 13097 003a 00FB02F2 		mul	r2, r0, r2
 13098 003e 0A44     		add	r2, r2, r1
 13099 0040 1344     		add	r3, r3, r2
 13100 0042 1833     		adds	r3, r3, #24
 13101 0044 0022     		movs	r2, #0
 13102 0046 1A70     		strb	r2, [r3]
1752:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 13103              		.loc 1 1752 0 discriminator 3
 13104 0048 FB79     		ldrb	r3, [r7, #7]
 13105 004a 0133     		adds	r3, r3, #1
 13106 004c FB71     		strb	r3, [r7, #7]
 13107              	.L520:
1752:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 13108              		.loc 1 1752 0 is_stmt 0 discriminator 1
 13109 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13110 0050 022B     		cmp	r3, #2
 13111 0052 DED9     		bls	.L521
1751:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 13112              		.loc 1 1751 0 is_stmt 1 discriminator 2
 13113 0054 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 13114 0056 0133     		adds	r3, r3, #1
 13115 0058 BB71     		strb	r3, [r7, #6]
 13116              	.L519:
1751:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 13117              		.loc 1 1751 0 is_stmt 0 discriminator 1
 13118 005a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 13119 005c 012B     		cmp	r3, #1
 13120 005e D5D9     		bls	.L522
1755:..\src/command_processing.c ****         }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 293


1756:..\src/command_processing.c ****     }
1757:..\src/command_processing.c ****     reset_last_value_flag = 1;
 13121              		.loc 1 1757 0 is_stmt 1
 13122 0060 074B     		ldr	r3, .L523+12
 13123 0062 0122     		movs	r2, #1
 13124 0064 1A70     		strb	r2, [r3]
1758:..\src/command_processing.c **** 
1759:..\src/command_processing.c ****     sendAcknowledgment(ACK_OK);
 13125              		.loc 1 1759 0
 13126 0066 0120     		movs	r0, #1
 13127 0068 FFF7FEFF 		bl	sendAcknowledgment
1760:..\src/command_processing.c **** }
 13128              		.loc 1 1760 0
 13129 006c 00BF     		nop
 13130 006e 0C37     		adds	r7, r7, #12
 13131              		.cfi_def_cfa_offset 12
 13132 0070 BD46     		mov	sp, r7
 13133              		.cfi_def_cfa_register 13
 13134              		@ sp needed
 13135 0072 90BD     		pop	{r4, r7, pc}
 13136              	.L524:
 13137              		.align	2
 13138              	.L523:
 13139 0074 00000000 		.word	data_encoder_raw
 13140 0078 00000000 		.word	g_mem
 13141 007c 00000000 		.word	g_meas
 13142 0080 00000000 		.word	reset_last_value_flag
 13143              		.cfi_endproc
 13144              	.LFE71:
 13145              		.size	setZeros, .-setZeros
 13146              		.section	.rodata
 13147              		.align	2
 13148              	.LC132:
 13149 0ea8 0D0A00   		.ascii	"\015\012\000"
 13150 0eab 00       		.align	2
 13151              	.LC133:
 13152 0eac 4669726D 		.ascii	"Firmware version: \000"
 13152      77617265 
 13152      20766572 
 13152      73696F6E 
 13152      3A2000
 13153 0ebf 00       		.align	2
 13154              	.LC134:
 13155 0ec0 41697220 		.ascii	"Air Chambers Haptic Feedback firmware v. 1.8 (PSoC5"
 13155      4368616D 
 13155      62657273 
 13155      20486170 
 13155      74696320 
 13156 0ef3 29202D20 		.ascii	") - Master configuration\000"
 13156      4D617374 
 13156      65722063 
 13156      6F6E6669 
 13156      67757261 
 13157              		.align	2
 13158              	.LC135:
 13159 0f0c 2E0D0A0D 		.ascii	".\015\012\015\012\000"
 13159      0A00
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 294


 13160 0f12 0000     		.align	2
 13161              	.LC136:
 13162 0f14 44455649 		.ascii	"DEVICE INFO\015\012\000"
 13162      43452049 
 13162      4E464F0D 
 13162      0A00
 13163 0f22 0000     		.align	2
 13164              	.LC137:
 13165 0f24 49443A20 		.ascii	"ID: %d\015\012\000"
 13165      25640D0A 
 13165      00
 13166 0f2d 000000   		.align	2
 13167              	.LC138:
 13168 0f30 44657669 		.ascii	"Device: SOFTHAND PRO\015\012\000"
 13168      63653A20 
 13168      534F4654 
 13168      48414E44 
 13168      2050524F 
 13169 0f47 00       		.align	2
 13170              	.LC139:
 13171 0f48 44657669 		.ascii	"Device: GENERIC 2 MOTORS\015\012\000"
 13171      63653A20 
 13171      47454E45 
 13171      52494320 
 13171      32204D4F 
 13172 0f63 00       		.align	2
 13173              	.LC140:
 13174 0f64 44657669 		.ascii	"Device: AIR CHAMBERS HAPTIC FEEDBACK\015\012\000"
 13174      63653A20 
 13174      41495220 
 13174      4348414D 
 13174      42455253 
 13175 0f8b 00       		.align	2
 13176              	.LC141:
 13177 0f8c 48616E64 		.ascii	"Hand side: RIGHT\015\012\000"
 13177      20736964 
 13177      653A2052 
 13177      49474854 
 13177      0D0A00
 13178 0f9f 00       		.align	2
 13179              	.LC142:
 13180 0fa0 48616E64 		.ascii	"Hand side: LEFT\015\012\000"
 13180      20736964 
 13180      653A204C 
 13180      4546540D 
 13180      0A00
 13181 0fb2 0000     		.align	2
 13182              	.LC143:
 13183 0fb4 55736572 		.ascii	"User: MARIA\015\012\000"
 13183      3A204D41 
 13183      5249410D 
 13183      0A00
 13184 0fc2 0000     		.align	2
 13185              	.LC144:
 13186 0fc4 55736572 		.ascii	"User: ROZA\015\012\000"
 13186      3A20524F 
 13186      5A410D0A 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 295


 13186      00
 13187 0fd1 000000   		.align	2
 13188              	.LC145:
 13189 0fd4 55736572 		.ascii	"User: GENERIC USER\015\012\000"
 13189      3A204745 
 13189      4E455249 
 13189      43205553 
 13189      45520D0A 
 13190 0fe9 000000   		.align	2
 13191              	.LC146:
 13192 0fec 4D4F544F 		.ascii	"MOTOR %d INFO\015\012\000"
 13192      52202564 
 13192      20494E46 
 13192      4F0D0A00 
 13193              		.align	2
 13194              	.LC147:
 13195 0ffc 4D6F746F 		.ascii	"Motor reference\000"
 13195      72207265 
 13195      66657265 
 13195      6E636500 
 13196              		.align	2
 13197              	.LC148:
 13198 100c 202D2043 		.ascii	" - Currents: \000"
 13198      75727265 
 13198      6E74733A 
 13198      2000
 13199 101a 0000     		.align	2
 13200              	.LC149:
 13201 101c 202D2050 		.ascii	" - Pwm: \000"
 13201      776D3A20 
 13201      00
 13202 1025 000000   		.align	2
 13203              	.LC150:
 13204 1028 202D2050 		.ascii	" - Position: \000"
 13204      6F736974 
 13204      696F6E3A 
 13204      2000
 13205 1036 0000     		.align	2
 13206              	.LC151:
 13207 1038 25642000 		.ascii	"%d \000"
 13208              		.align	2
 13209              	.LC152:
 13210 103c 4D6F746F 		.ascii	"Motor enabled: \000"
 13210      7220656E 
 13210      61626C65 
 13210      643A2000 
 13211              		.align	2
 13212              	.LC153:
 13213 104c 5945530D 		.ascii	"YES\015\012\000"
 13213      0A00
 13214 1052 0000     		.align	2
 13215              	.LC154:
 13216 1054 4E4F0D0A 		.ascii	"NO\015\012\000"
 13216      00
 13217 1059 000000   		.align	2
 13218              	.LC155:
 13219 105c 50574D20 		.ascii	"PWM rescaling activation: \000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 296


 13219      72657363 
 13219      616C696E 
 13219      67206163 
 13219      74697661 
 13220 1077 00       		.align	2
 13221              	.LC156:
 13222 1078 5945530A 		.ascii	"YES\012\000"
 13222      00
 13223 107d 000000   		.align	2
 13224              	.LC157:
 13225 1080 4E4F0A00 		.ascii	"NO\012\000"
 13226              		.align	2
 13227              	.LC158:
 13228 1084 50574D20 		.ascii	"PWM Limit: %d\015\012\000"
 13228      4C696D69 
 13228      743A2025 
 13228      640D0A00 
 13229              		.align	2
 13230              	.LC159:
 13231 1094 0D0A4D45 		.ascii	"\015\012MEASUREMENTS INFO\015\012\000"
 13231      41535552 
 13231      454D454E 
 13231      54532049 
 13231      4E464F0D 
 13232 10aa 0000     		.align	2
 13233              	.LC160:
 13234 10ac 53656E73 		.ascii	"Sensor value: \000"
 13234      6F722076 
 13234      616C7565 
 13234      3A2000
 13235 10bb 00       		.align	2
 13236              	.LC161:
 13237 10bc 256400   		.ascii	"%d\000"
 13238 10bf 00       		.align	2
 13239              	.LC162:
 13240 10c0 2C2000   		.ascii	", \000"
 13241 10c3 00       		.align	2
 13242              	.LC163:
 13243 10c4 42617474 		.ascii	"Battery %d Voltage (mV): %ld\000"
 13243      65727920 
 13243      25642056 
 13243      6F6C7461 
 13243      67652028 
 13244 10e1 000000   		.align	2
 13245              	.LC164:
 13246 10e4 46756C6C 		.ascii	"Full charge power tension %d (mV): %ld\000"
 13246      20636861 
 13246      72676520 
 13246      706F7765 
 13246      72207465 
 13247 110b 00       		.align	2
 13248              	.LC165:
 13249 110c 43757272 		.ascii	"Current %d (mA): %ld\000"
 13249      656E7420 
 13249      25642028 
 13249      6D41293A 
 13249      20256C64 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 297


 13250 1121 000000   		.align	2
 13251              	.LC166:
 13252 1124 4C617374 		.ascii	"Last Grasp Hold Current %d (mA): %ld\000"
 13252      20477261 
 13252      73702048 
 13252      6F6C6420 
 13252      43757272 
 13253 1149 000000   		.align	2
 13254              	.LC167:
 13255 114c 0D0A4D4F 		.ascii	"\015\012MOTOR %d CONFIGURATION\015\012\000"
 13255      544F5220 
 13255      25642043 
 13255      4F4E4649 
 13255      47555241 
 13256 1167 00       		.align	2
 13257              	.LC168:
 13258 1168 50494420 		.ascii	"PID Controller: \000"
 13258      436F6E74 
 13258      726F6C6C 
 13258      65723A20 
 13258      00
 13259              		.global	__aeabi_i2d
 13260              		.global	__aeabi_ddiv
 13261 1179 000000   		.align	2
 13262              	.LC169:
 13263 117c 50202D3E 		.ascii	"P -> %f  \000"
 13263      20256620 
 13263      2000
 13264 1186 0000     		.align	2
 13265              	.LC170:
 13266 1188 49202D3E 		.ascii	"I -> %f  \000"
 13266      20256620 
 13266      2000
 13267 1192 0000     		.align	2
 13268              	.LC171:
 13269 1194 44202D3E 		.ascii	"D -> %f\015\012\000"
 13269      2025660D 
 13269      0A00
 13270 119e 0000     		.align	2
 13271              	.LC172:
 13272 11a0 43757272 		.ascii	"Current PID Controller: \000"
 13272      656E7420 
 13272      50494420 
 13272      436F6E74 
 13272      726F6C6C 
 13273 11b9 000000   		.align	2
 13274              	.LC173:
 13275 11bc 53746172 		.ascii	"Startup activation: YES\015\012\000"
 13275      74757020 
 13275      61637469 
 13275      76617469 
 13275      6F6E3A20 
 13276 11d6 0000     		.align	2
 13277              	.LC174:
 13278 11d8 53746172 		.ascii	"Startup activation: NO\015\012\000"
 13278      74757020 
 13278      61637469 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 298


 13278      76617469 
 13278      6F6E3A20 
 13279 11f1 000000   		.align	2
 13280              	.LC175:
 13281 11f4 496E7075 		.ascii	"Input mode: USB\015\012\000"
 13281      74206D6F 
 13281      64653A20 
 13281      5553420D 
 13281      0A00
 13282 1206 0000     		.align	2
 13283              	.LC176:
 13284 1208 496E7075 		.ascii	"Input mode: Handle\015\012\000"
 13284      74206D6F 
 13284      64653A20 
 13284      48616E64 
 13284      6C650D0A 
 13285 121d 000000   		.align	2
 13286              	.LC177:
 13287 1220 496E7075 		.ascii	"Input mode: EMG proportional\015\012\000"
 13287      74206D6F 
 13287      64653A20 
 13287      454D4720 
 13287      70726F70 
 13288 123f 00       		.align	2
 13289              	.LC178:
 13290 1240 496E7075 		.ascii	"Input mode: EMG integral\015\012\000"
 13290      74206D6F 
 13290      64653A20 
 13290      454D4720 
 13290      696E7465 
 13291 125b 00       		.align	2
 13292              	.LC179:
 13293 125c 496E7075 		.ascii	"Input mode: EMG FCFS\015\012\000"
 13293      74206D6F 
 13293      64653A20 
 13293      454D4720 
 13293      46434653 
 13294 1273 00       		.align	2
 13295              	.LC180:
 13296 1274 496E7075 		.ascii	"Input mode: EMG FCFS ADV\015\012\000"
 13296      74206D6F 
 13296      64653A20 
 13296      454D4720 
 13296      46434653 
 13297 128f 00       		.align	2
 13298              	.LC181:
 13299 1290 496E7075 		.ascii	"Input mode: EMG proportional Normally Closed\015\012"
 13299      74206D6F 
 13299      64653A20 
 13299      454D4720 
 13299      70726F70 
 13300 12be 00       		.ascii	"\000"
 13301 12bf 00       		.align	2
 13302              	.LC182:
 13303 12c0 436F6E74 		.ascii	"Control mode: Position\015\012\000"
 13303      726F6C20 
 13303      6D6F6465 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 299


 13303      3A20506F 
 13303      73697469 
 13304 12d9 000000   		.align	2
 13305              	.LC183:
 13306 12dc 436F6E74 		.ascii	"Control mode: PWM\015\012\000"
 13306      726F6C20 
 13306      6D6F6465 
 13306      3A205057 
 13306      4D0D0A00 
 13307              		.align	2
 13308              	.LC184:
 13309 12f0 436F6E74 		.ascii	"Control mode: Current\015\012\000"
 13309      726F6C20 
 13309      6D6F6465 
 13309      3A204375 
 13309      7272656E 
 13310              		.align	2
 13311              	.LC185:
 13312 1308 436F6E74 		.ascii	"Control mode: Position and Current\015\012\000"
 13312      726F6C20 
 13312      6D6F6465 
 13312      3A20506F 
 13312      73697469 
 13313 132d 000000   		.align	2
 13314              	.LC186:
 13315 1330 4162736F 		.ascii	"Absolute encoder position: YES\015\012\000"
 13315      6C757465 
 13315      20656E63 
 13315      6F646572 
 13315      20706F73 
 13316 1351 000000   		.align	2
 13317              	.LC187:
 13318 1354 4162736F 		.ascii	"Absolute encoder position: NO\015\012\000"
 13318      6C757465 
 13318      20656E63 
 13318      6F646572 
 13318      20706F73 
 13319              		.align	2
 13320              	.LC188:
 13321 1374 4D6F746F 		.ascii	"Motor-Handle Ratio: %d\015\012\000"
 13321      722D4861 
 13321      6E646C65 
 13321      20526174 
 13321      696F3A20 
 13322 138d 000000   		.align	2
 13323              	.LC189:
 13324 1390 53656E73 		.ascii	"Sensor resolution: \000"
 13324      6F722072 
 13324      65736F6C 
 13324      7574696F 
 13324      6E3A2000 
 13325              		.align	2
 13326              	.LC190:
 13327 13a4 4D656173 		.ascii	"Measurement Offset: \000"
 13327      7572656D 
 13327      656E7420 
 13327      4F666673 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 300


 13327      65743A20 
 13328 13b9 000000   		.align	2
 13329              	.LC191:
 13330 13bc 256C6400 		.ascii	"%ld\000"
 13331              		.align	2
 13332              	.LC192:
 13333 13c0 4D656173 		.ascii	"Measurement Multiplier: \000"
 13333      7572656D 
 13333      656E7420 
 13333      4D756C74 
 13333      69706C69 
 13334              		.global	__aeabi_f2d
 13335 13d9 000000   		.align	2
 13336              	.LC193:
 13337 13dc 256600   		.ascii	"%f\000"
 13338 13df 00       		.align	2
 13339              	.LC194:
 13340 13e0 43757272 		.ascii	"Current lookup table: %f, %f, %f, %f, %f, %f\015\012"
 13340      656E7420 
 13340      6C6F6F6B 
 13340      75702074 
 13340      61626C65 
 13341 140e 00       		.ascii	"\000"
 13342 140f 00       		.align	2
 13343              	.LC195:
 13344 1410 506F7369 		.ascii	"Position limit active: %d\000"
 13344      74696F6E 
 13344      206C696D 
 13344      69742061 
 13344      63746976 
 13345 142a 0000     		.align	2
 13346              	.LC196:
 13347 142c 506F7369 		.ascii	"Position limit motor: inf -> %ld  \000"
 13347      74696F6E 
 13347      206C696D 
 13347      6974206D 
 13347      6F746F72 
 13348 144f 00       		.align	2
 13349              	.LC197:
 13350 1450 73757020 		.ascii	"sup -> %ld\015\012\000"
 13350      2D3E2025 
 13350      6C640D0A 
 13350      00
 13351 145d 000000   		.align	2
 13352              	.LC198:
 13353 1460 4D617820 		.ascii	"Max step pos and neg: %d %d\000"
 13353      73746570 
 13353      20706F73 
 13353      20616E64 
 13353      206E6567 
 13354              		.align	2
 13355              	.LC199:
 13356 147c 43757272 		.ascii	"Current limit: %d\015\012\000"
 13356      656E7420 
 13356      6C696D69 
 13356      743A2025 
 13356      640D0A00 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 301


 13357              		.align	2
 13358              	.LC200:
 13359 1490 454D4720 		.ascii	"EMG CONFIGURATION\015\012\000"
 13359      434F4E46 
 13359      49475552 
 13359      4154494F 
 13359      4E0D0A00 
 13360              		.align	2
 13361              	.LC201:
 13362 14a4 454D4720 		.ascii	"EMG thresholds [0 - 1024]: %u, %u\000"
 13362      74687265 
 13362      73686F6C 
 13362      6473205B 
 13362      30202D20 
 13363 14c6 0000     		.align	2
 13364              	.LC202:
 13365 14c8 454D4720 		.ascii	"EMG max values [0 - 4096]: %lu, %lu\000"
 13365      6D617820 
 13365      76616C75 
 13365      6573205B 
 13365      30202D20 
 13366              		.align	2
 13367              	.LC203:
 13368 14ec 454D4720 		.ascii	"EMG inversion: YES\015\012\000"
 13368      696E7665 
 13368      7273696F 
 13368      6E3A2059 
 13368      45530D0A 
 13369 1501 000000   		.align	2
 13370              	.LC204:
 13371 1504 454D4720 		.ascii	"EMG inversion: NO\015\012\000"
 13371      696E7665 
 13371      7273696F 
 13371      6E3A204E 
 13371      4F0D0A00 
 13372              		.align	2
 13373              	.LC205:
 13374 1518 43616C69 		.ascii	"Calibration enabled: YES\015\012\000"
 13374      62726174 
 13374      696F6E20 
 13374      656E6162 
 13374      6C65643A 
 13375 1533 00       		.align	2
 13376              	.LC206:
 13377 1534 43616C69 		.ascii	"Calibration enabled: NO\015\012\000"
 13377      62726174 
 13377      696F6E20 
 13377      656E6162 
 13377      6C65643A 
 13378 154e 0000     		.align	2
 13379              	.LC207:
 13380 1550 454D4720 		.ascii	"EMG max speed: %d\000"
 13380      6D617820 
 13380      73706565 
 13380      643A2025 
 13380      6400
 13381 1562 0000     		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 302


 13382              	.LC208:
 13383 1564 41646469 		.ascii	"Additional ADC sensors value:\015\012\000"
 13383      74696F6E 
 13383      616C2041 
 13383      44432073 
 13383      656E736F 
 13384              		.align	2
 13385              	.LC209:
 13386 1584 41444320 		.ascii	"ADC %d -> %d\000"
 13386      2564202D 
 13386      3E202564 
 13386      00
 13387 1591 000000   		.align	2
 13388              	.LC210:
 13389 1594 454D4720 		.ascii	"EMG input %d -> %d\000"
 13389      696E7075 
 13389      74202564 
 13389      202D3E20 
 13389      256400
 13390 15a7 00       		.align	2
 13391              	.LC211:
 13392 15a8 52657374 		.ascii	"Rest time delay (ms): %d\000"
 13392      2074696D 
 13392      65206465 
 13392      6C617920 
 13392      286D7329 
 13393 15c1 000000   		.align	2
 13394              	.LC212:
 13395 15c4 52657374 		.ascii	"Rest velocity closure (ticks/sec): %d\000"
 13395      2076656C 
 13395      6F636974 
 13395      7920636C 
 13395      6F737572 
 13396 15ea 0000     		.align	2
 13397              	.LC213:
 13398 15ec 52657374 		.ascii	"Rest position: %d\000"
 13398      20706F73 
 13398      6974696F 
 13398      6E3A2025 
 13398      6400
 13399 15fe 0000     		.align	2
 13400              	.LC214:
 13401 1600 494D5520 		.ascii	"IMU Connected: %d\015\012\000"
 13401      436F6E6E 
 13401      65637465 
 13401      643A2025 
 13401      640D0A00 
 13402              		.align	2
 13403              	.LC215:
 13404 1614 494D5573 		.ascii	"IMUs CONFIGURATION\015\012\000"
 13404      20434F4E 
 13404      46494755 
 13404      52415449 
 13404      4F4E0D0A 
 13405 1629 000000   		.align	2
 13406              	.LC216:
 13407 162c 496D7520 		.ascii	"Imu %d \015\012\011ID: %d\015\012\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 303


 13407      2564200D 
 13407      0A094944 
 13407      3A202564 
 13407      0D0A00
 13408 163f 00       		.align	2
 13409              	.LC217:
 13410 1640 09416363 		.ascii	"\011Accelerometers: \000"
 13410      656C6572 
 13410      6F6D6574 
 13410      6572733A 
 13410      2000
 13411 1652 0000     		.align	2
 13412              	.LC218:
 13413 1654 09477972 		.ascii	"\011Gyroscopes: \000"
 13413      6F73636F 
 13413      7065733A 
 13413      2000
 13414 1662 0000     		.align	2
 13415              	.LC219:
 13416 1664 094D6167 		.ascii	"\011Magnetometers: \000"
 13416      6E65746F 
 13416      6D657465 
 13416      72733A20 
 13416      00
 13417 1675 000000   		.align	2
 13418              	.LC220:
 13419 1678 09517561 		.ascii	"\011Quaternion: \000"
 13419      7465726E 
 13419      696F6E3A 
 13419      2000
 13420 1686 0000     		.align	2
 13421              	.LC221:
 13422 1688 0954656D 		.ascii	"\011Temperature: \000"
 13422      70657261 
 13422      74757265 
 13422      3A2000
 13423 1697 00       		.align	2
 13424              	.LC222:
 13425 1698 536C6176 		.ascii	"Slave communication active: YES\015\012\000"
 13425      6520636F 
 13425      6D6D756E 
 13425      69636174 
 13425      696F6E20 
 13426 16ba 0000     		.align	2
 13427              	.LC223:
 13428 16bc 536C6176 		.ascii	"Slave communication active: NO\015\012\000"
 13428      6520636F 
 13428      6D6D756E 
 13428      69636174 
 13428      696F6E20 
 13429 16dd 000000   		.align	2
 13430              	.LC224:
 13431 16e0 536C6176 		.ascii	"Slave ID: %d\015\012\000"
 13431      65204944 
 13431      3A202564 
 13431      0D0A00
 13432 16ef 00       		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 304


 13433              	.LC225:
 13434 16f0 4C617374 		.ascii	"Last FW cycle time: %u us\015\012\000"
 13434      20465720 
 13434      6379636C 
 13434      65207469 
 13434      6D653A20 
 13435              		.align	2
 13436              	.LC226:
 13437 170c 0D0A0000 		.ascii	"\015\012\000\000"
 13438              		.section	.text.prepare_generic_info,"ax",%progbits
 13439              		.align	2
 13440              		.global	prepare_generic_info
 13441              		.thumb
 13442              		.thumb_func
 13443              		.type	prepare_generic_info, %function
 13444              	prepare_generic_info:
 13445              	.LFB72:
1761:..\src/command_processing.c **** 
1762:..\src/command_processing.c **** //==============================================================================
1763:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
1764:..\src/command_processing.c **** //==============================================================================
1765:..\src/command_processing.c **** 
1766:..\src/command_processing.c **** void prepare_generic_info(char *info_string)
1767:..\src/command_processing.c **** {
 13446              		.loc 1 1767 0
 13447              		.cfi_startproc
 13448              		@ args = 0, pretend = 0, frame = 152
 13449              		@ frame_needed = 1, uses_anonymous_args = 0
 13450 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 13451              		.cfi_def_cfa_offset 36
 13452              		.cfi_offset 4, -36
 13453              		.cfi_offset 5, -32
 13454              		.cfi_offset 6, -28
 13455              		.cfi_offset 7, -24
 13456              		.cfi_offset 8, -20
 13457              		.cfi_offset 9, -16
 13458              		.cfi_offset 10, -12
 13459              		.cfi_offset 11, -8
 13460              		.cfi_offset 14, -4
 13461 0004 B1B0     		sub	sp, sp, #196
 13462              		.cfi_def_cfa_offset 232
 13463 0006 0AAF     		add	r7, sp, #40
 13464              		.cfi_def_cfa 7, 192
 13465 0008 7861     		str	r0, [r7, #20]
1768:..\src/command_processing.c ****     int i;
1769:..\src/command_processing.c **** 
1770:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem; 
 13466              		.loc 1 1770 0
 13467 000a C64B     		ldr	r3, .L622
 13468 000c C7F88C30 		str	r3, [r7, #140]
1771:..\src/command_processing.c ****     
1772:..\src/command_processing.c ****     if(c_mem.dev.id != 250){                //To avoid dummy board ping
 13469              		.loc 1 1772 0
 13470 0010 C44B     		ldr	r3, .L622
 13471 0012 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 13472 0016 FA2B     		cmp	r3, #250
 13473 0018 01F09585 		beq	.L620
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 305


 13474              	.LBB16:
1773:..\src/command_processing.c ****         char str[100];
1774:..\src/command_processing.c ****         strcpy(info_string, "");
 13475              		.loc 1 1774 0
 13476 001c 7B69     		ldr	r3, [r7, #20]
 13477 001e 0022     		movs	r2, #0
 13478 0020 1A70     		strb	r2, [r3]
1775:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 13479              		.loc 1 1775 0
 13480 0022 7869     		ldr	r0, [r7, #20]
 13481 0024 FFF7FEFF 		bl	strlen
 13482 0028 0346     		mov	r3, r0
 13483 002a 1A46     		mov	r2, r3
 13484 002c 7B69     		ldr	r3, [r7, #20]
 13485 002e 1344     		add	r3, r3, r2
 13486 0030 BD4A     		ldr	r2, .L622+4
 13487 0032 1188     		ldrh	r1, [r2]	@ unaligned
 13488 0034 9278     		ldrb	r2, [r2, #2]
 13489 0036 1980     		strh	r1, [r3]	@ unaligned
 13490 0038 9A70     		strb	r2, [r3, #2]
1776:..\src/command_processing.c ****         strcat(info_string, "Firmware version: ");
 13491              		.loc 1 1776 0
 13492 003a 7869     		ldr	r0, [r7, #20]
 13493 003c FFF7FEFF 		bl	strlen
 13494 0040 0346     		mov	r3, r0
 13495 0042 1A46     		mov	r2, r3
 13496 0044 7B69     		ldr	r3, [r7, #20]
 13497 0046 1344     		add	r3, r3, r2
 13498 0048 B84A     		ldr	r2, .L622+8
 13499 004a 1D46     		mov	r5, r3
 13500 004c 1446     		mov	r4, r2
 13501 004e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13502 0050 2860     		str	r0, [r5]	@ unaligned
 13503 0052 6960     		str	r1, [r5, #4]	@ unaligned
 13504 0054 AA60     		str	r2, [r5, #8]	@ unaligned
 13505 0056 EB60     		str	r3, [r5, #12]	@ unaligned
 13506 0058 2388     		ldrh	r3, [r4]	@ unaligned
 13507 005a A278     		ldrb	r2, [r4, #2]
 13508 005c 2B82     		strh	r3, [r5, #16]	@ unaligned
 13509 005e 1346     		mov	r3, r2
 13510 0060 AB74     		strb	r3, [r5, #18]
1777:..\src/command_processing.c ****         strcat(info_string, VERSION);
 13511              		.loc 1 1777 0
 13512 0062 7869     		ldr	r0, [r7, #20]
 13513 0064 FFF7FEFF 		bl	strlen
 13514 0068 0346     		mov	r3, r0
 13515 006a 1A46     		mov	r2, r3
 13516 006c 7B69     		ldr	r3, [r7, #20]
 13517 006e 1344     		add	r3, r3, r2
 13518 0070 AF4A     		ldr	r2, .L622+12
 13519 0072 1846     		mov	r0, r3
 13520 0074 1146     		mov	r1, r2
 13521 0076 4C23     		movs	r3, #76
 13522 0078 1A46     		mov	r2, r3
 13523 007a FFF7FEFF 		bl	memcpy
1778:..\src/command_processing.c ****         strcat(info_string, ".\r\n\r\n");      
 13524              		.loc 1 1778 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 306


 13525 007e 7869     		ldr	r0, [r7, #20]
 13526 0080 FFF7FEFF 		bl	strlen
 13527 0084 0346     		mov	r3, r0
 13528 0086 1A46     		mov	r2, r3
 13529 0088 7B69     		ldr	r3, [r7, #20]
 13530 008a 1344     		add	r3, r3, r2
 13531 008c A94A     		ldr	r2, .L622+16
 13532 008e 1068     		ldr	r0, [r2]	@ unaligned
 13533 0090 1860     		str	r0, [r3]	@ unaligned
 13534 0092 9288     		ldrh	r2, [r2, #4]	@ unaligned
 13535 0094 9A80     		strh	r2, [r3, #4]	@ unaligned
1779:..\src/command_processing.c **** 
1780:..\src/command_processing.c ****         strcat(info_string, "DEVICE INFO\r\n");
 13536              		.loc 1 1780 0
 13537 0096 7869     		ldr	r0, [r7, #20]
 13538 0098 FFF7FEFF 		bl	strlen
 13539 009c 0346     		mov	r3, r0
 13540 009e 1A46     		mov	r2, r3
 13541 00a0 7B69     		ldr	r3, [r7, #20]
 13542 00a2 1344     		add	r3, r3, r2
 13543 00a4 A44A     		ldr	r2, .L622+20
 13544 00a6 1C46     		mov	r4, r3
 13545 00a8 1346     		mov	r3, r2
 13546 00aa 07CB     		ldmia	r3!, {r0, r1, r2}
 13547 00ac 2060     		str	r0, [r4]	@ unaligned
 13548 00ae 6160     		str	r1, [r4, #4]	@ unaligned
 13549 00b0 A260     		str	r2, [r4, #8]	@ unaligned
 13550 00b2 1B88     		ldrh	r3, [r3]	@ unaligned
 13551 00b4 A381     		strh	r3, [r4, #12]	@ unaligned
1781:..\src/command_processing.c ****         sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 13552              		.loc 1 1781 0
 13553 00b6 D7F88C30 		ldr	r3, [r7, #140]
 13554 00ba 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 13555 00be 1A46     		mov	r2, r3
 13556 00c0 07F11C03 		add	r3, r7, #28
 13557 00c4 9D49     		ldr	r1, .L622+24
 13558 00c6 1846     		mov	r0, r3
 13559 00c8 FFF7FEFF 		bl	sprintf
1782:..\src/command_processing.c ****         strcat(info_string, str);
 13560              		.loc 1 1782 0
 13561 00cc 07F11C03 		add	r3, r7, #28
 13562 00d0 1946     		mov	r1, r3
 13563 00d2 7869     		ldr	r0, [r7, #20]
 13564 00d4 FFF7FEFF 		bl	strcat
1783:..\src/command_processing.c ****         switch(MEM_P->dev.dev_type){
 13565              		.loc 1 1783 0
 13566 00d8 D7F88C30 		ldr	r3, [r7, #140]
 13567 00dc 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 13568 00e0 012B     		cmp	r3, #1
 13569 00e2 1BD0     		beq	.L528
 13570 00e4 022B     		cmp	r3, #2
 13571 00e6 31D0     		beq	.L529
 13572 00e8 002B     		cmp	r3, #0
 13573 00ea 00D0     		beq	.L530
1784:..\src/command_processing.c ****             case SOFTHAND_PRO:
1785:..\src/command_processing.c ****                 strcat(info_string, "Device: SOFTHAND PRO\r\n");
1786:..\src/command_processing.c ****                 break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 307


1787:..\src/command_processing.c ****             case GENERIC_2_MOTORS:
1788:..\src/command_processing.c ****                 strcat(info_string, "Device: GENERIC 2 MOTORS\r\n");
1789:..\src/command_processing.c ****                 break;
1790:..\src/command_processing.c ****             case AIR_CHAMBERS_FB:
1791:..\src/command_processing.c ****                 strcat(info_string, "Device: AIR CHAMBERS HAPTIC FEEDBACK\r\n");
1792:..\src/command_processing.c ****                 break;
1793:..\src/command_processing.c ****             default:
1794:..\src/command_processing.c ****                 break;
 13574              		.loc 1 1794 0
 13575 00ec 4FE0     		b	.L531
 13576              	.L530:
1785:..\src/command_processing.c ****                 break;
 13577              		.loc 1 1785 0
 13578 00ee 7869     		ldr	r0, [r7, #20]
 13579 00f0 FFF7FEFF 		bl	strlen
 13580 00f4 0346     		mov	r3, r0
 13581 00f6 1A46     		mov	r2, r3
 13582 00f8 7B69     		ldr	r3, [r7, #20]
 13583 00fa 1344     		add	r3, r3, r2
 13584 00fc 904A     		ldr	r2, .L622+28
 13585 00fe 1C46     		mov	r4, r3
 13586 0100 1546     		mov	r5, r2
 13587 0102 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 13588 0104 2060     		str	r0, [r4]	@ unaligned
 13589 0106 6160     		str	r1, [r4, #4]	@ unaligned
 13590 0108 A260     		str	r2, [r4, #8]	@ unaligned
 13591 010a E360     		str	r3, [r4, #12]	@ unaligned
 13592 010c 2868     		ldr	r0, [r5]	@ unaligned
 13593 010e 2061     		str	r0, [r4, #16]	@ unaligned
 13594 0110 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 13595 0112 AA79     		ldrb	r2, [r5, #6]
 13596 0114 A382     		strh	r3, [r4, #20]	@ unaligned
 13597 0116 1346     		mov	r3, r2
 13598 0118 A375     		strb	r3, [r4, #22]
1786:..\src/command_processing.c ****             case GENERIC_2_MOTORS:
 13599              		.loc 1 1786 0
 13600 011a 38E0     		b	.L531
 13601              	.L528:
1788:..\src/command_processing.c ****                 break;
 13602              		.loc 1 1788 0
 13603 011c 7869     		ldr	r0, [r7, #20]
 13604 011e FFF7FEFF 		bl	strlen
 13605 0122 0346     		mov	r3, r0
 13606 0124 1A46     		mov	r2, r3
 13607 0126 7B69     		ldr	r3, [r7, #20]
 13608 0128 1344     		add	r3, r3, r2
 13609 012a 864A     		ldr	r2, .L622+32
 13610 012c 1D46     		mov	r5, r3
 13611 012e 1446     		mov	r4, r2
 13612 0130 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13613 0132 2860     		str	r0, [r5]	@ unaligned
 13614 0134 6960     		str	r1, [r5, #4]	@ unaligned
 13615 0136 AA60     		str	r2, [r5, #8]	@ unaligned
 13616 0138 EB60     		str	r3, [r5, #12]	@ unaligned
 13617 013a 03CC     		ldmia	r4!, {r0, r1}
 13618 013c 2861     		str	r0, [r5, #16]	@ unaligned
 13619 013e 6961     		str	r1, [r5, #20]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 308


 13620 0140 2388     		ldrh	r3, [r4]	@ unaligned
 13621 0142 A278     		ldrb	r2, [r4, #2]
 13622 0144 2B83     		strh	r3, [r5, #24]	@ unaligned
 13623 0146 1346     		mov	r3, r2
 13624 0148 AB76     		strb	r3, [r5, #26]
1789:..\src/command_processing.c ****             case AIR_CHAMBERS_FB:
 13625              		.loc 1 1789 0
 13626 014a 20E0     		b	.L531
 13627              	.L529:
1791:..\src/command_processing.c ****                 break;
 13628              		.loc 1 1791 0
 13629 014c 7869     		ldr	r0, [r7, #20]
 13630 014e FFF7FEFF 		bl	strlen
 13631 0152 0346     		mov	r3, r0
 13632 0154 1A46     		mov	r2, r3
 13633 0156 7B69     		ldr	r3, [r7, #20]
 13634 0158 1344     		add	r3, r3, r2
 13635 015a 7B4A     		ldr	r2, .L622+36
 13636 015c 1446     		mov	r4, r2
 13637 015e 9E46     		mov	lr, r3
 13638 0160 04F1200C 		add	ip, r4, #32
 13639              	.L532:
 13640 0164 7546     		mov	r5, lr
 13641 0166 2646     		mov	r6, r4
 13642 0168 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 13643 016a 2860     		str	r0, [r5]	@ unaligned
 13644 016c 6960     		str	r1, [r5, #4]	@ unaligned
 13645 016e AA60     		str	r2, [r5, #8]	@ unaligned
 13646 0170 EB60     		str	r3, [r5, #12]	@ unaligned
 13647 0172 1034     		adds	r4, r4, #16
 13648 0174 0EF1100E 		add	lr, lr, #16
 13649 0178 6445     		cmp	r4, ip
 13650 017a F3D1     		bne	.L532
 13651 017c 7346     		mov	r3, lr
 13652 017e 2246     		mov	r2, r4
 13653 0180 1068     		ldr	r0, [r2]	@ unaligned
 13654 0182 1860     		str	r0, [r3]	@ unaligned
 13655 0184 9188     		ldrh	r1, [r2, #4]	@ unaligned
 13656 0186 9279     		ldrb	r2, [r2, #6]
 13657 0188 9980     		strh	r1, [r3, #4]	@ unaligned
 13658 018a 9A71     		strb	r2, [r3, #6]
1792:..\src/command_processing.c ****             default:
 13659              		.loc 1 1792 0
 13660 018c 00BF     		nop
 13661              	.L531:
1795:..\src/command_processing.c ****         }
1796:..\src/command_processing.c ****         
1797:..\src/command_processing.c ****         switch(MEM_P->dev.right_left){
 13662              		.loc 1 1797 0
 13663 018e D7F88C30 		ldr	r3, [r7, #140]
 13664 0192 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 13665 0196 002B     		cmp	r3, #0
 13666 0198 02D0     		beq	.L534
 13667 019a 012B     		cmp	r3, #1
 13668 019c 15D0     		beq	.L535
 13669 019e 26E0     		b	.L533
 13670              	.L534:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 309


1798:..\src/command_processing.c ****             case RIGHT_HAND:
1799:..\src/command_processing.c ****                 strcat(info_string, "Hand side: RIGHT\r\n");
 13671              		.loc 1 1799 0
 13672 01a0 7869     		ldr	r0, [r7, #20]
 13673 01a2 FFF7FEFF 		bl	strlen
 13674 01a6 0346     		mov	r3, r0
 13675 01a8 1A46     		mov	r2, r3
 13676 01aa 7B69     		ldr	r3, [r7, #20]
 13677 01ac 1344     		add	r3, r3, r2
 13678 01ae 674A     		ldr	r2, .L622+40
 13679 01b0 1D46     		mov	r5, r3
 13680 01b2 1446     		mov	r4, r2
 13681 01b4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13682 01b6 2860     		str	r0, [r5]	@ unaligned
 13683 01b8 6960     		str	r1, [r5, #4]	@ unaligned
 13684 01ba AA60     		str	r2, [r5, #8]	@ unaligned
 13685 01bc EB60     		str	r3, [r5, #12]	@ unaligned
 13686 01be 2388     		ldrh	r3, [r4]	@ unaligned
 13687 01c0 A278     		ldrb	r2, [r4, #2]
 13688 01c2 2B82     		strh	r3, [r5, #16]	@ unaligned
 13689 01c4 1346     		mov	r3, r2
 13690 01c6 AB74     		strb	r3, [r5, #18]
1800:..\src/command_processing.c ****                 break;
 13691              		.loc 1 1800 0
 13692 01c8 11E0     		b	.L533
 13693              	.L535:
1801:..\src/command_processing.c ****             case LEFT_HAND:
1802:..\src/command_processing.c ****                 strcat(info_string, "Hand side: LEFT\r\n");
 13694              		.loc 1 1802 0
 13695 01ca 7869     		ldr	r0, [r7, #20]
 13696 01cc FFF7FEFF 		bl	strlen
 13697 01d0 0346     		mov	r3, r0
 13698 01d2 1A46     		mov	r2, r3
 13699 01d4 7B69     		ldr	r3, [r7, #20]
 13700 01d6 1344     		add	r3, r3, r2
 13701 01d8 5D4A     		ldr	r2, .L622+44
 13702 01da 1D46     		mov	r5, r3
 13703 01dc 1446     		mov	r4, r2
 13704 01de 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13705 01e0 2860     		str	r0, [r5]	@ unaligned
 13706 01e2 6960     		str	r1, [r5, #4]	@ unaligned
 13707 01e4 AA60     		str	r2, [r5, #8]	@ unaligned
 13708 01e6 EB60     		str	r3, [r5, #12]	@ unaligned
 13709 01e8 2388     		ldrh	r3, [r4]	@ unaligned
 13710 01ea 2B82     		strh	r3, [r5, #16]	@ unaligned
1803:..\src/command_processing.c ****                 break;
 13711              		.loc 1 1803 0
 13712 01ec 00BF     		nop
 13713              	.L533:
1804:..\src/command_processing.c ****         }
1805:..\src/command_processing.c **** 
1806:..\src/command_processing.c ****         switch(MEM_P->dev.user_id) {
 13714              		.loc 1 1806 0
 13715 01ee D7F88C30 		ldr	r3, [r7, #140]
 13716 01f2 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 13717 01f6 012B     		cmp	r3, #1
 13718 01f8 02D0     		beq	.L537
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 310


 13719 01fa 022B     		cmp	r3, #2
 13720 01fc 11D0     		beq	.L538
 13721 01fe 21E0     		b	.L619
 13722              	.L537:
1807:..\src/command_processing.c ****             case MARIA:
1808:..\src/command_processing.c ****                 strcat(info_string, "User: MARIA\r\n");
 13723              		.loc 1 1808 0
 13724 0200 7869     		ldr	r0, [r7, #20]
 13725 0202 FFF7FEFF 		bl	strlen
 13726 0206 0346     		mov	r3, r0
 13727 0208 1A46     		mov	r2, r3
 13728 020a 7B69     		ldr	r3, [r7, #20]
 13729 020c 1344     		add	r3, r3, r2
 13730 020e 514A     		ldr	r2, .L622+48
 13731 0210 1C46     		mov	r4, r3
 13732 0212 1346     		mov	r3, r2
 13733 0214 07CB     		ldmia	r3!, {r0, r1, r2}
 13734 0216 2060     		str	r0, [r4]	@ unaligned
 13735 0218 6160     		str	r1, [r4, #4]	@ unaligned
 13736 021a A260     		str	r2, [r4, #8]	@ unaligned
 13737 021c 1B88     		ldrh	r3, [r3]	@ unaligned
 13738 021e A381     		strh	r3, [r4, #12]	@ unaligned
1809:..\src/command_processing.c ****                 break;
 13739              		.loc 1 1809 0
 13740 0220 24E0     		b	.L539
 13741              	.L538:
1810:..\src/command_processing.c ****             case ROZA:
1811:..\src/command_processing.c ****                 strcat(info_string, "User: ROZA\r\n");
 13742              		.loc 1 1811 0
 13743 0222 7869     		ldr	r0, [r7, #20]
 13744 0224 FFF7FEFF 		bl	strlen
 13745 0228 0346     		mov	r3, r0
 13746 022a 1A46     		mov	r2, r3
 13747 022c 7B69     		ldr	r3, [r7, #20]
 13748 022e 1344     		add	r3, r3, r2
 13749 0230 494A     		ldr	r2, .L622+52
 13750 0232 1C46     		mov	r4, r3
 13751 0234 1346     		mov	r3, r2
 13752 0236 07CB     		ldmia	r3!, {r0, r1, r2}
 13753 0238 2060     		str	r0, [r4]	@ unaligned
 13754 023a 6160     		str	r1, [r4, #4]	@ unaligned
 13755 023c A260     		str	r2, [r4, #8]	@ unaligned
 13756 023e 1B78     		ldrb	r3, [r3]
 13757 0240 2373     		strb	r3, [r4, #12]
1812:..\src/command_processing.c ****                 break;
 13758              		.loc 1 1812 0
 13759 0242 13E0     		b	.L539
 13760              	.L619:
1813:..\src/command_processing.c ****             default:
1814:..\src/command_processing.c ****                 strcat(info_string, "User: GENERIC USER\r\n");
 13761              		.loc 1 1814 0
 13762 0244 7869     		ldr	r0, [r7, #20]
 13763 0246 FFF7FEFF 		bl	strlen
 13764 024a 0346     		mov	r3, r0
 13765 024c 1A46     		mov	r2, r3
 13766 024e 7B69     		ldr	r3, [r7, #20]
 13767 0250 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 311


 13768 0252 424A     		ldr	r2, .L622+56
 13769 0254 1D46     		mov	r5, r3
 13770 0256 1446     		mov	r4, r2
 13771 0258 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13772 025a 2860     		str	r0, [r5]	@ unaligned
 13773 025c 6960     		str	r1, [r5, #4]	@ unaligned
 13774 025e AA60     		str	r2, [r5, #8]	@ unaligned
 13775 0260 EB60     		str	r3, [r5, #12]	@ unaligned
 13776 0262 2068     		ldr	r0, [r4]	@ unaligned
 13777 0264 2861     		str	r0, [r5, #16]	@ unaligned
 13778 0266 2379     		ldrb	r3, [r4, #4]
 13779 0268 2B75     		strb	r3, [r5, #20]
1815:..\src/command_processing.c ****                 break;
 13780              		.loc 1 1815 0
 13781 026a 00BF     		nop
 13782              	.L539:
1816:..\src/command_processing.c ****         }
1817:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 13783              		.loc 1 1817 0
 13784 026c 7869     		ldr	r0, [r7, #20]
 13785 026e FFF7FEFF 		bl	strlen
 13786 0272 0346     		mov	r3, r0
 13787 0274 1A46     		mov	r2, r3
 13788 0276 7B69     		ldr	r3, [r7, #20]
 13789 0278 1344     		add	r3, r3, r2
 13790 027a 2B4A     		ldr	r2, .L622+4
 13791 027c 1188     		ldrh	r1, [r2]	@ unaligned
 13792 027e 9278     		ldrb	r2, [r2, #2]
 13793 0280 1980     		strh	r1, [r3]	@ unaligned
 13794 0282 9A70     		strb	r2, [r3, #2]
 13795              	.LBB17:
1818:..\src/command_processing.c ****         
1819:..\src/command_processing.c ****         for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 13796              		.loc 1 1819 0
 13797 0284 0023     		movs	r3, #0
 13798 0286 87F89330 		strb	r3, [r7, #147]
 13799 028a 01F02AB8 		b	.L540
 13800              	.L591:
 13801              	.LBB18:
1820:..\src/command_processing.c ****             
1821:..\src/command_processing.c ****             uint8 MOTOR_IDX = k;
 13802              		.loc 1 1821 0
 13803 028e 97F89330 		ldrb	r3, [r7, #147]
 13804 0292 87F88B30 		strb	r3, [r7, #139]
1822:..\src/command_processing.c ****             struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 13805              		.loc 1 1822 0
 13806 0296 97F88B20 		ldrb	r2, [r7, #139]	@ zero_extendqisi2
 13807 029a 1346     		mov	r3, r2
 13808 029c DB00     		lsls	r3, r3, #3
 13809 029e 9B1A     		subs	r3, r3, r2
 13810 02a0 1B01     		lsls	r3, r3, #4
 13811 02a2 B033     		adds	r3, r3, #176
 13812 02a4 D7F88C20 		ldr	r2, [r7, #140]
 13813 02a8 1344     		add	r3, r3, r2
 13814 02aa C7F88430 		str	r3, [r7, #132]
1823:..\src/command_processing.c ****             uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 13815              		.loc 1 1823 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 312


 13816 02ae D7F88430 		ldr	r3, [r7, #132]
 13817 02b2 93F86030 		ldrb	r3, [r3, #96]
 13818 02b6 87F88330 		strb	r3, [r7, #131]
1824:..\src/command_processing.c ****                   
1825:..\src/command_processing.c ****             sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 13819              		.loc 1 1825 0
 13820 02ba 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 13821 02be 5A1C     		adds	r2, r3, #1
 13822 02c0 07F11C03 		add	r3, r7, #28
 13823 02c4 2649     		ldr	r1, .L622+60
 13824 02c6 1846     		mov	r0, r3
 13825 02c8 FFF7FEFF 		bl	sprintf
1826:..\src/command_processing.c ****             strcat(info_string, str);
 13826              		.loc 1 1826 0
 13827 02cc 07F11C03 		add	r3, r7, #28
 13828 02d0 1946     		mov	r1, r3
 13829 02d2 7869     		ldr	r0, [r7, #20]
 13830 02d4 FFF7FEFF 		bl	strcat
1827:..\src/command_processing.c ****                         
1828:..\src/command_processing.c ****             strcat(info_string, "Motor reference");
 13831              		.loc 1 1828 0
 13832 02d8 7869     		ldr	r0, [r7, #20]
 13833 02da FFF7FEFF 		bl	strlen
 13834 02de 0346     		mov	r3, r0
 13835 02e0 1A46     		mov	r2, r3
 13836 02e2 7B69     		ldr	r3, [r7, #20]
 13837 02e4 1344     		add	r3, r3, r2
 13838 02e6 1F4A     		ldr	r2, .L622+64
 13839 02e8 1C46     		mov	r4, r3
 13840 02ea 1546     		mov	r5, r2
 13841 02ec 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 13842 02ee 2060     		str	r0, [r4]	@ unaligned
 13843 02f0 6160     		str	r1, [r4, #4]	@ unaligned
 13844 02f2 A260     		str	r2, [r4, #8]	@ unaligned
 13845 02f4 E360     		str	r3, [r4, #12]	@ unaligned
1829:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT)
 13846              		.loc 1 1829 0
 13847 02f6 D7F88430 		ldr	r3, [r7, #132]
 13848 02fa 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 13849 02fe 022B     		cmp	r3, #2
 13850 0300 34D1     		bne	.L541
1830:..\src/command_processing.c ****                 strcat(info_string," - Currents: ");
 13851              		.loc 1 1830 0
 13852 0302 7869     		ldr	r0, [r7, #20]
 13853 0304 FFF7FEFF 		bl	strlen
 13854 0308 0346     		mov	r3, r0
 13855 030a 1A46     		mov	r2, r3
 13856 030c 7B69     		ldr	r3, [r7, #20]
 13857 030e 1344     		add	r3, r3, r2
 13858 0310 154A     		ldr	r2, .L622+68
 13859 0312 1C46     		mov	r4, r3
 13860 0314 1346     		mov	r3, r2
 13861 0316 07CB     		ldmia	r3!, {r0, r1, r2}
 13862 0318 2060     		str	r0, [r4]	@ unaligned
 13863 031a 6160     		str	r1, [r4, #4]	@ unaligned
 13864 031c A260     		str	r2, [r4, #8]	@ unaligned
 13865 031e 1B88     		ldrh	r3, [r3]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 313


 13866 0320 A381     		strh	r3, [r4, #12]	@ unaligned
 13867 0322 49E0     		b	.L542
 13868              	.L623:
 13869              		.align	2
 13870              	.L622:
 13871 0324 00000000 		.word	c_mem
 13872 0328 A80E0000 		.word	.LC132
 13873 032c AC0E0000 		.word	.LC133
 13874 0330 C00E0000 		.word	.LC134
 13875 0334 0C0F0000 		.word	.LC135
 13876 0338 140F0000 		.word	.LC136
 13877 033c 240F0000 		.word	.LC137
 13878 0340 300F0000 		.word	.LC138
 13879 0344 480F0000 		.word	.LC139
 13880 0348 640F0000 		.word	.LC140
 13881 034c 8C0F0000 		.word	.LC141
 13882 0350 A00F0000 		.word	.LC142
 13883 0354 B40F0000 		.word	.LC143
 13884 0358 C40F0000 		.word	.LC144
 13885 035c D40F0000 		.word	.LC145
 13886 0360 EC0F0000 		.word	.LC146
 13887 0364 FC0F0000 		.word	.LC147
 13888 0368 0C100000 		.word	.LC148
 13889              	.L541:
1831:..\src/command_processing.c ****             else {
1832:..\src/command_processing.c ****                 if (MOT->control_mode == CONTROL_PWM)
 13890              		.loc 1 1832 0
 13891 036c D7F88430 		ldr	r3, [r7, #132]
 13892 0370 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 13893 0374 012B     		cmp	r3, #1
 13894 0376 0FD1     		bne	.L543
1833:..\src/command_processing.c ****                     strcat(info_string," - Pwm: ");
 13895              		.loc 1 1833 0
 13896 0378 7869     		ldr	r0, [r7, #20]
 13897 037a FFF7FEFF 		bl	strlen
 13898 037e 0346     		mov	r3, r0
 13899 0380 1A46     		mov	r2, r3
 13900 0382 7B69     		ldr	r3, [r7, #20]
 13901 0384 1344     		add	r3, r3, r2
 13902 0386 8F49     		ldr	r1, .L624
 13903 0388 1A46     		mov	r2, r3
 13904 038a 0B46     		mov	r3, r1
 13905 038c 03CB     		ldmia	r3!, {r0, r1}
 13906 038e 1060     		str	r0, [r2]	@ unaligned
 13907 0390 5160     		str	r1, [r2, #4]	@ unaligned
 13908 0392 1B78     		ldrb	r3, [r3]
 13909 0394 1372     		strb	r3, [r2, #8]
 13910 0396 0FE0     		b	.L542
 13911              	.L543:
1834:..\src/command_processing.c ****                 else
1835:..\src/command_processing.c ****                     strcat(info_string," - Position: ");
 13912              		.loc 1 1835 0
 13913 0398 7869     		ldr	r0, [r7, #20]
 13914 039a FFF7FEFF 		bl	strlen
 13915 039e 0346     		mov	r3, r0
 13916 03a0 1A46     		mov	r2, r3
 13917 03a2 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 314


 13918 03a4 1344     		add	r3, r3, r2
 13919 03a6 884A     		ldr	r2, .L624+4
 13920 03a8 1C46     		mov	r4, r3
 13921 03aa 1346     		mov	r3, r2
 13922 03ac 07CB     		ldmia	r3!, {r0, r1, r2}
 13923 03ae 2060     		str	r0, [r4]	@ unaligned
 13924 03b0 6160     		str	r1, [r4, #4]	@ unaligned
 13925 03b2 A260     		str	r2, [r4, #8]	@ unaligned
 13926 03b4 1B88     		ldrh	r3, [r3]	@ unaligned
 13927 03b6 A381     		strh	r3, [r4, #12]	@ unaligned
 13928              	.L542:
1836:..\src/command_processing.c ****             }
1837:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT) {
 13929              		.loc 1 1837 0
 13930 03b8 D7F88430 		ldr	r3, [r7, #132]
 13931 03bc 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 13932 03c0 022B     		cmp	r3, #2
 13933 03c2 13D1     		bne	.L544
1838:..\src/command_processing.c ****                 sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].curr));
 13934              		.loc 1 1838 0
 13935 03c4 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 13936 03c8 804A     		ldr	r2, .L624+8
 13937 03ca 1B01     		lsls	r3, r3, #4
 13938 03cc 1344     		add	r3, r3, r2
 13939 03ce 0433     		adds	r3, r3, #4
 13940 03d0 1A68     		ldr	r2, [r3]
 13941 03d2 07F11C03 		add	r3, r7, #28
 13942 03d6 7E49     		ldr	r1, .L624+12
 13943 03d8 1846     		mov	r0, r3
 13944 03da FFF7FEFF 		bl	sprintf
1839:..\src/command_processing.c ****                 strcat(info_string,str);
 13945              		.loc 1 1839 0
 13946 03de 07F11C03 		add	r3, r7, #28
 13947 03e2 1946     		mov	r1, r3
 13948 03e4 7869     		ldr	r0, [r7, #20]
 13949 03e6 FFF7FEFF 		bl	strcat
 13950 03ea 39E0     		b	.L545
 13951              	.L544:
1840:..\src/command_processing.c ****             }
1841:..\src/command_processing.c ****             else {
1842:..\src/command_processing.c ****                 if(MOT->control_mode == CONTROL_PWM) {
 13952              		.loc 1 1842 0
 13953 03ec D7F88430 		ldr	r3, [r7, #132]
 13954 03f0 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 13955 03f4 012B     		cmp	r3, #1
 13956 03f6 13D1     		bne	.L546
1843:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pwm));
 13957              		.loc 1 1843 0
 13958 03f8 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 13959 03fc 734A     		ldr	r2, .L624+8
 13960 03fe 1B01     		lsls	r3, r3, #4
 13961 0400 1344     		add	r3, r3, r2
 13962 0402 0833     		adds	r3, r3, #8
 13963 0404 1A68     		ldr	r2, [r3]
 13964 0406 07F11C03 		add	r3, r7, #28
 13965 040a 7149     		ldr	r1, .L624+12
 13966 040c 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 315


 13967 040e FFF7FEFF 		bl	sprintf
1844:..\src/command_processing.c ****                     strcat(info_string,str);
 13968              		.loc 1 1844 0
 13969 0412 07F11C03 		add	r3, r7, #28
 13970 0416 1946     		mov	r1, r3
 13971 0418 7869     		ldr	r0, [r7, #20]
 13972 041a FFF7FEFF 		bl	strcat
 13973 041e 1FE0     		b	.L545
 13974              	.L546:
1845:..\src/command_processing.c ****                 }
1846:..\src/command_processing.c ****                 else {
1847:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pos >> MEM_P->enc[ENC_L].res[0]))
 13975              		.loc 1 1847 0
 13976 0420 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 13977 0424 694A     		ldr	r2, .L624+8
 13978 0426 1B01     		lsls	r3, r3, #4
 13979 0428 1344     		add	r3, r3, r2
 13980 042a 1968     		ldr	r1, [r3]
 13981 042c 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 13982 0430 D7F88C00 		ldr	r0, [r7, #140]
 13983 0434 1346     		mov	r3, r2
 13984 0436 5B00     		lsls	r3, r3, #1
 13985 0438 1344     		add	r3, r3, r2
 13986 043a 1B01     		lsls	r3, r3, #4
 13987 043c 0344     		add	r3, r3, r0
 13988 043e 03F29513 		addw	r3, r3, #405
 13989 0442 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13990 0444 41FA03F2 		asr	r2, r1, r3
 13991 0448 07F11C03 		add	r3, r7, #28
 13992 044c 6049     		ldr	r1, .L624+12
 13993 044e 1846     		mov	r0, r3
 13994 0450 FFF7FEFF 		bl	sprintf
1848:..\src/command_processing.c ****                     strcat(info_string,str);
 13995              		.loc 1 1848 0
 13996 0454 07F11C03 		add	r3, r7, #28
 13997 0458 1946     		mov	r1, r3
 13998 045a 7869     		ldr	r0, [r7, #20]
 13999 045c FFF7FEFF 		bl	strcat
 14000              	.L545:
1849:..\src/command_processing.c ****                 }
1850:..\src/command_processing.c ****             }
1851:..\src/command_processing.c ****             strcat(info_string,"\r\n");
 14001              		.loc 1 1851 0
 14002 0460 7869     		ldr	r0, [r7, #20]
 14003 0462 FFF7FEFF 		bl	strlen
 14004 0466 0346     		mov	r3, r0
 14005 0468 1A46     		mov	r2, r3
 14006 046a 7B69     		ldr	r3, [r7, #20]
 14007 046c 1344     		add	r3, r3, r2
 14008 046e 594A     		ldr	r2, .L624+16
 14009 0470 1188     		ldrh	r1, [r2]	@ unaligned
 14010 0472 9278     		ldrb	r2, [r2, #2]
 14011 0474 1980     		strh	r1, [r3]	@ unaligned
 14012 0476 9A70     		strb	r2, [r3, #2]
1852:..\src/command_processing.c **** 
1853:..\src/command_processing.c ****             sprintf(str, "Motor enabled: ");
 14013              		.loc 1 1853 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 316


 14014 0478 07F11C03 		add	r3, r7, #28
 14015 047c 564A     		ldr	r2, .L624+20
 14016 047e 1C46     		mov	r4, r3
 14017 0480 1346     		mov	r3, r2
 14018 0482 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 14019 0484 84E80F00 		stmia	r4, {r0, r1, r2, r3}
1854:..\src/command_processing.c ****             if (g_ref[MOTOR_IDX].onoff & 0x01) {
 14020              		.loc 1 1854 0
 14021 0488 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14022 048c 534A     		ldr	r2, .L624+24
 14023 048e 1B01     		lsls	r3, r3, #4
 14024 0490 1344     		add	r3, r3, r2
 14025 0492 0C33     		adds	r3, r3, #12
 14026 0494 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14027 0496 03F00103 		and	r3, r3, #1
 14028 049a 002B     		cmp	r3, #0
 14029 049c 0FD0     		beq	.L547
1855:..\src/command_processing.c ****                 strcat(str, "YES\r\n");
 14030              		.loc 1 1855 0
 14031 049e 07F11C03 		add	r3, r7, #28
 14032 04a2 1846     		mov	r0, r3
 14033 04a4 FFF7FEFF 		bl	strlen
 14034 04a8 0346     		mov	r3, r0
 14035 04aa 1A46     		mov	r2, r3
 14036 04ac 07F11C03 		add	r3, r7, #28
 14037 04b0 1344     		add	r3, r3, r2
 14038 04b2 4B4A     		ldr	r2, .L624+28
 14039 04b4 1068     		ldr	r0, [r2]	@ unaligned
 14040 04b6 1860     		str	r0, [r3]	@ unaligned
 14041 04b8 9288     		ldrh	r2, [r2, #4]	@ unaligned
 14042 04ba 9A80     		strh	r2, [r3, #4]	@ unaligned
 14043 04bc 0EE0     		b	.L548
 14044              	.L547:
1856:..\src/command_processing.c ****             } else {
1857:..\src/command_processing.c ****                 strcat(str, "NO\r\n");
 14045              		.loc 1 1857 0
 14046 04be 07F11C03 		add	r3, r7, #28
 14047 04c2 1846     		mov	r0, r3
 14048 04c4 FFF7FEFF 		bl	strlen
 14049 04c8 0346     		mov	r3, r0
 14050 04ca 1A46     		mov	r2, r3
 14051 04cc 07F11C03 		add	r3, r7, #28
 14052 04d0 1344     		add	r3, r3, r2
 14053 04d2 444A     		ldr	r2, .L624+32
 14054 04d4 1068     		ldr	r0, [r2]	@ unaligned
 14055 04d6 1860     		str	r0, [r3]	@ unaligned
 14056 04d8 1279     		ldrb	r2, [r2, #4]
 14057 04da 1A71     		strb	r2, [r3, #4]
 14058              	.L548:
1858:..\src/command_processing.c ****             }
1859:..\src/command_processing.c ****             strcat(info_string, str);
 14059              		.loc 1 1859 0
 14060 04dc 07F11C03 		add	r3, r7, #28
 14061 04e0 1946     		mov	r1, r3
 14062 04e2 7869     		ldr	r0, [r7, #20]
 14063 04e4 FFF7FEFF 		bl	strcat
1860:..\src/command_processing.c ****                         
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 317


1861:..\src/command_processing.c ****             strcat(info_string, "PWM rescaling activation: ");
 14064              		.loc 1 1861 0
 14065 04e8 7869     		ldr	r0, [r7, #20]
 14066 04ea FFF7FEFF 		bl	strlen
 14067 04ee 0346     		mov	r3, r0
 14068 04f0 1A46     		mov	r2, r3
 14069 04f2 7B69     		ldr	r3, [r7, #20]
 14070 04f4 1344     		add	r3, r3, r2
 14071 04f6 3C4A     		ldr	r2, .L624+36
 14072 04f8 1D46     		mov	r5, r3
 14073 04fa 1446     		mov	r4, r2
 14074 04fc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14075 04fe 2860     		str	r0, [r5]	@ unaligned
 14076 0500 6960     		str	r1, [r5, #4]	@ unaligned
 14077 0502 AA60     		str	r2, [r5, #8]	@ unaligned
 14078 0504 EB60     		str	r3, [r5, #12]	@ unaligned
 14079 0506 03CC     		ldmia	r4!, {r0, r1}
 14080 0508 2861     		str	r0, [r5, #16]	@ unaligned
 14081 050a 6961     		str	r1, [r5, #20]	@ unaligned
 14082 050c 2388     		ldrh	r3, [r4]	@ unaligned
 14083 050e A278     		ldrb	r2, [r4, #2]
 14084 0510 2B83     		strh	r3, [r5, #24]	@ unaligned
 14085 0512 1346     		mov	r3, r2
 14086 0514 AB76     		strb	r3, [r5, #26]
1862:..\src/command_processing.c ****             if(MOT->activate_pwm_rescaling == MAXON_12V)
 14087              		.loc 1 1862 0
 14088 0516 D7F88430 		ldr	r3, [r7, #132]
 14089 051a 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 14090 051e 012B     		cmp	r3, #1
 14091 0520 0CD1     		bne	.L549
1863:..\src/command_processing.c ****                 strcat(info_string, "YES\n");
 14092              		.loc 1 1863 0
 14093 0522 7869     		ldr	r0, [r7, #20]
 14094 0524 FFF7FEFF 		bl	strlen
 14095 0528 0346     		mov	r3, r0
 14096 052a 1A46     		mov	r2, r3
 14097 052c 7B69     		ldr	r3, [r7, #20]
 14098 052e 1344     		add	r3, r3, r2
 14099 0530 2E4A     		ldr	r2, .L624+40
 14100 0532 1068     		ldr	r0, [r2]	@ unaligned
 14101 0534 1860     		str	r0, [r3]	@ unaligned
 14102 0536 1279     		ldrb	r2, [r2, #4]
 14103 0538 1A71     		strb	r2, [r3, #4]
 14104 053a 09E0     		b	.L550
 14105              	.L549:
1864:..\src/command_processing.c ****             else
1865:..\src/command_processing.c ****                 strcat(info_string, "NO\n");
 14106              		.loc 1 1865 0
 14107 053c 7869     		ldr	r0, [r7, #20]
 14108 053e FFF7FEFF 		bl	strlen
 14109 0542 0346     		mov	r3, r0
 14110 0544 1A46     		mov	r2, r3
 14111 0546 7B69     		ldr	r3, [r7, #20]
 14112 0548 1344     		add	r3, r3, r2
 14113 054a 294A     		ldr	r2, .L624+44
 14114 054c 1068     		ldr	r0, [r2]	@ unaligned
 14115 054e 1860     		str	r0, [r3]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 318


 14116              	.L550:
1866:..\src/command_processing.c ****             
1867:..\src/command_processing.c ****             sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 14117              		.loc 1 1867 0
 14118 0550 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14119 0554 274A     		ldr	r2, .L624+48
 14120 0556 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 14121 0558 1A46     		mov	r2, r3
 14122 055a 07F11C03 		add	r3, r7, #28
 14123 055e 2649     		ldr	r1, .L624+52
 14124 0560 1846     		mov	r0, r3
 14125 0562 FFF7FEFF 		bl	sprintf
1868:..\src/command_processing.c ****             strcat(info_string, str);
 14126              		.loc 1 1868 0
 14127 0566 07F11C03 		add	r3, r7, #28
 14128 056a 1946     		mov	r1, r3
 14129 056c 7869     		ldr	r0, [r7, #20]
 14130 056e FFF7FEFF 		bl	strcat
1869:..\src/command_processing.c **** 
1870:..\src/command_processing.c ****             strcat(info_string, "\r\nMEASUREMENTS INFO\r\n");
 14131              		.loc 1 1870 0
 14132 0572 7869     		ldr	r0, [r7, #20]
 14133 0574 FFF7FEFF 		bl	strlen
 14134 0578 0346     		mov	r3, r0
 14135 057a 1A46     		mov	r2, r3
 14136 057c 7B69     		ldr	r3, [r7, #20]
 14137 057e 1344     		add	r3, r3, r2
 14138 0580 1E4A     		ldr	r2, .L624+56
 14139 0582 1D46     		mov	r5, r3
 14140 0584 1446     		mov	r4, r2
 14141 0586 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14142 0588 2860     		str	r0, [r5]	@ unaligned
 14143 058a 6960     		str	r1, [r5, #4]	@ unaligned
 14144 058c AA60     		str	r2, [r5, #8]	@ unaligned
 14145 058e EB60     		str	r3, [r5, #12]	@ unaligned
 14146 0590 2068     		ldr	r0, [r4]	@ unaligned
 14147 0592 2861     		str	r0, [r5, #16]	@ unaligned
 14148 0594 A388     		ldrh	r3, [r4, #4]	@ unaligned
 14149 0596 AB82     		strh	r3, [r5, #20]	@ unaligned
1871:..\src/command_processing.c ****             strcat(info_string, "Sensor value: ");
 14150              		.loc 1 1871 0
 14151 0598 7869     		ldr	r0, [r7, #20]
 14152 059a FFF7FEFF 		bl	strlen
 14153 059e 0346     		mov	r3, r0
 14154 05a0 1A46     		mov	r2, r3
 14155 05a2 7B69     		ldr	r3, [r7, #20]
 14156 05a4 1344     		add	r3, r3, r2
 14157 05a6 164A     		ldr	r2, .L624+60
 14158 05a8 1C46     		mov	r4, r3
 14159 05aa 1346     		mov	r3, r2
 14160 05ac 07CB     		ldmia	r3!, {r0, r1, r2}
 14161 05ae 2060     		str	r0, [r4]	@ unaligned
 14162 05b0 6160     		str	r1, [r4, #4]	@ unaligned
 14163 05b2 A260     		str	r2, [r4, #8]	@ unaligned
 14164 05b4 1A88     		ldrh	r2, [r3]	@ unaligned
 14165 05b6 9B78     		ldrb	r3, [r3, #2]
 14166 05b8 A281     		strh	r2, [r4, #12]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 319


 14167 05ba A373     		strb	r3, [r4, #14]
1872:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; i++) {
 14168              		.loc 1 1872 0
 14169 05bc 0023     		movs	r3, #0
 14170 05be C7F89430 		str	r3, [r7, #148]
 14171 05c2 5EE0     		b	.L551
 14172              	.L625:
 14173              		.align	2
 14174              	.L624:
 14175 05c4 1C100000 		.word	.LC149
 14176 05c8 28100000 		.word	.LC150
 14177 05cc 00000000 		.word	g_refOld
 14178 05d0 38100000 		.word	.LC151
 14179 05d4 A80E0000 		.word	.LC132
 14180 05d8 3C100000 		.word	.LC152
 14181 05dc 00000000 		.word	g_ref
 14182 05e0 4C100000 		.word	.LC153
 14183 05e4 54100000 		.word	.LC154
 14184 05e8 5C100000 		.word	.LC155
 14185 05ec 78100000 		.word	.LC156
 14186 05f0 80100000 		.word	.LC157
 14187 05f4 00000000 		.word	dev_pwm_limit
 14188 05f8 84100000 		.word	.LC158
 14189 05fc 94100000 		.word	.LC159
 14190 0600 AC100000 		.word	.LC160
 14191              	.L553:
1873:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 14192              		.loc 1 1873 0
 14193 0604 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 14194 0608 A749     		ldr	r1, .L626
 14195 060a 1346     		mov	r3, r2
 14196 060c 5B00     		lsls	r3, r3, #1
 14197 060e 1344     		add	r3, r3, r2
 14198 0610 9B00     		lsls	r3, r3, #2
 14199 0612 1344     		add	r3, r3, r2
 14200 0614 D7F89420 		ldr	r2, [r7, #148]
 14201 0618 1344     		add	r3, r3, r2
 14202 061a 51F82310 		ldr	r1, [r1, r3, lsl #2]
 14203 061e 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 14204 0622 D7F88C00 		ldr	r0, [r7, #140]
 14205 0626 1346     		mov	r3, r2
 14206 0628 5B00     		lsls	r3, r3, #1
 14207 062a 1344     		add	r3, r3, r2
 14208 062c 1B01     		lsls	r3, r3, #4
 14209 062e C218     		adds	r2, r0, r3
 14210 0630 D7F89430 		ldr	r3, [r7, #148]
 14211 0634 1344     		add	r3, r3, r2
 14212 0636 03F29513 		addw	r3, r3, #405
 14213 063a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14214 063c 41FA03F2 		asr	r2, r1, r3
 14215 0640 07F11C03 		add	r3, r7, #28
 14216 0644 9949     		ldr	r1, .L626+4
 14217 0646 1846     		mov	r0, r3
 14218 0648 FFF7FEFF 		bl	sprintf
1874:..\src/command_processing.c ****                 strcat(info_string, str);
 14219              		.loc 1 1874 0
 14220 064c 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 320


 14221 0650 1946     		mov	r1, r3
 14222 0652 7869     		ldr	r0, [r7, #20]
 14223 0654 FFF7FEFF 		bl	strcat
1875:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 14224              		.loc 1 1875 0
 14225 0658 D7F89430 		ldr	r3, [r7, #148]
 14226 065c 022B     		cmp	r3, #2
 14227 065e 0BD0     		beq	.L552
1876:..\src/command_processing.c ****                     strcat(info_string, ", ");
 14228              		.loc 1 1876 0
 14229 0660 7869     		ldr	r0, [r7, #20]
 14230 0662 FFF7FEFF 		bl	strlen
 14231 0666 0346     		mov	r3, r0
 14232 0668 1A46     		mov	r2, r3
 14233 066a 7B69     		ldr	r3, [r7, #20]
 14234 066c 1344     		add	r3, r3, r2
 14235 066e 904A     		ldr	r2, .L626+8
 14236 0670 1188     		ldrh	r1, [r2]	@ unaligned
 14237 0672 9278     		ldrb	r2, [r2, #2]
 14238 0674 1980     		strh	r1, [r3]	@ unaligned
 14239 0676 9A70     		strb	r2, [r3, #2]
 14240              	.L552:
1872:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 14241              		.loc 1 1872 0 discriminator 2
 14242 0678 D7F89430 		ldr	r3, [r7, #148]
 14243 067c 0133     		adds	r3, r3, #1
 14244 067e C7F89430 		str	r3, [r7, #148]
 14245              	.L551:
1872:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 14246              		.loc 1 1872 0 is_stmt 0 discriminator 1
 14247 0682 D7F89430 		ldr	r3, [r7, #148]
 14248 0686 022B     		cmp	r3, #2
 14249 0688 BCDD     		ble	.L553
1877:..\src/command_processing.c ****                 }                
1878:..\src/command_processing.c ****             }
1879:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14250              		.loc 1 1879 0 is_stmt 1
 14251 068a 7869     		ldr	r0, [r7, #20]
 14252 068c FFF7FEFF 		bl	strlen
 14253 0690 0346     		mov	r3, r0
 14254 0692 1A46     		mov	r2, r3
 14255 0694 7B69     		ldr	r3, [r7, #20]
 14256 0696 1344     		add	r3, r3, r2
 14257 0698 864A     		ldr	r2, .L626+12
 14258 069a 1188     		ldrh	r1, [r2]	@ unaligned
 14259 069c 9278     		ldrb	r2, [r2, #2]
 14260 069e 1980     		strh	r1, [r3]	@ unaligned
 14261 06a0 9A70     		strb	r2, [r3, #2]
1880:..\src/command_processing.c **** 
1881:..\src/command_processing.c ****             sprintf(str, "Battery %d Voltage (mV): %ld", MOTOR_IDX+1, (int32) dev_tension[MOTOR_IDX
 14262              		.loc 1 1881 0
 14263 06a2 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14264 06a6 591C     		adds	r1, r3, #1
 14265 06a8 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14266 06ac 824A     		ldr	r2, .L626+16
 14267 06ae 52F82330 		ldr	r3, [r2, r3, lsl #2]
 14268 06b2 07F11C00 		add	r0, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 321


 14269 06b6 0A46     		mov	r2, r1
 14270 06b8 8049     		ldr	r1, .L626+20
 14271 06ba FFF7FEFF 		bl	sprintf
1882:..\src/command_processing.c ****             strcat(info_string, str);
 14272              		.loc 1 1882 0
 14273 06be 07F11C03 		add	r3, r7, #28
 14274 06c2 1946     		mov	r1, r3
 14275 06c4 7869     		ldr	r0, [r7, #20]
 14276 06c6 FFF7FEFF 		bl	strcat
1883:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14277              		.loc 1 1883 0
 14278 06ca 7869     		ldr	r0, [r7, #20]
 14279 06cc FFF7FEFF 		bl	strlen
 14280 06d0 0346     		mov	r3, r0
 14281 06d2 1A46     		mov	r2, r3
 14282 06d4 7B69     		ldr	r3, [r7, #20]
 14283 06d6 1344     		add	r3, r3, r2
 14284 06d8 764A     		ldr	r2, .L626+12
 14285 06da 1188     		ldrh	r1, [r2]	@ unaligned
 14286 06dc 9278     		ldrb	r2, [r2, #2]
 14287 06de 1980     		strh	r1, [r3]	@ unaligned
 14288 06e0 9A70     		strb	r2, [r3, #2]
1884:..\src/command_processing.c ****             
1885:..\src/command_processing.c ****             sprintf(str, "Full charge power tension %d (mV): %ld", MOTOR_IDX+1, (int32) pow_tension
 14289              		.loc 1 1885 0
 14290 06e2 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14291 06e6 591C     		adds	r1, r3, #1
 14292 06e8 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14293 06ec 744A     		ldr	r2, .L626+24
 14294 06ee 52F82330 		ldr	r3, [r2, r3, lsl #2]
 14295 06f2 07F11C00 		add	r0, r7, #28
 14296 06f6 0A46     		mov	r2, r1
 14297 06f8 7249     		ldr	r1, .L626+28
 14298 06fa FFF7FEFF 		bl	sprintf
1886:..\src/command_processing.c ****             strcat(info_string, str);
 14299              		.loc 1 1886 0
 14300 06fe 07F11C03 		add	r3, r7, #28
 14301 0702 1946     		mov	r1, r3
 14302 0704 7869     		ldr	r0, [r7, #20]
 14303 0706 FFF7FEFF 		bl	strcat
1887:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14304              		.loc 1 1887 0
 14305 070a 7869     		ldr	r0, [r7, #20]
 14306 070c FFF7FEFF 		bl	strlen
 14307 0710 0346     		mov	r3, r0
 14308 0712 1A46     		mov	r2, r3
 14309 0714 7B69     		ldr	r3, [r7, #20]
 14310 0716 1344     		add	r3, r3, r2
 14311 0718 664A     		ldr	r2, .L626+12
 14312 071a 1188     		ldrh	r1, [r2]	@ unaligned
 14313 071c 9278     		ldrb	r2, [r2, #2]
 14314 071e 1980     		strh	r1, [r3]	@ unaligned
 14315 0720 9A70     		strb	r2, [r3, #2]
1888:..\src/command_processing.c **** 
1889:..\src/command_processing.c ****             sprintf(str, "Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[ENC_L].curr );
 14316              		.loc 1 1889 0
 14317 0722 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 322


 14318 0726 5C1C     		adds	r4, r3, #1
 14319 0728 97F88330 		ldrb	r3, [r7, #131]	@ zero_extendqisi2
 14320 072c 5E4A     		ldr	r2, .L626
 14321 072e 3421     		movs	r1, #52
 14322 0730 01FB03F3 		mul	r3, r1, r3
 14323 0734 1344     		add	r3, r3, r2
 14324 0736 0C33     		adds	r3, r3, #12
 14325 0738 1B68     		ldr	r3, [r3]
 14326 073a 07F11C00 		add	r0, r7, #28
 14327 073e 2246     		mov	r2, r4
 14328 0740 6149     		ldr	r1, .L626+32
 14329 0742 FFF7FEFF 		bl	sprintf
1890:..\src/command_processing.c ****             strcat(info_string, str);
 14330              		.loc 1 1890 0
 14331 0746 07F11C03 		add	r3, r7, #28
 14332 074a 1946     		mov	r1, r3
 14333 074c 7869     		ldr	r0, [r7, #20]
 14334 074e FFF7FEFF 		bl	strcat
1891:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14335              		.loc 1 1891 0
 14336 0752 7869     		ldr	r0, [r7, #20]
 14337 0754 FFF7FEFF 		bl	strlen
 14338 0758 0346     		mov	r3, r0
 14339 075a 1A46     		mov	r2, r3
 14340 075c 7B69     		ldr	r3, [r7, #20]
 14341 075e 1344     		add	r3, r3, r2
 14342 0760 544A     		ldr	r2, .L626+12
 14343 0762 1188     		ldrh	r1, [r2]	@ unaligned
 14344 0764 9278     		ldrb	r2, [r2, #2]
 14345 0766 1980     		strh	r1, [r3]	@ unaligned
 14346 0768 9A70     		strb	r2, [r3, #2]
1892:..\src/command_processing.c ****             
1893:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag == TRUE){
 14347              		.loc 1 1893 0
 14348 076a D7F88430 		ldr	r3, [r7, #132]
 14349 076e 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 14350 0772 012B     		cmp	r3, #1
 14351 0774 23D1     		bne	.L554
1894:..\src/command_processing.c ****                 sprintf(str, "Last Grasp Hold Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[EN
 14352              		.loc 1 1894 0
 14353 0776 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14354 077a 5C1C     		adds	r4, r3, #1
 14355 077c 97F88330 		ldrb	r3, [r7, #131]	@ zero_extendqisi2
 14356 0780 494A     		ldr	r2, .L626
 14357 0782 3421     		movs	r1, #52
 14358 0784 01FB03F3 		mul	r3, r1, r3
 14359 0788 1344     		add	r3, r3, r2
 14360 078a 1433     		adds	r3, r3, #20
 14361 078c 1B68     		ldr	r3, [r3]
 14362 078e 07F11C00 		add	r0, r7, #28
 14363 0792 2246     		mov	r2, r4
 14364 0794 4D49     		ldr	r1, .L626+36
 14365 0796 FFF7FEFF 		bl	sprintf
1895:..\src/command_processing.c ****                 strcat(info_string, str);
 14366              		.loc 1 1895 0
 14367 079a 07F11C03 		add	r3, r7, #28
 14368 079e 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 323


 14369 07a0 7869     		ldr	r0, [r7, #20]
 14370 07a2 FFF7FEFF 		bl	strcat
1896:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 14371              		.loc 1 1896 0
 14372 07a6 7869     		ldr	r0, [r7, #20]
 14373 07a8 FFF7FEFF 		bl	strlen
 14374 07ac 0346     		mov	r3, r0
 14375 07ae 1A46     		mov	r2, r3
 14376 07b0 7B69     		ldr	r3, [r7, #20]
 14377 07b2 1344     		add	r3, r3, r2
 14378 07b4 3F4A     		ldr	r2, .L626+12
 14379 07b6 1188     		ldrh	r1, [r2]	@ unaligned
 14380 07b8 9278     		ldrb	r2, [r2, #2]
 14381 07ba 1980     		strh	r1, [r3]	@ unaligned
 14382 07bc 9A70     		strb	r2, [r3, #2]
 14383              	.L554:
1897:..\src/command_processing.c ****             }
1898:..\src/command_processing.c ****             
1899:..\src/command_processing.c ****             sprintf(str, "\r\nMOTOR %d CONFIGURATION\r\n", MOTOR_IDX+1);
 14384              		.loc 1 1899 0
 14385 07be 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14386 07c2 5A1C     		adds	r2, r3, #1
 14387 07c4 07F11C03 		add	r3, r7, #28
 14388 07c8 4149     		ldr	r1, .L626+40
 14389 07ca 1846     		mov	r0, r3
 14390 07cc FFF7FEFF 		bl	sprintf
1900:..\src/command_processing.c ****             strcat(info_string, str);
 14391              		.loc 1 1900 0
 14392 07d0 07F11C03 		add	r3, r7, #28
 14393 07d4 1946     		mov	r1, r3
 14394 07d6 7869     		ldr	r0, [r7, #20]
 14395 07d8 FFF7FEFF 		bl	strcat
1901:..\src/command_processing.c **** 
1902:..\src/command_processing.c ****             strcat(info_string, "PID Controller: ");
 14396              		.loc 1 1902 0
 14397 07dc 7869     		ldr	r0, [r7, #20]
 14398 07de FFF7FEFF 		bl	strlen
 14399 07e2 0346     		mov	r3, r0
 14400 07e4 1A46     		mov	r2, r3
 14401 07e6 7B69     		ldr	r3, [r7, #20]
 14402 07e8 1344     		add	r3, r3, r2
 14403 07ea 3A4A     		ldr	r2, .L626+44
 14404 07ec 1D46     		mov	r5, r3
 14405 07ee 1446     		mov	r4, r2
 14406 07f0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14407 07f2 2860     		str	r0, [r5]	@ unaligned
 14408 07f4 6960     		str	r1, [r5, #4]	@ unaligned
 14409 07f6 AA60     		str	r2, [r5, #8]	@ unaligned
 14410 07f8 EB60     		str	r3, [r5, #12]	@ unaligned
 14411 07fa 2378     		ldrb	r3, [r4]
 14412 07fc 2B74     		strb	r3, [r5, #16]
1903:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 14413              		.loc 1 1903 0
 14414 07fe D7F88430 		ldr	r3, [r7, #132]
 14415 0802 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14416 0806 032B     		cmp	r3, #3
 14417 0808 6ED0     		beq	.L555
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 324


1904:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 14418              		.loc 1 1904 0
 14419 080a D7F88430 		ldr	r3, [r7, #132]
 14420 080e 1B68     		ldr	r3, [r3]
 14421 0810 1846     		mov	r0, r3
 14422 0812 FFF7FEFF 		bl	__aeabi_i2d
 14423 0816 4FF00002 		mov	r2, #0
 14424 081a 2F4B     		ldr	r3, .L626+48
 14425 081c FFF7FEFF 		bl	__aeabi_ddiv
 14426 0820 0346     		mov	r3, r0
 14427 0822 0C46     		mov	r4, r1
 14428 0824 07F11C00 		add	r0, r7, #28
 14429 0828 1A46     		mov	r2, r3
 14430 082a 2346     		mov	r3, r4
 14431 082c 2B49     		ldr	r1, .L626+52
 14432 082e FFF7FEFF 		bl	sprintf
1905:..\src/command_processing.c ****                 strcat(info_string, str);
 14433              		.loc 1 1905 0
 14434 0832 07F11C03 		add	r3, r7, #28
 14435 0836 1946     		mov	r1, r3
 14436 0838 7869     		ldr	r0, [r7, #20]
 14437 083a FFF7FEFF 		bl	strcat
1906:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 14438              		.loc 1 1906 0
 14439 083e D7F88430 		ldr	r3, [r7, #132]
 14440 0842 5B68     		ldr	r3, [r3, #4]
 14441 0844 1846     		mov	r0, r3
 14442 0846 FFF7FEFF 		bl	__aeabi_i2d
 14443 084a 4FF00002 		mov	r2, #0
 14444 084e 224B     		ldr	r3, .L626+48
 14445 0850 FFF7FEFF 		bl	__aeabi_ddiv
 14446 0854 0346     		mov	r3, r0
 14447 0856 0C46     		mov	r4, r1
 14448 0858 07F11C00 		add	r0, r7, #28
 14449 085c 1A46     		mov	r2, r3
 14450 085e 2346     		mov	r3, r4
 14451 0860 1F49     		ldr	r1, .L626+56
 14452 0862 FFF7FEFF 		bl	sprintf
1907:..\src/command_processing.c ****                 strcat(info_string, str);
 14453              		.loc 1 1907 0
 14454 0866 07F11C03 		add	r3, r7, #28
 14455 086a 1946     		mov	r1, r3
 14456 086c 7869     		ldr	r0, [r7, #20]
 14457 086e FFF7FEFF 		bl	strcat
1908:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 14458              		.loc 1 1908 0
 14459 0872 D7F88430 		ldr	r3, [r7, #132]
 14460 0876 9B68     		ldr	r3, [r3, #8]
 14461 0878 1846     		mov	r0, r3
 14462 087a FFF7FEFF 		bl	__aeabi_i2d
 14463 087e 4FF00002 		mov	r2, #0
 14464 0882 154B     		ldr	r3, .L626+48
 14465 0884 FFF7FEFF 		bl	__aeabi_ddiv
 14466 0888 0346     		mov	r3, r0
 14467 088a 0C46     		mov	r4, r1
 14468 088c 07F11C00 		add	r0, r7, #28
 14469 0890 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 325


 14470 0892 2346     		mov	r3, r4
 14471 0894 1349     		ldr	r1, .L626+60
 14472 0896 FFF7FEFF 		bl	sprintf
1909:..\src/command_processing.c ****                 strcat(info_string, str);
 14473              		.loc 1 1909 0
 14474 089a 07F11C03 		add	r3, r7, #28
 14475 089e 1946     		mov	r1, r3
 14476 08a0 7869     		ldr	r0, [r7, #20]
 14477 08a2 FFF7FEFF 		bl	strcat
 14478 08a6 6DE0     		b	.L556
 14479              	.L627:
 14480              		.align	2
 14481              	.L626:
 14482 08a8 00000000 		.word	g_meas
 14483 08ac BC100000 		.word	.LC161
 14484 08b0 C0100000 		.word	.LC162
 14485 08b4 A80E0000 		.word	.LC132
 14486 08b8 00000000 		.word	dev_tension
 14487 08bc C4100000 		.word	.LC163
 14488 08c0 00000000 		.word	pow_tension
 14489 08c4 E4100000 		.word	.LC164
 14490 08c8 0C110000 		.word	.LC165
 14491 08cc 24110000 		.word	.LC166
 14492 08d0 4C110000 		.word	.LC167
 14493 08d4 68110000 		.word	.LC168
 14494 08d8 0000F040 		.word	1089470464
 14495 08dc 7C110000 		.word	.LC169
 14496 08e0 88110000 		.word	.LC170
 14497 08e4 94110000 		.word	.LC171
 14498              	.L555:
1910:..\src/command_processing.c ****             }
1911:..\src/command_processing.c ****             else { 
1912:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 14499              		.loc 1 1912 0
 14500 08e8 D7F88430 		ldr	r3, [r7, #132]
 14501 08ec 9B69     		ldr	r3, [r3, #24]
 14502 08ee 1846     		mov	r0, r3
 14503 08f0 FFF7FEFF 		bl	__aeabi_i2d
 14504 08f4 4FF00002 		mov	r2, #0
 14505 08f8 CD4B     		ldr	r3, .L628
 14506 08fa FFF7FEFF 		bl	__aeabi_ddiv
 14507 08fe 0346     		mov	r3, r0
 14508 0900 0C46     		mov	r4, r1
 14509 0902 07F11C00 		add	r0, r7, #28
 14510 0906 1A46     		mov	r2, r3
 14511 0908 2346     		mov	r3, r4
 14512 090a CA49     		ldr	r1, .L628+4
 14513 090c FFF7FEFF 		bl	sprintf
1913:..\src/command_processing.c ****                 strcat(info_string, str);
 14514              		.loc 1 1913 0
 14515 0910 07F11C03 		add	r3, r7, #28
 14516 0914 1946     		mov	r1, r3
 14517 0916 7869     		ldr	r0, [r7, #20]
 14518 0918 FFF7FEFF 		bl	strcat
1914:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 14519              		.loc 1 1914 0
 14520 091c D7F88430 		ldr	r3, [r7, #132]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 326


 14521 0920 DB69     		ldr	r3, [r3, #28]
 14522 0922 1846     		mov	r0, r3
 14523 0924 FFF7FEFF 		bl	__aeabi_i2d
 14524 0928 4FF00002 		mov	r2, #0
 14525 092c C04B     		ldr	r3, .L628
 14526 092e FFF7FEFF 		bl	__aeabi_ddiv
 14527 0932 0346     		mov	r3, r0
 14528 0934 0C46     		mov	r4, r1
 14529 0936 07F11C00 		add	r0, r7, #28
 14530 093a 1A46     		mov	r2, r3
 14531 093c 2346     		mov	r3, r4
 14532 093e BE49     		ldr	r1, .L628+8
 14533 0940 FFF7FEFF 		bl	sprintf
1915:..\src/command_processing.c ****                 strcat(info_string, str);
 14534              		.loc 1 1915 0
 14535 0944 07F11C03 		add	r3, r7, #28
 14536 0948 1946     		mov	r1, r3
 14537 094a 7869     		ldr	r0, [r7, #20]
 14538 094c FFF7FEFF 		bl	strcat
1916:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 14539              		.loc 1 1916 0
 14540 0950 D7F88430 		ldr	r3, [r7, #132]
 14541 0954 1B6A     		ldr	r3, [r3, #32]
 14542 0956 1846     		mov	r0, r3
 14543 0958 FFF7FEFF 		bl	__aeabi_i2d
 14544 095c 4FF00002 		mov	r2, #0
 14545 0960 B34B     		ldr	r3, .L628
 14546 0962 FFF7FEFF 		bl	__aeabi_ddiv
 14547 0966 0346     		mov	r3, r0
 14548 0968 0C46     		mov	r4, r1
 14549 096a 07F11C00 		add	r0, r7, #28
 14550 096e 1A46     		mov	r2, r3
 14551 0970 2346     		mov	r3, r4
 14552 0972 B249     		ldr	r1, .L628+12
 14553 0974 FFF7FEFF 		bl	sprintf
1917:..\src/command_processing.c ****                 strcat(info_string, str);
 14554              		.loc 1 1917 0
 14555 0978 07F11C03 		add	r3, r7, #28
 14556 097c 1946     		mov	r1, r3
 14557 097e 7869     		ldr	r0, [r7, #20]
 14558 0980 FFF7FEFF 		bl	strcat
 14559              	.L556:
1918:..\src/command_processing.c ****             }
1919:..\src/command_processing.c **** 
1920:..\src/command_processing.c ****             strcat(info_string, "Current PID Controller: ");
 14560              		.loc 1 1920 0
 14561 0984 7869     		ldr	r0, [r7, #20]
 14562 0986 FFF7FEFF 		bl	strlen
 14563 098a 0346     		mov	r3, r0
 14564 098c 1A46     		mov	r2, r3
 14565 098e 7B69     		ldr	r3, [r7, #20]
 14566 0990 1344     		add	r3, r3, r2
 14567 0992 AB4A     		ldr	r2, .L628+16
 14568 0994 1D46     		mov	r5, r3
 14569 0996 1446     		mov	r4, r2
 14570 0998 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14571 099a 2860     		str	r0, [r5]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 327


 14572 099c 6960     		str	r1, [r5, #4]	@ unaligned
 14573 099e AA60     		str	r2, [r5, #8]	@ unaligned
 14574 09a0 EB60     		str	r3, [r5, #12]	@ unaligned
 14575 09a2 03CC     		ldmia	r4!, {r0, r1}
 14576 09a4 2861     		str	r0, [r5, #16]	@ unaligned
 14577 09a6 6961     		str	r1, [r5, #20]	@ unaligned
 14578 09a8 2378     		ldrb	r3, [r4]
 14579 09aa 2B76     		strb	r3, [r5, #24]
1921:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 14580              		.loc 1 1921 0
 14581 09ac D7F88430 		ldr	r3, [r7, #132]
 14582 09b0 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14583 09b4 032B     		cmp	r3, #3
 14584 09b6 4ED0     		beq	.L557
1922:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 14585              		.loc 1 1922 0
 14586 09b8 D7F88430 		ldr	r3, [r7, #132]
 14587 09bc DB68     		ldr	r3, [r3, #12]
 14588 09be 1846     		mov	r0, r3
 14589 09c0 FFF7FEFF 		bl	__aeabi_i2d
 14590 09c4 4FF00002 		mov	r2, #0
 14591 09c8 994B     		ldr	r3, .L628
 14592 09ca FFF7FEFF 		bl	__aeabi_ddiv
 14593 09ce 0346     		mov	r3, r0
 14594 09d0 0C46     		mov	r4, r1
 14595 09d2 07F11C00 		add	r0, r7, #28
 14596 09d6 1A46     		mov	r2, r3
 14597 09d8 2346     		mov	r3, r4
 14598 09da 9649     		ldr	r1, .L628+4
 14599 09dc FFF7FEFF 		bl	sprintf
1923:..\src/command_processing.c ****                 strcat(info_string, str);
 14600              		.loc 1 1923 0
 14601 09e0 07F11C03 		add	r3, r7, #28
 14602 09e4 1946     		mov	r1, r3
 14603 09e6 7869     		ldr	r0, [r7, #20]
 14604 09e8 FFF7FEFF 		bl	strcat
1924:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 14605              		.loc 1 1924 0
 14606 09ec D7F88430 		ldr	r3, [r7, #132]
 14607 09f0 1B69     		ldr	r3, [r3, #16]
 14608 09f2 1846     		mov	r0, r3
 14609 09f4 FFF7FEFF 		bl	__aeabi_i2d
 14610 09f8 4FF00002 		mov	r2, #0
 14611 09fc 8C4B     		ldr	r3, .L628
 14612 09fe FFF7FEFF 		bl	__aeabi_ddiv
 14613 0a02 0346     		mov	r3, r0
 14614 0a04 0C46     		mov	r4, r1
 14615 0a06 07F11C00 		add	r0, r7, #28
 14616 0a0a 1A46     		mov	r2, r3
 14617 0a0c 2346     		mov	r3, r4
 14618 0a0e 8A49     		ldr	r1, .L628+8
 14619 0a10 FFF7FEFF 		bl	sprintf
1925:..\src/command_processing.c ****                 strcat(info_string, str);
 14620              		.loc 1 1925 0
 14621 0a14 07F11C03 		add	r3, r7, #28
 14622 0a18 1946     		mov	r1, r3
 14623 0a1a 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 328


 14624 0a1c FFF7FEFF 		bl	strcat
1926:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 14625              		.loc 1 1926 0
 14626 0a20 D7F88430 		ldr	r3, [r7, #132]
 14627 0a24 5B69     		ldr	r3, [r3, #20]
 14628 0a26 1846     		mov	r0, r3
 14629 0a28 FFF7FEFF 		bl	__aeabi_i2d
 14630 0a2c 4FF00002 		mov	r2, #0
 14631 0a30 7F4B     		ldr	r3, .L628
 14632 0a32 FFF7FEFF 		bl	__aeabi_ddiv
 14633 0a36 0346     		mov	r3, r0
 14634 0a38 0C46     		mov	r4, r1
 14635 0a3a 07F11C00 		add	r0, r7, #28
 14636 0a3e 1A46     		mov	r2, r3
 14637 0a40 2346     		mov	r3, r4
 14638 0a42 7E49     		ldr	r1, .L628+12
 14639 0a44 FFF7FEFF 		bl	sprintf
1927:..\src/command_processing.c ****                 strcat(info_string, str);
 14640              		.loc 1 1927 0
 14641 0a48 07F11C03 		add	r3, r7, #28
 14642 0a4c 1946     		mov	r1, r3
 14643 0a4e 7869     		ldr	r0, [r7, #20]
 14644 0a50 FFF7FEFF 		bl	strcat
 14645 0a54 4DE0     		b	.L558
 14646              	.L557:
1928:..\src/command_processing.c **** 
1929:..\src/command_processing.c ****             }
1930:..\src/command_processing.c ****             else {
1931:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 14647              		.loc 1 1931 0
 14648 0a56 D7F88430 		ldr	r3, [r7, #132]
 14649 0a5a 5B6A     		ldr	r3, [r3, #36]
 14650 0a5c 1846     		mov	r0, r3
 14651 0a5e FFF7FEFF 		bl	__aeabi_i2d
 14652 0a62 4FF00002 		mov	r2, #0
 14653 0a66 724B     		ldr	r3, .L628
 14654 0a68 FFF7FEFF 		bl	__aeabi_ddiv
 14655 0a6c 0346     		mov	r3, r0
 14656 0a6e 0C46     		mov	r4, r1
 14657 0a70 07F11C00 		add	r0, r7, #28
 14658 0a74 1A46     		mov	r2, r3
 14659 0a76 2346     		mov	r3, r4
 14660 0a78 6E49     		ldr	r1, .L628+4
 14661 0a7a FFF7FEFF 		bl	sprintf
1932:..\src/command_processing.c ****                 strcat(info_string, str);
 14662              		.loc 1 1932 0
 14663 0a7e 07F11C03 		add	r3, r7, #28
 14664 0a82 1946     		mov	r1, r3
 14665 0a84 7869     		ldr	r0, [r7, #20]
 14666 0a86 FFF7FEFF 		bl	strcat
1933:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 14667              		.loc 1 1933 0
 14668 0a8a D7F88430 		ldr	r3, [r7, #132]
 14669 0a8e 9B6A     		ldr	r3, [r3, #40]
 14670 0a90 1846     		mov	r0, r3
 14671 0a92 FFF7FEFF 		bl	__aeabi_i2d
 14672 0a96 4FF00002 		mov	r2, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 329


 14673 0a9a 654B     		ldr	r3, .L628
 14674 0a9c FFF7FEFF 		bl	__aeabi_ddiv
 14675 0aa0 0346     		mov	r3, r0
 14676 0aa2 0C46     		mov	r4, r1
 14677 0aa4 07F11C00 		add	r0, r7, #28
 14678 0aa8 1A46     		mov	r2, r3
 14679 0aaa 2346     		mov	r3, r4
 14680 0aac 6249     		ldr	r1, .L628+8
 14681 0aae FFF7FEFF 		bl	sprintf
1934:..\src/command_processing.c ****                 strcat(info_string, str);
 14682              		.loc 1 1934 0
 14683 0ab2 07F11C03 		add	r3, r7, #28
 14684 0ab6 1946     		mov	r1, r3
 14685 0ab8 7869     		ldr	r0, [r7, #20]
 14686 0aba FFF7FEFF 		bl	strcat
1935:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 14687              		.loc 1 1935 0
 14688 0abe D7F88430 		ldr	r3, [r7, #132]
 14689 0ac2 DB6A     		ldr	r3, [r3, #44]
 14690 0ac4 1846     		mov	r0, r3
 14691 0ac6 FFF7FEFF 		bl	__aeabi_i2d
 14692 0aca 4FF00002 		mov	r2, #0
 14693 0ace 584B     		ldr	r3, .L628
 14694 0ad0 FFF7FEFF 		bl	__aeabi_ddiv
 14695 0ad4 0346     		mov	r3, r0
 14696 0ad6 0C46     		mov	r4, r1
 14697 0ad8 07F11C00 		add	r0, r7, #28
 14698 0adc 1A46     		mov	r2, r3
 14699 0ade 2346     		mov	r3, r4
 14700 0ae0 5649     		ldr	r1, .L628+12
 14701 0ae2 FFF7FEFF 		bl	sprintf
1936:..\src/command_processing.c ****                 strcat(info_string, str);
 14702              		.loc 1 1936 0
 14703 0ae6 07F11C03 		add	r3, r7, #28
 14704 0aea 1946     		mov	r1, r3
 14705 0aec 7869     		ldr	r0, [r7, #20]
 14706 0aee FFF7FEFF 		bl	strcat
 14707              	.L558:
1937:..\src/command_processing.c ****             }
1938:..\src/command_processing.c ****             if (MOT->activ == 0x01)
 14708              		.loc 1 1938 0
 14709 0af2 D7F88430 		ldr	r3, [r7, #132]
 14710 0af6 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 14711 0afa 012B     		cmp	r3, #1
 14712 0afc 14D1     		bne	.L559
1939:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: YES\r\n");
 14713              		.loc 1 1939 0
 14714 0afe 7869     		ldr	r0, [r7, #20]
 14715 0b00 FFF7FEFF 		bl	strlen
 14716 0b04 0346     		mov	r3, r0
 14717 0b06 1A46     		mov	r2, r3
 14718 0b08 7B69     		ldr	r3, [r7, #20]
 14719 0b0a 1344     		add	r3, r3, r2
 14720 0b0c 4D4A     		ldr	r2, .L628+20
 14721 0b0e 1D46     		mov	r5, r3
 14722 0b10 1446     		mov	r4, r2
 14723 0b12 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 330


 14724 0b14 2860     		str	r0, [r5]	@ unaligned
 14725 0b16 6960     		str	r1, [r5, #4]	@ unaligned
 14726 0b18 AA60     		str	r2, [r5, #8]	@ unaligned
 14727 0b1a EB60     		str	r3, [r5, #12]	@ unaligned
 14728 0b1c 03CC     		ldmia	r4!, {r0, r1}
 14729 0b1e 2861     		str	r0, [r5, #16]	@ unaligned
 14730 0b20 6961     		str	r1, [r5, #20]	@ unaligned
 14731 0b22 2388     		ldrh	r3, [r4]	@ unaligned
 14732 0b24 2B83     		strh	r3, [r5, #24]	@ unaligned
 14733 0b26 13E0     		b	.L560
 14734              	.L559:
1940:..\src/command_processing.c ****             else
1941:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: NO\r\n");
 14735              		.loc 1 1941 0
 14736 0b28 7869     		ldr	r0, [r7, #20]
 14737 0b2a FFF7FEFF 		bl	strlen
 14738 0b2e 0346     		mov	r3, r0
 14739 0b30 1A46     		mov	r2, r3
 14740 0b32 7B69     		ldr	r3, [r7, #20]
 14741 0b34 1344     		add	r3, r3, r2
 14742 0b36 444A     		ldr	r2, .L628+24
 14743 0b38 1D46     		mov	r5, r3
 14744 0b3a 1446     		mov	r4, r2
 14745 0b3c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14746 0b3e 2860     		str	r0, [r5]	@ unaligned
 14747 0b40 6960     		str	r1, [r5, #4]	@ unaligned
 14748 0b42 AA60     		str	r2, [r5, #8]	@ unaligned
 14749 0b44 EB60     		str	r3, [r5, #12]	@ unaligned
 14750 0b46 03CC     		ldmia	r4!, {r0, r1}
 14751 0b48 2861     		str	r0, [r5, #16]	@ unaligned
 14752 0b4a 6961     		str	r1, [r5, #20]	@ unaligned
 14753 0b4c 2378     		ldrb	r3, [r4]
 14754 0b4e 2B76     		strb	r3, [r5, #24]
 14755              	.L560:
1942:..\src/command_processing.c **** 
1943:..\src/command_processing.c ****             switch(MOT->input_mode) {
 14756              		.loc 1 1943 0
 14757 0b50 D7F88430 		ldr	r3, [r7, #132]
 14758 0b54 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 14759 0b58 062B     		cmp	r3, #6
 14760 0b5a 00F2D180 		bhi	.L561
 14761 0b5e 01A2     		adr	r2, .L563
 14762 0b60 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 14763              		.p2align 2
 14764              	.L563:
 14765 0b64 810B0000 		.word	.L562+1
 14766 0b68 A50B0000 		.word	.L564+1
 14767 0b6c CD0B0000 		.word	.L565+1
 14768 0b70 FF0B0000 		.word	.L566+1
 14769 0b74 5D0C0000 		.word	.L567+1
 14770 0b78 8B0C0000 		.word	.L568+1
 14771 0b7c BB0C0000 		.word	.L569+1
 14772              		.p2align 1
 14773              	.L562:
1944:..\src/command_processing.c ****                 case INPUT_MODE_EXTERNAL:
1945:..\src/command_processing.c ****                     strcat(info_string, "Input mode: USB\r\n");
 14774              		.loc 1 1945 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 331


 14775 0b80 7869     		ldr	r0, [r7, #20]
 14776 0b82 FFF7FEFF 		bl	strlen
 14777 0b86 0346     		mov	r3, r0
 14778 0b88 1A46     		mov	r2, r3
 14779 0b8a 7B69     		ldr	r3, [r7, #20]
 14780 0b8c 1344     		add	r3, r3, r2
 14781 0b8e 2F4A     		ldr	r2, .L628+28
 14782 0b90 1D46     		mov	r5, r3
 14783 0b92 1446     		mov	r4, r2
 14784 0b94 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14785 0b96 2860     		str	r0, [r5]	@ unaligned
 14786 0b98 6960     		str	r1, [r5, #4]	@ unaligned
 14787 0b9a AA60     		str	r2, [r5, #8]	@ unaligned
 14788 0b9c EB60     		str	r3, [r5, #12]	@ unaligned
 14789 0b9e 2388     		ldrh	r3, [r4]	@ unaligned
 14790 0ba0 2B82     		strh	r3, [r5, #16]	@ unaligned
1946:..\src/command_processing.c ****                     break;
 14791              		.loc 1 1946 0
 14792 0ba2 ADE0     		b	.L561
 14793              	.L564:
1947:..\src/command_processing.c ****                 case INPUT_MODE_ENCODER3:
1948:..\src/command_processing.c ****                     strcat(info_string, "Input mode: Handle\r\n");
 14794              		.loc 1 1948 0
 14795 0ba4 7869     		ldr	r0, [r7, #20]
 14796 0ba6 FFF7FEFF 		bl	strlen
 14797 0baa 0346     		mov	r3, r0
 14798 0bac 1A46     		mov	r2, r3
 14799 0bae 7B69     		ldr	r3, [r7, #20]
 14800 0bb0 1344     		add	r3, r3, r2
 14801 0bb2 274A     		ldr	r2, .L628+32
 14802 0bb4 1D46     		mov	r5, r3
 14803 0bb6 1446     		mov	r4, r2
 14804 0bb8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14805 0bba 2860     		str	r0, [r5]	@ unaligned
 14806 0bbc 6960     		str	r1, [r5, #4]	@ unaligned
 14807 0bbe AA60     		str	r2, [r5, #8]	@ unaligned
 14808 0bc0 EB60     		str	r3, [r5, #12]	@ unaligned
 14809 0bc2 2068     		ldr	r0, [r4]	@ unaligned
 14810 0bc4 2861     		str	r0, [r5, #16]	@ unaligned
 14811 0bc6 2379     		ldrb	r3, [r4, #4]
 14812 0bc8 2B75     		strb	r3, [r5, #20]
1949:..\src/command_processing.c ****                     break;
 14813              		.loc 1 1949 0
 14814 0bca 99E0     		b	.L561
 14815              	.L565:
1950:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL:
1951:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional\r\n");
 14816              		.loc 1 1951 0
 14817 0bcc 7869     		ldr	r0, [r7, #20]
 14818 0bce FFF7FEFF 		bl	strlen
 14819 0bd2 0346     		mov	r3, r0
 14820 0bd4 1A46     		mov	r2, r3
 14821 0bd6 7B69     		ldr	r3, [r7, #20]
 14822 0bd8 1344     		add	r3, r3, r2
 14823 0bda 1E4A     		ldr	r2, .L628+36
 14824 0bdc 1D46     		mov	r5, r3
 14825 0bde 1446     		mov	r4, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 332


 14826 0be0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14827 0be2 2860     		str	r0, [r5]	@ unaligned
 14828 0be4 6960     		str	r1, [r5, #4]	@ unaligned
 14829 0be6 AA60     		str	r2, [r5, #8]	@ unaligned
 14830 0be8 EB60     		str	r3, [r5, #12]	@ unaligned
 14831 0bea 07CC     		ldmia	r4!, {r0, r1, r2}
 14832 0bec 2861     		str	r0, [r5, #16]	@ unaligned
 14833 0bee 6961     		str	r1, [r5, #20]	@ unaligned
 14834 0bf0 AA61     		str	r2, [r5, #24]	@ unaligned
 14835 0bf2 2388     		ldrh	r3, [r4]	@ unaligned
 14836 0bf4 A278     		ldrb	r2, [r4, #2]
 14837 0bf6 AB83     		strh	r3, [r5, #28]	@ unaligned
 14838 0bf8 1346     		mov	r3, r2
 14839 0bfa AB77     		strb	r3, [r5, #30]
1952:..\src/command_processing.c ****                     break;
 14840              		.loc 1 1952 0
 14841 0bfc 80E0     		b	.L561
 14842              	.L566:
1953:..\src/command_processing.c ****                 case INPUT_MODE_EMG_INTEGRAL:
1954:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG integral\r\n");
 14843              		.loc 1 1954 0
 14844 0bfe 7869     		ldr	r0, [r7, #20]
 14845 0c00 FFF7FEFF 		bl	strlen
 14846 0c04 0346     		mov	r3, r0
 14847 0c06 1A46     		mov	r2, r3
 14848 0c08 7B69     		ldr	r3, [r7, #20]
 14849 0c0a 1344     		add	r3, r3, r2
 14850 0c0c 124A     		ldr	r2, .L628+40
 14851 0c0e 1D46     		mov	r5, r3
 14852 0c10 1446     		mov	r4, r2
 14853 0c12 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14854 0c14 2860     		str	r0, [r5]	@ unaligned
 14855 0c16 6960     		str	r1, [r5, #4]	@ unaligned
 14856 0c18 AA60     		str	r2, [r5, #8]	@ unaligned
 14857 0c1a EB60     		str	r3, [r5, #12]	@ unaligned
 14858 0c1c 03CC     		ldmia	r4!, {r0, r1}
 14859 0c1e 2861     		str	r0, [r5, #16]	@ unaligned
 14860 0c20 6961     		str	r1, [r5, #20]	@ unaligned
 14861 0c22 2388     		ldrh	r3, [r4]	@ unaligned
 14862 0c24 A278     		ldrb	r2, [r4, #2]
 14863 0c26 2B83     		strh	r3, [r5, #24]	@ unaligned
 14864 0c28 1346     		mov	r3, r2
 14865 0c2a AB76     		strb	r3, [r5, #26]
1955:..\src/command_processing.c ****                     break;
 14866              		.loc 1 1955 0
 14867 0c2c 68E0     		b	.L561
 14868              	.L629:
 14869 0c2e 00BF     		.align	2
 14870              	.L628:
 14871 0c30 0000F040 		.word	1089470464
 14872 0c34 7C110000 		.word	.LC169
 14873 0c38 88110000 		.word	.LC170
 14874 0c3c 94110000 		.word	.LC171
 14875 0c40 A0110000 		.word	.LC172
 14876 0c44 BC110000 		.word	.LC173
 14877 0c48 D8110000 		.word	.LC174
 14878 0c4c F4110000 		.word	.LC175
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 333


 14879 0c50 08120000 		.word	.LC176
 14880 0c54 20120000 		.word	.LC177
 14881 0c58 40120000 		.word	.LC178
 14882              	.L567:
1956:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS:
1957:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS\r\n");
 14883              		.loc 1 1957 0
 14884 0c5c 7869     		ldr	r0, [r7, #20]
 14885 0c5e FFF7FEFF 		bl	strlen
 14886 0c62 0346     		mov	r3, r0
 14887 0c64 1A46     		mov	r2, r3
 14888 0c66 7B69     		ldr	r3, [r7, #20]
 14889 0c68 1344     		add	r3, r3, r2
 14890 0c6a C44A     		ldr	r2, .L630
 14891 0c6c 1C46     		mov	r4, r3
 14892 0c6e 1546     		mov	r5, r2
 14893 0c70 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14894 0c72 2060     		str	r0, [r4]	@ unaligned
 14895 0c74 6160     		str	r1, [r4, #4]	@ unaligned
 14896 0c76 A260     		str	r2, [r4, #8]	@ unaligned
 14897 0c78 E360     		str	r3, [r4, #12]	@ unaligned
 14898 0c7a 2868     		ldr	r0, [r5]	@ unaligned
 14899 0c7c 2061     		str	r0, [r4, #16]	@ unaligned
 14900 0c7e AB88     		ldrh	r3, [r5, #4]	@ unaligned
 14901 0c80 AA79     		ldrb	r2, [r5, #6]
 14902 0c82 A382     		strh	r3, [r4, #20]	@ unaligned
 14903 0c84 1346     		mov	r3, r2
 14904 0c86 A375     		strb	r3, [r4, #22]
1958:..\src/command_processing.c ****                     break;
 14905              		.loc 1 1958 0
 14906 0c88 3AE0     		b	.L561
 14907              	.L568:
1959:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS_ADV:
1960:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 14908              		.loc 1 1960 0
 14909 0c8a 7869     		ldr	r0, [r7, #20]
 14910 0c8c FFF7FEFF 		bl	strlen
 14911 0c90 0346     		mov	r3, r0
 14912 0c92 1A46     		mov	r2, r3
 14913 0c94 7B69     		ldr	r3, [r7, #20]
 14914 0c96 1344     		add	r3, r3, r2
 14915 0c98 B94A     		ldr	r2, .L630+4
 14916 0c9a 1D46     		mov	r5, r3
 14917 0c9c 1446     		mov	r4, r2
 14918 0c9e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14919 0ca0 2860     		str	r0, [r5]	@ unaligned
 14920 0ca2 6960     		str	r1, [r5, #4]	@ unaligned
 14921 0ca4 AA60     		str	r2, [r5, #8]	@ unaligned
 14922 0ca6 EB60     		str	r3, [r5, #12]	@ unaligned
 14923 0ca8 03CC     		ldmia	r4!, {r0, r1}
 14924 0caa 2861     		str	r0, [r5, #16]	@ unaligned
 14925 0cac 6961     		str	r1, [r5, #20]	@ unaligned
 14926 0cae 2388     		ldrh	r3, [r4]	@ unaligned
 14927 0cb0 A278     		ldrb	r2, [r4, #2]
 14928 0cb2 2B83     		strh	r3, [r5, #24]	@ unaligned
 14929 0cb4 1346     		mov	r3, r2
 14930 0cb6 AB76     		strb	r3, [r5, #26]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 334


1961:..\src/command_processing.c ****                     break;
 14931              		.loc 1 1961 0
 14932 0cb8 22E0     		b	.L561
 14933              	.L569:
1962:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL_NC:
1963:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 14934              		.loc 1 1963 0
 14935 0cba 7869     		ldr	r0, [r7, #20]
 14936 0cbc FFF7FEFF 		bl	strlen
 14937 0cc0 0346     		mov	r3, r0
 14938 0cc2 1A46     		mov	r2, r3
 14939 0cc4 7B69     		ldr	r3, [r7, #20]
 14940 0cc6 1344     		add	r3, r3, r2
 14941 0cc8 AE4A     		ldr	r2, .L630+8
 14942 0cca 1546     		mov	r5, r2
 14943 0ccc 9E46     		mov	lr, r3
 14944 0cce 05F1200C 		add	ip, r5, #32
 14945              	.L570:
 14946 0cd2 7446     		mov	r4, lr
 14947 0cd4 2E46     		mov	r6, r5
 14948 0cd6 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14949 0cd8 2060     		str	r0, [r4]	@ unaligned
 14950 0cda 6160     		str	r1, [r4, #4]	@ unaligned
 14951 0cdc A260     		str	r2, [r4, #8]	@ unaligned
 14952 0cde E360     		str	r3, [r4, #12]	@ unaligned
 14953 0ce0 1035     		adds	r5, r5, #16
 14954 0ce2 0EF1100E 		add	lr, lr, #16
 14955 0ce6 6545     		cmp	r5, ip
 14956 0ce8 F3D1     		bne	.L570
 14957 0cea 7446     		mov	r4, lr
 14958 0cec 2B46     		mov	r3, r5
 14959 0cee 07CB     		ldmia	r3!, {r0, r1, r2}
 14960 0cf0 2060     		str	r0, [r4]	@ unaligned
 14961 0cf2 6160     		str	r1, [r4, #4]	@ unaligned
 14962 0cf4 A260     		str	r2, [r4, #8]	@ unaligned
 14963 0cf6 1A88     		ldrh	r2, [r3]	@ unaligned
 14964 0cf8 9B78     		ldrb	r3, [r3, #2]
 14965 0cfa A281     		strh	r2, [r4, #12]	@ unaligned
 14966 0cfc A373     		strb	r3, [r4, #14]
1964:..\src/command_processing.c ****                     break;
 14967              		.loc 1 1964 0
 14968 0cfe 00BF     		nop
 14969              	.L561:
1965:..\src/command_processing.c ****             }
1966:..\src/command_processing.c **** 
1967:..\src/command_processing.c ****             switch(MOT->control_mode) {
 14970              		.loc 1 1967 0
 14971 0d00 D7F88430 		ldr	r3, [r7, #132]
 14972 0d04 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14973 0d08 032B     		cmp	r3, #3
 14974 0d0a 64D8     		bhi	.L621
 14975 0d0c 01A2     		adr	r2, .L573
 14976 0d0e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 14977 0d12 00BF     		.p2align 2
 14978              	.L573:
 14979 0d14 250D0000 		.word	.L572+1
 14980 0d18 4F0D0000 		.word	.L574+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 335


 14981 0d1c 730D0000 		.word	.L575+1
 14982 0d20 990D0000 		.word	.L576+1
 14983              		.p2align 1
 14984              	.L572:
1968:..\src/command_processing.c ****                 case CONTROL_ANGLE:
1969:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position\r\n");
 14985              		.loc 1 1969 0
 14986 0d24 7869     		ldr	r0, [r7, #20]
 14987 0d26 FFF7FEFF 		bl	strlen
 14988 0d2a 0346     		mov	r3, r0
 14989 0d2c 1A46     		mov	r2, r3
 14990 0d2e 7B69     		ldr	r3, [r7, #20]
 14991 0d30 1344     		add	r3, r3, r2
 14992 0d32 954A     		ldr	r2, .L630+12
 14993 0d34 1D46     		mov	r5, r3
 14994 0d36 1446     		mov	r4, r2
 14995 0d38 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14996 0d3a 2860     		str	r0, [r5]	@ unaligned
 14997 0d3c 6960     		str	r1, [r5, #4]	@ unaligned
 14998 0d3e AA60     		str	r2, [r5, #8]	@ unaligned
 14999 0d40 EB60     		str	r3, [r5, #12]	@ unaligned
 15000 0d42 03CC     		ldmia	r4!, {r0, r1}
 15001 0d44 2861     		str	r0, [r5, #16]	@ unaligned
 15002 0d46 6961     		str	r1, [r5, #20]	@ unaligned
 15003 0d48 2378     		ldrb	r3, [r4]
 15004 0d4a 2B76     		strb	r3, [r5, #24]
1970:..\src/command_processing.c ****                     break;
 15005              		.loc 1 1970 0
 15006 0d4c 44E0     		b	.L577
 15007              	.L574:
1971:..\src/command_processing.c ****                 case CONTROL_PWM:
1972:..\src/command_processing.c ****                     strcat(info_string, "Control mode: PWM\r\n");
 15008              		.loc 1 1972 0
 15009 0d4e 7869     		ldr	r0, [r7, #20]
 15010 0d50 FFF7FEFF 		bl	strlen
 15011 0d54 0346     		mov	r3, r0
 15012 0d56 1A46     		mov	r2, r3
 15013 0d58 7B69     		ldr	r3, [r7, #20]
 15014 0d5a 1344     		add	r3, r3, r2
 15015 0d5c 8B4A     		ldr	r2, .L630+16
 15016 0d5e 1D46     		mov	r5, r3
 15017 0d60 1446     		mov	r4, r2
 15018 0d62 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15019 0d64 2860     		str	r0, [r5]	@ unaligned
 15020 0d66 6960     		str	r1, [r5, #4]	@ unaligned
 15021 0d68 AA60     		str	r2, [r5, #8]	@ unaligned
 15022 0d6a EB60     		str	r3, [r5, #12]	@ unaligned
 15023 0d6c 2068     		ldr	r0, [r4]	@ unaligned
 15024 0d6e 2861     		str	r0, [r5, #16]	@ unaligned
1973:..\src/command_processing.c ****                     break;
 15025              		.loc 1 1973 0
 15026 0d70 32E0     		b	.L577
 15027              	.L575:
1974:..\src/command_processing.c ****                 case CONTROL_CURRENT:
1975:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Current\r\n");
 15028              		.loc 1 1975 0
 15029 0d72 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 336


 15030 0d74 FFF7FEFF 		bl	strlen
 15031 0d78 0346     		mov	r3, r0
 15032 0d7a 1A46     		mov	r2, r3
 15033 0d7c 7B69     		ldr	r3, [r7, #20]
 15034 0d7e 1344     		add	r3, r3, r2
 15035 0d80 834A     		ldr	r2, .L630+20
 15036 0d82 1D46     		mov	r5, r3
 15037 0d84 1446     		mov	r4, r2
 15038 0d86 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15039 0d88 2860     		str	r0, [r5]	@ unaligned
 15040 0d8a 6960     		str	r1, [r5, #4]	@ unaligned
 15041 0d8c AA60     		str	r2, [r5, #8]	@ unaligned
 15042 0d8e EB60     		str	r3, [r5, #12]	@ unaligned
 15043 0d90 03CC     		ldmia	r4!, {r0, r1}
 15044 0d92 2861     		str	r0, [r5, #16]	@ unaligned
 15045 0d94 6961     		str	r1, [r5, #20]	@ unaligned
1976:..\src/command_processing.c ****                     break;
 15046              		.loc 1 1976 0
 15047 0d96 1FE0     		b	.L577
 15048              	.L576:
1977:..\src/command_processing.c ****                 case CURR_AND_POS_CONTROL:
1978:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position and Current\r\n");
 15049              		.loc 1 1978 0
 15050 0d98 7869     		ldr	r0, [r7, #20]
 15051 0d9a FFF7FEFF 		bl	strlen
 15052 0d9e 0346     		mov	r3, r0
 15053 0da0 1A46     		mov	r2, r3
 15054 0da2 7B69     		ldr	r3, [r7, #20]
 15055 0da4 1344     		add	r3, r3, r2
 15056 0da6 7B4A     		ldr	r2, .L630+24
 15057 0da8 1446     		mov	r4, r2
 15058 0daa 9E46     		mov	lr, r3
 15059 0dac 04F1200C 		add	ip, r4, #32
 15060              	.L578:
 15061 0db0 7546     		mov	r5, lr
 15062 0db2 2646     		mov	r6, r4
 15063 0db4 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15064 0db6 2860     		str	r0, [r5]	@ unaligned
 15065 0db8 6960     		str	r1, [r5, #4]	@ unaligned
 15066 0dba AA60     		str	r2, [r5, #8]	@ unaligned
 15067 0dbc EB60     		str	r3, [r5, #12]	@ unaligned
 15068 0dbe 1034     		adds	r4, r4, #16
 15069 0dc0 0EF1100E 		add	lr, lr, #16
 15070 0dc4 6445     		cmp	r4, ip
 15071 0dc6 F3D1     		bne	.L578
 15072 0dc8 7346     		mov	r3, lr
 15073 0dca 2246     		mov	r2, r4
 15074 0dcc 1068     		ldr	r0, [r2]	@ unaligned
 15075 0dce 1860     		str	r0, [r3]	@ unaligned
 15076 0dd0 1279     		ldrb	r2, [r2, #4]
 15077 0dd2 1A71     		strb	r2, [r3, #4]
1979:..\src/command_processing.c ****                     break;
 15078              		.loc 1 1979 0
 15079 0dd4 00E0     		b	.L577
 15080              	.L621:
1980:..\src/command_processing.c ****                 default:
1981:..\src/command_processing.c ****                     break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 337


 15081              		.loc 1 1981 0
 15082 0dd6 00BF     		nop
 15083              	.L577:
1982:..\src/command_processing.c ****             }
1983:..\src/command_processing.c **** 
1984:..\src/command_processing.c ****             if (MEM_P->enc[ENC_L].double_encoder_on_off)
 15084              		.loc 1 1984 0
 15085 0dd8 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 15086 0ddc D7F88C10 		ldr	r1, [r7, #140]
 15087 0de0 1346     		mov	r3, r2
 15088 0de2 5B00     		lsls	r3, r3, #1
 15089 0de4 1344     		add	r3, r3, r2
 15090 0de6 1B01     		lsls	r3, r3, #4
 15091 0de8 0B44     		add	r3, r3, r1
 15092 0dea 03F5D873 		add	r3, r3, #432
 15093 0dee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15094 0df0 002B     		cmp	r3, #0
 15095 0df2 1CD0     		beq	.L579
1985:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: YES\r\n");
 15096              		.loc 1 1985 0
 15097 0df4 7869     		ldr	r0, [r7, #20]
 15098 0df6 FFF7FEFF 		bl	strlen
 15099 0dfa 0346     		mov	r3, r0
 15100 0dfc 1A46     		mov	r2, r3
 15101 0dfe 7B69     		ldr	r3, [r7, #20]
 15102 0e00 1344     		add	r3, r3, r2
 15103 0e02 654A     		ldr	r2, .L630+28
 15104 0e04 1446     		mov	r4, r2
 15105 0e06 9E46     		mov	lr, r3
 15106 0e08 04F1200C 		add	ip, r4, #32
 15107              	.L580:
 15108 0e0c 7546     		mov	r5, lr
 15109 0e0e 2646     		mov	r6, r4
 15110 0e10 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15111 0e12 2860     		str	r0, [r5]	@ unaligned
 15112 0e14 6960     		str	r1, [r5, #4]	@ unaligned
 15113 0e16 AA60     		str	r2, [r5, #8]	@ unaligned
 15114 0e18 EB60     		str	r3, [r5, #12]	@ unaligned
 15115 0e1a 1034     		adds	r4, r4, #16
 15116 0e1c 0EF1100E 		add	lr, lr, #16
 15117 0e20 6445     		cmp	r4, ip
 15118 0e22 F3D1     		bne	.L580
 15119 0e24 7346     		mov	r3, lr
 15120 0e26 2246     		mov	r2, r4
 15121 0e28 1278     		ldrb	r2, [r2]
 15122 0e2a 1A70     		strb	r2, [r3]
 15123 0e2c 13E0     		b	.L581
 15124              	.L579:
1986:..\src/command_processing.c ****             else
1987:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: NO\r\n");
 15125              		.loc 1 1987 0
 15126 0e2e 7869     		ldr	r0, [r7, #20]
 15127 0e30 FFF7FEFF 		bl	strlen
 15128 0e34 0346     		mov	r3, r0
 15129 0e36 1A46     		mov	r2, r3
 15130 0e38 7B69     		ldr	r3, [r7, #20]
 15131 0e3a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 338


 15132 0e3c 574A     		ldr	r2, .L630+32
 15133 0e3e 1C46     		mov	r4, r3
 15134 0e40 1546     		mov	r5, r2
 15135 0e42 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15136 0e44 2060     		str	r0, [r4]	@ unaligned
 15137 0e46 6160     		str	r1, [r4, #4]	@ unaligned
 15138 0e48 A260     		str	r2, [r4, #8]	@ unaligned
 15139 0e4a E360     		str	r3, [r4, #12]	@ unaligned
 15140 0e4c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15141 0e4e 2061     		str	r0, [r4, #16]	@ unaligned
 15142 0e50 6161     		str	r1, [r4, #20]	@ unaligned
 15143 0e52 A261     		str	r2, [r4, #24]	@ unaligned
 15144 0e54 E361     		str	r3, [r4, #28]	@ unaligned
 15145              	.L581:
1988:..\src/command_processing.c **** 
1989:..\src/command_processing.c ****             sprintf(str, "Motor-Handle Ratio: %d\r\n", (int)MEM_P->enc[ENC_L].motor_handle_ratio);
 15146              		.loc 1 1989 0
 15147 0e56 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 15148 0e5a D7F88C10 		ldr	r1, [r7, #140]
 15149 0e5e 1346     		mov	r3, r2
 15150 0e60 5B00     		lsls	r3, r3, #1
 15151 0e62 1344     		add	r3, r3, r2
 15152 0e64 1B01     		lsls	r3, r3, #4
 15153 0e66 0B44     		add	r3, r3, r1
 15154 0e68 03F5DA73 		add	r3, r3, #436
 15155 0e6c 93F90030 		ldrsb	r3, [r3]
 15156 0e70 1A46     		mov	r2, r3
 15157 0e72 07F11C03 		add	r3, r7, #28
 15158 0e76 4A49     		ldr	r1, .L630+36
 15159 0e78 1846     		mov	r0, r3
 15160 0e7a FFF7FEFF 		bl	sprintf
1990:..\src/command_processing.c ****             strcat(info_string, str);
 15161              		.loc 1 1990 0
 15162 0e7e 07F11C03 		add	r3, r7, #28
 15163 0e82 1946     		mov	r1, r3
 15164 0e84 7869     		ldr	r0, [r7, #20]
 15165 0e86 FFF7FEFF 		bl	strcat
1991:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
1992:..\src/command_processing.c ****             strcat(info_string, "Encoder indices used for motor control: ");
1993:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
1994:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
1995:..\src/command_processing.c ****                 strcat(info_string, str);
1996:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
1997:..\src/command_processing.c ****                     strcat(info_string, ", ");
1998:..\src/command_processing.c ****                 }                
1999:..\src/command_processing.c ****             }
2000:..\src/command_processing.c ****             strcat(info_string, "\r\n");
2001:..\src/command_processing.c ****             sprintf(str, "First Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[0]);
2002:..\src/command_processing.c ****             strcat(info_string, str);
2003:..\src/command_processing.c ****             sprintf(str, "Second Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[1]);
2004:..\src/command_processing.c ****             strcat(info_string, str);
2005:..\src/command_processing.c ****             sprintf(str, "Gear invariant: %d\r\n", (int)MEM_P->enc[ENC_L].gears_params[2]);
2006:..\src/command_processing.c ****             strcat(info_string, str);
2007:..\src/command_processing.c **** #endif            
2008:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15166              		.loc 1 2008 0
 15167 0e8a 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 339


 15168 0e8c FFF7FEFF 		bl	strlen
 15169 0e90 0346     		mov	r3, r0
 15170 0e92 1A46     		mov	r2, r3
 15171 0e94 7B69     		ldr	r3, [r7, #20]
 15172 0e96 1344     		add	r3, r3, r2
 15173 0e98 424A     		ldr	r2, .L630+40
 15174 0e9a 1188     		ldrh	r1, [r2]	@ unaligned
 15175 0e9c 9278     		ldrb	r2, [r2, #2]
 15176 0e9e 1980     		strh	r1, [r3]	@ unaligned
 15177 0ea0 9A70     		strb	r2, [r3, #2]
2009:..\src/command_processing.c **** 
2010:..\src/command_processing.c ****             strcat(info_string, "Sensor resolution: ");
 15178              		.loc 1 2010 0
 15179 0ea2 7869     		ldr	r0, [r7, #20]
 15180 0ea4 FFF7FEFF 		bl	strlen
 15181 0ea8 0346     		mov	r3, r0
 15182 0eaa 1A46     		mov	r2, r3
 15183 0eac 7B69     		ldr	r3, [r7, #20]
 15184 0eae 1344     		add	r3, r3, r2
 15185 0eb0 3D4A     		ldr	r2, .L630+44
 15186 0eb2 1D46     		mov	r5, r3
 15187 0eb4 1446     		mov	r4, r2
 15188 0eb6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15189 0eb8 2860     		str	r0, [r5]	@ unaligned
 15190 0eba 6960     		str	r1, [r5, #4]	@ unaligned
 15191 0ebc AA60     		str	r2, [r5, #8]	@ unaligned
 15192 0ebe EB60     		str	r3, [r5, #12]	@ unaligned
 15193 0ec0 2068     		ldr	r0, [r4]	@ unaligned
 15194 0ec2 2861     		str	r0, [r5, #16]	@ unaligned
2011:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 15195              		.loc 1 2011 0
 15196 0ec4 0023     		movs	r3, #0
 15197 0ec6 C7F89430 		str	r3, [r7, #148]
 15198 0eca 30E0     		b	.L582
 15199              	.L584:
2012:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 15200              		.loc 1 2012 0
 15201 0ecc 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 15202 0ed0 D7F88C10 		ldr	r1, [r7, #140]
 15203 0ed4 1346     		mov	r3, r2
 15204 0ed6 5B00     		lsls	r3, r3, #1
 15205 0ed8 1344     		add	r3, r3, r2
 15206 0eda 1B01     		lsls	r3, r3, #4
 15207 0edc CA18     		adds	r2, r1, r3
 15208 0ede D7F89430 		ldr	r3, [r7, #148]
 15209 0ee2 1344     		add	r3, r3, r2
 15210 0ee4 03F29513 		addw	r3, r3, #405
 15211 0ee8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15212 0eea 1A46     		mov	r2, r3
 15213 0eec 07F11C03 		add	r3, r7, #28
 15214 0ef0 2E49     		ldr	r1, .L630+48
 15215 0ef2 1846     		mov	r0, r3
 15216 0ef4 FFF7FEFF 		bl	sprintf
2013:..\src/command_processing.c ****                 strcat(info_string, str);
 15217              		.loc 1 2013 0
 15218 0ef8 07F11C03 		add	r3, r7, #28
 15219 0efc 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 340


 15220 0efe 7869     		ldr	r0, [r7, #20]
 15221 0f00 FFF7FEFF 		bl	strcat
2014:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 15222              		.loc 1 2014 0
 15223 0f04 D7F89430 		ldr	r3, [r7, #148]
 15224 0f08 022B     		cmp	r3, #2
 15225 0f0a 0BD0     		beq	.L583
2015:..\src/command_processing.c ****                     strcat(info_string, ", ");
 15226              		.loc 1 2015 0
 15227 0f0c 7869     		ldr	r0, [r7, #20]
 15228 0f0e FFF7FEFF 		bl	strlen
 15229 0f12 0346     		mov	r3, r0
 15230 0f14 1A46     		mov	r2, r3
 15231 0f16 7B69     		ldr	r3, [r7, #20]
 15232 0f18 1344     		add	r3, r3, r2
 15233 0f1a 254A     		ldr	r2, .L630+52
 15234 0f1c 1188     		ldrh	r1, [r2]	@ unaligned
 15235 0f1e 9278     		ldrb	r2, [r2, #2]
 15236 0f20 1980     		strh	r1, [r3]	@ unaligned
 15237 0f22 9A70     		strb	r2, [r3, #2]
 15238              	.L583:
2011:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 15239              		.loc 1 2011 0 discriminator 2
 15240 0f24 D7F89430 		ldr	r3, [r7, #148]
 15241 0f28 0133     		adds	r3, r3, #1
 15242 0f2a C7F89430 		str	r3, [r7, #148]
 15243              	.L582:
2011:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 15244              		.loc 1 2011 0 is_stmt 0 discriminator 1
 15245 0f2e D7F89430 		ldr	r3, [r7, #148]
 15246 0f32 022B     		cmp	r3, #2
 15247 0f34 CADD     		ble	.L584
2016:..\src/command_processing.c ****                 }                
2017:..\src/command_processing.c ****             }
2018:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15248              		.loc 1 2018 0 is_stmt 1
 15249 0f36 7869     		ldr	r0, [r7, #20]
 15250 0f38 FFF7FEFF 		bl	strlen
 15251 0f3c 0346     		mov	r3, r0
 15252 0f3e 1A46     		mov	r2, r3
 15253 0f40 7B69     		ldr	r3, [r7, #20]
 15254 0f42 1344     		add	r3, r3, r2
 15255 0f44 174A     		ldr	r2, .L630+40
 15256 0f46 1188     		ldrh	r1, [r2]	@ unaligned
 15257 0f48 9278     		ldrb	r2, [r2, #2]
 15258 0f4a 1980     		strh	r1, [r3]	@ unaligned
 15259 0f4c 9A70     		strb	r2, [r3, #2]
2019:..\src/command_processing.c **** 
2020:..\src/command_processing.c ****             strcat(info_string, "Measurement Offset: ");
 15260              		.loc 1 2020 0
 15261 0f4e 7869     		ldr	r0, [r7, #20]
 15262 0f50 FFF7FEFF 		bl	strlen
 15263 0f54 0346     		mov	r3, r0
 15264 0f56 1A46     		mov	r2, r3
 15265 0f58 7B69     		ldr	r3, [r7, #20]
 15266 0f5a 1344     		add	r3, r3, r2
 15267 0f5c 154A     		ldr	r2, .L630+56
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 341


 15268 0f5e 1D46     		mov	r5, r3
 15269 0f60 1446     		mov	r4, r2
 15270 0f62 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15271 0f64 2860     		str	r0, [r5]	@ unaligned
 15272 0f66 6960     		str	r1, [r5, #4]	@ unaligned
 15273 0f68 AA60     		str	r2, [r5, #8]	@ unaligned
 15274 0f6a EB60     		str	r3, [r5, #12]	@ unaligned
 15275 0f6c 2068     		ldr	r0, [r4]	@ unaligned
 15276 0f6e 2861     		str	r0, [r5, #16]	@ unaligned
 15277 0f70 2379     		ldrb	r3, [r4, #4]
 15278 0f72 2B75     		strb	r3, [r5, #20]
2021:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 15279              		.loc 1 2021 0
 15280 0f74 0023     		movs	r3, #0
 15281 0f76 C7F89430 		str	r3, [r7, #148]
 15282 0f7a 5DE0     		b	.L585
 15283              	.L631:
 15284              		.align	2
 15285              	.L630:
 15286 0f7c 5C120000 		.word	.LC179
 15287 0f80 74120000 		.word	.LC180
 15288 0f84 90120000 		.word	.LC181
 15289 0f88 C0120000 		.word	.LC182
 15290 0f8c DC120000 		.word	.LC183
 15291 0f90 F0120000 		.word	.LC184
 15292 0f94 08130000 		.word	.LC185
 15293 0f98 30130000 		.word	.LC186
 15294 0f9c 54130000 		.word	.LC187
 15295 0fa0 74130000 		.word	.LC188
 15296 0fa4 A80E0000 		.word	.LC132
 15297 0fa8 90130000 		.word	.LC189
 15298 0fac BC100000 		.word	.LC161
 15299 0fb0 C0100000 		.word	.LC162
 15300 0fb4 A4130000 		.word	.LC190
 15301              	.L587:
2022:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 15302              		.loc 1 2022 0
 15303 0fb8 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 15304 0fbc D7F88C10 		ldr	r1, [r7, #140]
 15305 0fc0 1346     		mov	r3, r2
 15306 0fc2 5B00     		lsls	r3, r3, #1
 15307 0fc4 1344     		add	r3, r3, r2
 15308 0fc6 9B00     		lsls	r3, r3, #2
 15309 0fc8 D7F89420 		ldr	r2, [r7, #148]
 15310 0fcc 1344     		add	r3, r3, r2
 15311 0fce 6633     		adds	r3, r3, #102
 15312 0fd0 51F82310 		ldr	r1, [r1, r3, lsl #2]
 15313 0fd4 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 15314 0fd8 D7F88C00 		ldr	r0, [r7, #140]
 15315 0fdc 1346     		mov	r3, r2
 15316 0fde 5B00     		lsls	r3, r3, #1
 15317 0fe0 1344     		add	r3, r3, r2
 15318 0fe2 1B01     		lsls	r3, r3, #4
 15319 0fe4 C218     		adds	r2, r0, r3
 15320 0fe6 D7F89430 		ldr	r3, [r7, #148]
 15321 0fea 1344     		add	r3, r3, r2
 15322 0fec 03F29513 		addw	r3, r3, #405
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 342


 15323 0ff0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15324 0ff2 41FA03F2 		asr	r2, r1, r3
 15325 0ff6 07F11C03 		add	r3, r7, #28
 15326 0ffa 2349     		ldr	r1, .L632
 15327 0ffc 1846     		mov	r0, r3
 15328 0ffe FFF7FEFF 		bl	sprintf
2023:..\src/command_processing.c ****                 strcat(info_string, str);
 15329              		.loc 1 2023 0
 15330 1002 07F11C03 		add	r3, r7, #28
 15331 1006 1946     		mov	r1, r3
 15332 1008 7869     		ldr	r0, [r7, #20]
 15333 100a FFF7FEFF 		bl	strcat
2024:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 15334              		.loc 1 2024 0
 15335 100e D7F89430 		ldr	r3, [r7, #148]
 15336 1012 022B     		cmp	r3, #2
 15337 1014 0BD0     		beq	.L586
2025:..\src/command_processing.c ****                     strcat(info_string, ", ");
 15338              		.loc 1 2025 0
 15339 1016 7869     		ldr	r0, [r7, #20]
 15340 1018 FFF7FEFF 		bl	strlen
 15341 101c 0346     		mov	r3, r0
 15342 101e 1A46     		mov	r2, r3
 15343 1020 7B69     		ldr	r3, [r7, #20]
 15344 1022 1344     		add	r3, r3, r2
 15345 1024 194A     		ldr	r2, .L632+4
 15346 1026 1188     		ldrh	r1, [r2]	@ unaligned
 15347 1028 9278     		ldrb	r2, [r2, #2]
 15348 102a 1980     		strh	r1, [r3]	@ unaligned
 15349 102c 9A70     		strb	r2, [r3, #2]
 15350              	.L586:
2021:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 15351              		.loc 1 2021 0 discriminator 2
 15352 102e D7F89430 		ldr	r3, [r7, #148]
 15353 1032 0133     		adds	r3, r3, #1
 15354 1034 C7F89430 		str	r3, [r7, #148]
 15355              	.L585:
2021:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 15356              		.loc 1 2021 0 is_stmt 0 discriminator 1
 15357 1038 D7F89430 		ldr	r3, [r7, #148]
 15358 103c 022B     		cmp	r3, #2
 15359 103e BBDD     		ble	.L587
2026:..\src/command_processing.c ****                 }
2027:..\src/command_processing.c ****             }
2028:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15360              		.loc 1 2028 0 is_stmt 1
 15361 1040 7869     		ldr	r0, [r7, #20]
 15362 1042 FFF7FEFF 		bl	strlen
 15363 1046 0346     		mov	r3, r0
 15364 1048 1A46     		mov	r2, r3
 15365 104a 7B69     		ldr	r3, [r7, #20]
 15366 104c 1344     		add	r3, r3, r2
 15367 104e 104A     		ldr	r2, .L632+8
 15368 1050 1188     		ldrh	r1, [r2]	@ unaligned
 15369 1052 9278     		ldrb	r2, [r2, #2]
 15370 1054 1980     		strh	r1, [r3]	@ unaligned
 15371 1056 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 343


2029:..\src/command_processing.c ****                 
2030:..\src/command_processing.c ****             strcat(info_string, "Measurement Multiplier: ");
 15372              		.loc 1 2030 0
 15373 1058 7869     		ldr	r0, [r7, #20]
 15374 105a FFF7FEFF 		bl	strlen
 15375 105e 0346     		mov	r3, r0
 15376 1060 1A46     		mov	r2, r3
 15377 1062 7B69     		ldr	r3, [r7, #20]
 15378 1064 1344     		add	r3, r3, r2
 15379 1066 0B4A     		ldr	r2, .L632+12
 15380 1068 1D46     		mov	r5, r3
 15381 106a 1446     		mov	r4, r2
 15382 106c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15383 106e 2860     		str	r0, [r5]	@ unaligned
 15384 1070 6960     		str	r1, [r5, #4]	@ unaligned
 15385 1072 AA60     		str	r2, [r5, #8]	@ unaligned
 15386 1074 EB60     		str	r3, [r5, #12]	@ unaligned
 15387 1076 03CC     		ldmia	r4!, {r0, r1}
 15388 1078 2861     		str	r0, [r5, #16]	@ unaligned
 15389 107a 6961     		str	r1, [r5, #20]	@ unaligned
 15390 107c 2378     		ldrb	r3, [r4]
 15391 107e 2B76     		strb	r3, [r5, #24]
2031:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 15392              		.loc 1 2031 0
 15393 1080 0023     		movs	r3, #0
 15394 1082 C7F89430 		str	r3, [r7, #148]
 15395 1086 3DE0     		b	.L588
 15396              	.L633:
 15397              		.align	2
 15398              	.L632:
 15399 1088 BC130000 		.word	.LC191
 15400 108c C0100000 		.word	.LC162
 15401 1090 A80E0000 		.word	.LC132
 15402 1094 C0130000 		.word	.LC192
 15403              	.L590:
2032:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 15404              		.loc 1 2032 0
 15405 1098 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 15406 109c D7F88C10 		ldr	r1, [r7, #140]
 15407 10a0 1346     		mov	r3, r2
 15408 10a2 5B00     		lsls	r3, r3, #1
 15409 10a4 1344     		add	r3, r3, r2
 15410 10a6 9B00     		lsls	r3, r3, #2
 15411 10a8 D7F89420 		ldr	r2, [r7, #148]
 15412 10ac 1344     		add	r3, r3, r2
 15413 10ae 6833     		adds	r3, r3, #104
 15414 10b0 9B00     		lsls	r3, r3, #2
 15415 10b2 0B44     		add	r3, r3, r1
 15416 10b4 5B68     		ldr	r3, [r3, #4]	@ float
 15417 10b6 1846     		mov	r0, r3
 15418 10b8 FFF7FEFF 		bl	__aeabi_f2d
 15419 10bc 0346     		mov	r3, r0
 15420 10be 0C46     		mov	r4, r1
 15421 10c0 07F11C00 		add	r0, r7, #28
 15422 10c4 1A46     		mov	r2, r3
 15423 10c6 2346     		mov	r3, r4
 15424 10c8 BF49     		ldr	r1, .L634
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 344


 15425 10ca FFF7FEFF 		bl	sprintf
2033:..\src/command_processing.c ****                 strcat(info_string, str);
 15426              		.loc 1 2033 0
 15427 10ce 07F11C03 		add	r3, r7, #28
 15428 10d2 1946     		mov	r1, r3
 15429 10d4 7869     		ldr	r0, [r7, #20]
 15430 10d6 FFF7FEFF 		bl	strcat
2034:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 15431              		.loc 1 2034 0
 15432 10da D7F89430 		ldr	r3, [r7, #148]
 15433 10de 022B     		cmp	r3, #2
 15434 10e0 0BD0     		beq	.L589
2035:..\src/command_processing.c ****                     strcat(info_string, ", ");
 15435              		.loc 1 2035 0
 15436 10e2 7869     		ldr	r0, [r7, #20]
 15437 10e4 FFF7FEFF 		bl	strlen
 15438 10e8 0346     		mov	r3, r0
 15439 10ea 1A46     		mov	r2, r3
 15440 10ec 7B69     		ldr	r3, [r7, #20]
 15441 10ee 1344     		add	r3, r3, r2
 15442 10f0 B64A     		ldr	r2, .L634+4
 15443 10f2 1188     		ldrh	r1, [r2]	@ unaligned
 15444 10f4 9278     		ldrb	r2, [r2, #2]
 15445 10f6 1980     		strh	r1, [r3]	@ unaligned
 15446 10f8 9A70     		strb	r2, [r3, #2]
 15447              	.L589:
2031:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 15448              		.loc 1 2031 0 discriminator 2
 15449 10fa D7F89430 		ldr	r3, [r7, #148]
 15450 10fe 0133     		adds	r3, r3, #1
 15451 1100 C7F89430 		str	r3, [r7, #148]
 15452              	.L588:
2031:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 15453              		.loc 1 2031 0 is_stmt 0 discriminator 1
 15454 1104 D7F89430 		ldr	r3, [r7, #148]
 15455 1108 022B     		cmp	r3, #2
 15456 110a C5DD     		ble	.L590
2036:..\src/command_processing.c ****                 }
2037:..\src/command_processing.c ****             }
2038:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15457              		.loc 1 2038 0 is_stmt 1 discriminator 2
 15458 110c 7869     		ldr	r0, [r7, #20]
 15459 110e FFF7FEFF 		bl	strlen
 15460 1112 0346     		mov	r3, r0
 15461 1114 1A46     		mov	r2, r3
 15462 1116 7B69     		ldr	r3, [r7, #20]
 15463 1118 1344     		add	r3, r3, r2
 15464 111a AD4A     		ldr	r2, .L634+8
 15465 111c 1188     		ldrh	r1, [r2]	@ unaligned
 15466 111e 9278     		ldrb	r2, [r2, #2]
 15467 1120 1980     		strh	r1, [r3]	@ unaligned
 15468 1122 9A70     		strb	r2, [r3, #2]
2039:..\src/command_processing.c ****             
2040:..\src/command_processing.c ****     		sprintf(str, "Current lookup table: %f, %f, %f, %f, %f, %f\r\n", 
2041:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 15469              		.loc 1 2041 0 discriminator 2
 15470 1124 D7F88430 		ldr	r3, [r7, #132]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 345


 15471 1128 5B6C     		ldr	r3, [r3, #68]	@ float
2040:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 15472              		.loc 1 2040 0 discriminator 2
 15473 112a 1846     		mov	r0, r3
 15474 112c FFF7FEFF 		bl	__aeabi_f2d
 15475 1130 C7E90201 		strd	r0, [r7, #8]
 15476              		.loc 1 2041 0 discriminator 2
 15477 1134 D7F88430 		ldr	r3, [r7, #132]
 15478 1138 9B6C     		ldr	r3, [r3, #72]	@ float
2040:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 15479              		.loc 1 2040 0 discriminator 2
 15480 113a 1846     		mov	r0, r3
 15481 113c FFF7FEFF 		bl	__aeabi_f2d
 15482 1140 0446     		mov	r4, r0
 15483 1142 0D46     		mov	r5, r1
 15484              		.loc 1 2041 0 discriminator 2
 15485 1144 D7F88430 		ldr	r3, [r7, #132]
 15486 1148 DB6C     		ldr	r3, [r3, #76]	@ float
2040:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 15487              		.loc 1 2040 0 discriminator 2
 15488 114a 1846     		mov	r0, r3
 15489 114c FFF7FEFF 		bl	__aeabi_f2d
 15490 1150 8046     		mov	r8, r0
 15491 1152 8946     		mov	r9, r1
2042:..\src/command_processing.c ****                 MOT->curr_lookup[3], MOT->curr_lookup[4], MOT->curr_lookup[5]);
 15492              		.loc 1 2042 0 discriminator 2
 15493 1154 D7F88430 		ldr	r3, [r7, #132]
 15494 1158 1B6D     		ldr	r3, [r3, #80]	@ float
2040:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 15495              		.loc 1 2040 0 discriminator 2
 15496 115a 1846     		mov	r0, r3
 15497 115c FFF7FEFF 		bl	__aeabi_f2d
 15498 1160 8246     		mov	r10, r0
 15499 1162 8B46     		mov	fp, r1
 15500              		.loc 1 2042 0 discriminator 2
 15501 1164 D7F88430 		ldr	r3, [r7, #132]
 15502 1168 5B6D     		ldr	r3, [r3, #84]	@ float
2040:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 15503              		.loc 1 2040 0 discriminator 2
 15504 116a 1846     		mov	r0, r3
 15505 116c FFF7FEFF 		bl	__aeabi_f2d
 15506 1170 C7E90001 		strd	r0, [r7]
 15507              		.loc 1 2042 0 discriminator 2
 15508 1174 D7F88430 		ldr	r3, [r7, #132]
 15509 1178 9B6D     		ldr	r3, [r3, #88]	@ float
2040:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 15510              		.loc 1 2040 0 discriminator 2
 15511 117a 1846     		mov	r0, r3
 15512 117c FFF7FEFF 		bl	__aeabi_f2d
 15513 1180 0246     		mov	r2, r0
 15514 1182 0B46     		mov	r3, r1
 15515 1184 07F11C00 		add	r0, r7, #28
 15516 1188 CDE90823 		strd	r2, [sp, #32]
 15517 118c D7E90012 		ldrd	r1, [r7]
 15518 1190 CDE90612 		strd	r1, [sp, #24]
 15519 1194 CDE904AB 		strd	r10, [sp, #16]
 15520 1198 CDE90289 		strd	r8, [sp, #8]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 346


 15521 119c CDE90045 		strd	r4, [sp]
 15522 11a0 D7E90223 		ldrd	r2, [r7, #8]
 15523 11a4 8B49     		ldr	r1, .L634+12
 15524 11a6 FFF7FEFF 		bl	sprintf
2043:..\src/command_processing.c **** 		    strcat(info_string, str);       
 15525              		.loc 1 2043 0 discriminator 2
 15526 11aa 07F11C03 		add	r3, r7, #28
 15527 11ae 1946     		mov	r1, r3
 15528 11b0 7869     		ldr	r0, [r7, #20]
 15529 11b2 FFF7FEFF 		bl	strcat
2044:..\src/command_processing.c **** 
2045:..\src/command_processing.c ****             sprintf(str, "Position limit active: %d", (int)MOT->pos_lim_flag);
 15530              		.loc 1 2045 0 discriminator 2
 15531 11b6 D7F88430 		ldr	r3, [r7, #132]
 15532 11ba 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 15533 11be 1A46     		mov	r2, r3
 15534 11c0 07F11C03 		add	r3, r7, #28
 15535 11c4 8449     		ldr	r1, .L634+16
 15536 11c6 1846     		mov	r0, r3
 15537 11c8 FFF7FEFF 		bl	sprintf
2046:..\src/command_processing.c ****             strcat(info_string, str);
 15538              		.loc 1 2046 0 discriminator 2
 15539 11cc 07F11C03 		add	r3, r7, #28
 15540 11d0 1946     		mov	r1, r3
 15541 11d2 7869     		ldr	r0, [r7, #20]
 15542 11d4 FFF7FEFF 		bl	strcat
2047:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15543              		.loc 1 2047 0 discriminator 2
 15544 11d8 7869     		ldr	r0, [r7, #20]
 15545 11da FFF7FEFF 		bl	strlen
 15546 11de 0346     		mov	r3, r0
 15547 11e0 1A46     		mov	r2, r3
 15548 11e2 7B69     		ldr	r3, [r7, #20]
 15549 11e4 1344     		add	r3, r3, r2
 15550 11e6 7A4A     		ldr	r2, .L634+8
 15551 11e8 1188     		ldrh	r1, [r2]	@ unaligned
 15552 11ea 9278     		ldrb	r2, [r2, #2]
 15553 11ec 1980     		strh	r1, [r3]	@ unaligned
 15554 11ee 9A70     		strb	r2, [r3, #2]
2048:..\src/command_processing.c **** 
2049:..\src/command_processing.c ****             sprintf(str, "Position limit motor: inf -> %ld  ", (int32)MOT->pos_lim_inf >> MEM_P->en
 15555              		.loc 1 2049 0 discriminator 2
 15556 11f0 D7F88430 		ldr	r3, [r7, #132]
 15557 11f4 596B     		ldr	r1, [r3, #52]
 15558 11f6 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 15559 11fa D7F88C00 		ldr	r0, [r7, #140]
 15560 11fe 1346     		mov	r3, r2
 15561 1200 5B00     		lsls	r3, r3, #1
 15562 1202 1344     		add	r3, r3, r2
 15563 1204 1B01     		lsls	r3, r3, #4
 15564 1206 0344     		add	r3, r3, r0
 15565 1208 03F29513 		addw	r3, r3, #405
 15566 120c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15567 120e 41FA03F2 		asr	r2, r1, r3
 15568 1212 07F11C03 		add	r3, r7, #28
 15569 1216 7149     		ldr	r1, .L634+20
 15570 1218 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 347


 15571 121a FFF7FEFF 		bl	sprintf
2050:..\src/command_processing.c ****             strcat(info_string, str);
 15572              		.loc 1 2050 0 discriminator 2
 15573 121e 07F11C03 		add	r3, r7, #28
 15574 1222 1946     		mov	r1, r3
 15575 1224 7869     		ldr	r0, [r7, #20]
 15576 1226 FFF7FEFF 		bl	strcat
2051:..\src/command_processing.c ****             sprintf(str, "sup -> %ld\r\n", (int32)MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]);
 15577              		.loc 1 2051 0 discriminator 2
 15578 122a D7F88430 		ldr	r3, [r7, #132]
 15579 122e 996B     		ldr	r1, [r3, #56]
 15580 1230 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 15581 1234 D7F88C00 		ldr	r0, [r7, #140]
 15582 1238 1346     		mov	r3, r2
 15583 123a 5B00     		lsls	r3, r3, #1
 15584 123c 1344     		add	r3, r3, r2
 15585 123e 1B01     		lsls	r3, r3, #4
 15586 1240 0344     		add	r3, r3, r0
 15587 1242 03F29513 		addw	r3, r3, #405
 15588 1246 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15589 1248 41FA03F2 		asr	r2, r1, r3
 15590 124c 07F11C03 		add	r3, r7, #28
 15591 1250 6349     		ldr	r1, .L634+24
 15592 1252 1846     		mov	r0, r3
 15593 1254 FFF7FEFF 		bl	sprintf
2052:..\src/command_processing.c ****             strcat(info_string, str);
 15594              		.loc 1 2052 0 discriminator 2
 15595 1258 07F11C03 		add	r3, r7, #28
 15596 125c 1946     		mov	r1, r3
 15597 125e 7869     		ldr	r0, [r7, #20]
 15598 1260 FFF7FEFF 		bl	strcat
2053:..\src/command_processing.c **** 
2054:..\src/command_processing.c ****             sprintf(str, "Max step pos and neg: %d %d", (int)MOT->max_step_pos, (int)MOT->max_step_
 15599              		.loc 1 2054 0 discriminator 2
 15600 1264 D7F88430 		ldr	r3, [r7, #132]
 15601 1268 1A6C     		ldr	r2, [r3, #64]
 15602 126a D7F88430 		ldr	r3, [r7, #132]
 15603 126e DB6B     		ldr	r3, [r3, #60]
 15604 1270 07F11C00 		add	r0, r7, #28
 15605 1274 5B49     		ldr	r1, .L634+28
 15606 1276 FFF7FEFF 		bl	sprintf
2055:..\src/command_processing.c ****             strcat(info_string, str);
 15607              		.loc 1 2055 0 discriminator 2
 15608 127a 07F11C03 		add	r3, r7, #28
 15609 127e 1946     		mov	r1, r3
 15610 1280 7869     		ldr	r0, [r7, #20]
 15611 1282 FFF7FEFF 		bl	strcat
2056:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15612              		.loc 1 2056 0 discriminator 2
 15613 1286 7869     		ldr	r0, [r7, #20]
 15614 1288 FFF7FEFF 		bl	strlen
 15615 128c 0346     		mov	r3, r0
 15616 128e 1A46     		mov	r2, r3
 15617 1290 7B69     		ldr	r3, [r7, #20]
 15618 1292 1344     		add	r3, r3, r2
 15619 1294 4E4A     		ldr	r2, .L634+8
 15620 1296 1188     		ldrh	r1, [r2]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 348


 15621 1298 9278     		ldrb	r2, [r2, #2]
 15622 129a 1980     		strh	r1, [r3]	@ unaligned
 15623 129c 9A70     		strb	r2, [r3, #2]
2057:..\src/command_processing.c **** 
2058:..\src/command_processing.c ****             sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 15624              		.loc 1 2058 0 discriminator 2
 15625 129e D7F88430 		ldr	r3, [r7, #132]
 15626 12a2 B3F95C30 		ldrsh	r3, [r3, #92]
 15627 12a6 1A46     		mov	r2, r3
 15628 12a8 07F11C03 		add	r3, r7, #28
 15629 12ac 4E49     		ldr	r1, .L634+32
 15630 12ae 1846     		mov	r0, r3
 15631 12b0 FFF7FEFF 		bl	sprintf
2059:..\src/command_processing.c ****             strcat(info_string, str);
 15632              		.loc 1 2059 0 discriminator 2
 15633 12b4 07F11C03 		add	r3, r7, #28
 15634 12b8 1946     		mov	r1, r3
 15635 12ba 7869     		ldr	r0, [r7, #20]
 15636 12bc FFF7FEFF 		bl	strcat
2060:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
2061:..\src/command_processing.c ****             sprintf(str, "Motor board associated encoder line: %d\r\n", (int)MOT->encoder_line);
2062:..\src/command_processing.c ****             strcat(info_string, str);
2063:..\src/command_processing.c ****             switch(MOT->motor_driver_type) {
2064:..\src/command_processing.c ****                 case DRIVER_MC33887:
2065:..\src/command_processing.c ****                     strcat(info_string, "Driver type: MC33887 (Standard)\r\n");
2066:..\src/command_processing.c ****                     break;
2067:..\src/command_processing.c ****                 case DRIVER_VNH5019:
2068:..\src/command_processing.c ****                     strcat(info_string, "Driver type: VNH5019 (High power)\r\n");
2069:..\src/command_processing.c ****                     break;
2070:..\src/command_processing.c ****                 default:
2071:..\src/command_processing.c ****                     break;
2072:..\src/command_processing.c ****             }
2073:..\src/command_processing.c ****             sprintf(str, "PWM rate limiter value: %d\r\n", (int)MOT->pwm_rate_limiter);
2074:..\src/command_processing.c ****             strcat(info_string, str);
2075:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag)
2076:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: YES\r\n");
2077:..\src/command_processing.c ****             else
2078:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: NO\r\n");
2079:..\src/command_processing.c **** #endif                
2080:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15637              		.loc 1 2080 0 discriminator 2
 15638 12c0 7869     		ldr	r0, [r7, #20]
 15639 12c2 FFF7FEFF 		bl	strlen
 15640 12c6 0346     		mov	r3, r0
 15641 12c8 1A46     		mov	r2, r3
 15642 12ca 7B69     		ldr	r3, [r7, #20]
 15643 12cc 1344     		add	r3, r3, r2
 15644 12ce 404A     		ldr	r2, .L634+8
 15645 12d0 1188     		ldrh	r1, [r2]	@ unaligned
 15646 12d2 9278     		ldrb	r2, [r2, #2]
 15647 12d4 1980     		strh	r1, [r3]	@ unaligned
 15648 12d6 9A70     		strb	r2, [r3, #2]
 15649              	.LBE18:
1819:..\src/command_processing.c ****             
 15650              		.loc 1 1819 0 discriminator 2
 15651 12d8 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 15652 12dc 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 349


 15653 12de 87F89330 		strb	r3, [r7, #147]
 15654              	.L540:
1819:..\src/command_processing.c ****             
 15655              		.loc 1 1819 0 is_stmt 0 discriminator 1
 15656 12e2 D7F88C30 		ldr	r3, [r7, #140]
 15657 12e6 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 15658 12ea 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 15659 12ee 9A42     		cmp	r2, r3
 15660 12f0 7EF6CDAF 		bls	.L591
 15661              	.LBE17:
2081:..\src/command_processing.c ****         }
2082:..\src/command_processing.c ****       
2083:..\src/command_processing.c ****         strcat(info_string, "EMG CONFIGURATION\r\n");
 15662              		.loc 1 2083 0 is_stmt 1
 15663 12f4 7869     		ldr	r0, [r7, #20]
 15664 12f6 FFF7FEFF 		bl	strlen
 15665 12fa 0346     		mov	r3, r0
 15666 12fc 1A46     		mov	r2, r3
 15667 12fe 7B69     		ldr	r3, [r7, #20]
 15668 1300 1344     		add	r3, r3, r2
 15669 1302 3A4A     		ldr	r2, .L634+36
 15670 1304 1D46     		mov	r5, r3
 15671 1306 1446     		mov	r4, r2
 15672 1308 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15673 130a 2860     		str	r0, [r5]	@ unaligned
 15674 130c 6960     		str	r1, [r5, #4]	@ unaligned
 15675 130e AA60     		str	r2, [r5, #8]	@ unaligned
 15676 1310 EB60     		str	r3, [r5, #12]	@ unaligned
 15677 1312 2068     		ldr	r0, [r4]	@ unaligned
 15678 1314 2861     		str	r0, [r5, #16]	@ unaligned
2084:..\src/command_processing.c ****         sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.e
 15679              		.loc 1 2084 0
 15680 1316 D7F88C30 		ldr	r3, [r7, #140]
 15681 131a B3F8F031 		ldrh	r3, [r3, #496]
 15682 131e 1A46     		mov	r2, r3
 15683 1320 D7F88C30 		ldr	r3, [r7, #140]
 15684 1324 B3F8F231 		ldrh	r3, [r3, #498]
 15685 1328 07F11C00 		add	r0, r7, #28
 15686 132c 3049     		ldr	r1, .L634+40
 15687 132e FFF7FEFF 		bl	sprintf
2085:..\src/command_processing.c ****         strcat(info_string, str);
 15688              		.loc 1 2085 0
 15689 1332 07F11C03 		add	r3, r7, #28
 15690 1336 1946     		mov	r1, r3
 15691 1338 7869     		ldr	r0, [r7, #20]
 15692 133a FFF7FEFF 		bl	strcat
2086:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 15693              		.loc 1 2086 0
 15694 133e 7869     		ldr	r0, [r7, #20]
 15695 1340 FFF7FEFF 		bl	strlen
 15696 1344 0346     		mov	r3, r0
 15697 1346 1A46     		mov	r2, r3
 15698 1348 7B69     		ldr	r3, [r7, #20]
 15699 134a 1344     		add	r3, r3, r2
 15700 134c 204A     		ldr	r2, .L634+8
 15701 134e 1188     		ldrh	r1, [r2]	@ unaligned
 15702 1350 9278     		ldrb	r2, [r2, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 350


 15703 1352 1980     		strh	r1, [r3]	@ unaligned
 15704 1354 9A70     		strb	r2, [r3, #2]
2087:..\src/command_processing.c **** 
2088:..\src/command_processing.c ****         sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg
 15705              		.loc 1 2088 0
 15706 1356 D7F88C30 		ldr	r3, [r7, #140]
 15707 135a D3F8F421 		ldr	r2, [r3, #500]
 15708 135e D7F88C30 		ldr	r3, [r7, #140]
 15709 1362 D3F8F831 		ldr	r3, [r3, #504]
 15710 1366 07F11C00 		add	r0, r7, #28
 15711 136a 2249     		ldr	r1, .L634+44
 15712 136c FFF7FEFF 		bl	sprintf
2089:..\src/command_processing.c ****         strcat(info_string, str);
 15713              		.loc 1 2089 0
 15714 1370 07F11C03 		add	r3, r7, #28
 15715 1374 1946     		mov	r1, r3
 15716 1376 7869     		ldr	r0, [r7, #20]
 15717 1378 FFF7FEFF 		bl	strcat
2090:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 15718              		.loc 1 2090 0
 15719 137c 7869     		ldr	r0, [r7, #20]
 15720 137e FFF7FEFF 		bl	strlen
 15721 1382 0346     		mov	r3, r0
 15722 1384 1A46     		mov	r2, r3
 15723 1386 7B69     		ldr	r3, [r7, #20]
 15724 1388 1344     		add	r3, r3, r2
 15725 138a 114A     		ldr	r2, .L634+8
 15726 138c 1188     		ldrh	r1, [r2]	@ unaligned
 15727 138e 9278     		ldrb	r2, [r2, #2]
 15728 1390 1980     		strh	r1, [r3]	@ unaligned
 15729 1392 9A70     		strb	r2, [r3, #2]
2091:..\src/command_processing.c **** 
2092:..\src/command_processing.c ****         if (MEM_P->emg.switch_emg)
 15730              		.loc 1 2092 0
 15731 1394 D7F88C30 		ldr	r3, [r7, #140]
 15732 1398 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 15733 139c 002B     		cmp	r3, #0
 15734 139e 2DD0     		beq	.L592
2093:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: YES\r\n");
 15735              		.loc 1 2093 0
 15736 13a0 7869     		ldr	r0, [r7, #20]
 15737 13a2 FFF7FEFF 		bl	strlen
 15738 13a6 0346     		mov	r3, r0
 15739 13a8 1A46     		mov	r2, r3
 15740 13aa 7B69     		ldr	r3, [r7, #20]
 15741 13ac 1344     		add	r3, r3, r2
 15742 13ae 124A     		ldr	r2, .L634+48
 15743 13b0 1D46     		mov	r5, r3
 15744 13b2 1446     		mov	r4, r2
 15745 13b4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15746 13b6 2860     		str	r0, [r5]	@ unaligned
 15747 13b8 6960     		str	r1, [r5, #4]	@ unaligned
 15748 13ba AA60     		str	r2, [r5, #8]	@ unaligned
 15749 13bc EB60     		str	r3, [r5, #12]	@ unaligned
 15750 13be 2068     		ldr	r0, [r4]	@ unaligned
 15751 13c0 2861     		str	r0, [r5, #16]	@ unaligned
 15752 13c2 2379     		ldrb	r3, [r4, #4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 351


 15753 13c4 2B75     		strb	r3, [r5, #20]
 15754 13c6 2AE0     		b	.L593
 15755              	.L635:
 15756              		.align	2
 15757              	.L634:
 15758 13c8 DC130000 		.word	.LC193
 15759 13cc C0100000 		.word	.LC162
 15760 13d0 A80E0000 		.word	.LC132
 15761 13d4 E0130000 		.word	.LC194
 15762 13d8 10140000 		.word	.LC195
 15763 13dc 2C140000 		.word	.LC196
 15764 13e0 50140000 		.word	.LC197
 15765 13e4 60140000 		.word	.LC198
 15766 13e8 7C140000 		.word	.LC199
 15767 13ec 90140000 		.word	.LC200
 15768 13f0 A4140000 		.word	.LC201
 15769 13f4 C8140000 		.word	.LC202
 15770 13f8 EC140000 		.word	.LC203
 15771              	.L592:
2094:..\src/command_processing.c ****         else
2095:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: NO\r\n");
 15772              		.loc 1 2095 0
 15773 13fc 7869     		ldr	r0, [r7, #20]
 15774 13fe FFF7FEFF 		bl	strlen
 15775 1402 0346     		mov	r3, r0
 15776 1404 1A46     		mov	r2, r3
 15777 1406 7B69     		ldr	r3, [r7, #20]
 15778 1408 1344     		add	r3, r3, r2
 15779 140a B84A     		ldr	r2, .L636
 15780 140c 1D46     		mov	r5, r3
 15781 140e 1446     		mov	r4, r2
 15782 1410 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15783 1412 2860     		str	r0, [r5]	@ unaligned
 15784 1414 6960     		str	r1, [r5, #4]	@ unaligned
 15785 1416 AA60     		str	r2, [r5, #8]	@ unaligned
 15786 1418 EB60     		str	r3, [r5, #12]	@ unaligned
 15787 141a 2068     		ldr	r0, [r4]	@ unaligned
 15788 141c 2861     		str	r0, [r5, #16]	@ unaligned
 15789              	.L593:
2096:..\src/command_processing.c ****             
2097:..\src/command_processing.c ****         if (MEM_P->emg.emg_calibration_flag)
 15790              		.loc 1 2097 0
 15791 141e D7F88C30 		ldr	r3, [r7, #140]
 15792 1422 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 15793 1426 002B     		cmp	r3, #0
 15794 1428 17D0     		beq	.L594
2098:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: YES\r\n");
 15795              		.loc 1 2098 0
 15796 142a 7869     		ldr	r0, [r7, #20]
 15797 142c FFF7FEFF 		bl	strlen
 15798 1430 0346     		mov	r3, r0
 15799 1432 1A46     		mov	r2, r3
 15800 1434 7B69     		ldr	r3, [r7, #20]
 15801 1436 1344     		add	r3, r3, r2
 15802 1438 AD4A     		ldr	r2, .L636+4
 15803 143a 1D46     		mov	r5, r3
 15804 143c 1446     		mov	r4, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 352


 15805 143e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15806 1440 2860     		str	r0, [r5]	@ unaligned
 15807 1442 6960     		str	r1, [r5, #4]	@ unaligned
 15808 1444 AA60     		str	r2, [r5, #8]	@ unaligned
 15809 1446 EB60     		str	r3, [r5, #12]	@ unaligned
 15810 1448 03CC     		ldmia	r4!, {r0, r1}
 15811 144a 2861     		str	r0, [r5, #16]	@ unaligned
 15812 144c 6961     		str	r1, [r5, #20]	@ unaligned
 15813 144e 2388     		ldrh	r3, [r4]	@ unaligned
 15814 1450 A278     		ldrb	r2, [r4, #2]
 15815 1452 2B83     		strh	r3, [r5, #24]	@ unaligned
 15816 1454 1346     		mov	r3, r2
 15817 1456 AB76     		strb	r3, [r5, #26]
 15818 1458 13E0     		b	.L595
 15819              	.L594:
2099:..\src/command_processing.c ****         else
2100:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: NO\r\n");
 15820              		.loc 1 2100 0
 15821 145a 7869     		ldr	r0, [r7, #20]
 15822 145c FFF7FEFF 		bl	strlen
 15823 1460 0346     		mov	r3, r0
 15824 1462 1A46     		mov	r2, r3
 15825 1464 7B69     		ldr	r3, [r7, #20]
 15826 1466 1344     		add	r3, r3, r2
 15827 1468 A24A     		ldr	r2, .L636+8
 15828 146a 1D46     		mov	r5, r3
 15829 146c 1446     		mov	r4, r2
 15830 146e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15831 1470 2860     		str	r0, [r5]	@ unaligned
 15832 1472 6960     		str	r1, [r5, #4]	@ unaligned
 15833 1474 AA60     		str	r2, [r5, #8]	@ unaligned
 15834 1476 EB60     		str	r3, [r5, #12]	@ unaligned
 15835 1478 03CC     		ldmia	r4!, {r0, r1}
 15836 147a 2861     		str	r0, [r5, #16]	@ unaligned
 15837 147c 6961     		str	r1, [r5, #20]	@ unaligned
 15838 147e 2388     		ldrh	r3, [r4]	@ unaligned
 15839 1480 2B83     		strh	r3, [r5, #24]	@ unaligned
 15840              	.L595:
2101:..\src/command_processing.c **** 
2102:..\src/command_processing.c ****         sprintf(str, "EMG max speed: %d", (int)MEM_P->emg.emg_speed);
 15841              		.loc 1 2102 0
 15842 1482 D7F88C30 		ldr	r3, [r7, #140]
 15843 1486 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 15844 148a 1A46     		mov	r2, r3
 15845 148c 07F11C03 		add	r3, r7, #28
 15846 1490 9949     		ldr	r1, .L636+12
 15847 1492 1846     		mov	r0, r3
 15848 1494 FFF7FEFF 		bl	sprintf
2103:..\src/command_processing.c ****         strcat(info_string, str);
 15849              		.loc 1 2103 0
 15850 1498 07F11C03 		add	r3, r7, #28
 15851 149c 1946     		mov	r1, r3
 15852 149e 7869     		ldr	r0, [r7, #20]
 15853 14a0 FFF7FEFF 		bl	strcat
2104:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 15854              		.loc 1 2104 0
 15855 14a4 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 353


 15856 14a6 FFF7FEFF 		bl	strlen
 15857 14aa 0346     		mov	r3, r0
 15858 14ac 1A46     		mov	r2, r3
 15859 14ae 7B69     		ldr	r3, [r7, #20]
 15860 14b0 1344     		add	r3, r3, r2
 15861 14b2 924A     		ldr	r2, .L636+16
 15862 14b4 1188     		ldrh	r1, [r2]	@ unaligned
 15863 14b6 9278     		ldrb	r2, [r2, #2]
 15864 14b8 1980     		strh	r1, [r3]	@ unaligned
 15865 14ba 9A70     		strb	r2, [r3, #2]
2105:..\src/command_processing.c **** 
2106:..\src/command_processing.c ****         if (MEM_P->exp.read_ADC_sensors_port_flag == TRUE){
 15866              		.loc 1 2106 0
 15867 14bc D7F88C30 		ldr	r3, [r7, #140]
 15868 14c0 93F82732 		ldrb	r3, [r3, #551]	@ zero_extendqisi2
 15869 14c4 012B     		cmp	r3, #1
 15870 14c6 6ED1     		bne	.L596
2107:..\src/command_processing.c ****             strcat(info_string, "Additional ADC sensors value:\r\n");
 15871              		.loc 1 2107 0
 15872 14c8 7869     		ldr	r0, [r7, #20]
 15873 14ca FFF7FEFF 		bl	strlen
 15874 14ce 0346     		mov	r3, r0
 15875 14d0 1A46     		mov	r2, r3
 15876 14d2 7B69     		ldr	r3, [r7, #20]
 15877 14d4 1344     		add	r3, r3, r2
 15878 14d6 8A4A     		ldr	r2, .L636+20
 15879 14d8 1C46     		mov	r4, r3
 15880 14da 1546     		mov	r5, r2
 15881 14dc 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15882 14de 2060     		str	r0, [r4]	@ unaligned
 15883 14e0 6160     		str	r1, [r4, #4]	@ unaligned
 15884 14e2 A260     		str	r2, [r4, #8]	@ unaligned
 15885 14e4 E360     		str	r3, [r4, #12]	@ unaligned
 15886 14e6 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15887 14e8 2061     		str	r0, [r4, #16]	@ unaligned
 15888 14ea 6161     		str	r1, [r4, #20]	@ unaligned
 15889 14ec A261     		str	r2, [r4, #24]	@ unaligned
 15890 14ee E361     		str	r3, [r4, #28]	@ unaligned
2108:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_ADDITIONAL_EMGS; ++i) {
 15891              		.loc 1 2108 0
 15892 14f0 0023     		movs	r3, #0
 15893 14f2 C7F89430 		str	r3, [r7, #148]
 15894 14f6 25E0     		b	.L597
 15895              	.L598:
2109:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_emg_meas.add_emg[i]);
 15896              		.loc 1 2109 0 discriminator 3
 15897 14f8 D7F89430 		ldr	r3, [r7, #148]
 15898 14fc 591C     		adds	r1, r3, #1
 15899 14fe 814A     		ldr	r2, .L636+24
 15900 1500 D7F89430 		ldr	r3, [r7, #148]
 15901 1504 0233     		adds	r3, r3, #2
 15902 1506 52F82330 		ldr	r3, [r2, r3, lsl #2]
 15903 150a 07F11C00 		add	r0, r7, #28
 15904 150e 0A46     		mov	r2, r1
 15905 1510 7D49     		ldr	r1, .L636+28
 15906 1512 FFF7FEFF 		bl	sprintf
2110:..\src/command_processing.c ****                 strcat(info_string, str);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 354


 15907              		.loc 1 2110 0 discriminator 3
 15908 1516 07F11C03 		add	r3, r7, #28
 15909 151a 1946     		mov	r1, r3
 15910 151c 7869     		ldr	r0, [r7, #20]
 15911 151e FFF7FEFF 		bl	strcat
2111:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 15912              		.loc 1 2111 0 discriminator 3
 15913 1522 7869     		ldr	r0, [r7, #20]
 15914 1524 FFF7FEFF 		bl	strlen
 15915 1528 0346     		mov	r3, r0
 15916 152a 1A46     		mov	r2, r3
 15917 152c 7B69     		ldr	r3, [r7, #20]
 15918 152e 1344     		add	r3, r3, r2
 15919 1530 724A     		ldr	r2, .L636+16
 15920 1532 1188     		ldrh	r1, [r2]	@ unaligned
 15921 1534 9278     		ldrb	r2, [r2, #2]
 15922 1536 1980     		strh	r1, [r3]	@ unaligned
 15923 1538 9A70     		strb	r2, [r3, #2]
2108:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_emg_meas.add_emg[i]);
 15924              		.loc 1 2108 0 discriminator 3
 15925 153a D7F89430 		ldr	r3, [r7, #148]
 15926 153e 0133     		adds	r3, r3, #1
 15927 1540 C7F89430 		str	r3, [r7, #148]
 15928              	.L597:
2108:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_emg_meas.add_emg[i]);
 15929              		.loc 1 2108 0 is_stmt 0 discriminator 1
 15930 1544 D7F89430 		ldr	r3, [r7, #148]
 15931 1548 052B     		cmp	r3, #5
 15932 154a D5DD     		ble	.L598
2112:..\src/command_processing.c ****             }
2113:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_INPUT_EMGS; ++i) {
 15933              		.loc 1 2113 0 is_stmt 1
 15934 154c 0023     		movs	r3, #0
 15935 154e C7F89430 		str	r3, [r7, #148]
 15936 1552 24E0     		b	.L599
 15937              	.L600:
2114:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_emg_meas.emg[i]);
 15938              		.loc 1 2114 0 discriminator 3
 15939 1554 D7F89430 		ldr	r3, [r7, #148]
 15940 1558 591C     		adds	r1, r3, #1
 15941 155a 6A4A     		ldr	r2, .L636+24
 15942 155c D7F89430 		ldr	r3, [r7, #148]
 15943 1560 52F82330 		ldr	r3, [r2, r3, lsl #2]
 15944 1564 07F11C00 		add	r0, r7, #28
 15945 1568 0A46     		mov	r2, r1
 15946 156a 6849     		ldr	r1, .L636+32
 15947 156c FFF7FEFF 		bl	sprintf
2115:..\src/command_processing.c ****                 strcat(info_string, str);
 15948              		.loc 1 2115 0 discriminator 3
 15949 1570 07F11C03 		add	r3, r7, #28
 15950 1574 1946     		mov	r1, r3
 15951 1576 7869     		ldr	r0, [r7, #20]
 15952 1578 FFF7FEFF 		bl	strcat
2116:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 15953              		.loc 1 2116 0 discriminator 3
 15954 157c 7869     		ldr	r0, [r7, #20]
 15955 157e FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 355


 15956 1582 0346     		mov	r3, r0
 15957 1584 1A46     		mov	r2, r3
 15958 1586 7B69     		ldr	r3, [r7, #20]
 15959 1588 1344     		add	r3, r3, r2
 15960 158a 5C4A     		ldr	r2, .L636+16
 15961 158c 1188     		ldrh	r1, [r2]	@ unaligned
 15962 158e 9278     		ldrb	r2, [r2, #2]
 15963 1590 1980     		strh	r1, [r3]	@ unaligned
 15964 1592 9A70     		strb	r2, [r3, #2]
2113:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_emg_meas.emg[i]);
 15965              		.loc 1 2113 0 discriminator 3
 15966 1594 D7F89430 		ldr	r3, [r7, #148]
 15967 1598 0133     		adds	r3, r3, #1
 15968 159a C7F89430 		str	r3, [r7, #148]
 15969              	.L599:
2113:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_emg_meas.emg[i]);
 15970              		.loc 1 2113 0 is_stmt 0 discriminator 1
 15971 159e D7F89430 		ldr	r3, [r7, #148]
 15972 15a2 012B     		cmp	r3, #1
 15973 15a4 D6DD     		ble	.L600
 15974              	.L596:
2117:..\src/command_processing.c ****             }
2118:..\src/command_processing.c ****         }
2119:..\src/command_processing.c ****         
2120:..\src/command_processing.c ****         if (MEM_P->SH.rest_position_flag) {
 15975              		.loc 1 2120 0 is_stmt 1
 15976 15a6 D7F88C30 		ldr	r3, [r7, #140]
 15977 15aa 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 15978 15ae 002B     		cmp	r3, #0
 15979 15b0 63D0     		beq	.L601
2121:..\src/command_processing.c ****     		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 15980              		.loc 1 2121 0
 15981 15b2 D7F88C30 		ldr	r3, [r7, #140]
 15982 15b6 D3F8A422 		ldr	r2, [r3, #676]
 15983 15ba 07F11C03 		add	r3, r7, #28
 15984 15be 5449     		ldr	r1, .L636+36
 15985 15c0 1846     		mov	r0, r3
 15986 15c2 FFF7FEFF 		bl	sprintf
2122:..\src/command_processing.c ****             strcat(info_string, str);
 15987              		.loc 1 2122 0
 15988 15c6 07F11C03 		add	r3, r7, #28
 15989 15ca 1946     		mov	r1, r3
 15990 15cc 7869     		ldr	r0, [r7, #20]
 15991 15ce FFF7FEFF 		bl	strcat
2123:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15992              		.loc 1 2123 0
 15993 15d2 7869     		ldr	r0, [r7, #20]
 15994 15d4 FFF7FEFF 		bl	strlen
 15995 15d8 0346     		mov	r3, r0
 15996 15da 1A46     		mov	r2, r3
 15997 15dc 7B69     		ldr	r3, [r7, #20]
 15998 15de 1344     		add	r3, r3, r2
 15999 15e0 464A     		ldr	r2, .L636+16
 16000 15e2 1188     		ldrh	r1, [r2]	@ unaligned
 16001 15e4 9278     		ldrb	r2, [r2, #2]
 16002 15e6 1980     		strh	r1, [r3]	@ unaligned
 16003 15e8 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 356


2124:..\src/command_processing.c ****             
2125:..\src/command_processing.c ****             sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 16004              		.loc 1 2125 0
 16005 15ea D7F88C30 		ldr	r3, [r7, #140]
 16006 15ee D3F8A822 		ldr	r2, [r3, #680]
 16007 15f2 07F11C03 		add	r3, r7, #28
 16008 15f6 4749     		ldr	r1, .L636+40
 16009 15f8 1846     		mov	r0, r3
 16010 15fa FFF7FEFF 		bl	sprintf
2126:..\src/command_processing.c ****             strcat(info_string, str);
 16011              		.loc 1 2126 0
 16012 15fe 07F11C03 		add	r3, r7, #28
 16013 1602 1946     		mov	r1, r3
 16014 1604 7869     		ldr	r0, [r7, #20]
 16015 1606 FFF7FEFF 		bl	strcat
2127:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16016              		.loc 1 2127 0
 16017 160a 7869     		ldr	r0, [r7, #20]
 16018 160c FFF7FEFF 		bl	strlen
 16019 1610 0346     		mov	r3, r0
 16020 1612 1A46     		mov	r2, r3
 16021 1614 7B69     		ldr	r3, [r7, #20]
 16022 1616 1344     		add	r3, r3, r2
 16023 1618 384A     		ldr	r2, .L636+16
 16024 161a 1188     		ldrh	r1, [r2]	@ unaligned
 16025 161c 9278     		ldrb	r2, [r2, #2]
 16026 161e 1980     		strh	r1, [r3]	@ unaligned
 16027 1620 9A70     		strb	r2, [r3, #2]
2128:..\src/command_processing.c ****             
2129:..\src/command_processing.c ****             sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0
 16028              		.loc 1 2129 0
 16029 1622 D7F88C30 		ldr	r3, [r7, #140]
 16030 1626 D3F8A022 		ldr	r2, [r3, #672]
 16031 162a D7F88C30 		ldr	r3, [r7, #140]
 16032 162e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 16033 1632 1846     		mov	r0, r3
 16034 1634 D7F88C10 		ldr	r1, [r7, #140]
 16035 1638 0346     		mov	r3, r0
 16036 163a 5B00     		lsls	r3, r3, #1
 16037 163c 0344     		add	r3, r3, r0
 16038 163e 1B01     		lsls	r3, r3, #4
 16039 1640 0B44     		add	r3, r3, r1
 16040 1642 03F29513 		addw	r3, r3, #405
 16041 1646 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16042 1648 1A41     		asrs	r2, r2, r3
 16043 164a 07F11C03 		add	r3, r7, #28
 16044 164e 3249     		ldr	r1, .L636+44
 16045 1650 1846     		mov	r0, r3
 16046 1652 FFF7FEFF 		bl	sprintf
2130:..\src/command_processing.c ****             strcat(info_string, str);
 16047              		.loc 1 2130 0
 16048 1656 07F11C03 		add	r3, r7, #28
 16049 165a 1946     		mov	r1, r3
 16050 165c 7869     		ldr	r0, [r7, #20]
 16051 165e FFF7FEFF 		bl	strcat
2131:..\src/command_processing.c ****             strcat(info_string, "\r\n");  
 16052              		.loc 1 2131 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 357


 16053 1662 7869     		ldr	r0, [r7, #20]
 16054 1664 FFF7FEFF 		bl	strlen
 16055 1668 0346     		mov	r3, r0
 16056 166a 1A46     		mov	r2, r3
 16057 166c 7B69     		ldr	r3, [r7, #20]
 16058 166e 1344     		add	r3, r3, r2
 16059 1670 224A     		ldr	r2, .L636+16
 16060 1672 1188     		ldrh	r1, [r2]	@ unaligned
 16061 1674 9278     		ldrb	r2, [r2, #2]
 16062 1676 1980     		strh	r1, [r3]	@ unaligned
 16063 1678 9A70     		strb	r2, [r3, #2]
 16064              	.L601:
2132:..\src/command_processing.c ****         }
2133:..\src/command_processing.c **** 
2134:..\src/command_processing.c ****         if (MEM_P->imu.read_imu_flag) {
 16065              		.loc 1 2134 0
 16066 167a D7F88C30 		ldr	r3, [r7, #140]
 16067 167e 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 16068 1682 002B     		cmp	r3, #0
 16069 1684 00F0CC81 		beq	.L602
2135:..\src/command_processing.c ****             sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 16070              		.loc 1 2135 0
 16071 1688 244B     		ldr	r3, .L636+48
 16072 168a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16073 168c 1A46     		mov	r2, r3
 16074 168e 07F11C03 		add	r3, r7, #28
 16075 1692 2349     		ldr	r1, .L636+52
 16076 1694 1846     		mov	r0, r3
 16077 1696 FFF7FEFF 		bl	sprintf
2136:..\src/command_processing.c ****             strcat(info_string, str);
 16078              		.loc 1 2136 0
 16079 169a 07F11C03 		add	r3, r7, #28
 16080 169e 1946     		mov	r1, r3
 16081 16a0 7869     		ldr	r0, [r7, #20]
 16082 16a2 FFF7FEFF 		bl	strcat
2137:..\src/command_processing.c ****             
2138:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16083              		.loc 1 2138 0
 16084 16a6 7869     		ldr	r0, [r7, #20]
 16085 16a8 FFF7FEFF 		bl	strlen
 16086 16ac 0346     		mov	r3, r0
 16087 16ae 1A46     		mov	r2, r3
 16088 16b0 7B69     		ldr	r3, [r7, #20]
 16089 16b2 1344     		add	r3, r3, r2
 16090 16b4 114A     		ldr	r2, .L636+16
 16091 16b6 1188     		ldrh	r1, [r2]	@ unaligned
 16092 16b8 9278     		ldrb	r2, [r2, #2]
 16093 16ba 1980     		strh	r1, [r3]	@ unaligned
 16094 16bc 9A70     		strb	r2, [r3, #2]
2139:..\src/command_processing.c ****             
2140:..\src/command_processing.c ****             strcat(info_string, "IMUs CONFIGURATION\r\n");
 16095              		.loc 1 2140 0
 16096 16be 7869     		ldr	r0, [r7, #20]
 16097 16c0 FFF7FEFF 		bl	strlen
 16098 16c4 0346     		mov	r3, r0
 16099 16c6 1A46     		mov	r2, r3
 16100 16c8 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 358


 16101 16ca 1344     		add	r3, r3, r2
 16102 16cc 154A     		ldr	r2, .L636+56
 16103 16ce 1D46     		mov	r5, r3
 16104 16d0 1446     		mov	r4, r2
 16105 16d2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16106 16d4 2860     		str	r0, [r5]	@ unaligned
 16107 16d6 6960     		str	r1, [r5, #4]	@ unaligned
 16108 16d8 AA60     		str	r2, [r5, #8]	@ unaligned
 16109 16da EB60     		str	r3, [r5, #12]	@ unaligned
 16110 16dc 2068     		ldr	r0, [r4]	@ unaligned
 16111 16de 2861     		str	r0, [r5, #16]	@ unaligned
 16112 16e0 2379     		ldrb	r3, [r4, #4]
 16113 16e2 2B75     		strb	r3, [r5, #20]
2141:..\src/command_processing.c ****             for (i=0; i<N_IMU_Connected; i++){
 16114              		.loc 1 2141 0
 16115 16e4 0023     		movs	r3, #0
 16116 16e6 C7F89430 		str	r3, [r7, #148]
 16117 16ea 82E1     		b	.L603
 16118              	.L637:
 16119              		.align	2
 16120              	.L636:
 16121 16ec 04150000 		.word	.LC204
 16122 16f0 18150000 		.word	.LC205
 16123 16f4 34150000 		.word	.LC206
 16124 16f8 50150000 		.word	.LC207
 16125 16fc A80E0000 		.word	.LC132
 16126 1700 64150000 		.word	.LC208
 16127 1704 00000000 		.word	g_emg_meas
 16128 1708 84150000 		.word	.LC209
 16129 170c 94150000 		.word	.LC210
 16130 1710 A8150000 		.word	.LC211
 16131 1714 C4150000 		.word	.LC212
 16132 1718 EC150000 		.word	.LC213
 16133 171c 00000000 		.word	N_IMU_Connected
 16134 1720 00160000 		.word	.LC214
 16135 1724 14160000 		.word	.LC215
 16136              	.L614:
2142:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 16137              		.loc 1 2142 0
 16138 1728 D54A     		ldr	r2, .L638
 16139 172a D7F89430 		ldr	r3, [r7, #148]
 16140 172e 1344     		add	r3, r3, r2
 16141 1730 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16142 1732 07F11C00 		add	r0, r7, #28
 16143 1736 D7F89420 		ldr	r2, [r7, #148]
 16144 173a D249     		ldr	r1, .L638+4
 16145 173c FFF7FEFF 		bl	sprintf
2143:..\src/command_processing.c ****                 strcat(info_string, str);
 16146              		.loc 1 2143 0
 16147 1740 07F11C03 		add	r3, r7, #28
 16148 1744 1946     		mov	r1, r3
 16149 1746 7869     		ldr	r0, [r7, #20]
 16150 1748 FFF7FEFF 		bl	strcat
2144:..\src/command_processing.c ****                 
2145:..\src/command_processing.c ****                 sprintf(str, "\tAccelerometers: ");
 16151              		.loc 1 2145 0
 16152 174c 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 359


 16153 1750 CD4A     		ldr	r2, .L638+8
 16154 1752 1C46     		mov	r4, r3
 16155 1754 1546     		mov	r5, r2
 16156 1756 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16157 1758 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 16158 175a 2B68     		ldr	r3, [r5]
 16159 175c 2380     		strh	r3, [r4]	@ movhi
2146:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 16160              		.loc 1 2146 0
 16161 175e C84A     		ldr	r2, .L638
 16162 1760 D7F89430 		ldr	r3, [r7, #148]
 16163 1764 1344     		add	r3, r3, r2
 16164 1766 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16165 1768 1946     		mov	r1, r3
 16166 176a D7F88C20 		ldr	r2, [r7, #140]
 16167 176e 0B46     		mov	r3, r1
 16168 1770 9B00     		lsls	r3, r3, #2
 16169 1772 0B44     		add	r3, r3, r1
 16170 1774 1344     		add	r3, r3, r2
 16171 1776 03F20223 		addw	r3, r3, #514
 16172 177a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16173 177c 002B     		cmp	r3, #0
 16174 177e 0FD0     		beq	.L604
2147:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 16175              		.loc 1 2147 0
 16176 1780 07F11C03 		add	r3, r7, #28
 16177 1784 1846     		mov	r0, r3
 16178 1786 FFF7FEFF 		bl	strlen
 16179 178a 0346     		mov	r3, r0
 16180 178c 1A46     		mov	r2, r3
 16181 178e 07F11C03 		add	r3, r7, #28
 16182 1792 1344     		add	r3, r3, r2
 16183 1794 BD4A     		ldr	r2, .L638+12
 16184 1796 1068     		ldr	r0, [r2]	@ unaligned
 16185 1798 1860     		str	r0, [r3]	@ unaligned
 16186 179a 9288     		ldrh	r2, [r2, #4]	@ unaligned
 16187 179c 9A80     		strh	r2, [r3, #4]	@ unaligned
 16188 179e 0EE0     		b	.L605
 16189              	.L604:
2148:..\src/command_processing.c ****                 else
2149:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 16190              		.loc 1 2149 0
 16191 17a0 07F11C03 		add	r3, r7, #28
 16192 17a4 1846     		mov	r0, r3
 16193 17a6 FFF7FEFF 		bl	strlen
 16194 17aa 0346     		mov	r3, r0
 16195 17ac 1A46     		mov	r2, r3
 16196 17ae 07F11C03 		add	r3, r7, #28
 16197 17b2 1344     		add	r3, r3, r2
 16198 17b4 B64A     		ldr	r2, .L638+16
 16199 17b6 1068     		ldr	r0, [r2]	@ unaligned
 16200 17b8 1860     		str	r0, [r3]	@ unaligned
 16201 17ba 1279     		ldrb	r2, [r2, #4]
 16202 17bc 1A71     		strb	r2, [r3, #4]
 16203              	.L605:
2150:..\src/command_processing.c ****                 strcat(str, "\tGyroscopes: ");
 16204              		.loc 1 2150 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 360


 16205 17be 07F11C03 		add	r3, r7, #28
 16206 17c2 1846     		mov	r0, r3
 16207 17c4 FFF7FEFF 		bl	strlen
 16208 17c8 0346     		mov	r3, r0
 16209 17ca 1A46     		mov	r2, r3
 16210 17cc 07F11C03 		add	r3, r7, #28
 16211 17d0 1344     		add	r3, r3, r2
 16212 17d2 B04A     		ldr	r2, .L638+20
 16213 17d4 1C46     		mov	r4, r3
 16214 17d6 1346     		mov	r3, r2
 16215 17d8 07CB     		ldmia	r3!, {r0, r1, r2}
 16216 17da 2060     		str	r0, [r4]	@ unaligned
 16217 17dc 6160     		str	r1, [r4, #4]	@ unaligned
 16218 17de A260     		str	r2, [r4, #8]	@ unaligned
 16219 17e0 1B88     		ldrh	r3, [r3]	@ unaligned
 16220 17e2 A381     		strh	r3, [r4, #12]	@ unaligned
2151:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 16221              		.loc 1 2151 0
 16222 17e4 A64A     		ldr	r2, .L638
 16223 17e6 D7F89430 		ldr	r3, [r7, #148]
 16224 17ea 1344     		add	r3, r3, r2
 16225 17ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16226 17ee 1946     		mov	r1, r3
 16227 17f0 D7F88C20 		ldr	r2, [r7, #140]
 16228 17f4 0B46     		mov	r3, r1
 16229 17f6 9B00     		lsls	r3, r3, #2
 16230 17f8 0B44     		add	r3, r3, r1
 16231 17fa 1344     		add	r3, r3, r2
 16232 17fc 03F20323 		addw	r3, r3, #515
 16233 1800 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16234 1802 002B     		cmp	r3, #0
 16235 1804 0FD0     		beq	.L606
2152:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 16236              		.loc 1 2152 0
 16237 1806 07F11C03 		add	r3, r7, #28
 16238 180a 1846     		mov	r0, r3
 16239 180c FFF7FEFF 		bl	strlen
 16240 1810 0346     		mov	r3, r0
 16241 1812 1A46     		mov	r2, r3
 16242 1814 07F11C03 		add	r3, r7, #28
 16243 1818 1344     		add	r3, r3, r2
 16244 181a 9C4A     		ldr	r2, .L638+12
 16245 181c 1068     		ldr	r0, [r2]	@ unaligned
 16246 181e 1860     		str	r0, [r3]	@ unaligned
 16247 1820 9288     		ldrh	r2, [r2, #4]	@ unaligned
 16248 1822 9A80     		strh	r2, [r3, #4]	@ unaligned
 16249 1824 0EE0     		b	.L607
 16250              	.L606:
2153:..\src/command_processing.c ****                 else
2154:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 16251              		.loc 1 2154 0
 16252 1826 07F11C03 		add	r3, r7, #28
 16253 182a 1846     		mov	r0, r3
 16254 182c FFF7FEFF 		bl	strlen
 16255 1830 0346     		mov	r3, r0
 16256 1832 1A46     		mov	r2, r3
 16257 1834 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 361


 16258 1838 1344     		add	r3, r3, r2
 16259 183a 954A     		ldr	r2, .L638+16
 16260 183c 1068     		ldr	r0, [r2]	@ unaligned
 16261 183e 1860     		str	r0, [r3]	@ unaligned
 16262 1840 1279     		ldrb	r2, [r2, #4]
 16263 1842 1A71     		strb	r2, [r3, #4]
 16264              	.L607:
2155:..\src/command_processing.c ****                 strcat(str, "\tMagnetometers: ");
 16265              		.loc 1 2155 0
 16266 1844 07F11C03 		add	r3, r7, #28
 16267 1848 1846     		mov	r0, r3
 16268 184a FFF7FEFF 		bl	strlen
 16269 184e 0346     		mov	r3, r0
 16270 1850 1A46     		mov	r2, r3
 16271 1852 07F11C03 		add	r3, r7, #28
 16272 1856 1344     		add	r3, r3, r2
 16273 1858 8F4A     		ldr	r2, .L638+24
 16274 185a 1D46     		mov	r5, r3
 16275 185c 1446     		mov	r4, r2
 16276 185e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16277 1860 2860     		str	r0, [r5]	@ unaligned
 16278 1862 6960     		str	r1, [r5, #4]	@ unaligned
 16279 1864 AA60     		str	r2, [r5, #8]	@ unaligned
 16280 1866 EB60     		str	r3, [r5, #12]	@ unaligned
 16281 1868 2378     		ldrb	r3, [r4]
 16282 186a 2B74     		strb	r3, [r5, #16]
2156:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 16283              		.loc 1 2156 0
 16284 186c 844A     		ldr	r2, .L638
 16285 186e D7F89430 		ldr	r3, [r7, #148]
 16286 1872 1344     		add	r3, r3, r2
 16287 1874 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16288 1876 1946     		mov	r1, r3
 16289 1878 D7F88C20 		ldr	r2, [r7, #140]
 16290 187c 0B46     		mov	r3, r1
 16291 187e 9B00     		lsls	r3, r3, #2
 16292 1880 0B44     		add	r3, r3, r1
 16293 1882 1344     		add	r3, r3, r2
 16294 1884 03F50173 		add	r3, r3, #516
 16295 1888 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16296 188a 002B     		cmp	r3, #0
 16297 188c 0FD0     		beq	.L608
2157:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 16298              		.loc 1 2157 0
 16299 188e 07F11C03 		add	r3, r7, #28
 16300 1892 1846     		mov	r0, r3
 16301 1894 FFF7FEFF 		bl	strlen
 16302 1898 0346     		mov	r3, r0
 16303 189a 1A46     		mov	r2, r3
 16304 189c 07F11C03 		add	r3, r7, #28
 16305 18a0 1344     		add	r3, r3, r2
 16306 18a2 7A4A     		ldr	r2, .L638+12
 16307 18a4 1068     		ldr	r0, [r2]	@ unaligned
 16308 18a6 1860     		str	r0, [r3]	@ unaligned
 16309 18a8 9288     		ldrh	r2, [r2, #4]	@ unaligned
 16310 18aa 9A80     		strh	r2, [r3, #4]	@ unaligned
 16311 18ac 0EE0     		b	.L609
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 362


 16312              	.L608:
2158:..\src/command_processing.c ****                 else
2159:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 16313              		.loc 1 2159 0
 16314 18ae 07F11C03 		add	r3, r7, #28
 16315 18b2 1846     		mov	r0, r3
 16316 18b4 FFF7FEFF 		bl	strlen
 16317 18b8 0346     		mov	r3, r0
 16318 18ba 1A46     		mov	r2, r3
 16319 18bc 07F11C03 		add	r3, r7, #28
 16320 18c0 1344     		add	r3, r3, r2
 16321 18c2 734A     		ldr	r2, .L638+16
 16322 18c4 1068     		ldr	r0, [r2]	@ unaligned
 16323 18c6 1860     		str	r0, [r3]	@ unaligned
 16324 18c8 1279     		ldrb	r2, [r2, #4]
 16325 18ca 1A71     		strb	r2, [r3, #4]
 16326              	.L609:
2160:..\src/command_processing.c ****                 strcat(str, "\tQuaternion: ");                
 16327              		.loc 1 2160 0
 16328 18cc 07F11C03 		add	r3, r7, #28
 16329 18d0 1846     		mov	r0, r3
 16330 18d2 FFF7FEFF 		bl	strlen
 16331 18d6 0346     		mov	r3, r0
 16332 18d8 1A46     		mov	r2, r3
 16333 18da 07F11C03 		add	r3, r7, #28
 16334 18de 1344     		add	r3, r3, r2
 16335 18e0 6E4A     		ldr	r2, .L638+28
 16336 18e2 1C46     		mov	r4, r3
 16337 18e4 1346     		mov	r3, r2
 16338 18e6 07CB     		ldmia	r3!, {r0, r1, r2}
 16339 18e8 2060     		str	r0, [r4]	@ unaligned
 16340 18ea 6160     		str	r1, [r4, #4]	@ unaligned
 16341 18ec A260     		str	r2, [r4, #8]	@ unaligned
 16342 18ee 1B88     		ldrh	r3, [r3]	@ unaligned
 16343 18f0 A381     		strh	r3, [r4, #12]	@ unaligned
2161:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 16344              		.loc 1 2161 0
 16345 18f2 634A     		ldr	r2, .L638
 16346 18f4 D7F89430 		ldr	r3, [r7, #148]
 16347 18f8 1344     		add	r3, r3, r2
 16348 18fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16349 18fc 1946     		mov	r1, r3
 16350 18fe D7F88C20 		ldr	r2, [r7, #140]
 16351 1902 0B46     		mov	r3, r1
 16352 1904 9B00     		lsls	r3, r3, #2
 16353 1906 0B44     		add	r3, r3, r1
 16354 1908 1344     		add	r3, r3, r2
 16355 190a 03F20523 		addw	r3, r3, #517
 16356 190e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16357 1910 002B     		cmp	r3, #0
 16358 1912 0FD0     		beq	.L610
2162:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 16359              		.loc 1 2162 0
 16360 1914 07F11C03 		add	r3, r7, #28
 16361 1918 1846     		mov	r0, r3
 16362 191a FFF7FEFF 		bl	strlen
 16363 191e 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 363


 16364 1920 1A46     		mov	r2, r3
 16365 1922 07F11C03 		add	r3, r7, #28
 16366 1926 1344     		add	r3, r3, r2
 16367 1928 584A     		ldr	r2, .L638+12
 16368 192a 1068     		ldr	r0, [r2]	@ unaligned
 16369 192c 1860     		str	r0, [r3]	@ unaligned
 16370 192e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 16371 1930 9A80     		strh	r2, [r3, #4]	@ unaligned
 16372 1932 0EE0     		b	.L611
 16373              	.L610:
2163:..\src/command_processing.c ****                 else
2164:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 16374              		.loc 1 2164 0
 16375 1934 07F11C03 		add	r3, r7, #28
 16376 1938 1846     		mov	r0, r3
 16377 193a FFF7FEFF 		bl	strlen
 16378 193e 0346     		mov	r3, r0
 16379 1940 1A46     		mov	r2, r3
 16380 1942 07F11C03 		add	r3, r7, #28
 16381 1946 1344     		add	r3, r3, r2
 16382 1948 514A     		ldr	r2, .L638+16
 16383 194a 1068     		ldr	r0, [r2]	@ unaligned
 16384 194c 1860     		str	r0, [r3]	@ unaligned
 16385 194e 1279     		ldrb	r2, [r2, #4]
 16386 1950 1A71     		strb	r2, [r3, #4]
 16387              	.L611:
2165:..\src/command_processing.c ****                 strcat(str, "\tTemperature: ");
 16388              		.loc 1 2165 0
 16389 1952 07F11C03 		add	r3, r7, #28
 16390 1956 1846     		mov	r0, r3
 16391 1958 FFF7FEFF 		bl	strlen
 16392 195c 0346     		mov	r3, r0
 16393 195e 1A46     		mov	r2, r3
 16394 1960 07F11C03 		add	r3, r7, #28
 16395 1964 1344     		add	r3, r3, r2
 16396 1966 4E4A     		ldr	r2, .L638+32
 16397 1968 1C46     		mov	r4, r3
 16398 196a 1346     		mov	r3, r2
 16399 196c 07CB     		ldmia	r3!, {r0, r1, r2}
 16400 196e 2060     		str	r0, [r4]	@ unaligned
 16401 1970 6160     		str	r1, [r4, #4]	@ unaligned
 16402 1972 A260     		str	r2, [r4, #8]	@ unaligned
 16403 1974 1A88     		ldrh	r2, [r3]	@ unaligned
 16404 1976 9B78     		ldrb	r3, [r3, #2]
 16405 1978 A281     		strh	r2, [r4, #12]	@ unaligned
 16406 197a A373     		strb	r3, [r4, #14]
2166:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 16407              		.loc 1 2166 0
 16408 197c 404A     		ldr	r2, .L638
 16409 197e D7F89430 		ldr	r3, [r7, #148]
 16410 1982 1344     		add	r3, r3, r2
 16411 1984 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16412 1986 1946     		mov	r1, r3
 16413 1988 D7F88C20 		ldr	r2, [r7, #140]
 16414 198c 0B46     		mov	r3, r1
 16415 198e 9B00     		lsls	r3, r3, #2
 16416 1990 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 364


 16417 1992 1344     		add	r3, r3, r2
 16418 1994 03F20623 		addw	r3, r3, #518
 16419 1998 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16420 199a 002B     		cmp	r3, #0
 16421 199c 0FD0     		beq	.L612
2167:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 16422              		.loc 1 2167 0
 16423 199e 07F11C03 		add	r3, r7, #28
 16424 19a2 1846     		mov	r0, r3
 16425 19a4 FFF7FEFF 		bl	strlen
 16426 19a8 0346     		mov	r3, r0
 16427 19aa 1A46     		mov	r2, r3
 16428 19ac 07F11C03 		add	r3, r7, #28
 16429 19b0 1344     		add	r3, r3, r2
 16430 19b2 364A     		ldr	r2, .L638+12
 16431 19b4 1068     		ldr	r0, [r2]	@ unaligned
 16432 19b6 1860     		str	r0, [r3]	@ unaligned
 16433 19b8 9288     		ldrh	r2, [r2, #4]	@ unaligned
 16434 19ba 9A80     		strh	r2, [r3, #4]	@ unaligned
 16435 19bc 0EE0     		b	.L613
 16436              	.L612:
2168:..\src/command_processing.c ****                 else
2169:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 16437              		.loc 1 2169 0
 16438 19be 07F11C03 		add	r3, r7, #28
 16439 19c2 1846     		mov	r0, r3
 16440 19c4 FFF7FEFF 		bl	strlen
 16441 19c8 0346     		mov	r3, r0
 16442 19ca 1A46     		mov	r2, r3
 16443 19cc 07F11C03 		add	r3, r7, #28
 16444 19d0 1344     		add	r3, r3, r2
 16445 19d2 2F4A     		ldr	r2, .L638+16
 16446 19d4 1068     		ldr	r0, [r2]	@ unaligned
 16447 19d6 1860     		str	r0, [r3]	@ unaligned
 16448 19d8 1279     		ldrb	r2, [r2, #4]
 16449 19da 1A71     		strb	r2, [r3, #4]
 16450              	.L613:
2170:..\src/command_processing.c ****                      
2171:..\src/command_processing.c ****                 strcat(info_string, str);
 16451              		.loc 1 2171 0 discriminator 2
 16452 19dc 07F11C03 		add	r3, r7, #28
 16453 19e0 1946     		mov	r1, r3
 16454 19e2 7869     		ldr	r0, [r7, #20]
 16455 19e4 FFF7FEFF 		bl	strcat
2141:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 16456              		.loc 1 2141 0 discriminator 2
 16457 19e8 D7F89430 		ldr	r3, [r7, #148]
 16458 19ec 0133     		adds	r3, r3, #1
 16459 19ee C7F89430 		str	r3, [r7, #148]
 16460              	.L603:
2141:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 16461              		.loc 1 2141 0 is_stmt 0 discriminator 1
 16462 19f2 2C4B     		ldr	r3, .L638+36
 16463 19f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16464 19f6 1A46     		mov	r2, r3
 16465 19f8 D7F89430 		ldr	r3, [r7, #148]
 16466 19fc 9A42     		cmp	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 365


 16467 19fe 3FF793AE 		bgt	.L614
2172:..\src/command_processing.c ****             }       
2173:..\src/command_processing.c ****             
2174:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16468              		.loc 1 2174 0 is_stmt 1
 16469 1a02 7869     		ldr	r0, [r7, #20]
 16470 1a04 FFF7FEFF 		bl	strlen
 16471 1a08 0346     		mov	r3, r0
 16472 1a0a 1A46     		mov	r2, r3
 16473 1a0c 7B69     		ldr	r3, [r7, #20]
 16474 1a0e 1344     		add	r3, r3, r2
 16475 1a10 254A     		ldr	r2, .L638+40
 16476 1a12 1188     		ldrh	r1, [r2]	@ unaligned
 16477 1a14 9278     		ldrb	r2, [r2, #2]
 16478 1a16 1980     		strh	r1, [r3]	@ unaligned
 16479 1a18 9A70     		strb	r2, [r3, #2]
2175:..\src/command_processing.c ****           
2176:..\src/command_processing.c ****             IMU_reading_info(info_string);
 16480              		.loc 1 2176 0
 16481 1a1a 7869     		ldr	r0, [r7, #20]
 16482 1a1c FFF7FEFF 		bl	IMU_reading_info
 16483              	.L602:
2177:..\src/command_processing.c ****         }
2178:..\src/command_processing.c ****         
2179:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16484              		.loc 1 2179 0
 16485 1a20 7869     		ldr	r0, [r7, #20]
 16486 1a22 FFF7FEFF 		bl	strlen
 16487 1a26 0346     		mov	r3, r0
 16488 1a28 1A46     		mov	r2, r3
 16489 1a2a 7B69     		ldr	r3, [r7, #20]
 16490 1a2c 1344     		add	r3, r3, r2
 16491 1a2e 1E4A     		ldr	r2, .L638+40
 16492 1a30 1188     		ldrh	r1, [r2]	@ unaligned
 16493 1a32 9278     		ldrb	r2, [r2, #2]
 16494 1a34 1980     		strh	r1, [r3]	@ unaligned
 16495 1a36 9A70     		strb	r2, [r3, #2]
2180:..\src/command_processing.c **** 
2181:..\src/command_processing.c **** #ifdef GENERIC_FW   
2182:..\src/command_processing.c ****         int j;
2183:..\src/command_processing.c ****         strcat(info_string, "ENCODER CONFIGURATION\r\n");
2184:..\src/command_processing.c ****         for (i = 0; i < N_ENCODER_LINE_MAX; i++) {
2185:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
2186:..\src/command_processing.c ****             strcat(info_string, str);
2187:..\src/command_processing.c ****             if (MEM_P->dev.right_left == i) {
2188:..\src/command_processing.c ****                 sprintf(str, " [%s HAND main encoder line]", (MEM_P->dev.right_left?"LEFT":"RIGHT")
2189:..\src/command_processing.c ****                 strcat(info_string, str);
2190:..\src/command_processing.c ****             }
2191:..\src/command_processing.c ****             strcat(info_string, "\r\n");
2192:..\src/command_processing.c ****             if (N_Encoder_Line_Connected[i] > 0) {
2193:..\src/command_processing.c ****                 strcat(info_string, "Raw value [status]:\r\n");
2194:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
2195:..\src/command_processing.c ****                     sprintf(str, "%d\t[%s]\r\n", (uint16) Encoder_Value[i][j], (Encoder_Check[i][j]
2196:..\src/command_processing.c ****                     strcat(info_string, str);
2197:..\src/command_processing.c ****                 }
2198:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
2199:..\src/command_processing.c ****             }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 366


2200:..\src/command_processing.c ****         }
2201:..\src/command_processing.c **** #endif   
2202:..\src/command_processing.c ****         
2203:..\src/command_processing.c **** #ifdef MASTER_FW
2204:..\src/command_processing.c ****         if (MEM_P->MS.slave_comm_active)
 16496              		.loc 1 2204 0
 16497 1a38 D7F88C30 		ldr	r3, [r7, #140]
 16498 1a3c 93F8B032 		ldrb	r3, [r3, #688]	@ zero_extendqisi2
 16499 1a40 002B     		cmp	r3, #0
 16500 1a42 35D0     		beq	.L615
2205:..\src/command_processing.c ****             strcat(info_string, "Slave communication active: YES\r\n");
 16501              		.loc 1 2205 0
 16502 1a44 7869     		ldr	r0, [r7, #20]
 16503 1a46 FFF7FEFF 		bl	strlen
 16504 1a4a 0346     		mov	r3, r0
 16505 1a4c 1A46     		mov	r2, r3
 16506 1a4e 7B69     		ldr	r3, [r7, #20]
 16507 1a50 1344     		add	r3, r3, r2
 16508 1a52 164A     		ldr	r2, .L638+44
 16509 1a54 1446     		mov	r4, r2
 16510 1a56 9E46     		mov	lr, r3
 16511 1a58 04F1200C 		add	ip, r4, #32
 16512              	.L616:
 16513 1a5c 7546     		mov	r5, lr
 16514 1a5e 2646     		mov	r6, r4
 16515 1a60 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16516 1a62 2860     		str	r0, [r5]	@ unaligned
 16517 1a64 6960     		str	r1, [r5, #4]	@ unaligned
 16518 1a66 AA60     		str	r2, [r5, #8]	@ unaligned
 16519 1a68 EB60     		str	r3, [r5, #12]	@ unaligned
 16520 1a6a 1034     		adds	r4, r4, #16
 16521 1a6c 0EF1100E 		add	lr, lr, #16
 16522 1a70 6445     		cmp	r4, ip
 16523 1a72 F3D1     		bne	.L616
 16524 1a74 7246     		mov	r2, lr
 16525 1a76 2346     		mov	r3, r4
 16526 1a78 1B88     		ldrh	r3, [r3]	@ unaligned
 16527 1a7a 1380     		strh	r3, [r2]	@ unaligned
 16528 1a7c 34E0     		b	.L617
 16529              	.L639:
 16530 1a7e 00BF     		.align	2
 16531              	.L638:
 16532 1a80 00000000 		.word	IMU_connected
 16533 1a84 2C160000 		.word	.LC216
 16534 1a88 40160000 		.word	.LC217
 16535 1a8c 4C100000 		.word	.LC153
 16536 1a90 54100000 		.word	.LC154
 16537 1a94 54160000 		.word	.LC218
 16538 1a98 64160000 		.word	.LC219
 16539 1a9c 78160000 		.word	.LC220
 16540 1aa0 88160000 		.word	.LC221
 16541 1aa4 00000000 		.word	N_IMU_Connected
 16542 1aa8 A80E0000 		.word	.LC132
 16543 1aac 98160000 		.word	.LC222
 16544              	.L615:
2206:..\src/command_processing.c ****         else
2207:..\src/command_processing.c ****             strcat(info_string, "Slave communication active: NO\r\n");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 367


 16545              		.loc 1 2207 0
 16546 1ab0 7869     		ldr	r0, [r7, #20]
 16547 1ab2 FFF7FEFF 		bl	strlen
 16548 1ab6 0346     		mov	r3, r0
 16549 1ab8 1A46     		mov	r2, r3
 16550 1aba 7B69     		ldr	r3, [r7, #20]
 16551 1abc 1344     		add	r3, r3, r2
 16552 1abe 244A     		ldr	r2, .L640
 16553 1ac0 1446     		mov	r4, r2
 16554 1ac2 9E46     		mov	lr, r3
 16555 1ac4 04F1200C 		add	ip, r4, #32
 16556              	.L618:
 16557 1ac8 7546     		mov	r5, lr
 16558 1aca 2646     		mov	r6, r4
 16559 1acc 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16560 1ace 2860     		str	r0, [r5]	@ unaligned
 16561 1ad0 6960     		str	r1, [r5, #4]	@ unaligned
 16562 1ad2 AA60     		str	r2, [r5, #8]	@ unaligned
 16563 1ad4 EB60     		str	r3, [r5, #12]	@ unaligned
 16564 1ad6 1034     		adds	r4, r4, #16
 16565 1ad8 0EF1100E 		add	lr, lr, #16
 16566 1adc 6445     		cmp	r4, ip
 16567 1ade F3D1     		bne	.L618
 16568 1ae0 7346     		mov	r3, lr
 16569 1ae2 2246     		mov	r2, r4
 16570 1ae4 1278     		ldrb	r2, [r2]
 16571 1ae6 1A70     		strb	r2, [r3]
 16572              	.L617:
2208:..\src/command_processing.c **** 
2209:..\src/command_processing.c ****         sprintf(str, "Slave ID: %d\r\n", (int)MEM_P->MS.slave_ID);
 16573              		.loc 1 2209 0
 16574 1ae8 D7F88C30 		ldr	r3, [r7, #140]
 16575 1aec 93F8B132 		ldrb	r3, [r3, #689]	@ zero_extendqisi2
 16576 1af0 1A46     		mov	r2, r3
 16577 1af2 07F11C03 		add	r3, r7, #28
 16578 1af6 1749     		ldr	r1, .L640+4
 16579 1af8 1846     		mov	r0, r3
 16580 1afa FFF7FEFF 		bl	sprintf
2210:..\src/command_processing.c ****         strcat(info_string, str);
 16581              		.loc 1 2210 0
 16582 1afe 07F11C03 		add	r3, r7, #28
 16583 1b02 1946     		mov	r1, r3
 16584 1b04 7869     		ldr	r0, [r7, #20]
 16585 1b06 FFF7FEFF 		bl	strcat
2211:..\src/command_processing.c **** #endif
2212:..\src/command_processing.c **** 
2213:..\src/command_processing.c ****         sprintf(str, "Last FW cycle time: %u us\r\n", (uint16)timer_value0 - (uint16)timer_value);
 16586              		.loc 1 2213 0
 16587 1b0a 134B     		ldr	r3, .L640+8
 16588 1b0c 1B88     		ldrh	r3, [r3]
 16589 1b0e 1A46     		mov	r2, r3
 16590 1b10 124B     		ldr	r3, .L640+12
 16591 1b12 1B88     		ldrh	r3, [r3]
 16592 1b14 D21A     		subs	r2, r2, r3
 16593 1b16 07F11C03 		add	r3, r7, #28
 16594 1b1a 1149     		ldr	r1, .L640+16
 16595 1b1c 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 368


 16596 1b1e FFF7FEFF 		bl	sprintf
2214:..\src/command_processing.c ****         strcat(info_string, str);
 16597              		.loc 1 2214 0
 16598 1b22 07F11C03 		add	r3, r7, #28
 16599 1b26 1946     		mov	r1, r3
 16600 1b28 7869     		ldr	r0, [r7, #20]
 16601 1b2a FFF7FEFF 		bl	strcat
2215:..\src/command_processing.c ****   
2216:..\src/command_processing.c ****         strcat(info_string, "\r\n\0");      // End of info_string
 16602              		.loc 1 2216 0
 16603 1b2e 7869     		ldr	r0, [r7, #20]
 16604 1b30 FFF7FEFF 		bl	strlen
 16605 1b34 0346     		mov	r3, r0
 16606 1b36 1A46     		mov	r2, r3
 16607 1b38 7B69     		ldr	r3, [r7, #20]
 16608 1b3a 1344     		add	r3, r3, r2
 16609 1b3c 094A     		ldr	r2, .L640+20
 16610 1b3e 1188     		ldrh	r1, [r2]	@ unaligned
 16611 1b40 9278     		ldrb	r2, [r2, #2]
 16612 1b42 1980     		strh	r1, [r3]	@ unaligned
 16613 1b44 9A70     		strb	r2, [r3, #2]
 16614              	.L620:
 16615              	.LBE16:
2217:..\src/command_processing.c ****     }
2218:..\src/command_processing.c **** }
 16616              		.loc 1 2218 0
 16617 1b46 00BF     		nop
 16618 1b48 9C37     		adds	r7, r7, #156
 16619              		.cfi_def_cfa_offset 36
 16620 1b4a BD46     		mov	sp, r7
 16621              		.cfi_def_cfa_register 13
 16622              		@ sp needed
 16623 1b4c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 16624              	.L641:
 16625              		.align	2
 16626              	.L640:
 16627 1b50 BC160000 		.word	.LC223
 16628 1b54 E0160000 		.word	.LC224
 16629 1b58 00000000 		.word	timer_value0
 16630 1b5c 00000000 		.word	timer_value
 16631 1b60 F0160000 		.word	.LC225
 16632 1b64 0C170000 		.word	.LC226
 16633              		.cfi_endproc
 16634              	.LFE72:
 16635              		.size	prepare_generic_info, .-prepare_generic_info
 16636              		.section	.rodata
 16637              		.align	2
 16638              	.LC227:
 16639 1710 0D0A5553 		.ascii	"\015\012USAGE STATISTICS\015\012\000"
 16639      41474520 
 16639      53544154 
 16639      49535449 
 16639      43530D0A 
 16640 1725 000000   		.align	2
 16641              	.LC228:
 16642 1728 44617465 		.ascii	"Date of HW maintenance: %02d/%02d/20%02d\015\012\000"
 16642      206F6620 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 369


 16642      4857206D 
 16642      61696E74 
 16642      656E616E 
 16643 1753 00       		.align	2
 16644              	.LC229:
 16645 1754 44617465 		.ascii	"Date of usage stats period begin: %02d/%02d/20%02d\015"
 16645      206F6620 
 16645      75736167 
 16645      65207374 
 16645      61747320 
 16646 1787 0A00     		.ascii	"\012\000"
 16647 1789 000000   		.align	2
 16648              	.LC230:
 16649 178c 4C617374 		.ascii	"Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\015"
 16649      20636865 
 16649      636B6564 
 16649      2054696D 
 16649      653A2025 
 16650 17bf 0A00     		.ascii	"\012\000"
 16651 17c1 000000   		.align	2
 16652              	.LC231:
 16653 17c4 506F7369 		.ascii	"Positions histogram (ticks):\015\012\000"
 16653      74696F6E 
 16653      73206869 
 16653      73746F67 
 16653      72616D20 
 16654 17e3 00       		.align	2
 16655              	.LC232:
 16656 17e4 42696E20 		.ascii	"Bin %d [%d-%d]: %lu\015\012\000"
 16656      2564205B 
 16656      25642D25 
 16656      645D3A20 
 16656      256C750D 
 16657 17fa 0000     		.align	2
 16658              	.LC233:
 16659 17fc 43757272 		.ascii	"Current histogram (mA):\015\012\000"
 16659      656E7420 
 16659      68697374 
 16659      6F677261 
 16659      6D20286D 
 16660 1816 0000     		.align	2
 16661              	.LC234:
 16662 1818 54687265 		.ascii	"Threshold %d [%d-%d]: %lu\015\012\000"
 16662      73686F6C 
 16662      64202564 
 16662      205B2564 
 16662      2D25645D 
 16663              		.align	2
 16664              	.LC235:
 16665 1834 454D4720 		.ascii	"EMG activations counter: %lu, %lu\000"
 16665      61637469 
 16665      76617469 
 16665      6F6E7320 
 16665      636F756E 
 16666 1856 0000     		.align	2
 16667              	.LC236:
 16668 1858 52657374 		.ascii	"Rest position occurrences: %lu\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 370


 16668      20706F73 
 16668      6974696F 
 16668      6E206F63 
 16668      63757272 
 16669 1877 00       		.align	2
 16670              	.LC237:
 16671 1878 416E676C 		.ascii	"Angle total displacement (ticks): %lu\000"
 16671      6520746F 
 16671      74616C20 
 16671      64697370 
 16671      6C616365 
 16672 189e 0000     		.align	2
 16673              	.LC238:
 16674 18a0 546F7461 		.ascii	"Total power on time (sec): %lu\000"
 16674      6C20706F 
 16674      77657220 
 16674      6F6E2074 
 16674      696D6520 
 16675 18bf 00       		.align	2
 16676              	.LC239:
 16677 18c0 546F7461 		.ascii	"Total rest position time (sec): %lu\000"
 16677      6C207265 
 16677      73742070 
 16677      6F736974 
 16677      696F6E20 
 16678              		.section	.text.prepare_counter_info,"ax",%progbits
 16679              		.align	2
 16680              		.global	prepare_counter_info
 16681              		.thumb
 16682              		.thumb_func
 16683              		.type	prepare_counter_info, %function
 16684              	prepare_counter_info:
 16685              	.LFB73:
2219:..\src/command_processing.c **** 
2220:..\src/command_processing.c **** //==============================================================================
2221:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
2222:..\src/command_processing.c **** //==============================================================================
2223:..\src/command_processing.c **** 
2224:..\src/command_processing.c **** void prepare_counter_info(char *info_string)
2225:..\src/command_processing.c **** {
 16686              		.loc 1 2225 0
 16687              		.cfi_startproc
 16688              		@ args = 0, pretend = 0, frame = 128
 16689              		@ frame_needed = 1, uses_anonymous_args = 0
 16690 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 16691              		.cfi_def_cfa_offset 20
 16692              		.cfi_offset 4, -20
 16693              		.cfi_offset 5, -16
 16694              		.cfi_offset 6, -12
 16695              		.cfi_offset 7, -8
 16696              		.cfi_offset 14, -4
 16697 0002 A5B0     		sub	sp, sp, #148
 16698              		.cfi_def_cfa_offset 168
 16699 0004 04AF     		add	r7, sp, #16
 16700              		.cfi_def_cfa 7, 152
 16701 0006 7860     		str	r0, [r7, #4]
2226:..\src/command_processing.c ****     char str[100];  
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 371


2227:..\src/command_processing.c ****     int i;
2228:..\src/command_processing.c ****     int step;
2229:..\src/command_processing.c **** 
2230:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 16702              		.loc 1 2230 0
 16703 0008 7D4B     		ldr	r3, .L648
 16704 000a BB67     		str	r3, [r7, #120]
2231:..\src/command_processing.c ****     struct st_motor* MOT = &(MEM_P->motor[0]);      // Default motor
 16705              		.loc 1 2231 0
 16706 000c BB6F     		ldr	r3, [r7, #120]
 16707 000e B033     		adds	r3, r3, #176
 16708 0010 7B67     		str	r3, [r7, #116]
2232:..\src/command_processing.c ****     uint8 ENC_L = MOT->encoder_line;                // Associated encoder line
 16709              		.loc 1 2232 0
 16710 0012 7B6F     		ldr	r3, [r7, #116]
 16711 0014 93F86030 		ldrb	r3, [r3, #96]
 16712 0018 87F87330 		strb	r3, [r7, #115]
2233:..\src/command_processing.c ****     
2234:..\src/command_processing.c ****     strcat(info_string, "\r\nUSAGE STATISTICS\r\n");
 16713              		.loc 1 2234 0
 16714 001c 7868     		ldr	r0, [r7, #4]
 16715 001e FFF7FEFF 		bl	strlen
 16716 0022 0346     		mov	r3, r0
 16717 0024 1A46     		mov	r2, r3
 16718 0026 7B68     		ldr	r3, [r7, #4]
 16719 0028 1344     		add	r3, r3, r2
 16720 002a 764A     		ldr	r2, .L648+4
 16721 002c 1D46     		mov	r5, r3
 16722 002e 1446     		mov	r4, r2
 16723 0030 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16724 0032 2860     		str	r0, [r5]	@ unaligned
 16725 0034 6960     		str	r1, [r5, #4]	@ unaligned
 16726 0036 AA60     		str	r2, [r5, #8]	@ unaligned
 16727 0038 EB60     		str	r3, [r5, #12]	@ unaligned
 16728 003a 2068     		ldr	r0, [r4]	@ unaligned
 16729 003c 2861     		str	r0, [r5, #16]	@ unaligned
 16730 003e 2379     		ldrb	r3, [r4, #4]
 16731 0040 2B75     		strb	r3, [r5, #20]
2235:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 16732              		.loc 1 2235 0
 16733 0042 7868     		ldr	r0, [r7, #4]
 16734 0044 FFF7FEFF 		bl	strlen
 16735 0048 0346     		mov	r3, r0
 16736 004a 1A46     		mov	r2, r3
 16737 004c 7B68     		ldr	r3, [r7, #4]
 16738 004e 1344     		add	r3, r3, r2
 16739 0050 6D4A     		ldr	r2, .L648+8
 16740 0052 1188     		ldrh	r1, [r2]	@ unaligned
 16741 0054 9278     		ldrb	r2, [r2, #2]
 16742 0056 1980     		strh	r1, [r3]	@ unaligned
 16743 0058 9A70     		strb	r2, [r3, #2]
2236:..\src/command_processing.c ****     
2237:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 16744              		.loc 1 2237 0
 16745 005a BB6F     		ldr	r3, [r7, #120]
 16746 005c 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 16747 0060 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 372


 16748 0062 BB6F     		ldr	r3, [r7, #120]
 16749 0064 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 16750 0068 1946     		mov	r1, r3
 16751 006a BB6F     		ldr	r3, [r7, #120]
 16752 006c 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 16753 0070 07F10800 		add	r0, r7, #8
 16754 0074 0093     		str	r3, [sp]
 16755 0076 0B46     		mov	r3, r1
 16756 0078 6449     		ldr	r1, .L648+12
 16757 007a FFF7FEFF 		bl	sprintf
2238:..\src/command_processing.c ****     strcat(info_string, str);
 16758              		.loc 1 2238 0
 16759 007e 07F10803 		add	r3, r7, #8
 16760 0082 1946     		mov	r1, r3
 16761 0084 7868     		ldr	r0, [r7, #4]
 16762 0086 FFF7FEFF 		bl	strcat
2239:..\src/command_processing.c ****     
2240:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 16763              		.loc 1 2240 0
 16764 008a BB6F     		ldr	r3, [r7, #120]
 16765 008c 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 16766 0090 1A46     		mov	r2, r3
 16767 0092 BB6F     		ldr	r3, [r7, #120]
 16768 0094 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 16769 0098 1946     		mov	r1, r3
 16770 009a BB6F     		ldr	r3, [r7, #120]
 16771 009c 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 16772 00a0 07F10800 		add	r0, r7, #8
 16773 00a4 0093     		str	r3, [sp]
 16774 00a6 0B46     		mov	r3, r1
 16775 00a8 5949     		ldr	r1, .L648+16
 16776 00aa FFF7FEFF 		bl	sprintf
2241:..\src/command_processing.c ****     strcat(info_string, str);
 16777              		.loc 1 2241 0
 16778 00ae 07F10803 		add	r3, r7, #8
 16779 00b2 1946     		mov	r1, r3
 16780 00b4 7868     		ldr	r0, [r7, #4]
 16781 00b6 FFF7FEFF 		bl	strcat
2242:..\src/command_processing.c ****             
2243:..\src/command_processing.c ****     sprintf(str, "Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\r\n", (int)MEM_P->exp.curr_tim
 16782              		.loc 1 2243 0
 16783 00ba BB6F     		ldr	r3, [r7, #120]
 16784 00bc 93F82032 		ldrb	r3, [r3, #544]	@ zero_extendqisi2
 16785 00c0 1D46     		mov	r5, r3
 16786 00c2 BB6F     		ldr	r3, [r7, #120]
 16787 00c4 93F82132 		ldrb	r3, [r3, #545]	@ zero_extendqisi2
 16788 00c8 1E46     		mov	r6, r3
 16789 00ca BB6F     		ldr	r3, [r7, #120]
 16790 00cc 93F82232 		ldrb	r3, [r3, #546]	@ zero_extendqisi2
 16791 00d0 1A46     		mov	r2, r3
 16792 00d2 BB6F     		ldr	r3, [r7, #120]
 16793 00d4 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 16794 00d8 1946     		mov	r1, r3
 16795 00da BB6F     		ldr	r3, [r7, #120]
 16796 00dc 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 16797 00e0 1C46     		mov	r4, r3
 16798 00e2 BB6F     		ldr	r3, [r7, #120]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 373


 16799 00e4 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 16800 00e8 07F10800 		add	r0, r7, #8
 16801 00ec 0393     		str	r3, [sp, #12]
 16802 00ee 0294     		str	r4, [sp, #8]
 16803 00f0 0191     		str	r1, [sp, #4]
 16804 00f2 0092     		str	r2, [sp]
 16805 00f4 3346     		mov	r3, r6
 16806 00f6 2A46     		mov	r2, r5
 16807 00f8 4649     		ldr	r1, .L648+20
 16808 00fa FFF7FEFF 		bl	sprintf
2244:..\src/command_processing.c ****     strcat(info_string, str);
 16809              		.loc 1 2244 0
 16810 00fe 07F10803 		add	r3, r7, #8
 16811 0102 1946     		mov	r1, r3
 16812 0104 7868     		ldr	r0, [r7, #4]
 16813 0106 FFF7FEFF 		bl	strcat
2245:..\src/command_processing.c ****     
2246:..\src/command_processing.c ****     sprintf(str, "Positions histogram (ticks):\r\n");
 16814              		.loc 1 2246 0
 16815 010a 07F10803 		add	r3, r7, #8
 16816 010e 424A     		ldr	r2, .L648+24
 16817 0110 1C46     		mov	r4, r3
 16818 0112 1546     		mov	r5, r2
 16819 0114 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16820 0116 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 16821 0118 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 16822 011c 07C4     		stmia	r4!, {r0, r1, r2}
 16823 011e 2380     		strh	r3, [r4]	@ movhi
 16824 0120 0234     		adds	r4, r4, #2
 16825 0122 1B0C     		lsrs	r3, r3, #16
 16826 0124 2370     		strb	r3, [r4]
2247:..\src/command_processing.c ****     strcat(info_string, str);
 16827              		.loc 1 2247 0
 16828 0126 07F10803 		add	r3, r7, #8
 16829 012a 1946     		mov	r1, r3
 16830 012c 7868     		ldr	r0, [r7, #4]
 16831 012e FFF7FEFF 		bl	strcat
2248:..\src/command_processing.c ****     step = ( (int)(MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]) / 10);
 16832              		.loc 1 2248 0
 16833 0132 7B6F     		ldr	r3, [r7, #116]
 16834 0134 996B     		ldr	r1, [r3, #56]
 16835 0136 97F87320 		ldrb	r2, [r7, #115]	@ zero_extendqisi2
 16836 013a B86F     		ldr	r0, [r7, #120]
 16837 013c 1346     		mov	r3, r2
 16838 013e 5B00     		lsls	r3, r3, #1
 16839 0140 1344     		add	r3, r3, r2
 16840 0142 1B01     		lsls	r3, r3, #4
 16841 0144 0344     		add	r3, r3, r0
 16842 0146 03F29513 		addw	r3, r3, #405
 16843 014a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16844 014c 41FA03F3 		asr	r3, r1, r3
 16845 0150 324A     		ldr	r2, .L648+28
 16846 0152 82FB0312 		smull	r1, r2, r2, r3
 16847 0156 9210     		asrs	r2, r2, #2
 16848 0158 DB17     		asrs	r3, r3, #31
 16849 015a D31A     		subs	r3, r2, r3
 16850 015c FB66     		str	r3, [r7, #108]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 374


2249:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 16851              		.loc 1 2249 0
 16852 015e 0123     		movs	r3, #1
 16853 0160 FB67     		str	r3, [r7, #124]
 16854 0162 21E0     		b	.L643
 16855              	.L644:
2250:..\src/command_processing.c ****         sprintf(str, "Bin %d [%d-%d]: %lu\r\n", i, step*(i-1)+1, step*(i), MEM_P->cnt.position_hist
 16856              		.loc 1 2250 0 discriminator 3
 16857 0164 FB6F     		ldr	r3, [r7, #124]
 16858 0166 013B     		subs	r3, r3, #1
 16859 0168 FA6E     		ldr	r2, [r7, #108]
 16860 016a 02FB03F3 		mul	r3, r2, r3
 16861 016e 5C1C     		adds	r4, r3, #1
 16862 0170 FB6E     		ldr	r3, [r7, #108]
 16863 0172 FA6F     		ldr	r2, [r7, #124]
 16864 0174 02FB03F3 		mul	r3, r2, r3
 16865 0178 FA6F     		ldr	r2, [r7, #124]
 16866 017a 511E     		subs	r1, r2, #1
 16867 017c BA6F     		ldr	r2, [r7, #120]
 16868 017e 0631     		adds	r1, r1, #6
 16869 0180 52F82120 		ldr	r2, [r2, r1, lsl #2]
 16870 0184 07F10800 		add	r0, r7, #8
 16871 0188 0192     		str	r2, [sp, #4]
 16872 018a 0093     		str	r3, [sp]
 16873 018c 2346     		mov	r3, r4
 16874 018e FA6F     		ldr	r2, [r7, #124]
 16875 0190 2349     		ldr	r1, .L648+32
 16876 0192 FFF7FEFF 		bl	sprintf
2251:..\src/command_processing.c ****         strcat(info_string, str);
 16877              		.loc 1 2251 0 discriminator 3
 16878 0196 07F10803 		add	r3, r7, #8
 16879 019a 1946     		mov	r1, r3
 16880 019c 7868     		ldr	r0, [r7, #4]
 16881 019e FFF7FEFF 		bl	strcat
2249:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 16882              		.loc 1 2249 0 discriminator 3
 16883 01a2 FB6F     		ldr	r3, [r7, #124]
 16884 01a4 0133     		adds	r3, r3, #1
 16885 01a6 FB67     		str	r3, [r7, #124]
 16886              	.L643:
2249:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 16887              		.loc 1 2249 0 is_stmt 0 discriminator 1
 16888 01a8 FB6F     		ldr	r3, [r7, #124]
 16889 01aa 0A2B     		cmp	r3, #10
 16890 01ac DADD     		ble	.L644
2252:..\src/command_processing.c ****     }
2253:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 16891              		.loc 1 2253 0 is_stmt 1
 16892 01ae 7868     		ldr	r0, [r7, #4]
 16893 01b0 FFF7FEFF 		bl	strlen
 16894 01b4 0346     		mov	r3, r0
 16895 01b6 1A46     		mov	r2, r3
 16896 01b8 7B68     		ldr	r3, [r7, #4]
 16897 01ba 1344     		add	r3, r3, r2
 16898 01bc 124A     		ldr	r2, .L648+8
 16899 01be 1188     		ldrh	r1, [r2]	@ unaligned
 16900 01c0 9278     		ldrb	r2, [r2, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 375


 16901 01c2 1980     		strh	r1, [r3]	@ unaligned
 16902 01c4 9A70     		strb	r2, [r3, #2]
2254:..\src/command_processing.c ****     
2255:..\src/command_processing.c ****     sprintf(str, "Current histogram (mA):\r\n");
 16903              		.loc 1 2255 0
 16904 01c6 07F10803 		add	r3, r7, #8
 16905 01ca 164A     		ldr	r2, .L648+36
 16906 01cc 1C46     		mov	r4, r3
 16907 01ce 1546     		mov	r5, r2
 16908 01d0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16909 01d2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 16910 01d4 95E80700 		ldmia	r5, {r0, r1, r2}
 16911 01d8 03C4     		stmia	r4!, {r0, r1}
 16912 01da 2280     		strh	r2, [r4]	@ movhi
2256:..\src/command_processing.c ****     strcat(info_string, str);
 16913              		.loc 1 2256 0
 16914 01dc 07F10803 		add	r3, r7, #8
 16915 01e0 1946     		mov	r1, r3
 16916 01e2 7868     		ldr	r0, [r7, #4]
 16917 01e4 FFF7FEFF 		bl	strcat
2257:..\src/command_processing.c ****     step = ( (int)(MOT->current_limit) / 4);
 16918              		.loc 1 2257 0
 16919 01e8 7B6F     		ldr	r3, [r7, #116]
 16920 01ea B3F95C30 		ldrsh	r3, [r3, #92]
 16921 01ee 002B     		cmp	r3, #0
 16922 01f0 00DA     		bge	.L645
 16923 01f2 0333     		adds	r3, r3, #3
 16924              	.L645:
 16925 01f4 9B10     		asrs	r3, r3, #2
 16926 01f6 1BB2     		sxth	r3, r3
 16927 01f8 FB66     		str	r3, [r7, #108]
2258:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 16928              		.loc 1 2258 0
 16929 01fa 0123     		movs	r3, #1
 16930 01fc FB67     		str	r3, [r7, #124]
 16931 01fe 34E0     		b	.L646
 16932              	.L649:
 16933              		.align	2
 16934              	.L648:
 16935 0200 00000000 		.word	g_mem
 16936 0204 10170000 		.word	.LC227
 16937 0208 A80E0000 		.word	.LC132
 16938 020c 28170000 		.word	.LC228
 16939 0210 54170000 		.word	.LC229
 16940 0214 8C170000 		.word	.LC230
 16941 0218 C4170000 		.word	.LC231
 16942 021c 67666666 		.word	1717986919
 16943 0220 E4170000 		.word	.LC232
 16944 0224 FC170000 		.word	.LC233
 16945              	.L647:
2259:..\src/command_processing.c ****         sprintf(str, "Threshold %d [%d-%d]: %lu\r\n", i, step*(i-1), step*(i), MEM_P->cnt.current_h
 16946              		.loc 1 2259 0 discriminator 3
 16947 0228 FB6F     		ldr	r3, [r7, #124]
 16948 022a 013B     		subs	r3, r3, #1
 16949 022c FA6E     		ldr	r2, [r7, #108]
 16950 022e 02FB03F4 		mul	r4, r2, r3
 16951 0232 FB6E     		ldr	r3, [r7, #108]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 376


 16952 0234 FA6F     		ldr	r2, [r7, #124]
 16953 0236 02FB03F3 		mul	r3, r2, r3
 16954 023a FA6F     		ldr	r2, [r7, #124]
 16955 023c 511E     		subs	r1, r2, #1
 16956 023e BA6F     		ldr	r2, [r7, #120]
 16957 0240 1031     		adds	r1, r1, #16
 16958 0242 52F82120 		ldr	r2, [r2, r1, lsl #2]
 16959 0246 07F10800 		add	r0, r7, #8
 16960 024a 0192     		str	r2, [sp, #4]
 16961 024c 0093     		str	r3, [sp]
 16962 024e 2346     		mov	r3, r4
 16963 0250 FA6F     		ldr	r2, [r7, #124]
 16964 0252 5149     		ldr	r1, .L650
 16965 0254 FFF7FEFF 		bl	sprintf
2260:..\src/command_processing.c ****         strcat(info_string, str);
 16966              		.loc 1 2260 0 discriminator 3
 16967 0258 07F10803 		add	r3, r7, #8
 16968 025c 1946     		mov	r1, r3
 16969 025e 7868     		ldr	r0, [r7, #4]
 16970 0260 FFF7FEFF 		bl	strcat
2258:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 16971              		.loc 1 2258 0 discriminator 3
 16972 0264 FB6F     		ldr	r3, [r7, #124]
 16973 0266 0133     		adds	r3, r3, #1
 16974 0268 FB67     		str	r3, [r7, #124]
 16975              	.L646:
2258:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 16976              		.loc 1 2258 0 is_stmt 0 discriminator 1
 16977 026a FB6F     		ldr	r3, [r7, #124]
 16978 026c 042B     		cmp	r3, #4
 16979 026e DBDD     		ble	.L647
2261:..\src/command_processing.c ****     }
2262:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 16980              		.loc 1 2262 0 is_stmt 1
 16981 0270 7868     		ldr	r0, [r7, #4]
 16982 0272 FFF7FEFF 		bl	strlen
 16983 0276 0346     		mov	r3, r0
 16984 0278 1A46     		mov	r2, r3
 16985 027a 7B68     		ldr	r3, [r7, #4]
 16986 027c 1344     		add	r3, r3, r2
 16987 027e 474A     		ldr	r2, .L650+4
 16988 0280 1188     		ldrh	r1, [r2]	@ unaligned
 16989 0282 9278     		ldrb	r2, [r2, #2]
 16990 0284 1980     		strh	r1, [r3]	@ unaligned
 16991 0286 9A70     		strb	r2, [r3, #2]
2263:..\src/command_processing.c ****             
2264:..\src/command_processing.c ****     sprintf(str, "EMG activations counter: %lu, %lu", MEM_P->cnt.emg_counter[0], MEM_P->cnt.emg_cou
 16992              		.loc 1 2264 0
 16993 0288 BB6F     		ldr	r3, [r7, #120]
 16994 028a 1A69     		ldr	r2, [r3, #16]
 16995 028c BB6F     		ldr	r3, [r7, #120]
 16996 028e 5B69     		ldr	r3, [r3, #20]
 16997 0290 07F10800 		add	r0, r7, #8
 16998 0294 4249     		ldr	r1, .L650+8
 16999 0296 FFF7FEFF 		bl	sprintf
2265:..\src/command_processing.c ****     strcat(info_string, str);
 17000              		.loc 1 2265 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 377


 17001 029a 07F10803 		add	r3, r7, #8
 17002 029e 1946     		mov	r1, r3
 17003 02a0 7868     		ldr	r0, [r7, #4]
 17004 02a2 FFF7FEFF 		bl	strcat
2266:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17005              		.loc 1 2266 0
 17006 02a6 7868     		ldr	r0, [r7, #4]
 17007 02a8 FFF7FEFF 		bl	strlen
 17008 02ac 0346     		mov	r3, r0
 17009 02ae 1A46     		mov	r2, r3
 17010 02b0 7B68     		ldr	r3, [r7, #4]
 17011 02b2 1344     		add	r3, r3, r2
 17012 02b4 394A     		ldr	r2, .L650+4
 17013 02b6 1188     		ldrh	r1, [r2]	@ unaligned
 17014 02b8 9278     		ldrb	r2, [r2, #2]
 17015 02ba 1980     		strh	r1, [r3]	@ unaligned
 17016 02bc 9A70     		strb	r2, [r3, #2]
2267:..\src/command_processing.c ****     
2268:..\src/command_processing.c ****     sprintf(str, "Rest position occurrences: %lu", MEM_P->cnt.rest_counter);
 17017              		.loc 1 2268 0
 17018 02be BB6F     		ldr	r3, [r7, #120]
 17019 02c0 1A6D     		ldr	r2, [r3, #80]
 17020 02c2 07F10803 		add	r3, r7, #8
 17021 02c6 3749     		ldr	r1, .L650+12
 17022 02c8 1846     		mov	r0, r3
 17023 02ca FFF7FEFF 		bl	sprintf
2269:..\src/command_processing.c ****     strcat(info_string, str);
 17024              		.loc 1 2269 0
 17025 02ce 07F10803 		add	r3, r7, #8
 17026 02d2 1946     		mov	r1, r3
 17027 02d4 7868     		ldr	r0, [r7, #4]
 17028 02d6 FFF7FEFF 		bl	strcat
2270:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17029              		.loc 1 2270 0
 17030 02da 7868     		ldr	r0, [r7, #4]
 17031 02dc FFF7FEFF 		bl	strlen
 17032 02e0 0346     		mov	r3, r0
 17033 02e2 1A46     		mov	r2, r3
 17034 02e4 7B68     		ldr	r3, [r7, #4]
 17035 02e6 1344     		add	r3, r3, r2
 17036 02e8 2C4A     		ldr	r2, .L650+4
 17037 02ea 1188     		ldrh	r1, [r2]	@ unaligned
 17038 02ec 9278     		ldrb	r2, [r2, #2]
 17039 02ee 1980     		strh	r1, [r3]	@ unaligned
 17040 02f0 9A70     		strb	r2, [r3, #2]
2271:..\src/command_processing.c ****     
2272:..\src/command_processing.c ****     sprintf(str, "Angle total displacement (ticks): %lu", MEM_P->cnt.wire_disp);
 17041              		.loc 1 2272 0
 17042 02f2 BB6F     		ldr	r3, [r7, #120]
 17043 02f4 5A6D     		ldr	r2, [r3, #84]
 17044 02f6 07F10803 		add	r3, r7, #8
 17045 02fa 2B49     		ldr	r1, .L650+16
 17046 02fc 1846     		mov	r0, r3
 17047 02fe FFF7FEFF 		bl	sprintf
2273:..\src/command_processing.c ****     strcat(info_string, str);
 17048              		.loc 1 2273 0
 17049 0302 07F10803 		add	r3, r7, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 378


 17050 0306 1946     		mov	r1, r3
 17051 0308 7868     		ldr	r0, [r7, #4]
 17052 030a FFF7FEFF 		bl	strcat
2274:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17053              		.loc 1 2274 0
 17054 030e 7868     		ldr	r0, [r7, #4]
 17055 0310 FFF7FEFF 		bl	strlen
 17056 0314 0346     		mov	r3, r0
 17057 0316 1A46     		mov	r2, r3
 17058 0318 7B68     		ldr	r3, [r7, #4]
 17059 031a 1344     		add	r3, r3, r2
 17060 031c 1F4A     		ldr	r2, .L650+4
 17061 031e 1188     		ldrh	r1, [r2]	@ unaligned
 17062 0320 9278     		ldrb	r2, [r2, #2]
 17063 0322 1980     		strh	r1, [r3]	@ unaligned
 17064 0324 9A70     		strb	r2, [r3, #2]
2275:..\src/command_processing.c ****     
2276:..\src/command_processing.c ****     sprintf(str, "Total power on time (sec): %lu", MEM_P->cnt.total_time_on);
 17065              		.loc 1 2276 0
 17066 0326 BB6F     		ldr	r3, [r7, #120]
 17067 0328 9A6D     		ldr	r2, [r3, #88]
 17068 032a 07F10803 		add	r3, r7, #8
 17069 032e 1F49     		ldr	r1, .L650+20
 17070 0330 1846     		mov	r0, r3
 17071 0332 FFF7FEFF 		bl	sprintf
2277:..\src/command_processing.c ****     strcat(info_string, str);
 17072              		.loc 1 2277 0
 17073 0336 07F10803 		add	r3, r7, #8
 17074 033a 1946     		mov	r1, r3
 17075 033c 7868     		ldr	r0, [r7, #4]
 17076 033e FFF7FEFF 		bl	strcat
2278:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17077              		.loc 1 2278 0
 17078 0342 7868     		ldr	r0, [r7, #4]
 17079 0344 FFF7FEFF 		bl	strlen
 17080 0348 0346     		mov	r3, r0
 17081 034a 1A46     		mov	r2, r3
 17082 034c 7B68     		ldr	r3, [r7, #4]
 17083 034e 1344     		add	r3, r3, r2
 17084 0350 124A     		ldr	r2, .L650+4
 17085 0352 1188     		ldrh	r1, [r2]	@ unaligned
 17086 0354 9278     		ldrb	r2, [r2, #2]
 17087 0356 1980     		strh	r1, [r3]	@ unaligned
 17088 0358 9A70     		strb	r2, [r3, #2]
2279:..\src/command_processing.c ****     
2280:..\src/command_processing.c ****     sprintf(str, "Total rest position time (sec): %lu", MEM_P->cnt.total_time_rest);
 17089              		.loc 1 2280 0
 17090 035a BB6F     		ldr	r3, [r7, #120]
 17091 035c DA6D     		ldr	r2, [r3, #92]
 17092 035e 07F10803 		add	r3, r7, #8
 17093 0362 1349     		ldr	r1, .L650+24
 17094 0364 1846     		mov	r0, r3
 17095 0366 FFF7FEFF 		bl	sprintf
2281:..\src/command_processing.c ****     strcat(info_string, str);
 17096              		.loc 1 2281 0
 17097 036a 07F10803 		add	r3, r7, #8
 17098 036e 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 379


 17099 0370 7868     		ldr	r0, [r7, #4]
 17100 0372 FFF7FEFF 		bl	strcat
2282:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17101              		.loc 1 2282 0
 17102 0376 7868     		ldr	r0, [r7, #4]
 17103 0378 FFF7FEFF 		bl	strlen
 17104 037c 0346     		mov	r3, r0
 17105 037e 1A46     		mov	r2, r3
 17106 0380 7B68     		ldr	r3, [r7, #4]
 17107 0382 1344     		add	r3, r3, r2
 17108 0384 054A     		ldr	r2, .L650+4
 17109 0386 1188     		ldrh	r1, [r2]	@ unaligned
 17110 0388 9278     		ldrb	r2, [r2, #2]
 17111 038a 1980     		strh	r1, [r3]	@ unaligned
 17112 038c 9A70     		strb	r2, [r3, #2]
2283:..\src/command_processing.c **** 
2284:..\src/command_processing.c **** }
 17113              		.loc 1 2284 0
 17114 038e 00BF     		nop
 17115 0390 8437     		adds	r7, r7, #132
 17116              		.cfi_def_cfa_offset 20
 17117 0392 BD46     		mov	sp, r7
 17118              		.cfi_def_cfa_register 13
 17119              		@ sp needed
 17120 0394 F0BD     		pop	{r4, r5, r6, r7, pc}
 17121              	.L651:
 17122 0396 00BF     		.align	2
 17123              	.L650:
 17124 0398 18180000 		.word	.LC234
 17125 039c A80E0000 		.word	.LC132
 17126 03a0 34180000 		.word	.LC235
 17127 03a4 58180000 		.word	.LC236
 17128 03a8 78180000 		.word	.LC237
 17129 03ac A0180000 		.word	.LC238
 17130 03b0 C0180000 		.word	.LC239
 17131              		.cfi_endproc
 17132              	.LFE73:
 17133              		.size	prepare_counter_info, .-prepare_counter_info
 17134              		.section	.rodata
 17135              		.align	2
 17136              	.LC240:
 17137 18e4 4669726D 		.ascii	"Firmware version: %s\015\012\000"
 17137      77617265 
 17137      20766572 
 17137      73696F6E 
 17137      3A202573 
 17138 18fb 00       		.align	2
 17139              	.LC241:
 17140 18fc 506F7369 		.ascii	"Position PID: \000"
 17140      74696F6E 
 17140      20504944 
 17140      3A2000
 17141 190b 00       		.align	2
 17142              	.LC242:
 17143 190c 43757272 		.ascii	"Current PID: \000"
 17143      656E7420 
 17143      5049443A 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 380


 17143      2000
 17144 191a 0000     		.align	2
 17145              	.LC243:
 17146 191c 5265736F 		.ascii	"Resolutions: \000"
 17146      6C757469 
 17146      6F6E733A 
 17146      2000
 17147 192a 0000     		.align	2
 17148              	.LC244:
 17149 192c 4F666673 		.ascii	"Offsets: \000"
 17149      6574733A 
 17149      2000
 17150 1936 0000     		.align	2
 17151              	.LC245:
 17152 1938 4D756C74 		.ascii	"Multipliers: \000"
 17152      69706C69 
 17152      6572733A 
 17152      2000
 17153 1946 0000     		.align	2
 17154              	.LC246:
 17155 1948 43757272 		.ascii	"Current lookup table p[0] - p[5]: %f, %f, %f, %f, %"
 17155      656E7420 
 17155      6C6F6F6B 
 17155      75702074 
 17155      61626C65 
 17156 197b 662C2025 		.ascii	"f, %f\015\012\000"
 17156      660D0A00 
 17157 1983 00       		.align	2
 17158              	.LC247:
 17159 1984 506F7369 		.ascii	"Position limit active: %d\015\012\000"
 17159      74696F6E 
 17159      206C696D 
 17159      69742061 
 17159      63746976 
 17160              		.align	2
 17161              	.LC248:
 17162 19a0 506F7369 		.ascii	"Position limits: inf -> %ld, sup -> %ld\015\012\000"
 17162      74696F6E 
 17162      206C696D 
 17162      6974733A 
 17162      20696E66 
 17163              		.section	.text.prepare_SD_param_info,"ax",%progbits
 17164              		.align	2
 17165              		.global	prepare_SD_param_info
 17166              		.thumb
 17167              		.thumb_func
 17168              		.type	prepare_SD_param_info, %function
 17169              	prepare_SD_param_info:
 17170              	.LFB74:
2285:..\src/command_processing.c **** 
2286:..\src/command_processing.c **** //==============================================================================
2287:..\src/command_processing.c **** //                                                    PREPARE SD CARD PARAM INFO
2288:..\src/command_processing.c **** //==============================================================================
2289:..\src/command_processing.c **** 
2290:..\src/command_processing.c **** void prepare_SD_param_info(char *info_string)
2291:..\src/command_processing.c **** {
 17171              		.loc 1 2291 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 381


 17172              		.cfi_startproc
 17173              		@ args = 0, pretend = 0, frame = 152
 17174              		@ frame_needed = 1, uses_anonymous_args = 0
 17175 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 17176              		.cfi_def_cfa_offset 36
 17177              		.cfi_offset 4, -36
 17178              		.cfi_offset 5, -32
 17179              		.cfi_offset 6, -28
 17180              		.cfi_offset 7, -24
 17181              		.cfi_offset 8, -20
 17182              		.cfi_offset 9, -16
 17183              		.cfi_offset 10, -12
 17184              		.cfi_offset 11, -8
 17185              		.cfi_offset 14, -4
 17186 0004 B1B0     		sub	sp, sp, #196
 17187              		.cfi_def_cfa_offset 232
 17188 0006 0AAF     		add	r7, sp, #40
 17189              		.cfi_def_cfa 7, 192
 17190 0008 7861     		str	r0, [r7, #20]
2292:..\src/command_processing.c ****     char str[100];  
2293:..\src/command_processing.c ****     int i;
2294:..\src/command_processing.c ****            
2295:..\src/command_processing.c ****     // NOTE: use g_mem structure instead of c_mem because when changing parameters c_mem struct is 
2296:..\src/command_processing.c ****     
2297:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 17191              		.loc 1 2297 0
 17192 000a AB4B     		ldr	r3, .L716
 17193 000c C7F88C30 		str	r3, [r7, #140]
2298:..\src/command_processing.c ****         
2299:..\src/command_processing.c ****     sprintf(info_string, "Firmware version: %s\r\n", VERSION);
 17194              		.loc 1 2299 0
 17195 0010 AA4A     		ldr	r2, .L716+4
 17196 0012 AB49     		ldr	r1, .L716+8
 17197 0014 7869     		ldr	r0, [r7, #20]
 17198 0016 FFF7FEFF 		bl	sprintf
2300:..\src/command_processing.c ****     
2301:..\src/command_processing.c ****     sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 17199              		.loc 1 2301 0
 17200 001a D7F88C30 		ldr	r3, [r7, #140]
 17201 001e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 17202 0022 1A46     		mov	r2, r3
 17203 0024 07F11C03 		add	r3, r7, #28
 17204 0028 A649     		ldr	r1, .L716+12
 17205 002a 1846     		mov	r0, r3
 17206 002c FFF7FEFF 		bl	sprintf
2302:..\src/command_processing.c ****     strcat(info_string, str);
 17207              		.loc 1 2302 0
 17208 0030 07F11C03 		add	r3, r7, #28
 17209 0034 1946     		mov	r1, r3
 17210 0036 7869     		ldr	r0, [r7, #20]
 17211 0038 FFF7FEFF 		bl	strcat
2303:..\src/command_processing.c ****     switch(MEM_P->dev.right_left){
 17212              		.loc 1 2303 0
 17213 003c D7F88C30 		ldr	r3, [r7, #140]
 17214 0040 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 17215 0044 002B     		cmp	r3, #0
 17216 0046 02D0     		beq	.L654
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 382


 17217 0048 012B     		cmp	r3, #1
 17218 004a 15D0     		beq	.L655
 17219 004c 26E0     		b	.L653
 17220              	.L654:
2304:..\src/command_processing.c ****         case RIGHT_HAND:
2305:..\src/command_processing.c ****             strcat(info_string, "Hand side: RIGHT\r\n");
 17221              		.loc 1 2305 0
 17222 004e 7869     		ldr	r0, [r7, #20]
 17223 0050 FFF7FEFF 		bl	strlen
 17224 0054 0346     		mov	r3, r0
 17225 0056 1A46     		mov	r2, r3
 17226 0058 7B69     		ldr	r3, [r7, #20]
 17227 005a 1344     		add	r3, r3, r2
 17228 005c 9A4A     		ldr	r2, .L716+16
 17229 005e 1D46     		mov	r5, r3
 17230 0060 1446     		mov	r4, r2
 17231 0062 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17232 0064 2860     		str	r0, [r5]	@ unaligned
 17233 0066 6960     		str	r1, [r5, #4]	@ unaligned
 17234 0068 AA60     		str	r2, [r5, #8]	@ unaligned
 17235 006a EB60     		str	r3, [r5, #12]	@ unaligned
 17236 006c 2388     		ldrh	r3, [r4]	@ unaligned
 17237 006e A278     		ldrb	r2, [r4, #2]
 17238 0070 2B82     		strh	r3, [r5, #16]	@ unaligned
 17239 0072 1346     		mov	r3, r2
 17240 0074 AB74     		strb	r3, [r5, #18]
2306:..\src/command_processing.c ****             break;
 17241              		.loc 1 2306 0
 17242 0076 11E0     		b	.L653
 17243              	.L655:
2307:..\src/command_processing.c ****         case LEFT_HAND:
2308:..\src/command_processing.c ****             strcat(info_string, "Hand side: LEFT\r\n");
 17244              		.loc 1 2308 0
 17245 0078 7869     		ldr	r0, [r7, #20]
 17246 007a FFF7FEFF 		bl	strlen
 17247 007e 0346     		mov	r3, r0
 17248 0080 1A46     		mov	r2, r3
 17249 0082 7B69     		ldr	r3, [r7, #20]
 17250 0084 1344     		add	r3, r3, r2
 17251 0086 914A     		ldr	r2, .L716+20
 17252 0088 1D46     		mov	r5, r3
 17253 008a 1446     		mov	r4, r2
 17254 008c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17255 008e 2860     		str	r0, [r5]	@ unaligned
 17256 0090 6960     		str	r1, [r5, #4]	@ unaligned
 17257 0092 AA60     		str	r2, [r5, #8]	@ unaligned
 17258 0094 EB60     		str	r3, [r5, #12]	@ unaligned
 17259 0096 2388     		ldrh	r3, [r4]	@ unaligned
 17260 0098 2B82     		strh	r3, [r5, #16]	@ unaligned
2309:..\src/command_processing.c ****             break;
 17261              		.loc 1 2309 0
 17262 009a 00BF     		nop
 17263              	.L653:
2310:..\src/command_processing.c ****     }
2311:..\src/command_processing.c **** 
2312:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 17264              		.loc 1 2312 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 383


 17265 009c D7F88C30 		ldr	r3, [r7, #140]
 17266 00a0 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 17267 00a4 1A46     		mov	r2, r3
 17268 00a6 D7F88C30 		ldr	r3, [r7, #140]
 17269 00aa 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 17270 00ae 1946     		mov	r1, r3
 17271 00b0 D7F88C30 		ldr	r3, [r7, #140]
 17272 00b4 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 17273 00b8 07F11C00 		add	r0, r7, #28
 17274 00bc 0093     		str	r3, [sp]
 17275 00be 0B46     		mov	r3, r1
 17276 00c0 8349     		ldr	r1, .L716+24
 17277 00c2 FFF7FEFF 		bl	sprintf
2313:..\src/command_processing.c ****     strcat(info_string, str);
 17278              		.loc 1 2313 0
 17279 00c6 07F11C03 		add	r3, r7, #28
 17280 00ca 1946     		mov	r1, r3
 17281 00cc 7869     		ldr	r0, [r7, #20]
 17282 00ce FFF7FEFF 		bl	strcat
2314:..\src/command_processing.c ****     
2315:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 17283              		.loc 1 2315 0
 17284 00d2 D7F88C30 		ldr	r3, [r7, #140]
 17285 00d6 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 17286 00da 1A46     		mov	r2, r3
 17287 00dc D7F88C30 		ldr	r3, [r7, #140]
 17288 00e0 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 17289 00e4 1946     		mov	r1, r3
 17290 00e6 D7F88C30 		ldr	r3, [r7, #140]
 17291 00ea 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 17292 00ee 07F11C00 		add	r0, r7, #28
 17293 00f2 0093     		str	r3, [sp]
 17294 00f4 0B46     		mov	r3, r1
 17295 00f6 7749     		ldr	r1, .L716+28
 17296 00f8 FFF7FEFF 		bl	sprintf
2316:..\src/command_processing.c ****     strcat(info_string, str);
 17297              		.loc 1 2316 0
 17298 00fc 07F11C03 		add	r3, r7, #28
 17299 0100 1946     		mov	r1, r3
 17300 0102 7869     		ldr	r0, [r7, #20]
 17301 0104 FFF7FEFF 		bl	strcat
 17302              	.LBB19:
2317:..\src/command_processing.c ****     
2318:..\src/command_processing.c **** 	for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 17303              		.loc 1 2318 0
 17304 0108 0023     		movs	r3, #0
 17305 010a 87F89330 		strb	r3, [r7, #147]
 17306 010e 00F039BE 		b	.L656
 17307              	.L699:
 17308              	.LBB20:
2319:..\src/command_processing.c ****             
2320:..\src/command_processing.c **** 	    uint8 MOTOR_IDX = k;
 17309              		.loc 1 2320 0
 17310 0112 97F89330 		ldrb	r3, [r7, #147]
 17311 0116 87F88B30 		strb	r3, [r7, #139]
2321:..\src/command_processing.c ****         struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 17312              		.loc 1 2321 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 384


 17313 011a 97F88B20 		ldrb	r2, [r7, #139]	@ zero_extendqisi2
 17314 011e 1346     		mov	r3, r2
 17315 0120 DB00     		lsls	r3, r3, #3
 17316 0122 9B1A     		subs	r3, r3, r2
 17317 0124 1B01     		lsls	r3, r3, #4
 17318 0126 B033     		adds	r3, r3, #176
 17319 0128 D7F88C20 		ldr	r2, [r7, #140]
 17320 012c 1344     		add	r3, r3, r2
 17321 012e C7F88430 		str	r3, [r7, #132]
2322:..\src/command_processing.c ****         uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 17322              		.loc 1 2322 0
 17323 0132 D7F88430 		ldr	r3, [r7, #132]
 17324 0136 93F86030 		ldrb	r3, [r3, #96]
 17325 013a 87F88330 		strb	r3, [r7, #131]
2323:..\src/command_processing.c ****               
2324:..\src/command_processing.c ****         sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 17326              		.loc 1 2324 0
 17327 013e 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 17328 0142 5A1C     		adds	r2, r3, #1
 17329 0144 07F11C03 		add	r3, r7, #28
 17330 0148 6349     		ldr	r1, .L716+32
 17331 014a 1846     		mov	r0, r3
 17332 014c FFF7FEFF 		bl	sprintf
2325:..\src/command_processing.c ****         strcat(info_string, str);
 17333              		.loc 1 2325 0
 17334 0150 07F11C03 		add	r3, r7, #28
 17335 0154 1946     		mov	r1, r3
 17336 0156 7869     		ldr	r0, [r7, #20]
 17337 0158 FFF7FEFF 		bl	strcat
2326:..\src/command_processing.c ****                     
2327:..\src/command_processing.c ****         strcat(info_string, "PWM rescaling activation: ");
 17338              		.loc 1 2327 0
 17339 015c 7869     		ldr	r0, [r7, #20]
 17340 015e FFF7FEFF 		bl	strlen
 17341 0162 0346     		mov	r3, r0
 17342 0164 1A46     		mov	r2, r3
 17343 0166 7B69     		ldr	r3, [r7, #20]
 17344 0168 1344     		add	r3, r3, r2
 17345 016a 5C4A     		ldr	r2, .L716+36
 17346 016c 1D46     		mov	r5, r3
 17347 016e 1446     		mov	r4, r2
 17348 0170 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17349 0172 2860     		str	r0, [r5]	@ unaligned
 17350 0174 6960     		str	r1, [r5, #4]	@ unaligned
 17351 0176 AA60     		str	r2, [r5, #8]	@ unaligned
 17352 0178 EB60     		str	r3, [r5, #12]	@ unaligned
 17353 017a 03CC     		ldmia	r4!, {r0, r1}
 17354 017c 2861     		str	r0, [r5, #16]	@ unaligned
 17355 017e 6961     		str	r1, [r5, #20]	@ unaligned
 17356 0180 2388     		ldrh	r3, [r4]	@ unaligned
 17357 0182 A278     		ldrb	r2, [r4, #2]
 17358 0184 2B83     		strh	r3, [r5, #24]	@ unaligned
 17359 0186 1346     		mov	r3, r2
 17360 0188 AB76     		strb	r3, [r5, #26]
2328:..\src/command_processing.c ****         if(MOT->activate_pwm_rescaling == MAXON_12V)
 17361              		.loc 1 2328 0
 17362 018a D7F88430 		ldr	r3, [r7, #132]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 385


 17363 018e 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 17364 0192 012B     		cmp	r3, #1
 17365 0194 0CD1     		bne	.L657
2329:..\src/command_processing.c ****             strcat(info_string, "YES\r\n");
 17366              		.loc 1 2329 0
 17367 0196 7869     		ldr	r0, [r7, #20]
 17368 0198 FFF7FEFF 		bl	strlen
 17369 019c 0346     		mov	r3, r0
 17370 019e 1A46     		mov	r2, r3
 17371 01a0 7B69     		ldr	r3, [r7, #20]
 17372 01a2 1344     		add	r3, r3, r2
 17373 01a4 4E4A     		ldr	r2, .L716+40
 17374 01a6 1068     		ldr	r0, [r2]	@ unaligned
 17375 01a8 1860     		str	r0, [r3]	@ unaligned
 17376 01aa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17377 01ac 9A80     		strh	r2, [r3, #4]	@ unaligned
 17378 01ae 0BE0     		b	.L658
 17379              	.L657:
2330:..\src/command_processing.c ****         else
2331:..\src/command_processing.c ****             strcat(info_string, "NO\r\n");
 17380              		.loc 1 2331 0
 17381 01b0 7869     		ldr	r0, [r7, #20]
 17382 01b2 FFF7FEFF 		bl	strlen
 17383 01b6 0346     		mov	r3, r0
 17384 01b8 1A46     		mov	r2, r3
 17385 01ba 7B69     		ldr	r3, [r7, #20]
 17386 01bc 1344     		add	r3, r3, r2
 17387 01be 494A     		ldr	r2, .L716+44
 17388 01c0 1068     		ldr	r0, [r2]	@ unaligned
 17389 01c2 1860     		str	r0, [r3]	@ unaligned
 17390 01c4 1279     		ldrb	r2, [r2, #4]
 17391 01c6 1A71     		strb	r2, [r3, #4]
 17392              	.L658:
2332:..\src/command_processing.c ****         
2333:..\src/command_processing.c ****         sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 17393              		.loc 1 2333 0
 17394 01c8 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 17395 01cc 464A     		ldr	r2, .L716+48
 17396 01ce D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 17397 01d0 1A46     		mov	r2, r3
 17398 01d2 07F11C03 		add	r3, r7, #28
 17399 01d6 4549     		ldr	r1, .L716+52
 17400 01d8 1846     		mov	r0, r3
 17401 01da FFF7FEFF 		bl	sprintf
2334:..\src/command_processing.c ****         strcat(info_string, str);
 17402              		.loc 1 2334 0
 17403 01de 07F11C03 		add	r3, r7, #28
 17404 01e2 1946     		mov	r1, r3
 17405 01e4 7869     		ldr	r0, [r7, #20]
 17406 01e6 FFF7FEFF 		bl	strcat
2335:..\src/command_processing.c **** 
2336:..\src/command_processing.c ****         strcat(info_string, "Position PID: ");
 17407              		.loc 1 2336 0
 17408 01ea 7869     		ldr	r0, [r7, #20]
 17409 01ec FFF7FEFF 		bl	strlen
 17410 01f0 0346     		mov	r3, r0
 17411 01f2 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 386


 17412 01f4 7B69     		ldr	r3, [r7, #20]
 17413 01f6 1344     		add	r3, r3, r2
 17414 01f8 3D4A     		ldr	r2, .L716+56
 17415 01fa 1C46     		mov	r4, r3
 17416 01fc 1346     		mov	r3, r2
 17417 01fe 07CB     		ldmia	r3!, {r0, r1, r2}
 17418 0200 2060     		str	r0, [r4]	@ unaligned
 17419 0202 6160     		str	r1, [r4, #4]	@ unaligned
 17420 0204 A260     		str	r2, [r4, #8]	@ unaligned
 17421 0206 1A88     		ldrh	r2, [r3]	@ unaligned
 17422 0208 9B78     		ldrb	r3, [r3, #2]
 17423 020a A281     		strh	r2, [r4, #12]	@ unaligned
 17424 020c A373     		strb	r3, [r4, #14]
2337:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 17425              		.loc 1 2337 0
 17426 020e D7F88430 		ldr	r3, [r7, #132]
 17427 0212 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 17428 0216 032B     		cmp	r3, #3
 17429 0218 74D0     		beq	.L659
2338:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 17430              		.loc 1 2338 0
 17431 021a D7F88430 		ldr	r3, [r7, #132]
 17432 021e 1B68     		ldr	r3, [r3]
 17433 0220 1846     		mov	r0, r3
 17434 0222 FFF7FEFF 		bl	__aeabi_i2d
 17435 0226 4FF00002 		mov	r2, #0
 17436 022a 324B     		ldr	r3, .L716+60
 17437 022c FFF7FEFF 		bl	__aeabi_ddiv
 17438 0230 0346     		mov	r3, r0
 17439 0232 0C46     		mov	r4, r1
 17440 0234 07F11C00 		add	r0, r7, #28
 17441 0238 1A46     		mov	r2, r3
 17442 023a 2346     		mov	r3, r4
 17443 023c 2E49     		ldr	r1, .L716+64
 17444 023e FFF7FEFF 		bl	sprintf
2339:..\src/command_processing.c ****             strcat(info_string, str);
 17445              		.loc 1 2339 0
 17446 0242 07F11C03 		add	r3, r7, #28
 17447 0246 1946     		mov	r1, r3
 17448 0248 7869     		ldr	r0, [r7, #20]
 17449 024a FFF7FEFF 		bl	strcat
2340:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 17450              		.loc 1 2340 0
 17451 024e D7F88430 		ldr	r3, [r7, #132]
 17452 0252 5B68     		ldr	r3, [r3, #4]
 17453 0254 1846     		mov	r0, r3
 17454 0256 FFF7FEFF 		bl	__aeabi_i2d
 17455 025a 4FF00002 		mov	r2, #0
 17456 025e 254B     		ldr	r3, .L716+60
 17457 0260 FFF7FEFF 		bl	__aeabi_ddiv
 17458 0264 0346     		mov	r3, r0
 17459 0266 0C46     		mov	r4, r1
 17460 0268 07F11C00 		add	r0, r7, #28
 17461 026c 1A46     		mov	r2, r3
 17462 026e 2346     		mov	r3, r4
 17463 0270 2249     		ldr	r1, .L716+68
 17464 0272 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 387


2341:..\src/command_processing.c ****             strcat(info_string, str);
 17465              		.loc 1 2341 0
 17466 0276 07F11C03 		add	r3, r7, #28
 17467 027a 1946     		mov	r1, r3
 17468 027c 7869     		ldr	r0, [r7, #20]
 17469 027e FFF7FEFF 		bl	strcat
2342:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 17470              		.loc 1 2342 0
 17471 0282 D7F88430 		ldr	r3, [r7, #132]
 17472 0286 9B68     		ldr	r3, [r3, #8]
 17473 0288 1846     		mov	r0, r3
 17474 028a FFF7FEFF 		bl	__aeabi_i2d
 17475 028e 4FF00002 		mov	r2, #0
 17476 0292 184B     		ldr	r3, .L716+60
 17477 0294 FFF7FEFF 		bl	__aeabi_ddiv
 17478 0298 0346     		mov	r3, r0
 17479 029a 0C46     		mov	r4, r1
 17480 029c 07F11C00 		add	r0, r7, #28
 17481 02a0 1A46     		mov	r2, r3
 17482 02a2 2346     		mov	r3, r4
 17483 02a4 1649     		ldr	r1, .L716+72
 17484 02a6 FFF7FEFF 		bl	sprintf
2343:..\src/command_processing.c ****             strcat(info_string, str);
 17485              		.loc 1 2343 0
 17486 02aa 07F11C03 		add	r3, r7, #28
 17487 02ae 1946     		mov	r1, r3
 17488 02b0 7869     		ldr	r0, [r7, #20]
 17489 02b2 FFF7FEFF 		bl	strcat
 17490 02b6 73E0     		b	.L660
 17491              	.L717:
 17492              		.align	2
 17493              	.L716:
 17494 02b8 00000000 		.word	g_mem
 17495 02bc C00E0000 		.word	.LC134
 17496 02c0 E4180000 		.word	.LC240
 17497 02c4 240F0000 		.word	.LC137
 17498 02c8 8C0F0000 		.word	.LC141
 17499 02cc A00F0000 		.word	.LC142
 17500 02d0 28170000 		.word	.LC228
 17501 02d4 54170000 		.word	.LC229
 17502 02d8 EC0F0000 		.word	.LC146
 17503 02dc 5C100000 		.word	.LC155
 17504 02e0 4C100000 		.word	.LC153
 17505 02e4 54100000 		.word	.LC154
 17506 02e8 00000000 		.word	dev_pwm_limit
 17507 02ec 84100000 		.word	.LC158
 17508 02f0 FC180000 		.word	.LC241
 17509 02f4 0000F040 		.word	1089470464
 17510 02f8 7C110000 		.word	.LC169
 17511 02fc 88110000 		.word	.LC170
 17512 0300 94110000 		.word	.LC171
 17513              	.L659:
2344:..\src/command_processing.c ****         }
2345:..\src/command_processing.c ****         else { 
2346:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 17514              		.loc 1 2346 0
 17515 0304 D7F88430 		ldr	r3, [r7, #132]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 388


 17516 0308 9B69     		ldr	r3, [r3, #24]
 17517 030a 1846     		mov	r0, r3
 17518 030c FFF7FEFF 		bl	__aeabi_i2d
 17519 0310 4FF00002 		mov	r2, #0
 17520 0314 CB4B     		ldr	r3, .L718
 17521 0316 FFF7FEFF 		bl	__aeabi_ddiv
 17522 031a 0346     		mov	r3, r0
 17523 031c 0C46     		mov	r4, r1
 17524 031e 07F11C00 		add	r0, r7, #28
 17525 0322 1A46     		mov	r2, r3
 17526 0324 2346     		mov	r3, r4
 17527 0326 C849     		ldr	r1, .L718+4
 17528 0328 FFF7FEFF 		bl	sprintf
2347:..\src/command_processing.c ****             strcat(info_string, str);
 17529              		.loc 1 2347 0
 17530 032c 07F11C03 		add	r3, r7, #28
 17531 0330 1946     		mov	r1, r3
 17532 0332 7869     		ldr	r0, [r7, #20]
 17533 0334 FFF7FEFF 		bl	strcat
2348:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 17534              		.loc 1 2348 0
 17535 0338 D7F88430 		ldr	r3, [r7, #132]
 17536 033c DB69     		ldr	r3, [r3, #28]
 17537 033e 1846     		mov	r0, r3
 17538 0340 FFF7FEFF 		bl	__aeabi_i2d
 17539 0344 4FF00002 		mov	r2, #0
 17540 0348 BE4B     		ldr	r3, .L718
 17541 034a FFF7FEFF 		bl	__aeabi_ddiv
 17542 034e 0346     		mov	r3, r0
 17543 0350 0C46     		mov	r4, r1
 17544 0352 07F11C00 		add	r0, r7, #28
 17545 0356 1A46     		mov	r2, r3
 17546 0358 2346     		mov	r3, r4
 17547 035a BC49     		ldr	r1, .L718+8
 17548 035c FFF7FEFF 		bl	sprintf
2349:..\src/command_processing.c ****             strcat(info_string, str);
 17549              		.loc 1 2349 0
 17550 0360 07F11C03 		add	r3, r7, #28
 17551 0364 1946     		mov	r1, r3
 17552 0366 7869     		ldr	r0, [r7, #20]
 17553 0368 FFF7FEFF 		bl	strcat
2350:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 17554              		.loc 1 2350 0
 17555 036c D7F88430 		ldr	r3, [r7, #132]
 17556 0370 1B6A     		ldr	r3, [r3, #32]
 17557 0372 1846     		mov	r0, r3
 17558 0374 FFF7FEFF 		bl	__aeabi_i2d
 17559 0378 4FF00002 		mov	r2, #0
 17560 037c B14B     		ldr	r3, .L718
 17561 037e FFF7FEFF 		bl	__aeabi_ddiv
 17562 0382 0346     		mov	r3, r0
 17563 0384 0C46     		mov	r4, r1
 17564 0386 07F11C00 		add	r0, r7, #28
 17565 038a 1A46     		mov	r2, r3
 17566 038c 2346     		mov	r3, r4
 17567 038e B049     		ldr	r1, .L718+12
 17568 0390 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 389


2351:..\src/command_processing.c ****             strcat(info_string, str);
 17569              		.loc 1 2351 0
 17570 0394 07F11C03 		add	r3, r7, #28
 17571 0398 1946     		mov	r1, r3
 17572 039a 7869     		ldr	r0, [r7, #20]
 17573 039c FFF7FEFF 		bl	strcat
 17574              	.L660:
2352:..\src/command_processing.c ****         }
2353:..\src/command_processing.c **** 
2354:..\src/command_processing.c ****         strcat(info_string, "Current PID: ");
 17575              		.loc 1 2354 0
 17576 03a0 7869     		ldr	r0, [r7, #20]
 17577 03a2 FFF7FEFF 		bl	strlen
 17578 03a6 0346     		mov	r3, r0
 17579 03a8 1A46     		mov	r2, r3
 17580 03aa 7B69     		ldr	r3, [r7, #20]
 17581 03ac 1344     		add	r3, r3, r2
 17582 03ae A94A     		ldr	r2, .L718+16
 17583 03b0 1C46     		mov	r4, r3
 17584 03b2 1346     		mov	r3, r2
 17585 03b4 07CB     		ldmia	r3!, {r0, r1, r2}
 17586 03b6 2060     		str	r0, [r4]	@ unaligned
 17587 03b8 6160     		str	r1, [r4, #4]	@ unaligned
 17588 03ba A260     		str	r2, [r4, #8]	@ unaligned
 17589 03bc 1B88     		ldrh	r3, [r3]	@ unaligned
 17590 03be A381     		strh	r3, [r4, #12]	@ unaligned
2355:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 17591              		.loc 1 2355 0
 17592 03c0 D7F88430 		ldr	r3, [r7, #132]
 17593 03c4 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 17594 03c8 032B     		cmp	r3, #3
 17595 03ca 4ED0     		beq	.L661
2356:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 17596              		.loc 1 2356 0
 17597 03cc D7F88430 		ldr	r3, [r7, #132]
 17598 03d0 DB68     		ldr	r3, [r3, #12]
 17599 03d2 1846     		mov	r0, r3
 17600 03d4 FFF7FEFF 		bl	__aeabi_i2d
 17601 03d8 4FF00002 		mov	r2, #0
 17602 03dc 994B     		ldr	r3, .L718
 17603 03de FFF7FEFF 		bl	__aeabi_ddiv
 17604 03e2 0346     		mov	r3, r0
 17605 03e4 0C46     		mov	r4, r1
 17606 03e6 07F11C00 		add	r0, r7, #28
 17607 03ea 1A46     		mov	r2, r3
 17608 03ec 2346     		mov	r3, r4
 17609 03ee 9649     		ldr	r1, .L718+4
 17610 03f0 FFF7FEFF 		bl	sprintf
2357:..\src/command_processing.c ****             strcat(info_string, str);
 17611              		.loc 1 2357 0
 17612 03f4 07F11C03 		add	r3, r7, #28
 17613 03f8 1946     		mov	r1, r3
 17614 03fa 7869     		ldr	r0, [r7, #20]
 17615 03fc FFF7FEFF 		bl	strcat
2358:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 17616              		.loc 1 2358 0
 17617 0400 D7F88430 		ldr	r3, [r7, #132]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 390


 17618 0404 1B69     		ldr	r3, [r3, #16]
 17619 0406 1846     		mov	r0, r3
 17620 0408 FFF7FEFF 		bl	__aeabi_i2d
 17621 040c 4FF00002 		mov	r2, #0
 17622 0410 8C4B     		ldr	r3, .L718
 17623 0412 FFF7FEFF 		bl	__aeabi_ddiv
 17624 0416 0346     		mov	r3, r0
 17625 0418 0C46     		mov	r4, r1
 17626 041a 07F11C00 		add	r0, r7, #28
 17627 041e 1A46     		mov	r2, r3
 17628 0420 2346     		mov	r3, r4
 17629 0422 8A49     		ldr	r1, .L718+8
 17630 0424 FFF7FEFF 		bl	sprintf
2359:..\src/command_processing.c ****             strcat(info_string, str);
 17631              		.loc 1 2359 0
 17632 0428 07F11C03 		add	r3, r7, #28
 17633 042c 1946     		mov	r1, r3
 17634 042e 7869     		ldr	r0, [r7, #20]
 17635 0430 FFF7FEFF 		bl	strcat
2360:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 17636              		.loc 1 2360 0
 17637 0434 D7F88430 		ldr	r3, [r7, #132]
 17638 0438 5B69     		ldr	r3, [r3, #20]
 17639 043a 1846     		mov	r0, r3
 17640 043c FFF7FEFF 		bl	__aeabi_i2d
 17641 0440 4FF00002 		mov	r2, #0
 17642 0444 7F4B     		ldr	r3, .L718
 17643 0446 FFF7FEFF 		bl	__aeabi_ddiv
 17644 044a 0346     		mov	r3, r0
 17645 044c 0C46     		mov	r4, r1
 17646 044e 07F11C00 		add	r0, r7, #28
 17647 0452 1A46     		mov	r2, r3
 17648 0454 2346     		mov	r3, r4
 17649 0456 7E49     		ldr	r1, .L718+12
 17650 0458 FFF7FEFF 		bl	sprintf
2361:..\src/command_processing.c ****             strcat(info_string, str);
 17651              		.loc 1 2361 0
 17652 045c 07F11C03 		add	r3, r7, #28
 17653 0460 1946     		mov	r1, r3
 17654 0462 7869     		ldr	r0, [r7, #20]
 17655 0464 FFF7FEFF 		bl	strcat
 17656 0468 4DE0     		b	.L662
 17657              	.L661:
2362:..\src/command_processing.c **** 
2363:..\src/command_processing.c ****         }
2364:..\src/command_processing.c ****         else {
2365:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 17658              		.loc 1 2365 0
 17659 046a D7F88430 		ldr	r3, [r7, #132]
 17660 046e 5B6A     		ldr	r3, [r3, #36]
 17661 0470 1846     		mov	r0, r3
 17662 0472 FFF7FEFF 		bl	__aeabi_i2d
 17663 0476 4FF00002 		mov	r2, #0
 17664 047a 724B     		ldr	r3, .L718
 17665 047c FFF7FEFF 		bl	__aeabi_ddiv
 17666 0480 0346     		mov	r3, r0
 17667 0482 0C46     		mov	r4, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 391


 17668 0484 07F11C00 		add	r0, r7, #28
 17669 0488 1A46     		mov	r2, r3
 17670 048a 2346     		mov	r3, r4
 17671 048c 6E49     		ldr	r1, .L718+4
 17672 048e FFF7FEFF 		bl	sprintf
2366:..\src/command_processing.c ****             strcat(info_string, str);
 17673              		.loc 1 2366 0
 17674 0492 07F11C03 		add	r3, r7, #28
 17675 0496 1946     		mov	r1, r3
 17676 0498 7869     		ldr	r0, [r7, #20]
 17677 049a FFF7FEFF 		bl	strcat
2367:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 17678              		.loc 1 2367 0
 17679 049e D7F88430 		ldr	r3, [r7, #132]
 17680 04a2 9B6A     		ldr	r3, [r3, #40]
 17681 04a4 1846     		mov	r0, r3
 17682 04a6 FFF7FEFF 		bl	__aeabi_i2d
 17683 04aa 4FF00002 		mov	r2, #0
 17684 04ae 654B     		ldr	r3, .L718
 17685 04b0 FFF7FEFF 		bl	__aeabi_ddiv
 17686 04b4 0346     		mov	r3, r0
 17687 04b6 0C46     		mov	r4, r1
 17688 04b8 07F11C00 		add	r0, r7, #28
 17689 04bc 1A46     		mov	r2, r3
 17690 04be 2346     		mov	r3, r4
 17691 04c0 6249     		ldr	r1, .L718+8
 17692 04c2 FFF7FEFF 		bl	sprintf
2368:..\src/command_processing.c ****             strcat(info_string, str);
 17693              		.loc 1 2368 0
 17694 04c6 07F11C03 		add	r3, r7, #28
 17695 04ca 1946     		mov	r1, r3
 17696 04cc 7869     		ldr	r0, [r7, #20]
 17697 04ce FFF7FEFF 		bl	strcat
2369:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 17698              		.loc 1 2369 0
 17699 04d2 D7F88430 		ldr	r3, [r7, #132]
 17700 04d6 DB6A     		ldr	r3, [r3, #44]
 17701 04d8 1846     		mov	r0, r3
 17702 04da FFF7FEFF 		bl	__aeabi_i2d
 17703 04de 4FF00002 		mov	r2, #0
 17704 04e2 584B     		ldr	r3, .L718
 17705 04e4 FFF7FEFF 		bl	__aeabi_ddiv
 17706 04e8 0346     		mov	r3, r0
 17707 04ea 0C46     		mov	r4, r1
 17708 04ec 07F11C00 		add	r0, r7, #28
 17709 04f0 1A46     		mov	r2, r3
 17710 04f2 2346     		mov	r3, r4
 17711 04f4 5649     		ldr	r1, .L718+12
 17712 04f6 FFF7FEFF 		bl	sprintf
2370:..\src/command_processing.c ****             strcat(info_string, str);
 17713              		.loc 1 2370 0
 17714 04fa 07F11C03 		add	r3, r7, #28
 17715 04fe 1946     		mov	r1, r3
 17716 0500 7869     		ldr	r0, [r7, #20]
 17717 0502 FFF7FEFF 		bl	strcat
 17718              	.L662:
2371:..\src/command_processing.c ****         }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 392


2372:..\src/command_processing.c ****         if (MOT->activ == 0x01)
 17719              		.loc 1 2372 0
 17720 0506 D7F88430 		ldr	r3, [r7, #132]
 17721 050a 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 17722 050e 012B     		cmp	r3, #1
 17723 0510 14D1     		bne	.L663
2373:..\src/command_processing.c ****             strcat(info_string, "Startup activation: YES\r\n");
 17724              		.loc 1 2373 0
 17725 0512 7869     		ldr	r0, [r7, #20]
 17726 0514 FFF7FEFF 		bl	strlen
 17727 0518 0346     		mov	r3, r0
 17728 051a 1A46     		mov	r2, r3
 17729 051c 7B69     		ldr	r3, [r7, #20]
 17730 051e 1344     		add	r3, r3, r2
 17731 0520 4D4A     		ldr	r2, .L718+20
 17732 0522 1D46     		mov	r5, r3
 17733 0524 1446     		mov	r4, r2
 17734 0526 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17735 0528 2860     		str	r0, [r5]	@ unaligned
 17736 052a 6960     		str	r1, [r5, #4]	@ unaligned
 17737 052c AA60     		str	r2, [r5, #8]	@ unaligned
 17738 052e EB60     		str	r3, [r5, #12]	@ unaligned
 17739 0530 03CC     		ldmia	r4!, {r0, r1}
 17740 0532 2861     		str	r0, [r5, #16]	@ unaligned
 17741 0534 6961     		str	r1, [r5, #20]	@ unaligned
 17742 0536 2388     		ldrh	r3, [r4]	@ unaligned
 17743 0538 2B83     		strh	r3, [r5, #24]	@ unaligned
 17744 053a 13E0     		b	.L664
 17745              	.L663:
2374:..\src/command_processing.c ****         else
2375:..\src/command_processing.c ****             strcat(info_string, "Startup activation: NO\r\n");
 17746              		.loc 1 2375 0
 17747 053c 7869     		ldr	r0, [r7, #20]
 17748 053e FFF7FEFF 		bl	strlen
 17749 0542 0346     		mov	r3, r0
 17750 0544 1A46     		mov	r2, r3
 17751 0546 7B69     		ldr	r3, [r7, #20]
 17752 0548 1344     		add	r3, r3, r2
 17753 054a 444A     		ldr	r2, .L718+24
 17754 054c 1D46     		mov	r5, r3
 17755 054e 1446     		mov	r4, r2
 17756 0550 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17757 0552 2860     		str	r0, [r5]	@ unaligned
 17758 0554 6960     		str	r1, [r5, #4]	@ unaligned
 17759 0556 AA60     		str	r2, [r5, #8]	@ unaligned
 17760 0558 EB60     		str	r3, [r5, #12]	@ unaligned
 17761 055a 03CC     		ldmia	r4!, {r0, r1}
 17762 055c 2861     		str	r0, [r5, #16]	@ unaligned
 17763 055e 6961     		str	r1, [r5, #20]	@ unaligned
 17764 0560 2378     		ldrb	r3, [r4]
 17765 0562 2B76     		strb	r3, [r5, #24]
 17766              	.L664:
2376:..\src/command_processing.c **** 
2377:..\src/command_processing.c ****         switch(MOT->input_mode) {
 17767              		.loc 1 2377 0
 17768 0564 D7F88430 		ldr	r3, [r7, #132]
 17769 0568 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 393


 17770 056c 062B     		cmp	r3, #6
 17771 056e 00F2D180 		bhi	.L665
 17772 0572 01A2     		adr	r2, .L667
 17773 0574 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 17774              		.p2align 2
 17775              	.L667:
 17776 0578 95050000 		.word	.L666+1
 17777 057c B9050000 		.word	.L668+1
 17778 0580 E1050000 		.word	.L669+1
 17779 0584 13060000 		.word	.L670+1
 17780 0588 71060000 		.word	.L671+1
 17781 058c 9F060000 		.word	.L672+1
 17782 0590 CF060000 		.word	.L673+1
 17783              		.p2align 1
 17784              	.L666:
2378:..\src/command_processing.c ****             case INPUT_MODE_EXTERNAL:
2379:..\src/command_processing.c ****                 strcat(info_string, "Input mode: USB\r\n");
 17785              		.loc 1 2379 0
 17786 0594 7869     		ldr	r0, [r7, #20]
 17787 0596 FFF7FEFF 		bl	strlen
 17788 059a 0346     		mov	r3, r0
 17789 059c 1A46     		mov	r2, r3
 17790 059e 7B69     		ldr	r3, [r7, #20]
 17791 05a0 1344     		add	r3, r3, r2
 17792 05a2 2F4A     		ldr	r2, .L718+28
 17793 05a4 1D46     		mov	r5, r3
 17794 05a6 1446     		mov	r4, r2
 17795 05a8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17796 05aa 2860     		str	r0, [r5]	@ unaligned
 17797 05ac 6960     		str	r1, [r5, #4]	@ unaligned
 17798 05ae AA60     		str	r2, [r5, #8]	@ unaligned
 17799 05b0 EB60     		str	r3, [r5, #12]	@ unaligned
 17800 05b2 2388     		ldrh	r3, [r4]	@ unaligned
 17801 05b4 2B82     		strh	r3, [r5, #16]	@ unaligned
2380:..\src/command_processing.c ****                 break;
 17802              		.loc 1 2380 0
 17803 05b6 ADE0     		b	.L665
 17804              	.L668:
2381:..\src/command_processing.c ****             case INPUT_MODE_ENCODER3:
2382:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Handle\r\n");
 17805              		.loc 1 2382 0
 17806 05b8 7869     		ldr	r0, [r7, #20]
 17807 05ba FFF7FEFF 		bl	strlen
 17808 05be 0346     		mov	r3, r0
 17809 05c0 1A46     		mov	r2, r3
 17810 05c2 7B69     		ldr	r3, [r7, #20]
 17811 05c4 1344     		add	r3, r3, r2
 17812 05c6 274A     		ldr	r2, .L718+32
 17813 05c8 1D46     		mov	r5, r3
 17814 05ca 1446     		mov	r4, r2
 17815 05cc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17816 05ce 2860     		str	r0, [r5]	@ unaligned
 17817 05d0 6960     		str	r1, [r5, #4]	@ unaligned
 17818 05d2 AA60     		str	r2, [r5, #8]	@ unaligned
 17819 05d4 EB60     		str	r3, [r5, #12]	@ unaligned
 17820 05d6 2068     		ldr	r0, [r4]	@ unaligned
 17821 05d8 2861     		str	r0, [r5, #16]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 394


 17822 05da 2379     		ldrb	r3, [r4, #4]
 17823 05dc 2B75     		strb	r3, [r5, #20]
2383:..\src/command_processing.c ****                 break;
 17824              		.loc 1 2383 0
 17825 05de 99E0     		b	.L665
 17826              	.L669:
2384:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL:
2385:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional\r\n");
 17827              		.loc 1 2385 0
 17828 05e0 7869     		ldr	r0, [r7, #20]
 17829 05e2 FFF7FEFF 		bl	strlen
 17830 05e6 0346     		mov	r3, r0
 17831 05e8 1A46     		mov	r2, r3
 17832 05ea 7B69     		ldr	r3, [r7, #20]
 17833 05ec 1344     		add	r3, r3, r2
 17834 05ee 1E4A     		ldr	r2, .L718+36
 17835 05f0 1D46     		mov	r5, r3
 17836 05f2 1446     		mov	r4, r2
 17837 05f4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17838 05f6 2860     		str	r0, [r5]	@ unaligned
 17839 05f8 6960     		str	r1, [r5, #4]	@ unaligned
 17840 05fa AA60     		str	r2, [r5, #8]	@ unaligned
 17841 05fc EB60     		str	r3, [r5, #12]	@ unaligned
 17842 05fe 07CC     		ldmia	r4!, {r0, r1, r2}
 17843 0600 2861     		str	r0, [r5, #16]	@ unaligned
 17844 0602 6961     		str	r1, [r5, #20]	@ unaligned
 17845 0604 AA61     		str	r2, [r5, #24]	@ unaligned
 17846 0606 2388     		ldrh	r3, [r4]	@ unaligned
 17847 0608 A278     		ldrb	r2, [r4, #2]
 17848 060a AB83     		strh	r3, [r5, #28]	@ unaligned
 17849 060c 1346     		mov	r3, r2
 17850 060e AB77     		strb	r3, [r5, #30]
2386:..\src/command_processing.c ****                 break;
 17851              		.loc 1 2386 0
 17852 0610 80E0     		b	.L665
 17853              	.L670:
2387:..\src/command_processing.c ****             case INPUT_MODE_EMG_INTEGRAL:
2388:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG integral\r\n");
 17854              		.loc 1 2388 0
 17855 0612 7869     		ldr	r0, [r7, #20]
 17856 0614 FFF7FEFF 		bl	strlen
 17857 0618 0346     		mov	r3, r0
 17858 061a 1A46     		mov	r2, r3
 17859 061c 7B69     		ldr	r3, [r7, #20]
 17860 061e 1344     		add	r3, r3, r2
 17861 0620 124A     		ldr	r2, .L718+40
 17862 0622 1D46     		mov	r5, r3
 17863 0624 1446     		mov	r4, r2
 17864 0626 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17865 0628 2860     		str	r0, [r5]	@ unaligned
 17866 062a 6960     		str	r1, [r5, #4]	@ unaligned
 17867 062c AA60     		str	r2, [r5, #8]	@ unaligned
 17868 062e EB60     		str	r3, [r5, #12]	@ unaligned
 17869 0630 03CC     		ldmia	r4!, {r0, r1}
 17870 0632 2861     		str	r0, [r5, #16]	@ unaligned
 17871 0634 6961     		str	r1, [r5, #20]	@ unaligned
 17872 0636 2388     		ldrh	r3, [r4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 395


 17873 0638 A278     		ldrb	r2, [r4, #2]
 17874 063a 2B83     		strh	r3, [r5, #24]	@ unaligned
 17875 063c 1346     		mov	r3, r2
 17876 063e AB76     		strb	r3, [r5, #26]
2389:..\src/command_processing.c ****                 break;
 17877              		.loc 1 2389 0
 17878 0640 68E0     		b	.L665
 17879              	.L719:
 17880 0642 00BF     		.align	2
 17881              	.L718:
 17882 0644 0000F040 		.word	1089470464
 17883 0648 7C110000 		.word	.LC169
 17884 064c 88110000 		.word	.LC170
 17885 0650 94110000 		.word	.LC171
 17886 0654 0C190000 		.word	.LC242
 17887 0658 BC110000 		.word	.LC173
 17888 065c D8110000 		.word	.LC174
 17889 0660 F4110000 		.word	.LC175
 17890 0664 08120000 		.word	.LC176
 17891 0668 20120000 		.word	.LC177
 17892 066c 40120000 		.word	.LC178
 17893              	.L671:
2390:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS:
2391:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS\r\n");
 17894              		.loc 1 2391 0
 17895 0670 7869     		ldr	r0, [r7, #20]
 17896 0672 FFF7FEFF 		bl	strlen
 17897 0676 0346     		mov	r3, r0
 17898 0678 1A46     		mov	r2, r3
 17899 067a 7B69     		ldr	r3, [r7, #20]
 17900 067c 1344     		add	r3, r3, r2
 17901 067e AF4A     		ldr	r2, .L720
 17902 0680 1C46     		mov	r4, r3
 17903 0682 1546     		mov	r5, r2
 17904 0684 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17905 0686 2060     		str	r0, [r4]	@ unaligned
 17906 0688 6160     		str	r1, [r4, #4]	@ unaligned
 17907 068a A260     		str	r2, [r4, #8]	@ unaligned
 17908 068c E360     		str	r3, [r4, #12]	@ unaligned
 17909 068e 2868     		ldr	r0, [r5]	@ unaligned
 17910 0690 2061     		str	r0, [r4, #16]	@ unaligned
 17911 0692 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 17912 0694 AA79     		ldrb	r2, [r5, #6]
 17913 0696 A382     		strh	r3, [r4, #20]	@ unaligned
 17914 0698 1346     		mov	r3, r2
 17915 069a A375     		strb	r3, [r4, #22]
2392:..\src/command_processing.c ****                 break;
 17916              		.loc 1 2392 0
 17917 069c 3AE0     		b	.L665
 17918              	.L672:
2393:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS_ADV:
2394:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 17919              		.loc 1 2394 0
 17920 069e 7869     		ldr	r0, [r7, #20]
 17921 06a0 FFF7FEFF 		bl	strlen
 17922 06a4 0346     		mov	r3, r0
 17923 06a6 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 396


 17924 06a8 7B69     		ldr	r3, [r7, #20]
 17925 06aa 1344     		add	r3, r3, r2
 17926 06ac A44A     		ldr	r2, .L720+4
 17927 06ae 1D46     		mov	r5, r3
 17928 06b0 1446     		mov	r4, r2
 17929 06b2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17930 06b4 2860     		str	r0, [r5]	@ unaligned
 17931 06b6 6960     		str	r1, [r5, #4]	@ unaligned
 17932 06b8 AA60     		str	r2, [r5, #8]	@ unaligned
 17933 06ba EB60     		str	r3, [r5, #12]	@ unaligned
 17934 06bc 03CC     		ldmia	r4!, {r0, r1}
 17935 06be 2861     		str	r0, [r5, #16]	@ unaligned
 17936 06c0 6961     		str	r1, [r5, #20]	@ unaligned
 17937 06c2 2388     		ldrh	r3, [r4]	@ unaligned
 17938 06c4 A278     		ldrb	r2, [r4, #2]
 17939 06c6 2B83     		strh	r3, [r5, #24]	@ unaligned
 17940 06c8 1346     		mov	r3, r2
 17941 06ca AB76     		strb	r3, [r5, #26]
2395:..\src/command_processing.c ****                 break;
 17942              		.loc 1 2395 0
 17943 06cc 22E0     		b	.L665
 17944              	.L673:
2396:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL_NC:
2397:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 17945              		.loc 1 2397 0
 17946 06ce 7869     		ldr	r0, [r7, #20]
 17947 06d0 FFF7FEFF 		bl	strlen
 17948 06d4 0346     		mov	r3, r0
 17949 06d6 1A46     		mov	r2, r3
 17950 06d8 7B69     		ldr	r3, [r7, #20]
 17951 06da 1344     		add	r3, r3, r2
 17952 06dc 994A     		ldr	r2, .L720+8
 17953 06de 1546     		mov	r5, r2
 17954 06e0 9E46     		mov	lr, r3
 17955 06e2 05F1200C 		add	ip, r5, #32
 17956              	.L674:
 17957 06e6 7446     		mov	r4, lr
 17958 06e8 2E46     		mov	r6, r5
 17959 06ea 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 17960 06ec 2060     		str	r0, [r4]	@ unaligned
 17961 06ee 6160     		str	r1, [r4, #4]	@ unaligned
 17962 06f0 A260     		str	r2, [r4, #8]	@ unaligned
 17963 06f2 E360     		str	r3, [r4, #12]	@ unaligned
 17964 06f4 1035     		adds	r5, r5, #16
 17965 06f6 0EF1100E 		add	lr, lr, #16
 17966 06fa 6545     		cmp	r5, ip
 17967 06fc F3D1     		bne	.L674
 17968 06fe 7446     		mov	r4, lr
 17969 0700 2B46     		mov	r3, r5
 17970 0702 07CB     		ldmia	r3!, {r0, r1, r2}
 17971 0704 2060     		str	r0, [r4]	@ unaligned
 17972 0706 6160     		str	r1, [r4, #4]	@ unaligned
 17973 0708 A260     		str	r2, [r4, #8]	@ unaligned
 17974 070a 1A88     		ldrh	r2, [r3]	@ unaligned
 17975 070c 9B78     		ldrb	r3, [r3, #2]
 17976 070e A281     		strh	r2, [r4, #12]	@ unaligned
 17977 0710 A373     		strb	r3, [r4, #14]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 397


2398:..\src/command_processing.c ****                     break;
 17978              		.loc 1 2398 0
 17979 0712 00BF     		nop
 17980              	.L665:
2399:..\src/command_processing.c ****         }
2400:..\src/command_processing.c **** 
2401:..\src/command_processing.c ****         switch(MOT->control_mode) {
 17981              		.loc 1 2401 0
 17982 0714 D7F88430 		ldr	r3, [r7, #132]
 17983 0718 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 17984 071c 032B     		cmp	r3, #3
 17985 071e 64D8     		bhi	.L714
 17986 0720 01A2     		adr	r2, .L677
 17987 0722 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 17988 0726 00BF     		.p2align 2
 17989              	.L677:
 17990 0728 39070000 		.word	.L676+1
 17991 072c 63070000 		.word	.L678+1
 17992 0730 87070000 		.word	.L679+1
 17993 0734 AD070000 		.word	.L680+1
 17994              		.p2align 1
 17995              	.L676:
2402:..\src/command_processing.c ****             case CONTROL_ANGLE:
2403:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position\r\n");
 17996              		.loc 1 2403 0
 17997 0738 7869     		ldr	r0, [r7, #20]
 17998 073a FFF7FEFF 		bl	strlen
 17999 073e 0346     		mov	r3, r0
 18000 0740 1A46     		mov	r2, r3
 18001 0742 7B69     		ldr	r3, [r7, #20]
 18002 0744 1344     		add	r3, r3, r2
 18003 0746 804A     		ldr	r2, .L720+12
 18004 0748 1D46     		mov	r5, r3
 18005 074a 1446     		mov	r4, r2
 18006 074c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18007 074e 2860     		str	r0, [r5]	@ unaligned
 18008 0750 6960     		str	r1, [r5, #4]	@ unaligned
 18009 0752 AA60     		str	r2, [r5, #8]	@ unaligned
 18010 0754 EB60     		str	r3, [r5, #12]	@ unaligned
 18011 0756 03CC     		ldmia	r4!, {r0, r1}
 18012 0758 2861     		str	r0, [r5, #16]	@ unaligned
 18013 075a 6961     		str	r1, [r5, #20]	@ unaligned
 18014 075c 2378     		ldrb	r3, [r4]
 18015 075e 2B76     		strb	r3, [r5, #24]
2404:..\src/command_processing.c ****                 break;
 18016              		.loc 1 2404 0
 18017 0760 44E0     		b	.L681
 18018              	.L678:
2405:..\src/command_processing.c ****             case CONTROL_PWM:
2406:..\src/command_processing.c ****                 strcat(info_string, "Control mode: PWM\r\n");
 18019              		.loc 1 2406 0
 18020 0762 7869     		ldr	r0, [r7, #20]
 18021 0764 FFF7FEFF 		bl	strlen
 18022 0768 0346     		mov	r3, r0
 18023 076a 1A46     		mov	r2, r3
 18024 076c 7B69     		ldr	r3, [r7, #20]
 18025 076e 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 398


 18026 0770 764A     		ldr	r2, .L720+16
 18027 0772 1D46     		mov	r5, r3
 18028 0774 1446     		mov	r4, r2
 18029 0776 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18030 0778 2860     		str	r0, [r5]	@ unaligned
 18031 077a 6960     		str	r1, [r5, #4]	@ unaligned
 18032 077c AA60     		str	r2, [r5, #8]	@ unaligned
 18033 077e EB60     		str	r3, [r5, #12]	@ unaligned
 18034 0780 2068     		ldr	r0, [r4]	@ unaligned
 18035 0782 2861     		str	r0, [r5, #16]	@ unaligned
2407:..\src/command_processing.c ****                 break;
 18036              		.loc 1 2407 0
 18037 0784 32E0     		b	.L681
 18038              	.L679:
2408:..\src/command_processing.c ****             case CONTROL_CURRENT:
2409:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Current\r\n");
 18039              		.loc 1 2409 0
 18040 0786 7869     		ldr	r0, [r7, #20]
 18041 0788 FFF7FEFF 		bl	strlen
 18042 078c 0346     		mov	r3, r0
 18043 078e 1A46     		mov	r2, r3
 18044 0790 7B69     		ldr	r3, [r7, #20]
 18045 0792 1344     		add	r3, r3, r2
 18046 0794 6E4A     		ldr	r2, .L720+20
 18047 0796 1D46     		mov	r5, r3
 18048 0798 1446     		mov	r4, r2
 18049 079a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18050 079c 2860     		str	r0, [r5]	@ unaligned
 18051 079e 6960     		str	r1, [r5, #4]	@ unaligned
 18052 07a0 AA60     		str	r2, [r5, #8]	@ unaligned
 18053 07a2 EB60     		str	r3, [r5, #12]	@ unaligned
 18054 07a4 03CC     		ldmia	r4!, {r0, r1}
 18055 07a6 2861     		str	r0, [r5, #16]	@ unaligned
 18056 07a8 6961     		str	r1, [r5, #20]	@ unaligned
2410:..\src/command_processing.c ****                 break;
 18057              		.loc 1 2410 0
 18058 07aa 1FE0     		b	.L681
 18059              	.L680:
2411:..\src/command_processing.c ****             case CURR_AND_POS_CONTROL:
2412:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position and Current\r\n");
 18060              		.loc 1 2412 0
 18061 07ac 7869     		ldr	r0, [r7, #20]
 18062 07ae FFF7FEFF 		bl	strlen
 18063 07b2 0346     		mov	r3, r0
 18064 07b4 1A46     		mov	r2, r3
 18065 07b6 7B69     		ldr	r3, [r7, #20]
 18066 07b8 1344     		add	r3, r3, r2
 18067 07ba 664A     		ldr	r2, .L720+24
 18068 07bc 1446     		mov	r4, r2
 18069 07be 9E46     		mov	lr, r3
 18070 07c0 04F1200C 		add	ip, r4, #32
 18071              	.L682:
 18072 07c4 7546     		mov	r5, lr
 18073 07c6 2646     		mov	r6, r4
 18074 07c8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 18075 07ca 2860     		str	r0, [r5]	@ unaligned
 18076 07cc 6960     		str	r1, [r5, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 399


 18077 07ce AA60     		str	r2, [r5, #8]	@ unaligned
 18078 07d0 EB60     		str	r3, [r5, #12]	@ unaligned
 18079 07d2 1034     		adds	r4, r4, #16
 18080 07d4 0EF1100E 		add	lr, lr, #16
 18081 07d8 6445     		cmp	r4, ip
 18082 07da F3D1     		bne	.L682
 18083 07dc 7346     		mov	r3, lr
 18084 07de 2246     		mov	r2, r4
 18085 07e0 1068     		ldr	r0, [r2]	@ unaligned
 18086 07e2 1860     		str	r0, [r3]	@ unaligned
 18087 07e4 1279     		ldrb	r2, [r2, #4]
 18088 07e6 1A71     		strb	r2, [r3, #4]
2413:..\src/command_processing.c ****                 break;
 18089              		.loc 1 2413 0
 18090 07e8 00E0     		b	.L681
 18091              	.L714:
2414:..\src/command_processing.c ****             default:
2415:..\src/command_processing.c ****                 break;
 18092              		.loc 1 2415 0
 18093 07ea 00BF     		nop
 18094              	.L681:
2416:..\src/command_processing.c ****         }
2417:..\src/command_processing.c **** 
2418:..\src/command_processing.c ****         if (MEM_P->enc[ENC_L].double_encoder_on_off)
 18095              		.loc 1 2418 0
 18096 07ec 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18097 07f0 D7F88C10 		ldr	r1, [r7, #140]
 18098 07f4 1346     		mov	r3, r2
 18099 07f6 5B00     		lsls	r3, r3, #1
 18100 07f8 1344     		add	r3, r3, r2
 18101 07fa 1B01     		lsls	r3, r3, #4
 18102 07fc 0B44     		add	r3, r3, r1
 18103 07fe 03F5D873 		add	r3, r3, #432
 18104 0802 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18105 0804 002B     		cmp	r3, #0
 18106 0806 1CD0     		beq	.L683
2419:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: YES\r\n");
 18107              		.loc 1 2419 0
 18108 0808 7869     		ldr	r0, [r7, #20]
 18109 080a FFF7FEFF 		bl	strlen
 18110 080e 0346     		mov	r3, r0
 18111 0810 1A46     		mov	r2, r3
 18112 0812 7B69     		ldr	r3, [r7, #20]
 18113 0814 1344     		add	r3, r3, r2
 18114 0816 504A     		ldr	r2, .L720+28
 18115 0818 1446     		mov	r4, r2
 18116 081a 9E46     		mov	lr, r3
 18117 081c 04F1200C 		add	ip, r4, #32
 18118              	.L684:
 18119 0820 7546     		mov	r5, lr
 18120 0822 2646     		mov	r6, r4
 18121 0824 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 18122 0826 2860     		str	r0, [r5]	@ unaligned
 18123 0828 6960     		str	r1, [r5, #4]	@ unaligned
 18124 082a AA60     		str	r2, [r5, #8]	@ unaligned
 18125 082c EB60     		str	r3, [r5, #12]	@ unaligned
 18126 082e 1034     		adds	r4, r4, #16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 400


 18127 0830 0EF1100E 		add	lr, lr, #16
 18128 0834 6445     		cmp	r4, ip
 18129 0836 F3D1     		bne	.L684
 18130 0838 7346     		mov	r3, lr
 18131 083a 2246     		mov	r2, r4
 18132 083c 1278     		ldrb	r2, [r2]
 18133 083e 1A70     		strb	r2, [r3]
 18134 0840 13E0     		b	.L685
 18135              	.L683:
2420:..\src/command_processing.c ****         else
2421:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: NO\r\n");
 18136              		.loc 1 2421 0
 18137 0842 7869     		ldr	r0, [r7, #20]
 18138 0844 FFF7FEFF 		bl	strlen
 18139 0848 0346     		mov	r3, r0
 18140 084a 1A46     		mov	r2, r3
 18141 084c 7B69     		ldr	r3, [r7, #20]
 18142 084e 1344     		add	r3, r3, r2
 18143 0850 424A     		ldr	r2, .L720+32
 18144 0852 1C46     		mov	r4, r3
 18145 0854 1546     		mov	r5, r2
 18146 0856 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 18147 0858 2060     		str	r0, [r4]	@ unaligned
 18148 085a 6160     		str	r1, [r4, #4]	@ unaligned
 18149 085c A260     		str	r2, [r4, #8]	@ unaligned
 18150 085e E360     		str	r3, [r4, #12]	@ unaligned
 18151 0860 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 18152 0862 2061     		str	r0, [r4, #16]	@ unaligned
 18153 0864 6161     		str	r1, [r4, #20]	@ unaligned
 18154 0866 A261     		str	r2, [r4, #24]	@ unaligned
 18155 0868 E361     		str	r3, [r4, #28]	@ unaligned
 18156              	.L685:
2422:..\src/command_processing.c **** 
2423:..\src/command_processing.c ****         strcat(info_string, "Resolutions: ");
 18157              		.loc 1 2423 0
 18158 086a 7869     		ldr	r0, [r7, #20]
 18159 086c FFF7FEFF 		bl	strlen
 18160 0870 0346     		mov	r3, r0
 18161 0872 1A46     		mov	r2, r3
 18162 0874 7B69     		ldr	r3, [r7, #20]
 18163 0876 1344     		add	r3, r3, r2
 18164 0878 394A     		ldr	r2, .L720+36
 18165 087a 1C46     		mov	r4, r3
 18166 087c 1346     		mov	r3, r2
 18167 087e 07CB     		ldmia	r3!, {r0, r1, r2}
 18168 0880 2060     		str	r0, [r4]	@ unaligned
 18169 0882 6160     		str	r1, [r4, #4]	@ unaligned
 18170 0884 A260     		str	r2, [r4, #8]	@ unaligned
 18171 0886 1B88     		ldrh	r3, [r3]	@ unaligned
 18172 0888 A381     		strh	r3, [r4, #12]	@ unaligned
2424:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 18173              		.loc 1 2424 0
 18174 088a 0023     		movs	r3, #0
 18175 088c C7F89430 		str	r3, [r7, #148]
 18176 0890 30E0     		b	.L686
 18177              	.L688:
2425:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 401


 18178              		.loc 1 2425 0
 18179 0892 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18180 0896 D7F88C10 		ldr	r1, [r7, #140]
 18181 089a 1346     		mov	r3, r2
 18182 089c 5B00     		lsls	r3, r3, #1
 18183 089e 1344     		add	r3, r3, r2
 18184 08a0 1B01     		lsls	r3, r3, #4
 18185 08a2 CA18     		adds	r2, r1, r3
 18186 08a4 D7F89430 		ldr	r3, [r7, #148]
 18187 08a8 1344     		add	r3, r3, r2
 18188 08aa 03F29513 		addw	r3, r3, #405
 18189 08ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18190 08b0 1A46     		mov	r2, r3
 18191 08b2 07F11C03 		add	r3, r7, #28
 18192 08b6 2B49     		ldr	r1, .L720+40
 18193 08b8 1846     		mov	r0, r3
 18194 08ba FFF7FEFF 		bl	sprintf
2426:..\src/command_processing.c ****             strcat(info_string, str);
 18195              		.loc 1 2426 0
 18196 08be 07F11C03 		add	r3, r7, #28
 18197 08c2 1946     		mov	r1, r3
 18198 08c4 7869     		ldr	r0, [r7, #20]
 18199 08c6 FFF7FEFF 		bl	strcat
2427:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 18200              		.loc 1 2427 0
 18201 08ca D7F89430 		ldr	r3, [r7, #148]
 18202 08ce 022B     		cmp	r3, #2
 18203 08d0 0BD0     		beq	.L687
2428:..\src/command_processing.c ****                 strcat(info_string, ", ");
 18204              		.loc 1 2428 0
 18205 08d2 7869     		ldr	r0, [r7, #20]
 18206 08d4 FFF7FEFF 		bl	strlen
 18207 08d8 0346     		mov	r3, r0
 18208 08da 1A46     		mov	r2, r3
 18209 08dc 7B69     		ldr	r3, [r7, #20]
 18210 08de 1344     		add	r3, r3, r2
 18211 08e0 214A     		ldr	r2, .L720+44
 18212 08e2 1188     		ldrh	r1, [r2]	@ unaligned
 18213 08e4 9278     		ldrb	r2, [r2, #2]
 18214 08e6 1980     		strh	r1, [r3]	@ unaligned
 18215 08e8 9A70     		strb	r2, [r3, #2]
 18216              	.L687:
2424:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 18217              		.loc 1 2424 0 discriminator 2
 18218 08ea D7F89430 		ldr	r3, [r7, #148]
 18219 08ee 0133     		adds	r3, r3, #1
 18220 08f0 C7F89430 		str	r3, [r7, #148]
 18221              	.L686:
2424:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 18222              		.loc 1 2424 0 is_stmt 0 discriminator 1
 18223 08f4 D7F89430 		ldr	r3, [r7, #148]
 18224 08f8 022B     		cmp	r3, #2
 18225 08fa CADD     		ble	.L688
2429:..\src/command_processing.c ****             }                
2430:..\src/command_processing.c ****         }
2431:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 18226              		.loc 1 2431 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 402


 18227 08fc 7869     		ldr	r0, [r7, #20]
 18228 08fe FFF7FEFF 		bl	strlen
 18229 0902 0346     		mov	r3, r0
 18230 0904 1A46     		mov	r2, r3
 18231 0906 7B69     		ldr	r3, [r7, #20]
 18232 0908 1344     		add	r3, r3, r2
 18233 090a 184A     		ldr	r2, .L720+48
 18234 090c 1188     		ldrh	r1, [r2]	@ unaligned
 18235 090e 9278     		ldrb	r2, [r2, #2]
 18236 0910 1980     		strh	r1, [r3]	@ unaligned
 18237 0912 9A70     		strb	r2, [r3, #2]
2432:..\src/command_processing.c **** 
2433:..\src/command_processing.c ****         strcat(info_string, "Offsets: ");
 18238              		.loc 1 2433 0
 18239 0914 7869     		ldr	r0, [r7, #20]
 18240 0916 FFF7FEFF 		bl	strlen
 18241 091a 0346     		mov	r3, r0
 18242 091c 1A46     		mov	r2, r3
 18243 091e 7B69     		ldr	r3, [r7, #20]
 18244 0920 1344     		add	r3, r3, r2
 18245 0922 1349     		ldr	r1, .L720+52
 18246 0924 1A46     		mov	r2, r3
 18247 0926 0B46     		mov	r3, r1
 18248 0928 03CB     		ldmia	r3!, {r0, r1}
 18249 092a 1060     		str	r0, [r2]	@ unaligned
 18250 092c 5160     		str	r1, [r2, #4]	@ unaligned
 18251 092e 1B88     		ldrh	r3, [r3]	@ unaligned
 18252 0930 1381     		strh	r3, [r2, #8]	@ unaligned
2434:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 18253              		.loc 1 2434 0
 18254 0932 0023     		movs	r3, #0
 18255 0934 C7F89430 		str	r3, [r7, #148]
 18256 0938 5CE0     		b	.L689
 18257              	.L721:
 18258 093a 00BF     		.align	2
 18259              	.L720:
 18260 093c 5C120000 		.word	.LC179
 18261 0940 74120000 		.word	.LC180
 18262 0944 90120000 		.word	.LC181
 18263 0948 C0120000 		.word	.LC182
 18264 094c DC120000 		.word	.LC183
 18265 0950 F0120000 		.word	.LC184
 18266 0954 08130000 		.word	.LC185
 18267 0958 30130000 		.word	.LC186
 18268 095c 54130000 		.word	.LC187
 18269 0960 1C190000 		.word	.LC243
 18270 0964 BC100000 		.word	.LC161
 18271 0968 C0100000 		.word	.LC162
 18272 096c A80E0000 		.word	.LC132
 18273 0970 2C190000 		.word	.LC244
 18274              	.L691:
2435:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 18275              		.loc 1 2435 0
 18276 0974 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18277 0978 D7F88C10 		ldr	r1, [r7, #140]
 18278 097c 1346     		mov	r3, r2
 18279 097e 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 403


 18280 0980 1344     		add	r3, r3, r2
 18281 0982 9B00     		lsls	r3, r3, #2
 18282 0984 D7F89420 		ldr	r2, [r7, #148]
 18283 0988 1344     		add	r3, r3, r2
 18284 098a 6633     		adds	r3, r3, #102
 18285 098c 51F82310 		ldr	r1, [r1, r3, lsl #2]
 18286 0990 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18287 0994 D7F88C00 		ldr	r0, [r7, #140]
 18288 0998 1346     		mov	r3, r2
 18289 099a 5B00     		lsls	r3, r3, #1
 18290 099c 1344     		add	r3, r3, r2
 18291 099e 1B01     		lsls	r3, r3, #4
 18292 09a0 C218     		adds	r2, r0, r3
 18293 09a2 D7F89430 		ldr	r3, [r7, #148]
 18294 09a6 1344     		add	r3, r3, r2
 18295 09a8 03F29513 		addw	r3, r3, #405
 18296 09ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18297 09ae 41FA03F2 		asr	r2, r1, r3
 18298 09b2 07F11C03 		add	r3, r7, #28
 18299 09b6 CC49     		ldr	r1, .L722
 18300 09b8 1846     		mov	r0, r3
 18301 09ba FFF7FEFF 		bl	sprintf
2436:..\src/command_processing.c ****             strcat(info_string, str);
 18302              		.loc 1 2436 0
 18303 09be 07F11C03 		add	r3, r7, #28
 18304 09c2 1946     		mov	r1, r3
 18305 09c4 7869     		ldr	r0, [r7, #20]
 18306 09c6 FFF7FEFF 		bl	strcat
2437:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 18307              		.loc 1 2437 0
 18308 09ca D7F89430 		ldr	r3, [r7, #148]
 18309 09ce 022B     		cmp	r3, #2
 18310 09d0 0BD0     		beq	.L690
2438:..\src/command_processing.c ****                 strcat(info_string, ", ");
 18311              		.loc 1 2438 0
 18312 09d2 7869     		ldr	r0, [r7, #20]
 18313 09d4 FFF7FEFF 		bl	strlen
 18314 09d8 0346     		mov	r3, r0
 18315 09da 1A46     		mov	r2, r3
 18316 09dc 7B69     		ldr	r3, [r7, #20]
 18317 09de 1344     		add	r3, r3, r2
 18318 09e0 C24A     		ldr	r2, .L722+4
 18319 09e2 1188     		ldrh	r1, [r2]	@ unaligned
 18320 09e4 9278     		ldrb	r2, [r2, #2]
 18321 09e6 1980     		strh	r1, [r3]	@ unaligned
 18322 09e8 9A70     		strb	r2, [r3, #2]
 18323              	.L690:
2434:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 18324              		.loc 1 2434 0 discriminator 2
 18325 09ea D7F89430 		ldr	r3, [r7, #148]
 18326 09ee 0133     		adds	r3, r3, #1
 18327 09f0 C7F89430 		str	r3, [r7, #148]
 18328              	.L689:
2434:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 18329              		.loc 1 2434 0 is_stmt 0 discriminator 1
 18330 09f4 D7F89430 		ldr	r3, [r7, #148]
 18331 09f8 022B     		cmp	r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 404


 18332 09fa BBDD     		ble	.L691
2439:..\src/command_processing.c ****             }
2440:..\src/command_processing.c ****         }
2441:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 18333              		.loc 1 2441 0 is_stmt 1
 18334 09fc 7869     		ldr	r0, [r7, #20]
 18335 09fe FFF7FEFF 		bl	strlen
 18336 0a02 0346     		mov	r3, r0
 18337 0a04 1A46     		mov	r2, r3
 18338 0a06 7B69     		ldr	r3, [r7, #20]
 18339 0a08 1344     		add	r3, r3, r2
 18340 0a0a B94A     		ldr	r2, .L722+8
 18341 0a0c 1188     		ldrh	r1, [r2]	@ unaligned
 18342 0a0e 9278     		ldrb	r2, [r2, #2]
 18343 0a10 1980     		strh	r1, [r3]	@ unaligned
 18344 0a12 9A70     		strb	r2, [r3, #2]
2442:..\src/command_processing.c ****             
2443:..\src/command_processing.c ****         strcat(info_string, "Multipliers: ");
 18345              		.loc 1 2443 0
 18346 0a14 7869     		ldr	r0, [r7, #20]
 18347 0a16 FFF7FEFF 		bl	strlen
 18348 0a1a 0346     		mov	r3, r0
 18349 0a1c 1A46     		mov	r2, r3
 18350 0a1e 7B69     		ldr	r3, [r7, #20]
 18351 0a20 1344     		add	r3, r3, r2
 18352 0a22 B44A     		ldr	r2, .L722+12
 18353 0a24 1C46     		mov	r4, r3
 18354 0a26 1346     		mov	r3, r2
 18355 0a28 07CB     		ldmia	r3!, {r0, r1, r2}
 18356 0a2a 2060     		str	r0, [r4]	@ unaligned
 18357 0a2c 6160     		str	r1, [r4, #4]	@ unaligned
 18358 0a2e A260     		str	r2, [r4, #8]	@ unaligned
 18359 0a30 1B88     		ldrh	r3, [r3]	@ unaligned
 18360 0a32 A381     		strh	r3, [r4, #12]	@ unaligned
2444:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 18361              		.loc 1 2444 0
 18362 0a34 0023     		movs	r3, #0
 18363 0a36 C7F89430 		str	r3, [r7, #148]
 18364 0a3a 35E0     		b	.L692
 18365              	.L694:
2445:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 18366              		.loc 1 2445 0
 18367 0a3c 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18368 0a40 D7F88C10 		ldr	r1, [r7, #140]
 18369 0a44 1346     		mov	r3, r2
 18370 0a46 5B00     		lsls	r3, r3, #1
 18371 0a48 1344     		add	r3, r3, r2
 18372 0a4a 9B00     		lsls	r3, r3, #2
 18373 0a4c D7F89420 		ldr	r2, [r7, #148]
 18374 0a50 1344     		add	r3, r3, r2
 18375 0a52 6833     		adds	r3, r3, #104
 18376 0a54 9B00     		lsls	r3, r3, #2
 18377 0a56 0B44     		add	r3, r3, r1
 18378 0a58 5B68     		ldr	r3, [r3, #4]	@ float
 18379 0a5a 1846     		mov	r0, r3
 18380 0a5c FFF7FEFF 		bl	__aeabi_f2d
 18381 0a60 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 405


 18382 0a62 0C46     		mov	r4, r1
 18383 0a64 07F11C00 		add	r0, r7, #28
 18384 0a68 1A46     		mov	r2, r3
 18385 0a6a 2346     		mov	r3, r4
 18386 0a6c A249     		ldr	r1, .L722+16
 18387 0a6e FFF7FEFF 		bl	sprintf
2446:..\src/command_processing.c ****             strcat(info_string, str);
 18388              		.loc 1 2446 0
 18389 0a72 07F11C03 		add	r3, r7, #28
 18390 0a76 1946     		mov	r1, r3
 18391 0a78 7869     		ldr	r0, [r7, #20]
 18392 0a7a FFF7FEFF 		bl	strcat
2447:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 18393              		.loc 1 2447 0
 18394 0a7e D7F89430 		ldr	r3, [r7, #148]
 18395 0a82 022B     		cmp	r3, #2
 18396 0a84 0BD0     		beq	.L693
2448:..\src/command_processing.c ****                 strcat(info_string, ", ");
 18397              		.loc 1 2448 0
 18398 0a86 7869     		ldr	r0, [r7, #20]
 18399 0a88 FFF7FEFF 		bl	strlen
 18400 0a8c 0346     		mov	r3, r0
 18401 0a8e 1A46     		mov	r2, r3
 18402 0a90 7B69     		ldr	r3, [r7, #20]
 18403 0a92 1344     		add	r3, r3, r2
 18404 0a94 954A     		ldr	r2, .L722+4
 18405 0a96 1188     		ldrh	r1, [r2]	@ unaligned
 18406 0a98 9278     		ldrb	r2, [r2, #2]
 18407 0a9a 1980     		strh	r1, [r3]	@ unaligned
 18408 0a9c 9A70     		strb	r2, [r3, #2]
 18409              	.L693:
2444:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 18410              		.loc 1 2444 0 discriminator 2
 18411 0a9e D7F89430 		ldr	r3, [r7, #148]
 18412 0aa2 0133     		adds	r3, r3, #1
 18413 0aa4 C7F89430 		str	r3, [r7, #148]
 18414              	.L692:
2444:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 18415              		.loc 1 2444 0 is_stmt 0 discriminator 1
 18416 0aa8 D7F89430 		ldr	r3, [r7, #148]
 18417 0aac 022B     		cmp	r3, #2
 18418 0aae C5DD     		ble	.L694
2449:..\src/command_processing.c ****             }
2450:..\src/command_processing.c ****         }
2451:..\src/command_processing.c ****         strcat(info_string, "\r\n");       
 18419              		.loc 1 2451 0 is_stmt 1
 18420 0ab0 7869     		ldr	r0, [r7, #20]
 18421 0ab2 FFF7FEFF 		bl	strlen
 18422 0ab6 0346     		mov	r3, r0
 18423 0ab8 1A46     		mov	r2, r3
 18424 0aba 7B69     		ldr	r3, [r7, #20]
 18425 0abc 1344     		add	r3, r3, r2
 18426 0abe 8C4A     		ldr	r2, .L722+8
 18427 0ac0 1188     		ldrh	r1, [r2]	@ unaligned
 18428 0ac2 9278     		ldrb	r2, [r2, #2]
 18429 0ac4 1980     		strh	r1, [r3]	@ unaligned
 18430 0ac6 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 406


2452:..\src/command_processing.c **** 
2453:..\src/command_processing.c **** 		sprintf(str, "Current lookup table p[0] - p[5]: %f, %f, %f, %f, %f, %f\r\n", MOT->curr_lookup[0],
 18431              		.loc 1 2453 0
 18432 0ac8 D7F88430 		ldr	r3, [r7, #132]
 18433 0acc 5B6C     		ldr	r3, [r3, #68]	@ float
 18434 0ace 1846     		mov	r0, r3
 18435 0ad0 FFF7FEFF 		bl	__aeabi_f2d
 18436 0ad4 C7E90201 		strd	r0, [r7, #8]
 18437 0ad8 D7F88430 		ldr	r3, [r7, #132]
 18438 0adc 9B6C     		ldr	r3, [r3, #72]	@ float
 18439 0ade 1846     		mov	r0, r3
 18440 0ae0 FFF7FEFF 		bl	__aeabi_f2d
 18441 0ae4 0446     		mov	r4, r0
 18442 0ae6 0D46     		mov	r5, r1
 18443 0ae8 D7F88430 		ldr	r3, [r7, #132]
 18444 0aec DB6C     		ldr	r3, [r3, #76]	@ float
 18445 0aee 1846     		mov	r0, r3
 18446 0af0 FFF7FEFF 		bl	__aeabi_f2d
 18447 0af4 8046     		mov	r8, r0
 18448 0af6 8946     		mov	r9, r1
 18449 0af8 D7F88430 		ldr	r3, [r7, #132]
 18450 0afc 1B6D     		ldr	r3, [r3, #80]	@ float
 18451 0afe 1846     		mov	r0, r3
 18452 0b00 FFF7FEFF 		bl	__aeabi_f2d
 18453 0b04 8246     		mov	r10, r0
 18454 0b06 8B46     		mov	fp, r1
 18455 0b08 D7F88430 		ldr	r3, [r7, #132]
 18456 0b0c 5B6D     		ldr	r3, [r3, #84]	@ float
 18457 0b0e 1846     		mov	r0, r3
 18458 0b10 FFF7FEFF 		bl	__aeabi_f2d
 18459 0b14 C7E90001 		strd	r0, [r7]
 18460 0b18 D7F88430 		ldr	r3, [r7, #132]
 18461 0b1c 9B6D     		ldr	r3, [r3, #88]	@ float
 18462 0b1e 1846     		mov	r0, r3
 18463 0b20 FFF7FEFF 		bl	__aeabi_f2d
 18464 0b24 0246     		mov	r2, r0
 18465 0b26 0B46     		mov	r3, r1
 18466 0b28 07F11C00 		add	r0, r7, #28
 18467 0b2c CDE90823 		strd	r2, [sp, #32]
 18468 0b30 D7E90012 		ldrd	r1, [r7]
 18469 0b34 CDE90612 		strd	r1, [sp, #24]
 18470 0b38 CDE904AB 		strd	r10, [sp, #16]
 18471 0b3c CDE90289 		strd	r8, [sp, #8]
 18472 0b40 CDE90045 		strd	r4, [sp]
 18473 0b44 D7E90223 		ldrd	r2, [r7, #8]
 18474 0b48 6C49     		ldr	r1, .L722+20
 18475 0b4a FFF7FEFF 		bl	sprintf
2454:..\src/command_processing.c **** 		strcat(info_string, str);
 18476              		.loc 1 2454 0
 18477 0b4e 07F11C03 		add	r3, r7, #28
 18478 0b52 1946     		mov	r1, r3
 18479 0b54 7869     		ldr	r0, [r7, #20]
 18480 0b56 FFF7FEFF 		bl	strcat
2455:..\src/command_processing.c **** 
2456:..\src/command_processing.c **** 		sprintf(str, "Position limit active: %d\r\n", (int)MOT->pos_lim_flag);
 18481              		.loc 1 2456 0
 18482 0b5a D7F88430 		ldr	r3, [r7, #132]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 407


 18483 0b5e 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 18484 0b62 1A46     		mov	r2, r3
 18485 0b64 07F11C03 		add	r3, r7, #28
 18486 0b68 6549     		ldr	r1, .L722+24
 18487 0b6a 1846     		mov	r0, r3
 18488 0b6c FFF7FEFF 		bl	sprintf
2457:..\src/command_processing.c **** 		strcat(info_string, str);
 18489              		.loc 1 2457 0
 18490 0b70 07F11C03 		add	r3, r7, #28
 18491 0b74 1946     		mov	r1, r3
 18492 0b76 7869     		ldr	r0, [r7, #20]
 18493 0b78 FFF7FEFF 		bl	strcat
2458:..\src/command_processing.c **** 
2459:..\src/command_processing.c **** 		sprintf(str, "Position limits: inf -> %ld, sup -> %ld\r\n", (int32)MOT->pos_lim_inf >> MEM_P->enc
 18494              		.loc 1 2459 0
 18495 0b7c D7F88430 		ldr	r3, [r7, #132]
 18496 0b80 596B     		ldr	r1, [r3, #52]
 18497 0b82 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18498 0b86 D7F88C00 		ldr	r0, [r7, #140]
 18499 0b8a 1346     		mov	r3, r2
 18500 0b8c 5B00     		lsls	r3, r3, #1
 18501 0b8e 1344     		add	r3, r3, r2
 18502 0b90 1B01     		lsls	r3, r3, #4
 18503 0b92 0344     		add	r3, r3, r0
 18504 0b94 03F29513 		addw	r3, r3, #405
 18505 0b98 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18506 0b9a 41FA03F4 		asr	r4, r1, r3
 18507 0b9e D7F88430 		ldr	r3, [r7, #132]
 18508 0ba2 996B     		ldr	r1, [r3, #56]
 18509 0ba4 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18510 0ba8 D7F88C00 		ldr	r0, [r7, #140]
 18511 0bac 1346     		mov	r3, r2
 18512 0bae 5B00     		lsls	r3, r3, #1
 18513 0bb0 1344     		add	r3, r3, r2
 18514 0bb2 1B01     		lsls	r3, r3, #4
 18515 0bb4 0344     		add	r3, r3, r0
 18516 0bb6 03F29513 		addw	r3, r3, #405
 18517 0bba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18518 0bbc 41FA03F3 		asr	r3, r1, r3
 18519 0bc0 07F11C00 		add	r0, r7, #28
 18520 0bc4 2246     		mov	r2, r4
 18521 0bc6 4F49     		ldr	r1, .L722+28
 18522 0bc8 FFF7FEFF 		bl	sprintf
2460:..\src/command_processing.c **** 		strcat(info_string, str);
 18523              		.loc 1 2460 0
 18524 0bcc 07F11C03 		add	r3, r7, #28
 18525 0bd0 1946     		mov	r1, r3
 18526 0bd2 7869     		ldr	r0, [r7, #20]
 18527 0bd4 FFF7FEFF 		bl	strcat
2461:..\src/command_processing.c **** 
2462:..\src/command_processing.c **** 		sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 18528              		.loc 1 2462 0
 18529 0bd8 D7F88430 		ldr	r3, [r7, #132]
 18530 0bdc B3F95C30 		ldrsh	r3, [r3, #92]
 18531 0be0 1A46     		mov	r2, r3
 18532 0be2 07F11C03 		add	r3, r7, #28
 18533 0be6 4849     		ldr	r1, .L722+32
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 408


 18534 0be8 1846     		mov	r0, r3
 18535 0bea FFF7FEFF 		bl	sprintf
2463:..\src/command_processing.c **** 		strcat(info_string, str);
 18536              		.loc 1 2463 0
 18537 0bee 07F11C03 		add	r3, r7, #28
 18538 0bf2 1946     		mov	r1, r3
 18539 0bf4 7869     		ldr	r0, [r7, #20]
 18540 0bf6 FFF7FEFF 		bl	strcat
2464:..\src/command_processing.c **** 
2465:..\src/command_processing.c **** 		if ((MOT->input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 18541              		.loc 1 2465 0
 18542 0bfa D7F88430 		ldr	r3, [r7, #132]
 18543 0bfe 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 18544 0c02 022B     		cmp	r3, #2
 18545 0c04 12D0     		beq	.L695
2466:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 18546              		.loc 1 2466 0 discriminator 1
 18547 0c06 D7F88430 		ldr	r3, [r7, #132]
 18548 0c0a 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2465:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 18549              		.loc 1 2465 0 discriminator 1
 18550 0c0e 032B     		cmp	r3, #3
 18551 0c10 0CD0     		beq	.L695
2467:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 18552              		.loc 1 2467 0
 18553 0c12 D7F88430 		ldr	r3, [r7, #132]
 18554 0c16 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2466:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 18555              		.loc 1 2466 0
 18556 0c1a 042B     		cmp	r3, #4
 18557 0c1c 06D0     		beq	.L695
2468:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS_ADV)) {
 18558              		.loc 1 2468 0
 18559 0c1e D7F88430 		ldr	r3, [r7, #132]
 18560 0c22 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2467:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 18561              		.loc 1 2467 0
 18562 0c26 052B     		cmp	r3, #5
 18563 0c28 40F0A780 		bne	.L696
 18564              	.L695:
2469:..\src/command_processing.c **** 			sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.emg_th
 18565              		.loc 1 2469 0
 18566 0c2c D7F88C30 		ldr	r3, [r7, #140]
 18567 0c30 B3F8F031 		ldrh	r3, [r3, #496]
 18568 0c34 1A46     		mov	r2, r3
 18569 0c36 D7F88C30 		ldr	r3, [r7, #140]
 18570 0c3a B3F8F231 		ldrh	r3, [r3, #498]
 18571 0c3e 07F11C00 		add	r0, r7, #28
 18572 0c42 3249     		ldr	r1, .L722+36
 18573 0c44 FFF7FEFF 		bl	sprintf
2470:..\src/command_processing.c **** 			strcat(info_string, str);
 18574              		.loc 1 2470 0
 18575 0c48 07F11C03 		add	r3, r7, #28
 18576 0c4c 1946     		mov	r1, r3
 18577 0c4e 7869     		ldr	r0, [r7, #20]
 18578 0c50 FFF7FEFF 		bl	strcat
2471:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 409


 18579              		.loc 1 2471 0
 18580 0c54 7869     		ldr	r0, [r7, #20]
 18581 0c56 FFF7FEFF 		bl	strlen
 18582 0c5a 0346     		mov	r3, r0
 18583 0c5c 1A46     		mov	r2, r3
 18584 0c5e 7B69     		ldr	r3, [r7, #20]
 18585 0c60 1344     		add	r3, r3, r2
 18586 0c62 234A     		ldr	r2, .L722+8
 18587 0c64 1188     		ldrh	r1, [r2]	@ unaligned
 18588 0c66 9278     		ldrb	r2, [r2, #2]
 18589 0c68 1980     		strh	r1, [r3]	@ unaligned
 18590 0c6a 9A70     		strb	r2, [r3, #2]
2472:..\src/command_processing.c **** 
2473:..\src/command_processing.c **** 			sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg.emg_
 18591              		.loc 1 2473 0
 18592 0c6c D7F88C30 		ldr	r3, [r7, #140]
 18593 0c70 D3F8F421 		ldr	r2, [r3, #500]
 18594 0c74 D7F88C30 		ldr	r3, [r7, #140]
 18595 0c78 D3F8F831 		ldr	r3, [r3, #504]
 18596 0c7c 07F11C00 		add	r0, r7, #28
 18597 0c80 2349     		ldr	r1, .L722+40
 18598 0c82 FFF7FEFF 		bl	sprintf
2474:..\src/command_processing.c **** 			strcat(info_string, str);
 18599              		.loc 1 2474 0
 18600 0c86 07F11C03 		add	r3, r7, #28
 18601 0c8a 1946     		mov	r1, r3
 18602 0c8c 7869     		ldr	r0, [r7, #20]
 18603 0c8e FFF7FEFF 		bl	strcat
2475:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 18604              		.loc 1 2475 0
 18605 0c92 7869     		ldr	r0, [r7, #20]
 18606 0c94 FFF7FEFF 		bl	strlen
 18607 0c98 0346     		mov	r3, r0
 18608 0c9a 1A46     		mov	r2, r3
 18609 0c9c 7B69     		ldr	r3, [r7, #20]
 18610 0c9e 1344     		add	r3, r3, r2
 18611 0ca0 134A     		ldr	r2, .L722+8
 18612 0ca2 1188     		ldrh	r1, [r2]	@ unaligned
 18613 0ca4 9278     		ldrb	r2, [r2, #2]
 18614 0ca6 1980     		strh	r1, [r3]	@ unaligned
 18615 0ca8 9A70     		strb	r2, [r3, #2]
2476:..\src/command_processing.c **** 
2477:..\src/command_processing.c **** 			if (MEM_P->emg.emg_calibration_flag)
 18616              		.loc 1 2477 0
 18617 0caa D7F88C30 		ldr	r3, [r7, #140]
 18618 0cae 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 18619 0cb2 002B     		cmp	r3, #0
 18620 0cb4 30D0     		beq	.L697
2478:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: YES\r\n");
 18621              		.loc 1 2478 0
 18622 0cb6 7869     		ldr	r0, [r7, #20]
 18623 0cb8 FFF7FEFF 		bl	strlen
 18624 0cbc 0346     		mov	r3, r0
 18625 0cbe 1A46     		mov	r2, r3
 18626 0cc0 7B69     		ldr	r3, [r7, #20]
 18627 0cc2 1344     		add	r3, r3, r2
 18628 0cc4 134A     		ldr	r2, .L722+44
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 410


 18629 0cc6 1D46     		mov	r5, r3
 18630 0cc8 1446     		mov	r4, r2
 18631 0cca 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18632 0ccc 2860     		str	r0, [r5]	@ unaligned
 18633 0cce 6960     		str	r1, [r5, #4]	@ unaligned
 18634 0cd0 AA60     		str	r2, [r5, #8]	@ unaligned
 18635 0cd2 EB60     		str	r3, [r5, #12]	@ unaligned
 18636 0cd4 03CC     		ldmia	r4!, {r0, r1}
 18637 0cd6 2861     		str	r0, [r5, #16]	@ unaligned
 18638 0cd8 6961     		str	r1, [r5, #20]	@ unaligned
 18639 0cda 2388     		ldrh	r3, [r4]	@ unaligned
 18640 0cdc A278     		ldrb	r2, [r4, #2]
 18641 0cde 2B83     		strh	r3, [r5, #24]	@ unaligned
 18642 0ce0 1346     		mov	r3, r2
 18643 0ce2 AB76     		strb	r3, [r5, #26]
 18644 0ce4 2CE0     		b	.L698
 18645              	.L723:
 18646 0ce6 00BF     		.align	2
 18647              	.L722:
 18648 0ce8 BC130000 		.word	.LC191
 18649 0cec C0100000 		.word	.LC162
 18650 0cf0 A80E0000 		.word	.LC132
 18651 0cf4 38190000 		.word	.LC245
 18652 0cf8 DC130000 		.word	.LC193
 18653 0cfc 48190000 		.word	.LC246
 18654 0d00 84190000 		.word	.LC247
 18655 0d04 A0190000 		.word	.LC248
 18656 0d08 7C140000 		.word	.LC199
 18657 0d0c A4140000 		.word	.LC201
 18658 0d10 C8140000 		.word	.LC202
 18659 0d14 18150000 		.word	.LC205
 18660              	.L697:
2479:..\src/command_processing.c **** 			else
2480:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: NO\r\n");
 18661              		.loc 1 2480 0
 18662 0d18 7869     		ldr	r0, [r7, #20]
 18663 0d1a FFF7FEFF 		bl	strlen
 18664 0d1e 0346     		mov	r3, r0
 18665 0d20 1A46     		mov	r2, r3
 18666 0d22 7B69     		ldr	r3, [r7, #20]
 18667 0d24 1344     		add	r3, r3, r2
 18668 0d26 CF4A     		ldr	r2, .L724
 18669 0d28 1D46     		mov	r5, r3
 18670 0d2a 1446     		mov	r4, r2
 18671 0d2c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18672 0d2e 2860     		str	r0, [r5]	@ unaligned
 18673 0d30 6960     		str	r1, [r5, #4]	@ unaligned
 18674 0d32 AA60     		str	r2, [r5, #8]	@ unaligned
 18675 0d34 EB60     		str	r3, [r5, #12]	@ unaligned
 18676 0d36 03CC     		ldmia	r4!, {r0, r1}
 18677 0d38 2861     		str	r0, [r5, #16]	@ unaligned
 18678 0d3a 6961     		str	r1, [r5, #20]	@ unaligned
 18679 0d3c 2388     		ldrh	r3, [r4]	@ unaligned
 18680 0d3e 2B83     		strh	r3, [r5, #24]	@ unaligned
 18681              	.L698:
2481:..\src/command_processing.c **** 
2482:..\src/command_processing.c **** 			sprintf(str, "EMG max speed: %d", (int)MEM_P->emg.emg_speed);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 411


 18682              		.loc 1 2482 0
 18683 0d40 D7F88C30 		ldr	r3, [r7, #140]
 18684 0d44 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 18685 0d48 1A46     		mov	r2, r3
 18686 0d4a 07F11C03 		add	r3, r7, #28
 18687 0d4e C649     		ldr	r1, .L724+4
 18688 0d50 1846     		mov	r0, r3
 18689 0d52 FFF7FEFF 		bl	sprintf
2483:..\src/command_processing.c **** 			strcat(info_string, str);
 18690              		.loc 1 2483 0
 18691 0d56 07F11C03 		add	r3, r7, #28
 18692 0d5a 1946     		mov	r1, r3
 18693 0d5c 7869     		ldr	r0, [r7, #20]
 18694 0d5e FFF7FEFF 		bl	strcat
2484:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 18695              		.loc 1 2484 0
 18696 0d62 7869     		ldr	r0, [r7, #20]
 18697 0d64 FFF7FEFF 		bl	strlen
 18698 0d68 0346     		mov	r3, r0
 18699 0d6a 1A46     		mov	r2, r3
 18700 0d6c 7B69     		ldr	r3, [r7, #20]
 18701 0d6e 1344     		add	r3, r3, r2
 18702 0d70 BE4A     		ldr	r2, .L724+8
 18703 0d72 1188     		ldrh	r1, [r2]	@ unaligned
 18704 0d74 9278     		ldrb	r2, [r2, #2]
 18705 0d76 1980     		strh	r1, [r3]	@ unaligned
 18706 0d78 9A70     		strb	r2, [r3, #2]
 18707              	.L696:
 18708              	.LBE20:
2318:..\src/command_processing.c ****             
 18709              		.loc 1 2318 0 discriminator 2
 18710 0d7a 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 18711 0d7e 0133     		adds	r3, r3, #1
 18712 0d80 87F89330 		strb	r3, [r7, #147]
 18713              	.L656:
2318:..\src/command_processing.c ****             
 18714              		.loc 1 2318 0 is_stmt 0 discriminator 1
 18715 0d84 D7F88C30 		ldr	r3, [r7, #140]
 18716 0d88 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 18717 0d8c 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 18718 0d90 9A42     		cmp	r2, r3
 18719 0d92 7FF6BEA9 		bls	.L699
 18720              	.LBE19:
2485:..\src/command_processing.c **** 		}
2486:..\src/command_processing.c **** 	}
2487:..\src/command_processing.c **** 	 
2488:..\src/command_processing.c ****     if (MEM_P->SH.rest_position_flag) {
 18721              		.loc 1 2488 0 is_stmt 1
 18722 0d96 D7F88C30 		ldr	r3, [r7, #140]
 18723 0d9a 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 18724 0d9e 002B     		cmp	r3, #0
 18725 0da0 63D0     		beq	.L700
2489:..\src/command_processing.c **** 		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 18726              		.loc 1 2489 0
 18727 0da2 D7F88C30 		ldr	r3, [r7, #140]
 18728 0da6 D3F8A422 		ldr	r2, [r3, #676]
 18729 0daa 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 412


 18730 0dae B049     		ldr	r1, .L724+12
 18731 0db0 1846     		mov	r0, r3
 18732 0db2 FFF7FEFF 		bl	sprintf
2490:..\src/command_processing.c ****         strcat(info_string, str);
 18733              		.loc 1 2490 0
 18734 0db6 07F11C03 		add	r3, r7, #28
 18735 0dba 1946     		mov	r1, r3
 18736 0dbc 7869     		ldr	r0, [r7, #20]
 18737 0dbe FFF7FEFF 		bl	strcat
2491:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 18738              		.loc 1 2491 0
 18739 0dc2 7869     		ldr	r0, [r7, #20]
 18740 0dc4 FFF7FEFF 		bl	strlen
 18741 0dc8 0346     		mov	r3, r0
 18742 0dca 1A46     		mov	r2, r3
 18743 0dcc 7B69     		ldr	r3, [r7, #20]
 18744 0dce 1344     		add	r3, r3, r2
 18745 0dd0 A64A     		ldr	r2, .L724+8
 18746 0dd2 1188     		ldrh	r1, [r2]	@ unaligned
 18747 0dd4 9278     		ldrb	r2, [r2, #2]
 18748 0dd6 1980     		strh	r1, [r3]	@ unaligned
 18749 0dd8 9A70     		strb	r2, [r3, #2]
2492:..\src/command_processing.c ****         
2493:..\src/command_processing.c ****         sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 18750              		.loc 1 2493 0
 18751 0dda D7F88C30 		ldr	r3, [r7, #140]
 18752 0dde D3F8A822 		ldr	r2, [r3, #680]
 18753 0de2 07F11C03 		add	r3, r7, #28
 18754 0de6 A349     		ldr	r1, .L724+16
 18755 0de8 1846     		mov	r0, r3
 18756 0dea FFF7FEFF 		bl	sprintf
2494:..\src/command_processing.c ****         strcat(info_string, str);
 18757              		.loc 1 2494 0
 18758 0dee 07F11C03 		add	r3, r7, #28
 18759 0df2 1946     		mov	r1, r3
 18760 0df4 7869     		ldr	r0, [r7, #20]
 18761 0df6 FFF7FEFF 		bl	strcat
2495:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 18762              		.loc 1 2495 0
 18763 0dfa 7869     		ldr	r0, [r7, #20]
 18764 0dfc FFF7FEFF 		bl	strlen
 18765 0e00 0346     		mov	r3, r0
 18766 0e02 1A46     		mov	r2, r3
 18767 0e04 7B69     		ldr	r3, [r7, #20]
 18768 0e06 1344     		add	r3, r3, r2
 18769 0e08 984A     		ldr	r2, .L724+8
 18770 0e0a 1188     		ldrh	r1, [r2]	@ unaligned
 18771 0e0c 9278     		ldrb	r2, [r2, #2]
 18772 0e0e 1980     		strh	r1, [r3]	@ unaligned
 18773 0e10 9A70     		strb	r2, [r3, #2]
2496:..\src/command_processing.c ****         
2497:..\src/command_processing.c ****         sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0].en
 18774              		.loc 1 2497 0
 18775 0e12 D7F88C30 		ldr	r3, [r7, #140]
 18776 0e16 D3F8A022 		ldr	r2, [r3, #672]
 18777 0e1a D7F88C30 		ldr	r3, [r7, #140]
 18778 0e1e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 413


 18779 0e22 1846     		mov	r0, r3
 18780 0e24 D7F88C10 		ldr	r1, [r7, #140]
 18781 0e28 0346     		mov	r3, r0
 18782 0e2a 5B00     		lsls	r3, r3, #1
 18783 0e2c 0344     		add	r3, r3, r0
 18784 0e2e 1B01     		lsls	r3, r3, #4
 18785 0e30 0B44     		add	r3, r3, r1
 18786 0e32 03F29513 		addw	r3, r3, #405
 18787 0e36 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18788 0e38 1A41     		asrs	r2, r2, r3
 18789 0e3a 07F11C03 		add	r3, r7, #28
 18790 0e3e 8E49     		ldr	r1, .L724+20
 18791 0e40 1846     		mov	r0, r3
 18792 0e42 FFF7FEFF 		bl	sprintf
2498:..\src/command_processing.c ****         strcat(info_string, str);
 18793              		.loc 1 2498 0
 18794 0e46 07F11C03 		add	r3, r7, #28
 18795 0e4a 1946     		mov	r1, r3
 18796 0e4c 7869     		ldr	r0, [r7, #20]
 18797 0e4e FFF7FEFF 		bl	strcat
2499:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 18798              		.loc 1 2499 0
 18799 0e52 7869     		ldr	r0, [r7, #20]
 18800 0e54 FFF7FEFF 		bl	strlen
 18801 0e58 0346     		mov	r3, r0
 18802 0e5a 1A46     		mov	r2, r3
 18803 0e5c 7B69     		ldr	r3, [r7, #20]
 18804 0e5e 1344     		add	r3, r3, r2
 18805 0e60 824A     		ldr	r2, .L724+8
 18806 0e62 1188     		ldrh	r1, [r2]	@ unaligned
 18807 0e64 9278     		ldrb	r2, [r2, #2]
 18808 0e66 1980     		strh	r1, [r3]	@ unaligned
 18809 0e68 9A70     		strb	r2, [r3, #2]
 18810              	.L700:
2500:..\src/command_processing.c ****     }
2501:..\src/command_processing.c **** 	
2502:..\src/command_processing.c **** 	if (MEM_P->imu.read_imu_flag) {
 18811              		.loc 1 2502 0
 18812 0e6a D7F88C30 		ldr	r3, [r7, #140]
 18813 0e6e 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 18814 0e72 002B     		cmp	r3, #0
 18815 0e74 00F0CC81 		beq	.L715
2503:..\src/command_processing.c **** 		sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 18816              		.loc 1 2503 0
 18817 0e78 804B     		ldr	r3, .L724+24
 18818 0e7a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18819 0e7c 1A46     		mov	r2, r3
 18820 0e7e 07F11C03 		add	r3, r7, #28
 18821 0e82 7F49     		ldr	r1, .L724+28
 18822 0e84 1846     		mov	r0, r3
 18823 0e86 FFF7FEFF 		bl	sprintf
2504:..\src/command_processing.c **** 		strcat(info_string, str);
 18824              		.loc 1 2504 0
 18825 0e8a 07F11C03 		add	r3, r7, #28
 18826 0e8e 1946     		mov	r1, r3
 18827 0e90 7869     		ldr	r0, [r7, #20]
 18828 0e92 FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 414


2505:..\src/command_processing.c **** 		
2506:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 18829              		.loc 1 2506 0
 18830 0e96 7869     		ldr	r0, [r7, #20]
 18831 0e98 FFF7FEFF 		bl	strlen
 18832 0e9c 0346     		mov	r3, r0
 18833 0e9e 1A46     		mov	r2, r3
 18834 0ea0 7B69     		ldr	r3, [r7, #20]
 18835 0ea2 1344     		add	r3, r3, r2
 18836 0ea4 714A     		ldr	r2, .L724+8
 18837 0ea6 1188     		ldrh	r1, [r2]	@ unaligned
 18838 0ea8 9278     		ldrb	r2, [r2, #2]
 18839 0eaa 1980     		strh	r1, [r3]	@ unaligned
 18840 0eac 9A70     		strb	r2, [r3, #2]
2507:..\src/command_processing.c **** 		
2508:..\src/command_processing.c **** 		strcat(info_string, "IMUs CONFIGURATION\r\n");
 18841              		.loc 1 2508 0
 18842 0eae 7869     		ldr	r0, [r7, #20]
 18843 0eb0 FFF7FEFF 		bl	strlen
 18844 0eb4 0346     		mov	r3, r0
 18845 0eb6 1A46     		mov	r2, r3
 18846 0eb8 7B69     		ldr	r3, [r7, #20]
 18847 0eba 1344     		add	r3, r3, r2
 18848 0ebc 714A     		ldr	r2, .L724+32
 18849 0ebe 1D46     		mov	r5, r3
 18850 0ec0 1446     		mov	r4, r2
 18851 0ec2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18852 0ec4 2860     		str	r0, [r5]	@ unaligned
 18853 0ec6 6960     		str	r1, [r5, #4]	@ unaligned
 18854 0ec8 AA60     		str	r2, [r5, #8]	@ unaligned
 18855 0eca EB60     		str	r3, [r5, #12]	@ unaligned
 18856 0ecc 2068     		ldr	r0, [r4]	@ unaligned
 18857 0ece 2861     		str	r0, [r5, #16]	@ unaligned
 18858 0ed0 2379     		ldrb	r3, [r4, #4]
 18859 0ed2 2B75     		strb	r3, [r5, #20]
2509:..\src/command_processing.c **** 		for (i=0; i<N_IMU_Connected; i++){
 18860              		.loc 1 2509 0
 18861 0ed4 0023     		movs	r3, #0
 18862 0ed6 C7F89430 		str	r3, [r7, #148]
 18863 0eda 85E1     		b	.L702
 18864              	.L713:
2510:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 18865              		.loc 1 2510 0
 18866 0edc 6A4A     		ldr	r2, .L724+36
 18867 0ede D7F89430 		ldr	r3, [r7, #148]
 18868 0ee2 1344     		add	r3, r3, r2
 18869 0ee4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18870 0ee6 07F11C00 		add	r0, r7, #28
 18871 0eea D7F89420 		ldr	r2, [r7, #148]
 18872 0eee 6749     		ldr	r1, .L724+40
 18873 0ef0 FFF7FEFF 		bl	sprintf
2511:..\src/command_processing.c **** 			strcat(info_string, str);
 18874              		.loc 1 2511 0
 18875 0ef4 07F11C03 		add	r3, r7, #28
 18876 0ef8 1946     		mov	r1, r3
 18877 0efa 7869     		ldr	r0, [r7, #20]
 18878 0efc FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 415


2512:..\src/command_processing.c **** 			
2513:..\src/command_processing.c **** 			sprintf(str, "\tAccelerometers: ");
 18879              		.loc 1 2513 0
 18880 0f00 07F11C03 		add	r3, r7, #28
 18881 0f04 624A     		ldr	r2, .L724+44
 18882 0f06 1C46     		mov	r4, r3
 18883 0f08 1546     		mov	r5, r2
 18884 0f0a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 18885 0f0c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 18886 0f0e 2B68     		ldr	r3, [r5]
 18887 0f10 2380     		strh	r3, [r4]	@ movhi
2514:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 18888              		.loc 1 2514 0
 18889 0f12 5D4A     		ldr	r2, .L724+36
 18890 0f14 D7F89430 		ldr	r3, [r7, #148]
 18891 0f18 1344     		add	r3, r3, r2
 18892 0f1a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18893 0f1c 1946     		mov	r1, r3
 18894 0f1e D7F88C20 		ldr	r2, [r7, #140]
 18895 0f22 0B46     		mov	r3, r1
 18896 0f24 9B00     		lsls	r3, r3, #2
 18897 0f26 0B44     		add	r3, r3, r1
 18898 0f28 1344     		add	r3, r3, r2
 18899 0f2a 03F20223 		addw	r3, r3, #514
 18900 0f2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18901 0f30 002B     		cmp	r3, #0
 18902 0f32 0FD0     		beq	.L703
2515:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 18903              		.loc 1 2515 0
 18904 0f34 07F11C03 		add	r3, r7, #28
 18905 0f38 1846     		mov	r0, r3
 18906 0f3a FFF7FEFF 		bl	strlen
 18907 0f3e 0346     		mov	r3, r0
 18908 0f40 1A46     		mov	r2, r3
 18909 0f42 07F11C03 		add	r3, r7, #28
 18910 0f46 1344     		add	r3, r3, r2
 18911 0f48 524A     		ldr	r2, .L724+48
 18912 0f4a 1068     		ldr	r0, [r2]	@ unaligned
 18913 0f4c 1860     		str	r0, [r3]	@ unaligned
 18914 0f4e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 18915 0f50 9A80     		strh	r2, [r3, #4]	@ unaligned
 18916 0f52 0EE0     		b	.L704
 18917              	.L703:
2516:..\src/command_processing.c **** 			else
2517:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 18918              		.loc 1 2517 0
 18919 0f54 07F11C03 		add	r3, r7, #28
 18920 0f58 1846     		mov	r0, r3
 18921 0f5a FFF7FEFF 		bl	strlen
 18922 0f5e 0346     		mov	r3, r0
 18923 0f60 1A46     		mov	r2, r3
 18924 0f62 07F11C03 		add	r3, r7, #28
 18925 0f66 1344     		add	r3, r3, r2
 18926 0f68 4B4A     		ldr	r2, .L724+52
 18927 0f6a 1068     		ldr	r0, [r2]	@ unaligned
 18928 0f6c 1860     		str	r0, [r3]	@ unaligned
 18929 0f6e 1279     		ldrb	r2, [r2, #4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 416


 18930 0f70 1A71     		strb	r2, [r3, #4]
 18931              	.L704:
2518:..\src/command_processing.c **** 			strcat(str, "\tGyroscopes: ");
 18932              		.loc 1 2518 0
 18933 0f72 07F11C03 		add	r3, r7, #28
 18934 0f76 1846     		mov	r0, r3
 18935 0f78 FFF7FEFF 		bl	strlen
 18936 0f7c 0346     		mov	r3, r0
 18937 0f7e 1A46     		mov	r2, r3
 18938 0f80 07F11C03 		add	r3, r7, #28
 18939 0f84 1344     		add	r3, r3, r2
 18940 0f86 454A     		ldr	r2, .L724+56
 18941 0f88 1C46     		mov	r4, r3
 18942 0f8a 1346     		mov	r3, r2
 18943 0f8c 07CB     		ldmia	r3!, {r0, r1, r2}
 18944 0f8e 2060     		str	r0, [r4]	@ unaligned
 18945 0f90 6160     		str	r1, [r4, #4]	@ unaligned
 18946 0f92 A260     		str	r2, [r4, #8]	@ unaligned
 18947 0f94 1B88     		ldrh	r3, [r3]	@ unaligned
 18948 0f96 A381     		strh	r3, [r4, #12]	@ unaligned
2519:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 18949              		.loc 1 2519 0
 18950 0f98 3B4A     		ldr	r2, .L724+36
 18951 0f9a D7F89430 		ldr	r3, [r7, #148]
 18952 0f9e 1344     		add	r3, r3, r2
 18953 0fa0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18954 0fa2 1946     		mov	r1, r3
 18955 0fa4 D7F88C20 		ldr	r2, [r7, #140]
 18956 0fa8 0B46     		mov	r3, r1
 18957 0faa 9B00     		lsls	r3, r3, #2
 18958 0fac 0B44     		add	r3, r3, r1
 18959 0fae 1344     		add	r3, r3, r2
 18960 0fb0 03F20323 		addw	r3, r3, #515
 18961 0fb4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18962 0fb6 002B     		cmp	r3, #0
 18963 0fb8 0FD0     		beq	.L705
2520:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 18964              		.loc 1 2520 0
 18965 0fba 07F11C03 		add	r3, r7, #28
 18966 0fbe 1846     		mov	r0, r3
 18967 0fc0 FFF7FEFF 		bl	strlen
 18968 0fc4 0346     		mov	r3, r0
 18969 0fc6 1A46     		mov	r2, r3
 18970 0fc8 07F11C03 		add	r3, r7, #28
 18971 0fcc 1344     		add	r3, r3, r2
 18972 0fce 314A     		ldr	r2, .L724+48
 18973 0fd0 1068     		ldr	r0, [r2]	@ unaligned
 18974 0fd2 1860     		str	r0, [r3]	@ unaligned
 18975 0fd4 9288     		ldrh	r2, [r2, #4]	@ unaligned
 18976 0fd6 9A80     		strh	r2, [r3, #4]	@ unaligned
 18977 0fd8 0EE0     		b	.L706
 18978              	.L705:
2521:..\src/command_processing.c **** 			else
2522:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 18979              		.loc 1 2522 0
 18980 0fda 07F11C03 		add	r3, r7, #28
 18981 0fde 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 417


 18982 0fe0 FFF7FEFF 		bl	strlen
 18983 0fe4 0346     		mov	r3, r0
 18984 0fe6 1A46     		mov	r2, r3
 18985 0fe8 07F11C03 		add	r3, r7, #28
 18986 0fec 1344     		add	r3, r3, r2
 18987 0fee 2A4A     		ldr	r2, .L724+52
 18988 0ff0 1068     		ldr	r0, [r2]	@ unaligned
 18989 0ff2 1860     		str	r0, [r3]	@ unaligned
 18990 0ff4 1279     		ldrb	r2, [r2, #4]
 18991 0ff6 1A71     		strb	r2, [r3, #4]
 18992              	.L706:
2523:..\src/command_processing.c **** 			strcat(str, "\tMagnetometers: ");
 18993              		.loc 1 2523 0
 18994 0ff8 07F11C03 		add	r3, r7, #28
 18995 0ffc 1846     		mov	r0, r3
 18996 0ffe FFF7FEFF 		bl	strlen
 18997 1002 0346     		mov	r3, r0
 18998 1004 1A46     		mov	r2, r3
 18999 1006 07F11C03 		add	r3, r7, #28
 19000 100a 1344     		add	r3, r3, r2
 19001 100c 244A     		ldr	r2, .L724+60
 19002 100e 1D46     		mov	r5, r3
 19003 1010 1446     		mov	r4, r2
 19004 1012 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19005 1014 2860     		str	r0, [r5]	@ unaligned
 19006 1016 6960     		str	r1, [r5, #4]	@ unaligned
 19007 1018 AA60     		str	r2, [r5, #8]	@ unaligned
 19008 101a EB60     		str	r3, [r5, #12]	@ unaligned
 19009 101c 2378     		ldrb	r3, [r4]
 19010 101e 2B74     		strb	r3, [r5, #16]
2524:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 19011              		.loc 1 2524 0
 19012 1020 194A     		ldr	r2, .L724+36
 19013 1022 D7F89430 		ldr	r3, [r7, #148]
 19014 1026 1344     		add	r3, r3, r2
 19015 1028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19016 102a 1946     		mov	r1, r3
 19017 102c D7F88C20 		ldr	r2, [r7, #140]
 19018 1030 0B46     		mov	r3, r1
 19019 1032 9B00     		lsls	r3, r3, #2
 19020 1034 0B44     		add	r3, r3, r1
 19021 1036 1344     		add	r3, r3, r2
 19022 1038 03F50173 		add	r3, r3, #516
 19023 103c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19024 103e 002B     		cmp	r3, #0
 19025 1040 30D0     		beq	.L707
2525:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 19026              		.loc 1 2525 0
 19027 1042 07F11C03 		add	r3, r7, #28
 19028 1046 1846     		mov	r0, r3
 19029 1048 FFF7FEFF 		bl	strlen
 19030 104c 0346     		mov	r3, r0
 19031 104e 1A46     		mov	r2, r3
 19032 1050 07F11C03 		add	r3, r7, #28
 19033 1054 1344     		add	r3, r3, r2
 19034 1056 0F4A     		ldr	r2, .L724+48
 19035 1058 1068     		ldr	r0, [r2]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 418


 19036 105a 1860     		str	r0, [r3]	@ unaligned
 19037 105c 9288     		ldrh	r2, [r2, #4]	@ unaligned
 19038 105e 9A80     		strh	r2, [r3, #4]	@ unaligned
 19039 1060 2FE0     		b	.L708
 19040              	.L725:
 19041 1062 00BF     		.align	2
 19042              	.L724:
 19043 1064 34150000 		.word	.LC206
 19044 1068 50150000 		.word	.LC207
 19045 106c A80E0000 		.word	.LC132
 19046 1070 A8150000 		.word	.LC211
 19047 1074 C4150000 		.word	.LC212
 19048 1078 EC150000 		.word	.LC213
 19049 107c 00000000 		.word	N_IMU_Connected
 19050 1080 00160000 		.word	.LC214
 19051 1084 14160000 		.word	.LC215
 19052 1088 00000000 		.word	IMU_connected
 19053 108c 2C160000 		.word	.LC216
 19054 1090 40160000 		.word	.LC217
 19055 1094 4C100000 		.word	.LC153
 19056 1098 54100000 		.word	.LC154
 19057 109c 54160000 		.word	.LC218
 19058 10a0 64160000 		.word	.LC219
 19059              	.L707:
2526:..\src/command_processing.c **** 			else
2527:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 19060              		.loc 1 2527 0
 19061 10a4 07F11C03 		add	r3, r7, #28
 19062 10a8 1846     		mov	r0, r3
 19063 10aa FFF7FEFF 		bl	strlen
 19064 10ae 0346     		mov	r3, r0
 19065 10b0 1A46     		mov	r2, r3
 19066 10b2 07F11C03 		add	r3, r7, #28
 19067 10b6 1344     		add	r3, r3, r2
 19068 10b8 584A     		ldr	r2, .L726
 19069 10ba 1068     		ldr	r0, [r2]	@ unaligned
 19070 10bc 1860     		str	r0, [r3]	@ unaligned
 19071 10be 1279     		ldrb	r2, [r2, #4]
 19072 10c0 1A71     		strb	r2, [r3, #4]
 19073              	.L708:
2528:..\src/command_processing.c **** 			strcat(str, "\tQuaternion: ");                
 19074              		.loc 1 2528 0
 19075 10c2 07F11C03 		add	r3, r7, #28
 19076 10c6 1846     		mov	r0, r3
 19077 10c8 FFF7FEFF 		bl	strlen
 19078 10cc 0346     		mov	r3, r0
 19079 10ce 1A46     		mov	r2, r3
 19080 10d0 07F11C03 		add	r3, r7, #28
 19081 10d4 1344     		add	r3, r3, r2
 19082 10d6 524A     		ldr	r2, .L726+4
 19083 10d8 1C46     		mov	r4, r3
 19084 10da 1346     		mov	r3, r2
 19085 10dc 07CB     		ldmia	r3!, {r0, r1, r2}
 19086 10de 2060     		str	r0, [r4]	@ unaligned
 19087 10e0 6160     		str	r1, [r4, #4]	@ unaligned
 19088 10e2 A260     		str	r2, [r4, #8]	@ unaligned
 19089 10e4 1B88     		ldrh	r3, [r3]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 419


 19090 10e6 A381     		strh	r3, [r4, #12]	@ unaligned
2529:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 19091              		.loc 1 2529 0
 19092 10e8 4E4A     		ldr	r2, .L726+8
 19093 10ea D7F89430 		ldr	r3, [r7, #148]
 19094 10ee 1344     		add	r3, r3, r2
 19095 10f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19096 10f2 1946     		mov	r1, r3
 19097 10f4 D7F88C20 		ldr	r2, [r7, #140]
 19098 10f8 0B46     		mov	r3, r1
 19099 10fa 9B00     		lsls	r3, r3, #2
 19100 10fc 0B44     		add	r3, r3, r1
 19101 10fe 1344     		add	r3, r3, r2
 19102 1100 03F20523 		addw	r3, r3, #517
 19103 1104 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19104 1106 002B     		cmp	r3, #0
 19105 1108 0FD0     		beq	.L709
2530:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 19106              		.loc 1 2530 0
 19107 110a 07F11C03 		add	r3, r7, #28
 19108 110e 1846     		mov	r0, r3
 19109 1110 FFF7FEFF 		bl	strlen
 19110 1114 0346     		mov	r3, r0
 19111 1116 1A46     		mov	r2, r3
 19112 1118 07F11C03 		add	r3, r7, #28
 19113 111c 1344     		add	r3, r3, r2
 19114 111e 424A     		ldr	r2, .L726+12
 19115 1120 1068     		ldr	r0, [r2]	@ unaligned
 19116 1122 1860     		str	r0, [r3]	@ unaligned
 19117 1124 9288     		ldrh	r2, [r2, #4]	@ unaligned
 19118 1126 9A80     		strh	r2, [r3, #4]	@ unaligned
 19119 1128 0EE0     		b	.L710
 19120              	.L709:
2531:..\src/command_processing.c **** 			else
2532:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 19121              		.loc 1 2532 0
 19122 112a 07F11C03 		add	r3, r7, #28
 19123 112e 1846     		mov	r0, r3
 19124 1130 FFF7FEFF 		bl	strlen
 19125 1134 0346     		mov	r3, r0
 19126 1136 1A46     		mov	r2, r3
 19127 1138 07F11C03 		add	r3, r7, #28
 19128 113c 1344     		add	r3, r3, r2
 19129 113e 374A     		ldr	r2, .L726
 19130 1140 1068     		ldr	r0, [r2]	@ unaligned
 19131 1142 1860     		str	r0, [r3]	@ unaligned
 19132 1144 1279     		ldrb	r2, [r2, #4]
 19133 1146 1A71     		strb	r2, [r3, #4]
 19134              	.L710:
2533:..\src/command_processing.c **** 			strcat(str, "\tTemperature: ");
 19135              		.loc 1 2533 0
 19136 1148 07F11C03 		add	r3, r7, #28
 19137 114c 1846     		mov	r0, r3
 19138 114e FFF7FEFF 		bl	strlen
 19139 1152 0346     		mov	r3, r0
 19140 1154 1A46     		mov	r2, r3
 19141 1156 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 420


 19142 115a 1344     		add	r3, r3, r2
 19143 115c 334A     		ldr	r2, .L726+16
 19144 115e 1C46     		mov	r4, r3
 19145 1160 1346     		mov	r3, r2
 19146 1162 07CB     		ldmia	r3!, {r0, r1, r2}
 19147 1164 2060     		str	r0, [r4]	@ unaligned
 19148 1166 6160     		str	r1, [r4, #4]	@ unaligned
 19149 1168 A260     		str	r2, [r4, #8]	@ unaligned
 19150 116a 1A88     		ldrh	r2, [r3]	@ unaligned
 19151 116c 9B78     		ldrb	r3, [r3, #2]
 19152 116e A281     		strh	r2, [r4, #12]	@ unaligned
 19153 1170 A373     		strb	r3, [r4, #14]
2534:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 19154              		.loc 1 2534 0
 19155 1172 2C4A     		ldr	r2, .L726+8
 19156 1174 D7F89430 		ldr	r3, [r7, #148]
 19157 1178 1344     		add	r3, r3, r2
 19158 117a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19159 117c 1946     		mov	r1, r3
 19160 117e D7F88C20 		ldr	r2, [r7, #140]
 19161 1182 0B46     		mov	r3, r1
 19162 1184 9B00     		lsls	r3, r3, #2
 19163 1186 0B44     		add	r3, r3, r1
 19164 1188 1344     		add	r3, r3, r2
 19165 118a 03F20623 		addw	r3, r3, #518
 19166 118e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19167 1190 002B     		cmp	r3, #0
 19168 1192 0FD0     		beq	.L711
2535:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 19169              		.loc 1 2535 0
 19170 1194 07F11C03 		add	r3, r7, #28
 19171 1198 1846     		mov	r0, r3
 19172 119a FFF7FEFF 		bl	strlen
 19173 119e 0346     		mov	r3, r0
 19174 11a0 1A46     		mov	r2, r3
 19175 11a2 07F11C03 		add	r3, r7, #28
 19176 11a6 1344     		add	r3, r3, r2
 19177 11a8 1F4A     		ldr	r2, .L726+12
 19178 11aa 1068     		ldr	r0, [r2]	@ unaligned
 19179 11ac 1860     		str	r0, [r3]	@ unaligned
 19180 11ae 9288     		ldrh	r2, [r2, #4]	@ unaligned
 19181 11b0 9A80     		strh	r2, [r3, #4]	@ unaligned
 19182 11b2 0EE0     		b	.L712
 19183              	.L711:
2536:..\src/command_processing.c **** 			else
2537:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 19184              		.loc 1 2537 0
 19185 11b4 07F11C03 		add	r3, r7, #28
 19186 11b8 1846     		mov	r0, r3
 19187 11ba FFF7FEFF 		bl	strlen
 19188 11be 0346     		mov	r3, r0
 19189 11c0 1A46     		mov	r2, r3
 19190 11c2 07F11C03 		add	r3, r7, #28
 19191 11c6 1344     		add	r3, r3, r2
 19192 11c8 144A     		ldr	r2, .L726
 19193 11ca 1068     		ldr	r0, [r2]	@ unaligned
 19194 11cc 1860     		str	r0, [r3]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 421


 19195 11ce 1279     		ldrb	r2, [r2, #4]
 19196 11d0 1A71     		strb	r2, [r3, #4]
 19197              	.L712:
2538:..\src/command_processing.c **** 				 
2539:..\src/command_processing.c **** 			strcat(info_string, str);
 19198              		.loc 1 2539 0 discriminator 2
 19199 11d2 07F11C03 		add	r3, r7, #28
 19200 11d6 1946     		mov	r1, r3
 19201 11d8 7869     		ldr	r0, [r7, #20]
 19202 11da FFF7FEFF 		bl	strcat
2509:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 19203              		.loc 1 2509 0 discriminator 2
 19204 11de D7F89430 		ldr	r3, [r7, #148]
 19205 11e2 0133     		adds	r3, r3, #1
 19206 11e4 C7F89430 		str	r3, [r7, #148]
 19207              	.L702:
2509:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 19208              		.loc 1 2509 0 is_stmt 0 discriminator 1
 19209 11e8 114B     		ldr	r3, .L726+20
 19210 11ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19211 11ec 1A46     		mov	r2, r3
 19212 11ee D7F89430 		ldr	r3, [r7, #148]
 19213 11f2 9A42     		cmp	r2, r3
 19214 11f4 3FF772AE 		bgt	.L713
2540:..\src/command_processing.c **** 		}       
2541:..\src/command_processing.c **** 		
2542:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 19215              		.loc 1 2542 0 is_stmt 1
 19216 11f8 7869     		ldr	r0, [r7, #20]
 19217 11fa FFF7FEFF 		bl	strlen
 19218 11fe 0346     		mov	r3, r0
 19219 1200 1A46     		mov	r2, r3
 19220 1202 7B69     		ldr	r3, [r7, #20]
 19221 1204 1344     		add	r3, r3, r2
 19222 1206 0B4A     		ldr	r2, .L726+24
 19223 1208 1188     		ldrh	r1, [r2]	@ unaligned
 19224 120a 9278     		ldrb	r2, [r2, #2]
 19225 120c 1980     		strh	r1, [r3]	@ unaligned
 19226 120e 9A70     		strb	r2, [r3, #2]
 19227              	.L715:
2543:..\src/command_processing.c **** 	}
2544:..\src/command_processing.c **** }
 19228              		.loc 1 2544 0
 19229 1210 00BF     		nop
 19230 1212 9C37     		adds	r7, r7, #156
 19231              		.cfi_def_cfa_offset 36
 19232 1214 BD46     		mov	sp, r7
 19233              		.cfi_def_cfa_register 13
 19234              		@ sp needed
 19235 1216 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 19236              	.L727:
 19237 121a 00BF     		.align	2
 19238              	.L726:
 19239 121c 54100000 		.word	.LC154
 19240 1220 78160000 		.word	.LC220
 19241 1224 00000000 		.word	IMU_connected
 19242 1228 4C100000 		.word	.LC153
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 422


 19243 122c 88160000 		.word	.LC221
 19244 1230 00000000 		.word	N_IMU_Connected
 19245 1234 A80E0000 		.word	.LC132
 19246              		.cfi_endproc
 19247              	.LFE74:
 19248              		.size	prepare_SD_param_info, .-prepare_SD_param_info
 19249              		.section	.rodata
 19250 19ca 0000     		.align	2
 19251              	.LC249:
 19252 19cc 486F7572 		.ascii	"Hour,Min,Sec,\000"
 19252      2C4D696E 
 19252      2C536563 
 19252      2C00
 19253 19da 0000     		.align	2
 19254              	.LC250:
 19255 19dc 42696E5F 		.ascii	"Bin_%d_Pos,\000"
 19255      25645F50 
 19255      6F732C00 
 19256              		.align	2
 19257              	.LC251:
 19258 19e8 42696E5F 		.ascii	"Bin_%d_Curr,\000"
 19258      25645F43 
 19258      7572722C 
 19258      00
 19259 19f5 000000   		.align	2
 19260              	.LC252:
 19261 19f8 454D475F 		.ascii	"EMG_1_act,EMG_2_act,Rest_times,Wire_disp,Total_powe"
 19261      315F6163 
 19261      742C454D 
 19261      475F325F 
 19261      6163742C 
 19262 1a2b 725F6F6E 		.ascii	"r_on_time,Total_rest_time\000"
 19262      5F74696D 
 19262      652C546F 
 19262      74616C5F 
 19262      72657374 
 19263              		.section	.text.prepare_SD_legend,"ax",%progbits
 19264              		.align	2
 19265              		.global	prepare_SD_legend
 19266              		.thumb
 19267              		.thumb_func
 19268              		.type	prepare_SD_legend, %function
 19269              	prepare_SD_legend:
 19270              	.LFB75:
2545:..\src/command_processing.c **** 
2546:..\src/command_processing.c **** 
2547:..\src/command_processing.c **** //==============================================================================
2548:..\src/command_processing.c **** //                                                        PREPARE SD CARD LEGEND
2549:..\src/command_processing.c **** //==============================================================================
2550:..\src/command_processing.c **** void prepare_SD_legend(char *info_string)
2551:..\src/command_processing.c **** {
 19271              		.loc 1 2551 0
 19272              		.cfi_startproc
 19273              		@ args = 0, pretend = 0, frame = 112
 19274              		@ frame_needed = 1, uses_anonymous_args = 0
 19275 0000 90B5     		push	{r4, r7, lr}
 19276              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 423


 19277              		.cfi_offset 4, -12
 19278              		.cfi_offset 7, -8
 19279              		.cfi_offset 14, -4
 19280 0002 9DB0     		sub	sp, sp, #116
 19281              		.cfi_def_cfa_offset 128
 19282 0004 00AF     		add	r7, sp, #0
 19283              		.cfi_def_cfa_register 7
 19284 0006 7860     		str	r0, [r7, #4]
2552:..\src/command_processing.c ****     char str[100];  
2553:..\src/command_processing.c ****     int i;
2554:..\src/command_processing.c ****         
2555:..\src/command_processing.c ****     // Legend
2556:..\src/command_processing.c ****     strcpy(info_string, "Hour,Min,Sec,");
 19285              		.loc 1 2556 0
 19286 0008 7B68     		ldr	r3, [r7, #4]
 19287 000a 2A4A     		ldr	r2, .L733
 19288 000c 1C46     		mov	r4, r3
 19289 000e 1346     		mov	r3, r2
 19290 0010 07CB     		ldmia	r3!, {r0, r1, r2}
 19291 0012 2060     		str	r0, [r4]	@ unaligned
 19292 0014 6160     		str	r1, [r4, #4]	@ unaligned
 19293 0016 A260     		str	r2, [r4, #8]	@ unaligned
 19294 0018 1B88     		ldrh	r3, [r3]	@ unaligned
 19295 001a A381     		strh	r3, [r4, #12]	@ unaligned
2557:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 19296              		.loc 1 2557 0
 19297 001c 0123     		movs	r3, #1
 19298 001e FB66     		str	r3, [r7, #108]
 19299 0020 0FE0     		b	.L729
 19300              	.L730:
2558:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Pos,", i); 
 19301              		.loc 1 2558 0 discriminator 3
 19302 0022 07F10803 		add	r3, r7, #8
 19303 0026 FA6E     		ldr	r2, [r7, #108]
 19304 0028 2349     		ldr	r1, .L733+4
 19305 002a 1846     		mov	r0, r3
 19306 002c FFF7FEFF 		bl	sprintf
2559:..\src/command_processing.c ****         strcat(info_string, str);
 19307              		.loc 1 2559 0 discriminator 3
 19308 0030 07F10803 		add	r3, r7, #8
 19309 0034 1946     		mov	r1, r3
 19310 0036 7868     		ldr	r0, [r7, #4]
 19311 0038 FFF7FEFF 		bl	strcat
2557:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 19312              		.loc 1 2557 0 discriminator 3
 19313 003c FB6E     		ldr	r3, [r7, #108]
 19314 003e 0133     		adds	r3, r3, #1
 19315 0040 FB66     		str	r3, [r7, #108]
 19316              	.L729:
2557:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 19317              		.loc 1 2557 0 is_stmt 0 discriminator 1
 19318 0042 FB6E     		ldr	r3, [r7, #108]
 19319 0044 0A2B     		cmp	r3, #10
 19320 0046 ECDD     		ble	.L730
2560:..\src/command_processing.c ****     }
2561:..\src/command_processing.c ****     for (i=1; i<=4;i++){        // Current bins
 19321              		.loc 1 2561 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 424


 19322 0048 0123     		movs	r3, #1
 19323 004a FB66     		str	r3, [r7, #108]
 19324 004c 0FE0     		b	.L731
 19325              	.L732:
2562:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 19326              		.loc 1 2562 0 discriminator 3
 19327 004e 07F10803 		add	r3, r7, #8
 19328 0052 FA6E     		ldr	r2, [r7, #108]
 19329 0054 1949     		ldr	r1, .L733+8
 19330 0056 1846     		mov	r0, r3
 19331 0058 FFF7FEFF 		bl	sprintf
2563:..\src/command_processing.c ****         strcat(info_string, str);
 19332              		.loc 1 2563 0 discriminator 3
 19333 005c 07F10803 		add	r3, r7, #8
 19334 0060 1946     		mov	r1, r3
 19335 0062 7868     		ldr	r0, [r7, #4]
 19336 0064 FFF7FEFF 		bl	strcat
2561:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 19337              		.loc 1 2561 0 discriminator 3
 19338 0068 FB6E     		ldr	r3, [r7, #108]
 19339 006a 0133     		adds	r3, r3, #1
 19340 006c FB66     		str	r3, [r7, #108]
 19341              	.L731:
2561:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 19342              		.loc 1 2561 0 is_stmt 0 discriminator 1
 19343 006e FB6E     		ldr	r3, [r7, #108]
 19344 0070 042B     		cmp	r3, #4
 19345 0072 ECDD     		ble	.L732
2564:..\src/command_processing.c ****     }
2565:..\src/command_processing.c ****     sprintf(str, "EMG_1_act,EMG_2_act,Rest_times,Wire_disp,Total_power_on_time,Total_rest_time");
 19346              		.loc 1 2565 0 is_stmt 1
 19347 0074 07F10803 		add	r3, r7, #8
 19348 0078 114A     		ldr	r2, .L733+12
 19349 007a 1846     		mov	r0, r3
 19350 007c 1146     		mov	r1, r2
 19351 007e 4D23     		movs	r3, #77
 19352 0080 1A46     		mov	r2, r3
 19353 0082 FFF7FEFF 		bl	memcpy
2566:..\src/command_processing.c ****     strcat(info_string, str);
 19354              		.loc 1 2566 0
 19355 0086 07F10803 		add	r3, r7, #8
 19356 008a 1946     		mov	r1, r3
 19357 008c 7868     		ldr	r0, [r7, #4]
 19358 008e FFF7FEFF 		bl	strcat
2567:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 19359              		.loc 1 2567 0
 19360 0092 7868     		ldr	r0, [r7, #4]
 19361 0094 FFF7FEFF 		bl	strlen
 19362 0098 0346     		mov	r3, r0
 19363 009a 1A46     		mov	r2, r3
 19364 009c 7B68     		ldr	r3, [r7, #4]
 19365 009e 1344     		add	r3, r3, r2
 19366 00a0 084A     		ldr	r2, .L733+16
 19367 00a2 1188     		ldrh	r1, [r2]	@ unaligned
 19368 00a4 9278     		ldrb	r2, [r2, #2]
 19369 00a6 1980     		strh	r1, [r3]	@ unaligned
 19370 00a8 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 425


2568:..\src/command_processing.c **** }
 19371              		.loc 1 2568 0
 19372 00aa 00BF     		nop
 19373 00ac 7437     		adds	r7, r7, #116
 19374              		.cfi_def_cfa_offset 12
 19375 00ae BD46     		mov	sp, r7
 19376              		.cfi_def_cfa_register 13
 19377              		@ sp needed
 19378 00b0 90BD     		pop	{r4, r7, pc}
 19379              	.L734:
 19380 00b2 00BF     		.align	2
 19381              	.L733:
 19382 00b4 CC190000 		.word	.LC249
 19383 00b8 DC190000 		.word	.LC250
 19384 00bc E8190000 		.word	.LC251
 19385 00c0 F8190000 		.word	.LC252
 19386 00c4 A80E0000 		.word	.LC132
 19387              		.cfi_endproc
 19388              	.LFE75:
 19389              		.size	prepare_SD_legend, .-prepare_SD_legend
 19390              		.section	.rodata
 19391 1a45 000000   		.align	2
 19392              	.LC253:
 19393 1a48 25303264 		.ascii	"%02d,%02d,%02d,\000"
 19393      2C253032 
 19393      642C2530 
 19393      32642C00 
 19394              		.align	2
 19395              	.LC254:
 19396 1a58 256C752C 		.ascii	"%lu,\000"
 19396      00
 19397 1a5d 000000   		.align	2
 19398              	.LC255:
 19399 1a60 256C752C 		.ascii	"%lu,%lu,\000"
 19399      256C752C 
 19399      00
 19400 1a69 000000   		.align	2
 19401              	.LC256:
 19402 1a6c 256C752C 		.ascii	"%lu,%lu,%lu,%lu\000"
 19402      256C752C 
 19402      256C752C 
 19402      256C7500 
 19403              		.section	.text.prepare_SD_info,"ax",%progbits
 19404              		.align	2
 19405              		.global	prepare_SD_info
 19406              		.thumb
 19407              		.thumb_func
 19408              		.type	prepare_SD_info, %function
 19409              	prepare_SD_info:
 19410              	.LFB76:
2569:..\src/command_processing.c **** 
2570:..\src/command_processing.c **** //==============================================================================
2571:..\src/command_processing.c **** //                                                          PREPARE SD CARD INFO
2572:..\src/command_processing.c **** //==============================================================================
2573:..\src/command_processing.c **** void prepare_SD_info(char *info_string)
2574:..\src/command_processing.c **** {
 19411              		.loc 1 2574 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 426


 19412              		.cfi_startproc
 19413              		@ args = 0, pretend = 0, frame = 112
 19414              		@ frame_needed = 1, uses_anonymous_args = 0
 19415 0000 90B5     		push	{r4, r7, lr}
 19416              		.cfi_def_cfa_offset 12
 19417              		.cfi_offset 4, -12
 19418              		.cfi_offset 7, -8
 19419              		.cfi_offset 14, -4
 19420 0002 9FB0     		sub	sp, sp, #124
 19421              		.cfi_def_cfa_offset 136
 19422 0004 02AF     		add	r7, sp, #8
 19423              		.cfi_def_cfa 7, 128
 19424 0006 7860     		str	r0, [r7, #4]
2575:..\src/command_processing.c ****     char str[100];  
2576:..\src/command_processing.c ****     int i;
2577:..\src/command_processing.c ****             
2578:..\src/command_processing.c ****     strcpy(info_string, "");
 19425              		.loc 1 2578 0
 19426 0008 7B68     		ldr	r3, [r7, #4]
 19427 000a 0022     		movs	r2, #0
 19428 000c 1A70     		strb	r2, [r3]
2579:..\src/command_processing.c ****     
2580:..\src/command_processing.c ****     // Time
2581:..\src/command_processing.c ****     strcat(info_string, "");
2582:..\src/command_processing.c ****     sprintf(str, "%02d,%02d,%02d,", (int)g_mem.exp.curr_time[3], (int)g_mem.exp.curr_time[4], (int)
 19429              		.loc 1 2582 0
 19430 000e 424B     		ldr	r3, .L740
 19431 0010 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 19432 0014 1A46     		mov	r2, r3
 19433 0016 404B     		ldr	r3, .L740
 19434 0018 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 19435 001c 1946     		mov	r1, r3
 19436 001e 3E4B     		ldr	r3, .L740
 19437 0020 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 19438 0024 07F10800 		add	r0, r7, #8
 19439 0028 0093     		str	r3, [sp]
 19440 002a 0B46     		mov	r3, r1
 19441 002c 3B49     		ldr	r1, .L740+4
 19442 002e FFF7FEFF 		bl	sprintf
2583:..\src/command_processing.c ****     strcat(info_string, str);
 19443              		.loc 1 2583 0
 19444 0032 07F10803 		add	r3, r7, #8
 19445 0036 1946     		mov	r1, r3
 19446 0038 7868     		ldr	r0, [r7, #4]
 19447 003a FFF7FEFF 		bl	strcat
2584:..\src/command_processing.c **** 
2585:..\src/command_processing.c ****     // Pos_Bin
2586:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 19448              		.loc 1 2586 0
 19449 003e 0123     		movs	r3, #1
 19450 0040 FB66     		str	r3, [r7, #108]
 19451 0042 14E0     		b	.L736
 19452              	.L737:
2587:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 19453              		.loc 1 2587 0 discriminator 3
 19454 0044 FB6E     		ldr	r3, [r7, #108]
 19455 0046 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 427


 19456 0048 334A     		ldr	r2, .L740
 19457 004a 0633     		adds	r3, r3, #6
 19458 004c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 19459 0050 07F10803 		add	r3, r7, #8
 19460 0054 3249     		ldr	r1, .L740+8
 19461 0056 1846     		mov	r0, r3
 19462 0058 FFF7FEFF 		bl	sprintf
2588:..\src/command_processing.c ****         strcat(info_string, str);
 19463              		.loc 1 2588 0 discriminator 3
 19464 005c 07F10803 		add	r3, r7, #8
 19465 0060 1946     		mov	r1, r3
 19466 0062 7868     		ldr	r0, [r7, #4]
 19467 0064 FFF7FEFF 		bl	strcat
2586:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 19468              		.loc 1 2586 0 discriminator 3
 19469 0068 FB6E     		ldr	r3, [r7, #108]
 19470 006a 0133     		adds	r3, r3, #1
 19471 006c FB66     		str	r3, [r7, #108]
 19472              	.L736:
2586:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 19473              		.loc 1 2586 0 is_stmt 0 discriminator 1
 19474 006e FB6E     		ldr	r3, [r7, #108]
 19475 0070 0A2B     		cmp	r3, #10
 19476 0072 E7DD     		ble	.L737
2589:..\src/command_processing.c ****     }
2590:..\src/command_processing.c ****     
2591:..\src/command_processing.c ****     // Curr_Bin
2592:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 19477              		.loc 1 2592 0 is_stmt 1
 19478 0074 0123     		movs	r3, #1
 19479 0076 FB66     		str	r3, [r7, #108]
 19480 0078 14E0     		b	.L738
 19481              	.L739:
2593:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 19482              		.loc 1 2593 0 discriminator 3
 19483 007a FB6E     		ldr	r3, [r7, #108]
 19484 007c 013B     		subs	r3, r3, #1
 19485 007e 264A     		ldr	r2, .L740
 19486 0080 1033     		adds	r3, r3, #16
 19487 0082 52F82320 		ldr	r2, [r2, r3, lsl #2]
 19488 0086 07F10803 		add	r3, r7, #8
 19489 008a 2549     		ldr	r1, .L740+8
 19490 008c 1846     		mov	r0, r3
 19491 008e FFF7FEFF 		bl	sprintf
2594:..\src/command_processing.c ****         strcat(info_string, str);
 19492              		.loc 1 2594 0 discriminator 3
 19493 0092 07F10803 		add	r3, r7, #8
 19494 0096 1946     		mov	r1, r3
 19495 0098 7868     		ldr	r0, [r7, #4]
 19496 009a FFF7FEFF 		bl	strcat
2592:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 19497              		.loc 1 2592 0 discriminator 3
 19498 009e FB6E     		ldr	r3, [r7, #108]
 19499 00a0 0133     		adds	r3, r3, #1
 19500 00a2 FB66     		str	r3, [r7, #108]
 19501              	.L738:
2592:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 428


 19502              		.loc 1 2592 0 is_stmt 0 discriminator 1
 19503 00a4 FB6E     		ldr	r3, [r7, #108]
 19504 00a6 042B     		cmp	r3, #4
 19505 00a8 E7DD     		ble	.L739
2595:..\src/command_processing.c ****     }
2596:..\src/command_processing.c ****        
2597:..\src/command_processing.c ****     // EMG_1, EMG_2
2598:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,", g_mem.cnt.emg_counter[0], g_mem.cnt.emg_counter[1]);
 19506              		.loc 1 2598 0 is_stmt 1
 19507 00aa 1B4B     		ldr	r3, .L740
 19508 00ac 1A69     		ldr	r2, [r3, #16]
 19509 00ae 1A4B     		ldr	r3, .L740
 19510 00b0 5B69     		ldr	r3, [r3, #20]
 19511 00b2 07F10800 		add	r0, r7, #8
 19512 00b6 1B49     		ldr	r1, .L740+12
 19513 00b8 FFF7FEFF 		bl	sprintf
2599:..\src/command_processing.c ****     strcat(info_string, str);
 19514              		.loc 1 2599 0
 19515 00bc 07F10803 		add	r3, r7, #8
 19516 00c0 1946     		mov	r1, r3
 19517 00c2 7868     		ldr	r0, [r7, #4]
 19518 00c4 FFF7FEFF 		bl	strcat
2600:..\src/command_processing.c ****     
2601:..\src/command_processing.c ****     // Rest_times, Wire_disp, Total_power_on_time, Total_rest_time
2602:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,%lu,%lu", g_mem.cnt.rest_counter, g_mem.cnt.wire_disp, g_mem.cnt.total_ti
 19519              		.loc 1 2602 0
 19520 00c8 134B     		ldr	r3, .L740
 19521 00ca 196D     		ldr	r1, [r3, #80]
 19522 00cc 124B     		ldr	r3, .L740
 19523 00ce 5C6D     		ldr	r4, [r3, #84]
 19524 00d0 114B     		ldr	r3, .L740
 19525 00d2 9B6D     		ldr	r3, [r3, #88]
 19526 00d4 104A     		ldr	r2, .L740
 19527 00d6 D26D     		ldr	r2, [r2, #92]
 19528 00d8 07F10800 		add	r0, r7, #8
 19529 00dc 0192     		str	r2, [sp, #4]
 19530 00de 0093     		str	r3, [sp]
 19531 00e0 2346     		mov	r3, r4
 19532 00e2 0A46     		mov	r2, r1
 19533 00e4 1049     		ldr	r1, .L740+16
 19534 00e6 FFF7FEFF 		bl	sprintf
2603:..\src/command_processing.c ****     strcat(info_string, str);
 19535              		.loc 1 2603 0
 19536 00ea 07F10803 		add	r3, r7, #8
 19537 00ee 1946     		mov	r1, r3
 19538 00f0 7868     		ldr	r0, [r7, #4]
 19539 00f2 FFF7FEFF 		bl	strcat
2604:..\src/command_processing.c ****     
2605:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 19540              		.loc 1 2605 0
 19541 00f6 7868     		ldr	r0, [r7, #4]
 19542 00f8 FFF7FEFF 		bl	strlen
 19543 00fc 0346     		mov	r3, r0
 19544 00fe 1A46     		mov	r2, r3
 19545 0100 7B68     		ldr	r3, [r7, #4]
 19546 0102 1344     		add	r3, r3, r2
 19547 0104 094A     		ldr	r2, .L740+20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 429


 19548 0106 1188     		ldrh	r1, [r2]	@ unaligned
 19549 0108 9278     		ldrb	r2, [r2, #2]
 19550 010a 1980     		strh	r1, [r3]	@ unaligned
 19551 010c 9A70     		strb	r2, [r3, #2]
2606:..\src/command_processing.c **** }
 19552              		.loc 1 2606 0
 19553 010e 00BF     		nop
 19554 0110 7437     		adds	r7, r7, #116
 19555              		.cfi_def_cfa_offset 12
 19556 0112 BD46     		mov	sp, r7
 19557              		.cfi_def_cfa_register 13
 19558              		@ sp needed
 19559 0114 90BD     		pop	{r4, r7, pc}
 19560              	.L741:
 19561 0116 00BF     		.align	2
 19562              	.L740:
 19563 0118 00000000 		.word	g_mem
 19564 011c 481A0000 		.word	.LC253
 19565 0120 581A0000 		.word	.LC254
 19566 0124 601A0000 		.word	.LC255
 19567 0128 6C1A0000 		.word	.LC256
 19568 012c A80E0000 		.word	.LC132
 19569              		.cfi_endproc
 19570              	.LFE76:
 19571              		.size	prepare_SD_info, .-prepare_SD_info
 19572              		.section	.rodata
 19573              		.align	2
 19574              	.LC257:
 19575 1a7c 53454E53 		.ascii	"SENSORS INFO\015\012\000"
 19575      4F525320 
 19575      494E464F 
 19575      0D0A00
 19576 1a8b 00       		.align	2
 19577              	.LC258:
 19578 1a8c 09416363 		.ascii	"\011Acc: %d\011%d\011%d\015\012\000"
 19578      3A202564 
 19578      09256409 
 19578      25640D0A 
 19578      00
 19579 1a9d 000000   		.align	2
 19580              	.LC259:
 19581 1aa0 09477972 		.ascii	"\011Gyro: %d\011%d\011%d\015\012\000"
 19581      6F3A2025 
 19581      64092564 
 19581      0925640D 
 19581      0A00
 19582 1ab2 0000     		.align	2
 19583              	.LC260:
 19584 1ab4 094D6167 		.ascii	"\011Mag: %d\011%d\011%d\015\012\000"
 19584      3A202564 
 19584      09256409 
 19584      25640D0A 
 19584      00
 19585 1ac5 000000   		.align	2
 19586              	.LC261:
 19587 1ac8 09517561 		.ascii	"\011Quat: %.3f\011%.3f\011%.3f\011%.3f\015\012\000"
 19587      743A2025 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 430


 19587      2E336609 
 19587      252E3366 
 19587      09252E33 
 19588 1ae5 000000   		.align	2
 19589              	.LC262:
 19590 1ae8 0954656D 		.ascii	"\011Temperature: %d\015\012\000"
 19590      70657261 
 19590      74757265 
 19590      3A202564 
 19590      0D0A00
 19591              		.section	.text.IMU_reading_info,"ax",%progbits
 19592              		.align	2
 19593              		.global	IMU_reading_info
 19594              		.thumb
 19595              		.thumb_func
 19596              		.type	IMU_reading_info, %function
 19597              	IMU_reading_info:
 19598              	.LFB77:
2607:..\src/command_processing.c **** 
2608:..\src/command_processing.c **** //==============================================================================
2609:..\src/command_processing.c **** //                                                              IMU READING INFO
2610:..\src/command_processing.c **** //==============================================================================
2611:..\src/command_processing.c **** 
2612:..\src/command_processing.c **** void IMU_reading_info(char *info_string)
2613:..\src/command_processing.c **** {
 19599              		.loc 1 2613 0
 19600              		.cfi_startproc
 19601              		@ args = 0, pretend = 0, frame = 312
 19602              		@ frame_needed = 1, uses_anonymous_args = 0
 19603 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 19604              		.cfi_def_cfa_offset 32
 19605              		.cfi_offset 4, -32
 19606              		.cfi_offset 5, -28
 19607              		.cfi_offset 7, -24
 19608              		.cfi_offset 8, -20
 19609              		.cfi_offset 9, -16
 19610              		.cfi_offset 10, -12
 19611              		.cfi_offset 11, -8
 19612              		.cfi_offset 14, -4
 19613 0004 D4B0     		sub	sp, sp, #336
 19614              		.cfi_def_cfa_offset 368
 19615 0006 06AF     		add	r7, sp, #24
 19616              		.cfi_def_cfa 7, 344
 19617 0008 3B1D     		adds	r3, r7, #4
 19618 000a 1860     		str	r0, [r3]
2614:..\src/command_processing.c ****     char str[300];  
2615:..\src/command_processing.c ****     int i;
2616:..\src/command_processing.c ****                  
2617:..\src/command_processing.c ****     strcat(info_string, "SENSORS INFO\r\n");
 19619              		.loc 1 2617 0
 19620 000c 3B1D     		adds	r3, r7, #4
 19621 000e 1868     		ldr	r0, [r3]
 19622 0010 FFF7FEFF 		bl	strlen
 19623 0014 0346     		mov	r3, r0
 19624 0016 1A46     		mov	r2, r3
 19625 0018 3B1D     		adds	r3, r7, #4
 19626 001a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 431


 19627 001c 1344     		add	r3, r3, r2
 19628 001e C94A     		ldr	r2, .L750
 19629 0020 1C46     		mov	r4, r3
 19630 0022 1346     		mov	r3, r2
 19631 0024 07CB     		ldmia	r3!, {r0, r1, r2}
 19632 0026 2060     		str	r0, [r4]	@ unaligned
 19633 0028 6160     		str	r1, [r4, #4]	@ unaligned
 19634 002a A260     		str	r2, [r4, #8]	@ unaligned
 19635 002c 1A88     		ldrh	r2, [r3]	@ unaligned
 19636 002e 9B78     		ldrb	r3, [r3, #2]
 19637 0030 A281     		strh	r2, [r4, #12]	@ unaligned
 19638 0032 A373     		strb	r3, [r4, #14]
2618:..\src/command_processing.c ****     for (i=0; i<N_IMU_Connected; i++){
 19639              		.loc 1 2618 0
 19640 0034 0023     		movs	r3, #0
 19641 0036 C7F83431 		str	r3, [r7, #308]
 19642 003a 66E1     		b	.L743
 19643              	.L749:
2619:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 19644              		.loc 1 2619 0
 19645 003c C24A     		ldr	r2, .L750+4
 19646 003e D7F83431 		ldr	r3, [r7, #308]
 19647 0042 1344     		add	r3, r3, r2
 19648 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19649 0046 07F10800 		add	r0, r7, #8
 19650 004a D7F83421 		ldr	r2, [r7, #308]
 19651 004e BF49     		ldr	r1, .L750+8
 19652 0050 FFF7FEFF 		bl	sprintf
2620:..\src/command_processing.c ****         strcat(info_string, str);
 19653              		.loc 1 2620 0
 19654 0054 07F10802 		add	r2, r7, #8
 19655 0058 3B1D     		adds	r3, r7, #4
 19656 005a 1146     		mov	r1, r2
 19657 005c 1868     		ldr	r0, [r3]
 19658 005e FFF7FEFF 		bl	strcat
2621:..\src/command_processing.c ****         
2622:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][0])){
 19659              		.loc 1 2622 0
 19660 0062 B94A     		ldr	r2, .L750+4
 19661 0064 D7F83431 		ldr	r3, [r7, #308]
 19662 0068 1344     		add	r3, r3, r2
 19663 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19664 006c 1946     		mov	r1, r3
 19665 006e B84A     		ldr	r2, .L750+12
 19666 0070 0B46     		mov	r3, r1
 19667 0072 9B00     		lsls	r3, r3, #2
 19668 0074 0B44     		add	r3, r3, r1
 19669 0076 1344     		add	r3, r3, r2
 19670 0078 03F20223 		addw	r3, r3, #514
 19671 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19672 007e 002B     		cmp	r3, #0
 19673 0080 31D0     		beq	.L744
2623:..\src/command_processing.c ****             sprintf(str, "\tAcc: %d\t%d\t%d\r\n", (int16) g_imu[i].accel_value[0], (int16) g_imu[i]
 19674              		.loc 1 2623 0
 19675 0082 B449     		ldr	r1, .L750+16
 19676 0084 D7F83421 		ldr	r2, [r7, #308]
 19677 0088 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 432


 19678 008a 9B00     		lsls	r3, r3, #2
 19679 008c 1344     		add	r3, r3, r2
 19680 008e DB00     		lsls	r3, r3, #3
 19681 0090 0B44     		add	r3, r3, r1
 19682 0092 0233     		adds	r3, r3, #2
 19683 0094 B3F90030 		ldrsh	r3, [r3]
 19684 0098 1C46     		mov	r4, r3
 19685 009a AE49     		ldr	r1, .L750+16
 19686 009c D7F83421 		ldr	r2, [r7, #308]
 19687 00a0 1346     		mov	r3, r2
 19688 00a2 9B00     		lsls	r3, r3, #2
 19689 00a4 1344     		add	r3, r3, r2
 19690 00a6 DB00     		lsls	r3, r3, #3
 19691 00a8 0B44     		add	r3, r3, r1
 19692 00aa 0433     		adds	r3, r3, #4
 19693 00ac B3F90030 		ldrsh	r3, [r3]
 19694 00b0 1D46     		mov	r5, r3
 19695 00b2 A849     		ldr	r1, .L750+16
 19696 00b4 D7F83421 		ldr	r2, [r7, #308]
 19697 00b8 1346     		mov	r3, r2
 19698 00ba 9B00     		lsls	r3, r3, #2
 19699 00bc 1344     		add	r3, r3, r2
 19700 00be DB00     		lsls	r3, r3, #3
 19701 00c0 0B44     		add	r3, r3, r1
 19702 00c2 0633     		adds	r3, r3, #6
 19703 00c4 B3F90030 		ldrsh	r3, [r3]
 19704 00c8 07F10800 		add	r0, r7, #8
 19705 00cc 0093     		str	r3, [sp]
 19706 00ce 2B46     		mov	r3, r5
 19707 00d0 2246     		mov	r2, r4
 19708 00d2 A149     		ldr	r1, .L750+20
 19709 00d4 FFF7FEFF 		bl	sprintf
2624:..\src/command_processing.c ****             strcat(info_string, str);
 19710              		.loc 1 2624 0
 19711 00d8 07F10802 		add	r2, r7, #8
 19712 00dc 3B1D     		adds	r3, r7, #4
 19713 00de 1146     		mov	r1, r2
 19714 00e0 1868     		ldr	r0, [r3]
 19715 00e2 FFF7FEFF 		bl	strcat
 19716              	.L744:
2625:..\src/command_processing.c ****         }
2626:..\src/command_processing.c **** 
2627:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][1])){
 19717              		.loc 1 2627 0
 19718 00e6 984A     		ldr	r2, .L750+4
 19719 00e8 D7F83431 		ldr	r3, [r7, #308]
 19720 00ec 1344     		add	r3, r3, r2
 19721 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19722 00f0 1946     		mov	r1, r3
 19723 00f2 974A     		ldr	r2, .L750+12
 19724 00f4 0B46     		mov	r3, r1
 19725 00f6 9B00     		lsls	r3, r3, #2
 19726 00f8 0B44     		add	r3, r3, r1
 19727 00fa 1344     		add	r3, r3, r2
 19728 00fc 03F20323 		addw	r3, r3, #515
 19729 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19730 0102 002B     		cmp	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 433


 19731 0104 31D0     		beq	.L745
2628:..\src/command_processing.c ****             sprintf(str, "\tGyro: %d\t%d\t%d\r\n", (int16) g_imu[i].gyro_value[0], (int16) g_imu[i]
 19732              		.loc 1 2628 0
 19733 0106 9349     		ldr	r1, .L750+16
 19734 0108 D7F83421 		ldr	r2, [r7, #308]
 19735 010c 1346     		mov	r3, r2
 19736 010e 9B00     		lsls	r3, r3, #2
 19737 0110 1344     		add	r3, r3, r2
 19738 0112 DB00     		lsls	r3, r3, #3
 19739 0114 0B44     		add	r3, r3, r1
 19740 0116 0833     		adds	r3, r3, #8
 19741 0118 B3F90030 		ldrsh	r3, [r3]
 19742 011c 1C46     		mov	r4, r3
 19743 011e 8D49     		ldr	r1, .L750+16
 19744 0120 D7F83421 		ldr	r2, [r7, #308]
 19745 0124 1346     		mov	r3, r2
 19746 0126 9B00     		lsls	r3, r3, #2
 19747 0128 1344     		add	r3, r3, r2
 19748 012a DB00     		lsls	r3, r3, #3
 19749 012c 0B44     		add	r3, r3, r1
 19750 012e 0A33     		adds	r3, r3, #10
 19751 0130 B3F90030 		ldrsh	r3, [r3]
 19752 0134 1D46     		mov	r5, r3
 19753 0136 8749     		ldr	r1, .L750+16
 19754 0138 D7F83421 		ldr	r2, [r7, #308]
 19755 013c 1346     		mov	r3, r2
 19756 013e 9B00     		lsls	r3, r3, #2
 19757 0140 1344     		add	r3, r3, r2
 19758 0142 DB00     		lsls	r3, r3, #3
 19759 0144 0B44     		add	r3, r3, r1
 19760 0146 0C33     		adds	r3, r3, #12
 19761 0148 B3F90030 		ldrsh	r3, [r3]
 19762 014c 07F10800 		add	r0, r7, #8
 19763 0150 0093     		str	r3, [sp]
 19764 0152 2B46     		mov	r3, r5
 19765 0154 2246     		mov	r2, r4
 19766 0156 8149     		ldr	r1, .L750+24
 19767 0158 FFF7FEFF 		bl	sprintf
2629:..\src/command_processing.c ****             strcat(info_string, str);
 19768              		.loc 1 2629 0
 19769 015c 07F10802 		add	r2, r7, #8
 19770 0160 3B1D     		adds	r3, r7, #4
 19771 0162 1146     		mov	r1, r2
 19772 0164 1868     		ldr	r0, [r3]
 19773 0166 FFF7FEFF 		bl	strcat
 19774              	.L745:
2630:..\src/command_processing.c ****         }
2631:..\src/command_processing.c **** 
2632:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][2])){
 19775              		.loc 1 2632 0
 19776 016a 774A     		ldr	r2, .L750+4
 19777 016c D7F83431 		ldr	r3, [r7, #308]
 19778 0170 1344     		add	r3, r3, r2
 19779 0172 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19780 0174 1946     		mov	r1, r3
 19781 0176 764A     		ldr	r2, .L750+12
 19782 0178 0B46     		mov	r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 434


 19783 017a 9B00     		lsls	r3, r3, #2
 19784 017c 0B44     		add	r3, r3, r1
 19785 017e 1344     		add	r3, r3, r2
 19786 0180 03F50173 		add	r3, r3, #516
 19787 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19788 0186 002B     		cmp	r3, #0
 19789 0188 31D0     		beq	.L746
2633:..\src/command_processing.c ****             sprintf(str, "\tMag: %d\t%d\t%d\r\n", (int16) g_imu[i].mag_value[0], (int16) g_imu[i].m
 19790              		.loc 1 2633 0
 19791 018a 7249     		ldr	r1, .L750+16
 19792 018c D7F83421 		ldr	r2, [r7, #308]
 19793 0190 1346     		mov	r3, r2
 19794 0192 9B00     		lsls	r3, r3, #2
 19795 0194 1344     		add	r3, r3, r2
 19796 0196 DB00     		lsls	r3, r3, #3
 19797 0198 0B44     		add	r3, r3, r1
 19798 019a 0E33     		adds	r3, r3, #14
 19799 019c B3F90030 		ldrsh	r3, [r3]
 19800 01a0 1C46     		mov	r4, r3
 19801 01a2 6C49     		ldr	r1, .L750+16
 19802 01a4 D7F83421 		ldr	r2, [r7, #308]
 19803 01a8 1346     		mov	r3, r2
 19804 01aa 9B00     		lsls	r3, r3, #2
 19805 01ac 1344     		add	r3, r3, r2
 19806 01ae DB00     		lsls	r3, r3, #3
 19807 01b0 0B44     		add	r3, r3, r1
 19808 01b2 1033     		adds	r3, r3, #16
 19809 01b4 B3F90030 		ldrsh	r3, [r3]
 19810 01b8 1D46     		mov	r5, r3
 19811 01ba 6649     		ldr	r1, .L750+16
 19812 01bc D7F83421 		ldr	r2, [r7, #308]
 19813 01c0 1346     		mov	r3, r2
 19814 01c2 9B00     		lsls	r3, r3, #2
 19815 01c4 1344     		add	r3, r3, r2
 19816 01c6 DB00     		lsls	r3, r3, #3
 19817 01c8 0B44     		add	r3, r3, r1
 19818 01ca 1233     		adds	r3, r3, #18
 19819 01cc B3F90030 		ldrsh	r3, [r3]
 19820 01d0 07F10800 		add	r0, r7, #8
 19821 01d4 0093     		str	r3, [sp]
 19822 01d6 2B46     		mov	r3, r5
 19823 01d8 2246     		mov	r2, r4
 19824 01da 6149     		ldr	r1, .L750+28
 19825 01dc FFF7FEFF 		bl	sprintf
2634:..\src/command_processing.c ****             strcat(info_string, str);
 19826              		.loc 1 2634 0
 19827 01e0 07F10802 		add	r2, r7, #8
 19828 01e4 3B1D     		adds	r3, r7, #4
 19829 01e6 1146     		mov	r1, r2
 19830 01e8 1868     		ldr	r0, [r3]
 19831 01ea FFF7FEFF 		bl	strcat
 19832              	.L746:
2635:..\src/command_processing.c ****         }
2636:..\src/command_processing.c ****         
2637:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][3])){
 19833              		.loc 1 2637 0
 19834 01ee 564A     		ldr	r2, .L750+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 435


 19835 01f0 D7F83431 		ldr	r3, [r7, #308]
 19836 01f4 1344     		add	r3, r3, r2
 19837 01f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19838 01f8 1946     		mov	r1, r3
 19839 01fa 554A     		ldr	r2, .L750+12
 19840 01fc 0B46     		mov	r3, r1
 19841 01fe 9B00     		lsls	r3, r3, #2
 19842 0200 0B44     		add	r3, r3, r1
 19843 0202 1344     		add	r3, r3, r2
 19844 0204 03F20523 		addw	r3, r3, #517
 19845 0208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19846 020a 002B     		cmp	r3, #0
 19847 020c 4FD0     		beq	.L747
2638:..\src/command_processing.c ****             sprintf(str, "\tQuat: %.3f\t%.3f\t%.3f\t%.3f\r\n", (float) g_imu[i].quat_value[0], (flo
 19848              		.loc 1 2638 0
 19849 020e 5149     		ldr	r1, .L750+16
 19850 0210 D7F83421 		ldr	r2, [r7, #308]
 19851 0214 1346     		mov	r3, r2
 19852 0216 9B00     		lsls	r3, r3, #2
 19853 0218 1344     		add	r3, r3, r2
 19854 021a DB00     		lsls	r3, r3, #3
 19855 021c 0B44     		add	r3, r3, r1
 19856 021e 1433     		adds	r3, r3, #20
 19857 0220 1B68     		ldr	r3, [r3]	@ float
 19858 0222 1846     		mov	r0, r3
 19859 0224 FFF7FEFF 		bl	__aeabi_f2d
 19860 0228 8246     		mov	r10, r0
 19861 022a 8B46     		mov	fp, r1
 19862 022c 4949     		ldr	r1, .L750+16
 19863 022e D7F83421 		ldr	r2, [r7, #308]
 19864 0232 1346     		mov	r3, r2
 19865 0234 9B00     		lsls	r3, r3, #2
 19866 0236 1344     		add	r3, r3, r2
 19867 0238 DB00     		lsls	r3, r3, #3
 19868 023a 0B44     		add	r3, r3, r1
 19869 023c 1833     		adds	r3, r3, #24
 19870 023e 1B68     		ldr	r3, [r3]	@ float
 19871 0240 1846     		mov	r0, r3
 19872 0242 FFF7FEFF 		bl	__aeabi_f2d
 19873 0246 0446     		mov	r4, r0
 19874 0248 0D46     		mov	r5, r1
 19875 024a 4249     		ldr	r1, .L750+16
 19876 024c D7F83421 		ldr	r2, [r7, #308]
 19877 0250 1346     		mov	r3, r2
 19878 0252 9B00     		lsls	r3, r3, #2
 19879 0254 1344     		add	r3, r3, r2
 19880 0256 DB00     		lsls	r3, r3, #3
 19881 0258 0B44     		add	r3, r3, r1
 19882 025a 1C33     		adds	r3, r3, #28
 19883 025c 1B68     		ldr	r3, [r3]	@ float
 19884 025e 1846     		mov	r0, r3
 19885 0260 FFF7FEFF 		bl	__aeabi_f2d
 19886 0264 8046     		mov	r8, r0
 19887 0266 8946     		mov	r9, r1
 19888 0268 3A49     		ldr	r1, .L750+16
 19889 026a D7F83421 		ldr	r2, [r7, #308]
 19890 026e 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 436


 19891 0270 9B00     		lsls	r3, r3, #2
 19892 0272 1344     		add	r3, r3, r2
 19893 0274 DB00     		lsls	r3, r3, #3
 19894 0276 0B44     		add	r3, r3, r1
 19895 0278 2033     		adds	r3, r3, #32
 19896 027a 1B68     		ldr	r3, [r3]	@ float
 19897 027c 1846     		mov	r0, r3
 19898 027e FFF7FEFF 		bl	__aeabi_f2d
 19899 0282 0246     		mov	r2, r0
 19900 0284 0B46     		mov	r3, r1
 19901 0286 07F10800 		add	r0, r7, #8
 19902 028a CDE90423 		strd	r2, [sp, #16]
 19903 028e CDE90289 		strd	r8, [sp, #8]
 19904 0292 CDE90045 		strd	r4, [sp]
 19905 0296 5246     		mov	r2, r10
 19906 0298 5B46     		mov	r3, fp
 19907 029a 3249     		ldr	r1, .L750+32
 19908 029c FFF7FEFF 		bl	sprintf
2639:..\src/command_processing.c ****             strcat(info_string, str);
 19909              		.loc 1 2639 0
 19910 02a0 07F10802 		add	r2, r7, #8
 19911 02a4 3B1D     		adds	r3, r7, #4
 19912 02a6 1146     		mov	r1, r2
 19913 02a8 1868     		ldr	r0, [r3]
 19914 02aa FFF7FEFF 		bl	strcat
 19915              	.L747:
2640:..\src/command_processing.c ****         }
2641:..\src/command_processing.c ****         
2642:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][4])){
 19916              		.loc 1 2642 0
 19917 02ae 264A     		ldr	r2, .L750+4
 19918 02b0 D7F83431 		ldr	r3, [r7, #308]
 19919 02b4 1344     		add	r3, r3, r2
 19920 02b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19921 02b8 1946     		mov	r1, r3
 19922 02ba 254A     		ldr	r2, .L750+12
 19923 02bc 0B46     		mov	r3, r1
 19924 02be 9B00     		lsls	r3, r3, #2
 19925 02c0 0B44     		add	r3, r3, r1
 19926 02c2 1344     		add	r3, r3, r2
 19927 02c4 03F20623 		addw	r3, r3, #518
 19928 02c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19929 02ca 002B     		cmp	r3, #0
 19930 02cc 18D0     		beq	.L748
2643:..\src/command_processing.c ****             sprintf(str, "\tTemperature: %d\r\n", (int16) g_imu[i].temp_value);
 19931              		.loc 1 2643 0
 19932 02ce 2149     		ldr	r1, .L750+16
 19933 02d0 D7F83421 		ldr	r2, [r7, #308]
 19934 02d4 1346     		mov	r3, r2
 19935 02d6 9B00     		lsls	r3, r3, #2
 19936 02d8 1344     		add	r3, r3, r2
 19937 02da DB00     		lsls	r3, r3, #3
 19938 02dc 0B44     		add	r3, r3, r1
 19939 02de 2433     		adds	r3, r3, #36
 19940 02e0 B3F90030 		ldrsh	r3, [r3]
 19941 02e4 1A46     		mov	r2, r3
 19942 02e6 07F10803 		add	r3, r7, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 437


 19943 02ea 1F49     		ldr	r1, .L750+36
 19944 02ec 1846     		mov	r0, r3
 19945 02ee FFF7FEFF 		bl	sprintf
2644:..\src/command_processing.c ****             strcat(info_string, str);
 19946              		.loc 1 2644 0
 19947 02f2 07F10802 		add	r2, r7, #8
 19948 02f6 3B1D     		adds	r3, r7, #4
 19949 02f8 1146     		mov	r1, r2
 19950 02fa 1868     		ldr	r0, [r3]
 19951 02fc FFF7FEFF 		bl	strcat
 19952              	.L748:
2618:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 19953              		.loc 1 2618 0 discriminator 2
 19954 0300 D7F83431 		ldr	r3, [r7, #308]
 19955 0304 0133     		adds	r3, r3, #1
 19956 0306 C7F83431 		str	r3, [r7, #308]
 19957              	.L743:
2618:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 19958              		.loc 1 2618 0 is_stmt 0 discriminator 1
 19959 030a 184B     		ldr	r3, .L750+40
 19960 030c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19961 030e 1A46     		mov	r2, r3
 19962 0310 D7F83431 		ldr	r3, [r7, #308]
 19963 0314 9A42     		cmp	r2, r3
 19964 0316 3FF791AE 		bgt	.L749
2645:..\src/command_processing.c ****         }
2646:..\src/command_processing.c ****         
2647:..\src/command_processing.c ****     }
2648:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 19965              		.loc 1 2648 0 is_stmt 1
 19966 031a 3B1D     		adds	r3, r7, #4
 19967 031c 1868     		ldr	r0, [r3]
 19968 031e FFF7FEFF 		bl	strlen
 19969 0322 0346     		mov	r3, r0
 19970 0324 1A46     		mov	r2, r3
 19971 0326 3B1D     		adds	r3, r7, #4
 19972 0328 1B68     		ldr	r3, [r3]
 19973 032a 1344     		add	r3, r3, r2
 19974 032c 104A     		ldr	r2, .L750+44
 19975 032e 1188     		ldrh	r1, [r2]	@ unaligned
 19976 0330 9278     		ldrb	r2, [r2, #2]
 19977 0332 1980     		strh	r1, [r3]	@ unaligned
 19978 0334 9A70     		strb	r2, [r3, #2]
2649:..\src/command_processing.c **** }
 19979              		.loc 1 2649 0
 19980 0336 00BF     		nop
 19981 0338 07F59C77 		add	r7, r7, #312
 19982              		.cfi_def_cfa_offset 32
 19983 033c BD46     		mov	sp, r7
 19984              		.cfi_def_cfa_register 13
 19985              		@ sp needed
 19986 033e BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 19987              	.L751:
 19988 0342 00BF     		.align	2
 19989              	.L750:
 19990 0344 7C1A0000 		.word	.LC257
 19991 0348 00000000 		.word	IMU_connected
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 438


 19992 034c 2C160000 		.word	.LC216
 19993 0350 00000000 		.word	c_mem
 19994 0354 00000000 		.word	g_imu
 19995 0358 8C1A0000 		.word	.LC258
 19996 035c A01A0000 		.word	.LC259
 19997 0360 B41A0000 		.word	.LC260
 19998 0364 C81A0000 		.word	.LC261
 19999 0368 E81A0000 		.word	.LC262
 20000 036c 00000000 		.word	N_IMU_Connected
 20001 0370 A80E0000 		.word	.LC132
 20002              		.cfi_endproc
 20003              	.LFE77:
 20004              		.size	IMU_reading_info, .-IMU_reading_info
 20005              		.section	.text.commWrite_old_id,"ax",%progbits
 20006              		.align	2
 20007              		.global	commWrite_old_id
 20008              		.thumb
 20009              		.thumb_func
 20010              		.type	commWrite_old_id, %function
 20011              	commWrite_old_id:
 20012              	.LFB78:
2650:..\src/command_processing.c **** 
2651:..\src/command_processing.c **** //==============================================================================
2652:..\src/command_processing.c **** //                                                     WRITE FUNCTIONS FOR RS485
2653:..\src/command_processing.c **** //==============================================================================
2654:..\src/command_processing.c **** 
2655:..\src/command_processing.c **** void commWrite_old_id(uint8 *packet_data, uint16 packet_lenght, uint8 old_id)
2656:..\src/command_processing.c **** {
 20013              		.loc 1 2656 0
 20014              		.cfi_startproc
 20015              		@ args = 0, pretend = 0, frame = 16
 20016              		@ frame_needed = 1, uses_anonymous_args = 0
 20017 0000 80B5     		push	{r7, lr}
 20018              		.cfi_def_cfa_offset 8
 20019              		.cfi_offset 7, -8
 20020              		.cfi_offset 14, -4
 20021 0002 84B0     		sub	sp, sp, #16
 20022              		.cfi_def_cfa_offset 24
 20023 0004 00AF     		add	r7, sp, #0
 20024              		.cfi_def_cfa_register 7
 20025 0006 7860     		str	r0, [r7, #4]
 20026 0008 0B46     		mov	r3, r1
 20027 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 20028 000c 1346     		mov	r3, r2
 20029 000e 7B70     		strb	r3, [r7, #1]
2657:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2658:..\src/command_processing.c **** 
2659:..\src/command_processing.c ****     // frame - start
2660:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 20030              		.loc 1 2660 0
 20031 0010 3A20     		movs	r0, #58
 20032 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2661:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 20033              		.loc 1 2661 0
 20034 0016 3A20     		movs	r0, #58
 20035 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2662:..\src/command_processing.c ****     // frame - ID
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 439


2663:..\src/command_processing.c ****     //if(old_id)
2664:..\src/command_processing.c ****         UART_RS485_PutChar(old_id);
 20036              		.loc 1 2664 0
 20037 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 20038 001e 1846     		mov	r0, r3
 20039 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2665:..\src/command_processing.c ****     //else
2666:..\src/command_processing.c ****         //UART_RS485_PutChar(g_mem.id);
2667:..\src/command_processing.c ****         
2668:..\src/command_processing.c ****     // frame - length
2669:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 20040              		.loc 1 2669 0
 20041 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 20042 0026 DBB2     		uxtb	r3, r3
 20043 0028 1846     		mov	r0, r3
 20044 002a FFF7FEFF 		bl	UART_RS485_PutChar
2670:..\src/command_processing.c ****     // frame - packet data
2671:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 20045              		.loc 1 2671 0
 20046 002e 0023     		movs	r3, #0
 20047 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 20048 0032 09E0     		b	.L753
 20049              	.L754:
2672:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20050              		.loc 1 2672 0 discriminator 3
 20051 0034 FB89     		ldrh	r3, [r7, #14]
 20052 0036 7A68     		ldr	r2, [r7, #4]
 20053 0038 1344     		add	r3, r3, r2
 20054 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20055 003c 1846     		mov	r0, r3
 20056 003e FFF7FEFF 		bl	UART_RS485_PutChar
2671:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20057              		.loc 1 2671 0 discriminator 3
 20058 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 20059 0044 0133     		adds	r3, r3, #1
 20060 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 20061              	.L753:
2671:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20062              		.loc 1 2671 0 is_stmt 0 discriminator 1
 20063 0048 FA89     		ldrh	r2, [r7, #14]
 20064 004a 7B88     		ldrh	r3, [r7, #2]
 20065 004c 9A42     		cmp	r2, r3
 20066 004e F1D3     		bcc	.L754
2673:..\src/command_processing.c ****     }
2674:..\src/command_processing.c **** 
2675:..\src/command_processing.c ****     index = 0;
 20067              		.loc 1 2675 0 is_stmt 1
 20068 0050 0023     		movs	r3, #0
 20069 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2676:..\src/command_processing.c **** 
2677:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 20070              		.loc 1 2677 0
 20071 0054 00BF     		nop
 20072              	.L756:
 20073              		.loc 1 2677 0 is_stmt 0 discriminator 2
 20074 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 20075 005a 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 440


 20076 005c 03F00103 		and	r3, r3, #1
 20077 0060 002B     		cmp	r3, #0
 20078 0062 05D1     		bne	.L755
 20079              		.loc 1 2677 0 discriminator 1
 20080 0064 FB89     		ldrh	r3, [r7, #14]
 20081 0066 5A1C     		adds	r2, r3, #1
 20082 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 20083 006a B3F57A7F 		cmp	r3, #1000
 20084 006e F2D9     		bls	.L756
 20085              	.L755:
2678:..\src/command_processing.c **** 
2679:..\src/command_processing.c ****     RS485_CTS_Write(1);
 20086              		.loc 1 2679 0 is_stmt 1
 20087 0070 0120     		movs	r0, #1
 20088 0072 FFF7FEFF 		bl	RS485_CTS_Write
2680:..\src/command_processing.c ****     RS485_CTS_Write(0);
 20089              		.loc 1 2680 0
 20090 0076 0020     		movs	r0, #0
 20091 0078 FFF7FEFF 		bl	RS485_CTS_Write
2681:..\src/command_processing.c **** }
 20092              		.loc 1 2681 0
 20093 007c 00BF     		nop
 20094 007e 1037     		adds	r7, r7, #16
 20095              		.cfi_def_cfa_offset 8
 20096 0080 BD46     		mov	sp, r7
 20097              		.cfi_def_cfa_register 13
 20098              		@ sp needed
 20099 0082 80BD     		pop	{r7, pc}
 20100              		.cfi_endproc
 20101              	.LFE78:
 20102              		.size	commWrite_old_id, .-commWrite_old_id
 20103              		.section	.text.commWrite,"ax",%progbits
 20104              		.align	2
 20105              		.global	commWrite
 20106              		.thumb
 20107              		.thumb_func
 20108              		.type	commWrite, %function
 20109              	commWrite:
 20110              	.LFB79:
2682:..\src/command_processing.c **** 
2683:..\src/command_processing.c **** void commWrite(uint8 *packet_data, uint16 packet_lenght)
2684:..\src/command_processing.c **** {
 20111              		.loc 1 2684 0
 20112              		.cfi_startproc
 20113              		@ args = 0, pretend = 0, frame = 16
 20114              		@ frame_needed = 1, uses_anonymous_args = 0
 20115 0000 80B5     		push	{r7, lr}
 20116              		.cfi_def_cfa_offset 8
 20117              		.cfi_offset 7, -8
 20118              		.cfi_offset 14, -4
 20119 0002 84B0     		sub	sp, sp, #16
 20120              		.cfi_def_cfa_offset 24
 20121 0004 00AF     		add	r7, sp, #0
 20122              		.cfi_def_cfa_register 7
 20123 0006 7860     		str	r0, [r7, #4]
 20124 0008 0B46     		mov	r3, r1
 20125 000a 7B80     		strh	r3, [r7, #2]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 441


2685:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2686:..\src/command_processing.c **** 
2687:..\src/command_processing.c ****     // frame - start
2688:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 20126              		.loc 1 2688 0
 20127 000c 3A20     		movs	r0, #58
 20128 000e FFF7FEFF 		bl	UART_RS485_PutChar
2689:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 20129              		.loc 1 2689 0
 20130 0012 3A20     		movs	r0, #58
 20131 0014 FFF7FEFF 		bl	UART_RS485_PutChar
2690:..\src/command_processing.c ****     // frame - ID
2691:..\src/command_processing.c ****     UART_RS485_PutChar(g_mem.dev.id);
 20132              		.loc 1 2691 0
 20133 0018 1A4B     		ldr	r3, .L762
 20134 001a 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 20135 001e 1846     		mov	r0, r3
 20136 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2692:..\src/command_processing.c ****     // frame - length
2693:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 20137              		.loc 1 2693 0
 20138 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 20139 0026 DBB2     		uxtb	r3, r3
 20140 0028 1846     		mov	r0, r3
 20141 002a FFF7FEFF 		bl	UART_RS485_PutChar
2694:..\src/command_processing.c ****     // frame - packet data
2695:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 20142              		.loc 1 2695 0
 20143 002e 0023     		movs	r3, #0
 20144 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 20145 0032 09E0     		b	.L758
 20146              	.L759:
2696:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20147              		.loc 1 2696 0 discriminator 3
 20148 0034 FB89     		ldrh	r3, [r7, #14]
 20149 0036 7A68     		ldr	r2, [r7, #4]
 20150 0038 1344     		add	r3, r3, r2
 20151 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20152 003c 1846     		mov	r0, r3
 20153 003e FFF7FEFF 		bl	UART_RS485_PutChar
2695:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20154              		.loc 1 2695 0 discriminator 3
 20155 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 20156 0044 0133     		adds	r3, r3, #1
 20157 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 20158              	.L758:
2695:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20159              		.loc 1 2695 0 is_stmt 0 discriminator 1
 20160 0048 FA89     		ldrh	r2, [r7, #14]
 20161 004a 7B88     		ldrh	r3, [r7, #2]
 20162 004c 9A42     		cmp	r2, r3
 20163 004e F1D3     		bcc	.L759
2697:..\src/command_processing.c ****     }
2698:..\src/command_processing.c **** 
2699:..\src/command_processing.c ****     index = 0;
 20164              		.loc 1 2699 0 is_stmt 1
 20165 0050 0023     		movs	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 442


 20166 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2700:..\src/command_processing.c **** 
2701:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 20167              		.loc 1 2701 0
 20168 0054 00BF     		nop
 20169              	.L761:
 20170              		.loc 1 2701 0 is_stmt 0 discriminator 2
 20171 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 20172 005a 0346     		mov	r3, r0
 20173 005c 03F00103 		and	r3, r3, #1
 20174 0060 002B     		cmp	r3, #0
 20175 0062 05D1     		bne	.L760
 20176              		.loc 1 2701 0 discriminator 1
 20177 0064 FB89     		ldrh	r3, [r7, #14]
 20178 0066 5A1C     		adds	r2, r3, #1
 20179 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 20180 006a B3F57A7F 		cmp	r3, #1000
 20181 006e F2D9     		bls	.L761
 20182              	.L760:
2702:..\src/command_processing.c **** 
2703:..\src/command_processing.c ****     RS485_CTS_Write(1);
 20183              		.loc 1 2703 0 is_stmt 1
 20184 0070 0120     		movs	r0, #1
 20185 0072 FFF7FEFF 		bl	RS485_CTS_Write
2704:..\src/command_processing.c ****     RS485_CTS_Write(0);
 20186              		.loc 1 2704 0
 20187 0076 0020     		movs	r0, #0
 20188 0078 FFF7FEFF 		bl	RS485_CTS_Write
2705:..\src/command_processing.c **** }
 20189              		.loc 1 2705 0
 20190 007c 00BF     		nop
 20191 007e 1037     		adds	r7, r7, #16
 20192              		.cfi_def_cfa_offset 8
 20193 0080 BD46     		mov	sp, r7
 20194              		.cfi_def_cfa_register 13
 20195              		@ sp needed
 20196 0082 80BD     		pop	{r7, pc}
 20197              	.L763:
 20198              		.align	2
 20199              	.L762:
 20200 0084 00000000 		.word	g_mem
 20201              		.cfi_endproc
 20202              	.LFE79:
 20203              		.size	commWrite, .-commWrite
 20204              		.section	.text.commWriteID,"ax",%progbits
 20205              		.align	2
 20206              		.global	commWriteID
 20207              		.thumb
 20208              		.thumb_func
 20209              		.type	commWriteID, %function
 20210              	commWriteID:
 20211              	.LFB80:
2706:..\src/command_processing.c **** 
2707:..\src/command_processing.c **** //==============================================================================
2708:..\src/command_processing.c **** //                                             WRITE FUNCTION FOR ANOTHER DEVICE
2709:..\src/command_processing.c **** //==============================================================================
2710:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 443


2711:..\src/command_processing.c **** void commWriteID(uint8 *packet_data, uint16 packet_lenght, uint8 id)
2712:..\src/command_processing.c **** {
 20212              		.loc 1 2712 0
 20213              		.cfi_startproc
 20214              		@ args = 0, pretend = 0, frame = 8
 20215              		@ frame_needed = 1, uses_anonymous_args = 0
 20216 0000 80B5     		push	{r7, lr}
 20217              		.cfi_def_cfa_offset 8
 20218              		.cfi_offset 7, -8
 20219              		.cfi_offset 14, -4
 20220 0002 82B0     		sub	sp, sp, #8
 20221              		.cfi_def_cfa_offset 16
 20222 0004 00AF     		add	r7, sp, #0
 20223              		.cfi_def_cfa_register 7
 20224 0006 7860     		str	r0, [r7, #4]
 20225 0008 0B46     		mov	r3, r1
 20226 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 20227 000c 1346     		mov	r3, r2
 20228 000e 7B70     		strb	r3, [r7, #1]
2713:..\src/command_processing.c ****     static uint16 CYDATA i;    // iterator
2714:..\src/command_processing.c **** 
2715:..\src/command_processing.c ****     // frame - start
2716:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 20229              		.loc 1 2716 0
 20230 0010 3A20     		movs	r0, #58
 20231 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2717:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 20232              		.loc 1 2717 0
 20233 0016 3A20     		movs	r0, #58
 20234 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2718:..\src/command_processing.c ****     // frame - ID
2719:..\src/command_processing.c ****     UART_RS485_PutChar(id);
 20235              		.loc 1 2719 0
 20236 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 20237 001e 1846     		mov	r0, r3
 20238 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2720:..\src/command_processing.c ****     // frame - length
2721:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 20239              		.loc 1 2721 0
 20240 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 20241 0026 DBB2     		uxtb	r3, r3
 20242 0028 1846     		mov	r0, r3
 20243 002a FFF7FEFF 		bl	UART_RS485_PutChar
2722:..\src/command_processing.c ****     // frame - packet data
2723:..\src/command_processing.c ****     for(i = 0; i < packet_lenght; ++i) {
 20244              		.loc 1 2723 0
 20245 002e 1B4B     		ldr	r3, .L769
 20246 0030 0022     		movs	r2, #0
 20247 0032 1A80     		strh	r2, [r3]	@ movhi
 20248 0034 0EE0     		b	.L765
 20249              	.L766:
2724:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 20250              		.loc 1 2724 0 discriminator 3
 20251 0036 194B     		ldr	r3, .L769
 20252 0038 1B88     		ldrh	r3, [r3]
 20253 003a 1A46     		mov	r2, r3
 20254 003c 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 444


 20255 003e 1344     		add	r3, r3, r2
 20256 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20257 0042 1846     		mov	r0, r3
 20258 0044 FFF7FEFF 		bl	UART_RS485_PutChar
2723:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 20259              		.loc 1 2723 0 discriminator 3
 20260 0048 144B     		ldr	r3, .L769
 20261 004a 1B88     		ldrh	r3, [r3]
 20262 004c 0133     		adds	r3, r3, #1
 20263 004e 9AB2     		uxth	r2, r3
 20264 0050 124B     		ldr	r3, .L769
 20265 0052 1A80     		strh	r2, [r3]	@ movhi
 20266              	.L765:
2723:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 20267              		.loc 1 2723 0 is_stmt 0 discriminator 1
 20268 0054 114B     		ldr	r3, .L769
 20269 0056 1B88     		ldrh	r3, [r3]
 20270 0058 7A88     		ldrh	r2, [r7, #2]
 20271 005a 9A42     		cmp	r2, r3
 20272 005c EBD8     		bhi	.L766
2725:..\src/command_processing.c ****     }
2726:..\src/command_processing.c **** 
2727:..\src/command_processing.c ****     i = 0;
 20273              		.loc 1 2727 0 is_stmt 1
 20274 005e 0F4B     		ldr	r3, .L769
 20275 0060 0022     		movs	r2, #0
 20276 0062 1A80     		strh	r2, [r3]	@ movhi
2728:..\src/command_processing.c **** 
2729:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && i++ <= 1000){}
 20277              		.loc 1 2729 0
 20278 0064 00BF     		nop
 20279              	.L768:
 20280              		.loc 1 2729 0 is_stmt 0 discriminator 2
 20281 0066 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 20282 006a 0346     		mov	r3, r0
 20283 006c 03F00103 		and	r3, r3, #1
 20284 0070 002B     		cmp	r3, #0
 20285 0072 08D1     		bne	.L767
 20286              		.loc 1 2729 0 discriminator 1
 20287 0074 094B     		ldr	r3, .L769
 20288 0076 1B88     		ldrh	r3, [r3]
 20289 0078 5A1C     		adds	r2, r3, #1
 20290 007a 91B2     		uxth	r1, r2
 20291 007c 074A     		ldr	r2, .L769
 20292 007e 1180     		strh	r1, [r2]	@ movhi
 20293 0080 B3F57A7F 		cmp	r3, #1000
 20294 0084 EFD9     		bls	.L768
 20295              	.L767:
2730:..\src/command_processing.c ****     
2731:..\src/command_processing.c ****     RS485_CTS_Write(1);
 20296              		.loc 1 2731 0 is_stmt 1
 20297 0086 0120     		movs	r0, #1
 20298 0088 FFF7FEFF 		bl	RS485_CTS_Write
2732:..\src/command_processing.c ****     RS485_CTS_Write(0);
 20299              		.loc 1 2732 0
 20300 008c 0020     		movs	r0, #0
 20301 008e FFF7FEFF 		bl	RS485_CTS_Write
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 445


2733:..\src/command_processing.c **** }
 20302              		.loc 1 2733 0
 20303 0092 00BF     		nop
 20304 0094 0837     		adds	r7, r7, #8
 20305              		.cfi_def_cfa_offset 8
 20306 0096 BD46     		mov	sp, r7
 20307              		.cfi_def_cfa_register 13
 20308              		@ sp needed
 20309 0098 80BD     		pop	{r7, pc}
 20310              	.L770:
 20311 009a 00BF     		.align	2
 20312              	.L769:
 20313 009c 00000000 		.word	i.11142
 20314              		.cfi_endproc
 20315              	.LFE80:
 20316              		.size	commWriteID, .-commWriteID
 20317              		.section	.text.LCRChecksum,"ax",%progbits
 20318              		.align	2
 20319              		.global	LCRChecksum
 20320              		.thumb
 20321              		.thumb_func
 20322              		.type	LCRChecksum, %function
 20323              	LCRChecksum:
 20324              	.LFB81:
2734:..\src/command_processing.c **** 
2735:..\src/command_processing.c **** //==============================================================================
2736:..\src/command_processing.c **** //                                                             CHECKSUM FUNCTION
2737:..\src/command_processing.c **** //==============================================================================
2738:..\src/command_processing.c **** 
2739:..\src/command_processing.c **** // Performs a XOR byte by byte on the entire vector
2740:..\src/command_processing.c **** 
2741:..\src/command_processing.c **** uint8 LCRChecksum(uint8 *data_array, uint8 data_length) {
 20325              		.loc 1 2741 0
 20326              		.cfi_startproc
 20327              		@ args = 0, pretend = 0, frame = 16
 20328              		@ frame_needed = 1, uses_anonymous_args = 0
 20329              		@ link register save eliminated.
 20330 0000 80B4     		push	{r7}
 20331              		.cfi_def_cfa_offset 4
 20332              		.cfi_offset 7, -4
 20333 0002 85B0     		sub	sp, sp, #20
 20334              		.cfi_def_cfa_offset 24
 20335 0004 00AF     		add	r7, sp, #0
 20336              		.cfi_def_cfa_register 7
 20337 0006 7860     		str	r0, [r7, #4]
 20338 0008 0B46     		mov	r3, r1
 20339 000a FB70     		strb	r3, [r7, #3]
2742:..\src/command_processing.c ****     
2743:..\src/command_processing.c ****     uint8 CYDATA i;
2744:..\src/command_processing.c ****     uint8 CYDATA checksum = 0x00;
 20340              		.loc 1 2744 0
 20341 000c 0023     		movs	r3, #0
 20342 000e BB73     		strb	r3, [r7, #14]
2745:..\src/command_processing.c ****     
2746:..\src/command_processing.c ****     for(i = 0; i < data_length; ++i)
 20343              		.loc 1 2746 0
 20344 0010 0023     		movs	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 446


 20345 0012 FB73     		strb	r3, [r7, #15]
 20346 0014 09E0     		b	.L772
 20347              	.L773:
2747:..\src/command_processing.c ****        checksum ^= data_array[i];
 20348              		.loc 1 2747 0 discriminator 3
 20349 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 20350 0018 7A68     		ldr	r2, [r7, #4]
 20351 001a 1344     		add	r3, r3, r2
 20352 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 20353 001e BB7B     		ldrb	r3, [r7, #14]
 20354 0020 5340     		eors	r3, r3, r2
 20355 0022 BB73     		strb	r3, [r7, #14]
2746:..\src/command_processing.c ****        checksum ^= data_array[i];
 20356              		.loc 1 2746 0 discriminator 3
 20357 0024 FB7B     		ldrb	r3, [r7, #15]
 20358 0026 0133     		adds	r3, r3, #1
 20359 0028 FB73     		strb	r3, [r7, #15]
 20360              	.L772:
2746:..\src/command_processing.c ****        checksum ^= data_array[i];
 20361              		.loc 1 2746 0 is_stmt 0 discriminator 1
 20362 002a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 20363 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 20364 002e 9A42     		cmp	r2, r3
 20365 0030 F1D3     		bcc	.L773
2748:..\src/command_processing.c ****   
2749:..\src/command_processing.c ****     return checksum;
 20366              		.loc 1 2749 0 is_stmt 1
 20367 0032 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
2750:..\src/command_processing.c **** }
 20368              		.loc 1 2750 0
 20369 0034 1846     		mov	r0, r3
 20370 0036 1437     		adds	r7, r7, #20
 20371              		.cfi_def_cfa_offset 4
 20372 0038 BD46     		mov	sp, r7
 20373              		.cfi_def_cfa_register 13
 20374              		@ sp needed
 20375 003a 80BC     		pop	{r7}
 20376              		.cfi_restore 7
 20377              		.cfi_def_cfa_offset 0
 20378 003c 7047     		bx	lr
 20379              		.cfi_endproc
 20380              	.LFE81:
 20381              		.size	LCRChecksum, .-LCRChecksum
 20382 003e 00BF     		.section	.text.sendAcknowledgment,"ax",%progbits
 20383              		.align	2
 20384              		.global	sendAcknowledgment
 20385              		.thumb
 20386              		.thumb_func
 20387              		.type	sendAcknowledgment, %function
 20388              	sendAcknowledgment:
 20389              	.LFB82:
2751:..\src/command_processing.c **** 
2752:..\src/command_processing.c **** 
2753:..\src/command_processing.c **** //==============================================================================
2754:..\src/command_processing.c **** //                                                       ACKNOWLEDGMENT FUNCTION
2755:..\src/command_processing.c **** //==============================================================================
2756:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 447


2757:..\src/command_processing.c **** void sendAcknowledgment(uint8 value) {
 20390              		.loc 1 2757 0
 20391              		.cfi_startproc
 20392              		@ args = 0, pretend = 0, frame = 16
 20393              		@ frame_needed = 1, uses_anonymous_args = 0
 20394 0000 80B5     		push	{r7, lr}
 20395              		.cfi_def_cfa_offset 8
 20396              		.cfi_offset 7, -8
 20397              		.cfi_offset 14, -4
 20398 0002 84B0     		sub	sp, sp, #16
 20399              		.cfi_def_cfa_offset 24
 20400 0004 00AF     		add	r7, sp, #0
 20401              		.cfi_def_cfa_register 7
 20402 0006 0346     		mov	r3, r0
 20403 0008 FB71     		strb	r3, [r7, #7]
2758:..\src/command_processing.c ****     int packet_lenght = 2;
 20404              		.loc 1 2758 0
 20405 000a 0223     		movs	r3, #2
 20406 000c FB60     		str	r3, [r7, #12]
2759:..\src/command_processing.c ****     uint8 packet_data[2];
2760:..\src/command_processing.c **** 
2761:..\src/command_processing.c ****     packet_data[0] = value;
 20407              		.loc 1 2761 0
 20408 000e FB79     		ldrb	r3, [r7, #7]
 20409 0010 3B72     		strb	r3, [r7, #8]
2762:..\src/command_processing.c ****     packet_data[1] = value;
 20410              		.loc 1 2762 0
 20411 0012 FB79     		ldrb	r3, [r7, #7]
 20412 0014 7B72     		strb	r3, [r7, #9]
2763:..\src/command_processing.c **** 
2764:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 20413              		.loc 1 2764 0
 20414 0016 FB68     		ldr	r3, [r7, #12]
 20415 0018 9AB2     		uxth	r2, r3
 20416 001a 07F10803 		add	r3, r7, #8
 20417 001e 1146     		mov	r1, r2
 20418 0020 1846     		mov	r0, r3
 20419 0022 FFF7FEFF 		bl	commWrite
2765:..\src/command_processing.c **** }
 20420              		.loc 1 2765 0
 20421 0026 00BF     		nop
 20422 0028 1037     		adds	r7, r7, #16
 20423              		.cfi_def_cfa_offset 8
 20424 002a BD46     		mov	sp, r7
 20425              		.cfi_def_cfa_register 13
 20426              		@ sp needed
 20427 002c 80BD     		pop	{r7, pc}
 20428              		.cfi_endproc
 20429              	.LFE82:
 20430              		.size	sendAcknowledgment, .-sendAcknowledgment
 20431 002e 00BF     		.section	.text.memStore,"ax",%progbits
 20432              		.align	2
 20433              		.global	memStore
 20434              		.thumb
 20435              		.thumb_func
 20436              		.type	memStore, %function
 20437              	memStore:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 448


 20438              	.LFB83:
2766:..\src/command_processing.c **** 
2767:..\src/command_processing.c **** //==============================================================================
2768:..\src/command_processing.c **** //                                                                  STORE MEMORY
2769:..\src/command_processing.c **** //==============================================================================
2770:..\src/command_processing.c **** 
2771:..\src/command_processing.c **** 
2772:..\src/command_processing.c **** uint8 memStore(int displacement)
2773:..\src/command_processing.c **** {
 20439              		.loc 1 2773 0
 20440              		.cfi_startproc
 20441              		@ args = 0, pretend = 0, frame = 24
 20442              		@ frame_needed = 1, uses_anonymous_args = 0
 20443 0000 80B5     		push	{r7, lr}
 20444              		.cfi_def_cfa_offset 8
 20445              		.cfi_offset 7, -8
 20446              		.cfi_offset 14, -4
 20447 0002 86B0     		sub	sp, sp, #24
 20448              		.cfi_def_cfa_offset 32
 20449 0004 00AF     		add	r7, sp, #0
 20450              		.cfi_def_cfa_register 7
 20451 0006 7860     		str	r0, [r7, #4]
2774:..\src/command_processing.c ****     int i;  // iterator
2775:..\src/command_processing.c ****     uint8 writeStatus;
2776:..\src/command_processing.c ****     int pages;
2777:..\src/command_processing.c ****     uint8 ret_val = 1;
 20452              		.loc 1 2777 0
 20453 0008 0123     		movs	r3, #1
 20454 000a FB74     		strb	r3, [r7, #19]
2778:..\src/command_processing.c **** 
2779:..\src/command_processing.c ****     // Disable Interrupt
2780:..\src/command_processing.c ****     ISR_RS485_RX_Disable();
 20455              		.loc 1 2780 0
 20456 000c FFF7FEFF 		bl	ISR_RS485_RX_Disable
2781:..\src/command_processing.c **** 
2782:..\src/command_processing.c ****     // Stop motor
2783:..\src/command_processing.c ****     PWM_MOTORS_WriteCompare1(0);
 20457              		.loc 1 2783 0
 20458 0010 0020     		movs	r0, #0
 20459 0012 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
2784:..\src/command_processing.c **** 
2785:..\src/command_processing.c ****     // Retrieve temperature for better writing performance
2786:..\src/command_processing.c ****     CySetTemp();
 20460              		.loc 1 2786 0
 20461 0016 FFF7FEFF 		bl	CySetTemp
2787:..\src/command_processing.c **** 
2788:..\src/command_processing.c ****     memcpy( &c_mem, &g_mem, sizeof(g_mem) );
 20462              		.loc 1 2788 0
 20463 001a 1D4A     		ldr	r2, .L782
 20464 001c 1D4B     		ldr	r3, .L782+4
 20465 001e 1046     		mov	r0, r2
 20466 0020 1946     		mov	r1, r3
 20467 0022 4FF43473 		mov	r3, #720
 20468 0026 1A46     		mov	r2, r3
 20469 0028 FFF7FEFF 		bl	memcpy
2789:..\src/command_processing.c **** 
2790:..\src/command_processing.c ****     pages = sizeof(g_mem) / 16 + (sizeof(g_mem) % 16 > 0);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 449


 20470              		.loc 1 2790 0
 20471 002c 2D23     		movs	r3, #45
 20472 002e FB60     		str	r3, [r7, #12]
2791:..\src/command_processing.c **** 
2792:..\src/command_processing.c ****     for(i = 0; i < pages; ++i) {
 20473              		.loc 1 2792 0
 20474 0030 0023     		movs	r3, #0
 20475 0032 7B61     		str	r3, [r7, #20]
 20476 0034 18E0     		b	.L777
 20477              	.L780:
2793:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 20478              		.loc 1 2793 0
 20479 0036 7B69     		ldr	r3, [r7, #20]
 20480 0038 1B01     		lsls	r3, r3, #4
 20481 003a 1A46     		mov	r2, r3
 20482 003c 154B     		ldr	r3, .L782+4
 20483 003e D018     		adds	r0, r2, r3
 20484 0040 7B69     		ldr	r3, [r7, #20]
 20485 0042 DAB2     		uxtb	r2, r3
 20486 0044 7B68     		ldr	r3, [r7, #4]
 20487 0046 DBB2     		uxtb	r3, r3
 20488 0048 1344     		add	r3, r3, r2
 20489 004a DBB2     		uxtb	r3, r3
 20490 004c 1946     		mov	r1, r3
 20491 004e FFF7FEFF 		bl	EEPROM_Write
 20492 0052 0346     		mov	r3, r0
 20493 0054 FB72     		strb	r3, [r7, #11]
2794:..\src/command_processing.c ****         if(writeStatus != CYRET_SUCCESS) {
 20494              		.loc 1 2794 0
 20495 0056 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 20496 0058 002B     		cmp	r3, #0
 20497 005a 02D0     		beq	.L778
2795:..\src/command_processing.c ****             ret_val = 0;
 20498              		.loc 1 2795 0
 20499 005c 0023     		movs	r3, #0
 20500 005e FB74     		strb	r3, [r7, #19]
2796:..\src/command_processing.c ****             break;
 20501              		.loc 1 2796 0
 20502 0060 06E0     		b	.L779
 20503              	.L778:
2792:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 20504              		.loc 1 2792 0 discriminator 2
 20505 0062 7B69     		ldr	r3, [r7, #20]
 20506 0064 0133     		adds	r3, r3, #1
 20507 0066 7B61     		str	r3, [r7, #20]
 20508              	.L777:
2792:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 20509              		.loc 1 2792 0 is_stmt 0 discriminator 1
 20510 0068 7A69     		ldr	r2, [r7, #20]
 20511 006a FB68     		ldr	r3, [r7, #12]
 20512 006c 9A42     		cmp	r2, r3
 20513 006e E2DB     		blt	.L780
 20514              	.L779:
2797:..\src/command_processing.c ****         }
2798:..\src/command_processing.c ****     }
2799:..\src/command_processing.c **** 
2800:..\src/command_processing.c ****     memcpy( &g_mem, &c_mem, sizeof(g_mem) );
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 450


 20515              		.loc 1 2800 0 is_stmt 1
 20516 0070 084A     		ldr	r2, .L782+4
 20517 0072 074B     		ldr	r3, .L782
 20518 0074 1046     		mov	r0, r2
 20519 0076 1946     		mov	r1, r3
 20520 0078 4FF43473 		mov	r3, #720
 20521 007c 1A46     		mov	r2, r3
 20522 007e FFF7FEFF 		bl	memcpy
2801:..\src/command_processing.c **** 
2802:..\src/command_processing.c ****     // Re-Enable Interrupt
2803:..\src/command_processing.c ****     ISR_RS485_RX_Enable();
 20523              		.loc 1 2803 0
 20524 0082 FFF7FEFF 		bl	ISR_RS485_RX_Enable
2804:..\src/command_processing.c **** 
2805:..\src/command_processing.c ****     return ret_val;
 20525              		.loc 1 2805 0
 20526 0086 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
2806:..\src/command_processing.c **** }
 20527              		.loc 1 2806 0
 20528 0088 1846     		mov	r0, r3
 20529 008a 1837     		adds	r7, r7, #24
 20530              		.cfi_def_cfa_offset 8
 20531 008c BD46     		mov	sp, r7
 20532              		.cfi_def_cfa_register 13
 20533              		@ sp needed
 20534 008e 80BD     		pop	{r7, pc}
 20535              	.L783:
 20536              		.align	2
 20537              	.L782:
 20538 0090 00000000 		.word	c_mem
 20539 0094 00000000 		.word	g_mem
 20540              		.cfi_endproc
 20541              	.LFE83:
 20542              		.size	memStore, .-memStore
 20543              		.section	.text.memRecall,"ax",%progbits
 20544              		.align	2
 20545              		.global	memRecall
 20546              		.thumb
 20547              		.thumb_func
 20548              		.type	memRecall, %function
 20549              	memRecall:
 20550              	.LFB84:
2807:..\src/command_processing.c **** 
2808:..\src/command_processing.c **** 
2809:..\src/command_processing.c **** //==============================================================================
2810:..\src/command_processing.c **** //                                                                 RECALL MEMORY
2811:..\src/command_processing.c **** //==============================================================================
2812:..\src/command_processing.c **** 
2813:..\src/command_processing.c **** 
2814:..\src/command_processing.c **** void memRecall(void)
2815:..\src/command_processing.c **** {
 20551              		.loc 1 2815 0
 20552              		.cfi_startproc
 20553              		@ args = 0, pretend = 0, frame = 8
 20554              		@ frame_needed = 1, uses_anonymous_args = 0
 20555 0000 80B5     		push	{r7, lr}
 20556              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 451


 20557              		.cfi_offset 7, -8
 20558              		.cfi_offset 14, -4
 20559 0002 82B0     		sub	sp, sp, #8
 20560              		.cfi_def_cfa_offset 16
 20561 0004 00AF     		add	r7, sp, #0
 20562              		.cfi_def_cfa_register 7
2816:..\src/command_processing.c ****     uint16 i;
2817:..\src/command_processing.c **** 
2818:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 20563              		.loc 1 2818 0
 20564 0006 0023     		movs	r3, #0
 20565 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 20566 000a 0CE0     		b	.L785
 20567              	.L786:
2819:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 20568              		.loc 1 2819 0 discriminator 3
 20569 000c FB88     		ldrh	r3, [r7, #6]
 20570 000e 184A     		ldr	r2, .L790
 20571 0010 1344     		add	r3, r3, r2
 20572 0012 184A     		ldr	r2, .L790+4
 20573 0014 1168     		ldr	r1, [r2]
 20574 0016 FA88     		ldrh	r2, [r7, #6]
 20575 0018 0A44     		add	r2, r2, r1
 20576 001a 1278     		ldrb	r2, [r2]
 20577 001c D2B2     		uxtb	r2, r2
 20578 001e 1A70     		strb	r2, [r3]
2818:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 20579              		.loc 1 2818 0 discriminator 3
 20580 0020 FB88     		ldrh	r3, [r7, #6]
 20581 0022 0133     		adds	r3, r3, #1
 20582 0024 FB80     		strh	r3, [r7, #6]	@ movhi
 20583              	.L785:
2818:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 20584              		.loc 1 2818 0 is_stmt 0 discriminator 1
 20585 0026 FB88     		ldrh	r3, [r7, #6]
 20586 0028 B3F5347F 		cmp	r3, #720
 20587 002c EED3     		bcc	.L786
2820:..\src/command_processing.c ****     }
2821:..\src/command_processing.c ****     
2822:..\src/command_processing.c ****     // Recall saved user_emg structure
2823:..\src/command_processing.c ****     memcpy( &(g_mem.emg), &(g_mem.user[g_mem.dev.user_id].user_emg), sizeof(g_mem.emg) );
 20588              		.loc 1 2823 0 is_stmt 1
 20589 002e 104B     		ldr	r3, .L790
 20590 0030 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 20591 0034 5B01     		lsls	r3, r3, #5
 20592 0036 03F51273 		add	r3, r3, #584
 20593 003a 0D4A     		ldr	r2, .L790
 20594 003c 1344     		add	r3, r3, r2
 20595 003e 1022     		movs	r2, #16
 20596 0040 1946     		mov	r1, r3
 20597 0042 0D48     		ldr	r0, .L790+8
 20598 0044 FFF7FEFF 		bl	memcpy
2824:..\src/command_processing.c **** 
2825:..\src/command_processing.c ****     //check for initialization
2826:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 20599              		.loc 1 2826 0
 20600 0048 094B     		ldr	r3, .L790
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 452


 20601 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20602 004c 002B     		cmp	r3, #0
 20603 004e 02D1     		bne	.L787
2827:..\src/command_processing.c ****         memRestore();
 20604              		.loc 1 2827 0
 20605 0050 FFF7FEFF 		bl	memRestore
2828:..\src/command_processing.c ****     } else {
2829:..\src/command_processing.c ****         memcpy( &c_mem, &g_mem, sizeof(g_mem) );
2830:..\src/command_processing.c ****     }        
2831:..\src/command_processing.c **** }
 20606              		.loc 1 2831 0
 20607 0054 08E0     		b	.L789
 20608              	.L787:
2829:..\src/command_processing.c ****     }        
 20609              		.loc 1 2829 0
 20610 0056 094A     		ldr	r2, .L790+12
 20611 0058 054B     		ldr	r3, .L790
 20612 005a 1046     		mov	r0, r2
 20613 005c 1946     		mov	r1, r3
 20614 005e 4FF43473 		mov	r3, #720
 20615 0062 1A46     		mov	r2, r3
 20616 0064 FFF7FEFF 		bl	memcpy
 20617              	.L789:
 20618              		.loc 1 2831 0
 20619 0068 00BF     		nop
 20620 006a 0837     		adds	r7, r7, #8
 20621              		.cfi_def_cfa_offset 8
 20622 006c BD46     		mov	sp, r7
 20623              		.cfi_def_cfa_register 13
 20624              		@ sp needed
 20625 006e 80BD     		pop	{r7, pc}
 20626              	.L791:
 20627              		.align	2
 20628              	.L790:
 20629 0070 00000000 		.word	g_mem
 20630 0074 00000000 		.word	EEPROM_ADDR
 20631 0078 F0010000 		.word	g_mem+496
 20632 007c 00000000 		.word	c_mem
 20633              		.cfi_endproc
 20634              	.LFE84:
 20635              		.size	memRecall, .-memRecall
 20636              		.section	.text.memRestore,"ax",%progbits
 20637              		.align	2
 20638              		.global	memRestore
 20639              		.thumb
 20640              		.thumb_func
 20641              		.type	memRestore, %function
 20642              	memRestore:
 20643              	.LFB85:
2832:..\src/command_processing.c **** 
2833:..\src/command_processing.c **** 
2834:..\src/command_processing.c **** //==============================================================================
2835:..\src/command_processing.c **** //                                                                RESTORE MEMORY
2836:..\src/command_processing.c **** //==============================================================================
2837:..\src/command_processing.c **** 
2838:..\src/command_processing.c **** 
2839:..\src/command_processing.c **** uint8 memRestore(void) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 453


 20644              		.loc 1 2839 0
 20645              		.cfi_startproc
 20646              		@ args = 0, pretend = 0, frame = 8
 20647              		@ frame_needed = 1, uses_anonymous_args = 0
 20648 0000 80B5     		push	{r7, lr}
 20649              		.cfi_def_cfa_offset 8
 20650              		.cfi_offset 7, -8
 20651              		.cfi_offset 14, -4
 20652 0002 82B0     		sub	sp, sp, #8
 20653              		.cfi_def_cfa_offset 16
 20654 0004 00AF     		add	r7, sp, #0
 20655              		.cfi_def_cfa_register 7
2840:..\src/command_processing.c ****     uint16 i;
2841:..\src/command_processing.c **** 
2842:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 20656              		.loc 1 2842 0
 20657 0006 0023     		movs	r3, #0
 20658 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 20659 000a 0EE0     		b	.L793
 20660              	.L794:
2843:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 20661              		.loc 1 2843 0 discriminator 3
 20662 000c FB88     		ldrh	r3, [r7, #6]
 20663 000e 114A     		ldr	r2, .L797
 20664 0010 1344     		add	r3, r3, r2
 20665 0012 114A     		ldr	r2, .L797+4
 20666 0014 1168     		ldr	r1, [r2]
 20667 0016 FA88     		ldrh	r2, [r7, #6]
 20668 0018 02F54872 		add	r2, r2, #800
 20669 001c 0A44     		add	r2, r2, r1
 20670 001e 1278     		ldrb	r2, [r2]
 20671 0020 D2B2     		uxtb	r2, r2
 20672 0022 1A70     		strb	r2, [r3]
2842:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 20673              		.loc 1 2842 0 discriminator 3
 20674 0024 FB88     		ldrh	r3, [r7, #6]
 20675 0026 0133     		adds	r3, r3, #1
 20676 0028 FB80     		strh	r3, [r7, #6]	@ movhi
 20677              	.L793:
2842:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 20678              		.loc 1 2842 0 is_stmt 0 discriminator 1
 20679 002a FB88     		ldrh	r3, [r7, #6]
 20680 002c B3F5347F 		cmp	r3, #720
 20681 0030 ECD3     		bcc	.L794
2844:..\src/command_processing.c ****     }
2845:..\src/command_processing.c **** 
2846:..\src/command_processing.c ****     //check for initialization
2847:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 20682              		.loc 1 2847 0 is_stmt 1
 20683 0032 084B     		ldr	r3, .L797
 20684 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20685 0036 002B     		cmp	r3, #0
 20686 0038 03D1     		bne	.L795
2848:..\src/command_processing.c ****         return memInit();
 20687              		.loc 1 2848 0
 20688 003a FFF7FEFF 		bl	memInit
 20689 003e 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 454


 20690 0040 03E0     		b	.L796
 20691              	.L795:
2849:..\src/command_processing.c ****     } else {
2850:..\src/command_processing.c ****         return memStore(0);
 20692              		.loc 1 2850 0
 20693 0042 0020     		movs	r0, #0
 20694 0044 FFF7FEFF 		bl	memStore
 20695 0048 0346     		mov	r3, r0
 20696              	.L796:
2851:..\src/command_processing.c ****     }  
2852:..\src/command_processing.c **** }
 20697              		.loc 1 2852 0
 20698 004a 1846     		mov	r0, r3
 20699 004c 0837     		adds	r7, r7, #8
 20700              		.cfi_def_cfa_offset 8
 20701 004e BD46     		mov	sp, r7
 20702              		.cfi_def_cfa_register 13
 20703              		@ sp needed
 20704 0050 80BD     		pop	{r7, pc}
 20705              	.L798:
 20706 0052 00BF     		.align	2
 20707              	.L797:
 20708 0054 00000000 		.word	g_mem
 20709 0058 00000000 		.word	EEPROM_ADDR
 20710              		.cfi_endproc
 20711              	.LFE85:
 20712              		.size	memRestore, .-memRestore
 20713              		.section	.rodata
 20714 1afb 00       		.align	2
 20715              	.LC263:
 20716 1afc 47454E30 		.ascii	"GEN001\000"
 20716      303100
 20717              		.section	.text.memInit,"ax",%progbits
 20718              		.align	2
 20719              		.global	memInit
 20720              		.thumb
 20721              		.thumb_func
 20722              		.type	memInit, %function
 20723              	memInit:
 20724              	.LFB86:
2853:..\src/command_processing.c **** 
2854:..\src/command_processing.c **** //==============================================================================
2855:..\src/command_processing.c **** //                                                                   MEMORY INIT
2856:..\src/command_processing.c **** //==============================================================================
2857:..\src/command_processing.c **** 
2858:..\src/command_processing.c **** uint8 memInit(void)
2859:..\src/command_processing.c **** {
 20725              		.loc 1 2859 0
 20726              		.cfi_startproc
 20727              		@ args = 0, pretend = 0, frame = 8
 20728              		@ frame_needed = 1, uses_anonymous_args = 0
 20729 0000 80B5     		push	{r7, lr}
 20730              		.cfi_def_cfa_offset 8
 20731              		.cfi_offset 7, -8
 20732              		.cfi_offset 14, -4
 20733 0002 82B0     		sub	sp, sp, #8
 20734              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 455


 20735 0004 00AF     		add	r7, sp, #0
 20736              		.cfi_def_cfa_register 7
2860:..\src/command_processing.c ****     uint8 i, j;
2861:..\src/command_processing.c **** 
2862:..\src/command_processing.c ****     //initialize memory settings
2863:..\src/command_processing.c ****     for (i=0; i<15; i++){
 20737              		.loc 1 2863 0
 20738 0006 0023     		movs	r3, #0
 20739 0008 FB71     		strb	r3, [r7, #7]
 20740 000a 07E0     		b	.L800
 20741              	.L801:
2864:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 20742              		.loc 1 2864 0 discriminator 3
 20743 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20744 000e B44A     		ldr	r2, .L826
 20745 0010 1344     		add	r3, r3, r2
 20746 0012 0022     		movs	r2, #0
 20747 0014 5A70     		strb	r2, [r3, #1]
2863:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 20748              		.loc 1 2863 0 discriminator 3
 20749 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20750 0018 0133     		adds	r3, r3, #1
 20751 001a FB71     		strb	r3, [r7, #7]
 20752              	.L800:
2863:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 20753              		.loc 1 2863 0 is_stmt 0 discriminator 1
 20754 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20755 001e 0E2B     		cmp	r3, #14
 20756 0020 F4D9     		bls	.L801
2865:..\src/command_processing.c ****     }
2866:..\src/command_processing.c ****         
2867:..\src/command_processing.c ****     // DEV STRUCT
2868:..\src/command_processing.c ****     g_mem.dev.id                = 1;
 20757              		.loc 1 2868 0 is_stmt 1
 20758 0022 AF4B     		ldr	r3, .L826
 20759 0024 0122     		movs	r2, #1
 20760 0026 83F8A020 		strb	r2, [r3, #160]
2869:..\src/command_processing.c ****     g_mem.dev.right_left        = RIGHT_HAND;
 20761              		.loc 1 2869 0
 20762 002a AD4B     		ldr	r3, .L826
 20763 002c 0022     		movs	r2, #0
 20764 002e 83F8A720 		strb	r2, [r3, #167]
2870:..\src/command_processing.c ****     g_mem.dev.dev_type          = GENERIC_2_MOTORS;
 20765              		.loc 1 2870 0
 20766 0032 AB4B     		ldr	r3, .L826
 20767 0034 0122     		movs	r2, #1
 20768 0036 83F8AC20 		strb	r2, [r3, #172]
2871:..\src/command_processing.c ****     g_mem.dev.reset_counters    = FALSE;   
 20769              		.loc 1 2871 0
 20770 003a A94B     		ldr	r3, .L826
 20771 003c 0022     		movs	r2, #0
 20772 003e 83F8A820 		strb	r2, [r3, #168]
2872:..\src/command_processing.c ****     reset_counters();                       //Initialize counters
 20773              		.loc 1 2872 0
 20774 0042 FFF7FEFF 		bl	reset_counters
2873:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 20775              		.loc 1 2873 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 456


 20776 0046 0023     		movs	r3, #0
 20777 0048 FB71     		strb	r3, [r7, #7]
 20778 004a 08E0     		b	.L802
 20779              	.L803:
2874:..\src/command_processing.c ****         g_mem.unused_bytes1[i] = 0;
 20780              		.loc 1 2874 0 discriminator 3
 20781 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20782 004e A44A     		ldr	r2, .L826
 20783 0050 1344     		add	r3, r3, r2
 20784 0052 0022     		movs	r2, #0
 20785 0054 83F86020 		strb	r2, [r3, #96]
2873:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 20786              		.loc 1 2873 0 discriminator 3
 20787 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20788 005a 0133     		adds	r3, r3, #1
 20789 005c FB71     		strb	r3, [r7, #7]
 20790              	.L802:
2873:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 20791              		.loc 1 2873 0 is_stmt 0 discriminator 1
 20792 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20793 0060 3F2B     		cmp	r3, #63
 20794 0062 F3D9     		bls	.L803
2875:..\src/command_processing.c ****     }
2876:..\src/command_processing.c ****     g_mem.dev.use_2nd_motor_flag = FALSE;
 20795              		.loc 1 2876 0 is_stmt 1
 20796 0064 9E4B     		ldr	r3, .L826
 20797 0066 0022     		movs	r2, #0
 20798 0068 83F8A920 		strb	r2, [r3, #169]
2877:..\src/command_processing.c **** 
2878:..\src/command_processing.c ****     // MOTOR STRUCT
2879:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 20799              		.loc 1 2879 0
 20800 006c 0023     		movs	r3, #0
 20801 006e FB71     		strb	r3, [r7, #7]
 20802 0070 15E1     		b	.L804
 20803              	.L807:
2880:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 20804              		.loc 1 2880 0
 20805 0072 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20806 0074 9A49     		ldr	r1, .L826
 20807 0076 1346     		mov	r3, r2
 20808 0078 DB00     		lsls	r3, r3, #3
 20809 007a 9B1A     		subs	r3, r3, r2
 20810 007c 1B01     		lsls	r3, r3, #4
 20811 007e 0B44     		add	r3, r3, r1
 20812 0080 B033     		adds	r3, r3, #176
 20813 0082 40F23942 		movw	r2, #1081
 20814 0086 1A60     		str	r2, [r3]
2881:..\src/command_processing.c ****         g_mem.motor[i].k_i           =     0 * 65536;
 20815              		.loc 1 2881 0
 20816 0088 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20817 008a 9549     		ldr	r1, .L826
 20818 008c 1346     		mov	r3, r2
 20819 008e DB00     		lsls	r3, r3, #3
 20820 0090 9B1A     		subs	r3, r3, r2
 20821 0092 1B01     		lsls	r3, r3, #4
 20822 0094 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 457


 20823 0096 B433     		adds	r3, r3, #180
 20824 0098 0022     		movs	r2, #0
 20825 009a 1A60     		str	r2, [r3]
2882:..\src/command_processing.c ****         g_mem.motor[i].k_d           = 0.007 * 65536;  // changed in order to avoid metallic clatte
 20826              		.loc 1 2882 0
 20827 009c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20828 009e 9049     		ldr	r1, .L826
 20829 00a0 1346     		mov	r3, r2
 20830 00a2 DB00     		lsls	r3, r3, #3
 20831 00a4 9B1A     		subs	r3, r3, r2
 20832 00a6 1B01     		lsls	r3, r3, #4
 20833 00a8 0B44     		add	r3, r3, r1
 20834 00aa B833     		adds	r3, r3, #184
 20835 00ac 4FF4E572 		mov	r2, #458
 20836 00b0 1A60     		str	r2, [r3]
2883:..\src/command_processing.c ****         g_mem.motor[i].k_p_c         =     1 * 65536;
 20837              		.loc 1 2883 0
 20838 00b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20839 00b4 8A49     		ldr	r1, .L826
 20840 00b6 1346     		mov	r3, r2
 20841 00b8 DB00     		lsls	r3, r3, #3
 20842 00ba 9B1A     		subs	r3, r3, r2
 20843 00bc 1B01     		lsls	r3, r3, #4
 20844 00be 0B44     		add	r3, r3, r1
 20845 00c0 BC33     		adds	r3, r3, #188
 20846 00c2 4FF48032 		mov	r2, #65536
 20847 00c6 1A60     		str	r2, [r3]
2884:..\src/command_processing.c ****         g_mem.motor[i].k_i_c         = 0.001 * 65536;
 20848              		.loc 1 2884 0
 20849 00c8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20850 00ca 8549     		ldr	r1, .L826
 20851 00cc 1346     		mov	r3, r2
 20852 00ce DB00     		lsls	r3, r3, #3
 20853 00d0 9B1A     		subs	r3, r3, r2
 20854 00d2 1B01     		lsls	r3, r3, #4
 20855 00d4 0B44     		add	r3, r3, r1
 20856 00d6 C033     		adds	r3, r3, #192
 20857 00d8 4122     		movs	r2, #65
 20858 00da 1A60     		str	r2, [r3]
2885:..\src/command_processing.c ****         g_mem.motor[i].k_d_c         =     0 * 65536;
 20859              		.loc 1 2885 0
 20860 00dc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20861 00de 8049     		ldr	r1, .L826
 20862 00e0 1346     		mov	r3, r2
 20863 00e2 DB00     		lsls	r3, r3, #3
 20864 00e4 9B1A     		subs	r3, r3, r2
 20865 00e6 1B01     		lsls	r3, r3, #4
 20866 00e8 0B44     		add	r3, r3, r1
 20867 00ea C433     		adds	r3, r3, #196
 20868 00ec 0022     		movs	r2, #0
 20869 00ee 1A60     		str	r2, [r3]
2886:..\src/command_processing.c **** 
2887:..\src/command_processing.c ****         g_mem.motor[i].k_p_dl        =   0.1 * 65536;
 20870              		.loc 1 2887 0
 20871 00f0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20872 00f2 7B49     		ldr	r1, .L826
 20873 00f4 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 458


 20874 00f6 DB00     		lsls	r3, r3, #3
 20875 00f8 9B1A     		subs	r3, r3, r2
 20876 00fa 1B01     		lsls	r3, r3, #4
 20877 00fc 0B44     		add	r3, r3, r1
 20878 00fe C833     		adds	r3, r3, #200
 20879 0100 41F69912 		movw	r2, #6553
 20880 0104 1A60     		str	r2, [r3]
2888:..\src/command_processing.c ****         g_mem.motor[i].k_i_dl        =     0 * 65536;
 20881              		.loc 1 2888 0
 20882 0106 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20883 0108 7549     		ldr	r1, .L826
 20884 010a 1346     		mov	r3, r2
 20885 010c DB00     		lsls	r3, r3, #3
 20886 010e 9B1A     		subs	r3, r3, r2
 20887 0110 1B01     		lsls	r3, r3, #4
 20888 0112 0B44     		add	r3, r3, r1
 20889 0114 CC33     		adds	r3, r3, #204
 20890 0116 0022     		movs	r2, #0
 20891 0118 1A60     		str	r2, [r3]
2889:..\src/command_processing.c ****         g_mem.motor[i].k_d_dl        =     0 * 65536;
 20892              		.loc 1 2889 0
 20893 011a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20894 011c 7049     		ldr	r1, .L826
 20895 011e 1346     		mov	r3, r2
 20896 0120 DB00     		lsls	r3, r3, #3
 20897 0122 9B1A     		subs	r3, r3, r2
 20898 0124 1B01     		lsls	r3, r3, #4
 20899 0126 0B44     		add	r3, r3, r1
 20900 0128 D033     		adds	r3, r3, #208
 20901 012a 0022     		movs	r2, #0
 20902 012c 1A60     		str	r2, [r3]
2890:..\src/command_processing.c ****         g_mem.motor[i].k_p_c_dl      =   0.3 * 65536;
 20903              		.loc 1 2890 0
 20904 012e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20905 0130 6B49     		ldr	r1, .L826
 20906 0132 1346     		mov	r3, r2
 20907 0134 DB00     		lsls	r3, r3, #3
 20908 0136 9B1A     		subs	r3, r3, r2
 20909 0138 1B01     		lsls	r3, r3, #4
 20910 013a 0B44     		add	r3, r3, r1
 20911 013c D433     		adds	r3, r3, #212
 20912 013e 44F6CC42 		movw	r2, #19660
 20913 0142 1A60     		str	r2, [r3]
2891:..\src/command_processing.c ****         g_mem.motor[i].k_i_c_dl      =0.0002 * 65536;
 20914              		.loc 1 2891 0
 20915 0144 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20916 0146 6649     		ldr	r1, .L826
 20917 0148 1346     		mov	r3, r2
 20918 014a DB00     		lsls	r3, r3, #3
 20919 014c 9B1A     		subs	r3, r3, r2
 20920 014e 1B01     		lsls	r3, r3, #4
 20921 0150 0B44     		add	r3, r3, r1
 20922 0152 D833     		adds	r3, r3, #216
 20923 0154 0D22     		movs	r2, #13
 20924 0156 1A60     		str	r2, [r3]
2892:..\src/command_processing.c ****         g_mem.motor[i].k_d_c_dl      =     0 * 65536;
 20925              		.loc 1 2892 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 459


 20926 0158 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20927 015a 6149     		ldr	r1, .L826
 20928 015c 1346     		mov	r3, r2
 20929 015e DB00     		lsls	r3, r3, #3
 20930 0160 9B1A     		subs	r3, r3, r2
 20931 0162 1B01     		lsls	r3, r3, #4
 20932 0164 0B44     		add	r3, r3, r1
 20933 0166 DC33     		adds	r3, r3, #220
 20934 0168 0022     		movs	r2, #0
 20935 016a 1A60     		str	r2, [r3]
2893:..\src/command_processing.c **** 
2894:..\src/command_processing.c ****         g_mem.motor[i].activ         = 1;
 20936              		.loc 1 2894 0
 20937 016c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20938 016e 5C49     		ldr	r1, .L826
 20939 0170 1346     		mov	r3, r2
 20940 0172 DB00     		lsls	r3, r3, #3
 20941 0174 9B1A     		subs	r3, r3, r2
 20942 0176 1B01     		lsls	r3, r3, #4
 20943 0178 0B44     		add	r3, r3, r1
 20944 017a E033     		adds	r3, r3, #224
 20945 017c 0122     		movs	r2, #1
 20946 017e 1A70     		strb	r2, [r3]
2895:..\src/command_processing.c ****         g_mem.motor[i].activate_pwm_rescaling = MAXON_24V;      //rescaling active for 12V motor
 20947              		.loc 1 2895 0
 20948 0180 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20949 0182 5749     		ldr	r1, .L826
 20950 0184 1346     		mov	r3, r2
 20951 0186 DB00     		lsls	r3, r3, #3
 20952 0188 9B1A     		subs	r3, r3, r2
 20953 018a 1B01     		lsls	r3, r3, #4
 20954 018c 0B44     		add	r3, r3, r1
 20955 018e E133     		adds	r3, r3, #225
 20956 0190 0022     		movs	r2, #0
 20957 0192 1A70     		strb	r2, [r3]
2896:..\src/command_processing.c ****         g_mem.motor[i].motor_driver_type = DRIVER_MC33887;      //SoftHand standard driver
 20958              		.loc 1 2896 0
 20959 0194 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20960 0196 5249     		ldr	r1, .L826
 20961 0198 1346     		mov	r3, r2
 20962 019a DB00     		lsls	r3, r3, #3
 20963 019c 9B1A     		subs	r3, r3, r2
 20964 019e 1B01     		lsls	r3, r3, #4
 20965 01a0 0B44     		add	r3, r3, r1
 20966 01a2 E233     		adds	r3, r3, #226
 20967 01a4 0022     		movs	r2, #0
 20968 01a6 1A70     		strb	r2, [r3]
2897:..\src/command_processing.c ****         g_mem.motor[i].input_mode    = INPUT_MODE_EXTERNAL;
 20969              		.loc 1 2897 0
 20970 01a8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20971 01aa 4D49     		ldr	r1, .L826
 20972 01ac 1346     		mov	r3, r2
 20973 01ae DB00     		lsls	r3, r3, #3
 20974 01b0 9B1A     		subs	r3, r3, r2
 20975 01b2 1B01     		lsls	r3, r3, #4
 20976 01b4 0B44     		add	r3, r3, r1
 20977 01b6 03F58773 		add	r3, r3, #270
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 460


 20978 01ba 0022     		movs	r2, #0
 20979 01bc 1A70     		strb	r2, [r3]
2898:..\src/command_processing.c ****         g_mem.motor[i].control_mode  = CONTROL_ANGLE;
 20980              		.loc 1 2898 0
 20981 01be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20982 01c0 4749     		ldr	r1, .L826
 20983 01c2 1346     		mov	r3, r2
 20984 01c4 DB00     		lsls	r3, r3, #3
 20985 01c6 9B1A     		subs	r3, r3, r2
 20986 01c8 1B01     		lsls	r3, r3, #4
 20987 01ca 0B44     		add	r3, r3, r1
 20988 01cc 03F20F13 		addw	r3, r3, #271
 20989 01d0 0022     		movs	r2, #0
 20990 01d2 1A70     		strb	r2, [r3]
2899:..\src/command_processing.c ****         g_mem.motor[i].max_step_pos = 0;
 20991              		.loc 1 2899 0
 20992 01d4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20993 01d6 4249     		ldr	r1, .L826
 20994 01d8 1346     		mov	r3, r2
 20995 01da DB00     		lsls	r3, r3, #3
 20996 01dc 9B1A     		subs	r3, r3, r2
 20997 01de 1B01     		lsls	r3, r3, #4
 20998 01e0 0B44     		add	r3, r3, r1
 20999 01e2 F033     		adds	r3, r3, #240
 21000 01e4 0022     		movs	r2, #0
 21001 01e6 1A60     		str	r2, [r3]
2900:..\src/command_processing.c ****         g_mem.motor[i].max_step_neg = 0;
 21002              		.loc 1 2900 0
 21003 01e8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21004 01ea 3D49     		ldr	r1, .L826
 21005 01ec 1346     		mov	r3, r2
 21006 01ee DB00     		lsls	r3, r3, #3
 21007 01f0 9B1A     		subs	r3, r3, r2
 21008 01f2 1B01     		lsls	r3, r3, #4
 21009 01f4 0B44     		add	r3, r3, r1
 21010 01f6 EC33     		adds	r3, r3, #236
 21011 01f8 0022     		movs	r2, #0
 21012 01fa 1A60     		str	r2, [r3]
2901:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 21013              		.loc 1 2901 0
 21014 01fc 0023     		movs	r3, #0
 21015 01fe BB71     		strb	r3, [r7, #6]
 21016 0200 10E0     		b	.L805
 21017              	.L806:
2902:..\src/command_processing.c ****             g_mem.motor[i].curr_lookup[j] = 0;
 21018              		.loc 1 2902 0 discriminator 3
 21019 0202 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21020 0204 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21021 0206 3648     		ldr	r0, .L826
 21022 0208 1346     		mov	r3, r2
 21023 020a DB00     		lsls	r3, r3, #3
 21024 020c 9B1A     		subs	r3, r3, r2
 21025 020e 9B00     		lsls	r3, r3, #2
 21026 0210 0B44     		add	r3, r3, r1
 21027 0212 3C33     		adds	r3, r3, #60
 21028 0214 9B00     		lsls	r3, r3, #2
 21029 0216 0344     		add	r3, r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 461


 21030 0218 4FF00002 		mov	r2, #0
 21031 021c 5A60     		str	r2, [r3, #4]	@ float
2901:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 21032              		.loc 1 2901 0 discriminator 3
 21033 021e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21034 0220 0133     		adds	r3, r3, #1
 21035 0222 BB71     		strb	r3, [r7, #6]
 21036              	.L805:
2901:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 21037              		.loc 1 2901 0 is_stmt 0 discriminator 1
 21038 0224 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21039 0226 052B     		cmp	r3, #5
 21040 0228 EBD9     		bls	.L806
2903:..\src/command_processing.c ****         }
2904:..\src/command_processing.c ****         g_mem.motor[i].current_limit = DEFAULT_CURRENT_LIMIT;
 21041              		.loc 1 2904 0 is_stmt 1 discriminator 2
 21042 022a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21043 022c 2C49     		ldr	r1, .L826
 21044 022e 1346     		mov	r3, r2
 21045 0230 DB00     		lsls	r3, r3, #3
 21046 0232 9B1A     		subs	r3, r3, r2
 21047 0234 1B01     		lsls	r3, r3, #4
 21048 0236 0B44     		add	r3, r3, r1
 21049 0238 03F58673 		add	r3, r3, #268
 21050 023c 40F2DC52 		movw	r2, #1500
 21051 0240 1A80     		strh	r2, [r3]	@ movhi
2905:..\src/command_processing.c ****         g_mem.motor[i].encoder_line = i;    
 21052              		.loc 1 2905 0 discriminator 2
 21053 0242 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21054 0244 2649     		ldr	r1, .L826
 21055 0246 1346     		mov	r3, r2
 21056 0248 DB00     		lsls	r3, r3, #3
 21057 024a 9B1A     		subs	r3, r3, r2
 21058 024c 1B01     		lsls	r3, r3, #4
 21059 024e 0B44     		add	r3, r3, r1
 21060 0250 03F58873 		add	r3, r3, #272
 21061 0254 FA79     		ldrb	r2, [r7, #7]
 21062 0256 1A70     		strb	r2, [r3]
2906:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_flag = 1;
 21063              		.loc 1 2906 0 discriminator 2
 21064 0258 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21065 025a 2149     		ldr	r1, .L826
 21066 025c 1346     		mov	r3, r2
 21067 025e DB00     		lsls	r3, r3, #3
 21068 0260 9B1A     		subs	r3, r3, r2
 21069 0262 1B01     		lsls	r3, r3, #4
 21070 0264 0B44     		add	r3, r3, r1
 21071 0266 E333     		adds	r3, r3, #227
 21072 0268 0122     		movs	r2, #1
 21073 026a 1A70     		strb	r2, [r3]
2907:..\src/command_processing.c ****         
2908:..\src/command_processing.c ****         g_mem.motor[i].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 21074              		.loc 1 2908 0 discriminator 2
 21075 026c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21076 026e 1C49     		ldr	r1, .L826
 21077 0270 1346     		mov	r3, r2
 21078 0272 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 462


 21079 0274 9B1A     		subs	r3, r3, r2
 21080 0276 1B01     		lsls	r3, r3, #4
 21081 0278 0B44     		add	r3, r3, r1
 21082 027a 03F21113 		addw	r3, r3, #273
 21083 027e 0122     		movs	r2, #1
 21084 0280 1A70     		strb	r2, [r3]
2909:..\src/command_processing.c ****         g_mem.motor[i].not_revers_motor_flag = FALSE;       // Generic reversible motor  
 21085              		.loc 1 2909 0 discriminator 2
 21086 0282 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21087 0284 1649     		ldr	r1, .L826
 21088 0286 1346     		mov	r3, r2
 21089 0288 DB00     		lsls	r3, r3, #3
 21090 028a 9B1A     		subs	r3, r3, r2
 21091 028c 1B01     		lsls	r3, r3, #4
 21092 028e 0B44     		add	r3, r3, r1
 21093 0290 03F58973 		add	r3, r3, #274
 21094 0294 0022     		movs	r2, #0
 21095 0296 1A70     		strb	r2, [r3]
2879:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 21096              		.loc 1 2879 0 discriminator 2
 21097 0298 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21098 029a 0133     		adds	r3, r3, #1
 21099 029c FB71     		strb	r3, [r7, #7]
 21100              	.L804:
2879:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 21101              		.loc 1 2879 0 is_stmt 0 discriminator 1
 21102 029e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21103 02a0 012B     		cmp	r3, #1
 21104 02a2 7FF6E6AE 		bls	.L807
2910:..\src/command_processing.c ****     }
2911:..\src/command_processing.c ****     
2912:..\src/command_processing.c ****     // ENC STRUCT
2913:..\src/command_processing.c ****     for (i = 0; i< N_ENCODER_LINE_MAX; i++){
 21105              		.loc 1 2913 0 is_stmt 1
 21106 02a6 0023     		movs	r3, #0
 21107 02a8 FB71     		strb	r3, [r7, #7]
 21108 02aa 98E0     		b	.L808
 21109              	.L815:
2914:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 21110              		.loc 1 2914 0
 21111 02ac 0023     		movs	r3, #0
 21112 02ae BB71     		strb	r3, [r7, #6]
 21113 02b0 0FE0     		b	.L809
 21114              	.L810:
2915:..\src/command_processing.c ****             g_mem.enc[i].Enc_raw_read_conf[j] = 0;
 21115              		.loc 1 2915 0 discriminator 3
 21116 02b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21117 02b4 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21118 02b6 0A48     		ldr	r0, .L826
 21119 02b8 1346     		mov	r3, r2
 21120 02ba 5B00     		lsls	r3, r3, #1
 21121 02bc 1344     		add	r3, r3, r2
 21122 02be 1B01     		lsls	r3, r3, #4
 21123 02c0 0344     		add	r3, r3, r0
 21124 02c2 0B44     		add	r3, r3, r1
 21125 02c4 03F5C873 		add	r3, r3, #400
 21126 02c8 0022     		movs	r2, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 463


 21127 02ca 1A70     		strb	r2, [r3]
2914:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 21128              		.loc 1 2914 0 discriminator 3
 21129 02cc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21130 02ce 0133     		adds	r3, r3, #1
 21131 02d0 BB71     		strb	r3, [r7, #6]
 21132              	.L809:
2914:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 21133              		.loc 1 2914 0 is_stmt 0 discriminator 1
 21134 02d2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21135 02d4 042B     		cmp	r3, #4
 21136 02d6 ECD9     		bls	.L810
2916:..\src/command_processing.c ****         }
2917:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 21137              		.loc 1 2917 0 is_stmt 1
 21138 02d8 0023     		movs	r3, #0
 21139 02da BB71     		strb	r3, [r7, #6]
 21140 02dc 2CE0     		b	.L811
 21141              	.L827:
 21142 02de 00BF     		.align	2
 21143              	.L826:
 21144 02e0 00000000 		.word	g_mem
 21145              	.L812:
2918:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 21146              		.loc 1 2918 0 discriminator 3
 21147 02e4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21148 02e6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21149 02e8 B848     		ldr	r0, .L828
 21150 02ea 1346     		mov	r3, r2
 21151 02ec 5B00     		lsls	r3, r3, #1
 21152 02ee 1344     		add	r3, r3, r2
 21153 02f0 1B01     		lsls	r3, r3, #4
 21154 02f2 0344     		add	r3, r3, r0
 21155 02f4 0B44     		add	r3, r3, r1
 21156 02f6 03F29513 		addw	r3, r3, #405
 21157 02fa 0322     		movs	r2, #3
 21158 02fc 1A70     		strb	r2, [r3]
2919:..\src/command_processing.c ****             g_mem.enc[i].m_mult[j] = 1;
 21159              		.loc 1 2919 0 discriminator 3
 21160 02fe FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21161 0300 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21162 0302 B248     		ldr	r0, .L828
 21163 0304 1346     		mov	r3, r2
 21164 0306 5B00     		lsls	r3, r3, #1
 21165 0308 1344     		add	r3, r3, r2
 21166 030a 9B00     		lsls	r3, r3, #2
 21167 030c 0B44     		add	r3, r3, r1
 21168 030e 6833     		adds	r3, r3, #104
 21169 0310 9B00     		lsls	r3, r3, #2
 21170 0312 0344     		add	r3, r3, r0
 21171 0314 4FF07E52 		mov	r2, #1065353216
 21172 0318 5A60     		str	r2, [r3, #4]	@ float
2920:..\src/command_processing.c ****             g_mem.enc[i].m_off[j] = (int32)0 << g_mem.enc[i].res[j];
 21173              		.loc 1 2920 0 discriminator 3
 21174 031a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21175 031c B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21176 031e AB48     		ldr	r0, .L828
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 464


 21177 0320 1346     		mov	r3, r2
 21178 0322 5B00     		lsls	r3, r3, #1
 21179 0324 1344     		add	r3, r3, r2
 21180 0326 9B00     		lsls	r3, r3, #2
 21181 0328 0B44     		add	r3, r3, r1
 21182 032a 6633     		adds	r3, r3, #102
 21183 032c 0022     		movs	r2, #0
 21184 032e 40F82320 		str	r2, [r0, r3, lsl #2]
2917:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 21185              		.loc 1 2917 0 discriminator 3
 21186 0332 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21187 0334 0133     		adds	r3, r3, #1
 21188 0336 BB71     		strb	r3, [r7, #6]
 21189              	.L811:
2917:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 21190              		.loc 1 2917 0 is_stmt 0 discriminator 1
 21191 0338 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21192 033a 022B     		cmp	r3, #2
 21193 033c D2D9     		bls	.L812
2921:..\src/command_processing.c ****         }
2922:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = FALSE;
 21194              		.loc 1 2922 0 is_stmt 1
 21195 033e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21196 0340 A249     		ldr	r1, .L828
 21197 0342 1346     		mov	r3, r2
 21198 0344 5B00     		lsls	r3, r3, #1
 21199 0346 1344     		add	r3, r3, r2
 21200 0348 1B01     		lsls	r3, r3, #4
 21201 034a 0B44     		add	r3, r3, r1
 21202 034c 03F5D873 		add	r3, r3, #432
 21203 0350 0022     		movs	r2, #0
 21204 0352 1A70     		strb	r2, [r3]
2923:..\src/command_processing.c ****         g_mem.enc[i].motor_handle_ratio = 22;     
 21205              		.loc 1 2923 0
 21206 0354 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21207 0356 9D49     		ldr	r1, .L828
 21208 0358 1346     		mov	r3, r2
 21209 035a 5B00     		lsls	r3, r3, #1
 21210 035c 1344     		add	r3, r3, r2
 21211 035e 1B01     		lsls	r3, r3, #4
 21212 0360 0B44     		add	r3, r3, r1
 21213 0362 03F5DA73 		add	r3, r3, #436
 21214 0366 1622     		movs	r2, #22
 21215 0368 1A70     		strb	r2, [r3]
2924:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 21216              		.loc 1 2924 0
 21217 036a 0023     		movs	r3, #0
 21218 036c BB71     		strb	r3, [r7, #6]
 21219 036e 0FE0     		b	.L813
 21220              	.L814:
2925:..\src/command_processing.c ****             g_mem.enc[i].Enc_idx_use_for_control[j] = j;    // First encoder is that with index 0 a
 21221              		.loc 1 2925 0 discriminator 3
 21222 0370 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21223 0372 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21224 0374 9548     		ldr	r0, .L828
 21225 0376 1346     		mov	r3, r2
 21226 0378 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 465


 21227 037a 1344     		add	r3, r3, r2
 21228 037c 1B01     		lsls	r3, r3, #4
 21229 037e 0344     		add	r3, r3, r0
 21230 0380 0B44     		add	r3, r3, r1
 21231 0382 03F2B113 		addw	r3, r3, #433
 21232 0386 BA79     		ldrb	r2, [r7, #6]
 21233 0388 1A70     		strb	r2, [r3]
2924:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 21234              		.loc 1 2924 0 discriminator 3
 21235 038a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21236 038c 0133     		adds	r3, r3, #1
 21237 038e BB71     		strb	r3, [r7, #6]
 21238              	.L813:
2924:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 21239              		.loc 1 2924 0 is_stmt 0 discriminator 1
 21240 0390 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21241 0392 022B     		cmp	r3, #2
 21242 0394 ECD9     		bls	.L814
2926:..\src/command_processing.c ****         }
2927:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = 15;     
 21243              		.loc 1 2927 0 is_stmt 1 discriminator 2
 21244 0396 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21245 0398 8C49     		ldr	r1, .L828
 21246 039a 1346     		mov	r3, r2
 21247 039c 5B00     		lsls	r3, r3, #1
 21248 039e 1344     		add	r3, r3, r2
 21249 03a0 1B01     		lsls	r3, r3, #4
 21250 03a2 0B44     		add	r3, r3, r1
 21251 03a4 03F2B513 		addw	r3, r3, #437
 21252 03a8 0F22     		movs	r2, #15
 21253 03aa 1A70     		strb	r2, [r3]
2928:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = 14;     
 21254              		.loc 1 2928 0 discriminator 2
 21255 03ac FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21256 03ae 8749     		ldr	r1, .L828
 21257 03b0 1346     		mov	r3, r2
 21258 03b2 5B00     		lsls	r3, r3, #1
 21259 03b4 1344     		add	r3, r3, r2
 21260 03b6 1B01     		lsls	r3, r3, #4
 21261 03b8 0B44     		add	r3, r3, r1
 21262 03ba 03F5DB73 		add	r3, r3, #438
 21263 03be 0E22     		movs	r2, #14
 21264 03c0 1A70     		strb	r2, [r3]
2929:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = 1;  
 21265              		.loc 1 2929 0 discriminator 2
 21266 03c2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21267 03c4 8149     		ldr	r1, .L828
 21268 03c6 1346     		mov	r3, r2
 21269 03c8 5B00     		lsls	r3, r3, #1
 21270 03ca 1344     		add	r3, r3, r2
 21271 03cc 1B01     		lsls	r3, r3, #4
 21272 03ce 0B44     		add	r3, r3, r1
 21273 03d0 03F2B713 		addw	r3, r3, #439
 21274 03d4 0122     		movs	r2, #1
 21275 03d6 1A70     		strb	r2, [r3]
2913:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 21276              		.loc 1 2913 0 discriminator 2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 466


 21277 03d8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21278 03da 0133     		adds	r3, r3, #1
 21279 03dc FB71     		strb	r3, [r7, #7]
 21280              	.L808:
2913:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 21281              		.loc 1 2913 0 is_stmt 0 discriminator 1
 21282 03de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21283 03e0 012B     		cmp	r3, #1
 21284 03e2 7FF663AF 		bls	.L815
2930:..\src/command_processing.c ****     }
2931:..\src/command_processing.c ****     
2932:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 21285              		.loc 1 2932 0 is_stmt 1
 21286 03e6 0023     		movs	r3, #0
 21287 03e8 FB71     		strb	r3, [r7, #7]
 21288 03ea 2EE0     		b	.L816
 21289              	.L817:
2933:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 21290              		.loc 1 2933 0 discriminator 3
 21291 03ec FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21292 03ee 7749     		ldr	r1, .L828
 21293 03f0 1346     		mov	r3, r2
 21294 03f2 DB00     		lsls	r3, r3, #3
 21295 03f4 9B1A     		subs	r3, r3, r2
 21296 03f6 1B01     		lsls	r3, r3, #4
 21297 03f8 0B44     		add	r3, r3, r1
 21298 03fa E433     		adds	r3, r3, #228
 21299 03fc 0022     		movs	r2, #0
 21300 03fe 1A60     		str	r2, [r3]
2934:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_sup = (int32)19000 << g_mem.enc[g_mem.motor[i].encoder_line].res[0];
 21301              		.loc 1 2934 0 discriminator 3
 21302 0400 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21303 0402 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 21304 0404 7148     		ldr	r0, .L828
 21305 0406 0B46     		mov	r3, r1
 21306 0408 DB00     		lsls	r3, r3, #3
 21307 040a 5B1A     		subs	r3, r3, r1
 21308 040c 1B01     		lsls	r3, r3, #4
 21309 040e 0344     		add	r3, r3, r0
 21310 0410 03F58873 		add	r3, r3, #272
 21311 0414 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21312 0416 1846     		mov	r0, r3
 21313 0418 6C49     		ldr	r1, .L828
 21314 041a 0346     		mov	r3, r0
 21315 041c 5B00     		lsls	r3, r3, #1
 21316 041e 0344     		add	r3, r3, r0
 21317 0420 1B01     		lsls	r3, r3, #4
 21318 0422 0B44     		add	r3, r3, r1
 21319 0424 03F29513 		addw	r3, r3, #405
 21320 0428 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21321 042a 1946     		mov	r1, r3
 21322 042c 44F63823 		movw	r3, #19000
 21323 0430 03FA01F1 		lsl	r1, r3, r1
 21324 0434 6548     		ldr	r0, .L828
 21325 0436 1346     		mov	r3, r2
 21326 0438 DB00     		lsls	r3, r3, #3
 21327 043a 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 467


 21328 043c 1B01     		lsls	r3, r3, #4
 21329 043e 0344     		add	r3, r3, r0
 21330 0440 E833     		adds	r3, r3, #232
 21331 0442 1960     		str	r1, [r3]
2932:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 21332              		.loc 1 2932 0 discriminator 3
 21333 0444 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21334 0446 0133     		adds	r3, r3, #1
 21335 0448 FB71     		strb	r3, [r7, #7]
 21336              	.L816:
2932:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 21337              		.loc 1 2932 0 is_stmt 0 discriminator 1
 21338 044a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21339 044c 012B     		cmp	r3, #1
 21340 044e CDD9     		bls	.L817
2935:..\src/command_processing.c ****     }
2936:..\src/command_processing.c ****     
2937:..\src/command_processing.c ****     // EMG STRUCT     
2938:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 21341              		.loc 1 2938 0 is_stmt 1
 21342 0450 5E4B     		ldr	r3, .L828
 21343 0452 C822     		movs	r2, #200
 21344 0454 A3F8F021 		strh	r2, [r3, #496]	@ movhi
2939:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 21345              		.loc 1 2939 0
 21346 0458 5C4B     		ldr	r3, .L828
 21347 045a C822     		movs	r2, #200
 21348 045c A3F8F221 		strh	r2, [r3, #498]	@ movhi
2940:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 21349              		.loc 1 2940 0
 21350 0460 5A4B     		ldr	r3, .L828
 21351 0462 4FF48062 		mov	r2, #1024
 21352 0466 C3F8F421 		str	r2, [r3, #500]
2941:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;   
 21353              		.loc 1 2941 0
 21354 046a 584B     		ldr	r3, .L828
 21355 046c 4FF48062 		mov	r2, #1024
 21356 0470 C3F8F821 		str	r2, [r3, #504]
2942:..\src/command_processing.c ****     g_mem.emg.emg_speed = 100;   
 21357              		.loc 1 2942 0
 21358 0474 554B     		ldr	r3, .L828
 21359 0476 6422     		movs	r2, #100
 21360 0478 83F8FC21 		strb	r2, [r3, #508]
2943:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;      // EMG calibration disabled by default
 21361              		.loc 1 2943 0
 21362 047c 534B     		ldr	r3, .L828
 21363 047e 0022     		movs	r2, #0
 21364 0480 83F8FD21 		strb	r2, [r3, #509]
2944:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;    
 21365              		.loc 1 2944 0
 21366 0484 514B     		ldr	r3, .L828
 21367 0486 0022     		movs	r2, #0
 21368 0488 83F8FE21 		strb	r2, [r3, #510]
2945:..\src/command_processing.c **** 
2946:..\src/command_processing.c ****     // IMU STRUCT
2947:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 21369              		.loc 1 2947 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 468


 21370 048c 4F4B     		ldr	r3, .L828
 21371 048e 0022     		movs	r2, #0
 21372 0490 83F80022 		strb	r2, [r3, #512]
2948:..\src/command_processing.c ****     g_mem.imu.SPI_read_delay = 0;       // 0 - No delay
 21373              		.loc 1 2948 0
 21374 0494 4D4B     		ldr	r3, .L828
 21375 0496 0022     		movs	r2, #0
 21376 0498 83F80122 		strb	r2, [r3, #513]
2949:..\src/command_processing.c ****     for (i = 0; i< N_IMU_MAX; i++){
 21377              		.loc 1 2949 0
 21378 049c 0023     		movs	r3, #0
 21379 049e FB71     		strb	r3, [r7, #7]
 21380 04a0 34E0     		b	.L818
 21381              	.L819:
2950:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 21382              		.loc 1 2950 0 discriminator 3
 21383 04a2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21384 04a4 4949     		ldr	r1, .L828
 21385 04a6 1346     		mov	r3, r2
 21386 04a8 9B00     		lsls	r3, r3, #2
 21387 04aa 1344     		add	r3, r3, r2
 21388 04ac 0B44     		add	r3, r3, r1
 21389 04ae 03F20223 		addw	r3, r3, #514
 21390 04b2 0122     		movs	r2, #1
 21391 04b4 1A70     		strb	r2, [r3]
2951:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][1] = 1;   // Gyroscopes
 21392              		.loc 1 2951 0 discriminator 3
 21393 04b6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21394 04b8 4449     		ldr	r1, .L828
 21395 04ba 1346     		mov	r3, r2
 21396 04bc 9B00     		lsls	r3, r3, #2
 21397 04be 1344     		add	r3, r3, r2
 21398 04c0 0B44     		add	r3, r3, r1
 21399 04c2 03F20323 		addw	r3, r3, #515
 21400 04c6 0122     		movs	r2, #1
 21401 04c8 1A70     		strb	r2, [r3]
2952:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][2] = 0;   // Magnetometers
 21402              		.loc 1 2952 0 discriminator 3
 21403 04ca FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21404 04cc 3F49     		ldr	r1, .L828
 21405 04ce 1346     		mov	r3, r2
 21406 04d0 9B00     		lsls	r3, r3, #2
 21407 04d2 1344     		add	r3, r3, r2
 21408 04d4 0B44     		add	r3, r3, r1
 21409 04d6 03F50173 		add	r3, r3, #516
 21410 04da 0022     		movs	r2, #0
 21411 04dc 1A70     		strb	r2, [r3]
2953:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][3] = 0;   // Quaternions
 21412              		.loc 1 2953 0 discriminator 3
 21413 04de FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21414 04e0 3A49     		ldr	r1, .L828
 21415 04e2 1346     		mov	r3, r2
 21416 04e4 9B00     		lsls	r3, r3, #2
 21417 04e6 1344     		add	r3, r3, r2
 21418 04e8 0B44     		add	r3, r3, r1
 21419 04ea 03F20523 		addw	r3, r3, #517
 21420 04ee 0022     		movs	r2, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 469


 21421 04f0 1A70     		strb	r2, [r3]
2954:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][4] = 0;   // Temperatures
 21422              		.loc 1 2954 0 discriminator 3
 21423 04f2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21424 04f4 3549     		ldr	r1, .L828
 21425 04f6 1346     		mov	r3, r2
 21426 04f8 9B00     		lsls	r3, r3, #2
 21427 04fa 1344     		add	r3, r3, r2
 21428 04fc 0B44     		add	r3, r3, r1
 21429 04fe 03F20623 		addw	r3, r3, #518
 21430 0502 0022     		movs	r2, #0
 21431 0504 1A70     		strb	r2, [r3]
2949:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 21432              		.loc 1 2949 0 discriminator 3
 21433 0506 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21434 0508 0133     		adds	r3, r3, #1
 21435 050a FB71     		strb	r3, [r7, #7]
 21436              	.L818:
2949:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 21437              		.loc 1 2949 0 is_stmt 0 discriminator 1
 21438 050c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21439 050e 042B     		cmp	r3, #4
 21440 0510 C7D9     		bls	.L819
2955:..\src/command_processing.c ****     }
2956:..\src/command_processing.c ****      
2957:..\src/command_processing.c ****     // EXP STRUCT
2958:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 21441              		.loc 1 2958 0 is_stmt 1
 21442 0512 2E4B     		ldr	r3, .L828
 21443 0514 0022     		movs	r2, #0
 21444 0516 83F82622 		strb	r2, [r3, #550]
2959:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "GEN001");
 21445              		.loc 1 2959 0
 21446 051a 2C4B     		ldr	r3, .L828
 21447 051c 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 21448 0520 1233     		adds	r3, r3, #18
 21449 0522 5B01     		lsls	r3, r3, #5
 21450 0524 294A     		ldr	r2, .L828
 21451 0526 1344     		add	r3, r3, r2
 21452 0528 294A     		ldr	r2, .L828+4
 21453 052a 1068     		ldr	r0, [r2]	@ unaligned
 21454 052c 1860     		str	r0, [r3]	@ unaligned
 21455 052e 9188     		ldrh	r1, [r2, #4]	@ unaligned
 21456 0530 9279     		ldrb	r2, [r2, #6]
 21457 0532 9980     		strh	r1, [r3, #4]	@ unaligned
 21458 0534 9A71     		strb	r2, [r3, #6]
2960:..\src/command_processing.c ****     if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 21459              		.loc 1 2960 0
 21460 0536 254B     		ldr	r3, .L828
 21461 0538 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 21462 053c 012B     		cmp	r3, #1
 21463 053e 13D1     		bne	.L820
2961:..\src/command_processing.c ****         // Set date of maintenance from RTC
2962:..\src/command_processing.c ****         store_RTC_current_time();
 21464              		.loc 1 2962 0
 21465 0540 FFF7FEFF 		bl	store_RTC_current_time
2963:..\src/command_processing.c ****         
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 470


2964:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[0] = g_mem.exp.curr_time[0];
 21466              		.loc 1 2964 0
 21467 0544 214B     		ldr	r3, .L828
 21468 0546 93F82022 		ldrb	r2, [r3, #544]	@ zero_extendqisi2
 21469 054a 204B     		ldr	r3, .L828
 21470 054c 83F8A420 		strb	r2, [r3, #164]
2965:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[1] = g_mem.exp.curr_time[1];
 21471              		.loc 1 2965 0
 21472 0550 1E4B     		ldr	r3, .L828
 21473 0552 93F82122 		ldrb	r2, [r3, #545]	@ zero_extendqisi2
 21474 0556 1D4B     		ldr	r3, .L828
 21475 0558 83F8A520 		strb	r2, [r3, #165]
2966:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[2] = g_mem.exp.curr_time[2];
 21476              		.loc 1 2966 0
 21477 055c 1B4B     		ldr	r3, .L828
 21478 055e 93F82222 		ldrb	r2, [r3, #546]	@ zero_extendqisi2
 21479 0562 1A4B     		ldr	r3, .L828
 21480 0564 83F8A620 		strb	r2, [r3, #166]
 21481              	.L820:
2967:..\src/command_processing.c ****     }
2968:..\src/command_processing.c ****     g_mem.exp.read_ADC_sensors_port_flag = FALSE;
 21482              		.loc 1 2968 0
 21483 0568 184B     		ldr	r3, .L828
 21484 056a 0022     		movs	r2, #0
 21485 056c 83F82722 		strb	r2, [r3, #551]
2969:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 21486              		.loc 1 2969 0
 21487 0570 0023     		movs	r3, #0
 21488 0572 FB71     		strb	r3, [r7, #7]
 21489 0574 08E0     		b	.L821
 21490              	.L822:
2970:..\src/command_processing.c ****         g_mem.exp.ADC_conf[i] = 0;
 21491              		.loc 1 2970 0 discriminator 3
 21492 0576 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21493 0578 144A     		ldr	r2, .L828
 21494 057a 1344     		add	r3, r3, r2
 21495 057c 0022     		movs	r2, #0
 21496 057e 83F82822 		strb	r2, [r3, #552]
2969:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 21497              		.loc 1 2969 0 discriminator 3
 21498 0582 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21499 0584 0133     		adds	r3, r3, #1
 21500 0586 FB71     		strb	r3, [r7, #7]
 21501              	.L821:
2969:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 21502              		.loc 1 2969 0 is_stmt 0 discriminator 1
 21503 0588 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21504 058a 0B2B     		cmp	r3, #11
 21505 058c F3D9     		bls	.L822
2971:..\src/command_processing.c ****     }
2972:..\src/command_processing.c **** 
2973:..\src/command_processing.c **** #ifdef SOFTHAND_FW
2974:..\src/command_processing.c ****     // Override memory values with specific ones for SoftHand Pro device
2975:..\src/command_processing.c ****     memInit_SoftHandPro();
2976:..\src/command_processing.c **** #endif 
2977:..\src/command_processing.c **** 
2978:..\src/command_processing.c **** #ifdef MASTER_FW
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 471


2979:..\src/command_processing.c ****     // Override memory values with specific ones for Master device
2980:..\src/command_processing.c ****     memInit_Master();
 21506              		.loc 1 2980 0 is_stmt 1
 21507 058e FFF7FEFF 		bl	memInit_Master
2981:..\src/command_processing.c **** #endif 
2982:..\src/command_processing.c **** 
2983:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
2984:..\src/command_processing.c ****     // Override memory values with specific ones for Air Chmabers device
2985:..\src/command_processing.c ****     memInit_AirChambersFb();
 21508              		.loc 1 2985 0
 21509 0592 FFF7FEFF 		bl	memInit_AirChambersFb
2986:..\src/command_processing.c **** #endif 
2987:..\src/command_processing.c **** 
2988:..\src/command_processing.c ****     // Default generic user_id
2989:..\src/command_processing.c ****     g_mem.dev.user_id = GENERIC_USER;    
 21510              		.loc 1 2989 0
 21511 0596 0D4B     		ldr	r3, .L828
 21512 0598 0022     		movs	r2, #0
 21513 059a 83F8AB20 		strb	r2, [r3, #171]
2990:..\src/command_processing.c **** 
2991:..\src/command_processing.c ****     // set the initialized flag to show EEPROM has been populated
2992:..\src/command_processing.c ****     g_mem.flag = TRUE;
 21514              		.loc 1 2992 0
 21515 059e 0B4B     		ldr	r3, .L828
 21516 05a0 0122     		movs	r2, #1
 21517 05a2 1A70     		strb	r2, [r3]
2993:..\src/command_processing.c ****     
2994:..\src/command_processing.c ****     //write that configuration to EEPROM
2995:..\src/command_processing.c ****     return ( memStore(0) && memStore(DEFAULT_EEPROM_DISPLACEMENT) );
 21518              		.loc 1 2995 0
 21519 05a4 0020     		movs	r0, #0
 21520 05a6 FFF7FEFF 		bl	memStore
 21521 05aa 0346     		mov	r3, r0
 21522 05ac 002B     		cmp	r3, #0
 21523 05ae 07D0     		beq	.L823
 21524              		.loc 1 2995 0 is_stmt 0 discriminator 1
 21525 05b0 3220     		movs	r0, #50
 21526 05b2 FFF7FEFF 		bl	memStore
 21527 05b6 0346     		mov	r3, r0
 21528 05b8 002B     		cmp	r3, #0
 21529 05ba 01D0     		beq	.L823
 21530              		.loc 1 2995 0 discriminator 3
 21531 05bc 0123     		movs	r3, #1
 21532 05be 00E0     		b	.L824
 21533              	.L823:
 21534              		.loc 1 2995 0 discriminator 4
 21535 05c0 0023     		movs	r3, #0
 21536              	.L824:
 21537              		.loc 1 2995 0 discriminator 6
 21538 05c2 DBB2     		uxtb	r3, r3
2996:..\src/command_processing.c **** }
 21539              		.loc 1 2996 0 is_stmt 1 discriminator 6
 21540 05c4 1846     		mov	r0, r3
 21541 05c6 0837     		adds	r7, r7, #8
 21542              		.cfi_def_cfa_offset 8
 21543 05c8 BD46     		mov	sp, r7
 21544              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 472


 21545              		@ sp needed
 21546 05ca 80BD     		pop	{r7, pc}
 21547              	.L829:
 21548              		.align	2
 21549              	.L828:
 21550 05cc 00000000 		.word	g_mem
 21551 05d0 FC1A0000 		.word	.LC263
 21552              		.cfi_endproc
 21553              	.LFE86:
 21554              		.size	memInit, .-memInit
 21555              		.section	.rodata
 21556 1b03 00       		.align	2
 21557              	.LC264:
 21558 1b04 55535230 		.ascii	"USR001\000"
 21558      303100
 21559              		.section	.text.memInit_SoftHandPro,"ax",%progbits
 21560              		.align	2
 21561              		.global	memInit_SoftHandPro
 21562              		.thumb
 21563              		.thumb_func
 21564              		.type	memInit_SoftHandPro, %function
 21565              	memInit_SoftHandPro:
 21566              	.LFB87:
2997:..\src/command_processing.c **** 
2998:..\src/command_processing.c **** //==============================================================================
2999:..\src/command_processing.c **** //                                                          MEMORY INIT SOFTHAND
3000:..\src/command_processing.c **** //==============================================================================
3001:..\src/command_processing.c **** void memInit_SoftHandPro(void)
3002:..\src/command_processing.c **** {
 21567              		.loc 1 3002 0
 21568              		.cfi_startproc
 21569              		@ args = 0, pretend = 0, frame = 8
 21570              		@ frame_needed = 1, uses_anonymous_args = 0
 21571              		@ link register save eliminated.
 21572 0000 80B4     		push	{r7}
 21573              		.cfi_def_cfa_offset 4
 21574              		.cfi_offset 7, -4
 21575 0002 83B0     		sub	sp, sp, #12
 21576              		.cfi_def_cfa_offset 16
 21577 0004 00AF     		add	r7, sp, #0
 21578              		.cfi_def_cfa_register 7
3003:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 21579              		.loc 1 3003 0
 21580 0006 0023     		movs	r3, #0
 21581 0008 FB70     		strb	r3, [r7, #3]
3004:..\src/command_processing.c ****     
3005:..\src/command_processing.c ****     //initialize memory settings ( Specific for SoftHand Pro device )    
3006:..\src/command_processing.c ****     g_mem.dev.right_left = LEFT_HAND;
 21582              		.loc 1 3006 0
 21583 000a 874B     		ldr	r3, .L833
 21584 000c 0122     		movs	r2, #1
 21585 000e 83F8A720 		strb	r2, [r3, #167]
3007:..\src/command_processing.c ****     g_mem.dev.dev_type = SOFTHAND_PRO;
 21586              		.loc 1 3007 0
 21587 0012 854B     		ldr	r3, .L833
 21588 0014 0022     		movs	r2, #0
 21589 0016 83F8AC20 		strb	r2, [r3, #172]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 473


3008:..\src/command_processing.c ****     
3009:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].activ         = 1;
 21590              		.loc 1 3009 0
 21591 001a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21592 001c 8249     		ldr	r1, .L833
 21593 001e 1346     		mov	r3, r2
 21594 0020 DB00     		lsls	r3, r3, #3
 21595 0022 9B1A     		subs	r3, r3, r2
 21596 0024 1B01     		lsls	r3, r3, #4
 21597 0026 0B44     		add	r3, r3, r1
 21598 0028 E033     		adds	r3, r3, #224
 21599 002a 0122     		movs	r2, #1
 21600 002c 1A70     		strb	r2, [r3]
3010:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].input_mode    = INPUT_MODE_EXTERNAL;
 21601              		.loc 1 3010 0
 21602 002e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21603 0030 7D49     		ldr	r1, .L833
 21604 0032 1346     		mov	r3, r2
 21605 0034 DB00     		lsls	r3, r3, #3
 21606 0036 9B1A     		subs	r3, r3, r2
 21607 0038 1B01     		lsls	r3, r3, #4
 21608 003a 0B44     		add	r3, r3, r1
 21609 003c 03F58773 		add	r3, r3, #270
 21610 0040 0022     		movs	r2, #0
 21611 0042 1A70     		strb	r2, [r3]
3011:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].control_mode  = CONTROL_ANGLE;
 21612              		.loc 1 3011 0
 21613 0044 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21614 0046 7849     		ldr	r1, .L833
 21615 0048 1346     		mov	r3, r2
 21616 004a DB00     		lsls	r3, r3, #3
 21617 004c 9B1A     		subs	r3, r3, r2
 21618 004e 1B01     		lsls	r3, r3, #4
 21619 0050 0B44     		add	r3, r3, r1
 21620 0052 03F20F13 		addw	r3, r3, #271
 21621 0056 0022     		movs	r2, #0
 21622 0058 1A70     		strb	r2, [r3]
3012:..\src/command_processing.c ****     
3013:..\src/command_processing.c ****     // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
3014:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 21623              		.loc 1 3014 0
 21624 005a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21625 005c 724B     		ldr	r3, .L833
 21626 005e 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 21627 0062 7149     		ldr	r1, .L833
 21628 0064 1346     		mov	r3, r2
 21629 0066 DB00     		lsls	r3, r3, #3
 21630 0068 9B1A     		subs	r3, r3, r2
 21631 006a 1B01     		lsls	r3, r3, #4
 21632 006c 0B44     		add	r3, r3, r1
 21633 006e 03F58873 		add	r3, r3, #272
 21634 0072 0246     		mov	r2, r0
 21635 0074 1A70     		strb	r2, [r3]
3015:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 21636              		.loc 1 3015 0
 21637 0076 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21638 0078 6B49     		ldr	r1, .L833
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 474


 21639 007a 1346     		mov	r3, r2
 21640 007c DB00     		lsls	r3, r3, #3
 21641 007e 9B1A     		subs	r3, r3, r2
 21642 0080 1B01     		lsls	r3, r3, #4
 21643 0082 0B44     		add	r3, r3, r1
 21644 0084 03F21113 		addw	r3, r3, #273
 21645 0088 0122     		movs	r2, #1
 21646 008a 1A70     		strb	r2, [r3]
3016:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversible motor
 21647              		.loc 1 3016 0
 21648 008c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21649 008e 6649     		ldr	r1, .L833
 21650 0090 1346     		mov	r3, r2
 21651 0092 DB00     		lsls	r3, r3, #3
 21652 0094 9B1A     		subs	r3, r3, r2
 21653 0096 1B01     		lsls	r3, r3, #4
 21654 0098 0B44     		add	r3, r3, r1
 21655 009a 03F58973 		add	r3, r3, #274
 21656 009e 0122     		movs	r2, #1
 21657 00a0 1A70     		strb	r2, [r3]
3017:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 21658              		.loc 1 3017 0
 21659 00a2 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21660 00a4 6049     		ldr	r1, .L833
 21661 00a6 1346     		mov	r3, r2
 21662 00a8 DB00     		lsls	r3, r3, #3
 21663 00aa 9B1A     		subs	r3, r3, r2
 21664 00ac 1B01     		lsls	r3, r3, #4
 21665 00ae 0B44     		add	r3, r3, r1
 21666 00b0 E433     		adds	r3, r3, #228
 21667 00b2 0022     		movs	r2, #0
 21668 00b4 1A60     		str	r2, [r3]
3018:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_l
 21669              		.loc 1 3018 0
 21670 00b6 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21671 00b8 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 21672 00ba 5B48     		ldr	r0, .L833
 21673 00bc 0B46     		mov	r3, r1
 21674 00be DB00     		lsls	r3, r3, #3
 21675 00c0 5B1A     		subs	r3, r3, r1
 21676 00c2 1B01     		lsls	r3, r3, #4
 21677 00c4 0344     		add	r3, r3, r0
 21678 00c6 03F58873 		add	r3, r3, #272
 21679 00ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21680 00cc 1846     		mov	r0, r3
 21681 00ce 5649     		ldr	r1, .L833
 21682 00d0 0346     		mov	r3, r0
 21683 00d2 5B00     		lsls	r3, r3, #1
 21684 00d4 0344     		add	r3, r3, r0
 21685 00d6 1B01     		lsls	r3, r3, #4
 21686 00d8 0B44     		add	r3, r3, r1
 21687 00da 03F29513 		addw	r3, r3, #405
 21688 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21689 00e0 1946     		mov	r1, r3
 21690 00e2 4FF47A53 		mov	r3, #16000
 21691 00e6 03FA01F1 		lsl	r1, r3, r1
 21692 00ea 4F48     		ldr	r0, .L833
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 475


 21693 00ec 1346     		mov	r3, r2
 21694 00ee DB00     		lsls	r3, r3, #3
 21695 00f0 9B1A     		subs	r3, r3, r2
 21696 00f2 1B01     		lsls	r3, r3, #4
 21697 00f4 0344     		add	r3, r3, r0
 21698 00f6 E833     		adds	r3, r3, #232
 21699 00f8 1960     		str	r1, [r3]
 21700              	.LBB21:
3019:..\src/command_processing.c ****     
3020:..\src/command_processing.c ****     for (int i=0; i < N_ENCODER_LINE_MAX; i++) {
 21701              		.loc 1 3020 0
 21702 00fa 0023     		movs	r3, #0
 21703 00fc 7B60     		str	r3, [r7, #4]
 21704 00fe 2EE0     		b	.L831
 21705              	.L832:
3021:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
3022:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = TRUE;
 21706              		.loc 1 3022 0 discriminator 3
 21707 0100 4949     		ldr	r1, .L833
 21708 0102 7A68     		ldr	r2, [r7, #4]
 21709 0104 1346     		mov	r3, r2
 21710 0106 5B00     		lsls	r3, r3, #1
 21711 0108 1344     		add	r3, r3, r2
 21712 010a 1B01     		lsls	r3, r3, #4
 21713 010c 0B44     		add	r3, r3, r1
 21714 010e 03F5D873 		add	r3, r3, #432
 21715 0112 0122     		movs	r2, #1
 21716 0114 1A70     		strb	r2, [r3]
3023:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = SH_N1;     
 21717              		.loc 1 3023 0 discriminator 3
 21718 0116 4449     		ldr	r1, .L833
 21719 0118 7A68     		ldr	r2, [r7, #4]
 21720 011a 1346     		mov	r3, r2
 21721 011c 5B00     		lsls	r3, r3, #1
 21722 011e 1344     		add	r3, r3, r2
 21723 0120 1B01     		lsls	r3, r3, #4
 21724 0122 0B44     		add	r3, r3, r1
 21725 0124 03F2B513 		addw	r3, r3, #437
 21726 0128 2322     		movs	r2, #35
 21727 012a 1A70     		strb	r2, [r3]
3024:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = SH_N2;     
 21728              		.loc 1 3024 0 discriminator 3
 21729 012c 3E49     		ldr	r1, .L833
 21730 012e 7A68     		ldr	r2, [r7, #4]
 21731 0130 1346     		mov	r3, r2
 21732 0132 5B00     		lsls	r3, r3, #1
 21733 0134 1344     		add	r3, r3, r2
 21734 0136 1B01     		lsls	r3, r3, #4
 21735 0138 0B44     		add	r3, r3, r1
 21736 013a 03F5DB73 		add	r3, r3, #438
 21737 013e 0322     		movs	r2, #3
 21738 0140 1A70     		strb	r2, [r3]
3025:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = SH_I1;  
 21739              		.loc 1 3025 0 discriminator 3
 21740 0142 3949     		ldr	r1, .L833
 21741 0144 7A68     		ldr	r2, [r7, #4]
 21742 0146 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 476


 21743 0148 5B00     		lsls	r3, r3, #1
 21744 014a 1344     		add	r3, r3, r2
 21745 014c 1B01     		lsls	r3, r3, #4
 21746 014e 0B44     		add	r3, r3, r1
 21747 0150 03F2B713 		addw	r3, r3, #439
 21748 0154 FF22     		movs	r2, #255
 21749 0156 1A70     		strb	r2, [r3]
3020:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 21750              		.loc 1 3020 0 discriminator 3
 21751 0158 7B68     		ldr	r3, [r7, #4]
 21752 015a 0133     		adds	r3, r3, #1
 21753 015c 7B60     		str	r3, [r7, #4]
 21754              	.L831:
3020:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 21755              		.loc 1 3020 0 is_stmt 0 discriminator 1
 21756 015e 7B68     		ldr	r3, [r7, #4]
 21757 0160 012B     		cmp	r3, #1
 21758 0162 CDDD     		ble	.L832
 21759              	.LBE21:
3026:..\src/command_processing.c ****     }
3027:..\src/command_processing.c ****     
3028:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;
 21760              		.loc 1 3028 0 is_stmt 1
 21761 0164 304B     		ldr	r3, .L833
 21762 0166 0022     		movs	r2, #0
 21763 0168 83F8FD21 		strb	r2, [r3, #509]
3029:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 21764              		.loc 1 3029 0
 21765 016c 2E4B     		ldr	r3, .L833
 21766 016e 4FF48062 		mov	r2, #1024
 21767 0172 C3F8F421 		str	r2, [r3, #500]
3030:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;
 21768              		.loc 1 3030 0
 21769 0176 2C4B     		ldr	r3, .L833
 21770 0178 4FF48062 		mov	r2, #1024
 21771 017c C3F8F821 		str	r2, [r3, #504]
3031:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 21772              		.loc 1 3031 0
 21773 0180 294B     		ldr	r3, .L833
 21774 0182 C822     		movs	r2, #200
 21775 0184 A3F8F021 		strh	r2, [r3, #496]	@ movhi
3032:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 21776              		.loc 1 3032 0
 21777 0188 274B     		ldr	r3, .L833
 21778 018a C822     		movs	r2, #200
 21779 018c A3F8F221 		strh	r2, [r3, #498]	@ movhi
3033:..\src/command_processing.c ****     g_mem.emg.emg_speed = 100;
 21780              		.loc 1 3033 0
 21781 0190 254B     		ldr	r3, .L833
 21782 0192 6422     		movs	r2, #100
 21783 0194 83F8FC21 		strb	r2, [r3, #508]
3034:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;
 21784              		.loc 1 3034 0
 21785 0198 234B     		ldr	r3, .L833
 21786 019a 0022     		movs	r2, #0
 21787 019c 83F8FE21 		strb	r2, [r3, #510]
3035:..\src/command_processing.c ****     
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 477


3036:..\src/command_processing.c ****     //Initialize rest position parameters  
3037:..\src/command_processing.c ****     g_mem.SH.rest_position_flag = FALSE;
 21788              		.loc 1 3037 0
 21789 01a0 214B     		ldr	r3, .L833
 21790 01a2 0022     		movs	r2, #0
 21791 01a4 83F8AC22 		strb	r2, [r3, #684]
3038:..\src/command_processing.c ****     g_mem.SH.rest_pos = (int32)7000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].res[0]; // 56
 21792              		.loc 1 3038 0
 21793 01a8 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21794 01aa 1F49     		ldr	r1, .L833
 21795 01ac 1346     		mov	r3, r2
 21796 01ae DB00     		lsls	r3, r3, #3
 21797 01b0 9B1A     		subs	r3, r3, r2
 21798 01b2 1B01     		lsls	r3, r3, #4
 21799 01b4 0B44     		add	r3, r3, r1
 21800 01b6 03F58873 		add	r3, r3, #272
 21801 01ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21802 01bc 1946     		mov	r1, r3
 21803 01be 1A4A     		ldr	r2, .L833
 21804 01c0 0B46     		mov	r3, r1
 21805 01c2 5B00     		lsls	r3, r3, #1
 21806 01c4 0B44     		add	r3, r3, r1
 21807 01c6 1B01     		lsls	r3, r3, #4
 21808 01c8 1344     		add	r3, r3, r2
 21809 01ca 03F29513 		addw	r3, r3, #405
 21810 01ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21811 01d0 1A46     		mov	r2, r3
 21812 01d2 41F65833 		movw	r3, #7000
 21813 01d6 9340     		lsls	r3, r3, r2
 21814 01d8 134A     		ldr	r2, .L833
 21815 01da C2F8A032 		str	r3, [r2, #672]
3039:..\src/command_processing.c **** 	g_mem.SH.rest_delay = 10;
 21816              		.loc 1 3039 0
 21817 01de 124B     		ldr	r3, .L833
 21818 01e0 0A22     		movs	r2, #10
 21819 01e2 C3F8A422 		str	r2, [r3, #676]
3040:..\src/command_processing.c ****     g_mem.SH.rest_vel = 10000;
 21820              		.loc 1 3040 0
 21821 01e6 104B     		ldr	r3, .L833
 21822 01e8 42F21072 		movw	r2, #10000
 21823 01ec C3F8A822 		str	r2, [r3, #680]
3041:..\src/command_processing.c **** 	
3042:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 21824              		.loc 1 3042 0
 21825 01f0 0D4B     		ldr	r3, .L833
 21826 01f2 0022     		movs	r2, #0
 21827 01f4 83F80022 		strb	r2, [r3, #512]
3043:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 21828              		.loc 1 3043 0
 21829 01f8 0B4B     		ldr	r3, .L833
 21830 01fa 0022     		movs	r2, #0
 21831 01fc 83F82622 		strb	r2, [r3, #550]
3044:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "USR001");
 21832              		.loc 1 3044 0
 21833 0200 094B     		ldr	r3, .L833
 21834 0202 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 21835 0206 1233     		adds	r3, r3, #18
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 478


 21836 0208 5B01     		lsls	r3, r3, #5
 21837 020a 074A     		ldr	r2, .L833
 21838 020c 1344     		add	r3, r3, r2
 21839 020e 074A     		ldr	r2, .L833+4
 21840 0210 1068     		ldr	r0, [r2]	@ unaligned
 21841 0212 1860     		str	r0, [r3]	@ unaligned
 21842 0214 9188     		ldrh	r1, [r2, #4]	@ unaligned
 21843 0216 9279     		ldrb	r2, [r2, #6]
 21844 0218 9980     		strh	r1, [r3, #4]	@ unaligned
 21845 021a 9A71     		strb	r2, [r3, #6]
3045:..\src/command_processing.c **** }
 21846              		.loc 1 3045 0
 21847 021c 00BF     		nop
 21848 021e 0C37     		adds	r7, r7, #12
 21849              		.cfi_def_cfa_offset 4
 21850 0220 BD46     		mov	sp, r7
 21851              		.cfi_def_cfa_register 13
 21852              		@ sp needed
 21853 0222 80BC     		pop	{r7}
 21854              		.cfi_restore 7
 21855              		.cfi_def_cfa_offset 0
 21856 0224 7047     		bx	lr
 21857              	.L834:
 21858 0226 00BF     		.align	2
 21859              	.L833:
 21860 0228 00000000 		.word	g_mem
 21861 022c 041B0000 		.word	.LC264
 21862              		.cfi_endproc
 21863              	.LFE87:
 21864              		.size	memInit_SoftHandPro, .-memInit_SoftHandPro
 21865              		.section	.text.memInit_Master,"ax",%progbits
 21866              		.align	2
 21867              		.global	memInit_Master
 21868              		.thumb
 21869              		.thumb_func
 21870              		.type	memInit_Master, %function
 21871              	memInit_Master:
 21872              	.LFB88:
3046:..\src/command_processing.c **** 
3047:..\src/command_processing.c **** //==============================================================================
3048:..\src/command_processing.c **** //                                                            MEMORY INIT MASTER
3049:..\src/command_processing.c **** //==============================================================================
3050:..\src/command_processing.c **** void memInit_Master(void)
3051:..\src/command_processing.c **** {
 21873              		.loc 1 3051 0
 21874              		.cfi_startproc
 21875              		@ args = 0, pretend = 0, frame = 0
 21876              		@ frame_needed = 1, uses_anonymous_args = 0
 21877              		@ link register save eliminated.
 21878 0000 80B4     		push	{r7}
 21879              		.cfi_def_cfa_offset 4
 21880              		.cfi_offset 7, -4
 21881 0002 00AF     		add	r7, sp, #0
 21882              		.cfi_def_cfa_register 7
3052:..\src/command_processing.c ****     g_mem.dev.id                = 2;
 21883              		.loc 1 3052 0
 21884 0004 074B     		ldr	r3, .L836
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 479


 21885 0006 0222     		movs	r2, #2
 21886 0008 83F8A020 		strb	r2, [r3, #160]
3053:..\src/command_processing.c ****     
3054:..\src/command_processing.c ****     // MS STRUCT
3055:..\src/command_processing.c ****     g_mem.MS.slave_ID = 1;
 21887              		.loc 1 3055 0
 21888 000c 054B     		ldr	r3, .L836
 21889 000e 0122     		movs	r2, #1
 21890 0010 83F8B122 		strb	r2, [r3, #689]
3056:..\src/command_processing.c ****     g_mem.MS.slave_comm_active = FALSE;
 21891              		.loc 1 3056 0
 21892 0014 034B     		ldr	r3, .L836
 21893 0016 0022     		movs	r2, #0
 21894 0018 83F8B022 		strb	r2, [r3, #688]
3057:..\src/command_processing.c **** }
 21895              		.loc 1 3057 0
 21896 001c 00BF     		nop
 21897 001e BD46     		mov	sp, r7
 21898              		.cfi_def_cfa_register 13
 21899              		@ sp needed
 21900 0020 80BC     		pop	{r7}
 21901              		.cfi_restore 7
 21902              		.cfi_def_cfa_offset 0
 21903 0022 7047     		bx	lr
 21904              	.L837:
 21905              		.align	2
 21906              	.L836:
 21907 0024 00000000 		.word	g_mem
 21908              		.cfi_endproc
 21909              	.LFE88:
 21910              		.size	memInit_Master, .-memInit_Master
 21911              		.section	.text.memInit_AirChambersFb,"ax",%progbits
 21912              		.align	2
 21913              		.global	memInit_AirChambersFb
 21914              		.thumb
 21915              		.thumb_func
 21916              		.type	memInit_AirChambersFb, %function
 21917              	memInit_AirChambersFb:
 21918              	.LFB89:
3058:..\src/command_processing.c **** 
3059:..\src/command_processing.c **** //==============================================================================
3060:..\src/command_processing.c **** //                                                   MEMORY INIT AIR CHAMBERS FB
3061:..\src/command_processing.c **** //==============================================================================
3062:..\src/command_processing.c **** void memInit_AirChambersFb(void)
3063:..\src/command_processing.c **** {
 21919              		.loc 1 3063 0
 21920              		.cfi_startproc
 21921              		@ args = 0, pretend = 0, frame = 0
 21922              		@ frame_needed = 1, uses_anonymous_args = 0
 21923              		@ link register save eliminated.
 21924 0000 80B4     		push	{r7}
 21925              		.cfi_def_cfa_offset 4
 21926              		.cfi_offset 7, -4
 21927 0002 00AF     		add	r7, sp, #0
 21928              		.cfi_def_cfa_register 7
3064:..\src/command_processing.c ****     // Default configuration with Air Chambers Haptic feedback
3065:..\src/command_processing.c ****     g_mem.dev.dev_type          = AIR_CHAMBERS_FB;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 480


 21929              		.loc 1 3065 0
 21930 0004 1A4B     		ldr	r3, .L839
 21931 0006 0222     		movs	r2, #2
 21932 0008 83F8AC20 		strb	r2, [r3, #172]
3066:..\src/command_processing.c ****     
3067:..\src/command_processing.c ****     g_mem.motor[0].control_mode  = CONTROL_PWM;
 21933              		.loc 1 3067 0
 21934 000c 184B     		ldr	r3, .L839
 21935 000e 0122     		movs	r2, #1
 21936 0010 83F80F21 		strb	r2, [r3, #271]
3068:..\src/command_processing.c ****     
3069:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
3070:..\src/command_processing.c ****     // Default slave configuration for haptic feedback with SoftHand 2.0.3            
3071:..\src/command_processing.c ****     g_mem.motor[1].input_mode = INPUT_MODE_EMG_FCFS;
 21937              		.loc 1 3071 0
 21938 0014 164B     		ldr	r3, .L839
 21939 0016 0422     		movs	r2, #4
 21940 0018 83F87E21 		strb	r2, [r3, #382]
3072:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_inf = 0;
 21941              		.loc 1 3072 0
 21942 001c 144B     		ldr	r3, .L839
 21943 001e 0022     		movs	r2, #0
 21944 0020 C3F85421 		str	r2, [r3, #340]
3073:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_sup = (int32)22000 << g_mem.enc[g_mem.motor[1].encoder_line].res[0];
 21945              		.loc 1 3073 0
 21946 0024 124B     		ldr	r3, .L839
 21947 0026 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 21948 002a 1946     		mov	r1, r3
 21949 002c 104A     		ldr	r2, .L839
 21950 002e 0B46     		mov	r3, r1
 21951 0030 5B00     		lsls	r3, r3, #1
 21952 0032 0B44     		add	r3, r3, r1
 21953 0034 1B01     		lsls	r3, r3, #4
 21954 0036 1344     		add	r3, r3, r2
 21955 0038 03F29513 		addw	r3, r3, #405
 21956 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21957 003e 1A46     		mov	r2, r3
 21958 0040 45F2F053 		movw	r3, #22000
 21959 0044 9340     		lsls	r3, r3, r2
 21960 0046 0A4A     		ldr	r2, .L839
 21961 0048 C2F85831 		str	r3, [r2, #344]
3074:..\src/command_processing.c ****     
3075:..\src/command_processing.c ****     // FB STRUCT
3076:..\src/command_processing.c ****     g_mem.FB.max_residual_current = 450;
 21962              		.loc 1 3076 0
 21963 004c 084B     		ldr	r3, .L839
 21964 004e 4FF4E172 		mov	r2, #450
 21965 0052 C3F8C022 		str	r2, [r3, #704]
3077:..\src/command_processing.c ****     g_mem.FB.maximum_pressure_kPa = 25.0;
 21966              		.loc 1 3077 0
 21967 0056 064B     		ldr	r3, .L839
 21968 0058 064A     		ldr	r2, .L839+4
 21969 005a C3F8C422 		str	r2, [r3, #708]	@ float
3078:..\src/command_processing.c ****     g_mem.FB.prop_err_fb_gain = 1.0;
 21970              		.loc 1 3078 0
 21971 005e 044B     		ldr	r3, .L839
 21972 0060 4FF07E52 		mov	r2, #1065353216
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 481


 21973 0064 C3F8C822 		str	r2, [r3, #712]	@ float
3079:..\src/command_processing.c **** }
 21974              		.loc 1 3079 0
 21975 0068 00BF     		nop
 21976 006a BD46     		mov	sp, r7
 21977              		.cfi_def_cfa_register 13
 21978              		@ sp needed
 21979 006c 80BC     		pop	{r7}
 21980              		.cfi_restore 7
 21981              		.cfi_def_cfa_offset 0
 21982 006e 7047     		bx	lr
 21983              	.L840:
 21984              		.align	2
 21985              	.L839:
 21986 0070 00000000 		.word	g_mem
 21987 0074 0000C841 		.word	1103626240
 21988              		.cfi_endproc
 21989              	.LFE89:
 21990              		.size	memInit_AirChambersFb, .-memInit_AirChambersFb
 21991              		.section	.text.cmd_get_measurements,"ax",%progbits
 21992              		.align	2
 21993              		.global	cmd_get_measurements
 21994              		.thumb
 21995              		.thumb_func
 21996              		.type	cmd_get_measurements, %function
 21997              	cmd_get_measurements:
 21998              	.LFB90:
3080:..\src/command_processing.c **** 
3081:..\src/command_processing.c **** //==============================================================================
3082:..\src/command_processing.c **** //                                                    ROUTINE INTERRUPT FUNCTION
3083:..\src/command_processing.c **** //==============================================================================
3084:..\src/command_processing.c **** /**
3085:..\src/command_processing.c **** * Bunch of functions used on request from UART communication
3086:..\src/command_processing.c **** **/
3087:..\src/command_processing.c **** 
3088:..\src/command_processing.c **** void cmd_get_measurements(){
 21999              		.loc 1 3088 0
 22000              		.cfi_startproc
 22001              		@ args = 0, pretend = 0, frame = 16
 22002              		@ frame_needed = 1, uses_anonymous_args = 0
 22003 0000 90B5     		push	{r4, r7, lr}
 22004              		.cfi_def_cfa_offset 12
 22005              		.cfi_offset 4, -12
 22006              		.cfi_offset 7, -8
 22007              		.cfi_offset 14, -4
 22008 0002 85B0     		sub	sp, sp, #20
 22009              		.cfi_def_cfa_offset 32
 22010 0004 00AF     		add	r7, sp, #0
 22011              		.cfi_def_cfa_register 7
3089:..\src/command_processing.c ****  
3090:..\src/command_processing.c ****     uint8 CYDATA index;
3091:..\src/command_processing.c ****     int16 aux_int16;
3092:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3093:..\src/command_processing.c ****     
3094:..\src/command_processing.c ****     uint8 packet_data[8]; 
3095:..\src/command_processing.c ****     
3096:..\src/command_processing.c ****     //Header package
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 482


3097:..\src/command_processing.c ****     packet_data[0] = CMD_GET_MEASUREMENTS;   
 22012              		.loc 1 3097 0
 22013 0006 8423     		movs	r3, #132
 22014 0008 3B71     		strb	r3, [r7, #4]
3098:..\src/command_processing.c ****     
3099:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 22015              		.loc 1 3099 0
 22016 000a 0323     		movs	r3, #3
 22017 000c FB73     		strb	r3, [r7, #15]
 22018 000e 38E0     		b	.L842
 22019              	.L843:
3100:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 22020              		.loc 1 3100 0
 22021 0010 264B     		ldr	r3, .L844
 22022 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22023 0016 1A46     		mov	r2, r3
 22024 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 22025 001a 2548     		ldr	r0, .L844+4
 22026 001c 1346     		mov	r3, r2
 22027 001e 5B00     		lsls	r3, r3, #1
 22028 0020 1344     		add	r3, r3, r2
 22029 0022 9B00     		lsls	r3, r3, #2
 22030 0024 1344     		add	r3, r3, r2
 22031 0026 0B44     		add	r3, r3, r1
 22032 0028 50F82320 		ldr	r2, [r0, r3, lsl #2]
 22033 002c 1F4B     		ldr	r3, .L844
 22034 002e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22035 0032 1C46     		mov	r4, r3
 22036 0034 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 22037 0036 1D48     		ldr	r0, .L844
 22038 0038 2346     		mov	r3, r4
 22039 003a 5B00     		lsls	r3, r3, #1
 22040 003c 2344     		add	r3, r3, r4
 22041 003e 1B01     		lsls	r3, r3, #4
 22042 0040 0344     		add	r3, r3, r0
 22043 0042 0B44     		add	r3, r3, r1
 22044 0044 03F29513 		addw	r3, r3, #405
 22045 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22046 004a 42FA03F3 		asr	r3, r2, r3
 22047 004e 1BB2     		sxth	r3, r3
 22048 0050 BB81     		strh	r3, [r7, #12]	@ movhi
3101:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 22049              		.loc 1 3101 0
 22050 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22051 0054 5B00     		lsls	r3, r3, #1
 22052 0056 0233     		adds	r3, r3, #2
 22053 0058 07F10C02 		add	r2, r7, #12
 22054 005c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 22055 005e 07F11001 		add	r1, r7, #16
 22056 0062 0B44     		add	r3, r3, r1
 22057 0064 03F80C2C 		strb	r2, [r3, #-12]
3102:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 22058              		.loc 1 3102 0
 22059 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22060 006a 5B00     		lsls	r3, r3, #1
 22061 006c 5A1C     		adds	r2, r3, #1
 22062 006e 07F10C03 		add	r3, r7, #12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 483


 22063 0072 0133     		adds	r3, r3, #1
 22064 0074 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22065 0076 07F11003 		add	r3, r7, #16
 22066 007a 1344     		add	r3, r3, r2
 22067 007c 0A46     		mov	r2, r1
 22068 007e 03F80C2C 		strb	r2, [r3, #-12]
 22069              	.L842:
3099:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 22070              		.loc 1 3099 0 discriminator 1
 22071 0082 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22072 0084 5A1E     		subs	r2, r3, #1
 22073 0086 FA73     		strb	r2, [r7, #15]
 22074 0088 002B     		cmp	r3, #0
 22075 008a C1D1     		bne	.L843
3103:..\src/command_processing.c ****     }
3104:..\src/command_processing.c **** 
3105:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3106:..\src/command_processing.c **** 
3107:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 22076              		.loc 1 3107 0
 22077 008c 3B1D     		adds	r3, r7, #4
 22078 008e 0721     		movs	r1, #7
 22079 0090 1846     		mov	r0, r3
 22080 0092 FFF7FEFF 		bl	LCRChecksum
 22081 0096 0346     		mov	r3, r0
 22082 0098 FB72     		strb	r3, [r7, #11]
3108:..\src/command_processing.c **** 
3109:..\src/command_processing.c ****     commWrite(packet_data, 8);
 22083              		.loc 1 3109 0
 22084 009a 3B1D     		adds	r3, r7, #4
 22085 009c 0821     		movs	r1, #8
 22086 009e 1846     		mov	r0, r3
 22087 00a0 FFF7FEFF 		bl	commWrite
3110:..\src/command_processing.c ****    
3111:..\src/command_processing.c **** }
 22088              		.loc 1 3111 0
 22089 00a4 00BF     		nop
 22090 00a6 1437     		adds	r7, r7, #20
 22091              		.cfi_def_cfa_offset 12
 22092 00a8 BD46     		mov	sp, r7
 22093              		.cfi_def_cfa_register 13
 22094              		@ sp needed
 22095 00aa 90BD     		pop	{r4, r7, pc}
 22096              	.L845:
 22097              		.align	2
 22098              	.L844:
 22099 00ac 00000000 		.word	g_mem
 22100 00b0 00000000 		.word	g_measOld
 22101              		.cfi_endproc
 22102              	.LFE90:
 22103              		.size	cmd_get_measurements, .-cmd_get_measurements
 22104              		.section	.text.cmd_get_velocities,"ax",%progbits
 22105              		.align	2
 22106              		.global	cmd_get_velocities
 22107              		.thumb
 22108              		.thumb_func
 22109              		.type	cmd_get_velocities, %function
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 484


 22110              	cmd_get_velocities:
 22111              	.LFB91:
3112:..\src/command_processing.c **** 
3113:..\src/command_processing.c **** void cmd_get_velocities(){
 22112              		.loc 1 3113 0
 22113              		.cfi_startproc
 22114              		@ args = 0, pretend = 0, frame = 16
 22115              		@ frame_needed = 1, uses_anonymous_args = 0
 22116 0000 90B5     		push	{r4, r7, lr}
 22117              		.cfi_def_cfa_offset 12
 22118              		.cfi_offset 4, -12
 22119              		.cfi_offset 7, -8
 22120              		.cfi_offset 14, -4
 22121 0002 85B0     		sub	sp, sp, #20
 22122              		.cfi_def_cfa_offset 32
 22123 0004 00AF     		add	r7, sp, #0
 22124              		.cfi_def_cfa_register 7
3114:..\src/command_processing.c ****  
3115:..\src/command_processing.c ****     uint8 CYDATA index;
3116:..\src/command_processing.c ****     int16 aux_int16;
3117:..\src/command_processing.c ****    
3118:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3119:..\src/command_processing.c ****     
3120:..\src/command_processing.c ****     uint8 packet_data[8]; 
3121:..\src/command_processing.c ****     
3122:..\src/command_processing.c ****     //Header package
3123:..\src/command_processing.c ****     packet_data[0] = CMD_GET_VELOCITIES;
 22125              		.loc 1 3123 0
 22126 0006 8923     		movs	r3, #137
 22127 0008 3B71     		strb	r3, [r7, #4]
3124:..\src/command_processing.c ****     
3125:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 22128              		.loc 1 3125 0
 22129 000a 0323     		movs	r3, #3
 22130 000c FB73     		strb	r3, [r7, #15]
 22131 000e 3AE0     		b	.L847
 22132              	.L848:
3126:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 22133              		.loc 1 3126 0
 22134 0010 274B     		ldr	r3, .L849
 22135 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22136 0016 1A46     		mov	r2, r3
 22137 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 22138 001a 2648     		ldr	r0, .L849+4
 22139 001c 1346     		mov	r3, r2
 22140 001e 5B00     		lsls	r3, r3, #1
 22141 0020 1344     		add	r3, r3, r2
 22142 0022 9B00     		lsls	r3, r3, #2
 22143 0024 1344     		add	r3, r3, r2
 22144 0026 0B44     		add	r3, r3, r1
 22145 0028 0633     		adds	r3, r3, #6
 22146 002a 9B00     		lsls	r3, r3, #2
 22147 002c 0344     		add	r3, r3, r0
 22148 002e 5A68     		ldr	r2, [r3, #4]
 22149 0030 1F4B     		ldr	r3, .L849
 22150 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22151 0036 1C46     		mov	r4, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 485


 22152 0038 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 22153 003a 1D48     		ldr	r0, .L849
 22154 003c 2346     		mov	r3, r4
 22155 003e 5B00     		lsls	r3, r3, #1
 22156 0040 2344     		add	r3, r3, r4
 22157 0042 1B01     		lsls	r3, r3, #4
 22158 0044 0344     		add	r3, r3, r0
 22159 0046 0B44     		add	r3, r3, r1
 22160 0048 03F29513 		addw	r3, r3, #405
 22161 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22162 004e 42FA03F3 		asr	r3, r2, r3
 22163 0052 1BB2     		sxth	r3, r3
 22164 0054 BB81     		strh	r3, [r7, #12]	@ movhi
3127:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 22165              		.loc 1 3127 0
 22166 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22167 0058 5B00     		lsls	r3, r3, #1
 22168 005a 0233     		adds	r3, r3, #2
 22169 005c 07F10C02 		add	r2, r7, #12
 22170 0060 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 22171 0062 07F11001 		add	r1, r7, #16
 22172 0066 0B44     		add	r3, r3, r1
 22173 0068 03F80C2C 		strb	r2, [r3, #-12]
3128:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 22174              		.loc 1 3128 0
 22175 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22176 006e 5B00     		lsls	r3, r3, #1
 22177 0070 5A1C     		adds	r2, r3, #1
 22178 0072 07F10C03 		add	r3, r7, #12
 22179 0076 0133     		adds	r3, r3, #1
 22180 0078 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22181 007a 07F11003 		add	r3, r7, #16
 22182 007e 1344     		add	r3, r3, r2
 22183 0080 0A46     		mov	r2, r1
 22184 0082 03F80C2C 		strb	r2, [r3, #-12]
 22185              	.L847:
3125:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 22186              		.loc 1 3125 0 discriminator 1
 22187 0086 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22188 0088 5A1E     		subs	r2, r3, #1
 22189 008a FA73     		strb	r2, [r7, #15]
 22190 008c 002B     		cmp	r3, #0
 22191 008e BFD1     		bne	.L848
3129:..\src/command_processing.c ****     }
3130:..\src/command_processing.c ****             
3131:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3132:..\src/command_processing.c **** 
3133:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 22192              		.loc 1 3133 0
 22193 0090 3B1D     		adds	r3, r7, #4
 22194 0092 0721     		movs	r1, #7
 22195 0094 1846     		mov	r0, r3
 22196 0096 FFF7FEFF 		bl	LCRChecksum
 22197 009a 0346     		mov	r3, r0
 22198 009c FB72     		strb	r3, [r7, #11]
3134:..\src/command_processing.c **** 
3135:..\src/command_processing.c ****     commWrite(packet_data, 8); 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 486


 22199              		.loc 1 3135 0
 22200 009e 3B1D     		adds	r3, r7, #4
 22201 00a0 0821     		movs	r1, #8
 22202 00a2 1846     		mov	r0, r3
 22203 00a4 FFF7FEFF 		bl	commWrite
3136:..\src/command_processing.c **** }
 22204              		.loc 1 3136 0
 22205 00a8 00BF     		nop
 22206 00aa 1437     		adds	r7, r7, #20
 22207              		.cfi_def_cfa_offset 12
 22208 00ac BD46     		mov	sp, r7
 22209              		.cfi_def_cfa_register 13
 22210              		@ sp needed
 22211 00ae 90BD     		pop	{r4, r7, pc}
 22212              	.L850:
 22213              		.align	2
 22214              	.L849:
 22215 00b0 00000000 		.word	g_mem
 22216 00b4 00000000 		.word	g_measOld
 22217              		.cfi_endproc
 22218              	.LFE91:
 22219              		.size	cmd_get_velocities, .-cmd_get_velocities
 22220              		.section	.text.cmd_get_accelerations,"ax",%progbits
 22221              		.align	2
 22222              		.global	cmd_get_accelerations
 22223              		.thumb
 22224              		.thumb_func
 22225              		.type	cmd_get_accelerations, %function
 22226              	cmd_get_accelerations:
 22227              	.LFB92:
3137:..\src/command_processing.c **** 
3138:..\src/command_processing.c **** void cmd_get_accelerations(){
 22228              		.loc 1 3138 0
 22229              		.cfi_startproc
 22230              		@ args = 0, pretend = 0, frame = 16
 22231              		@ frame_needed = 1, uses_anonymous_args = 0
 22232 0000 90B5     		push	{r4, r7, lr}
 22233              		.cfi_def_cfa_offset 12
 22234              		.cfi_offset 4, -12
 22235              		.cfi_offset 7, -8
 22236              		.cfi_offset 14, -4
 22237 0002 85B0     		sub	sp, sp, #20
 22238              		.cfi_def_cfa_offset 32
 22239 0004 00AF     		add	r7, sp, #0
 22240              		.cfi_def_cfa_register 7
3139:..\src/command_processing.c ****  
3140:..\src/command_processing.c ****     uint8 CYDATA index;
3141:..\src/command_processing.c ****     int16 aux_int16;
3142:..\src/command_processing.c ****     
3143:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3144:..\src/command_processing.c ****     
3145:..\src/command_processing.c ****     uint8 packet_data[8]; 
3146:..\src/command_processing.c ****     
3147:..\src/command_processing.c ****     //Header package
3148:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACCEL;   
 22241              		.loc 1 3148 0
 22242 0006 8B23     		movs	r3, #139
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 487


 22243 0008 3B71     		strb	r3, [r7, #4]
3149:..\src/command_processing.c ****     
3150:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 22244              		.loc 1 3150 0
 22245 000a 0323     		movs	r3, #3
 22246 000c FB73     		strb	r3, [r7, #15]
 22247 000e 39E0     		b	.L852
 22248              	.L853:
3151:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 22249              		.loc 1 3151 0
 22250 0010 274B     		ldr	r3, .L854
 22251 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22252 0016 1A46     		mov	r2, r3
 22253 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 22254 001a 2648     		ldr	r0, .L854+4
 22255 001c 1346     		mov	r3, r2
 22256 001e 5B00     		lsls	r3, r3, #1
 22257 0020 1344     		add	r3, r3, r2
 22258 0022 9B00     		lsls	r3, r3, #2
 22259 0024 1344     		add	r3, r3, r2
 22260 0026 0B44     		add	r3, r3, r1
 22261 0028 0A33     		adds	r3, r3, #10
 22262 002a 50F82320 		ldr	r2, [r0, r3, lsl #2]
 22263 002e 204B     		ldr	r3, .L854
 22264 0030 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22265 0034 1C46     		mov	r4, r3
 22266 0036 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 22267 0038 1D48     		ldr	r0, .L854
 22268 003a 2346     		mov	r3, r4
 22269 003c 5B00     		lsls	r3, r3, #1
 22270 003e 2344     		add	r3, r3, r4
 22271 0040 1B01     		lsls	r3, r3, #4
 22272 0042 0344     		add	r3, r3, r0
 22273 0044 0B44     		add	r3, r3, r1
 22274 0046 03F29513 		addw	r3, r3, #405
 22275 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22276 004c 42FA03F3 		asr	r3, r2, r3
 22277 0050 1BB2     		sxth	r3, r3
 22278 0052 BB81     		strh	r3, [r7, #12]	@ movhi
3152:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 22279              		.loc 1 3152 0
 22280 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22281 0056 5B00     		lsls	r3, r3, #1
 22282 0058 0233     		adds	r3, r3, #2
 22283 005a 07F10C02 		add	r2, r7, #12
 22284 005e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 22285 0060 07F11001 		add	r1, r7, #16
 22286 0064 0B44     		add	r3, r3, r1
 22287 0066 03F80C2C 		strb	r2, [r3, #-12]
3153:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 22288              		.loc 1 3153 0
 22289 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22290 006c 5B00     		lsls	r3, r3, #1
 22291 006e 5A1C     		adds	r2, r3, #1
 22292 0070 07F10C03 		add	r3, r7, #12
 22293 0074 0133     		adds	r3, r3, #1
 22294 0076 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 488


 22295 0078 07F11003 		add	r3, r7, #16
 22296 007c 1344     		add	r3, r3, r2
 22297 007e 0A46     		mov	r2, r1
 22298 0080 03F80C2C 		strb	r2, [r3, #-12]
 22299              	.L852:
3150:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 22300              		.loc 1 3150 0 discriminator 1
 22301 0084 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22302 0086 5A1E     		subs	r2, r3, #1
 22303 0088 FA73     		strb	r2, [r7, #15]
 22304 008a 002B     		cmp	r3, #0
 22305 008c C0D1     		bne	.L853
3154:..\src/command_processing.c ****     }
3155:..\src/command_processing.c ****     
3156:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3157:..\src/command_processing.c **** 
3158:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 22306              		.loc 1 3158 0
 22307 008e 3B1D     		adds	r3, r7, #4
 22308 0090 0721     		movs	r1, #7
 22309 0092 1846     		mov	r0, r3
 22310 0094 FFF7FEFF 		bl	LCRChecksum
 22311 0098 0346     		mov	r3, r0
 22312 009a FB72     		strb	r3, [r7, #11]
3159:..\src/command_processing.c **** 
3160:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 22313              		.loc 1 3160 0
 22314 009c 3B1D     		adds	r3, r7, #4
 22315 009e 0821     		movs	r1, #8
 22316 00a0 1846     		mov	r0, r3
 22317 00a2 FFF7FEFF 		bl	commWrite
3161:..\src/command_processing.c **** }
 22318              		.loc 1 3161 0
 22319 00a6 00BF     		nop
 22320 00a8 1437     		adds	r7, r7, #20
 22321              		.cfi_def_cfa_offset 12
 22322 00aa BD46     		mov	sp, r7
 22323              		.cfi_def_cfa_register 13
 22324              		@ sp needed
 22325 00ac 90BD     		pop	{r4, r7, pc}
 22326              	.L855:
 22327 00ae 00BF     		.align	2
 22328              	.L854:
 22329 00b0 00000000 		.word	g_mem
 22330 00b4 00000000 		.word	g_measOld
 22331              		.cfi_endproc
 22332              	.LFE92:
 22333              		.size	cmd_get_accelerations, .-cmd_get_accelerations
 22334              		.section	.text.cmd_set_inputs,"ax",%progbits
 22335              		.align	2
 22336              		.global	cmd_set_inputs
 22337              		.thumb
 22338              		.thumb_func
 22339              		.type	cmd_set_inputs, %function
 22340              	cmd_set_inputs:
 22341              	.LFB93:
3162:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 489


3163:..\src/command_processing.c **** void cmd_set_inputs(){
 22342              		.loc 1 3163 0
 22343              		.cfi_startproc
 22344              		@ args = 0, pretend = 0, frame = 8
 22345              		@ frame_needed = 1, uses_anonymous_args = 0
 22346              		@ link register save eliminated.
 22347 0000 90B4     		push	{r4, r7}
 22348              		.cfi_def_cfa_offset 8
 22349              		.cfi_offset 4, -8
 22350              		.cfi_offset 7, -4
 22351 0002 82B0     		sub	sp, sp, #8
 22352              		.cfi_def_cfa_offset 16
 22353 0004 00AF     		add	r7, sp, #0
 22354              		.cfi_def_cfa_register 7
3164:..\src/command_processing.c ****     
3165:..\src/command_processing.c ****     // Store position setted in right variables
3166:..\src/command_processing.c ****     int16 aux_int16[NUM_OF_MOTORS];
3167:..\src/command_processing.c ****     static int16 last_aux_int16[NUM_OF_MOTORS];
3168:..\src/command_processing.c ****     
3169:..\src/command_processing.c ****     aux_int16[0] = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 22355              		.loc 1 3169 0
 22356 0006 894B     		ldr	r3, .L870
 22357 0008 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 22358 000a 1B02     		lsls	r3, r3, #8
 22359 000c 1AB2     		sxth	r2, r3
 22360 000e 874B     		ldr	r3, .L870
 22361 0010 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 22362 0012 1BB2     		sxth	r3, r3
 22363 0014 1343     		orrs	r3, r3, r2
 22364 0016 1BB2     		sxth	r3, r3
 22365 0018 3B80     		strh	r3, [r7]	@ movhi
3170:..\src/command_processing.c ****     aux_int16[1] = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 22366              		.loc 1 3170 0
 22367 001a 844B     		ldr	r3, .L870
 22368 001c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 22369 001e 1B02     		lsls	r3, r3, #8
 22370 0020 1AB2     		sxth	r2, r3
 22371 0022 824B     		ldr	r3, .L870
 22372 0024 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 22373 0026 1BB2     		sxth	r3, r3
 22374 0028 1343     		orrs	r3, r3, r2
 22375 002a 1BB2     		sxth	r3, r3
 22376 002c 7B80     		strh	r3, [r7, #2]	@ movhi
 22377              	.LBB22:
3171:..\src/command_processing.c ****     
3172:..\src/command_processing.c ****     // Check if last command received was the same as this 
3173:..\src/command_processing.c ****     //(Note: last command not last motor reference in g_ref)
3174:..\src/command_processing.c ****     for (uint8 i = 0; i < (1 + c_mem.dev.use_2nd_motor_flag); i++) {
 22378              		.loc 1 3174 0
 22379 002e 0023     		movs	r3, #0
 22380 0030 FB71     		strb	r3, [r7, #7]
 22381 0032 1DE0     		b	.L857
 22382              	.L859:
3175:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 22383              		.loc 1 3175 0
 22384 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22385 0036 7E4A     		ldr	r2, .L870+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 490


 22386 0038 32F91320 		ldrsh	r2, [r2, r3, lsl #1]
 22387 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22388 003e 5B00     		lsls	r3, r3, #1
 22389 0040 07F10801 		add	r1, r7, #8
 22390 0044 0B44     		add	r3, r3, r1
 22391 0046 33F9083C 		ldrsh	r3, [r3, #-8]
 22392 004a 9A42     		cmp	r2, r3
 22393 004c 02D0     		beq	.L858
3176:..\src/command_processing.c ****             change_ext_ref_flag = TRUE;
 22394              		.loc 1 3176 0
 22395 004e 794B     		ldr	r3, .L870+8
 22396 0050 0122     		movs	r2, #1
 22397 0052 1A70     		strb	r2, [r3]
 22398              	.L858:
3177:..\src/command_processing.c ****        }
3178:..\src/command_processing.c ****         // Update last command
3179:..\src/command_processing.c ****        last_aux_int16[i] = aux_int16[i];
 22399              		.loc 1 3179 0 discriminator 2
 22400 0054 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22401 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22402 0058 5B00     		lsls	r3, r3, #1
 22403 005a 07F10801 		add	r1, r7, #8
 22404 005e 0B44     		add	r3, r3, r1
 22405 0060 33F9081C 		ldrsh	r1, [r3, #-8]
 22406 0064 724B     		ldr	r3, .L870+4
 22407 0066 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
3174:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 22408              		.loc 1 3174 0 discriminator 2
 22409 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22410 006c 0133     		adds	r3, r3, #1
 22411 006e FB71     		strb	r3, [r7, #7]
 22412              	.L857:
3174:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 22413              		.loc 1 3174 0 is_stmt 0 discriminator 1
 22414 0070 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22415 0072 714B     		ldr	r3, .L870+12
 22416 0074 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 22417 0078 0133     		adds	r3, r3, #1
 22418 007a 9A42     		cmp	r2, r3
 22419 007c DADB     		blt	.L859
 22420              	.LBE22:
3180:..\src/command_processing.c ****     }
3181:..\src/command_processing.c ****     
3182:..\src/command_processing.c ****     // Update g_refNew in case a new command has been received
3183:..\src/command_processing.c ****     if (change_ext_ref_flag) {
 22421              		.loc 1 3183 0 is_stmt 1
 22422 007e 6D4B     		ldr	r3, .L870+8
 22423 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22424 0082 002B     		cmp	r3, #0
 22425 0084 00F0CC80 		beq	.L869
 22426              	.LBB23:
3184:..\src/command_processing.c ****         for (uint8 i = 0; i< NUM_OF_MOTORS; i++) {
 22427              		.loc 1 3184 0
 22428 0088 0023     		movs	r3, #0
 22429 008a BB71     		strb	r3, [r7, #6]
 22430 008c C4E0     		b	.L861
 22431              	.L868:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 491


3185:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 22432              		.loc 1 3185 0
 22433 008e BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22434 0090 6A49     		ldr	r1, .L870+16
 22435 0092 1346     		mov	r3, r2
 22436 0094 DB00     		lsls	r3, r3, #3
 22437 0096 9B1A     		subs	r3, r3, r2
 22438 0098 1B01     		lsls	r3, r3, #4
 22439 009a 0B44     		add	r3, r3, r1
 22440 009c 03F20F13 		addw	r3, r3, #271
 22441 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22442 00a2 022B     		cmp	r3, #2
 22443 00a4 0ED1     		bne	.L862
3186:..\src/command_processing.c ****                 g_refNew[i].curr = aux_int16[i];
 22444              		.loc 1 3186 0
 22445 00a6 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22446 00a8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22447 00aa 5B00     		lsls	r3, r3, #1
 22448 00ac 07F10801 		add	r1, r7, #8
 22449 00b0 0B44     		add	r3, r3, r1
 22450 00b2 33F9083C 		ldrsh	r3, [r3, #-8]
 22451 00b6 1846     		mov	r0, r3
 22452 00b8 6149     		ldr	r1, .L870+20
 22453 00ba 1301     		lsls	r3, r2, #4
 22454 00bc 0B44     		add	r3, r3, r1
 22455 00be 0433     		adds	r3, r3, #4
 22456 00c0 1860     		str	r0, [r3]
 22457 00c2 47E0     		b	.L863
 22458              	.L862:
3187:..\src/command_processing.c ****             }
3188:..\src/command_processing.c ****             else {
3189:..\src/command_processing.c ****                 if(g_mem.motor[i].control_mode == CONTROL_PWM) {
 22459              		.loc 1 3189 0
 22460 00c4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22461 00c6 5D49     		ldr	r1, .L870+16
 22462 00c8 1346     		mov	r3, r2
 22463 00ca DB00     		lsls	r3, r3, #3
 22464 00cc 9B1A     		subs	r3, r3, r2
 22465 00ce 1B01     		lsls	r3, r3, #4
 22466 00d0 0B44     		add	r3, r3, r1
 22467 00d2 03F20F13 		addw	r3, r3, #271
 22468 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22469 00d8 012B     		cmp	r3, #1
 22470 00da 0ED1     		bne	.L864
3190:..\src/command_processing.c ****                     g_refNew[i].pwm = aux_int16[i];
 22471              		.loc 1 3190 0
 22472 00dc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22473 00de BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22474 00e0 5B00     		lsls	r3, r3, #1
 22475 00e2 07F10801 		add	r1, r7, #8
 22476 00e6 0B44     		add	r3, r3, r1
 22477 00e8 33F9083C 		ldrsh	r3, [r3, #-8]
 22478 00ec 1846     		mov	r0, r3
 22479 00ee 5449     		ldr	r1, .L870+20
 22480 00f0 1301     		lsls	r3, r2, #4
 22481 00f2 0B44     		add	r3, r3, r1
 22482 00f4 0833     		adds	r3, r3, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 492


 22483 00f6 1860     		str	r0, [r3]
 22484 00f8 2CE0     		b	.L863
 22485              	.L864:
3191:..\src/command_processing.c ****                 }
3192:..\src/command_processing.c ****                 else {
3193:..\src/command_processing.c ****                     g_refNew[i].pos = aux_int16[i];   // motor ref
 22486              		.loc 1 3193 0
 22487 00fa BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22488 00fc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22489 00fe 5B00     		lsls	r3, r3, #1
 22490 0100 07F10801 		add	r1, r7, #8
 22491 0104 0B44     		add	r3, r3, r1
 22492 0106 33F9083C 		ldrsh	r3, [r3, #-8]
 22493 010a 1846     		mov	r0, r3
 22494 010c 4C49     		ldr	r1, .L870+20
 22495 010e 1301     		lsls	r3, r2, #4
 22496 0110 0B44     		add	r3, r3, r1
 22497 0112 1860     		str	r0, [r3]
3194:..\src/command_processing.c ****                     g_refNew[i].pos = g_refNew[i].pos << g_mem.enc[c_mem.motor[i].encoder_line].res
 22498              		.loc 1 3194 0
 22499 0114 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22500 0116 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22501 0118 494A     		ldr	r2, .L870+20
 22502 011a 1B01     		lsls	r3, r3, #4
 22503 011c 1344     		add	r3, r3, r2
 22504 011e 1868     		ldr	r0, [r3]
 22505 0120 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22506 0122 454C     		ldr	r4, .L870+12
 22507 0124 1346     		mov	r3, r2
 22508 0126 DB00     		lsls	r3, r3, #3
 22509 0128 9B1A     		subs	r3, r3, r2
 22510 012a 1B01     		lsls	r3, r3, #4
 22511 012c 2344     		add	r3, r3, r4
 22512 012e 03F58873 		add	r3, r3, #272
 22513 0132 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22514 0134 1C46     		mov	r4, r3
 22515 0136 414A     		ldr	r2, .L870+16
 22516 0138 2346     		mov	r3, r4
 22517 013a 5B00     		lsls	r3, r3, #1
 22518 013c 2344     		add	r3, r3, r4
 22519 013e 1B01     		lsls	r3, r3, #4
 22520 0140 1344     		add	r3, r3, r2
 22521 0142 03F29513 		addw	r3, r3, #405
 22522 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22523 0148 00FA03F2 		lsl	r2, r0, r3
 22524 014c 3C48     		ldr	r0, .L870+20
 22525 014e 0B01     		lsls	r3, r1, #4
 22526 0150 0344     		add	r3, r3, r0
 22527 0152 1A60     		str	r2, [r3]
 22528              	.L863:
3195:..\src/command_processing.c ****                 }
3196:..\src/command_processing.c ****             }  
3197:..\src/command_processing.c ****                
3198:..\src/command_processing.c ****             // Check if the reference is nor higher or lower than the position limits
3199:..\src/command_processing.c ****             if (c_mem.motor[i].pos_lim_flag && (g_mem.motor[i].control_mode == CURR_AND_POS_CONTROL
 22529              		.loc 1 3199 0
 22530 0154 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 493


 22531 0156 3849     		ldr	r1, .L870+12
 22532 0158 1346     		mov	r3, r2
 22533 015a DB00     		lsls	r3, r3, #3
 22534 015c 9B1A     		subs	r3, r3, r2
 22535 015e 1B01     		lsls	r3, r3, #4
 22536 0160 0B44     		add	r3, r3, r1
 22537 0162 E333     		adds	r3, r3, #227
 22538 0164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22539 0166 002B     		cmp	r3, #0
 22540 0168 53D0     		beq	.L865
 22541              		.loc 1 3199 0 is_stmt 0 discriminator 1
 22542 016a BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22543 016c 3349     		ldr	r1, .L870+16
 22544 016e 1346     		mov	r3, r2
 22545 0170 DB00     		lsls	r3, r3, #3
 22546 0172 9B1A     		subs	r3, r3, r2
 22547 0174 1B01     		lsls	r3, r3, #4
 22548 0176 0B44     		add	r3, r3, r1
 22549 0178 03F20F13 		addw	r3, r3, #271
 22550 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22551 017e 032B     		cmp	r3, #3
 22552 0180 0BD0     		beq	.L866
 22553              		.loc 1 3199 0 discriminator 2
 22554 0182 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22555 0184 2D49     		ldr	r1, .L870+16
 22556 0186 1346     		mov	r3, r2
 22557 0188 DB00     		lsls	r3, r3, #3
 22558 018a 9B1A     		subs	r3, r3, r2
 22559 018c 1B01     		lsls	r3, r3, #4
 22560 018e 0B44     		add	r3, r3, r1
 22561 0190 03F20F13 		addw	r3, r3, #271
 22562 0194 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22563 0196 002B     		cmp	r3, #0
 22564 0198 3BD1     		bne	.L865
 22565              	.L866:
3200:..\src/command_processing.c ****                 
3201:..\src/command_processing.c ****                 if (g_refNew[i].pos < c_mem.motor[i].pos_lim_inf) 
 22566              		.loc 1 3201 0 is_stmt 1
 22567 019a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22568 019c 284A     		ldr	r2, .L870+20
 22569 019e 1B01     		lsls	r3, r3, #4
 22570 01a0 1344     		add	r3, r3, r2
 22571 01a2 1968     		ldr	r1, [r3]
 22572 01a4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22573 01a6 2448     		ldr	r0, .L870+12
 22574 01a8 1346     		mov	r3, r2
 22575 01aa DB00     		lsls	r3, r3, #3
 22576 01ac 9B1A     		subs	r3, r3, r2
 22577 01ae 1B01     		lsls	r3, r3, #4
 22578 01b0 0344     		add	r3, r3, r0
 22579 01b2 E433     		adds	r3, r3, #228
 22580 01b4 1B68     		ldr	r3, [r3]
 22581 01b6 9942     		cmp	r1, r3
 22582 01b8 0DDA     		bge	.L867
3202:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_inf;
 22583              		.loc 1 3202 0
 22584 01ba B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 494


 22585 01bc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22586 01be 1E48     		ldr	r0, .L870+12
 22587 01c0 1346     		mov	r3, r2
 22588 01c2 DB00     		lsls	r3, r3, #3
 22589 01c4 9B1A     		subs	r3, r3, r2
 22590 01c6 1B01     		lsls	r3, r3, #4
 22591 01c8 0344     		add	r3, r3, r0
 22592 01ca E433     		adds	r3, r3, #228
 22593 01cc 1A68     		ldr	r2, [r3]
 22594 01ce 1C48     		ldr	r0, .L870+20
 22595 01d0 0B01     		lsls	r3, r1, #4
 22596 01d2 0344     		add	r3, r3, r0
 22597 01d4 1A60     		str	r2, [r3]
 22598              	.L867:
3203:..\src/command_processing.c **** 
3204:..\src/command_processing.c ****                 if (g_refNew[i].pos > c_mem.motor[i].pos_lim_sup) 
 22599              		.loc 1 3204 0
 22600 01d6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22601 01d8 194A     		ldr	r2, .L870+20
 22602 01da 1B01     		lsls	r3, r3, #4
 22603 01dc 1344     		add	r3, r3, r2
 22604 01de 1968     		ldr	r1, [r3]
 22605 01e0 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22606 01e2 1548     		ldr	r0, .L870+12
 22607 01e4 1346     		mov	r3, r2
 22608 01e6 DB00     		lsls	r3, r3, #3
 22609 01e8 9B1A     		subs	r3, r3, r2
 22610 01ea 1B01     		lsls	r3, r3, #4
 22611 01ec 0344     		add	r3, r3, r0
 22612 01ee E833     		adds	r3, r3, #232
 22613 01f0 1B68     		ldr	r3, [r3]
 22614 01f2 9942     		cmp	r1, r3
 22615 01f4 0DDD     		ble	.L865
3205:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_sup;
 22616              		.loc 1 3205 0
 22617 01f6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22618 01f8 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22619 01fa 0F48     		ldr	r0, .L870+12
 22620 01fc 1346     		mov	r3, r2
 22621 01fe DB00     		lsls	r3, r3, #3
 22622 0200 9B1A     		subs	r3, r3, r2
 22623 0202 1B01     		lsls	r3, r3, #4
 22624 0204 0344     		add	r3, r3, r0
 22625 0206 E833     		adds	r3, r3, #232
 22626 0208 1A68     		ldr	r2, [r3]
 22627 020a 0D48     		ldr	r0, .L870+20
 22628 020c 0B01     		lsls	r3, r1, #4
 22629 020e 0344     		add	r3, r3, r0
 22630 0210 1A60     		str	r2, [r3]
 22631              	.L865:
3184:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 22632              		.loc 1 3184 0 discriminator 2
 22633 0212 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22634 0214 0133     		adds	r3, r3, #1
 22635 0216 BB71     		strb	r3, [r7, #6]
 22636              	.L861:
3184:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 495


 22637              		.loc 1 3184 0 is_stmt 0 discriminator 1
 22638 0218 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22639 021a 012B     		cmp	r3, #1
 22640 021c 7FF637AF 		bls	.L868
 22641              	.L869:
 22642              	.LBE23:
3206:..\src/command_processing.c ****             }
3207:..\src/command_processing.c ****         }  
3208:..\src/command_processing.c ****     }
3209:..\src/command_processing.c **** }
 22643              		.loc 1 3209 0 is_stmt 1
 22644 0220 00BF     		nop
 22645 0222 0837     		adds	r7, r7, #8
 22646              		.cfi_def_cfa_offset 8
 22647 0224 BD46     		mov	sp, r7
 22648              		.cfi_def_cfa_register 13
 22649              		@ sp needed
 22650 0226 90BC     		pop	{r4, r7}
 22651              		.cfi_restore 7
 22652              		.cfi_restore 4
 22653              		.cfi_def_cfa_offset 0
 22654 0228 7047     		bx	lr
 22655              	.L871:
 22656 022a 00BF     		.align	2
 22657              	.L870:
 22658 022c 00000000 		.word	g_rx
 22659 0230 04000000 		.word	last_aux_int16.11266
 22660 0234 00000000 		.word	change_ext_ref_flag
 22661 0238 00000000 		.word	c_mem
 22662 023c 00000000 		.word	g_mem
 22663 0240 00000000 		.word	g_refNew
 22664              		.cfi_endproc
 22665              	.LFE93:
 22666              		.size	cmd_set_inputs, .-cmd_set_inputs
 22667              		.section	.text.cmd_activate,"ax",%progbits
 22668              		.align	2
 22669              		.global	cmd_activate
 22670              		.thumb
 22671              		.thumb_func
 22672              		.type	cmd_activate, %function
 22673              	cmd_activate:
 22674              	.LFB94:
3210:..\src/command_processing.c **** 
3211:..\src/command_processing.c **** void cmd_activate(){
 22675              		.loc 1 3211 0
 22676              		.cfi_startproc
 22677              		@ args = 0, pretend = 0, frame = 8
 22678              		@ frame_needed = 1, uses_anonymous_args = 0
 22679 0000 80B5     		push	{r7, lr}
 22680              		.cfi_def_cfa_offset 8
 22681              		.cfi_offset 7, -8
 22682              		.cfi_offset 14, -4
 22683 0002 82B0     		sub	sp, sp, #8
 22684              		.cfi_def_cfa_offset 16
 22685 0004 00AF     		add	r7, sp, #0
 22686              		.cfi_def_cfa_register 7
3212:..\src/command_processing.c ****     
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 496


3213:..\src/command_processing.c ****     // Store new value reads
3214:..\src/command_processing.c ****     uint8 aux = g_rx.buffer[1];
 22687              		.loc 1 3214 0
 22688 0006 334B     		ldr	r3, .L881
 22689 0008 5B78     		ldrb	r3, [r3, #1]
 22690 000a FB71     		strb	r3, [r7, #7]
3215:..\src/command_processing.c ****     
3216:..\src/command_processing.c ****     // Check type of control mode enabled
3217:..\src/command_processing.c ****     if ((g_mem.motor[0].control_mode == CONTROL_ANGLE) || (g_mem.motor[0].control_mode == CURR_AND_
 22691              		.loc 1 3217 0
 22692 000c 324B     		ldr	r3, .L881+4
 22693 000e 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 22694 0012 002B     		cmp	r3, #0
 22695 0014 04D0     		beq	.L873
 22696              		.loc 1 3217 0 is_stmt 0 discriminator 1
 22697 0016 304B     		ldr	r3, .L881+4
 22698 0018 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 22699 001c 032B     		cmp	r3, #3
 22700 001e 0BD1     		bne	.L874
 22701              	.L873:
3218:..\src/command_processing.c ****         g_refNew[0].pos = g_meas[g_mem.motor[0].encoder_line].pos[0];
 22702              		.loc 1 3218 0 is_stmt 1
 22703 0020 2D4B     		ldr	r3, .L881+4
 22704 0022 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22705 0026 1946     		mov	r1, r3
 22706 0028 2C4A     		ldr	r2, .L881+8
 22707 002a 3423     		movs	r3, #52
 22708 002c 03FB01F3 		mul	r3, r3, r1
 22709 0030 1344     		add	r3, r3, r2
 22710 0032 1B68     		ldr	r3, [r3]
 22711 0034 2A4A     		ldr	r2, .L881+12
 22712 0036 1360     		str	r3, [r2]
 22713              	.L874:
3219:..\src/command_processing.c ****     }
3220:..\src/command_processing.c ****     g_refNew[0].onoff = (aux & 0x01);
 22714              		.loc 1 3220 0
 22715 0038 FB79     		ldrb	r3, [r7, #7]
 22716 003a 03F00103 		and	r3, r3, #1
 22717 003e DAB2     		uxtb	r2, r3
 22718 0040 274B     		ldr	r3, .L881+12
 22719 0042 1A73     		strb	r2, [r3, #12]
3221:..\src/command_processing.c ****     
3222:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
3223:..\src/command_processing.c ****     if (g_mem.dev.dev_type == AIR_CHAMBERS_FB){
 22720              		.loc 1 3223 0
 22721 0044 244B     		ldr	r3, .L881+4
 22722 0046 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 22723 004a 022B     		cmp	r3, #2
 22724 004c 0FD1     		bne	.L875
3224:..\src/command_processing.c ****         // Send PWM 0 to the PUMP in case a deactivation command arrives
3225:..\src/command_processing.c ****         // [There is no driver activation, so g_refNew[i].onoff is useless]
3226:..\src/command_processing.c ****         if (!(g_refNew[0].onoff)) {
 22725              		.loc 1 3226 0
 22726 004e 244B     		ldr	r3, .L881+12
 22727 0050 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 22728 0052 002B     		cmp	r3, #0
 22729 0054 02D1     		bne	.L876
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 497


3227:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
 22730              		.loc 1 3227 0
 22731 0056 224B     		ldr	r3, .L881+12
 22732 0058 0022     		movs	r2, #0
 22733 005a 9A60     		str	r2, [r3, #8]
 22734              	.L876:
3228:..\src/command_processing.c ****         }
3229:..\src/command_processing.c ****         
3230:..\src/command_processing.c ****         // Activate or deactivate the valve
3231:..\src/command_processing.c ****         VALVE_Write((aux >> 1) & 0x01);
 22735              		.loc 1 3231 0
 22736 005c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22737 005e 5B08     		lsrs	r3, r3, #1
 22738 0060 DBB2     		uxtb	r3, r3
 22739 0062 03F00103 		and	r3, r3, #1
 22740 0066 DBB2     		uxtb	r3, r3
 22741 0068 1846     		mov	r0, r3
 22742 006a FFF7FEFF 		bl	VALVE_Write
 22743              	.L875:
3232:..\src/command_processing.c ****     }
3233:..\src/command_processing.c **** #endif
3234:..\src/command_processing.c ****     
3235:..\src/command_processing.c ****     // Activate/Deactivate motor
3236:..\src/command_processing.c ****     enable_motor(0, g_refNew[0].onoff); 
 22744              		.loc 1 3236 0
 22745 006e 1C4B     		ldr	r3, .L881+12
 22746 0070 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 22747 0072 1946     		mov	r1, r3
 22748 0074 0020     		movs	r0, #0
 22749 0076 FFF7FEFF 		bl	enable_motor
3237:..\src/command_processing.c ****     
3238:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 22750              		.loc 1 3238 0
 22751 007a 174B     		ldr	r3, .L881+4
 22752 007c 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 22753 0080 012B     		cmp	r3, #1
 22754 0082 23D1     		bne	.L880
3239:..\src/command_processing.c ****         if ((g_mem.motor[1].control_mode == CONTROL_ANGLE) || (g_mem.motor[1].control_mode == CURR_
 22755              		.loc 1 3239 0
 22756 0084 144B     		ldr	r3, .L881+4
 22757 0086 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 22758 008a 002B     		cmp	r3, #0
 22759 008c 04D0     		beq	.L878
 22760              		.loc 1 3239 0 is_stmt 0 discriminator 1
 22761 008e 124B     		ldr	r3, .L881+4
 22762 0090 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 22763 0094 032B     		cmp	r3, #3
 22764 0096 0BD1     		bne	.L879
 22765              	.L878:
3240:..\src/command_processing.c ****             g_refNew[1].pos = g_meas[g_mem.motor[1].encoder_line].pos[0];
 22766              		.loc 1 3240 0 is_stmt 1
 22767 0098 0F4B     		ldr	r3, .L881+4
 22768 009a 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 22769 009e 1946     		mov	r1, r3
 22770 00a0 0E4A     		ldr	r2, .L881+8
 22771 00a2 3423     		movs	r3, #52
 22772 00a4 03FB01F3 		mul	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 498


 22773 00a8 1344     		add	r3, r3, r2
 22774 00aa 1B68     		ldr	r3, [r3]
 22775 00ac 0C4A     		ldr	r2, .L881+12
 22776 00ae 1361     		str	r3, [r2, #16]
 22777              	.L879:
3241:..\src/command_processing.c ****         }
3242:..\src/command_processing.c ****         g_refNew[1].onoff = ((aux >> 1) & 0x01);
 22778              		.loc 1 3242 0
 22779 00b0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22780 00b2 5B08     		lsrs	r3, r3, #1
 22781 00b4 DBB2     		uxtb	r3, r3
 22782 00b6 03F00103 		and	r3, r3, #1
 22783 00ba DAB2     		uxtb	r2, r3
 22784 00bc 084B     		ldr	r3, .L881+12
 22785 00be 1A77     		strb	r2, [r3, #28]
3243:..\src/command_processing.c ****         enable_motor(1, g_refNew[1].onoff); 
 22786              		.loc 1 3243 0
 22787 00c0 074B     		ldr	r3, .L881+12
 22788 00c2 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 22789 00c4 1946     		mov	r1, r3
 22790 00c6 0120     		movs	r0, #1
 22791 00c8 FFF7FEFF 		bl	enable_motor
 22792              	.L880:
3244:..\src/command_processing.c ****     }
3245:..\src/command_processing.c ****     
3246:..\src/command_processing.c **** }
 22793              		.loc 1 3246 0
 22794 00cc 00BF     		nop
 22795 00ce 0837     		adds	r7, r7, #8
 22796              		.cfi_def_cfa_offset 8
 22797 00d0 BD46     		mov	sp, r7
 22798              		.cfi_def_cfa_register 13
 22799              		@ sp needed
 22800 00d2 80BD     		pop	{r7, pc}
 22801              	.L882:
 22802              		.align	2
 22803              	.L881:
 22804 00d4 00000000 		.word	g_rx
 22805 00d8 00000000 		.word	g_mem
 22806 00dc 00000000 		.word	g_meas
 22807 00e0 00000000 		.word	g_refNew
 22808              		.cfi_endproc
 22809              	.LFE94:
 22810              		.size	cmd_activate, .-cmd_activate
 22811              		.section	.text.cmd_get_activate,"ax",%progbits
 22812              		.align	2
 22813              		.global	cmd_get_activate
 22814              		.thumb
 22815              		.thumb_func
 22816              		.type	cmd_get_activate, %function
 22817              	cmd_get_activate:
 22818              	.LFB95:
3247:..\src/command_processing.c **** 
3248:..\src/command_processing.c **** void cmd_get_activate(){
 22819              		.loc 1 3248 0
 22820              		.cfi_startproc
 22821              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 499


 22822              		@ frame_needed = 1, uses_anonymous_args = 0
 22823 0000 80B5     		push	{r7, lr}
 22824              		.cfi_def_cfa_offset 8
 22825              		.cfi_offset 7, -8
 22826              		.cfi_offset 14, -4
 22827 0002 82B0     		sub	sp, sp, #8
 22828              		.cfi_def_cfa_offset 16
 22829 0004 00AF     		add	r7, sp, #0
 22830              		.cfi_def_cfa_register 7
3249:..\src/command_processing.c ****     
3250:..\src/command_processing.c ****     uint8 packet_data[3];
3251:..\src/command_processing.c **** 
3252:..\src/command_processing.c ****     // Header        
3253:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACTIVATE;
 22831              		.loc 1 3253 0
 22832 0006 8123     		movs	r3, #129
 22833 0008 3B71     		strb	r3, [r7, #4]
3254:..\src/command_processing.c ****     
3255:..\src/command_processing.c ****     // Fill payload
3256:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 22834              		.loc 1 3256 0
 22835 000a 124B     		ldr	r3, .L886
 22836 000c 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 22837 0010 012B     		cmp	r3, #1
 22838 0012 0BD1     		bne	.L884
3257:..\src/command_processing.c ****         packet_data[1] = ((g_ref[1].onoff << 1) | g_ref[0].onoff);
 22839              		.loc 1 3257 0
 22840 0014 104B     		ldr	r3, .L886+4
 22841 0016 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 22842 0018 5B00     		lsls	r3, r3, #1
 22843 001a 5AB2     		sxtb	r2, r3
 22844 001c 0E4B     		ldr	r3, .L886+4
 22845 001e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 22846 0020 5BB2     		sxtb	r3, r3
 22847 0022 1343     		orrs	r3, r3, r2
 22848 0024 5BB2     		sxtb	r3, r3
 22849 0026 DBB2     		uxtb	r3, r3
 22850 0028 7B71     		strb	r3, [r7, #5]
 22851 002a 02E0     		b	.L885
 22852              	.L884:
3258:..\src/command_processing.c ****     } 
3259:..\src/command_processing.c ****     else {
3260:..\src/command_processing.c ****         packet_data[1] = g_ref[0].onoff;
 22853              		.loc 1 3260 0
 22854 002c 0A4B     		ldr	r3, .L886+4
 22855 002e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 22856 0030 7B71     		strb	r3, [r7, #5]
 22857              	.L885:
3261:..\src/command_processing.c ****     }
3262:..\src/command_processing.c ****     
3263:..\src/command_processing.c ****     // Calculate checksum
3264:..\src/command_processing.c ****     packet_data[2] = LCRChecksum(packet_data, 2);
 22858              		.loc 1 3264 0
 22859 0032 3B1D     		adds	r3, r7, #4
 22860 0034 0221     		movs	r1, #2
 22861 0036 1846     		mov	r0, r3
 22862 0038 FFF7FEFF 		bl	LCRChecksum
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 500


 22863 003c 0346     		mov	r3, r0
 22864 003e BB71     		strb	r3, [r7, #6]
3265:..\src/command_processing.c ****     
3266:..\src/command_processing.c ****     // Send package to UART
3267:..\src/command_processing.c ****     commWrite(packet_data, 3);
 22865              		.loc 1 3267 0
 22866 0040 3B1D     		adds	r3, r7, #4
 22867 0042 0321     		movs	r1, #3
 22868 0044 1846     		mov	r0, r3
 22869 0046 FFF7FEFF 		bl	commWrite
3268:..\src/command_processing.c **** 
3269:..\src/command_processing.c **** }
 22870              		.loc 1 3269 0
 22871 004a 00BF     		nop
 22872 004c 0837     		adds	r7, r7, #8
 22873              		.cfi_def_cfa_offset 8
 22874 004e BD46     		mov	sp, r7
 22875              		.cfi_def_cfa_register 13
 22876              		@ sp needed
 22877 0050 80BD     		pop	{r7, pc}
 22878              	.L887:
 22879 0052 00BF     		.align	2
 22880              	.L886:
 22881 0054 00000000 		.word	g_mem
 22882 0058 00000000 		.word	g_ref
 22883              		.cfi_endproc
 22884              	.LFE95:
 22885              		.size	cmd_get_activate, .-cmd_get_activate
 22886              		.section	.text.cmd_get_curr_and_meas,"ax",%progbits
 22887              		.align	2
 22888              		.global	cmd_get_curr_and_meas
 22889              		.thumb
 22890              		.thumb_func
 22891              		.type	cmd_get_curr_and_meas, %function
 22892              	cmd_get_curr_and_meas:
 22893              	.LFB96:
3270:..\src/command_processing.c **** 
3271:..\src/command_processing.c **** void cmd_get_curr_and_meas(){
 22894              		.loc 1 3271 0
 22895              		.cfi_startproc
 22896              		@ args = 0, pretend = 0, frame = 16
 22897              		@ frame_needed = 1, uses_anonymous_args = 0
 22898 0000 90B5     		push	{r4, r7, lr}
 22899              		.cfi_def_cfa_offset 12
 22900              		.cfi_offset 4, -12
 22901              		.cfi_offset 7, -8
 22902              		.cfi_offset 14, -4
 22903 0002 85B0     		sub	sp, sp, #20
 22904              		.cfi_def_cfa_offset 32
 22905 0004 00AF     		add	r7, sp, #0
 22906              		.cfi_def_cfa_register 7
3272:..\src/command_processing.c ****     
3273:..\src/command_processing.c ****     uint8 CYDATA index;
3274:..\src/command_processing.c ****     int16 aux_int16;
3275:..\src/command_processing.c ****    
3276:..\src/command_processing.c ****     //Packet: header + curr_meas(int16) + pos_meas(int16) + CRC
3277:..\src/command_processing.c ****     
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 501


3278:..\src/command_processing.c ****     uint8 packet_data[12]; 
3279:..\src/command_processing.c **** 
3280:..\src/command_processing.c ****     //Header package
3281:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_AND_MEAS;
 22907              		.loc 1 3281 0
 22908 0006 8623     		movs	r3, #134
 22909 0008 3B70     		strb	r3, [r7]
3282:..\src/command_processing.c **** 
3283:..\src/command_processing.c ****     // Currents
3284:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current motor1
 22910              		.loc 1 3284 0
 22911 000a 484B     		ldr	r3, .L893
 22912 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22913 0010 1946     		mov	r1, r3
 22914 0012 474A     		ldr	r2, .L893+4
 22915 0014 3423     		movs	r3, #52
 22916 0016 03FB01F3 		mul	r3, r3, r1
 22917 001a 1344     		add	r3, r3, r2
 22918 001c 0C33     		adds	r3, r3, #12
 22919 001e 1B68     		ldr	r3, [r3]
 22920 0020 1BB2     		sxth	r3, r3
 22921 0022 BB81     		strh	r3, [r7, #12]	@ movhi
3285:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 22922              		.loc 1 3285 0
 22923 0024 07F10C03 		add	r3, r7, #12
 22924 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22925 002a BB70     		strb	r3, [r7, #2]
3286:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 22926              		.loc 1 3286 0
 22927 002c 07F10C03 		add	r3, r7, #12
 22928 0030 0133     		adds	r3, r3, #1
 22929 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22930 0034 7B70     		strb	r3, [r7, #1]
3287:..\src/command_processing.c ****     
3288:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 22931              		.loc 1 3288 0
 22932 0036 3F4B     		ldr	r3, .L893+8
 22933 0038 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 22934 003c 012B     		cmp	r3, #1
 22935 003e 0DD1     		bne	.L889
3289:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 22936              		.loc 1 3289 0
 22937 0040 3A4B     		ldr	r3, .L893
 22938 0042 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 22939 0046 1946     		mov	r1, r3
 22940 0048 394A     		ldr	r2, .L893+4
 22941 004a 3423     		movs	r3, #52
 22942 004c 03FB01F3 		mul	r3, r3, r1
 22943 0050 1344     		add	r3, r3, r2
 22944 0052 0C33     		adds	r3, r3, #12
 22945 0054 1B68     		ldr	r3, [r3]
 22946 0056 1BB2     		sxth	r3, r3
 22947 0058 BB81     		strh	r3, [r7, #12]	@ movhi
 22948 005a 0CE0     		b	.L890
 22949              	.L889:
3290:..\src/command_processing.c ****     }
3291:..\src/command_processing.c ****     else {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 502


3292:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 22950              		.loc 1 3292 0
 22951 005c 334B     		ldr	r3, .L893
 22952 005e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22953 0062 1946     		mov	r1, r3
 22954 0064 324A     		ldr	r2, .L893+4
 22955 0066 3423     		movs	r3, #52
 22956 0068 03FB01F3 		mul	r3, r3, r1
 22957 006c 1344     		add	r3, r3, r2
 22958 006e 1033     		adds	r3, r3, #16
 22959 0070 1B68     		ldr	r3, [r3]
 22960 0072 1BB2     		sxth	r3, r3
 22961 0074 BB81     		strh	r3, [r7, #12]	@ movhi
 22962              	.L890:
3293:..\src/command_processing.c ****     }
3294:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 22963              		.loc 1 3294 0
 22964 0076 07F10C03 		add	r3, r7, #12
 22965 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22966 007c 3B71     		strb	r3, [r7, #4]
3295:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 22967              		.loc 1 3295 0
 22968 007e 07F10C03 		add	r3, r7, #12
 22969 0082 0133     		adds	r3, r3, #1
 22970 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22971 0086 FB70     		strb	r3, [r7, #3]
3296:..\src/command_processing.c **** 
3297:..\src/command_processing.c ****     // Positions
3298:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 22972              		.loc 1 3298 0
 22973 0088 0323     		movs	r3, #3
 22974 008a FB73     		strb	r3, [r7, #15]
 22975 008c 38E0     		b	.L891
 22976              	.L892:
3299:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 22977              		.loc 1 3299 0
 22978 008e 274B     		ldr	r3, .L893
 22979 0090 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22980 0094 1A46     		mov	r2, r3
 22981 0096 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 22982 0098 2548     		ldr	r0, .L893+4
 22983 009a 1346     		mov	r3, r2
 22984 009c 5B00     		lsls	r3, r3, #1
 22985 009e 1344     		add	r3, r3, r2
 22986 00a0 9B00     		lsls	r3, r3, #2
 22987 00a2 1344     		add	r3, r3, r2
 22988 00a4 0B44     		add	r3, r3, r1
 22989 00a6 50F82320 		ldr	r2, [r0, r3, lsl #2]
 22990 00aa 204B     		ldr	r3, .L893
 22991 00ac 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22992 00b0 1C46     		mov	r4, r3
 22993 00b2 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 22994 00b4 1D48     		ldr	r0, .L893
 22995 00b6 2346     		mov	r3, r4
 22996 00b8 5B00     		lsls	r3, r3, #1
 22997 00ba 2344     		add	r3, r3, r4
 22998 00bc 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 503


 22999 00be 0344     		add	r3, r3, r0
 23000 00c0 0B44     		add	r3, r3, r1
 23001 00c2 03F29513 		addw	r3, r3, #405
 23002 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23003 00c8 42FA03F3 		asr	r3, r2, r3
 23004 00cc 1BB2     		sxth	r3, r3
 23005 00ce BB81     		strh	r3, [r7, #12]	@ movhi
3300:..\src/command_processing.c ****         packet_data[(index << 1) + 6] = ((char*)(&aux_int16))[0];
 23006              		.loc 1 3300 0
 23007 00d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23008 00d2 5B00     		lsls	r3, r3, #1
 23009 00d4 0633     		adds	r3, r3, #6
 23010 00d6 07F10C02 		add	r2, r7, #12
 23011 00da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 23012 00dc 07F11001 		add	r1, r7, #16
 23013 00e0 0B44     		add	r3, r3, r1
 23014 00e2 03F8102C 		strb	r2, [r3, #-16]
3301:..\src/command_processing.c ****         packet_data[(index << 1) + 5] = ((char*)(&aux_int16))[1];
 23015              		.loc 1 3301 0
 23016 00e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23017 00e8 5B00     		lsls	r3, r3, #1
 23018 00ea 5A1D     		adds	r2, r3, #5
 23019 00ec 07F10C03 		add	r3, r7, #12
 23020 00f0 0133     		adds	r3, r3, #1
 23021 00f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23022 00f4 07F11003 		add	r3, r7, #16
 23023 00f8 1344     		add	r3, r3, r2
 23024 00fa 0A46     		mov	r2, r1
 23025 00fc 03F8102C 		strb	r2, [r3, #-16]
 23026              	.L891:
3298:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 23027              		.loc 1 3298 0 discriminator 1
 23028 0100 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23029 0102 5A1E     		subs	r2, r3, #1
 23030 0104 FA73     		strb	r2, [r7, #15]
 23031 0106 002B     		cmp	r3, #0
 23032 0108 C1D1     		bne	.L892
3302:..\src/command_processing.c ****     }
3303:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3304:..\src/command_processing.c ****         
3305:..\src/command_processing.c ****     packet_data[11] = LCRChecksum (packet_data, 11);
 23033              		.loc 1 3305 0
 23034 010a 3B46     		mov	r3, r7
 23035 010c 0B21     		movs	r1, #11
 23036 010e 1846     		mov	r0, r3
 23037 0110 FFF7FEFF 		bl	LCRChecksum
 23038 0114 0346     		mov	r3, r0
 23039 0116 FB72     		strb	r3, [r7, #11]
3306:..\src/command_processing.c ****     commWrite(packet_data, 12);
 23040              		.loc 1 3306 0
 23041 0118 3B46     		mov	r3, r7
 23042 011a 0C21     		movs	r1, #12
 23043 011c 1846     		mov	r0, r3
 23044 011e FFF7FEFF 		bl	commWrite
3307:..\src/command_processing.c ****    
3308:..\src/command_processing.c **** }
 23045              		.loc 1 3308 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 504


 23046 0122 00BF     		nop
 23047 0124 1437     		adds	r7, r7, #20
 23048              		.cfi_def_cfa_offset 12
 23049 0126 BD46     		mov	sp, r7
 23050              		.cfi_def_cfa_register 13
 23051              		@ sp needed
 23052 0128 90BD     		pop	{r4, r7, pc}
 23053              	.L894:
 23054 012a 00BF     		.align	2
 23055              	.L893:
 23056 012c 00000000 		.word	g_mem
 23057 0130 00000000 		.word	g_measOld
 23058 0134 00000000 		.word	c_mem
 23059              		.cfi_endproc
 23060              	.LFE96:
 23061              		.size	cmd_get_curr_and_meas, .-cmd_get_curr_and_meas
 23062              		.global	__aeabi_dmul
 23063              		.global	__aeabi_d2iz
 23064              		.section	.text.cmd_get_currents,"ax",%progbits
 23065              		.align	2
 23066              		.global	cmd_get_currents
 23067              		.thumb
 23068              		.thumb_func
 23069              		.type	cmd_get_currents, %function
 23070              	cmd_get_currents:
 23071              	.LFB97:
3309:..\src/command_processing.c **** 
3310:..\src/command_processing.c **** void cmd_get_currents(){
 23072              		.loc 1 3310 0
 23073              		.cfi_startproc
 23074              		@ args = 0, pretend = 0, frame = 16
 23075              		@ frame_needed = 1, uses_anonymous_args = 0
 23076 0000 90B5     		push	{r4, r7, lr}
 23077              		.cfi_def_cfa_offset 12
 23078              		.cfi_offset 4, -12
 23079              		.cfi_offset 7, -8
 23080              		.cfi_offset 14, -4
 23081 0002 85B0     		sub	sp, sp, #20
 23082              		.cfi_def_cfa_offset 32
 23083 0004 00AF     		add	r7, sp, #0
 23084              		.cfi_def_cfa_register 7
3311:..\src/command_processing.c ****     
3312:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3313:..\src/command_processing.c ****     
3314:..\src/command_processing.c ****     uint8 packet_data[6]; 
3315:..\src/command_processing.c ****     int16 aux_int16;
3316:..\src/command_processing.c ****     
3317:..\src/command_processing.c ****     //Header package
3318:..\src/command_processing.c **** 
3319:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURRENTS;
 23085              		.loc 1 3319 0
 23086 0006 8523     		movs	r3, #133
 23087 0008 3B72     		strb	r3, [r7, #8]
3320:..\src/command_processing.c **** 
3321:..\src/command_processing.c ****     if (c_mem.dev.dev_type != AIR_CHAMBERS_FB){
 23088              		.loc 1 3321 0
 23089 000a 334B     		ldr	r3, .L900
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 505


 23090 000c 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 23091 0010 022B     		cmp	r3, #2
 23092 0012 0DD0     		beq	.L896
3322:..\src/command_processing.c ****         // Currents
3323:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current
 23093              		.loc 1 3323 0
 23094 0014 314B     		ldr	r3, .L900+4
 23095 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23096 001a 1946     		mov	r1, r3
 23097 001c 304A     		ldr	r2, .L900+8
 23098 001e 3423     		movs	r3, #52
 23099 0020 03FB01F3 		mul	r3, r3, r1
 23100 0024 1344     		add	r3, r3, r2
 23101 0026 0C33     		adds	r3, r3, #12
 23102 0028 1B68     		ldr	r3, [r3]
 23103 002a 1BB2     		sxth	r3, r3
 23104 002c FB80     		strh	r3, [r7, #6]	@ movhi
 23105 002e 12E0     		b	.L897
 23106              	.L896:
3324:..\src/command_processing.c ****     }
3325:..\src/command_processing.c ****     else {
3326:..\src/command_processing.c ****         // Send pressure times 100 here instead of current (Simulink use)
3327:..\src/command_processing.c ****         aux_int16 = (int16)(g_fb_meas.pressure*100.0); //Pressure
 23107              		.loc 1 3327 0
 23108 0030 2C4B     		ldr	r3, .L900+12
 23109 0032 1B68     		ldr	r3, [r3]	@ float
 23110 0034 1846     		mov	r0, r3
 23111 0036 FFF7FEFF 		bl	__aeabi_f2d
 23112 003a 4FF00002 		mov	r2, #0
 23113 003e 2A4B     		ldr	r3, .L900+16
 23114 0040 FFF7FEFF 		bl	__aeabi_dmul
 23115 0044 0346     		mov	r3, r0
 23116 0046 0C46     		mov	r4, r1
 23117 0048 1846     		mov	r0, r3
 23118 004a 2146     		mov	r1, r4
 23119 004c FFF7FEFF 		bl	__aeabi_d2iz
 23120 0050 0346     		mov	r3, r0
 23121 0052 1BB2     		sxth	r3, r3
 23122 0054 FB80     		strh	r3, [r7, #6]	@ movhi
 23123              	.L897:
3328:..\src/command_processing.c ****     }
3329:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 23124              		.loc 1 3329 0
 23125 0056 BB1D     		adds	r3, r7, #6
 23126 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23127 005a BB72     		strb	r3, [r7, #10]
3330:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 23128              		.loc 1 3330 0
 23129 005c BB1D     		adds	r3, r7, #6
 23130 005e 0133     		adds	r3, r3, #1
 23131 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23132 0062 7B72     		strb	r3, [r7, #9]
3331:..\src/command_processing.c ****     
3332:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 23133              		.loc 1 3332 0
 23134 0064 1C4B     		ldr	r3, .L900
 23135 0066 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 506


 23136 006a 012B     		cmp	r3, #1
 23137 006c 0DD1     		bne	.L898
3333:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 23138              		.loc 1 3333 0
 23139 006e 1B4B     		ldr	r3, .L900+4
 23140 0070 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23141 0074 1946     		mov	r1, r3
 23142 0076 1A4A     		ldr	r2, .L900+8
 23143 0078 3423     		movs	r3, #52
 23144 007a 03FB01F3 		mul	r3, r3, r1
 23145 007e 1344     		add	r3, r3, r2
 23146 0080 0C33     		adds	r3, r3, #12
 23147 0082 1B68     		ldr	r3, [r3]
 23148 0084 1BB2     		sxth	r3, r3
 23149 0086 FB80     		strh	r3, [r7, #6]	@ movhi
 23150 0088 0CE0     		b	.L899
 23151              	.L898:
3334:..\src/command_processing.c ****     }
3335:..\src/command_processing.c ****     else {
3336:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 23152              		.loc 1 3336 0
 23153 008a 144B     		ldr	r3, .L900+4
 23154 008c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23155 0090 1946     		mov	r1, r3
 23156 0092 134A     		ldr	r2, .L900+8
 23157 0094 3423     		movs	r3, #52
 23158 0096 03FB01F3 		mul	r3, r3, r1
 23159 009a 1344     		add	r3, r3, r2
 23160 009c 1033     		adds	r3, r3, #16
 23161 009e 1B68     		ldr	r3, [r3]
 23162 00a0 1BB2     		sxth	r3, r3
 23163 00a2 FB80     		strh	r3, [r7, #6]	@ movhi
 23164              	.L899:
3337:..\src/command_processing.c ****     }
3338:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 23165              		.loc 1 3338 0
 23166 00a4 BB1D     		adds	r3, r7, #6
 23167 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23168 00a8 3B73     		strb	r3, [r7, #12]
3339:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 23169              		.loc 1 3339 0
 23170 00aa BB1D     		adds	r3, r7, #6
 23171 00ac 0133     		adds	r3, r3, #1
 23172 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23173 00b0 FB72     		strb	r3, [r7, #11]
3340:..\src/command_processing.c **** 
3341:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3342:..\src/command_processing.c **** 
3343:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 23174              		.loc 1 3343 0
 23175 00b2 07F10803 		add	r3, r7, #8
 23176 00b6 0521     		movs	r1, #5
 23177 00b8 1846     		mov	r0, r3
 23178 00ba FFF7FEFF 		bl	LCRChecksum
 23179 00be 0346     		mov	r3, r0
 23180 00c0 7B73     		strb	r3, [r7, #13]
3344:..\src/command_processing.c ****     
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 507


3345:..\src/command_processing.c ****     commWrite(packet_data, 6);
 23181              		.loc 1 3345 0
 23182 00c2 07F10803 		add	r3, r7, #8
 23183 00c6 0621     		movs	r1, #6
 23184 00c8 1846     		mov	r0, r3
 23185 00ca FFF7FEFF 		bl	commWrite
3346:..\src/command_processing.c **** }
 23186              		.loc 1 3346 0
 23187 00ce 00BF     		nop
 23188 00d0 1437     		adds	r7, r7, #20
 23189              		.cfi_def_cfa_offset 12
 23190 00d2 BD46     		mov	sp, r7
 23191              		.cfi_def_cfa_register 13
 23192              		@ sp needed
 23193 00d4 90BD     		pop	{r4, r7, pc}
 23194              	.L901:
 23195 00d6 00BF     		.align	2
 23196              	.L900:
 23197 00d8 00000000 		.word	c_mem
 23198 00dc 00000000 		.word	g_mem
 23199 00e0 00000000 		.word	g_measOld
 23200 00e4 00000000 		.word	g_fb_meas
 23201 00e8 00005940 		.word	1079574528
 23202              		.cfi_endproc
 23203              	.LFE97:
 23204              		.size	cmd_get_currents, .-cmd_get_currents
 23205              		.section	.text.cmd_get_currents_for_cuff,"ax",%progbits
 23206              		.align	2
 23207              		.global	cmd_get_currents_for_cuff
 23208              		.thumb
 23209              		.thumb_func
 23210              		.type	cmd_get_currents_for_cuff, %function
 23211              	cmd_get_currents_for_cuff:
 23212              	.LFB98:
3347:..\src/command_processing.c **** 
3348:..\src/command_processing.c **** void cmd_get_currents_for_cuff(){
 23213              		.loc 1 3348 0
 23214              		.cfi_startproc
 23215              		@ args = 0, pretend = 0, frame = 8
 23216              		@ frame_needed = 1, uses_anonymous_args = 0
 23217 0000 80B5     		push	{r7, lr}
 23218              		.cfi_def_cfa_offset 8
 23219              		.cfi_offset 7, -8
 23220              		.cfi_offset 14, -4
 23221 0002 82B0     		sub	sp, sp, #8
 23222              		.cfi_def_cfa_offset 16
 23223 0004 00AF     		add	r7, sp, #0
 23224              		.cfi_def_cfa_register 7
3349:..\src/command_processing.c ****     
3350:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3351:..\src/command_processing.c ****     
3352:..\src/command_processing.c ****     uint8 packet_data[4]; 
3353:..\src/command_processing.c ****     int16 aux_int16;
3354:..\src/command_processing.c ****     
3355:..\src/command_processing.c ****     //Header package
3356:..\src/command_processing.c **** 
3357:..\src/command_processing.c ****     packet_data[0] = CMD_SET_CUFF_INPUTS;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 508


 23225              		.loc 1 3357 0
 23226 0006 8E23     		movs	r3, #142
 23227 0008 3B71     		strb	r3, [r7, #4]
3358:..\src/command_processing.c **** 
3359:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated Current
 23228              		.loc 1 3359 0
 23229 000a 144B     		ldr	r3, .L903
 23230 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23231 0010 1946     		mov	r1, r3
 23232 0012 134A     		ldr	r2, .L903+4
 23233 0014 3423     		movs	r3, #52
 23234 0016 03FB01F3 		mul	r3, r3, r1
 23235 001a 1344     		add	r3, r3, r2
 23236 001c 1033     		adds	r3, r3, #16
 23237 001e 1B68     		ldr	r3, [r3]
 23238 0020 1BB2     		sxth	r3, r3
 23239 0022 7B80     		strh	r3, [r7, #2]	@ movhi
3360:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 23240              		.loc 1 3360 0
 23241 0024 BB1C     		adds	r3, r7, #2
 23242 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23243 0028 BB71     		strb	r3, [r7, #6]
3361:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 23244              		.loc 1 3361 0
 23245 002a BB1C     		adds	r3, r7, #2
 23246 002c 0133     		adds	r3, r3, #1
 23247 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23248 0030 7B71     		strb	r3, [r7, #5]
3362:..\src/command_processing.c **** 
3363:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3364:..\src/command_processing.c **** 
3365:..\src/command_processing.c ****     packet_data[3] = LCRChecksum (packet_data, 3);
 23249              		.loc 1 3365 0
 23250 0032 3B1D     		adds	r3, r7, #4
 23251 0034 0321     		movs	r1, #3
 23252 0036 1846     		mov	r0, r3
 23253 0038 FFF7FEFF 		bl	LCRChecksum
 23254 003c 0346     		mov	r3, r0
 23255 003e FB71     		strb	r3, [r7, #7]
3366:..\src/command_processing.c ****     
3367:..\src/command_processing.c ****     commWriteID(packet_data, 4, g_mem.dev.id -1);
 23256              		.loc 1 3367 0
 23257 0040 064B     		ldr	r3, .L903
 23258 0042 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 23259 0046 013B     		subs	r3, r3, #1
 23260 0048 DAB2     		uxtb	r2, r3
 23261 004a 3B1D     		adds	r3, r7, #4
 23262 004c 0421     		movs	r1, #4
 23263 004e 1846     		mov	r0, r3
 23264 0050 FFF7FEFF 		bl	commWriteID
3368:..\src/command_processing.c **** }
 23265              		.loc 1 3368 0
 23266 0054 00BF     		nop
 23267 0056 0837     		adds	r7, r7, #8
 23268              		.cfi_def_cfa_offset 8
 23269 0058 BD46     		mov	sp, r7
 23270              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 509


 23271              		@ sp needed
 23272 005a 80BD     		pop	{r7, pc}
 23273              	.L904:
 23274              		.align	2
 23275              	.L903:
 23276 005c 00000000 		.word	g_mem
 23277 0060 00000000 		.word	g_measOld
 23278              		.cfi_endproc
 23279              	.LFE98:
 23280              		.size	cmd_get_currents_for_cuff, .-cmd_get_currents_for_cuff
 23281              		.section	.text.commReadResCurrFromSH,"ax",%progbits
 23282              		.align	2
 23283              		.global	commReadResCurrFromSH
 23284              		.thumb
 23285              		.thumb_func
 23286              		.type	commReadResCurrFromSH, %function
 23287              	commReadResCurrFromSH:
 23288              	.LFB99:
3369:..\src/command_processing.c **** 
3370:..\src/command_processing.c **** //==============================================================================
3371:..\src/command_processing.c **** //                                  READ RESIDUAL CURRENT FUNCTION FROM SOFTHAND
3372:..\src/command_processing.c **** //==============================================================================
3373:..\src/command_processing.c **** 
3374:..\src/command_processing.c **** int16 commReadResCurrFromSH()
3375:..\src/command_processing.c **** {
 23289              		.loc 1 3375 0
 23290              		.cfi_startproc
 23291              		@ args = 0, pretend = 0, frame = 32
 23292              		@ frame_needed = 1, uses_anonymous_args = 0
 23293 0000 80B5     		push	{r7, lr}
 23294              		.cfi_def_cfa_offset 8
 23295              		.cfi_offset 7, -8
 23296              		.cfi_offset 14, -4
 23297 0002 88B0     		sub	sp, sp, #32
 23298              		.cfi_def_cfa_offset 40
 23299 0004 00AF     		add	r7, sp, #0
 23300              		.cfi_def_cfa_register 7
3376:..\src/command_processing.c ****     uint8 packet_data[16];
3377:..\src/command_processing.c ****     uint8 packet_lenght;
3378:..\src/command_processing.c ****     int16 curr_diff = 0;
 23301              		.loc 1 3378 0
 23302 0006 0023     		movs	r3, #0
 23303 0008 FB83     		strh	r3, [r7, #30]	@ movhi
3379:..\src/command_processing.c ****     uint32 t_start, t_end;
3380:..\src/command_processing.c ****     uint8 read_flag = TRUE;
 23304              		.loc 1 3380 0
 23305 000a 0123     		movs	r3, #1
 23306 000c 7B77     		strb	r3, [r7, #29]
3381:..\src/command_processing.c **** 
3382:..\src/command_processing.c ****     packet_lenght = 2;
 23307              		.loc 1 3382 0
 23308 000e 0223     		movs	r3, #2
 23309 0010 3B77     		strb	r3, [r7, #28]
3383:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_DIFF;
 23310              		.loc 1 3383 0
 23311 0012 8C23     		movs	r3, #140
 23312 0014 3B71     		strb	r3, [r7, #4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 510


3384:..\src/command_processing.c ****     packet_data[1] = CMD_GET_CURR_DIFF;
 23313              		.loc 1 3384 0
 23314 0016 8C23     		movs	r3, #140
 23315 0018 7B71     		strb	r3, [r7, #5]
3385:..\src/command_processing.c ****     commWriteID(packet_data, packet_lenght, c_mem.MS.slave_ID);
 23316              		.loc 1 3385 0
 23317 001a 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 23318 001c 99B2     		uxth	r1, r3
 23319 001e 1D4B     		ldr	r3, .L912
 23320 0020 93F8B122 		ldrb	r2, [r3, #689]	@ zero_extendqisi2
 23321 0024 3B1D     		adds	r3, r7, #4
 23322 0026 1846     		mov	r0, r3
 23323 0028 FFF7FEFF 		bl	commWriteID
3386:..\src/command_processing.c **** 
3387:..\src/command_processing.c ****     t_start = (uint32) MY_TIMER_ReadCounter();
 23324              		.loc 1 3387 0
 23325 002c FFF7FEFF 		bl	MY_TIMER_ReadCounter
 23326 0030 0346     		mov	r3, r0
 23327 0032 BB61     		str	r3, [r7, #24]
3388:..\src/command_processing.c ****     while(g_rx.buffer[0] != CMD_SET_CUFF_INPUTS) {
 23328              		.loc 1 3388 0
 23329 0034 18E0     		b	.L906
 23330              	.L909:
3389:..\src/command_processing.c ****         if (interrupt_flag){
 23331              		.loc 1 3389 0
 23332 0036 184B     		ldr	r3, .L912+4
 23333 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23334 003a 002B     		cmp	r3, #0
 23335 003c 04D0     		beq	.L907
3390:..\src/command_processing.c ****             interrupt_flag = FALSE;
 23336              		.loc 1 3390 0
 23337 003e 164B     		ldr	r3, .L912+4
 23338 0040 0022     		movs	r2, #0
 23339 0042 1A70     		strb	r2, [r3]
3391:..\src/command_processing.c ****             interrupt_manager();
 23340              		.loc 1 3391 0
 23341 0044 FFF7FEFF 		bl	interrupt_manager
 23342              	.L907:
3392:..\src/command_processing.c ****         }
3393:..\src/command_processing.c **** 
3394:..\src/command_processing.c ****         t_end = (uint32) MY_TIMER_ReadCounter();
 23343              		.loc 1 3394 0
 23344 0048 FFF7FEFF 		bl	MY_TIMER_ReadCounter
 23345 004c 0346     		mov	r3, r0
 23346 004e 7B61     		str	r3, [r7, #20]
3395:..\src/command_processing.c ****         if((t_start - t_end) > 4500000){            // 4.5 s timeout
 23347              		.loc 1 3395 0
 23348 0050 BA69     		ldr	r2, [r7, #24]
 23349 0052 7B69     		ldr	r3, [r7, #20]
 23350 0054 D31A     		subs	r3, r2, r3
 23351 0056 114A     		ldr	r2, .L912+8
 23352 0058 9342     		cmp	r3, r2
 23353 005a 05D9     		bls	.L906
3396:..\src/command_processing.c ****             read_flag = FALSE;
 23354              		.loc 1 3396 0
 23355 005c 0023     		movs	r3, #0
 23356 005e 7B77     		strb	r3, [r7, #29]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 511


3397:..\src/command_processing.c ****             master_mode = 0;                // Exit from master mode
 23357              		.loc 1 3397 0
 23358 0060 0F4B     		ldr	r3, .L912+12
 23359 0062 0022     		movs	r2, #0
 23360 0064 1A70     		strb	r2, [r3]
3398:..\src/command_processing.c ****             break;
 23361              		.loc 1 3398 0
 23362 0066 03E0     		b	.L908
 23363              	.L906:
3388:..\src/command_processing.c ****         if (interrupt_flag){
 23364              		.loc 1 3388 0
 23365 0068 0E4B     		ldr	r3, .L912+16
 23366 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23367 006c 8E2B     		cmp	r3, #142
 23368 006e E2D1     		bne	.L909
 23369              	.L908:
3399:..\src/command_processing.c ****         }
3400:..\src/command_processing.c ****     }
3401:..\src/command_processing.c **** 
3402:..\src/command_processing.c ****     if (read_flag) {
 23370              		.loc 1 3402 0
 23371 0070 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 23372 0072 002B     		cmp	r3, #0
 23373 0074 08D0     		beq	.L910
3403:..\src/command_processing.c ****         curr_diff = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);                        
 23374              		.loc 1 3403 0
 23375 0076 0B4B     		ldr	r3, .L912+16
 23376 0078 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 23377 007a 1B02     		lsls	r3, r3, #8
 23378 007c 1AB2     		sxth	r2, r3
 23379 007e 094B     		ldr	r3, .L912+16
 23380 0080 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 23381 0082 1BB2     		sxth	r3, r3
 23382 0084 1343     		orrs	r3, r3, r2
 23383 0086 FB83     		strh	r3, [r7, #30]	@ movhi
 23384              	.L910:
3404:..\src/command_processing.c ****     }
3405:..\src/command_processing.c ****     
3406:..\src/command_processing.c ****     return curr_diff;
 23385              		.loc 1 3406 0
 23386 0088 B7F91E30 		ldrsh	r3, [r7, #30]
3407:..\src/command_processing.c **** }
 23387              		.loc 1 3407 0
 23388 008c 1846     		mov	r0, r3
 23389 008e 2037     		adds	r7, r7, #32
 23390              		.cfi_def_cfa_offset 8
 23391 0090 BD46     		mov	sp, r7
 23392              		.cfi_def_cfa_register 13
 23393              		@ sp needed
 23394 0092 80BD     		pop	{r7, pc}
 23395              	.L913:
 23396              		.align	2
 23397              	.L912:
 23398 0094 00000000 		.word	c_mem
 23399 0098 00000000 		.word	interrupt_flag
 23400 009c 20AA4400 		.word	4500000
 23401 00a0 00000000 		.word	master_mode
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 512


 23402 00a4 00000000 		.word	g_rx
 23403              		.cfi_endproc
 23404              	.LFE99:
 23405              		.size	commReadResCurrFromSH, .-commReadResCurrFromSH
 23406              		.section	.text.cmd_set_baudrate,"ax",%progbits
 23407              		.align	2
 23408              		.global	cmd_set_baudrate
 23409              		.thumb
 23410              		.thumb_func
 23411              		.type	cmd_set_baudrate, %function
 23412              	cmd_set_baudrate:
 23413              	.LFB100:
3408:..\src/command_processing.c **** 
3409:..\src/command_processing.c **** void cmd_set_baudrate(){
 23414              		.loc 1 3409 0
 23415              		.cfi_startproc
 23416              		@ args = 0, pretend = 0, frame = 0
 23417              		@ frame_needed = 1, uses_anonymous_args = 0
 23418 0000 80B5     		push	{r7, lr}
 23419              		.cfi_def_cfa_offset 8
 23420              		.cfi_offset 7, -8
 23421              		.cfi_offset 14, -4
 23422 0002 00AF     		add	r7, sp, #0
 23423              		.cfi_def_cfa_register 7
3410:..\src/command_processing.c ****     
3411:..\src/command_processing.c ****     // Set BaudRate
3412:..\src/command_processing.c ****     c_mem.dev.baud_rate = g_rx.buffer[1];
 23424              		.loc 1 3412 0
 23425 0004 094B     		ldr	r3, .L919
 23426 0006 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 23427 0008 094B     		ldr	r3, .L919+4
 23428 000a 83F8AA20 		strb	r2, [r3, #170]
3413:..\src/command_processing.c ****     
3414:..\src/command_processing.c ****     switch(g_rx.buffer[1]){
 23429              		.loc 1 3414 0
 23430 000e 074B     		ldr	r3, .L919
 23431 0010 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 23432 0012 0D2B     		cmp	r3, #13
 23433 0014 04D1     		bne	.L918
3415:..\src/command_processing.c ****         case 13:
3416:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(13);
 23434              		.loc 1 3416 0
 23435 0016 0121     		movs	r1, #1
 23436 0018 0C20     		movs	r0, #12
 23437 001a FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
3417:..\src/command_processing.c ****             break;
 23438              		.loc 1 3417 0
 23439 001e 03E0     		b	.L917
 23440              	.L918:
3418:..\src/command_processing.c ****         default:
3419:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(3);
 23441              		.loc 1 3419 0
 23442 0020 0121     		movs	r1, #1
 23443 0022 0220     		movs	r0, #2
 23444 0024 FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
 23445              	.L917:
3420:..\src/command_processing.c ****     }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 513


3421:..\src/command_processing.c **** }
 23446              		.loc 1 3421 0
 23447 0028 00BF     		nop
 23448 002a 80BD     		pop	{r7, pc}
 23449              	.L920:
 23450              		.align	2
 23451              	.L919:
 23452 002c 00000000 		.word	g_rx
 23453 0030 00000000 		.word	c_mem
 23454              		.cfi_endproc
 23455              	.LFE100:
 23456              		.size	cmd_set_baudrate, .-cmd_set_baudrate
 23457              		.section	.text.cmd_ping,"ax",%progbits
 23458              		.align	2
 23459              		.global	cmd_ping
 23460              		.thumb
 23461              		.thumb_func
 23462              		.type	cmd_ping, %function
 23463              	cmd_ping:
 23464              	.LFB101:
3422:..\src/command_processing.c **** 
3423:..\src/command_processing.c **** void cmd_ping(){
 23465              		.loc 1 3423 0
 23466              		.cfi_startproc
 23467              		@ args = 0, pretend = 0, frame = 8
 23468              		@ frame_needed = 1, uses_anonymous_args = 0
 23469 0000 80B5     		push	{r7, lr}
 23470              		.cfi_def_cfa_offset 8
 23471              		.cfi_offset 7, -8
 23472              		.cfi_offset 14, -4
 23473 0002 82B0     		sub	sp, sp, #8
 23474              		.cfi_def_cfa_offset 16
 23475 0004 00AF     		add	r7, sp, #0
 23476              		.cfi_def_cfa_register 7
3424:..\src/command_processing.c **** 
3425:..\src/command_processing.c ****     uint8 packet_data[2];
3426:..\src/command_processing.c **** 
3427:..\src/command_processing.c ****     // Header
3428:..\src/command_processing.c ****     packet_data[0] = CMD_PING;
 23477              		.loc 1 3428 0
 23478 0006 0023     		movs	r3, #0
 23479 0008 3B71     		strb	r3, [r7, #4]
3429:..\src/command_processing.c ****     
3430:..\src/command_processing.c ****     // Load Payload
3431:..\src/command_processing.c ****     packet_data[1] = CMD_PING;
 23480              		.loc 1 3431 0
 23481 000a 0023     		movs	r3, #0
 23482 000c 7B71     		strb	r3, [r7, #5]
3432:..\src/command_processing.c **** 
3433:..\src/command_processing.c ****     // Send Package to uart
3434:..\src/command_processing.c ****     commWrite(packet_data, 2);
 23483              		.loc 1 3434 0
 23484 000e 3B1D     		adds	r3, r7, #4
 23485 0010 0221     		movs	r1, #2
 23486 0012 1846     		mov	r0, r3
 23487 0014 FFF7FEFF 		bl	commWrite
3435:..\src/command_processing.c **** }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 514


 23488              		.loc 1 3435 0
 23489 0018 00BF     		nop
 23490 001a 0837     		adds	r7, r7, #8
 23491              		.cfi_def_cfa_offset 8
 23492 001c BD46     		mov	sp, r7
 23493              		.cfi_def_cfa_register 13
 23494              		@ sp needed
 23495 001e 80BD     		pop	{r7, pc}
 23496              		.cfi_endproc
 23497              	.LFE101:
 23498              		.size	cmd_ping, .-cmd_ping
 23499              		.section	.text.cmd_get_inputs,"ax",%progbits
 23500              		.align	2
 23501              		.global	cmd_get_inputs
 23502              		.thumb
 23503              		.thumb_func
 23504              		.type	cmd_get_inputs, %function
 23505              	cmd_get_inputs:
 23506              	.LFB102:
3436:..\src/command_processing.c **** 
3437:..\src/command_processing.c **** void cmd_get_inputs(){
 23507              		.loc 1 3437 0
 23508              		.cfi_startproc
 23509              		@ args = 0, pretend = 0, frame = 16
 23510              		@ frame_needed = 1, uses_anonymous_args = 0
 23511 0000 80B5     		push	{r7, lr}
 23512              		.cfi_def_cfa_offset 8
 23513              		.cfi_offset 7, -8
 23514              		.cfi_offset 14, -4
 23515 0002 84B0     		sub	sp, sp, #16
 23516              		.cfi_def_cfa_offset 24
 23517 0004 00AF     		add	r7, sp, #0
 23518              		.cfi_def_cfa_register 7
3438:..\src/command_processing.c **** 
3439:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3440:..\src/command_processing.c **** 
3441:..\src/command_processing.c ****     uint8 packet_data[6]; 
3442:..\src/command_processing.c ****     int16 aux_int16;
3443:..\src/command_processing.c ****     
3444:..\src/command_processing.c ****     //Header package
3445:..\src/command_processing.c **** 
3446:..\src/command_processing.c ****     packet_data[0] = CMD_GET_INPUTS;
 23519              		.loc 1 3446 0
 23520 0006 8323     		movs	r3, #131
 23521 0008 3B72     		strb	r3, [r7, #8]
3447:..\src/command_processing.c ****         
3448:..\src/command_processing.c ****     aux_int16 = (int16)(g_refOld[0].pos >> g_mem.enc[g_mem.motor[0].encoder_line].res[0]);
 23522              		.loc 1 3448 0
 23523 000a 164B     		ldr	r3, .L923
 23524 000c 1A68     		ldr	r2, [r3]
 23525 000e 164B     		ldr	r3, .L923+4
 23526 0010 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23527 0014 1846     		mov	r0, r3
 23528 0016 1449     		ldr	r1, .L923+4
 23529 0018 0346     		mov	r3, r0
 23530 001a 5B00     		lsls	r3, r3, #1
 23531 001c 0344     		add	r3, r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 515


 23532 001e 1B01     		lsls	r3, r3, #4
 23533 0020 0B44     		add	r3, r3, r1
 23534 0022 03F29513 		addw	r3, r3, #405
 23535 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23536 0028 42FA03F3 		asr	r3, r2, r3
 23537 002c 1BB2     		sxth	r3, r3
 23538 002e FB80     		strh	r3, [r7, #6]	@ movhi
3449:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 23539              		.loc 1 3449 0
 23540 0030 BB1D     		adds	r3, r7, #6
 23541 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23542 0034 BB72     		strb	r3, [r7, #10]
3450:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 23543              		.loc 1 3450 0
 23544 0036 BB1D     		adds	r3, r7, #6
 23545 0038 0133     		adds	r3, r3, #1
 23546 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23547 003c 7B72     		strb	r3, [r7, #9]
3451:..\src/command_processing.c ****     
3452:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3453:..\src/command_processing.c **** 
3454:..\src/command_processing.c ****     packet_data[5] = LCRChecksum(packet_data, 5);
 23548              		.loc 1 3454 0
 23549 003e 07F10803 		add	r3, r7, #8
 23550 0042 0521     		movs	r1, #5
 23551 0044 1846     		mov	r0, r3
 23552 0046 FFF7FEFF 		bl	LCRChecksum
 23553 004a 0346     		mov	r3, r0
 23554 004c 7B73     		strb	r3, [r7, #13]
3455:..\src/command_processing.c **** 
3456:..\src/command_processing.c ****     commWrite(packet_data, 6);
 23555              		.loc 1 3456 0
 23556 004e 07F10803 		add	r3, r7, #8
 23557 0052 0621     		movs	r1, #6
 23558 0054 1846     		mov	r0, r3
 23559 0056 FFF7FEFF 		bl	commWrite
3457:..\src/command_processing.c **** }
 23560              		.loc 1 3457 0
 23561 005a 00BF     		nop
 23562 005c 1037     		adds	r7, r7, #16
 23563              		.cfi_def_cfa_offset 8
 23564 005e BD46     		mov	sp, r7
 23565              		.cfi_def_cfa_register 13
 23566              		@ sp needed
 23567 0060 80BD     		pop	{r7, pc}
 23568              	.L924:
 23569 0062 00BF     		.align	2
 23570              	.L923:
 23571 0064 00000000 		.word	g_refOld
 23572 0068 00000000 		.word	g_mem
 23573              		.cfi_endproc
 23574              	.LFE102:
 23575              		.size	cmd_get_inputs, .-cmd_get_inputs
 23576              		.section	.text.cmd_store_params,"ax",%progbits
 23577              		.align	2
 23578              		.global	cmd_store_params
 23579              		.thumb
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 516


 23580              		.thumb_func
 23581              		.type	cmd_store_params, %function
 23582              	cmd_store_params:
 23583              	.LFB103:
3458:..\src/command_processing.c **** 
3459:..\src/command_processing.c **** void cmd_store_params(){
 23584              		.loc 1 3459 0
 23585              		.cfi_startproc
 23586              		@ args = 0, pretend = 0, frame = 16
 23587              		@ frame_needed = 1, uses_anonymous_args = 0
 23588 0000 80B5     		push	{r7, lr}
 23589              		.cfi_def_cfa_offset 8
 23590              		.cfi_offset 7, -8
 23591              		.cfi_offset 14, -4
 23592 0002 84B0     		sub	sp, sp, #16
 23593              		.cfi_def_cfa_offset 24
 23594 0004 00AF     		add	r7, sp, #0
 23595              		.cfi_def_cfa_register 7
3460:..\src/command_processing.c ****     
3461:..\src/command_processing.c ****     // Check input mode enabled
3462:..\src/command_processing.c ****     uint32 off_1;
3463:..\src/command_processing.c ****     float mult_1;
3464:..\src/command_processing.c ****     uint8 CYDATA packet_lenght = 2;
 23596              		.loc 1 3464 0
 23597 0006 0223     		movs	r3, #2
 23598 0008 FB73     		strb	r3, [r7, #15]
3465:..\src/command_processing.c ****     uint8 CYDATA packet_data[2];
3466:..\src/command_processing.c ****     uint8 CYDATA old_id;
3467:..\src/command_processing.c ****     
3468:..\src/command_processing.c ****     if( c_mem.motor[0].input_mode == INPUT_MODE_EXTERNAL ) {
 23599              		.loc 1 3468 0
 23600 000a 674B     		ldr	r3, .L936
 23601 000c 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 23602 0010 002B     		cmp	r3, #0
 23603 0012 7CD1     		bne	.L926
3469:..\src/command_processing.c ****         off_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_off[0];
 23604              		.loc 1 3469 0
 23605 0014 644B     		ldr	r3, .L936
 23606 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23607 001a 1946     		mov	r1, r3
 23608 001c 624A     		ldr	r2, .L936
 23609 001e 0B46     		mov	r3, r1
 23610 0020 5B00     		lsls	r3, r3, #1
 23611 0022 0B44     		add	r3, r3, r1
 23612 0024 1B01     		lsls	r3, r3, #4
 23613 0026 1344     		add	r3, r3, r2
 23614 0028 03F5CC73 		add	r3, r3, #408
 23615 002c 1B68     		ldr	r3, [r3]
 23616 002e BB60     		str	r3, [r7, #8]
3470:..\src/command_processing.c ****         mult_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_mult[0];
 23617              		.loc 1 3470 0
 23618 0030 5D4B     		ldr	r3, .L936
 23619 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23620 0036 1946     		mov	r1, r3
 23621 0038 5B4A     		ldr	r2, .L936
 23622 003a 0B46     		mov	r3, r1
 23623 003c 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 517


 23624 003e 0B44     		add	r3, r3, r1
 23625 0040 1B01     		lsls	r3, r3, #4
 23626 0042 1344     		add	r3, r3, r2
 23627 0044 03F5D273 		add	r3, r3, #420
 23628 0048 1B68     		ldr	r3, [r3]	@ float
 23629 004a 7B60     		str	r3, [r7, #4]	@ float
3471:..\src/command_processing.c **** 
3472:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos / mult_1);
 23630              		.loc 1 3472 0
 23631 004c 574B     		ldr	r3, .L936+4
 23632 004e 1B68     		ldr	r3, [r3]
 23633 0050 1846     		mov	r0, r3
 23634 0052 FFF7FEFF 		bl	__aeabi_i2f
 23635 0056 0346     		mov	r3, r0
 23636 0058 7968     		ldr	r1, [r7, #4]	@ float
 23637 005a 1846     		mov	r0, r3
 23638 005c FFF7FEFF 		bl	__aeabi_fdiv
 23639 0060 0346     		mov	r3, r0
 23640 0062 1846     		mov	r0, r3
 23641 0064 FFF7FEFF 		bl	__aeabi_f2iz
 23642 0068 0246     		mov	r2, r0
 23643 006a 504B     		ldr	r3, .L936+4
 23644 006c 1A60     		str	r2, [r3]
3473:..\src/command_processing.c **** 
3474:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos * g_mem.enc[c_mem.motor[0].encoder_line].m
 23645              		.loc 1 3474 0
 23646 006e 4F4B     		ldr	r3, .L936+4
 23647 0070 1B68     		ldr	r3, [r3]
 23648 0072 1846     		mov	r0, r3
 23649 0074 FFF7FEFF 		bl	__aeabi_i2f
 23650 0078 4B4B     		ldr	r3, .L936
 23651 007a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23652 007e 1946     		mov	r1, r3
 23653 0080 4B4A     		ldr	r2, .L936+8
 23654 0082 0B46     		mov	r3, r1
 23655 0084 5B00     		lsls	r3, r3, #1
 23656 0086 0B44     		add	r3, r3, r1
 23657 0088 1B01     		lsls	r3, r3, #4
 23658 008a 1344     		add	r3, r3, r2
 23659 008c 03F5D273 		add	r3, r3, #420
 23660 0090 1B68     		ldr	r3, [r3]	@ float
 23661 0092 1946     		mov	r1, r3
 23662 0094 FFF7FEFF 		bl	__aeabi_fmul
 23663 0098 0346     		mov	r3, r0
 23664 009a 1846     		mov	r0, r3
 23665 009c FFF7FEFF 		bl	__aeabi_f2iz
 23666 00a0 0246     		mov	r2, r0
 23667 00a2 424B     		ldr	r3, .L936+4
 23668 00a4 1A60     		str	r2, [r3]
3475:..\src/command_processing.c **** 
3476:..\src/command_processing.c ****         g_refNew[0].pos += (g_mem.enc[c_mem.motor[0].encoder_line].m_off[0] - off_1);
 23669              		.loc 1 3476 0
 23670 00a6 414B     		ldr	r3, .L936+4
 23671 00a8 1B68     		ldr	r3, [r3]
 23672 00aa 1846     		mov	r0, r3
 23673 00ac 3E4B     		ldr	r3, .L936
 23674 00ae 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 518


 23675 00b2 1946     		mov	r1, r3
 23676 00b4 3E4A     		ldr	r2, .L936+8
 23677 00b6 0B46     		mov	r3, r1
 23678 00b8 5B00     		lsls	r3, r3, #1
 23679 00ba 0B44     		add	r3, r3, r1
 23680 00bc 1B01     		lsls	r3, r3, #4
 23681 00be 1344     		add	r3, r3, r2
 23682 00c0 03F5CC73 		add	r3, r3, #408
 23683 00c4 1B68     		ldr	r3, [r3]
 23684 00c6 1A46     		mov	r2, r3
 23685 00c8 BB68     		ldr	r3, [r7, #8]
 23686 00ca D31A     		subs	r3, r2, r3
 23687 00cc 0344     		add	r3, r3, r0
 23688 00ce 1A46     		mov	r2, r3
 23689 00d0 364B     		ldr	r3, .L936+4
 23690 00d2 1A60     		str	r2, [r3]
3477:..\src/command_processing.c ****         
3478:..\src/command_processing.c ****         // Check position Limits
3479:..\src/command_processing.c **** 
3480:..\src/command_processing.c ****         if (c_mem.motor[0].pos_lim_flag) {                   // position limiting
 23691              		.loc 1 3480 0
 23692 00d4 344B     		ldr	r3, .L936
 23693 00d6 93F8E330 		ldrb	r3, [r3, #227]	@ zero_extendqisi2
 23694 00da 002B     		cmp	r3, #0
 23695 00dc 17D0     		beq	.L926
3481:..\src/command_processing.c ****             if (g_refNew[0].pos < c_mem.motor[0].pos_lim_inf) 
 23696              		.loc 1 3481 0
 23697 00de 334B     		ldr	r3, .L936+4
 23698 00e0 1A68     		ldr	r2, [r3]
 23699 00e2 314B     		ldr	r3, .L936
 23700 00e4 D3F8E430 		ldr	r3, [r3, #228]
 23701 00e8 9A42     		cmp	r2, r3
 23702 00ea 04DA     		bge	.L927
3482:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_inf;
 23703              		.loc 1 3482 0
 23704 00ec 2E4B     		ldr	r3, .L936
 23705 00ee D3F8E430 		ldr	r3, [r3, #228]
 23706 00f2 2E4A     		ldr	r2, .L936+4
 23707 00f4 1360     		str	r3, [r2]
 23708              	.L927:
3483:..\src/command_processing.c **** 
3484:..\src/command_processing.c ****             if (g_refNew[0].pos > c_mem.motor[0].pos_lim_sup) 
 23709              		.loc 1 3484 0
 23710 00f6 2D4B     		ldr	r3, .L936+4
 23711 00f8 1A68     		ldr	r2, [r3]
 23712 00fa 2B4B     		ldr	r3, .L936
 23713 00fc D3F8E830 		ldr	r3, [r3, #232]
 23714 0100 9A42     		cmp	r2, r3
 23715 0102 04DD     		ble	.L926
3485:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_sup;
 23716              		.loc 1 3485 0
 23717 0104 284B     		ldr	r3, .L936
 23718 0106 D3F8E830 		ldr	r3, [r3, #232]
 23719 010a 284A     		ldr	r2, .L936+4
 23720 010c 1360     		str	r3, [r2]
 23721              	.L926:
3486:..\src/command_processing.c ****         }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 519


3487:..\src/command_processing.c ****     }
3488:..\src/command_processing.c ****     
3489:..\src/command_processing.c ****     // If SD is used, create new param and data file
3490:..\src/command_processing.c ****     if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 23722              		.loc 1 3490 0
 23723 010e 264B     		ldr	r3, .L936
 23724 0110 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 23725 0114 012B     		cmp	r3, #1
 23726 0116 06D1     		bne	.L928
3491:..\src/command_processing.c ****         FS_FClose(pFile);
 23727              		.loc 1 3491 0
 23728 0118 264B     		ldr	r3, .L936+12
 23729 011a 1B68     		ldr	r3, [r3]
 23730 011c 1846     		mov	r0, r3
 23731 011e FFF7FEFF 		bl	FS_FClose
3492:..\src/command_processing.c ****         
3493:..\src/command_processing.c ****         InitSD_FS();
 23732              		.loc 1 3493 0
 23733 0122 FFF7FEFF 		bl	InitSD_FS
 23734              	.L928:
3494:..\src/command_processing.c ****     }
3495:..\src/command_processing.c ****    
3496:..\src/command_processing.c ****     // Store params 
3497:..\src/command_processing.c **** 
3498:..\src/command_processing.c ****     if (c_mem.dev.id != g_mem.dev.id) {     //If a new id is going to be set we will lose communica
 23735              		.loc 1 3498 0
 23736 0126 204B     		ldr	r3, .L936
 23737 0128 93F8A020 		ldrb	r2, [r3, #160]	@ zero_extendqisi2
 23738 012c 204B     		ldr	r3, .L936+8
 23739 012e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 23740 0132 9A42     		cmp	r2, r3
 23741 0134 21D0     		beq	.L929
3499:..\src/command_processing.c ****         old_id = c_mem.dev.id;          //after the memstore(0) and the ACK won't be recognised
 23742              		.loc 1 3499 0
 23743 0136 1C4B     		ldr	r3, .L936
 23744 0138 93F8A030 		ldrb	r3, [r3, #160]
 23745 013c FB70     		strb	r3, [r7, #3]
3500:..\src/command_processing.c ****         if(memStore(0)) {
 23746              		.loc 1 3500 0
 23747 013e 0020     		movs	r0, #0
 23748 0140 FFF7FEFF 		bl	memStore
 23749 0144 0346     		mov	r3, r0
 23750 0146 002B     		cmp	r3, #0
 23751 0148 0BD0     		beq	.L930
3501:..\src/command_processing.c ****             packet_data[0] = ACK_OK;
 23752              		.loc 1 3501 0
 23753 014a 0123     		movs	r3, #1
 23754 014c 3B70     		strb	r3, [r7]
3502:..\src/command_processing.c ****             packet_data[1] = ACK_OK;
 23755              		.loc 1 3502 0
 23756 014e 0123     		movs	r3, #1
 23757 0150 7B70     		strb	r3, [r7, #1]
3503:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 23758              		.loc 1 3503 0
 23759 0152 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23760 0154 99B2     		uxth	r1, r3
 23761 0156 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 520


 23762 0158 3B46     		mov	r3, r7
 23763 015a 1846     		mov	r0, r3
 23764 015c FFF7FEFF 		bl	commWrite_old_id
 23765 0160 18E0     		b	.L932
 23766              	.L930:
3504:..\src/command_processing.c ****         }    
3505:..\src/command_processing.c ****         else{
3506:..\src/command_processing.c ****             packet_data[0] = ACK_ERROR;
 23767              		.loc 1 3506 0
 23768 0162 0023     		movs	r3, #0
 23769 0164 3B70     		strb	r3, [r7]
3507:..\src/command_processing.c ****             packet_data[1] = ACK_ERROR;
 23770              		.loc 1 3507 0
 23771 0166 0023     		movs	r3, #0
 23772 0168 7B70     		strb	r3, [r7, #1]
3508:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 23773              		.loc 1 3508 0
 23774 016a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23775 016c 99B2     		uxth	r1, r3
 23776 016e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23777 0170 3B46     		mov	r3, r7
 23778 0172 1846     		mov	r0, r3
 23779 0174 FFF7FEFF 		bl	commWrite_old_id
 23780 0178 0CE0     		b	.L932
 23781              	.L929:
3509:..\src/command_processing.c ****         }
3510:..\src/command_processing.c ****     }    
3511:..\src/command_processing.c ****     else {
3512:..\src/command_processing.c ****         if(memStore(0))
 23782              		.loc 1 3512 0
 23783 017a 0020     		movs	r0, #0
 23784 017c FFF7FEFF 		bl	memStore
 23785 0180 0346     		mov	r3, r0
 23786 0182 002B     		cmp	r3, #0
 23787 0184 03D0     		beq	.L933
3513:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 23788              		.loc 1 3513 0
 23789 0186 0120     		movs	r0, #1
 23790 0188 FFF7FEFF 		bl	sendAcknowledgment
 23791 018c 02E0     		b	.L932
 23792              	.L933:
3514:..\src/command_processing.c ****         else
3515:..\src/command_processing.c ****             sendAcknowledgment(ACK_ERROR);
 23793              		.loc 1 3515 0
 23794 018e 0020     		movs	r0, #0
 23795 0190 FFF7FEFF 		bl	sendAcknowledgment
 23796              	.L932:
3516:..\src/command_processing.c ****     }
3517:..\src/command_processing.c ****     
3518:..\src/command_processing.c ****     // FW reset (if necessary)
3519:..\src/command_processing.c ****     if (reset_PSoC_flag == TRUE) {
 23797              		.loc 1 3519 0
 23798 0194 084B     		ldr	r3, .L936+16
 23799 0196 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23800 0198 012B     		cmp	r3, #1
 23801 019a 01D1     		bne	.L935
3520:..\src/command_processing.c ****         CySoftwareReset();
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 521


 23802              		.loc 1 3520 0
 23803 019c FFF7FEFF 		bl	CySoftwareReset
 23804              	.L935:
3521:..\src/command_processing.c ****     }
3522:..\src/command_processing.c **** }
 23805              		.loc 1 3522 0
 23806 01a0 00BF     		nop
 23807 01a2 1037     		adds	r7, r7, #16
 23808              		.cfi_def_cfa_offset 8
 23809 01a4 BD46     		mov	sp, r7
 23810              		.cfi_def_cfa_register 13
 23811              		@ sp needed
 23812 01a6 80BD     		pop	{r7, pc}
 23813              	.L937:
 23814              		.align	2
 23815              	.L936:
 23816 01a8 00000000 		.word	c_mem
 23817 01ac 00000000 		.word	g_refNew
 23818 01b0 00000000 		.word	g_mem
 23819 01b4 00000000 		.word	pFile
 23820 01b8 00000000 		.word	reset_PSoC_flag
 23821              		.cfi_endproc
 23822              	.LFE103:
 23823              		.size	cmd_store_params, .-cmd_store_params
 23824              		.section	.text.cmd_get_emg,"ax",%progbits
 23825              		.align	2
 23826              		.global	cmd_get_emg
 23827              		.thumb
 23828              		.thumb_func
 23829              		.type	cmd_get_emg, %function
 23830              	cmd_get_emg:
 23831              	.LFB104:
3523:..\src/command_processing.c **** 
3524:..\src/command_processing.c **** void cmd_get_emg(){
 23832              		.loc 1 3524 0
 23833              		.cfi_startproc
 23834              		@ args = 0, pretend = 0, frame = 16
 23835              		@ frame_needed = 1, uses_anonymous_args = 0
 23836 0000 80B5     		push	{r7, lr}
 23837              		.cfi_def_cfa_offset 8
 23838              		.cfi_offset 7, -8
 23839              		.cfi_offset 14, -4
 23840 0002 84B0     		sub	sp, sp, #16
 23841              		.cfi_def_cfa_offset 24
 23842 0004 00AF     		add	r7, sp, #0
 23843              		.cfi_def_cfa_register 7
3525:..\src/command_processing.c ****     
3526:..\src/command_processing.c ****     uint8 packet_data[6];
3527:..\src/command_processing.c ****     int16 aux_int16;
3528:..\src/command_processing.c ****     
3529:..\src/command_processing.c ****     // Header        
3530:..\src/command_processing.c ****     packet_data[0] = CMD_GET_EMG;
 23844              		.loc 1 3530 0
 23845 0006 8823     		movs	r3, #136
 23846 0008 3B72     		strb	r3, [r7, #8]
3531:..\src/command_processing.c ****     
3532:..\src/command_processing.c ****     aux_int16 = (int16) g_emg_measOld.emg[0];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 522


 23847              		.loc 1 3532 0
 23848 000a 144B     		ldr	r3, .L939
 23849 000c 1B68     		ldr	r3, [r3]
 23850 000e 1BB2     		sxth	r3, r3
 23851 0010 FB80     		strh	r3, [r7, #6]	@ movhi
3533:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 23852              		.loc 1 3533 0
 23853 0012 BB1D     		adds	r3, r7, #6
 23854 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23855 0016 BB72     		strb	r3, [r7, #10]
3534:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 23856              		.loc 1 3534 0
 23857 0018 BB1D     		adds	r3, r7, #6
 23858 001a 0133     		adds	r3, r3, #1
 23859 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23860 001e 7B72     		strb	r3, [r7, #9]
3535:..\src/command_processing.c ****     
3536:..\src/command_processing.c ****     aux_int16 = (int16) g_emg_measOld.emg[1];
 23861              		.loc 1 3536 0
 23862 0020 0E4B     		ldr	r3, .L939
 23863 0022 5B68     		ldr	r3, [r3, #4]
 23864 0024 1BB2     		sxth	r3, r3
 23865 0026 FB80     		strh	r3, [r7, #6]	@ movhi
3537:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 23866              		.loc 1 3537 0
 23867 0028 BB1D     		adds	r3, r7, #6
 23868 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23869 002c 3B73     		strb	r3, [r7, #12]
3538:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 23870              		.loc 1 3538 0
 23871 002e BB1D     		adds	r3, r7, #6
 23872 0030 0133     		adds	r3, r3, #1
 23873 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23874 0034 FB72     		strb	r3, [r7, #11]
3539:..\src/command_processing.c **** 
3540:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 23875              		.loc 1 3540 0
 23876 0036 07F10803 		add	r3, r7, #8
 23877 003a 0521     		movs	r1, #5
 23878 003c 1846     		mov	r0, r3
 23879 003e FFF7FEFF 		bl	LCRChecksum
 23880 0042 0346     		mov	r3, r0
 23881 0044 7B73     		strb	r3, [r7, #13]
3541:..\src/command_processing.c **** 
3542:..\src/command_processing.c ****     commWrite(packet_data, 6);
 23882              		.loc 1 3542 0
 23883 0046 07F10803 		add	r3, r7, #8
 23884 004a 0621     		movs	r1, #6
 23885 004c 1846     		mov	r0, r3
 23886 004e FFF7FEFF 		bl	commWrite
3543:..\src/command_processing.c **** 
3544:..\src/command_processing.c **** }
 23887              		.loc 1 3544 0
 23888 0052 00BF     		nop
 23889 0054 1037     		adds	r7, r7, #16
 23890              		.cfi_def_cfa_offset 8
 23891 0056 BD46     		mov	sp, r7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 523


 23892              		.cfi_def_cfa_register 13
 23893              		@ sp needed
 23894 0058 80BD     		pop	{r7, pc}
 23895              	.L940:
 23896 005a 00BF     		.align	2
 23897              	.L939:
 23898 005c 00000000 		.word	g_emg_measOld
 23899              		.cfi_endproc
 23900              	.LFE104:
 23901              		.size	cmd_get_emg, .-cmd_get_emg
 23902              		.section	.text.cmd_get_imu_readings,"ax",%progbits
 23903              		.align	2
 23904              		.global	cmd_get_imu_readings
 23905              		.thumb
 23906              		.thumb_func
 23907              		.type	cmd_get_imu_readings, %function
 23908              	cmd_get_imu_readings:
 23909              	.LFB105:
3545:..\src/command_processing.c **** 
3546:..\src/command_processing.c **** void cmd_get_imu_readings(){
 23910              		.loc 1 3546 0
 23911              		.cfi_startproc
 23912              		@ args = 0, pretend = 0, frame = 400
 23913              		@ frame_needed = 1, uses_anonymous_args = 0
 23914 0000 90B5     		push	{r4, r7, lr}
 23915              		.cfi_def_cfa_offset 12
 23916              		.cfi_offset 4, -12
 23917              		.cfi_offset 7, -8
 23918              		.cfi_offset 14, -4
 23919 0002 E5B0     		sub	sp, sp, #404
 23920              		.cfi_def_cfa_offset 416
 23921 0004 00AF     		add	r7, sp, #0
 23922              		.cfi_def_cfa_register 7
3547:..\src/command_processing.c ****     //Retrieve accelerometers, gyroscopes, magnetometers, quaternions and temperatures readings
3548:..\src/command_processing.c ****     
3549:..\src/command_processing.c ****     uint8 k_imu;
3550:..\src/command_processing.c ****     uint16 c = 1;
 23923              		.loc 1 3550 0
 23924 0006 0123     		movs	r3, #1
 23925 0008 A7F88C31 		strh	r3, [r7, #396]	@ movhi
3551:..\src/command_processing.c ****     uint8 k = 0;
 23926              		.loc 1 3551 0
 23927 000c 0023     		movs	r3, #0
 23928 000e 87F88B31 		strb	r3, [r7, #395]
3552:..\src/command_processing.c ****     uint16 gl_c = 1;
 23929              		.loc 1 3552 0
 23930 0012 0123     		movs	r3, #1
 23931 0014 A7F88831 		strh	r3, [r7, #392]	@ movhi
3553:..\src/command_processing.c ****     int16 aux_int16;
3554:..\src/command_processing.c ****     float aux_float;
3555:..\src/command_processing.c ****     
3556:..\src/command_processing.c ****     // Packet: header + imu id(uint8) + imu flags(uint8) + crc  
3557:..\src/command_processing.c ****     uint8 packet_data[350];
3558:..\src/command_processing.c ****     uint8 single_packet[32];
3559:..\src/command_processing.c ****     
3560:..\src/command_processing.c ****     //Header package 
3561:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_READINGS;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 524


 23932              		.loc 1 3561 0
 23933 0018 07F12003 		add	r3, r7, #32
 23934 001c A122     		movs	r2, #161
 23935 001e 1A70     		strb	r2, [r3]
3562:..\src/command_processing.c ****  
3563:..\src/command_processing.c ****     for (k_imu = 0; k_imu < N_IMU_Connected; k_imu++) 
 23936              		.loc 1 3563 0
 23937 0020 0023     		movs	r3, #0
 23938 0022 87F88F31 		strb	r3, [r7, #399]
 23939 0026 82E2     		b	.L942
 23940              	.L958:
3564:..\src/command_processing.c ****     {	
3565:..\src/command_processing.c ****             
3566:..\src/command_processing.c ****         single_packet[0] = (uint8) 0x3A; //':';
 23941              		.loc 1 3566 0
 23942 0028 3B46     		mov	r3, r7
 23943 002a 3A22     		movs	r2, #58
 23944 002c 1A70     		strb	r2, [r3]
3567:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][0]){
 23945              		.loc 1 3567 0
 23946 002e 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 23947 0032 DB4A     		ldr	r2, .L959
 23948 0034 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 23949 0036 1946     		mov	r1, r3
 23950 0038 DA4A     		ldr	r2, .L959+4
 23951 003a 0B46     		mov	r3, r1
 23952 003c 9B00     		lsls	r3, r3, #2
 23953 003e 0B44     		add	r3, r3, r1
 23954 0040 1344     		add	r3, r3, r2
 23955 0042 03F20223 		addw	r3, r3, #514
 23956 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23957 0048 002B     		cmp	r3, #0
 23958 004a 5DD0     		beq	.L943
3568:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[0];
 23959              		.loc 1 3568 0
 23960 004c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 23961 0050 D549     		ldr	r1, .L959+8
 23962 0052 1346     		mov	r3, r2
 23963 0054 9B00     		lsls	r3, r3, #2
 23964 0056 1344     		add	r3, r3, r2
 23965 0058 DB00     		lsls	r3, r3, #3
 23966 005a 0B44     		add	r3, r3, r1
 23967 005c 0233     		adds	r3, r3, #2
 23968 005e B3F90030 		ldrsh	r3, [r3]
 23969 0062 A7F88631 		strh	r3, [r7, #390]	@ movhi
3569:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 23970              		.loc 1 3569 0
 23971 0066 B7F88C31 		ldrh	r3, [r7, #396]
 23972 006a 0133     		adds	r3, r3, #1
 23973 006c 07F5C372 		add	r2, r7, #390
 23974 0070 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 23975 0072 3A46     		mov	r2, r7
 23976 0074 D154     		strb	r1, [r2, r3]
3570:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 23977              		.loc 1 3570 0
 23978 0076 B7F88C21 		ldrh	r2, [r7, #396]
 23979 007a 07F5C373 		add	r3, r7, #390
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 525


 23980 007e 0133     		adds	r3, r3, #1
 23981 0080 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23982 0082 3B46     		mov	r3, r7
 23983 0084 9954     		strb	r1, [r3, r2]
3571:..\src/command_processing.c **** 
3572:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[1];
 23984              		.loc 1 3572 0
 23985 0086 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 23986 008a C749     		ldr	r1, .L959+8
 23987 008c 1346     		mov	r3, r2
 23988 008e 9B00     		lsls	r3, r3, #2
 23989 0090 1344     		add	r3, r3, r2
 23990 0092 DB00     		lsls	r3, r3, #3
 23991 0094 0B44     		add	r3, r3, r1
 23992 0096 0433     		adds	r3, r3, #4
 23993 0098 B3F90030 		ldrsh	r3, [r3]
 23994 009c A7F88631 		strh	r3, [r7, #390]	@ movhi
3573:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 23995              		.loc 1 3573 0
 23996 00a0 B7F88C31 		ldrh	r3, [r7, #396]
 23997 00a4 0333     		adds	r3, r3, #3
 23998 00a6 07F5C372 		add	r2, r7, #390
 23999 00aa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24000 00ac 3A46     		mov	r2, r7
 24001 00ae D154     		strb	r1, [r2, r3]
3574:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 24002              		.loc 1 3574 0
 24003 00b0 B7F88C31 		ldrh	r3, [r7, #396]
 24004 00b4 9A1C     		adds	r2, r3, #2
 24005 00b6 07F5C373 		add	r3, r7, #390
 24006 00ba 0133     		adds	r3, r3, #1
 24007 00bc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24008 00be 3B46     		mov	r3, r7
 24009 00c0 9954     		strb	r1, [r3, r2]
3575:..\src/command_processing.c **** 
3576:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[2];
 24010              		.loc 1 3576 0
 24011 00c2 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24012 00c6 B849     		ldr	r1, .L959+8
 24013 00c8 1346     		mov	r3, r2
 24014 00ca 9B00     		lsls	r3, r3, #2
 24015 00cc 1344     		add	r3, r3, r2
 24016 00ce DB00     		lsls	r3, r3, #3
 24017 00d0 0B44     		add	r3, r3, r1
 24018 00d2 0633     		adds	r3, r3, #6
 24019 00d4 B3F90030 		ldrsh	r3, [r3]
 24020 00d8 A7F88631 		strh	r3, [r7, #390]	@ movhi
3577:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 24021              		.loc 1 3577 0
 24022 00dc B7F88C31 		ldrh	r3, [r7, #396]
 24023 00e0 0533     		adds	r3, r3, #5
 24024 00e2 07F5C372 		add	r2, r7, #390
 24025 00e6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24026 00e8 3A46     		mov	r2, r7
 24027 00ea D154     		strb	r1, [r2, r3]
3578:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 24028              		.loc 1 3578 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 526


 24029 00ec B7F88C31 		ldrh	r3, [r7, #396]
 24030 00f0 1A1D     		adds	r2, r3, #4
 24031 00f2 07F5C373 		add	r3, r7, #390
 24032 00f6 0133     		adds	r3, r3, #1
 24033 00f8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24034 00fa 3B46     		mov	r3, r7
 24035 00fc 9954     		strb	r1, [r3, r2]
3579:..\src/command_processing.c **** 
3580:..\src/command_processing.c ****             c = c + 6;
 24036              		.loc 1 3580 0
 24037 00fe B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 24038 0102 0633     		adds	r3, r3, #6
 24039 0104 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 24040              	.L943:
3581:..\src/command_processing.c ****         }
3582:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][1]){
 24041              		.loc 1 3582 0
 24042 0108 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24043 010c A44A     		ldr	r2, .L959
 24044 010e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24045 0110 1946     		mov	r1, r3
 24046 0112 A44A     		ldr	r2, .L959+4
 24047 0114 0B46     		mov	r3, r1
 24048 0116 9B00     		lsls	r3, r3, #2
 24049 0118 0B44     		add	r3, r3, r1
 24050 011a 1344     		add	r3, r3, r2
 24051 011c 03F20323 		addw	r3, r3, #515
 24052 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24053 0122 002B     		cmp	r3, #0
 24054 0124 5DD0     		beq	.L944
3583:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[0];
 24055              		.loc 1 3583 0
 24056 0126 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24057 012a 9F49     		ldr	r1, .L959+8
 24058 012c 1346     		mov	r3, r2
 24059 012e 9B00     		lsls	r3, r3, #2
 24060 0130 1344     		add	r3, r3, r2
 24061 0132 DB00     		lsls	r3, r3, #3
 24062 0134 0B44     		add	r3, r3, r1
 24063 0136 0833     		adds	r3, r3, #8
 24064 0138 B3F90030 		ldrsh	r3, [r3]
 24065 013c A7F88631 		strh	r3, [r7, #390]	@ movhi
3584:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 24066              		.loc 1 3584 0
 24067 0140 B7F88C31 		ldrh	r3, [r7, #396]
 24068 0144 0133     		adds	r3, r3, #1
 24069 0146 07F5C372 		add	r2, r7, #390
 24070 014a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24071 014c 3A46     		mov	r2, r7
 24072 014e D154     		strb	r1, [r2, r3]
3585:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 24073              		.loc 1 3585 0
 24074 0150 B7F88C21 		ldrh	r2, [r7, #396]
 24075 0154 07F5C373 		add	r3, r7, #390
 24076 0158 0133     		adds	r3, r3, #1
 24077 015a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24078 015c 3B46     		mov	r3, r7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 527


 24079 015e 9954     		strb	r1, [r3, r2]
3586:..\src/command_processing.c **** 
3587:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[1];
 24080              		.loc 1 3587 0
 24081 0160 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24082 0164 9049     		ldr	r1, .L959+8
 24083 0166 1346     		mov	r3, r2
 24084 0168 9B00     		lsls	r3, r3, #2
 24085 016a 1344     		add	r3, r3, r2
 24086 016c DB00     		lsls	r3, r3, #3
 24087 016e 0B44     		add	r3, r3, r1
 24088 0170 0A33     		adds	r3, r3, #10
 24089 0172 B3F90030 		ldrsh	r3, [r3]
 24090 0176 A7F88631 		strh	r3, [r7, #390]	@ movhi
3588:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 24091              		.loc 1 3588 0
 24092 017a B7F88C31 		ldrh	r3, [r7, #396]
 24093 017e 0333     		adds	r3, r3, #3
 24094 0180 07F5C372 		add	r2, r7, #390
 24095 0184 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24096 0186 3A46     		mov	r2, r7
 24097 0188 D154     		strb	r1, [r2, r3]
3589:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 24098              		.loc 1 3589 0
 24099 018a B7F88C31 		ldrh	r3, [r7, #396]
 24100 018e 9A1C     		adds	r2, r3, #2
 24101 0190 07F5C373 		add	r3, r7, #390
 24102 0194 0133     		adds	r3, r3, #1
 24103 0196 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24104 0198 3B46     		mov	r3, r7
 24105 019a 9954     		strb	r1, [r3, r2]
3590:..\src/command_processing.c **** 
3591:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[2];
 24106              		.loc 1 3591 0
 24107 019c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24108 01a0 8149     		ldr	r1, .L959+8
 24109 01a2 1346     		mov	r3, r2
 24110 01a4 9B00     		lsls	r3, r3, #2
 24111 01a6 1344     		add	r3, r3, r2
 24112 01a8 DB00     		lsls	r3, r3, #3
 24113 01aa 0B44     		add	r3, r3, r1
 24114 01ac 0C33     		adds	r3, r3, #12
 24115 01ae B3F90030 		ldrsh	r3, [r3]
 24116 01b2 A7F88631 		strh	r3, [r7, #390]	@ movhi
3592:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 24117              		.loc 1 3592 0
 24118 01b6 B7F88C31 		ldrh	r3, [r7, #396]
 24119 01ba 0533     		adds	r3, r3, #5
 24120 01bc 07F5C372 		add	r2, r7, #390
 24121 01c0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24122 01c2 3A46     		mov	r2, r7
 24123 01c4 D154     		strb	r1, [r2, r3]
3593:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 24124              		.loc 1 3593 0
 24125 01c6 B7F88C31 		ldrh	r3, [r7, #396]
 24126 01ca 1A1D     		adds	r2, r3, #4
 24127 01cc 07F5C373 		add	r3, r7, #390
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 528


 24128 01d0 0133     		adds	r3, r3, #1
 24129 01d2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24130 01d4 3B46     		mov	r3, r7
 24131 01d6 9954     		strb	r1, [r3, r2]
3594:..\src/command_processing.c **** 
3595:..\src/command_processing.c ****             c = c + 6;
 24132              		.loc 1 3595 0
 24133 01d8 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 24134 01dc 0633     		adds	r3, r3, #6
 24135 01de A7F88C31 		strh	r3, [r7, #396]	@ movhi
 24136              	.L944:
3596:..\src/command_processing.c ****         }
3597:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][2]){
 24137              		.loc 1 3597 0
 24138 01e2 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24139 01e6 6E4A     		ldr	r2, .L959
 24140 01e8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24141 01ea 1946     		mov	r1, r3
 24142 01ec 6D4A     		ldr	r2, .L959+4
 24143 01ee 0B46     		mov	r3, r1
 24144 01f0 9B00     		lsls	r3, r3, #2
 24145 01f2 0B44     		add	r3, r3, r1
 24146 01f4 1344     		add	r3, r3, r2
 24147 01f6 03F50173 		add	r3, r3, #516
 24148 01fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24149 01fc 002B     		cmp	r3, #0
 24150 01fe 5DD0     		beq	.L945
3598:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[0];
 24151              		.loc 1 3598 0
 24152 0200 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24153 0204 6849     		ldr	r1, .L959+8
 24154 0206 1346     		mov	r3, r2
 24155 0208 9B00     		lsls	r3, r3, #2
 24156 020a 1344     		add	r3, r3, r2
 24157 020c DB00     		lsls	r3, r3, #3
 24158 020e 0B44     		add	r3, r3, r1
 24159 0210 0E33     		adds	r3, r3, #14
 24160 0212 B3F90030 		ldrsh	r3, [r3]
 24161 0216 A7F88631 		strh	r3, [r7, #390]	@ movhi
3599:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 24162              		.loc 1 3599 0
 24163 021a B7F88C31 		ldrh	r3, [r7, #396]
 24164 021e 0133     		adds	r3, r3, #1
 24165 0220 07F5C372 		add	r2, r7, #390
 24166 0224 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24167 0226 3A46     		mov	r2, r7
 24168 0228 D154     		strb	r1, [r2, r3]
3600:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 24169              		.loc 1 3600 0
 24170 022a B7F88C21 		ldrh	r2, [r7, #396]
 24171 022e 07F5C373 		add	r3, r7, #390
 24172 0232 0133     		adds	r3, r3, #1
 24173 0234 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24174 0236 3B46     		mov	r3, r7
 24175 0238 9954     		strb	r1, [r3, r2]
3601:..\src/command_processing.c **** 
3602:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[1];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 529


 24176              		.loc 1 3602 0
 24177 023a 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24178 023e 5A49     		ldr	r1, .L959+8
 24179 0240 1346     		mov	r3, r2
 24180 0242 9B00     		lsls	r3, r3, #2
 24181 0244 1344     		add	r3, r3, r2
 24182 0246 DB00     		lsls	r3, r3, #3
 24183 0248 0B44     		add	r3, r3, r1
 24184 024a 1033     		adds	r3, r3, #16
 24185 024c B3F90030 		ldrsh	r3, [r3]
 24186 0250 A7F88631 		strh	r3, [r7, #390]	@ movhi
3603:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 24187              		.loc 1 3603 0
 24188 0254 B7F88C31 		ldrh	r3, [r7, #396]
 24189 0258 0333     		adds	r3, r3, #3
 24190 025a 07F5C372 		add	r2, r7, #390
 24191 025e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24192 0260 3A46     		mov	r2, r7
 24193 0262 D154     		strb	r1, [r2, r3]
3604:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 24194              		.loc 1 3604 0
 24195 0264 B7F88C31 		ldrh	r3, [r7, #396]
 24196 0268 9A1C     		adds	r2, r3, #2
 24197 026a 07F5C373 		add	r3, r7, #390
 24198 026e 0133     		adds	r3, r3, #1
 24199 0270 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24200 0272 3B46     		mov	r3, r7
 24201 0274 9954     		strb	r1, [r3, r2]
3605:..\src/command_processing.c **** 
3606:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[2];
 24202              		.loc 1 3606 0
 24203 0276 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24204 027a 4B49     		ldr	r1, .L959+8
 24205 027c 1346     		mov	r3, r2
 24206 027e 9B00     		lsls	r3, r3, #2
 24207 0280 1344     		add	r3, r3, r2
 24208 0282 DB00     		lsls	r3, r3, #3
 24209 0284 0B44     		add	r3, r3, r1
 24210 0286 1233     		adds	r3, r3, #18
 24211 0288 B3F90030 		ldrsh	r3, [r3]
 24212 028c A7F88631 		strh	r3, [r7, #390]	@ movhi
3607:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 24213              		.loc 1 3607 0
 24214 0290 B7F88C31 		ldrh	r3, [r7, #396]
 24215 0294 0533     		adds	r3, r3, #5
 24216 0296 07F5C372 		add	r2, r7, #390
 24217 029a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24218 029c 3A46     		mov	r2, r7
 24219 029e D154     		strb	r1, [r2, r3]
3608:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 24220              		.loc 1 3608 0
 24221 02a0 B7F88C31 		ldrh	r3, [r7, #396]
 24222 02a4 1A1D     		adds	r2, r3, #4
 24223 02a6 07F5C373 		add	r3, r7, #390
 24224 02aa 0133     		adds	r3, r3, #1
 24225 02ac 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24226 02ae 3B46     		mov	r3, r7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 530


 24227 02b0 9954     		strb	r1, [r3, r2]
3609:..\src/command_processing.c **** 
3610:..\src/command_processing.c ****             c = c + 6;
 24228              		.loc 1 3610 0
 24229 02b2 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 24230 02b6 0633     		adds	r3, r3, #6
 24231 02b8 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 24232              	.L945:
3611:..\src/command_processing.c ****         }
3612:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][3]){
 24233              		.loc 1 3612 0
 24234 02bc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24235 02c0 374A     		ldr	r2, .L959
 24236 02c2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24237 02c4 1946     		mov	r1, r3
 24238 02c6 374A     		ldr	r2, .L959+4
 24239 02c8 0B46     		mov	r3, r1
 24240 02ca 9B00     		lsls	r3, r3, #2
 24241 02cc 0B44     		add	r3, r3, r1
 24242 02ce 1344     		add	r3, r3, r2
 24243 02d0 03F20523 		addw	r3, r3, #517
 24244 02d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24245 02d6 002B     		cmp	r3, #0
 24246 02d8 00F0AF80 		beq	.L946
3613:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[0];
 24247              		.loc 1 3613 0
 24248 02dc 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24249 02e0 3149     		ldr	r1, .L959+8
 24250 02e2 1346     		mov	r3, r2
 24251 02e4 9B00     		lsls	r3, r3, #2
 24252 02e6 1344     		add	r3, r3, r2
 24253 02e8 DB00     		lsls	r3, r3, #3
 24254 02ea 0B44     		add	r3, r3, r1
 24255 02ec 1433     		adds	r3, r3, #20
 24256 02ee 1B68     		ldr	r3, [r3]	@ float
 24257 02f0 C7F88031 		str	r3, [r7, #384]	@ float
3614:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24258              		.loc 1 3614 0
 24259 02f4 0023     		movs	r3, #0
 24260 02f6 87F88B31 		strb	r3, [r7, #395]
 24261 02fa 13E0     		b	.L947
 24262              	.L948:
3615:..\src/command_processing.c ****                 single_packet[c + 4 - k -1] = ((char*)(&aux_float))[k];
 24263              		.loc 1 3615 0 discriminator 3
 24264 02fc B7F88C31 		ldrh	r3, [r7, #396]
 24265 0300 1A1D     		adds	r2, r3, #4
 24266 0302 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24267 0306 D31A     		subs	r3, r2, r3
 24268 0308 013B     		subs	r3, r3, #1
 24269 030a 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 24270 030e 07F5C071 		add	r1, r7, #384
 24271 0312 0A44     		add	r2, r2, r1
 24272 0314 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24273 0316 3A46     		mov	r2, r7
 24274 0318 D154     		strb	r1, [r2, r3]
3614:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24275              		.loc 1 3614 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 531


 24276 031a 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24277 031e 0133     		adds	r3, r3, #1
 24278 0320 87F88B31 		strb	r3, [r7, #395]
 24279              	.L947:
3614:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24280              		.loc 1 3614 0 is_stmt 0 discriminator 1
 24281 0324 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24282 0328 032B     		cmp	r3, #3
 24283 032a E7D9     		bls	.L948
3616:..\src/command_processing.c ****             }
3617:..\src/command_processing.c **** 
3618:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[1];
 24284              		.loc 1 3618 0 is_stmt 1
 24285 032c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24286 0330 1D49     		ldr	r1, .L959+8
 24287 0332 1346     		mov	r3, r2
 24288 0334 9B00     		lsls	r3, r3, #2
 24289 0336 1344     		add	r3, r3, r2
 24290 0338 DB00     		lsls	r3, r3, #3
 24291 033a 0B44     		add	r3, r3, r1
 24292 033c 1833     		adds	r3, r3, #24
 24293 033e 1B68     		ldr	r3, [r3]	@ float
 24294 0340 C7F88031 		str	r3, [r7, #384]	@ float
3619:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24295              		.loc 1 3619 0
 24296 0344 0023     		movs	r3, #0
 24297 0346 87F88B31 		strb	r3, [r7, #395]
 24298 034a 14E0     		b	.L949
 24299              	.L950:
3620:..\src/command_processing.c ****                 single_packet[c + 8 - k -1] = ((char*)(&aux_float))[k];
 24300              		.loc 1 3620 0 discriminator 3
 24301 034c B7F88C31 		ldrh	r3, [r7, #396]
 24302 0350 03F10802 		add	r2, r3, #8
 24303 0354 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24304 0358 D31A     		subs	r3, r2, r3
 24305 035a 013B     		subs	r3, r3, #1
 24306 035c 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 24307 0360 07F5C071 		add	r1, r7, #384
 24308 0364 0A44     		add	r2, r2, r1
 24309 0366 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24310 0368 3A46     		mov	r2, r7
 24311 036a D154     		strb	r1, [r2, r3]
3619:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24312              		.loc 1 3619 0 discriminator 3
 24313 036c 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24314 0370 0133     		adds	r3, r3, #1
 24315 0372 87F88B31 		strb	r3, [r7, #395]
 24316              	.L949:
3619:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24317              		.loc 1 3619 0 is_stmt 0 discriminator 1
 24318 0376 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24319 037a 032B     		cmp	r3, #3
 24320 037c E6D9     		bls	.L950
3621:..\src/command_processing.c ****             }
3622:..\src/command_processing.c **** 
3623:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[2];
 24321              		.loc 1 3623 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 532


 24322 037e 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24323 0382 0949     		ldr	r1, .L959+8
 24324 0384 1346     		mov	r3, r2
 24325 0386 9B00     		lsls	r3, r3, #2
 24326 0388 1344     		add	r3, r3, r2
 24327 038a DB00     		lsls	r3, r3, #3
 24328 038c 0B44     		add	r3, r3, r1
 24329 038e 1C33     		adds	r3, r3, #28
 24330 0390 1B68     		ldr	r3, [r3]	@ float
 24331 0392 C7F88031 		str	r3, [r7, #384]	@ float
3624:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24332              		.loc 1 3624 0
 24333 0396 0023     		movs	r3, #0
 24334 0398 87F88B31 		strb	r3, [r7, #395]
 24335 039c 1BE0     		b	.L951
 24336              	.L960:
 24337 039e 00BF     		.align	2
 24338              	.L959:
 24339 03a0 00000000 		.word	IMU_connected
 24340 03a4 00000000 		.word	c_mem
 24341 03a8 00000000 		.word	g_imu
 24342              	.L952:
3625:..\src/command_processing.c ****                 single_packet[c + 12 - k -1] = ((char*)(&aux_float))[k];
 24343              		.loc 1 3625 0 discriminator 3
 24344 03ac B7F88C31 		ldrh	r3, [r7, #396]
 24345 03b0 03F10C02 		add	r2, r3, #12
 24346 03b4 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24347 03b8 D31A     		subs	r3, r2, r3
 24348 03ba 013B     		subs	r3, r3, #1
 24349 03bc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 24350 03c0 07F5C071 		add	r1, r7, #384
 24351 03c4 0A44     		add	r2, r2, r1
 24352 03c6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24353 03c8 3A46     		mov	r2, r7
 24354 03ca D154     		strb	r1, [r2, r3]
3624:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24355              		.loc 1 3624 0 discriminator 3
 24356 03cc 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24357 03d0 0133     		adds	r3, r3, #1
 24358 03d2 87F88B31 		strb	r3, [r7, #395]
 24359              	.L951:
3624:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24360              		.loc 1 3624 0 is_stmt 0 discriminator 1
 24361 03d6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24362 03da 032B     		cmp	r3, #3
 24363 03dc E6D9     		bls	.L952
3626:..\src/command_processing.c ****             }
3627:..\src/command_processing.c **** 
3628:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[3];
 24364              		.loc 1 3628 0 is_stmt 1
 24365 03de 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24366 03e2 6749     		ldr	r1, .L961
 24367 03e4 1346     		mov	r3, r2
 24368 03e6 9B00     		lsls	r3, r3, #2
 24369 03e8 1344     		add	r3, r3, r2
 24370 03ea DB00     		lsls	r3, r3, #3
 24371 03ec 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 533


 24372 03ee 2033     		adds	r3, r3, #32
 24373 03f0 1B68     		ldr	r3, [r3]	@ float
 24374 03f2 C7F88031 		str	r3, [r7, #384]	@ float
3629:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24375              		.loc 1 3629 0
 24376 03f6 0023     		movs	r3, #0
 24377 03f8 87F88B31 		strb	r3, [r7, #395]
 24378 03fc 14E0     		b	.L953
 24379              	.L954:
3630:..\src/command_processing.c ****                 single_packet[c + 16 - k -1] = ((char*)(&aux_float))[k];
 24380              		.loc 1 3630 0 discriminator 3
 24381 03fe B7F88C31 		ldrh	r3, [r7, #396]
 24382 0402 03F11002 		add	r2, r3, #16
 24383 0406 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24384 040a D31A     		subs	r3, r2, r3
 24385 040c 013B     		subs	r3, r3, #1
 24386 040e 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 24387 0412 07F5C071 		add	r1, r7, #384
 24388 0416 0A44     		add	r2, r2, r1
 24389 0418 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24390 041a 3A46     		mov	r2, r7
 24391 041c D154     		strb	r1, [r2, r3]
3629:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24392              		.loc 1 3629 0 discriminator 3
 24393 041e 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24394 0422 0133     		adds	r3, r3, #1
 24395 0424 87F88B31 		strb	r3, [r7, #395]
 24396              	.L953:
3629:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24397              		.loc 1 3629 0 is_stmt 0 discriminator 1
 24398 0428 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24399 042c 032B     		cmp	r3, #3
 24400 042e E6D9     		bls	.L954
3631:..\src/command_processing.c ****             }
3632:..\src/command_processing.c ****             c = c + 16;
 24401              		.loc 1 3632 0 is_stmt 1
 24402 0430 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 24403 0434 1033     		adds	r3, r3, #16
 24404 0436 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 24405              	.L946:
3633:..\src/command_processing.c ****         }
3634:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][4]){
 24406              		.loc 1 3634 0
 24407 043a 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24408 043e 514A     		ldr	r2, .L961+4
 24409 0440 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24410 0442 1946     		mov	r1, r3
 24411 0444 504A     		ldr	r2, .L961+8
 24412 0446 0B46     		mov	r3, r1
 24413 0448 9B00     		lsls	r3, r3, #2
 24414 044a 0B44     		add	r3, r3, r1
 24415 044c 1344     		add	r3, r3, r2
 24416 044e 03F20623 		addw	r3, r3, #518
 24417 0452 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24418 0454 002B     		cmp	r3, #0
 24419 0456 21D0     		beq	.L955
3635:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].temp_value;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 534


 24420              		.loc 1 3635 0
 24421 0458 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24422 045c 4849     		ldr	r1, .L961
 24423 045e 1346     		mov	r3, r2
 24424 0460 9B00     		lsls	r3, r3, #2
 24425 0462 1344     		add	r3, r3, r2
 24426 0464 DB00     		lsls	r3, r3, #3
 24427 0466 0B44     		add	r3, r3, r1
 24428 0468 2433     		adds	r3, r3, #36
 24429 046a B3F90030 		ldrsh	r3, [r3]
 24430 046e A7F88631 		strh	r3, [r7, #390]	@ movhi
3636:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 24431              		.loc 1 3636 0
 24432 0472 B7F88C31 		ldrh	r3, [r7, #396]
 24433 0476 0133     		adds	r3, r3, #1
 24434 0478 07F5C372 		add	r2, r7, #390
 24435 047c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24436 047e 3A46     		mov	r2, r7
 24437 0480 D154     		strb	r1, [r2, r3]
3637:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 24438              		.loc 1 3637 0
 24439 0482 B7F88C21 		ldrh	r2, [r7, #396]
 24440 0486 07F5C373 		add	r3, r7, #390
 24441 048a 0133     		adds	r3, r3, #1
 24442 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24443 048e 3B46     		mov	r3, r7
 24444 0490 9954     		strb	r1, [r3, r2]
3638:..\src/command_processing.c ****             c = c + 2;
 24445              		.loc 1 3638 0
 24446 0492 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 24447 0496 0233     		adds	r3, r3, #2
 24448 0498 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 24449              	.L955:
3639:..\src/command_processing.c ****         }
3640:..\src/command_processing.c ****         single_packet[single_imu_size[IMU_connected[k_imu]] - 1] = (uint8) 0x3A; //':';
 24450              		.loc 1 3640 0
 24451 049c 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24452 04a0 384A     		ldr	r2, .L961+4
 24453 04a2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24454 04a4 1A46     		mov	r2, r3
 24455 04a6 394B     		ldr	r3, .L961+12
 24456 04a8 53F82230 		ldr	r3, [r3, r2, lsl #2]
 24457 04ac 013B     		subs	r3, r3, #1
 24458 04ae 3A46     		mov	r2, r7
 24459 04b0 3A21     		movs	r1, #58
 24460 04b2 D154     		strb	r1, [r2, r3]
3641:..\src/command_processing.c ****         c = 1;
 24461              		.loc 1 3641 0
 24462 04b4 0123     		movs	r3, #1
 24463 04b6 A7F88C31 		strh	r3, [r7, #396]	@ movhi
3642:..\src/command_processing.c ****                
3643:..\src/command_processing.c ****         for(k=0; k < single_imu_size[IMU_connected[k_imu]]; k++) {
 24464              		.loc 1 3643 0
 24465 04ba 0023     		movs	r3, #0
 24466 04bc 87F88B31 		strb	r3, [r7, #395]
 24467 04c0 10E0     		b	.L956
 24468              	.L957:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 535


3644:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 24469              		.loc 1 3644 0 discriminator 3
 24470 04c2 B7F88821 		ldrh	r2, [r7, #392]
 24471 04c6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24472 04ca 1344     		add	r3, r3, r2
 24473 04cc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 24474 04d0 3946     		mov	r1, r7
 24475 04d2 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 24476 04d4 07F12002 		add	r2, r7, #32
 24477 04d8 D154     		strb	r1, [r2, r3]
3643:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 24478              		.loc 1 3643 0 discriminator 3
 24479 04da 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24480 04de 0133     		adds	r3, r3, #1
 24481 04e0 87F88B31 		strb	r3, [r7, #395]
 24482              	.L956:
3643:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 24483              		.loc 1 3643 0 is_stmt 0 discriminator 1
 24484 04e4 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 24485 04e8 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24486 04ec 2549     		ldr	r1, .L961+4
 24487 04ee CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 24488 04f0 1946     		mov	r1, r3
 24489 04f2 264B     		ldr	r3, .L961+12
 24490 04f4 53F82130 		ldr	r3, [r3, r1, lsl #2]
 24491 04f8 9A42     		cmp	r2, r3
 24492 04fa E2DB     		blt	.L957
3645:..\src/command_processing.c ****         }
3646:..\src/command_processing.c ****         gl_c = gl_c + single_imu_size[IMU_connected[k_imu]];  
 24493              		.loc 1 3646 0 is_stmt 1 discriminator 2
 24494 04fc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24495 0500 204A     		ldr	r2, .L961+4
 24496 0502 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24497 0504 1A46     		mov	r2, r3
 24498 0506 214B     		ldr	r3, .L961+12
 24499 0508 53F82230 		ldr	r3, [r3, r2, lsl #2]
 24500 050c 9AB2     		uxth	r2, r3
 24501 050e B7F88831 		ldrh	r3, [r7, #392]	@ movhi
 24502 0512 1344     		add	r3, r3, r2
 24503 0514 A7F88831 		strh	r3, [r7, #392]	@ movhi
3647:..\src/command_processing.c ****         
3648:..\src/command_processing.c ****         memset(&single_packet, 0, sizeof(single_packet));     
 24504              		.loc 1 3648 0 discriminator 2
 24505 0518 3B46     		mov	r3, r7
 24506 051a 2022     		movs	r2, #32
 24507 051c 0021     		movs	r1, #0
 24508 051e 1846     		mov	r0, r3
 24509 0520 FFF7FEFF 		bl	memset
3563:..\src/command_processing.c ****     {	
 24510              		.loc 1 3563 0 discriminator 2
 24511 0524 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24512 0528 0133     		adds	r3, r3, #1
 24513 052a 87F88F31 		strb	r3, [r7, #399]
 24514              	.L942:
3563:..\src/command_processing.c ****     {	
 24515              		.loc 1 3563 0 is_stmt 0 discriminator 1
 24516 052e 184B     		ldr	r3, .L961+16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 536


 24517 0530 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24518 0532 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24519 0536 9A42     		cmp	r2, r3
 24520 0538 FFF476AD 		bcc	.L958
3649:..\src/command_processing.c ****         
3650:..\src/command_processing.c ****     }
3651:..\src/command_processing.c **** 
3652:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3653:..\src/command_processing.c ****     packet_data[imus_data_size-1] = LCRChecksum (packet_data, imus_data_size-1);
 24521              		.loc 1 3653 0 is_stmt 1
 24522 053c 154B     		ldr	r3, .L961+20
 24523 053e 1B68     		ldr	r3, [r3]
 24524 0540 5C1E     		subs	r4, r3, #1
 24525 0542 144B     		ldr	r3, .L961+20
 24526 0544 1B68     		ldr	r3, [r3]
 24527 0546 DBB2     		uxtb	r3, r3
 24528 0548 013B     		subs	r3, r3, #1
 24529 054a DAB2     		uxtb	r2, r3
 24530 054c 07F12003 		add	r3, r7, #32
 24531 0550 1146     		mov	r1, r2
 24532 0552 1846     		mov	r0, r3
 24533 0554 FFF7FEFF 		bl	LCRChecksum
 24534 0558 0346     		mov	r3, r0
 24535 055a 1A46     		mov	r2, r3
 24536 055c 07F12003 		add	r3, r7, #32
 24537 0560 1A55     		strb	r2, [r3, r4]
3654:..\src/command_processing.c ****     commWrite(packet_data, imus_data_size);
 24538              		.loc 1 3654 0
 24539 0562 0C4B     		ldr	r3, .L961+20
 24540 0564 1B68     		ldr	r3, [r3]
 24541 0566 9AB2     		uxth	r2, r3
 24542 0568 07F12003 		add	r3, r7, #32
 24543 056c 1146     		mov	r1, r2
 24544 056e 1846     		mov	r0, r3
 24545 0570 FFF7FEFF 		bl	commWrite
3655:..\src/command_processing.c **** }
 24546              		.loc 1 3655 0
 24547 0574 00BF     		nop
 24548 0576 07F5CA77 		add	r7, r7, #404
 24549              		.cfi_def_cfa_offset 12
 24550 057a BD46     		mov	sp, r7
 24551              		.cfi_def_cfa_register 13
 24552              		@ sp needed
 24553 057c 90BD     		pop	{r4, r7, pc}
 24554              	.L962:
 24555 057e 00BF     		.align	2
 24556              	.L961:
 24557 0580 00000000 		.word	g_imu
 24558 0584 00000000 		.word	IMU_connected
 24559 0588 00000000 		.word	c_mem
 24560 058c 00000000 		.word	single_imu_size
 24561 0590 00000000 		.word	N_IMU_Connected
 24562 0594 00000000 		.word	imus_data_size
 24563              		.cfi_endproc
 24564              	.LFE105:
 24565              		.size	cmd_get_imu_readings, .-cmd_get_imu_readings
 24566              		.section	.text.cmd_get_encoder_map,"ax",%progbits
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 537


 24567              		.align	2
 24568              		.global	cmd_get_encoder_map
 24569              		.thumb
 24570              		.thumb_func
 24571              		.type	cmd_get_encoder_map, %function
 24572              	cmd_get_encoder_map:
 24573              	.LFB106:
3656:..\src/command_processing.c **** 
3657:..\src/command_processing.c **** void cmd_get_encoder_map(){
 24574              		.loc 1 3657 0
 24575              		.cfi_startproc
 24576              		@ args = 0, pretend = 0, frame = 16
 24577              		@ frame_needed = 1, uses_anonymous_args = 0
 24578 0000 90B5     		push	{r4, r7, lr}
 24579              		.cfi_def_cfa_offset 12
 24580              		.cfi_offset 4, -12
 24581              		.cfi_offset 7, -8
 24582              		.cfi_offset 14, -4
 24583 0002 85B0     		sub	sp, sp, #20
 24584              		.cfi_def_cfa_offset 32
 24585 0004 00AF     		add	r7, sp, #0
 24586              		.cfi_def_cfa_register 7
3658:..\src/command_processing.c ****     //Retrieve Encoder map
3659:..\src/command_processing.c ****     
3660:..\src/command_processing.c ****     uint8 packet_data[4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
3661:..\src/command_processing.c ****     uint8 CYDATA i, j;
3662:..\src/command_processing.c ****     
3663:..\src/command_processing.c ****     // Header        
3664:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_CONF;
 24587              		.loc 1 3664 0
 24588 0006 A323     		movs	r3, #163
 24589 0008 3B70     		strb	r3, [r7]
3665:..\src/command_processing.c ****     
3666:..\src/command_processing.c ****     // Fill payload
3667:..\src/command_processing.c ****     packet_data[1] = N_ENCODER_LINE_MAX;
 24590              		.loc 1 3667 0
 24591 000a 0223     		movs	r3, #2
 24592 000c 7B70     		strb	r3, [r7, #1]
3668:..\src/command_processing.c ****     packet_data[2] = N_ENCODERS_PER_LINE_MAX;
 24593              		.loc 1 3668 0
 24594 000e 0523     		movs	r3, #5
 24595 0010 BB70     		strb	r3, [r7, #2]
3669:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 24596              		.loc 1 3669 0
 24597 0012 0023     		movs	r3, #0
 24598 0014 FB73     		strb	r3, [r7, #15]
 24599 0016 23E0     		b	.L964
 24600              	.L967:
3670:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 24601              		.loc 1 3670 0
 24602 0018 0023     		movs	r3, #0
 24603 001a BB73     		strb	r3, [r7, #14]
 24604 001c 1AE0     		b	.L965
 24605              	.L966:
3671:..\src/command_processing.c ****             packet_data[3 + i*N_ENCODERS_PER_LINE_MAX + j] = c_mem.enc[i].Enc_raw_read_conf[j];
 24606              		.loc 1 3671 0 discriminator 3
 24607 001e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 538


 24608 0020 1346     		mov	r3, r2
 24609 0022 9B00     		lsls	r3, r3, #2
 24610 0024 1344     		add	r3, r3, r2
 24611 0026 DA1C     		adds	r2, r3, #3
 24612 0028 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 24613 002a D118     		adds	r1, r2, r3
 24614 002c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 24615 002e B87B     		ldrb	r0, [r7, #14]	@ zero_extendqisi2
 24616 0030 154C     		ldr	r4, .L968
 24617 0032 1346     		mov	r3, r2
 24618 0034 5B00     		lsls	r3, r3, #1
 24619 0036 1344     		add	r3, r3, r2
 24620 0038 1B01     		lsls	r3, r3, #4
 24621 003a 2344     		add	r3, r3, r4
 24622 003c 0344     		add	r3, r3, r0
 24623 003e 03F5C873 		add	r3, r3, #400
 24624 0042 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 24625 0044 07F11003 		add	r3, r7, #16
 24626 0048 0B44     		add	r3, r3, r1
 24627 004a 03F8102C 		strb	r2, [r3, #-16]
3670:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 24628              		.loc 1 3670 0 discriminator 3
 24629 004e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 24630 0050 0133     		adds	r3, r3, #1
 24631 0052 BB73     		strb	r3, [r7, #14]
 24632              	.L965:
3670:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 24633              		.loc 1 3670 0 is_stmt 0 discriminator 1
 24634 0054 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 24635 0056 042B     		cmp	r3, #4
 24636 0058 E1D9     		bls	.L966
3669:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 24637              		.loc 1 3669 0 is_stmt 1 discriminator 2
 24638 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24639 005c 0133     		adds	r3, r3, #1
 24640 005e FB73     		strb	r3, [r7, #15]
 24641              	.L964:
3669:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 24642              		.loc 1 3669 0 is_stmt 0 discriminator 1
 24643 0060 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24644 0062 012B     		cmp	r3, #1
 24645 0064 D8D9     		bls	.L967
3672:..\src/command_processing.c ****         }
3673:..\src/command_processing.c ****     }
3674:..\src/command_processing.c ****     
3675:..\src/command_processing.c ****     // Calculate checksum
3676:..\src/command_processing.c ****     packet_data[3+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX] = LCRChecksum(packet_data, 3+N_ENCODE
 24646              		.loc 1 3676 0 is_stmt 1
 24647 0066 3B46     		mov	r3, r7
 24648 0068 0D21     		movs	r1, #13
 24649 006a 1846     		mov	r0, r3
 24650 006c FFF7FEFF 		bl	LCRChecksum
 24651 0070 0346     		mov	r3, r0
 24652 0072 7B73     		strb	r3, [r7, #13]
3677:..\src/command_processing.c ****     
3678:..\src/command_processing.c ****     // Send package to UART
3679:..\src/command_processing.c ****     commWrite(packet_data, 4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 539


 24653              		.loc 1 3679 0
 24654 0074 3B46     		mov	r3, r7
 24655 0076 0E21     		movs	r1, #14
 24656 0078 1846     		mov	r0, r3
 24657 007a FFF7FEFF 		bl	commWrite
3680:..\src/command_processing.c **** }
 24658              		.loc 1 3680 0
 24659 007e 00BF     		nop
 24660 0080 1437     		adds	r7, r7, #20
 24661              		.cfi_def_cfa_offset 12
 24662 0082 BD46     		mov	sp, r7
 24663              		.cfi_def_cfa_register 13
 24664              		@ sp needed
 24665 0084 90BD     		pop	{r4, r7, pc}
 24666              	.L969:
 24667 0086 00BF     		.align	2
 24668              	.L968:
 24669 0088 00000000 		.word	c_mem
 24670              		.cfi_endproc
 24671              	.LFE106:
 24672              		.size	cmd_get_encoder_map, .-cmd_get_encoder_map
 24673              		.section	.text.cmd_get_encoder_raw,"ax",%progbits
 24674              		.align	2
 24675              		.global	cmd_get_encoder_raw
 24676              		.thumb
 24677              		.thumb_func
 24678              		.type	cmd_get_encoder_raw, %function
 24679              	cmd_get_encoder_raw:
 24680              	.LFB107:
3681:..\src/command_processing.c **** 
3682:..\src/command_processing.c **** void cmd_get_encoder_raw(){
 24681              		.loc 1 3682 0
 24682              		.cfi_startproc
 24683              		@ args = 0, pretend = 0, frame = 32
 24684              		@ frame_needed = 1, uses_anonymous_args = 0
 24685 0000 90B5     		push	{r4, r7, lr}
 24686              		.cfi_def_cfa_offset 12
 24687              		.cfi_offset 4, -12
 24688              		.cfi_offset 7, -8
 24689              		.cfi_offset 14, -4
 24690 0002 89B0     		sub	sp, sp, #36
 24691              		.cfi_def_cfa_offset 48
 24692 0004 00AF     		add	r7, sp, #0
 24693              		.cfi_def_cfa_register 7
3683:..\src/command_processing.c ****     //Retrieve all Encoders raw values
3684:..\src/command_processing.c ****     
3685:..\src/command_processing.c ****     uint8 packet_data[2+2*N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
3686:..\src/command_processing.c ****     uint8 i, j, idx;
3687:..\src/command_processing.c ****     uint16 aux_uint16;
3688:..\src/command_processing.c ****     
3689:..\src/command_processing.c ****     //Header package 
3690:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_RAW;
 24694              		.loc 1 3690 0
 24695 0006 A423     		movs	r3, #164
 24696 0008 3B71     		strb	r3, [r7, #4]
3691:..\src/command_processing.c ****  
3692:..\src/command_processing.c ****     // Fill payload
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 540


3693:..\src/command_processing.c ****     idx = 0;
 24697              		.loc 1 3693 0
 24698 000a 0023     		movs	r3, #0
 24699 000c 7B77     		strb	r3, [r7, #29]
3694:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 24700              		.loc 1 3694 0
 24701 000e 0023     		movs	r3, #0
 24702 0010 FB77     		strb	r3, [r7, #31]
 24703 0012 3FE0     		b	.L971
 24704              	.L975:
3695:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 24705              		.loc 1 3695 0
 24706 0014 0023     		movs	r3, #0
 24707 0016 BB77     		strb	r3, [r7, #30]
 24708 0018 33E0     		b	.L972
 24709              	.L974:
3696:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 24710              		.loc 1 3696 0
 24711 001a FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 24712 001c B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 24713 001e 3048     		ldr	r0, .L976
 24714 0020 1346     		mov	r3, r2
 24715 0022 5B00     		lsls	r3, r3, #1
 24716 0024 1344     		add	r3, r3, r2
 24717 0026 1B01     		lsls	r3, r3, #4
 24718 0028 0344     		add	r3, r3, r0
 24719 002a 0B44     		add	r3, r3, r1
 24720 002c 03F5C873 		add	r3, r3, #400
 24721 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24722 0032 012B     		cmp	r3, #1
 24723 0034 22D1     		bne	.L973
3697:..\src/command_processing.c ****                 aux_uint16 = (uint16)Encoder_Value[i][j];
 24724              		.loc 1 3697 0
 24725 0036 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 24726 0038 B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 24727 003a 2A48     		ldr	r0, .L976+4
 24728 003c 1346     		mov	r3, r2
 24729 003e 9B00     		lsls	r3, r3, #2
 24730 0040 1344     		add	r3, r3, r2
 24731 0042 0B44     		add	r3, r3, r1
 24732 0044 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 24733 0048 7B80     		strh	r3, [r7, #2]	@ movhi
3698:..\src/command_processing.c ****                 packet_data[(idx << 1) + 2] = ((char*)(&aux_uint16))[0];
 24734              		.loc 1 3698 0
 24735 004a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 24736 004c 5B00     		lsls	r3, r3, #1
 24737 004e 0233     		adds	r3, r3, #2
 24738 0050 BA1C     		adds	r2, r7, #2
 24739 0052 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 24740 0054 07F12001 		add	r1, r7, #32
 24741 0058 0B44     		add	r3, r3, r1
 24742 005a 03F81C2C 		strb	r2, [r3, #-28]
3699:..\src/command_processing.c ****                 packet_data[(idx << 1) + 1] = ((char*)(&aux_uint16))[1];
 24743              		.loc 1 3699 0
 24744 005e 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 24745 0060 5B00     		lsls	r3, r3, #1
 24746 0062 5A1C     		adds	r2, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 541


 24747 0064 BB1C     		adds	r3, r7, #2
 24748 0066 0133     		adds	r3, r3, #1
 24749 0068 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24750 006a 07F12003 		add	r3, r7, #32
 24751 006e 1344     		add	r3, r3, r2
 24752 0070 0A46     		mov	r2, r1
 24753 0072 03F81C2C 		strb	r2, [r3, #-28]
3700:..\src/command_processing.c ****                 idx++;
 24754              		.loc 1 3700 0
 24755 0076 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 24756 0078 0133     		adds	r3, r3, #1
 24757 007a 7B77     		strb	r3, [r7, #29]
 24758              	.L973:
3695:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 24759              		.loc 1 3695 0 discriminator 2
 24760 007c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 24761 007e 0133     		adds	r3, r3, #1
 24762 0080 BB77     		strb	r3, [r7, #30]
 24763              	.L972:
3695:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 24764              		.loc 1 3695 0 is_stmt 0 discriminator 1
 24765 0082 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 24766 0084 184A     		ldr	r2, .L976+8
 24767 0086 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24768 0088 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 24769 008a 9A42     		cmp	r2, r3
 24770 008c C5D3     		bcc	.L974
3694:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 24771              		.loc 1 3694 0 is_stmt 1 discriminator 2
 24772 008e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 24773 0090 0133     		adds	r3, r3, #1
 24774 0092 FB77     		strb	r3, [r7, #31]
 24775              	.L971:
3694:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 24776              		.loc 1 3694 0 is_stmt 0 discriminator 1
 24777 0094 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 24778 0096 012B     		cmp	r3, #1
 24779 0098 BCD9     		bls	.L975
3701:..\src/command_processing.c ****             }
3702:..\src/command_processing.c ****         }
3703:..\src/command_processing.c ****     }
3704:..\src/command_processing.c **** 
3705:..\src/command_processing.c ****     // Calculate checksum
3706:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 24780              		.loc 1 3706 0 is_stmt 1
 24781 009a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 24782 009c 5B00     		lsls	r3, r3, #1
 24783 009e 5C1C     		adds	r4, r3, #1
 24784 00a0 7B7F     		ldrb	r3, [r7, #29]
 24785 00a2 5B00     		lsls	r3, r3, #1
 24786 00a4 DBB2     		uxtb	r3, r3
 24787 00a6 0133     		adds	r3, r3, #1
 24788 00a8 DAB2     		uxtb	r2, r3
 24789 00aa 3B1D     		adds	r3, r7, #4
 24790 00ac 1146     		mov	r1, r2
 24791 00ae 1846     		mov	r0, r3
 24792 00b0 FFF7FEFF 		bl	LCRChecksum
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 542


 24793 00b4 0346     		mov	r3, r0
 24794 00b6 1A46     		mov	r2, r3
 24795 00b8 07F12003 		add	r3, r7, #32
 24796 00bc 2344     		add	r3, r3, r4
 24797 00be 03F81C2C 		strb	r2, [r3, #-28]
3707:..\src/command_processing.c ****     
3708:..\src/command_processing.c ****     // Send package to UART
3709:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 24798              		.loc 1 3709 0
 24799 00c2 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 24800 00c4 0133     		adds	r3, r3, #1
 24801 00c6 9BB2     		uxth	r3, r3
 24802 00c8 5B00     		lsls	r3, r3, #1
 24803 00ca 9AB2     		uxth	r2, r3
 24804 00cc 3B1D     		adds	r3, r7, #4
 24805 00ce 1146     		mov	r1, r2
 24806 00d0 1846     		mov	r0, r3
 24807 00d2 FFF7FEFF 		bl	commWrite
3710:..\src/command_processing.c **** }
 24808              		.loc 1 3710 0
 24809 00d6 00BF     		nop
 24810 00d8 2437     		adds	r7, r7, #36
 24811              		.cfi_def_cfa_offset 12
 24812 00da BD46     		mov	sp, r7
 24813              		.cfi_def_cfa_register 13
 24814              		@ sp needed
 24815 00dc 90BD     		pop	{r4, r7, pc}
 24816              	.L977:
 24817 00de 00BF     		.align	2
 24818              	.L976:
 24819 00e0 00000000 		.word	c_mem
 24820 00e4 00000000 		.word	Encoder_Value
 24821 00e8 00000000 		.word	N_Encoder_Line_Connected
 24822              		.cfi_endproc
 24823              	.LFE107:
 24824              		.size	cmd_get_encoder_raw, .-cmd_get_encoder_raw
 24825              		.section	.text.cmd_get_ADC_map,"ax",%progbits
 24826              		.align	2
 24827              		.global	cmd_get_ADC_map
 24828              		.thumb
 24829              		.thumb_func
 24830              		.type	cmd_get_ADC_map, %function
 24831              	cmd_get_ADC_map:
 24832              	.LFB108:
3711:..\src/command_processing.c **** 
3712:..\src/command_processing.c **** void cmd_get_ADC_map(){
 24833              		.loc 1 3712 0
 24834              		.cfi_startproc
 24835              		@ args = 0, pretend = 0, frame = 16
 24836              		@ frame_needed = 1, uses_anonymous_args = 0
 24837 0000 80B5     		push	{r7, lr}
 24838              		.cfi_def_cfa_offset 8
 24839              		.cfi_offset 7, -8
 24840              		.cfi_offset 14, -4
 24841 0002 84B0     		sub	sp, sp, #16
 24842              		.cfi_def_cfa_offset 24
 24843 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 543


 24844              		.cfi_def_cfa_register 7
3713:..\src/command_processing.c ****     //Retrieve Encoder map
3714:..\src/command_processing.c ****     
3715:..\src/command_processing.c ****     uint8 packet_data[3+NUM_OF_ADC_CHANNELS_MAX];
3716:..\src/command_processing.c ****     uint8 CYDATA i;
3717:..\src/command_processing.c ****     
3718:..\src/command_processing.c ****     // Header        
3719:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_CONF;
 24845              		.loc 1 3719 0
 24846 0006 A523     		movs	r3, #165
 24847 0008 3B70     		strb	r3, [r7]
3720:..\src/command_processing.c ****     
3721:..\src/command_processing.c ****     // Fill payload
3722:..\src/command_processing.c ****     packet_data[1] = NUM_OF_ADC_CHANNELS_MAX;
 24848              		.loc 1 3722 0
 24849 000a 0C23     		movs	r3, #12
 24850 000c 7B70     		strb	r3, [r7, #1]
3723:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 24851              		.loc 1 3723 0
 24852 000e 0023     		movs	r3, #0
 24853 0010 FB73     		strb	r3, [r7, #15]
 24854 0012 0EE0     		b	.L979
 24855              	.L980:
3724:..\src/command_processing.c ****         packet_data[2 + i] = c_mem.exp.ADC_conf[i];
 24856              		.loc 1 3724 0 discriminator 3
 24857 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24858 0016 0233     		adds	r3, r3, #2
 24859 0018 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 24860 001a 0F49     		ldr	r1, .L981
 24861 001c 0A44     		add	r2, r2, r1
 24862 001e 92F82822 		ldrb	r2, [r2, #552]	@ zero_extendqisi2
 24863 0022 07F11001 		add	r1, r7, #16
 24864 0026 0B44     		add	r3, r3, r1
 24865 0028 03F8102C 		strb	r2, [r3, #-16]
3723:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 24866              		.loc 1 3723 0 discriminator 3
 24867 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24868 002e 0133     		adds	r3, r3, #1
 24869 0030 FB73     		strb	r3, [r7, #15]
 24870              	.L979:
3723:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 24871              		.loc 1 3723 0 is_stmt 0 discriminator 1
 24872 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24873 0034 0B2B     		cmp	r3, #11
 24874 0036 EDD9     		bls	.L980
3725:..\src/command_processing.c ****     }
3726:..\src/command_processing.c ****     
3727:..\src/command_processing.c ****     // Calculate checksum
3728:..\src/command_processing.c ****     packet_data[2+NUM_OF_ADC_CHANNELS_MAX] = LCRChecksum(packet_data, 2+NUM_OF_ADC_CHANNELS_MAX);
 24875              		.loc 1 3728 0 is_stmt 1
 24876 0038 3B46     		mov	r3, r7
 24877 003a 0E21     		movs	r1, #14
 24878 003c 1846     		mov	r0, r3
 24879 003e FFF7FEFF 		bl	LCRChecksum
 24880 0042 0346     		mov	r3, r0
 24881 0044 BB73     		strb	r3, [r7, #14]
3729:..\src/command_processing.c ****     
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 544


3730:..\src/command_processing.c ****     // Send package to UART
3731:..\src/command_processing.c ****     commWrite(packet_data, 3+NUM_OF_ADC_CHANNELS_MAX);
 24882              		.loc 1 3731 0
 24883 0046 3B46     		mov	r3, r7
 24884 0048 0F21     		movs	r1, #15
 24885 004a 1846     		mov	r0, r3
 24886 004c FFF7FEFF 		bl	commWrite
3732:..\src/command_processing.c ****     
3733:..\src/command_processing.c **** }
 24887              		.loc 1 3733 0
 24888 0050 00BF     		nop
 24889 0052 1037     		adds	r7, r7, #16
 24890              		.cfi_def_cfa_offset 8
 24891 0054 BD46     		mov	sp, r7
 24892              		.cfi_def_cfa_register 13
 24893              		@ sp needed
 24894 0056 80BD     		pop	{r7, pc}
 24895              	.L982:
 24896              		.align	2
 24897              	.L981:
 24898 0058 00000000 		.word	c_mem
 24899              		.cfi_endproc
 24900              	.LFE108:
 24901              		.size	cmd_get_ADC_map, .-cmd_get_ADC_map
 24902              		.section	.text.cmd_get_ADC_raw,"ax",%progbits
 24903              		.align	2
 24904              		.global	cmd_get_ADC_raw
 24905              		.thumb
 24906              		.thumb_func
 24907              		.type	cmd_get_ADC_raw, %function
 24908              	cmd_get_ADC_raw:
 24909              	.LFB109:
3734:..\src/command_processing.c **** 
3735:..\src/command_processing.c **** void cmd_get_ADC_raw(){
 24910              		.loc 1 3735 0
 24911              		.cfi_startproc
 24912              		@ args = 0, pretend = 0, frame = 32
 24913              		@ frame_needed = 1, uses_anonymous_args = 0
 24914 0000 90B5     		push	{r4, r7, lr}
 24915              		.cfi_def_cfa_offset 12
 24916              		.cfi_offset 4, -12
 24917              		.cfi_offset 7, -8
 24918              		.cfi_offset 14, -4
 24919 0002 89B0     		sub	sp, sp, #36
 24920              		.cfi_def_cfa_offset 48
 24921 0004 00AF     		add	r7, sp, #0
 24922              		.cfi_def_cfa_register 7
3736:..\src/command_processing.c ****     //Retrieve Additional EMG port raw values
3737:..\src/command_processing.c ****     
3738:..\src/command_processing.c ****     uint8 packet_data[2+2*NUM_OF_ADC_CHANNELS_MAX];
3739:..\src/command_processing.c ****     uint8 CYDATA i, idx = 0;
 24923              		.loc 1 3739 0
 24924 0006 0023     		movs	r3, #0
 24925 0008 BB77     		strb	r3, [r7, #30]
3740:..\src/command_processing.c ****     int16 aux_int16;
3741:..\src/command_processing.c ****     
3742:..\src/command_processing.c ****     // Header        
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 545


3743:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_RAW;
 24926              		.loc 1 3743 0
 24927 000a A623     		movs	r3, #166
 24928 000c 3B71     		strb	r3, [r7, #4]
3744:..\src/command_processing.c ****     
3745:..\src/command_processing.c ****     // Fill payload
3746:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ANALOG_INPUTS; i++) {       
 24929              		.loc 1 3746 0
 24930 000e 0023     		movs	r3, #0
 24931 0010 FB77     		strb	r3, [r7, #31]
 24932 0012 27E0     		b	.L984
 24933              	.L986:
3747:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 24934              		.loc 1 3747 0
 24935 0014 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 24936 0016 274A     		ldr	r2, .L987
 24937 0018 1344     		add	r3, r3, r2
 24938 001a 93F82832 		ldrb	r3, [r3, #552]	@ zero_extendqisi2
 24939 001e 012B     		cmp	r3, #1
 24940 0020 1DD1     		bne	.L985
3748:..\src/command_processing.c ****             aux_int16 = (int16) ADC_buf[i];
 24941              		.loc 1 3748 0
 24942 0022 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 24943 0024 244A     		ldr	r2, .L987+4
 24944 0026 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 24945 002a 7B80     		strh	r3, [r7, #2]	@ movhi
3749:..\src/command_processing.c ****             packet_data[(idx << 1) + 2] = ((char*)(&aux_int16))[0];
 24946              		.loc 1 3749 0
 24947 002c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 24948 002e 5B00     		lsls	r3, r3, #1
 24949 0030 0233     		adds	r3, r3, #2
 24950 0032 BA1C     		adds	r2, r7, #2
 24951 0034 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 24952 0036 07F12001 		add	r1, r7, #32
 24953 003a 0B44     		add	r3, r3, r1
 24954 003c 03F81C2C 		strb	r2, [r3, #-28]
3750:..\src/command_processing.c ****             packet_data[(idx << 1) + 1] = ((char*)(&aux_int16))[1];
 24955              		.loc 1 3750 0
 24956 0040 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 24957 0042 5B00     		lsls	r3, r3, #1
 24958 0044 5A1C     		adds	r2, r3, #1
 24959 0046 BB1C     		adds	r3, r7, #2
 24960 0048 0133     		adds	r3, r3, #1
 24961 004a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24962 004c 07F12003 		add	r3, r7, #32
 24963 0050 1344     		add	r3, r3, r2
 24964 0052 0A46     		mov	r2, r1
 24965 0054 03F81C2C 		strb	r2, [r3, #-28]
3751:..\src/command_processing.c ****             idx++;
 24966              		.loc 1 3751 0
 24967 0058 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 24968 005a 0133     		adds	r3, r3, #1
 24969 005c BB77     		strb	r3, [r7, #30]
 24970              	.L985:
3746:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 24971              		.loc 1 3746 0 discriminator 2
 24972 005e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 546


 24973 0060 0133     		adds	r3, r3, #1
 24974 0062 FB77     		strb	r3, [r7, #31]
 24975              	.L984:
3746:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 24976              		.loc 1 3746 0 is_stmt 0 discriminator 1
 24977 0064 154B     		ldr	r3, .L987+8
 24978 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24979 0068 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 24980 006a 9A42     		cmp	r2, r3
 24981 006c D2D3     		bcc	.L986
3752:..\src/command_processing.c ****         }
3753:..\src/command_processing.c ****     }
3754:..\src/command_processing.c **** 
3755:..\src/command_processing.c ****     // Calculate checksum
3756:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 24982              		.loc 1 3756 0 is_stmt 1
 24983 006e BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 24984 0070 5B00     		lsls	r3, r3, #1
 24985 0072 5C1C     		adds	r4, r3, #1
 24986 0074 BB7F     		ldrb	r3, [r7, #30]
 24987 0076 5B00     		lsls	r3, r3, #1
 24988 0078 DBB2     		uxtb	r3, r3
 24989 007a 0133     		adds	r3, r3, #1
 24990 007c DAB2     		uxtb	r2, r3
 24991 007e 3B1D     		adds	r3, r7, #4
 24992 0080 1146     		mov	r1, r2
 24993 0082 1846     		mov	r0, r3
 24994 0084 FFF7FEFF 		bl	LCRChecksum
 24995 0088 0346     		mov	r3, r0
 24996 008a 1A46     		mov	r2, r3
 24997 008c 07F12003 		add	r3, r7, #32
 24998 0090 2344     		add	r3, r3, r4
 24999 0092 03F81C2C 		strb	r2, [r3, #-28]
3757:..\src/command_processing.c ****     
3758:..\src/command_processing.c ****     // Send package to UART
3759:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 25000              		.loc 1 3759 0
 25001 0096 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 25002 0098 0133     		adds	r3, r3, #1
 25003 009a 9BB2     		uxth	r3, r3
 25004 009c 5B00     		lsls	r3, r3, #1
 25005 009e 9AB2     		uxth	r2, r3
 25006 00a0 3B1D     		adds	r3, r7, #4
 25007 00a2 1146     		mov	r1, r2
 25008 00a4 1846     		mov	r0, r3
 25009 00a6 FFF7FEFF 		bl	commWrite
3760:..\src/command_processing.c **** }
 25010              		.loc 1 3760 0
 25011 00aa 00BF     		nop
 25012 00ac 2437     		adds	r7, r7, #36
 25013              		.cfi_def_cfa_offset 12
 25014 00ae BD46     		mov	sp, r7
 25015              		.cfi_def_cfa_register 13
 25016              		@ sp needed
 25017 00b0 90BD     		pop	{r4, r7, pc}
 25018              	.L988:
 25019 00b2 00BF     		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 547


 25020              	.L987:
 25021 00b4 00000000 		.word	c_mem
 25022 00b8 00000000 		.word	ADC_buf
 25023 00bc 00000000 		.word	NUM_OF_ANALOG_INPUTS
 25024              		.cfi_endproc
 25025              	.LFE109:
 25026              		.size	cmd_get_ADC_raw, .-cmd_get_ADC_raw
 25027              		.global	__aeabi_dsub
 25028              		.global	__aeabi_dadd
 25029              		.global	__aeabi_fcmpgt
 25030              		.section	.text.air_chambers_control,"ax",%progbits
 25031              		.align	2
 25032              		.global	air_chambers_control
 25033              		.thumb
 25034              		.thumb_func
 25035              		.type	air_chambers_control, %function
 25036              	air_chambers_control:
 25037              	.LFB110:
3761:..\src/command_processing.c **** 
3762:..\src/command_processing.c **** //==============================================================================
3763:..\src/command_processing.c **** //                                                          AIR CHAMBERS CONTROL
3764:..\src/command_processing.c **** //==============================================================================
3765:..\src/command_processing.c **** /* It asks current difference to the SoftHand and sets force feedback device inputs proportionally 
3766:..\src/command_processing.c **** 
3767:..\src/command_processing.c **** void air_chambers_control() {
 25038              		.loc 1 3767 0
 25039              		.cfi_startproc
 25040              		@ args = 0, pretend = 0, frame = 24
 25041              		@ frame_needed = 1, uses_anonymous_args = 0
 25042 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 25043              		.cfi_def_cfa_offset 24
 25044              		.cfi_offset 4, -24
 25045              		.cfi_offset 5, -20
 25046              		.cfi_offset 7, -16
 25047              		.cfi_offset 8, -12
 25048              		.cfi_offset 9, -8
 25049              		.cfi_offset 14, -4
 25050 0004 86B0     		sub	sp, sp, #24
 25051              		.cfi_def_cfa_offset 48
 25052 0006 00AF     		add	r7, sp, #0
 25053              		.cfi_def_cfa_register 7
3768:..\src/command_processing.c ****     
3769:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
3770:..\src/command_processing.c ****     
3771:..\src/command_processing.c ****     int16 curr_diff;
3772:..\src/command_processing.c ****     int32 pressure_reference, err_pressure, pressure_value;
3773:..\src/command_processing.c ****     int32 valve_command;
3774:..\src/command_processing.c ****     int16 x_value;
3775:..\src/command_processing.c **** 
3776:..\src/command_processing.c ****     // Use pressure and residual current read from the SoftHand
3777:..\src/command_processing.c ****     
3778:..\src/command_processing.c ****     curr_diff = (int16)commReadResCurrFromSH();
 25054              		.loc 1 3778 0
 25055 0008 FFF7FEFF 		bl	commReadResCurrFromSH
 25056 000c 0346     		mov	r3, r0
 25057 000e BB81     		strh	r3, [r7, #12]	@ movhi
3779:..\src/command_processing.c ****     
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 548


3780:..\src/command_processing.c ****     // Current difference saturation old mapping
3781:..\src/command_processing.c **** //    if(curr_diff > c_mem.FB.max_residual_current) {
3782:..\src/command_processing.c **** //        curr_diff = c_mem.FB.max_residual_current;
3783:..\src/command_processing.c **** //    }
3784:..\src/command_processing.c **** //    if(curr_diff < 0) {
3785:..\src/command_processing.c **** //        curr_diff = 0;
3786:..\src/command_processing.c **** //    }
3787:..\src/command_processing.c **** 
3788:..\src/command_processing.c ****     // Compute pressure reference
3789:..\src/command_processing.c **** 
3790:..\src/command_processing.c ****     x_value = curr_diff - 50.0;
 25058              		.loc 1 3790 0
 25059 0010 B7F90C30 		ldrsh	r3, [r7, #12]
 25060 0014 1846     		mov	r0, r3
 25061 0016 FFF7FEFF 		bl	__aeabi_i2d
 25062 001a 4FF00002 		mov	r2, #0
 25063 001e 5C4B     		ldr	r3, .L999
 25064 0020 FFF7FEFF 		bl	__aeabi_dsub
 25065 0024 0346     		mov	r3, r0
 25066 0026 0C46     		mov	r4, r1
 25067 0028 1846     		mov	r0, r3
 25068 002a 2146     		mov	r1, r4
 25069 002c FFF7FEFF 		bl	__aeabi_d2iz
 25070 0030 0346     		mov	r3, r0
 25071 0032 FB81     		strh	r3, [r7, #14]	@ movhi
3791:..\src/command_processing.c ****     if (x_value < 0)
 25072              		.loc 1 3791 0
 25073 0034 B7F90E30 		ldrsh	r3, [r7, #14]
 25074 0038 002B     		cmp	r3, #0
 25075 003a 01DA     		bge	.L990
3792:..\src/command_processing.c ****         x_value = 0;
 25076              		.loc 1 3792 0
 25077 003c 0023     		movs	r3, #0
 25078 003e FB81     		strh	r3, [r7, #14]	@ movhi
 25079              	.L990:
3793:..\src/command_processing.c ****     
3794:..\src/command_processing.c ****     // old mapping --- linear mapping
3795:..\src/command_processing.c ****     //pressure_reference = (int32)(curr_diff * (c_mem.FB.maximum_pressure_kPa/c_mem.FB.max_residual
3796:..\src/command_processing.c ****     pressure_reference = (int32)((int32)(-30.0*x_value*x_value + 55.0*c_mem.FB.max_residual_current
 25080              		.loc 1 3796 0
 25081 0040 B7F90E30 		ldrsh	r3, [r7, #14]
 25082 0044 1846     		mov	r0, r3
 25083 0046 FFF7FEFF 		bl	__aeabi_i2d
 25084 004a 4FF00002 		mov	r2, #0
 25085 004e 514B     		ldr	r3, .L999+4
 25086 0050 FFF7FEFF 		bl	__aeabi_dmul
 25087 0054 0346     		mov	r3, r0
 25088 0056 0C46     		mov	r4, r1
 25089 0058 2546     		mov	r5, r4
 25090 005a 1C46     		mov	r4, r3
 25091 005c B7F90E30 		ldrsh	r3, [r7, #14]
 25092 0060 1846     		mov	r0, r3
 25093 0062 FFF7FEFF 		bl	__aeabi_i2d
 25094 0066 0246     		mov	r2, r0
 25095 0068 0B46     		mov	r3, r1
 25096 006a 2046     		mov	r0, r4
 25097 006c 2946     		mov	r1, r5
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 549


 25098 006e FFF7FEFF 		bl	__aeabi_dmul
 25099 0072 0346     		mov	r3, r0
 25100 0074 0C46     		mov	r4, r1
 25101 0076 2546     		mov	r5, r4
 25102 0078 1C46     		mov	r4, r3
 25103 007a 474B     		ldr	r3, .L999+8
 25104 007c D3F8C032 		ldr	r3, [r3, #704]
 25105 0080 1846     		mov	r0, r3
 25106 0082 FFF7FEFF 		bl	__aeabi_i2d
 25107 0086 4FF00002 		mov	r2, #0
 25108 008a 444B     		ldr	r3, .L999+12
 25109 008c FFF7FEFF 		bl	__aeabi_dmul
 25110 0090 0246     		mov	r2, r0
 25111 0092 0B46     		mov	r3, r1
 25112 0094 9046     		mov	r8, r2
 25113 0096 9946     		mov	r9, r3
 25114 0098 B7F90E30 		ldrsh	r3, [r7, #14]
 25115 009c 1846     		mov	r0, r3
 25116 009e FFF7FEFF 		bl	__aeabi_i2d
 25117 00a2 0246     		mov	r2, r0
 25118 00a4 0B46     		mov	r3, r1
 25119 00a6 4046     		mov	r0, r8
 25120 00a8 4946     		mov	r1, r9
 25121 00aa FFF7FEFF 		bl	__aeabi_dmul
 25122 00ae 0246     		mov	r2, r0
 25123 00b0 0B46     		mov	r3, r1
 25124 00b2 2046     		mov	r0, r4
 25125 00b4 2946     		mov	r1, r5
 25126 00b6 FFF7FEFF 		bl	__aeabi_dadd
 25127 00ba 0346     		mov	r3, r0
 25128 00bc 0C46     		mov	r4, r1
 25129 00be 1846     		mov	r0, r3
 25130 00c0 2146     		mov	r1, r4
 25131 00c2 FFF7FEFF 		bl	__aeabi_d2iz
 25132 00c6 0146     		mov	r1, r0
 25133 00c8 334B     		ldr	r3, .L999+8
 25134 00ca D3F8C032 		ldr	r3, [r3, #704]
 25135 00ce 324A     		ldr	r2, .L999+8
 25136 00d0 D2F8C022 		ldr	r2, [r2, #704]
 25137 00d4 02FB03F3 		mul	r3, r2, r3
 25138 00d8 91FBF3F3 		sdiv	r3, r1, r3
 25139 00dc 7B61     		str	r3, [r7, #20]
3797:..\src/command_processing.c ****     if (pressure_reference < 0)
 25140              		.loc 1 3797 0
 25141 00de 7B69     		ldr	r3, [r7, #20]
 25142 00e0 002B     		cmp	r3, #0
 25143 00e2 01DA     		bge	.L991
3798:..\src/command_processing.c ****         pressure_reference = 0;
 25144              		.loc 1 3798 0
 25145 00e4 0023     		movs	r3, #0
 25146 00e6 7B61     		str	r3, [r7, #20]
 25147              	.L991:
3799:..\src/command_processing.c ****     if (pressure_reference > c_mem.FB.maximum_pressure_kPa)
 25148              		.loc 1 3799 0
 25149 00e8 7869     		ldr	r0, [r7, #20]
 25150 00ea FFF7FEFF 		bl	__aeabi_i2f
 25151 00ee 0246     		mov	r2, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 550


 25152 00f0 294B     		ldr	r3, .L999+8
 25153 00f2 D3F8C432 		ldr	r3, [r3, #708]	@ float
 25154 00f6 1946     		mov	r1, r3
 25155 00f8 1046     		mov	r0, r2
 25156 00fa FFF7FEFF 		bl	__aeabi_fcmpgt
 25157 00fe 0346     		mov	r3, r0
 25158 0100 002B     		cmp	r3, #0
 25159 0102 07D0     		beq	.L992
3800:..\src/command_processing.c ****         pressure_reference = c_mem.FB.maximum_pressure_kPa;
 25160              		.loc 1 3800 0
 25161 0104 244B     		ldr	r3, .L999+8
 25162 0106 D3F8C432 		ldr	r3, [r3, #708]	@ float
 25163 010a 1846     		mov	r0, r3
 25164 010c FFF7FEFF 		bl	__aeabi_f2iz
 25165 0110 0346     		mov	r3, r0
 25166 0112 7B61     		str	r3, [r7, #20]
 25167              	.L992:
3801:..\src/command_processing.c ****     
3802:..\src/command_processing.c ****     pressure_value = (int32)g_fb_meas.pressure;
 25168              		.loc 1 3802 0
 25169 0114 224B     		ldr	r3, .L999+16
 25170 0116 1B68     		ldr	r3, [r3]	@ float
 25171 0118 1846     		mov	r0, r3
 25172 011a FFF7FEFF 		bl	__aeabi_f2iz
 25173 011e 0346     		mov	r3, r0
 25174 0120 BB60     		str	r3, [r7, #8]
3803:..\src/command_processing.c ****     err_pressure = pressure_reference - pressure_value;       // error in kPa
 25175              		.loc 1 3803 0
 25176 0122 7A69     		ldr	r2, [r7, #20]
 25177 0124 BB68     		ldr	r3, [r7, #8]
 25178 0126 D31A     		subs	r3, r2, r3
 25179 0128 7B60     		str	r3, [r7, #4]
3804:..\src/command_processing.c **** //    if (err_pressure < 0){
3805:..\src/command_processing.c **** //        err_pressure = 0;
3806:..\src/command_processing.c **** //    }
3807:..\src/command_processing.c ****     
3808:..\src/command_processing.c ****     if (x_value <= 0){
 25180              		.loc 1 3808 0
 25181 012a B7F90E30 		ldrsh	r3, [r7, #14]
 25182 012e 002B     		cmp	r3, #0
 25183 0130 02DC     		bgt	.L994
3809:..\src/command_processing.c ****         //i.e the hand is opening
3810:..\src/command_processing.c ****         valve_command = 0;  //valve open: air passes
 25184              		.loc 1 3810 0
 25185 0132 0023     		movs	r3, #0
 25186 0134 3B61     		str	r3, [r7, #16]
 25187 0136 01E0     		b	.L995
 25188              	.L994:
3811:..\src/command_processing.c ****     }
3812:..\src/command_processing.c ****     else {
3813:..\src/command_processing.c ****         //i.e the hand is closing, so valve should stay closed independently from the pressure erro
3814:..\src/command_processing.c ****         //if err_pressure greater than 0, it means pressure should increase, so valve should stay c
3815:..\src/command_processing.c ****         //if err_pressure==0, it means you reached the right pressure, so valve should stay closed
3816:..\src/command_processing.c ****         valve_command = 1;  //3.6V (5V - 2 diodes) - valve close: air doesn't pass
 25189              		.loc 1 3816 0
 25190 0138 0123     		movs	r3, #1
 25191 013a 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 551


 25192              	.L995:
3817:..\src/command_processing.c ****     }
3818:..\src/command_processing.c ****     
3819:..\src/command_processing.c ****     // Pump control
3820:..\src/command_processing.c ****     g_refNew[0].pwm = (int32)(c_mem.FB.prop_err_fb_gain*err_pressure);
 25193              		.loc 1 3820 0
 25194 013c 164B     		ldr	r3, .L999+8
 25195 013e D3F8C842 		ldr	r4, [r3, #712]	@ float
 25196 0142 7868     		ldr	r0, [r7, #4]
 25197 0144 FFF7FEFF 		bl	__aeabi_i2f
 25198 0148 0346     		mov	r3, r0
 25199 014a 1946     		mov	r1, r3
 25200 014c 2046     		mov	r0, r4
 25201 014e FFF7FEFF 		bl	__aeabi_fmul
 25202 0152 0346     		mov	r3, r0
 25203 0154 1846     		mov	r0, r3
 25204 0156 FFF7FEFF 		bl	__aeabi_f2iz
 25205 015a 0246     		mov	r2, r0
 25206 015c 114B     		ldr	r3, .L999+20
 25207 015e 9A60     		str	r2, [r3, #8]
3821:..\src/command_processing.c ****     //c_mem.FB.prop_err_fb_gain default 1.0 gain since, max err_pressure is 25 and pwm range is app
3822:..\src/command_processing.c ****     
3823:..\src/command_processing.c ****     // Limit output voltage
3824:..\src/command_processing.c ****     if (g_refNew[0].pwm > 80) // 80 (3.5V) 80% of 4.3V (5V - 1 diode)
 25208              		.loc 1 3824 0
 25209 0160 104B     		ldr	r3, .L999+20
 25210 0162 9B68     		ldr	r3, [r3, #8]
 25211 0164 502B     		cmp	r3, #80
 25212 0166 02DD     		ble	.L996
3825:..\src/command_processing.c ****         g_refNew[0].pwm = 80; // 80
 25213              		.loc 1 3825 0
 25214 0168 0E4B     		ldr	r3, .L999+20
 25215 016a 5022     		movs	r2, #80
 25216 016c 9A60     		str	r2, [r3, #8]
 25217              	.L996:
3826:..\src/command_processing.c ****     if (g_refNew[0].pwm < 20)
 25218              		.loc 1 3826 0
 25219 016e 0D4B     		ldr	r3, .L999+20
 25220 0170 9B68     		ldr	r3, [r3, #8]
 25221 0172 132B     		cmp	r3, #19
 25222 0174 02DC     		bgt	.L997
3827:..\src/command_processing.c ****         g_refNew[0].pwm = 0;
 25223              		.loc 1 3827 0
 25224 0176 0B4B     		ldr	r3, .L999+20
 25225 0178 0022     		movs	r2, #0
 25226 017a 9A60     		str	r2, [r3, #8]
 25227              	.L997:
3828:..\src/command_processing.c ****         
3829:..\src/command_processing.c ****     VALVE_Write(valve_command);
 25228              		.loc 1 3829 0
 25229 017c 3B69     		ldr	r3, [r7, #16]
 25230 017e DBB2     		uxtb	r3, r3
 25231 0180 1846     		mov	r0, r3
 25232 0182 FFF7FEFF 		bl	VALVE_Write
3830:..\src/command_processing.c **** #endif
3831:..\src/command_processing.c **** }
 25233              		.loc 1 3831 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 552


 25234 0186 00BF     		nop
 25235 0188 1837     		adds	r7, r7, #24
 25236              		.cfi_def_cfa_offset 24
 25237 018a BD46     		mov	sp, r7
 25238              		.cfi_def_cfa_register 13
 25239              		@ sp needed
 25240 018c BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 25241              	.L1000:
 25242              		.align	2
 25243              	.L999:
 25244 0190 00004940 		.word	1078525952
 25245 0194 00003EC0 		.word	-1069678592
 25246 0198 00000000 		.word	c_mem
 25247 019c 00804B40 		.word	1078689792
 25248 01a0 00000000 		.word	g_fb_meas
 25249 01a4 00000000 		.word	g_refNew
 25250              		.cfi_endproc
 25251              	.LFE110:
 25252              		.size	air_chambers_control, .-air_chambers_control
 25253              		.section	.text.drive_slave,"ax",%progbits
 25254              		.align	2
 25255              		.global	drive_slave
 25256              		.thumb
 25257              		.thumb_func
 25258              		.type	drive_slave, %function
 25259              	drive_slave:
 25260              	.LFB111:
3832:..\src/command_processing.c **** 
3833:..\src/command_processing.c **** //==============================================================================
3834:..\src/command_processing.c **** //                                                                   DRIVE SLAVE
3835:..\src/command_processing.c **** //==============================================================================
3836:..\src/command_processing.c ****  
3837:..\src/command_processing.c **** void drive_slave(uint8 motor_idx, uint8 slave_ID) {
 25261              		.loc 1 3837 0
 25262              		.cfi_startproc
 25263              		@ args = 0, pretend = 0, frame = 24
 25264              		@ frame_needed = 1, uses_anonymous_args = 0
 25265 0000 90B5     		push	{r4, r7, lr}
 25266              		.cfi_def_cfa_offset 12
 25267              		.cfi_offset 4, -12
 25268              		.cfi_offset 7, -8
 25269              		.cfi_offset 14, -4
 25270 0002 87B0     		sub	sp, sp, #28
 25271              		.cfi_def_cfa_offset 40
 25272 0004 00AF     		add	r7, sp, #0
 25273              		.cfi_def_cfa_register 7
 25274 0006 0346     		mov	r3, r0
 25275 0008 0A46     		mov	r2, r1
 25276 000a FB71     		strb	r3, [r7, #7]
 25277 000c 1346     		mov	r3, r2
 25278 000e BB71     		strb	r3, [r7, #6]
3838:..\src/command_processing.c **** 
3839:..\src/command_processing.c **** #ifdef MASTER_FW
3840:..\src/command_processing.c ****     uint8 packet_data[6];
3841:..\src/command_processing.c ****     uint8 packet_lenght;
3842:..\src/command_processing.c ****     int16 aux_int16;
3843:..\src/command_processing.c ****     
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 553


3844:..\src/command_processing.c ****     // If not the use of handle or an emg input mode is set, exit from master_mode
3845:..\src/command_processing.c ****     if( c_mem.motor[motor_idx].input_mode != INPUT_MODE_ENCODER3          &&
 25279              		.loc 1 3845 0
 25280 0010 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 25281 0012 4D49     		ldr	r1, .L1006
 25282 0014 1346     		mov	r3, r2
 25283 0016 DB00     		lsls	r3, r3, #3
 25284 0018 9B1A     		subs	r3, r3, r2
 25285 001a 1B01     		lsls	r3, r3, #4
 25286 001c 0B44     		add	r3, r3, r1
 25287 001e 03F58773 		add	r3, r3, #270
 25288 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25289 0024 012B     		cmp	r3, #1
 25290 0026 33D0     		beq	.L1002
3846:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_PROPORTIONAL  &&
 25291              		.loc 1 3846 0 discriminator 1
 25292 0028 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 25293 002a 4749     		ldr	r1, .L1006
 25294 002c 1346     		mov	r3, r2
 25295 002e DB00     		lsls	r3, r3, #3
 25296 0030 9B1A     		subs	r3, r3, r2
 25297 0032 1B01     		lsls	r3, r3, #4
 25298 0034 0B44     		add	r3, r3, r1
 25299 0036 03F58773 		add	r3, r3, #270
 25300 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
3845:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_PROPORTIONAL  &&
 25301              		.loc 1 3845 0 discriminator 1
 25302 003c 022B     		cmp	r3, #2
 25303 003e 27D0     		beq	.L1002
3847:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_INTEGRAL      &&
 25304              		.loc 1 3847 0
 25305 0040 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 25306 0042 4149     		ldr	r1, .L1006
 25307 0044 1346     		mov	r3, r2
 25308 0046 DB00     		lsls	r3, r3, #3
 25309 0048 9B1A     		subs	r3, r3, r2
 25310 004a 1B01     		lsls	r3, r3, #4
 25311 004c 0B44     		add	r3, r3, r1
 25312 004e 03F58773 		add	r3, r3, #270
 25313 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
3846:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_PROPORTIONAL  &&
 25314              		.loc 1 3846 0
 25315 0054 032B     		cmp	r3, #3
 25316 0056 1BD0     		beq	.L1002
3848:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_FCFS          &&
 25317              		.loc 1 3848 0
 25318 0058 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 25319 005a 3B49     		ldr	r1, .L1006
 25320 005c 1346     		mov	r3, r2
 25321 005e DB00     		lsls	r3, r3, #3
 25322 0060 9B1A     		subs	r3, r3, r2
 25323 0062 1B01     		lsls	r3, r3, #4
 25324 0064 0B44     		add	r3, r3, r1
 25325 0066 03F58773 		add	r3, r3, #270
 25326 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
3847:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_INTEGRAL      &&
 25327              		.loc 1 3847 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 554


 25328 006c 042B     		cmp	r3, #4
 25329 006e 0FD0     		beq	.L1002
3849:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_FCFS_ADV     ){
 25330              		.loc 1 3849 0
 25331 0070 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 25332 0072 3549     		ldr	r1, .L1006
 25333 0074 1346     		mov	r3, r2
 25334 0076 DB00     		lsls	r3, r3, #3
 25335 0078 9B1A     		subs	r3, r3, r2
 25336 007a 1B01     		lsls	r3, r3, #4
 25337 007c 0B44     		add	r3, r3, r1
 25338 007e 03F58773 		add	r3, r3, #270
 25339 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
3848:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_FCFS          &&
 25340              		.loc 1 3848 0
 25341 0084 052B     		cmp	r3, #5
 25342 0086 03D0     		beq	.L1002
3850:..\src/command_processing.c ****         master_mode = 0;
 25343              		.loc 1 3850 0
 25344 0088 304B     		ldr	r3, .L1006+4
 25345 008a 0022     		movs	r2, #0
 25346 008c 1A70     		strb	r2, [r3]
3851:..\src/command_processing.c ****         return;
 25347              		.loc 1 3851 0
 25348 008e 58E0     		b	.L1001
 25349              	.L1002:
3852:..\src/command_processing.c ****     }
3853:..\src/command_processing.c ****         
3854:..\src/command_processing.c ****     if (dev_tension[0] > 5000 && dev_tension[0] < 7000){
 25350              		.loc 1 3854 0
 25351 0090 2F4B     		ldr	r3, .L1006+8
 25352 0092 1B68     		ldr	r3, [r3]
 25353 0094 41F28832 		movw	r2, #5000
 25354 0098 9342     		cmp	r3, r2
 25355 009a 09DD     		ble	.L1004
 25356              		.loc 1 3854 0 is_stmt 0 discriminator 1
 25357 009c 2C4B     		ldr	r3, .L1006+8
 25358 009e 1B68     		ldr	r3, [r3]
 25359 00a0 41F65732 		movw	r2, #6999
 25360 00a4 9342     		cmp	r3, r2
 25361 00a6 03DC     		bgt	.L1004
3855:..\src/command_processing.c ****         master_mode = 0;
 25362              		.loc 1 3855 0 is_stmt 1
 25363 00a8 284B     		ldr	r3, .L1006+4
 25364 00aa 0022     		movs	r2, #0
 25365 00ac 1A70     		strb	r2, [r3]
3856:..\src/command_processing.c ****         return;
 25366              		.loc 1 3856 0
 25367 00ae 48E0     		b	.L1001
 25368              	.L1004:
3857:..\src/command_processing.c ****     }
3858:..\src/command_processing.c ****     
3859:..\src/command_processing.c ****        
3860:..\src/command_processing.c ****     //Sends a Set inputs command to a second board
3861:..\src/command_processing.c ****     packet_data[0] = CMD_SET_INPUTS;
 25369              		.loc 1 3861 0
 25370 00b0 8223     		movs	r3, #130
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 555


 25371 00b2 3B74     		strb	r3, [r7, #16]
3862:..\src/command_processing.c ****     aux_int16 = (int16) (g_ref[motor_idx].pos >> g_mem.enc[g_mem.motor[motor_idx].encoder_line].res
 25372              		.loc 1 3862 0
 25373 00b4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 25374 00b6 274A     		ldr	r2, .L1006+12
 25375 00b8 1B01     		lsls	r3, r3, #4
 25376 00ba 1344     		add	r3, r3, r2
 25377 00bc 1968     		ldr	r1, [r3]
 25378 00be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 25379 00c0 2548     		ldr	r0, .L1006+16
 25380 00c2 1346     		mov	r3, r2
 25381 00c4 DB00     		lsls	r3, r3, #3
 25382 00c6 9B1A     		subs	r3, r3, r2
 25383 00c8 1B01     		lsls	r3, r3, #4
 25384 00ca 0344     		add	r3, r3, r0
 25385 00cc 03F58873 		add	r3, r3, #272
 25386 00d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25387 00d2 1846     		mov	r0, r3
 25388 00d4 204A     		ldr	r2, .L1006+16
 25389 00d6 0346     		mov	r3, r0
 25390 00d8 5B00     		lsls	r3, r3, #1
 25391 00da 0344     		add	r3, r3, r0
 25392 00dc 1B01     		lsls	r3, r3, #4
 25393 00de 1344     		add	r3, r3, r2
 25394 00e0 03F29513 		addw	r3, r3, #405
 25395 00e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25396 00e6 41FA03F3 		asr	r3, r1, r3
 25397 00ea 1BB2     		sxth	r3, r3
 25398 00ec FB81     		strh	r3, [r7, #14]	@ movhi
3863:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 25399              		.loc 1 3863 0
 25400 00ee 07F10E03 		add	r3, r7, #14
 25401 00f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25402 00f4 BB74     		strb	r3, [r7, #18]
3864:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 25403              		.loc 1 3864 0
 25404 00f6 07F10E03 		add	r3, r7, #14
 25405 00fa 0133     		adds	r3, r3, #1
 25406 00fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25407 00fe 7B74     		strb	r3, [r7, #17]
3865:..\src/command_processing.c ****     *((int16 *) &packet_data[3]) = 0;
 25408              		.loc 1 3865 0
 25409 0100 07F11003 		add	r3, r7, #16
 25410 0104 0333     		adds	r3, r3, #3
 25411 0106 0022     		movs	r2, #0
 25412 0108 1A80     		strh	r2, [r3]	@ movhi
3866:..\src/command_processing.c ****     
3867:..\src/command_processing.c ****     packet_lenght = 6;
 25413              		.loc 1 3867 0
 25414 010a 0623     		movs	r3, #6
 25415 010c FB75     		strb	r3, [r7, #23]
3868:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
 25416              		.loc 1 3868 0
 25417 010e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 25418 0110 5C1E     		subs	r4, r3, #1
 25419 0112 FB7D     		ldrb	r3, [r7, #23]
 25420 0114 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 556


 25421 0116 DAB2     		uxtb	r2, r3
 25422 0118 07F11003 		add	r3, r7, #16
 25423 011c 1146     		mov	r1, r2
 25424 011e 1846     		mov	r0, r3
 25425 0120 FFF7FEFF 		bl	LCRChecksum
 25426 0124 0346     		mov	r3, r0
 25427 0126 1A46     		mov	r2, r3
 25428 0128 07F11803 		add	r3, r7, #24
 25429 012c 2344     		add	r3, r3, r4
 25430 012e 03F8082C 		strb	r2, [r3, #-8]
3869:..\src/command_processing.c ****     commWriteID(packet_data, packet_lenght, slave_ID);
 25431              		.loc 1 3869 0
 25432 0132 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 25433 0134 99B2     		uxth	r1, r3
 25434 0136 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 25435 0138 07F11003 		add	r3, r7, #16
 25436 013c 1846     		mov	r0, r3
 25437 013e FFF7FEFF 		bl	commWriteID
 25438              	.L1001:
3870:..\src/command_processing.c **** 
3871:..\src/command_processing.c **** #endif
3872:..\src/command_processing.c **** }
 25439              		.loc 1 3872 0
 25440 0142 1C37     		adds	r7, r7, #28
 25441              		.cfi_def_cfa_offset 12
 25442 0144 BD46     		mov	sp, r7
 25443              		.cfi_def_cfa_register 13
 25444              		@ sp needed
 25445 0146 90BD     		pop	{r4, r7, pc}
 25446              	.L1007:
 25447              		.align	2
 25448              	.L1006:
 25449 0148 00000000 		.word	c_mem
 25450 014c 00000000 		.word	master_mode
 25451 0150 00000000 		.word	dev_tension
 25452 0154 00000000 		.word	g_ref
 25453 0158 00000000 		.word	g_mem
 25454              		.cfi_endproc
 25455              	.LFE111:
 25456              		.size	drive_slave, .-drive_slave
 25457              		.section	.text.stop_feedback,"ax",%progbits
 25458              		.align	2
 25459              		.global	stop_feedback
 25460              		.thumb
 25461              		.thumb_func
 25462              		.type	stop_feedback, %function
 25463              	stop_feedback:
 25464              	.LFB112:
3873:..\src/command_processing.c **** 
3874:..\src/command_processing.c **** //==============================================================================
3875:..\src/command_processing.c **** //                                                                 STOP FEEDBACK
3876:..\src/command_processing.c **** //==============================================================================
3877:..\src/command_processing.c ****  
3878:..\src/command_processing.c **** void stop_feedback() {
 25465              		.loc 1 3878 0
 25466              		.cfi_startproc
 25467              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 557


 25468              		@ frame_needed = 1, uses_anonymous_args = 0
 25469 0000 80B5     		push	{r7, lr}
 25470              		.cfi_def_cfa_offset 8
 25471              		.cfi_offset 7, -8
 25472              		.cfi_offset 14, -4
 25473 0002 00AF     		add	r7, sp, #0
 25474              		.cfi_def_cfa_register 7
3879:..\src/command_processing.c ****     
3880:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
3881:..\src/command_processing.c ****     if (c_mem.dev.dev_type == AIR_CHAMBERS_FB){
 25475              		.loc 1 3881 0
 25476 0004 064B     		ldr	r3, .L1011
 25477 0006 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 25478 000a 022B     		cmp	r3, #2
 25479 000c 05D1     		bne	.L1010
3882:..\src/command_processing.c ****         // Stop pump and open valve
3883:..\src/command_processing.c ****         g_refNew[0].pwm = 0;    
 25480              		.loc 1 3883 0
 25481 000e 054B     		ldr	r3, .L1011+4
 25482 0010 0022     		movs	r2, #0
 25483 0012 9A60     		str	r2, [r3, #8]
3884:..\src/command_processing.c ****         VALVE_Write(0);
 25484              		.loc 1 3884 0
 25485 0014 0020     		movs	r0, #0
 25486 0016 FFF7FEFF 		bl	VALVE_Write
 25487              	.L1010:
3885:..\src/command_processing.c ****     }
3886:..\src/command_processing.c **** #endif
3887:..\src/command_processing.c **** }
 25488              		.loc 1 3887 0
 25489 001a 00BF     		nop
 25490 001c 80BD     		pop	{r7, pc}
 25491              	.L1012:
 25492 001e 00BF     		.align	2
 25493              	.L1011:
 25494 0020 00000000 		.word	c_mem
 25495 0024 00000000 		.word	g_refNew
 25496              		.cfi_endproc
 25497              	.LFE112:
 25498              		.size	stop_feedback, .-stop_feedback
 25499              		.section	.text.deactivate_slaves,"ax",%progbits
 25500              		.align	2
 25501              		.global	deactivate_slaves
 25502              		.thumb
 25503              		.thumb_func
 25504              		.type	deactivate_slaves, %function
 25505              	deactivate_slaves:
 25506              	.LFB113:
3888:..\src/command_processing.c **** 
3889:..\src/command_processing.c **** //==============================================================================
3890:..\src/command_processing.c **** //                                                             DEACTIVATE SLAVES
3891:..\src/command_processing.c **** //==============================================================================
3892:..\src/command_processing.c ****  
3893:..\src/command_processing.c **** void deactivate_slaves() {
 25507              		.loc 1 3893 0
 25508              		.cfi_startproc
 25509              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 558


 25510              		@ frame_needed = 1, uses_anonymous_args = 0
 25511 0000 90B5     		push	{r4, r7, lr}
 25512              		.cfi_def_cfa_offset 12
 25513              		.cfi_offset 4, -12
 25514              		.cfi_offset 7, -8
 25515              		.cfi_offset 14, -4
 25516 0002 85B0     		sub	sp, sp, #20
 25517              		.cfi_def_cfa_offset 32
 25518 0004 00AF     		add	r7, sp, #0
 25519              		.cfi_def_cfa_register 7
3894:..\src/command_processing.c ****     
3895:..\src/command_processing.c **** #ifdef MASTER_FW
3896:..\src/command_processing.c ****     
3897:..\src/command_processing.c ****     uint8 packet_data[10];
3898:..\src/command_processing.c ****     uint8 packet_lenght;
3899:..\src/command_processing.c ****     
3900:..\src/command_processing.c ****     // If not a emg input mode is set, exit from master_mode
3901:..\src/command_processing.c ****     if(c_mem.motor[0].input_mode != INPUT_MODE_EMG_PROPORTIONAL  &&
 25520              		.loc 1 3901 0
 25521 0006 1D4B     		ldr	r3, .L1016
 25522 0008 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 25523 000c 022B     		cmp	r3, #2
 25524 000e 12D0     		beq	.L1014
3902:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_INTEGRAL      &&
 25525              		.loc 1 3902 0 discriminator 1
 25526 0010 1A4B     		ldr	r3, .L1016
 25527 0012 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
3901:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_INTEGRAL      &&
 25528              		.loc 1 3901 0 discriminator 1
 25529 0016 032B     		cmp	r3, #3
 25530 0018 0DD0     		beq	.L1014
3903:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS          &&
 25531              		.loc 1 3903 0
 25532 001a 184B     		ldr	r3, .L1016
 25533 001c 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
3902:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_INTEGRAL      &&
 25534              		.loc 1 3902 0
 25535 0020 042B     		cmp	r3, #4
 25536 0022 08D0     		beq	.L1014
3904:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS_ADV     ){
 25537              		.loc 1 3904 0
 25538 0024 154B     		ldr	r3, .L1016
 25539 0026 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
3903:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS          &&
 25540              		.loc 1 3903 0
 25541 002a 052B     		cmp	r3, #5
 25542 002c 03D0     		beq	.L1014
3905:..\src/command_processing.c ****         master_mode = 0;
 25543              		.loc 1 3905 0
 25544 002e 144B     		ldr	r3, .L1016+4
 25545 0030 0022     		movs	r2, #0
 25546 0032 1A70     		strb	r2, [r3]
 25547 0034 1FE0     		b	.L1013
 25548              	.L1014:
3906:..\src/command_processing.c ****         return;
3907:..\src/command_processing.c ****     }
3908:..\src/command_processing.c ****     
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 559


3909:..\src/command_processing.c ****     //Sends a Set inputs command to a second board
3910:..\src/command_processing.c ****     packet_data[0] = CMD_ACTIVATE;
 25549              		.loc 1 3910 0
 25550 0036 8023     		movs	r3, #128
 25551 0038 3B71     		strb	r3, [r7, #4]
3911:..\src/command_processing.c **** 
3912:..\src/command_processing.c ****     *((int16 *) &packet_data[1]) = 0;   //3 to activate, 0 to deactivate
 25552              		.loc 1 3912 0
 25553 003a 3B1D     		adds	r3, r7, #4
 25554 003c 0133     		adds	r3, r3, #1
 25555 003e 0022     		movs	r2, #0
 25556 0040 1A80     		strh	r2, [r3]	@ movhi
3913:..\src/command_processing.c ****     packet_lenght = 3;
 25557              		.loc 1 3913 0
 25558 0042 0323     		movs	r3, #3
 25559 0044 FB73     		strb	r3, [r7, #15]
3914:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
 25560              		.loc 1 3914 0
 25561 0046 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25562 0048 5C1E     		subs	r4, r3, #1
 25563 004a FB7B     		ldrb	r3, [r7, #15]
 25564 004c 013B     		subs	r3, r3, #1
 25565 004e DAB2     		uxtb	r2, r3
 25566 0050 3B1D     		adds	r3, r7, #4
 25567 0052 1146     		mov	r1, r2
 25568 0054 1846     		mov	r0, r3
 25569 0056 FFF7FEFF 		bl	LCRChecksum
 25570 005a 0346     		mov	r3, r0
 25571 005c 1A46     		mov	r2, r3
 25572 005e 07F11003 		add	r3, r7, #16
 25573 0062 2344     		add	r3, r3, r4
 25574 0064 03F80C2C 		strb	r2, [r3, #-12]
3915:..\src/command_processing.c ****     
3916:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 25575              		.loc 1 3916 0
 25576 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25577 006a 9AB2     		uxth	r2, r3
 25578 006c 3B1D     		adds	r3, r7, #4
 25579 006e 1146     		mov	r1, r2
 25580 0070 1846     		mov	r0, r3
 25581 0072 FFF7FEFF 		bl	commWrite
 25582              	.L1013:
3917:..\src/command_processing.c ****     
3918:..\src/command_processing.c **** #endif    
3919:..\src/command_processing.c **** }
 25583              		.loc 1 3919 0
 25584 0076 1437     		adds	r7, r7, #20
 25585              		.cfi_def_cfa_offset 12
 25586 0078 BD46     		mov	sp, r7
 25587              		.cfi_def_cfa_register 13
 25588              		@ sp needed
 25589 007a 90BD     		pop	{r4, r7, pc}
 25590              	.L1017:
 25591              		.align	2
 25592              	.L1016:
 25593 007c 00000000 		.word	c_mem
 25594 0080 00000000 		.word	master_mode
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 560


 25595              		.cfi_endproc
 25596              	.LFE113:
 25597              		.size	deactivate_slaves, .-deactivate_slaves
 25598              		.bss
 25599              		.align	1
 25600              	i.11142:
 25601 0000 0000     		.space	2
 25602 0002 0000     		.align	2
 25603              	last_aux_int16.11266:
 25604 0004 00000000 		.space	4
 25605              		.text
 25606              	.Letext0:
 25607              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 25608              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 25609              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 25610              		.file 6 "..\\src\\commands.h"
 25611              		.file 7 "..\\src\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 25612              		.file 8 "..\\src\\globals.h"
 25613              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 25614              		.section	.debug_info,"",%progbits
 25615              	.Ldebug_info0:
 25616 0000 4D230000 		.4byte	0x234d
 25617 0004 0400     		.2byte	0x4
 25618 0006 00000000 		.4byte	.Ldebug_abbrev0
 25619 000a 04       		.byte	0x4
 25620 000b 01       		.uleb128 0x1
 25621 000c 96080000 		.4byte	.LASF368
 25622 0010 0C       		.byte	0xc
 25623 0011 1D130000 		.4byte	.LASF369
 25624 0015 95060000 		.4byte	.LASF370
 25625 0019 00000000 		.4byte	.Ldebug_ranges0+0
 25626 001d 00000000 		.4byte	0
 25627 0021 00000000 		.4byte	.Ldebug_line0
 25628 0025 02       		.uleb128 0x2
 25629 0026 01       		.byte	0x1
 25630 0027 06       		.byte	0x6
 25631 0028 64030000 		.4byte	.LASF0
 25632 002c 02       		.uleb128 0x2
 25633 002d 01       		.byte	0x1
 25634 002e 08       		.byte	0x8
 25635 002f DB030000 		.4byte	.LASF1
 25636 0033 02       		.uleb128 0x2
 25637 0034 02       		.byte	0x2
 25638 0035 05       		.byte	0x5
 25639 0036 A40F0000 		.4byte	.LASF2
 25640 003a 02       		.uleb128 0x2
 25641 003b 02       		.byte	0x2
 25642 003c 07       		.byte	0x7
 25643 003d 23120000 		.4byte	.LASF3
 25644 0041 03       		.uleb128 0x3
 25645 0042 DB120000 		.4byte	.LASF5
 25646 0046 03       		.byte	0x3
 25647 0047 3F       		.byte	0x3f
 25648 0048 4C000000 		.4byte	0x4c
 25649 004c 02       		.uleb128 0x2
 25650 004d 04       		.byte	0x4
 25651 004e 05       		.byte	0x5
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 561


 25652 004f 61020000 		.4byte	.LASF4
 25653 0053 03       		.uleb128 0x3
 25654 0054 50090000 		.4byte	.LASF6
 25655 0058 03       		.byte	0x3
 25656 0059 41       		.byte	0x41
 25657 005a 5E000000 		.4byte	0x5e
 25658 005e 02       		.uleb128 0x2
 25659 005f 04       		.byte	0x4
 25660 0060 07       		.byte	0x7
 25661 0061 4F070000 		.4byte	.LASF7
 25662 0065 02       		.uleb128 0x2
 25663 0066 08       		.byte	0x8
 25664 0067 05       		.byte	0x5
 25665 0068 5B090000 		.4byte	.LASF8
 25666 006c 02       		.uleb128 0x2
 25667 006d 08       		.byte	0x8
 25668 006e 07       		.byte	0x7
 25669 006f F00C0000 		.4byte	.LASF9
 25670 0073 04       		.uleb128 0x4
 25671 0074 04       		.byte	0x4
 25672 0075 05       		.byte	0x5
 25673 0076 696E7400 		.ascii	"int\000"
 25674 007a 02       		.uleb128 0x2
 25675 007b 04       		.byte	0x4
 25676 007c 07       		.byte	0x7
 25677 007d 5C0A0000 		.4byte	.LASF10
 25678 0081 03       		.uleb128 0x3
 25679 0082 55000000 		.4byte	.LASF11
 25680 0086 04       		.byte	0x4
 25681 0087 2C       		.byte	0x2c
 25682 0088 41000000 		.4byte	0x41
 25683 008c 03       		.uleb128 0x3
 25684 008d 94110000 		.4byte	.LASF12
 25685 0091 04       		.byte	0x4
 25686 0092 30       		.byte	0x30
 25687 0093 53000000 		.4byte	0x53
 25688 0097 05       		.uleb128 0x5
 25689 0098 920F0000 		.4byte	.LASF13
 25690 009c 05       		.byte	0x5
 25691 009d E401     		.2byte	0x1e4
 25692 009f 2C000000 		.4byte	0x2c
 25693 00a3 05       		.uleb128 0x5
 25694 00a4 70130000 		.4byte	.LASF14
 25695 00a8 05       		.byte	0x5
 25696 00a9 E501     		.2byte	0x1e5
 25697 00ab 3A000000 		.4byte	0x3a
 25698 00af 05       		.uleb128 0x5
 25699 00b0 81000000 		.4byte	.LASF15
 25700 00b4 05       		.byte	0x5
 25701 00b5 E601     		.2byte	0x1e6
 25702 00b7 5E000000 		.4byte	0x5e
 25703 00bb 05       		.uleb128 0x5
 25704 00bc 8E010000 		.4byte	.LASF16
 25705 00c0 05       		.byte	0x5
 25706 00c1 E701     		.2byte	0x1e7
 25707 00c3 25000000 		.4byte	0x25
 25708 00c7 05       		.uleb128 0x5
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 562


 25709 00c8 F4100000 		.4byte	.LASF17
 25710 00cc 05       		.byte	0x5
 25711 00cd E801     		.2byte	0x1e8
 25712 00cf 33000000 		.4byte	0x33
 25713 00d3 05       		.uleb128 0x5
 25714 00d4 72120000 		.4byte	.LASF18
 25715 00d8 05       		.byte	0x5
 25716 00d9 E901     		.2byte	0x1e9
 25717 00db 4C000000 		.4byte	0x4c
 25718 00df 05       		.uleb128 0x5
 25719 00e0 D8020000 		.4byte	.LASF19
 25720 00e4 05       		.byte	0x5
 25721 00e5 EA01     		.2byte	0x1ea
 25722 00e7 EB000000 		.4byte	0xeb
 25723 00eb 02       		.uleb128 0x2
 25724 00ec 04       		.byte	0x4
 25725 00ed 04       		.byte	0x4
 25726 00ee 150A0000 		.4byte	.LASF20
 25727 00f2 02       		.uleb128 0x2
 25728 00f3 08       		.byte	0x8
 25729 00f4 04       		.byte	0x4
 25730 00f5 B3090000 		.4byte	.LASF21
 25731 00f9 02       		.uleb128 0x2
 25732 00fa 01       		.byte	0x1
 25733 00fb 08       		.byte	0x8
 25734 00fc 7F040000 		.4byte	.LASF22
 25735 0100 05       		.uleb128 0x5
 25736 0101 E50D0000 		.4byte	.LASF23
 25737 0105 05       		.byte	0x5
 25738 0106 8E02     		.2byte	0x28e
 25739 0108 0C010000 		.4byte	0x10c
 25740 010c 06       		.uleb128 0x6
 25741 010d 97000000 		.4byte	0x97
 25742 0111 02       		.uleb128 0x2
 25743 0112 08       		.byte	0x8
 25744 0113 04       		.byte	0x4
 25745 0114 D60B0000 		.4byte	.LASF24
 25746 0118 02       		.uleb128 0x2
 25747 0119 04       		.byte	0x4
 25748 011a 07       		.byte	0x7
 25749 011b 10000000 		.4byte	.LASF25
 25750 011f 07       		.uleb128 0x7
 25751 0120 04       		.byte	0x4
 25752 0121 F9000000 		.4byte	0xf9
 25753 0125 07       		.uleb128 0x7
 25754 0126 04       		.byte	0x4
 25755 0127 2B010000 		.4byte	0x12b
 25756 012b 08       		.uleb128 0x8
 25757 012c F9000000 		.4byte	0xf9
 25758 0130 09       		.uleb128 0x9
 25759 0131 F9000000 		.4byte	0xf9
 25760 0135 40010000 		.4byte	0x140
 25761 0139 0A       		.uleb128 0xa
 25762 013a 18010000 		.4byte	0x118
 25763 013e 19       		.byte	0x19
 25764 013f 00       		.byte	0
 25765 0140 09       		.uleb128 0x9
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 563


 25766 0141 F9000000 		.4byte	0xf9
 25767 0145 50010000 		.4byte	0x150
 25768 0149 0A       		.uleb128 0xa
 25769 014a 18010000 		.4byte	0x118
 25770 014e 07       		.byte	0x7
 25771 014f 00       		.byte	0
 25772 0150 0B       		.uleb128 0xb
 25773 0151 A40A0000 		.4byte	.LASF55
 25774 0155 01       		.byte	0x1
 25775 0156 2C000000 		.4byte	0x2c
 25776 015a 06       		.byte	0x6
 25777 015b 42       		.byte	0x42
 25778 015c 0F020000 		.4byte	0x20f
 25779 0160 0C       		.uleb128 0xc
 25780 0161 98130000 		.4byte	.LASF26
 25781 0165 00       		.byte	0
 25782 0166 0C       		.uleb128 0xc
 25783 0167 2C100000 		.4byte	.LASF27
 25784 016b 01       		.byte	0x1
 25785 016c 0C       		.uleb128 0xc
 25786 016d 2B070000 		.4byte	.LASF28
 25787 0171 03       		.byte	0x3
 25788 0172 0C       		.uleb128 0xc
 25789 0173 13040000 		.4byte	.LASF29
 25790 0177 04       		.byte	0x4
 25791 0178 0C       		.uleb128 0xc
 25792 0179 1E0E0000 		.4byte	.LASF30
 25793 017d 05       		.byte	0x5
 25794 017e 0C       		.uleb128 0xc
 25795 017f 3E080000 		.4byte	.LASF31
 25796 0183 06       		.byte	0x6
 25797 0184 0C       		.uleb128 0xc
 25798 0185 6F070000 		.4byte	.LASF32
 25799 0189 09       		.byte	0x9
 25800 018a 0C       		.uleb128 0xc
 25801 018b 19000000 		.4byte	.LASF33
 25802 018f 0A       		.byte	0xa
 25803 0190 0C       		.uleb128 0xc
 25804 0191 C8100000 		.4byte	.LASF34
 25805 0195 0C       		.byte	0xc
 25806 0196 0C       		.uleb128 0xc
 25807 0197 460C0000 		.4byte	.LASF35
 25808 019b 0D       		.byte	0xd
 25809 019c 0C       		.uleb128 0xc
 25810 019d 43000000 		.4byte	.LASF36
 25811 01a1 80       		.byte	0x80
 25812 01a2 0C       		.uleb128 0xc
 25813 01a3 6E040000 		.4byte	.LASF37
 25814 01a7 81       		.byte	0x81
 25815 01a8 0C       		.uleb128 0xc
 25816 01a9 A2050000 		.4byte	.LASF38
 25817 01ad 82       		.byte	0x82
 25818 01ae 0C       		.uleb128 0xc
 25819 01af F60F0000 		.4byte	.LASF39
 25820 01b3 83       		.byte	0x83
 25821 01b4 0C       		.uleb128 0xc
 25822 01b5 690F0000 		.4byte	.LASF40
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 564


 25823 01b9 84       		.byte	0x84
 25824 01ba 0C       		.uleb128 0xc
 25825 01bb F0020000 		.4byte	.LASF41
 25826 01bf 85       		.byte	0x85
 25827 01c0 0C       		.uleb128 0xc
 25828 01c1 80080000 		.4byte	.LASF42
 25829 01c5 86       		.byte	0x86
 25830 01c6 0C       		.uleb128 0xc
 25831 01c7 1E080000 		.4byte	.LASF43
 25832 01cb 88       		.byte	0x88
 25833 01cc 0C       		.uleb128 0xc
 25834 01cd A9100000 		.4byte	.LASF44
 25835 01d1 89       		.byte	0x89
 25836 01d2 0C       		.uleb128 0xc
 25837 01d3 4E0D0000 		.4byte	.LASF45
 25838 01d7 8B       		.byte	0x8b
 25839 01d8 0C       		.uleb128 0xc
 25840 01d9 A70B0000 		.4byte	.LASF46
 25841 01dd 8C       		.byte	0x8c
 25842 01de 0C       		.uleb128 0xc
 25843 01df 2B090000 		.4byte	.LASF47
 25844 01e3 8E       		.byte	0x8e
 25845 01e4 0C       		.uleb128 0xc
 25846 01e5 860D0000 		.4byte	.LASF48
 25847 01e9 90       		.byte	0x90
 25848 01ea 0C       		.uleb128 0xc
 25849 01eb FC110000 		.4byte	.LASF49
 25850 01ef A1       		.byte	0xa1
 25851 01f0 0C       		.uleb128 0xc
 25852 01f1 220F0000 		.4byte	.LASF50
 25853 01f5 A2       		.byte	0xa2
 25854 01f6 0C       		.uleb128 0xc
 25855 01f7 0A0B0000 		.4byte	.LASF51
 25856 01fb A3       		.byte	0xa3
 25857 01fc 0C       		.uleb128 0xc
 25858 01fd 3E0F0000 		.4byte	.LASF52
 25859 0201 A4       		.byte	0xa4
 25860 0202 0C       		.uleb128 0xc
 25861 0203 1B100000 		.4byte	.LASF53
 25862 0207 A5       		.byte	0xa5
 25863 0208 0C       		.uleb128 0xc
 25864 0209 E90E0000 		.4byte	.LASF54
 25865 020d A6       		.byte	0xa6
 25866 020e 00       		.byte	0
 25867 020f 0B       		.uleb128 0xb
 25868 0210 47130000 		.4byte	.LASF56
 25869 0214 01       		.byte	0x1
 25870 0215 2C000000 		.4byte	0x2c
 25871 0219 06       		.byte	0x6
 25872 021a 8B       		.byte	0x8b
 25873 021b 4A020000 		.4byte	0x24a
 25874 021f 0C       		.uleb128 0xc
 25875 0220 20060000 		.4byte	.LASF57
 25876 0224 00       		.byte	0
 25877 0225 0C       		.uleb128 0xc
 25878 0226 EA0A0000 		.4byte	.LASF58
 25879 022a 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 565


 25880 022b 0C       		.uleb128 0xc
 25881 022c 10020000 		.4byte	.LASF59
 25882 0230 02       		.byte	0x2
 25883 0231 0C       		.uleb128 0xc
 25884 0232 70010000 		.4byte	.LASF60
 25885 0236 03       		.byte	0x3
 25886 0237 0C       		.uleb128 0xc
 25887 0238 14010000 		.4byte	.LASF61
 25888 023c 04       		.byte	0x4
 25889 023d 0C       		.uleb128 0xc
 25890 023e 2B000000 		.4byte	.LASF62
 25891 0242 05       		.byte	0x5
 25892 0243 0C       		.uleb128 0xc
 25893 0244 030F0000 		.4byte	.LASF63
 25894 0248 06       		.byte	0x6
 25895 0249 00       		.byte	0
 25896 024a 0B       		.uleb128 0xb
 25897 024b 69090000 		.4byte	.LASF64
 25898 024f 01       		.byte	0x1
 25899 0250 2C000000 		.4byte	0x2c
 25900 0254 06       		.byte	0x6
 25901 0255 9E       		.byte	0x9e
 25902 0256 73020000 		.4byte	0x273
 25903 025a 0C       		.uleb128 0xc
 25904 025b C0120000 		.4byte	.LASF65
 25905 025f 00       		.byte	0
 25906 0260 0C       		.uleb128 0xc
 25907 0261 12080000 		.4byte	.LASF66
 25908 0265 01       		.byte	0x1
 25909 0266 0C       		.uleb128 0xc
 25910 0267 C60B0000 		.4byte	.LASF67
 25911 026b 02       		.byte	0x2
 25912 026c 0C       		.uleb128 0xc
 25913 026d 16070000 		.4byte	.LASF68
 25914 0271 03       		.byte	0x3
 25915 0272 00       		.byte	0
 25916 0273 0B       		.uleb128 0xb
 25917 0274 A3030000 		.4byte	.LASF69
 25918 0278 01       		.byte	0x1
 25919 0279 2C000000 		.4byte	0x2c
 25920 027d 06       		.byte	0x6
 25921 027e A8       		.byte	0xa8
 25922 027f 90020000 		.4byte	0x290
 25923 0283 0C       		.uleb128 0xc
 25924 0284 F90E0000 		.4byte	.LASF70
 25925 0288 00       		.byte	0
 25926 0289 0C       		.uleb128 0xc
 25927 028a 95090000 		.4byte	.LASF71
 25928 028e 01       		.byte	0x1
 25929 028f 00       		.byte	0
 25930 0290 0B       		.uleb128 0xb
 25931 0291 9F0C0000 		.4byte	.LASF72
 25932 0295 01       		.byte	0x1
 25933 0296 2C000000 		.4byte	0x2c
 25934 029a 06       		.byte	0x6
 25935 029b AD       		.byte	0xad
 25936 029c AD020000 		.4byte	0x2ad
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 566


 25937 02a0 0C       		.uleb128 0xc
 25938 02a1 05060000 		.4byte	.LASF73
 25939 02a5 00       		.byte	0
 25940 02a6 0C       		.uleb128 0xc
 25941 02a7 CF070000 		.4byte	.LASF74
 25942 02ab 01       		.byte	0x1
 25943 02ac 00       		.byte	0
 25944 02ad 0B       		.uleb128 0xb
 25945 02ae E9100000 		.4byte	.LASF75
 25946 02b2 01       		.byte	0x1
 25947 02b3 2C000000 		.4byte	0x2c
 25948 02b7 06       		.byte	0x6
 25949 02b8 B5       		.byte	0xb5
 25950 02b9 FA020000 		.4byte	0x2fa
 25951 02bd 0C       		.uleb128 0xc
 25952 02be D6070000 		.4byte	.LASF76
 25953 02c2 00       		.byte	0
 25954 02c3 0C       		.uleb128 0xc
 25955 02c4 55130000 		.4byte	.LASF77
 25956 02c8 01       		.byte	0x1
 25957 02c9 0C       		.uleb128 0xc
 25958 02ca 79090000 		.4byte	.LASF78
 25959 02ce 02       		.byte	0x2
 25960 02cf 0C       		.uleb128 0xc
 25961 02d0 830B0000 		.4byte	.LASF79
 25962 02d4 03       		.byte	0x3
 25963 02d5 0C       		.uleb128 0xc
 25964 02d6 AF0A0000 		.4byte	.LASF80
 25965 02da 04       		.byte	0x4
 25966 02db 0C       		.uleb128 0xc
 25967 02dc 070D0000 		.4byte	.LASF81
 25968 02e0 05       		.byte	0x5
 25969 02e1 0C       		.uleb128 0xc
 25970 02e2 E20B0000 		.4byte	.LASF82
 25971 02e6 06       		.byte	0x6
 25972 02e7 0C       		.uleb128 0xc
 25973 02e8 450B0000 		.4byte	.LASF83
 25974 02ec 07       		.byte	0x7
 25975 02ed 0C       		.uleb128 0xc
 25976 02ee E3050000 		.4byte	.LASF84
 25977 02f2 08       		.byte	0x8
 25978 02f3 0C       		.uleb128 0xc
 25979 02f4 0A070000 		.4byte	.LASF85
 25980 02f8 09       		.byte	0x9
 25981 02f9 00       		.byte	0
 25982 02fa 03       		.uleb128 0x3
 25983 02fb A1120000 		.4byte	.LASF86
 25984 02ff 07       		.byte	0x7
 25985 0300 7E       		.byte	0x7e
 25986 0301 05030000 		.4byte	0x305
 25987 0305 0D       		.uleb128 0xd
 25988 0306 A1120000 		.4byte	.LASF86
 25989 030a 07       		.uleb128 0x7
 25990 030b 04       		.byte	0x4
 25991 030c FA020000 		.4byte	0x2fa
 25992 0310 0E       		.uleb128 0xe
 25993 0311 24090000 		.4byte	.LASF89
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 567


 25994 0315 10       		.byte	0x10
 25995 0316 08       		.byte	0x8
 25996 0317 D3       		.byte	0xd3
 25997 0318 4D030000 		.4byte	0x34d
 25998 031c 0F       		.uleb128 0xf
 25999 031d 706F7300 		.ascii	"pos\000"
 26000 0321 08       		.byte	0x8
 26001 0322 D4       		.byte	0xd4
 26002 0323 D3000000 		.4byte	0xd3
 26003 0327 00       		.byte	0
 26004 0328 10       		.uleb128 0x10
 26005 0329 02080000 		.4byte	.LASF87
 26006 032d 08       		.byte	0x8
 26007 032e D5       		.byte	0xd5
 26008 032f D3000000 		.4byte	0xd3
 26009 0333 04       		.byte	0x4
 26010 0334 0F       		.uleb128 0xf
 26011 0335 70776D00 		.ascii	"pwm\000"
 26012 0339 08       		.byte	0x8
 26013 033a D6       		.byte	0xd6
 26014 033b D3000000 		.4byte	0xd3
 26015 033f 08       		.byte	0x8
 26016 0340 10       		.uleb128 0x10
 26017 0341 480D0000 		.4byte	.LASF88
 26018 0345 08       		.byte	0x8
 26019 0346 D7       		.byte	0xd7
 26020 0347 97000000 		.4byte	0x97
 26021 034b 0C       		.byte	0xc
 26022 034c 00       		.byte	0
 26023 034d 0E       		.uleb128 0xe
 26024 034e E10E0000 		.4byte	.LASF90
 26025 0352 34       		.byte	0x34
 26026 0353 08       		.byte	0x8
 26027 0354 DE       		.byte	0xde
 26028 0355 AE030000 		.4byte	0x3ae
 26029 0359 0F       		.uleb128 0xf
 26030 035a 706F7300 		.ascii	"pos\000"
 26031 035e 08       		.byte	0x8
 26032 035f DF       		.byte	0xdf
 26033 0360 AE030000 		.4byte	0x3ae
 26034 0364 00       		.byte	0
 26035 0365 10       		.uleb128 0x10
 26036 0366 02080000 		.4byte	.LASF87
 26037 036a 08       		.byte	0x8
 26038 036b E0       		.byte	0xe0
 26039 036c D3000000 		.4byte	0xd3
 26040 0370 0C       		.byte	0xc
 26041 0371 10       		.uleb128 0x10
 26042 0372 36110000 		.4byte	.LASF91
 26043 0376 08       		.byte	0x8
 26044 0377 E1       		.byte	0xe1
 26045 0378 D3000000 		.4byte	0xd3
 26046 037c 10       		.byte	0x10
 26047 037d 10       		.uleb128 0x10
 26048 037e 7E070000 		.4byte	.LASF92
 26049 0382 08       		.byte	0x8
 26050 0383 E2       		.byte	0xe2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 568


 26051 0384 D3000000 		.4byte	0xd3
 26052 0388 14       		.byte	0x14
 26053 0389 0F       		.uleb128 0xf
 26054 038a 726F7400 		.ascii	"rot\000"
 26055 038e 08       		.byte	0x8
 26056 038f E3       		.byte	0xe3
 26057 0390 BE030000 		.4byte	0x3be
 26058 0394 18       		.byte	0x18
 26059 0395 0F       		.uleb128 0xf
 26060 0396 76656C00 		.ascii	"vel\000"
 26061 039a 08       		.byte	0x8
 26062 039b E4       		.byte	0xe4
 26063 039c AE030000 		.4byte	0x3ae
 26064 03a0 1C       		.byte	0x1c
 26065 03a1 0F       		.uleb128 0xf
 26066 03a2 61636300 		.ascii	"acc\000"
 26067 03a6 08       		.byte	0x8
 26068 03a7 E5       		.byte	0xe5
 26069 03a8 AE030000 		.4byte	0x3ae
 26070 03ac 28       		.byte	0x28
 26071 03ad 00       		.byte	0
 26072 03ae 09       		.uleb128 0x9
 26073 03af D3000000 		.4byte	0xd3
 26074 03b3 BE030000 		.4byte	0x3be
 26075 03b7 0A       		.uleb128 0xa
 26076 03b8 18010000 		.4byte	0x118
 26077 03bc 02       		.byte	0x2
 26078 03bd 00       		.byte	0
 26079 03be 09       		.uleb128 0x9
 26080 03bf BB000000 		.4byte	0xbb
 26081 03c3 CE030000 		.4byte	0x3ce
 26082 03c7 0A       		.uleb128 0xa
 26083 03c8 18010000 		.4byte	0x118
 26084 03cc 02       		.byte	0x2
 26085 03cd 00       		.byte	0
 26086 03ce 0E       		.uleb128 0xe
 26087 03cf F90B0000 		.4byte	.LASF93
 26088 03d3 20       		.byte	0x20
 26089 03d4 08       		.byte	0x8
 26090 03d5 E8       		.byte	0xe8
 26091 03d6 F3030000 		.4byte	0x3f3
 26092 03da 0F       		.uleb128 0xf
 26093 03db 656D6700 		.ascii	"emg\000"
 26094 03df 08       		.byte	0x8
 26095 03e0 E9       		.byte	0xe9
 26096 03e1 F3030000 		.4byte	0x3f3
 26097 03e5 00       		.byte	0
 26098 03e6 10       		.uleb128 0x10
 26099 03e7 7B0B0000 		.4byte	.LASF94
 26100 03eb 08       		.byte	0x8
 26101 03ec EA       		.byte	0xea
 26102 03ed 03040000 		.4byte	0x403
 26103 03f1 08       		.byte	0x8
 26104 03f2 00       		.byte	0
 26105 03f3 09       		.uleb128 0x9
 26106 03f4 D3000000 		.4byte	0xd3
 26107 03f8 03040000 		.4byte	0x403
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 569


 26108 03fc 0A       		.uleb128 0xa
 26109 03fd 18010000 		.4byte	0x118
 26110 0401 01       		.byte	0x1
 26111 0402 00       		.byte	0
 26112 0403 09       		.uleb128 0x9
 26113 0404 D3000000 		.4byte	0xd3
 26114 0408 13040000 		.4byte	0x413
 26115 040c 0A       		.uleb128 0xa
 26116 040d 18010000 		.4byte	0x118
 26117 0411 05       		.byte	0x5
 26118 0412 00       		.byte	0
 26119 0413 0E       		.uleb128 0xe
 26120 0414 F8040000 		.4byte	.LASF95
 26121 0418 04       		.byte	0x4
 26122 0419 08       		.byte	0x8
 26123 041a ED       		.byte	0xed
 26124 041b 2C040000 		.4byte	0x42c
 26125 041f 10       		.uleb128 0x10
 26126 0420 65040000 		.4byte	.LASF96
 26127 0424 08       		.byte	0x8
 26128 0425 EE       		.byte	0xee
 26129 0426 EB000000 		.4byte	0xeb
 26130 042a 00       		.byte	0
 26131 042b 00       		.byte	0
 26132 042c 0E       		.uleb128 0xe
 26133 042d 62000000 		.4byte	.LASF97
 26134 0431 86       		.byte	0x86
 26135 0432 08       		.byte	0x8
 26136 0433 F5       		.byte	0xf5
 26137 0434 69040000 		.4byte	0x469
 26138 0438 10       		.uleb128 0x10
 26139 0439 B1050000 		.4byte	.LASF98
 26140 043d 08       		.byte	0x8
 26141 043e F6       		.byte	0xf6
 26142 043f 69040000 		.4byte	0x469
 26143 0443 00       		.byte	0
 26144 0444 10       		.uleb128 0x10
 26145 0445 1D0D0000 		.4byte	.LASF99
 26146 0449 08       		.byte	0x8
 26147 044a F7       		.byte	0xf7
 26148 044b C7000000 		.4byte	0xc7
 26149 044f 80       		.byte	0x80
 26150 0450 0F       		.uleb128 0xf
 26151 0451 696E6400 		.ascii	"ind\000"
 26152 0455 08       		.byte	0x8
 26153 0456 F8       		.byte	0xf8
 26154 0457 C7000000 		.4byte	0xc7
 26155 045b 82       		.byte	0x82
 26156 045c 10       		.uleb128 0x10
 26157 045d E8010000 		.4byte	.LASF100
 26158 0461 08       		.byte	0x8
 26159 0462 F9       		.byte	0xf9
 26160 0463 97000000 		.4byte	0x97
 26161 0467 84       		.byte	0x84
 26162 0468 00       		.byte	0
 26163 0469 09       		.uleb128 0x9
 26164 046a 97000000 		.4byte	0x97
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 570


 26165 046e 79040000 		.4byte	0x479
 26166 0472 0A       		.uleb128 0xa
 26167 0473 18010000 		.4byte	0x118
 26168 0477 7F       		.byte	0x7f
 26169 0478 00       		.byte	0
 26170 0479 11       		.uleb128 0x11
 26171 047a C6020000 		.4byte	.LASF101
 26172 047e 50       		.byte	0x50
 26173 047f 08       		.byte	0x8
 26174 0480 0201     		.2byte	0x102
 26175 0482 E2040000 		.4byte	0x4e2
 26176 0486 12       		.uleb128 0x12
 26177 0487 01030000 		.4byte	.LASF102
 26178 048b 08       		.byte	0x8
 26179 048c 0301     		.2byte	0x103
 26180 048e E2040000 		.4byte	0x4e2
 26181 0492 00       		.byte	0
 26182 0493 12       		.uleb128 0x12
 26183 0494 B5010000 		.4byte	.LASF103
 26184 0498 08       		.byte	0x8
 26185 0499 0401     		.2byte	0x104
 26186 049b F2040000 		.4byte	0x4f2
 26187 049f 08       		.byte	0x8
 26188 04a0 12       		.uleb128 0x12
 26189 04a1 B90B0000 		.4byte	.LASF104
 26190 04a5 08       		.byte	0x8
 26191 04a6 0501     		.2byte	0x105
 26192 04a8 02050000 		.4byte	0x502
 26193 04ac 30       		.byte	0x30
 26194 04ad 12       		.uleb128 0x12
 26195 04ae 34010000 		.4byte	.LASF105
 26196 04b2 08       		.byte	0x8
 26197 04b3 0601     		.2byte	0x106
 26198 04b5 AF000000 		.4byte	0xaf
 26199 04b9 40       		.byte	0x40
 26200 04ba 12       		.uleb128 0x12
 26201 04bb F4120000 		.4byte	.LASF106
 26202 04bf 08       		.byte	0x8
 26203 04c0 0701     		.2byte	0x107
 26204 04c2 AF000000 		.4byte	0xaf
 26205 04c6 44       		.byte	0x44
 26206 04c7 12       		.uleb128 0x12
 26207 04c8 61070000 		.4byte	.LASF107
 26208 04cc 08       		.byte	0x8
 26209 04cd 0801     		.2byte	0x108
 26210 04cf AF000000 		.4byte	0xaf
 26211 04d3 48       		.byte	0x48
 26212 04d4 12       		.uleb128 0x12
 26213 04d5 9E070000 		.4byte	.LASF108
 26214 04d9 08       		.byte	0x8
 26215 04da 0901     		.2byte	0x109
 26216 04dc AF000000 		.4byte	0xaf
 26217 04e0 4C       		.byte	0x4c
 26218 04e1 00       		.byte	0
 26219 04e2 09       		.uleb128 0x9
 26220 04e3 AF000000 		.4byte	0xaf
 26221 04e7 F2040000 		.4byte	0x4f2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 571


 26222 04eb 0A       		.uleb128 0xa
 26223 04ec 18010000 		.4byte	0x118
 26224 04f0 01       		.byte	0x1
 26225 04f1 00       		.byte	0
 26226 04f2 09       		.uleb128 0x9
 26227 04f3 AF000000 		.4byte	0xaf
 26228 04f7 02050000 		.4byte	0x502
 26229 04fb 0A       		.uleb128 0xa
 26230 04fc 18010000 		.4byte	0x118
 26231 0500 09       		.byte	0x9
 26232 0501 00       		.byte	0
 26233 0502 09       		.uleb128 0x9
 26234 0503 AF000000 		.4byte	0xaf
 26235 0507 12050000 		.4byte	0x512
 26236 050b 0A       		.uleb128 0xa
 26237 050c 18010000 		.4byte	0x118
 26238 0510 03       		.byte	0x3
 26239 0511 00       		.byte	0
 26240 0512 11       		.uleb128 0x11
 26241 0513 06020000 		.4byte	.LASF109
 26242 0517 10       		.byte	0x10
 26243 0518 08       		.byte	0x8
 26244 0519 1001     		.2byte	0x110
 26245 051b A1050000 		.4byte	0x5a1
 26246 051f 13       		.uleb128 0x13
 26247 0520 696400   		.ascii	"id\000"
 26248 0523 08       		.byte	0x8
 26249 0524 1101     		.2byte	0x111
 26250 0526 97000000 		.4byte	0x97
 26251 052a 00       		.byte	0
 26252 052b 12       		.uleb128 0x12
 26253 052c 05100000 		.4byte	.LASF110
 26254 0530 08       		.byte	0x8
 26255 0531 1201     		.2byte	0x112
 26256 0533 A1050000 		.4byte	0x5a1
 26257 0537 01       		.byte	0x1
 26258 0538 12       		.uleb128 0x12
 26259 0539 75100000 		.4byte	.LASF111
 26260 053d 08       		.byte	0x8
 26261 053e 1301     		.2byte	0x113
 26262 0540 A1050000 		.4byte	0x5a1
 26263 0544 04       		.byte	0x4
 26264 0545 12       		.uleb128 0x12
 26265 0546 08040000 		.4byte	.LASF112
 26266 054a 08       		.byte	0x8
 26267 054b 1401     		.2byte	0x114
 26268 054d 97000000 		.4byte	0x97
 26269 0551 07       		.byte	0x7
 26270 0552 12       		.uleb128 0x12
 26271 0553 82020000 		.4byte	.LASF113
 26272 0557 08       		.byte	0x8
 26273 0558 1501     		.2byte	0x115
 26274 055a 97000000 		.4byte	0x97
 26275 055e 08       		.byte	0x8
 26276 055f 12       		.uleb128 0x12
 26277 0560 2C020000 		.4byte	.LASF114
 26278 0564 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 572


 26279 0565 1601     		.2byte	0x116
 26280 0567 97000000 		.4byte	0x97
 26281 056b 09       		.byte	0x9
 26282 056c 12       		.uleb128 0x12
 26283 056d C8110000 		.4byte	.LASF115
 26284 0571 08       		.byte	0x8
 26285 0572 1701     		.2byte	0x117
 26286 0574 97000000 		.4byte	0x97
 26287 0578 0A       		.byte	0xa
 26288 0579 12       		.uleb128 0x12
 26289 057a 8C110000 		.4byte	.LASF116
 26290 057e 08       		.byte	0x8
 26291 057f 1801     		.2byte	0x118
 26292 0581 97000000 		.4byte	0x97
 26293 0585 0B       		.byte	0xb
 26294 0586 12       		.uleb128 0x12
 26295 0587 8B0E0000 		.4byte	.LASF117
 26296 058b 08       		.byte	0x8
 26297 058c 1901     		.2byte	0x119
 26298 058e 97000000 		.4byte	0x97
 26299 0592 0C       		.byte	0xc
 26300 0593 12       		.uleb128 0x12
 26301 0594 A3020000 		.4byte	.LASF118
 26302 0598 08       		.byte	0x8
 26303 0599 1A01     		.2byte	0x11a
 26304 059b A1050000 		.4byte	0x5a1
 26305 059f 0D       		.byte	0xd
 26306 05a0 00       		.byte	0
 26307 05a1 09       		.uleb128 0x9
 26308 05a2 97000000 		.4byte	0x97
 26309 05a6 B1050000 		.4byte	0x5b1
 26310 05aa 0A       		.uleb128 0xa
 26311 05ab 18010000 		.4byte	0x118
 26312 05af 02       		.byte	0x2
 26313 05b0 00       		.byte	0
 26314 05b1 11       		.uleb128 0x11
 26315 05b2 3B0A0000 		.4byte	.LASF119
 26316 05b6 70       		.byte	0x70
 26317 05b7 08       		.byte	0x8
 26318 05b8 2101     		.2byte	0x121
 26319 05ba 2B070000 		.4byte	0x72b
 26320 05be 13       		.uleb128 0x13
 26321 05bf 6B5F7000 		.ascii	"k_p\000"
 26322 05c3 08       		.byte	0x8
 26323 05c4 2201     		.2byte	0x122
 26324 05c6 D3000000 		.4byte	0xd3
 26325 05ca 00       		.byte	0
 26326 05cb 13       		.uleb128 0x13
 26327 05cc 6B5F6900 		.ascii	"k_i\000"
 26328 05d0 08       		.byte	0x8
 26329 05d1 2301     		.2byte	0x123
 26330 05d3 D3000000 		.4byte	0xd3
 26331 05d7 04       		.byte	0x4
 26332 05d8 13       		.uleb128 0x13
 26333 05d9 6B5F6400 		.ascii	"k_d\000"
 26334 05dd 08       		.byte	0x8
 26335 05de 2401     		.2byte	0x124
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 573


 26336 05e0 D3000000 		.4byte	0xd3
 26337 05e4 08       		.byte	0x8
 26338 05e5 12       		.uleb128 0x12
 26339 05e6 970D0000 		.4byte	.LASF120
 26340 05ea 08       		.byte	0x8
 26341 05eb 2501     		.2byte	0x125
 26342 05ed D3000000 		.4byte	0xd3
 26343 05f1 0C       		.byte	0xc
 26344 05f2 12       		.uleb128 0x12
 26345 05f3 18050000 		.4byte	.LASF121
 26346 05f7 08       		.byte	0x8
 26347 05f8 2601     		.2byte	0x126
 26348 05fa D3000000 		.4byte	0xd3
 26349 05fe 10       		.byte	0x10
 26350 05ff 12       		.uleb128 0x12
 26351 0600 F2040000 		.4byte	.LASF122
 26352 0604 08       		.byte	0x8
 26353 0605 2701     		.2byte	0x127
 26354 0607 D3000000 		.4byte	0xd3
 26355 060b 14       		.byte	0x14
 26356 060c 12       		.uleb128 0x12
 26357 060d 2F110000 		.4byte	.LASF123
 26358 0611 08       		.byte	0x8
 26359 0612 2801     		.2byte	0x128
 26360 0614 D3000000 		.4byte	0xd3
 26361 0618 18       		.byte	0x18
 26362 0619 12       		.uleb128 0x12
 26363 061a 9B050000 		.4byte	.LASF124
 26364 061e 08       		.byte	0x8
 26365 061f 2901     		.2byte	0x129
 26366 0621 D3000000 		.4byte	0xd3
 26367 0625 1C       		.byte	0x1c
 26368 0626 12       		.uleb128 0x12
 26369 0627 D00F0000 		.4byte	.LASF125
 26370 062b 08       		.byte	0x8
 26371 062c 2A01     		.2byte	0x12a
 26372 062e D3000000 		.4byte	0xd3
 26373 0632 20       		.byte	0x20
 26374 0633 12       		.uleb128 0x12
 26375 0634 B8050000 		.4byte	.LASF126
 26376 0638 08       		.byte	0x8
 26377 0639 2B01     		.2byte	0x12b
 26378 063b D3000000 		.4byte	0xd3
 26379 063f 24       		.byte	0x24
 26380 0640 12       		.uleb128 0x12
 26381 0641 68060000 		.4byte	.LASF127
 26382 0645 08       		.byte	0x8
 26383 0646 2C01     		.2byte	0x12c
 26384 0648 D3000000 		.4byte	0xd3
 26385 064c 28       		.byte	0x28
 26386 064d 12       		.uleb128 0x12
 26387 064e A1130000 		.4byte	.LASF128
 26388 0652 08       		.byte	0x8
 26389 0653 2D01     		.2byte	0x12d
 26390 0655 D3000000 		.4byte	0xd3
 26391 0659 2C       		.byte	0x2c
 26392 065a 12       		.uleb128 0x12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 574


 26393 065b BA070000 		.4byte	.LASF129
 26394 065f 08       		.byte	0x8
 26395 0660 2E01     		.2byte	0x12e
 26396 0662 97000000 		.4byte	0x97
 26397 0666 30       		.byte	0x30
 26398 0667 12       		.uleb128 0x12
 26399 0668 18110000 		.4byte	.LASF130
 26400 066c 08       		.byte	0x8
 26401 066d 2F01     		.2byte	0x12f
 26402 066f 97000000 		.4byte	0x97
 26403 0673 31       		.byte	0x31
 26404 0674 12       		.uleb128 0x12
 26405 0675 B70D0000 		.4byte	.LASF131
 26406 0679 08       		.byte	0x8
 26407 067a 3001     		.2byte	0x130
 26408 067c 97000000 		.4byte	0x97
 26409 0680 32       		.byte	0x32
 26410 0681 12       		.uleb128 0x12
 26411 0682 A9120000 		.4byte	.LASF132
 26412 0686 08       		.byte	0x8
 26413 0687 3101     		.2byte	0x131
 26414 0689 97000000 		.4byte	0x97
 26415 068d 33       		.byte	0x33
 26416 068e 12       		.uleb128 0x12
 26417 068f E8000000 		.4byte	.LASF133
 26418 0693 08       		.byte	0x8
 26419 0694 3201     		.2byte	0x132
 26420 0696 D3000000 		.4byte	0xd3
 26421 069a 34       		.byte	0x34
 26422 069b 12       		.uleb128 0x12
 26423 069c 37050000 		.4byte	.LASF134
 26424 06a0 08       		.byte	0x8
 26425 06a1 3301     		.2byte	0x133
 26426 06a3 D3000000 		.4byte	0xd3
 26427 06a7 38       		.byte	0x38
 26428 06a8 12       		.uleb128 0x12
 26429 06a9 D8090000 		.4byte	.LASF135
 26430 06ad 08       		.byte	0x8
 26431 06ae 3401     		.2byte	0x134
 26432 06b0 D3000000 		.4byte	0xd3
 26433 06b4 3C       		.byte	0x3c
 26434 06b5 12       		.uleb128 0x12
 26435 06b6 84040000 		.4byte	.LASF136
 26436 06ba 08       		.byte	0x8
 26437 06bb 3501     		.2byte	0x135
 26438 06bd D3000000 		.4byte	0xd3
 26439 06c1 40       		.byte	0x40
 26440 06c2 12       		.uleb128 0x12
 26441 06c3 28010000 		.4byte	.LASF137
 26442 06c7 08       		.byte	0x8
 26443 06c8 3601     		.2byte	0x136
 26444 06ca 2B070000 		.4byte	0x72b
 26445 06ce 44       		.byte	0x44
 26446 06cf 12       		.uleb128 0x12
 26447 06d0 39130000 		.4byte	.LASF138
 26448 06d4 08       		.byte	0x8
 26449 06d5 3701     		.2byte	0x137
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 575


 26450 06d7 C7000000 		.4byte	0xc7
 26451 06db 5C       		.byte	0x5c
 26452 06dc 12       		.uleb128 0x12
 26453 06dd 07080000 		.4byte	.LASF139
 26454 06e1 08       		.byte	0x8
 26455 06e2 3801     		.2byte	0x138
 26456 06e4 97000000 		.4byte	0x97
 26457 06e8 5E       		.byte	0x5e
 26458 06e9 12       		.uleb128 0x12
 26459 06ea D70A0000 		.4byte	.LASF140
 26460 06ee 08       		.byte	0x8
 26461 06ef 3901     		.2byte	0x139
 26462 06f1 97000000 		.4byte	0x97
 26463 06f5 5F       		.byte	0x5f
 26464 06f6 12       		.uleb128 0x12
 26465 06f7 2C040000 		.4byte	.LASF141
 26466 06fb 08       		.byte	0x8
 26467 06fc 3A01     		.2byte	0x13a
 26468 06fe 97000000 		.4byte	0x97
 26469 0702 60       		.byte	0x60
 26470 0703 12       		.uleb128 0x12
 26471 0704 E1040000 		.4byte	.LASF142
 26472 0708 08       		.byte	0x8
 26473 0709 3B01     		.2byte	0x13b
 26474 070b 97000000 		.4byte	0x97
 26475 070f 61       		.byte	0x61
 26476 0710 12       		.uleb128 0x12
 26477 0711 E9030000 		.4byte	.LASF143
 26478 0715 08       		.byte	0x8
 26479 0716 3C01     		.2byte	0x13c
 26480 0718 97000000 		.4byte	0x97
 26481 071c 62       		.byte	0x62
 26482 071d 12       		.uleb128 0x12
 26483 071e A3020000 		.4byte	.LASF118
 26484 0722 08       		.byte	0x8
 26485 0723 3D01     		.2byte	0x13d
 26486 0725 3B070000 		.4byte	0x73b
 26487 0729 63       		.byte	0x63
 26488 072a 00       		.byte	0
 26489 072b 09       		.uleb128 0x9
 26490 072c EB000000 		.4byte	0xeb
 26491 0730 3B070000 		.4byte	0x73b
 26492 0734 0A       		.uleb128 0xa
 26493 0735 18010000 		.4byte	0x118
 26494 0739 05       		.byte	0x5
 26495 073a 00       		.byte	0
 26496 073b 09       		.uleb128 0x9
 26497 073c 97000000 		.4byte	0x97
 26498 0740 4B070000 		.4byte	0x74b
 26499 0744 0A       		.uleb128 0xa
 26500 0745 18010000 		.4byte	0x118
 26501 0749 0C       		.byte	0xc
 26502 074a 00       		.byte	0
 26503 074b 11       		.uleb128 0x11
 26504 074c 36120000 		.4byte	.LASF144
 26505 0750 30       		.byte	0x30
 26506 0751 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 576


 26507 0752 4401     		.2byte	0x144
 26508 0754 CE070000 		.4byte	0x7ce
 26509 0758 12       		.uleb128 0x12
 26510 0759 BA090000 		.4byte	.LASF145
 26511 075d 08       		.byte	0x8
 26512 075e 4501     		.2byte	0x145
 26513 0760 CE070000 		.4byte	0x7ce
 26514 0764 00       		.byte	0
 26515 0765 13       		.uleb128 0x13
 26516 0766 72657300 		.ascii	"res\000"
 26517 076a 08       		.byte	0x8
 26518 076b 4601     		.2byte	0x146
 26519 076d A1050000 		.4byte	0x5a1
 26520 0771 05       		.byte	0x5
 26521 0772 12       		.uleb128 0x12
 26522 0773 C9070000 		.4byte	.LASF146
 26523 0777 08       		.byte	0x8
 26524 0778 4701     		.2byte	0x147
 26525 077a AE030000 		.4byte	0x3ae
 26526 077e 08       		.byte	0x8
 26527 077f 12       		.uleb128 0x12
 26528 0780 11050000 		.4byte	.LASF147
 26529 0784 08       		.byte	0x8
 26530 0785 4801     		.2byte	0x148
 26531 0787 DE070000 		.4byte	0x7de
 26532 078b 14       		.byte	0x14
 26533 078c 12       		.uleb128 0x12
 26534 078d 6E0C0000 		.4byte	.LASF148
 26535 0791 08       		.byte	0x8
 26536 0792 4901     		.2byte	0x149
 26537 0794 97000000 		.4byte	0x97
 26538 0798 20       		.byte	0x20
 26539 0799 12       		.uleb128 0x12
 26540 079a EE010000 		.4byte	.LASF149
 26541 079e 08       		.byte	0x8
 26542 079f 4A01     		.2byte	0x14a
 26543 07a1 A1050000 		.4byte	0x5a1
 26544 07a5 21       		.byte	0x21
 26545 07a6 12       		.uleb128 0x12
 26546 07a7 210C0000 		.4byte	.LASF150
 26547 07ab 08       		.byte	0x8
 26548 07ac 4B01     		.2byte	0x14b
 26549 07ae BB000000 		.4byte	0xbb
 26550 07b2 24       		.byte	0x24
 26551 07b3 12       		.uleb128 0x12
 26552 07b4 B20E0000 		.4byte	.LASF151
 26553 07b8 08       		.byte	0x8
 26554 07b9 4C01     		.2byte	0x14c
 26555 07bb BE030000 		.4byte	0x3be
 26556 07bf 25       		.byte	0x25
 26557 07c0 12       		.uleb128 0x12
 26558 07c1 A3020000 		.4byte	.LASF118
 26559 07c5 08       		.byte	0x8
 26560 07c6 4D01     		.2byte	0x14d
 26561 07c8 EE070000 		.4byte	0x7ee
 26562 07cc 28       		.byte	0x28
 26563 07cd 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 577


 26564 07ce 09       		.uleb128 0x9
 26565 07cf 97000000 		.4byte	0x97
 26566 07d3 DE070000 		.4byte	0x7de
 26567 07d7 0A       		.uleb128 0xa
 26568 07d8 18010000 		.4byte	0x118
 26569 07dc 04       		.byte	0x4
 26570 07dd 00       		.byte	0
 26571 07de 09       		.uleb128 0x9
 26572 07df DF000000 		.4byte	0xdf
 26573 07e3 EE070000 		.4byte	0x7ee
 26574 07e7 0A       		.uleb128 0xa
 26575 07e8 18010000 		.4byte	0x118
 26576 07ec 02       		.byte	0x2
 26577 07ed 00       		.byte	0
 26578 07ee 09       		.uleb128 0x9
 26579 07ef 97000000 		.4byte	0x97
 26580 07f3 FE070000 		.4byte	0x7fe
 26581 07f7 0A       		.uleb128 0xa
 26582 07f8 18010000 		.4byte	0x118
 26583 07fc 07       		.byte	0x7
 26584 07fd 00       		.byte	0
 26585 07fe 11       		.uleb128 0x11
 26586 07ff AE010000 		.4byte	.LASF152
 26587 0803 10       		.byte	0x10
 26588 0804 08       		.byte	0x8
 26589 0805 5401     		.2byte	0x154
 26590 0807 5A080000 		.4byte	0x85a
 26591 080b 12       		.uleb128 0x12
 26592 080c 990B0000 		.4byte	.LASF153
 26593 0810 08       		.byte	0x8
 26594 0811 5501     		.2byte	0x155
 26595 0813 5A080000 		.4byte	0x85a
 26596 0817 00       		.byte	0
 26597 0818 12       		.uleb128 0x12
 26598 0819 FE120000 		.4byte	.LASF154
 26599 081d 08       		.byte	0x8
 26600 081e 5601     		.2byte	0x156
 26601 0820 E2040000 		.4byte	0x4e2
 26602 0824 04       		.byte	0x4
 26603 0825 12       		.uleb128 0x12
 26604 0826 43050000 		.4byte	.LASF155
 26605 082a 08       		.byte	0x8
 26606 082b 5701     		.2byte	0x157
 26607 082d 97000000 		.4byte	0x97
 26608 0831 0C       		.byte	0xc
 26609 0832 12       		.uleb128 0x12
 26610 0833 CC0E0000 		.4byte	.LASF156
 26611 0837 08       		.byte	0x8
 26612 0838 5801     		.2byte	0x158
 26613 083a 97000000 		.4byte	0x97
 26614 083e 0D       		.byte	0xd
 26615 083f 12       		.uleb128 0x12
 26616 0840 0D110000 		.4byte	.LASF157
 26617 0844 08       		.byte	0x8
 26618 0845 5901     		.2byte	0x159
 26619 0847 97000000 		.4byte	0x97
 26620 084b 0E       		.byte	0xe
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 578


 26621 084c 12       		.uleb128 0x12
 26622 084d A3020000 		.4byte	.LASF118
 26623 0851 08       		.byte	0x8
 26624 0852 5A01     		.2byte	0x15a
 26625 0854 6A080000 		.4byte	0x86a
 26626 0858 0F       		.byte	0xf
 26627 0859 00       		.byte	0
 26628 085a 09       		.uleb128 0x9
 26629 085b A3000000 		.4byte	0xa3
 26630 085f 6A080000 		.4byte	0x86a
 26631 0863 0A       		.uleb128 0xa
 26632 0864 18010000 		.4byte	0x118
 26633 0868 01       		.byte	0x1
 26634 0869 00       		.byte	0
 26635 086a 09       		.uleb128 0x9
 26636 086b 97000000 		.4byte	0x97
 26637 086f 7A080000 		.4byte	0x87a
 26638 0873 0A       		.uleb128 0xa
 26639 0874 18010000 		.4byte	0x118
 26640 0878 00       		.byte	0
 26641 0879 00       		.byte	0
 26642 087a 11       		.uleb128 0x11
 26643 087b 1F0B0000 		.4byte	.LASF158
 26644 087f 20       		.byte	0x20
 26645 0880 08       		.byte	0x8
 26646 0881 6101     		.2byte	0x161
 26647 0883 BC080000 		.4byte	0x8bc
 26648 0887 12       		.uleb128 0x12
 26649 0888 47020000 		.4byte	.LASF159
 26650 088c 08       		.byte	0x8
 26651 088d 6201     		.2byte	0x162
 26652 088f 97000000 		.4byte	0x97
 26653 0893 00       		.byte	0
 26654 0894 12       		.uleb128 0x12
 26655 0895 900C0000 		.4byte	.LASF160
 26656 0899 08       		.byte	0x8
 26657 089a 6301     		.2byte	0x163
 26658 089c 97000000 		.4byte	0x97
 26659 08a0 01       		.byte	0x1
 26660 08a1 12       		.uleb128 0x12
 26661 08a2 1B0A0000 		.4byte	.LASF161
 26662 08a6 08       		.byte	0x8
 26663 08a7 6401     		.2byte	0x164
 26664 08a9 BC080000 		.4byte	0x8bc
 26665 08ad 02       		.byte	0x2
 26666 08ae 12       		.uleb128 0x12
 26667 08af A3020000 		.4byte	.LASF118
 26668 08b3 08       		.byte	0x8
 26669 08b4 6501     		.2byte	0x165
 26670 08b6 CE070000 		.4byte	0x7ce
 26671 08ba 1B       		.byte	0x1b
 26672 08bb 00       		.byte	0
 26673 08bc 09       		.uleb128 0x9
 26674 08bd 97000000 		.4byte	0x97
 26675 08c1 D2080000 		.4byte	0x8d2
 26676 08c5 0A       		.uleb128 0xa
 26677 08c6 18010000 		.4byte	0x118
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 579


 26678 08ca 04       		.byte	0x4
 26679 08cb 0A       		.uleb128 0xa
 26680 08cc 18010000 		.4byte	0x118
 26681 08d0 04       		.byte	0x4
 26682 08d1 00       		.byte	0
 26683 08d2 11       		.uleb128 0x11
 26684 08d3 BF0E0000 		.4byte	.LASF162
 26685 08d7 20       		.byte	0x20
 26686 08d8 08       		.byte	0x8
 26687 08d9 6C01     		.2byte	0x16c
 26688 08db 21090000 		.4byte	0x921
 26689 08df 12       		.uleb128 0x12
 26690 08e0 640C0000 		.4byte	.LASF163
 26691 08e4 08       		.byte	0x8
 26692 08e5 6D01     		.2byte	0x16d
 26693 08e7 21090000 		.4byte	0x921
 26694 08eb 00       		.byte	0
 26695 08ec 12       		.uleb128 0x12
 26696 08ed FA100000 		.4byte	.LASF164
 26697 08f1 08       		.byte	0x8
 26698 08f2 6E01     		.2byte	0x16e
 26699 08f4 97000000 		.4byte	0x97
 26700 08f8 06       		.byte	0x6
 26701 08f9 12       		.uleb128 0x12
 26702 08fa 4F110000 		.4byte	.LASF165
 26703 08fe 08       		.byte	0x8
 26704 08ff 6F01     		.2byte	0x16f
 26705 0901 97000000 		.4byte	0x97
 26706 0905 07       		.byte	0x7
 26707 0906 12       		.uleb128 0x12
 26708 0907 68050000 		.4byte	.LASF166
 26709 090b 08       		.byte	0x8
 26710 090c 7001     		.2byte	0x170
 26711 090e 31090000 		.4byte	0x931
 26712 0912 08       		.byte	0x8
 26713 0913 12       		.uleb128 0x12
 26714 0914 A3020000 		.4byte	.LASF118
 26715 0918 08       		.byte	0x8
 26716 0919 7101     		.2byte	0x171
 26717 091b 31090000 		.4byte	0x931
 26718 091f 14       		.byte	0x14
 26719 0920 00       		.byte	0
 26720 0921 09       		.uleb128 0x9
 26721 0922 97000000 		.4byte	0x97
 26722 0926 31090000 		.4byte	0x931
 26723 092a 0A       		.uleb128 0xa
 26724 092b 18010000 		.4byte	0x118
 26725 092f 05       		.byte	0x5
 26726 0930 00       		.byte	0
 26727 0931 09       		.uleb128 0x9
 26728 0932 97000000 		.4byte	0x97
 26729 0936 41090000 		.4byte	0x941
 26730 093a 0A       		.uleb128 0xa
 26731 093b 18010000 		.4byte	0x118
 26732 093f 0B       		.byte	0xb
 26733 0940 00       		.byte	0
 26734 0941 11       		.uleb128 0x11
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 580


 26735 0942 940E0000 		.4byte	.LASF167
 26736 0946 20       		.byte	0x20
 26737 0947 08       		.byte	0x8
 26738 0948 7801     		.2byte	0x178
 26739 094a 76090000 		.4byte	0x976
 26740 094e 12       		.uleb128 0x12
 26741 094f 70030000 		.4byte	.LASF168
 26742 0953 08       		.byte	0x8
 26743 0954 7901     		.2byte	0x179
 26744 0956 40010000 		.4byte	0x140
 26745 095a 00       		.byte	0
 26746 095b 12       		.uleb128 0x12
 26747 095c 91020000 		.4byte	.LASF169
 26748 0960 08       		.byte	0x8
 26749 0961 7A01     		.2byte	0x17a
 26750 0963 FE070000 		.4byte	0x7fe
 26751 0967 08       		.byte	0x8
 26752 0968 12       		.uleb128 0x12
 26753 0969 A3020000 		.4byte	.LASF118
 26754 096d 08       		.byte	0x8
 26755 096e 7B01     		.2byte	0x17b
 26756 0970 EE070000 		.4byte	0x7ee
 26757 0974 18       		.byte	0x18
 26758 0975 00       		.byte	0
 26759 0976 11       		.uleb128 0x11
 26760 0977 3F090000 		.4byte	.LASF170
 26761 097b 10       		.byte	0x10
 26762 097c 08       		.byte	0x8
 26763 097d 8201     		.2byte	0x182
 26764 097f C5090000 		.4byte	0x9c5
 26765 0983 12       		.uleb128 0x12
 26766 0984 F9070000 		.4byte	.LASF171
 26767 0988 08       		.byte	0x8
 26768 0989 8301     		.2byte	0x183
 26769 098b D3000000 		.4byte	0xd3
 26770 098f 00       		.byte	0
 26771 0990 12       		.uleb128 0x12
 26772 0991 85130000 		.4byte	.LASF172
 26773 0995 08       		.byte	0x8
 26774 0996 8401     		.2byte	0x184
 26775 0998 D3000000 		.4byte	0xd3
 26776 099c 04       		.byte	0x4
 26777 099d 12       		.uleb128 0x12
 26778 099e 4D050000 		.4byte	.LASF173
 26779 09a2 08       		.byte	0x8
 26780 09a3 8501     		.2byte	0x185
 26781 09a5 D3000000 		.4byte	0xd3
 26782 09a9 08       		.byte	0x8
 26783 09aa 12       		.uleb128 0x12
 26784 09ab 4F060000 		.4byte	.LASF174
 26785 09af 08       		.byte	0x8
 26786 09b0 8601     		.2byte	0x186
 26787 09b2 97000000 		.4byte	0x97
 26788 09b6 0C       		.byte	0xc
 26789 09b7 12       		.uleb128 0x12
 26790 09b8 A3020000 		.4byte	.LASF118
 26791 09bc 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 581


 26792 09bd 8701     		.2byte	0x187
 26793 09bf A1050000 		.4byte	0x5a1
 26794 09c3 0D       		.byte	0xd
 26795 09c4 00       		.byte	0
 26796 09c5 11       		.uleb128 0x11
 26797 09c6 56010000 		.4byte	.LASF175
 26798 09ca 10       		.byte	0x10
 26799 09cb 08       		.byte	0x8
 26800 09cc 8E01     		.2byte	0x18e
 26801 09ce FA090000 		.4byte	0x9fa
 26802 09d2 12       		.uleb128 0x12
 26803 09d3 510E0000 		.4byte	.LASF176
 26804 09d7 08       		.byte	0x8
 26805 09d8 8F01     		.2byte	0x18f
 26806 09da 97000000 		.4byte	0x97
 26807 09de 00       		.byte	0
 26808 09df 12       		.uleb128 0x12
 26809 09e0 E5090000 		.4byte	.LASF177
 26810 09e4 08       		.byte	0x8
 26811 09e5 9001     		.2byte	0x190
 26812 09e7 97000000 		.4byte	0x97
 26813 09eb 01       		.byte	0x1
 26814 09ec 12       		.uleb128 0x12
 26815 09ed A3020000 		.4byte	.LASF118
 26816 09f1 08       		.byte	0x8
 26817 09f2 9101     		.2byte	0x191
 26818 09f4 FA090000 		.4byte	0x9fa
 26819 09f8 02       		.byte	0x2
 26820 09f9 00       		.byte	0
 26821 09fa 09       		.uleb128 0x9
 26822 09fb 97000000 		.4byte	0x97
 26823 09ff 0A0A0000 		.4byte	0xa0a
 26824 0a03 0A       		.uleb128 0xa
 26825 0a04 18010000 		.4byte	0x118
 26826 0a08 0D       		.byte	0xd
 26827 0a09 00       		.byte	0
 26828 0a0a 11       		.uleb128 0x11
 26829 0a0b EE0B0000 		.4byte	.LASF178
 26830 0a0f 10       		.byte	0x10
 26831 0a10 08       		.byte	0x8
 26832 0a11 9801     		.2byte	0x198
 26833 0a13 4C0A0000 		.4byte	0xa4c
 26834 0a17 12       		.uleb128 0x12
 26835 0a18 41120000 		.4byte	.LASF179
 26836 0a1c 08       		.byte	0x8
 26837 0a1d 9901     		.2byte	0x199
 26838 0a1f D3000000 		.4byte	0xd3
 26839 0a23 00       		.byte	0
 26840 0a24 12       		.uleb128 0x12
 26841 0a25 3A060000 		.4byte	.LASF180
 26842 0a29 08       		.byte	0x8
 26843 0a2a 9A01     		.2byte	0x19a
 26844 0a2c EB000000 		.4byte	0xeb
 26845 0a30 04       		.byte	0x4
 26846 0a31 12       		.uleb128 0x12
 26847 0a32 EA0D0000 		.4byte	.LASF181
 26848 0a36 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 582


 26849 0a37 9B01     		.2byte	0x19b
 26850 0a39 EB000000 		.4byte	0xeb
 26851 0a3d 08       		.byte	0x8
 26852 0a3e 12       		.uleb128 0x12
 26853 0a3f A3020000 		.4byte	.LASF118
 26854 0a43 08       		.byte	0x8
 26855 0a44 9C01     		.2byte	0x19c
 26856 0a46 4C0A0000 		.4byte	0xa4c
 26857 0a4a 0C       		.byte	0xc
 26858 0a4b 00       		.byte	0
 26859 0a4c 09       		.uleb128 0x9
 26860 0a4d 97000000 		.4byte	0x97
 26861 0a51 5C0A0000 		.4byte	0xa5c
 26862 0a55 0A       		.uleb128 0xa
 26863 0a56 18010000 		.4byte	0x118
 26864 0a5a 03       		.byte	0x3
 26865 0a5b 00       		.byte	0
 26866 0a5c 14       		.uleb128 0x14
 26867 0a5d 5C120000 		.4byte	.LASF182
 26868 0a61 D002     		.2byte	0x2d0
 26869 0a63 08       		.byte	0x8
 26870 0a64 A501     		.2byte	0x1a5
 26871 0a66 260B0000 		.4byte	0xb26
 26872 0a6a 12       		.uleb128 0x12
 26873 0a6b BB0A0000 		.4byte	.LASF183
 26874 0a6f 08       		.byte	0x8
 26875 0a70 A701     		.2byte	0x1a7
 26876 0a72 97000000 		.4byte	0x97
 26877 0a76 00       		.byte	0
 26878 0a77 12       		.uleb128 0x12
 26879 0a78 A3020000 		.4byte	.LASF118
 26880 0a7c 08       		.byte	0x8
 26881 0a7d A801     		.2byte	0x1a8
 26882 0a7f 260B0000 		.4byte	0xb26
 26883 0a83 01       		.byte	0x1
 26884 0a84 13       		.uleb128 0x13
 26885 0a85 636E7400 		.ascii	"cnt\000"
 26886 0a89 08       		.byte	0x8
 26887 0a8a A901     		.2byte	0x1a9
 26888 0a8c 79040000 		.4byte	0x479
 26889 0a90 10       		.byte	0x10
 26890 0a91 12       		.uleb128 0x12
 26891 0a92 6A020000 		.4byte	.LASF184
 26892 0a96 08       		.byte	0x8
 26893 0a97 AA01     		.2byte	0x1aa
 26894 0a99 360B0000 		.4byte	0xb36
 26895 0a9d 60       		.byte	0x60
 26896 0a9e 13       		.uleb128 0x13
 26897 0a9f 64657600 		.ascii	"dev\000"
 26898 0aa3 08       		.byte	0x8
 26899 0aa4 AB01     		.2byte	0x1ab
 26900 0aa6 12050000 		.4byte	0x512
 26901 0aaa A0       		.byte	0xa0
 26902 0aab 12       		.uleb128 0x12
 26903 0aac E00F0000 		.4byte	.LASF185
 26904 0ab0 08       		.byte	0x8
 26905 0ab1 AC01     		.2byte	0x1ac
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 583


 26906 0ab3 460B0000 		.4byte	0xb46
 26907 0ab7 B0       		.byte	0xb0
 26908 0ab8 15       		.uleb128 0x15
 26909 0ab9 656E6300 		.ascii	"enc\000"
 26910 0abd 08       		.byte	0x8
 26911 0abe AD01     		.2byte	0x1ad
 26912 0ac0 560B0000 		.4byte	0xb56
 26913 0ac4 9001     		.2byte	0x190
 26914 0ac6 15       		.uleb128 0x15
 26915 0ac7 656D6700 		.ascii	"emg\000"
 26916 0acb 08       		.byte	0x8
 26917 0acc AE01     		.2byte	0x1ae
 26918 0ace FE070000 		.4byte	0x7fe
 26919 0ad2 F001     		.2byte	0x1f0
 26920 0ad4 15       		.uleb128 0x15
 26921 0ad5 696D7500 		.ascii	"imu\000"
 26922 0ad9 08       		.byte	0x8
 26923 0ada AF01     		.2byte	0x1af
 26924 0adc 7A080000 		.4byte	0x87a
 26925 0ae0 0002     		.2byte	0x200
 26926 0ae2 15       		.uleb128 0x15
 26927 0ae3 65787000 		.ascii	"exp\000"
 26928 0ae7 08       		.byte	0x8
 26929 0ae8 B001     		.2byte	0x1b0
 26930 0aea D2080000 		.4byte	0x8d2
 26931 0aee 2002     		.2byte	0x220
 26932 0af0 16       		.uleb128 0x16
 26933 0af1 50000000 		.4byte	.LASF186
 26934 0af5 08       		.byte	0x8
 26935 0af6 B101     		.2byte	0x1b1
 26936 0af8 660B0000 		.4byte	0xb66
 26937 0afc 4002     		.2byte	0x240
 26938 0afe 15       		.uleb128 0x15
 26939 0aff 534800   		.ascii	"SH\000"
 26940 0b02 08       		.byte	0x8
 26941 0b03 B301     		.2byte	0x1b3
 26942 0b05 76090000 		.4byte	0x976
 26943 0b09 A002     		.2byte	0x2a0
 26944 0b0b 15       		.uleb128 0x15
 26945 0b0c 4D5300   		.ascii	"MS\000"
 26946 0b0f 08       		.byte	0x8
 26947 0b10 B401     		.2byte	0x1b4
 26948 0b12 C5090000 		.4byte	0x9c5
 26949 0b16 B002     		.2byte	0x2b0
 26950 0b18 15       		.uleb128 0x15
 26951 0b19 464200   		.ascii	"FB\000"
 26952 0b1c 08       		.byte	0x8
 26953 0b1d B501     		.2byte	0x1b5
 26954 0b1f 0A0A0000 		.4byte	0xa0a
 26955 0b23 C002     		.2byte	0x2c0
 26956 0b25 00       		.byte	0
 26957 0b26 09       		.uleb128 0x9
 26958 0b27 97000000 		.4byte	0x97
 26959 0b2b 360B0000 		.4byte	0xb36
 26960 0b2f 0A       		.uleb128 0xa
 26961 0b30 18010000 		.4byte	0x118
 26962 0b34 0E       		.byte	0xe
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 584


 26963 0b35 00       		.byte	0
 26964 0b36 09       		.uleb128 0x9
 26965 0b37 97000000 		.4byte	0x97
 26966 0b3b 460B0000 		.4byte	0xb46
 26967 0b3f 0A       		.uleb128 0xa
 26968 0b40 18010000 		.4byte	0x118
 26969 0b44 3F       		.byte	0x3f
 26970 0b45 00       		.byte	0
 26971 0b46 09       		.uleb128 0x9
 26972 0b47 B1050000 		.4byte	0x5b1
 26973 0b4b 560B0000 		.4byte	0xb56
 26974 0b4f 0A       		.uleb128 0xa
 26975 0b50 18010000 		.4byte	0x118
 26976 0b54 01       		.byte	0x1
 26977 0b55 00       		.byte	0
 26978 0b56 09       		.uleb128 0x9
 26979 0b57 4B070000 		.4byte	0x74b
 26980 0b5b 660B0000 		.4byte	0xb66
 26981 0b5f 0A       		.uleb128 0xa
 26982 0b60 18010000 		.4byte	0x118
 26983 0b64 01       		.byte	0x1
 26984 0b65 00       		.byte	0
 26985 0b66 09       		.uleb128 0x9
 26986 0b67 41090000 		.4byte	0x941
 26987 0b6b 760B0000 		.4byte	0xb76
 26988 0b6f 0A       		.uleb128 0xa
 26989 0b70 18010000 		.4byte	0x118
 26990 0b74 02       		.byte	0x2
 26991 0b75 00       		.byte	0
 26992 0b76 11       		.uleb128 0x11
 26993 0b77 320D0000 		.4byte	.LASF187
 26994 0b7b 28       		.byte	0x28
 26995 0b7c 08       		.byte	0x8
 26996 0b7d C101     		.2byte	0x1c1
 26997 0b7f D20B0000 		.4byte	0xbd2
 26998 0b83 12       		.uleb128 0x12
 26999 0b84 5F040000 		.4byte	.LASF188
 27000 0b88 08       		.byte	0x8
 27001 0b89 C201     		.2byte	0x1c2
 27002 0b8b 97000000 		.4byte	0x97
 27003 0b8f 00       		.byte	0
 27004 0b90 12       		.uleb128 0x12
 27005 0b91 B0020000 		.4byte	.LASF189
 27006 0b95 08       		.byte	0x8
 27007 0b96 C301     		.2byte	0x1c3
 27008 0b98 D20B0000 		.4byte	0xbd2
 27009 0b9c 02       		.byte	0x2
 27010 0b9d 12       		.uleb128 0x12
 27011 0b9e 590C0000 		.4byte	.LASF190
 27012 0ba2 08       		.byte	0x8
 27013 0ba3 C401     		.2byte	0x1c4
 27014 0ba5 D20B0000 		.4byte	0xbd2
 27015 0ba9 08       		.byte	0x8
 27016 0baa 12       		.uleb128 0x12
 27017 0bab 3E0D0000 		.4byte	.LASF191
 27018 0baf 08       		.byte	0x8
 27019 0bb0 C501     		.2byte	0x1c5
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 585


 27020 0bb2 D20B0000 		.4byte	0xbd2
 27021 0bb6 0E       		.byte	0xe
 27022 0bb7 12       		.uleb128 0x12
 27023 0bb8 E0070000 		.4byte	.LASF192
 27024 0bbc 08       		.byte	0x8
 27025 0bbd C601     		.2byte	0x1c6
 27026 0bbf E20B0000 		.4byte	0xbe2
 27027 0bc3 14       		.byte	0x14
 27028 0bc4 12       		.uleb128 0x12
 27029 0bc5 C3010000 		.4byte	.LASF193
 27030 0bc9 08       		.byte	0x8
 27031 0bca C701     		.2byte	0x1c7
 27032 0bcc C7000000 		.4byte	0xc7
 27033 0bd0 24       		.byte	0x24
 27034 0bd1 00       		.byte	0
 27035 0bd2 09       		.uleb128 0x9
 27036 0bd3 C7000000 		.4byte	0xc7
 27037 0bd7 E20B0000 		.4byte	0xbe2
 27038 0bdb 0A       		.uleb128 0xa
 27039 0bdc 18010000 		.4byte	0x118
 27040 0be0 02       		.byte	0x2
 27041 0be1 00       		.byte	0
 27042 0be2 09       		.uleb128 0x9
 27043 0be3 EB000000 		.4byte	0xeb
 27044 0be7 F20B0000 		.4byte	0xbf2
 27045 0beb 0A       		.uleb128 0xa
 27046 0bec 18010000 		.4byte	0x118
 27047 0bf0 03       		.byte	0x3
 27048 0bf1 00       		.byte	0
 27049 0bf2 11       		.uleb128 0x11
 27050 0bf3 81030000 		.4byte	.LASF194
 27051 0bf7 06       		.byte	0x6
 27052 0bf8 08       		.byte	0x8
 27053 0bf9 D701     		.2byte	0x1d7
 27054 0bfb 340C0000 		.4byte	0xc34
 27055 0bff 12       		.uleb128 0x12
 27056 0c00 47070000 		.4byte	.LASF195
 27057 0c04 08       		.byte	0x8
 27058 0c05 D801     		.2byte	0x1d8
 27059 0c07 97000000 		.4byte	0x97
 27060 0c0b 00       		.byte	0
 27061 0c0c 12       		.uleb128 0x12
 27062 0c0d AA130000 		.4byte	.LASF196
 27063 0c11 08       		.byte	0x8
 27064 0c12 D901     		.2byte	0x1d9
 27065 0c14 97000000 		.4byte	0x97
 27066 0c18 01       		.byte	0x1
 27067 0c19 12       		.uleb128 0x12
 27068 0c1a D6050000 		.4byte	.LASF197
 27069 0c1e 08       		.byte	0x8
 27070 0c1f DA01     		.2byte	0x1da
 27071 0c21 C7000000 		.4byte	0xc7
 27072 0c25 02       		.byte	0x2
 27073 0c26 12       		.uleb128 0x12
 27074 0c27 CC090000 		.4byte	.LASF198
 27075 0c2b 08       		.byte	0x8
 27076 0c2c DB01     		.2byte	0x1db
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 586


 27077 0c2e C7000000 		.4byte	0xc7
 27078 0c32 04       		.byte	0x4
 27079 0c33 00       		.byte	0
 27080 0c34 17       		.uleb128 0x17
 27081 0c35 6A0E0000 		.4byte	.LASF371
 27082 0c39 02       		.byte	0x2
 27083 0c3a 1403     		.2byte	0x314
 27084 0c3c 8C000000 		.4byte	0x8c
 27085 0c40 03       		.byte	0x3
 27086 0c41 5E0C0000 		.4byte	0xc5e
 27087 0c45 18       		.uleb128 0x18
 27088 0c46 59040000 		.4byte	.LASF278
 27089 0c4a 02       		.byte	0x2
 27090 0c4b 1403     		.2byte	0x314
 27091 0c4d 8C000000 		.4byte	0x8c
 27092 0c51 19       		.uleb128 0x19
 27093 0c52 CE010000 		.4byte	.LASF372
 27094 0c56 02       		.byte	0x2
 27095 0c57 1603     		.2byte	0x316
 27096 0c59 8C000000 		.4byte	0x8c
 27097 0c5d 00       		.byte	0
 27098 0c5e 1A       		.uleb128 0x1a
 27099 0c5f 980F0000 		.4byte	.LASF199
 27100 0c63 01       		.byte	0x1
 27101 0c64 3D       		.byte	0x3d
 27102 0c65 00000000 		.4byte	.LFB64
 27103 0c69 DC040000 		.4byte	.LFE64-.LFB64
 27104 0c6d 01       		.uleb128 0x1
 27105 0c6e 9C       		.byte	0x9c
 27106 0c6f 080D0000 		.4byte	0xd08
 27107 0c73 1B       		.uleb128 0x1b
 27108 0c74 DC050000 		.4byte	.LASF201
 27109 0c78 01       		.byte	0x1
 27110 0c79 3F       		.byte	0x3f
 27111 0c7a 97000000 		.4byte	0x97
 27112 0c7e 02       		.uleb128 0x2
 27113 0c7f 91       		.byte	0x91
 27114 0c80 77       		.sleb128 -9
 27115 0c81 1C       		.uleb128 0x1c
 27116 0c82 340C0000 		.4byte	0xc34
 27117 0c86 36030000 		.4byte	.LBB8
 27118 0c8a 08000000 		.4byte	.LBE8-.LBB8
 27119 0c8e 01       		.byte	0x1
 27120 0c8f 96       		.byte	0x96
 27121 0c90 AF0C0000 		.4byte	0xcaf
 27122 0c94 1D       		.uleb128 0x1d
 27123 0c95 450C0000 		.4byte	0xc45
 27124 0c99 02       		.uleb128 0x2
 27125 0c9a 91       		.byte	0x91
 27126 0c9b 68       		.sleb128 -24
 27127 0c9c 1E       		.uleb128 0x1e
 27128 0c9d 36030000 		.4byte	.LBB9
 27129 0ca1 08000000 		.4byte	.LBE9-.LBB9
 27130 0ca5 1F       		.uleb128 0x1f
 27131 0ca6 510C0000 		.4byte	0xc51
 27132 0caa 02       		.uleb128 0x2
 27133 0cab 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 587


 27134 0cac 64       		.sleb128 -28
 27135 0cad 00       		.byte	0
 27136 0cae 00       		.byte	0
 27137 0caf 1C       		.uleb128 0x1c
 27138 0cb0 340C0000 		.4byte	0xc34
 27139 0cb4 54030000 		.4byte	.LBB10
 27140 0cb8 08000000 		.4byte	.LBE10-.LBB10
 27141 0cbc 01       		.byte	0x1
 27142 0cbd A2       		.byte	0xa2
 27143 0cbe DD0C0000 		.4byte	0xcdd
 27144 0cc2 1D       		.uleb128 0x1d
 27145 0cc3 450C0000 		.4byte	0xc45
 27146 0cc7 02       		.uleb128 0x2
 27147 0cc8 91       		.byte	0x91
 27148 0cc9 70       		.sleb128 -16
 27149 0cca 1E       		.uleb128 0x1e
 27150 0ccb 54030000 		.4byte	.LBB11
 27151 0ccf 08000000 		.4byte	.LBE11-.LBB11
 27152 0cd3 1F       		.uleb128 0x1f
 27153 0cd4 510C0000 		.4byte	0xc51
 27154 0cd8 02       		.uleb128 0x2
 27155 0cd9 91       		.byte	0x91
 27156 0cda 60       		.sleb128 -32
 27157 0cdb 00       		.byte	0
 27158 0cdc 00       		.byte	0
 27159 0cdd 20       		.uleb128 0x20
 27160 0cde 340C0000 		.4byte	0xc34
 27161 0ce2 98040000 		.4byte	.LBB12
 27162 0ce6 08000000 		.4byte	.LBE12-.LBB12
 27163 0cea 01       		.byte	0x1
 27164 0ceb FE       		.byte	0xfe
 27165 0cec 1D       		.uleb128 0x1d
 27166 0ced 450C0000 		.4byte	0xc45
 27167 0cf1 02       		.uleb128 0x2
 27168 0cf2 91       		.byte	0x91
 27169 0cf3 6C       		.sleb128 -20
 27170 0cf4 1E       		.uleb128 0x1e
 27171 0cf5 98040000 		.4byte	.LBB13
 27172 0cf9 08000000 		.4byte	.LBE13-.LBB13
 27173 0cfd 1F       		.uleb128 0x1f
 27174 0cfe 510C0000 		.4byte	0xc51
 27175 0d02 02       		.uleb128 0x2
 27176 0d03 91       		.byte	0x91
 27177 0d04 5C       		.sleb128 -36
 27178 0d05 00       		.byte	0
 27179 0d06 00       		.byte	0
 27180 0d07 00       		.byte	0
 27181 0d08 21       		.uleb128 0x21
 27182 0d09 00000000 		.4byte	.LASF200
 27183 0d0d 01       		.byte	0x1
 27184 0d0e 2501     		.2byte	0x125
 27185 0d10 00000000 		.4byte	.LFB65
 27186 0d14 22000000 		.4byte	.LFE65-.LFB65
 27187 0d18 01       		.uleb128 0x1
 27188 0d19 9C       		.byte	0x9c
 27189 0d1a 2F0D0000 		.4byte	0xd2f
 27190 0d1e 22       		.uleb128 0x22
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 588


 27191 0d1f 03050000 		.4byte	.LASF202
 27192 0d23 01       		.byte	0x1
 27193 0d24 2601     		.2byte	0x126
 27194 0d26 2F0D0000 		.4byte	0xd2f
 27195 0d2a 03       		.uleb128 0x3
 27196 0d2b 91       		.byte	0x91
 27197 0d2c 9C74     		.sleb128 -1508
 27198 0d2e 00       		.byte	0
 27199 0d2f 09       		.uleb128 0x9
 27200 0d30 F9000000 		.4byte	0xf9
 27201 0d34 400D0000 		.4byte	0xd40
 27202 0d38 23       		.uleb128 0x23
 27203 0d39 18010000 		.4byte	0x118
 27204 0d3d DB05     		.2byte	0x5db
 27205 0d3f 00       		.byte	0
 27206 0d40 21       		.uleb128 0x21
 27207 0d41 8D120000 		.4byte	.LASF203
 27208 0d45 01       		.byte	0x1
 27209 0d46 3101     		.2byte	0x131
 27210 0d48 00000000 		.4byte	.LFB66
 27211 0d4c 02010000 		.4byte	.LFE66-.LFB66
 27212 0d50 01       		.uleb128 0x1
 27213 0d51 9C       		.byte	0x9c
 27214 0d52 890D0000 		.4byte	0xd89
 27215 0d56 24       		.uleb128 0x24
 27216 0d57 F2110000 		.4byte	.LASF206
 27217 0d5b 01       		.byte	0x1
 27218 0d5c 3101     		.2byte	0x131
 27219 0d5e A3000000 		.4byte	0xa3
 27220 0d62 04       		.uleb128 0x4
 27221 0d63 91       		.byte	0x91
 27222 0d64 B6C47E   		.sleb128 -24010
 27223 0d67 22       		.uleb128 0x22
 27224 0d68 03050000 		.4byte	.LASF202
 27225 0d6c 01       		.byte	0x1
 27226 0d6d 3201     		.2byte	0x132
 27227 0d6f 890D0000 		.4byte	0xd89
 27228 0d73 03       		.uleb128 0x3
 27229 0d74 91       		.byte	0x91
 27230 0d75 D860     		.sleb128 -4008
 27231 0d77 22       		.uleb128 0x22
 27232 0d78 AE070000 		.4byte	.LASF204
 27233 0d7c 01       		.byte	0x1
 27234 0d7d 3301     		.2byte	0x133
 27235 0d7f 9A0D0000 		.4byte	0xd9a
 27236 0d83 04       		.uleb128 0x4
 27237 0d84 91       		.byte	0x91
 27238 0d85 B8C47E   		.sleb128 -24008
 27239 0d88 00       		.byte	0
 27240 0d89 09       		.uleb128 0x9
 27241 0d8a F9000000 		.4byte	0xf9
 27242 0d8e 9A0D0000 		.4byte	0xd9a
 27243 0d92 23       		.uleb128 0x23
 27244 0d93 18010000 		.4byte	0x118
 27245 0d97 9F0F     		.2byte	0xf9f
 27246 0d99 00       		.byte	0
 27247 0d9a 09       		.uleb128 0x9
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 589


 27248 0d9b F9000000 		.4byte	0xf9
 27249 0d9f AB0D0000 		.4byte	0xdab
 27250 0da3 23       		.uleb128 0x23
 27251 0da4 18010000 		.4byte	0x118
 27252 0da8 1F4E     		.2byte	0x4e1f
 27253 0daa 00       		.byte	0
 27254 0dab 21       		.uleb128 0x21
 27255 0dac 93010000 		.4byte	.LASF205
 27256 0db0 01       		.byte	0x1
 27257 0db1 5601     		.2byte	0x156
 27258 0db3 00000000 		.4byte	.LFB67
 27259 0db7 9E2F0000 		.4byte	.LFE67-.LFB67
 27260 0dbb 01       		.uleb128 0x1
 27261 0dbc 9C       		.byte	0x9c
 27262 0dbd 4F0F0000 		.4byte	0xf4f
 27263 0dc1 24       		.uleb128 0x24
 27264 0dc2 050C0000 		.4byte	.LASF207
 27265 0dc6 01       		.byte	0x1
 27266 0dc7 5601     		.2byte	0x156
 27267 0dc9 4F0F0000 		.4byte	0xf4f
 27268 0dcd 03       		.uleb128 0x3
 27269 0dce 91       		.byte	0x91
 27270 0dcf A455     		.sleb128 -5468
 27271 0dd1 24       		.uleb128 0x24
 27272 0dd2 66120000 		.4byte	.LASF208
 27273 0dd6 01       		.byte	0x1
 27274 0dd7 5601     		.2byte	0x156
 27275 0dd9 550F0000 		.4byte	0xf55
 27276 0ddd 03       		.uleb128 0x3
 27277 0dde 91       		.byte	0x91
 27278 0ddf A055     		.sleb128 -5472
 27279 0de1 24       		.uleb128 0x24
 27280 0de2 BC020000 		.4byte	.LASF209
 27281 0de6 01       		.byte	0x1
 27282 0de7 5701     		.2byte	0x157
 27283 0de9 550F0000 		.4byte	0xf55
 27284 0ded 03       		.uleb128 0x3
 27285 0dee 91       		.byte	0x91
 27286 0def 9C55     		.sleb128 -5476
 27287 0df1 24       		.uleb128 0x24
 27288 0df2 660B0000 		.4byte	.LASF210
 27289 0df6 01       		.byte	0x1
 27290 0df7 5701     		.2byte	0x157
 27291 0df9 550F0000 		.4byte	0xf55
 27292 0dfd 03       		.uleb128 0x3
 27293 0dfe 91       		.byte	0x91
 27294 0dff 9855     		.sleb128 -5480
 27295 0e01 24       		.uleb128 0x24
 27296 0e02 B5110000 		.4byte	.LASF211
 27297 0e06 01       		.byte	0x1
 27298 0e07 5801     		.2byte	0x158
 27299 0e09 550F0000 		.4byte	0xf55
 27300 0e0d 02       		.uleb128 0x2
 27301 0e0e 91       		.byte	0x91
 27302 0e0f 00       		.sleb128 0
 27303 0e10 24       		.uleb128 0x24
 27304 0e11 3C070000 		.4byte	.LASF212
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 590


 27305 0e15 01       		.byte	0x1
 27306 0e16 5801     		.2byte	0x158
 27307 0e18 5B0F0000 		.4byte	0xf5b
 27308 0e1c 02       		.uleb128 0x2
 27309 0e1d 91       		.byte	0x91
 27310 0e1e 04       		.sleb128 4
 27311 0e1f 24       		.uleb128 0x24
 27312 0e20 040A0000 		.4byte	.LASF213
 27313 0e24 01       		.byte	0x1
 27314 0e25 5901     		.2byte	0x159
 27315 0e27 550F0000 		.4byte	0xf55
 27316 0e2b 02       		.uleb128 0x2
 27317 0e2c 91       		.byte	0x91
 27318 0e2d 08       		.sleb128 8
 27319 0e2e 24       		.uleb128 0x24
 27320 0e2f C0070000 		.4byte	.LASF214
 27321 0e33 01       		.byte	0x1
 27322 0e34 5901     		.2byte	0x159
 27323 0e36 5B0F0000 		.4byte	0xf5b
 27324 0e3a 02       		.uleb128 0x2
 27325 0e3b 91       		.byte	0x91
 27326 0e3c 0C       		.sleb128 12
 27327 0e3d 22       		.uleb128 0x22
 27328 0e3e 56050000 		.4byte	.LASF215
 27329 0e42 01       		.byte	0x1
 27330 0e43 5C01     		.2byte	0x15c
 27331 0e45 610F0000 		.4byte	0xf61
 27332 0e49 03       		.uleb128 0x3
 27333 0e4a 91       		.byte	0x91
 27334 0e4b EC55     		.sleb128 -5396
 27335 0e4d 22       		.uleb128 0x22
 27336 0e4e C5000000 		.4byte	.LASF216
 27337 0e52 01       		.byte	0x1
 27338 0e53 5D01     		.2byte	0x15d
 27339 0e55 A3000000 		.4byte	0xa3
 27340 0e59 02       		.uleb128 0x2
 27341 0e5a 91       		.byte	0x91
 27342 0e5b 60       		.sleb128 -32
 27343 0e5c 25       		.uleb128 0x25
 27344 0e5d 6900     		.ascii	"i\000"
 27345 0e5f 01       		.byte	0x1
 27346 0e60 6001     		.2byte	0x160
 27347 0e62 97000000 		.4byte	0x97
 27348 0e66 02       		.uleb128 0x2
 27349 0e67 91       		.byte	0x91
 27350 0e68 67       		.sleb128 -25
 27351 0e69 25       		.uleb128 0x25
 27352 0e6a 6A00     		.ascii	"j\000"
 27353 0e6c 01       		.byte	0x1
 27354 0e6d 6001     		.2byte	0x160
 27355 0e6f 97000000 		.4byte	0x97
 27356 0e73 02       		.uleb128 0x2
 27357 0e74 91       		.byte	0x91
 27358 0e75 66       		.sleb128 -26
 27359 0e76 25       		.uleb128 0x25
 27360 0e77 69647800 		.ascii	"idx\000"
 27361 0e7b 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 591


 27362 0e7c 6101     		.2byte	0x161
 27363 0e7e 97000000 		.4byte	0x97
 27364 0e82 02       		.uleb128 0x2
 27365 0e83 91       		.byte	0x91
 27366 0e84 65       		.sleb128 -27
 27367 0e85 22       		.uleb128 0x22
 27368 0e86 D70F0000 		.4byte	.LASF217
 27369 0e8a 01       		.byte	0x1
 27370 0e8b 6201     		.2byte	0x162
 27371 0e8d 97000000 		.4byte	0x97
 27372 0e91 02       		.uleb128 0x2
 27373 0e92 91       		.byte	0x91
 27374 0e93 64       		.sleb128 -28
 27375 0e94 25       		.uleb128 0x25
 27376 0e95 736F6400 		.ascii	"sod\000"
 27377 0e99 01       		.byte	0x1
 27378 0e9a 6301     		.2byte	0x163
 27379 0e9c 97000000 		.4byte	0x97
 27380 0ea0 02       		.uleb128 0x2
 27381 0ea1 91       		.byte	0x91
 27382 0ea2 63       		.sleb128 -29
 27383 0ea3 22       		.uleb128 0x22
 27384 0ea4 370B0000 		.4byte	.LASF218
 27385 0ea8 01       		.byte	0x1
 27386 0ea9 6401     		.2byte	0x164
 27387 0eab 97000000 		.4byte	0x97
 27388 0eaf 02       		.uleb128 0x2
 27389 0eb0 91       		.byte	0x91
 27390 0eb1 62       		.sleb128 -30
 27391 0eb2 22       		.uleb128 0x22
 27392 0eb3 90130000 		.4byte	.LASF219
 27393 0eb7 01       		.byte	0x1
 27394 0eb8 6501     		.2byte	0x165
 27395 0eba 720F0000 		.4byte	0xf72
 27396 0ebe 03       		.uleb128 0x3
 27397 0ebf 91       		.byte	0x91
 27398 0ec0 B855     		.sleb128 -5448
 27399 0ec2 22       		.uleb128 0x22
 27400 0ec3 9D110000 		.4byte	.LASF220
 27401 0ec7 01       		.byte	0x1
 27402 0ec8 6601     		.2byte	0x166
 27403 0eca EB000000 		.4byte	0xeb
 27404 0ece 03       		.uleb128 0x3
 27405 0ecf 91       		.byte	0x91
 27406 0ed0 B455     		.sleb128 -5452
 27407 0ed2 22       		.uleb128 0x22
 27408 0ed3 5F100000 		.4byte	.LASF221
 27409 0ed7 01       		.byte	0x1
 27410 0ed8 6701     		.2byte	0x167
 27411 0eda C7000000 		.4byte	0xc7
 27412 0ede 03       		.uleb128 0x3
 27413 0edf 91       		.byte	0x91
 27414 0ee0 B255     		.sleb128 -5454
 27415 0ee2 22       		.uleb128 0x22
 27416 0ee3 8E0B0000 		.4byte	.LASF222
 27417 0ee7 01       		.byte	0x1
 27418 0ee8 6801     		.2byte	0x168
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 592


 27419 0eea A3000000 		.4byte	0xa3
 27420 0eee 03       		.uleb128 0x3
 27421 0eef 91       		.byte	0x91
 27422 0ef0 B055     		.sleb128 -5456
 27423 0ef2 22       		.uleb128 0x22
 27424 0ef3 BE110000 		.4byte	.LASF223
 27425 0ef7 01       		.byte	0x1
 27426 0ef8 6901     		.2byte	0x169
 27427 0efa D3000000 		.4byte	0xd3
 27428 0efe 03       		.uleb128 0x3
 27429 0eff 91       		.byte	0x91
 27430 0f00 AC55     		.sleb128 -5460
 27431 0f02 22       		.uleb128 0x22
 27432 0f03 120D0000 		.4byte	.LASF224
 27433 0f07 01       		.byte	0x1
 27434 0f08 6A01     		.2byte	0x16a
 27435 0f0a AF000000 		.4byte	0xaf
 27436 0f0e 03       		.uleb128 0x3
 27437 0f0f 91       		.byte	0x91
 27438 0f10 A855     		.sleb128 -5464
 27439 0f12 22       		.uleb128 0x22
 27440 0f13 B50C0000 		.4byte	.LASF225
 27441 0f17 01       		.byte	0x1
 27442 0f18 6C01     		.2byte	0x16c
 27443 0f1a 97000000 		.4byte	0x97
 27444 0f1e 02       		.uleb128 0x2
 27445 0f1f 91       		.byte	0x91
 27446 0f20 5F       		.sleb128 -33
 27447 0f21 22       		.uleb128 0x22
 27448 0f22 F4000000 		.4byte	.LASF226
 27449 0f26 01       		.byte	0x1
 27450 0f27 6D01     		.2byte	0x16d
 27451 0f29 97000000 		.4byte	0x97
 27452 0f2d 02       		.uleb128 0x2
 27453 0f2e 91       		.byte	0x91
 27454 0f2f 5E       		.sleb128 -34
 27455 0f30 22       		.uleb128 0x22
 27456 0f31 440A0000 		.4byte	.LASF227
 27457 0f35 01       		.byte	0x1
 27458 0f36 6F01     		.2byte	0x16f
 27459 0f38 550F0000 		.4byte	0xf55
 27460 0f3c 02       		.uleb128 0x2
 27461 0f3d 91       		.byte	0x91
 27462 0f3e 58       		.sleb128 -40
 27463 0f3f 22       		.uleb128 0x22
 27464 0f40 88010000 		.4byte	.LASF228
 27465 0f44 01       		.byte	0x1
 27466 0f45 7001     		.2byte	0x170
 27467 0f47 550F0000 		.4byte	0xf55
 27468 0f4b 02       		.uleb128 0x2
 27469 0f4c 91       		.byte	0x91
 27470 0f4d 54       		.sleb128 -44
 27471 0f4e 00       		.byte	0
 27472 0f4f 07       		.uleb128 0x7
 27473 0f50 04       		.byte	0x4
 27474 0f51 550F0000 		.4byte	0xf55
 27475 0f55 07       		.uleb128 0x7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 593


 27476 0f56 04       		.byte	0x4
 27477 0f57 97000000 		.4byte	0x97
 27478 0f5b 07       		.uleb128 0x7
 27479 0f5c 04       		.byte	0x4
 27480 0f5d 25010000 		.4byte	0x125
 27481 0f61 09       		.uleb128 0x9
 27482 0f62 97000000 		.4byte	0x97
 27483 0f66 720F0000 		.4byte	0xf72
 27484 0f6a 23       		.uleb128 0x23
 27485 0f6b 18010000 		.4byte	0x118
 27486 0f6f E514     		.2byte	0x14e5
 27487 0f71 00       		.byte	0
 27488 0f72 09       		.uleb128 0x9
 27489 0f73 F9000000 		.4byte	0xf9
 27490 0f77 820F0000 		.4byte	0xf82
 27491 0f7b 0A       		.uleb128 0xa
 27492 0f7c 18010000 		.4byte	0x118
 27493 0f80 31       		.byte	0x31
 27494 0f81 00       		.byte	0
 27495 0f82 21       		.uleb128 0x21
 27496 0f83 0C0E0000 		.4byte	.LASF229
 27497 0f87 01       		.byte	0x1
 27498 0f88 3103     		.2byte	0x331
 27499 0f8a 00000000 		.4byte	.LFB68
 27500 0f8e C0170000 		.4byte	.LFE68-.LFB68
 27501 0f92 01       		.uleb128 0x1
 27502 0f93 9C       		.byte	0x9c
 27503 0f94 50110000 		.4byte	0x1150
 27504 0f98 24       		.uleb128 0x24
 27505 0f99 34060000 		.4byte	.LASF230
 27506 0f9d 01       		.byte	0x1
 27507 0f9e 3103     		.2byte	0x331
 27508 0fa0 A3000000 		.4byte	0xa3
 27509 0fa4 03       		.uleb128 0x3
 27510 0fa5 91       		.byte	0x91
 27511 0fa6 8E76     		.sleb128 -1266
 27512 0fa8 25       		.uleb128 0x25
 27513 0fa9 6900     		.ascii	"i\000"
 27514 0fab 01       		.byte	0x1
 27515 0fac 3203     		.2byte	0x332
 27516 0fae 97000000 		.4byte	0x97
 27517 0fb2 02       		.uleb128 0x2
 27518 0fb3 91       		.byte	0x91
 27519 0fb4 6F       		.sleb128 -17
 27520 0fb5 25       		.uleb128 0x25
 27521 0fb6 6A00     		.ascii	"j\000"
 27522 0fb8 01       		.byte	0x1
 27523 0fb9 3203     		.2byte	0x332
 27524 0fbb 97000000 		.4byte	0x97
 27525 0fbf 02       		.uleb128 0x2
 27526 0fc0 91       		.byte	0x91
 27527 0fc1 6E       		.sleb128 -18
 27528 0fc2 25       		.uleb128 0x25
 27529 0fc3 736F6400 		.ascii	"sod\000"
 27530 0fc7 01       		.byte	0x1
 27531 0fc8 3303     		.2byte	0x333
 27532 0fca 97000000 		.4byte	0x97
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 594


 27533 0fce 02       		.uleb128 0x2
 27534 0fcf 91       		.byte	0x91
 27535 0fd0 6D       		.sleb128 -19
 27536 0fd1 22       		.uleb128 0x22
 27537 0fd2 310A0000 		.4byte	.LASF231
 27538 0fd6 01       		.byte	0x1
 27539 0fd7 3403     		.2byte	0x334
 27540 0fd9 97000000 		.4byte	0x97
 27541 0fdd 02       		.uleb128 0x2
 27542 0fde 91       		.byte	0x91
 27543 0fdf 62       		.sleb128 -30
 27544 0fe0 22       		.uleb128 0x22
 27545 0fe1 5F100000 		.4byte	.LASF221
 27546 0fe5 01       		.byte	0x1
 27547 0fe6 3503     		.2byte	0x335
 27548 0fe8 C7000000 		.4byte	0xc7
 27549 0fec 02       		.uleb128 0x2
 27550 0fed 91       		.byte	0x91
 27551 0fee 60       		.sleb128 -32
 27552 0fef 22       		.uleb128 0x22
 27553 0ff0 8E0B0000 		.4byte	.LASF222
 27554 0ff4 01       		.byte	0x1
 27555 0ff5 3603     		.2byte	0x336
 27556 0ff7 A3000000 		.4byte	0xa3
 27557 0ffb 02       		.uleb128 0x2
 27558 0ffc 91       		.byte	0x91
 27559 0ffd 5E       		.sleb128 -34
 27560 0ffe 22       		.uleb128 0x22
 27561 0fff BE110000 		.4byte	.LASF223
 27562 1003 01       		.byte	0x1
 27563 1004 3703     		.2byte	0x337
 27564 1006 D3000000 		.4byte	0xd3
 27565 100a 02       		.uleb128 0x2
 27566 100b 91       		.byte	0x91
 27567 100c 58       		.sleb128 -40
 27568 100d 22       		.uleb128 0x22
 27569 100e 120D0000 		.4byte	.LASF224
 27570 1012 01       		.byte	0x1
 27571 1013 3803     		.2byte	0x338
 27572 1015 AF000000 		.4byte	0xaf
 27573 1019 02       		.uleb128 0x2
 27574 101a 91       		.byte	0x91
 27575 101b 54       		.sleb128 -44
 27576 101c 22       		.uleb128 0x22
 27577 101d 9D110000 		.4byte	.LASF220
 27578 1021 01       		.byte	0x1
 27579 1022 3903     		.2byte	0x339
 27580 1024 EB000000 		.4byte	0xeb
 27581 1028 02       		.uleb128 0x2
 27582 1029 91       		.byte	0x91
 27583 102a 50       		.sleb128 -48
 27584 102b 22       		.uleb128 0x22
 27585 102c B50C0000 		.4byte	.LASF225
 27586 1030 01       		.byte	0x1
 27587 1031 3B03     		.2byte	0x33b
 27588 1033 97000000 		.4byte	0x97
 27589 1037 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 595


 27590 1038 91       		.byte	0x91
 27591 1039 65       		.sleb128 -27
 27592 103a 22       		.uleb128 0x22
 27593 103b F4000000 		.4byte	.LASF226
 27594 103f 01       		.byte	0x1
 27595 1040 3C03     		.2byte	0x33c
 27596 1042 97000000 		.4byte	0x97
 27597 1046 02       		.uleb128 0x2
 27598 1047 91       		.byte	0x91
 27599 1048 64       		.sleb128 -28
 27600 1049 22       		.uleb128 0x22
 27601 104a D2020000 		.4byte	.LASF232
 27602 104e 01       		.byte	0x1
 27603 104f 3F03     		.2byte	0x33f
 27604 1051 50110000 		.4byte	0x1150
 27605 1055 02       		.uleb128 0x2
 27606 1056 91       		.byte	0x91
 27607 1057 68       		.sleb128 -24
 27608 1058 22       		.uleb128 0x22
 27609 1059 050C0000 		.4byte	.LASF207
 27610 105d 01       		.byte	0x1
 27611 105e 4703     		.2byte	0x347
 27612 1060 56110000 		.4byte	0x1156
 27613 1064 03       		.uleb128 0x3
 27614 1065 91       		.byte	0x91
 27615 1066 A07D     		.sleb128 -352
 27616 1068 22       		.uleb128 0x22
 27617 1069 66120000 		.4byte	.LASF208
 27618 106d 01       		.byte	0x1
 27619 106e 9B03     		.2byte	0x39b
 27620 1070 66110000 		.4byte	0x1166
 27621 1074 03       		.uleb128 0x3
 27622 1075 91       		.byte	0x91
 27623 1076 D47C     		.sleb128 -428
 27624 1078 22       		.uleb128 0x22
 27625 1079 BC020000 		.4byte	.LASF209
 27626 107d 01       		.byte	0x1
 27627 107e B303     		.2byte	0x3b3
 27628 1080 66110000 		.4byte	0x1166
 27629 1084 03       		.uleb128 0x3
 27630 1085 91       		.byte	0x91
 27631 1086 887C     		.sleb128 -504
 27632 1088 22       		.uleb128 0x22
 27633 1089 660B0000 		.4byte	.LASF210
 27634 108d 01       		.byte	0x1
 27635 108e CB03     		.2byte	0x3cb
 27636 1090 66110000 		.4byte	0x1166
 27637 1094 03       		.uleb128 0x3
 27638 1095 91       		.byte	0x91
 27639 1096 BC7B     		.sleb128 -580
 27640 1098 22       		.uleb128 0x22
 27641 1099 3C070000 		.4byte	.LASF212
 27642 109d 01       		.byte	0x1
 27643 109e E303     		.2byte	0x3e3
 27644 10a0 76110000 		.4byte	0x1176
 27645 10a4 03       		.uleb128 0x3
 27646 10a5 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 596


 27647 10a6 8C79     		.sleb128 -884
 27648 10a8 22       		.uleb128 0x22
 27649 10a9 E5120000 		.4byte	.LASF233
 27650 10ad 01       		.byte	0x1
 27651 10ae FC03     		.2byte	0x3fc
 27652 10b0 86110000 		.4byte	0x1186
 27653 10b4 03       		.uleb128 0x3
 27654 10b5 91       		.byte	0x91
 27655 10b6 9478     		.sleb128 -1004
 27656 10b8 22       		.uleb128 0x22
 27657 10b9 C0070000 		.4byte	.LASF214
 27658 10bd 01       		.byte	0x1
 27659 10be FF03     		.2byte	0x3ff
 27660 10c0 96110000 		.4byte	0x1196
 27661 10c4 03       		.uleb128 0x3
 27662 10c5 91       		.byte	0x91
 27663 10c6 EC77     		.sleb128 -1044
 27664 10c8 22       		.uleb128 0x22
 27665 10c9 B5110000 		.4byte	.LASF211
 27666 10cd 01       		.byte	0x1
 27667 10ce 0C04     		.2byte	0x40c
 27668 10d0 A6110000 		.4byte	0x11a6
 27669 10d4 03       		.uleb128 0x3
 27670 10d5 91       		.byte	0x91
 27671 10d6 CC77     		.sleb128 -1076
 27672 10d8 22       		.uleb128 0x22
 27673 10d9 0B0C0000 		.4byte	.LASF234
 27674 10dd 01       		.byte	0x1
 27675 10de 0D04     		.2byte	0x40d
 27676 10e0 B6110000 		.4byte	0x11b6
 27677 10e4 03       		.uleb128 0x3
 27678 10e5 91       		.byte	0x91
 27679 10e6 C077     		.sleb128 -1088
 27680 10e8 22       		.uleb128 0x22
 27681 10e9 500B0000 		.4byte	.LASF235
 27682 10ed 01       		.byte	0x1
 27683 10ee 0E04     		.2byte	0x40e
 27684 10f0 C6110000 		.4byte	0x11c6
 27685 10f4 03       		.uleb128 0x3
 27686 10f5 91       		.byte	0x91
 27687 10f6 AC77     		.sleb128 -1108
 27688 10f8 22       		.uleb128 0x22
 27689 10f9 240D0000 		.4byte	.LASF236
 27690 10fd 01       		.byte	0x1
 27691 10fe 0F04     		.2byte	0x40f
 27692 1100 97000000 		.4byte	0x97
 27693 1104 02       		.uleb128 0x2
 27694 1105 91       		.byte	0x91
 27695 1106 63       		.sleb128 -29
 27696 1107 22       		.uleb128 0x22
 27697 1108 040A0000 		.4byte	.LASF213
 27698 110c 01       		.byte	0x1
 27699 110d 1804     		.2byte	0x418
 27700 110f 66110000 		.4byte	0x1166
 27701 1113 03       		.uleb128 0x3
 27702 1114 91       		.byte	0x91
 27703 1115 E076     		.sleb128 -1184
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 597


 27704 1117 22       		.uleb128 0x22
 27705 1118 0C130000 		.4byte	.LASF237
 27706 111c 01       		.byte	0x1
 27707 111d 2304     		.2byte	0x423
 27708 111f 66110000 		.4byte	0x1166
 27709 1123 03       		.uleb128 0x3
 27710 1124 91       		.byte	0x91
 27711 1125 9476     		.sleb128 -1260
 27712 1127 1E       		.uleb128 0x1e
 27713 1128 2A170000 		.4byte	.LBB14
 27714 112c 86000000 		.4byte	.LBE14-.LBB14
 27715 1130 25       		.uleb128 0x25
 27716 1131 69647800 		.ascii	"idx\000"
 27717 1135 01       		.byte	0x1
 27718 1136 8C04     		.2byte	0x48c
 27719 1138 97000000 		.4byte	0x97
 27720 113c 02       		.uleb128 0x2
 27721 113d 91       		.byte	0x91
 27722 113e 67       		.sleb128 -25
 27723 113f 22       		.uleb128 0x22
 27724 1140 BA040000 		.4byte	.LASF238
 27725 1144 01       		.byte	0x1
 27726 1145 8C04     		.2byte	0x48c
 27727 1147 97000000 		.4byte	0x97
 27728 114b 02       		.uleb128 0x2
 27729 114c 91       		.byte	0x91
 27730 114d 66       		.sleb128 -26
 27731 114e 00       		.byte	0
 27732 114f 00       		.byte	0
 27733 1150 07       		.uleb128 0x7
 27734 1151 04       		.byte	0x4
 27735 1152 5C0A0000 		.4byte	0xa5c
 27736 1156 09       		.uleb128 0x9
 27737 1157 550F0000 		.4byte	0xf55
 27738 115b 66110000 		.4byte	0x1166
 27739 115f 0A       		.uleb128 0xa
 27740 1160 18010000 		.4byte	0x118
 27741 1164 4B       		.byte	0x4b
 27742 1165 00       		.byte	0
 27743 1166 09       		.uleb128 0x9
 27744 1167 97000000 		.4byte	0x97
 27745 116b 76110000 		.4byte	0x1176
 27746 116f 0A       		.uleb128 0xa
 27747 1170 18010000 		.4byte	0x118
 27748 1174 4B       		.byte	0x4b
 27749 1175 00       		.byte	0
 27750 1176 09       		.uleb128 0x9
 27751 1177 25010000 		.4byte	0x125
 27752 117b 86110000 		.4byte	0x1186
 27753 117f 0A       		.uleb128 0xa
 27754 1180 18010000 		.4byte	0x118
 27755 1184 4B       		.byte	0x4b
 27756 1185 00       		.byte	0
 27757 1186 09       		.uleb128 0x9
 27758 1187 F9000000 		.4byte	0xf9
 27759 118b 96110000 		.4byte	0x1196
 27760 118f 0A       		.uleb128 0xa
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 598


 27761 1190 18010000 		.4byte	0x118
 27762 1194 75       		.byte	0x75
 27763 1195 00       		.byte	0
 27764 1196 09       		.uleb128 0x9
 27765 1197 25010000 		.4byte	0x125
 27766 119b A6110000 		.4byte	0x11a6
 27767 119f 0A       		.uleb128 0xa
 27768 11a0 18010000 		.4byte	0x118
 27769 11a4 09       		.byte	0x9
 27770 11a5 00       		.byte	0
 27771 11a6 09       		.uleb128 0x9
 27772 11a7 97000000 		.4byte	0x97
 27773 11ab B6110000 		.4byte	0x11b6
 27774 11af 0A       		.uleb128 0xa
 27775 11b0 18010000 		.4byte	0x118
 27776 11b4 1C       		.byte	0x1c
 27777 11b5 00       		.byte	0
 27778 11b6 09       		.uleb128 0x9
 27779 11b7 97000000 		.4byte	0x97
 27780 11bb C6110000 		.4byte	0x11c6
 27781 11bf 0A       		.uleb128 0xa
 27782 11c0 18010000 		.4byte	0x118
 27783 11c4 08       		.byte	0x8
 27784 11c5 00       		.byte	0
 27785 11c6 09       		.uleb128 0x9
 27786 11c7 97000000 		.4byte	0x97
 27787 11cb D6110000 		.4byte	0x11d6
 27788 11cf 0A       		.uleb128 0xa
 27789 11d0 18010000 		.4byte	0x118
 27790 11d4 11       		.byte	0x11
 27791 11d5 00       		.byte	0
 27792 11d6 21       		.uleb128 0x21
 27793 11d7 53030000 		.4byte	.LASF239
 27794 11db 01       		.byte	0x1
 27795 11dc 9D04     		.2byte	0x49d
 27796 11de 00000000 		.4byte	.LFB69
 27797 11e2 18140000 		.4byte	.LFE69-.LFB69
 27798 11e6 01       		.uleb128 0x1
 27799 11e7 9C       		.byte	0x9c
 27800 11e8 78120000 		.4byte	0x1278
 27801 11ec 24       		.uleb128 0x24
 27802 11ed 34060000 		.4byte	.LASF230
 27803 11f1 01       		.byte	0x1
 27804 11f2 9D04     		.2byte	0x49d
 27805 11f4 A3000000 		.4byte	0xa3
 27806 11f8 02       		.uleb128 0x2
 27807 11f9 91       		.byte	0x91
 27808 11fa 56       		.sleb128 -42
 27809 11fb 25       		.uleb128 0x25
 27810 11fc 6900     		.ascii	"i\000"
 27811 11fe 01       		.byte	0x1
 27812 11ff 9F04     		.2byte	0x49f
 27813 1201 97000000 		.4byte	0x97
 27814 1205 02       		.uleb128 0x2
 27815 1206 91       		.byte	0x91
 27816 1207 67       		.sleb128 -25
 27817 1208 25       		.uleb128 0x25
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 599


 27818 1209 6A00     		.ascii	"j\000"
 27819 120b 01       		.byte	0x1
 27820 120c 9F04     		.2byte	0x49f
 27821 120e 97000000 		.4byte	0x97
 27822 1212 02       		.uleb128 0x2
 27823 1213 91       		.byte	0x91
 27824 1214 66       		.sleb128 -26
 27825 1215 22       		.uleb128 0x22
 27826 1216 710B0000 		.4byte	.LASF240
 27827 121a 01       		.byte	0x1
 27828 121b A004     		.2byte	0x4a0
 27829 121d 97000000 		.4byte	0x97
 27830 1221 02       		.uleb128 0x2
 27831 1222 91       		.byte	0x91
 27832 1223 62       		.sleb128 -30
 27833 1224 22       		.uleb128 0x22
 27834 1225 9D110000 		.4byte	.LASF220
 27835 1229 01       		.byte	0x1
 27836 122a A104     		.2byte	0x4a1
 27837 122c EB000000 		.4byte	0xeb
 27838 1230 02       		.uleb128 0x2
 27839 1231 91       		.byte	0x91
 27840 1232 5C       		.sleb128 -36
 27841 1233 22       		.uleb128 0x22
 27842 1234 2C030000 		.4byte	.LASF241
 27843 1238 01       		.byte	0x1
 27844 1239 A104     		.2byte	0x4a1
 27845 123b EB000000 		.4byte	0xeb
 27846 123f 02       		.uleb128 0x2
 27847 1240 91       		.byte	0x91
 27848 1241 58       		.sleb128 -40
 27849 1242 22       		.uleb128 0x22
 27850 1243 B50C0000 		.4byte	.LASF225
 27851 1247 01       		.byte	0x1
 27852 1248 A304     		.2byte	0x4a3
 27853 124a 97000000 		.4byte	0x97
 27854 124e 02       		.uleb128 0x2
 27855 124f 91       		.byte	0x91
 27856 1250 64       		.sleb128 -28
 27857 1251 22       		.uleb128 0x22
 27858 1252 F4000000 		.4byte	.LASF226
 27859 1256 01       		.byte	0x1
 27860 1257 A404     		.2byte	0x4a4
 27861 1259 97000000 		.4byte	0x97
 27862 125d 02       		.uleb128 0x2
 27863 125e 91       		.byte	0x91
 27864 125f 63       		.sleb128 -29
 27865 1260 1E       		.uleb128 0x1e
 27866 1261 F40A0000 		.4byte	.LBB15
 27867 1265 26000000 		.4byte	.LBE15-.LBB15
 27868 1269 25       		.uleb128 0x25
 27869 126a 6900     		.ascii	"i\000"
 27870 126c 01       		.byte	0x1
 27871 126d 4B05     		.2byte	0x54b
 27872 126f 97000000 		.4byte	0x97
 27873 1273 02       		.uleb128 0x2
 27874 1274 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 600


 27875 1275 65       		.sleb128 -27
 27876 1276 00       		.byte	0
 27877 1277 00       		.byte	0
 27878 1278 21       		.uleb128 0x21
 27879 1279 4B080000 		.4byte	.LASF242
 27880 127d 01       		.byte	0x1
 27881 127e E405     		.2byte	0x5e4
 27882 1280 00000000 		.4byte	.LFB70
 27883 1284 F40D0000 		.4byte	.LFE70-.LFB70
 27884 1288 01       		.uleb128 0x1
 27885 1289 9C       		.byte	0x9c
 27886 128a 07140000 		.4byte	0x1407
 27887 128e 24       		.uleb128 0x24
 27888 128f 34060000 		.4byte	.LASF230
 27889 1293 01       		.byte	0x1
 27890 1294 E405     		.2byte	0x5e4
 27891 1296 A3000000 		.4byte	0xa3
 27892 129a 03       		.uleb128 0x3
 27893 129b 91       		.byte	0x91
 27894 129c CE72     		.sleb128 -1714
 27895 129e 22       		.uleb128 0x22
 27896 129f 56050000 		.4byte	.LASF215
 27897 12a3 01       		.byte	0x1
 27898 12a4 E705     		.2byte	0x5e7
 27899 12a6 07140000 		.4byte	0x1407
 27900 12aa 03       		.uleb128 0x3
 27901 12ab 91       		.byte	0x91
 27902 12ac DC74     		.sleb128 -1444
 27903 12ae 22       		.uleb128 0x22
 27904 12af 4C100000 		.4byte	.LASF243
 27905 12b3 01       		.byte	0x1
 27906 12b4 EE05     		.2byte	0x5ee
 27907 12b6 A3000000 		.4byte	0xa3
 27908 12ba 02       		.uleb128 0x2
 27909 12bb 91       		.byte	0x91
 27910 12bc 62       		.sleb128 -30
 27911 12bd 22       		.uleb128 0x22
 27912 12be CE040000 		.4byte	.LASF244
 27913 12c2 01       		.byte	0x1
 27914 12c3 EF05     		.2byte	0x5ef
 27915 12c5 A3000000 		.4byte	0xa3
 27916 12c9 02       		.uleb128 0x2
 27917 12ca 91       		.byte	0x91
 27918 12cb 6E       		.sleb128 -18
 27919 12cc 22       		.uleb128 0x22
 27920 12cd 6C080000 		.4byte	.LASF245
 27921 12d1 01       		.byte	0x1
 27922 12d2 F005     		.2byte	0x5f0
 27923 12d4 A3000000 		.4byte	0xa3
 27924 12d8 02       		.uleb128 0x2
 27925 12d9 91       		.byte	0x91
 27926 12da 60       		.sleb128 -32
 27927 12db 22       		.uleb128 0x22
 27928 12dc EB070000 		.4byte	.LASF246
 27929 12e0 01       		.byte	0x1
 27930 12e1 F105     		.2byte	0x5f1
 27931 12e3 A3000000 		.4byte	0xa3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 601


 27932 12e7 02       		.uleb128 0x2
 27933 12e8 91       		.byte	0x91
 27934 12e9 5E       		.sleb128 -34
 27935 12ea 25       		.uleb128 0x25
 27936 12eb 6900     		.ascii	"i\000"
 27937 12ed 01       		.byte	0x1
 27938 12ee F905     		.2byte	0x5f9
 27939 12f0 A3000000 		.4byte	0xa3
 27940 12f4 02       		.uleb128 0x2
 27941 12f5 91       		.byte	0x91
 27942 12f6 6C       		.sleb128 -20
 27943 12f7 25       		.uleb128 0x25
 27944 12f8 6A00     		.ascii	"j\000"
 27945 12fa 01       		.byte	0x1
 27946 12fb F905     		.2byte	0x5f9
 27947 12fd A3000000 		.4byte	0xa3
 27948 1301 02       		.uleb128 0x2
 27949 1302 91       		.byte	0x91
 27950 1303 6A       		.sleb128 -22
 27951 1304 25       		.uleb128 0x25
 27952 1305 6B00     		.ascii	"k\000"
 27953 1307 01       		.byte	0x1
 27954 1308 F905     		.2byte	0x5f9
 27955 130a A3000000 		.4byte	0xa3
 27956 130e 02       		.uleb128 0x2
 27957 130f 91       		.byte	0x91
 27958 1310 68       		.sleb128 -24
 27959 1311 25       		.uleb128 0x25
 27960 1312 6800     		.ascii	"h\000"
 27961 1314 01       		.byte	0x1
 27962 1315 F905     		.2byte	0x5f9
 27963 1317 A3000000 		.4byte	0xa3
 27964 131b 02       		.uleb128 0x2
 27965 131c 91       		.byte	0x91
 27966 131d 66       		.sleb128 -26
 27967 131e 22       		.uleb128 0x22
 27968 131f C3040000 		.4byte	.LASF247
 27969 1323 01       		.byte	0x1
 27970 1324 FA05     		.2byte	0x5fa
 27971 1326 A3000000 		.4byte	0xa3
 27972 132a 02       		.uleb128 0x2
 27973 132b 91       		.byte	0x91
 27974 132c 5C       		.sleb128 -36
 27975 132d 22       		.uleb128 0x22
 27976 132e CA0C0000 		.4byte	.LASF248
 27977 1332 01       		.byte	0x1
 27978 1333 FD05     		.2byte	0x5fd
 27979 1335 30010000 		.4byte	0x130
 27980 1339 03       		.uleb128 0x3
 27981 133a 91       		.byte	0x91
 27982 133b C074     		.sleb128 -1472
 27983 133d 22       		.uleb128 0x22
 27984 133e 13100000 		.4byte	.LASF249
 27985 1342 01       		.byte	0x1
 27986 1343 FE05     		.2byte	0x5fe
 27987 1345 18140000 		.4byte	0x1418
 27988 1349 03       		.uleb128 0x3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 602


 27989 134a 91       		.byte	0x91
 27990 134b B474     		.sleb128 -1484
 27991 134d 22       		.uleb128 0x22
 27992 134e 87060000 		.4byte	.LASF250
 27993 1352 01       		.byte	0x1
 27994 1353 FF05     		.2byte	0x5ff
 27995 1355 28140000 		.4byte	0x1428
 27996 1359 03       		.uleb128 0x3
 27997 135a 91       		.byte	0x91
 27998 135b A074     		.sleb128 -1504
 27999 135d 22       		.uleb128 0x22
 28000 135e 09000000 		.4byte	.LASF251
 28001 1362 01       		.byte	0x1
 28002 1363 0006     		.2byte	0x600
 28003 1365 38140000 		.4byte	0x1438
 28004 1369 03       		.uleb128 0x3
 28005 136a 91       		.byte	0x91
 28006 136b 9074     		.sleb128 -1520
 28007 136d 22       		.uleb128 0x22
 28008 136e 9D0D0000 		.4byte	.LASF252
 28009 1372 01       		.byte	0x1
 28010 1373 0106     		.2byte	0x601
 28011 1375 48140000 		.4byte	0x1448
 28012 1379 03       		.uleb128 0x3
 28013 137a 91       		.byte	0x91
 28014 137b E473     		.sleb128 -1564
 28015 137d 22       		.uleb128 0x22
 28016 137e D5010000 		.4byte	.LASF253
 28017 1382 01       		.byte	0x1
 28018 1383 0206     		.2byte	0x602
 28019 1385 30010000 		.4byte	0x130
 28020 1389 03       		.uleb128 0x3
 28021 138a 91       		.byte	0x91
 28022 138b C873     		.sleb128 -1592
 28023 138d 22       		.uleb128 0x22
 28024 138e 65010000 		.4byte	.LASF254
 28025 1392 01       		.byte	0x1
 28026 1393 0506     		.2byte	0x605
 28027 1395 97000000 		.4byte	0x97
 28028 1399 02       		.uleb128 0x2
 28029 139a 91       		.byte	0x91
 28030 139b 5B       		.sleb128 -37
 28031 139c 22       		.uleb128 0x22
 28032 139d 39040000 		.4byte	.LASF255
 28033 13a1 01       		.byte	0x1
 28034 13a2 0606     		.2byte	0x606
 28035 13a4 97000000 		.4byte	0x97
 28036 13a8 02       		.uleb128 0x2
 28037 13a9 91       		.byte	0x91
 28038 13aa 5A       		.sleb128 -38
 28039 13ab 22       		.uleb128 0x22
 28040 13ac C40F0000 		.4byte	.LASF256
 28041 13b0 01       		.byte	0x1
 28042 13b1 0706     		.2byte	0x607
 28043 13b3 97000000 		.4byte	0x97
 28044 13b7 02       		.uleb128 0x2
 28045 13b8 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 603


 28046 13b9 59       		.sleb128 -39
 28047 13ba 22       		.uleb128 0x22
 28048 13bb 3A100000 		.4byte	.LASF257
 28049 13bf 01       		.byte	0x1
 28050 13c0 0806     		.2byte	0x608
 28051 13c2 97000000 		.4byte	0x97
 28052 13c6 02       		.uleb128 0x2
 28053 13c7 91       		.byte	0x91
 28054 13c8 58       		.sleb128 -40
 28055 13c9 22       		.uleb128 0x22
 28056 13ca 47040000 		.4byte	.LASF258
 28057 13ce 01       		.byte	0x1
 28058 13cf 0906     		.2byte	0x609
 28059 13d1 97000000 		.4byte	0x97
 28060 13d5 02       		.uleb128 0x2
 28061 13d6 91       		.byte	0x91
 28062 13d7 57       		.sleb128 -41
 28063 13d8 22       		.uleb128 0x22
 28064 13d9 AE000000 		.4byte	.LASF259
 28065 13dd 01       		.byte	0x1
 28066 13de 0A06     		.2byte	0x60a
 28067 13e0 97000000 		.4byte	0x97
 28068 13e4 02       		.uleb128 0x2
 28069 13e5 91       		.byte	0x91
 28070 13e6 65       		.sleb128 -27
 28071 13e7 22       		.uleb128 0x22
 28072 13e8 E5120000 		.4byte	.LASF233
 28073 13ec 01       		.byte	0x1
 28074 13ed 0C06     		.2byte	0x60c
 28075 13ef 86110000 		.4byte	0x1186
 28076 13f3 03       		.uleb128 0x3
 28077 13f4 91       		.byte	0x91
 28078 13f5 D072     		.sleb128 -1712
 28079 13f7 22       		.uleb128 0x22
 28080 13f8 40030000 		.4byte	.LASF260
 28081 13fc 01       		.byte	0x1
 28082 13fd 0D06     		.2byte	0x60d
 28083 13ff 97000000 		.4byte	0x97
 28084 1403 02       		.uleb128 0x2
 28085 1404 91       		.byte	0x91
 28086 1405 56       		.sleb128 -42
 28087 1406 00       		.byte	0
 28088 1407 09       		.uleb128 0x9
 28089 1408 97000000 		.4byte	0x97
 28090 140c 18140000 		.4byte	0x1418
 28091 1410 23       		.uleb128 0x23
 28092 1411 18010000 		.4byte	0x118
 28093 1415 7805     		.2byte	0x578
 28094 1417 00       		.byte	0
 28095 1418 09       		.uleb128 0x9
 28096 1419 F9000000 		.4byte	0xf9
 28097 141d 28140000 		.4byte	0x1428
 28098 1421 0A       		.uleb128 0xa
 28099 1422 18010000 		.4byte	0x118
 28100 1426 0A       		.byte	0xa
 28101 1427 00       		.byte	0
 28102 1428 09       		.uleb128 0x9
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 604


 28103 1429 F9000000 		.4byte	0xf9
 28104 142d 38140000 		.4byte	0x1438
 28105 1431 0A       		.uleb128 0xa
 28106 1432 18010000 		.4byte	0x118
 28107 1436 13       		.byte	0x13
 28108 1437 00       		.byte	0
 28109 1438 09       		.uleb128 0x9
 28110 1439 F9000000 		.4byte	0xf9
 28111 143d 48140000 		.4byte	0x1448
 28112 1441 0A       		.uleb128 0xa
 28113 1442 18010000 		.4byte	0x118
 28114 1446 0F       		.byte	0xf
 28115 1447 00       		.byte	0
 28116 1448 09       		.uleb128 0x9
 28117 1449 F9000000 		.4byte	0xf9
 28118 144d 58140000 		.4byte	0x1458
 28119 1451 0A       		.uleb128 0xa
 28120 1452 18010000 		.4byte	0x118
 28121 1456 29       		.byte	0x29
 28122 1457 00       		.byte	0
 28123 1458 26       		.uleb128 0x26
 28124 1459 9A020000 		.4byte	.LASF291
 28125 145d 01       		.byte	0x1
 28126 145e D306     		.2byte	0x6d3
 28127 1460 00000000 		.4byte	.LFB71
 28128 1464 84000000 		.4byte	.LFE71-.LFB71
 28129 1468 01       		.uleb128 0x1
 28130 1469 9C       		.byte	0x9c
 28131 146a 89140000 		.4byte	0x1489
 28132 146e 25       		.uleb128 0x25
 28133 146f 6900     		.ascii	"i\000"
 28134 1471 01       		.byte	0x1
 28135 1472 D506     		.2byte	0x6d5
 28136 1474 97000000 		.4byte	0x97
 28137 1478 02       		.uleb128 0x2
 28138 1479 91       		.byte	0x91
 28139 147a 6F       		.sleb128 -17
 28140 147b 25       		.uleb128 0x25
 28141 147c 6A00     		.ascii	"j\000"
 28142 147e 01       		.byte	0x1
 28143 147f D506     		.2byte	0x6d5
 28144 1481 97000000 		.4byte	0x97
 28145 1485 02       		.uleb128 0x2
 28146 1486 91       		.byte	0x91
 28147 1487 6E       		.sleb128 -18
 28148 1488 00       		.byte	0
 28149 1489 21       		.uleb128 0x21
 28150 148a D3000000 		.4byte	.LASF261
 28151 148e 01       		.byte	0x1
 28152 148f E606     		.2byte	0x6e6
 28153 1491 00000000 		.4byte	.LFB72
 28154 1495 681B0000 		.4byte	.LFE72-.LFB72
 28155 1499 01       		.uleb128 0x1
 28156 149a 9C       		.byte	0x9c
 28157 149b 34150000 		.4byte	0x1534
 28158 149f 24       		.uleb128 0x24
 28159 14a0 D40C0000 		.4byte	.LASF262
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 605


 28160 14a4 01       		.byte	0x1
 28161 14a5 E606     		.2byte	0x6e6
 28162 14a7 1F010000 		.4byte	0x11f
 28163 14ab 03       		.uleb128 0x3
 28164 14ac 91       		.byte	0x91
 28165 14ad D47E     		.sleb128 -172
 28166 14af 25       		.uleb128 0x25
 28167 14b0 6900     		.ascii	"i\000"
 28168 14b2 01       		.byte	0x1
 28169 14b3 E806     		.2byte	0x6e8
 28170 14b5 73000000 		.4byte	0x73
 28171 14b9 02       		.uleb128 0x2
 28172 14ba 91       		.byte	0x91
 28173 14bb 54       		.sleb128 -44
 28174 14bc 22       		.uleb128 0x22
 28175 14bd D2020000 		.4byte	.LASF232
 28176 14c1 01       		.byte	0x1
 28177 14c2 EA06     		.2byte	0x6ea
 28178 14c4 50110000 		.4byte	0x1150
 28179 14c8 02       		.uleb128 0x2
 28180 14c9 91       		.byte	0x91
 28181 14ca 4C       		.sleb128 -52
 28182 14cb 1E       		.uleb128 0x1e
 28183 14cc 1C000000 		.4byte	.LBB16
 28184 14d0 2A1B0000 		.4byte	.LBE16-.LBB16
 28185 14d4 25       		.uleb128 0x25
 28186 14d5 73747200 		.ascii	"str\000"
 28187 14d9 01       		.byte	0x1
 28188 14da ED06     		.2byte	0x6ed
 28189 14dc 34150000 		.4byte	0x1534
 28190 14e0 03       		.uleb128 0x3
 28191 14e1 91       		.byte	0x91
 28192 14e2 DC7E     		.sleb128 -164
 28193 14e4 1E       		.uleb128 0x1e
 28194 14e5 84020000 		.4byte	.LBB17
 28195 14e9 70100000 		.4byte	.LBE17-.LBB17
 28196 14ed 25       		.uleb128 0x25
 28197 14ee 6B00     		.ascii	"k\000"
 28198 14f0 01       		.byte	0x1
 28199 14f1 1B07     		.2byte	0x71b
 28200 14f3 97000000 		.4byte	0x97
 28201 14f7 02       		.uleb128 0x2
 28202 14f8 91       		.byte	0x91
 28203 14f9 53       		.sleb128 -45
 28204 14fa 1E       		.uleb128 0x1e
 28205 14fb 8E020000 		.4byte	.LBB18
 28206 14ff 4A100000 		.4byte	.LBE18-.LBB18
 28207 1503 22       		.uleb128 0x22
 28208 1504 B50C0000 		.4byte	.LASF225
 28209 1508 01       		.byte	0x1
 28210 1509 1D07     		.2byte	0x71d
 28211 150b 97000000 		.4byte	0x97
 28212 150f 02       		.uleb128 0x2
 28213 1510 91       		.byte	0x91
 28214 1511 4B       		.sleb128 -53
 28215 1512 25       		.uleb128 0x25
 28216 1513 4D4F5400 		.ascii	"MOT\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 606


 28217 1517 01       		.byte	0x1
 28218 1518 1E07     		.2byte	0x71e
 28219 151a 44150000 		.4byte	0x1544
 28220 151e 02       		.uleb128 0x2
 28221 151f 91       		.byte	0x91
 28222 1520 44       		.sleb128 -60
 28223 1521 22       		.uleb128 0x22
 28224 1522 56120000 		.4byte	.LASF263
 28225 1526 01       		.byte	0x1
 28226 1527 1F07     		.2byte	0x71f
 28227 1529 97000000 		.4byte	0x97
 28228 152d 02       		.uleb128 0x2
 28229 152e 91       		.byte	0x91
 28230 152f 43       		.sleb128 -61
 28231 1530 00       		.byte	0
 28232 1531 00       		.byte	0
 28233 1532 00       		.byte	0
 28234 1533 00       		.byte	0
 28235 1534 09       		.uleb128 0x9
 28236 1535 F9000000 		.4byte	0xf9
 28237 1539 44150000 		.4byte	0x1544
 28238 153d 0A       		.uleb128 0xa
 28239 153e 18010000 		.4byte	0x118
 28240 1542 63       		.byte	0x63
 28241 1543 00       		.byte	0
 28242 1544 07       		.uleb128 0x7
 28243 1545 04       		.byte	0x4
 28244 1546 B1050000 		.4byte	0x5b1
 28245 154a 21       		.uleb128 0x21
 28246 154b D00D0000 		.4byte	.LASF264
 28247 154f 01       		.byte	0x1
 28248 1550 B008     		.2byte	0x8b0
 28249 1552 00000000 		.4byte	.LFB73
 28250 1556 B4030000 		.4byte	.LFE73-.LFB73
 28251 155a 01       		.uleb128 0x1
 28252 155b 9C       		.byte	0x9c
 28253 155c CA150000 		.4byte	0x15ca
 28254 1560 24       		.uleb128 0x24
 28255 1561 D40C0000 		.4byte	.LASF262
 28256 1565 01       		.byte	0x1
 28257 1566 B008     		.2byte	0x8b0
 28258 1568 1F010000 		.4byte	0x11f
 28259 156c 03       		.uleb128 0x3
 28260 156d 91       		.byte	0x91
 28261 156e EC7E     		.sleb128 -148
 28262 1570 25       		.uleb128 0x25
 28263 1571 73747200 		.ascii	"str\000"
 28264 1575 01       		.byte	0x1
 28265 1576 B208     		.2byte	0x8b2
 28266 1578 34150000 		.4byte	0x1534
 28267 157c 03       		.uleb128 0x3
 28268 157d 91       		.byte	0x91
 28269 157e F07E     		.sleb128 -144
 28270 1580 25       		.uleb128 0x25
 28271 1581 6900     		.ascii	"i\000"
 28272 1583 01       		.byte	0x1
 28273 1584 B308     		.2byte	0x8b3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 607


 28274 1586 73000000 		.4byte	0x73
 28275 158a 02       		.uleb128 0x2
 28276 158b 91       		.byte	0x91
 28277 158c 64       		.sleb128 -28
 28278 158d 22       		.uleb128 0x22
 28279 158e D6030000 		.4byte	.LASF265
 28280 1592 01       		.byte	0x1
 28281 1593 B408     		.2byte	0x8b4
 28282 1595 73000000 		.4byte	0x73
 28283 1599 02       		.uleb128 0x2
 28284 159a 91       		.byte	0x91
 28285 159b 54       		.sleb128 -44
 28286 159c 22       		.uleb128 0x22
 28287 159d D2020000 		.4byte	.LASF232
 28288 15a1 01       		.byte	0x1
 28289 15a2 B608     		.2byte	0x8b6
 28290 15a4 50110000 		.4byte	0x1150
 28291 15a8 02       		.uleb128 0x2
 28292 15a9 91       		.byte	0x91
 28293 15aa 60       		.sleb128 -32
 28294 15ab 25       		.uleb128 0x25
 28295 15ac 4D4F5400 		.ascii	"MOT\000"
 28296 15b0 01       		.byte	0x1
 28297 15b1 B708     		.2byte	0x8b7
 28298 15b3 44150000 		.4byte	0x1544
 28299 15b7 02       		.uleb128 0x2
 28300 15b8 91       		.byte	0x91
 28301 15b9 5C       		.sleb128 -36
 28302 15ba 22       		.uleb128 0x22
 28303 15bb 56120000 		.4byte	.LASF263
 28304 15bf 01       		.byte	0x1
 28305 15c0 B808     		.2byte	0x8b8
 28306 15c2 97000000 		.4byte	0x97
 28307 15c6 02       		.uleb128 0x2
 28308 15c7 91       		.byte	0x91
 28309 15c8 5B       		.sleb128 -37
 28310 15c9 00       		.byte	0
 28311 15ca 21       		.uleb128 0x21
 28312 15cb 310E0000 		.4byte	.LASF266
 28313 15cf 01       		.byte	0x1
 28314 15d0 F208     		.2byte	0x8f2
 28315 15d2 00000000 		.4byte	.LFB74
 28316 15d6 38120000 		.4byte	.LFE74-.LFB74
 28317 15da 01       		.uleb128 0x1
 28318 15db 9C       		.byte	0x9c
 28319 15dc 6B160000 		.4byte	0x166b
 28320 15e0 24       		.uleb128 0x24
 28321 15e1 D40C0000 		.4byte	.LASF262
 28322 15e5 01       		.byte	0x1
 28323 15e6 F208     		.2byte	0x8f2
 28324 15e8 1F010000 		.4byte	0x11f
 28325 15ec 03       		.uleb128 0x3
 28326 15ed 91       		.byte	0x91
 28327 15ee D47E     		.sleb128 -172
 28328 15f0 25       		.uleb128 0x25
 28329 15f1 73747200 		.ascii	"str\000"
 28330 15f5 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 608


 28331 15f6 F408     		.2byte	0x8f4
 28332 15f8 34150000 		.4byte	0x1534
 28333 15fc 03       		.uleb128 0x3
 28334 15fd 91       		.byte	0x91
 28335 15fe DC7E     		.sleb128 -164
 28336 1600 25       		.uleb128 0x25
 28337 1601 6900     		.ascii	"i\000"
 28338 1603 01       		.byte	0x1
 28339 1604 F508     		.2byte	0x8f5
 28340 1606 73000000 		.4byte	0x73
 28341 160a 02       		.uleb128 0x2
 28342 160b 91       		.byte	0x91
 28343 160c 54       		.sleb128 -44
 28344 160d 22       		.uleb128 0x22
 28345 160e D2020000 		.4byte	.LASF232
 28346 1612 01       		.byte	0x1
 28347 1613 F908     		.2byte	0x8f9
 28348 1615 50110000 		.4byte	0x1150
 28349 1619 02       		.uleb128 0x2
 28350 161a 91       		.byte	0x91
 28351 161b 4C       		.sleb128 -52
 28352 161c 1E       		.uleb128 0x1e
 28353 161d 08010000 		.4byte	.LBB19
 28354 1621 8E0C0000 		.4byte	.LBE19-.LBB19
 28355 1625 25       		.uleb128 0x25
 28356 1626 6B00     		.ascii	"k\000"
 28357 1628 01       		.byte	0x1
 28358 1629 0E09     		.2byte	0x90e
 28359 162b 97000000 		.4byte	0x97
 28360 162f 02       		.uleb128 0x2
 28361 1630 91       		.byte	0x91
 28362 1631 53       		.sleb128 -45
 28363 1632 1E       		.uleb128 0x1e
 28364 1633 12010000 		.4byte	.LBB20
 28365 1637 680C0000 		.4byte	.LBE20-.LBB20
 28366 163b 22       		.uleb128 0x22
 28367 163c B50C0000 		.4byte	.LASF225
 28368 1640 01       		.byte	0x1
 28369 1641 1009     		.2byte	0x910
 28370 1643 97000000 		.4byte	0x97
 28371 1647 02       		.uleb128 0x2
 28372 1648 91       		.byte	0x91
 28373 1649 4B       		.sleb128 -53
 28374 164a 25       		.uleb128 0x25
 28375 164b 4D4F5400 		.ascii	"MOT\000"
 28376 164f 01       		.byte	0x1
 28377 1650 1109     		.2byte	0x911
 28378 1652 44150000 		.4byte	0x1544
 28379 1656 02       		.uleb128 0x2
 28380 1657 91       		.byte	0x91
 28381 1658 44       		.sleb128 -60
 28382 1659 22       		.uleb128 0x22
 28383 165a 56120000 		.4byte	.LASF263
 28384 165e 01       		.byte	0x1
 28385 165f 1209     		.2byte	0x912
 28386 1661 97000000 		.4byte	0x97
 28387 1665 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 609


 28388 1666 91       		.byte	0x91
 28389 1667 43       		.sleb128 -61
 28390 1668 00       		.byte	0
 28391 1669 00       		.byte	0
 28392 166a 00       		.byte	0
 28393 166b 21       		.uleb128 0x21
 28394 166c 8B0A0000 		.4byte	.LASF267
 28395 1670 01       		.byte	0x1
 28396 1671 F609     		.2byte	0x9f6
 28397 1673 00000000 		.4byte	.LFB75
 28398 1677 C8000000 		.4byte	.LFE75-.LFB75
 28399 167b 01       		.uleb128 0x1
 28400 167c 9C       		.byte	0x9c
 28401 167d AF160000 		.4byte	0x16af
 28402 1681 24       		.uleb128 0x24
 28403 1682 D40C0000 		.4byte	.LASF262
 28404 1686 01       		.byte	0x1
 28405 1687 F609     		.2byte	0x9f6
 28406 1689 1F010000 		.4byte	0x11f
 28407 168d 03       		.uleb128 0x3
 28408 168e 91       		.byte	0x91
 28409 168f 847F     		.sleb128 -124
 28410 1691 25       		.uleb128 0x25
 28411 1692 73747200 		.ascii	"str\000"
 28412 1696 01       		.byte	0x1
 28413 1697 F809     		.2byte	0x9f8
 28414 1699 34150000 		.4byte	0x1534
 28415 169d 03       		.uleb128 0x3
 28416 169e 91       		.byte	0x91
 28417 169f 887F     		.sleb128 -120
 28418 16a1 25       		.uleb128 0x25
 28419 16a2 6900     		.ascii	"i\000"
 28420 16a4 01       		.byte	0x1
 28421 16a5 F909     		.2byte	0x9f9
 28422 16a7 73000000 		.4byte	0x73
 28423 16ab 02       		.uleb128 0x2
 28424 16ac 91       		.byte	0x91
 28425 16ad 6C       		.sleb128 -20
 28426 16ae 00       		.byte	0
 28427 16af 21       		.uleb128 0x21
 28428 16b0 E00C0000 		.4byte	.LASF268
 28429 16b4 01       		.byte	0x1
 28430 16b5 0D0A     		.2byte	0xa0d
 28431 16b7 00000000 		.4byte	.LFB76
 28432 16bb 30010000 		.4byte	.LFE76-.LFB76
 28433 16bf 01       		.uleb128 0x1
 28434 16c0 9C       		.byte	0x9c
 28435 16c1 F3160000 		.4byte	0x16f3
 28436 16c5 24       		.uleb128 0x24
 28437 16c6 D40C0000 		.4byte	.LASF262
 28438 16ca 01       		.byte	0x1
 28439 16cb 0D0A     		.2byte	0xa0d
 28440 16cd 1F010000 		.4byte	0x11f
 28441 16d1 03       		.uleb128 0x3
 28442 16d2 91       		.byte	0x91
 28443 16d3 847F     		.sleb128 -124
 28444 16d5 25       		.uleb128 0x25
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 610


 28445 16d6 73747200 		.ascii	"str\000"
 28446 16da 01       		.byte	0x1
 28447 16db 0F0A     		.2byte	0xa0f
 28448 16dd 34150000 		.4byte	0x1534
 28449 16e1 03       		.uleb128 0x3
 28450 16e2 91       		.byte	0x91
 28451 16e3 887F     		.sleb128 -120
 28452 16e5 25       		.uleb128 0x25
 28453 16e6 6900     		.ascii	"i\000"
 28454 16e8 01       		.byte	0x1
 28455 16e9 100A     		.2byte	0xa10
 28456 16eb 73000000 		.4byte	0x73
 28457 16ef 02       		.uleb128 0x2
 28458 16f0 91       		.byte	0x91
 28459 16f1 6C       		.sleb128 -20
 28460 16f2 00       		.byte	0
 28461 16f3 21       		.uleb128 0x21
 28462 16f4 5F130000 		.4byte	.LASF269
 28463 16f8 01       		.byte	0x1
 28464 16f9 340A     		.2byte	0xa34
 28465 16fb 00000000 		.4byte	.LFB77
 28466 16ff 74030000 		.4byte	.LFE77-.LFB77
 28467 1703 01       		.uleb128 0x1
 28468 1704 9C       		.byte	0x9c
 28469 1705 37170000 		.4byte	0x1737
 28470 1709 24       		.uleb128 0x24
 28471 170a D40C0000 		.4byte	.LASF262
 28472 170e 01       		.byte	0x1
 28473 170f 340A     		.2byte	0xa34
 28474 1711 1F010000 		.4byte	0x11f
 28475 1715 03       		.uleb128 0x3
 28476 1716 91       		.byte	0x91
 28477 1717 AC7D     		.sleb128 -340
 28478 1719 25       		.uleb128 0x25
 28479 171a 73747200 		.ascii	"str\000"
 28480 171e 01       		.byte	0x1
 28481 171f 360A     		.2byte	0xa36
 28482 1721 37170000 		.4byte	0x1737
 28483 1725 03       		.uleb128 0x3
 28484 1726 91       		.byte	0x91
 28485 1727 B07D     		.sleb128 -336
 28486 1729 25       		.uleb128 0x25
 28487 172a 6900     		.ascii	"i\000"
 28488 172c 01       		.byte	0x1
 28489 172d 370A     		.2byte	0xa37
 28490 172f 73000000 		.4byte	0x73
 28491 1733 02       		.uleb128 0x2
 28492 1734 91       		.byte	0x91
 28493 1735 5C       		.sleb128 -36
 28494 1736 00       		.byte	0
 28495 1737 09       		.uleb128 0x9
 28496 1738 F9000000 		.4byte	0xf9
 28497 173c 48170000 		.4byte	0x1748
 28498 1740 23       		.uleb128 0x23
 28499 1741 18010000 		.4byte	0x118
 28500 1745 2B01     		.2byte	0x12b
 28501 1747 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 611


 28502 1748 21       		.uleb128 0x21
 28503 1749 FB0D0000 		.4byte	.LASF270
 28504 174d 01       		.byte	0x1
 28505 174e 5F0A     		.2byte	0xa5f
 28506 1750 00000000 		.4byte	.LFB78
 28507 1754 84000000 		.4byte	.LFE78-.LFB78
 28508 1758 01       		.uleb128 0x1
 28509 1759 9C       		.byte	0x9c
 28510 175a 9B170000 		.4byte	0x179b
 28511 175e 24       		.uleb128 0x24
 28512 175f 56050000 		.4byte	.LASF215
 28513 1763 01       		.byte	0x1
 28514 1764 5F0A     		.2byte	0xa5f
 28515 1766 550F0000 		.4byte	0xf55
 28516 176a 02       		.uleb128 0x2
 28517 176b 91       		.byte	0x91
 28518 176c 6C       		.sleb128 -20
 28519 176d 24       		.uleb128 0x24
 28520 176e C5000000 		.4byte	.LASF216
 28521 1772 01       		.byte	0x1
 28522 1773 5F0A     		.2byte	0xa5f
 28523 1775 A3000000 		.4byte	0xa3
 28524 1779 02       		.uleb128 0x2
 28525 177a 91       		.byte	0x91
 28526 177b 6A       		.sleb128 -22
 28527 177c 24       		.uleb128 0x24
 28528 177d 630E0000 		.4byte	.LASF271
 28529 1781 01       		.byte	0x1
 28530 1782 5F0A     		.2byte	0xa5f
 28531 1784 97000000 		.4byte	0x97
 28532 1788 02       		.uleb128 0x2
 28533 1789 91       		.byte	0x91
 28534 178a 69       		.sleb128 -23
 28535 178b 22       		.uleb128 0x22
 28536 178c 34060000 		.4byte	.LASF230
 28537 1790 01       		.byte	0x1
 28538 1791 610A     		.2byte	0xa61
 28539 1793 A3000000 		.4byte	0xa3
 28540 1797 02       		.uleb128 0x2
 28541 1798 91       		.byte	0x91
 28542 1799 76       		.sleb128 -10
 28543 179a 00       		.byte	0
 28544 179b 21       		.uleb128 0x21
 28545 179c 71050000 		.4byte	.LASF272
 28546 17a0 01       		.byte	0x1
 28547 17a1 7B0A     		.2byte	0xa7b
 28548 17a3 00000000 		.4byte	.LFB79
 28549 17a7 88000000 		.4byte	.LFE79-.LFB79
 28550 17ab 01       		.uleb128 0x1
 28551 17ac 9C       		.byte	0x9c
 28552 17ad DF170000 		.4byte	0x17df
 28553 17b1 24       		.uleb128 0x24
 28554 17b2 56050000 		.4byte	.LASF215
 28555 17b6 01       		.byte	0x1
 28556 17b7 7B0A     		.2byte	0xa7b
 28557 17b9 550F0000 		.4byte	0xf55
 28558 17bd 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 612


 28559 17be 91       		.byte	0x91
 28560 17bf 6C       		.sleb128 -20
 28561 17c0 24       		.uleb128 0x24
 28562 17c1 C5000000 		.4byte	.LASF216
 28563 17c5 01       		.byte	0x1
 28564 17c6 7B0A     		.2byte	0xa7b
 28565 17c8 A3000000 		.4byte	0xa3
 28566 17cc 02       		.uleb128 0x2
 28567 17cd 91       		.byte	0x91
 28568 17ce 6A       		.sleb128 -22
 28569 17cf 22       		.uleb128 0x22
 28570 17d0 34060000 		.4byte	.LASF230
 28571 17d4 01       		.byte	0x1
 28572 17d5 7D0A     		.2byte	0xa7d
 28573 17d7 A3000000 		.4byte	0xa3
 28574 17db 02       		.uleb128 0x2
 28575 17dc 91       		.byte	0x91
 28576 17dd 76       		.sleb128 -10
 28577 17de 00       		.byte	0
 28578 17df 21       		.uleb128 0x21
 28579 17e0 FE0A0000 		.4byte	.LASF273
 28580 17e4 01       		.byte	0x1
 28581 17e5 970A     		.2byte	0xa97
 28582 17e7 00000000 		.4byte	.LFB80
 28583 17eb A0000000 		.4byte	.LFE80-.LFB80
 28584 17ef 01       		.uleb128 0x1
 28585 17f0 9C       		.byte	0x9c
 28586 17f1 32180000 		.4byte	0x1832
 28587 17f5 24       		.uleb128 0x24
 28588 17f6 56050000 		.4byte	.LASF215
 28589 17fa 01       		.byte	0x1
 28590 17fb 970A     		.2byte	0xa97
 28591 17fd 550F0000 		.4byte	0xf55
 28592 1801 02       		.uleb128 0x2
 28593 1802 91       		.byte	0x91
 28594 1803 74       		.sleb128 -12
 28595 1804 24       		.uleb128 0x24
 28596 1805 C5000000 		.4byte	.LASF216
 28597 1809 01       		.byte	0x1
 28598 180a 970A     		.2byte	0xa97
 28599 180c A3000000 		.4byte	0xa3
 28600 1810 02       		.uleb128 0x2
 28601 1811 91       		.byte	0x91
 28602 1812 72       		.sleb128 -14
 28603 1813 27       		.uleb128 0x27
 28604 1814 696400   		.ascii	"id\000"
 28605 1817 01       		.byte	0x1
 28606 1818 970A     		.2byte	0xa97
 28607 181a 97000000 		.4byte	0x97
 28608 181e 02       		.uleb128 0x2
 28609 181f 91       		.byte	0x91
 28610 1820 71       		.sleb128 -15
 28611 1821 25       		.uleb128 0x25
 28612 1822 6900     		.ascii	"i\000"
 28613 1824 01       		.byte	0x1
 28614 1825 990A     		.2byte	0xa99
 28615 1827 A3000000 		.4byte	0xa3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 613


 28616 182b 05       		.uleb128 0x5
 28617 182c 03       		.byte	0x3
 28618 182d 00000000 		.4byte	i.11142
 28619 1831 00       		.byte	0
 28620 1832 28       		.uleb128 0x28
 28621 1833 11120000 		.4byte	.LASF279
 28622 1837 01       		.byte	0x1
 28623 1838 B50A     		.2byte	0xab5
 28624 183a 97000000 		.4byte	0x97
 28625 183e 00000000 		.4byte	.LFB81
 28626 1842 3E000000 		.4byte	.LFE81-.LFB81
 28627 1846 01       		.uleb128 0x1
 28628 1847 9C       		.byte	0x9c
 28629 1848 87180000 		.4byte	0x1887
 28630 184c 24       		.uleb128 0x24
 28631 184d 510A0000 		.4byte	.LASF274
 28632 1851 01       		.byte	0x1
 28633 1852 B50A     		.2byte	0xab5
 28634 1854 550F0000 		.4byte	0xf55
 28635 1858 02       		.uleb128 0x2
 28636 1859 91       		.byte	0x91
 28637 185a 6C       		.sleb128 -20
 28638 185b 24       		.uleb128 0x24
 28639 185c 2B050000 		.4byte	.LASF275
 28640 1860 01       		.byte	0x1
 28641 1861 B50A     		.2byte	0xab5
 28642 1863 97000000 		.4byte	0x97
 28643 1867 02       		.uleb128 0x2
 28644 1868 91       		.byte	0x91
 28645 1869 6B       		.sleb128 -21
 28646 186a 25       		.uleb128 0x25
 28647 186b 6900     		.ascii	"i\000"
 28648 186d 01       		.byte	0x1
 28649 186e B70A     		.2byte	0xab7
 28650 1870 97000000 		.4byte	0x97
 28651 1874 02       		.uleb128 0x2
 28652 1875 91       		.byte	0x91
 28653 1876 77       		.sleb128 -9
 28654 1877 22       		.uleb128 0x22
 28655 1878 340C0000 		.4byte	.LASF276
 28656 187c 01       		.byte	0x1
 28657 187d B80A     		.2byte	0xab8
 28658 187f 97000000 		.4byte	0x97
 28659 1883 02       		.uleb128 0x2
 28660 1884 91       		.byte	0x91
 28661 1885 76       		.sleb128 -10
 28662 1886 00       		.byte	0
 28663 1887 21       		.uleb128 0x21
 28664 1888 780A0000 		.4byte	.LASF277
 28665 188c 01       		.byte	0x1
 28666 188d C50A     		.2byte	0xac5
 28667 188f 00000000 		.4byte	.LFB82
 28668 1893 2E000000 		.4byte	.LFE82-.LFB82
 28669 1897 01       		.uleb128 0x1
 28670 1898 9C       		.byte	0x9c
 28671 1899 CB180000 		.4byte	0x18cb
 28672 189d 24       		.uleb128 0x24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 614


 28673 189e 59040000 		.4byte	.LASF278
 28674 18a2 01       		.byte	0x1
 28675 18a3 C50A     		.2byte	0xac5
 28676 18a5 97000000 		.4byte	0x97
 28677 18a9 02       		.uleb128 0x2
 28678 18aa 91       		.byte	0x91
 28679 18ab 6F       		.sleb128 -17
 28680 18ac 22       		.uleb128 0x22
 28681 18ad C5000000 		.4byte	.LASF216
 28682 18b1 01       		.byte	0x1
 28683 18b2 C60A     		.2byte	0xac6
 28684 18b4 73000000 		.4byte	0x73
 28685 18b8 02       		.uleb128 0x2
 28686 18b9 91       		.byte	0x91
 28687 18ba 74       		.sleb128 -12
 28688 18bb 22       		.uleb128 0x22
 28689 18bc 56050000 		.4byte	.LASF215
 28690 18c0 01       		.byte	0x1
 28691 18c1 C70A     		.2byte	0xac7
 28692 18c3 CB180000 		.4byte	0x18cb
 28693 18c7 02       		.uleb128 0x2
 28694 18c8 91       		.byte	0x91
 28695 18c9 70       		.sleb128 -16
 28696 18ca 00       		.byte	0
 28697 18cb 09       		.uleb128 0x9
 28698 18cc 97000000 		.4byte	0x97
 28699 18d0 DB180000 		.4byte	0x18db
 28700 18d4 0A       		.uleb128 0xa
 28701 18d5 18010000 		.4byte	0x118
 28702 18d9 01       		.byte	0x1
 28703 18da 00       		.byte	0
 28704 18db 29       		.uleb128 0x29
 28705 18dc 8A030000 		.4byte	.LASF280
 28706 18e0 01       		.byte	0x1
 28707 18e1 D40A     		.2byte	0xad4
 28708 18e3 97000000 		.4byte	0x97
 28709 18e7 00000000 		.4byte	.LFB83
 28710 18eb 98000000 		.4byte	.LFE83-.LFB83
 28711 18ef 01       		.uleb128 0x1
 28712 18f0 9C       		.byte	0x9c
 28713 18f1 3F190000 		.4byte	0x193f
 28714 18f5 24       		.uleb128 0x24
 28715 18f6 1E050000 		.4byte	.LASF281
 28716 18fa 01       		.byte	0x1
 28717 18fb D40A     		.2byte	0xad4
 28718 18fd 73000000 		.4byte	0x73
 28719 1901 02       		.uleb128 0x2
 28720 1902 91       		.byte	0x91
 28721 1903 64       		.sleb128 -28
 28722 1904 25       		.uleb128 0x25
 28723 1905 6900     		.ascii	"i\000"
 28724 1907 01       		.byte	0x1
 28725 1908 D60A     		.2byte	0xad6
 28726 190a 73000000 		.4byte	0x73
 28727 190e 02       		.uleb128 0x2
 28728 190f 91       		.byte	0x91
 28729 1910 74       		.sleb128 -12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 615


 28730 1911 22       		.uleb128 0x22
 28731 1912 75000000 		.4byte	.LASF282
 28732 1916 01       		.byte	0x1
 28733 1917 D70A     		.2byte	0xad7
 28734 1919 97000000 		.4byte	0x97
 28735 191d 02       		.uleb128 0x2
 28736 191e 91       		.byte	0x91
 28737 191f 6B       		.sleb128 -21
 28738 1920 22       		.uleb128 0x22
 28739 1921 8D050000 		.4byte	.LASF283
 28740 1925 01       		.byte	0x1
 28741 1926 D80A     		.2byte	0xad8
 28742 1928 73000000 		.4byte	0x73
 28743 192c 02       		.uleb128 0x2
 28744 192d 91       		.byte	0x91
 28745 192e 6C       		.sleb128 -20
 28746 192f 22       		.uleb128 0x22
 28747 1930 B2040000 		.4byte	.LASF284
 28748 1934 01       		.byte	0x1
 28749 1935 D90A     		.2byte	0xad9
 28750 1937 97000000 		.4byte	0x97
 28751 193b 02       		.uleb128 0x2
 28752 193c 91       		.byte	0x91
 28753 193d 73       		.sleb128 -13
 28754 193e 00       		.byte	0
 28755 193f 21       		.uleb128 0x21
 28756 1940 6F0D0000 		.4byte	.LASF285
 28757 1944 01       		.byte	0x1
 28758 1945 FE0A     		.2byte	0xafe
 28759 1947 00000000 		.4byte	.LFB84
 28760 194b 80000000 		.4byte	.LFE84-.LFB84
 28761 194f 01       		.uleb128 0x1
 28762 1950 9C       		.byte	0x9c
 28763 1951 63190000 		.4byte	0x1963
 28764 1955 25       		.uleb128 0x25
 28765 1956 6900     		.ascii	"i\000"
 28766 1958 01       		.byte	0x1
 28767 1959 000B     		.2byte	0xb00
 28768 195b A3000000 		.4byte	0xa3
 28769 195f 02       		.uleb128 0x2
 28770 1960 91       		.byte	0x91
 28771 1961 76       		.sleb128 -10
 28772 1962 00       		.byte	0
 28773 1963 29       		.uleb128 0x29
 28774 1964 BF0C0000 		.4byte	.LASF286
 28775 1968 01       		.byte	0x1
 28776 1969 170B     		.2byte	0xb17
 28777 196b 97000000 		.4byte	0x97
 28778 196f 00000000 		.4byte	.LFB85
 28779 1973 5C000000 		.4byte	.LFE85-.LFB85
 28780 1977 01       		.uleb128 0x1
 28781 1978 9C       		.byte	0x9c
 28782 1979 8B190000 		.4byte	0x198b
 28783 197d 25       		.uleb128 0x25
 28784 197e 6900     		.ascii	"i\000"
 28785 1980 01       		.byte	0x1
 28786 1981 180B     		.2byte	0xb18
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 616


 28787 1983 A3000000 		.4byte	0xa3
 28788 1987 02       		.uleb128 0x2
 28789 1988 91       		.byte	0x91
 28790 1989 76       		.sleb128 -10
 28791 198a 00       		.byte	0
 28792 198b 29       		.uleb128 0x29
 28793 198c 93050000 		.4byte	.LASF287
 28794 1990 01       		.byte	0x1
 28795 1991 2A0B     		.2byte	0xb2a
 28796 1993 97000000 		.4byte	0x97
 28797 1997 00000000 		.4byte	.LFB86
 28798 199b D4050000 		.4byte	.LFE86-.LFB86
 28799 199f 01       		.uleb128 0x1
 28800 19a0 9C       		.byte	0x9c
 28801 19a1 C0190000 		.4byte	0x19c0
 28802 19a5 25       		.uleb128 0x25
 28803 19a6 6900     		.ascii	"i\000"
 28804 19a8 01       		.byte	0x1
 28805 19a9 2C0B     		.2byte	0xb2c
 28806 19ab 97000000 		.4byte	0x97
 28807 19af 02       		.uleb128 0x2
 28808 19b0 91       		.byte	0x91
 28809 19b1 77       		.sleb128 -9
 28810 19b2 25       		.uleb128 0x25
 28811 19b3 6A00     		.ascii	"j\000"
 28812 19b5 01       		.byte	0x1
 28813 19b6 2C0B     		.2byte	0xb2c
 28814 19b8 97000000 		.4byte	0x97
 28815 19bc 02       		.uleb128 0x2
 28816 19bd 91       		.byte	0x91
 28817 19be 76       		.sleb128 -10
 28818 19bf 00       		.byte	0
 28819 19c0 2A       		.uleb128 0x2a
 28820 19c1 2A080000 		.4byte	.LASF288
 28821 19c5 01       		.byte	0x1
 28822 19c6 B90B     		.2byte	0xbb9
 28823 19c8 00000000 		.4byte	.LFB87
 28824 19cc 30020000 		.4byte	.LFE87-.LFB87
 28825 19d0 01       		.uleb128 0x1
 28826 19d1 9C       		.byte	0x9c
 28827 19d2 FD190000 		.4byte	0x19fd
 28828 19d6 22       		.uleb128 0x22
 28829 19d7 B50C0000 		.4byte	.LASF225
 28830 19db 01       		.byte	0x1
 28831 19dc BB0B     		.2byte	0xbbb
 28832 19de 97000000 		.4byte	0x97
 28833 19e2 02       		.uleb128 0x2
 28834 19e3 91       		.byte	0x91
 28835 19e4 73       		.sleb128 -13
 28836 19e5 1E       		.uleb128 0x1e
 28837 19e6 FA000000 		.4byte	.LBB21
 28838 19ea 6A000000 		.4byte	.LBE21-.LBB21
 28839 19ee 25       		.uleb128 0x25
 28840 19ef 6900     		.ascii	"i\000"
 28841 19f1 01       		.byte	0x1
 28842 19f2 CC0B     		.2byte	0xbcc
 28843 19f4 73000000 		.4byte	0x73
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 617


 28844 19f8 02       		.uleb128 0x2
 28845 19f9 91       		.byte	0x91
 28846 19fa 74       		.sleb128 -12
 28847 19fb 00       		.byte	0
 28848 19fc 00       		.byte	0
 28849 19fd 2B       		.uleb128 0x2b
 28850 19fe 690A0000 		.4byte	.LASF289
 28851 1a02 01       		.byte	0x1
 28852 1a03 EA0B     		.2byte	0xbea
 28853 1a05 00000000 		.4byte	.LFB88
 28854 1a09 28000000 		.4byte	.LFE88-.LFB88
 28855 1a0d 01       		.uleb128 0x1
 28856 1a0e 9C       		.byte	0x9c
 28857 1a0f 2B       		.uleb128 0x2b
 28858 1a10 AE0F0000 		.4byte	.LASF290
 28859 1a14 01       		.byte	0x1
 28860 1a15 F60B     		.2byte	0xbf6
 28861 1a17 00000000 		.4byte	.LFB89
 28862 1a1b 78000000 		.4byte	.LFE89-.LFB89
 28863 1a1f 01       		.uleb128 0x1
 28864 1a20 9C       		.byte	0x9c
 28865 1a21 26       		.uleb128 0x26
 28866 1a22 C1050000 		.4byte	.LASF292
 28867 1a26 01       		.byte	0x1
 28868 1a27 100C     		.2byte	0xc10
 28869 1a29 00000000 		.4byte	.LFB90
 28870 1a2d B4000000 		.4byte	.LFE90-.LFB90
 28871 1a31 01       		.uleb128 0x1
 28872 1a32 9C       		.byte	0x9c
 28873 1a33 651A0000 		.4byte	0x1a65
 28874 1a37 22       		.uleb128 0x22
 28875 1a38 34060000 		.4byte	.LASF230
 28876 1a3c 01       		.byte	0x1
 28877 1a3d 120C     		.2byte	0xc12
 28878 1a3f 97000000 		.4byte	0x97
 28879 1a43 02       		.uleb128 0x2
 28880 1a44 91       		.byte	0x91
 28881 1a45 6F       		.sleb128 -17
 28882 1a46 22       		.uleb128 0x22
 28883 1a47 5F100000 		.4byte	.LASF221
 28884 1a4b 01       		.byte	0x1
 28885 1a4c 130C     		.2byte	0xc13
 28886 1a4e C7000000 		.4byte	0xc7
 28887 1a52 02       		.uleb128 0x2
 28888 1a53 91       		.byte	0x91
 28889 1a54 6C       		.sleb128 -20
 28890 1a55 22       		.uleb128 0x22
 28891 1a56 56050000 		.4byte	.LASF215
 28892 1a5a 01       		.byte	0x1
 28893 1a5b 160C     		.2byte	0xc16
 28894 1a5d EE070000 		.4byte	0x7ee
 28895 1a61 02       		.uleb128 0x2
 28896 1a62 91       		.byte	0x91
 28897 1a63 64       		.sleb128 -28
 28898 1a64 00       		.byte	0
 28899 1a65 26       		.uleb128 0x26
 28900 1a66 5C0D0000 		.4byte	.LASF293
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 618


 28901 1a6a 01       		.byte	0x1
 28902 1a6b 290C     		.2byte	0xc29
 28903 1a6d 00000000 		.4byte	.LFB91
 28904 1a71 B8000000 		.4byte	.LFE91-.LFB91
 28905 1a75 01       		.uleb128 0x1
 28906 1a76 9C       		.byte	0x9c
 28907 1a77 A91A0000 		.4byte	0x1aa9
 28908 1a7b 22       		.uleb128 0x22
 28909 1a7c 34060000 		.4byte	.LASF230
 28910 1a80 01       		.byte	0x1
 28911 1a81 2B0C     		.2byte	0xc2b
 28912 1a83 97000000 		.4byte	0x97
 28913 1a87 02       		.uleb128 0x2
 28914 1a88 91       		.byte	0x91
 28915 1a89 6F       		.sleb128 -17
 28916 1a8a 22       		.uleb128 0x22
 28917 1a8b 5F100000 		.4byte	.LASF221
 28918 1a8f 01       		.byte	0x1
 28919 1a90 2C0C     		.2byte	0xc2c
 28920 1a92 C7000000 		.4byte	0xc7
 28921 1a96 02       		.uleb128 0x2
 28922 1a97 91       		.byte	0x91
 28923 1a98 6C       		.sleb128 -20
 28924 1a99 22       		.uleb128 0x22
 28925 1a9a 56050000 		.4byte	.LASF215
 28926 1a9e 01       		.byte	0x1
 28927 1a9f 300C     		.2byte	0xc30
 28928 1aa1 EE070000 		.4byte	0x7ee
 28929 1aa5 02       		.uleb128 0x2
 28930 1aa6 91       		.byte	0x91
 28931 1aa7 64       		.sleb128 -28
 28932 1aa8 00       		.byte	0
 28933 1aa9 26       		.uleb128 0x26
 28934 1aaa 88070000 		.4byte	.LASF294
 28935 1aae 01       		.byte	0x1
 28936 1aaf 420C     		.2byte	0xc42
 28937 1ab1 00000000 		.4byte	.LFB92
 28938 1ab5 B8000000 		.4byte	.LFE92-.LFB92
 28939 1ab9 01       		.uleb128 0x1
 28940 1aba 9C       		.byte	0x9c
 28941 1abb ED1A0000 		.4byte	0x1aed
 28942 1abf 22       		.uleb128 0x22
 28943 1ac0 34060000 		.4byte	.LASF230
 28944 1ac4 01       		.byte	0x1
 28945 1ac5 440C     		.2byte	0xc44
 28946 1ac7 97000000 		.4byte	0x97
 28947 1acb 02       		.uleb128 0x2
 28948 1acc 91       		.byte	0x91
 28949 1acd 6F       		.sleb128 -17
 28950 1ace 22       		.uleb128 0x22
 28951 1acf 5F100000 		.4byte	.LASF221
 28952 1ad3 01       		.byte	0x1
 28953 1ad4 450C     		.2byte	0xc45
 28954 1ad6 C7000000 		.4byte	0xc7
 28955 1ada 02       		.uleb128 0x2
 28956 1adb 91       		.byte	0x91
 28957 1adc 6C       		.sleb128 -20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 619


 28958 1add 22       		.uleb128 0x22
 28959 1ade 56050000 		.4byte	.LASF215
 28960 1ae2 01       		.byte	0x1
 28961 1ae3 490C     		.2byte	0xc49
 28962 1ae5 EE070000 		.4byte	0x7ee
 28963 1ae9 02       		.uleb128 0x2
 28964 1aea 91       		.byte	0x91
 28965 1aeb 64       		.sleb128 -28
 28966 1aec 00       		.byte	0
 28967 1aed 2C       		.uleb128 0x2c
 28968 1aee C80A0000 		.4byte	.LASF295
 28969 1af2 01       		.byte	0x1
 28970 1af3 5B0C     		.2byte	0xc5b
 28971 1af5 00000000 		.4byte	.LFB93
 28972 1af9 44020000 		.4byte	.LFE93-.LFB93
 28973 1afd 01       		.uleb128 0x1
 28974 1afe 9C       		.byte	0x9c
 28975 1aff 571B0000 		.4byte	0x1b57
 28976 1b03 22       		.uleb128 0x22
 28977 1b04 5F100000 		.4byte	.LASF221
 28978 1b08 01       		.byte	0x1
 28979 1b09 5E0C     		.2byte	0xc5e
 28980 1b0b 571B0000 		.4byte	0x1b57
 28981 1b0f 02       		.uleb128 0x2
 28982 1b10 91       		.byte	0x91
 28983 1b11 70       		.sleb128 -16
 28984 1b12 22       		.uleb128 0x22
 28985 1b13 F6050000 		.4byte	.LASF296
 28986 1b17 01       		.byte	0x1
 28987 1b18 5F0C     		.2byte	0xc5f
 28988 1b1a 571B0000 		.4byte	0x1b57
 28989 1b1e 05       		.uleb128 0x5
 28990 1b1f 03       		.byte	0x3
 28991 1b20 04000000 		.4byte	last_aux_int16.11266
 28992 1b24 2D       		.uleb128 0x2d
 28993 1b25 2E000000 		.4byte	.LBB22
 28994 1b29 50000000 		.4byte	.LBE22-.LBB22
 28995 1b2d 3F1B0000 		.4byte	0x1b3f
 28996 1b31 25       		.uleb128 0x25
 28997 1b32 6900     		.ascii	"i\000"
 28998 1b34 01       		.byte	0x1
 28999 1b35 660C     		.2byte	0xc66
 29000 1b37 97000000 		.4byte	0x97
 29001 1b3b 02       		.uleb128 0x2
 29002 1b3c 91       		.byte	0x91
 29003 1b3d 77       		.sleb128 -9
 29004 1b3e 00       		.byte	0
 29005 1b3f 1E       		.uleb128 0x1e
 29006 1b40 88000000 		.4byte	.LBB23
 29007 1b44 98010000 		.4byte	.LBE23-.LBB23
 29008 1b48 25       		.uleb128 0x25
 29009 1b49 6900     		.ascii	"i\000"
 29010 1b4b 01       		.byte	0x1
 29011 1b4c 700C     		.2byte	0xc70
 29012 1b4e 97000000 		.4byte	0x97
 29013 1b52 02       		.uleb128 0x2
 29014 1b53 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 620


 29015 1b54 76       		.sleb128 -10
 29016 1b55 00       		.byte	0
 29017 1b56 00       		.byte	0
 29018 1b57 09       		.uleb128 0x9
 29019 1b58 C7000000 		.4byte	0xc7
 29020 1b5c 671B0000 		.4byte	0x1b67
 29021 1b60 0A       		.uleb128 0xa
 29022 1b61 18010000 		.4byte	0x118
 29023 1b65 01       		.byte	0x1
 29024 1b66 00       		.byte	0
 29025 1b67 26       		.uleb128 0x26
 29026 1b68 CE120000 		.4byte	.LASF297
 29027 1b6c 01       		.byte	0x1
 29028 1b6d 8B0C     		.2byte	0xc8b
 29029 1b6f 00000000 		.4byte	.LFB94
 29030 1b73 E4000000 		.4byte	.LFE94-.LFB94
 29031 1b77 01       		.uleb128 0x1
 29032 1b78 9C       		.byte	0x9c
 29033 1b79 8D1B0000 		.4byte	0x1b8d
 29034 1b7d 25       		.uleb128 0x25
 29035 1b7e 61757800 		.ascii	"aux\000"
 29036 1b82 01       		.byte	0x1
 29037 1b83 8E0C     		.2byte	0xc8e
 29038 1b85 97000000 		.4byte	0x97
 29039 1b89 02       		.uleb128 0x2
 29040 1b8a 91       		.byte	0x91
 29041 1b8b 77       		.sleb128 -9
 29042 1b8c 00       		.byte	0
 29043 1b8d 26       		.uleb128 0x26
 29044 1b8e 260B0000 		.4byte	.LASF298
 29045 1b92 01       		.byte	0x1
 29046 1b93 B00C     		.2byte	0xcb0
 29047 1b95 00000000 		.4byte	.LFB95
 29048 1b99 5C000000 		.4byte	.LFE95-.LFB95
 29049 1b9d 01       		.uleb128 0x1
 29050 1b9e 9C       		.byte	0x9c
 29051 1b9f B31B0000 		.4byte	0x1bb3
 29052 1ba3 22       		.uleb128 0x22
 29053 1ba4 56050000 		.4byte	.LASF215
 29054 1ba8 01       		.byte	0x1
 29055 1ba9 B20C     		.2byte	0xcb2
 29056 1bab A1050000 		.4byte	0x5a1
 29057 1baf 02       		.uleb128 0x2
 29058 1bb0 91       		.byte	0x91
 29059 1bb1 74       		.sleb128 -12
 29060 1bb2 00       		.byte	0
 29061 1bb3 26       		.uleb128 0x26
 29062 1bb4 9C0E0000 		.4byte	.LASF299
 29063 1bb8 01       		.byte	0x1
 29064 1bb9 C70C     		.2byte	0xcc7
 29065 1bbb 00000000 		.4byte	.LFB96
 29066 1bbf 38010000 		.4byte	.LFE96-.LFB96
 29067 1bc3 01       		.uleb128 0x1
 29068 1bc4 9C       		.byte	0x9c
 29069 1bc5 F71B0000 		.4byte	0x1bf7
 29070 1bc9 22       		.uleb128 0x22
 29071 1bca 34060000 		.4byte	.LASF230
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 621


 29072 1bce 01       		.byte	0x1
 29073 1bcf C90C     		.2byte	0xcc9
 29074 1bd1 97000000 		.4byte	0x97
 29075 1bd5 02       		.uleb128 0x2
 29076 1bd6 91       		.byte	0x91
 29077 1bd7 6F       		.sleb128 -17
 29078 1bd8 22       		.uleb128 0x22
 29079 1bd9 5F100000 		.4byte	.LASF221
 29080 1bdd 01       		.byte	0x1
 29081 1bde CA0C     		.2byte	0xcca
 29082 1be0 C7000000 		.4byte	0xc7
 29083 1be4 02       		.uleb128 0x2
 29084 1be5 91       		.byte	0x91
 29085 1be6 6C       		.sleb128 -20
 29086 1be7 22       		.uleb128 0x22
 29087 1be8 56050000 		.4byte	.LASF215
 29088 1bec 01       		.byte	0x1
 29089 1bed CE0C     		.2byte	0xcce
 29090 1bef 31090000 		.4byte	0x931
 29091 1bf3 02       		.uleb128 0x2
 29092 1bf4 91       		.byte	0x91
 29093 1bf5 60       		.sleb128 -32
 29094 1bf6 00       		.byte	0
 29095 1bf7 26       		.uleb128 0x26
 29096 1bf8 84090000 		.4byte	.LASF300
 29097 1bfc 01       		.byte	0x1
 29098 1bfd EE0C     		.2byte	0xcee
 29099 1bff 00000000 		.4byte	.LFB97
 29100 1c03 EC000000 		.4byte	.LFE97-.LFB97
 29101 1c07 01       		.uleb128 0x1
 29102 1c08 9C       		.byte	0x9c
 29103 1c09 2C1C0000 		.4byte	0x1c2c
 29104 1c0d 22       		.uleb128 0x22
 29105 1c0e 56050000 		.4byte	.LASF215
 29106 1c12 01       		.byte	0x1
 29107 1c13 F20C     		.2byte	0xcf2
 29108 1c15 21090000 		.4byte	0x921
 29109 1c19 02       		.uleb128 0x2
 29110 1c1a 91       		.byte	0x91
 29111 1c1b 68       		.sleb128 -24
 29112 1c1c 22       		.uleb128 0x22
 29113 1c1d 5F100000 		.4byte	.LASF221
 29114 1c21 01       		.byte	0x1
 29115 1c22 F30C     		.2byte	0xcf3
 29116 1c24 C7000000 		.4byte	0xc7
 29117 1c28 02       		.uleb128 0x2
 29118 1c29 91       		.byte	0x91
 29119 1c2a 66       		.sleb128 -26
 29120 1c2b 00       		.byte	0
 29121 1c2c 26       		.uleb128 0x26
 29122 1c2d D8110000 		.4byte	.LASF301
 29123 1c31 01       		.byte	0x1
 29124 1c32 140D     		.2byte	0xd14
 29125 1c34 00000000 		.4byte	.LFB98
 29126 1c38 64000000 		.4byte	.LFE98-.LFB98
 29127 1c3c 01       		.uleb128 0x1
 29128 1c3d 9C       		.byte	0x9c
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 622


 29129 1c3e 611C0000 		.4byte	0x1c61
 29130 1c42 22       		.uleb128 0x22
 29131 1c43 56050000 		.4byte	.LASF215
 29132 1c47 01       		.byte	0x1
 29133 1c48 180D     		.2byte	0xd18
 29134 1c4a 4C0A0000 		.4byte	0xa4c
 29135 1c4e 02       		.uleb128 0x2
 29136 1c4f 91       		.byte	0x91
 29137 1c50 74       		.sleb128 -12
 29138 1c51 22       		.uleb128 0x22
 29139 1c52 5F100000 		.4byte	.LASF221
 29140 1c56 01       		.byte	0x1
 29141 1c57 190D     		.2byte	0xd19
 29142 1c59 C7000000 		.4byte	0xc7
 29143 1c5d 02       		.uleb128 0x2
 29144 1c5e 91       		.byte	0x91
 29145 1c5f 72       		.sleb128 -14
 29146 1c60 00       		.byte	0
 29147 1c61 2E       		.uleb128 0x2e
 29148 1c62 71060000 		.4byte	.LASF302
 29149 1c66 01       		.byte	0x1
 29150 1c67 2E0D     		.2byte	0xd2e
 29151 1c69 C7000000 		.4byte	0xc7
 29152 1c6d 00000000 		.4byte	.LFB99
 29153 1c71 A8000000 		.4byte	.LFE99-.LFB99
 29154 1c75 01       		.uleb128 0x1
 29155 1c76 9C       		.byte	0x9c
 29156 1c77 D61C0000 		.4byte	0x1cd6
 29157 1c7b 22       		.uleb128 0x22
 29158 1c7c 56050000 		.4byte	.LASF215
 29159 1c80 01       		.byte	0x1
 29160 1c81 300D     		.2byte	0xd30
 29161 1c83 D61C0000 		.4byte	0x1cd6
 29162 1c87 02       		.uleb128 0x2
 29163 1c88 91       		.byte	0x91
 29164 1c89 5C       		.sleb128 -36
 29165 1c8a 22       		.uleb128 0x22
 29166 1c8b C5000000 		.4byte	.LASF216
 29167 1c8f 01       		.byte	0x1
 29168 1c90 310D     		.2byte	0xd31
 29169 1c92 97000000 		.4byte	0x97
 29170 1c96 02       		.uleb128 0x2
 29171 1c97 91       		.byte	0x91
 29172 1c98 74       		.sleb128 -12
 29173 1c99 22       		.uleb128 0x22
 29174 1c9a 470E0000 		.4byte	.LASF303
 29175 1c9e 01       		.byte	0x1
 29176 1c9f 320D     		.2byte	0xd32
 29177 1ca1 C7000000 		.4byte	0xc7
 29178 1ca5 02       		.uleb128 0x2
 29179 1ca6 91       		.byte	0x91
 29180 1ca7 76       		.sleb128 -10
 29181 1ca8 22       		.uleb128 0x22
 29182 1ca9 3F020000 		.4byte	.LASF304
 29183 1cad 01       		.byte	0x1
 29184 1cae 330D     		.2byte	0xd33
 29185 1cb0 AF000000 		.4byte	0xaf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 623


 29186 1cb4 02       		.uleb128 0x2
 29187 1cb5 91       		.byte	0x91
 29188 1cb6 70       		.sleb128 -16
 29189 1cb7 22       		.uleb128 0x22
 29190 1cb8 D2110000 		.4byte	.LASF305
 29191 1cbc 01       		.byte	0x1
 29192 1cbd 330D     		.2byte	0xd33
 29193 1cbf AF000000 		.4byte	0xaf
 29194 1cc3 02       		.uleb128 0x2
 29195 1cc4 91       		.byte	0x91
 29196 1cc5 6C       		.sleb128 -20
 29197 1cc6 22       		.uleb128 0x22
 29198 1cc7 B5030000 		.4byte	.LASF306
 29199 1ccb 01       		.byte	0x1
 29200 1ccc 340D     		.2byte	0xd34
 29201 1cce 97000000 		.4byte	0x97
 29202 1cd2 02       		.uleb128 0x2
 29203 1cd3 91       		.byte	0x91
 29204 1cd4 75       		.sleb128 -11
 29205 1cd5 00       		.byte	0
 29206 1cd6 09       		.uleb128 0x9
 29207 1cd7 97000000 		.4byte	0x97
 29208 1cdb E61C0000 		.4byte	0x1ce6
 29209 1cdf 0A       		.uleb128 0xa
 29210 1ce0 18010000 		.4byte	0x118
 29211 1ce4 0F       		.byte	0xf
 29212 1ce5 00       		.byte	0
 29213 1ce6 2F       		.uleb128 0x2f
 29214 1ce7 88000000 		.4byte	.LASF329
 29215 1ceb 01       		.byte	0x1
 29216 1cec 510D     		.2byte	0xd51
 29217 1cee 00000000 		.4byte	.LFB100
 29218 1cf2 34000000 		.4byte	.LFE100-.LFB100
 29219 1cf6 01       		.uleb128 0x1
 29220 1cf7 9C       		.byte	0x9c
 29221 1cf8 26       		.uleb128 0x26
 29222 1cf9 37030000 		.4byte	.LASF307
 29223 1cfd 01       		.byte	0x1
 29224 1cfe 5F0D     		.2byte	0xd5f
 29225 1d00 00000000 		.4byte	.LFB101
 29226 1d04 20000000 		.4byte	.LFE101-.LFB101
 29227 1d08 01       		.uleb128 0x1
 29228 1d09 9C       		.byte	0x9c
 29229 1d0a 1E1D0000 		.4byte	0x1d1e
 29230 1d0e 22       		.uleb128 0x22
 29231 1d0f 56050000 		.4byte	.LASF215
 29232 1d13 01       		.byte	0x1
 29233 1d14 610D     		.2byte	0xd61
 29234 1d16 CB180000 		.4byte	0x18cb
 29235 1d1a 02       		.uleb128 0x2
 29236 1d1b 91       		.byte	0x91
 29237 1d1c 74       		.sleb128 -12
 29238 1d1d 00       		.byte	0
 29239 1d1e 26       		.uleb128 0x26
 29240 1d1f 05010000 		.4byte	.LASF308
 29241 1d23 01       		.byte	0x1
 29242 1d24 6D0D     		.2byte	0xd6d
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 624


 29243 1d26 00000000 		.4byte	.LFB102
 29244 1d2a 6C000000 		.4byte	.LFE102-.LFB102
 29245 1d2e 01       		.uleb128 0x1
 29246 1d2f 9C       		.byte	0x9c
 29247 1d30 531D0000 		.4byte	0x1d53
 29248 1d34 22       		.uleb128 0x22
 29249 1d35 56050000 		.4byte	.LASF215
 29250 1d39 01       		.byte	0x1
 29251 1d3a 710D     		.2byte	0xd71
 29252 1d3c 21090000 		.4byte	0x921
 29253 1d40 02       		.uleb128 0x2
 29254 1d41 91       		.byte	0x91
 29255 1d42 70       		.sleb128 -16
 29256 1d43 22       		.uleb128 0x22
 29257 1d44 5F100000 		.4byte	.LASF221
 29258 1d48 01       		.byte	0x1
 29259 1d49 720D     		.2byte	0xd72
 29260 1d4b C7000000 		.4byte	0xc7
 29261 1d4f 02       		.uleb128 0x2
 29262 1d50 91       		.byte	0x91
 29263 1d51 6E       		.sleb128 -18
 29264 1d52 00       		.byte	0
 29265 1d53 26       		.uleb128 0x26
 29266 1d54 520F0000 		.4byte	.LASF309
 29267 1d58 01       		.byte	0x1
 29268 1d59 830D     		.2byte	0xd83
 29269 1d5b 00000000 		.4byte	.LFB103
 29270 1d5f BC010000 		.4byte	.LFE103-.LFB103
 29271 1d63 01       		.uleb128 0x1
 29272 1d64 9C       		.byte	0x9c
 29273 1d65 B51D0000 		.4byte	0x1db5
 29274 1d69 22       		.uleb128 0x22
 29275 1d6a E40A0000 		.4byte	.LASF310
 29276 1d6e 01       		.byte	0x1
 29277 1d6f 860D     		.2byte	0xd86
 29278 1d71 AF000000 		.4byte	0xaf
 29279 1d75 02       		.uleb128 0x2
 29280 1d76 91       		.byte	0x91
 29281 1d77 70       		.sleb128 -16
 29282 1d78 22       		.uleb128 0x22
 29283 1d79 C90D0000 		.4byte	.LASF311
 29284 1d7d 01       		.byte	0x1
 29285 1d7e 870D     		.2byte	0xd87
 29286 1d80 EB000000 		.4byte	0xeb
 29287 1d84 02       		.uleb128 0x2
 29288 1d85 91       		.byte	0x91
 29289 1d86 6C       		.sleb128 -20
 29290 1d87 22       		.uleb128 0x22
 29291 1d88 C5000000 		.4byte	.LASF216
 29292 1d8c 01       		.byte	0x1
 29293 1d8d 880D     		.2byte	0xd88
 29294 1d8f 97000000 		.4byte	0x97
 29295 1d93 02       		.uleb128 0x2
 29296 1d94 91       		.byte	0x91
 29297 1d95 77       		.sleb128 -9
 29298 1d96 22       		.uleb128 0x22
 29299 1d97 56050000 		.4byte	.LASF215
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 625


 29300 1d9b 01       		.byte	0x1
 29301 1d9c 890D     		.2byte	0xd89
 29302 1d9e CB180000 		.4byte	0x18cb
 29303 1da2 02       		.uleb128 0x2
 29304 1da3 91       		.byte	0x91
 29305 1da4 68       		.sleb128 -24
 29306 1da5 22       		.uleb128 0x22
 29307 1da6 630E0000 		.4byte	.LASF271
 29308 1daa 01       		.byte	0x1
 29309 1dab 8A0D     		.2byte	0xd8a
 29310 1dad 97000000 		.4byte	0x97
 29311 1db1 02       		.uleb128 0x2
 29312 1db2 91       		.byte	0x91
 29313 1db3 6B       		.sleb128 -21
 29314 1db4 00       		.byte	0
 29315 1db5 26       		.uleb128 0x26
 29316 1db6 A2010000 		.4byte	.LASF312
 29317 1dba 01       		.byte	0x1
 29318 1dbb C40D     		.2byte	0xdc4
 29319 1dbd 00000000 		.4byte	.LFB104
 29320 1dc1 60000000 		.4byte	.LFE104-.LFB104
 29321 1dc5 01       		.uleb128 0x1
 29322 1dc6 9C       		.byte	0x9c
 29323 1dc7 EA1D0000 		.4byte	0x1dea
 29324 1dcb 22       		.uleb128 0x22
 29325 1dcc 56050000 		.4byte	.LASF215
 29326 1dd0 01       		.byte	0x1
 29327 1dd1 C60D     		.2byte	0xdc6
 29328 1dd3 21090000 		.4byte	0x921
 29329 1dd7 02       		.uleb128 0x2
 29330 1dd8 91       		.byte	0x91
 29331 1dd9 70       		.sleb128 -16
 29332 1dda 22       		.uleb128 0x22
 29333 1ddb 5F100000 		.4byte	.LASF221
 29334 1ddf 01       		.byte	0x1
 29335 1de0 C70D     		.2byte	0xdc7
 29336 1de2 C7000000 		.4byte	0xc7
 29337 1de6 02       		.uleb128 0x2
 29338 1de7 91       		.byte	0x91
 29339 1de8 6E       		.sleb128 -18
 29340 1de9 00       		.byte	0
 29341 1dea 26       		.uleb128 0x26
 29342 1deb 41010000 		.4byte	.LASF313
 29343 1def 01       		.byte	0x1
 29344 1df0 DA0D     		.2byte	0xdda
 29345 1df2 00000000 		.4byte	.LFB105
 29346 1df6 98050000 		.4byte	.LFE105-.LFB105
 29347 1dfa 01       		.uleb128 0x1
 29348 1dfb 9C       		.byte	0x9c
 29349 1dfc 771E0000 		.4byte	0x1e77
 29350 1e00 22       		.uleb128 0x22
 29351 1e01 1D120000 		.4byte	.LASF314
 29352 1e05 01       		.byte	0x1
 29353 1e06 DD0D     		.2byte	0xddd
 29354 1e08 97000000 		.4byte	0x97
 29355 1e0c 02       		.uleb128 0x2
 29356 1e0d 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 626


 29357 1e0e 6F       		.sleb128 -17
 29358 1e0f 25       		.uleb128 0x25
 29359 1e10 6300     		.ascii	"c\000"
 29360 1e12 01       		.byte	0x1
 29361 1e13 DE0D     		.2byte	0xdde
 29362 1e15 A3000000 		.4byte	0xa3
 29363 1e19 02       		.uleb128 0x2
 29364 1e1a 91       		.byte	0x91
 29365 1e1b 6C       		.sleb128 -20
 29366 1e1c 25       		.uleb128 0x25
 29367 1e1d 6B00     		.ascii	"k\000"
 29368 1e1f 01       		.byte	0x1
 29369 1e20 DF0D     		.2byte	0xddf
 29370 1e22 97000000 		.4byte	0x97
 29371 1e26 02       		.uleb128 0x2
 29372 1e27 91       		.byte	0x91
 29373 1e28 6B       		.sleb128 -21
 29374 1e29 22       		.uleb128 0x22
 29375 1e2a 26000000 		.4byte	.LASF315
 29376 1e2e 01       		.byte	0x1
 29377 1e2f E00D     		.2byte	0xde0
 29378 1e31 A3000000 		.4byte	0xa3
 29379 1e35 02       		.uleb128 0x2
 29380 1e36 91       		.byte	0x91
 29381 1e37 68       		.sleb128 -24
 29382 1e38 22       		.uleb128 0x22
 29383 1e39 5F100000 		.4byte	.LASF221
 29384 1e3d 01       		.byte	0x1
 29385 1e3e E10D     		.2byte	0xde1
 29386 1e40 C7000000 		.4byte	0xc7
 29387 1e44 02       		.uleb128 0x2
 29388 1e45 91       		.byte	0x91
 29389 1e46 66       		.sleb128 -26
 29390 1e47 22       		.uleb128 0x22
 29391 1e48 9D110000 		.4byte	.LASF220
 29392 1e4c 01       		.byte	0x1
 29393 1e4d E20D     		.2byte	0xde2
 29394 1e4f EB000000 		.4byte	0xeb
 29395 1e53 02       		.uleb128 0x2
 29396 1e54 91       		.byte	0x91
 29397 1e55 60       		.sleb128 -32
 29398 1e56 22       		.uleb128 0x22
 29399 1e57 56050000 		.4byte	.LASF215
 29400 1e5b 01       		.byte	0x1
 29401 1e5c E50D     		.2byte	0xde5
 29402 1e5e 771E0000 		.4byte	0x1e77
 29403 1e62 03       		.uleb128 0x3
 29404 1e63 91       		.byte	0x91
 29405 1e64 807D     		.sleb128 -384
 29406 1e66 22       		.uleb128 0x22
 29407 1e67 5E080000 		.4byte	.LASF316
 29408 1e6b 01       		.byte	0x1
 29409 1e6c E60D     		.2byte	0xde6
 29410 1e6e 881E0000 		.4byte	0x1e88
 29411 1e72 03       		.uleb128 0x3
 29412 1e73 91       		.byte	0x91
 29413 1e74 E07C     		.sleb128 -416
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 627


 29414 1e76 00       		.byte	0
 29415 1e77 09       		.uleb128 0x9
 29416 1e78 97000000 		.4byte	0x97
 29417 1e7c 881E0000 		.4byte	0x1e88
 29418 1e80 23       		.uleb128 0x23
 29419 1e81 18010000 		.4byte	0x118
 29420 1e85 5D01     		.2byte	0x15d
 29421 1e87 00       		.byte	0
 29422 1e88 09       		.uleb128 0x9
 29423 1e89 97000000 		.4byte	0x97
 29424 1e8d 981E0000 		.4byte	0x1e98
 29425 1e91 0A       		.uleb128 0xa
 29426 1e92 18010000 		.4byte	0x118
 29427 1e96 1F       		.byte	0x1f
 29428 1e97 00       		.byte	0
 29429 1e98 26       		.uleb128 0x26
 29430 1e99 78110000 		.4byte	.LASF317
 29431 1e9d 01       		.byte	0x1
 29432 1e9e 490E     		.2byte	0xe49
 29433 1ea0 00000000 		.4byte	.LFB106
 29434 1ea4 8C000000 		.4byte	.LFE106-.LFB106
 29435 1ea8 01       		.uleb128 0x1
 29436 1ea9 9C       		.byte	0x9c
 29437 1eaa D81E0000 		.4byte	0x1ed8
 29438 1eae 22       		.uleb128 0x22
 29439 1eaf 56050000 		.4byte	.LASF215
 29440 1eb3 01       		.byte	0x1
 29441 1eb4 4C0E     		.2byte	0xe4c
 29442 1eb6 FA090000 		.4byte	0x9fa
 29443 1eba 02       		.uleb128 0x2
 29444 1ebb 91       		.byte	0x91
 29445 1ebc 60       		.sleb128 -32
 29446 1ebd 25       		.uleb128 0x25
 29447 1ebe 6900     		.ascii	"i\000"
 29448 1ec0 01       		.byte	0x1
 29449 1ec1 4D0E     		.2byte	0xe4d
 29450 1ec3 97000000 		.4byte	0x97
 29451 1ec7 02       		.uleb128 0x2
 29452 1ec8 91       		.byte	0x91
 29453 1ec9 6F       		.sleb128 -17
 29454 1eca 25       		.uleb128 0x25
 29455 1ecb 6A00     		.ascii	"j\000"
 29456 1ecd 01       		.byte	0x1
 29457 1ece 4D0E     		.2byte	0xe4d
 29458 1ed0 97000000 		.4byte	0x97
 29459 1ed4 02       		.uleb128 0x2
 29460 1ed5 91       		.byte	0x91
 29461 1ed6 6E       		.sleb128 -18
 29462 1ed7 00       		.byte	0
 29463 1ed8 26       		.uleb128 0x26
 29464 1ed9 7E0F0000 		.4byte	.LASF318
 29465 1edd 01       		.byte	0x1
 29466 1ede 620E     		.2byte	0xe62
 29467 1ee0 00000000 		.4byte	.LFB107
 29468 1ee4 EC000000 		.4byte	.LFE107-.LFB107
 29469 1ee8 01       		.uleb128 0x1
 29470 1ee9 9C       		.byte	0x9c
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 628


 29471 1eea 361F0000 		.4byte	0x1f36
 29472 1eee 22       		.uleb128 0x22
 29473 1eef 56050000 		.4byte	.LASF215
 29474 1ef3 01       		.byte	0x1
 29475 1ef4 650E     		.2byte	0xe65
 29476 1ef6 361F0000 		.4byte	0x1f36
 29477 1efa 02       		.uleb128 0x2
 29478 1efb 91       		.byte	0x91
 29479 1efc 54       		.sleb128 -44
 29480 1efd 25       		.uleb128 0x25
 29481 1efe 6900     		.ascii	"i\000"
 29482 1f00 01       		.byte	0x1
 29483 1f01 660E     		.2byte	0xe66
 29484 1f03 97000000 		.4byte	0x97
 29485 1f07 02       		.uleb128 0x2
 29486 1f08 91       		.byte	0x91
 29487 1f09 6F       		.sleb128 -17
 29488 1f0a 25       		.uleb128 0x25
 29489 1f0b 6A00     		.ascii	"j\000"
 29490 1f0d 01       		.byte	0x1
 29491 1f0e 660E     		.2byte	0xe66
 29492 1f10 97000000 		.4byte	0x97
 29493 1f14 02       		.uleb128 0x2
 29494 1f15 91       		.byte	0x91
 29495 1f16 6E       		.sleb128 -18
 29496 1f17 25       		.uleb128 0x25
 29497 1f18 69647800 		.ascii	"idx\000"
 29498 1f1c 01       		.byte	0x1
 29499 1f1d 660E     		.2byte	0xe66
 29500 1f1f 97000000 		.4byte	0x97
 29501 1f23 02       		.uleb128 0x2
 29502 1f24 91       		.byte	0x91
 29503 1f25 6D       		.sleb128 -19
 29504 1f26 22       		.uleb128 0x22
 29505 1f27 8E0B0000 		.4byte	.LASF222
 29506 1f2b 01       		.byte	0x1
 29507 1f2c 670E     		.2byte	0xe67
 29508 1f2e A3000000 		.4byte	0xa3
 29509 1f32 02       		.uleb128 0x2
 29510 1f33 91       		.byte	0x91
 29511 1f34 52       		.sleb128 -46
 29512 1f35 00       		.byte	0
 29513 1f36 09       		.uleb128 0x9
 29514 1f37 97000000 		.4byte	0x97
 29515 1f3b 461F0000 		.4byte	0x1f46
 29516 1f3f 0A       		.uleb128 0xa
 29517 1f40 18010000 		.4byte	0x118
 29518 1f44 15       		.byte	0x15
 29519 1f45 00       		.byte	0
 29520 1f46 26       		.uleb128 0x26
 29521 1f47 E0020000 		.4byte	.LASF319
 29522 1f4b 01       		.byte	0x1
 29523 1f4c 800E     		.2byte	0xe80
 29524 1f4e 00000000 		.4byte	.LFB108
 29525 1f52 5C000000 		.4byte	.LFE108-.LFB108
 29526 1f56 01       		.uleb128 0x1
 29527 1f57 9C       		.byte	0x9c
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 629


 29528 1f58 791F0000 		.4byte	0x1f79
 29529 1f5c 22       		.uleb128 0x22
 29530 1f5d 56050000 		.4byte	.LASF215
 29531 1f61 01       		.byte	0x1
 29532 1f62 830E     		.2byte	0xe83
 29533 1f64 260B0000 		.4byte	0xb26
 29534 1f68 02       		.uleb128 0x2
 29535 1f69 91       		.byte	0x91
 29536 1f6a 68       		.sleb128 -24
 29537 1f6b 25       		.uleb128 0x25
 29538 1f6c 6900     		.ascii	"i\000"
 29539 1f6e 01       		.byte	0x1
 29540 1f6f 840E     		.2byte	0xe84
 29541 1f71 97000000 		.4byte	0x97
 29542 1f75 02       		.uleb128 0x2
 29543 1f76 91       		.byte	0x91
 29544 1f77 77       		.sleb128 -9
 29545 1f78 00       		.byte	0
 29546 1f79 26       		.uleb128 0x26
 29547 1f7a 0D030000 		.4byte	.LASF320
 29548 1f7e 01       		.byte	0x1
 29549 1f7f 970E     		.2byte	0xe97
 29550 1f81 00000000 		.4byte	.LFB109
 29551 1f85 C0000000 		.4byte	.LFE109-.LFB109
 29552 1f89 01       		.uleb128 0x1
 29553 1f8a 9C       		.byte	0x9c
 29554 1f8b CA1F0000 		.4byte	0x1fca
 29555 1f8f 22       		.uleb128 0x22
 29556 1f90 56050000 		.4byte	.LASF215
 29557 1f94 01       		.byte	0x1
 29558 1f95 9A0E     		.2byte	0xe9a
 29559 1f97 CA1F0000 		.4byte	0x1fca
 29560 1f9b 02       		.uleb128 0x2
 29561 1f9c 91       		.byte	0x91
 29562 1f9d 54       		.sleb128 -44
 29563 1f9e 25       		.uleb128 0x25
 29564 1f9f 6900     		.ascii	"i\000"
 29565 1fa1 01       		.byte	0x1
 29566 1fa2 9B0E     		.2byte	0xe9b
 29567 1fa4 97000000 		.4byte	0x97
 29568 1fa8 02       		.uleb128 0x2
 29569 1fa9 91       		.byte	0x91
 29570 1faa 6F       		.sleb128 -17
 29571 1fab 25       		.uleb128 0x25
 29572 1fac 69647800 		.ascii	"idx\000"
 29573 1fb0 01       		.byte	0x1
 29574 1fb1 9B0E     		.2byte	0xe9b
 29575 1fb3 97000000 		.4byte	0x97
 29576 1fb7 02       		.uleb128 0x2
 29577 1fb8 91       		.byte	0x91
 29578 1fb9 6E       		.sleb128 -18
 29579 1fba 22       		.uleb128 0x22
 29580 1fbb 5F100000 		.4byte	.LASF221
 29581 1fbf 01       		.byte	0x1
 29582 1fc0 9C0E     		.2byte	0xe9c
 29583 1fc2 C7000000 		.4byte	0xc7
 29584 1fc6 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 630


 29585 1fc7 91       		.byte	0x91
 29586 1fc8 52       		.sleb128 -46
 29587 1fc9 00       		.byte	0
 29588 1fca 09       		.uleb128 0x9
 29589 1fcb 97000000 		.4byte	0x97
 29590 1fcf DA1F0000 		.4byte	0x1fda
 29591 1fd3 0A       		.uleb128 0xa
 29592 1fd4 18010000 		.4byte	0x118
 29593 1fd8 19       		.byte	0x19
 29594 1fd9 00       		.byte	0
 29595 1fda 26       		.uleb128 0x26
 29596 1fdb 99000000 		.4byte	.LASF321
 29597 1fdf 01       		.byte	0x1
 29598 1fe0 B70E     		.2byte	0xeb7
 29599 1fe2 00000000 		.4byte	.LFB110
 29600 1fe6 A8010000 		.4byte	.LFE110-.LFB110
 29601 1fea 01       		.uleb128 0x1
 29602 1feb 9C       		.byte	0x9c
 29603 1fec 4B200000 		.4byte	0x204b
 29604 1ff0 22       		.uleb128 0x22
 29605 1ff1 470E0000 		.4byte	.LASF303
 29606 1ff5 01       		.byte	0x1
 29607 1ff6 BB0E     		.2byte	0xebb
 29608 1ff8 C7000000 		.4byte	0xc7
 29609 1ffc 02       		.uleb128 0x2
 29610 1ffd 91       		.byte	0x91
 29611 1ffe 5C       		.sleb128 -36
 29612 1fff 22       		.uleb128 0x22
 29613 2000 9F040000 		.4byte	.LASF322
 29614 2004 01       		.byte	0x1
 29615 2005 BC0E     		.2byte	0xebc
 29616 2007 D3000000 		.4byte	0xd3
 29617 200b 02       		.uleb128 0x2
 29618 200c 91       		.byte	0x91
 29619 200d 64       		.sleb128 -28
 29620 200e 22       		.uleb128 0x22
 29621 200f 240A0000 		.4byte	.LASF323
 29622 2013 01       		.byte	0x1
 29623 2014 BC0E     		.2byte	0xebc
 29624 2016 D3000000 		.4byte	0xd3
 29625 201a 02       		.uleb128 0x2
 29626 201b 91       		.byte	0x91
 29627 201c 54       		.sleb128 -44
 29628 201d 22       		.uleb128 0x22
 29629 201e 1D030000 		.4byte	.LASF324
 29630 2022 01       		.byte	0x1
 29631 2023 BC0E     		.2byte	0xebc
 29632 2025 D3000000 		.4byte	0xd3
 29633 2029 02       		.uleb128 0x2
 29634 202a 91       		.byte	0x91
 29635 202b 58       		.sleb128 -40
 29636 202c 22       		.uleb128 0x22
 29637 202d 91040000 		.4byte	.LASF325
 29638 2031 01       		.byte	0x1
 29639 2032 BD0E     		.2byte	0xebd
 29640 2034 D3000000 		.4byte	0xd3
 29641 2038 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 631


 29642 2039 91       		.byte	0x91
 29643 203a 60       		.sleb128 -32
 29644 203b 22       		.uleb128 0x22
 29645 203c C00A0000 		.4byte	.LASF326
 29646 2040 01       		.byte	0x1
 29647 2041 BE0E     		.2byte	0xebe
 29648 2043 C7000000 		.4byte	0xc7
 29649 2047 02       		.uleb128 0x2
 29650 2048 91       		.byte	0x91
 29651 2049 5E       		.sleb128 -34
 29652 204a 00       		.byte	0
 29653 204b 21       		.uleb128 0x21
 29654 204c 840C0000 		.4byte	.LASF327
 29655 2050 01       		.byte	0x1
 29656 2051 FD0E     		.2byte	0xefd
 29657 2053 00000000 		.4byte	.LFB111
 29658 2057 5C010000 		.4byte	.LFE111-.LFB111
 29659 205b 01       		.uleb128 0x1
 29660 205c 9C       		.byte	0x9c
 29661 205d AD200000 		.4byte	0x20ad
 29662 2061 24       		.uleb128 0x24
 29663 2062 78020000 		.4byte	.LASF328
 29664 2066 01       		.byte	0x1
 29665 2067 FD0E     		.2byte	0xefd
 29666 2069 97000000 		.4byte	0x97
 29667 206d 02       		.uleb128 0x2
 29668 206e 91       		.byte	0x91
 29669 206f 5F       		.sleb128 -33
 29670 2070 24       		.uleb128 0x24
 29671 2071 E5090000 		.4byte	.LASF177
 29672 2075 01       		.byte	0x1
 29673 2076 FD0E     		.2byte	0xefd
 29674 2078 97000000 		.4byte	0x97
 29675 207c 02       		.uleb128 0x2
 29676 207d 91       		.byte	0x91
 29677 207e 5E       		.sleb128 -34
 29678 207f 22       		.uleb128 0x22
 29679 2080 56050000 		.4byte	.LASF215
 29680 2084 01       		.byte	0x1
 29681 2085 000F     		.2byte	0xf00
 29682 2087 21090000 		.4byte	0x921
 29683 208b 02       		.uleb128 0x2
 29684 208c 91       		.byte	0x91
 29685 208d 68       		.sleb128 -24
 29686 208e 22       		.uleb128 0x22
 29687 208f C5000000 		.4byte	.LASF216
 29688 2093 01       		.byte	0x1
 29689 2094 010F     		.2byte	0xf01
 29690 2096 97000000 		.4byte	0x97
 29691 209a 02       		.uleb128 0x2
 29692 209b 91       		.byte	0x91
 29693 209c 6F       		.sleb128 -17
 29694 209d 22       		.uleb128 0x22
 29695 209e 5F100000 		.4byte	.LASF221
 29696 20a2 01       		.byte	0x1
 29697 20a3 020F     		.2byte	0xf02
 29698 20a5 C7000000 		.4byte	0xc7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 632


 29699 20a9 02       		.uleb128 0x2
 29700 20aa 91       		.byte	0x91
 29701 20ab 66       		.sleb128 -26
 29702 20ac 00       		.byte	0
 29703 20ad 2F       		.uleb128 0x2f
 29704 20ae DB100000 		.4byte	.LASF330
 29705 20b2 01       		.byte	0x1
 29706 20b3 260F     		.2byte	0xf26
 29707 20b5 00000000 		.4byte	.LFB112
 29708 20b9 28000000 		.4byte	.LFE112-.LFB112
 29709 20bd 01       		.uleb128 0x1
 29710 20be 9C       		.byte	0x9c
 29711 20bf 26       		.uleb128 0x26
 29712 20c0 7B050000 		.4byte	.LASF331
 29713 20c4 01       		.byte	0x1
 29714 20c5 350F     		.2byte	0xf35
 29715 20c7 00000000 		.4byte	.LFB113
 29716 20cb 84000000 		.4byte	.LFE113-.LFB113
 29717 20cf 01       		.uleb128 0x1
 29718 20d0 9C       		.byte	0x9c
 29719 20d1 F4200000 		.4byte	0x20f4
 29720 20d5 22       		.uleb128 0x22
 29721 20d6 56050000 		.4byte	.LASF215
 29722 20da 01       		.byte	0x1
 29723 20db 390F     		.2byte	0xf39
 29724 20dd F4200000 		.4byte	0x20f4
 29725 20e1 02       		.uleb128 0x2
 29726 20e2 91       		.byte	0x91
 29727 20e3 64       		.sleb128 -28
 29728 20e4 22       		.uleb128 0x22
 29729 20e5 C5000000 		.4byte	.LASF216
 29730 20e9 01       		.byte	0x1
 29731 20ea 3A0F     		.2byte	0xf3a
 29732 20ec 97000000 		.4byte	0x97
 29733 20f0 02       		.uleb128 0x2
 29734 20f1 91       		.byte	0x91
 29735 20f2 6F       		.sleb128 -17
 29736 20f3 00       		.byte	0
 29737 20f4 09       		.uleb128 0x9
 29738 20f5 97000000 		.4byte	0x97
 29739 20f9 04210000 		.4byte	0x2104
 29740 20fd 0A       		.uleb128 0xa
 29741 20fe 18010000 		.4byte	0x118
 29742 2102 09       		.byte	0x9
 29743 2103 00       		.byte	0
 29744 2104 30       		.uleb128 0x30
 29745 2105 9C100000 		.4byte	.LASF332
 29746 2109 09       		.byte	0x9
 29747 210a 1207     		.2byte	0x712
 29748 210c 10210000 		.4byte	0x2110
 29749 2110 06       		.uleb128 0x6
 29750 2111 81000000 		.4byte	0x81
 29751 2115 09       		.uleb128 0x9
 29752 2116 10030000 		.4byte	0x310
 29753 211a 25210000 		.4byte	0x2125
 29754 211e 0A       		.uleb128 0xa
 29755 211f 18010000 		.4byte	0x118
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 633


 29756 2123 01       		.byte	0x1
 29757 2124 00       		.byte	0
 29758 2125 30       		.uleb128 0x30
 29759 2126 6C120000 		.4byte	.LASF333
 29760 212a 08       		.byte	0x8
 29761 212b F401     		.2byte	0x1f4
 29762 212d 15210000 		.4byte	0x2115
 29763 2131 30       		.uleb128 0x30
 29764 2132 FF030000 		.4byte	.LASF334
 29765 2136 08       		.byte	0x8
 29766 2137 F401     		.2byte	0x1f4
 29767 2139 15210000 		.4byte	0x2115
 29768 213d 30       		.uleb128 0x30
 29769 213e 3D0C0000 		.4byte	.LASF335
 29770 2142 08       		.byte	0x8
 29771 2143 F401     		.2byte	0x1f4
 29772 2145 15210000 		.4byte	0x2115
 29773 2149 09       		.uleb128 0x9
 29774 214a 4D030000 		.4byte	0x34d
 29775 214e 59210000 		.4byte	0x2159
 29776 2152 0A       		.uleb128 0xa
 29777 2153 18010000 		.4byte	0x118
 29778 2157 01       		.byte	0x1
 29779 2158 00       		.byte	0
 29780 2159 30       		.uleb128 0x30
 29781 215a EF050000 		.4byte	.LASF336
 29782 215e 08       		.byte	0x8
 29783 215f F501     		.2byte	0x1f5
 29784 2161 49210000 		.4byte	0x2149
 29785 2165 30       		.uleb128 0x30
 29786 2166 B6120000 		.4byte	.LASF337
 29787 216a 08       		.byte	0x8
 29788 216b F501     		.2byte	0x1f5
 29789 216d 49210000 		.4byte	0x2149
 29790 2171 30       		.uleb128 0x30
 29791 2172 6A000000 		.4byte	.LASF338
 29792 2176 08       		.byte	0x8
 29793 2177 F601     		.2byte	0x1f6
 29794 2179 CE030000 		.4byte	0x3ce
 29795 217d 30       		.uleb128 0x30
 29796 217e 77130000 		.4byte	.LASF339
 29797 2182 08       		.byte	0x8
 29798 2183 F601     		.2byte	0x1f6
 29799 2185 CE030000 		.4byte	0x3ce
 29800 2189 30       		.uleb128 0x30
 29801 218a 340F0000 		.4byte	.LASF340
 29802 218e 08       		.byte	0x8
 29803 218f F701     		.2byte	0x1f7
 29804 2191 13040000 		.4byte	0x413
 29805 2195 30       		.uleb128 0x30
 29806 2196 5D000000 		.4byte	.LASF341
 29807 219a 08       		.byte	0x8
 29808 219b F801     		.2byte	0x1f8
 29809 219d 2C040000 		.4byte	0x42c
 29810 21a1 30       		.uleb128 0x30
 29811 21a2 630F0000 		.4byte	.LASF342
 29812 21a6 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 634


 29813 21a7 F901     		.2byte	0x1f9
 29814 21a9 5C0A0000 		.4byte	0xa5c
 29815 21ad 30       		.uleb128 0x30
 29816 21ae 4B0A0000 		.4byte	.LASF343
 29817 21b2 08       		.byte	0x8
 29818 21b3 F901     		.2byte	0x1f9
 29819 21b5 5C0A0000 		.4byte	0xa5c
 29820 21b9 30       		.uleb128 0x30
 29821 21ba 4A090000 		.4byte	.LASF344
 29822 21be 08       		.byte	0x8
 29823 21bf FA01     		.2byte	0x1fa
 29824 21c1 F20B0000 		.4byte	0xbf2
 29825 21c5 30       		.uleb128 0x30
 29826 21c6 55020000 		.4byte	.LASF345
 29827 21ca 08       		.byte	0x8
 29828 21cb FF01     		.2byte	0x1ff
 29829 21cd A3000000 		.4byte	0xa3
 29830 21d1 30       		.uleb128 0x30
 29831 21d2 790D0000 		.4byte	.LASF346
 29832 21d6 08       		.byte	0x8
 29833 21d7 0002     		.2byte	0x200
 29834 21d9 A3000000 		.4byte	0xa3
 29835 21dd 30       		.uleb128 0x30
 29836 21de AB0D0000 		.4byte	.LASF347
 29837 21e2 08       		.byte	0x8
 29838 21e3 0302     		.2byte	0x203
 29839 21e5 F3030000 		.4byte	0x3f3
 29840 21e9 30       		.uleb128 0x30
 29841 21ea 41110000 		.4byte	.LASF348
 29842 21ee 08       		.byte	0x8
 29843 21ef 0402     		.2byte	0x204
 29844 21f1 CB180000 		.4byte	0x18cb
 29845 21f5 30       		.uleb128 0x30
 29846 21f6 BC100000 		.4byte	.LASF349
 29847 21fa 08       		.byte	0x8
 29848 21fb 0702     		.2byte	0x207
 29849 21fd F3030000 		.4byte	0x3f3
 29850 2201 30       		.uleb128 0x30
 29851 2202 EE090000 		.4byte	.LASF350
 29852 2206 08       		.byte	0x8
 29853 2207 0E02     		.2byte	0x20e
 29854 2209 97000000 		.4byte	0x97
 29855 220d 30       		.uleb128 0x30
 29856 220e C7030000 		.4byte	.LASF351
 29857 2212 08       		.byte	0x8
 29858 2213 1002     		.2byte	0x210
 29859 2215 97000000 		.4byte	0x97
 29860 2219 30       		.uleb128 0x30
 29861 221a 9F090000 		.4byte	.LASF352
 29862 221e 08       		.byte	0x8
 29863 221f 1702     		.2byte	0x217
 29864 2221 97000000 		.4byte	0x97
 29865 2225 30       		.uleb128 0x30
 29866 2226 FA060000 		.4byte	.LASF353
 29867 222a 08       		.byte	0x8
 29868 222b 1802     		.2byte	0x218
 29869 222d 97000000 		.4byte	0x97
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 635


 29870 2231 09       		.uleb128 0x9
 29871 2232 C7000000 		.4byte	0xc7
 29872 2236 41220000 		.4byte	0x2241
 29873 223a 0A       		.uleb128 0xa
 29874 223b 18010000 		.4byte	0x118
 29875 223f 0B       		.byte	0xb
 29876 2240 00       		.byte	0
 29877 2241 30       		.uleb128 0x30
 29878 2242 BF030000 		.4byte	.LASF354
 29879 2246 08       		.byte	0x8
 29880 2247 1B02     		.2byte	0x21b
 29881 2249 31220000 		.4byte	0x2231
 29882 224d 30       		.uleb128 0x30
 29883 224e 78120000 		.4byte	.LASF355
 29884 2252 08       		.byte	0x8
 29885 2253 1C02     		.2byte	0x21c
 29886 2255 97000000 		.4byte	0x97
 29887 2259 09       		.uleb128 0x9
 29888 225a AF000000 		.4byte	0xaf
 29889 225e 69220000 		.4byte	0x2269
 29890 2262 0A       		.uleb128 0xa
 29891 2263 18010000 		.4byte	0x118
 29892 2267 04       		.byte	0x4
 29893 2268 00       		.byte	0
 29894 2269 30       		.uleb128 0x30
 29895 226a 0F060000 		.4byte	.LASF356
 29896 226e 08       		.byte	0x8
 29897 226f 2202     		.2byte	0x222
 29898 2271 59220000 		.4byte	0x2259
 29899 2275 30       		.uleb128 0x30
 29900 2276 720E0000 		.4byte	.LASF357
 29901 227a 08       		.byte	0x8
 29902 227b 2302     		.2byte	0x223
 29903 227d CB180000 		.4byte	0x18cb
 29904 2281 09       		.uleb128 0x9
 29905 2282 A3000000 		.4byte	0xa3
 29906 2286 97220000 		.4byte	0x2297
 29907 228a 0A       		.uleb128 0xa
 29908 228b 18010000 		.4byte	0x118
 29909 228f 01       		.byte	0x1
 29910 2290 0A       		.uleb128 0xa
 29911 2291 18010000 		.4byte	0x118
 29912 2295 04       		.byte	0x4
 29913 2296 00       		.byte	0
 29914 2297 30       		.uleb128 0x30
 29915 2298 6A110000 		.4byte	.LASF358
 29916 229c 08       		.byte	0x8
 29917 229d 2402     		.2byte	0x224
 29918 229f 81220000 		.4byte	0x2281
 29919 22a3 30       		.uleb128 0x30
 29920 22a4 62050000 		.4byte	.LASF359
 29921 22a8 08       		.byte	0x8
 29922 22a9 2B02     		.2byte	0x22b
 29923 22ab 0A030000 		.4byte	0x30a
 29924 22af 30       		.uleb128 0x30
 29925 22b0 E60F0000 		.4byte	.LASF360
 29926 22b4 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 636


 29927 22b5 3002     		.2byte	0x230
 29928 22b7 97000000 		.4byte	0x97
 29929 22bb 30       		.uleb128 0x30
 29930 22bc A7110000 		.4byte	.LASF361
 29931 22c0 08       		.byte	0x8
 29932 22c1 3102     		.2byte	0x231
 29933 22c3 CE070000 		.4byte	0x7ce
 29934 22c7 30       		.uleb128 0x30
 29935 22c8 8D100000 		.4byte	.LASF362
 29936 22cc 08       		.byte	0x8
 29937 22cd 3202     		.2byte	0x232
 29938 22cf 73000000 		.4byte	0x73
 29939 22d3 09       		.uleb128 0x9
 29940 22d4 73000000 		.4byte	0x73
 29941 22d8 E3220000 		.4byte	0x22e3
 29942 22dc 0A       		.uleb128 0xa
 29943 22dd 18010000 		.4byte	0x118
 29944 22e1 04       		.byte	0x4
 29945 22e2 00       		.byte	0
 29946 22e3 30       		.uleb128 0x30
 29947 22e4 93030000 		.4byte	.LASF363
 29948 22e8 08       		.byte	0x8
 29949 22e9 3302     		.2byte	0x233
 29950 22eb D3220000 		.4byte	0x22d3
 29951 22ef 09       		.uleb128 0x9
 29952 22f0 760B0000 		.4byte	0xb76
 29953 22f4 FF220000 		.4byte	0x22ff
 29954 22f8 0A       		.uleb128 0xa
 29955 22f9 18010000 		.4byte	0x118
 29956 22fd 04       		.byte	0x4
 29957 22fe 00       		.byte	0
 29958 22ff 30       		.uleb128 0x30
 29959 2300 62060000 		.4byte	.LASF364
 29960 2304 08       		.byte	0x8
 29961 2305 3402     		.2byte	0x234
 29962 2307 EF220000 		.4byte	0x22ef
 29963 230b 09       		.uleb128 0x9
 29964 230c 97000000 		.4byte	0x97
 29965 2310 21230000 		.4byte	0x2321
 29966 2314 0A       		.uleb128 0xa
 29967 2315 18010000 		.4byte	0x118
 29968 2319 04       		.byte	0x4
 29969 231a 0A       		.uleb128 0xa
 29970 231b 18010000 		.4byte	0x118
 29971 231f 02       		.byte	0x2
 29972 2320 00       		.byte	0
 29973 2321 30       		.uleb128 0x30
 29974 2322 9D0A0000 		.4byte	.LASF365
 29975 2326 08       		.byte	0x8
 29976 2327 3802     		.2byte	0x238
 29977 2329 0B230000 		.4byte	0x230b
 29978 232d 30       		.uleb128 0x30
 29979 232e 95120000 		.4byte	.LASF366
 29980 2332 08       		.byte	0x8
 29981 2333 3D02     		.2byte	0x23d
 29982 2335 97000000 		.4byte	0x97
 29983 2339 31       		.uleb128 0x31
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 637


 29984 233a 69100000 		.4byte	.LASF367
 29985 233e 01       		.byte	0x1
 29986 233f 33       		.byte	0x33
 29987 2340 4A230000 		.4byte	0x234a
 29988 2344 05       		.uleb128 0x5
 29989 2345 03       		.byte	0x3
 29990 2346 00000000 		.4byte	EEPROM_ADDR
 29991 234a 07       		.uleb128 0x7
 29992 234b 04       		.byte	0x4
 29993 234c 00010000 		.4byte	0x100
 29994 2350 00       		.byte	0
 29995              		.section	.debug_abbrev,"",%progbits
 29996              	.Ldebug_abbrev0:
 29997 0000 01       		.uleb128 0x1
 29998 0001 11       		.uleb128 0x11
 29999 0002 01       		.byte	0x1
 30000 0003 25       		.uleb128 0x25
 30001 0004 0E       		.uleb128 0xe
 30002 0005 13       		.uleb128 0x13
 30003 0006 0B       		.uleb128 0xb
 30004 0007 03       		.uleb128 0x3
 30005 0008 0E       		.uleb128 0xe
 30006 0009 1B       		.uleb128 0x1b
 30007 000a 0E       		.uleb128 0xe
 30008 000b 55       		.uleb128 0x55
 30009 000c 17       		.uleb128 0x17
 30010 000d 11       		.uleb128 0x11
 30011 000e 01       		.uleb128 0x1
 30012 000f 10       		.uleb128 0x10
 30013 0010 17       		.uleb128 0x17
 30014 0011 00       		.byte	0
 30015 0012 00       		.byte	0
 30016 0013 02       		.uleb128 0x2
 30017 0014 24       		.uleb128 0x24
 30018 0015 00       		.byte	0
 30019 0016 0B       		.uleb128 0xb
 30020 0017 0B       		.uleb128 0xb
 30021 0018 3E       		.uleb128 0x3e
 30022 0019 0B       		.uleb128 0xb
 30023 001a 03       		.uleb128 0x3
 30024 001b 0E       		.uleb128 0xe
 30025 001c 00       		.byte	0
 30026 001d 00       		.byte	0
 30027 001e 03       		.uleb128 0x3
 30028 001f 16       		.uleb128 0x16
 30029 0020 00       		.byte	0
 30030 0021 03       		.uleb128 0x3
 30031 0022 0E       		.uleb128 0xe
 30032 0023 3A       		.uleb128 0x3a
 30033 0024 0B       		.uleb128 0xb
 30034 0025 3B       		.uleb128 0x3b
 30035 0026 0B       		.uleb128 0xb
 30036 0027 49       		.uleb128 0x49
 30037 0028 13       		.uleb128 0x13
 30038 0029 00       		.byte	0
 30039 002a 00       		.byte	0
 30040 002b 04       		.uleb128 0x4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 638


 30041 002c 24       		.uleb128 0x24
 30042 002d 00       		.byte	0
 30043 002e 0B       		.uleb128 0xb
 30044 002f 0B       		.uleb128 0xb
 30045 0030 3E       		.uleb128 0x3e
 30046 0031 0B       		.uleb128 0xb
 30047 0032 03       		.uleb128 0x3
 30048 0033 08       		.uleb128 0x8
 30049 0034 00       		.byte	0
 30050 0035 00       		.byte	0
 30051 0036 05       		.uleb128 0x5
 30052 0037 16       		.uleb128 0x16
 30053 0038 00       		.byte	0
 30054 0039 03       		.uleb128 0x3
 30055 003a 0E       		.uleb128 0xe
 30056 003b 3A       		.uleb128 0x3a
 30057 003c 0B       		.uleb128 0xb
 30058 003d 3B       		.uleb128 0x3b
 30059 003e 05       		.uleb128 0x5
 30060 003f 49       		.uleb128 0x49
 30061 0040 13       		.uleb128 0x13
 30062 0041 00       		.byte	0
 30063 0042 00       		.byte	0
 30064 0043 06       		.uleb128 0x6
 30065 0044 35       		.uleb128 0x35
 30066 0045 00       		.byte	0
 30067 0046 49       		.uleb128 0x49
 30068 0047 13       		.uleb128 0x13
 30069 0048 00       		.byte	0
 30070 0049 00       		.byte	0
 30071 004a 07       		.uleb128 0x7
 30072 004b 0F       		.uleb128 0xf
 30073 004c 00       		.byte	0
 30074 004d 0B       		.uleb128 0xb
 30075 004e 0B       		.uleb128 0xb
 30076 004f 49       		.uleb128 0x49
 30077 0050 13       		.uleb128 0x13
 30078 0051 00       		.byte	0
 30079 0052 00       		.byte	0
 30080 0053 08       		.uleb128 0x8
 30081 0054 26       		.uleb128 0x26
 30082 0055 00       		.byte	0
 30083 0056 49       		.uleb128 0x49
 30084 0057 13       		.uleb128 0x13
 30085 0058 00       		.byte	0
 30086 0059 00       		.byte	0
 30087 005a 09       		.uleb128 0x9
 30088 005b 01       		.uleb128 0x1
 30089 005c 01       		.byte	0x1
 30090 005d 49       		.uleb128 0x49
 30091 005e 13       		.uleb128 0x13
 30092 005f 01       		.uleb128 0x1
 30093 0060 13       		.uleb128 0x13
 30094 0061 00       		.byte	0
 30095 0062 00       		.byte	0
 30096 0063 0A       		.uleb128 0xa
 30097 0064 21       		.uleb128 0x21
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 639


 30098 0065 00       		.byte	0
 30099 0066 49       		.uleb128 0x49
 30100 0067 13       		.uleb128 0x13
 30101 0068 2F       		.uleb128 0x2f
 30102 0069 0B       		.uleb128 0xb
 30103 006a 00       		.byte	0
 30104 006b 00       		.byte	0
 30105 006c 0B       		.uleb128 0xb
 30106 006d 04       		.uleb128 0x4
 30107 006e 01       		.byte	0x1
 30108 006f 03       		.uleb128 0x3
 30109 0070 0E       		.uleb128 0xe
 30110 0071 0B       		.uleb128 0xb
 30111 0072 0B       		.uleb128 0xb
 30112 0073 49       		.uleb128 0x49
 30113 0074 13       		.uleb128 0x13
 30114 0075 3A       		.uleb128 0x3a
 30115 0076 0B       		.uleb128 0xb
 30116 0077 3B       		.uleb128 0x3b
 30117 0078 0B       		.uleb128 0xb
 30118 0079 01       		.uleb128 0x1
 30119 007a 13       		.uleb128 0x13
 30120 007b 00       		.byte	0
 30121 007c 00       		.byte	0
 30122 007d 0C       		.uleb128 0xc
 30123 007e 28       		.uleb128 0x28
 30124 007f 00       		.byte	0
 30125 0080 03       		.uleb128 0x3
 30126 0081 0E       		.uleb128 0xe
 30127 0082 1C       		.uleb128 0x1c
 30128 0083 0B       		.uleb128 0xb
 30129 0084 00       		.byte	0
 30130 0085 00       		.byte	0
 30131 0086 0D       		.uleb128 0xd
 30132 0087 13       		.uleb128 0x13
 30133 0088 00       		.byte	0
 30134 0089 03       		.uleb128 0x3
 30135 008a 0E       		.uleb128 0xe
 30136 008b 3C       		.uleb128 0x3c
 30137 008c 19       		.uleb128 0x19
 30138 008d 00       		.byte	0
 30139 008e 00       		.byte	0
 30140 008f 0E       		.uleb128 0xe
 30141 0090 13       		.uleb128 0x13
 30142 0091 01       		.byte	0x1
 30143 0092 03       		.uleb128 0x3
 30144 0093 0E       		.uleb128 0xe
 30145 0094 0B       		.uleb128 0xb
 30146 0095 0B       		.uleb128 0xb
 30147 0096 3A       		.uleb128 0x3a
 30148 0097 0B       		.uleb128 0xb
 30149 0098 3B       		.uleb128 0x3b
 30150 0099 0B       		.uleb128 0xb
 30151 009a 01       		.uleb128 0x1
 30152 009b 13       		.uleb128 0x13
 30153 009c 00       		.byte	0
 30154 009d 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 640


 30155 009e 0F       		.uleb128 0xf
 30156 009f 0D       		.uleb128 0xd
 30157 00a0 00       		.byte	0
 30158 00a1 03       		.uleb128 0x3
 30159 00a2 08       		.uleb128 0x8
 30160 00a3 3A       		.uleb128 0x3a
 30161 00a4 0B       		.uleb128 0xb
 30162 00a5 3B       		.uleb128 0x3b
 30163 00a6 0B       		.uleb128 0xb
 30164 00a7 49       		.uleb128 0x49
 30165 00a8 13       		.uleb128 0x13
 30166 00a9 38       		.uleb128 0x38
 30167 00aa 0B       		.uleb128 0xb
 30168 00ab 00       		.byte	0
 30169 00ac 00       		.byte	0
 30170 00ad 10       		.uleb128 0x10
 30171 00ae 0D       		.uleb128 0xd
 30172 00af 00       		.byte	0
 30173 00b0 03       		.uleb128 0x3
 30174 00b1 0E       		.uleb128 0xe
 30175 00b2 3A       		.uleb128 0x3a
 30176 00b3 0B       		.uleb128 0xb
 30177 00b4 3B       		.uleb128 0x3b
 30178 00b5 0B       		.uleb128 0xb
 30179 00b6 49       		.uleb128 0x49
 30180 00b7 13       		.uleb128 0x13
 30181 00b8 38       		.uleb128 0x38
 30182 00b9 0B       		.uleb128 0xb
 30183 00ba 00       		.byte	0
 30184 00bb 00       		.byte	0
 30185 00bc 11       		.uleb128 0x11
 30186 00bd 13       		.uleb128 0x13
 30187 00be 01       		.byte	0x1
 30188 00bf 03       		.uleb128 0x3
 30189 00c0 0E       		.uleb128 0xe
 30190 00c1 0B       		.uleb128 0xb
 30191 00c2 0B       		.uleb128 0xb
 30192 00c3 3A       		.uleb128 0x3a
 30193 00c4 0B       		.uleb128 0xb
 30194 00c5 3B       		.uleb128 0x3b
 30195 00c6 05       		.uleb128 0x5
 30196 00c7 01       		.uleb128 0x1
 30197 00c8 13       		.uleb128 0x13
 30198 00c9 00       		.byte	0
 30199 00ca 00       		.byte	0
 30200 00cb 12       		.uleb128 0x12
 30201 00cc 0D       		.uleb128 0xd
 30202 00cd 00       		.byte	0
 30203 00ce 03       		.uleb128 0x3
 30204 00cf 0E       		.uleb128 0xe
 30205 00d0 3A       		.uleb128 0x3a
 30206 00d1 0B       		.uleb128 0xb
 30207 00d2 3B       		.uleb128 0x3b
 30208 00d3 05       		.uleb128 0x5
 30209 00d4 49       		.uleb128 0x49
 30210 00d5 13       		.uleb128 0x13
 30211 00d6 38       		.uleb128 0x38
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 641


 30212 00d7 0B       		.uleb128 0xb
 30213 00d8 00       		.byte	0
 30214 00d9 00       		.byte	0
 30215 00da 13       		.uleb128 0x13
 30216 00db 0D       		.uleb128 0xd
 30217 00dc 00       		.byte	0
 30218 00dd 03       		.uleb128 0x3
 30219 00de 08       		.uleb128 0x8
 30220 00df 3A       		.uleb128 0x3a
 30221 00e0 0B       		.uleb128 0xb
 30222 00e1 3B       		.uleb128 0x3b
 30223 00e2 05       		.uleb128 0x5
 30224 00e3 49       		.uleb128 0x49
 30225 00e4 13       		.uleb128 0x13
 30226 00e5 38       		.uleb128 0x38
 30227 00e6 0B       		.uleb128 0xb
 30228 00e7 00       		.byte	0
 30229 00e8 00       		.byte	0
 30230 00e9 14       		.uleb128 0x14
 30231 00ea 13       		.uleb128 0x13
 30232 00eb 01       		.byte	0x1
 30233 00ec 03       		.uleb128 0x3
 30234 00ed 0E       		.uleb128 0xe
 30235 00ee 0B       		.uleb128 0xb
 30236 00ef 05       		.uleb128 0x5
 30237 00f0 3A       		.uleb128 0x3a
 30238 00f1 0B       		.uleb128 0xb
 30239 00f2 3B       		.uleb128 0x3b
 30240 00f3 05       		.uleb128 0x5
 30241 00f4 01       		.uleb128 0x1
 30242 00f5 13       		.uleb128 0x13
 30243 00f6 00       		.byte	0
 30244 00f7 00       		.byte	0
 30245 00f8 15       		.uleb128 0x15
 30246 00f9 0D       		.uleb128 0xd
 30247 00fa 00       		.byte	0
 30248 00fb 03       		.uleb128 0x3
 30249 00fc 08       		.uleb128 0x8
 30250 00fd 3A       		.uleb128 0x3a
 30251 00fe 0B       		.uleb128 0xb
 30252 00ff 3B       		.uleb128 0x3b
 30253 0100 05       		.uleb128 0x5
 30254 0101 49       		.uleb128 0x49
 30255 0102 13       		.uleb128 0x13
 30256 0103 38       		.uleb128 0x38
 30257 0104 05       		.uleb128 0x5
 30258 0105 00       		.byte	0
 30259 0106 00       		.byte	0
 30260 0107 16       		.uleb128 0x16
 30261 0108 0D       		.uleb128 0xd
 30262 0109 00       		.byte	0
 30263 010a 03       		.uleb128 0x3
 30264 010b 0E       		.uleb128 0xe
 30265 010c 3A       		.uleb128 0x3a
 30266 010d 0B       		.uleb128 0xb
 30267 010e 3B       		.uleb128 0x3b
 30268 010f 05       		.uleb128 0x5
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 642


 30269 0110 49       		.uleb128 0x49
 30270 0111 13       		.uleb128 0x13
 30271 0112 38       		.uleb128 0x38
 30272 0113 05       		.uleb128 0x5
 30273 0114 00       		.byte	0
 30274 0115 00       		.byte	0
 30275 0116 17       		.uleb128 0x17
 30276 0117 2E       		.uleb128 0x2e
 30277 0118 01       		.byte	0x1
 30278 0119 03       		.uleb128 0x3
 30279 011a 0E       		.uleb128 0xe
 30280 011b 3A       		.uleb128 0x3a
 30281 011c 0B       		.uleb128 0xb
 30282 011d 3B       		.uleb128 0x3b
 30283 011e 05       		.uleb128 0x5
 30284 011f 27       		.uleb128 0x27
 30285 0120 19       		.uleb128 0x19
 30286 0121 49       		.uleb128 0x49
 30287 0122 13       		.uleb128 0x13
 30288 0123 20       		.uleb128 0x20
 30289 0124 0B       		.uleb128 0xb
 30290 0125 01       		.uleb128 0x1
 30291 0126 13       		.uleb128 0x13
 30292 0127 00       		.byte	0
 30293 0128 00       		.byte	0
 30294 0129 18       		.uleb128 0x18
 30295 012a 05       		.uleb128 0x5
 30296 012b 00       		.byte	0
 30297 012c 03       		.uleb128 0x3
 30298 012d 0E       		.uleb128 0xe
 30299 012e 3A       		.uleb128 0x3a
 30300 012f 0B       		.uleb128 0xb
 30301 0130 3B       		.uleb128 0x3b
 30302 0131 05       		.uleb128 0x5
 30303 0132 49       		.uleb128 0x49
 30304 0133 13       		.uleb128 0x13
 30305 0134 00       		.byte	0
 30306 0135 00       		.byte	0
 30307 0136 19       		.uleb128 0x19
 30308 0137 34       		.uleb128 0x34
 30309 0138 00       		.byte	0
 30310 0139 03       		.uleb128 0x3
 30311 013a 0E       		.uleb128 0xe
 30312 013b 3A       		.uleb128 0x3a
 30313 013c 0B       		.uleb128 0xb
 30314 013d 3B       		.uleb128 0x3b
 30315 013e 05       		.uleb128 0x5
 30316 013f 49       		.uleb128 0x49
 30317 0140 13       		.uleb128 0x13
 30318 0141 00       		.byte	0
 30319 0142 00       		.byte	0
 30320 0143 1A       		.uleb128 0x1a
 30321 0144 2E       		.uleb128 0x2e
 30322 0145 01       		.byte	0x1
 30323 0146 3F       		.uleb128 0x3f
 30324 0147 19       		.uleb128 0x19
 30325 0148 03       		.uleb128 0x3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 643


 30326 0149 0E       		.uleb128 0xe
 30327 014a 3A       		.uleb128 0x3a
 30328 014b 0B       		.uleb128 0xb
 30329 014c 3B       		.uleb128 0x3b
 30330 014d 0B       		.uleb128 0xb
 30331 014e 27       		.uleb128 0x27
 30332 014f 19       		.uleb128 0x19
 30333 0150 11       		.uleb128 0x11
 30334 0151 01       		.uleb128 0x1
 30335 0152 12       		.uleb128 0x12
 30336 0153 06       		.uleb128 0x6
 30337 0154 40       		.uleb128 0x40
 30338 0155 18       		.uleb128 0x18
 30339 0156 9642     		.uleb128 0x2116
 30340 0158 19       		.uleb128 0x19
 30341 0159 01       		.uleb128 0x1
 30342 015a 13       		.uleb128 0x13
 30343 015b 00       		.byte	0
 30344 015c 00       		.byte	0
 30345 015d 1B       		.uleb128 0x1b
 30346 015e 34       		.uleb128 0x34
 30347 015f 00       		.byte	0
 30348 0160 03       		.uleb128 0x3
 30349 0161 0E       		.uleb128 0xe
 30350 0162 3A       		.uleb128 0x3a
 30351 0163 0B       		.uleb128 0xb
 30352 0164 3B       		.uleb128 0x3b
 30353 0165 0B       		.uleb128 0xb
 30354 0166 49       		.uleb128 0x49
 30355 0167 13       		.uleb128 0x13
 30356 0168 02       		.uleb128 0x2
 30357 0169 18       		.uleb128 0x18
 30358 016a 00       		.byte	0
 30359 016b 00       		.byte	0
 30360 016c 1C       		.uleb128 0x1c
 30361 016d 1D       		.uleb128 0x1d
 30362 016e 01       		.byte	0x1
 30363 016f 31       		.uleb128 0x31
 30364 0170 13       		.uleb128 0x13
 30365 0171 11       		.uleb128 0x11
 30366 0172 01       		.uleb128 0x1
 30367 0173 12       		.uleb128 0x12
 30368 0174 06       		.uleb128 0x6
 30369 0175 58       		.uleb128 0x58
 30370 0176 0B       		.uleb128 0xb
 30371 0177 59       		.uleb128 0x59
 30372 0178 0B       		.uleb128 0xb
 30373 0179 01       		.uleb128 0x1
 30374 017a 13       		.uleb128 0x13
 30375 017b 00       		.byte	0
 30376 017c 00       		.byte	0
 30377 017d 1D       		.uleb128 0x1d
 30378 017e 05       		.uleb128 0x5
 30379 017f 00       		.byte	0
 30380 0180 31       		.uleb128 0x31
 30381 0181 13       		.uleb128 0x13
 30382 0182 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 644


 30383 0183 18       		.uleb128 0x18
 30384 0184 00       		.byte	0
 30385 0185 00       		.byte	0
 30386 0186 1E       		.uleb128 0x1e
 30387 0187 0B       		.uleb128 0xb
 30388 0188 01       		.byte	0x1
 30389 0189 11       		.uleb128 0x11
 30390 018a 01       		.uleb128 0x1
 30391 018b 12       		.uleb128 0x12
 30392 018c 06       		.uleb128 0x6
 30393 018d 00       		.byte	0
 30394 018e 00       		.byte	0
 30395 018f 1F       		.uleb128 0x1f
 30396 0190 34       		.uleb128 0x34
 30397 0191 00       		.byte	0
 30398 0192 31       		.uleb128 0x31
 30399 0193 13       		.uleb128 0x13
 30400 0194 02       		.uleb128 0x2
 30401 0195 18       		.uleb128 0x18
 30402 0196 00       		.byte	0
 30403 0197 00       		.byte	0
 30404 0198 20       		.uleb128 0x20
 30405 0199 1D       		.uleb128 0x1d
 30406 019a 01       		.byte	0x1
 30407 019b 31       		.uleb128 0x31
 30408 019c 13       		.uleb128 0x13
 30409 019d 11       		.uleb128 0x11
 30410 019e 01       		.uleb128 0x1
 30411 019f 12       		.uleb128 0x12
 30412 01a0 06       		.uleb128 0x6
 30413 01a1 58       		.uleb128 0x58
 30414 01a2 0B       		.uleb128 0xb
 30415 01a3 59       		.uleb128 0x59
 30416 01a4 0B       		.uleb128 0xb
 30417 01a5 00       		.byte	0
 30418 01a6 00       		.byte	0
 30419 01a7 21       		.uleb128 0x21
 30420 01a8 2E       		.uleb128 0x2e
 30421 01a9 01       		.byte	0x1
 30422 01aa 3F       		.uleb128 0x3f
 30423 01ab 19       		.uleb128 0x19
 30424 01ac 03       		.uleb128 0x3
 30425 01ad 0E       		.uleb128 0xe
 30426 01ae 3A       		.uleb128 0x3a
 30427 01af 0B       		.uleb128 0xb
 30428 01b0 3B       		.uleb128 0x3b
 30429 01b1 05       		.uleb128 0x5
 30430 01b2 27       		.uleb128 0x27
 30431 01b3 19       		.uleb128 0x19
 30432 01b4 11       		.uleb128 0x11
 30433 01b5 01       		.uleb128 0x1
 30434 01b6 12       		.uleb128 0x12
 30435 01b7 06       		.uleb128 0x6
 30436 01b8 40       		.uleb128 0x40
 30437 01b9 18       		.uleb128 0x18
 30438 01ba 9642     		.uleb128 0x2116
 30439 01bc 19       		.uleb128 0x19
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 645


 30440 01bd 01       		.uleb128 0x1
 30441 01be 13       		.uleb128 0x13
 30442 01bf 00       		.byte	0
 30443 01c0 00       		.byte	0
 30444 01c1 22       		.uleb128 0x22
 30445 01c2 34       		.uleb128 0x34
 30446 01c3 00       		.byte	0
 30447 01c4 03       		.uleb128 0x3
 30448 01c5 0E       		.uleb128 0xe
 30449 01c6 3A       		.uleb128 0x3a
 30450 01c7 0B       		.uleb128 0xb
 30451 01c8 3B       		.uleb128 0x3b
 30452 01c9 05       		.uleb128 0x5
 30453 01ca 49       		.uleb128 0x49
 30454 01cb 13       		.uleb128 0x13
 30455 01cc 02       		.uleb128 0x2
 30456 01cd 18       		.uleb128 0x18
 30457 01ce 00       		.byte	0
 30458 01cf 00       		.byte	0
 30459 01d0 23       		.uleb128 0x23
 30460 01d1 21       		.uleb128 0x21
 30461 01d2 00       		.byte	0
 30462 01d3 49       		.uleb128 0x49
 30463 01d4 13       		.uleb128 0x13
 30464 01d5 2F       		.uleb128 0x2f
 30465 01d6 05       		.uleb128 0x5
 30466 01d7 00       		.byte	0
 30467 01d8 00       		.byte	0
 30468 01d9 24       		.uleb128 0x24
 30469 01da 05       		.uleb128 0x5
 30470 01db 00       		.byte	0
 30471 01dc 03       		.uleb128 0x3
 30472 01dd 0E       		.uleb128 0xe
 30473 01de 3A       		.uleb128 0x3a
 30474 01df 0B       		.uleb128 0xb
 30475 01e0 3B       		.uleb128 0x3b
 30476 01e1 05       		.uleb128 0x5
 30477 01e2 49       		.uleb128 0x49
 30478 01e3 13       		.uleb128 0x13
 30479 01e4 02       		.uleb128 0x2
 30480 01e5 18       		.uleb128 0x18
 30481 01e6 00       		.byte	0
 30482 01e7 00       		.byte	0
 30483 01e8 25       		.uleb128 0x25
 30484 01e9 34       		.uleb128 0x34
 30485 01ea 00       		.byte	0
 30486 01eb 03       		.uleb128 0x3
 30487 01ec 08       		.uleb128 0x8
 30488 01ed 3A       		.uleb128 0x3a
 30489 01ee 0B       		.uleb128 0xb
 30490 01ef 3B       		.uleb128 0x3b
 30491 01f0 05       		.uleb128 0x5
 30492 01f1 49       		.uleb128 0x49
 30493 01f2 13       		.uleb128 0x13
 30494 01f3 02       		.uleb128 0x2
 30495 01f4 18       		.uleb128 0x18
 30496 01f5 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 646


 30497 01f6 00       		.byte	0
 30498 01f7 26       		.uleb128 0x26
 30499 01f8 2E       		.uleb128 0x2e
 30500 01f9 01       		.byte	0x1
 30501 01fa 3F       		.uleb128 0x3f
 30502 01fb 19       		.uleb128 0x19
 30503 01fc 03       		.uleb128 0x3
 30504 01fd 0E       		.uleb128 0xe
 30505 01fe 3A       		.uleb128 0x3a
 30506 01ff 0B       		.uleb128 0xb
 30507 0200 3B       		.uleb128 0x3b
 30508 0201 05       		.uleb128 0x5
 30509 0202 11       		.uleb128 0x11
 30510 0203 01       		.uleb128 0x1
 30511 0204 12       		.uleb128 0x12
 30512 0205 06       		.uleb128 0x6
 30513 0206 40       		.uleb128 0x40
 30514 0207 18       		.uleb128 0x18
 30515 0208 9642     		.uleb128 0x2116
 30516 020a 19       		.uleb128 0x19
 30517 020b 01       		.uleb128 0x1
 30518 020c 13       		.uleb128 0x13
 30519 020d 00       		.byte	0
 30520 020e 00       		.byte	0
 30521 020f 27       		.uleb128 0x27
 30522 0210 05       		.uleb128 0x5
 30523 0211 00       		.byte	0
 30524 0212 03       		.uleb128 0x3
 30525 0213 08       		.uleb128 0x8
 30526 0214 3A       		.uleb128 0x3a
 30527 0215 0B       		.uleb128 0xb
 30528 0216 3B       		.uleb128 0x3b
 30529 0217 05       		.uleb128 0x5
 30530 0218 49       		.uleb128 0x49
 30531 0219 13       		.uleb128 0x13
 30532 021a 02       		.uleb128 0x2
 30533 021b 18       		.uleb128 0x18
 30534 021c 00       		.byte	0
 30535 021d 00       		.byte	0
 30536 021e 28       		.uleb128 0x28
 30537 021f 2E       		.uleb128 0x2e
 30538 0220 01       		.byte	0x1
 30539 0221 3F       		.uleb128 0x3f
 30540 0222 19       		.uleb128 0x19
 30541 0223 03       		.uleb128 0x3
 30542 0224 0E       		.uleb128 0xe
 30543 0225 3A       		.uleb128 0x3a
 30544 0226 0B       		.uleb128 0xb
 30545 0227 3B       		.uleb128 0x3b
 30546 0228 05       		.uleb128 0x5
 30547 0229 27       		.uleb128 0x27
 30548 022a 19       		.uleb128 0x19
 30549 022b 49       		.uleb128 0x49
 30550 022c 13       		.uleb128 0x13
 30551 022d 11       		.uleb128 0x11
 30552 022e 01       		.uleb128 0x1
 30553 022f 12       		.uleb128 0x12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 647


 30554 0230 06       		.uleb128 0x6
 30555 0231 40       		.uleb128 0x40
 30556 0232 18       		.uleb128 0x18
 30557 0233 9742     		.uleb128 0x2117
 30558 0235 19       		.uleb128 0x19
 30559 0236 01       		.uleb128 0x1
 30560 0237 13       		.uleb128 0x13
 30561 0238 00       		.byte	0
 30562 0239 00       		.byte	0
 30563 023a 29       		.uleb128 0x29
 30564 023b 2E       		.uleb128 0x2e
 30565 023c 01       		.byte	0x1
 30566 023d 3F       		.uleb128 0x3f
 30567 023e 19       		.uleb128 0x19
 30568 023f 03       		.uleb128 0x3
 30569 0240 0E       		.uleb128 0xe
 30570 0241 3A       		.uleb128 0x3a
 30571 0242 0B       		.uleb128 0xb
 30572 0243 3B       		.uleb128 0x3b
 30573 0244 05       		.uleb128 0x5
 30574 0245 27       		.uleb128 0x27
 30575 0246 19       		.uleb128 0x19
 30576 0247 49       		.uleb128 0x49
 30577 0248 13       		.uleb128 0x13
 30578 0249 11       		.uleb128 0x11
 30579 024a 01       		.uleb128 0x1
 30580 024b 12       		.uleb128 0x12
 30581 024c 06       		.uleb128 0x6
 30582 024d 40       		.uleb128 0x40
 30583 024e 18       		.uleb128 0x18
 30584 024f 9642     		.uleb128 0x2116
 30585 0251 19       		.uleb128 0x19
 30586 0252 01       		.uleb128 0x1
 30587 0253 13       		.uleb128 0x13
 30588 0254 00       		.byte	0
 30589 0255 00       		.byte	0
 30590 0256 2A       		.uleb128 0x2a
 30591 0257 2E       		.uleb128 0x2e
 30592 0258 01       		.byte	0x1
 30593 0259 3F       		.uleb128 0x3f
 30594 025a 19       		.uleb128 0x19
 30595 025b 03       		.uleb128 0x3
 30596 025c 0E       		.uleb128 0xe
 30597 025d 3A       		.uleb128 0x3a
 30598 025e 0B       		.uleb128 0xb
 30599 025f 3B       		.uleb128 0x3b
 30600 0260 05       		.uleb128 0x5
 30601 0261 27       		.uleb128 0x27
 30602 0262 19       		.uleb128 0x19
 30603 0263 11       		.uleb128 0x11
 30604 0264 01       		.uleb128 0x1
 30605 0265 12       		.uleb128 0x12
 30606 0266 06       		.uleb128 0x6
 30607 0267 40       		.uleb128 0x40
 30608 0268 18       		.uleb128 0x18
 30609 0269 9742     		.uleb128 0x2117
 30610 026b 19       		.uleb128 0x19
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 648


 30611 026c 01       		.uleb128 0x1
 30612 026d 13       		.uleb128 0x13
 30613 026e 00       		.byte	0
 30614 026f 00       		.byte	0
 30615 0270 2B       		.uleb128 0x2b
 30616 0271 2E       		.uleb128 0x2e
 30617 0272 00       		.byte	0
 30618 0273 3F       		.uleb128 0x3f
 30619 0274 19       		.uleb128 0x19
 30620 0275 03       		.uleb128 0x3
 30621 0276 0E       		.uleb128 0xe
 30622 0277 3A       		.uleb128 0x3a
 30623 0278 0B       		.uleb128 0xb
 30624 0279 3B       		.uleb128 0x3b
 30625 027a 05       		.uleb128 0x5
 30626 027b 27       		.uleb128 0x27
 30627 027c 19       		.uleb128 0x19
 30628 027d 11       		.uleb128 0x11
 30629 027e 01       		.uleb128 0x1
 30630 027f 12       		.uleb128 0x12
 30631 0280 06       		.uleb128 0x6
 30632 0281 40       		.uleb128 0x40
 30633 0282 18       		.uleb128 0x18
 30634 0283 9742     		.uleb128 0x2117
 30635 0285 19       		.uleb128 0x19
 30636 0286 00       		.byte	0
 30637 0287 00       		.byte	0
 30638 0288 2C       		.uleb128 0x2c
 30639 0289 2E       		.uleb128 0x2e
 30640 028a 01       		.byte	0x1
 30641 028b 3F       		.uleb128 0x3f
 30642 028c 19       		.uleb128 0x19
 30643 028d 03       		.uleb128 0x3
 30644 028e 0E       		.uleb128 0xe
 30645 028f 3A       		.uleb128 0x3a
 30646 0290 0B       		.uleb128 0xb
 30647 0291 3B       		.uleb128 0x3b
 30648 0292 05       		.uleb128 0x5
 30649 0293 11       		.uleb128 0x11
 30650 0294 01       		.uleb128 0x1
 30651 0295 12       		.uleb128 0x12
 30652 0296 06       		.uleb128 0x6
 30653 0297 40       		.uleb128 0x40
 30654 0298 18       		.uleb128 0x18
 30655 0299 9742     		.uleb128 0x2117
 30656 029b 19       		.uleb128 0x19
 30657 029c 01       		.uleb128 0x1
 30658 029d 13       		.uleb128 0x13
 30659 029e 00       		.byte	0
 30660 029f 00       		.byte	0
 30661 02a0 2D       		.uleb128 0x2d
 30662 02a1 0B       		.uleb128 0xb
 30663 02a2 01       		.byte	0x1
 30664 02a3 11       		.uleb128 0x11
 30665 02a4 01       		.uleb128 0x1
 30666 02a5 12       		.uleb128 0x12
 30667 02a6 06       		.uleb128 0x6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 649


 30668 02a7 01       		.uleb128 0x1
 30669 02a8 13       		.uleb128 0x13
 30670 02a9 00       		.byte	0
 30671 02aa 00       		.byte	0
 30672 02ab 2E       		.uleb128 0x2e
 30673 02ac 2E       		.uleb128 0x2e
 30674 02ad 01       		.byte	0x1
 30675 02ae 3F       		.uleb128 0x3f
 30676 02af 19       		.uleb128 0x19
 30677 02b0 03       		.uleb128 0x3
 30678 02b1 0E       		.uleb128 0xe
 30679 02b2 3A       		.uleb128 0x3a
 30680 02b3 0B       		.uleb128 0xb
 30681 02b4 3B       		.uleb128 0x3b
 30682 02b5 05       		.uleb128 0x5
 30683 02b6 49       		.uleb128 0x49
 30684 02b7 13       		.uleb128 0x13
 30685 02b8 11       		.uleb128 0x11
 30686 02b9 01       		.uleb128 0x1
 30687 02ba 12       		.uleb128 0x12
 30688 02bb 06       		.uleb128 0x6
 30689 02bc 40       		.uleb128 0x40
 30690 02bd 18       		.uleb128 0x18
 30691 02be 9642     		.uleb128 0x2116
 30692 02c0 19       		.uleb128 0x19
 30693 02c1 01       		.uleb128 0x1
 30694 02c2 13       		.uleb128 0x13
 30695 02c3 00       		.byte	0
 30696 02c4 00       		.byte	0
 30697 02c5 2F       		.uleb128 0x2f
 30698 02c6 2E       		.uleb128 0x2e
 30699 02c7 00       		.byte	0
 30700 02c8 3F       		.uleb128 0x3f
 30701 02c9 19       		.uleb128 0x19
 30702 02ca 03       		.uleb128 0x3
 30703 02cb 0E       		.uleb128 0xe
 30704 02cc 3A       		.uleb128 0x3a
 30705 02cd 0B       		.uleb128 0xb
 30706 02ce 3B       		.uleb128 0x3b
 30707 02cf 05       		.uleb128 0x5
 30708 02d0 11       		.uleb128 0x11
 30709 02d1 01       		.uleb128 0x1
 30710 02d2 12       		.uleb128 0x12
 30711 02d3 06       		.uleb128 0x6
 30712 02d4 40       		.uleb128 0x40
 30713 02d5 18       		.uleb128 0x18
 30714 02d6 9642     		.uleb128 0x2116
 30715 02d8 19       		.uleb128 0x19
 30716 02d9 00       		.byte	0
 30717 02da 00       		.byte	0
 30718 02db 30       		.uleb128 0x30
 30719 02dc 34       		.uleb128 0x34
 30720 02dd 00       		.byte	0
 30721 02de 03       		.uleb128 0x3
 30722 02df 0E       		.uleb128 0xe
 30723 02e0 3A       		.uleb128 0x3a
 30724 02e1 0B       		.uleb128 0xb
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 650


 30725 02e2 3B       		.uleb128 0x3b
 30726 02e3 05       		.uleb128 0x5
 30727 02e4 49       		.uleb128 0x49
 30728 02e5 13       		.uleb128 0x13
 30729 02e6 3F       		.uleb128 0x3f
 30730 02e7 19       		.uleb128 0x19
 30731 02e8 3C       		.uleb128 0x3c
 30732 02e9 19       		.uleb128 0x19
 30733 02ea 00       		.byte	0
 30734 02eb 00       		.byte	0
 30735 02ec 31       		.uleb128 0x31
 30736 02ed 34       		.uleb128 0x34
 30737 02ee 00       		.byte	0
 30738 02ef 03       		.uleb128 0x3
 30739 02f0 0E       		.uleb128 0xe
 30740 02f1 3A       		.uleb128 0x3a
 30741 02f2 0B       		.uleb128 0xb
 30742 02f3 3B       		.uleb128 0x3b
 30743 02f4 0B       		.uleb128 0xb
 30744 02f5 49       		.uleb128 0x49
 30745 02f6 13       		.uleb128 0x13
 30746 02f7 3F       		.uleb128 0x3f
 30747 02f8 19       		.uleb128 0x19
 30748 02f9 02       		.uleb128 0x2
 30749 02fa 18       		.uleb128 0x18
 30750 02fb 00       		.byte	0
 30751 02fc 00       		.byte	0
 30752 02fd 00       		.byte	0
 30753              		.section	.debug_aranges,"",%progbits
 30754 0000 A4010000 		.4byte	0x1a4
 30755 0004 0200     		.2byte	0x2
 30756 0006 00000000 		.4byte	.Ldebug_info0
 30757 000a 04       		.byte	0x4
 30758 000b 00       		.byte	0
 30759 000c 0000     		.2byte	0
 30760 000e 0000     		.2byte	0
 30761 0010 00000000 		.4byte	.LFB64
 30762 0014 DC040000 		.4byte	.LFE64-.LFB64
 30763 0018 00000000 		.4byte	.LFB65
 30764 001c 22000000 		.4byte	.LFE65-.LFB65
 30765 0020 00000000 		.4byte	.LFB66
 30766 0024 02010000 		.4byte	.LFE66-.LFB66
 30767 0028 00000000 		.4byte	.LFB67
 30768 002c 9E2F0000 		.4byte	.LFE67-.LFB67
 30769 0030 00000000 		.4byte	.LFB68
 30770 0034 C0170000 		.4byte	.LFE68-.LFB68
 30771 0038 00000000 		.4byte	.LFB69
 30772 003c 18140000 		.4byte	.LFE69-.LFB69
 30773 0040 00000000 		.4byte	.LFB70
 30774 0044 F40D0000 		.4byte	.LFE70-.LFB70
 30775 0048 00000000 		.4byte	.LFB71
 30776 004c 84000000 		.4byte	.LFE71-.LFB71
 30777 0050 00000000 		.4byte	.LFB72
 30778 0054 681B0000 		.4byte	.LFE72-.LFB72
 30779 0058 00000000 		.4byte	.LFB73
 30780 005c B4030000 		.4byte	.LFE73-.LFB73
 30781 0060 00000000 		.4byte	.LFB74
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 651


 30782 0064 38120000 		.4byte	.LFE74-.LFB74
 30783 0068 00000000 		.4byte	.LFB75
 30784 006c C8000000 		.4byte	.LFE75-.LFB75
 30785 0070 00000000 		.4byte	.LFB76
 30786 0074 30010000 		.4byte	.LFE76-.LFB76
 30787 0078 00000000 		.4byte	.LFB77
 30788 007c 74030000 		.4byte	.LFE77-.LFB77
 30789 0080 00000000 		.4byte	.LFB78
 30790 0084 84000000 		.4byte	.LFE78-.LFB78
 30791 0088 00000000 		.4byte	.LFB79
 30792 008c 88000000 		.4byte	.LFE79-.LFB79
 30793 0090 00000000 		.4byte	.LFB80
 30794 0094 A0000000 		.4byte	.LFE80-.LFB80
 30795 0098 00000000 		.4byte	.LFB81
 30796 009c 3E000000 		.4byte	.LFE81-.LFB81
 30797 00a0 00000000 		.4byte	.LFB82
 30798 00a4 2E000000 		.4byte	.LFE82-.LFB82
 30799 00a8 00000000 		.4byte	.LFB83
 30800 00ac 98000000 		.4byte	.LFE83-.LFB83
 30801 00b0 00000000 		.4byte	.LFB84
 30802 00b4 80000000 		.4byte	.LFE84-.LFB84
 30803 00b8 00000000 		.4byte	.LFB85
 30804 00bc 5C000000 		.4byte	.LFE85-.LFB85
 30805 00c0 00000000 		.4byte	.LFB86
 30806 00c4 D4050000 		.4byte	.LFE86-.LFB86
 30807 00c8 00000000 		.4byte	.LFB87
 30808 00cc 30020000 		.4byte	.LFE87-.LFB87
 30809 00d0 00000000 		.4byte	.LFB88
 30810 00d4 28000000 		.4byte	.LFE88-.LFB88
 30811 00d8 00000000 		.4byte	.LFB89
 30812 00dc 78000000 		.4byte	.LFE89-.LFB89
 30813 00e0 00000000 		.4byte	.LFB90
 30814 00e4 B4000000 		.4byte	.LFE90-.LFB90
 30815 00e8 00000000 		.4byte	.LFB91
 30816 00ec B8000000 		.4byte	.LFE91-.LFB91
 30817 00f0 00000000 		.4byte	.LFB92
 30818 00f4 B8000000 		.4byte	.LFE92-.LFB92
 30819 00f8 00000000 		.4byte	.LFB93
 30820 00fc 44020000 		.4byte	.LFE93-.LFB93
 30821 0100 00000000 		.4byte	.LFB94
 30822 0104 E4000000 		.4byte	.LFE94-.LFB94
 30823 0108 00000000 		.4byte	.LFB95
 30824 010c 5C000000 		.4byte	.LFE95-.LFB95
 30825 0110 00000000 		.4byte	.LFB96
 30826 0114 38010000 		.4byte	.LFE96-.LFB96
 30827 0118 00000000 		.4byte	.LFB97
 30828 011c EC000000 		.4byte	.LFE97-.LFB97
 30829 0120 00000000 		.4byte	.LFB98
 30830 0124 64000000 		.4byte	.LFE98-.LFB98
 30831 0128 00000000 		.4byte	.LFB99
 30832 012c A8000000 		.4byte	.LFE99-.LFB99
 30833 0130 00000000 		.4byte	.LFB100
 30834 0134 34000000 		.4byte	.LFE100-.LFB100
 30835 0138 00000000 		.4byte	.LFB101
 30836 013c 20000000 		.4byte	.LFE101-.LFB101
 30837 0140 00000000 		.4byte	.LFB102
 30838 0144 6C000000 		.4byte	.LFE102-.LFB102
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 652


 30839 0148 00000000 		.4byte	.LFB103
 30840 014c BC010000 		.4byte	.LFE103-.LFB103
 30841 0150 00000000 		.4byte	.LFB104
 30842 0154 60000000 		.4byte	.LFE104-.LFB104
 30843 0158 00000000 		.4byte	.LFB105
 30844 015c 98050000 		.4byte	.LFE105-.LFB105
 30845 0160 00000000 		.4byte	.LFB106
 30846 0164 8C000000 		.4byte	.LFE106-.LFB106
 30847 0168 00000000 		.4byte	.LFB107
 30848 016c EC000000 		.4byte	.LFE107-.LFB107
 30849 0170 00000000 		.4byte	.LFB108
 30850 0174 5C000000 		.4byte	.LFE108-.LFB108
 30851 0178 00000000 		.4byte	.LFB109
 30852 017c C0000000 		.4byte	.LFE109-.LFB109
 30853 0180 00000000 		.4byte	.LFB110
 30854 0184 A8010000 		.4byte	.LFE110-.LFB110
 30855 0188 00000000 		.4byte	.LFB111
 30856 018c 5C010000 		.4byte	.LFE111-.LFB111
 30857 0190 00000000 		.4byte	.LFB112
 30858 0194 28000000 		.4byte	.LFE112-.LFB112
 30859 0198 00000000 		.4byte	.LFB113
 30860 019c 84000000 		.4byte	.LFE113-.LFB113
 30861 01a0 00000000 		.4byte	0
 30862 01a4 00000000 		.4byte	0
 30863              		.section	.debug_ranges,"",%progbits
 30864              	.Ldebug_ranges0:
 30865 0000 00000000 		.4byte	.LFB64
 30866 0004 DC040000 		.4byte	.LFE64
 30867 0008 00000000 		.4byte	.LFB65
 30868 000c 22000000 		.4byte	.LFE65
 30869 0010 00000000 		.4byte	.LFB66
 30870 0014 02010000 		.4byte	.LFE66
 30871 0018 00000000 		.4byte	.LFB67
 30872 001c 9E2F0000 		.4byte	.LFE67
 30873 0020 00000000 		.4byte	.LFB68
 30874 0024 C0170000 		.4byte	.LFE68
 30875 0028 00000000 		.4byte	.LFB69
 30876 002c 18140000 		.4byte	.LFE69
 30877 0030 00000000 		.4byte	.LFB70
 30878 0034 F40D0000 		.4byte	.LFE70
 30879 0038 00000000 		.4byte	.LFB71
 30880 003c 84000000 		.4byte	.LFE71
 30881 0040 00000000 		.4byte	.LFB72
 30882 0044 681B0000 		.4byte	.LFE72
 30883 0048 00000000 		.4byte	.LFB73
 30884 004c B4030000 		.4byte	.LFE73
 30885 0050 00000000 		.4byte	.LFB74
 30886 0054 38120000 		.4byte	.LFE74
 30887 0058 00000000 		.4byte	.LFB75
 30888 005c C8000000 		.4byte	.LFE75
 30889 0060 00000000 		.4byte	.LFB76
 30890 0064 30010000 		.4byte	.LFE76
 30891 0068 00000000 		.4byte	.LFB77
 30892 006c 74030000 		.4byte	.LFE77
 30893 0070 00000000 		.4byte	.LFB78
 30894 0074 84000000 		.4byte	.LFE78
 30895 0078 00000000 		.4byte	.LFB79
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 653


 30896 007c 88000000 		.4byte	.LFE79
 30897 0080 00000000 		.4byte	.LFB80
 30898 0084 A0000000 		.4byte	.LFE80
 30899 0088 00000000 		.4byte	.LFB81
 30900 008c 3E000000 		.4byte	.LFE81
 30901 0090 00000000 		.4byte	.LFB82
 30902 0094 2E000000 		.4byte	.LFE82
 30903 0098 00000000 		.4byte	.LFB83
 30904 009c 98000000 		.4byte	.LFE83
 30905 00a0 00000000 		.4byte	.LFB84
 30906 00a4 80000000 		.4byte	.LFE84
 30907 00a8 00000000 		.4byte	.LFB85
 30908 00ac 5C000000 		.4byte	.LFE85
 30909 00b0 00000000 		.4byte	.LFB86
 30910 00b4 D4050000 		.4byte	.LFE86
 30911 00b8 00000000 		.4byte	.LFB87
 30912 00bc 30020000 		.4byte	.LFE87
 30913 00c0 00000000 		.4byte	.LFB88
 30914 00c4 28000000 		.4byte	.LFE88
 30915 00c8 00000000 		.4byte	.LFB89
 30916 00cc 78000000 		.4byte	.LFE89
 30917 00d0 00000000 		.4byte	.LFB90
 30918 00d4 B4000000 		.4byte	.LFE90
 30919 00d8 00000000 		.4byte	.LFB91
 30920 00dc B8000000 		.4byte	.LFE91
 30921 00e0 00000000 		.4byte	.LFB92
 30922 00e4 B8000000 		.4byte	.LFE92
 30923 00e8 00000000 		.4byte	.LFB93
 30924 00ec 44020000 		.4byte	.LFE93
 30925 00f0 00000000 		.4byte	.LFB94
 30926 00f4 E4000000 		.4byte	.LFE94
 30927 00f8 00000000 		.4byte	.LFB95
 30928 00fc 5C000000 		.4byte	.LFE95
 30929 0100 00000000 		.4byte	.LFB96
 30930 0104 38010000 		.4byte	.LFE96
 30931 0108 00000000 		.4byte	.LFB97
 30932 010c EC000000 		.4byte	.LFE97
 30933 0110 00000000 		.4byte	.LFB98
 30934 0114 64000000 		.4byte	.LFE98
 30935 0118 00000000 		.4byte	.LFB99
 30936 011c A8000000 		.4byte	.LFE99
 30937 0120 00000000 		.4byte	.LFB100
 30938 0124 34000000 		.4byte	.LFE100
 30939 0128 00000000 		.4byte	.LFB101
 30940 012c 20000000 		.4byte	.LFE101
 30941 0130 00000000 		.4byte	.LFB102
 30942 0134 6C000000 		.4byte	.LFE102
 30943 0138 00000000 		.4byte	.LFB103
 30944 013c BC010000 		.4byte	.LFE103
 30945 0140 00000000 		.4byte	.LFB104
 30946 0144 60000000 		.4byte	.LFE104
 30947 0148 00000000 		.4byte	.LFB105
 30948 014c 98050000 		.4byte	.LFE105
 30949 0150 00000000 		.4byte	.LFB106
 30950 0154 8C000000 		.4byte	.LFE106
 30951 0158 00000000 		.4byte	.LFB107
 30952 015c EC000000 		.4byte	.LFE107
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 654


 30953 0160 00000000 		.4byte	.LFB108
 30954 0164 5C000000 		.4byte	.LFE108
 30955 0168 00000000 		.4byte	.LFB109
 30956 016c C0000000 		.4byte	.LFE109
 30957 0170 00000000 		.4byte	.LFB110
 30958 0174 A8010000 		.4byte	.LFE110
 30959 0178 00000000 		.4byte	.LFB111
 30960 017c 5C010000 		.4byte	.LFE111
 30961 0180 00000000 		.4byte	.LFB112
 30962 0184 28000000 		.4byte	.LFE112
 30963 0188 00000000 		.4byte	.LFB113
 30964 018c 84000000 		.4byte	.LFE113
 30965 0190 00000000 		.4byte	0
 30966 0194 00000000 		.4byte	0
 30967              		.section	.debug_line,"",%progbits
 30968              	.Ldebug_line0:
 30969 0000 C91C0000 		.section	.debug_str,"MS",%progbits,1
 30969      0200C001 
 30969      00000201 
 30969      FB0E0D00 
 30969      01010101 
 30970              	.LASF200:
 30971 0000 696E666F 		.ascii	"infoSend\000"
 30971      53656E64 
 30971      00
 30972              	.LASF251:
 30973 0009 69645F73 		.ascii	"id_str\000"
 30973      747200
 30974              	.LASF25:
 30975 0010 73697A65 		.ascii	"sizetype\000"
 30975      74797065 
 30975      00
 30976              	.LASF33:
 30977 0019 434D445F 		.ascii	"CMD_INIT_MEM\000"
 30977      494E4954 
 30977      5F4D454D 
 30977      00
 30978              	.LASF315:
 30979 0026 676C5F63 		.ascii	"gl_c\000"
 30979      00
 30980              	.LASF62:
 30981 002b 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS_ADV\000"
 30981      545F4D4F 
 30981      44455F45 
 30981      4D475F46 
 30981      4346535F 
 30982              	.LASF36:
 30983 0043 434D445F 		.ascii	"CMD_ACTIVATE\000"
 30983      41435449 
 30983      56415445 
 30983      00
 30984              	.LASF186:
 30985 0050 75736572 		.ascii	"user\000"
 30985      00
 30986              	.LASF11:
 30987 0055 696E7433 		.ascii	"int32_t\000"
 30987      325F7400 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 655


 30988              	.LASF341:
 30989 005d 675F7278 		.ascii	"g_rx\000"
 30989      00
 30990              	.LASF97:
 30991 0062 73745F64 		.ascii	"st_data\000"
 30991      61746100 
 30992              	.LASF338:
 30993 006a 675F656D 		.ascii	"g_emg_meas\000"
 30993      675F6D65 
 30993      617300
 30994              	.LASF282:
 30995 0075 77726974 		.ascii	"writeStatus\000"
 30995      65537461 
 30995      74757300 
 30996              	.LASF15:
 30997 0081 75696E74 		.ascii	"uint32\000"
 30997      333200
 30998              	.LASF329:
 30999 0088 636D645F 		.ascii	"cmd_set_baudrate\000"
 30999      7365745F 
 30999      62617564 
 30999      72617465 
 30999      00
 31000              	.LASF321:
 31001 0099 6169725F 		.ascii	"air_chambers_control\000"
 31001      6368616D 
 31001      62657273 
 31001      5F636F6E 
 31001      74726F6C 
 31002              	.LASF259:
 31003 00ae 7370695F 		.ascii	"spi_read_delay_str_len\000"
 31003      72656164 
 31003      5F64656C 
 31003      61795F73 
 31003      74725F6C 
 31004              	.LASF216:
 31005 00c5 7061636B 		.ascii	"packet_lenght\000"
 31005      65745F6C 
 31005      656E6768 
 31005      7400
 31006              	.LASF261:
 31007 00d3 70726570 		.ascii	"prepare_generic_info\000"
 31007      6172655F 
 31007      67656E65 
 31007      7269635F 
 31007      696E666F 
 31008              	.LASF133:
 31009 00e8 706F735F 		.ascii	"pos_lim_inf\000"
 31009      6C696D5F 
 31009      696E6600 
 31010              	.LASF226:
 31011 00f4 5345434F 		.ascii	"SECOND_MOTOR_IDX\000"
 31011      4E445F4D 
 31011      4F544F52 
 31011      5F494458 
 31011      00
 31012              	.LASF308:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 656


 31013 0105 636D645F 		.ascii	"cmd_get_inputs\000"
 31013      6765745F 
 31013      696E7075 
 31013      747300
 31014              	.LASF61:
 31015 0114 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS\000"
 31015      545F4D4F 
 31015      44455F45 
 31015      4D475F46 
 31015      43465300 
 31016              	.LASF137:
 31017 0128 63757272 		.ascii	"curr_lookup\000"
 31017      5F6C6F6F 
 31017      6B757000 
 31018              	.LASF105:
 31019 0134 72657374 		.ascii	"rest_counter\000"
 31019      5F636F75 
 31019      6E746572 
 31019      00
 31020              	.LASF313:
 31021 0141 636D645F 		.ascii	"cmd_get_imu_readings\000"
 31021      6765745F 
 31021      696D755F 
 31021      72656164 
 31021      696E6773 
 31022              	.LASF175:
 31023 0156 73745F4D 		.ascii	"st_MASTER_spec\000"
 31023      41535445 
 31023      525F7370 
 31023      656300
 31024              	.LASF254:
 31025 0165 69645F73 		.ascii	"id_str_len\000"
 31025      74725F6C 
 31025      656E00
 31026              	.LASF60:
 31027 0170 494E5055 		.ascii	"INPUT_MODE_EMG_INTEGRAL\000"
 31027      545F4D4F 
 31027      44455F45 
 31027      4D475F49 
 31027      4E544547 
 31028              	.LASF228:
 31029 0188 6D5F746D 		.ascii	"m_tmp\000"
 31029      7000
 31030              	.LASF16:
 31031 018e 696E7438 		.ascii	"int8\000"
 31031      00
 31032              	.LASF205:
 31033 0193 6765745F 		.ascii	"get_param_list\000"
 31033      70617261 
 31033      6D5F6C69 
 31033      737400
 31034              	.LASF312:
 31035 01a2 636D645F 		.ascii	"cmd_get_emg\000"
 31035      6765745F 
 31035      656D6700 
 31036              	.LASF152:
 31037 01ae 73745F65 		.ascii	"st_emg\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 657


 31037      6D6700
 31038              	.LASF103:
 31039 01b5 706F7369 		.ascii	"position_hist\000"
 31039      74696F6E 
 31039      5F686973 
 31039      7400
 31040              	.LASF193:
 31041 01c3 74656D70 		.ascii	"temp_value\000"
 31041      5F76616C 
 31041      756500
 31042              	.LASF372:
 31043 01ce 72657375 		.ascii	"result\000"
 31043      6C7400
 31044              	.LASF253:
 31045 01d5 7370695F 		.ascii	"spi_read_delay_str\000"
 31045      72656164 
 31045      5F64656C 
 31045      61795F73 
 31045      747200
 31046              	.LASF100:
 31047 01e8 72656164 		.ascii	"ready\000"
 31047      7900
 31048              	.LASF149:
 31049 01ee 456E635F 		.ascii	"Enc_idx_use_for_control\000"
 31049      6964785F 
 31049      7573655F 
 31049      666F725F 
 31049      636F6E74 
 31050              	.LASF109:
 31051 0206 73745F64 		.ascii	"st_device\000"
 31051      65766963 
 31051      6500
 31052              	.LASF59:
 31053 0210 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL\000"
 31053      545F4D4F 
 31053      44455F45 
 31053      4D475F50 
 31053      524F504F 
 31054              	.LASF114:
 31055 022c 7573655F 		.ascii	"use_2nd_motor_flag\000"
 31055      326E645F 
 31055      6D6F746F 
 31055      725F666C 
 31055      616700
 31056              	.LASF304:
 31057 023f 745F7374 		.ascii	"t_start\000"
 31057      61727400 
 31058              	.LASF159:
 31059 0247 72656164 		.ascii	"read_imu_flag\000"
 31059      5F696D75 
 31059      5F666C61 
 31059      6700
 31060              	.LASF345:
 31061 0255 74696D65 		.ascii	"timer_value\000"
 31061      725F7661 
 31061      6C756500 
 31062              	.LASF4:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 658


 31063 0261 6C6F6E67 		.ascii	"long int\000"
 31063      20696E74 
 31063      00
 31064              	.LASF184:
 31065 026a 756E7573 		.ascii	"unused_bytes1\000"
 31065      65645F62 
 31065      79746573 
 31065      3100
 31066              	.LASF328:
 31067 0278 6D6F746F 		.ascii	"motor_idx\000"
 31067      725F6964 
 31067      7800
 31068              	.LASF113:
 31069 0282 72657365 		.ascii	"reset_counters\000"
 31069      745F636F 
 31069      756E7465 
 31069      727300
 31070              	.LASF169:
 31071 0291 75736572 		.ascii	"user_emg\000"
 31071      5F656D67 
 31071      00
 31072              	.LASF291:
 31073 029a 7365745A 		.ascii	"setZeros\000"
 31073      65726F73 
 31073      00
 31074              	.LASF118:
 31075 02a3 756E7573 		.ascii	"unused_bytes\000"
 31075      65645F62 
 31075      79746573 
 31075      00
 31076              	.LASF189:
 31077 02b0 61636365 		.ascii	"accel_value\000"
 31077      6C5F7661 
 31077      6C756500 
 31078              	.LASF209:
 31079 02bc 4E554D5F 		.ascii	"NUM_ITEMS\000"
 31079      4954454D 
 31079      5300
 31080              	.LASF101:
 31081 02c6 73745F63 		.ascii	"st_counters\000"
 31081      6F756E74 
 31081      65727300 
 31082              	.LASF232:
 31083 02d2 4D454D5F 		.ascii	"MEM_P\000"
 31083      5000
 31084              	.LASF19:
 31085 02d8 666C6F61 		.ascii	"float32\000"
 31085      74333200 
 31086              	.LASF319:
 31087 02e0 636D645F 		.ascii	"cmd_get_ADC_map\000"
 31087      6765745F 
 31087      4144435F 
 31087      6D617000 
 31088              	.LASF41:
 31089 02f0 434D445F 		.ascii	"CMD_GET_CURRENTS\000"
 31089      4745545F 
 31089      43555252 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 659


 31089      454E5453 
 31089      00
 31090              	.LASF102:
 31091 0301 656D675F 		.ascii	"emg_counter\000"
 31091      636F756E 
 31091      74657200 
 31092              	.LASF320:
 31093 030d 636D645F 		.ascii	"cmd_get_ADC_raw\000"
 31093      6765745F 
 31093      4144435F 
 31093      72617700 
 31094              	.LASF324:
 31095 031d 70726573 		.ascii	"pressure_value\000"
 31095      73757265 
 31095      5F76616C 
 31095      756500
 31096              	.LASF241:
 31097 032c 6175785F 		.ascii	"aux_float2\000"
 31097      666C6F61 
 31097      743200
 31098              	.LASF307:
 31099 0337 636D645F 		.ascii	"cmd_ping\000"
 31099      70696E67 
 31099      00
 31100              	.LASF260:
 31101 0340 7370695F 		.ascii	"spi_delay_menu_len\000"
 31101      64656C61 
 31101      795F6D65 
 31101      6E755F6C 
 31101      656E00
 31102              	.LASF239:
 31103 0353 7365745F 		.ascii	"set_custom_param\000"
 31103      63757374 
 31103      6F6D5F70 
 31103      6172616D 
 31103      00
 31104              	.LASF0:
 31105 0364 7369676E 		.ascii	"signed char\000"
 31105      65642063 
 31105      68617200 
 31106              	.LASF168:
 31107 0370 75736572 		.ascii	"user_code_string\000"
 31107      5F636F64 
 31107      655F7374 
 31107      72696E67 
 31107      00
 31108              	.LASF194:
 31109 0381 73745F63 		.ascii	"st_calib\000"
 31109      616C6962 
 31109      00
 31110              	.LASF280:
 31111 038a 6D656D53 		.ascii	"memStore\000"
 31111      746F7265 
 31111      00
 31112              	.LASF363:
 31113 0393 73696E67 		.ascii	"single_imu_size\000"
 31113      6C655F69 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 660


 31113      6D755F73 
 31113      697A6500 
 31114              	.LASF69:
 31115 03a3 6D6F746F 		.ascii	"motor_supply_type\000"
 31115      725F7375 
 31115      70706C79 
 31115      5F747970 
 31115      6500
 31116              	.LASF306:
 31117 03b5 72656164 		.ascii	"read_flag\000"
 31117      5F666C61 
 31117      6700
 31118              	.LASF354:
 31119 03bf 4144435F 		.ascii	"ADC_buf\000"
 31119      62756600 
 31120              	.LASF351:
 31121 03c7 696E7465 		.ascii	"interrupt_flag\000"
 31121      72727570 
 31121      745F666C 
 31121      616700
 31122              	.LASF265:
 31123 03d6 73746570 		.ascii	"step\000"
 31123      00
 31124              	.LASF1:
 31125 03db 756E7369 		.ascii	"unsigned char\000"
 31125      676E6564 
 31125      20636861 
 31125      7200
 31126              	.LASF143:
 31127 03e9 6E6F745F 		.ascii	"not_revers_motor_flag\000"
 31127      72657665 
 31127      72735F6D 
 31127      6F746F72 
 31127      5F666C61 
 31128              	.LASF334:
 31129 03ff 675F7265 		.ascii	"g_refNew\000"
 31129      664E6577 
 31129      00
 31130              	.LASF112:
 31131 0408 72696768 		.ascii	"right_left\000"
 31131      745F6C65 
 31131      667400
 31132              	.LASF29:
 31133 0413 434D445F 		.ascii	"CMD_STORE_DEFAULT_PARAMS\000"
 31133      53544F52 
 31133      455F4445 
 31133      4641554C 
 31133      545F5041 
 31134              	.LASF141:
 31135 042c 656E636F 		.ascii	"encoder_line\000"
 31135      6465725F 
 31135      6C696E65 
 31135      00
 31136              	.LASF255:
 31137 0439 6E5F696D 		.ascii	"n_imu_str_len\000"
 31137      755F7374 
 31137      725F6C65 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 661


 31137      6E00
 31138              	.LASF258:
 31139 0447 696D755F 		.ascii	"imu_table_str_len\000"
 31139      7461626C 
 31139      655F7374 
 31139      725F6C65 
 31139      6E00
 31140              	.LASF278:
 31141 0459 76616C75 		.ascii	"value\000"
 31141      6500
 31142              	.LASF188:
 31143 045f 666C6167 		.ascii	"flags\000"
 31143      7300
 31144              	.LASF96:
 31145 0465 70726573 		.ascii	"pressure\000"
 31145      73757265 
 31145      00
 31146              	.LASF37:
 31147 046e 434D445F 		.ascii	"CMD_GET_ACTIVATE\000"
 31147      4745545F 
 31147      41435449 
 31147      56415445 
 31147      00
 31148              	.LASF22:
 31149 047f 63686172 		.ascii	"char\000"
 31149      00
 31150              	.LASF136:
 31151 0484 6D61785F 		.ascii	"max_step_pos\000"
 31151      73746570 
 31151      5F706F73 
 31151      00
 31152              	.LASF325:
 31153 0491 76616C76 		.ascii	"valve_command\000"
 31153      655F636F 
 31153      6D6D616E 
 31153      6400
 31154              	.LASF322:
 31155 049f 70726573 		.ascii	"pressure_reference\000"
 31155      73757265 
 31155      5F726566 
 31155      6572656E 
 31155      636500
 31156              	.LASF284:
 31157 04b2 7265745F 		.ascii	"ret_val\000"
 31157      76616C00 
 31158              	.LASF238:
 31159 04ba 6D656E75 		.ascii	"menu_idx\000"
 31159      5F696478 
 31159      00
 31160              	.LASF247:
 31161 04c3 73746172 		.ascii	"start_byte\000"
 31161      745F6279 
 31161      746500
 31162              	.LASF244:
 31163 04ce 6E756D5F 		.ascii	"num_mag_cal_params\000"
 31163      6D61675F 
 31163      63616C5F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 662


 31163      70617261 
 31163      6D7300
 31164              	.LASF142:
 31165 04e1 70776D5F 		.ascii	"pwm_rate_limiter\000"
 31165      72617465 
 31165      5F6C696D 
 31165      69746572 
 31165      00
 31166              	.LASF122:
 31167 04f2 6B5F645F 		.ascii	"k_d_c\000"
 31167      6300
 31168              	.LASF95:
 31169 04f8 73745F66 		.ascii	"st_fb_meas\000"
 31169      625F6D65 
 31169      617300
 31170              	.LASF202:
 31171 0503 7061636B 		.ascii	"packet_string\000"
 31171      65745F73 
 31171      7472696E 
 31171      6700
 31172              	.LASF147:
 31173 0511 6D5F6D75 		.ascii	"m_mult\000"
 31173      6C7400
 31174              	.LASF121:
 31175 0518 6B5F695F 		.ascii	"k_i_c\000"
 31175      6300
 31176              	.LASF281:
 31177 051e 64697370 		.ascii	"displacement\000"
 31177      6C616365 
 31177      6D656E74 
 31177      00
 31178              	.LASF275:
 31179 052b 64617461 		.ascii	"data_length\000"
 31179      5F6C656E 
 31179      67746800 
 31180              	.LASF134:
 31181 0537 706F735F 		.ascii	"pos_lim_sup\000"
 31181      6C696D5F 
 31181      73757000 
 31182              	.LASF155:
 31183 0543 656D675F 		.ascii	"emg_speed\000"
 31183      73706565 
 31183      6400
 31184              	.LASF173:
 31185 054d 72657374 		.ascii	"rest_vel\000"
 31185      5F76656C 
 31185      00
 31186              	.LASF215:
 31187 0556 7061636B 		.ascii	"packet_data\000"
 31187      65745F64 
 31187      61746100 
 31188              	.LASF359:
 31189 0562 7046696C 		.ascii	"pFile\000"
 31189      6500
 31190              	.LASF166:
 31191 0568 4144435F 		.ascii	"ADC_conf\000"
 31191      636F6E66 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 663


 31191      00
 31192              	.LASF272:
 31193 0571 636F6D6D 		.ascii	"commWrite\000"
 31193      57726974 
 31193      6500
 31194              	.LASF331:
 31195 057b 64656163 		.ascii	"deactivate_slaves\000"
 31195      74697661 
 31195      74655F73 
 31195      6C617665 
 31195      7300
 31196              	.LASF283:
 31197 058d 70616765 		.ascii	"pages\000"
 31197      7300
 31198              	.LASF287:
 31199 0593 6D656D49 		.ascii	"memInit\000"
 31199      6E697400 
 31200              	.LASF124:
 31201 059b 6B5F695F 		.ascii	"k_i_dl\000"
 31201      646C00
 31202              	.LASF38:
 31203 05a2 434D445F 		.ascii	"CMD_SET_INPUTS\000"
 31203      5345545F 
 31203      494E5055 
 31203      545300
 31204              	.LASF98:
 31205 05b1 62756666 		.ascii	"buffer\000"
 31205      657200
 31206              	.LASF126:
 31207 05b8 6B5F705F 		.ascii	"k_p_c_dl\000"
 31207      635F646C 
 31207      00
 31208              	.LASF292:
 31209 05c1 636D645F 		.ascii	"cmd_get_measurements\000"
 31209      6765745F 
 31209      6D656173 
 31209      7572656D 
 31209      656E7473 
 31210              	.LASF197:
 31211 05d6 73706565 		.ascii	"speed\000"
 31211      6400
 31212              	.LASF201:
 31213 05dc 72785F63 		.ascii	"rx_cmd\000"
 31213      6D6400
 31214              	.LASF84:
 31215 05e3 54595045 		.ascii	"TYPE_DOUBLE\000"
 31215      5F444F55 
 31215      424C4500 
 31216              	.LASF336:
 31217 05ef 675F6D65 		.ascii	"g_meas\000"
 31217      617300
 31218              	.LASF296:
 31219 05f6 6C617374 		.ascii	"last_aux_int16\000"
 31219      5F617578 
 31219      5F696E74 
 31219      313600
 31220              	.LASF73:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 664


 31221 0605 41434B5F 		.ascii	"ACK_ERROR\000"
 31221      4552524F 
 31221      5200
 31222              	.LASF356:
 31223 060f 64617461 		.ascii	"data_encoder_raw\000"
 31223      5F656E63 
 31223      6F646572 
 31223      5F726177 
 31223      00
 31224              	.LASF57:
 31225 0620 494E5055 		.ascii	"INPUT_MODE_EXTERNAL\000"
 31225      545F4D4F 
 31225      44455F45 
 31225      58544552 
 31225      4E414C00 
 31226              	.LASF230:
 31227 0634 696E6465 		.ascii	"index\000"
 31227      7800
 31228              	.LASF180:
 31229 063a 6D617869 		.ascii	"maximum_pressure_kPa\000"
 31229      6D756D5F 
 31229      70726573 
 31229      73757265 
 31229      5F6B5061 
 31230              	.LASF174:
 31231 064f 72657374 		.ascii	"rest_position_flag\000"
 31231      5F706F73 
 31231      6974696F 
 31231      6E5F666C 
 31231      616700
 31232              	.LASF364:
 31233 0662 675F696D 		.ascii	"g_imu\000"
 31233      7500
 31234              	.LASF127:
 31235 0668 6B5F695F 		.ascii	"k_i_c_dl\000"
 31235      635F646C 
 31235      00
 31236              	.LASF302:
 31237 0671 636F6D6D 		.ascii	"commReadResCurrFromSH\000"
 31237      52656164 
 31237      52657343 
 31237      75727246 
 31237      726F6D53 
 31238              	.LASF250:
 31239 0687 6D61675F 		.ascii	"mag_param_str\000"
 31239      70617261 
 31239      6D5F7374 
 31239      7200
 31240              	.LASF370:
 31241 0695 433A5C55 		.ascii	"C:\\Users\\Mattia\\Documents\\GITHUB\\SoftHandPRO-a"
 31241      73657273 
 31241      5C4D6174 
 31241      7469615C 
 31241      446F6375 
 31242 06c3 6E642D47 		.ascii	"nd-Generic-FW-PSoC5\\Air_Chambers_Haptic_Feedback.c"
 31242      656E6572 
 31242      69632D46 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 665


 31242      572D5053 
 31242      6F43355C 
 31243 06f5 7964736E 		.ascii	"ydsn\000"
 31243      00
 31244              	.LASF353:
 31245 06fa 72657365 		.ascii	"reset_PSoC_flag\000"
 31245      745F5053 
 31245      6F435F66 
 31245      6C616700 
 31246              	.LASF85:
 31247 070a 54595045 		.ascii	"TYPE_STRING\000"
 31247      5F535452 
 31247      494E4700 
 31248              	.LASF68:
 31249 0716 43555252 		.ascii	"CURR_AND_POS_CONTROL\000"
 31249      5F414E44 
 31249      5F504F53 
 31249      5F434F4E 
 31249      54524F4C 
 31250              	.LASF28:
 31251 072b 434D445F 		.ascii	"CMD_STORE_PARAMS\000"
 31251      53544F52 
 31251      455F5041 
 31251      52414D53 
 31251      00
 31252              	.LASF212:
 31253 073c 50415241 		.ascii	"PARAMS_STR\000"
 31253      4D535F53 
 31253      545200
 31254              	.LASF195:
 31255 0747 656E6162 		.ascii	"enabled\000"
 31255      6C656400 
 31256              	.LASF7:
 31257 074f 6C6F6E67 		.ascii	"long unsigned int\000"
 31257      20756E73 
 31257      69676E65 
 31257      6420696E 
 31257      7400
 31258              	.LASF107:
 31259 0761 746F7461 		.ascii	"total_time_on\000"
 31259      6C5F7469 
 31259      6D655F6F 
 31259      6E00
 31260              	.LASF32:
 31261 076f 434D445F 		.ascii	"CMD_BOOTLOADER\000"
 31261      424F4F54 
 31261      4C4F4144 
 31261      455200
 31262              	.LASF92:
 31263 077e 686F6C64 		.ascii	"hold_curr\000"
 31263      5F637572 
 31263      7200
 31264              	.LASF294:
 31265 0788 636D645F 		.ascii	"cmd_get_accelerations\000"
 31265      6765745F 
 31265      61636365 
 31265      6C657261 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 666


 31265      74696F6E 
 31266              	.LASF108:
 31267 079e 746F7461 		.ascii	"total_time_rest\000"
 31267      6C5F7469 
 31267      6D655F72 
 31267      65737400 
 31268              	.LASF204:
 31269 07ae 7374725F 		.ascii	"str_sd_data\000"
 31269      73645F64 
 31269      61746100 
 31270              	.LASF129:
 31271 07ba 61637469 		.ascii	"activ\000"
 31271      7600
 31272              	.LASF214:
 31273 07c0 4D454E55 		.ascii	"MENU_STR\000"
 31273      5F535452 
 31273      00
 31274              	.LASF146:
 31275 07c9 6D5F6F66 		.ascii	"m_off\000"
 31275      6600
 31276              	.LASF74:
 31277 07cf 41434B5F 		.ascii	"ACK_OK\000"
 31277      4F4B00
 31278              	.LASF76:
 31279 07d6 54595045 		.ascii	"TYPE_FLAG\000"
 31279      5F464C41 
 31279      4700
 31280              	.LASF192:
 31281 07e0 71756174 		.ascii	"quat_value\000"
 31281      5F76616C 
 31281      756500
 31282              	.LASF246:
 31283 07eb 7061636B 		.ascii	"packet_length\000"
 31283      65745F6C 
 31283      656E6774 
 31283      6800
 31284              	.LASF171:
 31285 07f9 72657374 		.ascii	"rest_pos\000"
 31285      5F706F73 
 31285      00
 31286              	.LASF87:
 31287 0802 63757272 		.ascii	"curr\000"
 31287      00
 31288              	.LASF139:
 31289 0807 696E7075 		.ascii	"input_mode\000"
 31289      745F6D6F 
 31289      646500
 31290              	.LASF66:
 31291 0812 434F4E54 		.ascii	"CONTROL_PWM\000"
 31291      524F4C5F 
 31291      50574D00 
 31292              	.LASF43:
 31293 081e 434D445F 		.ascii	"CMD_GET_EMG\000"
 31293      4745545F 
 31293      454D4700 
 31294              	.LASF288:
 31295 082a 6D656D49 		.ascii	"memInit_SoftHandPro\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 667


 31295      6E69745F 
 31295      536F6674 
 31295      48616E64 
 31295      50726F00 
 31296              	.LASF31:
 31297 083e 434D445F 		.ascii	"CMD_GET_INFO\000"
 31297      4745545F 
 31297      494E464F 
 31297      00
 31298              	.LASF242:
 31299 084b 6765745F 		.ascii	"get_IMU_param_list\000"
 31299      494D555F 
 31299      70617261 
 31299      6D5F6C69 
 31299      737400
 31300              	.LASF316:
 31301 085e 73696E67 		.ascii	"single_packet\000"
 31301      6C655F70 
 31301      61636B65 
 31301      7400
 31302              	.LASF245:
 31303 086c 66697273 		.ascii	"first_imu_parameter\000"
 31303      745F696D 
 31303      755F7061 
 31303      72616D65 
 31303      74657200 
 31304              	.LASF42:
 31305 0880 434D445F 		.ascii	"CMD_GET_CURR_AND_MEAS\000"
 31305      4745545F 
 31305      43555252 
 31305      5F414E44 
 31305      5F4D4541 
 31306              	.LASF368:
 31307 0896 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 31307      43313120 
 31307      352E342E 
 31307      31203230 
 31307      31363036 
 31308 08c9 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 31308      20726576 
 31308      6973696F 
 31308      6E203233 
 31308      37373135 
 31309 08fc 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 31309      66756E63 
 31309      74696F6E 
 31309      2D736563 
 31309      74696F6E 
 31310              	.LASF89:
 31311 0924 73745F72 		.ascii	"st_ref\000"
 31311      656600
 31312              	.LASF47:
 31313 092b 434D445F 		.ascii	"CMD_SET_CUFF_INPUTS\000"
 31313      5345545F 
 31313      43554646 
 31313      5F494E50 
 31313      55545300 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 668


 31314              	.LASF170:
 31315 093f 73745F53 		.ascii	"st_SH_spec\000"
 31315      485F7370 
 31315      656300
 31316              	.LASF344:
 31317 094a 63616C69 		.ascii	"calib\000"
 31317      6200
 31318              	.LASF6:
 31319 0950 5F5F7569 		.ascii	"__uint32_t\000"
 31319      6E743332 
 31319      5F7400
 31320              	.LASF8:
 31321 095b 6C6F6E67 		.ascii	"long long int\000"
 31321      206C6F6E 
 31321      6720696E 
 31321      7400
 31322              	.LASF64:
 31323 0969 53485F63 		.ascii	"SH_control_mode\000"
 31323      6F6E7472 
 31323      6F6C5F6D 
 31323      6F646500 
 31324              	.LASF78:
 31325 0979 54595045 		.ascii	"TYPE_UINT8\000"
 31325      5F55494E 
 31325      543800
 31326              	.LASF300:
 31327 0984 636D645F 		.ascii	"cmd_get_currents\000"
 31327      6765745F 
 31327      63757272 
 31327      656E7473 
 31327      00
 31328              	.LASF71:
 31329 0995 4D41584F 		.ascii	"MAXON_12V\000"
 31329      4E5F3132 
 31329      5600
 31330              	.LASF352:
 31331 099f 6368616E 		.ascii	"change_ext_ref_flag\000"
 31331      67655F65 
 31331      78745F72 
 31331      65665F66 
 31331      6C616700 
 31332              	.LASF21:
 31333 09b3 646F7562 		.ascii	"double\000"
 31333      6C6500
 31334              	.LASF145:
 31335 09ba 456E635F 		.ascii	"Enc_raw_read_conf\000"
 31335      7261775F 
 31335      72656164 
 31335      5F636F6E 
 31335      6600
 31336              	.LASF198:
 31337 09cc 72657065 		.ascii	"repetitions\000"
 31337      74697469 
 31337      6F6E7300 
 31338              	.LASF135:
 31339 09d8 6D61785F 		.ascii	"max_step_neg\000"
 31339      73746570 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 669


 31339      5F6E6567 
 31339      00
 31340              	.LASF177:
 31341 09e5 736C6176 		.ascii	"slave_ID\000"
 31341      655F4944 
 31341      00
 31342              	.LASF350:
 31343 09ee 72657365 		.ascii	"reset_last_value_flag\000"
 31343      745F6C61 
 31343      73745F76 
 31343      616C7565 
 31343      5F666C61 
 31344              	.LASF213:
 31345 0a04 43555354 		.ascii	"CUSTOM_PARAM_GET\000"
 31345      4F4D5F50 
 31345      4152414D 
 31345      5F474554 
 31345      00
 31346              	.LASF20:
 31347 0a15 666C6F61 		.ascii	"float\000"
 31347      7400
 31348              	.LASF161:
 31349 0a1b 494D555F 		.ascii	"IMU_conf\000"
 31349      636F6E66 
 31349      00
 31350              	.LASF323:
 31351 0a24 6572725F 		.ascii	"err_pressure\000"
 31351      70726573 
 31351      73757265 
 31351      00
 31352              	.LASF231:
 31353 0a31 50415241 		.ascii	"PARAM_IDX\000"
 31353      4D5F4944 
 31353      5800
 31354              	.LASF119:
 31355 0a3b 73745F6D 		.ascii	"st_motor\000"
 31355      6F746F72 
 31355      00
 31356              	.LASF227:
 31357 0a44 6D5F6164 		.ascii	"m_addr\000"
 31357      647200
 31358              	.LASF343:
 31359 0a4b 635F6D65 		.ascii	"c_mem\000"
 31359      6D00
 31360              	.LASF274:
 31361 0a51 64617461 		.ascii	"data_array\000"
 31361      5F617272 
 31361      617900
 31362              	.LASF10:
 31363 0a5c 756E7369 		.ascii	"unsigned int\000"
 31363      676E6564 
 31363      20696E74 
 31363      00
 31364              	.LASF289:
 31365 0a69 6D656D49 		.ascii	"memInit_Master\000"
 31365      6E69745F 
 31365      4D617374 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 670


 31365      657200
 31366              	.LASF277:
 31367 0a78 73656E64 		.ascii	"sendAcknowledgment\000"
 31367      41636B6E 
 31367      6F776C65 
 31367      64676D65 
 31367      6E7400
 31368              	.LASF267:
 31369 0a8b 70726570 		.ascii	"prepare_SD_legend\000"
 31369      6172655F 
 31369      53445F6C 
 31369      6567656E 
 31369      6400
 31370              	.LASF365:
 31371 0a9d 4D616743 		.ascii	"MagCal\000"
 31371      616C00
 31372              	.LASF55:
 31373 0aa4 53485F63 		.ascii	"SH_command\000"
 31373      6F6D6D61 
 31373      6E6400
 31374              	.LASF80:
 31375 0aaf 54595045 		.ascii	"TYPE_UINT16\000"
 31375      5F55494E 
 31375      54313600 
 31376              	.LASF183:
 31377 0abb 666C6167 		.ascii	"flag\000"
 31377      00
 31378              	.LASF326:
 31379 0ac0 785F7661 		.ascii	"x_value\000"
 31379      6C756500 
 31380              	.LASF295:
 31381 0ac8 636D645F 		.ascii	"cmd_set_inputs\000"
 31381      7365745F 
 31381      696E7075 
 31381      747300
 31382              	.LASF140:
 31383 0ad7 636F6E74 		.ascii	"control_mode\000"
 31383      726F6C5F 
 31383      6D6F6465 
 31383      00
 31384              	.LASF310:
 31385 0ae4 6F66665F 		.ascii	"off_1\000"
 31385      3100
 31386              	.LASF58:
 31387 0aea 494E5055 		.ascii	"INPUT_MODE_ENCODER3\000"
 31387      545F4D4F 
 31387      44455F45 
 31387      4E434F44 
 31387      45523300 
 31388              	.LASF273:
 31389 0afe 636F6D6D 		.ascii	"commWriteID\000"
 31389      57726974 
 31389      65494400 
 31390              	.LASF51:
 31391 0b0a 434D445F 		.ascii	"CMD_GET_ENCODER_CONF\000"
 31391      4745545F 
 31391      454E434F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 671


 31391      4445525F 
 31391      434F4E46 
 31392              	.LASF158:
 31393 0b1f 73745F69 		.ascii	"st_imu\000"
 31393      6D7500
 31394              	.LASF298:
 31395 0b26 636D645F 		.ascii	"cmd_get_activate\000"
 31395      6765745F 
 31395      61637469 
 31395      76617465 
 31395      00
 31396              	.LASF218:
 31397 0b37 73747269 		.ascii	"string_lenght\000"
 31397      6E675F6C 
 31397      656E6768 
 31397      7400
 31398              	.LASF83:
 31399 0b45 54595045 		.ascii	"TYPE_FLOAT\000"
 31399      5F464C4F 
 31399      415400
 31400              	.LASF235:
 31401 0b50 43555354 		.ascii	"CUSTOM_PARAM_SET_LIST\000"
 31401      4F4D5F50 
 31401      4152414D 
 31401      5F534554 
 31401      5F4C4953 
 31402              	.LASF210:
 31403 0b66 4E554D5F 		.ascii	"NUM_STRUCT\000"
 31403      53545255 
 31403      435400
 31404              	.LASF240:
 31405 0b71 6175785F 		.ascii	"aux_uchar\000"
 31405      75636861 
 31405      7200
 31406              	.LASF94:
 31407 0b7b 6164645F 		.ascii	"add_emg\000"
 31407      656D6700 
 31408              	.LASF79:
 31409 0b83 54595045 		.ascii	"TYPE_INT16\000"
 31409      5F494E54 
 31409      313600
 31410              	.LASF222:
 31411 0b8e 6175785F 		.ascii	"aux_uint16\000"
 31411      75696E74 
 31411      313600
 31412              	.LASF153:
 31413 0b99 656D675F 		.ascii	"emg_threshold\000"
 31413      74687265 
 31413      73686F6C 
 31413      6400
 31414              	.LASF46:
 31415 0ba7 434D445F 		.ascii	"CMD_GET_CURR_DIFF\000"
 31415      4745545F 
 31415      43555252 
 31415      5F444946 
 31415      4600
 31416              	.LASF104:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 672


 31417 0bb9 63757272 		.ascii	"current_hist\000"
 31417      656E745F 
 31417      68697374 
 31417      00
 31418              	.LASF67:
 31419 0bc6 434F4E54 		.ascii	"CONTROL_CURRENT\000"
 31419      524F4C5F 
 31419      43555252 
 31419      454E5400 
 31420              	.LASF24:
 31421 0bd6 6C6F6E67 		.ascii	"long double\000"
 31421      20646F75 
 31421      626C6500 
 31422              	.LASF82:
 31423 0be2 54595045 		.ascii	"TYPE_UINT32\000"
 31423      5F55494E 
 31423      54333200 
 31424              	.LASF178:
 31425 0bee 73745F46 		.ascii	"st_FB_spec\000"
 31425      425F7370 
 31425      656300
 31426              	.LASF93:
 31427 0bf9 73745F65 		.ascii	"st_emg_meas\000"
 31427      6D675F6D 
 31427      65617300 
 31428              	.LASF207:
 31429 0c05 5641525F 		.ascii	"VAR_P\000"
 31429      5000
 31430              	.LASF234:
 31431 0c0b 43555354 		.ascii	"CUSTOM_PARAM_GET_LIST\000"
 31431      4F4D5F50 
 31431      4152414D 
 31431      5F474554 
 31431      5F4C4953 
 31432              	.LASF150:
 31433 0c21 6D6F746F 		.ascii	"motor_handle_ratio\000"
 31433      725F6861 
 31433      6E646C65 
 31433      5F726174 
 31433      696F00
 31434              	.LASF276:
 31435 0c34 63686563 		.ascii	"checksum\000"
 31435      6B73756D 
 31435      00
 31436              	.LASF335:
 31437 0c3d 675F7265 		.ascii	"g_refOld\000"
 31437      664F6C64 
 31437      00
 31438              	.LASF35:
 31439 0c46 434D445F 		.ascii	"CMD_HAND_CALIBRATE\000"
 31439      48414E44 
 31439      5F43414C 
 31439      49425241 
 31439      544500
 31440              	.LASF190:
 31441 0c59 6779726F 		.ascii	"gyro_value\000"
 31441      5F76616C 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 673


 31441      756500
 31442              	.LASF163:
 31443 0c64 63757272 		.ascii	"curr_time\000"
 31443      5F74696D 
 31443      6500
 31444              	.LASF148:
 31445 0c6e 646F7562 		.ascii	"double_encoder_on_off\000"
 31445      6C655F65 
 31445      6E636F64 
 31445      65725F6F 
 31445      6E5F6F66 
 31446              	.LASF327:
 31447 0c84 64726976 		.ascii	"drive_slave\000"
 31447      655F736C 
 31447      61766500 
 31448              	.LASF160:
 31449 0c90 5350495F 		.ascii	"SPI_read_delay\000"
 31449      72656164 
 31449      5F64656C 
 31449      617900
 31450              	.LASF72:
 31451 0c9f 61636B6E 		.ascii	"acknowledgment_values\000"
 31451      6F776C65 
 31451      64676D65 
 31451      6E745F76 
 31451      616C7565 
 31452              	.LASF225:
 31453 0cb5 4D4F544F 		.ascii	"MOTOR_IDX\000"
 31453      525F4944 
 31453      5800
 31454              	.LASF286:
 31455 0cbf 6D656D52 		.ascii	"memRestore\000"
 31455      6573746F 
 31455      726500
 31456              	.LASF248:
 31457 0cca 6E5F696D 		.ascii	"n_imu_str\000"
 31457      755F7374 
 31457      7200
 31458              	.LASF262:
 31459 0cd4 696E666F 		.ascii	"info_string\000"
 31459      5F737472 
 31459      696E6700 
 31460              	.LASF268:
 31461 0ce0 70726570 		.ascii	"prepare_SD_info\000"
 31461      6172655F 
 31461      53445F69 
 31461      6E666F00 
 31462              	.LASF9:
 31463 0cf0 6C6F6E67 		.ascii	"long long unsigned int\000"
 31463      206C6F6E 
 31463      6720756E 
 31463      7369676E 
 31463      65642069 
 31464              	.LASF81:
 31465 0d07 54595045 		.ascii	"TYPE_INT32\000"
 31465      5F494E54 
 31465      333200
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 674


 31466              	.LASF224:
 31467 0d12 6175785F 		.ascii	"aux_uint32\000"
 31467      75696E74 
 31467      333200
 31468              	.LASF99:
 31469 0d1d 6C656E67 		.ascii	"length\000"
 31469      746800
 31470              	.LASF236:
 31471 0d24 55534552 		.ascii	"USER_ID_PARAM\000"
 31471      5F49445F 
 31471      50415241 
 31471      4D00
 31472              	.LASF187:
 31473 0d32 73745F69 		.ascii	"st_imu_data\000"
 31473      6D755F64 
 31473      61746100 
 31474              	.LASF191:
 31475 0d3e 6D61675F 		.ascii	"mag_value\000"
 31475      76616C75 
 31475      6500
 31476              	.LASF88:
 31477 0d48 6F6E6F66 		.ascii	"onoff\000"
 31477      6600
 31478              	.LASF45:
 31479 0d4e 434D445F 		.ascii	"CMD_GET_ACCEL\000"
 31479      4745545F 
 31479      41434345 
 31479      4C00
 31480              	.LASF293:
 31481 0d5c 636D645F 		.ascii	"cmd_get_velocities\000"
 31481      6765745F 
 31481      76656C6F 
 31481      63697469 
 31481      657300
 31482              	.LASF285:
 31483 0d6f 6D656D52 		.ascii	"memRecall\000"
 31483      6563616C 
 31483      6C00
 31484              	.LASF346:
 31485 0d79 74696D65 		.ascii	"timer_value0\000"
 31485      725F7661 
 31485      6C756530 
 31485      00
 31486              	.LASF48:
 31487 0d86 434D445F 		.ascii	"CMD_SET_BAUDRATE\000"
 31487      5345545F 
 31487      42415544 
 31487      52415445 
 31487      00
 31488              	.LASF120:
 31489 0d97 6B5F705F 		.ascii	"k_p_c\000"
 31489      6300
 31490              	.LASF252:
 31491 0d9d 696D755F 		.ascii	"imu_table_str\000"
 31491      7461626C 
 31491      655F7374 
 31491      7200
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 675


 31492              	.LASF347:
 31493 0dab 6465765F 		.ascii	"dev_tension\000"
 31493      74656E73 
 31493      696F6E00 
 31494              	.LASF131:
 31495 0db7 6D6F746F 		.ascii	"motor_driver_type\000"
 31495      725F6472 
 31495      69766572 
 31495      5F747970 
 31495      6500
 31496              	.LASF311:
 31497 0dc9 6D756C74 		.ascii	"mult_1\000"
 31497      5F3100
 31498              	.LASF264:
 31499 0dd0 70726570 		.ascii	"prepare_counter_info\000"
 31499      6172655F 
 31499      636F756E 
 31499      7465725F 
 31499      696E666F 
 31500              	.LASF23:
 31501 0de5 72656738 		.ascii	"reg8\000"
 31501      00
 31502              	.LASF181:
 31503 0dea 70726F70 		.ascii	"prop_err_fb_gain\000"
 31503      5F657272 
 31503      5F66625F 
 31503      6761696E 
 31503      00
 31504              	.LASF270:
 31505 0dfb 636F6D6D 		.ascii	"commWrite_old_id\000"
 31505      57726974 
 31505      655F6F6C 
 31505      645F6964 
 31505      00
 31506              	.LASF229:
 31507 0e0c 6D616E61 		.ascii	"manage_param_list\000"
 31507      67655F70 
 31507      6172616D 
 31507      5F6C6973 
 31507      7400
 31508              	.LASF30:
 31509 0e1e 434D445F 		.ascii	"CMD_RESTORE_PARAMS\000"
 31509      52455354 
 31509      4F52455F 
 31509      50415241 
 31509      4D5300
 31510              	.LASF266:
 31511 0e31 70726570 		.ascii	"prepare_SD_param_info\000"
 31511      6172655F 
 31511      53445F70 
 31511      6172616D 
 31511      5F696E66 
 31512              	.LASF303:
 31513 0e47 63757272 		.ascii	"curr_diff\000"
 31513      5F646966 
 31513      6600
 31514              	.LASF176:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 676


 31515 0e51 736C6176 		.ascii	"slave_comm_active\000"
 31515      655F636F 
 31515      6D6D5F61 
 31515      63746976 
 31515      6500
 31516              	.LASF271:
 31517 0e63 6F6C645F 		.ascii	"old_id\000"
 31517      696400
 31518              	.LASF371:
 31519 0e6a 5F5F5245 		.ascii	"__REV16\000"
 31519      56313600 
 31520              	.LASF357:
 31521 0e72 4E5F456E 		.ascii	"N_Encoder_Line_Connected\000"
 31521      636F6465 
 31521      725F4C69 
 31521      6E655F43 
 31521      6F6E6E65 
 31522              	.LASF117:
 31523 0e8b 6465765F 		.ascii	"dev_type\000"
 31523      74797065 
 31523      00
 31524              	.LASF167:
 31525 0e94 73745F75 		.ascii	"st_user\000"
 31525      73657200 
 31526              	.LASF299:
 31527 0e9c 636D645F 		.ascii	"cmd_get_curr_and_meas\000"
 31527      6765745F 
 31527      63757272 
 31527      5F616E64 
 31527      5F6D6561 
 31528              	.LASF151:
 31529 0eb2 67656172 		.ascii	"gears_params\000"
 31529      735F7061 
 31529      72616D73 
 31529      00
 31530              	.LASF162:
 31531 0ebf 73745F65 		.ascii	"st_expansion\000"
 31531      7870616E 
 31531      73696F6E 
 31531      00
 31532              	.LASF156:
 31533 0ecc 656D675F 		.ascii	"emg_calibration_flag\000"
 31533      63616C69 
 31533      62726174 
 31533      696F6E5F 
 31533      666C6167 
 31534              	.LASF90:
 31535 0ee1 73745F6D 		.ascii	"st_meas\000"
 31535      65617300 
 31536              	.LASF54:
 31537 0ee9 434D445F 		.ascii	"CMD_GET_ADC_RAW\000"
 31537      4745545F 
 31537      4144435F 
 31537      52415700 
 31538              	.LASF70:
 31539 0ef9 4D41584F 		.ascii	"MAXON_24V\000"
 31539      4E5F3234 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 677


 31539      5600
 31540              	.LASF63:
 31541 0f03 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL_NC\000"
 31541      545F4D4F 
 31541      44455F45 
 31541      4D475F50 
 31541      524F504F 
 31542              	.LASF50:
 31543 0f22 434D445F 		.ascii	"CMD_GET_IMU_PARAM\000"
 31543      4745545F 
 31543      494D555F 
 31543      50415241 
 31543      4D00
 31544              	.LASF340:
 31545 0f34 675F6662 		.ascii	"g_fb_meas\000"
 31545      5F6D6561 
 31545      7300
 31546              	.LASF52:
 31547 0f3e 434D445F 		.ascii	"CMD_GET_ENCODER_RAW\000"
 31547      4745545F 
 31547      454E434F 
 31547      4445525F 
 31547      52415700 
 31548              	.LASF309:
 31549 0f52 636D645F 		.ascii	"cmd_store_params\000"
 31549      73746F72 
 31549      655F7061 
 31549      72616D73 
 31549      00
 31550              	.LASF342:
 31551 0f63 675F6D65 		.ascii	"g_mem\000"
 31551      6D00
 31552              	.LASF40:
 31553 0f69 434D445F 		.ascii	"CMD_GET_MEASUREMENTS\000"
 31553      4745545F 
 31553      4D454153 
 31553      5552454D 
 31553      454E5453 
 31554              	.LASF318:
 31555 0f7e 636D645F 		.ascii	"cmd_get_encoder_raw\000"
 31555      6765745F 
 31555      656E636F 
 31555      6465725F 
 31555      72617700 
 31556              	.LASF13:
 31557 0f92 75696E74 		.ascii	"uint8\000"
 31557      3800
 31558              	.LASF199:
 31559 0f98 636F6D6D 		.ascii	"commProcess\000"
 31559      50726F63 
 31559      65737300 
 31560              	.LASF2:
 31561 0fa4 73686F72 		.ascii	"short int\000"
 31561      7420696E 
 31561      7400
 31562              	.LASF290:
 31563 0fae 6D656D49 		.ascii	"memInit_AirChambersFb\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 678


 31563      6E69745F 
 31563      41697243 
 31563      68616D62 
 31563      65727346 
 31564              	.LASF256:
 31565 0fc4 6964735F 		.ascii	"ids_str_len\000"
 31565      7374725F 
 31565      6C656E00 
 31566              	.LASF125:
 31567 0fd0 6B5F645F 		.ascii	"k_d_dl\000"
 31567      646C00
 31568              	.LASF217:
 31569 0fd7 6964785F 		.ascii	"idx_menu\000"
 31569      6D656E75 
 31569      00
 31570              	.LASF185:
 31571 0fe0 6D6F746F 		.ascii	"motor\000"
 31571      7200
 31572              	.LASF360:
 31573 0fe6 4E5F494D 		.ascii	"N_IMU_Connected\000"
 31573      555F436F 
 31573      6E6E6563 
 31573      74656400 
 31574              	.LASF39:
 31575 0ff6 434D445F 		.ascii	"CMD_GET_INPUTS\000"
 31575      4745545F 
 31575      494E5055 
 31575      545300
 31576              	.LASF110:
 31577 1005 68775F6D 		.ascii	"hw_maint_date\000"
 31577      61696E74 
 31577      5F646174 
 31577      6500
 31578              	.LASF249:
 31579 1013 6964735F 		.ascii	"ids_str\000"
 31579      73747200 
 31580              	.LASF53:
 31581 101b 434D445F 		.ascii	"CMD_GET_ADC_CONF\000"
 31581      4745545F 
 31581      4144435F 
 31581      434F4E46 
 31581      00
 31582              	.LASF27:
 31583 102c 434D445F 		.ascii	"CMD_SET_ZEROS\000"
 31583      5345545F 
 31583      5A45524F 
 31583      5300
 31584              	.LASF257:
 31585 103a 6D61675F 		.ascii	"mag_param_str_len\000"
 31585      70617261 
 31585      6D5F7374 
 31585      725F6C65 
 31585      6E00
 31586              	.LASF243:
 31587 104c 6E756D5F 		.ascii	"num_imus_id_params\000"
 31587      696D7573 
 31587      5F69645F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 679


 31587      70617261 
 31587      6D7300
 31588              	.LASF221:
 31589 105f 6175785F 		.ascii	"aux_int16\000"
 31589      696E7431 
 31589      3600
 31590              	.LASF367:
 31591 1069 45455052 		.ascii	"EEPROM_ADDR\000"
 31591      4F4D5F41 
 31591      44445200 
 31592              	.LASF111:
 31593 1075 73746174 		.ascii	"stats_period_begin_date\000"
 31593      735F7065 
 31593      72696F64 
 31593      5F626567 
 31593      696E5F64 
 31594              	.LASF362:
 31595 108d 696D7573 		.ascii	"imus_data_size\000"
 31595      5F646174 
 31595      615F7369 
 31595      7A6500
 31596              	.LASF332:
 31597 109c 49544D5F 		.ascii	"ITM_RxBuffer\000"
 31597      52784275 
 31597      66666572 
 31597      00
 31598              	.LASF44:
 31599 10a9 434D445F 		.ascii	"CMD_GET_VELOCITIES\000"
 31599      4745545F 
 31599      56454C4F 
 31599      43495449 
 31599      455300
 31600              	.LASF349:
 31601 10bc 706F775F 		.ascii	"pow_tension\000"
 31601      74656E73 
 31601      696F6E00 
 31602              	.LASF34:
 31603 10c8 434D445F 		.ascii	"CMD_GET_PARAM_LIST\000"
 31603      4745545F 
 31603      50415241 
 31603      4D5F4C49 
 31603      535400
 31604              	.LASF330:
 31605 10db 73746F70 		.ascii	"stop_feedback\000"
 31605      5F666565 
 31605      64626163 
 31605      6B00
 31606              	.LASF75:
 31607 10e9 64617461 		.ascii	"data_types\000"
 31607      5F747970 
 31607      657300
 31608              	.LASF17:
 31609 10f4 696E7431 		.ascii	"int16\000"
 31609      3600
 31610              	.LASF164:
 31611 10fa 72656164 		.ascii	"read_exp_port_flag\000"
 31611      5F657870 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 680


 31611      5F706F72 
 31611      745F666C 
 31611      616700
 31612              	.LASF157:
 31613 110d 73776974 		.ascii	"switch_emg\000"
 31613      63685F65 
 31613      6D6700
 31614              	.LASF130:
 31615 1118 61637469 		.ascii	"activate_pwm_rescaling\000"
 31615      76617465 
 31615      5F70776D 
 31615      5F726573 
 31615      63616C69 
 31616              	.LASF123:
 31617 112f 6B5F705F 		.ascii	"k_p_dl\000"
 31617      646C00
 31618              	.LASF91:
 31619 1136 65737469 		.ascii	"estim_curr\000"
 31619      6D5F6375 
 31619      727200
 31620              	.LASF348:
 31621 1141 6465765F 		.ascii	"dev_pwm_limit\000"
 31621      70776D5F 
 31621      6C696D69 
 31621      7400
 31622              	.LASF165:
 31623 114f 72656164 		.ascii	"read_ADC_sensors_port_flag\000"
 31623      5F414443 
 31623      5F73656E 
 31623      736F7273 
 31623      5F706F72 
 31624              	.LASF358:
 31625 116a 456E636F 		.ascii	"Encoder_Value\000"
 31625      6465725F 
 31625      56616C75 
 31625      6500
 31626              	.LASF317:
 31627 1178 636D645F 		.ascii	"cmd_get_encoder_map\000"
 31627      6765745F 
 31627      656E636F 
 31627      6465725F 
 31627      6D617000 
 31628              	.LASF116:
 31629 118c 75736572 		.ascii	"user_id\000"
 31629      5F696400 
 31630              	.LASF12:
 31631 1194 75696E74 		.ascii	"uint32_t\000"
 31631      33325F74 
 31631      00
 31632              	.LASF220:
 31633 119d 6175785F 		.ascii	"aux_float\000"
 31633      666C6F61 
 31633      7400
 31634              	.LASF361:
 31635 11a7 494D555F 		.ascii	"IMU_connected\000"
 31635      636F6E6E 
 31635      65637465 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 681


 31635      6400
 31636              	.LASF211:
 31637 11b5 4E554D5F 		.ascii	"NUM_MENU\000"
 31637      4D454E55 
 31637      00
 31638              	.LASF223:
 31639 11be 6175785F 		.ascii	"aux_int32\000"
 31639      696E7433 
 31639      3200
 31640              	.LASF115:
 31641 11c8 62617564 		.ascii	"baud_rate\000"
 31641      5F726174 
 31641      6500
 31642              	.LASF305:
 31643 11d2 745F656E 		.ascii	"t_end\000"
 31643      6400
 31644              	.LASF301:
 31645 11d8 636D645F 		.ascii	"cmd_get_currents_for_cuff\000"
 31645      6765745F 
 31645      63757272 
 31645      656E7473 
 31645      5F666F72 
 31646              	.LASF206:
 31647 11f2 696E666F 		.ascii	"info_type\000"
 31647      5F747970 
 31647      6500
 31648              	.LASF49:
 31649 11fc 434D445F 		.ascii	"CMD_GET_IMU_READINGS\000"
 31649      4745545F 
 31649      494D555F 
 31649      52454144 
 31649      494E4753 
 31650              	.LASF279:
 31651 1211 4C435243 		.ascii	"LCRChecksum\000"
 31651      6865636B 
 31651      73756D00 
 31652              	.LASF314:
 31653 121d 6B5F696D 		.ascii	"k_imu\000"
 31653      7500
 31654              	.LASF3:
 31655 1223 73686F72 		.ascii	"short unsigned int\000"
 31655      7420756E 
 31655      7369676E 
 31655      65642069 
 31655      6E7400
 31656              	.LASF144:
 31657 1236 73745F65 		.ascii	"st_encoder\000"
 31657      6E636F64 
 31657      657200
 31658              	.LASF179:
 31659 1241 6D61785F 		.ascii	"max_residual_current\000"
 31659      72657369 
 31659      6475616C 
 31659      5F637572 
 31659      72656E74 
 31660              	.LASF263:
 31661 1256 454E435F 		.ascii	"ENC_L\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 682


 31661      4C00
 31662              	.LASF182:
 31663 125c 73745F65 		.ascii	"st_eeprom\000"
 31663      6570726F 
 31663      6D00
 31664              	.LASF208:
 31665 1266 54595045 		.ascii	"TYPES\000"
 31665      5300
 31666              	.LASF333:
 31667 126c 675F7265 		.ascii	"g_ref\000"
 31667      6600
 31668              	.LASF18:
 31669 1272 696E7433 		.ascii	"int32\000"
 31669      3200
 31670              	.LASF355:
 31671 1278 4E554D5F 		.ascii	"NUM_OF_ANALOG_INPUTS\000"
 31671      4F465F41 
 31671      4E414C4F 
 31671      475F494E 
 31671      50555453 
 31672              	.LASF203:
 31673 128d 696E666F 		.ascii	"infoGet\000"
 31673      47657400 
 31674              	.LASF366:
 31675 1295 6D617374 		.ascii	"master_mode\000"
 31675      65725F6D 
 31675      6F646500 
 31676              	.LASF86:
 31677 12a1 46535F46 		.ascii	"FS_FILE\000"
 31677      494C4500 
 31678              	.LASF132:
 31679 12a9 706F735F 		.ascii	"pos_lim_flag\000"
 31679      6C696D5F 
 31679      666C6167 
 31679      00
 31680              	.LASF337:
 31681 12b6 675F6D65 		.ascii	"g_measOld\000"
 31681      61734F6C 
 31681      6400
 31682              	.LASF65:
 31683 12c0 434F4E54 		.ascii	"CONTROL_ANGLE\000"
 31683      524F4C5F 
 31683      414E474C 
 31683      4500
 31684              	.LASF297:
 31685 12ce 636D645F 		.ascii	"cmd_activate\000"
 31685      61637469 
 31685      76617465 
 31685      00
 31686              	.LASF5:
 31687 12db 5F5F696E 		.ascii	"__int32_t\000"
 31687      7433325F 
 31687      7400
 31688              	.LASF233:
 31689 12e5 7370695F 		.ascii	"spi_delay_menu\000"
 31689      64656C61 
 31689      795F6D65 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 683


 31689      6E7500
 31690              	.LASF106:
 31691 12f4 77697265 		.ascii	"wire_disp\000"
 31691      5F646973 
 31691      7000
 31692              	.LASF154:
 31693 12fe 656D675F 		.ascii	"emg_max_value\000"
 31693      6D61785F 
 31693      76616C75 
 31693      6500
 31694              	.LASF237:
 31695 130c 43555354 		.ascii	"CUSTOM_PARAM_SET\000"
 31695      4F4D5F50 
 31695      4152414D 
 31695      5F534554 
 31695      00
 31696              	.LASF369:
 31697 131d 2E2E5C73 		.ascii	"..\\src\\command_processing.c\000"
 31697      72635C63 
 31697      6F6D6D61 
 31697      6E645F70 
 31697      726F6365 
 31698              	.LASF138:
 31699 1339 63757272 		.ascii	"current_limit\000"
 31699      656E745F 
 31699      6C696D69 
 31699      7400
 31700              	.LASF56:
 31701 1347 53485F69 		.ascii	"SH_input_mode\000"
 31701      6E707574 
 31701      5F6D6F64 
 31701      6500
 31702              	.LASF77:
 31703 1355 54595045 		.ascii	"TYPE_INT8\000"
 31703      5F494E54 
 31703      3800
 31704              	.LASF269:
 31705 135f 494D555F 		.ascii	"IMU_reading_info\000"
 31705      72656164 
 31705      696E675F 
 31705      696E666F 
 31705      00
 31706              	.LASF14:
 31707 1370 75696E74 		.ascii	"uint16\000"
 31707      313600
 31708              	.LASF339:
 31709 1377 675F656D 		.ascii	"g_emg_measOld\000"
 31709      675F6D65 
 31709      61734F6C 
 31709      6400
 31710              	.LASF172:
 31711 1385 72657374 		.ascii	"rest_delay\000"
 31711      5F64656C 
 31711      617900
 31712              	.LASF219:
 31713 1390 6175785F 		.ascii	"aux_str\000"
 31713      73747200 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccvuEg08.s 			page 684


 31714              	.LASF26:
 31715 1398 434D445F 		.ascii	"CMD_PING\000"
 31715      50494E47 
 31715      00
 31716              	.LASF128:
 31717 13a1 6B5F645F 		.ascii	"k_d_c_dl\000"
 31717      635F646C 
 31717      00
 31718              	.LASF196:
 31719 13aa 64697265 		.ascii	"direction\000"
 31719      6374696F 
 31719      6E00
 31720              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
