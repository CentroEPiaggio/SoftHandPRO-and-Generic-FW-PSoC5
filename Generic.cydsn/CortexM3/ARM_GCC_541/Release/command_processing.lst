ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"command_processing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	EEPROM_ADDR
  20              		.data
  21              		.align	2
  22              		.type	EEPROM_ADDR, %object
  23              		.size	EEPROM_ADDR, 4
  24              	EEPROM_ADDR:
  25 0000 00800040 		.word	1073774592
  26              		.section	.text.commProcess,"ax",%progbits
  27              		.align	2
  28              		.global	commProcess
  29              		.thumb
  30              		.thumb_func
  31              		.type	commProcess, %function
  32              	commProcess:
  33              	.LFB64:
  34              		.file 1 "..\\src\\command_processing.c"
   1:..\src/command_processing.c **** // ----------------------------------------------------------------------------
   2:..\src/command_processing.c **** // BSD 3-Clause License
   3:..\src/command_processing.c **** 
   4:..\src/command_processing.c **** // Copyright (c) 2016, qbrobotics
   5:..\src/command_processing.c **** // Copyright (c) 2017-2020, Centro "E.Piaggio"
   6:..\src/command_processing.c **** // All rights reserved.
   7:..\src/command_processing.c **** 
   8:..\src/command_processing.c **** // Redistribution and use in source and binary forms, with or without
   9:..\src/command_processing.c **** // modification, are permitted provided that the following conditions are met:
  10:..\src/command_processing.c **** 
  11:..\src/command_processing.c **** // * Redistributions of source code must retain the above copyright notice, this
  12:..\src/command_processing.c **** //   list of conditions and the following disclaimer.
  13:..\src/command_processing.c **** 
  14:..\src/command_processing.c **** // * Redistributions in binary form must reproduce the above copyright notice,
  15:..\src/command_processing.c **** //   this list of conditions and the following disclaimer in the documentation
  16:..\src/command_processing.c **** //   and/or other materials provided with the distribution.
  17:..\src/command_processing.c **** 
  18:..\src/command_processing.c **** // * Neither the name of the copyright holder nor the names of its
  19:..\src/command_processing.c **** //   contributors may be used to endorse or promote products derived from
  20:..\src/command_processing.c **** //   this software without specific prior written permission.
  21:..\src/command_processing.c **** 
  22:..\src/command_processing.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:..\src/command_processing.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 2


  24:..\src/command_processing.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:..\src/command_processing.c **** // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:..\src/command_processing.c **** // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:..\src/command_processing.c **** // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:..\src/command_processing.c **** // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:..\src/command_processing.c **** // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:..\src/command_processing.c **** // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:..\src/command_processing.c **** // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:..\src/command_processing.c **** // POSSIBILITY OF SUCH DAMAGE.
  33:..\src/command_processing.c **** // ----------------------------------------------------------------------------
  34:..\src/command_processing.c **** 
  35:..\src/command_processing.c **** 
  36:..\src/command_processing.c **** /**
  37:..\src/command_processing.c **** * \file         command_processing.c
  38:..\src/command_processing.c **** *
  39:..\src/command_processing.c **** 
  40:..\src/command_processing.c **** * \brief        Command processing functions.
  41:..\src/command_processing.c **** * \date         March 20th, 2020
  42:..\src/command_processing.c **** * \author       _Centro "E.Piaggio"_
  43:..\src/command_processing.c **** * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  44:..\src/command_processing.c **** * \copyright    (C) 2017-2020 Centro "E.Piaggio". All rights reserved.
  45:..\src/command_processing.c **** */
  46:..\src/command_processing.c **** //=================================================================     includes
  47:..\src/command_processing.c **** #include "command_processing.h"
  48:..\src/command_processing.c **** 
  49:..\src/command_processing.c **** //================================================================     variables
  50:..\src/command_processing.c **** 
  51:..\src/command_processing.c **** reg8 * EEPROM_ADDR = (reg8 *) CYDEV_EE_BASE;
  52:..\src/command_processing.c **** 
  53:..\src/command_processing.c **** //==============================================================================
  54:..\src/command_processing.c **** //                                                            RX DATA PROCESSING
  55:..\src/command_processing.c **** //==============================================================================
  56:..\src/command_processing.c **** //  This function checks for the availability of a data packet and process it:
  57:..\src/command_processing.c **** //      - Verify checksum;
  58:..\src/command_processing.c **** //      - Process commands;
  59:..\src/command_processing.c **** //==============================================================================
  60:..\src/command_processing.c **** 
  61:..\src/command_processing.c **** void commProcess(void){
  35              		.loc 1 61 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 40
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 8AB0     		sub	sp, sp, #40
  44              		.cfi_def_cfa_offset 48
  45 0004 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  62:..\src/command_processing.c **** 
  63:..\src/command_processing.c ****     uint8 CYDATA rx_cmd;
  64:..\src/command_processing.c ****     rx_cmd = g_rx.buffer[0];
  47              		.loc 1 64 0
  48 0006 E34B     		ldr	r3, .L51
  49 0008 1B78     		ldrb	r3, [r3]
  50 000a 87F82730 		strb	r3, [r7, #39]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 3


  65:..\src/command_processing.c **** 
  66:..\src/command_processing.c **** //==========================================================     verify checksum
  67:..\src/command_processing.c **** 
  68:..\src/command_processing.c ****     if (!(LCRChecksum(g_rx.buffer, g_rx.length - 1) == g_rx.buffer[g_rx.length - 1])){
  51              		.loc 1 68 0
  52 000e E14B     		ldr	r3, .L51
  53 0010 B3F98030 		ldrsh	r3, [r3, #128]
  54 0014 DBB2     		uxtb	r3, r3
  55 0016 013B     		subs	r3, r3, #1
  56 0018 DBB2     		uxtb	r3, r3
  57 001a 1946     		mov	r1, r3
  58 001c DD48     		ldr	r0, .L51
  59 001e FFF7FEFF 		bl	LCRChecksum
  60 0022 0346     		mov	r3, r0
  61 0024 1946     		mov	r1, r3
  62 0026 DB4B     		ldr	r3, .L51
  63 0028 B3F98030 		ldrsh	r3, [r3, #128]
  64 002c 013B     		subs	r3, r3, #1
  65 002e D94A     		ldr	r2, .L51
  66 0030 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
  67 0032 9942     		cmp	r1, r3
  68 0034 04D0     		beq	.L2
  69:..\src/command_processing.c ****         // Wrong checksum
  70:..\src/command_processing.c ****         g_rx.ready = 0;
  69              		.loc 1 70 0
  70 0036 D74B     		ldr	r3, .L51
  71 0038 0022     		movs	r2, #0
  72 003a 83F88420 		strb	r2, [r3, #132]
  71:..\src/command_processing.c ****         return;
  73              		.loc 1 71 0
  74 003e 53E2     		b	.L1
  75              	.L2:
  72:..\src/command_processing.c ****     }
  73:..\src/command_processing.c **** 
  74:..\src/command_processing.c ****     switch(rx_cmd) {
  76              		.loc 1 74 0
  77 0040 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
  78 0044 A72B     		cmp	r3, #167
  79 0046 00F24E82 		bhi	.L50
  80 004a 01A2     		adr	r2, .L6
  81 004c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  82              		.p2align 2
  83              	.L6:
  84 0050 75030000 		.word	.L5+1
  85 0054 57030000 		.word	.L7+1
  86 0058 E7040000 		.word	.L50+1
  87 005c 7B030000 		.word	.L8+1
  88 0060 81030000 		.word	.L9+1
  89 0064 A5030000 		.word	.L10+1
  90 0068 3F030000 		.word	.L11+1
  91 006c E7040000 		.word	.L50+1
  92 0070 E7040000 		.word	.L50+1
  93 0074 D9030000 		.word	.L12+1
  94 0078 BF030000 		.word	.L13+1
  95 007c E7040000 		.word	.L50+1
  96 0080 5D030000 		.word	.L14+1
  97 0084 FB030000 		.word	.L15+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 4


  98 0088 E7040000 		.word	.L50+1
  99 008c E7040000 		.word	.L50+1
 100 0090 E7040000 		.word	.L50+1
 101 0094 E7040000 		.word	.L50+1
 102 0098 E7040000 		.word	.L50+1
 103 009c E7040000 		.word	.L50+1
 104 00a0 E7040000 		.word	.L50+1
 105 00a4 E7040000 		.word	.L50+1
 106 00a8 E7040000 		.word	.L50+1
 107 00ac E7040000 		.word	.L50+1
 108 00b0 E7040000 		.word	.L50+1
 109 00b4 E7040000 		.word	.L50+1
 110 00b8 E7040000 		.word	.L50+1
 111 00bc E7040000 		.word	.L50+1
 112 00c0 E7040000 		.word	.L50+1
 113 00c4 E7040000 		.word	.L50+1
 114 00c8 E7040000 		.word	.L50+1
 115 00cc E7040000 		.word	.L50+1
 116 00d0 E7040000 		.word	.L50+1
 117 00d4 E7040000 		.word	.L50+1
 118 00d8 E7040000 		.word	.L50+1
 119 00dc E7040000 		.word	.L50+1
 120 00e0 E7040000 		.word	.L50+1
 121 00e4 E7040000 		.word	.L50+1
 122 00e8 E7040000 		.word	.L50+1
 123 00ec E7040000 		.word	.L50+1
 124 00f0 E7040000 		.word	.L50+1
 125 00f4 E7040000 		.word	.L50+1
 126 00f8 E7040000 		.word	.L50+1
 127 00fc E7040000 		.word	.L50+1
 128 0100 E7040000 		.word	.L50+1
 129 0104 E7040000 		.word	.L50+1
 130 0108 E7040000 		.word	.L50+1
 131 010c E7040000 		.word	.L50+1
 132 0110 E7040000 		.word	.L50+1
 133 0114 E7040000 		.word	.L50+1
 134 0118 E7040000 		.word	.L50+1
 135 011c E7040000 		.word	.L50+1
 136 0120 E7040000 		.word	.L50+1
 137 0124 E7040000 		.word	.L50+1
 138 0128 E7040000 		.word	.L50+1
 139 012c E7040000 		.word	.L50+1
 140 0130 E7040000 		.word	.L50+1
 141 0134 E7040000 		.word	.L50+1
 142 0138 E7040000 		.word	.L50+1
 143 013c E7040000 		.word	.L50+1
 144 0140 E7040000 		.word	.L50+1
 145 0144 E7040000 		.word	.L50+1
 146 0148 E7040000 		.word	.L50+1
 147 014c E7040000 		.word	.L50+1
 148 0150 E7040000 		.word	.L50+1
 149 0154 E7040000 		.word	.L50+1
 150 0158 E7040000 		.word	.L50+1
 151 015c E7040000 		.word	.L50+1
 152 0160 E7040000 		.word	.L50+1
 153 0164 E7040000 		.word	.L50+1
 154 0168 E7040000 		.word	.L50+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 5


 155 016c E7040000 		.word	.L50+1
 156 0170 E7040000 		.word	.L50+1
 157 0174 E7040000 		.word	.L50+1
 158 0178 E7040000 		.word	.L50+1
 159 017c E7040000 		.word	.L50+1
 160 0180 E7040000 		.word	.L50+1
 161 0184 E7040000 		.word	.L50+1
 162 0188 E7040000 		.word	.L50+1
 163 018c E7040000 		.word	.L50+1
 164 0190 E7040000 		.word	.L50+1
 165 0194 E7040000 		.word	.L50+1
 166 0198 E7040000 		.word	.L50+1
 167 019c E7040000 		.word	.L50+1
 168 01a0 E7040000 		.word	.L50+1
 169 01a4 E7040000 		.word	.L50+1
 170 01a8 E7040000 		.word	.L50+1
 171 01ac E7040000 		.word	.L50+1
 172 01b0 E7040000 		.word	.L50+1
 173 01b4 E7040000 		.word	.L50+1
 174 01b8 E7040000 		.word	.L50+1
 175 01bc E7040000 		.word	.L50+1
 176 01c0 E7040000 		.word	.L50+1
 177 01c4 E7040000 		.word	.L50+1
 178 01c8 E7040000 		.word	.L50+1
 179 01cc E7040000 		.word	.L50+1
 180 01d0 E7040000 		.word	.L50+1
 181 01d4 E7040000 		.word	.L50+1
 182 01d8 E7040000 		.word	.L50+1
 183 01dc E7040000 		.word	.L50+1
 184 01e0 E7040000 		.word	.L50+1
 185 01e4 E7040000 		.word	.L50+1
 186 01e8 E7040000 		.word	.L50+1
 187 01ec E7040000 		.word	.L50+1
 188 01f0 E7040000 		.word	.L50+1
 189 01f4 E7040000 		.word	.L50+1
 190 01f8 E7040000 		.word	.L50+1
 191 01fc E7040000 		.word	.L50+1
 192 0200 E7040000 		.word	.L50+1
 193 0204 E7040000 		.word	.L50+1
 194 0208 E7040000 		.word	.L50+1
 195 020c E7040000 		.word	.L50+1
 196 0210 E7040000 		.word	.L50+1
 197 0214 E7040000 		.word	.L50+1
 198 0218 E7040000 		.word	.L50+1
 199 021c E7040000 		.word	.L50+1
 200 0220 E7040000 		.word	.L50+1
 201 0224 E7040000 		.word	.L50+1
 202 0228 E7040000 		.word	.L50+1
 203 022c E7040000 		.word	.L50+1
 204 0230 E7040000 		.word	.L50+1
 205 0234 E7040000 		.word	.L50+1
 206 0238 E7040000 		.word	.L50+1
 207 023c E7040000 		.word	.L50+1
 208 0240 E7040000 		.word	.L50+1
 209 0244 E7040000 		.word	.L50+1
 210 0248 E7040000 		.word	.L50+1
 211 024c E7040000 		.word	.L50+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 6


 212 0250 F1020000 		.word	.L16+1
 213 0254 2D030000 		.word	.L17+1
 214 0258 F7020000 		.word	.L18+1
 215 025c 39030000 		.word	.L19+1
 216 0260 FD020000 		.word	.L20+1
 217 0264 09030000 		.word	.L21+1
 218 0268 03030000 		.word	.L22+1
 219 026c E7040000 		.word	.L50+1
 220 0270 27030000 		.word	.L23+1
 221 0274 15030000 		.word	.L24+1
 222 0278 E7040000 		.word	.L50+1
 223 027c 1B030000 		.word	.L25+1
 224 0280 0F030000 		.word	.L26+1
 225 0284 E7040000 		.word	.L50+1
 226 0288 E7040000 		.word	.L50+1
 227 028c E7040000 		.word	.L50+1
 228 0290 33030000 		.word	.L27+1
 229 0294 E7040000 		.word	.L50+1
 230 0298 21030000 		.word	.L28+1
 231 029c E7040000 		.word	.L50+1
 232 02a0 E7040000 		.word	.L50+1
 233 02a4 E7040000 		.word	.L50+1
 234 02a8 E7040000 		.word	.L50+1
 235 02ac E7040000 		.word	.L50+1
 236 02b0 E7040000 		.word	.L50+1
 237 02b4 E7040000 		.word	.L50+1
 238 02b8 E7040000 		.word	.L50+1
 239 02bc E7040000 		.word	.L50+1
 240 02c0 E7040000 		.word	.L50+1
 241 02c4 E7040000 		.word	.L50+1
 242 02c8 E7040000 		.word	.L50+1
 243 02cc E7040000 		.word	.L50+1
 244 02d0 E7040000 		.word	.L50+1
 245 02d4 99040000 		.word	.L29+1
 246 02d8 9F040000 		.word	.L30+1
 247 02dc B7040000 		.word	.L31+1
 248 02e0 BD040000 		.word	.L32+1
 249 02e4 C3040000 		.word	.L33+1
 250 02e8 C9040000 		.word	.L34+1
 251 02ec CF040000 		.word	.L35+1
 252              		.p2align 1
 253              	.L16:
  75:..\src/command_processing.c **** 
  76:..\src/command_processing.c **** //=============================================================     CMD_ACTIVATE
  77:..\src/command_processing.c ****         case CMD_ACTIVATE:
  78:..\src/command_processing.c ****             cmd_activate();
 254              		.loc 1 78 0
 255 02f0 FFF7FEFF 		bl	cmd_activate
  79:..\src/command_processing.c ****             break;
 256              		.loc 1 79 0
 257 02f4 F8E0     		b	.L1
 258              	.L18:
  80:..\src/command_processing.c **** 
  81:..\src/command_processing.c **** //===========================================================     CMD_SET_INPUTS
  82:..\src/command_processing.c **** 
  83:..\src/command_processing.c ****         case CMD_SET_INPUTS:
  84:..\src/command_processing.c ****             cmd_set_inputs();
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 7


 259              		.loc 1 84 0
 260 02f6 FFF7FEFF 		bl	cmd_set_inputs
  85:..\src/command_processing.c ****             break;
 261              		.loc 1 85 0
 262 02fa F5E0     		b	.L1
 263              	.L20:
  86:..\src/command_processing.c **** 
  87:..\src/command_processing.c **** //=====================================================     CMD_GET_MEASUREMENTS
  88:..\src/command_processing.c **** 
  89:..\src/command_processing.c ****         case CMD_GET_MEASUREMENTS:
  90:..\src/command_processing.c ****             cmd_get_measurements();
 264              		.loc 1 90 0
 265 02fc FFF7FEFF 		bl	cmd_get_measurements
  91:..\src/command_processing.c ****             break;
 266              		.loc 1 91 0
 267 0300 F2E0     		b	.L1
 268              	.L22:
  92:..\src/command_processing.c **** 
  93:..\src/command_processing.c **** //=====================================================     CMD_GET_CURR_AND_MEAS
  94:..\src/command_processing.c **** 
  95:..\src/command_processing.c ****         case CMD_GET_CURR_AND_MEAS:
  96:..\src/command_processing.c ****             cmd_get_curr_and_meas();
 269              		.loc 1 96 0
 270 0302 FFF7FEFF 		bl	cmd_get_curr_and_meas
  97:..\src/command_processing.c ****             break;
 271              		.loc 1 97 0
 272 0306 EFE0     		b	.L1
 273              	.L21:
  98:..\src/command_processing.c ****             
  99:..\src/command_processing.c **** //=========================================================     CMD_GET_CURRENTS
 100:..\src/command_processing.c **** 
 101:..\src/command_processing.c ****         case CMD_GET_CURRENTS:
 102:..\src/command_processing.c ****             cmd_get_currents();
 274              		.loc 1 102 0
 275 0308 FFF7FEFF 		bl	cmd_get_currents
 103:..\src/command_processing.c ****             break;
 276              		.loc 1 103 0
 277 030c ECE0     		b	.L1
 278              	.L26:
 104:..\src/command_processing.c **** 
 105:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 106:..\src/command_processing.c ****          
 107:..\src/command_processing.c ****         case CMD_GET_CURR_DIFF:
 108:..\src/command_processing.c ****             cmd_get_currents_for_cuff();
 279              		.loc 1 108 0
 280 030e FFF7FEFF 		bl	cmd_get_currents_for_cuff
 109:..\src/command_processing.c ****             break;
 281              		.loc 1 109 0
 282 0312 E9E0     		b	.L1
 283              	.L24:
 110:..\src/command_processing.c ****             
 111:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 112:..\src/command_processing.c ****         
 113:..\src/command_processing.c ****         case CMD_GET_VELOCITIES:
 114:..\src/command_processing.c ****             cmd_get_velocities();
 284              		.loc 1 114 0
 285 0314 FFF7FEFF 		bl	cmd_get_velocities
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 8


 115:..\src/command_processing.c ****             break;
 286              		.loc 1 115 0
 287 0318 E6E0     		b	.L1
 288              	.L25:
 116:..\src/command_processing.c ****             
 117:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 118:..\src/command_processing.c **** 
 119:..\src/command_processing.c ****         case CMD_GET_ACCEL:
 120:..\src/command_processing.c ****             cmd_get_accelerations();
 289              		.loc 1 120 0
 290 031a FFF7FEFF 		bl	cmd_get_accelerations
 121:..\src/command_processing.c ****             break;
 291              		.loc 1 121 0
 292 031e E3E0     		b	.L1
 293              	.L28:
 122:..\src/command_processing.c **** 
 123:..\src/command_processing.c **** //=========================================================     CMD_GET_JOYSTICK
 124:..\src/command_processing.c **** 
 125:..\src/command_processing.c ****         case CMD_GET_JOYSTICK:
 126:..\src/command_processing.c ****             cmd_get_joystick();
 294              		.loc 1 126 0
 295 0320 FFF7FEFF 		bl	cmd_get_joystick
 127:..\src/command_processing.c ****         break;
 296              		.loc 1 127 0
 297 0324 E0E0     		b	.L1
 298              	.L23:
 128:..\src/command_processing.c ****             
 129:..\src/command_processing.c **** //=========================================================     CMD_GET_EMG
 130:..\src/command_processing.c **** 
 131:..\src/command_processing.c ****         case CMD_GET_EMG:
 132:..\src/command_processing.c ****             cmd_get_emg();
 299              		.loc 1 132 0
 300 0326 FFF7FEFF 		bl	cmd_get_emg
 133:..\src/command_processing.c ****             break;
 301              		.loc 1 133 0
 302 032a DDE0     		b	.L1
 303              	.L17:
 134:..\src/command_processing.c ****             
 135:..\src/command_processing.c **** //=========================================================     CMD_GET_ACTIVATE
 136:..\src/command_processing.c ****             
 137:..\src/command_processing.c ****         case CMD_GET_ACTIVATE:
 138:..\src/command_processing.c ****             cmd_get_activate();
 304              		.loc 1 138 0
 305 032c FFF7FEFF 		bl	cmd_get_activate
 139:..\src/command_processing.c ****             break;
 306              		.loc 1 139 0
 307 0330 DAE0     		b	.L1
 308              	.L27:
 140:..\src/command_processing.c ****             
 141:..\src/command_processing.c **** //=========================================================     CMD_SET_BAUDRATE
 142:..\src/command_processing.c ****             
 143:..\src/command_processing.c ****         case CMD_SET_BAUDRATE:
 144:..\src/command_processing.c ****             cmd_set_baudrate();
 309              		.loc 1 144 0
 310 0332 FFF7FEFF 		bl	cmd_set_baudrate
 145:..\src/command_processing.c ****             break;  
 311              		.loc 1 145 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 9


 312 0336 D7E0     		b	.L1
 313              	.L19:
 146:..\src/command_processing.c ****             
 147:..\src/command_processing.c **** //============================================================     CMD_GET_INPUT
 148:..\src/command_processing.c **** 
 149:..\src/command_processing.c ****         case CMD_GET_INPUTS:
 150:..\src/command_processing.c ****             cmd_get_inputs();
 314              		.loc 1 150 0
 315 0338 FFF7FEFF 		bl	cmd_get_inputs
 151:..\src/command_processing.c ****             break;
 316              		.loc 1 151 0
 317 033c D4E0     		b	.L1
 318              	.L11:
 152:..\src/command_processing.c **** 
 153:..\src/command_processing.c **** //=============================================================     CMD_GET_INFO
 154:..\src/command_processing.c **** 
 155:..\src/command_processing.c ****         case CMD_GET_INFO:
 156:..\src/command_processing.c ****             infoGet(  __REV16(*((uint16 *) &g_rx.buffer[1])) );
 319              		.loc 1 156 0
 320 033e 164B     		ldr	r3, .L51+4
 321 0340 1B88     		ldrh	r3, [r3]
 322 0342 7B61     		str	r3, [r7, #20]
 323              	.LBB10:
 324              	.LBB11:
 325              		.file 2 "Generated_Source\\PSoC5/cmsis_gcc.h"
   1:Generated_Source\PSoC5/cmsis_gcc.h **** /**************************************************************************//**
   2:Generated_Source\PSoC5/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Generated_Source\PSoC5/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Generated_Source\PSoC5/cmsis_gcc.h ****  * @version  V5.00
   5:Generated_Source\PSoC5/cmsis_gcc.h ****  * @date     28. October 2016
   6:Generated_Source\PSoC5/cmsis_gcc.h ****  ******************************************************************************/
   7:Generated_Source\PSoC5/cmsis_gcc.h **** /*
   8:Generated_Source\PSoC5/cmsis_gcc.h ****  * Copyright (c) 2009-2016 ARM Limited. All rights reserved.
   9:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  10:Generated_Source\PSoC5/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  12:Generated_Source\PSoC5/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Generated_Source\PSoC5/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Generated_Source\PSoC5/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  16:Generated_Source\PSoC5/cmsis_gcc.h ****  * http://www.apache.org/licenses/LICENSE-2.0
  17:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  18:Generated_Source\PSoC5/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Generated_Source\PSoC5/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Generated_Source\PSoC5/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Generated_Source\PSoC5/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Generated_Source\PSoC5/cmsis_gcc.h ****  * limitations under the License.
  23:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  24:Generated_Source\PSoC5/cmsis_gcc.h **** 
  25:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Generated_Source\PSoC5/cmsis_gcc.h **** 
  28:Generated_Source\PSoC5/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 10


  33:Generated_Source\PSoC5/cmsis_gcc.h **** 
  34:Generated_Source\PSoC5/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ASM
  36:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ASM                     __asm
  37:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  38:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __INLINE
  39:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __INLINE                  inline
  40:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  41:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  44:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __NO_RETURN
  45:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  47:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __USED
  48:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  50:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   _WEAK
  51:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  53:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:Generated_Source\PSoC5/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  55:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  56:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  57:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ALIGNED
  58:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  59:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  60:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __PACKED
  61:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  62:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  63:Generated_Source\PSoC5/cmsis_gcc.h **** 
  64:Generated_Source\PSoC5/cmsis_gcc.h **** 
  65:Generated_Source\PSoC5/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  66:Generated_Source\PSoC5/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  67:Generated_Source\PSoC5/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  68:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
  69:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  70:Generated_Source\PSoC5/cmsis_gcc.h **** 
  71:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  72:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  73:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  74:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  75:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  76:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  77:Generated_Source\PSoC5/cmsis_gcc.h **** {
  78:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  79:Generated_Source\PSoC5/cmsis_gcc.h **** }
  80:Generated_Source\PSoC5/cmsis_gcc.h **** 
  81:Generated_Source\PSoC5/cmsis_gcc.h **** 
  82:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  83:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  84:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  85:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  86:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  87:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  88:Generated_Source\PSoC5/cmsis_gcc.h **** {
  89:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 11


  90:Generated_Source\PSoC5/cmsis_gcc.h **** }
  91:Generated_Source\PSoC5/cmsis_gcc.h **** 
  92:Generated_Source\PSoC5/cmsis_gcc.h **** 
  93:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  94:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register
  95:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  96:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Control Register value
  97:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  98:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
  99:Generated_Source\PSoC5/cmsis_gcc.h **** {
 100:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 101:Generated_Source\PSoC5/cmsis_gcc.h **** 
 102:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 103:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 104:Generated_Source\PSoC5/cmsis_gcc.h **** }
 105:Generated_Source\PSoC5/cmsis_gcc.h **** 
 106:Generated_Source\PSoC5/cmsis_gcc.h **** 
 107:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 108:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 109:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 110:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 111:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               non-secure Control Register value
 112:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 113:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 114:Generated_Source\PSoC5/cmsis_gcc.h **** {
 115:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 116:Generated_Source\PSoC5/cmsis_gcc.h **** 
 117:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 118:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 119:Generated_Source\PSoC5/cmsis_gcc.h **** }
 120:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 121:Generated_Source\PSoC5/cmsis_gcc.h **** 
 122:Generated_Source\PSoC5/cmsis_gcc.h **** 
 123:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 124:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register
 125:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 126:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 127:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 128:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 129:Generated_Source\PSoC5/cmsis_gcc.h **** {
 130:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 131:Generated_Source\PSoC5/cmsis_gcc.h **** }
 132:Generated_Source\PSoC5/cmsis_gcc.h **** 
 133:Generated_Source\PSoC5/cmsis_gcc.h **** 
 134:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 135:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 136:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 137:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 138:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 139:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 140:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 141:Generated_Source\PSoC5/cmsis_gcc.h **** {
 142:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 143:Generated_Source\PSoC5/cmsis_gcc.h **** }
 144:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 145:Generated_Source\PSoC5/cmsis_gcc.h **** 
 146:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 12


 147:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 148:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get IPSR Register
 149:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 150:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               IPSR Register value
 151:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 152:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 153:Generated_Source\PSoC5/cmsis_gcc.h **** {
 154:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 155:Generated_Source\PSoC5/cmsis_gcc.h **** 
 156:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 157:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 158:Generated_Source\PSoC5/cmsis_gcc.h **** }
 159:Generated_Source\PSoC5/cmsis_gcc.h **** 
 160:Generated_Source\PSoC5/cmsis_gcc.h **** 
 161:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 162:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get APSR Register
 163:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 164:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               APSR Register value
 165:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 166:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 167:Generated_Source\PSoC5/cmsis_gcc.h **** {
 168:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 169:Generated_Source\PSoC5/cmsis_gcc.h **** 
 170:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 171:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 172:Generated_Source\PSoC5/cmsis_gcc.h **** }
 173:Generated_Source\PSoC5/cmsis_gcc.h **** 
 174:Generated_Source\PSoC5/cmsis_gcc.h **** 
 175:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 176:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get xPSR Register
 177:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 178:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               xPSR Register value
 179:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 180:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 181:Generated_Source\PSoC5/cmsis_gcc.h **** {
 182:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 183:Generated_Source\PSoC5/cmsis_gcc.h **** 
 184:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 185:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 186:Generated_Source\PSoC5/cmsis_gcc.h **** }
 187:Generated_Source\PSoC5/cmsis_gcc.h **** 
 188:Generated_Source\PSoC5/cmsis_gcc.h **** 
 189:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 190:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 191:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 192:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 193:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 194:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 195:Generated_Source\PSoC5/cmsis_gcc.h **** {
 196:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 197:Generated_Source\PSoC5/cmsis_gcc.h **** 
 198:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 199:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 200:Generated_Source\PSoC5/cmsis_gcc.h **** }
 201:Generated_Source\PSoC5/cmsis_gcc.h **** 
 202:Generated_Source\PSoC5/cmsis_gcc.h **** 
 203:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 13


 204:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 205:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 206:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 207:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 208:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 209:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 210:Generated_Source\PSoC5/cmsis_gcc.h **** {
 211:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 212:Generated_Source\PSoC5/cmsis_gcc.h **** 
 213:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 214:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 215:Generated_Source\PSoC5/cmsis_gcc.h **** }
 216:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 217:Generated_Source\PSoC5/cmsis_gcc.h **** 
 218:Generated_Source\PSoC5/cmsis_gcc.h **** 
 219:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 220:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 221:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 222:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 223:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 224:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 225:Generated_Source\PSoC5/cmsis_gcc.h **** {
 226:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : "sp");
 227:Generated_Source\PSoC5/cmsis_gcc.h **** }
 228:Generated_Source\PSoC5/cmsis_gcc.h **** 
 229:Generated_Source\PSoC5/cmsis_gcc.h **** 
 230:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 231:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 232:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 233:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 234:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 235:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 236:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 237:Generated_Source\PSoC5/cmsis_gcc.h **** {
 238:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : "sp");
 239:Generated_Source\PSoC5/cmsis_gcc.h **** }
 240:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 241:Generated_Source\PSoC5/cmsis_gcc.h **** 
 242:Generated_Source\PSoC5/cmsis_gcc.h **** 
 243:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 244:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 245:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 246:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 247:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 248:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 249:Generated_Source\PSoC5/cmsis_gcc.h **** {
 250:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 251:Generated_Source\PSoC5/cmsis_gcc.h **** 
 252:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 253:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 254:Generated_Source\PSoC5/cmsis_gcc.h **** }
 255:Generated_Source\PSoC5/cmsis_gcc.h **** 
 256:Generated_Source\PSoC5/cmsis_gcc.h **** 
 257:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 258:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 259:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 260:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 14


 261:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 262:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 263:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 264:Generated_Source\PSoC5/cmsis_gcc.h **** {
 265:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 266:Generated_Source\PSoC5/cmsis_gcc.h **** 
 267:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 268:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 269:Generated_Source\PSoC5/cmsis_gcc.h **** }
 270:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 271:Generated_Source\PSoC5/cmsis_gcc.h **** 
 272:Generated_Source\PSoC5/cmsis_gcc.h **** 
 273:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 274:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 275:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 276:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 277:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 278:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 279:Generated_Source\PSoC5/cmsis_gcc.h **** {
 280:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : "sp");
 281:Generated_Source\PSoC5/cmsis_gcc.h **** }
 282:Generated_Source\PSoC5/cmsis_gcc.h **** 
 283:Generated_Source\PSoC5/cmsis_gcc.h **** 
 284:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 285:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 286:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 287:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 288:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 289:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 290:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 291:Generated_Source\PSoC5/cmsis_gcc.h **** {
 292:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : "sp");
 293:Generated_Source\PSoC5/cmsis_gcc.h **** }
 294:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 295:Generated_Source\PSoC5/cmsis_gcc.h **** 
 296:Generated_Source\PSoC5/cmsis_gcc.h **** 
 297:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 298:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask
 299:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 300:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 301:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 302:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 303:Generated_Source\PSoC5/cmsis_gcc.h **** {
 304:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 305:Generated_Source\PSoC5/cmsis_gcc.h **** 
 306:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 307:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 308:Generated_Source\PSoC5/cmsis_gcc.h **** }
 309:Generated_Source\PSoC5/cmsis_gcc.h **** 
 310:Generated_Source\PSoC5/cmsis_gcc.h **** 
 311:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 312:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 313:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 314:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 315:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 316:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 317:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 15


 318:Generated_Source\PSoC5/cmsis_gcc.h **** {
 319:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 320:Generated_Source\PSoC5/cmsis_gcc.h **** 
 321:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 322:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 323:Generated_Source\PSoC5/cmsis_gcc.h **** }
 324:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 325:Generated_Source\PSoC5/cmsis_gcc.h **** 
 326:Generated_Source\PSoC5/cmsis_gcc.h **** 
 327:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 328:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask
 329:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 330:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 331:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 332:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 333:Generated_Source\PSoC5/cmsis_gcc.h **** {
 334:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 335:Generated_Source\PSoC5/cmsis_gcc.h **** }
 336:Generated_Source\PSoC5/cmsis_gcc.h **** 
 337:Generated_Source\PSoC5/cmsis_gcc.h **** 
 338:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 339:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 340:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 341:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 342:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 343:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 344:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 345:Generated_Source\PSoC5/cmsis_gcc.h **** {
 346:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 347:Generated_Source\PSoC5/cmsis_gcc.h **** }
 348:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 349:Generated_Source\PSoC5/cmsis_gcc.h **** 
 350:Generated_Source\PSoC5/cmsis_gcc.h **** 
 351:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 352:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 353:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 354:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 355:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable FIQ
 356:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 357:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 358:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 359:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 360:Generated_Source\PSoC5/cmsis_gcc.h **** {
 361:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 362:Generated_Source\PSoC5/cmsis_gcc.h **** }
 363:Generated_Source\PSoC5/cmsis_gcc.h **** 
 364:Generated_Source\PSoC5/cmsis_gcc.h **** 
 365:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 366:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable FIQ
 367:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 368:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 369:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 370:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 371:Generated_Source\PSoC5/cmsis_gcc.h **** {
 372:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 373:Generated_Source\PSoC5/cmsis_gcc.h **** }
 374:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 16


 375:Generated_Source\PSoC5/cmsis_gcc.h **** 
 376:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 377:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority
 378:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 379:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 380:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 381:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 382:Generated_Source\PSoC5/cmsis_gcc.h **** {
 383:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 384:Generated_Source\PSoC5/cmsis_gcc.h **** 
 385:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 386:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 387:Generated_Source\PSoC5/cmsis_gcc.h **** }
 388:Generated_Source\PSoC5/cmsis_gcc.h **** 
 389:Generated_Source\PSoC5/cmsis_gcc.h **** 
 390:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 391:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 392:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 393:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 394:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 395:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 396:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 397:Generated_Source\PSoC5/cmsis_gcc.h **** {
 398:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 399:Generated_Source\PSoC5/cmsis_gcc.h **** 
 400:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 401:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 402:Generated_Source\PSoC5/cmsis_gcc.h **** }
 403:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 404:Generated_Source\PSoC5/cmsis_gcc.h **** 
 405:Generated_Source\PSoC5/cmsis_gcc.h **** 
 406:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 407:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority
 408:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 409:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 410:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 411:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 412:Generated_Source\PSoC5/cmsis_gcc.h **** {
 413:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 414:Generated_Source\PSoC5/cmsis_gcc.h **** }
 415:Generated_Source\PSoC5/cmsis_gcc.h **** 
 416:Generated_Source\PSoC5/cmsis_gcc.h **** 
 417:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 419:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 420:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 421:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 422:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 423:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 424:Generated_Source\PSoC5/cmsis_gcc.h **** {
 425:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 426:Generated_Source\PSoC5/cmsis_gcc.h **** }
 427:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 428:Generated_Source\PSoC5/cmsis_gcc.h **** 
 429:Generated_Source\PSoC5/cmsis_gcc.h **** 
 430:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 431:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority with condition
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 17


 432:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 433:Generated_Source\PSoC5/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 434:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 435:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 436:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 437:Generated_Source\PSoC5/cmsis_gcc.h **** {
 438:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 439:Generated_Source\PSoC5/cmsis_gcc.h **** }
 440:Generated_Source\PSoC5/cmsis_gcc.h **** 
 441:Generated_Source\PSoC5/cmsis_gcc.h **** 
 442:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 443:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask
 444:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 445:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 446:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 447:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 448:Generated_Source\PSoC5/cmsis_gcc.h **** {
 449:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 450:Generated_Source\PSoC5/cmsis_gcc.h **** 
 451:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 452:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 453:Generated_Source\PSoC5/cmsis_gcc.h **** }
 454:Generated_Source\PSoC5/cmsis_gcc.h **** 
 455:Generated_Source\PSoC5/cmsis_gcc.h **** 
 456:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 457:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 458:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 459:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 460:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 461:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 462:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 463:Generated_Source\PSoC5/cmsis_gcc.h **** {
 464:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 465:Generated_Source\PSoC5/cmsis_gcc.h **** 
 466:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 467:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 468:Generated_Source\PSoC5/cmsis_gcc.h **** }
 469:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 470:Generated_Source\PSoC5/cmsis_gcc.h **** 
 471:Generated_Source\PSoC5/cmsis_gcc.h **** 
 472:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 473:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask
 474:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 475:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 476:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 477:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 478:Generated_Source\PSoC5/cmsis_gcc.h **** {
 479:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 480:Generated_Source\PSoC5/cmsis_gcc.h **** }
 481:Generated_Source\PSoC5/cmsis_gcc.h **** 
 482:Generated_Source\PSoC5/cmsis_gcc.h **** 
 483:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 484:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 485:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 486:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 487:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 488:Generated_Source\PSoC5/cmsis_gcc.h ****  */
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 18


 489:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 490:Generated_Source\PSoC5/cmsis_gcc.h **** {
 491:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 492:Generated_Source\PSoC5/cmsis_gcc.h **** }
 493:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 494:Generated_Source\PSoC5/cmsis_gcc.h **** 
 495:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 496:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 497:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 498:Generated_Source\PSoC5/cmsis_gcc.h **** 
 499:Generated_Source\PSoC5/cmsis_gcc.h **** 
 500:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 501:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    )
 502:Generated_Source\PSoC5/cmsis_gcc.h **** 
 503:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 504:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 505:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 506:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 507:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 508:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 509:Generated_Source\PSoC5/cmsis_gcc.h **** {
 510:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 511:Generated_Source\PSoC5/cmsis_gcc.h **** 
 512:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 513:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 514:Generated_Source\PSoC5/cmsis_gcc.h **** }
 515:Generated_Source\PSoC5/cmsis_gcc.h **** 
 516:Generated_Source\PSoC5/cmsis_gcc.h **** 
 517:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 518:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 519:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 520:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 521:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 522:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 523:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 524:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 525:Generated_Source\PSoC5/cmsis_gcc.h **** {
 526:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 527:Generated_Source\PSoC5/cmsis_gcc.h **** 
 528:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 529:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 530:Generated_Source\PSoC5/cmsis_gcc.h **** }
 531:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 532:Generated_Source\PSoC5/cmsis_gcc.h **** 
 533:Generated_Source\PSoC5/cmsis_gcc.h **** 
 534:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 535:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 536:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 537:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 538:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 539:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 540:Generated_Source\PSoC5/cmsis_gcc.h **** {
 541:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 542:Generated_Source\PSoC5/cmsis_gcc.h **** }
 543:Generated_Source\PSoC5/cmsis_gcc.h **** 
 544:Generated_Source\PSoC5/cmsis_gcc.h **** 
 545:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 19


 546:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 547:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 548:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 549:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 550:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 551:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 552:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 553:Generated_Source\PSoC5/cmsis_gcc.h **** {
 554:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 555:Generated_Source\PSoC5/cmsis_gcc.h **** }
 556:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 557:Generated_Source\PSoC5/cmsis_gcc.h **** 
 558:Generated_Source\PSoC5/cmsis_gcc.h **** 
 559:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 560:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 561:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 562:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 563:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 564:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 565:Generated_Source\PSoC5/cmsis_gcc.h **** {
 566:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 567:Generated_Source\PSoC5/cmsis_gcc.h **** 
 568:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 569:Generated_Source\PSoC5/cmsis_gcc.h **** 
 570:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 571:Generated_Source\PSoC5/cmsis_gcc.h **** }
 572:Generated_Source\PSoC5/cmsis_gcc.h **** 
 573:Generated_Source\PSoC5/cmsis_gcc.h **** 
 574:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 575:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 576:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 577:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 578:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 579:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 580:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 581:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 582:Generated_Source\PSoC5/cmsis_gcc.h **** {
 583:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 584:Generated_Source\PSoC5/cmsis_gcc.h **** 
 585:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 586:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 587:Generated_Source\PSoC5/cmsis_gcc.h **** }
 588:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 589:Generated_Source\PSoC5/cmsis_gcc.h **** 
 590:Generated_Source\PSoC5/cmsis_gcc.h **** 
 591:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 592:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 593:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 594:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 595:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 596:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 597:Generated_Source\PSoC5/cmsis_gcc.h **** {
 598:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 599:Generated_Source\PSoC5/cmsis_gcc.h **** }
 600:Generated_Source\PSoC5/cmsis_gcc.h **** 
 601:Generated_Source\PSoC5/cmsis_gcc.h **** 
 602:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 20


 603:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 604:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 605:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 606:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 607:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 608:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 609:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 610:Generated_Source\PSoC5/cmsis_gcc.h **** {
 611:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 612:Generated_Source\PSoC5/cmsis_gcc.h **** }
 613:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 614:Generated_Source\PSoC5/cmsis_gcc.h **** 
 615:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 616:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    ) */
 617:Generated_Source\PSoC5/cmsis_gcc.h **** 
 618:Generated_Source\PSoC5/cmsis_gcc.h **** 
 619:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 620:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 621:Generated_Source\PSoC5/cmsis_gcc.h **** 
 622:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 623:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get FPSCR
 624:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 625:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 626:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 627:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 628:Generated_Source\PSoC5/cmsis_gcc.h **** {
 629:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 630:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 631:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 632:Generated_Source\PSoC5/cmsis_gcc.h **** 
 633:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                 /* Empty asm statement works as a scheduling
 634:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 635:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 636:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 637:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 638:Generated_Source\PSoC5/cmsis_gcc.h ****    return(0U);
 639:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 640:Generated_Source\PSoC5/cmsis_gcc.h **** }
 641:Generated_Source\PSoC5/cmsis_gcc.h **** 
 642:Generated_Source\PSoC5/cmsis_gcc.h **** 
 643:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 644:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set FPSCR
 645:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 646:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 647:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 648:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 649:Generated_Source\PSoC5/cmsis_gcc.h **** {
 650:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 651:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 652:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                           /* Empty asm statement works as a 
 653:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 654:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 655:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 656:Generated_Source\PSoC5/cmsis_gcc.h **** }
 657:Generated_Source\PSoC5/cmsis_gcc.h **** 
 658:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 659:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 21


 660:Generated_Source\PSoC5/cmsis_gcc.h **** 
 661:Generated_Source\PSoC5/cmsis_gcc.h **** 
 662:Generated_Source\PSoC5/cmsis_gcc.h **** 
 663:Generated_Source\PSoC5/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 664:Generated_Source\PSoC5/cmsis_gcc.h **** 
 665:Generated_Source\PSoC5/cmsis_gcc.h **** 
 666:Generated_Source\PSoC5/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 667:Generated_Source\PSoC5/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 668:Generated_Source\PSoC5/cmsis_gcc.h ****   Access to dedicated instructions
 669:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
 670:Generated_Source\PSoC5/cmsis_gcc.h **** */
 671:Generated_Source\PSoC5/cmsis_gcc.h **** 
 672:Generated_Source\PSoC5/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 673:Generated_Source\PSoC5/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 674:Generated_Source\PSoC5/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 675:Generated_Source\PSoC5/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 676:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 677:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 678:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 679:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 680:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 681:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 682:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 683:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 684:Generated_Source\PSoC5/cmsis_gcc.h **** 
 685:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 686:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   No Operation
 687:Generated_Source\PSoC5/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 688:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 689:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 690:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 691:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("nop");
 692:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 693:Generated_Source\PSoC5/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 694:Generated_Source\PSoC5/cmsis_gcc.h **** 
 695:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 696:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Interrupt
 697:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 698:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 699:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 700:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 701:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfi");
 702:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 703:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 704:Generated_Source\PSoC5/cmsis_gcc.h **** 
 705:Generated_Source\PSoC5/cmsis_gcc.h **** 
 706:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 707:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Event
 708:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 709:Generated_Source\PSoC5/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 710:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 711:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 712:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 713:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfe");
 714:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 715:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 716:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 22


 717:Generated_Source\PSoC5/cmsis_gcc.h **** 
 718:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 719:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Send Event
 720:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 721:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 722:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 723:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 724:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("sev");
 725:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 726:Generated_Source\PSoC5/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 727:Generated_Source\PSoC5/cmsis_gcc.h **** 
 728:Generated_Source\PSoC5/cmsis_gcc.h **** 
 729:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 730:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 731:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 732:Generated_Source\PSoC5/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 733:Generated_Source\PSoC5/cmsis_gcc.h ****            after the instruction has been completed.
 734:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 735:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 736:Generated_Source\PSoC5/cmsis_gcc.h **** {
 737:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 738:Generated_Source\PSoC5/cmsis_gcc.h **** }
 739:Generated_Source\PSoC5/cmsis_gcc.h **** 
 740:Generated_Source\PSoC5/cmsis_gcc.h **** 
 741:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 742:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 743:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 744:Generated_Source\PSoC5/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 745:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 746:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 747:Generated_Source\PSoC5/cmsis_gcc.h **** {
 748:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 749:Generated_Source\PSoC5/cmsis_gcc.h **** }
 750:Generated_Source\PSoC5/cmsis_gcc.h **** 
 751:Generated_Source\PSoC5/cmsis_gcc.h **** 
 752:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 753:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Memory Barrier
 754:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 755:Generated_Source\PSoC5/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 756:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 757:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 758:Generated_Source\PSoC5/cmsis_gcc.h **** {
 759:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 760:Generated_Source\PSoC5/cmsis_gcc.h **** }
 761:Generated_Source\PSoC5/cmsis_gcc.h **** 
 762:Generated_Source\PSoC5/cmsis_gcc.h **** 
 763:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 764:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 765:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 766:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 767:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 768:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 769:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 770:Generated_Source\PSoC5/cmsis_gcc.h **** {
 771:Generated_Source\PSoC5/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 772:Generated_Source\PSoC5/cmsis_gcc.h ****   return __builtin_bswap32(value);
 773:Generated_Source\PSoC5/cmsis_gcc.h **** #else
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 23


 774:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 775:Generated_Source\PSoC5/cmsis_gcc.h **** 
 776:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 777:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 778:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 779:Generated_Source\PSoC5/cmsis_gcc.h **** }
 780:Generated_Source\PSoC5/cmsis_gcc.h **** 
 781:Generated_Source\PSoC5/cmsis_gcc.h **** 
 782:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 783:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 784:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 785:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 786:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 787:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 788:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 789:Generated_Source\PSoC5/cmsis_gcc.h **** {
 790:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 791:Generated_Source\PSoC5/cmsis_gcc.h **** 
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 326              		.loc 2 792 0
 327 0344 7B69     		ldr	r3, [r7, #20]
 328              		.syntax unified
 329              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 330 0346 5BBA     		rev16 r3, r3
 331              	@ 0 "" 2
 332              		.thumb
 333              		.syntax unified
 334 0348 3B61     		str	r3, [r7, #16]
 793:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 335              		.loc 2 793 0
 336 034a 3B69     		ldr	r3, [r7, #16]
 337              	.LBE11:
 338              	.LBE10:
 339              		.loc 1 156 0
 340 034c 9BB2     		uxth	r3, r3
 341 034e 1846     		mov	r0, r3
 342 0350 FFF7FEFF 		bl	infoGet
 157:..\src/command_processing.c ****             break;
 343              		.loc 1 157 0
 344 0354 C8E0     		b	.L1
 345              	.L7:
 158:..\src/command_processing.c **** 
 159:..\src/command_processing.c **** //============================================================     CMD_SET_PARAM
 160:..\src/command_processing.c **** 
 161:..\src/command_processing.c ****         case CMD_SET_ZEROS:
 162:..\src/command_processing.c ****             setZeros();
 346              		.loc 1 162 0
 347 0356 FFF7FEFF 		bl	setZeros
 163:..\src/command_processing.c ****             break;
 348              		.loc 1 163 0
 349 035a C5E0     		b	.L1
 350              	.L14:
 164:..\src/command_processing.c **** 
 165:..\src/command_processing.c **** //============================================================     CMD_GET_PARAM
 166:..\src/command_processing.c **** 
 167:..\src/command_processing.c ****         case CMD_GET_PARAM_LIST:
 168:..\src/command_processing.c ****             manage_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 24


 351              		.loc 1 168 0
 352 035c 0E4B     		ldr	r3, .L51+4
 353 035e 1B88     		ldrh	r3, [r3]
 354 0360 3B62     		str	r3, [r7, #32]
 355              	.LBB12:
 356              	.LBB13:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 357              		.loc 2 792 0
 358 0362 3B6A     		ldr	r3, [r7, #32]
 359              		.syntax unified
 360              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 361 0364 5BBA     		rev16 r3, r3
 362              	@ 0 "" 2
 363              		.thumb
 364              		.syntax unified
 365 0366 FB60     		str	r3, [r7, #12]
 366              		.loc 2 793 0
 367 0368 FB68     		ldr	r3, [r7, #12]
 368              	.LBE13:
 369              	.LBE12:
 370              		.loc 1 168 0
 371 036a 9BB2     		uxth	r3, r3
 372 036c 1846     		mov	r0, r3
 373 036e FFF7FEFF 		bl	manage_param_list
 169:..\src/command_processing.c ****             break;
 374              		.loc 1 169 0
 375 0372 B9E0     		b	.L1
 376              	.L5:
 170:..\src/command_processing.c **** 
 171:..\src/command_processing.c **** //=================================================================     CMD_PING
 172:..\src/command_processing.c ****             
 173:..\src/command_processing.c ****         case CMD_PING:
 174:..\src/command_processing.c ****             cmd_ping();
 377              		.loc 1 174 0
 378 0374 FFF7FEFF 		bl	cmd_ping
 175:..\src/command_processing.c ****             break;
 379              		.loc 1 175 0
 380 0378 B6E0     		b	.L1
 381              	.L8:
 176:..\src/command_processing.c **** 
 177:..\src/command_processing.c **** //=========================================================     CMD_STORE_PARAMS
 178:..\src/command_processing.c ****             
 179:..\src/command_processing.c ****         case CMD_STORE_PARAMS:
 180:..\src/command_processing.c ****             cmd_store_params();
 382              		.loc 1 180 0
 383 037a FFF7FEFF 		bl	cmd_store_params
 181:..\src/command_processing.c ****             break;
 384              		.loc 1 181 0
 385 037e B3E0     		b	.L1
 386              	.L9:
 182:..\src/command_processing.c **** 
 183:..\src/command_processing.c **** //=================================================     CMD_STORE_DEFAULT_PARAMS
 184:..\src/command_processing.c **** 
 185:..\src/command_processing.c ****         case CMD_STORE_DEFAULT_PARAMS:
 186:..\src/command_processing.c ****             if(memStore(DEFAULT_EEPROM_DISPLACEMENT))
 387              		.loc 1 186 0
 388 0380 3220     		movs	r0, #50
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 25


 389 0382 FFF7FEFF 		bl	memStore
 390 0386 0346     		mov	r3, r0
 391 0388 002B     		cmp	r3, #0
 392 038a 07D0     		beq	.L38
 187:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 393              		.loc 1 187 0
 394 038c 0120     		movs	r0, #1
 395 038e FFF7FEFF 		bl	sendAcknowledgment
 188:..\src/command_processing.c ****             else
 189:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 190:..\src/command_processing.c ****             break;
 396              		.loc 1 190 0
 397 0392 A9E0     		b	.L1
 398              	.L52:
 399              		.align	2
 400              	.L51:
 401 0394 00000000 		.word	g_rx
 402 0398 01000000 		.word	g_rx+1
 403              	.L38:
 189:..\src/command_processing.c ****             break;
 404              		.loc 1 189 0
 405 039c 0020     		movs	r0, #0
 406 039e FFF7FEFF 		bl	sendAcknowledgment
 407              		.loc 1 190 0
 408 03a2 A1E0     		b	.L1
 409              	.L10:
 191:..\src/command_processing.c **** 
 192:..\src/command_processing.c **** //=======================================================     CMD_RESTORE_PARAMS
 193:..\src/command_processing.c **** 
 194:..\src/command_processing.c ****         case CMD_RESTORE_PARAMS:
 195:..\src/command_processing.c ****             if(memRestore())
 410              		.loc 1 195 0
 411 03a4 FFF7FEFF 		bl	memRestore
 412 03a8 0346     		mov	r3, r0
 413 03aa 002B     		cmp	r3, #0
 414 03ac 03D0     		beq	.L40
 196:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 415              		.loc 1 196 0
 416 03ae 0120     		movs	r0, #1
 417 03b0 FFF7FEFF 		bl	sendAcknowledgment
 197:..\src/command_processing.c ****             else
 198:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 199:..\src/command_processing.c ****             break;
 418              		.loc 1 199 0
 419 03b4 98E0     		b	.L1
 420              	.L40:
 198:..\src/command_processing.c ****             break;
 421              		.loc 1 198 0
 422 03b6 0020     		movs	r0, #0
 423 03b8 FFF7FEFF 		bl	sendAcknowledgment
 424              		.loc 1 199 0
 425 03bc 94E0     		b	.L1
 426              	.L13:
 200:..\src/command_processing.c **** 
 201:..\src/command_processing.c **** //=============================================================     CMD_INIT_MEM
 202:..\src/command_processing.c **** 
 203:..\src/command_processing.c ****         case CMD_INIT_MEM:            
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 26


 204:..\src/command_processing.c ****             if(memInit())
 427              		.loc 1 204 0
 428 03be FFF7FEFF 		bl	memInit
 429 03c2 0346     		mov	r3, r0
 430 03c4 002B     		cmp	r3, #0
 431 03c6 03D0     		beq	.L42
 205:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 432              		.loc 1 205 0
 433 03c8 0120     		movs	r0, #1
 434 03ca FFF7FEFF 		bl	sendAcknowledgment
 206:..\src/command_processing.c ****             else
 207:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 208:..\src/command_processing.c ****             break;
 435              		.loc 1 208 0
 436 03ce 8BE0     		b	.L1
 437              	.L42:
 207:..\src/command_processing.c ****             break;
 438              		.loc 1 207 0
 439 03d0 0020     		movs	r0, #0
 440 03d2 FFF7FEFF 		bl	sendAcknowledgment
 441              		.loc 1 208 0
 442 03d6 87E0     		b	.L1
 443              	.L12:
 209:..\src/command_processing.c **** 
 210:..\src/command_processing.c **** //===========================================================     CMD_BOOTLOADER
 211:..\src/command_processing.c **** 
 212:..\src/command_processing.c ****         case CMD_BOOTLOADER:
 213:..\src/command_processing.c ****             //Not sure if ACK_OK is correct, should check
 214:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 444              		.loc 1 214 0
 445 03d8 0120     		movs	r0, #1
 446 03da FFF7FEFF 		bl	sendAcknowledgment
 215:..\src/command_processing.c ****             CyDelay(1000);
 447              		.loc 1 215 0
 448 03de 4FF47A70 		mov	r0, #1000
 449 03e2 FFF7FEFF 		bl	CyDelay
 216:..\src/command_processing.c ****             FTDI_ENABLE_Write(0x00);
 450              		.loc 1 216 0
 451 03e6 0020     		movs	r0, #0
 452 03e8 FFF7FEFF 		bl	FTDI_ENABLE_Write
 217:..\src/command_processing.c ****             CyDelay(1000);
 453              		.loc 1 217 0
 454 03ec 4FF47A70 		mov	r0, #1000
 455 03f0 FFF7FEFF 		bl	CyDelay
 218:..\src/command_processing.c ****             Bootloadable_Load();
 456              		.loc 1 218 0
 457 03f4 FFF7FEFF 		bl	Bootloadable_Load
 219:..\src/command_processing.c ****             break;
 458              		.loc 1 219 0
 459 03f8 76E0     		b	.L1
 460              	.L15:
 220:..\src/command_processing.c **** 
 221:..\src/command_processing.c **** //============================================================     CMD_HAND_CALIBRATE
 222:..\src/command_processing.c **** 
 223:..\src/command_processing.c ****         case CMD_HAND_CALIBRATE:
 224:..\src/command_processing.c ****             calib.speed = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 461              		.loc 1 224 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 27


 462 03fa 3D4B     		ldr	r3, .L53
 463 03fc 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 464 03fe 1B02     		lsls	r3, r3, #8
 465 0400 1AB2     		sxth	r2, r3
 466 0402 3B4B     		ldr	r3, .L53
 467 0404 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 468 0406 1BB2     		sxth	r3, r3
 469 0408 1343     		orrs	r3, r3, r2
 470 040a 1AB2     		sxth	r2, r3
 471 040c 394B     		ldr	r3, .L53+4
 472 040e 5A80     		strh	r2, [r3, #2]	@ movhi
 225:..\src/command_processing.c ****             calib.repetitions = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 473              		.loc 1 225 0
 474 0410 374B     		ldr	r3, .L53
 475 0412 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 476 0414 1B02     		lsls	r3, r3, #8
 477 0416 1AB2     		sxth	r2, r3
 478 0418 354B     		ldr	r3, .L53
 479 041a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 480 041c 1BB2     		sxth	r3, r3
 481 041e 1343     		orrs	r3, r3, r2
 482 0420 1AB2     		sxth	r2, r3
 483 0422 344B     		ldr	r3, .L53+4
 484 0424 9A80     		strh	r2, [r3, #4]	@ movhi
 226:..\src/command_processing.c ****             
 227:..\src/command_processing.c ****             if(calib.speed == -1 && calib.repetitions == -1) {
 485              		.loc 1 227 0
 486 0426 334B     		ldr	r3, .L53+4
 487 0428 B3F90230 		ldrsh	r3, [r3, #2]
 488 042c B3F1FF3F 		cmp	r3, #-1
 489 0430 0FD1     		bne	.L44
 490              		.loc 1 227 0 is_stmt 0 discriminator 1
 491 0432 304B     		ldr	r3, .L53+4
 492 0434 B3F90430 		ldrsh	r3, [r3, #4]
 493 0438 B3F1FF3F 		cmp	r3, #-1
 494 043c 09D1     		bne	.L44
 228:..\src/command_processing.c ****                 calib.enabled = FALSE;
 495              		.loc 1 228 0 is_stmt 1
 496 043e 2D4B     		ldr	r3, .L53+4
 497 0440 0022     		movs	r2, #0
 498 0442 1A70     		strb	r2, [r3]
 229:..\src/command_processing.c ****                 calib.speed = 0;
 499              		.loc 1 229 0
 500 0444 2B4B     		ldr	r3, .L53+4
 501 0446 0022     		movs	r2, #0
 502 0448 5A80     		strh	r2, [r3, #2]	@ movhi
 230:..\src/command_processing.c ****                 calib.repetitions = 0;
 503              		.loc 1 230 0
 504 044a 2A4B     		ldr	r3, .L53+4
 505 044c 0022     		movs	r2, #0
 506 044e 9A80     		strh	r2, [r3, #4]	@ movhi
 231:..\src/command_processing.c ****                 break;
 507              		.loc 1 231 0
 508 0450 4AE0     		b	.L1
 509              	.L44:
 232:..\src/command_processing.c ****             }
 233:..\src/command_processing.c ****             // Speed & repetitions saturations
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 28


 234:..\src/command_processing.c ****             if (calib.speed < 0) {
 510              		.loc 1 234 0
 511 0452 284B     		ldr	r3, .L53+4
 512 0454 B3F90230 		ldrsh	r3, [r3, #2]
 513 0458 002B     		cmp	r3, #0
 514 045a 03DA     		bge	.L45
 235:..\src/command_processing.c ****                 calib.speed = 0;
 515              		.loc 1 235 0
 516 045c 254B     		ldr	r3, .L53+4
 517 045e 0022     		movs	r2, #0
 518 0460 5A80     		strh	r2, [r3, #2]	@ movhi
 519 0462 07E0     		b	.L46
 520              	.L45:
 236:..\src/command_processing.c ****             } else if (calib.speed > 200) {
 521              		.loc 1 236 0
 522 0464 234B     		ldr	r3, .L53+4
 523 0466 B3F90230 		ldrsh	r3, [r3, #2]
 524 046a C82B     		cmp	r3, #200
 525 046c 02DD     		ble	.L46
 237:..\src/command_processing.c ****                 calib.speed = 200;
 526              		.loc 1 237 0
 527 046e 214B     		ldr	r3, .L53+4
 528 0470 C822     		movs	r2, #200
 529 0472 5A80     		strh	r2, [r3, #2]	@ movhi
 530              	.L46:
 238:..\src/command_processing.c ****             }
 239:..\src/command_processing.c ****             if (calib.repetitions < 0) {
 531              		.loc 1 239 0
 532 0474 1F4B     		ldr	r3, .L53+4
 533 0476 B3F90430 		ldrsh	r3, [r3, #4]
 534 047a 002B     		cmp	r3, #0
 535 047c 02DA     		bge	.L47
 240:..\src/command_processing.c ****                 calib.repetitions = 0;
 536              		.loc 1 240 0
 537 047e 1D4B     		ldr	r3, .L53+4
 538 0480 0022     		movs	r2, #0
 539 0482 9A80     		strh	r2, [r3, #4]	@ movhi
 540              	.L47:
 241:..\src/command_processing.c ****             } else if (calib.repetitions > 32767) {
 242:..\src/command_processing.c ****                 calib.repetitions = 32767;
 243:..\src/command_processing.c ****             }
 244:..\src/command_processing.c ****             
 245:..\src/command_processing.c ****             g_refNew[0].pos = 0;                    // SoftHand is on motor 1
 541              		.loc 1 245 0
 542 0484 1C4B     		ldr	r3, .L53+8
 543 0486 0022     		movs	r2, #0
 544 0488 1A60     		str	r2, [r3]
 246:..\src/command_processing.c ****             calib.enabled = TRUE;
 545              		.loc 1 246 0
 546 048a 1A4B     		ldr	r3, .L53+4
 547 048c 0122     		movs	r2, #1
 548 048e 1A70     		strb	r2, [r3]
 247:..\src/command_processing.c ****          
 248:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 549              		.loc 1 248 0
 550 0490 0120     		movs	r0, #1
 551 0492 FFF7FEFF 		bl	sendAcknowledgment
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 29


 249:..\src/command_processing.c ****             break;
 552              		.loc 1 249 0
 553 0496 27E0     		b	.L1
 554              	.L29:
 250:..\src/command_processing.c ****             
 251:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_READINGS
 252:..\src/command_processing.c **** 
 253:..\src/command_processing.c ****         case CMD_GET_IMU_READINGS:
 254:..\src/command_processing.c ****             cmd_get_imu_readings();
 555              		.loc 1 254 0
 556 0498 FFF7FEFF 		bl	cmd_get_imu_readings
 255:..\src/command_processing.c ****             break; 
 557              		.loc 1 255 0
 558 049c 24E0     		b	.L1
 559              	.L30:
 256:..\src/command_processing.c ****             
 257:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_PARAM
 258:..\src/command_processing.c **** 
 259:..\src/command_processing.c ****         case CMD_GET_IMU_PARAM:
 260:..\src/command_processing.c ****             get_IMU_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 560              		.loc 1 260 0
 561 049e 174B     		ldr	r3, .L53+12
 562 04a0 1B88     		ldrh	r3, [r3]
 563 04a2 FB61     		str	r3, [r7, #28]
 564              	.LBB14:
 565              	.LBB15:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 566              		.loc 2 792 0
 567 04a4 FB69     		ldr	r3, [r7, #28]
 568              		.syntax unified
 569              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 570 04a6 5BBA     		rev16 r3, r3
 571              	@ 0 "" 2
 572              		.thumb
 573              		.syntax unified
 574 04a8 BB60     		str	r3, [r7, #8]
 575              		.loc 2 793 0
 576 04aa BB68     		ldr	r3, [r7, #8]
 577              	.LBE15:
 578              	.LBE14:
 579              		.loc 1 260 0
 580 04ac 9BB2     		uxth	r3, r3
 581 04ae 1846     		mov	r0, r3
 582 04b0 FFF7FEFF 		bl	get_IMU_param_list
 261:..\src/command_processing.c ****             break;             
 583              		.loc 1 261 0
 584 04b4 18E0     		b	.L1
 585              	.L31:
 262:..\src/command_processing.c ****             
 263:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_CONF
 264:..\src/command_processing.c **** 
 265:..\src/command_processing.c ****         case CMD_GET_ENCODER_CONF:
 266:..\src/command_processing.c ****             cmd_get_encoder_map();
 586              		.loc 1 266 0
 587 04b6 FFF7FEFF 		bl	cmd_get_encoder_map
 267:..\src/command_processing.c ****             break; 
 588              		.loc 1 267 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 30


 589 04ba 15E0     		b	.L1
 590              	.L32:
 268:..\src/command_processing.c **** 
 269:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_RAW
 270:..\src/command_processing.c **** 
 271:..\src/command_processing.c ****         case CMD_GET_ENCODER_RAW:
 272:..\src/command_processing.c ****             cmd_get_encoder_raw();
 591              		.loc 1 272 0
 592 04bc FFF7FEFF 		bl	cmd_get_encoder_raw
 273:..\src/command_processing.c ****             break; 
 593              		.loc 1 273 0
 594 04c0 12E0     		b	.L1
 595              	.L33:
 274:..\src/command_processing.c **** 
 275:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_CONF
 276:..\src/command_processing.c **** 
 277:..\src/command_processing.c ****         case CMD_GET_ADC_CONF:
 278:..\src/command_processing.c ****             cmd_get_ADC_map();
 596              		.loc 1 278 0
 597 04c2 FFF7FEFF 		bl	cmd_get_ADC_map
 279:..\src/command_processing.c ****             break; 
 598              		.loc 1 279 0
 599 04c6 0FE0     		b	.L1
 600              	.L34:
 280:..\src/command_processing.c ****             
 281:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_RAW
 282:..\src/command_processing.c **** 
 283:..\src/command_processing.c ****         case CMD_GET_ADC_RAW:
 284:..\src/command_processing.c ****             cmd_get_ADC_raw();
 601              		.loc 1 284 0
 602 04c8 FFF7FEFF 		bl	cmd_get_ADC_raw
 285:..\src/command_processing.c ****             break; 
 603              		.loc 1 285 0
 604 04cc 0CE0     		b	.L1
 605              	.L35:
 286:..\src/command_processing.c ****             
 287:..\src/command_processing.c **** //=====================================================     CMD_GET_SD_FILESYSTEM
 288:..\src/command_processing.c **** 
 289:..\src/command_processing.c ****         case CMD_GET_SD_SINGLE_FILE:
 290:..\src/command_processing.c ****             cmd_get_SD_file( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 606              		.loc 1 290 0
 607 04ce 0B4B     		ldr	r3, .L53+12
 608 04d0 1B88     		ldrh	r3, [r3]
 609 04d2 BB61     		str	r3, [r7, #24]
 610              	.LBB16:
 611              	.LBB17:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 612              		.loc 2 792 0
 613 04d4 BB69     		ldr	r3, [r7, #24]
 614              		.syntax unified
 615              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 616 04d6 5BBA     		rev16 r3, r3
 617              	@ 0 "" 2
 618              		.thumb
 619              		.syntax unified
 620 04d8 7B60     		str	r3, [r7, #4]
 621              		.loc 2 793 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 31


 622 04da 7B68     		ldr	r3, [r7, #4]
 623              	.LBE17:
 624              	.LBE16:
 625              		.loc 1 290 0
 626 04dc 9BB2     		uxth	r3, r3
 627 04de 1846     		mov	r0, r3
 628 04e0 FFF7FEFF 		bl	cmd_get_SD_file
 291:..\src/command_processing.c ****             break;             
 629              		.loc 1 291 0
 630 04e4 00E0     		b	.L1
 631              	.L50:
 292:..\src/command_processing.c ****             
 293:..\src/command_processing.c ****             
 294:..\src/command_processing.c **** //=========================================================== ALL OTHER COMMANDS
 295:..\src/command_processing.c ****         default:
 296:..\src/command_processing.c ****             break;
 632              		.loc 1 296 0
 633 04e6 00BF     		nop
 634              	.L1:
 297:..\src/command_processing.c **** 
 298:..\src/command_processing.c ****     }
 299:..\src/command_processing.c **** }  
 635              		.loc 1 299 0
 636 04e8 2837     		adds	r7, r7, #40
 637              		.cfi_def_cfa_offset 8
 638 04ea BD46     		mov	sp, r7
 639              		.cfi_def_cfa_register 13
 640              		@ sp needed
 641 04ec 80BD     		pop	{r7, pc}
 642              	.L54:
 643 04ee 00BF     		.align	2
 644              	.L53:
 645 04f0 00000000 		.word	g_rx
 646 04f4 00000000 		.word	calib
 647 04f8 00000000 		.word	g_refNew
 648 04fc 01000000 		.word	g_rx+1
 649              		.cfi_endproc
 650              	.LFE64:
 651              		.size	commProcess, .-commProcess
 652              		.section	.text.infoSend,"ax",%progbits
 653              		.align	2
 654              		.global	infoSend
 655              		.thumb
 656              		.thumb_func
 657              		.type	infoSend, %function
 658              	infoSend:
 659              	.LFB65:
 300:..\src/command_processing.c **** 
 301:..\src/command_processing.c **** //==============================================================================
 302:..\src/command_processing.c **** //                                                                     INFO SEND
 303:..\src/command_processing.c **** //==============================================================================
 304:..\src/command_processing.c **** 
 305:..\src/command_processing.c **** void infoSend(void){
 660              		.loc 1 305 0
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 1504
 663              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 32


 664 0000 80B5     		push	{r7, lr}
 665              		.cfi_def_cfa_offset 8
 666              		.cfi_offset 7, -8
 667              		.cfi_offset 14, -4
 668 0002 ADF5BC6D 		sub	sp, sp, #1504
 669              		.cfi_def_cfa_offset 1512
 670 0006 00AF     		add	r7, sp, #0
 671              		.cfi_def_cfa_register 7
 306:..\src/command_processing.c ****     char packet_string[1500];
 307:..\src/command_processing.c ****     
 308:..\src/command_processing.c ****     prepare_generic_info(packet_string);
 672              		.loc 1 308 0
 673 0008 3B1D     		adds	r3, r7, #4
 674 000a 1846     		mov	r0, r3
 675 000c FFF7FEFF 		bl	prepare_generic_info
 309:..\src/command_processing.c ****     UART_RS485_PutString(packet_string);
 676              		.loc 1 309 0
 677 0010 3B1D     		adds	r3, r7, #4
 678 0012 1846     		mov	r0, r3
 679 0014 FFF7FEFF 		bl	UART_RS485_PutString
 310:..\src/command_processing.c **** }
 680              		.loc 1 310 0
 681 0018 00BF     		nop
 682 001a 07F5BC67 		add	r7, r7, #1504
 683              		.cfi_def_cfa_offset 8
 684 001e BD46     		mov	sp, r7
 685              		.cfi_def_cfa_register 13
 686              		@ sp needed
 687 0020 80BD     		pop	{r7, pc}
 688              		.cfi_endproc
 689              	.LFE65:
 690              		.size	infoSend, .-infoSend
 691 0022 00BF     		.section	.text.infoGet,"ax",%progbits
 692              		.align	2
 693              		.global	infoGet
 694              		.thumb
 695              		.thumb_func
 696              		.type	infoGet, %function
 697              	infoGet:
 698              	.LFB66:
 311:..\src/command_processing.c **** 
 312:..\src/command_processing.c **** 
 313:..\src/command_processing.c **** //==============================================================================
 314:..\src/command_processing.c **** //                                                              COMMAND GET INFO
 315:..\src/command_processing.c **** //==============================================================================
 316:..\src/command_processing.c **** 
 317:..\src/command_processing.c **** void infoGet(uint16 info_type) {
 699              		.loc 1 317 0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 24008
 702              		@ frame_needed = 1, uses_anonymous_args = 0
 703 0000 80B5     		push	{r7, lr}
 704              		.cfi_def_cfa_offset 8
 705              		.cfi_offset 7, -8
 706              		.cfi_offset 14, -4
 707 0002 ADF5BB4D 		sub	sp, sp, #23936
 708              		.cfi_def_cfa_offset 23944
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 33


 709 0006 92B0     		sub	sp, sp, #72
 710              		.cfi_def_cfa_offset 24016
 711 0008 00AF     		add	r7, sp, #0
 712              		.cfi_def_cfa_register 7
 713 000a 0246     		mov	r2, r0
 714 000c 07F14803 		add	r3, r7, #72
 715 0010 423B     		subs	r3, r3, #66
 716 0012 1A80     		strh	r2, [r3]	@ movhi
 318:..\src/command_processing.c ****     char CYDATA packet_string[4000] = "";
 717              		.loc 1 318 0
 718 0014 07F59C43 		add	r3, r7, #19968
 719 0018 03F12803 		add	r3, r3, #40
 720 001c 0022     		movs	r2, #0
 721 001e 1A60     		str	r2, [r3]
 722 0020 0433     		adds	r3, r3, #4
 723 0022 40F69C72 		movw	r2, #3996
 724 0026 0021     		movs	r1, #0
 725 0028 1846     		mov	r0, r3
 726 002a FFF7FEFF 		bl	memset
 319:..\src/command_processing.c ****     char CYDATA str_sd_data[20000] = "";
 727              		.loc 1 319 0
 728 002e 07F14803 		add	r3, r7, #72
 729 0032 403B     		subs	r3, r3, #64
 730 0034 0022     		movs	r2, #0
 731 0036 1A60     		str	r2, [r3]
 732 0038 0433     		adds	r3, r3, #4
 733 003a 44F61C62 		movw	r2, #19996
 734 003e 0021     		movs	r1, #0
 735 0040 1846     		mov	r0, r3
 736 0042 FFF7FEFF 		bl	memset
 320:..\src/command_processing.c ****     //==================================     choose info type and prepare string
 321:..\src/command_processing.c **** 
 322:..\src/command_processing.c ****     switch (info_type) {
 737              		.loc 1 322 0
 738 0046 07F14803 		add	r3, r7, #72
 739 004a 423B     		subs	r3, r3, #66
 740 004c 1B88     		ldrh	r3, [r3]
 741 004e 052B     		cmp	r3, #5
 742 0050 66D8     		bhi	.L66
 743 0052 01A2     		adr	r2, .L59
 744 0054 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 745              		.p2align 2
 746              	.L59:
 747 0058 71000000 		.word	.L58+1
 748 005c 93000000 		.word	.L60+1
 749 0060 B5000000 		.word	.L61+1
 750 0064 DD000000 		.word	.L62+1
 751 0068 FF000000 		.word	.L63+1
 752 006c 1D010000 		.word	.L64+1
 753              		.p2align 1
 754              	.L58:
 323:..\src/command_processing.c ****         case INFO_ALL:
 324:..\src/command_processing.c ****             prepare_generic_info(packet_string);
 755              		.loc 1 324 0
 756 0070 07F59C43 		add	r3, r7, #19968
 757 0074 03F12803 		add	r3, r3, #40
 758 0078 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 34


 759 007a FFF7FEFF 		bl	prepare_generic_info
 325:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer(); 
 760              		.loc 1 325 0
 761 007e FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 326:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 762              		.loc 1 326 0
 763 0082 07F59C43 		add	r3, r7, #19968
 764 0086 03F12803 		add	r3, r3, #40
 765 008a 1846     		mov	r0, r3
 766 008c FFF7FEFF 		bl	UART_RS485_PutString
 327:..\src/command_processing.c ****             break;
 767              		.loc 1 327 0
 768 0090 47E0     		b	.L65
 769              	.L60:
 328:..\src/command_processing.c ****         case CYCLES_INFO:
 329:..\src/command_processing.c ****             prepare_counter_info(packet_string);
 770              		.loc 1 329 0
 771 0092 07F59C43 		add	r3, r7, #19968
 772 0096 03F12803 		add	r3, r3, #40
 773 009a 1846     		mov	r0, r3
 774 009c FFF7FEFF 		bl	prepare_counter_info
 330:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 775              		.loc 1 330 0
 776 00a0 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 331:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 777              		.loc 1 331 0
 778 00a4 07F59C43 		add	r3, r7, #19968
 779 00a8 03F12803 		add	r3, r3, #40
 780 00ac 1846     		mov	r0, r3
 781 00ae FFF7FEFF 		bl	UART_RS485_PutString
 332:..\src/command_processing.c ****             break;
 782              		.loc 1 332 0
 783 00b2 36E0     		b	.L65
 784              	.L61:
 333:..\src/command_processing.c ****         case GET_SD_PARAM:
 334:..\src/command_processing.c ****             Read_SD_Closed_File(sdParam, packet_string, sizeof(packet_string));
 785              		.loc 1 334 0
 786 00b4 07F59C43 		add	r3, r7, #19968
 787 00b8 03F12803 		add	r3, r3, #40
 788 00bc 4FF47A62 		mov	r2, #4000
 789 00c0 1946     		mov	r1, r3
 790 00c2 1B48     		ldr	r0, .L67
 791 00c4 FFF7FEFF 		bl	Read_SD_Closed_File
 335:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 792              		.loc 1 335 0
 793 00c8 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 336:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 794              		.loc 1 336 0
 795 00cc 07F59C43 		add	r3, r7, #19968
 796 00d0 03F12803 		add	r3, r3, #40
 797 00d4 1846     		mov	r0, r3
 798 00d6 FFF7FEFF 		bl	UART_RS485_PutString
 337:..\src/command_processing.c ****             break;
 799              		.loc 1 337 0
 800 00da 22E0     		b	.L65
 801              	.L62:
 338:..\src/command_processing.c ****         case GET_SD_DATA:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 35


 339:..\src/command_processing.c ****             Read_SD_Current_Data(str_sd_data, sizeof(str_sd_data));
 802              		.loc 1 339 0
 803 00dc 07F14803 		add	r3, r7, #72
 804 00e0 403B     		subs	r3, r3, #64
 805 00e2 44F62061 		movw	r1, #20000
 806 00e6 1846     		mov	r0, r3
 807 00e8 FFF7FEFF 		bl	Read_SD_Current_Data
 340:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 808              		.loc 1 340 0
 809 00ec FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 341:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 810              		.loc 1 341 0
 811 00f0 07F14803 		add	r3, r7, #72
 812 00f4 403B     		subs	r3, r3, #64
 813 00f6 1846     		mov	r0, r3
 814 00f8 FFF7FEFF 		bl	UART_RS485_PutString
 342:..\src/command_processing.c ****             break;
 815              		.loc 1 342 0
 816 00fc 11E0     		b	.L65
 817              	.L63:
 343:..\src/command_processing.c ****         case GET_SD_FS_TREE:
 344:..\src/command_processing.c ****             Get_SD_FS(str_sd_data);
 818              		.loc 1 344 0
 819 00fe 07F14803 		add	r3, r7, #72
 820 0102 403B     		subs	r3, r3, #64
 821 0104 1846     		mov	r0, r3
 822 0106 FFF7FEFF 		bl	Get_SD_FS
 345:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 823              		.loc 1 345 0
 824 010a FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 346:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 825              		.loc 1 346 0
 826 010e 07F14803 		add	r3, r7, #72
 827 0112 403B     		subs	r3, r3, #64
 828 0114 1846     		mov	r0, r3
 829 0116 FFF7FEFF 		bl	UART_RS485_PutString
 347:..\src/command_processing.c ****             break;
 830              		.loc 1 347 0
 831 011a 02E0     		b	.L65
 832              	.L64:
 348:..\src/command_processing.c ****         case GET_SD_EMG_HIST:
 349:..\src/command_processing.c ****             // Send every single byte inside the function, since it could be a large file to send
 350:..\src/command_processing.c ****             Read_SD_EMG_History_Data();
 833              		.loc 1 350 0
 834 011c FFF7FEFF 		bl	Read_SD_EMG_History_Data
 835              	.L66:
 351:..\src/command_processing.c ****         default:
 352:..\src/command_processing.c ****             break;
 836              		.loc 1 352 0
 837 0120 00BF     		nop
 838              	.L65:
 353:..\src/command_processing.c ****     }
 354:..\src/command_processing.c **** }
 839              		.loc 1 354 0 discriminator 1
 840 0122 00BF     		nop
 841 0124 07F5BB47 		add	r7, r7, #23936
 842 0128 4837     		adds	r7, r7, #72
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 36


 843              		.cfi_def_cfa_offset 8
 844 012a BD46     		mov	sp, r7
 845              		.cfi_def_cfa_register 13
 846              		@ sp needed
 847 012c 80BD     		pop	{r7, pc}
 848              	.L68:
 849 012e 00BF     		.align	2
 850              	.L67:
 851 0130 00000000 		.word	sdParam
 852              		.cfi_endproc
 853              	.LFE66:
 854              		.size	infoGet, .-infoGet
 855              		.global	__aeabi_i2f
 856              		.global	__aeabi_fdiv
 857              		.section	.rodata
 858              		.align	2
 859              	.LC88:
 860 0000 20557362 		.ascii	" Usb\000"
 860      00
 861 0005 000000   		.align	2
 862              	.LC89:
 863 0008 2048616E 		.ascii	" Handle\000"
 863      646C6500 
 864              		.align	2
 865              	.LC90:
 866 0010 20454D47 		.ascii	" EMG proportional\000"
 866      2070726F 
 866      706F7274 
 866      696F6E61 
 866      6C00
 867 0022 0000     		.align	2
 868              	.LC91:
 869 0024 20454D47 		.ascii	" EMG integral\000"
 869      20696E74 
 869      65677261 
 869      6C00
 870 0032 0000     		.align	2
 871              	.LC92:
 872 0034 20454D47 		.ascii	" EMG FCFS\000"
 872      20464346 
 872      5300
 873 003e 0000     		.align	2
 874              	.LC93:
 875 0040 20454D47 		.ascii	" EMG FCFS Advanced\000"
 875      20464346 
 875      53204164 
 875      76616E63 
 875      656400
 876 0053 00       		.align	2
 877              	.LC94:
 878 0054 204A6F79 		.ascii	" Joystick\000"
 878      73746963 
 878      6B00
 879 005e 0000     		.align	2
 880              	.LC95:
 881 0060 20454D47 		.ascii	" EMG proportional Normally Closed\000"
 881      2070726F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 37


 881      706F7274 
 881      696F6E61 
 881      6C204E6F 
 882 0082 0000     		.align	2
 883              	.LC96:
 884 0084 20506F73 		.ascii	" Position\000"
 884      6974696F 
 884      6E00
 885 008e 0000     		.align	2
 886              	.LC97:
 887 0090 2050574D 		.ascii	" PWM\000"
 887      00
 888 0095 000000   		.align	2
 889              	.LC98:
 890 0098 20437572 		.ascii	" Current\000"
 890      72656E74 
 890      00
 891 00a1 000000   		.align	2
 892              	.LC99:
 893 00a4 20506F73 		.ascii	" Position and Current\000"
 893      6974696F 
 893      6E20616E 
 893      64204375 
 893      7272656E 
 894 00ba 0000     		.align	2
 895              	.LC100:
 896 00bc 20594553 		.ascii	" YES\000\000"
 896      0000
 897 00c2 0000     		.align	2
 898              	.LC101:
 899 00c4 204E4F00 		.ascii	" NO\000\000"
 899      00
 900 00c9 000000   		.align	2
 901              	.LC102:
 902 00cc 20526967 		.ascii	" Right\000\000"
 902      68740000 
 903              		.align	2
 904              	.LC103:
 905 00d4 204C6566 		.ascii	" Left\000\000"
 905      740000
 906 00db 00       		.align	2
 907              	.LC104:
 908 00dc 204F4646 		.ascii	" OFF\000\000"
 908      0000
 909 00e2 0000     		.align	2
 910              	.LC105:
 911 00e4 204F4E00 		.ascii	" ON\000\000"
 911      00
 912 00e9 000000   		.align	2
 913              	.LC106:
 914 00ec 204E6F6E 		.ascii	" None\000\000"
 914      650000
 915 00f3 00       		.align	2
 916              	.LC107:
 917 00f4 2053442F 		.ascii	" SD/RTC board\000\000"
 917      52544320 
 917      626F6172 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 38


 917      640000
 918 0103 00       		.align	2
 919              	.LC108:
 920 0104 20576946 		.ascii	" WiFi board [N/A]\000\000"
 920      6920626F 
 920      61726420 
 920      5B4E2F41 
 920      5D0000
 921 0117 00       		.align	2
 922              	.LC109:
 923 0118 204F7468 		.ascii	" Other [N/A]\000\000"
 923      6572205B 
 923      4E2F415D 
 923      0000
 924 0126 0000     		.align	2
 925              	.LC110:
 926 0128 204C6F77 		.ascii	" Low\000\000"
 926      0000
 927 012e 0000     		.align	2
 928              	.LC111:
 929 0130 20486967 		.ascii	" High\000\000"
 929      680000
 930 0137 00       		.align	2
 931              	.LC112:
 932 0138 2047454E 		.ascii	" GENERIC USER\000\000"
 932      45524943 
 932      20555345 
 932      520000
 933 0147 00       		.align	2
 934              	.LC113:
 935 0148 204D4152 		.ascii	" MARIA\000\000"
 935      49410000 
 936              		.align	2
 937              	.LC114:
 938 0150 20524F5A 		.ascii	" ROZA\000\000"
 938      410000
 939 0157 00       		.align	2
 940              	.LC115:
 941 0158 204D4333 		.ascii	" MC33887 (Standard)\000\000"
 941      33383837 
 941      20285374 
 941      616E6461 
 941      72642900 
 942 016d 000000   		.align	2
 943              	.LC116:
 944 0170 20564E48 		.ascii	" VNH5019 (High power)\000\000"
 944      35303139 
 944      20284869 
 944      67682070 
 944      6F776572 
 945 0187 00       		.align	2
 946              	.LC117:
 947 0188 20534F46 		.ascii	" SOFTHAND PRO\000\000"
 947      5448414E 
 947      44205052 
 947      4F0000
 948 0197 00       		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 39


 949              	.LC118:
 950 0198 2047454E 		.ascii	" GENERIC 2 MOTORS\000\000"
 950      45524943 
 950      2032204D 
 950      4F544F52 
 950      530000
 951 01ab 00       		.align	2
 952              	.LC119:
 953 01ac 20414952 		.ascii	" AIR CHAMBERS\000\000"
 953      20434841 
 953      4D424552 
 953      530000
 954 01bb 00       		.align	2
 955              	.LC120:
 956 01bc 204F5454 		.ascii	" OTTOBOCK WRIST\000\000"
 956      4F424F43 
 956      4B205752 
 956      49535400 
 956      00
 957 01cd 000000   		.align	2
 958              	.LC121:
 959 01d0 20534F46 		.ascii	" SOFTHAND 2 MOTORS\000\000"
 959      5448414E 
 959      44203220 
 959      4D4F544F 
 959      52530000 
 960              		.align	2
 961              	.LC122:
 962 01e4 20466173 		.ascii	" Fast:syn2, Slow:syn1\000\000"
 962      743A7379 
 962      6E322C20 
 962      536C6F77 
 962      3A73796E 
 963 01fb 00       		.align	2
 964              	.LC123:
 965 01fc 20466173 		.ascii	" Fast:wrist,Slow:hand\000\000"
 965      743A7772 
 965      6973742C 
 965      536C6F77 
 965      3A68616E 
 966 0213 00       		.align	2
 967              	.LC124:
 968 0214 20536C6F 		.ascii	" Slow:syn2, Fast:syn1\000\000"
 968      773A7379 
 968      6E322C20 
 968      46617374 
 968      3A73796E 
 969 022b 00       		.align	2
 970              	.LC125:
 971 022c 20536C6F 		.ascii	" Slow:wrist,Fast:hand\000\000"
 971      773A7772 
 971      6973742C 
 971      46617374 
 971      3A68616E 
 972 0243 00       		.align	2
 973              	.LC126:
 974 0244 20436C6F 		.ascii	" Close:CW, Open:CCW\000\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 40


 974      73653A43 
 974      572C204F 
 974      70656E3A 
 974      43435700 
 975 0259 000000   		.align	2
 976              	.LC127:
 977 025c 20436C6F 		.ascii	" Close:CCW, Open:CW\000\000"
 977      73653A43 
 977      43572C20 
 977      4F70656E 
 977      3A435700 
 978              		.section	.text.get_param_list,"ax",%progbits
 979              		.align	2
 980              		.global	get_param_list
 981              		.thumb
 982              		.thumb_func
 983              		.type	get_param_list, %function
 984              	get_param_list:
 985              	.LFB67:
 355:..\src/command_processing.c **** 
 356:..\src/command_processing.c **** 
 357:..\src/command_processing.c **** //==============================================================================
 358:..\src/command_processing.c **** //                                                                GET PARAM LIST
 359:..\src/command_processing.c **** //==============================================================================
 360:..\src/command_processing.c **** 
 361:..\src/command_processing.c **** void get_param_list (uint8* VAR_P[NUM_OF_PARAMS], uint8 TYPES[NUM_OF_PARAMS], 
 362:..\src/command_processing.c ****                      uint8 NUM_ITEMS[NUM_OF_PARAMS], uint8 NUM_STRUCT[NUM_OF_PARAMS],
 363:..\src/command_processing.c ****                      uint8* NUM_MENU, const char* PARAMS_STR[NUM_OF_PARAMS], 
 364:..\src/command_processing.c ****                      uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS], const char* MENU_STR[NUM_OF_PARAMS_MENU
 986              		.loc 1 364 0
 987              		.cfi_startproc
 988              		@ args = 16, pretend = 0, frame = 5656
 989              		@ frame_needed = 1, uses_anonymous_args = 0
 990 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 991              		.cfi_def_cfa_offset 20
 992              		.cfi_offset 4, -20
 993              		.cfi_offset 5, -16
 994              		.cfi_offset 6, -12
 995              		.cfi_offset 7, -8
 996              		.cfi_offset 14, -4
 997 0002 ADF5B05D 		sub	sp, sp, #5632
 998              		.cfi_def_cfa_offset 5652
 999 0006 87B0     		sub	sp, sp, #28
 1000              		.cfi_def_cfa_offset 5680
 1001 0008 00AF     		add	r7, sp, #0
 1002              		.cfi_def_cfa_register 7
 1003 000a 07F11804 		add	r4, r7, #24
 1004 000e 0C3C     		subs	r4, r4, #12
 1005 0010 2060     		str	r0, [r4]
 1006 0012 07F11800 		add	r0, r7, #24
 1007 0016 1038     		subs	r0, r0, #16
 1008 0018 0160     		str	r1, [r0]
 1009 001a 07F11801 		add	r1, r7, #24
 1010 001e 1439     		subs	r1, r1, #20
 1011 0020 0A60     		str	r2, [r1]
 1012 0022 07F11802 		add	r2, r7, #24
 1013 0026 183A     		subs	r2, r2, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 41


 1014 0028 1360     		str	r3, [r2]
 365:..\src/command_processing.c ****     
 366:..\src/command_processing.c ****     //Package to be sent variables
 367:..\src/command_processing.c ****     uint8 packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MENUS + 
 1015              		.loc 1 367 0
 1016 002a 07F15803 		add	r3, r7, #88
 1017 002e 043B     		subs	r3, r3, #4
 1018 0030 0022     		movs	r2, #0
 1019 0032 1A60     		str	r2, [r3]
 1020 0034 0433     		adds	r3, r3, #4
 1021 0036 41F2AA52 		movw	r2, #5546
 1022 003a 0021     		movs	r1, #0
 1023 003c 1846     		mov	r0, r3
 1024 003e FFF7FEFF 		bl	memset
 368:..\src/command_processing.c ****     uint16 packet_lenght = PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MEN
 1025              		.loc 1 368 0
 1026 0042 41F2AE53 		movw	r3, #5550
 1027 0046 07F5B052 		add	r2, r7, #5632
 1028 004a 02F11002 		add	r2, r2, #16
 1029 004e 1380     		strh	r3, [r2]	@ movhi
 369:..\src/command_processing.c **** 
 370:..\src/command_processing.c ****     //Auxiliary variables
 371:..\src/command_processing.c ****     uint8 CYDATA i, j;
 372:..\src/command_processing.c ****     uint8 CYDATA idx = 0;       //Parameter number
 1030              		.loc 1 372 0
 1031 0050 0023     		movs	r3, #0
 1032 0052 07F5B052 		add	r2, r7, #5632
 1033 0056 02F11502 		add	r2, r2, #21
 1034 005a 1370     		strb	r3, [r2]
 373:..\src/command_processing.c ****     uint8 CYDATA idx_menu = 0;
 1035              		.loc 1 373 0
 1036 005c 0023     		movs	r3, #0
 1037 005e 07F5B052 		add	r2, r7, #5632
 1038 0062 02F11402 		add	r2, r2, #20
 1039 0066 1370     		strb	r3, [r2]
 374:..\src/command_processing.c ****     uint8 CYDATA sod = 0;       //sizeof data
 1040              		.loc 1 374 0
 1041 0068 0023     		movs	r3, #0
 1042 006a 07F5B052 		add	r2, r7, #5632
 1043 006e 02F11302 		add	r2, r2, #19
 1044 0072 1370     		strb	r3, [r2]
 375:..\src/command_processing.c ****     uint8 CYDATA string_lenght;
 376:..\src/command_processing.c ****     char CYDATA aux_str[50] = "";
 1045              		.loc 1 376 0
 1046 0074 07F13803 		add	r3, r7, #56
 1047 0078 183B     		subs	r3, r3, #24
 1048 007a 0022     		movs	r2, #0
 1049 007c 1A60     		str	r2, [r3]
 1050 007e 0433     		adds	r3, r3, #4
 1051 0080 2E22     		movs	r2, #46
 1052 0082 0021     		movs	r1, #0
 1053 0084 1846     		mov	r0, r3
 1054 0086 FFF7FEFF 		bl	memset
 377:..\src/command_processing.c ****     float aux_float;
 378:..\src/command_processing.c ****     int16 aux_int16;
 379:..\src/command_processing.c ****     uint16 aux_uint16;
 380:..\src/command_processing.c ****     int32 aux_int32;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 42


 381:..\src/command_processing.c ****     uint32 aux_uint32;
 382:..\src/command_processing.c **** 
 383:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 1055              		.loc 1 383 0
 1056 008a 0023     		movs	r3, #0
 1057 008c 07F5B052 		add	r2, r7, #5632
 1058 0090 02F10F02 		add	r2, r2, #15
 1059 0094 1370     		strb	r3, [r2]
 384:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 1060              		.loc 1 384 0
 1061 0096 0123     		movs	r3, #1
 1062 0098 07F5B052 		add	r2, r7, #5632
 1063 009c 02F10E02 		add	r2, r2, #14
 1064 00a0 1370     		strb	r3, [r2]
 385:..\src/command_processing.c ****   
 386:..\src/command_processing.c ****     uint8* m_addr = (uint8*)VAR_P[0];
 1065              		.loc 1 386 0
 1066 00a2 07F11803 		add	r3, r7, #24
 1067 00a6 0C3B     		subs	r3, r3, #12
 1068 00a8 1B68     		ldr	r3, [r3]
 1069 00aa 1B68     		ldr	r3, [r3]
 1070 00ac 07F5B052 		add	r2, r7, #5632
 1071 00b0 02F10802 		add	r2, r2, #8
 1072 00b4 1360     		str	r3, [r2]
 387:..\src/command_processing.c ****     uint8* m_tmp = m_addr;
 1073              		.loc 1 387 0
 1074 00b6 07F5B053 		add	r3, r7, #5632
 1075 00ba 03F10803 		add	r3, r3, #8
 1076 00be 1B68     		ldr	r3, [r3]
 1077 00c0 07F5B052 		add	r2, r7, #5632
 1078 00c4 02F10402 		add	r2, r2, #4
 1079 00c8 1360     		str	r3, [r2]
 388:..\src/command_processing.c ****         
 389:..\src/command_processing.c ****     packet_data[0] = CMD_GET_PARAM_LIST;
 1080              		.loc 1 389 0
 1081 00ca 07F15803 		add	r3, r7, #88
 1082 00ce 043B     		subs	r3, r3, #4
 1083 00d0 0C22     		movs	r2, #12
 1084 00d2 1A70     		strb	r2, [r3]
 390:..\src/command_processing.c ****     packet_data[1] = NUM_OF_DEV_PARAMS;
 1085              		.loc 1 390 0
 1086 00d4 07F15803 		add	r3, r7, #88
 1087 00d8 043B     		subs	r3, r3, #4
 1088 00da 4D22     		movs	r2, #77
 1089 00dc 5A70     		strb	r2, [r3, #1]
 391:..\src/command_processing.c ****     
 392:..\src/command_processing.c ****     for (idx = 0; idx < NUM_OF_DEV_PARAMS; idx++) {
 1090              		.loc 1 392 0
 1091 00de 0023     		movs	r3, #0
 1092 00e0 07F5B052 		add	r2, r7, #5632
 1093 00e4 02F11502 		add	r2, r2, #21
 1094 00e8 1370     		strb	r3, [r2]
 1095 00ea 03F008B8 		b	.L70
 1096              	.L274:
 393:..\src/command_processing.c ****         
 394:..\src/command_processing.c ****         // Assign m_addr memory address
 395:..\src/command_processing.c ****         m_addr = (uint8*)VAR_P[idx];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 43


 1097              		.loc 1 395 0
 1098 00ee 07F5B053 		add	r3, r7, #5632
 1099 00f2 03F11503 		add	r3, r3, #21
 1100 00f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1101 00f8 9A00     		lsls	r2, r3, #2
 1102 00fa 07F11803 		add	r3, r7, #24
 1103 00fe 0C3B     		subs	r3, r3, #12
 1104 0100 1B68     		ldr	r3, [r3]
 1105 0102 1344     		add	r3, r3, r2
 1106 0104 1B68     		ldr	r3, [r3]
 1107 0106 07F5B052 		add	r2, r7, #5632
 1108 010a 02F10802 		add	r2, r2, #8
 1109 010e 1360     		str	r3, [r2]
 396:..\src/command_processing.c ****         
 397:..\src/command_processing.c ****         // Add parameter type and size to packet
 398:..\src/command_processing.c ****         packet_data[2 + PARAM_BYTE_SLOT*idx] = TYPES[idx];
 1110              		.loc 1 398 0
 1111 0110 07F5B053 		add	r3, r7, #5632
 1112 0114 03F11503 		add	r3, r3, #21
 1113 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1114 011a 3222     		movs	r2, #50
 1115 011c 02FB03F3 		mul	r3, r2, r3
 1116 0120 9A1C     		adds	r2, r3, #2
 1117 0122 07F5B053 		add	r3, r7, #5632
 1118 0126 03F11503 		add	r3, r3, #21
 1119 012a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1120 012c 07F11803 		add	r3, r7, #24
 1121 0130 103B     		subs	r3, r3, #16
 1122 0132 1B68     		ldr	r3, [r3]
 1123 0134 0B44     		add	r3, r3, r1
 1124 0136 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1125 0138 07F15803 		add	r3, r7, #88
 1126 013c 043B     		subs	r3, r3, #4
 1127 013e 9954     		strb	r1, [r3, r2]
 399:..\src/command_processing.c ****         packet_data[3 + PARAM_BYTE_SLOT*idx] = NUM_ITEMS[idx];
 1128              		.loc 1 399 0
 1129 0140 07F5B053 		add	r3, r7, #5632
 1130 0144 03F11503 		add	r3, r3, #21
 1131 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1132 014a 3222     		movs	r2, #50
 1133 014c 02FB03F3 		mul	r3, r2, r3
 1134 0150 DA1C     		adds	r2, r3, #3
 1135 0152 07F5B053 		add	r3, r7, #5632
 1136 0156 03F11503 		add	r3, r3, #21
 1137 015a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1138 015c 07F11803 		add	r3, r7, #24
 1139 0160 143B     		subs	r3, r3, #20
 1140 0162 1B68     		ldr	r3, [r3]
 1141 0164 0B44     		add	r3, r3, r1
 1142 0166 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1143 0168 07F15803 		add	r3, r7, #88
 1144 016c 043B     		subs	r3, r3, #4
 1145 016e 9954     		strb	r1, [r3, r2]
 400:..\src/command_processing.c ****         
 401:..\src/command_processing.c ****         // Find size of data
 402:..\src/command_processing.c ****         switch (TYPES[idx]) {
 1146              		.loc 1 402 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 44


 1147 0170 07F5B053 		add	r3, r7, #5632
 1148 0174 03F11503 		add	r3, r3, #21
 1149 0178 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1150 017a 07F11803 		add	r3, r7, #24
 1151 017e 103B     		subs	r3, r3, #16
 1152 0180 1B68     		ldr	r3, [r3]
 1153 0182 1344     		add	r3, r3, r2
 1154 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1155 0186 092B     		cmp	r3, #9
 1156 0188 2BD8     		bhi	.L71
 1157 018a 01A2     		adr	r2, .L73
 1158 018c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1159              		.p2align 2
 1160              	.L73:
 1161 0190 B9010000 		.word	.L72+1
 1162 0194 B9010000 		.word	.L72+1
 1163 0198 B9010000 		.word	.L72+1
 1164 019c C7010000 		.word	.L74+1
 1165 01a0 C7010000 		.word	.L74+1
 1166 01a4 D5010000 		.word	.L75+1
 1167 01a8 D5010000 		.word	.L75+1
 1168 01ac D5010000 		.word	.L75+1
 1169 01b0 E3010000 		.word	.L71+1
 1170 01b4 B9010000 		.word	.L72+1
 1171              		.p2align 1
 1172              	.L72:
 403:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 404:..\src/command_processing.c ****                 sod = 1; break;
 1173              		.loc 1 404 0
 1174 01b8 0123     		movs	r3, #1
 1175 01ba 07F5B052 		add	r2, r7, #5632
 1176 01be 02F11302 		add	r2, r2, #19
 1177 01c2 1370     		strb	r3, [r2]
 1178 01c4 0DE0     		b	.L71
 1179              	.L74:
 405:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 406:..\src/command_processing.c ****                 sod = 2; break;
 1180              		.loc 1 406 0
 1181 01c6 0223     		movs	r3, #2
 1182 01c8 07F5B052 		add	r2, r7, #5632
 1183 01cc 02F11302 		add	r2, r2, #19
 1184 01d0 1370     		strb	r3, [r2]
 1185 01d2 06E0     		b	.L71
 1186              	.L75:
 407:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 408:..\src/command_processing.c ****                 sod = 4; break;
 1187              		.loc 1 408 0
 1188 01d4 0423     		movs	r3, #4
 1189 01d6 07F5B052 		add	r2, r7, #5632
 1190 01da 02F11302 		add	r2, r2, #19
 1191 01de 1370     		strb	r3, [r2]
 1192 01e0 00BF     		nop
 1193              	.L71:
 409:..\src/command_processing.c ****         }
 410:..\src/command_processing.c ****             
 411:..\src/command_processing.c ****         if (!CUSTOM_PARAM_GET[idx]) {       // Default param get
 1194              		.loc 1 411 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 45


 1195 01e2 07F5B053 		add	r3, r7, #5632
 1196 01e6 03F11503 		add	r3, r3, #21
 1197 01ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1198 01ec 07F5B152 		add	r2, r7, #5664
 1199 01f0 02F11802 		add	r2, r2, #24
 1200 01f4 1268     		ldr	r2, [r2]
 1201 01f6 1344     		add	r3, r3, r2
 1202 01f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1203 01fa 002B     		cmp	r3, #0
 1204 01fc 40F0DA83 		bne	.L76
 412:..\src/command_processing.c ****             
 413:..\src/command_processing.c ****             // Add parameter data to packet
 414:..\src/command_processing.c ****             switch (TYPES[idx]) {
 1205              		.loc 1 414 0
 1206 0200 07F5B053 		add	r3, r7, #5632
 1207 0204 03F11503 		add	r3, r3, #21
 1208 0208 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1209 020a 07F11803 		add	r3, r7, #24
 1210 020e 103B     		subs	r3, r3, #16
 1211 0210 1B68     		ldr	r3, [r3]
 1212 0212 1344     		add	r3, r3, r2
 1213 0214 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1214 0216 092B     		cmp	r3, #9
 1215 0218 02F25781 		bhi	.L110
 1216 021c 01A2     		adr	r2, .L79
 1217 021e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1218 0222 00BF     		.p2align 2
 1219              	.L79:
 1220 0224 4D020000 		.word	.L78+1
 1221 0228 09030000 		.word	.L80+1
 1222 022c 4D020000 		.word	.L78+1
 1223 0230 C5030000 		.word	.L81+1
 1224 0234 F7040000 		.word	.L82+1
 1225 0238 23060000 		.word	.L83+1
 1226 023c 53070000 		.word	.L84+1
 1227 0240 83080000 		.word	.L85+1
 1228 0244 CB240000 		.word	.L110+1
 1229 0248 4D020000 		.word	.L78+1
 1230              		.p2align 1
 1231              	.L78:
 415:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8: case TYPE_STRING:
 416:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1232              		.loc 1 416 0
 1233 024c 0023     		movs	r3, #0
 1234 024e 07F5B052 		add	r2, r7, #5632
 1235 0252 02F11702 		add	r2, r2, #23
 1236 0256 1370     		strb	r3, [r2]
 1237 0258 42E0     		b	.L86
 1238              	.L87:
 417:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1239              		.loc 1 417 0 discriminator 3
 1240 025a 07F5B053 		add	r3, r7, #5632
 1241 025e 03F11703 		add	r3, r3, #23
 1242 0262 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1243 0264 07F5B052 		add	r2, r7, #5632
 1244 0268 02F11302 		add	r2, r2, #19
 1245 026c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 46


 1246 026e 02FB03F3 		mul	r3, r2, r3
 1247 0272 1A46     		mov	r2, r3
 1248 0274 07F5B053 		add	r3, r7, #5632
 1249 0278 03F10803 		add	r3, r3, #8
 1250 027c 1B68     		ldr	r3, [r3]
 1251 027e 1344     		add	r3, r3, r2
 1252 0280 07F5B052 		add	r2, r7, #5632
 1253 0284 02F10402 		add	r2, r2, #4
 1254 0288 1360     		str	r3, [r2]
 418:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1255              		.loc 1 418 0 discriminator 3
 1256 028a 07F5B053 		add	r3, r7, #5632
 1257 028e 03F11503 		add	r3, r3, #21
 1258 0292 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1259 0294 3222     		movs	r2, #50
 1260 0296 02FB03F3 		mul	r3, r2, r3
 1261 029a 1A1D     		adds	r2, r3, #4
 1262 029c 07F5B053 		add	r3, r7, #5632
 1263 02a0 03F11703 		add	r3, r3, #23
 1264 02a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1265 02a6 07F5B051 		add	r1, r7, #5632
 1266 02aa 01F11301 		add	r1, r1, #19
 1267 02ae 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1268 02b0 01FB03F3 		mul	r3, r1, r3
 1269 02b4 1A44     		add	r2, r2, r3
 1270 02b6 07F5B053 		add	r3, r7, #5632
 1271 02ba 03F10403 		add	r3, r3, #4
 1272 02be 1B68     		ldr	r3, [r3]
 1273 02c0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1274 02c2 07F15803 		add	r3, r7, #88
 1275 02c6 043B     		subs	r3, r3, #4
 1276 02c8 9954     		strb	r1, [r3, r2]
 416:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1277              		.loc 1 416 0 discriminator 3
 1278 02ca 07F5B053 		add	r3, r7, #5632
 1279 02ce 03F11703 		add	r3, r3, #23
 1280 02d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1281 02d4 0133     		adds	r3, r3, #1
 1282 02d6 07F5B052 		add	r2, r7, #5632
 1283 02da 02F11702 		add	r2, r2, #23
 1284 02de 1370     		strb	r3, [r2]
 1285              	.L86:
 416:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1286              		.loc 1 416 0 is_stmt 0 discriminator 1
 1287 02e0 07F5B053 		add	r3, r7, #5632
 1288 02e4 03F11503 		add	r3, r3, #21
 1289 02e8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1290 02ea 07F11803 		add	r3, r7, #24
 1291 02ee 143B     		subs	r3, r3, #20
 1292 02f0 1B68     		ldr	r3, [r3]
 1293 02f2 1344     		add	r3, r3, r2
 1294 02f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1295 02f6 07F5B052 		add	r2, r7, #5632
 1296 02fa 02F11702 		add	r2, r2, #23
 1297 02fe 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1298 0300 9A42     		cmp	r2, r3
 1299 0302 AAD3     		bcc	.L87
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 47


 419:..\src/command_processing.c ****                     }
 420:..\src/command_processing.c ****                     break;                
 1300              		.loc 1 420 0 is_stmt 1
 1301 0304 02F0E1B8 		b	.L110
 1302              	.L80:
 421:..\src/command_processing.c ****                 case TYPE_INT8:
 422:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1303              		.loc 1 422 0
 1304 0308 0023     		movs	r3, #0
 1305 030a 07F5B052 		add	r2, r7, #5632
 1306 030e 02F11702 		add	r2, r2, #23
 1307 0312 1370     		strb	r3, [r2]
 1308 0314 42E0     		b	.L88
 1309              	.L89:
 423:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1310              		.loc 1 423 0 discriminator 3
 1311 0316 07F5B053 		add	r3, r7, #5632
 1312 031a 03F11703 		add	r3, r3, #23
 1313 031e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1314 0320 07F5B052 		add	r2, r7, #5632
 1315 0324 02F11302 		add	r2, r2, #19
 1316 0328 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1317 032a 02FB03F3 		mul	r3, r2, r3
 1318 032e 1A46     		mov	r2, r3
 1319 0330 07F5B053 		add	r3, r7, #5632
 1320 0334 03F10803 		add	r3, r3, #8
 1321 0338 1B68     		ldr	r3, [r3]
 1322 033a 1344     		add	r3, r3, r2
 1323 033c 07F5B052 		add	r2, r7, #5632
 1324 0340 02F10402 		add	r2, r2, #4
 1325 0344 1360     		str	r3, [r2]
 424:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1326              		.loc 1 424 0 discriminator 3
 1327 0346 07F5B053 		add	r3, r7, #5632
 1328 034a 03F11503 		add	r3, r3, #21
 1329 034e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1330 0350 3222     		movs	r2, #50
 1331 0352 02FB03F3 		mul	r3, r2, r3
 1332 0356 1A1D     		adds	r2, r3, #4
 1333 0358 07F5B053 		add	r3, r7, #5632
 1334 035c 03F11703 		add	r3, r3, #23
 1335 0360 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1336 0362 07F5B051 		add	r1, r7, #5632
 1337 0366 01F11301 		add	r1, r1, #19
 1338 036a 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1339 036c 01FB03F3 		mul	r3, r1, r3
 1340 0370 1A44     		add	r2, r2, r3
 1341 0372 07F5B053 		add	r3, r7, #5632
 1342 0376 03F10403 		add	r3, r3, #4
 1343 037a 1B68     		ldr	r3, [r3]
 1344 037c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1345 037e 07F15803 		add	r3, r7, #88
 1346 0382 043B     		subs	r3, r3, #4
 1347 0384 9954     		strb	r1, [r3, r2]
 422:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1348              		.loc 1 422 0 discriminator 3
 1349 0386 07F5B053 		add	r3, r7, #5632
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 48


 1350 038a 03F11703 		add	r3, r3, #23
 1351 038e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1352 0390 0133     		adds	r3, r3, #1
 1353 0392 07F5B052 		add	r2, r7, #5632
 1354 0396 02F11702 		add	r2, r2, #23
 1355 039a 1370     		strb	r3, [r2]
 1356              	.L88:
 422:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1357              		.loc 1 422 0 is_stmt 0 discriminator 1
 1358 039c 07F5B053 		add	r3, r7, #5632
 1359 03a0 03F11503 		add	r3, r3, #21
 1360 03a4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1361 03a6 07F11803 		add	r3, r7, #24
 1362 03aa 143B     		subs	r3, r3, #20
 1363 03ac 1B68     		ldr	r3, [r3]
 1364 03ae 1344     		add	r3, r3, r2
 1365 03b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1366 03b2 07F5B052 		add	r2, r7, #5632
 1367 03b6 02F11702 		add	r2, r2, #23
 1368 03ba 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1369 03bc 9A42     		cmp	r2, r3
 1370 03be AAD3     		bcc	.L89
 425:..\src/command_processing.c ****                     }
 426:..\src/command_processing.c ****                     break;
 1371              		.loc 1 426 0 is_stmt 1
 1372 03c0 02F083B8 		b	.L110
 1373              	.L81:
 427:..\src/command_processing.c ****                 case TYPE_INT16:
 428:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1374              		.loc 1 428 0
 1375 03c4 0023     		movs	r3, #0
 1376 03c6 07F5B052 		add	r2, r7, #5632
 1377 03ca 02F11702 		add	r2, r2, #23
 1378 03ce 1370     		strb	r3, [r2]
 1379 03d0 7CE0     		b	.L90
 1380              	.L93:
 429:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1381              		.loc 1 429 0
 1382 03d2 07F5B053 		add	r3, r7, #5632
 1383 03d6 03F11703 		add	r3, r3, #23
 1384 03da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1385 03dc 07F5B052 		add	r2, r7, #5632
 1386 03e0 02F11302 		add	r2, r2, #19
 1387 03e4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1388 03e6 02FB03F3 		mul	r3, r2, r3
 1389 03ea 1A46     		mov	r2, r3
 1390 03ec 07F5B053 		add	r3, r7, #5632
 1391 03f0 03F10803 		add	r3, r3, #8
 1392 03f4 1B68     		ldr	r3, [r3]
 1393 03f6 1344     		add	r3, r3, r2
 1394 03f8 07F5B052 		add	r2, r7, #5632
 1395 03fc 02F10402 		add	r2, r2, #4
 1396 0400 1360     		str	r3, [r2]
 430:..\src/command_processing.c ****                         aux_int16 = *((int16*)m_tmp);
 1397              		.loc 1 430 0
 1398 0402 07F5B053 		add	r3, r7, #5632
 1399 0406 03F10403 		add	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 49


 1400 040a 1B68     		ldr	r3, [r3]
 1401 040c B3F90020 		ldrsh	r2, [r3]
 1402 0410 07F13803 		add	r3, r7, #56
 1403 0414 1E3B     		subs	r3, r3, #30
 1404 0416 1A80     		strh	r2, [r3]	@ movhi
 431:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1405              		.loc 1 431 0
 1406 0418 0023     		movs	r3, #0
 1407 041a 07F5B052 		add	r2, r7, #5632
 1408 041e 02F11602 		add	r2, r2, #22
 1409 0422 1370     		strb	r3, [r2]
 1410 0424 3BE0     		b	.L91
 1411              	.L92:
 432:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1412              		.loc 1 432 0 discriminator 3
 1413 0426 07F5B053 		add	r3, r7, #5632
 1414 042a 03F11503 		add	r3, r3, #21
 1415 042e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1416 0430 3222     		movs	r2, #50
 1417 0432 02FB03F3 		mul	r3, r2, r3
 1418 0436 1A1D     		adds	r2, r3, #4
 1419 0438 07F5B053 		add	r3, r7, #5632
 1420 043c 03F11703 		add	r3, r3, #23
 1421 0440 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1422 0442 07F5B051 		add	r1, r7, #5632
 1423 0446 01F11301 		add	r1, r1, #19
 1424 044a 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1425 044c 01FB03F3 		mul	r3, r1, r3
 1426 0450 1A44     		add	r2, r2, r3
 1427 0452 07F5B053 		add	r3, r7, #5632
 1428 0456 03F11303 		add	r3, r3, #19
 1429 045a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1430 045c 1A44     		add	r2, r2, r3
 1431 045e 07F5B053 		add	r3, r7, #5632
 1432 0462 03F11603 		add	r3, r3, #22
 1433 0466 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1434 0468 D31A     		subs	r3, r2, r3
 1435 046a 5A1E     		subs	r2, r3, #1
 1436 046c 07F5B053 		add	r3, r7, #5632
 1437 0470 03F11603 		add	r3, r3, #22
 1438 0474 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1439 0476 07F13803 		add	r3, r7, #56
 1440 047a 1E3B     		subs	r3, r3, #30
 1441 047c 0B44     		add	r3, r3, r1
 1442 047e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1443 0480 07F15803 		add	r3, r7, #88
 1444 0484 043B     		subs	r3, r3, #4
 1445 0486 9954     		strb	r1, [r3, r2]
 431:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1446              		.loc 1 431 0 discriminator 3
 1447 0488 07F5B053 		add	r3, r7, #5632
 1448 048c 03F11603 		add	r3, r3, #22
 1449 0490 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1450 0492 0133     		adds	r3, r3, #1
 1451 0494 07F5B052 		add	r2, r7, #5632
 1452 0498 02F11602 		add	r2, r2, #22
 1453 049c 1370     		strb	r3, [r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 50


 1454              	.L91:
 431:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1455              		.loc 1 431 0 is_stmt 0 discriminator 1
 1456 049e 07F5B053 		add	r3, r7, #5632
 1457 04a2 03F11603 		add	r3, r3, #22
 1458 04a6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1459 04a8 07F5B053 		add	r3, r7, #5632
 1460 04ac 03F11303 		add	r3, r3, #19
 1461 04b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1462 04b2 9A42     		cmp	r2, r3
 1463 04b4 B7D3     		bcc	.L92
 428:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1464              		.loc 1 428 0 is_stmt 1 discriminator 2
 1465 04b6 07F5B053 		add	r3, r7, #5632
 1466 04ba 03F11703 		add	r3, r3, #23
 1467 04be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1468 04c0 0133     		adds	r3, r3, #1
 1469 04c2 07F5B052 		add	r2, r7, #5632
 1470 04c6 02F11702 		add	r2, r2, #23
 1471 04ca 1370     		strb	r3, [r2]
 1472              	.L90:
 428:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1473              		.loc 1 428 0 is_stmt 0 discriminator 1
 1474 04cc 07F5B053 		add	r3, r7, #5632
 1475 04d0 03F11503 		add	r3, r3, #21
 1476 04d4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1477 04d6 07F11803 		add	r3, r7, #24
 1478 04da 143B     		subs	r3, r3, #20
 1479 04dc 1B68     		ldr	r3, [r3]
 1480 04de 1344     		add	r3, r3, r2
 1481 04e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1482 04e2 07F5B052 		add	r2, r7, #5632
 1483 04e6 02F11702 		add	r2, r2, #23
 1484 04ea 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1485 04ec 9A42     		cmp	r2, r3
 1486 04ee FFF470AF 		bcc	.L93
 433:..\src/command_processing.c ****                         }
 434:..\src/command_processing.c ****                     }
 435:..\src/command_processing.c ****                     break;
 1487              		.loc 1 435 0 is_stmt 1
 1488 04f2 01F0EABF 		b	.L110
 1489              	.L82:
 436:..\src/command_processing.c ****                 case TYPE_UINT16:
 437:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1490              		.loc 1 437 0
 1491 04f6 0023     		movs	r3, #0
 1492 04f8 07F5B052 		add	r2, r7, #5632
 1493 04fc 02F11702 		add	r2, r2, #23
 1494 0500 1370     		strb	r3, [r2]
 1495 0502 79E0     		b	.L94
 1496              	.L97:
 438:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1497              		.loc 1 438 0
 1498 0504 07F5B053 		add	r3, r7, #5632
 1499 0508 03F11703 		add	r3, r3, #23
 1500 050c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1501 050e 07F5B052 		add	r2, r7, #5632
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 51


 1502 0512 02F11302 		add	r2, r2, #19
 1503 0516 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1504 0518 02FB03F3 		mul	r3, r2, r3
 1505 051c 1A46     		mov	r2, r3
 1506 051e 07F5B053 		add	r3, r7, #5632
 1507 0522 03F10803 		add	r3, r3, #8
 1508 0526 1B68     		ldr	r3, [r3]
 1509 0528 1344     		add	r3, r3, r2
 1510 052a 07F5B052 		add	r2, r7, #5632
 1511 052e 02F10402 		add	r2, r2, #4
 1512 0532 1360     		str	r3, [r2]
 439:..\src/command_processing.c ****                         aux_uint16 = *((uint16*)m_tmp);
 1513              		.loc 1 439 0
 1514 0534 07F5B053 		add	r3, r7, #5632
 1515 0538 03F10403 		add	r3, r3, #4
 1516 053c 1B68     		ldr	r3, [r3]
 1517 053e 1A88     		ldrh	r2, [r3]
 1518 0540 07F11803 		add	r3, r7, #24
 1519 0544 1A80     		strh	r2, [r3]	@ movhi
 440:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1520              		.loc 1 440 0
 1521 0546 0023     		movs	r3, #0
 1522 0548 07F5B052 		add	r2, r7, #5632
 1523 054c 02F11602 		add	r2, r2, #22
 1524 0550 1370     		strb	r3, [r2]
 1525 0552 3AE0     		b	.L95
 1526              	.L96:
 441:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1527              		.loc 1 441 0 discriminator 3
 1528 0554 07F5B053 		add	r3, r7, #5632
 1529 0558 03F11503 		add	r3, r3, #21
 1530 055c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1531 055e 3222     		movs	r2, #50
 1532 0560 02FB03F3 		mul	r3, r2, r3
 1533 0564 1A1D     		adds	r2, r3, #4
 1534 0566 07F5B053 		add	r3, r7, #5632
 1535 056a 03F11703 		add	r3, r3, #23
 1536 056e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1537 0570 07F5B051 		add	r1, r7, #5632
 1538 0574 01F11301 		add	r1, r1, #19
 1539 0578 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1540 057a 01FB03F3 		mul	r3, r1, r3
 1541 057e 1A44     		add	r2, r2, r3
 1542 0580 07F5B053 		add	r3, r7, #5632
 1543 0584 03F11303 		add	r3, r3, #19
 1544 0588 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1545 058a 1A44     		add	r2, r2, r3
 1546 058c 07F5B053 		add	r3, r7, #5632
 1547 0590 03F11603 		add	r3, r3, #22
 1548 0594 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1549 0596 D31A     		subs	r3, r2, r3
 1550 0598 5A1E     		subs	r2, r3, #1
 1551 059a 07F5B053 		add	r3, r7, #5632
 1552 059e 03F11603 		add	r3, r3, #22
 1553 05a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1554 05a4 07F11801 		add	r1, r7, #24
 1555 05a8 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 52


 1556 05aa 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1557 05ac 07F15803 		add	r3, r7, #88
 1558 05b0 043B     		subs	r3, r3, #4
 1559 05b2 9954     		strb	r1, [r3, r2]
 440:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1560              		.loc 1 440 0 discriminator 3
 1561 05b4 07F5B053 		add	r3, r7, #5632
 1562 05b8 03F11603 		add	r3, r3, #22
 1563 05bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1564 05be 0133     		adds	r3, r3, #1
 1565 05c0 07F5B052 		add	r2, r7, #5632
 1566 05c4 02F11602 		add	r2, r2, #22
 1567 05c8 1370     		strb	r3, [r2]
 1568              	.L95:
 440:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1569              		.loc 1 440 0 is_stmt 0 discriminator 1
 1570 05ca 07F5B053 		add	r3, r7, #5632
 1571 05ce 03F11603 		add	r3, r3, #22
 1572 05d2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1573 05d4 07F5B053 		add	r3, r7, #5632
 1574 05d8 03F11303 		add	r3, r3, #19
 1575 05dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1576 05de 9A42     		cmp	r2, r3
 1577 05e0 B8D3     		bcc	.L96
 437:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1578              		.loc 1 437 0 is_stmt 1 discriminator 2
 1579 05e2 07F5B053 		add	r3, r7, #5632
 1580 05e6 03F11703 		add	r3, r3, #23
 1581 05ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1582 05ec 0133     		adds	r3, r3, #1
 1583 05ee 07F5B052 		add	r2, r7, #5632
 1584 05f2 02F11702 		add	r2, r2, #23
 1585 05f6 1370     		strb	r3, [r2]
 1586              	.L94:
 437:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1587              		.loc 1 437 0 is_stmt 0 discriminator 1
 1588 05f8 07F5B053 		add	r3, r7, #5632
 1589 05fc 03F11503 		add	r3, r3, #21
 1590 0600 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1591 0602 07F11803 		add	r3, r7, #24
 1592 0606 143B     		subs	r3, r3, #20
 1593 0608 1B68     		ldr	r3, [r3]
 1594 060a 1344     		add	r3, r3, r2
 1595 060c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1596 060e 07F5B052 		add	r2, r7, #5632
 1597 0612 02F11702 		add	r2, r2, #23
 1598 0616 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1599 0618 9A42     		cmp	r2, r3
 1600 061a FFF473AF 		bcc	.L97
 442:..\src/command_processing.c ****                         }
 443:..\src/command_processing.c ****                     }
 444:..\src/command_processing.c ****                     break;
 1601              		.loc 1 444 0 is_stmt 1
 1602 061e 01F054BF 		b	.L110
 1603              	.L83:
 445:..\src/command_processing.c ****                 case TYPE_INT32: 
 446:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 53


 1604              		.loc 1 446 0
 1605 0622 0023     		movs	r3, #0
 1606 0624 07F5B052 		add	r2, r7, #5632
 1607 0628 02F11702 		add	r2, r2, #23
 1608 062c 1370     		strb	r3, [r2]
 1609 062e 7BE0     		b	.L98
 1610              	.L101:
 447:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1611              		.loc 1 447 0
 1612 0630 07F5B053 		add	r3, r7, #5632
 1613 0634 03F11703 		add	r3, r3, #23
 1614 0638 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1615 063a 07F5B052 		add	r2, r7, #5632
 1616 063e 02F11302 		add	r2, r2, #19
 1617 0642 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1618 0644 02FB03F3 		mul	r3, r2, r3
 1619 0648 1A46     		mov	r2, r3
 1620 064a 07F5B053 		add	r3, r7, #5632
 1621 064e 03F10803 		add	r3, r3, #8
 1622 0652 1B68     		ldr	r3, [r3]
 1623 0654 1344     		add	r3, r3, r2
 1624 0656 07F5B052 		add	r2, r7, #5632
 1625 065a 02F10402 		add	r2, r2, #4
 1626 065e 1360     		str	r3, [r2]
 448:..\src/command_processing.c ****                         aux_int32 = *((int32*)m_tmp);
 1627              		.loc 1 448 0
 1628 0660 07F5B053 		add	r3, r7, #5632
 1629 0664 03F10403 		add	r3, r3, #4
 1630 0668 1B68     		ldr	r3, [r3]
 1631 066a 1A68     		ldr	r2, [r3]
 1632 066c 07F11803 		add	r3, r7, #24
 1633 0670 043B     		subs	r3, r3, #4
 1634 0672 1A60     		str	r2, [r3]
 449:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1635              		.loc 1 449 0
 1636 0674 0023     		movs	r3, #0
 1637 0676 07F5B052 		add	r2, r7, #5632
 1638 067a 02F11602 		add	r2, r2, #22
 1639 067e 1370     		strb	r3, [r2]
 1640 0680 3BE0     		b	.L99
 1641              	.L100:
 450:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1642              		.loc 1 450 0 discriminator 3
 1643 0682 07F5B053 		add	r3, r7, #5632
 1644 0686 03F11503 		add	r3, r3, #21
 1645 068a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1646 068c 3222     		movs	r2, #50
 1647 068e 02FB03F3 		mul	r3, r2, r3
 1648 0692 1A1D     		adds	r2, r3, #4
 1649 0694 07F5B053 		add	r3, r7, #5632
 1650 0698 03F11703 		add	r3, r3, #23
 1651 069c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1652 069e 07F5B051 		add	r1, r7, #5632
 1653 06a2 01F11301 		add	r1, r1, #19
 1654 06a6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1655 06a8 01FB03F3 		mul	r3, r1, r3
 1656 06ac 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 54


 1657 06ae 07F5B053 		add	r3, r7, #5632
 1658 06b2 03F11303 		add	r3, r3, #19
 1659 06b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1660 06b8 1A44     		add	r2, r2, r3
 1661 06ba 07F5B053 		add	r3, r7, #5632
 1662 06be 03F11603 		add	r3, r3, #22
 1663 06c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1664 06c4 D31A     		subs	r3, r2, r3
 1665 06c6 5A1E     		subs	r2, r3, #1
 1666 06c8 07F5B053 		add	r3, r7, #5632
 1667 06cc 03F11603 		add	r3, r3, #22
 1668 06d0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1669 06d2 07F11803 		add	r3, r7, #24
 1670 06d6 043B     		subs	r3, r3, #4
 1671 06d8 0B44     		add	r3, r3, r1
 1672 06da 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1673 06dc 07F15803 		add	r3, r7, #88
 1674 06e0 043B     		subs	r3, r3, #4
 1675 06e2 9954     		strb	r1, [r3, r2]
 449:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1676              		.loc 1 449 0 discriminator 3
 1677 06e4 07F5B053 		add	r3, r7, #5632
 1678 06e8 03F11603 		add	r3, r3, #22
 1679 06ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1680 06ee 0133     		adds	r3, r3, #1
 1681 06f0 07F5B052 		add	r2, r7, #5632
 1682 06f4 02F11602 		add	r2, r2, #22
 1683 06f8 1370     		strb	r3, [r2]
 1684              	.L99:
 449:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1685              		.loc 1 449 0 is_stmt 0 discriminator 1
 1686 06fa 07F5B053 		add	r3, r7, #5632
 1687 06fe 03F11603 		add	r3, r3, #22
 1688 0702 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1689 0704 07F5B053 		add	r3, r7, #5632
 1690 0708 03F11303 		add	r3, r3, #19
 1691 070c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1692 070e 9A42     		cmp	r2, r3
 1693 0710 B7D3     		bcc	.L100
 446:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1694              		.loc 1 446 0 is_stmt 1 discriminator 2
 1695 0712 07F5B053 		add	r3, r7, #5632
 1696 0716 03F11703 		add	r3, r3, #23
 1697 071a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1698 071c 0133     		adds	r3, r3, #1
 1699 071e 07F5B052 		add	r2, r7, #5632
 1700 0722 02F11702 		add	r2, r2, #23
 1701 0726 1370     		strb	r3, [r2]
 1702              	.L98:
 446:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1703              		.loc 1 446 0 is_stmt 0 discriminator 1
 1704 0728 07F5B053 		add	r3, r7, #5632
 1705 072c 03F11503 		add	r3, r3, #21
 1706 0730 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1707 0732 07F11803 		add	r3, r7, #24
 1708 0736 143B     		subs	r3, r3, #20
 1709 0738 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 55


 1710 073a 1344     		add	r3, r3, r2
 1711 073c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1712 073e 07F5B052 		add	r2, r7, #5632
 1713 0742 02F11702 		add	r2, r2, #23
 1714 0746 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1715 0748 9A42     		cmp	r2, r3
 1716 074a FFF471AF 		bcc	.L101
 451:..\src/command_processing.c ****                         }
 452:..\src/command_processing.c ****                     }
 453:..\src/command_processing.c ****                     break;
 1717              		.loc 1 453 0 is_stmt 1
 1718 074e 01F0BCBE 		b	.L110
 1719              	.L84:
 454:..\src/command_processing.c ****                 case TYPE_UINT32: 
 455:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1720              		.loc 1 455 0
 1721 0752 0023     		movs	r3, #0
 1722 0754 07F5B052 		add	r2, r7, #5632
 1723 0758 02F11702 		add	r2, r2, #23
 1724 075c 1370     		strb	r3, [r2]
 1725 075e 7BE0     		b	.L102
 1726              	.L105:
 456:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1727              		.loc 1 456 0
 1728 0760 07F5B053 		add	r3, r7, #5632
 1729 0764 03F11703 		add	r3, r3, #23
 1730 0768 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1731 076a 07F5B052 		add	r2, r7, #5632
 1732 076e 02F11302 		add	r2, r2, #19
 1733 0772 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1734 0774 02FB03F3 		mul	r3, r2, r3
 1735 0778 1A46     		mov	r2, r3
 1736 077a 07F5B053 		add	r3, r7, #5632
 1737 077e 03F10803 		add	r3, r3, #8
 1738 0782 1B68     		ldr	r3, [r3]
 1739 0784 1344     		add	r3, r3, r2
 1740 0786 07F5B052 		add	r2, r7, #5632
 1741 078a 02F10402 		add	r2, r2, #4
 1742 078e 1360     		str	r3, [r2]
 457:..\src/command_processing.c ****                         aux_uint32 = *((uint32*)m_tmp);
 1743              		.loc 1 457 0
 1744 0790 07F5B053 		add	r3, r7, #5632
 1745 0794 03F10403 		add	r3, r3, #4
 1746 0798 1B68     		ldr	r3, [r3]
 1747 079a 1A68     		ldr	r2, [r3]
 1748 079c 07F11803 		add	r3, r7, #24
 1749 07a0 083B     		subs	r3, r3, #8
 1750 07a2 1A60     		str	r2, [r3]
 458:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1751              		.loc 1 458 0
 1752 07a4 0023     		movs	r3, #0
 1753 07a6 07F5B052 		add	r2, r7, #5632
 1754 07aa 02F11602 		add	r2, r2, #22
 1755 07ae 1370     		strb	r3, [r2]
 1756 07b0 3BE0     		b	.L103
 1757              	.L104:
 459:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 56


 1758              		.loc 1 459 0 discriminator 3
 1759 07b2 07F5B053 		add	r3, r7, #5632
 1760 07b6 03F11503 		add	r3, r3, #21
 1761 07ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1762 07bc 3222     		movs	r2, #50
 1763 07be 02FB03F3 		mul	r3, r2, r3
 1764 07c2 1A1D     		adds	r2, r3, #4
 1765 07c4 07F5B053 		add	r3, r7, #5632
 1766 07c8 03F11703 		add	r3, r3, #23
 1767 07cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1768 07ce 07F5B051 		add	r1, r7, #5632
 1769 07d2 01F11301 		add	r1, r1, #19
 1770 07d6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1771 07d8 01FB03F3 		mul	r3, r1, r3
 1772 07dc 1A44     		add	r2, r2, r3
 1773 07de 07F5B053 		add	r3, r7, #5632
 1774 07e2 03F11303 		add	r3, r3, #19
 1775 07e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1776 07e8 1A44     		add	r2, r2, r3
 1777 07ea 07F5B053 		add	r3, r7, #5632
 1778 07ee 03F11603 		add	r3, r3, #22
 1779 07f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1780 07f4 D31A     		subs	r3, r2, r3
 1781 07f6 5A1E     		subs	r2, r3, #1
 1782 07f8 07F5B053 		add	r3, r7, #5632
 1783 07fc 03F11603 		add	r3, r3, #22
 1784 0800 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1785 0802 07F11803 		add	r3, r7, #24
 1786 0806 083B     		subs	r3, r3, #8
 1787 0808 0B44     		add	r3, r3, r1
 1788 080a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1789 080c 07F15803 		add	r3, r7, #88
 1790 0810 043B     		subs	r3, r3, #4
 1791 0812 9954     		strb	r1, [r3, r2]
 458:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1792              		.loc 1 458 0 discriminator 3
 1793 0814 07F5B053 		add	r3, r7, #5632
 1794 0818 03F11603 		add	r3, r3, #22
 1795 081c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1796 081e 0133     		adds	r3, r3, #1
 1797 0820 07F5B052 		add	r2, r7, #5632
 1798 0824 02F11602 		add	r2, r2, #22
 1799 0828 1370     		strb	r3, [r2]
 1800              	.L103:
 458:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1801              		.loc 1 458 0 is_stmt 0 discriminator 1
 1802 082a 07F5B053 		add	r3, r7, #5632
 1803 082e 03F11603 		add	r3, r3, #22
 1804 0832 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1805 0834 07F5B053 		add	r3, r7, #5632
 1806 0838 03F11303 		add	r3, r3, #19
 1807 083c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1808 083e 9A42     		cmp	r2, r3
 1809 0840 B7D3     		bcc	.L104
 455:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1810              		.loc 1 455 0 is_stmt 1 discriminator 2
 1811 0842 07F5B053 		add	r3, r7, #5632
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 57


 1812 0846 03F11703 		add	r3, r3, #23
 1813 084a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1814 084c 0133     		adds	r3, r3, #1
 1815 084e 07F5B052 		add	r2, r7, #5632
 1816 0852 02F11702 		add	r2, r2, #23
 1817 0856 1370     		strb	r3, [r2]
 1818              	.L102:
 455:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1819              		.loc 1 455 0 is_stmt 0 discriminator 1
 1820 0858 07F5B053 		add	r3, r7, #5632
 1821 085c 03F11503 		add	r3, r3, #21
 1822 0860 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1823 0862 07F11803 		add	r3, r7, #24
 1824 0866 143B     		subs	r3, r3, #20
 1825 0868 1B68     		ldr	r3, [r3]
 1826 086a 1344     		add	r3, r3, r2
 1827 086c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1828 086e 07F5B052 		add	r2, r7, #5632
 1829 0872 02F11702 		add	r2, r2, #23
 1830 0876 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1831 0878 9A42     		cmp	r2, r3
 1832 087a FFF471AF 		bcc	.L105
 460:..\src/command_processing.c ****                         }
 461:..\src/command_processing.c ****                     }
 462:..\src/command_processing.c ****                     break;
 1833              		.loc 1 462 0 is_stmt 1
 1834 087e 01F024BE 		b	.L110
 1835              	.L85:
 463:..\src/command_processing.c ****                     
 464:..\src/command_processing.c ****                 case TYPE_FLOAT:
 465:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1836              		.loc 1 465 0
 1837 0882 0023     		movs	r3, #0
 1838 0884 07F5B052 		add	r2, r7, #5632
 1839 0888 02F11702 		add	r2, r2, #23
 1840 088c 1370     		strb	r3, [r2]
 1841 088e 7BE0     		b	.L106
 1842              	.L109:
 466:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1843              		.loc 1 466 0
 1844 0890 07F5B053 		add	r3, r7, #5632
 1845 0894 03F11703 		add	r3, r3, #23
 1846 0898 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1847 089a 07F5B052 		add	r2, r7, #5632
 1848 089e 02F11302 		add	r2, r2, #19
 1849 08a2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1850 08a4 02FB03F3 		mul	r3, r2, r3
 1851 08a8 1A46     		mov	r2, r3
 1852 08aa 07F5B053 		add	r3, r7, #5632
 1853 08ae 03F10803 		add	r3, r3, #8
 1854 08b2 1B68     		ldr	r3, [r3]
 1855 08b4 1344     		add	r3, r3, r2
 1856 08b6 07F5B052 		add	r2, r7, #5632
 1857 08ba 02F10402 		add	r2, r2, #4
 1858 08be 1360     		str	r3, [r2]
 467:..\src/command_processing.c ****                         aux_float = *((float*)m_tmp);
 1859              		.loc 1 467 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 58


 1860 08c0 07F5B053 		add	r3, r7, #5632
 1861 08c4 03F10403 		add	r3, r3, #4
 1862 08c8 1B68     		ldr	r3, [r3]
 1863 08ca 1A68     		ldr	r2, [r3]	@ float
 1864 08cc 07F13803 		add	r3, r7, #56
 1865 08d0 1C3B     		subs	r3, r3, #28
 1866 08d2 1A60     		str	r2, [r3]	@ float
 468:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1867              		.loc 1 468 0
 1868 08d4 0023     		movs	r3, #0
 1869 08d6 07F5B052 		add	r2, r7, #5632
 1870 08da 02F11602 		add	r2, r2, #22
 1871 08de 1370     		strb	r3, [r2]
 1872 08e0 3BE0     		b	.L107
 1873              	.L108:
 469:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1874              		.loc 1 469 0 discriminator 3
 1875 08e2 07F5B053 		add	r3, r7, #5632
 1876 08e6 03F11503 		add	r3, r3, #21
 1877 08ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1878 08ec 3222     		movs	r2, #50
 1879 08ee 02FB03F3 		mul	r3, r2, r3
 1880 08f2 1A1D     		adds	r2, r3, #4
 1881 08f4 07F5B053 		add	r3, r7, #5632
 1882 08f8 03F11703 		add	r3, r3, #23
 1883 08fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1884 08fe 07F5B051 		add	r1, r7, #5632
 1885 0902 01F11301 		add	r1, r1, #19
 1886 0906 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1887 0908 01FB03F3 		mul	r3, r1, r3
 1888 090c 1A44     		add	r2, r2, r3
 1889 090e 07F5B053 		add	r3, r7, #5632
 1890 0912 03F11303 		add	r3, r3, #19
 1891 0916 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1892 0918 1A44     		add	r2, r2, r3
 1893 091a 07F5B053 		add	r3, r7, #5632
 1894 091e 03F11603 		add	r3, r3, #22
 1895 0922 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1896 0924 D31A     		subs	r3, r2, r3
 1897 0926 5A1E     		subs	r2, r3, #1
 1898 0928 07F5B053 		add	r3, r7, #5632
 1899 092c 03F11603 		add	r3, r3, #22
 1900 0930 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1901 0932 07F13803 		add	r3, r7, #56
 1902 0936 1C3B     		subs	r3, r3, #28
 1903 0938 0B44     		add	r3, r3, r1
 1904 093a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1905 093c 07F15803 		add	r3, r7, #88
 1906 0940 043B     		subs	r3, r3, #4
 1907 0942 9954     		strb	r1, [r3, r2]
 468:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1908              		.loc 1 468 0 discriminator 3
 1909 0944 07F5B053 		add	r3, r7, #5632
 1910 0948 03F11603 		add	r3, r3, #22
 1911 094c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1912 094e 0133     		adds	r3, r3, #1
 1913 0950 07F5B052 		add	r2, r7, #5632
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 59


 1914 0954 02F11602 		add	r2, r2, #22
 1915 0958 1370     		strb	r3, [r2]
 1916              	.L107:
 468:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1917              		.loc 1 468 0 is_stmt 0 discriminator 1
 1918 095a 07F5B053 		add	r3, r7, #5632
 1919 095e 03F11603 		add	r3, r3, #22
 1920 0962 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1921 0964 07F5B053 		add	r3, r7, #5632
 1922 0968 03F11303 		add	r3, r3, #19
 1923 096c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1924 096e 9A42     		cmp	r2, r3
 1925 0970 B7D3     		bcc	.L108
 465:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1926              		.loc 1 465 0 is_stmt 1 discriminator 2
 1927 0972 07F5B053 		add	r3, r7, #5632
 1928 0976 03F11703 		add	r3, r3, #23
 1929 097a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1930 097c 0133     		adds	r3, r3, #1
 1931 097e 07F5B052 		add	r2, r7, #5632
 1932 0982 02F11702 		add	r2, r2, #23
 1933 0986 1370     		strb	r3, [r2]
 1934              	.L106:
 465:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1935              		.loc 1 465 0 is_stmt 0 discriminator 1
 1936 0988 07F5B053 		add	r3, r7, #5632
 1937 098c 03F11503 		add	r3, r3, #21
 1938 0990 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1939 0992 07F11803 		add	r3, r7, #24
 1940 0996 143B     		subs	r3, r3, #20
 1941 0998 1B68     		ldr	r3, [r3]
 1942 099a 1344     		add	r3, r3, r2
 1943 099c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1944 099e 07F5B052 		add	r2, r7, #5632
 1945 09a2 02F11702 		add	r2, r2, #23
 1946 09a6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1947 09a8 9A42     		cmp	r2, r3
 1948 09aa FFF471AF 		bcc	.L109
 470:..\src/command_processing.c ****                         }
 471:..\src/command_processing.c ****                     }
 472:..\src/command_processing.c ****                     break;   
 1949              		.loc 1 472 0 is_stmt 1 discriminator 7
 1950 09ae 00BF     		nop
 1951 09b0 01F08BBD 		b	.L110
 1952              	.L76:
 473:..\src/command_processing.c ****             }
 474:..\src/command_processing.c ****         }
 475:..\src/command_processing.c ****         else {
 476:..\src/command_processing.c ****             
 477:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION BEFORE THIS LINE
 478:..\src/command_processing.c ****             
 479:..\src/command_processing.c **** // MODIFY CUSTOM PARAM            
 480:..\src/command_processing.c ****                 switch(idx+1){
 1953              		.loc 1 480 0
 1954 09b4 07F5B053 		add	r3, r7, #5632
 1955 09b8 03F11503 		add	r3, r3, #21
 1956 09bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 60


 1957 09be 0133     		adds	r3, r3, #1
 1958 09c0 023B     		subs	r3, r3, #2
 1959 09c2 332B     		cmp	r3, #51
 1960 09c4 01F28085 		bhi	.L279
 1961 09c8 01A2     		adr	r2, .L113
 1962 09ca 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1963 09ce 00BF     		.p2align 2
 1964              	.L113:
 1965 09d0 A10A0000 		.word	.L112+1
 1966 09d4 6D0F0000 		.word	.L114+1
 1967 09d8 C9240000 		.word	.L279+1
 1968 09dc C9240000 		.word	.L279+1
 1969 09e0 C9240000 		.word	.L279+1
 1970 09e4 C9240000 		.word	.L279+1
 1971 09e8 37140000 		.word	.L115+1
 1972 09ec C9240000 		.word	.L279+1
 1973 09f0 C9240000 		.word	.L279+1
 1974 09f4 AB150000 		.word	.L116+1
 1975 09f8 C9240000 		.word	.L279+1
 1976 09fc C9240000 		.word	.L279+1
 1977 0a00 C9240000 		.word	.L279+1
 1978 0a04 C9240000 		.word	.L279+1
 1979 0a08 C9240000 		.word	.L279+1
 1980 0a0c C9240000 		.word	.L279+1
 1981 0a10 C9240000 		.word	.L279+1
 1982 0a14 C9240000 		.word	.L279+1
 1983 0a18 C9240000 		.word	.L279+1
 1984 0a1c C9240000 		.word	.L279+1
 1985 0a20 C9240000 		.word	.L279+1
 1986 0a24 79170000 		.word	.L117+1
 1987 0a28 C9240000 		.word	.L279+1
 1988 0a2c C9240000 		.word	.L279+1
 1989 0a30 C9240000 		.word	.L279+1
 1990 0a34 C9240000 		.word	.L279+1
 1991 0a38 C9240000 		.word	.L279+1
 1992 0a3c C9240000 		.word	.L279+1
 1993 0a40 C9240000 		.word	.L279+1
 1994 0a44 C9240000 		.word	.L279+1
 1995 0a48 C9240000 		.word	.L279+1
 1996 0a4c C9240000 		.word	.L279+1
 1997 0a50 C9240000 		.word	.L279+1
 1998 0a54 C9240000 		.word	.L279+1
 1999 0a58 C9240000 		.word	.L279+1
 2000 0a5c C9240000 		.word	.L279+1
 2001 0a60 C9240000 		.word	.L279+1
 2002 0a64 C9240000 		.word	.L279+1
 2003 0a68 C9240000 		.word	.L279+1
 2004 0a6c C9240000 		.word	.L279+1
 2005 0a70 C9240000 		.word	.L279+1
 2006 0a74 C9240000 		.word	.L279+1
 2007 0a78 43180000 		.word	.L118+1
 2008 0a7c 111D0000 		.word	.L119+1
 2009 0a80 C9240000 		.word	.L279+1
 2010 0a84 C9240000 		.word	.L279+1
 2011 0a88 C9240000 		.word	.L279+1
 2012 0a8c C9240000 		.word	.L279+1
 2013 0a90 DB210000 		.word	.L120+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 61


 2014 0a94 C9240000 		.word	.L279+1
 2015 0a98 C9240000 		.word	.L279+1
 2016 0a9c FF220000 		.word	.L121+1
 2017              		.p2align 1
 2018              	.L112:
 481:..\src/command_processing.c ****                     case 2:         // Position PID
 482:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 2019              		.loc 1 482 0
 2020 0aa0 07F5B053 		add	r3, r7, #5632
 2021 0aa4 03F10F03 		add	r3, r3, #15
 2022 0aa8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2023 0aaa AC49     		ldr	r1, .L285
 2024 0aac 1346     		mov	r3, r2
 2025 0aae DB00     		lsls	r3, r3, #3
 2026 0ab0 9B1A     		subs	r3, r3, r2
 2027 0ab2 1B01     		lsls	r3, r3, #4
 2028 0ab4 0B44     		add	r3, r3, r1
 2029 0ab6 03F20F13 		addw	r3, r3, #271
 2030 0aba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2031 0abc 032B     		cmp	r3, #3
 2032 0abe 00F02981 		beq	.L122
 483:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p / 65536;
 2033              		.loc 1 483 0
 2034 0ac2 07F5B053 		add	r3, r7, #5632
 2035 0ac6 03F10F03 		add	r3, r3, #15
 2036 0aca 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2037 0acc A349     		ldr	r1, .L285
 2038 0ace 1346     		mov	r3, r2
 2039 0ad0 DB00     		lsls	r3, r3, #3
 2040 0ad2 9B1A     		subs	r3, r3, r2
 2041 0ad4 1B01     		lsls	r3, r3, #4
 2042 0ad6 0B44     		add	r3, r3, r1
 2043 0ad8 B033     		adds	r3, r3, #176
 2044 0ada 1B68     		ldr	r3, [r3]
 2045 0adc 1846     		mov	r0, r3
 2046 0ade FFF7FEFF 		bl	__aeabi_i2f
 2047 0ae2 0346     		mov	r3, r0
 2048 0ae4 4FF08F41 		mov	r1, #1199570944
 2049 0ae8 1846     		mov	r0, r3
 2050 0aea FFF7FEFF 		bl	__aeabi_fdiv
 2051 0aee 0346     		mov	r3, r0
 2052 0af0 1A46     		mov	r2, r3
 2053 0af2 07F13803 		add	r3, r7, #56
 2054 0af6 1C3B     		subs	r3, r3, #28
 2055 0af8 1A60     		str	r2, [r3]	@ float
 484:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2056              		.loc 1 484 0
 2057 0afa 0023     		movs	r3, #0
 2058 0afc 07F5B052 		add	r2, r7, #5632
 2059 0b00 02F11702 		add	r2, r2, #23
 2060 0b04 1370     		strb	r3, [r2]
 2061 0b06 2EE0     		b	.L123
 2062              	.L124:
 485:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2063              		.loc 1 485 0 discriminator 3
 2064 0b08 07F5B053 		add	r3, r7, #5632
 2065 0b0c 03F11503 		add	r3, r3, #21
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 62


 2066 0b10 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2067 0b12 3222     		movs	r2, #50
 2068 0b14 02FB03F3 		mul	r3, r2, r3
 2069 0b18 1A1D     		adds	r2, r3, #4
 2070 0b1a 07F5B053 		add	r3, r7, #5632
 2071 0b1e 03F11303 		add	r3, r3, #19
 2072 0b22 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2073 0b24 1A44     		add	r2, r2, r3
 2074 0b26 07F5B053 		add	r3, r7, #5632
 2075 0b2a 03F11703 		add	r3, r3, #23
 2076 0b2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2077 0b30 D31A     		subs	r3, r2, r3
 2078 0b32 5A1E     		subs	r2, r3, #1
 2079 0b34 07F5B053 		add	r3, r7, #5632
 2080 0b38 03F11703 		add	r3, r3, #23
 2081 0b3c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2082 0b3e 07F13803 		add	r3, r7, #56
 2083 0b42 1C3B     		subs	r3, r3, #28
 2084 0b44 0B44     		add	r3, r3, r1
 2085 0b46 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2086 0b48 07F15803 		add	r3, r7, #88
 2087 0b4c 043B     		subs	r3, r3, #4
 2088 0b4e 9954     		strb	r1, [r3, r2]
 484:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2089              		.loc 1 484 0 discriminator 3
 2090 0b50 07F5B053 		add	r3, r7, #5632
 2091 0b54 03F11703 		add	r3, r3, #23
 2092 0b58 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2093 0b5a 0133     		adds	r3, r3, #1
 2094 0b5c 07F5B052 		add	r2, r7, #5632
 2095 0b60 02F11702 		add	r2, r2, #23
 2096 0b64 1370     		strb	r3, [r2]
 2097              	.L123:
 484:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2098              		.loc 1 484 0 is_stmt 0 discriminator 1
 2099 0b66 07F5B053 		add	r3, r7, #5632
 2100 0b6a 03F11703 		add	r3, r3, #23
 2101 0b6e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2102 0b70 07F5B053 		add	r3, r7, #5632
 2103 0b74 03F11303 		add	r3, r3, #19
 2104 0b78 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2105 0b7a 9A42     		cmp	r2, r3
 2106 0b7c C4D3     		bcc	.L124
 486:..\src/command_processing.c ****                             }
 487:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i / 65536;
 2107              		.loc 1 487 0 is_stmt 1
 2108 0b7e 07F5B053 		add	r3, r7, #5632
 2109 0b82 03F10F03 		add	r3, r3, #15
 2110 0b86 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2111 0b88 7449     		ldr	r1, .L285
 2112 0b8a 1346     		mov	r3, r2
 2113 0b8c DB00     		lsls	r3, r3, #3
 2114 0b8e 9B1A     		subs	r3, r3, r2
 2115 0b90 1B01     		lsls	r3, r3, #4
 2116 0b92 0B44     		add	r3, r3, r1
 2117 0b94 B433     		adds	r3, r3, #180
 2118 0b96 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 63


 2119 0b98 1846     		mov	r0, r3
 2120 0b9a FFF7FEFF 		bl	__aeabi_i2f
 2121 0b9e 0346     		mov	r3, r0
 2122 0ba0 4FF08F41 		mov	r1, #1199570944
 2123 0ba4 1846     		mov	r0, r3
 2124 0ba6 FFF7FEFF 		bl	__aeabi_fdiv
 2125 0baa 0346     		mov	r3, r0
 2126 0bac 1A46     		mov	r2, r3
 2127 0bae 07F13803 		add	r3, r7, #56
 2128 0bb2 1C3B     		subs	r3, r3, #28
 2129 0bb4 1A60     		str	r2, [r3]	@ float
 488:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2130              		.loc 1 488 0
 2131 0bb6 0023     		movs	r3, #0
 2132 0bb8 07F5B052 		add	r2, r7, #5632
 2133 0bbc 02F11702 		add	r2, r2, #23
 2134 0bc0 1370     		strb	r3, [r2]
 2135 0bc2 34E0     		b	.L125
 2136              	.L126:
 489:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2137              		.loc 1 489 0 discriminator 3
 2138 0bc4 07F5B053 		add	r3, r7, #5632
 2139 0bc8 03F11503 		add	r3, r3, #21
 2140 0bcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2141 0bce 3222     		movs	r2, #50
 2142 0bd0 02FB03F3 		mul	r3, r2, r3
 2143 0bd4 1A1D     		adds	r2, r3, #4
 2144 0bd6 07F5B053 		add	r3, r7, #5632
 2145 0bda 03F11303 		add	r3, r3, #19
 2146 0bde 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2147 0be0 1A44     		add	r2, r2, r3
 2148 0be2 07F5B053 		add	r3, r7, #5632
 2149 0be6 03F11303 		add	r3, r3, #19
 2150 0bea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2151 0bec 1A44     		add	r2, r2, r3
 2152 0bee 07F5B053 		add	r3, r7, #5632
 2153 0bf2 03F11703 		add	r3, r3, #23
 2154 0bf6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2155 0bf8 D31A     		subs	r3, r2, r3
 2156 0bfa 5A1E     		subs	r2, r3, #1
 2157 0bfc 07F5B053 		add	r3, r7, #5632
 2158 0c00 03F11703 		add	r3, r3, #23
 2159 0c04 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2160 0c06 07F13803 		add	r3, r7, #56
 2161 0c0a 1C3B     		subs	r3, r3, #28
 2162 0c0c 0B44     		add	r3, r3, r1
 2163 0c0e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2164 0c10 07F15803 		add	r3, r7, #88
 2165 0c14 043B     		subs	r3, r3, #4
 2166 0c16 9954     		strb	r1, [r3, r2]
 488:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2167              		.loc 1 488 0 discriminator 3
 2168 0c18 07F5B053 		add	r3, r7, #5632
 2169 0c1c 03F11703 		add	r3, r3, #23
 2170 0c20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2171 0c22 0133     		adds	r3, r3, #1
 2172 0c24 07F5B052 		add	r2, r7, #5632
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 64


 2173 0c28 02F11702 		add	r2, r2, #23
 2174 0c2c 1370     		strb	r3, [r2]
 2175              	.L125:
 488:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2176              		.loc 1 488 0 is_stmt 0 discriminator 1
 2177 0c2e 07F5B053 		add	r3, r7, #5632
 2178 0c32 03F11703 		add	r3, r3, #23
 2179 0c36 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2180 0c38 07F5B053 		add	r3, r7, #5632
 2181 0c3c 03F11303 		add	r3, r3, #19
 2182 0c40 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2183 0c42 9A42     		cmp	r2, r3
 2184 0c44 BED3     		bcc	.L126
 490:..\src/command_processing.c ****                             }
 491:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d / 65536;
 2185              		.loc 1 491 0 is_stmt 1
 2186 0c46 07F5B053 		add	r3, r7, #5632
 2187 0c4a 03F10F03 		add	r3, r3, #15
 2188 0c4e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2189 0c50 4249     		ldr	r1, .L285
 2190 0c52 1346     		mov	r3, r2
 2191 0c54 DB00     		lsls	r3, r3, #3
 2192 0c56 9B1A     		subs	r3, r3, r2
 2193 0c58 1B01     		lsls	r3, r3, #4
 2194 0c5a 0B44     		add	r3, r3, r1
 2195 0c5c B833     		adds	r3, r3, #184
 2196 0c5e 1B68     		ldr	r3, [r3]
 2197 0c60 1846     		mov	r0, r3
 2198 0c62 FFF7FEFF 		bl	__aeabi_i2f
 2199 0c66 0346     		mov	r3, r0
 2200 0c68 4FF08F41 		mov	r1, #1199570944
 2201 0c6c 1846     		mov	r0, r3
 2202 0c6e FFF7FEFF 		bl	__aeabi_fdiv
 2203 0c72 0346     		mov	r3, r0
 2204 0c74 1A46     		mov	r2, r3
 2205 0c76 07F13803 		add	r3, r7, #56
 2206 0c7a 1C3B     		subs	r3, r3, #28
 2207 0c7c 1A60     		str	r2, [r3]	@ float
 492:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2208              		.loc 1 492 0
 2209 0c7e 0023     		movs	r3, #0
 2210 0c80 07F5B052 		add	r2, r7, #5632
 2211 0c84 02F11702 		add	r2, r2, #23
 2212 0c88 1370     		strb	r3, [r2]
 2213 0c8a 35E0     		b	.L127
 2214              	.L128:
 493:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2215              		.loc 1 493 0 discriminator 3
 2216 0c8c 07F5B053 		add	r3, r7, #5632
 2217 0c90 03F11503 		add	r3, r3, #21
 2218 0c94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2219 0c96 3222     		movs	r2, #50
 2220 0c98 02FB03F3 		mul	r3, r2, r3
 2221 0c9c 1A1D     		adds	r2, r3, #4
 2222 0c9e 07F5B053 		add	r3, r7, #5632
 2223 0ca2 03F11303 		add	r3, r3, #19
 2224 0ca6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 65


 2225 0ca8 5B00     		lsls	r3, r3, #1
 2226 0caa 1A44     		add	r2, r2, r3
 2227 0cac 07F5B053 		add	r3, r7, #5632
 2228 0cb0 03F11303 		add	r3, r3, #19
 2229 0cb4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2230 0cb6 1A44     		add	r2, r2, r3
 2231 0cb8 07F5B053 		add	r3, r7, #5632
 2232 0cbc 03F11703 		add	r3, r3, #23
 2233 0cc0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2234 0cc2 D31A     		subs	r3, r2, r3
 2235 0cc4 5A1E     		subs	r2, r3, #1
 2236 0cc6 07F5B053 		add	r3, r7, #5632
 2237 0cca 03F11703 		add	r3, r3, #23
 2238 0cce 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2239 0cd0 07F13803 		add	r3, r7, #56
 2240 0cd4 1C3B     		subs	r3, r3, #28
 2241 0cd6 0B44     		add	r3, r3, r1
 2242 0cd8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2243 0cda 07F15803 		add	r3, r7, #88
 2244 0cde 043B     		subs	r3, r3, #4
 2245 0ce0 9954     		strb	r1, [r3, r2]
 492:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2246              		.loc 1 492 0 discriminator 3
 2247 0ce2 07F5B053 		add	r3, r7, #5632
 2248 0ce6 03F11703 		add	r3, r3, #23
 2249 0cea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2250 0cec 0133     		adds	r3, r3, #1
 2251 0cee 07F5B052 		add	r2, r7, #5632
 2252 0cf2 02F11702 		add	r2, r2, #23
 2253 0cf6 1370     		strb	r3, [r2]
 2254              	.L127:
 492:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2255              		.loc 1 492 0 is_stmt 0 discriminator 1
 2256 0cf8 07F5B053 		add	r3, r7, #5632
 2257 0cfc 03F11703 		add	r3, r3, #23
 2258 0d00 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2259 0d02 07F5B053 		add	r3, r7, #5632
 2260 0d06 03F11303 		add	r3, r3, #19
 2261 0d0a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2262 0d0c 9A42     		cmp	r2, r3
 2263 0d0e BDD3     		bcc	.L128
 494:..\src/command_processing.c ****                             } 
 495:..\src/command_processing.c ****                         }
 496:..\src/command_processing.c ****                         else {
 497:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_dl / 65536;
 498:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 499:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 500:..\src/command_processing.c ****                             }
 501:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_dl / 65536;
 502:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 503:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 504:..\src/command_processing.c ****                             }
 505:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_dl / 65536;
 506:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 507:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 508:..\src/command_processing.c ****                             }
 509:..\src/command_processing.c ****                         }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 66


 510:..\src/command_processing.c ****                         break;
 2264              		.loc 1 510 0 is_stmt 1
 2265 0d10 01F0DBBB 		b	.L110
 2266              	.L122:
 497:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2267              		.loc 1 497 0
 2268 0d14 07F5B053 		add	r3, r7, #5632
 2269 0d18 03F10F03 		add	r3, r3, #15
 2270 0d1c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2271 0d1e 0F49     		ldr	r1, .L285
 2272 0d20 1346     		mov	r3, r2
 2273 0d22 DB00     		lsls	r3, r3, #3
 2274 0d24 9B1A     		subs	r3, r3, r2
 2275 0d26 1B01     		lsls	r3, r3, #4
 2276 0d28 0B44     		add	r3, r3, r1
 2277 0d2a C833     		adds	r3, r3, #200
 2278 0d2c 1B68     		ldr	r3, [r3]
 2279 0d2e 1846     		mov	r0, r3
 2280 0d30 FFF7FEFF 		bl	__aeabi_i2f
 2281 0d34 0346     		mov	r3, r0
 2282 0d36 4FF08F41 		mov	r1, #1199570944
 2283 0d3a 1846     		mov	r0, r3
 2284 0d3c FFF7FEFF 		bl	__aeabi_fdiv
 2285 0d40 0346     		mov	r3, r0
 2286 0d42 1A46     		mov	r2, r3
 2287 0d44 07F13803 		add	r3, r7, #56
 2288 0d48 1C3B     		subs	r3, r3, #28
 2289 0d4a 1A60     		str	r2, [r3]	@ float
 498:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2290              		.loc 1 498 0
 2291 0d4c 0023     		movs	r3, #0
 2292 0d4e 07F5B052 		add	r2, r7, #5632
 2293 0d52 02F11702 		add	r2, r2, #23
 2294 0d56 1370     		strb	r3, [r2]
 2295 0d58 31E0     		b	.L130
 2296              	.L286:
 2297 0d5a 00BF     		.align	2
 2298              	.L285:
 2299 0d5c 00000000 		.word	c_mem
 2300              	.L131:
 499:..\src/command_processing.c ****                             }
 2301              		.loc 1 499 0 discriminator 3
 2302 0d60 07F5B053 		add	r3, r7, #5632
 2303 0d64 03F11503 		add	r3, r3, #21
 2304 0d68 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2305 0d6a 3222     		movs	r2, #50
 2306 0d6c 02FB03F3 		mul	r3, r2, r3
 2307 0d70 1A1D     		adds	r2, r3, #4
 2308 0d72 07F5B053 		add	r3, r7, #5632
 2309 0d76 03F11303 		add	r3, r3, #19
 2310 0d7a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2311 0d7c 1A44     		add	r2, r2, r3
 2312 0d7e 07F5B053 		add	r3, r7, #5632
 2313 0d82 03F11703 		add	r3, r3, #23
 2314 0d86 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2315 0d88 D31A     		subs	r3, r2, r3
 2316 0d8a 5A1E     		subs	r2, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 67


 2317 0d8c 07F5B053 		add	r3, r7, #5632
 2318 0d90 03F11703 		add	r3, r3, #23
 2319 0d94 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2320 0d96 07F13803 		add	r3, r7, #56
 2321 0d9a 1C3B     		subs	r3, r3, #28
 2322 0d9c 0B44     		add	r3, r3, r1
 2323 0d9e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2324 0da0 07F15803 		add	r3, r7, #88
 2325 0da4 043B     		subs	r3, r3, #4
 2326 0da6 9954     		strb	r1, [r3, r2]
 498:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2327              		.loc 1 498 0 discriminator 3
 2328 0da8 07F5B053 		add	r3, r7, #5632
 2329 0dac 03F11703 		add	r3, r3, #23
 2330 0db0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2331 0db2 0133     		adds	r3, r3, #1
 2332 0db4 07F5B052 		add	r2, r7, #5632
 2333 0db8 02F11702 		add	r2, r2, #23
 2334 0dbc 1370     		strb	r3, [r2]
 2335              	.L130:
 498:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2336              		.loc 1 498 0 is_stmt 0 discriminator 1
 2337 0dbe 07F5B053 		add	r3, r7, #5632
 2338 0dc2 03F11703 		add	r3, r3, #23
 2339 0dc6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2340 0dc8 07F5B053 		add	r3, r7, #5632
 2341 0dcc 03F11303 		add	r3, r3, #19
 2342 0dd0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2343 0dd2 9A42     		cmp	r2, r3
 2344 0dd4 C4D3     		bcc	.L131
 501:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2345              		.loc 1 501 0 is_stmt 1
 2346 0dd6 07F5B053 		add	r3, r7, #5632
 2347 0dda 03F10F03 		add	r3, r3, #15
 2348 0dde 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2349 0de0 AB49     		ldr	r1, .L287
 2350 0de2 1346     		mov	r3, r2
 2351 0de4 DB00     		lsls	r3, r3, #3
 2352 0de6 9B1A     		subs	r3, r3, r2
 2353 0de8 1B01     		lsls	r3, r3, #4
 2354 0dea 0B44     		add	r3, r3, r1
 2355 0dec CC33     		adds	r3, r3, #204
 2356 0dee 1B68     		ldr	r3, [r3]
 2357 0df0 1846     		mov	r0, r3
 2358 0df2 FFF7FEFF 		bl	__aeabi_i2f
 2359 0df6 0346     		mov	r3, r0
 2360 0df8 4FF08F41 		mov	r1, #1199570944
 2361 0dfc 1846     		mov	r0, r3
 2362 0dfe FFF7FEFF 		bl	__aeabi_fdiv
 2363 0e02 0346     		mov	r3, r0
 2364 0e04 1A46     		mov	r2, r3
 2365 0e06 07F13803 		add	r3, r7, #56
 2366 0e0a 1C3B     		subs	r3, r3, #28
 2367 0e0c 1A60     		str	r2, [r3]	@ float
 502:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2368              		.loc 1 502 0
 2369 0e0e 0023     		movs	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 68


 2370 0e10 07F5B052 		add	r2, r7, #5632
 2371 0e14 02F11702 		add	r2, r2, #23
 2372 0e18 1370     		strb	r3, [r2]
 2373 0e1a 34E0     		b	.L132
 2374              	.L133:
 503:..\src/command_processing.c ****                             }
 2375              		.loc 1 503 0 discriminator 3
 2376 0e1c 07F5B053 		add	r3, r7, #5632
 2377 0e20 03F11503 		add	r3, r3, #21
 2378 0e24 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2379 0e26 3222     		movs	r2, #50
 2380 0e28 02FB03F3 		mul	r3, r2, r3
 2381 0e2c 1A1D     		adds	r2, r3, #4
 2382 0e2e 07F5B053 		add	r3, r7, #5632
 2383 0e32 03F11303 		add	r3, r3, #19
 2384 0e36 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2385 0e38 1A44     		add	r2, r2, r3
 2386 0e3a 07F5B053 		add	r3, r7, #5632
 2387 0e3e 03F11303 		add	r3, r3, #19
 2388 0e42 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2389 0e44 1A44     		add	r2, r2, r3
 2390 0e46 07F5B053 		add	r3, r7, #5632
 2391 0e4a 03F11703 		add	r3, r3, #23
 2392 0e4e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2393 0e50 D31A     		subs	r3, r2, r3
 2394 0e52 5A1E     		subs	r2, r3, #1
 2395 0e54 07F5B053 		add	r3, r7, #5632
 2396 0e58 03F11703 		add	r3, r3, #23
 2397 0e5c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2398 0e5e 07F13803 		add	r3, r7, #56
 2399 0e62 1C3B     		subs	r3, r3, #28
 2400 0e64 0B44     		add	r3, r3, r1
 2401 0e66 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2402 0e68 07F15803 		add	r3, r7, #88
 2403 0e6c 043B     		subs	r3, r3, #4
 2404 0e6e 9954     		strb	r1, [r3, r2]
 502:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2405              		.loc 1 502 0 discriminator 3
 2406 0e70 07F5B053 		add	r3, r7, #5632
 2407 0e74 03F11703 		add	r3, r3, #23
 2408 0e78 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2409 0e7a 0133     		adds	r3, r3, #1
 2410 0e7c 07F5B052 		add	r2, r7, #5632
 2411 0e80 02F11702 		add	r2, r2, #23
 2412 0e84 1370     		strb	r3, [r2]
 2413              	.L132:
 502:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2414              		.loc 1 502 0 is_stmt 0 discriminator 1
 2415 0e86 07F5B053 		add	r3, r7, #5632
 2416 0e8a 03F11703 		add	r3, r3, #23
 2417 0e8e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2418 0e90 07F5B053 		add	r3, r7, #5632
 2419 0e94 03F11303 		add	r3, r3, #19
 2420 0e98 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2421 0e9a 9A42     		cmp	r2, r3
 2422 0e9c BED3     		bcc	.L133
 505:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 69


 2423              		.loc 1 505 0 is_stmt 1
 2424 0e9e 07F5B053 		add	r3, r7, #5632
 2425 0ea2 03F10F03 		add	r3, r3, #15
 2426 0ea6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2427 0ea8 7949     		ldr	r1, .L287
 2428 0eaa 1346     		mov	r3, r2
 2429 0eac DB00     		lsls	r3, r3, #3
 2430 0eae 9B1A     		subs	r3, r3, r2
 2431 0eb0 1B01     		lsls	r3, r3, #4
 2432 0eb2 0B44     		add	r3, r3, r1
 2433 0eb4 D033     		adds	r3, r3, #208
 2434 0eb6 1B68     		ldr	r3, [r3]
 2435 0eb8 1846     		mov	r0, r3
 2436 0eba FFF7FEFF 		bl	__aeabi_i2f
 2437 0ebe 0346     		mov	r3, r0
 2438 0ec0 4FF08F41 		mov	r1, #1199570944
 2439 0ec4 1846     		mov	r0, r3
 2440 0ec6 FFF7FEFF 		bl	__aeabi_fdiv
 2441 0eca 0346     		mov	r3, r0
 2442 0ecc 1A46     		mov	r2, r3
 2443 0ece 07F13803 		add	r3, r7, #56
 2444 0ed2 1C3B     		subs	r3, r3, #28
 2445 0ed4 1A60     		str	r2, [r3]	@ float
 506:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2446              		.loc 1 506 0
 2447 0ed6 0023     		movs	r3, #0
 2448 0ed8 07F5B052 		add	r2, r7, #5632
 2449 0edc 02F11702 		add	r2, r2, #23
 2450 0ee0 1370     		strb	r3, [r2]
 2451 0ee2 35E0     		b	.L134
 2452              	.L135:
 507:..\src/command_processing.c ****                             }
 2453              		.loc 1 507 0 discriminator 3
 2454 0ee4 07F5B053 		add	r3, r7, #5632
 2455 0ee8 03F11503 		add	r3, r3, #21
 2456 0eec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2457 0eee 3222     		movs	r2, #50
 2458 0ef0 02FB03F3 		mul	r3, r2, r3
 2459 0ef4 1A1D     		adds	r2, r3, #4
 2460 0ef6 07F5B053 		add	r3, r7, #5632
 2461 0efa 03F11303 		add	r3, r3, #19
 2462 0efe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2463 0f00 5B00     		lsls	r3, r3, #1
 2464 0f02 1A44     		add	r2, r2, r3
 2465 0f04 07F5B053 		add	r3, r7, #5632
 2466 0f08 03F11303 		add	r3, r3, #19
 2467 0f0c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2468 0f0e 1A44     		add	r2, r2, r3
 2469 0f10 07F5B053 		add	r3, r7, #5632
 2470 0f14 03F11703 		add	r3, r3, #23
 2471 0f18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2472 0f1a D31A     		subs	r3, r2, r3
 2473 0f1c 5A1E     		subs	r2, r3, #1
 2474 0f1e 07F5B053 		add	r3, r7, #5632
 2475 0f22 03F11703 		add	r3, r3, #23
 2476 0f26 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2477 0f28 07F13803 		add	r3, r7, #56
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 70


 2478 0f2c 1C3B     		subs	r3, r3, #28
 2479 0f2e 0B44     		add	r3, r3, r1
 2480 0f30 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2481 0f32 07F15803 		add	r3, r7, #88
 2482 0f36 043B     		subs	r3, r3, #4
 2483 0f38 9954     		strb	r1, [r3, r2]
 506:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2484              		.loc 1 506 0 discriminator 3
 2485 0f3a 07F5B053 		add	r3, r7, #5632
 2486 0f3e 03F11703 		add	r3, r3, #23
 2487 0f42 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2488 0f44 0133     		adds	r3, r3, #1
 2489 0f46 07F5B052 		add	r2, r7, #5632
 2490 0f4a 02F11702 		add	r2, r2, #23
 2491 0f4e 1370     		strb	r3, [r2]
 2492              	.L134:
 506:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2493              		.loc 1 506 0 is_stmt 0 discriminator 1
 2494 0f50 07F5B053 		add	r3, r7, #5632
 2495 0f54 03F11703 		add	r3, r3, #23
 2496 0f58 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2497 0f5a 07F5B053 		add	r3, r7, #5632
 2498 0f5e 03F11303 		add	r3, r3, #19
 2499 0f62 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2500 0f64 9A42     		cmp	r2, r3
 2501 0f66 BDD3     		bcc	.L135
 2502              		.loc 1 510 0 is_stmt 1
 2503 0f68 01F0AFBA 		b	.L110
 2504              	.L114:
 511:..\src/command_processing.c ****                         
 512:..\src/command_processing.c ****                     case 3:         //Current PID
 513:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 2505              		.loc 1 513 0
 2506 0f6c 07F5B053 		add	r3, r7, #5632
 2507 0f70 03F10F03 		add	r3, r3, #15
 2508 0f74 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2509 0f76 4649     		ldr	r1, .L287
 2510 0f78 1346     		mov	r3, r2
 2511 0f7a DB00     		lsls	r3, r3, #3
 2512 0f7c 9B1A     		subs	r3, r3, r2
 2513 0f7e 1B01     		lsls	r3, r3, #4
 2514 0f80 0B44     		add	r3, r3, r1
 2515 0f82 03F20F13 		addw	r3, r3, #271
 2516 0f86 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2517 0f88 032B     		cmp	r3, #3
 2518 0f8a 00F02B81 		beq	.L136
 514:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c / 65536;
 2519              		.loc 1 514 0
 2520 0f8e 07F5B053 		add	r3, r7, #5632
 2521 0f92 03F10F03 		add	r3, r3, #15
 2522 0f96 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2523 0f98 3D49     		ldr	r1, .L287
 2524 0f9a 1346     		mov	r3, r2
 2525 0f9c DB00     		lsls	r3, r3, #3
 2526 0f9e 9B1A     		subs	r3, r3, r2
 2527 0fa0 1B01     		lsls	r3, r3, #4
 2528 0fa2 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 71


 2529 0fa4 BC33     		adds	r3, r3, #188
 2530 0fa6 1B68     		ldr	r3, [r3]
 2531 0fa8 1846     		mov	r0, r3
 2532 0faa FFF7FEFF 		bl	__aeabi_i2f
 2533 0fae 0346     		mov	r3, r0
 2534 0fb0 4FF08F41 		mov	r1, #1199570944
 2535 0fb4 1846     		mov	r0, r3
 2536 0fb6 FFF7FEFF 		bl	__aeabi_fdiv
 2537 0fba 0346     		mov	r3, r0
 2538 0fbc 1A46     		mov	r2, r3
 2539 0fbe 07F13803 		add	r3, r7, #56
 2540 0fc2 1C3B     		subs	r3, r3, #28
 2541 0fc4 1A60     		str	r2, [r3]	@ float
 515:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2542              		.loc 1 515 0
 2543 0fc6 0023     		movs	r3, #0
 2544 0fc8 07F5B052 		add	r2, r7, #5632
 2545 0fcc 02F11702 		add	r2, r2, #23
 2546 0fd0 1370     		strb	r3, [r2]
 2547 0fd2 2EE0     		b	.L137
 2548              	.L138:
 516:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2549              		.loc 1 516 0 discriminator 3
 2550 0fd4 07F5B053 		add	r3, r7, #5632
 2551 0fd8 03F11503 		add	r3, r3, #21
 2552 0fdc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2553 0fde 3222     		movs	r2, #50
 2554 0fe0 02FB03F3 		mul	r3, r2, r3
 2555 0fe4 1A1D     		adds	r2, r3, #4
 2556 0fe6 07F5B053 		add	r3, r7, #5632
 2557 0fea 03F11303 		add	r3, r3, #19
 2558 0fee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2559 0ff0 1A44     		add	r2, r2, r3
 2560 0ff2 07F5B053 		add	r3, r7, #5632
 2561 0ff6 03F11703 		add	r3, r3, #23
 2562 0ffa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2563 0ffc D31A     		subs	r3, r2, r3
 2564 0ffe 5A1E     		subs	r2, r3, #1
 2565 1000 07F5B053 		add	r3, r7, #5632
 2566 1004 03F11703 		add	r3, r3, #23
 2567 1008 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2568 100a 07F13803 		add	r3, r7, #56
 2569 100e 1C3B     		subs	r3, r3, #28
 2570 1010 0B44     		add	r3, r3, r1
 2571 1012 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2572 1014 07F15803 		add	r3, r7, #88
 2573 1018 043B     		subs	r3, r3, #4
 2574 101a 9954     		strb	r1, [r3, r2]
 515:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2575              		.loc 1 515 0 discriminator 3
 2576 101c 07F5B053 		add	r3, r7, #5632
 2577 1020 03F11703 		add	r3, r3, #23
 2578 1024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2579 1026 0133     		adds	r3, r3, #1
 2580 1028 07F5B052 		add	r2, r7, #5632
 2581 102c 02F11702 		add	r2, r2, #23
 2582 1030 1370     		strb	r3, [r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 72


 2583              	.L137:
 515:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2584              		.loc 1 515 0 is_stmt 0 discriminator 1
 2585 1032 07F5B053 		add	r3, r7, #5632
 2586 1036 03F11703 		add	r3, r3, #23
 2587 103a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2588 103c 07F5B053 		add	r3, r7, #5632
 2589 1040 03F11303 		add	r3, r3, #19
 2590 1044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2591 1046 9A42     		cmp	r2, r3
 2592 1048 C4D3     		bcc	.L138
 517:..\src/command_processing.c ****                             }
 518:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c / 65536;
 2593              		.loc 1 518 0 is_stmt 1
 2594 104a 07F5B053 		add	r3, r7, #5632
 2595 104e 03F10F03 		add	r3, r3, #15
 2596 1052 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2597 1054 0E49     		ldr	r1, .L287
 2598 1056 1346     		mov	r3, r2
 2599 1058 DB00     		lsls	r3, r3, #3
 2600 105a 9B1A     		subs	r3, r3, r2
 2601 105c 1B01     		lsls	r3, r3, #4
 2602 105e 0B44     		add	r3, r3, r1
 2603 1060 C033     		adds	r3, r3, #192
 2604 1062 1B68     		ldr	r3, [r3]
 2605 1064 1846     		mov	r0, r3
 2606 1066 FFF7FEFF 		bl	__aeabi_i2f
 2607 106a 0346     		mov	r3, r0
 2608 106c 4FF08F41 		mov	r1, #1199570944
 2609 1070 1846     		mov	r0, r3
 2610 1072 FFF7FEFF 		bl	__aeabi_fdiv
 2611 1076 0346     		mov	r3, r0
 2612 1078 1A46     		mov	r2, r3
 2613 107a 07F13803 		add	r3, r7, #56
 2614 107e 1C3B     		subs	r3, r3, #28
 2615 1080 1A60     		str	r2, [r3]	@ float
 519:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2616              		.loc 1 519 0
 2617 1082 0023     		movs	r3, #0
 2618 1084 07F5B052 		add	r2, r7, #5632
 2619 1088 02F11702 		add	r2, r2, #23
 2620 108c 1370     		strb	r3, [r2]
 2621 108e 36E0     		b	.L139
 2622              	.L288:
 2623              		.align	2
 2624              	.L287:
 2625 1090 00000000 		.word	c_mem
 2626              	.L140:
 520:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2627              		.loc 1 520 0 discriminator 3
 2628 1094 07F5B053 		add	r3, r7, #5632
 2629 1098 03F11503 		add	r3, r3, #21
 2630 109c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2631 109e 3222     		movs	r2, #50
 2632 10a0 02FB03F3 		mul	r3, r2, r3
 2633 10a4 1A1D     		adds	r2, r3, #4
 2634 10a6 07F5B053 		add	r3, r7, #5632
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 73


 2635 10aa 03F11303 		add	r3, r3, #19
 2636 10ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2637 10b0 1A44     		add	r2, r2, r3
 2638 10b2 07F5B053 		add	r3, r7, #5632
 2639 10b6 03F11303 		add	r3, r3, #19
 2640 10ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2641 10bc 1A44     		add	r2, r2, r3
 2642 10be 07F5B053 		add	r3, r7, #5632
 2643 10c2 03F11703 		add	r3, r3, #23
 2644 10c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2645 10c8 D31A     		subs	r3, r2, r3
 2646 10ca 5A1E     		subs	r2, r3, #1
 2647 10cc 07F5B053 		add	r3, r7, #5632
 2648 10d0 03F11703 		add	r3, r3, #23
 2649 10d4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2650 10d6 07F13803 		add	r3, r7, #56
 2651 10da 1C3B     		subs	r3, r3, #28
 2652 10dc 0B44     		add	r3, r3, r1
 2653 10de 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2654 10e0 07F15803 		add	r3, r7, #88
 2655 10e4 043B     		subs	r3, r3, #4
 2656 10e6 9954     		strb	r1, [r3, r2]
 519:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2657              		.loc 1 519 0 discriminator 3
 2658 10e8 07F5B053 		add	r3, r7, #5632
 2659 10ec 03F11703 		add	r3, r3, #23
 2660 10f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2661 10f2 0133     		adds	r3, r3, #1
 2662 10f4 07F5B052 		add	r2, r7, #5632
 2663 10f8 02F11702 		add	r2, r2, #23
 2664 10fc 1370     		strb	r3, [r2]
 2665              	.L139:
 519:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2666              		.loc 1 519 0 is_stmt 0 discriminator 1
 2667 10fe 07F5B053 		add	r3, r7, #5632
 2668 1102 03F11703 		add	r3, r3, #23
 2669 1106 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2670 1108 07F5B053 		add	r3, r7, #5632
 2671 110c 03F11303 		add	r3, r3, #19
 2672 1110 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2673 1112 9A42     		cmp	r2, r3
 2674 1114 BED3     		bcc	.L140
 521:..\src/command_processing.c ****                             }
 522:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c / 65536;
 2675              		.loc 1 522 0 is_stmt 1
 2676 1116 07F5B053 		add	r3, r7, #5632
 2677 111a 03F10F03 		add	r3, r3, #15
 2678 111e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2679 1120 C849     		ldr	r1, .L289
 2680 1122 1346     		mov	r3, r2
 2681 1124 DB00     		lsls	r3, r3, #3
 2682 1126 9B1A     		subs	r3, r3, r2
 2683 1128 1B01     		lsls	r3, r3, #4
 2684 112a 0B44     		add	r3, r3, r1
 2685 112c C433     		adds	r3, r3, #196
 2686 112e 1B68     		ldr	r3, [r3]
 2687 1130 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 74


 2688 1132 FFF7FEFF 		bl	__aeabi_i2f
 2689 1136 0346     		mov	r3, r0
 2690 1138 4FF08F41 		mov	r1, #1199570944
 2691 113c 1846     		mov	r0, r3
 2692 113e FFF7FEFF 		bl	__aeabi_fdiv
 2693 1142 0346     		mov	r3, r0
 2694 1144 1A46     		mov	r2, r3
 2695 1146 07F13803 		add	r3, r7, #56
 2696 114a 1C3B     		subs	r3, r3, #28
 2697 114c 1A60     		str	r2, [r3]	@ float
 523:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2698              		.loc 1 523 0
 2699 114e 0023     		movs	r3, #0
 2700 1150 07F5B052 		add	r2, r7, #5632
 2701 1154 02F11702 		add	r2, r2, #23
 2702 1158 1370     		strb	r3, [r2]
 2703 115a 35E0     		b	.L141
 2704              	.L142:
 524:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2705              		.loc 1 524 0 discriminator 3
 2706 115c 07F5B053 		add	r3, r7, #5632
 2707 1160 03F11503 		add	r3, r3, #21
 2708 1164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2709 1166 3222     		movs	r2, #50
 2710 1168 02FB03F3 		mul	r3, r2, r3
 2711 116c 1A1D     		adds	r2, r3, #4
 2712 116e 07F5B053 		add	r3, r7, #5632
 2713 1172 03F11303 		add	r3, r3, #19
 2714 1176 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2715 1178 5B00     		lsls	r3, r3, #1
 2716 117a 1A44     		add	r2, r2, r3
 2717 117c 07F5B053 		add	r3, r7, #5632
 2718 1180 03F11303 		add	r3, r3, #19
 2719 1184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2720 1186 1A44     		add	r2, r2, r3
 2721 1188 07F5B053 		add	r3, r7, #5632
 2722 118c 03F11703 		add	r3, r3, #23
 2723 1190 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2724 1192 D31A     		subs	r3, r2, r3
 2725 1194 5A1E     		subs	r2, r3, #1
 2726 1196 07F5B053 		add	r3, r7, #5632
 2727 119a 03F11703 		add	r3, r3, #23
 2728 119e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2729 11a0 07F13803 		add	r3, r7, #56
 2730 11a4 1C3B     		subs	r3, r3, #28
 2731 11a6 0B44     		add	r3, r3, r1
 2732 11a8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2733 11aa 07F15803 		add	r3, r7, #88
 2734 11ae 043B     		subs	r3, r3, #4
 2735 11b0 9954     		strb	r1, [r3, r2]
 523:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2736              		.loc 1 523 0 discriminator 3
 2737 11b2 07F5B053 		add	r3, r7, #5632
 2738 11b6 03F11703 		add	r3, r3, #23
 2739 11ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2740 11bc 0133     		adds	r3, r3, #1
 2741 11be 07F5B052 		add	r2, r7, #5632
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 75


 2742 11c2 02F11702 		add	r2, r2, #23
 2743 11c6 1370     		strb	r3, [r2]
 2744              	.L141:
 523:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2745              		.loc 1 523 0 is_stmt 0 discriminator 1
 2746 11c8 07F5B053 		add	r3, r7, #5632
 2747 11cc 03F11703 		add	r3, r3, #23
 2748 11d0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2749 11d2 07F5B053 		add	r3, r7, #5632
 2750 11d6 03F11303 		add	r3, r3, #19
 2751 11da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2752 11dc 9A42     		cmp	r2, r3
 2753 11de BDD3     		bcc	.L142
 525:..\src/command_processing.c ****                             }
 526:..\src/command_processing.c ****                         }
 527:..\src/command_processing.c ****                         else {
 528:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c_dl / 65536;
 529:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 530:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 531:..\src/command_processing.c ****                             }
 532:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c_dl / 65536;
 533:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 534:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 535:..\src/command_processing.c ****                             }
 536:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c_dl / 65536;
 537:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 538:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 539:..\src/command_processing.c ****                             }
 540:..\src/command_processing.c ****                         }            
 541:..\src/command_processing.c ****                         break;  
 2754              		.loc 1 541 0 is_stmt 1
 2755 11e0 01F073B9 		b	.L110
 2756              	.L136:
 528:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2757              		.loc 1 528 0
 2758 11e4 07F5B053 		add	r3, r7, #5632
 2759 11e8 03F10F03 		add	r3, r3, #15
 2760 11ec 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2761 11ee 9549     		ldr	r1, .L289
 2762 11f0 1346     		mov	r3, r2
 2763 11f2 DB00     		lsls	r3, r3, #3
 2764 11f4 9B1A     		subs	r3, r3, r2
 2765 11f6 1B01     		lsls	r3, r3, #4
 2766 11f8 0B44     		add	r3, r3, r1
 2767 11fa D433     		adds	r3, r3, #212
 2768 11fc 1B68     		ldr	r3, [r3]
 2769 11fe 1846     		mov	r0, r3
 2770 1200 FFF7FEFF 		bl	__aeabi_i2f
 2771 1204 0346     		mov	r3, r0
 2772 1206 4FF08F41 		mov	r1, #1199570944
 2773 120a 1846     		mov	r0, r3
 2774 120c FFF7FEFF 		bl	__aeabi_fdiv
 2775 1210 0346     		mov	r3, r0
 2776 1212 1A46     		mov	r2, r3
 2777 1214 07F13803 		add	r3, r7, #56
 2778 1218 1C3B     		subs	r3, r3, #28
 2779 121a 1A60     		str	r2, [r3]	@ float
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 76


 529:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2780              		.loc 1 529 0
 2781 121c 0023     		movs	r3, #0
 2782 121e 07F5B052 		add	r2, r7, #5632
 2783 1222 02F11702 		add	r2, r2, #23
 2784 1226 1370     		strb	r3, [r2]
 2785 1228 2EE0     		b	.L144
 2786              	.L145:
 530:..\src/command_processing.c ****                             }
 2787              		.loc 1 530 0 discriminator 3
 2788 122a 07F5B053 		add	r3, r7, #5632
 2789 122e 03F11503 		add	r3, r3, #21
 2790 1232 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2791 1234 3222     		movs	r2, #50
 2792 1236 02FB03F3 		mul	r3, r2, r3
 2793 123a 1A1D     		adds	r2, r3, #4
 2794 123c 07F5B053 		add	r3, r7, #5632
 2795 1240 03F11303 		add	r3, r3, #19
 2796 1244 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2797 1246 1A44     		add	r2, r2, r3
 2798 1248 07F5B053 		add	r3, r7, #5632
 2799 124c 03F11703 		add	r3, r3, #23
 2800 1250 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2801 1252 D31A     		subs	r3, r2, r3
 2802 1254 5A1E     		subs	r2, r3, #1
 2803 1256 07F5B053 		add	r3, r7, #5632
 2804 125a 03F11703 		add	r3, r3, #23
 2805 125e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2806 1260 07F13803 		add	r3, r7, #56
 2807 1264 1C3B     		subs	r3, r3, #28
 2808 1266 0B44     		add	r3, r3, r1
 2809 1268 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2810 126a 07F15803 		add	r3, r7, #88
 2811 126e 043B     		subs	r3, r3, #4
 2812 1270 9954     		strb	r1, [r3, r2]
 529:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2813              		.loc 1 529 0 discriminator 3
 2814 1272 07F5B053 		add	r3, r7, #5632
 2815 1276 03F11703 		add	r3, r3, #23
 2816 127a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2817 127c 0133     		adds	r3, r3, #1
 2818 127e 07F5B052 		add	r2, r7, #5632
 2819 1282 02F11702 		add	r2, r2, #23
 2820 1286 1370     		strb	r3, [r2]
 2821              	.L144:
 529:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2822              		.loc 1 529 0 is_stmt 0 discriminator 1
 2823 1288 07F5B053 		add	r3, r7, #5632
 2824 128c 03F11703 		add	r3, r3, #23
 2825 1290 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2826 1292 07F5B053 		add	r3, r7, #5632
 2827 1296 03F11303 		add	r3, r3, #19
 2828 129a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2829 129c 9A42     		cmp	r2, r3
 2830 129e C4D3     		bcc	.L145
 532:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2831              		.loc 1 532 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 77


 2832 12a0 07F5B053 		add	r3, r7, #5632
 2833 12a4 03F10F03 		add	r3, r3, #15
 2834 12a8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2835 12aa 6649     		ldr	r1, .L289
 2836 12ac 1346     		mov	r3, r2
 2837 12ae DB00     		lsls	r3, r3, #3
 2838 12b0 9B1A     		subs	r3, r3, r2
 2839 12b2 1B01     		lsls	r3, r3, #4
 2840 12b4 0B44     		add	r3, r3, r1
 2841 12b6 D833     		adds	r3, r3, #216
 2842 12b8 1B68     		ldr	r3, [r3]
 2843 12ba 1846     		mov	r0, r3
 2844 12bc FFF7FEFF 		bl	__aeabi_i2f
 2845 12c0 0346     		mov	r3, r0
 2846 12c2 4FF08F41 		mov	r1, #1199570944
 2847 12c6 1846     		mov	r0, r3
 2848 12c8 FFF7FEFF 		bl	__aeabi_fdiv
 2849 12cc 0346     		mov	r3, r0
 2850 12ce 1A46     		mov	r2, r3
 2851 12d0 07F13803 		add	r3, r7, #56
 2852 12d4 1C3B     		subs	r3, r3, #28
 2853 12d6 1A60     		str	r2, [r3]	@ float
 533:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2854              		.loc 1 533 0
 2855 12d8 0023     		movs	r3, #0
 2856 12da 07F5B052 		add	r2, r7, #5632
 2857 12de 02F11702 		add	r2, r2, #23
 2858 12e2 1370     		strb	r3, [r2]
 2859 12e4 34E0     		b	.L146
 2860              	.L147:
 534:..\src/command_processing.c ****                             }
 2861              		.loc 1 534 0 discriminator 3
 2862 12e6 07F5B053 		add	r3, r7, #5632
 2863 12ea 03F11503 		add	r3, r3, #21
 2864 12ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2865 12f0 3222     		movs	r2, #50
 2866 12f2 02FB03F3 		mul	r3, r2, r3
 2867 12f6 1A1D     		adds	r2, r3, #4
 2868 12f8 07F5B053 		add	r3, r7, #5632
 2869 12fc 03F11303 		add	r3, r3, #19
 2870 1300 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2871 1302 1A44     		add	r2, r2, r3
 2872 1304 07F5B053 		add	r3, r7, #5632
 2873 1308 03F11303 		add	r3, r3, #19
 2874 130c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2875 130e 1A44     		add	r2, r2, r3
 2876 1310 07F5B053 		add	r3, r7, #5632
 2877 1314 03F11703 		add	r3, r3, #23
 2878 1318 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2879 131a D31A     		subs	r3, r2, r3
 2880 131c 5A1E     		subs	r2, r3, #1
 2881 131e 07F5B053 		add	r3, r7, #5632
 2882 1322 03F11703 		add	r3, r3, #23
 2883 1326 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2884 1328 07F13803 		add	r3, r7, #56
 2885 132c 1C3B     		subs	r3, r3, #28
 2886 132e 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 78


 2887 1330 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2888 1332 07F15803 		add	r3, r7, #88
 2889 1336 043B     		subs	r3, r3, #4
 2890 1338 9954     		strb	r1, [r3, r2]
 533:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2891              		.loc 1 533 0 discriminator 3
 2892 133a 07F5B053 		add	r3, r7, #5632
 2893 133e 03F11703 		add	r3, r3, #23
 2894 1342 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2895 1344 0133     		adds	r3, r3, #1
 2896 1346 07F5B052 		add	r2, r7, #5632
 2897 134a 02F11702 		add	r2, r2, #23
 2898 134e 1370     		strb	r3, [r2]
 2899              	.L146:
 533:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2900              		.loc 1 533 0 is_stmt 0 discriminator 1
 2901 1350 07F5B053 		add	r3, r7, #5632
 2902 1354 03F11703 		add	r3, r3, #23
 2903 1358 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2904 135a 07F5B053 		add	r3, r7, #5632
 2905 135e 03F11303 		add	r3, r3, #19
 2906 1362 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2907 1364 9A42     		cmp	r2, r3
 2908 1366 BED3     		bcc	.L147
 536:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2909              		.loc 1 536 0 is_stmt 1
 2910 1368 07F5B053 		add	r3, r7, #5632
 2911 136c 03F10F03 		add	r3, r3, #15
 2912 1370 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2913 1372 3449     		ldr	r1, .L289
 2914 1374 1346     		mov	r3, r2
 2915 1376 DB00     		lsls	r3, r3, #3
 2916 1378 9B1A     		subs	r3, r3, r2
 2917 137a 1B01     		lsls	r3, r3, #4
 2918 137c 0B44     		add	r3, r3, r1
 2919 137e DC33     		adds	r3, r3, #220
 2920 1380 1B68     		ldr	r3, [r3]
 2921 1382 1846     		mov	r0, r3
 2922 1384 FFF7FEFF 		bl	__aeabi_i2f
 2923 1388 0346     		mov	r3, r0
 2924 138a 4FF08F41 		mov	r1, #1199570944
 2925 138e 1846     		mov	r0, r3
 2926 1390 FFF7FEFF 		bl	__aeabi_fdiv
 2927 1394 0346     		mov	r3, r0
 2928 1396 1A46     		mov	r2, r3
 2929 1398 07F13803 		add	r3, r7, #56
 2930 139c 1C3B     		subs	r3, r3, #28
 2931 139e 1A60     		str	r2, [r3]	@ float
 537:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2932              		.loc 1 537 0
 2933 13a0 0023     		movs	r3, #0
 2934 13a2 07F5B052 		add	r2, r7, #5632
 2935 13a6 02F11702 		add	r2, r2, #23
 2936 13aa 1370     		strb	r3, [r2]
 2937 13ac 35E0     		b	.L148
 2938              	.L149:
 538:..\src/command_processing.c ****                             }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 79


 2939              		.loc 1 538 0 discriminator 3
 2940 13ae 07F5B053 		add	r3, r7, #5632
 2941 13b2 03F11503 		add	r3, r3, #21
 2942 13b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2943 13b8 3222     		movs	r2, #50
 2944 13ba 02FB03F3 		mul	r3, r2, r3
 2945 13be 1A1D     		adds	r2, r3, #4
 2946 13c0 07F5B053 		add	r3, r7, #5632
 2947 13c4 03F11303 		add	r3, r3, #19
 2948 13c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2949 13ca 5B00     		lsls	r3, r3, #1
 2950 13cc 1A44     		add	r2, r2, r3
 2951 13ce 07F5B053 		add	r3, r7, #5632
 2952 13d2 03F11303 		add	r3, r3, #19
 2953 13d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2954 13d8 1A44     		add	r2, r2, r3
 2955 13da 07F5B053 		add	r3, r7, #5632
 2956 13de 03F11703 		add	r3, r3, #23
 2957 13e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2958 13e4 D31A     		subs	r3, r2, r3
 2959 13e6 5A1E     		subs	r2, r3, #1
 2960 13e8 07F5B053 		add	r3, r7, #5632
 2961 13ec 03F11703 		add	r3, r3, #23
 2962 13f0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2963 13f2 07F13803 		add	r3, r7, #56
 2964 13f6 1C3B     		subs	r3, r3, #28
 2965 13f8 0B44     		add	r3, r3, r1
 2966 13fa 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2967 13fc 07F15803 		add	r3, r7, #88
 2968 1400 043B     		subs	r3, r3, #4
 2969 1402 9954     		strb	r1, [r3, r2]
 537:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2970              		.loc 1 537 0 discriminator 3
 2971 1404 07F5B053 		add	r3, r7, #5632
 2972 1408 03F11703 		add	r3, r3, #23
 2973 140c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2974 140e 0133     		adds	r3, r3, #1
 2975 1410 07F5B052 		add	r2, r7, #5632
 2976 1414 02F11702 		add	r2, r2, #23
 2977 1418 1370     		strb	r3, [r2]
 2978              	.L148:
 537:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2979              		.loc 1 537 0 is_stmt 0 discriminator 1
 2980 141a 07F5B053 		add	r3, r7, #5632
 2981 141e 03F11703 		add	r3, r3, #23
 2982 1422 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2983 1424 07F5B053 		add	r3, r7, #5632
 2984 1428 03F11303 		add	r3, r3, #19
 2985 142c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2986 142e 9A42     		cmp	r2, r3
 2987 1430 BDD3     		bcc	.L149
 2988              		.loc 1 541 0 is_stmt 1
 2989 1432 01F04AB8 		b	.L110
 2990              	.L115:
 542:..\src/command_processing.c **** 
 543:..\src/command_processing.c ****                     case 8:         //Measurement Offset
 544:..\src/command_processing.c ****                         for (i=0; i<NUM_ITEMS[idx]; i++){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 80


 2991              		.loc 1 544 0
 2992 1436 0023     		movs	r3, #0
 2993 1438 07F5B052 		add	r2, r7, #5632
 2994 143c 02F11702 		add	r2, r2, #23
 2995 1440 1370     		strb	r3, [r2]
 2996 1442 9DE0     		b	.L150
 2997              	.L290:
 2998              		.align	2
 2999              	.L289:
 3000 1444 00000000 		.word	c_mem
 3001              	.L153:
 545:..\src/command_processing.c ****                             aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >>
 3002              		.loc 1 545 0
 3003 1448 07F5B053 		add	r3, r7, #5632
 3004 144c 03F10F03 		add	r3, r3, #15
 3005 1450 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3006 1452 C749     		ldr	r1, .L291
 3007 1454 1346     		mov	r3, r2
 3008 1456 DB00     		lsls	r3, r3, #3
 3009 1458 9B1A     		subs	r3, r3, r2
 3010 145a 1B01     		lsls	r3, r3, #4
 3011 145c 0B44     		add	r3, r3, r1
 3012 145e 03F58873 		add	r3, r3, #272
 3013 1462 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3014 1464 1846     		mov	r0, r3
 3015 1466 07F5B053 		add	r3, r7, #5632
 3016 146a 03F11703 		add	r3, r3, #23
 3017 146e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3018 1470 C049     		ldr	r1, .L291+4
 3019 1472 0346     		mov	r3, r0
 3020 1474 5B00     		lsls	r3, r3, #1
 3021 1476 0344     		add	r3, r3, r0
 3022 1478 9B00     		lsls	r3, r3, #2
 3023 147a 1344     		add	r3, r3, r2
 3024 147c 6633     		adds	r3, r3, #102
 3025 147e 51F82310 		ldr	r1, [r1, r3, lsl #2]
 3026 1482 07F5B053 		add	r3, r7, #5632
 3027 1486 03F10F03 		add	r3, r3, #15
 3028 148a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3029 148c B848     		ldr	r0, .L291
 3030 148e 1346     		mov	r3, r2
 3031 1490 DB00     		lsls	r3, r3, #3
 3032 1492 9B1A     		subs	r3, r3, r2
 3033 1494 1B01     		lsls	r3, r3, #4
 3034 1496 0344     		add	r3, r3, r0
 3035 1498 03F58873 		add	r3, r3, #272
 3036 149c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3037 149e 1C46     		mov	r4, r3
 3038 14a0 07F5B053 		add	r3, r7, #5632
 3039 14a4 03F11703 		add	r3, r3, #23
 3040 14a8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3041 14aa B248     		ldr	r0, .L291+4
 3042 14ac 2346     		mov	r3, r4
 3043 14ae 5B00     		lsls	r3, r3, #1
 3044 14b0 2344     		add	r3, r3, r4
 3045 14b2 1B01     		lsls	r3, r3, #4
 3046 14b4 0344     		add	r3, r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 81


 3047 14b6 1344     		add	r3, r3, r2
 3048 14b8 03F29513 		addw	r3, r3, #405
 3049 14bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3050 14be 41FA03F3 		asr	r3, r1, r3
 3051 14c2 1AB2     		sxth	r2, r3
 3052 14c4 07F13803 		add	r3, r7, #56
 3053 14c8 1E3B     		subs	r3, r3, #30
 3054 14ca 1A80     		strh	r2, [r3]	@ movhi
 546:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 3055              		.loc 1 546 0
 3056 14cc 0023     		movs	r3, #0
 3057 14ce 07F5B052 		add	r2, r7, #5632
 3058 14d2 02F11602 		add	r2, r2, #22
 3059 14d6 1370     		strb	r3, [r2]
 3060 14d8 3BE0     		b	.L151
 3061              	.L152:
 547:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((cha
 3062              		.loc 1 547 0 discriminator 3
 3063 14da 07F5B053 		add	r3, r7, #5632
 3064 14de 03F11503 		add	r3, r3, #21
 3065 14e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3066 14e4 3222     		movs	r2, #50
 3067 14e6 02FB03F3 		mul	r3, r2, r3
 3068 14ea 1A1D     		adds	r2, r3, #4
 3069 14ec 07F5B053 		add	r3, r7, #5632
 3070 14f0 03F11703 		add	r3, r3, #23
 3071 14f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3072 14f6 07F5B051 		add	r1, r7, #5632
 3073 14fa 01F11301 		add	r1, r1, #19
 3074 14fe 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 3075 1500 01FB03F3 		mul	r3, r1, r3
 3076 1504 1A44     		add	r2, r2, r3
 3077 1506 07F5B053 		add	r3, r7, #5632
 3078 150a 03F11303 		add	r3, r3, #19
 3079 150e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3080 1510 1A44     		add	r2, r2, r3
 3081 1512 07F5B053 		add	r3, r7, #5632
 3082 1516 03F11603 		add	r3, r3, #22
 3083 151a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3084 151c D31A     		subs	r3, r2, r3
 3085 151e 5A1E     		subs	r2, r3, #1
 3086 1520 07F5B053 		add	r3, r7, #5632
 3087 1524 03F11603 		add	r3, r3, #22
 3088 1528 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3089 152a 07F13803 		add	r3, r7, #56
 3090 152e 1E3B     		subs	r3, r3, #30
 3091 1530 0B44     		add	r3, r3, r1
 3092 1532 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3093 1534 07F15803 		add	r3, r7, #88
 3094 1538 043B     		subs	r3, r3, #4
 3095 153a 9954     		strb	r1, [r3, r2]
 546:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 3096              		.loc 1 546 0 discriminator 3
 3097 153c 07F5B053 		add	r3, r7, #5632
 3098 1540 03F11603 		add	r3, r3, #22
 3099 1544 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3100 1546 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 82


 3101 1548 07F5B052 		add	r2, r7, #5632
 3102 154c 02F11602 		add	r2, r2, #22
 3103 1550 1370     		strb	r3, [r2]
 3104              	.L151:
 546:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 3105              		.loc 1 546 0 is_stmt 0 discriminator 1
 3106 1552 07F5B053 		add	r3, r7, #5632
 3107 1556 03F11603 		add	r3, r3, #22
 3108 155a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3109 155c 07F5B053 		add	r3, r7, #5632
 3110 1560 03F11303 		add	r3, r3, #19
 3111 1564 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3112 1566 9A42     		cmp	r2, r3
 3113 1568 B7D3     		bcc	.L152
 544:..\src/command_processing.c ****                             aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >>
 3114              		.loc 1 544 0 is_stmt 1 discriminator 2
 3115 156a 07F5B053 		add	r3, r7, #5632
 3116 156e 03F11703 		add	r3, r3, #23
 3117 1572 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3118 1574 0133     		adds	r3, r3, #1
 3119 1576 07F5B052 		add	r2, r7, #5632
 3120 157a 02F11702 		add	r2, r2, #23
 3121 157e 1370     		strb	r3, [r2]
 3122              	.L150:
 544:..\src/command_processing.c ****                             aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >>
 3123              		.loc 1 544 0 is_stmt 0 discriminator 1
 3124 1580 07F5B053 		add	r3, r7, #5632
 3125 1584 03F11503 		add	r3, r3, #21
 3126 1588 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3127 158a 07F11803 		add	r3, r7, #24
 3128 158e 143B     		subs	r3, r3, #20
 3129 1590 1B68     		ldr	r3, [r3]
 3130 1592 1344     		add	r3, r3, r2
 3131 1594 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3132 1596 07F5B052 		add	r2, r7, #5632
 3133 159a 02F11702 		add	r2, r2, #23
 3134 159e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3135 15a0 9A42     		cmp	r2, r3
 3136 15a2 FFF451AF 		bcc	.L153
 548:..\src/command_processing.c ****                             }
 549:..\src/command_processing.c ****                         }
 550:..\src/command_processing.c ****                         break;
 3137              		.loc 1 550 0 is_stmt 1
 3138 15a6 00F090BF 		b	.L110
 3139              	.L116:
 551:..\src/command_processing.c ****                 
 552:..\src/command_processing.c ****                     case 11:        //Position limits
 553:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.motor[MO
 3140              		.loc 1 553 0
 3141 15aa 07F5B053 		add	r3, r7, #5632
 3142 15ae 03F10F03 		add	r3, r3, #15
 3143 15b2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3144 15b4 6F49     		ldr	r1, .L291+4
 3145 15b6 1346     		mov	r3, r2
 3146 15b8 DB00     		lsls	r3, r3, #3
 3147 15ba 9B1A     		subs	r3, r3, r2
 3148 15bc 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 83


 3149 15be 0B44     		add	r3, r3, r1
 3150 15c0 E433     		adds	r3, r3, #228
 3151 15c2 1968     		ldr	r1, [r3]
 3152 15c4 07F5B053 		add	r3, r7, #5632
 3153 15c8 03F10F03 		add	r3, r3, #15
 3154 15cc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3155 15ce 6848     		ldr	r0, .L291
 3156 15d0 1346     		mov	r3, r2
 3157 15d2 DB00     		lsls	r3, r3, #3
 3158 15d4 9B1A     		subs	r3, r3, r2
 3159 15d6 1B01     		lsls	r3, r3, #4
 3160 15d8 0344     		add	r3, r3, r0
 3161 15da 03F58873 		add	r3, r3, #272
 3162 15de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3163 15e0 1846     		mov	r0, r3
 3164 15e2 644A     		ldr	r2, .L291+4
 3165 15e4 0346     		mov	r3, r0
 3166 15e6 5B00     		lsls	r3, r3, #1
 3167 15e8 0344     		add	r3, r3, r0
 3168 15ea 1B01     		lsls	r3, r3, #4
 3169 15ec 1344     		add	r3, r3, r2
 3170 15ee 03F29513 		addw	r3, r3, #405
 3171 15f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3172 15f4 41FA03F2 		asr	r2, r1, r3
 3173 15f8 07F11803 		add	r3, r7, #24
 3174 15fc 043B     		subs	r3, r3, #4
 3175 15fe 1A60     		str	r2, [r3]
 554:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3176              		.loc 1 554 0
 3177 1600 0023     		movs	r3, #0
 3178 1602 07F5B052 		add	r2, r7, #5632
 3179 1606 02F11602 		add	r2, r2, #22
 3180 160a 1370     		strb	r3, [r2]
 3181 160c 2EE0     		b	.L154
 3182              	.L155:
 555:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 3183              		.loc 1 555 0 discriminator 3
 3184 160e 07F5B053 		add	r3, r7, #5632
 3185 1612 03F11503 		add	r3, r3, #21
 3186 1616 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3187 1618 3222     		movs	r2, #50
 3188 161a 02FB03F3 		mul	r3, r2, r3
 3189 161e 1A1D     		adds	r2, r3, #4
 3190 1620 07F5B053 		add	r3, r7, #5632
 3191 1624 03F11303 		add	r3, r3, #19
 3192 1628 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3193 162a 1A44     		add	r2, r2, r3
 3194 162c 07F5B053 		add	r3, r7, #5632
 3195 1630 03F11603 		add	r3, r3, #22
 3196 1634 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3197 1636 D31A     		subs	r3, r2, r3
 3198 1638 5A1E     		subs	r2, r3, #1
 3199 163a 07F5B053 		add	r3, r7, #5632
 3200 163e 03F11603 		add	r3, r3, #22
 3201 1642 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3202 1644 07F11803 		add	r3, r7, #24
 3203 1648 043B     		subs	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 84


 3204 164a 0B44     		add	r3, r3, r1
 3205 164c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3206 164e 07F15803 		add	r3, r7, #88
 3207 1652 043B     		subs	r3, r3, #4
 3208 1654 9954     		strb	r1, [r3, r2]
 554:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3209              		.loc 1 554 0 discriminator 3
 3210 1656 07F5B053 		add	r3, r7, #5632
 3211 165a 03F11603 		add	r3, r3, #22
 3212 165e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3213 1660 0133     		adds	r3, r3, #1
 3214 1662 07F5B052 		add	r2, r7, #5632
 3215 1666 02F11602 		add	r2, r2, #22
 3216 166a 1370     		strb	r3, [r2]
 3217              	.L154:
 554:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3218              		.loc 1 554 0 is_stmt 0 discriminator 1
 3219 166c 07F5B053 		add	r3, r7, #5632
 3220 1670 03F11603 		add	r3, r3, #22
 3221 1674 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3222 1676 07F5B053 		add	r3, r7, #5632
 3223 167a 03F11303 		add	r3, r3, #19
 3224 167e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3225 1680 9A42     		cmp	r2, r3
 3226 1682 C4D3     		bcc	.L155
 556:..\src/command_processing.c ****                         }
 557:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.motor[MO
 3227              		.loc 1 557 0 is_stmt 1
 3228 1684 07F5B053 		add	r3, r7, #5632
 3229 1688 03F10F03 		add	r3, r3, #15
 3230 168c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3231 168e 3949     		ldr	r1, .L291+4
 3232 1690 1346     		mov	r3, r2
 3233 1692 DB00     		lsls	r3, r3, #3
 3234 1694 9B1A     		subs	r3, r3, r2
 3235 1696 1B01     		lsls	r3, r3, #4
 3236 1698 0B44     		add	r3, r3, r1
 3237 169a E833     		adds	r3, r3, #232
 3238 169c 1968     		ldr	r1, [r3]
 3239 169e 07F5B053 		add	r3, r7, #5632
 3240 16a2 03F10F03 		add	r3, r3, #15
 3241 16a6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3242 16a8 3148     		ldr	r0, .L291
 3243 16aa 1346     		mov	r3, r2
 3244 16ac DB00     		lsls	r3, r3, #3
 3245 16ae 9B1A     		subs	r3, r3, r2
 3246 16b0 1B01     		lsls	r3, r3, #4
 3247 16b2 0344     		add	r3, r3, r0
 3248 16b4 03F58873 		add	r3, r3, #272
 3249 16b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3250 16ba 1846     		mov	r0, r3
 3251 16bc 2D4A     		ldr	r2, .L291+4
 3252 16be 0346     		mov	r3, r0
 3253 16c0 5B00     		lsls	r3, r3, #1
 3254 16c2 0344     		add	r3, r3, r0
 3255 16c4 1B01     		lsls	r3, r3, #4
 3256 16c6 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 85


 3257 16c8 03F29513 		addw	r3, r3, #405
 3258 16cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3259 16ce 41FA03F2 		asr	r2, r1, r3
 3260 16d2 07F11803 		add	r3, r7, #24
 3261 16d6 043B     		subs	r3, r3, #4
 3262 16d8 1A60     		str	r2, [r3]
 558:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3263              		.loc 1 558 0
 3264 16da 0023     		movs	r3, #0
 3265 16dc 07F5B052 		add	r2, r7, #5632
 3266 16e0 02F11602 		add	r2, r2, #22
 3267 16e4 1370     		strb	r3, [r2]
 3268 16e6 34E0     		b	.L156
 3269              	.L157:
 559:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 3270              		.loc 1 559 0 discriminator 3
 3271 16e8 07F5B053 		add	r3, r7, #5632
 3272 16ec 03F11503 		add	r3, r3, #21
 3273 16f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3274 16f2 3222     		movs	r2, #50
 3275 16f4 02FB03F3 		mul	r3, r2, r3
 3276 16f8 1A1D     		adds	r2, r3, #4
 3277 16fa 07F5B053 		add	r3, r7, #5632
 3278 16fe 03F11303 		add	r3, r3, #19
 3279 1702 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3280 1704 1A44     		add	r2, r2, r3
 3281 1706 07F5B053 		add	r3, r7, #5632
 3282 170a 03F11303 		add	r3, r3, #19
 3283 170e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3284 1710 1A44     		add	r2, r2, r3
 3285 1712 07F5B053 		add	r3, r7, #5632
 3286 1716 03F11603 		add	r3, r3, #22
 3287 171a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3288 171c D31A     		subs	r3, r2, r3
 3289 171e 5A1E     		subs	r2, r3, #1
 3290 1720 07F5B053 		add	r3, r7, #5632
 3291 1724 03F11603 		add	r3, r3, #22
 3292 1728 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3293 172a 07F11803 		add	r3, r7, #24
 3294 172e 043B     		subs	r3, r3, #4
 3295 1730 0B44     		add	r3, r3, r1
 3296 1732 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3297 1734 07F15803 		add	r3, r7, #88
 3298 1738 043B     		subs	r3, r3, #4
 3299 173a 9954     		strb	r1, [r3, r2]
 558:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3300              		.loc 1 558 0 discriminator 3
 3301 173c 07F5B053 		add	r3, r7, #5632
 3302 1740 03F11603 		add	r3, r3, #22
 3303 1744 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3304 1746 0133     		adds	r3, r3, #1
 3305 1748 07F5B052 		add	r2, r7, #5632
 3306 174c 02F11602 		add	r2, r2, #22
 3307 1750 1370     		strb	r3, [r2]
 3308              	.L156:
 558:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3309              		.loc 1 558 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 86


 3310 1752 07F5B053 		add	r3, r7, #5632
 3311 1756 03F11603 		add	r3, r3, #22
 3312 175a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3313 175c 07F5B053 		add	r3, r7, #5632
 3314 1760 03F11303 		add	r3, r3, #19
 3315 1764 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3316 1766 9A42     		cmp	r2, r3
 3317 1768 BED3     		bcc	.L157
 560:..\src/command_processing.c ****                         }
 561:..\src/command_processing.c ****                         break;            
 3318              		.loc 1 561 0 is_stmt 1
 3319 176a 00F0AEBE 		b	.L110
 3320              	.L292:
 3321 176e 00BF     		.align	2
 3322              	.L291:
 3323 1770 00000000 		.word	g_mem
 3324 1774 00000000 		.word	c_mem
 3325              	.L117:
 562:..\src/command_processing.c **** 
 563:..\src/command_processing.c ****                     case 23:        //Rest Position
 564:..\src/command_processing.c ****                         aux_int32 = (c_mem.SH.rest_pos >> c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_
 3326              		.loc 1 564 0
 3327 1778 CF4B     		ldr	r3, .L293
 3328 177a D3F8A012 		ldr	r1, [r3, #672]
 3329 177e 07F5B053 		add	r3, r7, #5632
 3330 1782 03F10F03 		add	r3, r3, #15
 3331 1786 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3332 1788 CC48     		ldr	r0, .L293+4
 3333 178a 1346     		mov	r3, r2
 3334 178c DB00     		lsls	r3, r3, #3
 3335 178e 9B1A     		subs	r3, r3, r2
 3336 1790 1B01     		lsls	r3, r3, #4
 3337 1792 0344     		add	r3, r3, r0
 3338 1794 03F58873 		add	r3, r3, #272
 3339 1798 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3340 179a 1846     		mov	r0, r3
 3341 179c C64A     		ldr	r2, .L293
 3342 179e 0346     		mov	r3, r0
 3343 17a0 5B00     		lsls	r3, r3, #1
 3344 17a2 0344     		add	r3, r3, r0
 3345 17a4 1B01     		lsls	r3, r3, #4
 3346 17a6 1344     		add	r3, r3, r2
 3347 17a8 03F29513 		addw	r3, r3, #405
 3348 17ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3349 17ae 41FA03F2 		asr	r2, r1, r3
 3350 17b2 07F11803 		add	r3, r7, #24
 3351 17b6 043B     		subs	r3, r3, #4
 3352 17b8 1A60     		str	r2, [r3]
 565:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3353              		.loc 1 565 0
 3354 17ba 0023     		movs	r3, #0
 3355 17bc 07F5B052 		add	r2, r7, #5632
 3356 17c0 02F11602 		add	r2, r2, #22
 3357 17c4 1370     		strb	r3, [r2]
 3358 17c6 2EE0     		b	.L158
 3359              	.L159:
 566:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 87


 3360              		.loc 1 566 0 discriminator 3
 3361 17c8 07F5B053 		add	r3, r7, #5632
 3362 17cc 03F11503 		add	r3, r3, #21
 3363 17d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3364 17d2 3222     		movs	r2, #50
 3365 17d4 02FB03F3 		mul	r3, r2, r3
 3366 17d8 1A1D     		adds	r2, r3, #4
 3367 17da 07F5B053 		add	r3, r7, #5632
 3368 17de 03F11303 		add	r3, r3, #19
 3369 17e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3370 17e4 1A44     		add	r2, r2, r3
 3371 17e6 07F5B053 		add	r3, r7, #5632
 3372 17ea 03F11603 		add	r3, r3, #22
 3373 17ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3374 17f0 D31A     		subs	r3, r2, r3
 3375 17f2 5A1E     		subs	r2, r3, #1
 3376 17f4 07F5B053 		add	r3, r7, #5632
 3377 17f8 03F11603 		add	r3, r3, #22
 3378 17fc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3379 17fe 07F11803 		add	r3, r7, #24
 3380 1802 043B     		subs	r3, r3, #4
 3381 1804 0B44     		add	r3, r3, r1
 3382 1806 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3383 1808 07F15803 		add	r3, r7, #88
 3384 180c 043B     		subs	r3, r3, #4
 3385 180e 9954     		strb	r1, [r3, r2]
 565:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3386              		.loc 1 565 0 discriminator 3
 3387 1810 07F5B053 		add	r3, r7, #5632
 3388 1814 03F11603 		add	r3, r3, #22
 3389 1818 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3390 181a 0133     		adds	r3, r3, #1
 3391 181c 07F5B052 		add	r2, r7, #5632
 3392 1820 02F11602 		add	r2, r2, #22
 3393 1824 1370     		strb	r3, [r2]
 3394              	.L158:
 565:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3395              		.loc 1 565 0 is_stmt 0 discriminator 1
 3396 1826 07F5B053 		add	r3, r7, #5632
 3397 182a 03F11603 		add	r3, r3, #22
 3398 182e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3399 1830 07F5B053 		add	r3, r7, #5632
 3400 1834 03F11303 		add	r3, r3, #19
 3401 1838 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3402 183a 9A42     		cmp	r2, r3
 3403 183c C4D3     		bcc	.L159
 567:..\src/command_processing.c ****                         }
 568:..\src/command_processing.c ****                         break; 
 3404              		.loc 1 568 0 is_stmt 1
 3405 183e 00F044BE 		b	.L110
 3406              	.L118:
 569:..\src/command_processing.c ****                         
 570:..\src/command_processing.c ****                     case 44:         // Second Motor Position PID
 571:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 3407              		.loc 1 571 0
 3408 1842 07F5B053 		add	r3, r7, #5632
 3409 1846 03F10E03 		add	r3, r3, #14
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 88


 3410 184a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3411 184c 9A49     		ldr	r1, .L293
 3412 184e 1346     		mov	r3, r2
 3413 1850 DB00     		lsls	r3, r3, #3
 3414 1852 9B1A     		subs	r3, r3, r2
 3415 1854 1B01     		lsls	r3, r3, #4
 3416 1856 0B44     		add	r3, r3, r1
 3417 1858 03F20F13 		addw	r3, r3, #271
 3418 185c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3419 185e 032B     		cmp	r3, #3
 3420 1860 00F02E81 		beq	.L160
 572:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p / 65536;
 3421              		.loc 1 572 0
 3422 1864 07F5B053 		add	r3, r7, #5632
 3423 1868 03F10E03 		add	r3, r3, #14
 3424 186c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3425 186e 9249     		ldr	r1, .L293
 3426 1870 1346     		mov	r3, r2
 3427 1872 DB00     		lsls	r3, r3, #3
 3428 1874 9B1A     		subs	r3, r3, r2
 3429 1876 1B01     		lsls	r3, r3, #4
 3430 1878 0B44     		add	r3, r3, r1
 3431 187a B033     		adds	r3, r3, #176
 3432 187c 1B68     		ldr	r3, [r3]
 3433 187e 1846     		mov	r0, r3
 3434 1880 FFF7FEFF 		bl	__aeabi_i2f
 3435 1884 0346     		mov	r3, r0
 3436 1886 4FF08F41 		mov	r1, #1199570944
 3437 188a 1846     		mov	r0, r3
 3438 188c FFF7FEFF 		bl	__aeabi_fdiv
 3439 1890 0346     		mov	r3, r0
 3440 1892 1A46     		mov	r2, r3
 3441 1894 07F13803 		add	r3, r7, #56
 3442 1898 1C3B     		subs	r3, r3, #28
 3443 189a 1A60     		str	r2, [r3]	@ float
 573:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3444              		.loc 1 573 0
 3445 189c 0023     		movs	r3, #0
 3446 189e 07F5B052 		add	r2, r7, #5632
 3447 18a2 02F11702 		add	r2, r2, #23
 3448 18a6 1370     		strb	r3, [r2]
 3449 18a8 2EE0     		b	.L161
 3450              	.L162:
 574:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3451              		.loc 1 574 0 discriminator 3
 3452 18aa 07F5B053 		add	r3, r7, #5632
 3453 18ae 03F11503 		add	r3, r3, #21
 3454 18b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3455 18b4 3222     		movs	r2, #50
 3456 18b6 02FB03F3 		mul	r3, r2, r3
 3457 18ba 1A1D     		adds	r2, r3, #4
 3458 18bc 07F5B053 		add	r3, r7, #5632
 3459 18c0 03F11303 		add	r3, r3, #19
 3460 18c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3461 18c6 1A44     		add	r2, r2, r3
 3462 18c8 07F5B053 		add	r3, r7, #5632
 3463 18cc 03F11703 		add	r3, r3, #23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 89


 3464 18d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3465 18d2 D31A     		subs	r3, r2, r3
 3466 18d4 5A1E     		subs	r2, r3, #1
 3467 18d6 07F5B053 		add	r3, r7, #5632
 3468 18da 03F11703 		add	r3, r3, #23
 3469 18de 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3470 18e0 07F13803 		add	r3, r7, #56
 3471 18e4 1C3B     		subs	r3, r3, #28
 3472 18e6 0B44     		add	r3, r3, r1
 3473 18e8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3474 18ea 07F15803 		add	r3, r7, #88
 3475 18ee 043B     		subs	r3, r3, #4
 3476 18f0 9954     		strb	r1, [r3, r2]
 573:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3477              		.loc 1 573 0 discriminator 3
 3478 18f2 07F5B053 		add	r3, r7, #5632
 3479 18f6 03F11703 		add	r3, r3, #23
 3480 18fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3481 18fc 0133     		adds	r3, r3, #1
 3482 18fe 07F5B052 		add	r2, r7, #5632
 3483 1902 02F11702 		add	r2, r2, #23
 3484 1906 1370     		strb	r3, [r2]
 3485              	.L161:
 573:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3486              		.loc 1 573 0 is_stmt 0 discriminator 1
 3487 1908 07F5B053 		add	r3, r7, #5632
 3488 190c 03F11703 		add	r3, r3, #23
 3489 1910 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3490 1912 07F5B053 		add	r3, r7, #5632
 3491 1916 03F11303 		add	r3, r3, #19
 3492 191a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3493 191c 9A42     		cmp	r2, r3
 3494 191e C4D3     		bcc	.L162
 575:..\src/command_processing.c ****                             }
 576:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i / 65536;
 3495              		.loc 1 576 0 is_stmt 1
 3496 1920 07F5B053 		add	r3, r7, #5632
 3497 1924 03F10E03 		add	r3, r3, #14
 3498 1928 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3499 192a 6349     		ldr	r1, .L293
 3500 192c 1346     		mov	r3, r2
 3501 192e DB00     		lsls	r3, r3, #3
 3502 1930 9B1A     		subs	r3, r3, r2
 3503 1932 1B01     		lsls	r3, r3, #4
 3504 1934 0B44     		add	r3, r3, r1
 3505 1936 B433     		adds	r3, r3, #180
 3506 1938 1B68     		ldr	r3, [r3]
 3507 193a 1846     		mov	r0, r3
 3508 193c FFF7FEFF 		bl	__aeabi_i2f
 3509 1940 0346     		mov	r3, r0
 3510 1942 4FF08F41 		mov	r1, #1199570944
 3511 1946 1846     		mov	r0, r3
 3512 1948 FFF7FEFF 		bl	__aeabi_fdiv
 3513 194c 0346     		mov	r3, r0
 3514 194e 1A46     		mov	r2, r3
 3515 1950 07F13803 		add	r3, r7, #56
 3516 1954 1C3B     		subs	r3, r3, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 90


 3517 1956 1A60     		str	r2, [r3]	@ float
 577:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3518              		.loc 1 577 0
 3519 1958 0023     		movs	r3, #0
 3520 195a 07F5B052 		add	r2, r7, #5632
 3521 195e 02F11702 		add	r2, r2, #23
 3522 1962 1370     		strb	r3, [r2]
 3523 1964 34E0     		b	.L163
 3524              	.L164:
 578:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3525              		.loc 1 578 0 discriminator 3
 3526 1966 07F5B053 		add	r3, r7, #5632
 3527 196a 03F11503 		add	r3, r3, #21
 3528 196e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3529 1970 3222     		movs	r2, #50
 3530 1972 02FB03F3 		mul	r3, r2, r3
 3531 1976 1A1D     		adds	r2, r3, #4
 3532 1978 07F5B053 		add	r3, r7, #5632
 3533 197c 03F11303 		add	r3, r3, #19
 3534 1980 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3535 1982 1A44     		add	r2, r2, r3
 3536 1984 07F5B053 		add	r3, r7, #5632
 3537 1988 03F11303 		add	r3, r3, #19
 3538 198c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3539 198e 1A44     		add	r2, r2, r3
 3540 1990 07F5B053 		add	r3, r7, #5632
 3541 1994 03F11703 		add	r3, r3, #23
 3542 1998 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3543 199a D31A     		subs	r3, r2, r3
 3544 199c 5A1E     		subs	r2, r3, #1
 3545 199e 07F5B053 		add	r3, r7, #5632
 3546 19a2 03F11703 		add	r3, r3, #23
 3547 19a6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3548 19a8 07F13803 		add	r3, r7, #56
 3549 19ac 1C3B     		subs	r3, r3, #28
 3550 19ae 0B44     		add	r3, r3, r1
 3551 19b0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3552 19b2 07F15803 		add	r3, r7, #88
 3553 19b6 043B     		subs	r3, r3, #4
 3554 19b8 9954     		strb	r1, [r3, r2]
 577:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3555              		.loc 1 577 0 discriminator 3
 3556 19ba 07F5B053 		add	r3, r7, #5632
 3557 19be 03F11703 		add	r3, r3, #23
 3558 19c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3559 19c4 0133     		adds	r3, r3, #1
 3560 19c6 07F5B052 		add	r2, r7, #5632
 3561 19ca 02F11702 		add	r2, r2, #23
 3562 19ce 1370     		strb	r3, [r2]
 3563              	.L163:
 577:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3564              		.loc 1 577 0 is_stmt 0 discriminator 1
 3565 19d0 07F5B053 		add	r3, r7, #5632
 3566 19d4 03F11703 		add	r3, r3, #23
 3567 19d8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3568 19da 07F5B053 		add	r3, r7, #5632
 3569 19de 03F11303 		add	r3, r3, #19
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 91


 3570 19e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3571 19e4 9A42     		cmp	r2, r3
 3572 19e6 BED3     		bcc	.L164
 579:..\src/command_processing.c ****                             }
 580:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d / 65536;
 3573              		.loc 1 580 0 is_stmt 1
 3574 19e8 07F5B053 		add	r3, r7, #5632
 3575 19ec 03F10E03 		add	r3, r3, #14
 3576 19f0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3577 19f2 3149     		ldr	r1, .L293
 3578 19f4 1346     		mov	r3, r2
 3579 19f6 DB00     		lsls	r3, r3, #3
 3580 19f8 9B1A     		subs	r3, r3, r2
 3581 19fa 1B01     		lsls	r3, r3, #4
 3582 19fc 0B44     		add	r3, r3, r1
 3583 19fe B833     		adds	r3, r3, #184
 3584 1a00 1B68     		ldr	r3, [r3]
 3585 1a02 1846     		mov	r0, r3
 3586 1a04 FFF7FEFF 		bl	__aeabi_i2f
 3587 1a08 0346     		mov	r3, r0
 3588 1a0a 4FF08F41 		mov	r1, #1199570944
 3589 1a0e 1846     		mov	r0, r3
 3590 1a10 FFF7FEFF 		bl	__aeabi_fdiv
 3591 1a14 0346     		mov	r3, r0
 3592 1a16 1A46     		mov	r2, r3
 3593 1a18 07F13803 		add	r3, r7, #56
 3594 1a1c 1C3B     		subs	r3, r3, #28
 3595 1a1e 1A60     		str	r2, [r3]	@ float
 581:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3596              		.loc 1 581 0
 3597 1a20 0023     		movs	r3, #0
 3598 1a22 07F5B052 		add	r2, r7, #5632
 3599 1a26 02F11702 		add	r2, r2, #23
 3600 1a2a 1370     		strb	r3, [r2]
 3601 1a2c 35E0     		b	.L165
 3602              	.L166:
 582:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3603              		.loc 1 582 0 discriminator 3
 3604 1a2e 07F5B053 		add	r3, r7, #5632
 3605 1a32 03F11503 		add	r3, r3, #21
 3606 1a36 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3607 1a38 3222     		movs	r2, #50
 3608 1a3a 02FB03F3 		mul	r3, r2, r3
 3609 1a3e 1A1D     		adds	r2, r3, #4
 3610 1a40 07F5B053 		add	r3, r7, #5632
 3611 1a44 03F11303 		add	r3, r3, #19
 3612 1a48 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3613 1a4a 5B00     		lsls	r3, r3, #1
 3614 1a4c 1A44     		add	r2, r2, r3
 3615 1a4e 07F5B053 		add	r3, r7, #5632
 3616 1a52 03F11303 		add	r3, r3, #19
 3617 1a56 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3618 1a58 1A44     		add	r2, r2, r3
 3619 1a5a 07F5B053 		add	r3, r7, #5632
 3620 1a5e 03F11703 		add	r3, r3, #23
 3621 1a62 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3622 1a64 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 92


 3623 1a66 5A1E     		subs	r2, r3, #1
 3624 1a68 07F5B053 		add	r3, r7, #5632
 3625 1a6c 03F11703 		add	r3, r3, #23
 3626 1a70 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3627 1a72 07F13803 		add	r3, r7, #56
 3628 1a76 1C3B     		subs	r3, r3, #28
 3629 1a78 0B44     		add	r3, r3, r1
 3630 1a7a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3631 1a7c 07F15803 		add	r3, r7, #88
 3632 1a80 043B     		subs	r3, r3, #4
 3633 1a82 9954     		strb	r1, [r3, r2]
 581:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3634              		.loc 1 581 0 discriminator 3
 3635 1a84 07F5B053 		add	r3, r7, #5632
 3636 1a88 03F11703 		add	r3, r3, #23
 3637 1a8c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3638 1a8e 0133     		adds	r3, r3, #1
 3639 1a90 07F5B052 		add	r2, r7, #5632
 3640 1a94 02F11702 		add	r2, r2, #23
 3641 1a98 1370     		strb	r3, [r2]
 3642              	.L165:
 581:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3643              		.loc 1 581 0 is_stmt 0 discriminator 1
 3644 1a9a 07F5B053 		add	r3, r7, #5632
 3645 1a9e 03F11703 		add	r3, r3, #23
 3646 1aa2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3647 1aa4 07F5B053 		add	r3, r7, #5632
 3648 1aa8 03F11303 		add	r3, r3, #19
 3649 1aac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3650 1aae 9A42     		cmp	r2, r3
 3651 1ab0 BDD3     		bcc	.L166
 583:..\src/command_processing.c ****                             } 
 584:..\src/command_processing.c ****                         }
 585:..\src/command_processing.c ****                         else {
 586:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_dl / 65536;
 587:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 588:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 589:..\src/command_processing.c ****                             }
 590:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_dl / 65536;
 591:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 592:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 593:..\src/command_processing.c ****                             }
 594:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_dl / 65536;
 595:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 596:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 597:..\src/command_processing.c ****                             }
 598:..\src/command_processing.c ****                         }
 599:..\src/command_processing.c ****                         break;
 3652              		.loc 1 599 0 is_stmt 1
 3653 1ab2 00F00ABD 		b	.L110
 3654              	.L294:
 3655 1ab6 00BF     		.align	2
 3656              	.L293:
 3657 1ab8 00000000 		.word	c_mem
 3658 1abc 00000000 		.word	g_mem
 3659              	.L160:
 586:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 93


 3660              		.loc 1 586 0
 3661 1ac0 07F5B053 		add	r3, r7, #5632
 3662 1ac4 03F10E03 		add	r3, r3, #14
 3663 1ac8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3664 1aca AB49     		ldr	r1, .L295
 3665 1acc 1346     		mov	r3, r2
 3666 1ace DB00     		lsls	r3, r3, #3
 3667 1ad0 9B1A     		subs	r3, r3, r2
 3668 1ad2 1B01     		lsls	r3, r3, #4
 3669 1ad4 0B44     		add	r3, r3, r1
 3670 1ad6 C833     		adds	r3, r3, #200
 3671 1ad8 1B68     		ldr	r3, [r3]
 3672 1ada 1846     		mov	r0, r3
 3673 1adc FFF7FEFF 		bl	__aeabi_i2f
 3674 1ae0 0346     		mov	r3, r0
 3675 1ae2 4FF08F41 		mov	r1, #1199570944
 3676 1ae6 1846     		mov	r0, r3
 3677 1ae8 FFF7FEFF 		bl	__aeabi_fdiv
 3678 1aec 0346     		mov	r3, r0
 3679 1aee 1A46     		mov	r2, r3
 3680 1af0 07F13803 		add	r3, r7, #56
 3681 1af4 1C3B     		subs	r3, r3, #28
 3682 1af6 1A60     		str	r2, [r3]	@ float
 587:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3683              		.loc 1 587 0
 3684 1af8 0023     		movs	r3, #0
 3685 1afa 07F5B052 		add	r2, r7, #5632
 3686 1afe 02F11702 		add	r2, r2, #23
 3687 1b02 1370     		strb	r3, [r2]
 3688 1b04 2EE0     		b	.L168
 3689              	.L169:
 588:..\src/command_processing.c ****                             }
 3690              		.loc 1 588 0 discriminator 3
 3691 1b06 07F5B053 		add	r3, r7, #5632
 3692 1b0a 03F11503 		add	r3, r3, #21
 3693 1b0e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3694 1b10 3222     		movs	r2, #50
 3695 1b12 02FB03F3 		mul	r3, r2, r3
 3696 1b16 1A1D     		adds	r2, r3, #4
 3697 1b18 07F5B053 		add	r3, r7, #5632
 3698 1b1c 03F11303 		add	r3, r3, #19
 3699 1b20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3700 1b22 1A44     		add	r2, r2, r3
 3701 1b24 07F5B053 		add	r3, r7, #5632
 3702 1b28 03F11703 		add	r3, r3, #23
 3703 1b2c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3704 1b2e D31A     		subs	r3, r2, r3
 3705 1b30 5A1E     		subs	r2, r3, #1
 3706 1b32 07F5B053 		add	r3, r7, #5632
 3707 1b36 03F11703 		add	r3, r3, #23
 3708 1b3a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3709 1b3c 07F13803 		add	r3, r7, #56
 3710 1b40 1C3B     		subs	r3, r3, #28
 3711 1b42 0B44     		add	r3, r3, r1
 3712 1b44 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3713 1b46 07F15803 		add	r3, r7, #88
 3714 1b4a 043B     		subs	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 94


 3715 1b4c 9954     		strb	r1, [r3, r2]
 587:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3716              		.loc 1 587 0 discriminator 3
 3717 1b4e 07F5B053 		add	r3, r7, #5632
 3718 1b52 03F11703 		add	r3, r3, #23
 3719 1b56 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3720 1b58 0133     		adds	r3, r3, #1
 3721 1b5a 07F5B052 		add	r2, r7, #5632
 3722 1b5e 02F11702 		add	r2, r2, #23
 3723 1b62 1370     		strb	r3, [r2]
 3724              	.L168:
 587:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3725              		.loc 1 587 0 is_stmt 0 discriminator 1
 3726 1b64 07F5B053 		add	r3, r7, #5632
 3727 1b68 03F11703 		add	r3, r3, #23
 3728 1b6c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3729 1b6e 07F5B053 		add	r3, r7, #5632
 3730 1b72 03F11303 		add	r3, r3, #19
 3731 1b76 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3732 1b78 9A42     		cmp	r2, r3
 3733 1b7a C4D3     		bcc	.L169
 590:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3734              		.loc 1 590 0 is_stmt 1
 3735 1b7c 07F5B053 		add	r3, r7, #5632
 3736 1b80 03F10E03 		add	r3, r3, #14
 3737 1b84 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3738 1b86 7C49     		ldr	r1, .L295
 3739 1b88 1346     		mov	r3, r2
 3740 1b8a DB00     		lsls	r3, r3, #3
 3741 1b8c 9B1A     		subs	r3, r3, r2
 3742 1b8e 1B01     		lsls	r3, r3, #4
 3743 1b90 0B44     		add	r3, r3, r1
 3744 1b92 CC33     		adds	r3, r3, #204
 3745 1b94 1B68     		ldr	r3, [r3]
 3746 1b96 1846     		mov	r0, r3
 3747 1b98 FFF7FEFF 		bl	__aeabi_i2f
 3748 1b9c 0346     		mov	r3, r0
 3749 1b9e 4FF08F41 		mov	r1, #1199570944
 3750 1ba2 1846     		mov	r0, r3
 3751 1ba4 FFF7FEFF 		bl	__aeabi_fdiv
 3752 1ba8 0346     		mov	r3, r0
 3753 1baa 1A46     		mov	r2, r3
 3754 1bac 07F13803 		add	r3, r7, #56
 3755 1bb0 1C3B     		subs	r3, r3, #28
 3756 1bb2 1A60     		str	r2, [r3]	@ float
 591:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3757              		.loc 1 591 0
 3758 1bb4 0023     		movs	r3, #0
 3759 1bb6 07F5B052 		add	r2, r7, #5632
 3760 1bba 02F11702 		add	r2, r2, #23
 3761 1bbe 1370     		strb	r3, [r2]
 3762 1bc0 34E0     		b	.L170
 3763              	.L171:
 592:..\src/command_processing.c ****                             }
 3764              		.loc 1 592 0 discriminator 3
 3765 1bc2 07F5B053 		add	r3, r7, #5632
 3766 1bc6 03F11503 		add	r3, r3, #21
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 95


 3767 1bca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3768 1bcc 3222     		movs	r2, #50
 3769 1bce 02FB03F3 		mul	r3, r2, r3
 3770 1bd2 1A1D     		adds	r2, r3, #4
 3771 1bd4 07F5B053 		add	r3, r7, #5632
 3772 1bd8 03F11303 		add	r3, r3, #19
 3773 1bdc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3774 1bde 1A44     		add	r2, r2, r3
 3775 1be0 07F5B053 		add	r3, r7, #5632
 3776 1be4 03F11303 		add	r3, r3, #19
 3777 1be8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3778 1bea 1A44     		add	r2, r2, r3
 3779 1bec 07F5B053 		add	r3, r7, #5632
 3780 1bf0 03F11703 		add	r3, r3, #23
 3781 1bf4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3782 1bf6 D31A     		subs	r3, r2, r3
 3783 1bf8 5A1E     		subs	r2, r3, #1
 3784 1bfa 07F5B053 		add	r3, r7, #5632
 3785 1bfe 03F11703 		add	r3, r3, #23
 3786 1c02 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3787 1c04 07F13803 		add	r3, r7, #56
 3788 1c08 1C3B     		subs	r3, r3, #28
 3789 1c0a 0B44     		add	r3, r3, r1
 3790 1c0c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3791 1c0e 07F15803 		add	r3, r7, #88
 3792 1c12 043B     		subs	r3, r3, #4
 3793 1c14 9954     		strb	r1, [r3, r2]
 591:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3794              		.loc 1 591 0 discriminator 3
 3795 1c16 07F5B053 		add	r3, r7, #5632
 3796 1c1a 03F11703 		add	r3, r3, #23
 3797 1c1e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3798 1c20 0133     		adds	r3, r3, #1
 3799 1c22 07F5B052 		add	r2, r7, #5632
 3800 1c26 02F11702 		add	r2, r2, #23
 3801 1c2a 1370     		strb	r3, [r2]
 3802              	.L170:
 591:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3803              		.loc 1 591 0 is_stmt 0 discriminator 1
 3804 1c2c 07F5B053 		add	r3, r7, #5632
 3805 1c30 03F11703 		add	r3, r3, #23
 3806 1c34 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3807 1c36 07F5B053 		add	r3, r7, #5632
 3808 1c3a 03F11303 		add	r3, r3, #19
 3809 1c3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3810 1c40 9A42     		cmp	r2, r3
 3811 1c42 BED3     		bcc	.L171
 594:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3812              		.loc 1 594 0 is_stmt 1
 3813 1c44 07F5B053 		add	r3, r7, #5632
 3814 1c48 03F10E03 		add	r3, r3, #14
 3815 1c4c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3816 1c4e 4A49     		ldr	r1, .L295
 3817 1c50 1346     		mov	r3, r2
 3818 1c52 DB00     		lsls	r3, r3, #3
 3819 1c54 9B1A     		subs	r3, r3, r2
 3820 1c56 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 96


 3821 1c58 0B44     		add	r3, r3, r1
 3822 1c5a D033     		adds	r3, r3, #208
 3823 1c5c 1B68     		ldr	r3, [r3]
 3824 1c5e 1846     		mov	r0, r3
 3825 1c60 FFF7FEFF 		bl	__aeabi_i2f
 3826 1c64 0346     		mov	r3, r0
 3827 1c66 4FF08F41 		mov	r1, #1199570944
 3828 1c6a 1846     		mov	r0, r3
 3829 1c6c FFF7FEFF 		bl	__aeabi_fdiv
 3830 1c70 0346     		mov	r3, r0
 3831 1c72 1A46     		mov	r2, r3
 3832 1c74 07F13803 		add	r3, r7, #56
 3833 1c78 1C3B     		subs	r3, r3, #28
 3834 1c7a 1A60     		str	r2, [r3]	@ float
 595:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3835              		.loc 1 595 0
 3836 1c7c 0023     		movs	r3, #0
 3837 1c7e 07F5B052 		add	r2, r7, #5632
 3838 1c82 02F11702 		add	r2, r2, #23
 3839 1c86 1370     		strb	r3, [r2]
 3840 1c88 35E0     		b	.L172
 3841              	.L173:
 596:..\src/command_processing.c ****                             }
 3842              		.loc 1 596 0 discriminator 3
 3843 1c8a 07F5B053 		add	r3, r7, #5632
 3844 1c8e 03F11503 		add	r3, r3, #21
 3845 1c92 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3846 1c94 3222     		movs	r2, #50
 3847 1c96 02FB03F3 		mul	r3, r2, r3
 3848 1c9a 1A1D     		adds	r2, r3, #4
 3849 1c9c 07F5B053 		add	r3, r7, #5632
 3850 1ca0 03F11303 		add	r3, r3, #19
 3851 1ca4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3852 1ca6 5B00     		lsls	r3, r3, #1
 3853 1ca8 1A44     		add	r2, r2, r3
 3854 1caa 07F5B053 		add	r3, r7, #5632
 3855 1cae 03F11303 		add	r3, r3, #19
 3856 1cb2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3857 1cb4 1A44     		add	r2, r2, r3
 3858 1cb6 07F5B053 		add	r3, r7, #5632
 3859 1cba 03F11703 		add	r3, r3, #23
 3860 1cbe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3861 1cc0 D31A     		subs	r3, r2, r3
 3862 1cc2 5A1E     		subs	r2, r3, #1
 3863 1cc4 07F5B053 		add	r3, r7, #5632
 3864 1cc8 03F11703 		add	r3, r3, #23
 3865 1ccc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3866 1cce 07F13803 		add	r3, r7, #56
 3867 1cd2 1C3B     		subs	r3, r3, #28
 3868 1cd4 0B44     		add	r3, r3, r1
 3869 1cd6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3870 1cd8 07F15803 		add	r3, r7, #88
 3871 1cdc 043B     		subs	r3, r3, #4
 3872 1cde 9954     		strb	r1, [r3, r2]
 595:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3873              		.loc 1 595 0 discriminator 3
 3874 1ce0 07F5B053 		add	r3, r7, #5632
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 97


 3875 1ce4 03F11703 		add	r3, r3, #23
 3876 1ce8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3877 1cea 0133     		adds	r3, r3, #1
 3878 1cec 07F5B052 		add	r2, r7, #5632
 3879 1cf0 02F11702 		add	r2, r2, #23
 3880 1cf4 1370     		strb	r3, [r2]
 3881              	.L172:
 595:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3882              		.loc 1 595 0 is_stmt 0 discriminator 1
 3883 1cf6 07F5B053 		add	r3, r7, #5632
 3884 1cfa 03F11703 		add	r3, r3, #23
 3885 1cfe 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3886 1d00 07F5B053 		add	r3, r7, #5632
 3887 1d04 03F11303 		add	r3, r3, #19
 3888 1d08 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3889 1d0a 9A42     		cmp	r2, r3
 3890 1d0c BDD3     		bcc	.L173
 3891              		.loc 1 599 0 is_stmt 1
 3892 1d0e DCE3     		b	.L110
 3893              	.L119:
 600:..\src/command_processing.c ****                         
 601:..\src/command_processing.c ****                     case 45:         // Second Motor Current PID
 602:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 3894              		.loc 1 602 0
 3895 1d10 07F5B053 		add	r3, r7, #5632
 3896 1d14 03F10E03 		add	r3, r3, #14
 3897 1d18 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3898 1d1a 1749     		ldr	r1, .L295
 3899 1d1c 1346     		mov	r3, r2
 3900 1d1e DB00     		lsls	r3, r3, #3
 3901 1d20 9B1A     		subs	r3, r3, r2
 3902 1d22 1B01     		lsls	r3, r3, #4
 3903 1d24 0B44     		add	r3, r3, r1
 3904 1d26 03F20F13 		addw	r3, r3, #271
 3905 1d2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3906 1d2c 032B     		cmp	r3, #3
 3907 1d2e 00F02A81 		beq	.L174
 603:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c / 65536;
 3908              		.loc 1 603 0
 3909 1d32 07F5B053 		add	r3, r7, #5632
 3910 1d36 03F10E03 		add	r3, r3, #14
 3911 1d3a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3912 1d3c 0E49     		ldr	r1, .L295
 3913 1d3e 1346     		mov	r3, r2
 3914 1d40 DB00     		lsls	r3, r3, #3
 3915 1d42 9B1A     		subs	r3, r3, r2
 3916 1d44 1B01     		lsls	r3, r3, #4
 3917 1d46 0B44     		add	r3, r3, r1
 3918 1d48 BC33     		adds	r3, r3, #188
 3919 1d4a 1B68     		ldr	r3, [r3]
 3920 1d4c 1846     		mov	r0, r3
 3921 1d4e FFF7FEFF 		bl	__aeabi_i2f
 3922 1d52 0346     		mov	r3, r0
 3923 1d54 4FF08F41 		mov	r1, #1199570944
 3924 1d58 1846     		mov	r0, r3
 3925 1d5a FFF7FEFF 		bl	__aeabi_fdiv
 3926 1d5e 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 98


 3927 1d60 1A46     		mov	r2, r3
 3928 1d62 07F13803 		add	r3, r7, #56
 3929 1d66 1C3B     		subs	r3, r3, #28
 3930 1d68 1A60     		str	r2, [r3]	@ float
 604:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3931              		.loc 1 604 0
 3932 1d6a 0023     		movs	r3, #0
 3933 1d6c 07F5B052 		add	r2, r7, #5632
 3934 1d70 02F11702 		add	r2, r2, #23
 3935 1d74 1370     		strb	r3, [r2]
 3936 1d76 30E0     		b	.L175
 3937              	.L296:
 3938              		.align	2
 3939              	.L295:
 3940 1d78 00000000 		.word	c_mem
 3941              	.L176:
 605:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3942              		.loc 1 605 0 discriminator 3
 3943 1d7c 07F5B053 		add	r3, r7, #5632
 3944 1d80 03F11503 		add	r3, r3, #21
 3945 1d84 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3946 1d86 3222     		movs	r2, #50
 3947 1d88 02FB03F3 		mul	r3, r2, r3
 3948 1d8c 1A1D     		adds	r2, r3, #4
 3949 1d8e 07F5B053 		add	r3, r7, #5632
 3950 1d92 03F11303 		add	r3, r3, #19
 3951 1d96 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3952 1d98 1A44     		add	r2, r2, r3
 3953 1d9a 07F5B053 		add	r3, r7, #5632
 3954 1d9e 03F11703 		add	r3, r3, #23
 3955 1da2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3956 1da4 D31A     		subs	r3, r2, r3
 3957 1da6 5A1E     		subs	r2, r3, #1
 3958 1da8 07F5B053 		add	r3, r7, #5632
 3959 1dac 03F11703 		add	r3, r3, #23
 3960 1db0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3961 1db2 07F13803 		add	r3, r7, #56
 3962 1db6 1C3B     		subs	r3, r3, #28
 3963 1db8 0B44     		add	r3, r3, r1
 3964 1dba 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3965 1dbc 07F15803 		add	r3, r7, #88
 3966 1dc0 043B     		subs	r3, r3, #4
 3967 1dc2 9954     		strb	r1, [r3, r2]
 604:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3968              		.loc 1 604 0 discriminator 3
 3969 1dc4 07F5B053 		add	r3, r7, #5632
 3970 1dc8 03F11703 		add	r3, r3, #23
 3971 1dcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3972 1dce 0133     		adds	r3, r3, #1
 3973 1dd0 07F5B052 		add	r2, r7, #5632
 3974 1dd4 02F11702 		add	r2, r2, #23
 3975 1dd8 1370     		strb	r3, [r2]
 3976              	.L175:
 604:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3977              		.loc 1 604 0 is_stmt 0 discriminator 1
 3978 1dda 07F5B053 		add	r3, r7, #5632
 3979 1dde 03F11703 		add	r3, r3, #23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 99


 3980 1de2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3981 1de4 07F5B053 		add	r3, r7, #5632
 3982 1de8 03F11303 		add	r3, r3, #19
 3983 1dec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3984 1dee 9A42     		cmp	r2, r3
 3985 1df0 C4D3     		bcc	.L176
 606:..\src/command_processing.c ****                             }
 607:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c / 65536;
 3986              		.loc 1 607 0 is_stmt 1
 3987 1df2 07F5B053 		add	r3, r7, #5632
 3988 1df6 03F10E03 		add	r3, r3, #14
 3989 1dfa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3990 1dfc A249     		ldr	r1, .L297
 3991 1dfe 1346     		mov	r3, r2
 3992 1e00 DB00     		lsls	r3, r3, #3
 3993 1e02 9B1A     		subs	r3, r3, r2
 3994 1e04 1B01     		lsls	r3, r3, #4
 3995 1e06 0B44     		add	r3, r3, r1
 3996 1e08 C033     		adds	r3, r3, #192
 3997 1e0a 1B68     		ldr	r3, [r3]
 3998 1e0c 1846     		mov	r0, r3
 3999 1e0e FFF7FEFF 		bl	__aeabi_i2f
 4000 1e12 0346     		mov	r3, r0
 4001 1e14 4FF08F41 		mov	r1, #1199570944
 4002 1e18 1846     		mov	r0, r3
 4003 1e1a FFF7FEFF 		bl	__aeabi_fdiv
 4004 1e1e 0346     		mov	r3, r0
 4005 1e20 1A46     		mov	r2, r3
 4006 1e22 07F13803 		add	r3, r7, #56
 4007 1e26 1C3B     		subs	r3, r3, #28
 4008 1e28 1A60     		str	r2, [r3]	@ float
 608:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4009              		.loc 1 608 0
 4010 1e2a 0023     		movs	r3, #0
 4011 1e2c 07F5B052 		add	r2, r7, #5632
 4012 1e30 02F11702 		add	r2, r2, #23
 4013 1e34 1370     		strb	r3, [r2]
 4014 1e36 34E0     		b	.L177
 4015              	.L178:
 609:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4016              		.loc 1 609 0 discriminator 3
 4017 1e38 07F5B053 		add	r3, r7, #5632
 4018 1e3c 03F11503 		add	r3, r3, #21
 4019 1e40 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4020 1e42 3222     		movs	r2, #50
 4021 1e44 02FB03F3 		mul	r3, r2, r3
 4022 1e48 1A1D     		adds	r2, r3, #4
 4023 1e4a 07F5B053 		add	r3, r7, #5632
 4024 1e4e 03F11303 		add	r3, r3, #19
 4025 1e52 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4026 1e54 1A44     		add	r2, r2, r3
 4027 1e56 07F5B053 		add	r3, r7, #5632
 4028 1e5a 03F11303 		add	r3, r3, #19
 4029 1e5e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4030 1e60 1A44     		add	r2, r2, r3
 4031 1e62 07F5B053 		add	r3, r7, #5632
 4032 1e66 03F11703 		add	r3, r3, #23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 100


 4033 1e6a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4034 1e6c D31A     		subs	r3, r2, r3
 4035 1e6e 5A1E     		subs	r2, r3, #1
 4036 1e70 07F5B053 		add	r3, r7, #5632
 4037 1e74 03F11703 		add	r3, r3, #23
 4038 1e78 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4039 1e7a 07F13803 		add	r3, r7, #56
 4040 1e7e 1C3B     		subs	r3, r3, #28
 4041 1e80 0B44     		add	r3, r3, r1
 4042 1e82 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4043 1e84 07F15803 		add	r3, r7, #88
 4044 1e88 043B     		subs	r3, r3, #4
 4045 1e8a 9954     		strb	r1, [r3, r2]
 608:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4046              		.loc 1 608 0 discriminator 3
 4047 1e8c 07F5B053 		add	r3, r7, #5632
 4048 1e90 03F11703 		add	r3, r3, #23
 4049 1e94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4050 1e96 0133     		adds	r3, r3, #1
 4051 1e98 07F5B052 		add	r2, r7, #5632
 4052 1e9c 02F11702 		add	r2, r2, #23
 4053 1ea0 1370     		strb	r3, [r2]
 4054              	.L177:
 608:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4055              		.loc 1 608 0 is_stmt 0 discriminator 1
 4056 1ea2 07F5B053 		add	r3, r7, #5632
 4057 1ea6 03F11703 		add	r3, r3, #23
 4058 1eaa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4059 1eac 07F5B053 		add	r3, r7, #5632
 4060 1eb0 03F11303 		add	r3, r3, #19
 4061 1eb4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4062 1eb6 9A42     		cmp	r2, r3
 4063 1eb8 BED3     		bcc	.L178
 610:..\src/command_processing.c ****                             }
 611:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c / 65536;
 4064              		.loc 1 611 0 is_stmt 1
 4065 1eba 07F5B053 		add	r3, r7, #5632
 4066 1ebe 03F10E03 		add	r3, r3, #14
 4067 1ec2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4068 1ec4 7049     		ldr	r1, .L297
 4069 1ec6 1346     		mov	r3, r2
 4070 1ec8 DB00     		lsls	r3, r3, #3
 4071 1eca 9B1A     		subs	r3, r3, r2
 4072 1ecc 1B01     		lsls	r3, r3, #4
 4073 1ece 0B44     		add	r3, r3, r1
 4074 1ed0 C433     		adds	r3, r3, #196
 4075 1ed2 1B68     		ldr	r3, [r3]
 4076 1ed4 1846     		mov	r0, r3
 4077 1ed6 FFF7FEFF 		bl	__aeabi_i2f
 4078 1eda 0346     		mov	r3, r0
 4079 1edc 4FF08F41 		mov	r1, #1199570944
 4080 1ee0 1846     		mov	r0, r3
 4081 1ee2 FFF7FEFF 		bl	__aeabi_fdiv
 4082 1ee6 0346     		mov	r3, r0
 4083 1ee8 1A46     		mov	r2, r3
 4084 1eea 07F13803 		add	r3, r7, #56
 4085 1eee 1C3B     		subs	r3, r3, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 101


 4086 1ef0 1A60     		str	r2, [r3]	@ float
 612:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4087              		.loc 1 612 0
 4088 1ef2 0023     		movs	r3, #0
 4089 1ef4 07F5B052 		add	r2, r7, #5632
 4090 1ef8 02F11702 		add	r2, r2, #23
 4091 1efc 1370     		strb	r3, [r2]
 4092 1efe 35E0     		b	.L179
 4093              	.L180:
 613:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4094              		.loc 1 613 0 discriminator 3
 4095 1f00 07F5B053 		add	r3, r7, #5632
 4096 1f04 03F11503 		add	r3, r3, #21
 4097 1f08 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4098 1f0a 3222     		movs	r2, #50
 4099 1f0c 02FB03F3 		mul	r3, r2, r3
 4100 1f10 1A1D     		adds	r2, r3, #4
 4101 1f12 07F5B053 		add	r3, r7, #5632
 4102 1f16 03F11303 		add	r3, r3, #19
 4103 1f1a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4104 1f1c 5B00     		lsls	r3, r3, #1
 4105 1f1e 1A44     		add	r2, r2, r3
 4106 1f20 07F5B053 		add	r3, r7, #5632
 4107 1f24 03F11303 		add	r3, r3, #19
 4108 1f28 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4109 1f2a 1A44     		add	r2, r2, r3
 4110 1f2c 07F5B053 		add	r3, r7, #5632
 4111 1f30 03F11703 		add	r3, r3, #23
 4112 1f34 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4113 1f36 D31A     		subs	r3, r2, r3
 4114 1f38 5A1E     		subs	r2, r3, #1
 4115 1f3a 07F5B053 		add	r3, r7, #5632
 4116 1f3e 03F11703 		add	r3, r3, #23
 4117 1f42 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4118 1f44 07F13803 		add	r3, r7, #56
 4119 1f48 1C3B     		subs	r3, r3, #28
 4120 1f4a 0B44     		add	r3, r3, r1
 4121 1f4c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4122 1f4e 07F15803 		add	r3, r7, #88
 4123 1f52 043B     		subs	r3, r3, #4
 4124 1f54 9954     		strb	r1, [r3, r2]
 612:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4125              		.loc 1 612 0 discriminator 3
 4126 1f56 07F5B053 		add	r3, r7, #5632
 4127 1f5a 03F11703 		add	r3, r3, #23
 4128 1f5e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4129 1f60 0133     		adds	r3, r3, #1
 4130 1f62 07F5B052 		add	r2, r7, #5632
 4131 1f66 02F11702 		add	r2, r2, #23
 4132 1f6a 1370     		strb	r3, [r2]
 4133              	.L179:
 612:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4134              		.loc 1 612 0 is_stmt 0 discriminator 1
 4135 1f6c 07F5B053 		add	r3, r7, #5632
 4136 1f70 03F11703 		add	r3, r3, #23
 4137 1f74 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4138 1f76 07F5B053 		add	r3, r7, #5632
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 102


 4139 1f7a 03F11303 		add	r3, r3, #19
 4140 1f7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4141 1f80 9A42     		cmp	r2, r3
 4142 1f82 BDD3     		bcc	.L180
 614:..\src/command_processing.c ****                             }
 615:..\src/command_processing.c ****                         }
 616:..\src/command_processing.c ****                         else {
 617:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl / 65536;
 618:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 619:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 620:..\src/command_processing.c ****                             }
 621:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl / 65536;
 622:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 623:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 624:..\src/command_processing.c ****                             }
 625:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl / 65536;
 626:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 627:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 628:..\src/command_processing.c ****                             }
 629:..\src/command_processing.c ****                         }            
 630:..\src/command_processing.c ****                         break;  
 4143              		.loc 1 630 0 is_stmt 1
 4144 1f84 A1E2     		b	.L110
 4145              	.L174:
 617:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4146              		.loc 1 617 0
 4147 1f86 07F5B053 		add	r3, r7, #5632
 4148 1f8a 03F10E03 		add	r3, r3, #14
 4149 1f8e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4150 1f90 3D49     		ldr	r1, .L297
 4151 1f92 1346     		mov	r3, r2
 4152 1f94 DB00     		lsls	r3, r3, #3
 4153 1f96 9B1A     		subs	r3, r3, r2
 4154 1f98 1B01     		lsls	r3, r3, #4
 4155 1f9a 0B44     		add	r3, r3, r1
 4156 1f9c D433     		adds	r3, r3, #212
 4157 1f9e 1B68     		ldr	r3, [r3]
 4158 1fa0 1846     		mov	r0, r3
 4159 1fa2 FFF7FEFF 		bl	__aeabi_i2f
 4160 1fa6 0346     		mov	r3, r0
 4161 1fa8 4FF08F41 		mov	r1, #1199570944
 4162 1fac 1846     		mov	r0, r3
 4163 1fae FFF7FEFF 		bl	__aeabi_fdiv
 4164 1fb2 0346     		mov	r3, r0
 4165 1fb4 1A46     		mov	r2, r3
 4166 1fb6 07F13803 		add	r3, r7, #56
 4167 1fba 1C3B     		subs	r3, r3, #28
 4168 1fbc 1A60     		str	r2, [r3]	@ float
 618:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4169              		.loc 1 618 0
 4170 1fbe 0023     		movs	r3, #0
 4171 1fc0 07F5B052 		add	r2, r7, #5632
 4172 1fc4 02F11702 		add	r2, r2, #23
 4173 1fc8 1370     		strb	r3, [r2]
 4174 1fca 2EE0     		b	.L182
 4175              	.L183:
 619:..\src/command_processing.c ****                             }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 103


 4176              		.loc 1 619 0 discriminator 3
 4177 1fcc 07F5B053 		add	r3, r7, #5632
 4178 1fd0 03F11503 		add	r3, r3, #21
 4179 1fd4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4180 1fd6 3222     		movs	r2, #50
 4181 1fd8 02FB03F3 		mul	r3, r2, r3
 4182 1fdc 1A1D     		adds	r2, r3, #4
 4183 1fde 07F5B053 		add	r3, r7, #5632
 4184 1fe2 03F11303 		add	r3, r3, #19
 4185 1fe6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4186 1fe8 1A44     		add	r2, r2, r3
 4187 1fea 07F5B053 		add	r3, r7, #5632
 4188 1fee 03F11703 		add	r3, r3, #23
 4189 1ff2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4190 1ff4 D31A     		subs	r3, r2, r3
 4191 1ff6 5A1E     		subs	r2, r3, #1
 4192 1ff8 07F5B053 		add	r3, r7, #5632
 4193 1ffc 03F11703 		add	r3, r3, #23
 4194 2000 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4195 2002 07F13803 		add	r3, r7, #56
 4196 2006 1C3B     		subs	r3, r3, #28
 4197 2008 0B44     		add	r3, r3, r1
 4198 200a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4199 200c 07F15803 		add	r3, r7, #88
 4200 2010 043B     		subs	r3, r3, #4
 4201 2012 9954     		strb	r1, [r3, r2]
 618:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4202              		.loc 1 618 0 discriminator 3
 4203 2014 07F5B053 		add	r3, r7, #5632
 4204 2018 03F11703 		add	r3, r3, #23
 4205 201c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4206 201e 0133     		adds	r3, r3, #1
 4207 2020 07F5B052 		add	r2, r7, #5632
 4208 2024 02F11702 		add	r2, r2, #23
 4209 2028 1370     		strb	r3, [r2]
 4210              	.L182:
 618:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4211              		.loc 1 618 0 is_stmt 0 discriminator 1
 4212 202a 07F5B053 		add	r3, r7, #5632
 4213 202e 03F11703 		add	r3, r3, #23
 4214 2032 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4215 2034 07F5B053 		add	r3, r7, #5632
 4216 2038 03F11303 		add	r3, r3, #19
 4217 203c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4218 203e 9A42     		cmp	r2, r3
 4219 2040 C4D3     		bcc	.L183
 621:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4220              		.loc 1 621 0 is_stmt 1
 4221 2042 07F5B053 		add	r3, r7, #5632
 4222 2046 03F10E03 		add	r3, r3, #14
 4223 204a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4224 204c 0E49     		ldr	r1, .L297
 4225 204e 1346     		mov	r3, r2
 4226 2050 DB00     		lsls	r3, r3, #3
 4227 2052 9B1A     		subs	r3, r3, r2
 4228 2054 1B01     		lsls	r3, r3, #4
 4229 2056 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 104


 4230 2058 D833     		adds	r3, r3, #216
 4231 205a 1B68     		ldr	r3, [r3]
 4232 205c 1846     		mov	r0, r3
 4233 205e FFF7FEFF 		bl	__aeabi_i2f
 4234 2062 0346     		mov	r3, r0
 4235 2064 4FF08F41 		mov	r1, #1199570944
 4236 2068 1846     		mov	r0, r3
 4237 206a FFF7FEFF 		bl	__aeabi_fdiv
 4238 206e 0346     		mov	r3, r0
 4239 2070 1A46     		mov	r2, r3
 4240 2072 07F13803 		add	r3, r7, #56
 4241 2076 1C3B     		subs	r3, r3, #28
 4242 2078 1A60     		str	r2, [r3]	@ float
 622:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4243              		.loc 1 622 0
 4244 207a 0023     		movs	r3, #0
 4245 207c 07F5B052 		add	r2, r7, #5632
 4246 2080 02F11702 		add	r2, r2, #23
 4247 2084 1370     		strb	r3, [r2]
 4248 2086 36E0     		b	.L184
 4249              	.L298:
 4250              		.align	2
 4251              	.L297:
 4252 2088 00000000 		.word	c_mem
 4253              	.L185:
 623:..\src/command_processing.c ****                             }
 4254              		.loc 1 623 0 discriminator 3
 4255 208c 07F5B053 		add	r3, r7, #5632
 4256 2090 03F11503 		add	r3, r3, #21
 4257 2094 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4258 2096 3222     		movs	r2, #50
 4259 2098 02FB03F3 		mul	r3, r2, r3
 4260 209c 1A1D     		adds	r2, r3, #4
 4261 209e 07F5B053 		add	r3, r7, #5632
 4262 20a2 03F11303 		add	r3, r3, #19
 4263 20a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4264 20a8 1A44     		add	r2, r2, r3
 4265 20aa 07F5B053 		add	r3, r7, #5632
 4266 20ae 03F11303 		add	r3, r3, #19
 4267 20b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4268 20b4 1A44     		add	r2, r2, r3
 4269 20b6 07F5B053 		add	r3, r7, #5632
 4270 20ba 03F11703 		add	r3, r3, #23
 4271 20be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4272 20c0 D31A     		subs	r3, r2, r3
 4273 20c2 5A1E     		subs	r2, r3, #1
 4274 20c4 07F5B053 		add	r3, r7, #5632
 4275 20c8 03F11703 		add	r3, r3, #23
 4276 20cc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4277 20ce 07F13803 		add	r3, r7, #56
 4278 20d2 1C3B     		subs	r3, r3, #28
 4279 20d4 0B44     		add	r3, r3, r1
 4280 20d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4281 20d8 07F15803 		add	r3, r7, #88
 4282 20dc 043B     		subs	r3, r3, #4
 4283 20de 9954     		strb	r1, [r3, r2]
 622:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 105


 4284              		.loc 1 622 0 discriminator 3
 4285 20e0 07F5B053 		add	r3, r7, #5632
 4286 20e4 03F11703 		add	r3, r3, #23
 4287 20e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4288 20ea 0133     		adds	r3, r3, #1
 4289 20ec 07F5B052 		add	r2, r7, #5632
 4290 20f0 02F11702 		add	r2, r2, #23
 4291 20f4 1370     		strb	r3, [r2]
 4292              	.L184:
 622:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4293              		.loc 1 622 0 is_stmt 0 discriminator 1
 4294 20f6 07F5B053 		add	r3, r7, #5632
 4295 20fa 03F11703 		add	r3, r3, #23
 4296 20fe 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4297 2100 07F5B053 		add	r3, r7, #5632
 4298 2104 03F11303 		add	r3, r3, #19
 4299 2108 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4300 210a 9A42     		cmp	r2, r3
 4301 210c BED3     		bcc	.L185
 625:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4302              		.loc 1 625 0 is_stmt 1
 4303 210e 07F5B053 		add	r3, r7, #5632
 4304 2112 03F10E03 		add	r3, r3, #14
 4305 2116 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4306 2118 C849     		ldr	r1, .L299
 4307 211a 1346     		mov	r3, r2
 4308 211c DB00     		lsls	r3, r3, #3
 4309 211e 9B1A     		subs	r3, r3, r2
 4310 2120 1B01     		lsls	r3, r3, #4
 4311 2122 0B44     		add	r3, r3, r1
 4312 2124 DC33     		adds	r3, r3, #220
 4313 2126 1B68     		ldr	r3, [r3]
 4314 2128 1846     		mov	r0, r3
 4315 212a FFF7FEFF 		bl	__aeabi_i2f
 4316 212e 0346     		mov	r3, r0
 4317 2130 4FF08F41 		mov	r1, #1199570944
 4318 2134 1846     		mov	r0, r3
 4319 2136 FFF7FEFF 		bl	__aeabi_fdiv
 4320 213a 0346     		mov	r3, r0
 4321 213c 1A46     		mov	r2, r3
 4322 213e 07F13803 		add	r3, r7, #56
 4323 2142 1C3B     		subs	r3, r3, #28
 4324 2144 1A60     		str	r2, [r3]	@ float
 626:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4325              		.loc 1 626 0
 4326 2146 0023     		movs	r3, #0
 4327 2148 07F5B052 		add	r2, r7, #5632
 4328 214c 02F11702 		add	r2, r2, #23
 4329 2150 1370     		strb	r3, [r2]
 4330 2152 35E0     		b	.L186
 4331              	.L187:
 627:..\src/command_processing.c ****                             }
 4332              		.loc 1 627 0 discriminator 3
 4333 2154 07F5B053 		add	r3, r7, #5632
 4334 2158 03F11503 		add	r3, r3, #21
 4335 215c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4336 215e 3222     		movs	r2, #50
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 106


 4337 2160 02FB03F3 		mul	r3, r2, r3
 4338 2164 1A1D     		adds	r2, r3, #4
 4339 2166 07F5B053 		add	r3, r7, #5632
 4340 216a 03F11303 		add	r3, r3, #19
 4341 216e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4342 2170 5B00     		lsls	r3, r3, #1
 4343 2172 1A44     		add	r2, r2, r3
 4344 2174 07F5B053 		add	r3, r7, #5632
 4345 2178 03F11303 		add	r3, r3, #19
 4346 217c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4347 217e 1A44     		add	r2, r2, r3
 4348 2180 07F5B053 		add	r3, r7, #5632
 4349 2184 03F11703 		add	r3, r3, #23
 4350 2188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4351 218a D31A     		subs	r3, r2, r3
 4352 218c 5A1E     		subs	r2, r3, #1
 4353 218e 07F5B053 		add	r3, r7, #5632
 4354 2192 03F11703 		add	r3, r3, #23
 4355 2196 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4356 2198 07F13803 		add	r3, r7, #56
 4357 219c 1C3B     		subs	r3, r3, #28
 4358 219e 0B44     		add	r3, r3, r1
 4359 21a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4360 21a2 07F15803 		add	r3, r7, #88
 4361 21a6 043B     		subs	r3, r3, #4
 4362 21a8 9954     		strb	r1, [r3, r2]
 626:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4363              		.loc 1 626 0 discriminator 3
 4364 21aa 07F5B053 		add	r3, r7, #5632
 4365 21ae 03F11703 		add	r3, r3, #23
 4366 21b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4367 21b4 0133     		adds	r3, r3, #1
 4368 21b6 07F5B052 		add	r2, r7, #5632
 4369 21ba 02F11702 		add	r2, r2, #23
 4370 21be 1370     		strb	r3, [r2]
 4371              	.L186:
 626:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4372              		.loc 1 626 0 is_stmt 0 discriminator 1
 4373 21c0 07F5B053 		add	r3, r7, #5632
 4374 21c4 03F11703 		add	r3, r3, #23
 4375 21c8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4376 21ca 07F5B053 		add	r3, r7, #5632
 4377 21ce 03F11303 		add	r3, r3, #19
 4378 21d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4379 21d4 9A42     		cmp	r2, r3
 4380 21d6 BDD3     		bcc	.L187
 4381              		.loc 1 630 0 is_stmt 1
 4382 21d8 77E1     		b	.L110
 4383              	.L120:
 631:..\src/command_processing.c **** 
 632:..\src/command_processing.c ****                     case 50:         // Second Motor Measurement Offset
 633:..\src/command_processing.c ****                         aux_int16 = (c_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i]
 4384              		.loc 1 633 0
 4385 21da 07F5B053 		add	r3, r7, #5632
 4386 21de 03F10E03 		add	r3, r3, #14
 4387 21e2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4388 21e4 9649     		ldr	r1, .L299+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 107


 4389 21e6 1346     		mov	r3, r2
 4390 21e8 DB00     		lsls	r3, r3, #3
 4391 21ea 9B1A     		subs	r3, r3, r2
 4392 21ec 1B01     		lsls	r3, r3, #4
 4393 21ee 0B44     		add	r3, r3, r1
 4394 21f0 03F58873 		add	r3, r3, #272
 4395 21f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4396 21f6 1846     		mov	r0, r3
 4397 21f8 07F5B053 		add	r3, r7, #5632
 4398 21fc 03F11703 		add	r3, r3, #23
 4399 2200 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4400 2202 8E49     		ldr	r1, .L299
 4401 2204 0346     		mov	r3, r0
 4402 2206 5B00     		lsls	r3, r3, #1
 4403 2208 0344     		add	r3, r3, r0
 4404 220a 9B00     		lsls	r3, r3, #2
 4405 220c 1344     		add	r3, r3, r2
 4406 220e 6633     		adds	r3, r3, #102
 4407 2210 51F82310 		ldr	r1, [r1, r3, lsl #2]
 4408 2214 07F5B053 		add	r3, r7, #5632
 4409 2218 03F10E03 		add	r3, r3, #14
 4410 221c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4411 221e 8848     		ldr	r0, .L299+4
 4412 2220 1346     		mov	r3, r2
 4413 2222 DB00     		lsls	r3, r3, #3
 4414 2224 9B1A     		subs	r3, r3, r2
 4415 2226 1B01     		lsls	r3, r3, #4
 4416 2228 0344     		add	r3, r3, r0
 4417 222a 03F58873 		add	r3, r3, #272
 4418 222e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4419 2230 1C46     		mov	r4, r3
 4420 2232 07F5B053 		add	r3, r7, #5632
 4421 2236 03F11703 		add	r3, r3, #23
 4422 223a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4423 223c 7F48     		ldr	r0, .L299
 4424 223e 2346     		mov	r3, r4
 4425 2240 5B00     		lsls	r3, r3, #1
 4426 2242 2344     		add	r3, r3, r4
 4427 2244 1B01     		lsls	r3, r3, #4
 4428 2246 0344     		add	r3, r3, r0
 4429 2248 1344     		add	r3, r3, r2
 4430 224a 03F29513 		addw	r3, r3, #405
 4431 224e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4432 2250 41FA03F3 		asr	r3, r1, r3
 4433 2254 1AB2     		sxth	r2, r3
 4434 2256 07F13803 		add	r3, r7, #56
 4435 225a 1E3B     		subs	r3, r3, #30
 4436 225c 1A80     		strh	r2, [r3]	@ movhi
 634:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4437              		.loc 1 634 0
 4438 225e 0023     		movs	r3, #0
 4439 2260 07F5B052 		add	r2, r7, #5632
 4440 2264 02F11602 		add	r2, r2, #22
 4441 2268 1370     		strb	r3, [r2]
 4442 226a 3BE0     		b	.L188
 4443              	.L189:
 635:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 108


 4444              		.loc 1 635 0 discriminator 3
 4445 226c 07F5B053 		add	r3, r7, #5632
 4446 2270 03F11503 		add	r3, r3, #21
 4447 2274 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4448 2276 3222     		movs	r2, #50
 4449 2278 02FB03F3 		mul	r3, r2, r3
 4450 227c 1A1D     		adds	r2, r3, #4
 4451 227e 07F5B053 		add	r3, r7, #5632
 4452 2282 03F11703 		add	r3, r3, #23
 4453 2286 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4454 2288 07F5B051 		add	r1, r7, #5632
 4455 228c 01F11301 		add	r1, r1, #19
 4456 2290 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4457 2292 01FB03F3 		mul	r3, r1, r3
 4458 2296 1A44     		add	r2, r2, r3
 4459 2298 07F5B053 		add	r3, r7, #5632
 4460 229c 03F11303 		add	r3, r3, #19
 4461 22a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4462 22a2 1A44     		add	r2, r2, r3
 4463 22a4 07F5B053 		add	r3, r7, #5632
 4464 22a8 03F11603 		add	r3, r3, #22
 4465 22ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4466 22ae D31A     		subs	r3, r2, r3
 4467 22b0 5A1E     		subs	r2, r3, #1
 4468 22b2 07F5B053 		add	r3, r7, #5632
 4469 22b6 03F11603 		add	r3, r3, #22
 4470 22ba 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4471 22bc 07F13803 		add	r3, r7, #56
 4472 22c0 1E3B     		subs	r3, r3, #30
 4473 22c2 0B44     		add	r3, r3, r1
 4474 22c4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4475 22c6 07F15803 		add	r3, r7, #88
 4476 22ca 043B     		subs	r3, r3, #4
 4477 22cc 9954     		strb	r1, [r3, r2]
 634:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4478              		.loc 1 634 0 discriminator 3
 4479 22ce 07F5B053 		add	r3, r7, #5632
 4480 22d2 03F11603 		add	r3, r3, #22
 4481 22d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4482 22d8 0133     		adds	r3, r3, #1
 4483 22da 07F5B052 		add	r2, r7, #5632
 4484 22de 02F11602 		add	r2, r2, #22
 4485 22e2 1370     		strb	r3, [r2]
 4486              	.L188:
 634:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4487              		.loc 1 634 0 is_stmt 0 discriminator 1
 4488 22e4 07F5B053 		add	r3, r7, #5632
 4489 22e8 03F11603 		add	r3, r3, #22
 4490 22ec 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4491 22ee 07F5B053 		add	r3, r7, #5632
 4492 22f2 03F11303 		add	r3, r3, #19
 4493 22f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4494 22f8 9A42     		cmp	r2, r3
 4495 22fa B7D3     		bcc	.L189
 636:..\src/command_processing.c ****                         }
 637:..\src/command_processing.c ****                         break;
 4496              		.loc 1 637 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 109


 4497 22fc E5E0     		b	.L110
 4498              	.L121:
 638:..\src/command_processing.c ****                 
 639:..\src/command_processing.c ****                     case 53:        // Second Motor Position limits
 640:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.m
 4499              		.loc 1 640 0
 4500 22fe 07F5B053 		add	r3, r7, #5632
 4501 2302 03F10E03 		add	r3, r3, #14
 4502 2306 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4503 2308 4C49     		ldr	r1, .L299
 4504 230a 1346     		mov	r3, r2
 4505 230c DB00     		lsls	r3, r3, #3
 4506 230e 9B1A     		subs	r3, r3, r2
 4507 2310 1B01     		lsls	r3, r3, #4
 4508 2312 0B44     		add	r3, r3, r1
 4509 2314 E433     		adds	r3, r3, #228
 4510 2316 1968     		ldr	r1, [r3]
 4511 2318 07F5B053 		add	r3, r7, #5632
 4512 231c 03F10E03 		add	r3, r3, #14
 4513 2320 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4514 2322 4748     		ldr	r0, .L299+4
 4515 2324 1346     		mov	r3, r2
 4516 2326 DB00     		lsls	r3, r3, #3
 4517 2328 9B1A     		subs	r3, r3, r2
 4518 232a 1B01     		lsls	r3, r3, #4
 4519 232c 0344     		add	r3, r3, r0
 4520 232e 03F58873 		add	r3, r3, #272
 4521 2332 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4522 2334 1846     		mov	r0, r3
 4523 2336 414A     		ldr	r2, .L299
 4524 2338 0346     		mov	r3, r0
 4525 233a 5B00     		lsls	r3, r3, #1
 4526 233c 0344     		add	r3, r3, r0
 4527 233e 1B01     		lsls	r3, r3, #4
 4528 2340 1344     		add	r3, r3, r2
 4529 2342 03F29513 		addw	r3, r3, #405
 4530 2346 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4531 2348 41FA03F2 		asr	r2, r1, r3
 4532 234c 07F11803 		add	r3, r7, #24
 4533 2350 043B     		subs	r3, r3, #4
 4534 2352 1A60     		str	r2, [r3]
 641:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4535              		.loc 1 641 0
 4536 2354 0023     		movs	r3, #0
 4537 2356 07F5B052 		add	r2, r7, #5632
 4538 235a 02F11602 		add	r2, r2, #22
 4539 235e 1370     		strb	r3, [r2]
 4540 2360 2EE0     		b	.L190
 4541              	.L191:
 642:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 4542              		.loc 1 642 0 discriminator 3
 4543 2362 07F5B053 		add	r3, r7, #5632
 4544 2366 03F11503 		add	r3, r3, #21
 4545 236a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4546 236c 3222     		movs	r2, #50
 4547 236e 02FB03F3 		mul	r3, r2, r3
 4548 2372 1A1D     		adds	r2, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 110


 4549 2374 07F5B053 		add	r3, r7, #5632
 4550 2378 03F11303 		add	r3, r3, #19
 4551 237c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4552 237e 1A44     		add	r2, r2, r3
 4553 2380 07F5B053 		add	r3, r7, #5632
 4554 2384 03F11603 		add	r3, r3, #22
 4555 2388 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4556 238a D31A     		subs	r3, r2, r3
 4557 238c 5A1E     		subs	r2, r3, #1
 4558 238e 07F5B053 		add	r3, r7, #5632
 4559 2392 03F11603 		add	r3, r3, #22
 4560 2396 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4561 2398 07F11803 		add	r3, r7, #24
 4562 239c 043B     		subs	r3, r3, #4
 4563 239e 0B44     		add	r3, r3, r1
 4564 23a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4565 23a2 07F15803 		add	r3, r7, #88
 4566 23a6 043B     		subs	r3, r3, #4
 4567 23a8 9954     		strb	r1, [r3, r2]
 641:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4568              		.loc 1 641 0 discriminator 3
 4569 23aa 07F5B053 		add	r3, r7, #5632
 4570 23ae 03F11603 		add	r3, r3, #22
 4571 23b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4572 23b4 0133     		adds	r3, r3, #1
 4573 23b6 07F5B052 		add	r2, r7, #5632
 4574 23ba 02F11602 		add	r2, r2, #22
 4575 23be 1370     		strb	r3, [r2]
 4576              	.L190:
 641:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4577              		.loc 1 641 0 is_stmt 0 discriminator 1
 4578 23c0 07F5B053 		add	r3, r7, #5632
 4579 23c4 03F11603 		add	r3, r3, #22
 4580 23c8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4581 23ca 07F5B053 		add	r3, r7, #5632
 4582 23ce 03F11303 		add	r3, r3, #19
 4583 23d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4584 23d4 9A42     		cmp	r2, r3
 4585 23d6 C4D3     		bcc	.L191
 643:..\src/command_processing.c ****                         }
 644:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.m
 4586              		.loc 1 644 0 is_stmt 1
 4587 23d8 07F5B053 		add	r3, r7, #5632
 4588 23dc 03F10E03 		add	r3, r3, #14
 4589 23e0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4590 23e2 1649     		ldr	r1, .L299
 4591 23e4 1346     		mov	r3, r2
 4592 23e6 DB00     		lsls	r3, r3, #3
 4593 23e8 9B1A     		subs	r3, r3, r2
 4594 23ea 1B01     		lsls	r3, r3, #4
 4595 23ec 0B44     		add	r3, r3, r1
 4596 23ee E833     		adds	r3, r3, #232
 4597 23f0 1968     		ldr	r1, [r3]
 4598 23f2 07F5B053 		add	r3, r7, #5632
 4599 23f6 03F10E03 		add	r3, r3, #14
 4600 23fa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4601 23fc 1048     		ldr	r0, .L299+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 111


 4602 23fe 1346     		mov	r3, r2
 4603 2400 DB00     		lsls	r3, r3, #3
 4604 2402 9B1A     		subs	r3, r3, r2
 4605 2404 1B01     		lsls	r3, r3, #4
 4606 2406 0344     		add	r3, r3, r0
 4607 2408 03F58873 		add	r3, r3, #272
 4608 240c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4609 240e 1846     		mov	r0, r3
 4610 2410 0A4A     		ldr	r2, .L299
 4611 2412 0346     		mov	r3, r0
 4612 2414 5B00     		lsls	r3, r3, #1
 4613 2416 0344     		add	r3, r3, r0
 4614 2418 1B01     		lsls	r3, r3, #4
 4615 241a 1344     		add	r3, r3, r2
 4616 241c 03F29513 		addw	r3, r3, #405
 4617 2420 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4618 2422 41FA03F2 		asr	r2, r1, r3
 4619 2426 07F11803 		add	r3, r7, #24
 4620 242a 043B     		subs	r3, r3, #4
 4621 242c 1A60     		str	r2, [r3]
 645:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4622              		.loc 1 645 0
 4623 242e 0023     		movs	r3, #0
 4624 2430 07F5B052 		add	r2, r7, #5632
 4625 2434 02F11602 		add	r2, r2, #22
 4626 2438 1370     		strb	r3, [r2]
 4627 243a 38E0     		b	.L192
 4628              	.L300:
 4629              		.align	2
 4630              	.L299:
 4631 243c 00000000 		.word	c_mem
 4632 2440 00000000 		.word	g_mem
 4633              	.L193:
 646:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 4634              		.loc 1 646 0 discriminator 3
 4635 2444 07F5B053 		add	r3, r7, #5632
 4636 2448 03F11503 		add	r3, r3, #21
 4637 244c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4638 244e 3222     		movs	r2, #50
 4639 2450 02FB03F3 		mul	r3, r2, r3
 4640 2454 1A1D     		adds	r2, r3, #4
 4641 2456 07F5B053 		add	r3, r7, #5632
 4642 245a 03F11303 		add	r3, r3, #19
 4643 245e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4644 2460 1A44     		add	r2, r2, r3
 4645 2462 07F5B053 		add	r3, r7, #5632
 4646 2466 03F11303 		add	r3, r3, #19
 4647 246a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4648 246c 1A44     		add	r2, r2, r3
 4649 246e 07F5B053 		add	r3, r7, #5632
 4650 2472 03F11603 		add	r3, r3, #22
 4651 2476 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4652 2478 D31A     		subs	r3, r2, r3
 4653 247a 5A1E     		subs	r2, r3, #1
 4654 247c 07F5B053 		add	r3, r7, #5632
 4655 2480 03F11603 		add	r3, r3, #22
 4656 2484 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 112


 4657 2486 07F11803 		add	r3, r7, #24
 4658 248a 043B     		subs	r3, r3, #4
 4659 248c 0B44     		add	r3, r3, r1
 4660 248e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4661 2490 07F15803 		add	r3, r7, #88
 4662 2494 043B     		subs	r3, r3, #4
 4663 2496 9954     		strb	r1, [r3, r2]
 645:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4664              		.loc 1 645 0 discriminator 3
 4665 2498 07F5B053 		add	r3, r7, #5632
 4666 249c 03F11603 		add	r3, r3, #22
 4667 24a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4668 24a2 0133     		adds	r3, r3, #1
 4669 24a4 07F5B052 		add	r2, r7, #5632
 4670 24a8 02F11602 		add	r2, r2, #22
 4671 24ac 1370     		strb	r3, [r2]
 4672              	.L192:
 645:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4673              		.loc 1 645 0 is_stmt 0 discriminator 1
 4674 24ae 07F5B053 		add	r3, r7, #5632
 4675 24b2 03F11603 		add	r3, r3, #22
 4676 24b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4677 24b8 07F5B053 		add	r3, r7, #5632
 4678 24bc 03F11303 		add	r3, r3, #19
 4679 24c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4680 24c2 9A42     		cmp	r2, r3
 4681 24c4 BED3     		bcc	.L193
 647:..\src/command_processing.c ****                         }
 648:..\src/command_processing.c ****                         break;
 4682              		.loc 1 648 0 is_stmt 1
 4683 24c6 00E0     		b	.L110
 4684              	.L279:
 649:..\src/command_processing.c ****                         
 650:..\src/command_processing.c ****                     default:
 651:..\src/command_processing.c ****                         break;
 4685              		.loc 1 651 0
 4686 24c8 00BF     		nop
 4687              	.L110:
 652:..\src/command_processing.c ****                 }
 653:..\src/command_processing.c **** // END OF MODIFY CUSTOM PARAM  
 654:..\src/command_processing.c ****                         
 655:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
 656:..\src/command_processing.c ****         }
 657:..\src/command_processing.c ****         
 658:..\src/command_processing.c ****         sprintf(aux_str, (char*)PARAMS_STR[idx]);
 4688              		.loc 1 658 0
 4689 24ca 07F5B053 		add	r3, r7, #5632
 4690 24ce 03F11503 		add	r3, r3, #21
 4691 24d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4692 24d4 9B00     		lsls	r3, r3, #2
 4693 24d6 07F5B152 		add	r2, r7, #5664
 4694 24da 02F11402 		add	r2, r2, #20
 4695 24de 1268     		ldr	r2, [r2]
 4696 24e0 1344     		add	r3, r3, r2
 4697 24e2 1A68     		ldr	r2, [r3]
 4698 24e4 07F13803 		add	r3, r7, #56
 4699 24e8 183B     		subs	r3, r3, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 113


 4700 24ea 1146     		mov	r1, r2
 4701 24ec 1846     		mov	r0, r3
 4702 24ee FFF7FEFF 		bl	sprintf
 659:..\src/command_processing.c ****         string_lenght = strlen(aux_str);
 4703              		.loc 1 659 0
 4704 24f2 07F13803 		add	r3, r7, #56
 4705 24f6 183B     		subs	r3, r3, #24
 4706 24f8 1846     		mov	r0, r3
 4707 24fa FFF7FEFF 		bl	strlen
 4708 24fe 0346     		mov	r3, r0
 4709 2500 07F5B052 		add	r2, r7, #5632
 4710 2504 02F11202 		add	r2, r2, #18
 4711 2508 1370     		strb	r3, [r2]
 660:..\src/command_processing.c ****         
 661:..\src/command_processing.c ****         // Parameters with a menu
 662:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 4712              		.loc 1 662 0
 4713 250a 07F5B053 		add	r3, r7, #5632
 4714 250e 03F11503 		add	r3, r3, #21
 4715 2512 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4716 2514 07F11803 		add	r3, r7, #24
 4717 2518 103B     		subs	r3, r3, #16
 4718 251a 1B68     		ldr	r3, [r3]
 4719 251c 1344     		add	r3, r3, r2
 4720 251e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4721 2520 002B     		cmp	r3, #0
 4722 2522 40F0BF84 		bne	.L194
 663:..\src/command_processing.c ****             switch(NUM_MENU[idx_menu]){
 4723              		.loc 1 663 0
 4724 2526 07F5B053 		add	r3, r7, #5632
 4725 252a 03F11403 		add	r3, r3, #20
 4726 252e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4727 2530 07F5B152 		add	r2, r7, #5664
 4728 2534 02F11002 		add	r2, r2, #16
 4729 2538 1268     		ldr	r2, [r2]
 4730 253a 1344     		add	r3, r3, r2
 4731 253c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4732 253e 013B     		subs	r3, r3, #1
 4733 2540 0B2B     		cmp	r3, #11
 4734 2542 00F2A184 		bhi	.L195
 4735 2546 01A2     		adr	r2, .L197
 4736 2548 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4737              		.p2align 2
 4738              	.L197:
 4739 254c 7D250000 		.word	.L196+1
 4740 2550 27270000 		.word	.L198+1
 4741 2554 FD270000 		.word	.L199+1
 4742 2558 51280000 		.word	.L200+1
 4743 255c B5280000 		.word	.L201+1
 4744 2560 11290000 		.word	.L202+1
 4745 2564 2D2A0000 		.word	.L203+1
 4746 2568 B52A0000 		.word	.L204+1
 4747 256c 492B0000 		.word	.L205+1
 4748 2570 C12B0000 		.word	.L206+1
 4749 2574 D32C0000 		.word	.L207+1
 4750 2578 072E0000 		.word	.L208+1
 4751              		.p2align 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 114


 4752              	.L196:
 664:..\src/command_processing.c ****                 case 1:     // input mode menu
 665:..\src/command_processing.c ****                     switch(*m_addr) {
 4753              		.loc 1 665 0
 4754 257c 07F5B053 		add	r3, r7, #5632
 4755 2580 03F10803 		add	r3, r3, #8
 4756 2584 1B68     		ldr	r3, [r3]
 4757 2586 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4758 2588 072B     		cmp	r3, #7
 4759 258a 00F27684 		bhi	.L280
 4760 258e 01A2     		adr	r2, .L211
 4761 2590 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4762              		.p2align 2
 4763              	.L211:
 4764 2594 B5250000 		.word	.L210+1
 4765 2598 D9250000 		.word	.L212+1
 4766 259c FF250000 		.word	.L213+1
 4767 25a0 2D260000 		.word	.L214+1
 4768 25a4 59260000 		.word	.L215+1
 4769 25a8 83260000 		.word	.L216+1
 4770 25ac B7260000 		.word	.L217+1
 4771 25b0 E1260000 		.word	.L218+1
 4772              		.p2align 1
 4773              	.L210:
 666:..\src/command_processing.c ****                         case INPUT_MODE_EXTERNAL:
 667:..\src/command_processing.c ****                             strcat(aux_str, " Usb");
 4774              		.loc 1 667 0
 4775 25b4 07F13803 		add	r3, r7, #56
 4776 25b8 183B     		subs	r3, r3, #24
 4777 25ba 1846     		mov	r0, r3
 4778 25bc FFF7FEFF 		bl	strlen
 4779 25c0 0346     		mov	r3, r0
 4780 25c2 1A46     		mov	r2, r3
 4781 25c4 07F13803 		add	r3, r7, #56
 4782 25c8 183B     		subs	r3, r3, #24
 4783 25ca 1344     		add	r3, r3, r2
 4784 25cc DA4A     		ldr	r2, .L301
 4785 25ce 1068     		ldr	r0, [r2]	@ unaligned
 4786 25d0 1860     		str	r0, [r3]	@ unaligned
 4787 25d2 1279     		ldrb	r2, [r2, #4]
 4788 25d4 1A71     		strb	r2, [r3, #4]
 668:..\src/command_processing.c ****                         break;
 4789              		.loc 1 668 0
 4790 25d6 A5E0     		b	.L209
 4791              	.L212:
 669:..\src/command_processing.c ****                         case INPUT_MODE_ENCODER3:
 670:..\src/command_processing.c ****                             strcat(aux_str, " Handle");
 4792              		.loc 1 670 0
 4793 25d8 07F13803 		add	r3, r7, #56
 4794 25dc 183B     		subs	r3, r3, #24
 4795 25de 1846     		mov	r0, r3
 4796 25e0 FFF7FEFF 		bl	strlen
 4797 25e4 0346     		mov	r3, r0
 4798 25e6 1A46     		mov	r2, r3
 4799 25e8 07F13803 		add	r3, r7, #56
 4800 25ec 183B     		subs	r3, r3, #24
 4801 25ee 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 115


 4802 25f0 D249     		ldr	r1, .L301+4
 4803 25f2 1A46     		mov	r2, r3
 4804 25f4 0B46     		mov	r3, r1
 4805 25f6 03CB     		ldmia	r3!, {r0, r1}
 4806 25f8 1060     		str	r0, [r2]	@ unaligned
 4807 25fa 5160     		str	r1, [r2, #4]	@ unaligned
 671:..\src/command_processing.c ****                         break;
 4808              		.loc 1 671 0
 4809 25fc 92E0     		b	.L209
 4810              	.L213:
 672:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL:
 673:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional");
 4811              		.loc 1 673 0
 4812 25fe 07F13803 		add	r3, r7, #56
 4813 2602 183B     		subs	r3, r3, #24
 4814 2604 1846     		mov	r0, r3
 4815 2606 FFF7FEFF 		bl	strlen
 4816 260a 0346     		mov	r3, r0
 4817 260c 1A46     		mov	r2, r3
 4818 260e 07F13803 		add	r3, r7, #56
 4819 2612 183B     		subs	r3, r3, #24
 4820 2614 1344     		add	r3, r3, r2
 4821 2616 CA4A     		ldr	r2, .L301+8
 4822 2618 1D46     		mov	r5, r3
 4823 261a 1446     		mov	r4, r2
 4824 261c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4825 261e 2860     		str	r0, [r5]	@ unaligned
 4826 2620 6960     		str	r1, [r5, #4]	@ unaligned
 4827 2622 AA60     		str	r2, [r5, #8]	@ unaligned
 4828 2624 EB60     		str	r3, [r5, #12]	@ unaligned
 4829 2626 2388     		ldrh	r3, [r4]	@ unaligned
 4830 2628 2B82     		strh	r3, [r5, #16]	@ unaligned
 674:..\src/command_processing.c ****                         break;
 4831              		.loc 1 674 0
 4832 262a 7BE0     		b	.L209
 4833              	.L214:
 675:..\src/command_processing.c ****                         case INPUT_MODE_EMG_INTEGRAL:
 676:..\src/command_processing.c ****                             strcat(aux_str, " EMG integral");
 4834              		.loc 1 676 0
 4835 262c 07F13803 		add	r3, r7, #56
 4836 2630 183B     		subs	r3, r3, #24
 4837 2632 1846     		mov	r0, r3
 4838 2634 FFF7FEFF 		bl	strlen
 4839 2638 0346     		mov	r3, r0
 4840 263a 1A46     		mov	r2, r3
 4841 263c 07F13803 		add	r3, r7, #56
 4842 2640 183B     		subs	r3, r3, #24
 4843 2642 1344     		add	r3, r3, r2
 4844 2644 BF4A     		ldr	r2, .L301+12
 4845 2646 1C46     		mov	r4, r3
 4846 2648 1346     		mov	r3, r2
 4847 264a 07CB     		ldmia	r3!, {r0, r1, r2}
 4848 264c 2060     		str	r0, [r4]	@ unaligned
 4849 264e 6160     		str	r1, [r4, #4]	@ unaligned
 4850 2650 A260     		str	r2, [r4, #8]	@ unaligned
 4851 2652 1B88     		ldrh	r3, [r3]	@ unaligned
 4852 2654 A381     		strh	r3, [r4, #12]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 116


 677:..\src/command_processing.c ****                         break;
 4853              		.loc 1 677 0
 4854 2656 65E0     		b	.L209
 4855              	.L215:
 678:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS:
 679:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS");
 4856              		.loc 1 679 0
 4857 2658 07F13803 		add	r3, r7, #56
 4858 265c 183B     		subs	r3, r3, #24
 4859 265e 1846     		mov	r0, r3
 4860 2660 FFF7FEFF 		bl	strlen
 4861 2664 0346     		mov	r3, r0
 4862 2666 1A46     		mov	r2, r3
 4863 2668 07F13803 		add	r3, r7, #56
 4864 266c 183B     		subs	r3, r3, #24
 4865 266e 1344     		add	r3, r3, r2
 4866 2670 B549     		ldr	r1, .L301+16
 4867 2672 1A46     		mov	r2, r3
 4868 2674 0B46     		mov	r3, r1
 4869 2676 03CB     		ldmia	r3!, {r0, r1}
 4870 2678 1060     		str	r0, [r2]	@ unaligned
 4871 267a 5160     		str	r1, [r2, #4]	@ unaligned
 4872 267c 1B88     		ldrh	r3, [r3]	@ unaligned
 4873 267e 1381     		strh	r3, [r2, #8]	@ unaligned
 680:..\src/command_processing.c ****                         break;
 4874              		.loc 1 680 0
 4875 2680 50E0     		b	.L209
 4876              	.L216:
 681:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS_ADV:
 682:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS Advanced");
 4877              		.loc 1 682 0
 4878 2682 07F13803 		add	r3, r7, #56
 4879 2686 183B     		subs	r3, r3, #24
 4880 2688 1846     		mov	r0, r3
 4881 268a FFF7FEFF 		bl	strlen
 4882 268e 0346     		mov	r3, r0
 4883 2690 1A46     		mov	r2, r3
 4884 2692 07F13803 		add	r3, r7, #56
 4885 2696 183B     		subs	r3, r3, #24
 4886 2698 1344     		add	r3, r3, r2
 4887 269a AC4A     		ldr	r2, .L301+20
 4888 269c 1D46     		mov	r5, r3
 4889 269e 1446     		mov	r4, r2
 4890 26a0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4891 26a2 2860     		str	r0, [r5]	@ unaligned
 4892 26a4 6960     		str	r1, [r5, #4]	@ unaligned
 4893 26a6 AA60     		str	r2, [r5, #8]	@ unaligned
 4894 26a8 EB60     		str	r3, [r5, #12]	@ unaligned
 4895 26aa 2388     		ldrh	r3, [r4]	@ unaligned
 4896 26ac A278     		ldrb	r2, [r4, #2]
 4897 26ae 2B82     		strh	r3, [r5, #16]	@ unaligned
 4898 26b0 1346     		mov	r3, r2
 4899 26b2 AB74     		strb	r3, [r5, #18]
 683:..\src/command_processing.c ****                         break;
 4900              		.loc 1 683 0
 4901 26b4 36E0     		b	.L209
 4902              	.L217:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 117


 684:..\src/command_processing.c ****                         case INPUT_MODE_JOYSTICK:
 685:..\src/command_processing.c ****                             strcat(aux_str, " Joystick");
 4903              		.loc 1 685 0
 4904 26b6 07F13803 		add	r3, r7, #56
 4905 26ba 183B     		subs	r3, r3, #24
 4906 26bc 1846     		mov	r0, r3
 4907 26be FFF7FEFF 		bl	strlen
 4908 26c2 0346     		mov	r3, r0
 4909 26c4 1A46     		mov	r2, r3
 4910 26c6 07F13803 		add	r3, r7, #56
 4911 26ca 183B     		subs	r3, r3, #24
 4912 26cc 1344     		add	r3, r3, r2
 4913 26ce A049     		ldr	r1, .L301+24
 4914 26d0 1A46     		mov	r2, r3
 4915 26d2 0B46     		mov	r3, r1
 4916 26d4 03CB     		ldmia	r3!, {r0, r1}
 4917 26d6 1060     		str	r0, [r2]	@ unaligned
 4918 26d8 5160     		str	r1, [r2, #4]	@ unaligned
 4919 26da 1B88     		ldrh	r3, [r3]	@ unaligned
 4920 26dc 1381     		strh	r3, [r2, #8]	@ unaligned
 686:..\src/command_processing.c ****                         break;
 4921              		.loc 1 686 0
 4922 26de 21E0     		b	.L209
 4923              	.L218:
 687:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL_NC:
 688:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional Normally Closed");
 4924              		.loc 1 688 0
 4925 26e0 07F13803 		add	r3, r7, #56
 4926 26e4 183B     		subs	r3, r3, #24
 4927 26e6 1846     		mov	r0, r3
 4928 26e8 FFF7FEFF 		bl	strlen
 4929 26ec 0346     		mov	r3, r0
 4930 26ee 1A46     		mov	r2, r3
 4931 26f0 07F13803 		add	r3, r7, #56
 4932 26f4 183B     		subs	r3, r3, #24
 4933 26f6 1344     		add	r3, r3, r2
 4934 26f8 964A     		ldr	r2, .L301+28
 4935 26fa 1446     		mov	r4, r2
 4936 26fc 9E46     		mov	lr, r3
 4937 26fe 04F1200C 		add	ip, r4, #32
 4938              	.L219:
 4939 2702 7546     		mov	r5, lr
 4940 2704 2646     		mov	r6, r4
 4941 2706 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 4942 2708 2860     		str	r0, [r5]	@ unaligned
 4943 270a 6960     		str	r1, [r5, #4]	@ unaligned
 4944 270c AA60     		str	r2, [r5, #8]	@ unaligned
 4945 270e EB60     		str	r3, [r5, #12]	@ unaligned
 4946 2710 1034     		adds	r4, r4, #16
 4947 2712 0EF1100E 		add	lr, lr, #16
 4948 2716 6445     		cmp	r4, ip
 4949 2718 F3D1     		bne	.L219
 4950 271a 7246     		mov	r2, lr
 4951 271c 2346     		mov	r3, r4
 4952 271e 1B88     		ldrh	r3, [r3]	@ unaligned
 4953 2720 1380     		strh	r3, [r2]	@ unaligned
 689:..\src/command_processing.c ****                         break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 118


 4954              		.loc 1 689 0
 4955 2722 00BF     		nop
 4956              	.L209:
 690:..\src/command_processing.c ****                     }
 691:..\src/command_processing.c ****                     break;
 4957              		.loc 1 691 0
 4958 2724 A9E3     		b	.L280
 4959              	.L198:
 692:..\src/command_processing.c ****                 case 2:     // control mode menu
 693:..\src/command_processing.c ****                     switch(*m_addr){
 4960              		.loc 1 693 0
 4961 2726 07F5B053 		add	r3, r7, #5632
 4962 272a 03F10803 		add	r3, r3, #8
 4963 272e 1B68     		ldr	r3, [r3]
 4964 2730 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4965 2732 032B     		cmp	r3, #3
 4966 2734 00F2A383 		bhi	.L281
 4967 2738 01A2     		adr	r2, .L222
 4968 273a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4969 273e 00BF     		.p2align 2
 4970              	.L222:
 4971 2740 51270000 		.word	.L221+1
 4972 2744 7B270000 		.word	.L223+1
 4973 2748 9F270000 		.word	.L224+1
 4974 274c C9270000 		.word	.L225+1
 4975              		.p2align 1
 4976              	.L221:
 694:..\src/command_processing.c ****                         case CONTROL_ANGLE:
 695:..\src/command_processing.c ****                             strcat(aux_str, " Position");
 4977              		.loc 1 695 0
 4978 2750 07F13803 		add	r3, r7, #56
 4979 2754 183B     		subs	r3, r3, #24
 4980 2756 1846     		mov	r0, r3
 4981 2758 FFF7FEFF 		bl	strlen
 4982 275c 0346     		mov	r3, r0
 4983 275e 1A46     		mov	r2, r3
 4984 2760 07F13803 		add	r3, r7, #56
 4985 2764 183B     		subs	r3, r3, #24
 4986 2766 1344     		add	r3, r3, r2
 4987 2768 7B49     		ldr	r1, .L301+32
 4988 276a 1A46     		mov	r2, r3
 4989 276c 0B46     		mov	r3, r1
 4990 276e 03CB     		ldmia	r3!, {r0, r1}
 4991 2770 1060     		str	r0, [r2]	@ unaligned
 4992 2772 5160     		str	r1, [r2, #4]	@ unaligned
 4993 2774 1B88     		ldrh	r3, [r3]	@ unaligned
 4994 2776 1381     		strh	r3, [r2, #8]	@ unaligned
 696:..\src/command_processing.c ****                         break;
 4995              		.loc 1 696 0
 4996 2778 3FE0     		b	.L220
 4997              	.L223:
 697:..\src/command_processing.c ****                         case CONTROL_PWM:
 698:..\src/command_processing.c ****                             strcat(aux_str, " PWM");
 4998              		.loc 1 698 0
 4999 277a 07F13803 		add	r3, r7, #56
 5000 277e 183B     		subs	r3, r3, #24
 5001 2780 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 119


 5002 2782 FFF7FEFF 		bl	strlen
 5003 2786 0346     		mov	r3, r0
 5004 2788 1A46     		mov	r2, r3
 5005 278a 07F13803 		add	r3, r7, #56
 5006 278e 183B     		subs	r3, r3, #24
 5007 2790 1344     		add	r3, r3, r2
 5008 2792 724A     		ldr	r2, .L301+36
 5009 2794 1068     		ldr	r0, [r2]	@ unaligned
 5010 2796 1860     		str	r0, [r3]	@ unaligned
 5011 2798 1279     		ldrb	r2, [r2, #4]
 5012 279a 1A71     		strb	r2, [r3, #4]
 699:..\src/command_processing.c ****                         break;
 5013              		.loc 1 699 0
 5014 279c 2DE0     		b	.L220
 5015              	.L224:
 700:..\src/command_processing.c ****                         case CONTROL_CURRENT:
 701:..\src/command_processing.c ****                             strcat(aux_str, " Current");
 5016              		.loc 1 701 0
 5017 279e 07F13803 		add	r3, r7, #56
 5018 27a2 183B     		subs	r3, r3, #24
 5019 27a4 1846     		mov	r0, r3
 5020 27a6 FFF7FEFF 		bl	strlen
 5021 27aa 0346     		mov	r3, r0
 5022 27ac 1A46     		mov	r2, r3
 5023 27ae 07F13803 		add	r3, r7, #56
 5024 27b2 183B     		subs	r3, r3, #24
 5025 27b4 1344     		add	r3, r3, r2
 5026 27b6 6A49     		ldr	r1, .L301+40
 5027 27b8 1A46     		mov	r2, r3
 5028 27ba 0B46     		mov	r3, r1
 5029 27bc 03CB     		ldmia	r3!, {r0, r1}
 5030 27be 1060     		str	r0, [r2]	@ unaligned
 5031 27c0 5160     		str	r1, [r2, #4]	@ unaligned
 5032 27c2 1B78     		ldrb	r3, [r3]
 5033 27c4 1372     		strb	r3, [r2, #8]
 702:..\src/command_processing.c ****                         break;
 5034              		.loc 1 702 0
 5035 27c6 18E0     		b	.L220
 5036              	.L225:
 703:..\src/command_processing.c ****                         case CURR_AND_POS_CONTROL:
 704:..\src/command_processing.c ****                             strcat(aux_str, " Position and Current");
 5037              		.loc 1 704 0
 5038 27c8 07F13803 		add	r3, r7, #56
 5039 27cc 183B     		subs	r3, r3, #24
 5040 27ce 1846     		mov	r0, r3
 5041 27d0 FFF7FEFF 		bl	strlen
 5042 27d4 0346     		mov	r3, r0
 5043 27d6 1A46     		mov	r2, r3
 5044 27d8 07F13803 		add	r3, r7, #56
 5045 27dc 183B     		subs	r3, r3, #24
 5046 27de 1344     		add	r3, r3, r2
 5047 27e0 604A     		ldr	r2, .L301+44
 5048 27e2 1D46     		mov	r5, r3
 5049 27e4 1446     		mov	r4, r2
 5050 27e6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5051 27e8 2860     		str	r0, [r5]	@ unaligned
 5052 27ea 6960     		str	r1, [r5, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 120


 5053 27ec AA60     		str	r2, [r5, #8]	@ unaligned
 5054 27ee EB60     		str	r3, [r5, #12]	@ unaligned
 5055 27f0 2068     		ldr	r0, [r4]	@ unaligned
 5056 27f2 2861     		str	r0, [r5, #16]	@ unaligned
 5057 27f4 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5058 27f6 AB82     		strh	r3, [r5, #20]	@ unaligned
 705:..\src/command_processing.c ****                         break;
 5059              		.loc 1 705 0
 5060 27f8 00BF     		nop
 5061              	.L220:
 706:..\src/command_processing.c ****                     }
 707:..\src/command_processing.c ****                     break;
 5062              		.loc 1 707 0
 5063 27fa 40E3     		b	.L281
 5064              	.L199:
 708:..\src/command_processing.c ****                 case 3:     // yes/no menu
 709:..\src/command_processing.c ****                     if(*m_addr){
 5065              		.loc 1 709 0
 5066 27fc 07F5B053 		add	r3, r7, #5632
 5067 2800 03F10803 		add	r3, r3, #8
 5068 2804 1B68     		ldr	r3, [r3]
 5069 2806 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5070 2808 002B     		cmp	r3, #0
 5071 280a 11D0     		beq	.L226
 710:..\src/command_processing.c ****                         strcat(aux_str, " YES\0");
 5072              		.loc 1 710 0
 5073 280c 07F13803 		add	r3, r7, #56
 5074 2810 183B     		subs	r3, r3, #24
 5075 2812 1846     		mov	r0, r3
 5076 2814 FFF7FEFF 		bl	strlen
 5077 2818 0346     		mov	r3, r0
 5078 281a 1A46     		mov	r2, r3
 5079 281c 07F13803 		add	r3, r7, #56
 5080 2820 183B     		subs	r3, r3, #24
 5081 2822 1344     		add	r3, r3, r2
 5082 2824 504A     		ldr	r2, .L301+48
 5083 2826 1068     		ldr	r0, [r2]	@ unaligned
 5084 2828 1860     		str	r0, [r3]	@ unaligned
 5085 282a 1279     		ldrb	r2, [r2, #4]
 5086 282c 1A71     		strb	r2, [r3, #4]
 711:..\src/command_processing.c ****                     }
 712:..\src/command_processing.c ****                     else {
 713:..\src/command_processing.c ****                         strcat(aux_str, " NO\0");
 714:..\src/command_processing.c ****                     }
 715:..\src/command_processing.c ****                     break;    
 5087              		.loc 1 715 0
 5088 282e 2BE3     		b	.L195
 5089              	.L226:
 713:..\src/command_processing.c ****                     }
 5090              		.loc 1 713 0
 5091 2830 07F13803 		add	r3, r7, #56
 5092 2834 183B     		subs	r3, r3, #24
 5093 2836 1846     		mov	r0, r3
 5094 2838 FFF7FEFF 		bl	strlen
 5095 283c 0346     		mov	r3, r0
 5096 283e 1A46     		mov	r2, r3
 5097 2840 07F13803 		add	r3, r7, #56
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 121


 5098 2844 183B     		subs	r3, r3, #24
 5099 2846 1344     		add	r3, r3, r2
 5100 2848 484A     		ldr	r2, .L301+52
 5101 284a 1068     		ldr	r0, [r2]	@ unaligned
 5102 284c 1860     		str	r0, [r3]	@ unaligned
 5103              		.loc 1 715 0
 5104 284e 1BE3     		b	.L195
 5105              	.L200:
 716:..\src/command_processing.c ****                 case 4:     // right/lef menu
 717:..\src/command_processing.c ****                     switch(*m_addr){
 5106              		.loc 1 717 0
 5107 2850 07F5B053 		add	r3, r7, #5632
 5108 2854 03F10803 		add	r3, r3, #8
 5109 2858 1B68     		ldr	r3, [r3]
 5110 285a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5111 285c 002B     		cmp	r3, #0
 5112 285e 02D0     		beq	.L229
 5113 2860 012B     		cmp	r3, #1
 5114 2862 14D0     		beq	.L230
 718:..\src/command_processing.c ****                         case RIGHT_HAND:
 719:..\src/command_processing.c ****                             strcat(aux_str, " Right\0");
 720:..\src/command_processing.c ****                         break;
 721:..\src/command_processing.c ****                         case LEFT_HAND:
 722:..\src/command_processing.c ****                             strcat(aux_str, " Left\0");
 723:..\src/command_processing.c ****                         break;
 724:..\src/command_processing.c ****                     }
 725:..\src/command_processing.c ****                     break;
 5115              		.loc 1 725 0
 5116 2864 10E3     		b	.L195
 5117              	.L229:
 719:..\src/command_processing.c ****                         break;
 5118              		.loc 1 719 0
 5119 2866 07F13803 		add	r3, r7, #56
 5120 286a 183B     		subs	r3, r3, #24
 5121 286c 1846     		mov	r0, r3
 5122 286e FFF7FEFF 		bl	strlen
 5123 2872 0346     		mov	r3, r0
 5124 2874 1A46     		mov	r2, r3
 5125 2876 07F13803 		add	r3, r7, #56
 5126 287a 183B     		subs	r3, r3, #24
 5127 287c 1344     		add	r3, r3, r2
 5128 287e 3C4A     		ldr	r2, .L301+56
 5129 2880 1068     		ldr	r0, [r2]	@ unaligned
 5130 2882 1860     		str	r0, [r3]	@ unaligned
 5131 2884 9188     		ldrh	r1, [r2, #4]	@ unaligned
 5132 2886 9279     		ldrb	r2, [r2, #6]
 5133 2888 9980     		strh	r1, [r3, #4]	@ unaligned
 5134 288a 9A71     		strb	r2, [r3, #6]
 720:..\src/command_processing.c ****                         case LEFT_HAND:
 5135              		.loc 1 720 0
 5136 288c 11E0     		b	.L228
 5137              	.L230:
 722:..\src/command_processing.c ****                         break;
 5138              		.loc 1 722 0
 5139 288e 07F13803 		add	r3, r7, #56
 5140 2892 183B     		subs	r3, r3, #24
 5141 2894 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 122


 5142 2896 FFF7FEFF 		bl	strlen
 5143 289a 0346     		mov	r3, r0
 5144 289c 1A46     		mov	r2, r3
 5145 289e 07F13803 		add	r3, r7, #56
 5146 28a2 183B     		subs	r3, r3, #24
 5147 28a4 1344     		add	r3, r3, r2
 5148 28a6 334A     		ldr	r2, .L301+60
 5149 28a8 1068     		ldr	r0, [r2]	@ unaligned
 5150 28aa 1860     		str	r0, [r3]	@ unaligned
 5151 28ac 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5152 28ae 9A80     		strh	r2, [r3, #4]	@ unaligned
 723:..\src/command_processing.c ****                     }
 5153              		.loc 1 723 0
 5154 28b0 00BF     		nop
 5155              	.L228:
 5156              		.loc 1 725 0
 5157 28b2 E9E2     		b	.L195
 5158              	.L201:
 726:..\src/command_processing.c ****                 case 5:     // on/off menu
 727:..\src/command_processing.c ****                     switch(*m_addr){
 5159              		.loc 1 727 0
 5160 28b4 07F5B053 		add	r3, r7, #5632
 5161 28b8 03F10803 		add	r3, r3, #8
 5162 28bc 1B68     		ldr	r3, [r3]
 5163 28be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5164 28c0 002B     		cmp	r3, #0
 5165 28c2 02D0     		beq	.L232
 5166 28c4 012B     		cmp	r3, #1
 5167 28c6 12D0     		beq	.L233
 728:..\src/command_processing.c ****                         case 0:
 729:..\src/command_processing.c ****                             strcat(aux_str, " OFF\0");
 730:..\src/command_processing.c ****                         break;
 731:..\src/command_processing.c ****                         case 1:
 732:..\src/command_processing.c ****                             strcat(aux_str, " ON\0");
 733:..\src/command_processing.c ****                         break;
 734:..\src/command_processing.c ****                     }
 735:..\src/command_processing.c ****                     break;
 5168              		.loc 1 735 0
 5169 28c8 DEE2     		b	.L195
 5170              	.L232:
 729:..\src/command_processing.c ****                         break;
 5171              		.loc 1 729 0
 5172 28ca 07F13803 		add	r3, r7, #56
 5173 28ce 183B     		subs	r3, r3, #24
 5174 28d0 1846     		mov	r0, r3
 5175 28d2 FFF7FEFF 		bl	strlen
 5176 28d6 0346     		mov	r3, r0
 5177 28d8 1A46     		mov	r2, r3
 5178 28da 07F13803 		add	r3, r7, #56
 5179 28de 183B     		subs	r3, r3, #24
 5180 28e0 1344     		add	r3, r3, r2
 5181 28e2 254A     		ldr	r2, .L301+64
 5182 28e4 1068     		ldr	r0, [r2]	@ unaligned
 5183 28e6 1860     		str	r0, [r3]	@ unaligned
 5184 28e8 1279     		ldrb	r2, [r2, #4]
 5185 28ea 1A71     		strb	r2, [r3, #4]
 730:..\src/command_processing.c ****                         case 1:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 123


 5186              		.loc 1 730 0
 5187 28ec 0FE0     		b	.L231
 5188              	.L233:
 732:..\src/command_processing.c ****                         break;
 5189              		.loc 1 732 0
 5190 28ee 07F13803 		add	r3, r7, #56
 5191 28f2 183B     		subs	r3, r3, #24
 5192 28f4 1846     		mov	r0, r3
 5193 28f6 FFF7FEFF 		bl	strlen
 5194 28fa 0346     		mov	r3, r0
 5195 28fc 1A46     		mov	r2, r3
 5196 28fe 07F13803 		add	r3, r7, #56
 5197 2902 183B     		subs	r3, r3, #24
 5198 2904 1344     		add	r3, r3, r2
 5199 2906 1D4A     		ldr	r2, .L301+68
 5200 2908 1068     		ldr	r0, [r2]	@ unaligned
 5201 290a 1860     		str	r0, [r3]	@ unaligned
 733:..\src/command_processing.c ****                     }
 5202              		.loc 1 733 0
 5203 290c 00BF     		nop
 5204              	.L231:
 5205              		.loc 1 735 0
 5206 290e BBE2     		b	.L195
 5207              	.L202:
 736:..\src/command_processing.c ****                 case 6:     // expansion port menu
 737:..\src/command_processing.c ****                     switch(*m_addr){
 5208              		.loc 1 737 0
 5209 2910 07F5B053 		add	r3, r7, #5632
 5210 2914 03F10803 		add	r3, r3, #8
 5211 2918 1B68     		ldr	r3, [r3]
 5212 291a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5213 291c 032B     		cmp	r3, #3
 5214 291e 00F2B082 		bhi	.L282
 5215 2922 01A2     		adr	r2, .L236
 5216 2924 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5217              		.p2align 2
 5218              	.L236:
 5219 2928 81290000 		.word	.L235+1
 5220 292c A5290000 		.word	.L237+1
 5221 2930 D1290000 		.word	.L238+1
 5222 2934 FF290000 		.word	.L239+1
 5223              		.p2align 1
 5224              	.L302:
 5225              		.align	2
 5226              	.L301:
 5227 2938 00000000 		.word	.LC88
 5228 293c 08000000 		.word	.LC89
 5229 2940 10000000 		.word	.LC90
 5230 2944 24000000 		.word	.LC91
 5231 2948 34000000 		.word	.LC92
 5232 294c 40000000 		.word	.LC93
 5233 2950 54000000 		.word	.LC94
 5234 2954 60000000 		.word	.LC95
 5235 2958 84000000 		.word	.LC96
 5236 295c 90000000 		.word	.LC97
 5237 2960 98000000 		.word	.LC98
 5238 2964 A4000000 		.word	.LC99
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 124


 5239 2968 BC000000 		.word	.LC100
 5240 296c C4000000 		.word	.LC101
 5241 2970 CC000000 		.word	.LC102
 5242 2974 D4000000 		.word	.LC103
 5243 2978 DC000000 		.word	.LC104
 5244 297c E4000000 		.word	.LC105
 5245              	.L235:
 738:..\src/command_processing.c ****                         case EXP_NONE:
 739:..\src/command_processing.c ****                             strcat(aux_str, " None\0");
 5246              		.loc 1 739 0
 5247 2980 07F13803 		add	r3, r7, #56
 5248 2984 183B     		subs	r3, r3, #24
 5249 2986 1846     		mov	r0, r3
 5250 2988 FFF7FEFF 		bl	strlen
 5251 298c 0346     		mov	r3, r0
 5252 298e 1A46     		mov	r2, r3
 5253 2990 07F13803 		add	r3, r7, #56
 5254 2994 183B     		subs	r3, r3, #24
 5255 2996 1344     		add	r3, r3, r2
 5256 2998 D34A     		ldr	r2, .L303
 5257 299a 1068     		ldr	r0, [r2]	@ unaligned
 5258 299c 1860     		str	r0, [r3]	@ unaligned
 5259 299e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5260 29a0 9A80     		strh	r2, [r3, #4]	@ unaligned
 740:..\src/command_processing.c ****                             break;
 5261              		.loc 1 740 0
 5262 29a2 42E0     		b	.L234
 5263              	.L237:
 741:..\src/command_processing.c ****                         case EXP_SD_RTC:
 742:..\src/command_processing.c ****                             strcat(aux_str, " SD/RTC board\0");
 5264              		.loc 1 742 0
 5265 29a4 07F13803 		add	r3, r7, #56
 5266 29a8 183B     		subs	r3, r3, #24
 5267 29aa 1846     		mov	r0, r3
 5268 29ac FFF7FEFF 		bl	strlen
 5269 29b0 0346     		mov	r3, r0
 5270 29b2 1A46     		mov	r2, r3
 5271 29b4 07F13803 		add	r3, r7, #56
 5272 29b8 183B     		subs	r3, r3, #24
 5273 29ba 1344     		add	r3, r3, r2
 5274 29bc CB4A     		ldr	r2, .L303+4
 5275 29be 1C46     		mov	r4, r3
 5276 29c0 1346     		mov	r3, r2
 5277 29c2 07CB     		ldmia	r3!, {r0, r1, r2}
 5278 29c4 2060     		str	r0, [r4]	@ unaligned
 5279 29c6 6160     		str	r1, [r4, #4]	@ unaligned
 5280 29c8 A260     		str	r2, [r4, #8]	@ unaligned
 5281 29ca 1B88     		ldrh	r3, [r3]	@ unaligned
 5282 29cc A381     		strh	r3, [r4, #12]	@ unaligned
 743:..\src/command_processing.c ****                             break;
 5283              		.loc 1 743 0
 5284 29ce 2CE0     		b	.L234
 5285              	.L238:
 744:..\src/command_processing.c ****                         case EXP_WIFI:
 745:..\src/command_processing.c ****         					strcat(aux_str, " WiFi board [N/A]\0");
 5286              		.loc 1 745 0
 5287 29d0 07F13803 		add	r3, r7, #56
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 125


 5288 29d4 183B     		subs	r3, r3, #24
 5289 29d6 1846     		mov	r0, r3
 5290 29d8 FFF7FEFF 		bl	strlen
 5291 29dc 0346     		mov	r3, r0
 5292 29de 1A46     		mov	r2, r3
 5293 29e0 07F13803 		add	r3, r7, #56
 5294 29e4 183B     		subs	r3, r3, #24
 5295 29e6 1344     		add	r3, r3, r2
 5296 29e8 C14A     		ldr	r2, .L303+8
 5297 29ea 1D46     		mov	r5, r3
 5298 29ec 1446     		mov	r4, r2
 5299 29ee 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5300 29f0 2860     		str	r0, [r5]	@ unaligned
 5301 29f2 6960     		str	r1, [r5, #4]	@ unaligned
 5302 29f4 AA60     		str	r2, [r5, #8]	@ unaligned
 5303 29f6 EB60     		str	r3, [r5, #12]	@ unaligned
 5304 29f8 2388     		ldrh	r3, [r4]	@ unaligned
 5305 29fa 2B82     		strh	r3, [r5, #16]	@ unaligned
 746:..\src/command_processing.c ****         					break;
 5306              		.loc 1 746 0
 5307 29fc 15E0     		b	.L234
 5308              	.L239:
 747:..\src/command_processing.c ****                         case EXP_OTHER:
 748:..\src/command_processing.c ****         					strcat(aux_str, " Other [N/A]\0");
 5309              		.loc 1 748 0
 5310 29fe 07F13803 		add	r3, r7, #56
 5311 2a02 183B     		subs	r3, r3, #24
 5312 2a04 1846     		mov	r0, r3
 5313 2a06 FFF7FEFF 		bl	strlen
 5314 2a0a 0346     		mov	r3, r0
 5315 2a0c 1A46     		mov	r2, r3
 5316 2a0e 07F13803 		add	r3, r7, #56
 5317 2a12 183B     		subs	r3, r3, #24
 5318 2a14 1344     		add	r3, r3, r2
 5319 2a16 B74A     		ldr	r2, .L303+12
 5320 2a18 1C46     		mov	r4, r3
 5321 2a1a 1346     		mov	r3, r2
 5322 2a1c 07CB     		ldmia	r3!, {r0, r1, r2}
 5323 2a1e 2060     		str	r0, [r4]	@ unaligned
 5324 2a20 6160     		str	r1, [r4, #4]	@ unaligned
 5325 2a22 A260     		str	r2, [r4, #8]	@ unaligned
 5326 2a24 1B78     		ldrb	r3, [r3]
 5327 2a26 2373     		strb	r3, [r4, #12]
 749:..\src/command_processing.c ****         					break;
 5328              		.loc 1 749 0
 5329 2a28 00BF     		nop
 5330              	.L234:
 750:..\src/command_processing.c ****                     }
 751:..\src/command_processing.c ****                     break;
 5331              		.loc 1 751 0
 5332 2a2a 2AE2     		b	.L282
 5333              	.L203:
 752:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 753:..\src/command_processing.c ****                     switch(*m_addr){
 5334              		.loc 1 753 0
 5335 2a2c 07F5B053 		add	r3, r7, #5632
 5336 2a30 03F10803 		add	r3, r3, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 126


 5337 2a34 1B68     		ldr	r3, [r3]
 5338 2a36 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5339 2a38 012B     		cmp	r3, #1
 5340 2a3a 16D0     		beq	.L241
 5341 2a3c 022B     		cmp	r3, #2
 5342 2a3e 26D0     		beq	.L242
 5343 2a40 002B     		cmp	r3, #0
 5344 2a42 00D0     		beq	.L243
 754:..\src/command_processing.c ****                         case 0: 
 755:..\src/command_processing.c ****                             strcat(aux_str, " None\0"); 
 756:..\src/command_processing.c ****                             break;
 757:..\src/command_processing.c ****                         case 1: 
 758:..\src/command_processing.c ****                             strcat(aux_str, " Low\0"); 
 759:..\src/command_processing.c ****                             break;
 760:..\src/command_processing.c ****                         case 2: 
 761:..\src/command_processing.c ****                             strcat(aux_str, " High\0");
 762:..\src/command_processing.c ****                             break;
 763:..\src/command_processing.c ****                         default:
 764:..\src/command_processing.c ****                             break;
 5345              		.loc 1 764 0
 5346 2a44 35E0     		b	.L244
 5347              	.L243:
 755:..\src/command_processing.c ****                             break;
 5348              		.loc 1 755 0
 5349 2a46 07F13803 		add	r3, r7, #56
 5350 2a4a 183B     		subs	r3, r3, #24
 5351 2a4c 1846     		mov	r0, r3
 5352 2a4e FFF7FEFF 		bl	strlen
 5353 2a52 0346     		mov	r3, r0
 5354 2a54 1A46     		mov	r2, r3
 5355 2a56 07F13803 		add	r3, r7, #56
 5356 2a5a 183B     		subs	r3, r3, #24
 5357 2a5c 1344     		add	r3, r3, r2
 5358 2a5e A24A     		ldr	r2, .L303
 5359 2a60 1068     		ldr	r0, [r2]	@ unaligned
 5360 2a62 1860     		str	r0, [r3]	@ unaligned
 5361 2a64 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5362 2a66 9A80     		strh	r2, [r3, #4]	@ unaligned
 756:..\src/command_processing.c ****                         case 1: 
 5363              		.loc 1 756 0
 5364 2a68 23E0     		b	.L244
 5365              	.L241:
 758:..\src/command_processing.c ****                             break;
 5366              		.loc 1 758 0
 5367 2a6a 07F13803 		add	r3, r7, #56
 5368 2a6e 183B     		subs	r3, r3, #24
 5369 2a70 1846     		mov	r0, r3
 5370 2a72 FFF7FEFF 		bl	strlen
 5371 2a76 0346     		mov	r3, r0
 5372 2a78 1A46     		mov	r2, r3
 5373 2a7a 07F13803 		add	r3, r7, #56
 5374 2a7e 183B     		subs	r3, r3, #24
 5375 2a80 1344     		add	r3, r3, r2
 5376 2a82 9D4A     		ldr	r2, .L303+16
 5377 2a84 1068     		ldr	r0, [r2]	@ unaligned
 5378 2a86 1860     		str	r0, [r3]	@ unaligned
 5379 2a88 1279     		ldrb	r2, [r2, #4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 127


 5380 2a8a 1A71     		strb	r2, [r3, #4]
 759:..\src/command_processing.c ****                         case 2: 
 5381              		.loc 1 759 0
 5382 2a8c 11E0     		b	.L244
 5383              	.L242:
 761:..\src/command_processing.c ****                             break;
 5384              		.loc 1 761 0
 5385 2a8e 07F13803 		add	r3, r7, #56
 5386 2a92 183B     		subs	r3, r3, #24
 5387 2a94 1846     		mov	r0, r3
 5388 2a96 FFF7FEFF 		bl	strlen
 5389 2a9a 0346     		mov	r3, r0
 5390 2a9c 1A46     		mov	r2, r3
 5391 2a9e 07F13803 		add	r3, r7, #56
 5392 2aa2 183B     		subs	r3, r3, #24
 5393 2aa4 1344     		add	r3, r3, r2
 5394 2aa6 954A     		ldr	r2, .L303+20
 5395 2aa8 1068     		ldr	r0, [r2]	@ unaligned
 5396 2aaa 1860     		str	r0, [r3]	@ unaligned
 5397 2aac 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5398 2aae 9A80     		strh	r2, [r3, #4]	@ unaligned
 762:..\src/command_processing.c ****                         default:
 5399              		.loc 1 762 0
 5400 2ab0 00BF     		nop
 5401              	.L244:
 765:..\src/command_processing.c ****                     } 
 766:..\src/command_processing.c ****                     break;
 5402              		.loc 1 766 0 discriminator 12
 5403 2ab2 E9E1     		b	.L195
 5404              	.L204:
 767:..\src/command_processing.c ****                 case 8:     // user menu          
 768:..\src/command_processing.c ****                     switch(*m_addr){
 5405              		.loc 1 768 0
 5406 2ab4 07F5B053 		add	r3, r7, #5632
 5407 2ab8 03F10803 		add	r3, r3, #8
 5408 2abc 1B68     		ldr	r3, [r3]
 5409 2abe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5410 2ac0 012B     		cmp	r3, #1
 5411 2ac2 1AD0     		beq	.L246
 5412 2ac4 022B     		cmp	r3, #2
 5413 2ac6 2CD0     		beq	.L247
 5414 2ac8 002B     		cmp	r3, #0
 5415 2aca 00D0     		beq	.L248
 769:..\src/command_processing.c ****                         case GENERIC_USER:
 770:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC USER\0");
 771:..\src/command_processing.c ****                         break;
 772:..\src/command_processing.c ****                         case MARIA:
 773:..\src/command_processing.c ****                             strcat(aux_str, " MARIA\0");
 774:..\src/command_processing.c ****                         break;
 775:..\src/command_processing.c ****                         case ROZA:
 776:..\src/command_processing.c ****                             strcat(aux_str, " ROZA\0");
 777:..\src/command_processing.c ****                         break;
 778:..\src/command_processing.c ****                     }   
 779:..\src/command_processing.c ****                     break;                    
 5416              		.loc 1 779 0
 5417 2acc DCE1     		b	.L195
 5418              	.L248:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 128


 770:..\src/command_processing.c ****                         break;
 5419              		.loc 1 770 0
 5420 2ace 07F13803 		add	r3, r7, #56
 5421 2ad2 183B     		subs	r3, r3, #24
 5422 2ad4 1846     		mov	r0, r3
 5423 2ad6 FFF7FEFF 		bl	strlen
 5424 2ada 0346     		mov	r3, r0
 5425 2adc 1A46     		mov	r2, r3
 5426 2ade 07F13803 		add	r3, r7, #56
 5427 2ae2 183B     		subs	r3, r3, #24
 5428 2ae4 1344     		add	r3, r3, r2
 5429 2ae6 864A     		ldr	r2, .L303+24
 5430 2ae8 1C46     		mov	r4, r3
 5431 2aea 1346     		mov	r3, r2
 5432 2aec 07CB     		ldmia	r3!, {r0, r1, r2}
 5433 2aee 2060     		str	r0, [r4]	@ unaligned
 5434 2af0 6160     		str	r1, [r4, #4]	@ unaligned
 5435 2af2 A260     		str	r2, [r4, #8]	@ unaligned
 5436 2af4 1B88     		ldrh	r3, [r3]	@ unaligned
 5437 2af6 A381     		strh	r3, [r4, #12]	@ unaligned
 771:..\src/command_processing.c ****                         case MARIA:
 5438              		.loc 1 771 0
 5439 2af8 25E0     		b	.L245
 5440              	.L246:
 773:..\src/command_processing.c ****                         break;
 5441              		.loc 1 773 0
 5442 2afa 07F13803 		add	r3, r7, #56
 5443 2afe 183B     		subs	r3, r3, #24
 5444 2b00 1846     		mov	r0, r3
 5445 2b02 FFF7FEFF 		bl	strlen
 5446 2b06 0346     		mov	r3, r0
 5447 2b08 1A46     		mov	r2, r3
 5448 2b0a 07F13803 		add	r3, r7, #56
 5449 2b0e 183B     		subs	r3, r3, #24
 5450 2b10 1344     		add	r3, r3, r2
 5451 2b12 7C4A     		ldr	r2, .L303+28
 5452 2b14 1068     		ldr	r0, [r2]	@ unaligned
 5453 2b16 1860     		str	r0, [r3]	@ unaligned
 5454 2b18 9188     		ldrh	r1, [r2, #4]	@ unaligned
 5455 2b1a 9279     		ldrb	r2, [r2, #6]
 5456 2b1c 9980     		strh	r1, [r3, #4]	@ unaligned
 5457 2b1e 9A71     		strb	r2, [r3, #6]
 774:..\src/command_processing.c ****                         case ROZA:
 5458              		.loc 1 774 0
 5459 2b20 11E0     		b	.L245
 5460              	.L247:
 776:..\src/command_processing.c ****                         break;
 5461              		.loc 1 776 0
 5462 2b22 07F13803 		add	r3, r7, #56
 5463 2b26 183B     		subs	r3, r3, #24
 5464 2b28 1846     		mov	r0, r3
 5465 2b2a FFF7FEFF 		bl	strlen
 5466 2b2e 0346     		mov	r3, r0
 5467 2b30 1A46     		mov	r2, r3
 5468 2b32 07F13803 		add	r3, r7, #56
 5469 2b36 183B     		subs	r3, r3, #24
 5470 2b38 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 129


 5471 2b3a 734A     		ldr	r2, .L303+32
 5472 2b3c 1068     		ldr	r0, [r2]	@ unaligned
 5473 2b3e 1860     		str	r0, [r3]	@ unaligned
 5474 2b40 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5475 2b42 9A80     		strh	r2, [r3, #4]	@ unaligned
 777:..\src/command_processing.c ****                     }   
 5476              		.loc 1 777 0
 5477 2b44 00BF     		nop
 5478              	.L245:
 5479              		.loc 1 779 0
 5480 2b46 9FE1     		b	.L195
 5481              	.L205:
 780:..\src/command_processing.c ****                 case 9:     // driver type menu
 781:..\src/command_processing.c ****                     switch(*m_addr){
 5482              		.loc 1 781 0
 5483 2b48 07F5B053 		add	r3, r7, #5632
 5484 2b4c 03F10803 		add	r3, r3, #8
 5485 2b50 1B68     		ldr	r3, [r3]
 5486 2b52 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5487 2b54 002B     		cmp	r3, #0
 5488 2b56 02D0     		beq	.L250
 5489 2b58 012B     		cmp	r3, #1
 5490 2b5a 17D0     		beq	.L251
 782:..\src/command_processing.c ****                         case 0:
 783:..\src/command_processing.c ****                             strcat(aux_str, " MC33887 (Standard)\0");
 784:..\src/command_processing.c ****                         break;
 785:..\src/command_processing.c ****                         case 1:
 786:..\src/command_processing.c ****                             strcat(aux_str, " VNH5019 (High power)\0");
 787:..\src/command_processing.c ****                         break;
 788:..\src/command_processing.c ****                     }
 789:..\src/command_processing.c ****                     break;
 5491              		.loc 1 789 0
 5492 2b5c 94E1     		b	.L195
 5493              	.L250:
 783:..\src/command_processing.c ****                         break;
 5494              		.loc 1 783 0
 5495 2b5e 07F13803 		add	r3, r7, #56
 5496 2b62 183B     		subs	r3, r3, #24
 5497 2b64 1846     		mov	r0, r3
 5498 2b66 FFF7FEFF 		bl	strlen
 5499 2b6a 0346     		mov	r3, r0
 5500 2b6c 1A46     		mov	r2, r3
 5501 2b6e 07F13803 		add	r3, r7, #56
 5502 2b72 183B     		subs	r3, r3, #24
 5503 2b74 1344     		add	r3, r3, r2
 5504 2b76 654A     		ldr	r2, .L303+36
 5505 2b78 1D46     		mov	r5, r3
 5506 2b7a 1446     		mov	r4, r2
 5507 2b7c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5508 2b7e 2860     		str	r0, [r5]	@ unaligned
 5509 2b80 6960     		str	r1, [r5, #4]	@ unaligned
 5510 2b82 AA60     		str	r2, [r5, #8]	@ unaligned
 5511 2b84 EB60     		str	r3, [r5, #12]	@ unaligned
 5512 2b86 2068     		ldr	r0, [r4]	@ unaligned
 5513 2b88 2861     		str	r0, [r5, #16]	@ unaligned
 784:..\src/command_processing.c ****                         case 1:
 5514              		.loc 1 784 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 130


 5515 2b8a 18E0     		b	.L249
 5516              	.L251:
 786:..\src/command_processing.c ****                         break;
 5517              		.loc 1 786 0
 5518 2b8c 07F13803 		add	r3, r7, #56
 5519 2b90 183B     		subs	r3, r3, #24
 5520 2b92 1846     		mov	r0, r3
 5521 2b94 FFF7FEFF 		bl	strlen
 5522 2b98 0346     		mov	r3, r0
 5523 2b9a 1A46     		mov	r2, r3
 5524 2b9c 07F13803 		add	r3, r7, #56
 5525 2ba0 183B     		subs	r3, r3, #24
 5526 2ba2 1344     		add	r3, r3, r2
 5527 2ba4 5A4A     		ldr	r2, .L303+40
 5528 2ba6 1D46     		mov	r5, r3
 5529 2ba8 1446     		mov	r4, r2
 5530 2baa 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5531 2bac 2860     		str	r0, [r5]	@ unaligned
 5532 2bae 6960     		str	r1, [r5, #4]	@ unaligned
 5533 2bb0 AA60     		str	r2, [r5, #8]	@ unaligned
 5534 2bb2 EB60     		str	r3, [r5, #12]	@ unaligned
 5535 2bb4 2068     		ldr	r0, [r4]	@ unaligned
 5536 2bb6 2861     		str	r0, [r5, #16]	@ unaligned
 5537 2bb8 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5538 2bba AB82     		strh	r3, [r5, #20]	@ unaligned
 787:..\src/command_processing.c ****                     }
 5539              		.loc 1 787 0
 5540 2bbc 00BF     		nop
 5541              	.L249:
 5542              		.loc 1 789 0
 5543 2bbe 63E1     		b	.L195
 5544              	.L206:
 790:..\src/command_processing.c ****                 case 10:    // device type menu
 791:..\src/command_processing.c ****                     switch(*m_addr){
 5545              		.loc 1 791 0
 5546 2bc0 07F5B053 		add	r3, r7, #5632
 5547 2bc4 03F10803 		add	r3, r3, #8
 5548 2bc8 1B68     		ldr	r3, [r3]
 5549 2bca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5550 2bcc 042B     		cmp	r3, #4
 5551 2bce 00F25A81 		bhi	.L283
 5552 2bd2 01A2     		adr	r2, .L254
 5553 2bd4 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5554              		.p2align 2
 5555              	.L254:
 5556 2bd8 ED2B0000 		.word	.L253+1
 5557 2bdc 192C0000 		.word	.L255+1
 5558 2be0 472C0000 		.word	.L256+1
 5559 2be4 732C0000 		.word	.L257+1
 5560 2be8 9D2C0000 		.word	.L258+1
 5561              		.p2align 1
 5562              	.L253:
 792:..\src/command_processing.c ****                         case 0:
 793:..\src/command_processing.c ****                             strcat(aux_str, " SOFTHAND PRO\0");
 5563              		.loc 1 793 0
 5564 2bec 07F13803 		add	r3, r7, #56
 5565 2bf0 183B     		subs	r3, r3, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 131


 5566 2bf2 1846     		mov	r0, r3
 5567 2bf4 FFF7FEFF 		bl	strlen
 5568 2bf8 0346     		mov	r3, r0
 5569 2bfa 1A46     		mov	r2, r3
 5570 2bfc 07F13803 		add	r3, r7, #56
 5571 2c00 183B     		subs	r3, r3, #24
 5572 2c02 1344     		add	r3, r3, r2
 5573 2c04 434A     		ldr	r2, .L303+44
 5574 2c06 1C46     		mov	r4, r3
 5575 2c08 1346     		mov	r3, r2
 5576 2c0a 07CB     		ldmia	r3!, {r0, r1, r2}
 5577 2c0c 2060     		str	r0, [r4]	@ unaligned
 5578 2c0e 6160     		str	r1, [r4, #4]	@ unaligned
 5579 2c10 A260     		str	r2, [r4, #8]	@ unaligned
 5580 2c12 1B88     		ldrh	r3, [r3]	@ unaligned
 5581 2c14 A381     		strh	r3, [r4, #12]	@ unaligned
 794:..\src/command_processing.c ****                         break;
 5582              		.loc 1 794 0
 5583 2c16 5BE0     		b	.L252
 5584              	.L255:
 795:..\src/command_processing.c ****                         case 1:
 796:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC 2 MOTORS\0");
 5585              		.loc 1 796 0
 5586 2c18 07F13803 		add	r3, r7, #56
 5587 2c1c 183B     		subs	r3, r3, #24
 5588 2c1e 1846     		mov	r0, r3
 5589 2c20 FFF7FEFF 		bl	strlen
 5590 2c24 0346     		mov	r3, r0
 5591 2c26 1A46     		mov	r2, r3
 5592 2c28 07F13803 		add	r3, r7, #56
 5593 2c2c 183B     		subs	r3, r3, #24
 5594 2c2e 1344     		add	r3, r3, r2
 5595 2c30 394A     		ldr	r2, .L303+48
 5596 2c32 1D46     		mov	r5, r3
 5597 2c34 1446     		mov	r4, r2
 5598 2c36 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5599 2c38 2860     		str	r0, [r5]	@ unaligned
 5600 2c3a 6960     		str	r1, [r5, #4]	@ unaligned
 5601 2c3c AA60     		str	r2, [r5, #8]	@ unaligned
 5602 2c3e EB60     		str	r3, [r5, #12]	@ unaligned
 5603 2c40 2388     		ldrh	r3, [r4]	@ unaligned
 5604 2c42 2B82     		strh	r3, [r5, #16]	@ unaligned
 797:..\src/command_processing.c ****                         break;
 5605              		.loc 1 797 0
 5606 2c44 44E0     		b	.L252
 5607              	.L256:
 798:..\src/command_processing.c ****                         case 2:
 799:..\src/command_processing.c ****                             strcat(aux_str, " AIR CHAMBERS\0");
 5608              		.loc 1 799 0
 5609 2c46 07F13803 		add	r3, r7, #56
 5610 2c4a 183B     		subs	r3, r3, #24
 5611 2c4c 1846     		mov	r0, r3
 5612 2c4e FFF7FEFF 		bl	strlen
 5613 2c52 0346     		mov	r3, r0
 5614 2c54 1A46     		mov	r2, r3
 5615 2c56 07F13803 		add	r3, r7, #56
 5616 2c5a 183B     		subs	r3, r3, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 132


 5617 2c5c 1344     		add	r3, r3, r2
 5618 2c5e 2F4A     		ldr	r2, .L303+52
 5619 2c60 1C46     		mov	r4, r3
 5620 2c62 1346     		mov	r3, r2
 5621 2c64 07CB     		ldmia	r3!, {r0, r1, r2}
 5622 2c66 2060     		str	r0, [r4]	@ unaligned
 5623 2c68 6160     		str	r1, [r4, #4]	@ unaligned
 5624 2c6a A260     		str	r2, [r4, #8]	@ unaligned
 5625 2c6c 1B88     		ldrh	r3, [r3]	@ unaligned
 5626 2c6e A381     		strh	r3, [r4, #12]	@ unaligned
 800:..\src/command_processing.c ****                         break;
 5627              		.loc 1 800 0
 5628 2c70 2EE0     		b	.L252
 5629              	.L257:
 801:..\src/command_processing.c ****                         case 3:
 802:..\src/command_processing.c ****                             strcat(aux_str, " OTTOBOCK WRIST\0");
 5630              		.loc 1 802 0
 5631 2c72 07F13803 		add	r3, r7, #56
 5632 2c76 183B     		subs	r3, r3, #24
 5633 2c78 1846     		mov	r0, r3
 5634 2c7a FFF7FEFF 		bl	strlen
 5635 2c7e 0346     		mov	r3, r0
 5636 2c80 1A46     		mov	r2, r3
 5637 2c82 07F13803 		add	r3, r7, #56
 5638 2c86 183B     		subs	r3, r3, #24
 5639 2c88 1344     		add	r3, r3, r2
 5640 2c8a 254A     		ldr	r2, .L303+56
 5641 2c8c 1C46     		mov	r4, r3
 5642 2c8e 1546     		mov	r5, r2
 5643 2c90 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5644 2c92 2060     		str	r0, [r4]	@ unaligned
 5645 2c94 6160     		str	r1, [r4, #4]	@ unaligned
 5646 2c96 A260     		str	r2, [r4, #8]	@ unaligned
 5647 2c98 E360     		str	r3, [r4, #12]	@ unaligned
 803:..\src/command_processing.c ****                         break;
 5648              		.loc 1 803 0
 5649 2c9a 19E0     		b	.L252
 5650              	.L258:
 804:..\src/command_processing.c ****                         case 4:
 805:..\src/command_processing.c ****                             strcat(aux_str, " SOFTHAND 2 MOTORS\0");
 5651              		.loc 1 805 0
 5652 2c9c 07F13803 		add	r3, r7, #56
 5653 2ca0 183B     		subs	r3, r3, #24
 5654 2ca2 1846     		mov	r0, r3
 5655 2ca4 FFF7FEFF 		bl	strlen
 5656 2ca8 0346     		mov	r3, r0
 5657 2caa 1A46     		mov	r2, r3
 5658 2cac 07F13803 		add	r3, r7, #56
 5659 2cb0 183B     		subs	r3, r3, #24
 5660 2cb2 1344     		add	r3, r3, r2
 5661 2cb4 1B4A     		ldr	r2, .L303+60
 5662 2cb6 1D46     		mov	r5, r3
 5663 2cb8 1446     		mov	r4, r2
 5664 2cba 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5665 2cbc 2860     		str	r0, [r5]	@ unaligned
 5666 2cbe 6960     		str	r1, [r5, #4]	@ unaligned
 5667 2cc0 AA60     		str	r2, [r5, #8]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 133


 5668 2cc2 EB60     		str	r3, [r5, #12]	@ unaligned
 5669 2cc4 2388     		ldrh	r3, [r4]	@ unaligned
 5670 2cc6 A278     		ldrb	r2, [r4, #2]
 5671 2cc8 2B82     		strh	r3, [r5, #16]	@ unaligned
 5672 2cca 1346     		mov	r3, r2
 5673 2ccc AB74     		strb	r3, [r5, #18]
 806:..\src/command_processing.c ****                         break;
 5674              		.loc 1 806 0
 5675 2cce 00BF     		nop
 5676              	.L252:
 807:..\src/command_processing.c ****                     }
 808:..\src/command_processing.c ****                     break;
 5677              		.loc 1 808 0
 5678 2cd0 D9E0     		b	.L283
 5679              	.L207:
 809:..\src/command_processing.c ****                 case 11:    // fsm activation mode menu
 810:..\src/command_processing.c ****                     switch(*m_addr){
 5680              		.loc 1 810 0
 5681 2cd2 07F5B053 		add	r3, r7, #5632
 5682 2cd6 03F10803 		add	r3, r3, #8
 5683 2cda 1B68     		ldr	r3, [r3]
 5684 2cdc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5685 2cde 002B     		cmp	r3, #0
 5686 2ce0 22D0     		beq	.L260
 5687 2ce2 012B     		cmp	r3, #1
 5688 2ce4 57D0     		beq	.L261
 811:..\src/command_processing.c ****                         case 0:
 812:..\src/command_processing.c ****                             if (c_mem.dev.dev_type == SOFTHAND_2_MOTORS){
 813:..\src/command_processing.c ****                                 strcat(aux_str, " Fast:syn2, Slow:syn1\0");
 814:..\src/command_processing.c ****                             }
 815:..\src/command_processing.c ****                             else {
 816:..\src/command_processing.c ****                                 strcat(aux_str, " Fast:wrist,Slow:hand\0");
 817:..\src/command_processing.c ****                             }                            
 818:..\src/command_processing.c ****                         break;
 819:..\src/command_processing.c ****                         case 1:
 820:..\src/command_processing.c ****                             if (c_mem.dev.dev_type == SOFTHAND_2_MOTORS){
 821:..\src/command_processing.c ****                                 strcat(aux_str, " Slow:syn2, Fast:syn1\0");
 822:..\src/command_processing.c ****                             }
 823:..\src/command_processing.c ****                             else {
 824:..\src/command_processing.c ****                                 strcat(aux_str, " Slow:wrist,Fast:hand\0");
 825:..\src/command_processing.c ****                             }
 826:..\src/command_processing.c ****                         break;
 827:..\src/command_processing.c ****                     }
 828:..\src/command_processing.c ****                     break;
 5689              		.loc 1 828 0
 5690 2ce6 CFE0     		b	.L195
 5691              	.L304:
 5692              		.align	2
 5693              	.L303:
 5694 2ce8 EC000000 		.word	.LC106
 5695 2cec F4000000 		.word	.LC107
 5696 2cf0 04010000 		.word	.LC108
 5697 2cf4 18010000 		.word	.LC109
 5698 2cf8 28010000 		.word	.LC110
 5699 2cfc 30010000 		.word	.LC111
 5700 2d00 38010000 		.word	.LC112
 5701 2d04 48010000 		.word	.LC113
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 134


 5702 2d08 50010000 		.word	.LC114
 5703 2d0c 58010000 		.word	.LC115
 5704 2d10 70010000 		.word	.LC116
 5705 2d14 88010000 		.word	.LC117
 5706 2d18 98010000 		.word	.LC118
 5707 2d1c AC010000 		.word	.LC119
 5708 2d20 BC010000 		.word	.LC120
 5709 2d24 D0010000 		.word	.LC121
 5710              	.L260:
 812:..\src/command_processing.c ****                                 strcat(aux_str, " Fast:syn2, Slow:syn1\0");
 5711              		.loc 1 812 0
 5712 2d28 CF4B     		ldr	r3, .L305
 5713 2d2a 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 5714 2d2e 042B     		cmp	r3, #4
 5715 2d30 18D1     		bne	.L262
 813:..\src/command_processing.c ****                             }
 5716              		.loc 1 813 0
 5717 2d32 07F13803 		add	r3, r7, #56
 5718 2d36 183B     		subs	r3, r3, #24
 5719 2d38 1846     		mov	r0, r3
 5720 2d3a FFF7FEFF 		bl	strlen
 5721 2d3e 0346     		mov	r3, r0
 5722 2d40 1A46     		mov	r2, r3
 5723 2d42 07F13803 		add	r3, r7, #56
 5724 2d46 183B     		subs	r3, r3, #24
 5725 2d48 1344     		add	r3, r3, r2
 5726 2d4a C84A     		ldr	r2, .L305+4
 5727 2d4c 1D46     		mov	r5, r3
 5728 2d4e 1446     		mov	r4, r2
 5729 2d50 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5730 2d52 2860     		str	r0, [r5]	@ unaligned
 5731 2d54 6960     		str	r1, [r5, #4]	@ unaligned
 5732 2d56 AA60     		str	r2, [r5, #8]	@ unaligned
 5733 2d58 EB60     		str	r3, [r5, #12]	@ unaligned
 5734 2d5a 2068     		ldr	r0, [r4]	@ unaligned
 5735 2d5c 2861     		str	r0, [r5, #16]	@ unaligned
 5736 2d5e A388     		ldrh	r3, [r4, #4]	@ unaligned
 5737 2d60 AB82     		strh	r3, [r5, #20]	@ unaligned
 818:..\src/command_processing.c ****                         case 1:
 5738              		.loc 1 818 0
 5739 2d62 4FE0     		b	.L259
 5740              	.L262:
 816:..\src/command_processing.c ****                             }                            
 5741              		.loc 1 816 0
 5742 2d64 07F13803 		add	r3, r7, #56
 5743 2d68 183B     		subs	r3, r3, #24
 5744 2d6a 1846     		mov	r0, r3
 5745 2d6c FFF7FEFF 		bl	strlen
 5746 2d70 0346     		mov	r3, r0
 5747 2d72 1A46     		mov	r2, r3
 5748 2d74 07F13803 		add	r3, r7, #56
 5749 2d78 183B     		subs	r3, r3, #24
 5750 2d7a 1344     		add	r3, r3, r2
 5751 2d7c BC4A     		ldr	r2, .L305+8
 5752 2d7e 1D46     		mov	r5, r3
 5753 2d80 1446     		mov	r4, r2
 5754 2d82 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 135


 5755 2d84 2860     		str	r0, [r5]	@ unaligned
 5756 2d86 6960     		str	r1, [r5, #4]	@ unaligned
 5757 2d88 AA60     		str	r2, [r5, #8]	@ unaligned
 5758 2d8a EB60     		str	r3, [r5, #12]	@ unaligned
 5759 2d8c 2068     		ldr	r0, [r4]	@ unaligned
 5760 2d8e 2861     		str	r0, [r5, #16]	@ unaligned
 5761 2d90 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5762 2d92 AB82     		strh	r3, [r5, #20]	@ unaligned
 818:..\src/command_processing.c ****                         case 1:
 5763              		.loc 1 818 0
 5764 2d94 36E0     		b	.L259
 5765              	.L261:
 820:..\src/command_processing.c ****                                 strcat(aux_str, " Slow:syn2, Fast:syn1\0");
 5766              		.loc 1 820 0
 5767 2d96 B44B     		ldr	r3, .L305
 5768 2d98 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 5769 2d9c 042B     		cmp	r3, #4
 5770 2d9e 18D1     		bne	.L264
 821:..\src/command_processing.c ****                             }
 5771              		.loc 1 821 0
 5772 2da0 07F13803 		add	r3, r7, #56
 5773 2da4 183B     		subs	r3, r3, #24
 5774 2da6 1846     		mov	r0, r3
 5775 2da8 FFF7FEFF 		bl	strlen
 5776 2dac 0346     		mov	r3, r0
 5777 2dae 1A46     		mov	r2, r3
 5778 2db0 07F13803 		add	r3, r7, #56
 5779 2db4 183B     		subs	r3, r3, #24
 5780 2db6 1344     		add	r3, r3, r2
 5781 2db8 AE4A     		ldr	r2, .L305+12
 5782 2dba 1D46     		mov	r5, r3
 5783 2dbc 1446     		mov	r4, r2
 5784 2dbe 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5785 2dc0 2860     		str	r0, [r5]	@ unaligned
 5786 2dc2 6960     		str	r1, [r5, #4]	@ unaligned
 5787 2dc4 AA60     		str	r2, [r5, #8]	@ unaligned
 5788 2dc6 EB60     		str	r3, [r5, #12]	@ unaligned
 5789 2dc8 2068     		ldr	r0, [r4]	@ unaligned
 5790 2dca 2861     		str	r0, [r5, #16]	@ unaligned
 5791 2dcc A388     		ldrh	r3, [r4, #4]	@ unaligned
 5792 2dce AB82     		strh	r3, [r5, #20]	@ unaligned
 826:..\src/command_processing.c ****                     }
 5793              		.loc 1 826 0
 5794 2dd0 17E0     		b	.L284
 5795              	.L264:
 824:..\src/command_processing.c ****                             }
 5796              		.loc 1 824 0
 5797 2dd2 07F13803 		add	r3, r7, #56
 5798 2dd6 183B     		subs	r3, r3, #24
 5799 2dd8 1846     		mov	r0, r3
 5800 2dda FFF7FEFF 		bl	strlen
 5801 2dde 0346     		mov	r3, r0
 5802 2de0 1A46     		mov	r2, r3
 5803 2de2 07F13803 		add	r3, r7, #56
 5804 2de6 183B     		subs	r3, r3, #24
 5805 2de8 1344     		add	r3, r3, r2
 5806 2dea A34A     		ldr	r2, .L305+16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 136


 5807 2dec 1D46     		mov	r5, r3
 5808 2dee 1446     		mov	r4, r2
 5809 2df0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5810 2df2 2860     		str	r0, [r5]	@ unaligned
 5811 2df4 6960     		str	r1, [r5, #4]	@ unaligned
 5812 2df6 AA60     		str	r2, [r5, #8]	@ unaligned
 5813 2df8 EB60     		str	r3, [r5, #12]	@ unaligned
 5814 2dfa 2068     		ldr	r0, [r4]	@ unaligned
 5815 2dfc 2861     		str	r0, [r5, #16]	@ unaligned
 5816 2dfe A388     		ldrh	r3, [r4, #4]	@ unaligned
 5817 2e00 AB82     		strh	r3, [r5, #20]	@ unaligned
 5818              	.L284:
 826:..\src/command_processing.c ****                     }
 5819              		.loc 1 826 0
 5820 2e02 00BF     		nop
 5821              	.L259:
 5822              		.loc 1 828 0 discriminator 13
 5823 2e04 40E0     		b	.L195
 5824              	.L208:
 829:..\src/command_processing.c ****                 case 12:    // wrist direction association menu
 830:..\src/command_processing.c ****                     switch(*m_addr){
 5825              		.loc 1 830 0
 5826 2e06 07F5B053 		add	r3, r7, #5632
 5827 2e0a 03F10803 		add	r3, r3, #8
 5828 2e0e 1B68     		ldr	r3, [r3]
 5829 2e10 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5830 2e12 002B     		cmp	r3, #0
 5831 2e14 02D0     		beq	.L267
 5832 2e16 012B     		cmp	r3, #1
 5833 2e18 17D0     		beq	.L268
 831:..\src/command_processing.c ****                         case 0:
 832:..\src/command_processing.c ****                             strcat(aux_str, " Close:CW, Open:CCW\0");
 833:..\src/command_processing.c ****                         break;
 834:..\src/command_processing.c ****                         case 1:
 835:..\src/command_processing.c ****                             strcat(aux_str, " Close:CCW, Open:CW\0");
 836:..\src/command_processing.c ****                         break;
 837:..\src/command_processing.c ****                     }
 838:..\src/command_processing.c ****                     break;
 5834              		.loc 1 838 0
 5835 2e1a 35E0     		b	.L195
 5836              	.L267:
 832:..\src/command_processing.c ****                         break;
 5837              		.loc 1 832 0
 5838 2e1c 07F13803 		add	r3, r7, #56
 5839 2e20 183B     		subs	r3, r3, #24
 5840 2e22 1846     		mov	r0, r3
 5841 2e24 FFF7FEFF 		bl	strlen
 5842 2e28 0346     		mov	r3, r0
 5843 2e2a 1A46     		mov	r2, r3
 5844 2e2c 07F13803 		add	r3, r7, #56
 5845 2e30 183B     		subs	r3, r3, #24
 5846 2e32 1344     		add	r3, r3, r2
 5847 2e34 914A     		ldr	r2, .L305+20
 5848 2e36 1D46     		mov	r5, r3
 5849 2e38 1446     		mov	r4, r2
 5850 2e3a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5851 2e3c 2860     		str	r0, [r5]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 137


 5852 2e3e 6960     		str	r1, [r5, #4]	@ unaligned
 5853 2e40 AA60     		str	r2, [r5, #8]	@ unaligned
 5854 2e42 EB60     		str	r3, [r5, #12]	@ unaligned
 5855 2e44 2068     		ldr	r0, [r4]	@ unaligned
 5856 2e46 2861     		str	r0, [r5, #16]	@ unaligned
 833:..\src/command_processing.c ****                         case 1:
 5857              		.loc 1 833 0
 5858 2e48 16E0     		b	.L266
 5859              	.L268:
 835:..\src/command_processing.c ****                         break;
 5860              		.loc 1 835 0
 5861 2e4a 07F13803 		add	r3, r7, #56
 5862 2e4e 183B     		subs	r3, r3, #24
 5863 2e50 1846     		mov	r0, r3
 5864 2e52 FFF7FEFF 		bl	strlen
 5865 2e56 0346     		mov	r3, r0
 5866 2e58 1A46     		mov	r2, r3
 5867 2e5a 07F13803 		add	r3, r7, #56
 5868 2e5e 183B     		subs	r3, r3, #24
 5869 2e60 1344     		add	r3, r3, r2
 5870 2e62 874A     		ldr	r2, .L305+24
 5871 2e64 1D46     		mov	r5, r3
 5872 2e66 1446     		mov	r4, r2
 5873 2e68 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5874 2e6a 2860     		str	r0, [r5]	@ unaligned
 5875 2e6c 6960     		str	r1, [r5, #4]	@ unaligned
 5876 2e6e AA60     		str	r2, [r5, #8]	@ unaligned
 5877 2e70 EB60     		str	r3, [r5, #12]	@ unaligned
 5878 2e72 2068     		ldr	r0, [r4]	@ unaligned
 5879 2e74 2861     		str	r0, [r5, #16]	@ unaligned
 836:..\src/command_processing.c ****                     }
 5880              		.loc 1 836 0
 5881 2e76 00BF     		nop
 5882              	.L266:
 5883              		.loc 1 838 0
 5884 2e78 06E0     		b	.L195
 5885              	.L280:
 691:..\src/command_processing.c ****                 case 2:     // control mode menu
 5886              		.loc 1 691 0
 5887 2e7a 00BF     		nop
 5888 2e7c 04E0     		b	.L195
 5889              	.L281:
 707:..\src/command_processing.c ****                 case 3:     // yes/no menu
 5890              		.loc 1 707 0
 5891 2e7e 00BF     		nop
 5892 2e80 02E0     		b	.L195
 5893              	.L282:
 751:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 5894              		.loc 1 751 0
 5895 2e82 00BF     		nop
 5896 2e84 00E0     		b	.L195
 5897              	.L283:
 808:..\src/command_processing.c ****                 case 11:    // fsm activation mode menu
 5898              		.loc 1 808 0
 5899 2e86 00BF     		nop
 5900              	.L195:
 839:..\src/command_processing.c ****             }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 138


 840:..\src/command_processing.c ****             //Recomputes string lenght
 841:..\src/command_processing.c ****             string_lenght = strlen(aux_str)+1;
 5901              		.loc 1 841 0
 5902 2e88 07F13803 		add	r3, r7, #56
 5903 2e8c 183B     		subs	r3, r3, #24
 5904 2e8e 1846     		mov	r0, r3
 5905 2e90 FFF7FEFF 		bl	strlen
 5906 2e94 0346     		mov	r3, r0
 5907 2e96 DBB2     		uxtb	r3, r3
 5908 2e98 0133     		adds	r3, r3, #1
 5909 2e9a 07F5B052 		add	r2, r7, #5632
 5910 2e9e 02F11202 		add	r2, r2, #18
 5911 2ea2 1370     		strb	r3, [r2]
 5912              	.L194:
 842:..\src/command_processing.c ****         }
 843:..\src/command_processing.c **** 
 844:..\src/command_processing.c ****         // Add parameter string to packet
 845:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 5913              		.loc 1 845 0
 5914 2ea4 07F5B053 		add	r3, r7, #5632
 5915 2ea8 03F11203 		add	r3, r3, #18
 5916 2eac 1B78     		ldrb	r3, [r3]
 5917 2eae 07F5B052 		add	r2, r7, #5632
 5918 2eb2 02F11702 		add	r2, r2, #23
 5919 2eb6 1370     		strb	r3, [r2]
 5920 2eb8 45E0     		b	.L269
 5921              	.L270:
 846:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 5922              		.loc 1 846 0 discriminator 3
 5923 2eba 07F5B053 		add	r3, r7, #5632
 5924 2ebe 03F11503 		add	r3, r3, #21
 5925 2ec2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5926 2ec4 3222     		movs	r2, #50
 5927 2ec6 02FB03F3 		mul	r3, r2, r3
 5928 2eca 1A1D     		adds	r2, r3, #4
 5929 2ecc 07F5B053 		add	r3, r7, #5632
 5930 2ed0 03F11303 		add	r3, r3, #19
 5931 2ed4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5932 2ed6 07F5B053 		add	r3, r7, #5632
 5933 2eda 03F11503 		add	r3, r3, #21
 5934 2ede 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5935 2ee0 07F11803 		add	r3, r7, #24
 5936 2ee4 143B     		subs	r3, r3, #20
 5937 2ee6 1B68     		ldr	r3, [r3]
 5938 2ee8 0344     		add	r3, r3, r0
 5939 2eea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5940 2eec 03FB01F3 		mul	r3, r3, r1
 5941 2ef0 1A44     		add	r2, r2, r3
 5942 2ef2 07F5B053 		add	r3, r7, #5632
 5943 2ef6 03F11203 		add	r3, r3, #18
 5944 2efa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5945 2efc 1A44     		add	r2, r2, r3
 5946 2efe 07F5B053 		add	r3, r7, #5632
 5947 2f02 03F11703 		add	r3, r3, #23
 5948 2f06 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5949 2f08 D21A     		subs	r2, r2, r3
 5950 2f0a 07F5B053 		add	r3, r7, #5632
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 139


 5951 2f0e 03F11203 		add	r3, r3, #18
 5952 2f12 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5953 2f14 07F5B053 		add	r3, r7, #5632
 5954 2f18 03F11703 		add	r3, r3, #23
 5955 2f1c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5956 2f1e C91A     		subs	r1, r1, r3
 5957 2f20 07F13803 		add	r3, r7, #56
 5958 2f24 183B     		subs	r3, r3, #24
 5959 2f26 595C     		ldrb	r1, [r3, r1]	@ zero_extendqisi2
 5960 2f28 07F15803 		add	r3, r7, #88
 5961 2f2c 043B     		subs	r3, r3, #4
 5962 2f2e 9954     		strb	r1, [r3, r2]
 845:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 5963              		.loc 1 845 0 discriminator 3
 5964 2f30 07F5B053 		add	r3, r7, #5632
 5965 2f34 03F11703 		add	r3, r3, #23
 5966 2f38 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5967 2f3a 013B     		subs	r3, r3, #1
 5968 2f3c 07F5B052 		add	r2, r7, #5632
 5969 2f40 02F11702 		add	r2, r2, #23
 5970 2f44 1370     		strb	r3, [r2]
 5971              	.L269:
 845:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 5972              		.loc 1 845 0 is_stmt 0 discriminator 1
 5973 2f46 07F5B053 		add	r3, r7, #5632
 5974 2f4a 03F11703 		add	r3, r3, #23
 5975 2f4e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5976 2f50 002B     		cmp	r3, #0
 5977 2f52 B2D1     		bne	.L270
 847:..\src/command_processing.c ****         //The following byte indicates the number of menus at the end of the packet to send
 848:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 5978              		.loc 1 848 0 is_stmt 1
 5979 2f54 07F5B053 		add	r3, r7, #5632
 5980 2f58 03F11503 		add	r3, r3, #21
 5981 2f5c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5982 2f5e 07F11803 		add	r3, r7, #24
 5983 2f62 103B     		subs	r3, r3, #16
 5984 2f64 1B68     		ldr	r3, [r3]
 5985 2f66 1344     		add	r3, r3, r2
 5986 2f68 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5987 2f6a 002B     		cmp	r3, #0
 5988 2f6c 3CD1     		bne	.L271
 849:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght] = NUM_MEN
 5989              		.loc 1 849 0
 5990 2f6e 07F5B053 		add	r3, r7, #5632
 5991 2f72 03F11503 		add	r3, r3, #21
 5992 2f76 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5993 2f78 3222     		movs	r2, #50
 5994 2f7a 02FB03F3 		mul	r3, r2, r3
 5995 2f7e 1A1D     		adds	r2, r3, #4
 5996 2f80 07F5B053 		add	r3, r7, #5632
 5997 2f84 03F11303 		add	r3, r3, #19
 5998 2f88 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5999 2f8a 07F5B053 		add	r3, r7, #5632
 6000 2f8e 03F11503 		add	r3, r3, #21
 6001 2f92 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6002 2f94 07F11803 		add	r3, r7, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 140


 6003 2f98 143B     		subs	r3, r3, #20
 6004 2f9a 1B68     		ldr	r3, [r3]
 6005 2f9c 0344     		add	r3, r3, r0
 6006 2f9e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6007 2fa0 03FB01F3 		mul	r3, r3, r1
 6008 2fa4 1A44     		add	r2, r2, r3
 6009 2fa6 07F5B053 		add	r3, r7, #5632
 6010 2faa 03F11203 		add	r3, r3, #18
 6011 2fae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6012 2fb0 1A44     		add	r2, r2, r3
 6013 2fb2 07F5B053 		add	r3, r7, #5632
 6014 2fb6 03F11403 		add	r3, r3, #20
 6015 2fba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6016 2fbc 07F5B151 		add	r1, r7, #5664
 6017 2fc0 01F11001 		add	r1, r1, #16
 6018 2fc4 0968     		ldr	r1, [r1]
 6019 2fc6 0B44     		add	r3, r3, r1
 6020 2fc8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6021 2fca 07F15803 		add	r3, r7, #88
 6022 2fce 043B     		subs	r3, r3, #4
 6023 2fd0 9954     		strb	r1, [r3, r2]
 850:..\src/command_processing.c ****             idx_menu = idx_menu + 1;
 6024              		.loc 1 850 0
 6025 2fd2 07F5B053 		add	r3, r7, #5632
 6026 2fd6 03F11403 		add	r3, r3, #20
 6027 2fda 1B78     		ldrb	r3, [r3]
 6028 2fdc 0133     		adds	r3, r3, #1
 6029 2fde 07F5B052 		add	r2, r7, #5632
 6030 2fe2 02F11402 		add	r2, r2, #20
 6031 2fe6 1370     		strb	r3, [r2]
 6032              	.L271:
 851:..\src/command_processing.c ****         }      
 852:..\src/command_processing.c ****         
 853:..\src/command_processing.c ****         // Add struct index after an empty bit
 854:..\src/command_processing.c ****         // Note: added here at the end of packets is transparent to old parameters retrieving versi
 855:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 6033              		.loc 1 855 0
 6034 2fe8 07F5B053 		add	r3, r7, #5632
 6035 2fec 03F11503 		add	r3, r3, #21
 6036 2ff0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6037 2ff2 07F11803 		add	r3, r7, #24
 6038 2ff6 103B     		subs	r3, r3, #16
 6039 2ff8 1B68     		ldr	r3, [r3]
 6040 2ffa 1344     		add	r3, r3, r2
 6041 2ffc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6042 2ffe 002B     		cmp	r3, #0
 6043 3000 40D1     		bne	.L272
 856:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght + 2] = NUM
 6044              		.loc 1 856 0
 6045 3002 07F5B053 		add	r3, r7, #5632
 6046 3006 03F11503 		add	r3, r3, #21
 6047 300a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6048 300c 3222     		movs	r2, #50
 6049 300e 02FB03F3 		mul	r3, r2, r3
 6050 3012 1A1D     		adds	r2, r3, #4
 6051 3014 07F5B053 		add	r3, r7, #5632
 6052 3018 03F11303 		add	r3, r3, #19
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 141


 6053 301c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6054 301e 07F5B053 		add	r3, r7, #5632
 6055 3022 03F11503 		add	r3, r3, #21
 6056 3026 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6057 3028 07F11803 		add	r3, r7, #24
 6058 302c 143B     		subs	r3, r3, #20
 6059 302e 1B68     		ldr	r3, [r3]
 6060 3030 0344     		add	r3, r3, r0
 6061 3032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6062 3034 03FB01F3 		mul	r3, r3, r1
 6063 3038 1A44     		add	r2, r2, r3
 6064 303a 07F5B053 		add	r3, r7, #5632
 6065 303e 03F11203 		add	r3, r3, #18
 6066 3042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6067 3044 1344     		add	r3, r3, r2
 6068 3046 9A1C     		adds	r2, r3, #2
 6069 3048 07F5B053 		add	r3, r7, #5632
 6070 304c 03F11503 		add	r3, r3, #21
 6071 3050 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6072 3052 07F11803 		add	r3, r7, #24
 6073 3056 183B     		subs	r3, r3, #24
 6074 3058 1B68     		ldr	r3, [r3]
 6075 305a 0B44     		add	r3, r3, r1
 6076 305c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6077 305e 07F15803 		add	r3, r7, #88
 6078 3062 043B     		subs	r3, r3, #4
 6079 3064 9954     		strb	r1, [r3, r2]
 6080 3066 3FE0     		b	.L273
 6081              	.L306:
 6082              		.align	2
 6083              	.L305:
 6084 3068 00000000 		.word	c_mem
 6085 306c E4010000 		.word	.LC122
 6086 3070 FC010000 		.word	.LC123
 6087 3074 14020000 		.word	.LC124
 6088 3078 2C020000 		.word	.LC125
 6089 307c 44020000 		.word	.LC126
 6090 3080 5C020000 		.word	.LC127
 6091              	.L272:
 857:..\src/command_processing.c ****         }
 858:..\src/command_processing.c ****         else {
 859:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght + 1] = NUM
 6092              		.loc 1 859 0
 6093 3084 07F5B053 		add	r3, r7, #5632
 6094 3088 03F11503 		add	r3, r3, #21
 6095 308c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6096 308e 3222     		movs	r2, #50
 6097 3090 02FB03F3 		mul	r3, r2, r3
 6098 3094 1A1D     		adds	r2, r3, #4
 6099 3096 07F5B053 		add	r3, r7, #5632
 6100 309a 03F11303 		add	r3, r3, #19
 6101 309e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6102 30a0 07F5B053 		add	r3, r7, #5632
 6103 30a4 03F11503 		add	r3, r3, #21
 6104 30a8 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6105 30aa 07F11803 		add	r3, r7, #24
 6106 30ae 143B     		subs	r3, r3, #20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 142


 6107 30b0 1B68     		ldr	r3, [r3]
 6108 30b2 0344     		add	r3, r3, r0
 6109 30b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6110 30b6 03FB01F3 		mul	r3, r3, r1
 6111 30ba 1A44     		add	r2, r2, r3
 6112 30bc 07F5B053 		add	r3, r7, #5632
 6113 30c0 03F11203 		add	r3, r3, #18
 6114 30c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6115 30c6 1344     		add	r3, r3, r2
 6116 30c8 5A1C     		adds	r2, r3, #1
 6117 30ca 07F5B053 		add	r3, r7, #5632
 6118 30ce 03F11503 		add	r3, r3, #21
 6119 30d2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6120 30d4 07F11803 		add	r3, r7, #24
 6121 30d8 183B     		subs	r3, r3, #24
 6122 30da 1B68     		ldr	r3, [r3]
 6123 30dc 0B44     		add	r3, r3, r1
 6124 30de 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6125 30e0 07F15803 		add	r3, r7, #88
 6126 30e4 043B     		subs	r3, r3, #4
 6127 30e6 9954     		strb	r1, [r3, r2]
 6128              	.L273:
 392:..\src/command_processing.c ****         
 6129              		.loc 1 392 0 discriminator 2
 6130 30e8 07F5B053 		add	r3, r7, #5632
 6131 30ec 03F11503 		add	r3, r3, #21
 6132 30f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6133 30f2 0133     		adds	r3, r3, #1
 6134 30f4 07F5B052 		add	r2, r7, #5632
 6135 30f8 02F11502 		add	r2, r2, #21
 6136 30fc 1370     		strb	r3, [r2]
 6137              	.L70:
 392:..\src/command_processing.c ****         
 6138              		.loc 1 392 0 is_stmt 0 discriminator 1
 6139 30fe 07F5B053 		add	r3, r7, #5632
 6140 3102 03F11503 		add	r3, r3, #21
 6141 3106 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6142 3108 4C2B     		cmp	r3, #76
 6143 310a 7CF6F0AF 		bls	.L274
 860:..\src/command_processing.c ****         }
 861:..\src/command_processing.c ****     }
 862:..\src/command_processing.c **** 
 863:..\src/command_processing.c ****     // Add menu
 864:..\src/command_processing.c ****     for (j = 0; j < NUM_OF_DEV_PARAM_MENUS; j++) {
 6144              		.loc 1 864 0 is_stmt 1
 6145 310e 0023     		movs	r3, #0
 6146 3110 07F5B052 		add	r2, r7, #5632
 6147 3114 02F11602 		add	r2, r2, #22
 6148 3118 1370     		strb	r3, [r2]
 6149 311a 71E0     		b	.L275
 6150              	.L278:
 865:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 6151              		.loc 1 865 0
 6152 311c 07F5B053 		add	r3, r7, #5632
 6153 3120 03F11603 		add	r3, r3, #22
 6154 3124 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6155 3126 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 143


 6156 3128 07F5B152 		add	r2, r7, #5664
 6157 312c 02F11C02 		add	r2, r2, #28
 6158 3130 1268     		ldr	r2, [r2]
 6159 3132 1344     		add	r3, r3, r2
 6160 3134 1B68     		ldr	r3, [r3]
 6161 3136 1846     		mov	r0, r3
 6162 3138 FFF7FEFF 		bl	strlen
 6163 313c 0346     		mov	r3, r0
 6164 313e 07F5B052 		add	r2, r7, #5632
 6165 3142 02F11202 		add	r2, r2, #18
 6166 3146 1370     		strb	r3, [r2]
 866:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 6167              		.loc 1 866 0
 6168 3148 07F5B053 		add	r3, r7, #5632
 6169 314c 03F11203 		add	r3, r3, #18
 6170 3150 1B78     		ldrb	r3, [r3]
 6171 3152 07F5B052 		add	r2, r7, #5632
 6172 3156 02F11702 		add	r2, r2, #23
 6173 315a 1370     		strb	r3, [r2]
 6174 315c 3EE0     		b	.L276
 6175              	.L277:
 867:..\src/command_processing.c ****             packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + 2 + j*PARAM_MENU_SLOT + string_lenght -
 6176              		.loc 1 867 0 discriminator 3
 6177 315e 07F5B053 		add	r3, r7, #5632
 6178 3162 03F11603 		add	r3, r3, #22
 6179 3166 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6180 3168 9622     		movs	r2, #150
 6181 316a 02FB03F3 		mul	r3, r2, r3
 6182 316e 03F60C72 		addw	r2, r3, #3852
 6183 3172 07F5B053 		add	r3, r7, #5632
 6184 3176 03F11203 		add	r3, r3, #18
 6185 317a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6186 317c 1A44     		add	r2, r2, r3
 6187 317e 07F5B053 		add	r3, r7, #5632
 6188 3182 03F11703 		add	r3, r3, #23
 6189 3186 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6190 3188 D21A     		subs	r2, r2, r3
 6191 318a 07F5B053 		add	r3, r7, #5632
 6192 318e 03F11603 		add	r3, r3, #22
 6193 3192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6194 3194 9B00     		lsls	r3, r3, #2
 6195 3196 07F5B151 		add	r1, r7, #5664
 6196 319a 01F11C01 		add	r1, r1, #28
 6197 319e 0968     		ldr	r1, [r1]
 6198 31a0 0B44     		add	r3, r3, r1
 6199 31a2 1B68     		ldr	r3, [r3]
 6200 31a4 07F5B051 		add	r1, r7, #5632
 6201 31a8 01F11201 		add	r1, r1, #18
 6202 31ac 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 6203 31ae 07F5B051 		add	r1, r7, #5632
 6204 31b2 01F11701 		add	r1, r1, #23
 6205 31b6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 6206 31b8 411A     		subs	r1, r0, r1
 6207 31ba 0B44     		add	r3, r3, r1
 6208 31bc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6209 31be 07F15803 		add	r3, r7, #88
 6210 31c2 043B     		subs	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 144


 6211 31c4 9954     		strb	r1, [r3, r2]
 866:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 6212              		.loc 1 866 0 discriminator 3
 6213 31c6 07F5B053 		add	r3, r7, #5632
 6214 31ca 03F11703 		add	r3, r3, #23
 6215 31ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6216 31d0 013B     		subs	r3, r3, #1
 6217 31d2 07F5B052 		add	r2, r7, #5632
 6218 31d6 02F11702 		add	r2, r2, #23
 6219 31da 1370     		strb	r3, [r2]
 6220              	.L276:
 866:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 6221              		.loc 1 866 0 is_stmt 0 discriminator 1
 6222 31dc 07F5B053 		add	r3, r7, #5632
 6223 31e0 03F11703 		add	r3, r3, #23
 6224 31e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6225 31e6 002B     		cmp	r3, #0
 6226 31e8 B9D1     		bne	.L277
 864:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 6227              		.loc 1 864 0 is_stmt 1 discriminator 2
 6228 31ea 07F5B053 		add	r3, r7, #5632
 6229 31ee 03F11603 		add	r3, r3, #22
 6230 31f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6231 31f4 0133     		adds	r3, r3, #1
 6232 31f6 07F5B052 		add	r2, r7, #5632
 6233 31fa 02F11602 		add	r2, r2, #22
 6234 31fe 1370     		strb	r3, [r2]
 6235              	.L275:
 864:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 6236              		.loc 1 864 0 is_stmt 0 discriminator 1
 6237 3200 07F5B053 		add	r3, r7, #5632
 6238 3204 03F11603 		add	r3, r3, #22
 6239 3208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6240 320a 0A2B     		cmp	r3, #10
 6241 320c 86D9     		bls	.L278
 868:..\src/command_processing.c ****     }
 869:..\src/command_processing.c ****     
 870:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
 6242              		.loc 1 870 0 is_stmt 1
 6243 320e 07F5B053 		add	r3, r7, #5632
 6244 3212 03F11003 		add	r3, r3, #16
 6245 3216 1B88     		ldrh	r3, [r3]
 6246 3218 5C1E     		subs	r4, r3, #1
 6247 321a 07F5B053 		add	r3, r7, #5632
 6248 321e 03F11003 		add	r3, r3, #16
 6249 3222 1B88     		ldrh	r3, [r3]	@ movhi
 6250 3224 DBB2     		uxtb	r3, r3
 6251 3226 013B     		subs	r3, r3, #1
 6252 3228 DAB2     		uxtb	r2, r3
 6253 322a 07F15803 		add	r3, r7, #88
 6254 322e 043B     		subs	r3, r3, #4
 6255 3230 1146     		mov	r1, r2
 6256 3232 1846     		mov	r0, r3
 6257 3234 FFF7FEFF 		bl	LCRChecksum
 6258 3238 0346     		mov	r3, r0
 6259 323a 1A46     		mov	r2, r3
 6260 323c 07F15803 		add	r3, r7, #88
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 145


 6261 3240 043B     		subs	r3, r3, #4
 6262 3242 1A55     		strb	r2, [r3, r4]
 871:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 6263              		.loc 1 871 0
 6264 3244 07F5B053 		add	r3, r7, #5632
 6265 3248 03F11003 		add	r3, r3, #16
 6266 324c 1A88     		ldrh	r2, [r3]
 6267 324e 07F15803 		add	r3, r7, #88
 6268 3252 043B     		subs	r3, r3, #4
 6269 3254 1146     		mov	r1, r2
 6270 3256 1846     		mov	r0, r3
 6271 3258 FFF7FEFF 		bl	commWrite
 872:..\src/command_processing.c **** }
 6272              		.loc 1 872 0
 6273 325c 00BF     		nop
 6274 325e 07F5B057 		add	r7, r7, #5632
 6275 3262 1C37     		adds	r7, r7, #28
 6276              		.cfi_def_cfa_offset 20
 6277 3264 BD46     		mov	sp, r7
 6278              		.cfi_def_cfa_register 13
 6279              		@ sp needed
 6280 3266 F0BD     		pop	{r4, r5, r6, r7, pc}
 6281              		.cfi_endproc
 6282              	.LFE67:
 6283              		.size	get_param_list, .-get_param_list
 6284              		.section	.rodata
 6285 0271 000000   		.align	2
 6286              	.LC129:
 6287 0274 30202D3E 		.ascii	"0 -> None\0121 -> Low (%u us delay for each 8-bit r"
 6287      204E6F6E 
 6287      650A3120 
 6287      2D3E204C 
 6287      6F772028 
 6288 02a4 65676973 		.ascii	"egister read)\0122 -> High (%u us delay for each 8-"
 6288      74657220 
 6288      72656164 
 6288      290A3220 
 6288      2D3E2048 
 6289 02d4 62697420 		.ascii	"bit register read)\012\000"
 6289      72656769 
 6289      73746572 
 6289      20726561 
 6289      64290A00 
 6290              		.align	2
 6291              	.LC130:
 6292 02e8 30202D3E 		.ascii	"0 -> Fast:syn2, Slow:syn1\0121 -> Slow:syn2, Fast:s"
 6292      20466173 
 6292      743A7379 
 6292      6E322C20 
 6292      536C6F77 
 6293 0318 796E310A 		.ascii	"yn1\012\000"
 6293      00
 6294 031d 000000   		.align	2
 6295              	.LC131:
 6296 0320 30202D3E 		.ascii	"0 -> Fast:wrist,Slow:hand\0121 -> Slow:wrist,Fast:h"
 6296      20466173 
 6296      743A7772 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 146


 6296      6973742C 
 6296      536C6F77 
 6297 0350 616E640A 		.ascii	"and\012\000"
 6297      00
 6298 0355 000000   		.align	2
 6299              	.LC132:
 6300 0358 30202D3E 		.ascii	"0 -> Usb\0121 -> Handle\0122 -> EMG proportional\012"
 6300      20557362 
 6300      0A31202D 
 6300      3E204861 
 6300      6E646C65 
 6301 0383 33202D3E 		.ascii	"3 -> EMG Integral\0124 -> EMG FCFS\0125 -> EMG FCFS"
 6301      20454D47 
 6301      20496E74 
 6301      65677261 
 6301      6C0A3420 
 6302 03b0 20416476 		.ascii	" Advanced\0126 -> Joystick\0127 -> EMG proportional"
 6302      616E6365 
 6302      640A3620 
 6302      2D3E204A 
 6302      6F797374 
 6303 03dd 204E430A 		.ascii	" NC\012\000"
 6303      00
 6304 03e2 0000     		.align	2
 6305              	.LC133:
 6306 03e4 30202D3E 		.ascii	"0 -> Position\0121 -> PWM\0122 -> Current\0123 -> P"
 6306      20506F73 
 6306      6974696F 
 6306      6E0A3120 
 6306      2D3E2050 
 6307 040e 6F736974 		.ascii	"osition and Current\012\000"
 6307      696F6E20 
 6307      616E6420 
 6307      43757272 
 6307      656E740A 
 6308 0423 00       		.align	2
 6309              	.LC134:
 6310 0424 30202D3E 		.ascii	"0 -> Deactivate [NO]\0121 -> Activate [YES]\012\000"
 6310      20446561 
 6310      63746976 
 6310      61746520 
 6310      5B4E4F5D 
 6311 044e 0000     		.align	2
 6312              	.LC135:
 6313 0450 30202D3E 		.ascii	"0 -> Right\0121 -> Left\012\000"
 6313      20526967 
 6313      68740A31 
 6313      202D3E20 
 6313      4C656674 
 6314 0466 0000     		.align	2
 6315              	.LC136:
 6316 0468 30202D3E 		.ascii	"0 -> OFF\0121 -> ON\012The board will reset\012\000"
 6316      204F4646 
 6316      0A31202D 
 6316      3E204F4E 
 6316      0A546865 
 6317 048f 00       		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 147


 6318              	.LC137:
 6319 0490 30202D3E 		.ascii	"0 -> None\0121 -> SD/RTC board\0122 -> WiFi board ["
 6319      204E6F6E 
 6319      650A3120 
 6319      2D3E2053 
 6319      442F5254 
 6320 04bd 4E2F415D 		.ascii	"N/A]\0123 -> Other [N/A]\012The board will reset\012"
 6320      0A33202D 
 6320      3E204F74 
 6320      68657220 
 6320      5B4E2F41 
 6321 04e8 00       		.ascii	"\000"
 6322 04e9 000000   		.align	2
 6323              	.LC138:
 6324 04ec 30202D3E 		.ascii	"0 -> Generic user\0121 -> Maria\0122 -> Roza\012The"
 6324      2047656E 
 6324      65726963 
 6324      20757365 
 6324      720A3120 
 6325 0516 20626F61 		.ascii	" board will reset\012\000"
 6325      72642077 
 6325      696C6C20 
 6325      72657365 
 6325      740A00
 6326 0529 000000   		.align	2
 6327              	.LC139:
 6328 052c 30202D3E 		.ascii	"0 -> MC33887 (Standard)\0121 -> VNH5019 (High power"
 6328      204D4333 
 6328      33383837 
 6328      20285374 
 6328      616E6461 
 6329 055c 290A5468 		.ascii	")\012The board will reset\012\000"
 6329      6520626F 
 6329      61726420 
 6329      77696C6C 
 6329      20726573 
 6330              		.align	2
 6331              	.LC140:
 6332 0574 30202D3E 		.ascii	"0 -> SOFTHAND PRO\0121 -> GENERIC 2 MOTORS\0122 -> "
 6332      20534F46 
 6332      5448414E 
 6332      44205052 
 6332      4F0A3120 
 6333 05a1 41495220 		.ascii	"AIR CHAMBERS\0123 -> OTTOBOCK WRIST\0124 -> SOFTHAN"
 6333      4348414D 
 6333      42455253 
 6333      0A33202D 
 6333      3E204F54 
 6334 05ce 44203220 		.ascii	"D 2 MOTORS\012The board will reset\012\000"
 6334      4D4F544F 
 6334      52530A54 
 6334      68652062 
 6334      6F617264 
 6335 05ef 00       		.align	2
 6336              	.LC141:
 6337 05f0 30202D3E 		.ascii	"0 -> Close:CW, Open:CCW\0121 -> Close:CCW, Open:CW\012"
 6337      20436C6F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 148


 6337      73653A43 
 6337      572C204F 
 6337      70656E3A 
 6338 0620 00       		.ascii	"\000"
 6339 0621 000000   		.align	2
 6340              	.LC0:
 6341 0624 02       		.byte	2
 6342 0625 07       		.byte	7
 6343 0626 07       		.byte	7
 6344 0627 00       		.byte	0
 6345 0628 00       		.byte	0
 6346 0629 00       		.byte	0
 6347 062a 02       		.byte	2
 6348 062b 03       		.byte	3
 6349 062c 07       		.byte	7
 6350 062d 00       		.byte	0
 6351 062e 05       		.byte	5
 6352 062f 05       		.byte	5
 6353 0630 03       		.byte	3
 6354 0631 04       		.byte	4
 6355 0632 00       		.byte	0
 6356 0633 06       		.byte	6
 6357 0634 02       		.byte	2
 6358 0635 00       		.byte	0
 6359 0636 01       		.byte	1
 6360 0637 00       		.byte	0
 6361 0638 07       		.byte	7
 6362 0639 02       		.byte	2
 6363 063a 05       		.byte	5
 6364 063b 05       		.byte	5
 6365 063c 05       		.byte	5
 6366 063d 00       		.byte	0
 6367 063e 00       		.byte	0
 6368 063f 00       		.byte	0
 6369 0640 00       		.byte	0
 6370 0641 00       		.byte	0
 6371 0642 00       		.byte	0
 6372 0643 02       		.byte	2
 6373 0644 00       		.byte	0
 6374 0645 02       		.byte	2
 6375 0646 00       		.byte	0
 6376 0647 09       		.byte	9
 6377 0648 02       		.byte	2
 6378 0649 00       		.byte	0
 6379 064a 02       		.byte	2
 6380 064b 00       		.byte	0
 6381 064c 02       		.byte	2
 6382 064d 01       		.byte	1
 6383 064e 00       		.byte	0
 6384 064f 07       		.byte	7
 6385 0650 07       		.byte	7
 6386 0651 00       		.byte	0
 6387 0652 00       		.byte	0
 6388 0653 00       		.byte	0
 6389 0654 02       		.byte	2
 6390 0655 03       		.byte	3
 6391 0656 07       		.byte	7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 149


 6392 0657 00       		.byte	0
 6393 0658 05       		.byte	5
 6394 0659 05       		.byte	5
 6395 065a 03       		.byte	3
 6396 065b 00       		.byte	0
 6397 065c 01       		.byte	1
 6398 065d 00       		.byte	0
 6399 065e 07       		.byte	7
 6400 065f 02       		.byte	2
 6401 0660 00       		.byte	0
 6402 0661 02       		.byte	2
 6403 0662 00       		.byte	0
 6404 0663 02       		.byte	2
 6405 0664 01       		.byte	1
 6406 0665 02       		.byte	2
 6407 0666 02       		.byte	2
 6408 0667 00       		.byte	0
 6409 0668 02       		.byte	2
 6410 0669 02       		.byte	2
 6411 066a 00       		.byte	0
 6412 066b 04       		.byte	4
 6413 066c 03       		.byte	3
 6414 066d 04       		.byte	4
 6415 066e 00       		.byte	0
 6416 066f 00       		.byte	0
 6417 0670 04       		.byte	4
 6418 0671 00       		.byte	0
 6419 0672 00       		.byte	0
 6420 0673 02       		.byte	2
 6421 0674 05       		.byte	5
 6422 0675 07       		.byte	7
 6423 0676 07       		.byte	7
 6424 0677 00       		.align	2
 6425              	.LC1:
 6426 0678 31202D20 		.ascii	"1 - Device ID:\000"
 6426      44657669 
 6426      63652049 
 6426      443A00
 6427 0687 00       		.align	2
 6428              	.LC2:
 6429 0688 32202D20 		.ascii	"2 - Position PID [P, I, D]:\000"
 6429      506F7369 
 6429      74696F6E 
 6429      20504944 
 6429      205B502C 
 6430              		.align	2
 6431              	.LC3:
 6432 06a4 33202D20 		.ascii	"3 - Current PID [P, I, D]:\000"
 6432      43757272 
 6432      656E7420 
 6432      50494420 
 6432      5B502C20 
 6433 06bf 00       		.align	2
 6434              	.LC4:
 6435 06c0 34202D20 		.ascii	"4 - Startup Activation:\000"
 6435      53746172 
 6435      74757020 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 150


 6435      41637469 
 6435      76617469 
 6436              		.align	2
 6437              	.LC5:
 6438 06d8 35202D20 		.ascii	"5 - Input mode:\000"
 6438      496E7075 
 6438      74206D6F 
 6438      64653A00 
 6439              		.align	2
 6440              	.LC6:
 6441 06e8 36202D20 		.ascii	"6 - Control mode:\000"
 6441      436F6E74 
 6441      726F6C20 
 6441      6D6F6465 
 6441      3A00
 6442 06fa 0000     		.align	2
 6443              	.LC7:
 6444 06fc 37202D20 		.ascii	"7 - Resolutions:\000"
 6444      5265736F 
 6444      6C757469 
 6444      6F6E733A 
 6444      00
 6445 070d 000000   		.align	2
 6446              	.LC8:
 6447 0710 38202D20 		.ascii	"8 - Measurement Offsets:\000"
 6447      4D656173 
 6447      7572656D 
 6447      656E7420 
 6447      4F666673 
 6448 0729 000000   		.align	2
 6449              	.LC9:
 6450 072c 39202D20 		.ascii	"9 - Multipliers:\000"
 6450      4D756C74 
 6450      69706C69 
 6450      6572733A 
 6450      00
 6451 073d 000000   		.align	2
 6452              	.LC10:
 6453 0740 3130202D 		.ascii	"10 - Pos. limit active:\000"
 6453      20506F73 
 6453      2E206C69 
 6453      6D697420 
 6453      61637469 
 6454              		.align	2
 6455              	.LC11:
 6456 0758 3131202D 		.ascii	"11 - Pos. limits [inf, sup]:\000"
 6456      20506F73 
 6456      2E206C69 
 6456      6D697473 
 6456      205B696E 
 6457 0775 000000   		.align	2
 6458              	.LC12:
 6459 0778 3132202D 		.ascii	"12 - Max steps [neg, pos]:\000"
 6459      204D6178 
 6459      20737465 
 6459      7073205B 
 6459      6E65672C 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 151


 6460 0793 00       		.align	2
 6461              	.LC13:
 6462 0794 3133202D 		.ascii	"13 - Current limit:\000"
 6462      20437572 
 6462      72656E74 
 6462      206C696D 
 6462      69743A00 
 6463              		.align	2
 6464              	.LC14:
 6465 07a8 3134202D 		.ascii	"14 - EMG thresholds:\000"
 6465      20454D47 
 6465      20746872 
 6465      6573686F 
 6465      6C64733A 
 6466 07bd 000000   		.align	2
 6467              	.LC15:
 6468 07c0 3135202D 		.ascii	"15 - EMG calibration on startup:\000"
 6468      20454D47 
 6468      2063616C 
 6468      69627261 
 6468      74696F6E 
 6469 07e1 000000   		.align	2
 6470              	.LC16:
 6471 07e4 3136202D 		.ascii	"16 - EMG max values:\000"
 6471      20454D47 
 6471      206D6178 
 6471      2076616C 
 6471      7565733A 
 6472 07f9 000000   		.align	2
 6473              	.LC17:
 6474 07fc 3137202D 		.ascii	"17 - EMG max speeds:\000"
 6474      20454D47 
 6474      206D6178 
 6474      20737065 
 6474      6564733A 
 6475 0811 000000   		.align	2
 6476              	.LC18:
 6477 0814 3138202D 		.ascii	"18 - Absolute encoder position:\000"
 6477      20416273 
 6477      6F6C7574 
 6477      6520656E 
 6477      636F6465 
 6478              		.align	2
 6479              	.LC19:
 6480 0834 3139202D 		.ascii	"19 - Motor handle ratio:\000"
 6480      204D6F74 
 6480      6F722068 
 6480      616E646C 
 6480      65207261 
 6481 084d 000000   		.align	2
 6482              	.LC20:
 6483 0850 3230202D 		.ascii	"20 - PWM rescaling:\000"
 6483      2050574D 
 6483      20726573 
 6483      63616C69 
 6483      6E673A00 
 6484              		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 152


 6485              	.LC21:
 6486 0864 3231202D 		.ascii	"21 - Current lookup:\000"
 6486      20437572 
 6486      72656E74 
 6486      206C6F6F 
 6486      6B75703A 
 6487 0879 000000   		.align	2
 6488              	.LC22:
 6489 087c 3232202D 		.ascii	"22 - Date of maintenance [D/M/Y]:\000"
 6489      20446174 
 6489      65206F66 
 6489      206D6169 
 6489      6E74656E 
 6490 089e 0000     		.align	2
 6491              	.LC23:
 6492 08a0 3233202D 		.ascii	"23 - Rest position:\000"
 6492      20526573 
 6492      7420706F 
 6492      73697469 
 6492      6F6E3A00 
 6493              		.align	2
 6494              	.LC24:
 6495 08b4 3234202D 		.ascii	"24 - Rest position time delay (ms):\000"
 6495      20526573 
 6495      7420706F 
 6495      73697469 
 6495      6F6E2074 
 6496              		.align	2
 6497              	.LC25:
 6498 08d8 3235202D 		.ascii	"25 - Rest vel closure (ticks/sec):\000"
 6498      20526573 
 6498      74207665 
 6498      6C20636C 
 6498      6F737572 
 6499 08fb 00       		.align	2
 6500              	.LC26:
 6501 08fc 3236202D 		.ascii	"26 - Rest position enabled:\000"
 6501      20526573 
 6501      7420706F 
 6501      73697469 
 6501      6F6E2065 
 6502              		.align	2
 6503              	.LC27:
 6504 0918 3237202D 		.ascii	"27 - EMG inversion:\000"
 6504      20454D47 
 6504      20696E76 
 6504      65727369 
 6504      6F6E3A00 
 6505              		.align	2
 6506              	.LC28:
 6507 092c 3238202D 		.ascii	"28 - Hand side:\000"
 6507      2048616E 
 6507      64207369 
 6507      64653A00 
 6508              		.align	2
 6509              	.LC29:
 6510 093c 3239202D 		.ascii	"29 - Enable IMUs:\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 153


 6510      20456E61 
 6510      626C6520 
 6510      494D5573 
 6510      3A00
 6511 094e 0000     		.align	2
 6512              	.LC30:
 6513 0950 3330202D 		.ascii	"30 - Read Expansion port:\000"
 6513      20526561 
 6513      64204578 
 6513      70616E73 
 6513      696F6E20 
 6514 096a 0000     		.align	2
 6515              	.LC31:
 6516 096c 3331202D 		.ascii	"31 - Reset counters:\000"
 6516      20526573 
 6516      65742063 
 6516      6F756E74 
 6516      6572733A 
 6517 0981 000000   		.align	2
 6518              	.LC32:
 6519 0984 3332202D 		.ascii	"32 - Last checked Time [D/M/Y H:M:S]:\000"
 6519      204C6173 
 6519      74206368 
 6519      65636B65 
 6519      64205469 
 6520 09aa 0000     		.align	2
 6521              	.LC33:
 6522 09ac 3333202D 		.ascii	"33 - SPI read delay (IMU):\000"
 6522      20535049 
 6522      20726561 
 6522      64206465 
 6522      6C617920 
 6523 09c7 00       		.align	2
 6524              	.LC34:
 6525 09c8 3334202D 		.ascii	"34 - On board IMU conf. [a,g,m,q,t]:\000"
 6525      204F6E20 
 6525      626F6172 
 6525      6420494D 
 6525      5520636F 
 6526 09ed 000000   		.align	2
 6527              	.LC35:
 6528 09f0 3335202D 		.ascii	"35 - User ID:\000"
 6528      20557365 
 6528      72204944 
 6528      3A00
 6529 09fe 0000     		.align	2
 6530              	.LC36:
 6531 0a00 3336202D 		.ascii	"36 - User code:\000"
 6531      20557365 
 6531      7220636F 
 6531      64653A00 
 6532              		.align	2
 6533              	.LC37:
 6534 0a10 3337202D 		.ascii	"37 - Associated encoder line:\000"
 6534      20417373 
 6534      6F636961 
 6534      74656420 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 154


 6534      656E636F 
 6535 0a2e 0000     		.align	2
 6536              	.LC38:
 6537 0a30 3338202D 		.ascii	"38 - Driver type:\000"
 6537      20447269 
 6537      76657220 
 6537      74797065 
 6537      3A00
 6538 0a42 0000     		.align	2
 6539              	.LC39:
 6540 0a44 3339202D 		.ascii	"39 - PWM rate limiter:\000"
 6540      2050574D 
 6540      20726174 
 6540      65206C69 
 6540      6D697465 
 6541 0a5b 00       		.align	2
 6542              	.LC40:
 6543 0a5c 3430202D 		.ascii	"40 - Not reversible:\000"
 6543      204E6F74 
 6543      20726576 
 6543      65727369 
 6543      626C653A 
 6544 0a71 000000   		.align	2
 6545              	.LC41:
 6546 0a74 3431202D 		.ascii	"41 - Enc idx used for control:\000"
 6546      20456E63 
 6546      20696478 
 6546      20757365 
 6546      6420666F 
 6547 0a93 00       		.align	2
 6548              	.LC42:
 6549 0a94 3432202D 		.ascii	"42 - Gear params[N1, N2, I1]:\000"
 6549      20476561 
 6549      72207061 
 6549      72616D73 
 6549      5B4E312C 
 6550 0ab2 0000     		.align	2
 6551              	.LC43:
 6552 0ab4 3433202D 		.ascii	"43 - Use second motor:\000"
 6552      20557365 
 6552      20736563 
 6552      6F6E6420 
 6552      6D6F746F 
 6553 0acb 00       		.align	2
 6554              	.LC44:
 6555 0acc 3434202D 		.ascii	"44 - Position PID [P, I, D]:\000"
 6555      20506F73 
 6555      6974696F 
 6555      6E205049 
 6555      44205B50 
 6556 0ae9 000000   		.align	2
 6557              	.LC45:
 6558 0aec 3435202D 		.ascii	"45 - Current PID [P, I, D]:\000"
 6558      20437572 
 6558      72656E74 
 6558      20504944 
 6558      205B502C 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 155


 6559              		.align	2
 6560              	.LC46:
 6561 0b08 3436202D 		.ascii	"46 - Startup Activation:\000"
 6561      20537461 
 6561      72747570 
 6561      20416374 
 6561      69766174 
 6562 0b21 000000   		.align	2
 6563              	.LC47:
 6564 0b24 3437202D 		.ascii	"47 - Input mode:\000"
 6564      20496E70 
 6564      7574206D 
 6564      6F64653A 
 6564      00
 6565 0b35 000000   		.align	2
 6566              	.LC48:
 6567 0b38 3438202D 		.ascii	"48 - Control mode:\000"
 6567      20436F6E 
 6567      74726F6C 
 6567      206D6F64 
 6567      653A00
 6568 0b4b 00       		.align	2
 6569              	.LC49:
 6570 0b4c 3439202D 		.ascii	"49 - Resolutions:\000"
 6570      20526573 
 6570      6F6C7574 
 6570      696F6E73 
 6570      3A00
 6571 0b5e 0000     		.align	2
 6572              	.LC50:
 6573 0b60 3530202D 		.ascii	"50 - Measurement Offsets:\000"
 6573      204D6561 
 6573      73757265 
 6573      6D656E74 
 6573      204F6666 
 6574 0b7a 0000     		.align	2
 6575              	.LC51:
 6576 0b7c 3531202D 		.ascii	"51 - Multipliers:\000"
 6576      204D756C 
 6576      7469706C 
 6576      69657273 
 6576      3A00
 6577 0b8e 0000     		.align	2
 6578              	.LC52:
 6579 0b90 3532202D 		.ascii	"52 - Pos. limit active:\000"
 6579      20506F73 
 6579      2E206C69 
 6579      6D697420 
 6579      61637469 
 6580              		.align	2
 6581              	.LC53:
 6582 0ba8 3533202D 		.ascii	"53 - Pos. limits [inf, sup]:\000"
 6582      20506F73 
 6582      2E206C69 
 6582      6D697473 
 6582      205B696E 
 6583 0bc5 000000   		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 156


 6584              	.LC54:
 6585 0bc8 3534202D 		.ascii	"54 - Max steps [neg, pos]:\000"
 6585      204D6178 
 6585      20737465 
 6585      7073205B 
 6585      6E65672C 
 6586 0be3 00       		.align	2
 6587              	.LC55:
 6588 0be4 3535202D 		.ascii	"55 - Current limit:\000"
 6588      20437572 
 6588      72656E74 
 6588      206C696D 
 6588      69743A00 
 6589              		.align	2
 6590              	.LC56:
 6591 0bf8 3536202D 		.ascii	"56 - Absolute encoder position:\000"
 6591      20416273 
 6591      6F6C7574 
 6591      6520656E 
 6591      636F6465 
 6592              		.align	2
 6593              	.LC57:
 6594 0c18 3537202D 		.ascii	"57 - Motor handle ratio:\000"
 6594      204D6F74 
 6594      6F722068 
 6594      616E646C 
 6594      65207261 
 6595 0c31 000000   		.align	2
 6596              	.LC58:
 6597 0c34 3538202D 		.ascii	"58 - PWM rescaling:\000"
 6597      2050574D 
 6597      20726573 
 6597      63616C69 
 6597      6E673A00 
 6598              		.align	2
 6599              	.LC59:
 6600 0c48 3539202D 		.ascii	"59 - Current lookup:\000"
 6600      20437572 
 6600      72656E74 
 6600      206C6F6F 
 6600      6B75703A 
 6601 0c5d 000000   		.align	2
 6602              	.LC60:
 6603 0c60 3630202D 		.ascii	"60 - Associated encoder line:\000"
 6603      20417373 
 6603      6F636961 
 6603      74656420 
 6603      656E636F 
 6604 0c7e 0000     		.align	2
 6605              	.LC61:
 6606 0c80 3631202D 		.ascii	"61 - Driver type:\000"
 6606      20447269 
 6606      76657220 
 6606      74797065 
 6606      3A00
 6607 0c92 0000     		.align	2
 6608              	.LC62:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 157


 6609 0c94 3632202D 		.ascii	"62 - PWM rate limiter:\000"
 6609      2050574D 
 6609      20726174 
 6609      65206C69 
 6609      6D697465 
 6610 0cab 00       		.align	2
 6611              	.LC63:
 6612 0cac 3633202D 		.ascii	"63 - Not reversible:\000"
 6612      204E6F74 
 6612      20726576 
 6612      65727369 
 6612      626C653A 
 6613 0cc1 000000   		.align	2
 6614              	.LC64:
 6615 0cc4 3634202D 		.ascii	"64 - Enc idx used for control:\000"
 6615      20456E63 
 6615      20696478 
 6615      20757365 
 6615      6420666F 
 6616 0ce3 00       		.align	2
 6617              	.LC65:
 6618 0ce4 3635202D 		.ascii	"65 - Gear params[N1, N2, I1]:\000"
 6618      20476561 
 6618      72207061 
 6618      72616D73 
 6618      5B4E312C 
 6619 0d02 0000     		.align	2
 6620              	.LC66:
 6621 0d04 3636202D 		.ascii	"66 - Read enc raw line 0:\000"
 6621      20526561 
 6621      6420656E 
 6621      63207261 
 6621      77206C69 
 6622 0d1e 0000     		.align	2
 6623              	.LC67:
 6624 0d20 3637202D 		.ascii	"67 - Read enc raw line 1:\000"
 6624      20526561 
 6624      6420656E 
 6624      63207261 
 6624      77206C69 
 6625 0d3a 0000     		.align	2
 6626              	.LC68:
 6627 0d3c 3638202D 		.ascii	"68 - Read additional ADC port:\000"
 6627      20526561 
 6627      64206164 
 6627      64697469 
 6627      6F6E616C 
 6628 0d5b 00       		.align	2
 6629              	.LC69:
 6630 0d5c 3639202D 		.ascii	"69 - ADC channel [1-6]:\000"
 6630      20414443 
 6630      20636861 
 6630      6E6E656C 
 6630      205B312D 
 6631              		.align	2
 6632              	.LC70:
 6633 0d74 3730202D 		.ascii	"70 - ADC channel [7-12]:\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 158


 6633      20414443 
 6633      20636861 
 6633      6E6E656C 
 6633      205B372D 
 6634 0d8d 000000   		.align	2
 6635              	.LC71:
 6636 0d90 3731202D 		.ascii	"71 - Record EMG on SD card:\000"
 6636      20526563 
 6636      6F726420 
 6636      454D4720 
 6636      6F6E2053 
 6637              		.align	2
 6638              	.LC72:
 6639 0dac 3732202D 		.ascii	"72 - Joystick closure speed:\000"
 6639      204A6F79 
 6639      73746963 
 6639      6B20636C 
 6639      6F737572 
 6640 0dc9 000000   		.align	2
 6641              	.LC73:
 6642 0dcc 3733202D 		.ascii	"73 - Joystick threshold:\000"
 6642      204A6F79 
 6642      73746963 
 6642      6B207468 
 6642      72657368 
 6643 0de5 000000   		.align	2
 6644              	.LC74:
 6645 0de8 3734202D 		.ascii	"74 - Joystick gains:\000"
 6645      204A6F79 
 6645      73746963 
 6645      6B206761 
 6645      696E733A 
 6646 0dfd 000000   		.align	2
 6647              	.LC75:
 6648 0e00 3735202D 		.ascii	"75 - Device type:\000"
 6648      20446576 
 6648      69636520 
 6648      74797065 
 6648      3A00
 6649 0e12 0000     		.align	2
 6650              	.LC76:
 6651 0e14 3736202D 		.ascii	"76 - EMG FSM act.mode:\000"
 6651      20454D47 
 6651      2046534D 
 6651      20616374 
 6651      2E6D6F64 
 6652 0e2b 00       		.align	2
 6653              	.LC77:
 6654 0e2c 3737202D 		.ascii	"77 - Fast act.thresholds:\000"
 6654      20466173 
 6654      74206163 
 6654      742E7468 
 6654      72657368 
 6655 0e46 0000     		.align	2
 6656              	.LC78:
 6657 0e48 3738202D 		.ascii	"78 - Wrist direction:\000"
 6657      20577269 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 159


 6657      73742064 
 6657      69726563 
 6657      74696F6E 
 6658 0e5e 0000     		.align	2
 6659              	.LC79:
 6660 0e60 3739202D 		.ascii	"79 - Slave communication active:\000"
 6660      20536C61 
 6660      76652063 
 6660      6F6D6D75 
 6660      6E696361 
 6661 0e81 000000   		.align	2
 6662              	.LC80:
 6663 0e84 3830202D 		.ascii	"80 - Slave ID:\000"
 6663      20536C61 
 6663      76652049 
 6663      443A00
 6664 0e93 00       		.align	2
 6665              	.LC81:
 6666 0e94 3831202D 		.ascii	"81 - Maximum slave residual current:\000"
 6666      204D6178 
 6666      696D756D 
 6666      20736C61 
 6666      76652072 
 6667 0eb9 000000   		.align	2
 6668              	.LC82:
 6669 0ebc 3832202D 		.ascii	"82 - Maximum pressure feedback (kPa):\000"
 6669      204D6178 
 6669      696D756D 
 6669      20707265 
 6669      73737572 
 6670 0ee2 0000     		.align	2
 6671              	.LC83:
 6672 0ee4 3833202D 		.ascii	"83 - Proportional pressure error gain:\000"
 6672      2050726F 
 6672      706F7274 
 6672      696F6E61 
 6672      6C207072 
 6673 0f0b 00       		.align	2
 6674              	.LC128:
 6675 0f0c 78060000 		.word	.LC1
 6676 0f10 88060000 		.word	.LC2
 6677 0f14 A4060000 		.word	.LC3
 6678 0f18 C0060000 		.word	.LC4
 6679 0f1c D8060000 		.word	.LC5
 6680 0f20 E8060000 		.word	.LC6
 6681 0f24 FC060000 		.word	.LC7
 6682 0f28 10070000 		.word	.LC8
 6683 0f2c 2C070000 		.word	.LC9
 6684 0f30 40070000 		.word	.LC10
 6685 0f34 58070000 		.word	.LC11
 6686 0f38 78070000 		.word	.LC12
 6687 0f3c 94070000 		.word	.LC13
 6688 0f40 A8070000 		.word	.LC14
 6689 0f44 C0070000 		.word	.LC15
 6690 0f48 E4070000 		.word	.LC16
 6691 0f4c FC070000 		.word	.LC17
 6692 0f50 14080000 		.word	.LC18
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 160


 6693 0f54 34080000 		.word	.LC19
 6694 0f58 50080000 		.word	.LC20
 6695 0f5c 64080000 		.word	.LC21
 6696 0f60 7C080000 		.word	.LC22
 6697 0f64 A0080000 		.word	.LC23
 6698 0f68 B4080000 		.word	.LC24
 6699 0f6c D8080000 		.word	.LC25
 6700 0f70 FC080000 		.word	.LC26
 6701 0f74 18090000 		.word	.LC27
 6702 0f78 2C090000 		.word	.LC28
 6703 0f7c 3C090000 		.word	.LC29
 6704 0f80 50090000 		.word	.LC30
 6705 0f84 6C090000 		.word	.LC31
 6706 0f88 84090000 		.word	.LC32
 6707 0f8c AC090000 		.word	.LC33
 6708 0f90 C8090000 		.word	.LC34
 6709 0f94 F0090000 		.word	.LC35
 6710 0f98 000A0000 		.word	.LC36
 6711 0f9c 100A0000 		.word	.LC37
 6712 0fa0 300A0000 		.word	.LC38
 6713 0fa4 440A0000 		.word	.LC39
 6714 0fa8 5C0A0000 		.word	.LC40
 6715 0fac 740A0000 		.word	.LC41
 6716 0fb0 940A0000 		.word	.LC42
 6717 0fb4 B40A0000 		.word	.LC43
 6718 0fb8 CC0A0000 		.word	.LC44
 6719 0fbc EC0A0000 		.word	.LC45
 6720 0fc0 080B0000 		.word	.LC46
 6721 0fc4 240B0000 		.word	.LC47
 6722 0fc8 380B0000 		.word	.LC48
 6723 0fcc 4C0B0000 		.word	.LC49
 6724 0fd0 600B0000 		.word	.LC50
 6725 0fd4 7C0B0000 		.word	.LC51
 6726 0fd8 900B0000 		.word	.LC52
 6727 0fdc A80B0000 		.word	.LC53
 6728 0fe0 C80B0000 		.word	.LC54
 6729 0fe4 E40B0000 		.word	.LC55
 6730 0fe8 F80B0000 		.word	.LC56
 6731 0fec 180C0000 		.word	.LC57
 6732 0ff0 340C0000 		.word	.LC58
 6733 0ff4 480C0000 		.word	.LC59
 6734 0ff8 600C0000 		.word	.LC60
 6735 0ffc 800C0000 		.word	.LC61
 6736 1000 940C0000 		.word	.LC62
 6737 1004 AC0C0000 		.word	.LC63
 6738 1008 C40C0000 		.word	.LC64
 6739 100c E40C0000 		.word	.LC65
 6740 1010 040D0000 		.word	.LC66
 6741 1014 200D0000 		.word	.LC67
 6742 1018 3C0D0000 		.word	.LC68
 6743 101c 5C0D0000 		.word	.LC69
 6744 1020 740D0000 		.word	.LC70
 6745 1024 900D0000 		.word	.LC71
 6746 1028 AC0D0000 		.word	.LC72
 6747 102c CC0D0000 		.word	.LC73
 6748 1030 E80D0000 		.word	.LC74
 6749 1034 000E0000 		.word	.LC75
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 161


 6750 1038 140E0000 		.word	.LC76
 6751 103c 2C0E0000 		.word	.LC77
 6752 1040 480E0000 		.word	.LC78
 6753 1044 600E0000 		.word	.LC79
 6754 1048 840E0000 		.word	.LC80
 6755 104c 940E0000 		.word	.LC81
 6756 1050 BC0E0000 		.word	.LC82
 6757 1054 E40E0000 		.word	.LC83
 6758              		.align	2
 6759              	.LC85:
 6760 1058 03       		.byte	3
 6761 1059 01       		.byte	1
 6762 105a 02       		.byte	2
 6763 105b 03       		.byte	3
 6764 105c 03       		.byte	3
 6765 105d 03       		.byte	3
 6766 105e 03       		.byte	3
 6767 105f 03       		.byte	3
 6768 1060 03       		.byte	3
 6769 1061 04       		.byte	4
 6770 1062 05       		.byte	5
 6771 1063 06       		.byte	6
 6772 1064 03       		.byte	3
 6773 1065 07       		.byte	7
 6774 1066 08       		.byte	8
 6775 1067 09       		.byte	9
 6776 1068 03       		.byte	3
 6777 1069 05       		.byte	5
 6778 106a 03       		.byte	3
 6779 106b 01       		.byte	1
 6780 106c 02       		.byte	2
 6781 106d 03       		.byte	3
 6782 106e 03       		.byte	3
 6783 106f 03       		.byte	3
 6784 1070 09       		.byte	9
 6785 1071 03       		.byte	3
 6786 1072 05       		.byte	5
 6787 1073 03       		.byte	3
 6788 1074 0A       		.byte	10
 6789 1075 0B       		.byte	11
 6790 1076 0C       		.byte	12
 6791 1077 03       		.byte	3
 6792              		.align	2
 6793              	.LC86:
 6794 1078 02       		.byte	2
 6795 1079 03       		.byte	3
 6796 107a 08       		.byte	8
 6797 107b 0B       		.byte	11
 6798 107c 17       		.byte	23
 6799 107d 2C       		.byte	44
 6800 107e 2D       		.byte	45
 6801 107f 32       		.byte	50
 6802 1080 35       		.byte	53
 6803 1081 000000   		.align	2
 6804              	.LC87:
 6805 1084 02       		.byte	2
 6806 1085 03       		.byte	3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 162


 6807 1086 05       		.byte	5
 6808 1087 08       		.byte	8
 6809 1088 0B       		.byte	11
 6810 1089 17       		.byte	23
 6811 108a 18       		.byte	24
 6812 108b 1C       		.byte	28
 6813 108c 1F       		.byte	31
 6814 108d 20       		.byte	32
 6815 108e 26       		.byte	38
 6816 108f 2C       		.byte	44
 6817 1090 2D       		.byte	45
 6818 1091 2F       		.byte	47
 6819 1092 32       		.byte	50
 6820 1093 35       		.byte	53
 6821 1094 3D       		.byte	61
 6822 1095 4B       		.byte	75
 6823              		.section	.text.manage_param_list,"ax",%progbits
 6824              		.align	2
 6825              		.global	manage_param_list
 6826              		.thumb
 6827              		.thumb_func
 6828              		.type	manage_param_list, %function
 6829              	manage_param_list:
 6830              	.LFB68:
 873:..\src/command_processing.c **** 
 874:..\src/command_processing.c **** //==============================================================================
 875:..\src/command_processing.c **** //                                                             MANAGE PARAM LIST
 876:..\src/command_processing.c **** //==============================================================================
 877:..\src/command_processing.c **** 
 878:..\src/command_processing.c **** void manage_param_list(uint16 index) {
 6831              		.loc 1 878 0
 6832              		.cfi_startproc
 6833              		@ args = 0, pretend = 0, frame = 1416
 6834              		@ frame_needed = 1, uses_anonymous_args = 0
 6835 0000 B0B5     		push	{r4, r5, r7, lr}
 6836              		.cfi_def_cfa_offset 16
 6837              		.cfi_offset 4, -16
 6838              		.cfi_offset 5, -12
 6839              		.cfi_offset 7, -8
 6840              		.cfi_offset 14, -4
 6841 0002 ADF5B36D 		sub	sp, sp, #1432
 6842              		.cfi_def_cfa_offset 1448
 6843 0006 04AF     		add	r7, sp, #16
 6844              		.cfi_def_cfa 7, 1432
 6845 0008 0246     		mov	r2, r0
 6846 000a BB1D     		adds	r3, r7, #6
 6847 000c 1A80     		strh	r2, [r3]	@ movhi
 879:..\src/command_processing.c ****     uint8 CYDATA i, j;
 880:..\src/command_processing.c ****     uint8 CYDATA sod;
 881:..\src/command_processing.c ****     uint8 PARAM_IDX;
 882:..\src/command_processing.c ****     int16 aux_int16;
 883:..\src/command_processing.c ****     uint16 aux_uint16;
 884:..\src/command_processing.c ****     int32 aux_int32;
 885:..\src/command_processing.c ****     uint32 aux_uint32;
 886:..\src/command_processing.c ****     float aux_float;
 887:..\src/command_processing.c ****  
 888:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 163


 6848              		.loc 1 888 0
 6849 000e 0023     		movs	r3, #0
 6850 0010 87F87D35 		strb	r3, [r7, #1405]
 889:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 6851              		.loc 1 889 0
 6852 0014 0123     		movs	r3, #1
 6853 0016 87F87C35 		strb	r3, [r7, #1404]
 890:..\src/command_processing.c ****     
 891:..\src/command_processing.c ****     // Arrays
 892:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem;   // c_mem is used for param reading
 6854              		.loc 1 892 0
 6855 001a 054B     		ldr	r3, .L371
 6856 001c C7F88035 		str	r3, [r7, #1408]
 893:..\src/command_processing.c ****     
 894:..\src/command_processing.c ****     if (index){                         // Switch from c_mem to g_mem
 6857              		.loc 1 894 0
 6858 0020 BB1D     		adds	r3, r7, #6
 6859 0022 1B88     		ldrh	r3, [r3]
 6860 0024 002B     		cmp	r3, #0
 6861 0026 07D0     		beq	.L308
 895:..\src/command_processing.c ****         MEM_P = &g_mem;                 // g_mem is used for param setting
 6862              		.loc 1 895 0
 6863 0028 024B     		ldr	r3, .L371+4
 6864 002a C7F88035 		str	r3, [r7, #1408]
 6865 002e 03E0     		b	.L372
 6866              	.L373:
 6867              		.align	2
 6868              	.L371:
 6869 0030 00000000 		.word	c_mem
 6870 0034 00000000 		.word	g_mem
 6871              	.L372:
 6872              	.L308:
 896:..\src/command_processing.c ****     }
 897:..\src/command_processing.c ****  
 898:..\src/command_processing.c ****     
 899:..\src/command_processing.c **** //------------------ BEGIN OF PARAMETERS VARIABLES --------------------//    
 900:..\src/command_processing.c ****     uint8* VAR_P[NUM_OF_PARAMS] = { 
 901:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6873              		.loc 1 901 0
 6874 0038 D7F88035 		ldr	r3, [r7, #1408]
 6875 003c 03F1A002 		add	r2, r3, #160
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6876              		.loc 1 900 0
 6877 0040 07F21C43 		addw	r3, r7, #1052
 6878 0044 1A60     		str	r2, [r3]
 902:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p),
 6879              		.loc 1 902 0
 6880 0046 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6881 004a 1346     		mov	r3, r2
 6882 004c DB00     		lsls	r3, r3, #3
 6883 004e 9B1A     		subs	r3, r3, r2
 6884 0050 1B01     		lsls	r3, r3, #4
 6885 0052 B033     		adds	r3, r3, #176
 6886 0054 D7F88025 		ldr	r2, [r7, #1408]
 6887 0058 1A44     		add	r2, r2, r3
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6888              		.loc 1 900 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 164


 6889 005a 07F21C43 		addw	r3, r7, #1052
 6890 005e 5A60     		str	r2, [r3, #4]
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p_c), 
 6891              		.loc 1 903 0
 6892 0060 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6893 0064 1346     		mov	r3, r2
 6894 0066 DB00     		lsls	r3, r3, #3
 6895 0068 9B1A     		subs	r3, r3, r2
 6896 006a 1B01     		lsls	r3, r3, #4
 6897 006c B833     		adds	r3, r3, #184
 6898 006e D7F88025 		ldr	r2, [r7, #1408]
 6899 0072 1344     		add	r3, r3, r2
 6900 0074 1A1D     		adds	r2, r3, #4
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6901              		.loc 1 900 0
 6902 0076 07F21C43 		addw	r3, r7, #1052
 6903 007a 9A60     		str	r2, [r3, #8]
 904:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activ),
 6904              		.loc 1 904 0
 6905 007c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6906 0080 1346     		mov	r3, r2
 6907 0082 DB00     		lsls	r3, r3, #3
 6908 0084 9B1A     		subs	r3, r3, r2
 6909 0086 1B01     		lsls	r3, r3, #4
 6910 0088 E033     		adds	r3, r3, #224
 6911 008a D7F88025 		ldr	r2, [r7, #1408]
 6912 008e 1A44     		add	r2, r2, r3
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6913              		.loc 1 900 0
 6914 0090 07F21C43 		addw	r3, r7, #1052
 6915 0094 DA60     		str	r2, [r3, #12]
 905:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].input_mode),
 6916              		.loc 1 905 0
 6917 0096 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6918 009a 1346     		mov	r3, r2
 6919 009c DB00     		lsls	r3, r3, #3
 6920 009e 9B1A     		subs	r3, r3, r2
 6921 00a0 1B01     		lsls	r3, r3, #4
 6922 00a2 03F58473 		add	r3, r3, #264
 6923 00a6 D7F88025 		ldr	r2, [r7, #1408]
 6924 00aa 1344     		add	r3, r3, r2
 6925 00ac 9A1D     		adds	r2, r3, #6
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6926              		.loc 1 900 0
 6927 00ae 07F21C43 		addw	r3, r7, #1052
 6928 00b2 1A61     		str	r2, [r3, #16]
 906:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].control_mode), 
 6929              		.loc 1 906 0
 6930 00b4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6931 00b8 1346     		mov	r3, r2
 6932 00ba DB00     		lsls	r3, r3, #3
 6933 00bc 9B1A     		subs	r3, r3, r2
 6934 00be 1B01     		lsls	r3, r3, #4
 6935 00c0 03F58473 		add	r3, r3, #264
 6936 00c4 D7F88025 		ldr	r2, [r7, #1408]
 6937 00c8 1344     		add	r3, r3, r2
 6938 00ca DA1D     		adds	r2, r3, #7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 165


 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6939              		.loc 1 900 0
 6940 00cc 07F21C43 		addw	r3, r7, #1052
 6941 00d0 5A61     		str	r2, [r3, #20]
 907:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].res),
 6942              		.loc 1 907 0
 6943 00d2 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6944 00d6 D7F88015 		ldr	r1, [r7, #1408]
 6945 00da 1346     		mov	r3, r2
 6946 00dc DB00     		lsls	r3, r3, #3
 6947 00de 9B1A     		subs	r3, r3, r2
 6948 00e0 1B01     		lsls	r3, r3, #4
 6949 00e2 0B44     		add	r3, r3, r1
 6950 00e4 03F58873 		add	r3, r3, #272
 6951 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6952 00ea 1A46     		mov	r2, r3
 6953 00ec 1346     		mov	r3, r2
 6954 00ee 5B00     		lsls	r3, r3, #1
 6955 00f0 1344     		add	r3, r3, r2
 6956 00f2 1B01     		lsls	r3, r3, #4
 6957 00f4 03F5C873 		add	r3, r3, #400
 6958 00f8 D7F88025 		ldr	r2, [r7, #1408]
 6959 00fc 1344     		add	r3, r3, r2
 6960 00fe 5A1D     		adds	r2, r3, #5
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6961              		.loc 1 900 0
 6962 0100 07F21C43 		addw	r3, r7, #1052
 6963 0104 9A61     		str	r2, [r3, #24]
 908:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_off[0]),
 6964              		.loc 1 908 0
 6965 0106 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6966 010a D7F88015 		ldr	r1, [r7, #1408]
 6967 010e 1346     		mov	r3, r2
 6968 0110 DB00     		lsls	r3, r3, #3
 6969 0112 9B1A     		subs	r3, r3, r2
 6970 0114 1B01     		lsls	r3, r3, #4
 6971 0116 0B44     		add	r3, r3, r1
 6972 0118 03F58873 		add	r3, r3, #272
 6973 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6974 011e 1A46     		mov	r2, r3
 6975 0120 1346     		mov	r3, r2
 6976 0122 5B00     		lsls	r3, r3, #1
 6977 0124 1344     		add	r3, r3, r2
 6978 0126 1B01     		lsls	r3, r3, #4
 6979 0128 03F5CC73 		add	r3, r3, #408
 6980 012c D7F88025 		ldr	r2, [r7, #1408]
 6981 0130 1A44     		add	r2, r2, r3
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6982              		.loc 1 900 0
 6983 0132 07F21C43 		addw	r3, r7, #1052
 6984 0136 DA61     		str	r2, [r3, #28]
 909:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_mult[0]),
 6985              		.loc 1 909 0
 6986 0138 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6987 013c D7F88015 		ldr	r1, [r7, #1408]
 6988 0140 1346     		mov	r3, r2
 6989 0142 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 166


 6990 0144 9B1A     		subs	r3, r3, r2
 6991 0146 1B01     		lsls	r3, r3, #4
 6992 0148 0B44     		add	r3, r3, r1
 6993 014a 03F58873 		add	r3, r3, #272
 6994 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6995 0150 1A46     		mov	r2, r3
 6996 0152 1346     		mov	r3, r2
 6997 0154 5B00     		lsls	r3, r3, #1
 6998 0156 1344     		add	r3, r3, r2
 6999 0158 1B01     		lsls	r3, r3, #4
 7000 015a 03F5D073 		add	r3, r3, #416
 7001 015e D7F88025 		ldr	r2, [r7, #1408]
 7002 0162 1344     		add	r3, r3, r2
 7003 0164 1A1D     		adds	r2, r3, #4
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7004              		.loc 1 900 0
 7005 0166 07F21C43 		addw	r3, r7, #1052
 7006 016a 1A62     		str	r2, [r3, #32]
 910:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_flag),                                    //10
 7007              		.loc 1 910 0
 7008 016c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7009 0170 1346     		mov	r3, r2
 7010 0172 DB00     		lsls	r3, r3, #3
 7011 0174 9B1A     		subs	r3, r3, r2
 7012 0176 1B01     		lsls	r3, r3, #4
 7013 0178 E033     		adds	r3, r3, #224
 7014 017a D7F88025 		ldr	r2, [r7, #1408]
 7015 017e 1344     		add	r3, r3, r2
 7016 0180 DA1C     		adds	r2, r3, #3
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7017              		.loc 1 900 0
 7018 0182 07F21C43 		addw	r3, r7, #1052
 7019 0186 5A62     		str	r2, [r3, #36]
 911:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_inf), 
 7020              		.loc 1 911 0
 7021 0188 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7022 018c 1346     		mov	r3, r2
 7023 018e DB00     		lsls	r3, r3, #3
 7024 0190 9B1A     		subs	r3, r3, r2
 7025 0192 1B01     		lsls	r3, r3, #4
 7026 0194 E033     		adds	r3, r3, #224
 7027 0196 D7F88025 		ldr	r2, [r7, #1408]
 7028 019a 1344     		add	r3, r3, r2
 7029 019c 1A1D     		adds	r2, r3, #4
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7030              		.loc 1 900 0
 7031 019e 07F21C43 		addw	r3, r7, #1052
 7032 01a2 9A62     		str	r2, [r3, #40]
 912:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].max_step_neg),
 7033              		.loc 1 912 0
 7034 01a4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7035 01a8 1346     		mov	r3, r2
 7036 01aa DB00     		lsls	r3, r3, #3
 7037 01ac 9B1A     		subs	r3, r3, r2
 7038 01ae 1B01     		lsls	r3, r3, #4
 7039 01b0 E833     		adds	r3, r3, #232
 7040 01b2 D7F88025 		ldr	r2, [r7, #1408]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 167


 7041 01b6 1344     		add	r3, r3, r2
 7042 01b8 1A1D     		adds	r2, r3, #4
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7043              		.loc 1 900 0
 7044 01ba 07F21C43 		addw	r3, r7, #1052
 7045 01be DA62     		str	r2, [r3, #44]
 913:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].current_limit),
 7046              		.loc 1 913 0
 7047 01c0 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7048 01c4 1346     		mov	r3, r2
 7049 01c6 DB00     		lsls	r3, r3, #3
 7050 01c8 9B1A     		subs	r3, r3, r2
 7051 01ca 1B01     		lsls	r3, r3, #4
 7052 01cc 03F58473 		add	r3, r3, #264
 7053 01d0 D7F88025 		ldr	r2, [r7, #1408]
 7054 01d4 1344     		add	r3, r3, r2
 7055 01d6 1A1D     		adds	r2, r3, #4
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7056              		.loc 1 900 0
 7057 01d8 07F21C43 		addw	r3, r7, #1052
 7058 01dc 1A63     		str	r2, [r3, #48]
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_threshold[0]),
 7059              		.loc 1 914 0
 7060 01de D7F88035 		ldr	r3, [r7, #1408]
 7061 01e2 03F5F872 		add	r2, r3, #496
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7062              		.loc 1 900 0
 7063 01e6 07F21C43 		addw	r3, r7, #1052
 7064 01ea 5A63     		str	r2, [r3, #52]
 915:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_calibration_flag),
 7065              		.loc 1 915 0
 7066 01ec D7F88035 		ldr	r3, [r7, #1408]
 7067 01f0 03F5FF72 		add	r2, r3, #510
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7068              		.loc 1 900 0
 7069 01f4 07F21C43 		addw	r3, r7, #1052
 7070 01f8 9A63     		str	r2, [r3, #56]
 916:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_max_value[0]),
 7071              		.loc 1 916 0
 7072 01fa D7F88035 		ldr	r3, [r7, #1408]
 7073 01fe 03F5FA72 		add	r2, r3, #500
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7074              		.loc 1 900 0
 7075 0202 07F21C43 		addw	r3, r7, #1052
 7076 0206 DA63     		str	r2, [r3, #60]
 917:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_speed[0]), 
 7077              		.loc 1 917 0
 7078 0208 D7F88035 		ldr	r3, [r7, #1408]
 7079 020c 03F5FE72 		add	r2, r3, #508
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7080              		.loc 1 900 0
 7081 0210 07F21C43 		addw	r3, r7, #1052
 7082 0214 1A64     		str	r2, [r3, #64]
 918:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].double_encoder_on_off),
 7083              		.loc 1 918 0
 7084 0216 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7085 021a D7F88015 		ldr	r1, [r7, #1408]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 168


 7086 021e 1346     		mov	r3, r2
 7087 0220 DB00     		lsls	r3, r3, #3
 7088 0222 9B1A     		subs	r3, r3, r2
 7089 0224 1B01     		lsls	r3, r3, #4
 7090 0226 0B44     		add	r3, r3, r1
 7091 0228 03F58873 		add	r3, r3, #272
 7092 022c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7093 022e 1A46     		mov	r2, r3
 7094 0230 1346     		mov	r3, r2
 7095 0232 5B00     		lsls	r3, r3, #1
 7096 0234 1344     		add	r3, r3, r2
 7097 0236 1B01     		lsls	r3, r3, #4
 7098 0238 03F5D873 		add	r3, r3, #432
 7099 023c D7F88025 		ldr	r2, [r7, #1408]
 7100 0240 1A44     		add	r2, r2, r3
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7101              		.loc 1 900 0
 7102 0242 07F21C43 		addw	r3, r7, #1052
 7103 0246 5A64     		str	r2, [r3, #68]
 919:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].motor_handle_ratio),
 7104              		.loc 1 919 0
 7105 0248 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7106 024c D7F88015 		ldr	r1, [r7, #1408]
 7107 0250 1346     		mov	r3, r2
 7108 0252 DB00     		lsls	r3, r3, #3
 7109 0254 9B1A     		subs	r3, r3, r2
 7110 0256 1B01     		lsls	r3, r3, #4
 7111 0258 0B44     		add	r3, r3, r1
 7112 025a 03F58873 		add	r3, r3, #272
 7113 025e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7114 0260 1A46     		mov	r2, r3
 7115 0262 1346     		mov	r3, r2
 7116 0264 5B00     		lsls	r3, r3, #1
 7117 0266 1344     		add	r3, r3, r2
 7118 0268 1B01     		lsls	r3, r3, #4
 7119 026a 03F5D873 		add	r3, r3, #432
 7120 026e D7F88025 		ldr	r2, [r7, #1408]
 7121 0272 1344     		add	r3, r3, r2
 7122 0274 1A1D     		adds	r2, r3, #4
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7123              		.loc 1 900 0
 7124 0276 07F21C43 		addw	r3, r7, #1052
 7125 027a 9A64     		str	r2, [r3, #72]
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activate_pwm_rescaling),                          //20
 7126              		.loc 1 920 0
 7127 027c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7128 0280 1346     		mov	r3, r2
 7129 0282 DB00     		lsls	r3, r3, #3
 7130 0284 9B1A     		subs	r3, r3, r2
 7131 0286 1B01     		lsls	r3, r3, #4
 7132 0288 E033     		adds	r3, r3, #224
 7133 028a D7F88025 		ldr	r2, [r7, #1408]
 7134 028e 1344     		add	r3, r3, r2
 7135 0290 5A1C     		adds	r2, r3, #1
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7136              		.loc 1 900 0
 7137 0292 07F21C43 		addw	r3, r7, #1052
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 169


 7138 0296 DA64     		str	r2, [r3, #76]
 921:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].curr_lookup[0]),
 7139              		.loc 1 921 0
 7140 0298 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7141 029c 1346     		mov	r3, r2
 7142 029e DB00     		lsls	r3, r3, #3
 7143 02a0 9B1A     		subs	r3, r3, r2
 7144 02a2 1B01     		lsls	r3, r3, #4
 7145 02a4 F033     		adds	r3, r3, #240
 7146 02a6 D7F88025 		ldr	r2, [r7, #1408]
 7147 02aa 1344     		add	r3, r3, r2
 7148 02ac 1A1D     		adds	r2, r3, #4
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7149              		.loc 1 900 0
 7150 02ae 07F21C43 		addw	r3, r7, #1052
 7151 02b2 1A65     		str	r2, [r3, #80]
 922:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.hw_maint_date),
 7152              		.loc 1 922 0
 7153 02b4 D7F88035 		ldr	r3, [r7, #1408]
 7154 02b8 03F1A102 		add	r2, r3, #161
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7155              		.loc 1 900 0
 7156 02bc 07F21C43 		addw	r3, r7, #1052
 7157 02c0 5A65     		str	r2, [r3, #84]
 923:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_pos), 
 7158              		.loc 1 923 0
 7159 02c2 D7F88035 		ldr	r3, [r7, #1408]
 7160 02c6 03F52872 		add	r2, r3, #672
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7161              		.loc 1 900 0
 7162 02ca 07F21C43 		addw	r3, r7, #1052
 7163 02ce 9A65     		str	r2, [r3, #88]
 924:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_delay),
 7164              		.loc 1 924 0
 7165 02d0 D7F88035 		ldr	r3, [r7, #1408]
 7166 02d4 03F52972 		add	r2, r3, #676
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7167              		.loc 1 900 0
 7168 02d8 07F21C43 		addw	r3, r7, #1052
 7169 02dc DA65     		str	r2, [r3, #92]
 925:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_vel),
 7170              		.loc 1 925 0
 7171 02de D7F88035 		ldr	r3, [r7, #1408]
 7172 02e2 03F52A72 		add	r2, r3, #680
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7173              		.loc 1 900 0
 7174 02e6 07F21C43 		addw	r3, r7, #1052
 7175 02ea 1A66     		str	r2, [r3, #96]
 926:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_position_flag),
 7176              		.loc 1 926 0
 7177 02ec D7F88035 		ldr	r3, [r7, #1408]
 7178 02f0 03F52B72 		add	r2, r3, #684
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7179              		.loc 1 900 0
 7180 02f4 07F21C43 		addw	r3, r7, #1052
 7181 02f8 5A66     		str	r2, [r3, #100]
 927:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.switch_emg), 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 170


 7182              		.loc 1 927 0
 7183 02fa D7F88035 		ldr	r3, [r7, #1408]
 7184 02fe 03F2FF12 		addw	r2, r3, #511
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7185              		.loc 1 900 0
 7186 0302 07F21C43 		addw	r3, r7, #1052
 7187 0306 9A66     		str	r2, [r3, #104]
 928:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.right_left),
 7188              		.loc 1 928 0
 7189 0308 D7F88035 		ldr	r3, [r7, #1408]
 7190 030c 03F1A702 		add	r2, r3, #167
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7191              		.loc 1 900 0
 7192 0310 07F21C43 		addw	r3, r7, #1052
 7193 0314 DA66     		str	r2, [r3, #108]
 929:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.read_imu_flag),
 7194              		.loc 1 929 0
 7195 0316 D7F88035 		ldr	r3, [r7, #1408]
 7196 031a 03F50072 		add	r2, r3, #512
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7197              		.loc 1 900 0
 7198 031e 07F21C43 		addw	r3, r7, #1052
 7199 0322 1A67     		str	r2, [r3, #112]
 930:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.read_exp_port_flag),                                   //30
 7200              		.loc 1 930 0
 7201 0324 D7F88035 		ldr	r3, [r7, #1408]
 7202 0328 03F22622 		addw	r2, r3, #550
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7203              		.loc 1 900 0
 7204 032c 07F21C43 		addw	r3, r7, #1052
 7205 0330 5A67     		str	r2, [r3, #116]
 931:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.reset_counters),
 7206              		.loc 1 931 0
 7207 0332 D7F88035 		ldr	r3, [r7, #1408]
 7208 0336 03F1A802 		add	r2, r3, #168
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7209              		.loc 1 900 0
 7210 033a 07F21C43 		addw	r3, r7, #1052
 7211 033e 9A67     		str	r2, [r3, #120]
 932:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.curr_time[0]),
 7212              		.loc 1 932 0
 7213 0340 D7F88035 		ldr	r3, [r7, #1408]
 7214 0344 03F50872 		add	r2, r3, #544
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7215              		.loc 1 900 0
 7216 0348 07F21C43 		addw	r3, r7, #1052
 7217 034c DA67     		str	r2, [r3, #124]
 933:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.SPI_read_delay),
 7218              		.loc 1 933 0
 7219 034e D7F88035 		ldr	r3, [r7, #1408]
 7220 0352 03F20122 		addw	r2, r3, #513
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7221              		.loc 1 900 0
 7222 0356 07F21C43 		addw	r3, r7, #1052
 7223 035a C3F88020 		str	r2, [r3, #128]
 934:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.IMU_conf[0][0]),
 7224              		.loc 1 934 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 171


 7225 035e D7F88035 		ldr	r3, [r7, #1408]
 7226 0362 03F20222 		addw	r2, r3, #514
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7227              		.loc 1 900 0
 7228 0366 07F21C43 		addw	r3, r7, #1052
 7229 036a C3F88420 		str	r2, [r3, #132]
 935:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.user_id),
 7230              		.loc 1 935 0
 7231 036e D7F88035 		ldr	r3, [r7, #1408]
 7232 0372 03F1AB02 		add	r2, r3, #171
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7233              		.loc 1 900 0
 7234 0376 07F21C43 		addw	r3, r7, #1052
 7235 037a C3F88820 		str	r2, [r3, #136]
 936:..\src/command_processing.c ****         (uint8*)&(MEM_P->user[MEM_P->dev.user_id].user_code_string),
 7236              		.loc 1 936 0
 7237 037e D7F88035 		ldr	r3, [r7, #1408]
 7238 0382 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 7239 0386 1233     		adds	r3, r3, #18
 7240 0388 5B01     		lsls	r3, r3, #5
 7241 038a D7F88025 		ldr	r2, [r7, #1408]
 7242 038e 1A44     		add	r2, r2, r3
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7243              		.loc 1 900 0
 7244 0390 07F21C43 		addw	r3, r7, #1052
 7245 0394 C3F88C20 		str	r2, [r3, #140]
 937:..\src/command_processing.c ****         
 938:..\src/command_processing.c ****         // GENERIC PARAMS
 939:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[MOTOR_IDX].encoder_line),			// other params of 1st motor
 7246              		.loc 1 939 0
 7247 0398 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7248 039c 1346     		mov	r3, r2
 7249 039e DB00     		lsls	r3, r3, #3
 7250 03a0 9B1A     		subs	r3, r3, r2
 7251 03a2 1B01     		lsls	r3, r3, #4
 7252 03a4 03F58873 		add	r3, r3, #272
 7253 03a8 D7F88025 		ldr	r2, [r7, #1408]
 7254 03ac 1A44     		add	r2, r2, r3
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7255              		.loc 1 900 0
 7256 03ae 07F21C43 		addw	r3, r7, #1052
 7257 03b2 C3F89020 		str	r2, [r3, #144]
 940:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].motor_driver_type),
 7258              		.loc 1 940 0
 7259 03b6 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7260 03ba 1346     		mov	r3, r2
 7261 03bc DB00     		lsls	r3, r3, #3
 7262 03be 9B1A     		subs	r3, r3, r2
 7263 03c0 1B01     		lsls	r3, r3, #4
 7264 03c2 E033     		adds	r3, r3, #224
 7265 03c4 D7F88025 		ldr	r2, [r7, #1408]
 7266 03c8 1344     		add	r3, r3, r2
 7267 03ca 9A1C     		adds	r2, r3, #2
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7268              		.loc 1 900 0
 7269 03cc 07F21C43 		addw	r3, r7, #1052
 7270 03d0 C3F89420 		str	r2, [r3, #148]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 172


 941:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].pwm_rate_limiter),
 7271              		.loc 1 941 0
 7272 03d4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7273 03d8 1346     		mov	r3, r2
 7274 03da DB00     		lsls	r3, r3, #3
 7275 03dc 9B1A     		subs	r3, r3, r2
 7276 03de 1B01     		lsls	r3, r3, #4
 7277 03e0 03F58873 		add	r3, r3, #272
 7278 03e4 D7F88025 		ldr	r2, [r7, #1408]
 7279 03e8 1344     		add	r3, r3, r2
 7280 03ea 5A1C     		adds	r2, r3, #1
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7281              		.loc 1 900 0
 7282 03ec 07F21C43 		addw	r3, r7, #1052
 7283 03f0 C3F89820 		str	r2, [r3, #152]
 942:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].not_revers_motor_flag), 	//40 
 7284              		.loc 1 942 0
 7285 03f4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7286 03f8 1346     		mov	r3, r2
 7287 03fa DB00     		lsls	r3, r3, #3
 7288 03fc 9B1A     		subs	r3, r3, r2
 7289 03fe 1B01     		lsls	r3, r3, #4
 7290 0400 03F58873 		add	r3, r3, #272
 7291 0404 D7F88025 		ldr	r2, [r7, #1408]
 7292 0408 1344     		add	r3, r3, r2
 7293 040a 9A1C     		adds	r2, r3, #2
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7294              		.loc 1 900 0
 7295 040c 07F21C43 		addw	r3, r7, #1052
 7296 0410 C3F89C20 		str	r2, [r3, #156]
 943:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 7297              		.loc 1 943 0
 7298 0414 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7299 0418 D7F88015 		ldr	r1, [r7, #1408]
 7300 041c 1346     		mov	r3, r2
 7301 041e DB00     		lsls	r3, r3, #3
 7302 0420 9B1A     		subs	r3, r3, r2
 7303 0422 1B01     		lsls	r3, r3, #4
 7304 0424 0B44     		add	r3, r3, r1
 7305 0426 03F58873 		add	r3, r3, #272
 7306 042a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7307 042c 1A46     		mov	r2, r3
 7308 042e 1346     		mov	r3, r2
 7309 0430 5B00     		lsls	r3, r3, #1
 7310 0432 1344     		add	r3, r3, r2
 7311 0434 1B01     		lsls	r3, r3, #4
 7312 0436 03F5D873 		add	r3, r3, #432
 7313 043a D7F88025 		ldr	r2, [r7, #1408]
 7314 043e 1344     		add	r3, r3, r2
 7315 0440 5A1C     		adds	r2, r3, #1
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7316              		.loc 1 900 0
 7317 0442 07F21C43 		addw	r3, r7, #1052
 7318 0446 C3F8A020 		str	r2, [r3, #160]
 944:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].gears_params),        
 7319              		.loc 1 944 0
 7320 044a 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 173


 7321 044e D7F88015 		ldr	r1, [r7, #1408]
 7322 0452 1346     		mov	r3, r2
 7323 0454 DB00     		lsls	r3, r3, #3
 7324 0456 9B1A     		subs	r3, r3, r2
 7325 0458 1B01     		lsls	r3, r3, #4
 7326 045a 0B44     		add	r3, r3, r1
 7327 045c 03F58873 		add	r3, r3, #272
 7328 0460 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7329 0462 1A46     		mov	r2, r3
 7330 0464 1346     		mov	r3, r2
 7331 0466 5B00     		lsls	r3, r3, #1
 7332 0468 1344     		add	r3, r3, r2
 7333 046a 1B01     		lsls	r3, r3, #4
 7334 046c 03F5D873 		add	r3, r3, #432
 7335 0470 D7F88025 		ldr	r2, [r7, #1408]
 7336 0474 1344     		add	r3, r3, r2
 7337 0476 5A1D     		adds	r2, r3, #5
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7338              		.loc 1 900 0
 7339 0478 07F21C43 		addw	r3, r7, #1052
 7340 047c C3F8A420 		str	r2, [r3, #164]
 945:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.use_2nd_motor_flag),					// second motor config and params
 7341              		.loc 1 945 0
 7342 0480 D7F88035 		ldr	r3, [r7, #1408]
 7343 0484 03F1A902 		add	r2, r3, #169
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7344              		.loc 1 900 0
 7345 0488 07F21C43 		addw	r3, r7, #1052
 7346 048c C3F8A820 		str	r2, [r3, #168]
 946:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p),
 7347              		.loc 1 946 0
 7348 0490 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7349 0494 1346     		mov	r3, r2
 7350 0496 DB00     		lsls	r3, r3, #3
 7351 0498 9B1A     		subs	r3, r3, r2
 7352 049a 1B01     		lsls	r3, r3, #4
 7353 049c B033     		adds	r3, r3, #176
 7354 049e D7F88025 		ldr	r2, [r7, #1408]
 7355 04a2 1A44     		add	r2, r2, r3
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7356              		.loc 1 900 0
 7357 04a4 07F21C43 		addw	r3, r7, #1052
 7358 04a8 C3F8AC20 		str	r2, [r3, #172]
 947:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p_c), 
 7359              		.loc 1 947 0
 7360 04ac 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7361 04b0 1346     		mov	r3, r2
 7362 04b2 DB00     		lsls	r3, r3, #3
 7363 04b4 9B1A     		subs	r3, r3, r2
 7364 04b6 1B01     		lsls	r3, r3, #4
 7365 04b8 B833     		adds	r3, r3, #184
 7366 04ba D7F88025 		ldr	r2, [r7, #1408]
 7367 04be 1344     		add	r3, r3, r2
 7368 04c0 1A1D     		adds	r2, r3, #4
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7369              		.loc 1 900 0
 7370 04c2 07F21C43 		addw	r3, r7, #1052
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 174


 7371 04c6 C3F8B020 		str	r2, [r3, #176]
 948:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activ),
 7372              		.loc 1 948 0
 7373 04ca 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7374 04ce 1346     		mov	r3, r2
 7375 04d0 DB00     		lsls	r3, r3, #3
 7376 04d2 9B1A     		subs	r3, r3, r2
 7377 04d4 1B01     		lsls	r3, r3, #4
 7378 04d6 E033     		adds	r3, r3, #224
 7379 04d8 D7F88025 		ldr	r2, [r7, #1408]
 7380 04dc 1A44     		add	r2, r2, r3
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7381              		.loc 1 900 0
 7382 04de 07F21C43 		addw	r3, r7, #1052
 7383 04e2 C3F8B420 		str	r2, [r3, #180]
 949:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].input_mode),
 7384              		.loc 1 949 0
 7385 04e6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7386 04ea 1346     		mov	r3, r2
 7387 04ec DB00     		lsls	r3, r3, #3
 7388 04ee 9B1A     		subs	r3, r3, r2
 7389 04f0 1B01     		lsls	r3, r3, #4
 7390 04f2 03F58473 		add	r3, r3, #264
 7391 04f6 D7F88025 		ldr	r2, [r7, #1408]
 7392 04fa 1344     		add	r3, r3, r2
 7393 04fc 9A1D     		adds	r2, r3, #6
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7394              		.loc 1 900 0
 7395 04fe 07F21C43 		addw	r3, r7, #1052
 7396 0502 C3F8B820 		str	r2, [r3, #184]
 950:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].control_mode), 
 7397              		.loc 1 950 0
 7398 0506 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7399 050a 1346     		mov	r3, r2
 7400 050c DB00     		lsls	r3, r3, #3
 7401 050e 9B1A     		subs	r3, r3, r2
 7402 0510 1B01     		lsls	r3, r3, #4
 7403 0512 03F58473 		add	r3, r3, #264
 7404 0516 D7F88025 		ldr	r2, [r7, #1408]
 7405 051a 1344     		add	r3, r3, r2
 7406 051c DA1D     		adds	r2, r3, #7
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7407              		.loc 1 900 0
 7408 051e 07F21C43 		addw	r3, r7, #1052
 7409 0522 C3F8BC20 		str	r2, [r3, #188]
 951:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].res),
 7410              		.loc 1 951 0
 7411 0526 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7412 052a D7F88015 		ldr	r1, [r7, #1408]
 7413 052e 1346     		mov	r3, r2
 7414 0530 DB00     		lsls	r3, r3, #3
 7415 0532 9B1A     		subs	r3, r3, r2
 7416 0534 1B01     		lsls	r3, r3, #4
 7417 0536 0B44     		add	r3, r3, r1
 7418 0538 03F58873 		add	r3, r3, #272
 7419 053c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7420 053e 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 175


 7421 0540 1346     		mov	r3, r2
 7422 0542 5B00     		lsls	r3, r3, #1
 7423 0544 1344     		add	r3, r3, r2
 7424 0546 1B01     		lsls	r3, r3, #4
 7425 0548 03F5C873 		add	r3, r3, #400
 7426 054c D7F88025 		ldr	r2, [r7, #1408]
 7427 0550 1344     		add	r3, r3, r2
 7428 0552 5A1D     		adds	r2, r3, #5
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7429              		.loc 1 900 0
 7430 0554 07F21C43 		addw	r3, r7, #1052
 7431 0558 C3F8C020 		str	r2, [r3, #192]
 952:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_off[0]),    //50
 7432              		.loc 1 952 0
 7433 055c 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7434 0560 D7F88015 		ldr	r1, [r7, #1408]
 7435 0564 1346     		mov	r3, r2
 7436 0566 DB00     		lsls	r3, r3, #3
 7437 0568 9B1A     		subs	r3, r3, r2
 7438 056a 1B01     		lsls	r3, r3, #4
 7439 056c 0B44     		add	r3, r3, r1
 7440 056e 03F58873 		add	r3, r3, #272
 7441 0572 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7442 0574 1A46     		mov	r2, r3
 7443 0576 1346     		mov	r3, r2
 7444 0578 5B00     		lsls	r3, r3, #1
 7445 057a 1344     		add	r3, r3, r2
 7446 057c 1B01     		lsls	r3, r3, #4
 7447 057e 03F5CC73 		add	r3, r3, #408
 7448 0582 D7F88025 		ldr	r2, [r7, #1408]
 7449 0586 1A44     		add	r2, r2, r3
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7450              		.loc 1 900 0
 7451 0588 07F21C43 		addw	r3, r7, #1052
 7452 058c C3F8C420 		str	r2, [r3, #196]
 953:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_mult[0]),
 7453              		.loc 1 953 0
 7454 0590 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7455 0594 D7F88015 		ldr	r1, [r7, #1408]
 7456 0598 1346     		mov	r3, r2
 7457 059a DB00     		lsls	r3, r3, #3
 7458 059c 9B1A     		subs	r3, r3, r2
 7459 059e 1B01     		lsls	r3, r3, #4
 7460 05a0 0B44     		add	r3, r3, r1
 7461 05a2 03F58873 		add	r3, r3, #272
 7462 05a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7463 05a8 1A46     		mov	r2, r3
 7464 05aa 1346     		mov	r3, r2
 7465 05ac 5B00     		lsls	r3, r3, #1
 7466 05ae 1344     		add	r3, r3, r2
 7467 05b0 1B01     		lsls	r3, r3, #4
 7468 05b2 03F5D073 		add	r3, r3, #416
 7469 05b6 D7F88025 		ldr	r2, [r7, #1408]
 7470 05ba 1344     		add	r3, r3, r2
 7471 05bc 1A1D     		adds	r2, r3, #4
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7472              		.loc 1 900 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 176


 7473 05be 07F21C43 		addw	r3, r7, #1052
 7474 05c2 C3F8C820 		str	r2, [r3, #200]
 954:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_flag),
 7475              		.loc 1 954 0
 7476 05c6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7477 05ca 1346     		mov	r3, r2
 7478 05cc DB00     		lsls	r3, r3, #3
 7479 05ce 9B1A     		subs	r3, r3, r2
 7480 05d0 1B01     		lsls	r3, r3, #4
 7481 05d2 E033     		adds	r3, r3, #224
 7482 05d4 D7F88025 		ldr	r2, [r7, #1408]
 7483 05d8 1344     		add	r3, r3, r2
 7484 05da DA1C     		adds	r2, r3, #3
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7485              		.loc 1 900 0
 7486 05dc 07F21C43 		addw	r3, r7, #1052
 7487 05e0 C3F8CC20 		str	r2, [r3, #204]
 955:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_inf), 
 7488              		.loc 1 955 0
 7489 05e4 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7490 05e8 1346     		mov	r3, r2
 7491 05ea DB00     		lsls	r3, r3, #3
 7492 05ec 9B1A     		subs	r3, r3, r2
 7493 05ee 1B01     		lsls	r3, r3, #4
 7494 05f0 E033     		adds	r3, r3, #224
 7495 05f2 D7F88025 		ldr	r2, [r7, #1408]
 7496 05f6 1344     		add	r3, r3, r2
 7497 05f8 1A1D     		adds	r2, r3, #4
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7498              		.loc 1 900 0
 7499 05fa 07F21C43 		addw	r3, r7, #1052
 7500 05fe C3F8D020 		str	r2, [r3, #208]
 956:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].max_step_neg),
 7501              		.loc 1 956 0
 7502 0602 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7503 0606 1346     		mov	r3, r2
 7504 0608 DB00     		lsls	r3, r3, #3
 7505 060a 9B1A     		subs	r3, r3, r2
 7506 060c 1B01     		lsls	r3, r3, #4
 7507 060e E833     		adds	r3, r3, #232
 7508 0610 D7F88025 		ldr	r2, [r7, #1408]
 7509 0614 1344     		add	r3, r3, r2
 7510 0616 1A1D     		adds	r2, r3, #4
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7511              		.loc 1 900 0
 7512 0618 07F21C43 		addw	r3, r7, #1052
 7513 061c C3F8D420 		str	r2, [r3, #212]
 957:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].current_limit),
 7514              		.loc 1 957 0
 7515 0620 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7516 0624 1346     		mov	r3, r2
 7517 0626 DB00     		lsls	r3, r3, #3
 7518 0628 9B1A     		subs	r3, r3, r2
 7519 062a 1B01     		lsls	r3, r3, #4
 7520 062c 03F58473 		add	r3, r3, #264
 7521 0630 D7F88025 		ldr	r2, [r7, #1408]
 7522 0634 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 177


 7523 0636 1A1D     		adds	r2, r3, #4
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7524              		.loc 1 900 0
 7525 0638 07F21C43 		addw	r3, r7, #1052
 7526 063c C3F8D820 		str	r2, [r3, #216]
 958:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].double_encoder_on_off),
 7527              		.loc 1 958 0
 7528 0640 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7529 0644 D7F88015 		ldr	r1, [r7, #1408]
 7530 0648 1346     		mov	r3, r2
 7531 064a DB00     		lsls	r3, r3, #3
 7532 064c 9B1A     		subs	r3, r3, r2
 7533 064e 1B01     		lsls	r3, r3, #4
 7534 0650 0B44     		add	r3, r3, r1
 7535 0652 03F58873 		add	r3, r3, #272
 7536 0656 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7537 0658 1A46     		mov	r2, r3
 7538 065a 1346     		mov	r3, r2
 7539 065c 5B00     		lsls	r3, r3, #1
 7540 065e 1344     		add	r3, r3, r2
 7541 0660 1B01     		lsls	r3, r3, #4
 7542 0662 03F5D873 		add	r3, r3, #432
 7543 0666 D7F88025 		ldr	r2, [r7, #1408]
 7544 066a 1A44     		add	r2, r2, r3
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7545              		.loc 1 900 0
 7546 066c 07F21C43 		addw	r3, r7, #1052
 7547 0670 C3F8DC20 		str	r2, [r3, #220]
 959:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].motor_handle_ratio),
 7548              		.loc 1 959 0
 7549 0674 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7550 0678 D7F88015 		ldr	r1, [r7, #1408]
 7551 067c 1346     		mov	r3, r2
 7552 067e DB00     		lsls	r3, r3, #3
 7553 0680 9B1A     		subs	r3, r3, r2
 7554 0682 1B01     		lsls	r3, r3, #4
 7555 0684 0B44     		add	r3, r3, r1
 7556 0686 03F58873 		add	r3, r3, #272
 7557 068a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7558 068c 1A46     		mov	r2, r3
 7559 068e 1346     		mov	r3, r2
 7560 0690 5B00     		lsls	r3, r3, #1
 7561 0692 1344     		add	r3, r3, r2
 7562 0694 1B01     		lsls	r3, r3, #4
 7563 0696 03F5D873 		add	r3, r3, #432
 7564 069a D7F88025 		ldr	r2, [r7, #1408]
 7565 069e 1344     		add	r3, r3, r2
 7566 06a0 1A1D     		adds	r2, r3, #4
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7567              		.loc 1 900 0
 7568 06a2 07F21C43 		addw	r3, r7, #1052
 7569 06a6 C3F8E020 		str	r2, [r3, #224]
 960:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activate_pwm_rescaling),
 7570              		.loc 1 960 0
 7571 06aa 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7572 06ae 1346     		mov	r3, r2
 7573 06b0 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 178


 7574 06b2 9B1A     		subs	r3, r3, r2
 7575 06b4 1B01     		lsls	r3, r3, #4
 7576 06b6 E033     		adds	r3, r3, #224
 7577 06b8 D7F88025 		ldr	r2, [r7, #1408]
 7578 06bc 1344     		add	r3, r3, r2
 7579 06be 5A1C     		adds	r2, r3, #1
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7580              		.loc 1 900 0
 7581 06c0 07F21C43 		addw	r3, r7, #1052
 7582 06c4 C3F8E420 		str	r2, [r3, #228]
 961:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].curr_lookup[0]),
 7583              		.loc 1 961 0
 7584 06c8 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7585 06cc 1346     		mov	r3, r2
 7586 06ce DB00     		lsls	r3, r3, #3
 7587 06d0 9B1A     		subs	r3, r3, r2
 7588 06d2 1B01     		lsls	r3, r3, #4
 7589 06d4 F033     		adds	r3, r3, #240
 7590 06d6 D7F88025 		ldr	r2, [r7, #1408]
 7591 06da 1344     		add	r3, r3, r2
 7592 06dc 1A1D     		adds	r2, r3, #4
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7593              		.loc 1 900 0
 7594 06de 07F21C43 		addw	r3, r7, #1052
 7595 06e2 C3F8E820 		str	r2, [r3, #232]
 962:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line),         //60
 7596              		.loc 1 962 0
 7597 06e6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7598 06ea 1346     		mov	r3, r2
 7599 06ec DB00     		lsls	r3, r3, #3
 7600 06ee 9B1A     		subs	r3, r3, r2
 7601 06f0 1B01     		lsls	r3, r3, #4
 7602 06f2 03F58873 		add	r3, r3, #272
 7603 06f6 D7F88025 		ldr	r2, [r7, #1408]
 7604 06fa 1A44     		add	r2, r2, r3
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7605              		.loc 1 900 0
 7606 06fc 07F21C43 		addw	r3, r7, #1052
 7607 0700 C3F8EC20 		str	r2, [r3, #236]
 963:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].motor_driver_type),
 7608              		.loc 1 963 0
 7609 0704 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7610 0708 1346     		mov	r3, r2
 7611 070a DB00     		lsls	r3, r3, #3
 7612 070c 9B1A     		subs	r3, r3, r2
 7613 070e 1B01     		lsls	r3, r3, #4
 7614 0710 E033     		adds	r3, r3, #224
 7615 0712 D7F88025 		ldr	r2, [r7, #1408]
 7616 0716 1344     		add	r3, r3, r2
 7617 0718 9A1C     		adds	r2, r3, #2
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7618              		.loc 1 900 0
 7619 071a 07F21C43 		addw	r3, r7, #1052
 7620 071e C3F8F020 		str	r2, [r3, #240]
 964:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pwm_rate_limiter),
 7621              		.loc 1 964 0
 7622 0722 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 179


 7623 0726 1346     		mov	r3, r2
 7624 0728 DB00     		lsls	r3, r3, #3
 7625 072a 9B1A     		subs	r3, r3, r2
 7626 072c 1B01     		lsls	r3, r3, #4
 7627 072e 03F58873 		add	r3, r3, #272
 7628 0732 D7F88025 		ldr	r2, [r7, #1408]
 7629 0736 1344     		add	r3, r3, r2
 7630 0738 5A1C     		adds	r2, r3, #1
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7631              		.loc 1 900 0
 7632 073a 07F21C43 		addw	r3, r7, #1052
 7633 073e C3F8F420 		str	r2, [r3, #244]
 965:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].not_revers_motor_flag),
 7634              		.loc 1 965 0
 7635 0742 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7636 0746 1346     		mov	r3, r2
 7637 0748 DB00     		lsls	r3, r3, #3
 7638 074a 9B1A     		subs	r3, r3, r2
 7639 074c 1B01     		lsls	r3, r3, #4
 7640 074e 03F58873 		add	r3, r3, #272
 7641 0752 D7F88025 		ldr	r2, [r7, #1408]
 7642 0756 1344     		add	r3, r3, r2
 7643 0758 9A1C     		adds	r2, r3, #2
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7644              		.loc 1 900 0
 7645 075a 07F21C43 		addw	r3, r7, #1052
 7646 075e C3F8F820 		str	r2, [r3, #248]
 966:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 7647              		.loc 1 966 0
 7648 0762 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7649 0766 D7F88015 		ldr	r1, [r7, #1408]
 7650 076a 1346     		mov	r3, r2
 7651 076c DB00     		lsls	r3, r3, #3
 7652 076e 9B1A     		subs	r3, r3, r2
 7653 0770 1B01     		lsls	r3, r3, #4
 7654 0772 0B44     		add	r3, r3, r1
 7655 0774 03F58873 		add	r3, r3, #272
 7656 0778 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7657 077a 1A46     		mov	r2, r3
 7658 077c 1346     		mov	r3, r2
 7659 077e 5B00     		lsls	r3, r3, #1
 7660 0780 1344     		add	r3, r3, r2
 7661 0782 1B01     		lsls	r3, r3, #4
 7662 0784 03F5D873 		add	r3, r3, #432
 7663 0788 D7F88025 		ldr	r2, [r7, #1408]
 7664 078c 1344     		add	r3, r3, r2
 7665 078e 5A1C     		adds	r2, r3, #1
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7666              		.loc 1 900 0
 7667 0790 07F21C43 		addw	r3, r7, #1052
 7668 0794 C3F8FC20 		str	r2, [r3, #252]
 967:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].gears_params),
 7669              		.loc 1 967 0
 7670 0798 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7671 079c D7F88015 		ldr	r1, [r7, #1408]
 7672 07a0 1346     		mov	r3, r2
 7673 07a2 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 180


 7674 07a4 9B1A     		subs	r3, r3, r2
 7675 07a6 1B01     		lsls	r3, r3, #4
 7676 07a8 0B44     		add	r3, r3, r1
 7677 07aa 03F58873 		add	r3, r3, #272
 7678 07ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7679 07b0 1A46     		mov	r2, r3
 7680 07b2 1346     		mov	r3, r2
 7681 07b4 5B00     		lsls	r3, r3, #1
 7682 07b6 1344     		add	r3, r3, r2
 7683 07b8 1B01     		lsls	r3, r3, #4
 7684 07ba 03F5D873 		add	r3, r3, #432
 7685 07be D7F88025 		ldr	r2, [r7, #1408]
 7686 07c2 1344     		add	r3, r3, r2
 7687 07c4 5A1D     		adds	r2, r3, #5
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7688              		.loc 1 900 0
 7689 07c6 07F21C43 		addw	r3, r7, #1052
 7690 07ca C3F80021 		str	r2, [r3, #256]
 968:..\src/command_processing.c ****         
 969:..\src/command_processing.c **** 		(uint8*)&(MEM_P->enc[0].Enc_raw_read_conf[0]),					// additional generic params
 7691              		.loc 1 969 0
 7692 07ce D7F88035 		ldr	r3, [r7, #1408]
 7693 07d2 03F5C872 		add	r2, r3, #400
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7694              		.loc 1 900 0
 7695 07d6 07F21C43 		addw	r3, r7, #1052
 7696 07da C3F80421 		str	r2, [r3, #260]
 970:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[1].Enc_raw_read_conf[0]),
 7697              		.loc 1 970 0
 7698 07de D7F88035 		ldr	r3, [r7, #1408]
 7699 07e2 03F5E072 		add	r2, r3, #448
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7700              		.loc 1 900 0
 7701 07e6 07F21C43 		addw	r3, r7, #1052
 7702 07ea C3F80821 		str	r2, [r3, #264]
 971:..\src/command_processing.c ****         (uint8*)&(MEM_P->exp.read_ADC_sensors_port_flag),		
 7703              		.loc 1 971 0
 7704 07ee D7F88035 		ldr	r3, [r7, #1408]
 7705 07f2 03F22722 		addw	r2, r3, #551
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7706              		.loc 1 900 0
 7707 07f6 07F21C43 		addw	r3, r7, #1052
 7708 07fa C3F80C21 		str	r2, [r3, #268]
 972:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[0]),
 7709              		.loc 1 972 0
 7710 07fe D7F88035 		ldr	r3, [r7, #1408]
 7711 0802 03F50A72 		add	r2, r3, #552
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7712              		.loc 1 900 0
 7713 0806 07F21C43 		addw	r3, r7, #1052
 7714 080a C3F81021 		str	r2, [r3, #272]
 973:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[6]),                          //70  
 7715              		.loc 1 973 0
 7716 080e D7F88035 		ldr	r3, [r7, #1408]
 7717 0812 03F22E22 		addw	r2, r3, #558
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7718              		.loc 1 900 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 181


 7719 0816 07F21C43 		addw	r3, r7, #1052
 7720 081a C3F81421 		str	r2, [r3, #276]
 974:..\src/command_processing.c ****         (uint8*)&(MEM_P->exp.record_EMG_history_on_SD),
 7721              		.loc 1 974 0
 7722 081e D7F88035 		ldr	r3, [r7, #1408]
 7723 0822 03F50D72 		add	r2, r3, #564
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7724              		.loc 1 900 0
 7725 0826 07F21C43 		addw	r3, r7, #1052
 7726 082a C3F81821 		str	r2, [r3, #280]
 975:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_closure_speed),
 7727              		.loc 1 975 0
 7728 082e D7F88035 		ldr	r3, [r7, #1408]
 7729 0832 03F52C72 		add	r2, r3, #688
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7730              		.loc 1 900 0
 7731 0836 07F21C43 		addw	r3, r7, #1052
 7732 083a C3F81C21 		str	r2, [r3, #284]
 976:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_threshold),
 7733              		.loc 1 976 0
 7734 083e D7F88035 		ldr	r3, [r7, #1408]
 7735 0842 03F2B222 		addw	r2, r3, #690
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7736              		.loc 1 900 0
 7737 0846 07F21C43 		addw	r3, r7, #1052
 7738 084a C3F82021 		str	r2, [r3, #288]
 977:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_gains[0]),
 7739              		.loc 1 977 0
 7740 084e D7F88035 		ldr	r3, [r7, #1408]
 7741 0852 03F52D72 		add	r2, r3, #692
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7742              		.loc 1 900 0
 7743 0856 07F21C43 		addw	r3, r7, #1052
 7744 085a C3F82421 		str	r2, [r3, #292]
 978:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.dev_type),
 7745              		.loc 1 978 0
 7746 085e D7F88035 		ldr	r3, [r7, #1408]
 7747 0862 03F1AC02 		add	r2, r3, #172
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7748              		.loc 1 900 0
 7749 0866 07F21C43 		addw	r3, r7, #1052
 7750 086a C3F82821 		str	r2, [r3, #296]
 979:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.activation_mode),                           
 7751              		.loc 1 979 0
 7752 086e D7F88035 		ldr	r3, [r7, #1408]
 7753 0872 03F53872 		add	r2, r3, #736
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7754              		.loc 1 900 0
 7755 0876 07F21C43 		addw	r3, r7, #1052
 7756 087a C3F82C21 		str	r2, [r3, #300]
 980:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.fast_act_threshold[0]),
 7757              		.loc 1 980 0
 7758 087e D7F88035 		ldr	r3, [r7, #1408]
 7759 0882 03F2E222 		addw	r2, r3, #738
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7760              		.loc 1 900 0
 7761 0886 07F21C43 		addw	r3, r7, #1052
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 182


 7762 088a C3F83021 		str	r2, [r3, #304]
 981:..\src/command_processing.c ****         
 982:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.wrist_direction_association),              // additional wrist params
 7763              		.loc 1 982 0
 7764 088e D7F88035 		ldr	r3, [r7, #1408]
 7765 0892 03F2E622 		addw	r2, r3, #742
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7766              		.loc 1 900 0
 7767 0896 07F21C43 		addw	r3, r7, #1052
 7768 089a C3F83421 		str	r2, [r3, #308]
 983:..\src/command_processing.c ****         
 984:..\src/command_processing.c ****         (uint8*)&(MEM_P->MS.slave_comm_active),                        // additional master params
 7769              		.loc 1 984 0
 7770 089e D7F88035 		ldr	r3, [r7, #1408]
 7771 08a2 03F53072 		add	r2, r3, #704
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7772              		.loc 1 900 0
 7773 08a6 07F21C43 		addw	r3, r7, #1052
 7774 08aa C3F83821 		str	r2, [r3, #312]
 985:..\src/command_processing.c ****         (uint8*)&(MEM_P->MS.slave_ID),
 7775              		.loc 1 985 0
 7776 08ae D7F88035 		ldr	r3, [r7, #1408]
 7777 08b2 03F2C122 		addw	r2, r3, #705
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7778              		.loc 1 900 0
 7779 08b6 07F21C43 		addw	r3, r7, #1052
 7780 08ba C3F83C21 		str	r2, [r3, #316]
 986:..\src/command_processing.c ****         
 987:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.max_residual_current),                     // additional feedback param
 7781              		.loc 1 987 0
 7782 08be D7F88035 		ldr	r3, [r7, #1408]
 7783 08c2 03F53472 		add	r2, r3, #720
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7784              		.loc 1 900 0
 7785 08c6 07F21C43 		addw	r3, r7, #1052
 7786 08ca C3F84021 		str	r2, [r3, #320]
 988:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.maximum_pressure_kPa),
 7787              		.loc 1 988 0
 7788 08ce D7F88035 		ldr	r3, [r7, #1408]
 7789 08d2 03F53572 		add	r2, r3, #724
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7790              		.loc 1 900 0
 7791 08d6 07F21C43 		addw	r3, r7, #1052
 7792 08da C3F84421 		str	r2, [r3, #324]
 989:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.prop_err_fb_gain)
 7793              		.loc 1 989 0
 7794 08de D7F88035 		ldr	r3, [r7, #1408]
 7795 08e2 03F53672 		add	r2, r3, #728
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7796              		.loc 1 900 0
 7797 08e6 07F21C43 		addw	r3, r7, #1052
 7798 08ea C3F84821 		str	r2, [r3, #328]
 990:..\src/command_processing.c ****         
 991:..\src/command_processing.c **** 
 992:..\src/command_processing.c ****     };
 993:..\src/command_processing.c ****     
 994:..\src/command_processing.c ****     uint8 TYPES[NUM_OF_PARAMS] = {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 183


 7799              		.loc 1 994 0
 7800 08ee 07F57273 		add	r3, r7, #968
 7801 08f2 F64A     		ldr	r2, .L374
 7802 08f4 1846     		mov	r0, r3
 7803 08f6 1146     		mov	r1, r2
 7804 08f8 5323     		movs	r3, #83
 7805 08fa 1A46     		mov	r2, r3
 7806 08fc FFF7FEFF 		bl	memcpy
 995:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLOAT, TYPE_FLOAT, TYPE_FLAG, 
 996:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, TYPE_INT16, 
 997:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_INT32, TYPE_INT32, 
 998:..\src/command_processing.c ****         TYPE_INT16, TYPE_UINT16, TYPE_FLAG, TYPE_UINT32, 
 999:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_INT8, TYPE_FLAG, 
1000:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_UINT8, TYPE_INT32, TYPE_INT32,
1001:..\src/command_processing.c ****         TYPE_INT32, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, 
1002:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, 
1003:..\src/command_processing.c ****         TYPE_FLAG, TYPE_UINT8, TYPE_FLAG, TYPE_STRING,
1004:..\src/command_processing.c ****         
1005:..\src/command_processing.c ****         // GENERIC PARAMS
1006:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_UINT8, TYPE_FLAG,
1007:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT8, TYPE_FLAG, TYPE_FLOAT, 
1008:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG,
1009:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT16, TYPE_FLOAT, TYPE_FLAG, 
1010:..\src/command_processing.c ****         TYPE_INT32, TYPE_INT32, TYPE_INT16, TYPE_FLAG,
1011:..\src/command_processing.c ****         TYPE_INT8,  TYPE_FLAG, TYPE_FLOAT, TYPE_UINT8,
1012:..\src/command_processing.c ****         TYPE_FLAG,  TYPE_UINT8, TYPE_FLAG, TYPE_UINT8,
1013:..\src/command_processing.c ****         TYPE_INT8, TYPE_UINT8, TYPE_UINT8, TYPE_FLAG,
1014:..\src/command_processing.c ****         TYPE_UINT8, TYPE_UINT8, TYPE_FLAG, TYPE_UINT16, 
1015:..\src/command_processing.c ****         TYPE_INT16, TYPE_UINT16, TYPE_FLAG, TYPE_FLAG,
1016:..\src/command_processing.c ****         TYPE_UINT16,
1017:..\src/command_processing.c ****         
1018:..\src/command_processing.c ****                     TYPE_FLAG, TYPE_FLAG, TYPE_UINT8,
1019:..\src/command_processing.c ****         TYPE_INT32, TYPE_FLOAT, TYPE_FLOAT
1020:..\src/command_processing.c ****     };
1021:..\src/command_processing.c **** 
1022:..\src/command_processing.c ****     uint8 NUM_ITEMS[NUM_OF_PARAMS] = {
 7807              		.loc 1 1022 0
 7808 0900 07F55D73 		add	r3, r7, #884
 7809 0904 0122     		movs	r2, #1
 7810 0906 1A70     		strb	r2, [r3]
 7811 0908 07F55D73 		add	r3, r7, #884
 7812 090c 0322     		movs	r2, #3
 7813 090e 5A70     		strb	r2, [r3, #1]
 7814 0910 07F55D73 		add	r3, r7, #884
 7815 0914 0322     		movs	r2, #3
 7816 0916 9A70     		strb	r2, [r3, #2]
 7817 0918 07F55D73 		add	r3, r7, #884
 7818 091c 0122     		movs	r2, #1
 7819 091e DA70     		strb	r2, [r3, #3]
 7820 0920 07F55D73 		add	r3, r7, #884
 7821 0924 0122     		movs	r2, #1
 7822 0926 1A71     		strb	r2, [r3, #4]
 7823 0928 07F55D73 		add	r3, r7, #884
 7824 092c 0122     		movs	r2, #1
 7825 092e 5A71     		strb	r2, [r3, #5]
 7826 0930 07F55D73 		add	r3, r7, #884
 7827 0934 0322     		movs	r2, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 184


 7828 0936 9A71     		strb	r2, [r3, #6]
 7829 0938 07F55D73 		add	r3, r7, #884
 7830 093c 0322     		movs	r2, #3
 7831 093e DA71     		strb	r2, [r3, #7]
 7832 0940 07F55D73 		add	r3, r7, #884
 7833 0944 0322     		movs	r2, #3
 7834 0946 1A72     		strb	r2, [r3, #8]
 7835 0948 07F55D73 		add	r3, r7, #884
 7836 094c 0122     		movs	r2, #1
 7837 094e 5A72     		strb	r2, [r3, #9]
 7838 0950 07F55D73 		add	r3, r7, #884
 7839 0954 0222     		movs	r2, #2
 7840 0956 9A72     		strb	r2, [r3, #10]
 7841 0958 07F55D73 		add	r3, r7, #884
 7842 095c 0222     		movs	r2, #2
 7843 095e DA72     		strb	r2, [r3, #11]
 7844 0960 07F55D73 		add	r3, r7, #884
 7845 0964 0122     		movs	r2, #1
 7846 0966 1A73     		strb	r2, [r3, #12]
 7847 0968 07F55D73 		add	r3, r7, #884
 7848 096c 0222     		movs	r2, #2
 7849 096e 5A73     		strb	r2, [r3, #13]
 7850 0970 07F55D73 		add	r3, r7, #884
 7851 0974 0122     		movs	r2, #1
 7852 0976 9A73     		strb	r2, [r3, #14]
 7853 0978 07F55D73 		add	r3, r7, #884
 7854 097c 0222     		movs	r2, #2
 7855 097e DA73     		strb	r2, [r3, #15]
 7856 0980 07F55D73 		add	r3, r7, #884
 7857 0984 0222     		movs	r2, #2
 7858 0986 1A74     		strb	r2, [r3, #16]
 7859 0988 07F55D73 		add	r3, r7, #884
 7860 098c 0122     		movs	r2, #1
 7861 098e 5A74     		strb	r2, [r3, #17]
 7862 0990 07F55D73 		add	r3, r7, #884
 7863 0994 0122     		movs	r2, #1
 7864 0996 9A74     		strb	r2, [r3, #18]
 7865 0998 07F55D73 		add	r3, r7, #884
 7866 099c 0122     		movs	r2, #1
 7867 099e DA74     		strb	r2, [r3, #19]
 7868 09a0 07F55D73 		add	r3, r7, #884
 7869 09a4 0622     		movs	r2, #6
 7870 09a6 1A75     		strb	r2, [r3, #20]
 7871 09a8 07F55D73 		add	r3, r7, #884
 7872 09ac 0322     		movs	r2, #3
 7873 09ae 5A75     		strb	r2, [r3, #21]
 7874 09b0 07F55D73 		add	r3, r7, #884
 7875 09b4 0122     		movs	r2, #1
 7876 09b6 9A75     		strb	r2, [r3, #22]
 7877 09b8 07F55D73 		add	r3, r7, #884
 7878 09bc 0122     		movs	r2, #1
 7879 09be DA75     		strb	r2, [r3, #23]
 7880 09c0 07F55D73 		add	r3, r7, #884
 7881 09c4 0122     		movs	r2, #1
 7882 09c6 1A76     		strb	r2, [r3, #24]
 7883 09c8 07F55D73 		add	r3, r7, #884
 7884 09cc 0122     		movs	r2, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 185


 7885 09ce 5A76     		strb	r2, [r3, #25]
 7886 09d0 07F55D73 		add	r3, r7, #884
 7887 09d4 0122     		movs	r2, #1
 7888 09d6 9A76     		strb	r2, [r3, #26]
 7889 09d8 07F55D73 		add	r3, r7, #884
 7890 09dc 0122     		movs	r2, #1
 7891 09de DA76     		strb	r2, [r3, #27]
 7892 09e0 07F55D73 		add	r3, r7, #884
 7893 09e4 0122     		movs	r2, #1
 7894 09e6 1A77     		strb	r2, [r3, #28]
 7895 09e8 07F55D73 		add	r3, r7, #884
 7896 09ec 0122     		movs	r2, #1
 7897 09ee 5A77     		strb	r2, [r3, #29]
 7898 09f0 07F55D73 		add	r3, r7, #884
 7899 09f4 0122     		movs	r2, #1
 7900 09f6 9A77     		strb	r2, [r3, #30]
 7901 09f8 07F55D73 		add	r3, r7, #884
 7902 09fc 0622     		movs	r2, #6
 7903 09fe DA77     		strb	r2, [r3, #31]
 7904 0a00 07F55D73 		add	r3, r7, #884
 7905 0a04 0122     		movs	r2, #1
 7906 0a06 83F82020 		strb	r2, [r3, #32]
 7907 0a0a 07F55D73 		add	r3, r7, #884
 7908 0a0e 0522     		movs	r2, #5
 7909 0a10 83F82120 		strb	r2, [r3, #33]
 7910 0a14 07F55D73 		add	r3, r7, #884
 7911 0a18 0122     		movs	r2, #1
 7912 0a1a 83F82220 		strb	r2, [r3, #34]
 7913 0a1e 07F55D73 		add	r3, r7, #884
 7914 0a22 0622     		movs	r2, #6
 7915 0a24 83F82320 		strb	r2, [r3, #35]
 7916 0a28 07F55D73 		add	r3, r7, #884
 7917 0a2c 0122     		movs	r2, #1
 7918 0a2e 83F82420 		strb	r2, [r3, #36]
 7919 0a32 07F55D73 		add	r3, r7, #884
 7920 0a36 0122     		movs	r2, #1
 7921 0a38 83F82520 		strb	r2, [r3, #37]
 7922 0a3c 07F55D73 		add	r3, r7, #884
 7923 0a40 0122     		movs	r2, #1
 7924 0a42 83F82620 		strb	r2, [r3, #38]
 7925 0a46 07F55D73 		add	r3, r7, #884
 7926 0a4a 0122     		movs	r2, #1
 7927 0a4c 83F82720 		strb	r2, [r3, #39]
 7928 0a50 07F55D73 		add	r3, r7, #884
 7929 0a54 0322     		movs	r2, #3
 7930 0a56 83F82820 		strb	r2, [r3, #40]
 7931 0a5a 07F55D73 		add	r3, r7, #884
 7932 0a5e 0322     		movs	r2, #3
 7933 0a60 83F82920 		strb	r2, [r3, #41]
 7934 0a64 07F55D73 		add	r3, r7, #884
 7935 0a68 0122     		movs	r2, #1
 7936 0a6a 83F82A20 		strb	r2, [r3, #42]
 7937 0a6e 07F55D73 		add	r3, r7, #884
 7938 0a72 0322     		movs	r2, #3
 7939 0a74 83F82B20 		strb	r2, [r3, #43]
 7940 0a78 07F55D73 		add	r3, r7, #884
 7941 0a7c 0322     		movs	r2, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 186


 7942 0a7e 83F82C20 		strb	r2, [r3, #44]
 7943 0a82 07F55D73 		add	r3, r7, #884
 7944 0a86 0122     		movs	r2, #1
 7945 0a88 83F82D20 		strb	r2, [r3, #45]
 7946 0a8c 07F55D73 		add	r3, r7, #884
 7947 0a90 0122     		movs	r2, #1
 7948 0a92 83F82E20 		strb	r2, [r3, #46]
 7949 0a96 07F55D73 		add	r3, r7, #884
 7950 0a9a 0122     		movs	r2, #1
 7951 0a9c 83F82F20 		strb	r2, [r3, #47]
 7952 0aa0 07F55D73 		add	r3, r7, #884
 7953 0aa4 0322     		movs	r2, #3
 7954 0aa6 83F83020 		strb	r2, [r3, #48]
 7955 0aaa 07F55D73 		add	r3, r7, #884
 7956 0aae 0322     		movs	r2, #3
 7957 0ab0 83F83120 		strb	r2, [r3, #49]
 7958 0ab4 07F55D73 		add	r3, r7, #884
 7959 0ab8 0322     		movs	r2, #3
 7960 0aba 83F83220 		strb	r2, [r3, #50]
 7961 0abe 07F55D73 		add	r3, r7, #884
 7962 0ac2 0122     		movs	r2, #1
 7963 0ac4 83F83320 		strb	r2, [r3, #51]
 7964 0ac8 07F55D73 		add	r3, r7, #884
 7965 0acc 0222     		movs	r2, #2
 7966 0ace 83F83420 		strb	r2, [r3, #52]
 7967 0ad2 07F55D73 		add	r3, r7, #884
 7968 0ad6 0222     		movs	r2, #2
 7969 0ad8 83F83520 		strb	r2, [r3, #53]
 7970 0adc 07F55D73 		add	r3, r7, #884
 7971 0ae0 0122     		movs	r2, #1
 7972 0ae2 83F83620 		strb	r2, [r3, #54]
 7973 0ae6 07F55D73 		add	r3, r7, #884
 7974 0aea 0122     		movs	r2, #1
 7975 0aec 83F83720 		strb	r2, [r3, #55]
 7976 0af0 07F55D73 		add	r3, r7, #884
 7977 0af4 0122     		movs	r2, #1
 7978 0af6 83F83820 		strb	r2, [r3, #56]
 7979 0afa 07F55D73 		add	r3, r7, #884
 7980 0afe 0122     		movs	r2, #1
 7981 0b00 83F83920 		strb	r2, [r3, #57]
 7982 0b04 07F55D73 		add	r3, r7, #884
 7983 0b08 0622     		movs	r2, #6
 7984 0b0a 83F83A20 		strb	r2, [r3, #58]
 7985 0b0e 07F55D73 		add	r3, r7, #884
 7986 0b12 0122     		movs	r2, #1
 7987 0b14 83F83B20 		strb	r2, [r3, #59]
 7988 0b18 07F55D73 		add	r3, r7, #884
 7989 0b1c 0122     		movs	r2, #1
 7990 0b1e 83F83C20 		strb	r2, [r3, #60]
 7991 0b22 07F55D73 		add	r3, r7, #884
 7992 0b26 0122     		movs	r2, #1
 7993 0b28 83F83D20 		strb	r2, [r3, #61]
 7994 0b2c 07F55D73 		add	r3, r7, #884
 7995 0b30 0122     		movs	r2, #1
 7996 0b32 83F83E20 		strb	r2, [r3, #62]
 7997 0b36 07F55D73 		add	r3, r7, #884
 7998 0b3a 0322     		movs	r2, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 187


 7999 0b3c 83F83F20 		strb	r2, [r3, #63]
 8000 0b40 07F55D73 		add	r3, r7, #884
 8001 0b44 0322     		movs	r2, #3
 8002 0b46 83F84020 		strb	r2, [r3, #64]
1023:..\src/command_processing.c ****         1, 3, 3, 1, 
1024:..\src/command_processing.c ****         1, 1, 3, 3,
1025:..\src/command_processing.c ****         3, 1, 2, 2, 
1026:..\src/command_processing.c ****         1, 2, 1, 2,
1027:..\src/command_processing.c ****         2, 1, 1, 1, 
1028:..\src/command_processing.c ****         6, 3, 1, 1,
1029:..\src/command_processing.c ****         1, 1, 1, 1, 
1030:..\src/command_processing.c ****         1, 1, 1, 6,
1031:..\src/command_processing.c ****         1, 5, 1, 6,
1032:..\src/command_processing.c ****         
1033:..\src/command_processing.c ****         // GENERIC PARAMS
1034:..\src/command_processing.c ****         1, 1, 1, 1,
1035:..\src/command_processing.c ****         3, 3, 1, 3,
1036:..\src/command_processing.c ****         3, 1, 1, 1,
1037:..\src/command_processing.c ****         3, 3, 3, 1,
1038:..\src/command_processing.c ****         2, 2, 1, 1,
1039:..\src/command_processing.c ****         1, 1, 6, 1,
1040:..\src/command_processing.c ****         1, 1, 1, 3, 
1041:..\src/command_processing.c ****         3, N_Encoder_Line_Connected[0], N_Encoder_Line_Connected[1], 1,
 8003              		.loc 1 1041 0
 8004 0b4a 614B     		ldr	r3, .L374+4
 8005 0b4c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
1022:..\src/command_processing.c ****         1, 3, 3, 1, 
 8006              		.loc 1 1022 0
 8007 0b4e 07F55D73 		add	r3, r7, #884
 8008 0b52 83F84120 		strb	r2, [r3, #65]
 8009              		.loc 1 1041 0
 8010 0b56 5E4B     		ldr	r3, .L374+4
 8011 0b58 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
1022:..\src/command_processing.c ****         1, 3, 3, 1, 
 8012              		.loc 1 1022 0
 8013 0b5a 07F55D73 		add	r3, r7, #884
 8014 0b5e 83F84220 		strb	r2, [r3, #66]
 8015 0b62 07F55D73 		add	r3, r7, #884
 8016 0b66 0122     		movs	r2, #1
 8017 0b68 83F84320 		strb	r2, [r3, #67]
 8018 0b6c 07F55D73 		add	r3, r7, #884
 8019 0b70 0622     		movs	r2, #6
 8020 0b72 83F84420 		strb	r2, [r3, #68]
 8021 0b76 07F55D73 		add	r3, r7, #884
 8022 0b7a 0622     		movs	r2, #6
 8023 0b7c 83F84520 		strb	r2, [r3, #69]
 8024 0b80 07F55D73 		add	r3, r7, #884
 8025 0b84 0122     		movs	r2, #1
 8026 0b86 83F84620 		strb	r2, [r3, #70]
 8027 0b8a 07F55D73 		add	r3, r7, #884
 8028 0b8e 0122     		movs	r2, #1
 8029 0b90 83F84720 		strb	r2, [r3, #71]
 8030 0b94 07F55D73 		add	r3, r7, #884
 8031 0b98 0122     		movs	r2, #1
 8032 0b9a 83F84820 		strb	r2, [r3, #72]
 8033 0b9e 07F55D73 		add	r3, r7, #884
 8034 0ba2 0222     		movs	r2, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 188


 8035 0ba4 83F84920 		strb	r2, [r3, #73]
 8036 0ba8 07F55D73 		add	r3, r7, #884
 8037 0bac 0122     		movs	r2, #1
 8038 0bae 83F84A20 		strb	r2, [r3, #74]
 8039 0bb2 07F55D73 		add	r3, r7, #884
 8040 0bb6 0122     		movs	r2, #1
 8041 0bb8 83F84B20 		strb	r2, [r3, #75]
 8042 0bbc 07F55D73 		add	r3, r7, #884
 8043 0bc0 0222     		movs	r2, #2
 8044 0bc2 83F84C20 		strb	r2, [r3, #76]
 8045 0bc6 07F55D73 		add	r3, r7, #884
 8046 0bca 0122     		movs	r2, #1
 8047 0bcc 83F84D20 		strb	r2, [r3, #77]
 8048 0bd0 07F55D73 		add	r3, r7, #884
 8049 0bd4 0122     		movs	r2, #1
 8050 0bd6 83F84E20 		strb	r2, [r3, #78]
 8051 0bda 07F55D73 		add	r3, r7, #884
 8052 0bde 0122     		movs	r2, #1
 8053 0be0 83F84F20 		strb	r2, [r3, #79]
 8054 0be4 07F55D73 		add	r3, r7, #884
 8055 0be8 0122     		movs	r2, #1
 8056 0bea 83F85020 		strb	r2, [r3, #80]
 8057 0bee 07F55D73 		add	r3, r7, #884
 8058 0bf2 0122     		movs	r2, #1
 8059 0bf4 83F85120 		strb	r2, [r3, #81]
 8060 0bf8 07F55D73 		add	r3, r7, #884
 8061 0bfc 0122     		movs	r2, #1
 8062 0bfe 83F85220 		strb	r2, [r3, #82]
1042:..\src/command_processing.c ****         6, 6, 1, 1,
1043:..\src/command_processing.c ****         1, 2, 1, 1,
1044:..\src/command_processing.c ****         2,
1045:..\src/command_processing.c ****         
1046:..\src/command_processing.c ****            1, 1, 1, 
1047:..\src/command_processing.c ****         1, 1, 1
1048:..\src/command_processing.c ****     };
1049:..\src/command_processing.c ****     
1050:..\src/command_processing.c ****     uint8 NUM_STRUCT[NUM_OF_PARAMS] = {     // see STRUCTURES INDEX in globals.h
 8063              		.loc 1 1050 0
 8064 0c02 07F54873 		add	r3, r7, #800
 8065 0c06 0022     		movs	r2, #0
 8066 0c08 1A70     		strb	r2, [r3]
 8067 0c0a 97F87D35 		ldrb	r3, [r7, #1405]
 8068 0c0e 0A33     		adds	r3, r3, #10
 8069 0c10 DAB2     		uxtb	r2, r3
 8070 0c12 07F54873 		add	r3, r7, #800
 8071 0c16 5A70     		strb	r2, [r3, #1]
 8072 0c18 97F87D35 		ldrb	r3, [r7, #1405]
 8073 0c1c 0A33     		adds	r3, r3, #10
 8074 0c1e DAB2     		uxtb	r2, r3
 8075 0c20 07F54873 		add	r3, r7, #800
 8076 0c24 9A70     		strb	r2, [r3, #2]
 8077 0c26 97F87D35 		ldrb	r3, [r7, #1405]
 8078 0c2a 0A33     		adds	r3, r3, #10
 8079 0c2c DAB2     		uxtb	r2, r3
 8080 0c2e 07F54873 		add	r3, r7, #800
 8081 0c32 DA70     		strb	r2, [r3, #3]
 8082 0c34 97F87D35 		ldrb	r3, [r7, #1405]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 189


 8083 0c38 0A33     		adds	r3, r3, #10
 8084 0c3a DAB2     		uxtb	r2, r3
 8085 0c3c 07F54873 		add	r3, r7, #800
 8086 0c40 1A71     		strb	r2, [r3, #4]
 8087 0c42 97F87D35 		ldrb	r3, [r7, #1405]
 8088 0c46 0A33     		adds	r3, r3, #10
 8089 0c48 DAB2     		uxtb	r2, r3
 8090 0c4a 07F54873 		add	r3, r7, #800
 8091 0c4e 5A71     		strb	r2, [r3, #5]
1051:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
1052:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), 
 8092              		.loc 1 1052 0
 8093 0c50 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8094 0c54 D7F88015 		ldr	r1, [r7, #1408]
 8095 0c58 1346     		mov	r3, r2
 8096 0c5a DB00     		lsls	r3, r3, #3
 8097 0c5c 9B1A     		subs	r3, r3, r2
 8098 0c5e 1B01     		lsls	r3, r3, #4
 8099 0c60 0B44     		add	r3, r3, r1
 8100 0c62 03F58873 		add	r3, r3, #272
 8101 0c66 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1050:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8102              		.loc 1 1050 0
 8103 0c68 1433     		adds	r3, r3, #20
 8104 0c6a DAB2     		uxtb	r2, r3
 8105 0c6c 07F54873 		add	r3, r7, #800
 8106 0c70 9A71     		strb	r2, [r3, #6]
 8107              		.loc 1 1052 0
 8108 0c72 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8109 0c76 D7F88015 		ldr	r1, [r7, #1408]
 8110 0c7a 1346     		mov	r3, r2
 8111 0c7c DB00     		lsls	r3, r3, #3
 8112 0c7e 9B1A     		subs	r3, r3, r2
 8113 0c80 1B01     		lsls	r3, r3, #4
 8114 0c82 0B44     		add	r3, r3, r1
 8115 0c84 03F58873 		add	r3, r3, #272
 8116 0c88 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1050:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8117              		.loc 1 1050 0
 8118 0c8a 1433     		adds	r3, r3, #20
 8119 0c8c DAB2     		uxtb	r2, r3
 8120 0c8e 07F54873 		add	r3, r7, #800
 8121 0c92 DA71     		strb	r2, [r3, #7]
1053:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8122              		.loc 1 1053 0
 8123 0c94 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8124 0c98 D7F88015 		ldr	r1, [r7, #1408]
 8125 0c9c 1346     		mov	r3, r2
 8126 0c9e DB00     		lsls	r3, r3, #3
 8127 0ca0 9B1A     		subs	r3, r3, r2
 8128 0ca2 1B01     		lsls	r3, r3, #4
 8129 0ca4 0B44     		add	r3, r3, r1
 8130 0ca6 03F58873 		add	r3, r3, #272
 8131 0caa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1050:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8132              		.loc 1 1050 0
 8133 0cac 1433     		adds	r3, r3, #20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 190


 8134 0cae DAB2     		uxtb	r2, r3
 8135 0cb0 07F54873 		add	r3, r7, #800
 8136 0cb4 1A72     		strb	r2, [r3, #8]
 8137 0cb6 97F87D35 		ldrb	r3, [r7, #1405]
 8138 0cba 0A33     		adds	r3, r3, #10
 8139 0cbc DAB2     		uxtb	r2, r3
 8140 0cbe 07F54873 		add	r3, r7, #800
 8141 0cc2 5A72     		strb	r2, [r3, #9]
 8142 0cc4 97F87D35 		ldrb	r3, [r7, #1405]
 8143 0cc8 04E0     		b	.L375
 8144              	.L376:
 8145 0cca 00BF     		.align	2
 8146              	.L374:
 8147 0ccc 24060000 		.word	.LC0
 8148 0cd0 00000000 		.word	N_Encoder_Line_Connected
 8149              	.L375:
 8150 0cd4 0A33     		adds	r3, r3, #10
 8151 0cd6 DAB2     		uxtb	r2, r3
 8152 0cd8 07F54873 		add	r3, r7, #800
 8153 0cdc 9A72     		strb	r2, [r3, #10]
 8154 0cde 97F87D35 		ldrb	r3, [r7, #1405]
 8155 0ce2 0A33     		adds	r3, r3, #10
 8156 0ce4 DAB2     		uxtb	r2, r3
 8157 0ce6 07F54873 		add	r3, r7, #800
 8158 0cea DA72     		strb	r2, [r3, #11]
 8159 0cec 97F87D35 		ldrb	r3, [r7, #1405]
 8160 0cf0 0A33     		adds	r3, r3, #10
 8161 0cf2 DAB2     		uxtb	r2, r3
 8162 0cf4 07F54873 		add	r3, r7, #800
 8163 0cf8 1A73     		strb	r2, [r3, #12]
 8164 0cfa 07F54873 		add	r3, r7, #800
 8165 0cfe 1E22     		movs	r2, #30
 8166 0d00 5A73     		strb	r2, [r3, #13]
 8167 0d02 07F54873 		add	r3, r7, #800
 8168 0d06 1E22     		movs	r2, #30
 8169 0d08 9A73     		strb	r2, [r3, #14]
 8170 0d0a 07F54873 		add	r3, r7, #800
 8171 0d0e 1E22     		movs	r2, #30
 8172 0d10 DA73     		strb	r2, [r3, #15]
 8173 0d12 07F54873 		add	r3, r7, #800
 8174 0d16 1E22     		movs	r2, #30
 8175 0d18 1A74     		strb	r2, [r3, #16]
1054:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_EMG, ST_EMG, ST_EMG, 
1055:..\src/command_processing.c ****         ST_EMG, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_I
 8176              		.loc 1 1055 0
 8177 0d1a 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8178 0d1e D7F88015 		ldr	r1, [r7, #1408]
 8179 0d22 1346     		mov	r3, r2
 8180 0d24 DB00     		lsls	r3, r3, #3
 8181 0d26 9B1A     		subs	r3, r3, r2
 8182 0d28 1B01     		lsls	r3, r3, #4
 8183 0d2a 0B44     		add	r3, r3, r1
 8184 0d2c 03F58873 		add	r3, r3, #272
 8185 0d30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1050:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8186              		.loc 1 1050 0
 8187 0d32 1433     		adds	r3, r3, #20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 191


 8188 0d34 DAB2     		uxtb	r2, r3
 8189 0d36 07F54873 		add	r3, r7, #800
 8190 0d3a 5A74     		strb	r2, [r3, #17]
 8191              		.loc 1 1055 0
 8192 0d3c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8193 0d40 D7F88015 		ldr	r1, [r7, #1408]
 8194 0d44 1346     		mov	r3, r2
 8195 0d46 DB00     		lsls	r3, r3, #3
 8196 0d48 9B1A     		subs	r3, r3, r2
 8197 0d4a 1B01     		lsls	r3, r3, #4
 8198 0d4c 0B44     		add	r3, r3, r1
 8199 0d4e 03F58873 		add	r3, r3, #272
 8200 0d52 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1050:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8201              		.loc 1 1050 0
 8202 0d54 1433     		adds	r3, r3, #20
 8203 0d56 DAB2     		uxtb	r2, r3
 8204 0d58 07F54873 		add	r3, r7, #800
 8205 0d5c 9A74     		strb	r2, [r3, #18]
 8206 0d5e 97F87D35 		ldrb	r3, [r7, #1405]
 8207 0d62 0A33     		adds	r3, r3, #10
 8208 0d64 DAB2     		uxtb	r2, r3
 8209 0d66 07F54873 		add	r3, r7, #800
 8210 0d6a DA74     		strb	r2, [r3, #19]
 8211 0d6c 97F87D35 		ldrb	r3, [r7, #1405]
 8212 0d70 0A33     		adds	r3, r3, #10
 8213 0d72 DAB2     		uxtb	r2, r3
 8214 0d74 07F54873 		add	r3, r7, #800
 8215 0d78 1A75     		strb	r2, [r3, #20]
 8216 0d7a 07F54873 		add	r3, r7, #800
 8217 0d7e 0022     		movs	r2, #0
 8218 0d80 5A75     		strb	r2, [r3, #21]
 8219 0d82 07F54873 		add	r3, r7, #800
 8220 0d86 4622     		movs	r2, #70
 8221 0d88 9A75     		strb	r2, [r3, #22]
 8222 0d8a 07F54873 		add	r3, r7, #800
 8223 0d8e 4622     		movs	r2, #70
 8224 0d90 DA75     		strb	r2, [r3, #23]
 8225 0d92 07F54873 		add	r3, r7, #800
 8226 0d96 4622     		movs	r2, #70
 8227 0d98 1A76     		strb	r2, [r3, #24]
 8228 0d9a 07F54873 		add	r3, r7, #800
 8229 0d9e 4622     		movs	r2, #70
 8230 0da0 5A76     		strb	r2, [r3, #25]
 8231 0da2 07F54873 		add	r3, r7, #800
 8232 0da6 1E22     		movs	r2, #30
 8233 0da8 9A76     		strb	r2, [r3, #26]
 8234 0daa 07F54873 		add	r3, r7, #800
 8235 0dae 0022     		movs	r2, #0
 8236 0db0 DA76     		strb	r2, [r3, #27]
 8237 0db2 07F54873 		add	r3, r7, #800
 8238 0db6 2822     		movs	r2, #40
 8239 0db8 1A77     		strb	r2, [r3, #28]
 8240 0dba 07F54873 		add	r3, r7, #800
 8241 0dbe 3222     		movs	r2, #50
 8242 0dc0 5A77     		strb	r2, [r3, #29]
 8243 0dc2 07F54873 		add	r3, r7, #800
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 192


 8244 0dc6 0022     		movs	r2, #0
 8245 0dc8 9A77     		strb	r2, [r3, #30]
 8246 0dca 07F54873 		add	r3, r7, #800
 8247 0dce 3222     		movs	r2, #50
 8248 0dd0 DA77     		strb	r2, [r3, #31]
 8249 0dd2 07F54873 		add	r3, r7, #800
 8250 0dd6 2822     		movs	r2, #40
 8251 0dd8 83F82020 		strb	r2, [r3, #32]
 8252 0ddc 07F54873 		add	r3, r7, #800
 8253 0de0 2822     		movs	r2, #40
 8254 0de2 83F82120 		strb	r2, [r3, #33]
 8255 0de6 07F54873 		add	r3, r7, #800
 8256 0dea 0022     		movs	r2, #0
 8257 0dec 83F82220 		strb	r2, [r3, #34]
1056:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_DEVICE, ST_SH_SPEC, ST_SH_SPEC,
1057:..\src/command_processing.c ****         ST_SH_SPEC, ST_SH_SPEC, ST_EMG, ST_DEVICE,
1058:..\src/command_processing.c ****         ST_IMU, ST_EXPANSION, ST_DEVICE, ST_EXPANSION,
1059:..\src/command_processing.c ****         ST_IMU, ST_IMU, ST_DEVICE, ST_USER+(MEM_P->dev.user_id),
 8258              		.loc 1 1059 0
 8259 0df0 D7F88035 		ldr	r3, [r7, #1408]
 8260 0df4 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
1050:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8261              		.loc 1 1050 0
 8262 0df8 3C33     		adds	r3, r3, #60
 8263 0dfa DAB2     		uxtb	r2, r3
 8264 0dfc 07F54873 		add	r3, r7, #800
 8265 0e00 83F82320 		strb	r2, [r3, #35]
 8266 0e04 97F87D35 		ldrb	r3, [r7, #1405]
 8267 0e08 0A33     		adds	r3, r3, #10
 8268 0e0a DAB2     		uxtb	r2, r3
 8269 0e0c 07F54873 		add	r3, r7, #800
 8270 0e10 83F82420 		strb	r2, [r3, #36]
 8271 0e14 97F87D35 		ldrb	r3, [r7, #1405]
 8272 0e18 0A33     		adds	r3, r3, #10
 8273 0e1a DAB2     		uxtb	r2, r3
 8274 0e1c 07F54873 		add	r3, r7, #800
 8275 0e20 83F82520 		strb	r2, [r3, #37]
 8276 0e24 97F87D35 		ldrb	r3, [r7, #1405]
 8277 0e28 0A33     		adds	r3, r3, #10
 8278 0e2a DAB2     		uxtb	r2, r3
 8279 0e2c 07F54873 		add	r3, r7, #800
 8280 0e30 83F82620 		strb	r2, [r3, #38]
 8281 0e34 97F87D35 		ldrb	r3, [r7, #1405]
 8282 0e38 0A33     		adds	r3, r3, #10
 8283 0e3a DAB2     		uxtb	r2, r3
 8284 0e3c 07F54873 		add	r3, r7, #800
 8285 0e40 83F82720 		strb	r2, [r3, #39]
1060:..\src/command_processing.c ****         
1061:..\src/command_processing.c ****         // GENERIC PARAMS
1062:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX,
1063:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_IDX].enco
 8286              		.loc 1 1063 0
 8287 0e44 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8288 0e48 D7F88015 		ldr	r1, [r7, #1408]
 8289 0e4c 1346     		mov	r3, r2
 8290 0e4e DB00     		lsls	r3, r3, #3
 8291 0e50 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 193


 8292 0e52 1B01     		lsls	r3, r3, #4
 8293 0e54 0B44     		add	r3, r3, r1
 8294 0e56 03F58873 		add	r3, r3, #272
 8295 0e5a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1050:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8296              		.loc 1 1050 0
 8297 0e5c 1433     		adds	r3, r3, #20
 8298 0e5e DAB2     		uxtb	r2, r3
 8299 0e60 07F54873 		add	r3, r7, #800
 8300 0e64 83F82820 		strb	r2, [r3, #40]
 8301              		.loc 1 1063 0
 8302 0e68 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8303 0e6c D7F88015 		ldr	r1, [r7, #1408]
 8304 0e70 1346     		mov	r3, r2
 8305 0e72 DB00     		lsls	r3, r3, #3
 8306 0e74 9B1A     		subs	r3, r3, r2
 8307 0e76 1B01     		lsls	r3, r3, #4
 8308 0e78 0B44     		add	r3, r3, r1
 8309 0e7a 03F58873 		add	r3, r3, #272
 8310 0e7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1050:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8311              		.loc 1 1050 0
 8312 0e80 1433     		adds	r3, r3, #20
 8313 0e82 DAB2     		uxtb	r2, r3
 8314 0e84 07F54873 		add	r3, r7, #800
 8315 0e88 83F82920 		strb	r2, [r3, #41]
 8316 0e8c 07F54873 		add	r3, r7, #800
 8317 0e90 0022     		movs	r2, #0
 8318 0e92 83F82A20 		strb	r2, [r3, #42]
 8319 0e96 97F87C35 		ldrb	r3, [r7, #1404]
 8320 0e9a 0A33     		adds	r3, r3, #10
 8321 0e9c DAB2     		uxtb	r2, r3
 8322 0e9e 07F54873 		add	r3, r7, #800
 8323 0ea2 83F82B20 		strb	r2, [r3, #43]
 8324 0ea6 97F87C35 		ldrb	r3, [r7, #1404]
 8325 0eaa 0A33     		adds	r3, r3, #10
 8326 0eac DAB2     		uxtb	r2, r3
 8327 0eae 07F54873 		add	r3, r7, #800
 8328 0eb2 83F82C20 		strb	r2, [r3, #44]
 8329 0eb6 97F87C35 		ldrb	r3, [r7, #1404]
 8330 0eba 0A33     		adds	r3, r3, #10
 8331 0ebc DAB2     		uxtb	r2, r3
 8332 0ebe 07F54873 		add	r3, r7, #800
 8333 0ec2 83F82D20 		strb	r2, [r3, #45]
 8334 0ec6 97F87C35 		ldrb	r3, [r7, #1404]
 8335 0eca 0A33     		adds	r3, r3, #10
 8336 0ecc DAB2     		uxtb	r2, r3
 8337 0ece 07F54873 		add	r3, r7, #800
 8338 0ed2 83F82E20 		strb	r2, [r3, #46]
 8339 0ed6 97F87C35 		ldrb	r3, [r7, #1404]
 8340 0eda 0A33     		adds	r3, r3, #10
 8341 0edc DAB2     		uxtb	r2, r3
 8342 0ede 07F54873 		add	r3, r7, #800
 8343 0ee2 83F82F20 		strb	r2, [r3, #47]
1064:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+S
1065:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[SECOND_M
 8344              		.loc 1 1065 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 194


 8345 0ee6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8346 0eea D7F88015 		ldr	r1, [r7, #1408]
 8347 0eee 1346     		mov	r3, r2
 8348 0ef0 DB00     		lsls	r3, r3, #3
 8349 0ef2 9B1A     		subs	r3, r3, r2
 8350 0ef4 1B01     		lsls	r3, r3, #4
 8351 0ef6 0B44     		add	r3, r3, r1
 8352 0ef8 03F58873 		add	r3, r3, #272
 8353 0efc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1050:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8354              		.loc 1 1050 0
 8355 0efe 1433     		adds	r3, r3, #20
 8356 0f00 DAB2     		uxtb	r2, r3
 8357 0f02 07F54873 		add	r3, r7, #800
 8358 0f06 83F83020 		strb	r2, [r3, #48]
 8359              		.loc 1 1065 0
 8360 0f0a 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8361 0f0e D7F88015 		ldr	r1, [r7, #1408]
 8362 0f12 1346     		mov	r3, r2
 8363 0f14 DB00     		lsls	r3, r3, #3
 8364 0f16 9B1A     		subs	r3, r3, r2
 8365 0f18 1B01     		lsls	r3, r3, #4
 8366 0f1a 0B44     		add	r3, r3, r1
 8367 0f1c 03F58873 		add	r3, r3, #272
 8368 0f20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1050:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8369              		.loc 1 1050 0
 8370 0f22 1433     		adds	r3, r3, #20
 8371 0f24 DAB2     		uxtb	r2, r3
 8372 0f26 07F54873 		add	r3, r7, #800
 8373 0f2a 83F83120 		strb	r2, [r3, #49]
 8374              		.loc 1 1065 0
 8375 0f2e 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8376 0f32 D7F88015 		ldr	r1, [r7, #1408]
 8377 0f36 1346     		mov	r3, r2
 8378 0f38 DB00     		lsls	r3, r3, #3
 8379 0f3a 9B1A     		subs	r3, r3, r2
 8380 0f3c 1B01     		lsls	r3, r3, #4
 8381 0f3e 0B44     		add	r3, r3, r1
 8382 0f40 03F58873 		add	r3, r3, #272
 8383 0f44 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1050:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8384              		.loc 1 1050 0
 8385 0f46 1433     		adds	r3, r3, #20
 8386 0f48 DAB2     		uxtb	r2, r3
 8387 0f4a 07F54873 		add	r3, r7, #800
 8388 0f4e 83F83220 		strb	r2, [r3, #50]
 8389 0f52 97F87C35 		ldrb	r3, [r7, #1404]
 8390 0f56 0A33     		adds	r3, r3, #10
 8391 0f58 DAB2     		uxtb	r2, r3
 8392 0f5a 07F54873 		add	r3, r7, #800
 8393 0f5e 83F83320 		strb	r2, [r3, #51]
 8394 0f62 97F87C35 		ldrb	r3, [r7, #1404]
 8395 0f66 0A33     		adds	r3, r3, #10
 8396 0f68 DAB2     		uxtb	r2, r3
 8397 0f6a 07F54873 		add	r3, r7, #800
 8398 0f6e 83F83420 		strb	r2, [r3, #52]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 195


 8399 0f72 97F87C35 		ldrb	r3, [r7, #1404]
 8400 0f76 0A33     		adds	r3, r3, #10
 8401 0f78 DAB2     		uxtb	r2, r3
 8402 0f7a 07F54873 		add	r3, r7, #800
 8403 0f7e 83F83520 		strb	r2, [r3, #53]
 8404 0f82 97F87C35 		ldrb	r3, [r7, #1404]
 8405 0f86 0A33     		adds	r3, r3, #10
 8406 0f88 DAB2     		uxtb	r2, r3
 8407 0f8a 07F54873 		add	r3, r7, #800
 8408 0f8e 83F83620 		strb	r2, [r3, #54]
1066:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 8409              		.loc 1 1066 0
 8410 0f92 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8411 0f96 D7F88015 		ldr	r1, [r7, #1408]
 8412 0f9a 1346     		mov	r3, r2
 8413 0f9c DB00     		lsls	r3, r3, #3
 8414 0f9e 9B1A     		subs	r3, r3, r2
 8415 0fa0 1B01     		lsls	r3, r3, #4
 8416 0fa2 0B44     		add	r3, r3, r1
 8417 0fa4 03F58873 		add	r3, r3, #272
 8418 0fa8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1050:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8419              		.loc 1 1050 0
 8420 0faa 1433     		adds	r3, r3, #20
 8421 0fac DAB2     		uxtb	r2, r3
 8422 0fae 07F54873 		add	r3, r7, #800
 8423 0fb2 83F83720 		strb	r2, [r3, #55]
1067:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_MOTOR+SECOND_MOTOR_IDX, ST_MOT
 8424              		.loc 1 1067 0
 8425 0fb6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8426 0fba D7F88015 		ldr	r1, [r7, #1408]
 8427 0fbe 1346     		mov	r3, r2
 8428 0fc0 DB00     		lsls	r3, r3, #3
 8429 0fc2 9B1A     		subs	r3, r3, r2
 8430 0fc4 1B01     		lsls	r3, r3, #4
 8431 0fc6 0B44     		add	r3, r3, r1
 8432 0fc8 03F58873 		add	r3, r3, #272
 8433 0fcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1050:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8434              		.loc 1 1050 0
 8435 0fce 1433     		adds	r3, r3, #20
 8436 0fd0 DAB2     		uxtb	r2, r3
 8437 0fd2 07F54873 		add	r3, r7, #800
 8438 0fd6 83F83820 		strb	r2, [r3, #56]
 8439 0fda 97F87C35 		ldrb	r3, [r7, #1404]
 8440 0fde 0A33     		adds	r3, r3, #10
 8441 0fe0 DAB2     		uxtb	r2, r3
 8442 0fe2 07F54873 		add	r3, r7, #800
 8443 0fe6 83F83920 		strb	r2, [r3, #57]
 8444 0fea 97F87C35 		ldrb	r3, [r7, #1404]
 8445 0fee 0A33     		adds	r3, r3, #10
 8446 0ff0 DAB2     		uxtb	r2, r3
 8447 0ff2 07F54873 		add	r3, r7, #800
 8448 0ff6 83F83A20 		strb	r2, [r3, #58]
 8449 0ffa 97F87C35 		ldrb	r3, [r7, #1404]
 8450 0ffe 0A33     		adds	r3, r3, #10
 8451 1000 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 196


 8452 1002 07F54873 		add	r3, r7, #800
 8453 1006 83F83B20 		strb	r2, [r3, #59]
 8454 100a 97F87C35 		ldrb	r3, [r7, #1404]
 8455 100e 0A33     		adds	r3, r3, #10
 8456 1010 DAB2     		uxtb	r2, r3
 8457 1012 07F54873 		add	r3, r7, #800
 8458 1016 83F83C20 		strb	r2, [r3, #60]
 8459 101a 97F87C35 		ldrb	r3, [r7, #1404]
 8460 101e 0A33     		adds	r3, r3, #10
 8461 1020 DAB2     		uxtb	r2, r3
 8462 1022 07F54873 		add	r3, r7, #800
 8463 1026 83F83D20 		strb	r2, [r3, #61]
 8464 102a 97F87C35 		ldrb	r3, [r7, #1404]
 8465 102e 0A33     		adds	r3, r3, #10
 8466 1030 DAB2     		uxtb	r2, r3
 8467 1032 07F54873 		add	r3, r7, #800
 8468 1036 83F83E20 		strb	r2, [r3, #62]
1068:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 8469              		.loc 1 1068 0
 8470 103a 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8471 103e D7F88015 		ldr	r1, [r7, #1408]
 8472 1042 1346     		mov	r3, r2
 8473 1044 DB00     		lsls	r3, r3, #3
 8474 1046 9B1A     		subs	r3, r3, r2
 8475 1048 1B01     		lsls	r3, r3, #4
 8476 104a 0B44     		add	r3, r3, r1
 8477 104c 03F58873 		add	r3, r3, #272
 8478 1050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1050:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8479              		.loc 1 1050 0
 8480 1052 1433     		adds	r3, r3, #20
 8481 1054 DAB2     		uxtb	r2, r3
 8482 1056 07F54873 		add	r3, r7, #800
 8483 105a 83F83F20 		strb	r2, [r3, #63]
1069:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+0, ST_ENCODER+1, ST_EX
 8484              		.loc 1 1069 0
 8485 105e 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8486 1062 D7F88015 		ldr	r1, [r7, #1408]
 8487 1066 1346     		mov	r3, r2
 8488 1068 DB00     		lsls	r3, r3, #3
 8489 106a 9B1A     		subs	r3, r3, r2
 8490 106c 1B01     		lsls	r3, r3, #4
 8491 106e 0B44     		add	r3, r3, r1
 8492 1070 03F58873 		add	r3, r3, #272
 8493 1074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1050:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8494              		.loc 1 1050 0
 8495 1076 1433     		adds	r3, r3, #20
 8496 1078 DAB2     		uxtb	r2, r3
 8497 107a 07F54873 		add	r3, r7, #800
 8498 107e 83F84020 		strb	r2, [r3, #64]
 8499 1082 07F54873 		add	r3, r7, #800
 8500 1086 1422     		movs	r2, #20
 8501 1088 83F84120 		strb	r2, [r3, #65]
 8502 108c 07F54873 		add	r3, r7, #800
 8503 1090 1522     		movs	r2, #21
 8504 1092 83F84220 		strb	r2, [r3, #66]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 197


 8505 1096 07F54873 		add	r3, r7, #800
 8506 109a 3222     		movs	r2, #50
 8507 109c 83F84320 		strb	r2, [r3, #67]
 8508 10a0 07F54873 		add	r3, r7, #800
 8509 10a4 3222     		movs	r2, #50
 8510 10a6 83F84420 		strb	r2, [r3, #68]
 8511 10aa 07F54873 		add	r3, r7, #800
 8512 10ae 3222     		movs	r2, #50
 8513 10b0 83F84520 		strb	r2, [r3, #69]
 8514 10b4 07F54873 		add	r3, r7, #800
 8515 10b8 3222     		movs	r2, #50
 8516 10ba 83F84620 		strb	r2, [r3, #70]
 8517 10be 07F54873 		add	r3, r7, #800
 8518 10c2 6E22     		movs	r2, #110
 8519 10c4 83F84720 		strb	r2, [r3, #71]
 8520 10c8 07F54873 		add	r3, r7, #800
 8521 10cc 6E22     		movs	r2, #110
 8522 10ce 83F84820 		strb	r2, [r3, #72]
 8523 10d2 07F54873 		add	r3, r7, #800
 8524 10d6 6E22     		movs	r2, #110
 8525 10d8 83F84920 		strb	r2, [r3, #73]
 8526 10dc 07F54873 		add	r3, r7, #800
 8527 10e0 0022     		movs	r2, #0
 8528 10e2 83F84A20 		strb	r2, [r3, #74]
 8529 10e6 07F54873 		add	r3, r7, #800
 8530 10ea 6422     		movs	r2, #100
 8531 10ec 83F84B20 		strb	r2, [r3, #75]
 8532 10f0 07F54873 		add	r3, r7, #800
 8533 10f4 6422     		movs	r2, #100
 8534 10f6 83F84C20 		strb	r2, [r3, #76]
 8535 10fa 07F54873 		add	r3, r7, #800
 8536 10fe 6422     		movs	r2, #100
 8537 1100 83F84D20 		strb	r2, [r3, #77]
 8538 1104 07F54873 		add	r3, r7, #800
 8539 1108 5022     		movs	r2, #80
 8540 110a 83F84E20 		strb	r2, [r3, #78]
 8541 110e 07F54873 		add	r3, r7, #800
 8542 1112 5022     		movs	r2, #80
 8543 1114 83F84F20 		strb	r2, [r3, #79]
 8544 1118 07F54873 		add	r3, r7, #800
 8545 111c 5A22     		movs	r2, #90
 8546 111e 83F85020 		strb	r2, [r3, #80]
 8547 1122 07F54873 		add	r3, r7, #800
 8548 1126 5A22     		movs	r2, #90
 8549 1128 83F85120 		strb	r2, [r3, #81]
 8550 112c 07F54873 		add	r3, r7, #800
 8551 1130 5A22     		movs	r2, #90
 8552 1132 83F85220 		strb	r2, [r3, #82]
1070:..\src/command_processing.c ****         ST_EXPANSION, ST_EXPANSION, ST_EXPANSION, ST_JOY_SPEC,
1071:..\src/command_processing.c ****         ST_JOY_SPEC, ST_JOY_SPEC, ST_DEVICE, ST_WR_SPEC, 
1072:..\src/command_processing.c ****         ST_WR_SPEC,
1073:..\src/command_processing.c ****         
1074:..\src/command_processing.c ****                     ST_WR_SPEC, ST_MS_SPEC, ST_MS_SPEC,
1075:..\src/command_processing.c ****         ST_FB_SPEC, ST_FB_SPEC, ST_FB_SPEC
1076:..\src/command_processing.c ****         
1077:..\src/command_processing.c ****     };
1078:..\src/command_processing.c ****     
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 198


1079:..\src/command_processing.c ****     const char* PARAMS_STR[NUM_OF_PARAMS] = {
 8553              		.loc 1 1079 0
 8554 1136 07F5EA73 		add	r3, r7, #468
 8555 113a CD4A     		ldr	r2, .L377
 8556 113c 1846     		mov	r0, r3
 8557 113e 1146     		mov	r1, r2
 8558 1140 4FF4A673 		mov	r3, #332
 8559 1144 1A46     		mov	r2, r3
 8560 1146 FFF7FEFF 		bl	memcpy
1080:..\src/command_processing.c ****         "1 - Device ID:", "2 - Position PID [P, I, D]:", "3 - Current PID [P, I, D]:", "4 - Startup
1081:..\src/command_processing.c ****         "5 - Input mode:", "6 - Control mode:", "7 - Resolutions:", "8 - Measurement Offsets:", 
1082:..\src/command_processing.c ****         "9 - Multipliers:", "10 - Pos. limit active:", "11 - Pos. limits [inf, sup]:", "12 - Max st
1083:..\src/command_processing.c ****         "13 - Current limit:", "14 - EMG thresholds:", "15 - EMG calibration on startup:", "16 - EM
1084:..\src/command_processing.c ****         "17 - EMG max speeds:", "18 - Absolute encoder position:", "19 - Motor handle ratio:", "20 
1085:..\src/command_processing.c ****         "21 - Current lookup:", "22 - Date of maintenance [D/M/Y]:", "23 - Rest position:", "24 - R
1086:..\src/command_processing.c ****         "25 - Rest vel closure (ticks/sec):", "26 - Rest position enabled:", "27 - EMG inversion:",
1087:..\src/command_processing.c ****         "29 - Enable IMUs:", "30 - Read Expansion port:", "31 - Reset counters:", "32 - Last checke
1088:..\src/command_processing.c ****         "33 - SPI read delay (IMU):", "34 - On board IMU conf. [a,g,m,q,t]:", "35 - User ID:", "36 
1089:..\src/command_processing.c ****         
1090:..\src/command_processing.c ****         // GENERIC PARAMS
1091:..\src/command_processing.c ****         "37 - Associated encoder line:", "38 - Driver type:", "39 - PWM rate limiter:", "40 - Not r
1092:..\src/command_processing.c ****         "41 - Enc idx used for control:", "42 - Gear params[N1, N2, I1]:", "43 - Use second motor:"
1093:..\src/command_processing.c ****         "45 - Current PID [P, I, D]:", "46 - Startup Activation:", "47 - Input mode:", "48 - Contro
1094:..\src/command_processing.c ****         "49 - Resolutions:", "50 - Measurement Offsets:", "51 - Multipliers:", "52 - Pos. limit act
1095:..\src/command_processing.c ****         "53 - Pos. limits [inf, sup]:", "54 - Max steps [neg, pos]:", "55 - Current limit:", "56 - 
1096:..\src/command_processing.c ****         "57 - Motor handle ratio:", "58 - PWM rescaling:", "59 - Current lookup:", "60 - Associated
1097:..\src/command_processing.c ****         "61 - Driver type:", "62 - PWM rate limiter:", "63 - Not reversible:", "64 - Enc idx used f
1098:..\src/command_processing.c ****         "65 - Gear params[N1, N2, I1]:", "66 - Read enc raw line 0:", "67 - Read enc raw line 1:", 
1099:..\src/command_processing.c ****         "69 - ADC channel [1-6]:", "70 - ADC channel [7-12]:", "71 - Record EMG on SD card:", "72 -
1100:..\src/command_processing.c ****         "73 - Joystick threshold:", "74 - Joystick gains:", "75 - Device type:", "76 - EMG FSM act.
1101:..\src/command_processing.c ****         "77 - Fast act.thresholds:",
1102:..\src/command_processing.c ****         
1103:..\src/command_processing.c ****                                      "78 - Wrist direction:", "79 - Slave communication active:", "
1104:..\src/command_processing.c ****         "81 - Maximum slave residual current:", "82 - Maximum pressure feedback (kPa):", "83 - Prop
1105:..\src/command_processing.c ****     };
1106:..\src/command_processing.c **** 
1107:..\src/command_processing.c ****     //Parameters menu
1108:..\src/command_processing.c ****     char spi_delay_menu[118]    = ""; 
 8561              		.loc 1 1108 0
 8562 114a 07F5AE73 		add	r3, r7, #348
 8563 114e 0022     		movs	r2, #0
 8564 1150 1A60     		str	r2, [r3]
 8565 1152 0433     		adds	r3, r3, #4
 8566 1154 7222     		movs	r2, #114
 8567 1156 0021     		movs	r1, #0
 8568 1158 1846     		mov	r0, r3
 8569 115a FFF7FEFF 		bl	memset
1109:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 8570              		.loc 1 1109 0
 8571 115e 07F5AE70 		add	r0, r7, #348
 8572 1162 6423     		movs	r3, #100
 8573 1164 0A22     		movs	r2, #10
 8574 1166 C349     		ldr	r1, .L377+4
 8575 1168 FFF7FEFF 		bl	sprintf
1110:..\src/command_processing.c **** 
1111:..\src/command_processing.c ****     char fsm_activation_mode_menu[56] = "";
 8576              		.loc 1 1111 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 199


 8577 116c 07F59273 		add	r3, r7, #292
 8578 1170 0022     		movs	r2, #0
 8579 1172 1A60     		str	r2, [r3]
 8580 1174 0433     		adds	r3, r3, #4
 8581 1176 3422     		movs	r2, #52
 8582 1178 0021     		movs	r1, #0
 8583 117a 1846     		mov	r0, r3
 8584 117c FFF7FEFF 		bl	memset
1112:..\src/command_processing.c ****     if (MEM_P->dev.dev_type == SOFTHAND_2_MOTORS){
 8585              		.loc 1 1112 0
 8586 1180 D7F88035 		ldr	r3, [r7, #1408]
 8587 1184 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 8588 1188 042B     		cmp	r3, #4
 8589 118a 10D1     		bne	.L309
1113:..\src/command_processing.c ****         sprintf(fsm_activation_mode_menu, "0 -> Fast:syn2, Slow:syn1\n1 -> Slow:syn2, Fast:syn1\n")
 8590              		.loc 1 1113 0
 8591 118c 07F59273 		add	r3, r7, #292
 8592 1190 B94A     		ldr	r2, .L377+8
 8593 1192 1C46     		mov	r4, r3
 8594 1194 1546     		mov	r5, r2
 8595 1196 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8596 1198 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8597 119a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8598 119c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8599 119e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8600 11a0 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8601 11a2 95E80300 		ldmia	r5, {r0, r1}
 8602 11a6 2060     		str	r0, [r4]
 8603 11a8 0434     		adds	r4, r4, #4
 8604 11aa 2170     		strb	r1, [r4]
 8605 11ac 0FE0     		b	.L310
 8606              	.L309:
1114:..\src/command_processing.c ****     }
1115:..\src/command_processing.c ****     else {
1116:..\src/command_processing.c ****         sprintf(fsm_activation_mode_menu, "0 -> Fast:wrist,Slow:hand\n1 -> Slow:wrist,Fast:hand\n")
 8607              		.loc 1 1116 0
 8608 11ae 07F59273 		add	r3, r7, #292
 8609 11b2 B24A     		ldr	r2, .L377+12
 8610 11b4 1C46     		mov	r4, r3
 8611 11b6 1546     		mov	r5, r2
 8612 11b8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8613 11ba 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8614 11bc 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8615 11be 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8616 11c0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8617 11c2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8618 11c4 95E80300 		ldmia	r5, {r0, r1}
 8619 11c8 2060     		str	r0, [r4]
 8620 11ca 0434     		adds	r4, r4, #4
 8621 11cc 2170     		strb	r1, [r4]
 8622              	.L310:
1117:..\src/command_processing.c ****     }
1118:..\src/command_processing.c ****     
1119:..\src/command_processing.c ****     const char* MENU_STR[NUM_OF_PARAMS_MENU] = {
 8623              		.loc 1 1119 0
 8624 11ce 07F1F403 		add	r3, r7, #244
 8625 11d2 AB4A     		ldr	r2, .L377+16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 200


 8626 11d4 1A60     		str	r2, [r3]
 8627 11d6 07F1F403 		add	r3, r7, #244
 8628 11da AA4A     		ldr	r2, .L377+20
 8629 11dc 5A60     		str	r2, [r3, #4]
 8630 11de 07F1F403 		add	r3, r7, #244
 8631 11e2 A94A     		ldr	r2, .L377+24
 8632 11e4 9A60     		str	r2, [r3, #8]
 8633 11e6 07F1F403 		add	r3, r7, #244
 8634 11ea A84A     		ldr	r2, .L377+28
 8635 11ec DA60     		str	r2, [r3, #12]
 8636 11ee 07F1F403 		add	r3, r7, #244
 8637 11f2 A74A     		ldr	r2, .L377+32
 8638 11f4 1A61     		str	r2, [r3, #16]
 8639 11f6 07F1F403 		add	r3, r7, #244
 8640 11fa A64A     		ldr	r2, .L377+36
 8641 11fc 5A61     		str	r2, [r3, #20]
 8642 11fe 07F1F403 		add	r3, r7, #244
 8643 1202 07F5AE72 		add	r2, r7, #348
 8644 1206 9A61     		str	r2, [r3, #24]
 8645 1208 07F1F403 		add	r3, r7, #244
 8646 120c A24A     		ldr	r2, .L377+40
 8647 120e DA61     		str	r2, [r3, #28]
 8648 1210 07F1F403 		add	r3, r7, #244
 8649 1214 A14A     		ldr	r2, .L377+44
 8650 1216 1A62     		str	r2, [r3, #32]
 8651 1218 07F1F403 		add	r3, r7, #244
 8652 121c A04A     		ldr	r2, .L377+48
 8653 121e 5A62     		str	r2, [r3, #36]
 8654 1220 07F1F403 		add	r3, r7, #244
 8655 1224 07F59272 		add	r2, r7, #292
 8656 1228 9A62     		str	r2, [r3, #40]
 8657 122a 07F1F403 		add	r3, r7, #244
 8658 122e 9D4A     		ldr	r2, .L377+52
 8659 1230 DA62     		str	r2, [r3, #44]
1120:..\src/command_processing.c ****         "0 -> Usb\n1 -> Handle\n2 -> EMG proportional\n3 -> EMG Integral\n4 -> EMG FCFS\n5 -> EMG F
1121:..\src/command_processing.c ****         "0 -> Position\n1 -> PWM\n2 -> Current\n3 -> Position and Current\n",                      
1122:..\src/command_processing.c ****         "0 -> Deactivate [NO]\n1 -> Activate [YES]\n",                                             
1123:..\src/command_processing.c ****         "0 -> Right\n1 -> Left\n",                                                                 
1124:..\src/command_processing.c ****         "0 -> OFF\n1 -> ON\nThe board will reset\n",                                               
1125:..\src/command_processing.c ****         "0 -> None\n1 -> SD/RTC board\n2 -> WiFi board [N/A]\n3 -> Other [N/A]\nThe board will rese
1126:..\src/command_processing.c ****         spi_delay_menu,                                                                            
1127:..\src/command_processing.c ****         "0 -> Generic user\n1 -> Maria\n2 -> Roza\nThe board will reset\n",                        
1128:..\src/command_processing.c ****         "0 -> MC33887 (Standard)\n1 -> VNH5019 (High power)\nThe board will reset\n",              
1129:..\src/command_processing.c ****         "0 -> SOFTHAND PRO\n1 -> GENERIC 2 MOTORS\n2 -> AIR CHAMBERS\n3 -> OTTOBOCK WRIST\n4 -> SOF
1130:..\src/command_processing.c ****         fsm_activation_mode_menu,                                                                  
1131:..\src/command_processing.c ****         "0 -> Close:CW, Open:CCW\n1 -> Close:CCW, Open:CW\n"                                       
1132:..\src/command_processing.c ****     };   
1133:..\src/command_processing.c ****     
1134:..\src/command_processing.c ****     uint8 NUM_MENU[32] = {3, 1, 2, 3, 3, 3, 3, 3, 3, 4, 5, 6, 3, 7, 8, 9, 3, 5, 3, 1, 2, 3, 3, 3, 9
 8660              		.loc 1 1134 0
 8661 1232 07F1D403 		add	r3, r7, #212
 8662 1236 9C4A     		ldr	r2, .L377+56
 8663 1238 1C46     		mov	r4, r3
 8664 123a 1546     		mov	r5, r2
 8665 123c 2868     		ldr	r0, [r5]	@ unaligned
 8666 123e 6968     		ldr	r1, [r5, #4]	@ unaligned
 8667 1240 AA68     		ldr	r2, [r5, #8]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 201


 8668 1242 EB68     		ldr	r3, [r5, #12]	@ unaligned
 8669 1244 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8670 1246 2869     		ldr	r0, [r5, #16]	@ unaligned
 8671 1248 6969     		ldr	r1, [r5, #20]	@ unaligned
 8672 124a AA69     		ldr	r2, [r5, #24]	@ unaligned
 8673 124c EB69     		ldr	r3, [r5, #28]	@ unaligned
 8674 124e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
1135:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET_LIST[9]  = {2, 3, 8, 11, 23, 44, 45, 50, 53};
 8675              		.loc 1 1135 0
 8676 1250 07F1C803 		add	r3, r7, #200
 8677 1254 954A     		ldr	r2, .L377+60
 8678 1256 1068     		ldr	r0, [r2]	@ unaligned
 8679 1258 5168     		ldr	r1, [r2, #4]	@ unaligned
 8680 125a 03C3     		stmia	r3!, {r0, r1}
 8681 125c 127A     		ldrb	r2, [r2, #8]
 8682 125e 1A70     		strb	r2, [r3]
1136:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET_LIST[18] = {2, 3, 5, 8, 11, 23, 24, 28, 31, 32, 38, 44, 45, 47, 50, 53, 
 8683              		.loc 1 1136 0
 8684 1260 07F1B403 		add	r3, r7, #180
 8685 1264 924A     		ldr	r2, .L377+64
 8686 1266 1C46     		mov	r4, r3
 8687 1268 1546     		mov	r5, r2
 8688 126a 2868     		ldr	r0, [r5]	@ unaligned
 8689 126c 6968     		ldr	r1, [r5, #4]	@ unaligned
 8690 126e AA68     		ldr	r2, [r5, #8]	@ unaligned
 8691 1270 EB68     		ldr	r3, [r5, #12]	@ unaligned
 8692 1272 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8693 1274 2B8A     		ldrh	r3, [r5, #16]	@ unaligned
 8694 1276 2380     		strh	r3, [r4]	@ unaligned
1137:..\src/command_processing.c ****     uint8 USER_ID_PARAM = 35;
 8695              		.loc 1 1137 0
 8696 1278 2323     		movs	r3, #35
 8697 127a 87F87B35 		strb	r3, [r7, #1403]
1138:..\src/command_processing.c **** 
1139:..\src/command_processing.c **** // Note: If a custom parameter change is needed, add to CUSTOM_PARAM_LIST, then change it
1140:..\src/command_processing.c **** // in the dedicated function set_custom_param()    
1141:..\src/command_processing.c ****     
1142:..\src/command_processing.c **** //------------------ END OF PARAMETERS VARIABLES --------------------//        
1143:..\src/command_processing.c **** 
1144:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
1145:..\src/command_processing.c ****     
1146:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS];
1147:..\src/command_processing.c ****     j = 0;
 8698              		.loc 1 1147 0
 8699 127e 0023     		movs	r3, #0
 8700 1280 87F88635 		strb	r3, [r7, #1414]
1148:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 8701              		.loc 1 1148 0
 8702 1284 0023     		movs	r3, #0
 8703 1286 87F88735 		strb	r3, [r7, #1415]
 8704 128a 21E0     		b	.L311
 8705              	.L314:
1149:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8706              		.loc 1 1149 0
 8707 128c 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 8708 1290 07F1C802 		add	r2, r7, #200
 8709 1294 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 202


 8710 1296 1A46     		mov	r2, r3
 8711 1298 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8712 129c 0133     		adds	r3, r3, #1
 8713 129e 9A42     		cmp	r2, r3
 8714 12a0 0BD1     		bne	.L312
1150:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = TRUE;
 8715              		.loc 1 1150 0
 8716 12a2 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8717 12a6 07F16002 		add	r2, r7, #96
 8718 12aa 0121     		movs	r1, #1
 8719 12ac D154     		strb	r1, [r2, r3]
1151:..\src/command_processing.c ****             j++;
 8720              		.loc 1 1151 0
 8721 12ae 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 8722 12b2 0133     		adds	r3, r3, #1
 8723 12b4 87F88635 		strb	r3, [r7, #1414]
 8724 12b8 05E0     		b	.L313
 8725              	.L312:
1152:..\src/command_processing.c ****         }
1153:..\src/command_processing.c ****         else {
1154:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = FALSE;
 8726              		.loc 1 1154 0
 8727 12ba 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8728 12be 07F16002 		add	r2, r7, #96
 8729 12c2 0021     		movs	r1, #0
 8730 12c4 D154     		strb	r1, [r2, r3]
 8731              	.L313:
1148:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8732              		.loc 1 1148 0 discriminator 2
 8733 12c6 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8734 12ca 0133     		adds	r3, r3, #1
 8735 12cc 87F88735 		strb	r3, [r7, #1415]
 8736              	.L311:
1148:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8737              		.loc 1 1148 0 is_stmt 0 discriminator 1
 8738 12d0 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8739 12d4 522B     		cmp	r3, #82
 8740 12d6 D9D9     		bls	.L314
1155:..\src/command_processing.c ****         }
1156:..\src/command_processing.c ****     }   // All parameters can be get with default settings, except the following ones
1157:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET[NUM_OF_PARAMS];
1158:..\src/command_processing.c ****     j = 0;
 8741              		.loc 1 1158 0 is_stmt 1
 8742 12d8 0023     		movs	r3, #0
 8743 12da 87F88635 		strb	r3, [r7, #1414]
1159:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 8744              		.loc 1 1159 0
 8745 12de 0023     		movs	r3, #0
 8746 12e0 87F88735 		strb	r3, [r7, #1415]
 8747 12e4 21E0     		b	.L315
 8748              	.L318:
1160:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8749              		.loc 1 1160 0
 8750 12e6 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 8751 12ea 07F1B402 		add	r2, r7, #180
 8752 12ee D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8753 12f0 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 203


 8754 12f2 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8755 12f6 0133     		adds	r3, r3, #1
 8756 12f8 9A42     		cmp	r2, r3
 8757 12fa 0BD1     		bne	.L316
1161:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = TRUE;
 8758              		.loc 1 1161 0
 8759 12fc 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8760 1300 07F10C02 		add	r2, r7, #12
 8761 1304 0121     		movs	r1, #1
 8762 1306 D154     		strb	r1, [r2, r3]
1162:..\src/command_processing.c ****             j++;
 8763              		.loc 1 1162 0
 8764 1308 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 8765 130c 0133     		adds	r3, r3, #1
 8766 130e 87F88635 		strb	r3, [r7, #1414]
 8767 1312 05E0     		b	.L317
 8768              	.L316:
1163:..\src/command_processing.c ****         }
1164:..\src/command_processing.c ****         else {
1165:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = FALSE;
 8769              		.loc 1 1165 0
 8770 1314 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8771 1318 07F10C02 		add	r2, r7, #12
 8772 131c 0021     		movs	r1, #0
 8773 131e D154     		strb	r1, [r2, r3]
 8774              	.L317:
1159:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8775              		.loc 1 1159 0 discriminator 2
 8776 1320 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8777 1324 0133     		adds	r3, r3, #1
 8778 1326 87F88735 		strb	r3, [r7, #1415]
 8779              	.L315:
1159:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8780              		.loc 1 1159 0 is_stmt 0 discriminator 1
 8781 132a 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8782 132e 522B     		cmp	r3, #82
 8783 1330 D9D9     		bls	.L318
1166:..\src/command_processing.c ****         }
1167:..\src/command_processing.c ****     }   // All parameters can be setted with default settings, except the following ones
1168:..\src/command_processing.c ****         
1169:..\src/command_processing.c ****     if (!index) {
 8784              		.loc 1 1169 0 is_stmt 1
 8785 1332 BB1D     		adds	r3, r7, #6
 8786 1334 1B88     		ldrh	r3, [r3]
 8787 1336 002B     		cmp	r3, #0
 8788 1338 17D1     		bne	.L319
1170:..\src/command_processing.c ****         // Get parameters list with relative types
1171:..\src/command_processing.c ****         get_param_list(VAR_P, TYPES, NUM_ITEMS, NUM_STRUCT, NUM_MENU, PARAMS_STR, CUSTOM_PARAM_GET,
 8789              		.loc 1 1171 0
 8790 133a 07F54874 		add	r4, r7, #800
 8791 133e 07F55D72 		add	r2, r7, #884
 8792 1342 07F57271 		add	r1, r7, #968
 8793 1346 07F21C40 		addw	r0, r7, #1052
 8794 134a 07F1F403 		add	r3, r7, #244
 8795 134e 0393     		str	r3, [sp, #12]
 8796 1350 07F16003 		add	r3, r7, #96
 8797 1354 0293     		str	r3, [sp, #8]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 204


 8798 1356 07F5EA73 		add	r3, r7, #468
 8799 135a 0193     		str	r3, [sp, #4]
 8800 135c 07F1D403 		add	r3, r7, #212
 8801 1360 0093     		str	r3, [sp]
 8802 1362 2346     		mov	r3, r4
 8803 1364 FFF7FEFF 		bl	get_param_list
1172:..\src/command_processing.c ****     }
1173:..\src/command_processing.c ****     else {
1174:..\src/command_processing.c ****         // Set specific parameter        
1175:..\src/command_processing.c ****         PARAM_IDX = index -1;       // Get right vector param index
1176:..\src/command_processing.c ****         
1177:..\src/command_processing.c ****         // Find size of data
1178:..\src/command_processing.c ****         switch (TYPES[PARAM_IDX]) {
1179:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
1180:..\src/command_processing.c ****                 sod = 1; break;
1181:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
1182:..\src/command_processing.c ****                 sod = 2; break;
1183:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
1184:..\src/command_processing.c ****                 sod = 4; break;
1185:..\src/command_processing.c ****         }   
1186:..\src/command_processing.c ****             
1187:..\src/command_processing.c ****         if (!CUSTOM_PARAM_SET[PARAM_IDX]) {
1188:..\src/command_processing.c ****             // Use default specifications for param setting
1189:..\src/command_processing.c ****             switch(TYPES[PARAM_IDX]) {
1190:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
1191:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1192:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1193:..\src/command_processing.c ****                     }
1194:..\src/command_processing.c ****                     break;                
1195:..\src/command_processing.c ****                 case TYPE_STRING:
1196:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1197:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1198:..\src/command_processing.c ****                     }
1199:..\src/command_processing.c ****                     *(VAR_P[PARAM_IDX] + i*sod) = '\0';
1200:..\src/command_processing.c ****                 break; 
1201:..\src/command_processing.c ****                 case TYPE_INT8:
1202:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1203:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
1204:..\src/command_processing.c ****                     }
1205:..\src/command_processing.c ****                     break;                    
1206:..\src/command_processing.c ****                 case TYPE_INT16:
1207:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1208:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
1209:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1210:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
1211:..\src/command_processing.c ****                         }
1212:..\src/command_processing.c ****                     }                   
1213:..\src/command_processing.c ****                     break;
1214:..\src/command_processing.c ****                 case TYPE_UINT16:
1215:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1216:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
1217:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1218:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
1219:..\src/command_processing.c ****                         }
1220:..\src/command_processing.c ****                     }
1221:..\src/command_processing.c ****                     break;
1222:..\src/command_processing.c ****                 case TYPE_INT32:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 205


1223:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1224:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
1225:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1226:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
1227:..\src/command_processing.c ****                         }
1228:..\src/command_processing.c ****                     }
1229:..\src/command_processing.c ****                     break;
1230:..\src/command_processing.c ****                 case TYPE_UINT32:
1231:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1232:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
1233:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1234:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
1235:..\src/command_processing.c ****                         }
1236:..\src/command_processing.c ****                     }
1237:..\src/command_processing.c ****                     break;
1238:..\src/command_processing.c ****                 case TYPE_FLOAT:
1239:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1240:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
1241:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1242:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
1243:..\src/command_processing.c ****                         }
1244:..\src/command_processing.c ****                     }
1245:..\src/command_processing.c ****                     break;
1246:..\src/command_processing.c ****                 default:
1247:..\src/command_processing.c ****                     break;
1248:..\src/command_processing.c ****             }
1249:..\src/command_processing.c ****         }
1250:..\src/command_processing.c ****         else {  
1251:..\src/command_processing.c ****             // Use custom specifications for param setting
1252:..\src/command_processing.c ****             set_custom_param(index);
1253:..\src/command_processing.c ****         }
1254:..\src/command_processing.c ****         
1255:..\src/command_processing.c ****         // Store param also in user_emg structure
1256:..\src/command_processing.c ****         if (index != USER_ID_PARAM) {        // Not when changing user id
1257:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
1258:..\src/command_processing.c ****         }
1259:..\src/command_processing.c ****         
1260:..\src/command_processing.c ****         // Perform chip reset if needed
1261:..\src/command_processing.c ****         if (TYPES[PARAM_IDX] == TYPE_FLAG){
1262:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
1263:..\src/command_processing.c ****             do {
1264:..\src/command_processing.c ****                 if (TYPES[idx] == TYPE_FLAG) menu_idx++;    // Increment idx to find the right NUM_
1265:..\src/command_processing.c ****                 idx++;
1266:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
1267:..\src/command_processing.c ****             
1268:..\src/command_processing.c ****             if (NUM_MENU[menu_idx] == 5 || NUM_MENU[menu_idx] == 6 || NUM_MENU[menu_idx] == 8 || NU
1269:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
1270:..\src/command_processing.c ****             }   
1271:..\src/command_processing.c ****         }
1272:..\src/command_processing.c ****     }
1273:..\src/command_processing.c **** } 
 8804              		.loc 1 1273 0
 8805 1368 E0E2     		b	.L370
 8806              	.L319:
1175:..\src/command_processing.c ****         
 8807              		.loc 1 1175 0
 8808 136a BB1D     		adds	r3, r7, #6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 206


 8809 136c 1B88     		ldrh	r3, [r3]	@ movhi
 8810 136e DBB2     		uxtb	r3, r3
 8811 1370 013B     		subs	r3, r3, #1
 8812 1372 87F87A35 		strb	r3, [r7, #1402]
1178:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 8813              		.loc 1 1178 0
 8814 1376 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 8815 137a 07F57272 		add	r2, r7, #968
 8816 137e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8817 1380 092B     		cmp	r3, #9
 8818 1382 23D8     		bhi	.L321
 8819 1384 01A2     		adr	r2, .L323
 8820 1386 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8821 138a 00BF     		.p2align 2
 8822              	.L323:
 8823 138c B5130000 		.word	.L322+1
 8824 1390 B5130000 		.word	.L322+1
 8825 1394 B5130000 		.word	.L322+1
 8826 1398 BD130000 		.word	.L324+1
 8827 139c BD130000 		.word	.L324+1
 8828 13a0 C5130000 		.word	.L325+1
 8829 13a4 C5130000 		.word	.L325+1
 8830 13a8 C5130000 		.word	.L325+1
 8831 13ac CD130000 		.word	.L321+1
 8832 13b0 B5130000 		.word	.L322+1
 8833              		.p2align 1
 8834              	.L322:
1180:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 8835              		.loc 1 1180 0
 8836 13b4 0123     		movs	r3, #1
 8837 13b6 87F88535 		strb	r3, [r7, #1413]
 8838 13ba 07E0     		b	.L321
 8839              	.L324:
1182:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 8840              		.loc 1 1182 0
 8841 13bc 0223     		movs	r3, #2
 8842 13be 87F88535 		strb	r3, [r7, #1413]
 8843 13c2 03E0     		b	.L321
 8844              	.L325:
1184:..\src/command_processing.c ****         }   
 8845              		.loc 1 1184 0
 8846 13c4 0423     		movs	r3, #4
 8847 13c6 87F88535 		strb	r3, [r7, #1413]
 8848 13ca 00BF     		nop
 8849              	.L321:
1187:..\src/command_processing.c ****             // Use default specifications for param setting
 8850              		.loc 1 1187 0
 8851 13cc 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 8852 13d0 07F10C02 		add	r2, r7, #12
 8853 13d4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8854 13d6 002B     		cmp	r3, #0
 8855 13d8 40F03B82 		bne	.L326
1189:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
 8856              		.loc 1 1189 0
 8857 13dc 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 8858 13e0 07F57272 		add	r2, r7, #968
 8859 13e4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 207


 8860 13e6 092B     		cmp	r3, #9
 8861 13e8 00F23C82 		bhi	.L369
 8862 13ec 01A2     		adr	r2, .L329
 8863 13ee 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8864 13f2 00BF     		.p2align 2
 8865              	.L329:
 8866 13f4 1D140000 		.word	.L328+1
 8867 13f8 1B150000 		.word	.L330+1
 8868 13fc 1D140000 		.word	.L328+1
 8869 1400 6D150000 		.word	.L331+1
 8870 1404 03160000 		.word	.L332+1
 8871 1408 97160000 		.word	.L333+1
 8872 140c 2B170000 		.word	.L334+1
 8873 1410 BF170000 		.word	.L335+1
 8874 1414 65180000 		.word	.L369+1
 8875 1418 69140000 		.word	.L336+1
 8876              		.p2align 1
 8877              	.L328:
1191:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8878              		.loc 1 1191 0
 8879 141c 0023     		movs	r3, #0
 8880 141e 87F88735 		strb	r3, [r7, #1415]
 8881 1422 17E0     		b	.L337
 8882              	.L338:
1192:..\src/command_processing.c ****                     }
 8883              		.loc 1 1192 0 discriminator 3
 8884 1424 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 8885 1428 07F21C43 		addw	r3, r7, #1052
 8886 142c 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8887 1430 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 8888 1434 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 8889 1438 01FB02F2 		mul	r2, r1, r2
 8890 143c 1344     		add	r3, r3, r2
 8891 143e 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 8892 1442 0332     		adds	r2, r2, #3
 8893 1444 1B49     		ldr	r1, .L377+68
 8894 1446 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8895 1448 1A70     		strb	r2, [r3]
1191:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8896              		.loc 1 1191 0 discriminator 3
 8897 144a 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8898 144e 0133     		adds	r3, r3, #1
 8899 1450 87F88735 		strb	r3, [r7, #1415]
 8900              	.L337:
1191:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8901              		.loc 1 1191 0 is_stmt 0 discriminator 1
 8902 1454 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 8903 1458 07F55D72 		add	r2, r7, #884
 8904 145c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8905 145e 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 8906 1462 9A42     		cmp	r2, r3
 8907 1464 DED3     		bcc	.L338
1194:..\src/command_processing.c ****                 case TYPE_STRING:
 8908              		.loc 1 1194 0 is_stmt 1
 8909 1466 FEE1     		b	.L364
 8910              	.L336:
1196:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 208


 8911              		.loc 1 1196 0
 8912 1468 0023     		movs	r3, #0
 8913 146a 87F88735 		strb	r3, [r7, #1415]
 8914 146e 3BE0     		b	.L340
 8915              	.L378:
 8916              		.align	2
 8917              	.L377:
 8918 1470 0C0F0000 		.word	.LC128
 8919 1474 74020000 		.word	.LC129
 8920 1478 E8020000 		.word	.LC130
 8921 147c 20030000 		.word	.LC131
 8922 1480 58030000 		.word	.LC132
 8923 1484 E4030000 		.word	.LC133
 8924 1488 24040000 		.word	.LC134
 8925 148c 50040000 		.word	.LC135
 8926 1490 68040000 		.word	.LC136
 8927 1494 90040000 		.word	.LC137
 8928 1498 EC040000 		.word	.LC138
 8929 149c 2C050000 		.word	.LC139
 8930 14a0 74050000 		.word	.LC140
 8931 14a4 F0050000 		.word	.LC141
 8932 14a8 58100000 		.word	.LC85
 8933 14ac 78100000 		.word	.LC86
 8934 14b0 84100000 		.word	.LC87
 8935 14b4 00000000 		.word	g_rx
 8936              	.L341:
1197:..\src/command_processing.c ****                     }
 8937              		.loc 1 1197 0 discriminator 3
 8938 14b8 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 8939 14bc 07F21C43 		addw	r3, r7, #1052
 8940 14c0 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8941 14c4 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 8942 14c8 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 8943 14cc 01FB02F2 		mul	r2, r1, r2
 8944 14d0 1344     		add	r3, r3, r2
 8945 14d2 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 8946 14d6 0332     		adds	r2, r2, #3
 8947 14d8 E149     		ldr	r1, .L379
 8948 14da 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8949 14dc 1A70     		strb	r2, [r3]
1196:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8950              		.loc 1 1196 0 discriminator 3
 8951 14de 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8952 14e2 0133     		adds	r3, r3, #1
 8953 14e4 87F88735 		strb	r3, [r7, #1415]
 8954              	.L340:
1196:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8955              		.loc 1 1196 0 is_stmt 0 discriminator 1
 8956 14e8 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 8957 14ec 07F55D72 		add	r2, r7, #884
 8958 14f0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8959 14f2 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 8960 14f6 9A42     		cmp	r2, r3
 8961 14f8 DED3     		bcc	.L341
1199:..\src/command_processing.c ****                 break; 
 8962              		.loc 1 1199 0 is_stmt 1
 8963 14fa 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 209


 8964 14fe 07F21C43 		addw	r3, r7, #1052
 8965 1502 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8966 1506 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 8967 150a 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 8968 150e 01FB02F2 		mul	r2, r1, r2
 8969 1512 1344     		add	r3, r3, r2
 8970 1514 0022     		movs	r2, #0
 8971 1516 1A70     		strb	r2, [r3]
1200:..\src/command_processing.c ****                 case TYPE_INT8:
 8972              		.loc 1 1200 0
 8973 1518 A5E1     		b	.L364
 8974              	.L330:
1202:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 8975              		.loc 1 1202 0
 8976 151a 0023     		movs	r3, #0
 8977 151c 87F88735 		strb	r3, [r7, #1415]
 8978 1520 1AE0     		b	.L342
 8979              	.L343:
1203:..\src/command_processing.c ****                     }
 8980              		.loc 1 1203 0 discriminator 3
 8981 1522 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 8982 1526 07F21C43 		addw	r3, r7, #1052
 8983 152a 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8984 152e 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 8985 1532 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 8986 1536 01FB02F2 		mul	r2, r1, r2
 8987 153a 1344     		add	r3, r3, r2
 8988 153c 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 8989 1540 0332     		adds	r2, r2, #3
 8990 1542 C749     		ldr	r1, .L379
 8991 1544 0A44     		add	r2, r2, r1
 8992 1546 92F90020 		ldrsb	r2, [r2]
 8993 154a D2B2     		uxtb	r2, r2
 8994 154c 1A70     		strb	r2, [r3]
1202:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 8995              		.loc 1 1202 0 discriminator 3
 8996 154e 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8997 1552 0133     		adds	r3, r3, #1
 8998 1554 87F88735 		strb	r3, [r7, #1415]
 8999              	.L342:
1202:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 9000              		.loc 1 1202 0 is_stmt 0 discriminator 1
 9001 1558 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9002 155c 07F55D72 		add	r2, r7, #884
 9003 1560 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9004 1562 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9005 1566 9A42     		cmp	r2, r3
 9006 1568 DBD3     		bcc	.L343
1205:..\src/command_processing.c ****                 case TYPE_INT16:
 9007              		.loc 1 1205 0 is_stmt 1
 9008 156a 7CE1     		b	.L364
 9009              	.L331:
1207:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 9010              		.loc 1 1207 0
 9011 156c 0023     		movs	r3, #0
 9012 156e 87F88735 		strb	r3, [r7, #1415]
 9013 1572 3CE0     		b	.L344
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 210


 9014              	.L347:
1208:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9015              		.loc 1 1208 0
 9016 1574 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9017 1578 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9018 157c 02FB03F3 		mul	r3, r2, r3
 9019 1580 0333     		adds	r3, r3, #3
 9020 1582 B74A     		ldr	r2, .L379
 9021 1584 1344     		add	r3, r3, r2
 9022 1586 B3F90030 		ldrsh	r3, [r3]
 9023 158a A7F87835 		strh	r3, [r7, #1400]	@ movhi
1209:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 9024              		.loc 1 1209 0
 9025 158e 0023     		movs	r3, #0
 9026 1590 87F88635 		strb	r3, [r7, #1414]
 9027 1594 20E0     		b	.L345
 9028              	.L346:
1210:..\src/command_processing.c ****                         }
 9029              		.loc 1 1210 0 discriminator 3
 9030 1596 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9031 159a 07F21C43 		addw	r3, r7, #1052
 9032 159e 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9033 15a2 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9034 15a6 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9035 15aa 01FB03F3 		mul	r3, r1, r3
 9036 15ae 1846     		mov	r0, r3
 9037 15b0 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9038 15b4 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9039 15b8 CB1A     		subs	r3, r1, r3
 9040 15ba 0344     		add	r3, r3, r0
 9041 15bc 013B     		subs	r3, r3, #1
 9042 15be 1344     		add	r3, r3, r2
 9043 15c0 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9044 15c4 07F5AF61 		add	r1, r7, #1400
 9045 15c8 0A44     		add	r2, r2, r1
 9046 15ca 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9047 15cc 1A70     		strb	r2, [r3]
1209:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 9048              		.loc 1 1209 0 discriminator 3
 9049 15ce 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9050 15d2 0133     		adds	r3, r3, #1
 9051 15d4 87F88635 		strb	r3, [r7, #1414]
 9052              	.L345:
1209:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 9053              		.loc 1 1209 0 is_stmt 0 discriminator 1
 9054 15d8 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9055 15dc 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9056 15e0 9A42     		cmp	r2, r3
 9057 15e2 D8D3     		bcc	.L346
1207:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 9058              		.loc 1 1207 0 is_stmt 1 discriminator 2
 9059 15e4 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9060 15e8 0133     		adds	r3, r3, #1
 9061 15ea 87F88735 		strb	r3, [r7, #1415]
 9062              	.L344:
1207:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 9063              		.loc 1 1207 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 211


 9064 15ee 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9065 15f2 07F55D72 		add	r2, r7, #884
 9066 15f6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9067 15f8 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9068 15fc 9A42     		cmp	r2, r3
 9069 15fe B9D3     		bcc	.L347
1213:..\src/command_processing.c ****                 case TYPE_UINT16:
 9070              		.loc 1 1213 0 is_stmt 1
 9071 1600 31E1     		b	.L364
 9072              	.L332:
1215:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 9073              		.loc 1 1215 0
 9074 1602 0023     		movs	r3, #0
 9075 1604 87F88735 		strb	r3, [r7, #1415]
 9076 1608 3BE0     		b	.L348
 9077              	.L351:
1216:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9078              		.loc 1 1216 0
 9079 160a 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9080 160e 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9081 1612 02FB03F3 		mul	r3, r2, r3
 9082 1616 0333     		adds	r3, r3, #3
 9083 1618 914A     		ldr	r2, .L379
 9084 161a 1344     		add	r3, r3, r2
 9085 161c 1B88     		ldrh	r3, [r3]
 9086 161e A7F87635 		strh	r3, [r7, #1398]	@ movhi
1217:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 9087              		.loc 1 1217 0
 9088 1622 0023     		movs	r3, #0
 9089 1624 87F88635 		strb	r3, [r7, #1414]
 9090 1628 20E0     		b	.L349
 9091              	.L350:
1218:..\src/command_processing.c ****                         }
 9092              		.loc 1 1218 0 discriminator 3
 9093 162a 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9094 162e 07F21C43 		addw	r3, r7, #1052
 9095 1632 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9096 1636 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9097 163a 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9098 163e 01FB03F3 		mul	r3, r1, r3
 9099 1642 1846     		mov	r0, r3
 9100 1644 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9101 1648 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9102 164c CB1A     		subs	r3, r1, r3
 9103 164e 0344     		add	r3, r3, r0
 9104 1650 013B     		subs	r3, r3, #1
 9105 1652 1344     		add	r3, r3, r2
 9106 1654 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9107 1658 07F27651 		addw	r1, r7, #1398
 9108 165c 0A44     		add	r2, r2, r1
 9109 165e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9110 1660 1A70     		strb	r2, [r3]
1217:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 9111              		.loc 1 1217 0 discriminator 3
 9112 1662 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9113 1666 0133     		adds	r3, r3, #1
 9114 1668 87F88635 		strb	r3, [r7, #1414]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 212


 9115              	.L349:
1217:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 9116              		.loc 1 1217 0 is_stmt 0 discriminator 1
 9117 166c 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9118 1670 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9119 1674 9A42     		cmp	r2, r3
 9120 1676 D8D3     		bcc	.L350
1215:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 9121              		.loc 1 1215 0 is_stmt 1 discriminator 2
 9122 1678 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9123 167c 0133     		adds	r3, r3, #1
 9124 167e 87F88735 		strb	r3, [r7, #1415]
 9125              	.L348:
1215:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 9126              		.loc 1 1215 0 is_stmt 0 discriminator 1
 9127 1682 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9128 1686 07F55D72 		add	r2, r7, #884
 9129 168a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9130 168c 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9131 1690 9A42     		cmp	r2, r3
 9132 1692 BAD3     		bcc	.L351
1221:..\src/command_processing.c ****                 case TYPE_INT32:
 9133              		.loc 1 1221 0 is_stmt 1
 9134 1694 E7E0     		b	.L364
 9135              	.L333:
1223:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 9136              		.loc 1 1223 0
 9137 1696 0023     		movs	r3, #0
 9138 1698 87F88735 		strb	r3, [r7, #1415]
 9139 169c 3BE0     		b	.L352
 9140              	.L355:
1224:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9141              		.loc 1 1224 0
 9142 169e 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9143 16a2 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9144 16a6 02FB03F3 		mul	r3, r2, r3
 9145 16aa 0333     		adds	r3, r3, #3
 9146 16ac 6C4A     		ldr	r2, .L379
 9147 16ae 1344     		add	r3, r3, r2
 9148 16b0 1B68     		ldr	r3, [r3]
 9149 16b2 C7F87035 		str	r3, [r7, #1392]
1225:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 9150              		.loc 1 1225 0
 9151 16b6 0023     		movs	r3, #0
 9152 16b8 87F88635 		strb	r3, [r7, #1414]
 9153 16bc 20E0     		b	.L353
 9154              	.L354:
1226:..\src/command_processing.c ****                         }
 9155              		.loc 1 1226 0 discriminator 3
 9156 16be 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9157 16c2 07F21C43 		addw	r3, r7, #1052
 9158 16c6 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9159 16ca 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9160 16ce 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9161 16d2 01FB03F3 		mul	r3, r1, r3
 9162 16d6 1846     		mov	r0, r3
 9163 16d8 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 213


 9164 16dc 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9165 16e0 CB1A     		subs	r3, r1, r3
 9166 16e2 0344     		add	r3, r3, r0
 9167 16e4 013B     		subs	r3, r3, #1
 9168 16e6 1344     		add	r3, r3, r2
 9169 16e8 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9170 16ec 07F5AE61 		add	r1, r7, #1392
 9171 16f0 0A44     		add	r2, r2, r1
 9172 16f2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9173 16f4 1A70     		strb	r2, [r3]
1225:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 9174              		.loc 1 1225 0 discriminator 3
 9175 16f6 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9176 16fa 0133     		adds	r3, r3, #1
 9177 16fc 87F88635 		strb	r3, [r7, #1414]
 9178              	.L353:
1225:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 9179              		.loc 1 1225 0 is_stmt 0 discriminator 1
 9180 1700 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9181 1704 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9182 1708 9A42     		cmp	r2, r3
 9183 170a D8D3     		bcc	.L354
1223:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 9184              		.loc 1 1223 0 is_stmt 1 discriminator 2
 9185 170c 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9186 1710 0133     		adds	r3, r3, #1
 9187 1712 87F88735 		strb	r3, [r7, #1415]
 9188              	.L352:
1223:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 9189              		.loc 1 1223 0 is_stmt 0 discriminator 1
 9190 1716 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9191 171a 07F55D72 		add	r2, r7, #884
 9192 171e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9193 1720 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9194 1724 9A42     		cmp	r2, r3
 9195 1726 BAD3     		bcc	.L355
1229:..\src/command_processing.c ****                 case TYPE_UINT32:
 9196              		.loc 1 1229 0 is_stmt 1
 9197 1728 9DE0     		b	.L364
 9198              	.L334:
1231:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 9199              		.loc 1 1231 0
 9200 172a 0023     		movs	r3, #0
 9201 172c 87F88735 		strb	r3, [r7, #1415]
 9202 1730 3BE0     		b	.L356
 9203              	.L359:
1232:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9204              		.loc 1 1232 0
 9205 1732 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9206 1736 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9207 173a 02FB03F3 		mul	r3, r2, r3
 9208 173e 0333     		adds	r3, r3, #3
 9209 1740 474A     		ldr	r2, .L379
 9210 1742 1344     		add	r3, r3, r2
 9211 1744 1B68     		ldr	r3, [r3]
 9212 1746 C7F86C35 		str	r3, [r7, #1388]
1233:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 214


 9213              		.loc 1 1233 0
 9214 174a 0023     		movs	r3, #0
 9215 174c 87F88635 		strb	r3, [r7, #1414]
 9216 1750 20E0     		b	.L357
 9217              	.L358:
1234:..\src/command_processing.c ****                         }
 9218              		.loc 1 1234 0 discriminator 3
 9219 1752 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9220 1756 07F21C43 		addw	r3, r7, #1052
 9221 175a 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9222 175e 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9223 1762 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9224 1766 01FB03F3 		mul	r3, r1, r3
 9225 176a 1846     		mov	r0, r3
 9226 176c 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9227 1770 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9228 1774 CB1A     		subs	r3, r1, r3
 9229 1776 0344     		add	r3, r3, r0
 9230 1778 013B     		subs	r3, r3, #1
 9231 177a 1344     		add	r3, r3, r2
 9232 177c 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9233 1780 07F26C51 		addw	r1, r7, #1388
 9234 1784 0A44     		add	r2, r2, r1
 9235 1786 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9236 1788 1A70     		strb	r2, [r3]
1233:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 9237              		.loc 1 1233 0 discriminator 3
 9238 178a 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9239 178e 0133     		adds	r3, r3, #1
 9240 1790 87F88635 		strb	r3, [r7, #1414]
 9241              	.L357:
1233:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 9242              		.loc 1 1233 0 is_stmt 0 discriminator 1
 9243 1794 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9244 1798 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9245 179c 9A42     		cmp	r2, r3
 9246 179e D8D3     		bcc	.L358
1231:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 9247              		.loc 1 1231 0 is_stmt 1 discriminator 2
 9248 17a0 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9249 17a4 0133     		adds	r3, r3, #1
 9250 17a6 87F88735 		strb	r3, [r7, #1415]
 9251              	.L356:
1231:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 9252              		.loc 1 1231 0 is_stmt 0 discriminator 1
 9253 17aa 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9254 17ae 07F55D72 		add	r2, r7, #884
 9255 17b2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9256 17b4 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9257 17b8 9A42     		cmp	r2, r3
 9258 17ba BAD3     		bcc	.L359
1237:..\src/command_processing.c ****                 case TYPE_FLOAT:
 9259              		.loc 1 1237 0 is_stmt 1
 9260 17bc 53E0     		b	.L364
 9261              	.L335:
1239:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 9262              		.loc 1 1239 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 215


 9263 17be 0023     		movs	r3, #0
 9264 17c0 87F88735 		strb	r3, [r7, #1415]
 9265 17c4 3BE0     		b	.L360
 9266              	.L363:
1240:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9267              		.loc 1 1240 0
 9268 17c6 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9269 17ca 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9270 17ce 02FB03F3 		mul	r3, r2, r3
 9271 17d2 0333     		adds	r3, r3, #3
 9272 17d4 224A     		ldr	r2, .L379
 9273 17d6 1344     		add	r3, r3, r2
 9274 17d8 1B68     		ldr	r3, [r3]	@ float
 9275 17da C7F86835 		str	r3, [r7, #1384]	@ float
1241:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 9276              		.loc 1 1241 0
 9277 17de 0023     		movs	r3, #0
 9278 17e0 87F88635 		strb	r3, [r7, #1414]
 9279 17e4 20E0     		b	.L361
 9280              	.L362:
1242:..\src/command_processing.c ****                         }
 9281              		.loc 1 1242 0 discriminator 3
 9282 17e6 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9283 17ea 07F21C43 		addw	r3, r7, #1052
 9284 17ee 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9285 17f2 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9286 17f6 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9287 17fa 01FB03F3 		mul	r3, r1, r3
 9288 17fe 1846     		mov	r0, r3
 9289 1800 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9290 1804 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9291 1808 CB1A     		subs	r3, r1, r3
 9292 180a 0344     		add	r3, r3, r0
 9293 180c 013B     		subs	r3, r3, #1
 9294 180e 1344     		add	r3, r3, r2
 9295 1810 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9296 1814 07F5AD61 		add	r1, r7, #1384
 9297 1818 0A44     		add	r2, r2, r1
 9298 181a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9299 181c 1A70     		strb	r2, [r3]
1241:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 9300              		.loc 1 1241 0 discriminator 3
 9301 181e 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9302 1822 0133     		adds	r3, r3, #1
 9303 1824 87F88635 		strb	r3, [r7, #1414]
 9304              	.L361:
1241:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 9305              		.loc 1 1241 0 is_stmt 0 discriminator 1
 9306 1828 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9307 182c 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9308 1830 9A42     		cmp	r2, r3
 9309 1832 D8D3     		bcc	.L362
1239:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 9310              		.loc 1 1239 0 is_stmt 1 discriminator 2
 9311 1834 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9312 1838 0133     		adds	r3, r3, #1
 9313 183a 87F88735 		strb	r3, [r7, #1415]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 216


 9314              	.L360:
1239:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 9315              		.loc 1 1239 0 is_stmt 0 discriminator 1
 9316 183e 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9317 1842 07F55D72 		add	r2, r7, #884
 9318 1846 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9319 1848 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9320 184c 9A42     		cmp	r2, r3
 9321 184e BAD3     		bcc	.L363
1245:..\src/command_processing.c ****                 default:
 9322              		.loc 1 1245 0 is_stmt 1
 9323 1850 09E0     		b	.L364
 9324              	.L326:
1252:..\src/command_processing.c ****         }
 9325              		.loc 1 1252 0
 9326 1852 BB1D     		adds	r3, r7, #6
 9327 1854 1B88     		ldrh	r3, [r3]
 9328 1856 1846     		mov	r0, r3
 9329 1858 FFF7FEFF 		bl	set_custom_param
 9330 185c 03E0     		b	.L364
 9331              	.L380:
 9332 185e 00BF     		.align	2
 9333              	.L379:
 9334 1860 00000000 		.word	g_rx
 9335              	.L369:
1247:..\src/command_processing.c ****             }
 9336              		.loc 1 1247 0
 9337 1864 00BF     		nop
 9338              	.L364:
1256:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
 9339              		.loc 1 1256 0
 9340 1866 97F87B35 		ldrb	r3, [r7, #1403]	@ zero_extendqisi2
 9341 186a 9BB2     		uxth	r3, r3
 9342 186c BA1D     		adds	r2, r7, #6
 9343 186e 1288     		ldrh	r2, [r2]
 9344 1870 9A42     		cmp	r2, r3
 9345 1872 11D0     		beq	.L365
1257:..\src/command_processing.c ****         }
 9346              		.loc 1 1257 0
 9347 1874 D7F88035 		ldr	r3, [r7, #1408]
 9348 1878 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 9349 187c 5B01     		lsls	r3, r3, #5
 9350 187e 03F51273 		add	r3, r3, #584
 9351 1882 D7F88025 		ldr	r2, [r7, #1408]
 9352 1886 D018     		adds	r0, r2, r3
 9353 1888 D7F88035 		ldr	r3, [r7, #1408]
 9354 188c 03F5F873 		add	r3, r3, #496
 9355 1890 1022     		movs	r2, #16
 9356 1892 1946     		mov	r1, r3
 9357 1894 FFF7FEFF 		bl	memcpy
 9358              	.L365:
1261:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
 9359              		.loc 1 1261 0
 9360 1898 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9361 189c 07F57272 		add	r2, r7, #968
 9362 18a0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9363 18a2 002B     		cmp	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 217


 9364 18a4 42D1     		bne	.L370
 9365              	.LBB18:
1262:..\src/command_processing.c ****             do {
 9366              		.loc 1 1262 0
 9367 18a6 0023     		movs	r3, #0
 9368 18a8 87F87F35 		strb	r3, [r7, #1407]
 9369 18ac FF23     		movs	r3, #255
 9370 18ae 87F87E35 		strb	r3, [r7, #1406]
 9371              	.L367:
1264:..\src/command_processing.c ****                 idx++;
 9372              		.loc 1 1264 0
 9373 18b2 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 9374 18b6 07F57272 		add	r2, r7, #968
 9375 18ba D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9376 18bc 002B     		cmp	r3, #0
 9377 18be 04D1     		bne	.L366
1264:..\src/command_processing.c ****                 idx++;
 9378              		.loc 1 1264 0 is_stmt 0 discriminator 1
 9379 18c0 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9380 18c4 0133     		adds	r3, r3, #1
 9381 18c6 87F87E35 		strb	r3, [r7, #1406]
 9382              	.L366:
1265:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
 9383              		.loc 1 1265 0 is_stmt 1
 9384 18ca 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 9385 18ce 0133     		adds	r3, r3, #1
 9386 18d0 87F87F35 		strb	r3, [r7, #1407]
1266:..\src/command_processing.c ****             
 9387              		.loc 1 1266 0
 9388 18d4 97F87F25 		ldrb	r2, [r7, #1407]	@ zero_extendqisi2
 9389 18d8 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9390 18dc 9A42     		cmp	r2, r3
 9391 18de E8D9     		bls	.L367
1268:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9392              		.loc 1 1268 0
 9393 18e0 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9394 18e4 07F1D402 		add	r2, r7, #212
 9395 18e8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9396 18ea 052B     		cmp	r3, #5
 9397 18ec 1BD0     		beq	.L368
1268:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9398              		.loc 1 1268 0 is_stmt 0 discriminator 1
 9399 18ee 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9400 18f2 07F1D402 		add	r2, r7, #212
 9401 18f6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9402 18f8 062B     		cmp	r3, #6
 9403 18fa 14D0     		beq	.L368
1268:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9404              		.loc 1 1268 0 discriminator 2
 9405 18fc 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9406 1900 07F1D402 		add	r2, r7, #212
 9407 1904 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9408 1906 082B     		cmp	r3, #8
 9409 1908 0DD0     		beq	.L368
1268:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9410              		.loc 1 1268 0 discriminator 3
 9411 190a 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 218


 9412 190e 07F1D402 		add	r2, r7, #212
 9413 1912 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9414 1914 092B     		cmp	r3, #9
 9415 1916 06D0     		beq	.L368
1268:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9416              		.loc 1 1268 0 discriminator 4
 9417 1918 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9418 191c 07F1D402 		add	r2, r7, #212
 9419 1920 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9420 1922 0A2B     		cmp	r3, #10
 9421 1924 02D1     		bne	.L370
 9422              	.L368:
1269:..\src/command_processing.c ****             }   
 9423              		.loc 1 1269 0 is_stmt 1
 9424 1926 044B     		ldr	r3, .L381
 9425 1928 0122     		movs	r2, #1
 9426 192a 1A70     		strb	r2, [r3]
 9427              	.L370:
 9428              	.LBE18:
 9429              		.loc 1 1273 0
 9430 192c 00BF     		nop
 9431 192e 07F5B167 		add	r7, r7, #1416
 9432              		.cfi_def_cfa_offset 16
 9433 1932 BD46     		mov	sp, r7
 9434              		.cfi_def_cfa_register 13
 9435              		@ sp needed
 9436 1934 B0BD     		pop	{r4, r5, r7, pc}
 9437              	.L382:
 9438 1936 00BF     		.align	2
 9439              	.L381:
 9440 1938 00000000 		.word	reset_PSoC_flag
 9441              		.cfi_endproc
 9442              	.LFE68:
 9443              		.size	manage_param_list, .-manage_param_list
 9444              		.global	__aeabi_fmul
 9445              		.global	__aeabi_f2iz
 9446              		.section	.text.set_custom_param,"ax",%progbits
 9447              		.align	2
 9448              		.global	set_custom_param
 9449              		.thumb
 9450              		.thumb_func
 9451              		.type	set_custom_param, %function
 9452              	set_custom_param:
 9453              	.LFB69:
1274:..\src/command_processing.c **** 
1275:..\src/command_processing.c **** //==============================================================================
1276:..\src/command_processing.c **** //                                                              SET CUSTOM PARAM
1277:..\src/command_processing.c **** //==============================================================================
1278:..\src/command_processing.c **** 
1279:..\src/command_processing.c **** void set_custom_param(uint16 index) {
 9454              		.loc 1 1279 0
 9455              		.cfi_startproc
 9456              		@ args = 0, pretend = 0, frame = 24
 9457              		@ frame_needed = 1, uses_anonymous_args = 0
 9458 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 9459              		.cfi_def_cfa_offset 20
 9460              		.cfi_offset 4, -20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 219


 9461              		.cfi_offset 5, -16
 9462              		.cfi_offset 6, -12
 9463              		.cfi_offset 7, -8
 9464              		.cfi_offset 14, -4
 9465 0002 87B0     		sub	sp, sp, #28
 9466              		.cfi_def_cfa_offset 48
 9467 0004 00AF     		add	r7, sp, #0
 9468              		.cfi_def_cfa_register 7
 9469 0006 0346     		mov	r3, r0
 9470 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1280:..\src/command_processing.c **** 
1281:..\src/command_processing.c ****     uint8 CYDATA i, j;
1282:..\src/command_processing.c ****     uint8 aux_uchar;
1283:..\src/command_processing.c ****     float aux_float, aux_float2;
1284:..\src/command_processing.c **** 
1285:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 9471              		.loc 1 1285 0
 9472 000a 0023     		movs	r3, #0
 9473 000c 3B75     		strb	r3, [r7, #20]
1286:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 9474              		.loc 1 1286 0
 9475 000e 0123     		movs	r3, #1
 9476 0010 FB74     		strb	r3, [r7, #19]
1287:..\src/command_processing.c ****     
1288:..\src/command_processing.c ****     switch(index){
 9477              		.loc 1 1288 0
 9478 0012 FB88     		ldrh	r3, [r7, #6]
 9479 0014 023B     		subs	r3, r3, #2
 9480 0016 492B     		cmp	r3, #73
 9481 0018 01F26682 		bhi	.L478
 9482 001c 01A2     		adr	r2, .L386
 9483 001e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 9484 0022 00BF     		.p2align 2
 9485              	.L386:
 9486 0024 4D010000 		.word	.L385+1
 9487 0028 7F030000 		.word	.L387+1
 9488 002c E9140000 		.word	.L478+1
 9489 0030 C5050000 		.word	.L388+1
 9490 0034 E9140000 		.word	.L478+1
 9491 0038 E9140000 		.word	.L478+1
 9492 003c 0F060000 		.word	.L389+1
 9493 0040 E9140000 		.word	.L478+1
 9494 0044 E9140000 		.word	.L478+1
 9495 0048 49070000 		.word	.L390+1
 9496 004c E9140000 		.word	.L478+1
 9497 0050 E9140000 		.word	.L478+1
 9498 0054 E9140000 		.word	.L478+1
 9499 0058 E9140000 		.word	.L478+1
 9500 005c E9140000 		.word	.L478+1
 9501 0060 E9140000 		.word	.L478+1
 9502 0064 E9140000 		.word	.L478+1
 9503 0068 E9140000 		.word	.L478+1
 9504 006c E9140000 		.word	.L478+1
 9505 0070 E9140000 		.word	.L478+1
 9506 0074 E9140000 		.word	.L478+1
 9507 0078 49080000 		.word	.L391+1
 9508 007c A7080000 		.word	.L392+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 220


 9509 0080 E9140000 		.word	.L478+1
 9510 0084 E9140000 		.word	.L478+1
 9511 0088 E9140000 		.word	.L478+1
 9512 008c E1080000 		.word	.L393+1
 9513 0090 E9140000 		.word	.L478+1
 9514 0094 E9140000 		.word	.L478+1
 9515 0098 5D0A0000 		.word	.L394+1
 9516 009c 090B0000 		.word	.L395+1
 9517 00a0 E9140000 		.word	.L478+1
 9518 00a4 E9140000 		.word	.L478+1
 9519 00a8 E9140000 		.word	.L478+1
 9520 00ac E9140000 		.word	.L478+1
 9521 00b0 E9140000 		.word	.L478+1
 9522 00b4 430B0000 		.word	.L396+1
 9523 00b8 E9140000 		.word	.L478+1
 9524 00bc E9140000 		.word	.L478+1
 9525 00c0 E9140000 		.word	.L478+1
 9526 00c4 E9140000 		.word	.L478+1
 9527 00c8 E9140000 		.word	.L478+1
 9528 00cc 7D0B0000 		.word	.L397+1
 9529 00d0 C70D0000 		.word	.L398+1
 9530 00d4 E9140000 		.word	.L478+1
 9531 00d8 F50F0000 		.word	.L399+1
 9532 00dc E9140000 		.word	.L478+1
 9533 00e0 E9140000 		.word	.L478+1
 9534 00e4 5D100000 		.word	.L400+1
 9535 00e8 E9140000 		.word	.L478+1
 9536 00ec E9140000 		.word	.L478+1
 9537 00f0 73110000 		.word	.L401+1
 9538 00f4 E9140000 		.word	.L478+1
 9539 00f8 E9140000 		.word	.L478+1
 9540 00fc E9140000 		.word	.L478+1
 9541 0100 E9140000 		.word	.L478+1
 9542 0104 E9140000 		.word	.L478+1
 9543 0108 E9140000 		.word	.L478+1
 9544 010c E9140000 		.word	.L478+1
 9545 0110 71120000 		.word	.L402+1
 9546 0114 E9140000 		.word	.L478+1
 9547 0118 E9140000 		.word	.L478+1
 9548 011c E9140000 		.word	.L478+1
 9549 0120 E9140000 		.word	.L478+1
 9550 0124 E9140000 		.word	.L478+1
 9551 0128 E9140000 		.word	.L478+1
 9552 012c E9140000 		.word	.L478+1
 9553 0130 E9140000 		.word	.L478+1
 9554 0134 E9140000 		.word	.L478+1
 9555 0138 E9140000 		.word	.L478+1
 9556 013c E9140000 		.word	.L478+1
 9557 0140 E9140000 		.word	.L478+1
 9558 0144 E9140000 		.word	.L478+1
 9559 0148 B9120000 		.word	.L403+1
 9560              		.p2align 1
 9561              	.L385:
1289:..\src/command_processing.c ****         case 2:         // Position PID
1290:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 9562              		.loc 1 1290 0
 9563 014c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 221


 9564 014e AB49     		ldr	r1, .L484
 9565 0150 1346     		mov	r3, r2
 9566 0152 DB00     		lsls	r3, r3, #3
 9567 0154 9B1A     		subs	r3, r3, r2
 9568 0156 1B01     		lsls	r3, r3, #4
 9569 0158 0B44     		add	r3, r3, r1
 9570 015a 03F20F13 		addw	r3, r3, #271
 9571 015e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9572 0160 032B     		cmp	r3, #3
 9573 0162 00F08680 		beq	.L404
1291:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 9574              		.loc 1 1291 0
 9575 0166 A64B     		ldr	r3, .L484+4
 9576 0168 1B68     		ldr	r3, [r3]	@ float
 9577 016a FB60     		str	r3, [r7, #12]	@ float
1292:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9578              		.loc 1 1292 0
 9579 016c 0023     		movs	r3, #0
 9580 016e BB75     		strb	r3, [r7, #22]
 9581 0170 0EE0     		b	.L405
 9582              	.L406:
1293:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9583              		.loc 1 1293 0 discriminator 3
 9584 0172 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9585 0174 C3F10303 		rsb	r3, r3, #3
 9586 0178 07F10802 		add	r2, r7, #8
 9587 017c 1344     		add	r3, r3, r2
 9588 017e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9589 0180 07F10C01 		add	r1, r7, #12
 9590 0184 0A44     		add	r2, r2, r1
 9591 0186 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9592 0188 1A70     		strb	r2, [r3]
1292:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9593              		.loc 1 1292 0 discriminator 3
 9594 018a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9595 018c 0133     		adds	r3, r3, #1
 9596 018e BB75     		strb	r3, [r7, #22]
 9597              	.L405:
1292:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9598              		.loc 1 1292 0 is_stmt 0 discriminator 1
 9599 0190 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9600 0192 032B     		cmp	r3, #3
 9601 0194 EDD9     		bls	.L406
1294:..\src/command_processing.c ****                 }
1295:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p = aux_float2 * 65536;
 9602              		.loc 1 1295 0 is_stmt 1
 9603 0196 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9604 0198 BB68     		ldr	r3, [r7, #8]	@ float
 9605 019a 4FF08F41 		mov	r1, #1199570944
 9606 019e 1846     		mov	r0, r3
 9607 01a0 FFF7FEFF 		bl	__aeabi_fmul
 9608 01a4 0346     		mov	r3, r0
 9609 01a6 1846     		mov	r0, r3
 9610 01a8 FFF7FEFF 		bl	__aeabi_f2iz
 9611 01ac 0146     		mov	r1, r0
 9612 01ae 954A     		ldr	r2, .L484+8
 9613 01b0 2346     		mov	r3, r4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 222


 9614 01b2 DB00     		lsls	r3, r3, #3
 9615 01b4 1B1B     		subs	r3, r3, r4
 9616 01b6 1B01     		lsls	r3, r3, #4
 9617 01b8 1344     		add	r3, r3, r2
 9618 01ba B033     		adds	r3, r3, #176
 9619 01bc 1960     		str	r1, [r3]
1296:..\src/command_processing.c ****                 
1297:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 9620              		.loc 1 1297 0
 9621 01be 924B     		ldr	r3, .L484+12
 9622 01c0 1B68     		ldr	r3, [r3]	@ float
 9623 01c2 FB60     		str	r3, [r7, #12]	@ float
1298:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9624              		.loc 1 1298 0
 9625 01c4 0023     		movs	r3, #0
 9626 01c6 BB75     		strb	r3, [r7, #22]
 9627 01c8 0EE0     		b	.L407
 9628              	.L408:
1299:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9629              		.loc 1 1299 0 discriminator 3
 9630 01ca BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9631 01cc C3F10303 		rsb	r3, r3, #3
 9632 01d0 07F10802 		add	r2, r7, #8
 9633 01d4 1344     		add	r3, r3, r2
 9634 01d6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9635 01d8 07F10C01 		add	r1, r7, #12
 9636 01dc 0A44     		add	r2, r2, r1
 9637 01de 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9638 01e0 1A70     		strb	r2, [r3]
1298:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9639              		.loc 1 1298 0 discriminator 3
 9640 01e2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9641 01e4 0133     		adds	r3, r3, #1
 9642 01e6 BB75     		strb	r3, [r7, #22]
 9643              	.L407:
1298:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9644              		.loc 1 1298 0 is_stmt 0 discriminator 1
 9645 01e8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9646 01ea 032B     		cmp	r3, #3
 9647 01ec EDD9     		bls	.L408
1300:..\src/command_processing.c ****                 }
1301:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i = aux_float2 * 65536;
 9648              		.loc 1 1301 0 is_stmt 1
 9649 01ee 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9650 01f0 BB68     		ldr	r3, [r7, #8]	@ float
 9651 01f2 4FF08F41 		mov	r1, #1199570944
 9652 01f6 1846     		mov	r0, r3
 9653 01f8 FFF7FEFF 		bl	__aeabi_fmul
 9654 01fc 0346     		mov	r3, r0
 9655 01fe 1846     		mov	r0, r3
 9656 0200 FFF7FEFF 		bl	__aeabi_f2iz
 9657 0204 0146     		mov	r1, r0
 9658 0206 7F4A     		ldr	r2, .L484+8
 9659 0208 2346     		mov	r3, r4
 9660 020a DB00     		lsls	r3, r3, #3
 9661 020c 1B1B     		subs	r3, r3, r4
 9662 020e 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 223


 9663 0210 1344     		add	r3, r3, r2
 9664 0212 B433     		adds	r3, r3, #180
 9665 0214 1960     		str	r1, [r3]
1302:..\src/command_processing.c ****                 
1303:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 9666              		.loc 1 1303 0
 9667 0216 7D4B     		ldr	r3, .L484+16
 9668 0218 1B68     		ldr	r3, [r3]	@ float
 9669 021a FB60     		str	r3, [r7, #12]	@ float
1304:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9670              		.loc 1 1304 0
 9671 021c 0023     		movs	r3, #0
 9672 021e BB75     		strb	r3, [r7, #22]
 9673 0220 0EE0     		b	.L409
 9674              	.L410:
1305:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9675              		.loc 1 1305 0 discriminator 3
 9676 0222 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9677 0224 C3F10303 		rsb	r3, r3, #3
 9678 0228 07F10802 		add	r2, r7, #8
 9679 022c 1344     		add	r3, r3, r2
 9680 022e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9681 0230 07F10C01 		add	r1, r7, #12
 9682 0234 0A44     		add	r2, r2, r1
 9683 0236 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9684 0238 1A70     		strb	r2, [r3]
1304:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9685              		.loc 1 1304 0 discriminator 3
 9686 023a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9687 023c 0133     		adds	r3, r3, #1
 9688 023e BB75     		strb	r3, [r7, #22]
 9689              	.L409:
1304:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9690              		.loc 1 1304 0 is_stmt 0 discriminator 1
 9691 0240 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9692 0242 032B     		cmp	r3, #3
 9693 0244 EDD9     		bls	.L410
1306:..\src/command_processing.c ****                 }
1307:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d = aux_float2 * 65536;
 9694              		.loc 1 1307 0 is_stmt 1
 9695 0246 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9696 0248 BB68     		ldr	r3, [r7, #8]	@ float
 9697 024a 4FF08F41 		mov	r1, #1199570944
 9698 024e 1846     		mov	r0, r3
 9699 0250 FFF7FEFF 		bl	__aeabi_fmul
 9700 0254 0346     		mov	r3, r0
 9701 0256 1846     		mov	r0, r3
 9702 0258 FFF7FEFF 		bl	__aeabi_f2iz
 9703 025c 0146     		mov	r1, r0
 9704 025e 694A     		ldr	r2, .L484+8
 9705 0260 2346     		mov	r3, r4
 9706 0262 DB00     		lsls	r3, r3, #3
 9707 0264 1B1B     		subs	r3, r3, r4
 9708 0266 1B01     		lsls	r3, r3, #4
 9709 0268 1344     		add	r3, r3, r2
 9710 026a B833     		adds	r3, r3, #184
 9711 026c 1960     		str	r1, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 224


1308:..\src/command_processing.c ****             }
1309:..\src/command_processing.c ****             else {
1310:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1311:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1312:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1313:..\src/command_processing.c ****                 }
1314:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1315:..\src/command_processing.c ****                 
1316:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1317:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1318:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1319:..\src/command_processing.c ****                 }
1320:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1321:..\src/command_processing.c ****                 
1322:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1323:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1324:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1325:..\src/command_processing.c ****                 }
1326:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1327:..\src/command_processing.c ****             }
1328:..\src/command_processing.c ****             break;
 9712              		.loc 1 1328 0
 9713 026e 01F046B9 		b	.L418
 9714              	.L404:
1310:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9715              		.loc 1 1310 0
 9716 0272 634B     		ldr	r3, .L484+4
 9717 0274 1B68     		ldr	r3, [r3]	@ float
 9718 0276 FB60     		str	r3, [r7, #12]	@ float
1311:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9719              		.loc 1 1311 0
 9720 0278 0023     		movs	r3, #0
 9721 027a BB75     		strb	r3, [r7, #22]
 9722 027c 0EE0     		b	.L412
 9723              	.L413:
1312:..\src/command_processing.c ****                 }
 9724              		.loc 1 1312 0 discriminator 3
 9725 027e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9726 0280 C3F10303 		rsb	r3, r3, #3
 9727 0284 07F10802 		add	r2, r7, #8
 9728 0288 1344     		add	r3, r3, r2
 9729 028a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9730 028c 07F10C01 		add	r1, r7, #12
 9731 0290 0A44     		add	r2, r2, r1
 9732 0292 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9733 0294 1A70     		strb	r2, [r3]
1311:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9734              		.loc 1 1311 0 discriminator 3
 9735 0296 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9736 0298 0133     		adds	r3, r3, #1
 9737 029a BB75     		strb	r3, [r7, #22]
 9738              	.L412:
1311:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9739              		.loc 1 1311 0 is_stmt 0 discriminator 1
 9740 029c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9741 029e 032B     		cmp	r3, #3
 9742 02a0 EDD9     		bls	.L413
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 225


1314:..\src/command_processing.c ****                 
 9743              		.loc 1 1314 0 is_stmt 1
 9744 02a2 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9745 02a4 BB68     		ldr	r3, [r7, #8]	@ float
 9746 02a6 4FF08F41 		mov	r1, #1199570944
 9747 02aa 1846     		mov	r0, r3
 9748 02ac FFF7FEFF 		bl	__aeabi_fmul
 9749 02b0 0346     		mov	r3, r0
 9750 02b2 1846     		mov	r0, r3
 9751 02b4 FFF7FEFF 		bl	__aeabi_f2iz
 9752 02b8 0146     		mov	r1, r0
 9753 02ba 524A     		ldr	r2, .L484+8
 9754 02bc 2346     		mov	r3, r4
 9755 02be DB00     		lsls	r3, r3, #3
 9756 02c0 1B1B     		subs	r3, r3, r4
 9757 02c2 1B01     		lsls	r3, r3, #4
 9758 02c4 1344     		add	r3, r3, r2
 9759 02c6 C833     		adds	r3, r3, #200
 9760 02c8 1960     		str	r1, [r3]
1316:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9761              		.loc 1 1316 0
 9762 02ca 4F4B     		ldr	r3, .L484+12
 9763 02cc 1B68     		ldr	r3, [r3]	@ float
 9764 02ce FB60     		str	r3, [r7, #12]	@ float
1317:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9765              		.loc 1 1317 0
 9766 02d0 0023     		movs	r3, #0
 9767 02d2 BB75     		strb	r3, [r7, #22]
 9768 02d4 0EE0     		b	.L414
 9769              	.L415:
1318:..\src/command_processing.c ****                 }
 9770              		.loc 1 1318 0 discriminator 3
 9771 02d6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9772 02d8 C3F10303 		rsb	r3, r3, #3
 9773 02dc 07F10802 		add	r2, r7, #8
 9774 02e0 1344     		add	r3, r3, r2
 9775 02e2 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9776 02e4 07F10C01 		add	r1, r7, #12
 9777 02e8 0A44     		add	r2, r2, r1
 9778 02ea 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9779 02ec 1A70     		strb	r2, [r3]
1317:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9780              		.loc 1 1317 0 discriminator 3
 9781 02ee BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9782 02f0 0133     		adds	r3, r3, #1
 9783 02f2 BB75     		strb	r3, [r7, #22]
 9784              	.L414:
1317:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9785              		.loc 1 1317 0 is_stmt 0 discriminator 1
 9786 02f4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9787 02f6 032B     		cmp	r3, #3
 9788 02f8 EDD9     		bls	.L415
1320:..\src/command_processing.c ****                 
 9789              		.loc 1 1320 0 is_stmt 1
 9790 02fa 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9791 02fc BB68     		ldr	r3, [r7, #8]	@ float
 9792 02fe 4FF08F41 		mov	r1, #1199570944
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 226


 9793 0302 1846     		mov	r0, r3
 9794 0304 FFF7FEFF 		bl	__aeabi_fmul
 9795 0308 0346     		mov	r3, r0
 9796 030a 1846     		mov	r0, r3
 9797 030c FFF7FEFF 		bl	__aeabi_f2iz
 9798 0310 0146     		mov	r1, r0
 9799 0312 3C4A     		ldr	r2, .L484+8
 9800 0314 2346     		mov	r3, r4
 9801 0316 DB00     		lsls	r3, r3, #3
 9802 0318 1B1B     		subs	r3, r3, r4
 9803 031a 1B01     		lsls	r3, r3, #4
 9804 031c 1344     		add	r3, r3, r2
 9805 031e CC33     		adds	r3, r3, #204
 9806 0320 1960     		str	r1, [r3]
1322:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9807              		.loc 1 1322 0
 9808 0322 3A4B     		ldr	r3, .L484+16
 9809 0324 1B68     		ldr	r3, [r3]	@ float
 9810 0326 FB60     		str	r3, [r7, #12]	@ float
1323:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9811              		.loc 1 1323 0
 9812 0328 0023     		movs	r3, #0
 9813 032a BB75     		strb	r3, [r7, #22]
 9814 032c 0EE0     		b	.L416
 9815              	.L417:
1324:..\src/command_processing.c ****                 }
 9816              		.loc 1 1324 0 discriminator 3
 9817 032e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9818 0330 C3F10303 		rsb	r3, r3, #3
 9819 0334 07F10802 		add	r2, r7, #8
 9820 0338 1344     		add	r3, r3, r2
 9821 033a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9822 033c 07F10C01 		add	r1, r7, #12
 9823 0340 0A44     		add	r2, r2, r1
 9824 0342 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9825 0344 1A70     		strb	r2, [r3]
1323:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9826              		.loc 1 1323 0 discriminator 3
 9827 0346 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9828 0348 0133     		adds	r3, r3, #1
 9829 034a BB75     		strb	r3, [r7, #22]
 9830              	.L416:
1323:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9831              		.loc 1 1323 0 is_stmt 0 discriminator 1
 9832 034c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9833 034e 032B     		cmp	r3, #3
 9834 0350 EDD9     		bls	.L417
1326:..\src/command_processing.c ****             }
 9835              		.loc 1 1326 0 is_stmt 1
 9836 0352 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9837 0354 BB68     		ldr	r3, [r7, #8]	@ float
 9838 0356 4FF08F41 		mov	r1, #1199570944
 9839 035a 1846     		mov	r0, r3
 9840 035c FFF7FEFF 		bl	__aeabi_fmul
 9841 0360 0346     		mov	r3, r0
 9842 0362 1846     		mov	r0, r3
 9843 0364 FFF7FEFF 		bl	__aeabi_f2iz
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 227


 9844 0368 0146     		mov	r1, r0
 9845 036a 264A     		ldr	r2, .L484+8
 9846 036c 2346     		mov	r3, r4
 9847 036e DB00     		lsls	r3, r3, #3
 9848 0370 1B1B     		subs	r3, r3, r4
 9849 0372 1B01     		lsls	r3, r3, #4
 9850 0374 1344     		add	r3, r3, r2
 9851 0376 D033     		adds	r3, r3, #208
 9852 0378 1960     		str	r1, [r3]
 9853              		.loc 1 1328 0
 9854 037a 01F0C0B8 		b	.L418
 9855              	.L387:
1329:..\src/command_processing.c ****             
1330:..\src/command_processing.c ****         case 3:         //Current PID
1331:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 9856              		.loc 1 1331 0
 9857 037e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9858 0380 1E49     		ldr	r1, .L484
 9859 0382 1346     		mov	r3, r2
 9860 0384 DB00     		lsls	r3, r3, #3
 9861 0386 9B1A     		subs	r3, r3, r2
 9862 0388 1B01     		lsls	r3, r3, #4
 9863 038a 0B44     		add	r3, r3, r1
 9864 038c 03F20F13 		addw	r3, r3, #271
 9865 0390 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9866 0392 032B     		cmp	r3, #3
 9867 0394 00F09080 		beq	.L419
1332:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 9868              		.loc 1 1332 0
 9869 0398 194B     		ldr	r3, .L484+4
 9870 039a 1B68     		ldr	r3, [r3]	@ float
 9871 039c FB60     		str	r3, [r7, #12]	@ float
1333:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9872              		.loc 1 1333 0
 9873 039e 0023     		movs	r3, #0
 9874 03a0 BB75     		strb	r3, [r7, #22]
 9875 03a2 0EE0     		b	.L420
 9876              	.L421:
1334:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9877              		.loc 1 1334 0 discriminator 3
 9878 03a4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9879 03a6 C3F10303 		rsb	r3, r3, #3
 9880 03aa 07F10802 		add	r2, r7, #8
 9881 03ae 1344     		add	r3, r3, r2
 9882 03b0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9883 03b2 07F10C01 		add	r1, r7, #12
 9884 03b6 0A44     		add	r2, r2, r1
 9885 03b8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9886 03ba 1A70     		strb	r2, [r3]
1333:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9887              		.loc 1 1333 0 discriminator 3
 9888 03bc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9889 03be 0133     		adds	r3, r3, #1
 9890 03c0 BB75     		strb	r3, [r7, #22]
 9891              	.L420:
1333:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9892              		.loc 1 1333 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 228


 9893 03c2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9894 03c4 032B     		cmp	r3, #3
 9895 03c6 EDD9     		bls	.L421
1335:..\src/command_processing.c ****                 }
1336:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c = aux_float2 * 65536;
 9896              		.loc 1 1336 0 is_stmt 1
 9897 03c8 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9898 03ca BB68     		ldr	r3, [r7, #8]	@ float
 9899 03cc 4FF08F41 		mov	r1, #1199570944
 9900 03d0 1846     		mov	r0, r3
 9901 03d2 FFF7FEFF 		bl	__aeabi_fmul
 9902 03d6 0346     		mov	r3, r0
 9903 03d8 1846     		mov	r0, r3
 9904 03da FFF7FEFF 		bl	__aeabi_f2iz
 9905 03de 0146     		mov	r1, r0
 9906 03e0 084A     		ldr	r2, .L484+8
 9907 03e2 2346     		mov	r3, r4
 9908 03e4 DB00     		lsls	r3, r3, #3
 9909 03e6 1B1B     		subs	r3, r3, r4
 9910 03e8 1B01     		lsls	r3, r3, #4
 9911 03ea 1344     		add	r3, r3, r2
 9912 03ec BC33     		adds	r3, r3, #188
 9913 03ee 1960     		str	r1, [r3]
1337:..\src/command_processing.c ****                 
1338:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 9914              		.loc 1 1338 0
 9915 03f0 054B     		ldr	r3, .L484+12
 9916 03f2 1B68     		ldr	r3, [r3]	@ float
 9917 03f4 FB60     		str	r3, [r7, #12]	@ float
1339:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9918              		.loc 1 1339 0
 9919 03f6 0023     		movs	r3, #0
 9920 03f8 BB75     		strb	r3, [r7, #22]
 9921 03fa 18E0     		b	.L422
 9922              	.L485:
 9923              		.align	2
 9924              	.L484:
 9925 03fc 00000000 		.word	c_mem
 9926 0400 03000000 		.word	g_rx+3
 9927 0404 00000000 		.word	g_mem
 9928 0408 07000000 		.word	g_rx+7
 9929 040c 0B000000 		.word	g_rx+11
 9930              	.L423:
1340:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9931              		.loc 1 1340 0 discriminator 3
 9932 0410 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9933 0412 C3F10303 		rsb	r3, r3, #3
 9934 0416 07F10802 		add	r2, r7, #8
 9935 041a 1344     		add	r3, r3, r2
 9936 041c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9937 041e 07F10C01 		add	r1, r7, #12
 9938 0422 0A44     		add	r2, r2, r1
 9939 0424 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9940 0426 1A70     		strb	r2, [r3]
1339:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9941              		.loc 1 1339 0 discriminator 3
 9942 0428 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 229


 9943 042a 0133     		adds	r3, r3, #1
 9944 042c BB75     		strb	r3, [r7, #22]
 9945              	.L422:
1339:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9946              		.loc 1 1339 0 is_stmt 0 discriminator 1
 9947 042e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9948 0430 032B     		cmp	r3, #3
 9949 0432 EDD9     		bls	.L423
1341:..\src/command_processing.c ****                 }
1342:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c = aux_float2 * 65536;
 9950              		.loc 1 1342 0 is_stmt 1
 9951 0434 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9952 0436 BB68     		ldr	r3, [r7, #8]	@ float
 9953 0438 4FF08F41 		mov	r1, #1199570944
 9954 043c 1846     		mov	r0, r3
 9955 043e FFF7FEFF 		bl	__aeabi_fmul
 9956 0442 0346     		mov	r3, r0
 9957 0444 1846     		mov	r0, r3
 9958 0446 FFF7FEFF 		bl	__aeabi_f2iz
 9959 044a 0146     		mov	r1, r0
 9960 044c B64A     		ldr	r2, .L486
 9961 044e 2346     		mov	r3, r4
 9962 0450 DB00     		lsls	r3, r3, #3
 9963 0452 1B1B     		subs	r3, r3, r4
 9964 0454 1B01     		lsls	r3, r3, #4
 9965 0456 1344     		add	r3, r3, r2
 9966 0458 C033     		adds	r3, r3, #192
 9967 045a 1960     		str	r1, [r3]
1343:..\src/command_processing.c ****                 
1344:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 9968              		.loc 1 1344 0
 9969 045c B34B     		ldr	r3, .L486+4
 9970 045e 1B68     		ldr	r3, [r3]	@ float
 9971 0460 FB60     		str	r3, [r7, #12]	@ float
1345:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9972              		.loc 1 1345 0
 9973 0462 0023     		movs	r3, #0
 9974 0464 BB75     		strb	r3, [r7, #22]
 9975 0466 0EE0     		b	.L424
 9976              	.L425:
1346:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9977              		.loc 1 1346 0 discriminator 3
 9978 0468 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9979 046a C3F10303 		rsb	r3, r3, #3
 9980 046e 07F10802 		add	r2, r7, #8
 9981 0472 1344     		add	r3, r3, r2
 9982 0474 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9983 0476 07F10C01 		add	r1, r7, #12
 9984 047a 0A44     		add	r2, r2, r1
 9985 047c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9986 047e 1A70     		strb	r2, [r3]
1345:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9987              		.loc 1 1345 0 discriminator 3
 9988 0480 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9989 0482 0133     		adds	r3, r3, #1
 9990 0484 BB75     		strb	r3, [r7, #22]
 9991              	.L424:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 230


1345:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9992              		.loc 1 1345 0 is_stmt 0 discriminator 1
 9993 0486 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9994 0488 032B     		cmp	r3, #3
 9995 048a EDD9     		bls	.L425
1347:..\src/command_processing.c ****                 }
1348:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c = aux_float2 * 65536;
 9996              		.loc 1 1348 0 is_stmt 1
 9997 048c 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9998 048e BB68     		ldr	r3, [r7, #8]	@ float
 9999 0490 4FF08F41 		mov	r1, #1199570944
 10000 0494 1846     		mov	r0, r3
 10001 0496 FFF7FEFF 		bl	__aeabi_fmul
 10002 049a 0346     		mov	r3, r0
 10003 049c 1846     		mov	r0, r3
 10004 049e FFF7FEFF 		bl	__aeabi_f2iz
 10005 04a2 0146     		mov	r1, r0
 10006 04a4 A04A     		ldr	r2, .L486
 10007 04a6 2346     		mov	r3, r4
 10008 04a8 DB00     		lsls	r3, r3, #3
 10009 04aa 1B1B     		subs	r3, r3, r4
 10010 04ac 1B01     		lsls	r3, r3, #4
 10011 04ae 1344     		add	r3, r3, r2
 10012 04b0 C433     		adds	r3, r3, #196
 10013 04b2 1960     		str	r1, [r3]
1349:..\src/command_processing.c ****             }
1350:..\src/command_processing.c ****             else {
1351:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1352:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1353:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1354:..\src/command_processing.c ****                 }
1355:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1356:..\src/command_processing.c ****                 
1357:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1358:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1359:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1360:..\src/command_processing.c ****                 }
1361:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1362:..\src/command_processing.c ****                 
1363:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1364:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1365:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1366:..\src/command_processing.c ****                 }
1367:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1368:..\src/command_processing.c ****             }            
1369:..\src/command_processing.c ****             break;  
 10014              		.loc 1 1369 0
 10015 04b4 01F023B8 		b	.L418
 10016              	.L419:
1351:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10017              		.loc 1 1351 0
 10018 04b8 9D4B     		ldr	r3, .L486+8
 10019 04ba 1B68     		ldr	r3, [r3]	@ float
 10020 04bc FB60     		str	r3, [r7, #12]	@ float
1352:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10021              		.loc 1 1352 0
 10022 04be 0023     		movs	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 231


 10023 04c0 BB75     		strb	r3, [r7, #22]
 10024 04c2 0EE0     		b	.L427
 10025              	.L428:
1353:..\src/command_processing.c ****                 }
 10026              		.loc 1 1353 0 discriminator 3
 10027 04c4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10028 04c6 C3F10303 		rsb	r3, r3, #3
 10029 04ca 07F10802 		add	r2, r7, #8
 10030 04ce 1344     		add	r3, r3, r2
 10031 04d0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10032 04d2 07F10C01 		add	r1, r7, #12
 10033 04d6 0A44     		add	r2, r2, r1
 10034 04d8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10035 04da 1A70     		strb	r2, [r3]
1352:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10036              		.loc 1 1352 0 discriminator 3
 10037 04dc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10038 04de 0133     		adds	r3, r3, #1
 10039 04e0 BB75     		strb	r3, [r7, #22]
 10040              	.L427:
1352:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10041              		.loc 1 1352 0 is_stmt 0 discriminator 1
 10042 04e2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10043 04e4 032B     		cmp	r3, #3
 10044 04e6 EDD9     		bls	.L428
1355:..\src/command_processing.c ****                 
 10045              		.loc 1 1355 0 is_stmt 1
 10046 04e8 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10047 04ea BB68     		ldr	r3, [r7, #8]	@ float
 10048 04ec 4FF08F41 		mov	r1, #1199570944
 10049 04f0 1846     		mov	r0, r3
 10050 04f2 FFF7FEFF 		bl	__aeabi_fmul
 10051 04f6 0346     		mov	r3, r0
 10052 04f8 1846     		mov	r0, r3
 10053 04fa FFF7FEFF 		bl	__aeabi_f2iz
 10054 04fe 0146     		mov	r1, r0
 10055 0500 894A     		ldr	r2, .L486
 10056 0502 2346     		mov	r3, r4
 10057 0504 DB00     		lsls	r3, r3, #3
 10058 0506 1B1B     		subs	r3, r3, r4
 10059 0508 1B01     		lsls	r3, r3, #4
 10060 050a 1344     		add	r3, r3, r2
 10061 050c D433     		adds	r3, r3, #212
 10062 050e 1960     		str	r1, [r3]
1357:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10063              		.loc 1 1357 0
 10064 0510 884B     		ldr	r3, .L486+12
 10065 0512 1B68     		ldr	r3, [r3]	@ float
 10066 0514 FB60     		str	r3, [r7, #12]	@ float
1358:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10067              		.loc 1 1358 0
 10068 0516 0023     		movs	r3, #0
 10069 0518 BB75     		strb	r3, [r7, #22]
 10070 051a 0EE0     		b	.L429
 10071              	.L430:
1359:..\src/command_processing.c ****                 }
 10072              		.loc 1 1359 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 232


 10073 051c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10074 051e C3F10303 		rsb	r3, r3, #3
 10075 0522 07F10802 		add	r2, r7, #8
 10076 0526 1344     		add	r3, r3, r2
 10077 0528 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10078 052a 07F10C01 		add	r1, r7, #12
 10079 052e 0A44     		add	r2, r2, r1
 10080 0530 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10081 0532 1A70     		strb	r2, [r3]
1358:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10082              		.loc 1 1358 0 discriminator 3
 10083 0534 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10084 0536 0133     		adds	r3, r3, #1
 10085 0538 BB75     		strb	r3, [r7, #22]
 10086              	.L429:
1358:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10087              		.loc 1 1358 0 is_stmt 0 discriminator 1
 10088 053a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10089 053c 032B     		cmp	r3, #3
 10090 053e EDD9     		bls	.L430
1361:..\src/command_processing.c ****                 
 10091              		.loc 1 1361 0 is_stmt 1
 10092 0540 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10093 0542 BB68     		ldr	r3, [r7, #8]	@ float
 10094 0544 4FF08F41 		mov	r1, #1199570944
 10095 0548 1846     		mov	r0, r3
 10096 054a FFF7FEFF 		bl	__aeabi_fmul
 10097 054e 0346     		mov	r3, r0
 10098 0550 1846     		mov	r0, r3
 10099 0552 FFF7FEFF 		bl	__aeabi_f2iz
 10100 0556 0146     		mov	r1, r0
 10101 0558 734A     		ldr	r2, .L486
 10102 055a 2346     		mov	r3, r4
 10103 055c DB00     		lsls	r3, r3, #3
 10104 055e 1B1B     		subs	r3, r3, r4
 10105 0560 1B01     		lsls	r3, r3, #4
 10106 0562 1344     		add	r3, r3, r2
 10107 0564 D833     		adds	r3, r3, #216
 10108 0566 1960     		str	r1, [r3]
1363:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10109              		.loc 1 1363 0
 10110 0568 704B     		ldr	r3, .L486+4
 10111 056a 1B68     		ldr	r3, [r3]	@ float
 10112 056c FB60     		str	r3, [r7, #12]	@ float
1364:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10113              		.loc 1 1364 0
 10114 056e 0023     		movs	r3, #0
 10115 0570 BB75     		strb	r3, [r7, #22]
 10116 0572 0EE0     		b	.L431
 10117              	.L432:
1365:..\src/command_processing.c ****                 }
 10118              		.loc 1 1365 0 discriminator 3
 10119 0574 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10120 0576 C3F10303 		rsb	r3, r3, #3
 10121 057a 07F10802 		add	r2, r7, #8
 10122 057e 1344     		add	r3, r3, r2
 10123 0580 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 233


 10124 0582 07F10C01 		add	r1, r7, #12
 10125 0586 0A44     		add	r2, r2, r1
 10126 0588 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10127 058a 1A70     		strb	r2, [r3]
1364:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10128              		.loc 1 1364 0 discriminator 3
 10129 058c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10130 058e 0133     		adds	r3, r3, #1
 10131 0590 BB75     		strb	r3, [r7, #22]
 10132              	.L431:
1364:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10133              		.loc 1 1364 0 is_stmt 0 discriminator 1
 10134 0592 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10135 0594 032B     		cmp	r3, #3
 10136 0596 EDD9     		bls	.L432
1367:..\src/command_processing.c ****             }            
 10137              		.loc 1 1367 0 is_stmt 1
 10138 0598 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10139 059a BB68     		ldr	r3, [r7, #8]	@ float
 10140 059c 4FF08F41 		mov	r1, #1199570944
 10141 05a0 1846     		mov	r0, r3
 10142 05a2 FFF7FEFF 		bl	__aeabi_fmul
 10143 05a6 0346     		mov	r3, r0
 10144 05a8 1846     		mov	r0, r3
 10145 05aa FFF7FEFF 		bl	__aeabi_f2iz
 10146 05ae 0146     		mov	r1, r0
 10147 05b0 5D4A     		ldr	r2, .L486
 10148 05b2 2346     		mov	r3, r4
 10149 05b4 DB00     		lsls	r3, r3, #3
 10150 05b6 1B1B     		subs	r3, r3, r4
 10151 05b8 1B01     		lsls	r3, r3, #4
 10152 05ba 1344     		add	r3, r3, r2
 10153 05bc DC33     		adds	r3, r3, #220
 10154 05be 1960     		str	r1, [r3]
 10155              		.loc 1 1369 0
 10156 05c0 00F09DBF 		b	.L418
 10157              	.L388:
1370:..\src/command_processing.c ****             
1371:..\src/command_processing.c ****         case 5:         //Input mode
1372:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].input_mode = g_rx.buffer[3];
 10158              		.loc 1 1372 0
 10159 05c4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10160 05c6 5C4B     		ldr	r3, .L486+16
 10161 05c8 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 10162 05ca 5749     		ldr	r1, .L486
 10163 05cc 1346     		mov	r3, r2
 10164 05ce DB00     		lsls	r3, r3, #3
 10165 05d0 9B1A     		subs	r3, r3, r2
 10166 05d2 1B01     		lsls	r3, r3, #4
 10167 05d4 0B44     		add	r3, r3, r1
 10168 05d6 03F58773 		add	r3, r3, #270
 10169 05da 0246     		mov	r2, r0
 10170 05dc 1A70     		strb	r2, [r3]
1373:..\src/command_processing.c ****             
1374:..\src/command_processing.c ****             // Hold the actual position
1375:..\src/command_processing.c ****             g_refNew[MOTOR_IDX].pos = g_meas[g_mem.motor[MOTOR_IDX].encoder_line].pos[0];
 10171              		.loc 1 1375 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 234


 10172 05de 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10173 05e0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10174 05e2 5148     		ldr	r0, .L486
 10175 05e4 1346     		mov	r3, r2
 10176 05e6 DB00     		lsls	r3, r3, #3
 10177 05e8 9B1A     		subs	r3, r3, r2
 10178 05ea 1B01     		lsls	r3, r3, #4
 10179 05ec 0344     		add	r3, r3, r0
 10180 05ee 03F58873 		add	r3, r3, #272
 10181 05f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10182 05f4 1846     		mov	r0, r3
 10183 05f6 514A     		ldr	r2, .L486+20
 10184 05f8 3423     		movs	r3, #52
 10185 05fa 03FB00F3 		mul	r3, r3, r0
 10186 05fe 1344     		add	r3, r3, r2
 10187 0600 1A68     		ldr	r2, [r3]
 10188 0602 4F48     		ldr	r0, .L486+24
 10189 0604 0B01     		lsls	r3, r1, #4
 10190 0606 0344     		add	r3, r3, r0
 10191 0608 1A60     		str	r2, [r3]
1376:..\src/command_processing.c ****             break;   
 10192              		.loc 1 1376 0
 10193 060a 00F078BF 		b	.L418
 10194              	.L389:
1377:..\src/command_processing.c **** 
1378:..\src/command_processing.c ****         case 8:         //Measurement Offset
1379:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
 10195              		.loc 1 1379 0
 10196 060e 0023     		movs	r3, #0
 10197 0610 FB75     		strb	r3, [r7, #23]
 10198 0612 7EE0     		b	.L433
 10199              	.L434:
1380:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 10200              		.loc 1 1380 0 discriminator 3
 10201 0614 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10202 0616 4449     		ldr	r1, .L486
 10203 0618 1346     		mov	r3, r2
 10204 061a DB00     		lsls	r3, r3, #3
 10205 061c 9B1A     		subs	r3, r3, r2
 10206 061e 1B01     		lsls	r3, r3, #4
 10207 0620 0B44     		add	r3, r3, r1
 10208 0622 03F58873 		add	r3, r3, #272
 10209 0626 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10210 0628 1C46     		mov	r4, r3
 10211 062a FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10212 062c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10213 062e 5B00     		lsls	r3, r3, #1
 10214 0630 0333     		adds	r3, r3, #3
 10215 0632 4149     		ldr	r1, .L486+16
 10216 0634 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 10217 0636 1B02     		lsls	r3, r3, #8
 10218 0638 19B2     		sxth	r1, r3
 10219 063a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10220 063c 0233     		adds	r3, r3, #2
 10221 063e 5B00     		lsls	r3, r3, #1
 10222 0640 3D48     		ldr	r0, .L486+16
 10223 0642 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 235


 10224 0644 1BB2     		sxth	r3, r3
 10225 0646 0B43     		orrs	r3, r3, r1
 10226 0648 1BB2     		sxth	r3, r3
 10227 064a 1846     		mov	r0, r3
 10228 064c 3649     		ldr	r1, .L486
 10229 064e 2346     		mov	r3, r4
 10230 0650 5B00     		lsls	r3, r3, #1
 10231 0652 2344     		add	r3, r3, r4
 10232 0654 9B00     		lsls	r3, r3, #2
 10233 0656 1344     		add	r3, r3, r2
 10234 0658 6633     		adds	r3, r3, #102
 10235 065a 41F82300 		str	r0, [r1, r3, lsl #2]
1381:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.motor[MOT
 10236              		.loc 1 1381 0 discriminator 3
 10237 065e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10238 0660 3149     		ldr	r1, .L486
 10239 0662 1346     		mov	r3, r2
 10240 0664 DB00     		lsls	r3, r3, #3
 10241 0666 9B1A     		subs	r3, r3, r2
 10242 0668 1B01     		lsls	r3, r3, #4
 10243 066a 0B44     		add	r3, r3, r1
 10244 066c 03F58873 		add	r3, r3, #272
 10245 0670 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10246 0672 1D46     		mov	r5, r3
 10247 0674 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 10248 0676 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10249 0678 2B48     		ldr	r0, .L486
 10250 067a 1346     		mov	r3, r2
 10251 067c DB00     		lsls	r3, r3, #3
 10252 067e 9B1A     		subs	r3, r3, r2
 10253 0680 1B01     		lsls	r3, r3, #4
 10254 0682 0344     		add	r3, r3, r0
 10255 0684 03F58873 		add	r3, r3, #272
 10256 0688 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10257 068a 1C46     		mov	r4, r3
 10258 068c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10259 068e 2648     		ldr	r0, .L486
 10260 0690 2346     		mov	r3, r4
 10261 0692 5B00     		lsls	r3, r3, #1
 10262 0694 2344     		add	r3, r3, r4
 10263 0696 9B00     		lsls	r3, r3, #2
 10264 0698 1344     		add	r3, r3, r2
 10265 069a 6633     		adds	r3, r3, #102
 10266 069c 50F82300 		ldr	r0, [r0, r3, lsl #2]
 10267 06a0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10268 06a2 214C     		ldr	r4, .L486
 10269 06a4 1346     		mov	r3, r2
 10270 06a6 DB00     		lsls	r3, r3, #3
 10271 06a8 9B1A     		subs	r3, r3, r2
 10272 06aa 1B01     		lsls	r3, r3, #4
 10273 06ac 2344     		add	r3, r3, r4
 10274 06ae 03F58873 		add	r3, r3, #272
 10275 06b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10276 06b4 1E46     		mov	r6, r3
 10277 06b6 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10278 06b8 1B4C     		ldr	r4, .L486
 10279 06ba 3346     		mov	r3, r6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 236


 10280 06bc 5B00     		lsls	r3, r3, #1
 10281 06be 3344     		add	r3, r3, r6
 10282 06c0 1B01     		lsls	r3, r3, #4
 10283 06c2 2344     		add	r3, r3, r4
 10284 06c4 1344     		add	r3, r3, r2
 10285 06c6 03F29513 		addw	r3, r3, #405
 10286 06ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10287 06cc 00FA03F2 		lsl	r2, r0, r3
 10288 06d0 1548     		ldr	r0, .L486
 10289 06d2 2B46     		mov	r3, r5
 10290 06d4 5B00     		lsls	r3, r3, #1
 10291 06d6 2B44     		add	r3, r3, r5
 10292 06d8 9B00     		lsls	r3, r3, #2
 10293 06da 0B44     		add	r3, r3, r1
 10294 06dc 6633     		adds	r3, r3, #102
 10295 06de 40F82320 		str	r2, [r0, r3, lsl #2]
1382:..\src/command_processing.c **** 
1383:..\src/command_processing.c ****                 g_meas[g_mem.motor[MOTOR_IDX].encoder_line].rot[i] = 0;
 10296              		.loc 1 1383 0 discriminator 3
 10297 06e2 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10298 06e4 1049     		ldr	r1, .L486
 10299 06e6 1346     		mov	r3, r2
 10300 06e8 DB00     		lsls	r3, r3, #3
 10301 06ea 9B1A     		subs	r3, r3, r2
 10302 06ec 1B01     		lsls	r3, r3, #4
 10303 06ee 0B44     		add	r3, r3, r1
 10304 06f0 03F58873 		add	r3, r3, #272
 10305 06f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10306 06f6 1846     		mov	r0, r3
 10307 06f8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10308 06fa 1049     		ldr	r1, .L486+20
 10309 06fc 3422     		movs	r2, #52
 10310 06fe 02FB00F2 		mul	r2, r2, r0
 10311 0702 0A44     		add	r2, r2, r1
 10312 0704 1344     		add	r3, r3, r2
 10313 0706 1833     		adds	r3, r3, #24
 10314 0708 0022     		movs	r2, #0
 10315 070a 1A70     		strb	r2, [r3]
1379:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 10316              		.loc 1 1379 0 discriminator 3
 10317 070c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10318 070e 0133     		adds	r3, r3, #1
 10319 0710 FB75     		strb	r3, [r7, #23]
 10320              	.L433:
1379:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 10321              		.loc 1 1379 0 is_stmt 0 discriminator 1
 10322 0712 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10323 0714 022B     		cmp	r3, #2
 10324 0716 7FF67DAF 		bls	.L434
1384:..\src/command_processing.c ****             }
1385:..\src/command_processing.c ****             reset_last_value_flag[MOTOR_IDX] = 1;
 10325              		.loc 1 1385 0 is_stmt 1
 10326 071a 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 10327 071c 094A     		ldr	r2, .L486+28
 10328 071e 0121     		movs	r1, #1
 10329 0720 D154     		strb	r1, [r2, r3]
1386:..\src/command_processing.c ****             break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 237


 10330              		.loc 1 1386 0
 10331 0722 00F0ECBE 		b	.L418
 10332              	.L487:
 10333 0726 00BF     		.align	2
 10334              	.L486:
 10335 0728 00000000 		.word	g_mem
 10336 072c 0B000000 		.word	g_rx+11
 10337 0730 03000000 		.word	g_rx+3
 10338 0734 07000000 		.word	g_rx+7
 10339 0738 00000000 		.word	g_rx
 10340 073c 00000000 		.word	g_meas
 10341 0740 00000000 		.word	g_refNew
 10342 0744 00000000 		.word	reset_last_value_flag
 10343              	.L390:
1387:..\src/command_processing.c ****     
1388:..\src/command_processing.c ****         case 11:        //Position limits
1389:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | 
 10344              		.loc 1 1389 0
 10345 0748 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10346 074a C14B     		ldr	r3, .L488
 10347 074c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 10348 074e 1906     		lsls	r1, r3, #24
 10349 0750 BF4B     		ldr	r3, .L488
 10350 0752 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 10351 0754 1B04     		lsls	r3, r3, #16
 10352 0756 1943     		orrs	r1, r1, r3
 10353 0758 BD4B     		ldr	r3, .L488
 10354 075a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 10355 075c 1B02     		lsls	r3, r3, #8
 10356 075e 0B43     		orrs	r3, r3, r1
 10357 0760 BB49     		ldr	r1, .L488
 10358 0762 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 10359 0764 1943     		orrs	r1, r1, r3
 10360 0766 BB48     		ldr	r0, .L488+4
 10361 0768 1346     		mov	r3, r2
 10362 076a DB00     		lsls	r3, r3, #3
 10363 076c 9B1A     		subs	r3, r3, r2
 10364 076e 1B01     		lsls	r3, r3, #4
 10365 0770 0344     		add	r3, r3, r0
 10366 0772 E433     		adds	r3, r3, #228
 10367 0774 1960     		str	r1, [r3]
1390:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]<<16 | 
 10368              		.loc 1 1390 0
 10369 0776 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10370 0778 B54B     		ldr	r3, .L488
 10371 077a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 10372 077c 1906     		lsls	r1, r3, #24
 10373 077e B44B     		ldr	r3, .L488
 10374 0780 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 10375 0782 1B04     		lsls	r3, r3, #16
 10376 0784 1943     		orrs	r1, r1, r3
 10377 0786 B24B     		ldr	r3, .L488
 10378 0788 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 10379 078a 1B02     		lsls	r3, r3, #8
 10380 078c 0B43     		orrs	r3, r3, r1
 10381 078e B049     		ldr	r1, .L488
 10382 0790 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 238


 10383 0792 1943     		orrs	r1, r1, r3
 10384 0794 AF48     		ldr	r0, .L488+4
 10385 0796 1346     		mov	r3, r2
 10386 0798 DB00     		lsls	r3, r3, #3
 10387 079a 9B1A     		subs	r3, r3, r2
 10388 079c 1B01     		lsls	r3, r3, #4
 10389 079e 0344     		add	r3, r3, r0
 10390 07a0 E833     		adds	r3, r3, #232
 10391 07a2 1960     		str	r1, [r3]
1391:..\src/command_processing.c **** 
1392:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = g_mem.motor[MOTOR_IDX].pos_lim_inf << g_mem.enc[g_
 10392              		.loc 1 1392 0
 10393 07a4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10394 07a6 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10395 07a8 AA48     		ldr	r0, .L488+4
 10396 07aa 0B46     		mov	r3, r1
 10397 07ac DB00     		lsls	r3, r3, #3
 10398 07ae 5B1A     		subs	r3, r3, r1
 10399 07b0 1B01     		lsls	r3, r3, #4
 10400 07b2 0344     		add	r3, r3, r0
 10401 07b4 E433     		adds	r3, r3, #228
 10402 07b6 1868     		ldr	r0, [r3]
 10403 07b8 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10404 07ba A64C     		ldr	r4, .L488+4
 10405 07bc 0B46     		mov	r3, r1
 10406 07be DB00     		lsls	r3, r3, #3
 10407 07c0 5B1A     		subs	r3, r3, r1
 10408 07c2 1B01     		lsls	r3, r3, #4
 10409 07c4 2344     		add	r3, r3, r4
 10410 07c6 03F58873 		add	r3, r3, #272
 10411 07ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10412 07cc 1C46     		mov	r4, r3
 10413 07ce A149     		ldr	r1, .L488+4
 10414 07d0 2346     		mov	r3, r4
 10415 07d2 5B00     		lsls	r3, r3, #1
 10416 07d4 2344     		add	r3, r3, r4
 10417 07d6 1B01     		lsls	r3, r3, #4
 10418 07d8 0B44     		add	r3, r3, r1
 10419 07da 03F29513 		addw	r3, r3, #405
 10420 07de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10421 07e0 00FA03F1 		lsl	r1, r0, r3
 10422 07e4 9B48     		ldr	r0, .L488+4
 10423 07e6 1346     		mov	r3, r2
 10424 07e8 DB00     		lsls	r3, r3, #3
 10425 07ea 9B1A     		subs	r3, r3, r2
 10426 07ec 1B01     		lsls	r3, r3, #4
 10427 07ee 0344     		add	r3, r3, r0
 10428 07f0 E433     		adds	r3, r3, #228
 10429 07f2 1960     		str	r1, [r3]
1393:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = g_mem.motor[MOTOR_IDX].pos_lim_sup << g_mem.enc[g_
 10430              		.loc 1 1393 0
 10431 07f4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10432 07f6 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10433 07f8 9648     		ldr	r0, .L488+4
 10434 07fa 0B46     		mov	r3, r1
 10435 07fc DB00     		lsls	r3, r3, #3
 10436 07fe 5B1A     		subs	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 239


 10437 0800 1B01     		lsls	r3, r3, #4
 10438 0802 0344     		add	r3, r3, r0
 10439 0804 E833     		adds	r3, r3, #232
 10440 0806 1868     		ldr	r0, [r3]
 10441 0808 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10442 080a 924C     		ldr	r4, .L488+4
 10443 080c 0B46     		mov	r3, r1
 10444 080e DB00     		lsls	r3, r3, #3
 10445 0810 5B1A     		subs	r3, r3, r1
 10446 0812 1B01     		lsls	r3, r3, #4
 10447 0814 2344     		add	r3, r3, r4
 10448 0816 03F58873 		add	r3, r3, #272
 10449 081a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10450 081c 1C46     		mov	r4, r3
 10451 081e 8D49     		ldr	r1, .L488+4
 10452 0820 2346     		mov	r3, r4
 10453 0822 5B00     		lsls	r3, r3, #1
 10454 0824 2344     		add	r3, r3, r4
 10455 0826 1B01     		lsls	r3, r3, #4
 10456 0828 0B44     		add	r3, r3, r1
 10457 082a 03F29513 		addw	r3, r3, #405
 10458 082e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10459 0830 00FA03F1 		lsl	r1, r0, r3
 10460 0834 8748     		ldr	r0, .L488+4
 10461 0836 1346     		mov	r3, r2
 10462 0838 DB00     		lsls	r3, r3, #3
 10463 083a 9B1A     		subs	r3, r3, r2
 10464 083c 1B01     		lsls	r3, r3, #4
 10465 083e 0344     		add	r3, r3, r0
 10466 0840 E833     		adds	r3, r3, #232
 10467 0842 1960     		str	r1, [r3]
1394:..\src/command_processing.c ****             break;            
 10468              		.loc 1 1394 0
 10469 0844 00F05BBE 		b	.L418
 10470              	.L391:
1395:..\src/command_processing.c **** 
1396:..\src/command_processing.c ****         case 23:        //Rest Position
1397:..\src/command_processing.c ****             g_mem.SH.rest_pos = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<8
 10471              		.loc 1 1397 0
 10472 0848 814B     		ldr	r3, .L488
 10473 084a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 10474 084c 1A06     		lsls	r2, r3, #24
 10475 084e 804B     		ldr	r3, .L488
 10476 0850 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 10477 0852 1B04     		lsls	r3, r3, #16
 10478 0854 1A43     		orrs	r2, r2, r3
 10479 0856 7E4B     		ldr	r3, .L488
 10480 0858 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 10481 085a 1B02     		lsls	r3, r3, #8
 10482 085c 1343     		orrs	r3, r3, r2
 10483 085e 7C4A     		ldr	r2, .L488
 10484 0860 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 10485 0862 1343     		orrs	r3, r3, r2
 10486 0864 7B4A     		ldr	r2, .L488+4
 10487 0866 C2F8A032 		str	r3, [r2, #672]
1398:..\src/command_processing.c ****             g_mem.SH.rest_pos = g_mem.SH.rest_pos << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line]
 10488              		.loc 1 1398 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 240


 10489 086a 7A4B     		ldr	r3, .L488+4
 10490 086c D3F8A012 		ldr	r1, [r3, #672]
 10491 0870 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10492 0872 7848     		ldr	r0, .L488+4
 10493 0874 1346     		mov	r3, r2
 10494 0876 DB00     		lsls	r3, r3, #3
 10495 0878 9B1A     		subs	r3, r3, r2
 10496 087a 1B01     		lsls	r3, r3, #4
 10497 087c 0344     		add	r3, r3, r0
 10498 087e 03F58873 		add	r3, r3, #272
 10499 0882 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10500 0884 1846     		mov	r0, r3
 10501 0886 734A     		ldr	r2, .L488+4
 10502 0888 0346     		mov	r3, r0
 10503 088a 5B00     		lsls	r3, r3, #1
 10504 088c 0344     		add	r3, r3, r0
 10505 088e 1B01     		lsls	r3, r3, #4
 10506 0890 1344     		add	r3, r3, r2
 10507 0892 03F29513 		addw	r3, r3, #405
 10508 0896 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10509 0898 01FA03F3 		lsl	r3, r1, r3
 10510 089c 6D4A     		ldr	r2, .L488+4
 10511 089e C2F8A032 		str	r3, [r2, #672]
1399:..\src/command_processing.c ****             break; 
 10512              		.loc 1 1399 0
 10513 08a2 00F02CBE 		b	.L418
 10514              	.L392:
1400:..\src/command_processing.c ****             
1401:..\src/command_processing.c ****         case 24:        //Rest Position Time Delay
1402:..\src/command_processing.c ****            g_mem.SH.rest_delay = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<
 10515              		.loc 1 1402 0
 10516 08a6 6A4B     		ldr	r3, .L488
 10517 08a8 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 10518 08aa 1A06     		lsls	r2, r3, #24
 10519 08ac 684B     		ldr	r3, .L488
 10520 08ae 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 10521 08b0 1B04     		lsls	r3, r3, #16
 10522 08b2 1A43     		orrs	r2, r2, r3
 10523 08b4 664B     		ldr	r3, .L488
 10524 08b6 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 10525 08b8 1B02     		lsls	r3, r3, #8
 10526 08ba 1343     		orrs	r3, r3, r2
 10527 08bc 644A     		ldr	r2, .L488
 10528 08be 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 10529 08c0 1343     		orrs	r3, r3, r2
 10530 08c2 644A     		ldr	r2, .L488+4
 10531 08c4 C2F8A432 		str	r3, [r2, #676]
1403:..\src/command_processing.c **** 		   if (g_mem.SH.rest_delay < 10) g_mem.SH.rest_delay = 10;
 10532              		.loc 1 1403 0
 10533 08c8 624B     		ldr	r3, .L488+4
 10534 08ca D3F8A432 		ldr	r3, [r3, #676]
 10535 08ce 092B     		cmp	r3, #9
 10536 08d0 00F30C86 		bgt	.L479
 10537              		.loc 1 1403 0 is_stmt 0 discriminator 1
 10538 08d4 5F4B     		ldr	r3, .L488+4
 10539 08d6 0A22     		movs	r2, #10
 10540 08d8 C3F8A422 		str	r2, [r3, #676]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 241


1404:..\src/command_processing.c ****            break; 
 10541              		.loc 1 1404 0 is_stmt 1 discriminator 1
 10542 08dc 00F006BE 		b	.L479
 10543              	.L393:
1405:..\src/command_processing.c ****             
1406:..\src/command_processing.c ****         case 28:        //Right/Left hand flag
1407:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 10544              		.loc 1 1407 0
 10545 08e0 5B4B     		ldr	r3, .L488
 10546 08e2 DB78     		ldrb	r3, [r3, #3]
 10547 08e4 BB74     		strb	r3, [r7, #18]
1408:..\src/command_processing.c ****             if (aux_uchar) {    // 1
 10548              		.loc 1 1408 0
 10549 08e6 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10550 08e8 002B     		cmp	r3, #0
 10551 08ea 04D0     		beq	.L436
1409:..\src/command_processing.c ****                 g_mem.dev.right_left = LEFT_HAND;
 10552              		.loc 1 1409 0
 10553 08ec 594B     		ldr	r3, .L488+4
 10554 08ee 0122     		movs	r2, #1
 10555 08f0 83F8A720 		strb	r2, [r3, #167]
 10556 08f4 03E0     		b	.L437
 10557              	.L436:
1410:..\src/command_processing.c ****             } else {            // 0
1411:..\src/command_processing.c ****                 g_mem.dev.right_left = RIGHT_HAND;
 10558              		.loc 1 1411 0
 10559 08f6 574B     		ldr	r3, .L488+4
 10560 08f8 0022     		movs	r2, #0
 10561 08fa 83F8A720 		strb	r2, [r3, #167]
 10562              	.L437:
1412:..\src/command_processing.c ****             }
1413:..\src/command_processing.c **** 			reset_last_value_flag[MOTOR_IDX] = 1;
 10563              		.loc 1 1413 0
 10564 08fe 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 10565 0900 554A     		ldr	r2, .L488+8
 10566 0902 0121     		movs	r1, #1
 10567 0904 D154     		strb	r1, [r2, r3]
1414:..\src/command_processing.c **** 
1415:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    
 10568              		.loc 1 1415 0
 10569 0906 534B     		ldr	r3, .L488+4
 10570 0908 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 10571 090c 002B     		cmp	r3, #0
 10572 090e 40F0EF85 		bne	.L480
1416:..\src/command_processing.c ****                 // Change also default encoder line (only with SoftHand FW)
1417:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line = g_mem.dev.right_left;
 10573              		.loc 1 1417 0
 10574 0912 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10575 0914 4F4B     		ldr	r3, .L488+4
 10576 0916 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 10577 091a 4E49     		ldr	r1, .L488+4
 10578 091c 1346     		mov	r3, r2
 10579 091e DB00     		lsls	r3, r3, #3
 10580 0920 9B1A     		subs	r3, r3, r2
 10581 0922 1B01     		lsls	r3, r3, #4
 10582 0924 0B44     		add	r3, r3, r1
 10583 0926 03F58873 		add	r3, r3, #272
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 242


 10584 092a 0246     		mov	r2, r0
 10585 092c 1A70     		strb	r2, [r3]
1418:..\src/command_processing.c ****                 
1419:..\src/command_processing.c ****                 // Change also gears parameters
1420:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 10586              		.loc 1 1420 0
 10587 092e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10588 0930 4849     		ldr	r1, .L488+4
 10589 0932 1346     		mov	r3, r2
 10590 0934 DB00     		lsls	r3, r3, #3
 10591 0936 9B1A     		subs	r3, r3, r2
 10592 0938 1B01     		lsls	r3, r3, #4
 10593 093a 0B44     		add	r3, r3, r1
 10594 093c 03F58873 		add	r3, r3, #272
 10595 0940 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10596 0942 1946     		mov	r1, r3
 10597 0944 434A     		ldr	r2, .L488+4
 10598 0946 0B46     		mov	r3, r1
 10599 0948 5B00     		lsls	r3, r3, #1
 10600 094a 0B44     		add	r3, r3, r1
 10601 094c 1B01     		lsls	r3, r3, #4
 10602 094e 1344     		add	r3, r3, r2
 10603 0950 03F5D873 		add	r3, r3, #432
 10604 0954 0122     		movs	r2, #1
 10605 0956 1A70     		strb	r2, [r3]
1421:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 10606              		.loc 1 1421 0
 10607 0958 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10608 095a 3E49     		ldr	r1, .L488+4
 10609 095c 1346     		mov	r3, r2
 10610 095e DB00     		lsls	r3, r3, #3
 10611 0960 9B1A     		subs	r3, r3, r2
 10612 0962 1B01     		lsls	r3, r3, #4
 10613 0964 0B44     		add	r3, r3, r1
 10614 0966 03F58873 		add	r3, r3, #272
 10615 096a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10616 096c 1946     		mov	r1, r3
 10617 096e 394A     		ldr	r2, .L488+4
 10618 0970 0B46     		mov	r3, r1
 10619 0972 5B00     		lsls	r3, r3, #1
 10620 0974 0B44     		add	r3, r3, r1
 10621 0976 1B01     		lsls	r3, r3, #4
 10622 0978 1344     		add	r3, r3, r2
 10623 097a 03F2B513 		addw	r3, r3, #437
 10624 097e 2322     		movs	r2, #35
 10625 0980 1A70     		strb	r2, [r3]
1422:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 10626              		.loc 1 1422 0
 10627 0982 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10628 0984 3349     		ldr	r1, .L488+4
 10629 0986 1346     		mov	r3, r2
 10630 0988 DB00     		lsls	r3, r3, #3
 10631 098a 9B1A     		subs	r3, r3, r2
 10632 098c 1B01     		lsls	r3, r3, #4
 10633 098e 0B44     		add	r3, r3, r1
 10634 0990 03F58873 		add	r3, r3, #272
 10635 0994 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 243


 10636 0996 1946     		mov	r1, r3
 10637 0998 2E4A     		ldr	r2, .L488+4
 10638 099a 0B46     		mov	r3, r1
 10639 099c 5B00     		lsls	r3, r3, #1
 10640 099e 0B44     		add	r3, r3, r1
 10641 09a0 1B01     		lsls	r3, r3, #4
 10642 09a2 1344     		add	r3, r3, r2
 10643 09a4 03F5DB73 		add	r3, r3, #438
 10644 09a8 0322     		movs	r2, #3
 10645 09aa 1A70     		strb	r2, [r3]
1423:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 10646              		.loc 1 1423 0
 10647 09ac 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10648 09ae 2949     		ldr	r1, .L488+4
 10649 09b0 1346     		mov	r3, r2
 10650 09b2 DB00     		lsls	r3, r3, #3
 10651 09b4 9B1A     		subs	r3, r3, r2
 10652 09b6 1B01     		lsls	r3, r3, #4
 10653 09b8 0B44     		add	r3, r3, r1
 10654 09ba 03F58873 		add	r3, r3, #272
 10655 09be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10656 09c0 1946     		mov	r1, r3
 10657 09c2 244A     		ldr	r2, .L488+4
 10658 09c4 0B46     		mov	r3, r1
 10659 09c6 5B00     		lsls	r3, r3, #1
 10660 09c8 0B44     		add	r3, r3, r1
 10661 09ca 1B01     		lsls	r3, r3, #4
 10662 09cc 1344     		add	r3, r3, r2
 10663 09ce 03F2B713 		addw	r3, r3, #439
 10664 09d2 FF22     		movs	r2, #255
 10665 09d4 1A70     		strb	r2, [r3]
1424:..\src/command_processing.c ****                 
1425:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1426:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 10666              		.loc 1 1426 0
 10667 09d6 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10668 09d8 1E49     		ldr	r1, .L488+4
 10669 09da 1346     		mov	r3, r2
 10670 09dc DB00     		lsls	r3, r3, #3
 10671 09de 9B1A     		subs	r3, r3, r2
 10672 09e0 1B01     		lsls	r3, r3, #4
 10673 09e2 0B44     		add	r3, r3, r1
 10674 09e4 03F21113 		addw	r3, r3, #273
 10675 09e8 0122     		movs	r2, #1
 10676 09ea 1A70     		strb	r2, [r3]
1427:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 10677              		.loc 1 1427 0
 10678 09ec 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10679 09ee 1949     		ldr	r1, .L488+4
 10680 09f0 1346     		mov	r3, r2
 10681 09f2 DB00     		lsls	r3, r3, #3
 10682 09f4 9B1A     		subs	r3, r3, r2
 10683 09f6 1B01     		lsls	r3, r3, #4
 10684 09f8 0B44     		add	r3, r3, r1
 10685 09fa 03F58973 		add	r3, r3, #274
 10686 09fe 0122     		movs	r2, #1
 10687 0a00 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 244


1428:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 10688              		.loc 1 1428 0
 10689 0a02 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10690 0a04 1349     		ldr	r1, .L488+4
 10691 0a06 1346     		mov	r3, r2
 10692 0a08 DB00     		lsls	r3, r3, #3
 10693 0a0a 9B1A     		subs	r3, r3, r2
 10694 0a0c 1B01     		lsls	r3, r3, #4
 10695 0a0e 0B44     		add	r3, r3, r1
 10696 0a10 E433     		adds	r3, r3, #228
 10697 0a12 0022     		movs	r2, #0
 10698 0a14 1A60     		str	r2, [r3]
1429:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[0].encod
 10699              		.loc 1 1429 0
 10700 0a16 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10701 0a18 0E4B     		ldr	r3, .L488+4
 10702 0a1a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 10703 0a1e 1846     		mov	r0, r3
 10704 0a20 0C49     		ldr	r1, .L488+4
 10705 0a22 0346     		mov	r3, r0
 10706 0a24 5B00     		lsls	r3, r3, #1
 10707 0a26 0344     		add	r3, r3, r0
 10708 0a28 1B01     		lsls	r3, r3, #4
 10709 0a2a 0B44     		add	r3, r3, r1
 10710 0a2c 03F29513 		addw	r3, r3, #405
 10711 0a30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10712 0a32 1946     		mov	r1, r3
 10713 0a34 4FF47A53 		mov	r3, #16000
 10714 0a38 03FA01F1 		lsl	r1, r3, r1
 10715 0a3c 0548     		ldr	r0, .L488+4
 10716 0a3e 1346     		mov	r3, r2
 10717 0a40 DB00     		lsls	r3, r3, #3
 10718 0a42 9B1A     		subs	r3, r3, r2
 10719 0a44 1B01     		lsls	r3, r3, #4
 10720 0a46 0344     		add	r3, r3, r0
 10721 0a48 E833     		adds	r3, r3, #232
 10722 0a4a 1960     		str	r1, [r3]
1430:..\src/command_processing.c ****             }    
1431:..\src/command_processing.c **** 
1432:..\src/command_processing.c ****             break; 
 10723              		.loc 1 1432 0
 10724 0a4c 00F050BD 		b	.L480
 10725              	.L489:
 10726              		.align	2
 10727              	.L488:
 10728 0a50 00000000 		.word	g_rx
 10729 0a54 00000000 		.word	g_mem
 10730 0a58 00000000 		.word	reset_last_value_flag
 10731              	.L394:
1433:..\src/command_processing.c **** 
1434:..\src/command_processing.c ****         case 31:        //Reset counters - uint8
1435:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 10732              		.loc 1 1435 0
 10733 0a5c AA4B     		ldr	r3, .L490
 10734 0a5e DB78     		ldrb	r3, [r3, #3]
 10735 0a60 BB74     		strb	r3, [r7, #18]
1436:..\src/command_processing.c ****             if (aux_uchar) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 245


 10736              		.loc 1 1436 0
 10737 0a62 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10738 0a64 002B     		cmp	r3, #0
 10739 0a66 05D0     		beq	.L439
1437:..\src/command_processing.c ****                 reset_counters();
 10740              		.loc 1 1437 0
 10741 0a68 FFF7FEFF 		bl	reset_counters
1438:..\src/command_processing.c ****                 g_mem.dev.reset_counters = FALSE;
 10742              		.loc 1 1438 0
 10743 0a6c A74B     		ldr	r3, .L490+4
 10744 0a6e 0022     		movs	r2, #0
 10745 0a70 83F8A820 		strb	r2, [r3, #168]
 10746              	.L439:
1439:..\src/command_processing.c ****             }
1440:..\src/command_processing.c ****             
1441:..\src/command_processing.c ****             if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 10747              		.loc 1 1441 0
 10748 0a74 A64B     		ldr	r3, .L490+8
 10749 0a76 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 10750 0a7a 012B     		cmp	r3, #1
 10751 0a7c 40F03A85 		bne	.L481
1442:..\src/command_processing.c ****                 // Set date of maintenance from RTC
1443:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_DATE_RD);
 10752              		.loc 1 1443 0
 10753 0a80 8720     		movs	r0, #135
 10754 0a82 FFF7FEFF 		bl	DS1302_read
 10755 0a86 0346     		mov	r3, r0
 10756 0a88 BB74     		strb	r3, [r7, #18]
1444:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[0] = (aux_uchar/16) * 10 + aux_uchar%16;    //day
 10757              		.loc 1 1444 0
 10758 0a8a BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10759 0a8c 1B09     		lsrs	r3, r3, #4
 10760 0a8e DBB2     		uxtb	r3, r3
 10761 0a90 1A46     		mov	r2, r3
 10762 0a92 9200     		lsls	r2, r2, #2
 10763 0a94 1344     		add	r3, r3, r2
 10764 0a96 5B00     		lsls	r3, r3, #1
 10765 0a98 DAB2     		uxtb	r2, r3
 10766 0a9a BB7C     		ldrb	r3, [r7, #18]
 10767 0a9c 03F00F03 		and	r3, r3, #15
 10768 0aa0 DBB2     		uxtb	r3, r3
 10769 0aa2 1344     		add	r3, r3, r2
 10770 0aa4 DAB2     		uxtb	r2, r3
 10771 0aa6 994B     		ldr	r3, .L490+4
 10772 0aa8 83F8A420 		strb	r2, [r3, #164]
1445:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_MONTH_RD);
 10773              		.loc 1 1445 0
 10774 0aac 8920     		movs	r0, #137
 10775 0aae FFF7FEFF 		bl	DS1302_read
 10776 0ab2 0346     		mov	r3, r0
 10777 0ab4 BB74     		strb	r3, [r7, #18]
1446:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[1] = (aux_uchar/16) * 10 + aux_uchar%16;    // mo
 10778              		.loc 1 1446 0
 10779 0ab6 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10780 0ab8 1B09     		lsrs	r3, r3, #4
 10781 0aba DBB2     		uxtb	r3, r3
 10782 0abc 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 246


 10783 0abe 9200     		lsls	r2, r2, #2
 10784 0ac0 1344     		add	r3, r3, r2
 10785 0ac2 5B00     		lsls	r3, r3, #1
 10786 0ac4 DAB2     		uxtb	r2, r3
 10787 0ac6 BB7C     		ldrb	r3, [r7, #18]
 10788 0ac8 03F00F03 		and	r3, r3, #15
 10789 0acc DBB2     		uxtb	r3, r3
 10790 0ace 1344     		add	r3, r3, r2
 10791 0ad0 DAB2     		uxtb	r2, r3
 10792 0ad2 8E4B     		ldr	r3, .L490+4
 10793 0ad4 83F8A520 		strb	r2, [r3, #165]
1447:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_YEAR_RD);
 10794              		.loc 1 1447 0
 10795 0ad8 8D20     		movs	r0, #141
 10796 0ada FFF7FEFF 		bl	DS1302_read
 10797 0ade 0346     		mov	r3, r0
 10798 0ae0 BB74     		strb	r3, [r7, #18]
1448:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[2] = (aux_uchar/16) * 10 + aux_uchar%16;         
 10799              		.loc 1 1448 0
 10800 0ae2 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10801 0ae4 1B09     		lsrs	r3, r3, #4
 10802 0ae6 DBB2     		uxtb	r3, r3
 10803 0ae8 1A46     		mov	r2, r3
 10804 0aea 9200     		lsls	r2, r2, #2
 10805 0aec 1344     		add	r3, r3, r2
 10806 0aee 5B00     		lsls	r3, r3, #1
 10807 0af0 DAB2     		uxtb	r2, r3
 10808 0af2 BB7C     		ldrb	r3, [r7, #18]
 10809 0af4 03F00F03 		and	r3, r3, #15
 10810 0af8 DBB2     		uxtb	r3, r3
 10811 0afa 1344     		add	r3, r3, r2
 10812 0afc DAB2     		uxtb	r2, r3
 10813 0afe 834B     		ldr	r3, .L490+4
 10814 0b00 83F8A620 		strb	r2, [r3, #166]
1449:..\src/command_processing.c ****             }
1450:..\src/command_processing.c ****             break;             
 10815              		.loc 1 1450 0
 10816 0b04 00F0F6BC 		b	.L481
 10817              	.L395:
 10818              	.LBB19:
1451:..\src/command_processing.c ****             
1452:..\src/command_processing.c ****         case 32:         //Current Time
1453:..\src/command_processing.c ****             for (uint8 i=0; i<6; i++){
 10819              		.loc 1 1453 0
 10820 0b08 0023     		movs	r3, #0
 10821 0b0a 7B75     		strb	r3, [r7, #21]
 10822 0b0c 0CE0     		b	.L441
 10823              	.L442:
1454:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10824              		.loc 1 1454 0 discriminator 3
 10825 0b0e 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10826 0b10 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 10827 0b12 0332     		adds	r2, r2, #3
 10828 0b14 7C49     		ldr	r1, .L490
 10829 0b16 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 10830 0b18 7C4A     		ldr	r2, .L490+4
 10831 0b1a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 247


 10832 0b1c 0A46     		mov	r2, r1
 10833 0b1e 83F82022 		strb	r2, [r3, #544]
1453:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10834              		.loc 1 1453 0 discriminator 3
 10835 0b22 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10836 0b24 0133     		adds	r3, r3, #1
 10837 0b26 7B75     		strb	r3, [r7, #21]
 10838              	.L441:
1453:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10839              		.loc 1 1453 0 is_stmt 0 discriminator 1
 10840 0b28 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10841 0b2a 052B     		cmp	r3, #5
 10842 0b2c EFD9     		bls	.L442
 10843              	.LBE19:
1455:..\src/command_processing.c ****             }
1456:..\src/command_processing.c ****             
1457:..\src/command_processing.c ****             if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 10844              		.loc 1 1457 0 is_stmt 1
 10845 0b2e 774B     		ldr	r3, .L490+4
 10846 0b30 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 10847 0b34 012B     		cmp	r3, #1
 10848 0b36 40F0DF84 		bne	.L482
1458:..\src/command_processing.c ****                 set_RTC_time();
 10849              		.loc 1 1458 0
 10850 0b3a FFF7FEFF 		bl	set_RTC_time
1459:..\src/command_processing.c ****             }
1460:..\src/command_processing.c ****             break;
 10851              		.loc 1 1460 0
 10852 0b3e 00F0DBBC 		b	.L482
 10853              	.L396:
1461:..\src/command_processing.c ****            
1462:..\src/command_processing.c ****         case 38:        // First Motor Driver Type
1463:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 10854              		.loc 1 1463 0
 10855 0b42 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10856 0b44 704B     		ldr	r3, .L490
 10857 0b46 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 10858 0b48 7049     		ldr	r1, .L490+4
 10859 0b4a 1346     		mov	r3, r2
 10860 0b4c DB00     		lsls	r3, r3, #3
 10861 0b4e 9B1A     		subs	r3, r3, r2
 10862 0b50 1B01     		lsls	r3, r3, #4
 10863 0b52 0B44     		add	r3, r3, r1
 10864 0b54 E233     		adds	r3, r3, #226
 10865 0b56 0246     		mov	r2, r0
 10866 0b58 1A70     		strb	r2, [r3]
1464:..\src/command_processing.c ****             MOTOR_DRIVER_TYPE_Write((g_mem.motor[1].motor_driver_type << 1) | g_mem.motor[0].motor_
 10867              		.loc 1 1464 0
 10868 0b5a 6C4B     		ldr	r3, .L490+4
 10869 0b5c 93F85231 		ldrb	r3, [r3, #338]	@ zero_extendqisi2
 10870 0b60 5B00     		lsls	r3, r3, #1
 10871 0b62 5AB2     		sxtb	r2, r3
 10872 0b64 694B     		ldr	r3, .L490+4
 10873 0b66 93F8E230 		ldrb	r3, [r3, #226]	@ zero_extendqisi2
 10874 0b6a 5BB2     		sxtb	r3, r3
 10875 0b6c 1343     		orrs	r3, r3, r2
 10876 0b6e 5BB2     		sxtb	r3, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 248


 10877 0b70 DBB2     		uxtb	r3, r3
 10878 0b72 1846     		mov	r0, r3
 10879 0b74 FFF7FEFF 		bl	MOTOR_DRIVER_TYPE_Write
1465:..\src/command_processing.c ****             break;
 10880              		.loc 1 1465 0
 10881 0b78 00F0C1BC 		b	.L418
 10882              	.L397:
1466:..\src/command_processing.c ****             
1467:..\src/command_processing.c ****         case 44:         // Second Motor Position PID
1468:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 10883              		.loc 1 1468 0
 10884 0b7c FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10885 0b7e 6449     		ldr	r1, .L490+8
 10886 0b80 1346     		mov	r3, r2
 10887 0b82 DB00     		lsls	r3, r3, #3
 10888 0b84 9B1A     		subs	r3, r3, r2
 10889 0b86 1B01     		lsls	r3, r3, #4
 10890 0b88 0B44     		add	r3, r3, r1
 10891 0b8a 03F20F13 		addw	r3, r3, #271
 10892 0b8e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10893 0b90 032B     		cmp	r3, #3
 10894 0b92 00F08680 		beq	.L444
1469:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 10895              		.loc 1 1469 0
 10896 0b96 5F4B     		ldr	r3, .L490+12
 10897 0b98 1B68     		ldr	r3, [r3]	@ float
 10898 0b9a FB60     		str	r3, [r7, #12]	@ float
1470:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10899              		.loc 1 1470 0
 10900 0b9c 0023     		movs	r3, #0
 10901 0b9e BB75     		strb	r3, [r7, #22]
 10902 0ba0 0EE0     		b	.L445
 10903              	.L446:
1471:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10904              		.loc 1 1471 0 discriminator 3
 10905 0ba2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10906 0ba4 C3F10303 		rsb	r3, r3, #3
 10907 0ba8 07F10802 		add	r2, r7, #8
 10908 0bac 1344     		add	r3, r3, r2
 10909 0bae BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10910 0bb0 07F10C01 		add	r1, r7, #12
 10911 0bb4 0A44     		add	r2, r2, r1
 10912 0bb6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10913 0bb8 1A70     		strb	r2, [r3]
1470:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10914              		.loc 1 1470 0 discriminator 3
 10915 0bba BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10916 0bbc 0133     		adds	r3, r3, #1
 10917 0bbe BB75     		strb	r3, [r7, #22]
 10918              	.L445:
1470:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10919              		.loc 1 1470 0 is_stmt 0 discriminator 1
 10920 0bc0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10921 0bc2 032B     		cmp	r3, #3
 10922 0bc4 EDD9     		bls	.L446
1472:..\src/command_processing.c ****                 }
1473:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p = aux_float2 * 65536;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 249


 10923              		.loc 1 1473 0 is_stmt 1
 10924 0bc6 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10925 0bc8 BB68     		ldr	r3, [r7, #8]	@ float
 10926 0bca 4FF08F41 		mov	r1, #1199570944
 10927 0bce 1846     		mov	r0, r3
 10928 0bd0 FFF7FEFF 		bl	__aeabi_fmul
 10929 0bd4 0346     		mov	r3, r0
 10930 0bd6 1846     		mov	r0, r3
 10931 0bd8 FFF7FEFF 		bl	__aeabi_f2iz
 10932 0bdc 0146     		mov	r1, r0
 10933 0bde 4B4A     		ldr	r2, .L490+4
 10934 0be0 2346     		mov	r3, r4
 10935 0be2 DB00     		lsls	r3, r3, #3
 10936 0be4 1B1B     		subs	r3, r3, r4
 10937 0be6 1B01     		lsls	r3, r3, #4
 10938 0be8 1344     		add	r3, r3, r2
 10939 0bea B033     		adds	r3, r3, #176
 10940 0bec 1960     		str	r1, [r3]
1474:..\src/command_processing.c ****                 
1475:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 10941              		.loc 1 1475 0
 10942 0bee 4A4B     		ldr	r3, .L490+16
 10943 0bf0 1B68     		ldr	r3, [r3]	@ float
 10944 0bf2 FB60     		str	r3, [r7, #12]	@ float
1476:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10945              		.loc 1 1476 0
 10946 0bf4 0023     		movs	r3, #0
 10947 0bf6 BB75     		strb	r3, [r7, #22]
 10948 0bf8 0EE0     		b	.L447
 10949              	.L448:
1477:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10950              		.loc 1 1477 0 discriminator 3
 10951 0bfa BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10952 0bfc C3F10303 		rsb	r3, r3, #3
 10953 0c00 07F10802 		add	r2, r7, #8
 10954 0c04 1344     		add	r3, r3, r2
 10955 0c06 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10956 0c08 07F10C01 		add	r1, r7, #12
 10957 0c0c 0A44     		add	r2, r2, r1
 10958 0c0e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10959 0c10 1A70     		strb	r2, [r3]
1476:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10960              		.loc 1 1476 0 discriminator 3
 10961 0c12 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10962 0c14 0133     		adds	r3, r3, #1
 10963 0c16 BB75     		strb	r3, [r7, #22]
 10964              	.L447:
1476:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10965              		.loc 1 1476 0 is_stmt 0 discriminator 1
 10966 0c18 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10967 0c1a 032B     		cmp	r3, #3
 10968 0c1c EDD9     		bls	.L448
1478:..\src/command_processing.c ****                 }
1479:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i = aux_float2 * 65536;
 10969              		.loc 1 1479 0 is_stmt 1
 10970 0c1e FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10971 0c20 BB68     		ldr	r3, [r7, #8]	@ float
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 250


 10972 0c22 4FF08F41 		mov	r1, #1199570944
 10973 0c26 1846     		mov	r0, r3
 10974 0c28 FFF7FEFF 		bl	__aeabi_fmul
 10975 0c2c 0346     		mov	r3, r0
 10976 0c2e 1846     		mov	r0, r3
 10977 0c30 FFF7FEFF 		bl	__aeabi_f2iz
 10978 0c34 0146     		mov	r1, r0
 10979 0c36 354A     		ldr	r2, .L490+4
 10980 0c38 2346     		mov	r3, r4
 10981 0c3a DB00     		lsls	r3, r3, #3
 10982 0c3c 1B1B     		subs	r3, r3, r4
 10983 0c3e 1B01     		lsls	r3, r3, #4
 10984 0c40 1344     		add	r3, r3, r2
 10985 0c42 B433     		adds	r3, r3, #180
 10986 0c44 1960     		str	r1, [r3]
1480:..\src/command_processing.c ****                 
1481:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 10987              		.loc 1 1481 0
 10988 0c46 354B     		ldr	r3, .L490+20
 10989 0c48 1B68     		ldr	r3, [r3]	@ float
 10990 0c4a FB60     		str	r3, [r7, #12]	@ float
1482:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10991              		.loc 1 1482 0
 10992 0c4c 0023     		movs	r3, #0
 10993 0c4e BB75     		strb	r3, [r7, #22]
 10994 0c50 0EE0     		b	.L449
 10995              	.L450:
1483:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10996              		.loc 1 1483 0 discriminator 3
 10997 0c52 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10998 0c54 C3F10303 		rsb	r3, r3, #3
 10999 0c58 07F10802 		add	r2, r7, #8
 11000 0c5c 1344     		add	r3, r3, r2
 11001 0c5e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11002 0c60 07F10C01 		add	r1, r7, #12
 11003 0c64 0A44     		add	r2, r2, r1
 11004 0c66 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11005 0c68 1A70     		strb	r2, [r3]
1482:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11006              		.loc 1 1482 0 discriminator 3
 11007 0c6a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11008 0c6c 0133     		adds	r3, r3, #1
 11009 0c6e BB75     		strb	r3, [r7, #22]
 11010              	.L449:
1482:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11011              		.loc 1 1482 0 is_stmt 0 discriminator 1
 11012 0c70 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11013 0c72 032B     		cmp	r3, #3
 11014 0c74 EDD9     		bls	.L450
1484:..\src/command_processing.c ****                 }
1485:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d = aux_float2 * 65536;
 11015              		.loc 1 1485 0 is_stmt 1
 11016 0c76 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11017 0c78 BB68     		ldr	r3, [r7, #8]	@ float
 11018 0c7a 4FF08F41 		mov	r1, #1199570944
 11019 0c7e 1846     		mov	r0, r3
 11020 0c80 FFF7FEFF 		bl	__aeabi_fmul
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 251


 11021 0c84 0346     		mov	r3, r0
 11022 0c86 1846     		mov	r0, r3
 11023 0c88 FFF7FEFF 		bl	__aeabi_f2iz
 11024 0c8c 0146     		mov	r1, r0
 11025 0c8e 1F4A     		ldr	r2, .L490+4
 11026 0c90 2346     		mov	r3, r4
 11027 0c92 DB00     		lsls	r3, r3, #3
 11028 0c94 1B1B     		subs	r3, r3, r4
 11029 0c96 1B01     		lsls	r3, r3, #4
 11030 0c98 1344     		add	r3, r3, r2
 11031 0c9a B833     		adds	r3, r3, #184
 11032 0c9c 1960     		str	r1, [r3]
1486:..\src/command_processing.c ****             }
1487:..\src/command_processing.c ****             else {
1488:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1489:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1490:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1491:..\src/command_processing.c ****                 }
1492:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1493:..\src/command_processing.c ****                 
1494:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1495:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1496:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1497:..\src/command_processing.c ****                 }
1498:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1499:..\src/command_processing.c ****                 
1500:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1501:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1502:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1503:..\src/command_processing.c ****                 }
1504:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1505:..\src/command_processing.c ****             }
1506:..\src/command_processing.c ****             break;
 11033              		.loc 1 1506 0
 11034 0c9e 00F02EBC 		b	.L418
 11035              	.L444:
1488:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11036              		.loc 1 1488 0
 11037 0ca2 1C4B     		ldr	r3, .L490+12
 11038 0ca4 1B68     		ldr	r3, [r3]	@ float
 11039 0ca6 FB60     		str	r3, [r7, #12]	@ float
1489:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11040              		.loc 1 1489 0
 11041 0ca8 0023     		movs	r3, #0
 11042 0caa BB75     		strb	r3, [r7, #22]
 11043 0cac 0EE0     		b	.L452
 11044              	.L453:
1490:..\src/command_processing.c ****                 }
 11045              		.loc 1 1490 0 discriminator 3
 11046 0cae BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11047 0cb0 C3F10303 		rsb	r3, r3, #3
 11048 0cb4 07F10802 		add	r2, r7, #8
 11049 0cb8 1344     		add	r3, r3, r2
 11050 0cba BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11051 0cbc 07F10C01 		add	r1, r7, #12
 11052 0cc0 0A44     		add	r2, r2, r1
 11053 0cc2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 252


 11054 0cc4 1A70     		strb	r2, [r3]
1489:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11055              		.loc 1 1489 0 discriminator 3
 11056 0cc6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11057 0cc8 0133     		adds	r3, r3, #1
 11058 0cca BB75     		strb	r3, [r7, #22]
 11059              	.L452:
1489:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11060              		.loc 1 1489 0 is_stmt 0 discriminator 1
 11061 0ccc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11062 0cce 032B     		cmp	r3, #3
 11063 0cd0 EDD9     		bls	.L453
1492:..\src/command_processing.c ****                 
 11064              		.loc 1 1492 0 is_stmt 1
 11065 0cd2 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11066 0cd4 BB68     		ldr	r3, [r7, #8]	@ float
 11067 0cd6 4FF08F41 		mov	r1, #1199570944
 11068 0cda 1846     		mov	r0, r3
 11069 0cdc FFF7FEFF 		bl	__aeabi_fmul
 11070 0ce0 0346     		mov	r3, r0
 11071 0ce2 1846     		mov	r0, r3
 11072 0ce4 FFF7FEFF 		bl	__aeabi_f2iz
 11073 0ce8 0146     		mov	r1, r0
 11074 0cea 084A     		ldr	r2, .L490+4
 11075 0cec 2346     		mov	r3, r4
 11076 0cee DB00     		lsls	r3, r3, #3
 11077 0cf0 1B1B     		subs	r3, r3, r4
 11078 0cf2 1B01     		lsls	r3, r3, #4
 11079 0cf4 1344     		add	r3, r3, r2
 11080 0cf6 C833     		adds	r3, r3, #200
 11081 0cf8 1960     		str	r1, [r3]
1494:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11082              		.loc 1 1494 0
 11083 0cfa 074B     		ldr	r3, .L490+16
 11084 0cfc 1B68     		ldr	r3, [r3]	@ float
 11085 0cfe FB60     		str	r3, [r7, #12]	@ float
1495:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11086              		.loc 1 1495 0
 11087 0d00 0023     		movs	r3, #0
 11088 0d02 BB75     		strb	r3, [r7, #22]
 11089 0d04 1BE0     		b	.L454
 11090              	.L491:
 11091 0d06 00BF     		.align	2
 11092              	.L490:
 11093 0d08 00000000 		.word	g_rx
 11094 0d0c 00000000 		.word	g_mem
 11095 0d10 00000000 		.word	c_mem
 11096 0d14 03000000 		.word	g_rx+3
 11097 0d18 07000000 		.word	g_rx+7
 11098 0d1c 0B000000 		.word	g_rx+11
 11099              	.L455:
1496:..\src/command_processing.c ****                 }
 11100              		.loc 1 1496 0 discriminator 3
 11101 0d20 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11102 0d22 C3F10303 		rsb	r3, r3, #3
 11103 0d26 07F10802 		add	r2, r7, #8
 11104 0d2a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 253


 11105 0d2c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11106 0d2e 07F10C01 		add	r1, r7, #12
 11107 0d32 0A44     		add	r2, r2, r1
 11108 0d34 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11109 0d36 1A70     		strb	r2, [r3]
1495:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11110              		.loc 1 1495 0 discriminator 3
 11111 0d38 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11112 0d3a 0133     		adds	r3, r3, #1
 11113 0d3c BB75     		strb	r3, [r7, #22]
 11114              	.L454:
1495:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11115              		.loc 1 1495 0 is_stmt 0 discriminator 1
 11116 0d3e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11117 0d40 032B     		cmp	r3, #3
 11118 0d42 EDD9     		bls	.L455
1498:..\src/command_processing.c ****                 
 11119              		.loc 1 1498 0 is_stmt 1
 11120 0d44 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11121 0d46 BB68     		ldr	r3, [r7, #8]	@ float
 11122 0d48 4FF08F41 		mov	r1, #1199570944
 11123 0d4c 1846     		mov	r0, r3
 11124 0d4e FFF7FEFF 		bl	__aeabi_fmul
 11125 0d52 0346     		mov	r3, r0
 11126 0d54 1846     		mov	r0, r3
 11127 0d56 FFF7FEFF 		bl	__aeabi_f2iz
 11128 0d5a 0146     		mov	r1, r0
 11129 0d5c B74A     		ldr	r2, .L492
 11130 0d5e 2346     		mov	r3, r4
 11131 0d60 DB00     		lsls	r3, r3, #3
 11132 0d62 1B1B     		subs	r3, r3, r4
 11133 0d64 1B01     		lsls	r3, r3, #4
 11134 0d66 1344     		add	r3, r3, r2
 11135 0d68 CC33     		adds	r3, r3, #204
 11136 0d6a 1960     		str	r1, [r3]
1500:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11137              		.loc 1 1500 0
 11138 0d6c B44B     		ldr	r3, .L492+4
 11139 0d6e 1B68     		ldr	r3, [r3]	@ float
 11140 0d70 FB60     		str	r3, [r7, #12]	@ float
1501:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11141              		.loc 1 1501 0
 11142 0d72 0023     		movs	r3, #0
 11143 0d74 BB75     		strb	r3, [r7, #22]
 11144 0d76 0EE0     		b	.L456
 11145              	.L457:
1502:..\src/command_processing.c ****                 }
 11146              		.loc 1 1502 0 discriminator 3
 11147 0d78 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11148 0d7a C3F10303 		rsb	r3, r3, #3
 11149 0d7e 07F10802 		add	r2, r7, #8
 11150 0d82 1344     		add	r3, r3, r2
 11151 0d84 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11152 0d86 07F10C01 		add	r1, r7, #12
 11153 0d8a 0A44     		add	r2, r2, r1
 11154 0d8c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11155 0d8e 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 254


1501:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11156              		.loc 1 1501 0 discriminator 3
 11157 0d90 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11158 0d92 0133     		adds	r3, r3, #1
 11159 0d94 BB75     		strb	r3, [r7, #22]
 11160              	.L456:
1501:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11161              		.loc 1 1501 0 is_stmt 0 discriminator 1
 11162 0d96 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11163 0d98 032B     		cmp	r3, #3
 11164 0d9a EDD9     		bls	.L457
1504:..\src/command_processing.c ****             }
 11165              		.loc 1 1504 0 is_stmt 1
 11166 0d9c FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11167 0d9e BB68     		ldr	r3, [r7, #8]	@ float
 11168 0da0 4FF08F41 		mov	r1, #1199570944
 11169 0da4 1846     		mov	r0, r3
 11170 0da6 FFF7FEFF 		bl	__aeabi_fmul
 11171 0daa 0346     		mov	r3, r0
 11172 0dac 1846     		mov	r0, r3
 11173 0dae FFF7FEFF 		bl	__aeabi_f2iz
 11174 0db2 0146     		mov	r1, r0
 11175 0db4 A14A     		ldr	r2, .L492
 11176 0db6 2346     		mov	r3, r4
 11177 0db8 DB00     		lsls	r3, r3, #3
 11178 0dba 1B1B     		subs	r3, r3, r4
 11179 0dbc 1B01     		lsls	r3, r3, #4
 11180 0dbe 1344     		add	r3, r3, r2
 11181 0dc0 D033     		adds	r3, r3, #208
 11182 0dc2 1960     		str	r1, [r3]
 11183              		.loc 1 1506 0
 11184 0dc4 9BE3     		b	.L418
 11185              	.L398:
1507:..\src/command_processing.c ****             
1508:..\src/command_processing.c ****         case 45:         // Second Motor Current PID
1509:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 11186              		.loc 1 1509 0
 11187 0dc6 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11188 0dc8 9E49     		ldr	r1, .L492+8
 11189 0dca 1346     		mov	r3, r2
 11190 0dcc DB00     		lsls	r3, r3, #3
 11191 0dce 9B1A     		subs	r3, r3, r2
 11192 0dd0 1B01     		lsls	r3, r3, #4
 11193 0dd2 0B44     		add	r3, r3, r1
 11194 0dd4 03F20F13 		addw	r3, r3, #271
 11195 0dd8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11196 0dda 032B     		cmp	r3, #3
 11197 0ddc 00F08580 		beq	.L458
1510:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 11198              		.loc 1 1510 0
 11199 0de0 994B     		ldr	r3, .L492+12
 11200 0de2 1B68     		ldr	r3, [r3]	@ float
 11201 0de4 FB60     		str	r3, [r7, #12]	@ float
1511:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11202              		.loc 1 1511 0
 11203 0de6 0023     		movs	r3, #0
 11204 0de8 BB75     		strb	r3, [r7, #22]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 255


 11205 0dea 0EE0     		b	.L459
 11206              	.L460:
1512:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11207              		.loc 1 1512 0 discriminator 3
 11208 0dec BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11209 0dee C3F10303 		rsb	r3, r3, #3
 11210 0df2 07F10802 		add	r2, r7, #8
 11211 0df6 1344     		add	r3, r3, r2
 11212 0df8 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11213 0dfa 07F10C01 		add	r1, r7, #12
 11214 0dfe 0A44     		add	r2, r2, r1
 11215 0e00 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11216 0e02 1A70     		strb	r2, [r3]
1511:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11217              		.loc 1 1511 0 discriminator 3
 11218 0e04 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11219 0e06 0133     		adds	r3, r3, #1
 11220 0e08 BB75     		strb	r3, [r7, #22]
 11221              	.L459:
1511:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11222              		.loc 1 1511 0 is_stmt 0 discriminator 1
 11223 0e0a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11224 0e0c 032B     		cmp	r3, #3
 11225 0e0e EDD9     		bls	.L460
1513:..\src/command_processing.c ****                 }
1514:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c = aux_float2 * 65536;
 11226              		.loc 1 1514 0 is_stmt 1
 11227 0e10 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11228 0e12 BB68     		ldr	r3, [r7, #8]	@ float
 11229 0e14 4FF08F41 		mov	r1, #1199570944
 11230 0e18 1846     		mov	r0, r3
 11231 0e1a FFF7FEFF 		bl	__aeabi_fmul
 11232 0e1e 0346     		mov	r3, r0
 11233 0e20 1846     		mov	r0, r3
 11234 0e22 FFF7FEFF 		bl	__aeabi_f2iz
 11235 0e26 0146     		mov	r1, r0
 11236 0e28 844A     		ldr	r2, .L492
 11237 0e2a 2346     		mov	r3, r4
 11238 0e2c DB00     		lsls	r3, r3, #3
 11239 0e2e 1B1B     		subs	r3, r3, r4
 11240 0e30 1B01     		lsls	r3, r3, #4
 11241 0e32 1344     		add	r3, r3, r2
 11242 0e34 BC33     		adds	r3, r3, #188
 11243 0e36 1960     		str	r1, [r3]
1515:..\src/command_processing.c ****                 
1516:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 11244              		.loc 1 1516 0
 11245 0e38 844B     		ldr	r3, .L492+16
 11246 0e3a 1B68     		ldr	r3, [r3]	@ float
 11247 0e3c FB60     		str	r3, [r7, #12]	@ float
1517:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11248              		.loc 1 1517 0
 11249 0e3e 0023     		movs	r3, #0
 11250 0e40 BB75     		strb	r3, [r7, #22]
 11251 0e42 0EE0     		b	.L461
 11252              	.L462:
1518:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 256


 11253              		.loc 1 1518 0 discriminator 3
 11254 0e44 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11255 0e46 C3F10303 		rsb	r3, r3, #3
 11256 0e4a 07F10802 		add	r2, r7, #8
 11257 0e4e 1344     		add	r3, r3, r2
 11258 0e50 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11259 0e52 07F10C01 		add	r1, r7, #12
 11260 0e56 0A44     		add	r2, r2, r1
 11261 0e58 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11262 0e5a 1A70     		strb	r2, [r3]
1517:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11263              		.loc 1 1517 0 discriminator 3
 11264 0e5c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11265 0e5e 0133     		adds	r3, r3, #1
 11266 0e60 BB75     		strb	r3, [r7, #22]
 11267              	.L461:
1517:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11268              		.loc 1 1517 0 is_stmt 0 discriminator 1
 11269 0e62 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11270 0e64 032B     		cmp	r3, #3
 11271 0e66 EDD9     		bls	.L462
1519:..\src/command_processing.c ****                 }
1520:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c = aux_float2 * 65536;
 11272              		.loc 1 1520 0 is_stmt 1
 11273 0e68 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11274 0e6a BB68     		ldr	r3, [r7, #8]	@ float
 11275 0e6c 4FF08F41 		mov	r1, #1199570944
 11276 0e70 1846     		mov	r0, r3
 11277 0e72 FFF7FEFF 		bl	__aeabi_fmul
 11278 0e76 0346     		mov	r3, r0
 11279 0e78 1846     		mov	r0, r3
 11280 0e7a FFF7FEFF 		bl	__aeabi_f2iz
 11281 0e7e 0146     		mov	r1, r0
 11282 0e80 6E4A     		ldr	r2, .L492
 11283 0e82 2346     		mov	r3, r4
 11284 0e84 DB00     		lsls	r3, r3, #3
 11285 0e86 1B1B     		subs	r3, r3, r4
 11286 0e88 1B01     		lsls	r3, r3, #4
 11287 0e8a 1344     		add	r3, r3, r2
 11288 0e8c C033     		adds	r3, r3, #192
 11289 0e8e 1960     		str	r1, [r3]
1521:..\src/command_processing.c ****                 
1522:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 11290              		.loc 1 1522 0
 11291 0e90 6B4B     		ldr	r3, .L492+4
 11292 0e92 1B68     		ldr	r3, [r3]	@ float
 11293 0e94 FB60     		str	r3, [r7, #12]	@ float
1523:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11294              		.loc 1 1523 0
 11295 0e96 0023     		movs	r3, #0
 11296 0e98 BB75     		strb	r3, [r7, #22]
 11297 0e9a 0EE0     		b	.L463
 11298              	.L464:
1524:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11299              		.loc 1 1524 0 discriminator 3
 11300 0e9c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11301 0e9e C3F10303 		rsb	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 257


 11302 0ea2 07F10802 		add	r2, r7, #8
 11303 0ea6 1344     		add	r3, r3, r2
 11304 0ea8 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11305 0eaa 07F10C01 		add	r1, r7, #12
 11306 0eae 0A44     		add	r2, r2, r1
 11307 0eb0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11308 0eb2 1A70     		strb	r2, [r3]
1523:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11309              		.loc 1 1523 0 discriminator 3
 11310 0eb4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11311 0eb6 0133     		adds	r3, r3, #1
 11312 0eb8 BB75     		strb	r3, [r7, #22]
 11313              	.L463:
1523:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11314              		.loc 1 1523 0 is_stmt 0 discriminator 1
 11315 0eba BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11316 0ebc 032B     		cmp	r3, #3
 11317 0ebe EDD9     		bls	.L464
1525:..\src/command_processing.c ****                 }
1526:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c = aux_float2 * 65536;
 11318              		.loc 1 1526 0 is_stmt 1
 11319 0ec0 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11320 0ec2 BB68     		ldr	r3, [r7, #8]	@ float
 11321 0ec4 4FF08F41 		mov	r1, #1199570944
 11322 0ec8 1846     		mov	r0, r3
 11323 0eca FFF7FEFF 		bl	__aeabi_fmul
 11324 0ece 0346     		mov	r3, r0
 11325 0ed0 1846     		mov	r0, r3
 11326 0ed2 FFF7FEFF 		bl	__aeabi_f2iz
 11327 0ed6 0146     		mov	r1, r0
 11328 0ed8 584A     		ldr	r2, .L492
 11329 0eda 2346     		mov	r3, r4
 11330 0edc DB00     		lsls	r3, r3, #3
 11331 0ede 1B1B     		subs	r3, r3, r4
 11332 0ee0 1B01     		lsls	r3, r3, #4
 11333 0ee2 1344     		add	r3, r3, r2
 11334 0ee4 C433     		adds	r3, r3, #196
 11335 0ee6 1960     		str	r1, [r3]
1527:..\src/command_processing.c ****             }
1528:..\src/command_processing.c ****             else {
1529:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1530:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1531:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1532:..\src/command_processing.c ****                 }
1533:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1534:..\src/command_processing.c ****                 
1535:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1536:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1537:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1538:..\src/command_processing.c ****                 }
1539:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1540:..\src/command_processing.c ****                 
1541:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1542:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1543:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1544:..\src/command_processing.c ****                 }
1545:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 258


1546:..\src/command_processing.c ****             }            
1547:..\src/command_processing.c ****             break;  
 11336              		.loc 1 1547 0
 11337 0ee8 09E3     		b	.L418
 11338              	.L458:
1529:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11339              		.loc 1 1529 0
 11340 0eea 574B     		ldr	r3, .L492+12
 11341 0eec 1B68     		ldr	r3, [r3]	@ float
 11342 0eee FB60     		str	r3, [r7, #12]	@ float
1530:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11343              		.loc 1 1530 0
 11344 0ef0 0023     		movs	r3, #0
 11345 0ef2 BB75     		strb	r3, [r7, #22]
 11346 0ef4 0EE0     		b	.L466
 11347              	.L467:
1531:..\src/command_processing.c ****                 }
 11348              		.loc 1 1531 0 discriminator 3
 11349 0ef6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11350 0ef8 C3F10303 		rsb	r3, r3, #3
 11351 0efc 07F10802 		add	r2, r7, #8
 11352 0f00 1344     		add	r3, r3, r2
 11353 0f02 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11354 0f04 07F10C01 		add	r1, r7, #12
 11355 0f08 0A44     		add	r2, r2, r1
 11356 0f0a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11357 0f0c 1A70     		strb	r2, [r3]
1530:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11358              		.loc 1 1530 0 discriminator 3
 11359 0f0e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11360 0f10 0133     		adds	r3, r3, #1
 11361 0f12 BB75     		strb	r3, [r7, #22]
 11362              	.L466:
1530:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11363              		.loc 1 1530 0 is_stmt 0 discriminator 1
 11364 0f14 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11365 0f16 032B     		cmp	r3, #3
 11366 0f18 EDD9     		bls	.L467
1533:..\src/command_processing.c ****                 
 11367              		.loc 1 1533 0 is_stmt 1
 11368 0f1a FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11369 0f1c BB68     		ldr	r3, [r7, #8]	@ float
 11370 0f1e 4FF08F41 		mov	r1, #1199570944
 11371 0f22 1846     		mov	r0, r3
 11372 0f24 FFF7FEFF 		bl	__aeabi_fmul
 11373 0f28 0346     		mov	r3, r0
 11374 0f2a 1846     		mov	r0, r3
 11375 0f2c FFF7FEFF 		bl	__aeabi_f2iz
 11376 0f30 0146     		mov	r1, r0
 11377 0f32 424A     		ldr	r2, .L492
 11378 0f34 2346     		mov	r3, r4
 11379 0f36 DB00     		lsls	r3, r3, #3
 11380 0f38 1B1B     		subs	r3, r3, r4
 11381 0f3a 1B01     		lsls	r3, r3, #4
 11382 0f3c 1344     		add	r3, r3, r2
 11383 0f3e D433     		adds	r3, r3, #212
 11384 0f40 1960     		str	r1, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 259


1535:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11385              		.loc 1 1535 0
 11386 0f42 424B     		ldr	r3, .L492+16
 11387 0f44 1B68     		ldr	r3, [r3]	@ float
 11388 0f46 FB60     		str	r3, [r7, #12]	@ float
1536:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11389              		.loc 1 1536 0
 11390 0f48 0023     		movs	r3, #0
 11391 0f4a BB75     		strb	r3, [r7, #22]
 11392 0f4c 0EE0     		b	.L468
 11393              	.L469:
1537:..\src/command_processing.c ****                 }
 11394              		.loc 1 1537 0 discriminator 3
 11395 0f4e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11396 0f50 C3F10303 		rsb	r3, r3, #3
 11397 0f54 07F10802 		add	r2, r7, #8
 11398 0f58 1344     		add	r3, r3, r2
 11399 0f5a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11400 0f5c 07F10C01 		add	r1, r7, #12
 11401 0f60 0A44     		add	r2, r2, r1
 11402 0f62 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11403 0f64 1A70     		strb	r2, [r3]
1536:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11404              		.loc 1 1536 0 discriminator 3
 11405 0f66 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11406 0f68 0133     		adds	r3, r3, #1
 11407 0f6a BB75     		strb	r3, [r7, #22]
 11408              	.L468:
1536:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11409              		.loc 1 1536 0 is_stmt 0 discriminator 1
 11410 0f6c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11411 0f6e 032B     		cmp	r3, #3
 11412 0f70 EDD9     		bls	.L469
1539:..\src/command_processing.c ****                 
 11413              		.loc 1 1539 0 is_stmt 1
 11414 0f72 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11415 0f74 BB68     		ldr	r3, [r7, #8]	@ float
 11416 0f76 4FF08F41 		mov	r1, #1199570944
 11417 0f7a 1846     		mov	r0, r3
 11418 0f7c FFF7FEFF 		bl	__aeabi_fmul
 11419 0f80 0346     		mov	r3, r0
 11420 0f82 1846     		mov	r0, r3
 11421 0f84 FFF7FEFF 		bl	__aeabi_f2iz
 11422 0f88 0146     		mov	r1, r0
 11423 0f8a 2C4A     		ldr	r2, .L492
 11424 0f8c 2346     		mov	r3, r4
 11425 0f8e DB00     		lsls	r3, r3, #3
 11426 0f90 1B1B     		subs	r3, r3, r4
 11427 0f92 1B01     		lsls	r3, r3, #4
 11428 0f94 1344     		add	r3, r3, r2
 11429 0f96 D833     		adds	r3, r3, #216
 11430 0f98 1960     		str	r1, [r3]
1541:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11431              		.loc 1 1541 0
 11432 0f9a 294B     		ldr	r3, .L492+4
 11433 0f9c 1B68     		ldr	r3, [r3]	@ float
 11434 0f9e FB60     		str	r3, [r7, #12]	@ float
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 260


1542:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11435              		.loc 1 1542 0
 11436 0fa0 0023     		movs	r3, #0
 11437 0fa2 BB75     		strb	r3, [r7, #22]
 11438 0fa4 0EE0     		b	.L470
 11439              	.L471:
1543:..\src/command_processing.c ****                 }
 11440              		.loc 1 1543 0 discriminator 3
 11441 0fa6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11442 0fa8 C3F10303 		rsb	r3, r3, #3
 11443 0fac 07F10802 		add	r2, r7, #8
 11444 0fb0 1344     		add	r3, r3, r2
 11445 0fb2 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11446 0fb4 07F10C01 		add	r1, r7, #12
 11447 0fb8 0A44     		add	r2, r2, r1
 11448 0fba 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11449 0fbc 1A70     		strb	r2, [r3]
1542:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11450              		.loc 1 1542 0 discriminator 3
 11451 0fbe BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11452 0fc0 0133     		adds	r3, r3, #1
 11453 0fc2 BB75     		strb	r3, [r7, #22]
 11454              	.L470:
1542:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11455              		.loc 1 1542 0 is_stmt 0 discriminator 1
 11456 0fc4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11457 0fc6 032B     		cmp	r3, #3
 11458 0fc8 EDD9     		bls	.L471
1545:..\src/command_processing.c ****             }            
 11459              		.loc 1 1545 0 is_stmt 1
 11460 0fca FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11461 0fcc BB68     		ldr	r3, [r7, #8]	@ float
 11462 0fce 4FF08F41 		mov	r1, #1199570944
 11463 0fd2 1846     		mov	r0, r3
 11464 0fd4 FFF7FEFF 		bl	__aeabi_fmul
 11465 0fd8 0346     		mov	r3, r0
 11466 0fda 1846     		mov	r0, r3
 11467 0fdc FFF7FEFF 		bl	__aeabi_f2iz
 11468 0fe0 0146     		mov	r1, r0
 11469 0fe2 164A     		ldr	r2, .L492
 11470 0fe4 2346     		mov	r3, r4
 11471 0fe6 DB00     		lsls	r3, r3, #3
 11472 0fe8 1B1B     		subs	r3, r3, r4
 11473 0fea 1B01     		lsls	r3, r3, #4
 11474 0fec 1344     		add	r3, r3, r2
 11475 0fee DC33     		adds	r3, r3, #220
 11476 0ff0 1960     		str	r1, [r3]
 11477              		.loc 1 1547 0
 11478 0ff2 84E2     		b	.L418
 11479              	.L399:
1548:..\src/command_processing.c ****             
1549:..\src/command_processing.c ****         case 47:         // Second Motor Input mode
1550:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].input_mode = g_rx.buffer[3];
 11480              		.loc 1 1550 0
 11481 0ff4 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11482 0ff6 164B     		ldr	r3, .L492+20
 11483 0ff8 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 261


 11484 0ffa 1049     		ldr	r1, .L492
 11485 0ffc 1346     		mov	r3, r2
 11486 0ffe DB00     		lsls	r3, r3, #3
 11487 1000 9B1A     		subs	r3, r3, r2
 11488 1002 1B01     		lsls	r3, r3, #4
 11489 1004 0B44     		add	r3, r3, r1
 11490 1006 03F58773 		add	r3, r3, #270
 11491 100a 0246     		mov	r2, r0
 11492 100c 1A70     		strb	r2, [r3]
1551:..\src/command_processing.c ****             
1552:..\src/command_processing.c ****             // Hold the actual position
1553:..\src/command_processing.c ****             g_refNew[SECOND_MOTOR_IDX].pos = g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].pos
 11493              		.loc 1 1553 0
 11494 100e F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11495 1010 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11496 1012 0A48     		ldr	r0, .L492
 11497 1014 1346     		mov	r3, r2
 11498 1016 DB00     		lsls	r3, r3, #3
 11499 1018 9B1A     		subs	r3, r3, r2
 11500 101a 1B01     		lsls	r3, r3, #4
 11501 101c 0344     		add	r3, r3, r0
 11502 101e 03F58873 		add	r3, r3, #272
 11503 1022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11504 1024 1846     		mov	r0, r3
 11505 1026 0B4A     		ldr	r2, .L492+24
 11506 1028 3423     		movs	r3, #52
 11507 102a 03FB00F3 		mul	r3, r3, r0
 11508 102e 1344     		add	r3, r3, r2
 11509 1030 1A68     		ldr	r2, [r3]
 11510 1032 0948     		ldr	r0, .L492+28
 11511 1034 0B01     		lsls	r3, r1, #4
 11512 1036 0344     		add	r3, r3, r0
 11513 1038 1A60     		str	r2, [r3]
1554:..\src/command_processing.c ****             break;   
 11514              		.loc 1 1554 0
 11515 103a 60E2     		b	.L418
 11516              	.L493:
 11517              		.align	2
 11518              	.L492:
 11519 103c 00000000 		.word	g_mem
 11520 1040 0B000000 		.word	g_rx+11
 11521 1044 00000000 		.word	c_mem
 11522 1048 03000000 		.word	g_rx+3
 11523 104c 07000000 		.word	g_rx+7
 11524 1050 00000000 		.word	g_rx
 11525 1054 00000000 		.word	g_meas
 11526 1058 00000000 		.word	g_refNew
 11527              	.L400:
1555:..\src/command_processing.c **** 
1556:..\src/command_processing.c ****         case 50:         // Second Motor Measurement Offset
1557:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
 11528              		.loc 1 1557 0
 11529 105c 0023     		movs	r3, #0
 11530 105e FB75     		strb	r3, [r7, #23]
 11531 1060 7EE0     		b	.L472
 11532              	.L473:
1558:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 262


 11533              		.loc 1 1558 0 discriminator 3
 11534 1062 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11535 1064 9049     		ldr	r1, .L494
 11536 1066 1346     		mov	r3, r2
 11537 1068 DB00     		lsls	r3, r3, #3
 11538 106a 9B1A     		subs	r3, r3, r2
 11539 106c 1B01     		lsls	r3, r3, #4
 11540 106e 0B44     		add	r3, r3, r1
 11541 1070 03F58873 		add	r3, r3, #272
 11542 1074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11543 1076 1C46     		mov	r4, r3
 11544 1078 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 11545 107a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11546 107c 5B00     		lsls	r3, r3, #1
 11547 107e 0333     		adds	r3, r3, #3
 11548 1080 8A49     		ldr	r1, .L494+4
 11549 1082 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11550 1084 1B02     		lsls	r3, r3, #8
 11551 1086 19B2     		sxth	r1, r3
 11552 1088 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11553 108a 0233     		adds	r3, r3, #2
 11554 108c 5B00     		lsls	r3, r3, #1
 11555 108e 8748     		ldr	r0, .L494+4
 11556 1090 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 11557 1092 1BB2     		sxth	r3, r3
 11558 1094 0B43     		orrs	r3, r3, r1
 11559 1096 1BB2     		sxth	r3, r3
 11560 1098 1846     		mov	r0, r3
 11561 109a 8349     		ldr	r1, .L494
 11562 109c 2346     		mov	r3, r4
 11563 109e 5B00     		lsls	r3, r3, #1
 11564 10a0 2344     		add	r3, r3, r4
 11565 10a2 9B00     		lsls	r3, r3, #2
 11566 10a4 1344     		add	r3, r3, r2
 11567 10a6 6633     		adds	r3, r3, #102
 11568 10a8 41F82300 		str	r0, [r1, r3, lsl #2]
1559:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.mo
 11569              		.loc 1 1559 0 discriminator 3
 11570 10ac FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11571 10ae 7E49     		ldr	r1, .L494
 11572 10b0 1346     		mov	r3, r2
 11573 10b2 DB00     		lsls	r3, r3, #3
 11574 10b4 9B1A     		subs	r3, r3, r2
 11575 10b6 1B01     		lsls	r3, r3, #4
 11576 10b8 0B44     		add	r3, r3, r1
 11577 10ba 03F58873 		add	r3, r3, #272
 11578 10be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11579 10c0 1D46     		mov	r5, r3
 11580 10c2 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 11581 10c4 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11582 10c6 7848     		ldr	r0, .L494
 11583 10c8 1346     		mov	r3, r2
 11584 10ca DB00     		lsls	r3, r3, #3
 11585 10cc 9B1A     		subs	r3, r3, r2
 11586 10ce 1B01     		lsls	r3, r3, #4
 11587 10d0 0344     		add	r3, r3, r0
 11588 10d2 03F58873 		add	r3, r3, #272
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 263


 11589 10d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11590 10d8 1C46     		mov	r4, r3
 11591 10da FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 11592 10dc 7248     		ldr	r0, .L494
 11593 10de 2346     		mov	r3, r4
 11594 10e0 5B00     		lsls	r3, r3, #1
 11595 10e2 2344     		add	r3, r3, r4
 11596 10e4 9B00     		lsls	r3, r3, #2
 11597 10e6 1344     		add	r3, r3, r2
 11598 10e8 6633     		adds	r3, r3, #102
 11599 10ea 50F82300 		ldr	r0, [r0, r3, lsl #2]
 11600 10ee FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11601 10f0 6D4C     		ldr	r4, .L494
 11602 10f2 1346     		mov	r3, r2
 11603 10f4 DB00     		lsls	r3, r3, #3
 11604 10f6 9B1A     		subs	r3, r3, r2
 11605 10f8 1B01     		lsls	r3, r3, #4
 11606 10fa 2344     		add	r3, r3, r4
 11607 10fc 03F58873 		add	r3, r3, #272
 11608 1100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11609 1102 1E46     		mov	r6, r3
 11610 1104 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 11611 1106 684C     		ldr	r4, .L494
 11612 1108 3346     		mov	r3, r6
 11613 110a 5B00     		lsls	r3, r3, #1
 11614 110c 3344     		add	r3, r3, r6
 11615 110e 1B01     		lsls	r3, r3, #4
 11616 1110 2344     		add	r3, r3, r4
 11617 1112 1344     		add	r3, r3, r2
 11618 1114 03F29513 		addw	r3, r3, #405
 11619 1118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11620 111a 00FA03F2 		lsl	r2, r0, r3
 11621 111e 6248     		ldr	r0, .L494
 11622 1120 2B46     		mov	r3, r5
 11623 1122 5B00     		lsls	r3, r3, #1
 11624 1124 2B44     		add	r3, r3, r5
 11625 1126 9B00     		lsls	r3, r3, #2
 11626 1128 0B44     		add	r3, r3, r1
 11627 112a 6633     		adds	r3, r3, #102
 11628 112c 40F82320 		str	r2, [r0, r3, lsl #2]
1560:..\src/command_processing.c **** 
1561:..\src/command_processing.c ****                 g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].rot[i] = 0;
 11629              		.loc 1 1561 0 discriminator 3
 11630 1130 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11631 1132 5D49     		ldr	r1, .L494
 11632 1134 1346     		mov	r3, r2
 11633 1136 DB00     		lsls	r3, r3, #3
 11634 1138 9B1A     		subs	r3, r3, r2
 11635 113a 1B01     		lsls	r3, r3, #4
 11636 113c 0B44     		add	r3, r3, r1
 11637 113e 03F58873 		add	r3, r3, #272
 11638 1142 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11639 1144 1846     		mov	r0, r3
 11640 1146 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11641 1148 5949     		ldr	r1, .L494+8
 11642 114a 3422     		movs	r2, #52
 11643 114c 02FB00F2 		mul	r2, r2, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 264


 11644 1150 0A44     		add	r2, r2, r1
 11645 1152 1344     		add	r3, r3, r2
 11646 1154 1833     		adds	r3, r3, #24
 11647 1156 0022     		movs	r2, #0
 11648 1158 1A70     		strb	r2, [r3]
1557:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 11649              		.loc 1 1557 0 discriminator 3
 11650 115a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11651 115c 0133     		adds	r3, r3, #1
 11652 115e FB75     		strb	r3, [r7, #23]
 11653              	.L472:
1557:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 11654              		.loc 1 1557 0 is_stmt 0 discriminator 1
 11655 1160 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11656 1162 022B     		cmp	r3, #2
 11657 1164 7FF67DAF 		bls	.L473
1562:..\src/command_processing.c ****             }
1563:..\src/command_processing.c ****             reset_last_value_flag[SECOND_MOTOR_IDX] = 1;
 11658              		.loc 1 1563 0 is_stmt 1
 11659 1168 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 11660 116a 524A     		ldr	r2, .L494+12
 11661 116c 0121     		movs	r1, #1
 11662 116e D154     		strb	r1, [r2, r3]
1564:..\src/command_processing.c ****             break;
 11663              		.loc 1 1564 0
 11664 1170 C5E1     		b	.L418
 11665              	.L401:
1565:..\src/command_processing.c ****     
1566:..\src/command_processing.c ****         case 53:        // Second Motor Position limits
1567:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]
 11666              		.loc 1 1567 0
 11667 1172 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11668 1174 4D4B     		ldr	r3, .L494+4
 11669 1176 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 11670 1178 1906     		lsls	r1, r3, #24
 11671 117a 4C4B     		ldr	r3, .L494+4
 11672 117c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 11673 117e 1B04     		lsls	r3, r3, #16
 11674 1180 1943     		orrs	r1, r1, r3
 11675 1182 4A4B     		ldr	r3, .L494+4
 11676 1184 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 11677 1186 1B02     		lsls	r3, r3, #8
 11678 1188 0B43     		orrs	r3, r3, r1
 11679 118a 4849     		ldr	r1, .L494+4
 11680 118c 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 11681 118e 1943     		orrs	r1, r1, r3
 11682 1190 4548     		ldr	r0, .L494
 11683 1192 1346     		mov	r3, r2
 11684 1194 DB00     		lsls	r3, r3, #3
 11685 1196 9B1A     		subs	r3, r3, r2
 11686 1198 1B01     		lsls	r3, r3, #4
 11687 119a 0344     		add	r3, r3, r0
 11688 119c E433     		adds	r3, r3, #228
 11689 119e 1960     		str	r1, [r3]
1568:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]
 11690              		.loc 1 1568 0
 11691 11a0 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 265


 11692 11a2 424B     		ldr	r3, .L494+4
 11693 11a4 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 11694 11a6 1906     		lsls	r1, r3, #24
 11695 11a8 404B     		ldr	r3, .L494+4
 11696 11aa 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 11697 11ac 1B04     		lsls	r3, r3, #16
 11698 11ae 1943     		orrs	r1, r1, r3
 11699 11b0 3E4B     		ldr	r3, .L494+4
 11700 11b2 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 11701 11b4 1B02     		lsls	r3, r3, #8
 11702 11b6 0B43     		orrs	r3, r3, r1
 11703 11b8 3C49     		ldr	r1, .L494+4
 11704 11ba 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 11705 11bc 1943     		orrs	r1, r1, r3
 11706 11be 3A48     		ldr	r0, .L494
 11707 11c0 1346     		mov	r3, r2
 11708 11c2 DB00     		lsls	r3, r3, #3
 11709 11c4 9B1A     		subs	r3, r3, r2
 11710 11c6 1B01     		lsls	r3, r3, #4
 11711 11c8 0344     		add	r3, r3, r0
 11712 11ca E833     		adds	r3, r3, #232
 11713 11cc 1960     		str	r1, [r3]
1569:..\src/command_processing.c **** 
1570:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf <
 11714              		.loc 1 1570 0
 11715 11ce FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11716 11d0 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11717 11d2 3548     		ldr	r0, .L494
 11718 11d4 0B46     		mov	r3, r1
 11719 11d6 DB00     		lsls	r3, r3, #3
 11720 11d8 5B1A     		subs	r3, r3, r1
 11721 11da 1B01     		lsls	r3, r3, #4
 11722 11dc 0344     		add	r3, r3, r0
 11723 11de E433     		adds	r3, r3, #228
 11724 11e0 1868     		ldr	r0, [r3]
 11725 11e2 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11726 11e4 304C     		ldr	r4, .L494
 11727 11e6 0B46     		mov	r3, r1
 11728 11e8 DB00     		lsls	r3, r3, #3
 11729 11ea 5B1A     		subs	r3, r3, r1
 11730 11ec 1B01     		lsls	r3, r3, #4
 11731 11ee 2344     		add	r3, r3, r4
 11732 11f0 03F58873 		add	r3, r3, #272
 11733 11f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11734 11f6 1C46     		mov	r4, r3
 11735 11f8 2B49     		ldr	r1, .L494
 11736 11fa 2346     		mov	r3, r4
 11737 11fc 5B00     		lsls	r3, r3, #1
 11738 11fe 2344     		add	r3, r3, r4
 11739 1200 1B01     		lsls	r3, r3, #4
 11740 1202 0B44     		add	r3, r3, r1
 11741 1204 03F29513 		addw	r3, r3, #405
 11742 1208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11743 120a 00FA03F1 		lsl	r1, r0, r3
 11744 120e 2648     		ldr	r0, .L494
 11745 1210 1346     		mov	r3, r2
 11746 1212 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 266


 11747 1214 9B1A     		subs	r3, r3, r2
 11748 1216 1B01     		lsls	r3, r3, #4
 11749 1218 0344     		add	r3, r3, r0
 11750 121a E433     		adds	r3, r3, #228
 11751 121c 1960     		str	r1, [r3]
1571:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup <
 11752              		.loc 1 1571 0
 11753 121e FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11754 1220 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11755 1222 2148     		ldr	r0, .L494
 11756 1224 0B46     		mov	r3, r1
 11757 1226 DB00     		lsls	r3, r3, #3
 11758 1228 5B1A     		subs	r3, r3, r1
 11759 122a 1B01     		lsls	r3, r3, #4
 11760 122c 0344     		add	r3, r3, r0
 11761 122e E833     		adds	r3, r3, #232
 11762 1230 1868     		ldr	r0, [r3]
 11763 1232 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11764 1234 1C4C     		ldr	r4, .L494
 11765 1236 0B46     		mov	r3, r1
 11766 1238 DB00     		lsls	r3, r3, #3
 11767 123a 5B1A     		subs	r3, r3, r1
 11768 123c 1B01     		lsls	r3, r3, #4
 11769 123e 2344     		add	r3, r3, r4
 11770 1240 03F58873 		add	r3, r3, #272
 11771 1244 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11772 1246 1C46     		mov	r4, r3
 11773 1248 1749     		ldr	r1, .L494
 11774 124a 2346     		mov	r3, r4
 11775 124c 5B00     		lsls	r3, r3, #1
 11776 124e 2344     		add	r3, r3, r4
 11777 1250 1B01     		lsls	r3, r3, #4
 11778 1252 0B44     		add	r3, r3, r1
 11779 1254 03F29513 		addw	r3, r3, #405
 11780 1258 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11781 125a 00FA03F1 		lsl	r1, r0, r3
 11782 125e 1248     		ldr	r0, .L494
 11783 1260 1346     		mov	r3, r2
 11784 1262 DB00     		lsls	r3, r3, #3
 11785 1264 9B1A     		subs	r3, r3, r2
 11786 1266 1B01     		lsls	r3, r3, #4
 11787 1268 0344     		add	r3, r3, r0
 11788 126a E833     		adds	r3, r3, #232
 11789 126c 1960     		str	r1, [r3]
1572:..\src/command_processing.c ****             break;
 11790              		.loc 1 1572 0
 11791 126e 46E1     		b	.L418
 11792              	.L402:
1573:..\src/command_processing.c ****             
1574:..\src/command_processing.c ****         case 61:        // Second Motor Driver Type
1575:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 11793              		.loc 1 1575 0
 11794 1270 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11795 1272 0E4B     		ldr	r3, .L494+4
 11796 1274 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 11797 1276 0C49     		ldr	r1, .L494
 11798 1278 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 267


 11799 127a DB00     		lsls	r3, r3, #3
 11800 127c 9B1A     		subs	r3, r3, r2
 11801 127e 1B01     		lsls	r3, r3, #4
 11802 1280 0B44     		add	r3, r3, r1
 11803 1282 E233     		adds	r3, r3, #226
 11804 1284 0246     		mov	r2, r0
 11805 1286 1A70     		strb	r2, [r3]
1576:..\src/command_processing.c ****             MOTOR_DRIVER_TYPE_Write((g_mem.motor[1].motor_driver_type << 1) | g_mem.motor[0].motor_
 11806              		.loc 1 1576 0
 11807 1288 074B     		ldr	r3, .L494
 11808 128a 93F85231 		ldrb	r3, [r3, #338]	@ zero_extendqisi2
 11809 128e 5B00     		lsls	r3, r3, #1
 11810 1290 5AB2     		sxtb	r2, r3
 11811 1292 054B     		ldr	r3, .L494
 11812 1294 93F8E230 		ldrb	r3, [r3, #226]	@ zero_extendqisi2
 11813 1298 5BB2     		sxtb	r3, r3
 11814 129a 1343     		orrs	r3, r3, r2
 11815 129c 5BB2     		sxtb	r3, r3
 11816 129e DBB2     		uxtb	r3, r3
 11817 12a0 1846     		mov	r0, r3
 11818 12a2 FFF7FEFF 		bl	MOTOR_DRIVER_TYPE_Write
1577:..\src/command_processing.c ****             break;
 11819              		.loc 1 1577 0
 11820 12a6 2AE1     		b	.L418
 11821              	.L495:
 11822              		.align	2
 11823              	.L494:
 11824 12a8 00000000 		.word	g_mem
 11825 12ac 00000000 		.word	g_rx
 11826 12b0 00000000 		.word	g_meas
 11827 12b4 00000000 		.word	reset_last_value_flag
 11828              	.L403:
1578:..\src/command_processing.c **** 
1579:..\src/command_processing.c ****         case 75:        // Device type
1580:..\src/command_processing.c ****             g_mem.dev.dev_type = g_rx.buffer[3];
 11829              		.loc 1 1580 0
 11830 12b8 934B     		ldr	r3, .L496
 11831 12ba DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 11832 12bc 934B     		ldr	r3, .L496+4
 11833 12be 83F8AC20 		strb	r2, [r3, #172]
1581:..\src/command_processing.c ****             
1582:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    // change also gears parameters
 11834              		.loc 1 1582 0
 11835 12c2 924B     		ldr	r3, .L496+4
 11836 12c4 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 11837 12c8 002B     		cmp	r3, #0
 11838 12ca 40F0A480 		bne	.L474
1583:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 11839              		.loc 1 1583 0
 11840 12ce 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11841 12d0 8E49     		ldr	r1, .L496+4
 11842 12d2 1346     		mov	r3, r2
 11843 12d4 DB00     		lsls	r3, r3, #3
 11844 12d6 9B1A     		subs	r3, r3, r2
 11845 12d8 1B01     		lsls	r3, r3, #4
 11846 12da 0B44     		add	r3, r3, r1
 11847 12dc 03F58873 		add	r3, r3, #272
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 268


 11848 12e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11849 12e2 1946     		mov	r1, r3
 11850 12e4 894A     		ldr	r2, .L496+4
 11851 12e6 0B46     		mov	r3, r1
 11852 12e8 5B00     		lsls	r3, r3, #1
 11853 12ea 0B44     		add	r3, r3, r1
 11854 12ec 1B01     		lsls	r3, r3, #4
 11855 12ee 1344     		add	r3, r3, r2
 11856 12f0 03F5D873 		add	r3, r3, #432
 11857 12f4 0122     		movs	r2, #1
 11858 12f6 1A70     		strb	r2, [r3]
1584:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 11859              		.loc 1 1584 0
 11860 12f8 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11861 12fa 8449     		ldr	r1, .L496+4
 11862 12fc 1346     		mov	r3, r2
 11863 12fe DB00     		lsls	r3, r3, #3
 11864 1300 9B1A     		subs	r3, r3, r2
 11865 1302 1B01     		lsls	r3, r3, #4
 11866 1304 0B44     		add	r3, r3, r1
 11867 1306 03F58873 		add	r3, r3, #272
 11868 130a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11869 130c 1946     		mov	r1, r3
 11870 130e 7F4A     		ldr	r2, .L496+4
 11871 1310 0B46     		mov	r3, r1
 11872 1312 5B00     		lsls	r3, r3, #1
 11873 1314 0B44     		add	r3, r3, r1
 11874 1316 1B01     		lsls	r3, r3, #4
 11875 1318 1344     		add	r3, r3, r2
 11876 131a 03F2B513 		addw	r3, r3, #437
 11877 131e 2322     		movs	r2, #35
 11878 1320 1A70     		strb	r2, [r3]
1585:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 11879              		.loc 1 1585 0
 11880 1322 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11881 1324 7949     		ldr	r1, .L496+4
 11882 1326 1346     		mov	r3, r2
 11883 1328 DB00     		lsls	r3, r3, #3
 11884 132a 9B1A     		subs	r3, r3, r2
 11885 132c 1B01     		lsls	r3, r3, #4
 11886 132e 0B44     		add	r3, r3, r1
 11887 1330 03F58873 		add	r3, r3, #272
 11888 1334 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11889 1336 1946     		mov	r1, r3
 11890 1338 744A     		ldr	r2, .L496+4
 11891 133a 0B46     		mov	r3, r1
 11892 133c 5B00     		lsls	r3, r3, #1
 11893 133e 0B44     		add	r3, r3, r1
 11894 1340 1B01     		lsls	r3, r3, #4
 11895 1342 1344     		add	r3, r3, r2
 11896 1344 03F5DB73 		add	r3, r3, #438
 11897 1348 0322     		movs	r2, #3
 11898 134a 1A70     		strb	r2, [r3]
1586:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 11899              		.loc 1 1586 0
 11900 134c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11901 134e 6F49     		ldr	r1, .L496+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 269


 11902 1350 1346     		mov	r3, r2
 11903 1352 DB00     		lsls	r3, r3, #3
 11904 1354 9B1A     		subs	r3, r3, r2
 11905 1356 1B01     		lsls	r3, r3, #4
 11906 1358 0B44     		add	r3, r3, r1
 11907 135a 03F58873 		add	r3, r3, #272
 11908 135e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11909 1360 1946     		mov	r1, r3
 11910 1362 6A4A     		ldr	r2, .L496+4
 11911 1364 0B46     		mov	r3, r1
 11912 1366 5B00     		lsls	r3, r3, #1
 11913 1368 0B44     		add	r3, r3, r1
 11914 136a 1B01     		lsls	r3, r3, #4
 11915 136c 1344     		add	r3, r3, r2
 11916 136e 03F2B713 		addw	r3, r3, #439
 11917 1372 FF22     		movs	r2, #255
 11918 1374 1A70     		strb	r2, [r3]
1587:..\src/command_processing.c ****                 
1588:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1589:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 11919              		.loc 1 1589 0
 11920 1376 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11921 1378 644B     		ldr	r3, .L496+4
 11922 137a 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 11923 137e 6349     		ldr	r1, .L496+4
 11924 1380 1346     		mov	r3, r2
 11925 1382 DB00     		lsls	r3, r3, #3
 11926 1384 9B1A     		subs	r3, r3, r2
 11927 1386 1B01     		lsls	r3, r3, #4
 11928 1388 0B44     		add	r3, r3, r1
 11929 138a 03F58873 		add	r3, r3, #272
 11930 138e 0246     		mov	r2, r0
 11931 1390 1A70     		strb	r2, [r3]
1590:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 11932              		.loc 1 1590 0
 11933 1392 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11934 1394 5D49     		ldr	r1, .L496+4
 11935 1396 1346     		mov	r3, r2
 11936 1398 DB00     		lsls	r3, r3, #3
 11937 139a 9B1A     		subs	r3, r3, r2
 11938 139c 1B01     		lsls	r3, r3, #4
 11939 139e 0B44     		add	r3, r3, r1
 11940 13a0 03F21113 		addw	r3, r3, #273
 11941 13a4 0122     		movs	r2, #1
 11942 13a6 1A70     		strb	r2, [r3]
1591:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 11943              		.loc 1 1591 0
 11944 13a8 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11945 13aa 5849     		ldr	r1, .L496+4
 11946 13ac 1346     		mov	r3, r2
 11947 13ae DB00     		lsls	r3, r3, #3
 11948 13b0 9B1A     		subs	r3, r3, r2
 11949 13b2 1B01     		lsls	r3, r3, #4
 11950 13b4 0B44     		add	r3, r3, r1
 11951 13b6 03F58973 		add	r3, r3, #274
 11952 13ba 0122     		movs	r2, #1
 11953 13bc 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 270


1592:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 11954              		.loc 1 1592 0
 11955 13be 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11956 13c0 5249     		ldr	r1, .L496+4
 11957 13c2 1346     		mov	r3, r2
 11958 13c4 DB00     		lsls	r3, r3, #3
 11959 13c6 9B1A     		subs	r3, r3, r2
 11960 13c8 1B01     		lsls	r3, r3, #4
 11961 13ca 0B44     		add	r3, r3, r1
 11962 13cc E433     		adds	r3, r3, #228
 11963 13ce 0022     		movs	r2, #0
 11964 13d0 1A60     		str	r2, [r3]
1593:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[MOTOR_ID
 11965              		.loc 1 1593 0
 11966 13d2 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11967 13d4 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 11968 13d6 4D48     		ldr	r0, .L496+4
 11969 13d8 0B46     		mov	r3, r1
 11970 13da DB00     		lsls	r3, r3, #3
 11971 13dc 5B1A     		subs	r3, r3, r1
 11972 13de 1B01     		lsls	r3, r3, #4
 11973 13e0 0344     		add	r3, r3, r0
 11974 13e2 03F58873 		add	r3, r3, #272
 11975 13e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11976 13e8 1846     		mov	r0, r3
 11977 13ea 4849     		ldr	r1, .L496+4
 11978 13ec 0346     		mov	r3, r0
 11979 13ee 5B00     		lsls	r3, r3, #1
 11980 13f0 0344     		add	r3, r3, r0
 11981 13f2 1B01     		lsls	r3, r3, #4
 11982 13f4 0B44     		add	r3, r3, r1
 11983 13f6 03F29513 		addw	r3, r3, #405
 11984 13fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11985 13fc 1946     		mov	r1, r3
 11986 13fe 4FF47A53 		mov	r3, #16000
 11987 1402 03FA01F1 		lsl	r1, r3, r1
 11988 1406 4148     		ldr	r0, .L496+4
 11989 1408 1346     		mov	r3, r2
 11990 140a DB00     		lsls	r3, r3, #3
 11991 140c 9B1A     		subs	r3, r3, r2
 11992 140e 1B01     		lsls	r3, r3, #4
 11993 1410 0344     		add	r3, r3, r0
 11994 1412 E833     		adds	r3, r3, #232
 11995 1414 1960     		str	r1, [r3]
 11996              	.L474:
1594:..\src/command_processing.c ****             }      
1595:..\src/command_processing.c ****             
1596:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_2_MOTORS){    // activate also 2nd motor and double_
 11997              		.loc 1 1596 0
 11998 1416 3D4B     		ldr	r3, .L496+4
 11999 1418 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 12000 141c 042B     		cmp	r3, #4
 12001 141e 6DD1     		bne	.L483
1597:..\src/command_processing.c ****                 g_mem.dev.use_2nd_motor_flag = TRUE;
 12002              		.loc 1 1597 0
 12003 1420 3A4B     		ldr	r3, .L496+4
 12004 1422 0122     		movs	r2, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 271


 12005 1424 83F8A920 		strb	r2, [r3, #169]
1598:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 12006              		.loc 1 1598 0
 12007 1428 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 12008 142a 3849     		ldr	r1, .L496+4
 12009 142c 1346     		mov	r3, r2
 12010 142e DB00     		lsls	r3, r3, #3
 12011 1430 9B1A     		subs	r3, r3, r2
 12012 1432 1B01     		lsls	r3, r3, #4
 12013 1434 0B44     		add	r3, r3, r1
 12014 1436 03F58873 		add	r3, r3, #272
 12015 143a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12016 143c 1946     		mov	r1, r3
 12017 143e 334A     		ldr	r2, .L496+4
 12018 1440 0B46     		mov	r3, r1
 12019 1442 5B00     		lsls	r3, r3, #1
 12020 1444 0B44     		add	r3, r3, r1
 12021 1446 1B01     		lsls	r3, r3, #4
 12022 1448 1344     		add	r3, r3, r2
 12023 144a 03F5D873 		add	r3, r3, #432
 12024 144e 0122     		movs	r2, #1
 12025 1450 1A70     		strb	r2, [r3]
1599:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 12026              		.loc 1 1599 0
 12027 1452 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 12028 1454 2D49     		ldr	r1, .L496+4
 12029 1456 1346     		mov	r3, r2
 12030 1458 DB00     		lsls	r3, r3, #3
 12031 145a 9B1A     		subs	r3, r3, r2
 12032 145c 1B01     		lsls	r3, r3, #4
 12033 145e 0B44     		add	r3, r3, r1
 12034 1460 03F58873 		add	r3, r3, #272
 12035 1464 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12036 1466 1946     		mov	r1, r3
 12037 1468 284A     		ldr	r2, .L496+4
 12038 146a 0B46     		mov	r3, r1
 12039 146c 5B00     		lsls	r3, r3, #1
 12040 146e 0B44     		add	r3, r3, r1
 12041 1470 1B01     		lsls	r3, r3, #4
 12042 1472 1344     		add	r3, r3, r2
 12043 1474 03F5D873 		add	r3, r3, #432
 12044 1478 0122     		movs	r2, #1
 12045 147a 1A70     		strb	r2, [r3]
1600:..\src/command_processing.c ****             /*    
1601:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
1602:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)18000 << g_mem.enc[g_mem.motor[MOTOR_ID
1603:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = ((int32)(-25000)) << g_mem.enc[g_mem.mo
1604:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = 0;
1605:..\src/command_processing.c ****             */    
1606:..\src/command_processing.c ****                 for (i=0; i< NUM_OF_MOTORS; i++) {                     // Maxon DCX16S
 12046              		.loc 1 1606 0
 12047 147c 0023     		movs	r3, #0
 12048 147e FB75     		strb	r3, [r7, #23]
 12049 1480 2EE0     		b	.L476
 12050              	.L477:
1607:..\src/command_processing.c ****                     g_mem.motor[i].current_limit = 800;                // [mA]
 12051              		.loc 1 1607 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 272


 12052 1482 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 12053 1484 2149     		ldr	r1, .L496+4
 12054 1486 1346     		mov	r3, r2
 12055 1488 DB00     		lsls	r3, r3, #3
 12056 148a 9B1A     		subs	r3, r3, r2
 12057 148c 1B01     		lsls	r3, r3, #4
 12058 148e 0B44     		add	r3, r3, r1
 12059 1490 03F58673 		add	r3, r3, #268
 12060 1494 4FF44872 		mov	r2, #800
 12061 1498 1A80     		strh	r2, [r3]	@ movhi
1608:..\src/command_processing.c ****                     g_mem.motor[i].k_p           = 0.12 * 65536;
 12062              		.loc 1 1608 0 discriminator 3
 12063 149a FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 12064 149c 1B49     		ldr	r1, .L496+4
 12065 149e 1346     		mov	r3, r2
 12066 14a0 DB00     		lsls	r3, r3, #3
 12067 14a2 9B1A     		subs	r3, r3, r2
 12068 14a4 1B01     		lsls	r3, r3, #4
 12069 14a6 0B44     		add	r3, r3, r1
 12070 14a8 B033     		adds	r3, r3, #176
 12071 14aa 41F6B862 		movw	r2, #7864
 12072 14ae 1A60     		str	r2, [r3]
1609:..\src/command_processing.c ****                     g_mem.motor[i].k_i           =    0 * 65536;
 12073              		.loc 1 1609 0 discriminator 3
 12074 14b0 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 12075 14b2 1649     		ldr	r1, .L496+4
 12076 14b4 1346     		mov	r3, r2
 12077 14b6 DB00     		lsls	r3, r3, #3
 12078 14b8 9B1A     		subs	r3, r3, r2
 12079 14ba 1B01     		lsls	r3, r3, #4
 12080 14bc 0B44     		add	r3, r3, r1
 12081 14be B433     		adds	r3, r3, #180
 12082 14c0 0022     		movs	r2, #0
 12083 14c2 1A60     		str	r2, [r3]
1610:..\src/command_processing.c ****                     g_mem.motor[i].k_d           = 0.05 * 65536;
 12084              		.loc 1 1610 0 discriminator 3
 12085 14c4 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 12086 14c6 1149     		ldr	r1, .L496+4
 12087 14c8 1346     		mov	r3, r2
 12088 14ca DB00     		lsls	r3, r3, #3
 12089 14cc 9B1A     		subs	r3, r3, r2
 12090 14ce 1B01     		lsls	r3, r3, #4
 12091 14d0 0B44     		add	r3, r3, r1
 12092 14d2 B833     		adds	r3, r3, #184
 12093 14d4 40F6CC42 		movw	r2, #3276
 12094 14d8 1A60     		str	r2, [r3]
1606:..\src/command_processing.c ****                     g_mem.motor[i].current_limit = 800;                // [mA]
 12095              		.loc 1 1606 0 discriminator 3
 12096 14da FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 12097 14dc 0133     		adds	r3, r3, #1
 12098 14de FB75     		strb	r3, [r7, #23]
 12099              	.L476:
1606:..\src/command_processing.c ****                     g_mem.motor[i].current_limit = 800;                // [mA]
 12100              		.loc 1 1606 0 is_stmt 0 discriminator 1
 12101 14e0 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 12102 14e2 012B     		cmp	r3, #1
 12103 14e4 CDD9     		bls	.L477
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 273


1611:..\src/command_processing.c ****                 }
1612:..\src/command_processing.c ****             }      
1613:..\src/command_processing.c ****             
1614:..\src/command_processing.c ****             break;
 12104              		.loc 1 1614 0 is_stmt 1
 12105 14e6 09E0     		b	.L483
 12106              	.L478:
1615:..\src/command_processing.c ****             
1616:..\src/command_processing.c ****         default:
1617:..\src/command_processing.c ****             break;
 12107              		.loc 1 1617 0
 12108 14e8 00BF     		nop
 12109 14ea 08E0     		b	.L418
 12110              	.L479:
1404:..\src/command_processing.c ****             
 12111              		.loc 1 1404 0
 12112 14ec 00BF     		nop
 12113 14ee 06E0     		b	.L418
 12114              	.L480:
1432:..\src/command_processing.c **** 
 12115              		.loc 1 1432 0
 12116 14f0 00BF     		nop
 12117 14f2 04E0     		b	.L418
 12118              	.L481:
1450:..\src/command_processing.c ****             
 12119              		.loc 1 1450 0
 12120 14f4 00BF     		nop
 12121 14f6 02E0     		b	.L418
 12122              	.L482:
1460:..\src/command_processing.c ****            
 12123              		.loc 1 1460 0
 12124 14f8 00BF     		nop
 12125 14fa 00E0     		b	.L418
 12126              	.L483:
1614:..\src/command_processing.c ****             
 12127              		.loc 1 1614 0
 12128 14fc 00BF     		nop
 12129              	.L418:
1618:..\src/command_processing.c ****     }
1619:..\src/command_processing.c **** }
 12130              		.loc 1 1619 0 discriminator 1
 12131 14fe 00BF     		nop
 12132 1500 1C37     		adds	r7, r7, #28
 12133              		.cfi_def_cfa_offset 20
 12134 1502 BD46     		mov	sp, r7
 12135              		.cfi_def_cfa_register 13
 12136              		@ sp needed
 12137 1504 F0BD     		pop	{r4, r5, r6, r7, pc}
 12138              	.L497:
 12139 1506 00BF     		.align	2
 12140              	.L496:
 12141 1508 00000000 		.word	g_rx
 12142 150c 00000000 		.word	g_mem
 12143              		.cfi_endproc
 12144              	.LFE69:
 12145              		.size	set_custom_param, .-set_custom_param
 12146              		.section	.rodata
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 274


 12147 1096 0000     		.align	2
 12148              	.LC144:
 12149 1098 506F7274 		.ascii	"Port %u ID:\000"
 12149      20257520 
 12149      49443A00 
 12150              		.align	2
 12151              	.LC145:
 12152 10a4 2575202D 		.ascii	"%u - Device ID:\000"
 12152      20446576 
 12152      69636520 
 12152      49443A00 
 12153              		.align	2
 12154              	.LC146:
 12155 10b4 2575202D 		.ascii	"%u - IMU %d configuration:\000"
 12155      20494D55 
 12155      20256420 
 12155      636F6E66 
 12155      69677572 
 12156 10cf 00       		.align	2
 12157              	.LC147:
 12158 10d0 2575202D 		.ascii	"%u - SPI read delay:\000"
 12158      20535049 
 12158      20726561 
 12158      64206465 
 12158      6C61793A 
 12159 10e5 000000   		.align	2
 12160              	.LC148:
 12161 10e8 204E6F6E 		.ascii	" None\000"
 12161      6500
 12162 10ee 0000     		.align	2
 12163              	.LC149:
 12164 10f0 204C6F77 		.ascii	" Low\000"
 12164      00
 12165 10f5 000000   		.align	2
 12166              	.LC150:
 12167 10f8 20486967 		.ascii	" High\000"
 12167      6800
 12168 10fe 0000     		.align	2
 12169              	.LC142:
 12170 1100 4E756D62 		.ascii	"Number of connected IMUs:\000"
 12170      6572206F 
 12170      6620636F 
 12170      6E6E6563 
 12170      74656420 
 12171 111a 0000     		.align	2
 12172              	.LC143:
 12173 111c 4D616720 		.ascii	"Mag cal parameters:\000"
 12173      63616C20 
 12173      70617261 
 12173      6D657465 
 12173      72733A00 
 12174              		.section	.text.get_IMU_param_list,"ax",%progbits
 12175              		.align	2
 12176              		.global	get_IMU_param_list
 12177              		.thumb
 12178              		.thumb_func
 12179              		.type	get_IMU_param_list, %function
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 275


 12180              	get_IMU_param_list:
 12181              	.LFB70:
1620:..\src/command_processing.c **** 
1621:..\src/command_processing.c **** //==============================================================================
1622:..\src/command_processing.c **** //                                                        GET IMU PARAMETER LIST
1623:..\src/command_processing.c **** //==============================================================================
1624:..\src/command_processing.c **** 
1625:..\src/command_processing.c **** void get_IMU_param_list(uint16 index)
1626:..\src/command_processing.c **** {
 12182              		.loc 1 1626 0
 12183              		.cfi_startproc
 12184              		@ args = 0, pretend = 0, frame = 1704
 12185              		@ frame_needed = 1, uses_anonymous_args = 0
 12186 0000 B0B5     		push	{r4, r5, r7, lr}
 12187              		.cfi_def_cfa_offset 16
 12188              		.cfi_offset 4, -16
 12189              		.cfi_offset 5, -12
 12190              		.cfi_offset 7, -8
 12191              		.cfi_offset 14, -4
 12192 0002 ADF5D56D 		sub	sp, sp, #1704
 12193              		.cfi_def_cfa_offset 1720
 12194 0006 00AF     		add	r7, sp, #0
 12195              		.cfi_def_cfa_register 7
 12196 0008 0246     		mov	r2, r0
 12197 000a BB1D     		adds	r3, r7, #6
 12198 000c 1A80     		strh	r2, [r3]	@ movhi
1627:..\src/command_processing.c ****     //Package to be sent variables
1628:..\src/command_processing.c ****     uint8 packet_data[  PARAM_BYTE_SLOT   +     // Number of connected IMUs
 12199              		.loc 1 1628 0
 12200 000e 07F58A73 		add	r3, r7, #276
 12201 0012 0022     		movs	r2, #0
 12202 0014 1A60     		str	r2, [r3]
 12203 0016 0433     		adds	r3, r3, #4
 12204 0018 40F27552 		movw	r2, #1397
 12205 001c 0021     		movs	r1, #0
 12206 001e 1846     		mov	r0, r3
 12207 0020 FFF7FEFF 		bl	memset
1629:..\src/command_processing.c ****                         7*PARAM_BYTE_SLOT +     // IMUs ID  (1 port instead of 7)
1630:..\src/command_processing.c ****                         9*PARAM_BYTE_SLOT +     // Mag cal parameters (1 row instead of 9)
1631:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // 1 - Device ID
1632:..\src/command_processing.c ****                         PARAM_BYTE_SLOT*N_IMU_MAX + // IMU configurations
1633:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // SPI read delay
1634:..\src/command_processing.c ****                         PARAM_MENU_SLOT   + PARAM_BYTE_SLOT + 1 ] = "";
1635:..\src/command_processing.c ****     uint16 num_imus_id_params = 7;      //(1 port instead of 7)
 12208              		.loc 1 1635 0
 12209 0024 0723     		movs	r3, #7
 12210 0026 A7F89A36 		strh	r3, [r7, #1690]	@ movhi
1636:..\src/command_processing.c ****     uint16 num_mag_cal_params = 0;
 12211              		.loc 1 1636 0
 12212 002a 0023     		movs	r3, #0
 12213 002c A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1637:..\src/command_processing.c ****     uint16 first_imu_parameter = 2;
 12214              		.loc 1 1637 0
 12215 0030 0223     		movs	r3, #2
 12216 0032 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1638:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 12217              		.loc 1 1638 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 276


 12218 0036 B7F89A36 		ldrh	r3, [r7, #1690]
 12219 003a 5A1C     		adds	r2, r3, #1
1639:..\src/command_processing.c ****                            num_imus_id_params*PARAM_BYTE_SLOT +
 12220              		.loc 1 1639 0
 12221 003c B7F8A636 		ldrh	r3, [r7, #1702]
 12222 0040 1344     		add	r3, r3, r2
1640:..\src/command_processing.c ****                            num_mag_cal_params*PARAM_BYTE_SLOT +
 12223              		.loc 1 1640 0
 12224 0042 0133     		adds	r3, r3, #1
1638:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 12225              		.loc 1 1638 0
 12226 0044 9AB2     		uxth	r2, r3
 12227 0046 D24B     		ldr	r3, .L544
 12228 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12229 004a 9BB2     		uxth	r3, r3
 12230 004c 1344     		add	r3, r3, r2
 12231 004e 9BB2     		uxth	r3, r3
 12232 0050 1A46     		mov	r2, r3	@ movhi
 12233 0052 9200     		lsls	r2, r2, #2
 12234 0054 1344     		add	r3, r3, r2
 12235 0056 1A46     		mov	r2, r3	@ movhi
 12236 0058 9100     		lsls	r1, r2, #2
 12237 005a 1A46     		mov	r2, r3	@ movhi
 12238 005c 0B46     		mov	r3, r1	@ movhi
 12239 005e 1344     		add	r3, r3, r2
 12240 0060 5B00     		lsls	r3, r3, #1
 12241 0062 9BB2     		uxth	r3, r3
 12242 0064 FB33     		adds	r3, r3, #251
 12243 0066 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1641:..\src/command_processing.c ****                            PARAM_BYTE_SLOT   + 
1642:..\src/command_processing.c ****                            (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1643:..\src/command_processing.c ****                            PARAM_BYTE_SLOT + PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1644:..\src/command_processing.c **** 
1645:..\src/command_processing.c ****     //Auxiliary variables
1646:..\src/command_processing.c ****     uint16 CYDATA i, j, k, h;
1647:..\src/command_processing.c ****     uint16 start_byte = 0;
 12244              		.loc 1 1647 0
 12245 006a 0023     		movs	r3, #0
 12246 006c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1648:..\src/command_processing.c **** 
1649:..\src/command_processing.c ****     //Parameters menu string definitions
1650:..\src/command_processing.c ****     char n_imu_str[26]          = "Number of connected IMUs:";
 12247              		.loc 1 1650 0
 12248 0070 07F1F803 		add	r3, r7, #248
 12249 0074 C74A     		ldr	r2, .L544+4
 12250 0076 1C46     		mov	r4, r3
 12251 0078 1546     		mov	r5, r2
 12252 007a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 12253 007c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 12254 007e 95E80700 		ldmia	r5, {r0, r1, r2}
 12255 0082 03C4     		stmia	r4!, {r0, r1}
 12256 0084 2280     		strh	r2, [r4]	@ movhi
1651:..\src/command_processing.c ****     char ids_str[11]            = "";
 12257              		.loc 1 1651 0
 12258 0086 07F1EC03 		add	r3, r7, #236
 12259 008a 0022     		movs	r2, #0
 12260 008c 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 277


 12261 008e 0433     		adds	r3, r3, #4
 12262 0090 0022     		movs	r2, #0
 12263 0092 1A60     		str	r2, [r3]
 12264 0094 C3F80320 		str	r2, [r3, #3]	@ unaligned
1652:..\src/command_processing.c ****     char mag_param_str[20]      = "Mag cal parameters:";
 12265              		.loc 1 1652 0
 12266 0098 07F1D803 		add	r3, r7, #216
 12267 009c BE4A     		ldr	r2, .L544+8
 12268 009e 1C46     		mov	r4, r3
 12269 00a0 1546     		mov	r5, r2
 12270 00a2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 12271 00a4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 12272 00a6 2B68     		ldr	r3, [r5]
 12273 00a8 2360     		str	r3, [r4]
1653:..\src/command_processing.c ****     char id_str[16]             = "";
 12274              		.loc 1 1653 0
 12275 00aa 07F1C803 		add	r3, r7, #200
 12276 00ae 0022     		movs	r2, #0
 12277 00b0 1A60     		str	r2, [r3]
 12278 00b2 0433     		adds	r3, r3, #4
 12279 00b4 0022     		movs	r2, #0
 12280 00b6 1A60     		str	r2, [r3]
 12281 00b8 5A60     		str	r2, [r3, #4]
 12282 00ba 9A60     		str	r2, [r3, #8]
1654:..\src/command_processing.c ****     char imu_table_str[42]      = "";
 12283              		.loc 1 1654 0
 12284 00bc 07F19C03 		add	r3, r7, #156
 12285 00c0 0022     		movs	r2, #0
 12286 00c2 1A60     		str	r2, [r3]
 12287 00c4 0433     		adds	r3, r3, #4
 12288 00c6 2622     		movs	r2, #38
 12289 00c8 0021     		movs	r1, #0
 12290 00ca 1846     		mov	r0, r3
 12291 00cc FFF7FEFF 		bl	memset
1655:..\src/command_processing.c ****     char spi_read_delay_str[26] = "";
 12292              		.loc 1 1655 0
 12293 00d0 07F18003 		add	r3, r7, #128
 12294 00d4 0022     		movs	r2, #0
 12295 00d6 1A60     		str	r2, [r3]
 12296 00d8 0433     		adds	r3, r3, #4
 12297 00da 0022     		movs	r2, #0
 12298 00dc 1A60     		str	r2, [r3]
 12299 00de 5A60     		str	r2, [r3, #4]
 12300 00e0 9A60     		str	r2, [r3, #8]
 12301 00e2 DA60     		str	r2, [r3, #12]
 12302 00e4 1A61     		str	r2, [r3, #16]
 12303 00e6 9A82     		strh	r2, [r3, #20]	@ movhi
1656:..\src/command_processing.c ****     
1657:..\src/command_processing.c ****     //Strings lenghts
1658:..\src/command_processing.c ****     uint8 CYDATA id_str_len = strlen(id_str);
 12304              		.loc 1 1658 0
 12305 00e8 07F1C803 		add	r3, r7, #200
 12306 00ec 1846     		mov	r0, r3
 12307 00ee FFF7FEFF 		bl	strlen
 12308 00f2 0346     		mov	r3, r0
 12309 00f4 87F89336 		strb	r3, [r7, #1683]
1659:..\src/command_processing.c ****     uint8 CYDATA n_imu_str_len = strlen(n_imu_str);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 278


 12310              		.loc 1 1659 0
 12311 00f8 07F1F803 		add	r3, r7, #248
 12312 00fc 1846     		mov	r0, r3
 12313 00fe FFF7FEFF 		bl	strlen
 12314 0102 0346     		mov	r3, r0
 12315 0104 87F89236 		strb	r3, [r7, #1682]
1660:..\src/command_processing.c ****     uint8 CYDATA ids_str_len = strlen(ids_str);
 12316              		.loc 1 1660 0
 12317 0108 07F1EC03 		add	r3, r7, #236
 12318 010c 1846     		mov	r0, r3
 12319 010e FFF7FEFF 		bl	strlen
 12320 0112 0346     		mov	r3, r0
 12321 0114 87F89136 		strb	r3, [r7, #1681]
1661:..\src/command_processing.c ****     uint8 CYDATA mag_param_str_len = strlen(mag_param_str);
 12322              		.loc 1 1661 0
 12323 0118 07F1D803 		add	r3, r7, #216
 12324 011c 1846     		mov	r0, r3
 12325 011e FFF7FEFF 		bl	strlen
 12326 0122 0346     		mov	r3, r0
 12327 0124 87F89036 		strb	r3, [r7, #1680]
1662:..\src/command_processing.c ****     uint8 CYDATA imu_table_str_len = strlen(imu_table_str);
 12328              		.loc 1 1662 0
 12329 0128 07F19C03 		add	r3, r7, #156
 12330 012c 1846     		mov	r0, r3
 12331 012e FFF7FEFF 		bl	strlen
 12332 0132 0346     		mov	r3, r0
 12333 0134 87F88F36 		strb	r3, [r7, #1679]
1663:..\src/command_processing.c ****     uint8 CYDATA spi_read_delay_str_len = strlen(spi_read_delay_str);
 12334              		.loc 1 1663 0
 12335 0138 07F18003 		add	r3, r7, #128
 12336 013c 1846     		mov	r0, r3
 12337 013e FFF7FEFF 		bl	strlen
 12338 0142 0346     		mov	r3, r0
 12339 0144 87F89D36 		strb	r3, [r7, #1693]
1664:..\src/command_processing.c ****     
1665:..\src/command_processing.c ****     char spi_delay_menu[118]    = "";
 12340              		.loc 1 1665 0
 12341 0148 07F10803 		add	r3, r7, #8
 12342 014c 0022     		movs	r2, #0
 12343 014e 1A60     		str	r2, [r3]
 12344 0150 0433     		adds	r3, r3, #4
 12345 0152 7222     		movs	r2, #114
 12346 0154 0021     		movs	r1, #0
 12347 0156 1846     		mov	r0, r3
 12348 0158 FFF7FEFF 		bl	memset
1666:..\src/command_processing.c ****     uint8 CYDATA spi_delay_menu_len;
1667:..\src/command_processing.c ****  
1668:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 12349              		.loc 1 1668 0
 12350 015c 07F10800 		add	r0, r7, #8
 12351 0160 6423     		movs	r3, #100
 12352 0162 0A22     		movs	r2, #10
 12353 0164 8D49     		ldr	r1, .L544+12
 12354 0166 FFF7FEFF 		bl	sprintf
1669:..\src/command_processing.c ****     spi_delay_menu_len = strlen(spi_delay_menu);
 12355              		.loc 1 1669 0
 12356 016a 07F10803 		add	r3, r7, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 279


 12357 016e 1846     		mov	r0, r3
 12358 0170 FFF7FEFF 		bl	strlen
 12359 0174 0346     		mov	r3, r0
 12360 0176 87F88E36 		strb	r3, [r7, #1678]
1670:..\src/command_processing.c **** 
1671:..\src/command_processing.c ****     // Compute number of read parameters depending on N_IMU_Connected and
1672:..\src/command_processing.c ****     // update packet_length
1673:..\src/command_processing.c ****     num_mag_cal_params = (uint16)(N_IMU_Connected / 2);
 12361              		.loc 1 1673 0
 12362 017a 854B     		ldr	r3, .L544
 12363 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12364 017e 5B08     		lsrs	r3, r3, #1
 12365 0180 DBB2     		uxtb	r3, r3
 12366 0182 A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1674:..\src/command_processing.c ****     if ( (N_IMU_Connected - num_mag_cal_params*2) > 0 ) num_mag_cal_params++;
 12367              		.loc 1 1674 0
 12368 0186 824B     		ldr	r3, .L544
 12369 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12370 018a 1A46     		mov	r2, r3
 12371 018c B7F8A636 		ldrh	r3, [r7, #1702]
 12372 0190 5B00     		lsls	r3, r3, #1
 12373 0192 D31A     		subs	r3, r2, r3
 12374 0194 002B     		cmp	r3, #0
 12375 0196 04DD     		ble	.L499
 12376              		.loc 1 1674 0 is_stmt 0 discriminator 1
 12377 0198 B7F8A636 		ldrh	r3, [r7, #1702]
 12378 019c 0133     		adds	r3, r3, #1
 12379 019e A7F8A636 		strh	r3, [r7, #1702]	@ movhi
 12380              	.L499:
1675:..\src/command_processing.c ****     
1676:..\src/command_processing.c ****     packet_length = PARAM_BYTE_SLOT +
 12381              		.loc 1 1676 0 is_stmt 1
 12382 01a2 B7F89A36 		ldrh	r3, [r7, #1690]
 12383 01a6 5A1C     		adds	r2, r3, #1
1677:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 12384              		.loc 1 1677 0
 12385 01a8 B7F8A636 		ldrh	r3, [r7, #1702]
 12386 01ac 1344     		add	r3, r3, r2
1678:..\src/command_processing.c ****                     num_mag_cal_params*PARAM_BYTE_SLOT +
 12387              		.loc 1 1678 0
 12388 01ae 0133     		adds	r3, r3, #1
1676:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 12389              		.loc 1 1676 0
 12390 01b0 9AB2     		uxth	r2, r3
 12391 01b2 774B     		ldr	r3, .L544
 12392 01b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12393 01b6 9BB2     		uxth	r3, r3
 12394 01b8 1344     		add	r3, r3, r2
 12395 01ba 9BB2     		uxth	r3, r3
 12396 01bc 1A46     		mov	r2, r3	@ movhi
 12397 01be 9200     		lsls	r2, r2, #2
 12398 01c0 1344     		add	r3, r3, r2
 12399 01c2 1A46     		mov	r2, r3	@ movhi
 12400 01c4 9100     		lsls	r1, r2, #2
 12401 01c6 1A46     		mov	r2, r3	@ movhi
 12402 01c8 0B46     		mov	r3, r1	@ movhi
 12403 01ca 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 280


 12404 01cc 5B00     		lsls	r3, r3, #1
 12405 01ce 9BB2     		uxth	r3, r3
 12406 01d0 C933     		adds	r3, r3, #201
 12407 01d2 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1679:..\src/command_processing.c ****                     PARAM_BYTE_SLOT   + 
1680:..\src/command_processing.c ****                     (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1681:..\src/command_processing.c ****                     PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1682:..\src/command_processing.c **** 
1683:..\src/command_processing.c ****     first_imu_parameter = 1 + num_imus_id_params + num_mag_cal_params + 2;
 12408              		.loc 1 1683 0
 12409 01d6 B7F89A26 		ldrh	r2, [r7, #1690]	@ movhi
 12410 01da B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 12411 01de 1344     		add	r3, r3, r2
 12412 01e0 9BB2     		uxth	r3, r3
 12413 01e2 0333     		adds	r3, r3, #3
 12414 01e4 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1684:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_PARAM;
 12415              		.loc 1 1684 0
 12416 01e8 07F58A73 		add	r3, r7, #276
 12417 01ec A222     		movs	r2, #162
 12418 01ee 1A70     		strb	r2, [r3]
1685:..\src/command_processing.c ****     packet_data[1] = 1 + num_imus_id_params + num_mag_cal_params + 1 + (uint8)N_IMU_Connected + 1; 
 12419              		.loc 1 1685 0
 12420 01f0 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 12421 01f4 DAB2     		uxtb	r2, r3
 12422 01f6 B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 12423 01fa DBB2     		uxtb	r3, r3
 12424 01fc 1344     		add	r3, r3, r2
 12425 01fe DAB2     		uxtb	r2, r3
 12426 0200 634B     		ldr	r3, .L544
 12427 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12428 0204 1344     		add	r3, r3, r2
 12429 0206 DBB2     		uxtb	r3, r3
 12430 0208 0333     		adds	r3, r3, #3
 12431 020a DAB2     		uxtb	r2, r3
 12432 020c 07F58A73 		add	r3, r7, #276
 12433 0210 5A70     		strb	r2, [r3, #1]
1686:..\src/command_processing.c **** 
1687:..\src/command_processing.c ****     switch(index) {
 12434              		.loc 1 1687 0
 12435 0212 BB1D     		adds	r3, r7, #6
 12436 0214 1B88     		ldrh	r3, [r3]
 12437 0216 002B     		cmp	r3, #0
 12438 0218 40F0D084 		bne	.L542
1688:..\src/command_processing.c ****         case 0:         //List of all parameters with relative types
1689:..\src/command_processing.c ****             /*-------------N IMU--------------*/
1690:..\src/command_processing.c ****             start_byte = 0;
 12439              		.loc 1 1690 0
 12440 021c 0023     		movs	r3, #0
 12441 021e A7F89436 		strh	r3, [r7, #1684]	@ movhi
1691:..\src/command_processing.c ****             packet_data[2] = TYPE_UINT8;
 12442              		.loc 1 1691 0
 12443 0222 07F58A73 		add	r3, r7, #276
 12444 0226 0222     		movs	r2, #2
 12445 0228 9A70     		strb	r2, [r3, #2]
1692:..\src/command_processing.c ****             packet_data[3] = 1;
 12446              		.loc 1 1692 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 281


 12447 022a 07F58A73 		add	r3, r7, #276
 12448 022e 0122     		movs	r2, #1
 12449 0230 DA70     		strb	r2, [r3, #3]
1693:..\src/command_processing.c ****             packet_data[4] = (uint8)N_IMU_Connected;
 12450              		.loc 1 1693 0
 12451 0232 574B     		ldr	r3, .L544
 12452 0234 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12453 0236 07F58A73 		add	r3, r7, #276
 12454 023a 1A71     		strb	r2, [r3, #4]
1694:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 12455              		.loc 1 1694 0
 12456 023c 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 12457 0240 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12458 0244 15E0     		b	.L502
 12459              	.L503:
1695:..\src/command_processing.c ****                 packet_data[5 + n_imu_str_len - i] = n_imu_str[n_imu_str_len - i];
 12460              		.loc 1 1695 0 discriminator 3
 12461 0246 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 12462 024a 5A1D     		adds	r2, r3, #5
 12463 024c B7F8A436 		ldrh	r3, [r7, #1700]
 12464 0250 D31A     		subs	r3, r2, r3
 12465 0252 97F89216 		ldrb	r1, [r7, #1682]	@ zero_extendqisi2
 12466 0256 B7F8A426 		ldrh	r2, [r7, #1700]
 12467 025a 8A1A     		subs	r2, r1, r2
 12468 025c 07F1F801 		add	r1, r7, #248
 12469 0260 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12470 0262 07F58A72 		add	r2, r7, #276
 12471 0266 D154     		strb	r1, [r2, r3]
1694:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 12472              		.loc 1 1694 0 discriminator 3
 12473 0268 B7F8A436 		ldrh	r3, [r7, #1700]
 12474 026c 013B     		subs	r3, r3, #1
 12475 026e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12476              	.L502:
1694:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 12477              		.loc 1 1694 0 is_stmt 0 discriminator 1
 12478 0272 B7F8A436 		ldrh	r3, [r7, #1700]
 12479 0276 002B     		cmp	r3, #0
 12480 0278 E5D1     		bne	.L503
1696:..\src/command_processing.c ****                 
1697:..\src/command_processing.c ****             /*-------------IMUS ID--------------*/
1698:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 12481              		.loc 1 1698 0 is_stmt 1
 12482 027a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12483 027e 3233     		adds	r3, r3, #50
 12484 0280 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1699:..\src/command_processing.c ****             i = 0;
 12485              		.loc 1 1699 0
 12486 0284 0023     		movs	r3, #0
 12487 0286 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
1700:..\src/command_processing.c ****             for (k = 0; k < num_imus_id_params; k++){
 12488              		.loc 1 1700 0
 12489 028a 0023     		movs	r3, #0
 12490 028c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12491 0290 B2E0     		b	.L504
 12492              	.L511:
1701:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 282


 12493              		.loc 1 1701 0
 12494 0292 B7F8A026 		ldrh	r2, [r7, #1696]
 12495 0296 07F1EC03 		add	r3, r7, #236
 12496 029a 4149     		ldr	r1, .L544+16
 12497 029c 1846     		mov	r0, r3
 12498 029e FFF7FEFF 		bl	sprintf
1702:..\src/command_processing.c ****                 h = 4;
 12499              		.loc 1 1702 0
 12500 02a2 0423     		movs	r3, #4
 12501 02a4 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1703:..\src/command_processing.c ****                 ids_str_len = strlen(ids_str);
 12502              		.loc 1 1703 0
 12503 02a8 07F1EC03 		add	r3, r7, #236
 12504 02ac 1846     		mov	r0, r3
 12505 02ae FFF7FEFF 		bl	strlen
 12506 02b2 0346     		mov	r3, r0
 12507 02b4 87F89136 		strb	r3, [r7, #1681]
1704:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12508              		.loc 1 1704 0
 12509 02b8 B7F89436 		ldrh	r3, [r7, #1684]
 12510 02bc 9A1C     		adds	r2, r3, #2
 12511 02be B7F8A036 		ldrh	r3, [r7, #1696]
 12512 02c2 3221     		movs	r1, #50
 12513 02c4 01FB03F3 		mul	r3, r1, r3
 12514 02c8 1344     		add	r3, r3, r2
 12515 02ca 07F58A72 		add	r2, r7, #276
 12516 02ce 0221     		movs	r1, #2
 12517 02d0 D154     		strb	r1, [r2, r3]
1705:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 12518              		.loc 1 1705 0
 12519 02d2 B7F89436 		ldrh	r3, [r7, #1684]
 12520 02d6 DA1C     		adds	r2, r3, #3
 12521 02d8 B7F8A036 		ldrh	r3, [r7, #1696]
 12522 02dc 3221     		movs	r1, #50
 12523 02de 01FB03F3 		mul	r3, r1, r3
 12524 02e2 1344     		add	r3, r3, r2
 12525 02e4 07F58A72 		add	r2, r7, #276
 12526 02e8 0321     		movs	r1, #3
 12527 02ea D154     		strb	r1, [r2, r3]
1706:..\src/command_processing.c ****                 
1707:..\src/command_processing.c ****                 for (j = 3*k; j <= 3*k+2; j++) {  // for each possible imu on port k
 12528              		.loc 1 1707 0
 12529 02ec B7F8A036 		ldrh	r3, [r7, #1696]	@ movhi
 12530 02f0 1A46     		mov	r2, r3	@ movhi
 12531 02f2 5200     		lsls	r2, r2, #1
 12532 02f4 1344     		add	r3, r3, r2
 12533 02f6 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12534 02fa 39E0     		b	.L505
 12535              	.L508:
1708:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 12536              		.loc 1 1708 0
 12537 02fc B7F8A436 		ldrh	r3, [r7, #1700]
 12538 0300 284A     		ldr	r2, .L544+20
 12539 0302 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12540 0304 9BB2     		uxth	r3, r3
 12541 0306 B7F8A226 		ldrh	r2, [r7, #1698]
 12542 030a 9A42     		cmp	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 283


 12543 030c 17D1     		bne	.L506
1709:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = (uint8)IMU_connected[i];   
 12544              		.loc 1 1709 0
 12545 030e B7F89E26 		ldrh	r2, [r7, #1694]
 12546 0312 B7F89436 		ldrh	r3, [r7, #1684]
 12547 0316 1A44     		add	r2, r2, r3
 12548 0318 B7F8A036 		ldrh	r3, [r7, #1696]
 12549 031c 3221     		movs	r1, #50
 12550 031e 01FB03F3 		mul	r3, r1, r3
 12551 0322 1344     		add	r3, r3, r2
 12552 0324 B7F8A426 		ldrh	r2, [r7, #1700]
 12553 0328 1E49     		ldr	r1, .L544+20
 12554 032a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12555 032c 07F58A72 		add	r2, r7, #276
 12556 0330 D154     		strb	r1, [r2, r3]
1710:..\src/command_processing.c ****                         i++;
 12557              		.loc 1 1710 0
 12558 0332 B7F8A436 		ldrh	r3, [r7, #1700]
 12559 0336 0133     		adds	r3, r3, #1
 12560 0338 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12561 033c 0EE0     		b	.L507
 12562              	.L506:
1711:..\src/command_processing.c ****                     } 
1712:..\src/command_processing.c ****                     else {
1713:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = 255;
 12563              		.loc 1 1713 0
 12564 033e B7F89E26 		ldrh	r2, [r7, #1694]
 12565 0342 B7F89436 		ldrh	r3, [r7, #1684]
 12566 0346 1A44     		add	r2, r2, r3
 12567 0348 B7F8A036 		ldrh	r3, [r7, #1696]
 12568 034c 3221     		movs	r1, #50
 12569 034e 01FB03F3 		mul	r3, r1, r3
 12570 0352 1344     		add	r3, r3, r2
 12571 0354 07F58A72 		add	r2, r7, #276
 12572 0358 FF21     		movs	r1, #255
 12573 035a D154     		strb	r1, [r2, r3]
 12574              	.L507:
1714:..\src/command_processing.c ****                     }
1715:..\src/command_processing.c ****                     h++;
 12575              		.loc 1 1715 0 discriminator 2
 12576 035c B7F89E36 		ldrh	r3, [r7, #1694]
 12577 0360 0133     		adds	r3, r3, #1
 12578 0362 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1707:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 12579              		.loc 1 1707 0 discriminator 2
 12580 0366 B7F8A236 		ldrh	r3, [r7, #1698]
 12581 036a 0133     		adds	r3, r3, #1
 12582 036c A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12583              	.L505:
1707:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 12584              		.loc 1 1707 0 is_stmt 0 discriminator 1
 12585 0370 B7F8A216 		ldrh	r1, [r7, #1698]
 12586 0374 B7F8A026 		ldrh	r2, [r7, #1696]
 12587 0378 1346     		mov	r3, r2
 12588 037a 5B00     		lsls	r3, r3, #1
 12589 037c 1344     		add	r3, r3, r2
 12590 037e 0233     		adds	r3, r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 284


 12591 0380 9942     		cmp	r1, r3
 12592 0382 BBDD     		ble	.L508
1716:..\src/command_processing.c ****                 }
1717:..\src/command_processing.c **** 
1718:..\src/command_processing.c ****                 //if (IMU_connected[i] >= 3*k && IMU_connected[i] <= 3*k + 2)
1719:..\src/command_processing.c ****                 for(j = ids_str_len; j != 0; j--)
 12593              		.loc 1 1719 0 is_stmt 1
 12594 0384 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 12595 0388 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12596 038c 2BE0     		b	.L509
 12597              	.L545:
 12598 038e 00BF     		.align	2
 12599              	.L544:
 12600 0390 00000000 		.word	N_IMU_Connected
 12601 0394 00110000 		.word	.LC142
 12602 0398 1C110000 		.word	.LC143
 12603 039c 74020000 		.word	.LC129
 12604 03a0 98100000 		.word	.LC144
 12605 03a4 00000000 		.word	IMU_connected
 12606              	.L510:
1720:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 12607              		.loc 1 1720 0 discriminator 3
 12608 03a8 B7F89436 		ldrh	r3, [r7, #1684]
 12609 03ac DA1D     		adds	r2, r3, #7
 12610 03ae B7F8A036 		ldrh	r3, [r7, #1696]
 12611 03b2 3221     		movs	r1, #50
 12612 03b4 01FB03F3 		mul	r3, r1, r3
 12613 03b8 1A44     		add	r2, r2, r3
 12614 03ba 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 12615 03be 1A44     		add	r2, r2, r3
 12616 03c0 B7F8A236 		ldrh	r3, [r7, #1698]
 12617 03c4 D31A     		subs	r3, r2, r3
 12618 03c6 97F89116 		ldrb	r1, [r7, #1681]	@ zero_extendqisi2
 12619 03ca B7F8A226 		ldrh	r2, [r7, #1698]
 12620 03ce 8A1A     		subs	r2, r1, r2
 12621 03d0 07F1EC01 		add	r1, r7, #236
 12622 03d4 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12623 03d6 07F58A72 		add	r2, r7, #276
 12624 03da D154     		strb	r1, [r2, r3]
1719:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 12625              		.loc 1 1719 0 discriminator 3
 12626 03dc B7F8A236 		ldrh	r3, [r7, #1698]
 12627 03e0 013B     		subs	r3, r3, #1
 12628 03e2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12629              	.L509:
1719:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 12630              		.loc 1 1719 0 is_stmt 0 discriminator 1
 12631 03e6 B7F8A236 		ldrh	r3, [r7, #1698]
 12632 03ea 002B     		cmp	r3, #0
 12633 03ec DCD1     		bne	.L510
1700:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 12634              		.loc 1 1700 0 is_stmt 1 discriminator 2
 12635 03ee B7F8A036 		ldrh	r3, [r7, #1696]
 12636 03f2 0133     		adds	r3, r3, #1
 12637 03f4 A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12638              	.L504:
1700:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 285


 12639              		.loc 1 1700 0 is_stmt 0 discriminator 1
 12640 03f8 B7F8A026 		ldrh	r2, [r7, #1696]
 12641 03fc B7F89A36 		ldrh	r3, [r7, #1690]
 12642 0400 9A42     		cmp	r2, r3
 12643 0402 FFF446AF 		bcc	.L511
1721:..\src/command_processing.c ****             }
1722:..\src/command_processing.c ****             
1723:..\src/command_processing.c ****             /*-------------GET MAG PARAM--------------*/
1724:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_imus_id_params;
 12644              		.loc 1 1724 0 is_stmt 1
 12645 0406 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 12646 040a 1A46     		mov	r2, r3	@ movhi
 12647 040c 9200     		lsls	r2, r2, #2
 12648 040e 1344     		add	r3, r3, r2
 12649 0410 1A46     		mov	r2, r3	@ movhi
 12650 0412 9100     		lsls	r1, r2, #2
 12651 0414 1A46     		mov	r2, r3	@ movhi
 12652 0416 0B46     		mov	r3, r1	@ movhi
 12653 0418 1344     		add	r3, r3, r2
 12654 041a 5B00     		lsls	r3, r3, #1
 12655 041c 9AB2     		uxth	r2, r3
 12656 041e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12657 0422 1344     		add	r3, r3, r2
 12658 0424 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1725:..\src/command_processing.c ****             for (k = 0; k < num_mag_cal_params; k++){
 12659              		.loc 1 1725 0
 12660 0428 0023     		movs	r3, #0
 12661 042a A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12662 042e 1FE1     		b	.L512
 12663              	.L519:
1726:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12664              		.loc 1 1726 0
 12665 0430 B7F89436 		ldrh	r3, [r7, #1684]
 12666 0434 9A1C     		adds	r2, r3, #2
 12667 0436 B7F8A036 		ldrh	r3, [r7, #1696]
 12668 043a 3221     		movs	r1, #50
 12669 043c 01FB03F3 		mul	r3, r1, r3
 12670 0440 1344     		add	r3, r3, r2
 12671 0442 07F58A72 		add	r2, r7, #276
 12672 0446 0221     		movs	r1, #2
 12673 0448 D154     		strb	r1, [r2, r3]
1727:..\src/command_processing.c ****                 
1728:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 12674              		.loc 1 1728 0
 12675 044a B7F89436 		ldrh	r3, [r7, #1684]
 12676 044e DA1C     		adds	r2, r3, #3
 12677 0450 B7F8A036 		ldrh	r3, [r7, #1696]
 12678 0454 3221     		movs	r1, #50
 12679 0456 01FB03F3 		mul	r3, r1, r3
 12680 045a 1344     		add	r3, r3, r2
 12681 045c 07F58A72 		add	r2, r7, #276
 12682 0460 0321     		movs	r1, #3
 12683 0462 D154     		strb	r1, [r2, r3]
1729:..\src/command_processing.c ****                 packet_data[4+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 12684              		.loc 1 1729 0
 12685 0464 B7F89436 		ldrh	r3, [r7, #1684]
 12686 0468 1A1D     		adds	r2, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 286


 12687 046a B7F8A036 		ldrh	r3, [r7, #1696]
 12688 046e 3221     		movs	r1, #50
 12689 0470 01FB03F3 		mul	r3, r1, r3
 12690 0474 1A44     		add	r2, r2, r3
 12691 0476 B7F8A036 		ldrh	r3, [r7, #1696]
 12692 047a 5B00     		lsls	r3, r3, #1
 12693 047c B249     		ldr	r1, .L546
 12694 047e CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12695 0480 1846     		mov	r0, r3
 12696 0482 B249     		ldr	r1, .L546+4
 12697 0484 0346     		mov	r3, r0
 12698 0486 5B00     		lsls	r3, r3, #1
 12699 0488 0344     		add	r3, r3, r0
 12700 048a 0B44     		add	r3, r3, r1
 12701 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12702 048e 07F58A73 		add	r3, r7, #276
 12703 0492 9954     		strb	r1, [r3, r2]
1730:..\src/command_processing.c ****                 packet_data[5+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 12704              		.loc 1 1730 0
 12705 0494 B7F89436 		ldrh	r3, [r7, #1684]
 12706 0498 5A1D     		adds	r2, r3, #5
 12707 049a B7F8A036 		ldrh	r3, [r7, #1696]
 12708 049e 3221     		movs	r1, #50
 12709 04a0 01FB03F3 		mul	r3, r1, r3
 12710 04a4 1A44     		add	r2, r2, r3
 12711 04a6 B7F8A036 		ldrh	r3, [r7, #1696]
 12712 04aa 5B00     		lsls	r3, r3, #1
 12713 04ac A649     		ldr	r1, .L546
 12714 04ae CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12715 04b0 1846     		mov	r0, r3
 12716 04b2 A649     		ldr	r1, .L546+4
 12717 04b4 0346     		mov	r3, r0
 12718 04b6 5B00     		lsls	r3, r3, #1
 12719 04b8 0344     		add	r3, r3, r0
 12720 04ba 0B44     		add	r3, r3, r1
 12721 04bc 0133     		adds	r3, r3, #1
 12722 04be 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12723 04c0 07F58A73 		add	r3, r7, #276
 12724 04c4 9954     		strb	r1, [r3, r2]
1731:..\src/command_processing.c ****                 packet_data[6+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 12725              		.loc 1 1731 0
 12726 04c6 B7F89436 		ldrh	r3, [r7, #1684]
 12727 04ca 9A1D     		adds	r2, r3, #6
 12728 04cc B7F8A036 		ldrh	r3, [r7, #1696]
 12729 04d0 3221     		movs	r1, #50
 12730 04d2 01FB03F3 		mul	r3, r1, r3
 12731 04d6 1A44     		add	r2, r2, r3
 12732 04d8 B7F8A036 		ldrh	r3, [r7, #1696]
 12733 04dc 5B00     		lsls	r3, r3, #1
 12734 04de 9A49     		ldr	r1, .L546
 12735 04e0 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12736 04e2 1846     		mov	r0, r3
 12737 04e4 9949     		ldr	r1, .L546+4
 12738 04e6 0346     		mov	r3, r0
 12739 04e8 5B00     		lsls	r3, r3, #1
 12740 04ea 0344     		add	r3, r3, r0
 12741 04ec 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 287


 12742 04ee 0233     		adds	r3, r3, #2
 12743 04f0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12744 04f2 07F58A73 		add	r3, r7, #276
 12745 04f6 9954     		strb	r1, [r3, r2]
1732:..\src/command_processing.c ****                 
1733:..\src/command_processing.c ****                 // check if there is a second value
1734:..\src/command_processing.c ****                 if ( N_IMU_Connected < 2*(k+1) ) {
 12746              		.loc 1 1734 0
 12747 04f8 954B     		ldr	r3, .L546+8
 12748 04fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12749 04fc 1A46     		mov	r2, r3
 12750 04fe B7F8A036 		ldrh	r3, [r7, #1696]
 12751 0502 0133     		adds	r3, r3, #1
 12752 0504 5B00     		lsls	r3, r3, #1
 12753 0506 9A42     		cmp	r2, r3
 12754 0508 28DA     		bge	.L513
1735:..\src/command_processing.c ****                     // there is only one value
1736:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 12755              		.loc 1 1736 0
 12756 050a 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12757 050e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12758 0512 1EE0     		b	.L514
 12759              	.L515:
1737:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12760              		.loc 1 1737 0 discriminator 3
 12761 0514 B7F89436 		ldrh	r3, [r7, #1684]
 12762 0518 DA1D     		adds	r2, r3, #7
 12763 051a B7F8A036 		ldrh	r3, [r7, #1696]
 12764 051e 3221     		movs	r1, #50
 12765 0520 01FB03F3 		mul	r3, r1, r3
 12766 0524 1A44     		add	r2, r2, r3
 12767 0526 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12768 052a 1A44     		add	r2, r2, r3
 12769 052c B7F8A236 		ldrh	r3, [r7, #1698]
 12770 0530 D31A     		subs	r3, r2, r3
 12771 0532 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 12772 0536 B7F8A226 		ldrh	r2, [r7, #1698]
 12773 053a 8A1A     		subs	r2, r1, r2
 12774 053c 07F1D801 		add	r1, r7, #216
 12775 0540 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12776 0542 07F58A72 		add	r2, r7, #276
 12777 0546 D154     		strb	r1, [r2, r3]
1736:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12778              		.loc 1 1736 0 discriminator 3
 12779 0548 B7F8A236 		ldrh	r3, [r7, #1698]
 12780 054c 013B     		subs	r3, r3, #1
 12781 054e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12782              	.L514:
1736:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12783              		.loc 1 1736 0 is_stmt 0 discriminator 1
 12784 0552 B7F8A236 		ldrh	r3, [r7, #1698]
 12785 0556 002B     		cmp	r3, #0
 12786 0558 DCD1     		bne	.L515
 12787 055a 84E0     		b	.L516
 12788              	.L513:
1738:..\src/command_processing.c ****                 }
1739:..\src/command_processing.c ****                 else {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 288


1740:..\src/command_processing.c ****                     // fill the second value
1741:..\src/command_processing.c ****                     packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 6;
 12789              		.loc 1 1741 0 is_stmt 1
 12790 055c B7F89436 		ldrh	r3, [r7, #1684]
 12791 0560 DA1C     		adds	r2, r3, #3
 12792 0562 B7F8A036 		ldrh	r3, [r7, #1696]
 12793 0566 3221     		movs	r1, #50
 12794 0568 01FB03F3 		mul	r3, r1, r3
 12795 056c 1344     		add	r3, r3, r2
 12796 056e 07F58A72 		add	r2, r7, #276
 12797 0572 0621     		movs	r1, #6
 12798 0574 D154     		strb	r1, [r2, r3]
1742:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12799              		.loc 1 1742 0
 12800 0576 B7F89436 		ldrh	r3, [r7, #1684]
 12801 057a DA1D     		adds	r2, r3, #7
 12802 057c B7F8A036 		ldrh	r3, [r7, #1696]
 12803 0580 3221     		movs	r1, #50
 12804 0582 01FB03F3 		mul	r3, r1, r3
 12805 0586 1A44     		add	r2, r2, r3
 12806 0588 B7F8A036 		ldrh	r3, [r7, #1696]
 12807 058c 5B00     		lsls	r3, r3, #1
 12808 058e 0133     		adds	r3, r3, #1
 12809 0590 6D49     		ldr	r1, .L546
 12810 0592 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12811 0594 1846     		mov	r0, r3
 12812 0596 6D49     		ldr	r1, .L546+4
 12813 0598 0346     		mov	r3, r0
 12814 059a 5B00     		lsls	r3, r3, #1
 12815 059c 0344     		add	r3, r3, r0
 12816 059e 0B44     		add	r3, r3, r1
 12817 05a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12818 05a2 07F58A73 		add	r3, r7, #276
 12819 05a6 9954     		strb	r1, [r3, r2]
1743:..\src/command_processing.c ****                     packet_data[8+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12820              		.loc 1 1743 0
 12821 05a8 B7F89436 		ldrh	r3, [r7, #1684]
 12822 05ac 03F10802 		add	r2, r3, #8
 12823 05b0 B7F8A036 		ldrh	r3, [r7, #1696]
 12824 05b4 3221     		movs	r1, #50
 12825 05b6 01FB03F3 		mul	r3, r1, r3
 12826 05ba 1A44     		add	r2, r2, r3
 12827 05bc B7F8A036 		ldrh	r3, [r7, #1696]
 12828 05c0 5B00     		lsls	r3, r3, #1
 12829 05c2 0133     		adds	r3, r3, #1
 12830 05c4 6049     		ldr	r1, .L546
 12831 05c6 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12832 05c8 1846     		mov	r0, r3
 12833 05ca 6049     		ldr	r1, .L546+4
 12834 05cc 0346     		mov	r3, r0
 12835 05ce 5B00     		lsls	r3, r3, #1
 12836 05d0 0344     		add	r3, r3, r0
 12837 05d2 0B44     		add	r3, r3, r1
 12838 05d4 0133     		adds	r3, r3, #1
 12839 05d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12840 05d8 07F58A73 		add	r3, r7, #276
 12841 05dc 9954     		strb	r1, [r3, r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 289


1744:..\src/command_processing.c ****                     packet_data[9+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12842              		.loc 1 1744 0
 12843 05de B7F89436 		ldrh	r3, [r7, #1684]
 12844 05e2 03F10902 		add	r2, r3, #9
 12845 05e6 B7F8A036 		ldrh	r3, [r7, #1696]
 12846 05ea 3221     		movs	r1, #50
 12847 05ec 01FB03F3 		mul	r3, r1, r3
 12848 05f0 1A44     		add	r2, r2, r3
 12849 05f2 B7F8A036 		ldrh	r3, [r7, #1696]
 12850 05f6 5B00     		lsls	r3, r3, #1
 12851 05f8 0133     		adds	r3, r3, #1
 12852 05fa 5349     		ldr	r1, .L546
 12853 05fc CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12854 05fe 1846     		mov	r0, r3
 12855 0600 5249     		ldr	r1, .L546+4
 12856 0602 0346     		mov	r3, r0
 12857 0604 5B00     		lsls	r3, r3, #1
 12858 0606 0344     		add	r3, r3, r0
 12859 0608 0B44     		add	r3, r3, r1
 12860 060a 0233     		adds	r3, r3, #2
 12861 060c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12862 060e 07F58A73 		add	r3, r7, #276
 12863 0612 9954     		strb	r1, [r3, r2]
1745:..\src/command_processing.c ****                 
1746:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 12864              		.loc 1 1746 0
 12865 0614 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12866 0618 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12867 061c 1FE0     		b	.L517
 12868              	.L518:
1747:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 12869              		.loc 1 1747 0 discriminator 3
 12870 061e B7F89436 		ldrh	r3, [r7, #1684]
 12871 0622 03F10A02 		add	r2, r3, #10
 12872 0626 B7F8A036 		ldrh	r3, [r7, #1696]
 12873 062a 3221     		movs	r1, #50
 12874 062c 01FB03F3 		mul	r3, r1, r3
 12875 0630 1A44     		add	r2, r2, r3
 12876 0632 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12877 0636 1A44     		add	r2, r2, r3
 12878 0638 B7F8A236 		ldrh	r3, [r7, #1698]
 12879 063c D31A     		subs	r3, r2, r3
 12880 063e 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 12881 0642 B7F8A226 		ldrh	r2, [r7, #1698]
 12882 0646 8A1A     		subs	r2, r1, r2
 12883 0648 07F1D801 		add	r1, r7, #216
 12884 064c 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12885 064e 07F58A72 		add	r2, r7, #276
 12886 0652 D154     		strb	r1, [r2, r3]
1746:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 12887              		.loc 1 1746 0 discriminator 3
 12888 0654 B7F8A236 		ldrh	r3, [r7, #1698]
 12889 0658 013B     		subs	r3, r3, #1
 12890 065a A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12891              	.L517:
1746:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 12892              		.loc 1 1746 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 290


 12893 065e B7F8A236 		ldrh	r3, [r7, #1698]
 12894 0662 002B     		cmp	r3, #0
 12895 0664 DBD1     		bne	.L518
 12896              	.L516:
1725:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12897              		.loc 1 1725 0 is_stmt 1 discriminator 2
 12898 0666 B7F8A036 		ldrh	r3, [r7, #1696]
 12899 066a 0133     		adds	r3, r3, #1
 12900 066c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12901              	.L512:
1725:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12902              		.loc 1 1725 0 is_stmt 0 discriminator 1
 12903 0670 B7F8A026 		ldrh	r2, [r7, #1696]
 12904 0674 B7F8A636 		ldrh	r3, [r7, #1702]
 12905 0678 9A42     		cmp	r2, r3
 12906 067a FFF4D9AE 		bcc	.L519
1748:..\src/command_processing.c ****                 }
1749:..\src/command_processing.c ****             }
1750:..\src/command_processing.c ****             
1751:..\src/command_processing.c ****             /*-----------------ID-----------------*/
1752:..\src/command_processing.c ****             
1753:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_mag_cal_params;
 12907              		.loc 1 1753 0 is_stmt 1
 12908 067e B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 12909 0682 1A46     		mov	r2, r3	@ movhi
 12910 0684 9200     		lsls	r2, r2, #2
 12911 0686 1344     		add	r3, r3, r2
 12912 0688 1A46     		mov	r2, r3	@ movhi
 12913 068a 9100     		lsls	r1, r2, #2
 12914 068c 1A46     		mov	r2, r3	@ movhi
 12915 068e 0B46     		mov	r3, r1	@ movhi
 12916 0690 1344     		add	r3, r3, r2
 12917 0692 5B00     		lsls	r3, r3, #1
 12918 0694 9AB2     		uxth	r2, r3
 12919 0696 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12920 069a 1344     		add	r3, r3, r2
 12921 069c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1754:..\src/command_processing.c ****             sprintf(id_str, "%u - Device ID:", first_imu_parameter-1);
 12922              		.loc 1 1754 0
 12923 06a0 B7F89836 		ldrh	r3, [r7, #1688]
 12924 06a4 5A1E     		subs	r2, r3, #1
 12925 06a6 07F1C803 		add	r3, r7, #200
 12926 06aa 2A49     		ldr	r1, .L546+12
 12927 06ac 1846     		mov	r0, r3
 12928 06ae FFF7FEFF 		bl	sprintf
1755:..\src/command_processing.c ****             id_str_len = strlen(id_str);
 12929              		.loc 1 1755 0
 12930 06b2 07F1C803 		add	r3, r7, #200
 12931 06b6 1846     		mov	r0, r3
 12932 06b8 FFF7FEFF 		bl	strlen
 12933 06bc 0346     		mov	r3, r0
 12934 06be 87F89336 		strb	r3, [r7, #1683]
1756:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_UINT8;
 12935              		.loc 1 1756 0
 12936 06c2 B7F89436 		ldrh	r3, [r7, #1684]
 12937 06c6 0233     		adds	r3, r3, #2
 12938 06c8 07F58A72 		add	r2, r7, #276
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 291


 12939 06cc 0221     		movs	r1, #2
 12940 06ce D154     		strb	r1, [r2, r3]
1757:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 12941              		.loc 1 1757 0
 12942 06d0 B7F89436 		ldrh	r3, [r7, #1684]
 12943 06d4 0333     		adds	r3, r3, #3
 12944 06d6 07F58A72 		add	r2, r7, #276
 12945 06da 0121     		movs	r1, #1
 12946 06dc D154     		strb	r1, [r2, r3]
1758:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.dev.id;
 12947              		.loc 1 1758 0
 12948 06de B7F89436 		ldrh	r3, [r7, #1684]
 12949 06e2 0433     		adds	r3, r3, #4
 12950 06e4 1C4A     		ldr	r2, .L546+16
 12951 06e6 92F8A010 		ldrb	r1, [r2, #160]	@ zero_extendqisi2
 12952 06ea 07F58A72 		add	r2, r7, #276
 12953 06ee D154     		strb	r1, [r2, r3]
1759:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 12954              		.loc 1 1759 0
 12955 06f0 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 12956 06f4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12957 06f8 18E0     		b	.L520
 12958              	.L521:
1760:..\src/command_processing.c ****                 packet_data[5+start_byte + id_str_len - i] = id_str[id_str_len - i];
 12959              		.loc 1 1760 0 discriminator 3
 12960 06fa B7F89436 		ldrh	r3, [r7, #1684]
 12961 06fe 5A1D     		adds	r2, r3, #5
 12962 0700 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 12963 0704 1A44     		add	r2, r2, r3
 12964 0706 B7F8A436 		ldrh	r3, [r7, #1700]
 12965 070a D31A     		subs	r3, r2, r3
 12966 070c 97F89316 		ldrb	r1, [r7, #1683]	@ zero_extendqisi2
 12967 0710 B7F8A426 		ldrh	r2, [r7, #1700]
 12968 0714 8A1A     		subs	r2, r1, r2
 12969 0716 07F1C801 		add	r1, r7, #200
 12970 071a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12971 071c 07F58A72 		add	r2, r7, #276
 12972 0720 D154     		strb	r1, [r2, r3]
1759:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 12973              		.loc 1 1759 0 discriminator 3
 12974 0722 B7F8A436 		ldrh	r3, [r7, #1700]
 12975 0726 013B     		subs	r3, r3, #1
 12976 0728 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12977              	.L520:
1759:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 12978              		.loc 1 1759 0 is_stmt 0 discriminator 1
 12979 072c B7F8A436 		ldrh	r3, [r7, #1700]
 12980 0730 002B     		cmp	r3, #0
 12981 0732 E2D1     		bne	.L521
1761:..\src/command_processing.c ****                 
1762:..\src/command_processing.c ****             /*-------------GET IMUS MODE-------------*/
1763:..\src/command_processing.c ****             
1764:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 12982              		.loc 1 1764 0 is_stmt 1
 12983 0734 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12984 0738 3233     		adds	r3, r3, #50
 12985 073a A7F89436 		strh	r3, [r7, #1684]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 292


1765:..\src/command_processing.c ****             for (i = 0; i < (uint8)N_IMU_Connected; i++){
 12986              		.loc 1 1765 0
 12987 073e 0023     		movs	r3, #0
 12988 0740 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12989 0744 38E1     		b	.L522
 12990              	.L547:
 12991 0746 00BF     		.align	2
 12992              	.L546:
 12993 0748 00000000 		.word	IMU_connected
 12994 074c 00000000 		.word	MagCal
 12995 0750 00000000 		.word	N_IMU_Connected
 12996 0754 A4100000 		.word	.LC145
 12997 0758 00000000 		.word	c_mem
 12998              	.L525:
1766:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 12999              		.loc 1 1766 0
 13000 075c B7F89826 		ldrh	r2, [r7, #1688]
 13001 0760 B7F8A436 		ldrh	r3, [r7, #1700]
 13002 0764 D118     		adds	r1, r2, r3
 13003 0766 B7F8A436 		ldrh	r3, [r7, #1700]
 13004 076a D54A     		ldr	r2, .L548
 13005 076c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13006 076e 07F19C00 		add	r0, r7, #156
 13007 0772 0A46     		mov	r2, r1
 13008 0774 D349     		ldr	r1, .L548+4
 13009 0776 FFF7FEFF 		bl	sprintf
1767:..\src/command_processing.c ****                 imu_table_str_len = strlen(imu_table_str);
 13010              		.loc 1 1767 0
 13011 077a 07F19C03 		add	r3, r7, #156
 13012 077e 1846     		mov	r0, r3
 13013 0780 FFF7FEFF 		bl	strlen
 13014 0784 0346     		mov	r3, r0
 13015 0786 87F88F36 		strb	r3, [r7, #1679]
1768:..\src/command_processing.c ****             
1769:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte + PARAM_BYTE_SLOT*i)] = TYPE_UINT8;
 13016              		.loc 1 1769 0
 13017 078a B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13018 078e 1A46     		mov	r2, r3	@ movhi
 13019 0790 9200     		lsls	r2, r2, #2
 13020 0792 1344     		add	r3, r3, r2
 13021 0794 1A46     		mov	r2, r3	@ movhi
 13022 0796 9100     		lsls	r1, r2, #2
 13023 0798 1A46     		mov	r2, r3	@ movhi
 13024 079a 0B46     		mov	r3, r1	@ movhi
 13025 079c 1344     		add	r3, r3, r2
 13026 079e 5B00     		lsls	r3, r3, #1
 13027 07a0 9AB2     		uxth	r2, r3
 13028 07a2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13029 07a6 1344     		add	r3, r3, r2
 13030 07a8 9BB2     		uxth	r3, r3
 13031 07aa 0233     		adds	r3, r3, #2
 13032 07ac 9BB2     		uxth	r3, r3
 13033 07ae 1A46     		mov	r2, r3
 13034 07b0 07F58A73 		add	r3, r7, #276
 13035 07b4 0221     		movs	r1, #2
 13036 07b6 9954     		strb	r1, [r3, r2]
1770:..\src/command_processing.c ****                 packet_data[(uint16)(3 + start_byte + PARAM_BYTE_SLOT*i)] = 5;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 293


 13037              		.loc 1 1770 0
 13038 07b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13039 07bc 1A46     		mov	r2, r3	@ movhi
 13040 07be 9200     		lsls	r2, r2, #2
 13041 07c0 1344     		add	r3, r3, r2
 13042 07c2 1A46     		mov	r2, r3	@ movhi
 13043 07c4 9100     		lsls	r1, r2, #2
 13044 07c6 1A46     		mov	r2, r3	@ movhi
 13045 07c8 0B46     		mov	r3, r1	@ movhi
 13046 07ca 1344     		add	r3, r3, r2
 13047 07cc 5B00     		lsls	r3, r3, #1
 13048 07ce 9AB2     		uxth	r2, r3
 13049 07d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13050 07d4 1344     		add	r3, r3, r2
 13051 07d6 9BB2     		uxth	r3, r3
 13052 07d8 0333     		adds	r3, r3, #3
 13053 07da 9BB2     		uxth	r3, r3
 13054 07dc 1A46     		mov	r2, r3
 13055 07de 07F58A73 		add	r3, r7, #276
 13056 07e2 0521     		movs	r1, #5
 13057 07e4 9954     		strb	r1, [r3, r2]
1771:..\src/command_processing.c ****                 
1772:..\src/command_processing.c ****                 packet_data[(uint16)(4 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13058              		.loc 1 1772 0
 13059 07e6 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13060 07ea 1A46     		mov	r2, r3	@ movhi
 13061 07ec 9200     		lsls	r2, r2, #2
 13062 07ee 1344     		add	r3, r3, r2
 13063 07f0 1A46     		mov	r2, r3	@ movhi
 13064 07f2 9100     		lsls	r1, r2, #2
 13065 07f4 1A46     		mov	r2, r3	@ movhi
 13066 07f6 0B46     		mov	r3, r1	@ movhi
 13067 07f8 1344     		add	r3, r3, r2
 13068 07fa 5B00     		lsls	r3, r3, #1
 13069 07fc 9AB2     		uxth	r2, r3
 13070 07fe B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13071 0802 1344     		add	r3, r3, r2
 13072 0804 9BB2     		uxth	r3, r3
 13073 0806 0433     		adds	r3, r3, #4
 13074 0808 9BB2     		uxth	r3, r3
 13075 080a 1846     		mov	r0, r3
 13076 080c B7F8A436 		ldrh	r3, [r7, #1700]
 13077 0810 AB4A     		ldr	r2, .L548
 13078 0812 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13079 0814 1946     		mov	r1, r3
 13080 0816 AC4A     		ldr	r2, .L548+8
 13081 0818 0B46     		mov	r3, r1
 13082 081a 9B00     		lsls	r3, r3, #2
 13083 081c 0B44     		add	r3, r3, r1
 13084 081e 1344     		add	r3, r3, r2
 13085 0820 03F20223 		addw	r3, r3, #514
 13086 0824 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13087 0826 07F58A73 		add	r3, r7, #276
 13088 082a 1A54     		strb	r2, [r3, r0]
1773:..\src/command_processing.c ****                 packet_data[(uint16)(5 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13089              		.loc 1 1773 0
 13090 082c B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 294


 13091 0830 1A46     		mov	r2, r3	@ movhi
 13092 0832 9200     		lsls	r2, r2, #2
 13093 0834 1344     		add	r3, r3, r2
 13094 0836 1A46     		mov	r2, r3	@ movhi
 13095 0838 9100     		lsls	r1, r2, #2
 13096 083a 1A46     		mov	r2, r3	@ movhi
 13097 083c 0B46     		mov	r3, r1	@ movhi
 13098 083e 1344     		add	r3, r3, r2
 13099 0840 5B00     		lsls	r3, r3, #1
 13100 0842 9AB2     		uxth	r2, r3
 13101 0844 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13102 0848 1344     		add	r3, r3, r2
 13103 084a 9BB2     		uxth	r3, r3
 13104 084c 0533     		adds	r3, r3, #5
 13105 084e 9BB2     		uxth	r3, r3
 13106 0850 1846     		mov	r0, r3
 13107 0852 B7F8A436 		ldrh	r3, [r7, #1700]
 13108 0856 9A4A     		ldr	r2, .L548
 13109 0858 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13110 085a 1946     		mov	r1, r3
 13111 085c 9A4A     		ldr	r2, .L548+8
 13112 085e 0B46     		mov	r3, r1
 13113 0860 9B00     		lsls	r3, r3, #2
 13114 0862 0B44     		add	r3, r3, r1
 13115 0864 1344     		add	r3, r3, r2
 13116 0866 03F20323 		addw	r3, r3, #515
 13117 086a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13118 086c 07F58A73 		add	r3, r7, #276
 13119 0870 1A54     		strb	r2, [r3, r0]
1774:..\src/command_processing.c ****                 packet_data[(uint16)(6 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13120              		.loc 1 1774 0
 13121 0872 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13122 0876 1A46     		mov	r2, r3	@ movhi
 13123 0878 9200     		lsls	r2, r2, #2
 13124 087a 1344     		add	r3, r3, r2
 13125 087c 1A46     		mov	r2, r3	@ movhi
 13126 087e 9100     		lsls	r1, r2, #2
 13127 0880 1A46     		mov	r2, r3	@ movhi
 13128 0882 0B46     		mov	r3, r1	@ movhi
 13129 0884 1344     		add	r3, r3, r2
 13130 0886 5B00     		lsls	r3, r3, #1
 13131 0888 9AB2     		uxth	r2, r3
 13132 088a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13133 088e 1344     		add	r3, r3, r2
 13134 0890 9BB2     		uxth	r3, r3
 13135 0892 0633     		adds	r3, r3, #6
 13136 0894 9BB2     		uxth	r3, r3
 13137 0896 1846     		mov	r0, r3
 13138 0898 B7F8A436 		ldrh	r3, [r7, #1700]
 13139 089c 884A     		ldr	r2, .L548
 13140 089e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13141 08a0 1946     		mov	r1, r3
 13142 08a2 894A     		ldr	r2, .L548+8
 13143 08a4 0B46     		mov	r3, r1
 13144 08a6 9B00     		lsls	r3, r3, #2
 13145 08a8 0B44     		add	r3, r3, r1
 13146 08aa 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 295


 13147 08ac 03F50173 		add	r3, r3, #516
 13148 08b0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13149 08b2 07F58A73 		add	r3, r7, #276
 13150 08b6 1A54     		strb	r2, [r3, r0]
1775:..\src/command_processing.c ****                 packet_data[(uint16)(7 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13151              		.loc 1 1775 0
 13152 08b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13153 08bc 1A46     		mov	r2, r3	@ movhi
 13154 08be 9200     		lsls	r2, r2, #2
 13155 08c0 1344     		add	r3, r3, r2
 13156 08c2 1A46     		mov	r2, r3	@ movhi
 13157 08c4 9100     		lsls	r1, r2, #2
 13158 08c6 1A46     		mov	r2, r3	@ movhi
 13159 08c8 0B46     		mov	r3, r1	@ movhi
 13160 08ca 1344     		add	r3, r3, r2
 13161 08cc 5B00     		lsls	r3, r3, #1
 13162 08ce 9AB2     		uxth	r2, r3
 13163 08d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13164 08d4 1344     		add	r3, r3, r2
 13165 08d6 9BB2     		uxth	r3, r3
 13166 08d8 0733     		adds	r3, r3, #7
 13167 08da 9BB2     		uxth	r3, r3
 13168 08dc 1846     		mov	r0, r3
 13169 08de B7F8A436 		ldrh	r3, [r7, #1700]
 13170 08e2 774A     		ldr	r2, .L548
 13171 08e4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13172 08e6 1946     		mov	r1, r3
 13173 08e8 774A     		ldr	r2, .L548+8
 13174 08ea 0B46     		mov	r3, r1
 13175 08ec 9B00     		lsls	r3, r3, #2
 13176 08ee 0B44     		add	r3, r3, r1
 13177 08f0 1344     		add	r3, r3, r2
 13178 08f2 03F20523 		addw	r3, r3, #517
 13179 08f6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13180 08f8 07F58A73 		add	r3, r7, #276
 13181 08fc 1A54     		strb	r2, [r3, r0]
1776:..\src/command_processing.c ****                 packet_data[(uint16)(8 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13182              		.loc 1 1776 0
 13183 08fe B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13184 0902 1A46     		mov	r2, r3	@ movhi
 13185 0904 9200     		lsls	r2, r2, #2
 13186 0906 1344     		add	r3, r3, r2
 13187 0908 1A46     		mov	r2, r3	@ movhi
 13188 090a 9100     		lsls	r1, r2, #2
 13189 090c 1A46     		mov	r2, r3	@ movhi
 13190 090e 0B46     		mov	r3, r1	@ movhi
 13191 0910 1344     		add	r3, r3, r2
 13192 0912 5B00     		lsls	r3, r3, #1
 13193 0914 9AB2     		uxth	r2, r3
 13194 0916 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13195 091a 1344     		add	r3, r3, r2
 13196 091c 9BB2     		uxth	r3, r3
 13197 091e 0833     		adds	r3, r3, #8
 13198 0920 9BB2     		uxth	r3, r3
 13199 0922 1846     		mov	r0, r3
 13200 0924 B7F8A436 		ldrh	r3, [r7, #1700]
 13201 0928 654A     		ldr	r2, .L548
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 296


 13202 092a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13203 092c 1946     		mov	r1, r3
 13204 092e 664A     		ldr	r2, .L548+8
 13205 0930 0B46     		mov	r3, r1
 13206 0932 9B00     		lsls	r3, r3, #2
 13207 0934 0B44     		add	r3, r3, r1
 13208 0936 1344     		add	r3, r3, r2
 13209 0938 03F20623 		addw	r3, r3, #518
 13210 093c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13211 093e 07F58A73 		add	r3, r7, #276
 13212 0942 1A54     		strb	r2, [r3, r0]
1777:..\src/command_processing.c **** 
1778:..\src/command_processing.c ****                 for(j = imu_table_str_len; j != 0; j--)
 13213              		.loc 1 1778 0
 13214 0944 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 13215 0948 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 13216 094c 2BE0     		b	.L523
 13217              	.L524:
1779:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 13218              		.loc 1 1779 0 discriminator 3
 13219 094e B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13220 0952 1A46     		mov	r2, r3	@ movhi
 13221 0954 9200     		lsls	r2, r2, #2
 13222 0956 1344     		add	r3, r3, r2
 13223 0958 1A46     		mov	r2, r3	@ movhi
 13224 095a 9100     		lsls	r1, r2, #2
 13225 095c 1A46     		mov	r2, r3	@ movhi
 13226 095e 0B46     		mov	r3, r1	@ movhi
 13227 0960 1344     		add	r3, r3, r2
 13228 0962 5B00     		lsls	r3, r3, #1
 13229 0964 9AB2     		uxth	r2, r3
 13230 0966 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13231 096a 1344     		add	r3, r3, r2
 13232 096c 9AB2     		uxth	r2, r3
 13233 096e 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 13234 0972 9BB2     		uxth	r3, r3
 13235 0974 1344     		add	r3, r3, r2
 13236 0976 9AB2     		uxth	r2, r3
 13237 0978 B7F8A236 		ldrh	r3, [r7, #1698]	@ movhi
 13238 097c D31A     		subs	r3, r2, r3
 13239 097e 9BB2     		uxth	r3, r3
 13240 0980 0933     		adds	r3, r3, #9
 13241 0982 9BB2     		uxth	r3, r3
 13242 0984 1946     		mov	r1, r3
 13243 0986 97F88F26 		ldrb	r2, [r7, #1679]	@ zero_extendqisi2
 13244 098a B7F8A236 		ldrh	r3, [r7, #1698]
 13245 098e D31A     		subs	r3, r2, r3
 13246 0990 07F19C02 		add	r2, r7, #156
 13247 0994 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 13248 0996 07F58A73 		add	r3, r7, #276
 13249 099a 5A54     		strb	r2, [r3, r1]
1778:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 13250              		.loc 1 1778 0 discriminator 3
 13251 099c B7F8A236 		ldrh	r3, [r7, #1698]
 13252 09a0 013B     		subs	r3, r3, #1
 13253 09a2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 13254              	.L523:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 297


1778:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 13255              		.loc 1 1778 0 is_stmt 0 discriminator 1
 13256 09a6 B7F8A236 		ldrh	r3, [r7, #1698]
 13257 09aa 002B     		cmp	r3, #0
 13258 09ac CFD1     		bne	.L524
1765:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 13259              		.loc 1 1765 0 is_stmt 1 discriminator 2
 13260 09ae B7F8A436 		ldrh	r3, [r7, #1700]
 13261 09b2 0133     		adds	r3, r3, #1
 13262 09b4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13263              	.L522:
1765:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 13264              		.loc 1 1765 0 is_stmt 0 discriminator 1
 13265 09b8 444B     		ldr	r3, .L548+12
 13266 09ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13267 09bc 9BB2     		uxth	r3, r3
 13268 09be B7F8A426 		ldrh	r2, [r7, #1700]
 13269 09c2 9A42     		cmp	r2, r3
 13270 09c4 FFF4CAAE 		bcc	.L525
1780:..\src/command_processing.c ****             }  
1781:..\src/command_processing.c ****           
1782:..\src/command_processing.c **** 
1783:..\src/command_processing.c ****             /*-----------------SPI DELAY-----------------*/
1784:..\src/command_processing.c ****             
1785:..\src/command_processing.c ****             start_byte = start_byte + (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected);
 13271              		.loc 1 1785 0 is_stmt 1
 13272 09c8 404B     		ldr	r3, .L548+12
 13273 09ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13274 09cc 9BB2     		uxth	r3, r3
 13275 09ce 1A46     		mov	r2, r3	@ movhi
 13276 09d0 9200     		lsls	r2, r2, #2
 13277 09d2 1344     		add	r3, r3, r2
 13278 09d4 1A46     		mov	r2, r3	@ movhi
 13279 09d6 9100     		lsls	r1, r2, #2
 13280 09d8 1A46     		mov	r2, r3	@ movhi
 13281 09da 0B46     		mov	r3, r1	@ movhi
 13282 09dc 1344     		add	r3, r3, r2
 13283 09de 5B00     		lsls	r3, r3, #1
 13284 09e0 9AB2     		uxth	r2, r3
 13285 09e2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13286 09e6 1344     		add	r3, r3, r2
 13287 09e8 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1786:..\src/command_processing.c ****             sprintf(spi_read_delay_str, "%u - SPI read delay:", first_imu_parameter+N_IMU_Connected
 13288              		.loc 1 1786 0
 13289 09ec B7F89836 		ldrh	r3, [r7, #1688]
 13290 09f0 364A     		ldr	r2, .L548+12
 13291 09f2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 13292 09f4 1A44     		add	r2, r2, r3
 13293 09f6 07F18003 		add	r3, r7, #128
 13294 09fa 3549     		ldr	r1, .L548+16
 13295 09fc 1846     		mov	r0, r3
 13296 09fe FFF7FEFF 		bl	sprintf
1787:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_FLAG;
 13297              		.loc 1 1787 0
 13298 0a02 B7F89436 		ldrh	r3, [r7, #1684]
 13299 0a06 0233     		adds	r3, r3, #2
 13300 0a08 07F58A72 		add	r2, r7, #276
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 298


 13301 0a0c 0021     		movs	r1, #0
 13302 0a0e D154     		strb	r1, [r2, r3]
1788:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 13303              		.loc 1 1788 0
 13304 0a10 B7F89436 		ldrh	r3, [r7, #1684]
 13305 0a14 0333     		adds	r3, r3, #3
 13306 0a16 07F58A72 		add	r2, r7, #276
 13307 0a1a 0121     		movs	r1, #1
 13308 0a1c D154     		strb	r1, [r2, r3]
1789:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.imu.SPI_read_delay;
 13309              		.loc 1 1789 0
 13310 0a1e B7F89436 		ldrh	r3, [r7, #1684]
 13311 0a22 0433     		adds	r3, r3, #4
 13312 0a24 284A     		ldr	r2, .L548+8
 13313 0a26 92F80112 		ldrb	r1, [r2, #513]	@ zero_extendqisi2
 13314 0a2a 07F58A72 		add	r2, r7, #276
 13315 0a2e D154     		strb	r1, [r2, r3]
1790:..\src/command_processing.c ****             switch(c_mem.imu.SPI_read_delay) {
 13316              		.loc 1 1790 0
 13317 0a30 254B     		ldr	r3, .L548+8
 13318 0a32 93F80132 		ldrb	r3, [r3, #513]	@ zero_extendqisi2
 13319 0a36 012B     		cmp	r3, #1
 13320 0a38 17D0     		beq	.L527
 13321 0a3a 022B     		cmp	r3, #2
 13322 0a3c 28D0     		beq	.L528
 13323 0a3e 002B     		cmp	r3, #0
 13324 0a40 00D0     		beq	.L529
1791:..\src/command_processing.c ****                 case 0: 
1792:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " None"); 
1793:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1794:..\src/command_processing.c ****                     break;
1795:..\src/command_processing.c ****                 case 1: 
1796:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " Low"); 
1797:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
1798:..\src/command_processing.c ****                     break;
1799:..\src/command_processing.c ****                 case 2: 
1800:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " High");
1801:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1802:..\src/command_processing.c ****                     break;
1803:..\src/command_processing.c ****                 default:
1804:..\src/command_processing.c ****                     break;
 13325              		.loc 1 1804 0
 13326 0a42 38E0     		b	.L530
 13327              	.L529:
1792:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 13328              		.loc 1 1792 0
 13329 0a44 07F18003 		add	r3, r7, #128
 13330 0a48 1846     		mov	r0, r3
 13331 0a4a FFF7FEFF 		bl	strlen
 13332 0a4e 0346     		mov	r3, r0
 13333 0a50 1A46     		mov	r2, r3
 13334 0a52 07F18003 		add	r3, r7, #128
 13335 0a56 1344     		add	r3, r3, r2
 13336 0a58 1E4A     		ldr	r2, .L548+20
 13337 0a5a 1068     		ldr	r0, [r2]	@ unaligned
 13338 0a5c 1860     		str	r0, [r3]	@ unaligned
 13339 0a5e 9288     		ldrh	r2, [r2, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 299


 13340 0a60 9A80     		strh	r2, [r3, #4]	@ unaligned
1793:..\src/command_processing.c ****                     break;
 13341              		.loc 1 1793 0
 13342 0a62 1A23     		movs	r3, #26
 13343 0a64 87F89D36 		strb	r3, [r7, #1693]
1794:..\src/command_processing.c ****                 case 1: 
 13344              		.loc 1 1794 0
 13345 0a68 25E0     		b	.L530
 13346              	.L527:
1796:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
 13347              		.loc 1 1796 0
 13348 0a6a 07F18003 		add	r3, r7, #128
 13349 0a6e 1846     		mov	r0, r3
 13350 0a70 FFF7FEFF 		bl	strlen
 13351 0a74 0346     		mov	r3, r0
 13352 0a76 1A46     		mov	r2, r3
 13353 0a78 07F18003 		add	r3, r7, #128
 13354 0a7c 1344     		add	r3, r3, r2
 13355 0a7e 164A     		ldr	r2, .L548+24
 13356 0a80 1068     		ldr	r0, [r2]	@ unaligned
 13357 0a82 1860     		str	r0, [r3]	@ unaligned
 13358 0a84 1279     		ldrb	r2, [r2, #4]
 13359 0a86 1A71     		strb	r2, [r3, #4]
1797:..\src/command_processing.c ****                     break;
 13360              		.loc 1 1797 0
 13361 0a88 1923     		movs	r3, #25
 13362 0a8a 87F89D36 		strb	r3, [r7, #1693]
1798:..\src/command_processing.c ****                 case 2: 
 13363              		.loc 1 1798 0
 13364 0a8e 12E0     		b	.L530
 13365              	.L528:
1800:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 13366              		.loc 1 1800 0
 13367 0a90 07F18003 		add	r3, r7, #128
 13368 0a94 1846     		mov	r0, r3
 13369 0a96 FFF7FEFF 		bl	strlen
 13370 0a9a 0346     		mov	r3, r0
 13371 0a9c 1A46     		mov	r2, r3
 13372 0a9e 07F18003 		add	r3, r7, #128
 13373 0aa2 1344     		add	r3, r3, r2
 13374 0aa4 0D4A     		ldr	r2, .L548+28
 13375 0aa6 1068     		ldr	r0, [r2]	@ unaligned
 13376 0aa8 1860     		str	r0, [r3]	@ unaligned
 13377 0aaa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 13378 0aac 9A80     		strh	r2, [r3, #4]	@ unaligned
1801:..\src/command_processing.c ****                     break;
 13379              		.loc 1 1801 0
 13380 0aae 1A23     		movs	r3, #26
 13381 0ab0 87F89D36 		strb	r3, [r7, #1693]
1802:..\src/command_processing.c ****                 default:
 13382              		.loc 1 1802 0
 13383 0ab4 00BF     		nop
 13384              	.L530:
1805:..\src/command_processing.c ****             }            
1806:..\src/command_processing.c ****             for(i = spi_read_delay_str_len; i != 0; i--)
 13385              		.loc 1 1806 0
 13386 0ab6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 300


 13387 0aba A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13388 0abe 28E0     		b	.L531
 13389              	.L549:
 13390              		.align	2
 13391              	.L548:
 13392 0ac0 00000000 		.word	IMU_connected
 13393 0ac4 B4100000 		.word	.LC146
 13394 0ac8 00000000 		.word	c_mem
 13395 0acc 00000000 		.word	N_IMU_Connected
 13396 0ad0 D0100000 		.word	.LC147
 13397 0ad4 E8100000 		.word	.LC148
 13398 0ad8 F0100000 		.word	.LC149
 13399 0adc F8100000 		.word	.LC150
 13400              	.L532:
1807:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 13401              		.loc 1 1807 0 discriminator 3
 13402 0ae0 B7F89436 		ldrh	r3, [r7, #1684]
 13403 0ae4 5A1D     		adds	r2, r3, #5
 13404 0ae6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 13405 0aea 1A44     		add	r2, r2, r3
 13406 0aec B7F8A436 		ldrh	r3, [r7, #1700]
 13407 0af0 D31A     		subs	r3, r2, r3
 13408 0af2 97F89D16 		ldrb	r1, [r7, #1693]	@ zero_extendqisi2
 13409 0af6 B7F8A426 		ldrh	r2, [r7, #1700]
 13410 0afa 8A1A     		subs	r2, r1, r2
 13411 0afc 07F18001 		add	r1, r7, #128
 13412 0b00 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 13413 0b02 07F58A72 		add	r2, r7, #276
 13414 0b06 D154     		strb	r1, [r2, r3]
1806:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 13415              		.loc 1 1806 0 discriminator 3
 13416 0b08 B7F8A436 		ldrh	r3, [r7, #1700]
 13417 0b0c 013B     		subs	r3, r3, #1
 13418 0b0e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13419              	.L531:
1806:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 13420              		.loc 1 1806 0 is_stmt 0 discriminator 1
 13421 0b12 B7F8A436 		ldrh	r3, [r7, #1700]
 13422 0b16 002B     		cmp	r3, #0
 13423 0b18 E2D1     		bne	.L532
1808:..\src/command_processing.c ****             //The following byte indicates the number of menus at the end of the packet to send
1809:..\src/command_processing.c ****             packet_data[5+start_byte + spi_read_delay_str_len] = 1;
 13424              		.loc 1 1809 0 is_stmt 1
 13425 0b1a B7F89436 		ldrh	r3, [r7, #1684]
 13426 0b1e 5A1D     		adds	r2, r3, #5
 13427 0b20 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 13428 0b24 1344     		add	r3, r3, r2
 13429 0b26 07F58A72 		add	r2, r7, #276
 13430 0b2a 0121     		movs	r1, #1
 13431 0b2c D154     		strb	r1, [r2, r3]
1810:..\src/command_processing.c ****                   
1811:..\src/command_processing.c ****             
1812:..\src/command_processing.c ****             /*------------PARAMETERS MENU-----------*/
1813:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 13432              		.loc 1 1813 0
 13433 0b2e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13434 0b32 3233     		adds	r3, r3, #50
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 301


 13435 0b34 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1814:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 13436              		.loc 1 1814 0
 13437 0b38 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 13438 0b3c A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13439 0b40 1AE0     		b	.L533
 13440              	.L534:
1815:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte) + spi_delay_menu_len - i] = spi_delay_menu[spi
 13441              		.loc 1 1815 0 discriminator 3
 13442 0b42 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13443 0b46 0233     		adds	r3, r3, #2
 13444 0b48 9BB2     		uxth	r3, r3
 13445 0b4a 1A46     		mov	r2, r3
 13446 0b4c 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 13447 0b50 1A44     		add	r2, r2, r3
 13448 0b52 B7F8A436 		ldrh	r3, [r7, #1700]
 13449 0b56 D31A     		subs	r3, r2, r3
 13450 0b58 97F88E16 		ldrb	r1, [r7, #1678]	@ zero_extendqisi2
 13451 0b5c B7F8A426 		ldrh	r2, [r7, #1700]
 13452 0b60 8A1A     		subs	r2, r1, r2
 13453 0b62 07F10801 		add	r1, r7, #8
 13454 0b66 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 13455 0b68 07F58A72 		add	r2, r7, #276
 13456 0b6c D154     		strb	r1, [r2, r3]
1814:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 13457              		.loc 1 1814 0 discriminator 3
 13458 0b6e B7F8A436 		ldrh	r3, [r7, #1700]
 13459 0b72 013B     		subs	r3, r3, #1
 13460 0b74 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13461              	.L533:
1814:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 13462              		.loc 1 1814 0 is_stmt 0 discriminator 1
 13463 0b78 B7F8A436 		ldrh	r3, [r7, #1700]
 13464 0b7c 002B     		cmp	r3, #0
 13465 0b7e E0D1     		bne	.L534
1816:..\src/command_processing.c **** 
1817:..\src/command_processing.c ****             packet_data[packet_length - 1] = LCRChecksum(packet_data,packet_length - 1);
 13466              		.loc 1 1817 0 is_stmt 1
 13467 0b80 B7F89636 		ldrh	r3, [r7, #1686]
 13468 0b84 5C1E     		subs	r4, r3, #1
 13469 0b86 B7F89636 		ldrh	r3, [r7, #1686]	@ movhi
 13470 0b8a DBB2     		uxtb	r3, r3
 13471 0b8c 013B     		subs	r3, r3, #1
 13472 0b8e DAB2     		uxtb	r2, r3
 13473 0b90 07F58A73 		add	r3, r7, #276
 13474 0b94 1146     		mov	r1, r2
 13475 0b96 1846     		mov	r0, r3
 13476 0b98 FFF7FEFF 		bl	LCRChecksum
 13477 0b9c 0346     		mov	r3, r0
 13478 0b9e 1A46     		mov	r2, r3
 13479 0ba0 07F58A73 		add	r3, r7, #276
 13480 0ba4 1A55     		strb	r2, [r3, r4]
1818:..\src/command_processing.c ****             commWrite(packet_data, packet_length);
 13481              		.loc 1 1818 0
 13482 0ba6 B7F89626 		ldrh	r2, [r7, #1686]
 13483 0baa 07F58A73 		add	r3, r7, #276
 13484 0bae 1146     		mov	r1, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 302


 13485 0bb0 1846     		mov	r0, r3
 13486 0bb2 FFF7FEFF 		bl	commWrite
1819:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 13487              		.loc 1 1819 0
 13488 0bb6 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
1820:..\src/command_processing.c ****         break;
 13489              		.loc 1 1820 0
 13490 0bba 09E1     		b	.L535
 13491              	.L542:
1821:..\src/command_processing.c **** 
1822:..\src/command_processing.c **** //=========================================================     other_params
1823:..\src/command_processing.c ****         default: 
1824:..\src/command_processing.c ****             
1825:..\src/command_processing.c ****             if (index < first_imu_parameter-1)
 13492              		.loc 1 1825 0
 13493 0bbc BB1D     		adds	r3, r7, #6
 13494 0bbe 1A88     		ldrh	r2, [r3]
 13495 0bc0 B7F89836 		ldrh	r3, [r7, #1688]
 13496 0bc4 013B     		subs	r3, r3, #1
 13497 0bc6 9A42     		cmp	r2, r3
 13498 0bc8 C0F20181 		blt	.L543
1826:..\src/command_processing.c ****                 break;
1827:..\src/command_processing.c ****             
1828:..\src/command_processing.c ****             if (index == first_imu_parameter+N_IMU_Connected) {
 13499              		.loc 1 1828 0
 13500 0bcc BB1D     		adds	r3, r7, #6
 13501 0bce 1A88     		ldrh	r2, [r3]
 13502 0bd0 B7F89836 		ldrh	r3, [r7, #1688]
 13503 0bd4 8149     		ldr	r1, .L550
 13504 0bd6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 13505 0bd8 0B44     		add	r3, r3, r1
 13506 0bda 9A42     		cmp	r2, r3
 13507 0bdc 05D1     		bne	.L537
1829:..\src/command_processing.c ****                 g_mem.imu.SPI_read_delay = g_rx.buffer[3];  //SPI read delay - uint8
 13508              		.loc 1 1829 0
 13509 0bde 804B     		ldr	r3, .L550+4
 13510 0be0 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 13511 0be2 804B     		ldr	r3, .L550+8
 13512 0be4 83F80122 		strb	r2, [r3, #513]
1830:..\src/command_processing.c ****                 break;
 13513              		.loc 1 1830 0
 13514 0be8 F2E0     		b	.L535
 13515              	.L537:
1831:..\src/command_processing.c ****             }
1832:..\src/command_processing.c ****             
1833:..\src/command_processing.c ****             if (index == first_imu_parameter-1) {
 13516              		.loc 1 1833 0
 13517 0bea BB1D     		adds	r3, r7, #6
 13518 0bec 1A88     		ldrh	r2, [r3]
 13519 0bee B7F89836 		ldrh	r3, [r7, #1688]
 13520 0bf2 013B     		subs	r3, r3, #1
 13521 0bf4 9A42     		cmp	r2, r3
 13522 0bf6 05D1     		bne	.L538
1834:..\src/command_processing.c ****                 g_mem.dev.id = g_rx.buffer[3];          //ID - uint8
 13523              		.loc 1 1834 0
 13524 0bf8 794B     		ldr	r3, .L550+4
 13525 0bfa DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 303


 13526 0bfc 794B     		ldr	r3, .L550+8
 13527 0bfe 83F8A020 		strb	r2, [r3, #160]
1835:..\src/command_processing.c ****             }
1836:..\src/command_processing.c ****             else {
1837:..\src/command_processing.c ****             
1838:..\src/command_processing.c ****                 //Set Imu table (index > = first_imu_parameter)
1839:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][0] = g_rx.buffer[3];
1840:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
1841:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
1842:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
1843:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
1844:..\src/command_processing.c ****                 
1845:..\src/command_processing.c ****                 // Recompute IMU packets dimension
1846:..\src/command_processing.c ****                 imus_data_size = 1; //header    
1847:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
1848:..\src/command_processing.c ****                 {
1849:..\src/command_processing.c ****                     single_imu_size[IMU_connected[i]] = 1 + 6*g_mem.imu.IMU_conf[IMU_connected[i]][
1850:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
1851:..\src/command_processing.c ****                 }
1852:..\src/command_processing.c ****                 imus_data_size = imus_data_size + 1;    //checksum
1853:..\src/command_processing.c ****             
1854:..\src/command_processing.c ****             }
1855:..\src/command_processing.c ****             
1856:..\src/command_processing.c ****         break;
 13528              		.loc 1 1856 0
 13529 0c02 E5E0     		b	.L535
 13530              	.L538:
1839:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
 13531              		.loc 1 1839 0
 13532 0c04 BB1D     		adds	r3, r7, #6
 13533 0c06 1A88     		ldrh	r2, [r3]
 13534 0c08 B7F89836 		ldrh	r3, [r7, #1688]
 13535 0c0c D31A     		subs	r3, r2, r3
 13536 0c0e 764A     		ldr	r2, .L550+12
 13537 0c10 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13538 0c12 1946     		mov	r1, r3
 13539 0c14 724B     		ldr	r3, .L550+4
 13540 0c16 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 13541 0c18 724A     		ldr	r2, .L550+8
 13542 0c1a 0B46     		mov	r3, r1
 13543 0c1c 9B00     		lsls	r3, r3, #2
 13544 0c1e 0B44     		add	r3, r3, r1
 13545 0c20 1344     		add	r3, r3, r2
 13546 0c22 03F20223 		addw	r3, r3, #514
 13547 0c26 0246     		mov	r2, r0
 13548 0c28 1A70     		strb	r2, [r3]
1840:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
 13549              		.loc 1 1840 0
 13550 0c2a BB1D     		adds	r3, r7, #6
 13551 0c2c 1A88     		ldrh	r2, [r3]
 13552 0c2e B7F89836 		ldrh	r3, [r7, #1688]
 13553 0c32 D31A     		subs	r3, r2, r3
 13554 0c34 6C4A     		ldr	r2, .L550+12
 13555 0c36 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13556 0c38 1946     		mov	r1, r3
 13557 0c3a 694B     		ldr	r3, .L550+4
 13558 0c3c 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 304


 13559 0c3e 694A     		ldr	r2, .L550+8
 13560 0c40 0B46     		mov	r3, r1
 13561 0c42 9B00     		lsls	r3, r3, #2
 13562 0c44 0B44     		add	r3, r3, r1
 13563 0c46 1344     		add	r3, r3, r2
 13564 0c48 03F20323 		addw	r3, r3, #515
 13565 0c4c 0246     		mov	r2, r0
 13566 0c4e 1A70     		strb	r2, [r3]
1841:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
 13567              		.loc 1 1841 0
 13568 0c50 BB1D     		adds	r3, r7, #6
 13569 0c52 1A88     		ldrh	r2, [r3]
 13570 0c54 B7F89836 		ldrh	r3, [r7, #1688]
 13571 0c58 D31A     		subs	r3, r2, r3
 13572 0c5a 634A     		ldr	r2, .L550+12
 13573 0c5c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13574 0c5e 1946     		mov	r1, r3
 13575 0c60 5F4B     		ldr	r3, .L550+4
 13576 0c62 5879     		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 13577 0c64 5F4A     		ldr	r2, .L550+8
 13578 0c66 0B46     		mov	r3, r1
 13579 0c68 9B00     		lsls	r3, r3, #2
 13580 0c6a 0B44     		add	r3, r3, r1
 13581 0c6c 1344     		add	r3, r3, r2
 13582 0c6e 03F50173 		add	r3, r3, #516
 13583 0c72 0246     		mov	r2, r0
 13584 0c74 1A70     		strb	r2, [r3]
1842:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
 13585              		.loc 1 1842 0
 13586 0c76 BB1D     		adds	r3, r7, #6
 13587 0c78 1A88     		ldrh	r2, [r3]
 13588 0c7a B7F89836 		ldrh	r3, [r7, #1688]
 13589 0c7e D31A     		subs	r3, r2, r3
 13590 0c80 594A     		ldr	r2, .L550+12
 13591 0c82 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13592 0c84 1946     		mov	r1, r3
 13593 0c86 564B     		ldr	r3, .L550+4
 13594 0c88 9879     		ldrb	r0, [r3, #6]	@ zero_extendqisi2
 13595 0c8a 564A     		ldr	r2, .L550+8
 13596 0c8c 0B46     		mov	r3, r1
 13597 0c8e 9B00     		lsls	r3, r3, #2
 13598 0c90 0B44     		add	r3, r3, r1
 13599 0c92 1344     		add	r3, r3, r2
 13600 0c94 03F20523 		addw	r3, r3, #517
 13601 0c98 0246     		mov	r2, r0
 13602 0c9a 1A70     		strb	r2, [r3]
1843:..\src/command_processing.c ****                 
 13603              		.loc 1 1843 0
 13604 0c9c BB1D     		adds	r3, r7, #6
 13605 0c9e 1A88     		ldrh	r2, [r3]
 13606 0ca0 B7F89836 		ldrh	r3, [r7, #1688]
 13607 0ca4 D31A     		subs	r3, r2, r3
 13608 0ca6 504A     		ldr	r2, .L550+12
 13609 0ca8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13610 0caa 1946     		mov	r1, r3
 13611 0cac 4C4B     		ldr	r3, .L550+4
 13612 0cae D879     		ldrb	r0, [r3, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 305


 13613 0cb0 4C4A     		ldr	r2, .L550+8
 13614 0cb2 0B46     		mov	r3, r1
 13615 0cb4 9B00     		lsls	r3, r3, #2
 13616 0cb6 0B44     		add	r3, r3, r1
 13617 0cb8 1344     		add	r3, r3, r2
 13618 0cba 03F20623 		addw	r3, r3, #518
 13619 0cbe 0246     		mov	r2, r0
 13620 0cc0 1A70     		strb	r2, [r3]
1846:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
 13621              		.loc 1 1846 0
 13622 0cc2 4A4B     		ldr	r3, .L550+16
 13623 0cc4 0122     		movs	r2, #1
 13624 0cc6 1A60     		str	r2, [r3]
1847:..\src/command_processing.c ****                 {
 13625              		.loc 1 1847 0
 13626 0cc8 0023     		movs	r3, #0
 13627 0cca A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13628 0cce 71E0     		b	.L540
 13629              	.L541:
1849:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
 13630              		.loc 1 1849 0 discriminator 3
 13631 0cd0 B7F8A436 		ldrh	r3, [r7, #1700]
 13632 0cd4 444A     		ldr	r2, .L550+12
 13633 0cd6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13634 0cd8 1C46     		mov	r4, r3
 13635 0cda B7F8A436 		ldrh	r3, [r7, #1700]
 13636 0cde 424A     		ldr	r2, .L550+12
 13637 0ce0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13638 0ce2 1946     		mov	r1, r3
 13639 0ce4 3F4A     		ldr	r2, .L550+8
 13640 0ce6 0B46     		mov	r3, r1
 13641 0ce8 9B00     		lsls	r3, r3, #2
 13642 0cea 0B44     		add	r3, r3, r1
 13643 0cec 1344     		add	r3, r3, r2
 13644 0cee 03F20223 		addw	r3, r3, #514
 13645 0cf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13646 0cf4 1A46     		mov	r2, r3
 13647 0cf6 1346     		mov	r3, r2
 13648 0cf8 5B00     		lsls	r3, r3, #1
 13649 0cfa 1344     		add	r3, r3, r2
 13650 0cfc 5B00     		lsls	r3, r3, #1
 13651 0cfe 5A1C     		adds	r2, r3, #1
 13652 0d00 B7F8A436 		ldrh	r3, [r7, #1700]
 13653 0d04 3849     		ldr	r1, .L550+12
 13654 0d06 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13655 0d08 1846     		mov	r0, r3
 13656 0d0a 3649     		ldr	r1, .L550+8
 13657 0d0c 0346     		mov	r3, r0
 13658 0d0e 9B00     		lsls	r3, r3, #2
 13659 0d10 0344     		add	r3, r3, r0
 13660 0d12 0B44     		add	r3, r3, r1
 13661 0d14 03F20323 		addw	r3, r3, #515
 13662 0d18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13663 0d1a 1946     		mov	r1, r3
 13664 0d1c 0B46     		mov	r3, r1
 13665 0d1e 5B00     		lsls	r3, r3, #1
 13666 0d20 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 306


 13667 0d22 5B00     		lsls	r3, r3, #1
 13668 0d24 1A44     		add	r2, r2, r3
 13669 0d26 B7F8A436 		ldrh	r3, [r7, #1700]
 13670 0d2a 2F49     		ldr	r1, .L550+12
 13671 0d2c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13672 0d2e 1846     		mov	r0, r3
 13673 0d30 2C49     		ldr	r1, .L550+8
 13674 0d32 0346     		mov	r3, r0
 13675 0d34 9B00     		lsls	r3, r3, #2
 13676 0d36 0344     		add	r3, r3, r0
 13677 0d38 0B44     		add	r3, r3, r1
 13678 0d3a 03F50173 		add	r3, r3, #516
 13679 0d3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13680 0d40 1946     		mov	r1, r3
 13681 0d42 0B46     		mov	r3, r1
 13682 0d44 5B00     		lsls	r3, r3, #1
 13683 0d46 0B44     		add	r3, r3, r1
 13684 0d48 5B00     		lsls	r3, r3, #1
 13685 0d4a 1A44     		add	r2, r2, r3
 13686 0d4c B7F8A436 		ldrh	r3, [r7, #1700]
 13687 0d50 2549     		ldr	r1, .L550+12
 13688 0d52 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13689 0d54 1846     		mov	r0, r3
 13690 0d56 2349     		ldr	r1, .L550+8
 13691 0d58 0346     		mov	r3, r0
 13692 0d5a 9B00     		lsls	r3, r3, #2
 13693 0d5c 0344     		add	r3, r3, r0
 13694 0d5e 0B44     		add	r3, r3, r1
 13695 0d60 03F20523 		addw	r3, r3, #517
 13696 0d64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13697 0d66 1B01     		lsls	r3, r3, #4
 13698 0d68 1A44     		add	r2, r2, r3
 13699 0d6a B7F8A436 		ldrh	r3, [r7, #1700]
 13700 0d6e 1E49     		ldr	r1, .L550+12
 13701 0d70 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13702 0d72 1846     		mov	r0, r3
 13703 0d74 1B49     		ldr	r1, .L550+8
 13704 0d76 0346     		mov	r3, r0
 13705 0d78 9B00     		lsls	r3, r3, #2
 13706 0d7a 0344     		add	r3, r3, r0
 13707 0d7c 0B44     		add	r3, r3, r1
 13708 0d7e 03F20623 		addw	r3, r3, #518
 13709 0d82 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13710 0d84 5B00     		lsls	r3, r3, #1
 13711 0d86 1344     		add	r3, r3, r2
 13712 0d88 0133     		adds	r3, r3, #1
 13713 0d8a 194A     		ldr	r2, .L550+20
 13714 0d8c 42F82430 		str	r3, [r2, r4, lsl #2]
1850:..\src/command_processing.c ****                 }
 13715              		.loc 1 1850 0 discriminator 3
 13716 0d90 B7F8A436 		ldrh	r3, [r7, #1700]
 13717 0d94 144A     		ldr	r2, .L550+12
 13718 0d96 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13719 0d98 1A46     		mov	r2, r3
 13720 0d9a 154B     		ldr	r3, .L550+20
 13721 0d9c 53F82220 		ldr	r2, [r3, r2, lsl #2]
 13722 0da0 124B     		ldr	r3, .L550+16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 307


 13723 0da2 1B68     		ldr	r3, [r3]
 13724 0da4 1344     		add	r3, r3, r2
 13725 0da6 114A     		ldr	r2, .L550+16
 13726 0da8 1360     		str	r3, [r2]
1847:..\src/command_processing.c ****                 {
 13727              		.loc 1 1847 0 discriminator 3
 13728 0daa B7F8A436 		ldrh	r3, [r7, #1700]
 13729 0dae 0133     		adds	r3, r3, #1
 13730 0db0 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13731              	.L540:
1847:..\src/command_processing.c ****                 {
 13732              		.loc 1 1847 0 is_stmt 0 discriminator 1
 13733 0db4 094B     		ldr	r3, .L550
 13734 0db6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13735 0db8 9BB2     		uxth	r3, r3
 13736 0dba B7F8A426 		ldrh	r2, [r7, #1700]
 13737 0dbe 9A42     		cmp	r2, r3
 13738 0dc0 86D3     		bcc	.L541
1852:..\src/command_processing.c ****             
 13739              		.loc 1 1852 0 is_stmt 1
 13740 0dc2 0A4B     		ldr	r3, .L550+16
 13741 0dc4 1B68     		ldr	r3, [r3]
 13742 0dc6 0133     		adds	r3, r3, #1
 13743 0dc8 084A     		ldr	r2, .L550+16
 13744 0dca 1360     		str	r3, [r2]
 13745              		.loc 1 1856 0
 13746 0dcc 00E0     		b	.L535
 13747              	.L543:
1826:..\src/command_processing.c ****             
 13748              		.loc 1 1826 0
 13749 0dce 00BF     		nop
 13750              	.L535:
1857:..\src/command_processing.c ****     }
1858:..\src/command_processing.c **** }
 13751              		.loc 1 1858 0 discriminator 1
 13752 0dd0 00BF     		nop
 13753 0dd2 07F5D567 		add	r7, r7, #1704
 13754              		.cfi_def_cfa_offset 16
 13755 0dd6 BD46     		mov	sp, r7
 13756              		.cfi_def_cfa_register 13
 13757              		@ sp needed
 13758 0dd8 B0BD     		pop	{r4, r5, r7, pc}
 13759              	.L551:
 13760 0dda 00BF     		.align	2
 13761              	.L550:
 13762 0ddc 00000000 		.word	N_IMU_Connected
 13763 0de0 00000000 		.word	g_rx
 13764 0de4 00000000 		.word	g_mem
 13765 0de8 00000000 		.word	IMU_connected
 13766 0dec 00000000 		.word	imus_data_size
 13767 0df0 00000000 		.word	single_imu_size
 13768              		.cfi_endproc
 13769              	.LFE70:
 13770              		.size	get_IMU_param_list, .-get_IMU_param_list
 13771              		.section	.text.setZeros,"ax",%progbits
 13772              		.align	2
 13773              		.global	setZeros
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 308


 13774              		.thumb
 13775              		.thumb_func
 13776              		.type	setZeros, %function
 13777              	setZeros:
 13778              	.LFB71:
1859:..\src/command_processing.c **** 
1860:..\src/command_processing.c **** //==============================================================================
1861:..\src/command_processing.c **** //                                                            COMMAND SET ZEROS
1862:..\src/command_processing.c **** //==============================================================================
1863:..\src/command_processing.c **** 
1864:..\src/command_processing.c **** void setZeros()
1865:..\src/command_processing.c **** {
 13779              		.loc 1 1865 0
 13780              		.cfi_startproc
 13781              		@ args = 0, pretend = 0, frame = 8
 13782              		@ frame_needed = 1, uses_anonymous_args = 0
 13783 0000 B0B5     		push	{r4, r5, r7, lr}
 13784              		.cfi_def_cfa_offset 16
 13785              		.cfi_offset 4, -16
 13786              		.cfi_offset 5, -12
 13787              		.cfi_offset 7, -8
 13788              		.cfi_offset 14, -4
 13789 0002 82B0     		sub	sp, sp, #8
 13790              		.cfi_def_cfa_offset 24
 13791 0004 00AF     		add	r7, sp, #0
 13792              		.cfi_def_cfa_register 7
1866:..\src/command_processing.c ****     uint8 CYDATA i, j;        // iterator
1867:..\src/command_processing.c ****     
1868:..\src/command_processing.c ****     for (j = 0; j < N_ENCODER_LINE_MAX; j++) {
 13793              		.loc 1 1868 0
 13794 0006 0023     		movs	r3, #0
 13795 0008 BB71     		strb	r3, [r7, #6]
 13796 000a 2FE0     		b	.L553
 13797              	.L556:
1869:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13798              		.loc 1 1869 0
 13799 000c 0023     		movs	r3, #0
 13800 000e FB71     		strb	r3, [r7, #7]
 13801 0010 22E0     		b	.L554
 13802              	.L555:
1870:..\src/command_processing.c ****             g_mem.enc[j].m_off[i] = (int32)(data_encoder_raw[j][i]);
 13803              		.loc 1 1870 0 discriminator 3
 13804 0012 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 13805 0014 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 13806 0016 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 13807 0018 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 13808 001a 194D     		ldr	r5, .L557
 13809 001c 0B46     		mov	r3, r1
 13810 001e 9B00     		lsls	r3, r3, #2
 13811 0020 0B44     		add	r3, r3, r1
 13812 0022 2344     		add	r3, r3, r4
 13813 0024 55F82330 		ldr	r3, [r5, r3, lsl #2]
 13814 0028 1C46     		mov	r4, r3
 13815 002a 1649     		ldr	r1, .L557+4
 13816 002c 1346     		mov	r3, r2
 13817 002e 5B00     		lsls	r3, r3, #1
 13818 0030 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 309


 13819 0032 9B00     		lsls	r3, r3, #2
 13820 0034 0344     		add	r3, r3, r0
 13821 0036 6633     		adds	r3, r3, #102
 13822 0038 41F82340 		str	r4, [r1, r3, lsl #2]
1871:..\src/command_processing.c ****             g_meas[j].rot[i] = (int8)0;
 13823              		.loc 1 1871 0 discriminator 3
 13824 003c BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 13825 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13826 0040 1149     		ldr	r1, .L557+8
 13827 0042 3420     		movs	r0, #52
 13828 0044 00FB02F2 		mul	r2, r0, r2
 13829 0048 0A44     		add	r2, r2, r1
 13830 004a 1344     		add	r3, r3, r2
 13831 004c 1833     		adds	r3, r3, #24
 13832 004e 0022     		movs	r2, #0
 13833 0050 1A70     		strb	r2, [r3]
1869:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13834              		.loc 1 1869 0 discriminator 3
 13835 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13836 0054 0133     		adds	r3, r3, #1
 13837 0056 FB71     		strb	r3, [r7, #7]
 13838              	.L554:
1869:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13839              		.loc 1 1869 0 is_stmt 0 discriminator 1
 13840 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13841 005a 022B     		cmp	r3, #2
 13842 005c D9D9     		bls	.L555
1872:..\src/command_processing.c ****         }
1873:..\src/command_processing.c ****         reset_last_value_flag[j] = 1;
 13843              		.loc 1 1873 0 is_stmt 1 discriminator 2
 13844 005e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 13845 0060 0A4A     		ldr	r2, .L557+12
 13846 0062 0121     		movs	r1, #1
 13847 0064 D154     		strb	r1, [r2, r3]
1868:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13848              		.loc 1 1868 0 discriminator 2
 13849 0066 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 13850 0068 0133     		adds	r3, r3, #1
 13851 006a BB71     		strb	r3, [r7, #6]
 13852              	.L553:
1868:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13853              		.loc 1 1868 0 is_stmt 0 discriminator 1
 13854 006c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 13855 006e 012B     		cmp	r3, #1
 13856 0070 CCD9     		bls	.L556
1874:..\src/command_processing.c ****     }
1875:..\src/command_processing.c **** 
1876:..\src/command_processing.c ****     sendAcknowledgment(ACK_OK);
 13857              		.loc 1 1876 0 is_stmt 1
 13858 0072 0120     		movs	r0, #1
 13859 0074 FFF7FEFF 		bl	sendAcknowledgment
1877:..\src/command_processing.c **** }
 13860              		.loc 1 1877 0
 13861 0078 00BF     		nop
 13862 007a 0837     		adds	r7, r7, #8
 13863              		.cfi_def_cfa_offset 16
 13864 007c BD46     		mov	sp, r7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 310


 13865              		.cfi_def_cfa_register 13
 13866              		@ sp needed
 13867 007e B0BD     		pop	{r4, r5, r7, pc}
 13868              	.L558:
 13869              		.align	2
 13870              	.L557:
 13871 0080 00000000 		.word	data_encoder_raw
 13872 0084 00000000 		.word	g_mem
 13873 0088 00000000 		.word	g_meas
 13874 008c 00000000 		.word	reset_last_value_flag
 13875              		.cfi_endproc
 13876              	.LFE71:
 13877              		.size	setZeros, .-setZeros
 13878              		.section	.rodata
 13879              		.align	2
 13880              	.LC151:
 13881 1130 0D0A00   		.ascii	"\015\012\000"
 13882 1133 00       		.align	2
 13883              	.LC152:
 13884 1134 4669726D 		.ascii	"Firmware version: \000"
 13884      77617265 
 13884      20766572 
 13884      73696F6E 
 13884      3A2000
 13885 1147 00       		.align	2
 13886              	.LC153:
 13887 1148 47656E65 		.ascii	"Generic firmware v. 1.9.4 (PSoC5)\000"
 13887      72696320 
 13887      6669726D 
 13887      77617265 
 13887      20762E20 
 13888 116a 0000     		.align	2
 13889              	.LC154:
 13890 116c 2E0D0A0D 		.ascii	".\015\012\015\012\000"
 13890      0A00
 13891 1172 0000     		.align	2
 13892              	.LC155:
 13893 1174 44455649 		.ascii	"DEVICE INFO\015\012\000"
 13893      43452049 
 13893      4E464F0D 
 13893      0A00
 13894 1182 0000     		.align	2
 13895              	.LC156:
 13896 1184 49443A20 		.ascii	"ID: %d\015\012\000"
 13896      25640D0A 
 13896      00
 13897 118d 000000   		.align	2
 13898              	.LC157:
 13899 1190 44657669 		.ascii	"Device: SOFTHAND PRO\015\012\000"
 13899      63653A20 
 13899      534F4654 
 13899      48414E44 
 13899      2050524F 
 13900 11a7 00       		.align	2
 13901              	.LC158:
 13902 11a8 44657669 		.ascii	"Device: GENERIC 2 MOTORS\015\012\000"
 13902      63653A20 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 311


 13902      47454E45 
 13902      52494320 
 13902      32204D4F 
 13903 11c3 00       		.align	2
 13904              	.LC159:
 13905 11c4 44657669 		.ascii	"Device: AIR CHAMBERS HAPTIC FEEDBACK\015\012\000"
 13905      63653A20 
 13905      41495220 
 13905      4348414D 
 13905      42455253 
 13906 11eb 00       		.align	2
 13907              	.LC160:
 13908 11ec 44657669 		.ascii	"Device: OTTOBOCK 6v ACTIVE WRIST MASTER\015\012\000"
 13908      63653A20 
 13908      4F54544F 
 13908      424F434B 
 13908      20367620 
 13909 1216 0000     		.align	2
 13910              	.LC161:
 13911 1218 44657669 		.ascii	"Device: SOFTHAND 2 MOTORS\015\012\000"
 13911      63653A20 
 13911      534F4654 
 13911      48414E44 
 13911      2032204D 
 13912              		.align	2
 13913              	.LC162:
 13914 1234 48616E64 		.ascii	"Hand side: RIGHT\015\012\000"
 13914      20736964 
 13914      653A2052 
 13914      49474854 
 13914      0D0A00
 13915 1247 00       		.align	2
 13916              	.LC163:
 13917 1248 48616E64 		.ascii	"Hand side: LEFT\015\012\000"
 13917      20736964 
 13917      653A204C 
 13917      4546540D 
 13917      0A00
 13918 125a 0000     		.align	2
 13919              	.LC164:
 13920 125c 55736572 		.ascii	"User: MARIA\015\012\000"
 13920      3A204D41 
 13920      5249410D 
 13920      0A00
 13921 126a 0000     		.align	2
 13922              	.LC165:
 13923 126c 55736572 		.ascii	"User: ROZA\015\012\000"
 13923      3A20524F 
 13923      5A410D0A 
 13923      00
 13924 1279 000000   		.align	2
 13925              	.LC166:
 13926 127c 55736572 		.ascii	"User: GENERIC USER\015\012\000"
 13926      3A204745 
 13926      4E455249 
 13926      43205553 
 13926      45520D0A 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 312


 13927 1291 000000   		.align	2
 13928              	.LC167:
 13929 1294 4D4F544F 		.ascii	"MOTOR %d INFO\015\012\000"
 13929      52202564 
 13929      20494E46 
 13929      4F0D0A00 
 13930              		.align	2
 13931              	.LC168:
 13932 12a4 4D6F746F 		.ascii	"Motor reference\000"
 13932      72207265 
 13932      66657265 
 13932      6E636500 
 13933              		.align	2
 13934              	.LC169:
 13935 12b4 202D2043 		.ascii	" - Currents: \000"
 13935      75727265 
 13935      6E74733A 
 13935      2000
 13936 12c2 0000     		.align	2
 13937              	.LC170:
 13938 12c4 202D2050 		.ascii	" - Pwm: \000"
 13938      776D3A20 
 13938      00
 13939 12cd 000000   		.align	2
 13940              	.LC171:
 13941 12d0 202D2050 		.ascii	" - Position: \000"
 13941      6F736974 
 13941      696F6E3A 
 13941      2000
 13942 12de 0000     		.align	2
 13943              	.LC172:
 13944 12e0 25642000 		.ascii	"%d \000"
 13945              		.align	2
 13946              	.LC173:
 13947 12e4 4D6F746F 		.ascii	"Motor enabled: \000"
 13947      7220656E 
 13947      61626C65 
 13947      643A2000 
 13948              		.align	2
 13949              	.LC174:
 13950 12f4 5945530D 		.ascii	"YES\015\012\000"
 13950      0A00
 13951 12fa 0000     		.align	2
 13952              	.LC175:
 13953 12fc 4E4F0D0A 		.ascii	"NO\015\012\000"
 13953      00
 13954 1301 000000   		.align	2
 13955              	.LC176:
 13956 1304 50574D20 		.ascii	"PWM rescaling activation: \000"
 13956      72657363 
 13956      616C696E 
 13956      67206163 
 13956      74697661 
 13957 131f 00       		.align	2
 13958              	.LC177:
 13959 1320 5945530A 		.ascii	"YES\012\000"
 13959      00
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 313


 13960 1325 000000   		.align	2
 13961              	.LC178:
 13962 1328 4E4F0A00 		.ascii	"NO\012\000"
 13963              		.align	2
 13964              	.LC179:
 13965 132c 50574D20 		.ascii	"PWM Limit: %d\015\012\000"
 13965      4C696D69 
 13965      743A2025 
 13965      640D0A00 
 13966              		.align	2
 13967              	.LC180:
 13968 133c 0D0A4D45 		.ascii	"\015\012MEASUREMENTS INFO\015\012\000"
 13968      41535552 
 13968      454D454E 
 13968      54532049 
 13968      4E464F0D 
 13969 1352 0000     		.align	2
 13970              	.LC181:
 13971 1354 53656E73 		.ascii	"Sensor value: \000"
 13971      6F722076 
 13971      616C7565 
 13971      3A2000
 13972 1363 00       		.align	2
 13973              	.LC182:
 13974 1364 256400   		.ascii	"%d\000"
 13975 1367 00       		.align	2
 13976              	.LC183:
 13977 1368 2C2000   		.ascii	", \000"
 13978 136b 00       		.align	2
 13979              	.LC184:
 13980 136c 4A6F7973 		.ascii	"Joystick measurements: %d, %d\000"
 13980      7469636B 
 13980      206D6561 
 13980      73757265 
 13980      6D656E74 
 13981 138a 0000     		.align	2
 13982              	.LC185:
 13983 138c 42617474 		.ascii	"Battery %d Voltage (mV): %ld\000"
 13983      65727920 
 13983      25642056 
 13983      6F6C7461 
 13983      67652028 
 13984 13a9 000000   		.align	2
 13985              	.LC186:
 13986 13ac 46756C6C 		.ascii	"Full charge power tension %d (mV): %ld\000"
 13986      20636861 
 13986      72676520 
 13986      706F7765 
 13986      72207465 
 13987 13d3 00       		.align	2
 13988              	.LC187:
 13989 13d4 43757272 		.ascii	"Current %d (mA): %ld\000"
 13989      656E7420 
 13989      25642028 
 13989      6D41293A 
 13989      20256C64 
 13990 13e9 000000   		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 314


 13991              	.LC188:
 13992 13ec 4C617374 		.ascii	"Last Grasp Hold Current %d (mA): %ld\000"
 13992      20477261 
 13992      73702048 
 13992      6F6C6420 
 13992      43757272 
 13993 1411 000000   		.align	2
 13994              	.LC189:
 13995 1414 0D0A4D4F 		.ascii	"\015\012MOTOR %d CONFIGURATION\015\012\000"
 13995      544F5220 
 13995      25642043 
 13995      4F4E4649 
 13995      47555241 
 13996 142f 00       		.align	2
 13997              	.LC190:
 13998 1430 50494420 		.ascii	"PID Controller: \000"
 13998      436F6E74 
 13998      726F6C6C 
 13998      65723A20 
 13998      00
 13999              		.global	__aeabi_i2d
 14000              		.global	__aeabi_ddiv
 14001 1441 000000   		.align	2
 14002              	.LC191:
 14003 1444 50202D3E 		.ascii	"P -> %f  \000"
 14003      20256620 
 14003      2000
 14004 144e 0000     		.align	2
 14005              	.LC192:
 14006 1450 49202D3E 		.ascii	"I -> %f  \000"
 14006      20256620 
 14006      2000
 14007 145a 0000     		.align	2
 14008              	.LC193:
 14009 145c 44202D3E 		.ascii	"D -> %f\015\012\000"
 14009      2025660D 
 14009      0A00
 14010 1466 0000     		.align	2
 14011              	.LC194:
 14012 1468 43757272 		.ascii	"Current PID Controller: \000"
 14012      656E7420 
 14012      50494420 
 14012      436F6E74 
 14012      726F6C6C 
 14013 1481 000000   		.align	2
 14014              	.LC195:
 14015 1484 53746172 		.ascii	"Startup activation: YES\015\012\000"
 14015      74757020 
 14015      61637469 
 14015      76617469 
 14015      6F6E3A20 
 14016 149e 0000     		.align	2
 14017              	.LC196:
 14018 14a0 53746172 		.ascii	"Startup activation: NO\015\012\000"
 14018      74757020 
 14018      61637469 
 14018      76617469 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 315


 14018      6F6E3A20 
 14019 14b9 000000   		.align	2
 14020              	.LC197:
 14021 14bc 496E7075 		.ascii	"Input mode: USB\015\012\000"
 14021      74206D6F 
 14021      64653A20 
 14021      5553420D 
 14021      0A00
 14022 14ce 0000     		.align	2
 14023              	.LC198:
 14024 14d0 496E7075 		.ascii	"Input mode: Handle\015\012\000"
 14024      74206D6F 
 14024      64653A20 
 14024      48616E64 
 14024      6C650D0A 
 14025 14e5 000000   		.align	2
 14026              	.LC199:
 14027 14e8 496E7075 		.ascii	"Input mode: EMG proportional\015\012\000"
 14027      74206D6F 
 14027      64653A20 
 14027      454D4720 
 14027      70726F70 
 14028 1507 00       		.align	2
 14029              	.LC200:
 14030 1508 496E7075 		.ascii	"Input mode: EMG integral\015\012\000"
 14030      74206D6F 
 14030      64653A20 
 14030      454D4720 
 14030      696E7465 
 14031 1523 00       		.align	2
 14032              	.LC201:
 14033 1524 496E7075 		.ascii	"Input mode: EMG FCFS\015\012\000"
 14033      74206D6F 
 14033      64653A20 
 14033      454D4720 
 14033      46434653 
 14034 153b 00       		.align	2
 14035              	.LC202:
 14036 153c 496E7075 		.ascii	"Input mode: EMG FCFS ADV\015\012\000"
 14036      74206D6F 
 14036      64653A20 
 14036      454D4720 
 14036      46434653 
 14037 1557 00       		.align	2
 14038              	.LC203:
 14039 1558 496E7075 		.ascii	"Input mode: Joystick\015\012\000"
 14039      74206D6F 
 14039      64653A20 
 14039      4A6F7973 
 14039      7469636B 
 14040 156f 00       		.align	2
 14041              	.LC204:
 14042 1570 496E7075 		.ascii	"Input mode: EMG proportional Normally Closed\015\012"
 14042      74206D6F 
 14042      64653A20 
 14042      454D4720 
 14042      70726F70 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 316


 14043 159e 00       		.ascii	"\000"
 14044 159f 00       		.align	2
 14045              	.LC205:
 14046 15a0 436F6E74 		.ascii	"Control mode: Position\015\012\000"
 14046      726F6C20 
 14046      6D6F6465 
 14046      3A20506F 
 14046      73697469 
 14047 15b9 000000   		.align	2
 14048              	.LC206:
 14049 15bc 436F6E74 		.ascii	"Control mode: PWM\015\012\000"
 14049      726F6C20 
 14049      6D6F6465 
 14049      3A205057 
 14049      4D0D0A00 
 14050              		.align	2
 14051              	.LC207:
 14052 15d0 436F6E74 		.ascii	"Control mode: Current\015\012\000"
 14052      726F6C20 
 14052      6D6F6465 
 14052      3A204375 
 14052      7272656E 
 14053              		.align	2
 14054              	.LC208:
 14055 15e8 436F6E74 		.ascii	"Control mode: Position and Current\015\012\000"
 14055      726F6C20 
 14055      6D6F6465 
 14055      3A20506F 
 14055      73697469 
 14056 160d 000000   		.align	2
 14057              	.LC209:
 14058 1610 4162736F 		.ascii	"Absolute encoder position: YES\015\012\000"
 14058      6C757465 
 14058      20656E63 
 14058      6F646572 
 14058      20706F73 
 14059 1631 000000   		.align	2
 14060              	.LC210:
 14061 1634 4162736F 		.ascii	"Absolute encoder position: NO\015\012\000"
 14061      6C757465 
 14061      20656E63 
 14061      6F646572 
 14061      20706F73 
 14062              		.align	2
 14063              	.LC211:
 14064 1654 4D6F746F 		.ascii	"Motor-Handle Ratio: %d\015\012\000"
 14064      722D4861 
 14064      6E646C65 
 14064      20526174 
 14064      696F3A20 
 14065 166d 000000   		.align	2
 14066              	.LC212:
 14067 1670 456E636F 		.ascii	"Encoder indices used for motor control: \000"
 14067      64657220 
 14067      696E6469 
 14067      63657320 
 14067      75736564 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 317


 14068 1699 000000   		.align	2
 14069              	.LC213:
 14070 169c 46697273 		.ascii	"First Gear: %d teeth\015\012\000"
 14070      74204765 
 14070      61723A20 
 14070      25642074 
 14070      65657468 
 14071 16b3 00       		.align	2
 14072              	.LC214:
 14073 16b4 5365636F 		.ascii	"Second Gear: %d teeth\015\012\000"
 14073      6E642047 
 14073      6561723A 
 14073      20256420 
 14073      74656574 
 14074              		.align	2
 14075              	.LC215:
 14076 16cc 47656172 		.ascii	"Gear invariant: %d\015\012\000"
 14076      20696E76 
 14076      61726961 
 14076      6E743A20 
 14076      25640D0A 
 14077 16e1 000000   		.align	2
 14078              	.LC216:
 14079 16e4 53656E73 		.ascii	"Sensor resolution: \000"
 14079      6F722072 
 14079      65736F6C 
 14079      7574696F 
 14079      6E3A2000 
 14080              		.align	2
 14081              	.LC217:
 14082 16f8 4D656173 		.ascii	"Measurement Offset: \000"
 14082      7572656D 
 14082      656E7420 
 14082      4F666673 
 14082      65743A20 
 14083 170d 000000   		.align	2
 14084              	.LC218:
 14085 1710 256C6400 		.ascii	"%ld\000"
 14086              		.align	2
 14087              	.LC219:
 14088 1714 4D656173 		.ascii	"Measurement Multiplier: \000"
 14088      7572656D 
 14088      656E7420 
 14088      4D756C74 
 14088      69706C69 
 14089              		.global	__aeabi_f2d
 14090 172d 000000   		.align	2
 14091              	.LC220:
 14092 1730 256600   		.ascii	"%f\000"
 14093 1733 00       		.align	2
 14094              	.LC221:
 14095 1734 43757272 		.ascii	"Current lookup table: %f, %f, %f, %f, %f, %f\015\012"
 14095      656E7420 
 14095      6C6F6F6B 
 14095      75702074 
 14095      61626C65 
 14096 1762 00       		.ascii	"\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 318


 14097 1763 00       		.align	2
 14098              	.LC222:
 14099 1764 506F7369 		.ascii	"Position limit active: %d\000"
 14099      74696F6E 
 14099      206C696D 
 14099      69742061 
 14099      63746976 
 14100 177e 0000     		.align	2
 14101              	.LC223:
 14102 1780 506F7369 		.ascii	"Position limit motor: inf -> %ld  \000"
 14102      74696F6E 
 14102      206C696D 
 14102      6974206D 
 14102      6F746F72 
 14103 17a3 00       		.align	2
 14104              	.LC224:
 14105 17a4 73757020 		.ascii	"sup -> %ld\015\012\000"
 14105      2D3E2025 
 14105      6C640D0A 
 14105      00
 14106 17b1 000000   		.align	2
 14107              	.LC225:
 14108 17b4 4D617820 		.ascii	"Max step pos and neg: %d %d\000"
 14108      73746570 
 14108      20706F73 
 14108      20616E64 
 14108      206E6567 
 14109              		.align	2
 14110              	.LC226:
 14111 17d0 43757272 		.ascii	"Current limit: %d\015\012\000"
 14111      656E7420 
 14111      6C696D69 
 14111      743A2025 
 14111      640D0A00 
 14112              		.align	2
 14113              	.LC227:
 14114 17e4 4D6F746F 		.ascii	"Motor board associated encoder line: %d\015\012\000"
 14114      7220626F 
 14114      61726420 
 14114      6173736F 
 14114      63696174 
 14115 180e 0000     		.align	2
 14116              	.LC228:
 14117 1810 44726976 		.ascii	"Driver type: MC33887 (Standard)\015\012\000"
 14117      65722074 
 14117      7970653A 
 14117      204D4333 
 14117      33383837 
 14118 1832 0000     		.align	2
 14119              	.LC229:
 14120 1834 44726976 		.ascii	"Driver type: VNH5019 (High power)\015\012\000"
 14120      65722074 
 14120      7970653A 
 14120      20564E48 
 14120      35303139 
 14121              		.align	2
 14122              	.LC230:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 319


 14123 1858 50574D20 		.ascii	"PWM rate limiter value: %d\015\012\000"
 14123      72617465 
 14123      206C696D 
 14123      69746572 
 14123      2076616C 
 14124 1875 000000   		.align	2
 14125              	.LC231:
 14126 1878 4E6F7420 		.ascii	"Not reversible motor: YES\015\012\000"
 14126      72657665 
 14126      72736962 
 14126      6C65206D 
 14126      6F746F72 
 14127              		.align	2
 14128              	.LC232:
 14129 1894 4E6F7420 		.ascii	"Not reversible motor: NO\015\012\000"
 14129      72657665 
 14129      72736962 
 14129      6C65206D 
 14129      6F746F72 
 14130 18af 00       		.align	2
 14131              	.LC233:
 14132 18b0 454D4720 		.ascii	"EMG CONFIGURATION\015\012\000"
 14132      434F4E46 
 14132      49475552 
 14132      4154494F 
 14132      4E0D0A00 
 14133              		.align	2
 14134              	.LC234:
 14135 18c4 454D4720 		.ascii	"EMG thresholds [0 - 1024]: %u, %u\000"
 14135      74687265 
 14135      73686F6C 
 14135      6473205B 
 14135      30202D20 
 14136 18e6 0000     		.align	2
 14137              	.LC235:
 14138 18e8 454D4720 		.ascii	"EMG max values [0 - 4096]: %lu, %lu\000"
 14138      6D617820 
 14138      76616C75 
 14138      6573205B 
 14138      30202D20 
 14139              		.align	2
 14140              	.LC236:
 14141 190c 454D4720 		.ascii	"EMG inversion: YES\015\012\000"
 14141      696E7665 
 14141      7273696F 
 14141      6E3A2059 
 14141      45530D0A 
 14142 1921 000000   		.align	2
 14143              	.LC237:
 14144 1924 454D4720 		.ascii	"EMG inversion: NO\015\012\000"
 14144      696E7665 
 14144      7273696F 
 14144      6E3A204E 
 14144      4F0D0A00 
 14145              		.align	2
 14146              	.LC238:
 14147 1938 43616C69 		.ascii	"Calibration enabled: YES\015\012\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 320


 14147      62726174 
 14147      696F6E20 
 14147      656E6162 
 14147      6C65643A 
 14148 1953 00       		.align	2
 14149              	.LC239:
 14150 1954 43616C69 		.ascii	"Calibration enabled: NO\015\012\000"
 14150      62726174 
 14150      696F6E20 
 14150      656E6162 
 14150      6C65643A 
 14151 196e 0000     		.align	2
 14152              	.LC240:
 14153 1970 454D4720 		.ascii	"EMG max speed: %d %d\000"
 14153      6D617820 
 14153      73706565 
 14153      643A2025 
 14153      64202564 
 14154 1985 000000   		.align	2
 14155              	.LC241:
 14156 1988 41646469 		.ascii	"Additional ADC sensors value:\015\012\000"
 14156      74696F6E 
 14156      616C2041 
 14156      44432073 
 14156      656E736F 
 14157              		.align	2
 14158              	.LC242:
 14159 19a8 41444320 		.ascii	"ADC %d -> %d\000"
 14159      2564202D 
 14159      3E202564 
 14159      00
 14160 19b5 000000   		.align	2
 14161              	.LC243:
 14162 19b8 454D4720 		.ascii	"EMG input %d -> %d\000"
 14162      696E7075 
 14162      74202564 
 14162      202D3E20 
 14162      256400
 14163 19cb 00       		.align	2
 14164              	.LC244:
 14165 19cc 4A4F5953 		.ascii	"JOYSTICK CONFIGURATION\015\012\000"
 14165      5449434B 
 14165      20434F4E 
 14165      46494755 
 14165      52415449 
 14166 19e5 000000   		.align	2
 14167              	.LC245:
 14168 19e8 436C6F73 		.ascii	"Closure speed: %d\000"
 14168      75726520 
 14168      73706565 
 14168      643A2025 
 14168      6400
 14169 19fa 0000     		.align	2
 14170              	.LC246:
 14171 19fc 4A6F7973 		.ascii	"Joystick Threshold: %d\000"
 14171      7469636B 
 14171      20546872 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 321


 14171      6573686F 
 14171      6C643A20 
 14172 1a13 00       		.align	2
 14173              	.LC247:
 14174 1a14 4A6F7973 		.ascii	"Joystick Gains - X:%hu  Y:%hu\000"
 14174      7469636B 
 14174      20476169 
 14174      6E73202D 
 14174      20583A25 
 14175 1a32 0000     		.align	2
 14176              	.LC248:
 14177 1a34 52657374 		.ascii	"Rest time delay (ms): %d\000"
 14177      2074696D 
 14177      65206465 
 14177      6C617920 
 14177      286D7329 
 14178 1a4d 000000   		.align	2
 14179              	.LC249:
 14180 1a50 52657374 		.ascii	"Rest velocity closure (ticks/sec): %d\000"
 14180      2076656C 
 14180      6F636974 
 14180      7920636C 
 14180      6F737572 
 14181 1a76 0000     		.align	2
 14182              	.LC250:
 14183 1a78 52657374 		.ascii	"Rest position: %d\000"
 14183      20706F73 
 14183      6974696F 
 14183      6E3A2025 
 14183      6400
 14184 1a8a 0000     		.align	2
 14185              	.LC251:
 14186 1a8c 494D5520 		.ascii	"IMU Connected: %d\015\012\000"
 14186      436F6E6E 
 14186      65637465 
 14186      643A2025 
 14186      640D0A00 
 14187              		.align	2
 14188              	.LC252:
 14189 1aa0 494D5573 		.ascii	"IMUs CONFIGURATION\015\012\000"
 14189      20434F4E 
 14189      46494755 
 14189      52415449 
 14189      4F4E0D0A 
 14190 1ab5 000000   		.align	2
 14191              	.LC253:
 14192 1ab8 496D7520 		.ascii	"Imu %d \015\012\011ID: %d\015\012\000"
 14192      2564200D 
 14192      0A094944 
 14192      3A202564 
 14192      0D0A00
 14193 1acb 00       		.align	2
 14194              	.LC254:
 14195 1acc 09416363 		.ascii	"\011Accelerometers: \000"
 14195      656C6572 
 14195      6F6D6574 
 14195      6572733A 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 322


 14195      2000
 14196 1ade 0000     		.align	2
 14197              	.LC255:
 14198 1ae0 09477972 		.ascii	"\011Gyroscopes: \000"
 14198      6F73636F 
 14198      7065733A 
 14198      2000
 14199 1aee 0000     		.align	2
 14200              	.LC256:
 14201 1af0 094D6167 		.ascii	"\011Magnetometers: \000"
 14201      6E65746F 
 14201      6D657465 
 14201      72733A20 
 14201      00
 14202 1b01 000000   		.align	2
 14203              	.LC257:
 14204 1b04 09517561 		.ascii	"\011Quaternion: \000"
 14204      7465726E 
 14204      696F6E3A 
 14204      2000
 14205 1b12 0000     		.align	2
 14206              	.LC258:
 14207 1b14 0954656D 		.ascii	"\011Temperature: \000"
 14207      70657261 
 14207      74757265 
 14207      3A2000
 14208 1b23 00       		.align	2
 14209              	.LC259:
 14210 1b24 454E434F 		.ascii	"ENCODER CONFIGURATION\015\012\000"
 14210      44455220 
 14210      434F4E46 
 14210      49475552 
 14210      4154494F 
 14211              		.align	2
 14212              	.LC260:
 14213 1b3c 456E636F 		.ascii	"Encoder Connected Line %d: %d\000"
 14213      64657220 
 14213      436F6E6E 
 14213      65637465 
 14213      64204C69 
 14214 1b5a 0000     		.align	2
 14215              	.LC261:
 14216 1b5c 4C454654 		.ascii	"LEFT\000"
 14216      00
 14217 1b61 000000   		.align	2
 14218              	.LC262:
 14219 1b64 52494748 		.ascii	"RIGHT\000"
 14219      5400
 14220 1b6a 0000     		.align	2
 14221              	.LC263:
 14222 1b6c 205B2573 		.ascii	" [%s HAND main encoder line]\000"
 14222      2048414E 
 14222      44206D61 
 14222      696E2065 
 14222      6E636F64 
 14223 1b89 000000   		.align	2
 14224              	.LC264:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 323


 14225 1b8c 52617720 		.ascii	"Raw value [status]:\015\012\000"
 14225      76616C75 
 14225      65205B73 
 14225      74617475 
 14225      735D3A0D 
 14226 1ba2 0000     		.align	2
 14227              	.LC265:
 14228 1ba4 4F4B00   		.ascii	"OK\000"
 14229 1ba7 00       		.align	2
 14230              	.LC266:
 14231 1ba8 5800     		.ascii	"X\000"
 14232 1baa 0000     		.align	2
 14233              	.LC267:
 14234 1bac 2564095B 		.ascii	"%d\011[%s]\015\012\000"
 14234      25735D0D 
 14234      0A00
 14235 1bb6 0000     		.align	2
 14236              	.LC268:
 14237 1bb8 4C617374 		.ascii	"Last FW cycle time: %u us\015\012\000"
 14237      20465720 
 14237      6379636C 
 14237      65207469 
 14237      6D653A20 
 14238              		.align	2
 14239              	.LC269:
 14240 1bd4 0D0A0000 		.ascii	"\015\012\000\000"
 14241              		.section	.text.prepare_generic_info,"ax",%progbits
 14242              		.align	2
 14243              		.global	prepare_generic_info
 14244              		.thumb
 14245              		.thumb_func
 14246              		.type	prepare_generic_info, %function
 14247              	prepare_generic_info:
 14248              	.LFB72:
1878:..\src/command_processing.c **** 
1879:..\src/command_processing.c **** //==============================================================================
1880:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
1881:..\src/command_processing.c **** //==============================================================================
1882:..\src/command_processing.c **** 
1883:..\src/command_processing.c **** void prepare_generic_info(char *info_string)
1884:..\src/command_processing.c **** {
 14249              		.loc 1 1884 0
 14250              		.cfi_startproc
 14251              		@ args = 0, pretend = 0, frame = 152
 14252              		@ frame_needed = 1, uses_anonymous_args = 0
 14253 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 14254              		.cfi_def_cfa_offset 36
 14255              		.cfi_offset 4, -36
 14256              		.cfi_offset 5, -32
 14257              		.cfi_offset 6, -28
 14258              		.cfi_offset 7, -24
 14259              		.cfi_offset 8, -20
 14260              		.cfi_offset 9, -16
 14261              		.cfi_offset 10, -12
 14262              		.cfi_offset 11, -8
 14263              		.cfi_offset 14, -4
 14264 0004 B1B0     		sub	sp, sp, #196
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 324


 14265              		.cfi_def_cfa_offset 232
 14266 0006 0AAF     		add	r7, sp, #40
 14267              		.cfi_def_cfa 7, 192
 14268 0008 7861     		str	r0, [r7, #20]
1885:..\src/command_processing.c ****     int i;
1886:..\src/command_processing.c **** 
1887:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem; 
 14269              		.loc 1 1887 0
 14270 000a C74B     		ldr	r3, .L682
 14271 000c C7F88830 		str	r3, [r7, #136]
1888:..\src/command_processing.c ****     
1889:..\src/command_processing.c ****     if(c_mem.dev.id != 250){                //To avoid dummy board ping
 14272              		.loc 1 1889 0
 14273 0010 C54B     		ldr	r3, .L682
 14274 0012 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 14275 0016 FA2B     		cmp	r3, #250
 14276 0018 02F08080 		beq	.L679
 14277              	.LBB20:
1890:..\src/command_processing.c ****         char str[100];
1891:..\src/command_processing.c ****         strcpy(info_string, "");
 14278              		.loc 1 1891 0
 14279 001c 7B69     		ldr	r3, [r7, #20]
 14280 001e 0022     		movs	r2, #0
 14281 0020 1A70     		strb	r2, [r3]
1892:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 14282              		.loc 1 1892 0
 14283 0022 7869     		ldr	r0, [r7, #20]
 14284 0024 FFF7FEFF 		bl	strlen
 14285 0028 0346     		mov	r3, r0
 14286 002a 1A46     		mov	r2, r3
 14287 002c 7B69     		ldr	r3, [r7, #20]
 14288 002e 1344     		add	r3, r3, r2
 14289 0030 BE4A     		ldr	r2, .L682+4
 14290 0032 1188     		ldrh	r1, [r2]	@ unaligned
 14291 0034 9278     		ldrb	r2, [r2, #2]
 14292 0036 1980     		strh	r1, [r3]	@ unaligned
 14293 0038 9A70     		strb	r2, [r3, #2]
1893:..\src/command_processing.c ****         strcat(info_string, "Firmware version: ");
 14294              		.loc 1 1893 0
 14295 003a 7869     		ldr	r0, [r7, #20]
 14296 003c FFF7FEFF 		bl	strlen
 14297 0040 0346     		mov	r3, r0
 14298 0042 1A46     		mov	r2, r3
 14299 0044 7B69     		ldr	r3, [r7, #20]
 14300 0046 1344     		add	r3, r3, r2
 14301 0048 B94A     		ldr	r2, .L682+8
 14302 004a 1D46     		mov	r5, r3
 14303 004c 1446     		mov	r4, r2
 14304 004e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14305 0050 2860     		str	r0, [r5]	@ unaligned
 14306 0052 6960     		str	r1, [r5, #4]	@ unaligned
 14307 0054 AA60     		str	r2, [r5, #8]	@ unaligned
 14308 0056 EB60     		str	r3, [r5, #12]	@ unaligned
 14309 0058 2388     		ldrh	r3, [r4]	@ unaligned
 14310 005a A278     		ldrb	r2, [r4, #2]
 14311 005c 2B82     		strh	r3, [r5, #16]	@ unaligned
 14312 005e 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 325


 14313 0060 AB74     		strb	r3, [r5, #18]
1894:..\src/command_processing.c ****         strcat(info_string, VERSION);
 14314              		.loc 1 1894 0
 14315 0062 7869     		ldr	r0, [r7, #20]
 14316 0064 FFF7FEFF 		bl	strlen
 14317 0068 0346     		mov	r3, r0
 14318 006a 1A46     		mov	r2, r3
 14319 006c 7B69     		ldr	r3, [r7, #20]
 14320 006e 1344     		add	r3, r3, r2
 14321 0070 B04A     		ldr	r2, .L682+12
 14322 0072 1446     		mov	r4, r2
 14323 0074 9E46     		mov	lr, r3
 14324 0076 04F1200C 		add	ip, r4, #32
 14325              	.L561:
 14326 007a 7546     		mov	r5, lr
 14327 007c 2646     		mov	r6, r4
 14328 007e 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14329 0080 2860     		str	r0, [r5]	@ unaligned
 14330 0082 6960     		str	r1, [r5, #4]	@ unaligned
 14331 0084 AA60     		str	r2, [r5, #8]	@ unaligned
 14332 0086 EB60     		str	r3, [r5, #12]	@ unaligned
 14333 0088 1034     		adds	r4, r4, #16
 14334 008a 0EF1100E 		add	lr, lr, #16
 14335 008e 6445     		cmp	r4, ip
 14336 0090 F3D1     		bne	.L561
 14337 0092 7246     		mov	r2, lr
 14338 0094 2346     		mov	r3, r4
 14339 0096 1B88     		ldrh	r3, [r3]	@ unaligned
 14340 0098 1380     		strh	r3, [r2]	@ unaligned
1895:..\src/command_processing.c ****         strcat(info_string, ".\r\n\r\n");      
 14341              		.loc 1 1895 0
 14342 009a 7869     		ldr	r0, [r7, #20]
 14343 009c FFF7FEFF 		bl	strlen
 14344 00a0 0346     		mov	r3, r0
 14345 00a2 1A46     		mov	r2, r3
 14346 00a4 7B69     		ldr	r3, [r7, #20]
 14347 00a6 1344     		add	r3, r3, r2
 14348 00a8 A34A     		ldr	r2, .L682+16
 14349 00aa 1068     		ldr	r0, [r2]	@ unaligned
 14350 00ac 1860     		str	r0, [r3]	@ unaligned
 14351 00ae 9288     		ldrh	r2, [r2, #4]	@ unaligned
 14352 00b0 9A80     		strh	r2, [r3, #4]	@ unaligned
1896:..\src/command_processing.c **** 
1897:..\src/command_processing.c ****         strcat(info_string, "DEVICE INFO\r\n");
 14353              		.loc 1 1897 0
 14354 00b2 7869     		ldr	r0, [r7, #20]
 14355 00b4 FFF7FEFF 		bl	strlen
 14356 00b8 0346     		mov	r3, r0
 14357 00ba 1A46     		mov	r2, r3
 14358 00bc 7B69     		ldr	r3, [r7, #20]
 14359 00be 1344     		add	r3, r3, r2
 14360 00c0 9E4A     		ldr	r2, .L682+20
 14361 00c2 1C46     		mov	r4, r3
 14362 00c4 1346     		mov	r3, r2
 14363 00c6 07CB     		ldmia	r3!, {r0, r1, r2}
 14364 00c8 2060     		str	r0, [r4]	@ unaligned
 14365 00ca 6160     		str	r1, [r4, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 326


 14366 00cc A260     		str	r2, [r4, #8]	@ unaligned
 14367 00ce 1B88     		ldrh	r3, [r3]	@ unaligned
 14368 00d0 A381     		strh	r3, [r4, #12]	@ unaligned
1898:..\src/command_processing.c ****         sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 14369              		.loc 1 1898 0
 14370 00d2 D7F88830 		ldr	r3, [r7, #136]
 14371 00d6 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 14372 00da 1A46     		mov	r2, r3
 14373 00dc 07F11803 		add	r3, r7, #24
 14374 00e0 9749     		ldr	r1, .L682+24
 14375 00e2 1846     		mov	r0, r3
 14376 00e4 FFF7FEFF 		bl	sprintf
1899:..\src/command_processing.c ****         strcat(info_string, str);
 14377              		.loc 1 1899 0
 14378 00e8 07F11803 		add	r3, r7, #24
 14379 00ec 1946     		mov	r1, r3
 14380 00ee 7869     		ldr	r0, [r7, #20]
 14381 00f0 FFF7FEFF 		bl	strcat
1900:..\src/command_processing.c ****         switch(MEM_P->dev.dev_type){
 14382              		.loc 1 1900 0
 14383 00f4 D7F88830 		ldr	r3, [r7, #136]
 14384 00f8 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 14385 00fc 042B     		cmp	r3, #4
 14386 00fe 00F29180 		bhi	.L680
 14387 0102 01A2     		adr	r2, .L564
 14388 0104 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 14389              		.p2align 2
 14390              	.L564:
 14391 0108 1D010000 		.word	.L563+1
 14392 010c 4B010000 		.word	.L565+1
 14393 0110 7B010000 		.word	.L566+1
 14394 0114 BD010000 		.word	.L567+1
 14395 0118 FD010000 		.word	.L568+1
 14396              		.p2align 1
 14397              	.L563:
1901:..\src/command_processing.c ****             case SOFTHAND_PRO:
1902:..\src/command_processing.c ****                 strcat(info_string, "Device: SOFTHAND PRO\r\n");
 14398              		.loc 1 1902 0
 14399 011c 7869     		ldr	r0, [r7, #20]
 14400 011e FFF7FEFF 		bl	strlen
 14401 0122 0346     		mov	r3, r0
 14402 0124 1A46     		mov	r2, r3
 14403 0126 7B69     		ldr	r3, [r7, #20]
 14404 0128 1344     		add	r3, r3, r2
 14405 012a 864A     		ldr	r2, .L682+28
 14406 012c 1C46     		mov	r4, r3
 14407 012e 1546     		mov	r5, r2
 14408 0130 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14409 0132 2060     		str	r0, [r4]	@ unaligned
 14410 0134 6160     		str	r1, [r4, #4]	@ unaligned
 14411 0136 A260     		str	r2, [r4, #8]	@ unaligned
 14412 0138 E360     		str	r3, [r4, #12]	@ unaligned
 14413 013a 2868     		ldr	r0, [r5]	@ unaligned
 14414 013c 2061     		str	r0, [r4, #16]	@ unaligned
 14415 013e AB88     		ldrh	r3, [r5, #4]	@ unaligned
 14416 0140 AA79     		ldrb	r2, [r5, #6]
 14417 0142 A382     		strh	r3, [r4, #20]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 327


 14418 0144 1346     		mov	r3, r2
 14419 0146 A375     		strb	r3, [r4, #22]
1903:..\src/command_processing.c ****                 break;
 14420              		.loc 1 1903 0
 14421 0148 6DE0     		b	.L569
 14422              	.L565:
1904:..\src/command_processing.c ****             case GENERIC_2_MOTORS:
1905:..\src/command_processing.c ****                 strcat(info_string, "Device: GENERIC 2 MOTORS\r\n");
 14423              		.loc 1 1905 0
 14424 014a 7869     		ldr	r0, [r7, #20]
 14425 014c FFF7FEFF 		bl	strlen
 14426 0150 0346     		mov	r3, r0
 14427 0152 1A46     		mov	r2, r3
 14428 0154 7B69     		ldr	r3, [r7, #20]
 14429 0156 1344     		add	r3, r3, r2
 14430 0158 7B4A     		ldr	r2, .L682+32
 14431 015a 1D46     		mov	r5, r3
 14432 015c 1446     		mov	r4, r2
 14433 015e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14434 0160 2860     		str	r0, [r5]	@ unaligned
 14435 0162 6960     		str	r1, [r5, #4]	@ unaligned
 14436 0164 AA60     		str	r2, [r5, #8]	@ unaligned
 14437 0166 EB60     		str	r3, [r5, #12]	@ unaligned
 14438 0168 03CC     		ldmia	r4!, {r0, r1}
 14439 016a 2861     		str	r0, [r5, #16]	@ unaligned
 14440 016c 6961     		str	r1, [r5, #20]	@ unaligned
 14441 016e 2388     		ldrh	r3, [r4]	@ unaligned
 14442 0170 A278     		ldrb	r2, [r4, #2]
 14443 0172 2B83     		strh	r3, [r5, #24]	@ unaligned
 14444 0174 1346     		mov	r3, r2
 14445 0176 AB76     		strb	r3, [r5, #26]
1906:..\src/command_processing.c ****                 break;
 14446              		.loc 1 1906 0
 14447 0178 55E0     		b	.L569
 14448              	.L566:
1907:..\src/command_processing.c ****             case AIR_CHAMBERS_FB:
1908:..\src/command_processing.c ****                 strcat(info_string, "Device: AIR CHAMBERS HAPTIC FEEDBACK\r\n");
 14449              		.loc 1 1908 0
 14450 017a 7869     		ldr	r0, [r7, #20]
 14451 017c FFF7FEFF 		bl	strlen
 14452 0180 0346     		mov	r3, r0
 14453 0182 1A46     		mov	r2, r3
 14454 0184 7B69     		ldr	r3, [r7, #20]
 14455 0186 1344     		add	r3, r3, r2
 14456 0188 704A     		ldr	r2, .L682+36
 14457 018a 1446     		mov	r4, r2
 14458 018c 9E46     		mov	lr, r3
 14459 018e 04F1200C 		add	ip, r4, #32
 14460              	.L570:
 14461 0192 7546     		mov	r5, lr
 14462 0194 2646     		mov	r6, r4
 14463 0196 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14464 0198 2860     		str	r0, [r5]	@ unaligned
 14465 019a 6960     		str	r1, [r5, #4]	@ unaligned
 14466 019c AA60     		str	r2, [r5, #8]	@ unaligned
 14467 019e EB60     		str	r3, [r5, #12]	@ unaligned
 14468 01a0 1034     		adds	r4, r4, #16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 328


 14469 01a2 0EF1100E 		add	lr, lr, #16
 14470 01a6 6445     		cmp	r4, ip
 14471 01a8 F3D1     		bne	.L570
 14472 01aa 7346     		mov	r3, lr
 14473 01ac 2246     		mov	r2, r4
 14474 01ae 1068     		ldr	r0, [r2]	@ unaligned
 14475 01b0 1860     		str	r0, [r3]	@ unaligned
 14476 01b2 9188     		ldrh	r1, [r2, #4]	@ unaligned
 14477 01b4 9279     		ldrb	r2, [r2, #6]
 14478 01b6 9980     		strh	r1, [r3, #4]	@ unaligned
 14479 01b8 9A71     		strb	r2, [r3, #6]
1909:..\src/command_processing.c ****                 break;
 14480              		.loc 1 1909 0
 14481 01ba 34E0     		b	.L569
 14482              	.L567:
1910:..\src/command_processing.c ****             case OTBK_ACT_WRIST_MS:
1911:..\src/command_processing.c ****                 strcat(info_string, "Device: OTTOBOCK 6v ACTIVE WRIST MASTER\r\n");
 14483              		.loc 1 1911 0
 14484 01bc 7869     		ldr	r0, [r7, #20]
 14485 01be FFF7FEFF 		bl	strlen
 14486 01c2 0346     		mov	r3, r0
 14487 01c4 1A46     		mov	r2, r3
 14488 01c6 7B69     		ldr	r3, [r7, #20]
 14489 01c8 1344     		add	r3, r3, r2
 14490 01ca 614A     		ldr	r2, .L682+40
 14491 01cc 1446     		mov	r4, r2
 14492 01ce 9E46     		mov	lr, r3
 14493 01d0 04F1200C 		add	ip, r4, #32
 14494              	.L571:
 14495 01d4 7546     		mov	r5, lr
 14496 01d6 2646     		mov	r6, r4
 14497 01d8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14498 01da 2860     		str	r0, [r5]	@ unaligned
 14499 01dc 6960     		str	r1, [r5, #4]	@ unaligned
 14500 01de AA60     		str	r2, [r5, #8]	@ unaligned
 14501 01e0 EB60     		str	r3, [r5, #12]	@ unaligned
 14502 01e2 1034     		adds	r4, r4, #16
 14503 01e4 0EF1100E 		add	lr, lr, #16
 14504 01e8 6445     		cmp	r4, ip
 14505 01ea F3D1     		bne	.L571
 14506 01ec 7246     		mov	r2, lr
 14507 01ee 2346     		mov	r3, r4
 14508 01f0 03CB     		ldmia	r3!, {r0, r1}
 14509 01f2 1060     		str	r0, [r2]	@ unaligned
 14510 01f4 5160     		str	r1, [r2, #4]	@ unaligned
 14511 01f6 1B88     		ldrh	r3, [r3]	@ unaligned
 14512 01f8 1381     		strh	r3, [r2, #8]	@ unaligned
1912:..\src/command_processing.c ****                 break;
 14513              		.loc 1 1912 0
 14514 01fa 14E0     		b	.L569
 14515              	.L568:
1913:..\src/command_processing.c ****             case SOFTHAND_2_MOTORS:
1914:..\src/command_processing.c ****                 strcat(info_string, "Device: SOFTHAND 2 MOTORS\r\n");
 14516              		.loc 1 1914 0
 14517 01fc 7869     		ldr	r0, [r7, #20]
 14518 01fe FFF7FEFF 		bl	strlen
 14519 0202 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 329


 14520 0204 1A46     		mov	r2, r3
 14521 0206 7B69     		ldr	r3, [r7, #20]
 14522 0208 1344     		add	r3, r3, r2
 14523 020a 524A     		ldr	r2, .L682+44
 14524 020c 1D46     		mov	r5, r3
 14525 020e 1446     		mov	r4, r2
 14526 0210 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14527 0212 2860     		str	r0, [r5]	@ unaligned
 14528 0214 6960     		str	r1, [r5, #4]	@ unaligned
 14529 0216 AA60     		str	r2, [r5, #8]	@ unaligned
 14530 0218 EB60     		str	r3, [r5, #12]	@ unaligned
 14531 021a 07CC     		ldmia	r4!, {r0, r1, r2}
 14532 021c 2861     		str	r0, [r5, #16]	@ unaligned
 14533 021e 6961     		str	r1, [r5, #20]	@ unaligned
 14534 0220 AA61     		str	r2, [r5, #24]	@ unaligned
1915:..\src/command_processing.c ****                 break;
 14535              		.loc 1 1915 0
 14536 0222 00E0     		b	.L569
 14537              	.L680:
1916:..\src/command_processing.c ****             default:
1917:..\src/command_processing.c ****                 break;
 14538              		.loc 1 1917 0
 14539 0224 00BF     		nop
 14540              	.L569:
1918:..\src/command_processing.c ****         }
1919:..\src/command_processing.c ****         
1920:..\src/command_processing.c ****         switch(MEM_P->dev.right_left){
 14541              		.loc 1 1920 0
 14542 0226 D7F88830 		ldr	r3, [r7, #136]
 14543 022a 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 14544 022e 002B     		cmp	r3, #0
 14545 0230 02D0     		beq	.L573
 14546 0232 012B     		cmp	r3, #1
 14547 0234 15D0     		beq	.L574
 14548 0236 26E0     		b	.L572
 14549              	.L573:
1921:..\src/command_processing.c ****             case RIGHT_HAND:
1922:..\src/command_processing.c ****                 strcat(info_string, "Hand side: RIGHT\r\n");
 14550              		.loc 1 1922 0
 14551 0238 7869     		ldr	r0, [r7, #20]
 14552 023a FFF7FEFF 		bl	strlen
 14553 023e 0346     		mov	r3, r0
 14554 0240 1A46     		mov	r2, r3
 14555 0242 7B69     		ldr	r3, [r7, #20]
 14556 0244 1344     		add	r3, r3, r2
 14557 0246 444A     		ldr	r2, .L682+48
 14558 0248 1D46     		mov	r5, r3
 14559 024a 1446     		mov	r4, r2
 14560 024c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14561 024e 2860     		str	r0, [r5]	@ unaligned
 14562 0250 6960     		str	r1, [r5, #4]	@ unaligned
 14563 0252 AA60     		str	r2, [r5, #8]	@ unaligned
 14564 0254 EB60     		str	r3, [r5, #12]	@ unaligned
 14565 0256 2388     		ldrh	r3, [r4]	@ unaligned
 14566 0258 A278     		ldrb	r2, [r4, #2]
 14567 025a 2B82     		strh	r3, [r5, #16]	@ unaligned
 14568 025c 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 330


 14569 025e AB74     		strb	r3, [r5, #18]
1923:..\src/command_processing.c ****                 break;
 14570              		.loc 1 1923 0
 14571 0260 11E0     		b	.L572
 14572              	.L574:
1924:..\src/command_processing.c ****             case LEFT_HAND:
1925:..\src/command_processing.c ****                 strcat(info_string, "Hand side: LEFT\r\n");
 14573              		.loc 1 1925 0
 14574 0262 7869     		ldr	r0, [r7, #20]
 14575 0264 FFF7FEFF 		bl	strlen
 14576 0268 0346     		mov	r3, r0
 14577 026a 1A46     		mov	r2, r3
 14578 026c 7B69     		ldr	r3, [r7, #20]
 14579 026e 1344     		add	r3, r3, r2
 14580 0270 3A4A     		ldr	r2, .L682+52
 14581 0272 1D46     		mov	r5, r3
 14582 0274 1446     		mov	r4, r2
 14583 0276 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14584 0278 2860     		str	r0, [r5]	@ unaligned
 14585 027a 6960     		str	r1, [r5, #4]	@ unaligned
 14586 027c AA60     		str	r2, [r5, #8]	@ unaligned
 14587 027e EB60     		str	r3, [r5, #12]	@ unaligned
 14588 0280 2388     		ldrh	r3, [r4]	@ unaligned
 14589 0282 2B82     		strh	r3, [r5, #16]	@ unaligned
1926:..\src/command_processing.c ****                 break;
 14590              		.loc 1 1926 0
 14591 0284 00BF     		nop
 14592              	.L572:
1927:..\src/command_processing.c ****         }
1928:..\src/command_processing.c **** 
1929:..\src/command_processing.c ****         switch(MEM_P->dev.user_id) {
 14593              		.loc 1 1929 0
 14594 0286 D7F88830 		ldr	r3, [r7, #136]
 14595 028a 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 14596 028e 012B     		cmp	r3, #1
 14597 0290 02D0     		beq	.L576
 14598 0292 022B     		cmp	r3, #2
 14599 0294 11D0     		beq	.L577
 14600 0296 21E0     		b	.L678
 14601              	.L576:
1930:..\src/command_processing.c ****             case MARIA:
1931:..\src/command_processing.c ****                 strcat(info_string, "User: MARIA\r\n");
 14602              		.loc 1 1931 0
 14603 0298 7869     		ldr	r0, [r7, #20]
 14604 029a FFF7FEFF 		bl	strlen
 14605 029e 0346     		mov	r3, r0
 14606 02a0 1A46     		mov	r2, r3
 14607 02a2 7B69     		ldr	r3, [r7, #20]
 14608 02a4 1344     		add	r3, r3, r2
 14609 02a6 2E4A     		ldr	r2, .L682+56
 14610 02a8 1C46     		mov	r4, r3
 14611 02aa 1346     		mov	r3, r2
 14612 02ac 07CB     		ldmia	r3!, {r0, r1, r2}
 14613 02ae 2060     		str	r0, [r4]	@ unaligned
 14614 02b0 6160     		str	r1, [r4, #4]	@ unaligned
 14615 02b2 A260     		str	r2, [r4, #8]	@ unaligned
 14616 02b4 1B88     		ldrh	r3, [r3]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 331


 14617 02b6 A381     		strh	r3, [r4, #12]	@ unaligned
1932:..\src/command_processing.c ****                 break;
 14618              		.loc 1 1932 0
 14619 02b8 24E0     		b	.L578
 14620              	.L577:
1933:..\src/command_processing.c ****             case ROZA:
1934:..\src/command_processing.c ****                 strcat(info_string, "User: ROZA\r\n");
 14621              		.loc 1 1934 0
 14622 02ba 7869     		ldr	r0, [r7, #20]
 14623 02bc FFF7FEFF 		bl	strlen
 14624 02c0 0346     		mov	r3, r0
 14625 02c2 1A46     		mov	r2, r3
 14626 02c4 7B69     		ldr	r3, [r7, #20]
 14627 02c6 1344     		add	r3, r3, r2
 14628 02c8 264A     		ldr	r2, .L682+60
 14629 02ca 1C46     		mov	r4, r3
 14630 02cc 1346     		mov	r3, r2
 14631 02ce 07CB     		ldmia	r3!, {r0, r1, r2}
 14632 02d0 2060     		str	r0, [r4]	@ unaligned
 14633 02d2 6160     		str	r1, [r4, #4]	@ unaligned
 14634 02d4 A260     		str	r2, [r4, #8]	@ unaligned
 14635 02d6 1B78     		ldrb	r3, [r3]
 14636 02d8 2373     		strb	r3, [r4, #12]
1935:..\src/command_processing.c ****                 break;
 14637              		.loc 1 1935 0
 14638 02da 13E0     		b	.L578
 14639              	.L678:
1936:..\src/command_processing.c ****             default:
1937:..\src/command_processing.c ****                 strcat(info_string, "User: GENERIC USER\r\n");
 14640              		.loc 1 1937 0
 14641 02dc 7869     		ldr	r0, [r7, #20]
 14642 02de FFF7FEFF 		bl	strlen
 14643 02e2 0346     		mov	r3, r0
 14644 02e4 1A46     		mov	r2, r3
 14645 02e6 7B69     		ldr	r3, [r7, #20]
 14646 02e8 1344     		add	r3, r3, r2
 14647 02ea 1F4A     		ldr	r2, .L682+64
 14648 02ec 1D46     		mov	r5, r3
 14649 02ee 1446     		mov	r4, r2
 14650 02f0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14651 02f2 2860     		str	r0, [r5]	@ unaligned
 14652 02f4 6960     		str	r1, [r5, #4]	@ unaligned
 14653 02f6 AA60     		str	r2, [r5, #8]	@ unaligned
 14654 02f8 EB60     		str	r3, [r5, #12]	@ unaligned
 14655 02fa 2068     		ldr	r0, [r4]	@ unaligned
 14656 02fc 2861     		str	r0, [r5, #16]	@ unaligned
 14657 02fe 2379     		ldrb	r3, [r4, #4]
 14658 0300 2B75     		strb	r3, [r5, #20]
1938:..\src/command_processing.c ****                 break;
 14659              		.loc 1 1938 0
 14660 0302 00BF     		nop
 14661              	.L578:
1939:..\src/command_processing.c ****         }
1940:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 14662              		.loc 1 1940 0
 14663 0304 7869     		ldr	r0, [r7, #20]
 14664 0306 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 332


 14665 030a 0346     		mov	r3, r0
 14666 030c 1A46     		mov	r2, r3
 14667 030e 7B69     		ldr	r3, [r7, #20]
 14668 0310 1344     		add	r3, r3, r2
 14669 0312 064A     		ldr	r2, .L682+4
 14670 0314 1188     		ldrh	r1, [r2]	@ unaligned
 14671 0316 9278     		ldrb	r2, [r2, #2]
 14672 0318 1980     		strh	r1, [r3]	@ unaligned
 14673 031a 9A70     		strb	r2, [r3, #2]
 14674              	.LBB21:
1941:..\src/command_processing.c ****         
1942:..\src/command_processing.c ****         for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 14675              		.loc 1 1942 0
 14676 031c 0023     		movs	r3, #0
 14677 031e 87F89330 		strb	r3, [r7, #147]
 14678 0322 01F0D9B9 		b	.L579
 14679              	.L683:
 14680 0326 00BF     		.align	2
 14681              	.L682:
 14682 0328 00000000 		.word	c_mem
 14683 032c 30110000 		.word	.LC151
 14684 0330 34110000 		.word	.LC152
 14685 0334 48110000 		.word	.LC153
 14686 0338 6C110000 		.word	.LC154
 14687 033c 74110000 		.word	.LC155
 14688 0340 84110000 		.word	.LC156
 14689 0344 90110000 		.word	.LC157
 14690 0348 A8110000 		.word	.LC158
 14691 034c C4110000 		.word	.LC159
 14692 0350 EC110000 		.word	.LC160
 14693 0354 18120000 		.word	.LC161
 14694 0358 34120000 		.word	.LC162
 14695 035c 48120000 		.word	.LC163
 14696 0360 5C120000 		.word	.LC164
 14697 0364 6C120000 		.word	.LC165
 14698 0368 7C120000 		.word	.LC166
 14699              	.L644:
 14700              	.LBB22:
1943:..\src/command_processing.c ****             
1944:..\src/command_processing.c ****             uint8 MOTOR_IDX = k;
 14701              		.loc 1 1944 0
 14702 036c 97F89330 		ldrb	r3, [r7, #147]
 14703 0370 87F88730 		strb	r3, [r7, #135]
1945:..\src/command_processing.c ****             struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 14704              		.loc 1 1945 0
 14705 0374 97F88720 		ldrb	r2, [r7, #135]	@ zero_extendqisi2
 14706 0378 1346     		mov	r3, r2
 14707 037a DB00     		lsls	r3, r3, #3
 14708 037c 9B1A     		subs	r3, r3, r2
 14709 037e 1B01     		lsls	r3, r3, #4
 14710 0380 B033     		adds	r3, r3, #176
 14711 0382 D7F88820 		ldr	r2, [r7, #136]
 14712 0386 1344     		add	r3, r3, r2
 14713 0388 C7F88030 		str	r3, [r7, #128]
1946:..\src/command_processing.c ****             uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 14714              		.loc 1 1946 0
 14715 038c D7F88030 		ldr	r3, [r7, #128]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 333


 14716 0390 93F86030 		ldrb	r3, [r3, #96]
 14717 0394 87F87F30 		strb	r3, [r7, #127]
1947:..\src/command_processing.c ****                   
1948:..\src/command_processing.c ****             sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 14718              		.loc 1 1948 0
 14719 0398 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14720 039c 5A1C     		adds	r2, r3, #1
 14721 039e 07F11803 		add	r3, r7, #24
 14722 03a2 AE49     		ldr	r1, .L684
 14723 03a4 1846     		mov	r0, r3
 14724 03a6 FFF7FEFF 		bl	sprintf
1949:..\src/command_processing.c ****             strcat(info_string, str);
 14725              		.loc 1 1949 0
 14726 03aa 07F11803 		add	r3, r7, #24
 14727 03ae 1946     		mov	r1, r3
 14728 03b0 7869     		ldr	r0, [r7, #20]
 14729 03b2 FFF7FEFF 		bl	strcat
1950:..\src/command_processing.c ****                         
1951:..\src/command_processing.c ****             strcat(info_string, "Motor reference");
 14730              		.loc 1 1951 0
 14731 03b6 7869     		ldr	r0, [r7, #20]
 14732 03b8 FFF7FEFF 		bl	strlen
 14733 03bc 0346     		mov	r3, r0
 14734 03be 1A46     		mov	r2, r3
 14735 03c0 7B69     		ldr	r3, [r7, #20]
 14736 03c2 1344     		add	r3, r3, r2
 14737 03c4 A64A     		ldr	r2, .L684+4
 14738 03c6 1C46     		mov	r4, r3
 14739 03c8 1546     		mov	r5, r2
 14740 03ca 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14741 03cc 2060     		str	r0, [r4]	@ unaligned
 14742 03ce 6160     		str	r1, [r4, #4]	@ unaligned
 14743 03d0 A260     		str	r2, [r4, #8]	@ unaligned
 14744 03d2 E360     		str	r3, [r4, #12]	@ unaligned
1952:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT)
 14745              		.loc 1 1952 0
 14746 03d4 D7F88030 		ldr	r3, [r7, #128]
 14747 03d8 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14748 03dc 022B     		cmp	r3, #2
 14749 03de 10D1     		bne	.L580
1953:..\src/command_processing.c ****                 strcat(info_string," - Currents: ");
 14750              		.loc 1 1953 0
 14751 03e0 7869     		ldr	r0, [r7, #20]
 14752 03e2 FFF7FEFF 		bl	strlen
 14753 03e6 0346     		mov	r3, r0
 14754 03e8 1A46     		mov	r2, r3
 14755 03ea 7B69     		ldr	r3, [r7, #20]
 14756 03ec 1344     		add	r3, r3, r2
 14757 03ee 9D4A     		ldr	r2, .L684+8
 14758 03f0 1C46     		mov	r4, r3
 14759 03f2 1346     		mov	r3, r2
 14760 03f4 07CB     		ldmia	r3!, {r0, r1, r2}
 14761 03f6 2060     		str	r0, [r4]	@ unaligned
 14762 03f8 6160     		str	r1, [r4, #4]	@ unaligned
 14763 03fa A260     		str	r2, [r4, #8]	@ unaligned
 14764 03fc 1B88     		ldrh	r3, [r3]	@ unaligned
 14765 03fe A381     		strh	r3, [r4, #12]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 334


 14766 0400 25E0     		b	.L581
 14767              	.L580:
1954:..\src/command_processing.c ****             else {
1955:..\src/command_processing.c ****                 if (MOT->control_mode == CONTROL_PWM)
 14768              		.loc 1 1955 0
 14769 0402 D7F88030 		ldr	r3, [r7, #128]
 14770 0406 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14771 040a 012B     		cmp	r3, #1
 14772 040c 0FD1     		bne	.L582
1956:..\src/command_processing.c ****                     strcat(info_string," - Pwm: ");
 14773              		.loc 1 1956 0
 14774 040e 7869     		ldr	r0, [r7, #20]
 14775 0410 FFF7FEFF 		bl	strlen
 14776 0414 0346     		mov	r3, r0
 14777 0416 1A46     		mov	r2, r3
 14778 0418 7B69     		ldr	r3, [r7, #20]
 14779 041a 1344     		add	r3, r3, r2
 14780 041c 9249     		ldr	r1, .L684+12
 14781 041e 1A46     		mov	r2, r3
 14782 0420 0B46     		mov	r3, r1
 14783 0422 03CB     		ldmia	r3!, {r0, r1}
 14784 0424 1060     		str	r0, [r2]	@ unaligned
 14785 0426 5160     		str	r1, [r2, #4]	@ unaligned
 14786 0428 1B78     		ldrb	r3, [r3]
 14787 042a 1372     		strb	r3, [r2, #8]
 14788 042c 0FE0     		b	.L581
 14789              	.L582:
1957:..\src/command_processing.c ****                 else
1958:..\src/command_processing.c ****                     strcat(info_string," - Position: ");
 14790              		.loc 1 1958 0
 14791 042e 7869     		ldr	r0, [r7, #20]
 14792 0430 FFF7FEFF 		bl	strlen
 14793 0434 0346     		mov	r3, r0
 14794 0436 1A46     		mov	r2, r3
 14795 0438 7B69     		ldr	r3, [r7, #20]
 14796 043a 1344     		add	r3, r3, r2
 14797 043c 8B4A     		ldr	r2, .L684+16
 14798 043e 1C46     		mov	r4, r3
 14799 0440 1346     		mov	r3, r2
 14800 0442 07CB     		ldmia	r3!, {r0, r1, r2}
 14801 0444 2060     		str	r0, [r4]	@ unaligned
 14802 0446 6160     		str	r1, [r4, #4]	@ unaligned
 14803 0448 A260     		str	r2, [r4, #8]	@ unaligned
 14804 044a 1B88     		ldrh	r3, [r3]	@ unaligned
 14805 044c A381     		strh	r3, [r4, #12]	@ unaligned
 14806              	.L581:
1959:..\src/command_processing.c ****             }
1960:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT) {
 14807              		.loc 1 1960 0
 14808 044e D7F88030 		ldr	r3, [r7, #128]
 14809 0452 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14810 0456 022B     		cmp	r3, #2
 14811 0458 13D1     		bne	.L583
1961:..\src/command_processing.c ****                 sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].curr));
 14812              		.loc 1 1961 0
 14813 045a 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14814 045e 844A     		ldr	r2, .L684+20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 335


 14815 0460 1B01     		lsls	r3, r3, #4
 14816 0462 1344     		add	r3, r3, r2
 14817 0464 0433     		adds	r3, r3, #4
 14818 0466 1A68     		ldr	r2, [r3]
 14819 0468 07F11803 		add	r3, r7, #24
 14820 046c 8149     		ldr	r1, .L684+24
 14821 046e 1846     		mov	r0, r3
 14822 0470 FFF7FEFF 		bl	sprintf
1962:..\src/command_processing.c ****                 strcat(info_string,str);
 14823              		.loc 1 1962 0
 14824 0474 07F11803 		add	r3, r7, #24
 14825 0478 1946     		mov	r1, r3
 14826 047a 7869     		ldr	r0, [r7, #20]
 14827 047c FFF7FEFF 		bl	strcat
 14828 0480 39E0     		b	.L584
 14829              	.L583:
1963:..\src/command_processing.c ****             }
1964:..\src/command_processing.c ****             else {
1965:..\src/command_processing.c ****                 if(MOT->control_mode == CONTROL_PWM) {
 14830              		.loc 1 1965 0
 14831 0482 D7F88030 		ldr	r3, [r7, #128]
 14832 0486 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14833 048a 012B     		cmp	r3, #1
 14834 048c 13D1     		bne	.L585
1966:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pwm));
 14835              		.loc 1 1966 0
 14836 048e 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14837 0492 774A     		ldr	r2, .L684+20
 14838 0494 1B01     		lsls	r3, r3, #4
 14839 0496 1344     		add	r3, r3, r2
 14840 0498 0833     		adds	r3, r3, #8
 14841 049a 1A68     		ldr	r2, [r3]
 14842 049c 07F11803 		add	r3, r7, #24
 14843 04a0 7449     		ldr	r1, .L684+24
 14844 04a2 1846     		mov	r0, r3
 14845 04a4 FFF7FEFF 		bl	sprintf
1967:..\src/command_processing.c ****                     strcat(info_string,str);
 14846              		.loc 1 1967 0
 14847 04a8 07F11803 		add	r3, r7, #24
 14848 04ac 1946     		mov	r1, r3
 14849 04ae 7869     		ldr	r0, [r7, #20]
 14850 04b0 FFF7FEFF 		bl	strcat
 14851 04b4 1FE0     		b	.L584
 14852              	.L585:
1968:..\src/command_processing.c ****                 }
1969:..\src/command_processing.c ****                 else {
1970:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pos >> MEM_P->enc[ENC_L].res[0]))
 14853              		.loc 1 1970 0
 14854 04b6 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14855 04ba 6D4A     		ldr	r2, .L684+20
 14856 04bc 1B01     		lsls	r3, r3, #4
 14857 04be 1344     		add	r3, r3, r2
 14858 04c0 1968     		ldr	r1, [r3]
 14859 04c2 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 14860 04c6 D7F88800 		ldr	r0, [r7, #136]
 14861 04ca 1346     		mov	r3, r2
 14862 04cc 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 336


 14863 04ce 1344     		add	r3, r3, r2
 14864 04d0 1B01     		lsls	r3, r3, #4
 14865 04d2 0344     		add	r3, r3, r0
 14866 04d4 03F29513 		addw	r3, r3, #405
 14867 04d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14868 04da 41FA03F2 		asr	r2, r1, r3
 14869 04de 07F11803 		add	r3, r7, #24
 14870 04e2 6449     		ldr	r1, .L684+24
 14871 04e4 1846     		mov	r0, r3
 14872 04e6 FFF7FEFF 		bl	sprintf
1971:..\src/command_processing.c ****                     strcat(info_string,str);
 14873              		.loc 1 1971 0
 14874 04ea 07F11803 		add	r3, r7, #24
 14875 04ee 1946     		mov	r1, r3
 14876 04f0 7869     		ldr	r0, [r7, #20]
 14877 04f2 FFF7FEFF 		bl	strcat
 14878              	.L584:
1972:..\src/command_processing.c ****                 }
1973:..\src/command_processing.c ****             }
1974:..\src/command_processing.c ****             strcat(info_string,"\r\n");
 14879              		.loc 1 1974 0
 14880 04f6 7869     		ldr	r0, [r7, #20]
 14881 04f8 FFF7FEFF 		bl	strlen
 14882 04fc 0346     		mov	r3, r0
 14883 04fe 1A46     		mov	r2, r3
 14884 0500 7B69     		ldr	r3, [r7, #20]
 14885 0502 1344     		add	r3, r3, r2
 14886 0504 5C4A     		ldr	r2, .L684+28
 14887 0506 1188     		ldrh	r1, [r2]	@ unaligned
 14888 0508 9278     		ldrb	r2, [r2, #2]
 14889 050a 1980     		strh	r1, [r3]	@ unaligned
 14890 050c 9A70     		strb	r2, [r3, #2]
1975:..\src/command_processing.c **** 
1976:..\src/command_processing.c ****             sprintf(str, "Motor enabled: ");
 14891              		.loc 1 1976 0
 14892 050e 07F11803 		add	r3, r7, #24
 14893 0512 5A4A     		ldr	r2, .L684+32
 14894 0514 1C46     		mov	r4, r3
 14895 0516 1346     		mov	r3, r2
 14896 0518 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 14897 051a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
1977:..\src/command_processing.c ****             if (g_ref[MOTOR_IDX].onoff & 0x01) {
 14898              		.loc 1 1977 0
 14899 051e 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14900 0522 574A     		ldr	r2, .L684+36
 14901 0524 1B01     		lsls	r3, r3, #4
 14902 0526 1344     		add	r3, r3, r2
 14903 0528 0C33     		adds	r3, r3, #12
 14904 052a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14905 052c 03F00103 		and	r3, r3, #1
 14906 0530 002B     		cmp	r3, #0
 14907 0532 0FD0     		beq	.L586
1978:..\src/command_processing.c ****                 strcat(str, "YES\r\n");
 14908              		.loc 1 1978 0
 14909 0534 07F11803 		add	r3, r7, #24
 14910 0538 1846     		mov	r0, r3
 14911 053a FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 337


 14912 053e 0346     		mov	r3, r0
 14913 0540 1A46     		mov	r2, r3
 14914 0542 07F11803 		add	r3, r7, #24
 14915 0546 1344     		add	r3, r3, r2
 14916 0548 4E4A     		ldr	r2, .L684+40
 14917 054a 1068     		ldr	r0, [r2]	@ unaligned
 14918 054c 1860     		str	r0, [r3]	@ unaligned
 14919 054e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 14920 0550 9A80     		strh	r2, [r3, #4]	@ unaligned
 14921 0552 0EE0     		b	.L587
 14922              	.L586:
1979:..\src/command_processing.c ****             } else {
1980:..\src/command_processing.c ****                 strcat(str, "NO\r\n");
 14923              		.loc 1 1980 0
 14924 0554 07F11803 		add	r3, r7, #24
 14925 0558 1846     		mov	r0, r3
 14926 055a FFF7FEFF 		bl	strlen
 14927 055e 0346     		mov	r3, r0
 14928 0560 1A46     		mov	r2, r3
 14929 0562 07F11803 		add	r3, r7, #24
 14930 0566 1344     		add	r3, r3, r2
 14931 0568 474A     		ldr	r2, .L684+44
 14932 056a 1068     		ldr	r0, [r2]	@ unaligned
 14933 056c 1860     		str	r0, [r3]	@ unaligned
 14934 056e 1279     		ldrb	r2, [r2, #4]
 14935 0570 1A71     		strb	r2, [r3, #4]
 14936              	.L587:
1981:..\src/command_processing.c ****             }
1982:..\src/command_processing.c ****             strcat(info_string, str);
 14937              		.loc 1 1982 0
 14938 0572 07F11803 		add	r3, r7, #24
 14939 0576 1946     		mov	r1, r3
 14940 0578 7869     		ldr	r0, [r7, #20]
 14941 057a FFF7FEFF 		bl	strcat
1983:..\src/command_processing.c ****                         
1984:..\src/command_processing.c ****             strcat(info_string, "PWM rescaling activation: ");
 14942              		.loc 1 1984 0
 14943 057e 7869     		ldr	r0, [r7, #20]
 14944 0580 FFF7FEFF 		bl	strlen
 14945 0584 0346     		mov	r3, r0
 14946 0586 1A46     		mov	r2, r3
 14947 0588 7B69     		ldr	r3, [r7, #20]
 14948 058a 1344     		add	r3, r3, r2
 14949 058c 3F4A     		ldr	r2, .L684+48
 14950 058e 1D46     		mov	r5, r3
 14951 0590 1446     		mov	r4, r2
 14952 0592 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14953 0594 2860     		str	r0, [r5]	@ unaligned
 14954 0596 6960     		str	r1, [r5, #4]	@ unaligned
 14955 0598 AA60     		str	r2, [r5, #8]	@ unaligned
 14956 059a EB60     		str	r3, [r5, #12]	@ unaligned
 14957 059c 03CC     		ldmia	r4!, {r0, r1}
 14958 059e 2861     		str	r0, [r5, #16]	@ unaligned
 14959 05a0 6961     		str	r1, [r5, #20]	@ unaligned
 14960 05a2 2388     		ldrh	r3, [r4]	@ unaligned
 14961 05a4 A278     		ldrb	r2, [r4, #2]
 14962 05a6 2B83     		strh	r3, [r5, #24]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 338


 14963 05a8 1346     		mov	r3, r2
 14964 05aa AB76     		strb	r3, [r5, #26]
1985:..\src/command_processing.c ****             if(MOT->activate_pwm_rescaling == MAXON_12V)
 14965              		.loc 1 1985 0
 14966 05ac D7F88030 		ldr	r3, [r7, #128]
 14967 05b0 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 14968 05b4 012B     		cmp	r3, #1
 14969 05b6 0CD1     		bne	.L588
1986:..\src/command_processing.c ****                 strcat(info_string, "YES\n");
 14970              		.loc 1 1986 0
 14971 05b8 7869     		ldr	r0, [r7, #20]
 14972 05ba FFF7FEFF 		bl	strlen
 14973 05be 0346     		mov	r3, r0
 14974 05c0 1A46     		mov	r2, r3
 14975 05c2 7B69     		ldr	r3, [r7, #20]
 14976 05c4 1344     		add	r3, r3, r2
 14977 05c6 324A     		ldr	r2, .L684+52
 14978 05c8 1068     		ldr	r0, [r2]	@ unaligned
 14979 05ca 1860     		str	r0, [r3]	@ unaligned
 14980 05cc 1279     		ldrb	r2, [r2, #4]
 14981 05ce 1A71     		strb	r2, [r3, #4]
 14982 05d0 09E0     		b	.L589
 14983              	.L588:
1987:..\src/command_processing.c ****             else
1988:..\src/command_processing.c ****                 strcat(info_string, "NO\n");
 14984              		.loc 1 1988 0
 14985 05d2 7869     		ldr	r0, [r7, #20]
 14986 05d4 FFF7FEFF 		bl	strlen
 14987 05d8 0346     		mov	r3, r0
 14988 05da 1A46     		mov	r2, r3
 14989 05dc 7B69     		ldr	r3, [r7, #20]
 14990 05de 1344     		add	r3, r3, r2
 14991 05e0 2C4A     		ldr	r2, .L684+56
 14992 05e2 1068     		ldr	r0, [r2]	@ unaligned
 14993 05e4 1860     		str	r0, [r3]	@ unaligned
 14994              	.L589:
1989:..\src/command_processing.c ****             
1990:..\src/command_processing.c ****             sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 14995              		.loc 1 1990 0
 14996 05e6 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14997 05ea 2B4A     		ldr	r2, .L684+60
 14998 05ec D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 14999 05ee 1A46     		mov	r2, r3
 15000 05f0 07F11803 		add	r3, r7, #24
 15001 05f4 2949     		ldr	r1, .L684+64
 15002 05f6 1846     		mov	r0, r3
 15003 05f8 FFF7FEFF 		bl	sprintf
1991:..\src/command_processing.c ****             strcat(info_string, str);
 15004              		.loc 1 1991 0
 15005 05fc 07F11803 		add	r3, r7, #24
 15006 0600 1946     		mov	r1, r3
 15007 0602 7869     		ldr	r0, [r7, #20]
 15008 0604 FFF7FEFF 		bl	strcat
1992:..\src/command_processing.c **** 
1993:..\src/command_processing.c ****             strcat(info_string, "\r\nMEASUREMENTS INFO\r\n");
 15009              		.loc 1 1993 0
 15010 0608 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 339


 15011 060a FFF7FEFF 		bl	strlen
 15012 060e 0346     		mov	r3, r0
 15013 0610 1A46     		mov	r2, r3
 15014 0612 7B69     		ldr	r3, [r7, #20]
 15015 0614 1344     		add	r3, r3, r2
 15016 0616 224A     		ldr	r2, .L684+68
 15017 0618 1D46     		mov	r5, r3
 15018 061a 1446     		mov	r4, r2
 15019 061c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15020 061e 2860     		str	r0, [r5]	@ unaligned
 15021 0620 6960     		str	r1, [r5, #4]	@ unaligned
 15022 0622 AA60     		str	r2, [r5, #8]	@ unaligned
 15023 0624 EB60     		str	r3, [r5, #12]	@ unaligned
 15024 0626 2068     		ldr	r0, [r4]	@ unaligned
 15025 0628 2861     		str	r0, [r5, #16]	@ unaligned
 15026 062a A388     		ldrh	r3, [r4, #4]	@ unaligned
 15027 062c AB82     		strh	r3, [r5, #20]	@ unaligned
1994:..\src/command_processing.c ****             strcat(info_string, "Sensor value: ");
 15028              		.loc 1 1994 0
 15029 062e 7869     		ldr	r0, [r7, #20]
 15030 0630 FFF7FEFF 		bl	strlen
 15031 0634 0346     		mov	r3, r0
 15032 0636 1A46     		mov	r2, r3
 15033 0638 7B69     		ldr	r3, [r7, #20]
 15034 063a 1344     		add	r3, r3, r2
 15035 063c 194A     		ldr	r2, .L684+72
 15036 063e 1C46     		mov	r4, r3
 15037 0640 1346     		mov	r3, r2
 15038 0642 07CB     		ldmia	r3!, {r0, r1, r2}
 15039 0644 2060     		str	r0, [r4]	@ unaligned
 15040 0646 6160     		str	r1, [r4, #4]	@ unaligned
 15041 0648 A260     		str	r2, [r4, #8]	@ unaligned
 15042 064a 1A88     		ldrh	r2, [r3]	@ unaligned
 15043 064c 9B78     		ldrb	r3, [r3, #2]
 15044 064e A281     		strh	r2, [r4, #12]	@ unaligned
 15045 0650 A373     		strb	r3, [r4, #14]
1995:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; i++) {
 15046              		.loc 1 1995 0
 15047 0652 0023     		movs	r3, #0
 15048 0654 C7F89430 		str	r3, [r7, #148]
 15049 0658 65E0     		b	.L590
 15050              	.L685:
 15051 065a 00BF     		.align	2
 15052              	.L684:
 15053 065c 94120000 		.word	.LC167
 15054 0660 A4120000 		.word	.LC168
 15055 0664 B4120000 		.word	.LC169
 15056 0668 C4120000 		.word	.LC170
 15057 066c D0120000 		.word	.LC171
 15058 0670 00000000 		.word	g_refOld
 15059 0674 E0120000 		.word	.LC172
 15060 0678 30110000 		.word	.LC151
 15061 067c E4120000 		.word	.LC173
 15062 0680 00000000 		.word	g_ref
 15063 0684 F4120000 		.word	.LC174
 15064 0688 FC120000 		.word	.LC175
 15065 068c 04130000 		.word	.LC176
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 340


 15066 0690 20130000 		.word	.LC177
 15067 0694 28130000 		.word	.LC178
 15068 0698 00000000 		.word	dev_pwm_limit
 15069 069c 2C130000 		.word	.LC179
 15070 06a0 3C130000 		.word	.LC180
 15071 06a4 54130000 		.word	.LC181
 15072              	.L592:
1996:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 15073              		.loc 1 1996 0
 15074 06a8 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15075 06ac B849     		ldr	r1, .L686
 15076 06ae 1346     		mov	r3, r2
 15077 06b0 5B00     		lsls	r3, r3, #1
 15078 06b2 1344     		add	r3, r3, r2
 15079 06b4 9B00     		lsls	r3, r3, #2
 15080 06b6 1344     		add	r3, r3, r2
 15081 06b8 D7F89420 		ldr	r2, [r7, #148]
 15082 06bc 1344     		add	r3, r3, r2
 15083 06be 51F82310 		ldr	r1, [r1, r3, lsl #2]
 15084 06c2 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15085 06c6 D7F88800 		ldr	r0, [r7, #136]
 15086 06ca 1346     		mov	r3, r2
 15087 06cc 5B00     		lsls	r3, r3, #1
 15088 06ce 1344     		add	r3, r3, r2
 15089 06d0 1B01     		lsls	r3, r3, #4
 15090 06d2 C218     		adds	r2, r0, r3
 15091 06d4 D7F89430 		ldr	r3, [r7, #148]
 15092 06d8 1344     		add	r3, r3, r2
 15093 06da 03F29513 		addw	r3, r3, #405
 15094 06de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15095 06e0 41FA03F2 		asr	r2, r1, r3
 15096 06e4 07F11803 		add	r3, r7, #24
 15097 06e8 AA49     		ldr	r1, .L686+4
 15098 06ea 1846     		mov	r0, r3
 15099 06ec FFF7FEFF 		bl	sprintf
1997:..\src/command_processing.c ****                 strcat(info_string, str);
 15100              		.loc 1 1997 0
 15101 06f0 07F11803 		add	r3, r7, #24
 15102 06f4 1946     		mov	r1, r3
 15103 06f6 7869     		ldr	r0, [r7, #20]
 15104 06f8 FFF7FEFF 		bl	strcat
1998:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 15105              		.loc 1 1998 0
 15106 06fc D7F89430 		ldr	r3, [r7, #148]
 15107 0700 022B     		cmp	r3, #2
 15108 0702 0BD0     		beq	.L591
1999:..\src/command_processing.c ****                     strcat(info_string, ", ");
 15109              		.loc 1 1999 0
 15110 0704 7869     		ldr	r0, [r7, #20]
 15111 0706 FFF7FEFF 		bl	strlen
 15112 070a 0346     		mov	r3, r0
 15113 070c 1A46     		mov	r2, r3
 15114 070e 7B69     		ldr	r3, [r7, #20]
 15115 0710 1344     		add	r3, r3, r2
 15116 0712 A14A     		ldr	r2, .L686+8
 15117 0714 1188     		ldrh	r1, [r2]	@ unaligned
 15118 0716 9278     		ldrb	r2, [r2, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 341


 15119 0718 1980     		strh	r1, [r3]	@ unaligned
 15120 071a 9A70     		strb	r2, [r3, #2]
 15121              	.L591:
1995:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 15122              		.loc 1 1995 0 discriminator 2
 15123 071c D7F89430 		ldr	r3, [r7, #148]
 15124 0720 0133     		adds	r3, r3, #1
 15125 0722 C7F89430 		str	r3, [r7, #148]
 15126              	.L590:
1995:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 15127              		.loc 1 1995 0 is_stmt 0 discriminator 1
 15128 0726 D7F89430 		ldr	r3, [r7, #148]
 15129 072a 022B     		cmp	r3, #2
 15130 072c BCDD     		ble	.L592
2000:..\src/command_processing.c ****                 }                
2001:..\src/command_processing.c ****             }
2002:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15131              		.loc 1 2002 0 is_stmt 1
 15132 072e 7869     		ldr	r0, [r7, #20]
 15133 0730 FFF7FEFF 		bl	strlen
 15134 0734 0346     		mov	r3, r0
 15135 0736 1A46     		mov	r2, r3
 15136 0738 7B69     		ldr	r3, [r7, #20]
 15137 073a 1344     		add	r3, r3, r2
 15138 073c 974A     		ldr	r2, .L686+12
 15139 073e 1188     		ldrh	r1, [r2]	@ unaligned
 15140 0740 9278     		ldrb	r2, [r2, #2]
 15141 0742 1980     		strh	r1, [r3]	@ unaligned
 15142 0744 9A70     		strb	r2, [r3, #2]
2003:..\src/command_processing.c ****             
2004:..\src/command_processing.c ****             if (MOT->input_mode == INPUT_MODE_JOYSTICK){
 15143              		.loc 1 2004 0
 15144 0746 D7F88030 		ldr	r3, [r7, #128]
 15145 074a 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 15146 074e 062B     		cmp	r3, #6
 15147 0750 1AD1     		bne	.L593
2005:..\src/command_processing.c ****                 sprintf(str, "Joystick measurements: %d, %d", (int)g_adc_measOld.joystick[0], (int)
 15148              		.loc 1 2005 0
 15149 0752 934B     		ldr	r3, .L686+16
 15150 0754 1A6A     		ldr	r2, [r3, #32]
 15151 0756 924B     		ldr	r3, .L686+16
 15152 0758 5B6A     		ldr	r3, [r3, #36]
 15153 075a 07F11800 		add	r0, r7, #24
 15154 075e 9149     		ldr	r1, .L686+20
 15155 0760 FFF7FEFF 		bl	sprintf
2006:..\src/command_processing.c ****                 strcat(info_string, str);
 15156              		.loc 1 2006 0
 15157 0764 07F11803 		add	r3, r7, #24
 15158 0768 1946     		mov	r1, r3
 15159 076a 7869     		ldr	r0, [r7, #20]
 15160 076c FFF7FEFF 		bl	strcat
2007:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 15161              		.loc 1 2007 0
 15162 0770 7869     		ldr	r0, [r7, #20]
 15163 0772 FFF7FEFF 		bl	strlen
 15164 0776 0346     		mov	r3, r0
 15165 0778 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 342


 15166 077a 7B69     		ldr	r3, [r7, #20]
 15167 077c 1344     		add	r3, r3, r2
 15168 077e 874A     		ldr	r2, .L686+12
 15169 0780 1188     		ldrh	r1, [r2]	@ unaligned
 15170 0782 9278     		ldrb	r2, [r2, #2]
 15171 0784 1980     		strh	r1, [r3]	@ unaligned
 15172 0786 9A70     		strb	r2, [r3, #2]
 15173              	.L593:
2008:..\src/command_processing.c ****             }
2009:..\src/command_processing.c **** 
2010:..\src/command_processing.c ****             sprintf(str, "Battery %d Voltage (mV): %ld", MOTOR_IDX+1, (int32) dev_tension[MOTOR_IDX
 15174              		.loc 1 2010 0
 15175 0788 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15176 078c 591C     		adds	r1, r3, #1
 15177 078e 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15178 0792 854A     		ldr	r2, .L686+24
 15179 0794 52F82330 		ldr	r3, [r2, r3, lsl #2]
 15180 0798 07F11800 		add	r0, r7, #24
 15181 079c 0A46     		mov	r2, r1
 15182 079e 8349     		ldr	r1, .L686+28
 15183 07a0 FFF7FEFF 		bl	sprintf
2011:..\src/command_processing.c ****             strcat(info_string, str);
 15184              		.loc 1 2011 0
 15185 07a4 07F11803 		add	r3, r7, #24
 15186 07a8 1946     		mov	r1, r3
 15187 07aa 7869     		ldr	r0, [r7, #20]
 15188 07ac FFF7FEFF 		bl	strcat
2012:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15189              		.loc 1 2012 0
 15190 07b0 7869     		ldr	r0, [r7, #20]
 15191 07b2 FFF7FEFF 		bl	strlen
 15192 07b6 0346     		mov	r3, r0
 15193 07b8 1A46     		mov	r2, r3
 15194 07ba 7B69     		ldr	r3, [r7, #20]
 15195 07bc 1344     		add	r3, r3, r2
 15196 07be 774A     		ldr	r2, .L686+12
 15197 07c0 1188     		ldrh	r1, [r2]	@ unaligned
 15198 07c2 9278     		ldrb	r2, [r2, #2]
 15199 07c4 1980     		strh	r1, [r3]	@ unaligned
 15200 07c6 9A70     		strb	r2, [r3, #2]
2013:..\src/command_processing.c ****             
2014:..\src/command_processing.c ****             sprintf(str, "Full charge power tension %d (mV): %ld", MOTOR_IDX+1, (int32) pow_tension
 15201              		.loc 1 2014 0
 15202 07c8 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15203 07cc 591C     		adds	r1, r3, #1
 15204 07ce 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15205 07d2 774A     		ldr	r2, .L686+32
 15206 07d4 52F82330 		ldr	r3, [r2, r3, lsl #2]
 15207 07d8 07F11800 		add	r0, r7, #24
 15208 07dc 0A46     		mov	r2, r1
 15209 07de 7549     		ldr	r1, .L686+36
 15210 07e0 FFF7FEFF 		bl	sprintf
2015:..\src/command_processing.c ****             strcat(info_string, str);
 15211              		.loc 1 2015 0
 15212 07e4 07F11803 		add	r3, r7, #24
 15213 07e8 1946     		mov	r1, r3
 15214 07ea 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 343


 15215 07ec FFF7FEFF 		bl	strcat
2016:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15216              		.loc 1 2016 0
 15217 07f0 7869     		ldr	r0, [r7, #20]
 15218 07f2 FFF7FEFF 		bl	strlen
 15219 07f6 0346     		mov	r3, r0
 15220 07f8 1A46     		mov	r2, r3
 15221 07fa 7B69     		ldr	r3, [r7, #20]
 15222 07fc 1344     		add	r3, r3, r2
 15223 07fe 674A     		ldr	r2, .L686+12
 15224 0800 1188     		ldrh	r1, [r2]	@ unaligned
 15225 0802 9278     		ldrb	r2, [r2, #2]
 15226 0804 1980     		strh	r1, [r3]	@ unaligned
 15227 0806 9A70     		strb	r2, [r3, #2]
2017:..\src/command_processing.c **** 
2018:..\src/command_processing.c ****             sprintf(str, "Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[ENC_L].curr );
 15228              		.loc 1 2018 0
 15229 0808 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15230 080c 5C1C     		adds	r4, r3, #1
 15231 080e 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 15232 0812 5F4A     		ldr	r2, .L686
 15233 0814 3421     		movs	r1, #52
 15234 0816 01FB03F3 		mul	r3, r1, r3
 15235 081a 1344     		add	r3, r3, r2
 15236 081c 0C33     		adds	r3, r3, #12
 15237 081e 1B68     		ldr	r3, [r3]
 15238 0820 07F11800 		add	r0, r7, #24
 15239 0824 2246     		mov	r2, r4
 15240 0826 6449     		ldr	r1, .L686+40
 15241 0828 FFF7FEFF 		bl	sprintf
2019:..\src/command_processing.c ****             strcat(info_string, str);
 15242              		.loc 1 2019 0
 15243 082c 07F11803 		add	r3, r7, #24
 15244 0830 1946     		mov	r1, r3
 15245 0832 7869     		ldr	r0, [r7, #20]
 15246 0834 FFF7FEFF 		bl	strcat
2020:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15247              		.loc 1 2020 0
 15248 0838 7869     		ldr	r0, [r7, #20]
 15249 083a FFF7FEFF 		bl	strlen
 15250 083e 0346     		mov	r3, r0
 15251 0840 1A46     		mov	r2, r3
 15252 0842 7B69     		ldr	r3, [r7, #20]
 15253 0844 1344     		add	r3, r3, r2
 15254 0846 554A     		ldr	r2, .L686+12
 15255 0848 1188     		ldrh	r1, [r2]	@ unaligned
 15256 084a 9278     		ldrb	r2, [r2, #2]
 15257 084c 1980     		strh	r1, [r3]	@ unaligned
 15258 084e 9A70     		strb	r2, [r3, #2]
2021:..\src/command_processing.c ****             
2022:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag == TRUE){
 15259              		.loc 1 2022 0
 15260 0850 D7F88030 		ldr	r3, [r7, #128]
 15261 0854 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 15262 0858 012B     		cmp	r3, #1
 15263 085a 23D1     		bne	.L594
2023:..\src/command_processing.c ****                 sprintf(str, "Last Grasp Hold Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[EN
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 344


 15264              		.loc 1 2023 0
 15265 085c 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15266 0860 5C1C     		adds	r4, r3, #1
 15267 0862 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 15268 0866 4A4A     		ldr	r2, .L686
 15269 0868 3421     		movs	r1, #52
 15270 086a 01FB03F3 		mul	r3, r1, r3
 15271 086e 1344     		add	r3, r3, r2
 15272 0870 1433     		adds	r3, r3, #20
 15273 0872 1B68     		ldr	r3, [r3]
 15274 0874 07F11800 		add	r0, r7, #24
 15275 0878 2246     		mov	r2, r4
 15276 087a 5049     		ldr	r1, .L686+44
 15277 087c FFF7FEFF 		bl	sprintf
2024:..\src/command_processing.c ****                 strcat(info_string, str);
 15278              		.loc 1 2024 0
 15279 0880 07F11803 		add	r3, r7, #24
 15280 0884 1946     		mov	r1, r3
 15281 0886 7869     		ldr	r0, [r7, #20]
 15282 0888 FFF7FEFF 		bl	strcat
2025:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 15283              		.loc 1 2025 0
 15284 088c 7869     		ldr	r0, [r7, #20]
 15285 088e FFF7FEFF 		bl	strlen
 15286 0892 0346     		mov	r3, r0
 15287 0894 1A46     		mov	r2, r3
 15288 0896 7B69     		ldr	r3, [r7, #20]
 15289 0898 1344     		add	r3, r3, r2
 15290 089a 404A     		ldr	r2, .L686+12
 15291 089c 1188     		ldrh	r1, [r2]	@ unaligned
 15292 089e 9278     		ldrb	r2, [r2, #2]
 15293 08a0 1980     		strh	r1, [r3]	@ unaligned
 15294 08a2 9A70     		strb	r2, [r3, #2]
 15295              	.L594:
2026:..\src/command_processing.c ****             }
2027:..\src/command_processing.c ****             
2028:..\src/command_processing.c ****             sprintf(str, "\r\nMOTOR %d CONFIGURATION\r\n", MOTOR_IDX+1);
 15296              		.loc 1 2028 0
 15297 08a4 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15298 08a8 5A1C     		adds	r2, r3, #1
 15299 08aa 07F11803 		add	r3, r7, #24
 15300 08ae 4449     		ldr	r1, .L686+48
 15301 08b0 1846     		mov	r0, r3
 15302 08b2 FFF7FEFF 		bl	sprintf
2029:..\src/command_processing.c ****             strcat(info_string, str);
 15303              		.loc 1 2029 0
 15304 08b6 07F11803 		add	r3, r7, #24
 15305 08ba 1946     		mov	r1, r3
 15306 08bc 7869     		ldr	r0, [r7, #20]
 15307 08be FFF7FEFF 		bl	strcat
2030:..\src/command_processing.c **** 
2031:..\src/command_processing.c ****             strcat(info_string, "PID Controller: ");
 15308              		.loc 1 2031 0
 15309 08c2 7869     		ldr	r0, [r7, #20]
 15310 08c4 FFF7FEFF 		bl	strlen
 15311 08c8 0346     		mov	r3, r0
 15312 08ca 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 345


 15313 08cc 7B69     		ldr	r3, [r7, #20]
 15314 08ce 1344     		add	r3, r3, r2
 15315 08d0 3C4A     		ldr	r2, .L686+52
 15316 08d2 1D46     		mov	r5, r3
 15317 08d4 1446     		mov	r4, r2
 15318 08d6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15319 08d8 2860     		str	r0, [r5]	@ unaligned
 15320 08da 6960     		str	r1, [r5, #4]	@ unaligned
 15321 08dc AA60     		str	r2, [r5, #8]	@ unaligned
 15322 08de EB60     		str	r3, [r5, #12]	@ unaligned
 15323 08e0 2378     		ldrb	r3, [r4]
 15324 08e2 2B74     		strb	r3, [r5, #16]
2032:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 15325              		.loc 1 2032 0
 15326 08e4 D7F88030 		ldr	r3, [r7, #128]
 15327 08e8 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 15328 08ec 032B     		cmp	r3, #3
 15329 08ee 73D0     		beq	.L595
2033:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 15330              		.loc 1 2033 0
 15331 08f0 D7F88030 		ldr	r3, [r7, #128]
 15332 08f4 1B68     		ldr	r3, [r3]
 15333 08f6 1846     		mov	r0, r3
 15334 08f8 FFF7FEFF 		bl	__aeabi_i2d
 15335 08fc 4FF00002 		mov	r2, #0
 15336 0900 314B     		ldr	r3, .L686+56
 15337 0902 FFF7FEFF 		bl	__aeabi_ddiv
 15338 0906 0346     		mov	r3, r0
 15339 0908 0C46     		mov	r4, r1
 15340 090a 07F11800 		add	r0, r7, #24
 15341 090e 1A46     		mov	r2, r3
 15342 0910 2346     		mov	r3, r4
 15343 0912 2E49     		ldr	r1, .L686+60
 15344 0914 FFF7FEFF 		bl	sprintf
2034:..\src/command_processing.c ****                 strcat(info_string, str);
 15345              		.loc 1 2034 0
 15346 0918 07F11803 		add	r3, r7, #24
 15347 091c 1946     		mov	r1, r3
 15348 091e 7869     		ldr	r0, [r7, #20]
 15349 0920 FFF7FEFF 		bl	strcat
2035:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 15350              		.loc 1 2035 0
 15351 0924 D7F88030 		ldr	r3, [r7, #128]
 15352 0928 5B68     		ldr	r3, [r3, #4]
 15353 092a 1846     		mov	r0, r3
 15354 092c FFF7FEFF 		bl	__aeabi_i2d
 15355 0930 4FF00002 		mov	r2, #0
 15356 0934 244B     		ldr	r3, .L686+56
 15357 0936 FFF7FEFF 		bl	__aeabi_ddiv
 15358 093a 0346     		mov	r3, r0
 15359 093c 0C46     		mov	r4, r1
 15360 093e 07F11800 		add	r0, r7, #24
 15361 0942 1A46     		mov	r2, r3
 15362 0944 2346     		mov	r3, r4
 15363 0946 2249     		ldr	r1, .L686+64
 15364 0948 FFF7FEFF 		bl	sprintf
2036:..\src/command_processing.c ****                 strcat(info_string, str);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 346


 15365              		.loc 1 2036 0
 15366 094c 07F11803 		add	r3, r7, #24
 15367 0950 1946     		mov	r1, r3
 15368 0952 7869     		ldr	r0, [r7, #20]
 15369 0954 FFF7FEFF 		bl	strcat
2037:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 15370              		.loc 1 2037 0
 15371 0958 D7F88030 		ldr	r3, [r7, #128]
 15372 095c 9B68     		ldr	r3, [r3, #8]
 15373 095e 1846     		mov	r0, r3
 15374 0960 FFF7FEFF 		bl	__aeabi_i2d
 15375 0964 4FF00002 		mov	r2, #0
 15376 0968 174B     		ldr	r3, .L686+56
 15377 096a FFF7FEFF 		bl	__aeabi_ddiv
 15378 096e 0346     		mov	r3, r0
 15379 0970 0C46     		mov	r4, r1
 15380 0972 07F11800 		add	r0, r7, #24
 15381 0976 1A46     		mov	r2, r3
 15382 0978 2346     		mov	r3, r4
 15383 097a 1649     		ldr	r1, .L686+68
 15384 097c FFF7FEFF 		bl	sprintf
2038:..\src/command_processing.c ****                 strcat(info_string, str);
 15385              		.loc 1 2038 0
 15386 0980 07F11803 		add	r3, r7, #24
 15387 0984 1946     		mov	r1, r3
 15388 0986 7869     		ldr	r0, [r7, #20]
 15389 0988 FFF7FEFF 		bl	strcat
 15390 098c 72E0     		b	.L596
 15391              	.L687:
 15392 098e 00BF     		.align	2
 15393              	.L686:
 15394 0990 00000000 		.word	g_meas
 15395 0994 64130000 		.word	.LC182
 15396 0998 68130000 		.word	.LC183
 15397 099c 30110000 		.word	.LC151
 15398 09a0 00000000 		.word	g_adc_measOld
 15399 09a4 6C130000 		.word	.LC184
 15400 09a8 00000000 		.word	dev_tension
 15401 09ac 8C130000 		.word	.LC185
 15402 09b0 00000000 		.word	pow_tension
 15403 09b4 AC130000 		.word	.LC186
 15404 09b8 D4130000 		.word	.LC187
 15405 09bc EC130000 		.word	.LC188
 15406 09c0 14140000 		.word	.LC189
 15407 09c4 30140000 		.word	.LC190
 15408 09c8 0000F040 		.word	1089470464
 15409 09cc 44140000 		.word	.LC191
 15410 09d0 50140000 		.word	.LC192
 15411 09d4 5C140000 		.word	.LC193
 15412              	.L595:
2039:..\src/command_processing.c ****             }
2040:..\src/command_processing.c ****             else { 
2041:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 15413              		.loc 1 2041 0
 15414 09d8 D7F88030 		ldr	r3, [r7, #128]
 15415 09dc 9B69     		ldr	r3, [r3, #24]
 15416 09de 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 347


 15417 09e0 FFF7FEFF 		bl	__aeabi_i2d
 15418 09e4 4FF00002 		mov	r2, #0
 15419 09e8 CE4B     		ldr	r3, .L688
 15420 09ea FFF7FEFF 		bl	__aeabi_ddiv
 15421 09ee 0346     		mov	r3, r0
 15422 09f0 0C46     		mov	r4, r1
 15423 09f2 07F11800 		add	r0, r7, #24
 15424 09f6 1A46     		mov	r2, r3
 15425 09f8 2346     		mov	r3, r4
 15426 09fa CB49     		ldr	r1, .L688+4
 15427 09fc FFF7FEFF 		bl	sprintf
2042:..\src/command_processing.c ****                 strcat(info_string, str);
 15428              		.loc 1 2042 0
 15429 0a00 07F11803 		add	r3, r7, #24
 15430 0a04 1946     		mov	r1, r3
 15431 0a06 7869     		ldr	r0, [r7, #20]
 15432 0a08 FFF7FEFF 		bl	strcat
2043:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 15433              		.loc 1 2043 0
 15434 0a0c D7F88030 		ldr	r3, [r7, #128]
 15435 0a10 DB69     		ldr	r3, [r3, #28]
 15436 0a12 1846     		mov	r0, r3
 15437 0a14 FFF7FEFF 		bl	__aeabi_i2d
 15438 0a18 4FF00002 		mov	r2, #0
 15439 0a1c C14B     		ldr	r3, .L688
 15440 0a1e FFF7FEFF 		bl	__aeabi_ddiv
 15441 0a22 0346     		mov	r3, r0
 15442 0a24 0C46     		mov	r4, r1
 15443 0a26 07F11800 		add	r0, r7, #24
 15444 0a2a 1A46     		mov	r2, r3
 15445 0a2c 2346     		mov	r3, r4
 15446 0a2e BF49     		ldr	r1, .L688+8
 15447 0a30 FFF7FEFF 		bl	sprintf
2044:..\src/command_processing.c ****                 strcat(info_string, str);
 15448              		.loc 1 2044 0
 15449 0a34 07F11803 		add	r3, r7, #24
 15450 0a38 1946     		mov	r1, r3
 15451 0a3a 7869     		ldr	r0, [r7, #20]
 15452 0a3c FFF7FEFF 		bl	strcat
2045:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 15453              		.loc 1 2045 0
 15454 0a40 D7F88030 		ldr	r3, [r7, #128]
 15455 0a44 1B6A     		ldr	r3, [r3, #32]
 15456 0a46 1846     		mov	r0, r3
 15457 0a48 FFF7FEFF 		bl	__aeabi_i2d
 15458 0a4c 4FF00002 		mov	r2, #0
 15459 0a50 B44B     		ldr	r3, .L688
 15460 0a52 FFF7FEFF 		bl	__aeabi_ddiv
 15461 0a56 0346     		mov	r3, r0
 15462 0a58 0C46     		mov	r4, r1
 15463 0a5a 07F11800 		add	r0, r7, #24
 15464 0a5e 1A46     		mov	r2, r3
 15465 0a60 2346     		mov	r3, r4
 15466 0a62 B349     		ldr	r1, .L688+12
 15467 0a64 FFF7FEFF 		bl	sprintf
2046:..\src/command_processing.c ****                 strcat(info_string, str);
 15468              		.loc 1 2046 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 348


 15469 0a68 07F11803 		add	r3, r7, #24
 15470 0a6c 1946     		mov	r1, r3
 15471 0a6e 7869     		ldr	r0, [r7, #20]
 15472 0a70 FFF7FEFF 		bl	strcat
 15473              	.L596:
2047:..\src/command_processing.c ****             }
2048:..\src/command_processing.c **** 
2049:..\src/command_processing.c ****             strcat(info_string, "Current PID Controller: ");
 15474              		.loc 1 2049 0
 15475 0a74 7869     		ldr	r0, [r7, #20]
 15476 0a76 FFF7FEFF 		bl	strlen
 15477 0a7a 0346     		mov	r3, r0
 15478 0a7c 1A46     		mov	r2, r3
 15479 0a7e 7B69     		ldr	r3, [r7, #20]
 15480 0a80 1344     		add	r3, r3, r2
 15481 0a82 AC4A     		ldr	r2, .L688+16
 15482 0a84 1D46     		mov	r5, r3
 15483 0a86 1446     		mov	r4, r2
 15484 0a88 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15485 0a8a 2860     		str	r0, [r5]	@ unaligned
 15486 0a8c 6960     		str	r1, [r5, #4]	@ unaligned
 15487 0a8e AA60     		str	r2, [r5, #8]	@ unaligned
 15488 0a90 EB60     		str	r3, [r5, #12]	@ unaligned
 15489 0a92 03CC     		ldmia	r4!, {r0, r1}
 15490 0a94 2861     		str	r0, [r5, #16]	@ unaligned
 15491 0a96 6961     		str	r1, [r5, #20]	@ unaligned
 15492 0a98 2378     		ldrb	r3, [r4]
 15493 0a9a 2B76     		strb	r3, [r5, #24]
2050:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 15494              		.loc 1 2050 0
 15495 0a9c D7F88030 		ldr	r3, [r7, #128]
 15496 0aa0 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 15497 0aa4 032B     		cmp	r3, #3
 15498 0aa6 4ED0     		beq	.L597
2051:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 15499              		.loc 1 2051 0
 15500 0aa8 D7F88030 		ldr	r3, [r7, #128]
 15501 0aac DB68     		ldr	r3, [r3, #12]
 15502 0aae 1846     		mov	r0, r3
 15503 0ab0 FFF7FEFF 		bl	__aeabi_i2d
 15504 0ab4 4FF00002 		mov	r2, #0
 15505 0ab8 9A4B     		ldr	r3, .L688
 15506 0aba FFF7FEFF 		bl	__aeabi_ddiv
 15507 0abe 0346     		mov	r3, r0
 15508 0ac0 0C46     		mov	r4, r1
 15509 0ac2 07F11800 		add	r0, r7, #24
 15510 0ac6 1A46     		mov	r2, r3
 15511 0ac8 2346     		mov	r3, r4
 15512 0aca 9749     		ldr	r1, .L688+4
 15513 0acc FFF7FEFF 		bl	sprintf
2052:..\src/command_processing.c ****                 strcat(info_string, str);
 15514              		.loc 1 2052 0
 15515 0ad0 07F11803 		add	r3, r7, #24
 15516 0ad4 1946     		mov	r1, r3
 15517 0ad6 7869     		ldr	r0, [r7, #20]
 15518 0ad8 FFF7FEFF 		bl	strcat
2053:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 349


 15519              		.loc 1 2053 0
 15520 0adc D7F88030 		ldr	r3, [r7, #128]
 15521 0ae0 1B69     		ldr	r3, [r3, #16]
 15522 0ae2 1846     		mov	r0, r3
 15523 0ae4 FFF7FEFF 		bl	__aeabi_i2d
 15524 0ae8 4FF00002 		mov	r2, #0
 15525 0aec 8D4B     		ldr	r3, .L688
 15526 0aee FFF7FEFF 		bl	__aeabi_ddiv
 15527 0af2 0346     		mov	r3, r0
 15528 0af4 0C46     		mov	r4, r1
 15529 0af6 07F11800 		add	r0, r7, #24
 15530 0afa 1A46     		mov	r2, r3
 15531 0afc 2346     		mov	r3, r4
 15532 0afe 8B49     		ldr	r1, .L688+8
 15533 0b00 FFF7FEFF 		bl	sprintf
2054:..\src/command_processing.c ****                 strcat(info_string, str);
 15534              		.loc 1 2054 0
 15535 0b04 07F11803 		add	r3, r7, #24
 15536 0b08 1946     		mov	r1, r3
 15537 0b0a 7869     		ldr	r0, [r7, #20]
 15538 0b0c FFF7FEFF 		bl	strcat
2055:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 15539              		.loc 1 2055 0
 15540 0b10 D7F88030 		ldr	r3, [r7, #128]
 15541 0b14 5B69     		ldr	r3, [r3, #20]
 15542 0b16 1846     		mov	r0, r3
 15543 0b18 FFF7FEFF 		bl	__aeabi_i2d
 15544 0b1c 4FF00002 		mov	r2, #0
 15545 0b20 804B     		ldr	r3, .L688
 15546 0b22 FFF7FEFF 		bl	__aeabi_ddiv
 15547 0b26 0346     		mov	r3, r0
 15548 0b28 0C46     		mov	r4, r1
 15549 0b2a 07F11800 		add	r0, r7, #24
 15550 0b2e 1A46     		mov	r2, r3
 15551 0b30 2346     		mov	r3, r4
 15552 0b32 7F49     		ldr	r1, .L688+12
 15553 0b34 FFF7FEFF 		bl	sprintf
2056:..\src/command_processing.c ****                 strcat(info_string, str);
 15554              		.loc 1 2056 0
 15555 0b38 07F11803 		add	r3, r7, #24
 15556 0b3c 1946     		mov	r1, r3
 15557 0b3e 7869     		ldr	r0, [r7, #20]
 15558 0b40 FFF7FEFF 		bl	strcat
 15559 0b44 4DE0     		b	.L598
 15560              	.L597:
2057:..\src/command_processing.c **** 
2058:..\src/command_processing.c ****             }
2059:..\src/command_processing.c ****             else {
2060:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 15561              		.loc 1 2060 0
 15562 0b46 D7F88030 		ldr	r3, [r7, #128]
 15563 0b4a 5B6A     		ldr	r3, [r3, #36]
 15564 0b4c 1846     		mov	r0, r3
 15565 0b4e FFF7FEFF 		bl	__aeabi_i2d
 15566 0b52 4FF00002 		mov	r2, #0
 15567 0b56 734B     		ldr	r3, .L688
 15568 0b58 FFF7FEFF 		bl	__aeabi_ddiv
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 350


 15569 0b5c 0346     		mov	r3, r0
 15570 0b5e 0C46     		mov	r4, r1
 15571 0b60 07F11800 		add	r0, r7, #24
 15572 0b64 1A46     		mov	r2, r3
 15573 0b66 2346     		mov	r3, r4
 15574 0b68 6F49     		ldr	r1, .L688+4
 15575 0b6a FFF7FEFF 		bl	sprintf
2061:..\src/command_processing.c ****                 strcat(info_string, str);
 15576              		.loc 1 2061 0
 15577 0b6e 07F11803 		add	r3, r7, #24
 15578 0b72 1946     		mov	r1, r3
 15579 0b74 7869     		ldr	r0, [r7, #20]
 15580 0b76 FFF7FEFF 		bl	strcat
2062:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 15581              		.loc 1 2062 0
 15582 0b7a D7F88030 		ldr	r3, [r7, #128]
 15583 0b7e 9B6A     		ldr	r3, [r3, #40]
 15584 0b80 1846     		mov	r0, r3
 15585 0b82 FFF7FEFF 		bl	__aeabi_i2d
 15586 0b86 4FF00002 		mov	r2, #0
 15587 0b8a 664B     		ldr	r3, .L688
 15588 0b8c FFF7FEFF 		bl	__aeabi_ddiv
 15589 0b90 0346     		mov	r3, r0
 15590 0b92 0C46     		mov	r4, r1
 15591 0b94 07F11800 		add	r0, r7, #24
 15592 0b98 1A46     		mov	r2, r3
 15593 0b9a 2346     		mov	r3, r4
 15594 0b9c 6349     		ldr	r1, .L688+8
 15595 0b9e FFF7FEFF 		bl	sprintf
2063:..\src/command_processing.c ****                 strcat(info_string, str);
 15596              		.loc 1 2063 0
 15597 0ba2 07F11803 		add	r3, r7, #24
 15598 0ba6 1946     		mov	r1, r3
 15599 0ba8 7869     		ldr	r0, [r7, #20]
 15600 0baa FFF7FEFF 		bl	strcat
2064:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 15601              		.loc 1 2064 0
 15602 0bae D7F88030 		ldr	r3, [r7, #128]
 15603 0bb2 DB6A     		ldr	r3, [r3, #44]
 15604 0bb4 1846     		mov	r0, r3
 15605 0bb6 FFF7FEFF 		bl	__aeabi_i2d
 15606 0bba 4FF00002 		mov	r2, #0
 15607 0bbe 594B     		ldr	r3, .L688
 15608 0bc0 FFF7FEFF 		bl	__aeabi_ddiv
 15609 0bc4 0346     		mov	r3, r0
 15610 0bc6 0C46     		mov	r4, r1
 15611 0bc8 07F11800 		add	r0, r7, #24
 15612 0bcc 1A46     		mov	r2, r3
 15613 0bce 2346     		mov	r3, r4
 15614 0bd0 5749     		ldr	r1, .L688+12
 15615 0bd2 FFF7FEFF 		bl	sprintf
2065:..\src/command_processing.c ****                 strcat(info_string, str);
 15616              		.loc 1 2065 0
 15617 0bd6 07F11803 		add	r3, r7, #24
 15618 0bda 1946     		mov	r1, r3
 15619 0bdc 7869     		ldr	r0, [r7, #20]
 15620 0bde FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 351


 15621              	.L598:
2066:..\src/command_processing.c ****             }
2067:..\src/command_processing.c ****             if (MOT->activ == 0x01)
 15622              		.loc 1 2067 0
 15623 0be2 D7F88030 		ldr	r3, [r7, #128]
 15624 0be6 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 15625 0bea 012B     		cmp	r3, #1
 15626 0bec 14D1     		bne	.L599
2068:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: YES\r\n");
 15627              		.loc 1 2068 0
 15628 0bee 7869     		ldr	r0, [r7, #20]
 15629 0bf0 FFF7FEFF 		bl	strlen
 15630 0bf4 0346     		mov	r3, r0
 15631 0bf6 1A46     		mov	r2, r3
 15632 0bf8 7B69     		ldr	r3, [r7, #20]
 15633 0bfa 1344     		add	r3, r3, r2
 15634 0bfc 4E4A     		ldr	r2, .L688+20
 15635 0bfe 1D46     		mov	r5, r3
 15636 0c00 1446     		mov	r4, r2
 15637 0c02 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15638 0c04 2860     		str	r0, [r5]	@ unaligned
 15639 0c06 6960     		str	r1, [r5, #4]	@ unaligned
 15640 0c08 AA60     		str	r2, [r5, #8]	@ unaligned
 15641 0c0a EB60     		str	r3, [r5, #12]	@ unaligned
 15642 0c0c 03CC     		ldmia	r4!, {r0, r1}
 15643 0c0e 2861     		str	r0, [r5, #16]	@ unaligned
 15644 0c10 6961     		str	r1, [r5, #20]	@ unaligned
 15645 0c12 2388     		ldrh	r3, [r4]	@ unaligned
 15646 0c14 2B83     		strh	r3, [r5, #24]	@ unaligned
 15647 0c16 13E0     		b	.L600
 15648              	.L599:
2069:..\src/command_processing.c ****             else
2070:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: NO\r\n");
 15649              		.loc 1 2070 0
 15650 0c18 7869     		ldr	r0, [r7, #20]
 15651 0c1a FFF7FEFF 		bl	strlen
 15652 0c1e 0346     		mov	r3, r0
 15653 0c20 1A46     		mov	r2, r3
 15654 0c22 7B69     		ldr	r3, [r7, #20]
 15655 0c24 1344     		add	r3, r3, r2
 15656 0c26 454A     		ldr	r2, .L688+24
 15657 0c28 1D46     		mov	r5, r3
 15658 0c2a 1446     		mov	r4, r2
 15659 0c2c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15660 0c2e 2860     		str	r0, [r5]	@ unaligned
 15661 0c30 6960     		str	r1, [r5, #4]	@ unaligned
 15662 0c32 AA60     		str	r2, [r5, #8]	@ unaligned
 15663 0c34 EB60     		str	r3, [r5, #12]	@ unaligned
 15664 0c36 03CC     		ldmia	r4!, {r0, r1}
 15665 0c38 2861     		str	r0, [r5, #16]	@ unaligned
 15666 0c3a 6961     		str	r1, [r5, #20]	@ unaligned
 15667 0c3c 2378     		ldrb	r3, [r4]
 15668 0c3e 2B76     		strb	r3, [r5, #24]
 15669              	.L600:
2071:..\src/command_processing.c **** 
2072:..\src/command_processing.c ****             switch(MOT->input_mode) {
 15670              		.loc 1 2072 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 352


 15671 0c40 D7F88030 		ldr	r3, [r7, #128]
 15672 0c44 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 15673 0c48 072B     		cmp	r3, #7
 15674 0c4a 00F2EA80 		bhi	.L601
 15675 0c4e 01A2     		adr	r2, .L603
 15676 0c50 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 15677              		.p2align 2
 15678              	.L603:
 15679 0c54 750C0000 		.word	.L602+1
 15680 0c58 990C0000 		.word	.L604+1
 15681 0c5c C10C0000 		.word	.L605+1
 15682 0c60 F30C0000 		.word	.L606+1
 15683 0c64 510D0000 		.word	.L607+1
 15684 0c68 7F0D0000 		.word	.L608+1
 15685 0c6c AF0D0000 		.word	.L609+1
 15686 0c70 DD0D0000 		.word	.L610+1
 15687              		.p2align 1
 15688              	.L602:
2073:..\src/command_processing.c ****                 case INPUT_MODE_EXTERNAL:
2074:..\src/command_processing.c ****                     strcat(info_string, "Input mode: USB\r\n");
 15689              		.loc 1 2074 0
 15690 0c74 7869     		ldr	r0, [r7, #20]
 15691 0c76 FFF7FEFF 		bl	strlen
 15692 0c7a 0346     		mov	r3, r0
 15693 0c7c 1A46     		mov	r2, r3
 15694 0c7e 7B69     		ldr	r3, [r7, #20]
 15695 0c80 1344     		add	r3, r3, r2
 15696 0c82 2F4A     		ldr	r2, .L688+28
 15697 0c84 1D46     		mov	r5, r3
 15698 0c86 1446     		mov	r4, r2
 15699 0c88 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15700 0c8a 2860     		str	r0, [r5]	@ unaligned
 15701 0c8c 6960     		str	r1, [r5, #4]	@ unaligned
 15702 0c8e AA60     		str	r2, [r5, #8]	@ unaligned
 15703 0c90 EB60     		str	r3, [r5, #12]	@ unaligned
 15704 0c92 2388     		ldrh	r3, [r4]	@ unaligned
 15705 0c94 2B82     		strh	r3, [r5, #16]	@ unaligned
2075:..\src/command_processing.c ****                     break;
 15706              		.loc 1 2075 0
 15707 0c96 C4E0     		b	.L601
 15708              	.L604:
2076:..\src/command_processing.c ****                 case INPUT_MODE_ENCODER3:
2077:..\src/command_processing.c ****                     strcat(info_string, "Input mode: Handle\r\n");
 15709              		.loc 1 2077 0
 15710 0c98 7869     		ldr	r0, [r7, #20]
 15711 0c9a FFF7FEFF 		bl	strlen
 15712 0c9e 0346     		mov	r3, r0
 15713 0ca0 1A46     		mov	r2, r3
 15714 0ca2 7B69     		ldr	r3, [r7, #20]
 15715 0ca4 1344     		add	r3, r3, r2
 15716 0ca6 274A     		ldr	r2, .L688+32
 15717 0ca8 1D46     		mov	r5, r3
 15718 0caa 1446     		mov	r4, r2
 15719 0cac 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15720 0cae 2860     		str	r0, [r5]	@ unaligned
 15721 0cb0 6960     		str	r1, [r5, #4]	@ unaligned
 15722 0cb2 AA60     		str	r2, [r5, #8]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 353


 15723 0cb4 EB60     		str	r3, [r5, #12]	@ unaligned
 15724 0cb6 2068     		ldr	r0, [r4]	@ unaligned
 15725 0cb8 2861     		str	r0, [r5, #16]	@ unaligned
 15726 0cba 2379     		ldrb	r3, [r4, #4]
 15727 0cbc 2B75     		strb	r3, [r5, #20]
2078:..\src/command_processing.c ****                     break;
 15728              		.loc 1 2078 0
 15729 0cbe B0E0     		b	.L601
 15730              	.L605:
2079:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL:
2080:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional\r\n");
 15731              		.loc 1 2080 0
 15732 0cc0 7869     		ldr	r0, [r7, #20]
 15733 0cc2 FFF7FEFF 		bl	strlen
 15734 0cc6 0346     		mov	r3, r0
 15735 0cc8 1A46     		mov	r2, r3
 15736 0cca 7B69     		ldr	r3, [r7, #20]
 15737 0ccc 1344     		add	r3, r3, r2
 15738 0cce 1E4A     		ldr	r2, .L688+36
 15739 0cd0 1D46     		mov	r5, r3
 15740 0cd2 1446     		mov	r4, r2
 15741 0cd4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15742 0cd6 2860     		str	r0, [r5]	@ unaligned
 15743 0cd8 6960     		str	r1, [r5, #4]	@ unaligned
 15744 0cda AA60     		str	r2, [r5, #8]	@ unaligned
 15745 0cdc EB60     		str	r3, [r5, #12]	@ unaligned
 15746 0cde 07CC     		ldmia	r4!, {r0, r1, r2}
 15747 0ce0 2861     		str	r0, [r5, #16]	@ unaligned
 15748 0ce2 6961     		str	r1, [r5, #20]	@ unaligned
 15749 0ce4 AA61     		str	r2, [r5, #24]	@ unaligned
 15750 0ce6 2388     		ldrh	r3, [r4]	@ unaligned
 15751 0ce8 A278     		ldrb	r2, [r4, #2]
 15752 0cea AB83     		strh	r3, [r5, #28]	@ unaligned
 15753 0cec 1346     		mov	r3, r2
 15754 0cee AB77     		strb	r3, [r5, #30]
2081:..\src/command_processing.c ****                     break;
 15755              		.loc 1 2081 0
 15756 0cf0 97E0     		b	.L601
 15757              	.L606:
2082:..\src/command_processing.c ****                 case INPUT_MODE_EMG_INTEGRAL:
2083:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG integral\r\n");
 15758              		.loc 1 2083 0
 15759 0cf2 7869     		ldr	r0, [r7, #20]
 15760 0cf4 FFF7FEFF 		bl	strlen
 15761 0cf8 0346     		mov	r3, r0
 15762 0cfa 1A46     		mov	r2, r3
 15763 0cfc 7B69     		ldr	r3, [r7, #20]
 15764 0cfe 1344     		add	r3, r3, r2
 15765 0d00 124A     		ldr	r2, .L688+40
 15766 0d02 1D46     		mov	r5, r3
 15767 0d04 1446     		mov	r4, r2
 15768 0d06 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15769 0d08 2860     		str	r0, [r5]	@ unaligned
 15770 0d0a 6960     		str	r1, [r5, #4]	@ unaligned
 15771 0d0c AA60     		str	r2, [r5, #8]	@ unaligned
 15772 0d0e EB60     		str	r3, [r5, #12]	@ unaligned
 15773 0d10 03CC     		ldmia	r4!, {r0, r1}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 354


 15774 0d12 2861     		str	r0, [r5, #16]	@ unaligned
 15775 0d14 6961     		str	r1, [r5, #20]	@ unaligned
 15776 0d16 2388     		ldrh	r3, [r4]	@ unaligned
 15777 0d18 A278     		ldrb	r2, [r4, #2]
 15778 0d1a 2B83     		strh	r3, [r5, #24]	@ unaligned
 15779 0d1c 1346     		mov	r3, r2
 15780 0d1e AB76     		strb	r3, [r5, #26]
2084:..\src/command_processing.c ****                     break;
 15781              		.loc 1 2084 0
 15782 0d20 7FE0     		b	.L601
 15783              	.L689:
 15784 0d22 00BF     		.align	2
 15785              	.L688:
 15786 0d24 0000F040 		.word	1089470464
 15787 0d28 44140000 		.word	.LC191
 15788 0d2c 50140000 		.word	.LC192
 15789 0d30 5C140000 		.word	.LC193
 15790 0d34 68140000 		.word	.LC194
 15791 0d38 84140000 		.word	.LC195
 15792 0d3c A0140000 		.word	.LC196
 15793 0d40 BC140000 		.word	.LC197
 15794 0d44 D0140000 		.word	.LC198
 15795 0d48 E8140000 		.word	.LC199
 15796 0d4c 08150000 		.word	.LC200
 15797              	.L607:
2085:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS:
2086:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS\r\n");
 15798              		.loc 1 2086 0
 15799 0d50 7869     		ldr	r0, [r7, #20]
 15800 0d52 FFF7FEFF 		bl	strlen
 15801 0d56 0346     		mov	r3, r0
 15802 0d58 1A46     		mov	r2, r3
 15803 0d5a 7B69     		ldr	r3, [r7, #20]
 15804 0d5c 1344     		add	r3, r3, r2
 15805 0d5e A44A     		ldr	r2, .L690
 15806 0d60 1C46     		mov	r4, r3
 15807 0d62 1546     		mov	r5, r2
 15808 0d64 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15809 0d66 2060     		str	r0, [r4]	@ unaligned
 15810 0d68 6160     		str	r1, [r4, #4]	@ unaligned
 15811 0d6a A260     		str	r2, [r4, #8]	@ unaligned
 15812 0d6c E360     		str	r3, [r4, #12]	@ unaligned
 15813 0d6e 2868     		ldr	r0, [r5]	@ unaligned
 15814 0d70 2061     		str	r0, [r4, #16]	@ unaligned
 15815 0d72 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 15816 0d74 AA79     		ldrb	r2, [r5, #6]
 15817 0d76 A382     		strh	r3, [r4, #20]	@ unaligned
 15818 0d78 1346     		mov	r3, r2
 15819 0d7a A375     		strb	r3, [r4, #22]
2087:..\src/command_processing.c ****                     break;
 15820              		.loc 1 2087 0
 15821 0d7c 51E0     		b	.L601
 15822              	.L608:
2088:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS_ADV:
2089:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 15823              		.loc 1 2089 0
 15824 0d7e 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 355


 15825 0d80 FFF7FEFF 		bl	strlen
 15826 0d84 0346     		mov	r3, r0
 15827 0d86 1A46     		mov	r2, r3
 15828 0d88 7B69     		ldr	r3, [r7, #20]
 15829 0d8a 1344     		add	r3, r3, r2
 15830 0d8c 994A     		ldr	r2, .L690+4
 15831 0d8e 1D46     		mov	r5, r3
 15832 0d90 1446     		mov	r4, r2
 15833 0d92 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15834 0d94 2860     		str	r0, [r5]	@ unaligned
 15835 0d96 6960     		str	r1, [r5, #4]	@ unaligned
 15836 0d98 AA60     		str	r2, [r5, #8]	@ unaligned
 15837 0d9a EB60     		str	r3, [r5, #12]	@ unaligned
 15838 0d9c 03CC     		ldmia	r4!, {r0, r1}
 15839 0d9e 2861     		str	r0, [r5, #16]	@ unaligned
 15840 0da0 6961     		str	r1, [r5, #20]	@ unaligned
 15841 0da2 2388     		ldrh	r3, [r4]	@ unaligned
 15842 0da4 A278     		ldrb	r2, [r4, #2]
 15843 0da6 2B83     		strh	r3, [r5, #24]	@ unaligned
 15844 0da8 1346     		mov	r3, r2
 15845 0daa AB76     		strb	r3, [r5, #26]
2090:..\src/command_processing.c ****                     break;
 15846              		.loc 1 2090 0
 15847 0dac 39E0     		b	.L601
 15848              	.L609:
2091:..\src/command_processing.c ****                 case INPUT_MODE_JOYSTICK:
2092:..\src/command_processing.c ****                     strcat(info_string, "Input mode: Joystick\r\n");
 15849              		.loc 1 2092 0
 15850 0dae 7869     		ldr	r0, [r7, #20]
 15851 0db0 FFF7FEFF 		bl	strlen
 15852 0db4 0346     		mov	r3, r0
 15853 0db6 1A46     		mov	r2, r3
 15854 0db8 7B69     		ldr	r3, [r7, #20]
 15855 0dba 1344     		add	r3, r3, r2
 15856 0dbc 8E4A     		ldr	r2, .L690+8
 15857 0dbe 1C46     		mov	r4, r3
 15858 0dc0 1546     		mov	r5, r2
 15859 0dc2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15860 0dc4 2060     		str	r0, [r4]	@ unaligned
 15861 0dc6 6160     		str	r1, [r4, #4]	@ unaligned
 15862 0dc8 A260     		str	r2, [r4, #8]	@ unaligned
 15863 0dca E360     		str	r3, [r4, #12]	@ unaligned
 15864 0dcc 2868     		ldr	r0, [r5]	@ unaligned
 15865 0dce 2061     		str	r0, [r4, #16]	@ unaligned
 15866 0dd0 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 15867 0dd2 AA79     		ldrb	r2, [r5, #6]
 15868 0dd4 A382     		strh	r3, [r4, #20]	@ unaligned
 15869 0dd6 1346     		mov	r3, r2
 15870 0dd8 A375     		strb	r3, [r4, #22]
2093:..\src/command_processing.c ****                     break;
 15871              		.loc 1 2093 0
 15872 0dda 22E0     		b	.L601
 15873              	.L610:
2094:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL_NC:
2095:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 15874              		.loc 1 2095 0
 15875 0ddc 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 356


 15876 0dde FFF7FEFF 		bl	strlen
 15877 0de2 0346     		mov	r3, r0
 15878 0de4 1A46     		mov	r2, r3
 15879 0de6 7B69     		ldr	r3, [r7, #20]
 15880 0de8 1344     		add	r3, r3, r2
 15881 0dea 844A     		ldr	r2, .L690+12
 15882 0dec 1546     		mov	r5, r2
 15883 0dee 9E46     		mov	lr, r3
 15884 0df0 05F1200C 		add	ip, r5, #32
 15885              	.L611:
 15886 0df4 7446     		mov	r4, lr
 15887 0df6 2E46     		mov	r6, r5
 15888 0df8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15889 0dfa 2060     		str	r0, [r4]	@ unaligned
 15890 0dfc 6160     		str	r1, [r4, #4]	@ unaligned
 15891 0dfe A260     		str	r2, [r4, #8]	@ unaligned
 15892 0e00 E360     		str	r3, [r4, #12]	@ unaligned
 15893 0e02 1035     		adds	r5, r5, #16
 15894 0e04 0EF1100E 		add	lr, lr, #16
 15895 0e08 6545     		cmp	r5, ip
 15896 0e0a F3D1     		bne	.L611
 15897 0e0c 7446     		mov	r4, lr
 15898 0e0e 2B46     		mov	r3, r5
 15899 0e10 07CB     		ldmia	r3!, {r0, r1, r2}
 15900 0e12 2060     		str	r0, [r4]	@ unaligned
 15901 0e14 6160     		str	r1, [r4, #4]	@ unaligned
 15902 0e16 A260     		str	r2, [r4, #8]	@ unaligned
 15903 0e18 1A88     		ldrh	r2, [r3]	@ unaligned
 15904 0e1a 9B78     		ldrb	r3, [r3, #2]
 15905 0e1c A281     		strh	r2, [r4, #12]	@ unaligned
 15906 0e1e A373     		strb	r3, [r4, #14]
2096:..\src/command_processing.c ****                     break;
 15907              		.loc 1 2096 0
 15908 0e20 00BF     		nop
 15909              	.L601:
2097:..\src/command_processing.c ****             }
2098:..\src/command_processing.c **** 
2099:..\src/command_processing.c ****             switch(MOT->control_mode) {
 15910              		.loc 1 2099 0
 15911 0e22 D7F88030 		ldr	r3, [r7, #128]
 15912 0e26 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 15913 0e2a 032B     		cmp	r3, #3
 15914 0e2c 63D8     		bhi	.L681
 15915 0e2e 01A2     		adr	r2, .L614
 15916 0e30 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 15917              		.p2align 2
 15918              	.L614:
 15919 0e34 450E0000 		.word	.L613+1
 15920 0e38 6F0E0000 		.word	.L615+1
 15921 0e3c 930E0000 		.word	.L616+1
 15922 0e40 B90E0000 		.word	.L617+1
 15923              		.p2align 1
 15924              	.L613:
2100:..\src/command_processing.c ****                 case CONTROL_ANGLE:
2101:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position\r\n");
 15925              		.loc 1 2101 0
 15926 0e44 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 357


 15927 0e46 FFF7FEFF 		bl	strlen
 15928 0e4a 0346     		mov	r3, r0
 15929 0e4c 1A46     		mov	r2, r3
 15930 0e4e 7B69     		ldr	r3, [r7, #20]
 15931 0e50 1344     		add	r3, r3, r2
 15932 0e52 6B4A     		ldr	r2, .L690+16
 15933 0e54 1D46     		mov	r5, r3
 15934 0e56 1446     		mov	r4, r2
 15935 0e58 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15936 0e5a 2860     		str	r0, [r5]	@ unaligned
 15937 0e5c 6960     		str	r1, [r5, #4]	@ unaligned
 15938 0e5e AA60     		str	r2, [r5, #8]	@ unaligned
 15939 0e60 EB60     		str	r3, [r5, #12]	@ unaligned
 15940 0e62 03CC     		ldmia	r4!, {r0, r1}
 15941 0e64 2861     		str	r0, [r5, #16]	@ unaligned
 15942 0e66 6961     		str	r1, [r5, #20]	@ unaligned
 15943 0e68 2378     		ldrb	r3, [r4]
 15944 0e6a 2B76     		strb	r3, [r5, #24]
2102:..\src/command_processing.c ****                     break;
 15945              		.loc 1 2102 0
 15946 0e6c 44E0     		b	.L618
 15947              	.L615:
2103:..\src/command_processing.c ****                 case CONTROL_PWM:
2104:..\src/command_processing.c ****                     strcat(info_string, "Control mode: PWM\r\n");
 15948              		.loc 1 2104 0
 15949 0e6e 7869     		ldr	r0, [r7, #20]
 15950 0e70 FFF7FEFF 		bl	strlen
 15951 0e74 0346     		mov	r3, r0
 15952 0e76 1A46     		mov	r2, r3
 15953 0e78 7B69     		ldr	r3, [r7, #20]
 15954 0e7a 1344     		add	r3, r3, r2
 15955 0e7c 614A     		ldr	r2, .L690+20
 15956 0e7e 1D46     		mov	r5, r3
 15957 0e80 1446     		mov	r4, r2
 15958 0e82 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15959 0e84 2860     		str	r0, [r5]	@ unaligned
 15960 0e86 6960     		str	r1, [r5, #4]	@ unaligned
 15961 0e88 AA60     		str	r2, [r5, #8]	@ unaligned
 15962 0e8a EB60     		str	r3, [r5, #12]	@ unaligned
 15963 0e8c 2068     		ldr	r0, [r4]	@ unaligned
 15964 0e8e 2861     		str	r0, [r5, #16]	@ unaligned
2105:..\src/command_processing.c ****                     break;
 15965              		.loc 1 2105 0
 15966 0e90 32E0     		b	.L618
 15967              	.L616:
2106:..\src/command_processing.c ****                 case CONTROL_CURRENT:
2107:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Current\r\n");
 15968              		.loc 1 2107 0
 15969 0e92 7869     		ldr	r0, [r7, #20]
 15970 0e94 FFF7FEFF 		bl	strlen
 15971 0e98 0346     		mov	r3, r0
 15972 0e9a 1A46     		mov	r2, r3
 15973 0e9c 7B69     		ldr	r3, [r7, #20]
 15974 0e9e 1344     		add	r3, r3, r2
 15975 0ea0 594A     		ldr	r2, .L690+24
 15976 0ea2 1D46     		mov	r5, r3
 15977 0ea4 1446     		mov	r4, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 358


 15978 0ea6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15979 0ea8 2860     		str	r0, [r5]	@ unaligned
 15980 0eaa 6960     		str	r1, [r5, #4]	@ unaligned
 15981 0eac AA60     		str	r2, [r5, #8]	@ unaligned
 15982 0eae EB60     		str	r3, [r5, #12]	@ unaligned
 15983 0eb0 03CC     		ldmia	r4!, {r0, r1}
 15984 0eb2 2861     		str	r0, [r5, #16]	@ unaligned
 15985 0eb4 6961     		str	r1, [r5, #20]	@ unaligned
2108:..\src/command_processing.c ****                     break;
 15986              		.loc 1 2108 0
 15987 0eb6 1FE0     		b	.L618
 15988              	.L617:
2109:..\src/command_processing.c ****                 case CURR_AND_POS_CONTROL:
2110:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position and Current\r\n");
 15989              		.loc 1 2110 0
 15990 0eb8 7869     		ldr	r0, [r7, #20]
 15991 0eba FFF7FEFF 		bl	strlen
 15992 0ebe 0346     		mov	r3, r0
 15993 0ec0 1A46     		mov	r2, r3
 15994 0ec2 7B69     		ldr	r3, [r7, #20]
 15995 0ec4 1344     		add	r3, r3, r2
 15996 0ec6 514A     		ldr	r2, .L690+28
 15997 0ec8 1446     		mov	r4, r2
 15998 0eca 9E46     		mov	lr, r3
 15999 0ecc 04F1200C 		add	ip, r4, #32
 16000              	.L619:
 16001 0ed0 7546     		mov	r5, lr
 16002 0ed2 2646     		mov	r6, r4
 16003 0ed4 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16004 0ed6 2860     		str	r0, [r5]	@ unaligned
 16005 0ed8 6960     		str	r1, [r5, #4]	@ unaligned
 16006 0eda AA60     		str	r2, [r5, #8]	@ unaligned
 16007 0edc EB60     		str	r3, [r5, #12]	@ unaligned
 16008 0ede 1034     		adds	r4, r4, #16
 16009 0ee0 0EF1100E 		add	lr, lr, #16
 16010 0ee4 6445     		cmp	r4, ip
 16011 0ee6 F3D1     		bne	.L619
 16012 0ee8 7346     		mov	r3, lr
 16013 0eea 2246     		mov	r2, r4
 16014 0eec 1068     		ldr	r0, [r2]	@ unaligned
 16015 0eee 1860     		str	r0, [r3]	@ unaligned
 16016 0ef0 1279     		ldrb	r2, [r2, #4]
 16017 0ef2 1A71     		strb	r2, [r3, #4]
2111:..\src/command_processing.c ****                     break;
 16018              		.loc 1 2111 0
 16019 0ef4 00E0     		b	.L618
 16020              	.L681:
2112:..\src/command_processing.c ****                 default:
2113:..\src/command_processing.c ****                     break;
 16021              		.loc 1 2113 0
 16022 0ef6 00BF     		nop
 16023              	.L618:
2114:..\src/command_processing.c ****             }
2115:..\src/command_processing.c **** 
2116:..\src/command_processing.c ****             if (MEM_P->enc[ENC_L].double_encoder_on_off)
 16024              		.loc 1 2116 0
 16025 0ef8 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 359


 16026 0efc D7F88810 		ldr	r1, [r7, #136]
 16027 0f00 1346     		mov	r3, r2
 16028 0f02 5B00     		lsls	r3, r3, #1
 16029 0f04 1344     		add	r3, r3, r2
 16030 0f06 1B01     		lsls	r3, r3, #4
 16031 0f08 0B44     		add	r3, r3, r1
 16032 0f0a 03F5D873 		add	r3, r3, #432
 16033 0f0e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16034 0f10 002B     		cmp	r3, #0
 16035 0f12 1CD0     		beq	.L620
2117:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: YES\r\n");
 16036              		.loc 1 2117 0
 16037 0f14 7869     		ldr	r0, [r7, #20]
 16038 0f16 FFF7FEFF 		bl	strlen
 16039 0f1a 0346     		mov	r3, r0
 16040 0f1c 1A46     		mov	r2, r3
 16041 0f1e 7B69     		ldr	r3, [r7, #20]
 16042 0f20 1344     		add	r3, r3, r2
 16043 0f22 3B4A     		ldr	r2, .L690+32
 16044 0f24 1446     		mov	r4, r2
 16045 0f26 9E46     		mov	lr, r3
 16046 0f28 04F1200C 		add	ip, r4, #32
 16047              	.L621:
 16048 0f2c 7546     		mov	r5, lr
 16049 0f2e 2646     		mov	r6, r4
 16050 0f30 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16051 0f32 2860     		str	r0, [r5]	@ unaligned
 16052 0f34 6960     		str	r1, [r5, #4]	@ unaligned
 16053 0f36 AA60     		str	r2, [r5, #8]	@ unaligned
 16054 0f38 EB60     		str	r3, [r5, #12]	@ unaligned
 16055 0f3a 1034     		adds	r4, r4, #16
 16056 0f3c 0EF1100E 		add	lr, lr, #16
 16057 0f40 6445     		cmp	r4, ip
 16058 0f42 F3D1     		bne	.L621
 16059 0f44 7346     		mov	r3, lr
 16060 0f46 2246     		mov	r2, r4
 16061 0f48 1278     		ldrb	r2, [r2]
 16062 0f4a 1A70     		strb	r2, [r3]
 16063 0f4c 13E0     		b	.L622
 16064              	.L620:
2118:..\src/command_processing.c ****             else
2119:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: NO\r\n");
 16065              		.loc 1 2119 0
 16066 0f4e 7869     		ldr	r0, [r7, #20]
 16067 0f50 FFF7FEFF 		bl	strlen
 16068 0f54 0346     		mov	r3, r0
 16069 0f56 1A46     		mov	r2, r3
 16070 0f58 7B69     		ldr	r3, [r7, #20]
 16071 0f5a 1344     		add	r3, r3, r2
 16072 0f5c 2D4A     		ldr	r2, .L690+36
 16073 0f5e 1C46     		mov	r4, r3
 16074 0f60 1546     		mov	r5, r2
 16075 0f62 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16076 0f64 2060     		str	r0, [r4]	@ unaligned
 16077 0f66 6160     		str	r1, [r4, #4]	@ unaligned
 16078 0f68 A260     		str	r2, [r4, #8]	@ unaligned
 16079 0f6a E360     		str	r3, [r4, #12]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 360


 16080 0f6c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16081 0f6e 2061     		str	r0, [r4, #16]	@ unaligned
 16082 0f70 6161     		str	r1, [r4, #20]	@ unaligned
 16083 0f72 A261     		str	r2, [r4, #24]	@ unaligned
 16084 0f74 E361     		str	r3, [r4, #28]	@ unaligned
 16085              	.L622:
2120:..\src/command_processing.c **** 
2121:..\src/command_processing.c ****             sprintf(str, "Motor-Handle Ratio: %d\r\n", (int)MEM_P->enc[ENC_L].motor_handle_ratio);
 16086              		.loc 1 2121 0
 16087 0f76 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16088 0f7a D7F88810 		ldr	r1, [r7, #136]
 16089 0f7e 1346     		mov	r3, r2
 16090 0f80 5B00     		lsls	r3, r3, #1
 16091 0f82 1344     		add	r3, r3, r2
 16092 0f84 1B01     		lsls	r3, r3, #4
 16093 0f86 0B44     		add	r3, r3, r1
 16094 0f88 03F5DA73 		add	r3, r3, #436
 16095 0f8c 93F90030 		ldrsb	r3, [r3]
 16096 0f90 1A46     		mov	r2, r3
 16097 0f92 07F11803 		add	r3, r7, #24
 16098 0f96 2049     		ldr	r1, .L690+40
 16099 0f98 1846     		mov	r0, r3
 16100 0f9a FFF7FEFF 		bl	sprintf
2122:..\src/command_processing.c ****             strcat(info_string, str);
 16101              		.loc 1 2122 0
 16102 0f9e 07F11803 		add	r3, r7, #24
 16103 0fa2 1946     		mov	r1, r3
 16104 0fa4 7869     		ldr	r0, [r7, #20]
 16105 0fa6 FFF7FEFF 		bl	strcat
2123:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
2124:..\src/command_processing.c ****             strcat(info_string, "Encoder indices used for motor control: ");
 16106              		.loc 1 2124 0
 16107 0faa 7869     		ldr	r0, [r7, #20]
 16108 0fac FFF7FEFF 		bl	strlen
 16109 0fb0 0346     		mov	r3, r0
 16110 0fb2 1A46     		mov	r2, r3
 16111 0fb4 7B69     		ldr	r3, [r7, #20]
 16112 0fb6 1344     		add	r3, r3, r2
 16113 0fb8 184A     		ldr	r2, .L690+44
 16114 0fba 1446     		mov	r4, r2
 16115 0fbc 9E46     		mov	lr, r3
 16116 0fbe 04F1200C 		add	ip, r4, #32
 16117              	.L623:
 16118 0fc2 7546     		mov	r5, lr
 16119 0fc4 2646     		mov	r6, r4
 16120 0fc6 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16121 0fc8 2860     		str	r0, [r5]	@ unaligned
 16122 0fca 6960     		str	r1, [r5, #4]	@ unaligned
 16123 0fcc AA60     		str	r2, [r5, #8]	@ unaligned
 16124 0fce EB60     		str	r3, [r5, #12]	@ unaligned
 16125 0fd0 1034     		adds	r4, r4, #16
 16126 0fd2 0EF1100E 		add	lr, lr, #16
 16127 0fd6 6445     		cmp	r4, ip
 16128 0fd8 F3D1     		bne	.L623
 16129 0fda 7246     		mov	r2, lr
 16130 0fdc 2346     		mov	r3, r4
 16131 0fde 03CB     		ldmia	r3!, {r0, r1}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 361


 16132 0fe0 1060     		str	r0, [r2]	@ unaligned
 16133 0fe2 5160     		str	r1, [r2, #4]	@ unaligned
 16134 0fe4 1B78     		ldrb	r3, [r3]
 16135 0fe6 1372     		strb	r3, [r2, #8]
2125:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16136              		.loc 1 2125 0
 16137 0fe8 0023     		movs	r3, #0
 16138 0fea C7F89430 		str	r3, [r7, #148]
 16139 0fee 48E0     		b	.L624
 16140              	.L691:
 16141              		.align	2
 16142              	.L690:
 16143 0ff0 24150000 		.word	.LC201
 16144 0ff4 3C150000 		.word	.LC202
 16145 0ff8 58150000 		.word	.LC203
 16146 0ffc 70150000 		.word	.LC204
 16147 1000 A0150000 		.word	.LC205
 16148 1004 BC150000 		.word	.LC206
 16149 1008 D0150000 		.word	.LC207
 16150 100c E8150000 		.word	.LC208
 16151 1010 10160000 		.word	.LC209
 16152 1014 34160000 		.word	.LC210
 16153 1018 54160000 		.word	.LC211
 16154 101c 70160000 		.word	.LC212
 16155              	.L626:
2126:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
 16156              		.loc 1 2126 0
 16157 1020 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16158 1024 D7F88810 		ldr	r1, [r7, #136]
 16159 1028 1346     		mov	r3, r2
 16160 102a 5B00     		lsls	r3, r3, #1
 16161 102c 1344     		add	r3, r3, r2
 16162 102e 1B01     		lsls	r3, r3, #4
 16163 1030 CA18     		adds	r2, r1, r3
 16164 1032 D7F89430 		ldr	r3, [r7, #148]
 16165 1036 1344     		add	r3, r3, r2
 16166 1038 03F2B113 		addw	r3, r3, #433
 16167 103c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16168 103e 1A46     		mov	r2, r3
 16169 1040 07F11803 		add	r3, r7, #24
 16170 1044 AE49     		ldr	r1, .L692
 16171 1046 1846     		mov	r0, r3
 16172 1048 FFF7FEFF 		bl	sprintf
2127:..\src/command_processing.c ****                 strcat(info_string, str);
 16173              		.loc 1 2127 0
 16174 104c 07F11803 		add	r3, r7, #24
 16175 1050 1946     		mov	r1, r3
 16176 1052 7869     		ldr	r0, [r7, #20]
 16177 1054 FFF7FEFF 		bl	strcat
2128:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 16178              		.loc 1 2128 0
 16179 1058 D7F89430 		ldr	r3, [r7, #148]
 16180 105c 022B     		cmp	r3, #2
 16181 105e 0BD0     		beq	.L625
2129:..\src/command_processing.c ****                     strcat(info_string, ", ");
 16182              		.loc 1 2129 0
 16183 1060 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 362


 16184 1062 FFF7FEFF 		bl	strlen
 16185 1066 0346     		mov	r3, r0
 16186 1068 1A46     		mov	r2, r3
 16187 106a 7B69     		ldr	r3, [r7, #20]
 16188 106c 1344     		add	r3, r3, r2
 16189 106e A54A     		ldr	r2, .L692+4
 16190 1070 1188     		ldrh	r1, [r2]	@ unaligned
 16191 1072 9278     		ldrb	r2, [r2, #2]
 16192 1074 1980     		strh	r1, [r3]	@ unaligned
 16193 1076 9A70     		strb	r2, [r3, #2]
 16194              	.L625:
2125:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
 16195              		.loc 1 2125 0 discriminator 2
 16196 1078 D7F89430 		ldr	r3, [r7, #148]
 16197 107c 0133     		adds	r3, r3, #1
 16198 107e C7F89430 		str	r3, [r7, #148]
 16199              	.L624:
2125:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
 16200              		.loc 1 2125 0 is_stmt 0 discriminator 1
 16201 1082 D7F89430 		ldr	r3, [r7, #148]
 16202 1086 022B     		cmp	r3, #2
 16203 1088 CADD     		ble	.L626
2130:..\src/command_processing.c ****                 }                
2131:..\src/command_processing.c ****             }
2132:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16204              		.loc 1 2132 0 is_stmt 1
 16205 108a 7869     		ldr	r0, [r7, #20]
 16206 108c FFF7FEFF 		bl	strlen
 16207 1090 0346     		mov	r3, r0
 16208 1092 1A46     		mov	r2, r3
 16209 1094 7B69     		ldr	r3, [r7, #20]
 16210 1096 1344     		add	r3, r3, r2
 16211 1098 9B4A     		ldr	r2, .L692+8
 16212 109a 1188     		ldrh	r1, [r2]	@ unaligned
 16213 109c 9278     		ldrb	r2, [r2, #2]
 16214 109e 1980     		strh	r1, [r3]	@ unaligned
 16215 10a0 9A70     		strb	r2, [r3, #2]
2133:..\src/command_processing.c ****             sprintf(str, "First Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[0]);
 16216              		.loc 1 2133 0
 16217 10a2 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16218 10a6 D7F88810 		ldr	r1, [r7, #136]
 16219 10aa 1346     		mov	r3, r2
 16220 10ac 5B00     		lsls	r3, r3, #1
 16221 10ae 1344     		add	r3, r3, r2
 16222 10b0 1B01     		lsls	r3, r3, #4
 16223 10b2 0B44     		add	r3, r3, r1
 16224 10b4 03F2B513 		addw	r3, r3, #437
 16225 10b8 93F90030 		ldrsb	r3, [r3]
 16226 10bc 1A46     		mov	r2, r3
 16227 10be 07F11803 		add	r3, r7, #24
 16228 10c2 9249     		ldr	r1, .L692+12
 16229 10c4 1846     		mov	r0, r3
 16230 10c6 FFF7FEFF 		bl	sprintf
2134:..\src/command_processing.c ****             strcat(info_string, str);
 16231              		.loc 1 2134 0
 16232 10ca 07F11803 		add	r3, r7, #24
 16233 10ce 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 363


 16234 10d0 7869     		ldr	r0, [r7, #20]
 16235 10d2 FFF7FEFF 		bl	strcat
2135:..\src/command_processing.c ****             sprintf(str, "Second Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[1]);
 16236              		.loc 1 2135 0
 16237 10d6 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16238 10da D7F88810 		ldr	r1, [r7, #136]
 16239 10de 1346     		mov	r3, r2
 16240 10e0 5B00     		lsls	r3, r3, #1
 16241 10e2 1344     		add	r3, r3, r2
 16242 10e4 1B01     		lsls	r3, r3, #4
 16243 10e6 0B44     		add	r3, r3, r1
 16244 10e8 03F5DB73 		add	r3, r3, #438
 16245 10ec 93F90030 		ldrsb	r3, [r3]
 16246 10f0 1A46     		mov	r2, r3
 16247 10f2 07F11803 		add	r3, r7, #24
 16248 10f6 8649     		ldr	r1, .L692+16
 16249 10f8 1846     		mov	r0, r3
 16250 10fa FFF7FEFF 		bl	sprintf
2136:..\src/command_processing.c ****             strcat(info_string, str);
 16251              		.loc 1 2136 0
 16252 10fe 07F11803 		add	r3, r7, #24
 16253 1102 1946     		mov	r1, r3
 16254 1104 7869     		ldr	r0, [r7, #20]
 16255 1106 FFF7FEFF 		bl	strcat
2137:..\src/command_processing.c ****             sprintf(str, "Gear invariant: %d\r\n", (int)MEM_P->enc[ENC_L].gears_params[2]);
 16256              		.loc 1 2137 0
 16257 110a 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16258 110e D7F88810 		ldr	r1, [r7, #136]
 16259 1112 1346     		mov	r3, r2
 16260 1114 5B00     		lsls	r3, r3, #1
 16261 1116 1344     		add	r3, r3, r2
 16262 1118 1B01     		lsls	r3, r3, #4
 16263 111a 0B44     		add	r3, r3, r1
 16264 111c 03F2B713 		addw	r3, r3, #439
 16265 1120 93F90030 		ldrsb	r3, [r3]
 16266 1124 1A46     		mov	r2, r3
 16267 1126 07F11803 		add	r3, r7, #24
 16268 112a 7A49     		ldr	r1, .L692+20
 16269 112c 1846     		mov	r0, r3
 16270 112e FFF7FEFF 		bl	sprintf
2138:..\src/command_processing.c ****             strcat(info_string, str);
 16271              		.loc 1 2138 0
 16272 1132 07F11803 		add	r3, r7, #24
 16273 1136 1946     		mov	r1, r3
 16274 1138 7869     		ldr	r0, [r7, #20]
 16275 113a FFF7FEFF 		bl	strcat
2139:..\src/command_processing.c **** #endif            
2140:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16276              		.loc 1 2140 0
 16277 113e 7869     		ldr	r0, [r7, #20]
 16278 1140 FFF7FEFF 		bl	strlen
 16279 1144 0346     		mov	r3, r0
 16280 1146 1A46     		mov	r2, r3
 16281 1148 7B69     		ldr	r3, [r7, #20]
 16282 114a 1344     		add	r3, r3, r2
 16283 114c 6E4A     		ldr	r2, .L692+8
 16284 114e 1188     		ldrh	r1, [r2]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 364


 16285 1150 9278     		ldrb	r2, [r2, #2]
 16286 1152 1980     		strh	r1, [r3]	@ unaligned
 16287 1154 9A70     		strb	r2, [r3, #2]
2141:..\src/command_processing.c **** 
2142:..\src/command_processing.c ****             strcat(info_string, "Sensor resolution: ");
 16288              		.loc 1 2142 0
 16289 1156 7869     		ldr	r0, [r7, #20]
 16290 1158 FFF7FEFF 		bl	strlen
 16291 115c 0346     		mov	r3, r0
 16292 115e 1A46     		mov	r2, r3
 16293 1160 7B69     		ldr	r3, [r7, #20]
 16294 1162 1344     		add	r3, r3, r2
 16295 1164 6C4A     		ldr	r2, .L692+24
 16296 1166 1D46     		mov	r5, r3
 16297 1168 1446     		mov	r4, r2
 16298 116a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16299 116c 2860     		str	r0, [r5]	@ unaligned
 16300 116e 6960     		str	r1, [r5, #4]	@ unaligned
 16301 1170 AA60     		str	r2, [r5, #8]	@ unaligned
 16302 1172 EB60     		str	r3, [r5, #12]	@ unaligned
 16303 1174 2068     		ldr	r0, [r4]	@ unaligned
 16304 1176 2861     		str	r0, [r5, #16]	@ unaligned
2143:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16305              		.loc 1 2143 0
 16306 1178 0023     		movs	r3, #0
 16307 117a C7F89430 		str	r3, [r7, #148]
 16308 117e 30E0     		b	.L627
 16309              	.L629:
2144:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16310              		.loc 1 2144 0
 16311 1180 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16312 1184 D7F88810 		ldr	r1, [r7, #136]
 16313 1188 1346     		mov	r3, r2
 16314 118a 5B00     		lsls	r3, r3, #1
 16315 118c 1344     		add	r3, r3, r2
 16316 118e 1B01     		lsls	r3, r3, #4
 16317 1190 CA18     		adds	r2, r1, r3
 16318 1192 D7F89430 		ldr	r3, [r7, #148]
 16319 1196 1344     		add	r3, r3, r2
 16320 1198 03F29513 		addw	r3, r3, #405
 16321 119c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16322 119e 1A46     		mov	r2, r3
 16323 11a0 07F11803 		add	r3, r7, #24
 16324 11a4 5649     		ldr	r1, .L692
 16325 11a6 1846     		mov	r0, r3
 16326 11a8 FFF7FEFF 		bl	sprintf
2145:..\src/command_processing.c ****                 strcat(info_string, str);
 16327              		.loc 1 2145 0
 16328 11ac 07F11803 		add	r3, r7, #24
 16329 11b0 1946     		mov	r1, r3
 16330 11b2 7869     		ldr	r0, [r7, #20]
 16331 11b4 FFF7FEFF 		bl	strcat
2146:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 16332              		.loc 1 2146 0
 16333 11b8 D7F89430 		ldr	r3, [r7, #148]
 16334 11bc 022B     		cmp	r3, #2
 16335 11be 0BD0     		beq	.L628
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 365


2147:..\src/command_processing.c ****                     strcat(info_string, ", ");
 16336              		.loc 1 2147 0
 16337 11c0 7869     		ldr	r0, [r7, #20]
 16338 11c2 FFF7FEFF 		bl	strlen
 16339 11c6 0346     		mov	r3, r0
 16340 11c8 1A46     		mov	r2, r3
 16341 11ca 7B69     		ldr	r3, [r7, #20]
 16342 11cc 1344     		add	r3, r3, r2
 16343 11ce 4D4A     		ldr	r2, .L692+4
 16344 11d0 1188     		ldrh	r1, [r2]	@ unaligned
 16345 11d2 9278     		ldrb	r2, [r2, #2]
 16346 11d4 1980     		strh	r1, [r3]	@ unaligned
 16347 11d6 9A70     		strb	r2, [r3, #2]
 16348              	.L628:
2143:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16349              		.loc 1 2143 0 discriminator 2
 16350 11d8 D7F89430 		ldr	r3, [r7, #148]
 16351 11dc 0133     		adds	r3, r3, #1
 16352 11de C7F89430 		str	r3, [r7, #148]
 16353              	.L627:
2143:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16354              		.loc 1 2143 0 is_stmt 0 discriminator 1
 16355 11e2 D7F89430 		ldr	r3, [r7, #148]
 16356 11e6 022B     		cmp	r3, #2
 16357 11e8 CADD     		ble	.L629
2148:..\src/command_processing.c ****                 }                
2149:..\src/command_processing.c ****             }
2150:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16358              		.loc 1 2150 0 is_stmt 1
 16359 11ea 7869     		ldr	r0, [r7, #20]
 16360 11ec FFF7FEFF 		bl	strlen
 16361 11f0 0346     		mov	r3, r0
 16362 11f2 1A46     		mov	r2, r3
 16363 11f4 7B69     		ldr	r3, [r7, #20]
 16364 11f6 1344     		add	r3, r3, r2
 16365 11f8 434A     		ldr	r2, .L692+8
 16366 11fa 1188     		ldrh	r1, [r2]	@ unaligned
 16367 11fc 9278     		ldrb	r2, [r2, #2]
 16368 11fe 1980     		strh	r1, [r3]	@ unaligned
 16369 1200 9A70     		strb	r2, [r3, #2]
2151:..\src/command_processing.c **** 
2152:..\src/command_processing.c ****             strcat(info_string, "Measurement Offset: ");
 16370              		.loc 1 2152 0
 16371 1202 7869     		ldr	r0, [r7, #20]
 16372 1204 FFF7FEFF 		bl	strlen
 16373 1208 0346     		mov	r3, r0
 16374 120a 1A46     		mov	r2, r3
 16375 120c 7B69     		ldr	r3, [r7, #20]
 16376 120e 1344     		add	r3, r3, r2
 16377 1210 424A     		ldr	r2, .L692+28
 16378 1212 1D46     		mov	r5, r3
 16379 1214 1446     		mov	r4, r2
 16380 1216 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16381 1218 2860     		str	r0, [r5]	@ unaligned
 16382 121a 6960     		str	r1, [r5, #4]	@ unaligned
 16383 121c AA60     		str	r2, [r5, #8]	@ unaligned
 16384 121e EB60     		str	r3, [r5, #12]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 366


 16385 1220 2068     		ldr	r0, [r4]	@ unaligned
 16386 1222 2861     		str	r0, [r5, #16]	@ unaligned
 16387 1224 2379     		ldrb	r3, [r4, #4]
 16388 1226 2B75     		strb	r3, [r5, #20]
2153:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16389              		.loc 1 2153 0
 16390 1228 0023     		movs	r3, #0
 16391 122a C7F89430 		str	r3, [r7, #148]
 16392 122e 3FE0     		b	.L630
 16393              	.L632:
2154:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 16394              		.loc 1 2154 0
 16395 1230 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16396 1234 D7F88810 		ldr	r1, [r7, #136]
 16397 1238 1346     		mov	r3, r2
 16398 123a 5B00     		lsls	r3, r3, #1
 16399 123c 1344     		add	r3, r3, r2
 16400 123e 9B00     		lsls	r3, r3, #2
 16401 1240 D7F89420 		ldr	r2, [r7, #148]
 16402 1244 1344     		add	r3, r3, r2
 16403 1246 6633     		adds	r3, r3, #102
 16404 1248 51F82310 		ldr	r1, [r1, r3, lsl #2]
 16405 124c 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16406 1250 D7F88800 		ldr	r0, [r7, #136]
 16407 1254 1346     		mov	r3, r2
 16408 1256 5B00     		lsls	r3, r3, #1
 16409 1258 1344     		add	r3, r3, r2
 16410 125a 1B01     		lsls	r3, r3, #4
 16411 125c C218     		adds	r2, r0, r3
 16412 125e D7F89430 		ldr	r3, [r7, #148]
 16413 1262 1344     		add	r3, r3, r2
 16414 1264 03F29513 		addw	r3, r3, #405
 16415 1268 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16416 126a 41FA03F2 		asr	r2, r1, r3
 16417 126e 07F11803 		add	r3, r7, #24
 16418 1272 2B49     		ldr	r1, .L692+32
 16419 1274 1846     		mov	r0, r3
 16420 1276 FFF7FEFF 		bl	sprintf
2155:..\src/command_processing.c ****                 strcat(info_string, str);
 16421              		.loc 1 2155 0
 16422 127a 07F11803 		add	r3, r7, #24
 16423 127e 1946     		mov	r1, r3
 16424 1280 7869     		ldr	r0, [r7, #20]
 16425 1282 FFF7FEFF 		bl	strcat
2156:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 16426              		.loc 1 2156 0
 16427 1286 D7F89430 		ldr	r3, [r7, #148]
 16428 128a 022B     		cmp	r3, #2
 16429 128c 0BD0     		beq	.L631
2157:..\src/command_processing.c ****                     strcat(info_string, ", ");
 16430              		.loc 1 2157 0
 16431 128e 7869     		ldr	r0, [r7, #20]
 16432 1290 FFF7FEFF 		bl	strlen
 16433 1294 0346     		mov	r3, r0
 16434 1296 1A46     		mov	r2, r3
 16435 1298 7B69     		ldr	r3, [r7, #20]
 16436 129a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 367


 16437 129c 194A     		ldr	r2, .L692+4
 16438 129e 1188     		ldrh	r1, [r2]	@ unaligned
 16439 12a0 9278     		ldrb	r2, [r2, #2]
 16440 12a2 1980     		strh	r1, [r3]	@ unaligned
 16441 12a4 9A70     		strb	r2, [r3, #2]
 16442              	.L631:
2153:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 16443              		.loc 1 2153 0 discriminator 2
 16444 12a6 D7F89430 		ldr	r3, [r7, #148]
 16445 12aa 0133     		adds	r3, r3, #1
 16446 12ac C7F89430 		str	r3, [r7, #148]
 16447              	.L630:
2153:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 16448              		.loc 1 2153 0 is_stmt 0 discriminator 1
 16449 12b0 D7F89430 		ldr	r3, [r7, #148]
 16450 12b4 022B     		cmp	r3, #2
 16451 12b6 BBDD     		ble	.L632
2158:..\src/command_processing.c ****                 }
2159:..\src/command_processing.c ****             }
2160:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16452              		.loc 1 2160 0 is_stmt 1
 16453 12b8 7869     		ldr	r0, [r7, #20]
 16454 12ba FFF7FEFF 		bl	strlen
 16455 12be 0346     		mov	r3, r0
 16456 12c0 1A46     		mov	r2, r3
 16457 12c2 7B69     		ldr	r3, [r7, #20]
 16458 12c4 1344     		add	r3, r3, r2
 16459 12c6 104A     		ldr	r2, .L692+8
 16460 12c8 1188     		ldrh	r1, [r2]	@ unaligned
 16461 12ca 9278     		ldrb	r2, [r2, #2]
 16462 12cc 1980     		strh	r1, [r3]	@ unaligned
 16463 12ce 9A70     		strb	r2, [r3, #2]
2161:..\src/command_processing.c ****                 
2162:..\src/command_processing.c ****             strcat(info_string, "Measurement Multiplier: ");
 16464              		.loc 1 2162 0
 16465 12d0 7869     		ldr	r0, [r7, #20]
 16466 12d2 FFF7FEFF 		bl	strlen
 16467 12d6 0346     		mov	r3, r0
 16468 12d8 1A46     		mov	r2, r3
 16469 12da 7B69     		ldr	r3, [r7, #20]
 16470 12dc 1344     		add	r3, r3, r2
 16471 12de 114A     		ldr	r2, .L692+36
 16472 12e0 1D46     		mov	r5, r3
 16473 12e2 1446     		mov	r4, r2
 16474 12e4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16475 12e6 2860     		str	r0, [r5]	@ unaligned
 16476 12e8 6960     		str	r1, [r5, #4]	@ unaligned
 16477 12ea AA60     		str	r2, [r5, #8]	@ unaligned
 16478 12ec EB60     		str	r3, [r5, #12]	@ unaligned
 16479 12ee 03CC     		ldmia	r4!, {r0, r1}
 16480 12f0 2861     		str	r0, [r5, #16]	@ unaligned
 16481 12f2 6961     		str	r1, [r5, #20]	@ unaligned
 16482 12f4 2378     		ldrb	r3, [r4]
 16483 12f6 2B76     		strb	r3, [r5, #24]
2163:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16484              		.loc 1 2163 0
 16485 12f8 0023     		movs	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 368


 16486 12fa C7F89430 		str	r3, [r7, #148]
 16487 12fe 49E0     		b	.L633
 16488              	.L693:
 16489              		.align	2
 16490              	.L692:
 16491 1300 64130000 		.word	.LC182
 16492 1304 68130000 		.word	.LC183
 16493 1308 30110000 		.word	.LC151
 16494 130c 9C160000 		.word	.LC213
 16495 1310 B4160000 		.word	.LC214
 16496 1314 CC160000 		.word	.LC215
 16497 1318 E4160000 		.word	.LC216
 16498 131c F8160000 		.word	.LC217
 16499 1320 10170000 		.word	.LC218
 16500 1324 14170000 		.word	.LC219
 16501              	.L635:
2164:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16502              		.loc 1 2164 0
 16503 1328 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16504 132c D7F88810 		ldr	r1, [r7, #136]
 16505 1330 1346     		mov	r3, r2
 16506 1332 5B00     		lsls	r3, r3, #1
 16507 1334 1344     		add	r3, r3, r2
 16508 1336 9B00     		lsls	r3, r3, #2
 16509 1338 D7F89420 		ldr	r2, [r7, #148]
 16510 133c 1344     		add	r3, r3, r2
 16511 133e 6833     		adds	r3, r3, #104
 16512 1340 9B00     		lsls	r3, r3, #2
 16513 1342 0B44     		add	r3, r3, r1
 16514 1344 5B68     		ldr	r3, [r3, #4]	@ float
 16515 1346 1846     		mov	r0, r3
 16516 1348 FFF7FEFF 		bl	__aeabi_f2d
 16517 134c 0346     		mov	r3, r0
 16518 134e 0C46     		mov	r4, r1
 16519 1350 07F11800 		add	r0, r7, #24
 16520 1354 1A46     		mov	r2, r3
 16521 1356 2346     		mov	r3, r4
 16522 1358 BD49     		ldr	r1, .L694
 16523 135a FFF7FEFF 		bl	sprintf
2165:..\src/command_processing.c ****                 strcat(info_string, str);
 16524              		.loc 1 2165 0
 16525 135e 07F11803 		add	r3, r7, #24
 16526 1362 1946     		mov	r1, r3
 16527 1364 7869     		ldr	r0, [r7, #20]
 16528 1366 FFF7FEFF 		bl	strcat
2166:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 16529              		.loc 1 2166 0
 16530 136a D7F89430 		ldr	r3, [r7, #148]
 16531 136e 022B     		cmp	r3, #2
 16532 1370 0BD0     		beq	.L634
2167:..\src/command_processing.c ****                     strcat(info_string, ", ");
 16533              		.loc 1 2167 0
 16534 1372 7869     		ldr	r0, [r7, #20]
 16535 1374 FFF7FEFF 		bl	strlen
 16536 1378 0346     		mov	r3, r0
 16537 137a 1A46     		mov	r2, r3
 16538 137c 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 369


 16539 137e 1344     		add	r3, r3, r2
 16540 1380 B44A     		ldr	r2, .L694+4
 16541 1382 1188     		ldrh	r1, [r2]	@ unaligned
 16542 1384 9278     		ldrb	r2, [r2, #2]
 16543 1386 1980     		strh	r1, [r3]	@ unaligned
 16544 1388 9A70     		strb	r2, [r3, #2]
 16545              	.L634:
2163:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16546              		.loc 1 2163 0 discriminator 2
 16547 138a D7F89430 		ldr	r3, [r7, #148]
 16548 138e 0133     		adds	r3, r3, #1
 16549 1390 C7F89430 		str	r3, [r7, #148]
 16550              	.L633:
2163:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16551              		.loc 1 2163 0 is_stmt 0 discriminator 1
 16552 1394 D7F89430 		ldr	r3, [r7, #148]
 16553 1398 022B     		cmp	r3, #2
 16554 139a C5DD     		ble	.L635
2168:..\src/command_processing.c ****                 }
2169:..\src/command_processing.c ****             }
2170:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16555              		.loc 1 2170 0 is_stmt 1
 16556 139c 7869     		ldr	r0, [r7, #20]
 16557 139e FFF7FEFF 		bl	strlen
 16558 13a2 0346     		mov	r3, r0
 16559 13a4 1A46     		mov	r2, r3
 16560 13a6 7B69     		ldr	r3, [r7, #20]
 16561 13a8 1344     		add	r3, r3, r2
 16562 13aa AB4A     		ldr	r2, .L694+8
 16563 13ac 1188     		ldrh	r1, [r2]	@ unaligned
 16564 13ae 9278     		ldrb	r2, [r2, #2]
 16565 13b0 1980     		strh	r1, [r3]	@ unaligned
 16566 13b2 9A70     		strb	r2, [r3, #2]
2171:..\src/command_processing.c ****             
2172:..\src/command_processing.c ****     		sprintf(str, "Current lookup table: %f, %f, %f, %f, %f, %f\r\n", 
2173:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16567              		.loc 1 2173 0
 16568 13b4 D7F88030 		ldr	r3, [r7, #128]
 16569 13b8 5B6C     		ldr	r3, [r3, #68]	@ float
2172:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16570              		.loc 1 2172 0
 16571 13ba 1846     		mov	r0, r3
 16572 13bc FFF7FEFF 		bl	__aeabi_f2d
 16573 13c0 C7E90201 		strd	r0, [r7, #8]
 16574              		.loc 1 2173 0
 16575 13c4 D7F88030 		ldr	r3, [r7, #128]
 16576 13c8 9B6C     		ldr	r3, [r3, #72]	@ float
2172:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16577              		.loc 1 2172 0
 16578 13ca 1846     		mov	r0, r3
 16579 13cc FFF7FEFF 		bl	__aeabi_f2d
 16580 13d0 0446     		mov	r4, r0
 16581 13d2 0D46     		mov	r5, r1
 16582              		.loc 1 2173 0
 16583 13d4 D7F88030 		ldr	r3, [r7, #128]
 16584 13d8 DB6C     		ldr	r3, [r3, #76]	@ float
2172:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 370


 16585              		.loc 1 2172 0
 16586 13da 1846     		mov	r0, r3
 16587 13dc FFF7FEFF 		bl	__aeabi_f2d
 16588 13e0 8046     		mov	r8, r0
 16589 13e2 8946     		mov	r9, r1
2174:..\src/command_processing.c ****                 MOT->curr_lookup[3], MOT->curr_lookup[4], MOT->curr_lookup[5]);
 16590              		.loc 1 2174 0
 16591 13e4 D7F88030 		ldr	r3, [r7, #128]
 16592 13e8 1B6D     		ldr	r3, [r3, #80]	@ float
2172:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16593              		.loc 1 2172 0
 16594 13ea 1846     		mov	r0, r3
 16595 13ec FFF7FEFF 		bl	__aeabi_f2d
 16596 13f0 8246     		mov	r10, r0
 16597 13f2 8B46     		mov	fp, r1
 16598              		.loc 1 2174 0
 16599 13f4 D7F88030 		ldr	r3, [r7, #128]
 16600 13f8 5B6D     		ldr	r3, [r3, #84]	@ float
2172:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16601              		.loc 1 2172 0
 16602 13fa 1846     		mov	r0, r3
 16603 13fc FFF7FEFF 		bl	__aeabi_f2d
 16604 1400 C7E90001 		strd	r0, [r7]
 16605              		.loc 1 2174 0
 16606 1404 D7F88030 		ldr	r3, [r7, #128]
 16607 1408 9B6D     		ldr	r3, [r3, #88]	@ float
2172:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16608              		.loc 1 2172 0
 16609 140a 1846     		mov	r0, r3
 16610 140c FFF7FEFF 		bl	__aeabi_f2d
 16611 1410 0246     		mov	r2, r0
 16612 1412 0B46     		mov	r3, r1
 16613 1414 07F11800 		add	r0, r7, #24
 16614 1418 CDE90823 		strd	r2, [sp, #32]
 16615 141c D7E90012 		ldrd	r1, [r7]
 16616 1420 CDE90612 		strd	r1, [sp, #24]
 16617 1424 CDE904AB 		strd	r10, [sp, #16]
 16618 1428 CDE90289 		strd	r8, [sp, #8]
 16619 142c CDE90045 		strd	r4, [sp]
 16620 1430 D7E90223 		ldrd	r2, [r7, #8]
 16621 1434 8949     		ldr	r1, .L694+12
 16622 1436 FFF7FEFF 		bl	sprintf
2175:..\src/command_processing.c **** 		    strcat(info_string, str);       
 16623              		.loc 1 2175 0
 16624 143a 07F11803 		add	r3, r7, #24
 16625 143e 1946     		mov	r1, r3
 16626 1440 7869     		ldr	r0, [r7, #20]
 16627 1442 FFF7FEFF 		bl	strcat
2176:..\src/command_processing.c **** 
2177:..\src/command_processing.c ****             sprintf(str, "Position limit active: %d", (int)MOT->pos_lim_flag);
 16628              		.loc 1 2177 0
 16629 1446 D7F88030 		ldr	r3, [r7, #128]
 16630 144a 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 16631 144e 1A46     		mov	r2, r3
 16632 1450 07F11803 		add	r3, r7, #24
 16633 1454 8249     		ldr	r1, .L694+16
 16634 1456 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 371


 16635 1458 FFF7FEFF 		bl	sprintf
2178:..\src/command_processing.c ****             strcat(info_string, str);
 16636              		.loc 1 2178 0
 16637 145c 07F11803 		add	r3, r7, #24
 16638 1460 1946     		mov	r1, r3
 16639 1462 7869     		ldr	r0, [r7, #20]
 16640 1464 FFF7FEFF 		bl	strcat
2179:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16641              		.loc 1 2179 0
 16642 1468 7869     		ldr	r0, [r7, #20]
 16643 146a FFF7FEFF 		bl	strlen
 16644 146e 0346     		mov	r3, r0
 16645 1470 1A46     		mov	r2, r3
 16646 1472 7B69     		ldr	r3, [r7, #20]
 16647 1474 1344     		add	r3, r3, r2
 16648 1476 784A     		ldr	r2, .L694+8
 16649 1478 1188     		ldrh	r1, [r2]	@ unaligned
 16650 147a 9278     		ldrb	r2, [r2, #2]
 16651 147c 1980     		strh	r1, [r3]	@ unaligned
 16652 147e 9A70     		strb	r2, [r3, #2]
2180:..\src/command_processing.c **** 
2181:..\src/command_processing.c ****             sprintf(str, "Position limit motor: inf -> %ld  ", (int32)MOT->pos_lim_inf >> MEM_P->en
 16653              		.loc 1 2181 0
 16654 1480 D7F88030 		ldr	r3, [r7, #128]
 16655 1484 596B     		ldr	r1, [r3, #52]
 16656 1486 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16657 148a D7F88800 		ldr	r0, [r7, #136]
 16658 148e 1346     		mov	r3, r2
 16659 1490 5B00     		lsls	r3, r3, #1
 16660 1492 1344     		add	r3, r3, r2
 16661 1494 1B01     		lsls	r3, r3, #4
 16662 1496 0344     		add	r3, r3, r0
 16663 1498 03F29513 		addw	r3, r3, #405
 16664 149c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16665 149e 41FA03F2 		asr	r2, r1, r3
 16666 14a2 07F11803 		add	r3, r7, #24
 16667 14a6 6F49     		ldr	r1, .L694+20
 16668 14a8 1846     		mov	r0, r3
 16669 14aa FFF7FEFF 		bl	sprintf
2182:..\src/command_processing.c ****             strcat(info_string, str);
 16670              		.loc 1 2182 0
 16671 14ae 07F11803 		add	r3, r7, #24
 16672 14b2 1946     		mov	r1, r3
 16673 14b4 7869     		ldr	r0, [r7, #20]
 16674 14b6 FFF7FEFF 		bl	strcat
2183:..\src/command_processing.c ****             sprintf(str, "sup -> %ld\r\n", (int32)MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]);
 16675              		.loc 1 2183 0
 16676 14ba D7F88030 		ldr	r3, [r7, #128]
 16677 14be 996B     		ldr	r1, [r3, #56]
 16678 14c0 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16679 14c4 D7F88800 		ldr	r0, [r7, #136]
 16680 14c8 1346     		mov	r3, r2
 16681 14ca 5B00     		lsls	r3, r3, #1
 16682 14cc 1344     		add	r3, r3, r2
 16683 14ce 1B01     		lsls	r3, r3, #4
 16684 14d0 0344     		add	r3, r3, r0
 16685 14d2 03F29513 		addw	r3, r3, #405
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 372


 16686 14d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16687 14d8 41FA03F2 		asr	r2, r1, r3
 16688 14dc 07F11803 		add	r3, r7, #24
 16689 14e0 6149     		ldr	r1, .L694+24
 16690 14e2 1846     		mov	r0, r3
 16691 14e4 FFF7FEFF 		bl	sprintf
2184:..\src/command_processing.c ****             strcat(info_string, str);
 16692              		.loc 1 2184 0
 16693 14e8 07F11803 		add	r3, r7, #24
 16694 14ec 1946     		mov	r1, r3
 16695 14ee 7869     		ldr	r0, [r7, #20]
 16696 14f0 FFF7FEFF 		bl	strcat
2185:..\src/command_processing.c **** 
2186:..\src/command_processing.c ****             sprintf(str, "Max step pos and neg: %d %d", (int)MOT->max_step_pos, (int)MOT->max_step_
 16697              		.loc 1 2186 0
 16698 14f4 D7F88030 		ldr	r3, [r7, #128]
 16699 14f8 1A6C     		ldr	r2, [r3, #64]
 16700 14fa D7F88030 		ldr	r3, [r7, #128]
 16701 14fe DB6B     		ldr	r3, [r3, #60]
 16702 1500 07F11800 		add	r0, r7, #24
 16703 1504 5949     		ldr	r1, .L694+28
 16704 1506 FFF7FEFF 		bl	sprintf
2187:..\src/command_processing.c ****             strcat(info_string, str);
 16705              		.loc 1 2187 0
 16706 150a 07F11803 		add	r3, r7, #24
 16707 150e 1946     		mov	r1, r3
 16708 1510 7869     		ldr	r0, [r7, #20]
 16709 1512 FFF7FEFF 		bl	strcat
2188:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16710              		.loc 1 2188 0
 16711 1516 7869     		ldr	r0, [r7, #20]
 16712 1518 FFF7FEFF 		bl	strlen
 16713 151c 0346     		mov	r3, r0
 16714 151e 1A46     		mov	r2, r3
 16715 1520 7B69     		ldr	r3, [r7, #20]
 16716 1522 1344     		add	r3, r3, r2
 16717 1524 4C4A     		ldr	r2, .L694+8
 16718 1526 1188     		ldrh	r1, [r2]	@ unaligned
 16719 1528 9278     		ldrb	r2, [r2, #2]
 16720 152a 1980     		strh	r1, [r3]	@ unaligned
 16721 152c 9A70     		strb	r2, [r3, #2]
2189:..\src/command_processing.c **** 
2190:..\src/command_processing.c ****             sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 16722              		.loc 1 2190 0
 16723 152e D7F88030 		ldr	r3, [r7, #128]
 16724 1532 B3F95C30 		ldrsh	r3, [r3, #92]
 16725 1536 1A46     		mov	r2, r3
 16726 1538 07F11803 		add	r3, r7, #24
 16727 153c 4C49     		ldr	r1, .L694+32
 16728 153e 1846     		mov	r0, r3
 16729 1540 FFF7FEFF 		bl	sprintf
2191:..\src/command_processing.c ****             strcat(info_string, str);
 16730              		.loc 1 2191 0
 16731 1544 07F11803 		add	r3, r7, #24
 16732 1548 1946     		mov	r1, r3
 16733 154a 7869     		ldr	r0, [r7, #20]
 16734 154c FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 373


2192:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
2193:..\src/command_processing.c ****             sprintf(str, "Motor board associated encoder line: %d\r\n", (int)MOT->encoder_line);
 16735              		.loc 1 2193 0
 16736 1550 D7F88030 		ldr	r3, [r7, #128]
 16737 1554 93F86030 		ldrb	r3, [r3, #96]	@ zero_extendqisi2
 16738 1558 1A46     		mov	r2, r3
 16739 155a 07F11803 		add	r3, r7, #24
 16740 155e 4549     		ldr	r1, .L694+36
 16741 1560 1846     		mov	r0, r3
 16742 1562 FFF7FEFF 		bl	sprintf
2194:..\src/command_processing.c ****             strcat(info_string, str);
 16743              		.loc 1 2194 0
 16744 1566 07F11803 		add	r3, r7, #24
 16745 156a 1946     		mov	r1, r3
 16746 156c 7869     		ldr	r0, [r7, #20]
 16747 156e FFF7FEFF 		bl	strcat
2195:..\src/command_processing.c ****             switch(MOT->motor_driver_type) {
 16748              		.loc 1 2195 0
 16749 1572 D7F88030 		ldr	r3, [r7, #128]
 16750 1576 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 16751 157a 002B     		cmp	r3, #0
 16752 157c 02D0     		beq	.L637
 16753 157e 012B     		cmp	r3, #1
 16754 1580 1DD0     		beq	.L638
2196:..\src/command_processing.c ****                 case DRIVER_MC33887:
2197:..\src/command_processing.c ****                     strcat(info_string, "Driver type: MC33887 (Standard)\r\n");
2198:..\src/command_processing.c ****                     break;
2199:..\src/command_processing.c ****                 case DRIVER_VNH5019:
2200:..\src/command_processing.c ****                     strcat(info_string, "Driver type: VNH5019 (High power)\r\n");
2201:..\src/command_processing.c ****                     break;
2202:..\src/command_processing.c ****                 default:
2203:..\src/command_processing.c ****                     break;
 16755              		.loc 1 2203 0
 16756 1582 39E0     		b	.L640
 16757              	.L637:
2197:..\src/command_processing.c ****                     break;
 16758              		.loc 1 2197 0
 16759 1584 7869     		ldr	r0, [r7, #20]
 16760 1586 FFF7FEFF 		bl	strlen
 16761 158a 0346     		mov	r3, r0
 16762 158c 1A46     		mov	r2, r3
 16763 158e 7B69     		ldr	r3, [r7, #20]
 16764 1590 1344     		add	r3, r3, r2
 16765 1592 394A     		ldr	r2, .L694+40
 16766 1594 1446     		mov	r4, r2
 16767 1596 9E46     		mov	lr, r3
 16768 1598 04F1200C 		add	ip, r4, #32
 16769              	.L639:
 16770 159c 7546     		mov	r5, lr
 16771 159e 2646     		mov	r6, r4
 16772 15a0 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16773 15a2 2860     		str	r0, [r5]	@ unaligned
 16774 15a4 6960     		str	r1, [r5, #4]	@ unaligned
 16775 15a6 AA60     		str	r2, [r5, #8]	@ unaligned
 16776 15a8 EB60     		str	r3, [r5, #12]	@ unaligned
 16777 15aa 1034     		adds	r4, r4, #16
 16778 15ac 0EF1100E 		add	lr, lr, #16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 374


 16779 15b0 6445     		cmp	r4, ip
 16780 15b2 F3D1     		bne	.L639
 16781 15b4 7246     		mov	r2, lr
 16782 15b6 2346     		mov	r3, r4
 16783 15b8 1B88     		ldrh	r3, [r3]	@ unaligned
 16784 15ba 1380     		strh	r3, [r2]	@ unaligned
2198:..\src/command_processing.c ****                 case DRIVER_VNH5019:
 16785              		.loc 1 2198 0
 16786 15bc 1CE0     		b	.L640
 16787              	.L638:
2200:..\src/command_processing.c ****                     break;
 16788              		.loc 1 2200 0
 16789 15be 7869     		ldr	r0, [r7, #20]
 16790 15c0 FFF7FEFF 		bl	strlen
 16791 15c4 0346     		mov	r3, r0
 16792 15c6 1A46     		mov	r2, r3
 16793 15c8 7B69     		ldr	r3, [r7, #20]
 16794 15ca 1344     		add	r3, r3, r2
 16795 15cc 2B4A     		ldr	r2, .L694+44
 16796 15ce 1446     		mov	r4, r2
 16797 15d0 9E46     		mov	lr, r3
 16798 15d2 04F1200C 		add	ip, r4, #32
 16799              	.L641:
 16800 15d6 7546     		mov	r5, lr
 16801 15d8 2646     		mov	r6, r4
 16802 15da 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16803 15dc 2860     		str	r0, [r5]	@ unaligned
 16804 15de 6960     		str	r1, [r5, #4]	@ unaligned
 16805 15e0 AA60     		str	r2, [r5, #8]	@ unaligned
 16806 15e2 EB60     		str	r3, [r5, #12]	@ unaligned
 16807 15e4 1034     		adds	r4, r4, #16
 16808 15e6 0EF1100E 		add	lr, lr, #16
 16809 15ea 6445     		cmp	r4, ip
 16810 15ec F3D1     		bne	.L641
 16811 15ee 7346     		mov	r3, lr
 16812 15f0 2246     		mov	r2, r4
 16813 15f2 1068     		ldr	r0, [r2]	@ unaligned
 16814 15f4 1860     		str	r0, [r3]	@ unaligned
2201:..\src/command_processing.c ****                 default:
 16815              		.loc 1 2201 0
 16816 15f6 00BF     		nop
 16817              	.L640:
2204:..\src/command_processing.c ****             }
2205:..\src/command_processing.c ****             sprintf(str, "PWM rate limiter value: %d\r\n", (int)MOT->pwm_rate_limiter);
 16818              		.loc 1 2205 0
 16819 15f8 D7F88030 		ldr	r3, [r7, #128]
 16820 15fc 93F86130 		ldrb	r3, [r3, #97]	@ zero_extendqisi2
 16821 1600 1A46     		mov	r2, r3
 16822 1602 07F11803 		add	r3, r7, #24
 16823 1606 1E49     		ldr	r1, .L694+48
 16824 1608 1846     		mov	r0, r3
 16825 160a FFF7FEFF 		bl	sprintf
2206:..\src/command_processing.c ****             strcat(info_string, str);
 16826              		.loc 1 2206 0
 16827 160e 07F11803 		add	r3, r7, #24
 16828 1612 1946     		mov	r1, r3
 16829 1614 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 375


 16830 1616 FFF7FEFF 		bl	strcat
2207:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag)
 16831              		.loc 1 2207 0
 16832 161a D7F88030 		ldr	r3, [r7, #128]
 16833 161e 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 16834 1622 002B     		cmp	r3, #0
 16835 1624 30D0     		beq	.L642
2208:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: YES\r\n");
 16836              		.loc 1 2208 0
 16837 1626 7869     		ldr	r0, [r7, #20]
 16838 1628 FFF7FEFF 		bl	strlen
 16839 162c 0346     		mov	r3, r0
 16840 162e 1A46     		mov	r2, r3
 16841 1630 7B69     		ldr	r3, [r7, #20]
 16842 1632 1344     		add	r3, r3, r2
 16843 1634 134A     		ldr	r2, .L694+52
 16844 1636 1D46     		mov	r5, r3
 16845 1638 1446     		mov	r4, r2
 16846 163a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16847 163c 2860     		str	r0, [r5]	@ unaligned
 16848 163e 6960     		str	r1, [r5, #4]	@ unaligned
 16849 1640 AA60     		str	r2, [r5, #8]	@ unaligned
 16850 1642 EB60     		str	r3, [r5, #12]	@ unaligned
 16851 1644 07CC     		ldmia	r4!, {r0, r1, r2}
 16852 1646 2861     		str	r0, [r5, #16]	@ unaligned
 16853 1648 6961     		str	r1, [r5, #20]	@ unaligned
 16854 164a AA61     		str	r2, [r5, #24]	@ unaligned
 16855 164c 33E0     		b	.L643
 16856              	.L695:
 16857 164e 00BF     		.align	2
 16858              	.L694:
 16859 1650 30170000 		.word	.LC220
 16860 1654 68130000 		.word	.LC183
 16861 1658 30110000 		.word	.LC151
 16862 165c 34170000 		.word	.LC221
 16863 1660 64170000 		.word	.LC222
 16864 1664 80170000 		.word	.LC223
 16865 1668 A4170000 		.word	.LC224
 16866 166c B4170000 		.word	.LC225
 16867 1670 D0170000 		.word	.LC226
 16868 1674 E4170000 		.word	.LC227
 16869 1678 10180000 		.word	.LC228
 16870 167c 34180000 		.word	.LC229
 16871 1680 58180000 		.word	.LC230
 16872 1684 78180000 		.word	.LC231
 16873              	.L642:
2209:..\src/command_processing.c ****             else
2210:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: NO\r\n");
 16874              		.loc 1 2210 0
 16875 1688 7869     		ldr	r0, [r7, #20]
 16876 168a FFF7FEFF 		bl	strlen
 16877 168e 0346     		mov	r3, r0
 16878 1690 1A46     		mov	r2, r3
 16879 1692 7B69     		ldr	r3, [r7, #20]
 16880 1694 1344     		add	r3, r3, r2
 16881 1696 A24A     		ldr	r2, .L696
 16882 1698 1D46     		mov	r5, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 376


 16883 169a 1446     		mov	r4, r2
 16884 169c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16885 169e 2860     		str	r0, [r5]	@ unaligned
 16886 16a0 6960     		str	r1, [r5, #4]	@ unaligned
 16887 16a2 AA60     		str	r2, [r5, #8]	@ unaligned
 16888 16a4 EB60     		str	r3, [r5, #12]	@ unaligned
 16889 16a6 03CC     		ldmia	r4!, {r0, r1}
 16890 16a8 2861     		str	r0, [r5, #16]	@ unaligned
 16891 16aa 6961     		str	r1, [r5, #20]	@ unaligned
 16892 16ac 2388     		ldrh	r3, [r4]	@ unaligned
 16893 16ae A278     		ldrb	r2, [r4, #2]
 16894 16b0 2B83     		strh	r3, [r5, #24]	@ unaligned
 16895 16b2 1346     		mov	r3, r2
 16896 16b4 AB76     		strb	r3, [r5, #26]
 16897              	.L643:
2211:..\src/command_processing.c **** #endif                
2212:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16898              		.loc 1 2212 0 discriminator 2
 16899 16b6 7869     		ldr	r0, [r7, #20]
 16900 16b8 FFF7FEFF 		bl	strlen
 16901 16bc 0346     		mov	r3, r0
 16902 16be 1A46     		mov	r2, r3
 16903 16c0 7B69     		ldr	r3, [r7, #20]
 16904 16c2 1344     		add	r3, r3, r2
 16905 16c4 974A     		ldr	r2, .L696+4
 16906 16c6 1188     		ldrh	r1, [r2]	@ unaligned
 16907 16c8 9278     		ldrb	r2, [r2, #2]
 16908 16ca 1980     		strh	r1, [r3]	@ unaligned
 16909 16cc 9A70     		strb	r2, [r3, #2]
 16910              	.LBE22:
1942:..\src/command_processing.c ****             
 16911              		.loc 1 1942 0 discriminator 2
 16912 16ce 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 16913 16d2 0133     		adds	r3, r3, #1
 16914 16d4 87F89330 		strb	r3, [r7, #147]
 16915              	.L579:
1942:..\src/command_processing.c ****             
 16916              		.loc 1 1942 0 is_stmt 0 discriminator 1
 16917 16d8 D7F88830 		ldr	r3, [r7, #136]
 16918 16dc 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 16919 16e0 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 16920 16e4 9A42     		cmp	r2, r3
 16921 16e6 7EF641AE 		bls	.L644
 16922              	.LBE21:
2213:..\src/command_processing.c ****         }
2214:..\src/command_processing.c ****       
2215:..\src/command_processing.c ****         strcat(info_string, "EMG CONFIGURATION\r\n");
 16923              		.loc 1 2215 0 is_stmt 1
 16924 16ea 7869     		ldr	r0, [r7, #20]
 16925 16ec FFF7FEFF 		bl	strlen
 16926 16f0 0346     		mov	r3, r0
 16927 16f2 1A46     		mov	r2, r3
 16928 16f4 7B69     		ldr	r3, [r7, #20]
 16929 16f6 1344     		add	r3, r3, r2
 16930 16f8 8B4A     		ldr	r2, .L696+8
 16931 16fa 1D46     		mov	r5, r3
 16932 16fc 1446     		mov	r4, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 377


 16933 16fe 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16934 1700 2860     		str	r0, [r5]	@ unaligned
 16935 1702 6960     		str	r1, [r5, #4]	@ unaligned
 16936 1704 AA60     		str	r2, [r5, #8]	@ unaligned
 16937 1706 EB60     		str	r3, [r5, #12]	@ unaligned
 16938 1708 2068     		ldr	r0, [r4]	@ unaligned
 16939 170a 2861     		str	r0, [r5, #16]	@ unaligned
2216:..\src/command_processing.c ****         sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.e
 16940              		.loc 1 2216 0
 16941 170c D7F88830 		ldr	r3, [r7, #136]
 16942 1710 B3F8F031 		ldrh	r3, [r3, #496]
 16943 1714 1A46     		mov	r2, r3
 16944 1716 D7F88830 		ldr	r3, [r7, #136]
 16945 171a B3F8F231 		ldrh	r3, [r3, #498]
 16946 171e 07F11800 		add	r0, r7, #24
 16947 1722 8249     		ldr	r1, .L696+12
 16948 1724 FFF7FEFF 		bl	sprintf
2217:..\src/command_processing.c ****         strcat(info_string, str);
 16949              		.loc 1 2217 0
 16950 1728 07F11803 		add	r3, r7, #24
 16951 172c 1946     		mov	r1, r3
 16952 172e 7869     		ldr	r0, [r7, #20]
 16953 1730 FFF7FEFF 		bl	strcat
2218:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16954              		.loc 1 2218 0
 16955 1734 7869     		ldr	r0, [r7, #20]
 16956 1736 FFF7FEFF 		bl	strlen
 16957 173a 0346     		mov	r3, r0
 16958 173c 1A46     		mov	r2, r3
 16959 173e 7B69     		ldr	r3, [r7, #20]
 16960 1740 1344     		add	r3, r3, r2
 16961 1742 784A     		ldr	r2, .L696+4
 16962 1744 1188     		ldrh	r1, [r2]	@ unaligned
 16963 1746 9278     		ldrb	r2, [r2, #2]
 16964 1748 1980     		strh	r1, [r3]	@ unaligned
 16965 174a 9A70     		strb	r2, [r3, #2]
2219:..\src/command_processing.c **** 
2220:..\src/command_processing.c ****         sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg
 16966              		.loc 1 2220 0
 16967 174c D7F88830 		ldr	r3, [r7, #136]
 16968 1750 D3F8F421 		ldr	r2, [r3, #500]
 16969 1754 D7F88830 		ldr	r3, [r7, #136]
 16970 1758 D3F8F831 		ldr	r3, [r3, #504]
 16971 175c 07F11800 		add	r0, r7, #24
 16972 1760 7349     		ldr	r1, .L696+16
 16973 1762 FFF7FEFF 		bl	sprintf
2221:..\src/command_processing.c ****         strcat(info_string, str);
 16974              		.loc 1 2221 0
 16975 1766 07F11803 		add	r3, r7, #24
 16976 176a 1946     		mov	r1, r3
 16977 176c 7869     		ldr	r0, [r7, #20]
 16978 176e FFF7FEFF 		bl	strcat
2222:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16979              		.loc 1 2222 0
 16980 1772 7869     		ldr	r0, [r7, #20]
 16981 1774 FFF7FEFF 		bl	strlen
 16982 1778 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 378


 16983 177a 1A46     		mov	r2, r3
 16984 177c 7B69     		ldr	r3, [r7, #20]
 16985 177e 1344     		add	r3, r3, r2
 16986 1780 684A     		ldr	r2, .L696+4
 16987 1782 1188     		ldrh	r1, [r2]	@ unaligned
 16988 1784 9278     		ldrb	r2, [r2, #2]
 16989 1786 1980     		strh	r1, [r3]	@ unaligned
 16990 1788 9A70     		strb	r2, [r3, #2]
2223:..\src/command_processing.c **** 
2224:..\src/command_processing.c ****         if (MEM_P->emg.switch_emg)
 16991              		.loc 1 2224 0
 16992 178a D7F88830 		ldr	r3, [r7, #136]
 16993 178e 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 16994 1792 002B     		cmp	r3, #0
 16995 1794 13D0     		beq	.L645
2225:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: YES\r\n");
 16996              		.loc 1 2225 0
 16997 1796 7869     		ldr	r0, [r7, #20]
 16998 1798 FFF7FEFF 		bl	strlen
 16999 179c 0346     		mov	r3, r0
 17000 179e 1A46     		mov	r2, r3
 17001 17a0 7B69     		ldr	r3, [r7, #20]
 17002 17a2 1344     		add	r3, r3, r2
 17003 17a4 634A     		ldr	r2, .L696+20
 17004 17a6 1D46     		mov	r5, r3
 17005 17a8 1446     		mov	r4, r2
 17006 17aa 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17007 17ac 2860     		str	r0, [r5]	@ unaligned
 17008 17ae 6960     		str	r1, [r5, #4]	@ unaligned
 17009 17b0 AA60     		str	r2, [r5, #8]	@ unaligned
 17010 17b2 EB60     		str	r3, [r5, #12]	@ unaligned
 17011 17b4 2068     		ldr	r0, [r4]	@ unaligned
 17012 17b6 2861     		str	r0, [r5, #16]	@ unaligned
 17013 17b8 2379     		ldrb	r3, [r4, #4]
 17014 17ba 2B75     		strb	r3, [r5, #20]
 17015 17bc 10E0     		b	.L646
 17016              	.L645:
2226:..\src/command_processing.c ****         else
2227:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: NO\r\n");
 17017              		.loc 1 2227 0
 17018 17be 7869     		ldr	r0, [r7, #20]
 17019 17c0 FFF7FEFF 		bl	strlen
 17020 17c4 0346     		mov	r3, r0
 17021 17c6 1A46     		mov	r2, r3
 17022 17c8 7B69     		ldr	r3, [r7, #20]
 17023 17ca 1344     		add	r3, r3, r2
 17024 17cc 5A4A     		ldr	r2, .L696+24
 17025 17ce 1D46     		mov	r5, r3
 17026 17d0 1446     		mov	r4, r2
 17027 17d2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17028 17d4 2860     		str	r0, [r5]	@ unaligned
 17029 17d6 6960     		str	r1, [r5, #4]	@ unaligned
 17030 17d8 AA60     		str	r2, [r5, #8]	@ unaligned
 17031 17da EB60     		str	r3, [r5, #12]	@ unaligned
 17032 17dc 2068     		ldr	r0, [r4]	@ unaligned
 17033 17de 2861     		str	r0, [r5, #16]	@ unaligned
 17034              	.L646:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 379


2228:..\src/command_processing.c ****             
2229:..\src/command_processing.c ****         if (MEM_P->emg.emg_calibration_flag)
 17035              		.loc 1 2229 0
 17036 17e0 D7F88830 		ldr	r3, [r7, #136]
 17037 17e4 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 17038 17e8 002B     		cmp	r3, #0
 17039 17ea 17D0     		beq	.L647
2230:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: YES\r\n");
 17040              		.loc 1 2230 0
 17041 17ec 7869     		ldr	r0, [r7, #20]
 17042 17ee FFF7FEFF 		bl	strlen
 17043 17f2 0346     		mov	r3, r0
 17044 17f4 1A46     		mov	r2, r3
 17045 17f6 7B69     		ldr	r3, [r7, #20]
 17046 17f8 1344     		add	r3, r3, r2
 17047 17fa 504A     		ldr	r2, .L696+28
 17048 17fc 1D46     		mov	r5, r3
 17049 17fe 1446     		mov	r4, r2
 17050 1800 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17051 1802 2860     		str	r0, [r5]	@ unaligned
 17052 1804 6960     		str	r1, [r5, #4]	@ unaligned
 17053 1806 AA60     		str	r2, [r5, #8]	@ unaligned
 17054 1808 EB60     		str	r3, [r5, #12]	@ unaligned
 17055 180a 03CC     		ldmia	r4!, {r0, r1}
 17056 180c 2861     		str	r0, [r5, #16]	@ unaligned
 17057 180e 6961     		str	r1, [r5, #20]	@ unaligned
 17058 1810 2388     		ldrh	r3, [r4]	@ unaligned
 17059 1812 A278     		ldrb	r2, [r4, #2]
 17060 1814 2B83     		strh	r3, [r5, #24]	@ unaligned
 17061 1816 1346     		mov	r3, r2
 17062 1818 AB76     		strb	r3, [r5, #26]
 17063 181a 13E0     		b	.L648
 17064              	.L647:
2231:..\src/command_processing.c ****         else
2232:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: NO\r\n");
 17065              		.loc 1 2232 0
 17066 181c 7869     		ldr	r0, [r7, #20]
 17067 181e FFF7FEFF 		bl	strlen
 17068 1822 0346     		mov	r3, r0
 17069 1824 1A46     		mov	r2, r3
 17070 1826 7B69     		ldr	r3, [r7, #20]
 17071 1828 1344     		add	r3, r3, r2
 17072 182a 454A     		ldr	r2, .L696+32
 17073 182c 1D46     		mov	r5, r3
 17074 182e 1446     		mov	r4, r2
 17075 1830 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17076 1832 2860     		str	r0, [r5]	@ unaligned
 17077 1834 6960     		str	r1, [r5, #4]	@ unaligned
 17078 1836 AA60     		str	r2, [r5, #8]	@ unaligned
 17079 1838 EB60     		str	r3, [r5, #12]	@ unaligned
 17080 183a 03CC     		ldmia	r4!, {r0, r1}
 17081 183c 2861     		str	r0, [r5, #16]	@ unaligned
 17082 183e 6961     		str	r1, [r5, #20]	@ unaligned
 17083 1840 2388     		ldrh	r3, [r4]	@ unaligned
 17084 1842 2B83     		strh	r3, [r5, #24]	@ unaligned
 17085              	.L648:
2233:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 380


2234:..\src/command_processing.c ****         sprintf(str, "EMG max speed: %d %d", (int)MEM_P->emg.emg_speed[0], (int)MEM_P->emg.emg_spee
 17086              		.loc 1 2234 0
 17087 1844 D7F88830 		ldr	r3, [r7, #136]
 17088 1848 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 17089 184c 1A46     		mov	r2, r3
 17090 184e D7F88830 		ldr	r3, [r7, #136]
 17091 1852 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 17092 1856 07F11800 		add	r0, r7, #24
 17093 185a 3A49     		ldr	r1, .L696+36
 17094 185c FFF7FEFF 		bl	sprintf
2235:..\src/command_processing.c ****         strcat(info_string, str);
 17095              		.loc 1 2235 0
 17096 1860 07F11803 		add	r3, r7, #24
 17097 1864 1946     		mov	r1, r3
 17098 1866 7869     		ldr	r0, [r7, #20]
 17099 1868 FFF7FEFF 		bl	strcat
2236:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17100              		.loc 1 2236 0
 17101 186c 7869     		ldr	r0, [r7, #20]
 17102 186e FFF7FEFF 		bl	strlen
 17103 1872 0346     		mov	r3, r0
 17104 1874 1A46     		mov	r2, r3
 17105 1876 7B69     		ldr	r3, [r7, #20]
 17106 1878 1344     		add	r3, r3, r2
 17107 187a 2A4A     		ldr	r2, .L696+4
 17108 187c 1188     		ldrh	r1, [r2]	@ unaligned
 17109 187e 9278     		ldrb	r2, [r2, #2]
 17110 1880 1980     		strh	r1, [r3]	@ unaligned
 17111 1882 9A70     		strb	r2, [r3, #2]
2237:..\src/command_processing.c **** 
2238:..\src/command_processing.c ****         if (MEM_P->exp.read_ADC_sensors_port_flag == TRUE){
 17112              		.loc 1 2238 0
 17113 1884 D7F88830 		ldr	r3, [r7, #136]
 17114 1888 93F82732 		ldrb	r3, [r3, #551]	@ zero_extendqisi2
 17115 188c 012B     		cmp	r3, #1
 17116 188e 40F08A80 		bne	.L649
2239:..\src/command_processing.c ****             strcat(info_string, "Additional ADC sensors value:\r\n");
 17117              		.loc 1 2239 0
 17118 1892 7869     		ldr	r0, [r7, #20]
 17119 1894 FFF7FEFF 		bl	strlen
 17120 1898 0346     		mov	r3, r0
 17121 189a 1A46     		mov	r2, r3
 17122 189c 7B69     		ldr	r3, [r7, #20]
 17123 189e 1344     		add	r3, r3, r2
 17124 18a0 294A     		ldr	r2, .L696+40
 17125 18a2 1C46     		mov	r4, r3
 17126 18a4 1546     		mov	r5, r2
 17127 18a6 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17128 18a8 2060     		str	r0, [r4]	@ unaligned
 17129 18aa 6160     		str	r1, [r4, #4]	@ unaligned
 17130 18ac A260     		str	r2, [r4, #8]	@ unaligned
 17131 18ae E360     		str	r3, [r4, #12]	@ unaligned
 17132 18b0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17133 18b2 2061     		str	r0, [r4, #16]	@ unaligned
 17134 18b4 6161     		str	r1, [r4, #20]	@ unaligned
 17135 18b6 A261     		str	r2, [r4, #24]	@ unaligned
 17136 18b8 E361     		str	r3, [r4, #28]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 381


2240:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_ADDITIONAL_EMGS; ++i) {
 17137              		.loc 1 2240 0
 17138 18ba 0023     		movs	r3, #0
 17139 18bc C7F89430 		str	r3, [r7, #148]
 17140 18c0 25E0     		b	.L650
 17141              	.L651:
2241:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 17142              		.loc 1 2241 0 discriminator 3
 17143 18c2 D7F89430 		ldr	r3, [r7, #148]
 17144 18c6 591C     		adds	r1, r3, #1
 17145 18c8 204A     		ldr	r2, .L696+44
 17146 18ca D7F89430 		ldr	r3, [r7, #148]
 17147 18ce 0233     		adds	r3, r3, #2
 17148 18d0 52F82330 		ldr	r3, [r2, r3, lsl #2]
 17149 18d4 07F11800 		add	r0, r7, #24
 17150 18d8 0A46     		mov	r2, r1
 17151 18da 1D49     		ldr	r1, .L696+48
 17152 18dc FFF7FEFF 		bl	sprintf
2242:..\src/command_processing.c ****                 strcat(info_string, str);
 17153              		.loc 1 2242 0 discriminator 3
 17154 18e0 07F11803 		add	r3, r7, #24
 17155 18e4 1946     		mov	r1, r3
 17156 18e6 7869     		ldr	r0, [r7, #20]
 17157 18e8 FFF7FEFF 		bl	strcat
2243:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 17158              		.loc 1 2243 0 discriminator 3
 17159 18ec 7869     		ldr	r0, [r7, #20]
 17160 18ee FFF7FEFF 		bl	strlen
 17161 18f2 0346     		mov	r3, r0
 17162 18f4 1A46     		mov	r2, r3
 17163 18f6 7B69     		ldr	r3, [r7, #20]
 17164 18f8 1344     		add	r3, r3, r2
 17165 18fa 0A4A     		ldr	r2, .L696+4
 17166 18fc 1188     		ldrh	r1, [r2]	@ unaligned
 17167 18fe 9278     		ldrb	r2, [r2, #2]
 17168 1900 1980     		strh	r1, [r3]	@ unaligned
 17169 1902 9A70     		strb	r2, [r3, #2]
2240:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 17170              		.loc 1 2240 0 discriminator 3
 17171 1904 D7F89430 		ldr	r3, [r7, #148]
 17172 1908 0133     		adds	r3, r3, #1
 17173 190a C7F89430 		str	r3, [r7, #148]
 17174              	.L650:
2240:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 17175              		.loc 1 2240 0 is_stmt 0 discriminator 1
 17176 190e D7F89430 		ldr	r3, [r7, #148]
 17177 1912 052B     		cmp	r3, #5
 17178 1914 D5DD     		ble	.L651
2244:..\src/command_processing.c ****             }
2245:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_INPUT_EMGS; ++i) {
 17179              		.loc 1 2245 0 is_stmt 1
 17180 1916 0023     		movs	r3, #0
 17181 1918 C7F89430 		str	r3, [r7, #148]
 17182 191c 3FE0     		b	.L652
 17183              	.L697:
 17184 191e 00BF     		.align	2
 17185              	.L696:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 382


 17186 1920 94180000 		.word	.LC232
 17187 1924 30110000 		.word	.LC151
 17188 1928 B0180000 		.word	.LC233
 17189 192c C4180000 		.word	.LC234
 17190 1930 E8180000 		.word	.LC235
 17191 1934 0C190000 		.word	.LC236
 17192 1938 24190000 		.word	.LC237
 17193 193c 38190000 		.word	.LC238
 17194 1940 54190000 		.word	.LC239
 17195 1944 70190000 		.word	.LC240
 17196 1948 88190000 		.word	.LC241
 17197 194c 00000000 		.word	g_adc_meas
 17198 1950 A8190000 		.word	.LC242
 17199              	.L653:
2246:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 17200              		.loc 1 2246 0 discriminator 3
 17201 1954 D7F89430 		ldr	r3, [r7, #148]
 17202 1958 591C     		adds	r1, r3, #1
 17203 195a BD4A     		ldr	r2, .L698
 17204 195c D7F89430 		ldr	r3, [r7, #148]
 17205 1960 52F82330 		ldr	r3, [r2, r3, lsl #2]
 17206 1964 07F11800 		add	r0, r7, #24
 17207 1968 0A46     		mov	r2, r1
 17208 196a BA49     		ldr	r1, .L698+4
 17209 196c FFF7FEFF 		bl	sprintf
2247:..\src/command_processing.c ****                 strcat(info_string, str);
 17210              		.loc 1 2247 0 discriminator 3
 17211 1970 07F11803 		add	r3, r7, #24
 17212 1974 1946     		mov	r1, r3
 17213 1976 7869     		ldr	r0, [r7, #20]
 17214 1978 FFF7FEFF 		bl	strcat
2248:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 17215              		.loc 1 2248 0 discriminator 3
 17216 197c 7869     		ldr	r0, [r7, #20]
 17217 197e FFF7FEFF 		bl	strlen
 17218 1982 0346     		mov	r3, r0
 17219 1984 1A46     		mov	r2, r3
 17220 1986 7B69     		ldr	r3, [r7, #20]
 17221 1988 1344     		add	r3, r3, r2
 17222 198a B34A     		ldr	r2, .L698+8
 17223 198c 1188     		ldrh	r1, [r2]	@ unaligned
 17224 198e 9278     		ldrb	r2, [r2, #2]
 17225 1990 1980     		strh	r1, [r3]	@ unaligned
 17226 1992 9A70     		strb	r2, [r3, #2]
2245:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 17227              		.loc 1 2245 0 discriminator 3
 17228 1994 D7F89430 		ldr	r3, [r7, #148]
 17229 1998 0133     		adds	r3, r3, #1
 17230 199a C7F89430 		str	r3, [r7, #148]
 17231              	.L652:
2245:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 17232              		.loc 1 2245 0 is_stmt 0 discriminator 1
 17233 199e D7F89430 		ldr	r3, [r7, #148]
 17234 19a2 012B     		cmp	r3, #1
 17235 19a4 D6DD     		ble	.L653
 17236              	.L649:
2249:..\src/command_processing.c ****             }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 383


2250:..\src/command_processing.c ****         }
2251:..\src/command_processing.c **** 
2252:..\src/command_processing.c **** #ifdef GENERIC_FW
2253:..\src/command_processing.c ****     
2254:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17237              		.loc 1 2254 0 is_stmt 1
 17238 19a6 7869     		ldr	r0, [r7, #20]
 17239 19a8 FFF7FEFF 		bl	strlen
 17240 19ac 0346     		mov	r3, r0
 17241 19ae 1A46     		mov	r2, r3
 17242 19b0 7B69     		ldr	r3, [r7, #20]
 17243 19b2 1344     		add	r3, r3, r2
 17244 19b4 A84A     		ldr	r2, .L698+8
 17245 19b6 1188     		ldrh	r1, [r2]	@ unaligned
 17246 19b8 9278     		ldrb	r2, [r2, #2]
 17247 19ba 1980     		strh	r1, [r3]	@ unaligned
 17248 19bc 9A70     		strb	r2, [r3, #2]
2255:..\src/command_processing.c ****         strcat(info_string, "JOYSTICK CONFIGURATION\r\n");
 17249              		.loc 1 2255 0
 17250 19be 7869     		ldr	r0, [r7, #20]
 17251 19c0 FFF7FEFF 		bl	strlen
 17252 19c4 0346     		mov	r3, r0
 17253 19c6 1A46     		mov	r2, r3
 17254 19c8 7B69     		ldr	r3, [r7, #20]
 17255 19ca 1344     		add	r3, r3, r2
 17256 19cc A34A     		ldr	r2, .L698+12
 17257 19ce 1D46     		mov	r5, r3
 17258 19d0 1446     		mov	r4, r2
 17259 19d2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17260 19d4 2860     		str	r0, [r5]	@ unaligned
 17261 19d6 6960     		str	r1, [r5, #4]	@ unaligned
 17262 19d8 AA60     		str	r2, [r5, #8]	@ unaligned
 17263 19da EB60     		str	r3, [r5, #12]	@ unaligned
 17264 19dc 03CC     		ldmia	r4!, {r0, r1}
 17265 19de 2861     		str	r0, [r5, #16]	@ unaligned
 17266 19e0 6961     		str	r1, [r5, #20]	@ unaligned
 17267 19e2 2378     		ldrb	r3, [r4]
 17268 19e4 2B76     		strb	r3, [r5, #24]
2256:..\src/command_processing.c ****         sprintf(str, "Closure speed: %d", c_mem.JOY_spec.joystick_closure_speed);
 17269              		.loc 1 2256 0
 17270 19e6 9E4B     		ldr	r3, .L698+16
 17271 19e8 B3F8B032 		ldrh	r3, [r3, #688]
 17272 19ec 1A46     		mov	r2, r3
 17273 19ee 07F11803 		add	r3, r7, #24
 17274 19f2 9C49     		ldr	r1, .L698+20
 17275 19f4 1846     		mov	r0, r3
 17276 19f6 FFF7FEFF 		bl	sprintf
2257:..\src/command_processing.c ****         strcat(info_string, str);
 17277              		.loc 1 2257 0
 17278 19fa 07F11803 		add	r3, r7, #24
 17279 19fe 1946     		mov	r1, r3
 17280 1a00 7869     		ldr	r0, [r7, #20]
 17281 1a02 FFF7FEFF 		bl	strcat
2258:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17282              		.loc 1 2258 0
 17283 1a06 7869     		ldr	r0, [r7, #20]
 17284 1a08 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 384


 17285 1a0c 0346     		mov	r3, r0
 17286 1a0e 1A46     		mov	r2, r3
 17287 1a10 7B69     		ldr	r3, [r7, #20]
 17288 1a12 1344     		add	r3, r3, r2
 17289 1a14 904A     		ldr	r2, .L698+8
 17290 1a16 1188     		ldrh	r1, [r2]	@ unaligned
 17291 1a18 9278     		ldrb	r2, [r2, #2]
 17292 1a1a 1980     		strh	r1, [r3]	@ unaligned
 17293 1a1c 9A70     		strb	r2, [r3, #2]
2259:..\src/command_processing.c **** 
2260:..\src/command_processing.c ****         sprintf(str, "Joystick Threshold: %d", c_mem.JOY_spec.joystick_threshold);
 17294              		.loc 1 2260 0
 17295 1a1e 904B     		ldr	r3, .L698+16
 17296 1a20 B3F9B232 		ldrsh	r3, [r3, #690]
 17297 1a24 1A46     		mov	r2, r3
 17298 1a26 07F11803 		add	r3, r7, #24
 17299 1a2a 8F49     		ldr	r1, .L698+24
 17300 1a2c 1846     		mov	r0, r3
 17301 1a2e FFF7FEFF 		bl	sprintf
2261:..\src/command_processing.c ****         strcat(info_string, str);
 17302              		.loc 1 2261 0
 17303 1a32 07F11803 		add	r3, r7, #24
 17304 1a36 1946     		mov	r1, r3
 17305 1a38 7869     		ldr	r0, [r7, #20]
 17306 1a3a FFF7FEFF 		bl	strcat
2262:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17307              		.loc 1 2262 0
 17308 1a3e 7869     		ldr	r0, [r7, #20]
 17309 1a40 FFF7FEFF 		bl	strlen
 17310 1a44 0346     		mov	r3, r0
 17311 1a46 1A46     		mov	r2, r3
 17312 1a48 7B69     		ldr	r3, [r7, #20]
 17313 1a4a 1344     		add	r3, r3, r2
 17314 1a4c 824A     		ldr	r2, .L698+8
 17315 1a4e 1188     		ldrh	r1, [r2]	@ unaligned
 17316 1a50 9278     		ldrb	r2, [r2, #2]
 17317 1a52 1980     		strh	r1, [r3]	@ unaligned
 17318 1a54 9A70     		strb	r2, [r3, #2]
2263:..\src/command_processing.c ****         sprintf(str, "Joystick Gains - X:%hu  Y:%hu", c_mem.JOY_spec.joystick_gains[0], c_mem.JOY_s
 17319              		.loc 1 2263 0
 17320 1a56 824B     		ldr	r3, .L698+16
 17321 1a58 B3F8B432 		ldrh	r3, [r3, #692]
 17322 1a5c 1A46     		mov	r2, r3
 17323 1a5e 804B     		ldr	r3, .L698+16
 17324 1a60 B3F8B632 		ldrh	r3, [r3, #694]
 17325 1a64 07F11800 		add	r0, r7, #24
 17326 1a68 8049     		ldr	r1, .L698+28
 17327 1a6a FFF7FEFF 		bl	sprintf
2264:..\src/command_processing.c ****         strcat(info_string, str);
 17328              		.loc 1 2264 0
 17329 1a6e 07F11803 		add	r3, r7, #24
 17330 1a72 1946     		mov	r1, r3
 17331 1a74 7869     		ldr	r0, [r7, #20]
 17332 1a76 FFF7FEFF 		bl	strcat
2265:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17333              		.loc 1 2265 0
 17334 1a7a 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 385


 17335 1a7c FFF7FEFF 		bl	strlen
 17336 1a80 0346     		mov	r3, r0
 17337 1a82 1A46     		mov	r2, r3
 17338 1a84 7B69     		ldr	r3, [r7, #20]
 17339 1a86 1344     		add	r3, r3, r2
 17340 1a88 734A     		ldr	r2, .L698+8
 17341 1a8a 1188     		ldrh	r1, [r2]	@ unaligned
 17342 1a8c 9278     		ldrb	r2, [r2, #2]
 17343 1a8e 1980     		strh	r1, [r3]	@ unaligned
 17344 1a90 9A70     		strb	r2, [r3, #2]
2266:..\src/command_processing.c **** 
2267:..\src/command_processing.c **** #endif
2268:..\src/command_processing.c ****         
2269:..\src/command_processing.c ****         if (MEM_P->SH.rest_position_flag) {
 17345              		.loc 1 2269 0
 17346 1a92 D7F88830 		ldr	r3, [r7, #136]
 17347 1a96 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 17348 1a9a 002B     		cmp	r3, #0
 17349 1a9c 63D0     		beq	.L654
2270:..\src/command_processing.c ****     		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 17350              		.loc 1 2270 0
 17351 1a9e D7F88830 		ldr	r3, [r7, #136]
 17352 1aa2 D3F8A422 		ldr	r2, [r3, #676]
 17353 1aa6 07F11803 		add	r3, r7, #24
 17354 1aaa 7149     		ldr	r1, .L698+32
 17355 1aac 1846     		mov	r0, r3
 17356 1aae FFF7FEFF 		bl	sprintf
2271:..\src/command_processing.c ****             strcat(info_string, str);
 17357              		.loc 1 2271 0
 17358 1ab2 07F11803 		add	r3, r7, #24
 17359 1ab6 1946     		mov	r1, r3
 17360 1ab8 7869     		ldr	r0, [r7, #20]
 17361 1aba FFF7FEFF 		bl	strcat
2272:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17362              		.loc 1 2272 0
 17363 1abe 7869     		ldr	r0, [r7, #20]
 17364 1ac0 FFF7FEFF 		bl	strlen
 17365 1ac4 0346     		mov	r3, r0
 17366 1ac6 1A46     		mov	r2, r3
 17367 1ac8 7B69     		ldr	r3, [r7, #20]
 17368 1aca 1344     		add	r3, r3, r2
 17369 1acc 624A     		ldr	r2, .L698+8
 17370 1ace 1188     		ldrh	r1, [r2]	@ unaligned
 17371 1ad0 9278     		ldrb	r2, [r2, #2]
 17372 1ad2 1980     		strh	r1, [r3]	@ unaligned
 17373 1ad4 9A70     		strb	r2, [r3, #2]
2273:..\src/command_processing.c ****             
2274:..\src/command_processing.c ****             sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 17374              		.loc 1 2274 0
 17375 1ad6 D7F88830 		ldr	r3, [r7, #136]
 17376 1ada D3F8A822 		ldr	r2, [r3, #680]
 17377 1ade 07F11803 		add	r3, r7, #24
 17378 1ae2 6449     		ldr	r1, .L698+36
 17379 1ae4 1846     		mov	r0, r3
 17380 1ae6 FFF7FEFF 		bl	sprintf
2275:..\src/command_processing.c ****             strcat(info_string, str);
 17381              		.loc 1 2275 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 386


 17382 1aea 07F11803 		add	r3, r7, #24
 17383 1aee 1946     		mov	r1, r3
 17384 1af0 7869     		ldr	r0, [r7, #20]
 17385 1af2 FFF7FEFF 		bl	strcat
2276:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17386              		.loc 1 2276 0
 17387 1af6 7869     		ldr	r0, [r7, #20]
 17388 1af8 FFF7FEFF 		bl	strlen
 17389 1afc 0346     		mov	r3, r0
 17390 1afe 1A46     		mov	r2, r3
 17391 1b00 7B69     		ldr	r3, [r7, #20]
 17392 1b02 1344     		add	r3, r3, r2
 17393 1b04 544A     		ldr	r2, .L698+8
 17394 1b06 1188     		ldrh	r1, [r2]	@ unaligned
 17395 1b08 9278     		ldrb	r2, [r2, #2]
 17396 1b0a 1980     		strh	r1, [r3]	@ unaligned
 17397 1b0c 9A70     		strb	r2, [r3, #2]
2277:..\src/command_processing.c ****             
2278:..\src/command_processing.c ****             sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0
 17398              		.loc 1 2278 0
 17399 1b0e D7F88830 		ldr	r3, [r7, #136]
 17400 1b12 D3F8A022 		ldr	r2, [r3, #672]
 17401 1b16 D7F88830 		ldr	r3, [r7, #136]
 17402 1b1a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 17403 1b1e 1846     		mov	r0, r3
 17404 1b20 D7F88810 		ldr	r1, [r7, #136]
 17405 1b24 0346     		mov	r3, r0
 17406 1b26 5B00     		lsls	r3, r3, #1
 17407 1b28 0344     		add	r3, r3, r0
 17408 1b2a 1B01     		lsls	r3, r3, #4
 17409 1b2c 0B44     		add	r3, r3, r1
 17410 1b2e 03F29513 		addw	r3, r3, #405
 17411 1b32 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17412 1b34 1A41     		asrs	r2, r2, r3
 17413 1b36 07F11803 		add	r3, r7, #24
 17414 1b3a 4F49     		ldr	r1, .L698+40
 17415 1b3c 1846     		mov	r0, r3
 17416 1b3e FFF7FEFF 		bl	sprintf
2279:..\src/command_processing.c ****             strcat(info_string, str);
 17417              		.loc 1 2279 0
 17418 1b42 07F11803 		add	r3, r7, #24
 17419 1b46 1946     		mov	r1, r3
 17420 1b48 7869     		ldr	r0, [r7, #20]
 17421 1b4a FFF7FEFF 		bl	strcat
2280:..\src/command_processing.c ****             strcat(info_string, "\r\n");  
 17422              		.loc 1 2280 0
 17423 1b4e 7869     		ldr	r0, [r7, #20]
 17424 1b50 FFF7FEFF 		bl	strlen
 17425 1b54 0346     		mov	r3, r0
 17426 1b56 1A46     		mov	r2, r3
 17427 1b58 7B69     		ldr	r3, [r7, #20]
 17428 1b5a 1344     		add	r3, r3, r2
 17429 1b5c 3E4A     		ldr	r2, .L698+8
 17430 1b5e 1188     		ldrh	r1, [r2]	@ unaligned
 17431 1b60 9278     		ldrb	r2, [r2, #2]
 17432 1b62 1980     		strh	r1, [r3]	@ unaligned
 17433 1b64 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 387


 17434              	.L654:
2281:..\src/command_processing.c ****         }
2282:..\src/command_processing.c **** 
2283:..\src/command_processing.c ****         if (MEM_P->imu.read_imu_flag) {
 17435              		.loc 1 2283 0
 17436 1b66 D7F88830 		ldr	r3, [r7, #136]
 17437 1b6a 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 17438 1b6e 002B     		cmp	r3, #0
 17439 1b70 00F0D281 		beq	.L655
2284:..\src/command_processing.c ****             sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 17440              		.loc 1 2284 0
 17441 1b74 414B     		ldr	r3, .L698+44
 17442 1b76 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17443 1b78 1A46     		mov	r2, r3
 17444 1b7a 07F11803 		add	r3, r7, #24
 17445 1b7e 4049     		ldr	r1, .L698+48
 17446 1b80 1846     		mov	r0, r3
 17447 1b82 FFF7FEFF 		bl	sprintf
2285:..\src/command_processing.c ****             strcat(info_string, str);
 17448              		.loc 1 2285 0
 17449 1b86 07F11803 		add	r3, r7, #24
 17450 1b8a 1946     		mov	r1, r3
 17451 1b8c 7869     		ldr	r0, [r7, #20]
 17452 1b8e FFF7FEFF 		bl	strcat
2286:..\src/command_processing.c ****             
2287:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17453              		.loc 1 2287 0
 17454 1b92 7869     		ldr	r0, [r7, #20]
 17455 1b94 FFF7FEFF 		bl	strlen
 17456 1b98 0346     		mov	r3, r0
 17457 1b9a 1A46     		mov	r2, r3
 17458 1b9c 7B69     		ldr	r3, [r7, #20]
 17459 1b9e 1344     		add	r3, r3, r2
 17460 1ba0 2D4A     		ldr	r2, .L698+8
 17461 1ba2 1188     		ldrh	r1, [r2]	@ unaligned
 17462 1ba4 9278     		ldrb	r2, [r2, #2]
 17463 1ba6 1980     		strh	r1, [r3]	@ unaligned
 17464 1ba8 9A70     		strb	r2, [r3, #2]
2288:..\src/command_processing.c ****             
2289:..\src/command_processing.c ****             strcat(info_string, "IMUs CONFIGURATION\r\n");
 17465              		.loc 1 2289 0
 17466 1baa 7869     		ldr	r0, [r7, #20]
 17467 1bac FFF7FEFF 		bl	strlen
 17468 1bb0 0346     		mov	r3, r0
 17469 1bb2 1A46     		mov	r2, r3
 17470 1bb4 7B69     		ldr	r3, [r7, #20]
 17471 1bb6 1344     		add	r3, r3, r2
 17472 1bb8 324A     		ldr	r2, .L698+52
 17473 1bba 1D46     		mov	r5, r3
 17474 1bbc 1446     		mov	r4, r2
 17475 1bbe 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17476 1bc0 2860     		str	r0, [r5]	@ unaligned
 17477 1bc2 6960     		str	r1, [r5, #4]	@ unaligned
 17478 1bc4 AA60     		str	r2, [r5, #8]	@ unaligned
 17479 1bc6 EB60     		str	r3, [r5, #12]	@ unaligned
 17480 1bc8 2068     		ldr	r0, [r4]	@ unaligned
 17481 1bca 2861     		str	r0, [r5, #16]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 388


 17482 1bcc 2379     		ldrb	r3, [r4, #4]
 17483 1bce 2B75     		strb	r3, [r5, #20]
2290:..\src/command_processing.c ****             for (i=0; i<N_IMU_Connected; i++){
 17484              		.loc 1 2290 0
 17485 1bd0 0023     		movs	r3, #0
 17486 1bd2 C7F89430 		str	r3, [r7, #148]
 17487 1bd6 88E1     		b	.L656
 17488              	.L667:
2291:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17489              		.loc 1 2291 0
 17490 1bd8 2B4A     		ldr	r2, .L698+56
 17491 1bda D7F89430 		ldr	r3, [r7, #148]
 17492 1bde 1344     		add	r3, r3, r2
 17493 1be0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17494 1be2 07F11800 		add	r0, r7, #24
 17495 1be6 D7F89420 		ldr	r2, [r7, #148]
 17496 1bea 2849     		ldr	r1, .L698+60
 17497 1bec FFF7FEFF 		bl	sprintf
2292:..\src/command_processing.c ****                 strcat(info_string, str);
 17498              		.loc 1 2292 0
 17499 1bf0 07F11803 		add	r3, r7, #24
 17500 1bf4 1946     		mov	r1, r3
 17501 1bf6 7869     		ldr	r0, [r7, #20]
 17502 1bf8 FFF7FEFF 		bl	strcat
2293:..\src/command_processing.c ****                 
2294:..\src/command_processing.c ****                 sprintf(str, "\tAccelerometers: ");
 17503              		.loc 1 2294 0
 17504 1bfc 07F11803 		add	r3, r7, #24
 17505 1c00 234A     		ldr	r2, .L698+64
 17506 1c02 1C46     		mov	r4, r3
 17507 1c04 1546     		mov	r5, r2
 17508 1c06 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17509 1c08 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 17510 1c0a 2B68     		ldr	r3, [r5]
 17511 1c0c 2380     		strh	r3, [r4]	@ movhi
2295:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 17512              		.loc 1 2295 0
 17513 1c0e 1E4A     		ldr	r2, .L698+56
 17514 1c10 D7F89430 		ldr	r3, [r7, #148]
 17515 1c14 1344     		add	r3, r3, r2
 17516 1c16 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17517 1c18 1946     		mov	r1, r3
 17518 1c1a D7F88820 		ldr	r2, [r7, #136]
 17519 1c1e 0B46     		mov	r3, r1
 17520 1c20 9B00     		lsls	r3, r3, #2
 17521 1c22 0B44     		add	r3, r3, r1
 17522 1c24 1344     		add	r3, r3, r2
 17523 1c26 03F20223 		addw	r3, r3, #514
 17524 1c2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17525 1c2c 002B     		cmp	r3, #0
 17526 1c2e 33D0     		beq	.L657
2296:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17527              		.loc 1 2296 0
 17528 1c30 07F11803 		add	r3, r7, #24
 17529 1c34 1846     		mov	r0, r3
 17530 1c36 FFF7FEFF 		bl	strlen
 17531 1c3a 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 389


 17532 1c3c 1A46     		mov	r2, r3
 17533 1c3e 07F11803 		add	r3, r7, #24
 17534 1c42 1344     		add	r3, r3, r2
 17535 1c44 134A     		ldr	r2, .L698+68
 17536 1c46 1068     		ldr	r0, [r2]	@ unaligned
 17537 1c48 1860     		str	r0, [r3]	@ unaligned
 17538 1c4a 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17539 1c4c 9A80     		strh	r2, [r3, #4]	@ unaligned
 17540 1c4e 32E0     		b	.L658
 17541              	.L699:
 17542              		.align	2
 17543              	.L698:
 17544 1c50 00000000 		.word	g_adc_meas
 17545 1c54 B8190000 		.word	.LC243
 17546 1c58 30110000 		.word	.LC151
 17547 1c5c CC190000 		.word	.LC244
 17548 1c60 00000000 		.word	c_mem
 17549 1c64 E8190000 		.word	.LC245
 17550 1c68 FC190000 		.word	.LC246
 17551 1c6c 141A0000 		.word	.LC247
 17552 1c70 341A0000 		.word	.LC248
 17553 1c74 501A0000 		.word	.LC249
 17554 1c78 781A0000 		.word	.LC250
 17555 1c7c 00000000 		.word	N_IMU_Connected
 17556 1c80 8C1A0000 		.word	.LC251
 17557 1c84 A01A0000 		.word	.LC252
 17558 1c88 00000000 		.word	IMU_connected
 17559 1c8c B81A0000 		.word	.LC253
 17560 1c90 CC1A0000 		.word	.LC254
 17561 1c94 F4120000 		.word	.LC174
 17562              	.L657:
2297:..\src/command_processing.c ****                 else
2298:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 17563              		.loc 1 2298 0
 17564 1c98 07F11803 		add	r3, r7, #24
 17565 1c9c 1846     		mov	r0, r3
 17566 1c9e FFF7FEFF 		bl	strlen
 17567 1ca2 0346     		mov	r3, r0
 17568 1ca4 1A46     		mov	r2, r3
 17569 1ca6 07F11803 		add	r3, r7, #24
 17570 1caa 1344     		add	r3, r3, r2
 17571 1cac BD4A     		ldr	r2, .L700
 17572 1cae 1068     		ldr	r0, [r2]	@ unaligned
 17573 1cb0 1860     		str	r0, [r3]	@ unaligned
 17574 1cb2 1279     		ldrb	r2, [r2, #4]
 17575 1cb4 1A71     		strb	r2, [r3, #4]
 17576              	.L658:
2299:..\src/command_processing.c ****                 strcat(str, "\tGyroscopes: ");
 17577              		.loc 1 2299 0
 17578 1cb6 07F11803 		add	r3, r7, #24
 17579 1cba 1846     		mov	r0, r3
 17580 1cbc FFF7FEFF 		bl	strlen
 17581 1cc0 0346     		mov	r3, r0
 17582 1cc2 1A46     		mov	r2, r3
 17583 1cc4 07F11803 		add	r3, r7, #24
 17584 1cc8 1344     		add	r3, r3, r2
 17585 1cca B74A     		ldr	r2, .L700+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 390


 17586 1ccc 1C46     		mov	r4, r3
 17587 1cce 1346     		mov	r3, r2
 17588 1cd0 07CB     		ldmia	r3!, {r0, r1, r2}
 17589 1cd2 2060     		str	r0, [r4]	@ unaligned
 17590 1cd4 6160     		str	r1, [r4, #4]	@ unaligned
 17591 1cd6 A260     		str	r2, [r4, #8]	@ unaligned
 17592 1cd8 1B88     		ldrh	r3, [r3]	@ unaligned
 17593 1cda A381     		strh	r3, [r4, #12]	@ unaligned
2300:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 17594              		.loc 1 2300 0
 17595 1cdc B34A     		ldr	r2, .L700+8
 17596 1cde D7F89430 		ldr	r3, [r7, #148]
 17597 1ce2 1344     		add	r3, r3, r2
 17598 1ce4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17599 1ce6 1946     		mov	r1, r3
 17600 1ce8 D7F88820 		ldr	r2, [r7, #136]
 17601 1cec 0B46     		mov	r3, r1
 17602 1cee 9B00     		lsls	r3, r3, #2
 17603 1cf0 0B44     		add	r3, r3, r1
 17604 1cf2 1344     		add	r3, r3, r2
 17605 1cf4 03F20323 		addw	r3, r3, #515
 17606 1cf8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17607 1cfa 002B     		cmp	r3, #0
 17608 1cfc 0FD0     		beq	.L659
2301:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17609              		.loc 1 2301 0
 17610 1cfe 07F11803 		add	r3, r7, #24
 17611 1d02 1846     		mov	r0, r3
 17612 1d04 FFF7FEFF 		bl	strlen
 17613 1d08 0346     		mov	r3, r0
 17614 1d0a 1A46     		mov	r2, r3
 17615 1d0c 07F11803 		add	r3, r7, #24
 17616 1d10 1344     		add	r3, r3, r2
 17617 1d12 A74A     		ldr	r2, .L700+12
 17618 1d14 1068     		ldr	r0, [r2]	@ unaligned
 17619 1d16 1860     		str	r0, [r3]	@ unaligned
 17620 1d18 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17621 1d1a 9A80     		strh	r2, [r3, #4]	@ unaligned
 17622 1d1c 0EE0     		b	.L660
 17623              	.L659:
2302:..\src/command_processing.c ****                 else
2303:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 17624              		.loc 1 2303 0
 17625 1d1e 07F11803 		add	r3, r7, #24
 17626 1d22 1846     		mov	r0, r3
 17627 1d24 FFF7FEFF 		bl	strlen
 17628 1d28 0346     		mov	r3, r0
 17629 1d2a 1A46     		mov	r2, r3
 17630 1d2c 07F11803 		add	r3, r7, #24
 17631 1d30 1344     		add	r3, r3, r2
 17632 1d32 9C4A     		ldr	r2, .L700
 17633 1d34 1068     		ldr	r0, [r2]	@ unaligned
 17634 1d36 1860     		str	r0, [r3]	@ unaligned
 17635 1d38 1279     		ldrb	r2, [r2, #4]
 17636 1d3a 1A71     		strb	r2, [r3, #4]
 17637              	.L660:
2304:..\src/command_processing.c ****                 strcat(str, "\tMagnetometers: ");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 391


 17638              		.loc 1 2304 0
 17639 1d3c 07F11803 		add	r3, r7, #24
 17640 1d40 1846     		mov	r0, r3
 17641 1d42 FFF7FEFF 		bl	strlen
 17642 1d46 0346     		mov	r3, r0
 17643 1d48 1A46     		mov	r2, r3
 17644 1d4a 07F11803 		add	r3, r7, #24
 17645 1d4e 1344     		add	r3, r3, r2
 17646 1d50 984A     		ldr	r2, .L700+16
 17647 1d52 1D46     		mov	r5, r3
 17648 1d54 1446     		mov	r4, r2
 17649 1d56 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17650 1d58 2860     		str	r0, [r5]	@ unaligned
 17651 1d5a 6960     		str	r1, [r5, #4]	@ unaligned
 17652 1d5c AA60     		str	r2, [r5, #8]	@ unaligned
 17653 1d5e EB60     		str	r3, [r5, #12]	@ unaligned
 17654 1d60 2378     		ldrb	r3, [r4]
 17655 1d62 2B74     		strb	r3, [r5, #16]
2305:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 17656              		.loc 1 2305 0
 17657 1d64 914A     		ldr	r2, .L700+8
 17658 1d66 D7F89430 		ldr	r3, [r7, #148]
 17659 1d6a 1344     		add	r3, r3, r2
 17660 1d6c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17661 1d6e 1946     		mov	r1, r3
 17662 1d70 D7F88820 		ldr	r2, [r7, #136]
 17663 1d74 0B46     		mov	r3, r1
 17664 1d76 9B00     		lsls	r3, r3, #2
 17665 1d78 0B44     		add	r3, r3, r1
 17666 1d7a 1344     		add	r3, r3, r2
 17667 1d7c 03F50173 		add	r3, r3, #516
 17668 1d80 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17669 1d82 002B     		cmp	r3, #0
 17670 1d84 0FD0     		beq	.L661
2306:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17671              		.loc 1 2306 0
 17672 1d86 07F11803 		add	r3, r7, #24
 17673 1d8a 1846     		mov	r0, r3
 17674 1d8c FFF7FEFF 		bl	strlen
 17675 1d90 0346     		mov	r3, r0
 17676 1d92 1A46     		mov	r2, r3
 17677 1d94 07F11803 		add	r3, r7, #24
 17678 1d98 1344     		add	r3, r3, r2
 17679 1d9a 854A     		ldr	r2, .L700+12
 17680 1d9c 1068     		ldr	r0, [r2]	@ unaligned
 17681 1d9e 1860     		str	r0, [r3]	@ unaligned
 17682 1da0 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17683 1da2 9A80     		strh	r2, [r3, #4]	@ unaligned
 17684 1da4 0EE0     		b	.L662
 17685              	.L661:
2307:..\src/command_processing.c ****                 else
2308:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 17686              		.loc 1 2308 0
 17687 1da6 07F11803 		add	r3, r7, #24
 17688 1daa 1846     		mov	r0, r3
 17689 1dac FFF7FEFF 		bl	strlen
 17690 1db0 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 392


 17691 1db2 1A46     		mov	r2, r3
 17692 1db4 07F11803 		add	r3, r7, #24
 17693 1db8 1344     		add	r3, r3, r2
 17694 1dba 7A4A     		ldr	r2, .L700
 17695 1dbc 1068     		ldr	r0, [r2]	@ unaligned
 17696 1dbe 1860     		str	r0, [r3]	@ unaligned
 17697 1dc0 1279     		ldrb	r2, [r2, #4]
 17698 1dc2 1A71     		strb	r2, [r3, #4]
 17699              	.L662:
2309:..\src/command_processing.c ****                 strcat(str, "\tQuaternion: ");                
 17700              		.loc 1 2309 0
 17701 1dc4 07F11803 		add	r3, r7, #24
 17702 1dc8 1846     		mov	r0, r3
 17703 1dca FFF7FEFF 		bl	strlen
 17704 1dce 0346     		mov	r3, r0
 17705 1dd0 1A46     		mov	r2, r3
 17706 1dd2 07F11803 		add	r3, r7, #24
 17707 1dd6 1344     		add	r3, r3, r2
 17708 1dd8 774A     		ldr	r2, .L700+20
 17709 1dda 1C46     		mov	r4, r3
 17710 1ddc 1346     		mov	r3, r2
 17711 1dde 07CB     		ldmia	r3!, {r0, r1, r2}
 17712 1de0 2060     		str	r0, [r4]	@ unaligned
 17713 1de2 6160     		str	r1, [r4, #4]	@ unaligned
 17714 1de4 A260     		str	r2, [r4, #8]	@ unaligned
 17715 1de6 1B88     		ldrh	r3, [r3]	@ unaligned
 17716 1de8 A381     		strh	r3, [r4, #12]	@ unaligned
2310:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 17717              		.loc 1 2310 0
 17718 1dea 704A     		ldr	r2, .L700+8
 17719 1dec D7F89430 		ldr	r3, [r7, #148]
 17720 1df0 1344     		add	r3, r3, r2
 17721 1df2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17722 1df4 1946     		mov	r1, r3
 17723 1df6 D7F88820 		ldr	r2, [r7, #136]
 17724 1dfa 0B46     		mov	r3, r1
 17725 1dfc 9B00     		lsls	r3, r3, #2
 17726 1dfe 0B44     		add	r3, r3, r1
 17727 1e00 1344     		add	r3, r3, r2
 17728 1e02 03F20523 		addw	r3, r3, #517
 17729 1e06 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17730 1e08 002B     		cmp	r3, #0
 17731 1e0a 0FD0     		beq	.L663
2311:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17732              		.loc 1 2311 0
 17733 1e0c 07F11803 		add	r3, r7, #24
 17734 1e10 1846     		mov	r0, r3
 17735 1e12 FFF7FEFF 		bl	strlen
 17736 1e16 0346     		mov	r3, r0
 17737 1e18 1A46     		mov	r2, r3
 17738 1e1a 07F11803 		add	r3, r7, #24
 17739 1e1e 1344     		add	r3, r3, r2
 17740 1e20 634A     		ldr	r2, .L700+12
 17741 1e22 1068     		ldr	r0, [r2]	@ unaligned
 17742 1e24 1860     		str	r0, [r3]	@ unaligned
 17743 1e26 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17744 1e28 9A80     		strh	r2, [r3, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 393


 17745 1e2a 0EE0     		b	.L664
 17746              	.L663:
2312:..\src/command_processing.c ****                 else
2313:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 17747              		.loc 1 2313 0
 17748 1e2c 07F11803 		add	r3, r7, #24
 17749 1e30 1846     		mov	r0, r3
 17750 1e32 FFF7FEFF 		bl	strlen
 17751 1e36 0346     		mov	r3, r0
 17752 1e38 1A46     		mov	r2, r3
 17753 1e3a 07F11803 		add	r3, r7, #24
 17754 1e3e 1344     		add	r3, r3, r2
 17755 1e40 584A     		ldr	r2, .L700
 17756 1e42 1068     		ldr	r0, [r2]	@ unaligned
 17757 1e44 1860     		str	r0, [r3]	@ unaligned
 17758 1e46 1279     		ldrb	r2, [r2, #4]
 17759 1e48 1A71     		strb	r2, [r3, #4]
 17760              	.L664:
2314:..\src/command_processing.c ****                 strcat(str, "\tTemperature: ");
 17761              		.loc 1 2314 0
 17762 1e4a 07F11803 		add	r3, r7, #24
 17763 1e4e 1846     		mov	r0, r3
 17764 1e50 FFF7FEFF 		bl	strlen
 17765 1e54 0346     		mov	r3, r0
 17766 1e56 1A46     		mov	r2, r3
 17767 1e58 07F11803 		add	r3, r7, #24
 17768 1e5c 1344     		add	r3, r3, r2
 17769 1e5e 574A     		ldr	r2, .L700+24
 17770 1e60 1C46     		mov	r4, r3
 17771 1e62 1346     		mov	r3, r2
 17772 1e64 07CB     		ldmia	r3!, {r0, r1, r2}
 17773 1e66 2060     		str	r0, [r4]	@ unaligned
 17774 1e68 6160     		str	r1, [r4, #4]	@ unaligned
 17775 1e6a A260     		str	r2, [r4, #8]	@ unaligned
 17776 1e6c 1A88     		ldrh	r2, [r3]	@ unaligned
 17777 1e6e 9B78     		ldrb	r3, [r3, #2]
 17778 1e70 A281     		strh	r2, [r4, #12]	@ unaligned
 17779 1e72 A373     		strb	r3, [r4, #14]
2315:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 17780              		.loc 1 2315 0
 17781 1e74 4D4A     		ldr	r2, .L700+8
 17782 1e76 D7F89430 		ldr	r3, [r7, #148]
 17783 1e7a 1344     		add	r3, r3, r2
 17784 1e7c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17785 1e7e 1946     		mov	r1, r3
 17786 1e80 D7F88820 		ldr	r2, [r7, #136]
 17787 1e84 0B46     		mov	r3, r1
 17788 1e86 9B00     		lsls	r3, r3, #2
 17789 1e88 0B44     		add	r3, r3, r1
 17790 1e8a 1344     		add	r3, r3, r2
 17791 1e8c 03F20623 		addw	r3, r3, #518
 17792 1e90 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17793 1e92 002B     		cmp	r3, #0
 17794 1e94 0FD0     		beq	.L665
2316:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17795              		.loc 1 2316 0
 17796 1e96 07F11803 		add	r3, r7, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 394


 17797 1e9a 1846     		mov	r0, r3
 17798 1e9c FFF7FEFF 		bl	strlen
 17799 1ea0 0346     		mov	r3, r0
 17800 1ea2 1A46     		mov	r2, r3
 17801 1ea4 07F11803 		add	r3, r7, #24
 17802 1ea8 1344     		add	r3, r3, r2
 17803 1eaa 414A     		ldr	r2, .L700+12
 17804 1eac 1068     		ldr	r0, [r2]	@ unaligned
 17805 1eae 1860     		str	r0, [r3]	@ unaligned
 17806 1eb0 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17807 1eb2 9A80     		strh	r2, [r3, #4]	@ unaligned
 17808 1eb4 0EE0     		b	.L666
 17809              	.L665:
2317:..\src/command_processing.c ****                 else
2318:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 17810              		.loc 1 2318 0
 17811 1eb6 07F11803 		add	r3, r7, #24
 17812 1eba 1846     		mov	r0, r3
 17813 1ebc FFF7FEFF 		bl	strlen
 17814 1ec0 0346     		mov	r3, r0
 17815 1ec2 1A46     		mov	r2, r3
 17816 1ec4 07F11803 		add	r3, r7, #24
 17817 1ec8 1344     		add	r3, r3, r2
 17818 1eca 364A     		ldr	r2, .L700
 17819 1ecc 1068     		ldr	r0, [r2]	@ unaligned
 17820 1ece 1860     		str	r0, [r3]	@ unaligned
 17821 1ed0 1279     		ldrb	r2, [r2, #4]
 17822 1ed2 1A71     		strb	r2, [r3, #4]
 17823              	.L666:
2319:..\src/command_processing.c ****                      
2320:..\src/command_processing.c ****                 strcat(info_string, str);
 17824              		.loc 1 2320 0 discriminator 2
 17825 1ed4 07F11803 		add	r3, r7, #24
 17826 1ed8 1946     		mov	r1, r3
 17827 1eda 7869     		ldr	r0, [r7, #20]
 17828 1edc FFF7FEFF 		bl	strcat
2290:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17829              		.loc 1 2290 0 discriminator 2
 17830 1ee0 D7F89430 		ldr	r3, [r7, #148]
 17831 1ee4 0133     		adds	r3, r3, #1
 17832 1ee6 C7F89430 		str	r3, [r7, #148]
 17833              	.L656:
2290:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17834              		.loc 1 2290 0 is_stmt 0 discriminator 1
 17835 1eea 354B     		ldr	r3, .L700+28
 17836 1eec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17837 1eee 1A46     		mov	r2, r3
 17838 1ef0 D7F89430 		ldr	r3, [r7, #148]
 17839 1ef4 9A42     		cmp	r2, r3
 17840 1ef6 3FF76FAE 		bgt	.L667
2321:..\src/command_processing.c ****             }       
2322:..\src/command_processing.c ****             
2323:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17841              		.loc 1 2323 0 is_stmt 1
 17842 1efa 7869     		ldr	r0, [r7, #20]
 17843 1efc FFF7FEFF 		bl	strlen
 17844 1f00 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 395


 17845 1f02 1A46     		mov	r2, r3
 17846 1f04 7B69     		ldr	r3, [r7, #20]
 17847 1f06 1344     		add	r3, r3, r2
 17848 1f08 2E4A     		ldr	r2, .L700+32
 17849 1f0a 1188     		ldrh	r1, [r2]	@ unaligned
 17850 1f0c 9278     		ldrb	r2, [r2, #2]
 17851 1f0e 1980     		strh	r1, [r3]	@ unaligned
 17852 1f10 9A70     		strb	r2, [r3, #2]
2324:..\src/command_processing.c ****           
2325:..\src/command_processing.c ****             IMU_reading_info(info_string);
 17853              		.loc 1 2325 0
 17854 1f12 7869     		ldr	r0, [r7, #20]
 17855 1f14 FFF7FEFF 		bl	IMU_reading_info
 17856              	.L655:
2326:..\src/command_processing.c ****         }
2327:..\src/command_processing.c ****         
2328:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17857              		.loc 1 2328 0
 17858 1f18 7869     		ldr	r0, [r7, #20]
 17859 1f1a FFF7FEFF 		bl	strlen
 17860 1f1e 0346     		mov	r3, r0
 17861 1f20 1A46     		mov	r2, r3
 17862 1f22 7B69     		ldr	r3, [r7, #20]
 17863 1f24 1344     		add	r3, r3, r2
 17864 1f26 274A     		ldr	r2, .L700+32
 17865 1f28 1188     		ldrh	r1, [r2]	@ unaligned
 17866 1f2a 9278     		ldrb	r2, [r2, #2]
 17867 1f2c 1980     		strh	r1, [r3]	@ unaligned
 17868 1f2e 9A70     		strb	r2, [r3, #2]
2329:..\src/command_processing.c **** 
2330:..\src/command_processing.c **** #ifdef GENERIC_FW   
2331:..\src/command_processing.c ****         int j;
2332:..\src/command_processing.c ****         strcat(info_string, "ENCODER CONFIGURATION\r\n");
 17869              		.loc 1 2332 0
 17870 1f30 7869     		ldr	r0, [r7, #20]
 17871 1f32 FFF7FEFF 		bl	strlen
 17872 1f36 0346     		mov	r3, r0
 17873 1f38 1A46     		mov	r2, r3
 17874 1f3a 7B69     		ldr	r3, [r7, #20]
 17875 1f3c 1344     		add	r3, r3, r2
 17876 1f3e 224A     		ldr	r2, .L700+36
 17877 1f40 1D46     		mov	r5, r3
 17878 1f42 1446     		mov	r4, r2
 17879 1f44 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17880 1f46 2860     		str	r0, [r5]	@ unaligned
 17881 1f48 6960     		str	r1, [r5, #4]	@ unaligned
 17882 1f4a AA60     		str	r2, [r5, #8]	@ unaligned
 17883 1f4c EB60     		str	r3, [r5, #12]	@ unaligned
 17884 1f4e 03CC     		ldmia	r4!, {r0, r1}
 17885 1f50 2861     		str	r0, [r5, #16]	@ unaligned
 17886 1f52 6961     		str	r1, [r5, #20]	@ unaligned
2333:..\src/command_processing.c ****         for (i = 0; i < N_ENCODER_LINE_MAX; i++) {
 17887              		.loc 1 2333 0
 17888 1f54 0023     		movs	r3, #0
 17889 1f56 C7F89430 		str	r3, [r7, #148]
 17890 1f5a BCE0     		b	.L668
 17891              	.L677:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 396


2334:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
 17892              		.loc 1 2334 0
 17893 1f5c 1B4A     		ldr	r2, .L700+40
 17894 1f5e D7F89430 		ldr	r3, [r7, #148]
 17895 1f62 1344     		add	r3, r3, r2
 17896 1f64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17897 1f66 07F11800 		add	r0, r7, #24
 17898 1f6a D7F89420 		ldr	r2, [r7, #148]
 17899 1f6e 1849     		ldr	r1, .L700+44
 17900 1f70 FFF7FEFF 		bl	sprintf
2335:..\src/command_processing.c ****             strcat(info_string, str);
 17901              		.loc 1 2335 0
 17902 1f74 07F11803 		add	r3, r7, #24
 17903 1f78 1946     		mov	r1, r3
 17904 1f7a 7869     		ldr	r0, [r7, #20]
 17905 1f7c FFF7FEFF 		bl	strcat
2336:..\src/command_processing.c ****             if (MEM_P->dev.right_left == i) {
 17906              		.loc 1 2336 0
 17907 1f80 D7F88830 		ldr	r3, [r7, #136]
 17908 1f84 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 17909 1f88 1A46     		mov	r2, r3
 17910 1f8a D7F89430 		ldr	r3, [r7, #148]
 17911 1f8e 9A42     		cmp	r2, r3
 17912 1f90 2FD1     		bne	.L669
2337:..\src/command_processing.c ****                 sprintf(str, " [%s HAND main encoder line]", (MEM_P->dev.right_left?"LEFT":"RIGHT")
 17913              		.loc 1 2337 0
 17914 1f92 D7F88830 		ldr	r3, [r7, #136]
 17915 1f96 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 17916 1f9a 002B     		cmp	r3, #0
 17917 1f9c 1CD0     		beq	.L670
 17918              		.loc 1 2337 0 is_stmt 0 discriminator 1
 17919 1f9e 0D4A     		ldr	r2, .L700+48
 17920 1fa0 1BE0     		b	.L671
 17921              	.L701:
 17922 1fa2 00BF     		.align	2
 17923              	.L700:
 17924 1fa4 FC120000 		.word	.LC175
 17925 1fa8 E01A0000 		.word	.LC255
 17926 1fac 00000000 		.word	IMU_connected
 17927 1fb0 F4120000 		.word	.LC174
 17928 1fb4 F01A0000 		.word	.LC256
 17929 1fb8 041B0000 		.word	.LC257
 17930 1fbc 141B0000 		.word	.LC258
 17931 1fc0 00000000 		.word	N_IMU_Connected
 17932 1fc4 30110000 		.word	.LC151
 17933 1fc8 241B0000 		.word	.LC259
 17934 1fcc 00000000 		.word	N_Encoder_Line_Connected
 17935 1fd0 3C1B0000 		.word	.LC260
 17936 1fd4 5C1B0000 		.word	.LC261
 17937              	.L670:
 17938              		.loc 1 2337 0 discriminator 2
 17939 1fd8 534A     		ldr	r2, .L702
 17940              	.L671:
 17941              		.loc 1 2337 0 discriminator 4
 17942 1fda 07F11803 		add	r3, r7, #24
 17943 1fde 5349     		ldr	r1, .L702+4
 17944 1fe0 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 397


 17945 1fe2 FFF7FEFF 		bl	sprintf
2338:..\src/command_processing.c ****                 strcat(info_string, str);
 17946              		.loc 1 2338 0 is_stmt 1 discriminator 4
 17947 1fe6 07F11803 		add	r3, r7, #24
 17948 1fea 1946     		mov	r1, r3
 17949 1fec 7869     		ldr	r0, [r7, #20]
 17950 1fee FFF7FEFF 		bl	strcat
 17951              	.L669:
2339:..\src/command_processing.c ****             }
2340:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17952              		.loc 1 2340 0
 17953 1ff2 7869     		ldr	r0, [r7, #20]
 17954 1ff4 FFF7FEFF 		bl	strlen
 17955 1ff8 0346     		mov	r3, r0
 17956 1ffa 1A46     		mov	r2, r3
 17957 1ffc 7B69     		ldr	r3, [r7, #20]
 17958 1ffe 1344     		add	r3, r3, r2
 17959 2000 4B4A     		ldr	r2, .L702+8
 17960 2002 1188     		ldrh	r1, [r2]	@ unaligned
 17961 2004 9278     		ldrb	r2, [r2, #2]
 17962 2006 1980     		strh	r1, [r3]	@ unaligned
 17963 2008 9A70     		strb	r2, [r3, #2]
2341:..\src/command_processing.c ****             if (N_Encoder_Line_Connected[i] > 0) {
 17964              		.loc 1 2341 0
 17965 200a 4A4A     		ldr	r2, .L702+12
 17966 200c D7F89430 		ldr	r3, [r7, #148]
 17967 2010 1344     		add	r3, r3, r2
 17968 2012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17969 2014 002B     		cmp	r3, #0
 17970 2016 59D0     		beq	.L672
2342:..\src/command_processing.c ****                 strcat(info_string, "Raw value [status]:\r\n");
 17971              		.loc 1 2342 0
 17972 2018 7869     		ldr	r0, [r7, #20]
 17973 201a FFF7FEFF 		bl	strlen
 17974 201e 0346     		mov	r3, r0
 17975 2020 1A46     		mov	r2, r3
 17976 2022 7B69     		ldr	r3, [r7, #20]
 17977 2024 1344     		add	r3, r3, r2
 17978 2026 444A     		ldr	r2, .L702+16
 17979 2028 1D46     		mov	r5, r3
 17980 202a 1446     		mov	r4, r2
 17981 202c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17982 202e 2860     		str	r0, [r5]	@ unaligned
 17983 2030 6960     		str	r1, [r5, #4]	@ unaligned
 17984 2032 AA60     		str	r2, [r5, #8]	@ unaligned
 17985 2034 EB60     		str	r3, [r5, #12]	@ unaligned
 17986 2036 2068     		ldr	r0, [r4]	@ unaligned
 17987 2038 2861     		str	r0, [r5, #16]	@ unaligned
 17988 203a A388     		ldrh	r3, [r4, #4]	@ unaligned
 17989 203c AB82     		strh	r3, [r5, #20]	@ unaligned
2343:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
 17990              		.loc 1 2343 0
 17991 203e 0023     		movs	r3, #0
 17992 2040 C7F88C30 		str	r3, [r7, #140]
 17993 2044 2CE0     		b	.L673
 17994              	.L676:
2344:..\src/command_processing.c ****                     sprintf(str, "%d\t[%s]\r\n", (uint16) Encoder_Value[i][j], (Encoder_Check[i][j]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 398


 17995              		.loc 1 2344 0
 17996 2046 3D49     		ldr	r1, .L702+20
 17997 2048 D7F89420 		ldr	r2, [r7, #148]
 17998 204c 1346     		mov	r3, r2
 17999 204e 9B00     		lsls	r3, r3, #2
 18000 2050 1344     		add	r3, r3, r2
 18001 2052 D7F88C20 		ldr	r2, [r7, #140]
 18002 2056 1344     		add	r3, r3, r2
 18003 2058 31F81330 		ldrh	r3, [r1, r3, lsl #1]
 18004 205c 1C46     		mov	r4, r3
 18005 205e 3849     		ldr	r1, .L702+24
 18006 2060 D7F89420 		ldr	r2, [r7, #148]
 18007 2064 1346     		mov	r3, r2
 18008 2066 9B00     		lsls	r3, r3, #2
 18009 2068 1344     		add	r3, r3, r2
 18010 206a CA18     		adds	r2, r1, r3
 18011 206c D7F88C30 		ldr	r3, [r7, #140]
 18012 2070 1344     		add	r3, r3, r2
 18013 2072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18014 2074 102B     		cmp	r3, #16
 18015 2076 01D1     		bne	.L674
 18016              		.loc 1 2344 0 is_stmt 0 discriminator 1
 18017 2078 324B     		ldr	r3, .L702+28
 18018 207a 00E0     		b	.L675
 18019              	.L674:
 18020              		.loc 1 2344 0 discriminator 2
 18021 207c 324B     		ldr	r3, .L702+32
 18022              	.L675:
 18023              		.loc 1 2344 0 discriminator 4
 18024 207e 07F11800 		add	r0, r7, #24
 18025 2082 2246     		mov	r2, r4
 18026 2084 3149     		ldr	r1, .L702+36
 18027 2086 FFF7FEFF 		bl	sprintf
2345:..\src/command_processing.c ****                     strcat(info_string, str);
 18028              		.loc 1 2345 0 is_stmt 1 discriminator 4
 18029 208a 07F11803 		add	r3, r7, #24
 18030 208e 1946     		mov	r1, r3
 18031 2090 7869     		ldr	r0, [r7, #20]
 18032 2092 FFF7FEFF 		bl	strcat
2343:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
 18033              		.loc 1 2343 0 discriminator 4
 18034 2096 D7F88C30 		ldr	r3, [r7, #140]
 18035 209a 0133     		adds	r3, r3, #1
 18036 209c C7F88C30 		str	r3, [r7, #140]
 18037              	.L673:
2343:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
 18038              		.loc 1 2343 0 is_stmt 0 discriminator 2
 18039 20a0 244A     		ldr	r2, .L702+12
 18040 20a2 D7F89430 		ldr	r3, [r7, #148]
 18041 20a6 1344     		add	r3, r3, r2
 18042 20a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18043 20aa 1A46     		mov	r2, r3
 18044 20ac D7F88C30 		ldr	r3, [r7, #140]
 18045 20b0 9A42     		cmp	r2, r3
 18046 20b2 C8DC     		bgt	.L676
2346:..\src/command_processing.c ****                 }
2347:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 399


 18047              		.loc 1 2347 0 is_stmt 1
 18048 20b4 7869     		ldr	r0, [r7, #20]
 18049 20b6 FFF7FEFF 		bl	strlen
 18050 20ba 0346     		mov	r3, r0
 18051 20bc 1A46     		mov	r2, r3
 18052 20be 7B69     		ldr	r3, [r7, #20]
 18053 20c0 1344     		add	r3, r3, r2
 18054 20c2 1B4A     		ldr	r2, .L702+8
 18055 20c4 1188     		ldrh	r1, [r2]	@ unaligned
 18056 20c6 9278     		ldrb	r2, [r2, #2]
 18057 20c8 1980     		strh	r1, [r3]	@ unaligned
 18058 20ca 9A70     		strb	r2, [r3, #2]
 18059              	.L672:
2333:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
 18060              		.loc 1 2333 0 discriminator 2
 18061 20cc D7F89430 		ldr	r3, [r7, #148]
 18062 20d0 0133     		adds	r3, r3, #1
 18063 20d2 C7F89430 		str	r3, [r7, #148]
 18064              	.L668:
2333:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
 18065              		.loc 1 2333 0 is_stmt 0 discriminator 1
 18066 20d6 D7F89430 		ldr	r3, [r7, #148]
 18067 20da 012B     		cmp	r3, #1
 18068 20dc 7FF73EAF 		ble	.L677
2348:..\src/command_processing.c ****             }
2349:..\src/command_processing.c ****         }
2350:..\src/command_processing.c **** #endif   
2351:..\src/command_processing.c ****         
2352:..\src/command_processing.c **** #ifdef MASTER_FW
2353:..\src/command_processing.c ****         if (MEM_P->MS.slave_comm_active)
2354:..\src/command_processing.c ****             strcat(info_string, "Slave communication active: YES\r\n");
2355:..\src/command_processing.c ****         else
2356:..\src/command_processing.c ****             strcat(info_string, "Slave communication active: NO\r\n");
2357:..\src/command_processing.c **** 
2358:..\src/command_processing.c ****         sprintf(str, "Slave ID: %d\r\n", (int)MEM_P->MS.slave_ID);
2359:..\src/command_processing.c ****         strcat(info_string, str);
2360:..\src/command_processing.c **** #endif
2361:..\src/command_processing.c **** 
2362:..\src/command_processing.c ****         sprintf(str, "Last FW cycle time: %u us\r\n", (uint16)timer_value0 - (uint16)timer_value);
 18069              		.loc 1 2362 0 is_stmt 1
 18070 20e0 1B4B     		ldr	r3, .L702+40
 18071 20e2 1B88     		ldrh	r3, [r3]
 18072 20e4 1A46     		mov	r2, r3
 18073 20e6 1B4B     		ldr	r3, .L702+44
 18074 20e8 1B88     		ldrh	r3, [r3]
 18075 20ea D21A     		subs	r2, r2, r3
 18076 20ec 07F11803 		add	r3, r7, #24
 18077 20f0 1949     		ldr	r1, .L702+48
 18078 20f2 1846     		mov	r0, r3
 18079 20f4 FFF7FEFF 		bl	sprintf
2363:..\src/command_processing.c ****         strcat(info_string, str);
 18080              		.loc 1 2363 0
 18081 20f8 07F11803 		add	r3, r7, #24
 18082 20fc 1946     		mov	r1, r3
 18083 20fe 7869     		ldr	r0, [r7, #20]
 18084 2100 FFF7FEFF 		bl	strcat
2364:..\src/command_processing.c ****   
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 400


2365:..\src/command_processing.c ****         strcat(info_string, "\r\n\0");      // End of info_string
 18085              		.loc 1 2365 0
 18086 2104 7869     		ldr	r0, [r7, #20]
 18087 2106 FFF7FEFF 		bl	strlen
 18088 210a 0346     		mov	r3, r0
 18089 210c 1A46     		mov	r2, r3
 18090 210e 7B69     		ldr	r3, [r7, #20]
 18091 2110 1344     		add	r3, r3, r2
 18092 2112 124A     		ldr	r2, .L702+52
 18093 2114 1188     		ldrh	r1, [r2]	@ unaligned
 18094 2116 9278     		ldrb	r2, [r2, #2]
 18095 2118 1980     		strh	r1, [r3]	@ unaligned
 18096 211a 9A70     		strb	r2, [r3, #2]
 18097              	.L679:
 18098              	.LBE20:
2366:..\src/command_processing.c ****     }
2367:..\src/command_processing.c **** }
 18099              		.loc 1 2367 0
 18100 211c 00BF     		nop
 18101 211e 9C37     		adds	r7, r7, #156
 18102              		.cfi_def_cfa_offset 36
 18103 2120 BD46     		mov	sp, r7
 18104              		.cfi_def_cfa_register 13
 18105              		@ sp needed
 18106 2122 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 18107              	.L703:
 18108 2126 00BF     		.align	2
 18109              	.L702:
 18110 2128 641B0000 		.word	.LC262
 18111 212c 6C1B0000 		.word	.LC263
 18112 2130 30110000 		.word	.LC151
 18113 2134 00000000 		.word	N_Encoder_Line_Connected
 18114 2138 8C1B0000 		.word	.LC264
 18115 213c 00000000 		.word	Encoder_Value
 18116 2140 00000000 		.word	Encoder_Check
 18117 2144 A41B0000 		.word	.LC265
 18118 2148 A81B0000 		.word	.LC266
 18119 214c AC1B0000 		.word	.LC267
 18120 2150 00000000 		.word	timer_value0
 18121 2154 00000000 		.word	timer_value
 18122 2158 B81B0000 		.word	.LC268
 18123 215c D41B0000 		.word	.LC269
 18124              		.cfi_endproc
 18125              	.LFE72:
 18126              		.size	prepare_generic_info, .-prepare_generic_info
 18127              		.section	.rodata
 18128              		.align	2
 18129              	.LC270:
 18130 1bd8 0D0A5553 		.ascii	"\015\012USAGE STATISTICS\015\012\000"
 18130      41474520 
 18130      53544154 
 18130      49535449 
 18130      43530D0A 
 18131 1bed 000000   		.align	2
 18132              	.LC271:
 18133 1bf0 44617465 		.ascii	"Date of HW maintenance: %02d/%02d/20%02d\015\012\000"
 18133      206F6620 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 401


 18133      4857206D 
 18133      61696E74 
 18133      656E616E 
 18134 1c1b 00       		.align	2
 18135              	.LC272:
 18136 1c1c 44617465 		.ascii	"Date of usage stats period begin: %02d/%02d/20%02d\015"
 18136      206F6620 
 18136      75736167 
 18136      65207374 
 18136      61747320 
 18137 1c4f 0A00     		.ascii	"\012\000"
 18138 1c51 000000   		.align	2
 18139              	.LC273:
 18140 1c54 4C617374 		.ascii	"Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\015"
 18140      20636865 
 18140      636B6564 
 18140      2054696D 
 18140      653A2025 
 18141 1c87 0A00     		.ascii	"\012\000"
 18142 1c89 000000   		.align	2
 18143              	.LC274:
 18144 1c8c 506F7369 		.ascii	"Positions histogram (ticks):\015\012\000"
 18144      74696F6E 
 18144      73206869 
 18144      73746F67 
 18144      72616D20 
 18145 1cab 00       		.align	2
 18146              	.LC275:
 18147 1cac 42696E20 		.ascii	"Bin %d [%d-%d]: %lu\015\012\000"
 18147      2564205B 
 18147      25642D25 
 18147      645D3A20 
 18147      256C750D 
 18148 1cc2 0000     		.align	2
 18149              	.LC276:
 18150 1cc4 43757272 		.ascii	"Current histogram (mA):\015\012\000"
 18150      656E7420 
 18150      68697374 
 18150      6F677261 
 18150      6D20286D 
 18151 1cde 0000     		.align	2
 18152              	.LC277:
 18153 1ce0 54687265 		.ascii	"Threshold %d [%d-%d]: %lu\015\012\000"
 18153      73686F6C 
 18153      64202564 
 18153      205B2564 
 18153      2D25645D 
 18154              		.align	2
 18155              	.LC278:
 18156 1cfc 454D4720 		.ascii	"EMG activations counter: %lu, %lu\000"
 18156      61637469 
 18156      76617469 
 18156      6F6E7320 
 18156      636F756E 
 18157 1d1e 0000     		.align	2
 18158              	.LC279:
 18159 1d20 52657374 		.ascii	"Rest position occurrences: %lu\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 402


 18159      20706F73 
 18159      6974696F 
 18159      6E206F63 
 18159      63757272 
 18160 1d3f 00       		.align	2
 18161              	.LC280:
 18162 1d40 416E676C 		.ascii	"Angle total displacement (ticks): %lu\000"
 18162      6520746F 
 18162      74616C20 
 18162      64697370 
 18162      6C616365 
 18163 1d66 0000     		.align	2
 18164              	.LC281:
 18165 1d68 546F7461 		.ascii	"Total power on time (sec): %lu\000"
 18165      6C20706F 
 18165      77657220 
 18165      6F6E2074 
 18165      696D6520 
 18166 1d87 00       		.align	2
 18167              	.LC282:
 18168 1d88 546F7461 		.ascii	"Total rest position time (sec): %lu\000"
 18168      6C207265 
 18168      73742070 
 18168      6F736974 
 18168      696F6E20 
 18169              		.section	.text.prepare_counter_info,"ax",%progbits
 18170              		.align	2
 18171              		.global	prepare_counter_info
 18172              		.thumb
 18173              		.thumb_func
 18174              		.type	prepare_counter_info, %function
 18175              	prepare_counter_info:
 18176              	.LFB73:
2368:..\src/command_processing.c **** 
2369:..\src/command_processing.c **** //==============================================================================
2370:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
2371:..\src/command_processing.c **** //==============================================================================
2372:..\src/command_processing.c **** 
2373:..\src/command_processing.c **** void prepare_counter_info(char *info_string)
2374:..\src/command_processing.c **** {
 18177              		.loc 1 2374 0
 18178              		.cfi_startproc
 18179              		@ args = 0, pretend = 0, frame = 128
 18180              		@ frame_needed = 1, uses_anonymous_args = 0
 18181 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 18182              		.cfi_def_cfa_offset 20
 18183              		.cfi_offset 4, -20
 18184              		.cfi_offset 5, -16
 18185              		.cfi_offset 6, -12
 18186              		.cfi_offset 7, -8
 18187              		.cfi_offset 14, -4
 18188 0002 A5B0     		sub	sp, sp, #148
 18189              		.cfi_def_cfa_offset 168
 18190 0004 04AF     		add	r7, sp, #16
 18191              		.cfi_def_cfa 7, 152
 18192 0006 7860     		str	r0, [r7, #4]
2375:..\src/command_processing.c ****     char str[100];  
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 403


2376:..\src/command_processing.c ****     int i;
2377:..\src/command_processing.c ****     int step;
2378:..\src/command_processing.c **** 
2379:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 18193              		.loc 1 2379 0
 18194 0008 7F4B     		ldr	r3, .L710
 18195 000a BB67     		str	r3, [r7, #120]
2380:..\src/command_processing.c ****     struct st_motor* MOT = &(MEM_P->motor[0]);      // Default motor
 18196              		.loc 1 2380 0
 18197 000c BB6F     		ldr	r3, [r7, #120]
 18198 000e B033     		adds	r3, r3, #176
 18199 0010 7B67     		str	r3, [r7, #116]
2381:..\src/command_processing.c ****     uint8 ENC_L = MOT->encoder_line;                // Associated encoder line
 18200              		.loc 1 2381 0
 18201 0012 7B6F     		ldr	r3, [r7, #116]
 18202 0014 93F86030 		ldrb	r3, [r3, #96]
 18203 0018 87F87330 		strb	r3, [r7, #115]
2382:..\src/command_processing.c ****     
2383:..\src/command_processing.c ****     strcpy(info_string, "");
 18204              		.loc 1 2383 0
 18205 001c 7B68     		ldr	r3, [r7, #4]
 18206 001e 0022     		movs	r2, #0
 18207 0020 1A70     		strb	r2, [r3]
2384:..\src/command_processing.c ****     
2385:..\src/command_processing.c ****     strcat(info_string, "\r\nUSAGE STATISTICS\r\n");
 18208              		.loc 1 2385 0
 18209 0022 7868     		ldr	r0, [r7, #4]
 18210 0024 FFF7FEFF 		bl	strlen
 18211 0028 0346     		mov	r3, r0
 18212 002a 1A46     		mov	r2, r3
 18213 002c 7B68     		ldr	r3, [r7, #4]
 18214 002e 1344     		add	r3, r3, r2
 18215 0030 764A     		ldr	r2, .L710+4
 18216 0032 1D46     		mov	r5, r3
 18217 0034 1446     		mov	r4, r2
 18218 0036 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18219 0038 2860     		str	r0, [r5]	@ unaligned
 18220 003a 6960     		str	r1, [r5, #4]	@ unaligned
 18221 003c AA60     		str	r2, [r5, #8]	@ unaligned
 18222 003e EB60     		str	r3, [r5, #12]	@ unaligned
 18223 0040 2068     		ldr	r0, [r4]	@ unaligned
 18224 0042 2861     		str	r0, [r5, #16]	@ unaligned
 18225 0044 2379     		ldrb	r3, [r4, #4]
 18226 0046 2B75     		strb	r3, [r5, #20]
2386:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18227              		.loc 1 2386 0
 18228 0048 7868     		ldr	r0, [r7, #4]
 18229 004a FFF7FEFF 		bl	strlen
 18230 004e 0346     		mov	r3, r0
 18231 0050 1A46     		mov	r2, r3
 18232 0052 7B68     		ldr	r3, [r7, #4]
 18233 0054 1344     		add	r3, r3, r2
 18234 0056 6E4A     		ldr	r2, .L710+8
 18235 0058 1188     		ldrh	r1, [r2]	@ unaligned
 18236 005a 9278     		ldrb	r2, [r2, #2]
 18237 005c 1980     		strh	r1, [r3]	@ unaligned
 18238 005e 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 404


2387:..\src/command_processing.c ****     
2388:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 18239              		.loc 1 2388 0
 18240 0060 BB6F     		ldr	r3, [r7, #120]
 18241 0062 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 18242 0066 1A46     		mov	r2, r3
 18243 0068 BB6F     		ldr	r3, [r7, #120]
 18244 006a 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 18245 006e 1946     		mov	r1, r3
 18246 0070 BB6F     		ldr	r3, [r7, #120]
 18247 0072 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 18248 0076 07F10800 		add	r0, r7, #8
 18249 007a 0093     		str	r3, [sp]
 18250 007c 0B46     		mov	r3, r1
 18251 007e 6549     		ldr	r1, .L710+12
 18252 0080 FFF7FEFF 		bl	sprintf
2389:..\src/command_processing.c ****     strcat(info_string, str);
 18253              		.loc 1 2389 0
 18254 0084 07F10803 		add	r3, r7, #8
 18255 0088 1946     		mov	r1, r3
 18256 008a 7868     		ldr	r0, [r7, #4]
 18257 008c FFF7FEFF 		bl	strcat
2390:..\src/command_processing.c ****     
2391:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 18258              		.loc 1 2391 0
 18259 0090 BB6F     		ldr	r3, [r7, #120]
 18260 0092 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 18261 0096 1A46     		mov	r2, r3
 18262 0098 BB6F     		ldr	r3, [r7, #120]
 18263 009a 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 18264 009e 1946     		mov	r1, r3
 18265 00a0 BB6F     		ldr	r3, [r7, #120]
 18266 00a2 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 18267 00a6 07F10800 		add	r0, r7, #8
 18268 00aa 0093     		str	r3, [sp]
 18269 00ac 0B46     		mov	r3, r1
 18270 00ae 5A49     		ldr	r1, .L710+16
 18271 00b0 FFF7FEFF 		bl	sprintf
2392:..\src/command_processing.c ****     strcat(info_string, str);
 18272              		.loc 1 2392 0
 18273 00b4 07F10803 		add	r3, r7, #8
 18274 00b8 1946     		mov	r1, r3
 18275 00ba 7868     		ldr	r0, [r7, #4]
 18276 00bc FFF7FEFF 		bl	strcat
2393:..\src/command_processing.c ****             
2394:..\src/command_processing.c ****     sprintf(str, "Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\r\n", (int)MEM_P->exp.curr_tim
 18277              		.loc 1 2394 0
 18278 00c0 BB6F     		ldr	r3, [r7, #120]
 18279 00c2 93F82032 		ldrb	r3, [r3, #544]	@ zero_extendqisi2
 18280 00c6 1D46     		mov	r5, r3
 18281 00c8 BB6F     		ldr	r3, [r7, #120]
 18282 00ca 93F82132 		ldrb	r3, [r3, #545]	@ zero_extendqisi2
 18283 00ce 1E46     		mov	r6, r3
 18284 00d0 BB6F     		ldr	r3, [r7, #120]
 18285 00d2 93F82232 		ldrb	r3, [r3, #546]	@ zero_extendqisi2
 18286 00d6 1A46     		mov	r2, r3
 18287 00d8 BB6F     		ldr	r3, [r7, #120]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 405


 18288 00da 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 18289 00de 1946     		mov	r1, r3
 18290 00e0 BB6F     		ldr	r3, [r7, #120]
 18291 00e2 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 18292 00e6 1C46     		mov	r4, r3
 18293 00e8 BB6F     		ldr	r3, [r7, #120]
 18294 00ea 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 18295 00ee 07F10800 		add	r0, r7, #8
 18296 00f2 0393     		str	r3, [sp, #12]
 18297 00f4 0294     		str	r4, [sp, #8]
 18298 00f6 0191     		str	r1, [sp, #4]
 18299 00f8 0092     		str	r2, [sp]
 18300 00fa 3346     		mov	r3, r6
 18301 00fc 2A46     		mov	r2, r5
 18302 00fe 4749     		ldr	r1, .L710+20
 18303 0100 FFF7FEFF 		bl	sprintf
2395:..\src/command_processing.c ****     strcat(info_string, str);
 18304              		.loc 1 2395 0
 18305 0104 07F10803 		add	r3, r7, #8
 18306 0108 1946     		mov	r1, r3
 18307 010a 7868     		ldr	r0, [r7, #4]
 18308 010c FFF7FEFF 		bl	strcat
2396:..\src/command_processing.c ****     
2397:..\src/command_processing.c ****     sprintf(str, "Positions histogram (ticks):\r\n");
 18309              		.loc 1 2397 0
 18310 0110 07F10803 		add	r3, r7, #8
 18311 0114 424A     		ldr	r2, .L710+24
 18312 0116 1C46     		mov	r4, r3
 18313 0118 1546     		mov	r5, r2
 18314 011a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 18315 011c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 18316 011e 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 18317 0122 07C4     		stmia	r4!, {r0, r1, r2}
 18318 0124 2380     		strh	r3, [r4]	@ movhi
 18319 0126 0234     		adds	r4, r4, #2
 18320 0128 1B0C     		lsrs	r3, r3, #16
 18321 012a 2370     		strb	r3, [r4]
2398:..\src/command_processing.c ****     strcat(info_string, str);
 18322              		.loc 1 2398 0
 18323 012c 07F10803 		add	r3, r7, #8
 18324 0130 1946     		mov	r1, r3
 18325 0132 7868     		ldr	r0, [r7, #4]
 18326 0134 FFF7FEFF 		bl	strcat
2399:..\src/command_processing.c ****     step = ( (int)(MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]) / 10);
 18327              		.loc 1 2399 0
 18328 0138 7B6F     		ldr	r3, [r7, #116]
 18329 013a 996B     		ldr	r1, [r3, #56]
 18330 013c 97F87320 		ldrb	r2, [r7, #115]	@ zero_extendqisi2
 18331 0140 B86F     		ldr	r0, [r7, #120]
 18332 0142 1346     		mov	r3, r2
 18333 0144 5B00     		lsls	r3, r3, #1
 18334 0146 1344     		add	r3, r3, r2
 18335 0148 1B01     		lsls	r3, r3, #4
 18336 014a 0344     		add	r3, r3, r0
 18337 014c 03F29513 		addw	r3, r3, #405
 18338 0150 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18339 0152 41FA03F3 		asr	r3, r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 406


 18340 0156 334A     		ldr	r2, .L710+28
 18341 0158 82FB0312 		smull	r1, r2, r2, r3
 18342 015c 9210     		asrs	r2, r2, #2
 18343 015e DB17     		asrs	r3, r3, #31
 18344 0160 D31A     		subs	r3, r2, r3
 18345 0162 FB66     		str	r3, [r7, #108]
2400:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 18346              		.loc 1 2400 0
 18347 0164 0123     		movs	r3, #1
 18348 0166 FB67     		str	r3, [r7, #124]
 18349 0168 21E0     		b	.L705
 18350              	.L706:
2401:..\src/command_processing.c ****         sprintf(str, "Bin %d [%d-%d]: %lu\r\n", i, step*(i-1)+1, step*(i), MEM_P->cnt.position_hist
 18351              		.loc 1 2401 0 discriminator 3
 18352 016a FB6F     		ldr	r3, [r7, #124]
 18353 016c 013B     		subs	r3, r3, #1
 18354 016e FA6E     		ldr	r2, [r7, #108]
 18355 0170 02FB03F3 		mul	r3, r2, r3
 18356 0174 5C1C     		adds	r4, r3, #1
 18357 0176 FB6E     		ldr	r3, [r7, #108]
 18358 0178 FA6F     		ldr	r2, [r7, #124]
 18359 017a 02FB03F3 		mul	r3, r2, r3
 18360 017e FA6F     		ldr	r2, [r7, #124]
 18361 0180 511E     		subs	r1, r2, #1
 18362 0182 BA6F     		ldr	r2, [r7, #120]
 18363 0184 0631     		adds	r1, r1, #6
 18364 0186 52F82120 		ldr	r2, [r2, r1, lsl #2]
 18365 018a 07F10800 		add	r0, r7, #8
 18366 018e 0192     		str	r2, [sp, #4]
 18367 0190 0093     		str	r3, [sp]
 18368 0192 2346     		mov	r3, r4
 18369 0194 FA6F     		ldr	r2, [r7, #124]
 18370 0196 2449     		ldr	r1, .L710+32
 18371 0198 FFF7FEFF 		bl	sprintf
2402:..\src/command_processing.c ****         strcat(info_string, str);
 18372              		.loc 1 2402 0 discriminator 3
 18373 019c 07F10803 		add	r3, r7, #8
 18374 01a0 1946     		mov	r1, r3
 18375 01a2 7868     		ldr	r0, [r7, #4]
 18376 01a4 FFF7FEFF 		bl	strcat
2400:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 18377              		.loc 1 2400 0 discriminator 3
 18378 01a8 FB6F     		ldr	r3, [r7, #124]
 18379 01aa 0133     		adds	r3, r3, #1
 18380 01ac FB67     		str	r3, [r7, #124]
 18381              	.L705:
2400:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 18382              		.loc 1 2400 0 is_stmt 0 discriminator 1
 18383 01ae FB6F     		ldr	r3, [r7, #124]
 18384 01b0 0A2B     		cmp	r3, #10
 18385 01b2 DADD     		ble	.L706
2403:..\src/command_processing.c ****     }
2404:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18386              		.loc 1 2404 0 is_stmt 1
 18387 01b4 7868     		ldr	r0, [r7, #4]
 18388 01b6 FFF7FEFF 		bl	strlen
 18389 01ba 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 407


 18390 01bc 1A46     		mov	r2, r3
 18391 01be 7B68     		ldr	r3, [r7, #4]
 18392 01c0 1344     		add	r3, r3, r2
 18393 01c2 134A     		ldr	r2, .L710+8
 18394 01c4 1188     		ldrh	r1, [r2]	@ unaligned
 18395 01c6 9278     		ldrb	r2, [r2, #2]
 18396 01c8 1980     		strh	r1, [r3]	@ unaligned
 18397 01ca 9A70     		strb	r2, [r3, #2]
2405:..\src/command_processing.c ****     
2406:..\src/command_processing.c ****     sprintf(str, "Current histogram (mA):\r\n");
 18398              		.loc 1 2406 0
 18399 01cc 07F10803 		add	r3, r7, #8
 18400 01d0 164A     		ldr	r2, .L710+36
 18401 01d2 1C46     		mov	r4, r3
 18402 01d4 1546     		mov	r5, r2
 18403 01d6 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 18404 01d8 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 18405 01da 95E80700 		ldmia	r5, {r0, r1, r2}
 18406 01de 03C4     		stmia	r4!, {r0, r1}
 18407 01e0 2280     		strh	r2, [r4]	@ movhi
2407:..\src/command_processing.c ****     strcat(info_string, str);
 18408              		.loc 1 2407 0
 18409 01e2 07F10803 		add	r3, r7, #8
 18410 01e6 1946     		mov	r1, r3
 18411 01e8 7868     		ldr	r0, [r7, #4]
 18412 01ea FFF7FEFF 		bl	strcat
2408:..\src/command_processing.c ****     step = ( (int)(MOT->current_limit) / 4);
 18413              		.loc 1 2408 0
 18414 01ee 7B6F     		ldr	r3, [r7, #116]
 18415 01f0 B3F95C30 		ldrsh	r3, [r3, #92]
 18416 01f4 002B     		cmp	r3, #0
 18417 01f6 00DA     		bge	.L707
 18418 01f8 0333     		adds	r3, r3, #3
 18419              	.L707:
 18420 01fa 9B10     		asrs	r3, r3, #2
 18421 01fc 1BB2     		sxth	r3, r3
 18422 01fe FB66     		str	r3, [r7, #108]
2409:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 18423              		.loc 1 2409 0
 18424 0200 0123     		movs	r3, #1
 18425 0202 FB67     		str	r3, [r7, #124]
 18426 0204 35E0     		b	.L708
 18427              	.L711:
 18428 0206 00BF     		.align	2
 18429              	.L710:
 18430 0208 00000000 		.word	g_mem
 18431 020c D81B0000 		.word	.LC270
 18432 0210 30110000 		.word	.LC151
 18433 0214 F01B0000 		.word	.LC271
 18434 0218 1C1C0000 		.word	.LC272
 18435 021c 541C0000 		.word	.LC273
 18436 0220 8C1C0000 		.word	.LC274
 18437 0224 67666666 		.word	1717986919
 18438 0228 AC1C0000 		.word	.LC275
 18439 022c C41C0000 		.word	.LC276
 18440              	.L709:
2410:..\src/command_processing.c ****         sprintf(str, "Threshold %d [%d-%d]: %lu\r\n", i, step*(i-1), step*(i), MEM_P->cnt.current_h
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 408


 18441              		.loc 1 2410 0 discriminator 3
 18442 0230 FB6F     		ldr	r3, [r7, #124]
 18443 0232 013B     		subs	r3, r3, #1
 18444 0234 FA6E     		ldr	r2, [r7, #108]
 18445 0236 02FB03F4 		mul	r4, r2, r3
 18446 023a FB6E     		ldr	r3, [r7, #108]
 18447 023c FA6F     		ldr	r2, [r7, #124]
 18448 023e 02FB03F3 		mul	r3, r2, r3
 18449 0242 FA6F     		ldr	r2, [r7, #124]
 18450 0244 511E     		subs	r1, r2, #1
 18451 0246 BA6F     		ldr	r2, [r7, #120]
 18452 0248 1031     		adds	r1, r1, #16
 18453 024a 52F82120 		ldr	r2, [r2, r1, lsl #2]
 18454 024e 07F10800 		add	r0, r7, #8
 18455 0252 0192     		str	r2, [sp, #4]
 18456 0254 0093     		str	r3, [sp]
 18457 0256 2346     		mov	r3, r4
 18458 0258 FA6F     		ldr	r2, [r7, #124]
 18459 025a 5149     		ldr	r1, .L712
 18460 025c FFF7FEFF 		bl	sprintf
2411:..\src/command_processing.c ****         strcat(info_string, str);
 18461              		.loc 1 2411 0 discriminator 3
 18462 0260 07F10803 		add	r3, r7, #8
 18463 0264 1946     		mov	r1, r3
 18464 0266 7868     		ldr	r0, [r7, #4]
 18465 0268 FFF7FEFF 		bl	strcat
2409:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 18466              		.loc 1 2409 0 discriminator 3
 18467 026c FB6F     		ldr	r3, [r7, #124]
 18468 026e 0133     		adds	r3, r3, #1
 18469 0270 FB67     		str	r3, [r7, #124]
 18470              	.L708:
2409:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 18471              		.loc 1 2409 0 is_stmt 0 discriminator 1
 18472 0272 FB6F     		ldr	r3, [r7, #124]
 18473 0274 042B     		cmp	r3, #4
 18474 0276 DBDD     		ble	.L709
2412:..\src/command_processing.c ****     }
2413:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18475              		.loc 1 2413 0 is_stmt 1
 18476 0278 7868     		ldr	r0, [r7, #4]
 18477 027a FFF7FEFF 		bl	strlen
 18478 027e 0346     		mov	r3, r0
 18479 0280 1A46     		mov	r2, r3
 18480 0282 7B68     		ldr	r3, [r7, #4]
 18481 0284 1344     		add	r3, r3, r2
 18482 0286 474A     		ldr	r2, .L712+4
 18483 0288 1188     		ldrh	r1, [r2]	@ unaligned
 18484 028a 9278     		ldrb	r2, [r2, #2]
 18485 028c 1980     		strh	r1, [r3]	@ unaligned
 18486 028e 9A70     		strb	r2, [r3, #2]
2414:..\src/command_processing.c ****             
2415:..\src/command_processing.c ****     sprintf(str, "EMG activations counter: %lu, %lu", MEM_P->cnt.emg_counter[0], MEM_P->cnt.emg_cou
 18487              		.loc 1 2415 0
 18488 0290 BB6F     		ldr	r3, [r7, #120]
 18489 0292 1A69     		ldr	r2, [r3, #16]
 18490 0294 BB6F     		ldr	r3, [r7, #120]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 409


 18491 0296 5B69     		ldr	r3, [r3, #20]
 18492 0298 07F10800 		add	r0, r7, #8
 18493 029c 4249     		ldr	r1, .L712+8
 18494 029e FFF7FEFF 		bl	sprintf
2416:..\src/command_processing.c ****     strcat(info_string, str);
 18495              		.loc 1 2416 0
 18496 02a2 07F10803 		add	r3, r7, #8
 18497 02a6 1946     		mov	r1, r3
 18498 02a8 7868     		ldr	r0, [r7, #4]
 18499 02aa FFF7FEFF 		bl	strcat
2417:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18500              		.loc 1 2417 0
 18501 02ae 7868     		ldr	r0, [r7, #4]
 18502 02b0 FFF7FEFF 		bl	strlen
 18503 02b4 0346     		mov	r3, r0
 18504 02b6 1A46     		mov	r2, r3
 18505 02b8 7B68     		ldr	r3, [r7, #4]
 18506 02ba 1344     		add	r3, r3, r2
 18507 02bc 394A     		ldr	r2, .L712+4
 18508 02be 1188     		ldrh	r1, [r2]	@ unaligned
 18509 02c0 9278     		ldrb	r2, [r2, #2]
 18510 02c2 1980     		strh	r1, [r3]	@ unaligned
 18511 02c4 9A70     		strb	r2, [r3, #2]
2418:..\src/command_processing.c ****     
2419:..\src/command_processing.c ****     sprintf(str, "Rest position occurrences: %lu", MEM_P->cnt.rest_counter);
 18512              		.loc 1 2419 0
 18513 02c6 BB6F     		ldr	r3, [r7, #120]
 18514 02c8 1A6D     		ldr	r2, [r3, #80]
 18515 02ca 07F10803 		add	r3, r7, #8
 18516 02ce 3749     		ldr	r1, .L712+12
 18517 02d0 1846     		mov	r0, r3
 18518 02d2 FFF7FEFF 		bl	sprintf
2420:..\src/command_processing.c ****     strcat(info_string, str);
 18519              		.loc 1 2420 0
 18520 02d6 07F10803 		add	r3, r7, #8
 18521 02da 1946     		mov	r1, r3
 18522 02dc 7868     		ldr	r0, [r7, #4]
 18523 02de FFF7FEFF 		bl	strcat
2421:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18524              		.loc 1 2421 0
 18525 02e2 7868     		ldr	r0, [r7, #4]
 18526 02e4 FFF7FEFF 		bl	strlen
 18527 02e8 0346     		mov	r3, r0
 18528 02ea 1A46     		mov	r2, r3
 18529 02ec 7B68     		ldr	r3, [r7, #4]
 18530 02ee 1344     		add	r3, r3, r2
 18531 02f0 2C4A     		ldr	r2, .L712+4
 18532 02f2 1188     		ldrh	r1, [r2]	@ unaligned
 18533 02f4 9278     		ldrb	r2, [r2, #2]
 18534 02f6 1980     		strh	r1, [r3]	@ unaligned
 18535 02f8 9A70     		strb	r2, [r3, #2]
2422:..\src/command_processing.c ****     
2423:..\src/command_processing.c ****     sprintf(str, "Angle total displacement (ticks): %lu", MEM_P->cnt.wire_disp);
 18536              		.loc 1 2423 0
 18537 02fa BB6F     		ldr	r3, [r7, #120]
 18538 02fc 5A6D     		ldr	r2, [r3, #84]
 18539 02fe 07F10803 		add	r3, r7, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 410


 18540 0302 2B49     		ldr	r1, .L712+16
 18541 0304 1846     		mov	r0, r3
 18542 0306 FFF7FEFF 		bl	sprintf
2424:..\src/command_processing.c ****     strcat(info_string, str);
 18543              		.loc 1 2424 0
 18544 030a 07F10803 		add	r3, r7, #8
 18545 030e 1946     		mov	r1, r3
 18546 0310 7868     		ldr	r0, [r7, #4]
 18547 0312 FFF7FEFF 		bl	strcat
2425:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18548              		.loc 1 2425 0
 18549 0316 7868     		ldr	r0, [r7, #4]
 18550 0318 FFF7FEFF 		bl	strlen
 18551 031c 0346     		mov	r3, r0
 18552 031e 1A46     		mov	r2, r3
 18553 0320 7B68     		ldr	r3, [r7, #4]
 18554 0322 1344     		add	r3, r3, r2
 18555 0324 1F4A     		ldr	r2, .L712+4
 18556 0326 1188     		ldrh	r1, [r2]	@ unaligned
 18557 0328 9278     		ldrb	r2, [r2, #2]
 18558 032a 1980     		strh	r1, [r3]	@ unaligned
 18559 032c 9A70     		strb	r2, [r3, #2]
2426:..\src/command_processing.c ****     
2427:..\src/command_processing.c ****     sprintf(str, "Total power on time (sec): %lu", MEM_P->cnt.total_time_on);
 18560              		.loc 1 2427 0
 18561 032e BB6F     		ldr	r3, [r7, #120]
 18562 0330 9A6D     		ldr	r2, [r3, #88]
 18563 0332 07F10803 		add	r3, r7, #8
 18564 0336 1F49     		ldr	r1, .L712+20
 18565 0338 1846     		mov	r0, r3
 18566 033a FFF7FEFF 		bl	sprintf
2428:..\src/command_processing.c ****     strcat(info_string, str);
 18567              		.loc 1 2428 0
 18568 033e 07F10803 		add	r3, r7, #8
 18569 0342 1946     		mov	r1, r3
 18570 0344 7868     		ldr	r0, [r7, #4]
 18571 0346 FFF7FEFF 		bl	strcat
2429:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18572              		.loc 1 2429 0
 18573 034a 7868     		ldr	r0, [r7, #4]
 18574 034c FFF7FEFF 		bl	strlen
 18575 0350 0346     		mov	r3, r0
 18576 0352 1A46     		mov	r2, r3
 18577 0354 7B68     		ldr	r3, [r7, #4]
 18578 0356 1344     		add	r3, r3, r2
 18579 0358 124A     		ldr	r2, .L712+4
 18580 035a 1188     		ldrh	r1, [r2]	@ unaligned
 18581 035c 9278     		ldrb	r2, [r2, #2]
 18582 035e 1980     		strh	r1, [r3]	@ unaligned
 18583 0360 9A70     		strb	r2, [r3, #2]
2430:..\src/command_processing.c ****     
2431:..\src/command_processing.c ****     sprintf(str, "Total rest position time (sec): %lu", MEM_P->cnt.total_time_rest);
 18584              		.loc 1 2431 0
 18585 0362 BB6F     		ldr	r3, [r7, #120]
 18586 0364 DA6D     		ldr	r2, [r3, #92]
 18587 0366 07F10803 		add	r3, r7, #8
 18588 036a 1349     		ldr	r1, .L712+24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 411


 18589 036c 1846     		mov	r0, r3
 18590 036e FFF7FEFF 		bl	sprintf
2432:..\src/command_processing.c ****     strcat(info_string, str);
 18591              		.loc 1 2432 0
 18592 0372 07F10803 		add	r3, r7, #8
 18593 0376 1946     		mov	r1, r3
 18594 0378 7868     		ldr	r0, [r7, #4]
 18595 037a FFF7FEFF 		bl	strcat
2433:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18596              		.loc 1 2433 0
 18597 037e 7868     		ldr	r0, [r7, #4]
 18598 0380 FFF7FEFF 		bl	strlen
 18599 0384 0346     		mov	r3, r0
 18600 0386 1A46     		mov	r2, r3
 18601 0388 7B68     		ldr	r3, [r7, #4]
 18602 038a 1344     		add	r3, r3, r2
 18603 038c 054A     		ldr	r2, .L712+4
 18604 038e 1188     		ldrh	r1, [r2]	@ unaligned
 18605 0390 9278     		ldrb	r2, [r2, #2]
 18606 0392 1980     		strh	r1, [r3]	@ unaligned
 18607 0394 9A70     		strb	r2, [r3, #2]
2434:..\src/command_processing.c **** 
2435:..\src/command_processing.c **** }
 18608              		.loc 1 2435 0
 18609 0396 00BF     		nop
 18610 0398 8437     		adds	r7, r7, #132
 18611              		.cfi_def_cfa_offset 20
 18612 039a BD46     		mov	sp, r7
 18613              		.cfi_def_cfa_register 13
 18614              		@ sp needed
 18615 039c F0BD     		pop	{r4, r5, r6, r7, pc}
 18616              	.L713:
 18617 039e 00BF     		.align	2
 18618              	.L712:
 18619 03a0 E01C0000 		.word	.LC277
 18620 03a4 30110000 		.word	.LC151
 18621 03a8 FC1C0000 		.word	.LC278
 18622 03ac 201D0000 		.word	.LC279
 18623 03b0 401D0000 		.word	.LC280
 18624 03b4 681D0000 		.word	.LC281
 18625 03b8 881D0000 		.word	.LC282
 18626              		.cfi_endproc
 18627              	.LFE73:
 18628              		.size	prepare_counter_info, .-prepare_counter_info
 18629              		.section	.rodata
 18630              		.align	2
 18631              	.LC283:
 18632 1dac 4669726D 		.ascii	"Firmware version: %s\015\012\000"
 18632      77617265 
 18632      20766572 
 18632      73696F6E 
 18632      3A202573 
 18633 1dc3 00       		.align	2
 18634              	.LC284:
 18635 1dc4 506F7369 		.ascii	"Position PID: \000"
 18635      74696F6E 
 18635      20504944 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 412


 18635      3A2000
 18636 1dd3 00       		.align	2
 18637              	.LC285:
 18638 1dd4 43757272 		.ascii	"Current PID: \000"
 18638      656E7420 
 18638      5049443A 
 18638      2000
 18639 1de2 0000     		.align	2
 18640              	.LC286:
 18641 1de4 5265736F 		.ascii	"Resolutions: \000"
 18641      6C757469 
 18641      6F6E733A 
 18641      2000
 18642 1df2 0000     		.align	2
 18643              	.LC287:
 18644 1df4 4F666673 		.ascii	"Offsets: \000"
 18644      6574733A 
 18644      2000
 18645 1dfe 0000     		.align	2
 18646              	.LC288:
 18647 1e00 4D756C74 		.ascii	"Multipliers: \000"
 18647      69706C69 
 18647      6572733A 
 18647      2000
 18648 1e0e 0000     		.align	2
 18649              	.LC289:
 18650 1e10 43757272 		.ascii	"Current lookup table p[0] - p[5]: %f, %f, %f, %f, %"
 18650      656E7420 
 18650      6C6F6F6B 
 18650      75702074 
 18650      61626C65 
 18651 1e43 662C2025 		.ascii	"f, %f\015\012\000"
 18651      660D0A00 
 18652 1e4b 00       		.align	2
 18653              	.LC290:
 18654 1e4c 506F7369 		.ascii	"Position limit active: %d\015\012\000"
 18654      74696F6E 
 18654      206C696D 
 18654      69742061 
 18654      63746976 
 18655              		.align	2
 18656              	.LC291:
 18657 1e68 506F7369 		.ascii	"Position limits: inf -> %ld, sup -> %ld\015\012\000"
 18657      74696F6E 
 18657      206C696D 
 18657      6974733A 
 18657      20696E66 
 18658              		.section	.text.prepare_SD_param_info,"ax",%progbits
 18659              		.align	2
 18660              		.global	prepare_SD_param_info
 18661              		.thumb
 18662              		.thumb_func
 18663              		.type	prepare_SD_param_info, %function
 18664              	prepare_SD_param_info:
 18665              	.LFB74:
2436:..\src/command_processing.c **** 
2437:..\src/command_processing.c **** //==============================================================================
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 413


2438:..\src/command_processing.c **** //                                                    PREPARE SD CARD PARAM INFO
2439:..\src/command_processing.c **** //==============================================================================
2440:..\src/command_processing.c **** 
2441:..\src/command_processing.c **** void prepare_SD_param_info(char *info_string)
2442:..\src/command_processing.c **** {
 18666              		.loc 1 2442 0
 18667              		.cfi_startproc
 18668              		@ args = 0, pretend = 0, frame = 152
 18669              		@ frame_needed = 1, uses_anonymous_args = 0
 18670 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 18671              		.cfi_def_cfa_offset 36
 18672              		.cfi_offset 4, -36
 18673              		.cfi_offset 5, -32
 18674              		.cfi_offset 6, -28
 18675              		.cfi_offset 7, -24
 18676              		.cfi_offset 8, -20
 18677              		.cfi_offset 9, -16
 18678              		.cfi_offset 10, -12
 18679              		.cfi_offset 11, -8
 18680              		.cfi_offset 14, -4
 18681 0004 B1B0     		sub	sp, sp, #196
 18682              		.cfi_def_cfa_offset 232
 18683 0006 0AAF     		add	r7, sp, #40
 18684              		.cfi_def_cfa 7, 192
 18685 0008 7861     		str	r0, [r7, #20]
2443:..\src/command_processing.c ****     char str[100];  
2444:..\src/command_processing.c ****     int i;
2445:..\src/command_processing.c ****            
2446:..\src/command_processing.c ****     // NOTE: use g_mem structure instead of c_mem because when changing parameters c_mem struct is 
2447:..\src/command_processing.c ****     
2448:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 18686              		.loc 1 2448 0
 18687 000a AB4B     		ldr	r3, .L779
 18688 000c C7F88C30 		str	r3, [r7, #140]
2449:..\src/command_processing.c ****         
2450:..\src/command_processing.c ****     sprintf(info_string, "Firmware version: %s\r\n", VERSION);
 18689              		.loc 1 2450 0
 18690 0010 AA4A     		ldr	r2, .L779+4
 18691 0012 AB49     		ldr	r1, .L779+8
 18692 0014 7869     		ldr	r0, [r7, #20]
 18693 0016 FFF7FEFF 		bl	sprintf
2451:..\src/command_processing.c ****     
2452:..\src/command_processing.c ****     sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 18694              		.loc 1 2452 0
 18695 001a D7F88C30 		ldr	r3, [r7, #140]
 18696 001e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 18697 0022 1A46     		mov	r2, r3
 18698 0024 07F11C03 		add	r3, r7, #28
 18699 0028 A649     		ldr	r1, .L779+12
 18700 002a 1846     		mov	r0, r3
 18701 002c FFF7FEFF 		bl	sprintf
2453:..\src/command_processing.c ****     strcat(info_string, str);
 18702              		.loc 1 2453 0
 18703 0030 07F11C03 		add	r3, r7, #28
 18704 0034 1946     		mov	r1, r3
 18705 0036 7869     		ldr	r0, [r7, #20]
 18706 0038 FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 414


2454:..\src/command_processing.c ****     switch(MEM_P->dev.right_left){
 18707              		.loc 1 2454 0
 18708 003c D7F88C30 		ldr	r3, [r7, #140]
 18709 0040 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 18710 0044 002B     		cmp	r3, #0
 18711 0046 02D0     		beq	.L716
 18712 0048 012B     		cmp	r3, #1
 18713 004a 15D0     		beq	.L717
 18714 004c 26E0     		b	.L715
 18715              	.L716:
2455:..\src/command_processing.c ****         case RIGHT_HAND:
2456:..\src/command_processing.c ****             strcat(info_string, "Hand side: RIGHT\r\n");
 18716              		.loc 1 2456 0
 18717 004e 7869     		ldr	r0, [r7, #20]
 18718 0050 FFF7FEFF 		bl	strlen
 18719 0054 0346     		mov	r3, r0
 18720 0056 1A46     		mov	r2, r3
 18721 0058 7B69     		ldr	r3, [r7, #20]
 18722 005a 1344     		add	r3, r3, r2
 18723 005c 9A4A     		ldr	r2, .L779+16
 18724 005e 1D46     		mov	r5, r3
 18725 0060 1446     		mov	r4, r2
 18726 0062 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18727 0064 2860     		str	r0, [r5]	@ unaligned
 18728 0066 6960     		str	r1, [r5, #4]	@ unaligned
 18729 0068 AA60     		str	r2, [r5, #8]	@ unaligned
 18730 006a EB60     		str	r3, [r5, #12]	@ unaligned
 18731 006c 2388     		ldrh	r3, [r4]	@ unaligned
 18732 006e A278     		ldrb	r2, [r4, #2]
 18733 0070 2B82     		strh	r3, [r5, #16]	@ unaligned
 18734 0072 1346     		mov	r3, r2
 18735 0074 AB74     		strb	r3, [r5, #18]
2457:..\src/command_processing.c ****             break;
 18736              		.loc 1 2457 0
 18737 0076 11E0     		b	.L715
 18738              	.L717:
2458:..\src/command_processing.c ****         case LEFT_HAND:
2459:..\src/command_processing.c ****             strcat(info_string, "Hand side: LEFT\r\n");
 18739              		.loc 1 2459 0
 18740 0078 7869     		ldr	r0, [r7, #20]
 18741 007a FFF7FEFF 		bl	strlen
 18742 007e 0346     		mov	r3, r0
 18743 0080 1A46     		mov	r2, r3
 18744 0082 7B69     		ldr	r3, [r7, #20]
 18745 0084 1344     		add	r3, r3, r2
 18746 0086 914A     		ldr	r2, .L779+20
 18747 0088 1D46     		mov	r5, r3
 18748 008a 1446     		mov	r4, r2
 18749 008c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18750 008e 2860     		str	r0, [r5]	@ unaligned
 18751 0090 6960     		str	r1, [r5, #4]	@ unaligned
 18752 0092 AA60     		str	r2, [r5, #8]	@ unaligned
 18753 0094 EB60     		str	r3, [r5, #12]	@ unaligned
 18754 0096 2388     		ldrh	r3, [r4]	@ unaligned
 18755 0098 2B82     		strh	r3, [r5, #16]	@ unaligned
2460:..\src/command_processing.c ****             break;
 18756              		.loc 1 2460 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 415


 18757 009a 00BF     		nop
 18758              	.L715:
2461:..\src/command_processing.c ****     }
2462:..\src/command_processing.c **** 
2463:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 18759              		.loc 1 2463 0
 18760 009c D7F88C30 		ldr	r3, [r7, #140]
 18761 00a0 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 18762 00a4 1A46     		mov	r2, r3
 18763 00a6 D7F88C30 		ldr	r3, [r7, #140]
 18764 00aa 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 18765 00ae 1946     		mov	r1, r3
 18766 00b0 D7F88C30 		ldr	r3, [r7, #140]
 18767 00b4 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 18768 00b8 07F11C00 		add	r0, r7, #28
 18769 00bc 0093     		str	r3, [sp]
 18770 00be 0B46     		mov	r3, r1
 18771 00c0 8349     		ldr	r1, .L779+24
 18772 00c2 FFF7FEFF 		bl	sprintf
2464:..\src/command_processing.c ****     strcat(info_string, str);
 18773              		.loc 1 2464 0
 18774 00c6 07F11C03 		add	r3, r7, #28
 18775 00ca 1946     		mov	r1, r3
 18776 00cc 7869     		ldr	r0, [r7, #20]
 18777 00ce FFF7FEFF 		bl	strcat
2465:..\src/command_processing.c ****     
2466:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 18778              		.loc 1 2466 0
 18779 00d2 D7F88C30 		ldr	r3, [r7, #140]
 18780 00d6 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 18781 00da 1A46     		mov	r2, r3
 18782 00dc D7F88C30 		ldr	r3, [r7, #140]
 18783 00e0 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 18784 00e4 1946     		mov	r1, r3
 18785 00e6 D7F88C30 		ldr	r3, [r7, #140]
 18786 00ea 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 18787 00ee 07F11C00 		add	r0, r7, #28
 18788 00f2 0093     		str	r3, [sp]
 18789 00f4 0B46     		mov	r3, r1
 18790 00f6 7749     		ldr	r1, .L779+28
 18791 00f8 FFF7FEFF 		bl	sprintf
2467:..\src/command_processing.c ****     strcat(info_string, str);
 18792              		.loc 1 2467 0
 18793 00fc 07F11C03 		add	r3, r7, #28
 18794 0100 1946     		mov	r1, r3
 18795 0102 7869     		ldr	r0, [r7, #20]
 18796 0104 FFF7FEFF 		bl	strcat
 18797              	.LBB23:
2468:..\src/command_processing.c ****     
2469:..\src/command_processing.c **** 	for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 18798              		.loc 1 2469 0
 18799 0108 0023     		movs	r3, #0
 18800 010a 87F89330 		strb	r3, [r7, #147]
 18801 010e 00F05CBE 		b	.L718
 18802              	.L762:
 18803              	.LBB24:
2470:..\src/command_processing.c ****             
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 416


2471:..\src/command_processing.c **** 	    uint8 MOTOR_IDX = k;
 18804              		.loc 1 2471 0
 18805 0112 97F89330 		ldrb	r3, [r7, #147]
 18806 0116 87F88B30 		strb	r3, [r7, #139]
2472:..\src/command_processing.c ****         struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 18807              		.loc 1 2472 0
 18808 011a 97F88B20 		ldrb	r2, [r7, #139]	@ zero_extendqisi2
 18809 011e 1346     		mov	r3, r2
 18810 0120 DB00     		lsls	r3, r3, #3
 18811 0122 9B1A     		subs	r3, r3, r2
 18812 0124 1B01     		lsls	r3, r3, #4
 18813 0126 B033     		adds	r3, r3, #176
 18814 0128 D7F88C20 		ldr	r2, [r7, #140]
 18815 012c 1344     		add	r3, r3, r2
 18816 012e C7F88430 		str	r3, [r7, #132]
2473:..\src/command_processing.c ****         uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 18817              		.loc 1 2473 0
 18818 0132 D7F88430 		ldr	r3, [r7, #132]
 18819 0136 93F86030 		ldrb	r3, [r3, #96]
 18820 013a 87F88330 		strb	r3, [r7, #131]
2474:..\src/command_processing.c ****               
2475:..\src/command_processing.c ****         sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 18821              		.loc 1 2475 0
 18822 013e 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 18823 0142 5A1C     		adds	r2, r3, #1
 18824 0144 07F11C03 		add	r3, r7, #28
 18825 0148 6349     		ldr	r1, .L779+32
 18826 014a 1846     		mov	r0, r3
 18827 014c FFF7FEFF 		bl	sprintf
2476:..\src/command_processing.c ****         strcat(info_string, str);
 18828              		.loc 1 2476 0
 18829 0150 07F11C03 		add	r3, r7, #28
 18830 0154 1946     		mov	r1, r3
 18831 0156 7869     		ldr	r0, [r7, #20]
 18832 0158 FFF7FEFF 		bl	strcat
2477:..\src/command_processing.c ****                     
2478:..\src/command_processing.c ****         strcat(info_string, "PWM rescaling activation: ");
 18833              		.loc 1 2478 0
 18834 015c 7869     		ldr	r0, [r7, #20]
 18835 015e FFF7FEFF 		bl	strlen
 18836 0162 0346     		mov	r3, r0
 18837 0164 1A46     		mov	r2, r3
 18838 0166 7B69     		ldr	r3, [r7, #20]
 18839 0168 1344     		add	r3, r3, r2
 18840 016a 5C4A     		ldr	r2, .L779+36
 18841 016c 1D46     		mov	r5, r3
 18842 016e 1446     		mov	r4, r2
 18843 0170 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18844 0172 2860     		str	r0, [r5]	@ unaligned
 18845 0174 6960     		str	r1, [r5, #4]	@ unaligned
 18846 0176 AA60     		str	r2, [r5, #8]	@ unaligned
 18847 0178 EB60     		str	r3, [r5, #12]	@ unaligned
 18848 017a 03CC     		ldmia	r4!, {r0, r1}
 18849 017c 2861     		str	r0, [r5, #16]	@ unaligned
 18850 017e 6961     		str	r1, [r5, #20]	@ unaligned
 18851 0180 2388     		ldrh	r3, [r4]	@ unaligned
 18852 0182 A278     		ldrb	r2, [r4, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 417


 18853 0184 2B83     		strh	r3, [r5, #24]	@ unaligned
 18854 0186 1346     		mov	r3, r2
 18855 0188 AB76     		strb	r3, [r5, #26]
2479:..\src/command_processing.c ****         if(MOT->activate_pwm_rescaling == MAXON_12V)
 18856              		.loc 1 2479 0
 18857 018a D7F88430 		ldr	r3, [r7, #132]
 18858 018e 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 18859 0192 012B     		cmp	r3, #1
 18860 0194 0CD1     		bne	.L719
2480:..\src/command_processing.c ****             strcat(info_string, "YES\r\n");
 18861              		.loc 1 2480 0
 18862 0196 7869     		ldr	r0, [r7, #20]
 18863 0198 FFF7FEFF 		bl	strlen
 18864 019c 0346     		mov	r3, r0
 18865 019e 1A46     		mov	r2, r3
 18866 01a0 7B69     		ldr	r3, [r7, #20]
 18867 01a2 1344     		add	r3, r3, r2
 18868 01a4 4E4A     		ldr	r2, .L779+40
 18869 01a6 1068     		ldr	r0, [r2]	@ unaligned
 18870 01a8 1860     		str	r0, [r3]	@ unaligned
 18871 01aa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 18872 01ac 9A80     		strh	r2, [r3, #4]	@ unaligned
 18873 01ae 0BE0     		b	.L720
 18874              	.L719:
2481:..\src/command_processing.c ****         else
2482:..\src/command_processing.c ****             strcat(info_string, "NO\r\n");
 18875              		.loc 1 2482 0
 18876 01b0 7869     		ldr	r0, [r7, #20]
 18877 01b2 FFF7FEFF 		bl	strlen
 18878 01b6 0346     		mov	r3, r0
 18879 01b8 1A46     		mov	r2, r3
 18880 01ba 7B69     		ldr	r3, [r7, #20]
 18881 01bc 1344     		add	r3, r3, r2
 18882 01be 494A     		ldr	r2, .L779+44
 18883 01c0 1068     		ldr	r0, [r2]	@ unaligned
 18884 01c2 1860     		str	r0, [r3]	@ unaligned
 18885 01c4 1279     		ldrb	r2, [r2, #4]
 18886 01c6 1A71     		strb	r2, [r3, #4]
 18887              	.L720:
2483:..\src/command_processing.c ****         
2484:..\src/command_processing.c ****         sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 18888              		.loc 1 2484 0
 18889 01c8 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 18890 01cc 464A     		ldr	r2, .L779+48
 18891 01ce D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 18892 01d0 1A46     		mov	r2, r3
 18893 01d2 07F11C03 		add	r3, r7, #28
 18894 01d6 4549     		ldr	r1, .L779+52
 18895 01d8 1846     		mov	r0, r3
 18896 01da FFF7FEFF 		bl	sprintf
2485:..\src/command_processing.c ****         strcat(info_string, str);
 18897              		.loc 1 2485 0
 18898 01de 07F11C03 		add	r3, r7, #28
 18899 01e2 1946     		mov	r1, r3
 18900 01e4 7869     		ldr	r0, [r7, #20]
 18901 01e6 FFF7FEFF 		bl	strcat
2486:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 418


2487:..\src/command_processing.c ****         strcat(info_string, "Position PID: ");
 18902              		.loc 1 2487 0
 18903 01ea 7869     		ldr	r0, [r7, #20]
 18904 01ec FFF7FEFF 		bl	strlen
 18905 01f0 0346     		mov	r3, r0
 18906 01f2 1A46     		mov	r2, r3
 18907 01f4 7B69     		ldr	r3, [r7, #20]
 18908 01f6 1344     		add	r3, r3, r2
 18909 01f8 3D4A     		ldr	r2, .L779+56
 18910 01fa 1C46     		mov	r4, r3
 18911 01fc 1346     		mov	r3, r2
 18912 01fe 07CB     		ldmia	r3!, {r0, r1, r2}
 18913 0200 2060     		str	r0, [r4]	@ unaligned
 18914 0202 6160     		str	r1, [r4, #4]	@ unaligned
 18915 0204 A260     		str	r2, [r4, #8]	@ unaligned
 18916 0206 1A88     		ldrh	r2, [r3]	@ unaligned
 18917 0208 9B78     		ldrb	r3, [r3, #2]
 18918 020a A281     		strh	r2, [r4, #12]	@ unaligned
 18919 020c A373     		strb	r3, [r4, #14]
2488:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 18920              		.loc 1 2488 0
 18921 020e D7F88430 		ldr	r3, [r7, #132]
 18922 0212 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 18923 0216 032B     		cmp	r3, #3
 18924 0218 74D0     		beq	.L721
2489:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 18925              		.loc 1 2489 0
 18926 021a D7F88430 		ldr	r3, [r7, #132]
 18927 021e 1B68     		ldr	r3, [r3]
 18928 0220 1846     		mov	r0, r3
 18929 0222 FFF7FEFF 		bl	__aeabi_i2d
 18930 0226 4FF00002 		mov	r2, #0
 18931 022a 324B     		ldr	r3, .L779+60
 18932 022c FFF7FEFF 		bl	__aeabi_ddiv
 18933 0230 0346     		mov	r3, r0
 18934 0232 0C46     		mov	r4, r1
 18935 0234 07F11C00 		add	r0, r7, #28
 18936 0238 1A46     		mov	r2, r3
 18937 023a 2346     		mov	r3, r4
 18938 023c 2E49     		ldr	r1, .L779+64
 18939 023e FFF7FEFF 		bl	sprintf
2490:..\src/command_processing.c ****             strcat(info_string, str);
 18940              		.loc 1 2490 0
 18941 0242 07F11C03 		add	r3, r7, #28
 18942 0246 1946     		mov	r1, r3
 18943 0248 7869     		ldr	r0, [r7, #20]
 18944 024a FFF7FEFF 		bl	strcat
2491:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 18945              		.loc 1 2491 0
 18946 024e D7F88430 		ldr	r3, [r7, #132]
 18947 0252 5B68     		ldr	r3, [r3, #4]
 18948 0254 1846     		mov	r0, r3
 18949 0256 FFF7FEFF 		bl	__aeabi_i2d
 18950 025a 4FF00002 		mov	r2, #0
 18951 025e 254B     		ldr	r3, .L779+60
 18952 0260 FFF7FEFF 		bl	__aeabi_ddiv
 18953 0264 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 419


 18954 0266 0C46     		mov	r4, r1
 18955 0268 07F11C00 		add	r0, r7, #28
 18956 026c 1A46     		mov	r2, r3
 18957 026e 2346     		mov	r3, r4
 18958 0270 2249     		ldr	r1, .L779+68
 18959 0272 FFF7FEFF 		bl	sprintf
2492:..\src/command_processing.c ****             strcat(info_string, str);
 18960              		.loc 1 2492 0
 18961 0276 07F11C03 		add	r3, r7, #28
 18962 027a 1946     		mov	r1, r3
 18963 027c 7869     		ldr	r0, [r7, #20]
 18964 027e FFF7FEFF 		bl	strcat
2493:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 18965              		.loc 1 2493 0
 18966 0282 D7F88430 		ldr	r3, [r7, #132]
 18967 0286 9B68     		ldr	r3, [r3, #8]
 18968 0288 1846     		mov	r0, r3
 18969 028a FFF7FEFF 		bl	__aeabi_i2d
 18970 028e 4FF00002 		mov	r2, #0
 18971 0292 184B     		ldr	r3, .L779+60
 18972 0294 FFF7FEFF 		bl	__aeabi_ddiv
 18973 0298 0346     		mov	r3, r0
 18974 029a 0C46     		mov	r4, r1
 18975 029c 07F11C00 		add	r0, r7, #28
 18976 02a0 1A46     		mov	r2, r3
 18977 02a2 2346     		mov	r3, r4
 18978 02a4 1649     		ldr	r1, .L779+72
 18979 02a6 FFF7FEFF 		bl	sprintf
2494:..\src/command_processing.c ****             strcat(info_string, str);
 18980              		.loc 1 2494 0
 18981 02aa 07F11C03 		add	r3, r7, #28
 18982 02ae 1946     		mov	r1, r3
 18983 02b0 7869     		ldr	r0, [r7, #20]
 18984 02b2 FFF7FEFF 		bl	strcat
 18985 02b6 73E0     		b	.L722
 18986              	.L780:
 18987              		.align	2
 18988              	.L779:
 18989 02b8 00000000 		.word	g_mem
 18990 02bc 48110000 		.word	.LC153
 18991 02c0 AC1D0000 		.word	.LC283
 18992 02c4 84110000 		.word	.LC156
 18993 02c8 34120000 		.word	.LC162
 18994 02cc 48120000 		.word	.LC163
 18995 02d0 F01B0000 		.word	.LC271
 18996 02d4 1C1C0000 		.word	.LC272
 18997 02d8 94120000 		.word	.LC167
 18998 02dc 04130000 		.word	.LC176
 18999 02e0 F4120000 		.word	.LC174
 19000 02e4 FC120000 		.word	.LC175
 19001 02e8 00000000 		.word	dev_pwm_limit
 19002 02ec 2C130000 		.word	.LC179
 19003 02f0 C41D0000 		.word	.LC284
 19004 02f4 0000F040 		.word	1089470464
 19005 02f8 44140000 		.word	.LC191
 19006 02fc 50140000 		.word	.LC192
 19007 0300 5C140000 		.word	.LC193
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 420


 19008              	.L721:
2495:..\src/command_processing.c ****         }
2496:..\src/command_processing.c ****         else { 
2497:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 19009              		.loc 1 2497 0
 19010 0304 D7F88430 		ldr	r3, [r7, #132]
 19011 0308 9B69     		ldr	r3, [r3, #24]
 19012 030a 1846     		mov	r0, r3
 19013 030c FFF7FEFF 		bl	__aeabi_i2d
 19014 0310 4FF00002 		mov	r2, #0
 19015 0314 CC4B     		ldr	r3, .L781
 19016 0316 FFF7FEFF 		bl	__aeabi_ddiv
 19017 031a 0346     		mov	r3, r0
 19018 031c 0C46     		mov	r4, r1
 19019 031e 07F11C00 		add	r0, r7, #28
 19020 0322 1A46     		mov	r2, r3
 19021 0324 2346     		mov	r3, r4
 19022 0326 C949     		ldr	r1, .L781+4
 19023 0328 FFF7FEFF 		bl	sprintf
2498:..\src/command_processing.c ****             strcat(info_string, str);
 19024              		.loc 1 2498 0
 19025 032c 07F11C03 		add	r3, r7, #28
 19026 0330 1946     		mov	r1, r3
 19027 0332 7869     		ldr	r0, [r7, #20]
 19028 0334 FFF7FEFF 		bl	strcat
2499:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 19029              		.loc 1 2499 0
 19030 0338 D7F88430 		ldr	r3, [r7, #132]
 19031 033c DB69     		ldr	r3, [r3, #28]
 19032 033e 1846     		mov	r0, r3
 19033 0340 FFF7FEFF 		bl	__aeabi_i2d
 19034 0344 4FF00002 		mov	r2, #0
 19035 0348 BF4B     		ldr	r3, .L781
 19036 034a FFF7FEFF 		bl	__aeabi_ddiv
 19037 034e 0346     		mov	r3, r0
 19038 0350 0C46     		mov	r4, r1
 19039 0352 07F11C00 		add	r0, r7, #28
 19040 0356 1A46     		mov	r2, r3
 19041 0358 2346     		mov	r3, r4
 19042 035a BD49     		ldr	r1, .L781+8
 19043 035c FFF7FEFF 		bl	sprintf
2500:..\src/command_processing.c ****             strcat(info_string, str);
 19044              		.loc 1 2500 0
 19045 0360 07F11C03 		add	r3, r7, #28
 19046 0364 1946     		mov	r1, r3
 19047 0366 7869     		ldr	r0, [r7, #20]
 19048 0368 FFF7FEFF 		bl	strcat
2501:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 19049              		.loc 1 2501 0
 19050 036c D7F88430 		ldr	r3, [r7, #132]
 19051 0370 1B6A     		ldr	r3, [r3, #32]
 19052 0372 1846     		mov	r0, r3
 19053 0374 FFF7FEFF 		bl	__aeabi_i2d
 19054 0378 4FF00002 		mov	r2, #0
 19055 037c B24B     		ldr	r3, .L781
 19056 037e FFF7FEFF 		bl	__aeabi_ddiv
 19057 0382 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 421


 19058 0384 0C46     		mov	r4, r1
 19059 0386 07F11C00 		add	r0, r7, #28
 19060 038a 1A46     		mov	r2, r3
 19061 038c 2346     		mov	r3, r4
 19062 038e B149     		ldr	r1, .L781+12
 19063 0390 FFF7FEFF 		bl	sprintf
2502:..\src/command_processing.c ****             strcat(info_string, str);
 19064              		.loc 1 2502 0
 19065 0394 07F11C03 		add	r3, r7, #28
 19066 0398 1946     		mov	r1, r3
 19067 039a 7869     		ldr	r0, [r7, #20]
 19068 039c FFF7FEFF 		bl	strcat
 19069              	.L722:
2503:..\src/command_processing.c ****         }
2504:..\src/command_processing.c **** 
2505:..\src/command_processing.c ****         strcat(info_string, "Current PID: ");
 19070              		.loc 1 2505 0
 19071 03a0 7869     		ldr	r0, [r7, #20]
 19072 03a2 FFF7FEFF 		bl	strlen
 19073 03a6 0346     		mov	r3, r0
 19074 03a8 1A46     		mov	r2, r3
 19075 03aa 7B69     		ldr	r3, [r7, #20]
 19076 03ac 1344     		add	r3, r3, r2
 19077 03ae AA4A     		ldr	r2, .L781+16
 19078 03b0 1C46     		mov	r4, r3
 19079 03b2 1346     		mov	r3, r2
 19080 03b4 07CB     		ldmia	r3!, {r0, r1, r2}
 19081 03b6 2060     		str	r0, [r4]	@ unaligned
 19082 03b8 6160     		str	r1, [r4, #4]	@ unaligned
 19083 03ba A260     		str	r2, [r4, #8]	@ unaligned
 19084 03bc 1B88     		ldrh	r3, [r3]	@ unaligned
 19085 03be A381     		strh	r3, [r4, #12]	@ unaligned
2506:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 19086              		.loc 1 2506 0
 19087 03c0 D7F88430 		ldr	r3, [r7, #132]
 19088 03c4 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 19089 03c8 032B     		cmp	r3, #3
 19090 03ca 4ED0     		beq	.L723
2507:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 19091              		.loc 1 2507 0
 19092 03cc D7F88430 		ldr	r3, [r7, #132]
 19093 03d0 DB68     		ldr	r3, [r3, #12]
 19094 03d2 1846     		mov	r0, r3
 19095 03d4 FFF7FEFF 		bl	__aeabi_i2d
 19096 03d8 4FF00002 		mov	r2, #0
 19097 03dc 9A4B     		ldr	r3, .L781
 19098 03de FFF7FEFF 		bl	__aeabi_ddiv
 19099 03e2 0346     		mov	r3, r0
 19100 03e4 0C46     		mov	r4, r1
 19101 03e6 07F11C00 		add	r0, r7, #28
 19102 03ea 1A46     		mov	r2, r3
 19103 03ec 2346     		mov	r3, r4
 19104 03ee 9749     		ldr	r1, .L781+4
 19105 03f0 FFF7FEFF 		bl	sprintf
2508:..\src/command_processing.c ****             strcat(info_string, str);
 19106              		.loc 1 2508 0
 19107 03f4 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 422


 19108 03f8 1946     		mov	r1, r3
 19109 03fa 7869     		ldr	r0, [r7, #20]
 19110 03fc FFF7FEFF 		bl	strcat
2509:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 19111              		.loc 1 2509 0
 19112 0400 D7F88430 		ldr	r3, [r7, #132]
 19113 0404 1B69     		ldr	r3, [r3, #16]
 19114 0406 1846     		mov	r0, r3
 19115 0408 FFF7FEFF 		bl	__aeabi_i2d
 19116 040c 4FF00002 		mov	r2, #0
 19117 0410 8D4B     		ldr	r3, .L781
 19118 0412 FFF7FEFF 		bl	__aeabi_ddiv
 19119 0416 0346     		mov	r3, r0
 19120 0418 0C46     		mov	r4, r1
 19121 041a 07F11C00 		add	r0, r7, #28
 19122 041e 1A46     		mov	r2, r3
 19123 0420 2346     		mov	r3, r4
 19124 0422 8B49     		ldr	r1, .L781+8
 19125 0424 FFF7FEFF 		bl	sprintf
2510:..\src/command_processing.c ****             strcat(info_string, str);
 19126              		.loc 1 2510 0
 19127 0428 07F11C03 		add	r3, r7, #28
 19128 042c 1946     		mov	r1, r3
 19129 042e 7869     		ldr	r0, [r7, #20]
 19130 0430 FFF7FEFF 		bl	strcat
2511:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 19131              		.loc 1 2511 0
 19132 0434 D7F88430 		ldr	r3, [r7, #132]
 19133 0438 5B69     		ldr	r3, [r3, #20]
 19134 043a 1846     		mov	r0, r3
 19135 043c FFF7FEFF 		bl	__aeabi_i2d
 19136 0440 4FF00002 		mov	r2, #0
 19137 0444 804B     		ldr	r3, .L781
 19138 0446 FFF7FEFF 		bl	__aeabi_ddiv
 19139 044a 0346     		mov	r3, r0
 19140 044c 0C46     		mov	r4, r1
 19141 044e 07F11C00 		add	r0, r7, #28
 19142 0452 1A46     		mov	r2, r3
 19143 0454 2346     		mov	r3, r4
 19144 0456 7F49     		ldr	r1, .L781+12
 19145 0458 FFF7FEFF 		bl	sprintf
2512:..\src/command_processing.c ****             strcat(info_string, str);
 19146              		.loc 1 2512 0
 19147 045c 07F11C03 		add	r3, r7, #28
 19148 0460 1946     		mov	r1, r3
 19149 0462 7869     		ldr	r0, [r7, #20]
 19150 0464 FFF7FEFF 		bl	strcat
 19151 0468 4DE0     		b	.L724
 19152              	.L723:
2513:..\src/command_processing.c **** 
2514:..\src/command_processing.c ****         }
2515:..\src/command_processing.c ****         else {
2516:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 19153              		.loc 1 2516 0
 19154 046a D7F88430 		ldr	r3, [r7, #132]
 19155 046e 5B6A     		ldr	r3, [r3, #36]
 19156 0470 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 423


 19157 0472 FFF7FEFF 		bl	__aeabi_i2d
 19158 0476 4FF00002 		mov	r2, #0
 19159 047a 734B     		ldr	r3, .L781
 19160 047c FFF7FEFF 		bl	__aeabi_ddiv
 19161 0480 0346     		mov	r3, r0
 19162 0482 0C46     		mov	r4, r1
 19163 0484 07F11C00 		add	r0, r7, #28
 19164 0488 1A46     		mov	r2, r3
 19165 048a 2346     		mov	r3, r4
 19166 048c 6F49     		ldr	r1, .L781+4
 19167 048e FFF7FEFF 		bl	sprintf
2517:..\src/command_processing.c ****             strcat(info_string, str);
 19168              		.loc 1 2517 0
 19169 0492 07F11C03 		add	r3, r7, #28
 19170 0496 1946     		mov	r1, r3
 19171 0498 7869     		ldr	r0, [r7, #20]
 19172 049a FFF7FEFF 		bl	strcat
2518:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 19173              		.loc 1 2518 0
 19174 049e D7F88430 		ldr	r3, [r7, #132]
 19175 04a2 9B6A     		ldr	r3, [r3, #40]
 19176 04a4 1846     		mov	r0, r3
 19177 04a6 FFF7FEFF 		bl	__aeabi_i2d
 19178 04aa 4FF00002 		mov	r2, #0
 19179 04ae 664B     		ldr	r3, .L781
 19180 04b0 FFF7FEFF 		bl	__aeabi_ddiv
 19181 04b4 0346     		mov	r3, r0
 19182 04b6 0C46     		mov	r4, r1
 19183 04b8 07F11C00 		add	r0, r7, #28
 19184 04bc 1A46     		mov	r2, r3
 19185 04be 2346     		mov	r3, r4
 19186 04c0 6349     		ldr	r1, .L781+8
 19187 04c2 FFF7FEFF 		bl	sprintf
2519:..\src/command_processing.c ****             strcat(info_string, str);
 19188              		.loc 1 2519 0
 19189 04c6 07F11C03 		add	r3, r7, #28
 19190 04ca 1946     		mov	r1, r3
 19191 04cc 7869     		ldr	r0, [r7, #20]
 19192 04ce FFF7FEFF 		bl	strcat
2520:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 19193              		.loc 1 2520 0
 19194 04d2 D7F88430 		ldr	r3, [r7, #132]
 19195 04d6 DB6A     		ldr	r3, [r3, #44]
 19196 04d8 1846     		mov	r0, r3
 19197 04da FFF7FEFF 		bl	__aeabi_i2d
 19198 04de 4FF00002 		mov	r2, #0
 19199 04e2 594B     		ldr	r3, .L781
 19200 04e4 FFF7FEFF 		bl	__aeabi_ddiv
 19201 04e8 0346     		mov	r3, r0
 19202 04ea 0C46     		mov	r4, r1
 19203 04ec 07F11C00 		add	r0, r7, #28
 19204 04f0 1A46     		mov	r2, r3
 19205 04f2 2346     		mov	r3, r4
 19206 04f4 5749     		ldr	r1, .L781+12
 19207 04f6 FFF7FEFF 		bl	sprintf
2521:..\src/command_processing.c ****             strcat(info_string, str);
 19208              		.loc 1 2521 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 424


 19209 04fa 07F11C03 		add	r3, r7, #28
 19210 04fe 1946     		mov	r1, r3
 19211 0500 7869     		ldr	r0, [r7, #20]
 19212 0502 FFF7FEFF 		bl	strcat
 19213              	.L724:
2522:..\src/command_processing.c ****         }
2523:..\src/command_processing.c ****         if (MOT->activ == 0x01)
 19214              		.loc 1 2523 0
 19215 0506 D7F88430 		ldr	r3, [r7, #132]
 19216 050a 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 19217 050e 012B     		cmp	r3, #1
 19218 0510 14D1     		bne	.L725
2524:..\src/command_processing.c ****             strcat(info_string, "Startup activation: YES\r\n");
 19219              		.loc 1 2524 0
 19220 0512 7869     		ldr	r0, [r7, #20]
 19221 0514 FFF7FEFF 		bl	strlen
 19222 0518 0346     		mov	r3, r0
 19223 051a 1A46     		mov	r2, r3
 19224 051c 7B69     		ldr	r3, [r7, #20]
 19225 051e 1344     		add	r3, r3, r2
 19226 0520 4E4A     		ldr	r2, .L781+20
 19227 0522 1D46     		mov	r5, r3
 19228 0524 1446     		mov	r4, r2
 19229 0526 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19230 0528 2860     		str	r0, [r5]	@ unaligned
 19231 052a 6960     		str	r1, [r5, #4]	@ unaligned
 19232 052c AA60     		str	r2, [r5, #8]	@ unaligned
 19233 052e EB60     		str	r3, [r5, #12]	@ unaligned
 19234 0530 03CC     		ldmia	r4!, {r0, r1}
 19235 0532 2861     		str	r0, [r5, #16]	@ unaligned
 19236 0534 6961     		str	r1, [r5, #20]	@ unaligned
 19237 0536 2388     		ldrh	r3, [r4]	@ unaligned
 19238 0538 2B83     		strh	r3, [r5, #24]	@ unaligned
 19239 053a 13E0     		b	.L726
 19240              	.L725:
2525:..\src/command_processing.c ****         else
2526:..\src/command_processing.c ****             strcat(info_string, "Startup activation: NO\r\n");
 19241              		.loc 1 2526 0
 19242 053c 7869     		ldr	r0, [r7, #20]
 19243 053e FFF7FEFF 		bl	strlen
 19244 0542 0346     		mov	r3, r0
 19245 0544 1A46     		mov	r2, r3
 19246 0546 7B69     		ldr	r3, [r7, #20]
 19247 0548 1344     		add	r3, r3, r2
 19248 054a 454A     		ldr	r2, .L781+24
 19249 054c 1D46     		mov	r5, r3
 19250 054e 1446     		mov	r4, r2
 19251 0550 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19252 0552 2860     		str	r0, [r5]	@ unaligned
 19253 0554 6960     		str	r1, [r5, #4]	@ unaligned
 19254 0556 AA60     		str	r2, [r5, #8]	@ unaligned
 19255 0558 EB60     		str	r3, [r5, #12]	@ unaligned
 19256 055a 03CC     		ldmia	r4!, {r0, r1}
 19257 055c 2861     		str	r0, [r5, #16]	@ unaligned
 19258 055e 6961     		str	r1, [r5, #20]	@ unaligned
 19259 0560 2378     		ldrb	r3, [r4]
 19260 0562 2B76     		strb	r3, [r5, #24]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 425


 19261              	.L726:
2527:..\src/command_processing.c **** 
2528:..\src/command_processing.c ****         switch(MOT->input_mode) {
 19262              		.loc 1 2528 0
 19263 0564 D7F88430 		ldr	r3, [r7, #132]
 19264 0568 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 19265 056c 072B     		cmp	r3, #7
 19266 056e 00F2EA80 		bhi	.L727
 19267 0572 01A2     		adr	r2, .L729
 19268 0574 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 19269              		.p2align 2
 19270              	.L729:
 19271 0578 99050000 		.word	.L728+1
 19272 057c BD050000 		.word	.L730+1
 19273 0580 E5050000 		.word	.L731+1
 19274 0584 17060000 		.word	.L732+1
 19275 0588 75060000 		.word	.L733+1
 19276 058c A3060000 		.word	.L734+1
 19277 0590 D3060000 		.word	.L735+1
 19278 0594 01070000 		.word	.L736+1
 19279              		.p2align 1
 19280              	.L728:
2529:..\src/command_processing.c ****             case INPUT_MODE_EXTERNAL:
2530:..\src/command_processing.c ****                 strcat(info_string, "Input mode: USB\r\n");
 19281              		.loc 1 2530 0
 19282 0598 7869     		ldr	r0, [r7, #20]
 19283 059a FFF7FEFF 		bl	strlen
 19284 059e 0346     		mov	r3, r0
 19285 05a0 1A46     		mov	r2, r3
 19286 05a2 7B69     		ldr	r3, [r7, #20]
 19287 05a4 1344     		add	r3, r3, r2
 19288 05a6 2F4A     		ldr	r2, .L781+28
 19289 05a8 1D46     		mov	r5, r3
 19290 05aa 1446     		mov	r4, r2
 19291 05ac 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19292 05ae 2860     		str	r0, [r5]	@ unaligned
 19293 05b0 6960     		str	r1, [r5, #4]	@ unaligned
 19294 05b2 AA60     		str	r2, [r5, #8]	@ unaligned
 19295 05b4 EB60     		str	r3, [r5, #12]	@ unaligned
 19296 05b6 2388     		ldrh	r3, [r4]	@ unaligned
 19297 05b8 2B82     		strh	r3, [r5, #16]	@ unaligned
2531:..\src/command_processing.c ****                 break;
 19298              		.loc 1 2531 0
 19299 05ba C4E0     		b	.L727
 19300              	.L730:
2532:..\src/command_processing.c ****             case INPUT_MODE_ENCODER3:
2533:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Handle\r\n");
 19301              		.loc 1 2533 0
 19302 05bc 7869     		ldr	r0, [r7, #20]
 19303 05be FFF7FEFF 		bl	strlen
 19304 05c2 0346     		mov	r3, r0
 19305 05c4 1A46     		mov	r2, r3
 19306 05c6 7B69     		ldr	r3, [r7, #20]
 19307 05c8 1344     		add	r3, r3, r2
 19308 05ca 274A     		ldr	r2, .L781+32
 19309 05cc 1D46     		mov	r5, r3
 19310 05ce 1446     		mov	r4, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 426


 19311 05d0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19312 05d2 2860     		str	r0, [r5]	@ unaligned
 19313 05d4 6960     		str	r1, [r5, #4]	@ unaligned
 19314 05d6 AA60     		str	r2, [r5, #8]	@ unaligned
 19315 05d8 EB60     		str	r3, [r5, #12]	@ unaligned
 19316 05da 2068     		ldr	r0, [r4]	@ unaligned
 19317 05dc 2861     		str	r0, [r5, #16]	@ unaligned
 19318 05de 2379     		ldrb	r3, [r4, #4]
 19319 05e0 2B75     		strb	r3, [r5, #20]
2534:..\src/command_processing.c ****                 break;
 19320              		.loc 1 2534 0
 19321 05e2 B0E0     		b	.L727
 19322              	.L731:
2535:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL:
2536:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional\r\n");
 19323              		.loc 1 2536 0
 19324 05e4 7869     		ldr	r0, [r7, #20]
 19325 05e6 FFF7FEFF 		bl	strlen
 19326 05ea 0346     		mov	r3, r0
 19327 05ec 1A46     		mov	r2, r3
 19328 05ee 7B69     		ldr	r3, [r7, #20]
 19329 05f0 1344     		add	r3, r3, r2
 19330 05f2 1E4A     		ldr	r2, .L781+36
 19331 05f4 1D46     		mov	r5, r3
 19332 05f6 1446     		mov	r4, r2
 19333 05f8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19334 05fa 2860     		str	r0, [r5]	@ unaligned
 19335 05fc 6960     		str	r1, [r5, #4]	@ unaligned
 19336 05fe AA60     		str	r2, [r5, #8]	@ unaligned
 19337 0600 EB60     		str	r3, [r5, #12]	@ unaligned
 19338 0602 07CC     		ldmia	r4!, {r0, r1, r2}
 19339 0604 2861     		str	r0, [r5, #16]	@ unaligned
 19340 0606 6961     		str	r1, [r5, #20]	@ unaligned
 19341 0608 AA61     		str	r2, [r5, #24]	@ unaligned
 19342 060a 2388     		ldrh	r3, [r4]	@ unaligned
 19343 060c A278     		ldrb	r2, [r4, #2]
 19344 060e AB83     		strh	r3, [r5, #28]	@ unaligned
 19345 0610 1346     		mov	r3, r2
 19346 0612 AB77     		strb	r3, [r5, #30]
2537:..\src/command_processing.c ****                 break;
 19347              		.loc 1 2537 0
 19348 0614 97E0     		b	.L727
 19349              	.L732:
2538:..\src/command_processing.c ****             case INPUT_MODE_EMG_INTEGRAL:
2539:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG integral\r\n");
 19350              		.loc 1 2539 0
 19351 0616 7869     		ldr	r0, [r7, #20]
 19352 0618 FFF7FEFF 		bl	strlen
 19353 061c 0346     		mov	r3, r0
 19354 061e 1A46     		mov	r2, r3
 19355 0620 7B69     		ldr	r3, [r7, #20]
 19356 0622 1344     		add	r3, r3, r2
 19357 0624 124A     		ldr	r2, .L781+40
 19358 0626 1D46     		mov	r5, r3
 19359 0628 1446     		mov	r4, r2
 19360 062a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19361 062c 2860     		str	r0, [r5]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 427


 19362 062e 6960     		str	r1, [r5, #4]	@ unaligned
 19363 0630 AA60     		str	r2, [r5, #8]	@ unaligned
 19364 0632 EB60     		str	r3, [r5, #12]	@ unaligned
 19365 0634 03CC     		ldmia	r4!, {r0, r1}
 19366 0636 2861     		str	r0, [r5, #16]	@ unaligned
 19367 0638 6961     		str	r1, [r5, #20]	@ unaligned
 19368 063a 2388     		ldrh	r3, [r4]	@ unaligned
 19369 063c A278     		ldrb	r2, [r4, #2]
 19370 063e 2B83     		strh	r3, [r5, #24]	@ unaligned
 19371 0640 1346     		mov	r3, r2
 19372 0642 AB76     		strb	r3, [r5, #26]
2540:..\src/command_processing.c ****                 break;
 19373              		.loc 1 2540 0
 19374 0644 7FE0     		b	.L727
 19375              	.L782:
 19376 0646 00BF     		.align	2
 19377              	.L781:
 19378 0648 0000F040 		.word	1089470464
 19379 064c 44140000 		.word	.LC191
 19380 0650 50140000 		.word	.LC192
 19381 0654 5C140000 		.word	.LC193
 19382 0658 D41D0000 		.word	.LC285
 19383 065c 84140000 		.word	.LC195
 19384 0660 A0140000 		.word	.LC196
 19385 0664 BC140000 		.word	.LC197
 19386 0668 D0140000 		.word	.LC198
 19387 066c E8140000 		.word	.LC199
 19388 0670 08150000 		.word	.LC200
 19389              	.L733:
2541:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS:
2542:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS\r\n");
 19390              		.loc 1 2542 0
 19391 0674 7869     		ldr	r0, [r7, #20]
 19392 0676 FFF7FEFF 		bl	strlen
 19393 067a 0346     		mov	r3, r0
 19394 067c 1A46     		mov	r2, r3
 19395 067e 7B69     		ldr	r3, [r7, #20]
 19396 0680 1344     		add	r3, r3, r2
 19397 0682 BA4A     		ldr	r2, .L783
 19398 0684 1C46     		mov	r4, r3
 19399 0686 1546     		mov	r5, r2
 19400 0688 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19401 068a 2060     		str	r0, [r4]	@ unaligned
 19402 068c 6160     		str	r1, [r4, #4]	@ unaligned
 19403 068e A260     		str	r2, [r4, #8]	@ unaligned
 19404 0690 E360     		str	r3, [r4, #12]	@ unaligned
 19405 0692 2868     		ldr	r0, [r5]	@ unaligned
 19406 0694 2061     		str	r0, [r4, #16]	@ unaligned
 19407 0696 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 19408 0698 AA79     		ldrb	r2, [r5, #6]
 19409 069a A382     		strh	r3, [r4, #20]	@ unaligned
 19410 069c 1346     		mov	r3, r2
 19411 069e A375     		strb	r3, [r4, #22]
2543:..\src/command_processing.c ****                 break;
 19412              		.loc 1 2543 0
 19413 06a0 51E0     		b	.L727
 19414              	.L734:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 428


2544:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS_ADV:
2545:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 19415              		.loc 1 2545 0
 19416 06a2 7869     		ldr	r0, [r7, #20]
 19417 06a4 FFF7FEFF 		bl	strlen
 19418 06a8 0346     		mov	r3, r0
 19419 06aa 1A46     		mov	r2, r3
 19420 06ac 7B69     		ldr	r3, [r7, #20]
 19421 06ae 1344     		add	r3, r3, r2
 19422 06b0 AF4A     		ldr	r2, .L783+4
 19423 06b2 1D46     		mov	r5, r3
 19424 06b4 1446     		mov	r4, r2
 19425 06b6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19426 06b8 2860     		str	r0, [r5]	@ unaligned
 19427 06ba 6960     		str	r1, [r5, #4]	@ unaligned
 19428 06bc AA60     		str	r2, [r5, #8]	@ unaligned
 19429 06be EB60     		str	r3, [r5, #12]	@ unaligned
 19430 06c0 03CC     		ldmia	r4!, {r0, r1}
 19431 06c2 2861     		str	r0, [r5, #16]	@ unaligned
 19432 06c4 6961     		str	r1, [r5, #20]	@ unaligned
 19433 06c6 2388     		ldrh	r3, [r4]	@ unaligned
 19434 06c8 A278     		ldrb	r2, [r4, #2]
 19435 06ca 2B83     		strh	r3, [r5, #24]	@ unaligned
 19436 06cc 1346     		mov	r3, r2
 19437 06ce AB76     		strb	r3, [r5, #26]
2546:..\src/command_processing.c ****                 break;
 19438              		.loc 1 2546 0
 19439 06d0 39E0     		b	.L727
 19440              	.L735:
2547:..\src/command_processing.c ****             case INPUT_MODE_JOYSTICK:
2548:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Joystick\r\n");
 19441              		.loc 1 2548 0
 19442 06d2 7869     		ldr	r0, [r7, #20]
 19443 06d4 FFF7FEFF 		bl	strlen
 19444 06d8 0346     		mov	r3, r0
 19445 06da 1A46     		mov	r2, r3
 19446 06dc 7B69     		ldr	r3, [r7, #20]
 19447 06de 1344     		add	r3, r3, r2
 19448 06e0 A44A     		ldr	r2, .L783+8
 19449 06e2 1C46     		mov	r4, r3
 19450 06e4 1546     		mov	r5, r2
 19451 06e6 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19452 06e8 2060     		str	r0, [r4]	@ unaligned
 19453 06ea 6160     		str	r1, [r4, #4]	@ unaligned
 19454 06ec A260     		str	r2, [r4, #8]	@ unaligned
 19455 06ee E360     		str	r3, [r4, #12]	@ unaligned
 19456 06f0 2868     		ldr	r0, [r5]	@ unaligned
 19457 06f2 2061     		str	r0, [r4, #16]	@ unaligned
 19458 06f4 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 19459 06f6 AA79     		ldrb	r2, [r5, #6]
 19460 06f8 A382     		strh	r3, [r4, #20]	@ unaligned
 19461 06fa 1346     		mov	r3, r2
 19462 06fc A375     		strb	r3, [r4, #22]
2549:..\src/command_processing.c ****                 break;
 19463              		.loc 1 2549 0
 19464 06fe 22E0     		b	.L727
 19465              	.L736:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 429


2550:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL_NC:
2551:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 19466              		.loc 1 2551 0
 19467 0700 7869     		ldr	r0, [r7, #20]
 19468 0702 FFF7FEFF 		bl	strlen
 19469 0706 0346     		mov	r3, r0
 19470 0708 1A46     		mov	r2, r3
 19471 070a 7B69     		ldr	r3, [r7, #20]
 19472 070c 1344     		add	r3, r3, r2
 19473 070e 9A4A     		ldr	r2, .L783+12
 19474 0710 1546     		mov	r5, r2
 19475 0712 9E46     		mov	lr, r3
 19476 0714 05F1200C 		add	ip, r5, #32
 19477              	.L737:
 19478 0718 7446     		mov	r4, lr
 19479 071a 2E46     		mov	r6, r5
 19480 071c 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 19481 071e 2060     		str	r0, [r4]	@ unaligned
 19482 0720 6160     		str	r1, [r4, #4]	@ unaligned
 19483 0722 A260     		str	r2, [r4, #8]	@ unaligned
 19484 0724 E360     		str	r3, [r4, #12]	@ unaligned
 19485 0726 1035     		adds	r5, r5, #16
 19486 0728 0EF1100E 		add	lr, lr, #16
 19487 072c 6545     		cmp	r5, ip
 19488 072e F3D1     		bne	.L737
 19489 0730 7446     		mov	r4, lr
 19490 0732 2B46     		mov	r3, r5
 19491 0734 07CB     		ldmia	r3!, {r0, r1, r2}
 19492 0736 2060     		str	r0, [r4]	@ unaligned
 19493 0738 6160     		str	r1, [r4, #4]	@ unaligned
 19494 073a A260     		str	r2, [r4, #8]	@ unaligned
 19495 073c 1A88     		ldrh	r2, [r3]	@ unaligned
 19496 073e 9B78     		ldrb	r3, [r3, #2]
 19497 0740 A281     		strh	r2, [r4, #12]	@ unaligned
 19498 0742 A373     		strb	r3, [r4, #14]
2552:..\src/command_processing.c ****                 break;
 19499              		.loc 1 2552 0
 19500 0744 00BF     		nop
 19501              	.L727:
2553:..\src/command_processing.c ****         }
2554:..\src/command_processing.c **** 
2555:..\src/command_processing.c ****         switch(MOT->control_mode) {
 19502              		.loc 1 2555 0
 19503 0746 D7F88430 		ldr	r3, [r7, #132]
 19504 074a 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 19505 074e 032B     		cmp	r3, #3
 19506 0750 63D8     		bhi	.L777
 19507 0752 01A2     		adr	r2, .L740
 19508 0754 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 19509              		.p2align 2
 19510              	.L740:
 19511 0758 69070000 		.word	.L739+1
 19512 075c 93070000 		.word	.L741+1
 19513 0760 B7070000 		.word	.L742+1
 19514 0764 DD070000 		.word	.L743+1
 19515              		.p2align 1
 19516              	.L739:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 430


2556:..\src/command_processing.c ****             case CONTROL_ANGLE:
2557:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position\r\n");
 19517              		.loc 1 2557 0
 19518 0768 7869     		ldr	r0, [r7, #20]
 19519 076a FFF7FEFF 		bl	strlen
 19520 076e 0346     		mov	r3, r0
 19521 0770 1A46     		mov	r2, r3
 19522 0772 7B69     		ldr	r3, [r7, #20]
 19523 0774 1344     		add	r3, r3, r2
 19524 0776 814A     		ldr	r2, .L783+16
 19525 0778 1D46     		mov	r5, r3
 19526 077a 1446     		mov	r4, r2
 19527 077c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19528 077e 2860     		str	r0, [r5]	@ unaligned
 19529 0780 6960     		str	r1, [r5, #4]	@ unaligned
 19530 0782 AA60     		str	r2, [r5, #8]	@ unaligned
 19531 0784 EB60     		str	r3, [r5, #12]	@ unaligned
 19532 0786 03CC     		ldmia	r4!, {r0, r1}
 19533 0788 2861     		str	r0, [r5, #16]	@ unaligned
 19534 078a 6961     		str	r1, [r5, #20]	@ unaligned
 19535 078c 2378     		ldrb	r3, [r4]
 19536 078e 2B76     		strb	r3, [r5, #24]
2558:..\src/command_processing.c ****                 break;
 19537              		.loc 1 2558 0
 19538 0790 44E0     		b	.L744
 19539              	.L741:
2559:..\src/command_processing.c ****             case CONTROL_PWM:
2560:..\src/command_processing.c ****                 strcat(info_string, "Control mode: PWM\r\n");
 19540              		.loc 1 2560 0
 19541 0792 7869     		ldr	r0, [r7, #20]
 19542 0794 FFF7FEFF 		bl	strlen
 19543 0798 0346     		mov	r3, r0
 19544 079a 1A46     		mov	r2, r3
 19545 079c 7B69     		ldr	r3, [r7, #20]
 19546 079e 1344     		add	r3, r3, r2
 19547 07a0 774A     		ldr	r2, .L783+20
 19548 07a2 1D46     		mov	r5, r3
 19549 07a4 1446     		mov	r4, r2
 19550 07a6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19551 07a8 2860     		str	r0, [r5]	@ unaligned
 19552 07aa 6960     		str	r1, [r5, #4]	@ unaligned
 19553 07ac AA60     		str	r2, [r5, #8]	@ unaligned
 19554 07ae EB60     		str	r3, [r5, #12]	@ unaligned
 19555 07b0 2068     		ldr	r0, [r4]	@ unaligned
 19556 07b2 2861     		str	r0, [r5, #16]	@ unaligned
2561:..\src/command_processing.c ****                 break;
 19557              		.loc 1 2561 0
 19558 07b4 32E0     		b	.L744
 19559              	.L742:
2562:..\src/command_processing.c ****             case CONTROL_CURRENT:
2563:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Current\r\n");
 19560              		.loc 1 2563 0
 19561 07b6 7869     		ldr	r0, [r7, #20]
 19562 07b8 FFF7FEFF 		bl	strlen
 19563 07bc 0346     		mov	r3, r0
 19564 07be 1A46     		mov	r2, r3
 19565 07c0 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 431


 19566 07c2 1344     		add	r3, r3, r2
 19567 07c4 6F4A     		ldr	r2, .L783+24
 19568 07c6 1D46     		mov	r5, r3
 19569 07c8 1446     		mov	r4, r2
 19570 07ca 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19571 07cc 2860     		str	r0, [r5]	@ unaligned
 19572 07ce 6960     		str	r1, [r5, #4]	@ unaligned
 19573 07d0 AA60     		str	r2, [r5, #8]	@ unaligned
 19574 07d2 EB60     		str	r3, [r5, #12]	@ unaligned
 19575 07d4 03CC     		ldmia	r4!, {r0, r1}
 19576 07d6 2861     		str	r0, [r5, #16]	@ unaligned
 19577 07d8 6961     		str	r1, [r5, #20]	@ unaligned
2564:..\src/command_processing.c ****                 break;
 19578              		.loc 1 2564 0
 19579 07da 1FE0     		b	.L744
 19580              	.L743:
2565:..\src/command_processing.c ****             case CURR_AND_POS_CONTROL:
2566:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position and Current\r\n");
 19581              		.loc 1 2566 0
 19582 07dc 7869     		ldr	r0, [r7, #20]
 19583 07de FFF7FEFF 		bl	strlen
 19584 07e2 0346     		mov	r3, r0
 19585 07e4 1A46     		mov	r2, r3
 19586 07e6 7B69     		ldr	r3, [r7, #20]
 19587 07e8 1344     		add	r3, r3, r2
 19588 07ea 674A     		ldr	r2, .L783+28
 19589 07ec 1446     		mov	r4, r2
 19590 07ee 9E46     		mov	lr, r3
 19591 07f0 04F1200C 		add	ip, r4, #32
 19592              	.L745:
 19593 07f4 7546     		mov	r5, lr
 19594 07f6 2646     		mov	r6, r4
 19595 07f8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 19596 07fa 2860     		str	r0, [r5]	@ unaligned
 19597 07fc 6960     		str	r1, [r5, #4]	@ unaligned
 19598 07fe AA60     		str	r2, [r5, #8]	@ unaligned
 19599 0800 EB60     		str	r3, [r5, #12]	@ unaligned
 19600 0802 1034     		adds	r4, r4, #16
 19601 0804 0EF1100E 		add	lr, lr, #16
 19602 0808 6445     		cmp	r4, ip
 19603 080a F3D1     		bne	.L745
 19604 080c 7346     		mov	r3, lr
 19605 080e 2246     		mov	r2, r4
 19606 0810 1068     		ldr	r0, [r2]	@ unaligned
 19607 0812 1860     		str	r0, [r3]	@ unaligned
 19608 0814 1279     		ldrb	r2, [r2, #4]
 19609 0816 1A71     		strb	r2, [r3, #4]
2567:..\src/command_processing.c ****                 break;
 19610              		.loc 1 2567 0
 19611 0818 00E0     		b	.L744
 19612              	.L777:
2568:..\src/command_processing.c ****             default:
2569:..\src/command_processing.c ****                 break;
 19613              		.loc 1 2569 0
 19614 081a 00BF     		nop
 19615              	.L744:
2570:..\src/command_processing.c ****         }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 432


2571:..\src/command_processing.c **** 
2572:..\src/command_processing.c ****         if (MEM_P->enc[ENC_L].double_encoder_on_off)
 19616              		.loc 1 2572 0
 19617 081c 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19618 0820 D7F88C10 		ldr	r1, [r7, #140]
 19619 0824 1346     		mov	r3, r2
 19620 0826 5B00     		lsls	r3, r3, #1
 19621 0828 1344     		add	r3, r3, r2
 19622 082a 1B01     		lsls	r3, r3, #4
 19623 082c 0B44     		add	r3, r3, r1
 19624 082e 03F5D873 		add	r3, r3, #432
 19625 0832 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19626 0834 002B     		cmp	r3, #0
 19627 0836 1CD0     		beq	.L746
2573:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: YES\r\n");
 19628              		.loc 1 2573 0
 19629 0838 7869     		ldr	r0, [r7, #20]
 19630 083a FFF7FEFF 		bl	strlen
 19631 083e 0346     		mov	r3, r0
 19632 0840 1A46     		mov	r2, r3
 19633 0842 7B69     		ldr	r3, [r7, #20]
 19634 0844 1344     		add	r3, r3, r2
 19635 0846 514A     		ldr	r2, .L783+32
 19636 0848 1446     		mov	r4, r2
 19637 084a 9E46     		mov	lr, r3
 19638 084c 04F1200C 		add	ip, r4, #32
 19639              	.L747:
 19640 0850 7546     		mov	r5, lr
 19641 0852 2646     		mov	r6, r4
 19642 0854 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 19643 0856 2860     		str	r0, [r5]	@ unaligned
 19644 0858 6960     		str	r1, [r5, #4]	@ unaligned
 19645 085a AA60     		str	r2, [r5, #8]	@ unaligned
 19646 085c EB60     		str	r3, [r5, #12]	@ unaligned
 19647 085e 1034     		adds	r4, r4, #16
 19648 0860 0EF1100E 		add	lr, lr, #16
 19649 0864 6445     		cmp	r4, ip
 19650 0866 F3D1     		bne	.L747
 19651 0868 7346     		mov	r3, lr
 19652 086a 2246     		mov	r2, r4
 19653 086c 1278     		ldrb	r2, [r2]
 19654 086e 1A70     		strb	r2, [r3]
 19655 0870 13E0     		b	.L748
 19656              	.L746:
2574:..\src/command_processing.c ****         else
2575:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: NO\r\n");
 19657              		.loc 1 2575 0
 19658 0872 7869     		ldr	r0, [r7, #20]
 19659 0874 FFF7FEFF 		bl	strlen
 19660 0878 0346     		mov	r3, r0
 19661 087a 1A46     		mov	r2, r3
 19662 087c 7B69     		ldr	r3, [r7, #20]
 19663 087e 1344     		add	r3, r3, r2
 19664 0880 434A     		ldr	r2, .L783+36
 19665 0882 1C46     		mov	r4, r3
 19666 0884 1546     		mov	r5, r2
 19667 0886 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 433


 19668 0888 2060     		str	r0, [r4]	@ unaligned
 19669 088a 6160     		str	r1, [r4, #4]	@ unaligned
 19670 088c A260     		str	r2, [r4, #8]	@ unaligned
 19671 088e E360     		str	r3, [r4, #12]	@ unaligned
 19672 0890 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19673 0892 2061     		str	r0, [r4, #16]	@ unaligned
 19674 0894 6161     		str	r1, [r4, #20]	@ unaligned
 19675 0896 A261     		str	r2, [r4, #24]	@ unaligned
 19676 0898 E361     		str	r3, [r4, #28]	@ unaligned
 19677              	.L748:
2576:..\src/command_processing.c **** 
2577:..\src/command_processing.c ****         strcat(info_string, "Resolutions: ");
 19678              		.loc 1 2577 0
 19679 089a 7869     		ldr	r0, [r7, #20]
 19680 089c FFF7FEFF 		bl	strlen
 19681 08a0 0346     		mov	r3, r0
 19682 08a2 1A46     		mov	r2, r3
 19683 08a4 7B69     		ldr	r3, [r7, #20]
 19684 08a6 1344     		add	r3, r3, r2
 19685 08a8 3A4A     		ldr	r2, .L783+40
 19686 08aa 1C46     		mov	r4, r3
 19687 08ac 1346     		mov	r3, r2
 19688 08ae 07CB     		ldmia	r3!, {r0, r1, r2}
 19689 08b0 2060     		str	r0, [r4]	@ unaligned
 19690 08b2 6160     		str	r1, [r4, #4]	@ unaligned
 19691 08b4 A260     		str	r2, [r4, #8]	@ unaligned
 19692 08b6 1B88     		ldrh	r3, [r3]	@ unaligned
 19693 08b8 A381     		strh	r3, [r4, #12]	@ unaligned
2578:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 19694              		.loc 1 2578 0
 19695 08ba 0023     		movs	r3, #0
 19696 08bc C7F89430 		str	r3, [r7, #148]
 19697 08c0 30E0     		b	.L749
 19698              	.L751:
2579:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 19699              		.loc 1 2579 0
 19700 08c2 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19701 08c6 D7F88C10 		ldr	r1, [r7, #140]
 19702 08ca 1346     		mov	r3, r2
 19703 08cc 5B00     		lsls	r3, r3, #1
 19704 08ce 1344     		add	r3, r3, r2
 19705 08d0 1B01     		lsls	r3, r3, #4
 19706 08d2 CA18     		adds	r2, r1, r3
 19707 08d4 D7F89430 		ldr	r3, [r7, #148]
 19708 08d8 1344     		add	r3, r3, r2
 19709 08da 03F29513 		addw	r3, r3, #405
 19710 08de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19711 08e0 1A46     		mov	r2, r3
 19712 08e2 07F11C03 		add	r3, r7, #28
 19713 08e6 2C49     		ldr	r1, .L783+44
 19714 08e8 1846     		mov	r0, r3
 19715 08ea FFF7FEFF 		bl	sprintf
2580:..\src/command_processing.c ****             strcat(info_string, str);
 19716              		.loc 1 2580 0
 19717 08ee 07F11C03 		add	r3, r7, #28
 19718 08f2 1946     		mov	r1, r3
 19719 08f4 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 434


 19720 08f6 FFF7FEFF 		bl	strcat
2581:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 19721              		.loc 1 2581 0
 19722 08fa D7F89430 		ldr	r3, [r7, #148]
 19723 08fe 022B     		cmp	r3, #2
 19724 0900 0BD0     		beq	.L750
2582:..\src/command_processing.c ****                 strcat(info_string, ", ");
 19725              		.loc 1 2582 0
 19726 0902 7869     		ldr	r0, [r7, #20]
 19727 0904 FFF7FEFF 		bl	strlen
 19728 0908 0346     		mov	r3, r0
 19729 090a 1A46     		mov	r2, r3
 19730 090c 7B69     		ldr	r3, [r7, #20]
 19731 090e 1344     		add	r3, r3, r2
 19732 0910 224A     		ldr	r2, .L783+48
 19733 0912 1188     		ldrh	r1, [r2]	@ unaligned
 19734 0914 9278     		ldrb	r2, [r2, #2]
 19735 0916 1980     		strh	r1, [r3]	@ unaligned
 19736 0918 9A70     		strb	r2, [r3, #2]
 19737              	.L750:
2578:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 19738              		.loc 1 2578 0 discriminator 2
 19739 091a D7F89430 		ldr	r3, [r7, #148]
 19740 091e 0133     		adds	r3, r3, #1
 19741 0920 C7F89430 		str	r3, [r7, #148]
 19742              	.L749:
2578:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 19743              		.loc 1 2578 0 is_stmt 0 discriminator 1
 19744 0924 D7F89430 		ldr	r3, [r7, #148]
 19745 0928 022B     		cmp	r3, #2
 19746 092a CADD     		ble	.L751
2583:..\src/command_processing.c ****             }                
2584:..\src/command_processing.c ****         }
2585:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 19747              		.loc 1 2585 0 is_stmt 1
 19748 092c 7869     		ldr	r0, [r7, #20]
 19749 092e FFF7FEFF 		bl	strlen
 19750 0932 0346     		mov	r3, r0
 19751 0934 1A46     		mov	r2, r3
 19752 0936 7B69     		ldr	r3, [r7, #20]
 19753 0938 1344     		add	r3, r3, r2
 19754 093a 194A     		ldr	r2, .L783+52
 19755 093c 1188     		ldrh	r1, [r2]	@ unaligned
 19756 093e 9278     		ldrb	r2, [r2, #2]
 19757 0940 1980     		strh	r1, [r3]	@ unaligned
 19758 0942 9A70     		strb	r2, [r3, #2]
2586:..\src/command_processing.c **** 
2587:..\src/command_processing.c ****         strcat(info_string, "Offsets: ");
 19759              		.loc 1 2587 0
 19760 0944 7869     		ldr	r0, [r7, #20]
 19761 0946 FFF7FEFF 		bl	strlen
 19762 094a 0346     		mov	r3, r0
 19763 094c 1A46     		mov	r2, r3
 19764 094e 7B69     		ldr	r3, [r7, #20]
 19765 0950 1344     		add	r3, r3, r2
 19766 0952 1449     		ldr	r1, .L783+56
 19767 0954 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 435


 19768 0956 0B46     		mov	r3, r1
 19769 0958 03CB     		ldmia	r3!, {r0, r1}
 19770 095a 1060     		str	r0, [r2]	@ unaligned
 19771 095c 5160     		str	r1, [r2, #4]	@ unaligned
 19772 095e 1B88     		ldrh	r3, [r3]	@ unaligned
 19773 0960 1381     		strh	r3, [r2, #8]	@ unaligned
2588:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 19774              		.loc 1 2588 0
 19775 0962 0023     		movs	r3, #0
 19776 0964 C7F89430 		str	r3, [r7, #148]
 19777 0968 5EE0     		b	.L752
 19778              	.L784:
 19779 096a 00BF     		.align	2
 19780              	.L783:
 19781 096c 24150000 		.word	.LC201
 19782 0970 3C150000 		.word	.LC202
 19783 0974 58150000 		.word	.LC203
 19784 0978 70150000 		.word	.LC204
 19785 097c A0150000 		.word	.LC205
 19786 0980 BC150000 		.word	.LC206
 19787 0984 D0150000 		.word	.LC207
 19788 0988 E8150000 		.word	.LC208
 19789 098c 10160000 		.word	.LC209
 19790 0990 34160000 		.word	.LC210
 19791 0994 E41D0000 		.word	.LC286
 19792 0998 64130000 		.word	.LC182
 19793 099c 68130000 		.word	.LC183
 19794 09a0 30110000 		.word	.LC151
 19795 09a4 F41D0000 		.word	.LC287
 19796              	.L754:
2589:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 19797              		.loc 1 2589 0
 19798 09a8 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19799 09ac D7F88C10 		ldr	r1, [r7, #140]
 19800 09b0 1346     		mov	r3, r2
 19801 09b2 5B00     		lsls	r3, r3, #1
 19802 09b4 1344     		add	r3, r3, r2
 19803 09b6 9B00     		lsls	r3, r3, #2
 19804 09b8 D7F89420 		ldr	r2, [r7, #148]
 19805 09bc 1344     		add	r3, r3, r2
 19806 09be 6633     		adds	r3, r3, #102
 19807 09c0 51F82310 		ldr	r1, [r1, r3, lsl #2]
 19808 09c4 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19809 09c8 D7F88C00 		ldr	r0, [r7, #140]
 19810 09cc 1346     		mov	r3, r2
 19811 09ce 5B00     		lsls	r3, r3, #1
 19812 09d0 1344     		add	r3, r3, r2
 19813 09d2 1B01     		lsls	r3, r3, #4
 19814 09d4 C218     		adds	r2, r0, r3
 19815 09d6 D7F89430 		ldr	r3, [r7, #148]
 19816 09da 1344     		add	r3, r3, r2
 19817 09dc 03F29513 		addw	r3, r3, #405
 19818 09e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19819 09e2 41FA03F2 		asr	r2, r1, r3
 19820 09e6 07F11C03 		add	r3, r7, #28
 19821 09ea CF49     		ldr	r1, .L785
 19822 09ec 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 436


 19823 09ee FFF7FEFF 		bl	sprintf
2590:..\src/command_processing.c ****             strcat(info_string, str);
 19824              		.loc 1 2590 0
 19825 09f2 07F11C03 		add	r3, r7, #28
 19826 09f6 1946     		mov	r1, r3
 19827 09f8 7869     		ldr	r0, [r7, #20]
 19828 09fa FFF7FEFF 		bl	strcat
2591:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 19829              		.loc 1 2591 0
 19830 09fe D7F89430 		ldr	r3, [r7, #148]
 19831 0a02 022B     		cmp	r3, #2
 19832 0a04 0BD0     		beq	.L753
2592:..\src/command_processing.c ****                 strcat(info_string, ", ");
 19833              		.loc 1 2592 0
 19834 0a06 7869     		ldr	r0, [r7, #20]
 19835 0a08 FFF7FEFF 		bl	strlen
 19836 0a0c 0346     		mov	r3, r0
 19837 0a0e 1A46     		mov	r2, r3
 19838 0a10 7B69     		ldr	r3, [r7, #20]
 19839 0a12 1344     		add	r3, r3, r2
 19840 0a14 C54A     		ldr	r2, .L785+4
 19841 0a16 1188     		ldrh	r1, [r2]	@ unaligned
 19842 0a18 9278     		ldrb	r2, [r2, #2]
 19843 0a1a 1980     		strh	r1, [r3]	@ unaligned
 19844 0a1c 9A70     		strb	r2, [r3, #2]
 19845              	.L753:
2588:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 19846              		.loc 1 2588 0 discriminator 2
 19847 0a1e D7F89430 		ldr	r3, [r7, #148]
 19848 0a22 0133     		adds	r3, r3, #1
 19849 0a24 C7F89430 		str	r3, [r7, #148]
 19850              	.L752:
2588:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 19851              		.loc 1 2588 0 is_stmt 0 discriminator 1
 19852 0a28 D7F89430 		ldr	r3, [r7, #148]
 19853 0a2c 022B     		cmp	r3, #2
 19854 0a2e BBDD     		ble	.L754
2593:..\src/command_processing.c ****             }
2594:..\src/command_processing.c ****         }
2595:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 19855              		.loc 1 2595 0 is_stmt 1
 19856 0a30 7869     		ldr	r0, [r7, #20]
 19857 0a32 FFF7FEFF 		bl	strlen
 19858 0a36 0346     		mov	r3, r0
 19859 0a38 1A46     		mov	r2, r3
 19860 0a3a 7B69     		ldr	r3, [r7, #20]
 19861 0a3c 1344     		add	r3, r3, r2
 19862 0a3e BC4A     		ldr	r2, .L785+8
 19863 0a40 1188     		ldrh	r1, [r2]	@ unaligned
 19864 0a42 9278     		ldrb	r2, [r2, #2]
 19865 0a44 1980     		strh	r1, [r3]	@ unaligned
 19866 0a46 9A70     		strb	r2, [r3, #2]
2596:..\src/command_processing.c ****             
2597:..\src/command_processing.c ****         strcat(info_string, "Multipliers: ");
 19867              		.loc 1 2597 0
 19868 0a48 7869     		ldr	r0, [r7, #20]
 19869 0a4a FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 437


 19870 0a4e 0346     		mov	r3, r0
 19871 0a50 1A46     		mov	r2, r3
 19872 0a52 7B69     		ldr	r3, [r7, #20]
 19873 0a54 1344     		add	r3, r3, r2
 19874 0a56 B74A     		ldr	r2, .L785+12
 19875 0a58 1C46     		mov	r4, r3
 19876 0a5a 1346     		mov	r3, r2
 19877 0a5c 07CB     		ldmia	r3!, {r0, r1, r2}
 19878 0a5e 2060     		str	r0, [r4]	@ unaligned
 19879 0a60 6160     		str	r1, [r4, #4]	@ unaligned
 19880 0a62 A260     		str	r2, [r4, #8]	@ unaligned
 19881 0a64 1B88     		ldrh	r3, [r3]	@ unaligned
 19882 0a66 A381     		strh	r3, [r4, #12]	@ unaligned
2598:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 19883              		.loc 1 2598 0
 19884 0a68 0023     		movs	r3, #0
 19885 0a6a C7F89430 		str	r3, [r7, #148]
 19886 0a6e 35E0     		b	.L755
 19887              	.L757:
2599:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 19888              		.loc 1 2599 0
 19889 0a70 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19890 0a74 D7F88C10 		ldr	r1, [r7, #140]
 19891 0a78 1346     		mov	r3, r2
 19892 0a7a 5B00     		lsls	r3, r3, #1
 19893 0a7c 1344     		add	r3, r3, r2
 19894 0a7e 9B00     		lsls	r3, r3, #2
 19895 0a80 D7F89420 		ldr	r2, [r7, #148]
 19896 0a84 1344     		add	r3, r3, r2
 19897 0a86 6833     		adds	r3, r3, #104
 19898 0a88 9B00     		lsls	r3, r3, #2
 19899 0a8a 0B44     		add	r3, r3, r1
 19900 0a8c 5B68     		ldr	r3, [r3, #4]	@ float
 19901 0a8e 1846     		mov	r0, r3
 19902 0a90 FFF7FEFF 		bl	__aeabi_f2d
 19903 0a94 0346     		mov	r3, r0
 19904 0a96 0C46     		mov	r4, r1
 19905 0a98 07F11C00 		add	r0, r7, #28
 19906 0a9c 1A46     		mov	r2, r3
 19907 0a9e 2346     		mov	r3, r4
 19908 0aa0 A549     		ldr	r1, .L785+16
 19909 0aa2 FFF7FEFF 		bl	sprintf
2600:..\src/command_processing.c ****             strcat(info_string, str);
 19910              		.loc 1 2600 0
 19911 0aa6 07F11C03 		add	r3, r7, #28
 19912 0aaa 1946     		mov	r1, r3
 19913 0aac 7869     		ldr	r0, [r7, #20]
 19914 0aae FFF7FEFF 		bl	strcat
2601:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 19915              		.loc 1 2601 0
 19916 0ab2 D7F89430 		ldr	r3, [r7, #148]
 19917 0ab6 022B     		cmp	r3, #2
 19918 0ab8 0BD0     		beq	.L756
2602:..\src/command_processing.c ****                 strcat(info_string, ", ");
 19919              		.loc 1 2602 0
 19920 0aba 7869     		ldr	r0, [r7, #20]
 19921 0abc FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 438


 19922 0ac0 0346     		mov	r3, r0
 19923 0ac2 1A46     		mov	r2, r3
 19924 0ac4 7B69     		ldr	r3, [r7, #20]
 19925 0ac6 1344     		add	r3, r3, r2
 19926 0ac8 984A     		ldr	r2, .L785+4
 19927 0aca 1188     		ldrh	r1, [r2]	@ unaligned
 19928 0acc 9278     		ldrb	r2, [r2, #2]
 19929 0ace 1980     		strh	r1, [r3]	@ unaligned
 19930 0ad0 9A70     		strb	r2, [r3, #2]
 19931              	.L756:
2598:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 19932              		.loc 1 2598 0 discriminator 2
 19933 0ad2 D7F89430 		ldr	r3, [r7, #148]
 19934 0ad6 0133     		adds	r3, r3, #1
 19935 0ad8 C7F89430 		str	r3, [r7, #148]
 19936              	.L755:
2598:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 19937              		.loc 1 2598 0 is_stmt 0 discriminator 1
 19938 0adc D7F89430 		ldr	r3, [r7, #148]
 19939 0ae0 022B     		cmp	r3, #2
 19940 0ae2 C5DD     		ble	.L757
2603:..\src/command_processing.c ****             }
2604:..\src/command_processing.c ****         }
2605:..\src/command_processing.c ****         strcat(info_string, "\r\n");       
 19941              		.loc 1 2605 0 is_stmt 1
 19942 0ae4 7869     		ldr	r0, [r7, #20]
 19943 0ae6 FFF7FEFF 		bl	strlen
 19944 0aea 0346     		mov	r3, r0
 19945 0aec 1A46     		mov	r2, r3
 19946 0aee 7B69     		ldr	r3, [r7, #20]
 19947 0af0 1344     		add	r3, r3, r2
 19948 0af2 8F4A     		ldr	r2, .L785+8
 19949 0af4 1188     		ldrh	r1, [r2]	@ unaligned
 19950 0af6 9278     		ldrb	r2, [r2, #2]
 19951 0af8 1980     		strh	r1, [r3]	@ unaligned
 19952 0afa 9A70     		strb	r2, [r3, #2]
2606:..\src/command_processing.c **** 
2607:..\src/command_processing.c **** 		sprintf(str, "Current lookup table p[0] - p[5]: %f, %f, %f, %f, %f, %f\r\n", MOT->curr_lookup[0],
 19953              		.loc 1 2607 0
 19954 0afc D7F88430 		ldr	r3, [r7, #132]
 19955 0b00 5B6C     		ldr	r3, [r3, #68]	@ float
 19956 0b02 1846     		mov	r0, r3
 19957 0b04 FFF7FEFF 		bl	__aeabi_f2d
 19958 0b08 C7E90201 		strd	r0, [r7, #8]
 19959 0b0c D7F88430 		ldr	r3, [r7, #132]
 19960 0b10 9B6C     		ldr	r3, [r3, #72]	@ float
 19961 0b12 1846     		mov	r0, r3
 19962 0b14 FFF7FEFF 		bl	__aeabi_f2d
 19963 0b18 0446     		mov	r4, r0
 19964 0b1a 0D46     		mov	r5, r1
 19965 0b1c D7F88430 		ldr	r3, [r7, #132]
 19966 0b20 DB6C     		ldr	r3, [r3, #76]	@ float
 19967 0b22 1846     		mov	r0, r3
 19968 0b24 FFF7FEFF 		bl	__aeabi_f2d
 19969 0b28 8046     		mov	r8, r0
 19970 0b2a 8946     		mov	r9, r1
 19971 0b2c D7F88430 		ldr	r3, [r7, #132]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 439


 19972 0b30 1B6D     		ldr	r3, [r3, #80]	@ float
 19973 0b32 1846     		mov	r0, r3
 19974 0b34 FFF7FEFF 		bl	__aeabi_f2d
 19975 0b38 8246     		mov	r10, r0
 19976 0b3a 8B46     		mov	fp, r1
 19977 0b3c D7F88430 		ldr	r3, [r7, #132]
 19978 0b40 5B6D     		ldr	r3, [r3, #84]	@ float
 19979 0b42 1846     		mov	r0, r3
 19980 0b44 FFF7FEFF 		bl	__aeabi_f2d
 19981 0b48 C7E90001 		strd	r0, [r7]
 19982 0b4c D7F88430 		ldr	r3, [r7, #132]
 19983 0b50 9B6D     		ldr	r3, [r3, #88]	@ float
 19984 0b52 1846     		mov	r0, r3
 19985 0b54 FFF7FEFF 		bl	__aeabi_f2d
 19986 0b58 0246     		mov	r2, r0
 19987 0b5a 0B46     		mov	r3, r1
 19988 0b5c 07F11C00 		add	r0, r7, #28
 19989 0b60 CDE90823 		strd	r2, [sp, #32]
 19990 0b64 D7E90012 		ldrd	r1, [r7]
 19991 0b68 CDE90612 		strd	r1, [sp, #24]
 19992 0b6c CDE904AB 		strd	r10, [sp, #16]
 19993 0b70 CDE90289 		strd	r8, [sp, #8]
 19994 0b74 CDE90045 		strd	r4, [sp]
 19995 0b78 D7E90223 		ldrd	r2, [r7, #8]
 19996 0b7c 6F49     		ldr	r1, .L785+20
 19997 0b7e FFF7FEFF 		bl	sprintf
2608:..\src/command_processing.c **** 		strcat(info_string, str);
 19998              		.loc 1 2608 0
 19999 0b82 07F11C03 		add	r3, r7, #28
 20000 0b86 1946     		mov	r1, r3
 20001 0b88 7869     		ldr	r0, [r7, #20]
 20002 0b8a FFF7FEFF 		bl	strcat
2609:..\src/command_processing.c **** 
2610:..\src/command_processing.c **** 		sprintf(str, "Position limit active: %d\r\n", (int)MOT->pos_lim_flag);
 20003              		.loc 1 2610 0
 20004 0b8e D7F88430 		ldr	r3, [r7, #132]
 20005 0b92 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 20006 0b96 1A46     		mov	r2, r3
 20007 0b98 07F11C03 		add	r3, r7, #28
 20008 0b9c 6849     		ldr	r1, .L785+24
 20009 0b9e 1846     		mov	r0, r3
 20010 0ba0 FFF7FEFF 		bl	sprintf
2611:..\src/command_processing.c **** 		strcat(info_string, str);
 20011              		.loc 1 2611 0
 20012 0ba4 07F11C03 		add	r3, r7, #28
 20013 0ba8 1946     		mov	r1, r3
 20014 0baa 7869     		ldr	r0, [r7, #20]
 20015 0bac FFF7FEFF 		bl	strcat
2612:..\src/command_processing.c **** 
2613:..\src/command_processing.c **** 		sprintf(str, "Position limits: inf -> %ld, sup -> %ld\r\n", (int32)MOT->pos_lim_inf >> MEM_P->enc
 20016              		.loc 1 2613 0
 20017 0bb0 D7F88430 		ldr	r3, [r7, #132]
 20018 0bb4 596B     		ldr	r1, [r3, #52]
 20019 0bb6 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 20020 0bba D7F88C00 		ldr	r0, [r7, #140]
 20021 0bbe 1346     		mov	r3, r2
 20022 0bc0 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 440


 20023 0bc2 1344     		add	r3, r3, r2
 20024 0bc4 1B01     		lsls	r3, r3, #4
 20025 0bc6 0344     		add	r3, r3, r0
 20026 0bc8 03F29513 		addw	r3, r3, #405
 20027 0bcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20028 0bce 41FA03F4 		asr	r4, r1, r3
 20029 0bd2 D7F88430 		ldr	r3, [r7, #132]
 20030 0bd6 996B     		ldr	r1, [r3, #56]
 20031 0bd8 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 20032 0bdc D7F88C00 		ldr	r0, [r7, #140]
 20033 0be0 1346     		mov	r3, r2
 20034 0be2 5B00     		lsls	r3, r3, #1
 20035 0be4 1344     		add	r3, r3, r2
 20036 0be6 1B01     		lsls	r3, r3, #4
 20037 0be8 0344     		add	r3, r3, r0
 20038 0bea 03F29513 		addw	r3, r3, #405
 20039 0bee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20040 0bf0 41FA03F3 		asr	r3, r1, r3
 20041 0bf4 07F11C00 		add	r0, r7, #28
 20042 0bf8 2246     		mov	r2, r4
 20043 0bfa 5249     		ldr	r1, .L785+28
 20044 0bfc FFF7FEFF 		bl	sprintf
2614:..\src/command_processing.c **** 		strcat(info_string, str);
 20045              		.loc 1 2614 0
 20046 0c00 07F11C03 		add	r3, r7, #28
 20047 0c04 1946     		mov	r1, r3
 20048 0c06 7869     		ldr	r0, [r7, #20]
 20049 0c08 FFF7FEFF 		bl	strcat
2615:..\src/command_processing.c **** 
2616:..\src/command_processing.c **** 		sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 20050              		.loc 1 2616 0
 20051 0c0c D7F88430 		ldr	r3, [r7, #132]
 20052 0c10 B3F95C30 		ldrsh	r3, [r3, #92]
 20053 0c14 1A46     		mov	r2, r3
 20054 0c16 07F11C03 		add	r3, r7, #28
 20055 0c1a 4B49     		ldr	r1, .L785+32
 20056 0c1c 1846     		mov	r0, r3
 20057 0c1e FFF7FEFF 		bl	sprintf
2617:..\src/command_processing.c **** 		strcat(info_string, str);
 20058              		.loc 1 2617 0
 20059 0c22 07F11C03 		add	r3, r7, #28
 20060 0c26 1946     		mov	r1, r3
 20061 0c28 7869     		ldr	r0, [r7, #20]
 20062 0c2a FFF7FEFF 		bl	strcat
2618:..\src/command_processing.c **** 
2619:..\src/command_processing.c **** 		if ((MOT->input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 20063              		.loc 1 2619 0
 20064 0c2e D7F88430 		ldr	r3, [r7, #132]
 20065 0c32 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 20066 0c36 022B     		cmp	r3, #2
 20067 0c38 18D0     		beq	.L758
2620:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 20068              		.loc 1 2620 0 discriminator 1
 20069 0c3a D7F88430 		ldr	r3, [r7, #132]
 20070 0c3e 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2619:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 20071              		.loc 1 2619 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 441


 20072 0c42 032B     		cmp	r3, #3
 20073 0c44 12D0     		beq	.L758
2621:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 20074              		.loc 1 2621 0
 20075 0c46 D7F88430 		ldr	r3, [r7, #132]
 20076 0c4a 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2620:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 20077              		.loc 1 2620 0
 20078 0c4e 042B     		cmp	r3, #4
 20079 0c50 0CD0     		beq	.L758
2622:..\src/command_processing.c ****             (MOT->input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 20080              		.loc 1 2622 0
 20081 0c52 D7F88430 		ldr	r3, [r7, #132]
 20082 0c56 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2621:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 20083              		.loc 1 2621 0
 20084 0c5a 052B     		cmp	r3, #5
 20085 0c5c 06D0     		beq	.L758
2623:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_PROPORTIONAL_NC)) {
 20086              		.loc 1 2623 0
 20087 0c5e D7F88430 		ldr	r3, [r7, #132]
 20088 0c62 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2622:..\src/command_processing.c ****             (MOT->input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 20089              		.loc 1 2622 0
 20090 0c66 072B     		cmp	r3, #7
 20091 0c68 40F0AA80 		bne	.L759
 20092              	.L758:
2624:..\src/command_processing.c **** 			sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.emg_th
 20093              		.loc 1 2624 0
 20094 0c6c D7F88C30 		ldr	r3, [r7, #140]
 20095 0c70 B3F8F031 		ldrh	r3, [r3, #496]
 20096 0c74 1A46     		mov	r2, r3
 20097 0c76 D7F88C30 		ldr	r3, [r7, #140]
 20098 0c7a B3F8F231 		ldrh	r3, [r3, #498]
 20099 0c7e 07F11C00 		add	r0, r7, #28
 20100 0c82 3249     		ldr	r1, .L785+36
 20101 0c84 FFF7FEFF 		bl	sprintf
2625:..\src/command_processing.c **** 			strcat(info_string, str);
 20102              		.loc 1 2625 0
 20103 0c88 07F11C03 		add	r3, r7, #28
 20104 0c8c 1946     		mov	r1, r3
 20105 0c8e 7869     		ldr	r0, [r7, #20]
 20106 0c90 FFF7FEFF 		bl	strcat
2626:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 20107              		.loc 1 2626 0
 20108 0c94 7869     		ldr	r0, [r7, #20]
 20109 0c96 FFF7FEFF 		bl	strlen
 20110 0c9a 0346     		mov	r3, r0
 20111 0c9c 1A46     		mov	r2, r3
 20112 0c9e 7B69     		ldr	r3, [r7, #20]
 20113 0ca0 1344     		add	r3, r3, r2
 20114 0ca2 234A     		ldr	r2, .L785+8
 20115 0ca4 1188     		ldrh	r1, [r2]	@ unaligned
 20116 0ca6 9278     		ldrb	r2, [r2, #2]
 20117 0ca8 1980     		strh	r1, [r3]	@ unaligned
 20118 0caa 9A70     		strb	r2, [r3, #2]
2627:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 442


2628:..\src/command_processing.c **** 			sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg.emg_
 20119              		.loc 1 2628 0
 20120 0cac D7F88C30 		ldr	r3, [r7, #140]
 20121 0cb0 D3F8F421 		ldr	r2, [r3, #500]
 20122 0cb4 D7F88C30 		ldr	r3, [r7, #140]
 20123 0cb8 D3F8F831 		ldr	r3, [r3, #504]
 20124 0cbc 07F11C00 		add	r0, r7, #28
 20125 0cc0 2349     		ldr	r1, .L785+40
 20126 0cc2 FFF7FEFF 		bl	sprintf
2629:..\src/command_processing.c **** 			strcat(info_string, str);
 20127              		.loc 1 2629 0
 20128 0cc6 07F11C03 		add	r3, r7, #28
 20129 0cca 1946     		mov	r1, r3
 20130 0ccc 7869     		ldr	r0, [r7, #20]
 20131 0cce FFF7FEFF 		bl	strcat
2630:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 20132              		.loc 1 2630 0
 20133 0cd2 7869     		ldr	r0, [r7, #20]
 20134 0cd4 FFF7FEFF 		bl	strlen
 20135 0cd8 0346     		mov	r3, r0
 20136 0cda 1A46     		mov	r2, r3
 20137 0cdc 7B69     		ldr	r3, [r7, #20]
 20138 0cde 1344     		add	r3, r3, r2
 20139 0ce0 134A     		ldr	r2, .L785+8
 20140 0ce2 1188     		ldrh	r1, [r2]	@ unaligned
 20141 0ce4 9278     		ldrb	r2, [r2, #2]
 20142 0ce6 1980     		strh	r1, [r3]	@ unaligned
 20143 0ce8 9A70     		strb	r2, [r3, #2]
2631:..\src/command_processing.c **** 
2632:..\src/command_processing.c **** 			if (MEM_P->emg.emg_calibration_flag)
 20144              		.loc 1 2632 0
 20145 0cea D7F88C30 		ldr	r3, [r7, #140]
 20146 0cee 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 20147 0cf2 002B     		cmp	r3, #0
 20148 0cf4 30D0     		beq	.L760
2633:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: YES\r\n");
 20149              		.loc 1 2633 0
 20150 0cf6 7869     		ldr	r0, [r7, #20]
 20151 0cf8 FFF7FEFF 		bl	strlen
 20152 0cfc 0346     		mov	r3, r0
 20153 0cfe 1A46     		mov	r2, r3
 20154 0d00 7B69     		ldr	r3, [r7, #20]
 20155 0d02 1344     		add	r3, r3, r2
 20156 0d04 134A     		ldr	r2, .L785+44
 20157 0d06 1D46     		mov	r5, r3
 20158 0d08 1446     		mov	r4, r2
 20159 0d0a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20160 0d0c 2860     		str	r0, [r5]	@ unaligned
 20161 0d0e 6960     		str	r1, [r5, #4]	@ unaligned
 20162 0d10 AA60     		str	r2, [r5, #8]	@ unaligned
 20163 0d12 EB60     		str	r3, [r5, #12]	@ unaligned
 20164 0d14 03CC     		ldmia	r4!, {r0, r1}
 20165 0d16 2861     		str	r0, [r5, #16]	@ unaligned
 20166 0d18 6961     		str	r1, [r5, #20]	@ unaligned
 20167 0d1a 2388     		ldrh	r3, [r4]	@ unaligned
 20168 0d1c A278     		ldrb	r2, [r4, #2]
 20169 0d1e 2B83     		strh	r3, [r5, #24]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 443


 20170 0d20 1346     		mov	r3, r2
 20171 0d22 AB76     		strb	r3, [r5, #26]
 20172 0d24 2CE0     		b	.L761
 20173              	.L786:
 20174 0d26 00BF     		.align	2
 20175              	.L785:
 20176 0d28 10170000 		.word	.LC218
 20177 0d2c 68130000 		.word	.LC183
 20178 0d30 30110000 		.word	.LC151
 20179 0d34 001E0000 		.word	.LC288
 20180 0d38 30170000 		.word	.LC220
 20181 0d3c 101E0000 		.word	.LC289
 20182 0d40 4C1E0000 		.word	.LC290
 20183 0d44 681E0000 		.word	.LC291
 20184 0d48 D0170000 		.word	.LC226
 20185 0d4c C4180000 		.word	.LC234
 20186 0d50 E8180000 		.word	.LC235
 20187 0d54 38190000 		.word	.LC238
 20188              	.L760:
2634:..\src/command_processing.c **** 			else
2635:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: NO\r\n");
 20189              		.loc 1 2635 0
 20190 0d58 7869     		ldr	r0, [r7, #20]
 20191 0d5a FFF7FEFF 		bl	strlen
 20192 0d5e 0346     		mov	r3, r0
 20193 0d60 1A46     		mov	r2, r3
 20194 0d62 7B69     		ldr	r3, [r7, #20]
 20195 0d64 1344     		add	r3, r3, r2
 20196 0d66 D04A     		ldr	r2, .L787
 20197 0d68 1D46     		mov	r5, r3
 20198 0d6a 1446     		mov	r4, r2
 20199 0d6c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20200 0d6e 2860     		str	r0, [r5]	@ unaligned
 20201 0d70 6960     		str	r1, [r5, #4]	@ unaligned
 20202 0d72 AA60     		str	r2, [r5, #8]	@ unaligned
 20203 0d74 EB60     		str	r3, [r5, #12]	@ unaligned
 20204 0d76 03CC     		ldmia	r4!, {r0, r1}
 20205 0d78 2861     		str	r0, [r5, #16]	@ unaligned
 20206 0d7a 6961     		str	r1, [r5, #20]	@ unaligned
 20207 0d7c 2388     		ldrh	r3, [r4]	@ unaligned
 20208 0d7e 2B83     		strh	r3, [r5, #24]	@ unaligned
 20209              	.L761:
2636:..\src/command_processing.c **** 
2637:..\src/command_processing.c **** 			sprintf(str, "EMG max speed: %d %d", (int)MEM_P->emg.emg_speed[0], (int)MEM_P->emg.emg_speed[1])
 20210              		.loc 1 2637 0
 20211 0d80 D7F88C30 		ldr	r3, [r7, #140]
 20212 0d84 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 20213 0d88 1A46     		mov	r2, r3
 20214 0d8a D7F88C30 		ldr	r3, [r7, #140]
 20215 0d8e 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 20216 0d92 07F11C00 		add	r0, r7, #28
 20217 0d96 C549     		ldr	r1, .L787+4
 20218 0d98 FFF7FEFF 		bl	sprintf
2638:..\src/command_processing.c **** 			strcat(info_string, str);
 20219              		.loc 1 2638 0
 20220 0d9c 07F11C03 		add	r3, r7, #28
 20221 0da0 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 444


 20222 0da2 7869     		ldr	r0, [r7, #20]
 20223 0da4 FFF7FEFF 		bl	strcat
2639:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 20224              		.loc 1 2639 0
 20225 0da8 7869     		ldr	r0, [r7, #20]
 20226 0daa FFF7FEFF 		bl	strlen
 20227 0dae 0346     		mov	r3, r0
 20228 0db0 1A46     		mov	r2, r3
 20229 0db2 7B69     		ldr	r3, [r7, #20]
 20230 0db4 1344     		add	r3, r3, r2
 20231 0db6 BE4A     		ldr	r2, .L787+8
 20232 0db8 1188     		ldrh	r1, [r2]	@ unaligned
 20233 0dba 9278     		ldrb	r2, [r2, #2]
 20234 0dbc 1980     		strh	r1, [r3]	@ unaligned
 20235 0dbe 9A70     		strb	r2, [r3, #2]
 20236              	.L759:
 20237              	.LBE24:
2469:..\src/command_processing.c ****             
 20238              		.loc 1 2469 0 discriminator 2
 20239 0dc0 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 20240 0dc4 0133     		adds	r3, r3, #1
 20241 0dc6 87F89330 		strb	r3, [r7, #147]
 20242              	.L718:
2469:..\src/command_processing.c ****             
 20243              		.loc 1 2469 0 is_stmt 0 discriminator 1
 20244 0dca D7F88C30 		ldr	r3, [r7, #140]
 20245 0dce 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 20246 0dd2 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 20247 0dd6 9A42     		cmp	r2, r3
 20248 0dd8 7FF69BA9 		bls	.L762
 20249              	.LBE23:
2640:..\src/command_processing.c **** 		}
2641:..\src/command_processing.c **** 	}
2642:..\src/command_processing.c **** 	 
2643:..\src/command_processing.c ****     if (MEM_P->SH.rest_position_flag) {
 20250              		.loc 1 2643 0 is_stmt 1
 20251 0ddc D7F88C30 		ldr	r3, [r7, #140]
 20252 0de0 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 20253 0de4 002B     		cmp	r3, #0
 20254 0de6 63D0     		beq	.L763
2644:..\src/command_processing.c **** 		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 20255              		.loc 1 2644 0
 20256 0de8 D7F88C30 		ldr	r3, [r7, #140]
 20257 0dec D3F8A422 		ldr	r2, [r3, #676]
 20258 0df0 07F11C03 		add	r3, r7, #28
 20259 0df4 AF49     		ldr	r1, .L787+12
 20260 0df6 1846     		mov	r0, r3
 20261 0df8 FFF7FEFF 		bl	sprintf
2645:..\src/command_processing.c ****         strcat(info_string, str);
 20262              		.loc 1 2645 0
 20263 0dfc 07F11C03 		add	r3, r7, #28
 20264 0e00 1946     		mov	r1, r3
 20265 0e02 7869     		ldr	r0, [r7, #20]
 20266 0e04 FFF7FEFF 		bl	strcat
2646:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 20267              		.loc 1 2646 0
 20268 0e08 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 445


 20269 0e0a FFF7FEFF 		bl	strlen
 20270 0e0e 0346     		mov	r3, r0
 20271 0e10 1A46     		mov	r2, r3
 20272 0e12 7B69     		ldr	r3, [r7, #20]
 20273 0e14 1344     		add	r3, r3, r2
 20274 0e16 A64A     		ldr	r2, .L787+8
 20275 0e18 1188     		ldrh	r1, [r2]	@ unaligned
 20276 0e1a 9278     		ldrb	r2, [r2, #2]
 20277 0e1c 1980     		strh	r1, [r3]	@ unaligned
 20278 0e1e 9A70     		strb	r2, [r3, #2]
2647:..\src/command_processing.c ****         
2648:..\src/command_processing.c ****         sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 20279              		.loc 1 2648 0
 20280 0e20 D7F88C30 		ldr	r3, [r7, #140]
 20281 0e24 D3F8A822 		ldr	r2, [r3, #680]
 20282 0e28 07F11C03 		add	r3, r7, #28
 20283 0e2c A249     		ldr	r1, .L787+16
 20284 0e2e 1846     		mov	r0, r3
 20285 0e30 FFF7FEFF 		bl	sprintf
2649:..\src/command_processing.c ****         strcat(info_string, str);
 20286              		.loc 1 2649 0
 20287 0e34 07F11C03 		add	r3, r7, #28
 20288 0e38 1946     		mov	r1, r3
 20289 0e3a 7869     		ldr	r0, [r7, #20]
 20290 0e3c FFF7FEFF 		bl	strcat
2650:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 20291              		.loc 1 2650 0
 20292 0e40 7869     		ldr	r0, [r7, #20]
 20293 0e42 FFF7FEFF 		bl	strlen
 20294 0e46 0346     		mov	r3, r0
 20295 0e48 1A46     		mov	r2, r3
 20296 0e4a 7B69     		ldr	r3, [r7, #20]
 20297 0e4c 1344     		add	r3, r3, r2
 20298 0e4e 984A     		ldr	r2, .L787+8
 20299 0e50 1188     		ldrh	r1, [r2]	@ unaligned
 20300 0e52 9278     		ldrb	r2, [r2, #2]
 20301 0e54 1980     		strh	r1, [r3]	@ unaligned
 20302 0e56 9A70     		strb	r2, [r3, #2]
2651:..\src/command_processing.c ****         
2652:..\src/command_processing.c ****         sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0].en
 20303              		.loc 1 2652 0
 20304 0e58 D7F88C30 		ldr	r3, [r7, #140]
 20305 0e5c D3F8A022 		ldr	r2, [r3, #672]
 20306 0e60 D7F88C30 		ldr	r3, [r7, #140]
 20307 0e64 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20308 0e68 1846     		mov	r0, r3
 20309 0e6a D7F88C10 		ldr	r1, [r7, #140]
 20310 0e6e 0346     		mov	r3, r0
 20311 0e70 5B00     		lsls	r3, r3, #1
 20312 0e72 0344     		add	r3, r3, r0
 20313 0e74 1B01     		lsls	r3, r3, #4
 20314 0e76 0B44     		add	r3, r3, r1
 20315 0e78 03F29513 		addw	r3, r3, #405
 20316 0e7c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20317 0e7e 1A41     		asrs	r2, r2, r3
 20318 0e80 07F11C03 		add	r3, r7, #28
 20319 0e84 8D49     		ldr	r1, .L787+20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 446


 20320 0e86 1846     		mov	r0, r3
 20321 0e88 FFF7FEFF 		bl	sprintf
2653:..\src/command_processing.c ****         strcat(info_string, str);
 20322              		.loc 1 2653 0
 20323 0e8c 07F11C03 		add	r3, r7, #28
 20324 0e90 1946     		mov	r1, r3
 20325 0e92 7869     		ldr	r0, [r7, #20]
 20326 0e94 FFF7FEFF 		bl	strcat
2654:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 20327              		.loc 1 2654 0
 20328 0e98 7869     		ldr	r0, [r7, #20]
 20329 0e9a FFF7FEFF 		bl	strlen
 20330 0e9e 0346     		mov	r3, r0
 20331 0ea0 1A46     		mov	r2, r3
 20332 0ea2 7B69     		ldr	r3, [r7, #20]
 20333 0ea4 1344     		add	r3, r3, r2
 20334 0ea6 824A     		ldr	r2, .L787+8
 20335 0ea8 1188     		ldrh	r1, [r2]	@ unaligned
 20336 0eaa 9278     		ldrb	r2, [r2, #2]
 20337 0eac 1980     		strh	r1, [r3]	@ unaligned
 20338 0eae 9A70     		strb	r2, [r3, #2]
 20339              	.L763:
2655:..\src/command_processing.c ****     }
2656:..\src/command_processing.c **** 	
2657:..\src/command_processing.c **** 	if (MEM_P->imu.read_imu_flag) {
 20340              		.loc 1 2657 0
 20341 0eb0 D7F88C30 		ldr	r3, [r7, #140]
 20342 0eb4 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 20343 0eb8 002B     		cmp	r3, #0
 20344 0eba 00F0CB81 		beq	.L778
2658:..\src/command_processing.c **** 		sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 20345              		.loc 1 2658 0
 20346 0ebe 804B     		ldr	r3, .L787+24
 20347 0ec0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20348 0ec2 1A46     		mov	r2, r3
 20349 0ec4 07F11C03 		add	r3, r7, #28
 20350 0ec8 7E49     		ldr	r1, .L787+28
 20351 0eca 1846     		mov	r0, r3
 20352 0ecc FFF7FEFF 		bl	sprintf
2659:..\src/command_processing.c **** 		strcat(info_string, str);
 20353              		.loc 1 2659 0
 20354 0ed0 07F11C03 		add	r3, r7, #28
 20355 0ed4 1946     		mov	r1, r3
 20356 0ed6 7869     		ldr	r0, [r7, #20]
 20357 0ed8 FFF7FEFF 		bl	strcat
2660:..\src/command_processing.c **** 		
2661:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 20358              		.loc 1 2661 0
 20359 0edc 7869     		ldr	r0, [r7, #20]
 20360 0ede FFF7FEFF 		bl	strlen
 20361 0ee2 0346     		mov	r3, r0
 20362 0ee4 1A46     		mov	r2, r3
 20363 0ee6 7B69     		ldr	r3, [r7, #20]
 20364 0ee8 1344     		add	r3, r3, r2
 20365 0eea 714A     		ldr	r2, .L787+8
 20366 0eec 1188     		ldrh	r1, [r2]	@ unaligned
 20367 0eee 9278     		ldrb	r2, [r2, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 447


 20368 0ef0 1980     		strh	r1, [r3]	@ unaligned
 20369 0ef2 9A70     		strb	r2, [r3, #2]
2662:..\src/command_processing.c **** 		
2663:..\src/command_processing.c **** 		strcat(info_string, "IMUs CONFIGURATION\r\n");
 20370              		.loc 1 2663 0
 20371 0ef4 7869     		ldr	r0, [r7, #20]
 20372 0ef6 FFF7FEFF 		bl	strlen
 20373 0efa 0346     		mov	r3, r0
 20374 0efc 1A46     		mov	r2, r3
 20375 0efe 7B69     		ldr	r3, [r7, #20]
 20376 0f00 1344     		add	r3, r3, r2
 20377 0f02 714A     		ldr	r2, .L787+32
 20378 0f04 1D46     		mov	r5, r3
 20379 0f06 1446     		mov	r4, r2
 20380 0f08 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20381 0f0a 2860     		str	r0, [r5]	@ unaligned
 20382 0f0c 6960     		str	r1, [r5, #4]	@ unaligned
 20383 0f0e AA60     		str	r2, [r5, #8]	@ unaligned
 20384 0f10 EB60     		str	r3, [r5, #12]	@ unaligned
 20385 0f12 2068     		ldr	r0, [r4]	@ unaligned
 20386 0f14 2861     		str	r0, [r5, #16]	@ unaligned
 20387 0f16 2379     		ldrb	r3, [r4, #4]
 20388 0f18 2B75     		strb	r3, [r5, #20]
2664:..\src/command_processing.c **** 		for (i=0; i<N_IMU_Connected; i++){
 20389              		.loc 1 2664 0
 20390 0f1a 0023     		movs	r3, #0
 20391 0f1c C7F89430 		str	r3, [r7, #148]
 20392 0f20 84E1     		b	.L765
 20393              	.L776:
2665:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20394              		.loc 1 2665 0
 20395 0f22 6A4A     		ldr	r2, .L787+36
 20396 0f24 D7F89430 		ldr	r3, [r7, #148]
 20397 0f28 1344     		add	r3, r3, r2
 20398 0f2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20399 0f2c 07F11C00 		add	r0, r7, #28
 20400 0f30 D7F89420 		ldr	r2, [r7, #148]
 20401 0f34 6649     		ldr	r1, .L787+40
 20402 0f36 FFF7FEFF 		bl	sprintf
2666:..\src/command_processing.c **** 			strcat(info_string, str);
 20403              		.loc 1 2666 0
 20404 0f3a 07F11C03 		add	r3, r7, #28
 20405 0f3e 1946     		mov	r1, r3
 20406 0f40 7869     		ldr	r0, [r7, #20]
 20407 0f42 FFF7FEFF 		bl	strcat
2667:..\src/command_processing.c **** 			
2668:..\src/command_processing.c **** 			sprintf(str, "\tAccelerometers: ");
 20408              		.loc 1 2668 0
 20409 0f46 07F11C03 		add	r3, r7, #28
 20410 0f4a 624A     		ldr	r2, .L787+44
 20411 0f4c 1C46     		mov	r4, r3
 20412 0f4e 1546     		mov	r5, r2
 20413 0f50 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 20414 0f52 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 20415 0f54 2B68     		ldr	r3, [r5]
 20416 0f56 2380     		strh	r3, [r4]	@ movhi
2669:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 448


 20417              		.loc 1 2669 0
 20418 0f58 5C4A     		ldr	r2, .L787+36
 20419 0f5a D7F89430 		ldr	r3, [r7, #148]
 20420 0f5e 1344     		add	r3, r3, r2
 20421 0f60 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20422 0f62 1946     		mov	r1, r3
 20423 0f64 D7F88C20 		ldr	r2, [r7, #140]
 20424 0f68 0B46     		mov	r3, r1
 20425 0f6a 9B00     		lsls	r3, r3, #2
 20426 0f6c 0B44     		add	r3, r3, r1
 20427 0f6e 1344     		add	r3, r3, r2
 20428 0f70 03F20223 		addw	r3, r3, #514
 20429 0f74 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20430 0f76 002B     		cmp	r3, #0
 20431 0f78 0FD0     		beq	.L766
2670:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20432              		.loc 1 2670 0
 20433 0f7a 07F11C03 		add	r3, r7, #28
 20434 0f7e 1846     		mov	r0, r3
 20435 0f80 FFF7FEFF 		bl	strlen
 20436 0f84 0346     		mov	r3, r0
 20437 0f86 1A46     		mov	r2, r3
 20438 0f88 07F11C03 		add	r3, r7, #28
 20439 0f8c 1344     		add	r3, r3, r2
 20440 0f8e 524A     		ldr	r2, .L787+48
 20441 0f90 1068     		ldr	r0, [r2]	@ unaligned
 20442 0f92 1860     		str	r0, [r3]	@ unaligned
 20443 0f94 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20444 0f96 9A80     		strh	r2, [r3, #4]	@ unaligned
 20445 0f98 0EE0     		b	.L767
 20446              	.L766:
2671:..\src/command_processing.c **** 			else
2672:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 20447              		.loc 1 2672 0
 20448 0f9a 07F11C03 		add	r3, r7, #28
 20449 0f9e 1846     		mov	r0, r3
 20450 0fa0 FFF7FEFF 		bl	strlen
 20451 0fa4 0346     		mov	r3, r0
 20452 0fa6 1A46     		mov	r2, r3
 20453 0fa8 07F11C03 		add	r3, r7, #28
 20454 0fac 1344     		add	r3, r3, r2
 20455 0fae 4B4A     		ldr	r2, .L787+52
 20456 0fb0 1068     		ldr	r0, [r2]	@ unaligned
 20457 0fb2 1860     		str	r0, [r3]	@ unaligned
 20458 0fb4 1279     		ldrb	r2, [r2, #4]
 20459 0fb6 1A71     		strb	r2, [r3, #4]
 20460              	.L767:
2673:..\src/command_processing.c **** 			strcat(str, "\tGyroscopes: ");
 20461              		.loc 1 2673 0
 20462 0fb8 07F11C03 		add	r3, r7, #28
 20463 0fbc 1846     		mov	r0, r3
 20464 0fbe FFF7FEFF 		bl	strlen
 20465 0fc2 0346     		mov	r3, r0
 20466 0fc4 1A46     		mov	r2, r3
 20467 0fc6 07F11C03 		add	r3, r7, #28
 20468 0fca 1344     		add	r3, r3, r2
 20469 0fcc 444A     		ldr	r2, .L787+56
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 449


 20470 0fce 1C46     		mov	r4, r3
 20471 0fd0 1346     		mov	r3, r2
 20472 0fd2 07CB     		ldmia	r3!, {r0, r1, r2}
 20473 0fd4 2060     		str	r0, [r4]	@ unaligned
 20474 0fd6 6160     		str	r1, [r4, #4]	@ unaligned
 20475 0fd8 A260     		str	r2, [r4, #8]	@ unaligned
 20476 0fda 1B88     		ldrh	r3, [r3]	@ unaligned
 20477 0fdc A381     		strh	r3, [r4, #12]	@ unaligned
2674:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 20478              		.loc 1 2674 0
 20479 0fde 3B4A     		ldr	r2, .L787+36
 20480 0fe0 D7F89430 		ldr	r3, [r7, #148]
 20481 0fe4 1344     		add	r3, r3, r2
 20482 0fe6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20483 0fe8 1946     		mov	r1, r3
 20484 0fea D7F88C20 		ldr	r2, [r7, #140]
 20485 0fee 0B46     		mov	r3, r1
 20486 0ff0 9B00     		lsls	r3, r3, #2
 20487 0ff2 0B44     		add	r3, r3, r1
 20488 0ff4 1344     		add	r3, r3, r2
 20489 0ff6 03F20323 		addw	r3, r3, #515
 20490 0ffa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20491 0ffc 002B     		cmp	r3, #0
 20492 0ffe 0FD0     		beq	.L768
2675:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20493              		.loc 1 2675 0
 20494 1000 07F11C03 		add	r3, r7, #28
 20495 1004 1846     		mov	r0, r3
 20496 1006 FFF7FEFF 		bl	strlen
 20497 100a 0346     		mov	r3, r0
 20498 100c 1A46     		mov	r2, r3
 20499 100e 07F11C03 		add	r3, r7, #28
 20500 1012 1344     		add	r3, r3, r2
 20501 1014 304A     		ldr	r2, .L787+48
 20502 1016 1068     		ldr	r0, [r2]	@ unaligned
 20503 1018 1860     		str	r0, [r3]	@ unaligned
 20504 101a 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20505 101c 9A80     		strh	r2, [r3, #4]	@ unaligned
 20506 101e 0EE0     		b	.L769
 20507              	.L768:
2676:..\src/command_processing.c **** 			else
2677:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 20508              		.loc 1 2677 0
 20509 1020 07F11C03 		add	r3, r7, #28
 20510 1024 1846     		mov	r0, r3
 20511 1026 FFF7FEFF 		bl	strlen
 20512 102a 0346     		mov	r3, r0
 20513 102c 1A46     		mov	r2, r3
 20514 102e 07F11C03 		add	r3, r7, #28
 20515 1032 1344     		add	r3, r3, r2
 20516 1034 294A     		ldr	r2, .L787+52
 20517 1036 1068     		ldr	r0, [r2]	@ unaligned
 20518 1038 1860     		str	r0, [r3]	@ unaligned
 20519 103a 1279     		ldrb	r2, [r2, #4]
 20520 103c 1A71     		strb	r2, [r3, #4]
 20521              	.L769:
2678:..\src/command_processing.c **** 			strcat(str, "\tMagnetometers: ");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 450


 20522              		.loc 1 2678 0
 20523 103e 07F11C03 		add	r3, r7, #28
 20524 1042 1846     		mov	r0, r3
 20525 1044 FFF7FEFF 		bl	strlen
 20526 1048 0346     		mov	r3, r0
 20527 104a 1A46     		mov	r2, r3
 20528 104c 07F11C03 		add	r3, r7, #28
 20529 1050 1344     		add	r3, r3, r2
 20530 1052 244A     		ldr	r2, .L787+60
 20531 1054 1D46     		mov	r5, r3
 20532 1056 1446     		mov	r4, r2
 20533 1058 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20534 105a 2860     		str	r0, [r5]	@ unaligned
 20535 105c 6960     		str	r1, [r5, #4]	@ unaligned
 20536 105e AA60     		str	r2, [r5, #8]	@ unaligned
 20537 1060 EB60     		str	r3, [r5, #12]	@ unaligned
 20538 1062 2378     		ldrb	r3, [r4]
 20539 1064 2B74     		strb	r3, [r5, #16]
2679:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 20540              		.loc 1 2679 0
 20541 1066 194A     		ldr	r2, .L787+36
 20542 1068 D7F89430 		ldr	r3, [r7, #148]
 20543 106c 1344     		add	r3, r3, r2
 20544 106e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20545 1070 1946     		mov	r1, r3
 20546 1072 D7F88C20 		ldr	r2, [r7, #140]
 20547 1076 0B46     		mov	r3, r1
 20548 1078 9B00     		lsls	r3, r3, #2
 20549 107a 0B44     		add	r3, r3, r1
 20550 107c 1344     		add	r3, r3, r2
 20551 107e 03F50173 		add	r3, r3, #516
 20552 1082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20553 1084 002B     		cmp	r3, #0
 20554 1086 2FD0     		beq	.L770
2680:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20555              		.loc 1 2680 0
 20556 1088 07F11C03 		add	r3, r7, #28
 20557 108c 1846     		mov	r0, r3
 20558 108e FFF7FEFF 		bl	strlen
 20559 1092 0346     		mov	r3, r0
 20560 1094 1A46     		mov	r2, r3
 20561 1096 07F11C03 		add	r3, r7, #28
 20562 109a 1344     		add	r3, r3, r2
 20563 109c 0E4A     		ldr	r2, .L787+48
 20564 109e 1068     		ldr	r0, [r2]	@ unaligned
 20565 10a0 1860     		str	r0, [r3]	@ unaligned
 20566 10a2 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20567 10a4 9A80     		strh	r2, [r3, #4]	@ unaligned
 20568 10a6 2EE0     		b	.L771
 20569              	.L788:
 20570              		.align	2
 20571              	.L787:
 20572 10a8 54190000 		.word	.LC239
 20573 10ac 70190000 		.word	.LC240
 20574 10b0 30110000 		.word	.LC151
 20575 10b4 341A0000 		.word	.LC248
 20576 10b8 501A0000 		.word	.LC249
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 451


 20577 10bc 781A0000 		.word	.LC250
 20578 10c0 00000000 		.word	N_IMU_Connected
 20579 10c4 8C1A0000 		.word	.LC251
 20580 10c8 A01A0000 		.word	.LC252
 20581 10cc 00000000 		.word	IMU_connected
 20582 10d0 B81A0000 		.word	.LC253
 20583 10d4 CC1A0000 		.word	.LC254
 20584 10d8 F4120000 		.word	.LC174
 20585 10dc FC120000 		.word	.LC175
 20586 10e0 E01A0000 		.word	.LC255
 20587 10e4 F01A0000 		.word	.LC256
 20588              	.L770:
2681:..\src/command_processing.c **** 			else
2682:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 20589              		.loc 1 2682 0
 20590 10e8 07F11C03 		add	r3, r7, #28
 20591 10ec 1846     		mov	r0, r3
 20592 10ee FFF7FEFF 		bl	strlen
 20593 10f2 0346     		mov	r3, r0
 20594 10f4 1A46     		mov	r2, r3
 20595 10f6 07F11C03 		add	r3, r7, #28
 20596 10fa 1344     		add	r3, r3, r2
 20597 10fc 584A     		ldr	r2, .L789
 20598 10fe 1068     		ldr	r0, [r2]	@ unaligned
 20599 1100 1860     		str	r0, [r3]	@ unaligned
 20600 1102 1279     		ldrb	r2, [r2, #4]
 20601 1104 1A71     		strb	r2, [r3, #4]
 20602              	.L771:
2683:..\src/command_processing.c **** 			strcat(str, "\tQuaternion: ");                
 20603              		.loc 1 2683 0
 20604 1106 07F11C03 		add	r3, r7, #28
 20605 110a 1846     		mov	r0, r3
 20606 110c FFF7FEFF 		bl	strlen
 20607 1110 0346     		mov	r3, r0
 20608 1112 1A46     		mov	r2, r3
 20609 1114 07F11C03 		add	r3, r7, #28
 20610 1118 1344     		add	r3, r3, r2
 20611 111a 524A     		ldr	r2, .L789+4
 20612 111c 1C46     		mov	r4, r3
 20613 111e 1346     		mov	r3, r2
 20614 1120 07CB     		ldmia	r3!, {r0, r1, r2}
 20615 1122 2060     		str	r0, [r4]	@ unaligned
 20616 1124 6160     		str	r1, [r4, #4]	@ unaligned
 20617 1126 A260     		str	r2, [r4, #8]	@ unaligned
 20618 1128 1B88     		ldrh	r3, [r3]	@ unaligned
 20619 112a A381     		strh	r3, [r4, #12]	@ unaligned
2684:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 20620              		.loc 1 2684 0
 20621 112c 4E4A     		ldr	r2, .L789+8
 20622 112e D7F89430 		ldr	r3, [r7, #148]
 20623 1132 1344     		add	r3, r3, r2
 20624 1134 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20625 1136 1946     		mov	r1, r3
 20626 1138 D7F88C20 		ldr	r2, [r7, #140]
 20627 113c 0B46     		mov	r3, r1
 20628 113e 9B00     		lsls	r3, r3, #2
 20629 1140 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 452


 20630 1142 1344     		add	r3, r3, r2
 20631 1144 03F20523 		addw	r3, r3, #517
 20632 1148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20633 114a 002B     		cmp	r3, #0
 20634 114c 0FD0     		beq	.L772
2685:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20635              		.loc 1 2685 0
 20636 114e 07F11C03 		add	r3, r7, #28
 20637 1152 1846     		mov	r0, r3
 20638 1154 FFF7FEFF 		bl	strlen
 20639 1158 0346     		mov	r3, r0
 20640 115a 1A46     		mov	r2, r3
 20641 115c 07F11C03 		add	r3, r7, #28
 20642 1160 1344     		add	r3, r3, r2
 20643 1162 424A     		ldr	r2, .L789+12
 20644 1164 1068     		ldr	r0, [r2]	@ unaligned
 20645 1166 1860     		str	r0, [r3]	@ unaligned
 20646 1168 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20647 116a 9A80     		strh	r2, [r3, #4]	@ unaligned
 20648 116c 0EE0     		b	.L773
 20649              	.L772:
2686:..\src/command_processing.c **** 			else
2687:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 20650              		.loc 1 2687 0
 20651 116e 07F11C03 		add	r3, r7, #28
 20652 1172 1846     		mov	r0, r3
 20653 1174 FFF7FEFF 		bl	strlen
 20654 1178 0346     		mov	r3, r0
 20655 117a 1A46     		mov	r2, r3
 20656 117c 07F11C03 		add	r3, r7, #28
 20657 1180 1344     		add	r3, r3, r2
 20658 1182 374A     		ldr	r2, .L789
 20659 1184 1068     		ldr	r0, [r2]	@ unaligned
 20660 1186 1860     		str	r0, [r3]	@ unaligned
 20661 1188 1279     		ldrb	r2, [r2, #4]
 20662 118a 1A71     		strb	r2, [r3, #4]
 20663              	.L773:
2688:..\src/command_processing.c **** 			strcat(str, "\tTemperature: ");
 20664              		.loc 1 2688 0
 20665 118c 07F11C03 		add	r3, r7, #28
 20666 1190 1846     		mov	r0, r3
 20667 1192 FFF7FEFF 		bl	strlen
 20668 1196 0346     		mov	r3, r0
 20669 1198 1A46     		mov	r2, r3
 20670 119a 07F11C03 		add	r3, r7, #28
 20671 119e 1344     		add	r3, r3, r2
 20672 11a0 334A     		ldr	r2, .L789+16
 20673 11a2 1C46     		mov	r4, r3
 20674 11a4 1346     		mov	r3, r2
 20675 11a6 07CB     		ldmia	r3!, {r0, r1, r2}
 20676 11a8 2060     		str	r0, [r4]	@ unaligned
 20677 11aa 6160     		str	r1, [r4, #4]	@ unaligned
 20678 11ac A260     		str	r2, [r4, #8]	@ unaligned
 20679 11ae 1A88     		ldrh	r2, [r3]	@ unaligned
 20680 11b0 9B78     		ldrb	r3, [r3, #2]
 20681 11b2 A281     		strh	r2, [r4, #12]	@ unaligned
 20682 11b4 A373     		strb	r3, [r4, #14]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 453


2689:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 20683              		.loc 1 2689 0
 20684 11b6 2C4A     		ldr	r2, .L789+8
 20685 11b8 D7F89430 		ldr	r3, [r7, #148]
 20686 11bc 1344     		add	r3, r3, r2
 20687 11be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20688 11c0 1946     		mov	r1, r3
 20689 11c2 D7F88C20 		ldr	r2, [r7, #140]
 20690 11c6 0B46     		mov	r3, r1
 20691 11c8 9B00     		lsls	r3, r3, #2
 20692 11ca 0B44     		add	r3, r3, r1
 20693 11cc 1344     		add	r3, r3, r2
 20694 11ce 03F20623 		addw	r3, r3, #518
 20695 11d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20696 11d4 002B     		cmp	r3, #0
 20697 11d6 0FD0     		beq	.L774
2690:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20698              		.loc 1 2690 0
 20699 11d8 07F11C03 		add	r3, r7, #28
 20700 11dc 1846     		mov	r0, r3
 20701 11de FFF7FEFF 		bl	strlen
 20702 11e2 0346     		mov	r3, r0
 20703 11e4 1A46     		mov	r2, r3
 20704 11e6 07F11C03 		add	r3, r7, #28
 20705 11ea 1344     		add	r3, r3, r2
 20706 11ec 1F4A     		ldr	r2, .L789+12
 20707 11ee 1068     		ldr	r0, [r2]	@ unaligned
 20708 11f0 1860     		str	r0, [r3]	@ unaligned
 20709 11f2 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20710 11f4 9A80     		strh	r2, [r3, #4]	@ unaligned
 20711 11f6 0EE0     		b	.L775
 20712              	.L774:
2691:..\src/command_processing.c **** 			else
2692:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 20713              		.loc 1 2692 0
 20714 11f8 07F11C03 		add	r3, r7, #28
 20715 11fc 1846     		mov	r0, r3
 20716 11fe FFF7FEFF 		bl	strlen
 20717 1202 0346     		mov	r3, r0
 20718 1204 1A46     		mov	r2, r3
 20719 1206 07F11C03 		add	r3, r7, #28
 20720 120a 1344     		add	r3, r3, r2
 20721 120c 144A     		ldr	r2, .L789
 20722 120e 1068     		ldr	r0, [r2]	@ unaligned
 20723 1210 1860     		str	r0, [r3]	@ unaligned
 20724 1212 1279     		ldrb	r2, [r2, #4]
 20725 1214 1A71     		strb	r2, [r3, #4]
 20726              	.L775:
2693:..\src/command_processing.c **** 				 
2694:..\src/command_processing.c **** 			strcat(info_string, str);
 20727              		.loc 1 2694 0 discriminator 2
 20728 1216 07F11C03 		add	r3, r7, #28
 20729 121a 1946     		mov	r1, r3
 20730 121c 7869     		ldr	r0, [r7, #20]
 20731 121e FFF7FEFF 		bl	strcat
2664:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20732              		.loc 1 2664 0 discriminator 2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 454


 20733 1222 D7F89430 		ldr	r3, [r7, #148]
 20734 1226 0133     		adds	r3, r3, #1
 20735 1228 C7F89430 		str	r3, [r7, #148]
 20736              	.L765:
2664:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20737              		.loc 1 2664 0 is_stmt 0 discriminator 1
 20738 122c 114B     		ldr	r3, .L789+20
 20739 122e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20740 1230 1A46     		mov	r2, r3
 20741 1232 D7F89430 		ldr	r3, [r7, #148]
 20742 1236 9A42     		cmp	r2, r3
 20743 1238 3FF773AE 		bgt	.L776
2695:..\src/command_processing.c **** 		}       
2696:..\src/command_processing.c **** 		
2697:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 20744              		.loc 1 2697 0 is_stmt 1
 20745 123c 7869     		ldr	r0, [r7, #20]
 20746 123e FFF7FEFF 		bl	strlen
 20747 1242 0346     		mov	r3, r0
 20748 1244 1A46     		mov	r2, r3
 20749 1246 7B69     		ldr	r3, [r7, #20]
 20750 1248 1344     		add	r3, r3, r2
 20751 124a 0B4A     		ldr	r2, .L789+24
 20752 124c 1188     		ldrh	r1, [r2]	@ unaligned
 20753 124e 9278     		ldrb	r2, [r2, #2]
 20754 1250 1980     		strh	r1, [r3]	@ unaligned
 20755 1252 9A70     		strb	r2, [r3, #2]
 20756              	.L778:
2698:..\src/command_processing.c **** 	}
2699:..\src/command_processing.c **** }
 20757              		.loc 1 2699 0
 20758 1254 00BF     		nop
 20759 1256 9C37     		adds	r7, r7, #156
 20760              		.cfi_def_cfa_offset 36
 20761 1258 BD46     		mov	sp, r7
 20762              		.cfi_def_cfa_register 13
 20763              		@ sp needed
 20764 125a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 20765              	.L790:
 20766 125e 00BF     		.align	2
 20767              	.L789:
 20768 1260 FC120000 		.word	.LC175
 20769 1264 041B0000 		.word	.LC257
 20770 1268 00000000 		.word	IMU_connected
 20771 126c F4120000 		.word	.LC174
 20772 1270 141B0000 		.word	.LC258
 20773 1274 00000000 		.word	N_IMU_Connected
 20774 1278 30110000 		.word	.LC151
 20775              		.cfi_endproc
 20776              	.LFE74:
 20777              		.size	prepare_SD_param_info, .-prepare_SD_param_info
 20778              		.section	.rodata
 20779 1e92 0000     		.align	2
 20780              	.LC292:
 20781 1e94 486F7572 		.ascii	"Hour,Min,Sec,\000"
 20781      2C4D696E 
 20781      2C536563 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 455


 20781      2C00
 20782 1ea2 0000     		.align	2
 20783              	.LC293:
 20784 1ea4 42696E5F 		.ascii	"Bin_%d_Pos,\000"
 20784      25645F50 
 20784      6F732C00 
 20785              		.align	2
 20786              	.LC294:
 20787 1eb0 42696E5F 		.ascii	"Bin_%d_Curr,\000"
 20787      25645F43 
 20787      7572722C 
 20787      00
 20788 1ebd 000000   		.align	2
 20789              	.LC295:
 20790 1ec0 454D475F 		.ascii	"EMG_1_act,EMG_2_act,Rest_times,Wire_disp,Total_powe"
 20790      315F6163 
 20790      742C454D 
 20790      475F325F 
 20790      6163742C 
 20791 1ef3 725F6F6E 		.ascii	"r_on_time,Total_rest_time\000"
 20791      5F74696D 
 20791      652C546F 
 20791      74616C5F 
 20791      72657374 
 20792              		.section	.text.prepare_SD_legend,"ax",%progbits
 20793              		.align	2
 20794              		.global	prepare_SD_legend
 20795              		.thumb
 20796              		.thumb_func
 20797              		.type	prepare_SD_legend, %function
 20798              	prepare_SD_legend:
 20799              	.LFB75:
2700:..\src/command_processing.c **** 
2701:..\src/command_processing.c **** 
2702:..\src/command_processing.c **** //==============================================================================
2703:..\src/command_processing.c **** //                                                        PREPARE SD CARD LEGEND
2704:..\src/command_processing.c **** //==============================================================================
2705:..\src/command_processing.c **** void prepare_SD_legend(char *info_string)
2706:..\src/command_processing.c **** {
 20800              		.loc 1 2706 0
 20801              		.cfi_startproc
 20802              		@ args = 0, pretend = 0, frame = 112
 20803              		@ frame_needed = 1, uses_anonymous_args = 0
 20804 0000 90B5     		push	{r4, r7, lr}
 20805              		.cfi_def_cfa_offset 12
 20806              		.cfi_offset 4, -12
 20807              		.cfi_offset 7, -8
 20808              		.cfi_offset 14, -4
 20809 0002 9DB0     		sub	sp, sp, #116
 20810              		.cfi_def_cfa_offset 128
 20811 0004 00AF     		add	r7, sp, #0
 20812              		.cfi_def_cfa_register 7
 20813 0006 7860     		str	r0, [r7, #4]
2707:..\src/command_processing.c ****     char str[100];  
2708:..\src/command_processing.c ****     int i;
2709:..\src/command_processing.c ****         
2710:..\src/command_processing.c ****     // Legend
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 456


2711:..\src/command_processing.c ****     strcpy(info_string, "Hour,Min,Sec,");
 20814              		.loc 1 2711 0
 20815 0008 7B68     		ldr	r3, [r7, #4]
 20816 000a 2A4A     		ldr	r2, .L796
 20817 000c 1C46     		mov	r4, r3
 20818 000e 1346     		mov	r3, r2
 20819 0010 07CB     		ldmia	r3!, {r0, r1, r2}
 20820 0012 2060     		str	r0, [r4]	@ unaligned
 20821 0014 6160     		str	r1, [r4, #4]	@ unaligned
 20822 0016 A260     		str	r2, [r4, #8]	@ unaligned
 20823 0018 1B88     		ldrh	r3, [r3]	@ unaligned
 20824 001a A381     		strh	r3, [r4, #12]	@ unaligned
2712:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 20825              		.loc 1 2712 0
 20826 001c 0123     		movs	r3, #1
 20827 001e FB66     		str	r3, [r7, #108]
 20828 0020 0FE0     		b	.L792
 20829              	.L793:
2713:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Pos,", i); 
 20830              		.loc 1 2713 0 discriminator 3
 20831 0022 07F10803 		add	r3, r7, #8
 20832 0026 FA6E     		ldr	r2, [r7, #108]
 20833 0028 2349     		ldr	r1, .L796+4
 20834 002a 1846     		mov	r0, r3
 20835 002c FFF7FEFF 		bl	sprintf
2714:..\src/command_processing.c ****         strcat(info_string, str);
 20836              		.loc 1 2714 0 discriminator 3
 20837 0030 07F10803 		add	r3, r7, #8
 20838 0034 1946     		mov	r1, r3
 20839 0036 7868     		ldr	r0, [r7, #4]
 20840 0038 FFF7FEFF 		bl	strcat
2712:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 20841              		.loc 1 2712 0 discriminator 3
 20842 003c FB6E     		ldr	r3, [r7, #108]
 20843 003e 0133     		adds	r3, r3, #1
 20844 0040 FB66     		str	r3, [r7, #108]
 20845              	.L792:
2712:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 20846              		.loc 1 2712 0 is_stmt 0 discriminator 1
 20847 0042 FB6E     		ldr	r3, [r7, #108]
 20848 0044 0A2B     		cmp	r3, #10
 20849 0046 ECDD     		ble	.L793
2715:..\src/command_processing.c ****     }
2716:..\src/command_processing.c ****     for (i=1; i<=4;i++){        // Current bins
 20850              		.loc 1 2716 0 is_stmt 1
 20851 0048 0123     		movs	r3, #1
 20852 004a FB66     		str	r3, [r7, #108]
 20853 004c 0FE0     		b	.L794
 20854              	.L795:
2717:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 20855              		.loc 1 2717 0 discriminator 3
 20856 004e 07F10803 		add	r3, r7, #8
 20857 0052 FA6E     		ldr	r2, [r7, #108]
 20858 0054 1949     		ldr	r1, .L796+8
 20859 0056 1846     		mov	r0, r3
 20860 0058 FFF7FEFF 		bl	sprintf
2718:..\src/command_processing.c ****         strcat(info_string, str);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 457


 20861              		.loc 1 2718 0 discriminator 3
 20862 005c 07F10803 		add	r3, r7, #8
 20863 0060 1946     		mov	r1, r3
 20864 0062 7868     		ldr	r0, [r7, #4]
 20865 0064 FFF7FEFF 		bl	strcat
2716:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 20866              		.loc 1 2716 0 discriminator 3
 20867 0068 FB6E     		ldr	r3, [r7, #108]
 20868 006a 0133     		adds	r3, r3, #1
 20869 006c FB66     		str	r3, [r7, #108]
 20870              	.L794:
2716:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 20871              		.loc 1 2716 0 is_stmt 0 discriminator 1
 20872 006e FB6E     		ldr	r3, [r7, #108]
 20873 0070 042B     		cmp	r3, #4
 20874 0072 ECDD     		ble	.L795
2719:..\src/command_processing.c ****     }
2720:..\src/command_processing.c ****     sprintf(str, "EMG_1_act,EMG_2_act,Rest_times,Wire_disp,Total_power_on_time,Total_rest_time");
 20875              		.loc 1 2720 0 is_stmt 1
 20876 0074 07F10803 		add	r3, r7, #8
 20877 0078 114A     		ldr	r2, .L796+12
 20878 007a 1846     		mov	r0, r3
 20879 007c 1146     		mov	r1, r2
 20880 007e 4D23     		movs	r3, #77
 20881 0080 1A46     		mov	r2, r3
 20882 0082 FFF7FEFF 		bl	memcpy
2721:..\src/command_processing.c ****     strcat(info_string, str);
 20883              		.loc 1 2721 0
 20884 0086 07F10803 		add	r3, r7, #8
 20885 008a 1946     		mov	r1, r3
 20886 008c 7868     		ldr	r0, [r7, #4]
 20887 008e FFF7FEFF 		bl	strcat
2722:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 20888              		.loc 1 2722 0
 20889 0092 7868     		ldr	r0, [r7, #4]
 20890 0094 FFF7FEFF 		bl	strlen
 20891 0098 0346     		mov	r3, r0
 20892 009a 1A46     		mov	r2, r3
 20893 009c 7B68     		ldr	r3, [r7, #4]
 20894 009e 1344     		add	r3, r3, r2
 20895 00a0 084A     		ldr	r2, .L796+16
 20896 00a2 1188     		ldrh	r1, [r2]	@ unaligned
 20897 00a4 9278     		ldrb	r2, [r2, #2]
 20898 00a6 1980     		strh	r1, [r3]	@ unaligned
 20899 00a8 9A70     		strb	r2, [r3, #2]
2723:..\src/command_processing.c **** }
 20900              		.loc 1 2723 0
 20901 00aa 00BF     		nop
 20902 00ac 7437     		adds	r7, r7, #116
 20903              		.cfi_def_cfa_offset 12
 20904 00ae BD46     		mov	sp, r7
 20905              		.cfi_def_cfa_register 13
 20906              		@ sp needed
 20907 00b0 90BD     		pop	{r4, r7, pc}
 20908              	.L797:
 20909 00b2 00BF     		.align	2
 20910              	.L796:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 458


 20911 00b4 941E0000 		.word	.LC292
 20912 00b8 A41E0000 		.word	.LC293
 20913 00bc B01E0000 		.word	.LC294
 20914 00c0 C01E0000 		.word	.LC295
 20915 00c4 30110000 		.word	.LC151
 20916              		.cfi_endproc
 20917              	.LFE75:
 20918              		.size	prepare_SD_legend, .-prepare_SD_legend
 20919              		.section	.rodata
 20920 1f0d 000000   		.align	2
 20921              	.LC296:
 20922 1f10 25303264 		.ascii	"%02d,%02d,%02d,\000"
 20922      2C253032 
 20922      642C2530 
 20922      32642C00 
 20923              		.align	2
 20924              	.LC297:
 20925 1f20 256C752C 		.ascii	"%lu,\000"
 20925      00
 20926 1f25 000000   		.align	2
 20927              	.LC298:
 20928 1f28 256C752C 		.ascii	"%lu,%lu,\000"
 20928      256C752C 
 20928      00
 20929 1f31 000000   		.align	2
 20930              	.LC299:
 20931 1f34 256C752C 		.ascii	"%lu,%lu,%lu,%lu\000"
 20931      256C752C 
 20931      256C752C 
 20931      256C7500 
 20932              		.section	.text.prepare_SD_info,"ax",%progbits
 20933              		.align	2
 20934              		.global	prepare_SD_info
 20935              		.thumb
 20936              		.thumb_func
 20937              		.type	prepare_SD_info, %function
 20938              	prepare_SD_info:
 20939              	.LFB76:
2724:..\src/command_processing.c **** 
2725:..\src/command_processing.c **** 
2726:..\src/command_processing.c **** //==============================================================================
2727:..\src/command_processing.c **** //                                                          PREPARE SD CARD INFO
2728:..\src/command_processing.c **** //==============================================================================
2729:..\src/command_processing.c **** void prepare_SD_info(char *info_string)
2730:..\src/command_processing.c **** {
 20940              		.loc 1 2730 0
 20941              		.cfi_startproc
 20942              		@ args = 0, pretend = 0, frame = 112
 20943              		@ frame_needed = 1, uses_anonymous_args = 0
 20944 0000 90B5     		push	{r4, r7, lr}
 20945              		.cfi_def_cfa_offset 12
 20946              		.cfi_offset 4, -12
 20947              		.cfi_offset 7, -8
 20948              		.cfi_offset 14, -4
 20949 0002 9FB0     		sub	sp, sp, #124
 20950              		.cfi_def_cfa_offset 136
 20951 0004 02AF     		add	r7, sp, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 459


 20952              		.cfi_def_cfa 7, 128
 20953 0006 7860     		str	r0, [r7, #4]
2731:..\src/command_processing.c ****     char str[100];  
2732:..\src/command_processing.c ****     int i;
2733:..\src/command_processing.c ****             
2734:..\src/command_processing.c ****     strcpy(info_string, "");
 20954              		.loc 1 2734 0
 20955 0008 7B68     		ldr	r3, [r7, #4]
 20956 000a 0022     		movs	r2, #0
 20957 000c 1A70     		strb	r2, [r3]
2735:..\src/command_processing.c ****     
2736:..\src/command_processing.c ****     // Time
2737:..\src/command_processing.c ****     strcat(info_string, "");
2738:..\src/command_processing.c ****     sprintf(str, "%02d,%02d,%02d,", (int)g_mem.exp.curr_time[3], (int)g_mem.exp.curr_time[4], (int)
 20958              		.loc 1 2738 0
 20959 000e 424B     		ldr	r3, .L803
 20960 0010 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 20961 0014 1A46     		mov	r2, r3
 20962 0016 404B     		ldr	r3, .L803
 20963 0018 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 20964 001c 1946     		mov	r1, r3
 20965 001e 3E4B     		ldr	r3, .L803
 20966 0020 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 20967 0024 07F10800 		add	r0, r7, #8
 20968 0028 0093     		str	r3, [sp]
 20969 002a 0B46     		mov	r3, r1
 20970 002c 3B49     		ldr	r1, .L803+4
 20971 002e FFF7FEFF 		bl	sprintf
2739:..\src/command_processing.c ****     strcat(info_string, str);
 20972              		.loc 1 2739 0
 20973 0032 07F10803 		add	r3, r7, #8
 20974 0036 1946     		mov	r1, r3
 20975 0038 7868     		ldr	r0, [r7, #4]
 20976 003a FFF7FEFF 		bl	strcat
2740:..\src/command_processing.c **** 
2741:..\src/command_processing.c ****     // Pos_Bin
2742:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 20977              		.loc 1 2742 0
 20978 003e 0123     		movs	r3, #1
 20979 0040 FB66     		str	r3, [r7, #108]
 20980 0042 14E0     		b	.L799
 20981              	.L800:
2743:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 20982              		.loc 1 2743 0 discriminator 3
 20983 0044 FB6E     		ldr	r3, [r7, #108]
 20984 0046 013B     		subs	r3, r3, #1
 20985 0048 334A     		ldr	r2, .L803
 20986 004a 0633     		adds	r3, r3, #6
 20987 004c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 20988 0050 07F10803 		add	r3, r7, #8
 20989 0054 3249     		ldr	r1, .L803+8
 20990 0056 1846     		mov	r0, r3
 20991 0058 FFF7FEFF 		bl	sprintf
2744:..\src/command_processing.c ****         strcat(info_string, str);
 20992              		.loc 1 2744 0 discriminator 3
 20993 005c 07F10803 		add	r3, r7, #8
 20994 0060 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 460


 20995 0062 7868     		ldr	r0, [r7, #4]
 20996 0064 FFF7FEFF 		bl	strcat
2742:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 20997              		.loc 1 2742 0 discriminator 3
 20998 0068 FB6E     		ldr	r3, [r7, #108]
 20999 006a 0133     		adds	r3, r3, #1
 21000 006c FB66     		str	r3, [r7, #108]
 21001              	.L799:
2742:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 21002              		.loc 1 2742 0 is_stmt 0 discriminator 1
 21003 006e FB6E     		ldr	r3, [r7, #108]
 21004 0070 0A2B     		cmp	r3, #10
 21005 0072 E7DD     		ble	.L800
2745:..\src/command_processing.c ****     }
2746:..\src/command_processing.c ****     
2747:..\src/command_processing.c ****     // Curr_Bin
2748:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 21006              		.loc 1 2748 0 is_stmt 1
 21007 0074 0123     		movs	r3, #1
 21008 0076 FB66     		str	r3, [r7, #108]
 21009 0078 14E0     		b	.L801
 21010              	.L802:
2749:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 21011              		.loc 1 2749 0 discriminator 3
 21012 007a FB6E     		ldr	r3, [r7, #108]
 21013 007c 013B     		subs	r3, r3, #1
 21014 007e 264A     		ldr	r2, .L803
 21015 0080 1033     		adds	r3, r3, #16
 21016 0082 52F82320 		ldr	r2, [r2, r3, lsl #2]
 21017 0086 07F10803 		add	r3, r7, #8
 21018 008a 2549     		ldr	r1, .L803+8
 21019 008c 1846     		mov	r0, r3
 21020 008e FFF7FEFF 		bl	sprintf
2750:..\src/command_processing.c ****         strcat(info_string, str);
 21021              		.loc 1 2750 0 discriminator 3
 21022 0092 07F10803 		add	r3, r7, #8
 21023 0096 1946     		mov	r1, r3
 21024 0098 7868     		ldr	r0, [r7, #4]
 21025 009a FFF7FEFF 		bl	strcat
2748:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 21026              		.loc 1 2748 0 discriminator 3
 21027 009e FB6E     		ldr	r3, [r7, #108]
 21028 00a0 0133     		adds	r3, r3, #1
 21029 00a2 FB66     		str	r3, [r7, #108]
 21030              	.L801:
2748:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 21031              		.loc 1 2748 0 is_stmt 0 discriminator 1
 21032 00a4 FB6E     		ldr	r3, [r7, #108]
 21033 00a6 042B     		cmp	r3, #4
 21034 00a8 E7DD     		ble	.L802
2751:..\src/command_processing.c ****     }
2752:..\src/command_processing.c ****        
2753:..\src/command_processing.c ****     // EMG_1, EMG_2
2754:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,", g_mem.cnt.emg_counter[0], g_mem.cnt.emg_counter[1]);
 21035              		.loc 1 2754 0 is_stmt 1
 21036 00aa 1B4B     		ldr	r3, .L803
 21037 00ac 1A69     		ldr	r2, [r3, #16]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 461


 21038 00ae 1A4B     		ldr	r3, .L803
 21039 00b0 5B69     		ldr	r3, [r3, #20]
 21040 00b2 07F10800 		add	r0, r7, #8
 21041 00b6 1B49     		ldr	r1, .L803+12
 21042 00b8 FFF7FEFF 		bl	sprintf
2755:..\src/command_processing.c ****     strcat(info_string, str);
 21043              		.loc 1 2755 0
 21044 00bc 07F10803 		add	r3, r7, #8
 21045 00c0 1946     		mov	r1, r3
 21046 00c2 7868     		ldr	r0, [r7, #4]
 21047 00c4 FFF7FEFF 		bl	strcat
2756:..\src/command_processing.c ****     
2757:..\src/command_processing.c ****     // Rest_times, Wire_disp, Total_power_on_time, Total_rest_time
2758:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,%lu,%lu", g_mem.cnt.rest_counter, g_mem.cnt.wire_disp, g_mem.cnt.total_ti
 21048              		.loc 1 2758 0
 21049 00c8 134B     		ldr	r3, .L803
 21050 00ca 196D     		ldr	r1, [r3, #80]
 21051 00cc 124B     		ldr	r3, .L803
 21052 00ce 5C6D     		ldr	r4, [r3, #84]
 21053 00d0 114B     		ldr	r3, .L803
 21054 00d2 9B6D     		ldr	r3, [r3, #88]
 21055 00d4 104A     		ldr	r2, .L803
 21056 00d6 D26D     		ldr	r2, [r2, #92]
 21057 00d8 07F10800 		add	r0, r7, #8
 21058 00dc 0192     		str	r2, [sp, #4]
 21059 00de 0093     		str	r3, [sp]
 21060 00e0 2346     		mov	r3, r4
 21061 00e2 0A46     		mov	r2, r1
 21062 00e4 1049     		ldr	r1, .L803+16
 21063 00e6 FFF7FEFF 		bl	sprintf
2759:..\src/command_processing.c ****     strcat(info_string, str);
 21064              		.loc 1 2759 0
 21065 00ea 07F10803 		add	r3, r7, #8
 21066 00ee 1946     		mov	r1, r3
 21067 00f0 7868     		ldr	r0, [r7, #4]
 21068 00f2 FFF7FEFF 		bl	strcat
2760:..\src/command_processing.c ****     
2761:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 21069              		.loc 1 2761 0
 21070 00f6 7868     		ldr	r0, [r7, #4]
 21071 00f8 FFF7FEFF 		bl	strlen
 21072 00fc 0346     		mov	r3, r0
 21073 00fe 1A46     		mov	r2, r3
 21074 0100 7B68     		ldr	r3, [r7, #4]
 21075 0102 1344     		add	r3, r3, r2
 21076 0104 094A     		ldr	r2, .L803+20
 21077 0106 1188     		ldrh	r1, [r2]	@ unaligned
 21078 0108 9278     		ldrb	r2, [r2, #2]
 21079 010a 1980     		strh	r1, [r3]	@ unaligned
 21080 010c 9A70     		strb	r2, [r3, #2]
2762:..\src/command_processing.c **** }
 21081              		.loc 1 2762 0
 21082 010e 00BF     		nop
 21083 0110 7437     		adds	r7, r7, #116
 21084              		.cfi_def_cfa_offset 12
 21085 0112 BD46     		mov	sp, r7
 21086              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 462


 21087              		@ sp needed
 21088 0114 90BD     		pop	{r4, r7, pc}
 21089              	.L804:
 21090 0116 00BF     		.align	2
 21091              	.L803:
 21092 0118 00000000 		.word	g_mem
 21093 011c 101F0000 		.word	.LC296
 21094 0120 201F0000 		.word	.LC297
 21095 0124 281F0000 		.word	.LC298
 21096 0128 341F0000 		.word	.LC299
 21097 012c 30110000 		.word	.LC151
 21098              		.cfi_endproc
 21099              	.LFE76:
 21100              		.size	prepare_SD_info, .-prepare_SD_info
 21101              		.section	.rodata
 21102              		.align	2
 21103              	.LC300:
 21104 1f44 54696D65 		.ascii	"Time,EMG1,EMG2\012\000"
 21104      2C454D47 
 21104      312C454D 
 21104      47320A00 
 21105              		.section	.text.prepare_SD_EMG_History_legend,"ax",%progbits
 21106              		.align	2
 21107              		.global	prepare_SD_EMG_History_legend
 21108              		.thumb
 21109              		.thumb_func
 21110              		.type	prepare_SD_EMG_History_legend, %function
 21111              	prepare_SD_EMG_History_legend:
 21112              	.LFB77:
2763:..\src/command_processing.c **** 
2764:..\src/command_processing.c **** //==============================================================================
2765:..\src/command_processing.c **** //                                            PREPARE SD CARD EMG HISTORY LEGEND
2766:..\src/command_processing.c **** //==============================================================================
2767:..\src/command_processing.c **** void prepare_SD_EMG_History_legend(char *info_string)
2768:..\src/command_processing.c **** {
 21113              		.loc 1 2768 0
 21114              		.cfi_startproc
 21115              		@ args = 0, pretend = 0, frame = 8
 21116              		@ frame_needed = 1, uses_anonymous_args = 0
 21117              		@ link register save eliminated.
 21118 0000 B0B4     		push	{r4, r5, r7}
 21119              		.cfi_def_cfa_offset 12
 21120              		.cfi_offset 4, -12
 21121              		.cfi_offset 5, -8
 21122              		.cfi_offset 7, -4
 21123 0002 83B0     		sub	sp, sp, #12
 21124              		.cfi_def_cfa_offset 24
 21125 0004 00AF     		add	r7, sp, #0
 21126              		.cfi_def_cfa_register 7
 21127 0006 7860     		str	r0, [r7, #4]
2769:..\src/command_processing.c ****         
2770:..\src/command_processing.c ****     // Legend
2771:..\src/command_processing.c ****     strcpy(info_string, "Time,EMG1,EMG2\n");
 21128              		.loc 1 2771 0
 21129 0008 7B68     		ldr	r3, [r7, #4]
 21130 000a 064A     		ldr	r2, .L806
 21131 000c 1C46     		mov	r4, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 463


 21132 000e 1546     		mov	r5, r2
 21133 0010 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 21134 0012 2060     		str	r0, [r4]	@ unaligned
 21135 0014 6160     		str	r1, [r4, #4]	@ unaligned
 21136 0016 A260     		str	r2, [r4, #8]	@ unaligned
 21137 0018 E360     		str	r3, [r4, #12]	@ unaligned
2772:..\src/command_processing.c ****     
2773:..\src/command_processing.c **** }
 21138              		.loc 1 2773 0
 21139 001a 00BF     		nop
 21140 001c 0C37     		adds	r7, r7, #12
 21141              		.cfi_def_cfa_offset 12
 21142 001e BD46     		mov	sp, r7
 21143              		.cfi_def_cfa_register 13
 21144              		@ sp needed
 21145 0020 B0BC     		pop	{r4, r5, r7}
 21146              		.cfi_restore 7
 21147              		.cfi_restore 5
 21148              		.cfi_restore 4
 21149              		.cfi_def_cfa_offset 0
 21150 0022 7047     		bx	lr
 21151              	.L807:
 21152              		.align	2
 21153              	.L806:
 21154 0024 441F0000 		.word	.LC300
 21155              		.cfi_endproc
 21156              	.LFE77:
 21157              		.size	prepare_SD_EMG_History_legend, .-prepare_SD_EMG_History_legend
 21158              		.section	.rodata
 21159              		.align	2
 21160              	.LC301:
 21161 1f54 252E3166 		.ascii	"%.1f,%u,%u\012\000"
 21161      2C25752C 
 21161      25750A00 
 21162              		.global	__aeabi_dadd
 21163              		.global	__aeabi_d2f
 21164              		.section	.text.prepare_SD_EMG_history,"ax",%progbits
 21165              		.align	2
 21166              		.global	prepare_SD_EMG_history
 21167              		.thumb
 21168              		.thumb_func
 21169              		.type	prepare_SD_EMG_history, %function
 21170              	prepare_SD_EMG_history:
 21171              	.LFB78:
2774:..\src/command_processing.c **** 
2775:..\src/command_processing.c **** //==============================================================================
2776:..\src/command_processing.c **** //                                                   PREPARE SD CARD EMG HISTORY
2777:..\src/command_processing.c **** //==============================================================================
2778:..\src/command_processing.c **** void prepare_SD_EMG_history(char *info_string)
2779:..\src/command_processing.c **** {
 21172              		.loc 1 2779 0
 21173              		.cfi_startproc
 21174              		@ args = 0, pretend = 0, frame = 120
 21175              		@ frame_needed = 1, uses_anonymous_args = 0
 21176 0000 B0B5     		push	{r4, r5, r7, lr}
 21177              		.cfi_def_cfa_offset 16
 21178              		.cfi_offset 4, -16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 464


 21179              		.cfi_offset 5, -12
 21180              		.cfi_offset 7, -8
 21181              		.cfi_offset 14, -4
 21182 0002 A0B0     		sub	sp, sp, #128
 21183              		.cfi_def_cfa_offset 144
 21184 0004 02AF     		add	r7, sp, #8
 21185              		.cfi_def_cfa 7, 136
 21186 0006 7860     		str	r0, [r7, #4]
2780:..\src/command_processing.c ****     char str_data[100] = "";
 21187              		.loc 1 2780 0
 21188 0008 0023     		movs	r3, #0
 21189 000a FB60     		str	r3, [r7, #12]
 21190 000c 07F11003 		add	r3, r7, #16
 21191 0010 6022     		movs	r2, #96
 21192 0012 0021     		movs	r1, #0
 21193 0014 1846     		mov	r0, r3
 21194 0016 FFF7FEFF 		bl	memset
2781:..\src/command_processing.c ****     uint16 v_idx = 0;
 21195              		.loc 1 2781 0
 21196 001a 0023     		movs	r3, #0
 21197 001c A7F87630 		strh	r3, [r7, #118]	@ movhi
2782:..\src/command_processing.c ****     static float h_time = 0.0;
2783:..\src/command_processing.c ****                 
2784:..\src/command_processing.c ****     strcpy(info_string, "");
 21198              		.loc 1 2784 0
 21199 0020 7B68     		ldr	r3, [r7, #4]
 21200 0022 0022     		movs	r2, #0
 21201 0024 1A70     		strb	r2, [r3]
 21202              	.LBB25:
2785:..\src/command_processing.c ****     
2786:..\src/command_processing.c ****     // Oldest samples of the vector
2787:..\src/command_processing.c ****     for (int i = 0; i < SAMPLES_FOR_EMG_HISTORY; i++){
 21203              		.loc 1 2787 0
 21204 0026 0023     		movs	r3, #0
 21205 0028 3B67     		str	r3, [r7, #112]
 21206 002a 4AE0     		b	.L809
 21207              	.L811:
2788:..\src/command_processing.c ****               
2789:..\src/command_processing.c ****         // Send line per line all the history vector
2790:..\src/command_processing.c ****         // First line (oldest) is made by values of emg_history_next_idx index (they will be the ne
2791:..\src/command_processing.c ****         v_idx = emg_history_next_idx + i;
 21208              		.loc 1 2791 0
 21209 002c 2C4B     		ldr	r3, .L812+8
 21210 002e 1B68     		ldr	r3, [r3]
 21211 0030 9AB2     		uxth	r2, r3
 21212 0032 3B6F     		ldr	r3, [r7, #112]
 21213 0034 9BB2     		uxth	r3, r3
 21214 0036 1344     		add	r3, r3, r2
 21215 0038 A7F87630 		strh	r3, [r7, #118]	@ movhi
2792:..\src/command_processing.c ****         if (v_idx > SAMPLES_FOR_EMG_HISTORY){
 21216              		.loc 1 2792 0
 21217 003c B7F87630 		ldrh	r3, [r7, #118]
 21218 0040 B3F5167F 		cmp	r3, #600
 21219 0044 05D9     		bls	.L810
2793:..\src/command_processing.c ****             v_idx -= SAMPLES_FOR_EMG_HISTORY;
 21220              		.loc 1 2793 0
 21221 0046 B7F87630 		ldrh	r3, [r7, #118]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 465


 21222 004a A3F51673 		sub	r3, r3, #600
 21223 004e A7F87630 		strh	r3, [r7, #118]	@ movhi
 21224              	.L810:
2794:..\src/command_processing.c ****         }
2795:..\src/command_processing.c ****         
2796:..\src/command_processing.c ****         // Time vector is reconstructed setting oldest samples as t=0.0s
2797:..\src/command_processing.c ****         sprintf(str_data, "%.1f,%u,%u\n", h_time, emg_history[v_idx][0], emg_history[v_idx][1]);
 21225              		.loc 1 2797 0 discriminator 2
 21226 0052 244B     		ldr	r3, .L812+12
 21227 0054 1B68     		ldr	r3, [r3]	@ float
 21228 0056 1846     		mov	r0, r3
 21229 0058 FFF7FEFF 		bl	__aeabi_f2d
 21230 005c 0446     		mov	r4, r0
 21231 005e 0D46     		mov	r5, r1
 21232 0060 B7F87630 		ldrh	r3, [r7, #118]
 21233 0064 204A     		ldr	r2, .L812+16
 21234 0066 32F82330 		ldrh	r3, [r2, r3, lsl #2]
 21235 006a 1946     		mov	r1, r3
 21236 006c B7F87630 		ldrh	r3, [r7, #118]
 21237 0070 1D4A     		ldr	r2, .L812+16
 21238 0072 9B00     		lsls	r3, r3, #2
 21239 0074 1344     		add	r3, r3, r2
 21240 0076 5B88     		ldrh	r3, [r3, #2]
 21241 0078 07F10C00 		add	r0, r7, #12
 21242 007c 0193     		str	r3, [sp, #4]
 21243 007e 0091     		str	r1, [sp]
 21244 0080 2246     		mov	r2, r4
 21245 0082 2B46     		mov	r3, r5
 21246 0084 1949     		ldr	r1, .L812+20
 21247 0086 FFF7FEFF 		bl	sprintf
2798:..\src/command_processing.c ****         
2799:..\src/command_processing.c ****         strcat(info_string, str_data);
 21248              		.loc 1 2799 0 discriminator 2
 21249 008a 07F10C03 		add	r3, r7, #12
 21250 008e 1946     		mov	r1, r3
 21251 0090 7868     		ldr	r0, [r7, #4]
 21252 0092 FFF7FEFF 		bl	strcat
2800:..\src/command_processing.c ****         
2801:..\src/command_processing.c ****         h_time += 0.2;      // Row time interval is 200ms (5Hz)
 21253              		.loc 1 2801 0 discriminator 2
 21254 0096 134B     		ldr	r3, .L812+12
 21255 0098 1B68     		ldr	r3, [r3]	@ float
 21256 009a 1846     		mov	r0, r3
 21257 009c FFF7FEFF 		bl	__aeabi_f2d
 21258 00a0 0DA3     		adr	r3, .L812
 21259 00a2 D3E90023 		ldrd	r2, [r3]
 21260 00a6 FFF7FEFF 		bl	__aeabi_dadd
 21261 00aa 0346     		mov	r3, r0
 21262 00ac 0C46     		mov	r4, r1
 21263 00ae 1846     		mov	r0, r3
 21264 00b0 2146     		mov	r1, r4
 21265 00b2 FFF7FEFF 		bl	__aeabi_d2f
 21266 00b6 0246     		mov	r2, r0
 21267 00b8 0A4B     		ldr	r3, .L812+12
 21268 00ba 1A60     		str	r2, [r3]	@ float
2787:..\src/command_processing.c ****               
 21269              		.loc 1 2787 0 discriminator 2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 466


 21270 00bc 3B6F     		ldr	r3, [r7, #112]
 21271 00be 0133     		adds	r3, r3, #1
 21272 00c0 3B67     		str	r3, [r7, #112]
 21273              	.L809:
2787:..\src/command_processing.c ****               
 21274              		.loc 1 2787 0 is_stmt 0 discriminator 1
 21275 00c2 3B6F     		ldr	r3, [r7, #112]
 21276 00c4 B3F5167F 		cmp	r3, #600
 21277 00c8 B0DB     		blt	.L811
 21278              	.LBE25:
2802:..\src/command_processing.c **** 
2803:..\src/command_processing.c ****     }
2804:..\src/command_processing.c ****     
2805:..\src/command_processing.c **** }
 21279              		.loc 1 2805 0 is_stmt 1
 21280 00ca 00BF     		nop
 21281 00cc 7837     		adds	r7, r7, #120
 21282              		.cfi_def_cfa_offset 16
 21283 00ce BD46     		mov	sp, r7
 21284              		.cfi_def_cfa_register 13
 21285              		@ sp needed
 21286 00d0 B0BD     		pop	{r4, r5, r7, pc}
 21287              	.L813:
 21288 00d2 00BFAFF3 		.align	3
 21288      0080
 21289              	.L812:
 21290 00d8 9A999999 		.word	-1717986918
 21291 00dc 9999C93F 		.word	1070176665
 21292 00e0 00000000 		.word	emg_history_next_idx
 21293 00e4 00000000 		.word	h_time.11219
 21294 00e8 00000000 		.word	emg_history
 21295 00ec 541F0000 		.word	.LC301
 21296              		.cfi_endproc
 21297              	.LFE78:
 21298              		.size	prepare_SD_EMG_history, .-prepare_SD_EMG_history
 21299              		.section	.rodata
 21300              		.align	2
 21301              	.LC302:
 21302 1f60 53454E53 		.ascii	"SENSORS INFO\015\012\000"
 21302      4F525320 
 21302      494E464F 
 21302      0D0A00
 21303 1f6f 00       		.align	2
 21304              	.LC303:
 21305 1f70 09416363 		.ascii	"\011Acc: %d\011%d\011%d\015\012\000"
 21305      3A202564 
 21305      09256409 
 21305      25640D0A 
 21305      00
 21306 1f81 000000   		.align	2
 21307              	.LC304:
 21308 1f84 09477972 		.ascii	"\011Gyro: %d\011%d\011%d\015\012\000"
 21308      6F3A2025 
 21308      64092564 
 21308      0925640D 
 21308      0A00
 21309 1f96 0000     		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 467


 21310              	.LC305:
 21311 1f98 094D6167 		.ascii	"\011Mag: %d\011%d\011%d\015\012\000"
 21311      3A202564 
 21311      09256409 
 21311      25640D0A 
 21311      00
 21312 1fa9 000000   		.align	2
 21313              	.LC306:
 21314 1fac 09517561 		.ascii	"\011Quat: %.3f\011%.3f\011%.3f\011%.3f\015\012\000"
 21314      743A2025 
 21314      2E336609 
 21314      252E3366 
 21314      09252E33 
 21315 1fc9 000000   		.align	2
 21316              	.LC307:
 21317 1fcc 0954656D 		.ascii	"\011Temperature: %d\015\012\000"
 21317      70657261 
 21317      74757265 
 21317      3A202564 
 21317      0D0A00
 21318              		.section	.text.IMU_reading_info,"ax",%progbits
 21319              		.align	2
 21320              		.global	IMU_reading_info
 21321              		.thumb
 21322              		.thumb_func
 21323              		.type	IMU_reading_info, %function
 21324              	IMU_reading_info:
 21325              	.LFB79:
2806:..\src/command_processing.c **** 
2807:..\src/command_processing.c **** //==============================================================================
2808:..\src/command_processing.c **** //                                                              IMU READING INFO
2809:..\src/command_processing.c **** //==============================================================================
2810:..\src/command_processing.c **** 
2811:..\src/command_processing.c **** void IMU_reading_info(char *info_string)
2812:..\src/command_processing.c **** {
 21326              		.loc 1 2812 0
 21327              		.cfi_startproc
 21328              		@ args = 0, pretend = 0, frame = 312
 21329              		@ frame_needed = 1, uses_anonymous_args = 0
 21330 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 21331              		.cfi_def_cfa_offset 32
 21332              		.cfi_offset 4, -32
 21333              		.cfi_offset 5, -28
 21334              		.cfi_offset 7, -24
 21335              		.cfi_offset 8, -20
 21336              		.cfi_offset 9, -16
 21337              		.cfi_offset 10, -12
 21338              		.cfi_offset 11, -8
 21339              		.cfi_offset 14, -4
 21340 0004 D4B0     		sub	sp, sp, #336
 21341              		.cfi_def_cfa_offset 368
 21342 0006 06AF     		add	r7, sp, #24
 21343              		.cfi_def_cfa 7, 344
 21344 0008 3B1D     		adds	r3, r7, #4
 21345 000a 1860     		str	r0, [r3]
2813:..\src/command_processing.c ****     char str[300];  
2814:..\src/command_processing.c ****     int i;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 468


2815:..\src/command_processing.c ****                  
2816:..\src/command_processing.c ****     strcat(info_string, "SENSORS INFO\r\n");
 21346              		.loc 1 2816 0
 21347 000c 3B1D     		adds	r3, r7, #4
 21348 000e 1868     		ldr	r0, [r3]
 21349 0010 FFF7FEFF 		bl	strlen
 21350 0014 0346     		mov	r3, r0
 21351 0016 1A46     		mov	r2, r3
 21352 0018 3B1D     		adds	r3, r7, #4
 21353 001a 1B68     		ldr	r3, [r3]
 21354 001c 1344     		add	r3, r3, r2
 21355 001e C94A     		ldr	r2, .L822
 21356 0020 1C46     		mov	r4, r3
 21357 0022 1346     		mov	r3, r2
 21358 0024 07CB     		ldmia	r3!, {r0, r1, r2}
 21359 0026 2060     		str	r0, [r4]	@ unaligned
 21360 0028 6160     		str	r1, [r4, #4]	@ unaligned
 21361 002a A260     		str	r2, [r4, #8]	@ unaligned
 21362 002c 1A88     		ldrh	r2, [r3]	@ unaligned
 21363 002e 9B78     		ldrb	r3, [r3, #2]
 21364 0030 A281     		strh	r2, [r4, #12]	@ unaligned
 21365 0032 A373     		strb	r3, [r4, #14]
2817:..\src/command_processing.c ****     for (i=0; i<N_IMU_Connected; i++){
 21366              		.loc 1 2817 0
 21367 0034 0023     		movs	r3, #0
 21368 0036 C7F83431 		str	r3, [r7, #308]
 21369 003a 66E1     		b	.L815
 21370              	.L821:
2818:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 21371              		.loc 1 2818 0
 21372 003c C24A     		ldr	r2, .L822+4
 21373 003e D7F83431 		ldr	r3, [r7, #308]
 21374 0042 1344     		add	r3, r3, r2
 21375 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21376 0046 07F10800 		add	r0, r7, #8
 21377 004a D7F83421 		ldr	r2, [r7, #308]
 21378 004e BF49     		ldr	r1, .L822+8
 21379 0050 FFF7FEFF 		bl	sprintf
2819:..\src/command_processing.c ****         strcat(info_string, str);
 21380              		.loc 1 2819 0
 21381 0054 07F10802 		add	r2, r7, #8
 21382 0058 3B1D     		adds	r3, r7, #4
 21383 005a 1146     		mov	r1, r2
 21384 005c 1868     		ldr	r0, [r3]
 21385 005e FFF7FEFF 		bl	strcat
2820:..\src/command_processing.c ****         
2821:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][0])){
 21386              		.loc 1 2821 0
 21387 0062 B94A     		ldr	r2, .L822+4
 21388 0064 D7F83431 		ldr	r3, [r7, #308]
 21389 0068 1344     		add	r3, r3, r2
 21390 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21391 006c 1946     		mov	r1, r3
 21392 006e B84A     		ldr	r2, .L822+12
 21393 0070 0B46     		mov	r3, r1
 21394 0072 9B00     		lsls	r3, r3, #2
 21395 0074 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 469


 21396 0076 1344     		add	r3, r3, r2
 21397 0078 03F20223 		addw	r3, r3, #514
 21398 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21399 007e 002B     		cmp	r3, #0
 21400 0080 31D0     		beq	.L816
2822:..\src/command_processing.c ****             sprintf(str, "\tAcc: %d\t%d\t%d\r\n", (int16) g_imu[i].accel_value[0], (int16) g_imu[i]
 21401              		.loc 1 2822 0
 21402 0082 B449     		ldr	r1, .L822+16
 21403 0084 D7F83421 		ldr	r2, [r7, #308]
 21404 0088 1346     		mov	r3, r2
 21405 008a 9B00     		lsls	r3, r3, #2
 21406 008c 1344     		add	r3, r3, r2
 21407 008e DB00     		lsls	r3, r3, #3
 21408 0090 0B44     		add	r3, r3, r1
 21409 0092 0233     		adds	r3, r3, #2
 21410 0094 B3F90030 		ldrsh	r3, [r3]
 21411 0098 1C46     		mov	r4, r3
 21412 009a AE49     		ldr	r1, .L822+16
 21413 009c D7F83421 		ldr	r2, [r7, #308]
 21414 00a0 1346     		mov	r3, r2
 21415 00a2 9B00     		lsls	r3, r3, #2
 21416 00a4 1344     		add	r3, r3, r2
 21417 00a6 DB00     		lsls	r3, r3, #3
 21418 00a8 0B44     		add	r3, r3, r1
 21419 00aa 0433     		adds	r3, r3, #4
 21420 00ac B3F90030 		ldrsh	r3, [r3]
 21421 00b0 1D46     		mov	r5, r3
 21422 00b2 A849     		ldr	r1, .L822+16
 21423 00b4 D7F83421 		ldr	r2, [r7, #308]
 21424 00b8 1346     		mov	r3, r2
 21425 00ba 9B00     		lsls	r3, r3, #2
 21426 00bc 1344     		add	r3, r3, r2
 21427 00be DB00     		lsls	r3, r3, #3
 21428 00c0 0B44     		add	r3, r3, r1
 21429 00c2 0633     		adds	r3, r3, #6
 21430 00c4 B3F90030 		ldrsh	r3, [r3]
 21431 00c8 07F10800 		add	r0, r7, #8
 21432 00cc 0093     		str	r3, [sp]
 21433 00ce 2B46     		mov	r3, r5
 21434 00d0 2246     		mov	r2, r4
 21435 00d2 A149     		ldr	r1, .L822+20
 21436 00d4 FFF7FEFF 		bl	sprintf
2823:..\src/command_processing.c ****             strcat(info_string, str);
 21437              		.loc 1 2823 0
 21438 00d8 07F10802 		add	r2, r7, #8
 21439 00dc 3B1D     		adds	r3, r7, #4
 21440 00de 1146     		mov	r1, r2
 21441 00e0 1868     		ldr	r0, [r3]
 21442 00e2 FFF7FEFF 		bl	strcat
 21443              	.L816:
2824:..\src/command_processing.c ****         }
2825:..\src/command_processing.c **** 
2826:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][1])){
 21444              		.loc 1 2826 0
 21445 00e6 984A     		ldr	r2, .L822+4
 21446 00e8 D7F83431 		ldr	r3, [r7, #308]
 21447 00ec 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 470


 21448 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21449 00f0 1946     		mov	r1, r3
 21450 00f2 974A     		ldr	r2, .L822+12
 21451 00f4 0B46     		mov	r3, r1
 21452 00f6 9B00     		lsls	r3, r3, #2
 21453 00f8 0B44     		add	r3, r3, r1
 21454 00fa 1344     		add	r3, r3, r2
 21455 00fc 03F20323 		addw	r3, r3, #515
 21456 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21457 0102 002B     		cmp	r3, #0
 21458 0104 31D0     		beq	.L817
2827:..\src/command_processing.c ****             sprintf(str, "\tGyro: %d\t%d\t%d\r\n", (int16) g_imu[i].gyro_value[0], (int16) g_imu[i]
 21459              		.loc 1 2827 0
 21460 0106 9349     		ldr	r1, .L822+16
 21461 0108 D7F83421 		ldr	r2, [r7, #308]
 21462 010c 1346     		mov	r3, r2
 21463 010e 9B00     		lsls	r3, r3, #2
 21464 0110 1344     		add	r3, r3, r2
 21465 0112 DB00     		lsls	r3, r3, #3
 21466 0114 0B44     		add	r3, r3, r1
 21467 0116 0833     		adds	r3, r3, #8
 21468 0118 B3F90030 		ldrsh	r3, [r3]
 21469 011c 1C46     		mov	r4, r3
 21470 011e 8D49     		ldr	r1, .L822+16
 21471 0120 D7F83421 		ldr	r2, [r7, #308]
 21472 0124 1346     		mov	r3, r2
 21473 0126 9B00     		lsls	r3, r3, #2
 21474 0128 1344     		add	r3, r3, r2
 21475 012a DB00     		lsls	r3, r3, #3
 21476 012c 0B44     		add	r3, r3, r1
 21477 012e 0A33     		adds	r3, r3, #10
 21478 0130 B3F90030 		ldrsh	r3, [r3]
 21479 0134 1D46     		mov	r5, r3
 21480 0136 8749     		ldr	r1, .L822+16
 21481 0138 D7F83421 		ldr	r2, [r7, #308]
 21482 013c 1346     		mov	r3, r2
 21483 013e 9B00     		lsls	r3, r3, #2
 21484 0140 1344     		add	r3, r3, r2
 21485 0142 DB00     		lsls	r3, r3, #3
 21486 0144 0B44     		add	r3, r3, r1
 21487 0146 0C33     		adds	r3, r3, #12
 21488 0148 B3F90030 		ldrsh	r3, [r3]
 21489 014c 07F10800 		add	r0, r7, #8
 21490 0150 0093     		str	r3, [sp]
 21491 0152 2B46     		mov	r3, r5
 21492 0154 2246     		mov	r2, r4
 21493 0156 8149     		ldr	r1, .L822+24
 21494 0158 FFF7FEFF 		bl	sprintf
2828:..\src/command_processing.c ****             strcat(info_string, str);
 21495              		.loc 1 2828 0
 21496 015c 07F10802 		add	r2, r7, #8
 21497 0160 3B1D     		adds	r3, r7, #4
 21498 0162 1146     		mov	r1, r2
 21499 0164 1868     		ldr	r0, [r3]
 21500 0166 FFF7FEFF 		bl	strcat
 21501              	.L817:
2829:..\src/command_processing.c ****         }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 471


2830:..\src/command_processing.c **** 
2831:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][2])){
 21502              		.loc 1 2831 0
 21503 016a 774A     		ldr	r2, .L822+4
 21504 016c D7F83431 		ldr	r3, [r7, #308]
 21505 0170 1344     		add	r3, r3, r2
 21506 0172 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21507 0174 1946     		mov	r1, r3
 21508 0176 764A     		ldr	r2, .L822+12
 21509 0178 0B46     		mov	r3, r1
 21510 017a 9B00     		lsls	r3, r3, #2
 21511 017c 0B44     		add	r3, r3, r1
 21512 017e 1344     		add	r3, r3, r2
 21513 0180 03F50173 		add	r3, r3, #516
 21514 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21515 0186 002B     		cmp	r3, #0
 21516 0188 31D0     		beq	.L818
2832:..\src/command_processing.c ****             sprintf(str, "\tMag: %d\t%d\t%d\r\n", (int16) g_imu[i].mag_value[0], (int16) g_imu[i].m
 21517              		.loc 1 2832 0
 21518 018a 7249     		ldr	r1, .L822+16
 21519 018c D7F83421 		ldr	r2, [r7, #308]
 21520 0190 1346     		mov	r3, r2
 21521 0192 9B00     		lsls	r3, r3, #2
 21522 0194 1344     		add	r3, r3, r2
 21523 0196 DB00     		lsls	r3, r3, #3
 21524 0198 0B44     		add	r3, r3, r1
 21525 019a 0E33     		adds	r3, r3, #14
 21526 019c B3F90030 		ldrsh	r3, [r3]
 21527 01a0 1C46     		mov	r4, r3
 21528 01a2 6C49     		ldr	r1, .L822+16
 21529 01a4 D7F83421 		ldr	r2, [r7, #308]
 21530 01a8 1346     		mov	r3, r2
 21531 01aa 9B00     		lsls	r3, r3, #2
 21532 01ac 1344     		add	r3, r3, r2
 21533 01ae DB00     		lsls	r3, r3, #3
 21534 01b0 0B44     		add	r3, r3, r1
 21535 01b2 1033     		adds	r3, r3, #16
 21536 01b4 B3F90030 		ldrsh	r3, [r3]
 21537 01b8 1D46     		mov	r5, r3
 21538 01ba 6649     		ldr	r1, .L822+16
 21539 01bc D7F83421 		ldr	r2, [r7, #308]
 21540 01c0 1346     		mov	r3, r2
 21541 01c2 9B00     		lsls	r3, r3, #2
 21542 01c4 1344     		add	r3, r3, r2
 21543 01c6 DB00     		lsls	r3, r3, #3
 21544 01c8 0B44     		add	r3, r3, r1
 21545 01ca 1233     		adds	r3, r3, #18
 21546 01cc B3F90030 		ldrsh	r3, [r3]
 21547 01d0 07F10800 		add	r0, r7, #8
 21548 01d4 0093     		str	r3, [sp]
 21549 01d6 2B46     		mov	r3, r5
 21550 01d8 2246     		mov	r2, r4
 21551 01da 6149     		ldr	r1, .L822+28
 21552 01dc FFF7FEFF 		bl	sprintf
2833:..\src/command_processing.c ****             strcat(info_string, str);
 21553              		.loc 1 2833 0
 21554 01e0 07F10802 		add	r2, r7, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 472


 21555 01e4 3B1D     		adds	r3, r7, #4
 21556 01e6 1146     		mov	r1, r2
 21557 01e8 1868     		ldr	r0, [r3]
 21558 01ea FFF7FEFF 		bl	strcat
 21559              	.L818:
2834:..\src/command_processing.c ****         }
2835:..\src/command_processing.c ****         
2836:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][3])){
 21560              		.loc 1 2836 0
 21561 01ee 564A     		ldr	r2, .L822+4
 21562 01f0 D7F83431 		ldr	r3, [r7, #308]
 21563 01f4 1344     		add	r3, r3, r2
 21564 01f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21565 01f8 1946     		mov	r1, r3
 21566 01fa 554A     		ldr	r2, .L822+12
 21567 01fc 0B46     		mov	r3, r1
 21568 01fe 9B00     		lsls	r3, r3, #2
 21569 0200 0B44     		add	r3, r3, r1
 21570 0202 1344     		add	r3, r3, r2
 21571 0204 03F20523 		addw	r3, r3, #517
 21572 0208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21573 020a 002B     		cmp	r3, #0
 21574 020c 4FD0     		beq	.L819
2837:..\src/command_processing.c ****             sprintf(str, "\tQuat: %.3f\t%.3f\t%.3f\t%.3f\r\n", (float) g_imu[i].quat_value[0], (flo
 21575              		.loc 1 2837 0
 21576 020e 5149     		ldr	r1, .L822+16
 21577 0210 D7F83421 		ldr	r2, [r7, #308]
 21578 0214 1346     		mov	r3, r2
 21579 0216 9B00     		lsls	r3, r3, #2
 21580 0218 1344     		add	r3, r3, r2
 21581 021a DB00     		lsls	r3, r3, #3
 21582 021c 0B44     		add	r3, r3, r1
 21583 021e 1433     		adds	r3, r3, #20
 21584 0220 1B68     		ldr	r3, [r3]	@ float
 21585 0222 1846     		mov	r0, r3
 21586 0224 FFF7FEFF 		bl	__aeabi_f2d
 21587 0228 8246     		mov	r10, r0
 21588 022a 8B46     		mov	fp, r1
 21589 022c 4949     		ldr	r1, .L822+16
 21590 022e D7F83421 		ldr	r2, [r7, #308]
 21591 0232 1346     		mov	r3, r2
 21592 0234 9B00     		lsls	r3, r3, #2
 21593 0236 1344     		add	r3, r3, r2
 21594 0238 DB00     		lsls	r3, r3, #3
 21595 023a 0B44     		add	r3, r3, r1
 21596 023c 1833     		adds	r3, r3, #24
 21597 023e 1B68     		ldr	r3, [r3]	@ float
 21598 0240 1846     		mov	r0, r3
 21599 0242 FFF7FEFF 		bl	__aeabi_f2d
 21600 0246 0446     		mov	r4, r0
 21601 0248 0D46     		mov	r5, r1
 21602 024a 4249     		ldr	r1, .L822+16
 21603 024c D7F83421 		ldr	r2, [r7, #308]
 21604 0250 1346     		mov	r3, r2
 21605 0252 9B00     		lsls	r3, r3, #2
 21606 0254 1344     		add	r3, r3, r2
 21607 0256 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 473


 21608 0258 0B44     		add	r3, r3, r1
 21609 025a 1C33     		adds	r3, r3, #28
 21610 025c 1B68     		ldr	r3, [r3]	@ float
 21611 025e 1846     		mov	r0, r3
 21612 0260 FFF7FEFF 		bl	__aeabi_f2d
 21613 0264 8046     		mov	r8, r0
 21614 0266 8946     		mov	r9, r1
 21615 0268 3A49     		ldr	r1, .L822+16
 21616 026a D7F83421 		ldr	r2, [r7, #308]
 21617 026e 1346     		mov	r3, r2
 21618 0270 9B00     		lsls	r3, r3, #2
 21619 0272 1344     		add	r3, r3, r2
 21620 0274 DB00     		lsls	r3, r3, #3
 21621 0276 0B44     		add	r3, r3, r1
 21622 0278 2033     		adds	r3, r3, #32
 21623 027a 1B68     		ldr	r3, [r3]	@ float
 21624 027c 1846     		mov	r0, r3
 21625 027e FFF7FEFF 		bl	__aeabi_f2d
 21626 0282 0246     		mov	r2, r0
 21627 0284 0B46     		mov	r3, r1
 21628 0286 07F10800 		add	r0, r7, #8
 21629 028a CDE90423 		strd	r2, [sp, #16]
 21630 028e CDE90289 		strd	r8, [sp, #8]
 21631 0292 CDE90045 		strd	r4, [sp]
 21632 0296 5246     		mov	r2, r10
 21633 0298 5B46     		mov	r3, fp
 21634 029a 3249     		ldr	r1, .L822+32
 21635 029c FFF7FEFF 		bl	sprintf
2838:..\src/command_processing.c ****             strcat(info_string, str);
 21636              		.loc 1 2838 0
 21637 02a0 07F10802 		add	r2, r7, #8
 21638 02a4 3B1D     		adds	r3, r7, #4
 21639 02a6 1146     		mov	r1, r2
 21640 02a8 1868     		ldr	r0, [r3]
 21641 02aa FFF7FEFF 		bl	strcat
 21642              	.L819:
2839:..\src/command_processing.c ****         }
2840:..\src/command_processing.c ****         
2841:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][4])){
 21643              		.loc 1 2841 0
 21644 02ae 264A     		ldr	r2, .L822+4
 21645 02b0 D7F83431 		ldr	r3, [r7, #308]
 21646 02b4 1344     		add	r3, r3, r2
 21647 02b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21648 02b8 1946     		mov	r1, r3
 21649 02ba 254A     		ldr	r2, .L822+12
 21650 02bc 0B46     		mov	r3, r1
 21651 02be 9B00     		lsls	r3, r3, #2
 21652 02c0 0B44     		add	r3, r3, r1
 21653 02c2 1344     		add	r3, r3, r2
 21654 02c4 03F20623 		addw	r3, r3, #518
 21655 02c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21656 02ca 002B     		cmp	r3, #0
 21657 02cc 18D0     		beq	.L820
2842:..\src/command_processing.c ****             sprintf(str, "\tTemperature: %d\r\n", (int16) g_imu[i].temp_value);
 21658              		.loc 1 2842 0
 21659 02ce 2149     		ldr	r1, .L822+16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 474


 21660 02d0 D7F83421 		ldr	r2, [r7, #308]
 21661 02d4 1346     		mov	r3, r2
 21662 02d6 9B00     		lsls	r3, r3, #2
 21663 02d8 1344     		add	r3, r3, r2
 21664 02da DB00     		lsls	r3, r3, #3
 21665 02dc 0B44     		add	r3, r3, r1
 21666 02de 2433     		adds	r3, r3, #36
 21667 02e0 B3F90030 		ldrsh	r3, [r3]
 21668 02e4 1A46     		mov	r2, r3
 21669 02e6 07F10803 		add	r3, r7, #8
 21670 02ea 1F49     		ldr	r1, .L822+36
 21671 02ec 1846     		mov	r0, r3
 21672 02ee FFF7FEFF 		bl	sprintf
2843:..\src/command_processing.c ****             strcat(info_string, str);
 21673              		.loc 1 2843 0
 21674 02f2 07F10802 		add	r2, r7, #8
 21675 02f6 3B1D     		adds	r3, r7, #4
 21676 02f8 1146     		mov	r1, r2
 21677 02fa 1868     		ldr	r0, [r3]
 21678 02fc FFF7FEFF 		bl	strcat
 21679              	.L820:
2817:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 21680              		.loc 1 2817 0 discriminator 2
 21681 0300 D7F83431 		ldr	r3, [r7, #308]
 21682 0304 0133     		adds	r3, r3, #1
 21683 0306 C7F83431 		str	r3, [r7, #308]
 21684              	.L815:
2817:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 21685              		.loc 1 2817 0 is_stmt 0 discriminator 1
 21686 030a 184B     		ldr	r3, .L822+40
 21687 030c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21688 030e 1A46     		mov	r2, r3
 21689 0310 D7F83431 		ldr	r3, [r7, #308]
 21690 0314 9A42     		cmp	r2, r3
 21691 0316 3FF791AE 		bgt	.L821
2844:..\src/command_processing.c ****         }
2845:..\src/command_processing.c ****         
2846:..\src/command_processing.c ****     }
2847:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 21692              		.loc 1 2847 0 is_stmt 1
 21693 031a 3B1D     		adds	r3, r7, #4
 21694 031c 1868     		ldr	r0, [r3]
 21695 031e FFF7FEFF 		bl	strlen
 21696 0322 0346     		mov	r3, r0
 21697 0324 1A46     		mov	r2, r3
 21698 0326 3B1D     		adds	r3, r7, #4
 21699 0328 1B68     		ldr	r3, [r3]
 21700 032a 1344     		add	r3, r3, r2
 21701 032c 104A     		ldr	r2, .L822+44
 21702 032e 1188     		ldrh	r1, [r2]	@ unaligned
 21703 0330 9278     		ldrb	r2, [r2, #2]
 21704 0332 1980     		strh	r1, [r3]	@ unaligned
 21705 0334 9A70     		strb	r2, [r3, #2]
2848:..\src/command_processing.c **** }
 21706              		.loc 1 2848 0
 21707 0336 00BF     		nop
 21708 0338 07F59C77 		add	r7, r7, #312
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 475


 21709              		.cfi_def_cfa_offset 32
 21710 033c BD46     		mov	sp, r7
 21711              		.cfi_def_cfa_register 13
 21712              		@ sp needed
 21713 033e BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 21714              	.L823:
 21715 0342 00BF     		.align	2
 21716              	.L822:
 21717 0344 601F0000 		.word	.LC302
 21718 0348 00000000 		.word	IMU_connected
 21719 034c B81A0000 		.word	.LC253
 21720 0350 00000000 		.word	c_mem
 21721 0354 00000000 		.word	g_imu
 21722 0358 701F0000 		.word	.LC303
 21723 035c 841F0000 		.word	.LC304
 21724 0360 981F0000 		.word	.LC305
 21725 0364 AC1F0000 		.word	.LC306
 21726 0368 CC1F0000 		.word	.LC307
 21727 036c 00000000 		.word	N_IMU_Connected
 21728 0370 30110000 		.word	.LC151
 21729              		.cfi_endproc
 21730              	.LFE79:
 21731              		.size	IMU_reading_info, .-IMU_reading_info
 21732              		.section	.text.commWrite_old_id,"ax",%progbits
 21733              		.align	2
 21734              		.global	commWrite_old_id
 21735              		.thumb
 21736              		.thumb_func
 21737              		.type	commWrite_old_id, %function
 21738              	commWrite_old_id:
 21739              	.LFB80:
2849:..\src/command_processing.c **** 
2850:..\src/command_processing.c **** //==============================================================================
2851:..\src/command_processing.c **** //                                                     WRITE FUNCTIONS FOR RS485
2852:..\src/command_processing.c **** //==============================================================================
2853:..\src/command_processing.c **** 
2854:..\src/command_processing.c **** void commWrite_old_id(uint8 *packet_data, uint16 packet_lenght, uint8 old_id)
2855:..\src/command_processing.c **** {
 21740              		.loc 1 2855 0
 21741              		.cfi_startproc
 21742              		@ args = 0, pretend = 0, frame = 16
 21743              		@ frame_needed = 1, uses_anonymous_args = 0
 21744 0000 80B5     		push	{r7, lr}
 21745              		.cfi_def_cfa_offset 8
 21746              		.cfi_offset 7, -8
 21747              		.cfi_offset 14, -4
 21748 0002 84B0     		sub	sp, sp, #16
 21749              		.cfi_def_cfa_offset 24
 21750 0004 00AF     		add	r7, sp, #0
 21751              		.cfi_def_cfa_register 7
 21752 0006 7860     		str	r0, [r7, #4]
 21753 0008 0B46     		mov	r3, r1
 21754 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 21755 000c 1346     		mov	r3, r2
 21756 000e 7B70     		strb	r3, [r7, #1]
2856:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2857:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 476


2858:..\src/command_processing.c ****     // frame - start
2859:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21757              		.loc 1 2859 0
 21758 0010 3A20     		movs	r0, #58
 21759 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2860:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21760              		.loc 1 2860 0
 21761 0016 3A20     		movs	r0, #58
 21762 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2861:..\src/command_processing.c ****     // frame - ID
2862:..\src/command_processing.c ****     //if(old_id)
2863:..\src/command_processing.c ****         UART_RS485_PutChar(old_id);
 21763              		.loc 1 2863 0
 21764 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 21765 001e 1846     		mov	r0, r3
 21766 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2864:..\src/command_processing.c ****     //else
2865:..\src/command_processing.c ****         //UART_RS485_PutChar(g_mem.id);
2866:..\src/command_processing.c ****         
2867:..\src/command_processing.c ****     // frame - length
2868:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 21767              		.loc 1 2868 0
 21768 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 21769 0026 DBB2     		uxtb	r3, r3
 21770 0028 1846     		mov	r0, r3
 21771 002a FFF7FEFF 		bl	UART_RS485_PutChar
2869:..\src/command_processing.c ****     // frame - packet data
2870:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 21772              		.loc 1 2870 0
 21773 002e 0023     		movs	r3, #0
 21774 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 21775 0032 09E0     		b	.L825
 21776              	.L826:
2871:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21777              		.loc 1 2871 0 discriminator 3
 21778 0034 FB89     		ldrh	r3, [r7, #14]
 21779 0036 7A68     		ldr	r2, [r7, #4]
 21780 0038 1344     		add	r3, r3, r2
 21781 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21782 003c 1846     		mov	r0, r3
 21783 003e FFF7FEFF 		bl	UART_RS485_PutChar
2870:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21784              		.loc 1 2870 0 discriminator 3
 21785 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 21786 0044 0133     		adds	r3, r3, #1
 21787 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 21788              	.L825:
2870:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21789              		.loc 1 2870 0 is_stmt 0 discriminator 1
 21790 0048 FA89     		ldrh	r2, [r7, #14]
 21791 004a 7B88     		ldrh	r3, [r7, #2]
 21792 004c 9A42     		cmp	r2, r3
 21793 004e F1D3     		bcc	.L826
2872:..\src/command_processing.c ****     }
2873:..\src/command_processing.c **** 
2874:..\src/command_processing.c ****     index = 0;
 21794              		.loc 1 2874 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 477


 21795 0050 0023     		movs	r3, #0
 21796 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2875:..\src/command_processing.c **** 
2876:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 21797              		.loc 1 2876 0
 21798 0054 00BF     		nop
 21799              	.L828:
 21800              		.loc 1 2876 0 is_stmt 0 discriminator 2
 21801 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 21802 005a 0346     		mov	r3, r0
 21803 005c 03F00103 		and	r3, r3, #1
 21804 0060 002B     		cmp	r3, #0
 21805 0062 05D1     		bne	.L827
 21806              		.loc 1 2876 0 discriminator 1
 21807 0064 FB89     		ldrh	r3, [r7, #14]
 21808 0066 5A1C     		adds	r2, r3, #1
 21809 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 21810 006a B3F57A7F 		cmp	r3, #1000
 21811 006e F2D9     		bls	.L828
 21812              	.L827:
2877:..\src/command_processing.c **** 
2878:..\src/command_processing.c ****     RS485_CTS_Write(1);
 21813              		.loc 1 2878 0 is_stmt 1
 21814 0070 0120     		movs	r0, #1
 21815 0072 FFF7FEFF 		bl	RS485_CTS_Write
2879:..\src/command_processing.c ****     RS485_CTS_Write(0);
 21816              		.loc 1 2879 0
 21817 0076 0020     		movs	r0, #0
 21818 0078 FFF7FEFF 		bl	RS485_CTS_Write
2880:..\src/command_processing.c **** }
 21819              		.loc 1 2880 0
 21820 007c 00BF     		nop
 21821 007e 1037     		adds	r7, r7, #16
 21822              		.cfi_def_cfa_offset 8
 21823 0080 BD46     		mov	sp, r7
 21824              		.cfi_def_cfa_register 13
 21825              		@ sp needed
 21826 0082 80BD     		pop	{r7, pc}
 21827              		.cfi_endproc
 21828              	.LFE80:
 21829              		.size	commWrite_old_id, .-commWrite_old_id
 21830              		.section	.text.commWrite,"ax",%progbits
 21831              		.align	2
 21832              		.global	commWrite
 21833              		.thumb
 21834              		.thumb_func
 21835              		.type	commWrite, %function
 21836              	commWrite:
 21837              	.LFB81:
2881:..\src/command_processing.c **** 
2882:..\src/command_processing.c **** void commWrite(uint8 *packet_data, uint16 packet_lenght)
2883:..\src/command_processing.c **** {
 21838              		.loc 1 2883 0
 21839              		.cfi_startproc
 21840              		@ args = 0, pretend = 0, frame = 16
 21841              		@ frame_needed = 1, uses_anonymous_args = 0
 21842 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 478


 21843              		.cfi_def_cfa_offset 8
 21844              		.cfi_offset 7, -8
 21845              		.cfi_offset 14, -4
 21846 0002 84B0     		sub	sp, sp, #16
 21847              		.cfi_def_cfa_offset 24
 21848 0004 00AF     		add	r7, sp, #0
 21849              		.cfi_def_cfa_register 7
 21850 0006 7860     		str	r0, [r7, #4]
 21851 0008 0B46     		mov	r3, r1
 21852 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2884:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2885:..\src/command_processing.c **** 
2886:..\src/command_processing.c ****     // frame - start
2887:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21853              		.loc 1 2887 0
 21854 000c 3A20     		movs	r0, #58
 21855 000e FFF7FEFF 		bl	UART_RS485_PutChar
2888:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21856              		.loc 1 2888 0
 21857 0012 3A20     		movs	r0, #58
 21858 0014 FFF7FEFF 		bl	UART_RS485_PutChar
2889:..\src/command_processing.c ****     // frame - ID
2890:..\src/command_processing.c ****     UART_RS485_PutChar(g_mem.dev.id);
 21859              		.loc 1 2890 0
 21860 0018 1A4B     		ldr	r3, .L834
 21861 001a 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 21862 001e 1846     		mov	r0, r3
 21863 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2891:..\src/command_processing.c ****     // frame - length
2892:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 21864              		.loc 1 2892 0
 21865 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 21866 0026 DBB2     		uxtb	r3, r3
 21867 0028 1846     		mov	r0, r3
 21868 002a FFF7FEFF 		bl	UART_RS485_PutChar
2893:..\src/command_processing.c ****     // frame - packet data
2894:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 21869              		.loc 1 2894 0
 21870 002e 0023     		movs	r3, #0
 21871 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 21872 0032 09E0     		b	.L830
 21873              	.L831:
2895:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21874              		.loc 1 2895 0 discriminator 3
 21875 0034 FB89     		ldrh	r3, [r7, #14]
 21876 0036 7A68     		ldr	r2, [r7, #4]
 21877 0038 1344     		add	r3, r3, r2
 21878 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21879 003c 1846     		mov	r0, r3
 21880 003e FFF7FEFF 		bl	UART_RS485_PutChar
2894:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21881              		.loc 1 2894 0 discriminator 3
 21882 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 21883 0044 0133     		adds	r3, r3, #1
 21884 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 21885              	.L830:
2894:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 479


 21886              		.loc 1 2894 0 is_stmt 0 discriminator 1
 21887 0048 FA89     		ldrh	r2, [r7, #14]
 21888 004a 7B88     		ldrh	r3, [r7, #2]
 21889 004c 9A42     		cmp	r2, r3
 21890 004e F1D3     		bcc	.L831
2896:..\src/command_processing.c ****     }
2897:..\src/command_processing.c **** 
2898:..\src/command_processing.c ****     index = 0;
 21891              		.loc 1 2898 0 is_stmt 1
 21892 0050 0023     		movs	r3, #0
 21893 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2899:..\src/command_processing.c **** 
2900:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 21894              		.loc 1 2900 0
 21895 0054 00BF     		nop
 21896              	.L833:
 21897              		.loc 1 2900 0 is_stmt 0 discriminator 2
 21898 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 21899 005a 0346     		mov	r3, r0
 21900 005c 03F00103 		and	r3, r3, #1
 21901 0060 002B     		cmp	r3, #0
 21902 0062 05D1     		bne	.L832
 21903              		.loc 1 2900 0 discriminator 1
 21904 0064 FB89     		ldrh	r3, [r7, #14]
 21905 0066 5A1C     		adds	r2, r3, #1
 21906 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 21907 006a B3F57A7F 		cmp	r3, #1000
 21908 006e F2D9     		bls	.L833
 21909              	.L832:
2901:..\src/command_processing.c **** 
2902:..\src/command_processing.c ****     RS485_CTS_Write(1);
 21910              		.loc 1 2902 0 is_stmt 1
 21911 0070 0120     		movs	r0, #1
 21912 0072 FFF7FEFF 		bl	RS485_CTS_Write
2903:..\src/command_processing.c ****     RS485_CTS_Write(0);
 21913              		.loc 1 2903 0
 21914 0076 0020     		movs	r0, #0
 21915 0078 FFF7FEFF 		bl	RS485_CTS_Write
2904:..\src/command_processing.c **** }
 21916              		.loc 1 2904 0
 21917 007c 00BF     		nop
 21918 007e 1037     		adds	r7, r7, #16
 21919              		.cfi_def_cfa_offset 8
 21920 0080 BD46     		mov	sp, r7
 21921              		.cfi_def_cfa_register 13
 21922              		@ sp needed
 21923 0082 80BD     		pop	{r7, pc}
 21924              	.L835:
 21925              		.align	2
 21926              	.L834:
 21927 0084 00000000 		.word	g_mem
 21928              		.cfi_endproc
 21929              	.LFE81:
 21930              		.size	commWrite, .-commWrite
 21931              		.section	.text.commWriteID,"ax",%progbits
 21932              		.align	2
 21933              		.global	commWriteID
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 480


 21934              		.thumb
 21935              		.thumb_func
 21936              		.type	commWriteID, %function
 21937              	commWriteID:
 21938              	.LFB82:
2905:..\src/command_processing.c **** 
2906:..\src/command_processing.c **** //==============================================================================
2907:..\src/command_processing.c **** //                                             WRITE FUNCTION FOR ANOTHER DEVICE
2908:..\src/command_processing.c **** //==============================================================================
2909:..\src/command_processing.c **** 
2910:..\src/command_processing.c **** void commWriteID(uint8 *packet_data, uint16 packet_lenght, uint8 id)
2911:..\src/command_processing.c **** {
 21939              		.loc 1 2911 0
 21940              		.cfi_startproc
 21941              		@ args = 0, pretend = 0, frame = 8
 21942              		@ frame_needed = 1, uses_anonymous_args = 0
 21943 0000 80B5     		push	{r7, lr}
 21944              		.cfi_def_cfa_offset 8
 21945              		.cfi_offset 7, -8
 21946              		.cfi_offset 14, -4
 21947 0002 82B0     		sub	sp, sp, #8
 21948              		.cfi_def_cfa_offset 16
 21949 0004 00AF     		add	r7, sp, #0
 21950              		.cfi_def_cfa_register 7
 21951 0006 7860     		str	r0, [r7, #4]
 21952 0008 0B46     		mov	r3, r1
 21953 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 21954 000c 1346     		mov	r3, r2
 21955 000e 7B70     		strb	r3, [r7, #1]
2912:..\src/command_processing.c ****     static uint16 CYDATA i;    // iterator
2913:..\src/command_processing.c **** 
2914:..\src/command_processing.c ****     // frame - start
2915:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21956              		.loc 1 2915 0
 21957 0010 3A20     		movs	r0, #58
 21958 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2916:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21959              		.loc 1 2916 0
 21960 0016 3A20     		movs	r0, #58
 21961 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2917:..\src/command_processing.c ****     // frame - ID
2918:..\src/command_processing.c ****     UART_RS485_PutChar(id);
 21962              		.loc 1 2918 0
 21963 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 21964 001e 1846     		mov	r0, r3
 21965 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2919:..\src/command_processing.c ****     // frame - length
2920:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 21966              		.loc 1 2920 0
 21967 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 21968 0026 DBB2     		uxtb	r3, r3
 21969 0028 1846     		mov	r0, r3
 21970 002a FFF7FEFF 		bl	UART_RS485_PutChar
2921:..\src/command_processing.c ****     // frame - packet data
2922:..\src/command_processing.c ****     for(i = 0; i < packet_lenght; ++i) {
 21971              		.loc 1 2922 0
 21972 002e 1B4B     		ldr	r3, .L841
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 481


 21973 0030 0022     		movs	r2, #0
 21974 0032 1A80     		strh	r2, [r3]	@ movhi
 21975 0034 0EE0     		b	.L837
 21976              	.L838:
2923:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 21977              		.loc 1 2923 0 discriminator 3
 21978 0036 194B     		ldr	r3, .L841
 21979 0038 1B88     		ldrh	r3, [r3]
 21980 003a 1A46     		mov	r2, r3
 21981 003c 7B68     		ldr	r3, [r7, #4]
 21982 003e 1344     		add	r3, r3, r2
 21983 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21984 0042 1846     		mov	r0, r3
 21985 0044 FFF7FEFF 		bl	UART_RS485_PutChar
2922:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 21986              		.loc 1 2922 0 discriminator 3
 21987 0048 144B     		ldr	r3, .L841
 21988 004a 1B88     		ldrh	r3, [r3]
 21989 004c 0133     		adds	r3, r3, #1
 21990 004e 9AB2     		uxth	r2, r3
 21991 0050 124B     		ldr	r3, .L841
 21992 0052 1A80     		strh	r2, [r3]	@ movhi
 21993              	.L837:
2922:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 21994              		.loc 1 2922 0 is_stmt 0 discriminator 1
 21995 0054 114B     		ldr	r3, .L841
 21996 0056 1B88     		ldrh	r3, [r3]
 21997 0058 7A88     		ldrh	r2, [r7, #2]
 21998 005a 9A42     		cmp	r2, r3
 21999 005c EBD8     		bhi	.L838
2924:..\src/command_processing.c ****     }
2925:..\src/command_processing.c **** 
2926:..\src/command_processing.c ****     i = 0;
 22000              		.loc 1 2926 0 is_stmt 1
 22001 005e 0F4B     		ldr	r3, .L841
 22002 0060 0022     		movs	r2, #0
 22003 0062 1A80     		strh	r2, [r3]	@ movhi
2927:..\src/command_processing.c **** 
2928:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && i++ <= 1000){}
 22004              		.loc 1 2928 0
 22005 0064 00BF     		nop
 22006              	.L840:
 22007              		.loc 1 2928 0 is_stmt 0 discriminator 2
 22008 0066 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 22009 006a 0346     		mov	r3, r0
 22010 006c 03F00103 		and	r3, r3, #1
 22011 0070 002B     		cmp	r3, #0
 22012 0072 08D1     		bne	.L839
 22013              		.loc 1 2928 0 discriminator 1
 22014 0074 094B     		ldr	r3, .L841
 22015 0076 1B88     		ldrh	r3, [r3]
 22016 0078 5A1C     		adds	r2, r3, #1
 22017 007a 91B2     		uxth	r1, r2
 22018 007c 074A     		ldr	r2, .L841
 22019 007e 1180     		strh	r1, [r2]	@ movhi
 22020 0080 B3F57A7F 		cmp	r3, #1000
 22021 0084 EFD9     		bls	.L840
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 482


 22022              	.L839:
2929:..\src/command_processing.c ****     
2930:..\src/command_processing.c ****     RS485_CTS_Write(1);
 22023              		.loc 1 2930 0 is_stmt 1
 22024 0086 0120     		movs	r0, #1
 22025 0088 FFF7FEFF 		bl	RS485_CTS_Write
2931:..\src/command_processing.c ****     RS485_CTS_Write(0);
 22026              		.loc 1 2931 0
 22027 008c 0020     		movs	r0, #0
 22028 008e FFF7FEFF 		bl	RS485_CTS_Write
2932:..\src/command_processing.c **** }
 22029              		.loc 1 2932 0
 22030 0092 00BF     		nop
 22031 0094 0837     		adds	r7, r7, #8
 22032              		.cfi_def_cfa_offset 8
 22033 0096 BD46     		mov	sp, r7
 22034              		.cfi_def_cfa_register 13
 22035              		@ sp needed
 22036 0098 80BD     		pop	{r7, pc}
 22037              	.L842:
 22038 009a 00BF     		.align	2
 22039              	.L841:
 22040 009c 04000000 		.word	i.11260
 22041              		.cfi_endproc
 22042              	.LFE82:
 22043              		.size	commWriteID, .-commWriteID
 22044              		.section	.text.LCRChecksum,"ax",%progbits
 22045              		.align	2
 22046              		.global	LCRChecksum
 22047              		.thumb
 22048              		.thumb_func
 22049              		.type	LCRChecksum, %function
 22050              	LCRChecksum:
 22051              	.LFB83:
2933:..\src/command_processing.c **** 
2934:..\src/command_processing.c **** //==============================================================================
2935:..\src/command_processing.c **** //                                                             CHECKSUM FUNCTION
2936:..\src/command_processing.c **** //==============================================================================
2937:..\src/command_processing.c **** 
2938:..\src/command_processing.c **** // Performs a XOR byte by byte on the entire vector
2939:..\src/command_processing.c **** 
2940:..\src/command_processing.c **** uint8 LCRChecksum(uint8 *data_array, uint8 data_length) {
 22052              		.loc 1 2940 0
 22053              		.cfi_startproc
 22054              		@ args = 0, pretend = 0, frame = 16
 22055              		@ frame_needed = 1, uses_anonymous_args = 0
 22056              		@ link register save eliminated.
 22057 0000 80B4     		push	{r7}
 22058              		.cfi_def_cfa_offset 4
 22059              		.cfi_offset 7, -4
 22060 0002 85B0     		sub	sp, sp, #20
 22061              		.cfi_def_cfa_offset 24
 22062 0004 00AF     		add	r7, sp, #0
 22063              		.cfi_def_cfa_register 7
 22064 0006 7860     		str	r0, [r7, #4]
 22065 0008 0B46     		mov	r3, r1
 22066 000a FB70     		strb	r3, [r7, #3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 483


2941:..\src/command_processing.c ****     
2942:..\src/command_processing.c ****     uint8 CYDATA i;
2943:..\src/command_processing.c ****     uint8 CYDATA checksum = 0x00;
 22067              		.loc 1 2943 0
 22068 000c 0023     		movs	r3, #0
 22069 000e BB73     		strb	r3, [r7, #14]
2944:..\src/command_processing.c ****     
2945:..\src/command_processing.c ****     for(i = 0; i < data_length; ++i)
 22070              		.loc 1 2945 0
 22071 0010 0023     		movs	r3, #0
 22072 0012 FB73     		strb	r3, [r7, #15]
 22073 0014 09E0     		b	.L844
 22074              	.L845:
2946:..\src/command_processing.c ****        checksum ^= data_array[i];
 22075              		.loc 1 2946 0 discriminator 3
 22076 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22077 0018 7A68     		ldr	r2, [r7, #4]
 22078 001a 1344     		add	r3, r3, r2
 22079 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 22080 001e BB7B     		ldrb	r3, [r7, #14]
 22081 0020 5340     		eors	r3, r3, r2
 22082 0022 BB73     		strb	r3, [r7, #14]
2945:..\src/command_processing.c ****        checksum ^= data_array[i];
 22083              		.loc 1 2945 0 discriminator 3
 22084 0024 FB7B     		ldrb	r3, [r7, #15]
 22085 0026 0133     		adds	r3, r3, #1
 22086 0028 FB73     		strb	r3, [r7, #15]
 22087              	.L844:
2945:..\src/command_processing.c ****        checksum ^= data_array[i];
 22088              		.loc 1 2945 0 is_stmt 0 discriminator 1
 22089 002a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 22090 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 22091 002e 9A42     		cmp	r2, r3
 22092 0030 F1D3     		bcc	.L845
2947:..\src/command_processing.c ****   
2948:..\src/command_processing.c ****     return checksum;
 22093              		.loc 1 2948 0 is_stmt 1
 22094 0032 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
2949:..\src/command_processing.c **** }
 22095              		.loc 1 2949 0
 22096 0034 1846     		mov	r0, r3
 22097 0036 1437     		adds	r7, r7, #20
 22098              		.cfi_def_cfa_offset 4
 22099 0038 BD46     		mov	sp, r7
 22100              		.cfi_def_cfa_register 13
 22101              		@ sp needed
 22102 003a 80BC     		pop	{r7}
 22103              		.cfi_restore 7
 22104              		.cfi_def_cfa_offset 0
 22105 003c 7047     		bx	lr
 22106              		.cfi_endproc
 22107              	.LFE83:
 22108              		.size	LCRChecksum, .-LCRChecksum
 22109 003e 00BF     		.section	.text.sendAcknowledgment,"ax",%progbits
 22110              		.align	2
 22111              		.global	sendAcknowledgment
 22112              		.thumb
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 484


 22113              		.thumb_func
 22114              		.type	sendAcknowledgment, %function
 22115              	sendAcknowledgment:
 22116              	.LFB84:
2950:..\src/command_processing.c **** 
2951:..\src/command_processing.c **** 
2952:..\src/command_processing.c **** //==============================================================================
2953:..\src/command_processing.c **** //                                                       ACKNOWLEDGMENT FUNCTION
2954:..\src/command_processing.c **** //==============================================================================
2955:..\src/command_processing.c **** 
2956:..\src/command_processing.c **** void sendAcknowledgment(uint8 value) {
 22117              		.loc 1 2956 0
 22118              		.cfi_startproc
 22119              		@ args = 0, pretend = 0, frame = 16
 22120              		@ frame_needed = 1, uses_anonymous_args = 0
 22121 0000 80B5     		push	{r7, lr}
 22122              		.cfi_def_cfa_offset 8
 22123              		.cfi_offset 7, -8
 22124              		.cfi_offset 14, -4
 22125 0002 84B0     		sub	sp, sp, #16
 22126              		.cfi_def_cfa_offset 24
 22127 0004 00AF     		add	r7, sp, #0
 22128              		.cfi_def_cfa_register 7
 22129 0006 0346     		mov	r3, r0
 22130 0008 FB71     		strb	r3, [r7, #7]
2957:..\src/command_processing.c ****     int packet_lenght = 2;
 22131              		.loc 1 2957 0
 22132 000a 0223     		movs	r3, #2
 22133 000c FB60     		str	r3, [r7, #12]
2958:..\src/command_processing.c ****     uint8 packet_data[2];
2959:..\src/command_processing.c **** 
2960:..\src/command_processing.c ****     packet_data[0] = value;
 22134              		.loc 1 2960 0
 22135 000e FB79     		ldrb	r3, [r7, #7]
 22136 0010 3B72     		strb	r3, [r7, #8]
2961:..\src/command_processing.c ****     packet_data[1] = value;
 22137              		.loc 1 2961 0
 22138 0012 FB79     		ldrb	r3, [r7, #7]
 22139 0014 7B72     		strb	r3, [r7, #9]
2962:..\src/command_processing.c **** 
2963:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 22140              		.loc 1 2963 0
 22141 0016 FB68     		ldr	r3, [r7, #12]
 22142 0018 9AB2     		uxth	r2, r3
 22143 001a 07F10803 		add	r3, r7, #8
 22144 001e 1146     		mov	r1, r2
 22145 0020 1846     		mov	r0, r3
 22146 0022 FFF7FEFF 		bl	commWrite
2964:..\src/command_processing.c **** }
 22147              		.loc 1 2964 0
 22148 0026 00BF     		nop
 22149 0028 1037     		adds	r7, r7, #16
 22150              		.cfi_def_cfa_offset 8
 22151 002a BD46     		mov	sp, r7
 22152              		.cfi_def_cfa_register 13
 22153              		@ sp needed
 22154 002c 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 485


 22155              		.cfi_endproc
 22156              	.LFE84:
 22157              		.size	sendAcknowledgment, .-sendAcknowledgment
 22158 002e 00BF     		.section	.text.memStore,"ax",%progbits
 22159              		.align	2
 22160              		.global	memStore
 22161              		.thumb
 22162              		.thumb_func
 22163              		.type	memStore, %function
 22164              	memStore:
 22165              	.LFB85:
2965:..\src/command_processing.c **** 
2966:..\src/command_processing.c **** //==============================================================================
2967:..\src/command_processing.c **** //                                                                  STORE MEMORY
2968:..\src/command_processing.c **** //==============================================================================
2969:..\src/command_processing.c **** 
2970:..\src/command_processing.c **** 
2971:..\src/command_processing.c **** uint8 memStore(int displacement)
2972:..\src/command_processing.c **** {
 22166              		.loc 1 2972 0
 22167              		.cfi_startproc
 22168              		@ args = 0, pretend = 0, frame = 24
 22169              		@ frame_needed = 1, uses_anonymous_args = 0
 22170 0000 80B5     		push	{r7, lr}
 22171              		.cfi_def_cfa_offset 8
 22172              		.cfi_offset 7, -8
 22173              		.cfi_offset 14, -4
 22174 0002 86B0     		sub	sp, sp, #24
 22175              		.cfi_def_cfa_offset 32
 22176 0004 00AF     		add	r7, sp, #0
 22177              		.cfi_def_cfa_register 7
 22178 0006 7860     		str	r0, [r7, #4]
2973:..\src/command_processing.c ****     int i;  // iterator
2974:..\src/command_processing.c ****     uint8 writeStatus;
2975:..\src/command_processing.c ****     int pages;
2976:..\src/command_processing.c ****     uint8 ret_val = 1;
 22179              		.loc 1 2976 0
 22180 0008 0123     		movs	r3, #1
 22181 000a FB74     		strb	r3, [r7, #19]
2977:..\src/command_processing.c **** 
2978:..\src/command_processing.c ****     // Disable Interrupt
2979:..\src/command_processing.c ****     ISR_RS485_RX_Disable();
 22182              		.loc 1 2979 0
 22183 000c FFF7FEFF 		bl	ISR_RS485_RX_Disable
2980:..\src/command_processing.c **** 
2981:..\src/command_processing.c ****     // Stop motor
2982:..\src/command_processing.c ****     PWM_MOTORS_WriteCompare1(0);
 22184              		.loc 1 2982 0
 22185 0010 0020     		movs	r0, #0
 22186 0012 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
2983:..\src/command_processing.c **** 
2984:..\src/command_processing.c ****     // Update temperature information for better writing performance
2985:..\src/command_processing.c ****     EEPROM_UpdateTemperature();
 22187              		.loc 1 2985 0
 22188 0016 FFF7FEFF 		bl	EEPROM_UpdateTemperature
2986:..\src/command_processing.c **** 
2987:..\src/command_processing.c ****     memcpy( &c_mem, &g_mem, sizeof(g_mem) );
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 486


 22189              		.loc 1 2987 0
 22190 001a 1D4A     		ldr	r2, .L854
 22191 001c 1D4B     		ldr	r3, .L854+4
 22192 001e 1046     		mov	r0, r2
 22193 0020 1946     		mov	r1, r3
 22194 0022 4FF43D73 		mov	r3, #756
 22195 0026 1A46     		mov	r2, r3
 22196 0028 FFF7FEFF 		bl	memcpy
2988:..\src/command_processing.c **** 
2989:..\src/command_processing.c ****     pages = sizeof(g_mem) / 16 + (sizeof(g_mem) % 16 > 0);
 22197              		.loc 1 2989 0
 22198 002c 3023     		movs	r3, #48
 22199 002e FB60     		str	r3, [r7, #12]
2990:..\src/command_processing.c **** 
2991:..\src/command_processing.c ****     for(i = 0; i < pages; ++i) {
 22200              		.loc 1 2991 0
 22201 0030 0023     		movs	r3, #0
 22202 0032 7B61     		str	r3, [r7, #20]
 22203 0034 18E0     		b	.L849
 22204              	.L852:
2992:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 22205              		.loc 1 2992 0
 22206 0036 7B69     		ldr	r3, [r7, #20]
 22207 0038 1B01     		lsls	r3, r3, #4
 22208 003a 1A46     		mov	r2, r3
 22209 003c 154B     		ldr	r3, .L854+4
 22210 003e D018     		adds	r0, r2, r3
 22211 0040 7B69     		ldr	r3, [r7, #20]
 22212 0042 DAB2     		uxtb	r2, r3
 22213 0044 7B68     		ldr	r3, [r7, #4]
 22214 0046 DBB2     		uxtb	r3, r3
 22215 0048 1344     		add	r3, r3, r2
 22216 004a DBB2     		uxtb	r3, r3
 22217 004c 1946     		mov	r1, r3
 22218 004e FFF7FEFF 		bl	EEPROM_Write
 22219 0052 0346     		mov	r3, r0
 22220 0054 FB72     		strb	r3, [r7, #11]
2993:..\src/command_processing.c ****         if(writeStatus != CYRET_SUCCESS) {
 22221              		.loc 1 2993 0
 22222 0056 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 22223 0058 002B     		cmp	r3, #0
 22224 005a 02D0     		beq	.L850
2994:..\src/command_processing.c ****             ret_val = 0;
 22225              		.loc 1 2994 0
 22226 005c 0023     		movs	r3, #0
 22227 005e FB74     		strb	r3, [r7, #19]
2995:..\src/command_processing.c ****             break;
 22228              		.loc 1 2995 0
 22229 0060 06E0     		b	.L851
 22230              	.L850:
2991:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 22231              		.loc 1 2991 0 discriminator 2
 22232 0062 7B69     		ldr	r3, [r7, #20]
 22233 0064 0133     		adds	r3, r3, #1
 22234 0066 7B61     		str	r3, [r7, #20]
 22235              	.L849:
2991:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 487


 22236              		.loc 1 2991 0 is_stmt 0 discriminator 1
 22237 0068 7A69     		ldr	r2, [r7, #20]
 22238 006a FB68     		ldr	r3, [r7, #12]
 22239 006c 9A42     		cmp	r2, r3
 22240 006e E2DB     		blt	.L852
 22241              	.L851:
2996:..\src/command_processing.c ****         }
2997:..\src/command_processing.c ****     }
2998:..\src/command_processing.c **** 
2999:..\src/command_processing.c ****     memcpy( &g_mem, &c_mem, sizeof(g_mem) );
 22242              		.loc 1 2999 0 is_stmt 1
 22243 0070 084A     		ldr	r2, .L854+4
 22244 0072 074B     		ldr	r3, .L854
 22245 0074 1046     		mov	r0, r2
 22246 0076 1946     		mov	r1, r3
 22247 0078 4FF43D73 		mov	r3, #756
 22248 007c 1A46     		mov	r2, r3
 22249 007e FFF7FEFF 		bl	memcpy
3000:..\src/command_processing.c **** 
3001:..\src/command_processing.c ****     // Re-Enable Interrupt
3002:..\src/command_processing.c ****     ISR_RS485_RX_Enable();
 22250              		.loc 1 3002 0
 22251 0082 FFF7FEFF 		bl	ISR_RS485_RX_Enable
3003:..\src/command_processing.c **** 
3004:..\src/command_processing.c ****     return ret_val;
 22252              		.loc 1 3004 0
 22253 0086 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
3005:..\src/command_processing.c **** }
 22254              		.loc 1 3005 0
 22255 0088 1846     		mov	r0, r3
 22256 008a 1837     		adds	r7, r7, #24
 22257              		.cfi_def_cfa_offset 8
 22258 008c BD46     		mov	sp, r7
 22259              		.cfi_def_cfa_register 13
 22260              		@ sp needed
 22261 008e 80BD     		pop	{r7, pc}
 22262              	.L855:
 22263              		.align	2
 22264              	.L854:
 22265 0090 00000000 		.word	c_mem
 22266 0094 00000000 		.word	g_mem
 22267              		.cfi_endproc
 22268              	.LFE85:
 22269              		.size	memStore, .-memStore
 22270              		.section	.text.memRecall,"ax",%progbits
 22271              		.align	2
 22272              		.global	memRecall
 22273              		.thumb
 22274              		.thumb_func
 22275              		.type	memRecall, %function
 22276              	memRecall:
 22277              	.LFB86:
3006:..\src/command_processing.c **** 
3007:..\src/command_processing.c **** 
3008:..\src/command_processing.c **** //==============================================================================
3009:..\src/command_processing.c **** //                                                                 RECALL MEMORY
3010:..\src/command_processing.c **** //==============================================================================
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 488


3011:..\src/command_processing.c **** 
3012:..\src/command_processing.c **** 
3013:..\src/command_processing.c **** void memRecall(void)
3014:..\src/command_processing.c **** {
 22278              		.loc 1 3014 0
 22279              		.cfi_startproc
 22280              		@ args = 0, pretend = 0, frame = 8
 22281              		@ frame_needed = 1, uses_anonymous_args = 0
 22282 0000 80B5     		push	{r7, lr}
 22283              		.cfi_def_cfa_offset 8
 22284              		.cfi_offset 7, -8
 22285              		.cfi_offset 14, -4
 22286 0002 82B0     		sub	sp, sp, #8
 22287              		.cfi_def_cfa_offset 16
 22288 0004 00AF     		add	r7, sp, #0
 22289              		.cfi_def_cfa_register 7
3015:..\src/command_processing.c ****     uint16 i;
3016:..\src/command_processing.c **** 
3017:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 22290              		.loc 1 3017 0
 22291 0006 0023     		movs	r3, #0
 22292 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 22293 000a 0CE0     		b	.L857
 22294              	.L858:
3018:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 22295              		.loc 1 3018 0 discriminator 3
 22296 000c FB88     		ldrh	r3, [r7, #6]
 22297 000e 184A     		ldr	r2, .L862
 22298 0010 1344     		add	r3, r3, r2
 22299 0012 184A     		ldr	r2, .L862+4
 22300 0014 1168     		ldr	r1, [r2]
 22301 0016 FA88     		ldrh	r2, [r7, #6]
 22302 0018 0A44     		add	r2, r2, r1
 22303 001a 1278     		ldrb	r2, [r2]
 22304 001c D2B2     		uxtb	r2, r2
 22305 001e 1A70     		strb	r2, [r3]
3017:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 22306              		.loc 1 3017 0 discriminator 3
 22307 0020 FB88     		ldrh	r3, [r7, #6]
 22308 0022 0133     		adds	r3, r3, #1
 22309 0024 FB80     		strh	r3, [r7, #6]	@ movhi
 22310              	.L857:
3017:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 22311              		.loc 1 3017 0 is_stmt 0 discriminator 1
 22312 0026 FB88     		ldrh	r3, [r7, #6]
 22313 0028 B3F53D7F 		cmp	r3, #756
 22314 002c EED3     		bcc	.L858
3019:..\src/command_processing.c ****     }
3020:..\src/command_processing.c ****     
3021:..\src/command_processing.c ****     // Recall saved user_emg structure
3022:..\src/command_processing.c ****     memcpy( &(g_mem.emg), &(g_mem.user[g_mem.dev.user_id].user_emg), sizeof(g_mem.emg) );
 22315              		.loc 1 3022 0 is_stmt 1
 22316 002e 104B     		ldr	r3, .L862
 22317 0030 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 22318 0034 5B01     		lsls	r3, r3, #5
 22319 0036 03F51273 		add	r3, r3, #584
 22320 003a 0D4A     		ldr	r2, .L862
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 489


 22321 003c 1344     		add	r3, r3, r2
 22322 003e 1022     		movs	r2, #16
 22323 0040 1946     		mov	r1, r3
 22324 0042 0D48     		ldr	r0, .L862+8
 22325 0044 FFF7FEFF 		bl	memcpy
3023:..\src/command_processing.c **** 
3024:..\src/command_processing.c ****     //check for initialization
3025:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 22326              		.loc 1 3025 0
 22327 0048 094B     		ldr	r3, .L862
 22328 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22329 004c 002B     		cmp	r3, #0
 22330 004e 02D1     		bne	.L859
3026:..\src/command_processing.c ****         memRestore();
 22331              		.loc 1 3026 0
 22332 0050 FFF7FEFF 		bl	memRestore
3027:..\src/command_processing.c ****     } else {
3028:..\src/command_processing.c ****         memcpy( &c_mem, &g_mem, sizeof(g_mem) );
3029:..\src/command_processing.c ****     }        
3030:..\src/command_processing.c **** }
 22333              		.loc 1 3030 0
 22334 0054 08E0     		b	.L861
 22335              	.L859:
3028:..\src/command_processing.c ****     }        
 22336              		.loc 1 3028 0
 22337 0056 094A     		ldr	r2, .L862+12
 22338 0058 054B     		ldr	r3, .L862
 22339 005a 1046     		mov	r0, r2
 22340 005c 1946     		mov	r1, r3
 22341 005e 4FF43D73 		mov	r3, #756
 22342 0062 1A46     		mov	r2, r3
 22343 0064 FFF7FEFF 		bl	memcpy
 22344              	.L861:
 22345              		.loc 1 3030 0
 22346 0068 00BF     		nop
 22347 006a 0837     		adds	r7, r7, #8
 22348              		.cfi_def_cfa_offset 8
 22349 006c BD46     		mov	sp, r7
 22350              		.cfi_def_cfa_register 13
 22351              		@ sp needed
 22352 006e 80BD     		pop	{r7, pc}
 22353              	.L863:
 22354              		.align	2
 22355              	.L862:
 22356 0070 00000000 		.word	g_mem
 22357 0074 00000000 		.word	EEPROM_ADDR
 22358 0078 F0010000 		.word	g_mem+496
 22359 007c 00000000 		.word	c_mem
 22360              		.cfi_endproc
 22361              	.LFE86:
 22362              		.size	memRecall, .-memRecall
 22363              		.section	.text.memRestore,"ax",%progbits
 22364              		.align	2
 22365              		.global	memRestore
 22366              		.thumb
 22367              		.thumb_func
 22368              		.type	memRestore, %function
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 490


 22369              	memRestore:
 22370              	.LFB87:
3031:..\src/command_processing.c **** 
3032:..\src/command_processing.c **** 
3033:..\src/command_processing.c **** //==============================================================================
3034:..\src/command_processing.c **** //                                                                RESTORE MEMORY
3035:..\src/command_processing.c **** //==============================================================================
3036:..\src/command_processing.c **** 
3037:..\src/command_processing.c **** 
3038:..\src/command_processing.c **** uint8 memRestore(void) {
 22371              		.loc 1 3038 0
 22372              		.cfi_startproc
 22373              		@ args = 0, pretend = 0, frame = 8
 22374              		@ frame_needed = 1, uses_anonymous_args = 0
 22375 0000 80B5     		push	{r7, lr}
 22376              		.cfi_def_cfa_offset 8
 22377              		.cfi_offset 7, -8
 22378              		.cfi_offset 14, -4
 22379 0002 82B0     		sub	sp, sp, #8
 22380              		.cfi_def_cfa_offset 16
 22381 0004 00AF     		add	r7, sp, #0
 22382              		.cfi_def_cfa_register 7
3039:..\src/command_processing.c ****     uint16 i;
3040:..\src/command_processing.c **** 
3041:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 22383              		.loc 1 3041 0
 22384 0006 0023     		movs	r3, #0
 22385 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 22386 000a 0EE0     		b	.L865
 22387              	.L866:
3042:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 22388              		.loc 1 3042 0 discriminator 3
 22389 000c FB88     		ldrh	r3, [r7, #6]
 22390 000e 114A     		ldr	r2, .L869
 22391 0010 1344     		add	r3, r3, r2
 22392 0012 114A     		ldr	r2, .L869+4
 22393 0014 1168     		ldr	r1, [r2]
 22394 0016 FA88     		ldrh	r2, [r7, #6]
 22395 0018 02F54872 		add	r2, r2, #800
 22396 001c 0A44     		add	r2, r2, r1
 22397 001e 1278     		ldrb	r2, [r2]
 22398 0020 D2B2     		uxtb	r2, r2
 22399 0022 1A70     		strb	r2, [r3]
3041:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 22400              		.loc 1 3041 0 discriminator 3
 22401 0024 FB88     		ldrh	r3, [r7, #6]
 22402 0026 0133     		adds	r3, r3, #1
 22403 0028 FB80     		strh	r3, [r7, #6]	@ movhi
 22404              	.L865:
3041:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 22405              		.loc 1 3041 0 is_stmt 0 discriminator 1
 22406 002a FB88     		ldrh	r3, [r7, #6]
 22407 002c B3F53D7F 		cmp	r3, #756
 22408 0030 ECD3     		bcc	.L866
3043:..\src/command_processing.c ****     }
3044:..\src/command_processing.c **** 
3045:..\src/command_processing.c ****     //check for initialization
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 491


3046:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 22409              		.loc 1 3046 0 is_stmt 1
 22410 0032 084B     		ldr	r3, .L869
 22411 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22412 0036 002B     		cmp	r3, #0
 22413 0038 03D1     		bne	.L867
3047:..\src/command_processing.c ****         return memInit();
 22414              		.loc 1 3047 0
 22415 003a FFF7FEFF 		bl	memInit
 22416 003e 0346     		mov	r3, r0
 22417 0040 03E0     		b	.L868
 22418              	.L867:
3048:..\src/command_processing.c ****     } else {
3049:..\src/command_processing.c ****         return memStore(0);
 22419              		.loc 1 3049 0
 22420 0042 0020     		movs	r0, #0
 22421 0044 FFF7FEFF 		bl	memStore
 22422 0048 0346     		mov	r3, r0
 22423              	.L868:
3050:..\src/command_processing.c ****     }  
3051:..\src/command_processing.c **** }
 22424              		.loc 1 3051 0
 22425 004a 1846     		mov	r0, r3
 22426 004c 0837     		adds	r7, r7, #8
 22427              		.cfi_def_cfa_offset 8
 22428 004e BD46     		mov	sp, r7
 22429              		.cfi_def_cfa_register 13
 22430              		@ sp needed
 22431 0050 80BD     		pop	{r7, pc}
 22432              	.L870:
 22433 0052 00BF     		.align	2
 22434              	.L869:
 22435 0054 00000000 		.word	g_mem
 22436 0058 00000000 		.word	EEPROM_ADDR
 22437              		.cfi_endproc
 22438              	.LFE87:
 22439              		.size	memRestore, .-memRestore
 22440              		.section	.rodata
 22441 1fdf 00       		.align	2
 22442              	.LC308:
 22443 1fe0 47454E30 		.ascii	"GEN001\000"
 22443      303100
 22444              		.section	.text.memInit,"ax",%progbits
 22445              		.align	2
 22446              		.global	memInit
 22447              		.thumb
 22448              		.thumb_func
 22449              		.type	memInit, %function
 22450              	memInit:
 22451              	.LFB88:
3052:..\src/command_processing.c **** 
3053:..\src/command_processing.c **** //==============================================================================
3054:..\src/command_processing.c **** //                                                                   MEMORY INIT
3055:..\src/command_processing.c **** //==============================================================================
3056:..\src/command_processing.c **** 
3057:..\src/command_processing.c **** uint8 memInit(void)
3058:..\src/command_processing.c **** {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 492


 22452              		.loc 1 3058 0
 22453              		.cfi_startproc
 22454              		@ args = 0, pretend = 0, frame = 8
 22455              		@ frame_needed = 1, uses_anonymous_args = 0
 22456 0000 80B5     		push	{r7, lr}
 22457              		.cfi_def_cfa_offset 8
 22458              		.cfi_offset 7, -8
 22459              		.cfi_offset 14, -4
 22460 0002 82B0     		sub	sp, sp, #8
 22461              		.cfi_def_cfa_offset 16
 22462 0004 00AF     		add	r7, sp, #0
 22463              		.cfi_def_cfa_register 7
3059:..\src/command_processing.c ****     uint8 i, j;
3060:..\src/command_processing.c **** 
3061:..\src/command_processing.c ****     //initialize memory settings
3062:..\src/command_processing.c ****     for (i=0; i<15; i++){
 22464              		.loc 1 3062 0
 22465 0006 0023     		movs	r3, #0
 22466 0008 FB71     		strb	r3, [r7, #7]
 22467 000a 07E0     		b	.L872
 22468              	.L873:
3063:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 22469              		.loc 1 3063 0 discriminator 3
 22470 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22471 000e B44A     		ldr	r2, .L898
 22472 0010 1344     		add	r3, r3, r2
 22473 0012 0022     		movs	r2, #0
 22474 0014 5A70     		strb	r2, [r3, #1]
3062:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 22475              		.loc 1 3062 0 discriminator 3
 22476 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22477 0018 0133     		adds	r3, r3, #1
 22478 001a FB71     		strb	r3, [r7, #7]
 22479              	.L872:
3062:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 22480              		.loc 1 3062 0 is_stmt 0 discriminator 1
 22481 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22482 001e 0E2B     		cmp	r3, #14
 22483 0020 F4D9     		bls	.L873
3064:..\src/command_processing.c ****     }
3065:..\src/command_processing.c ****         
3066:..\src/command_processing.c ****     // DEV STRUCT
3067:..\src/command_processing.c ****     g_mem.dev.id                = 1;
 22484              		.loc 1 3067 0 is_stmt 1
 22485 0022 AF4B     		ldr	r3, .L898
 22486 0024 0122     		movs	r2, #1
 22487 0026 83F8A020 		strb	r2, [r3, #160]
3068:..\src/command_processing.c ****     g_mem.dev.right_left        = RIGHT_HAND;
 22488              		.loc 1 3068 0
 22489 002a AD4B     		ldr	r3, .L898
 22490 002c 0022     		movs	r2, #0
 22491 002e 83F8A720 		strb	r2, [r3, #167]
3069:..\src/command_processing.c ****     g_mem.dev.dev_type          = GENERIC_2_MOTORS;
 22492              		.loc 1 3069 0
 22493 0032 AB4B     		ldr	r3, .L898
 22494 0034 0122     		movs	r2, #1
 22495 0036 83F8AC20 		strb	r2, [r3, #172]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 493


3070:..\src/command_processing.c ****     g_mem.dev.reset_counters    = FALSE;   
 22496              		.loc 1 3070 0
 22497 003a A94B     		ldr	r3, .L898
 22498 003c 0022     		movs	r2, #0
 22499 003e 83F8A820 		strb	r2, [r3, #168]
3071:..\src/command_processing.c ****     reset_counters();                       //Initialize counters
 22500              		.loc 1 3071 0
 22501 0042 FFF7FEFF 		bl	reset_counters
3072:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 22502              		.loc 1 3072 0
 22503 0046 0023     		movs	r3, #0
 22504 0048 FB71     		strb	r3, [r7, #7]
 22505 004a 08E0     		b	.L874
 22506              	.L875:
3073:..\src/command_processing.c ****         g_mem.unused_bytes1[i] = 0;
 22507              		.loc 1 3073 0 discriminator 3
 22508 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22509 004e A44A     		ldr	r2, .L898
 22510 0050 1344     		add	r3, r3, r2
 22511 0052 0022     		movs	r2, #0
 22512 0054 83F86020 		strb	r2, [r3, #96]
3072:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 22513              		.loc 1 3072 0 discriminator 3
 22514 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22515 005a 0133     		adds	r3, r3, #1
 22516 005c FB71     		strb	r3, [r7, #7]
 22517              	.L874:
3072:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 22518              		.loc 1 3072 0 is_stmt 0 discriminator 1
 22519 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22520 0060 3F2B     		cmp	r3, #63
 22521 0062 F3D9     		bls	.L875
3074:..\src/command_processing.c ****     }
3075:..\src/command_processing.c ****     g_mem.dev.use_2nd_motor_flag = FALSE;
 22522              		.loc 1 3075 0 is_stmt 1
 22523 0064 9E4B     		ldr	r3, .L898
 22524 0066 0022     		movs	r2, #0
 22525 0068 83F8A920 		strb	r2, [r3, #169]
3076:..\src/command_processing.c **** 
3077:..\src/command_processing.c ****     // MOTOR STRUCT
3078:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 22526              		.loc 1 3078 0
 22527 006c 0023     		movs	r3, #0
 22528 006e FB71     		strb	r3, [r7, #7]
 22529 0070 15E1     		b	.L876
 22530              	.L879:
3079:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 22531              		.loc 1 3079 0
 22532 0072 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22533 0074 9A49     		ldr	r1, .L898
 22534 0076 1346     		mov	r3, r2
 22535 0078 DB00     		lsls	r3, r3, #3
 22536 007a 9B1A     		subs	r3, r3, r2
 22537 007c 1B01     		lsls	r3, r3, #4
 22538 007e 0B44     		add	r3, r3, r1
 22539 0080 B033     		adds	r3, r3, #176
 22540 0082 40F23942 		movw	r2, #1081
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 494


 22541 0086 1A60     		str	r2, [r3]
3080:..\src/command_processing.c ****         g_mem.motor[i].k_i           =     0 * 65536;
 22542              		.loc 1 3080 0
 22543 0088 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22544 008a 9549     		ldr	r1, .L898
 22545 008c 1346     		mov	r3, r2
 22546 008e DB00     		lsls	r3, r3, #3
 22547 0090 9B1A     		subs	r3, r3, r2
 22548 0092 1B01     		lsls	r3, r3, #4
 22549 0094 0B44     		add	r3, r3, r1
 22550 0096 B433     		adds	r3, r3, #180
 22551 0098 0022     		movs	r2, #0
 22552 009a 1A60     		str	r2, [r3]
3081:..\src/command_processing.c ****         g_mem.motor[i].k_d           = 0.007 * 65536;  // changed in order to avoid metallic clatte
 22553              		.loc 1 3081 0
 22554 009c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22555 009e 9049     		ldr	r1, .L898
 22556 00a0 1346     		mov	r3, r2
 22557 00a2 DB00     		lsls	r3, r3, #3
 22558 00a4 9B1A     		subs	r3, r3, r2
 22559 00a6 1B01     		lsls	r3, r3, #4
 22560 00a8 0B44     		add	r3, r3, r1
 22561 00aa B833     		adds	r3, r3, #184
 22562 00ac 4FF4E572 		mov	r2, #458
 22563 00b0 1A60     		str	r2, [r3]
3082:..\src/command_processing.c ****         g_mem.motor[i].k_p_c         =     1 * 65536;
 22564              		.loc 1 3082 0
 22565 00b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22566 00b4 8A49     		ldr	r1, .L898
 22567 00b6 1346     		mov	r3, r2
 22568 00b8 DB00     		lsls	r3, r3, #3
 22569 00ba 9B1A     		subs	r3, r3, r2
 22570 00bc 1B01     		lsls	r3, r3, #4
 22571 00be 0B44     		add	r3, r3, r1
 22572 00c0 BC33     		adds	r3, r3, #188
 22573 00c2 4FF48032 		mov	r2, #65536
 22574 00c6 1A60     		str	r2, [r3]
3083:..\src/command_processing.c ****         g_mem.motor[i].k_i_c         = 0.001 * 65536;
 22575              		.loc 1 3083 0
 22576 00c8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22577 00ca 8549     		ldr	r1, .L898
 22578 00cc 1346     		mov	r3, r2
 22579 00ce DB00     		lsls	r3, r3, #3
 22580 00d0 9B1A     		subs	r3, r3, r2
 22581 00d2 1B01     		lsls	r3, r3, #4
 22582 00d4 0B44     		add	r3, r3, r1
 22583 00d6 C033     		adds	r3, r3, #192
 22584 00d8 4122     		movs	r2, #65
 22585 00da 1A60     		str	r2, [r3]
3084:..\src/command_processing.c ****         g_mem.motor[i].k_d_c         =     0 * 65536;
 22586              		.loc 1 3084 0
 22587 00dc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22588 00de 8049     		ldr	r1, .L898
 22589 00e0 1346     		mov	r3, r2
 22590 00e2 DB00     		lsls	r3, r3, #3
 22591 00e4 9B1A     		subs	r3, r3, r2
 22592 00e6 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 495


 22593 00e8 0B44     		add	r3, r3, r1
 22594 00ea C433     		adds	r3, r3, #196
 22595 00ec 0022     		movs	r2, #0
 22596 00ee 1A60     		str	r2, [r3]
3085:..\src/command_processing.c **** 
3086:..\src/command_processing.c ****         g_mem.motor[i].k_p_dl        =   0.1 * 65536;
 22597              		.loc 1 3086 0
 22598 00f0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22599 00f2 7B49     		ldr	r1, .L898
 22600 00f4 1346     		mov	r3, r2
 22601 00f6 DB00     		lsls	r3, r3, #3
 22602 00f8 9B1A     		subs	r3, r3, r2
 22603 00fa 1B01     		lsls	r3, r3, #4
 22604 00fc 0B44     		add	r3, r3, r1
 22605 00fe C833     		adds	r3, r3, #200
 22606 0100 41F69912 		movw	r2, #6553
 22607 0104 1A60     		str	r2, [r3]
3087:..\src/command_processing.c ****         g_mem.motor[i].k_i_dl        =     0 * 65536;
 22608              		.loc 1 3087 0
 22609 0106 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22610 0108 7549     		ldr	r1, .L898
 22611 010a 1346     		mov	r3, r2
 22612 010c DB00     		lsls	r3, r3, #3
 22613 010e 9B1A     		subs	r3, r3, r2
 22614 0110 1B01     		lsls	r3, r3, #4
 22615 0112 0B44     		add	r3, r3, r1
 22616 0114 CC33     		adds	r3, r3, #204
 22617 0116 0022     		movs	r2, #0
 22618 0118 1A60     		str	r2, [r3]
3088:..\src/command_processing.c ****         g_mem.motor[i].k_d_dl        =     0 * 65536;
 22619              		.loc 1 3088 0
 22620 011a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22621 011c 7049     		ldr	r1, .L898
 22622 011e 1346     		mov	r3, r2
 22623 0120 DB00     		lsls	r3, r3, #3
 22624 0122 9B1A     		subs	r3, r3, r2
 22625 0124 1B01     		lsls	r3, r3, #4
 22626 0126 0B44     		add	r3, r3, r1
 22627 0128 D033     		adds	r3, r3, #208
 22628 012a 0022     		movs	r2, #0
 22629 012c 1A60     		str	r2, [r3]
3089:..\src/command_processing.c ****         g_mem.motor[i].k_p_c_dl      =   0.3 * 65536;
 22630              		.loc 1 3089 0
 22631 012e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22632 0130 6B49     		ldr	r1, .L898
 22633 0132 1346     		mov	r3, r2
 22634 0134 DB00     		lsls	r3, r3, #3
 22635 0136 9B1A     		subs	r3, r3, r2
 22636 0138 1B01     		lsls	r3, r3, #4
 22637 013a 0B44     		add	r3, r3, r1
 22638 013c D433     		adds	r3, r3, #212
 22639 013e 44F6CC42 		movw	r2, #19660
 22640 0142 1A60     		str	r2, [r3]
3090:..\src/command_processing.c ****         g_mem.motor[i].k_i_c_dl      =0.0002 * 65536;
 22641              		.loc 1 3090 0
 22642 0144 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22643 0146 6649     		ldr	r1, .L898
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 496


 22644 0148 1346     		mov	r3, r2
 22645 014a DB00     		lsls	r3, r3, #3
 22646 014c 9B1A     		subs	r3, r3, r2
 22647 014e 1B01     		lsls	r3, r3, #4
 22648 0150 0B44     		add	r3, r3, r1
 22649 0152 D833     		adds	r3, r3, #216
 22650 0154 0D22     		movs	r2, #13
 22651 0156 1A60     		str	r2, [r3]
3091:..\src/command_processing.c ****         g_mem.motor[i].k_d_c_dl      =     0 * 65536;
 22652              		.loc 1 3091 0
 22653 0158 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22654 015a 6149     		ldr	r1, .L898
 22655 015c 1346     		mov	r3, r2
 22656 015e DB00     		lsls	r3, r3, #3
 22657 0160 9B1A     		subs	r3, r3, r2
 22658 0162 1B01     		lsls	r3, r3, #4
 22659 0164 0B44     		add	r3, r3, r1
 22660 0166 DC33     		adds	r3, r3, #220
 22661 0168 0022     		movs	r2, #0
 22662 016a 1A60     		str	r2, [r3]
3092:..\src/command_processing.c **** 
3093:..\src/command_processing.c ****         g_mem.motor[i].activ         = 1;
 22663              		.loc 1 3093 0
 22664 016c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22665 016e 5C49     		ldr	r1, .L898
 22666 0170 1346     		mov	r3, r2
 22667 0172 DB00     		lsls	r3, r3, #3
 22668 0174 9B1A     		subs	r3, r3, r2
 22669 0176 1B01     		lsls	r3, r3, #4
 22670 0178 0B44     		add	r3, r3, r1
 22671 017a E033     		adds	r3, r3, #224
 22672 017c 0122     		movs	r2, #1
 22673 017e 1A70     		strb	r2, [r3]
3094:..\src/command_processing.c ****         g_mem.motor[i].activate_pwm_rescaling = MAXON_24V;      //rescaling active for 12V motor
 22674              		.loc 1 3094 0
 22675 0180 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22676 0182 5749     		ldr	r1, .L898
 22677 0184 1346     		mov	r3, r2
 22678 0186 DB00     		lsls	r3, r3, #3
 22679 0188 9B1A     		subs	r3, r3, r2
 22680 018a 1B01     		lsls	r3, r3, #4
 22681 018c 0B44     		add	r3, r3, r1
 22682 018e E133     		adds	r3, r3, #225
 22683 0190 0022     		movs	r2, #0
 22684 0192 1A70     		strb	r2, [r3]
3095:..\src/command_processing.c ****         g_mem.motor[i].motor_driver_type = DRIVER_MC33887;      //SoftHand standard driver
 22685              		.loc 1 3095 0
 22686 0194 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22687 0196 5249     		ldr	r1, .L898
 22688 0198 1346     		mov	r3, r2
 22689 019a DB00     		lsls	r3, r3, #3
 22690 019c 9B1A     		subs	r3, r3, r2
 22691 019e 1B01     		lsls	r3, r3, #4
 22692 01a0 0B44     		add	r3, r3, r1
 22693 01a2 E233     		adds	r3, r3, #226
 22694 01a4 0022     		movs	r2, #0
 22695 01a6 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 497


3096:..\src/command_processing.c ****         g_mem.motor[i].input_mode    = INPUT_MODE_EXTERNAL;
 22696              		.loc 1 3096 0
 22697 01a8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22698 01aa 4D49     		ldr	r1, .L898
 22699 01ac 1346     		mov	r3, r2
 22700 01ae DB00     		lsls	r3, r3, #3
 22701 01b0 9B1A     		subs	r3, r3, r2
 22702 01b2 1B01     		lsls	r3, r3, #4
 22703 01b4 0B44     		add	r3, r3, r1
 22704 01b6 03F58773 		add	r3, r3, #270
 22705 01ba 0022     		movs	r2, #0
 22706 01bc 1A70     		strb	r2, [r3]
3097:..\src/command_processing.c ****         g_mem.motor[i].control_mode  = CONTROL_ANGLE;
 22707              		.loc 1 3097 0
 22708 01be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22709 01c0 4749     		ldr	r1, .L898
 22710 01c2 1346     		mov	r3, r2
 22711 01c4 DB00     		lsls	r3, r3, #3
 22712 01c6 9B1A     		subs	r3, r3, r2
 22713 01c8 1B01     		lsls	r3, r3, #4
 22714 01ca 0B44     		add	r3, r3, r1
 22715 01cc 03F20F13 		addw	r3, r3, #271
 22716 01d0 0022     		movs	r2, #0
 22717 01d2 1A70     		strb	r2, [r3]
3098:..\src/command_processing.c ****         g_mem.motor[i].max_step_pos = 0;
 22718              		.loc 1 3098 0
 22719 01d4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22720 01d6 4249     		ldr	r1, .L898
 22721 01d8 1346     		mov	r3, r2
 22722 01da DB00     		lsls	r3, r3, #3
 22723 01dc 9B1A     		subs	r3, r3, r2
 22724 01de 1B01     		lsls	r3, r3, #4
 22725 01e0 0B44     		add	r3, r3, r1
 22726 01e2 F033     		adds	r3, r3, #240
 22727 01e4 0022     		movs	r2, #0
 22728 01e6 1A60     		str	r2, [r3]
3099:..\src/command_processing.c ****         g_mem.motor[i].max_step_neg = 0;
 22729              		.loc 1 3099 0
 22730 01e8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22731 01ea 3D49     		ldr	r1, .L898
 22732 01ec 1346     		mov	r3, r2
 22733 01ee DB00     		lsls	r3, r3, #3
 22734 01f0 9B1A     		subs	r3, r3, r2
 22735 01f2 1B01     		lsls	r3, r3, #4
 22736 01f4 0B44     		add	r3, r3, r1
 22737 01f6 EC33     		adds	r3, r3, #236
 22738 01f8 0022     		movs	r2, #0
 22739 01fa 1A60     		str	r2, [r3]
3100:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 22740              		.loc 1 3100 0
 22741 01fc 0023     		movs	r3, #0
 22742 01fe BB71     		strb	r3, [r7, #6]
 22743 0200 10E0     		b	.L877
 22744              	.L878:
3101:..\src/command_processing.c ****             g_mem.motor[i].curr_lookup[j] = 0;
 22745              		.loc 1 3101 0 discriminator 3
 22746 0202 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 498


 22747 0204 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22748 0206 3648     		ldr	r0, .L898
 22749 0208 1346     		mov	r3, r2
 22750 020a DB00     		lsls	r3, r3, #3
 22751 020c 9B1A     		subs	r3, r3, r2
 22752 020e 9B00     		lsls	r3, r3, #2
 22753 0210 0B44     		add	r3, r3, r1
 22754 0212 3C33     		adds	r3, r3, #60
 22755 0214 9B00     		lsls	r3, r3, #2
 22756 0216 0344     		add	r3, r3, r0
 22757 0218 4FF00002 		mov	r2, #0
 22758 021c 5A60     		str	r2, [r3, #4]	@ float
3100:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 22759              		.loc 1 3100 0 discriminator 3
 22760 021e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22761 0220 0133     		adds	r3, r3, #1
 22762 0222 BB71     		strb	r3, [r7, #6]
 22763              	.L877:
3100:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 22764              		.loc 1 3100 0 is_stmt 0 discriminator 1
 22765 0224 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22766 0226 052B     		cmp	r3, #5
 22767 0228 EBD9     		bls	.L878
3102:..\src/command_processing.c ****         }
3103:..\src/command_processing.c ****         g_mem.motor[i].current_limit = DEFAULT_CURRENT_LIMIT;
 22768              		.loc 1 3103 0 is_stmt 1 discriminator 2
 22769 022a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22770 022c 2C49     		ldr	r1, .L898
 22771 022e 1346     		mov	r3, r2
 22772 0230 DB00     		lsls	r3, r3, #3
 22773 0232 9B1A     		subs	r3, r3, r2
 22774 0234 1B01     		lsls	r3, r3, #4
 22775 0236 0B44     		add	r3, r3, r1
 22776 0238 03F58673 		add	r3, r3, #268
 22777 023c 40F2DC52 		movw	r2, #1500
 22778 0240 1A80     		strh	r2, [r3]	@ movhi
3104:..\src/command_processing.c ****         g_mem.motor[i].encoder_line = i;    
 22779              		.loc 1 3104 0 discriminator 2
 22780 0242 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22781 0244 2649     		ldr	r1, .L898
 22782 0246 1346     		mov	r3, r2
 22783 0248 DB00     		lsls	r3, r3, #3
 22784 024a 9B1A     		subs	r3, r3, r2
 22785 024c 1B01     		lsls	r3, r3, #4
 22786 024e 0B44     		add	r3, r3, r1
 22787 0250 03F58873 		add	r3, r3, #272
 22788 0254 FA79     		ldrb	r2, [r7, #7]
 22789 0256 1A70     		strb	r2, [r3]
3105:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_flag = 1;
 22790              		.loc 1 3105 0 discriminator 2
 22791 0258 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22792 025a 2149     		ldr	r1, .L898
 22793 025c 1346     		mov	r3, r2
 22794 025e DB00     		lsls	r3, r3, #3
 22795 0260 9B1A     		subs	r3, r3, r2
 22796 0262 1B01     		lsls	r3, r3, #4
 22797 0264 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 499


 22798 0266 E333     		adds	r3, r3, #227
 22799 0268 0122     		movs	r2, #1
 22800 026a 1A70     		strb	r2, [r3]
3106:..\src/command_processing.c ****         
3107:..\src/command_processing.c ****         g_mem.motor[i].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 22801              		.loc 1 3107 0 discriminator 2
 22802 026c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22803 026e 1C49     		ldr	r1, .L898
 22804 0270 1346     		mov	r3, r2
 22805 0272 DB00     		lsls	r3, r3, #3
 22806 0274 9B1A     		subs	r3, r3, r2
 22807 0276 1B01     		lsls	r3, r3, #4
 22808 0278 0B44     		add	r3, r3, r1
 22809 027a 03F21113 		addw	r3, r3, #273
 22810 027e 0122     		movs	r2, #1
 22811 0280 1A70     		strb	r2, [r3]
3108:..\src/command_processing.c ****         g_mem.motor[i].not_revers_motor_flag = FALSE;       // Generic reversible motor  
 22812              		.loc 1 3108 0 discriminator 2
 22813 0282 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22814 0284 1649     		ldr	r1, .L898
 22815 0286 1346     		mov	r3, r2
 22816 0288 DB00     		lsls	r3, r3, #3
 22817 028a 9B1A     		subs	r3, r3, r2
 22818 028c 1B01     		lsls	r3, r3, #4
 22819 028e 0B44     		add	r3, r3, r1
 22820 0290 03F58973 		add	r3, r3, #274
 22821 0294 0022     		movs	r2, #0
 22822 0296 1A70     		strb	r2, [r3]
3078:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 22823              		.loc 1 3078 0 discriminator 2
 22824 0298 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22825 029a 0133     		adds	r3, r3, #1
 22826 029c FB71     		strb	r3, [r7, #7]
 22827              	.L876:
3078:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 22828              		.loc 1 3078 0 is_stmt 0 discriminator 1
 22829 029e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22830 02a0 012B     		cmp	r3, #1
 22831 02a2 7FF6E6AE 		bls	.L879
3109:..\src/command_processing.c ****     }
3110:..\src/command_processing.c ****     
3111:..\src/command_processing.c ****     // ENC STRUCT
3112:..\src/command_processing.c ****     for (i = 0; i< N_ENCODER_LINE_MAX; i++){
 22832              		.loc 1 3112 0 is_stmt 1
 22833 02a6 0023     		movs	r3, #0
 22834 02a8 FB71     		strb	r3, [r7, #7]
 22835 02aa 98E0     		b	.L880
 22836              	.L887:
3113:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22837              		.loc 1 3113 0
 22838 02ac 0023     		movs	r3, #0
 22839 02ae BB71     		strb	r3, [r7, #6]
 22840 02b0 0FE0     		b	.L881
 22841              	.L882:
3114:..\src/command_processing.c ****             g_mem.enc[i].Enc_raw_read_conf[j] = 0;
 22842              		.loc 1 3114 0 discriminator 3
 22843 02b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 500


 22844 02b4 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22845 02b6 0A48     		ldr	r0, .L898
 22846 02b8 1346     		mov	r3, r2
 22847 02ba 5B00     		lsls	r3, r3, #1
 22848 02bc 1344     		add	r3, r3, r2
 22849 02be 1B01     		lsls	r3, r3, #4
 22850 02c0 0344     		add	r3, r3, r0
 22851 02c2 0B44     		add	r3, r3, r1
 22852 02c4 03F5C873 		add	r3, r3, #400
 22853 02c8 0022     		movs	r2, #0
 22854 02ca 1A70     		strb	r2, [r3]
3113:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22855              		.loc 1 3113 0 discriminator 3
 22856 02cc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22857 02ce 0133     		adds	r3, r3, #1
 22858 02d0 BB71     		strb	r3, [r7, #6]
 22859              	.L881:
3113:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22860              		.loc 1 3113 0 is_stmt 0 discriminator 1
 22861 02d2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22862 02d4 042B     		cmp	r3, #4
 22863 02d6 ECD9     		bls	.L882
3115:..\src/command_processing.c ****         }
3116:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 22864              		.loc 1 3116 0 is_stmt 1
 22865 02d8 0023     		movs	r3, #0
 22866 02da BB71     		strb	r3, [r7, #6]
 22867 02dc 2CE0     		b	.L883
 22868              	.L899:
 22869 02de 00BF     		.align	2
 22870              	.L898:
 22871 02e0 00000000 		.word	g_mem
 22872              	.L884:
3117:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 22873              		.loc 1 3117 0 discriminator 3
 22874 02e4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22875 02e6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22876 02e8 C948     		ldr	r0, .L900
 22877 02ea 1346     		mov	r3, r2
 22878 02ec 5B00     		lsls	r3, r3, #1
 22879 02ee 1344     		add	r3, r3, r2
 22880 02f0 1B01     		lsls	r3, r3, #4
 22881 02f2 0344     		add	r3, r3, r0
 22882 02f4 0B44     		add	r3, r3, r1
 22883 02f6 03F29513 		addw	r3, r3, #405
 22884 02fa 0322     		movs	r2, #3
 22885 02fc 1A70     		strb	r2, [r3]
3118:..\src/command_processing.c ****             g_mem.enc[i].m_mult[j] = 1;
 22886              		.loc 1 3118 0 discriminator 3
 22887 02fe FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22888 0300 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22889 0302 C348     		ldr	r0, .L900
 22890 0304 1346     		mov	r3, r2
 22891 0306 5B00     		lsls	r3, r3, #1
 22892 0308 1344     		add	r3, r3, r2
 22893 030a 9B00     		lsls	r3, r3, #2
 22894 030c 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 501


 22895 030e 6833     		adds	r3, r3, #104
 22896 0310 9B00     		lsls	r3, r3, #2
 22897 0312 0344     		add	r3, r3, r0
 22898 0314 4FF07E52 		mov	r2, #1065353216
 22899 0318 5A60     		str	r2, [r3, #4]	@ float
3119:..\src/command_processing.c ****             g_mem.enc[i].m_off[j] = (int32)0 << g_mem.enc[i].res[j];
 22900              		.loc 1 3119 0 discriminator 3
 22901 031a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22902 031c B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22903 031e BC48     		ldr	r0, .L900
 22904 0320 1346     		mov	r3, r2
 22905 0322 5B00     		lsls	r3, r3, #1
 22906 0324 1344     		add	r3, r3, r2
 22907 0326 9B00     		lsls	r3, r3, #2
 22908 0328 0B44     		add	r3, r3, r1
 22909 032a 6633     		adds	r3, r3, #102
 22910 032c 0022     		movs	r2, #0
 22911 032e 40F82320 		str	r2, [r0, r3, lsl #2]
3116:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 22912              		.loc 1 3116 0 discriminator 3
 22913 0332 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22914 0334 0133     		adds	r3, r3, #1
 22915 0336 BB71     		strb	r3, [r7, #6]
 22916              	.L883:
3116:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 22917              		.loc 1 3116 0 is_stmt 0 discriminator 1
 22918 0338 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22919 033a 022B     		cmp	r3, #2
 22920 033c D2D9     		bls	.L884
3120:..\src/command_processing.c ****         }
3121:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = FALSE;
 22921              		.loc 1 3121 0 is_stmt 1
 22922 033e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22923 0340 B349     		ldr	r1, .L900
 22924 0342 1346     		mov	r3, r2
 22925 0344 5B00     		lsls	r3, r3, #1
 22926 0346 1344     		add	r3, r3, r2
 22927 0348 1B01     		lsls	r3, r3, #4
 22928 034a 0B44     		add	r3, r3, r1
 22929 034c 03F5D873 		add	r3, r3, #432
 22930 0350 0022     		movs	r2, #0
 22931 0352 1A70     		strb	r2, [r3]
3122:..\src/command_processing.c ****         g_mem.enc[i].motor_handle_ratio = 22;     
 22932              		.loc 1 3122 0
 22933 0354 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22934 0356 AE49     		ldr	r1, .L900
 22935 0358 1346     		mov	r3, r2
 22936 035a 5B00     		lsls	r3, r3, #1
 22937 035c 1344     		add	r3, r3, r2
 22938 035e 1B01     		lsls	r3, r3, #4
 22939 0360 0B44     		add	r3, r3, r1
 22940 0362 03F5DA73 		add	r3, r3, #436
 22941 0366 1622     		movs	r2, #22
 22942 0368 1A70     		strb	r2, [r3]
3123:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 22943              		.loc 1 3123 0
 22944 036a 0023     		movs	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 502


 22945 036c BB71     		strb	r3, [r7, #6]
 22946 036e 0FE0     		b	.L885
 22947              	.L886:
3124:..\src/command_processing.c ****             g_mem.enc[i].Enc_idx_use_for_control[j] = j;    // First encoder is that with index 0 a
 22948              		.loc 1 3124 0 discriminator 3
 22949 0370 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22950 0372 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22951 0374 A648     		ldr	r0, .L900
 22952 0376 1346     		mov	r3, r2
 22953 0378 5B00     		lsls	r3, r3, #1
 22954 037a 1344     		add	r3, r3, r2
 22955 037c 1B01     		lsls	r3, r3, #4
 22956 037e 0344     		add	r3, r3, r0
 22957 0380 0B44     		add	r3, r3, r1
 22958 0382 03F2B113 		addw	r3, r3, #433
 22959 0386 BA79     		ldrb	r2, [r7, #6]
 22960 0388 1A70     		strb	r2, [r3]
3123:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 22961              		.loc 1 3123 0 discriminator 3
 22962 038a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22963 038c 0133     		adds	r3, r3, #1
 22964 038e BB71     		strb	r3, [r7, #6]
 22965              	.L885:
3123:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 22966              		.loc 1 3123 0 is_stmt 0 discriminator 1
 22967 0390 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22968 0392 022B     		cmp	r3, #2
 22969 0394 ECD9     		bls	.L886
3125:..\src/command_processing.c ****         }
3126:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = 15;     
 22970              		.loc 1 3126 0 is_stmt 1 discriminator 2
 22971 0396 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22972 0398 9D49     		ldr	r1, .L900
 22973 039a 1346     		mov	r3, r2
 22974 039c 5B00     		lsls	r3, r3, #1
 22975 039e 1344     		add	r3, r3, r2
 22976 03a0 1B01     		lsls	r3, r3, #4
 22977 03a2 0B44     		add	r3, r3, r1
 22978 03a4 03F2B513 		addw	r3, r3, #437
 22979 03a8 0F22     		movs	r2, #15
 22980 03aa 1A70     		strb	r2, [r3]
3127:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = 14;     
 22981              		.loc 1 3127 0 discriminator 2
 22982 03ac FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22983 03ae 9849     		ldr	r1, .L900
 22984 03b0 1346     		mov	r3, r2
 22985 03b2 5B00     		lsls	r3, r3, #1
 22986 03b4 1344     		add	r3, r3, r2
 22987 03b6 1B01     		lsls	r3, r3, #4
 22988 03b8 0B44     		add	r3, r3, r1
 22989 03ba 03F5DB73 		add	r3, r3, #438
 22990 03be 0E22     		movs	r2, #14
 22991 03c0 1A70     		strb	r2, [r3]
3128:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = 1;  
 22992              		.loc 1 3128 0 discriminator 2
 22993 03c2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22994 03c4 9249     		ldr	r1, .L900
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 503


 22995 03c6 1346     		mov	r3, r2
 22996 03c8 5B00     		lsls	r3, r3, #1
 22997 03ca 1344     		add	r3, r3, r2
 22998 03cc 1B01     		lsls	r3, r3, #4
 22999 03ce 0B44     		add	r3, r3, r1
 23000 03d0 03F2B713 		addw	r3, r3, #439
 23001 03d4 0122     		movs	r2, #1
 23002 03d6 1A70     		strb	r2, [r3]
3112:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 23003              		.loc 1 3112 0 discriminator 2
 23004 03d8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23005 03da 0133     		adds	r3, r3, #1
 23006 03dc FB71     		strb	r3, [r7, #7]
 23007              	.L880:
3112:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 23008              		.loc 1 3112 0 is_stmt 0 discriminator 1
 23009 03de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23010 03e0 012B     		cmp	r3, #1
 23011 03e2 7FF663AF 		bls	.L887
3129:..\src/command_processing.c ****     }
3130:..\src/command_processing.c ****     
3131:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 23012              		.loc 1 3131 0 is_stmt 1
 23013 03e6 0023     		movs	r3, #0
 23014 03e8 FB71     		strb	r3, [r7, #7]
 23015 03ea 2EE0     		b	.L888
 23016              	.L889:
3132:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 23017              		.loc 1 3132 0 discriminator 3
 23018 03ec FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23019 03ee 8849     		ldr	r1, .L900
 23020 03f0 1346     		mov	r3, r2
 23021 03f2 DB00     		lsls	r3, r3, #3
 23022 03f4 9B1A     		subs	r3, r3, r2
 23023 03f6 1B01     		lsls	r3, r3, #4
 23024 03f8 0B44     		add	r3, r3, r1
 23025 03fa E433     		adds	r3, r3, #228
 23026 03fc 0022     		movs	r2, #0
 23027 03fe 1A60     		str	r2, [r3]
3133:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_sup = (int32)19000 << g_mem.enc[g_mem.motor[i].encoder_line].res[0];
 23028              		.loc 1 3133 0 discriminator 3
 23029 0400 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23030 0402 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 23031 0404 8248     		ldr	r0, .L900
 23032 0406 0B46     		mov	r3, r1
 23033 0408 DB00     		lsls	r3, r3, #3
 23034 040a 5B1A     		subs	r3, r3, r1
 23035 040c 1B01     		lsls	r3, r3, #4
 23036 040e 0344     		add	r3, r3, r0
 23037 0410 03F58873 		add	r3, r3, #272
 23038 0414 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23039 0416 1846     		mov	r0, r3
 23040 0418 7D49     		ldr	r1, .L900
 23041 041a 0346     		mov	r3, r0
 23042 041c 5B00     		lsls	r3, r3, #1
 23043 041e 0344     		add	r3, r3, r0
 23044 0420 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 504


 23045 0422 0B44     		add	r3, r3, r1
 23046 0424 03F29513 		addw	r3, r3, #405
 23047 0428 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23048 042a 1946     		mov	r1, r3
 23049 042c 44F63823 		movw	r3, #19000
 23050 0430 03FA01F1 		lsl	r1, r3, r1
 23051 0434 7648     		ldr	r0, .L900
 23052 0436 1346     		mov	r3, r2
 23053 0438 DB00     		lsls	r3, r3, #3
 23054 043a 9B1A     		subs	r3, r3, r2
 23055 043c 1B01     		lsls	r3, r3, #4
 23056 043e 0344     		add	r3, r3, r0
 23057 0440 E833     		adds	r3, r3, #232
 23058 0442 1960     		str	r1, [r3]
3131:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 23059              		.loc 1 3131 0 discriminator 3
 23060 0444 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23061 0446 0133     		adds	r3, r3, #1
 23062 0448 FB71     		strb	r3, [r7, #7]
 23063              	.L888:
3131:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 23064              		.loc 1 3131 0 is_stmt 0 discriminator 1
 23065 044a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23066 044c 012B     		cmp	r3, #1
 23067 044e CDD9     		bls	.L889
3134:..\src/command_processing.c ****     }
3135:..\src/command_processing.c ****     
3136:..\src/command_processing.c ****     // EMG STRUCT     
3137:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 23068              		.loc 1 3137 0 is_stmt 1
 23069 0450 6F4B     		ldr	r3, .L900
 23070 0452 C822     		movs	r2, #200
 23071 0454 A3F8F021 		strh	r2, [r3, #496]	@ movhi
3138:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 23072              		.loc 1 3138 0
 23073 0458 6D4B     		ldr	r3, .L900
 23074 045a C822     		movs	r2, #200
 23075 045c A3F8F221 		strh	r2, [r3, #498]	@ movhi
3139:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 23076              		.loc 1 3139 0
 23077 0460 6B4B     		ldr	r3, .L900
 23078 0462 4FF48062 		mov	r2, #1024
 23079 0466 C3F8F421 		str	r2, [r3, #500]
3140:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;   
 23080              		.loc 1 3140 0
 23081 046a 694B     		ldr	r3, .L900
 23082 046c 4FF48062 		mov	r2, #1024
 23083 0470 C3F8F821 		str	r2, [r3, #504]
3141:..\src/command_processing.c ****     g_mem.emg.emg_speed[0] = 100; 
 23084              		.loc 1 3141 0
 23085 0474 664B     		ldr	r3, .L900
 23086 0476 6422     		movs	r2, #100
 23087 0478 83F8FC21 		strb	r2, [r3, #508]
3142:..\src/command_processing.c ****     g_mem.emg.emg_speed[1] = 100; 
 23088              		.loc 1 3142 0
 23089 047c 644B     		ldr	r3, .L900
 23090 047e 6422     		movs	r2, #100
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 505


 23091 0480 83F8FD21 		strb	r2, [r3, #509]
3143:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;      // EMG calibration disabled by default
 23092              		.loc 1 3143 0
 23093 0484 624B     		ldr	r3, .L900
 23094 0486 0022     		movs	r2, #0
 23095 0488 83F8FE21 		strb	r2, [r3, #510]
3144:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;    
 23096              		.loc 1 3144 0
 23097 048c 604B     		ldr	r3, .L900
 23098 048e 0022     		movs	r2, #0
 23099 0490 83F8FF21 		strb	r2, [r3, #511]
3145:..\src/command_processing.c **** 
3146:..\src/command_processing.c ****     // IMU STRUCT
3147:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 23100              		.loc 1 3147 0
 23101 0494 5E4B     		ldr	r3, .L900
 23102 0496 0022     		movs	r2, #0
 23103 0498 83F80022 		strb	r2, [r3, #512]
3148:..\src/command_processing.c ****     g_mem.imu.SPI_read_delay = 0;       // 0 - No delay
 23104              		.loc 1 3148 0
 23105 049c 5C4B     		ldr	r3, .L900
 23106 049e 0022     		movs	r2, #0
 23107 04a0 83F80122 		strb	r2, [r3, #513]
3149:..\src/command_processing.c ****     for (i = 0; i< N_IMU_MAX; i++){
 23108              		.loc 1 3149 0
 23109 04a4 0023     		movs	r3, #0
 23110 04a6 FB71     		strb	r3, [r7, #7]
 23111 04a8 34E0     		b	.L890
 23112              	.L891:
3150:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 23113              		.loc 1 3150 0 discriminator 3
 23114 04aa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23115 04ac 5849     		ldr	r1, .L900
 23116 04ae 1346     		mov	r3, r2
 23117 04b0 9B00     		lsls	r3, r3, #2
 23118 04b2 1344     		add	r3, r3, r2
 23119 04b4 0B44     		add	r3, r3, r1
 23120 04b6 03F20223 		addw	r3, r3, #514
 23121 04ba 0122     		movs	r2, #1
 23122 04bc 1A70     		strb	r2, [r3]
3151:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][1] = 1;   // Gyroscopes
 23123              		.loc 1 3151 0 discriminator 3
 23124 04be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23125 04c0 5349     		ldr	r1, .L900
 23126 04c2 1346     		mov	r3, r2
 23127 04c4 9B00     		lsls	r3, r3, #2
 23128 04c6 1344     		add	r3, r3, r2
 23129 04c8 0B44     		add	r3, r3, r1
 23130 04ca 03F20323 		addw	r3, r3, #515
 23131 04ce 0122     		movs	r2, #1
 23132 04d0 1A70     		strb	r2, [r3]
3152:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][2] = 0;   // Magnetometers
 23133              		.loc 1 3152 0 discriminator 3
 23134 04d2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23135 04d4 4E49     		ldr	r1, .L900
 23136 04d6 1346     		mov	r3, r2
 23137 04d8 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 506


 23138 04da 1344     		add	r3, r3, r2
 23139 04dc 0B44     		add	r3, r3, r1
 23140 04de 03F50173 		add	r3, r3, #516
 23141 04e2 0022     		movs	r2, #0
 23142 04e4 1A70     		strb	r2, [r3]
3153:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][3] = 0;   // Quaternions
 23143              		.loc 1 3153 0 discriminator 3
 23144 04e6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23145 04e8 4949     		ldr	r1, .L900
 23146 04ea 1346     		mov	r3, r2
 23147 04ec 9B00     		lsls	r3, r3, #2
 23148 04ee 1344     		add	r3, r3, r2
 23149 04f0 0B44     		add	r3, r3, r1
 23150 04f2 03F20523 		addw	r3, r3, #517
 23151 04f6 0022     		movs	r2, #0
 23152 04f8 1A70     		strb	r2, [r3]
3154:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][4] = 0;   // Temperatures
 23153              		.loc 1 3154 0 discriminator 3
 23154 04fa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23155 04fc 4449     		ldr	r1, .L900
 23156 04fe 1346     		mov	r3, r2
 23157 0500 9B00     		lsls	r3, r3, #2
 23158 0502 1344     		add	r3, r3, r2
 23159 0504 0B44     		add	r3, r3, r1
 23160 0506 03F20623 		addw	r3, r3, #518
 23161 050a 0022     		movs	r2, #0
 23162 050c 1A70     		strb	r2, [r3]
3149:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 23163              		.loc 1 3149 0 discriminator 3
 23164 050e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23165 0510 0133     		adds	r3, r3, #1
 23166 0512 FB71     		strb	r3, [r7, #7]
 23167              	.L890:
3149:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 23168              		.loc 1 3149 0 is_stmt 0 discriminator 1
 23169 0514 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23170 0516 042B     		cmp	r3, #4
 23171 0518 C7D9     		bls	.L891
3155:..\src/command_processing.c ****     }
3156:..\src/command_processing.c ****      
3157:..\src/command_processing.c ****     // EXP STRUCT
3158:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 23172              		.loc 1 3158 0 is_stmt 1
 23173 051a 3D4B     		ldr	r3, .L900
 23174 051c 0022     		movs	r2, #0
 23175 051e 83F82622 		strb	r2, [r3, #550]
3159:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "GEN001");
 23176              		.loc 1 3159 0
 23177 0522 3B4B     		ldr	r3, .L900
 23178 0524 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 23179 0528 1233     		adds	r3, r3, #18
 23180 052a 5B01     		lsls	r3, r3, #5
 23181 052c 384A     		ldr	r2, .L900
 23182 052e 1344     		add	r3, r3, r2
 23183 0530 384A     		ldr	r2, .L900+4
 23184 0532 1068     		ldr	r0, [r2]	@ unaligned
 23185 0534 1860     		str	r0, [r3]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 507


 23186 0536 9188     		ldrh	r1, [r2, #4]	@ unaligned
 23187 0538 9279     		ldrb	r2, [r2, #6]
 23188 053a 9980     		strh	r1, [r3, #4]	@ unaligned
 23189 053c 9A71     		strb	r2, [r3, #6]
3160:..\src/command_processing.c ****     if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 23190              		.loc 1 3160 0
 23191 053e 344B     		ldr	r3, .L900
 23192 0540 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 23193 0544 012B     		cmp	r3, #1
 23194 0546 13D1     		bne	.L892
3161:..\src/command_processing.c ****         // Set date of maintenance from RTC
3162:..\src/command_processing.c ****         store_RTC_current_time();
 23195              		.loc 1 3162 0
 23196 0548 FFF7FEFF 		bl	store_RTC_current_time
3163:..\src/command_processing.c ****         
3164:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[0] = g_mem.exp.curr_time[0];
 23197              		.loc 1 3164 0
 23198 054c 304B     		ldr	r3, .L900
 23199 054e 93F82022 		ldrb	r2, [r3, #544]	@ zero_extendqisi2
 23200 0552 2F4B     		ldr	r3, .L900
 23201 0554 83F8A420 		strb	r2, [r3, #164]
3165:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[1] = g_mem.exp.curr_time[1];
 23202              		.loc 1 3165 0
 23203 0558 2D4B     		ldr	r3, .L900
 23204 055a 93F82122 		ldrb	r2, [r3, #545]	@ zero_extendqisi2
 23205 055e 2C4B     		ldr	r3, .L900
 23206 0560 83F8A520 		strb	r2, [r3, #165]
3166:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[2] = g_mem.exp.curr_time[2];
 23207              		.loc 1 3166 0
 23208 0564 2A4B     		ldr	r3, .L900
 23209 0566 93F82222 		ldrb	r2, [r3, #546]	@ zero_extendqisi2
 23210 056a 294B     		ldr	r3, .L900
 23211 056c 83F8A620 		strb	r2, [r3, #166]
 23212              	.L892:
3167:..\src/command_processing.c ****     }
3168:..\src/command_processing.c ****     g_mem.exp.read_ADC_sensors_port_flag = FALSE;
 23213              		.loc 1 3168 0
 23214 0570 274B     		ldr	r3, .L900
 23215 0572 0022     		movs	r2, #0
 23216 0574 83F82722 		strb	r2, [r3, #551]
3169:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 23217              		.loc 1 3169 0
 23218 0578 0023     		movs	r3, #0
 23219 057a FB71     		strb	r3, [r7, #7]
 23220 057c 08E0     		b	.L893
 23221              	.L894:
3170:..\src/command_processing.c ****         g_mem.exp.ADC_conf[i] = 0;
 23222              		.loc 1 3170 0 discriminator 3
 23223 057e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23224 0580 234A     		ldr	r2, .L900
 23225 0582 1344     		add	r3, r3, r2
 23226 0584 0022     		movs	r2, #0
 23227 0586 83F82822 		strb	r2, [r3, #552]
3169:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 23228              		.loc 1 3169 0 discriminator 3
 23229 058a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23230 058c 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 508


 23231 058e FB71     		strb	r3, [r7, #7]
 23232              	.L893:
3169:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 23233              		.loc 1 3169 0 is_stmt 0 discriminator 1
 23234 0590 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23235 0592 0B2B     		cmp	r3, #11
 23236 0594 F3D9     		bls	.L894
3171:..\src/command_processing.c ****     }
3172:..\src/command_processing.c ****     //Activate only the two EMG channels by default for every firmware configuration
3173:..\src/command_processing.c ****     g_mem.exp.ADC_conf[2] = 1;
 23237              		.loc 1 3173 0 is_stmt 1
 23238 0596 1E4B     		ldr	r3, .L900
 23239 0598 0122     		movs	r2, #1
 23240 059a 83F82A22 		strb	r2, [r3, #554]
3174:..\src/command_processing.c ****     g_mem.exp.ADC_conf[3] = 1;
 23241              		.loc 1 3174 0
 23242 059e 1C4B     		ldr	r3, .L900
 23243 05a0 0122     		movs	r2, #1
 23244 05a2 83F82B22 		strb	r2, [r3, #555]
3175:..\src/command_processing.c ****     g_mem.exp.record_EMG_history_on_SD = FALSE;
 23245              		.loc 1 3175 0
 23246 05a6 1A4B     		ldr	r3, .L900
 23247 05a8 0022     		movs	r2, #0
 23248 05aa 83F83422 		strb	r2, [r3, #564]
3176:..\src/command_processing.c **** 
3177:..\src/command_processing.c ****     // WR STRUCT (default in generic fw)
3178:..\src/command_processing.c ****     g_mem.WR.activation_mode = 0;                // Default Fast:wrist/syn2, Slow:hand/syn1
 23249              		.loc 1 3178 0
 23250 05ae 184B     		ldr	r3, .L900
 23251 05b0 0022     		movs	r2, #0
 23252 05b2 83F8E022 		strb	r2, [r3, #736]
3179:..\src/command_processing.c ****     g_mem.WR.fast_act_threshold[0] = 800;
 23253              		.loc 1 3179 0
 23254 05b6 164B     		ldr	r3, .L900
 23255 05b8 4FF44872 		mov	r2, #800
 23256 05bc A3F8E222 		strh	r2, [r3, #738]	@ movhi
3180:..\src/command_processing.c **** 
3181:..\src/command_processing.c **** #ifdef SOFTHAND_FW
3182:..\src/command_processing.c ****     // Override memory values with specific ones for SoftHand Pro device
3183:..\src/command_processing.c ****     memInit_SoftHandPro();
3184:..\src/command_processing.c **** #endif 
3185:..\src/command_processing.c **** 
3186:..\src/command_processing.c **** #ifdef MASTER_FW
3187:..\src/command_processing.c ****     // Override memory values with specific ones for Master device
3188:..\src/command_processing.c ****     memInit_Master();
3189:..\src/command_processing.c **** #endif 
3190:..\src/command_processing.c **** 
3191:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
3192:..\src/command_processing.c ****     // Override memory values with specific ones for Air Chambers device
3193:..\src/command_processing.c ****     memInit_AirChambersFb();
3194:..\src/command_processing.c **** #endif 
3195:..\src/command_processing.c **** 
3196:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
3197:..\src/command_processing.c ****     // Override memory values with specific ones for Ottobock Wrist device
3198:..\src/command_processing.c ****     memInit_OtbkActWristMs();
3199:..\src/command_processing.c **** #endif
3200:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 509


3201:..\src/command_processing.c ****     // JOYSTICK STRUCT
3202:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_closure_speed = 150;
 23257              		.loc 1 3202 0
 23258 05c0 134B     		ldr	r3, .L900
 23259 05c2 9622     		movs	r2, #150
 23260 05c4 A3F8B022 		strh	r2, [r3, #688]	@ movhi
3203:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_threshold = 100;
 23261              		.loc 1 3203 0
 23262 05c8 114B     		ldr	r3, .L900
 23263 05ca 6422     		movs	r2, #100
 23264 05cc A3F8B222 		strh	r2, [r3, #690]	@ movhi
3204:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_gains[0] = 1024;
 23265              		.loc 1 3204 0
 23266 05d0 0F4B     		ldr	r3, .L900
 23267 05d2 4FF48062 		mov	r2, #1024
 23268 05d6 A3F8B422 		strh	r2, [r3, #692]	@ movhi
3205:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_gains[1] = 1024;
 23269              		.loc 1 3205 0
 23270 05da 0D4B     		ldr	r3, .L900
 23271 05dc 4FF48062 		mov	r2, #1024
 23272 05e0 A3F8B622 		strh	r2, [r3, #694]	@ movhi
3206:..\src/command_processing.c **** 
3207:..\src/command_processing.c ****     // Default generic user_id
3208:..\src/command_processing.c ****     g_mem.dev.user_id = GENERIC_USER;    
 23273              		.loc 1 3208 0
 23274 05e4 0A4B     		ldr	r3, .L900
 23275 05e6 0022     		movs	r2, #0
 23276 05e8 83F8AB20 		strb	r2, [r3, #171]
3209:..\src/command_processing.c **** 
3210:..\src/command_processing.c ****     // set the initialized flag to show EEPROM has been populated
3211:..\src/command_processing.c ****     g_mem.flag = TRUE;
 23277              		.loc 1 3211 0
 23278 05ec 084B     		ldr	r3, .L900
 23279 05ee 0122     		movs	r2, #1
 23280 05f0 1A70     		strb	r2, [r3]
3212:..\src/command_processing.c ****     
3213:..\src/command_processing.c ****     //write that configuration to EEPROM
3214:..\src/command_processing.c ****     return ( memStore(0) && memStore(DEFAULT_EEPROM_DISPLACEMENT) );
 23281              		.loc 1 3214 0
 23282 05f2 0020     		movs	r0, #0
 23283 05f4 FFF7FEFF 		bl	memStore
 23284 05f8 0346     		mov	r3, r0
 23285 05fa 002B     		cmp	r3, #0
 23286 05fc 0CD0     		beq	.L895
 23287              		.loc 1 3214 0 is_stmt 0 discriminator 1
 23288 05fe 3220     		movs	r0, #50
 23289 0600 FFF7FEFF 		bl	memStore
 23290 0604 0346     		mov	r3, r0
 23291 0606 002B     		cmp	r3, #0
 23292 0608 06D0     		beq	.L895
 23293              		.loc 1 3214 0 discriminator 3
 23294 060a 0123     		movs	r3, #1
 23295 060c 05E0     		b	.L896
 23296              	.L901:
 23297 060e 00BF     		.align	2
 23298              	.L900:
 23299 0610 00000000 		.word	g_mem
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 510


 23300 0614 E01F0000 		.word	.LC308
 23301              	.L895:
 23302              		.loc 1 3214 0 discriminator 4
 23303 0618 0023     		movs	r3, #0
 23304              	.L896:
 23305              		.loc 1 3214 0 discriminator 6
 23306 061a DBB2     		uxtb	r3, r3
3215:..\src/command_processing.c **** }
 23307              		.loc 1 3215 0 is_stmt 1 discriminator 6
 23308 061c 1846     		mov	r0, r3
 23309 061e 0837     		adds	r7, r7, #8
 23310              		.cfi_def_cfa_offset 8
 23311 0620 BD46     		mov	sp, r7
 23312              		.cfi_def_cfa_register 13
 23313              		@ sp needed
 23314 0622 80BD     		pop	{r7, pc}
 23315              		.cfi_endproc
 23316              	.LFE88:
 23317              		.size	memInit, .-memInit
 23318              		.section	.rodata
 23319 1fe7 00       		.align	2
 23320              	.LC309:
 23321 1fe8 55535230 		.ascii	"USR001\000"
 23321      303100
 23322              		.section	.text.memInit_SoftHandPro,"ax",%progbits
 23323              		.align	2
 23324              		.global	memInit_SoftHandPro
 23325              		.thumb
 23326              		.thumb_func
 23327              		.type	memInit_SoftHandPro, %function
 23328              	memInit_SoftHandPro:
 23329              	.LFB89:
3216:..\src/command_processing.c **** 
3217:..\src/command_processing.c **** //==============================================================================
3218:..\src/command_processing.c **** //                                                          MEMORY INIT SOFTHAND
3219:..\src/command_processing.c **** //==============================================================================
3220:..\src/command_processing.c **** void memInit_SoftHandPro(void)
3221:..\src/command_processing.c **** {
 23330              		.loc 1 3221 0
 23331              		.cfi_startproc
 23332              		@ args = 0, pretend = 0, frame = 8
 23333              		@ frame_needed = 1, uses_anonymous_args = 0
 23334              		@ link register save eliminated.
 23335 0000 80B4     		push	{r7}
 23336              		.cfi_def_cfa_offset 4
 23337              		.cfi_offset 7, -4
 23338 0002 83B0     		sub	sp, sp, #12
 23339              		.cfi_def_cfa_offset 16
 23340 0004 00AF     		add	r7, sp, #0
 23341              		.cfi_def_cfa_register 7
3222:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 23342              		.loc 1 3222 0
 23343 0006 0023     		movs	r3, #0
 23344 0008 FB70     		strb	r3, [r7, #3]
3223:..\src/command_processing.c ****     
3224:..\src/command_processing.c ****     //initialize memory settings ( Specific for SoftHand Pro device )    
3225:..\src/command_processing.c ****     g_mem.dev.right_left = LEFT_HAND;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 511


 23345              		.loc 1 3225 0
 23346 000a 894B     		ldr	r3, .L905
 23347 000c 0122     		movs	r2, #1
 23348 000e 83F8A720 		strb	r2, [r3, #167]
3226:..\src/command_processing.c ****     g_mem.dev.dev_type = SOFTHAND_PRO;
 23349              		.loc 1 3226 0
 23350 0012 874B     		ldr	r3, .L905
 23351 0014 0022     		movs	r2, #0
 23352 0016 83F8AC20 		strb	r2, [r3, #172]
3227:..\src/command_processing.c ****     
3228:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].activ         = 1;
 23353              		.loc 1 3228 0
 23354 001a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23355 001c 8449     		ldr	r1, .L905
 23356 001e 1346     		mov	r3, r2
 23357 0020 DB00     		lsls	r3, r3, #3
 23358 0022 9B1A     		subs	r3, r3, r2
 23359 0024 1B01     		lsls	r3, r3, #4
 23360 0026 0B44     		add	r3, r3, r1
 23361 0028 E033     		adds	r3, r3, #224
 23362 002a 0122     		movs	r2, #1
 23363 002c 1A70     		strb	r2, [r3]
3229:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].input_mode    = INPUT_MODE_EXTERNAL;
 23364              		.loc 1 3229 0
 23365 002e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23366 0030 7F49     		ldr	r1, .L905
 23367 0032 1346     		mov	r3, r2
 23368 0034 DB00     		lsls	r3, r3, #3
 23369 0036 9B1A     		subs	r3, r3, r2
 23370 0038 1B01     		lsls	r3, r3, #4
 23371 003a 0B44     		add	r3, r3, r1
 23372 003c 03F58773 		add	r3, r3, #270
 23373 0040 0022     		movs	r2, #0
 23374 0042 1A70     		strb	r2, [r3]
3230:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].control_mode  = CONTROL_ANGLE;
 23375              		.loc 1 3230 0
 23376 0044 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23377 0046 7A49     		ldr	r1, .L905
 23378 0048 1346     		mov	r3, r2
 23379 004a DB00     		lsls	r3, r3, #3
 23380 004c 9B1A     		subs	r3, r3, r2
 23381 004e 1B01     		lsls	r3, r3, #4
 23382 0050 0B44     		add	r3, r3, r1
 23383 0052 03F20F13 		addw	r3, r3, #271
 23384 0056 0022     		movs	r2, #0
 23385 0058 1A70     		strb	r2, [r3]
3231:..\src/command_processing.c ****     
3232:..\src/command_processing.c ****     // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
3233:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 23386              		.loc 1 3233 0
 23387 005a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23388 005c 744B     		ldr	r3, .L905
 23389 005e 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 23390 0062 7349     		ldr	r1, .L905
 23391 0064 1346     		mov	r3, r2
 23392 0066 DB00     		lsls	r3, r3, #3
 23393 0068 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 512


 23394 006a 1B01     		lsls	r3, r3, #4
 23395 006c 0B44     		add	r3, r3, r1
 23396 006e 03F58873 		add	r3, r3, #272
 23397 0072 0246     		mov	r2, r0
 23398 0074 1A70     		strb	r2, [r3]
3234:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 23399              		.loc 1 3234 0
 23400 0076 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23401 0078 6D49     		ldr	r1, .L905
 23402 007a 1346     		mov	r3, r2
 23403 007c DB00     		lsls	r3, r3, #3
 23404 007e 9B1A     		subs	r3, r3, r2
 23405 0080 1B01     		lsls	r3, r3, #4
 23406 0082 0B44     		add	r3, r3, r1
 23407 0084 03F21113 		addw	r3, r3, #273
 23408 0088 0122     		movs	r2, #1
 23409 008a 1A70     		strb	r2, [r3]
3235:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversible motor
 23410              		.loc 1 3235 0
 23411 008c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23412 008e 6849     		ldr	r1, .L905
 23413 0090 1346     		mov	r3, r2
 23414 0092 DB00     		lsls	r3, r3, #3
 23415 0094 9B1A     		subs	r3, r3, r2
 23416 0096 1B01     		lsls	r3, r3, #4
 23417 0098 0B44     		add	r3, r3, r1
 23418 009a 03F58973 		add	r3, r3, #274
 23419 009e 0122     		movs	r2, #1
 23420 00a0 1A70     		strb	r2, [r3]
3236:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 23421              		.loc 1 3236 0
 23422 00a2 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23423 00a4 6249     		ldr	r1, .L905
 23424 00a6 1346     		mov	r3, r2
 23425 00a8 DB00     		lsls	r3, r3, #3
 23426 00aa 9B1A     		subs	r3, r3, r2
 23427 00ac 1B01     		lsls	r3, r3, #4
 23428 00ae 0B44     		add	r3, r3, r1
 23429 00b0 E433     		adds	r3, r3, #228
 23430 00b2 0022     		movs	r2, #0
 23431 00b4 1A60     		str	r2, [r3]
3237:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_l
 23432              		.loc 1 3237 0
 23433 00b6 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23434 00b8 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 23435 00ba 5D48     		ldr	r0, .L905
 23436 00bc 0B46     		mov	r3, r1
 23437 00be DB00     		lsls	r3, r3, #3
 23438 00c0 5B1A     		subs	r3, r3, r1
 23439 00c2 1B01     		lsls	r3, r3, #4
 23440 00c4 0344     		add	r3, r3, r0
 23441 00c6 03F58873 		add	r3, r3, #272
 23442 00ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23443 00cc 1846     		mov	r0, r3
 23444 00ce 5849     		ldr	r1, .L905
 23445 00d0 0346     		mov	r3, r0
 23446 00d2 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 513


 23447 00d4 0344     		add	r3, r3, r0
 23448 00d6 1B01     		lsls	r3, r3, #4
 23449 00d8 0B44     		add	r3, r3, r1
 23450 00da 03F29513 		addw	r3, r3, #405
 23451 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23452 00e0 1946     		mov	r1, r3
 23453 00e2 4FF47A53 		mov	r3, #16000
 23454 00e6 03FA01F1 		lsl	r1, r3, r1
 23455 00ea 5148     		ldr	r0, .L905
 23456 00ec 1346     		mov	r3, r2
 23457 00ee DB00     		lsls	r3, r3, #3
 23458 00f0 9B1A     		subs	r3, r3, r2
 23459 00f2 1B01     		lsls	r3, r3, #4
 23460 00f4 0344     		add	r3, r3, r0
 23461 00f6 E833     		adds	r3, r3, #232
 23462 00f8 1960     		str	r1, [r3]
 23463              	.LBB26:
3238:..\src/command_processing.c ****     
3239:..\src/command_processing.c ****     for (int i=0; i < N_ENCODER_LINE_MAX; i++) {
 23464              		.loc 1 3239 0
 23465 00fa 0023     		movs	r3, #0
 23466 00fc 7B60     		str	r3, [r7, #4]
 23467 00fe 2EE0     		b	.L903
 23468              	.L904:
3240:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
3241:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = TRUE;
 23469              		.loc 1 3241 0 discriminator 3
 23470 0100 4B49     		ldr	r1, .L905
 23471 0102 7A68     		ldr	r2, [r7, #4]
 23472 0104 1346     		mov	r3, r2
 23473 0106 5B00     		lsls	r3, r3, #1
 23474 0108 1344     		add	r3, r3, r2
 23475 010a 1B01     		lsls	r3, r3, #4
 23476 010c 0B44     		add	r3, r3, r1
 23477 010e 03F5D873 		add	r3, r3, #432
 23478 0112 0122     		movs	r2, #1
 23479 0114 1A70     		strb	r2, [r3]
3242:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = SH_N1;     
 23480              		.loc 1 3242 0 discriminator 3
 23481 0116 4649     		ldr	r1, .L905
 23482 0118 7A68     		ldr	r2, [r7, #4]
 23483 011a 1346     		mov	r3, r2
 23484 011c 5B00     		lsls	r3, r3, #1
 23485 011e 1344     		add	r3, r3, r2
 23486 0120 1B01     		lsls	r3, r3, #4
 23487 0122 0B44     		add	r3, r3, r1
 23488 0124 03F2B513 		addw	r3, r3, #437
 23489 0128 2322     		movs	r2, #35
 23490 012a 1A70     		strb	r2, [r3]
3243:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = SH_N2;     
 23491              		.loc 1 3243 0 discriminator 3
 23492 012c 4049     		ldr	r1, .L905
 23493 012e 7A68     		ldr	r2, [r7, #4]
 23494 0130 1346     		mov	r3, r2
 23495 0132 5B00     		lsls	r3, r3, #1
 23496 0134 1344     		add	r3, r3, r2
 23497 0136 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 514


 23498 0138 0B44     		add	r3, r3, r1
 23499 013a 03F5DB73 		add	r3, r3, #438
 23500 013e 0322     		movs	r2, #3
 23501 0140 1A70     		strb	r2, [r3]
3244:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = SH_I1;  
 23502              		.loc 1 3244 0 discriminator 3
 23503 0142 3B49     		ldr	r1, .L905
 23504 0144 7A68     		ldr	r2, [r7, #4]
 23505 0146 1346     		mov	r3, r2
 23506 0148 5B00     		lsls	r3, r3, #1
 23507 014a 1344     		add	r3, r3, r2
 23508 014c 1B01     		lsls	r3, r3, #4
 23509 014e 0B44     		add	r3, r3, r1
 23510 0150 03F2B713 		addw	r3, r3, #439
 23511 0154 FF22     		movs	r2, #255
 23512 0156 1A70     		strb	r2, [r3]
3239:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 23513              		.loc 1 3239 0 discriminator 3
 23514 0158 7B68     		ldr	r3, [r7, #4]
 23515 015a 0133     		adds	r3, r3, #1
 23516 015c 7B60     		str	r3, [r7, #4]
 23517              	.L903:
3239:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 23518              		.loc 1 3239 0 is_stmt 0 discriminator 1
 23519 015e 7B68     		ldr	r3, [r7, #4]
 23520 0160 012B     		cmp	r3, #1
 23521 0162 CDDD     		ble	.L904
 23522              	.LBE26:
3245:..\src/command_processing.c ****     }
3246:..\src/command_processing.c ****     
3247:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 23523              		.loc 1 3247 0 is_stmt 1
 23524 0164 324B     		ldr	r3, .L905
 23525 0166 4FF48062 		mov	r2, #1024
 23526 016a C3F8F421 		str	r2, [r3, #500]
3248:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;
 23527              		.loc 1 3248 0
 23528 016e 304B     		ldr	r3, .L905
 23529 0170 4FF48062 		mov	r2, #1024
 23530 0174 C3F8F821 		str	r2, [r3, #504]
3249:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 23531              		.loc 1 3249 0
 23532 0178 2D4B     		ldr	r3, .L905
 23533 017a C822     		movs	r2, #200
 23534 017c A3F8F021 		strh	r2, [r3, #496]	@ movhi
3250:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 23535              		.loc 1 3250 0
 23536 0180 2B4B     		ldr	r3, .L905
 23537 0182 C822     		movs	r2, #200
 23538 0184 A3F8F221 		strh	r2, [r3, #498]	@ movhi
3251:..\src/command_processing.c ****     g_mem.emg.emg_speed[0] = 100;
 23539              		.loc 1 3251 0
 23540 0188 294B     		ldr	r3, .L905
 23541 018a 6422     		movs	r2, #100
 23542 018c 83F8FC21 		strb	r2, [r3, #508]
3252:..\src/command_processing.c ****     g_mem.emg.emg_speed[1] = 100;
 23543              		.loc 1 3252 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 515


 23544 0190 274B     		ldr	r3, .L905
 23545 0192 6422     		movs	r2, #100
 23546 0194 83F8FD21 		strb	r2, [r3, #509]
3253:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;      // EMG calibration disabled by default
 23547              		.loc 1 3253 0
 23548 0198 254B     		ldr	r3, .L905
 23549 019a 0022     		movs	r2, #0
 23550 019c 83F8FE21 		strb	r2, [r3, #510]
3254:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;
 23551              		.loc 1 3254 0
 23552 01a0 234B     		ldr	r3, .L905
 23553 01a2 0022     		movs	r2, #0
 23554 01a4 83F8FF21 		strb	r2, [r3, #511]
3255:..\src/command_processing.c ****     
3256:..\src/command_processing.c ****     //Initialize rest position parameters  
3257:..\src/command_processing.c ****     g_mem.SH.rest_position_flag = FALSE;
 23555              		.loc 1 3257 0
 23556 01a8 214B     		ldr	r3, .L905
 23557 01aa 0022     		movs	r2, #0
 23558 01ac 83F8AC22 		strb	r2, [r3, #684]
3258:..\src/command_processing.c ****     g_mem.SH.rest_pos = (int32)7000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].res[0]; // 56
 23559              		.loc 1 3258 0
 23560 01b0 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23561 01b2 1F49     		ldr	r1, .L905
 23562 01b4 1346     		mov	r3, r2
 23563 01b6 DB00     		lsls	r3, r3, #3
 23564 01b8 9B1A     		subs	r3, r3, r2
 23565 01ba 1B01     		lsls	r3, r3, #4
 23566 01bc 0B44     		add	r3, r3, r1
 23567 01be 03F58873 		add	r3, r3, #272
 23568 01c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23569 01c4 1946     		mov	r1, r3
 23570 01c6 1A4A     		ldr	r2, .L905
 23571 01c8 0B46     		mov	r3, r1
 23572 01ca 5B00     		lsls	r3, r3, #1
 23573 01cc 0B44     		add	r3, r3, r1
 23574 01ce 1B01     		lsls	r3, r3, #4
 23575 01d0 1344     		add	r3, r3, r2
 23576 01d2 03F29513 		addw	r3, r3, #405
 23577 01d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23578 01d8 1A46     		mov	r2, r3
 23579 01da 41F65833 		movw	r3, #7000
 23580 01de 9340     		lsls	r3, r3, r2
 23581 01e0 134A     		ldr	r2, .L905
 23582 01e2 C2F8A032 		str	r3, [r2, #672]
3259:..\src/command_processing.c **** 	g_mem.SH.rest_delay = 10;
 23583              		.loc 1 3259 0
 23584 01e6 124B     		ldr	r3, .L905
 23585 01e8 0A22     		movs	r2, #10
 23586 01ea C3F8A422 		str	r2, [r3, #676]
3260:..\src/command_processing.c ****     g_mem.SH.rest_vel = 10000;
 23587              		.loc 1 3260 0
 23588 01ee 104B     		ldr	r3, .L905
 23589 01f0 42F21072 		movw	r2, #10000
 23590 01f4 C3F8A822 		str	r2, [r3, #680]
3261:..\src/command_processing.c **** 	
3262:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 516


 23591              		.loc 1 3262 0
 23592 01f8 0D4B     		ldr	r3, .L905
 23593 01fa 0022     		movs	r2, #0
 23594 01fc 83F80022 		strb	r2, [r3, #512]
3263:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 23595              		.loc 1 3263 0
 23596 0200 0B4B     		ldr	r3, .L905
 23597 0202 0022     		movs	r2, #0
 23598 0204 83F82622 		strb	r2, [r3, #550]
3264:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "USR001");
 23599              		.loc 1 3264 0
 23600 0208 094B     		ldr	r3, .L905
 23601 020a 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 23602 020e 1233     		adds	r3, r3, #18
 23603 0210 5B01     		lsls	r3, r3, #5
 23604 0212 074A     		ldr	r2, .L905
 23605 0214 1344     		add	r3, r3, r2
 23606 0216 074A     		ldr	r2, .L905+4
 23607 0218 1068     		ldr	r0, [r2]	@ unaligned
 23608 021a 1860     		str	r0, [r3]	@ unaligned
 23609 021c 9188     		ldrh	r1, [r2, #4]	@ unaligned
 23610 021e 9279     		ldrb	r2, [r2, #6]
 23611 0220 9980     		strh	r1, [r3, #4]	@ unaligned
 23612 0222 9A71     		strb	r2, [r3, #6]
3265:..\src/command_processing.c **** }
 23613              		.loc 1 3265 0
 23614 0224 00BF     		nop
 23615 0226 0C37     		adds	r7, r7, #12
 23616              		.cfi_def_cfa_offset 4
 23617 0228 BD46     		mov	sp, r7
 23618              		.cfi_def_cfa_register 13
 23619              		@ sp needed
 23620 022a 80BC     		pop	{r7}
 23621              		.cfi_restore 7
 23622              		.cfi_def_cfa_offset 0
 23623 022c 7047     		bx	lr
 23624              	.L906:
 23625 022e 00BF     		.align	2
 23626              	.L905:
 23627 0230 00000000 		.word	g_mem
 23628 0234 E81F0000 		.word	.LC309
 23629              		.cfi_endproc
 23630              	.LFE89:
 23631              		.size	memInit_SoftHandPro, .-memInit_SoftHandPro
 23632              		.section	.text.memInit_Master,"ax",%progbits
 23633              		.align	2
 23634              		.global	memInit_Master
 23635              		.thumb
 23636              		.thumb_func
 23637              		.type	memInit_Master, %function
 23638              	memInit_Master:
 23639              	.LFB90:
3266:..\src/command_processing.c **** 
3267:..\src/command_processing.c **** //==============================================================================
3268:..\src/command_processing.c **** //                                                            MEMORY INIT MASTER
3269:..\src/command_processing.c **** //==============================================================================
3270:..\src/command_processing.c **** void memInit_Master(void)
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 517


3271:..\src/command_processing.c **** {
 23640              		.loc 1 3271 0
 23641              		.cfi_startproc
 23642              		@ args = 0, pretend = 0, frame = 0
 23643              		@ frame_needed = 1, uses_anonymous_args = 0
 23644              		@ link register save eliminated.
 23645 0000 80B4     		push	{r7}
 23646              		.cfi_def_cfa_offset 4
 23647              		.cfi_offset 7, -4
 23648 0002 00AF     		add	r7, sp, #0
 23649              		.cfi_def_cfa_register 7
3272:..\src/command_processing.c ****     g_mem.dev.id                = 2;
 23650              		.loc 1 3272 0
 23651 0004 074B     		ldr	r3, .L908
 23652 0006 0222     		movs	r2, #2
 23653 0008 83F8A020 		strb	r2, [r3, #160]
3273:..\src/command_processing.c ****     
3274:..\src/command_processing.c ****     // MS STRUCT
3275:..\src/command_processing.c ****     g_mem.MS.slave_ID = 1;
 23654              		.loc 1 3275 0
 23655 000c 054B     		ldr	r3, .L908
 23656 000e 0122     		movs	r2, #1
 23657 0010 83F8C122 		strb	r2, [r3, #705]
3276:..\src/command_processing.c ****     g_mem.MS.slave_comm_active = FALSE;
 23658              		.loc 1 3276 0
 23659 0014 034B     		ldr	r3, .L908
 23660 0016 0022     		movs	r2, #0
 23661 0018 83F8C022 		strb	r2, [r3, #704]
3277:..\src/command_processing.c **** }
 23662              		.loc 1 3277 0
 23663 001c 00BF     		nop
 23664 001e BD46     		mov	sp, r7
 23665              		.cfi_def_cfa_register 13
 23666              		@ sp needed
 23667 0020 80BC     		pop	{r7}
 23668              		.cfi_restore 7
 23669              		.cfi_def_cfa_offset 0
 23670 0022 7047     		bx	lr
 23671              	.L909:
 23672              		.align	2
 23673              	.L908:
 23674 0024 00000000 		.word	g_mem
 23675              		.cfi_endproc
 23676              	.LFE90:
 23677              		.size	memInit_Master, .-memInit_Master
 23678              		.section	.text.memInit_AirChambersFb,"ax",%progbits
 23679              		.align	2
 23680              		.global	memInit_AirChambersFb
 23681              		.thumb
 23682              		.thumb_func
 23683              		.type	memInit_AirChambersFb, %function
 23684              	memInit_AirChambersFb:
 23685              	.LFB91:
3278:..\src/command_processing.c **** 
3279:..\src/command_processing.c **** //==============================================================================
3280:..\src/command_processing.c **** //                                                   MEMORY INIT AIR CHAMBERS FB
3281:..\src/command_processing.c **** //==============================================================================
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 518


3282:..\src/command_processing.c **** void memInit_AirChambersFb(void)
3283:..\src/command_processing.c **** {
 23686              		.loc 1 3283 0
 23687              		.cfi_startproc
 23688              		@ args = 0, pretend = 0, frame = 0
 23689              		@ frame_needed = 1, uses_anonymous_args = 0
 23690              		@ link register save eliminated.
 23691 0000 80B4     		push	{r7}
 23692              		.cfi_def_cfa_offset 4
 23693              		.cfi_offset 7, -4
 23694 0002 00AF     		add	r7, sp, #0
 23695              		.cfi_def_cfa_register 7
3284:..\src/command_processing.c ****     // Default configuration with Air Chambers Haptic feedback
3285:..\src/command_processing.c ****     g_mem.dev.dev_type          = AIR_CHAMBERS_FB;
 23696              		.loc 1 3285 0
 23697 0004 1A4B     		ldr	r3, .L911
 23698 0006 0222     		movs	r2, #2
 23699 0008 83F8AC20 		strb	r2, [r3, #172]
3286:..\src/command_processing.c ****     
3287:..\src/command_processing.c ****     g_mem.motor[0].control_mode  = CONTROL_PWM;
 23700              		.loc 1 3287 0
 23701 000c 184B     		ldr	r3, .L911
 23702 000e 0122     		movs	r2, #1
 23703 0010 83F80F21 		strb	r2, [r3, #271]
3288:..\src/command_processing.c ****     
3289:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
3290:..\src/command_processing.c ****     // Default slave configuration for haptic feedback with SoftHand 2.0.3            
3291:..\src/command_processing.c ****     g_mem.motor[1].input_mode = INPUT_MODE_EMG_FCFS;
 23704              		.loc 1 3291 0
 23705 0014 164B     		ldr	r3, .L911
 23706 0016 0422     		movs	r2, #4
 23707 0018 83F87E21 		strb	r2, [r3, #382]
3292:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_inf = 0;
 23708              		.loc 1 3292 0
 23709 001c 144B     		ldr	r3, .L911
 23710 001e 0022     		movs	r2, #0
 23711 0020 C3F85421 		str	r2, [r3, #340]
3293:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_sup = (int32)22000 << g_mem.enc[g_mem.motor[1].encoder_line].res[0];
 23712              		.loc 1 3293 0
 23713 0024 124B     		ldr	r3, .L911
 23714 0026 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23715 002a 1946     		mov	r1, r3
 23716 002c 104A     		ldr	r2, .L911
 23717 002e 0B46     		mov	r3, r1
 23718 0030 5B00     		lsls	r3, r3, #1
 23719 0032 0B44     		add	r3, r3, r1
 23720 0034 1B01     		lsls	r3, r3, #4
 23721 0036 1344     		add	r3, r3, r2
 23722 0038 03F29513 		addw	r3, r3, #405
 23723 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23724 003e 1A46     		mov	r2, r3
 23725 0040 45F2F053 		movw	r3, #22000
 23726 0044 9340     		lsls	r3, r3, r2
 23727 0046 0A4A     		ldr	r2, .L911
 23728 0048 C2F85831 		str	r3, [r2, #344]
3294:..\src/command_processing.c ****     
3295:..\src/command_processing.c ****     // FB STRUCT
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 519


3296:..\src/command_processing.c ****     g_mem.FB.max_residual_current = 450;
 23729              		.loc 1 3296 0
 23730 004c 084B     		ldr	r3, .L911
 23731 004e 4FF4E172 		mov	r2, #450
 23732 0052 C3F8D022 		str	r2, [r3, #720]
3297:..\src/command_processing.c ****     g_mem.FB.maximum_pressure_kPa = 25.0;
 23733              		.loc 1 3297 0
 23734 0056 064B     		ldr	r3, .L911
 23735 0058 064A     		ldr	r2, .L911+4
 23736 005a C3F8D422 		str	r2, [r3, #724]	@ float
3298:..\src/command_processing.c ****     g_mem.FB.prop_err_fb_gain = 1.0;
 23737              		.loc 1 3298 0
 23738 005e 044B     		ldr	r3, .L911
 23739 0060 4FF07E52 		mov	r2, #1065353216
 23740 0064 C3F8D822 		str	r2, [r3, #728]	@ float
3299:..\src/command_processing.c **** }
 23741              		.loc 1 3299 0
 23742 0068 00BF     		nop
 23743 006a BD46     		mov	sp, r7
 23744              		.cfi_def_cfa_register 13
 23745              		@ sp needed
 23746 006c 80BC     		pop	{r7}
 23747              		.cfi_restore 7
 23748              		.cfi_def_cfa_offset 0
 23749 006e 7047     		bx	lr
 23750              	.L912:
 23751              		.align	2
 23752              	.L911:
 23753 0070 00000000 		.word	g_mem
 23754 0074 0000C841 		.word	1103626240
 23755              		.cfi_endproc
 23756              	.LFE91:
 23757              		.size	memInit_AirChambersFb, .-memInit_AirChambersFb
 23758              		.section	.text.memInit_OtbkActWristMs,"ax",%progbits
 23759              		.align	2
 23760              		.global	memInit_OtbkActWristMs
 23761              		.thumb
 23762              		.thumb_func
 23763              		.type	memInit_OtbkActWristMs, %function
 23764              	memInit_OtbkActWristMs:
 23765              	.LFB92:
3300:..\src/command_processing.c **** 
3301:..\src/command_processing.c **** //==============================================================================
3302:..\src/command_processing.c **** //                                   MEMORY INIT OTTOBOCK ACTIVE WRIST MASTER FB
3303:..\src/command_processing.c **** //==============================================================================
3304:..\src/command_processing.c **** void memInit_OtbkActWristMs(void)
3305:..\src/command_processing.c **** {
 23766              		.loc 1 3305 0
 23767              		.cfi_startproc
 23768              		@ args = 0, pretend = 0, frame = 0
 23769              		@ frame_needed = 1, uses_anonymous_args = 0
 23770              		@ link register save eliminated.
 23771 0000 80B4     		push	{r7}
 23772              		.cfi_def_cfa_offset 4
 23773              		.cfi_offset 7, -4
 23774 0002 00AF     		add	r7, sp, #0
 23775              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 520


3306:..\src/command_processing.c ****     // Default configuration with Ottobock Active Wrist feedback
3307:..\src/command_processing.c ****     g_mem.dev.dev_type  = OTBK_ACT_WRIST_MS;
 23776              		.loc 1 3307 0
 23777 0004 294B     		ldr	r3, .L914
 23778 0006 0322     		movs	r2, #3
 23779 0008 83F8AC20 		strb	r2, [r3, #172]
3308:..\src/command_processing.c ****     g_mem.dev.right_left = LEFT_HAND;
 23780              		.loc 1 3308 0
 23781 000c 274B     		ldr	r3, .L914
 23782 000e 0122     		movs	r2, #1
 23783 0010 83F8A720 		strb	r2, [r3, #167]
3309:..\src/command_processing.c ****     
3310:..\src/command_processing.c ****     g_mem.motor[0].control_mode = CONTROL_PWM;
 23784              		.loc 1 3310 0
 23785 0014 254B     		ldr	r3, .L914
 23786 0016 0122     		movs	r2, #1
 23787 0018 83F80F21 		strb	r2, [r3, #271]
3311:..\src/command_processing.c ****     g_mem.motor[0].pwm_rate_limiter = 100;
 23788              		.loc 1 3311 0
 23789 001c 234B     		ldr	r3, .L914
 23790 001e 6422     		movs	r2, #100
 23791 0020 83F81121 		strb	r2, [r3, #273]
3312:..\src/command_processing.c ****     g_mem.motor[0].not_revers_motor_flag = FALSE;
 23792              		.loc 1 3312 0
 23793 0024 214B     		ldr	r3, .L914
 23794 0026 0022     		movs	r2, #0
 23795 0028 83F81221 		strb	r2, [r3, #274]
3313:..\src/command_processing.c ****     
3314:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
3315:..\src/command_processing.c ****     // Default slave configuration for SoftHand 3.0            
3316:..\src/command_processing.c ****     g_mem.motor[1].input_mode = INPUT_MODE_EMG_FCFS;
 23796              		.loc 1 3316 0
 23797 002c 1F4B     		ldr	r3, .L914
 23798 002e 0422     		movs	r2, #4
 23799 0030 83F87E21 		strb	r2, [r3, #382]
3317:..\src/command_processing.c ****     g_mem.motor[1].encoder_line  = g_mem.dev.right_left;
 23800              		.loc 1 3317 0
 23801 0034 1D4B     		ldr	r3, .L914
 23802 0036 93F8A720 		ldrb	r2, [r3, #167]	@ zero_extendqisi2
 23803 003a 1C4B     		ldr	r3, .L914
 23804 003c 83F88021 		strb	r2, [r3, #384]
3318:..\src/command_processing.c ****     g_mem.motor[1].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 23805              		.loc 1 3318 0
 23806 0040 1A4B     		ldr	r3, .L914
 23807 0042 0122     		movs	r2, #1
 23808 0044 83F88121 		strb	r2, [r3, #385]
3319:..\src/command_processing.c ****     g_mem.motor[1].not_revers_motor_flag = FALSE;       // False, because it is important only to c
 23809              		.loc 1 3319 0
 23810 0048 184B     		ldr	r3, .L914
 23811 004a 0022     		movs	r2, #0
 23812 004c 83F88221 		strb	r2, [r3, #386]
3320:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_inf = 0;
 23813              		.loc 1 3320 0
 23814 0050 164B     		ldr	r3, .L914
 23815 0052 0022     		movs	r2, #0
 23816 0054 C3F85421 		str	r2, [r3, #340]
3321:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[1].encoder_line].res[0];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 521


 23817              		.loc 1 3321 0
 23818 0058 144B     		ldr	r3, .L914
 23819 005a 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23820 005e 1946     		mov	r1, r3
 23821 0060 124A     		ldr	r2, .L914
 23822 0062 0B46     		mov	r3, r1
 23823 0064 5B00     		lsls	r3, r3, #1
 23824 0066 0B44     		add	r3, r3, r1
 23825 0068 1B01     		lsls	r3, r3, #4
 23826 006a 1344     		add	r3, r3, r2
 23827 006c 03F29513 		addw	r3, r3, #405
 23828 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23829 0072 1A46     		mov	r2, r3
 23830 0074 4FF47A53 		mov	r3, #16000
 23831 0078 9340     		lsls	r3, r3, r2
 23832 007a 0C4A     		ldr	r2, .L914
 23833 007c C2F85831 		str	r3, [r2, #344]
3322:..\src/command_processing.c ****     
3323:..\src/command_processing.c ****     // WR STRUCT
3324:..\src/command_processing.c ****     g_mem.WR.activation_mode = 0;                // Default Fast:wrist/syn2, Slow:hand/syn1
 23834              		.loc 1 3324 0
 23835 0080 0A4B     		ldr	r3, .L914
 23836 0082 0022     		movs	r2, #0
 23837 0084 83F8E022 		strb	r2, [r3, #736]
3325:..\src/command_processing.c ****     g_mem.WR.fast_act_threshold[0] = 800;
 23838              		.loc 1 3325 0
 23839 0088 084B     		ldr	r3, .L914
 23840 008a 4FF44872 		mov	r2, #800
 23841 008e A3F8E222 		strh	r2, [r3, #738]	@ movhi
3326:..\src/command_processing.c ****     g_mem.WR.fast_act_threshold[1] = 800;
 23842              		.loc 1 3326 0
 23843 0092 064B     		ldr	r3, .L914
 23844 0094 4FF44872 		mov	r2, #800
 23845 0098 A3F8E422 		strh	r2, [r3, #740]	@ movhi
3327:..\src/command_processing.c ****     g_mem.WR.wrist_direction_association = 0;   // Default Close:CW, Open:CCW
 23846              		.loc 1 3327 0
 23847 009c 034B     		ldr	r3, .L914
 23848 009e 0022     		movs	r2, #0
 23849 00a0 83F8E622 		strb	r2, [r3, #742]
3328:..\src/command_processing.c **** }
 23850              		.loc 1 3328 0
 23851 00a4 00BF     		nop
 23852 00a6 BD46     		mov	sp, r7
 23853              		.cfi_def_cfa_register 13
 23854              		@ sp needed
 23855 00a8 80BC     		pop	{r7}
 23856              		.cfi_restore 7
 23857              		.cfi_def_cfa_offset 0
 23858 00aa 7047     		bx	lr
 23859              	.L915:
 23860              		.align	2
 23861              	.L914:
 23862 00ac 00000000 		.word	g_mem
 23863              		.cfi_endproc
 23864              	.LFE92:
 23865              		.size	memInit_OtbkActWristMs, .-memInit_OtbkActWristMs
 23866              		.section	.text.cmd_get_measurements,"ax",%progbits
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 522


 23867              		.align	2
 23868              		.global	cmd_get_measurements
 23869              		.thumb
 23870              		.thumb_func
 23871              		.type	cmd_get_measurements, %function
 23872              	cmd_get_measurements:
 23873              	.LFB93:
3329:..\src/command_processing.c **** 
3330:..\src/command_processing.c **** //==============================================================================
3331:..\src/command_processing.c **** //                                                    ROUTINE INTERRUPT FUNCTION
3332:..\src/command_processing.c **** //==============================================================================
3333:..\src/command_processing.c **** /**
3334:..\src/command_processing.c **** * Bunch of functions used on request from UART communication
3335:..\src/command_processing.c **** **/
3336:..\src/command_processing.c **** 
3337:..\src/command_processing.c **** void cmd_get_measurements(){
 23874              		.loc 1 3337 0
 23875              		.cfi_startproc
 23876              		@ args = 0, pretend = 0, frame = 16
 23877              		@ frame_needed = 1, uses_anonymous_args = 0
 23878 0000 90B5     		push	{r4, r7, lr}
 23879              		.cfi_def_cfa_offset 12
 23880              		.cfi_offset 4, -12
 23881              		.cfi_offset 7, -8
 23882              		.cfi_offset 14, -4
 23883 0002 85B0     		sub	sp, sp, #20
 23884              		.cfi_def_cfa_offset 32
 23885 0004 00AF     		add	r7, sp, #0
 23886              		.cfi_def_cfa_register 7
3338:..\src/command_processing.c ****  
3339:..\src/command_processing.c ****     uint8 CYDATA index;
3340:..\src/command_processing.c ****     int16 aux_int16;
3341:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3342:..\src/command_processing.c ****     
3343:..\src/command_processing.c ****     uint8 packet_data[8]; 
3344:..\src/command_processing.c ****     
3345:..\src/command_processing.c ****     //Header package
3346:..\src/command_processing.c ****     packet_data[0] = CMD_GET_MEASUREMENTS;   
 23887              		.loc 1 3346 0
 23888 0006 8423     		movs	r3, #132
 23889 0008 3B71     		strb	r3, [r7, #4]
3347:..\src/command_processing.c ****     
3348:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 23890              		.loc 1 3348 0
 23891 000a 0323     		movs	r3, #3
 23892 000c FB73     		strb	r3, [r7, #15]
 23893 000e 38E0     		b	.L917
 23894              	.L918:
3349:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 23895              		.loc 1 3349 0
 23896 0010 434B     		ldr	r3, .L920
 23897 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23898 0016 1A46     		mov	r2, r3
 23899 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23900 001a 4248     		ldr	r0, .L920+4
 23901 001c 1346     		mov	r3, r2
 23902 001e 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 523


 23903 0020 1344     		add	r3, r3, r2
 23904 0022 9B00     		lsls	r3, r3, #2
 23905 0024 1344     		add	r3, r3, r2
 23906 0026 0B44     		add	r3, r3, r1
 23907 0028 50F82320 		ldr	r2, [r0, r3, lsl #2]
 23908 002c 3C4B     		ldr	r3, .L920
 23909 002e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23910 0032 1C46     		mov	r4, r3
 23911 0034 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23912 0036 3A48     		ldr	r0, .L920
 23913 0038 2346     		mov	r3, r4
 23914 003a 5B00     		lsls	r3, r3, #1
 23915 003c 2344     		add	r3, r3, r4
 23916 003e 1B01     		lsls	r3, r3, #4
 23917 0040 0344     		add	r3, r3, r0
 23918 0042 0B44     		add	r3, r3, r1
 23919 0044 03F29513 		addw	r3, r3, #405
 23920 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23921 004a 42FA03F3 		asr	r3, r2, r3
 23922 004e 1BB2     		sxth	r3, r3
 23923 0050 BB81     		strh	r3, [r7, #12]	@ movhi
3350:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 23924              		.loc 1 3350 0
 23925 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23926 0054 5B00     		lsls	r3, r3, #1
 23927 0056 0233     		adds	r3, r3, #2
 23928 0058 07F10C02 		add	r2, r7, #12
 23929 005c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 23930 005e 07F11001 		add	r1, r7, #16
 23931 0062 0B44     		add	r3, r3, r1
 23932 0064 03F80C2C 		strb	r2, [r3, #-12]
3351:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 23933              		.loc 1 3351 0
 23934 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23935 006a 5B00     		lsls	r3, r3, #1
 23936 006c 5A1C     		adds	r2, r3, #1
 23937 006e 07F10C03 		add	r3, r7, #12
 23938 0072 0133     		adds	r3, r3, #1
 23939 0074 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23940 0076 07F11003 		add	r3, r7, #16
 23941 007a 1344     		add	r3, r3, r2
 23942 007c 0A46     		mov	r2, r1
 23943 007e 03F80C2C 		strb	r2, [r3, #-12]
 23944              	.L917:
3348:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 23945              		.loc 1 3348 0 discriminator 1
 23946 0082 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23947 0084 5A1E     		subs	r2, r3, #1
 23948 0086 FA73     		strb	r2, [r7, #15]
 23949 0088 002B     		cmp	r3, #0
 23950 008a C1D1     		bne	.L918
3352:..\src/command_processing.c ****     }
3353:..\src/command_processing.c **** 
3354:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE){
 23951              		.loc 1 3354 0
 23952 008c 244B     		ldr	r3, .L920
 23953 008e 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 524


 23954 0092 012B     		cmp	r3, #1
 23955 0094 34D1     		bne	.L919
3355:..\src/command_processing.c ****         //Overwrite only second measure with first encoder on second motor line (just to have a mea
3356:..\src/command_processing.c ****         index = 1;
 23956              		.loc 1 3356 0
 23957 0096 0123     		movs	r3, #1
 23958 0098 FB73     		strb	r3, [r7, #15]
3357:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[1].encoder_line].pos[0] >> g_mem.enc[g_mem.motor[
 23959              		.loc 1 3357 0
 23960 009a 214B     		ldr	r3, .L920
 23961 009c 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23962 00a0 1946     		mov	r1, r3
 23963 00a2 204A     		ldr	r2, .L920+4
 23964 00a4 3423     		movs	r3, #52
 23965 00a6 03FB01F3 		mul	r3, r3, r1
 23966 00aa 1344     		add	r3, r3, r2
 23967 00ac 1A68     		ldr	r2, [r3]
 23968 00ae 1C4B     		ldr	r3, .L920
 23969 00b0 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23970 00b4 1846     		mov	r0, r3
 23971 00b6 1A49     		ldr	r1, .L920
 23972 00b8 0346     		mov	r3, r0
 23973 00ba 5B00     		lsls	r3, r3, #1
 23974 00bc 0344     		add	r3, r3, r0
 23975 00be 1B01     		lsls	r3, r3, #4
 23976 00c0 0B44     		add	r3, r3, r1
 23977 00c2 03F29513 		addw	r3, r3, #405
 23978 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23979 00c8 42FA03F3 		asr	r3, r2, r3
 23980 00cc 1BB2     		sxth	r3, r3
 23981 00ce BB81     		strh	r3, [r7, #12]	@ movhi
3358:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 23982              		.loc 1 3358 0
 23983 00d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23984 00d2 5B00     		lsls	r3, r3, #1
 23985 00d4 0233     		adds	r3, r3, #2
 23986 00d6 07F10C02 		add	r2, r7, #12
 23987 00da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 23988 00dc 07F11001 		add	r1, r7, #16
 23989 00e0 0B44     		add	r3, r3, r1
 23990 00e2 03F80C2C 		strb	r2, [r3, #-12]
3359:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 23991              		.loc 1 3359 0
 23992 00e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23993 00e8 5B00     		lsls	r3, r3, #1
 23994 00ea 5A1C     		adds	r2, r3, #1
 23995 00ec 07F10C03 		add	r3, r7, #12
 23996 00f0 0133     		adds	r3, r3, #1
 23997 00f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23998 00f4 07F11003 		add	r3, r7, #16
 23999 00f8 1344     		add	r3, r3, r2
 24000 00fa 0A46     		mov	r2, r1
 24001 00fc 03F80C2C 		strb	r2, [r3, #-12]
 24002              	.L919:
3360:..\src/command_processing.c ****     }
3361:..\src/command_processing.c ****     
3362:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 525


3363:..\src/command_processing.c **** 
3364:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 24003              		.loc 1 3364 0
 24004 0100 3B1D     		adds	r3, r7, #4
 24005 0102 0721     		movs	r1, #7
 24006 0104 1846     		mov	r0, r3
 24007 0106 FFF7FEFF 		bl	LCRChecksum
 24008 010a 0346     		mov	r3, r0
 24009 010c FB72     		strb	r3, [r7, #11]
3365:..\src/command_processing.c **** 
3366:..\src/command_processing.c ****     commWrite(packet_data, 8);
 24010              		.loc 1 3366 0
 24011 010e 3B1D     		adds	r3, r7, #4
 24012 0110 0821     		movs	r1, #8
 24013 0112 1846     		mov	r0, r3
 24014 0114 FFF7FEFF 		bl	commWrite
3367:..\src/command_processing.c ****    
3368:..\src/command_processing.c **** }
 24015              		.loc 1 3368 0
 24016 0118 00BF     		nop
 24017 011a 1437     		adds	r7, r7, #20
 24018              		.cfi_def_cfa_offset 12
 24019 011c BD46     		mov	sp, r7
 24020              		.cfi_def_cfa_register 13
 24021              		@ sp needed
 24022 011e 90BD     		pop	{r4, r7, pc}
 24023              	.L921:
 24024              		.align	2
 24025              	.L920:
 24026 0120 00000000 		.word	g_mem
 24027 0124 00000000 		.word	g_measOld
 24028              		.cfi_endproc
 24029              	.LFE93:
 24030              		.size	cmd_get_measurements, .-cmd_get_measurements
 24031              		.section	.text.cmd_get_velocities,"ax",%progbits
 24032              		.align	2
 24033              		.global	cmd_get_velocities
 24034              		.thumb
 24035              		.thumb_func
 24036              		.type	cmd_get_velocities, %function
 24037              	cmd_get_velocities:
 24038              	.LFB94:
3369:..\src/command_processing.c **** 
3370:..\src/command_processing.c **** void cmd_get_velocities(){
 24039              		.loc 1 3370 0
 24040              		.cfi_startproc
 24041              		@ args = 0, pretend = 0, frame = 16
 24042              		@ frame_needed = 1, uses_anonymous_args = 0
 24043 0000 90B5     		push	{r4, r7, lr}
 24044              		.cfi_def_cfa_offset 12
 24045              		.cfi_offset 4, -12
 24046              		.cfi_offset 7, -8
 24047              		.cfi_offset 14, -4
 24048 0002 85B0     		sub	sp, sp, #20
 24049              		.cfi_def_cfa_offset 32
 24050 0004 00AF     		add	r7, sp, #0
 24051              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 526


3371:..\src/command_processing.c ****  
3372:..\src/command_processing.c ****     uint8 CYDATA index;
3373:..\src/command_processing.c ****     int16 aux_int16;
3374:..\src/command_processing.c ****    
3375:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3376:..\src/command_processing.c ****     
3377:..\src/command_processing.c ****     uint8 packet_data[8]; 
3378:..\src/command_processing.c ****     
3379:..\src/command_processing.c ****     //Header package
3380:..\src/command_processing.c ****     packet_data[0] = CMD_GET_VELOCITIES;
 24052              		.loc 1 3380 0
 24053 0006 8923     		movs	r3, #137
 24054 0008 3B71     		strb	r3, [r7, #4]
3381:..\src/command_processing.c ****     
3382:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 24055              		.loc 1 3382 0
 24056 000a 0323     		movs	r3, #3
 24057 000c FB73     		strb	r3, [r7, #15]
 24058 000e 3AE0     		b	.L923
 24059              	.L924:
3383:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 24060              		.loc 1 3383 0
 24061 0010 274B     		ldr	r3, .L925
 24062 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24063 0016 1A46     		mov	r2, r3
 24064 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24065 001a 2648     		ldr	r0, .L925+4
 24066 001c 1346     		mov	r3, r2
 24067 001e 5B00     		lsls	r3, r3, #1
 24068 0020 1344     		add	r3, r3, r2
 24069 0022 9B00     		lsls	r3, r3, #2
 24070 0024 1344     		add	r3, r3, r2
 24071 0026 0B44     		add	r3, r3, r1
 24072 0028 0633     		adds	r3, r3, #6
 24073 002a 9B00     		lsls	r3, r3, #2
 24074 002c 0344     		add	r3, r3, r0
 24075 002e 5A68     		ldr	r2, [r3, #4]
 24076 0030 1F4B     		ldr	r3, .L925
 24077 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24078 0036 1C46     		mov	r4, r3
 24079 0038 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24080 003a 1D48     		ldr	r0, .L925
 24081 003c 2346     		mov	r3, r4
 24082 003e 5B00     		lsls	r3, r3, #1
 24083 0040 2344     		add	r3, r3, r4
 24084 0042 1B01     		lsls	r3, r3, #4
 24085 0044 0344     		add	r3, r3, r0
 24086 0046 0B44     		add	r3, r3, r1
 24087 0048 03F29513 		addw	r3, r3, #405
 24088 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24089 004e 42FA03F3 		asr	r3, r2, r3
 24090 0052 1BB2     		sxth	r3, r3
 24091 0054 BB81     		strh	r3, [r7, #12]	@ movhi
3384:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 24092              		.loc 1 3384 0
 24093 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24094 0058 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 527


 24095 005a 0233     		adds	r3, r3, #2
 24096 005c 07F10C02 		add	r2, r7, #12
 24097 0060 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 24098 0062 07F11001 		add	r1, r7, #16
 24099 0066 0B44     		add	r3, r3, r1
 24100 0068 03F80C2C 		strb	r2, [r3, #-12]
3385:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 24101              		.loc 1 3385 0
 24102 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24103 006e 5B00     		lsls	r3, r3, #1
 24104 0070 5A1C     		adds	r2, r3, #1
 24105 0072 07F10C03 		add	r3, r7, #12
 24106 0076 0133     		adds	r3, r3, #1
 24107 0078 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24108 007a 07F11003 		add	r3, r7, #16
 24109 007e 1344     		add	r3, r3, r2
 24110 0080 0A46     		mov	r2, r1
 24111 0082 03F80C2C 		strb	r2, [r3, #-12]
 24112              	.L923:
3382:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 24113              		.loc 1 3382 0 discriminator 1
 24114 0086 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24115 0088 5A1E     		subs	r2, r3, #1
 24116 008a FA73     		strb	r2, [r7, #15]
 24117 008c 002B     		cmp	r3, #0
 24118 008e BFD1     		bne	.L924
3386:..\src/command_processing.c ****     }
3387:..\src/command_processing.c ****             
3388:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3389:..\src/command_processing.c **** 
3390:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 24119              		.loc 1 3390 0
 24120 0090 3B1D     		adds	r3, r7, #4
 24121 0092 0721     		movs	r1, #7
 24122 0094 1846     		mov	r0, r3
 24123 0096 FFF7FEFF 		bl	LCRChecksum
 24124 009a 0346     		mov	r3, r0
 24125 009c FB72     		strb	r3, [r7, #11]
3391:..\src/command_processing.c **** 
3392:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 24126              		.loc 1 3392 0
 24127 009e 3B1D     		adds	r3, r7, #4
 24128 00a0 0821     		movs	r1, #8
 24129 00a2 1846     		mov	r0, r3
 24130 00a4 FFF7FEFF 		bl	commWrite
3393:..\src/command_processing.c **** }
 24131              		.loc 1 3393 0
 24132 00a8 00BF     		nop
 24133 00aa 1437     		adds	r7, r7, #20
 24134              		.cfi_def_cfa_offset 12
 24135 00ac BD46     		mov	sp, r7
 24136              		.cfi_def_cfa_register 13
 24137              		@ sp needed
 24138 00ae 90BD     		pop	{r4, r7, pc}
 24139              	.L926:
 24140              		.align	2
 24141              	.L925:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 528


 24142 00b0 00000000 		.word	g_mem
 24143 00b4 00000000 		.word	g_measOld
 24144              		.cfi_endproc
 24145              	.LFE94:
 24146              		.size	cmd_get_velocities, .-cmd_get_velocities
 24147              		.section	.text.cmd_get_accelerations,"ax",%progbits
 24148              		.align	2
 24149              		.global	cmd_get_accelerations
 24150              		.thumb
 24151              		.thumb_func
 24152              		.type	cmd_get_accelerations, %function
 24153              	cmd_get_accelerations:
 24154              	.LFB95:
3394:..\src/command_processing.c **** 
3395:..\src/command_processing.c **** void cmd_get_accelerations(){
 24155              		.loc 1 3395 0
 24156              		.cfi_startproc
 24157              		@ args = 0, pretend = 0, frame = 16
 24158              		@ frame_needed = 1, uses_anonymous_args = 0
 24159 0000 90B5     		push	{r4, r7, lr}
 24160              		.cfi_def_cfa_offset 12
 24161              		.cfi_offset 4, -12
 24162              		.cfi_offset 7, -8
 24163              		.cfi_offset 14, -4
 24164 0002 85B0     		sub	sp, sp, #20
 24165              		.cfi_def_cfa_offset 32
 24166 0004 00AF     		add	r7, sp, #0
 24167              		.cfi_def_cfa_register 7
3396:..\src/command_processing.c ****  
3397:..\src/command_processing.c ****     uint8 CYDATA index;
3398:..\src/command_processing.c ****     int16 aux_int16;
3399:..\src/command_processing.c ****     
3400:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3401:..\src/command_processing.c ****     
3402:..\src/command_processing.c ****     uint8 packet_data[8]; 
3403:..\src/command_processing.c ****     
3404:..\src/command_processing.c ****     //Header package
3405:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACCEL;   
 24168              		.loc 1 3405 0
 24169 0006 8B23     		movs	r3, #139
 24170 0008 3B71     		strb	r3, [r7, #4]
3406:..\src/command_processing.c ****     
3407:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 24171              		.loc 1 3407 0
 24172 000a 0323     		movs	r3, #3
 24173 000c FB73     		strb	r3, [r7, #15]
 24174 000e 39E0     		b	.L928
 24175              	.L929:
3408:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 24176              		.loc 1 3408 0
 24177 0010 274B     		ldr	r3, .L930
 24178 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24179 0016 1A46     		mov	r2, r3
 24180 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24181 001a 2648     		ldr	r0, .L930+4
 24182 001c 1346     		mov	r3, r2
 24183 001e 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 529


 24184 0020 1344     		add	r3, r3, r2
 24185 0022 9B00     		lsls	r3, r3, #2
 24186 0024 1344     		add	r3, r3, r2
 24187 0026 0B44     		add	r3, r3, r1
 24188 0028 0A33     		adds	r3, r3, #10
 24189 002a 50F82320 		ldr	r2, [r0, r3, lsl #2]
 24190 002e 204B     		ldr	r3, .L930
 24191 0030 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24192 0034 1C46     		mov	r4, r3
 24193 0036 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24194 0038 1D48     		ldr	r0, .L930
 24195 003a 2346     		mov	r3, r4
 24196 003c 5B00     		lsls	r3, r3, #1
 24197 003e 2344     		add	r3, r3, r4
 24198 0040 1B01     		lsls	r3, r3, #4
 24199 0042 0344     		add	r3, r3, r0
 24200 0044 0B44     		add	r3, r3, r1
 24201 0046 03F29513 		addw	r3, r3, #405
 24202 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24203 004c 42FA03F3 		asr	r3, r2, r3
 24204 0050 1BB2     		sxth	r3, r3
 24205 0052 BB81     		strh	r3, [r7, #12]	@ movhi
3409:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 24206              		.loc 1 3409 0
 24207 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24208 0056 5B00     		lsls	r3, r3, #1
 24209 0058 0233     		adds	r3, r3, #2
 24210 005a 07F10C02 		add	r2, r7, #12
 24211 005e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 24212 0060 07F11001 		add	r1, r7, #16
 24213 0064 0B44     		add	r3, r3, r1
 24214 0066 03F80C2C 		strb	r2, [r3, #-12]
3410:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 24215              		.loc 1 3410 0
 24216 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24217 006c 5B00     		lsls	r3, r3, #1
 24218 006e 5A1C     		adds	r2, r3, #1
 24219 0070 07F10C03 		add	r3, r7, #12
 24220 0074 0133     		adds	r3, r3, #1
 24221 0076 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24222 0078 07F11003 		add	r3, r7, #16
 24223 007c 1344     		add	r3, r3, r2
 24224 007e 0A46     		mov	r2, r1
 24225 0080 03F80C2C 		strb	r2, [r3, #-12]
 24226              	.L928:
3407:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 24227              		.loc 1 3407 0 discriminator 1
 24228 0084 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24229 0086 5A1E     		subs	r2, r3, #1
 24230 0088 FA73     		strb	r2, [r7, #15]
 24231 008a 002B     		cmp	r3, #0
 24232 008c C0D1     		bne	.L929
3411:..\src/command_processing.c ****     }
3412:..\src/command_processing.c ****     
3413:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3414:..\src/command_processing.c **** 
3415:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 530


 24233              		.loc 1 3415 0
 24234 008e 3B1D     		adds	r3, r7, #4
 24235 0090 0721     		movs	r1, #7
 24236 0092 1846     		mov	r0, r3
 24237 0094 FFF7FEFF 		bl	LCRChecksum
 24238 0098 0346     		mov	r3, r0
 24239 009a FB72     		strb	r3, [r7, #11]
3416:..\src/command_processing.c **** 
3417:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 24240              		.loc 1 3417 0
 24241 009c 3B1D     		adds	r3, r7, #4
 24242 009e 0821     		movs	r1, #8
 24243 00a0 1846     		mov	r0, r3
 24244 00a2 FFF7FEFF 		bl	commWrite
3418:..\src/command_processing.c **** }
 24245              		.loc 1 3418 0
 24246 00a6 00BF     		nop
 24247 00a8 1437     		adds	r7, r7, #20
 24248              		.cfi_def_cfa_offset 12
 24249 00aa BD46     		mov	sp, r7
 24250              		.cfi_def_cfa_register 13
 24251              		@ sp needed
 24252 00ac 90BD     		pop	{r4, r7, pc}
 24253              	.L931:
 24254 00ae 00BF     		.align	2
 24255              	.L930:
 24256 00b0 00000000 		.word	g_mem
 24257 00b4 00000000 		.word	g_measOld
 24258              		.cfi_endproc
 24259              	.LFE95:
 24260              		.size	cmd_get_accelerations, .-cmd_get_accelerations
 24261              		.section	.text.cmd_get_joystick,"ax",%progbits
 24262              		.align	2
 24263              		.global	cmd_get_joystick
 24264              		.thumb
 24265              		.thumb_func
 24266              		.type	cmd_get_joystick, %function
 24267              	cmd_get_joystick:
 24268              	.LFB96:
3419:..\src/command_processing.c **** 
3420:..\src/command_processing.c **** void cmd_get_joystick() {
 24269              		.loc 1 3420 0
 24270              		.cfi_startproc
 24271              		@ args = 0, pretend = 0, frame = 8
 24272              		@ frame_needed = 1, uses_anonymous_args = 0
 24273 0000 80B5     		push	{r7, lr}
 24274              		.cfi_def_cfa_offset 8
 24275              		.cfi_offset 7, -8
 24276              		.cfi_offset 14, -4
 24277 0002 82B0     		sub	sp, sp, #8
 24278              		.cfi_def_cfa_offset 16
 24279 0004 00AF     		add	r7, sp, #0
 24280              		.cfi_def_cfa_register 7
3421:..\src/command_processing.c ****  
3422:..\src/command_processing.c ****     int16 aux_int16;
3423:..\src/command_processing.c ****     
3424:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 531


3425:..\src/command_processing.c ****     
3426:..\src/command_processing.c ****     uint8 packet_data[6];
3427:..\src/command_processing.c ****     
3428:..\src/command_processing.c ****     // Header        
3429:..\src/command_processing.c ****     packet_data[0] = CMD_GET_JOYSTICK;
 24281              		.loc 1 3429 0
 24282 0006 9223     		movs	r3, #146
 24283 0008 3B70     		strb	r3, [r7]
3430:..\src/command_processing.c ****     
3431:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.joystick[0];
 24284              		.loc 1 3431 0
 24285 000a 134B     		ldr	r3, .L933
 24286 000c 1B6A     		ldr	r3, [r3, #32]
 24287 000e 1BB2     		sxth	r3, r3
 24288 0010 FB80     		strh	r3, [r7, #6]	@ movhi
3432:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 24289              		.loc 1 3432 0
 24290 0012 BB1D     		adds	r3, r7, #6
 24291 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24292 0016 BB70     		strb	r3, [r7, #2]
3433:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 24293              		.loc 1 3433 0
 24294 0018 BB1D     		adds	r3, r7, #6
 24295 001a 0133     		adds	r3, r3, #1
 24296 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24297 001e 7B70     		strb	r3, [r7, #1]
3434:..\src/command_processing.c ****     
3435:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.joystick[1];
 24298              		.loc 1 3435 0
 24299 0020 0D4B     		ldr	r3, .L933
 24300 0022 5B6A     		ldr	r3, [r3, #36]
 24301 0024 1BB2     		sxth	r3, r3
 24302 0026 FB80     		strh	r3, [r7, #6]	@ movhi
3436:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 24303              		.loc 1 3436 0
 24304 0028 BB1D     		adds	r3, r7, #6
 24305 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24306 002c 3B71     		strb	r3, [r7, #4]
3437:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 24307              		.loc 1 3437 0
 24308 002e BB1D     		adds	r3, r7, #6
 24309 0030 0133     		adds	r3, r3, #1
 24310 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24311 0034 FB70     		strb	r3, [r7, #3]
3438:..\src/command_processing.c **** 
3439:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 24312              		.loc 1 3439 0
 24313 0036 3B46     		mov	r3, r7
 24314 0038 0521     		movs	r1, #5
 24315 003a 1846     		mov	r0, r3
 24316 003c FFF7FEFF 		bl	LCRChecksum
 24317 0040 0346     		mov	r3, r0
 24318 0042 7B71     		strb	r3, [r7, #5]
3440:..\src/command_processing.c **** 
3441:..\src/command_processing.c ****     commWrite(packet_data, 6);
 24319              		.loc 1 3441 0
 24320 0044 3B46     		mov	r3, r7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 532


 24321 0046 0621     		movs	r1, #6
 24322 0048 1846     		mov	r0, r3
 24323 004a FFF7FEFF 		bl	commWrite
3442:..\src/command_processing.c **** }
 24324              		.loc 1 3442 0
 24325 004e 00BF     		nop
 24326 0050 0837     		adds	r7, r7, #8
 24327              		.cfi_def_cfa_offset 8
 24328 0052 BD46     		mov	sp, r7
 24329              		.cfi_def_cfa_register 13
 24330              		@ sp needed
 24331 0054 80BD     		pop	{r7, pc}
 24332              	.L934:
 24333 0056 00BF     		.align	2
 24334              	.L933:
 24335 0058 00000000 		.word	g_adc_measOld
 24336              		.cfi_endproc
 24337              	.LFE96:
 24338              		.size	cmd_get_joystick, .-cmd_get_joystick
 24339              		.section	.text.cmd_set_inputs,"ax",%progbits
 24340              		.align	2
 24341              		.global	cmd_set_inputs
 24342              		.thumb
 24343              		.thumb_func
 24344              		.type	cmd_set_inputs, %function
 24345              	cmd_set_inputs:
 24346              	.LFB97:
3443:..\src/command_processing.c **** 
3444:..\src/command_processing.c **** void cmd_set_inputs(){
 24347              		.loc 1 3444 0
 24348              		.cfi_startproc
 24349              		@ args = 0, pretend = 0, frame = 8
 24350              		@ frame_needed = 1, uses_anonymous_args = 0
 24351              		@ link register save eliminated.
 24352 0000 90B4     		push	{r4, r7}
 24353              		.cfi_def_cfa_offset 8
 24354              		.cfi_offset 4, -8
 24355              		.cfi_offset 7, -4
 24356 0002 82B0     		sub	sp, sp, #8
 24357              		.cfi_def_cfa_offset 16
 24358 0004 00AF     		add	r7, sp, #0
 24359              		.cfi_def_cfa_register 7
3445:..\src/command_processing.c ****     
3446:..\src/command_processing.c ****     // Store position setted in right variables
3447:..\src/command_processing.c ****     int16 aux_int16[NUM_OF_MOTORS];
3448:..\src/command_processing.c ****     static int16 last_aux_int16[NUM_OF_MOTORS];
3449:..\src/command_processing.c ****     
3450:..\src/command_processing.c ****     aux_int16[0] = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 24360              		.loc 1 3450 0
 24361 0006 894B     		ldr	r3, .L949
 24362 0008 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 24363 000a 1B02     		lsls	r3, r3, #8
 24364 000c 1AB2     		sxth	r2, r3
 24365 000e 874B     		ldr	r3, .L949
 24366 0010 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 24367 0012 1BB2     		sxth	r3, r3
 24368 0014 1343     		orrs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 533


 24369 0016 1BB2     		sxth	r3, r3
 24370 0018 3B80     		strh	r3, [r7]	@ movhi
3451:..\src/command_processing.c ****     aux_int16[1] = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 24371              		.loc 1 3451 0
 24372 001a 844B     		ldr	r3, .L949
 24373 001c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 24374 001e 1B02     		lsls	r3, r3, #8
 24375 0020 1AB2     		sxth	r2, r3
 24376 0022 824B     		ldr	r3, .L949
 24377 0024 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 24378 0026 1BB2     		sxth	r3, r3
 24379 0028 1343     		orrs	r3, r3, r2
 24380 002a 1BB2     		sxth	r3, r3
 24381 002c 7B80     		strh	r3, [r7, #2]	@ movhi
 24382              	.LBB27:
3452:..\src/command_processing.c ****     
3453:..\src/command_processing.c ****     // Check if last command received was the same as this 
3454:..\src/command_processing.c ****     //(Note: last command not last motor reference in g_ref)
3455:..\src/command_processing.c ****     for (uint8 i = 0; i < (1 + c_mem.dev.use_2nd_motor_flag); i++) {
 24383              		.loc 1 3455 0
 24384 002e 0023     		movs	r3, #0
 24385 0030 FB71     		strb	r3, [r7, #7]
 24386 0032 1DE0     		b	.L936
 24387              	.L938:
3456:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 24388              		.loc 1 3456 0
 24389 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24390 0036 7E4A     		ldr	r2, .L949+4
 24391 0038 32F91320 		ldrsh	r2, [r2, r3, lsl #1]
 24392 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24393 003e 5B00     		lsls	r3, r3, #1
 24394 0040 07F10801 		add	r1, r7, #8
 24395 0044 0B44     		add	r3, r3, r1
 24396 0046 33F9083C 		ldrsh	r3, [r3, #-8]
 24397 004a 9A42     		cmp	r2, r3
 24398 004c 02D0     		beq	.L937
3457:..\src/command_processing.c ****             change_ext_ref_flag = TRUE;
 24399              		.loc 1 3457 0
 24400 004e 794B     		ldr	r3, .L949+8
 24401 0050 0122     		movs	r2, #1
 24402 0052 1A70     		strb	r2, [r3]
 24403              	.L937:
3458:..\src/command_processing.c ****        }
3459:..\src/command_processing.c ****         // Update last command
3460:..\src/command_processing.c ****        last_aux_int16[i] = aux_int16[i];
 24404              		.loc 1 3460 0 discriminator 2
 24405 0054 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 24406 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24407 0058 5B00     		lsls	r3, r3, #1
 24408 005a 07F10801 		add	r1, r7, #8
 24409 005e 0B44     		add	r3, r3, r1
 24410 0060 33F9081C 		ldrsh	r1, [r3, #-8]
 24411 0064 724B     		ldr	r3, .L949+4
 24412 0066 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
3455:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 24413              		.loc 1 3455 0 discriminator 2
 24414 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 534


 24415 006c 0133     		adds	r3, r3, #1
 24416 006e FB71     		strb	r3, [r7, #7]
 24417              	.L936:
3455:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 24418              		.loc 1 3455 0 is_stmt 0 discriminator 1
 24419 0070 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 24420 0072 714B     		ldr	r3, .L949+12
 24421 0074 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24422 0078 0133     		adds	r3, r3, #1
 24423 007a 9A42     		cmp	r2, r3
 24424 007c DADB     		blt	.L938
 24425              	.LBE27:
3461:..\src/command_processing.c ****     }
3462:..\src/command_processing.c ****     
3463:..\src/command_processing.c ****     // Update g_refNew in case a new command has been received
3464:..\src/command_processing.c ****     if (change_ext_ref_flag) {
 24426              		.loc 1 3464 0 is_stmt 1
 24427 007e 6D4B     		ldr	r3, .L949+8
 24428 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24429 0082 002B     		cmp	r3, #0
 24430 0084 00F0CC80 		beq	.L948
 24431              	.LBB28:
3465:..\src/command_processing.c ****         for (uint8 i = 0; i< NUM_OF_MOTORS; i++) {
 24432              		.loc 1 3465 0
 24433 0088 0023     		movs	r3, #0
 24434 008a BB71     		strb	r3, [r7, #6]
 24435 008c C4E0     		b	.L940
 24436              	.L947:
3466:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 24437              		.loc 1 3466 0
 24438 008e BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24439 0090 6A49     		ldr	r1, .L949+16
 24440 0092 1346     		mov	r3, r2
 24441 0094 DB00     		lsls	r3, r3, #3
 24442 0096 9B1A     		subs	r3, r3, r2
 24443 0098 1B01     		lsls	r3, r3, #4
 24444 009a 0B44     		add	r3, r3, r1
 24445 009c 03F20F13 		addw	r3, r3, #271
 24446 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24447 00a2 022B     		cmp	r3, #2
 24448 00a4 0ED1     		bne	.L941
3467:..\src/command_processing.c ****                 g_refNew[i].curr = aux_int16[i];
 24449              		.loc 1 3467 0
 24450 00a6 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24451 00a8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24452 00aa 5B00     		lsls	r3, r3, #1
 24453 00ac 07F10801 		add	r1, r7, #8
 24454 00b0 0B44     		add	r3, r3, r1
 24455 00b2 33F9083C 		ldrsh	r3, [r3, #-8]
 24456 00b6 1846     		mov	r0, r3
 24457 00b8 6149     		ldr	r1, .L949+20
 24458 00ba 1301     		lsls	r3, r2, #4
 24459 00bc 0B44     		add	r3, r3, r1
 24460 00be 0433     		adds	r3, r3, #4
 24461 00c0 1860     		str	r0, [r3]
 24462 00c2 47E0     		b	.L942
 24463              	.L941:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 535


3468:..\src/command_processing.c ****             }
3469:..\src/command_processing.c ****             else {
3470:..\src/command_processing.c ****                 if(g_mem.motor[i].control_mode == CONTROL_PWM) {
 24464              		.loc 1 3470 0
 24465 00c4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24466 00c6 5D49     		ldr	r1, .L949+16
 24467 00c8 1346     		mov	r3, r2
 24468 00ca DB00     		lsls	r3, r3, #3
 24469 00cc 9B1A     		subs	r3, r3, r2
 24470 00ce 1B01     		lsls	r3, r3, #4
 24471 00d0 0B44     		add	r3, r3, r1
 24472 00d2 03F20F13 		addw	r3, r3, #271
 24473 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24474 00d8 012B     		cmp	r3, #1
 24475 00da 0ED1     		bne	.L943
3471:..\src/command_processing.c ****                     g_refNew[i].pwm = aux_int16[i];
 24476              		.loc 1 3471 0
 24477 00dc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24478 00de BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24479 00e0 5B00     		lsls	r3, r3, #1
 24480 00e2 07F10801 		add	r1, r7, #8
 24481 00e6 0B44     		add	r3, r3, r1
 24482 00e8 33F9083C 		ldrsh	r3, [r3, #-8]
 24483 00ec 1846     		mov	r0, r3
 24484 00ee 5449     		ldr	r1, .L949+20
 24485 00f0 1301     		lsls	r3, r2, #4
 24486 00f2 0B44     		add	r3, r3, r1
 24487 00f4 0833     		adds	r3, r3, #8
 24488 00f6 1860     		str	r0, [r3]
 24489 00f8 2CE0     		b	.L942
 24490              	.L943:
3472:..\src/command_processing.c ****                 }
3473:..\src/command_processing.c ****                 else {
3474:..\src/command_processing.c ****                     g_refNew[i].pos = aux_int16[i];   // motor ref
 24491              		.loc 1 3474 0
 24492 00fa BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24493 00fc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24494 00fe 5B00     		lsls	r3, r3, #1
 24495 0100 07F10801 		add	r1, r7, #8
 24496 0104 0B44     		add	r3, r3, r1
 24497 0106 33F9083C 		ldrsh	r3, [r3, #-8]
 24498 010a 1846     		mov	r0, r3
 24499 010c 4C49     		ldr	r1, .L949+20
 24500 010e 1301     		lsls	r3, r2, #4
 24501 0110 0B44     		add	r3, r3, r1
 24502 0112 1860     		str	r0, [r3]
3475:..\src/command_processing.c ****                     g_refNew[i].pos = g_refNew[i].pos << g_mem.enc[c_mem.motor[i].encoder_line].res
 24503              		.loc 1 3475 0
 24504 0114 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 24505 0116 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24506 0118 494A     		ldr	r2, .L949+20
 24507 011a 1B01     		lsls	r3, r3, #4
 24508 011c 1344     		add	r3, r3, r2
 24509 011e 1868     		ldr	r0, [r3]
 24510 0120 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24511 0122 454C     		ldr	r4, .L949+12
 24512 0124 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 536


 24513 0126 DB00     		lsls	r3, r3, #3
 24514 0128 9B1A     		subs	r3, r3, r2
 24515 012a 1B01     		lsls	r3, r3, #4
 24516 012c 2344     		add	r3, r3, r4
 24517 012e 03F58873 		add	r3, r3, #272
 24518 0132 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24519 0134 1C46     		mov	r4, r3
 24520 0136 414A     		ldr	r2, .L949+16
 24521 0138 2346     		mov	r3, r4
 24522 013a 5B00     		lsls	r3, r3, #1
 24523 013c 2344     		add	r3, r3, r4
 24524 013e 1B01     		lsls	r3, r3, #4
 24525 0140 1344     		add	r3, r3, r2
 24526 0142 03F29513 		addw	r3, r3, #405
 24527 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24528 0148 00FA03F2 		lsl	r2, r0, r3
 24529 014c 3C48     		ldr	r0, .L949+20
 24530 014e 0B01     		lsls	r3, r1, #4
 24531 0150 0344     		add	r3, r3, r0
 24532 0152 1A60     		str	r2, [r3]
 24533              	.L942:
3476:..\src/command_processing.c ****                 }
3477:..\src/command_processing.c ****             }  
3478:..\src/command_processing.c ****                
3479:..\src/command_processing.c ****             // Check if the reference is nor higher or lower than the position limits
3480:..\src/command_processing.c ****             if (c_mem.motor[i].pos_lim_flag && (g_mem.motor[i].control_mode == CURR_AND_POS_CONTROL
 24534              		.loc 1 3480 0
 24535 0154 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24536 0156 3849     		ldr	r1, .L949+12
 24537 0158 1346     		mov	r3, r2
 24538 015a DB00     		lsls	r3, r3, #3
 24539 015c 9B1A     		subs	r3, r3, r2
 24540 015e 1B01     		lsls	r3, r3, #4
 24541 0160 0B44     		add	r3, r3, r1
 24542 0162 E333     		adds	r3, r3, #227
 24543 0164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24544 0166 002B     		cmp	r3, #0
 24545 0168 53D0     		beq	.L944
 24546              		.loc 1 3480 0 is_stmt 0 discriminator 1
 24547 016a BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24548 016c 3349     		ldr	r1, .L949+16
 24549 016e 1346     		mov	r3, r2
 24550 0170 DB00     		lsls	r3, r3, #3
 24551 0172 9B1A     		subs	r3, r3, r2
 24552 0174 1B01     		lsls	r3, r3, #4
 24553 0176 0B44     		add	r3, r3, r1
 24554 0178 03F20F13 		addw	r3, r3, #271
 24555 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24556 017e 032B     		cmp	r3, #3
 24557 0180 0BD0     		beq	.L945
 24558              		.loc 1 3480 0 discriminator 2
 24559 0182 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24560 0184 2D49     		ldr	r1, .L949+16
 24561 0186 1346     		mov	r3, r2
 24562 0188 DB00     		lsls	r3, r3, #3
 24563 018a 9B1A     		subs	r3, r3, r2
 24564 018c 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 537


 24565 018e 0B44     		add	r3, r3, r1
 24566 0190 03F20F13 		addw	r3, r3, #271
 24567 0194 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24568 0196 002B     		cmp	r3, #0
 24569 0198 3BD1     		bne	.L944
 24570              	.L945:
3481:..\src/command_processing.c ****                 
3482:..\src/command_processing.c ****                 if (g_refNew[i].pos < c_mem.motor[i].pos_lim_inf) 
 24571              		.loc 1 3482 0 is_stmt 1
 24572 019a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24573 019c 284A     		ldr	r2, .L949+20
 24574 019e 1B01     		lsls	r3, r3, #4
 24575 01a0 1344     		add	r3, r3, r2
 24576 01a2 1968     		ldr	r1, [r3]
 24577 01a4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24578 01a6 2448     		ldr	r0, .L949+12
 24579 01a8 1346     		mov	r3, r2
 24580 01aa DB00     		lsls	r3, r3, #3
 24581 01ac 9B1A     		subs	r3, r3, r2
 24582 01ae 1B01     		lsls	r3, r3, #4
 24583 01b0 0344     		add	r3, r3, r0
 24584 01b2 E433     		adds	r3, r3, #228
 24585 01b4 1B68     		ldr	r3, [r3]
 24586 01b6 9942     		cmp	r1, r3
 24587 01b8 0DDA     		bge	.L946
3483:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_inf;
 24588              		.loc 1 3483 0
 24589 01ba B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 24590 01bc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24591 01be 1E48     		ldr	r0, .L949+12
 24592 01c0 1346     		mov	r3, r2
 24593 01c2 DB00     		lsls	r3, r3, #3
 24594 01c4 9B1A     		subs	r3, r3, r2
 24595 01c6 1B01     		lsls	r3, r3, #4
 24596 01c8 0344     		add	r3, r3, r0
 24597 01ca E433     		adds	r3, r3, #228
 24598 01cc 1A68     		ldr	r2, [r3]
 24599 01ce 1C48     		ldr	r0, .L949+20
 24600 01d0 0B01     		lsls	r3, r1, #4
 24601 01d2 0344     		add	r3, r3, r0
 24602 01d4 1A60     		str	r2, [r3]
 24603              	.L946:
3484:..\src/command_processing.c **** 
3485:..\src/command_processing.c ****                 if (g_refNew[i].pos > c_mem.motor[i].pos_lim_sup) 
 24604              		.loc 1 3485 0
 24605 01d6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24606 01d8 194A     		ldr	r2, .L949+20
 24607 01da 1B01     		lsls	r3, r3, #4
 24608 01dc 1344     		add	r3, r3, r2
 24609 01de 1968     		ldr	r1, [r3]
 24610 01e0 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24611 01e2 1548     		ldr	r0, .L949+12
 24612 01e4 1346     		mov	r3, r2
 24613 01e6 DB00     		lsls	r3, r3, #3
 24614 01e8 9B1A     		subs	r3, r3, r2
 24615 01ea 1B01     		lsls	r3, r3, #4
 24616 01ec 0344     		add	r3, r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 538


 24617 01ee E833     		adds	r3, r3, #232
 24618 01f0 1B68     		ldr	r3, [r3]
 24619 01f2 9942     		cmp	r1, r3
 24620 01f4 0DDD     		ble	.L944
3486:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_sup;
 24621              		.loc 1 3486 0
 24622 01f6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 24623 01f8 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24624 01fa 0F48     		ldr	r0, .L949+12
 24625 01fc 1346     		mov	r3, r2
 24626 01fe DB00     		lsls	r3, r3, #3
 24627 0200 9B1A     		subs	r3, r3, r2
 24628 0202 1B01     		lsls	r3, r3, #4
 24629 0204 0344     		add	r3, r3, r0
 24630 0206 E833     		adds	r3, r3, #232
 24631 0208 1A68     		ldr	r2, [r3]
 24632 020a 0D48     		ldr	r0, .L949+20
 24633 020c 0B01     		lsls	r3, r1, #4
 24634 020e 0344     		add	r3, r3, r0
 24635 0210 1A60     		str	r2, [r3]
 24636              	.L944:
3465:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 24637              		.loc 1 3465 0 discriminator 2
 24638 0212 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24639 0214 0133     		adds	r3, r3, #1
 24640 0216 BB71     		strb	r3, [r7, #6]
 24641              	.L940:
3465:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 24642              		.loc 1 3465 0 is_stmt 0 discriminator 1
 24643 0218 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24644 021a 012B     		cmp	r3, #1
 24645 021c 7FF637AF 		bls	.L947
 24646              	.L948:
 24647              	.LBE28:
3487:..\src/command_processing.c ****             }
3488:..\src/command_processing.c ****         }  
3489:..\src/command_processing.c ****     }
3490:..\src/command_processing.c **** }
 24648              		.loc 1 3490 0 is_stmt 1
 24649 0220 00BF     		nop
 24650 0222 0837     		adds	r7, r7, #8
 24651              		.cfi_def_cfa_offset 8
 24652 0224 BD46     		mov	sp, r7
 24653              		.cfi_def_cfa_register 13
 24654              		@ sp needed
 24655 0226 90BC     		pop	{r4, r7}
 24656              		.cfi_restore 7
 24657              		.cfi_restore 4
 24658              		.cfi_def_cfa_offset 0
 24659 0228 7047     		bx	lr
 24660              	.L950:
 24661 022a 00BF     		.align	2
 24662              	.L949:
 24663 022c 00000000 		.word	g_rx
 24664 0230 08000000 		.word	last_aux_int16.11391
 24665 0234 00000000 		.word	change_ext_ref_flag
 24666 0238 00000000 		.word	c_mem
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 539


 24667 023c 00000000 		.word	g_mem
 24668 0240 00000000 		.word	g_refNew
 24669              		.cfi_endproc
 24670              	.LFE97:
 24671              		.size	cmd_set_inputs, .-cmd_set_inputs
 24672              		.section	.text.cmd_activate,"ax",%progbits
 24673              		.align	2
 24674              		.global	cmd_activate
 24675              		.thumb
 24676              		.thumb_func
 24677              		.type	cmd_activate, %function
 24678              	cmd_activate:
 24679              	.LFB98:
3491:..\src/command_processing.c **** 
3492:..\src/command_processing.c **** void cmd_activate(){
 24680              		.loc 1 3492 0
 24681              		.cfi_startproc
 24682              		@ args = 0, pretend = 0, frame = 8
 24683              		@ frame_needed = 1, uses_anonymous_args = 0
 24684 0000 80B5     		push	{r7, lr}
 24685              		.cfi_def_cfa_offset 8
 24686              		.cfi_offset 7, -8
 24687              		.cfi_offset 14, -4
 24688 0002 82B0     		sub	sp, sp, #8
 24689              		.cfi_def_cfa_offset 16
 24690 0004 00AF     		add	r7, sp, #0
 24691              		.cfi_def_cfa_register 7
3493:..\src/command_processing.c ****     
3494:..\src/command_processing.c ****     // Store new value reads
3495:..\src/command_processing.c ****     uint8 aux = g_rx.buffer[1];
 24692              		.loc 1 3495 0
 24693 0006 294B     		ldr	r3, .L958
 24694 0008 5B78     		ldrb	r3, [r3, #1]
 24695 000a FB71     		strb	r3, [r7, #7]
3496:..\src/command_processing.c ****     
3497:..\src/command_processing.c ****     // Check type of control mode enabled
3498:..\src/command_processing.c ****     if ((g_mem.motor[0].control_mode == CONTROL_ANGLE) || (g_mem.motor[0].control_mode == CURR_AND_
 24696              		.loc 1 3498 0
 24697 000c 284B     		ldr	r3, .L958+4
 24698 000e 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 24699 0012 002B     		cmp	r3, #0
 24700 0014 04D0     		beq	.L952
 24701              		.loc 1 3498 0 is_stmt 0 discriminator 1
 24702 0016 264B     		ldr	r3, .L958+4
 24703 0018 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 24704 001c 032B     		cmp	r3, #3
 24705 001e 0BD1     		bne	.L953
 24706              	.L952:
3499:..\src/command_processing.c ****         g_refNew[0].pos = g_meas[g_mem.motor[0].encoder_line].pos[0];
 24707              		.loc 1 3499 0 is_stmt 1
 24708 0020 234B     		ldr	r3, .L958+4
 24709 0022 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24710 0026 1946     		mov	r1, r3
 24711 0028 224A     		ldr	r2, .L958+8
 24712 002a 3423     		movs	r3, #52
 24713 002c 03FB01F3 		mul	r3, r3, r1
 24714 0030 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 540


 24715 0032 1B68     		ldr	r3, [r3]
 24716 0034 204A     		ldr	r2, .L958+12
 24717 0036 1360     		str	r3, [r2]
 24718              	.L953:
3500:..\src/command_processing.c ****     }
3501:..\src/command_processing.c ****     g_refNew[0].onoff = (aux & 0x01);
 24719              		.loc 1 3501 0
 24720 0038 FB79     		ldrb	r3, [r7, #7]
 24721 003a 03F00103 		and	r3, r3, #1
 24722 003e DAB2     		uxtb	r2, r3
 24723 0040 1D4B     		ldr	r3, .L958+12
 24724 0042 1A73     		strb	r2, [r3, #12]
3502:..\src/command_processing.c ****     
3503:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
3504:..\src/command_processing.c ****     if (g_mem.dev.dev_type == AIR_CHAMBERS_FB){
3505:..\src/command_processing.c ****         // Send PWM 0 to the PUMP in case a deactivation command arrives
3506:..\src/command_processing.c ****         // [There is no driver activation, so g_refNew[i].onoff is useless]
3507:..\src/command_processing.c ****         if (!(g_refNew[0].onoff)) {
3508:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
3509:..\src/command_processing.c ****         }
3510:..\src/command_processing.c ****         
3511:..\src/command_processing.c ****         // Activate or deactivate the valve
3512:..\src/command_processing.c ****         VALVE_Write((aux >> 1) & 0x01);
3513:..\src/command_processing.c ****     }
3514:..\src/command_processing.c **** #endif
3515:..\src/command_processing.c ****     
3516:..\src/command_processing.c ****     // Activate/Deactivate motor
3517:..\src/command_processing.c ****     enable_motor(0, g_refNew[0].onoff); 
 24725              		.loc 1 3517 0
 24726 0044 1C4B     		ldr	r3, .L958+12
 24727 0046 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 24728 0048 1946     		mov	r1, r3
 24729 004a 0020     		movs	r0, #0
 24730 004c FFF7FEFF 		bl	enable_motor
3518:..\src/command_processing.c ****     
3519:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 24731              		.loc 1 3519 0
 24732 0050 174B     		ldr	r3, .L958+4
 24733 0052 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24734 0056 012B     		cmp	r3, #1
 24735 0058 23D1     		bne	.L957
3520:..\src/command_processing.c ****         if ((g_mem.motor[1].control_mode == CONTROL_ANGLE) || (g_mem.motor[1].control_mode == CURR_
 24736              		.loc 1 3520 0
 24737 005a 154B     		ldr	r3, .L958+4
 24738 005c 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 24739 0060 002B     		cmp	r3, #0
 24740 0062 04D0     		beq	.L955
 24741              		.loc 1 3520 0 is_stmt 0 discriminator 1
 24742 0064 124B     		ldr	r3, .L958+4
 24743 0066 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 24744 006a 032B     		cmp	r3, #3
 24745 006c 0BD1     		bne	.L956
 24746              	.L955:
3521:..\src/command_processing.c ****             g_refNew[1].pos = g_meas[g_mem.motor[1].encoder_line].pos[0];
 24747              		.loc 1 3521 0 is_stmt 1
 24748 006e 104B     		ldr	r3, .L958+4
 24749 0070 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 541


 24750 0074 1946     		mov	r1, r3
 24751 0076 0F4A     		ldr	r2, .L958+8
 24752 0078 3423     		movs	r3, #52
 24753 007a 03FB01F3 		mul	r3, r3, r1
 24754 007e 1344     		add	r3, r3, r2
 24755 0080 1B68     		ldr	r3, [r3]
 24756 0082 0D4A     		ldr	r2, .L958+12
 24757 0084 1361     		str	r3, [r2, #16]
 24758              	.L956:
3522:..\src/command_processing.c ****         }
3523:..\src/command_processing.c ****         g_refNew[1].onoff = ((aux >> 1) & 0x01);
 24759              		.loc 1 3523 0
 24760 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24761 0088 5B08     		lsrs	r3, r3, #1
 24762 008a DBB2     		uxtb	r3, r3
 24763 008c 03F00103 		and	r3, r3, #1
 24764 0090 DAB2     		uxtb	r2, r3
 24765 0092 094B     		ldr	r3, .L958+12
 24766 0094 1A77     		strb	r2, [r3, #28]
3524:..\src/command_processing.c ****         enable_motor(1, g_refNew[1].onoff); 
 24767              		.loc 1 3524 0
 24768 0096 084B     		ldr	r3, .L958+12
 24769 0098 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 24770 009a 1946     		mov	r1, r3
 24771 009c 0120     		movs	r0, #1
 24772 009e FFF7FEFF 		bl	enable_motor
 24773              	.L957:
3525:..\src/command_processing.c ****     }
3526:..\src/command_processing.c ****     
3527:..\src/command_processing.c **** }
 24774              		.loc 1 3527 0
 24775 00a2 00BF     		nop
 24776 00a4 0837     		adds	r7, r7, #8
 24777              		.cfi_def_cfa_offset 8
 24778 00a6 BD46     		mov	sp, r7
 24779              		.cfi_def_cfa_register 13
 24780              		@ sp needed
 24781 00a8 80BD     		pop	{r7, pc}
 24782              	.L959:
 24783 00aa 00BF     		.align	2
 24784              	.L958:
 24785 00ac 00000000 		.word	g_rx
 24786 00b0 00000000 		.word	g_mem
 24787 00b4 00000000 		.word	g_meas
 24788 00b8 00000000 		.word	g_refNew
 24789              		.cfi_endproc
 24790              	.LFE98:
 24791              		.size	cmd_activate, .-cmd_activate
 24792              		.section	.text.cmd_get_activate,"ax",%progbits
 24793              		.align	2
 24794              		.global	cmd_get_activate
 24795              		.thumb
 24796              		.thumb_func
 24797              		.type	cmd_get_activate, %function
 24798              	cmd_get_activate:
 24799              	.LFB99:
3528:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 542


3529:..\src/command_processing.c **** void cmd_get_activate(){
 24800              		.loc 1 3529 0
 24801              		.cfi_startproc
 24802              		@ args = 0, pretend = 0, frame = 8
 24803              		@ frame_needed = 1, uses_anonymous_args = 0
 24804 0000 80B5     		push	{r7, lr}
 24805              		.cfi_def_cfa_offset 8
 24806              		.cfi_offset 7, -8
 24807              		.cfi_offset 14, -4
 24808 0002 82B0     		sub	sp, sp, #8
 24809              		.cfi_def_cfa_offset 16
 24810 0004 00AF     		add	r7, sp, #0
 24811              		.cfi_def_cfa_register 7
3530:..\src/command_processing.c ****     
3531:..\src/command_processing.c ****     uint8 packet_data[3];
3532:..\src/command_processing.c **** 
3533:..\src/command_processing.c ****     // Header        
3534:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACTIVATE;
 24812              		.loc 1 3534 0
 24813 0006 8123     		movs	r3, #129
 24814 0008 3B71     		strb	r3, [r7, #4]
3535:..\src/command_processing.c ****     
3536:..\src/command_processing.c ****     // Fill payload
3537:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 24815              		.loc 1 3537 0
 24816 000a 124B     		ldr	r3, .L963
 24817 000c 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24818 0010 012B     		cmp	r3, #1
 24819 0012 0BD1     		bne	.L961
3538:..\src/command_processing.c ****         packet_data[1] = ((g_ref[1].onoff << 1) | g_ref[0].onoff);
 24820              		.loc 1 3538 0
 24821 0014 104B     		ldr	r3, .L963+4
 24822 0016 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 24823 0018 5B00     		lsls	r3, r3, #1
 24824 001a 5AB2     		sxtb	r2, r3
 24825 001c 0E4B     		ldr	r3, .L963+4
 24826 001e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 24827 0020 5BB2     		sxtb	r3, r3
 24828 0022 1343     		orrs	r3, r3, r2
 24829 0024 5BB2     		sxtb	r3, r3
 24830 0026 DBB2     		uxtb	r3, r3
 24831 0028 7B71     		strb	r3, [r7, #5]
 24832 002a 02E0     		b	.L962
 24833              	.L961:
3539:..\src/command_processing.c ****     } 
3540:..\src/command_processing.c ****     else {
3541:..\src/command_processing.c ****         packet_data[1] = g_ref[0].onoff;
 24834              		.loc 1 3541 0
 24835 002c 0A4B     		ldr	r3, .L963+4
 24836 002e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 24837 0030 7B71     		strb	r3, [r7, #5]
 24838              	.L962:
3542:..\src/command_processing.c ****     }
3543:..\src/command_processing.c ****     
3544:..\src/command_processing.c ****     // Calculate checksum
3545:..\src/command_processing.c ****     packet_data[2] = LCRChecksum(packet_data, 2);
 24839              		.loc 1 3545 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 543


 24840 0032 3B1D     		adds	r3, r7, #4
 24841 0034 0221     		movs	r1, #2
 24842 0036 1846     		mov	r0, r3
 24843 0038 FFF7FEFF 		bl	LCRChecksum
 24844 003c 0346     		mov	r3, r0
 24845 003e BB71     		strb	r3, [r7, #6]
3546:..\src/command_processing.c ****     
3547:..\src/command_processing.c ****     // Send package to UART
3548:..\src/command_processing.c ****     commWrite(packet_data, 3);
 24846              		.loc 1 3548 0
 24847 0040 3B1D     		adds	r3, r7, #4
 24848 0042 0321     		movs	r1, #3
 24849 0044 1846     		mov	r0, r3
 24850 0046 FFF7FEFF 		bl	commWrite
3549:..\src/command_processing.c **** 
3550:..\src/command_processing.c **** }
 24851              		.loc 1 3550 0
 24852 004a 00BF     		nop
 24853 004c 0837     		adds	r7, r7, #8
 24854              		.cfi_def_cfa_offset 8
 24855 004e BD46     		mov	sp, r7
 24856              		.cfi_def_cfa_register 13
 24857              		@ sp needed
 24858 0050 80BD     		pop	{r7, pc}
 24859              	.L964:
 24860 0052 00BF     		.align	2
 24861              	.L963:
 24862 0054 00000000 		.word	g_mem
 24863 0058 00000000 		.word	g_ref
 24864              		.cfi_endproc
 24865              	.LFE99:
 24866              		.size	cmd_get_activate, .-cmd_get_activate
 24867              		.section	.text.cmd_get_curr_and_meas,"ax",%progbits
 24868              		.align	2
 24869              		.global	cmd_get_curr_and_meas
 24870              		.thumb
 24871              		.thumb_func
 24872              		.type	cmd_get_curr_and_meas, %function
 24873              	cmd_get_curr_and_meas:
 24874              	.LFB100:
3551:..\src/command_processing.c **** 
3552:..\src/command_processing.c **** void cmd_get_curr_and_meas(){
 24875              		.loc 1 3552 0
 24876              		.cfi_startproc
 24877              		@ args = 0, pretend = 0, frame = 16
 24878              		@ frame_needed = 1, uses_anonymous_args = 0
 24879 0000 90B5     		push	{r4, r7, lr}
 24880              		.cfi_def_cfa_offset 12
 24881              		.cfi_offset 4, -12
 24882              		.cfi_offset 7, -8
 24883              		.cfi_offset 14, -4
 24884 0002 85B0     		sub	sp, sp, #20
 24885              		.cfi_def_cfa_offset 32
 24886 0004 00AF     		add	r7, sp, #0
 24887              		.cfi_def_cfa_register 7
3553:..\src/command_processing.c ****     
3554:..\src/command_processing.c ****     uint8 CYDATA index;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 544


3555:..\src/command_processing.c ****     int16 aux_int16;
3556:..\src/command_processing.c ****    
3557:..\src/command_processing.c ****     //Packet: header + curr_meas(int16) + pos_meas(int16) + CRC
3558:..\src/command_processing.c ****     
3559:..\src/command_processing.c ****     uint8 packet_data[12]; 
3560:..\src/command_processing.c **** 
3561:..\src/command_processing.c ****     //Header package
3562:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_AND_MEAS;
 24888              		.loc 1 3562 0
 24889 0006 8623     		movs	r3, #134
 24890 0008 3B70     		strb	r3, [r7]
3563:..\src/command_processing.c **** 
3564:..\src/command_processing.c ****     // Currents
3565:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current motor1
 24891              		.loc 1 3565 0
 24892 000a 484B     		ldr	r3, .L970
 24893 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24894 0010 1946     		mov	r1, r3
 24895 0012 474A     		ldr	r2, .L970+4
 24896 0014 3423     		movs	r3, #52
 24897 0016 03FB01F3 		mul	r3, r3, r1
 24898 001a 1344     		add	r3, r3, r2
 24899 001c 0C33     		adds	r3, r3, #12
 24900 001e 1B68     		ldr	r3, [r3]
 24901 0020 1BB2     		sxth	r3, r3
 24902 0022 BB81     		strh	r3, [r7, #12]	@ movhi
3566:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 24903              		.loc 1 3566 0
 24904 0024 07F10C03 		add	r3, r7, #12
 24905 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24906 002a BB70     		strb	r3, [r7, #2]
3567:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 24907              		.loc 1 3567 0
 24908 002c 07F10C03 		add	r3, r7, #12
 24909 0030 0133     		adds	r3, r3, #1
 24910 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24911 0034 7B70     		strb	r3, [r7, #1]
3568:..\src/command_processing.c ****     
3569:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 24912              		.loc 1 3569 0
 24913 0036 3F4B     		ldr	r3, .L970+8
 24914 0038 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24915 003c 012B     		cmp	r3, #1
 24916 003e 0DD1     		bne	.L966
3570:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 24917              		.loc 1 3570 0
 24918 0040 3A4B     		ldr	r3, .L970
 24919 0042 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 24920 0046 1946     		mov	r1, r3
 24921 0048 394A     		ldr	r2, .L970+4
 24922 004a 3423     		movs	r3, #52
 24923 004c 03FB01F3 		mul	r3, r3, r1
 24924 0050 1344     		add	r3, r3, r2
 24925 0052 0C33     		adds	r3, r3, #12
 24926 0054 1B68     		ldr	r3, [r3]
 24927 0056 1BB2     		sxth	r3, r3
 24928 0058 BB81     		strh	r3, [r7, #12]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 545


 24929 005a 0CE0     		b	.L967
 24930              	.L966:
3571:..\src/command_processing.c ****     }
3572:..\src/command_processing.c ****     else {
3573:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 24931              		.loc 1 3573 0
 24932 005c 334B     		ldr	r3, .L970
 24933 005e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24934 0062 1946     		mov	r1, r3
 24935 0064 324A     		ldr	r2, .L970+4
 24936 0066 3423     		movs	r3, #52
 24937 0068 03FB01F3 		mul	r3, r3, r1
 24938 006c 1344     		add	r3, r3, r2
 24939 006e 1033     		adds	r3, r3, #16
 24940 0070 1B68     		ldr	r3, [r3]
 24941 0072 1BB2     		sxth	r3, r3
 24942 0074 BB81     		strh	r3, [r7, #12]	@ movhi
 24943              	.L967:
3574:..\src/command_processing.c ****     }
3575:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 24944              		.loc 1 3575 0
 24945 0076 07F10C03 		add	r3, r7, #12
 24946 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24947 007c 3B71     		strb	r3, [r7, #4]
3576:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 24948              		.loc 1 3576 0
 24949 007e 07F10C03 		add	r3, r7, #12
 24950 0082 0133     		adds	r3, r3, #1
 24951 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24952 0086 FB70     		strb	r3, [r7, #3]
3577:..\src/command_processing.c **** 
3578:..\src/command_processing.c ****     // Positions
3579:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 24953              		.loc 1 3579 0
 24954 0088 0323     		movs	r3, #3
 24955 008a FB73     		strb	r3, [r7, #15]
 24956 008c 38E0     		b	.L968
 24957              	.L969:
3580:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 24958              		.loc 1 3580 0
 24959 008e 274B     		ldr	r3, .L970
 24960 0090 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24961 0094 1A46     		mov	r2, r3
 24962 0096 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24963 0098 2548     		ldr	r0, .L970+4
 24964 009a 1346     		mov	r3, r2
 24965 009c 5B00     		lsls	r3, r3, #1
 24966 009e 1344     		add	r3, r3, r2
 24967 00a0 9B00     		lsls	r3, r3, #2
 24968 00a2 1344     		add	r3, r3, r2
 24969 00a4 0B44     		add	r3, r3, r1
 24970 00a6 50F82320 		ldr	r2, [r0, r3, lsl #2]
 24971 00aa 204B     		ldr	r3, .L970
 24972 00ac 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24973 00b0 1C46     		mov	r4, r3
 24974 00b2 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24975 00b4 1D48     		ldr	r0, .L970
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 546


 24976 00b6 2346     		mov	r3, r4
 24977 00b8 5B00     		lsls	r3, r3, #1
 24978 00ba 2344     		add	r3, r3, r4
 24979 00bc 1B01     		lsls	r3, r3, #4
 24980 00be 0344     		add	r3, r3, r0
 24981 00c0 0B44     		add	r3, r3, r1
 24982 00c2 03F29513 		addw	r3, r3, #405
 24983 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24984 00c8 42FA03F3 		asr	r3, r2, r3
 24985 00cc 1BB2     		sxth	r3, r3
 24986 00ce BB81     		strh	r3, [r7, #12]	@ movhi
3581:..\src/command_processing.c ****         packet_data[(index << 1) + 6] = ((char*)(&aux_int16))[0];
 24987              		.loc 1 3581 0
 24988 00d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24989 00d2 5B00     		lsls	r3, r3, #1
 24990 00d4 0633     		adds	r3, r3, #6
 24991 00d6 07F10C02 		add	r2, r7, #12
 24992 00da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 24993 00dc 07F11001 		add	r1, r7, #16
 24994 00e0 0B44     		add	r3, r3, r1
 24995 00e2 03F8102C 		strb	r2, [r3, #-16]
3582:..\src/command_processing.c ****         packet_data[(index << 1) + 5] = ((char*)(&aux_int16))[1];
 24996              		.loc 1 3582 0
 24997 00e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24998 00e8 5B00     		lsls	r3, r3, #1
 24999 00ea 5A1D     		adds	r2, r3, #5
 25000 00ec 07F10C03 		add	r3, r7, #12
 25001 00f0 0133     		adds	r3, r3, #1
 25002 00f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25003 00f4 07F11003 		add	r3, r7, #16
 25004 00f8 1344     		add	r3, r3, r2
 25005 00fa 0A46     		mov	r2, r1
 25006 00fc 03F8102C 		strb	r2, [r3, #-16]
 25007              	.L968:
3579:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 25008              		.loc 1 3579 0 discriminator 1
 25009 0100 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25010 0102 5A1E     		subs	r2, r3, #1
 25011 0104 FA73     		strb	r2, [r7, #15]
 25012 0106 002B     		cmp	r3, #0
 25013 0108 C1D1     		bne	.L969
3583:..\src/command_processing.c ****     }
3584:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3585:..\src/command_processing.c ****         
3586:..\src/command_processing.c ****     packet_data[11] = LCRChecksum (packet_data, 11);
 25014              		.loc 1 3586 0
 25015 010a 3B46     		mov	r3, r7
 25016 010c 0B21     		movs	r1, #11
 25017 010e 1846     		mov	r0, r3
 25018 0110 FFF7FEFF 		bl	LCRChecksum
 25019 0114 0346     		mov	r3, r0
 25020 0116 FB72     		strb	r3, [r7, #11]
3587:..\src/command_processing.c ****     commWrite(packet_data, 12);
 25021              		.loc 1 3587 0
 25022 0118 3B46     		mov	r3, r7
 25023 011a 0C21     		movs	r1, #12
 25024 011c 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 547


 25025 011e FFF7FEFF 		bl	commWrite
3588:..\src/command_processing.c ****    
3589:..\src/command_processing.c **** }
 25026              		.loc 1 3589 0
 25027 0122 00BF     		nop
 25028 0124 1437     		adds	r7, r7, #20
 25029              		.cfi_def_cfa_offset 12
 25030 0126 BD46     		mov	sp, r7
 25031              		.cfi_def_cfa_register 13
 25032              		@ sp needed
 25033 0128 90BD     		pop	{r4, r7, pc}
 25034              	.L971:
 25035 012a 00BF     		.align	2
 25036              	.L970:
 25037 012c 00000000 		.word	g_mem
 25038 0130 00000000 		.word	g_measOld
 25039 0134 00000000 		.word	c_mem
 25040              		.cfi_endproc
 25041              	.LFE100:
 25042              		.size	cmd_get_curr_and_meas, .-cmd_get_curr_and_meas
 25043              		.global	__aeabi_dmul
 25044              		.global	__aeabi_d2iz
 25045              		.section	.text.cmd_get_currents,"ax",%progbits
 25046              		.align	2
 25047              		.global	cmd_get_currents
 25048              		.thumb
 25049              		.thumb_func
 25050              		.type	cmd_get_currents, %function
 25051              	cmd_get_currents:
 25052              	.LFB101:
3590:..\src/command_processing.c **** 
3591:..\src/command_processing.c **** void cmd_get_currents(){
 25053              		.loc 1 3591 0
 25054              		.cfi_startproc
 25055              		@ args = 0, pretend = 0, frame = 16
 25056              		@ frame_needed = 1, uses_anonymous_args = 0
 25057 0000 90B5     		push	{r4, r7, lr}
 25058              		.cfi_def_cfa_offset 12
 25059              		.cfi_offset 4, -12
 25060              		.cfi_offset 7, -8
 25061              		.cfi_offset 14, -4
 25062 0002 85B0     		sub	sp, sp, #20
 25063              		.cfi_def_cfa_offset 32
 25064 0004 00AF     		add	r7, sp, #0
 25065              		.cfi_def_cfa_register 7
3592:..\src/command_processing.c ****     
3593:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3594:..\src/command_processing.c ****     
3595:..\src/command_processing.c ****     uint8 packet_data[6]; 
3596:..\src/command_processing.c ****     int16 aux_int16;
3597:..\src/command_processing.c ****     
3598:..\src/command_processing.c ****     //Header package
3599:..\src/command_processing.c **** 
3600:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURRENTS;
 25066              		.loc 1 3600 0
 25067 0006 8523     		movs	r3, #133
 25068 0008 3B72     		strb	r3, [r7, #8]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 548


3601:..\src/command_processing.c **** 
3602:..\src/command_processing.c ****     if (c_mem.dev.dev_type != AIR_CHAMBERS_FB){
 25069              		.loc 1 3602 0
 25070 000a 334B     		ldr	r3, .L977
 25071 000c 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 25072 0010 022B     		cmp	r3, #2
 25073 0012 0DD0     		beq	.L973
3603:..\src/command_processing.c ****         // Currents
3604:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current
 25074              		.loc 1 3604 0
 25075 0014 314B     		ldr	r3, .L977+4
 25076 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25077 001a 1946     		mov	r1, r3
 25078 001c 304A     		ldr	r2, .L977+8
 25079 001e 3423     		movs	r3, #52
 25080 0020 03FB01F3 		mul	r3, r3, r1
 25081 0024 1344     		add	r3, r3, r2
 25082 0026 0C33     		adds	r3, r3, #12
 25083 0028 1B68     		ldr	r3, [r3]
 25084 002a 1BB2     		sxth	r3, r3
 25085 002c FB80     		strh	r3, [r7, #6]	@ movhi
 25086 002e 12E0     		b	.L974
 25087              	.L973:
3605:..\src/command_processing.c ****     }
3606:..\src/command_processing.c ****     else {
3607:..\src/command_processing.c ****         // Send pressure times 100 here instead of current (Simulink use)
3608:..\src/command_processing.c ****         aux_int16 = (int16)(g_fb_meas.pressure*100.0); //Pressure
 25088              		.loc 1 3608 0
 25089 0030 2C4B     		ldr	r3, .L977+12
 25090 0032 1B68     		ldr	r3, [r3]	@ float
 25091 0034 1846     		mov	r0, r3
 25092 0036 FFF7FEFF 		bl	__aeabi_f2d
 25093 003a 4FF00002 		mov	r2, #0
 25094 003e 2A4B     		ldr	r3, .L977+16
 25095 0040 FFF7FEFF 		bl	__aeabi_dmul
 25096 0044 0346     		mov	r3, r0
 25097 0046 0C46     		mov	r4, r1
 25098 0048 1846     		mov	r0, r3
 25099 004a 2146     		mov	r1, r4
 25100 004c FFF7FEFF 		bl	__aeabi_d2iz
 25101 0050 0346     		mov	r3, r0
 25102 0052 1BB2     		sxth	r3, r3
 25103 0054 FB80     		strh	r3, [r7, #6]	@ movhi
 25104              	.L974:
3609:..\src/command_processing.c ****     }
3610:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 25105              		.loc 1 3610 0
 25106 0056 BB1D     		adds	r3, r7, #6
 25107 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25108 005a BB72     		strb	r3, [r7, #10]
3611:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 25109              		.loc 1 3611 0
 25110 005c BB1D     		adds	r3, r7, #6
 25111 005e 0133     		adds	r3, r3, #1
 25112 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25113 0062 7B72     		strb	r3, [r7, #9]
3612:..\src/command_processing.c ****     
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 549


3613:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 25114              		.loc 1 3613 0
 25115 0064 1C4B     		ldr	r3, .L977
 25116 0066 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 25117 006a 012B     		cmp	r3, #1
 25118 006c 0DD1     		bne	.L975
3614:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 25119              		.loc 1 3614 0
 25120 006e 1B4B     		ldr	r3, .L977+4
 25121 0070 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 25122 0074 1946     		mov	r1, r3
 25123 0076 1A4A     		ldr	r2, .L977+8
 25124 0078 3423     		movs	r3, #52
 25125 007a 03FB01F3 		mul	r3, r3, r1
 25126 007e 1344     		add	r3, r3, r2
 25127 0080 0C33     		adds	r3, r3, #12
 25128 0082 1B68     		ldr	r3, [r3]
 25129 0084 1BB2     		sxth	r3, r3
 25130 0086 FB80     		strh	r3, [r7, #6]	@ movhi
 25131 0088 0CE0     		b	.L976
 25132              	.L975:
3615:..\src/command_processing.c ****     }
3616:..\src/command_processing.c ****     else {
3617:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 25133              		.loc 1 3617 0
 25134 008a 144B     		ldr	r3, .L977+4
 25135 008c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25136 0090 1946     		mov	r1, r3
 25137 0092 134A     		ldr	r2, .L977+8
 25138 0094 3423     		movs	r3, #52
 25139 0096 03FB01F3 		mul	r3, r3, r1
 25140 009a 1344     		add	r3, r3, r2
 25141 009c 1033     		adds	r3, r3, #16
 25142 009e 1B68     		ldr	r3, [r3]
 25143 00a0 1BB2     		sxth	r3, r3
 25144 00a2 FB80     		strh	r3, [r7, #6]	@ movhi
 25145              	.L976:
3618:..\src/command_processing.c ****     }
3619:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 25146              		.loc 1 3619 0
 25147 00a4 BB1D     		adds	r3, r7, #6
 25148 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25149 00a8 3B73     		strb	r3, [r7, #12]
3620:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 25150              		.loc 1 3620 0
 25151 00aa BB1D     		adds	r3, r7, #6
 25152 00ac 0133     		adds	r3, r3, #1
 25153 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25154 00b0 FB72     		strb	r3, [r7, #11]
3621:..\src/command_processing.c **** 
3622:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3623:..\src/command_processing.c **** 
3624:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 25155              		.loc 1 3624 0
 25156 00b2 07F10803 		add	r3, r7, #8
 25157 00b6 0521     		movs	r1, #5
 25158 00b8 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 550


 25159 00ba FFF7FEFF 		bl	LCRChecksum
 25160 00be 0346     		mov	r3, r0
 25161 00c0 7B73     		strb	r3, [r7, #13]
3625:..\src/command_processing.c ****     
3626:..\src/command_processing.c ****     commWrite(packet_data, 6);
 25162              		.loc 1 3626 0
 25163 00c2 07F10803 		add	r3, r7, #8
 25164 00c6 0621     		movs	r1, #6
 25165 00c8 1846     		mov	r0, r3
 25166 00ca FFF7FEFF 		bl	commWrite
3627:..\src/command_processing.c **** }
 25167              		.loc 1 3627 0
 25168 00ce 00BF     		nop
 25169 00d0 1437     		adds	r7, r7, #20
 25170              		.cfi_def_cfa_offset 12
 25171 00d2 BD46     		mov	sp, r7
 25172              		.cfi_def_cfa_register 13
 25173              		@ sp needed
 25174 00d4 90BD     		pop	{r4, r7, pc}
 25175              	.L978:
 25176 00d6 00BF     		.align	2
 25177              	.L977:
 25178 00d8 00000000 		.word	c_mem
 25179 00dc 00000000 		.word	g_mem
 25180 00e0 00000000 		.word	g_measOld
 25181 00e4 00000000 		.word	g_fb_meas
 25182 00e8 00005940 		.word	1079574528
 25183              		.cfi_endproc
 25184              	.LFE101:
 25185              		.size	cmd_get_currents, .-cmd_get_currents
 25186              		.section	.text.cmd_get_currents_for_cuff,"ax",%progbits
 25187              		.align	2
 25188              		.global	cmd_get_currents_for_cuff
 25189              		.thumb
 25190              		.thumb_func
 25191              		.type	cmd_get_currents_for_cuff, %function
 25192              	cmd_get_currents_for_cuff:
 25193              	.LFB102:
3628:..\src/command_processing.c **** 
3629:..\src/command_processing.c **** void cmd_get_currents_for_cuff(){
 25194              		.loc 1 3629 0
 25195              		.cfi_startproc
 25196              		@ args = 0, pretend = 0, frame = 8
 25197              		@ frame_needed = 1, uses_anonymous_args = 0
 25198 0000 80B5     		push	{r7, lr}
 25199              		.cfi_def_cfa_offset 8
 25200              		.cfi_offset 7, -8
 25201              		.cfi_offset 14, -4
 25202 0002 82B0     		sub	sp, sp, #8
 25203              		.cfi_def_cfa_offset 16
 25204 0004 00AF     		add	r7, sp, #0
 25205              		.cfi_def_cfa_register 7
3630:..\src/command_processing.c ****     
3631:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3632:..\src/command_processing.c ****     
3633:..\src/command_processing.c ****     uint8 packet_data[4]; 
3634:..\src/command_processing.c ****     int16 aux_int16;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 551


3635:..\src/command_processing.c ****     
3636:..\src/command_processing.c ****     //Header package
3637:..\src/command_processing.c **** 
3638:..\src/command_processing.c ****     packet_data[0] = CMD_SET_CUFF_INPUTS;
 25206              		.loc 1 3638 0
 25207 0006 8E23     		movs	r3, #142
 25208 0008 3B71     		strb	r3, [r7, #4]
3639:..\src/command_processing.c **** 
3640:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated Current
 25209              		.loc 1 3640 0
 25210 000a 144B     		ldr	r3, .L980
 25211 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25212 0010 1946     		mov	r1, r3
 25213 0012 134A     		ldr	r2, .L980+4
 25214 0014 3423     		movs	r3, #52
 25215 0016 03FB01F3 		mul	r3, r3, r1
 25216 001a 1344     		add	r3, r3, r2
 25217 001c 1033     		adds	r3, r3, #16
 25218 001e 1B68     		ldr	r3, [r3]
 25219 0020 1BB2     		sxth	r3, r3
 25220 0022 7B80     		strh	r3, [r7, #2]	@ movhi
3641:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 25221              		.loc 1 3641 0
 25222 0024 BB1C     		adds	r3, r7, #2
 25223 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25224 0028 BB71     		strb	r3, [r7, #6]
3642:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 25225              		.loc 1 3642 0
 25226 002a BB1C     		adds	r3, r7, #2
 25227 002c 0133     		adds	r3, r3, #1
 25228 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25229 0030 7B71     		strb	r3, [r7, #5]
3643:..\src/command_processing.c **** 
3644:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3645:..\src/command_processing.c **** 
3646:..\src/command_processing.c ****     packet_data[3] = LCRChecksum (packet_data, 3);
 25230              		.loc 1 3646 0
 25231 0032 3B1D     		adds	r3, r7, #4
 25232 0034 0321     		movs	r1, #3
 25233 0036 1846     		mov	r0, r3
 25234 0038 FFF7FEFF 		bl	LCRChecksum
 25235 003c 0346     		mov	r3, r0
 25236 003e FB71     		strb	r3, [r7, #7]
3647:..\src/command_processing.c ****     
3648:..\src/command_processing.c ****     commWriteID(packet_data, 4, g_mem.dev.id -1);
 25237              		.loc 1 3648 0
 25238 0040 064B     		ldr	r3, .L980
 25239 0042 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 25240 0046 013B     		subs	r3, r3, #1
 25241 0048 DAB2     		uxtb	r2, r3
 25242 004a 3B1D     		adds	r3, r7, #4
 25243 004c 0421     		movs	r1, #4
 25244 004e 1846     		mov	r0, r3
 25245 0050 FFF7FEFF 		bl	commWriteID
3649:..\src/command_processing.c **** }
 25246              		.loc 1 3649 0
 25247 0054 00BF     		nop
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 552


 25248 0056 0837     		adds	r7, r7, #8
 25249              		.cfi_def_cfa_offset 8
 25250 0058 BD46     		mov	sp, r7
 25251              		.cfi_def_cfa_register 13
 25252              		@ sp needed
 25253 005a 80BD     		pop	{r7, pc}
 25254              	.L981:
 25255              		.align	2
 25256              	.L980:
 25257 005c 00000000 		.word	g_mem
 25258 0060 00000000 		.word	g_measOld
 25259              		.cfi_endproc
 25260              	.LFE102:
 25261              		.size	cmd_get_currents_for_cuff, .-cmd_get_currents_for_cuff
 25262              		.section	.text.commReadResCurrFromSH,"ax",%progbits
 25263              		.align	2
 25264              		.global	commReadResCurrFromSH
 25265              		.thumb
 25266              		.thumb_func
 25267              		.type	commReadResCurrFromSH, %function
 25268              	commReadResCurrFromSH:
 25269              	.LFB103:
3650:..\src/command_processing.c **** 
3651:..\src/command_processing.c **** //==============================================================================
3652:..\src/command_processing.c **** //                                  READ RESIDUAL CURRENT FUNCTION FROM SOFTHAND
3653:..\src/command_processing.c **** //==============================================================================
3654:..\src/command_processing.c **** 
3655:..\src/command_processing.c **** int16 commReadResCurrFromSH()
3656:..\src/command_processing.c **** {
 25270              		.loc 1 3656 0
 25271              		.cfi_startproc
 25272              		@ args = 0, pretend = 0, frame = 32
 25273              		@ frame_needed = 1, uses_anonymous_args = 0
 25274 0000 80B5     		push	{r7, lr}
 25275              		.cfi_def_cfa_offset 8
 25276              		.cfi_offset 7, -8
 25277              		.cfi_offset 14, -4
 25278 0002 88B0     		sub	sp, sp, #32
 25279              		.cfi_def_cfa_offset 40
 25280 0004 00AF     		add	r7, sp, #0
 25281              		.cfi_def_cfa_register 7
3657:..\src/command_processing.c ****     uint8 packet_data[16];
3658:..\src/command_processing.c ****     uint8 packet_lenght;
3659:..\src/command_processing.c ****     int16 curr_diff = 0;
 25282              		.loc 1 3659 0
 25283 0006 0023     		movs	r3, #0
 25284 0008 FB83     		strh	r3, [r7, #30]	@ movhi
3660:..\src/command_processing.c ****     uint32 t_start, t_end;
3661:..\src/command_processing.c ****     uint8 read_flag = TRUE;
 25285              		.loc 1 3661 0
 25286 000a 0123     		movs	r3, #1
 25287 000c 7B77     		strb	r3, [r7, #29]
3662:..\src/command_processing.c **** 
3663:..\src/command_processing.c ****     packet_lenght = 2;
 25288              		.loc 1 3663 0
 25289 000e 0223     		movs	r3, #2
 25290 0010 3B77     		strb	r3, [r7, #28]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 553


3664:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_DIFF;
 25291              		.loc 1 3664 0
 25292 0012 8C23     		movs	r3, #140
 25293 0014 3B71     		strb	r3, [r7, #4]
3665:..\src/command_processing.c ****     packet_data[1] = CMD_GET_CURR_DIFF;
 25294              		.loc 1 3665 0
 25295 0016 8C23     		movs	r3, #140
 25296 0018 7B71     		strb	r3, [r7, #5]
3666:..\src/command_processing.c ****     commWriteID(packet_data, packet_lenght, c_mem.MS.slave_ID);
 25297              		.loc 1 3666 0
 25298 001a 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 25299 001c 99B2     		uxth	r1, r3
 25300 001e 1D4B     		ldr	r3, .L989
 25301 0020 93F8C122 		ldrb	r2, [r3, #705]	@ zero_extendqisi2
 25302 0024 3B1D     		adds	r3, r7, #4
 25303 0026 1846     		mov	r0, r3
 25304 0028 FFF7FEFF 		bl	commWriteID
3667:..\src/command_processing.c **** 
3668:..\src/command_processing.c ****     t_start = (uint32) MY_TIMER_ReadCounter();
 25305              		.loc 1 3668 0
 25306 002c FFF7FEFF 		bl	MY_TIMER_ReadCounter
 25307 0030 0346     		mov	r3, r0
 25308 0032 BB61     		str	r3, [r7, #24]
3669:..\src/command_processing.c ****     while(g_rx.buffer[0] != CMD_SET_CUFF_INPUTS) {
 25309              		.loc 1 3669 0
 25310 0034 18E0     		b	.L983
 25311              	.L986:
3670:..\src/command_processing.c ****         if (interrupt_flag){
 25312              		.loc 1 3670 0
 25313 0036 184B     		ldr	r3, .L989+4
 25314 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25315 003a 002B     		cmp	r3, #0
 25316 003c 04D0     		beq	.L984
3671:..\src/command_processing.c ****             interrupt_flag = FALSE;
 25317              		.loc 1 3671 0
 25318 003e 164B     		ldr	r3, .L989+4
 25319 0040 0022     		movs	r2, #0
 25320 0042 1A70     		strb	r2, [r3]
3672:..\src/command_processing.c ****             interrupt_manager();
 25321              		.loc 1 3672 0
 25322 0044 FFF7FEFF 		bl	interrupt_manager
 25323              	.L984:
3673:..\src/command_processing.c ****         }
3674:..\src/command_processing.c **** 
3675:..\src/command_processing.c ****         t_end = (uint32) MY_TIMER_ReadCounter();
 25324              		.loc 1 3675 0
 25325 0048 FFF7FEFF 		bl	MY_TIMER_ReadCounter
 25326 004c 0346     		mov	r3, r0
 25327 004e 7B61     		str	r3, [r7, #20]
3676:..\src/command_processing.c ****         if((t_start - t_end) > 4500000){            // 4.5 s timeout
 25328              		.loc 1 3676 0
 25329 0050 BA69     		ldr	r2, [r7, #24]
 25330 0052 7B69     		ldr	r3, [r7, #20]
 25331 0054 D31A     		subs	r3, r2, r3
 25332 0056 114A     		ldr	r2, .L989+8
 25333 0058 9342     		cmp	r3, r2
 25334 005a 05D9     		bls	.L983
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 554


3677:..\src/command_processing.c ****             read_flag = FALSE;
 25335              		.loc 1 3677 0
 25336 005c 0023     		movs	r3, #0
 25337 005e 7B77     		strb	r3, [r7, #29]
3678:..\src/command_processing.c ****             master_mode = 0;                // Exit from master mode
 25338              		.loc 1 3678 0
 25339 0060 0F4B     		ldr	r3, .L989+12
 25340 0062 0022     		movs	r2, #0
 25341 0064 1A70     		strb	r2, [r3]
3679:..\src/command_processing.c ****             break;
 25342              		.loc 1 3679 0
 25343 0066 03E0     		b	.L985
 25344              	.L983:
3669:..\src/command_processing.c ****         if (interrupt_flag){
 25345              		.loc 1 3669 0
 25346 0068 0E4B     		ldr	r3, .L989+16
 25347 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25348 006c 8E2B     		cmp	r3, #142
 25349 006e E2D1     		bne	.L986
 25350              	.L985:
3680:..\src/command_processing.c ****         }
3681:..\src/command_processing.c ****     }
3682:..\src/command_processing.c **** 
3683:..\src/command_processing.c ****     if (read_flag) {
 25351              		.loc 1 3683 0
 25352 0070 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 25353 0072 002B     		cmp	r3, #0
 25354 0074 08D0     		beq	.L987
3684:..\src/command_processing.c ****         curr_diff = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);                        
 25355              		.loc 1 3684 0
 25356 0076 0B4B     		ldr	r3, .L989+16
 25357 0078 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 25358 007a 1B02     		lsls	r3, r3, #8
 25359 007c 1AB2     		sxth	r2, r3
 25360 007e 094B     		ldr	r3, .L989+16
 25361 0080 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 25362 0082 1BB2     		sxth	r3, r3
 25363 0084 1343     		orrs	r3, r3, r2
 25364 0086 FB83     		strh	r3, [r7, #30]	@ movhi
 25365              	.L987:
3685:..\src/command_processing.c ****     }
3686:..\src/command_processing.c ****     
3687:..\src/command_processing.c ****     return curr_diff;
 25366              		.loc 1 3687 0
 25367 0088 B7F91E30 		ldrsh	r3, [r7, #30]
3688:..\src/command_processing.c **** }
 25368              		.loc 1 3688 0
 25369 008c 1846     		mov	r0, r3
 25370 008e 2037     		adds	r7, r7, #32
 25371              		.cfi_def_cfa_offset 8
 25372 0090 BD46     		mov	sp, r7
 25373              		.cfi_def_cfa_register 13
 25374              		@ sp needed
 25375 0092 80BD     		pop	{r7, pc}
 25376              	.L990:
 25377              		.align	2
 25378              	.L989:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 555


 25379 0094 00000000 		.word	c_mem
 25380 0098 00000000 		.word	interrupt_flag
 25381 009c 20AA4400 		.word	4500000
 25382 00a0 00000000 		.word	master_mode
 25383 00a4 00000000 		.word	g_rx
 25384              		.cfi_endproc
 25385              	.LFE103:
 25386              		.size	commReadResCurrFromSH, .-commReadResCurrFromSH
 25387              		.section	.text.cmd_set_baudrate,"ax",%progbits
 25388              		.align	2
 25389              		.global	cmd_set_baudrate
 25390              		.thumb
 25391              		.thumb_func
 25392              		.type	cmd_set_baudrate, %function
 25393              	cmd_set_baudrate:
 25394              	.LFB104:
3689:..\src/command_processing.c **** 
3690:..\src/command_processing.c **** void cmd_set_baudrate(){
 25395              		.loc 1 3690 0
 25396              		.cfi_startproc
 25397              		@ args = 0, pretend = 0, frame = 0
 25398              		@ frame_needed = 1, uses_anonymous_args = 0
 25399 0000 80B5     		push	{r7, lr}
 25400              		.cfi_def_cfa_offset 8
 25401              		.cfi_offset 7, -8
 25402              		.cfi_offset 14, -4
 25403 0002 00AF     		add	r7, sp, #0
 25404              		.cfi_def_cfa_register 7
3691:..\src/command_processing.c ****     
3692:..\src/command_processing.c ****     // Set BaudRate
3693:..\src/command_processing.c ****     c_mem.dev.baud_rate = g_rx.buffer[1];
 25405              		.loc 1 3693 0
 25406 0004 094B     		ldr	r3, .L996
 25407 0006 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 25408 0008 094B     		ldr	r3, .L996+4
 25409 000a 83F8AA20 		strb	r2, [r3, #170]
3694:..\src/command_processing.c ****     
3695:..\src/command_processing.c ****     switch(g_rx.buffer[1]){
 25410              		.loc 1 3695 0
 25411 000e 074B     		ldr	r3, .L996
 25412 0010 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 25413 0012 0D2B     		cmp	r3, #13
 25414 0014 04D1     		bne	.L995
3696:..\src/command_processing.c ****         case 13:
3697:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(13);
 25415              		.loc 1 3697 0
 25416 0016 0121     		movs	r1, #1
 25417 0018 0C20     		movs	r0, #12
 25418 001a FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
3698:..\src/command_processing.c ****             break;
 25419              		.loc 1 3698 0
 25420 001e 03E0     		b	.L994
 25421              	.L995:
3699:..\src/command_processing.c ****         default:
3700:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(3);
 25422              		.loc 1 3700 0
 25423 0020 0121     		movs	r1, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 556


 25424 0022 0220     		movs	r0, #2
 25425 0024 FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
 25426              	.L994:
3701:..\src/command_processing.c ****     }
3702:..\src/command_processing.c **** }
 25427              		.loc 1 3702 0
 25428 0028 00BF     		nop
 25429 002a 80BD     		pop	{r7, pc}
 25430              	.L997:
 25431              		.align	2
 25432              	.L996:
 25433 002c 00000000 		.word	g_rx
 25434 0030 00000000 		.word	c_mem
 25435              		.cfi_endproc
 25436              	.LFE104:
 25437              		.size	cmd_set_baudrate, .-cmd_set_baudrate
 25438              		.section	.text.cmd_ping,"ax",%progbits
 25439              		.align	2
 25440              		.global	cmd_ping
 25441              		.thumb
 25442              		.thumb_func
 25443              		.type	cmd_ping, %function
 25444              	cmd_ping:
 25445              	.LFB105:
3703:..\src/command_processing.c **** 
3704:..\src/command_processing.c **** void cmd_ping(){
 25446              		.loc 1 3704 0
 25447              		.cfi_startproc
 25448              		@ args = 0, pretend = 0, frame = 8
 25449              		@ frame_needed = 1, uses_anonymous_args = 0
 25450 0000 80B5     		push	{r7, lr}
 25451              		.cfi_def_cfa_offset 8
 25452              		.cfi_offset 7, -8
 25453              		.cfi_offset 14, -4
 25454 0002 82B0     		sub	sp, sp, #8
 25455              		.cfi_def_cfa_offset 16
 25456 0004 00AF     		add	r7, sp, #0
 25457              		.cfi_def_cfa_register 7
3705:..\src/command_processing.c **** 
3706:..\src/command_processing.c ****     uint8 packet_data[2];
3707:..\src/command_processing.c **** 
3708:..\src/command_processing.c ****     // Header
3709:..\src/command_processing.c ****     packet_data[0] = CMD_PING;
 25458              		.loc 1 3709 0
 25459 0006 0023     		movs	r3, #0
 25460 0008 3B71     		strb	r3, [r7, #4]
3710:..\src/command_processing.c ****     
3711:..\src/command_processing.c ****     // Load Payload
3712:..\src/command_processing.c ****     packet_data[1] = CMD_PING;
 25461              		.loc 1 3712 0
 25462 000a 0023     		movs	r3, #0
 25463 000c 7B71     		strb	r3, [r7, #5]
3713:..\src/command_processing.c **** 
3714:..\src/command_processing.c ****     // Send Package to uart
3715:..\src/command_processing.c ****     commWrite(packet_data, 2);
 25464              		.loc 1 3715 0
 25465 000e 3B1D     		adds	r3, r7, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 557


 25466 0010 0221     		movs	r1, #2
 25467 0012 1846     		mov	r0, r3
 25468 0014 FFF7FEFF 		bl	commWrite
3716:..\src/command_processing.c **** }
 25469              		.loc 1 3716 0
 25470 0018 00BF     		nop
 25471 001a 0837     		adds	r7, r7, #8
 25472              		.cfi_def_cfa_offset 8
 25473 001c BD46     		mov	sp, r7
 25474              		.cfi_def_cfa_register 13
 25475              		@ sp needed
 25476 001e 80BD     		pop	{r7, pc}
 25477              		.cfi_endproc
 25478              	.LFE105:
 25479              		.size	cmd_ping, .-cmd_ping
 25480              		.section	.text.cmd_get_inputs,"ax",%progbits
 25481              		.align	2
 25482              		.global	cmd_get_inputs
 25483              		.thumb
 25484              		.thumb_func
 25485              		.type	cmd_get_inputs, %function
 25486              	cmd_get_inputs:
 25487              	.LFB106:
3717:..\src/command_processing.c **** 
3718:..\src/command_processing.c **** void cmd_get_inputs(){
 25488              		.loc 1 3718 0
 25489              		.cfi_startproc
 25490              		@ args = 0, pretend = 0, frame = 16
 25491              		@ frame_needed = 1, uses_anonymous_args = 0
 25492 0000 80B5     		push	{r7, lr}
 25493              		.cfi_def_cfa_offset 8
 25494              		.cfi_offset 7, -8
 25495              		.cfi_offset 14, -4
 25496 0002 84B0     		sub	sp, sp, #16
 25497              		.cfi_def_cfa_offset 24
 25498 0004 00AF     		add	r7, sp, #0
 25499              		.cfi_def_cfa_register 7
3719:..\src/command_processing.c **** 
3720:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3721:..\src/command_processing.c **** 
3722:..\src/command_processing.c ****     uint8 packet_data[6]; 
3723:..\src/command_processing.c ****     int16 aux_int16;
3724:..\src/command_processing.c ****     
3725:..\src/command_processing.c ****     //Header package
3726:..\src/command_processing.c **** 
3727:..\src/command_processing.c ****     packet_data[0] = CMD_GET_INPUTS;
 25500              		.loc 1 3727 0
 25501 0006 8323     		movs	r3, #131
 25502 0008 3B72     		strb	r3, [r7, #8]
3728:..\src/command_processing.c ****         
3729:..\src/command_processing.c ****     aux_int16 = (int16)(g_refOld[0].pos >> g_mem.enc[g_mem.motor[0].encoder_line].res[0]);
 25503              		.loc 1 3729 0
 25504 000a 234B     		ldr	r3, .L1000
 25505 000c 1A68     		ldr	r2, [r3]
 25506 000e 234B     		ldr	r3, .L1000+4
 25507 0010 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25508 0014 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 558


 25509 0016 2149     		ldr	r1, .L1000+4
 25510 0018 0346     		mov	r3, r0
 25511 001a 5B00     		lsls	r3, r3, #1
 25512 001c 0344     		add	r3, r3, r0
 25513 001e 1B01     		lsls	r3, r3, #4
 25514 0020 0B44     		add	r3, r3, r1
 25515 0022 03F29513 		addw	r3, r3, #405
 25516 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25517 0028 42FA03F3 		asr	r3, r2, r3
 25518 002c 1BB2     		sxth	r3, r3
 25519 002e FB80     		strh	r3, [r7, #6]	@ movhi
3730:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 25520              		.loc 1 3730 0
 25521 0030 BB1D     		adds	r3, r7, #6
 25522 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25523 0034 BB72     		strb	r3, [r7, #10]
3731:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 25524              		.loc 1 3731 0
 25525 0036 BB1D     		adds	r3, r7, #6
 25526 0038 0133     		adds	r3, r3, #1
 25527 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25528 003c 7B72     		strb	r3, [r7, #9]
3732:..\src/command_processing.c ****     aux_int16 = (int16)(g_refOld[1].pos >> g_mem.enc[g_mem.motor[1].encoder_line].res[0]);
 25529              		.loc 1 3732 0
 25530 003e 164B     		ldr	r3, .L1000
 25531 0040 1A69     		ldr	r2, [r3, #16]
 25532 0042 164B     		ldr	r3, .L1000+4
 25533 0044 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 25534 0048 1846     		mov	r0, r3
 25535 004a 1449     		ldr	r1, .L1000+4
 25536 004c 0346     		mov	r3, r0
 25537 004e 5B00     		lsls	r3, r3, #1
 25538 0050 0344     		add	r3, r3, r0
 25539 0052 1B01     		lsls	r3, r3, #4
 25540 0054 0B44     		add	r3, r3, r1
 25541 0056 03F29513 		addw	r3, r3, #405
 25542 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25543 005c 42FA03F3 		asr	r3, r2, r3
 25544 0060 1BB2     		sxth	r3, r3
 25545 0062 FB80     		strh	r3, [r7, #6]	@ movhi
3733:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 25546              		.loc 1 3733 0
 25547 0064 BB1D     		adds	r3, r7, #6
 25548 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25549 0068 3B73     		strb	r3, [r7, #12]
3734:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 25550              		.loc 1 3734 0
 25551 006a BB1D     		adds	r3, r7, #6
 25552 006c 0133     		adds	r3, r3, #1
 25553 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25554 0070 FB72     		strb	r3, [r7, #11]
3735:..\src/command_processing.c ****     
3736:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3737:..\src/command_processing.c **** 
3738:..\src/command_processing.c ****     packet_data[5] = LCRChecksum(packet_data, 5);
 25555              		.loc 1 3738 0
 25556 0072 07F10803 		add	r3, r7, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 559


 25557 0076 0521     		movs	r1, #5
 25558 0078 1846     		mov	r0, r3
 25559 007a FFF7FEFF 		bl	LCRChecksum
 25560 007e 0346     		mov	r3, r0
 25561 0080 7B73     		strb	r3, [r7, #13]
3739:..\src/command_processing.c **** 
3740:..\src/command_processing.c ****     commWrite(packet_data, 6);
 25562              		.loc 1 3740 0
 25563 0082 07F10803 		add	r3, r7, #8
 25564 0086 0621     		movs	r1, #6
 25565 0088 1846     		mov	r0, r3
 25566 008a FFF7FEFF 		bl	commWrite
3741:..\src/command_processing.c **** }
 25567              		.loc 1 3741 0
 25568 008e 00BF     		nop
 25569 0090 1037     		adds	r7, r7, #16
 25570              		.cfi_def_cfa_offset 8
 25571 0092 BD46     		mov	sp, r7
 25572              		.cfi_def_cfa_register 13
 25573              		@ sp needed
 25574 0094 80BD     		pop	{r7, pc}
 25575              	.L1001:
 25576 0096 00BF     		.align	2
 25577              	.L1000:
 25578 0098 00000000 		.word	g_refOld
 25579 009c 00000000 		.word	g_mem
 25580              		.cfi_endproc
 25581              	.LFE106:
 25582              		.size	cmd_get_inputs, .-cmd_get_inputs
 25583              		.section	.text.cmd_store_params,"ax",%progbits
 25584              		.align	2
 25585              		.global	cmd_store_params
 25586              		.thumb
 25587              		.thumb_func
 25588              		.type	cmd_store_params, %function
 25589              	cmd_store_params:
 25590              	.LFB107:
3742:..\src/command_processing.c **** 
3743:..\src/command_processing.c **** void cmd_store_params(){
 25591              		.loc 1 3743 0
 25592              		.cfi_startproc
 25593              		@ args = 0, pretend = 0, frame = 16
 25594              		@ frame_needed = 1, uses_anonymous_args = 0
 25595 0000 80B5     		push	{r7, lr}
 25596              		.cfi_def_cfa_offset 8
 25597              		.cfi_offset 7, -8
 25598              		.cfi_offset 14, -4
 25599 0002 84B0     		sub	sp, sp, #16
 25600              		.cfi_def_cfa_offset 24
 25601 0004 00AF     		add	r7, sp, #0
 25602              		.cfi_def_cfa_register 7
3744:..\src/command_processing.c ****     
3745:..\src/command_processing.c ****     // Check input mode enabled
3746:..\src/command_processing.c ****     uint32 off_1;
3747:..\src/command_processing.c ****     float mult_1;
3748:..\src/command_processing.c ****     uint8 CYDATA packet_lenght = 2;
 25603              		.loc 1 3748 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 560


 25604 0006 0223     		movs	r3, #2
 25605 0008 FB73     		strb	r3, [r7, #15]
3749:..\src/command_processing.c ****     uint8 CYDATA packet_data[2];
3750:..\src/command_processing.c ****     uint8 CYDATA old_id;
3751:..\src/command_processing.c ****     
3752:..\src/command_processing.c ****     if( c_mem.motor[0].input_mode == INPUT_MODE_EXTERNAL ) {
 25606              		.loc 1 3752 0
 25607 000a 674B     		ldr	r3, .L1013
 25608 000c 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 25609 0010 002B     		cmp	r3, #0
 25610 0012 7CD1     		bne	.L1003
3753:..\src/command_processing.c ****         off_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_off[0];
 25611              		.loc 1 3753 0
 25612 0014 644B     		ldr	r3, .L1013
 25613 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25614 001a 1946     		mov	r1, r3
 25615 001c 624A     		ldr	r2, .L1013
 25616 001e 0B46     		mov	r3, r1
 25617 0020 5B00     		lsls	r3, r3, #1
 25618 0022 0B44     		add	r3, r3, r1
 25619 0024 1B01     		lsls	r3, r3, #4
 25620 0026 1344     		add	r3, r3, r2
 25621 0028 03F5CC73 		add	r3, r3, #408
 25622 002c 1B68     		ldr	r3, [r3]
 25623 002e BB60     		str	r3, [r7, #8]
3754:..\src/command_processing.c ****         mult_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_mult[0];
 25624              		.loc 1 3754 0
 25625 0030 5D4B     		ldr	r3, .L1013
 25626 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25627 0036 1946     		mov	r1, r3
 25628 0038 5B4A     		ldr	r2, .L1013
 25629 003a 0B46     		mov	r3, r1
 25630 003c 5B00     		lsls	r3, r3, #1
 25631 003e 0B44     		add	r3, r3, r1
 25632 0040 1B01     		lsls	r3, r3, #4
 25633 0042 1344     		add	r3, r3, r2
 25634 0044 03F5D273 		add	r3, r3, #420
 25635 0048 1B68     		ldr	r3, [r3]	@ float
 25636 004a 7B60     		str	r3, [r7, #4]	@ float
3755:..\src/command_processing.c **** 
3756:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos / mult_1);
 25637              		.loc 1 3756 0
 25638 004c 574B     		ldr	r3, .L1013+4
 25639 004e 1B68     		ldr	r3, [r3]
 25640 0050 1846     		mov	r0, r3
 25641 0052 FFF7FEFF 		bl	__aeabi_i2f
 25642 0056 0346     		mov	r3, r0
 25643 0058 7968     		ldr	r1, [r7, #4]	@ float
 25644 005a 1846     		mov	r0, r3
 25645 005c FFF7FEFF 		bl	__aeabi_fdiv
 25646 0060 0346     		mov	r3, r0
 25647 0062 1846     		mov	r0, r3
 25648 0064 FFF7FEFF 		bl	__aeabi_f2iz
 25649 0068 0246     		mov	r2, r0
 25650 006a 504B     		ldr	r3, .L1013+4
 25651 006c 1A60     		str	r2, [r3]
3757:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 561


3758:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos * g_mem.enc[c_mem.motor[0].encoder_line].m
 25652              		.loc 1 3758 0
 25653 006e 4F4B     		ldr	r3, .L1013+4
 25654 0070 1B68     		ldr	r3, [r3]
 25655 0072 1846     		mov	r0, r3
 25656 0074 FFF7FEFF 		bl	__aeabi_i2f
 25657 0078 4B4B     		ldr	r3, .L1013
 25658 007a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25659 007e 1946     		mov	r1, r3
 25660 0080 4B4A     		ldr	r2, .L1013+8
 25661 0082 0B46     		mov	r3, r1
 25662 0084 5B00     		lsls	r3, r3, #1
 25663 0086 0B44     		add	r3, r3, r1
 25664 0088 1B01     		lsls	r3, r3, #4
 25665 008a 1344     		add	r3, r3, r2
 25666 008c 03F5D273 		add	r3, r3, #420
 25667 0090 1B68     		ldr	r3, [r3]	@ float
 25668 0092 1946     		mov	r1, r3
 25669 0094 FFF7FEFF 		bl	__aeabi_fmul
 25670 0098 0346     		mov	r3, r0
 25671 009a 1846     		mov	r0, r3
 25672 009c FFF7FEFF 		bl	__aeabi_f2iz
 25673 00a0 0246     		mov	r2, r0
 25674 00a2 424B     		ldr	r3, .L1013+4
 25675 00a4 1A60     		str	r2, [r3]
3759:..\src/command_processing.c **** 
3760:..\src/command_processing.c ****         g_refNew[0].pos += (g_mem.enc[c_mem.motor[0].encoder_line].m_off[0] - off_1);
 25676              		.loc 1 3760 0
 25677 00a6 414B     		ldr	r3, .L1013+4
 25678 00a8 1B68     		ldr	r3, [r3]
 25679 00aa 1846     		mov	r0, r3
 25680 00ac 3E4B     		ldr	r3, .L1013
 25681 00ae 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25682 00b2 1946     		mov	r1, r3
 25683 00b4 3E4A     		ldr	r2, .L1013+8
 25684 00b6 0B46     		mov	r3, r1
 25685 00b8 5B00     		lsls	r3, r3, #1
 25686 00ba 0B44     		add	r3, r3, r1
 25687 00bc 1B01     		lsls	r3, r3, #4
 25688 00be 1344     		add	r3, r3, r2
 25689 00c0 03F5CC73 		add	r3, r3, #408
 25690 00c4 1B68     		ldr	r3, [r3]
 25691 00c6 1A46     		mov	r2, r3
 25692 00c8 BB68     		ldr	r3, [r7, #8]
 25693 00ca D31A     		subs	r3, r2, r3
 25694 00cc 0344     		add	r3, r3, r0
 25695 00ce 1A46     		mov	r2, r3
 25696 00d0 364B     		ldr	r3, .L1013+4
 25697 00d2 1A60     		str	r2, [r3]
3761:..\src/command_processing.c ****         
3762:..\src/command_processing.c ****         // Check position Limits
3763:..\src/command_processing.c **** 
3764:..\src/command_processing.c ****         if (c_mem.motor[0].pos_lim_flag) {                   // position limiting
 25698              		.loc 1 3764 0
 25699 00d4 344B     		ldr	r3, .L1013
 25700 00d6 93F8E330 		ldrb	r3, [r3, #227]	@ zero_extendqisi2
 25701 00da 002B     		cmp	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 562


 25702 00dc 17D0     		beq	.L1003
3765:..\src/command_processing.c ****             if (g_refNew[0].pos < c_mem.motor[0].pos_lim_inf) 
 25703              		.loc 1 3765 0
 25704 00de 334B     		ldr	r3, .L1013+4
 25705 00e0 1A68     		ldr	r2, [r3]
 25706 00e2 314B     		ldr	r3, .L1013
 25707 00e4 D3F8E430 		ldr	r3, [r3, #228]
 25708 00e8 9A42     		cmp	r2, r3
 25709 00ea 04DA     		bge	.L1004
3766:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_inf;
 25710              		.loc 1 3766 0
 25711 00ec 2E4B     		ldr	r3, .L1013
 25712 00ee D3F8E430 		ldr	r3, [r3, #228]
 25713 00f2 2E4A     		ldr	r2, .L1013+4
 25714 00f4 1360     		str	r3, [r2]
 25715              	.L1004:
3767:..\src/command_processing.c **** 
3768:..\src/command_processing.c ****             if (g_refNew[0].pos > c_mem.motor[0].pos_lim_sup) 
 25716              		.loc 1 3768 0
 25717 00f6 2D4B     		ldr	r3, .L1013+4
 25718 00f8 1A68     		ldr	r2, [r3]
 25719 00fa 2B4B     		ldr	r3, .L1013
 25720 00fc D3F8E830 		ldr	r3, [r3, #232]
 25721 0100 9A42     		cmp	r2, r3
 25722 0102 04DD     		ble	.L1003
3769:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_sup;
 25723              		.loc 1 3769 0
 25724 0104 284B     		ldr	r3, .L1013
 25725 0106 D3F8E830 		ldr	r3, [r3, #232]
 25726 010a 284A     		ldr	r2, .L1013+4
 25727 010c 1360     		str	r3, [r2]
 25728              	.L1003:
3770:..\src/command_processing.c ****         }
3771:..\src/command_processing.c ****     }
3772:..\src/command_processing.c ****     
3773:..\src/command_processing.c ****     // If SD is used, create new param and data file
3774:..\src/command_processing.c ****     if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 25729              		.loc 1 3774 0
 25730 010e 264B     		ldr	r3, .L1013
 25731 0110 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 25732 0114 012B     		cmp	r3, #1
 25733 0116 06D1     		bne	.L1005
3775:..\src/command_processing.c ****         FS_FClose(pFile);
 25734              		.loc 1 3775 0
 25735 0118 264B     		ldr	r3, .L1013+12
 25736 011a 1B68     		ldr	r3, [r3]
 25737 011c 1846     		mov	r0, r3
 25738 011e FFF7FEFF 		bl	FS_FClose
3776:..\src/command_processing.c ****         
3777:..\src/command_processing.c ****         InitSD_FS();
 25739              		.loc 1 3777 0
 25740 0122 FFF7FEFF 		bl	InitSD_FS
 25741              	.L1005:
3778:..\src/command_processing.c ****     }
3779:..\src/command_processing.c ****    
3780:..\src/command_processing.c ****     // Store params 
3781:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 563


3782:..\src/command_processing.c ****     if (c_mem.dev.id != g_mem.dev.id) {     //If a new id is going to be set we will lose communica
 25742              		.loc 1 3782 0
 25743 0126 204B     		ldr	r3, .L1013
 25744 0128 93F8A020 		ldrb	r2, [r3, #160]	@ zero_extendqisi2
 25745 012c 204B     		ldr	r3, .L1013+8
 25746 012e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 25747 0132 9A42     		cmp	r2, r3
 25748 0134 21D0     		beq	.L1006
3783:..\src/command_processing.c ****         old_id = c_mem.dev.id;          //after the memstore(0) and the ACK won't be recognised
 25749              		.loc 1 3783 0
 25750 0136 1C4B     		ldr	r3, .L1013
 25751 0138 93F8A030 		ldrb	r3, [r3, #160]
 25752 013c FB70     		strb	r3, [r7, #3]
3784:..\src/command_processing.c ****         if(memStore(0)) {
 25753              		.loc 1 3784 0
 25754 013e 0020     		movs	r0, #0
 25755 0140 FFF7FEFF 		bl	memStore
 25756 0144 0346     		mov	r3, r0
 25757 0146 002B     		cmp	r3, #0
 25758 0148 0BD0     		beq	.L1007
3785:..\src/command_processing.c ****             packet_data[0] = ACK_OK;
 25759              		.loc 1 3785 0
 25760 014a 0123     		movs	r3, #1
 25761 014c 3B70     		strb	r3, [r7]
3786:..\src/command_processing.c ****             packet_data[1] = ACK_OK;
 25762              		.loc 1 3786 0
 25763 014e 0123     		movs	r3, #1
 25764 0150 7B70     		strb	r3, [r7, #1]
3787:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 25765              		.loc 1 3787 0
 25766 0152 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25767 0154 99B2     		uxth	r1, r3
 25768 0156 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 25769 0158 3B46     		mov	r3, r7
 25770 015a 1846     		mov	r0, r3
 25771 015c FFF7FEFF 		bl	commWrite_old_id
 25772 0160 18E0     		b	.L1009
 25773              	.L1007:
3788:..\src/command_processing.c ****         }    
3789:..\src/command_processing.c ****         else{
3790:..\src/command_processing.c ****             packet_data[0] = ACK_ERROR;
 25774              		.loc 1 3790 0
 25775 0162 0023     		movs	r3, #0
 25776 0164 3B70     		strb	r3, [r7]
3791:..\src/command_processing.c ****             packet_data[1] = ACK_ERROR;
 25777              		.loc 1 3791 0
 25778 0166 0023     		movs	r3, #0
 25779 0168 7B70     		strb	r3, [r7, #1]
3792:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 25780              		.loc 1 3792 0
 25781 016a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25782 016c 99B2     		uxth	r1, r3
 25783 016e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 25784 0170 3B46     		mov	r3, r7
 25785 0172 1846     		mov	r0, r3
 25786 0174 FFF7FEFF 		bl	commWrite_old_id
 25787 0178 0CE0     		b	.L1009
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 564


 25788              	.L1006:
3793:..\src/command_processing.c ****         }
3794:..\src/command_processing.c ****     }    
3795:..\src/command_processing.c ****     else {
3796:..\src/command_processing.c ****         if(memStore(0))
 25789              		.loc 1 3796 0
 25790 017a 0020     		movs	r0, #0
 25791 017c FFF7FEFF 		bl	memStore
 25792 0180 0346     		mov	r3, r0
 25793 0182 002B     		cmp	r3, #0
 25794 0184 03D0     		beq	.L1010
3797:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 25795              		.loc 1 3797 0
 25796 0186 0120     		movs	r0, #1
 25797 0188 FFF7FEFF 		bl	sendAcknowledgment
 25798 018c 02E0     		b	.L1009
 25799              	.L1010:
3798:..\src/command_processing.c ****         else
3799:..\src/command_processing.c ****             sendAcknowledgment(ACK_ERROR);
 25800              		.loc 1 3799 0
 25801 018e 0020     		movs	r0, #0
 25802 0190 FFF7FEFF 		bl	sendAcknowledgment
 25803              	.L1009:
3800:..\src/command_processing.c ****     }
3801:..\src/command_processing.c ****     
3802:..\src/command_processing.c ****     // FW reset (if necessary)
3803:..\src/command_processing.c ****     if (reset_PSoC_flag == TRUE) {
 25804              		.loc 1 3803 0
 25805 0194 084B     		ldr	r3, .L1013+16
 25806 0196 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25807 0198 012B     		cmp	r3, #1
 25808 019a 01D1     		bne	.L1012
3804:..\src/command_processing.c ****         CySoftwareReset();
 25809              		.loc 1 3804 0
 25810 019c FFF7FEFF 		bl	CySoftwareReset
 25811              	.L1012:
3805:..\src/command_processing.c ****     }
3806:..\src/command_processing.c **** }
 25812              		.loc 1 3806 0
 25813 01a0 00BF     		nop
 25814 01a2 1037     		adds	r7, r7, #16
 25815              		.cfi_def_cfa_offset 8
 25816 01a4 BD46     		mov	sp, r7
 25817              		.cfi_def_cfa_register 13
 25818              		@ sp needed
 25819 01a6 80BD     		pop	{r7, pc}
 25820              	.L1014:
 25821              		.align	2
 25822              	.L1013:
 25823 01a8 00000000 		.word	c_mem
 25824 01ac 00000000 		.word	g_refNew
 25825 01b0 00000000 		.word	g_mem
 25826 01b4 00000000 		.word	pFile
 25827 01b8 00000000 		.word	reset_PSoC_flag
 25828              		.cfi_endproc
 25829              	.LFE107:
 25830              		.size	cmd_store_params, .-cmd_store_params
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 565


 25831              		.section	.text.cmd_get_emg,"ax",%progbits
 25832              		.align	2
 25833              		.global	cmd_get_emg
 25834              		.thumb
 25835              		.thumb_func
 25836              		.type	cmd_get_emg, %function
 25837              	cmd_get_emg:
 25838              	.LFB108:
3807:..\src/command_processing.c **** 
3808:..\src/command_processing.c **** void cmd_get_emg(){
 25839              		.loc 1 3808 0
 25840              		.cfi_startproc
 25841              		@ args = 0, pretend = 0, frame = 16
 25842              		@ frame_needed = 1, uses_anonymous_args = 0
 25843 0000 80B5     		push	{r7, lr}
 25844              		.cfi_def_cfa_offset 8
 25845              		.cfi_offset 7, -8
 25846              		.cfi_offset 14, -4
 25847 0002 84B0     		sub	sp, sp, #16
 25848              		.cfi_def_cfa_offset 24
 25849 0004 00AF     		add	r7, sp, #0
 25850              		.cfi_def_cfa_register 7
3809:..\src/command_processing.c ****     
3810:..\src/command_processing.c ****     uint8 packet_data[6];
3811:..\src/command_processing.c ****     int16 aux_int16;
3812:..\src/command_processing.c ****     
3813:..\src/command_processing.c ****     // Header        
3814:..\src/command_processing.c ****     packet_data[0] = CMD_GET_EMG;
 25851              		.loc 1 3814 0
 25852 0006 8823     		movs	r3, #136
 25853 0008 3B72     		strb	r3, [r7, #8]
3815:..\src/command_processing.c ****     
3816:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.emg[0];
 25854              		.loc 1 3816 0
 25855 000a 144B     		ldr	r3, .L1016
 25856 000c 1B68     		ldr	r3, [r3]
 25857 000e 1BB2     		sxth	r3, r3
 25858 0010 FB80     		strh	r3, [r7, #6]	@ movhi
3817:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 25859              		.loc 1 3817 0
 25860 0012 BB1D     		adds	r3, r7, #6
 25861 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25862 0016 BB72     		strb	r3, [r7, #10]
3818:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 25863              		.loc 1 3818 0
 25864 0018 BB1D     		adds	r3, r7, #6
 25865 001a 0133     		adds	r3, r3, #1
 25866 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25867 001e 7B72     		strb	r3, [r7, #9]
3819:..\src/command_processing.c ****     
3820:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.emg[1];
 25868              		.loc 1 3820 0
 25869 0020 0E4B     		ldr	r3, .L1016
 25870 0022 5B68     		ldr	r3, [r3, #4]
 25871 0024 1BB2     		sxth	r3, r3
 25872 0026 FB80     		strh	r3, [r7, #6]	@ movhi
3821:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 566


 25873              		.loc 1 3821 0
 25874 0028 BB1D     		adds	r3, r7, #6
 25875 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25876 002c 3B73     		strb	r3, [r7, #12]
3822:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 25877              		.loc 1 3822 0
 25878 002e BB1D     		adds	r3, r7, #6
 25879 0030 0133     		adds	r3, r3, #1
 25880 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25881 0034 FB72     		strb	r3, [r7, #11]
3823:..\src/command_processing.c **** 
3824:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 25882              		.loc 1 3824 0
 25883 0036 07F10803 		add	r3, r7, #8
 25884 003a 0521     		movs	r1, #5
 25885 003c 1846     		mov	r0, r3
 25886 003e FFF7FEFF 		bl	LCRChecksum
 25887 0042 0346     		mov	r3, r0
 25888 0044 7B73     		strb	r3, [r7, #13]
3825:..\src/command_processing.c **** 
3826:..\src/command_processing.c ****     commWrite(packet_data, 6);
 25889              		.loc 1 3826 0
 25890 0046 07F10803 		add	r3, r7, #8
 25891 004a 0621     		movs	r1, #6
 25892 004c 1846     		mov	r0, r3
 25893 004e FFF7FEFF 		bl	commWrite
3827:..\src/command_processing.c **** 
3828:..\src/command_processing.c **** }
 25894              		.loc 1 3828 0
 25895 0052 00BF     		nop
 25896 0054 1037     		adds	r7, r7, #16
 25897              		.cfi_def_cfa_offset 8
 25898 0056 BD46     		mov	sp, r7
 25899              		.cfi_def_cfa_register 13
 25900              		@ sp needed
 25901 0058 80BD     		pop	{r7, pc}
 25902              	.L1017:
 25903 005a 00BF     		.align	2
 25904              	.L1016:
 25905 005c 00000000 		.word	g_adc_measOld
 25906              		.cfi_endproc
 25907              	.LFE108:
 25908              		.size	cmd_get_emg, .-cmd_get_emg
 25909              		.section	.text.cmd_get_imu_readings,"ax",%progbits
 25910              		.align	2
 25911              		.global	cmd_get_imu_readings
 25912              		.thumb
 25913              		.thumb_func
 25914              		.type	cmd_get_imu_readings, %function
 25915              	cmd_get_imu_readings:
 25916              	.LFB109:
3829:..\src/command_processing.c **** 
3830:..\src/command_processing.c **** void cmd_get_imu_readings(){
 25917              		.loc 1 3830 0
 25918              		.cfi_startproc
 25919              		@ args = 0, pretend = 0, frame = 400
 25920              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 567


 25921 0000 90B5     		push	{r4, r7, lr}
 25922              		.cfi_def_cfa_offset 12
 25923              		.cfi_offset 4, -12
 25924              		.cfi_offset 7, -8
 25925              		.cfi_offset 14, -4
 25926 0002 E5B0     		sub	sp, sp, #404
 25927              		.cfi_def_cfa_offset 416
 25928 0004 00AF     		add	r7, sp, #0
 25929              		.cfi_def_cfa_register 7
3831:..\src/command_processing.c ****     //Retrieve accelerometers, gyroscopes, magnetometers, quaternions and temperatures readings
3832:..\src/command_processing.c ****     
3833:..\src/command_processing.c ****     uint8 k_imu;
3834:..\src/command_processing.c ****     uint16 c = 1;
 25930              		.loc 1 3834 0
 25931 0006 0123     		movs	r3, #1
 25932 0008 A7F88C31 		strh	r3, [r7, #396]	@ movhi
3835:..\src/command_processing.c ****     uint8 k = 0;
 25933              		.loc 1 3835 0
 25934 000c 0023     		movs	r3, #0
 25935 000e 87F88B31 		strb	r3, [r7, #395]
3836:..\src/command_processing.c ****     uint16 gl_c = 1;
 25936              		.loc 1 3836 0
 25937 0012 0123     		movs	r3, #1
 25938 0014 A7F88831 		strh	r3, [r7, #392]	@ movhi
3837:..\src/command_processing.c ****     int16 aux_int16;
3838:..\src/command_processing.c ****     float aux_float;
3839:..\src/command_processing.c ****     
3840:..\src/command_processing.c ****     // Packet: header + imu id(uint8) + imu flags(uint8) + crc  
3841:..\src/command_processing.c ****     uint8 packet_data[350];
3842:..\src/command_processing.c ****     uint8 single_packet[32];
3843:..\src/command_processing.c ****     
3844:..\src/command_processing.c ****     //Header package 
3845:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_READINGS;
 25939              		.loc 1 3845 0
 25940 0018 07F12003 		add	r3, r7, #32
 25941 001c A122     		movs	r2, #161
 25942 001e 1A70     		strb	r2, [r3]
3846:..\src/command_processing.c ****  
3847:..\src/command_processing.c ****     for (k_imu = 0; k_imu < N_IMU_Connected; k_imu++) 
 25943              		.loc 1 3847 0
 25944 0020 0023     		movs	r3, #0
 25945 0022 87F88F31 		strb	r3, [r7, #399]
 25946 0026 82E2     		b	.L1019
 25947              	.L1035:
3848:..\src/command_processing.c ****     {	
3849:..\src/command_processing.c ****             
3850:..\src/command_processing.c ****         single_packet[0] = (uint8) 0x3A; //':';
 25948              		.loc 1 3850 0
 25949 0028 3B46     		mov	r3, r7
 25950 002a 3A22     		movs	r2, #58
 25951 002c 1A70     		strb	r2, [r3]
3851:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][0]){
 25952              		.loc 1 3851 0
 25953 002e 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 25954 0032 DB4A     		ldr	r2, .L1036
 25955 0034 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 25956 0036 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 568


 25957 0038 DA4A     		ldr	r2, .L1036+4
 25958 003a 0B46     		mov	r3, r1
 25959 003c 9B00     		lsls	r3, r3, #2
 25960 003e 0B44     		add	r3, r3, r1
 25961 0040 1344     		add	r3, r3, r2
 25962 0042 03F20223 		addw	r3, r3, #514
 25963 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25964 0048 002B     		cmp	r3, #0
 25965 004a 5DD0     		beq	.L1020
3852:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[0];
 25966              		.loc 1 3852 0
 25967 004c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25968 0050 D549     		ldr	r1, .L1036+8
 25969 0052 1346     		mov	r3, r2
 25970 0054 9B00     		lsls	r3, r3, #2
 25971 0056 1344     		add	r3, r3, r2
 25972 0058 DB00     		lsls	r3, r3, #3
 25973 005a 0B44     		add	r3, r3, r1
 25974 005c 0233     		adds	r3, r3, #2
 25975 005e B3F90030 		ldrsh	r3, [r3]
 25976 0062 A7F88631 		strh	r3, [r7, #390]	@ movhi
3853:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 25977              		.loc 1 3853 0
 25978 0066 B7F88C31 		ldrh	r3, [r7, #396]
 25979 006a 0133     		adds	r3, r3, #1
 25980 006c 07F5C372 		add	r2, r7, #390
 25981 0070 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25982 0072 3A46     		mov	r2, r7
 25983 0074 D154     		strb	r1, [r2, r3]
3854:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 25984              		.loc 1 3854 0
 25985 0076 B7F88C21 		ldrh	r2, [r7, #396]
 25986 007a 07F5C373 		add	r3, r7, #390
 25987 007e 0133     		adds	r3, r3, #1
 25988 0080 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25989 0082 3B46     		mov	r3, r7
 25990 0084 9954     		strb	r1, [r3, r2]
3855:..\src/command_processing.c **** 
3856:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[1];
 25991              		.loc 1 3856 0
 25992 0086 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25993 008a C749     		ldr	r1, .L1036+8
 25994 008c 1346     		mov	r3, r2
 25995 008e 9B00     		lsls	r3, r3, #2
 25996 0090 1344     		add	r3, r3, r2
 25997 0092 DB00     		lsls	r3, r3, #3
 25998 0094 0B44     		add	r3, r3, r1
 25999 0096 0433     		adds	r3, r3, #4
 26000 0098 B3F90030 		ldrsh	r3, [r3]
 26001 009c A7F88631 		strh	r3, [r7, #390]	@ movhi
3857:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 26002              		.loc 1 3857 0
 26003 00a0 B7F88C31 		ldrh	r3, [r7, #396]
 26004 00a4 0333     		adds	r3, r3, #3
 26005 00a6 07F5C372 		add	r2, r7, #390
 26006 00aa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26007 00ac 3A46     		mov	r2, r7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 569


 26008 00ae D154     		strb	r1, [r2, r3]
3858:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 26009              		.loc 1 3858 0
 26010 00b0 B7F88C31 		ldrh	r3, [r7, #396]
 26011 00b4 9A1C     		adds	r2, r3, #2
 26012 00b6 07F5C373 		add	r3, r7, #390
 26013 00ba 0133     		adds	r3, r3, #1
 26014 00bc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26015 00be 3B46     		mov	r3, r7
 26016 00c0 9954     		strb	r1, [r3, r2]
3859:..\src/command_processing.c **** 
3860:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[2];
 26017              		.loc 1 3860 0
 26018 00c2 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26019 00c6 B849     		ldr	r1, .L1036+8
 26020 00c8 1346     		mov	r3, r2
 26021 00ca 9B00     		lsls	r3, r3, #2
 26022 00cc 1344     		add	r3, r3, r2
 26023 00ce DB00     		lsls	r3, r3, #3
 26024 00d0 0B44     		add	r3, r3, r1
 26025 00d2 0633     		adds	r3, r3, #6
 26026 00d4 B3F90030 		ldrsh	r3, [r3]
 26027 00d8 A7F88631 		strh	r3, [r7, #390]	@ movhi
3861:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 26028              		.loc 1 3861 0
 26029 00dc B7F88C31 		ldrh	r3, [r7, #396]
 26030 00e0 0533     		adds	r3, r3, #5
 26031 00e2 07F5C372 		add	r2, r7, #390
 26032 00e6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26033 00e8 3A46     		mov	r2, r7
 26034 00ea D154     		strb	r1, [r2, r3]
3862:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 26035              		.loc 1 3862 0
 26036 00ec B7F88C31 		ldrh	r3, [r7, #396]
 26037 00f0 1A1D     		adds	r2, r3, #4
 26038 00f2 07F5C373 		add	r3, r7, #390
 26039 00f6 0133     		adds	r3, r3, #1
 26040 00f8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26041 00fa 3B46     		mov	r3, r7
 26042 00fc 9954     		strb	r1, [r3, r2]
3863:..\src/command_processing.c **** 
3864:..\src/command_processing.c ****             c = c + 6;
 26043              		.loc 1 3864 0
 26044 00fe B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26045 0102 0633     		adds	r3, r3, #6
 26046 0104 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26047              	.L1020:
3865:..\src/command_processing.c ****         }
3866:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][1]){
 26048              		.loc 1 3866 0
 26049 0108 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26050 010c A44A     		ldr	r2, .L1036
 26051 010e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26052 0110 1946     		mov	r1, r3
 26053 0112 A44A     		ldr	r2, .L1036+4
 26054 0114 0B46     		mov	r3, r1
 26055 0116 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 570


 26056 0118 0B44     		add	r3, r3, r1
 26057 011a 1344     		add	r3, r3, r2
 26058 011c 03F20323 		addw	r3, r3, #515
 26059 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26060 0122 002B     		cmp	r3, #0
 26061 0124 5DD0     		beq	.L1021
3867:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[0];
 26062              		.loc 1 3867 0
 26063 0126 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26064 012a 9F49     		ldr	r1, .L1036+8
 26065 012c 1346     		mov	r3, r2
 26066 012e 9B00     		lsls	r3, r3, #2
 26067 0130 1344     		add	r3, r3, r2
 26068 0132 DB00     		lsls	r3, r3, #3
 26069 0134 0B44     		add	r3, r3, r1
 26070 0136 0833     		adds	r3, r3, #8
 26071 0138 B3F90030 		ldrsh	r3, [r3]
 26072 013c A7F88631 		strh	r3, [r7, #390]	@ movhi
3868:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 26073              		.loc 1 3868 0
 26074 0140 B7F88C31 		ldrh	r3, [r7, #396]
 26075 0144 0133     		adds	r3, r3, #1
 26076 0146 07F5C372 		add	r2, r7, #390
 26077 014a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26078 014c 3A46     		mov	r2, r7
 26079 014e D154     		strb	r1, [r2, r3]
3869:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 26080              		.loc 1 3869 0
 26081 0150 B7F88C21 		ldrh	r2, [r7, #396]
 26082 0154 07F5C373 		add	r3, r7, #390
 26083 0158 0133     		adds	r3, r3, #1
 26084 015a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26085 015c 3B46     		mov	r3, r7
 26086 015e 9954     		strb	r1, [r3, r2]
3870:..\src/command_processing.c **** 
3871:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[1];
 26087              		.loc 1 3871 0
 26088 0160 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26089 0164 9049     		ldr	r1, .L1036+8
 26090 0166 1346     		mov	r3, r2
 26091 0168 9B00     		lsls	r3, r3, #2
 26092 016a 1344     		add	r3, r3, r2
 26093 016c DB00     		lsls	r3, r3, #3
 26094 016e 0B44     		add	r3, r3, r1
 26095 0170 0A33     		adds	r3, r3, #10
 26096 0172 B3F90030 		ldrsh	r3, [r3]
 26097 0176 A7F88631 		strh	r3, [r7, #390]	@ movhi
3872:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 26098              		.loc 1 3872 0
 26099 017a B7F88C31 		ldrh	r3, [r7, #396]
 26100 017e 0333     		adds	r3, r3, #3
 26101 0180 07F5C372 		add	r2, r7, #390
 26102 0184 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26103 0186 3A46     		mov	r2, r7
 26104 0188 D154     		strb	r1, [r2, r3]
3873:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 26105              		.loc 1 3873 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 571


 26106 018a B7F88C31 		ldrh	r3, [r7, #396]
 26107 018e 9A1C     		adds	r2, r3, #2
 26108 0190 07F5C373 		add	r3, r7, #390
 26109 0194 0133     		adds	r3, r3, #1
 26110 0196 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26111 0198 3B46     		mov	r3, r7
 26112 019a 9954     		strb	r1, [r3, r2]
3874:..\src/command_processing.c **** 
3875:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[2];
 26113              		.loc 1 3875 0
 26114 019c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26115 01a0 8149     		ldr	r1, .L1036+8
 26116 01a2 1346     		mov	r3, r2
 26117 01a4 9B00     		lsls	r3, r3, #2
 26118 01a6 1344     		add	r3, r3, r2
 26119 01a8 DB00     		lsls	r3, r3, #3
 26120 01aa 0B44     		add	r3, r3, r1
 26121 01ac 0C33     		adds	r3, r3, #12
 26122 01ae B3F90030 		ldrsh	r3, [r3]
 26123 01b2 A7F88631 		strh	r3, [r7, #390]	@ movhi
3876:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 26124              		.loc 1 3876 0
 26125 01b6 B7F88C31 		ldrh	r3, [r7, #396]
 26126 01ba 0533     		adds	r3, r3, #5
 26127 01bc 07F5C372 		add	r2, r7, #390
 26128 01c0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26129 01c2 3A46     		mov	r2, r7
 26130 01c4 D154     		strb	r1, [r2, r3]
3877:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 26131              		.loc 1 3877 0
 26132 01c6 B7F88C31 		ldrh	r3, [r7, #396]
 26133 01ca 1A1D     		adds	r2, r3, #4
 26134 01cc 07F5C373 		add	r3, r7, #390
 26135 01d0 0133     		adds	r3, r3, #1
 26136 01d2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26137 01d4 3B46     		mov	r3, r7
 26138 01d6 9954     		strb	r1, [r3, r2]
3878:..\src/command_processing.c **** 
3879:..\src/command_processing.c ****             c = c + 6;
 26139              		.loc 1 3879 0
 26140 01d8 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26141 01dc 0633     		adds	r3, r3, #6
 26142 01de A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26143              	.L1021:
3880:..\src/command_processing.c ****         }
3881:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][2]){
 26144              		.loc 1 3881 0
 26145 01e2 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26146 01e6 6E4A     		ldr	r2, .L1036
 26147 01e8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26148 01ea 1946     		mov	r1, r3
 26149 01ec 6D4A     		ldr	r2, .L1036+4
 26150 01ee 0B46     		mov	r3, r1
 26151 01f0 9B00     		lsls	r3, r3, #2
 26152 01f2 0B44     		add	r3, r3, r1
 26153 01f4 1344     		add	r3, r3, r2
 26154 01f6 03F50173 		add	r3, r3, #516
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 572


 26155 01fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26156 01fc 002B     		cmp	r3, #0
 26157 01fe 5DD0     		beq	.L1022
3882:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[0];
 26158              		.loc 1 3882 0
 26159 0200 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26160 0204 6849     		ldr	r1, .L1036+8
 26161 0206 1346     		mov	r3, r2
 26162 0208 9B00     		lsls	r3, r3, #2
 26163 020a 1344     		add	r3, r3, r2
 26164 020c DB00     		lsls	r3, r3, #3
 26165 020e 0B44     		add	r3, r3, r1
 26166 0210 0E33     		adds	r3, r3, #14
 26167 0212 B3F90030 		ldrsh	r3, [r3]
 26168 0216 A7F88631 		strh	r3, [r7, #390]	@ movhi
3883:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 26169              		.loc 1 3883 0
 26170 021a B7F88C31 		ldrh	r3, [r7, #396]
 26171 021e 0133     		adds	r3, r3, #1
 26172 0220 07F5C372 		add	r2, r7, #390
 26173 0224 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26174 0226 3A46     		mov	r2, r7
 26175 0228 D154     		strb	r1, [r2, r3]
3884:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 26176              		.loc 1 3884 0
 26177 022a B7F88C21 		ldrh	r2, [r7, #396]
 26178 022e 07F5C373 		add	r3, r7, #390
 26179 0232 0133     		adds	r3, r3, #1
 26180 0234 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26181 0236 3B46     		mov	r3, r7
 26182 0238 9954     		strb	r1, [r3, r2]
3885:..\src/command_processing.c **** 
3886:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[1];
 26183              		.loc 1 3886 0
 26184 023a 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26185 023e 5A49     		ldr	r1, .L1036+8
 26186 0240 1346     		mov	r3, r2
 26187 0242 9B00     		lsls	r3, r3, #2
 26188 0244 1344     		add	r3, r3, r2
 26189 0246 DB00     		lsls	r3, r3, #3
 26190 0248 0B44     		add	r3, r3, r1
 26191 024a 1033     		adds	r3, r3, #16
 26192 024c B3F90030 		ldrsh	r3, [r3]
 26193 0250 A7F88631 		strh	r3, [r7, #390]	@ movhi
3887:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 26194              		.loc 1 3887 0
 26195 0254 B7F88C31 		ldrh	r3, [r7, #396]
 26196 0258 0333     		adds	r3, r3, #3
 26197 025a 07F5C372 		add	r2, r7, #390
 26198 025e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26199 0260 3A46     		mov	r2, r7
 26200 0262 D154     		strb	r1, [r2, r3]
3888:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 26201              		.loc 1 3888 0
 26202 0264 B7F88C31 		ldrh	r3, [r7, #396]
 26203 0268 9A1C     		adds	r2, r3, #2
 26204 026a 07F5C373 		add	r3, r7, #390
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 573


 26205 026e 0133     		adds	r3, r3, #1
 26206 0270 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26207 0272 3B46     		mov	r3, r7
 26208 0274 9954     		strb	r1, [r3, r2]
3889:..\src/command_processing.c **** 
3890:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[2];
 26209              		.loc 1 3890 0
 26210 0276 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26211 027a 4B49     		ldr	r1, .L1036+8
 26212 027c 1346     		mov	r3, r2
 26213 027e 9B00     		lsls	r3, r3, #2
 26214 0280 1344     		add	r3, r3, r2
 26215 0282 DB00     		lsls	r3, r3, #3
 26216 0284 0B44     		add	r3, r3, r1
 26217 0286 1233     		adds	r3, r3, #18
 26218 0288 B3F90030 		ldrsh	r3, [r3]
 26219 028c A7F88631 		strh	r3, [r7, #390]	@ movhi
3891:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 26220              		.loc 1 3891 0
 26221 0290 B7F88C31 		ldrh	r3, [r7, #396]
 26222 0294 0533     		adds	r3, r3, #5
 26223 0296 07F5C372 		add	r2, r7, #390
 26224 029a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26225 029c 3A46     		mov	r2, r7
 26226 029e D154     		strb	r1, [r2, r3]
3892:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 26227              		.loc 1 3892 0
 26228 02a0 B7F88C31 		ldrh	r3, [r7, #396]
 26229 02a4 1A1D     		adds	r2, r3, #4
 26230 02a6 07F5C373 		add	r3, r7, #390
 26231 02aa 0133     		adds	r3, r3, #1
 26232 02ac 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26233 02ae 3B46     		mov	r3, r7
 26234 02b0 9954     		strb	r1, [r3, r2]
3893:..\src/command_processing.c **** 
3894:..\src/command_processing.c ****             c = c + 6;
 26235              		.loc 1 3894 0
 26236 02b2 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26237 02b6 0633     		adds	r3, r3, #6
 26238 02b8 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26239              	.L1022:
3895:..\src/command_processing.c ****         }
3896:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][3]){
 26240              		.loc 1 3896 0
 26241 02bc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26242 02c0 374A     		ldr	r2, .L1036
 26243 02c2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26244 02c4 1946     		mov	r1, r3
 26245 02c6 374A     		ldr	r2, .L1036+4
 26246 02c8 0B46     		mov	r3, r1
 26247 02ca 9B00     		lsls	r3, r3, #2
 26248 02cc 0B44     		add	r3, r3, r1
 26249 02ce 1344     		add	r3, r3, r2
 26250 02d0 03F20523 		addw	r3, r3, #517
 26251 02d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26252 02d6 002B     		cmp	r3, #0
 26253 02d8 00F0AF80 		beq	.L1023
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 574


3897:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[0];
 26254              		.loc 1 3897 0
 26255 02dc 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26256 02e0 3149     		ldr	r1, .L1036+8
 26257 02e2 1346     		mov	r3, r2
 26258 02e4 9B00     		lsls	r3, r3, #2
 26259 02e6 1344     		add	r3, r3, r2
 26260 02e8 DB00     		lsls	r3, r3, #3
 26261 02ea 0B44     		add	r3, r3, r1
 26262 02ec 1433     		adds	r3, r3, #20
 26263 02ee 1B68     		ldr	r3, [r3]	@ float
 26264 02f0 C7F88031 		str	r3, [r7, #384]	@ float
3898:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26265              		.loc 1 3898 0
 26266 02f4 0023     		movs	r3, #0
 26267 02f6 87F88B31 		strb	r3, [r7, #395]
 26268 02fa 13E0     		b	.L1024
 26269              	.L1025:
3899:..\src/command_processing.c ****                 single_packet[c + 4 - k -1] = ((char*)(&aux_float))[k];
 26270              		.loc 1 3899 0 discriminator 3
 26271 02fc B7F88C31 		ldrh	r3, [r7, #396]
 26272 0300 1A1D     		adds	r2, r3, #4
 26273 0302 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26274 0306 D31A     		subs	r3, r2, r3
 26275 0308 013B     		subs	r3, r3, #1
 26276 030a 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26277 030e 07F5C071 		add	r1, r7, #384
 26278 0312 0A44     		add	r2, r2, r1
 26279 0314 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26280 0316 3A46     		mov	r2, r7
 26281 0318 D154     		strb	r1, [r2, r3]
3898:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26282              		.loc 1 3898 0 discriminator 3
 26283 031a 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26284 031e 0133     		adds	r3, r3, #1
 26285 0320 87F88B31 		strb	r3, [r7, #395]
 26286              	.L1024:
3898:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26287              		.loc 1 3898 0 is_stmt 0 discriminator 1
 26288 0324 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26289 0328 032B     		cmp	r3, #3
 26290 032a E7D9     		bls	.L1025
3900:..\src/command_processing.c ****             }
3901:..\src/command_processing.c **** 
3902:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[1];
 26291              		.loc 1 3902 0 is_stmt 1
 26292 032c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26293 0330 1D49     		ldr	r1, .L1036+8
 26294 0332 1346     		mov	r3, r2
 26295 0334 9B00     		lsls	r3, r3, #2
 26296 0336 1344     		add	r3, r3, r2
 26297 0338 DB00     		lsls	r3, r3, #3
 26298 033a 0B44     		add	r3, r3, r1
 26299 033c 1833     		adds	r3, r3, #24
 26300 033e 1B68     		ldr	r3, [r3]	@ float
 26301 0340 C7F88031 		str	r3, [r7, #384]	@ float
3903:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 575


 26302              		.loc 1 3903 0
 26303 0344 0023     		movs	r3, #0
 26304 0346 87F88B31 		strb	r3, [r7, #395]
 26305 034a 14E0     		b	.L1026
 26306              	.L1027:
3904:..\src/command_processing.c ****                 single_packet[c + 8 - k -1] = ((char*)(&aux_float))[k];
 26307              		.loc 1 3904 0 discriminator 3
 26308 034c B7F88C31 		ldrh	r3, [r7, #396]
 26309 0350 03F10802 		add	r2, r3, #8
 26310 0354 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26311 0358 D31A     		subs	r3, r2, r3
 26312 035a 013B     		subs	r3, r3, #1
 26313 035c 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26314 0360 07F5C071 		add	r1, r7, #384
 26315 0364 0A44     		add	r2, r2, r1
 26316 0366 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26317 0368 3A46     		mov	r2, r7
 26318 036a D154     		strb	r1, [r2, r3]
3903:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26319              		.loc 1 3903 0 discriminator 3
 26320 036c 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26321 0370 0133     		adds	r3, r3, #1
 26322 0372 87F88B31 		strb	r3, [r7, #395]
 26323              	.L1026:
3903:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26324              		.loc 1 3903 0 is_stmt 0 discriminator 1
 26325 0376 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26326 037a 032B     		cmp	r3, #3
 26327 037c E6D9     		bls	.L1027
3905:..\src/command_processing.c ****             }
3906:..\src/command_processing.c **** 
3907:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[2];
 26328              		.loc 1 3907 0 is_stmt 1
 26329 037e 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26330 0382 0949     		ldr	r1, .L1036+8
 26331 0384 1346     		mov	r3, r2
 26332 0386 9B00     		lsls	r3, r3, #2
 26333 0388 1344     		add	r3, r3, r2
 26334 038a DB00     		lsls	r3, r3, #3
 26335 038c 0B44     		add	r3, r3, r1
 26336 038e 1C33     		adds	r3, r3, #28
 26337 0390 1B68     		ldr	r3, [r3]	@ float
 26338 0392 C7F88031 		str	r3, [r7, #384]	@ float
3908:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26339              		.loc 1 3908 0
 26340 0396 0023     		movs	r3, #0
 26341 0398 87F88B31 		strb	r3, [r7, #395]
 26342 039c 1BE0     		b	.L1028
 26343              	.L1037:
 26344 039e 00BF     		.align	2
 26345              	.L1036:
 26346 03a0 00000000 		.word	IMU_connected
 26347 03a4 00000000 		.word	c_mem
 26348 03a8 00000000 		.word	g_imu
 26349              	.L1029:
3909:..\src/command_processing.c ****                 single_packet[c + 12 - k -1] = ((char*)(&aux_float))[k];
 26350              		.loc 1 3909 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 576


 26351 03ac B7F88C31 		ldrh	r3, [r7, #396]
 26352 03b0 03F10C02 		add	r2, r3, #12
 26353 03b4 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26354 03b8 D31A     		subs	r3, r2, r3
 26355 03ba 013B     		subs	r3, r3, #1
 26356 03bc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26357 03c0 07F5C071 		add	r1, r7, #384
 26358 03c4 0A44     		add	r2, r2, r1
 26359 03c6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26360 03c8 3A46     		mov	r2, r7
 26361 03ca D154     		strb	r1, [r2, r3]
3908:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26362              		.loc 1 3908 0 discriminator 3
 26363 03cc 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26364 03d0 0133     		adds	r3, r3, #1
 26365 03d2 87F88B31 		strb	r3, [r7, #395]
 26366              	.L1028:
3908:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26367              		.loc 1 3908 0 is_stmt 0 discriminator 1
 26368 03d6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26369 03da 032B     		cmp	r3, #3
 26370 03dc E6D9     		bls	.L1029
3910:..\src/command_processing.c ****             }
3911:..\src/command_processing.c **** 
3912:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[3];
 26371              		.loc 1 3912 0 is_stmt 1
 26372 03de 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26373 03e2 6749     		ldr	r1, .L1038
 26374 03e4 1346     		mov	r3, r2
 26375 03e6 9B00     		lsls	r3, r3, #2
 26376 03e8 1344     		add	r3, r3, r2
 26377 03ea DB00     		lsls	r3, r3, #3
 26378 03ec 0B44     		add	r3, r3, r1
 26379 03ee 2033     		adds	r3, r3, #32
 26380 03f0 1B68     		ldr	r3, [r3]	@ float
 26381 03f2 C7F88031 		str	r3, [r7, #384]	@ float
3913:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26382              		.loc 1 3913 0
 26383 03f6 0023     		movs	r3, #0
 26384 03f8 87F88B31 		strb	r3, [r7, #395]
 26385 03fc 14E0     		b	.L1030
 26386              	.L1031:
3914:..\src/command_processing.c ****                 single_packet[c + 16 - k -1] = ((char*)(&aux_float))[k];
 26387              		.loc 1 3914 0 discriminator 3
 26388 03fe B7F88C31 		ldrh	r3, [r7, #396]
 26389 0402 03F11002 		add	r2, r3, #16
 26390 0406 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26391 040a D31A     		subs	r3, r2, r3
 26392 040c 013B     		subs	r3, r3, #1
 26393 040e 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26394 0412 07F5C071 		add	r1, r7, #384
 26395 0416 0A44     		add	r2, r2, r1
 26396 0418 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26397 041a 3A46     		mov	r2, r7
 26398 041c D154     		strb	r1, [r2, r3]
3913:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26399              		.loc 1 3913 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 577


 26400 041e 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26401 0422 0133     		adds	r3, r3, #1
 26402 0424 87F88B31 		strb	r3, [r7, #395]
 26403              	.L1030:
3913:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26404              		.loc 1 3913 0 is_stmt 0 discriminator 1
 26405 0428 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26406 042c 032B     		cmp	r3, #3
 26407 042e E6D9     		bls	.L1031
3915:..\src/command_processing.c ****             }
3916:..\src/command_processing.c ****             c = c + 16;
 26408              		.loc 1 3916 0 is_stmt 1
 26409 0430 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26410 0434 1033     		adds	r3, r3, #16
 26411 0436 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26412              	.L1023:
3917:..\src/command_processing.c ****         }
3918:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][4]){
 26413              		.loc 1 3918 0
 26414 043a 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26415 043e 514A     		ldr	r2, .L1038+4
 26416 0440 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26417 0442 1946     		mov	r1, r3
 26418 0444 504A     		ldr	r2, .L1038+8
 26419 0446 0B46     		mov	r3, r1
 26420 0448 9B00     		lsls	r3, r3, #2
 26421 044a 0B44     		add	r3, r3, r1
 26422 044c 1344     		add	r3, r3, r2
 26423 044e 03F20623 		addw	r3, r3, #518
 26424 0452 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26425 0454 002B     		cmp	r3, #0
 26426 0456 21D0     		beq	.L1032
3919:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].temp_value;
 26427              		.loc 1 3919 0
 26428 0458 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26429 045c 4849     		ldr	r1, .L1038
 26430 045e 1346     		mov	r3, r2
 26431 0460 9B00     		lsls	r3, r3, #2
 26432 0462 1344     		add	r3, r3, r2
 26433 0464 DB00     		lsls	r3, r3, #3
 26434 0466 0B44     		add	r3, r3, r1
 26435 0468 2433     		adds	r3, r3, #36
 26436 046a B3F90030 		ldrsh	r3, [r3]
 26437 046e A7F88631 		strh	r3, [r7, #390]	@ movhi
3920:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 26438              		.loc 1 3920 0
 26439 0472 B7F88C31 		ldrh	r3, [r7, #396]
 26440 0476 0133     		adds	r3, r3, #1
 26441 0478 07F5C372 		add	r2, r7, #390
 26442 047c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26443 047e 3A46     		mov	r2, r7
 26444 0480 D154     		strb	r1, [r2, r3]
3921:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 26445              		.loc 1 3921 0
 26446 0482 B7F88C21 		ldrh	r2, [r7, #396]
 26447 0486 07F5C373 		add	r3, r7, #390
 26448 048a 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 578


 26449 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26450 048e 3B46     		mov	r3, r7
 26451 0490 9954     		strb	r1, [r3, r2]
3922:..\src/command_processing.c ****             c = c + 2;
 26452              		.loc 1 3922 0
 26453 0492 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26454 0496 0233     		adds	r3, r3, #2
 26455 0498 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26456              	.L1032:
3923:..\src/command_processing.c ****         }
3924:..\src/command_processing.c ****         single_packet[single_imu_size[IMU_connected[k_imu]] - 1] = (uint8) 0x3A; //':';
 26457              		.loc 1 3924 0
 26458 049c 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26459 04a0 384A     		ldr	r2, .L1038+4
 26460 04a2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26461 04a4 1A46     		mov	r2, r3
 26462 04a6 394B     		ldr	r3, .L1038+12
 26463 04a8 53F82230 		ldr	r3, [r3, r2, lsl #2]
 26464 04ac 013B     		subs	r3, r3, #1
 26465 04ae 3A46     		mov	r2, r7
 26466 04b0 3A21     		movs	r1, #58
 26467 04b2 D154     		strb	r1, [r2, r3]
3925:..\src/command_processing.c ****         c = 1;
 26468              		.loc 1 3925 0
 26469 04b4 0123     		movs	r3, #1
 26470 04b6 A7F88C31 		strh	r3, [r7, #396]	@ movhi
3926:..\src/command_processing.c ****                
3927:..\src/command_processing.c ****         for(k=0; k < single_imu_size[IMU_connected[k_imu]]; k++) {
 26471              		.loc 1 3927 0
 26472 04ba 0023     		movs	r3, #0
 26473 04bc 87F88B31 		strb	r3, [r7, #395]
 26474 04c0 10E0     		b	.L1033
 26475              	.L1034:
3928:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 26476              		.loc 1 3928 0 discriminator 3
 26477 04c2 B7F88821 		ldrh	r2, [r7, #392]
 26478 04c6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26479 04ca 1344     		add	r3, r3, r2
 26480 04cc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26481 04d0 3946     		mov	r1, r7
 26482 04d2 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 26483 04d4 07F12002 		add	r2, r7, #32
 26484 04d8 D154     		strb	r1, [r2, r3]
3927:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 26485              		.loc 1 3927 0 discriminator 3
 26486 04da 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26487 04de 0133     		adds	r3, r3, #1
 26488 04e0 87F88B31 		strb	r3, [r7, #395]
 26489              	.L1033:
3927:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 26490              		.loc 1 3927 0 is_stmt 0 discriminator 1
 26491 04e4 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26492 04e8 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26493 04ec 2549     		ldr	r1, .L1038+4
 26494 04ee CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 26495 04f0 1946     		mov	r1, r3
 26496 04f2 264B     		ldr	r3, .L1038+12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 579


 26497 04f4 53F82130 		ldr	r3, [r3, r1, lsl #2]
 26498 04f8 9A42     		cmp	r2, r3
 26499 04fa E2DB     		blt	.L1034
3929:..\src/command_processing.c ****         }
3930:..\src/command_processing.c ****         gl_c = gl_c + single_imu_size[IMU_connected[k_imu]];  
 26500              		.loc 1 3930 0 is_stmt 1 discriminator 2
 26501 04fc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26502 0500 204A     		ldr	r2, .L1038+4
 26503 0502 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26504 0504 1A46     		mov	r2, r3
 26505 0506 214B     		ldr	r3, .L1038+12
 26506 0508 53F82230 		ldr	r3, [r3, r2, lsl #2]
 26507 050c 9AB2     		uxth	r2, r3
 26508 050e B7F88831 		ldrh	r3, [r7, #392]	@ movhi
 26509 0512 1344     		add	r3, r3, r2
 26510 0514 A7F88831 		strh	r3, [r7, #392]	@ movhi
3931:..\src/command_processing.c ****         
3932:..\src/command_processing.c ****         memset(&single_packet, 0, sizeof(single_packet));     
 26511              		.loc 1 3932 0 discriminator 2
 26512 0518 3B46     		mov	r3, r7
 26513 051a 2022     		movs	r2, #32
 26514 051c 0021     		movs	r1, #0
 26515 051e 1846     		mov	r0, r3
 26516 0520 FFF7FEFF 		bl	memset
3847:..\src/command_processing.c ****     {	
 26517              		.loc 1 3847 0 discriminator 2
 26518 0524 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26519 0528 0133     		adds	r3, r3, #1
 26520 052a 87F88F31 		strb	r3, [r7, #399]
 26521              	.L1019:
3847:..\src/command_processing.c ****     {	
 26522              		.loc 1 3847 0 is_stmt 0 discriminator 1
 26523 052e 184B     		ldr	r3, .L1038+16
 26524 0530 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26525 0532 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26526 0536 9A42     		cmp	r2, r3
 26527 0538 FFF476AD 		bcc	.L1035
3933:..\src/command_processing.c ****         
3934:..\src/command_processing.c ****     }
3935:..\src/command_processing.c **** 
3936:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3937:..\src/command_processing.c ****     packet_data[imus_data_size-1] = LCRChecksum (packet_data, imus_data_size-1);
 26528              		.loc 1 3937 0 is_stmt 1
 26529 053c 154B     		ldr	r3, .L1038+20
 26530 053e 1B68     		ldr	r3, [r3]
 26531 0540 5C1E     		subs	r4, r3, #1
 26532 0542 144B     		ldr	r3, .L1038+20
 26533 0544 1B68     		ldr	r3, [r3]
 26534 0546 DBB2     		uxtb	r3, r3
 26535 0548 013B     		subs	r3, r3, #1
 26536 054a DAB2     		uxtb	r2, r3
 26537 054c 07F12003 		add	r3, r7, #32
 26538 0550 1146     		mov	r1, r2
 26539 0552 1846     		mov	r0, r3
 26540 0554 FFF7FEFF 		bl	LCRChecksum
 26541 0558 0346     		mov	r3, r0
 26542 055a 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 580


 26543 055c 07F12003 		add	r3, r7, #32
 26544 0560 1A55     		strb	r2, [r3, r4]
3938:..\src/command_processing.c ****     commWrite(packet_data, imus_data_size);
 26545              		.loc 1 3938 0
 26546 0562 0C4B     		ldr	r3, .L1038+20
 26547 0564 1B68     		ldr	r3, [r3]
 26548 0566 9AB2     		uxth	r2, r3
 26549 0568 07F12003 		add	r3, r7, #32
 26550 056c 1146     		mov	r1, r2
 26551 056e 1846     		mov	r0, r3
 26552 0570 FFF7FEFF 		bl	commWrite
3939:..\src/command_processing.c **** }
 26553              		.loc 1 3939 0
 26554 0574 00BF     		nop
 26555 0576 07F5CA77 		add	r7, r7, #404
 26556              		.cfi_def_cfa_offset 12
 26557 057a BD46     		mov	sp, r7
 26558              		.cfi_def_cfa_register 13
 26559              		@ sp needed
 26560 057c 90BD     		pop	{r4, r7, pc}
 26561              	.L1039:
 26562 057e 00BF     		.align	2
 26563              	.L1038:
 26564 0580 00000000 		.word	g_imu
 26565 0584 00000000 		.word	IMU_connected
 26566 0588 00000000 		.word	c_mem
 26567 058c 00000000 		.word	single_imu_size
 26568 0590 00000000 		.word	N_IMU_Connected
 26569 0594 00000000 		.word	imus_data_size
 26570              		.cfi_endproc
 26571              	.LFE109:
 26572              		.size	cmd_get_imu_readings, .-cmd_get_imu_readings
 26573              		.section	.text.cmd_get_encoder_map,"ax",%progbits
 26574              		.align	2
 26575              		.global	cmd_get_encoder_map
 26576              		.thumb
 26577              		.thumb_func
 26578              		.type	cmd_get_encoder_map, %function
 26579              	cmd_get_encoder_map:
 26580              	.LFB110:
3940:..\src/command_processing.c **** 
3941:..\src/command_processing.c **** void cmd_get_encoder_map(){
 26581              		.loc 1 3941 0
 26582              		.cfi_startproc
 26583              		@ args = 0, pretend = 0, frame = 16
 26584              		@ frame_needed = 1, uses_anonymous_args = 0
 26585 0000 90B5     		push	{r4, r7, lr}
 26586              		.cfi_def_cfa_offset 12
 26587              		.cfi_offset 4, -12
 26588              		.cfi_offset 7, -8
 26589              		.cfi_offset 14, -4
 26590 0002 85B0     		sub	sp, sp, #20
 26591              		.cfi_def_cfa_offset 32
 26592 0004 00AF     		add	r7, sp, #0
 26593              		.cfi_def_cfa_register 7
3942:..\src/command_processing.c ****     //Retrieve Encoder map
3943:..\src/command_processing.c ****     
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 581


3944:..\src/command_processing.c ****     uint8 packet_data[4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
3945:..\src/command_processing.c ****     uint8 CYDATA i, j;
3946:..\src/command_processing.c ****     
3947:..\src/command_processing.c ****     // Header        
3948:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_CONF;
 26594              		.loc 1 3948 0
 26595 0006 A323     		movs	r3, #163
 26596 0008 3B70     		strb	r3, [r7]
3949:..\src/command_processing.c ****     
3950:..\src/command_processing.c ****     // Fill payload
3951:..\src/command_processing.c ****     packet_data[1] = N_ENCODER_LINE_MAX;
 26597              		.loc 1 3951 0
 26598 000a 0223     		movs	r3, #2
 26599 000c 7B70     		strb	r3, [r7, #1]
3952:..\src/command_processing.c ****     packet_data[2] = N_ENCODERS_PER_LINE_MAX;
 26600              		.loc 1 3952 0
 26601 000e 0523     		movs	r3, #5
 26602 0010 BB70     		strb	r3, [r7, #2]
3953:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26603              		.loc 1 3953 0
 26604 0012 0023     		movs	r3, #0
 26605 0014 FB73     		strb	r3, [r7, #15]
 26606 0016 23E0     		b	.L1041
 26607              	.L1044:
3954:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 26608              		.loc 1 3954 0
 26609 0018 0023     		movs	r3, #0
 26610 001a BB73     		strb	r3, [r7, #14]
 26611 001c 1AE0     		b	.L1042
 26612              	.L1043:
3955:..\src/command_processing.c ****             packet_data[3 + i*N_ENCODERS_PER_LINE_MAX + j] = c_mem.enc[i].Enc_raw_read_conf[j];
 26613              		.loc 1 3955 0 discriminator 3
 26614 001e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 26615 0020 1346     		mov	r3, r2
 26616 0022 9B00     		lsls	r3, r3, #2
 26617 0024 1344     		add	r3, r3, r2
 26618 0026 DA1C     		adds	r2, r3, #3
 26619 0028 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 26620 002a D118     		adds	r1, r2, r3
 26621 002c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 26622 002e B87B     		ldrb	r0, [r7, #14]	@ zero_extendqisi2
 26623 0030 154C     		ldr	r4, .L1045
 26624 0032 1346     		mov	r3, r2
 26625 0034 5B00     		lsls	r3, r3, #1
 26626 0036 1344     		add	r3, r3, r2
 26627 0038 1B01     		lsls	r3, r3, #4
 26628 003a 2344     		add	r3, r3, r4
 26629 003c 0344     		add	r3, r3, r0
 26630 003e 03F5C873 		add	r3, r3, #400
 26631 0042 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 26632 0044 07F11003 		add	r3, r7, #16
 26633 0048 0B44     		add	r3, r3, r1
 26634 004a 03F8102C 		strb	r2, [r3, #-16]
3954:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 26635              		.loc 1 3954 0 discriminator 3
 26636 004e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 26637 0050 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 582


 26638 0052 BB73     		strb	r3, [r7, #14]
 26639              	.L1042:
3954:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 26640              		.loc 1 3954 0 is_stmt 0 discriminator 1
 26641 0054 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 26642 0056 042B     		cmp	r3, #4
 26643 0058 E1D9     		bls	.L1043
3953:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26644              		.loc 1 3953 0 is_stmt 1 discriminator 2
 26645 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26646 005c 0133     		adds	r3, r3, #1
 26647 005e FB73     		strb	r3, [r7, #15]
 26648              	.L1041:
3953:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26649              		.loc 1 3953 0 is_stmt 0 discriminator 1
 26650 0060 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26651 0062 012B     		cmp	r3, #1
 26652 0064 D8D9     		bls	.L1044
3956:..\src/command_processing.c ****         }
3957:..\src/command_processing.c ****     }
3958:..\src/command_processing.c ****     
3959:..\src/command_processing.c ****     // Calculate checksum
3960:..\src/command_processing.c ****     packet_data[3+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX] = LCRChecksum(packet_data, 3+N_ENCODE
 26653              		.loc 1 3960 0 is_stmt 1
 26654 0066 3B46     		mov	r3, r7
 26655 0068 0D21     		movs	r1, #13
 26656 006a 1846     		mov	r0, r3
 26657 006c FFF7FEFF 		bl	LCRChecksum
 26658 0070 0346     		mov	r3, r0
 26659 0072 7B73     		strb	r3, [r7, #13]
3961:..\src/command_processing.c ****     
3962:..\src/command_processing.c ****     // Send package to UART
3963:..\src/command_processing.c ****     commWrite(packet_data, 4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX);
 26660              		.loc 1 3963 0
 26661 0074 3B46     		mov	r3, r7
 26662 0076 0E21     		movs	r1, #14
 26663 0078 1846     		mov	r0, r3
 26664 007a FFF7FEFF 		bl	commWrite
3964:..\src/command_processing.c **** }
 26665              		.loc 1 3964 0
 26666 007e 00BF     		nop
 26667 0080 1437     		adds	r7, r7, #20
 26668              		.cfi_def_cfa_offset 12
 26669 0082 BD46     		mov	sp, r7
 26670              		.cfi_def_cfa_register 13
 26671              		@ sp needed
 26672 0084 90BD     		pop	{r4, r7, pc}
 26673              	.L1046:
 26674 0086 00BF     		.align	2
 26675              	.L1045:
 26676 0088 00000000 		.word	c_mem
 26677              		.cfi_endproc
 26678              	.LFE110:
 26679              		.size	cmd_get_encoder_map, .-cmd_get_encoder_map
 26680              		.section	.text.cmd_get_encoder_raw,"ax",%progbits
 26681              		.align	2
 26682              		.global	cmd_get_encoder_raw
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 583


 26683              		.thumb
 26684              		.thumb_func
 26685              		.type	cmd_get_encoder_raw, %function
 26686              	cmd_get_encoder_raw:
 26687              	.LFB111:
3965:..\src/command_processing.c **** 
3966:..\src/command_processing.c **** void cmd_get_encoder_raw(){
 26688              		.loc 1 3966 0
 26689              		.cfi_startproc
 26690              		@ args = 0, pretend = 0, frame = 32
 26691              		@ frame_needed = 1, uses_anonymous_args = 0
 26692 0000 90B5     		push	{r4, r7, lr}
 26693              		.cfi_def_cfa_offset 12
 26694              		.cfi_offset 4, -12
 26695              		.cfi_offset 7, -8
 26696              		.cfi_offset 14, -4
 26697 0002 89B0     		sub	sp, sp, #36
 26698              		.cfi_def_cfa_offset 48
 26699 0004 00AF     		add	r7, sp, #0
 26700              		.cfi_def_cfa_register 7
3967:..\src/command_processing.c ****     //Retrieve all Encoders raw values
3968:..\src/command_processing.c ****     
3969:..\src/command_processing.c ****     uint8 packet_data[2+2*N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
3970:..\src/command_processing.c ****     uint8 i, j, idx;
3971:..\src/command_processing.c ****     uint16 aux_uint16;
3972:..\src/command_processing.c ****     
3973:..\src/command_processing.c ****     //Header package 
3974:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_RAW;
 26701              		.loc 1 3974 0
 26702 0006 A423     		movs	r3, #164
 26703 0008 3B71     		strb	r3, [r7, #4]
3975:..\src/command_processing.c ****  
3976:..\src/command_processing.c ****     // Fill payload
3977:..\src/command_processing.c ****     idx = 0;
 26704              		.loc 1 3977 0
 26705 000a 0023     		movs	r3, #0
 26706 000c 7B77     		strb	r3, [r7, #29]
3978:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26707              		.loc 1 3978 0
 26708 000e 0023     		movs	r3, #0
 26709 0010 FB77     		strb	r3, [r7, #31]
 26710 0012 3FE0     		b	.L1048
 26711              	.L1052:
3979:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 26712              		.loc 1 3979 0
 26713 0014 0023     		movs	r3, #0
 26714 0016 BB77     		strb	r3, [r7, #30]
 26715 0018 33E0     		b	.L1049
 26716              	.L1051:
3980:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 26717              		.loc 1 3980 0
 26718 001a FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 26719 001c B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 26720 001e 3048     		ldr	r0, .L1053
 26721 0020 1346     		mov	r3, r2
 26722 0022 5B00     		lsls	r3, r3, #1
 26723 0024 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 584


 26724 0026 1B01     		lsls	r3, r3, #4
 26725 0028 0344     		add	r3, r3, r0
 26726 002a 0B44     		add	r3, r3, r1
 26727 002c 03F5C873 		add	r3, r3, #400
 26728 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26729 0032 012B     		cmp	r3, #1
 26730 0034 22D1     		bne	.L1050
3981:..\src/command_processing.c ****                 aux_uint16 = (uint16)Encoder_Value[i][j];
 26731              		.loc 1 3981 0
 26732 0036 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 26733 0038 B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 26734 003a 2A48     		ldr	r0, .L1053+4
 26735 003c 1346     		mov	r3, r2
 26736 003e 9B00     		lsls	r3, r3, #2
 26737 0040 1344     		add	r3, r3, r2
 26738 0042 0B44     		add	r3, r3, r1
 26739 0044 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 26740 0048 7B80     		strh	r3, [r7, #2]	@ movhi
3982:..\src/command_processing.c ****                 packet_data[(idx << 1) + 2] = ((char*)(&aux_uint16))[0];
 26741              		.loc 1 3982 0
 26742 004a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26743 004c 5B00     		lsls	r3, r3, #1
 26744 004e 0233     		adds	r3, r3, #2
 26745 0050 BA1C     		adds	r2, r7, #2
 26746 0052 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 26747 0054 07F12001 		add	r1, r7, #32
 26748 0058 0B44     		add	r3, r3, r1
 26749 005a 03F81C2C 		strb	r2, [r3, #-28]
3983:..\src/command_processing.c ****                 packet_data[(idx << 1) + 1] = ((char*)(&aux_uint16))[1];
 26750              		.loc 1 3983 0
 26751 005e 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26752 0060 5B00     		lsls	r3, r3, #1
 26753 0062 5A1C     		adds	r2, r3, #1
 26754 0064 BB1C     		adds	r3, r7, #2
 26755 0066 0133     		adds	r3, r3, #1
 26756 0068 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26757 006a 07F12003 		add	r3, r7, #32
 26758 006e 1344     		add	r3, r3, r2
 26759 0070 0A46     		mov	r2, r1
 26760 0072 03F81C2C 		strb	r2, [r3, #-28]
3984:..\src/command_processing.c ****                 idx++;
 26761              		.loc 1 3984 0
 26762 0076 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26763 0078 0133     		adds	r3, r3, #1
 26764 007a 7B77     		strb	r3, [r7, #29]
 26765              	.L1050:
3979:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 26766              		.loc 1 3979 0 discriminator 2
 26767 007c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 26768 007e 0133     		adds	r3, r3, #1
 26769 0080 BB77     		strb	r3, [r7, #30]
 26770              	.L1049:
3979:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 26771              		.loc 1 3979 0 is_stmt 0 discriminator 1
 26772 0082 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26773 0084 184A     		ldr	r2, .L1053+8
 26774 0086 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 585


 26775 0088 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 26776 008a 9A42     		cmp	r2, r3
 26777 008c C5D3     		bcc	.L1051
3978:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 26778              		.loc 1 3978 0 is_stmt 1 discriminator 2
 26779 008e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26780 0090 0133     		adds	r3, r3, #1
 26781 0092 FB77     		strb	r3, [r7, #31]
 26782              	.L1048:
3978:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 26783              		.loc 1 3978 0 is_stmt 0 discriminator 1
 26784 0094 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26785 0096 012B     		cmp	r3, #1
 26786 0098 BCD9     		bls	.L1052
3985:..\src/command_processing.c ****             }
3986:..\src/command_processing.c ****         }
3987:..\src/command_processing.c ****     }
3988:..\src/command_processing.c **** 
3989:..\src/command_processing.c ****     // Calculate checksum
3990:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 26787              		.loc 1 3990 0 is_stmt 1
 26788 009a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26789 009c 5B00     		lsls	r3, r3, #1
 26790 009e 5C1C     		adds	r4, r3, #1
 26791 00a0 7B7F     		ldrb	r3, [r7, #29]
 26792 00a2 5B00     		lsls	r3, r3, #1
 26793 00a4 DBB2     		uxtb	r3, r3
 26794 00a6 0133     		adds	r3, r3, #1
 26795 00a8 DAB2     		uxtb	r2, r3
 26796 00aa 3B1D     		adds	r3, r7, #4
 26797 00ac 1146     		mov	r1, r2
 26798 00ae 1846     		mov	r0, r3
 26799 00b0 FFF7FEFF 		bl	LCRChecksum
 26800 00b4 0346     		mov	r3, r0
 26801 00b6 1A46     		mov	r2, r3
 26802 00b8 07F12003 		add	r3, r7, #32
 26803 00bc 2344     		add	r3, r3, r4
 26804 00be 03F81C2C 		strb	r2, [r3, #-28]
3991:..\src/command_processing.c ****     
3992:..\src/command_processing.c ****     // Send package to UART
3993:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 26805              		.loc 1 3993 0
 26806 00c2 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26807 00c4 0133     		adds	r3, r3, #1
 26808 00c6 9BB2     		uxth	r3, r3
 26809 00c8 5B00     		lsls	r3, r3, #1
 26810 00ca 9AB2     		uxth	r2, r3
 26811 00cc 3B1D     		adds	r3, r7, #4
 26812 00ce 1146     		mov	r1, r2
 26813 00d0 1846     		mov	r0, r3
 26814 00d2 FFF7FEFF 		bl	commWrite
3994:..\src/command_processing.c **** }
 26815              		.loc 1 3994 0
 26816 00d6 00BF     		nop
 26817 00d8 2437     		adds	r7, r7, #36
 26818              		.cfi_def_cfa_offset 12
 26819 00da BD46     		mov	sp, r7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 586


 26820              		.cfi_def_cfa_register 13
 26821              		@ sp needed
 26822 00dc 90BD     		pop	{r4, r7, pc}
 26823              	.L1054:
 26824 00de 00BF     		.align	2
 26825              	.L1053:
 26826 00e0 00000000 		.word	c_mem
 26827 00e4 00000000 		.word	Encoder_Value
 26828 00e8 00000000 		.word	N_Encoder_Line_Connected
 26829              		.cfi_endproc
 26830              	.LFE111:
 26831              		.size	cmd_get_encoder_raw, .-cmd_get_encoder_raw
 26832              		.section	.text.cmd_get_ADC_map,"ax",%progbits
 26833              		.align	2
 26834              		.global	cmd_get_ADC_map
 26835              		.thumb
 26836              		.thumb_func
 26837              		.type	cmd_get_ADC_map, %function
 26838              	cmd_get_ADC_map:
 26839              	.LFB112:
3995:..\src/command_processing.c **** 
3996:..\src/command_processing.c **** void cmd_get_ADC_map(){
 26840              		.loc 1 3996 0
 26841              		.cfi_startproc
 26842              		@ args = 0, pretend = 0, frame = 16
 26843              		@ frame_needed = 1, uses_anonymous_args = 0
 26844 0000 80B5     		push	{r7, lr}
 26845              		.cfi_def_cfa_offset 8
 26846              		.cfi_offset 7, -8
 26847              		.cfi_offset 14, -4
 26848 0002 84B0     		sub	sp, sp, #16
 26849              		.cfi_def_cfa_offset 24
 26850 0004 00AF     		add	r7, sp, #0
 26851              		.cfi_def_cfa_register 7
3997:..\src/command_processing.c ****     //Retrieve Encoder map
3998:..\src/command_processing.c ****     
3999:..\src/command_processing.c ****     uint8 packet_data[3+NUM_OF_ADC_CHANNELS_MAX];
4000:..\src/command_processing.c ****     uint8 CYDATA i;
4001:..\src/command_processing.c ****     
4002:..\src/command_processing.c ****     // Header        
4003:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_CONF;
 26852              		.loc 1 4003 0
 26853 0006 A523     		movs	r3, #165
 26854 0008 3B70     		strb	r3, [r7]
4004:..\src/command_processing.c ****     
4005:..\src/command_processing.c ****     // Fill payload
4006:..\src/command_processing.c ****     packet_data[1] = NUM_OF_ADC_CHANNELS_MAX;
 26855              		.loc 1 4006 0
 26856 000a 0C23     		movs	r3, #12
 26857 000c 7B70     		strb	r3, [r7, #1]
4007:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 26858              		.loc 1 4007 0
 26859 000e 0023     		movs	r3, #0
 26860 0010 FB73     		strb	r3, [r7, #15]
 26861 0012 0EE0     		b	.L1056
 26862              	.L1057:
4008:..\src/command_processing.c ****         packet_data[2 + i] = c_mem.exp.ADC_conf[i];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 587


 26863              		.loc 1 4008 0 discriminator 3
 26864 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26865 0016 0233     		adds	r3, r3, #2
 26866 0018 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 26867 001a 0F49     		ldr	r1, .L1058
 26868 001c 0A44     		add	r2, r2, r1
 26869 001e 92F82822 		ldrb	r2, [r2, #552]	@ zero_extendqisi2
 26870 0022 07F11001 		add	r1, r7, #16
 26871 0026 0B44     		add	r3, r3, r1
 26872 0028 03F8102C 		strb	r2, [r3, #-16]
4007:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 26873              		.loc 1 4007 0 discriminator 3
 26874 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26875 002e 0133     		adds	r3, r3, #1
 26876 0030 FB73     		strb	r3, [r7, #15]
 26877              	.L1056:
4007:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 26878              		.loc 1 4007 0 is_stmt 0 discriminator 1
 26879 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26880 0034 0B2B     		cmp	r3, #11
 26881 0036 EDD9     		bls	.L1057
4009:..\src/command_processing.c ****     }
4010:..\src/command_processing.c ****     
4011:..\src/command_processing.c ****     // Calculate checksum
4012:..\src/command_processing.c ****     packet_data[2+NUM_OF_ADC_CHANNELS_MAX] = LCRChecksum(packet_data, 2+NUM_OF_ADC_CHANNELS_MAX);
 26882              		.loc 1 4012 0 is_stmt 1
 26883 0038 3B46     		mov	r3, r7
 26884 003a 0E21     		movs	r1, #14
 26885 003c 1846     		mov	r0, r3
 26886 003e FFF7FEFF 		bl	LCRChecksum
 26887 0042 0346     		mov	r3, r0
 26888 0044 BB73     		strb	r3, [r7, #14]
4013:..\src/command_processing.c ****     
4014:..\src/command_processing.c ****     // Send package to UART
4015:..\src/command_processing.c ****     commWrite(packet_data, 3+NUM_OF_ADC_CHANNELS_MAX);
 26889              		.loc 1 4015 0
 26890 0046 3B46     		mov	r3, r7
 26891 0048 0F21     		movs	r1, #15
 26892 004a 1846     		mov	r0, r3
 26893 004c FFF7FEFF 		bl	commWrite
4016:..\src/command_processing.c ****     
4017:..\src/command_processing.c **** }
 26894              		.loc 1 4017 0
 26895 0050 00BF     		nop
 26896 0052 1037     		adds	r7, r7, #16
 26897              		.cfi_def_cfa_offset 8
 26898 0054 BD46     		mov	sp, r7
 26899              		.cfi_def_cfa_register 13
 26900              		@ sp needed
 26901 0056 80BD     		pop	{r7, pc}
 26902              	.L1059:
 26903              		.align	2
 26904              	.L1058:
 26905 0058 00000000 		.word	c_mem
 26906              		.cfi_endproc
 26907              	.LFE112:
 26908              		.size	cmd_get_ADC_map, .-cmd_get_ADC_map
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 588


 26909              		.section	.text.cmd_get_ADC_raw,"ax",%progbits
 26910              		.align	2
 26911              		.global	cmd_get_ADC_raw
 26912              		.thumb
 26913              		.thumb_func
 26914              		.type	cmd_get_ADC_raw, %function
 26915              	cmd_get_ADC_raw:
 26916              	.LFB113:
4018:..\src/command_processing.c **** 
4019:..\src/command_processing.c **** void cmd_get_ADC_raw(){
 26917              		.loc 1 4019 0
 26918              		.cfi_startproc
 26919              		@ args = 0, pretend = 0, frame = 32
 26920              		@ frame_needed = 1, uses_anonymous_args = 0
 26921 0000 90B5     		push	{r4, r7, lr}
 26922              		.cfi_def_cfa_offset 12
 26923              		.cfi_offset 4, -12
 26924              		.cfi_offset 7, -8
 26925              		.cfi_offset 14, -4
 26926 0002 89B0     		sub	sp, sp, #36
 26927              		.cfi_def_cfa_offset 48
 26928 0004 00AF     		add	r7, sp, #0
 26929              		.cfi_def_cfa_register 7
4020:..\src/command_processing.c ****     //Retrieve Additional EMG port raw values
4021:..\src/command_processing.c ****     
4022:..\src/command_processing.c ****     uint8 packet_data[2+2*NUM_OF_ADC_CHANNELS_MAX];
4023:..\src/command_processing.c ****     uint8 CYDATA i, idx = 0;
 26930              		.loc 1 4023 0
 26931 0006 0023     		movs	r3, #0
 26932 0008 BB77     		strb	r3, [r7, #30]
4024:..\src/command_processing.c ****     int16 aux_int16;
4025:..\src/command_processing.c ****     
4026:..\src/command_processing.c ****     // Header        
4027:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_RAW;
 26933              		.loc 1 4027 0
 26934 000a A623     		movs	r3, #166
 26935 000c 3B71     		strb	r3, [r7, #4]
4028:..\src/command_processing.c ****     
4029:..\src/command_processing.c ****     // Fill payload
4030:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ANALOG_INPUTS; i++) {       
 26936              		.loc 1 4030 0
 26937 000e 0023     		movs	r3, #0
 26938 0010 FB77     		strb	r3, [r7, #31]
 26939 0012 27E0     		b	.L1061
 26940              	.L1063:
4031:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 26941              		.loc 1 4031 0
 26942 0014 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26943 0016 274A     		ldr	r2, .L1064
 26944 0018 1344     		add	r3, r3, r2
 26945 001a 93F82832 		ldrb	r3, [r3, #552]	@ zero_extendqisi2
 26946 001e 012B     		cmp	r3, #1
 26947 0020 1DD1     		bne	.L1062
4032:..\src/command_processing.c ****             aux_int16 = (int16) ADC_buf[i];
 26948              		.loc 1 4032 0
 26949 0022 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26950 0024 244A     		ldr	r2, .L1064+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 589


 26951 0026 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 26952 002a 7B80     		strh	r3, [r7, #2]	@ movhi
4033:..\src/command_processing.c ****             packet_data[(idx << 1) + 2] = ((char*)(&aux_int16))[0];
 26953              		.loc 1 4033 0
 26954 002c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 26955 002e 5B00     		lsls	r3, r3, #1
 26956 0030 0233     		adds	r3, r3, #2
 26957 0032 BA1C     		adds	r2, r7, #2
 26958 0034 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 26959 0036 07F12001 		add	r1, r7, #32
 26960 003a 0B44     		add	r3, r3, r1
 26961 003c 03F81C2C 		strb	r2, [r3, #-28]
4034:..\src/command_processing.c ****             packet_data[(idx << 1) + 1] = ((char*)(&aux_int16))[1];
 26962              		.loc 1 4034 0
 26963 0040 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 26964 0042 5B00     		lsls	r3, r3, #1
 26965 0044 5A1C     		adds	r2, r3, #1
 26966 0046 BB1C     		adds	r3, r7, #2
 26967 0048 0133     		adds	r3, r3, #1
 26968 004a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26969 004c 07F12003 		add	r3, r7, #32
 26970 0050 1344     		add	r3, r3, r2
 26971 0052 0A46     		mov	r2, r1
 26972 0054 03F81C2C 		strb	r2, [r3, #-28]
4035:..\src/command_processing.c ****             idx++;
 26973              		.loc 1 4035 0
 26974 0058 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 26975 005a 0133     		adds	r3, r3, #1
 26976 005c BB77     		strb	r3, [r7, #30]
 26977              	.L1062:
4030:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 26978              		.loc 1 4030 0 discriminator 2
 26979 005e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26980 0060 0133     		adds	r3, r3, #1
 26981 0062 FB77     		strb	r3, [r7, #31]
 26982              	.L1061:
4030:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 26983              		.loc 1 4030 0 is_stmt 0 discriminator 1
 26984 0064 154B     		ldr	r3, .L1064+8
 26985 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26986 0068 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 26987 006a 9A42     		cmp	r2, r3
 26988 006c D2D3     		bcc	.L1063
4036:..\src/command_processing.c ****         }
4037:..\src/command_processing.c ****     }
4038:..\src/command_processing.c **** 
4039:..\src/command_processing.c ****     // Calculate checksum
4040:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 26989              		.loc 1 4040 0 is_stmt 1
 26990 006e BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 26991 0070 5B00     		lsls	r3, r3, #1
 26992 0072 5C1C     		adds	r4, r3, #1
 26993 0074 BB7F     		ldrb	r3, [r7, #30]
 26994 0076 5B00     		lsls	r3, r3, #1
 26995 0078 DBB2     		uxtb	r3, r3
 26996 007a 0133     		adds	r3, r3, #1
 26997 007c DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 590


 26998 007e 3B1D     		adds	r3, r7, #4
 26999 0080 1146     		mov	r1, r2
 27000 0082 1846     		mov	r0, r3
 27001 0084 FFF7FEFF 		bl	LCRChecksum
 27002 0088 0346     		mov	r3, r0
 27003 008a 1A46     		mov	r2, r3
 27004 008c 07F12003 		add	r3, r7, #32
 27005 0090 2344     		add	r3, r3, r4
 27006 0092 03F81C2C 		strb	r2, [r3, #-28]
4041:..\src/command_processing.c ****     
4042:..\src/command_processing.c ****     // Send package to UART
4043:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 27007              		.loc 1 4043 0
 27008 0096 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 27009 0098 0133     		adds	r3, r3, #1
 27010 009a 9BB2     		uxth	r3, r3
 27011 009c 5B00     		lsls	r3, r3, #1
 27012 009e 9AB2     		uxth	r2, r3
 27013 00a0 3B1D     		adds	r3, r7, #4
 27014 00a2 1146     		mov	r1, r2
 27015 00a4 1846     		mov	r0, r3
 27016 00a6 FFF7FEFF 		bl	commWrite
4044:..\src/command_processing.c **** }
 27017              		.loc 1 4044 0
 27018 00aa 00BF     		nop
 27019 00ac 2437     		adds	r7, r7, #36
 27020              		.cfi_def_cfa_offset 12
 27021 00ae BD46     		mov	sp, r7
 27022              		.cfi_def_cfa_register 13
 27023              		@ sp needed
 27024 00b0 90BD     		pop	{r4, r7, pc}
 27025              	.L1065:
 27026 00b2 00BF     		.align	2
 27027              	.L1064:
 27028 00b4 00000000 		.word	c_mem
 27029 00b8 00000000 		.word	ADC_buf
 27030 00bc 00000000 		.word	NUM_OF_ANALOG_INPUTS
 27031              		.cfi_endproc
 27032              	.LFE113:
 27033              		.size	cmd_get_ADC_raw, .-cmd_get_ADC_raw
 27034              		.section	.rodata
 27035 1fef 00       		.align	2
 27036              	.LC310:
 27037 1ff0 00       		.ascii	"\000"
 27038              		.section	.text.cmd_get_SD_file,"ax",%progbits
 27039              		.align	2
 27040              		.global	cmd_get_SD_file
 27041              		.thumb
 27042              		.thumb_func
 27043              		.type	cmd_get_SD_file, %function
 27044              	cmd_get_SD_file:
 27045              	.LFB114:
4045:..\src/command_processing.c **** 
4046:..\src/command_processing.c **** void cmd_get_SD_file( uint16 filename_length ){
 27046              		.loc 1 4046 0
 27047              		.cfi_startproc
 27048              		@ args = 0, pretend = 0, frame = 20064
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 591


 27049              		@ frame_needed = 1, uses_anonymous_args = 0
 27050 0000 80B5     		push	{r7, lr}
 27051              		.cfi_def_cfa_offset 8
 27052              		.cfi_offset 7, -8
 27053              		.cfi_offset 14, -4
 27054 0002 ADF59C4D 		sub	sp, sp, #19968
 27055              		.cfi_def_cfa_offset 19976
 27056 0006 98B0     		sub	sp, sp, #96
 27057              		.cfi_def_cfa_offset 20072
 27058 0008 00AF     		add	r7, sp, #0
 27059              		.cfi_def_cfa_register 7
 27060 000a 0246     		mov	r2, r0
 27061 000c 07F16003 		add	r3, r7, #96
 27062 0010 5A3B     		subs	r3, r3, #90
 27063 0012 1A80     		strh	r2, [r3]	@ movhi
4047:..\src/command_processing.c ****     
4048:..\src/command_processing.c ****     uint8 i = 0;
 27064              		.loc 1 4048 0
 27065 0014 0023     		movs	r3, #0
 27066 0016 07F59C42 		add	r2, r7, #19968
 27067 001a 02F15F02 		add	r2, r2, #95
 27068 001e 1370     		strb	r3, [r2]
4049:..\src/command_processing.c ****     char CYDATA filename[50] = "";
 27069              		.loc 1 4049 0
 27070 0020 0023     		movs	r3, #0
 27071 0022 07F59C42 		add	r2, r7, #19968
 27072 0026 02F12C02 		add	r2, r2, #44
 27073 002a 1360     		str	r3, [r2]
 27074 002c 07F59C43 		add	r3, r7, #19968
 27075 0030 03F13003 		add	r3, r3, #48
 27076 0034 2E22     		movs	r2, #46
 27077 0036 0021     		movs	r1, #0
 27078 0038 1846     		mov	r0, r3
 27079 003a FFF7FEFF 		bl	memset
4050:..\src/command_processing.c ****     char CYDATA str_sd_data[20000] = "";
 27080              		.loc 1 4050 0
 27081 003e 07F16003 		add	r3, r7, #96
 27082 0042 543B     		subs	r3, r3, #84
 27083 0044 0022     		movs	r2, #0
 27084 0046 1A60     		str	r2, [r3]
 27085 0048 0433     		adds	r3, r3, #4
 27086 004a 44F61C62 		movw	r2, #19996
 27087 004e 0021     		movs	r1, #0
 27088 0050 1846     		mov	r0, r3
 27089 0052 FFF7FEFF 		bl	memset
4051:..\src/command_processing.c ****     strcpy(filename, "");
 27090              		.loc 1 4051 0
 27091 0056 3C4B     		ldr	r3, .L1071
 27092 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27093 005a 07F59C42 		add	r2, r7, #19968
 27094 005e 02F12C02 		add	r2, r2, #44
 27095 0062 1370     		strb	r3, [r2]
4052:..\src/command_processing.c ****     strcpy(str_sd_data, "");
 27096              		.loc 1 4052 0
 27097 0064 384B     		ldr	r3, .L1071
 27098 0066 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 27099 0068 07F16003 		add	r3, r7, #96
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 592


 27100 006c 543B     		subs	r3, r3, #84
 27101 006e 1A70     		strb	r2, [r3]
4053:..\src/command_processing.c ****     
4054:..\src/command_processing.c ****     for (i=0; i<filename_length; i++){
 27102              		.loc 1 4054 0
 27103 0070 0023     		movs	r3, #0
 27104 0072 07F59C42 		add	r2, r7, #19968
 27105 0076 02F15F02 		add	r2, r2, #95
 27106 007a 1370     		strb	r3, [r2]
 27107 007c 1DE0     		b	.L1067
 27108              	.L1068:
4055:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 27109              		.loc 1 4055 0 discriminator 3
 27110 007e 07F59C43 		add	r3, r7, #19968
 27111 0082 03F15F03 		add	r3, r3, #95
 27112 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27113 0088 07F59C42 		add	r2, r7, #19968
 27114 008c 02F12C02 		add	r2, r2, #44
 27115 0090 1344     		add	r3, r3, r2
 27116 0092 07F59C42 		add	r2, r7, #19968
 27117 0096 02F15F02 		add	r2, r2, #95
 27118 009a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 27119 009c 0332     		adds	r2, r2, #3
 27120 009e 2B49     		ldr	r1, .L1071+4
 27121 00a0 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 27122 00a2 1A70     		strb	r2, [r3]
4054:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 27123              		.loc 1 4054 0 discriminator 3
 27124 00a4 07F59C43 		add	r3, r7, #19968
 27125 00a8 03F15F03 		add	r3, r3, #95
 27126 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27127 00ae 0133     		adds	r3, r3, #1
 27128 00b0 07F59C42 		add	r2, r7, #19968
 27129 00b4 02F15F02 		add	r2, r2, #95
 27130 00b8 1370     		strb	r3, [r2]
 27131              	.L1067:
4054:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 27132              		.loc 1 4054 0 is_stmt 0 discriminator 1
 27133 00ba 07F59C43 		add	r3, r7, #19968
 27134 00be 03F15F03 		add	r3, r3, #95
 27135 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27136 00c4 9AB2     		uxth	r2, r3
 27137 00c6 07F16003 		add	r3, r7, #96
 27138 00ca 5A3B     		subs	r3, r3, #90
 27139 00cc 1B88     		ldrh	r3, [r3]
 27140 00ce 9342     		cmp	r3, r2
 27141 00d0 D5D8     		bhi	.L1068
4056:..\src/command_processing.c ****     }
4057:..\src/command_processing.c ****     *((uint8*)filename + i) = '\0';
 27142              		.loc 1 4057 0 is_stmt 1
 27143 00d2 07F59C43 		add	r3, r7, #19968
 27144 00d6 03F15F03 		add	r3, r3, #95
 27145 00da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27146 00dc 07F59C42 		add	r2, r7, #19968
 27147 00e0 02F12C02 		add	r2, r2, #44
 27148 00e4 1344     		add	r3, r3, r2
 27149 00e6 0022     		movs	r2, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 593


 27150 00e8 1A70     		strb	r2, [r3]
4058:..\src/command_processing.c ****      
4059:..\src/command_processing.c ****     // Check if the file is the one currently opened or not
4060:..\src/command_processing.c ****     if (strcmp(filename, sdFile)){
 27151              		.loc 1 4060 0
 27152 00ea 07F59C43 		add	r3, r7, #19968
 27153 00ee 03F12C03 		add	r3, r3, #44
 27154 00f2 1749     		ldr	r1, .L1071+8
 27155 00f4 1846     		mov	r0, r3
 27156 00f6 FFF7FEFF 		bl	strcmp
 27157 00fa 0346     		mov	r3, r0
 27158 00fc 002B     		cmp	r3, #0
 27159 00fe 0CD0     		beq	.L1069
4061:..\src/command_processing.c ****         Read_SD_Closed_File(filename, str_sd_data, sizeof(str_sd_data));
 27160              		.loc 1 4061 0
 27161 0100 07F16003 		add	r3, r7, #96
 27162 0104 543B     		subs	r3, r3, #84
 27163 0106 07F59C40 		add	r0, r7, #19968
 27164 010a 00F12C00 		add	r0, r0, #44
 27165 010e 44F62062 		movw	r2, #20000
 27166 0112 1946     		mov	r1, r3
 27167 0114 FFF7FEFF 		bl	Read_SD_Closed_File
 27168 0118 07E0     		b	.L1070
 27169              	.L1069:
4062:..\src/command_processing.c ****     }
4063:..\src/command_processing.c ****     else {
4064:..\src/command_processing.c ****         //It is the currently open working file
4065:..\src/command_processing.c ****         Read_SD_Current_Data(str_sd_data, sizeof(str_sd_data));
 27170              		.loc 1 4065 0
 27171 011a 07F16003 		add	r3, r7, #96
 27172 011e 543B     		subs	r3, r3, #84
 27173 0120 44F62061 		movw	r1, #20000
 27174 0124 1846     		mov	r0, r3
 27175 0126 FFF7FEFF 		bl	Read_SD_Current_Data
 27176              	.L1070:
4066:..\src/command_processing.c ****     }
4067:..\src/command_processing.c **** 
4068:..\src/command_processing.c ****     //itoa(filename_length, filename, 10);
4069:..\src/command_processing.c ****     // Send the file to API that receives packet as a ping string
4070:..\src/command_processing.c ****     UART_RS485_ClearTxBuffer();
 27177              		.loc 1 4070 0
 27178 012a FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
4071:..\src/command_processing.c ****     UART_RS485_PutString(str_sd_data);
 27179              		.loc 1 4071 0
 27180 012e 07F16003 		add	r3, r7, #96
 27181 0132 543B     		subs	r3, r3, #84
 27182 0134 1846     		mov	r0, r3
 27183 0136 FFF7FEFF 		bl	UART_RS485_PutString
4072:..\src/command_processing.c **** }
 27184              		.loc 1 4072 0
 27185 013a 00BF     		nop
 27186 013c 07F59C47 		add	r7, r7, #19968
 27187 0140 6037     		adds	r7, r7, #96
 27188              		.cfi_def_cfa_offset 8
 27189 0142 BD46     		mov	sp, r7
 27190              		.cfi_def_cfa_register 13
 27191              		@ sp needed
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 594


 27192 0144 80BD     		pop	{r7, pc}
 27193              	.L1072:
 27194 0146 00BF     		.align	2
 27195              	.L1071:
 27196 0148 F01F0000 		.word	.LC310
 27197 014c 00000000 		.word	g_rx
 27198 0150 00000000 		.word	sdFile
 27199              		.cfi_endproc
 27200              	.LFE114:
 27201              		.size	cmd_get_SD_file, .-cmd_get_SD_file
 27202              		.section	.text.air_chambers_control,"ax",%progbits
 27203              		.align	2
 27204              		.global	air_chambers_control
 27205              		.thumb
 27206              		.thumb_func
 27207              		.type	air_chambers_control, %function
 27208              	air_chambers_control:
 27209              	.LFB115:
4073:..\src/command_processing.c **** 
4074:..\src/command_processing.c **** //==============================================================================
4075:..\src/command_processing.c **** //                                                          AIR CHAMBERS CONTROL
4076:..\src/command_processing.c **** //==============================================================================
4077:..\src/command_processing.c **** /* It asks current difference to the SoftHand and sets force feedback device inputs proportionally 
4078:..\src/command_processing.c **** 
4079:..\src/command_processing.c **** void air_chambers_control(int slave_motor_idx) {
 27210              		.loc 1 4079 0
 27211              		.cfi_startproc
 27212              		@ args = 0, pretend = 0, frame = 8
 27213              		@ frame_needed = 1, uses_anonymous_args = 0
 27214              		@ link register save eliminated.
 27215 0000 80B4     		push	{r7}
 27216              		.cfi_def_cfa_offset 4
 27217              		.cfi_offset 7, -4
 27218 0002 83B0     		sub	sp, sp, #12
 27219              		.cfi_def_cfa_offset 16
 27220 0004 00AF     		add	r7, sp, #0
 27221              		.cfi_def_cfa_register 7
 27222 0006 7860     		str	r0, [r7, #4]
4080:..\src/command_processing.c ****     
4081:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
4082:..\src/command_processing.c ****     
4083:..\src/command_processing.c ****     int16 curr_diff;
4084:..\src/command_processing.c ****     int32 pressure_reference, err_pressure, pressure_value;
4085:..\src/command_processing.c ****     int32 valve_command;
4086:..\src/command_processing.c ****     int16 x_value;
4087:..\src/command_processing.c **** 
4088:..\src/command_processing.c ****     // Use pressure and residual current read from the SoftHand
4089:..\src/command_processing.c ****     
4090:..\src/command_processing.c ****     curr_diff = (int16)commReadResCurrFromSH();
4091:..\src/command_processing.c ****     
4092:..\src/command_processing.c ****     // Current difference saturation old mapping
4093:..\src/command_processing.c **** //    if(curr_diff > c_mem.FB.max_residual_current) {
4094:..\src/command_processing.c **** //        curr_diff = c_mem.FB.max_residual_current;
4095:..\src/command_processing.c **** //    }
4096:..\src/command_processing.c **** //    if(curr_diff < 0) {
4097:..\src/command_processing.c **** //        curr_diff = 0;
4098:..\src/command_processing.c **** //    }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 595


4099:..\src/command_processing.c **** 
4100:..\src/command_processing.c ****     // Compute pressure reference
4101:..\src/command_processing.c **** 
4102:..\src/command_processing.c ****     x_value = curr_diff - 50.0;
4103:..\src/command_processing.c ****     if (x_value < 0)
4104:..\src/command_processing.c ****         x_value = 0;
4105:..\src/command_processing.c ****     
4106:..\src/command_processing.c ****     // old mapping --- linear mapping
4107:..\src/command_processing.c ****     //pressure_reference = (int32)(curr_diff * (c_mem.FB.maximum_pressure_kPa/c_mem.FB.max_residual
4108:..\src/command_processing.c ****     pressure_reference = (int32)((int32)(-30.0*x_value*x_value + 55.0*c_mem.FB.max_residual_current
4109:..\src/command_processing.c ****     if (pressure_reference < 0)
4110:..\src/command_processing.c ****         pressure_reference = 0;
4111:..\src/command_processing.c ****     if (pressure_reference > c_mem.FB.maximum_pressure_kPa)
4112:..\src/command_processing.c ****         pressure_reference = c_mem.FB.maximum_pressure_kPa;
4113:..\src/command_processing.c ****     
4114:..\src/command_processing.c ****     pressure_value = (int32)g_fb_meas.pressure;
4115:..\src/command_processing.c ****     err_pressure = pressure_reference - pressure_value;       // error in kPa
4116:..\src/command_processing.c **** //    if (err_pressure < 0){
4117:..\src/command_processing.c **** //        err_pressure = 0;
4118:..\src/command_processing.c **** //    }
4119:..\src/command_processing.c ****     
4120:..\src/command_processing.c ****     if (x_value <= 0){
4121:..\src/command_processing.c ****         //i.e the hand is opening
4122:..\src/command_processing.c ****         valve_command = 0;  //valve open: air passes
4123:..\src/command_processing.c ****     }
4124:..\src/command_processing.c ****     else {
4125:..\src/command_processing.c ****         //i.e the hand is closing, so valve should stay closed independently from the pressure erro
4126:..\src/command_processing.c ****         //if err_pressure greater than 0, it means pressure should increase, so valve should stay c
4127:..\src/command_processing.c ****         //if err_pressure==0, it means you reached the right pressure, so valve should stay closed
4128:..\src/command_processing.c ****         valve_command = 1;  //3.6V (5V - 2 diodes) - valve close: air doesn't pass
4129:..\src/command_processing.c ****     }
4130:..\src/command_processing.c ****     
4131:..\src/command_processing.c ****     // Pump control
4132:..\src/command_processing.c ****     g_refNew[0].pwm = (int32)(c_mem.FB.prop_err_fb_gain*err_pressure);
4133:..\src/command_processing.c ****     //c_mem.FB.prop_err_fb_gain default 1.0 gain since, max err_pressure is 25 and pwm range is app
4134:..\src/command_processing.c ****     
4135:..\src/command_processing.c ****     // Limit output voltage
4136:..\src/command_processing.c ****     if (g_refNew[0].pwm > 80) // 80 (3.5V) 80% of 4.3V (5V - 1 diode)
4137:..\src/command_processing.c ****         g_refNew[0].pwm = 80; // 80
4138:..\src/command_processing.c ****     if (g_refNew[0].pwm < 20)
4139:..\src/command_processing.c ****         g_refNew[0].pwm = 0;
4140:..\src/command_processing.c ****         
4141:..\src/command_processing.c ****     VALVE_Write(valve_command);
4142:..\src/command_processing.c ****     
4143:..\src/command_processing.c ****     
4144:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
4145:..\src/command_processing.c ****     // Use second motor structures and parameters, only to generate position reference not for PID 
4146:..\src/command_processing.c ****     // IMPORTANT: configure second motor parameters with proper slave parameters
4147:..\src/command_processing.c ****     motor_control_generic(slave_motor_idx);
4148:..\src/command_processing.c **** #endif
4149:..\src/command_processing.c **** }
 27223              		.loc 1 4149 0
 27224 0008 00BF     		nop
 27225 000a 0C37     		adds	r7, r7, #12
 27226              		.cfi_def_cfa_offset 4
 27227 000c BD46     		mov	sp, r7
 27228              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 596


 27229              		@ sp needed
 27230 000e 80BC     		pop	{r7}
 27231              		.cfi_restore 7
 27232              		.cfi_def_cfa_offset 0
 27233 0010 7047     		bx	lr
 27234              		.cfi_endproc
 27235              	.LFE115:
 27236              		.size	air_chambers_control, .-air_chambers_control
 27237 0012 00BF     		.section	.text.emg_activation_velocity_fsm,"ax",%progbits
 27238              		.align	2
 27239              		.global	emg_activation_velocity_fsm
 27240              		.thumb
 27241              		.thumb_func
 27242              		.type	emg_activation_velocity_fsm, %function
 27243              	emg_activation_velocity_fsm:
 27244              	.LFB116:
4150:..\src/command_processing.c **** 
4151:..\src/command_processing.c **** 
4152:..\src/command_processing.c **** //==============================================================================
4153:..\src/command_processing.c **** //                                                   EMG ACTIVATION VELOCITY FSM
4154:..\src/command_processing.c **** //==============================================================================
4155:..\src/command_processing.c **** /* It decides which is the current emg activation velocity.*/
4156:..\src/command_processing.c **** 
4157:..\src/command_processing.c **** uint8 emg_activation_velocity_fsm() {
 27245              		.loc 1 4157 0
 27246              		.cfi_startproc
 27247              		@ args = 0, pretend = 0, frame = 16
 27248              		@ frame_needed = 1, uses_anonymous_args = 0
 27249              		@ link register save eliminated.
 27250 0000 80B4     		push	{r7}
 27251              		.cfi_def_cfa_offset 4
 27252              		.cfi_offset 7, -4
 27253 0002 85B0     		sub	sp, sp, #20
 27254              		.cfi_def_cfa_offset 24
 27255 0004 00AF     		add	r7, sp, #0
 27256              		.cfi_def_cfa_register 7
4158:..\src/command_processing.c ****       
4159:..\src/command_processing.c ****     static uint8 fsm_state = RELAX_STATE;     // Wrist FSM state
4160:..\src/command_processing.c ****     static int32 cnt = 0;
4161:..\src/command_processing.c ****     int32 CYDATA err_emg_1, err_emg_2; 
4162:..\src/command_processing.c ****     int32 CYDATA f_err_emg_1, f_err_emg_2; 
4163:..\src/command_processing.c ****     
4164:..\src/command_processing.c ****     err_emg_1 = g_adc_meas.emg[0] - c_mem.emg.emg_threshold[0];
 27257              		.loc 1 4164 0
 27258 0006 534B     		ldr	r3, .L1103
 27259 0008 1B68     		ldr	r3, [r3]
 27260 000a 534A     		ldr	r2, .L1103+4
 27261 000c B2F8F021 		ldrh	r2, [r2, #496]
 27262 0010 9B1A     		subs	r3, r3, r2
 27263 0012 FB60     		str	r3, [r7, #12]
4165:..\src/command_processing.c ****     err_emg_2 = g_adc_meas.emg[1] - c_mem.emg.emg_threshold[1];
 27264              		.loc 1 4165 0
 27265 0014 4F4B     		ldr	r3, .L1103
 27266 0016 5B68     		ldr	r3, [r3, #4]
 27267 0018 4F4A     		ldr	r2, .L1103+4
 27268 001a B2F8F221 		ldrh	r2, [r2, #498]
 27269 001e 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 597


 27270 0020 BB60     		str	r3, [r7, #8]
4166:..\src/command_processing.c ****     f_err_emg_1 = g_adc_meas.emg[0] - c_mem.WR.fast_act_threshold[0];
 27271              		.loc 1 4166 0
 27272 0022 4C4B     		ldr	r3, .L1103
 27273 0024 1B68     		ldr	r3, [r3]
 27274 0026 4C4A     		ldr	r2, .L1103+4
 27275 0028 B2F8E222 		ldrh	r2, [r2, #738]
 27276 002c 9B1A     		subs	r3, r3, r2
 27277 002e 7B60     		str	r3, [r7, #4]
4167:..\src/command_processing.c ****     f_err_emg_2 = g_adc_meas.emg[1] - c_mem.WR.fast_act_threshold[1];
 27278              		.loc 1 4167 0
 27279 0030 484B     		ldr	r3, .L1103
 27280 0032 5B68     		ldr	r3, [r3, #4]
 27281 0034 484A     		ldr	r2, .L1103+4
 27282 0036 B2F8E422 		ldrh	r2, [r2, #740]
 27283 003a 9B1A     		subs	r3, r3, r2
 27284 003c 3B60     		str	r3, [r7]
4168:..\src/command_processing.c ****     
4169:..\src/command_processing.c **** 
4170:..\src/command_processing.c ****     // State machine - Evaluate emg activation status
4171:..\src/command_processing.c ****     // Note: in this way, diff_emg_1 and diff_emg_2 are for sure differences between two consecutiv
4172:..\src/command_processing.c ****     switch (fsm_state){
 27285              		.loc 1 4172 0
 27286 003e 474B     		ldr	r3, .L1103+8
 27287 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27288 0042 032B     		cmp	r3, #3
 27289 0044 7FD8     		bhi	.L1075
 27290 0046 01A2     		adr	r2, .L1077
 27291 0048 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 27292              		.p2align 2
 27293              	.L1077:
 27294 004c 5D000000 		.word	.L1076+1
 27295 0050 71000000 		.word	.L1078+1
 27296 0054 11010000 		.word	.L1079+1
 27297 0058 25010000 		.word	.L1080+1
 27298              		.p2align 1
 27299              	.L1076:
4173:..\src/command_processing.c ****         case RELAX_STATE:
4174:..\src/command_processing.c ****             if (err_emg_1 > 0 || err_emg_2 > 0){
 27300              		.loc 1 4174 0
 27301 005c FB68     		ldr	r3, [r7, #12]
 27302 005e 002B     		cmp	r3, #0
 27303 0060 02DC     		bgt	.L1081
 27304              		.loc 1 4174 0 is_stmt 0 discriminator 1
 27305 0062 BB68     		ldr	r3, [r7, #8]
 27306 0064 002B     		cmp	r3, #0
 27307 0066 67DD     		ble	.L1099
 27308              	.L1081:
4175:..\src/command_processing.c ****                 fsm_state = TIMER_STATE;
 27309              		.loc 1 4175 0 is_stmt 1
 27310 0068 3C4B     		ldr	r3, .L1103+8
 27311 006a 0122     		movs	r2, #1
 27312 006c 1A70     		strb	r2, [r3]
4176:..\src/command_processing.c ****             }
4177:..\src/command_processing.c ****             
4178:..\src/command_processing.c ****             break;
 27313              		.loc 1 4178 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 598


 27314 006e 63E0     		b	.L1099
 27315              	.L1078:
4179:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
4180:..\src/command_processing.c ****             if (err_emg_1 > 0 || err_emg_2 > 0){
 27316              		.loc 1 4180 0
 27317 0070 FB68     		ldr	r3, [r7, #12]
 27318 0072 002B     		cmp	r3, #0
 27319 0074 02DC     		bgt	.L1083
 27320              		.loc 1 4180 0 is_stmt 0 discriminator 1
 27321 0076 BB68     		ldr	r3, [r7, #8]
 27322 0078 002B     		cmp	r3, #0
 27323 007a 05DD     		ble	.L1084
 27324              	.L1083:
4181:..\src/command_processing.c ****                 cnt = cnt +1;
 27325              		.loc 1 4181 0 is_stmt 1
 27326 007c 384B     		ldr	r3, .L1103+12
 27327 007e 1B68     		ldr	r3, [r3]
 27328 0080 0133     		adds	r3, r3, #1
 27329 0082 374A     		ldr	r2, .L1103+12
 27330 0084 1360     		str	r3, [r2]
 27331 0086 02E0     		b	.L1085
 27332              	.L1084:
4182:..\src/command_processing.c ****             }
4183:..\src/command_processing.c ****             else {
4184:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
 27333              		.loc 1 4184 0
 27334 0088 344B     		ldr	r3, .L1103+8
 27335 008a 0022     		movs	r2, #0
 27336 008c 1A70     		strb	r2, [r3]
 27337              	.L1085:
4185:..\src/command_processing.c ****             }
4186:..\src/command_processing.c ****             
4187:..\src/command_processing.c ****             if (cnt > 100){
 27338              		.loc 1 4187 0
 27339 008e 344B     		ldr	r3, .L1103+12
 27340 0090 1B68     		ldr	r3, [r3]
 27341 0092 642B     		cmp	r3, #100
 27342 0094 52DD     		ble	.L1100
4188:..\src/command_processing.c ****                 if ((err_emg_1 > 0 && f_err_emg_1 > 0) || (err_emg_2 > 0 && f_err_emg_2 > 0)){
 27343              		.loc 1 4188 0
 27344 0096 FB68     		ldr	r3, [r7, #12]
 27345 0098 002B     		cmp	r3, #0
 27346 009a 02DD     		ble	.L1087
 27347              		.loc 1 4188 0 is_stmt 0 discriminator 1
 27348 009c 7B68     		ldr	r3, [r7, #4]
 27349 009e 002B     		cmp	r3, #0
 27350 00a0 05DC     		bgt	.L1088
 27351              	.L1087:
 27352              		.loc 1 4188 0 discriminator 3
 27353 00a2 BB68     		ldr	r3, [r7, #8]
 27354 00a4 002B     		cmp	r3, #0
 27355 00a6 0EDD     		ble	.L1089
 27356              		.loc 1 4188 0 discriminator 4
 27357 00a8 3B68     		ldr	r3, [r7]
 27358 00aa 002B     		cmp	r3, #0
 27359 00ac 0BDD     		ble	.L1089
 27360              	.L1088:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 599


4189:..\src/command_processing.c ****                     // Fast activation
4190:..\src/command_processing.c ****                     if (c_mem.WR.activation_mode == 0){
 27361              		.loc 1 4190 0 is_stmt 1
 27362 00ae 2A4B     		ldr	r3, .L1103+4
 27363 00b0 93F8E032 		ldrb	r3, [r3, #736]	@ zero_extendqisi2
 27364 00b4 002B     		cmp	r3, #0
 27365 00b6 03D1     		bne	.L1090
4191:..\src/command_processing.c ****                         fsm_state = MOVE_FAST_ACT;
 27366              		.loc 1 4191 0
 27367 00b8 284B     		ldr	r3, .L1103+8
 27368 00ba 0222     		movs	r2, #2
 27369 00bc 1A70     		strb	r2, [r3]
 27370 00be 02E0     		b	.L1089
 27371              	.L1090:
4192:..\src/command_processing.c ****                     }
4193:..\src/command_processing.c ****                     else{
4194:..\src/command_processing.c ****                         fsm_state = MOVE_SLOW_ACT;
 27372              		.loc 1 4194 0
 27373 00c0 264B     		ldr	r3, .L1103+8
 27374 00c2 0322     		movs	r2, #3
 27375 00c4 1A70     		strb	r2, [r3]
 27376              	.L1089:
4195:..\src/command_processing.c ****                     }
4196:..\src/command_processing.c ****                 }
4197:..\src/command_processing.c ****                 if ((err_emg_1 > 0 && f_err_emg_1 < 0) || (err_emg_2 > 0 && f_err_emg_2 < 0)){
 27377              		.loc 1 4197 0
 27378 00c6 FB68     		ldr	r3, [r7, #12]
 27379 00c8 002B     		cmp	r3, #0
 27380 00ca 02DD     		ble	.L1091
 27381              		.loc 1 4197 0 is_stmt 0 discriminator 1
 27382 00cc 7B68     		ldr	r3, [r7, #4]
 27383 00ce 002B     		cmp	r3, #0
 27384 00d0 05DB     		blt	.L1092
 27385              	.L1091:
 27386              		.loc 1 4197 0 discriminator 3
 27387 00d2 BB68     		ldr	r3, [r7, #8]
 27388 00d4 002B     		cmp	r3, #0
 27389 00d6 0EDD     		ble	.L1093
 27390              		.loc 1 4197 0 discriminator 4
 27391 00d8 3B68     		ldr	r3, [r7]
 27392 00da 002B     		cmp	r3, #0
 27393 00dc 0BDA     		bge	.L1093
 27394              	.L1092:
4198:..\src/command_processing.c ****                     // Slow activation
4199:..\src/command_processing.c ****                     if (c_mem.WR.activation_mode == 0){
 27395              		.loc 1 4199 0 is_stmt 1
 27396 00de 1E4B     		ldr	r3, .L1103+4
 27397 00e0 93F8E032 		ldrb	r3, [r3, #736]	@ zero_extendqisi2
 27398 00e4 002B     		cmp	r3, #0
 27399 00e6 03D1     		bne	.L1094
4200:..\src/command_processing.c ****                         fsm_state = MOVE_SLOW_ACT;
 27400              		.loc 1 4200 0
 27401 00e8 1C4B     		ldr	r3, .L1103+8
 27402 00ea 0322     		movs	r2, #3
 27403 00ec 1A70     		strb	r2, [r3]
 27404 00ee 02E0     		b	.L1093
 27405              	.L1094:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 600


4201:..\src/command_processing.c ****                     }
4202:..\src/command_processing.c ****                     else{
4203:..\src/command_processing.c ****                         fsm_state = MOVE_FAST_ACT;
 27406              		.loc 1 4203 0
 27407 00f0 1A4B     		ldr	r3, .L1103+8
 27408 00f2 0222     		movs	r2, #2
 27409 00f4 1A70     		strb	r2, [r3]
 27410              	.L1093:
4204:..\src/command_processing.c ****                     }
4205:..\src/command_processing.c ****                 }
4206:..\src/command_processing.c ****                 if (err_emg_1 < 0 && err_emg_2 < 0){
 27411              		.loc 1 4206 0
 27412 00f6 FB68     		ldr	r3, [r7, #12]
 27413 00f8 002B     		cmp	r3, #0
 27414 00fa 05DA     		bge	.L1095
 27415              		.loc 1 4206 0 is_stmt 0 discriminator 1
 27416 00fc BB68     		ldr	r3, [r7, #8]
 27417 00fe 002B     		cmp	r3, #0
 27418 0100 02DA     		bge	.L1095
4207:..\src/command_processing.c ****                     // Involuntary activation
4208:..\src/command_processing.c ****                     fsm_state = RELAX_STATE;
 27419              		.loc 1 4208 0 is_stmt 1
 27420 0102 164B     		ldr	r3, .L1103+8
 27421 0104 0022     		movs	r2, #0
 27422 0106 1A70     		strb	r2, [r3]
 27423              	.L1095:
4209:..\src/command_processing.c ****                 }
4210:..\src/command_processing.c ****                 cnt = 0;
 27424              		.loc 1 4210 0
 27425 0108 154B     		ldr	r3, .L1103+12
 27426 010a 0022     		movs	r2, #0
 27427 010c 1A60     		str	r2, [r3]
4211:..\src/command_processing.c ****             }
4212:..\src/command_processing.c ****     
4213:..\src/command_processing.c ****             break;
 27428              		.loc 1 4213 0
 27429 010e 15E0     		b	.L1100
 27430              	.L1079:
4214:..\src/command_processing.c ****         case MOVE_FAST_ACT:
4215:..\src/command_processing.c ****             
4216:..\src/command_processing.c ****             if (err_emg_1 < 0 && err_emg_2 < 0){
 27431              		.loc 1 4216 0
 27432 0110 FB68     		ldr	r3, [r7, #12]
 27433 0112 002B     		cmp	r3, #0
 27434 0114 14DA     		bge	.L1101
 27435              		.loc 1 4216 0 is_stmt 0 discriminator 1
 27436 0116 BB68     		ldr	r3, [r7, #8]
 27437 0118 002B     		cmp	r3, #0
 27438 011a 11DA     		bge	.L1101
4217:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
 27439              		.loc 1 4217 0 is_stmt 1
 27440 011c 0F4B     		ldr	r3, .L1103+8
 27441 011e 0022     		movs	r2, #0
 27442 0120 1A70     		strb	r2, [r3]
4218:..\src/command_processing.c ****             }
4219:..\src/command_processing.c ****         
4220:..\src/command_processing.c ****             break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 601


 27443              		.loc 1 4220 0
 27444 0122 0DE0     		b	.L1101
 27445              	.L1080:
4221:..\src/command_processing.c ****         case MOVE_SLOW_ACT:
4222:..\src/command_processing.c ****           
4223:..\src/command_processing.c ****             if (err_emg_1 < 0 && err_emg_2 < 0){
 27446              		.loc 1 4223 0
 27447 0124 FB68     		ldr	r3, [r7, #12]
 27448 0126 002B     		cmp	r3, #0
 27449 0128 0CDA     		bge	.L1102
 27450              		.loc 1 4223 0 is_stmt 0 discriminator 1
 27451 012a BB68     		ldr	r3, [r7, #8]
 27452 012c 002B     		cmp	r3, #0
 27453 012e 09DA     		bge	.L1102
4224:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
 27454              		.loc 1 4224 0 is_stmt 1
 27455 0130 0A4B     		ldr	r3, .L1103+8
 27456 0132 0022     		movs	r2, #0
 27457 0134 1A70     		strb	r2, [r3]
4225:..\src/command_processing.c ****             }
4226:..\src/command_processing.c ****             
4227:..\src/command_processing.c ****             break;
 27458              		.loc 1 4227 0
 27459 0136 05E0     		b	.L1102
 27460              	.L1099:
4178:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
 27461              		.loc 1 4178 0
 27462 0138 00BF     		nop
 27463 013a 04E0     		b	.L1075
 27464              	.L1100:
4213:..\src/command_processing.c ****         case MOVE_FAST_ACT:
 27465              		.loc 1 4213 0
 27466 013c 00BF     		nop
 27467 013e 02E0     		b	.L1075
 27468              	.L1101:
4220:..\src/command_processing.c ****         case MOVE_SLOW_ACT:
 27469              		.loc 1 4220 0
 27470 0140 00BF     		nop
 27471 0142 00E0     		b	.L1075
 27472              	.L1102:
 27473              		.loc 1 4227 0
 27474 0144 00BF     		nop
 27475              	.L1075:
4228:..\src/command_processing.c ****     }
4229:..\src/command_processing.c ****     
4230:..\src/command_processing.c ****     return fsm_state;
 27476              		.loc 1 4230 0
 27477 0146 054B     		ldr	r3, .L1103+8
 27478 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
4231:..\src/command_processing.c **** 
4232:..\src/command_processing.c **** }
 27479              		.loc 1 4232 0
 27480 014a 1846     		mov	r0, r3
 27481 014c 1437     		adds	r7, r7, #20
 27482              		.cfi_def_cfa_offset 4
 27483 014e BD46     		mov	sp, r7
 27484              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 602


 27485              		@ sp needed
 27486 0150 80BC     		pop	{r7}
 27487              		.cfi_restore 7
 27488              		.cfi_def_cfa_offset 0
 27489 0152 7047     		bx	lr
 27490              	.L1104:
 27491              		.align	2
 27492              	.L1103:
 27493 0154 00000000 		.word	g_adc_meas
 27494 0158 00000000 		.word	c_mem
 27495 015c 0C000000 		.word	fsm_state.11538
 27496 0160 10000000 		.word	cnt.11539
 27497              		.cfi_endproc
 27498              	.LFE116:
 27499              		.size	emg_activation_velocity_fsm, .-emg_activation_velocity_fsm
 27500              		.section	.text.otbk_act_wrist_control,"ax",%progbits
 27501              		.align	2
 27502              		.global	otbk_act_wrist_control
 27503              		.thumb
 27504              		.thumb_func
 27505              		.type	otbk_act_wrist_control, %function
 27506              	otbk_act_wrist_control:
 27507              	.LFB117:
4233:..\src/command_processing.c **** 
4234:..\src/command_processing.c **** //==============================================================================
4235:..\src/command_processing.c **** //                                          OTTOBOCK ACTIVE WRIST MASTER CONTROL
4236:..\src/command_processing.c **** //==============================================================================
4237:..\src/command_processing.c **** /* It moves Ottobock active wrist (as master) and connected SoftHand slave according to emg activat
4238:..\src/command_processing.c **** 
4239:..\src/command_processing.c **** void otbk_act_wrist_control(int slave_motor_idx) {
 27508              		.loc 1 4239 0
 27509              		.cfi_startproc
 27510              		@ args = 0, pretend = 0, frame = 8
 27511              		@ frame_needed = 1, uses_anonymous_args = 0
 27512              		@ link register save eliminated.
 27513 0000 80B4     		push	{r7}
 27514              		.cfi_def_cfa_offset 4
 27515              		.cfi_offset 7, -4
 27516 0002 83B0     		sub	sp, sp, #12
 27517              		.cfi_def_cfa_offset 16
 27518 0004 00AF     		add	r7, sp, #0
 27519              		.cfi_def_cfa_register 7
 27520 0006 7860     		str	r0, [r7, #4]
4240:..\src/command_processing.c ****     
4241:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
4242:..\src/command_processing.c ****     
4243:..\src/command_processing.c ****     uint8 fsm_state = emg_activation_velocity_fsm();
4244:..\src/command_processing.c ****         
4245:..\src/command_processing.c ****     // State machine - Evaluate emg activation status
4246:..\src/command_processing.c ****     // Note: in this way, diff_emg_1 and diff_emg_2 are for sure differences between two consecutiv
4247:..\src/command_processing.c ****     switch (fsm_state){
4248:..\src/command_processing.c ****         case RELAX_STATE:
4249:..\src/command_processing.c ****             
4250:..\src/command_processing.c ****             // Wrist stop
4251:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
4252:..\src/command_processing.c ****             
4253:..\src/command_processing.c ****             // Softhand stop
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 603


4254:..\src/command_processing.c ****             // Do not update the motor reference, so the SoftHand stays still
4255:..\src/command_processing.c ****             g_ref[slave_motor_idx].pos = g_refOld[slave_motor_idx].pos;
4256:..\src/command_processing.c ****             g_refNew[slave_motor_idx].pos = g_ref[slave_motor_idx].pos;
4257:..\src/command_processing.c ****             
4258:..\src/command_processing.c ****             break;
4259:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
4260:..\src/command_processing.c ****                 
4261:..\src/command_processing.c ****             break;
4262:..\src/command_processing.c ****         case MOVE_FAST_ACT: // Wrist movement
4263:..\src/command_processing.c ****             
4264:..\src/command_processing.c ****             // Wrist movement
4265:..\src/command_processing.c ****             if (g_adc_meas.emg[0] > g_adc_meas.emg[1]){
4266:..\src/command_processing.c ****                 if (c_mem.WR.wrist_direction_association == 0){
4267:..\src/command_processing.c ****                     g_refNew[0].pwm = 60;       //Rotate CW
4268:..\src/command_processing.c ****                 }
4269:..\src/command_processing.c ****                 else {
4270:..\src/command_processing.c ****                     g_refNew[0].pwm = -60;   // Rotate CCW
4271:..\src/command_processing.c ****                 }
4272:..\src/command_processing.c ****             }
4273:..\src/command_processing.c ****             else {
4274:..\src/command_processing.c ****                 if (c_mem.WR.wrist_direction_association == 0){
4275:..\src/command_processing.c ****                     g_refNew[0].pwm = -60;   // Rotate CCW
4276:..\src/command_processing.c ****                 }
4277:..\src/command_processing.c ****                 else {
4278:..\src/command_processing.c ****                     g_refNew[0].pwm = 60;       //Rotate CW
4279:..\src/command_processing.c ****                 }
4280:..\src/command_processing.c ****             }
4281:..\src/command_processing.c ****             
4282:..\src/command_processing.c ****             // Softhand stop
4283:..\src/command_processing.c ****             // Do not update the motor reference, so the SoftHand stays still
4284:..\src/command_processing.c ****             g_ref[slave_motor_idx].pos = g_refOld[slave_motor_idx].pos;
4285:..\src/command_processing.c ****             g_refNew[slave_motor_idx].pos = g_ref[slave_motor_idx].pos;
4286:..\src/command_processing.c ****             
4287:..\src/command_processing.c ****             break;
4288:..\src/command_processing.c ****         case MOVE_SLOW_ACT: // Hand movement
4289:..\src/command_processing.c ****             
4290:..\src/command_processing.c ****             // Wrist stop
4291:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
4292:..\src/command_processing.c ****             
4293:..\src/command_processing.c ****             // SoftHand movement
4294:..\src/command_processing.c ****             // Drive slave with reference generated on second motor index
4295:..\src/command_processing.c ****             // Use second motor structures and parameters, only to generate position reference not 
4296:..\src/command_processing.c ****             // IMPORTANT: configure second motor parameters with proper slave parameters
4297:..\src/command_processing.c ****             motor_control_generic(slave_motor_idx);
4298:..\src/command_processing.c ****             
4299:..\src/command_processing.c ****             break;
4300:..\src/command_processing.c ****     }
4301:..\src/command_processing.c ****         
4302:..\src/command_processing.c ****     // Limit output voltage
4303:..\src/command_processing.c ****     if (g_refNew[0].pwm > 67) // 67 (8.4V max of 2S ottobock battery) 66.6% of 12.6V
4304:..\src/command_processing.c ****         g_refNew[0].pwm = 67; // 67
4305:..\src/command_processing.c ****     if (g_refNew[0].pwm < -67)
4306:..\src/command_processing.c ****         g_refNew[0].pwm = -67;
4307:..\src/command_processing.c ****     
4308:..\src/command_processing.c **** #endif
4309:..\src/command_processing.c **** }
 27521              		.loc 1 4309 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 604


 27522 0008 00BF     		nop
 27523 000a 0C37     		adds	r7, r7, #12
 27524              		.cfi_def_cfa_offset 4
 27525 000c BD46     		mov	sp, r7
 27526              		.cfi_def_cfa_register 13
 27527              		@ sp needed
 27528 000e 80BC     		pop	{r7}
 27529              		.cfi_restore 7
 27530              		.cfi_def_cfa_offset 0
 27531 0010 7047     		bx	lr
 27532              		.cfi_endproc
 27533              	.LFE117:
 27534              		.size	otbk_act_wrist_control, .-otbk_act_wrist_control
 27535 0012 00BF     		.section	.text.drive_slave,"ax",%progbits
 27536              		.align	2
 27537              		.global	drive_slave
 27538              		.thumb
 27539              		.thumb_func
 27540              		.type	drive_slave, %function
 27541              	drive_slave:
 27542              	.LFB118:
4310:..\src/command_processing.c **** 
4311:..\src/command_processing.c **** //==============================================================================
4312:..\src/command_processing.c **** //                                                                   DRIVE SLAVE
4313:..\src/command_processing.c **** //==============================================================================
4314:..\src/command_processing.c ****  
4315:..\src/command_processing.c **** void drive_slave(uint8 motor_idx, uint8 slave_ID) {
 27543              		.loc 1 4315 0
 27544              		.cfi_startproc
 27545              		@ args = 0, pretend = 0, frame = 8
 27546              		@ frame_needed = 1, uses_anonymous_args = 0
 27547              		@ link register save eliminated.
 27548 0000 80B4     		push	{r7}
 27549              		.cfi_def_cfa_offset 4
 27550              		.cfi_offset 7, -4
 27551 0002 83B0     		sub	sp, sp, #12
 27552              		.cfi_def_cfa_offset 16
 27553 0004 00AF     		add	r7, sp, #0
 27554              		.cfi_def_cfa_register 7
 27555 0006 0346     		mov	r3, r0
 27556 0008 0A46     		mov	r2, r1
 27557 000a FB71     		strb	r3, [r7, #7]
 27558 000c 1346     		mov	r3, r2
 27559 000e BB71     		strb	r3, [r7, #6]
4316:..\src/command_processing.c **** 
4317:..\src/command_processing.c **** #ifdef MASTER_FW
4318:..\src/command_processing.c ****     uint8 packet_data[6];
4319:..\src/command_processing.c ****     uint8 packet_lenght;
4320:..\src/command_processing.c ****     int16 aux_int16;
4321:..\src/command_processing.c **** 
4322:..\src/command_processing.c ****     // If not the use of handle or an emg input mode is set, exit from master_mode
4323:..\src/command_processing.c ****     if( c_mem.motor[motor_idx].input_mode != INPUT_MODE_ENCODER3          &&
4324:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_PROPORTIONAL  &&
4325:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_INTEGRAL      &&
4326:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_FCFS          &&
4327:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_FCFS_ADV          &&
4328:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_PROPORTIONAL_NC     ){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 605


4329:..\src/command_processing.c ****         master_mode = 0;
4330:..\src/command_processing.c ****         return;
4331:..\src/command_processing.c ****     }
4332:..\src/command_processing.c ****         
4333:..\src/command_processing.c ****     if (dev_tension[0] >= 5000 && dev_tension[0] < 7000){
4334:..\src/command_processing.c ****         master_mode = 0;
4335:..\src/command_processing.c ****         return;
4336:..\src/command_processing.c ****     }
4337:..\src/command_processing.c ****     
4338:..\src/command_processing.c ****        
4339:..\src/command_processing.c ****     //Sends a Set inputs command to a second board
4340:..\src/command_processing.c ****     packet_data[0] = CMD_SET_INPUTS;
4341:..\src/command_processing.c ****     aux_int16 = (int16) (g_ref[motor_idx].pos >> g_mem.enc[g_mem.motor[motor_idx].encoder_line].res
4342:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
4343:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
4344:..\src/command_processing.c ****     *((int16 *) &packet_data[3]) = 0;
4345:..\src/command_processing.c ****     
4346:..\src/command_processing.c ****     packet_lenght = 6;
4347:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
4348:..\src/command_processing.c ****     commWriteID(packet_data, packet_lenght, slave_ID);
4349:..\src/command_processing.c **** 
4350:..\src/command_processing.c **** #endif
4351:..\src/command_processing.c **** }
 27560              		.loc 1 4351 0
 27561 0010 00BF     		nop
 27562 0012 0C37     		adds	r7, r7, #12
 27563              		.cfi_def_cfa_offset 4
 27564 0014 BD46     		mov	sp, r7
 27565              		.cfi_def_cfa_register 13
 27566              		@ sp needed
 27567 0016 80BC     		pop	{r7}
 27568              		.cfi_restore 7
 27569              		.cfi_def_cfa_offset 0
 27570 0018 7047     		bx	lr
 27571              		.cfi_endproc
 27572              	.LFE118:
 27573              		.size	drive_slave, .-drive_slave
 27574 001a 00BF     		.section	.text.stop_master_device,"ax",%progbits
 27575              		.align	2
 27576              		.global	stop_master_device
 27577              		.thumb
 27578              		.thumb_func
 27579              		.type	stop_master_device, %function
 27580              	stop_master_device:
 27581              	.LFB119:
4352:..\src/command_processing.c **** 
4353:..\src/command_processing.c **** //==============================================================================
4354:..\src/command_processing.c **** //                                                            STOP MASTER DEVICE
4355:..\src/command_processing.c **** //==============================================================================
4356:..\src/command_processing.c ****  
4357:..\src/command_processing.c **** void stop_master_device() {
 27582              		.loc 1 4357 0
 27583              		.cfi_startproc
 27584              		@ args = 0, pretend = 0, frame = 0
 27585              		@ frame_needed = 1, uses_anonymous_args = 0
 27586              		@ link register save eliminated.
 27587 0000 80B4     		push	{r7}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 606


 27588              		.cfi_def_cfa_offset 4
 27589              		.cfi_offset 7, -4
 27590 0002 00AF     		add	r7, sp, #0
 27591              		.cfi_def_cfa_register 7
4358:..\src/command_processing.c ****     
4359:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
4360:..\src/command_processing.c ****     if (c_mem.dev.dev_type == AIR_CHAMBERS_FB){
4361:..\src/command_processing.c ****         // Stop pump and open valve
4362:..\src/command_processing.c ****         g_refNew[0].pwm = 0;    
4363:..\src/command_processing.c ****         VALVE_Write(0);
4364:..\src/command_processing.c ****     }
4365:..\src/command_processing.c **** #endif
4366:..\src/command_processing.c **** 
4367:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
4368:..\src/command_processing.c ****     if (c_mem.dev.dev_type == OTBK_ACT_WRIST_MS){
4369:..\src/command_processing.c ****         //Stop wrist motor
4370:..\src/command_processing.c ****         g_refNew[0].pwm = 0;
4371:..\src/command_processing.c ****     }
4372:..\src/command_processing.c **** #endif    
4373:..\src/command_processing.c **** }
 27592              		.loc 1 4373 0
 27593 0004 00BF     		nop
 27594 0006 BD46     		mov	sp, r7
 27595              		.cfi_def_cfa_register 13
 27596              		@ sp needed
 27597 0008 80BC     		pop	{r7}
 27598              		.cfi_restore 7
 27599              		.cfi_def_cfa_offset 0
 27600 000a 7047     		bx	lr
 27601              		.cfi_endproc
 27602              	.LFE119:
 27603              		.size	stop_master_device, .-stop_master_device
 27604              		.section	.text.deactivate_slaves,"ax",%progbits
 27605              		.align	2
 27606              		.global	deactivate_slaves
 27607              		.thumb
 27608              		.thumb_func
 27609              		.type	deactivate_slaves, %function
 27610              	deactivate_slaves:
 27611              	.LFB120:
4374:..\src/command_processing.c **** 
4375:..\src/command_processing.c **** //==============================================================================
4376:..\src/command_processing.c **** //                                                             DEACTIVATE SLAVES
4377:..\src/command_processing.c **** //==============================================================================
4378:..\src/command_processing.c ****  
4379:..\src/command_processing.c **** void deactivate_slaves() {
 27612              		.loc 1 4379 0
 27613              		.cfi_startproc
 27614              		@ args = 0, pretend = 0, frame = 0
 27615              		@ frame_needed = 1, uses_anonymous_args = 0
 27616              		@ link register save eliminated.
 27617 0000 80B4     		push	{r7}
 27618              		.cfi_def_cfa_offset 4
 27619              		.cfi_offset 7, -4
 27620 0002 00AF     		add	r7, sp, #0
 27621              		.cfi_def_cfa_register 7
4380:..\src/command_processing.c ****     
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 607


4381:..\src/command_processing.c **** #ifdef MASTER_FW
4382:..\src/command_processing.c ****     
4383:..\src/command_processing.c ****     uint8 packet_data[10];
4384:..\src/command_processing.c ****     uint8 packet_lenght;
4385:..\src/command_processing.c ****     
4386:..\src/command_processing.c ****     // If not a emg input mode is set, exit from master_mode
4387:..\src/command_processing.c ****     if(c_mem.motor[0].input_mode != INPUT_MODE_EMG_PROPORTIONAL  &&
4388:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_INTEGRAL     &&
4389:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS         &&
4390:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS_ADV     &&
4391:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_PROPORTIONAL_NC     ){
4392:..\src/command_processing.c ****         master_mode = 0;
4393:..\src/command_processing.c ****         return;
4394:..\src/command_processing.c ****     }
4395:..\src/command_processing.c ****    
4396:..\src/command_processing.c ****     //Sends a Set inputs command to a second board
4397:..\src/command_processing.c ****     packet_data[0] = CMD_ACTIVATE;
4398:..\src/command_processing.c **** 
4399:..\src/command_processing.c ****     *((int16 *) &packet_data[1]) = 0;   //3 to activate, 0 to deactivate
4400:..\src/command_processing.c ****     packet_lenght = 3;
4401:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
4402:..\src/command_processing.c ****     
4403:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
4404:..\src/command_processing.c ****     
4405:..\src/command_processing.c **** #endif    
4406:..\src/command_processing.c **** }
 27622              		.loc 1 4406 0
 27623 0004 00BF     		nop
 27624 0006 BD46     		mov	sp, r7
 27625              		.cfi_def_cfa_register 13
 27626              		@ sp needed
 27627 0008 80BC     		pop	{r7}
 27628              		.cfi_restore 7
 27629              		.cfi_def_cfa_offset 0
 27630 000a 7047     		bx	lr
 27631              		.cfi_endproc
 27632              	.LFE120:
 27633              		.size	deactivate_slaves, .-deactivate_slaves
 27634              		.bss
 27635              		.align	2
 27636              	h_time.11219:
 27637 0000 00000000 		.space	4
 27638              		.align	1
 27639              	i.11260:
 27640 0004 0000     		.space	2
 27641 0006 0000     		.align	2
 27642              	last_aux_int16.11391:
 27643 0008 00000000 		.space	4
 27644              	fsm_state.11538:
 27645 000c 00       		.space	1
 27646 000d 000000   		.align	2
 27647              	cnt.11539:
 27648 0010 00000000 		.space	4
 27649              		.text
 27650              	.Letext0:
 27651              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 27652              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 608


 27653              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 27654              		.file 6 "..\\src\\commands.h"
 27655              		.file 7 "..\\src\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 27656              		.file 8 "..\\src\\globals.h"
 27657              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 27658              		.section	.debug_info,"",%progbits
 27659              	.Ldebug_info0:
 27660 0000 03260000 		.4byte	0x2603
 27661 0004 0400     		.2byte	0x4
 27662 0006 00000000 		.4byte	.Ldebug_abbrev0
 27663 000a 04       		.byte	0x4
 27664 000b 01       		.uleb128 0x1
 27665 000c CE090000 		.4byte	.LASF401
 27666 0010 0C       		.byte	0xc
 27667 0011 28150000 		.4byte	.LASF402
 27668 0015 09000000 		.4byte	.LASF403
 27669 0019 00000000 		.4byte	.Ldebug_ranges0+0
 27670 001d 00000000 		.4byte	0
 27671 0021 00000000 		.4byte	.Ldebug_line0
 27672 0025 02       		.uleb128 0x2
 27673 0026 01       		.byte	0x1
 27674 0027 06       		.byte	0x6
 27675 0028 92040000 		.4byte	.LASF0
 27676 002c 02       		.uleb128 0x2
 27677 002d 01       		.byte	0x1
 27678 002e 08       		.byte	0x8
 27679 002f 0C050000 		.4byte	.LASF1
 27680 0033 02       		.uleb128 0x2
 27681 0034 02       		.byte	0x2
 27682 0035 05       		.byte	0x5
 27683 0036 9B110000 		.4byte	.LASF2
 27684 003a 02       		.uleb128 0x2
 27685 003b 02       		.byte	0x2
 27686 003c 07       		.byte	0x7
 27687 003d 1A140000 		.4byte	.LASF3
 27688 0041 03       		.uleb128 0x3
 27689 0042 E6140000 		.4byte	.LASF5
 27690 0046 03       		.byte	0x3
 27691 0047 3F       		.byte	0x3f
 27692 0048 4C000000 		.4byte	0x4c
 27693 004c 02       		.uleb128 0x2
 27694 004d 04       		.byte	0x4
 27695 004e 05       		.byte	0x5
 27696 004f 58030000 		.4byte	.LASF4
 27697 0053 03       		.uleb128 0x3
 27698 0054 990A0000 		.4byte	.LASF6
 27699 0058 03       		.byte	0x3
 27700 0059 41       		.byte	0x41
 27701 005a 5E000000 		.4byte	0x5e
 27702 005e 02       		.uleb128 0x2
 27703 005f 04       		.byte	0x4
 27704 0060 07       		.byte	0x7
 27705 0061 7A080000 		.4byte	.LASF7
 27706 0065 02       		.uleb128 0x2
 27707 0066 08       		.byte	0x8
 27708 0067 05       		.byte	0x5
 27709 0068 A40A0000 		.4byte	.LASF8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 609


 27710 006c 02       		.uleb128 0x2
 27711 006d 08       		.byte	0x8
 27712 006e 07       		.byte	0x7
 27713 006f 950E0000 		.4byte	.LASF9
 27714 0073 04       		.uleb128 0x4
 27715 0074 04       		.byte	0x4
 27716 0075 05       		.byte	0x5
 27717 0076 696E7400 		.ascii	"int\000"
 27718 007a 02       		.uleb128 0x2
 27719 007b 04       		.byte	0x4
 27720 007c 07       		.byte	0x7
 27721 007d C70B0000 		.4byte	.LASF10
 27722 0081 03       		.uleb128 0x3
 27723 0082 05010000 		.4byte	.LASF11
 27724 0086 04       		.byte	0x4
 27725 0087 2C       		.byte	0x2c
 27726 0088 41000000 		.4byte	0x41
 27727 008c 03       		.uleb128 0x3
 27728 008d 92130000 		.4byte	.LASF12
 27729 0091 04       		.byte	0x4
 27730 0092 30       		.byte	0x30
 27731 0093 53000000 		.4byte	0x53
 27732 0097 05       		.uleb128 0x5
 27733 0098 7D110000 		.4byte	.LASF13
 27734 009c 05       		.byte	0x5
 27735 009d E401     		.2byte	0x1e4
 27736 009f 2C000000 		.4byte	0x2c
 27737 00a3 05       		.uleb128 0x5
 27738 00a4 8B150000 		.4byte	.LASF14
 27739 00a8 05       		.byte	0x5
 27740 00a9 E501     		.2byte	0x1e5
 27741 00ab 3A000000 		.4byte	0x3a
 27742 00af 05       		.uleb128 0x5
 27743 00b0 2D010000 		.4byte	.LASF15
 27744 00b4 05       		.byte	0x5
 27745 00b5 E601     		.2byte	0x1e6
 27746 00b7 5E000000 		.4byte	0x5e
 27747 00bb 05       		.uleb128 0x5
 27748 00bc 3B020000 		.4byte	.LASF16
 27749 00c0 05       		.byte	0x5
 27750 00c1 E701     		.2byte	0x1e7
 27751 00c3 25000000 		.4byte	0x25
 27752 00c7 05       		.uleb128 0x5
 27753 00c8 F2120000 		.4byte	.LASF17
 27754 00cc 05       		.byte	0x5
 27755 00cd E801     		.2byte	0x1e8
 27756 00cf 33000000 		.4byte	0x33
 27757 00d3 05       		.uleb128 0x5
 27758 00d4 74140000 		.4byte	.LASF18
 27759 00d8 05       		.byte	0x5
 27760 00d9 E901     		.2byte	0x1e9
 27761 00db 4C000000 		.4byte	0x4c
 27762 00df 05       		.uleb128 0x5
 27763 00e0 DF030000 		.4byte	.LASF19
 27764 00e4 05       		.byte	0x5
 27765 00e5 EA01     		.2byte	0x1ea
 27766 00e7 EB000000 		.4byte	0xeb
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 610


 27767 00eb 02       		.uleb128 0x2
 27768 00ec 04       		.byte	0x4
 27769 00ed 04       		.byte	0x4
 27770 00ee 8A0B0000 		.4byte	.LASF20
 27771 00f2 02       		.uleb128 0x2
 27772 00f3 08       		.byte	0x8
 27773 00f4 04       		.byte	0x4
 27774 00f5 FC0A0000 		.4byte	.LASF21
 27775 00f9 02       		.uleb128 0x2
 27776 00fa 01       		.byte	0x1
 27777 00fb 08       		.byte	0x8
 27778 00fc B0050000 		.4byte	.LASF22
 27779 0100 05       		.uleb128 0x5
 27780 0101 8A0F0000 		.4byte	.LASF23
 27781 0105 05       		.byte	0x5
 27782 0106 8E02     		.2byte	0x28e
 27783 0108 0C010000 		.4byte	0x10c
 27784 010c 06       		.uleb128 0x6
 27785 010d 97000000 		.4byte	0x97
 27786 0111 02       		.uleb128 0x2
 27787 0112 08       		.byte	0x8
 27788 0113 04       		.byte	0x4
 27789 0114 7D0D0000 		.4byte	.LASF24
 27790 0118 02       		.uleb128 0x2
 27791 0119 04       		.byte	0x4
 27792 011a 07       		.byte	0x7
 27793 011b 79000000 		.4byte	.LASF25
 27794 011f 07       		.uleb128 0x7
 27795 0120 04       		.byte	0x4
 27796 0121 F9000000 		.4byte	0xf9
 27797 0125 07       		.uleb128 0x7
 27798 0126 04       		.byte	0x4
 27799 0127 2B010000 		.4byte	0x12b
 27800 012b 08       		.uleb128 0x8
 27801 012c F9000000 		.4byte	0xf9
 27802 0130 09       		.uleb128 0x9
 27803 0131 F9000000 		.4byte	0xf9
 27804 0135 40010000 		.4byte	0x140
 27805 0139 0A       		.uleb128 0xa
 27806 013a 18010000 		.4byte	0x118
 27807 013e 19       		.byte	0x19
 27808 013f 00       		.byte	0
 27809 0140 09       		.uleb128 0x9
 27810 0141 F9000000 		.4byte	0xf9
 27811 0145 50010000 		.4byte	0x150
 27812 0149 0A       		.uleb128 0xa
 27813 014a 18010000 		.4byte	0x118
 27814 014e 07       		.byte	0x7
 27815 014f 00       		.byte	0
 27816 0150 0B       		.uleb128 0xb
 27817 0151 270C0000 		.4byte	.LASF57
 27818 0155 01       		.byte	0x1
 27819 0156 2C000000 		.4byte	0x2c
 27820 015a 06       		.byte	0x6
 27821 015b 42       		.byte	0x42
 27822 015c 1B020000 		.4byte	0x21b
 27823 0160 0C       		.uleb128 0xc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 611


 27824 0161 A5150000 		.4byte	.LASF26
 27825 0165 00       		.byte	0
 27826 0166 0C       		.uleb128 0xc
 27827 0167 2C120000 		.4byte	.LASF27
 27828 016b 01       		.byte	0x1
 27829 016c 0C       		.uleb128 0xc
 27830 016d 56080000 		.4byte	.LASF28
 27831 0171 03       		.byte	0x3
 27832 0172 0C       		.uleb128 0xc
 27833 0173 44050000 		.4byte	.LASF29
 27834 0177 04       		.byte	0x4
 27835 0178 0C       		.uleb128 0xc
 27836 0179 C30F0000 		.4byte	.LASF30
 27837 017d 05       		.byte	0x5
 27838 017e 0C       		.uleb128 0xc
 27839 017f 76090000 		.4byte	.LASF31
 27840 0183 06       		.byte	0x6
 27841 0184 0C       		.uleb128 0xc
 27842 0185 9A080000 		.4byte	.LASF32
 27843 0189 09       		.byte	0x9
 27844 018a 0C       		.uleb128 0xc
 27845 018b 82000000 		.4byte	.LASF33
 27846 018f 0A       		.byte	0xa
 27847 0190 0C       		.uleb128 0xc
 27848 0191 D4120000 		.4byte	.LASF34
 27849 0195 0C       		.byte	0xc
 27850 0196 0C       		.uleb128 0xc
 27851 0197 E10D0000 		.4byte	.LASF35
 27852 019b 0D       		.byte	0xd
 27853 019c 0C       		.uleb128 0xc
 27854 019d C8000000 		.4byte	.LASF36
 27855 01a1 80       		.byte	0x80
 27856 01a2 0C       		.uleb128 0xc
 27857 01a3 9F050000 		.4byte	.LASF37
 27858 01a7 81       		.byte	0x81
 27859 01a8 0C       		.uleb128 0xc
 27860 01a9 C2060000 		.4byte	.LASF38
 27861 01ad 82       		.byte	0x82
 27862 01ae 0C       		.uleb128 0xc
 27863 01af F6110000 		.4byte	.LASF39
 27864 01b3 83       		.byte	0x83
 27865 01b4 0C       		.uleb128 0xc
 27866 01b5 46110000 		.4byte	.LASF40
 27867 01b9 84       		.byte	0x84
 27868 01ba 0C       		.uleb128 0xc
 27869 01bb F7030000 		.4byte	.LASF41
 27870 01bf 85       		.byte	0x85
 27871 01c0 0C       		.uleb128 0xc
 27872 01c1 B8090000 		.4byte	.LASF42
 27873 01c5 86       		.byte	0x86
 27874 01c6 0C       		.uleb128 0xc
 27875 01c7 56090000 		.4byte	.LASF43
 27876 01cb 88       		.byte	0x88
 27877 01cc 0C       		.uleb128 0xc
 27878 01cd B5120000 		.4byte	.LASF44
 27879 01d1 89       		.byte	0x89
 27880 01d2 0C       		.uleb128 0xc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 612


 27881 01d3 F30E0000 		.4byte	.LASF45
 27882 01d7 8B       		.byte	0x8b
 27883 01d8 0C       		.uleb128 0xc
 27884 01d9 4E0D0000 		.4byte	.LASF46
 27885 01dd 8C       		.byte	0x8c
 27886 01de 0C       		.uleb128 0xc
 27887 01df 740A0000 		.4byte	.LASF47
 27888 01e3 8E       		.byte	0x8e
 27889 01e4 0C       		.uleb128 0xc
 27890 01e5 2B0F0000 		.4byte	.LASF48
 27891 01e9 90       		.byte	0x90
 27892 01ea 0C       		.uleb128 0xc
 27893 01eb DD020000 		.4byte	.LASF49
 27894 01ef 92       		.byte	0x92
 27895 01f0 0C       		.uleb128 0xc
 27896 01f1 F3130000 		.4byte	.LASF50
 27897 01f5 A1       		.byte	0xa1
 27898 01f6 0C       		.uleb128 0xc
 27899 01f7 FF100000 		.4byte	.LASF51
 27900 01fb A2       		.byte	0xa2
 27901 01fc 0C       		.uleb128 0xc
 27902 01fd 850C0000 		.4byte	.LASF52
 27903 0201 A3       		.byte	0xa3
 27904 0202 0C       		.uleb128 0xc
 27905 0203 1B110000 		.4byte	.LASF53
 27906 0207 A4       		.byte	0xa4
 27907 0208 0C       		.uleb128 0xc
 27908 0209 1B120000 		.4byte	.LASF54
 27909 020d A5       		.byte	0xa5
 27910 020e 0C       		.uleb128 0xc
 27911 020f B3100000 		.4byte	.LASF55
 27912 0213 A6       		.byte	0xa6
 27913 0214 0C       		.uleb128 0xc
 27914 0215 030B0000 		.4byte	.LASF56
 27915 0219 A7       		.byte	0xa7
 27916 021a 00       		.byte	0
 27917 021b 0B       		.uleb128 0xb
 27918 021c 52150000 		.4byte	.LASF58
 27919 0220 01       		.byte	0x1
 27920 0221 2C000000 		.4byte	0x2c
 27921 0225 06       		.byte	0x6
 27922 0226 8E       		.byte	0x8e
 27923 0227 5C020000 		.4byte	0x25c
 27924 022b 0C       		.uleb128 0xc
 27925 022c 5E070000 		.4byte	.LASF59
 27926 0230 00       		.byte	0
 27927 0231 0C       		.uleb128 0xc
 27928 0232 650C0000 		.4byte	.LASF60
 27929 0236 01       		.byte	0x1
 27930 0237 0C       		.uleb128 0xc
 27931 0238 EE020000 		.4byte	.LASF61
 27932 023c 02       		.byte	0x2
 27933 023d 0C       		.uleb128 0xc
 27934 023e 17020000 		.4byte	.LASF62
 27935 0242 03       		.byte	0x3
 27936 0243 0C       		.uleb128 0xc
 27937 0244 BB010000 		.4byte	.LASF63
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 613


 27938 0248 04       		.byte	0x4
 27939 0249 0C       		.uleb128 0xc
 27940 024a B0000000 		.4byte	.LASF64
 27941 024e 05       		.byte	0x5
 27942 024f 0C       		.uleb128 0xc
 27943 0250 C2080000 		.4byte	.LASF65
 27944 0254 06       		.byte	0x6
 27945 0255 0C       		.uleb128 0xc
 27946 0256 E0100000 		.4byte	.LASF66
 27947 025a 07       		.byte	0x7
 27948 025b 00       		.byte	0
 27949 025c 0B       		.uleb128 0xb
 27950 025d B20A0000 		.4byte	.LASF67
 27951 0261 01       		.byte	0x1
 27952 0262 2C000000 		.4byte	0x2c
 27953 0266 06       		.byte	0x6
 27954 0267 A2       		.byte	0xa2
 27955 0268 85020000 		.4byte	0x285
 27956 026c 0C       		.uleb128 0xc
 27957 026d CB140000 		.4byte	.LASF68
 27958 0271 00       		.byte	0
 27959 0272 0C       		.uleb128 0xc
 27960 0273 4A090000 		.4byte	.LASF69
 27961 0277 01       		.byte	0x1
 27962 0278 0C       		.uleb128 0xc
 27963 0279 6D0D0000 		.4byte	.LASF70
 27964 027d 02       		.byte	0x2
 27965 027e 0C       		.uleb128 0xc
 27966 027f 41080000 		.4byte	.LASF71
 27967 0283 03       		.byte	0x3
 27968 0284 00       		.byte	0
 27969 0285 0B       		.uleb128 0xb
 27970 0286 D4040000 		.4byte	.LASF72
 27971 028a 01       		.byte	0x1
 27972 028b 2C000000 		.4byte	0x2c
 27973 028f 06       		.byte	0x6
 27974 0290 AC       		.byte	0xac
 27975 0291 A2020000 		.4byte	0x2a2
 27976 0295 0C       		.uleb128 0xc
 27977 0296 D6100000 		.4byte	.LASF73
 27978 029a 00       		.byte	0
 27979 029b 0C       		.uleb128 0xc
 27980 029c DE0A0000 		.4byte	.LASF74
 27981 02a0 01       		.byte	0x1
 27982 02a1 00       		.byte	0
 27983 02a2 0B       		.uleb128 0xb
 27984 02a3 3A0E0000 		.4byte	.LASF75
 27985 02a7 01       		.byte	0x1
 27986 02a8 2C000000 		.4byte	0x2c
 27987 02ac 06       		.byte	0x6
 27988 02ad B1       		.byte	0xb1
 27989 02ae BF020000 		.4byte	0x2bf
 27990 02b2 0C       		.uleb128 0xc
 27991 02b3 43070000 		.4byte	.LASF76
 27992 02b7 00       		.byte	0
 27993 02b8 0C       		.uleb128 0xc
 27994 02b9 07090000 		.4byte	.LASF77
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 614


 27995 02bd 01       		.byte	0x1
 27996 02be 00       		.byte	0
 27997 02bf 0B       		.uleb128 0xb
 27998 02c0 E7120000 		.4byte	.LASF78
 27999 02c4 01       		.byte	0x1
 28000 02c5 2C000000 		.4byte	0x2c
 28001 02c9 06       		.byte	0x6
 28002 02ca B9       		.byte	0xb9
 28003 02cb 0C030000 		.4byte	0x30c
 28004 02cf 0C       		.uleb128 0xc
 28005 02d0 0E090000 		.4byte	.LASF79
 28006 02d4 00       		.byte	0
 28007 02d5 0C       		.uleb128 0xc
 28008 02d6 60150000 		.4byte	.LASF80
 28009 02da 01       		.byte	0x1
 28010 02db 0C       		.uleb128 0xc
 28011 02dc C20A0000 		.4byte	.LASF81
 28012 02e0 02       		.byte	0x2
 28013 02e1 0C       		.uleb128 0xc
 28014 02e2 2A0D0000 		.4byte	.LASF82
 28015 02e6 03       		.byte	0x3
 28016 02e7 0C       		.uleb128 0xc
 28017 02e8 320C0000 		.4byte	.LASF83
 28018 02ec 04       		.byte	0x4
 28019 02ed 0C       		.uleb128 0xc
 28020 02ee AC0E0000 		.4byte	.LASF84
 28021 02f2 05       		.byte	0x5
 28022 02f3 0C       		.uleb128 0xc
 28023 02f4 890D0000 		.4byte	.LASF85
 28024 02f8 06       		.byte	0x6
 28025 02f9 0C       		.uleb128 0xc
 28026 02fa DC0C0000 		.4byte	.LASF86
 28027 02fe 07       		.byte	0x7
 28028 02ff 0C       		.uleb128 0xc
 28029 0300 03070000 		.4byte	.LASF87
 28030 0304 08       		.byte	0x8
 28031 0305 0C       		.uleb128 0xc
 28032 0306 35080000 		.4byte	.LASF88
 28033 030a 09       		.byte	0x9
 28034 030b 00       		.byte	0
 28035 030c 03       		.uleb128 0x3
 28036 030d AC140000 		.4byte	.LASF89
 28037 0311 07       		.byte	0x7
 28038 0312 7E       		.byte	0x7e
 28039 0313 17030000 		.4byte	0x317
 28040 0317 0D       		.uleb128 0xd
 28041 0318 AC140000 		.4byte	.LASF89
 28042 031c 07       		.uleb128 0x7
 28043 031d 04       		.byte	0x4
 28044 031e 0C030000 		.4byte	0x30c
 28045 0322 0E       		.uleb128 0xe
 28046 0323 5C0A0000 		.4byte	.LASF92
 28047 0327 10       		.byte	0x10
 28048 0328 08       		.byte	0x8
 28049 0329 E2       		.byte	0xe2
 28050 032a 5F030000 		.4byte	0x35f
 28051 032e 0F       		.uleb128 0xf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 615


 28052 032f 706F7300 		.ascii	"pos\000"
 28053 0333 08       		.byte	0x8
 28054 0334 E3       		.byte	0xe3
 28055 0335 D3000000 		.4byte	0xd3
 28056 0339 00       		.byte	0
 28057 033a 10       		.uleb128 0x10
 28058 033b 3A090000 		.4byte	.LASF90
 28059 033f 08       		.byte	0x8
 28060 0340 E4       		.byte	0xe4
 28061 0341 D3000000 		.4byte	0xd3
 28062 0345 04       		.byte	0x4
 28063 0346 0F       		.uleb128 0xf
 28064 0347 70776D00 		.ascii	"pwm\000"
 28065 034b 08       		.byte	0x8
 28066 034c E5       		.byte	0xe5
 28067 034d D3000000 		.4byte	0xd3
 28068 0351 08       		.byte	0x8
 28069 0352 10       		.uleb128 0x10
 28070 0353 ED0E0000 		.4byte	.LASF91
 28071 0357 08       		.byte	0x8
 28072 0358 E6       		.byte	0xe6
 28073 0359 97000000 		.4byte	0x97
 28074 035d 0C       		.byte	0xc
 28075 035e 00       		.byte	0
 28076 035f 0E       		.uleb128 0xe
 28077 0360 AB100000 		.4byte	.LASF93
 28078 0364 34       		.byte	0x34
 28079 0365 08       		.byte	0x8
 28080 0366 ED       		.byte	0xed
 28081 0367 C0030000 		.4byte	0x3c0
 28082 036b 0F       		.uleb128 0xf
 28083 036c 706F7300 		.ascii	"pos\000"
 28084 0370 08       		.byte	0x8
 28085 0371 EE       		.byte	0xee
 28086 0372 C0030000 		.4byte	0x3c0
 28087 0376 00       		.byte	0
 28088 0377 10       		.uleb128 0x10
 28089 0378 3A090000 		.4byte	.LASF90
 28090 037c 08       		.byte	0x8
 28091 037d EF       		.byte	0xef
 28092 037e D3000000 		.4byte	0xd3
 28093 0382 0C       		.byte	0xc
 28094 0383 10       		.uleb128 0x10
 28095 0384 34130000 		.4byte	.LASF94
 28096 0388 08       		.byte	0x8
 28097 0389 F0       		.byte	0xf0
 28098 038a D3000000 		.4byte	0xd3
 28099 038e 10       		.byte	0x10
 28100 038f 10       		.uleb128 0x10
 28101 0390 B8080000 		.4byte	.LASF95
 28102 0394 08       		.byte	0x8
 28103 0395 F1       		.byte	0xf1
 28104 0396 D3000000 		.4byte	0xd3
 28105 039a 14       		.byte	0x14
 28106 039b 0F       		.uleb128 0xf
 28107 039c 726F7400 		.ascii	"rot\000"
 28108 03a0 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 616


 28109 03a1 F2       		.byte	0xf2
 28110 03a2 D0030000 		.4byte	0x3d0
 28111 03a6 18       		.byte	0x18
 28112 03a7 0F       		.uleb128 0xf
 28113 03a8 76656C00 		.ascii	"vel\000"
 28114 03ac 08       		.byte	0x8
 28115 03ad F3       		.byte	0xf3
 28116 03ae C0030000 		.4byte	0x3c0
 28117 03b2 1C       		.byte	0x1c
 28118 03b3 0F       		.uleb128 0xf
 28119 03b4 61636300 		.ascii	"acc\000"
 28120 03b8 08       		.byte	0x8
 28121 03b9 F4       		.byte	0xf4
 28122 03ba C0030000 		.4byte	0x3c0
 28123 03be 28       		.byte	0x28
 28124 03bf 00       		.byte	0
 28125 03c0 09       		.uleb128 0x9
 28126 03c1 D3000000 		.4byte	0xd3
 28127 03c5 D0030000 		.4byte	0x3d0
 28128 03c9 0A       		.uleb128 0xa
 28129 03ca 18010000 		.4byte	0x118
 28130 03ce 02       		.byte	0x2
 28131 03cf 00       		.byte	0
 28132 03d0 09       		.uleb128 0x9
 28133 03d1 BB000000 		.4byte	0xbb
 28134 03d5 E0030000 		.4byte	0x3e0
 28135 03d9 0A       		.uleb128 0xa
 28136 03da 18010000 		.4byte	0x118
 28137 03de 02       		.byte	0x2
 28138 03df 00       		.byte	0
 28139 03e0 0E       		.uleb128 0xe
 28140 03e1 A30B0000 		.4byte	.LASF96
 28141 03e5 28       		.byte	0x28
 28142 03e6 08       		.byte	0x8
 28143 03e7 F7       		.byte	0xf7
 28144 03e8 11040000 		.4byte	0x411
 28145 03ec 0F       		.uleb128 0xf
 28146 03ed 656D6700 		.ascii	"emg\000"
 28147 03f1 08       		.byte	0x8
 28148 03f2 F8       		.byte	0xf8
 28149 03f3 11040000 		.4byte	0x411
 28150 03f7 00       		.byte	0
 28151 03f8 10       		.uleb128 0x10
 28152 03f9 220D0000 		.4byte	.LASF97
 28153 03fd 08       		.byte	0x8
 28154 03fe F9       		.byte	0xf9
 28155 03ff 21040000 		.4byte	0x421
 28156 0403 08       		.byte	0x8
 28157 0404 10       		.uleb128 0x10
 28158 0405 D7110000 		.4byte	.LASF98
 28159 0409 08       		.byte	0x8
 28160 040a FA       		.byte	0xfa
 28161 040b 11040000 		.4byte	0x411
 28162 040f 20       		.byte	0x20
 28163 0410 00       		.byte	0
 28164 0411 09       		.uleb128 0x9
 28165 0412 D3000000 		.4byte	0xd3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 617


 28166 0416 21040000 		.4byte	0x421
 28167 041a 0A       		.uleb128 0xa
 28168 041b 18010000 		.4byte	0x118
 28169 041f 01       		.byte	0x1
 28170 0420 00       		.byte	0
 28171 0421 09       		.uleb128 0x9
 28172 0422 D3000000 		.4byte	0xd3
 28173 0426 31040000 		.4byte	0x431
 28174 042a 0A       		.uleb128 0xa
 28175 042b 18010000 		.4byte	0x118
 28176 042f 05       		.byte	0x5
 28177 0430 00       		.byte	0
 28178 0431 0E       		.uleb128 0xe
 28179 0432 0E060000 		.4byte	.LASF99
 28180 0436 04       		.byte	0x4
 28181 0437 08       		.byte	0x8
 28182 0438 FD       		.byte	0xfd
 28183 0439 4A040000 		.4byte	0x44a
 28184 043d 10       		.uleb128 0x10
 28185 043e 96050000 		.4byte	.LASF100
 28186 0442 08       		.byte	0x8
 28187 0443 FE       		.byte	0xfe
 28188 0444 EB000000 		.4byte	0xeb
 28189 0448 00       		.byte	0
 28190 0449 00       		.byte	0
 28191 044a 11       		.uleb128 0x11
 28192 044b 12010000 		.4byte	.LASF101
 28193 044f 86       		.byte	0x86
 28194 0450 08       		.byte	0x8
 28195 0451 0501     		.2byte	0x105
 28196 0453 8C040000 		.4byte	0x48c
 28197 0457 12       		.uleb128 0x12
 28198 0458 D1060000 		.4byte	.LASF102
 28199 045c 08       		.byte	0x8
 28200 045d 0601     		.2byte	0x106
 28201 045f 8C040000 		.4byte	0x48c
 28202 0463 00       		.byte	0
 28203 0464 12       		.uleb128 0x12
 28204 0465 C20E0000 		.4byte	.LASF103
 28205 0469 08       		.byte	0x8
 28206 046a 0701     		.2byte	0x107
 28207 046c C7000000 		.4byte	0xc7
 28208 0470 80       		.byte	0x80
 28209 0471 13       		.uleb128 0x13
 28210 0472 696E6400 		.ascii	"ind\000"
 28211 0476 08       		.byte	0x8
 28212 0477 0801     		.2byte	0x108
 28213 0479 C7000000 		.4byte	0xc7
 28214 047d 82       		.byte	0x82
 28215 047e 12       		.uleb128 0x12
 28216 047f BF020000 		.4byte	.LASF104
 28217 0483 08       		.byte	0x8
 28218 0484 0901     		.2byte	0x109
 28219 0486 97000000 		.4byte	0x97
 28220 048a 84       		.byte	0x84
 28221 048b 00       		.byte	0
 28222 048c 09       		.uleb128 0x9
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 618


 28223 048d 97000000 		.4byte	0x97
 28224 0491 9C040000 		.4byte	0x49c
 28225 0495 0A       		.uleb128 0xa
 28226 0496 18010000 		.4byte	0x118
 28227 049a 7F       		.byte	0x7f
 28228 049b 00       		.byte	0
 28229 049c 11       		.uleb128 0x11
 28230 049d CD030000 		.4byte	.LASF105
 28231 04a1 50       		.byte	0x50
 28232 04a2 08       		.byte	0x8
 28233 04a3 1201     		.2byte	0x112
 28234 04a5 05050000 		.4byte	0x505
 28235 04a9 12       		.uleb128 0x12
 28236 04aa 1F040000 		.4byte	.LASF106
 28237 04ae 08       		.byte	0x8
 28238 04af 1301     		.2byte	0x113
 28239 04b1 05050000 		.4byte	0x505
 28240 04b5 00       		.byte	0
 28241 04b6 12       		.uleb128 0x12
 28242 04b7 78020000 		.4byte	.LASF107
 28243 04bb 08       		.byte	0x8
 28244 04bc 1401     		.2byte	0x114
 28245 04be 15050000 		.4byte	0x515
 28246 04c2 08       		.byte	0x8
 28247 04c3 12       		.uleb128 0x12
 28248 04c4 600D0000 		.4byte	.LASF108
 28249 04c8 08       		.byte	0x8
 28250 04c9 1501     		.2byte	0x115
 28251 04cb 25050000 		.4byte	0x525
 28252 04cf 30       		.byte	0x30
 28253 04d0 12       		.uleb128 0x12
 28254 04d1 DB010000 		.4byte	.LASF109
 28255 04d5 08       		.byte	0x8
 28256 04d6 1601     		.2byte	0x116
 28257 04d8 AF000000 		.4byte	0xaf
 28258 04dc 40       		.byte	0x40
 28259 04dd 12       		.uleb128 0x12
 28260 04de FF140000 		.4byte	.LASF110
 28261 04e2 08       		.byte	0x8
 28262 04e3 1701     		.2byte	0x117
 28263 04e5 AF000000 		.4byte	0xaf
 28264 04e9 44       		.byte	0x44
 28265 04ea 12       		.uleb128 0x12
 28266 04eb 8C080000 		.4byte	.LASF111
 28267 04ef 08       		.byte	0x8
 28268 04f0 1801     		.2byte	0x118
 28269 04f2 AF000000 		.4byte	0xaf
 28270 04f6 48       		.byte	0x48
 28271 04f7 12       		.uleb128 0x12
 28272 04f8 D6080000 		.4byte	.LASF112
 28273 04fc 08       		.byte	0x8
 28274 04fd 1901     		.2byte	0x119
 28275 04ff AF000000 		.4byte	0xaf
 28276 0503 4C       		.byte	0x4c
 28277 0504 00       		.byte	0
 28278 0505 09       		.uleb128 0x9
 28279 0506 AF000000 		.4byte	0xaf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 619


 28280 050a 15050000 		.4byte	0x515
 28281 050e 0A       		.uleb128 0xa
 28282 050f 18010000 		.4byte	0x118
 28283 0513 01       		.byte	0x1
 28284 0514 00       		.byte	0
 28285 0515 09       		.uleb128 0x9
 28286 0516 AF000000 		.4byte	0xaf
 28287 051a 25050000 		.4byte	0x525
 28288 051e 0A       		.uleb128 0xa
 28289 051f 18010000 		.4byte	0x118
 28290 0523 09       		.byte	0x9
 28291 0524 00       		.byte	0
 28292 0525 09       		.uleb128 0x9
 28293 0526 AF000000 		.4byte	0xaf
 28294 052a 35050000 		.4byte	0x535
 28295 052e 0A       		.uleb128 0xa
 28296 052f 18010000 		.4byte	0x118
 28297 0533 03       		.byte	0x3
 28298 0534 00       		.byte	0
 28299 0535 11       		.uleb128 0x11
 28300 0536 78060000 		.4byte	.LASF113
 28301 053a 10       		.byte	0x10
 28302 053b 08       		.byte	0x8
 28303 053c 2001     		.2byte	0x120
 28304 053e C4050000 		.4byte	0x5c4
 28305 0542 13       		.uleb128 0x13
 28306 0543 696400   		.ascii	"id\000"
 28307 0546 08       		.byte	0x8
 28308 0547 2101     		.2byte	0x121
 28309 0549 97000000 		.4byte	0x97
 28310 054d 00       		.byte	0
 28311 054e 12       		.uleb128 0x12
 28312 054f 05120000 		.4byte	.LASF114
 28313 0553 08       		.byte	0x8
 28314 0554 2201     		.2byte	0x122
 28315 0556 C4050000 		.4byte	0x5c4
 28316 055a 01       		.byte	0x1
 28317 055b 12       		.uleb128 0x12
 28318 055c 81120000 		.4byte	.LASF115
 28319 0560 08       		.byte	0x8
 28320 0561 2301     		.2byte	0x123
 28321 0563 C4050000 		.4byte	0x5c4
 28322 0567 04       		.byte	0x4
 28323 0568 12       		.uleb128 0x12
 28324 0569 39050000 		.4byte	.LASF116
 28325 056d 08       		.byte	0x8
 28326 056e 2401     		.2byte	0x124
 28327 0570 97000000 		.4byte	0x97
 28328 0574 07       		.byte	0x7
 28329 0575 12       		.uleb128 0x12
 28330 0576 79030000 		.4byte	.LASF117
 28331 057a 08       		.byte	0x8
 28332 057b 2501     		.2byte	0x125
 28333 057d 97000000 		.4byte	0x97
 28334 0581 08       		.byte	0x8
 28335 0582 12       		.uleb128 0x12
 28336 0583 0A030000 		.4byte	.LASF118
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 620


 28337 0587 08       		.byte	0x8
 28338 0588 2601     		.2byte	0x126
 28339 058a 97000000 		.4byte	0x97
 28340 058e 09       		.byte	0x9
 28341 058f 12       		.uleb128 0x12
 28342 0590 C6130000 		.4byte	.LASF119
 28343 0594 08       		.byte	0x8
 28344 0595 2701     		.2byte	0x127
 28345 0597 97000000 		.4byte	0x97
 28346 059b 0A       		.byte	0xa
 28347 059c 12       		.uleb128 0x12
 28348 059d 8A130000 		.4byte	.LASF120
 28349 05a1 08       		.byte	0x8
 28350 05a2 2801     		.2byte	0x128
 28351 05a4 97000000 		.4byte	0x97
 28352 05a8 0B       		.byte	0xb
 28353 05a9 12       		.uleb128 0x12
 28354 05aa 55100000 		.4byte	.LASF121
 28355 05ae 08       		.byte	0x8
 28356 05af 2901     		.2byte	0x129
 28357 05b1 97000000 		.4byte	0x97
 28358 05b5 0C       		.byte	0xc
 28359 05b6 12       		.uleb128 0x12
 28360 05b7 AA030000 		.4byte	.LASF122
 28361 05bb 08       		.byte	0x8
 28362 05bc 2A01     		.2byte	0x12a
 28363 05be C4050000 		.4byte	0x5c4
 28364 05c2 0D       		.byte	0xd
 28365 05c3 00       		.byte	0
 28366 05c4 09       		.uleb128 0x9
 28367 05c5 97000000 		.4byte	0x97
 28368 05c9 D4050000 		.4byte	0x5d4
 28369 05cd 0A       		.uleb128 0xa
 28370 05ce 18010000 		.4byte	0x118
 28371 05d2 02       		.byte	0x2
 28372 05d3 00       		.byte	0
 28373 05d4 11       		.uleb128 0x11
 28374 05d5 97140000 		.4byte	.LASF123
 28375 05d9 70       		.byte	0x70
 28376 05da 08       		.byte	0x8
 28377 05db 3101     		.2byte	0x131
 28378 05dd 4E070000 		.4byte	0x74e
 28379 05e1 13       		.uleb128 0x13
 28380 05e2 6B5F7000 		.ascii	"k_p\000"
 28381 05e6 08       		.byte	0x8
 28382 05e7 3201     		.2byte	0x132
 28383 05e9 D3000000 		.4byte	0xd3
 28384 05ed 00       		.byte	0
 28385 05ee 13       		.uleb128 0x13
 28386 05ef 6B5F6900 		.ascii	"k_i\000"
 28387 05f3 08       		.byte	0x8
 28388 05f4 3301     		.2byte	0x133
 28389 05f6 D3000000 		.4byte	0xd3
 28390 05fa 04       		.byte	0x4
 28391 05fb 13       		.uleb128 0x13
 28392 05fc 6B5F6400 		.ascii	"k_d\000"
 28393 0600 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 621


 28394 0601 3401     		.2byte	0x134
 28395 0603 D3000000 		.4byte	0xd3
 28396 0607 08       		.byte	0x8
 28397 0608 12       		.uleb128 0x12
 28398 0609 3C0F0000 		.4byte	.LASF124
 28399 060d 08       		.byte	0x8
 28400 060e 3501     		.2byte	0x135
 28401 0610 D3000000 		.4byte	0xd3
 28402 0614 0C       		.byte	0xc
 28403 0615 12       		.uleb128 0x12
 28404 0616 2E060000 		.4byte	.LASF125
 28405 061a 08       		.byte	0x8
 28406 061b 3601     		.2byte	0x136
 28407 061d D3000000 		.4byte	0xd3
 28408 0621 10       		.byte	0x10
 28409 0622 12       		.uleb128 0x12
 28410 0623 08060000 		.4byte	.LASF126
 28411 0627 08       		.byte	0x8
 28412 0628 3701     		.2byte	0x137
 28413 062a D3000000 		.4byte	0xd3
 28414 062e 14       		.byte	0x14
 28415 062f 12       		.uleb128 0x12
 28416 0630 2D130000 		.4byte	.LASF127
 28417 0634 08       		.byte	0x8
 28418 0635 3801     		.2byte	0x138
 28419 0637 D3000000 		.4byte	0xd3
 28420 063b 18       		.byte	0x18
 28421 063c 12       		.uleb128 0x12
 28422 063d BB060000 		.4byte	.LASF128
 28423 0641 08       		.byte	0x8
 28424 0642 3901     		.2byte	0x139
 28425 0644 D3000000 		.4byte	0xd3
 28426 0648 1C       		.byte	0x1c
 28427 0649 12       		.uleb128 0x12
 28428 064a C7110000 		.4byte	.LASF129
 28429 064e 08       		.byte	0x8
 28430 064f 3A01     		.2byte	0x13a
 28431 0651 D3000000 		.4byte	0xd3
 28432 0655 20       		.byte	0x20
 28433 0656 12       		.uleb128 0x12
 28434 0657 D8060000 		.4byte	.LASF130
 28435 065b 08       		.byte	0x8
 28436 065c 3B01     		.2byte	0x13b
 28437 065e D3000000 		.4byte	0xd3
 28438 0662 24       		.byte	0x24
 28439 0663 12       		.uleb128 0x12
 28440 0664 C7070000 		.4byte	.LASF131
 28441 0668 08       		.byte	0x8
 28442 0669 3C01     		.2byte	0x13c
 28443 066b D3000000 		.4byte	0xd3
 28444 066f 28       		.byte	0x28
 28445 0670 12       		.uleb128 0x12
 28446 0671 AE150000 		.4byte	.LASF132
 28447 0675 08       		.byte	0x8
 28448 0676 3D01     		.2byte	0x13d
 28449 0678 D3000000 		.4byte	0xd3
 28450 067c 2C       		.byte	0x2c
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 622


 28451 067d 12       		.uleb128 0x12
 28452 067e F2080000 		.4byte	.LASF133
 28453 0682 08       		.byte	0x8
 28454 0683 3E01     		.2byte	0x13e
 28455 0685 97000000 		.4byte	0x97
 28456 0689 30       		.byte	0x30
 28457 068a 12       		.uleb128 0x12
 28458 068b 16130000 		.4byte	.LASF134
 28459 068f 08       		.byte	0x8
 28460 0690 3F01     		.2byte	0x13f
 28461 0692 97000000 		.4byte	0x97
 28462 0696 31       		.byte	0x31
 28463 0697 12       		.uleb128 0x12
 28464 0698 5C0F0000 		.4byte	.LASF135
 28465 069c 08       		.byte	0x8
 28466 069d 4001     		.2byte	0x140
 28467 069f 97000000 		.4byte	0x97
 28468 06a3 32       		.byte	0x32
 28469 06a4 12       		.uleb128 0x12
 28470 06a5 B4140000 		.4byte	.LASF136
 28471 06a9 08       		.byte	0x8
 28472 06aa 4101     		.2byte	0x141
 28473 06ac 97000000 		.4byte	0x97
 28474 06b0 33       		.byte	0x33
 28475 06b1 12       		.uleb128 0x12
 28476 06b2 8F010000 		.4byte	.LASF137
 28477 06b6 08       		.byte	0x8
 28478 06b7 4201     		.2byte	0x142
 28479 06b9 D3000000 		.4byte	0xd3
 28480 06bd 34       		.byte	0x34
 28481 06be 12       		.uleb128 0x12
 28482 06bf 4D060000 		.4byte	.LASF138
 28483 06c3 08       		.byte	0x8
 28484 06c4 4301     		.2byte	0x143
 28485 06c6 D3000000 		.4byte	0xd3
 28486 06ca 38       		.byte	0x38
 28487 06cb 12       		.uleb128 0x12
 28488 06cc 380B0000 		.4byte	.LASF139
 28489 06d0 08       		.byte	0x8
 28490 06d1 4401     		.2byte	0x144
 28491 06d3 D3000000 		.4byte	0xd3
 28492 06d7 3C       		.byte	0x3c
 28493 06d8 12       		.uleb128 0x12
 28494 06d9 B5050000 		.4byte	.LASF140
 28495 06dd 08       		.byte	0x8
 28496 06de 4501     		.2byte	0x145
 28497 06e0 D3000000 		.4byte	0xd3
 28498 06e4 40       		.byte	0x40
 28499 06e5 12       		.uleb128 0x12
 28500 06e6 CF010000 		.4byte	.LASF141
 28501 06ea 08       		.byte	0x8
 28502 06eb 4601     		.2byte	0x146
 28503 06ed 4E070000 		.4byte	0x74e
 28504 06f1 44       		.byte	0x44
 28505 06f2 12       		.uleb128 0x12
 28506 06f3 44150000 		.4byte	.LASF142
 28507 06f7 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 623


 28508 06f8 4701     		.2byte	0x147
 28509 06fa C7000000 		.4byte	0xc7
 28510 06fe 5C       		.byte	0x5c
 28511 06ff 12       		.uleb128 0x12
 28512 0700 3F090000 		.4byte	.LASF143
 28513 0704 08       		.byte	0x8
 28514 0705 4801     		.2byte	0x148
 28515 0707 97000000 		.4byte	0x97
 28516 070b 5E       		.byte	0x5e
 28517 070c 12       		.uleb128 0x12
 28518 070d 520C0000 		.4byte	.LASF144
 28519 0711 08       		.byte	0x8
 28520 0712 4901     		.2byte	0x149
 28521 0714 97000000 		.4byte	0x97
 28522 0718 5F       		.byte	0x5f
 28523 0719 12       		.uleb128 0x12
 28524 071a 5D050000 		.4byte	.LASF145
 28525 071e 08       		.byte	0x8
 28526 071f 4A01     		.2byte	0x14a
 28527 0721 97000000 		.4byte	0x97
 28528 0725 60       		.byte	0x60
 28529 0726 12       		.uleb128 0x12
 28530 0727 F7050000 		.4byte	.LASF146
 28531 072b 08       		.byte	0x8
 28532 072c 4B01     		.2byte	0x14b
 28533 072e 97000000 		.4byte	0x97
 28534 0732 61       		.byte	0x61
 28535 0733 12       		.uleb128 0x12
 28536 0734 1A050000 		.4byte	.LASF147
 28537 0738 08       		.byte	0x8
 28538 0739 4C01     		.2byte	0x14c
 28539 073b 97000000 		.4byte	0x97
 28540 073f 62       		.byte	0x62
 28541 0740 12       		.uleb128 0x12
 28542 0741 AA030000 		.4byte	.LASF122
 28543 0745 08       		.byte	0x8
 28544 0746 4D01     		.2byte	0x14d
 28545 0748 5E070000 		.4byte	0x75e
 28546 074c 63       		.byte	0x63
 28547 074d 00       		.byte	0
 28548 074e 09       		.uleb128 0x9
 28549 074f EB000000 		.4byte	0xeb
 28550 0753 5E070000 		.4byte	0x75e
 28551 0757 0A       		.uleb128 0xa
 28552 0758 18010000 		.4byte	0x118
 28553 075c 05       		.byte	0x5
 28554 075d 00       		.byte	0
 28555 075e 09       		.uleb128 0x9
 28556 075f 97000000 		.4byte	0x97
 28557 0763 6E070000 		.4byte	0x76e
 28558 0767 0A       		.uleb128 0xa
 28559 0768 18010000 		.4byte	0x118
 28560 076c 0C       		.byte	0xc
 28561 076d 00       		.byte	0
 28562 076e 11       		.uleb128 0x11
 28563 076f 2D140000 		.4byte	.LASF148
 28564 0773 30       		.byte	0x30
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 624


 28565 0774 08       		.byte	0x8
 28566 0775 5401     		.2byte	0x154
 28567 0777 F1070000 		.4byte	0x7f1
 28568 077b 12       		.uleb128 0x12
 28569 077c 1A0B0000 		.4byte	.LASF149
 28570 0780 08       		.byte	0x8
 28571 0781 5501     		.2byte	0x155
 28572 0783 F1070000 		.4byte	0x7f1
 28573 0787 00       		.byte	0
 28574 0788 13       		.uleb128 0x13
 28575 0789 72657300 		.ascii	"res\000"
 28576 078d 08       		.byte	0x8
 28577 078e 5601     		.2byte	0x156
 28578 0790 C4050000 		.4byte	0x5c4
 28579 0794 05       		.byte	0x5
 28580 0795 12       		.uleb128 0x12
 28581 0796 01090000 		.4byte	.LASF150
 28582 079a 08       		.byte	0x8
 28583 079b 5701     		.2byte	0x157
 28584 079d C0030000 		.4byte	0x3c0
 28585 07a1 08       		.byte	0x8
 28586 07a2 12       		.uleb128 0x12
 28587 07a3 27060000 		.4byte	.LASF151
 28588 07a7 08       		.byte	0x8
 28589 07a8 5801     		.2byte	0x158
 28590 07aa 01080000 		.4byte	0x801
 28591 07ae 14       		.byte	0x14
 28592 07af 12       		.uleb128 0x12
 28593 07b0 090E0000 		.4byte	.LASF152
 28594 07b4 08       		.byte	0x8
 28595 07b5 5901     		.2byte	0x159
 28596 07b7 97000000 		.4byte	0x97
 28597 07bb 20       		.byte	0x20
 28598 07bc 12       		.uleb128 0x12
 28599 07bd C5020000 		.4byte	.LASF153
 28600 07c1 08       		.byte	0x8
 28601 07c2 5A01     		.2byte	0x15a
 28602 07c4 C4050000 		.4byte	0x5c4
 28603 07c8 21       		.byte	0x21
 28604 07c9 12       		.uleb128 0x12
 28605 07ca BC0D0000 		.4byte	.LASF154
 28606 07ce 08       		.byte	0x8
 28607 07cf 5B01     		.2byte	0x15b
 28608 07d1 BB000000 		.4byte	0xbb
 28609 07d5 24       		.byte	0x24
 28610 07d6 12       		.uleb128 0x12
 28611 07d7 7C100000 		.4byte	.LASF155
 28612 07db 08       		.byte	0x8
 28613 07dc 5C01     		.2byte	0x15c
 28614 07de D0030000 		.4byte	0x3d0
 28615 07e2 25       		.byte	0x25
 28616 07e3 12       		.uleb128 0x12
 28617 07e4 AA030000 		.4byte	.LASF122
 28618 07e8 08       		.byte	0x8
 28619 07e9 5D01     		.2byte	0x15d
 28620 07eb 11080000 		.4byte	0x811
 28621 07ef 28       		.byte	0x28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 625


 28622 07f0 00       		.byte	0
 28623 07f1 09       		.uleb128 0x9
 28624 07f2 97000000 		.4byte	0x97
 28625 07f6 01080000 		.4byte	0x801
 28626 07fa 0A       		.uleb128 0xa
 28627 07fb 18010000 		.4byte	0x118
 28628 07ff 04       		.byte	0x4
 28629 0800 00       		.byte	0
 28630 0801 09       		.uleb128 0x9
 28631 0802 DF000000 		.4byte	0xdf
 28632 0806 11080000 		.4byte	0x811
 28633 080a 0A       		.uleb128 0xa
 28634 080b 18010000 		.4byte	0x118
 28635 080f 02       		.byte	0x2
 28636 0810 00       		.byte	0
 28637 0811 09       		.uleb128 0x9
 28638 0812 97000000 		.4byte	0x97
 28639 0816 21080000 		.4byte	0x821
 28640 081a 0A       		.uleb128 0xa
 28641 081b 18010000 		.4byte	0x118
 28642 081f 07       		.byte	0x7
 28643 0820 00       		.byte	0
 28644 0821 11       		.uleb128 0x11
 28645 0822 71020000 		.4byte	.LASF156
 28646 0826 10       		.byte	0x10
 28647 0827 08       		.byte	0x8
 28648 0828 6401     		.2byte	0x164
 28649 082a 70080000 		.4byte	0x870
 28650 082e 12       		.uleb128 0x12
 28651 082f 400D0000 		.4byte	.LASF157
 28652 0833 08       		.byte	0x8
 28653 0834 6501     		.2byte	0x165
 28654 0836 70080000 		.4byte	0x870
 28655 083a 00       		.byte	0
 28656 083b 12       		.uleb128 0x12
 28657 083c 09150000 		.4byte	.LASF158
 28658 0840 08       		.byte	0x8
 28659 0841 6601     		.2byte	0x166
 28660 0843 05050000 		.4byte	0x505
 28661 0847 04       		.byte	0x4
 28662 0848 12       		.uleb128 0x12
 28663 0849 59060000 		.4byte	.LASF159
 28664 084d 08       		.byte	0x8
 28665 084e 6701     		.2byte	0x167
 28666 0850 80080000 		.4byte	0x880
 28667 0854 0C       		.byte	0xc
 28668 0855 12       		.uleb128 0x12
 28669 0856 96100000 		.4byte	.LASF160
 28670 085a 08       		.byte	0x8
 28671 085b 6801     		.2byte	0x168
 28672 085d 97000000 		.4byte	0x97
 28673 0861 0E       		.byte	0xe
 28674 0862 12       		.uleb128 0x12
 28675 0863 0B130000 		.4byte	.LASF161
 28676 0867 08       		.byte	0x8
 28677 0868 6901     		.2byte	0x169
 28678 086a 97000000 		.4byte	0x97
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 626


 28679 086e 0F       		.byte	0xf
 28680 086f 00       		.byte	0
 28681 0870 09       		.uleb128 0x9
 28682 0871 A3000000 		.4byte	0xa3
 28683 0875 80080000 		.4byte	0x880
 28684 0879 0A       		.uleb128 0xa
 28685 087a 18010000 		.4byte	0x118
 28686 087e 01       		.byte	0x1
 28687 087f 00       		.byte	0
 28688 0880 09       		.uleb128 0x9
 28689 0881 97000000 		.4byte	0x97
 28690 0885 90080000 		.4byte	0x890
 28691 0889 0A       		.uleb128 0xa
 28692 088a 18010000 		.4byte	0x118
 28693 088e 01       		.byte	0x1
 28694 088f 00       		.byte	0
 28695 0890 11       		.uleb128 0x11
 28696 0891 9A0C0000 		.4byte	.LASF162
 28697 0895 20       		.byte	0x20
 28698 0896 08       		.byte	0x8
 28699 0897 7001     		.2byte	0x170
 28700 0899 D2080000 		.4byte	0x8d2
 28701 089d 12       		.uleb128 0x12
 28702 089e 25030000 		.4byte	.LASF163
 28703 08a2 08       		.byte	0x8
 28704 08a3 7101     		.2byte	0x171
 28705 08a5 97000000 		.4byte	0x97
 28706 08a9 00       		.byte	0
 28707 08aa 12       		.uleb128 0x12
 28708 08ab 2B0E0000 		.4byte	.LASF164
 28709 08af 08       		.byte	0x8
 28710 08b0 7201     		.2byte	0x172
 28711 08b2 97000000 		.4byte	0x97
 28712 08b6 01       		.byte	0x1
 28713 08b7 12       		.uleb128 0x12
 28714 08b8 900B0000 		.4byte	.LASF165
 28715 08bc 08       		.byte	0x8
 28716 08bd 7301     		.2byte	0x173
 28717 08bf D2080000 		.4byte	0x8d2
 28718 08c3 02       		.byte	0x2
 28719 08c4 12       		.uleb128 0x12
 28720 08c5 AA030000 		.4byte	.LASF122
 28721 08c9 08       		.byte	0x8
 28722 08ca 7401     		.2byte	0x174
 28723 08cc F1070000 		.4byte	0x7f1
 28724 08d0 1B       		.byte	0x1b
 28725 08d1 00       		.byte	0
 28726 08d2 09       		.uleb128 0x9
 28727 08d3 97000000 		.4byte	0x97
 28728 08d7 E8080000 		.4byte	0x8e8
 28729 08db 0A       		.uleb128 0xa
 28730 08dc 18010000 		.4byte	0x118
 28731 08e0 04       		.byte	0x4
 28732 08e1 0A       		.uleb128 0xa
 28733 08e2 18010000 		.4byte	0x118
 28734 08e6 04       		.byte	0x4
 28735 08e7 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 627


 28736 08e8 11       		.uleb128 0x11
 28737 08e9 89100000 		.4byte	.LASF166
 28738 08ed 20       		.byte	0x20
 28739 08ee 08       		.byte	0x8
 28740 08ef 7B01     		.2byte	0x17b
 28741 08f1 44090000 		.4byte	0x944
 28742 08f5 12       		.uleb128 0x12
 28743 08f6 FF0D0000 		.4byte	.LASF167
 28744 08fa 08       		.byte	0x8
 28745 08fb 7C01     		.2byte	0x17c
 28746 08fd 44090000 		.4byte	0x944
 28747 0901 00       		.byte	0
 28748 0902 12       		.uleb128 0x12
 28749 0903 F8120000 		.4byte	.LASF168
 28750 0907 08       		.byte	0x8
 28751 0908 7D01     		.2byte	0x17d
 28752 090a 97000000 		.4byte	0x97
 28753 090e 06       		.byte	0x6
 28754 090f 12       		.uleb128 0x12
 28755 0910 4D130000 		.4byte	.LASF169
 28756 0914 08       		.byte	0x8
 28757 0915 7E01     		.2byte	0x17e
 28758 0917 97000000 		.4byte	0x97
 28759 091b 07       		.byte	0x7
 28760 091c 12       		.uleb128 0x12
 28761 091d 88060000 		.4byte	.LASF170
 28762 0921 08       		.byte	0x8
 28763 0922 7F01     		.2byte	0x17f
 28764 0924 54090000 		.4byte	0x954
 28765 0928 08       		.byte	0x8
 28766 0929 12       		.uleb128 0x12
 28767 092a 33030000 		.4byte	.LASF171
 28768 092e 08       		.byte	0x8
 28769 092f 8001     		.2byte	0x180
 28770 0931 97000000 		.4byte	0x97
 28771 0935 14       		.byte	0x14
 28772 0936 12       		.uleb128 0x12
 28773 0937 AA030000 		.4byte	.LASF122
 28774 093b 08       		.byte	0x8
 28775 093c 8101     		.2byte	0x181
 28776 093e 64090000 		.4byte	0x964
 28777 0942 15       		.byte	0x15
 28778 0943 00       		.byte	0
 28779 0944 09       		.uleb128 0x9
 28780 0945 97000000 		.4byte	0x97
 28781 0949 54090000 		.4byte	0x954
 28782 094d 0A       		.uleb128 0xa
 28783 094e 18010000 		.4byte	0x118
 28784 0952 05       		.byte	0x5
 28785 0953 00       		.byte	0
 28786 0954 09       		.uleb128 0x9
 28787 0955 97000000 		.4byte	0x97
 28788 0959 64090000 		.4byte	0x964
 28789 095d 0A       		.uleb128 0xa
 28790 095e 18010000 		.4byte	0x118
 28791 0962 0B       		.byte	0xb
 28792 0963 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 628


 28793 0964 09       		.uleb128 0x9
 28794 0965 97000000 		.4byte	0x97
 28795 0969 74090000 		.4byte	0x974
 28796 096d 0A       		.uleb128 0xa
 28797 096e 18010000 		.4byte	0x118
 28798 0972 0A       		.byte	0xa
 28799 0973 00       		.byte	0
 28800 0974 11       		.uleb128 0x11
 28801 0975 5E100000 		.4byte	.LASF172
 28802 0979 20       		.byte	0x20
 28803 097a 08       		.byte	0x8
 28804 097b 8801     		.2byte	0x188
 28805 097d A9090000 		.4byte	0x9a9
 28806 0981 12       		.uleb128 0x12
 28807 0982 9E040000 		.4byte	.LASF173
 28808 0986 08       		.byte	0x8
 28809 0987 8901     		.2byte	0x189
 28810 0989 40010000 		.4byte	0x140
 28811 098d 00       		.byte	0
 28812 098e 12       		.uleb128 0x12
 28813 098f 88030000 		.4byte	.LASF174
 28814 0993 08       		.byte	0x8
 28815 0994 8A01     		.2byte	0x18a
 28816 0996 21080000 		.4byte	0x821
 28817 099a 08       		.byte	0x8
 28818 099b 12       		.uleb128 0x12
 28819 099c AA030000 		.4byte	.LASF122
 28820 09a0 08       		.byte	0x8
 28821 09a1 8B01     		.2byte	0x18b
 28822 09a3 11080000 		.4byte	0x811
 28823 09a7 18       		.byte	0x18
 28824 09a8 00       		.byte	0
 28825 09a9 11       		.uleb128 0x11
 28826 09aa 880A0000 		.4byte	.LASF175
 28827 09ae 10       		.byte	0x10
 28828 09af 08       		.byte	0x8
 28829 09b0 9201     		.2byte	0x192
 28830 09b2 F8090000 		.4byte	0x9f8
 28831 09b6 12       		.uleb128 0x12
 28832 09b7 31090000 		.4byte	.LASF176
 28833 09bb 08       		.byte	0x8
 28834 09bc 9301     		.2byte	0x193
 28835 09be D3000000 		.4byte	0xd3
 28836 09c2 00       		.byte	0
 28837 09c3 12       		.uleb128 0x12
 28838 09c4 92150000 		.4byte	.LASF177
 28839 09c8 08       		.byte	0x8
 28840 09c9 9401     		.2byte	0x194
 28841 09cb D3000000 		.4byte	0xd3
 28842 09cf 04       		.byte	0x4
 28843 09d0 12       		.uleb128 0x12
 28844 09d1 63060000 		.4byte	.LASF178
 28845 09d5 08       		.byte	0x8
 28846 09d6 9501     		.2byte	0x195
 28847 09d8 D3000000 		.4byte	0xd3
 28848 09dc 08       		.byte	0x8
 28849 09dd 12       		.uleb128 0x12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 629


 28850 09de 8D070000 		.4byte	.LASF179
 28851 09e2 08       		.byte	0x8
 28852 09e3 9601     		.2byte	0x196
 28853 09e5 97000000 		.4byte	0x97
 28854 09e9 0C       		.byte	0xc
 28855 09ea 12       		.uleb128 0x12
 28856 09eb AA030000 		.4byte	.LASF122
 28857 09ef 08       		.byte	0x8
 28858 09f0 9701     		.2byte	0x197
 28859 09f2 C4050000 		.4byte	0x5c4
 28860 09f6 0D       		.byte	0xd
 28861 09f7 00       		.byte	0
 28862 09f8 11       		.uleb128 0x11
 28863 09f9 8F110000 		.4byte	.LASF180
 28864 09fd 10       		.byte	0x10
 28865 09fe 08       		.byte	0x8
 28866 09ff 9E01     		.2byte	0x19e
 28867 0a01 3A0A0000 		.4byte	0xa3a
 28868 0a05 12       		.uleb128 0x12
 28869 0a06 A0070000 		.4byte	.LASF181
 28870 0a0a 08       		.byte	0x8
 28871 0a0b 9F01     		.2byte	0x19f
 28872 0a0d A3000000 		.4byte	0xa3
 28873 0a11 00       		.byte	0
 28874 0a12 12       		.uleb128 0x12
 28875 0a13 C3100000 		.4byte	.LASF182
 28876 0a17 08       		.byte	0x8
 28877 0a18 A001     		.2byte	0x1a0
 28878 0a1a C7000000 		.4byte	0xc7
 28879 0a1e 02       		.byte	0x2
 28880 0a1f 12       		.uleb128 0x12
 28881 0a20 A9080000 		.4byte	.LASF183
 28882 0a24 08       		.byte	0x8
 28883 0a25 A101     		.2byte	0x1a1
 28884 0a27 70080000 		.4byte	0x870
 28885 0a2b 04       		.byte	0x4
 28886 0a2c 12       		.uleb128 0x12
 28887 0a2d AA030000 		.4byte	.LASF122
 28888 0a31 08       		.byte	0x8
 28889 0a32 A201     		.2byte	0x1a2
 28890 0a34 11080000 		.4byte	0x811
 28891 0a38 08       		.byte	0x8
 28892 0a39 00       		.byte	0
 28893 0a3a 11       		.uleb128 0x11
 28894 0a3b FD010000 		.4byte	.LASF184
 28895 0a3f 10       		.byte	0x10
 28896 0a40 08       		.byte	0x8
 28897 0a41 A901     		.2byte	0x1a9
 28898 0a43 6F0A0000 		.4byte	0xa6f
 28899 0a47 12       		.uleb128 0x12
 28900 0a48 FD0F0000 		.4byte	.LASF185
 28901 0a4c 08       		.byte	0x8
 28902 0a4d AA01     		.2byte	0x1aa
 28903 0a4f 97000000 		.4byte	0x97
 28904 0a53 00       		.byte	0
 28905 0a54 12       		.uleb128 0x12
 28906 0a55 5A0B0000 		.4byte	.LASF186
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 630


 28907 0a59 08       		.byte	0x8
 28908 0a5a AB01     		.2byte	0x1ab
 28909 0a5c 97000000 		.4byte	0x97
 28910 0a60 01       		.byte	0x1
 28911 0a61 12       		.uleb128 0x12
 28912 0a62 AA030000 		.4byte	.LASF122
 28913 0a66 08       		.byte	0x8
 28914 0a67 AC01     		.2byte	0x1ac
 28915 0a69 6F0A0000 		.4byte	0xa6f
 28916 0a6d 02       		.byte	0x2
 28917 0a6e 00       		.byte	0
 28918 0a6f 09       		.uleb128 0x9
 28919 0a70 97000000 		.4byte	0x97
 28920 0a74 7F0A0000 		.4byte	0xa7f
 28921 0a78 0A       		.uleb128 0xa
 28922 0a79 18010000 		.4byte	0x118
 28923 0a7d 0D       		.byte	0xd
 28924 0a7e 00       		.byte	0
 28925 0a7f 11       		.uleb128 0x11
 28926 0a80 950D0000 		.4byte	.LASF187
 28927 0a84 10       		.byte	0x10
 28928 0a85 08       		.byte	0x8
 28929 0a86 B301     		.2byte	0x1b3
 28930 0a88 C10A0000 		.4byte	0xac1
 28931 0a8c 12       		.uleb128 0x12
 28932 0a8d 43140000 		.4byte	.LASF188
 28933 0a91 08       		.byte	0x8
 28934 0a92 B401     		.2byte	0x1b4
 28935 0a94 D3000000 		.4byte	0xd3
 28936 0a98 00       		.byte	0
 28937 0a99 12       		.uleb128 0x12
 28938 0a9a 78070000 		.4byte	.LASF189
 28939 0a9e 08       		.byte	0x8
 28940 0a9f B501     		.2byte	0x1b5
 28941 0aa1 EB000000 		.4byte	0xeb
 28942 0aa5 04       		.byte	0x4
 28943 0aa6 12       		.uleb128 0x12
 28944 0aa7 8F0F0000 		.4byte	.LASF190
 28945 0aab 08       		.byte	0x8
 28946 0aac B601     		.2byte	0x1b6
 28947 0aae EB000000 		.4byte	0xeb
 28948 0ab2 08       		.byte	0x8
 28949 0ab3 12       		.uleb128 0x12
 28950 0ab4 AA030000 		.4byte	.LASF122
 28951 0ab8 08       		.byte	0x8
 28952 0ab9 B701     		.2byte	0x1b7
 28953 0abb C10A0000 		.4byte	0xac1
 28954 0abf 0C       		.byte	0xc
 28955 0ac0 00       		.byte	0
 28956 0ac1 09       		.uleb128 0x9
 28957 0ac2 97000000 		.4byte	0x97
 28958 0ac6 D10A0000 		.4byte	0xad1
 28959 0aca 0A       		.uleb128 0xa
 28960 0acb 18010000 		.4byte	0x118
 28961 0acf 03       		.byte	0x3
 28962 0ad0 00       		.byte	0
 28963 0ad1 11       		.uleb128 0x11
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 631


 28964 0ad2 B4020000 		.4byte	.LASF191
 28965 0ad6 12       		.byte	0x12
 28966 0ad7 08       		.byte	0x8
 28967 0ad8 BE01     		.2byte	0x1be
 28968 0ada 130B0000 		.4byte	0xb13
 28969 0ade 12       		.uleb128 0x12
 28970 0adf 6A150000 		.4byte	.LASF192
 28971 0ae3 08       		.byte	0x8
 28972 0ae4 BF01     		.2byte	0x1bf
 28973 0ae6 97000000 		.4byte	0x97
 28974 0aea 00       		.byte	0
 28975 0aeb 12       		.uleb128 0x12
 28976 0aec D6130000 		.4byte	.LASF193
 28977 0af0 08       		.byte	0x8
 28978 0af1 C001     		.2byte	0x1c0
 28979 0af3 70080000 		.4byte	0x870
 28980 0af7 02       		.byte	0x2
 28981 0af8 12       		.uleb128 0x12
 28982 0af9 94000000 		.4byte	.LASF194
 28983 0afd 08       		.byte	0x8
 28984 0afe C101     		.2byte	0x1c1
 28985 0b00 97000000 		.4byte	0x97
 28986 0b04 06       		.byte	0x6
 28987 0b05 12       		.uleb128 0x12
 28988 0b06 AA030000 		.4byte	.LASF122
 28989 0b0a 08       		.byte	0x8
 28990 0b0b C201     		.2byte	0x1c2
 28991 0b0d 130B0000 		.4byte	0xb13
 28992 0b11 07       		.byte	0x7
 28993 0b12 00       		.byte	0
 28994 0b13 09       		.uleb128 0x9
 28995 0b14 97000000 		.4byte	0x97
 28996 0b18 230B0000 		.4byte	0xb23
 28997 0b1c 0A       		.uleb128 0xa
 28998 0b1d 18010000 		.4byte	0x118
 28999 0b21 09       		.byte	0x9
 29000 0b22 00       		.byte	0
 29001 0b23 14       		.uleb128 0x14
 29002 0b24 5E140000 		.4byte	.LASF195
 29003 0b28 F402     		.2byte	0x2f4
 29004 0b2a 08       		.byte	0x8
 29005 0b2b CB01     		.2byte	0x1cb
 29006 0b2d 080C0000 		.4byte	0xc08
 29007 0b31 12       		.uleb128 0x12
 29008 0b32 3E0C0000 		.4byte	.LASF196
 29009 0b36 08       		.byte	0x8
 29010 0b37 CD01     		.2byte	0x1cd
 29011 0b39 97000000 		.4byte	0x97
 29012 0b3d 00       		.byte	0
 29013 0b3e 12       		.uleb128 0x12
 29014 0b3f AA030000 		.4byte	.LASF122
 29015 0b43 08       		.byte	0x8
 29016 0b44 CE01     		.2byte	0x1ce
 29017 0b46 080C0000 		.4byte	0xc08
 29018 0b4a 01       		.byte	0x1
 29019 0b4b 13       		.uleb128 0x13
 29020 0b4c 636E7400 		.ascii	"cnt\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 632


 29021 0b50 08       		.byte	0x8
 29022 0b51 CF01     		.2byte	0x1cf
 29023 0b53 9C040000 		.4byte	0x49c
 29024 0b57 10       		.byte	0x10
 29025 0b58 12       		.uleb128 0x12
 29026 0b59 61030000 		.4byte	.LASF197
 29027 0b5d 08       		.byte	0x8
 29028 0b5e D001     		.2byte	0x1d0
 29029 0b60 180C0000 		.4byte	0xc18
 29030 0b64 60       		.byte	0x60
 29031 0b65 13       		.uleb128 0x13
 29032 0b66 64657600 		.ascii	"dev\000"
 29033 0b6a 08       		.byte	0x8
 29034 0b6b D101     		.2byte	0x1d1
 29035 0b6d 35050000 		.4byte	0x535
 29036 0b71 A0       		.byte	0xa0
 29037 0b72 12       		.uleb128 0x12
 29038 0b73 E0110000 		.4byte	.LASF198
 29039 0b77 08       		.byte	0x8
 29040 0b78 D201     		.2byte	0x1d2
 29041 0b7a 280C0000 		.4byte	0xc28
 29042 0b7e B0       		.byte	0xb0
 29043 0b7f 15       		.uleb128 0x15
 29044 0b80 656E6300 		.ascii	"enc\000"
 29045 0b84 08       		.byte	0x8
 29046 0b85 D301     		.2byte	0x1d3
 29047 0b87 380C0000 		.4byte	0xc38
 29048 0b8b 9001     		.2byte	0x190
 29049 0b8d 15       		.uleb128 0x15
 29050 0b8e 656D6700 		.ascii	"emg\000"
 29051 0b92 08       		.byte	0x8
 29052 0b93 D401     		.2byte	0x1d4
 29053 0b95 21080000 		.4byte	0x821
 29054 0b99 F001     		.2byte	0x1f0
 29055 0b9b 15       		.uleb128 0x15
 29056 0b9c 696D7500 		.ascii	"imu\000"
 29057 0ba0 08       		.byte	0x8
 29058 0ba1 D501     		.2byte	0x1d5
 29059 0ba3 90080000 		.4byte	0x890
 29060 0ba7 0002     		.2byte	0x200
 29061 0ba9 15       		.uleb128 0x15
 29062 0baa 65787000 		.ascii	"exp\000"
 29063 0bae 08       		.byte	0x8
 29064 0baf D601     		.2byte	0x1d6
 29065 0bb1 E8080000 		.4byte	0x8e8
 29066 0bb5 2002     		.2byte	0x220
 29067 0bb7 16       		.uleb128 0x16
 29068 0bb8 D5000000 		.4byte	.LASF199
 29069 0bbc 08       		.byte	0x8
 29070 0bbd D701     		.2byte	0x1d7
 29071 0bbf 480C0000 		.4byte	0xc48
 29072 0bc3 4002     		.2byte	0x240
 29073 0bc5 15       		.uleb128 0x15
 29074 0bc6 534800   		.ascii	"SH\000"
 29075 0bc9 08       		.byte	0x8
 29076 0bca D901     		.2byte	0x1d9
 29077 0bcc A9090000 		.4byte	0x9a9
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 633


 29078 0bd0 A002     		.2byte	0x2a0
 29079 0bd2 16       		.uleb128 0x16
 29080 0bd3 71010000 		.4byte	.LASF200
 29081 0bd7 08       		.byte	0x8
 29082 0bd8 DA01     		.2byte	0x1da
 29083 0bda F8090000 		.4byte	0x9f8
 29084 0bde B002     		.2byte	0x2b0
 29085 0be0 15       		.uleb128 0x15
 29086 0be1 4D5300   		.ascii	"MS\000"
 29087 0be4 08       		.byte	0x8
 29088 0be5 DB01     		.2byte	0x1db
 29089 0be7 3A0A0000 		.4byte	0xa3a
 29090 0beb C002     		.2byte	0x2c0
 29091 0bed 15       		.uleb128 0x15
 29092 0bee 464200   		.ascii	"FB\000"
 29093 0bf1 08       		.byte	0x8
 29094 0bf2 DC01     		.2byte	0x1dc
 29095 0bf4 7F0A0000 		.4byte	0xa7f
 29096 0bf8 D002     		.2byte	0x2d0
 29097 0bfa 15       		.uleb128 0x15
 29098 0bfb 575200   		.ascii	"WR\000"
 29099 0bfe 08       		.byte	0x8
 29100 0bff DD01     		.2byte	0x1dd
 29101 0c01 D10A0000 		.4byte	0xad1
 29102 0c05 E002     		.2byte	0x2e0
 29103 0c07 00       		.byte	0
 29104 0c08 09       		.uleb128 0x9
 29105 0c09 97000000 		.4byte	0x97
 29106 0c0d 180C0000 		.4byte	0xc18
 29107 0c11 0A       		.uleb128 0xa
 29108 0c12 18010000 		.4byte	0x118
 29109 0c16 0E       		.byte	0xe
 29110 0c17 00       		.byte	0
 29111 0c18 09       		.uleb128 0x9
 29112 0c19 97000000 		.4byte	0x97
 29113 0c1d 280C0000 		.4byte	0xc28
 29114 0c21 0A       		.uleb128 0xa
 29115 0c22 18010000 		.4byte	0x118
 29116 0c26 3F       		.byte	0x3f
 29117 0c27 00       		.byte	0
 29118 0c28 09       		.uleb128 0x9
 29119 0c29 D4050000 		.4byte	0x5d4
 29120 0c2d 380C0000 		.4byte	0xc38
 29121 0c31 0A       		.uleb128 0xa
 29122 0c32 18010000 		.4byte	0x118
 29123 0c36 01       		.byte	0x1
 29124 0c37 00       		.byte	0
 29125 0c38 09       		.uleb128 0x9
 29126 0c39 6E070000 		.4byte	0x76e
 29127 0c3d 480C0000 		.4byte	0xc48
 29128 0c41 0A       		.uleb128 0xa
 29129 0c42 18010000 		.4byte	0x118
 29130 0c46 01       		.byte	0x1
 29131 0c47 00       		.byte	0
 29132 0c48 09       		.uleb128 0x9
 29133 0c49 74090000 		.4byte	0x974
 29134 0c4d 580C0000 		.4byte	0xc58
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 634


 29135 0c51 0A       		.uleb128 0xa
 29136 0c52 18010000 		.4byte	0x118
 29137 0c56 02       		.byte	0x2
 29138 0c57 00       		.byte	0
 29139 0c58 11       		.uleb128 0x11
 29140 0c59 D70E0000 		.4byte	.LASF201
 29141 0c5d 28       		.byte	0x28
 29142 0c5e 08       		.byte	0x8
 29143 0c5f E801     		.2byte	0x1e8
 29144 0c61 B40C0000 		.4byte	0xcb4
 29145 0c65 12       		.uleb128 0x12
 29146 0c66 90050000 		.4byte	.LASF202
 29147 0c6a 08       		.byte	0x8
 29148 0c6b E901     		.2byte	0x1e9
 29149 0c6d 97000000 		.4byte	0x97
 29150 0c71 00       		.byte	0
 29151 0c72 12       		.uleb128 0x12
 29152 0c73 B7030000 		.4byte	.LASF203
 29153 0c77 08       		.byte	0x8
 29154 0c78 EA01     		.2byte	0x1ea
 29155 0c7a B40C0000 		.4byte	0xcb4
 29156 0c7e 02       		.byte	0x2
 29157 0c7f 12       		.uleb128 0x12
 29158 0c80 F40D0000 		.4byte	.LASF204
 29159 0c84 08       		.byte	0x8
 29160 0c85 EB01     		.2byte	0x1eb
 29161 0c87 B40C0000 		.4byte	0xcb4
 29162 0c8b 08       		.byte	0x8
 29163 0c8c 12       		.uleb128 0x12
 29164 0c8d E30E0000 		.4byte	.LASF205
 29165 0c91 08       		.byte	0x8
 29166 0c92 EC01     		.2byte	0x1ec
 29167 0c94 B40C0000 		.4byte	0xcb4
 29168 0c98 0E       		.byte	0xe
 29169 0c99 12       		.uleb128 0x12
 29170 0c9a 18090000 		.4byte	.LASF206
 29171 0c9e 08       		.byte	0x8
 29172 0c9f ED01     		.2byte	0x1ed
 29173 0ca1 C40C0000 		.4byte	0xcc4
 29174 0ca5 14       		.byte	0x14
 29175 0ca6 12       		.uleb128 0x12
 29176 0ca7 86020000 		.4byte	.LASF207
 29177 0cab 08       		.byte	0x8
 29178 0cac EE01     		.2byte	0x1ee
 29179 0cae C7000000 		.4byte	0xc7
 29180 0cb2 24       		.byte	0x24
 29181 0cb3 00       		.byte	0
 29182 0cb4 09       		.uleb128 0x9
 29183 0cb5 C7000000 		.4byte	0xc7
 29184 0cb9 C40C0000 		.4byte	0xcc4
 29185 0cbd 0A       		.uleb128 0xa
 29186 0cbe 18010000 		.4byte	0x118
 29187 0cc2 02       		.byte	0x2
 29188 0cc3 00       		.byte	0
 29189 0cc4 09       		.uleb128 0x9
 29190 0cc5 EB000000 		.4byte	0xeb
 29191 0cc9 D40C0000 		.4byte	0xcd4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 635


 29192 0ccd 0A       		.uleb128 0xa
 29193 0cce 18010000 		.4byte	0x118
 29194 0cd2 03       		.byte	0x3
 29195 0cd3 00       		.byte	0
 29196 0cd4 11       		.uleb128 0x11
 29197 0cd5 AF040000 		.4byte	.LASF208
 29198 0cd9 06       		.byte	0x6
 29199 0cda 08       		.byte	0x8
 29200 0cdb FE01     		.2byte	0x1fe
 29201 0cdd 160D0000 		.4byte	0xd16
 29202 0ce1 12       		.uleb128 0x12
 29203 0ce2 72080000 		.4byte	.LASF209
 29204 0ce6 08       		.byte	0x8
 29205 0ce7 FF01     		.2byte	0x1ff
 29206 0ce9 97000000 		.4byte	0x97
 29207 0ced 00       		.byte	0
 29208 0cee 12       		.uleb128 0x12
 29209 0cef B7150000 		.4byte	.LASF210
 29210 0cf3 08       		.byte	0x8
 29211 0cf4 0002     		.2byte	0x200
 29212 0cf6 97000000 		.4byte	0x97
 29213 0cfa 01       		.byte	0x1
 29214 0cfb 12       		.uleb128 0x12
 29215 0cfc F6060000 		.4byte	.LASF211
 29216 0d00 08       		.byte	0x8
 29217 0d01 0102     		.2byte	0x201
 29218 0d03 C7000000 		.4byte	0xc7
 29219 0d07 02       		.byte	0x2
 29220 0d08 12       		.uleb128 0x12
 29221 0d09 2C0B0000 		.4byte	.LASF212
 29222 0d0d 08       		.byte	0x8
 29223 0d0e 0202     		.2byte	0x202
 29224 0d10 C7000000 		.4byte	0xc7
 29225 0d14 04       		.byte	0x4
 29226 0d15 00       		.byte	0
 29227 0d16 17       		.uleb128 0x17
 29228 0d17 34100000 		.4byte	.LASF404
 29229 0d1b 02       		.byte	0x2
 29230 0d1c 1403     		.2byte	0x314
 29231 0d1e 8C000000 		.4byte	0x8c
 29232 0d22 03       		.byte	0x3
 29233 0d23 400D0000 		.4byte	0xd40
 29234 0d27 18       		.uleb128 0x18
 29235 0d28 8A050000 		.4byte	.LASF298
 29236 0d2c 02       		.byte	0x2
 29237 0d2d 1403     		.2byte	0x314
 29238 0d2f 8C000000 		.4byte	0x8c
 29239 0d33 19       		.uleb128 0x19
 29240 0d34 9A020000 		.4byte	.LASF405
 29241 0d38 02       		.byte	0x2
 29242 0d39 1603     		.2byte	0x316
 29243 0d3b 8C000000 		.4byte	0x8c
 29244 0d3f 00       		.byte	0
 29245 0d40 1A       		.uleb128 0x1a
 29246 0d41 83110000 		.4byte	.LASF213
 29247 0d45 01       		.byte	0x1
 29248 0d46 3D       		.byte	0x3d
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 636


 29249 0d47 00000000 		.4byte	.LFB64
 29250 0d4b 00050000 		.4byte	.LFE64-.LFB64
 29251 0d4f 01       		.uleb128 0x1
 29252 0d50 9C       		.byte	0x9c
 29253 0d51 1A0E0000 		.4byte	0xe1a
 29254 0d55 1B       		.uleb128 0x1b
 29255 0d56 FC060000 		.4byte	.LASF215
 29256 0d5a 01       		.byte	0x1
 29257 0d5b 3F       		.byte	0x3f
 29258 0d5c 97000000 		.4byte	0x97
 29259 0d60 02       		.uleb128 0x2
 29260 0d61 91       		.byte	0x91
 29261 0d62 77       		.sleb128 -9
 29262 0d63 1C       		.uleb128 0x1c
 29263 0d64 160D0000 		.4byte	0xd16
 29264 0d68 44030000 		.4byte	.LBB10
 29265 0d6c 08000000 		.4byte	.LBE10-.LBB10
 29266 0d70 01       		.byte	0x1
 29267 0d71 9C       		.byte	0x9c
 29268 0d72 910D0000 		.4byte	0xd91
 29269 0d76 1D       		.uleb128 0x1d
 29270 0d77 270D0000 		.4byte	0xd27
 29271 0d7b 02       		.uleb128 0x2
 29272 0d7c 91       		.byte	0x91
 29273 0d7d 64       		.sleb128 -28
 29274 0d7e 1E       		.uleb128 0x1e
 29275 0d7f 44030000 		.4byte	.LBB11
 29276 0d83 08000000 		.4byte	.LBE11-.LBB11
 29277 0d87 1F       		.uleb128 0x1f
 29278 0d88 330D0000 		.4byte	0xd33
 29279 0d8c 02       		.uleb128 0x2
 29280 0d8d 91       		.byte	0x91
 29281 0d8e 60       		.sleb128 -32
 29282 0d8f 00       		.byte	0
 29283 0d90 00       		.byte	0
 29284 0d91 1C       		.uleb128 0x1c
 29285 0d92 160D0000 		.4byte	0xd16
 29286 0d96 62030000 		.4byte	.LBB12
 29287 0d9a 08000000 		.4byte	.LBE12-.LBB12
 29288 0d9e 01       		.byte	0x1
 29289 0d9f A8       		.byte	0xa8
 29290 0da0 BF0D0000 		.4byte	0xdbf
 29291 0da4 1D       		.uleb128 0x1d
 29292 0da5 270D0000 		.4byte	0xd27
 29293 0da9 02       		.uleb128 0x2
 29294 0daa 91       		.byte	0x91
 29295 0dab 70       		.sleb128 -16
 29296 0dac 1E       		.uleb128 0x1e
 29297 0dad 62030000 		.4byte	.LBB13
 29298 0db1 08000000 		.4byte	.LBE13-.LBB13
 29299 0db5 1F       		.uleb128 0x1f
 29300 0db6 330D0000 		.4byte	0xd33
 29301 0dba 02       		.uleb128 0x2
 29302 0dbb 91       		.byte	0x91
 29303 0dbc 5C       		.sleb128 -36
 29304 0dbd 00       		.byte	0
 29305 0dbe 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 637


 29306 0dbf 20       		.uleb128 0x20
 29307 0dc0 160D0000 		.4byte	0xd16
 29308 0dc4 A4040000 		.4byte	.LBB14
 29309 0dc8 08000000 		.4byte	.LBE14-.LBB14
 29310 0dcc 01       		.byte	0x1
 29311 0dcd 0401     		.2byte	0x104
 29312 0dcf EE0D0000 		.4byte	0xdee
 29313 0dd3 1D       		.uleb128 0x1d
 29314 0dd4 270D0000 		.4byte	0xd27
 29315 0dd8 02       		.uleb128 0x2
 29316 0dd9 91       		.byte	0x91
 29317 0dda 6C       		.sleb128 -20
 29318 0ddb 1E       		.uleb128 0x1e
 29319 0ddc A4040000 		.4byte	.LBB15
 29320 0de0 08000000 		.4byte	.LBE15-.LBB15
 29321 0de4 1F       		.uleb128 0x1f
 29322 0de5 330D0000 		.4byte	0xd33
 29323 0de9 02       		.uleb128 0x2
 29324 0dea 91       		.byte	0x91
 29325 0deb 58       		.sleb128 -40
 29326 0dec 00       		.byte	0
 29327 0ded 00       		.byte	0
 29328 0dee 21       		.uleb128 0x21
 29329 0def 160D0000 		.4byte	0xd16
 29330 0df3 D4040000 		.4byte	.LBB16
 29331 0df7 08000000 		.4byte	.LBE16-.LBB16
 29332 0dfb 01       		.byte	0x1
 29333 0dfc 2201     		.2byte	0x122
 29334 0dfe 1D       		.uleb128 0x1d
 29335 0dff 270D0000 		.4byte	0xd27
 29336 0e03 02       		.uleb128 0x2
 29337 0e04 91       		.byte	0x91
 29338 0e05 68       		.sleb128 -24
 29339 0e06 1E       		.uleb128 0x1e
 29340 0e07 D4040000 		.4byte	.LBB17
 29341 0e0b 08000000 		.4byte	.LBE17-.LBB17
 29342 0e0f 1F       		.uleb128 0x1f
 29343 0e10 330D0000 		.4byte	0xd33
 29344 0e14 02       		.uleb128 0x2
 29345 0e15 91       		.byte	0x91
 29346 0e16 54       		.sleb128 -44
 29347 0e17 00       		.byte	0
 29348 0e18 00       		.byte	0
 29349 0e19 00       		.byte	0
 29350 0e1a 22       		.uleb128 0x22
 29351 0e1b 00000000 		.4byte	.LASF214
 29352 0e1f 01       		.byte	0x1
 29353 0e20 3101     		.2byte	0x131
 29354 0e22 00000000 		.4byte	.LFB65
 29355 0e26 22000000 		.4byte	.LFE65-.LFB65
 29356 0e2a 01       		.uleb128 0x1
 29357 0e2b 9C       		.byte	0x9c
 29358 0e2c 410E0000 		.4byte	0xe41
 29359 0e30 23       		.uleb128 0x23
 29360 0e31 19060000 		.4byte	.LASF216
 29361 0e35 01       		.byte	0x1
 29362 0e36 3201     		.2byte	0x132
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 638


 29363 0e38 410E0000 		.4byte	0xe41
 29364 0e3c 03       		.uleb128 0x3
 29365 0e3d 91       		.byte	0x91
 29366 0e3e 9C74     		.sleb128 -1508
 29367 0e40 00       		.byte	0
 29368 0e41 09       		.uleb128 0x9
 29369 0e42 F9000000 		.4byte	0xf9
 29370 0e46 520E0000 		.4byte	0xe52
 29371 0e4a 24       		.uleb128 0x24
 29372 0e4b 18010000 		.4byte	0x118
 29373 0e4f DB05     		.2byte	0x5db
 29374 0e51 00       		.byte	0
 29375 0e52 22       		.uleb128 0x22
 29376 0e53 8F140000 		.4byte	.LASF217
 29377 0e57 01       		.byte	0x1
 29378 0e58 3D01     		.2byte	0x13d
 29379 0e5a 00000000 		.4byte	.LFB66
 29380 0e5e 34010000 		.4byte	.LFE66-.LFB66
 29381 0e62 01       		.uleb128 0x1
 29382 0e63 9C       		.byte	0x9c
 29383 0e64 9B0E0000 		.4byte	0xe9b
 29384 0e68 25       		.uleb128 0x25
 29385 0e69 E9130000 		.4byte	.LASF220
 29386 0e6d 01       		.byte	0x1
 29387 0e6e 3D01     		.2byte	0x13d
 29388 0e70 A3000000 		.4byte	0xa3
 29389 0e74 04       		.uleb128 0x4
 29390 0e75 91       		.byte	0x91
 29391 0e76 B6C47E   		.sleb128 -24010
 29392 0e79 23       		.uleb128 0x23
 29393 0e7a 19060000 		.4byte	.LASF216
 29394 0e7e 01       		.byte	0x1
 29395 0e7f 3E01     		.2byte	0x13e
 29396 0e81 9B0E0000 		.4byte	0xe9b
 29397 0e85 03       		.uleb128 0x3
 29398 0e86 91       		.byte	0x91
 29399 0e87 D860     		.sleb128 -4008
 29400 0e89 23       		.uleb128 0x23
 29401 0e8a E6080000 		.4byte	.LASF218
 29402 0e8e 01       		.byte	0x1
 29403 0e8f 3F01     		.2byte	0x13f
 29404 0e91 AC0E0000 		.4byte	0xeac
 29405 0e95 04       		.uleb128 0x4
 29406 0e96 91       		.byte	0x91
 29407 0e97 B8C47E   		.sleb128 -24008
 29408 0e9a 00       		.byte	0
 29409 0e9b 09       		.uleb128 0x9
 29410 0e9c F9000000 		.4byte	0xf9
 29411 0ea0 AC0E0000 		.4byte	0xeac
 29412 0ea4 24       		.uleb128 0x24
 29413 0ea5 18010000 		.4byte	0x118
 29414 0ea9 9F0F     		.2byte	0xf9f
 29415 0eab 00       		.byte	0
 29416 0eac 09       		.uleb128 0x9
 29417 0ead F9000000 		.4byte	0xf9
 29418 0eb1 BD0E0000 		.4byte	0xebd
 29419 0eb5 24       		.uleb128 0x24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 639


 29420 0eb6 18010000 		.4byte	0x118
 29421 0eba 1F4E     		.2byte	0x4e1f
 29422 0ebc 00       		.byte	0
 29423 0ebd 22       		.uleb128 0x22
 29424 0ebe 40020000 		.4byte	.LASF219
 29425 0ec2 01       		.byte	0x1
 29426 0ec3 6901     		.2byte	0x169
 29427 0ec5 00000000 		.4byte	.LFB67
 29428 0ec9 68320000 		.4byte	.LFE67-.LFB67
 29429 0ecd 01       		.uleb128 0x1
 29430 0ece 9C       		.byte	0x9c
 29431 0ecf 61100000 		.4byte	0x1061
 29432 0ed3 25       		.uleb128 0x25
 29433 0ed4 A00D0000 		.4byte	.LASF221
 29434 0ed8 01       		.byte	0x1
 29435 0ed9 6901     		.2byte	0x169
 29436 0edb 61100000 		.4byte	0x1061
 29437 0edf 03       		.uleb128 0x3
 29438 0ee0 91       		.byte	0x91
 29439 0ee1 DC53     		.sleb128 -5668
 29440 0ee3 25       		.uleb128 0x25
 29441 0ee4 68140000 		.4byte	.LASF222
 29442 0ee8 01       		.byte	0x1
 29443 0ee9 6901     		.2byte	0x169
 29444 0eeb 67100000 		.4byte	0x1067
 29445 0eef 03       		.uleb128 0x3
 29446 0ef0 91       		.byte	0x91
 29447 0ef1 D853     		.sleb128 -5672
 29448 0ef3 25       		.uleb128 0x25
 29449 0ef4 C3030000 		.4byte	.LASF223
 29450 0ef8 01       		.byte	0x1
 29451 0ef9 6A01     		.2byte	0x16a
 29452 0efb 67100000 		.4byte	0x1067
 29453 0eff 03       		.uleb128 0x3
 29454 0f00 91       		.byte	0x91
 29455 0f01 D453     		.sleb128 -5676
 29456 0f03 25       		.uleb128 0x25
 29457 0f04 FD0C0000 		.4byte	.LASF224
 29458 0f08 01       		.byte	0x1
 29459 0f09 6A01     		.2byte	0x16a
 29460 0f0b 67100000 		.4byte	0x1067
 29461 0f0f 03       		.uleb128 0x3
 29462 0f10 91       		.byte	0x91
 29463 0f11 D053     		.sleb128 -5680
 29464 0f13 25       		.uleb128 0x25
 29465 0f14 B3130000 		.4byte	.LASF225
 29466 0f18 01       		.byte	0x1
 29467 0f19 6B01     		.2byte	0x16b
 29468 0f1b 67100000 		.4byte	0x1067
 29469 0f1f 02       		.uleb128 0x2
 29470 0f20 91       		.byte	0x91
 29471 0f21 00       		.sleb128 0
 29472 0f22 25       		.uleb128 0x25
 29473 0f23 67080000 		.4byte	.LASF226
 29474 0f27 01       		.byte	0x1
 29475 0f28 6B01     		.2byte	0x16b
 29476 0f2a 6D100000 		.4byte	0x106d
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 640


 29477 0f2e 02       		.uleb128 0x2
 29478 0f2f 91       		.byte	0x91
 29479 0f30 04       		.sleb128 4
 29480 0f31 25       		.uleb128 0x25
 29481 0f32 790B0000 		.4byte	.LASF227
 29482 0f36 01       		.byte	0x1
 29483 0f37 6C01     		.2byte	0x16c
 29484 0f39 67100000 		.4byte	0x1067
 29485 0f3d 02       		.uleb128 0x2
 29486 0f3e 91       		.byte	0x91
 29487 0f3f 08       		.sleb128 8
 29488 0f40 25       		.uleb128 0x25
 29489 0f41 F8080000 		.4byte	.LASF228
 29490 0f45 01       		.byte	0x1
 29491 0f46 6C01     		.2byte	0x16c
 29492 0f48 6D100000 		.4byte	0x106d
 29493 0f4c 02       		.uleb128 0x2
 29494 0f4d 91       		.byte	0x91
 29495 0f4e 0C       		.sleb128 12
 29496 0f4f 23       		.uleb128 0x23
 29497 0f50 6C060000 		.4byte	.LASF229
 29498 0f54 01       		.byte	0x1
 29499 0f55 6F01     		.2byte	0x16f
 29500 0f57 73100000 		.4byte	0x1073
 29501 0f5b 03       		.uleb128 0x3
 29502 0f5c 91       		.byte	0x91
 29503 0f5d A454     		.sleb128 -5596
 29504 0f5f 23       		.uleb128 0x23
 29505 0f60 ED0B0000 		.4byte	.LASF230
 29506 0f64 01       		.byte	0x1
 29507 0f65 7001     		.2byte	0x170
 29508 0f67 A3000000 		.4byte	0xa3
 29509 0f6b 02       		.uleb128 0x2
 29510 0f6c 91       		.byte	0x91
 29511 0f6d 60       		.sleb128 -32
 29512 0f6e 26       		.uleb128 0x26
 29513 0f6f 6900     		.ascii	"i\000"
 29514 0f71 01       		.byte	0x1
 29515 0f72 7301     		.2byte	0x173
 29516 0f74 97000000 		.4byte	0x97
 29517 0f78 02       		.uleb128 0x2
 29518 0f79 91       		.byte	0x91
 29519 0f7a 67       		.sleb128 -25
 29520 0f7b 26       		.uleb128 0x26
 29521 0f7c 6A00     		.ascii	"j\000"
 29522 0f7e 01       		.byte	0x1
 29523 0f7f 7301     		.2byte	0x173
 29524 0f81 97000000 		.4byte	0x97
 29525 0f85 02       		.uleb128 0x2
 29526 0f86 91       		.byte	0x91
 29527 0f87 66       		.sleb128 -26
 29528 0f88 26       		.uleb128 0x26
 29529 0f89 69647800 		.ascii	"idx\000"
 29530 0f8d 01       		.byte	0x1
 29531 0f8e 7401     		.2byte	0x174
 29532 0f90 97000000 		.4byte	0x97
 29533 0f94 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 641


 29534 0f95 91       		.byte	0x91
 29535 0f96 65       		.sleb128 -27
 29536 0f97 23       		.uleb128 0x23
 29537 0f98 CE110000 		.4byte	.LASF231
 29538 0f9c 01       		.byte	0x1
 29539 0f9d 7501     		.2byte	0x175
 29540 0f9f 97000000 		.4byte	0x97
 29541 0fa3 02       		.uleb128 0x2
 29542 0fa4 91       		.byte	0x91
 29543 0fa5 64       		.sleb128 -28
 29544 0fa6 26       		.uleb128 0x26
 29545 0fa7 736F6400 		.ascii	"sod\000"
 29546 0fab 01       		.byte	0x1
 29547 0fac 7601     		.2byte	0x176
 29548 0fae 97000000 		.4byte	0x97
 29549 0fb2 02       		.uleb128 0x2
 29550 0fb3 91       		.byte	0x91
 29551 0fb4 63       		.sleb128 -29
 29552 0fb5 23       		.uleb128 0x23
 29553 0fb6 CE0C0000 		.4byte	.LASF232
 29554 0fba 01       		.byte	0x1
 29555 0fbb 7701     		.2byte	0x177
 29556 0fbd 97000000 		.4byte	0x97
 29557 0fc1 02       		.uleb128 0x2
 29558 0fc2 91       		.byte	0x91
 29559 0fc3 62       		.sleb128 -30
 29560 0fc4 23       		.uleb128 0x23
 29561 0fc5 9D150000 		.4byte	.LASF233
 29562 0fc9 01       		.byte	0x1
 29563 0fca 7801     		.2byte	0x178
 29564 0fcc 84100000 		.4byte	0x1084
 29565 0fd0 03       		.uleb128 0x3
 29566 0fd1 91       		.byte	0x91
 29567 0fd2 F053     		.sleb128 -5648
 29568 0fd4 23       		.uleb128 0x23
 29569 0fd5 9B130000 		.4byte	.LASF234
 29570 0fd9 01       		.byte	0x1
 29571 0fda 7901     		.2byte	0x179
 29572 0fdc EB000000 		.4byte	0xeb
 29573 0fe0 03       		.uleb128 0x3
 29574 0fe1 91       		.byte	0x91
 29575 0fe2 EC53     		.sleb128 -5652
 29576 0fe4 23       		.uleb128 0x23
 29577 0fe5 5F120000 		.4byte	.LASF235
 29578 0fe9 01       		.byte	0x1
 29579 0fea 7A01     		.2byte	0x17a
 29580 0fec C7000000 		.4byte	0xc7
 29581 0ff0 03       		.uleb128 0x3
 29582 0ff1 91       		.byte	0x91
 29583 0ff2 EA53     		.sleb128 -5654
 29584 0ff4 23       		.uleb128 0x23
 29585 0ff5 350D0000 		.4byte	.LASF236
 29586 0ff9 01       		.byte	0x1
 29587 0ffa 7B01     		.2byte	0x17b
 29588 0ffc A3000000 		.4byte	0xa3
 29589 1000 03       		.uleb128 0x3
 29590 1001 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 642


 29591 1002 E853     		.sleb128 -5656
 29592 1004 23       		.uleb128 0x23
 29593 1005 BC130000 		.4byte	.LASF237
 29594 1009 01       		.byte	0x1
 29595 100a 7C01     		.2byte	0x17c
 29596 100c D3000000 		.4byte	0xd3
 29597 1010 03       		.uleb128 0x3
 29598 1011 91       		.byte	0x91
 29599 1012 E453     		.sleb128 -5660
 29600 1014 23       		.uleb128 0x23
 29601 1015 B70E0000 		.4byte	.LASF238
 29602 1019 01       		.byte	0x1
 29603 101a 7D01     		.2byte	0x17d
 29604 101c AF000000 		.4byte	0xaf
 29605 1020 03       		.uleb128 0x3
 29606 1021 91       		.byte	0x91
 29607 1022 E053     		.sleb128 -5664
 29608 1024 23       		.uleb128 0x23
 29609 1025 500E0000 		.4byte	.LASF239
 29610 1029 01       		.byte	0x1
 29611 102a 7F01     		.2byte	0x17f
 29612 102c 97000000 		.4byte	0x97
 29613 1030 02       		.uleb128 0x2
 29614 1031 91       		.byte	0x91
 29615 1032 5F       		.sleb128 -33
 29616 1033 23       		.uleb128 0x23
 29617 1034 9B010000 		.4byte	.LASF240
 29618 1038 01       		.byte	0x1
 29619 1039 8001     		.2byte	0x180
 29620 103b 97000000 		.4byte	0x97
 29621 103f 02       		.uleb128 0x2
 29622 1040 91       		.byte	0x91
 29623 1041 5E       		.sleb128 -34
 29624 1042 23       		.uleb128 0x23
 29625 1043 AF0B0000 		.4byte	.LASF241
 29626 1047 01       		.byte	0x1
 29627 1048 8201     		.2byte	0x182
 29628 104a 67100000 		.4byte	0x1067
 29629 104e 02       		.uleb128 0x2
 29630 104f 91       		.byte	0x91
 29631 1050 58       		.sleb128 -40
 29632 1051 23       		.uleb128 0x23
 29633 1052 2F020000 		.4byte	.LASF242
 29634 1056 01       		.byte	0x1
 29635 1057 8301     		.2byte	0x183
 29636 1059 67100000 		.4byte	0x1067
 29637 105d 02       		.uleb128 0x2
 29638 105e 91       		.byte	0x91
 29639 105f 54       		.sleb128 -44
 29640 1060 00       		.byte	0
 29641 1061 07       		.uleb128 0x7
 29642 1062 04       		.byte	0x4
 29643 1063 67100000 		.4byte	0x1067
 29644 1067 07       		.uleb128 0x7
 29645 1068 04       		.byte	0x4
 29646 1069 97000000 		.4byte	0x97
 29647 106d 07       		.uleb128 0x7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 643


 29648 106e 04       		.byte	0x4
 29649 106f 25010000 		.4byte	0x125
 29650 1073 09       		.uleb128 0x9
 29651 1074 97000000 		.4byte	0x97
 29652 1078 84100000 		.4byte	0x1084
 29653 107c 24       		.uleb128 0x24
 29654 107d 18010000 		.4byte	0x118
 29655 1081 AD15     		.2byte	0x15ad
 29656 1083 00       		.byte	0
 29657 1084 09       		.uleb128 0x9
 29658 1085 F9000000 		.4byte	0xf9
 29659 1089 94100000 		.4byte	0x1094
 29660 108d 0A       		.uleb128 0xa
 29661 108e 18010000 		.4byte	0x118
 29662 1092 31       		.byte	0x31
 29663 1093 00       		.byte	0
 29664 1094 22       		.uleb128 0x22
 29665 1095 B10F0000 		.4byte	.LASF243
 29666 1099 01       		.byte	0x1
 29667 109a 6E03     		.2byte	0x36e
 29668 109c 00000000 		.4byte	.LFB68
 29669 10a0 3C190000 		.4byte	.LFE68-.LFB68
 29670 10a4 01       		.uleb128 0x1
 29671 10a5 9C       		.byte	0x9c
 29672 10a6 72120000 		.4byte	0x1272
 29673 10aa 25       		.uleb128 0x25
 29674 10ab 72070000 		.4byte	.LASF244
 29675 10af 01       		.byte	0x1
 29676 10b0 6E03     		.2byte	0x36e
 29677 10b2 A3000000 		.4byte	0xa3
 29678 10b6 03       		.uleb128 0x3
 29679 10b7 91       		.byte	0x91
 29680 10b8 EE74     		.sleb128 -1426
 29681 10ba 26       		.uleb128 0x26
 29682 10bb 6900     		.ascii	"i\000"
 29683 10bd 01       		.byte	0x1
 29684 10be 6F03     		.2byte	0x36f
 29685 10c0 97000000 		.4byte	0x97
 29686 10c4 02       		.uleb128 0x2
 29687 10c5 91       		.byte	0x91
 29688 10c6 6F       		.sleb128 -17
 29689 10c7 26       		.uleb128 0x26
 29690 10c8 6A00     		.ascii	"j\000"
 29691 10ca 01       		.byte	0x1
 29692 10cb 6F03     		.2byte	0x36f
 29693 10cd 97000000 		.4byte	0x97
 29694 10d1 02       		.uleb128 0x2
 29695 10d2 91       		.byte	0x91
 29696 10d3 6E       		.sleb128 -18
 29697 10d4 26       		.uleb128 0x26
 29698 10d5 736F6400 		.ascii	"sod\000"
 29699 10d9 01       		.byte	0x1
 29700 10da 7003     		.2byte	0x370
 29701 10dc 97000000 		.4byte	0x97
 29702 10e0 02       		.uleb128 0x2
 29703 10e1 91       		.byte	0x91
 29704 10e2 6D       		.sleb128 -19
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 644


 29705 10e3 23       		.uleb128 0x23
 29706 10e4 990B0000 		.4byte	.LASF245
 29707 10e8 01       		.byte	0x1
 29708 10e9 7103     		.2byte	0x371
 29709 10eb 97000000 		.4byte	0x97
 29710 10ef 02       		.uleb128 0x2
 29711 10f0 91       		.byte	0x91
 29712 10f1 62       		.sleb128 -30
 29713 10f2 23       		.uleb128 0x23
 29714 10f3 5F120000 		.4byte	.LASF235
 29715 10f7 01       		.byte	0x1
 29716 10f8 7203     		.2byte	0x372
 29717 10fa C7000000 		.4byte	0xc7
 29718 10fe 02       		.uleb128 0x2
 29719 10ff 91       		.byte	0x91
 29720 1100 60       		.sleb128 -32
 29721 1101 23       		.uleb128 0x23
 29722 1102 350D0000 		.4byte	.LASF236
 29723 1106 01       		.byte	0x1
 29724 1107 7303     		.2byte	0x373
 29725 1109 A3000000 		.4byte	0xa3
 29726 110d 02       		.uleb128 0x2
 29727 110e 91       		.byte	0x91
 29728 110f 5E       		.sleb128 -34
 29729 1110 23       		.uleb128 0x23
 29730 1111 BC130000 		.4byte	.LASF237
 29731 1115 01       		.byte	0x1
 29732 1116 7403     		.2byte	0x374
 29733 1118 D3000000 		.4byte	0xd3
 29734 111c 02       		.uleb128 0x2
 29735 111d 91       		.byte	0x91
 29736 111e 58       		.sleb128 -40
 29737 111f 23       		.uleb128 0x23
 29738 1120 B70E0000 		.4byte	.LASF238
 29739 1124 01       		.byte	0x1
 29740 1125 7503     		.2byte	0x375
 29741 1127 AF000000 		.4byte	0xaf
 29742 112b 02       		.uleb128 0x2
 29743 112c 91       		.byte	0x91
 29744 112d 54       		.sleb128 -44
 29745 112e 23       		.uleb128 0x23
 29746 112f 9B130000 		.4byte	.LASF234
 29747 1133 01       		.byte	0x1
 29748 1134 7603     		.2byte	0x376
 29749 1136 EB000000 		.4byte	0xeb
 29750 113a 02       		.uleb128 0x2
 29751 113b 91       		.byte	0x91
 29752 113c 50       		.sleb128 -48
 29753 113d 23       		.uleb128 0x23
 29754 113e 500E0000 		.4byte	.LASF239
 29755 1142 01       		.byte	0x1
 29756 1143 7803     		.2byte	0x378
 29757 1145 97000000 		.4byte	0x97
 29758 1149 02       		.uleb128 0x2
 29759 114a 91       		.byte	0x91
 29760 114b 65       		.sleb128 -27
 29761 114c 23       		.uleb128 0x23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 645


 29762 114d 9B010000 		.4byte	.LASF240
 29763 1151 01       		.byte	0x1
 29764 1152 7903     		.2byte	0x379
 29765 1154 97000000 		.4byte	0x97
 29766 1158 02       		.uleb128 0x2
 29767 1159 91       		.byte	0x91
 29768 115a 64       		.sleb128 -28
 29769 115b 23       		.uleb128 0x23
 29770 115c D9030000 		.4byte	.LASF246
 29771 1160 01       		.byte	0x1
 29772 1161 7C03     		.2byte	0x37c
 29773 1163 72120000 		.4byte	0x1272
 29774 1167 02       		.uleb128 0x2
 29775 1168 91       		.byte	0x91
 29776 1169 68       		.sleb128 -24
 29777 116a 23       		.uleb128 0x23
 29778 116b A00D0000 		.4byte	.LASF221
 29779 116f 01       		.byte	0x1
 29780 1170 8403     		.2byte	0x384
 29781 1172 78120000 		.4byte	0x1278
 29782 1176 03       		.uleb128 0x3
 29783 1177 91       		.byte	0x91
 29784 1178 847D     		.sleb128 -380
 29785 117a 23       		.uleb128 0x23
 29786 117b 68140000 		.4byte	.LASF222
 29787 117f 01       		.byte	0x1
 29788 1180 E203     		.2byte	0x3e2
 29789 1182 88120000 		.4byte	0x1288
 29790 1186 03       		.uleb128 0x3
 29791 1187 91       		.byte	0x91
 29792 1188 B07C     		.sleb128 -464
 29793 118a 23       		.uleb128 0x23
 29794 118b C3030000 		.4byte	.LASF223
 29795 118f 01       		.byte	0x1
 29796 1190 FE03     		.2byte	0x3fe
 29797 1192 88120000 		.4byte	0x1288
 29798 1196 03       		.uleb128 0x3
 29799 1197 91       		.byte	0x91
 29800 1198 DC7B     		.sleb128 -548
 29801 119a 23       		.uleb128 0x23
 29802 119b FD0C0000 		.4byte	.LASF224
 29803 119f 01       		.byte	0x1
 29804 11a0 1A04     		.2byte	0x41a
 29805 11a2 88120000 		.4byte	0x1288
 29806 11a6 03       		.uleb128 0x3
 29807 11a7 91       		.byte	0x91
 29808 11a8 887B     		.sleb128 -632
 29809 11aa 23       		.uleb128 0x23
 29810 11ab 67080000 		.4byte	.LASF226
 29811 11af 01       		.byte	0x1
 29812 11b0 3704     		.2byte	0x437
 29813 11b2 98120000 		.4byte	0x1298
 29814 11b6 03       		.uleb128 0x3
 29815 11b7 91       		.byte	0x91
 29816 11b8 BC78     		.sleb128 -964
 29817 11ba 23       		.uleb128 0x23
 29818 11bb F0140000 		.4byte	.LASF247
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 646


 29819 11bf 01       		.byte	0x1
 29820 11c0 5404     		.2byte	0x454
 29821 11c2 A8120000 		.4byte	0x12a8
 29822 11c6 03       		.uleb128 0x3
 29823 11c7 91       		.byte	0x91
 29824 11c8 C477     		.sleb128 -1084
 29825 11ca 23       		.uleb128 0x23
 29826 11cb 60000000 		.4byte	.LASF248
 29827 11cf 01       		.byte	0x1
 29828 11d0 5704     		.2byte	0x457
 29829 11d2 B8120000 		.4byte	0x12b8
 29830 11d6 03       		.uleb128 0x3
 29831 11d7 91       		.byte	0x91
 29832 11d8 8C77     		.sleb128 -1140
 29833 11da 23       		.uleb128 0x23
 29834 11db F8080000 		.4byte	.LASF228
 29835 11df 01       		.byte	0x1
 29836 11e0 5F04     		.2byte	0x45f
 29837 11e2 C8120000 		.4byte	0x12c8
 29838 11e6 03       		.uleb128 0x3
 29839 11e7 91       		.byte	0x91
 29840 11e8 DC76     		.sleb128 -1188
 29841 11ea 23       		.uleb128 0x23
 29842 11eb B3130000 		.4byte	.LASF225
 29843 11ef 01       		.byte	0x1
 29844 11f0 6E04     		.2byte	0x46e
 29845 11f2 D8120000 		.4byte	0x12d8
 29846 11f6 03       		.uleb128 0x3
 29847 11f7 91       		.byte	0x91
 29848 11f8 BC76     		.sleb128 -1220
 29849 11fa 23       		.uleb128 0x23
 29850 11fb A60D0000 		.4byte	.LASF249
 29851 11ff 01       		.byte	0x1
 29852 1200 6F04     		.2byte	0x46f
 29853 1202 E8120000 		.4byte	0x12e8
 29854 1206 03       		.uleb128 0x3
 29855 1207 91       		.byte	0x91
 29856 1208 B076     		.sleb128 -1232
 29857 120a 23       		.uleb128 0x23
 29858 120b E70C0000 		.4byte	.LASF250
 29859 120f 01       		.byte	0x1
 29860 1210 7004     		.2byte	0x470
 29861 1212 F8120000 		.4byte	0x12f8
 29862 1216 03       		.uleb128 0x3
 29863 1217 91       		.byte	0x91
 29864 1218 9C76     		.sleb128 -1252
 29865 121a 23       		.uleb128 0x23
 29866 121b C90E0000 		.4byte	.LASF251
 29867 121f 01       		.byte	0x1
 29868 1220 7104     		.2byte	0x471
 29869 1222 97000000 		.4byte	0x97
 29870 1226 02       		.uleb128 0x2
 29871 1227 91       		.byte	0x91
 29872 1228 63       		.sleb128 -29
 29873 1229 23       		.uleb128 0x23
 29874 122a 790B0000 		.4byte	.LASF227
 29875 122e 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 647


 29876 122f 7A04     		.2byte	0x47a
 29877 1231 88120000 		.4byte	0x1288
 29878 1235 03       		.uleb128 0x3
 29879 1236 91       		.byte	0x91
 29880 1237 C875     		.sleb128 -1336
 29881 1239 23       		.uleb128 0x23
 29882 123a 17150000 		.4byte	.LASF252
 29883 123e 01       		.byte	0x1
 29884 123f 8504     		.2byte	0x485
 29885 1241 88120000 		.4byte	0x1288
 29886 1245 03       		.uleb128 0x3
 29887 1246 91       		.byte	0x91
 29888 1247 F474     		.sleb128 -1420
 29889 1249 1E       		.uleb128 0x1e
 29890 124a A6180000 		.4byte	.LBB18
 29891 124e 86000000 		.4byte	.LBE18-.LBB18
 29892 1252 26       		.uleb128 0x26
 29893 1253 69647800 		.ascii	"idx\000"
 29894 1257 01       		.byte	0x1
 29895 1258 EE04     		.2byte	0x4ee
 29896 125a 97000000 		.4byte	0x97
 29897 125e 02       		.uleb128 0x2
 29898 125f 91       		.byte	0x91
 29899 1260 67       		.sleb128 -25
 29900 1261 23       		.uleb128 0x23
 29901 1262 D0050000 		.4byte	.LASF253
 29902 1266 01       		.byte	0x1
 29903 1267 EE04     		.2byte	0x4ee
 29904 1269 97000000 		.4byte	0x97
 29905 126d 02       		.uleb128 0x2
 29906 126e 91       		.byte	0x91
 29907 126f 66       		.sleb128 -26
 29908 1270 00       		.byte	0
 29909 1271 00       		.byte	0
 29910 1272 07       		.uleb128 0x7
 29911 1273 04       		.byte	0x4
 29912 1274 230B0000 		.4byte	0xb23
 29913 1278 09       		.uleb128 0x9
 29914 1279 67100000 		.4byte	0x1067
 29915 127d 88120000 		.4byte	0x1288
 29916 1281 0A       		.uleb128 0xa
 29917 1282 18010000 		.4byte	0x118
 29918 1286 52       		.byte	0x52
 29919 1287 00       		.byte	0
 29920 1288 09       		.uleb128 0x9
 29921 1289 97000000 		.4byte	0x97
 29922 128d 98120000 		.4byte	0x1298
 29923 1291 0A       		.uleb128 0xa
 29924 1292 18010000 		.4byte	0x118
 29925 1296 52       		.byte	0x52
 29926 1297 00       		.byte	0
 29927 1298 09       		.uleb128 0x9
 29928 1299 25010000 		.4byte	0x125
 29929 129d A8120000 		.4byte	0x12a8
 29930 12a1 0A       		.uleb128 0xa
 29931 12a2 18010000 		.4byte	0x118
 29932 12a6 52       		.byte	0x52
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 648


 29933 12a7 00       		.byte	0
 29934 12a8 09       		.uleb128 0x9
 29935 12a9 F9000000 		.4byte	0xf9
 29936 12ad B8120000 		.4byte	0x12b8
 29937 12b1 0A       		.uleb128 0xa
 29938 12b2 18010000 		.4byte	0x118
 29939 12b6 75       		.byte	0x75
 29940 12b7 00       		.byte	0
 29941 12b8 09       		.uleb128 0x9
 29942 12b9 F9000000 		.4byte	0xf9
 29943 12bd C8120000 		.4byte	0x12c8
 29944 12c1 0A       		.uleb128 0xa
 29945 12c2 18010000 		.4byte	0x118
 29946 12c6 37       		.byte	0x37
 29947 12c7 00       		.byte	0
 29948 12c8 09       		.uleb128 0x9
 29949 12c9 25010000 		.4byte	0x125
 29950 12cd D8120000 		.4byte	0x12d8
 29951 12d1 0A       		.uleb128 0xa
 29952 12d2 18010000 		.4byte	0x118
 29953 12d6 0B       		.byte	0xb
 29954 12d7 00       		.byte	0
 29955 12d8 09       		.uleb128 0x9
 29956 12d9 97000000 		.4byte	0x97
 29957 12dd E8120000 		.4byte	0x12e8
 29958 12e1 0A       		.uleb128 0xa
 29959 12e2 18010000 		.4byte	0x118
 29960 12e6 1F       		.byte	0x1f
 29961 12e7 00       		.byte	0
 29962 12e8 09       		.uleb128 0x9
 29963 12e9 97000000 		.4byte	0x97
 29964 12ed F8120000 		.4byte	0x12f8
 29965 12f1 0A       		.uleb128 0xa
 29966 12f2 18010000 		.4byte	0x118
 29967 12f6 08       		.byte	0x8
 29968 12f7 00       		.byte	0
 29969 12f8 09       		.uleb128 0x9
 29970 12f9 97000000 		.4byte	0x97
 29971 12fd 08130000 		.4byte	0x1308
 29972 1301 0A       		.uleb128 0xa
 29973 1302 18010000 		.4byte	0x118
 29974 1306 11       		.byte	0x11
 29975 1307 00       		.byte	0
 29976 1308 22       		.uleb128 0x22
 29977 1309 6A040000 		.4byte	.LASF254
 29978 130d 01       		.byte	0x1
 29979 130e FF04     		.2byte	0x4ff
 29980 1310 00000000 		.4byte	.LFB69
 29981 1314 10150000 		.4byte	.LFE69-.LFB69
 29982 1318 01       		.uleb128 0x1
 29983 1319 9C       		.byte	0x9c
 29984 131a AA130000 		.4byte	0x13aa
 29985 131e 25       		.uleb128 0x25
 29986 131f 72070000 		.4byte	.LASF244
 29987 1323 01       		.byte	0x1
 29988 1324 FF04     		.2byte	0x4ff
 29989 1326 A3000000 		.4byte	0xa3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 649


 29990 132a 02       		.uleb128 0x2
 29991 132b 91       		.byte	0x91
 29992 132c 56       		.sleb128 -42
 29993 132d 26       		.uleb128 0x26
 29994 132e 6900     		.ascii	"i\000"
 29995 1330 01       		.byte	0x1
 29996 1331 0105     		.2byte	0x501
 29997 1333 97000000 		.4byte	0x97
 29998 1337 02       		.uleb128 0x2
 29999 1338 91       		.byte	0x91
 30000 1339 67       		.sleb128 -25
 30001 133a 26       		.uleb128 0x26
 30002 133b 6A00     		.ascii	"j\000"
 30003 133d 01       		.byte	0x1
 30004 133e 0105     		.2byte	0x501
 30005 1340 97000000 		.4byte	0x97
 30006 1344 02       		.uleb128 0x2
 30007 1345 91       		.byte	0x91
 30008 1346 66       		.sleb128 -26
 30009 1347 23       		.uleb128 0x23
 30010 1348 180D0000 		.4byte	.LASF255
 30011 134c 01       		.byte	0x1
 30012 134d 0205     		.2byte	0x502
 30013 134f 97000000 		.4byte	0x97
 30014 1353 02       		.uleb128 0x2
 30015 1354 91       		.byte	0x91
 30016 1355 62       		.sleb128 -30
 30017 1356 23       		.uleb128 0x23
 30018 1357 9B130000 		.4byte	.LASF234
 30019 135b 01       		.byte	0x1
 30020 135c 0305     		.2byte	0x503
 30021 135e EB000000 		.4byte	0xeb
 30022 1362 02       		.uleb128 0x2
 30023 1363 91       		.byte	0x91
 30024 1364 5C       		.sleb128 -36
 30025 1365 23       		.uleb128 0x23
 30026 1366 43040000 		.4byte	.LASF256
 30027 136a 01       		.byte	0x1
 30028 136b 0305     		.2byte	0x503
 30029 136d EB000000 		.4byte	0xeb
 30030 1371 02       		.uleb128 0x2
 30031 1372 91       		.byte	0x91
 30032 1373 58       		.sleb128 -40
 30033 1374 23       		.uleb128 0x23
 30034 1375 500E0000 		.4byte	.LASF239
 30035 1379 01       		.byte	0x1
 30036 137a 0505     		.2byte	0x505
 30037 137c 97000000 		.4byte	0x97
 30038 1380 02       		.uleb128 0x2
 30039 1381 91       		.byte	0x91
 30040 1382 64       		.sleb128 -28
 30041 1383 23       		.uleb128 0x23
 30042 1384 9B010000 		.4byte	.LASF240
 30043 1388 01       		.byte	0x1
 30044 1389 0605     		.2byte	0x506
 30045 138b 97000000 		.4byte	0x97
 30046 138f 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 650


 30047 1390 91       		.byte	0x91
 30048 1391 63       		.sleb128 -29
 30049 1392 1E       		.uleb128 0x1e
 30050 1393 080B0000 		.4byte	.LBB19
 30051 1397 26000000 		.4byte	.LBE19-.LBB19
 30052 139b 26       		.uleb128 0x26
 30053 139c 6900     		.ascii	"i\000"
 30054 139e 01       		.byte	0x1
 30055 139f AD05     		.2byte	0x5ad
 30056 13a1 97000000 		.4byte	0x97
 30057 13a5 02       		.uleb128 0x2
 30058 13a6 91       		.byte	0x91
 30059 13a7 65       		.sleb128 -27
 30060 13a8 00       		.byte	0
 30061 13a9 00       		.byte	0
 30062 13aa 22       		.uleb128 0x22
 30063 13ab 83090000 		.4byte	.LASF257
 30064 13af 01       		.byte	0x1
 30065 13b0 5906     		.2byte	0x659
 30066 13b2 00000000 		.4byte	.LFB70
 30067 13b6 F40D0000 		.4byte	.LFE70-.LFB70
 30068 13ba 01       		.uleb128 0x1
 30069 13bb 9C       		.byte	0x9c
 30070 13bc 39150000 		.4byte	0x1539
 30071 13c0 25       		.uleb128 0x25
 30072 13c1 72070000 		.4byte	.LASF244
 30073 13c5 01       		.byte	0x1
 30074 13c6 5906     		.2byte	0x659
 30075 13c8 A3000000 		.4byte	0xa3
 30076 13cc 03       		.uleb128 0x3
 30077 13cd 91       		.byte	0x91
 30078 13ce CE72     		.sleb128 -1714
 30079 13d0 23       		.uleb128 0x23
 30080 13d1 6C060000 		.4byte	.LASF229
 30081 13d5 01       		.byte	0x1
 30082 13d6 5C06     		.2byte	0x65c
 30083 13d8 39150000 		.4byte	0x1539
 30084 13dc 03       		.uleb128 0x3
 30085 13dd 91       		.byte	0x91
 30086 13de DC74     		.sleb128 -1444
 30087 13e0 23       		.uleb128 0x23
 30088 13e1 4C120000 		.4byte	.LASF258
 30089 13e5 01       		.byte	0x1
 30090 13e6 6306     		.2byte	0x663
 30091 13e8 A3000000 		.4byte	0xa3
 30092 13ec 02       		.uleb128 0x2
 30093 13ed 91       		.byte	0x91
 30094 13ee 62       		.sleb128 -30
 30095 13ef 23       		.uleb128 0x23
 30096 13f0 E4050000 		.4byte	.LASF259
 30097 13f4 01       		.byte	0x1
 30098 13f5 6406     		.2byte	0x664
 30099 13f7 A3000000 		.4byte	0xa3
 30100 13fb 02       		.uleb128 0x2
 30101 13fc 91       		.byte	0x91
 30102 13fd 6E       		.sleb128 -18
 30103 13fe 23       		.uleb128 0x23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 651


 30104 13ff A4090000 		.4byte	.LASF260
 30105 1403 01       		.byte	0x1
 30106 1404 6506     		.2byte	0x665
 30107 1406 A3000000 		.4byte	0xa3
 30108 140a 02       		.uleb128 0x2
 30109 140b 91       		.byte	0x91
 30110 140c 60       		.sleb128 -32
 30111 140d 23       		.uleb128 0x23
 30112 140e 23090000 		.4byte	.LASF261
 30113 1412 01       		.byte	0x1
 30114 1413 6606     		.2byte	0x666
 30115 1415 A3000000 		.4byte	0xa3
 30116 1419 02       		.uleb128 0x2
 30117 141a 91       		.byte	0x91
 30118 141b 5E       		.sleb128 -34
 30119 141c 26       		.uleb128 0x26
 30120 141d 6900     		.ascii	"i\000"
 30121 141f 01       		.byte	0x1
 30122 1420 6E06     		.2byte	0x66e
 30123 1422 A3000000 		.4byte	0xa3
 30124 1426 02       		.uleb128 0x2
 30125 1427 91       		.byte	0x91
 30126 1428 6C       		.sleb128 -20
 30127 1429 26       		.uleb128 0x26
 30128 142a 6A00     		.ascii	"j\000"
 30129 142c 01       		.byte	0x1
 30130 142d 6E06     		.2byte	0x66e
 30131 142f A3000000 		.4byte	0xa3
 30132 1433 02       		.uleb128 0x2
 30133 1434 91       		.byte	0x91
 30134 1435 6A       		.sleb128 -22
 30135 1436 26       		.uleb128 0x26
 30136 1437 6B00     		.ascii	"k\000"
 30137 1439 01       		.byte	0x1
 30138 143a 6E06     		.2byte	0x66e
 30139 143c A3000000 		.4byte	0xa3
 30140 1440 02       		.uleb128 0x2
 30141 1441 91       		.byte	0x91
 30142 1442 68       		.sleb128 -24
 30143 1443 26       		.uleb128 0x26
 30144 1444 6800     		.ascii	"h\000"
 30145 1446 01       		.byte	0x1
 30146 1447 6E06     		.2byte	0x66e
 30147 1449 A3000000 		.4byte	0xa3
 30148 144d 02       		.uleb128 0x2
 30149 144e 91       		.byte	0x91
 30150 144f 66       		.sleb128 -26
 30151 1450 23       		.uleb128 0x23
 30152 1451 D9050000 		.4byte	.LASF262
 30153 1455 01       		.byte	0x1
 30154 1456 6F06     		.2byte	0x66f
 30155 1458 A3000000 		.4byte	0xa3
 30156 145c 02       		.uleb128 0x2
 30157 145d 91       		.byte	0x91
 30158 145e 5C       		.sleb128 -36
 30159 145f 23       		.uleb128 0x23
 30160 1460 650E0000 		.4byte	.LASF263
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 652


 30161 1464 01       		.byte	0x1
 30162 1465 7206     		.2byte	0x672
 30163 1467 30010000 		.4byte	0x130
 30164 146b 03       		.uleb128 0x3
 30165 146c 91       		.byte	0x91
 30166 146d C074     		.sleb128 -1472
 30167 146f 23       		.uleb128 0x23
 30168 1470 13120000 		.4byte	.LASF264
 30169 1474 01       		.byte	0x1
 30170 1475 7306     		.2byte	0x673
 30171 1477 4A150000 		.4byte	0x154a
 30172 147b 03       		.uleb128 0x3
 30173 147c 91       		.byte	0x91
 30174 147d B474     		.sleb128 -1484
 30175 147f 23       		.uleb128 0x23
 30176 1480 00080000 		.4byte	.LASF265
 30177 1484 01       		.byte	0x1
 30178 1485 7406     		.2byte	0x674
 30179 1487 5A150000 		.4byte	0x155a
 30180 148b 03       		.uleb128 0x3
 30181 148c 91       		.byte	0x91
 30182 148d A074     		.sleb128 -1504
 30183 148f 23       		.uleb128 0x23
 30184 1490 59000000 		.4byte	.LASF266
 30185 1494 01       		.byte	0x1
 30186 1495 7506     		.2byte	0x675
 30187 1497 6A150000 		.4byte	0x156a
 30188 149b 03       		.uleb128 0x3
 30189 149c 91       		.byte	0x91
 30190 149d 9074     		.sleb128 -1520
 30191 149f 23       		.uleb128 0x23
 30192 14a0 420F0000 		.4byte	.LASF267
 30193 14a4 01       		.byte	0x1
 30194 14a5 7606     		.2byte	0x676
 30195 14a7 7A150000 		.4byte	0x157a
 30196 14ab 03       		.uleb128 0x3
 30197 14ac 91       		.byte	0x91
 30198 14ad E473     		.sleb128 -1564
 30199 14af 23       		.uleb128 0x23
 30200 14b0 A1020000 		.4byte	.LASF268
 30201 14b4 01       		.byte	0x1
 30202 14b5 7706     		.2byte	0x677
 30203 14b7 30010000 		.4byte	0x130
 30204 14bb 03       		.uleb128 0x3
 30205 14bc 91       		.byte	0x91
 30206 14bd C873     		.sleb128 -1592
 30207 14bf 23       		.uleb128 0x23
 30208 14c0 0C020000 		.4byte	.LASF269
 30209 14c4 01       		.byte	0x1
 30210 14c5 7A06     		.2byte	0x67a
 30211 14c7 97000000 		.4byte	0x97
 30212 14cb 02       		.uleb128 0x2
 30213 14cc 91       		.byte	0x91
 30214 14cd 5B       		.sleb128 -37
 30215 14ce 23       		.uleb128 0x23
 30216 14cf 6A050000 		.4byte	.LASF270
 30217 14d3 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 653


 30218 14d4 7B06     		.2byte	0x67b
 30219 14d6 97000000 		.4byte	0x97
 30220 14da 02       		.uleb128 0x2
 30221 14db 91       		.byte	0x91
 30222 14dc 5A       		.sleb128 -38
 30223 14dd 23       		.uleb128 0x23
 30224 14de BB110000 		.4byte	.LASF271
 30225 14e2 01       		.byte	0x1
 30226 14e3 7C06     		.2byte	0x67c
 30227 14e5 97000000 		.4byte	0x97
 30228 14e9 02       		.uleb128 0x2
 30229 14ea 91       		.byte	0x91
 30230 14eb 59       		.sleb128 -39
 30231 14ec 23       		.uleb128 0x23
 30232 14ed 3A120000 		.4byte	.LASF272
 30233 14f1 01       		.byte	0x1
 30234 14f2 7D06     		.2byte	0x67d
 30235 14f4 97000000 		.4byte	0x97
 30236 14f8 02       		.uleb128 0x2
 30237 14f9 91       		.byte	0x91
 30238 14fa 58       		.sleb128 -40
 30239 14fb 23       		.uleb128 0x23
 30240 14fc 78050000 		.4byte	.LASF273
 30241 1500 01       		.byte	0x1
 30242 1501 7E06     		.2byte	0x67e
 30243 1503 97000000 		.4byte	0x97
 30244 1507 02       		.uleb128 0x2
 30245 1508 91       		.byte	0x91
 30246 1509 57       		.sleb128 -41
 30247 150a 23       		.uleb128 0x23
 30248 150b 5A010000 		.4byte	.LASF274
 30249 150f 01       		.byte	0x1
 30250 1510 7F06     		.2byte	0x67f
 30251 1512 97000000 		.4byte	0x97
 30252 1516 02       		.uleb128 0x2
 30253 1517 91       		.byte	0x91
 30254 1518 65       		.sleb128 -27
 30255 1519 23       		.uleb128 0x23
 30256 151a F0140000 		.4byte	.LASF247
 30257 151e 01       		.byte	0x1
 30258 151f 8106     		.2byte	0x681
 30259 1521 A8120000 		.4byte	0x12a8
 30260 1525 03       		.uleb128 0x3
 30261 1526 91       		.byte	0x91
 30262 1527 D072     		.sleb128 -1712
 30263 1529 23       		.uleb128 0x23
 30264 152a 57040000 		.4byte	.LASF275
 30265 152e 01       		.byte	0x1
 30266 152f 8206     		.2byte	0x682
 30267 1531 97000000 		.4byte	0x97
 30268 1535 02       		.uleb128 0x2
 30269 1536 91       		.byte	0x91
 30270 1537 56       		.sleb128 -42
 30271 1538 00       		.byte	0
 30272 1539 09       		.uleb128 0x9
 30273 153a 97000000 		.4byte	0x97
 30274 153e 4A150000 		.4byte	0x154a
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 654


 30275 1542 24       		.uleb128 0x24
 30276 1543 18010000 		.4byte	0x118
 30277 1547 7805     		.2byte	0x578
 30278 1549 00       		.byte	0
 30279 154a 09       		.uleb128 0x9
 30280 154b F9000000 		.4byte	0xf9
 30281 154f 5A150000 		.4byte	0x155a
 30282 1553 0A       		.uleb128 0xa
 30283 1554 18010000 		.4byte	0x118
 30284 1558 0A       		.byte	0xa
 30285 1559 00       		.byte	0
 30286 155a 09       		.uleb128 0x9
 30287 155b F9000000 		.4byte	0xf9
 30288 155f 6A150000 		.4byte	0x156a
 30289 1563 0A       		.uleb128 0xa
 30290 1564 18010000 		.4byte	0x118
 30291 1568 13       		.byte	0x13
 30292 1569 00       		.byte	0
 30293 156a 09       		.uleb128 0x9
 30294 156b F9000000 		.4byte	0xf9
 30295 156f 7A150000 		.4byte	0x157a
 30296 1573 0A       		.uleb128 0xa
 30297 1574 18010000 		.4byte	0x118
 30298 1578 0F       		.byte	0xf
 30299 1579 00       		.byte	0
 30300 157a 09       		.uleb128 0x9
 30301 157b F9000000 		.4byte	0xf9
 30302 157f 8A150000 		.4byte	0x158a
 30303 1583 0A       		.uleb128 0xa
 30304 1584 18010000 		.4byte	0x118
 30305 1588 29       		.byte	0x29
 30306 1589 00       		.byte	0
 30307 158a 27       		.uleb128 0x27
 30308 158b A1030000 		.4byte	.LASF312
 30309 158f 01       		.byte	0x1
 30310 1590 4807     		.2byte	0x748
 30311 1592 00000000 		.4byte	.LFB71
 30312 1596 90000000 		.4byte	.LFE71-.LFB71
 30313 159a 01       		.uleb128 0x1
 30314 159b 9C       		.byte	0x9c
 30315 159c BB150000 		.4byte	0x15bb
 30316 15a0 26       		.uleb128 0x26
 30317 15a1 6900     		.ascii	"i\000"
 30318 15a3 01       		.byte	0x1
 30319 15a4 4A07     		.2byte	0x74a
 30320 15a6 97000000 		.4byte	0x97
 30321 15aa 02       		.uleb128 0x2
 30322 15ab 91       		.byte	0x91
 30323 15ac 6F       		.sleb128 -17
 30324 15ad 26       		.uleb128 0x26
 30325 15ae 6A00     		.ascii	"j\000"
 30326 15b0 01       		.byte	0x1
 30327 15b1 4A07     		.2byte	0x74a
 30328 15b3 97000000 		.4byte	0x97
 30329 15b7 02       		.uleb128 0x2
 30330 15b8 91       		.byte	0x91
 30331 15b9 6E       		.sleb128 -18
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 655


 30332 15ba 00       		.byte	0
 30333 15bb 22       		.uleb128 0x22
 30334 15bc 7A010000 		.4byte	.LASF276
 30335 15c0 01       		.byte	0x1
 30336 15c1 5B07     		.2byte	0x75b
 30337 15c3 00000000 		.4byte	.LFB72
 30338 15c7 60210000 		.4byte	.LFE72-.LFB72
 30339 15cb 01       		.uleb128 0x1
 30340 15cc 9C       		.byte	0x9c
 30341 15cd 74160000 		.4byte	0x1674
 30342 15d1 25       		.uleb128 0x25
 30343 15d2 6F0E0000 		.4byte	.LASF277
 30344 15d6 01       		.byte	0x1
 30345 15d7 5B07     		.2byte	0x75b
 30346 15d9 1F010000 		.4byte	0x11f
 30347 15dd 03       		.uleb128 0x3
 30348 15de 91       		.byte	0x91
 30349 15df D47E     		.sleb128 -172
 30350 15e1 26       		.uleb128 0x26
 30351 15e2 6900     		.ascii	"i\000"
 30352 15e4 01       		.byte	0x1
 30353 15e5 5D07     		.2byte	0x75d
 30354 15e7 73000000 		.4byte	0x73
 30355 15eb 02       		.uleb128 0x2
 30356 15ec 91       		.byte	0x91
 30357 15ed 54       		.sleb128 -44
 30358 15ee 23       		.uleb128 0x23
 30359 15ef D9030000 		.4byte	.LASF246
 30360 15f3 01       		.byte	0x1
 30361 15f4 5F07     		.2byte	0x75f
 30362 15f6 72120000 		.4byte	0x1272
 30363 15fa 02       		.uleb128 0x2
 30364 15fb 91       		.byte	0x91
 30365 15fc 48       		.sleb128 -56
 30366 15fd 1E       		.uleb128 0x1e
 30367 15fe 1C000000 		.4byte	.LBB20
 30368 1602 00210000 		.4byte	.LBE20-.LBB20
 30369 1606 26       		.uleb128 0x26
 30370 1607 73747200 		.ascii	"str\000"
 30371 160b 01       		.byte	0x1
 30372 160c 6207     		.2byte	0x762
 30373 160e 74160000 		.4byte	0x1674
 30374 1612 03       		.uleb128 0x3
 30375 1613 91       		.byte	0x91
 30376 1614 D87E     		.sleb128 -168
 30377 1616 26       		.uleb128 0x26
 30378 1617 6A00     		.ascii	"j\000"
 30379 1619 01       		.byte	0x1
 30380 161a 1B09     		.2byte	0x91b
 30381 161c 73000000 		.4byte	0x73
 30382 1620 02       		.uleb128 0x2
 30383 1621 91       		.byte	0x91
 30384 1622 4C       		.sleb128 -52
 30385 1623 1E       		.uleb128 0x1e
 30386 1624 1C030000 		.4byte	.LBB21
 30387 1628 CE130000 		.4byte	.LBE21-.LBB21
 30388 162c 26       		.uleb128 0x26
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 656


 30389 162d 6B00     		.ascii	"k\000"
 30390 162f 01       		.byte	0x1
 30391 1630 9607     		.2byte	0x796
 30392 1632 97000000 		.4byte	0x97
 30393 1636 02       		.uleb128 0x2
 30394 1637 91       		.byte	0x91
 30395 1638 53       		.sleb128 -45
 30396 1639 1E       		.uleb128 0x1e
 30397 163a 6C030000 		.4byte	.LBB22
 30398 163e 62130000 		.4byte	.LBE22-.LBB22
 30399 1642 23       		.uleb128 0x23
 30400 1643 500E0000 		.4byte	.LASF239
 30401 1647 01       		.byte	0x1
 30402 1648 9807     		.2byte	0x798
 30403 164a 97000000 		.4byte	0x97
 30404 164e 02       		.uleb128 0x2
 30405 164f 91       		.byte	0x91
 30406 1650 47       		.sleb128 -57
 30407 1651 26       		.uleb128 0x26
 30408 1652 4D4F5400 		.ascii	"MOT\000"
 30409 1656 01       		.byte	0x1
 30410 1657 9907     		.2byte	0x799
 30411 1659 84160000 		.4byte	0x1684
 30412 165d 02       		.uleb128 0x2
 30413 165e 91       		.byte	0x91
 30414 165f 40       		.sleb128 -64
 30415 1660 23       		.uleb128 0x23
 30416 1661 58140000 		.4byte	.LASF278
 30417 1665 01       		.byte	0x1
 30418 1666 9A07     		.2byte	0x79a
 30419 1668 97000000 		.4byte	0x97
 30420 166c 03       		.uleb128 0x3
 30421 166d 91       		.byte	0x91
 30422 166e BF7F     		.sleb128 -65
 30423 1670 00       		.byte	0
 30424 1671 00       		.byte	0
 30425 1672 00       		.byte	0
 30426 1673 00       		.byte	0
 30427 1674 09       		.uleb128 0x9
 30428 1675 F9000000 		.4byte	0xf9
 30429 1679 84160000 		.4byte	0x1684
 30430 167d 0A       		.uleb128 0xa
 30431 167e 18010000 		.4byte	0x118
 30432 1682 63       		.byte	0x63
 30433 1683 00       		.byte	0
 30434 1684 07       		.uleb128 0x7
 30435 1685 04       		.byte	0x4
 30436 1686 D4050000 		.4byte	0x5d4
 30437 168a 22       		.uleb128 0x22
 30438 168b 750F0000 		.4byte	.LASF279
 30439 168f 01       		.byte	0x1
 30440 1690 4509     		.2byte	0x945
 30441 1692 00000000 		.4byte	.LFB73
 30442 1696 BC030000 		.4byte	.LFE73-.LFB73
 30443 169a 01       		.uleb128 0x1
 30444 169b 9C       		.byte	0x9c
 30445 169c 0A170000 		.4byte	0x170a
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 657


 30446 16a0 25       		.uleb128 0x25
 30447 16a1 6F0E0000 		.4byte	.LASF277
 30448 16a5 01       		.byte	0x1
 30449 16a6 4509     		.2byte	0x945
 30450 16a8 1F010000 		.4byte	0x11f
 30451 16ac 03       		.uleb128 0x3
 30452 16ad 91       		.byte	0x91
 30453 16ae EC7E     		.sleb128 -148
 30454 16b0 26       		.uleb128 0x26
 30455 16b1 73747200 		.ascii	"str\000"
 30456 16b5 01       		.byte	0x1
 30457 16b6 4709     		.2byte	0x947
 30458 16b8 74160000 		.4byte	0x1674
 30459 16bc 03       		.uleb128 0x3
 30460 16bd 91       		.byte	0x91
 30461 16be F07E     		.sleb128 -144
 30462 16c0 26       		.uleb128 0x26
 30463 16c1 6900     		.ascii	"i\000"
 30464 16c3 01       		.byte	0x1
 30465 16c4 4809     		.2byte	0x948
 30466 16c6 73000000 		.4byte	0x73
 30467 16ca 02       		.uleb128 0x2
 30468 16cb 91       		.byte	0x91
 30469 16cc 64       		.sleb128 -28
 30470 16cd 23       		.uleb128 0x23
 30471 16ce 07050000 		.4byte	.LASF280
 30472 16d2 01       		.byte	0x1
 30473 16d3 4909     		.2byte	0x949
 30474 16d5 73000000 		.4byte	0x73
 30475 16d9 02       		.uleb128 0x2
 30476 16da 91       		.byte	0x91
 30477 16db 54       		.sleb128 -44
 30478 16dc 23       		.uleb128 0x23
 30479 16dd D9030000 		.4byte	.LASF246
 30480 16e1 01       		.byte	0x1
 30481 16e2 4B09     		.2byte	0x94b
 30482 16e4 72120000 		.4byte	0x1272
 30483 16e8 02       		.uleb128 0x2
 30484 16e9 91       		.byte	0x91
 30485 16ea 60       		.sleb128 -32
 30486 16eb 26       		.uleb128 0x26
 30487 16ec 4D4F5400 		.ascii	"MOT\000"
 30488 16f0 01       		.byte	0x1
 30489 16f1 4C09     		.2byte	0x94c
 30490 16f3 84160000 		.4byte	0x1684
 30491 16f7 02       		.uleb128 0x2
 30492 16f8 91       		.byte	0x91
 30493 16f9 5C       		.sleb128 -36
 30494 16fa 23       		.uleb128 0x23
 30495 16fb 58140000 		.4byte	.LASF278
 30496 16ff 01       		.byte	0x1
 30497 1700 4D09     		.2byte	0x94d
 30498 1702 97000000 		.4byte	0x97
 30499 1706 02       		.uleb128 0x2
 30500 1707 91       		.byte	0x91
 30501 1708 5B       		.sleb128 -37
 30502 1709 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 658


 30503 170a 22       		.uleb128 0x22
 30504 170b DD0F0000 		.4byte	.LASF281
 30505 170f 01       		.byte	0x1
 30506 1710 8909     		.2byte	0x989
 30507 1712 00000000 		.4byte	.LFB74
 30508 1716 7C120000 		.4byte	.LFE74-.LFB74
 30509 171a 01       		.uleb128 0x1
 30510 171b 9C       		.byte	0x9c
 30511 171c AB170000 		.4byte	0x17ab
 30512 1720 25       		.uleb128 0x25
 30513 1721 6F0E0000 		.4byte	.LASF277
 30514 1725 01       		.byte	0x1
 30515 1726 8909     		.2byte	0x989
 30516 1728 1F010000 		.4byte	0x11f
 30517 172c 03       		.uleb128 0x3
 30518 172d 91       		.byte	0x91
 30519 172e D47E     		.sleb128 -172
 30520 1730 26       		.uleb128 0x26
 30521 1731 73747200 		.ascii	"str\000"
 30522 1735 01       		.byte	0x1
 30523 1736 8B09     		.2byte	0x98b
 30524 1738 74160000 		.4byte	0x1674
 30525 173c 03       		.uleb128 0x3
 30526 173d 91       		.byte	0x91
 30527 173e DC7E     		.sleb128 -164
 30528 1740 26       		.uleb128 0x26
 30529 1741 6900     		.ascii	"i\000"
 30530 1743 01       		.byte	0x1
 30531 1744 8C09     		.2byte	0x98c
 30532 1746 73000000 		.4byte	0x73
 30533 174a 02       		.uleb128 0x2
 30534 174b 91       		.byte	0x91
 30535 174c 54       		.sleb128 -44
 30536 174d 23       		.uleb128 0x23
 30537 174e D9030000 		.4byte	.LASF246
 30538 1752 01       		.byte	0x1
 30539 1753 9009     		.2byte	0x990
 30540 1755 72120000 		.4byte	0x1272
 30541 1759 02       		.uleb128 0x2
 30542 175a 91       		.byte	0x91
 30543 175b 4C       		.sleb128 -52
 30544 175c 1E       		.uleb128 0x1e
 30545 175d 08010000 		.4byte	.LBB23
 30546 1761 D40C0000 		.4byte	.LBE23-.LBB23
 30547 1765 26       		.uleb128 0x26
 30548 1766 6B00     		.ascii	"k\000"
 30549 1768 01       		.byte	0x1
 30550 1769 A509     		.2byte	0x9a5
 30551 176b 97000000 		.4byte	0x97
 30552 176f 02       		.uleb128 0x2
 30553 1770 91       		.byte	0x91
 30554 1771 53       		.sleb128 -45
 30555 1772 1E       		.uleb128 0x1e
 30556 1773 12010000 		.4byte	.LBB24
 30557 1777 AE0C0000 		.4byte	.LBE24-.LBB24
 30558 177b 23       		.uleb128 0x23
 30559 177c 500E0000 		.4byte	.LASF239
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 659


 30560 1780 01       		.byte	0x1
 30561 1781 A709     		.2byte	0x9a7
 30562 1783 97000000 		.4byte	0x97
 30563 1787 02       		.uleb128 0x2
 30564 1788 91       		.byte	0x91
 30565 1789 4B       		.sleb128 -53
 30566 178a 26       		.uleb128 0x26
 30567 178b 4D4F5400 		.ascii	"MOT\000"
 30568 178f 01       		.byte	0x1
 30569 1790 A809     		.2byte	0x9a8
 30570 1792 84160000 		.4byte	0x1684
 30571 1796 02       		.uleb128 0x2
 30572 1797 91       		.byte	0x91
 30573 1798 44       		.sleb128 -60
 30574 1799 23       		.uleb128 0x23
 30575 179a 58140000 		.4byte	.LASF278
 30576 179e 01       		.byte	0x1
 30577 179f A909     		.2byte	0x9a9
 30578 17a1 97000000 		.4byte	0x97
 30579 17a5 02       		.uleb128 0x2
 30580 17a6 91       		.byte	0x91
 30581 17a7 43       		.sleb128 -61
 30582 17a8 00       		.byte	0
 30583 17a9 00       		.byte	0
 30584 17aa 00       		.byte	0
 30585 17ab 22       		.uleb128 0x22
 30586 17ac 0E0C0000 		.4byte	.LASF282
 30587 17b0 01       		.byte	0x1
 30588 17b1 910A     		.2byte	0xa91
 30589 17b3 00000000 		.4byte	.LFB75
 30590 17b7 C8000000 		.4byte	.LFE75-.LFB75
 30591 17bb 01       		.uleb128 0x1
 30592 17bc 9C       		.byte	0x9c
 30593 17bd EF170000 		.4byte	0x17ef
 30594 17c1 25       		.uleb128 0x25
 30595 17c2 6F0E0000 		.4byte	.LASF277
 30596 17c6 01       		.byte	0x1
 30597 17c7 910A     		.2byte	0xa91
 30598 17c9 1F010000 		.4byte	0x11f
 30599 17cd 03       		.uleb128 0x3
 30600 17ce 91       		.byte	0x91
 30601 17cf 847F     		.sleb128 -124
 30602 17d1 26       		.uleb128 0x26
 30603 17d2 73747200 		.ascii	"str\000"
 30604 17d6 01       		.byte	0x1
 30605 17d7 930A     		.2byte	0xa93
 30606 17d9 74160000 		.4byte	0x1674
 30607 17dd 03       		.uleb128 0x3
 30608 17de 91       		.byte	0x91
 30609 17df 887F     		.sleb128 -120
 30610 17e1 26       		.uleb128 0x26
 30611 17e2 6900     		.ascii	"i\000"
 30612 17e4 01       		.byte	0x1
 30613 17e5 940A     		.2byte	0xa94
 30614 17e7 73000000 		.4byte	0x73
 30615 17eb 02       		.uleb128 0x2
 30616 17ec 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 660


 30617 17ed 6C       		.sleb128 -20
 30618 17ee 00       		.byte	0
 30619 17ef 22       		.uleb128 0x22
 30620 17f0 7B0E0000 		.4byte	.LASF283
 30621 17f4 01       		.byte	0x1
 30622 17f5 A90A     		.2byte	0xaa9
 30623 17f7 00000000 		.4byte	.LFB76
 30624 17fb 30010000 		.4byte	.LFE76-.LFB76
 30625 17ff 01       		.uleb128 0x1
 30626 1800 9C       		.byte	0x9c
 30627 1801 33180000 		.4byte	0x1833
 30628 1805 25       		.uleb128 0x25
 30629 1806 6F0E0000 		.4byte	.LASF277
 30630 180a 01       		.byte	0x1
 30631 180b A90A     		.2byte	0xaa9
 30632 180d 1F010000 		.4byte	0x11f
 30633 1811 03       		.uleb128 0x3
 30634 1812 91       		.byte	0x91
 30635 1813 847F     		.sleb128 -124
 30636 1815 26       		.uleb128 0x26
 30637 1816 73747200 		.ascii	"str\000"
 30638 181a 01       		.byte	0x1
 30639 181b AB0A     		.2byte	0xaab
 30640 181d 74160000 		.4byte	0x1674
 30641 1821 03       		.uleb128 0x3
 30642 1822 91       		.byte	0x91
 30643 1823 887F     		.sleb128 -120
 30644 1825 26       		.uleb128 0x26
 30645 1826 6900     		.ascii	"i\000"
 30646 1828 01       		.byte	0x1
 30647 1829 AC0A     		.2byte	0xaac
 30648 182b 73000000 		.4byte	0x73
 30649 182f 02       		.uleb128 0x2
 30650 1830 91       		.byte	0x91
 30651 1831 6C       		.sleb128 -20
 30652 1832 00       		.byte	0
 30653 1833 28       		.uleb128 0x28
 30654 1834 0F100000 		.4byte	.LASF284
 30655 1838 01       		.byte	0x1
 30656 1839 CF0A     		.2byte	0xacf
 30657 183b 00000000 		.4byte	.LFB77
 30658 183f 28000000 		.4byte	.LFE77-.LFB77
 30659 1843 01       		.uleb128 0x1
 30660 1844 9C       		.byte	0x9c
 30661 1845 59180000 		.4byte	0x1859
 30662 1849 25       		.uleb128 0x25
 30663 184a 6F0E0000 		.4byte	.LASF277
 30664 184e 01       		.byte	0x1
 30665 184f CF0A     		.2byte	0xacf
 30666 1851 1F010000 		.4byte	0x11f
 30667 1855 02       		.uleb128 0x2
 30668 1856 91       		.byte	0x91
 30669 1857 6C       		.sleb128 -20
 30670 1858 00       		.byte	0
 30671 1859 22       		.uleb128 0x22
 30672 185a 08040000 		.4byte	.LASF285
 30673 185e 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 661


 30674 185f DA0A     		.2byte	0xada
 30675 1861 00000000 		.4byte	.LFB78
 30676 1865 F0000000 		.4byte	.LFE78-.LFB78
 30677 1869 01       		.uleb128 0x1
 30678 186a 9C       		.byte	0x9c
 30679 186b C8180000 		.4byte	0x18c8
 30680 186f 25       		.uleb128 0x25
 30681 1870 6F0E0000 		.4byte	.LASF277
 30682 1874 01       		.byte	0x1
 30683 1875 DA0A     		.2byte	0xada
 30684 1877 1F010000 		.4byte	0x11f
 30685 187b 03       		.uleb128 0x3
 30686 187c 91       		.byte	0x91
 30687 187d FC7E     		.sleb128 -132
 30688 187f 23       		.uleb128 0x23
 30689 1880 91020000 		.4byte	.LASF286
 30690 1884 01       		.byte	0x1
 30691 1885 DC0A     		.2byte	0xadc
 30692 1887 74160000 		.4byte	0x1674
 30693 188b 03       		.uleb128 0x3
 30694 188c 91       		.byte	0x91
 30695 188d 847F     		.sleb128 -124
 30696 188f 23       		.uleb128 0x23
 30697 1890 35020000 		.4byte	.LASF287
 30698 1894 01       		.byte	0x1
 30699 1895 DD0A     		.2byte	0xadd
 30700 1897 A3000000 		.4byte	0xa3
 30701 189b 02       		.uleb128 0x2
 30702 189c 91       		.byte	0x91
 30703 189d 6E       		.sleb128 -18
 30704 189e 23       		.uleb128 0x23
 30705 189f 1A010000 		.4byte	.LASF288
 30706 18a3 01       		.byte	0x1
 30707 18a4 DE0A     		.2byte	0xade
 30708 18a6 EB000000 		.4byte	0xeb
 30709 18aa 05       		.uleb128 0x5
 30710 18ab 03       		.byte	0x3
 30711 18ac 00000000 		.4byte	h_time.11219
 30712 18b0 1E       		.uleb128 0x1e
 30713 18b1 26000000 		.4byte	.LBB25
 30714 18b5 A4000000 		.4byte	.LBE25-.LBB25
 30715 18b9 26       		.uleb128 0x26
 30716 18ba 6900     		.ascii	"i\000"
 30717 18bc 01       		.byte	0x1
 30718 18bd E30A     		.2byte	0xae3
 30719 18bf 73000000 		.4byte	0x73
 30720 18c3 02       		.uleb128 0x2
 30721 18c4 91       		.byte	0x91
 30722 18c5 68       		.sleb128 -24
 30723 18c6 00       		.byte	0
 30724 18c7 00       		.byte	0
 30725 18c8 22       		.uleb128 0x22
 30726 18c9 7A150000 		.4byte	.LASF289
 30727 18cd 01       		.byte	0x1
 30728 18ce FB0A     		.2byte	0xafb
 30729 18d0 00000000 		.4byte	.LFB79
 30730 18d4 74030000 		.4byte	.LFE79-.LFB79
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 662


 30731 18d8 01       		.uleb128 0x1
 30732 18d9 9C       		.byte	0x9c
 30733 18da 0C190000 		.4byte	0x190c
 30734 18de 25       		.uleb128 0x25
 30735 18df 6F0E0000 		.4byte	.LASF277
 30736 18e3 01       		.byte	0x1
 30737 18e4 FB0A     		.2byte	0xafb
 30738 18e6 1F010000 		.4byte	0x11f
 30739 18ea 03       		.uleb128 0x3
 30740 18eb 91       		.byte	0x91
 30741 18ec AC7D     		.sleb128 -340
 30742 18ee 26       		.uleb128 0x26
 30743 18ef 73747200 		.ascii	"str\000"
 30744 18f3 01       		.byte	0x1
 30745 18f4 FD0A     		.2byte	0xafd
 30746 18f6 0C190000 		.4byte	0x190c
 30747 18fa 03       		.uleb128 0x3
 30748 18fb 91       		.byte	0x91
 30749 18fc B07D     		.sleb128 -336
 30750 18fe 26       		.uleb128 0x26
 30751 18ff 6900     		.ascii	"i\000"
 30752 1901 01       		.byte	0x1
 30753 1902 FE0A     		.2byte	0xafe
 30754 1904 73000000 		.4byte	0x73
 30755 1908 02       		.uleb128 0x2
 30756 1909 91       		.byte	0x91
 30757 190a 5C       		.sleb128 -36
 30758 190b 00       		.byte	0
 30759 190c 09       		.uleb128 0x9
 30760 190d F9000000 		.4byte	0xf9
 30761 1911 1D190000 		.4byte	0x191d
 30762 1915 24       		.uleb128 0x24
 30763 1916 18010000 		.4byte	0x118
 30764 191a 2B01     		.2byte	0x12b
 30765 191c 00       		.byte	0
 30766 191d 22       		.uleb128 0x22
 30767 191e A00F0000 		.4byte	.LASF290
 30768 1922 01       		.byte	0x1
 30769 1923 260B     		.2byte	0xb26
 30770 1925 00000000 		.4byte	.LFB80
 30771 1929 84000000 		.4byte	.LFE80-.LFB80
 30772 192d 01       		.uleb128 0x1
 30773 192e 9C       		.byte	0x9c
 30774 192f 70190000 		.4byte	0x1970
 30775 1933 25       		.uleb128 0x25
 30776 1934 6C060000 		.4byte	.LASF229
 30777 1938 01       		.byte	0x1
 30778 1939 260B     		.2byte	0xb26
 30779 193b 67100000 		.4byte	0x1067
 30780 193f 02       		.uleb128 0x2
 30781 1940 91       		.byte	0x91
 30782 1941 6C       		.sleb128 -20
 30783 1942 25       		.uleb128 0x25
 30784 1943 ED0B0000 		.4byte	.LASF230
 30785 1947 01       		.byte	0x1
 30786 1948 260B     		.2byte	0xb26
 30787 194a A3000000 		.4byte	0xa3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 663


 30788 194e 02       		.uleb128 0x2
 30789 194f 91       		.byte	0x91
 30790 1950 6A       		.sleb128 -22
 30791 1951 25       		.uleb128 0x25
 30792 1952 2D100000 		.4byte	.LASF291
 30793 1956 01       		.byte	0x1
 30794 1957 260B     		.2byte	0xb26
 30795 1959 97000000 		.4byte	0x97
 30796 195d 02       		.uleb128 0x2
 30797 195e 91       		.byte	0x91
 30798 195f 69       		.sleb128 -23
 30799 1960 23       		.uleb128 0x23
 30800 1961 72070000 		.4byte	.LASF244
 30801 1965 01       		.byte	0x1
 30802 1966 280B     		.2byte	0xb28
 30803 1968 A3000000 		.4byte	0xa3
 30804 196c 02       		.uleb128 0x2
 30805 196d 91       		.byte	0x91
 30806 196e 76       		.sleb128 -10
 30807 196f 00       		.byte	0
 30808 1970 22       		.uleb128 0x22
 30809 1971 91060000 		.4byte	.LASF292
 30810 1975 01       		.byte	0x1
 30811 1976 420B     		.2byte	0xb42
 30812 1978 00000000 		.4byte	.LFB81
 30813 197c 88000000 		.4byte	.LFE81-.LFB81
 30814 1980 01       		.uleb128 0x1
 30815 1981 9C       		.byte	0x9c
 30816 1982 B4190000 		.4byte	0x19b4
 30817 1986 25       		.uleb128 0x25
 30818 1987 6C060000 		.4byte	.LASF229
 30819 198b 01       		.byte	0x1
 30820 198c 420B     		.2byte	0xb42
 30821 198e 67100000 		.4byte	0x1067
 30822 1992 02       		.uleb128 0x2
 30823 1993 91       		.byte	0x91
 30824 1994 6C       		.sleb128 -20
 30825 1995 25       		.uleb128 0x25
 30826 1996 ED0B0000 		.4byte	.LASF230
 30827 199a 01       		.byte	0x1
 30828 199b 420B     		.2byte	0xb42
 30829 199d A3000000 		.4byte	0xa3
 30830 19a1 02       		.uleb128 0x2
 30831 19a2 91       		.byte	0x91
 30832 19a3 6A       		.sleb128 -22
 30833 19a4 23       		.uleb128 0x23
 30834 19a5 72070000 		.4byte	.LASF244
 30835 19a9 01       		.byte	0x1
 30836 19aa 440B     		.2byte	0xb44
 30837 19ac A3000000 		.4byte	0xa3
 30838 19b0 02       		.uleb128 0x2
 30839 19b1 91       		.byte	0x91
 30840 19b2 76       		.sleb128 -10
 30841 19b3 00       		.byte	0
 30842 19b4 22       		.uleb128 0x22
 30843 19b5 790C0000 		.4byte	.LASF293
 30844 19b9 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 664


 30845 19ba 5E0B     		.2byte	0xb5e
 30846 19bc 00000000 		.4byte	.LFB82
 30847 19c0 A0000000 		.4byte	.LFE82-.LFB82
 30848 19c4 01       		.uleb128 0x1
 30849 19c5 9C       		.byte	0x9c
 30850 19c6 071A0000 		.4byte	0x1a07
 30851 19ca 25       		.uleb128 0x25
 30852 19cb 6C060000 		.4byte	.LASF229
 30853 19cf 01       		.byte	0x1
 30854 19d0 5E0B     		.2byte	0xb5e
 30855 19d2 67100000 		.4byte	0x1067
 30856 19d6 02       		.uleb128 0x2
 30857 19d7 91       		.byte	0x91
 30858 19d8 74       		.sleb128 -12
 30859 19d9 25       		.uleb128 0x25
 30860 19da ED0B0000 		.4byte	.LASF230
 30861 19de 01       		.byte	0x1
 30862 19df 5E0B     		.2byte	0xb5e
 30863 19e1 A3000000 		.4byte	0xa3
 30864 19e5 02       		.uleb128 0x2
 30865 19e6 91       		.byte	0x91
 30866 19e7 72       		.sleb128 -14
 30867 19e8 29       		.uleb128 0x29
 30868 19e9 696400   		.ascii	"id\000"
 30869 19ec 01       		.byte	0x1
 30870 19ed 5E0B     		.2byte	0xb5e
 30871 19ef 97000000 		.4byte	0x97
 30872 19f3 02       		.uleb128 0x2
 30873 19f4 91       		.byte	0x91
 30874 19f5 71       		.sleb128 -15
 30875 19f6 26       		.uleb128 0x26
 30876 19f7 6900     		.ascii	"i\000"
 30877 19f9 01       		.byte	0x1
 30878 19fa 600B     		.2byte	0xb60
 30879 19fc A3000000 		.4byte	0xa3
 30880 1a00 05       		.uleb128 0x5
 30881 1a01 03       		.byte	0x3
 30882 1a02 04000000 		.4byte	i.11260
 30883 1a06 00       		.byte	0
 30884 1a07 2A       		.uleb128 0x2a
 30885 1a08 08140000 		.4byte	.LASF299
 30886 1a0c 01       		.byte	0x1
 30887 1a0d 7C0B     		.2byte	0xb7c
 30888 1a0f 97000000 		.4byte	0x97
 30889 1a13 00000000 		.4byte	.LFB83
 30890 1a17 3E000000 		.4byte	.LFE83-.LFB83
 30891 1a1b 01       		.uleb128 0x1
 30892 1a1c 9C       		.byte	0x9c
 30893 1a1d 5C1A0000 		.4byte	0x1a5c
 30894 1a21 25       		.uleb128 0x25
 30895 1a22 BC0B0000 		.4byte	.LASF294
 30896 1a26 01       		.byte	0x1
 30897 1a27 7C0B     		.2byte	0xb7c
 30898 1a29 67100000 		.4byte	0x1067
 30899 1a2d 02       		.uleb128 0x2
 30900 1a2e 91       		.byte	0x91
 30901 1a2f 6C       		.sleb128 -20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 665


 30902 1a30 25       		.uleb128 0x25
 30903 1a31 41060000 		.4byte	.LASF295
 30904 1a35 01       		.byte	0x1
 30905 1a36 7C0B     		.2byte	0xb7c
 30906 1a38 97000000 		.4byte	0x97
 30907 1a3c 02       		.uleb128 0x2
 30908 1a3d 91       		.byte	0x91
 30909 1a3e 6B       		.sleb128 -21
 30910 1a3f 26       		.uleb128 0x26
 30911 1a40 6900     		.ascii	"i\000"
 30912 1a42 01       		.byte	0x1
 30913 1a43 7E0B     		.2byte	0xb7e
 30914 1a45 97000000 		.4byte	0x97
 30915 1a49 02       		.uleb128 0x2
 30916 1a4a 91       		.byte	0x91
 30917 1a4b 77       		.sleb128 -9
 30918 1a4c 23       		.uleb128 0x23
 30919 1a4d CF0D0000 		.4byte	.LASF296
 30920 1a51 01       		.byte	0x1
 30921 1a52 7F0B     		.2byte	0xb7f
 30922 1a54 97000000 		.4byte	0x97
 30923 1a58 02       		.uleb128 0x2
 30924 1a59 91       		.byte	0x91
 30925 1a5a 76       		.sleb128 -10
 30926 1a5b 00       		.byte	0
 30927 1a5c 22       		.uleb128 0x22
 30928 1a5d FB0B0000 		.4byte	.LASF297
 30929 1a61 01       		.byte	0x1
 30930 1a62 8C0B     		.2byte	0xb8c
 30931 1a64 00000000 		.4byte	.LFB84
 30932 1a68 2E000000 		.4byte	.LFE84-.LFB84
 30933 1a6c 01       		.uleb128 0x1
 30934 1a6d 9C       		.byte	0x9c
 30935 1a6e A01A0000 		.4byte	0x1aa0
 30936 1a72 25       		.uleb128 0x25
 30937 1a73 8A050000 		.4byte	.LASF298
 30938 1a77 01       		.byte	0x1
 30939 1a78 8C0B     		.2byte	0xb8c
 30940 1a7a 97000000 		.4byte	0x97
 30941 1a7e 02       		.uleb128 0x2
 30942 1a7f 91       		.byte	0x91
 30943 1a80 6F       		.sleb128 -17
 30944 1a81 23       		.uleb128 0x23
 30945 1a82 ED0B0000 		.4byte	.LASF230
 30946 1a86 01       		.byte	0x1
 30947 1a87 8D0B     		.2byte	0xb8d
 30948 1a89 73000000 		.4byte	0x73
 30949 1a8d 02       		.uleb128 0x2
 30950 1a8e 91       		.byte	0x91
 30951 1a8f 74       		.sleb128 -12
 30952 1a90 23       		.uleb128 0x23
 30953 1a91 6C060000 		.4byte	.LASF229
 30954 1a95 01       		.byte	0x1
 30955 1a96 8E0B     		.2byte	0xb8e
 30956 1a98 80080000 		.4byte	0x880
 30957 1a9c 02       		.uleb128 0x2
 30958 1a9d 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 666


 30959 1a9e 70       		.sleb128 -16
 30960 1a9f 00       		.byte	0
 30961 1aa0 2B       		.uleb128 0x2b
 30962 1aa1 C2040000 		.4byte	.LASF300
 30963 1aa5 01       		.byte	0x1
 30964 1aa6 9B0B     		.2byte	0xb9b
 30965 1aa8 97000000 		.4byte	0x97
 30966 1aac 00000000 		.4byte	.LFB85
 30967 1ab0 98000000 		.4byte	.LFE85-.LFB85
 30968 1ab4 01       		.uleb128 0x1
 30969 1ab5 9C       		.byte	0x9c
 30970 1ab6 041B0000 		.4byte	0x1b04
 30971 1aba 25       		.uleb128 0x25
 30972 1abb 34060000 		.4byte	.LASF301
 30973 1abf 01       		.byte	0x1
 30974 1ac0 9B0B     		.2byte	0xb9b
 30975 1ac2 73000000 		.4byte	0x73
 30976 1ac6 02       		.uleb128 0x2
 30977 1ac7 91       		.byte	0x91
 30978 1ac8 64       		.sleb128 -28
 30979 1ac9 26       		.uleb128 0x26
 30980 1aca 6900     		.ascii	"i\000"
 30981 1acc 01       		.byte	0x1
 30982 1acd 9D0B     		.2byte	0xb9d
 30983 1acf 73000000 		.4byte	0x73
 30984 1ad3 02       		.uleb128 0x2
 30985 1ad4 91       		.byte	0x91
 30986 1ad5 74       		.sleb128 -12
 30987 1ad6 23       		.uleb128 0x23
 30988 1ad7 21010000 		.4byte	.LASF302
 30989 1adb 01       		.byte	0x1
 30990 1adc 9E0B     		.2byte	0xb9e
 30991 1ade 97000000 		.4byte	0x97
 30992 1ae2 02       		.uleb128 0x2
 30993 1ae3 91       		.byte	0x91
 30994 1ae4 6B       		.sleb128 -21
 30995 1ae5 23       		.uleb128 0x23
 30996 1ae6 AD060000 		.4byte	.LASF303
 30997 1aea 01       		.byte	0x1
 30998 1aeb 9F0B     		.2byte	0xb9f
 30999 1aed 73000000 		.4byte	0x73
 31000 1af1 02       		.uleb128 0x2
 31001 1af2 91       		.byte	0x91
 31002 1af3 6C       		.sleb128 -20
 31003 1af4 23       		.uleb128 0x23
 31004 1af5 C8050000 		.4byte	.LASF304
 31005 1af9 01       		.byte	0x1
 31006 1afa A00B     		.2byte	0xba0
 31007 1afc 97000000 		.4byte	0x97
 31008 1b00 02       		.uleb128 0x2
 31009 1b01 91       		.byte	0x91
 31010 1b02 73       		.sleb128 -13
 31011 1b03 00       		.byte	0
 31012 1b04 22       		.uleb128 0x22
 31013 1b05 140F0000 		.4byte	.LASF305
 31014 1b09 01       		.byte	0x1
 31015 1b0a C50B     		.2byte	0xbc5
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 667


 31016 1b0c 00000000 		.4byte	.LFB86
 31017 1b10 80000000 		.4byte	.LFE86-.LFB86
 31018 1b14 01       		.uleb128 0x1
 31019 1b15 9C       		.byte	0x9c
 31020 1b16 281B0000 		.4byte	0x1b28
 31021 1b1a 26       		.uleb128 0x26
 31022 1b1b 6900     		.ascii	"i\000"
 31023 1b1d 01       		.byte	0x1
 31024 1b1e C70B     		.2byte	0xbc7
 31025 1b20 A3000000 		.4byte	0xa3
 31026 1b24 02       		.uleb128 0x2
 31027 1b25 91       		.byte	0x91
 31028 1b26 76       		.sleb128 -10
 31029 1b27 00       		.byte	0
 31030 1b28 2B       		.uleb128 0x2b
 31031 1b29 5A0E0000 		.4byte	.LASF306
 31032 1b2d 01       		.byte	0x1
 31033 1b2e DE0B     		.2byte	0xbde
 31034 1b30 97000000 		.4byte	0x97
 31035 1b34 00000000 		.4byte	.LFB87
 31036 1b38 5C000000 		.4byte	.LFE87-.LFB87
 31037 1b3c 01       		.uleb128 0x1
 31038 1b3d 9C       		.byte	0x9c
 31039 1b3e 501B0000 		.4byte	0x1b50
 31040 1b42 26       		.uleb128 0x26
 31041 1b43 6900     		.ascii	"i\000"
 31042 1b45 01       		.byte	0x1
 31043 1b46 DF0B     		.2byte	0xbdf
 31044 1b48 A3000000 		.4byte	0xa3
 31045 1b4c 02       		.uleb128 0x2
 31046 1b4d 91       		.byte	0x91
 31047 1b4e 76       		.sleb128 -10
 31048 1b4f 00       		.byte	0
 31049 1b50 2B       		.uleb128 0x2b
 31050 1b51 B3060000 		.4byte	.LASF307
 31051 1b55 01       		.byte	0x1
 31052 1b56 F10B     		.2byte	0xbf1
 31053 1b58 97000000 		.4byte	0x97
 31054 1b5c 00000000 		.4byte	.LFB88
 31055 1b60 24060000 		.4byte	.LFE88-.LFB88
 31056 1b64 01       		.uleb128 0x1
 31057 1b65 9C       		.byte	0x9c
 31058 1b66 851B0000 		.4byte	0x1b85
 31059 1b6a 26       		.uleb128 0x26
 31060 1b6b 6900     		.ascii	"i\000"
 31061 1b6d 01       		.byte	0x1
 31062 1b6e F30B     		.2byte	0xbf3
 31063 1b70 97000000 		.4byte	0x97
 31064 1b74 02       		.uleb128 0x2
 31065 1b75 91       		.byte	0x91
 31066 1b76 77       		.sleb128 -9
 31067 1b77 26       		.uleb128 0x26
 31068 1b78 6A00     		.ascii	"j\000"
 31069 1b7a 01       		.byte	0x1
 31070 1b7b F30B     		.2byte	0xbf3
 31071 1b7d 97000000 		.4byte	0x97
 31072 1b81 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 668


 31073 1b82 91       		.byte	0x91
 31074 1b83 76       		.sleb128 -10
 31075 1b84 00       		.byte	0
 31076 1b85 28       		.uleb128 0x28
 31077 1b86 62090000 		.4byte	.LASF308
 31078 1b8a 01       		.byte	0x1
 31079 1b8b 940C     		.2byte	0xc94
 31080 1b8d 00000000 		.4byte	.LFB89
 31081 1b91 38020000 		.4byte	.LFE89-.LFB89
 31082 1b95 01       		.uleb128 0x1
 31083 1b96 9C       		.byte	0x9c
 31084 1b97 C21B0000 		.4byte	0x1bc2
 31085 1b9b 23       		.uleb128 0x23
 31086 1b9c 500E0000 		.4byte	.LASF239
 31087 1ba0 01       		.byte	0x1
 31088 1ba1 960C     		.2byte	0xc96
 31089 1ba3 97000000 		.4byte	0x97
 31090 1ba7 02       		.uleb128 0x2
 31091 1ba8 91       		.byte	0x91
 31092 1ba9 73       		.sleb128 -13
 31093 1baa 1E       		.uleb128 0x1e
 31094 1bab FA000000 		.4byte	.LBB26
 31095 1baf 6A000000 		.4byte	.LBE26-.LBB26
 31096 1bb3 26       		.uleb128 0x26
 31097 1bb4 6900     		.ascii	"i\000"
 31098 1bb6 01       		.byte	0x1
 31099 1bb7 A70C     		.2byte	0xca7
 31100 1bb9 73000000 		.4byte	0x73
 31101 1bbd 02       		.uleb128 0x2
 31102 1bbe 91       		.byte	0x91
 31103 1bbf 74       		.sleb128 -12
 31104 1bc0 00       		.byte	0
 31105 1bc1 00       		.byte	0
 31106 1bc2 2C       		.uleb128 0x2c
 31107 1bc3 DE0B0000 		.4byte	.LASF309
 31108 1bc7 01       		.byte	0x1
 31109 1bc8 C60C     		.2byte	0xcc6
 31110 1bca 00000000 		.4byte	.LFB90
 31111 1bce 28000000 		.4byte	.LFE90-.LFB90
 31112 1bd2 01       		.uleb128 0x1
 31113 1bd3 9C       		.byte	0x9c
 31114 1bd4 2C       		.uleb128 0x2c
 31115 1bd5 A5110000 		.4byte	.LASF310
 31116 1bd9 01       		.byte	0x1
 31117 1bda D20C     		.2byte	0xcd2
 31118 1bdc 00000000 		.4byte	.LFB91
 31119 1be0 78000000 		.4byte	.LFE91-.LFB91
 31120 1be4 01       		.uleb128 0x1
 31121 1be5 9C       		.byte	0x9c
 31122 1be6 2C       		.uleb128 0x2c
 31123 1be7 7B040000 		.4byte	.LASF311
 31124 1beb 01       		.byte	0x1
 31125 1bec E80C     		.2byte	0xce8
 31126 1bee 00000000 		.4byte	.LFB92
 31127 1bf2 B0000000 		.4byte	.LFE92-.LFB92
 31128 1bf6 01       		.uleb128 0x1
 31129 1bf7 9C       		.byte	0x9c
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 669


 31130 1bf8 27       		.uleb128 0x27
 31131 1bf9 E1060000 		.4byte	.LASF313
 31132 1bfd 01       		.byte	0x1
 31133 1bfe 090D     		.2byte	0xd09
 31134 1c00 00000000 		.4byte	.LFB93
 31135 1c04 28010000 		.4byte	.LFE93-.LFB93
 31136 1c08 01       		.uleb128 0x1
 31137 1c09 9C       		.byte	0x9c
 31138 1c0a 3C1C0000 		.4byte	0x1c3c
 31139 1c0e 23       		.uleb128 0x23
 31140 1c0f 72070000 		.4byte	.LASF244
 31141 1c13 01       		.byte	0x1
 31142 1c14 0B0D     		.2byte	0xd0b
 31143 1c16 97000000 		.4byte	0x97
 31144 1c1a 02       		.uleb128 0x2
 31145 1c1b 91       		.byte	0x91
 31146 1c1c 6F       		.sleb128 -17
 31147 1c1d 23       		.uleb128 0x23
 31148 1c1e 5F120000 		.4byte	.LASF235
 31149 1c22 01       		.byte	0x1
 31150 1c23 0C0D     		.2byte	0xd0c
 31151 1c25 C7000000 		.4byte	0xc7
 31152 1c29 02       		.uleb128 0x2
 31153 1c2a 91       		.byte	0x91
 31154 1c2b 6C       		.sleb128 -20
 31155 1c2c 23       		.uleb128 0x23
 31156 1c2d 6C060000 		.4byte	.LASF229
 31157 1c31 01       		.byte	0x1
 31158 1c32 0F0D     		.2byte	0xd0f
 31159 1c34 11080000 		.4byte	0x811
 31160 1c38 02       		.uleb128 0x2
 31161 1c39 91       		.byte	0x91
 31162 1c3a 64       		.sleb128 -28
 31163 1c3b 00       		.byte	0
 31164 1c3c 27       		.uleb128 0x27
 31165 1c3d 010F0000 		.4byte	.LASF314
 31166 1c41 01       		.byte	0x1
 31167 1c42 2A0D     		.2byte	0xd2a
 31168 1c44 00000000 		.4byte	.LFB94
 31169 1c48 B8000000 		.4byte	.LFE94-.LFB94
 31170 1c4c 01       		.uleb128 0x1
 31171 1c4d 9C       		.byte	0x9c
 31172 1c4e 801C0000 		.4byte	0x1c80
 31173 1c52 23       		.uleb128 0x23
 31174 1c53 72070000 		.4byte	.LASF244
 31175 1c57 01       		.byte	0x1
 31176 1c58 2C0D     		.2byte	0xd2c
 31177 1c5a 97000000 		.4byte	0x97
 31178 1c5e 02       		.uleb128 0x2
 31179 1c5f 91       		.byte	0x91
 31180 1c60 6F       		.sleb128 -17
 31181 1c61 23       		.uleb128 0x23
 31182 1c62 5F120000 		.4byte	.LASF235
 31183 1c66 01       		.byte	0x1
 31184 1c67 2D0D     		.2byte	0xd2d
 31185 1c69 C7000000 		.4byte	0xc7
 31186 1c6d 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 670


 31187 1c6e 91       		.byte	0x91
 31188 1c6f 6C       		.sleb128 -20
 31189 1c70 23       		.uleb128 0x23
 31190 1c71 6C060000 		.4byte	.LASF229
 31191 1c75 01       		.byte	0x1
 31192 1c76 310D     		.2byte	0xd31
 31193 1c78 11080000 		.4byte	0x811
 31194 1c7c 02       		.uleb128 0x2
 31195 1c7d 91       		.byte	0x91
 31196 1c7e 64       		.sleb128 -28
 31197 1c7f 00       		.byte	0
 31198 1c80 27       		.uleb128 0x27
 31199 1c81 4F020000 		.4byte	.LASF315
 31200 1c85 01       		.byte	0x1
 31201 1c86 430D     		.2byte	0xd43
 31202 1c88 00000000 		.4byte	.LFB95
 31203 1c8c B8000000 		.4byte	.LFE95-.LFB95
 31204 1c90 01       		.uleb128 0x1
 31205 1c91 9C       		.byte	0x9c
 31206 1c92 C41C0000 		.4byte	0x1cc4
 31207 1c96 23       		.uleb128 0x23
 31208 1c97 72070000 		.4byte	.LASF244
 31209 1c9b 01       		.byte	0x1
 31210 1c9c 450D     		.2byte	0xd45
 31211 1c9e 97000000 		.4byte	0x97
 31212 1ca2 02       		.uleb128 0x2
 31213 1ca3 91       		.byte	0x91
 31214 1ca4 6F       		.sleb128 -17
 31215 1ca5 23       		.uleb128 0x23
 31216 1ca6 5F120000 		.4byte	.LASF235
 31217 1caa 01       		.byte	0x1
 31218 1cab 460D     		.2byte	0xd46
 31219 1cad C7000000 		.4byte	0xc7
 31220 1cb1 02       		.uleb128 0x2
 31221 1cb2 91       		.byte	0x91
 31222 1cb3 6C       		.sleb128 -20
 31223 1cb4 23       		.uleb128 0x23
 31224 1cb5 6C060000 		.4byte	.LASF229
 31225 1cb9 01       		.byte	0x1
 31226 1cba 4A0D     		.2byte	0xd4a
 31227 1cbc 11080000 		.4byte	0x811
 31228 1cc0 02       		.uleb128 0x2
 31229 1cc1 91       		.byte	0x91
 31230 1cc2 64       		.sleb128 -28
 31231 1cc3 00       		.byte	0
 31232 1cc4 27       		.uleb128 0x27
 31233 1cc5 630A0000 		.4byte	.LASF316
 31234 1cc9 01       		.byte	0x1
 31235 1cca 5C0D     		.2byte	0xd5c
 31236 1ccc 00000000 		.4byte	.LFB96
 31237 1cd0 5C000000 		.4byte	.LFE96-.LFB96
 31238 1cd4 01       		.uleb128 0x1
 31239 1cd5 9C       		.byte	0x9c
 31240 1cd6 F91C0000 		.4byte	0x1cf9
 31241 1cda 23       		.uleb128 0x23
 31242 1cdb 5F120000 		.4byte	.LASF235
 31243 1cdf 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 671


 31244 1ce0 5E0D     		.2byte	0xd5e
 31245 1ce2 C7000000 		.4byte	0xc7
 31246 1ce6 02       		.uleb128 0x2
 31247 1ce7 91       		.byte	0x91
 31248 1ce8 76       		.sleb128 -10
 31249 1ce9 23       		.uleb128 0x23
 31250 1cea 6C060000 		.4byte	.LASF229
 31251 1cee 01       		.byte	0x1
 31252 1cef 620D     		.2byte	0xd62
 31253 1cf1 44090000 		.4byte	0x944
 31254 1cf5 02       		.uleb128 0x2
 31255 1cf6 91       		.byte	0x91
 31256 1cf7 70       		.sleb128 -16
 31257 1cf8 00       		.byte	0
 31258 1cf9 2D       		.uleb128 0x2d
 31259 1cfa 430C0000 		.4byte	.LASF317
 31260 1cfe 01       		.byte	0x1
 31261 1cff 740D     		.2byte	0xd74
 31262 1d01 00000000 		.4byte	.LFB97
 31263 1d05 44020000 		.4byte	.LFE97-.LFB97
 31264 1d09 01       		.uleb128 0x1
 31265 1d0a 9C       		.byte	0x9c
 31266 1d0b 631D0000 		.4byte	0x1d63
 31267 1d0f 23       		.uleb128 0x23
 31268 1d10 5F120000 		.4byte	.LASF235
 31269 1d14 01       		.byte	0x1
 31270 1d15 770D     		.2byte	0xd77
 31271 1d17 631D0000 		.4byte	0x1d63
 31272 1d1b 02       		.uleb128 0x2
 31273 1d1c 91       		.byte	0x91
 31274 1d1d 70       		.sleb128 -16
 31275 1d1e 23       		.uleb128 0x23
 31276 1d1f 34070000 		.4byte	.LASF318
 31277 1d23 01       		.byte	0x1
 31278 1d24 780D     		.2byte	0xd78
 31279 1d26 631D0000 		.4byte	0x1d63
 31280 1d2a 05       		.uleb128 0x5
 31281 1d2b 03       		.byte	0x3
 31282 1d2c 08000000 		.4byte	last_aux_int16.11391
 31283 1d30 2E       		.uleb128 0x2e
 31284 1d31 2E000000 		.4byte	.LBB27
 31285 1d35 50000000 		.4byte	.LBE27-.LBB27
 31286 1d39 4B1D0000 		.4byte	0x1d4b
 31287 1d3d 26       		.uleb128 0x26
 31288 1d3e 6900     		.ascii	"i\000"
 31289 1d40 01       		.byte	0x1
 31290 1d41 7F0D     		.2byte	0xd7f
 31291 1d43 97000000 		.4byte	0x97
 31292 1d47 02       		.uleb128 0x2
 31293 1d48 91       		.byte	0x91
 31294 1d49 77       		.sleb128 -9
 31295 1d4a 00       		.byte	0
 31296 1d4b 1E       		.uleb128 0x1e
 31297 1d4c 88000000 		.4byte	.LBB28
 31298 1d50 98010000 		.4byte	.LBE28-.LBB28
 31299 1d54 26       		.uleb128 0x26
 31300 1d55 6900     		.ascii	"i\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 672


 31301 1d57 01       		.byte	0x1
 31302 1d58 890D     		.2byte	0xd89
 31303 1d5a 97000000 		.4byte	0x97
 31304 1d5e 02       		.uleb128 0x2
 31305 1d5f 91       		.byte	0x91
 31306 1d60 76       		.sleb128 -10
 31307 1d61 00       		.byte	0
 31308 1d62 00       		.byte	0
 31309 1d63 09       		.uleb128 0x9
 31310 1d64 C7000000 		.4byte	0xc7
 31311 1d68 731D0000 		.4byte	0x1d73
 31312 1d6c 0A       		.uleb128 0xa
 31313 1d6d 18010000 		.4byte	0x118
 31314 1d71 01       		.byte	0x1
 31315 1d72 00       		.byte	0
 31316 1d73 27       		.uleb128 0x27
 31317 1d74 D9140000 		.4byte	.LASF319
 31318 1d78 01       		.byte	0x1
 31319 1d79 A40D     		.2byte	0xda4
 31320 1d7b 00000000 		.4byte	.LFB98
 31321 1d7f BC000000 		.4byte	.LFE98-.LFB98
 31322 1d83 01       		.uleb128 0x1
 31323 1d84 9C       		.byte	0x9c
 31324 1d85 991D0000 		.4byte	0x1d99
 31325 1d89 26       		.uleb128 0x26
 31326 1d8a 61757800 		.ascii	"aux\000"
 31327 1d8e 01       		.byte	0x1
 31328 1d8f A70D     		.2byte	0xda7
 31329 1d91 97000000 		.4byte	0x97
 31330 1d95 02       		.uleb128 0x2
 31331 1d96 91       		.byte	0x91
 31332 1d97 77       		.sleb128 -9
 31333 1d98 00       		.byte	0
 31334 1d99 27       		.uleb128 0x27
 31335 1d9a A10C0000 		.4byte	.LASF320
 31336 1d9e 01       		.byte	0x1
 31337 1d9f C90D     		.2byte	0xdc9
 31338 1da1 00000000 		.4byte	.LFB99
 31339 1da5 5C000000 		.4byte	.LFE99-.LFB99
 31340 1da9 01       		.uleb128 0x1
 31341 1daa 9C       		.byte	0x9c
 31342 1dab BF1D0000 		.4byte	0x1dbf
 31343 1daf 23       		.uleb128 0x23
 31344 1db0 6C060000 		.4byte	.LASF229
 31345 1db4 01       		.byte	0x1
 31346 1db5 CB0D     		.2byte	0xdcb
 31347 1db7 C4050000 		.4byte	0x5c4
 31348 1dbb 02       		.uleb128 0x2
 31349 1dbc 91       		.byte	0x91
 31350 1dbd 74       		.sleb128 -12
 31351 1dbe 00       		.byte	0
 31352 1dbf 27       		.uleb128 0x27
 31353 1dc0 66100000 		.4byte	.LASF321
 31354 1dc4 01       		.byte	0x1
 31355 1dc5 E00D     		.2byte	0xde0
 31356 1dc7 00000000 		.4byte	.LFB100
 31357 1dcb 38010000 		.4byte	.LFE100-.LFB100
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 673


 31358 1dcf 01       		.uleb128 0x1
 31359 1dd0 9C       		.byte	0x9c
 31360 1dd1 031E0000 		.4byte	0x1e03
 31361 1dd5 23       		.uleb128 0x23
 31362 1dd6 72070000 		.4byte	.LASF244
 31363 1dda 01       		.byte	0x1
 31364 1ddb E20D     		.2byte	0xde2
 31365 1ddd 97000000 		.4byte	0x97
 31366 1de1 02       		.uleb128 0x2
 31367 1de2 91       		.byte	0x91
 31368 1de3 6F       		.sleb128 -17
 31369 1de4 23       		.uleb128 0x23
 31370 1de5 5F120000 		.4byte	.LASF235
 31371 1de9 01       		.byte	0x1
 31372 1dea E30D     		.2byte	0xde3
 31373 1dec C7000000 		.4byte	0xc7
 31374 1df0 02       		.uleb128 0x2
 31375 1df1 91       		.byte	0x91
 31376 1df2 6C       		.sleb128 -20
 31377 1df3 23       		.uleb128 0x23
 31378 1df4 6C060000 		.4byte	.LASF229
 31379 1df8 01       		.byte	0x1
 31380 1df9 E70D     		.2byte	0xde7
 31381 1dfb 54090000 		.4byte	0x954
 31382 1dff 02       		.uleb128 0x2
 31383 1e00 91       		.byte	0x91
 31384 1e01 60       		.sleb128 -32
 31385 1e02 00       		.byte	0
 31386 1e03 27       		.uleb128 0x27
 31387 1e04 CD0A0000 		.4byte	.LASF322
 31388 1e08 01       		.byte	0x1
 31389 1e09 070E     		.2byte	0xe07
 31390 1e0b 00000000 		.4byte	.LFB101
 31391 1e0f EC000000 		.4byte	.LFE101-.LFB101
 31392 1e13 01       		.uleb128 0x1
 31393 1e14 9C       		.byte	0x9c
 31394 1e15 381E0000 		.4byte	0x1e38
 31395 1e19 23       		.uleb128 0x23
 31396 1e1a 6C060000 		.4byte	.LASF229
 31397 1e1e 01       		.byte	0x1
 31398 1e1f 0B0E     		.2byte	0xe0b
 31399 1e21 44090000 		.4byte	0x944
 31400 1e25 02       		.uleb128 0x2
 31401 1e26 91       		.byte	0x91
 31402 1e27 68       		.sleb128 -24
 31403 1e28 23       		.uleb128 0x23
 31404 1e29 5F120000 		.4byte	.LASF235
 31405 1e2d 01       		.byte	0x1
 31406 1e2e 0C0E     		.2byte	0xe0c
 31407 1e30 C7000000 		.4byte	0xc7
 31408 1e34 02       		.uleb128 0x2
 31409 1e35 91       		.byte	0x91
 31410 1e36 66       		.sleb128 -26
 31411 1e37 00       		.byte	0
 31412 1e38 27       		.uleb128 0x27
 31413 1e39 E6070000 		.4byte	.LASF323
 31414 1e3d 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 674


 31415 1e3e 2D0E     		.2byte	0xe2d
 31416 1e40 00000000 		.4byte	.LFB102
 31417 1e44 64000000 		.4byte	.LFE102-.LFB102
 31418 1e48 01       		.uleb128 0x1
 31419 1e49 9C       		.byte	0x9c
 31420 1e4a 6D1E0000 		.4byte	0x1e6d
 31421 1e4e 23       		.uleb128 0x23
 31422 1e4f 6C060000 		.4byte	.LASF229
 31423 1e53 01       		.byte	0x1
 31424 1e54 310E     		.2byte	0xe31
 31425 1e56 C10A0000 		.4byte	0xac1
 31426 1e5a 02       		.uleb128 0x2
 31427 1e5b 91       		.byte	0x91
 31428 1e5c 74       		.sleb128 -12
 31429 1e5d 23       		.uleb128 0x23
 31430 1e5e 5F120000 		.4byte	.LASF235
 31431 1e62 01       		.byte	0x1
 31432 1e63 320E     		.2byte	0xe32
 31433 1e65 C7000000 		.4byte	0xc7
 31434 1e69 02       		.uleb128 0x2
 31435 1e6a 91       		.byte	0x91
 31436 1e6b 72       		.sleb128 -14
 31437 1e6c 00       		.byte	0
 31438 1e6d 2F       		.uleb128 0x2f
 31439 1e6e D0070000 		.4byte	.LASF324
 31440 1e72 01       		.byte	0x1
 31441 1e73 470E     		.2byte	0xe47
 31442 1e75 C7000000 		.4byte	0xc7
 31443 1e79 00000000 		.4byte	.LFB103
 31444 1e7d A8000000 		.4byte	.LFE103-.LFB103
 31445 1e81 01       		.uleb128 0x1
 31446 1e82 9C       		.byte	0x9c
 31447 1e83 E21E0000 		.4byte	0x1ee2
 31448 1e87 23       		.uleb128 0x23
 31449 1e88 6C060000 		.4byte	.LASF229
 31450 1e8c 01       		.byte	0x1
 31451 1e8d 490E     		.2byte	0xe49
 31452 1e8f E21E0000 		.4byte	0x1ee2
 31453 1e93 02       		.uleb128 0x2
 31454 1e94 91       		.byte	0x91
 31455 1e95 5C       		.sleb128 -36
 31456 1e96 23       		.uleb128 0x23
 31457 1e97 ED0B0000 		.4byte	.LASF230
 31458 1e9b 01       		.byte	0x1
 31459 1e9c 4A0E     		.2byte	0xe4a
 31460 1e9e 97000000 		.4byte	0x97
 31461 1ea2 02       		.uleb128 0x2
 31462 1ea3 91       		.byte	0x91
 31463 1ea4 74       		.sleb128 -12
 31464 1ea5 23       		.uleb128 0x23
 31465 1ea6 F30F0000 		.4byte	.LASF325
 31466 1eaa 01       		.byte	0x1
 31467 1eab 4B0E     		.2byte	0xe4b
 31468 1ead C7000000 		.4byte	0xc7
 31469 1eb1 02       		.uleb128 0x2
 31470 1eb2 91       		.byte	0x91
 31471 1eb3 76       		.sleb128 -10
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 675


 31472 1eb4 23       		.uleb128 0x23
 31473 1eb5 1D030000 		.4byte	.LASF326
 31474 1eb9 01       		.byte	0x1
 31475 1eba 4C0E     		.2byte	0xe4c
 31476 1ebc AF000000 		.4byte	0xaf
 31477 1ec0 02       		.uleb128 0x2
 31478 1ec1 91       		.byte	0x91
 31479 1ec2 70       		.sleb128 -16
 31480 1ec3 23       		.uleb128 0x23
 31481 1ec4 D0130000 		.4byte	.LASF327
 31482 1ec8 01       		.byte	0x1
 31483 1ec9 4C0E     		.2byte	0xe4c
 31484 1ecb AF000000 		.4byte	0xaf
 31485 1ecf 02       		.uleb128 0x2
 31486 1ed0 91       		.byte	0x91
 31487 1ed1 6C       		.sleb128 -20
 31488 1ed2 23       		.uleb128 0x23
 31489 1ed3 E6040000 		.4byte	.LASF328
 31490 1ed7 01       		.byte	0x1
 31491 1ed8 4D0E     		.2byte	0xe4d
 31492 1eda 97000000 		.4byte	0x97
 31493 1ede 02       		.uleb128 0x2
 31494 1edf 91       		.byte	0x91
 31495 1ee0 75       		.sleb128 -11
 31496 1ee1 00       		.byte	0
 31497 1ee2 09       		.uleb128 0x9
 31498 1ee3 97000000 		.4byte	0x97
 31499 1ee7 F21E0000 		.4byte	0x1ef2
 31500 1eeb 0A       		.uleb128 0xa
 31501 1eec 18010000 		.4byte	0x118
 31502 1ef0 0F       		.byte	0xf
 31503 1ef1 00       		.byte	0
 31504 1ef2 30       		.uleb128 0x30
 31505 1ef3 34010000 		.4byte	.LASF357
 31506 1ef7 01       		.byte	0x1
 31507 1ef8 6A0E     		.2byte	0xe6a
 31508 1efa 00000000 		.4byte	.LFB104
 31509 1efe 34000000 		.4byte	.LFE104-.LFB104
 31510 1f02 01       		.uleb128 0x1
 31511 1f03 9C       		.byte	0x9c
 31512 1f04 27       		.uleb128 0x27
 31513 1f05 4E040000 		.4byte	.LASF329
 31514 1f09 01       		.byte	0x1
 31515 1f0a 780E     		.2byte	0xe78
 31516 1f0c 00000000 		.4byte	.LFB105
 31517 1f10 20000000 		.4byte	.LFE105-.LFB105
 31518 1f14 01       		.uleb128 0x1
 31519 1f15 9C       		.byte	0x9c
 31520 1f16 2A1F0000 		.4byte	0x1f2a
 31521 1f1a 23       		.uleb128 0x23
 31522 1f1b 6C060000 		.4byte	.LASF229
 31523 1f1f 01       		.byte	0x1
 31524 1f20 7A0E     		.2byte	0xe7a
 31525 1f22 80080000 		.4byte	0x880
 31526 1f26 02       		.uleb128 0x2
 31527 1f27 91       		.byte	0x91
 31528 1f28 74       		.sleb128 -12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 676


 31529 1f29 00       		.byte	0
 31530 1f2a 27       		.uleb128 0x27
 31531 1f2b AC010000 		.4byte	.LASF330
 31532 1f2f 01       		.byte	0x1
 31533 1f30 860E     		.2byte	0xe86
 31534 1f32 00000000 		.4byte	.LFB106
 31535 1f36 A0000000 		.4byte	.LFE106-.LFB106
 31536 1f3a 01       		.uleb128 0x1
 31537 1f3b 9C       		.byte	0x9c
 31538 1f3c 5F1F0000 		.4byte	0x1f5f
 31539 1f40 23       		.uleb128 0x23
 31540 1f41 6C060000 		.4byte	.LASF229
 31541 1f45 01       		.byte	0x1
 31542 1f46 8A0E     		.2byte	0xe8a
 31543 1f48 44090000 		.4byte	0x944
 31544 1f4c 02       		.uleb128 0x2
 31545 1f4d 91       		.byte	0x91
 31546 1f4e 70       		.sleb128 -16
 31547 1f4f 23       		.uleb128 0x23
 31548 1f50 5F120000 		.4byte	.LASF235
 31549 1f54 01       		.byte	0x1
 31550 1f55 8B0E     		.2byte	0xe8b
 31551 1f57 C7000000 		.4byte	0xc7
 31552 1f5b 02       		.uleb128 0x2
 31553 1f5c 91       		.byte	0x91
 31554 1f5d 6E       		.sleb128 -18
 31555 1f5e 00       		.byte	0
 31556 1f5f 27       		.uleb128 0x27
 31557 1f60 2F110000 		.4byte	.LASF331
 31558 1f64 01       		.byte	0x1
 31559 1f65 9F0E     		.2byte	0xe9f
 31560 1f67 00000000 		.4byte	.LFB107
 31561 1f6b BC010000 		.4byte	.LFE107-.LFB107
 31562 1f6f 01       		.uleb128 0x1
 31563 1f70 9C       		.byte	0x9c
 31564 1f71 C11F0000 		.4byte	0x1fc1
 31565 1f75 23       		.uleb128 0x23
 31566 1f76 5F0C0000 		.4byte	.LASF332
 31567 1f7a 01       		.byte	0x1
 31568 1f7b A20E     		.2byte	0xea2
 31569 1f7d AF000000 		.4byte	0xaf
 31570 1f81 02       		.uleb128 0x2
 31571 1f82 91       		.byte	0x91
 31572 1f83 70       		.sleb128 -16
 31573 1f84 23       		.uleb128 0x23
 31574 1f85 6E0F0000 		.4byte	.LASF333
 31575 1f89 01       		.byte	0x1
 31576 1f8a A30E     		.2byte	0xea3
 31577 1f8c EB000000 		.4byte	0xeb
 31578 1f90 02       		.uleb128 0x2
 31579 1f91 91       		.byte	0x91
 31580 1f92 6C       		.sleb128 -20
 31581 1f93 23       		.uleb128 0x23
 31582 1f94 ED0B0000 		.4byte	.LASF230
 31583 1f98 01       		.byte	0x1
 31584 1f99 A40E     		.2byte	0xea4
 31585 1f9b 97000000 		.4byte	0x97
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 677


 31586 1f9f 02       		.uleb128 0x2
 31587 1fa0 91       		.byte	0x91
 31588 1fa1 77       		.sleb128 -9
 31589 1fa2 23       		.uleb128 0x23
 31590 1fa3 6C060000 		.4byte	.LASF229
 31591 1fa7 01       		.byte	0x1
 31592 1fa8 A50E     		.2byte	0xea5
 31593 1faa 80080000 		.4byte	0x880
 31594 1fae 02       		.uleb128 0x2
 31595 1faf 91       		.byte	0x91
 31596 1fb0 68       		.sleb128 -24
 31597 1fb1 23       		.uleb128 0x23
 31598 1fb2 2D100000 		.4byte	.LASF291
 31599 1fb6 01       		.byte	0x1
 31600 1fb7 A60E     		.2byte	0xea6
 31601 1fb9 97000000 		.4byte	0x97
 31602 1fbd 02       		.uleb128 0x2
 31603 1fbe 91       		.byte	0x91
 31604 1fbf 6B       		.sleb128 -21
 31605 1fc0 00       		.byte	0
 31606 1fc1 27       		.uleb128 0x27
 31607 1fc2 65020000 		.4byte	.LASF334
 31608 1fc6 01       		.byte	0x1
 31609 1fc7 E00E     		.2byte	0xee0
 31610 1fc9 00000000 		.4byte	.LFB108
 31611 1fcd 60000000 		.4byte	.LFE108-.LFB108
 31612 1fd1 01       		.uleb128 0x1
 31613 1fd2 9C       		.byte	0x9c
 31614 1fd3 F61F0000 		.4byte	0x1ff6
 31615 1fd7 23       		.uleb128 0x23
 31616 1fd8 6C060000 		.4byte	.LASF229
 31617 1fdc 01       		.byte	0x1
 31618 1fdd E20E     		.2byte	0xee2
 31619 1fdf 44090000 		.4byte	0x944
 31620 1fe3 02       		.uleb128 0x2
 31621 1fe4 91       		.byte	0x91
 31622 1fe5 70       		.sleb128 -16
 31623 1fe6 23       		.uleb128 0x23
 31624 1fe7 5F120000 		.4byte	.LASF235
 31625 1feb 01       		.byte	0x1
 31626 1fec E30E     		.2byte	0xee3
 31627 1fee C7000000 		.4byte	0xc7
 31628 1ff2 02       		.uleb128 0x2
 31629 1ff3 91       		.byte	0x91
 31630 1ff4 6E       		.sleb128 -18
 31631 1ff5 00       		.byte	0
 31632 1ff6 27       		.uleb128 0x27
 31633 1ff7 E8010000 		.4byte	.LASF335
 31634 1ffb 01       		.byte	0x1
 31635 1ffc F60E     		.2byte	0xef6
 31636 1ffe 00000000 		.4byte	.LFB109
 31637 2002 98050000 		.4byte	.LFE109-.LFB109
 31638 2006 01       		.uleb128 0x1
 31639 2007 9C       		.byte	0x9c
 31640 2008 83200000 		.4byte	0x2083
 31641 200c 23       		.uleb128 0x23
 31642 200d 14140000 		.4byte	.LASF336
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 678


 31643 2011 01       		.byte	0x1
 31644 2012 F90E     		.2byte	0xef9
 31645 2014 97000000 		.4byte	0x97
 31646 2018 02       		.uleb128 0x2
 31647 2019 91       		.byte	0x91
 31648 201a 6F       		.sleb128 -17
 31649 201b 26       		.uleb128 0x26
 31650 201c 6300     		.ascii	"c\000"
 31651 201e 01       		.byte	0x1
 31652 201f FA0E     		.2byte	0xefa
 31653 2021 A3000000 		.4byte	0xa3
 31654 2025 02       		.uleb128 0x2
 31655 2026 91       		.byte	0x91
 31656 2027 6C       		.sleb128 -20
 31657 2028 26       		.uleb128 0x26
 31658 2029 6B00     		.ascii	"k\000"
 31659 202b 01       		.byte	0x1
 31660 202c FB0E     		.2byte	0xefb
 31661 202e 97000000 		.4byte	0x97
 31662 2032 02       		.uleb128 0x2
 31663 2033 91       		.byte	0x91
 31664 2034 6B       		.sleb128 -21
 31665 2035 23       		.uleb128 0x23
 31666 2036 8F000000 		.4byte	.LASF337
 31667 203a 01       		.byte	0x1
 31668 203b FC0E     		.2byte	0xefc
 31669 203d A3000000 		.4byte	0xa3
 31670 2041 02       		.uleb128 0x2
 31671 2042 91       		.byte	0x91
 31672 2043 68       		.sleb128 -24
 31673 2044 23       		.uleb128 0x23
 31674 2045 5F120000 		.4byte	.LASF235
 31675 2049 01       		.byte	0x1
 31676 204a FD0E     		.2byte	0xefd
 31677 204c C7000000 		.4byte	0xc7
 31678 2050 02       		.uleb128 0x2
 31679 2051 91       		.byte	0x91
 31680 2052 66       		.sleb128 -26
 31681 2053 23       		.uleb128 0x23
 31682 2054 9B130000 		.4byte	.LASF234
 31683 2058 01       		.byte	0x1
 31684 2059 FE0E     		.2byte	0xefe
 31685 205b EB000000 		.4byte	0xeb
 31686 205f 02       		.uleb128 0x2
 31687 2060 91       		.byte	0x91
 31688 2061 60       		.sleb128 -32
 31689 2062 23       		.uleb128 0x23
 31690 2063 6C060000 		.4byte	.LASF229
 31691 2067 01       		.byte	0x1
 31692 2068 010F     		.2byte	0xf01
 31693 206a 83200000 		.4byte	0x2083
 31694 206e 03       		.uleb128 0x3
 31695 206f 91       		.byte	0x91
 31696 2070 807D     		.sleb128 -384
 31697 2072 23       		.uleb128 0x23
 31698 2073 96090000 		.4byte	.LASF338
 31699 2077 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 679


 31700 2078 020F     		.2byte	0xf02
 31701 207a D8120000 		.4byte	0x12d8
 31702 207e 03       		.uleb128 0x3
 31703 207f 91       		.byte	0x91
 31704 2080 E07C     		.sleb128 -416
 31705 2082 00       		.byte	0
 31706 2083 09       		.uleb128 0x9
 31707 2084 97000000 		.4byte	0x97
 31708 2088 94200000 		.4byte	0x2094
 31709 208c 24       		.uleb128 0x24
 31710 208d 18010000 		.4byte	0x118
 31711 2091 5D01     		.2byte	0x15d
 31712 2093 00       		.byte	0
 31713 2094 27       		.uleb128 0x27
 31714 2095 76130000 		.4byte	.LASF339
 31715 2099 01       		.byte	0x1
 31716 209a 650F     		.2byte	0xf65
 31717 209c 00000000 		.4byte	.LFB110
 31718 20a0 8C000000 		.4byte	.LFE110-.LFB110
 31719 20a4 01       		.uleb128 0x1
 31720 20a5 9C       		.byte	0x9c
 31721 20a6 D4200000 		.4byte	0x20d4
 31722 20aa 23       		.uleb128 0x23
 31723 20ab 6C060000 		.4byte	.LASF229
 31724 20af 01       		.byte	0x1
 31725 20b0 680F     		.2byte	0xf68
 31726 20b2 6F0A0000 		.4byte	0xa6f
 31727 20b6 02       		.uleb128 0x2
 31728 20b7 91       		.byte	0x91
 31729 20b8 60       		.sleb128 -32
 31730 20b9 26       		.uleb128 0x26
 31731 20ba 6900     		.ascii	"i\000"
 31732 20bc 01       		.byte	0x1
 31733 20bd 690F     		.2byte	0xf69
 31734 20bf 97000000 		.4byte	0x97
 31735 20c3 02       		.uleb128 0x2
 31736 20c4 91       		.byte	0x91
 31737 20c5 6F       		.sleb128 -17
 31738 20c6 26       		.uleb128 0x26
 31739 20c7 6A00     		.ascii	"j\000"
 31740 20c9 01       		.byte	0x1
 31741 20ca 690F     		.2byte	0xf69
 31742 20cc 97000000 		.4byte	0x97
 31743 20d0 02       		.uleb128 0x2
 31744 20d1 91       		.byte	0x91
 31745 20d2 6E       		.sleb128 -18
 31746 20d3 00       		.byte	0
 31747 20d4 27       		.uleb128 0x27
 31748 20d5 69110000 		.4byte	.LASF340
 31749 20d9 01       		.byte	0x1
 31750 20da 7E0F     		.2byte	0xf7e
 31751 20dc 00000000 		.4byte	.LFB111
 31752 20e0 EC000000 		.4byte	.LFE111-.LFB111
 31753 20e4 01       		.uleb128 0x1
 31754 20e5 9C       		.byte	0x9c
 31755 20e6 32210000 		.4byte	0x2132
 31756 20ea 23       		.uleb128 0x23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 680


 31757 20eb 6C060000 		.4byte	.LASF229
 31758 20ef 01       		.byte	0x1
 31759 20f0 810F     		.2byte	0xf81
 31760 20f2 32210000 		.4byte	0x2132
 31761 20f6 02       		.uleb128 0x2
 31762 20f7 91       		.byte	0x91
 31763 20f8 54       		.sleb128 -44
 31764 20f9 26       		.uleb128 0x26
 31765 20fa 6900     		.ascii	"i\000"
 31766 20fc 01       		.byte	0x1
 31767 20fd 820F     		.2byte	0xf82
 31768 20ff 97000000 		.4byte	0x97
 31769 2103 02       		.uleb128 0x2
 31770 2104 91       		.byte	0x91
 31771 2105 6F       		.sleb128 -17
 31772 2106 26       		.uleb128 0x26
 31773 2107 6A00     		.ascii	"j\000"
 31774 2109 01       		.byte	0x1
 31775 210a 820F     		.2byte	0xf82
 31776 210c 97000000 		.4byte	0x97
 31777 2110 02       		.uleb128 0x2
 31778 2111 91       		.byte	0x91
 31779 2112 6E       		.sleb128 -18
 31780 2113 26       		.uleb128 0x26
 31781 2114 69647800 		.ascii	"idx\000"
 31782 2118 01       		.byte	0x1
 31783 2119 820F     		.2byte	0xf82
 31784 211b 97000000 		.4byte	0x97
 31785 211f 02       		.uleb128 0x2
 31786 2120 91       		.byte	0x91
 31787 2121 6D       		.sleb128 -19
 31788 2122 23       		.uleb128 0x23
 31789 2123 350D0000 		.4byte	.LASF236
 31790 2127 01       		.byte	0x1
 31791 2128 830F     		.2byte	0xf83
 31792 212a A3000000 		.4byte	0xa3
 31793 212e 02       		.uleb128 0x2
 31794 212f 91       		.byte	0x91
 31795 2130 52       		.sleb128 -46
 31796 2131 00       		.byte	0
 31797 2132 09       		.uleb128 0x9
 31798 2133 97000000 		.4byte	0x97
 31799 2137 42210000 		.4byte	0x2142
 31800 213b 0A       		.uleb128 0xa
 31801 213c 18010000 		.4byte	0x118
 31802 2140 15       		.byte	0x15
 31803 2141 00       		.byte	0
 31804 2142 27       		.uleb128 0x27
 31805 2143 E7030000 		.4byte	.LASF341
 31806 2147 01       		.byte	0x1
 31807 2148 9C0F     		.2byte	0xf9c
 31808 214a 00000000 		.4byte	.LFB112
 31809 214e 5C000000 		.4byte	.LFE112-.LFB112
 31810 2152 01       		.uleb128 0x1
 31811 2153 9C       		.byte	0x9c
 31812 2154 75210000 		.4byte	0x2175
 31813 2158 23       		.uleb128 0x23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 681


 31814 2159 6C060000 		.4byte	.LASF229
 31815 215d 01       		.byte	0x1
 31816 215e 9F0F     		.2byte	0xf9f
 31817 2160 080C0000 		.4byte	0xc08
 31818 2164 02       		.uleb128 0x2
 31819 2165 91       		.byte	0x91
 31820 2166 68       		.sleb128 -24
 31821 2167 26       		.uleb128 0x26
 31822 2168 6900     		.ascii	"i\000"
 31823 216a 01       		.byte	0x1
 31824 216b A00F     		.2byte	0xfa0
 31825 216d 97000000 		.4byte	0x97
 31826 2171 02       		.uleb128 0x2
 31827 2172 91       		.byte	0x91
 31828 2173 77       		.sleb128 -9
 31829 2174 00       		.byte	0
 31830 2175 27       		.uleb128 0x27
 31831 2176 2B040000 		.4byte	.LASF342
 31832 217a 01       		.byte	0x1
 31833 217b B30F     		.2byte	0xfb3
 31834 217d 00000000 		.4byte	.LFB113
 31835 2181 C0000000 		.4byte	.LFE113-.LFB113
 31836 2185 01       		.uleb128 0x1
 31837 2186 9C       		.byte	0x9c
 31838 2187 C6210000 		.4byte	0x21c6
 31839 218b 23       		.uleb128 0x23
 31840 218c 6C060000 		.4byte	.LASF229
 31841 2190 01       		.byte	0x1
 31842 2191 B60F     		.2byte	0xfb6
 31843 2193 C6210000 		.4byte	0x21c6
 31844 2197 02       		.uleb128 0x2
 31845 2198 91       		.byte	0x91
 31846 2199 54       		.sleb128 -44
 31847 219a 26       		.uleb128 0x26
 31848 219b 6900     		.ascii	"i\000"
 31849 219d 01       		.byte	0x1
 31850 219e B70F     		.2byte	0xfb7
 31851 21a0 97000000 		.4byte	0x97
 31852 21a4 02       		.uleb128 0x2
 31853 21a5 91       		.byte	0x91
 31854 21a6 6F       		.sleb128 -17
 31855 21a7 26       		.uleb128 0x26
 31856 21a8 69647800 		.ascii	"idx\000"
 31857 21ac 01       		.byte	0x1
 31858 21ad B70F     		.2byte	0xfb7
 31859 21af 97000000 		.4byte	0x97
 31860 21b3 02       		.uleb128 0x2
 31861 21b4 91       		.byte	0x91
 31862 21b5 6E       		.sleb128 -18
 31863 21b6 23       		.uleb128 0x23
 31864 21b7 5F120000 		.4byte	.LASF235
 31865 21bb 01       		.byte	0x1
 31866 21bc B80F     		.2byte	0xfb8
 31867 21be C7000000 		.4byte	0xc7
 31868 21c2 02       		.uleb128 0x2
 31869 21c3 91       		.byte	0x91
 31870 21c4 52       		.sleb128 -46
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 682


 31871 21c5 00       		.byte	0
 31872 21c6 09       		.uleb128 0x9
 31873 21c7 97000000 		.4byte	0x97
 31874 21cb D6210000 		.4byte	0x21d6
 31875 21cf 0A       		.uleb128 0xa
 31876 21d0 18010000 		.4byte	0x118
 31877 21d4 19       		.byte	0x19
 31878 21d5 00       		.byte	0
 31879 21d6 22       		.uleb128 0x22
 31880 21d7 91030000 		.4byte	.LASF343
 31881 21db 01       		.byte	0x1
 31882 21dc CE0F     		.2byte	0xfce
 31883 21de 00000000 		.4byte	.LFB114
 31884 21e2 54010000 		.4byte	.LFE114-.LFB114
 31885 21e6 01       		.uleb128 0x1
 31886 21e7 9C       		.byte	0x9c
 31887 21e8 2B220000 		.4byte	0x222b
 31888 21ec 25       		.uleb128 0x25
 31889 21ed B7070000 		.4byte	.LASF344
 31890 21f1 01       		.byte	0x1
 31891 21f2 CE0F     		.2byte	0xfce
 31892 21f4 A3000000 		.4byte	0xa3
 31893 21f8 04       		.uleb128 0x4
 31894 21f9 91       		.byte	0x91
 31895 21fa 9EE37E   		.sleb128 -20066
 31896 21fd 26       		.uleb128 0x26
 31897 21fe 6900     		.ascii	"i\000"
 31898 2200 01       		.byte	0x1
 31899 2201 D00F     		.2byte	0xfd0
 31900 2203 97000000 		.4byte	0x97
 31901 2207 02       		.uleb128 0x2
 31902 2208 91       		.byte	0x91
 31903 2209 77       		.sleb128 -9
 31904 220a 23       		.uleb128 0x23
 31905 220b CB040000 		.4byte	.LASF345
 31906 220f 01       		.byte	0x1
 31907 2210 D10F     		.2byte	0xfd1
 31908 2212 84100000 		.4byte	0x1084
 31909 2216 02       		.uleb128 0x2
 31910 2217 91       		.byte	0x91
 31911 2218 44       		.sleb128 -60
 31912 2219 23       		.uleb128 0x23
 31913 221a E6080000 		.4byte	.LASF218
 31914 221e 01       		.byte	0x1
 31915 221f D20F     		.2byte	0xfd2
 31916 2221 AC0E0000 		.4byte	0xeac
 31917 2225 04       		.uleb128 0x4
 31918 2226 91       		.byte	0x91
 31919 2227 A4E37E   		.sleb128 -20060
 31920 222a 00       		.byte	0
 31921 222b 28       		.uleb128 0x28
 31922 222c 45010000 		.4byte	.LASF346
 31923 2230 01       		.byte	0x1
 31924 2231 EF0F     		.2byte	0xfef
 31925 2233 00000000 		.4byte	.LFB115
 31926 2237 12000000 		.4byte	.LFE115-.LFB115
 31927 223b 01       		.uleb128 0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 683


 31928 223c 9C       		.byte	0x9c
 31929 223d 51220000 		.4byte	0x2251
 31930 2241 25       		.uleb128 0x25
 31931 2242 0F070000 		.4byte	.LASF347
 31932 2246 01       		.byte	0x1
 31933 2247 EF0F     		.2byte	0xfef
 31934 2249 73000000 		.4byte	0x73
 31935 224d 02       		.uleb128 0x2
 31936 224e 91       		.byte	0x91
 31937 224f 74       		.sleb128 -12
 31938 2250 00       		.byte	0
 31939 2251 31       		.uleb128 0x31
 31940 2252 B20C0000 		.4byte	.LASF348
 31941 2256 01       		.byte	0x1
 31942 2257 3D10     		.2byte	0x103d
 31943 2259 97000000 		.4byte	0x97
 31944 225d 00000000 		.4byte	.LFB116
 31945 2261 64010000 		.4byte	.LFE116-.LFB116
 31946 2265 01       		.uleb128 0x1
 31947 2266 9C       		.byte	0x9c
 31948 2267 CC220000 		.4byte	0x22cc
 31949 226b 23       		.uleb128 0x23
 31950 226c 8B0E0000 		.4byte	.LASF349
 31951 2270 01       		.byte	0x1
 31952 2271 3F10     		.2byte	0x103f
 31953 2273 97000000 		.4byte	0x97
 31954 2277 05       		.uleb128 0x5
 31955 2278 03       		.byte	0x3
 31956 2279 0C000000 		.4byte	fsm_state.11538
 31957 227d 26       		.uleb128 0x26
 31958 227e 636E7400 		.ascii	"cnt\000"
 31959 2282 01       		.byte	0x1
 31960 2283 4010     		.2byte	0x1040
 31961 2285 D3000000 		.4byte	0xd3
 31962 2289 05       		.uleb128 0x5
 31963 228a 03       		.byte	0x3
 31964 228b 10000000 		.4byte	cnt.11539
 31965 228f 23       		.uleb128 0x23
 31966 2290 B8040000 		.4byte	.LASF350
 31967 2294 01       		.byte	0x1
 31968 2295 4110     		.2byte	0x1041
 31969 2297 D3000000 		.4byte	0xd3
 31970 229b 02       		.uleb128 0x2
 31971 229c 91       		.byte	0x91
 31972 229d 74       		.sleb128 -12
 31973 229e 23       		.uleb128 0x23
 31974 229f D40B0000 		.4byte	.LASF351
 31975 22a3 01       		.byte	0x1
 31976 22a4 4110     		.2byte	0x1041
 31977 22a6 D3000000 		.4byte	0xd3
 31978 22aa 02       		.uleb128 0x2
 31979 22ab 91       		.byte	0x91
 31980 22ac 70       		.sleb128 -16
 31981 22ad 23       		.uleb128 0x23
 31982 22ae DA000000 		.4byte	.LASF352
 31983 22b2 01       		.byte	0x1
 31984 22b3 4210     		.2byte	0x1042
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 684


 31985 22b5 D3000000 		.4byte	0xd3
 31986 22b9 02       		.uleb128 0x2
 31987 22ba 91       		.byte	0x91
 31988 22bb 6C       		.sleb128 -20
 31989 22bc 23       		.uleb128 0x23
 31990 22bd E6000000 		.4byte	.LASF353
 31991 22c1 01       		.byte	0x1
 31992 22c2 4210     		.2byte	0x1042
 31993 22c4 D3000000 		.4byte	0xd3
 31994 22c8 02       		.uleb128 0x2
 31995 22c9 91       		.byte	0x91
 31996 22ca 68       		.sleb128 -24
 31997 22cb 00       		.byte	0
 31998 22cc 28       		.uleb128 0x28
 31999 22cd 1E080000 		.4byte	.LASF354
 32000 22d1 01       		.byte	0x1
 32001 22d2 8F10     		.2byte	0x108f
 32002 22d4 00000000 		.4byte	.LFB117
 32003 22d8 12000000 		.4byte	.LFE117-.LFB117
 32004 22dc 01       		.uleb128 0x1
 32005 22dd 9C       		.byte	0x9c
 32006 22de F2220000 		.4byte	0x22f2
 32007 22e2 25       		.uleb128 0x25
 32008 22e3 0F070000 		.4byte	.LASF347
 32009 22e7 01       		.byte	0x1
 32010 22e8 8F10     		.2byte	0x108f
 32011 22ea 73000000 		.4byte	0x73
 32012 22ee 02       		.uleb128 0x2
 32013 22ef 91       		.byte	0x91
 32014 22f0 74       		.sleb128 -12
 32015 22f1 00       		.byte	0
 32016 22f2 28       		.uleb128 0x28
 32017 22f3 1F0E0000 		.4byte	.LASF355
 32018 22f7 01       		.byte	0x1
 32019 22f8 DB10     		.2byte	0x10db
 32020 22fa 00000000 		.4byte	.LFB118
 32021 22fe 1A000000 		.4byte	.LFE118-.LFB118
 32022 2302 01       		.uleb128 0x1
 32023 2303 9C       		.byte	0x9c
 32024 2304 27230000 		.4byte	0x2327
 32025 2308 25       		.uleb128 0x25
 32026 2309 6F030000 		.4byte	.LASF356
 32027 230d 01       		.byte	0x1
 32028 230e DB10     		.2byte	0x10db
 32029 2310 97000000 		.4byte	0x97
 32030 2314 02       		.uleb128 0x2
 32031 2315 91       		.byte	0x91
 32032 2316 77       		.sleb128 -9
 32033 2317 25       		.uleb128 0x25
 32034 2318 5A0B0000 		.4byte	.LASF186
 32035 231c 01       		.byte	0x1
 32036 231d DB10     		.2byte	0x10db
 32037 231f 97000000 		.4byte	0x97
 32038 2323 02       		.uleb128 0x2
 32039 2324 91       		.byte	0x91
 32040 2325 76       		.sleb128 -10
 32041 2326 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 685


 32042 2327 32       		.uleb128 0x32
 32043 2328 F2000000 		.4byte	.LASF358
 32044 232c 01       		.byte	0x1
 32045 232d 0511     		.2byte	0x1105
 32046 232f 00000000 		.4byte	.LFB119
 32047 2333 0C000000 		.4byte	.LFE119-.LFB119
 32048 2337 01       		.uleb128 0x1
 32049 2338 9C       		.byte	0x9c
 32050 2339 32       		.uleb128 0x32
 32051 233a 9B060000 		.4byte	.LASF359
 32052 233e 01       		.byte	0x1
 32053 233f 1B11     		.2byte	0x111b
 32054 2341 00000000 		.4byte	.LFB120
 32055 2345 0C000000 		.4byte	.LFE120-.LFB120
 32056 2349 01       		.uleb128 0x1
 32057 234a 9C       		.byte	0x9c
 32058 234b 33       		.uleb128 0x33
 32059 234c A8120000 		.4byte	.LASF360
 32060 2350 09       		.byte	0x9
 32061 2351 1207     		.2byte	0x712
 32062 2353 57230000 		.4byte	0x2357
 32063 2357 06       		.uleb128 0x6
 32064 2358 81000000 		.4byte	0x81
 32065 235c 09       		.uleb128 0x9
 32066 235d 22030000 		.4byte	0x322
 32067 2361 6C230000 		.4byte	0x236c
 32068 2365 0A       		.uleb128 0xa
 32069 2366 18010000 		.4byte	0x118
 32070 236a 01       		.byte	0x1
 32071 236b 00       		.byte	0
 32072 236c 33       		.uleb128 0x33
 32073 236d 6E140000 		.4byte	.LASF361
 32074 2371 08       		.byte	0x8
 32075 2372 1B02     		.2byte	0x21b
 32076 2374 5C230000 		.4byte	0x235c
 32077 2378 33       		.uleb128 0x33
 32078 2379 30050000 		.4byte	.LASF362
 32079 237d 08       		.byte	0x8
 32080 237e 1B02     		.2byte	0x21b
 32081 2380 5C230000 		.4byte	0x235c
 32082 2384 33       		.uleb128 0x33
 32083 2385 D80D0000 		.4byte	.LASF363
 32084 2389 08       		.byte	0x8
 32085 238a 1B02     		.2byte	0x21b
 32086 238c 5C230000 		.4byte	0x235c
 32087 2390 09       		.uleb128 0x9
 32088 2391 5F030000 		.4byte	0x35f
 32089 2395 A0230000 		.4byte	0x23a0
 32090 2399 0A       		.uleb128 0xa
 32091 239a 18010000 		.4byte	0x118
 32092 239e 01       		.byte	0x1
 32093 239f 00       		.byte	0
 32094 23a0 33       		.uleb128 0x33
 32095 23a1 1F070000 		.4byte	.LASF364
 32096 23a5 08       		.byte	0x8
 32097 23a6 1C02     		.2byte	0x21c
 32098 23a8 90230000 		.4byte	0x2390
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 686


 32099 23ac 33       		.uleb128 0x33
 32100 23ad C1140000 		.4byte	.LASF365
 32101 23b1 08       		.byte	0x8
 32102 23b2 1C02     		.2byte	0x21c
 32103 23b4 90230000 		.4byte	0x2390
 32104 23b8 33       		.uleb128 0x33
 32105 23b9 38140000 		.4byte	.LASF366
 32106 23bd 08       		.byte	0x8
 32107 23be 1D02     		.2byte	0x21d
 32108 23c0 E0030000 		.4byte	0x3e0
 32109 23c4 33       		.uleb128 0x33
 32110 23c5 5B110000 		.4byte	.LASF367
 32111 23c9 08       		.byte	0x8
 32112 23ca 1D02     		.2byte	0x21d
 32113 23cc E0030000 		.4byte	0x3e0
 32114 23d0 33       		.uleb128 0x33
 32115 23d1 11110000 		.4byte	.LASF368
 32116 23d5 08       		.byte	0x8
 32117 23d6 1E02     		.2byte	0x21e
 32118 23d8 31040000 		.4byte	0x431
 32119 23dc 33       		.uleb128 0x33
 32120 23dd 0D010000 		.4byte	.LASF369
 32121 23e1 08       		.byte	0x8
 32122 23e2 1F02     		.2byte	0x21f
 32123 23e4 4A040000 		.4byte	0x44a
 32124 23e8 33       		.uleb128 0x33
 32125 23e9 40110000 		.4byte	.LASF370
 32126 23ed 08       		.byte	0x8
 32127 23ee 2002     		.2byte	0x220
 32128 23f0 230B0000 		.4byte	0xb23
 32129 23f4 33       		.uleb128 0x33
 32130 23f5 B60B0000 		.4byte	.LASF371
 32131 23f9 08       		.byte	0x8
 32132 23fa 2002     		.2byte	0x220
 32133 23fc 230B0000 		.4byte	0xb23
 32134 2400 33       		.uleb128 0x33
 32135 2401 930A0000 		.4byte	.LASF372
 32136 2405 08       		.byte	0x8
 32137 2406 2102     		.2byte	0x221
 32138 2408 D40C0000 		.4byte	0xcd4
 32139 240c 33       		.uleb128 0x33
 32140 240d 4C030000 		.4byte	.LASF373
 32141 2411 08       		.byte	0x8
 32142 2412 2602     		.2byte	0x226
 32143 2414 A3000000 		.4byte	0xa3
 32144 2418 33       		.uleb128 0x33
 32145 2419 1E0F0000 		.4byte	.LASF374
 32146 241d 08       		.byte	0x8
 32147 241e 2702     		.2byte	0x227
 32148 2420 A3000000 		.4byte	0xa3
 32149 2424 33       		.uleb128 0x33
 32150 2425 500F0000 		.4byte	.LASF375
 32151 2429 08       		.byte	0x8
 32152 242a 2A02     		.2byte	0x22a
 32153 242c 11040000 		.4byte	0x411
 32154 2430 33       		.uleb128 0x33
 32155 2431 3F130000 		.4byte	.LASF376
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 687


 32156 2435 08       		.byte	0x8
 32157 2436 2B02     		.2byte	0x22b
 32158 2438 80080000 		.4byte	0x880
 32159 243c 33       		.uleb128 0x33
 32160 243d C8120000 		.4byte	.LASF377
 32161 2441 08       		.byte	0x8
 32162 2442 2E02     		.2byte	0x22e
 32163 2444 11040000 		.4byte	0x411
 32164 2448 33       		.uleb128 0x33
 32165 2449 630B0000 		.4byte	.LASF378
 32166 244d 08       		.byte	0x8
 32167 244e 3702     		.2byte	0x237
 32168 2450 80080000 		.4byte	0x880
 32169 2454 33       		.uleb128 0x33
 32170 2455 F8040000 		.4byte	.LASF379
 32171 2459 08       		.byte	0x8
 32172 245a 3902     		.2byte	0x239
 32173 245c 97000000 		.4byte	0x97
 32174 2460 33       		.uleb128 0x33
 32175 2461 E80A0000 		.4byte	.LASF380
 32176 2465 08       		.byte	0x8
 32177 2466 4002     		.2byte	0x240
 32178 2468 97000000 		.4byte	0x97
 32179 246c 33       		.uleb128 0x33
 32180 246d 0E080000 		.4byte	.LASF381
 32181 2471 08       		.byte	0x8
 32182 2472 4102     		.2byte	0x241
 32183 2474 97000000 		.4byte	0x97
 32184 2478 09       		.uleb128 0x9
 32185 2479 C7000000 		.4byte	0xc7
 32186 247d 88240000 		.4byte	0x2488
 32187 2481 0A       		.uleb128 0xa
 32188 2482 18010000 		.4byte	0x118
 32189 2486 0B       		.byte	0xb
 32190 2487 00       		.byte	0
 32191 2488 33       		.uleb128 0x33
 32192 2489 F0040000 		.4byte	.LASF382
 32193 248d 08       		.byte	0x8
 32194 248e 4402     		.2byte	0x244
 32195 2490 78240000 		.4byte	0x2478
 32196 2494 33       		.uleb128 0x33
 32197 2495 7A140000 		.4byte	.LASF383
 32198 2499 08       		.byte	0x8
 32199 249a 4502     		.2byte	0x245
 32200 249c 97000000 		.4byte	0x97
 32201 24a0 09       		.uleb128 0x9
 32202 24a1 AF000000 		.4byte	0xaf
 32203 24a5 B6240000 		.4byte	0x24b6
 32204 24a9 0A       		.uleb128 0xa
 32205 24aa 18010000 		.4byte	0x118
 32206 24ae 01       		.byte	0x1
 32207 24af 0A       		.uleb128 0xa
 32208 24b0 18010000 		.4byte	0x118
 32209 24b4 04       		.byte	0x4
 32210 24b5 00       		.byte	0
 32211 24b6 33       		.uleb128 0x33
 32212 24b7 4D070000 		.4byte	.LASF384
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 688


 32213 24bb 08       		.byte	0x8
 32214 24bc 4B02     		.2byte	0x24b
 32215 24be A0240000 		.4byte	0x24a0
 32216 24c2 33       		.uleb128 0x33
 32217 24c3 3C100000 		.4byte	.LASF385
 32218 24c7 08       		.byte	0x8
 32219 24c8 4C02     		.2byte	0x24c
 32220 24ca 80080000 		.4byte	0x880
 32221 24ce 09       		.uleb128 0x9
 32222 24cf A3000000 		.4byte	0xa3
 32223 24d3 E4240000 		.4byte	0x24e4
 32224 24d7 0A       		.uleb128 0xa
 32225 24d8 18010000 		.4byte	0x118
 32226 24dc 01       		.byte	0x1
 32227 24dd 0A       		.uleb128 0xa
 32228 24de 18010000 		.4byte	0x118
 32229 24e2 04       		.byte	0x4
 32230 24e3 00       		.byte	0
 32231 24e4 33       		.uleb128 0x33
 32232 24e5 68130000 		.4byte	.LASF386
 32233 24e9 08       		.byte	0x8
 32234 24ea 4D02     		.2byte	0x24d
 32235 24ec CE240000 		.4byte	0x24ce
 32236 24f0 09       		.uleb128 0x9
 32237 24f1 97000000 		.4byte	0x97
 32238 24f5 06250000 		.4byte	0x2506
 32239 24f9 0A       		.uleb128 0xa
 32240 24fa 18010000 		.4byte	0x118
 32241 24fe 01       		.byte	0x1
 32242 24ff 0A       		.uleb128 0xa
 32243 2500 18010000 		.4byte	0x118
 32244 2504 04       		.byte	0x4
 32245 2505 00       		.byte	0
 32246 2506 33       		.uleb128 0x33
 32247 2507 26070000 		.4byte	.LASF387
 32248 250b 08       		.byte	0x8
 32249 250c 4E02     		.2byte	0x24e
 32250 250e F0240000 		.4byte	0x24f0
 32251 2512 33       		.uleb128 0x33
 32252 2513 82060000 		.4byte	.LASF388
 32253 2517 08       		.byte	0x8
 32254 2518 5502     		.2byte	0x255
 32255 251a 1C030000 		.4byte	0x31c
 32256 251e 33       		.uleb128 0x33
 32257 251f D60F0000 		.4byte	.LASF389
 32258 2523 08       		.byte	0x8
 32259 2524 5602     		.2byte	0x256
 32260 2526 74160000 		.4byte	0x1674
 32261 252a 33       		.uleb128 0x33
 32262 252b 3B040000 		.4byte	.LASF390
 32263 252f 08       		.byte	0x8
 32264 2530 5702     		.2byte	0x257
 32265 2532 74160000 		.4byte	0x1674
 32266 2536 33       		.uleb128 0x33
 32267 2537 E6110000 		.4byte	.LASF391
 32268 253b 08       		.byte	0x8
 32269 253c 5C02     		.2byte	0x25c
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 689


 32270 253e 97000000 		.4byte	0x97
 32271 2542 33       		.uleb128 0x33
 32272 2543 A5130000 		.4byte	.LASF392
 32273 2547 08       		.byte	0x8
 32274 2548 5D02     		.2byte	0x25d
 32275 254a F1070000 		.4byte	0x7f1
 32276 254e 33       		.uleb128 0x33
 32277 254f 99120000 		.4byte	.LASF393
 32278 2553 08       		.byte	0x8
 32279 2554 5E02     		.2byte	0x25e
 32280 2556 73000000 		.4byte	0x73
 32281 255a 09       		.uleb128 0x9
 32282 255b 73000000 		.4byte	0x73
 32283 255f 6A250000 		.4byte	0x256a
 32284 2563 0A       		.uleb128 0xa
 32285 2564 18010000 		.4byte	0x118
 32286 2568 04       		.byte	0x4
 32287 2569 00       		.byte	0
 32288 256a 33       		.uleb128 0x33
 32289 256b 080D0000 		.4byte	.LASF394
 32290 256f 08       		.byte	0x8
 32291 2570 5F02     		.2byte	0x25f
 32292 2572 5A250000 		.4byte	0x255a
 32293 2576 09       		.uleb128 0x9
 32294 2577 580C0000 		.4byte	0xc58
 32295 257b 86250000 		.4byte	0x2586
 32296 257f 0A       		.uleb128 0xa
 32297 2580 18010000 		.4byte	0x118
 32298 2584 04       		.byte	0x4
 32299 2585 00       		.byte	0
 32300 2586 33       		.uleb128 0x33
 32301 2587 C2050000 		.4byte	.LASF395
 32302 258b 08       		.byte	0x8
 32303 258c 6002     		.2byte	0x260
 32304 258e 76250000 		.4byte	0x2576
 32305 2592 09       		.uleb128 0x9
 32306 2593 97000000 		.4byte	0x97
 32307 2597 A8250000 		.4byte	0x25a8
 32308 259b 0A       		.uleb128 0xa
 32309 259c 18010000 		.4byte	0x118
 32310 25a0 04       		.byte	0x4
 32311 25a1 0A       		.uleb128 0xa
 32312 25a2 18010000 		.4byte	0x118
 32313 25a6 02       		.byte	0x2
 32314 25a7 00       		.byte	0
 32315 25a8 33       		.uleb128 0x33
 32316 25a9 200C0000 		.4byte	.LASF396
 32317 25ad 08       		.byte	0x8
 32318 25ae 6402     		.2byte	0x264
 32319 25b0 92250000 		.4byte	0x2592
 32320 25b4 33       		.uleb128 0x33
 32321 25b5 A0140000 		.4byte	.LASF397
 32322 25b9 08       		.byte	0x8
 32323 25ba 6902     		.2byte	0x269
 32324 25bc 97000000 		.4byte	0x97
 32325 25c0 09       		.uleb128 0x9
 32326 25c1 A3000000 		.4byte	0xa3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 690


 32327 25c5 D7250000 		.4byte	0x25d7
 32328 25c9 24       		.uleb128 0x24
 32329 25ca 18010000 		.4byte	0x118
 32330 25ce 5702     		.2byte	0x257
 32331 25d0 0A       		.uleb128 0xa
 32332 25d1 18010000 		.4byte	0x118
 32333 25d5 01       		.byte	0x1
 32334 25d6 00       		.byte	0
 32335 25d7 33       		.uleb128 0x33
 32336 25d8 69120000 		.4byte	.LASF398
 32337 25dc 08       		.byte	0x8
 32338 25dd 6C02     		.2byte	0x26c
 32339 25df C0250000 		.4byte	0x25c0
 32340 25e3 33       		.uleb128 0x33
 32341 25e4 450B0000 		.4byte	.LASF399
 32342 25e8 08       		.byte	0x8
 32343 25e9 6D02     		.2byte	0x26d
 32344 25eb AF000000 		.4byte	0xaf
 32345 25ef 34       		.uleb128 0x34
 32346 25f0 75120000 		.4byte	.LASF400
 32347 25f4 01       		.byte	0x1
 32348 25f5 33       		.byte	0x33
 32349 25f6 00260000 		.4byte	0x2600
 32350 25fa 05       		.uleb128 0x5
 32351 25fb 03       		.byte	0x3
 32352 25fc 00000000 		.4byte	EEPROM_ADDR
 32353 2600 07       		.uleb128 0x7
 32354 2601 04       		.byte	0x4
 32355 2602 00010000 		.4byte	0x100
 32356 2606 00       		.byte	0
 32357              		.section	.debug_abbrev,"",%progbits
 32358              	.Ldebug_abbrev0:
 32359 0000 01       		.uleb128 0x1
 32360 0001 11       		.uleb128 0x11
 32361 0002 01       		.byte	0x1
 32362 0003 25       		.uleb128 0x25
 32363 0004 0E       		.uleb128 0xe
 32364 0005 13       		.uleb128 0x13
 32365 0006 0B       		.uleb128 0xb
 32366 0007 03       		.uleb128 0x3
 32367 0008 0E       		.uleb128 0xe
 32368 0009 1B       		.uleb128 0x1b
 32369 000a 0E       		.uleb128 0xe
 32370 000b 55       		.uleb128 0x55
 32371 000c 17       		.uleb128 0x17
 32372 000d 11       		.uleb128 0x11
 32373 000e 01       		.uleb128 0x1
 32374 000f 10       		.uleb128 0x10
 32375 0010 17       		.uleb128 0x17
 32376 0011 00       		.byte	0
 32377 0012 00       		.byte	0
 32378 0013 02       		.uleb128 0x2
 32379 0014 24       		.uleb128 0x24
 32380 0015 00       		.byte	0
 32381 0016 0B       		.uleb128 0xb
 32382 0017 0B       		.uleb128 0xb
 32383 0018 3E       		.uleb128 0x3e
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 691


 32384 0019 0B       		.uleb128 0xb
 32385 001a 03       		.uleb128 0x3
 32386 001b 0E       		.uleb128 0xe
 32387 001c 00       		.byte	0
 32388 001d 00       		.byte	0
 32389 001e 03       		.uleb128 0x3
 32390 001f 16       		.uleb128 0x16
 32391 0020 00       		.byte	0
 32392 0021 03       		.uleb128 0x3
 32393 0022 0E       		.uleb128 0xe
 32394 0023 3A       		.uleb128 0x3a
 32395 0024 0B       		.uleb128 0xb
 32396 0025 3B       		.uleb128 0x3b
 32397 0026 0B       		.uleb128 0xb
 32398 0027 49       		.uleb128 0x49
 32399 0028 13       		.uleb128 0x13
 32400 0029 00       		.byte	0
 32401 002a 00       		.byte	0
 32402 002b 04       		.uleb128 0x4
 32403 002c 24       		.uleb128 0x24
 32404 002d 00       		.byte	0
 32405 002e 0B       		.uleb128 0xb
 32406 002f 0B       		.uleb128 0xb
 32407 0030 3E       		.uleb128 0x3e
 32408 0031 0B       		.uleb128 0xb
 32409 0032 03       		.uleb128 0x3
 32410 0033 08       		.uleb128 0x8
 32411 0034 00       		.byte	0
 32412 0035 00       		.byte	0
 32413 0036 05       		.uleb128 0x5
 32414 0037 16       		.uleb128 0x16
 32415 0038 00       		.byte	0
 32416 0039 03       		.uleb128 0x3
 32417 003a 0E       		.uleb128 0xe
 32418 003b 3A       		.uleb128 0x3a
 32419 003c 0B       		.uleb128 0xb
 32420 003d 3B       		.uleb128 0x3b
 32421 003e 05       		.uleb128 0x5
 32422 003f 49       		.uleb128 0x49
 32423 0040 13       		.uleb128 0x13
 32424 0041 00       		.byte	0
 32425 0042 00       		.byte	0
 32426 0043 06       		.uleb128 0x6
 32427 0044 35       		.uleb128 0x35
 32428 0045 00       		.byte	0
 32429 0046 49       		.uleb128 0x49
 32430 0047 13       		.uleb128 0x13
 32431 0048 00       		.byte	0
 32432 0049 00       		.byte	0
 32433 004a 07       		.uleb128 0x7
 32434 004b 0F       		.uleb128 0xf
 32435 004c 00       		.byte	0
 32436 004d 0B       		.uleb128 0xb
 32437 004e 0B       		.uleb128 0xb
 32438 004f 49       		.uleb128 0x49
 32439 0050 13       		.uleb128 0x13
 32440 0051 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 692


 32441 0052 00       		.byte	0
 32442 0053 08       		.uleb128 0x8
 32443 0054 26       		.uleb128 0x26
 32444 0055 00       		.byte	0
 32445 0056 49       		.uleb128 0x49
 32446 0057 13       		.uleb128 0x13
 32447 0058 00       		.byte	0
 32448 0059 00       		.byte	0
 32449 005a 09       		.uleb128 0x9
 32450 005b 01       		.uleb128 0x1
 32451 005c 01       		.byte	0x1
 32452 005d 49       		.uleb128 0x49
 32453 005e 13       		.uleb128 0x13
 32454 005f 01       		.uleb128 0x1
 32455 0060 13       		.uleb128 0x13
 32456 0061 00       		.byte	0
 32457 0062 00       		.byte	0
 32458 0063 0A       		.uleb128 0xa
 32459 0064 21       		.uleb128 0x21
 32460 0065 00       		.byte	0
 32461 0066 49       		.uleb128 0x49
 32462 0067 13       		.uleb128 0x13
 32463 0068 2F       		.uleb128 0x2f
 32464 0069 0B       		.uleb128 0xb
 32465 006a 00       		.byte	0
 32466 006b 00       		.byte	0
 32467 006c 0B       		.uleb128 0xb
 32468 006d 04       		.uleb128 0x4
 32469 006e 01       		.byte	0x1
 32470 006f 03       		.uleb128 0x3
 32471 0070 0E       		.uleb128 0xe
 32472 0071 0B       		.uleb128 0xb
 32473 0072 0B       		.uleb128 0xb
 32474 0073 49       		.uleb128 0x49
 32475 0074 13       		.uleb128 0x13
 32476 0075 3A       		.uleb128 0x3a
 32477 0076 0B       		.uleb128 0xb
 32478 0077 3B       		.uleb128 0x3b
 32479 0078 0B       		.uleb128 0xb
 32480 0079 01       		.uleb128 0x1
 32481 007a 13       		.uleb128 0x13
 32482 007b 00       		.byte	0
 32483 007c 00       		.byte	0
 32484 007d 0C       		.uleb128 0xc
 32485 007e 28       		.uleb128 0x28
 32486 007f 00       		.byte	0
 32487 0080 03       		.uleb128 0x3
 32488 0081 0E       		.uleb128 0xe
 32489 0082 1C       		.uleb128 0x1c
 32490 0083 0B       		.uleb128 0xb
 32491 0084 00       		.byte	0
 32492 0085 00       		.byte	0
 32493 0086 0D       		.uleb128 0xd
 32494 0087 13       		.uleb128 0x13
 32495 0088 00       		.byte	0
 32496 0089 03       		.uleb128 0x3
 32497 008a 0E       		.uleb128 0xe
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 693


 32498 008b 3C       		.uleb128 0x3c
 32499 008c 19       		.uleb128 0x19
 32500 008d 00       		.byte	0
 32501 008e 00       		.byte	0
 32502 008f 0E       		.uleb128 0xe
 32503 0090 13       		.uleb128 0x13
 32504 0091 01       		.byte	0x1
 32505 0092 03       		.uleb128 0x3
 32506 0093 0E       		.uleb128 0xe
 32507 0094 0B       		.uleb128 0xb
 32508 0095 0B       		.uleb128 0xb
 32509 0096 3A       		.uleb128 0x3a
 32510 0097 0B       		.uleb128 0xb
 32511 0098 3B       		.uleb128 0x3b
 32512 0099 0B       		.uleb128 0xb
 32513 009a 01       		.uleb128 0x1
 32514 009b 13       		.uleb128 0x13
 32515 009c 00       		.byte	0
 32516 009d 00       		.byte	0
 32517 009e 0F       		.uleb128 0xf
 32518 009f 0D       		.uleb128 0xd
 32519 00a0 00       		.byte	0
 32520 00a1 03       		.uleb128 0x3
 32521 00a2 08       		.uleb128 0x8
 32522 00a3 3A       		.uleb128 0x3a
 32523 00a4 0B       		.uleb128 0xb
 32524 00a5 3B       		.uleb128 0x3b
 32525 00a6 0B       		.uleb128 0xb
 32526 00a7 49       		.uleb128 0x49
 32527 00a8 13       		.uleb128 0x13
 32528 00a9 38       		.uleb128 0x38
 32529 00aa 0B       		.uleb128 0xb
 32530 00ab 00       		.byte	0
 32531 00ac 00       		.byte	0
 32532 00ad 10       		.uleb128 0x10
 32533 00ae 0D       		.uleb128 0xd
 32534 00af 00       		.byte	0
 32535 00b0 03       		.uleb128 0x3
 32536 00b1 0E       		.uleb128 0xe
 32537 00b2 3A       		.uleb128 0x3a
 32538 00b3 0B       		.uleb128 0xb
 32539 00b4 3B       		.uleb128 0x3b
 32540 00b5 0B       		.uleb128 0xb
 32541 00b6 49       		.uleb128 0x49
 32542 00b7 13       		.uleb128 0x13
 32543 00b8 38       		.uleb128 0x38
 32544 00b9 0B       		.uleb128 0xb
 32545 00ba 00       		.byte	0
 32546 00bb 00       		.byte	0
 32547 00bc 11       		.uleb128 0x11
 32548 00bd 13       		.uleb128 0x13
 32549 00be 01       		.byte	0x1
 32550 00bf 03       		.uleb128 0x3
 32551 00c0 0E       		.uleb128 0xe
 32552 00c1 0B       		.uleb128 0xb
 32553 00c2 0B       		.uleb128 0xb
 32554 00c3 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 694


 32555 00c4 0B       		.uleb128 0xb
 32556 00c5 3B       		.uleb128 0x3b
 32557 00c6 05       		.uleb128 0x5
 32558 00c7 01       		.uleb128 0x1
 32559 00c8 13       		.uleb128 0x13
 32560 00c9 00       		.byte	0
 32561 00ca 00       		.byte	0
 32562 00cb 12       		.uleb128 0x12
 32563 00cc 0D       		.uleb128 0xd
 32564 00cd 00       		.byte	0
 32565 00ce 03       		.uleb128 0x3
 32566 00cf 0E       		.uleb128 0xe
 32567 00d0 3A       		.uleb128 0x3a
 32568 00d1 0B       		.uleb128 0xb
 32569 00d2 3B       		.uleb128 0x3b
 32570 00d3 05       		.uleb128 0x5
 32571 00d4 49       		.uleb128 0x49
 32572 00d5 13       		.uleb128 0x13
 32573 00d6 38       		.uleb128 0x38
 32574 00d7 0B       		.uleb128 0xb
 32575 00d8 00       		.byte	0
 32576 00d9 00       		.byte	0
 32577 00da 13       		.uleb128 0x13
 32578 00db 0D       		.uleb128 0xd
 32579 00dc 00       		.byte	0
 32580 00dd 03       		.uleb128 0x3
 32581 00de 08       		.uleb128 0x8
 32582 00df 3A       		.uleb128 0x3a
 32583 00e0 0B       		.uleb128 0xb
 32584 00e1 3B       		.uleb128 0x3b
 32585 00e2 05       		.uleb128 0x5
 32586 00e3 49       		.uleb128 0x49
 32587 00e4 13       		.uleb128 0x13
 32588 00e5 38       		.uleb128 0x38
 32589 00e6 0B       		.uleb128 0xb
 32590 00e7 00       		.byte	0
 32591 00e8 00       		.byte	0
 32592 00e9 14       		.uleb128 0x14
 32593 00ea 13       		.uleb128 0x13
 32594 00eb 01       		.byte	0x1
 32595 00ec 03       		.uleb128 0x3
 32596 00ed 0E       		.uleb128 0xe
 32597 00ee 0B       		.uleb128 0xb
 32598 00ef 05       		.uleb128 0x5
 32599 00f0 3A       		.uleb128 0x3a
 32600 00f1 0B       		.uleb128 0xb
 32601 00f2 3B       		.uleb128 0x3b
 32602 00f3 05       		.uleb128 0x5
 32603 00f4 01       		.uleb128 0x1
 32604 00f5 13       		.uleb128 0x13
 32605 00f6 00       		.byte	0
 32606 00f7 00       		.byte	0
 32607 00f8 15       		.uleb128 0x15
 32608 00f9 0D       		.uleb128 0xd
 32609 00fa 00       		.byte	0
 32610 00fb 03       		.uleb128 0x3
 32611 00fc 08       		.uleb128 0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 695


 32612 00fd 3A       		.uleb128 0x3a
 32613 00fe 0B       		.uleb128 0xb
 32614 00ff 3B       		.uleb128 0x3b
 32615 0100 05       		.uleb128 0x5
 32616 0101 49       		.uleb128 0x49
 32617 0102 13       		.uleb128 0x13
 32618 0103 38       		.uleb128 0x38
 32619 0104 05       		.uleb128 0x5
 32620 0105 00       		.byte	0
 32621 0106 00       		.byte	0
 32622 0107 16       		.uleb128 0x16
 32623 0108 0D       		.uleb128 0xd
 32624 0109 00       		.byte	0
 32625 010a 03       		.uleb128 0x3
 32626 010b 0E       		.uleb128 0xe
 32627 010c 3A       		.uleb128 0x3a
 32628 010d 0B       		.uleb128 0xb
 32629 010e 3B       		.uleb128 0x3b
 32630 010f 05       		.uleb128 0x5
 32631 0110 49       		.uleb128 0x49
 32632 0111 13       		.uleb128 0x13
 32633 0112 38       		.uleb128 0x38
 32634 0113 05       		.uleb128 0x5
 32635 0114 00       		.byte	0
 32636 0115 00       		.byte	0
 32637 0116 17       		.uleb128 0x17
 32638 0117 2E       		.uleb128 0x2e
 32639 0118 01       		.byte	0x1
 32640 0119 03       		.uleb128 0x3
 32641 011a 0E       		.uleb128 0xe
 32642 011b 3A       		.uleb128 0x3a
 32643 011c 0B       		.uleb128 0xb
 32644 011d 3B       		.uleb128 0x3b
 32645 011e 05       		.uleb128 0x5
 32646 011f 27       		.uleb128 0x27
 32647 0120 19       		.uleb128 0x19
 32648 0121 49       		.uleb128 0x49
 32649 0122 13       		.uleb128 0x13
 32650 0123 20       		.uleb128 0x20
 32651 0124 0B       		.uleb128 0xb
 32652 0125 01       		.uleb128 0x1
 32653 0126 13       		.uleb128 0x13
 32654 0127 00       		.byte	0
 32655 0128 00       		.byte	0
 32656 0129 18       		.uleb128 0x18
 32657 012a 05       		.uleb128 0x5
 32658 012b 00       		.byte	0
 32659 012c 03       		.uleb128 0x3
 32660 012d 0E       		.uleb128 0xe
 32661 012e 3A       		.uleb128 0x3a
 32662 012f 0B       		.uleb128 0xb
 32663 0130 3B       		.uleb128 0x3b
 32664 0131 05       		.uleb128 0x5
 32665 0132 49       		.uleb128 0x49
 32666 0133 13       		.uleb128 0x13
 32667 0134 00       		.byte	0
 32668 0135 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 696


 32669 0136 19       		.uleb128 0x19
 32670 0137 34       		.uleb128 0x34
 32671 0138 00       		.byte	0
 32672 0139 03       		.uleb128 0x3
 32673 013a 0E       		.uleb128 0xe
 32674 013b 3A       		.uleb128 0x3a
 32675 013c 0B       		.uleb128 0xb
 32676 013d 3B       		.uleb128 0x3b
 32677 013e 05       		.uleb128 0x5
 32678 013f 49       		.uleb128 0x49
 32679 0140 13       		.uleb128 0x13
 32680 0141 00       		.byte	0
 32681 0142 00       		.byte	0
 32682 0143 1A       		.uleb128 0x1a
 32683 0144 2E       		.uleb128 0x2e
 32684 0145 01       		.byte	0x1
 32685 0146 3F       		.uleb128 0x3f
 32686 0147 19       		.uleb128 0x19
 32687 0148 03       		.uleb128 0x3
 32688 0149 0E       		.uleb128 0xe
 32689 014a 3A       		.uleb128 0x3a
 32690 014b 0B       		.uleb128 0xb
 32691 014c 3B       		.uleb128 0x3b
 32692 014d 0B       		.uleb128 0xb
 32693 014e 27       		.uleb128 0x27
 32694 014f 19       		.uleb128 0x19
 32695 0150 11       		.uleb128 0x11
 32696 0151 01       		.uleb128 0x1
 32697 0152 12       		.uleb128 0x12
 32698 0153 06       		.uleb128 0x6
 32699 0154 40       		.uleb128 0x40
 32700 0155 18       		.uleb128 0x18
 32701 0156 9642     		.uleb128 0x2116
 32702 0158 19       		.uleb128 0x19
 32703 0159 01       		.uleb128 0x1
 32704 015a 13       		.uleb128 0x13
 32705 015b 00       		.byte	0
 32706 015c 00       		.byte	0
 32707 015d 1B       		.uleb128 0x1b
 32708 015e 34       		.uleb128 0x34
 32709 015f 00       		.byte	0
 32710 0160 03       		.uleb128 0x3
 32711 0161 0E       		.uleb128 0xe
 32712 0162 3A       		.uleb128 0x3a
 32713 0163 0B       		.uleb128 0xb
 32714 0164 3B       		.uleb128 0x3b
 32715 0165 0B       		.uleb128 0xb
 32716 0166 49       		.uleb128 0x49
 32717 0167 13       		.uleb128 0x13
 32718 0168 02       		.uleb128 0x2
 32719 0169 18       		.uleb128 0x18
 32720 016a 00       		.byte	0
 32721 016b 00       		.byte	0
 32722 016c 1C       		.uleb128 0x1c
 32723 016d 1D       		.uleb128 0x1d
 32724 016e 01       		.byte	0x1
 32725 016f 31       		.uleb128 0x31
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 697


 32726 0170 13       		.uleb128 0x13
 32727 0171 11       		.uleb128 0x11
 32728 0172 01       		.uleb128 0x1
 32729 0173 12       		.uleb128 0x12
 32730 0174 06       		.uleb128 0x6
 32731 0175 58       		.uleb128 0x58
 32732 0176 0B       		.uleb128 0xb
 32733 0177 59       		.uleb128 0x59
 32734 0178 0B       		.uleb128 0xb
 32735 0179 01       		.uleb128 0x1
 32736 017a 13       		.uleb128 0x13
 32737 017b 00       		.byte	0
 32738 017c 00       		.byte	0
 32739 017d 1D       		.uleb128 0x1d
 32740 017e 05       		.uleb128 0x5
 32741 017f 00       		.byte	0
 32742 0180 31       		.uleb128 0x31
 32743 0181 13       		.uleb128 0x13
 32744 0182 02       		.uleb128 0x2
 32745 0183 18       		.uleb128 0x18
 32746 0184 00       		.byte	0
 32747 0185 00       		.byte	0
 32748 0186 1E       		.uleb128 0x1e
 32749 0187 0B       		.uleb128 0xb
 32750 0188 01       		.byte	0x1
 32751 0189 11       		.uleb128 0x11
 32752 018a 01       		.uleb128 0x1
 32753 018b 12       		.uleb128 0x12
 32754 018c 06       		.uleb128 0x6
 32755 018d 00       		.byte	0
 32756 018e 00       		.byte	0
 32757 018f 1F       		.uleb128 0x1f
 32758 0190 34       		.uleb128 0x34
 32759 0191 00       		.byte	0
 32760 0192 31       		.uleb128 0x31
 32761 0193 13       		.uleb128 0x13
 32762 0194 02       		.uleb128 0x2
 32763 0195 18       		.uleb128 0x18
 32764 0196 00       		.byte	0
 32765 0197 00       		.byte	0
 32766 0198 20       		.uleb128 0x20
 32767 0199 1D       		.uleb128 0x1d
 32768 019a 01       		.byte	0x1
 32769 019b 31       		.uleb128 0x31
 32770 019c 13       		.uleb128 0x13
 32771 019d 11       		.uleb128 0x11
 32772 019e 01       		.uleb128 0x1
 32773 019f 12       		.uleb128 0x12
 32774 01a0 06       		.uleb128 0x6
 32775 01a1 58       		.uleb128 0x58
 32776 01a2 0B       		.uleb128 0xb
 32777 01a3 59       		.uleb128 0x59
 32778 01a4 05       		.uleb128 0x5
 32779 01a5 01       		.uleb128 0x1
 32780 01a6 13       		.uleb128 0x13
 32781 01a7 00       		.byte	0
 32782 01a8 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 698


 32783 01a9 21       		.uleb128 0x21
 32784 01aa 1D       		.uleb128 0x1d
 32785 01ab 01       		.byte	0x1
 32786 01ac 31       		.uleb128 0x31
 32787 01ad 13       		.uleb128 0x13
 32788 01ae 11       		.uleb128 0x11
 32789 01af 01       		.uleb128 0x1
 32790 01b0 12       		.uleb128 0x12
 32791 01b1 06       		.uleb128 0x6
 32792 01b2 58       		.uleb128 0x58
 32793 01b3 0B       		.uleb128 0xb
 32794 01b4 59       		.uleb128 0x59
 32795 01b5 05       		.uleb128 0x5
 32796 01b6 00       		.byte	0
 32797 01b7 00       		.byte	0
 32798 01b8 22       		.uleb128 0x22
 32799 01b9 2E       		.uleb128 0x2e
 32800 01ba 01       		.byte	0x1
 32801 01bb 3F       		.uleb128 0x3f
 32802 01bc 19       		.uleb128 0x19
 32803 01bd 03       		.uleb128 0x3
 32804 01be 0E       		.uleb128 0xe
 32805 01bf 3A       		.uleb128 0x3a
 32806 01c0 0B       		.uleb128 0xb
 32807 01c1 3B       		.uleb128 0x3b
 32808 01c2 05       		.uleb128 0x5
 32809 01c3 27       		.uleb128 0x27
 32810 01c4 19       		.uleb128 0x19
 32811 01c5 11       		.uleb128 0x11
 32812 01c6 01       		.uleb128 0x1
 32813 01c7 12       		.uleb128 0x12
 32814 01c8 06       		.uleb128 0x6
 32815 01c9 40       		.uleb128 0x40
 32816 01ca 18       		.uleb128 0x18
 32817 01cb 9642     		.uleb128 0x2116
 32818 01cd 19       		.uleb128 0x19
 32819 01ce 01       		.uleb128 0x1
 32820 01cf 13       		.uleb128 0x13
 32821 01d0 00       		.byte	0
 32822 01d1 00       		.byte	0
 32823 01d2 23       		.uleb128 0x23
 32824 01d3 34       		.uleb128 0x34
 32825 01d4 00       		.byte	0
 32826 01d5 03       		.uleb128 0x3
 32827 01d6 0E       		.uleb128 0xe
 32828 01d7 3A       		.uleb128 0x3a
 32829 01d8 0B       		.uleb128 0xb
 32830 01d9 3B       		.uleb128 0x3b
 32831 01da 05       		.uleb128 0x5
 32832 01db 49       		.uleb128 0x49
 32833 01dc 13       		.uleb128 0x13
 32834 01dd 02       		.uleb128 0x2
 32835 01de 18       		.uleb128 0x18
 32836 01df 00       		.byte	0
 32837 01e0 00       		.byte	0
 32838 01e1 24       		.uleb128 0x24
 32839 01e2 21       		.uleb128 0x21
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 699


 32840 01e3 00       		.byte	0
 32841 01e4 49       		.uleb128 0x49
 32842 01e5 13       		.uleb128 0x13
 32843 01e6 2F       		.uleb128 0x2f
 32844 01e7 05       		.uleb128 0x5
 32845 01e8 00       		.byte	0
 32846 01e9 00       		.byte	0
 32847 01ea 25       		.uleb128 0x25
 32848 01eb 05       		.uleb128 0x5
 32849 01ec 00       		.byte	0
 32850 01ed 03       		.uleb128 0x3
 32851 01ee 0E       		.uleb128 0xe
 32852 01ef 3A       		.uleb128 0x3a
 32853 01f0 0B       		.uleb128 0xb
 32854 01f1 3B       		.uleb128 0x3b
 32855 01f2 05       		.uleb128 0x5
 32856 01f3 49       		.uleb128 0x49
 32857 01f4 13       		.uleb128 0x13
 32858 01f5 02       		.uleb128 0x2
 32859 01f6 18       		.uleb128 0x18
 32860 01f7 00       		.byte	0
 32861 01f8 00       		.byte	0
 32862 01f9 26       		.uleb128 0x26
 32863 01fa 34       		.uleb128 0x34
 32864 01fb 00       		.byte	0
 32865 01fc 03       		.uleb128 0x3
 32866 01fd 08       		.uleb128 0x8
 32867 01fe 3A       		.uleb128 0x3a
 32868 01ff 0B       		.uleb128 0xb
 32869 0200 3B       		.uleb128 0x3b
 32870 0201 05       		.uleb128 0x5
 32871 0202 49       		.uleb128 0x49
 32872 0203 13       		.uleb128 0x13
 32873 0204 02       		.uleb128 0x2
 32874 0205 18       		.uleb128 0x18
 32875 0206 00       		.byte	0
 32876 0207 00       		.byte	0
 32877 0208 27       		.uleb128 0x27
 32878 0209 2E       		.uleb128 0x2e
 32879 020a 01       		.byte	0x1
 32880 020b 3F       		.uleb128 0x3f
 32881 020c 19       		.uleb128 0x19
 32882 020d 03       		.uleb128 0x3
 32883 020e 0E       		.uleb128 0xe
 32884 020f 3A       		.uleb128 0x3a
 32885 0210 0B       		.uleb128 0xb
 32886 0211 3B       		.uleb128 0x3b
 32887 0212 05       		.uleb128 0x5
 32888 0213 11       		.uleb128 0x11
 32889 0214 01       		.uleb128 0x1
 32890 0215 12       		.uleb128 0x12
 32891 0216 06       		.uleb128 0x6
 32892 0217 40       		.uleb128 0x40
 32893 0218 18       		.uleb128 0x18
 32894 0219 9642     		.uleb128 0x2116
 32895 021b 19       		.uleb128 0x19
 32896 021c 01       		.uleb128 0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 700


 32897 021d 13       		.uleb128 0x13
 32898 021e 00       		.byte	0
 32899 021f 00       		.byte	0
 32900 0220 28       		.uleb128 0x28
 32901 0221 2E       		.uleb128 0x2e
 32902 0222 01       		.byte	0x1
 32903 0223 3F       		.uleb128 0x3f
 32904 0224 19       		.uleb128 0x19
 32905 0225 03       		.uleb128 0x3
 32906 0226 0E       		.uleb128 0xe
 32907 0227 3A       		.uleb128 0x3a
 32908 0228 0B       		.uleb128 0xb
 32909 0229 3B       		.uleb128 0x3b
 32910 022a 05       		.uleb128 0x5
 32911 022b 27       		.uleb128 0x27
 32912 022c 19       		.uleb128 0x19
 32913 022d 11       		.uleb128 0x11
 32914 022e 01       		.uleb128 0x1
 32915 022f 12       		.uleb128 0x12
 32916 0230 06       		.uleb128 0x6
 32917 0231 40       		.uleb128 0x40
 32918 0232 18       		.uleb128 0x18
 32919 0233 9742     		.uleb128 0x2117
 32920 0235 19       		.uleb128 0x19
 32921 0236 01       		.uleb128 0x1
 32922 0237 13       		.uleb128 0x13
 32923 0238 00       		.byte	0
 32924 0239 00       		.byte	0
 32925 023a 29       		.uleb128 0x29
 32926 023b 05       		.uleb128 0x5
 32927 023c 00       		.byte	0
 32928 023d 03       		.uleb128 0x3
 32929 023e 08       		.uleb128 0x8
 32930 023f 3A       		.uleb128 0x3a
 32931 0240 0B       		.uleb128 0xb
 32932 0241 3B       		.uleb128 0x3b
 32933 0242 05       		.uleb128 0x5
 32934 0243 49       		.uleb128 0x49
 32935 0244 13       		.uleb128 0x13
 32936 0245 02       		.uleb128 0x2
 32937 0246 18       		.uleb128 0x18
 32938 0247 00       		.byte	0
 32939 0248 00       		.byte	0
 32940 0249 2A       		.uleb128 0x2a
 32941 024a 2E       		.uleb128 0x2e
 32942 024b 01       		.byte	0x1
 32943 024c 3F       		.uleb128 0x3f
 32944 024d 19       		.uleb128 0x19
 32945 024e 03       		.uleb128 0x3
 32946 024f 0E       		.uleb128 0xe
 32947 0250 3A       		.uleb128 0x3a
 32948 0251 0B       		.uleb128 0xb
 32949 0252 3B       		.uleb128 0x3b
 32950 0253 05       		.uleb128 0x5
 32951 0254 27       		.uleb128 0x27
 32952 0255 19       		.uleb128 0x19
 32953 0256 49       		.uleb128 0x49
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 701


 32954 0257 13       		.uleb128 0x13
 32955 0258 11       		.uleb128 0x11
 32956 0259 01       		.uleb128 0x1
 32957 025a 12       		.uleb128 0x12
 32958 025b 06       		.uleb128 0x6
 32959 025c 40       		.uleb128 0x40
 32960 025d 18       		.uleb128 0x18
 32961 025e 9742     		.uleb128 0x2117
 32962 0260 19       		.uleb128 0x19
 32963 0261 01       		.uleb128 0x1
 32964 0262 13       		.uleb128 0x13
 32965 0263 00       		.byte	0
 32966 0264 00       		.byte	0
 32967 0265 2B       		.uleb128 0x2b
 32968 0266 2E       		.uleb128 0x2e
 32969 0267 01       		.byte	0x1
 32970 0268 3F       		.uleb128 0x3f
 32971 0269 19       		.uleb128 0x19
 32972 026a 03       		.uleb128 0x3
 32973 026b 0E       		.uleb128 0xe
 32974 026c 3A       		.uleb128 0x3a
 32975 026d 0B       		.uleb128 0xb
 32976 026e 3B       		.uleb128 0x3b
 32977 026f 05       		.uleb128 0x5
 32978 0270 27       		.uleb128 0x27
 32979 0271 19       		.uleb128 0x19
 32980 0272 49       		.uleb128 0x49
 32981 0273 13       		.uleb128 0x13
 32982 0274 11       		.uleb128 0x11
 32983 0275 01       		.uleb128 0x1
 32984 0276 12       		.uleb128 0x12
 32985 0277 06       		.uleb128 0x6
 32986 0278 40       		.uleb128 0x40
 32987 0279 18       		.uleb128 0x18
 32988 027a 9642     		.uleb128 0x2116
 32989 027c 19       		.uleb128 0x19
 32990 027d 01       		.uleb128 0x1
 32991 027e 13       		.uleb128 0x13
 32992 027f 00       		.byte	0
 32993 0280 00       		.byte	0
 32994 0281 2C       		.uleb128 0x2c
 32995 0282 2E       		.uleb128 0x2e
 32996 0283 00       		.byte	0
 32997 0284 3F       		.uleb128 0x3f
 32998 0285 19       		.uleb128 0x19
 32999 0286 03       		.uleb128 0x3
 33000 0287 0E       		.uleb128 0xe
 33001 0288 3A       		.uleb128 0x3a
 33002 0289 0B       		.uleb128 0xb
 33003 028a 3B       		.uleb128 0x3b
 33004 028b 05       		.uleb128 0x5
 33005 028c 27       		.uleb128 0x27
 33006 028d 19       		.uleb128 0x19
 33007 028e 11       		.uleb128 0x11
 33008 028f 01       		.uleb128 0x1
 33009 0290 12       		.uleb128 0x12
 33010 0291 06       		.uleb128 0x6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 702


 33011 0292 40       		.uleb128 0x40
 33012 0293 18       		.uleb128 0x18
 33013 0294 9742     		.uleb128 0x2117
 33014 0296 19       		.uleb128 0x19
 33015 0297 00       		.byte	0
 33016 0298 00       		.byte	0
 33017 0299 2D       		.uleb128 0x2d
 33018 029a 2E       		.uleb128 0x2e
 33019 029b 01       		.byte	0x1
 33020 029c 3F       		.uleb128 0x3f
 33021 029d 19       		.uleb128 0x19
 33022 029e 03       		.uleb128 0x3
 33023 029f 0E       		.uleb128 0xe
 33024 02a0 3A       		.uleb128 0x3a
 33025 02a1 0B       		.uleb128 0xb
 33026 02a2 3B       		.uleb128 0x3b
 33027 02a3 05       		.uleb128 0x5
 33028 02a4 11       		.uleb128 0x11
 33029 02a5 01       		.uleb128 0x1
 33030 02a6 12       		.uleb128 0x12
 33031 02a7 06       		.uleb128 0x6
 33032 02a8 40       		.uleb128 0x40
 33033 02a9 18       		.uleb128 0x18
 33034 02aa 9742     		.uleb128 0x2117
 33035 02ac 19       		.uleb128 0x19
 33036 02ad 01       		.uleb128 0x1
 33037 02ae 13       		.uleb128 0x13
 33038 02af 00       		.byte	0
 33039 02b0 00       		.byte	0
 33040 02b1 2E       		.uleb128 0x2e
 33041 02b2 0B       		.uleb128 0xb
 33042 02b3 01       		.byte	0x1
 33043 02b4 11       		.uleb128 0x11
 33044 02b5 01       		.uleb128 0x1
 33045 02b6 12       		.uleb128 0x12
 33046 02b7 06       		.uleb128 0x6
 33047 02b8 01       		.uleb128 0x1
 33048 02b9 13       		.uleb128 0x13
 33049 02ba 00       		.byte	0
 33050 02bb 00       		.byte	0
 33051 02bc 2F       		.uleb128 0x2f
 33052 02bd 2E       		.uleb128 0x2e
 33053 02be 01       		.byte	0x1
 33054 02bf 3F       		.uleb128 0x3f
 33055 02c0 19       		.uleb128 0x19
 33056 02c1 03       		.uleb128 0x3
 33057 02c2 0E       		.uleb128 0xe
 33058 02c3 3A       		.uleb128 0x3a
 33059 02c4 0B       		.uleb128 0xb
 33060 02c5 3B       		.uleb128 0x3b
 33061 02c6 05       		.uleb128 0x5
 33062 02c7 49       		.uleb128 0x49
 33063 02c8 13       		.uleb128 0x13
 33064 02c9 11       		.uleb128 0x11
 33065 02ca 01       		.uleb128 0x1
 33066 02cb 12       		.uleb128 0x12
 33067 02cc 06       		.uleb128 0x6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 703


 33068 02cd 40       		.uleb128 0x40
 33069 02ce 18       		.uleb128 0x18
 33070 02cf 9642     		.uleb128 0x2116
 33071 02d1 19       		.uleb128 0x19
 33072 02d2 01       		.uleb128 0x1
 33073 02d3 13       		.uleb128 0x13
 33074 02d4 00       		.byte	0
 33075 02d5 00       		.byte	0
 33076 02d6 30       		.uleb128 0x30
 33077 02d7 2E       		.uleb128 0x2e
 33078 02d8 00       		.byte	0
 33079 02d9 3F       		.uleb128 0x3f
 33080 02da 19       		.uleb128 0x19
 33081 02db 03       		.uleb128 0x3
 33082 02dc 0E       		.uleb128 0xe
 33083 02dd 3A       		.uleb128 0x3a
 33084 02de 0B       		.uleb128 0xb
 33085 02df 3B       		.uleb128 0x3b
 33086 02e0 05       		.uleb128 0x5
 33087 02e1 11       		.uleb128 0x11
 33088 02e2 01       		.uleb128 0x1
 33089 02e3 12       		.uleb128 0x12
 33090 02e4 06       		.uleb128 0x6
 33091 02e5 40       		.uleb128 0x40
 33092 02e6 18       		.uleb128 0x18
 33093 02e7 9642     		.uleb128 0x2116
 33094 02e9 19       		.uleb128 0x19
 33095 02ea 00       		.byte	0
 33096 02eb 00       		.byte	0
 33097 02ec 31       		.uleb128 0x31
 33098 02ed 2E       		.uleb128 0x2e
 33099 02ee 01       		.byte	0x1
 33100 02ef 3F       		.uleb128 0x3f
 33101 02f0 19       		.uleb128 0x19
 33102 02f1 03       		.uleb128 0x3
 33103 02f2 0E       		.uleb128 0xe
 33104 02f3 3A       		.uleb128 0x3a
 33105 02f4 0B       		.uleb128 0xb
 33106 02f5 3B       		.uleb128 0x3b
 33107 02f6 05       		.uleb128 0x5
 33108 02f7 49       		.uleb128 0x49
 33109 02f8 13       		.uleb128 0x13
 33110 02f9 11       		.uleb128 0x11
 33111 02fa 01       		.uleb128 0x1
 33112 02fb 12       		.uleb128 0x12
 33113 02fc 06       		.uleb128 0x6
 33114 02fd 40       		.uleb128 0x40
 33115 02fe 18       		.uleb128 0x18
 33116 02ff 9742     		.uleb128 0x2117
 33117 0301 19       		.uleb128 0x19
 33118 0302 01       		.uleb128 0x1
 33119 0303 13       		.uleb128 0x13
 33120 0304 00       		.byte	0
 33121 0305 00       		.byte	0
 33122 0306 32       		.uleb128 0x32
 33123 0307 2E       		.uleb128 0x2e
 33124 0308 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 704


 33125 0309 3F       		.uleb128 0x3f
 33126 030a 19       		.uleb128 0x19
 33127 030b 03       		.uleb128 0x3
 33128 030c 0E       		.uleb128 0xe
 33129 030d 3A       		.uleb128 0x3a
 33130 030e 0B       		.uleb128 0xb
 33131 030f 3B       		.uleb128 0x3b
 33132 0310 05       		.uleb128 0x5
 33133 0311 11       		.uleb128 0x11
 33134 0312 01       		.uleb128 0x1
 33135 0313 12       		.uleb128 0x12
 33136 0314 06       		.uleb128 0x6
 33137 0315 40       		.uleb128 0x40
 33138 0316 18       		.uleb128 0x18
 33139 0317 9742     		.uleb128 0x2117
 33140 0319 19       		.uleb128 0x19
 33141 031a 00       		.byte	0
 33142 031b 00       		.byte	0
 33143 031c 33       		.uleb128 0x33
 33144 031d 34       		.uleb128 0x34
 33145 031e 00       		.byte	0
 33146 031f 03       		.uleb128 0x3
 33147 0320 0E       		.uleb128 0xe
 33148 0321 3A       		.uleb128 0x3a
 33149 0322 0B       		.uleb128 0xb
 33150 0323 3B       		.uleb128 0x3b
 33151 0324 05       		.uleb128 0x5
 33152 0325 49       		.uleb128 0x49
 33153 0326 13       		.uleb128 0x13
 33154 0327 3F       		.uleb128 0x3f
 33155 0328 19       		.uleb128 0x19
 33156 0329 3C       		.uleb128 0x3c
 33157 032a 19       		.uleb128 0x19
 33158 032b 00       		.byte	0
 33159 032c 00       		.byte	0
 33160 032d 34       		.uleb128 0x34
 33161 032e 34       		.uleb128 0x34
 33162 032f 00       		.byte	0
 33163 0330 03       		.uleb128 0x3
 33164 0331 0E       		.uleb128 0xe
 33165 0332 3A       		.uleb128 0x3a
 33166 0333 0B       		.uleb128 0xb
 33167 0334 3B       		.uleb128 0x3b
 33168 0335 0B       		.uleb128 0xb
 33169 0336 49       		.uleb128 0x49
 33170 0337 13       		.uleb128 0x13
 33171 0338 3F       		.uleb128 0x3f
 33172 0339 19       		.uleb128 0x19
 33173 033a 02       		.uleb128 0x2
 33174 033b 18       		.uleb128 0x18
 33175 033c 00       		.byte	0
 33176 033d 00       		.byte	0
 33177 033e 00       		.byte	0
 33178              		.section	.debug_aranges,"",%progbits
 33179 0000 DC010000 		.4byte	0x1dc
 33180 0004 0200     		.2byte	0x2
 33181 0006 00000000 		.4byte	.Ldebug_info0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 705


 33182 000a 04       		.byte	0x4
 33183 000b 00       		.byte	0
 33184 000c 0000     		.2byte	0
 33185 000e 0000     		.2byte	0
 33186 0010 00000000 		.4byte	.LFB64
 33187 0014 00050000 		.4byte	.LFE64-.LFB64
 33188 0018 00000000 		.4byte	.LFB65
 33189 001c 22000000 		.4byte	.LFE65-.LFB65
 33190 0020 00000000 		.4byte	.LFB66
 33191 0024 34010000 		.4byte	.LFE66-.LFB66
 33192 0028 00000000 		.4byte	.LFB67
 33193 002c 68320000 		.4byte	.LFE67-.LFB67
 33194 0030 00000000 		.4byte	.LFB68
 33195 0034 3C190000 		.4byte	.LFE68-.LFB68
 33196 0038 00000000 		.4byte	.LFB69
 33197 003c 10150000 		.4byte	.LFE69-.LFB69
 33198 0040 00000000 		.4byte	.LFB70
 33199 0044 F40D0000 		.4byte	.LFE70-.LFB70
 33200 0048 00000000 		.4byte	.LFB71
 33201 004c 90000000 		.4byte	.LFE71-.LFB71
 33202 0050 00000000 		.4byte	.LFB72
 33203 0054 60210000 		.4byte	.LFE72-.LFB72
 33204 0058 00000000 		.4byte	.LFB73
 33205 005c BC030000 		.4byte	.LFE73-.LFB73
 33206 0060 00000000 		.4byte	.LFB74
 33207 0064 7C120000 		.4byte	.LFE74-.LFB74
 33208 0068 00000000 		.4byte	.LFB75
 33209 006c C8000000 		.4byte	.LFE75-.LFB75
 33210 0070 00000000 		.4byte	.LFB76
 33211 0074 30010000 		.4byte	.LFE76-.LFB76
 33212 0078 00000000 		.4byte	.LFB77
 33213 007c 28000000 		.4byte	.LFE77-.LFB77
 33214 0080 00000000 		.4byte	.LFB78
 33215 0084 F0000000 		.4byte	.LFE78-.LFB78
 33216 0088 00000000 		.4byte	.LFB79
 33217 008c 74030000 		.4byte	.LFE79-.LFB79
 33218 0090 00000000 		.4byte	.LFB80
 33219 0094 84000000 		.4byte	.LFE80-.LFB80
 33220 0098 00000000 		.4byte	.LFB81
 33221 009c 88000000 		.4byte	.LFE81-.LFB81
 33222 00a0 00000000 		.4byte	.LFB82
 33223 00a4 A0000000 		.4byte	.LFE82-.LFB82
 33224 00a8 00000000 		.4byte	.LFB83
 33225 00ac 3E000000 		.4byte	.LFE83-.LFB83
 33226 00b0 00000000 		.4byte	.LFB84
 33227 00b4 2E000000 		.4byte	.LFE84-.LFB84
 33228 00b8 00000000 		.4byte	.LFB85
 33229 00bc 98000000 		.4byte	.LFE85-.LFB85
 33230 00c0 00000000 		.4byte	.LFB86
 33231 00c4 80000000 		.4byte	.LFE86-.LFB86
 33232 00c8 00000000 		.4byte	.LFB87
 33233 00cc 5C000000 		.4byte	.LFE87-.LFB87
 33234 00d0 00000000 		.4byte	.LFB88
 33235 00d4 24060000 		.4byte	.LFE88-.LFB88
 33236 00d8 00000000 		.4byte	.LFB89
 33237 00dc 38020000 		.4byte	.LFE89-.LFB89
 33238 00e0 00000000 		.4byte	.LFB90
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 706


 33239 00e4 28000000 		.4byte	.LFE90-.LFB90
 33240 00e8 00000000 		.4byte	.LFB91
 33241 00ec 78000000 		.4byte	.LFE91-.LFB91
 33242 00f0 00000000 		.4byte	.LFB92
 33243 00f4 B0000000 		.4byte	.LFE92-.LFB92
 33244 00f8 00000000 		.4byte	.LFB93
 33245 00fc 28010000 		.4byte	.LFE93-.LFB93
 33246 0100 00000000 		.4byte	.LFB94
 33247 0104 B8000000 		.4byte	.LFE94-.LFB94
 33248 0108 00000000 		.4byte	.LFB95
 33249 010c B8000000 		.4byte	.LFE95-.LFB95
 33250 0110 00000000 		.4byte	.LFB96
 33251 0114 5C000000 		.4byte	.LFE96-.LFB96
 33252 0118 00000000 		.4byte	.LFB97
 33253 011c 44020000 		.4byte	.LFE97-.LFB97
 33254 0120 00000000 		.4byte	.LFB98
 33255 0124 BC000000 		.4byte	.LFE98-.LFB98
 33256 0128 00000000 		.4byte	.LFB99
 33257 012c 5C000000 		.4byte	.LFE99-.LFB99
 33258 0130 00000000 		.4byte	.LFB100
 33259 0134 38010000 		.4byte	.LFE100-.LFB100
 33260 0138 00000000 		.4byte	.LFB101
 33261 013c EC000000 		.4byte	.LFE101-.LFB101
 33262 0140 00000000 		.4byte	.LFB102
 33263 0144 64000000 		.4byte	.LFE102-.LFB102
 33264 0148 00000000 		.4byte	.LFB103
 33265 014c A8000000 		.4byte	.LFE103-.LFB103
 33266 0150 00000000 		.4byte	.LFB104
 33267 0154 34000000 		.4byte	.LFE104-.LFB104
 33268 0158 00000000 		.4byte	.LFB105
 33269 015c 20000000 		.4byte	.LFE105-.LFB105
 33270 0160 00000000 		.4byte	.LFB106
 33271 0164 A0000000 		.4byte	.LFE106-.LFB106
 33272 0168 00000000 		.4byte	.LFB107
 33273 016c BC010000 		.4byte	.LFE107-.LFB107
 33274 0170 00000000 		.4byte	.LFB108
 33275 0174 60000000 		.4byte	.LFE108-.LFB108
 33276 0178 00000000 		.4byte	.LFB109
 33277 017c 98050000 		.4byte	.LFE109-.LFB109
 33278 0180 00000000 		.4byte	.LFB110
 33279 0184 8C000000 		.4byte	.LFE110-.LFB110
 33280 0188 00000000 		.4byte	.LFB111
 33281 018c EC000000 		.4byte	.LFE111-.LFB111
 33282 0190 00000000 		.4byte	.LFB112
 33283 0194 5C000000 		.4byte	.LFE112-.LFB112
 33284 0198 00000000 		.4byte	.LFB113
 33285 019c C0000000 		.4byte	.LFE113-.LFB113
 33286 01a0 00000000 		.4byte	.LFB114
 33287 01a4 54010000 		.4byte	.LFE114-.LFB114
 33288 01a8 00000000 		.4byte	.LFB115
 33289 01ac 12000000 		.4byte	.LFE115-.LFB115
 33290 01b0 00000000 		.4byte	.LFB116
 33291 01b4 64010000 		.4byte	.LFE116-.LFB116
 33292 01b8 00000000 		.4byte	.LFB117
 33293 01bc 12000000 		.4byte	.LFE117-.LFB117
 33294 01c0 00000000 		.4byte	.LFB118
 33295 01c4 1A000000 		.4byte	.LFE118-.LFB118
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 707


 33296 01c8 00000000 		.4byte	.LFB119
 33297 01cc 0C000000 		.4byte	.LFE119-.LFB119
 33298 01d0 00000000 		.4byte	.LFB120
 33299 01d4 0C000000 		.4byte	.LFE120-.LFB120
 33300 01d8 00000000 		.4byte	0
 33301 01dc 00000000 		.4byte	0
 33302              		.section	.debug_ranges,"",%progbits
 33303              	.Ldebug_ranges0:
 33304 0000 00000000 		.4byte	.LFB64
 33305 0004 00050000 		.4byte	.LFE64
 33306 0008 00000000 		.4byte	.LFB65
 33307 000c 22000000 		.4byte	.LFE65
 33308 0010 00000000 		.4byte	.LFB66
 33309 0014 34010000 		.4byte	.LFE66
 33310 0018 00000000 		.4byte	.LFB67
 33311 001c 68320000 		.4byte	.LFE67
 33312 0020 00000000 		.4byte	.LFB68
 33313 0024 3C190000 		.4byte	.LFE68
 33314 0028 00000000 		.4byte	.LFB69
 33315 002c 10150000 		.4byte	.LFE69
 33316 0030 00000000 		.4byte	.LFB70
 33317 0034 F40D0000 		.4byte	.LFE70
 33318 0038 00000000 		.4byte	.LFB71
 33319 003c 90000000 		.4byte	.LFE71
 33320 0040 00000000 		.4byte	.LFB72
 33321 0044 60210000 		.4byte	.LFE72
 33322 0048 00000000 		.4byte	.LFB73
 33323 004c BC030000 		.4byte	.LFE73
 33324 0050 00000000 		.4byte	.LFB74
 33325 0054 7C120000 		.4byte	.LFE74
 33326 0058 00000000 		.4byte	.LFB75
 33327 005c C8000000 		.4byte	.LFE75
 33328 0060 00000000 		.4byte	.LFB76
 33329 0064 30010000 		.4byte	.LFE76
 33330 0068 00000000 		.4byte	.LFB77
 33331 006c 28000000 		.4byte	.LFE77
 33332 0070 00000000 		.4byte	.LFB78
 33333 0074 F0000000 		.4byte	.LFE78
 33334 0078 00000000 		.4byte	.LFB79
 33335 007c 74030000 		.4byte	.LFE79
 33336 0080 00000000 		.4byte	.LFB80
 33337 0084 84000000 		.4byte	.LFE80
 33338 0088 00000000 		.4byte	.LFB81
 33339 008c 88000000 		.4byte	.LFE81
 33340 0090 00000000 		.4byte	.LFB82
 33341 0094 A0000000 		.4byte	.LFE82
 33342 0098 00000000 		.4byte	.LFB83
 33343 009c 3E000000 		.4byte	.LFE83
 33344 00a0 00000000 		.4byte	.LFB84
 33345 00a4 2E000000 		.4byte	.LFE84
 33346 00a8 00000000 		.4byte	.LFB85
 33347 00ac 98000000 		.4byte	.LFE85
 33348 00b0 00000000 		.4byte	.LFB86
 33349 00b4 80000000 		.4byte	.LFE86
 33350 00b8 00000000 		.4byte	.LFB87
 33351 00bc 5C000000 		.4byte	.LFE87
 33352 00c0 00000000 		.4byte	.LFB88
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 708


 33353 00c4 24060000 		.4byte	.LFE88
 33354 00c8 00000000 		.4byte	.LFB89
 33355 00cc 38020000 		.4byte	.LFE89
 33356 00d0 00000000 		.4byte	.LFB90
 33357 00d4 28000000 		.4byte	.LFE90
 33358 00d8 00000000 		.4byte	.LFB91
 33359 00dc 78000000 		.4byte	.LFE91
 33360 00e0 00000000 		.4byte	.LFB92
 33361 00e4 B0000000 		.4byte	.LFE92
 33362 00e8 00000000 		.4byte	.LFB93
 33363 00ec 28010000 		.4byte	.LFE93
 33364 00f0 00000000 		.4byte	.LFB94
 33365 00f4 B8000000 		.4byte	.LFE94
 33366 00f8 00000000 		.4byte	.LFB95
 33367 00fc B8000000 		.4byte	.LFE95
 33368 0100 00000000 		.4byte	.LFB96
 33369 0104 5C000000 		.4byte	.LFE96
 33370 0108 00000000 		.4byte	.LFB97
 33371 010c 44020000 		.4byte	.LFE97
 33372 0110 00000000 		.4byte	.LFB98
 33373 0114 BC000000 		.4byte	.LFE98
 33374 0118 00000000 		.4byte	.LFB99
 33375 011c 5C000000 		.4byte	.LFE99
 33376 0120 00000000 		.4byte	.LFB100
 33377 0124 38010000 		.4byte	.LFE100
 33378 0128 00000000 		.4byte	.LFB101
 33379 012c EC000000 		.4byte	.LFE101
 33380 0130 00000000 		.4byte	.LFB102
 33381 0134 64000000 		.4byte	.LFE102
 33382 0138 00000000 		.4byte	.LFB103
 33383 013c A8000000 		.4byte	.LFE103
 33384 0140 00000000 		.4byte	.LFB104
 33385 0144 34000000 		.4byte	.LFE104
 33386 0148 00000000 		.4byte	.LFB105
 33387 014c 20000000 		.4byte	.LFE105
 33388 0150 00000000 		.4byte	.LFB106
 33389 0154 A0000000 		.4byte	.LFE106
 33390 0158 00000000 		.4byte	.LFB107
 33391 015c BC010000 		.4byte	.LFE107
 33392 0160 00000000 		.4byte	.LFB108
 33393 0164 60000000 		.4byte	.LFE108
 33394 0168 00000000 		.4byte	.LFB109
 33395 016c 98050000 		.4byte	.LFE109
 33396 0170 00000000 		.4byte	.LFB110
 33397 0174 8C000000 		.4byte	.LFE110
 33398 0178 00000000 		.4byte	.LFB111
 33399 017c EC000000 		.4byte	.LFE111
 33400 0180 00000000 		.4byte	.LFB112
 33401 0184 5C000000 		.4byte	.LFE112
 33402 0188 00000000 		.4byte	.LFB113
 33403 018c C0000000 		.4byte	.LFE113
 33404 0190 00000000 		.4byte	.LFB114
 33405 0194 54010000 		.4byte	.LFE114
 33406 0198 00000000 		.4byte	.LFB115
 33407 019c 12000000 		.4byte	.LFE115
 33408 01a0 00000000 		.4byte	.LFB116
 33409 01a4 64010000 		.4byte	.LFE116
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 709


 33410 01a8 00000000 		.4byte	.LFB117
 33411 01ac 12000000 		.4byte	.LFE117
 33412 01b0 00000000 		.4byte	.LFB118
 33413 01b4 1A000000 		.4byte	.LFE118
 33414 01b8 00000000 		.4byte	.LFB119
 33415 01bc 0C000000 		.4byte	.LFE119
 33416 01c0 00000000 		.4byte	.LFB120
 33417 01c4 0C000000 		.4byte	.LFE120
 33418 01c8 00000000 		.4byte	0
 33419 01cc 00000000 		.4byte	0
 33420              		.section	.debug_line,"",%progbits
 33421              	.Ldebug_line0:
 33422 0000 C01E0000 		.section	.debug_str,"MS",%progbits,1
 33422      0200C001 
 33422      00000201 
 33422      FB0E0D00 
 33422      01010101 
 33423              	.LASF214:
 33424 0000 696E666F 		.ascii	"infoSend\000"
 33424      53656E64 
 33424      00
 33425              	.LASF403:
 33426 0009 433A5C55 		.ascii	"C:\\Users\\Mattia\\Documents\\GitHub\\SoftHandPRO-a"
 33426      73657273 
 33426      5C4D6174 
 33426      7469615C 
 33426      446F6375 
 33427 0037 6E642D47 		.ascii	"nd-Generic-FW-PSoC5\\Generic.cydsn\000"
 33427      656E6572 
 33427      69632D46 
 33427      572D5053 
 33427      6F43355C 
 33428              	.LASF266:
 33429 0059 69645F73 		.ascii	"id_str\000"
 33429      747200
 33430              	.LASF248:
 33431 0060 66736D5F 		.ascii	"fsm_activation_mode_menu\000"
 33431      61637469 
 33431      76617469 
 33431      6F6E5F6D 
 33431      6F64655F 
 33432              	.LASF25:
 33433 0079 73697A65 		.ascii	"sizetype\000"
 33433      74797065 
 33433      00
 33434              	.LASF33:
 33435 0082 434D445F 		.ascii	"CMD_INIT_MEM\000"
 33435      494E4954 
 33435      5F4D454D 
 33435      00
 33436              	.LASF337:
 33437 008f 676C5F63 		.ascii	"gl_c\000"
 33437      00
 33438              	.LASF194:
 33439 0094 77726973 		.ascii	"wrist_direction_association\000"
 33439      745F6469 
 33439      72656374 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 710


 33439      696F6E5F 
 33439      6173736F 
 33440              	.LASF64:
 33441 00b0 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS_ADV\000"
 33441      545F4D4F 
 33441      44455F45 
 33441      4D475F46 
 33441      4346535F 
 33442              	.LASF36:
 33443 00c8 434D445F 		.ascii	"CMD_ACTIVATE\000"
 33443      41435449 
 33443      56415445 
 33443      00
 33444              	.LASF199:
 33445 00d5 75736572 		.ascii	"user\000"
 33445      00
 33446              	.LASF352:
 33447 00da 665F6572 		.ascii	"f_err_emg_1\000"
 33447      725F656D 
 33447      675F3100 
 33448              	.LASF353:
 33449 00e6 665F6572 		.ascii	"f_err_emg_2\000"
 33449      725F656D 
 33449      675F3200 
 33450              	.LASF358:
 33451 00f2 73746F70 		.ascii	"stop_master_device\000"
 33451      5F6D6173 
 33451      7465725F 
 33451      64657669 
 33451      636500
 33452              	.LASF11:
 33453 0105 696E7433 		.ascii	"int32_t\000"
 33453      325F7400 
 33454              	.LASF369:
 33455 010d 675F7278 		.ascii	"g_rx\000"
 33455      00
 33456              	.LASF101:
 33457 0112 73745F64 		.ascii	"st_data\000"
 33457      61746100 
 33458              	.LASF288:
 33459 011a 685F7469 		.ascii	"h_time\000"
 33459      6D6500
 33460              	.LASF302:
 33461 0121 77726974 		.ascii	"writeStatus\000"
 33461      65537461 
 33461      74757300 
 33462              	.LASF15:
 33463 012d 75696E74 		.ascii	"uint32\000"
 33463      333200
 33464              	.LASF357:
 33465 0134 636D645F 		.ascii	"cmd_set_baudrate\000"
 33465      7365745F 
 33465      62617564 
 33465      72617465 
 33465      00
 33466              	.LASF346:
 33467 0145 6169725F 		.ascii	"air_chambers_control\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 711


 33467      6368616D 
 33467      62657273 
 33467      5F636F6E 
 33467      74726F6C 
 33468              	.LASF274:
 33469 015a 7370695F 		.ascii	"spi_read_delay_str_len\000"
 33469      72656164 
 33469      5F64656C 
 33469      61795F73 
 33469      74725F6C 
 33470              	.LASF200:
 33471 0171 4A4F595F 		.ascii	"JOY_spec\000"
 33471      73706563 
 33471      00
 33472              	.LASF276:
 33473 017a 70726570 		.ascii	"prepare_generic_info\000"
 33473      6172655F 
 33473      67656E65 
 33473      7269635F 
 33473      696E666F 
 33474              	.LASF137:
 33475 018f 706F735F 		.ascii	"pos_lim_inf\000"
 33475      6C696D5F 
 33475      696E6600 
 33476              	.LASF240:
 33477 019b 5345434F 		.ascii	"SECOND_MOTOR_IDX\000"
 33477      4E445F4D 
 33477      4F544F52 
 33477      5F494458 
 33477      00
 33478              	.LASF330:
 33479 01ac 636D645F 		.ascii	"cmd_get_inputs\000"
 33479      6765745F 
 33479      696E7075 
 33479      747300
 33480              	.LASF63:
 33481 01bb 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS\000"
 33481      545F4D4F 
 33481      44455F45 
 33481      4D475F46 
 33481      43465300 
 33482              	.LASF141:
 33483 01cf 63757272 		.ascii	"curr_lookup\000"
 33483      5F6C6F6F 
 33483      6B757000 
 33484              	.LASF109:
 33485 01db 72657374 		.ascii	"rest_counter\000"
 33485      5F636F75 
 33485      6E746572 
 33485      00
 33486              	.LASF335:
 33487 01e8 636D645F 		.ascii	"cmd_get_imu_readings\000"
 33487      6765745F 
 33487      696D755F 
 33487      72656164 
 33487      696E6773 
 33488              	.LASF184:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 712


 33489 01fd 73745F4D 		.ascii	"st_MASTER_spec\000"
 33489      41535445 
 33489      525F7370 
 33489      656300
 33490              	.LASF269:
 33491 020c 69645F73 		.ascii	"id_str_len\000"
 33491      74725F6C 
 33491      656E00
 33492              	.LASF62:
 33493 0217 494E5055 		.ascii	"INPUT_MODE_EMG_INTEGRAL\000"
 33493      545F4D4F 
 33493      44455F45 
 33493      4D475F49 
 33493      4E544547 
 33494              	.LASF242:
 33495 022f 6D5F746D 		.ascii	"m_tmp\000"
 33495      7000
 33496              	.LASF287:
 33497 0235 765F6964 		.ascii	"v_idx\000"
 33497      7800
 33498              	.LASF16:
 33499 023b 696E7438 		.ascii	"int8\000"
 33499      00
 33500              	.LASF219:
 33501 0240 6765745F 		.ascii	"get_param_list\000"
 33501      70617261 
 33501      6D5F6C69 
 33501      737400
 33502              	.LASF315:
 33503 024f 636D645F 		.ascii	"cmd_get_accelerations\000"
 33503      6765745F 
 33503      61636365 
 33503      6C657261 
 33503      74696F6E 
 33504              	.LASF334:
 33505 0265 636D645F 		.ascii	"cmd_get_emg\000"
 33505      6765745F 
 33505      656D6700 
 33506              	.LASF156:
 33507 0271 73745F65 		.ascii	"st_emg\000"
 33507      6D6700
 33508              	.LASF107:
 33509 0278 706F7369 		.ascii	"position_hist\000"
 33509      74696F6E 
 33509      5F686973 
 33509      7400
 33510              	.LASF207:
 33511 0286 74656D70 		.ascii	"temp_value\000"
 33511      5F76616C 
 33511      756500
 33512              	.LASF286:
 33513 0291 7374725F 		.ascii	"str_data\000"
 33513      64617461 
 33513      00
 33514              	.LASF405:
 33515 029a 72657375 		.ascii	"result\000"
 33515      6C7400
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 713


 33516              	.LASF268:
 33517 02a1 7370695F 		.ascii	"spi_read_delay_str\000"
 33517      72656164 
 33517      5F64656C 
 33517      61795F73 
 33517      747200
 33518              	.LASF191:
 33519 02b4 73745F57 		.ascii	"st_WR_spec\000"
 33519      525F7370 
 33519      656300
 33520              	.LASF104:
 33521 02bf 72656164 		.ascii	"ready\000"
 33521      7900
 33522              	.LASF153:
 33523 02c5 456E635F 		.ascii	"Enc_idx_use_for_control\000"
 33523      6964785F 
 33523      7573655F 
 33523      666F725F 
 33523      636F6E74 
 33524              	.LASF49:
 33525 02dd 434D445F 		.ascii	"CMD_GET_JOYSTICK\000"
 33525      4745545F 
 33525      4A4F5953 
 33525      5449434B 
 33525      00
 33526              	.LASF61:
 33527 02ee 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL\000"
 33527      545F4D4F 
 33527      44455F45 
 33527      4D475F50 
 33527      524F504F 
 33528              	.LASF118:
 33529 030a 7573655F 		.ascii	"use_2nd_motor_flag\000"
 33529      326E645F 
 33529      6D6F746F 
 33529      725F666C 
 33529      616700
 33530              	.LASF326:
 33531 031d 745F7374 		.ascii	"t_start\000"
 33531      61727400 
 33532              	.LASF163:
 33533 0325 72656164 		.ascii	"read_imu_flag\000"
 33533      5F696D75 
 33533      5F666C61 
 33533      6700
 33534              	.LASF171:
 33535 0333 7265636F 		.ascii	"record_EMG_history_on_SD\000"
 33535      72645F45 
 33535      4D475F68 
 33535      6973746F 
 33535      72795F6F 
 33536              	.LASF373:
 33537 034c 74696D65 		.ascii	"timer_value\000"
 33537      725F7661 
 33537      6C756500 
 33538              	.LASF4:
 33539 0358 6C6F6E67 		.ascii	"long int\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 714


 33539      20696E74 
 33539      00
 33540              	.LASF197:
 33541 0361 756E7573 		.ascii	"unused_bytes1\000"
 33541      65645F62 
 33541      79746573 
 33541      3100
 33542              	.LASF356:
 33543 036f 6D6F746F 		.ascii	"motor_idx\000"
 33543      725F6964 
 33543      7800
 33544              	.LASF117:
 33545 0379 72657365 		.ascii	"reset_counters\000"
 33545      745F636F 
 33545      756E7465 
 33545      727300
 33546              	.LASF174:
 33547 0388 75736572 		.ascii	"user_emg\000"
 33547      5F656D67 
 33547      00
 33548              	.LASF343:
 33549 0391 636D645F 		.ascii	"cmd_get_SD_file\000"
 33549      6765745F 
 33549      53445F66 
 33549      696C6500 
 33550              	.LASF312:
 33551 03a1 7365745A 		.ascii	"setZeros\000"
 33551      65726F73 
 33551      00
 33552              	.LASF122:
 33553 03aa 756E7573 		.ascii	"unused_bytes\000"
 33553      65645F62 
 33553      79746573 
 33553      00
 33554              	.LASF203:
 33555 03b7 61636365 		.ascii	"accel_value\000"
 33555      6C5F7661 
 33555      6C756500 
 33556              	.LASF223:
 33557 03c3 4E554D5F 		.ascii	"NUM_ITEMS\000"
 33557      4954454D 
 33557      5300
 33558              	.LASF105:
 33559 03cd 73745F63 		.ascii	"st_counters\000"
 33559      6F756E74 
 33559      65727300 
 33560              	.LASF246:
 33561 03d9 4D454D5F 		.ascii	"MEM_P\000"
 33561      5000
 33562              	.LASF19:
 33563 03df 666C6F61 		.ascii	"float32\000"
 33563      74333200 
 33564              	.LASF341:
 33565 03e7 636D645F 		.ascii	"cmd_get_ADC_map\000"
 33565      6765745F 
 33565      4144435F 
 33565      6D617000 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 715


 33566              	.LASF41:
 33567 03f7 434D445F 		.ascii	"CMD_GET_CURRENTS\000"
 33567      4745545F 
 33567      43555252 
 33567      454E5453 
 33567      00
 33568              	.LASF285:
 33569 0408 70726570 		.ascii	"prepare_SD_EMG_history\000"
 33569      6172655F 
 33569      53445F45 
 33569      4D475F68 
 33569      6973746F 
 33570              	.LASF106:
 33571 041f 656D675F 		.ascii	"emg_counter\000"
 33571      636F756E 
 33571      74657200 
 33572              	.LASF342:
 33573 042b 636D645F 		.ascii	"cmd_get_ADC_raw\000"
 33573      6765745F 
 33573      4144435F 
 33573      72617700 
 33574              	.LASF390:
 33575 043b 73645061 		.ascii	"sdParam\000"
 33575      72616D00 
 33576              	.LASF256:
 33577 0443 6175785F 		.ascii	"aux_float2\000"
 33577      666C6F61 
 33577      743200
 33578              	.LASF329:
 33579 044e 636D645F 		.ascii	"cmd_ping\000"
 33579      70696E67 
 33579      00
 33580              	.LASF275:
 33581 0457 7370695F 		.ascii	"spi_delay_menu_len\000"
 33581      64656C61 
 33581      795F6D65 
 33581      6E755F6C 
 33581      656E00
 33582              	.LASF254:
 33583 046a 7365745F 		.ascii	"set_custom_param\000"
 33583      63757374 
 33583      6F6D5F70 
 33583      6172616D 
 33583      00
 33584              	.LASF311:
 33585 047b 6D656D49 		.ascii	"memInit_OtbkActWristMs\000"
 33585      6E69745F 
 33585      4F74626B 
 33585      41637457 
 33585      72697374 
 33586              	.LASF0:
 33587 0492 7369676E 		.ascii	"signed char\000"
 33587      65642063 
 33587      68617200 
 33588              	.LASF173:
 33589 049e 75736572 		.ascii	"user_code_string\000"
 33589      5F636F64 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 716


 33589      655F7374 
 33589      72696E67 
 33589      00
 33590              	.LASF208:
 33591 04af 73745F63 		.ascii	"st_calib\000"
 33591      616C6962 
 33591      00
 33592              	.LASF350:
 33593 04b8 6572725F 		.ascii	"err_emg_1\000"
 33593      656D675F 
 33593      3100
 33594              	.LASF300:
 33595 04c2 6D656D53 		.ascii	"memStore\000"
 33595      746F7265 
 33595      00
 33596              	.LASF345:
 33597 04cb 66696C65 		.ascii	"filename\000"
 33597      6E616D65 
 33597      00
 33598              	.LASF72:
 33599 04d4 6D6F746F 		.ascii	"motor_supply_type\000"
 33599      725F7375 
 33599      70706C79 
 33599      5F747970 
 33599      6500
 33600              	.LASF328:
 33601 04e6 72656164 		.ascii	"read_flag\000"
 33601      5F666C61 
 33601      6700
 33602              	.LASF382:
 33603 04f0 4144435F 		.ascii	"ADC_buf\000"
 33603      62756600 
 33604              	.LASF379:
 33605 04f8 696E7465 		.ascii	"interrupt_flag\000"
 33605      72727570 
 33605      745F666C 
 33605      616700
 33606              	.LASF280:
 33607 0507 73746570 		.ascii	"step\000"
 33607      00
 33608              	.LASF1:
 33609 050c 756E7369 		.ascii	"unsigned char\000"
 33609      676E6564 
 33609      20636861 
 33609      7200
 33610              	.LASF147:
 33611 051a 6E6F745F 		.ascii	"not_revers_motor_flag\000"
 33611      72657665 
 33611      72735F6D 
 33611      6F746F72 
 33611      5F666C61 
 33612              	.LASF362:
 33613 0530 675F7265 		.ascii	"g_refNew\000"
 33613      664E6577 
 33613      00
 33614              	.LASF116:
 33615 0539 72696768 		.ascii	"right_left\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 717


 33615      745F6C65 
 33615      667400
 33616              	.LASF29:
 33617 0544 434D445F 		.ascii	"CMD_STORE_DEFAULT_PARAMS\000"
 33617      53544F52 
 33617      455F4445 
 33617      4641554C 
 33617      545F5041 
 33618              	.LASF145:
 33619 055d 656E636F 		.ascii	"encoder_line\000"
 33619      6465725F 
 33619      6C696E65 
 33619      00
 33620              	.LASF270:
 33621 056a 6E5F696D 		.ascii	"n_imu_str_len\000"
 33621      755F7374 
 33621      725F6C65 
 33621      6E00
 33622              	.LASF273:
 33623 0578 696D755F 		.ascii	"imu_table_str_len\000"
 33623      7461626C 
 33623      655F7374 
 33623      725F6C65 
 33623      6E00
 33624              	.LASF298:
 33625 058a 76616C75 		.ascii	"value\000"
 33625      6500
 33626              	.LASF202:
 33627 0590 666C6167 		.ascii	"flags\000"
 33627      7300
 33628              	.LASF100:
 33629 0596 70726573 		.ascii	"pressure\000"
 33629      73757265 
 33629      00
 33630              	.LASF37:
 33631 059f 434D445F 		.ascii	"CMD_GET_ACTIVATE\000"
 33631      4745545F 
 33631      41435449 
 33631      56415445 
 33631      00
 33632              	.LASF22:
 33633 05b0 63686172 		.ascii	"char\000"
 33633      00
 33634              	.LASF140:
 33635 05b5 6D61785F 		.ascii	"max_step_pos\000"
 33635      73746570 
 33635      5F706F73 
 33635      00
 33636              	.LASF395:
 33637 05c2 675F696D 		.ascii	"g_imu\000"
 33637      7500
 33638              	.LASF304:
 33639 05c8 7265745F 		.ascii	"ret_val\000"
 33639      76616C00 
 33640              	.LASF253:
 33641 05d0 6D656E75 		.ascii	"menu_idx\000"
 33641      5F696478 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 718


 33641      00
 33642              	.LASF262:
 33643 05d9 73746172 		.ascii	"start_byte\000"
 33643      745F6279 
 33643      746500
 33644              	.LASF259:
 33645 05e4 6E756D5F 		.ascii	"num_mag_cal_params\000"
 33645      6D61675F 
 33645      63616C5F 
 33645      70617261 
 33645      6D7300
 33646              	.LASF146:
 33647 05f7 70776D5F 		.ascii	"pwm_rate_limiter\000"
 33647      72617465 
 33647      5F6C696D 
 33647      69746572 
 33647      00
 33648              	.LASF126:
 33649 0608 6B5F645F 		.ascii	"k_d_c\000"
 33649      6300
 33650              	.LASF99:
 33651 060e 73745F66 		.ascii	"st_fb_meas\000"
 33651      625F6D65 
 33651      617300
 33652              	.LASF216:
 33653 0619 7061636B 		.ascii	"packet_string\000"
 33653      65745F73 
 33653      7472696E 
 33653      6700
 33654              	.LASF151:
 33655 0627 6D5F6D75 		.ascii	"m_mult\000"
 33655      6C7400
 33656              	.LASF125:
 33657 062e 6B5F695F 		.ascii	"k_i_c\000"
 33657      6300
 33658              	.LASF301:
 33659 0634 64697370 		.ascii	"displacement\000"
 33659      6C616365 
 33659      6D656E74 
 33659      00
 33660              	.LASF295:
 33661 0641 64617461 		.ascii	"data_length\000"
 33661      5F6C656E 
 33661      67746800 
 33662              	.LASF138:
 33663 064d 706F735F 		.ascii	"pos_lim_sup\000"
 33663      6C696D5F 
 33663      73757000 
 33664              	.LASF159:
 33665 0659 656D675F 		.ascii	"emg_speed\000"
 33665      73706565 
 33665      6400
 33666              	.LASF178:
 33667 0663 72657374 		.ascii	"rest_vel\000"
 33667      5F76656C 
 33667      00
 33668              	.LASF229:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 719


 33669 066c 7061636B 		.ascii	"packet_data\000"
 33669      65745F64 
 33669      61746100 
 33670              	.LASF113:
 33671 0678 73745F64 		.ascii	"st_device\000"
 33671      65766963 
 33671      6500
 33672              	.LASF388:
 33673 0682 7046696C 		.ascii	"pFile\000"
 33673      6500
 33674              	.LASF170:
 33675 0688 4144435F 		.ascii	"ADC_conf\000"
 33675      636F6E66 
 33675      00
 33676              	.LASF292:
 33677 0691 636F6D6D 		.ascii	"commWrite\000"
 33677      57726974 
 33677      6500
 33678              	.LASF359:
 33679 069b 64656163 		.ascii	"deactivate_slaves\000"
 33679      74697661 
 33679      74655F73 
 33679      6C617665 
 33679      7300
 33680              	.LASF303:
 33681 06ad 70616765 		.ascii	"pages\000"
 33681      7300
 33682              	.LASF307:
 33683 06b3 6D656D49 		.ascii	"memInit\000"
 33683      6E697400 
 33684              	.LASF128:
 33685 06bb 6B5F695F 		.ascii	"k_i_dl\000"
 33685      646C00
 33686              	.LASF38:
 33687 06c2 434D445F 		.ascii	"CMD_SET_INPUTS\000"
 33687      5345545F 
 33687      494E5055 
 33687      545300
 33688              	.LASF102:
 33689 06d1 62756666 		.ascii	"buffer\000"
 33689      657200
 33690              	.LASF130:
 33691 06d8 6B5F705F 		.ascii	"k_p_c_dl\000"
 33691      635F646C 
 33691      00
 33692              	.LASF313:
 33693 06e1 636D645F 		.ascii	"cmd_get_measurements\000"
 33693      6765745F 
 33693      6D656173 
 33693      7572656D 
 33693      656E7473 
 33694              	.LASF211:
 33695 06f6 73706565 		.ascii	"speed\000"
 33695      6400
 33696              	.LASF215:
 33697 06fc 72785F63 		.ascii	"rx_cmd\000"
 33697      6D6400
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 720


 33698              	.LASF87:
 33699 0703 54595045 		.ascii	"TYPE_DOUBLE\000"
 33699      5F444F55 
 33699      424C4500 
 33700              	.LASF347:
 33701 070f 736C6176 		.ascii	"slave_motor_idx\000"
 33701      655F6D6F 
 33701      746F725F 
 33701      69647800 
 33702              	.LASF364:
 33703 071f 675F6D65 		.ascii	"g_meas\000"
 33703      617300
 33704              	.LASF387:
 33705 0726 456E636F 		.ascii	"Encoder_Check\000"
 33705      6465725F 
 33705      43686563 
 33705      6B00
 33706              	.LASF318:
 33707 0734 6C617374 		.ascii	"last_aux_int16\000"
 33707      5F617578 
 33707      5F696E74 
 33707      313600
 33708              	.LASF76:
 33709 0743 41434B5F 		.ascii	"ACK_ERROR\000"
 33709      4552524F 
 33709      5200
 33710              	.LASF384:
 33711 074d 64617461 		.ascii	"data_encoder_raw\000"
 33711      5F656E63 
 33711      6F646572 
 33711      5F726177 
 33711      00
 33712              	.LASF59:
 33713 075e 494E5055 		.ascii	"INPUT_MODE_EXTERNAL\000"
 33713      545F4D4F 
 33713      44455F45 
 33713      58544552 
 33713      4E414C00 
 33714              	.LASF244:
 33715 0772 696E6465 		.ascii	"index\000"
 33715      7800
 33716              	.LASF189:
 33717 0778 6D617869 		.ascii	"maximum_pressure_kPa\000"
 33717      6D756D5F 
 33717      70726573 
 33717      73757265 
 33717      5F6B5061 
 33718              	.LASF179:
 33719 078d 72657374 		.ascii	"rest_position_flag\000"
 33719      5F706F73 
 33719      6974696F 
 33719      6E5F666C 
 33719      616700
 33720              	.LASF181:
 33721 07a0 6A6F7973 		.ascii	"joystick_closure_speed\000"
 33721      7469636B 
 33721      5F636C6F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 721


 33721      73757265 
 33721      5F737065 
 33722              	.LASF344:
 33723 07b7 66696C65 		.ascii	"filename_length\000"
 33723      6E616D65 
 33723      5F6C656E 
 33723      67746800 
 33724              	.LASF131:
 33725 07c7 6B5F695F 		.ascii	"k_i_c_dl\000"
 33725      635F646C 
 33725      00
 33726              	.LASF324:
 33727 07d0 636F6D6D 		.ascii	"commReadResCurrFromSH\000"
 33727      52656164 
 33727      52657343 
 33727      75727246 
 33727      726F6D53 
 33728              	.LASF323:
 33729 07e6 636D645F 		.ascii	"cmd_get_currents_for_cuff\000"
 33729      6765745F 
 33729      63757272 
 33729      656E7473 
 33729      5F666F72 
 33730              	.LASF265:
 33731 0800 6D61675F 		.ascii	"mag_param_str\000"
 33731      70617261 
 33731      6D5F7374 
 33731      7200
 33732              	.LASF381:
 33733 080e 72657365 		.ascii	"reset_PSoC_flag\000"
 33733      745F5053 
 33733      6F435F66 
 33733      6C616700 
 33734              	.LASF354:
 33735 081e 6F74626B 		.ascii	"otbk_act_wrist_control\000"
 33735      5F616374 
 33735      5F777269 
 33735      73745F63 
 33735      6F6E7472 
 33736              	.LASF88:
 33737 0835 54595045 		.ascii	"TYPE_STRING\000"
 33737      5F535452 
 33737      494E4700 
 33738              	.LASF71:
 33739 0841 43555252 		.ascii	"CURR_AND_POS_CONTROL\000"
 33739      5F414E44 
 33739      5F504F53 
 33739      5F434F4E 
 33739      54524F4C 
 33740              	.LASF28:
 33741 0856 434D445F 		.ascii	"CMD_STORE_PARAMS\000"
 33741      53544F52 
 33741      455F5041 
 33741      52414D53 
 33741      00
 33742              	.LASF226:
 33743 0867 50415241 		.ascii	"PARAMS_STR\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 722


 33743      4D535F53 
 33743      545200
 33744              	.LASF209:
 33745 0872 656E6162 		.ascii	"enabled\000"
 33745      6C656400 
 33746              	.LASF7:
 33747 087a 6C6F6E67 		.ascii	"long unsigned int\000"
 33747      20756E73 
 33747      69676E65 
 33747      6420696E 
 33747      7400
 33748              	.LASF111:
 33749 088c 746F7461 		.ascii	"total_time_on\000"
 33749      6C5F7469 
 33749      6D655F6F 
 33749      6E00
 33750              	.LASF32:
 33751 089a 434D445F 		.ascii	"CMD_BOOTLOADER\000"
 33751      424F4F54 
 33751      4C4F4144 
 33751      455200
 33752              	.LASF183:
 33753 08a9 6A6F7973 		.ascii	"joystick_gains\000"
 33753      7469636B 
 33753      5F676169 
 33753      6E7300
 33754              	.LASF95:
 33755 08b8 686F6C64 		.ascii	"hold_curr\000"
 33755      5F637572 
 33755      7200
 33756              	.LASF65:
 33757 08c2 494E5055 		.ascii	"INPUT_MODE_JOYSTICK\000"
 33757      545F4D4F 
 33757      44455F4A 
 33757      4F595354 
 33757      49434B00 
 33758              	.LASF112:
 33759 08d6 746F7461 		.ascii	"total_time_rest\000"
 33759      6C5F7469 
 33759      6D655F72 
 33759      65737400 
 33760              	.LASF218:
 33761 08e6 7374725F 		.ascii	"str_sd_data\000"
 33761      73645F64 
 33761      61746100 
 33762              	.LASF133:
 33763 08f2 61637469 		.ascii	"activ\000"
 33763      7600
 33764              	.LASF228:
 33765 08f8 4D454E55 		.ascii	"MENU_STR\000"
 33765      5F535452 
 33765      00
 33766              	.LASF150:
 33767 0901 6D5F6F66 		.ascii	"m_off\000"
 33767      6600
 33768              	.LASF77:
 33769 0907 41434B5F 		.ascii	"ACK_OK\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 723


 33769      4F4B00
 33770              	.LASF79:
 33771 090e 54595045 		.ascii	"TYPE_FLAG\000"
 33771      5F464C41 
 33771      4700
 33772              	.LASF206:
 33773 0918 71756174 		.ascii	"quat_value\000"
 33773      5F76616C 
 33773      756500
 33774              	.LASF261:
 33775 0923 7061636B 		.ascii	"packet_length\000"
 33775      65745F6C 
 33775      656E6774 
 33775      6800
 33776              	.LASF176:
 33777 0931 72657374 		.ascii	"rest_pos\000"
 33777      5F706F73 
 33777      00
 33778              	.LASF90:
 33779 093a 63757272 		.ascii	"curr\000"
 33779      00
 33780              	.LASF143:
 33781 093f 696E7075 		.ascii	"input_mode\000"
 33781      745F6D6F 
 33781      646500
 33782              	.LASF69:
 33783 094a 434F4E54 		.ascii	"CONTROL_PWM\000"
 33783      524F4C5F 
 33783      50574D00 
 33784              	.LASF43:
 33785 0956 434D445F 		.ascii	"CMD_GET_EMG\000"
 33785      4745545F 
 33785      454D4700 
 33786              	.LASF308:
 33787 0962 6D656D49 		.ascii	"memInit_SoftHandPro\000"
 33787      6E69745F 
 33787      536F6674 
 33787      48616E64 
 33787      50726F00 
 33788              	.LASF31:
 33789 0976 434D445F 		.ascii	"CMD_GET_INFO\000"
 33789      4745545F 
 33789      494E464F 
 33789      00
 33790              	.LASF257:
 33791 0983 6765745F 		.ascii	"get_IMU_param_list\000"
 33791      494D555F 
 33791      70617261 
 33791      6D5F6C69 
 33791      737400
 33792              	.LASF338:
 33793 0996 73696E67 		.ascii	"single_packet\000"
 33793      6C655F70 
 33793      61636B65 
 33793      7400
 33794              	.LASF260:
 33795 09a4 66697273 		.ascii	"first_imu_parameter\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 724


 33795      745F696D 
 33795      755F7061 
 33795      72616D65 
 33795      74657200 
 33796              	.LASF42:
 33797 09b8 434D445F 		.ascii	"CMD_GET_CURR_AND_MEAS\000"
 33797      4745545F 
 33797      43555252 
 33797      5F414E44 
 33797      5F4D4541 
 33798              	.LASF401:
 33799 09ce 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 33799      43313120 
 33799      352E342E 
 33799      31203230 
 33799      31363036 
 33800 0a01 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 33800      20726576 
 33800      6973696F 
 33800      6E203233 
 33800      37373135 
 33801 0a34 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 33801      66756E63 
 33801      74696F6E 
 33801      2D736563 
 33801      74696F6E 
 33802              	.LASF92:
 33803 0a5c 73745F72 		.ascii	"st_ref\000"
 33803      656600
 33804              	.LASF316:
 33805 0a63 636D645F 		.ascii	"cmd_get_joystick\000"
 33805      6765745F 
 33805      6A6F7973 
 33805      7469636B 
 33805      00
 33806              	.LASF47:
 33807 0a74 434D445F 		.ascii	"CMD_SET_CUFF_INPUTS\000"
 33807      5345545F 
 33807      43554646 
 33807      5F494E50 
 33807      55545300 
 33808              	.LASF175:
 33809 0a88 73745F53 		.ascii	"st_SH_spec\000"
 33809      485F7370 
 33809      656300
 33810              	.LASF372:
 33811 0a93 63616C69 		.ascii	"calib\000"
 33811      6200
 33812              	.LASF6:
 33813 0a99 5F5F7569 		.ascii	"__uint32_t\000"
 33813      6E743332 
 33813      5F7400
 33814              	.LASF8:
 33815 0aa4 6C6F6E67 		.ascii	"long long int\000"
 33815      206C6F6E 
 33815      6720696E 
 33815      7400
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 725


 33816              	.LASF67:
 33817 0ab2 53485F63 		.ascii	"SH_control_mode\000"
 33817      6F6E7472 
 33817      6F6C5F6D 
 33817      6F646500 
 33818              	.LASF81:
 33819 0ac2 54595045 		.ascii	"TYPE_UINT8\000"
 33819      5F55494E 
 33819      543800
 33820              	.LASF322:
 33821 0acd 636D645F 		.ascii	"cmd_get_currents\000"
 33821      6765745F 
 33821      63757272 
 33821      656E7473 
 33821      00
 33822              	.LASF74:
 33823 0ade 4D41584F 		.ascii	"MAXON_12V\000"
 33823      4E5F3132 
 33823      5600
 33824              	.LASF380:
 33825 0ae8 6368616E 		.ascii	"change_ext_ref_flag\000"
 33825      67655F65 
 33825      78745F72 
 33825      65665F66 
 33825      6C616700 
 33826              	.LASF21:
 33827 0afc 646F7562 		.ascii	"double\000"
 33827      6C6500
 33828              	.LASF56:
 33829 0b03 434D445F 		.ascii	"CMD_GET_SD_SINGLE_FILE\000"
 33829      4745545F 
 33829      53445F53 
 33829      494E474C 
 33829      455F4649 
 33830              	.LASF149:
 33831 0b1a 456E635F 		.ascii	"Enc_raw_read_conf\000"
 33831      7261775F 
 33831      72656164 
 33831      5F636F6E 
 33831      6600
 33832              	.LASF212:
 33833 0b2c 72657065 		.ascii	"repetitions\000"
 33833      74697469 
 33833      6F6E7300 
 33834              	.LASF139:
 33835 0b38 6D61785F 		.ascii	"max_step_neg\000"
 33835      73746570 
 33835      5F6E6567 
 33835      00
 33836              	.LASF399:
 33837 0b45 656D675F 		.ascii	"emg_history_next_idx\000"
 33837      68697374 
 33837      6F72795F 
 33837      6E657874 
 33837      5F696478 
 33838              	.LASF186:
 33839 0b5a 736C6176 		.ascii	"slave_ID\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 726


 33839      655F4944 
 33839      00
 33840              	.LASF378:
 33841 0b63 72657365 		.ascii	"reset_last_value_flag\000"
 33841      745F6C61 
 33841      73745F76 
 33841      616C7565 
 33841      5F666C61 
 33842              	.LASF227:
 33843 0b79 43555354 		.ascii	"CUSTOM_PARAM_GET\000"
 33843      4F4D5F50 
 33843      4152414D 
 33843      5F474554 
 33843      00
 33844              	.LASF20:
 33845 0b8a 666C6F61 		.ascii	"float\000"
 33845      7400
 33846              	.LASF165:
 33847 0b90 494D555F 		.ascii	"IMU_conf\000"
 33847      636F6E66 
 33847      00
 33848              	.LASF245:
 33849 0b99 50415241 		.ascii	"PARAM_IDX\000"
 33849      4D5F4944 
 33849      5800
 33850              	.LASF96:
 33851 0ba3 73745F61 		.ascii	"st_adc_meas\000"
 33851      64635F6D 
 33851      65617300 
 33852              	.LASF241:
 33853 0baf 6D5F6164 		.ascii	"m_addr\000"
 33853      647200
 33854              	.LASF371:
 33855 0bb6 635F6D65 		.ascii	"c_mem\000"
 33855      6D00
 33856              	.LASF294:
 33857 0bbc 64617461 		.ascii	"data_array\000"
 33857      5F617272 
 33857      617900
 33858              	.LASF10:
 33859 0bc7 756E7369 		.ascii	"unsigned int\000"
 33859      676E6564 
 33859      20696E74 
 33859      00
 33860              	.LASF351:
 33861 0bd4 6572725F 		.ascii	"err_emg_2\000"
 33861      656D675F 
 33861      3200
 33862              	.LASF309:
 33863 0bde 6D656D49 		.ascii	"memInit_Master\000"
 33863      6E69745F 
 33863      4D617374 
 33863      657200
 33864              	.LASF230:
 33865 0bed 7061636B 		.ascii	"packet_lenght\000"
 33865      65745F6C 
 33865      656E6768 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 727


 33865      7400
 33866              	.LASF297:
 33867 0bfb 73656E64 		.ascii	"sendAcknowledgment\000"
 33867      41636B6E 
 33867      6F776C65 
 33867      64676D65 
 33867      6E7400
 33868              	.LASF282:
 33869 0c0e 70726570 		.ascii	"prepare_SD_legend\000"
 33869      6172655F 
 33869      53445F6C 
 33869      6567656E 
 33869      6400
 33870              	.LASF396:
 33871 0c20 4D616743 		.ascii	"MagCal\000"
 33871      616C00
 33872              	.LASF57:
 33873 0c27 53485F63 		.ascii	"SH_command\000"
 33873      6F6D6D61 
 33873      6E6400
 33874              	.LASF83:
 33875 0c32 54595045 		.ascii	"TYPE_UINT16\000"
 33875      5F55494E 
 33875      54313600 
 33876              	.LASF196:
 33877 0c3e 666C6167 		.ascii	"flag\000"
 33877      00
 33878              	.LASF317:
 33879 0c43 636D645F 		.ascii	"cmd_set_inputs\000"
 33879      7365745F 
 33879      696E7075 
 33879      747300
 33880              	.LASF144:
 33881 0c52 636F6E74 		.ascii	"control_mode\000"
 33881      726F6C5F 
 33881      6D6F6465 
 33881      00
 33882              	.LASF332:
 33883 0c5f 6F66665F 		.ascii	"off_1\000"
 33883      3100
 33884              	.LASF60:
 33885 0c65 494E5055 		.ascii	"INPUT_MODE_ENCODER3\000"
 33885      545F4D4F 
 33885      44455F45 
 33885      4E434F44 
 33885      45523300 
 33886              	.LASF293:
 33887 0c79 636F6D6D 		.ascii	"commWriteID\000"
 33887      57726974 
 33887      65494400 
 33888              	.LASF52:
 33889 0c85 434D445F 		.ascii	"CMD_GET_ENCODER_CONF\000"
 33889      4745545F 
 33889      454E434F 
 33889      4445525F 
 33889      434F4E46 
 33890              	.LASF162:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 728


 33891 0c9a 73745F69 		.ascii	"st_imu\000"
 33891      6D7500
 33892              	.LASF320:
 33893 0ca1 636D645F 		.ascii	"cmd_get_activate\000"
 33893      6765745F 
 33893      61637469 
 33893      76617465 
 33893      00
 33894              	.LASF348:
 33895 0cb2 656D675F 		.ascii	"emg_activation_velocity_fsm\000"
 33895      61637469 
 33895      76617469 
 33895      6F6E5F76 
 33895      656C6F63 
 33896              	.LASF232:
 33897 0cce 73747269 		.ascii	"string_lenght\000"
 33897      6E675F6C 
 33897      656E6768 
 33897      7400
 33898              	.LASF86:
 33899 0cdc 54595045 		.ascii	"TYPE_FLOAT\000"
 33899      5F464C4F 
 33899      415400
 33900              	.LASF250:
 33901 0ce7 43555354 		.ascii	"CUSTOM_PARAM_SET_LIST\000"
 33901      4F4D5F50 
 33901      4152414D 
 33901      5F534554 
 33901      5F4C4953 
 33902              	.LASF224:
 33903 0cfd 4E554D5F 		.ascii	"NUM_STRUCT\000"
 33903      53545255 
 33903      435400
 33904              	.LASF394:
 33905 0d08 73696E67 		.ascii	"single_imu_size\000"
 33905      6C655F69 
 33905      6D755F73 
 33905      697A6500 
 33906              	.LASF255:
 33907 0d18 6175785F 		.ascii	"aux_uchar\000"
 33907      75636861 
 33907      7200
 33908              	.LASF97:
 33909 0d22 6164645F 		.ascii	"add_emg\000"
 33909      656D6700 
 33910              	.LASF82:
 33911 0d2a 54595045 		.ascii	"TYPE_INT16\000"
 33911      5F494E54 
 33911      313600
 33912              	.LASF236:
 33913 0d35 6175785F 		.ascii	"aux_uint16\000"
 33913      75696E74 
 33913      313600
 33914              	.LASF157:
 33915 0d40 656D675F 		.ascii	"emg_threshold\000"
 33915      74687265 
 33915      73686F6C 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 729


 33915      6400
 33916              	.LASF46:
 33917 0d4e 434D445F 		.ascii	"CMD_GET_CURR_DIFF\000"
 33917      4745545F 
 33917      43555252 
 33917      5F444946 
 33917      4600
 33918              	.LASF108:
 33919 0d60 63757272 		.ascii	"current_hist\000"
 33919      656E745F 
 33919      68697374 
 33919      00
 33920              	.LASF70:
 33921 0d6d 434F4E54 		.ascii	"CONTROL_CURRENT\000"
 33921      524F4C5F 
 33921      43555252 
 33921      454E5400 
 33922              	.LASF24:
 33923 0d7d 6C6F6E67 		.ascii	"long double\000"
 33923      20646F75 
 33923      626C6500 
 33924              	.LASF85:
 33925 0d89 54595045 		.ascii	"TYPE_UINT32\000"
 33925      5F55494E 
 33925      54333200 
 33926              	.LASF187:
 33927 0d95 73745F46 		.ascii	"st_FB_spec\000"
 33927      425F7370 
 33927      656300
 33928              	.LASF221:
 33929 0da0 5641525F 		.ascii	"VAR_P\000"
 33929      5000
 33930              	.LASF249:
 33931 0da6 43555354 		.ascii	"CUSTOM_PARAM_GET_LIST\000"
 33931      4F4D5F50 
 33931      4152414D 
 33931      5F474554 
 33931      5F4C4953 
 33932              	.LASF154:
 33933 0dbc 6D6F746F 		.ascii	"motor_handle_ratio\000"
 33933      725F6861 
 33933      6E646C65 
 33933      5F726174 
 33933      696F00
 33934              	.LASF296:
 33935 0dcf 63686563 		.ascii	"checksum\000"
 33935      6B73756D 
 33935      00
 33936              	.LASF363:
 33937 0dd8 675F7265 		.ascii	"g_refOld\000"
 33937      664F6C64 
 33937      00
 33938              	.LASF35:
 33939 0de1 434D445F 		.ascii	"CMD_HAND_CALIBRATE\000"
 33939      48414E44 
 33939      5F43414C 
 33939      49425241 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 730


 33939      544500
 33940              	.LASF204:
 33941 0df4 6779726F 		.ascii	"gyro_value\000"
 33941      5F76616C 
 33941      756500
 33942              	.LASF167:
 33943 0dff 63757272 		.ascii	"curr_time\000"
 33943      5F74696D 
 33943      6500
 33944              	.LASF152:
 33945 0e09 646F7562 		.ascii	"double_encoder_on_off\000"
 33945      6C655F65 
 33945      6E636F64 
 33945      65725F6F 
 33945      6E5F6F66 
 33946              	.LASF355:
 33947 0e1f 64726976 		.ascii	"drive_slave\000"
 33947      655F736C 
 33947      61766500 
 33948              	.LASF164:
 33949 0e2b 5350495F 		.ascii	"SPI_read_delay\000"
 33949      72656164 
 33949      5F64656C 
 33949      617900
 33950              	.LASF75:
 33951 0e3a 61636B6E 		.ascii	"acknowledgment_values\000"
 33951      6F776C65 
 33951      64676D65 
 33951      6E745F76 
 33951      616C7565 
 33952              	.LASF239:
 33953 0e50 4D4F544F 		.ascii	"MOTOR_IDX\000"
 33953      525F4944 
 33953      5800
 33954              	.LASF306:
 33955 0e5a 6D656D52 		.ascii	"memRestore\000"
 33955      6573746F 
 33955      726500
 33956              	.LASF263:
 33957 0e65 6E5F696D 		.ascii	"n_imu_str\000"
 33957      755F7374 
 33957      7200
 33958              	.LASF277:
 33959 0e6f 696E666F 		.ascii	"info_string\000"
 33959      5F737472 
 33959      696E6700 
 33960              	.LASF283:
 33961 0e7b 70726570 		.ascii	"prepare_SD_info\000"
 33961      6172655F 
 33961      53445F69 
 33961      6E666F00 
 33962              	.LASF349:
 33963 0e8b 66736D5F 		.ascii	"fsm_state\000"
 33963      73746174 
 33963      6500
 33964              	.LASF9:
 33965 0e95 6C6F6E67 		.ascii	"long long unsigned int\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 731


 33965      206C6F6E 
 33965      6720756E 
 33965      7369676E 
 33965      65642069 
 33966              	.LASF84:
 33967 0eac 54595045 		.ascii	"TYPE_INT32\000"
 33967      5F494E54 
 33967      333200
 33968              	.LASF238:
 33969 0eb7 6175785F 		.ascii	"aux_uint32\000"
 33969      75696E74 
 33969      333200
 33970              	.LASF103:
 33971 0ec2 6C656E67 		.ascii	"length\000"
 33971      746800
 33972              	.LASF251:
 33973 0ec9 55534552 		.ascii	"USER_ID_PARAM\000"
 33973      5F49445F 
 33973      50415241 
 33973      4D00
 33974              	.LASF201:
 33975 0ed7 73745F69 		.ascii	"st_imu_data\000"
 33975      6D755F64 
 33975      61746100 
 33976              	.LASF205:
 33977 0ee3 6D61675F 		.ascii	"mag_value\000"
 33977      76616C75 
 33977      6500
 33978              	.LASF91:
 33979 0eed 6F6E6F66 		.ascii	"onoff\000"
 33979      6600
 33980              	.LASF45:
 33981 0ef3 434D445F 		.ascii	"CMD_GET_ACCEL\000"
 33981      4745545F 
 33981      41434345 
 33981      4C00
 33982              	.LASF314:
 33983 0f01 636D645F 		.ascii	"cmd_get_velocities\000"
 33983      6765745F 
 33983      76656C6F 
 33983      63697469 
 33983      657300
 33984              	.LASF305:
 33985 0f14 6D656D52 		.ascii	"memRecall\000"
 33985      6563616C 
 33985      6C00
 33986              	.LASF374:
 33987 0f1e 74696D65 		.ascii	"timer_value0\000"
 33987      725F7661 
 33987      6C756530 
 33987      00
 33988              	.LASF48:
 33989 0f2b 434D445F 		.ascii	"CMD_SET_BAUDRATE\000"
 33989      5345545F 
 33989      42415544 
 33989      52415445 
 33989      00
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 732


 33990              	.LASF124:
 33991 0f3c 6B5F705F 		.ascii	"k_p_c\000"
 33991      6300
 33992              	.LASF267:
 33993 0f42 696D755F 		.ascii	"imu_table_str\000"
 33993      7461626C 
 33993      655F7374 
 33993      7200
 33994              	.LASF375:
 33995 0f50 6465765F 		.ascii	"dev_tension\000"
 33995      74656E73 
 33995      696F6E00 
 33996              	.LASF135:
 33997 0f5c 6D6F746F 		.ascii	"motor_driver_type\000"
 33997      725F6472 
 33997      69766572 
 33997      5F747970 
 33997      6500
 33998              	.LASF333:
 33999 0f6e 6D756C74 		.ascii	"mult_1\000"
 33999      5F3100
 34000              	.LASF279:
 34001 0f75 70726570 		.ascii	"prepare_counter_info\000"
 34001      6172655F 
 34001      636F756E 
 34001      7465725F 
 34001      696E666F 
 34002              	.LASF23:
 34003 0f8a 72656738 		.ascii	"reg8\000"
 34003      00
 34004              	.LASF190:
 34005 0f8f 70726F70 		.ascii	"prop_err_fb_gain\000"
 34005      5F657272 
 34005      5F66625F 
 34005      6761696E 
 34005      00
 34006              	.LASF290:
 34007 0fa0 636F6D6D 		.ascii	"commWrite_old_id\000"
 34007      57726974 
 34007      655F6F6C 
 34007      645F6964 
 34007      00
 34008              	.LASF243:
 34009 0fb1 6D616E61 		.ascii	"manage_param_list\000"
 34009      67655F70 
 34009      6172616D 
 34009      5F6C6973 
 34009      7400
 34010              	.LASF30:
 34011 0fc3 434D445F 		.ascii	"CMD_RESTORE_PARAMS\000"
 34011      52455354 
 34011      4F52455F 
 34011      50415241 
 34011      4D5300
 34012              	.LASF389:
 34013 0fd6 73644669 		.ascii	"sdFile\000"
 34013      6C6500
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 733


 34014              	.LASF281:
 34015 0fdd 70726570 		.ascii	"prepare_SD_param_info\000"
 34015      6172655F 
 34015      53445F70 
 34015      6172616D 
 34015      5F696E66 
 34016              	.LASF325:
 34017 0ff3 63757272 		.ascii	"curr_diff\000"
 34017      5F646966 
 34017      6600
 34018              	.LASF185:
 34019 0ffd 736C6176 		.ascii	"slave_comm_active\000"
 34019      655F636F 
 34019      6D6D5F61 
 34019      63746976 
 34019      6500
 34020              	.LASF284:
 34021 100f 70726570 		.ascii	"prepare_SD_EMG_History_legend\000"
 34021      6172655F 
 34021      53445F45 
 34021      4D475F48 
 34021      6973746F 
 34022              	.LASF291:
 34023 102d 6F6C645F 		.ascii	"old_id\000"
 34023      696400
 34024              	.LASF404:
 34025 1034 5F5F5245 		.ascii	"__REV16\000"
 34025      56313600 
 34026              	.LASF385:
 34027 103c 4E5F456E 		.ascii	"N_Encoder_Line_Connected\000"
 34027      636F6465 
 34027      725F4C69 
 34027      6E655F43 
 34027      6F6E6E65 
 34028              	.LASF121:
 34029 1055 6465765F 		.ascii	"dev_type\000"
 34029      74797065 
 34029      00
 34030              	.LASF172:
 34031 105e 73745F75 		.ascii	"st_user\000"
 34031      73657200 
 34032              	.LASF321:
 34033 1066 636D645F 		.ascii	"cmd_get_curr_and_meas\000"
 34033      6765745F 
 34033      63757272 
 34033      5F616E64 
 34033      5F6D6561 
 34034              	.LASF155:
 34035 107c 67656172 		.ascii	"gears_params\000"
 34035      735F7061 
 34035      72616D73 
 34035      00
 34036              	.LASF166:
 34037 1089 73745F65 		.ascii	"st_expansion\000"
 34037      7870616E 
 34037      73696F6E 
 34037      00
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 734


 34038              	.LASF160:
 34039 1096 656D675F 		.ascii	"emg_calibration_flag\000"
 34039      63616C69 
 34039      62726174 
 34039      696F6E5F 
 34039      666C6167 
 34040              	.LASF93:
 34041 10ab 73745F6D 		.ascii	"st_meas\000"
 34041      65617300 
 34042              	.LASF55:
 34043 10b3 434D445F 		.ascii	"CMD_GET_ADC_RAW\000"
 34043      4745545F 
 34043      4144435F 
 34043      52415700 
 34044              	.LASF182:
 34045 10c3 6A6F7973 		.ascii	"joystick_threshold\000"
 34045      7469636B 
 34045      5F746872 
 34045      6573686F 
 34045      6C6400
 34046              	.LASF73:
 34047 10d6 4D41584F 		.ascii	"MAXON_24V\000"
 34047      4E5F3234 
 34047      5600
 34048              	.LASF66:
 34049 10e0 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL_NC\000"
 34049      545F4D4F 
 34049      44455F45 
 34049      4D475F50 
 34049      524F504F 
 34050              	.LASF51:
 34051 10ff 434D445F 		.ascii	"CMD_GET_IMU_PARAM\000"
 34051      4745545F 
 34051      494D555F 
 34051      50415241 
 34051      4D00
 34052              	.LASF368:
 34053 1111 675F6662 		.ascii	"g_fb_meas\000"
 34053      5F6D6561 
 34053      7300
 34054              	.LASF53:
 34055 111b 434D445F 		.ascii	"CMD_GET_ENCODER_RAW\000"
 34055      4745545F 
 34055      454E434F 
 34055      4445525F 
 34055      52415700 
 34056              	.LASF331:
 34057 112f 636D645F 		.ascii	"cmd_store_params\000"
 34057      73746F72 
 34057      655F7061 
 34057      72616D73 
 34057      00
 34058              	.LASF370:
 34059 1140 675F6D65 		.ascii	"g_mem\000"
 34059      6D00
 34060              	.LASF40:
 34061 1146 434D445F 		.ascii	"CMD_GET_MEASUREMENTS\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 735


 34061      4745545F 
 34061      4D454153 
 34061      5552454D 
 34061      454E5453 
 34062              	.LASF367:
 34063 115b 675F6164 		.ascii	"g_adc_measOld\000"
 34063      635F6D65 
 34063      61734F6C 
 34063      6400
 34064              	.LASF340:
 34065 1169 636D645F 		.ascii	"cmd_get_encoder_raw\000"
 34065      6765745F 
 34065      656E636F 
 34065      6465725F 
 34065      72617700 
 34066              	.LASF13:
 34067 117d 75696E74 		.ascii	"uint8\000"
 34067      3800
 34068              	.LASF213:
 34069 1183 636F6D6D 		.ascii	"commProcess\000"
 34069      50726F63 
 34069      65737300 
 34070              	.LASF180:
 34071 118f 73745F4A 		.ascii	"st_JOY_spec\000"
 34071      4F595F73 
 34071      70656300 
 34072              	.LASF2:
 34073 119b 73686F72 		.ascii	"short int\000"
 34073      7420696E 
 34073      7400
 34074              	.LASF310:
 34075 11a5 6D656D49 		.ascii	"memInit_AirChambersFb\000"
 34075      6E69745F 
 34075      41697243 
 34075      68616D62 
 34075      65727346 
 34076              	.LASF271:
 34077 11bb 6964735F 		.ascii	"ids_str_len\000"
 34077      7374725F 
 34077      6C656E00 
 34078              	.LASF129:
 34079 11c7 6B5F645F 		.ascii	"k_d_dl\000"
 34079      646C00
 34080              	.LASF231:
 34081 11ce 6964785F 		.ascii	"idx_menu\000"
 34081      6D656E75 
 34081      00
 34082              	.LASF98:
 34083 11d7 6A6F7973 		.ascii	"joystick\000"
 34083      7469636B 
 34083      00
 34084              	.LASF198:
 34085 11e0 6D6F746F 		.ascii	"motor\000"
 34085      7200
 34086              	.LASF391:
 34087 11e6 4E5F494D 		.ascii	"N_IMU_Connected\000"
 34087      555F436F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 736


 34087      6E6E6563 
 34087      74656400 
 34088              	.LASF39:
 34089 11f6 434D445F 		.ascii	"CMD_GET_INPUTS\000"
 34089      4745545F 
 34089      494E5055 
 34089      545300
 34090              	.LASF114:
 34091 1205 68775F6D 		.ascii	"hw_maint_date\000"
 34091      61696E74 
 34091      5F646174 
 34091      6500
 34092              	.LASF264:
 34093 1213 6964735F 		.ascii	"ids_str\000"
 34093      73747200 
 34094              	.LASF54:
 34095 121b 434D445F 		.ascii	"CMD_GET_ADC_CONF\000"
 34095      4745545F 
 34095      4144435F 
 34095      434F4E46 
 34095      00
 34096              	.LASF27:
 34097 122c 434D445F 		.ascii	"CMD_SET_ZEROS\000"
 34097      5345545F 
 34097      5A45524F 
 34097      5300
 34098              	.LASF272:
 34099 123a 6D61675F 		.ascii	"mag_param_str_len\000"
 34099      70617261 
 34099      6D5F7374 
 34099      725F6C65 
 34099      6E00
 34100              	.LASF258:
 34101 124c 6E756D5F 		.ascii	"num_imus_id_params\000"
 34101      696D7573 
 34101      5F69645F 
 34101      70617261 
 34101      6D7300
 34102              	.LASF235:
 34103 125f 6175785F 		.ascii	"aux_int16\000"
 34103      696E7431 
 34103      3600
 34104              	.LASF398:
 34105 1269 656D675F 		.ascii	"emg_history\000"
 34105      68697374 
 34105      6F727900 
 34106              	.LASF400:
 34107 1275 45455052 		.ascii	"EEPROM_ADDR\000"
 34107      4F4D5F41 
 34107      44445200 
 34108              	.LASF115:
 34109 1281 73746174 		.ascii	"stats_period_begin_date\000"
 34109      735F7065 
 34109      72696F64 
 34109      5F626567 
 34109      696E5F64 
 34110              	.LASF393:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 737


 34111 1299 696D7573 		.ascii	"imus_data_size\000"
 34111      5F646174 
 34111      615F7369 
 34111      7A6500
 34112              	.LASF360:
 34113 12a8 49544D5F 		.ascii	"ITM_RxBuffer\000"
 34113      52784275 
 34113      66666572 
 34113      00
 34114              	.LASF44:
 34115 12b5 434D445F 		.ascii	"CMD_GET_VELOCITIES\000"
 34115      4745545F 
 34115      56454C4F 
 34115      43495449 
 34115      455300
 34116              	.LASF377:
 34117 12c8 706F775F 		.ascii	"pow_tension\000"
 34117      74656E73 
 34117      696F6E00 
 34118              	.LASF34:
 34119 12d4 434D445F 		.ascii	"CMD_GET_PARAM_LIST\000"
 34119      4745545F 
 34119      50415241 
 34119      4D5F4C49 
 34119      535400
 34120              	.LASF78:
 34121 12e7 64617461 		.ascii	"data_types\000"
 34121      5F747970 
 34121      657300
 34122              	.LASF17:
 34123 12f2 696E7431 		.ascii	"int16\000"
 34123      3600
 34124              	.LASF168:
 34125 12f8 72656164 		.ascii	"read_exp_port_flag\000"
 34125      5F657870 
 34125      5F706F72 
 34125      745F666C 
 34125      616700
 34126              	.LASF161:
 34127 130b 73776974 		.ascii	"switch_emg\000"
 34127      63685F65 
 34127      6D6700
 34128              	.LASF134:
 34129 1316 61637469 		.ascii	"activate_pwm_rescaling\000"
 34129      76617465 
 34129      5F70776D 
 34129      5F726573 
 34129      63616C69 
 34130              	.LASF127:
 34131 132d 6B5F705F 		.ascii	"k_p_dl\000"
 34131      646C00
 34132              	.LASF94:
 34133 1334 65737469 		.ascii	"estim_curr\000"
 34133      6D5F6375 
 34133      727200
 34134              	.LASF376:
 34135 133f 6465765F 		.ascii	"dev_pwm_limit\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 738


 34135      70776D5F 
 34135      6C696D69 
 34135      7400
 34136              	.LASF169:
 34137 134d 72656164 		.ascii	"read_ADC_sensors_port_flag\000"
 34137      5F414443 
 34137      5F73656E 
 34137      736F7273 
 34137      5F706F72 
 34138              	.LASF386:
 34139 1368 456E636F 		.ascii	"Encoder_Value\000"
 34139      6465725F 
 34139      56616C75 
 34139      6500
 34140              	.LASF339:
 34141 1376 636D645F 		.ascii	"cmd_get_encoder_map\000"
 34141      6765745F 
 34141      656E636F 
 34141      6465725F 
 34141      6D617000 
 34142              	.LASF120:
 34143 138a 75736572 		.ascii	"user_id\000"
 34143      5F696400 
 34144              	.LASF12:
 34145 1392 75696E74 		.ascii	"uint32_t\000"
 34145      33325F74 
 34145      00
 34146              	.LASF234:
 34147 139b 6175785F 		.ascii	"aux_float\000"
 34147      666C6F61 
 34147      7400
 34148              	.LASF392:
 34149 13a5 494D555F 		.ascii	"IMU_connected\000"
 34149      636F6E6E 
 34149      65637465 
 34149      6400
 34150              	.LASF225:
 34151 13b3 4E554D5F 		.ascii	"NUM_MENU\000"
 34151      4D454E55 
 34151      00
 34152              	.LASF237:
 34153 13bc 6175785F 		.ascii	"aux_int32\000"
 34153      696E7433 
 34153      3200
 34154              	.LASF119:
 34155 13c6 62617564 		.ascii	"baud_rate\000"
 34155      5F726174 
 34155      6500
 34156              	.LASF327:
 34157 13d0 745F656E 		.ascii	"t_end\000"
 34157      6400
 34158              	.LASF193:
 34159 13d6 66617374 		.ascii	"fast_act_threshold\000"
 34159      5F616374 
 34159      5F746872 
 34159      6573686F 
 34159      6C6400
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 739


 34160              	.LASF220:
 34161 13e9 696E666F 		.ascii	"info_type\000"
 34161      5F747970 
 34161      6500
 34162              	.LASF50:
 34163 13f3 434D445F 		.ascii	"CMD_GET_IMU_READINGS\000"
 34163      4745545F 
 34163      494D555F 
 34163      52454144 
 34163      494E4753 
 34164              	.LASF299:
 34165 1408 4C435243 		.ascii	"LCRChecksum\000"
 34165      6865636B 
 34165      73756D00 
 34166              	.LASF336:
 34167 1414 6B5F696D 		.ascii	"k_imu\000"
 34167      7500
 34168              	.LASF3:
 34169 141a 73686F72 		.ascii	"short unsigned int\000"
 34169      7420756E 
 34169      7369676E 
 34169      65642069 
 34169      6E7400
 34170              	.LASF148:
 34171 142d 73745F65 		.ascii	"st_encoder\000"
 34171      6E636F64 
 34171      657200
 34172              	.LASF366:
 34173 1438 675F6164 		.ascii	"g_adc_meas\000"
 34173      635F6D65 
 34173      617300
 34174              	.LASF188:
 34175 1443 6D61785F 		.ascii	"max_residual_current\000"
 34175      72657369 
 34175      6475616C 
 34175      5F637572 
 34175      72656E74 
 34176              	.LASF278:
 34177 1458 454E435F 		.ascii	"ENC_L\000"
 34177      4C00
 34178              	.LASF195:
 34179 145e 73745F65 		.ascii	"st_eeprom\000"
 34179      6570726F 
 34179      6D00
 34180              	.LASF222:
 34181 1468 54595045 		.ascii	"TYPES\000"
 34181      5300
 34182              	.LASF361:
 34183 146e 675F7265 		.ascii	"g_ref\000"
 34183      6600
 34184              	.LASF18:
 34185 1474 696E7433 		.ascii	"int32\000"
 34185      3200
 34186              	.LASF383:
 34187 147a 4E554D5F 		.ascii	"NUM_OF_ANALOG_INPUTS\000"
 34187      4F465F41 
 34187      4E414C4F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 740


 34187      475F494E 
 34187      50555453 
 34188              	.LASF217:
 34189 148f 696E666F 		.ascii	"infoGet\000"
 34189      47657400 
 34190              	.LASF123:
 34191 1497 73745F6D 		.ascii	"st_motor\000"
 34191      6F746F72 
 34191      00
 34192              	.LASF397:
 34193 14a0 6D617374 		.ascii	"master_mode\000"
 34193      65725F6D 
 34193      6F646500 
 34194              	.LASF89:
 34195 14ac 46535F46 		.ascii	"FS_FILE\000"
 34195      494C4500 
 34196              	.LASF136:
 34197 14b4 706F735F 		.ascii	"pos_lim_flag\000"
 34197      6C696D5F 
 34197      666C6167 
 34197      00
 34198              	.LASF365:
 34199 14c1 675F6D65 		.ascii	"g_measOld\000"
 34199      61734F6C 
 34199      6400
 34200              	.LASF68:
 34201 14cb 434F4E54 		.ascii	"CONTROL_ANGLE\000"
 34201      524F4C5F 
 34201      414E474C 
 34201      4500
 34202              	.LASF319:
 34203 14d9 636D645F 		.ascii	"cmd_activate\000"
 34203      61637469 
 34203      76617465 
 34203      00
 34204              	.LASF5:
 34205 14e6 5F5F696E 		.ascii	"__int32_t\000"
 34205      7433325F 
 34205      7400
 34206              	.LASF247:
 34207 14f0 7370695F 		.ascii	"spi_delay_menu\000"
 34207      64656C61 
 34207      795F6D65 
 34207      6E7500
 34208              	.LASF110:
 34209 14ff 77697265 		.ascii	"wire_disp\000"
 34209      5F646973 
 34209      7000
 34210              	.LASF158:
 34211 1509 656D675F 		.ascii	"emg_max_value\000"
 34211      6D61785F 
 34211      76616C75 
 34211      6500
 34212              	.LASF252:
 34213 1517 43555354 		.ascii	"CUSTOM_PARAM_SET\000"
 34213      4F4D5F50 
 34213      4152414D 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccW1eOBG.s 			page 741


 34213      5F534554 
 34213      00
 34214              	.LASF402:
 34215 1528 2E2E5C73 		.ascii	"..\\src\\command_processing.c\000"
 34215      72635C63 
 34215      6F6D6D61 
 34215      6E645F70 
 34215      726F6365 
 34216              	.LASF142:
 34217 1544 63757272 		.ascii	"current_limit\000"
 34217      656E745F 
 34217      6C696D69 
 34217      7400
 34218              	.LASF58:
 34219 1552 53485F69 		.ascii	"SH_input_mode\000"
 34219      6E707574 
 34219      5F6D6F64 
 34219      6500
 34220              	.LASF80:
 34221 1560 54595045 		.ascii	"TYPE_INT8\000"
 34221      5F494E54 
 34221      3800
 34222              	.LASF192:
 34223 156a 61637469 		.ascii	"activation_mode\000"
 34223      76617469 
 34223      6F6E5F6D 
 34223      6F646500 
 34224              	.LASF289:
 34225 157a 494D555F 		.ascii	"IMU_reading_info\000"
 34225      72656164 
 34225      696E675F 
 34225      696E666F 
 34225      00
 34226              	.LASF14:
 34227 158b 75696E74 		.ascii	"uint16\000"
 34227      313600
 34228              	.LASF177:
 34229 1592 72657374 		.ascii	"rest_delay\000"
 34229      5F64656C 
 34229      617900
 34230              	.LASF233:
 34231 159d 6175785F 		.ascii	"aux_str\000"
 34231      73747200 
 34232              	.LASF26:
 34233 15a5 434D445F 		.ascii	"CMD_PING\000"
 34233      50494E47 
 34233      00
 34234              	.LASF132:
 34235 15ae 6B5F645F 		.ascii	"k_d_c_dl\000"
 34235      635F646C 
 34235      00
 34236              	.LASF210:
 34237 15b7 64697265 		.ascii	"direction\000"
 34237      6374696F 
 34237      6E00
 34238              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
