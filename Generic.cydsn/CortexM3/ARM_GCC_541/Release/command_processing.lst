ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"command_processing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	EEPROM_ADDR
  20              		.data
  21              		.align	2
  22              		.type	EEPROM_ADDR, %object
  23              		.size	EEPROM_ADDR, 4
  24              	EEPROM_ADDR:
  25 0000 00800040 		.word	1073774592
  26              		.section	.text.commProcess,"ax",%progbits
  27              		.align	2
  28              		.global	commProcess
  29              		.thumb
  30              		.thumb_func
  31              		.type	commProcess, %function
  32              	commProcess:
  33              	.LFB64:
  34              		.file 1 "..\\src\\command_processing.c"
   1:..\src/command_processing.c **** // ----------------------------------------------------------------------------
   2:..\src/command_processing.c **** // BSD 3-Clause License
   3:..\src/command_processing.c **** 
   4:..\src/command_processing.c **** // Copyright (c) 2016, qbrobotics
   5:..\src/command_processing.c **** // Copyright (c) 2017-2020, Centro "E.Piaggio"
   6:..\src/command_processing.c **** // All rights reserved.
   7:..\src/command_processing.c **** 
   8:..\src/command_processing.c **** // Redistribution and use in source and binary forms, with or without
   9:..\src/command_processing.c **** // modification, are permitted provided that the following conditions are met:
  10:..\src/command_processing.c **** 
  11:..\src/command_processing.c **** // * Redistributions of source code must retain the above copyright notice, this
  12:..\src/command_processing.c **** //   list of conditions and the following disclaimer.
  13:..\src/command_processing.c **** 
  14:..\src/command_processing.c **** // * Redistributions in binary form must reproduce the above copyright notice,
  15:..\src/command_processing.c **** //   this list of conditions and the following disclaimer in the documentation
  16:..\src/command_processing.c **** //   and/or other materials provided with the distribution.
  17:..\src/command_processing.c **** 
  18:..\src/command_processing.c **** // * Neither the name of the copyright holder nor the names of its
  19:..\src/command_processing.c **** //   contributors may be used to endorse or promote products derived from
  20:..\src/command_processing.c **** //   this software without specific prior written permission.
  21:..\src/command_processing.c **** 
  22:..\src/command_processing.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:..\src/command_processing.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 2


  24:..\src/command_processing.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:..\src/command_processing.c **** // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:..\src/command_processing.c **** // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:..\src/command_processing.c **** // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:..\src/command_processing.c **** // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:..\src/command_processing.c **** // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:..\src/command_processing.c **** // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:..\src/command_processing.c **** // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:..\src/command_processing.c **** // POSSIBILITY OF SUCH DAMAGE.
  33:..\src/command_processing.c **** // ----------------------------------------------------------------------------
  34:..\src/command_processing.c **** 
  35:..\src/command_processing.c **** 
  36:..\src/command_processing.c **** /**
  37:..\src/command_processing.c **** * \file         command_processing.c
  38:..\src/command_processing.c **** *
  39:..\src/command_processing.c **** 
  40:..\src/command_processing.c **** * \brief        Command processing functions.
  41:..\src/command_processing.c **** * \date         March 20th, 2020
  42:..\src/command_processing.c **** * \author       _Centro "E.Piaggio"_
  43:..\src/command_processing.c **** * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  44:..\src/command_processing.c **** * \copyright    (C) 2017-2020 Centro "E.Piaggio". All rights reserved.
  45:..\src/command_processing.c **** */
  46:..\src/command_processing.c **** //=================================================================     includes
  47:..\src/command_processing.c **** #include "command_processing.h"
  48:..\src/command_processing.c **** 
  49:..\src/command_processing.c **** //================================================================     variables
  50:..\src/command_processing.c **** 
  51:..\src/command_processing.c **** reg8 * EEPROM_ADDR = (reg8 *) CYDEV_EE_BASE;
  52:..\src/command_processing.c **** 
  53:..\src/command_processing.c **** //==============================================================================
  54:..\src/command_processing.c **** //                                                            RX DATA PROCESSING
  55:..\src/command_processing.c **** //==============================================================================
  56:..\src/command_processing.c **** //  This function checks for the availability of a data packet and process it:
  57:..\src/command_processing.c **** //      - Verify checksum;
  58:..\src/command_processing.c **** //      - Process commands;
  59:..\src/command_processing.c **** //==============================================================================
  60:..\src/command_processing.c **** 
  61:..\src/command_processing.c **** void commProcess(void){
  35              		.loc 1 61 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 40
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 8AB0     		sub	sp, sp, #40
  44              		.cfi_def_cfa_offset 48
  45 0004 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  62:..\src/command_processing.c **** 
  63:..\src/command_processing.c ****     uint8 CYDATA rx_cmd;
  64:..\src/command_processing.c ****     rx_cmd = g_rx.buffer[0];
  47              		.loc 1 64 0
  48 0006 E34B     		ldr	r3, .L51
  49 0008 1B78     		ldrb	r3, [r3]
  50 000a 87F82730 		strb	r3, [r7, #39]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 3


  65:..\src/command_processing.c **** 
  66:..\src/command_processing.c **** //==========================================================     verify checksum
  67:..\src/command_processing.c **** 
  68:..\src/command_processing.c ****     if (!(LCRChecksum(g_rx.buffer, g_rx.length - 1) == g_rx.buffer[g_rx.length - 1])){
  51              		.loc 1 68 0
  52 000e E14B     		ldr	r3, .L51
  53 0010 B3F98030 		ldrsh	r3, [r3, #128]
  54 0014 DBB2     		uxtb	r3, r3
  55 0016 013B     		subs	r3, r3, #1
  56 0018 DBB2     		uxtb	r3, r3
  57 001a 1946     		mov	r1, r3
  58 001c DD48     		ldr	r0, .L51
  59 001e FFF7FEFF 		bl	LCRChecksum
  60 0022 0346     		mov	r3, r0
  61 0024 1946     		mov	r1, r3
  62 0026 DB4B     		ldr	r3, .L51
  63 0028 B3F98030 		ldrsh	r3, [r3, #128]
  64 002c 013B     		subs	r3, r3, #1
  65 002e D94A     		ldr	r2, .L51
  66 0030 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
  67 0032 9942     		cmp	r1, r3
  68 0034 04D0     		beq	.L2
  69:..\src/command_processing.c ****         // Wrong checksum
  70:..\src/command_processing.c ****         g_rx.ready = 0;
  69              		.loc 1 70 0
  70 0036 D74B     		ldr	r3, .L51
  71 0038 0022     		movs	r2, #0
  72 003a 83F88420 		strb	r2, [r3, #132]
  71:..\src/command_processing.c ****         return;
  73              		.loc 1 71 0
  74 003e 53E2     		b	.L1
  75              	.L2:
  72:..\src/command_processing.c ****     }
  73:..\src/command_processing.c **** 
  74:..\src/command_processing.c ****     switch(rx_cmd) {
  76              		.loc 1 74 0
  77 0040 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
  78 0044 A72B     		cmp	r3, #167
  79 0046 00F24E82 		bhi	.L50
  80 004a 01A2     		adr	r2, .L6
  81 004c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  82              		.p2align 2
  83              	.L6:
  84 0050 75030000 		.word	.L5+1
  85 0054 57030000 		.word	.L7+1
  86 0058 E7040000 		.word	.L50+1
  87 005c 7B030000 		.word	.L8+1
  88 0060 81030000 		.word	.L9+1
  89 0064 A5030000 		.word	.L10+1
  90 0068 3F030000 		.word	.L11+1
  91 006c E7040000 		.word	.L50+1
  92 0070 E7040000 		.word	.L50+1
  93 0074 D9030000 		.word	.L12+1
  94 0078 BF030000 		.word	.L13+1
  95 007c E7040000 		.word	.L50+1
  96 0080 5D030000 		.word	.L14+1
  97 0084 FB030000 		.word	.L15+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 4


  98 0088 E7040000 		.word	.L50+1
  99 008c E7040000 		.word	.L50+1
 100 0090 E7040000 		.word	.L50+1
 101 0094 E7040000 		.word	.L50+1
 102 0098 E7040000 		.word	.L50+1
 103 009c E7040000 		.word	.L50+1
 104 00a0 E7040000 		.word	.L50+1
 105 00a4 E7040000 		.word	.L50+1
 106 00a8 E7040000 		.word	.L50+1
 107 00ac E7040000 		.word	.L50+1
 108 00b0 E7040000 		.word	.L50+1
 109 00b4 E7040000 		.word	.L50+1
 110 00b8 E7040000 		.word	.L50+1
 111 00bc E7040000 		.word	.L50+1
 112 00c0 E7040000 		.word	.L50+1
 113 00c4 E7040000 		.word	.L50+1
 114 00c8 E7040000 		.word	.L50+1
 115 00cc E7040000 		.word	.L50+1
 116 00d0 E7040000 		.word	.L50+1
 117 00d4 E7040000 		.word	.L50+1
 118 00d8 E7040000 		.word	.L50+1
 119 00dc E7040000 		.word	.L50+1
 120 00e0 E7040000 		.word	.L50+1
 121 00e4 E7040000 		.word	.L50+1
 122 00e8 E7040000 		.word	.L50+1
 123 00ec E7040000 		.word	.L50+1
 124 00f0 E7040000 		.word	.L50+1
 125 00f4 E7040000 		.word	.L50+1
 126 00f8 E7040000 		.word	.L50+1
 127 00fc E7040000 		.word	.L50+1
 128 0100 E7040000 		.word	.L50+1
 129 0104 E7040000 		.word	.L50+1
 130 0108 E7040000 		.word	.L50+1
 131 010c E7040000 		.word	.L50+1
 132 0110 E7040000 		.word	.L50+1
 133 0114 E7040000 		.word	.L50+1
 134 0118 E7040000 		.word	.L50+1
 135 011c E7040000 		.word	.L50+1
 136 0120 E7040000 		.word	.L50+1
 137 0124 E7040000 		.word	.L50+1
 138 0128 E7040000 		.word	.L50+1
 139 012c E7040000 		.word	.L50+1
 140 0130 E7040000 		.word	.L50+1
 141 0134 E7040000 		.word	.L50+1
 142 0138 E7040000 		.word	.L50+1
 143 013c E7040000 		.word	.L50+1
 144 0140 E7040000 		.word	.L50+1
 145 0144 E7040000 		.word	.L50+1
 146 0148 E7040000 		.word	.L50+1
 147 014c E7040000 		.word	.L50+1
 148 0150 E7040000 		.word	.L50+1
 149 0154 E7040000 		.word	.L50+1
 150 0158 E7040000 		.word	.L50+1
 151 015c E7040000 		.word	.L50+1
 152 0160 E7040000 		.word	.L50+1
 153 0164 E7040000 		.word	.L50+1
 154 0168 E7040000 		.word	.L50+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 5


 155 016c E7040000 		.word	.L50+1
 156 0170 E7040000 		.word	.L50+1
 157 0174 E7040000 		.word	.L50+1
 158 0178 E7040000 		.word	.L50+1
 159 017c E7040000 		.word	.L50+1
 160 0180 E7040000 		.word	.L50+1
 161 0184 E7040000 		.word	.L50+1
 162 0188 E7040000 		.word	.L50+1
 163 018c E7040000 		.word	.L50+1
 164 0190 E7040000 		.word	.L50+1
 165 0194 E7040000 		.word	.L50+1
 166 0198 E7040000 		.word	.L50+1
 167 019c E7040000 		.word	.L50+1
 168 01a0 E7040000 		.word	.L50+1
 169 01a4 E7040000 		.word	.L50+1
 170 01a8 E7040000 		.word	.L50+1
 171 01ac E7040000 		.word	.L50+1
 172 01b0 E7040000 		.word	.L50+1
 173 01b4 E7040000 		.word	.L50+1
 174 01b8 E7040000 		.word	.L50+1
 175 01bc E7040000 		.word	.L50+1
 176 01c0 E7040000 		.word	.L50+1
 177 01c4 E7040000 		.word	.L50+1
 178 01c8 E7040000 		.word	.L50+1
 179 01cc E7040000 		.word	.L50+1
 180 01d0 E7040000 		.word	.L50+1
 181 01d4 E7040000 		.word	.L50+1
 182 01d8 E7040000 		.word	.L50+1
 183 01dc E7040000 		.word	.L50+1
 184 01e0 E7040000 		.word	.L50+1
 185 01e4 E7040000 		.word	.L50+1
 186 01e8 E7040000 		.word	.L50+1
 187 01ec E7040000 		.word	.L50+1
 188 01f0 E7040000 		.word	.L50+1
 189 01f4 E7040000 		.word	.L50+1
 190 01f8 E7040000 		.word	.L50+1
 191 01fc E7040000 		.word	.L50+1
 192 0200 E7040000 		.word	.L50+1
 193 0204 E7040000 		.word	.L50+1
 194 0208 E7040000 		.word	.L50+1
 195 020c E7040000 		.word	.L50+1
 196 0210 E7040000 		.word	.L50+1
 197 0214 E7040000 		.word	.L50+1
 198 0218 E7040000 		.word	.L50+1
 199 021c E7040000 		.word	.L50+1
 200 0220 E7040000 		.word	.L50+1
 201 0224 E7040000 		.word	.L50+1
 202 0228 E7040000 		.word	.L50+1
 203 022c E7040000 		.word	.L50+1
 204 0230 E7040000 		.word	.L50+1
 205 0234 E7040000 		.word	.L50+1
 206 0238 E7040000 		.word	.L50+1
 207 023c E7040000 		.word	.L50+1
 208 0240 E7040000 		.word	.L50+1
 209 0244 E7040000 		.word	.L50+1
 210 0248 E7040000 		.word	.L50+1
 211 024c E7040000 		.word	.L50+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 6


 212 0250 F1020000 		.word	.L16+1
 213 0254 2D030000 		.word	.L17+1
 214 0258 F7020000 		.word	.L18+1
 215 025c 39030000 		.word	.L19+1
 216 0260 FD020000 		.word	.L20+1
 217 0264 09030000 		.word	.L21+1
 218 0268 03030000 		.word	.L22+1
 219 026c E7040000 		.word	.L50+1
 220 0270 27030000 		.word	.L23+1
 221 0274 15030000 		.word	.L24+1
 222 0278 E7040000 		.word	.L50+1
 223 027c 1B030000 		.word	.L25+1
 224 0280 0F030000 		.word	.L26+1
 225 0284 E7040000 		.word	.L50+1
 226 0288 E7040000 		.word	.L50+1
 227 028c E7040000 		.word	.L50+1
 228 0290 33030000 		.word	.L27+1
 229 0294 E7040000 		.word	.L50+1
 230 0298 21030000 		.word	.L28+1
 231 029c E7040000 		.word	.L50+1
 232 02a0 E7040000 		.word	.L50+1
 233 02a4 E7040000 		.word	.L50+1
 234 02a8 E7040000 		.word	.L50+1
 235 02ac E7040000 		.word	.L50+1
 236 02b0 E7040000 		.word	.L50+1
 237 02b4 E7040000 		.word	.L50+1
 238 02b8 E7040000 		.word	.L50+1
 239 02bc E7040000 		.word	.L50+1
 240 02c0 E7040000 		.word	.L50+1
 241 02c4 E7040000 		.word	.L50+1
 242 02c8 E7040000 		.word	.L50+1
 243 02cc E7040000 		.word	.L50+1
 244 02d0 E7040000 		.word	.L50+1
 245 02d4 99040000 		.word	.L29+1
 246 02d8 9F040000 		.word	.L30+1
 247 02dc B7040000 		.word	.L31+1
 248 02e0 BD040000 		.word	.L32+1
 249 02e4 C3040000 		.word	.L33+1
 250 02e8 C9040000 		.word	.L34+1
 251 02ec CF040000 		.word	.L35+1
 252              		.p2align 1
 253              	.L16:
  75:..\src/command_processing.c **** 
  76:..\src/command_processing.c **** //=============================================================     CMD_ACTIVATE
  77:..\src/command_processing.c ****         case CMD_ACTIVATE:
  78:..\src/command_processing.c ****             cmd_activate();
 254              		.loc 1 78 0
 255 02f0 FFF7FEFF 		bl	cmd_activate
  79:..\src/command_processing.c ****             break;
 256              		.loc 1 79 0
 257 02f4 F8E0     		b	.L1
 258              	.L18:
  80:..\src/command_processing.c **** 
  81:..\src/command_processing.c **** //===========================================================     CMD_SET_INPUTS
  82:..\src/command_processing.c **** 
  83:..\src/command_processing.c ****         case CMD_SET_INPUTS:
  84:..\src/command_processing.c ****             cmd_set_inputs();
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 7


 259              		.loc 1 84 0
 260 02f6 FFF7FEFF 		bl	cmd_set_inputs
  85:..\src/command_processing.c ****             break;
 261              		.loc 1 85 0
 262 02fa F5E0     		b	.L1
 263              	.L20:
  86:..\src/command_processing.c **** 
  87:..\src/command_processing.c **** //=====================================================     CMD_GET_MEASUREMENTS
  88:..\src/command_processing.c **** 
  89:..\src/command_processing.c ****         case CMD_GET_MEASUREMENTS:
  90:..\src/command_processing.c ****             cmd_get_measurements();
 264              		.loc 1 90 0
 265 02fc FFF7FEFF 		bl	cmd_get_measurements
  91:..\src/command_processing.c ****             break;
 266              		.loc 1 91 0
 267 0300 F2E0     		b	.L1
 268              	.L22:
  92:..\src/command_processing.c **** 
  93:..\src/command_processing.c **** //=====================================================     CMD_GET_CURR_AND_MEAS
  94:..\src/command_processing.c **** 
  95:..\src/command_processing.c ****         case CMD_GET_CURR_AND_MEAS:
  96:..\src/command_processing.c ****             cmd_get_curr_and_meas();
 269              		.loc 1 96 0
 270 0302 FFF7FEFF 		bl	cmd_get_curr_and_meas
  97:..\src/command_processing.c ****             break;
 271              		.loc 1 97 0
 272 0306 EFE0     		b	.L1
 273              	.L21:
  98:..\src/command_processing.c ****             
  99:..\src/command_processing.c **** //=========================================================     CMD_GET_CURRENTS
 100:..\src/command_processing.c **** 
 101:..\src/command_processing.c ****         case CMD_GET_CURRENTS:
 102:..\src/command_processing.c ****             cmd_get_currents();
 274              		.loc 1 102 0
 275 0308 FFF7FEFF 		bl	cmd_get_currents
 103:..\src/command_processing.c ****             break;
 276              		.loc 1 103 0
 277 030c ECE0     		b	.L1
 278              	.L26:
 104:..\src/command_processing.c **** 
 105:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 106:..\src/command_processing.c ****          
 107:..\src/command_processing.c ****         case CMD_GET_CURR_DIFF:
 108:..\src/command_processing.c ****             cmd_get_currents_for_cuff();
 279              		.loc 1 108 0
 280 030e FFF7FEFF 		bl	cmd_get_currents_for_cuff
 109:..\src/command_processing.c ****             break;
 281              		.loc 1 109 0
 282 0312 E9E0     		b	.L1
 283              	.L24:
 110:..\src/command_processing.c ****             
 111:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 112:..\src/command_processing.c ****         
 113:..\src/command_processing.c ****         case CMD_GET_VELOCITIES:
 114:..\src/command_processing.c ****             cmd_get_velocities();
 284              		.loc 1 114 0
 285 0314 FFF7FEFF 		bl	cmd_get_velocities
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 8


 115:..\src/command_processing.c ****             break;
 286              		.loc 1 115 0
 287 0318 E6E0     		b	.L1
 288              	.L25:
 116:..\src/command_processing.c ****             
 117:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 118:..\src/command_processing.c **** 
 119:..\src/command_processing.c ****         case CMD_GET_ACCEL:
 120:..\src/command_processing.c ****             cmd_get_accelerations();
 289              		.loc 1 120 0
 290 031a FFF7FEFF 		bl	cmd_get_accelerations
 121:..\src/command_processing.c ****             break;
 291              		.loc 1 121 0
 292 031e E3E0     		b	.L1
 293              	.L28:
 122:..\src/command_processing.c **** 
 123:..\src/command_processing.c **** //=========================================================     CMD_GET_JOYSTICK
 124:..\src/command_processing.c **** 
 125:..\src/command_processing.c ****         case CMD_GET_JOYSTICK:
 126:..\src/command_processing.c ****             cmd_get_joystick();
 294              		.loc 1 126 0
 295 0320 FFF7FEFF 		bl	cmd_get_joystick
 127:..\src/command_processing.c ****         break;
 296              		.loc 1 127 0
 297 0324 E0E0     		b	.L1
 298              	.L23:
 128:..\src/command_processing.c ****             
 129:..\src/command_processing.c **** //=========================================================     CMD_GET_EMG
 130:..\src/command_processing.c **** 
 131:..\src/command_processing.c ****         case CMD_GET_EMG:
 132:..\src/command_processing.c ****             cmd_get_emg();
 299              		.loc 1 132 0
 300 0326 FFF7FEFF 		bl	cmd_get_emg
 133:..\src/command_processing.c ****             break;
 301              		.loc 1 133 0
 302 032a DDE0     		b	.L1
 303              	.L17:
 134:..\src/command_processing.c ****             
 135:..\src/command_processing.c **** //=========================================================     CMD_GET_ACTIVATE
 136:..\src/command_processing.c ****             
 137:..\src/command_processing.c ****         case CMD_GET_ACTIVATE:
 138:..\src/command_processing.c ****             cmd_get_activate();
 304              		.loc 1 138 0
 305 032c FFF7FEFF 		bl	cmd_get_activate
 139:..\src/command_processing.c ****             break;
 306              		.loc 1 139 0
 307 0330 DAE0     		b	.L1
 308              	.L27:
 140:..\src/command_processing.c ****             
 141:..\src/command_processing.c **** //=========================================================     CMD_SET_BAUDRATE
 142:..\src/command_processing.c ****             
 143:..\src/command_processing.c ****         case CMD_SET_BAUDRATE:
 144:..\src/command_processing.c ****             cmd_set_baudrate();
 309              		.loc 1 144 0
 310 0332 FFF7FEFF 		bl	cmd_set_baudrate
 145:..\src/command_processing.c ****             break;  
 311              		.loc 1 145 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 9


 312 0336 D7E0     		b	.L1
 313              	.L19:
 146:..\src/command_processing.c ****             
 147:..\src/command_processing.c **** //============================================================     CMD_GET_INPUT
 148:..\src/command_processing.c **** 
 149:..\src/command_processing.c ****         case CMD_GET_INPUTS:
 150:..\src/command_processing.c ****             cmd_get_inputs();
 314              		.loc 1 150 0
 315 0338 FFF7FEFF 		bl	cmd_get_inputs
 151:..\src/command_processing.c ****             break;
 316              		.loc 1 151 0
 317 033c D4E0     		b	.L1
 318              	.L11:
 152:..\src/command_processing.c **** 
 153:..\src/command_processing.c **** //=============================================================     CMD_GET_INFO
 154:..\src/command_processing.c **** 
 155:..\src/command_processing.c ****         case CMD_GET_INFO:
 156:..\src/command_processing.c ****             infoGet(  __REV16(*((uint16 *) &g_rx.buffer[1])) );
 319              		.loc 1 156 0
 320 033e 164B     		ldr	r3, .L51+4
 321 0340 1B88     		ldrh	r3, [r3]
 322 0342 7B61     		str	r3, [r7, #20]
 323              	.LBB10:
 324              	.LBB11:
 325              		.file 2 "Generated_Source\\PSoC5/cmsis_gcc.h"
   1:Generated_Source\PSoC5/cmsis_gcc.h **** /**************************************************************************//**
   2:Generated_Source\PSoC5/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Generated_Source\PSoC5/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Generated_Source\PSoC5/cmsis_gcc.h ****  * @version  V5.00
   5:Generated_Source\PSoC5/cmsis_gcc.h ****  * @date     28. October 2016
   6:Generated_Source\PSoC5/cmsis_gcc.h ****  ******************************************************************************/
   7:Generated_Source\PSoC5/cmsis_gcc.h **** /*
   8:Generated_Source\PSoC5/cmsis_gcc.h ****  * Copyright (c) 2009-2016 ARM Limited. All rights reserved.
   9:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  10:Generated_Source\PSoC5/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  12:Generated_Source\PSoC5/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Generated_Source\PSoC5/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Generated_Source\PSoC5/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  16:Generated_Source\PSoC5/cmsis_gcc.h ****  * http://www.apache.org/licenses/LICENSE-2.0
  17:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  18:Generated_Source\PSoC5/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Generated_Source\PSoC5/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Generated_Source\PSoC5/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Generated_Source\PSoC5/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Generated_Source\PSoC5/cmsis_gcc.h ****  * limitations under the License.
  23:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  24:Generated_Source\PSoC5/cmsis_gcc.h **** 
  25:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Generated_Source\PSoC5/cmsis_gcc.h **** 
  28:Generated_Source\PSoC5/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 10


  33:Generated_Source\PSoC5/cmsis_gcc.h **** 
  34:Generated_Source\PSoC5/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ASM
  36:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ASM                     __asm
  37:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  38:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __INLINE
  39:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __INLINE                  inline
  40:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  41:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  44:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __NO_RETURN
  45:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  47:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __USED
  48:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  50:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   _WEAK
  51:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  53:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:Generated_Source\PSoC5/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  55:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  56:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  57:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ALIGNED
  58:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  59:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  60:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __PACKED
  61:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  62:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  63:Generated_Source\PSoC5/cmsis_gcc.h **** 
  64:Generated_Source\PSoC5/cmsis_gcc.h **** 
  65:Generated_Source\PSoC5/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  66:Generated_Source\PSoC5/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  67:Generated_Source\PSoC5/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  68:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
  69:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  70:Generated_Source\PSoC5/cmsis_gcc.h **** 
  71:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  72:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  73:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  74:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  75:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  76:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  77:Generated_Source\PSoC5/cmsis_gcc.h **** {
  78:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  79:Generated_Source\PSoC5/cmsis_gcc.h **** }
  80:Generated_Source\PSoC5/cmsis_gcc.h **** 
  81:Generated_Source\PSoC5/cmsis_gcc.h **** 
  82:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  83:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  84:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  85:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  86:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  87:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  88:Generated_Source\PSoC5/cmsis_gcc.h **** {
  89:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 11


  90:Generated_Source\PSoC5/cmsis_gcc.h **** }
  91:Generated_Source\PSoC5/cmsis_gcc.h **** 
  92:Generated_Source\PSoC5/cmsis_gcc.h **** 
  93:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  94:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register
  95:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  96:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Control Register value
  97:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  98:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
  99:Generated_Source\PSoC5/cmsis_gcc.h **** {
 100:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 101:Generated_Source\PSoC5/cmsis_gcc.h **** 
 102:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 103:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 104:Generated_Source\PSoC5/cmsis_gcc.h **** }
 105:Generated_Source\PSoC5/cmsis_gcc.h **** 
 106:Generated_Source\PSoC5/cmsis_gcc.h **** 
 107:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 108:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 109:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 110:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 111:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               non-secure Control Register value
 112:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 113:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 114:Generated_Source\PSoC5/cmsis_gcc.h **** {
 115:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 116:Generated_Source\PSoC5/cmsis_gcc.h **** 
 117:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 118:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 119:Generated_Source\PSoC5/cmsis_gcc.h **** }
 120:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 121:Generated_Source\PSoC5/cmsis_gcc.h **** 
 122:Generated_Source\PSoC5/cmsis_gcc.h **** 
 123:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 124:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register
 125:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 126:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 127:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 128:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 129:Generated_Source\PSoC5/cmsis_gcc.h **** {
 130:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 131:Generated_Source\PSoC5/cmsis_gcc.h **** }
 132:Generated_Source\PSoC5/cmsis_gcc.h **** 
 133:Generated_Source\PSoC5/cmsis_gcc.h **** 
 134:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 135:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 136:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 137:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 138:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 139:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 140:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 141:Generated_Source\PSoC5/cmsis_gcc.h **** {
 142:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 143:Generated_Source\PSoC5/cmsis_gcc.h **** }
 144:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 145:Generated_Source\PSoC5/cmsis_gcc.h **** 
 146:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 12


 147:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 148:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get IPSR Register
 149:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 150:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               IPSR Register value
 151:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 152:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 153:Generated_Source\PSoC5/cmsis_gcc.h **** {
 154:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 155:Generated_Source\PSoC5/cmsis_gcc.h **** 
 156:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 157:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 158:Generated_Source\PSoC5/cmsis_gcc.h **** }
 159:Generated_Source\PSoC5/cmsis_gcc.h **** 
 160:Generated_Source\PSoC5/cmsis_gcc.h **** 
 161:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 162:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get APSR Register
 163:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 164:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               APSR Register value
 165:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 166:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 167:Generated_Source\PSoC5/cmsis_gcc.h **** {
 168:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 169:Generated_Source\PSoC5/cmsis_gcc.h **** 
 170:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 171:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 172:Generated_Source\PSoC5/cmsis_gcc.h **** }
 173:Generated_Source\PSoC5/cmsis_gcc.h **** 
 174:Generated_Source\PSoC5/cmsis_gcc.h **** 
 175:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 176:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get xPSR Register
 177:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 178:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               xPSR Register value
 179:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 180:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 181:Generated_Source\PSoC5/cmsis_gcc.h **** {
 182:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 183:Generated_Source\PSoC5/cmsis_gcc.h **** 
 184:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 185:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 186:Generated_Source\PSoC5/cmsis_gcc.h **** }
 187:Generated_Source\PSoC5/cmsis_gcc.h **** 
 188:Generated_Source\PSoC5/cmsis_gcc.h **** 
 189:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 190:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 191:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 192:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 193:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 194:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 195:Generated_Source\PSoC5/cmsis_gcc.h **** {
 196:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 197:Generated_Source\PSoC5/cmsis_gcc.h **** 
 198:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 199:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 200:Generated_Source\PSoC5/cmsis_gcc.h **** }
 201:Generated_Source\PSoC5/cmsis_gcc.h **** 
 202:Generated_Source\PSoC5/cmsis_gcc.h **** 
 203:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 13


 204:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 205:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 206:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 207:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 208:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 209:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 210:Generated_Source\PSoC5/cmsis_gcc.h **** {
 211:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 212:Generated_Source\PSoC5/cmsis_gcc.h **** 
 213:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 214:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 215:Generated_Source\PSoC5/cmsis_gcc.h **** }
 216:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 217:Generated_Source\PSoC5/cmsis_gcc.h **** 
 218:Generated_Source\PSoC5/cmsis_gcc.h **** 
 219:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 220:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 221:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 222:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 223:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 224:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 225:Generated_Source\PSoC5/cmsis_gcc.h **** {
 226:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : "sp");
 227:Generated_Source\PSoC5/cmsis_gcc.h **** }
 228:Generated_Source\PSoC5/cmsis_gcc.h **** 
 229:Generated_Source\PSoC5/cmsis_gcc.h **** 
 230:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 231:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 232:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 233:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 234:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 235:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 236:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 237:Generated_Source\PSoC5/cmsis_gcc.h **** {
 238:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : "sp");
 239:Generated_Source\PSoC5/cmsis_gcc.h **** }
 240:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 241:Generated_Source\PSoC5/cmsis_gcc.h **** 
 242:Generated_Source\PSoC5/cmsis_gcc.h **** 
 243:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 244:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 245:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 246:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 247:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 248:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 249:Generated_Source\PSoC5/cmsis_gcc.h **** {
 250:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 251:Generated_Source\PSoC5/cmsis_gcc.h **** 
 252:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 253:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 254:Generated_Source\PSoC5/cmsis_gcc.h **** }
 255:Generated_Source\PSoC5/cmsis_gcc.h **** 
 256:Generated_Source\PSoC5/cmsis_gcc.h **** 
 257:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 258:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 259:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 260:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 14


 261:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 262:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 263:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 264:Generated_Source\PSoC5/cmsis_gcc.h **** {
 265:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 266:Generated_Source\PSoC5/cmsis_gcc.h **** 
 267:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 268:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 269:Generated_Source\PSoC5/cmsis_gcc.h **** }
 270:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 271:Generated_Source\PSoC5/cmsis_gcc.h **** 
 272:Generated_Source\PSoC5/cmsis_gcc.h **** 
 273:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 274:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 275:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 276:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 277:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 278:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 279:Generated_Source\PSoC5/cmsis_gcc.h **** {
 280:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : "sp");
 281:Generated_Source\PSoC5/cmsis_gcc.h **** }
 282:Generated_Source\PSoC5/cmsis_gcc.h **** 
 283:Generated_Source\PSoC5/cmsis_gcc.h **** 
 284:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 285:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 286:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 287:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 288:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 289:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 290:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 291:Generated_Source\PSoC5/cmsis_gcc.h **** {
 292:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : "sp");
 293:Generated_Source\PSoC5/cmsis_gcc.h **** }
 294:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 295:Generated_Source\PSoC5/cmsis_gcc.h **** 
 296:Generated_Source\PSoC5/cmsis_gcc.h **** 
 297:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 298:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask
 299:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 300:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 301:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 302:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 303:Generated_Source\PSoC5/cmsis_gcc.h **** {
 304:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 305:Generated_Source\PSoC5/cmsis_gcc.h **** 
 306:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 307:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 308:Generated_Source\PSoC5/cmsis_gcc.h **** }
 309:Generated_Source\PSoC5/cmsis_gcc.h **** 
 310:Generated_Source\PSoC5/cmsis_gcc.h **** 
 311:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 312:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 313:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 314:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 315:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 316:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 317:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 15


 318:Generated_Source\PSoC5/cmsis_gcc.h **** {
 319:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 320:Generated_Source\PSoC5/cmsis_gcc.h **** 
 321:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 322:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 323:Generated_Source\PSoC5/cmsis_gcc.h **** }
 324:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 325:Generated_Source\PSoC5/cmsis_gcc.h **** 
 326:Generated_Source\PSoC5/cmsis_gcc.h **** 
 327:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 328:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask
 329:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 330:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 331:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 332:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 333:Generated_Source\PSoC5/cmsis_gcc.h **** {
 334:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 335:Generated_Source\PSoC5/cmsis_gcc.h **** }
 336:Generated_Source\PSoC5/cmsis_gcc.h **** 
 337:Generated_Source\PSoC5/cmsis_gcc.h **** 
 338:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 339:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 340:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 341:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 342:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 343:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 344:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 345:Generated_Source\PSoC5/cmsis_gcc.h **** {
 346:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 347:Generated_Source\PSoC5/cmsis_gcc.h **** }
 348:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 349:Generated_Source\PSoC5/cmsis_gcc.h **** 
 350:Generated_Source\PSoC5/cmsis_gcc.h **** 
 351:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 352:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 353:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 354:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 355:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable FIQ
 356:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 357:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 358:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 359:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 360:Generated_Source\PSoC5/cmsis_gcc.h **** {
 361:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 362:Generated_Source\PSoC5/cmsis_gcc.h **** }
 363:Generated_Source\PSoC5/cmsis_gcc.h **** 
 364:Generated_Source\PSoC5/cmsis_gcc.h **** 
 365:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 366:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable FIQ
 367:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 368:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 369:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 370:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 371:Generated_Source\PSoC5/cmsis_gcc.h **** {
 372:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 373:Generated_Source\PSoC5/cmsis_gcc.h **** }
 374:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 16


 375:Generated_Source\PSoC5/cmsis_gcc.h **** 
 376:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 377:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority
 378:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 379:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 380:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 381:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 382:Generated_Source\PSoC5/cmsis_gcc.h **** {
 383:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 384:Generated_Source\PSoC5/cmsis_gcc.h **** 
 385:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 386:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 387:Generated_Source\PSoC5/cmsis_gcc.h **** }
 388:Generated_Source\PSoC5/cmsis_gcc.h **** 
 389:Generated_Source\PSoC5/cmsis_gcc.h **** 
 390:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 391:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 392:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 393:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 394:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 395:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 396:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 397:Generated_Source\PSoC5/cmsis_gcc.h **** {
 398:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 399:Generated_Source\PSoC5/cmsis_gcc.h **** 
 400:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 401:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 402:Generated_Source\PSoC5/cmsis_gcc.h **** }
 403:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 404:Generated_Source\PSoC5/cmsis_gcc.h **** 
 405:Generated_Source\PSoC5/cmsis_gcc.h **** 
 406:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 407:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority
 408:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 409:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 410:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 411:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 412:Generated_Source\PSoC5/cmsis_gcc.h **** {
 413:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 414:Generated_Source\PSoC5/cmsis_gcc.h **** }
 415:Generated_Source\PSoC5/cmsis_gcc.h **** 
 416:Generated_Source\PSoC5/cmsis_gcc.h **** 
 417:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 419:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 420:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 421:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 422:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 423:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 424:Generated_Source\PSoC5/cmsis_gcc.h **** {
 425:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 426:Generated_Source\PSoC5/cmsis_gcc.h **** }
 427:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 428:Generated_Source\PSoC5/cmsis_gcc.h **** 
 429:Generated_Source\PSoC5/cmsis_gcc.h **** 
 430:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 431:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority with condition
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 17


 432:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 433:Generated_Source\PSoC5/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 434:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 435:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 436:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 437:Generated_Source\PSoC5/cmsis_gcc.h **** {
 438:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 439:Generated_Source\PSoC5/cmsis_gcc.h **** }
 440:Generated_Source\PSoC5/cmsis_gcc.h **** 
 441:Generated_Source\PSoC5/cmsis_gcc.h **** 
 442:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 443:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask
 444:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 445:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 446:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 447:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 448:Generated_Source\PSoC5/cmsis_gcc.h **** {
 449:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 450:Generated_Source\PSoC5/cmsis_gcc.h **** 
 451:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 452:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 453:Generated_Source\PSoC5/cmsis_gcc.h **** }
 454:Generated_Source\PSoC5/cmsis_gcc.h **** 
 455:Generated_Source\PSoC5/cmsis_gcc.h **** 
 456:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 457:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 458:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 459:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 460:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 461:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 462:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 463:Generated_Source\PSoC5/cmsis_gcc.h **** {
 464:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 465:Generated_Source\PSoC5/cmsis_gcc.h **** 
 466:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 467:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 468:Generated_Source\PSoC5/cmsis_gcc.h **** }
 469:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 470:Generated_Source\PSoC5/cmsis_gcc.h **** 
 471:Generated_Source\PSoC5/cmsis_gcc.h **** 
 472:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 473:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask
 474:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 475:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 476:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 477:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 478:Generated_Source\PSoC5/cmsis_gcc.h **** {
 479:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 480:Generated_Source\PSoC5/cmsis_gcc.h **** }
 481:Generated_Source\PSoC5/cmsis_gcc.h **** 
 482:Generated_Source\PSoC5/cmsis_gcc.h **** 
 483:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 484:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 485:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 486:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 487:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 488:Generated_Source\PSoC5/cmsis_gcc.h ****  */
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 18


 489:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 490:Generated_Source\PSoC5/cmsis_gcc.h **** {
 491:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 492:Generated_Source\PSoC5/cmsis_gcc.h **** }
 493:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 494:Generated_Source\PSoC5/cmsis_gcc.h **** 
 495:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 496:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 497:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 498:Generated_Source\PSoC5/cmsis_gcc.h **** 
 499:Generated_Source\PSoC5/cmsis_gcc.h **** 
 500:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 501:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    )
 502:Generated_Source\PSoC5/cmsis_gcc.h **** 
 503:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 504:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 505:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 506:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 507:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 508:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 509:Generated_Source\PSoC5/cmsis_gcc.h **** {
 510:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 511:Generated_Source\PSoC5/cmsis_gcc.h **** 
 512:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 513:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 514:Generated_Source\PSoC5/cmsis_gcc.h **** }
 515:Generated_Source\PSoC5/cmsis_gcc.h **** 
 516:Generated_Source\PSoC5/cmsis_gcc.h **** 
 517:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 518:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 519:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 520:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 521:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 522:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 523:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 524:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 525:Generated_Source\PSoC5/cmsis_gcc.h **** {
 526:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 527:Generated_Source\PSoC5/cmsis_gcc.h **** 
 528:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 529:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 530:Generated_Source\PSoC5/cmsis_gcc.h **** }
 531:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 532:Generated_Source\PSoC5/cmsis_gcc.h **** 
 533:Generated_Source\PSoC5/cmsis_gcc.h **** 
 534:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 535:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 536:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 537:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 538:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 539:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 540:Generated_Source\PSoC5/cmsis_gcc.h **** {
 541:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 542:Generated_Source\PSoC5/cmsis_gcc.h **** }
 543:Generated_Source\PSoC5/cmsis_gcc.h **** 
 544:Generated_Source\PSoC5/cmsis_gcc.h **** 
 545:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 19


 546:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 547:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 548:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 549:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 550:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 551:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 552:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 553:Generated_Source\PSoC5/cmsis_gcc.h **** {
 554:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 555:Generated_Source\PSoC5/cmsis_gcc.h **** }
 556:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 557:Generated_Source\PSoC5/cmsis_gcc.h **** 
 558:Generated_Source\PSoC5/cmsis_gcc.h **** 
 559:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 560:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 561:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 562:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 563:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 564:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 565:Generated_Source\PSoC5/cmsis_gcc.h **** {
 566:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 567:Generated_Source\PSoC5/cmsis_gcc.h **** 
 568:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 569:Generated_Source\PSoC5/cmsis_gcc.h **** 
 570:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 571:Generated_Source\PSoC5/cmsis_gcc.h **** }
 572:Generated_Source\PSoC5/cmsis_gcc.h **** 
 573:Generated_Source\PSoC5/cmsis_gcc.h **** 
 574:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 575:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 576:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 577:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 578:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 579:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 580:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 581:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 582:Generated_Source\PSoC5/cmsis_gcc.h **** {
 583:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 584:Generated_Source\PSoC5/cmsis_gcc.h **** 
 585:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 586:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 587:Generated_Source\PSoC5/cmsis_gcc.h **** }
 588:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 589:Generated_Source\PSoC5/cmsis_gcc.h **** 
 590:Generated_Source\PSoC5/cmsis_gcc.h **** 
 591:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 592:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 593:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 594:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 595:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 596:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 597:Generated_Source\PSoC5/cmsis_gcc.h **** {
 598:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 599:Generated_Source\PSoC5/cmsis_gcc.h **** }
 600:Generated_Source\PSoC5/cmsis_gcc.h **** 
 601:Generated_Source\PSoC5/cmsis_gcc.h **** 
 602:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 20


 603:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 604:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 605:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 606:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 607:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 608:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 609:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 610:Generated_Source\PSoC5/cmsis_gcc.h **** {
 611:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 612:Generated_Source\PSoC5/cmsis_gcc.h **** }
 613:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 614:Generated_Source\PSoC5/cmsis_gcc.h **** 
 615:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 616:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    ) */
 617:Generated_Source\PSoC5/cmsis_gcc.h **** 
 618:Generated_Source\PSoC5/cmsis_gcc.h **** 
 619:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 620:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 621:Generated_Source\PSoC5/cmsis_gcc.h **** 
 622:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 623:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get FPSCR
 624:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 625:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 626:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 627:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 628:Generated_Source\PSoC5/cmsis_gcc.h **** {
 629:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 630:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 631:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 632:Generated_Source\PSoC5/cmsis_gcc.h **** 
 633:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                 /* Empty asm statement works as a scheduling
 634:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 635:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 636:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 637:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 638:Generated_Source\PSoC5/cmsis_gcc.h ****    return(0U);
 639:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 640:Generated_Source\PSoC5/cmsis_gcc.h **** }
 641:Generated_Source\PSoC5/cmsis_gcc.h **** 
 642:Generated_Source\PSoC5/cmsis_gcc.h **** 
 643:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 644:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set FPSCR
 645:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 646:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 647:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 648:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 649:Generated_Source\PSoC5/cmsis_gcc.h **** {
 650:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 651:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 652:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                           /* Empty asm statement works as a 
 653:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 654:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 655:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 656:Generated_Source\PSoC5/cmsis_gcc.h **** }
 657:Generated_Source\PSoC5/cmsis_gcc.h **** 
 658:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 659:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 21


 660:Generated_Source\PSoC5/cmsis_gcc.h **** 
 661:Generated_Source\PSoC5/cmsis_gcc.h **** 
 662:Generated_Source\PSoC5/cmsis_gcc.h **** 
 663:Generated_Source\PSoC5/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 664:Generated_Source\PSoC5/cmsis_gcc.h **** 
 665:Generated_Source\PSoC5/cmsis_gcc.h **** 
 666:Generated_Source\PSoC5/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 667:Generated_Source\PSoC5/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 668:Generated_Source\PSoC5/cmsis_gcc.h ****   Access to dedicated instructions
 669:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
 670:Generated_Source\PSoC5/cmsis_gcc.h **** */
 671:Generated_Source\PSoC5/cmsis_gcc.h **** 
 672:Generated_Source\PSoC5/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 673:Generated_Source\PSoC5/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 674:Generated_Source\PSoC5/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 675:Generated_Source\PSoC5/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 676:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 677:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 678:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 679:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 680:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 681:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 682:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 683:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 684:Generated_Source\PSoC5/cmsis_gcc.h **** 
 685:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 686:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   No Operation
 687:Generated_Source\PSoC5/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 688:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 689:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 690:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 691:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("nop");
 692:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 693:Generated_Source\PSoC5/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 694:Generated_Source\PSoC5/cmsis_gcc.h **** 
 695:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 696:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Interrupt
 697:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 698:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 699:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 700:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 701:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfi");
 702:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 703:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 704:Generated_Source\PSoC5/cmsis_gcc.h **** 
 705:Generated_Source\PSoC5/cmsis_gcc.h **** 
 706:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 707:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Event
 708:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 709:Generated_Source\PSoC5/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 710:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 711:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 712:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 713:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfe");
 714:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 715:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 716:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 22


 717:Generated_Source\PSoC5/cmsis_gcc.h **** 
 718:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 719:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Send Event
 720:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 721:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 722:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 723:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 724:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("sev");
 725:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 726:Generated_Source\PSoC5/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 727:Generated_Source\PSoC5/cmsis_gcc.h **** 
 728:Generated_Source\PSoC5/cmsis_gcc.h **** 
 729:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 730:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 731:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 732:Generated_Source\PSoC5/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 733:Generated_Source\PSoC5/cmsis_gcc.h ****            after the instruction has been completed.
 734:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 735:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 736:Generated_Source\PSoC5/cmsis_gcc.h **** {
 737:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 738:Generated_Source\PSoC5/cmsis_gcc.h **** }
 739:Generated_Source\PSoC5/cmsis_gcc.h **** 
 740:Generated_Source\PSoC5/cmsis_gcc.h **** 
 741:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 742:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 743:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 744:Generated_Source\PSoC5/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 745:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 746:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 747:Generated_Source\PSoC5/cmsis_gcc.h **** {
 748:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 749:Generated_Source\PSoC5/cmsis_gcc.h **** }
 750:Generated_Source\PSoC5/cmsis_gcc.h **** 
 751:Generated_Source\PSoC5/cmsis_gcc.h **** 
 752:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 753:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Memory Barrier
 754:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 755:Generated_Source\PSoC5/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 756:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 757:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 758:Generated_Source\PSoC5/cmsis_gcc.h **** {
 759:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 760:Generated_Source\PSoC5/cmsis_gcc.h **** }
 761:Generated_Source\PSoC5/cmsis_gcc.h **** 
 762:Generated_Source\PSoC5/cmsis_gcc.h **** 
 763:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 764:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 765:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 766:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 767:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 768:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 769:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 770:Generated_Source\PSoC5/cmsis_gcc.h **** {
 771:Generated_Source\PSoC5/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 772:Generated_Source\PSoC5/cmsis_gcc.h ****   return __builtin_bswap32(value);
 773:Generated_Source\PSoC5/cmsis_gcc.h **** #else
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 23


 774:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 775:Generated_Source\PSoC5/cmsis_gcc.h **** 
 776:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 777:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 778:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 779:Generated_Source\PSoC5/cmsis_gcc.h **** }
 780:Generated_Source\PSoC5/cmsis_gcc.h **** 
 781:Generated_Source\PSoC5/cmsis_gcc.h **** 
 782:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 783:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 784:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 785:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 786:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 787:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 788:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 789:Generated_Source\PSoC5/cmsis_gcc.h **** {
 790:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 791:Generated_Source\PSoC5/cmsis_gcc.h **** 
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 326              		.loc 2 792 0
 327 0344 7B69     		ldr	r3, [r7, #20]
 328              		.syntax unified
 329              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 330 0346 5BBA     		rev16 r3, r3
 331              	@ 0 "" 2
 332              		.thumb
 333              		.syntax unified
 334 0348 3B61     		str	r3, [r7, #16]
 793:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 335              		.loc 2 793 0
 336 034a 3B69     		ldr	r3, [r7, #16]
 337              	.LBE11:
 338              	.LBE10:
 339              		.loc 1 156 0
 340 034c 9BB2     		uxth	r3, r3
 341 034e 1846     		mov	r0, r3
 342 0350 FFF7FEFF 		bl	infoGet
 157:..\src/command_processing.c ****             break;
 343              		.loc 1 157 0
 344 0354 C8E0     		b	.L1
 345              	.L7:
 158:..\src/command_processing.c **** 
 159:..\src/command_processing.c **** //============================================================     CMD_SET_PARAM
 160:..\src/command_processing.c **** 
 161:..\src/command_processing.c ****         case CMD_SET_ZEROS:
 162:..\src/command_processing.c ****             setZeros();
 346              		.loc 1 162 0
 347 0356 FFF7FEFF 		bl	setZeros
 163:..\src/command_processing.c ****             break;
 348              		.loc 1 163 0
 349 035a C5E0     		b	.L1
 350              	.L14:
 164:..\src/command_processing.c **** 
 165:..\src/command_processing.c **** //============================================================     CMD_GET_PARAM
 166:..\src/command_processing.c **** 
 167:..\src/command_processing.c ****         case CMD_GET_PARAM_LIST:
 168:..\src/command_processing.c ****             manage_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 24


 351              		.loc 1 168 0
 352 035c 0E4B     		ldr	r3, .L51+4
 353 035e 1B88     		ldrh	r3, [r3]
 354 0360 3B62     		str	r3, [r7, #32]
 355              	.LBB12:
 356              	.LBB13:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 357              		.loc 2 792 0
 358 0362 3B6A     		ldr	r3, [r7, #32]
 359              		.syntax unified
 360              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 361 0364 5BBA     		rev16 r3, r3
 362              	@ 0 "" 2
 363              		.thumb
 364              		.syntax unified
 365 0366 FB60     		str	r3, [r7, #12]
 366              		.loc 2 793 0
 367 0368 FB68     		ldr	r3, [r7, #12]
 368              	.LBE13:
 369              	.LBE12:
 370              		.loc 1 168 0
 371 036a 9BB2     		uxth	r3, r3
 372 036c 1846     		mov	r0, r3
 373 036e FFF7FEFF 		bl	manage_param_list
 169:..\src/command_processing.c ****             break;
 374              		.loc 1 169 0
 375 0372 B9E0     		b	.L1
 376              	.L5:
 170:..\src/command_processing.c **** 
 171:..\src/command_processing.c **** //=================================================================     CMD_PING
 172:..\src/command_processing.c ****             
 173:..\src/command_processing.c ****         case CMD_PING:
 174:..\src/command_processing.c ****             cmd_ping();
 377              		.loc 1 174 0
 378 0374 FFF7FEFF 		bl	cmd_ping
 175:..\src/command_processing.c ****             break;
 379              		.loc 1 175 0
 380 0378 B6E0     		b	.L1
 381              	.L8:
 176:..\src/command_processing.c **** 
 177:..\src/command_processing.c **** //=========================================================     CMD_STORE_PARAMS
 178:..\src/command_processing.c ****             
 179:..\src/command_processing.c ****         case CMD_STORE_PARAMS:
 180:..\src/command_processing.c ****             cmd_store_params();
 382              		.loc 1 180 0
 383 037a FFF7FEFF 		bl	cmd_store_params
 181:..\src/command_processing.c ****             break;
 384              		.loc 1 181 0
 385 037e B3E0     		b	.L1
 386              	.L9:
 182:..\src/command_processing.c **** 
 183:..\src/command_processing.c **** //=================================================     CMD_STORE_DEFAULT_PARAMS
 184:..\src/command_processing.c **** 
 185:..\src/command_processing.c ****         case CMD_STORE_DEFAULT_PARAMS:
 186:..\src/command_processing.c ****             if(memStore(DEFAULT_EEPROM_DISPLACEMENT))
 387              		.loc 1 186 0
 388 0380 3220     		movs	r0, #50
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 25


 389 0382 FFF7FEFF 		bl	memStore
 390 0386 0346     		mov	r3, r0
 391 0388 002B     		cmp	r3, #0
 392 038a 07D0     		beq	.L38
 187:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 393              		.loc 1 187 0
 394 038c 0120     		movs	r0, #1
 395 038e FFF7FEFF 		bl	sendAcknowledgment
 188:..\src/command_processing.c ****             else
 189:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 190:..\src/command_processing.c ****             break;
 396              		.loc 1 190 0
 397 0392 A9E0     		b	.L1
 398              	.L52:
 399              		.align	2
 400              	.L51:
 401 0394 00000000 		.word	g_rx
 402 0398 01000000 		.word	g_rx+1
 403              	.L38:
 189:..\src/command_processing.c ****             break;
 404              		.loc 1 189 0
 405 039c 0020     		movs	r0, #0
 406 039e FFF7FEFF 		bl	sendAcknowledgment
 407              		.loc 1 190 0
 408 03a2 A1E0     		b	.L1
 409              	.L10:
 191:..\src/command_processing.c **** 
 192:..\src/command_processing.c **** //=======================================================     CMD_RESTORE_PARAMS
 193:..\src/command_processing.c **** 
 194:..\src/command_processing.c ****         case CMD_RESTORE_PARAMS:
 195:..\src/command_processing.c ****             if(memRestore())
 410              		.loc 1 195 0
 411 03a4 FFF7FEFF 		bl	memRestore
 412 03a8 0346     		mov	r3, r0
 413 03aa 002B     		cmp	r3, #0
 414 03ac 03D0     		beq	.L40
 196:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 415              		.loc 1 196 0
 416 03ae 0120     		movs	r0, #1
 417 03b0 FFF7FEFF 		bl	sendAcknowledgment
 197:..\src/command_processing.c ****             else
 198:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 199:..\src/command_processing.c ****             break;
 418              		.loc 1 199 0
 419 03b4 98E0     		b	.L1
 420              	.L40:
 198:..\src/command_processing.c ****             break;
 421              		.loc 1 198 0
 422 03b6 0020     		movs	r0, #0
 423 03b8 FFF7FEFF 		bl	sendAcknowledgment
 424              		.loc 1 199 0
 425 03bc 94E0     		b	.L1
 426              	.L13:
 200:..\src/command_processing.c **** 
 201:..\src/command_processing.c **** //=============================================================     CMD_INIT_MEM
 202:..\src/command_processing.c **** 
 203:..\src/command_processing.c ****         case CMD_INIT_MEM:            
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 26


 204:..\src/command_processing.c ****             if(memInit())
 427              		.loc 1 204 0
 428 03be FFF7FEFF 		bl	memInit
 429 03c2 0346     		mov	r3, r0
 430 03c4 002B     		cmp	r3, #0
 431 03c6 03D0     		beq	.L42
 205:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 432              		.loc 1 205 0
 433 03c8 0120     		movs	r0, #1
 434 03ca FFF7FEFF 		bl	sendAcknowledgment
 206:..\src/command_processing.c ****             else
 207:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 208:..\src/command_processing.c ****             break;
 435              		.loc 1 208 0
 436 03ce 8BE0     		b	.L1
 437              	.L42:
 207:..\src/command_processing.c ****             break;
 438              		.loc 1 207 0
 439 03d0 0020     		movs	r0, #0
 440 03d2 FFF7FEFF 		bl	sendAcknowledgment
 441              		.loc 1 208 0
 442 03d6 87E0     		b	.L1
 443              	.L12:
 209:..\src/command_processing.c **** 
 210:..\src/command_processing.c **** //===========================================================     CMD_BOOTLOADER
 211:..\src/command_processing.c **** 
 212:..\src/command_processing.c ****         case CMD_BOOTLOADER:
 213:..\src/command_processing.c ****             //Not sure if ACK_OK is correct, should check
 214:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 444              		.loc 1 214 0
 445 03d8 0120     		movs	r0, #1
 446 03da FFF7FEFF 		bl	sendAcknowledgment
 215:..\src/command_processing.c ****             CyDelay(1000);
 447              		.loc 1 215 0
 448 03de 4FF47A70 		mov	r0, #1000
 449 03e2 FFF7FEFF 		bl	CyDelay
 216:..\src/command_processing.c ****             FTDI_ENABLE_Write(0x00);
 450              		.loc 1 216 0
 451 03e6 0020     		movs	r0, #0
 452 03e8 FFF7FEFF 		bl	FTDI_ENABLE_Write
 217:..\src/command_processing.c ****             CyDelay(1000);
 453              		.loc 1 217 0
 454 03ec 4FF47A70 		mov	r0, #1000
 455 03f0 FFF7FEFF 		bl	CyDelay
 218:..\src/command_processing.c ****             Bootloadable_Load();
 456              		.loc 1 218 0
 457 03f4 FFF7FEFF 		bl	Bootloadable_Load
 219:..\src/command_processing.c ****             break;
 458              		.loc 1 219 0
 459 03f8 76E0     		b	.L1
 460              	.L15:
 220:..\src/command_processing.c **** 
 221:..\src/command_processing.c **** //============================================================     CMD_HAND_CALIBRATE
 222:..\src/command_processing.c **** 
 223:..\src/command_processing.c ****         case CMD_HAND_CALIBRATE:
 224:..\src/command_processing.c ****             calib.speed = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 461              		.loc 1 224 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 27


 462 03fa 3D4B     		ldr	r3, .L53
 463 03fc 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 464 03fe 1B02     		lsls	r3, r3, #8
 465 0400 1AB2     		sxth	r2, r3
 466 0402 3B4B     		ldr	r3, .L53
 467 0404 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 468 0406 1BB2     		sxth	r3, r3
 469 0408 1343     		orrs	r3, r3, r2
 470 040a 1AB2     		sxth	r2, r3
 471 040c 394B     		ldr	r3, .L53+4
 472 040e 5A80     		strh	r2, [r3, #2]	@ movhi
 225:..\src/command_processing.c ****             calib.repetitions = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 473              		.loc 1 225 0
 474 0410 374B     		ldr	r3, .L53
 475 0412 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 476 0414 1B02     		lsls	r3, r3, #8
 477 0416 1AB2     		sxth	r2, r3
 478 0418 354B     		ldr	r3, .L53
 479 041a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 480 041c 1BB2     		sxth	r3, r3
 481 041e 1343     		orrs	r3, r3, r2
 482 0420 1AB2     		sxth	r2, r3
 483 0422 344B     		ldr	r3, .L53+4
 484 0424 9A80     		strh	r2, [r3, #4]	@ movhi
 226:..\src/command_processing.c ****             
 227:..\src/command_processing.c ****             if(calib.speed == -1 && calib.repetitions == -1) {
 485              		.loc 1 227 0
 486 0426 334B     		ldr	r3, .L53+4
 487 0428 B3F90230 		ldrsh	r3, [r3, #2]
 488 042c B3F1FF3F 		cmp	r3, #-1
 489 0430 0FD1     		bne	.L44
 490              		.loc 1 227 0 is_stmt 0 discriminator 1
 491 0432 304B     		ldr	r3, .L53+4
 492 0434 B3F90430 		ldrsh	r3, [r3, #4]
 493 0438 B3F1FF3F 		cmp	r3, #-1
 494 043c 09D1     		bne	.L44
 228:..\src/command_processing.c ****                 calib.enabled = FALSE;
 495              		.loc 1 228 0 is_stmt 1
 496 043e 2D4B     		ldr	r3, .L53+4
 497 0440 0022     		movs	r2, #0
 498 0442 1A70     		strb	r2, [r3]
 229:..\src/command_processing.c ****                 calib.speed = 0;
 499              		.loc 1 229 0
 500 0444 2B4B     		ldr	r3, .L53+4
 501 0446 0022     		movs	r2, #0
 502 0448 5A80     		strh	r2, [r3, #2]	@ movhi
 230:..\src/command_processing.c ****                 calib.repetitions = 0;
 503              		.loc 1 230 0
 504 044a 2A4B     		ldr	r3, .L53+4
 505 044c 0022     		movs	r2, #0
 506 044e 9A80     		strh	r2, [r3, #4]	@ movhi
 231:..\src/command_processing.c ****                 break;
 507              		.loc 1 231 0
 508 0450 4AE0     		b	.L1
 509              	.L44:
 232:..\src/command_processing.c ****             }
 233:..\src/command_processing.c ****             // Speed & repetitions saturations
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 28


 234:..\src/command_processing.c ****             if (calib.speed < 0) {
 510              		.loc 1 234 0
 511 0452 284B     		ldr	r3, .L53+4
 512 0454 B3F90230 		ldrsh	r3, [r3, #2]
 513 0458 002B     		cmp	r3, #0
 514 045a 03DA     		bge	.L45
 235:..\src/command_processing.c ****                 calib.speed = 0;
 515              		.loc 1 235 0
 516 045c 254B     		ldr	r3, .L53+4
 517 045e 0022     		movs	r2, #0
 518 0460 5A80     		strh	r2, [r3, #2]	@ movhi
 519 0462 07E0     		b	.L46
 520              	.L45:
 236:..\src/command_processing.c ****             } else if (calib.speed > 200) {
 521              		.loc 1 236 0
 522 0464 234B     		ldr	r3, .L53+4
 523 0466 B3F90230 		ldrsh	r3, [r3, #2]
 524 046a C82B     		cmp	r3, #200
 525 046c 02DD     		ble	.L46
 237:..\src/command_processing.c ****                 calib.speed = 200;
 526              		.loc 1 237 0
 527 046e 214B     		ldr	r3, .L53+4
 528 0470 C822     		movs	r2, #200
 529 0472 5A80     		strh	r2, [r3, #2]	@ movhi
 530              	.L46:
 238:..\src/command_processing.c ****             }
 239:..\src/command_processing.c ****             if (calib.repetitions < 0) {
 531              		.loc 1 239 0
 532 0474 1F4B     		ldr	r3, .L53+4
 533 0476 B3F90430 		ldrsh	r3, [r3, #4]
 534 047a 002B     		cmp	r3, #0
 535 047c 02DA     		bge	.L47
 240:..\src/command_processing.c ****                 calib.repetitions = 0;
 536              		.loc 1 240 0
 537 047e 1D4B     		ldr	r3, .L53+4
 538 0480 0022     		movs	r2, #0
 539 0482 9A80     		strh	r2, [r3, #4]	@ movhi
 540              	.L47:
 241:..\src/command_processing.c ****             } else if (calib.repetitions > 32767) {
 242:..\src/command_processing.c ****                 calib.repetitions = 32767;
 243:..\src/command_processing.c ****             }
 244:..\src/command_processing.c ****             
 245:..\src/command_processing.c ****             g_refNew[0].pos = 0;                    // SoftHand is on motor 1
 541              		.loc 1 245 0
 542 0484 1C4B     		ldr	r3, .L53+8
 543 0486 0022     		movs	r2, #0
 544 0488 1A60     		str	r2, [r3]
 246:..\src/command_processing.c ****             calib.enabled = TRUE;
 545              		.loc 1 246 0
 546 048a 1A4B     		ldr	r3, .L53+4
 547 048c 0122     		movs	r2, #1
 548 048e 1A70     		strb	r2, [r3]
 247:..\src/command_processing.c ****          
 248:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 549              		.loc 1 248 0
 550 0490 0120     		movs	r0, #1
 551 0492 FFF7FEFF 		bl	sendAcknowledgment
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 29


 249:..\src/command_processing.c ****             break;
 552              		.loc 1 249 0
 553 0496 27E0     		b	.L1
 554              	.L29:
 250:..\src/command_processing.c ****             
 251:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_READINGS
 252:..\src/command_processing.c **** 
 253:..\src/command_processing.c ****         case CMD_GET_IMU_READINGS:
 254:..\src/command_processing.c ****             cmd_get_imu_readings();
 555              		.loc 1 254 0
 556 0498 FFF7FEFF 		bl	cmd_get_imu_readings
 255:..\src/command_processing.c ****             break; 
 557              		.loc 1 255 0
 558 049c 24E0     		b	.L1
 559              	.L30:
 256:..\src/command_processing.c ****             
 257:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_PARAM
 258:..\src/command_processing.c **** 
 259:..\src/command_processing.c ****         case CMD_GET_IMU_PARAM:
 260:..\src/command_processing.c ****             get_IMU_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 560              		.loc 1 260 0
 561 049e 174B     		ldr	r3, .L53+12
 562 04a0 1B88     		ldrh	r3, [r3]
 563 04a2 FB61     		str	r3, [r7, #28]
 564              	.LBB14:
 565              	.LBB15:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 566              		.loc 2 792 0
 567 04a4 FB69     		ldr	r3, [r7, #28]
 568              		.syntax unified
 569              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 570 04a6 5BBA     		rev16 r3, r3
 571              	@ 0 "" 2
 572              		.thumb
 573              		.syntax unified
 574 04a8 BB60     		str	r3, [r7, #8]
 575              		.loc 2 793 0
 576 04aa BB68     		ldr	r3, [r7, #8]
 577              	.LBE15:
 578              	.LBE14:
 579              		.loc 1 260 0
 580 04ac 9BB2     		uxth	r3, r3
 581 04ae 1846     		mov	r0, r3
 582 04b0 FFF7FEFF 		bl	get_IMU_param_list
 261:..\src/command_processing.c ****             break;             
 583              		.loc 1 261 0
 584 04b4 18E0     		b	.L1
 585              	.L31:
 262:..\src/command_processing.c ****             
 263:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_CONF
 264:..\src/command_processing.c **** 
 265:..\src/command_processing.c ****         case CMD_GET_ENCODER_CONF:
 266:..\src/command_processing.c ****             cmd_get_encoder_map();
 586              		.loc 1 266 0
 587 04b6 FFF7FEFF 		bl	cmd_get_encoder_map
 267:..\src/command_processing.c ****             break; 
 588              		.loc 1 267 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 30


 589 04ba 15E0     		b	.L1
 590              	.L32:
 268:..\src/command_processing.c **** 
 269:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_RAW
 270:..\src/command_processing.c **** 
 271:..\src/command_processing.c ****         case CMD_GET_ENCODER_RAW:
 272:..\src/command_processing.c ****             cmd_get_encoder_raw();
 591              		.loc 1 272 0
 592 04bc FFF7FEFF 		bl	cmd_get_encoder_raw
 273:..\src/command_processing.c ****             break; 
 593              		.loc 1 273 0
 594 04c0 12E0     		b	.L1
 595              	.L33:
 274:..\src/command_processing.c **** 
 275:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_CONF
 276:..\src/command_processing.c **** 
 277:..\src/command_processing.c ****         case CMD_GET_ADC_CONF:
 278:..\src/command_processing.c ****             cmd_get_ADC_map();
 596              		.loc 1 278 0
 597 04c2 FFF7FEFF 		bl	cmd_get_ADC_map
 279:..\src/command_processing.c ****             break; 
 598              		.loc 1 279 0
 599 04c6 0FE0     		b	.L1
 600              	.L34:
 280:..\src/command_processing.c ****             
 281:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_RAW
 282:..\src/command_processing.c **** 
 283:..\src/command_processing.c ****         case CMD_GET_ADC_RAW:
 284:..\src/command_processing.c ****             cmd_get_ADC_raw();
 601              		.loc 1 284 0
 602 04c8 FFF7FEFF 		bl	cmd_get_ADC_raw
 285:..\src/command_processing.c ****             break; 
 603              		.loc 1 285 0
 604 04cc 0CE0     		b	.L1
 605              	.L35:
 286:..\src/command_processing.c ****             
 287:..\src/command_processing.c **** //=====================================================     CMD_GET_SD_FILESYSTEM
 288:..\src/command_processing.c **** 
 289:..\src/command_processing.c ****         case CMD_GET_SD_SINGLE_FILE:
 290:..\src/command_processing.c ****             cmd_get_SD_file( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 606              		.loc 1 290 0
 607 04ce 0B4B     		ldr	r3, .L53+12
 608 04d0 1B88     		ldrh	r3, [r3]
 609 04d2 BB61     		str	r3, [r7, #24]
 610              	.LBB16:
 611              	.LBB17:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 612              		.loc 2 792 0
 613 04d4 BB69     		ldr	r3, [r7, #24]
 614              		.syntax unified
 615              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 616 04d6 5BBA     		rev16 r3, r3
 617              	@ 0 "" 2
 618              		.thumb
 619              		.syntax unified
 620 04d8 7B60     		str	r3, [r7, #4]
 621              		.loc 2 793 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 31


 622 04da 7B68     		ldr	r3, [r7, #4]
 623              	.LBE17:
 624              	.LBE16:
 625              		.loc 1 290 0
 626 04dc 9BB2     		uxth	r3, r3
 627 04de 1846     		mov	r0, r3
 628 04e0 FFF7FEFF 		bl	cmd_get_SD_file
 291:..\src/command_processing.c ****             break;             
 629              		.loc 1 291 0
 630 04e4 00E0     		b	.L1
 631              	.L50:
 292:..\src/command_processing.c ****             
 293:..\src/command_processing.c ****             
 294:..\src/command_processing.c **** //=========================================================== ALL OTHER COMMANDS
 295:..\src/command_processing.c ****         default:
 296:..\src/command_processing.c ****             break;
 632              		.loc 1 296 0
 633 04e6 00BF     		nop
 634              	.L1:
 297:..\src/command_processing.c **** 
 298:..\src/command_processing.c ****     }
 299:..\src/command_processing.c **** }  
 635              		.loc 1 299 0
 636 04e8 2837     		adds	r7, r7, #40
 637              		.cfi_def_cfa_offset 8
 638 04ea BD46     		mov	sp, r7
 639              		.cfi_def_cfa_register 13
 640              		@ sp needed
 641 04ec 80BD     		pop	{r7, pc}
 642              	.L54:
 643 04ee 00BF     		.align	2
 644              	.L53:
 645 04f0 00000000 		.word	g_rx
 646 04f4 00000000 		.word	calib
 647 04f8 00000000 		.word	g_refNew
 648 04fc 01000000 		.word	g_rx+1
 649              		.cfi_endproc
 650              	.LFE64:
 651              		.size	commProcess, .-commProcess
 652              		.section	.text.infoSend,"ax",%progbits
 653              		.align	2
 654              		.global	infoSend
 655              		.thumb
 656              		.thumb_func
 657              		.type	infoSend, %function
 658              	infoSend:
 659              	.LFB65:
 300:..\src/command_processing.c **** 
 301:..\src/command_processing.c **** //==============================================================================
 302:..\src/command_processing.c **** //                                                                     INFO SEND
 303:..\src/command_processing.c **** //==============================================================================
 304:..\src/command_processing.c **** 
 305:..\src/command_processing.c **** void infoSend(void){
 660              		.loc 1 305 0
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 1504
 663              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 32


 664 0000 80B5     		push	{r7, lr}
 665              		.cfi_def_cfa_offset 8
 666              		.cfi_offset 7, -8
 667              		.cfi_offset 14, -4
 668 0002 ADF5BC6D 		sub	sp, sp, #1504
 669              		.cfi_def_cfa_offset 1512
 670 0006 00AF     		add	r7, sp, #0
 671              		.cfi_def_cfa_register 7
 306:..\src/command_processing.c ****     char packet_string[1500];
 307:..\src/command_processing.c ****     
 308:..\src/command_processing.c ****     prepare_generic_info(packet_string);
 672              		.loc 1 308 0
 673 0008 3B1D     		adds	r3, r7, #4
 674 000a 1846     		mov	r0, r3
 675 000c FFF7FEFF 		bl	prepare_generic_info
 309:..\src/command_processing.c ****     UART_RS485_PutString(packet_string);
 676              		.loc 1 309 0
 677 0010 3B1D     		adds	r3, r7, #4
 678 0012 1846     		mov	r0, r3
 679 0014 FFF7FEFF 		bl	UART_RS485_PutString
 310:..\src/command_processing.c **** }
 680              		.loc 1 310 0
 681 0018 00BF     		nop
 682 001a 07F5BC67 		add	r7, r7, #1504
 683              		.cfi_def_cfa_offset 8
 684 001e BD46     		mov	sp, r7
 685              		.cfi_def_cfa_register 13
 686              		@ sp needed
 687 0020 80BD     		pop	{r7, pc}
 688              		.cfi_endproc
 689              	.LFE65:
 690              		.size	infoSend, .-infoSend
 691 0022 00BF     		.section	.text.infoGet,"ax",%progbits
 692              		.align	2
 693              		.global	infoGet
 694              		.thumb
 695              		.thumb_func
 696              		.type	infoGet, %function
 697              	infoGet:
 698              	.LFB66:
 311:..\src/command_processing.c **** 
 312:..\src/command_processing.c **** 
 313:..\src/command_processing.c **** //==============================================================================
 314:..\src/command_processing.c **** //                                                              COMMAND GET INFO
 315:..\src/command_processing.c **** //==============================================================================
 316:..\src/command_processing.c **** 
 317:..\src/command_processing.c **** void infoGet(uint16 info_type) {
 699              		.loc 1 317 0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 24008
 702              		@ frame_needed = 1, uses_anonymous_args = 0
 703 0000 80B5     		push	{r7, lr}
 704              		.cfi_def_cfa_offset 8
 705              		.cfi_offset 7, -8
 706              		.cfi_offset 14, -4
 707 0002 ADF5BB4D 		sub	sp, sp, #23936
 708              		.cfi_def_cfa_offset 23944
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 33


 709 0006 92B0     		sub	sp, sp, #72
 710              		.cfi_def_cfa_offset 24016
 711 0008 00AF     		add	r7, sp, #0
 712              		.cfi_def_cfa_register 7
 713 000a 0246     		mov	r2, r0
 714 000c 07F14803 		add	r3, r7, #72
 715 0010 423B     		subs	r3, r3, #66
 716 0012 1A80     		strh	r2, [r3]	@ movhi
 318:..\src/command_processing.c ****     char CYDATA packet_string[4000] = "";
 717              		.loc 1 318 0
 718 0014 07F59C43 		add	r3, r7, #19968
 719 0018 03F12803 		add	r3, r3, #40
 720 001c 0022     		movs	r2, #0
 721 001e 1A60     		str	r2, [r3]
 722 0020 0433     		adds	r3, r3, #4
 723 0022 40F69C72 		movw	r2, #3996
 724 0026 0021     		movs	r1, #0
 725 0028 1846     		mov	r0, r3
 726 002a FFF7FEFF 		bl	memset
 319:..\src/command_processing.c ****     char CYDATA str_sd_data[20000] = "";
 727              		.loc 1 319 0
 728 002e 07F14803 		add	r3, r7, #72
 729 0032 403B     		subs	r3, r3, #64
 730 0034 0022     		movs	r2, #0
 731 0036 1A60     		str	r2, [r3]
 732 0038 0433     		adds	r3, r3, #4
 733 003a 44F61C62 		movw	r2, #19996
 734 003e 0021     		movs	r1, #0
 735 0040 1846     		mov	r0, r3
 736 0042 FFF7FEFF 		bl	memset
 320:..\src/command_processing.c ****     //==================================     choose info type and prepare string
 321:..\src/command_processing.c **** 
 322:..\src/command_processing.c ****     switch (info_type) {
 737              		.loc 1 322 0
 738 0046 07F14803 		add	r3, r7, #72
 739 004a 423B     		subs	r3, r3, #66
 740 004c 1B88     		ldrh	r3, [r3]
 741 004e 052B     		cmp	r3, #5
 742 0050 66D8     		bhi	.L66
 743 0052 01A2     		adr	r2, .L59
 744 0054 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 745              		.p2align 2
 746              	.L59:
 747 0058 71000000 		.word	.L58+1
 748 005c 93000000 		.word	.L60+1
 749 0060 B5000000 		.word	.L61+1
 750 0064 DD000000 		.word	.L62+1
 751 0068 FF000000 		.word	.L63+1
 752 006c 1D010000 		.word	.L64+1
 753              		.p2align 1
 754              	.L58:
 323:..\src/command_processing.c ****         case INFO_ALL:
 324:..\src/command_processing.c ****             prepare_generic_info(packet_string);
 755              		.loc 1 324 0
 756 0070 07F59C43 		add	r3, r7, #19968
 757 0074 03F12803 		add	r3, r3, #40
 758 0078 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 34


 759 007a FFF7FEFF 		bl	prepare_generic_info
 325:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer(); 
 760              		.loc 1 325 0
 761 007e FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 326:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 762              		.loc 1 326 0
 763 0082 07F59C43 		add	r3, r7, #19968
 764 0086 03F12803 		add	r3, r3, #40
 765 008a 1846     		mov	r0, r3
 766 008c FFF7FEFF 		bl	UART_RS485_PutString
 327:..\src/command_processing.c ****             break;
 767              		.loc 1 327 0
 768 0090 47E0     		b	.L65
 769              	.L60:
 328:..\src/command_processing.c ****         case CYCLES_INFO:
 329:..\src/command_processing.c ****             prepare_counter_info(packet_string);
 770              		.loc 1 329 0
 771 0092 07F59C43 		add	r3, r7, #19968
 772 0096 03F12803 		add	r3, r3, #40
 773 009a 1846     		mov	r0, r3
 774 009c FFF7FEFF 		bl	prepare_counter_info
 330:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 775              		.loc 1 330 0
 776 00a0 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 331:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 777              		.loc 1 331 0
 778 00a4 07F59C43 		add	r3, r7, #19968
 779 00a8 03F12803 		add	r3, r3, #40
 780 00ac 1846     		mov	r0, r3
 781 00ae FFF7FEFF 		bl	UART_RS485_PutString
 332:..\src/command_processing.c ****             break;
 782              		.loc 1 332 0
 783 00b2 36E0     		b	.L65
 784              	.L61:
 333:..\src/command_processing.c ****         case GET_SD_PARAM:
 334:..\src/command_processing.c ****             Read_SD_Closed_File(sdParam, packet_string, sizeof(packet_string));
 785              		.loc 1 334 0
 786 00b4 07F59C43 		add	r3, r7, #19968
 787 00b8 03F12803 		add	r3, r3, #40
 788 00bc 4FF47A62 		mov	r2, #4000
 789 00c0 1946     		mov	r1, r3
 790 00c2 1B48     		ldr	r0, .L67
 791 00c4 FFF7FEFF 		bl	Read_SD_Closed_File
 335:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 792              		.loc 1 335 0
 793 00c8 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 336:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 794              		.loc 1 336 0
 795 00cc 07F59C43 		add	r3, r7, #19968
 796 00d0 03F12803 		add	r3, r3, #40
 797 00d4 1846     		mov	r0, r3
 798 00d6 FFF7FEFF 		bl	UART_RS485_PutString
 337:..\src/command_processing.c ****             break;
 799              		.loc 1 337 0
 800 00da 22E0     		b	.L65
 801              	.L62:
 338:..\src/command_processing.c ****         case GET_SD_DATA:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 35


 339:..\src/command_processing.c ****             Read_SD_Current_Data(str_sd_data, sizeof(str_sd_data));
 802              		.loc 1 339 0
 803 00dc 07F14803 		add	r3, r7, #72
 804 00e0 403B     		subs	r3, r3, #64
 805 00e2 44F62061 		movw	r1, #20000
 806 00e6 1846     		mov	r0, r3
 807 00e8 FFF7FEFF 		bl	Read_SD_Current_Data
 340:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 808              		.loc 1 340 0
 809 00ec FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 341:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 810              		.loc 1 341 0
 811 00f0 07F14803 		add	r3, r7, #72
 812 00f4 403B     		subs	r3, r3, #64
 813 00f6 1846     		mov	r0, r3
 814 00f8 FFF7FEFF 		bl	UART_RS485_PutString
 342:..\src/command_processing.c ****             break;
 815              		.loc 1 342 0
 816 00fc 11E0     		b	.L65
 817              	.L63:
 343:..\src/command_processing.c ****         case GET_SD_FS_TREE:
 344:..\src/command_processing.c ****             Get_SD_FS(str_sd_data);
 818              		.loc 1 344 0
 819 00fe 07F14803 		add	r3, r7, #72
 820 0102 403B     		subs	r3, r3, #64
 821 0104 1846     		mov	r0, r3
 822 0106 FFF7FEFF 		bl	Get_SD_FS
 345:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 823              		.loc 1 345 0
 824 010a FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 346:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 825              		.loc 1 346 0
 826 010e 07F14803 		add	r3, r7, #72
 827 0112 403B     		subs	r3, r3, #64
 828 0114 1846     		mov	r0, r3
 829 0116 FFF7FEFF 		bl	UART_RS485_PutString
 347:..\src/command_processing.c ****             break;
 830              		.loc 1 347 0
 831 011a 02E0     		b	.L65
 832              	.L64:
 348:..\src/command_processing.c ****         case GET_SD_EMG_HIST:
 349:..\src/command_processing.c ****             // Send every single byte inside the function, since it could be a large file to send
 350:..\src/command_processing.c ****             Read_SD_EMG_History_Data();
 833              		.loc 1 350 0
 834 011c FFF7FEFF 		bl	Read_SD_EMG_History_Data
 835              	.L66:
 351:..\src/command_processing.c ****         default:
 352:..\src/command_processing.c ****             break;
 836              		.loc 1 352 0
 837 0120 00BF     		nop
 838              	.L65:
 353:..\src/command_processing.c ****     }
 354:..\src/command_processing.c **** }
 839              		.loc 1 354 0 discriminator 1
 840 0122 00BF     		nop
 841 0124 07F5BB47 		add	r7, r7, #23936
 842 0128 4837     		adds	r7, r7, #72
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 36


 843              		.cfi_def_cfa_offset 8
 844 012a BD46     		mov	sp, r7
 845              		.cfi_def_cfa_register 13
 846              		@ sp needed
 847 012c 80BD     		pop	{r7, pc}
 848              	.L68:
 849 012e 00BF     		.align	2
 850              	.L67:
 851 0130 00000000 		.word	sdParam
 852              		.cfi_endproc
 853              	.LFE66:
 854              		.size	infoGet, .-infoGet
 855              		.global	__aeabi_i2f
 856              		.global	__aeabi_fdiv
 857              		.section	.rodata
 858              		.align	2
 859              	.LC88:
 860 0000 20557362 		.ascii	" Usb\000"
 860      00
 861 0005 000000   		.align	2
 862              	.LC89:
 863 0008 2048616E 		.ascii	" Handle\000"
 863      646C6500 
 864              		.align	2
 865              	.LC90:
 866 0010 20454D47 		.ascii	" EMG proportional\000"
 866      2070726F 
 866      706F7274 
 866      696F6E61 
 866      6C00
 867 0022 0000     		.align	2
 868              	.LC91:
 869 0024 20454D47 		.ascii	" EMG integral\000"
 869      20696E74 
 869      65677261 
 869      6C00
 870 0032 0000     		.align	2
 871              	.LC92:
 872 0034 20454D47 		.ascii	" EMG FCFS\000"
 872      20464346 
 872      5300
 873 003e 0000     		.align	2
 874              	.LC93:
 875 0040 20454D47 		.ascii	" EMG FCFS Advanced\000"
 875      20464346 
 875      53204164 
 875      76616E63 
 875      656400
 876 0053 00       		.align	2
 877              	.LC94:
 878 0054 204A6F79 		.ascii	" Joystick\000"
 878      73746963 
 878      6B00
 879 005e 0000     		.align	2
 880              	.LC95:
 881 0060 20454D47 		.ascii	" EMG proportional Normally Closed\000"
 881      2070726F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 37


 881      706F7274 
 881      696F6E61 
 881      6C204E6F 
 882 0082 0000     		.align	2
 883              	.LC96:
 884 0084 20506F73 		.ascii	" Position\000"
 884      6974696F 
 884      6E00
 885 008e 0000     		.align	2
 886              	.LC97:
 887 0090 2050574D 		.ascii	" PWM\000"
 887      00
 888 0095 000000   		.align	2
 889              	.LC98:
 890 0098 20437572 		.ascii	" Current\000"
 890      72656E74 
 890      00
 891 00a1 000000   		.align	2
 892              	.LC99:
 893 00a4 20506F73 		.ascii	" Position and Current\000"
 893      6974696F 
 893      6E20616E 
 893      64204375 
 893      7272656E 
 894 00ba 0000     		.align	2
 895              	.LC100:
 896 00bc 20594553 		.ascii	" YES\000\000"
 896      0000
 897 00c2 0000     		.align	2
 898              	.LC101:
 899 00c4 204E4F00 		.ascii	" NO\000\000"
 899      00
 900 00c9 000000   		.align	2
 901              	.LC102:
 902 00cc 20526967 		.ascii	" Right\000\000"
 902      68740000 
 903              		.align	2
 904              	.LC103:
 905 00d4 204C6566 		.ascii	" Left\000\000"
 905      740000
 906 00db 00       		.align	2
 907              	.LC104:
 908 00dc 204F4646 		.ascii	" OFF\000\000"
 908      0000
 909 00e2 0000     		.align	2
 910              	.LC105:
 911 00e4 204F4E00 		.ascii	" ON\000\000"
 911      00
 912 00e9 000000   		.align	2
 913              	.LC106:
 914 00ec 204E6F6E 		.ascii	" None\000\000"
 914      650000
 915 00f3 00       		.align	2
 916              	.LC107:
 917 00f4 2053442F 		.ascii	" SD/RTC board\000\000"
 917      52544320 
 917      626F6172 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 38


 917      640000
 918 0103 00       		.align	2
 919              	.LC108:
 920 0104 20576946 		.ascii	" WiFi board [N/A]\000\000"
 920      6920626F 
 920      61726420 
 920      5B4E2F41 
 920      5D0000
 921 0117 00       		.align	2
 922              	.LC109:
 923 0118 204F7468 		.ascii	" Other [N/A]\000\000"
 923      6572205B 
 923      4E2F415D 
 923      0000
 924 0126 0000     		.align	2
 925              	.LC110:
 926 0128 204C6F77 		.ascii	" Low\000\000"
 926      0000
 927 012e 0000     		.align	2
 928              	.LC111:
 929 0130 20486967 		.ascii	" High\000\000"
 929      680000
 930 0137 00       		.align	2
 931              	.LC112:
 932 0138 2047454E 		.ascii	" GENERIC USER\000\000"
 932      45524943 
 932      20555345 
 932      520000
 933 0147 00       		.align	2
 934              	.LC113:
 935 0148 204D4152 		.ascii	" MARIA\000\000"
 935      49410000 
 936              		.align	2
 937              	.LC114:
 938 0150 20524F5A 		.ascii	" ROZA\000\000"
 938      410000
 939 0157 00       		.align	2
 940              	.LC115:
 941 0158 204D4333 		.ascii	" MC33887 (Standard)\000\000"
 941      33383837 
 941      20285374 
 941      616E6461 
 941      72642900 
 942 016d 000000   		.align	2
 943              	.LC116:
 944 0170 20564E48 		.ascii	" VNH5019 (High power)\000\000"
 944      35303139 
 944      20284869 
 944      67682070 
 944      6F776572 
 945 0187 00       		.align	2
 946              	.LC117:
 947 0188 20455343 		.ascii	" ESC (Brushless)\000\000"
 947      20284272 
 947      7573686C 
 947      65737329 
 947      0000
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 39


 948 019a 0000     		.align	2
 949              	.LC118:
 950 019c 20534F46 		.ascii	" SOFTHAND PRO\000\000"
 950      5448414E 
 950      44205052 
 950      4F0000
 951 01ab 00       		.align	2
 952              	.LC119:
 953 01ac 2047454E 		.ascii	" GENERIC 2 MOTORS\000\000"
 953      45524943 
 953      2032204D 
 953      4F544F52 
 953      530000
 954 01bf 00       		.align	2
 955              	.LC120:
 956 01c0 20414952 		.ascii	" AIR CHAMBERS\000\000"
 956      20434841 
 956      4D424552 
 956      530000
 957 01cf 00       		.align	2
 958              	.LC121:
 959 01d0 204F5454 		.ascii	" OTTOBOCK WRIST\000\000"
 959      4F424F43 
 959      4B205752 
 959      49535400 
 959      00
 960 01e1 000000   		.align	2
 961              	.LC122:
 962 01e4 20534F46 		.ascii	" SOFTHAND 2 MOTORS\000\000"
 962      5448414E 
 962      44203220 
 962      4D4F544F 
 962      52530000 
 963              		.align	2
 964              	.LC123:
 965 01f8 20466173 		.ascii	" Fast:syn2, Slow:syn1\000\000"
 965      743A7379 
 965      6E322C20 
 965      536C6F77 
 965      3A73796E 
 966 020f 00       		.align	2
 967              	.LC124:
 968 0210 20466173 		.ascii	" Fast:wrist,Slow:hand\000\000"
 968      743A7772 
 968      6973742C 
 968      536C6F77 
 968      3A68616E 
 969 0227 00       		.align	2
 970              	.LC125:
 971 0228 20536C6F 		.ascii	" Slow:syn2, Fast:syn1\000\000"
 971      773A7379 
 971      6E322C20 
 971      46617374 
 971      3A73796E 
 972 023f 00       		.align	2
 973              	.LC126:
 974 0240 20536C6F 		.ascii	" Slow:wrist,Fast:hand\000\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 40


 974      773A7772 
 974      6973742C 
 974      46617374 
 974      3A68616E 
 975 0257 00       		.align	2
 976              	.LC127:
 977 0258 20436C6F 		.ascii	" Close:CW, Open:CCW\000\000"
 977      73653A43 
 977      572C204F 
 977      70656E3A 
 977      43435700 
 978 026d 000000   		.align	2
 979              	.LC128:
 980 0270 20436C6F 		.ascii	" Close:CCW, Open:CW\000\000"
 980      73653A43 
 980      43572C20 
 980      4F70656E 
 980      3A435700 
 981              		.section	.text.get_param_list,"ax",%progbits
 982              		.align	2
 983              		.global	get_param_list
 984              		.thumb
 985              		.thumb_func
 986              		.type	get_param_list, %function
 987              	get_param_list:
 988              	.LFB67:
 355:..\src/command_processing.c **** 
 356:..\src/command_processing.c **** 
 357:..\src/command_processing.c **** //==============================================================================
 358:..\src/command_processing.c **** //                                                                GET PARAM LIST
 359:..\src/command_processing.c **** //==============================================================================
 360:..\src/command_processing.c **** 
 361:..\src/command_processing.c **** void get_param_list (uint8* VAR_P[NUM_OF_PARAMS], uint8 TYPES[NUM_OF_PARAMS], 
 362:..\src/command_processing.c ****                      uint8 NUM_ITEMS[NUM_OF_PARAMS], uint8 NUM_STRUCT[NUM_OF_PARAMS],
 363:..\src/command_processing.c ****                      uint8* NUM_MENU, const char* PARAMS_STR[NUM_OF_PARAMS], 
 364:..\src/command_processing.c ****                      uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS], const char* MENU_STR[NUM_OF_PARAMS_MENU
 989              		.loc 1 364 0
 990              		.cfi_startproc
 991              		@ args = 16, pretend = 0, frame = 5656
 992              		@ frame_needed = 1, uses_anonymous_args = 0
 993 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 994              		.cfi_def_cfa_offset 20
 995              		.cfi_offset 4, -20
 996              		.cfi_offset 5, -16
 997              		.cfi_offset 6, -12
 998              		.cfi_offset 7, -8
 999              		.cfi_offset 14, -4
 1000 0002 ADF5B05D 		sub	sp, sp, #5632
 1001              		.cfi_def_cfa_offset 5652
 1002 0006 87B0     		sub	sp, sp, #28
 1003              		.cfi_def_cfa_offset 5680
 1004 0008 00AF     		add	r7, sp, #0
 1005              		.cfi_def_cfa_register 7
 1006 000a 07F11804 		add	r4, r7, #24
 1007 000e 0C3C     		subs	r4, r4, #12
 1008 0010 2060     		str	r0, [r4]
 1009 0012 07F11800 		add	r0, r7, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 41


 1010 0016 1038     		subs	r0, r0, #16
 1011 0018 0160     		str	r1, [r0]
 1012 001a 07F11801 		add	r1, r7, #24
 1013 001e 1439     		subs	r1, r1, #20
 1014 0020 0A60     		str	r2, [r1]
 1015 0022 07F11802 		add	r2, r7, #24
 1016 0026 183A     		subs	r2, r2, #24
 1017 0028 1360     		str	r3, [r2]
 365:..\src/command_processing.c ****     
 366:..\src/command_processing.c ****     //Package to be sent variables
 367:..\src/command_processing.c ****     uint8 packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MENUS + 
 1018              		.loc 1 367 0
 1019 002a 07F15803 		add	r3, r7, #88
 1020 002e 043B     		subs	r3, r3, #4
 1021 0030 0022     		movs	r2, #0
 1022 0032 1A60     		str	r2, [r3]
 1023 0034 0433     		adds	r3, r3, #4
 1024 0036 41F2AA52 		movw	r2, #5546
 1025 003a 0021     		movs	r1, #0
 1026 003c 1846     		mov	r0, r3
 1027 003e FFF7FEFF 		bl	memset
 368:..\src/command_processing.c ****     uint16 packet_lenght = PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MEN
 1028              		.loc 1 368 0
 1029 0042 41F2AE53 		movw	r3, #5550
 1030 0046 07F5B052 		add	r2, r7, #5632
 1031 004a 02F11002 		add	r2, r2, #16
 1032 004e 1380     		strh	r3, [r2]	@ movhi
 369:..\src/command_processing.c **** 
 370:..\src/command_processing.c ****     //Auxiliary variables
 371:..\src/command_processing.c ****     uint8 CYDATA i, j;
 372:..\src/command_processing.c ****     uint8 CYDATA idx = 0;       //Parameter number
 1033              		.loc 1 372 0
 1034 0050 0023     		movs	r3, #0
 1035 0052 07F5B052 		add	r2, r7, #5632
 1036 0056 02F11502 		add	r2, r2, #21
 1037 005a 1370     		strb	r3, [r2]
 373:..\src/command_processing.c ****     uint8 CYDATA idx_menu = 0;
 1038              		.loc 1 373 0
 1039 005c 0023     		movs	r3, #0
 1040 005e 07F5B052 		add	r2, r7, #5632
 1041 0062 02F11402 		add	r2, r2, #20
 1042 0066 1370     		strb	r3, [r2]
 374:..\src/command_processing.c ****     uint8 CYDATA sod = 0;       //sizeof data
 1043              		.loc 1 374 0
 1044 0068 0023     		movs	r3, #0
 1045 006a 07F5B052 		add	r2, r7, #5632
 1046 006e 02F11302 		add	r2, r2, #19
 1047 0072 1370     		strb	r3, [r2]
 375:..\src/command_processing.c ****     uint8 CYDATA string_lenght;
 376:..\src/command_processing.c ****     char CYDATA aux_str[50] = "";
 1048              		.loc 1 376 0
 1049 0074 07F13803 		add	r3, r7, #56
 1050 0078 183B     		subs	r3, r3, #24
 1051 007a 0022     		movs	r2, #0
 1052 007c 1A60     		str	r2, [r3]
 1053 007e 0433     		adds	r3, r3, #4
 1054 0080 2E22     		movs	r2, #46
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 42


 1055 0082 0021     		movs	r1, #0
 1056 0084 1846     		mov	r0, r3
 1057 0086 FFF7FEFF 		bl	memset
 377:..\src/command_processing.c ****     float aux_float;
 378:..\src/command_processing.c ****     int16 aux_int16;
 379:..\src/command_processing.c ****     uint16 aux_uint16;
 380:..\src/command_processing.c ****     int32 aux_int32;
 381:..\src/command_processing.c ****     uint32 aux_uint32;
 382:..\src/command_processing.c **** 
 383:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 1058              		.loc 1 383 0
 1059 008a 0023     		movs	r3, #0
 1060 008c 07F5B052 		add	r2, r7, #5632
 1061 0090 02F10F02 		add	r2, r2, #15
 1062 0094 1370     		strb	r3, [r2]
 384:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 1063              		.loc 1 384 0
 1064 0096 0123     		movs	r3, #1
 1065 0098 07F5B052 		add	r2, r7, #5632
 1066 009c 02F10E02 		add	r2, r2, #14
 1067 00a0 1370     		strb	r3, [r2]
 385:..\src/command_processing.c ****   
 386:..\src/command_processing.c ****     uint8* m_addr = (uint8*)VAR_P[0];
 1068              		.loc 1 386 0
 1069 00a2 07F11803 		add	r3, r7, #24
 1070 00a6 0C3B     		subs	r3, r3, #12
 1071 00a8 1B68     		ldr	r3, [r3]
 1072 00aa 1B68     		ldr	r3, [r3]
 1073 00ac 07F5B052 		add	r2, r7, #5632
 1074 00b0 02F10802 		add	r2, r2, #8
 1075 00b4 1360     		str	r3, [r2]
 387:..\src/command_processing.c ****     uint8* m_tmp = m_addr;
 1076              		.loc 1 387 0
 1077 00b6 07F5B053 		add	r3, r7, #5632
 1078 00ba 03F10803 		add	r3, r3, #8
 1079 00be 1B68     		ldr	r3, [r3]
 1080 00c0 07F5B052 		add	r2, r7, #5632
 1081 00c4 02F10402 		add	r2, r2, #4
 1082 00c8 1360     		str	r3, [r2]
 388:..\src/command_processing.c ****         
 389:..\src/command_processing.c ****     packet_data[0] = CMD_GET_PARAM_LIST;
 1083              		.loc 1 389 0
 1084 00ca 07F15803 		add	r3, r7, #88
 1085 00ce 043B     		subs	r3, r3, #4
 1086 00d0 0C22     		movs	r2, #12
 1087 00d2 1A70     		strb	r2, [r3]
 390:..\src/command_processing.c ****     packet_data[1] = NUM_OF_DEV_PARAMS;
 1088              		.loc 1 390 0
 1089 00d4 07F15803 		add	r3, r7, #88
 1090 00d8 043B     		subs	r3, r3, #4
 1091 00da 4D22     		movs	r2, #77
 1092 00dc 5A70     		strb	r2, [r3, #1]
 391:..\src/command_processing.c ****     
 392:..\src/command_processing.c ****     for (idx = 0; idx < NUM_OF_DEV_PARAMS; idx++) {
 1093              		.loc 1 392 0
 1094 00de 0023     		movs	r3, #0
 1095 00e0 07F5B052 		add	r2, r7, #5632
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 43


 1096 00e4 02F11502 		add	r2, r2, #21
 1097 00e8 1370     		strb	r3, [r2]
 1098 00ea 03F025B8 		b	.L70
 1099              	.L275:
 393:..\src/command_processing.c ****         
 394:..\src/command_processing.c ****         // Assign m_addr memory address
 395:..\src/command_processing.c ****         m_addr = (uint8*)VAR_P[idx];
 1100              		.loc 1 395 0
 1101 00ee 07F5B053 		add	r3, r7, #5632
 1102 00f2 03F11503 		add	r3, r3, #21
 1103 00f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1104 00f8 9A00     		lsls	r2, r3, #2
 1105 00fa 07F11803 		add	r3, r7, #24
 1106 00fe 0C3B     		subs	r3, r3, #12
 1107 0100 1B68     		ldr	r3, [r3]
 1108 0102 1344     		add	r3, r3, r2
 1109 0104 1B68     		ldr	r3, [r3]
 1110 0106 07F5B052 		add	r2, r7, #5632
 1111 010a 02F10802 		add	r2, r2, #8
 1112 010e 1360     		str	r3, [r2]
 396:..\src/command_processing.c ****         
 397:..\src/command_processing.c ****         // Add parameter type and size to packet
 398:..\src/command_processing.c ****         packet_data[2 + PARAM_BYTE_SLOT*idx] = TYPES[idx];
 1113              		.loc 1 398 0
 1114 0110 07F5B053 		add	r3, r7, #5632
 1115 0114 03F11503 		add	r3, r3, #21
 1116 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1117 011a 3222     		movs	r2, #50
 1118 011c 02FB03F3 		mul	r3, r2, r3
 1119 0120 9A1C     		adds	r2, r3, #2
 1120 0122 07F5B053 		add	r3, r7, #5632
 1121 0126 03F11503 		add	r3, r3, #21
 1122 012a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1123 012c 07F11803 		add	r3, r7, #24
 1124 0130 103B     		subs	r3, r3, #16
 1125 0132 1B68     		ldr	r3, [r3]
 1126 0134 0B44     		add	r3, r3, r1
 1127 0136 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1128 0138 07F15803 		add	r3, r7, #88
 1129 013c 043B     		subs	r3, r3, #4
 1130 013e 9954     		strb	r1, [r3, r2]
 399:..\src/command_processing.c ****         packet_data[3 + PARAM_BYTE_SLOT*idx] = NUM_ITEMS[idx];
 1131              		.loc 1 399 0
 1132 0140 07F5B053 		add	r3, r7, #5632
 1133 0144 03F11503 		add	r3, r3, #21
 1134 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1135 014a 3222     		movs	r2, #50
 1136 014c 02FB03F3 		mul	r3, r2, r3
 1137 0150 DA1C     		adds	r2, r3, #3
 1138 0152 07F5B053 		add	r3, r7, #5632
 1139 0156 03F11503 		add	r3, r3, #21
 1140 015a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1141 015c 07F11803 		add	r3, r7, #24
 1142 0160 143B     		subs	r3, r3, #20
 1143 0162 1B68     		ldr	r3, [r3]
 1144 0164 0B44     		add	r3, r3, r1
 1145 0166 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 44


 1146 0168 07F15803 		add	r3, r7, #88
 1147 016c 043B     		subs	r3, r3, #4
 1148 016e 9954     		strb	r1, [r3, r2]
 400:..\src/command_processing.c ****         
 401:..\src/command_processing.c ****         // Find size of data
 402:..\src/command_processing.c ****         switch (TYPES[idx]) {
 1149              		.loc 1 402 0
 1150 0170 07F5B053 		add	r3, r7, #5632
 1151 0174 03F11503 		add	r3, r3, #21
 1152 0178 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1153 017a 07F11803 		add	r3, r7, #24
 1154 017e 103B     		subs	r3, r3, #16
 1155 0180 1B68     		ldr	r3, [r3]
 1156 0182 1344     		add	r3, r3, r2
 1157 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1158 0186 092B     		cmp	r3, #9
 1159 0188 2BD8     		bhi	.L71
 1160 018a 01A2     		adr	r2, .L73
 1161 018c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1162              		.p2align 2
 1163              	.L73:
 1164 0190 B9010000 		.word	.L72+1
 1165 0194 B9010000 		.word	.L72+1
 1166 0198 B9010000 		.word	.L72+1
 1167 019c C7010000 		.word	.L74+1
 1168 01a0 C7010000 		.word	.L74+1
 1169 01a4 D5010000 		.word	.L75+1
 1170 01a8 D5010000 		.word	.L75+1
 1171 01ac D5010000 		.word	.L75+1
 1172 01b0 E3010000 		.word	.L71+1
 1173 01b4 B9010000 		.word	.L72+1
 1174              		.p2align 1
 1175              	.L72:
 403:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 404:..\src/command_processing.c ****                 sod = 1; break;
 1176              		.loc 1 404 0
 1177 01b8 0123     		movs	r3, #1
 1178 01ba 07F5B052 		add	r2, r7, #5632
 1179 01be 02F11302 		add	r2, r2, #19
 1180 01c2 1370     		strb	r3, [r2]
 1181 01c4 0DE0     		b	.L71
 1182              	.L74:
 405:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 406:..\src/command_processing.c ****                 sod = 2; break;
 1183              		.loc 1 406 0
 1184 01c6 0223     		movs	r3, #2
 1185 01c8 07F5B052 		add	r2, r7, #5632
 1186 01cc 02F11302 		add	r2, r2, #19
 1187 01d0 1370     		strb	r3, [r2]
 1188 01d2 06E0     		b	.L71
 1189              	.L75:
 407:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 408:..\src/command_processing.c ****                 sod = 4; break;
 1190              		.loc 1 408 0
 1191 01d4 0423     		movs	r3, #4
 1192 01d6 07F5B052 		add	r2, r7, #5632
 1193 01da 02F11302 		add	r2, r2, #19
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 45


 1194 01de 1370     		strb	r3, [r2]
 1195 01e0 00BF     		nop
 1196              	.L71:
 409:..\src/command_processing.c ****         }
 410:..\src/command_processing.c ****             
 411:..\src/command_processing.c ****         if (!CUSTOM_PARAM_GET[idx]) {       // Default param get
 1197              		.loc 1 411 0
 1198 01e2 07F5B053 		add	r3, r7, #5632
 1199 01e6 03F11503 		add	r3, r3, #21
 1200 01ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1201 01ec 07F5B152 		add	r2, r7, #5664
 1202 01f0 02F11802 		add	r2, r2, #24
 1203 01f4 1268     		ldr	r2, [r2]
 1204 01f6 1344     		add	r3, r3, r2
 1205 01f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1206 01fa 002B     		cmp	r3, #0
 1207 01fc 40F0DA83 		bne	.L76
 412:..\src/command_processing.c ****             
 413:..\src/command_processing.c ****             // Add parameter data to packet
 414:..\src/command_processing.c ****             switch (TYPES[idx]) {
 1208              		.loc 1 414 0
 1209 0200 07F5B053 		add	r3, r7, #5632
 1210 0204 03F11503 		add	r3, r3, #21
 1211 0208 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1212 020a 07F11803 		add	r3, r7, #24
 1213 020e 103B     		subs	r3, r3, #16
 1214 0210 1B68     		ldr	r3, [r3]
 1215 0212 1344     		add	r3, r3, r2
 1216 0214 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1217 0216 092B     		cmp	r3, #9
 1218 0218 02F25781 		bhi	.L110
 1219 021c 01A2     		adr	r2, .L79
 1220 021e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1221 0222 00BF     		.p2align 2
 1222              	.L79:
 1223 0224 4D020000 		.word	.L78+1
 1224 0228 09030000 		.word	.L80+1
 1225 022c 4D020000 		.word	.L78+1
 1226 0230 C5030000 		.word	.L81+1
 1227 0234 F7040000 		.word	.L82+1
 1228 0238 23060000 		.word	.L83+1
 1229 023c 53070000 		.word	.L84+1
 1230 0240 83080000 		.word	.L85+1
 1231 0244 CB240000 		.word	.L110+1
 1232 0248 4D020000 		.word	.L78+1
 1233              		.p2align 1
 1234              	.L78:
 415:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8: case TYPE_STRING:
 416:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1235              		.loc 1 416 0
 1236 024c 0023     		movs	r3, #0
 1237 024e 07F5B052 		add	r2, r7, #5632
 1238 0252 02F11702 		add	r2, r2, #23
 1239 0256 1370     		strb	r3, [r2]
 1240 0258 42E0     		b	.L86
 1241              	.L87:
 417:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 46


 1242              		.loc 1 417 0 discriminator 3
 1243 025a 07F5B053 		add	r3, r7, #5632
 1244 025e 03F11703 		add	r3, r3, #23
 1245 0262 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1246 0264 07F5B052 		add	r2, r7, #5632
 1247 0268 02F11302 		add	r2, r2, #19
 1248 026c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1249 026e 02FB03F3 		mul	r3, r2, r3
 1250 0272 1A46     		mov	r2, r3
 1251 0274 07F5B053 		add	r3, r7, #5632
 1252 0278 03F10803 		add	r3, r3, #8
 1253 027c 1B68     		ldr	r3, [r3]
 1254 027e 1344     		add	r3, r3, r2
 1255 0280 07F5B052 		add	r2, r7, #5632
 1256 0284 02F10402 		add	r2, r2, #4
 1257 0288 1360     		str	r3, [r2]
 418:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1258              		.loc 1 418 0 discriminator 3
 1259 028a 07F5B053 		add	r3, r7, #5632
 1260 028e 03F11503 		add	r3, r3, #21
 1261 0292 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1262 0294 3222     		movs	r2, #50
 1263 0296 02FB03F3 		mul	r3, r2, r3
 1264 029a 1A1D     		adds	r2, r3, #4
 1265 029c 07F5B053 		add	r3, r7, #5632
 1266 02a0 03F11703 		add	r3, r3, #23
 1267 02a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1268 02a6 07F5B051 		add	r1, r7, #5632
 1269 02aa 01F11301 		add	r1, r1, #19
 1270 02ae 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1271 02b0 01FB03F3 		mul	r3, r1, r3
 1272 02b4 1A44     		add	r2, r2, r3
 1273 02b6 07F5B053 		add	r3, r7, #5632
 1274 02ba 03F10403 		add	r3, r3, #4
 1275 02be 1B68     		ldr	r3, [r3]
 1276 02c0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1277 02c2 07F15803 		add	r3, r7, #88
 1278 02c6 043B     		subs	r3, r3, #4
 1279 02c8 9954     		strb	r1, [r3, r2]
 416:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1280              		.loc 1 416 0 discriminator 3
 1281 02ca 07F5B053 		add	r3, r7, #5632
 1282 02ce 03F11703 		add	r3, r3, #23
 1283 02d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1284 02d4 0133     		adds	r3, r3, #1
 1285 02d6 07F5B052 		add	r2, r7, #5632
 1286 02da 02F11702 		add	r2, r2, #23
 1287 02de 1370     		strb	r3, [r2]
 1288              	.L86:
 416:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1289              		.loc 1 416 0 is_stmt 0 discriminator 1
 1290 02e0 07F5B053 		add	r3, r7, #5632
 1291 02e4 03F11503 		add	r3, r3, #21
 1292 02e8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1293 02ea 07F11803 		add	r3, r7, #24
 1294 02ee 143B     		subs	r3, r3, #20
 1295 02f0 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 47


 1296 02f2 1344     		add	r3, r3, r2
 1297 02f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1298 02f6 07F5B052 		add	r2, r7, #5632
 1299 02fa 02F11702 		add	r2, r2, #23
 1300 02fe 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1301 0300 9A42     		cmp	r2, r3
 1302 0302 AAD3     		bcc	.L87
 419:..\src/command_processing.c ****                     }
 420:..\src/command_processing.c ****                     break;                
 1303              		.loc 1 420 0 is_stmt 1
 1304 0304 02F0E1B8 		b	.L110
 1305              	.L80:
 421:..\src/command_processing.c ****                 case TYPE_INT8:
 422:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1306              		.loc 1 422 0
 1307 0308 0023     		movs	r3, #0
 1308 030a 07F5B052 		add	r2, r7, #5632
 1309 030e 02F11702 		add	r2, r2, #23
 1310 0312 1370     		strb	r3, [r2]
 1311 0314 42E0     		b	.L88
 1312              	.L89:
 423:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1313              		.loc 1 423 0 discriminator 3
 1314 0316 07F5B053 		add	r3, r7, #5632
 1315 031a 03F11703 		add	r3, r3, #23
 1316 031e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1317 0320 07F5B052 		add	r2, r7, #5632
 1318 0324 02F11302 		add	r2, r2, #19
 1319 0328 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1320 032a 02FB03F3 		mul	r3, r2, r3
 1321 032e 1A46     		mov	r2, r3
 1322 0330 07F5B053 		add	r3, r7, #5632
 1323 0334 03F10803 		add	r3, r3, #8
 1324 0338 1B68     		ldr	r3, [r3]
 1325 033a 1344     		add	r3, r3, r2
 1326 033c 07F5B052 		add	r2, r7, #5632
 1327 0340 02F10402 		add	r2, r2, #4
 1328 0344 1360     		str	r3, [r2]
 424:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1329              		.loc 1 424 0 discriminator 3
 1330 0346 07F5B053 		add	r3, r7, #5632
 1331 034a 03F11503 		add	r3, r3, #21
 1332 034e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1333 0350 3222     		movs	r2, #50
 1334 0352 02FB03F3 		mul	r3, r2, r3
 1335 0356 1A1D     		adds	r2, r3, #4
 1336 0358 07F5B053 		add	r3, r7, #5632
 1337 035c 03F11703 		add	r3, r3, #23
 1338 0360 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1339 0362 07F5B051 		add	r1, r7, #5632
 1340 0366 01F11301 		add	r1, r1, #19
 1341 036a 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1342 036c 01FB03F3 		mul	r3, r1, r3
 1343 0370 1A44     		add	r2, r2, r3
 1344 0372 07F5B053 		add	r3, r7, #5632
 1345 0376 03F10403 		add	r3, r3, #4
 1346 037a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 48


 1347 037c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1348 037e 07F15803 		add	r3, r7, #88
 1349 0382 043B     		subs	r3, r3, #4
 1350 0384 9954     		strb	r1, [r3, r2]
 422:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1351              		.loc 1 422 0 discriminator 3
 1352 0386 07F5B053 		add	r3, r7, #5632
 1353 038a 03F11703 		add	r3, r3, #23
 1354 038e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1355 0390 0133     		adds	r3, r3, #1
 1356 0392 07F5B052 		add	r2, r7, #5632
 1357 0396 02F11702 		add	r2, r2, #23
 1358 039a 1370     		strb	r3, [r2]
 1359              	.L88:
 422:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1360              		.loc 1 422 0 is_stmt 0 discriminator 1
 1361 039c 07F5B053 		add	r3, r7, #5632
 1362 03a0 03F11503 		add	r3, r3, #21
 1363 03a4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1364 03a6 07F11803 		add	r3, r7, #24
 1365 03aa 143B     		subs	r3, r3, #20
 1366 03ac 1B68     		ldr	r3, [r3]
 1367 03ae 1344     		add	r3, r3, r2
 1368 03b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1369 03b2 07F5B052 		add	r2, r7, #5632
 1370 03b6 02F11702 		add	r2, r2, #23
 1371 03ba 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1372 03bc 9A42     		cmp	r2, r3
 1373 03be AAD3     		bcc	.L89
 425:..\src/command_processing.c ****                     }
 426:..\src/command_processing.c ****                     break;
 1374              		.loc 1 426 0 is_stmt 1
 1375 03c0 02F083B8 		b	.L110
 1376              	.L81:
 427:..\src/command_processing.c ****                 case TYPE_INT16:
 428:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1377              		.loc 1 428 0
 1378 03c4 0023     		movs	r3, #0
 1379 03c6 07F5B052 		add	r2, r7, #5632
 1380 03ca 02F11702 		add	r2, r2, #23
 1381 03ce 1370     		strb	r3, [r2]
 1382 03d0 7CE0     		b	.L90
 1383              	.L93:
 429:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1384              		.loc 1 429 0
 1385 03d2 07F5B053 		add	r3, r7, #5632
 1386 03d6 03F11703 		add	r3, r3, #23
 1387 03da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1388 03dc 07F5B052 		add	r2, r7, #5632
 1389 03e0 02F11302 		add	r2, r2, #19
 1390 03e4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1391 03e6 02FB03F3 		mul	r3, r2, r3
 1392 03ea 1A46     		mov	r2, r3
 1393 03ec 07F5B053 		add	r3, r7, #5632
 1394 03f0 03F10803 		add	r3, r3, #8
 1395 03f4 1B68     		ldr	r3, [r3]
 1396 03f6 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 49


 1397 03f8 07F5B052 		add	r2, r7, #5632
 1398 03fc 02F10402 		add	r2, r2, #4
 1399 0400 1360     		str	r3, [r2]
 430:..\src/command_processing.c ****                         aux_int16 = *((int16*)m_tmp);
 1400              		.loc 1 430 0
 1401 0402 07F5B053 		add	r3, r7, #5632
 1402 0406 03F10403 		add	r3, r3, #4
 1403 040a 1B68     		ldr	r3, [r3]
 1404 040c B3F90020 		ldrsh	r2, [r3]
 1405 0410 07F13803 		add	r3, r7, #56
 1406 0414 1E3B     		subs	r3, r3, #30
 1407 0416 1A80     		strh	r2, [r3]	@ movhi
 431:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1408              		.loc 1 431 0
 1409 0418 0023     		movs	r3, #0
 1410 041a 07F5B052 		add	r2, r7, #5632
 1411 041e 02F11602 		add	r2, r2, #22
 1412 0422 1370     		strb	r3, [r2]
 1413 0424 3BE0     		b	.L91
 1414              	.L92:
 432:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1415              		.loc 1 432 0 discriminator 3
 1416 0426 07F5B053 		add	r3, r7, #5632
 1417 042a 03F11503 		add	r3, r3, #21
 1418 042e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1419 0430 3222     		movs	r2, #50
 1420 0432 02FB03F3 		mul	r3, r2, r3
 1421 0436 1A1D     		adds	r2, r3, #4
 1422 0438 07F5B053 		add	r3, r7, #5632
 1423 043c 03F11703 		add	r3, r3, #23
 1424 0440 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1425 0442 07F5B051 		add	r1, r7, #5632
 1426 0446 01F11301 		add	r1, r1, #19
 1427 044a 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1428 044c 01FB03F3 		mul	r3, r1, r3
 1429 0450 1A44     		add	r2, r2, r3
 1430 0452 07F5B053 		add	r3, r7, #5632
 1431 0456 03F11303 		add	r3, r3, #19
 1432 045a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1433 045c 1A44     		add	r2, r2, r3
 1434 045e 07F5B053 		add	r3, r7, #5632
 1435 0462 03F11603 		add	r3, r3, #22
 1436 0466 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1437 0468 D31A     		subs	r3, r2, r3
 1438 046a 5A1E     		subs	r2, r3, #1
 1439 046c 07F5B053 		add	r3, r7, #5632
 1440 0470 03F11603 		add	r3, r3, #22
 1441 0474 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1442 0476 07F13803 		add	r3, r7, #56
 1443 047a 1E3B     		subs	r3, r3, #30
 1444 047c 0B44     		add	r3, r3, r1
 1445 047e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1446 0480 07F15803 		add	r3, r7, #88
 1447 0484 043B     		subs	r3, r3, #4
 1448 0486 9954     		strb	r1, [r3, r2]
 431:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1449              		.loc 1 431 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 50


 1450 0488 07F5B053 		add	r3, r7, #5632
 1451 048c 03F11603 		add	r3, r3, #22
 1452 0490 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1453 0492 0133     		adds	r3, r3, #1
 1454 0494 07F5B052 		add	r2, r7, #5632
 1455 0498 02F11602 		add	r2, r2, #22
 1456 049c 1370     		strb	r3, [r2]
 1457              	.L91:
 431:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1458              		.loc 1 431 0 is_stmt 0 discriminator 1
 1459 049e 07F5B053 		add	r3, r7, #5632
 1460 04a2 03F11603 		add	r3, r3, #22
 1461 04a6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1462 04a8 07F5B053 		add	r3, r7, #5632
 1463 04ac 03F11303 		add	r3, r3, #19
 1464 04b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1465 04b2 9A42     		cmp	r2, r3
 1466 04b4 B7D3     		bcc	.L92
 428:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1467              		.loc 1 428 0 is_stmt 1 discriminator 2
 1468 04b6 07F5B053 		add	r3, r7, #5632
 1469 04ba 03F11703 		add	r3, r3, #23
 1470 04be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1471 04c0 0133     		adds	r3, r3, #1
 1472 04c2 07F5B052 		add	r2, r7, #5632
 1473 04c6 02F11702 		add	r2, r2, #23
 1474 04ca 1370     		strb	r3, [r2]
 1475              	.L90:
 428:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1476              		.loc 1 428 0 is_stmt 0 discriminator 1
 1477 04cc 07F5B053 		add	r3, r7, #5632
 1478 04d0 03F11503 		add	r3, r3, #21
 1479 04d4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1480 04d6 07F11803 		add	r3, r7, #24
 1481 04da 143B     		subs	r3, r3, #20
 1482 04dc 1B68     		ldr	r3, [r3]
 1483 04de 1344     		add	r3, r3, r2
 1484 04e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1485 04e2 07F5B052 		add	r2, r7, #5632
 1486 04e6 02F11702 		add	r2, r2, #23
 1487 04ea 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1488 04ec 9A42     		cmp	r2, r3
 1489 04ee FFF470AF 		bcc	.L93
 433:..\src/command_processing.c ****                         }
 434:..\src/command_processing.c ****                     }
 435:..\src/command_processing.c ****                     break;
 1490              		.loc 1 435 0 is_stmt 1
 1491 04f2 01F0EABF 		b	.L110
 1492              	.L82:
 436:..\src/command_processing.c ****                 case TYPE_UINT16:
 437:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1493              		.loc 1 437 0
 1494 04f6 0023     		movs	r3, #0
 1495 04f8 07F5B052 		add	r2, r7, #5632
 1496 04fc 02F11702 		add	r2, r2, #23
 1497 0500 1370     		strb	r3, [r2]
 1498 0502 79E0     		b	.L94
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 51


 1499              	.L97:
 438:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1500              		.loc 1 438 0
 1501 0504 07F5B053 		add	r3, r7, #5632
 1502 0508 03F11703 		add	r3, r3, #23
 1503 050c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1504 050e 07F5B052 		add	r2, r7, #5632
 1505 0512 02F11302 		add	r2, r2, #19
 1506 0516 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1507 0518 02FB03F3 		mul	r3, r2, r3
 1508 051c 1A46     		mov	r2, r3
 1509 051e 07F5B053 		add	r3, r7, #5632
 1510 0522 03F10803 		add	r3, r3, #8
 1511 0526 1B68     		ldr	r3, [r3]
 1512 0528 1344     		add	r3, r3, r2
 1513 052a 07F5B052 		add	r2, r7, #5632
 1514 052e 02F10402 		add	r2, r2, #4
 1515 0532 1360     		str	r3, [r2]
 439:..\src/command_processing.c ****                         aux_uint16 = *((uint16*)m_tmp);
 1516              		.loc 1 439 0
 1517 0534 07F5B053 		add	r3, r7, #5632
 1518 0538 03F10403 		add	r3, r3, #4
 1519 053c 1B68     		ldr	r3, [r3]
 1520 053e 1A88     		ldrh	r2, [r3]
 1521 0540 07F11803 		add	r3, r7, #24
 1522 0544 1A80     		strh	r2, [r3]	@ movhi
 440:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1523              		.loc 1 440 0
 1524 0546 0023     		movs	r3, #0
 1525 0548 07F5B052 		add	r2, r7, #5632
 1526 054c 02F11602 		add	r2, r2, #22
 1527 0550 1370     		strb	r3, [r2]
 1528 0552 3AE0     		b	.L95
 1529              	.L96:
 441:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1530              		.loc 1 441 0 discriminator 3
 1531 0554 07F5B053 		add	r3, r7, #5632
 1532 0558 03F11503 		add	r3, r3, #21
 1533 055c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1534 055e 3222     		movs	r2, #50
 1535 0560 02FB03F3 		mul	r3, r2, r3
 1536 0564 1A1D     		adds	r2, r3, #4
 1537 0566 07F5B053 		add	r3, r7, #5632
 1538 056a 03F11703 		add	r3, r3, #23
 1539 056e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1540 0570 07F5B051 		add	r1, r7, #5632
 1541 0574 01F11301 		add	r1, r1, #19
 1542 0578 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1543 057a 01FB03F3 		mul	r3, r1, r3
 1544 057e 1A44     		add	r2, r2, r3
 1545 0580 07F5B053 		add	r3, r7, #5632
 1546 0584 03F11303 		add	r3, r3, #19
 1547 0588 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1548 058a 1A44     		add	r2, r2, r3
 1549 058c 07F5B053 		add	r3, r7, #5632
 1550 0590 03F11603 		add	r3, r3, #22
 1551 0594 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 52


 1552 0596 D31A     		subs	r3, r2, r3
 1553 0598 5A1E     		subs	r2, r3, #1
 1554 059a 07F5B053 		add	r3, r7, #5632
 1555 059e 03F11603 		add	r3, r3, #22
 1556 05a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1557 05a4 07F11801 		add	r1, r7, #24
 1558 05a8 0B44     		add	r3, r3, r1
 1559 05aa 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1560 05ac 07F15803 		add	r3, r7, #88
 1561 05b0 043B     		subs	r3, r3, #4
 1562 05b2 9954     		strb	r1, [r3, r2]
 440:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1563              		.loc 1 440 0 discriminator 3
 1564 05b4 07F5B053 		add	r3, r7, #5632
 1565 05b8 03F11603 		add	r3, r3, #22
 1566 05bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1567 05be 0133     		adds	r3, r3, #1
 1568 05c0 07F5B052 		add	r2, r7, #5632
 1569 05c4 02F11602 		add	r2, r2, #22
 1570 05c8 1370     		strb	r3, [r2]
 1571              	.L95:
 440:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1572              		.loc 1 440 0 is_stmt 0 discriminator 1
 1573 05ca 07F5B053 		add	r3, r7, #5632
 1574 05ce 03F11603 		add	r3, r3, #22
 1575 05d2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1576 05d4 07F5B053 		add	r3, r7, #5632
 1577 05d8 03F11303 		add	r3, r3, #19
 1578 05dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1579 05de 9A42     		cmp	r2, r3
 1580 05e0 B8D3     		bcc	.L96
 437:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1581              		.loc 1 437 0 is_stmt 1 discriminator 2
 1582 05e2 07F5B053 		add	r3, r7, #5632
 1583 05e6 03F11703 		add	r3, r3, #23
 1584 05ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1585 05ec 0133     		adds	r3, r3, #1
 1586 05ee 07F5B052 		add	r2, r7, #5632
 1587 05f2 02F11702 		add	r2, r2, #23
 1588 05f6 1370     		strb	r3, [r2]
 1589              	.L94:
 437:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1590              		.loc 1 437 0 is_stmt 0 discriminator 1
 1591 05f8 07F5B053 		add	r3, r7, #5632
 1592 05fc 03F11503 		add	r3, r3, #21
 1593 0600 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1594 0602 07F11803 		add	r3, r7, #24
 1595 0606 143B     		subs	r3, r3, #20
 1596 0608 1B68     		ldr	r3, [r3]
 1597 060a 1344     		add	r3, r3, r2
 1598 060c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1599 060e 07F5B052 		add	r2, r7, #5632
 1600 0612 02F11702 		add	r2, r2, #23
 1601 0616 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1602 0618 9A42     		cmp	r2, r3
 1603 061a FFF473AF 		bcc	.L97
 442:..\src/command_processing.c ****                         }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 53


 443:..\src/command_processing.c ****                     }
 444:..\src/command_processing.c ****                     break;
 1604              		.loc 1 444 0 is_stmt 1
 1605 061e 01F054BF 		b	.L110
 1606              	.L83:
 445:..\src/command_processing.c ****                 case TYPE_INT32: 
 446:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1607              		.loc 1 446 0
 1608 0622 0023     		movs	r3, #0
 1609 0624 07F5B052 		add	r2, r7, #5632
 1610 0628 02F11702 		add	r2, r2, #23
 1611 062c 1370     		strb	r3, [r2]
 1612 062e 7BE0     		b	.L98
 1613              	.L101:
 447:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1614              		.loc 1 447 0
 1615 0630 07F5B053 		add	r3, r7, #5632
 1616 0634 03F11703 		add	r3, r3, #23
 1617 0638 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1618 063a 07F5B052 		add	r2, r7, #5632
 1619 063e 02F11302 		add	r2, r2, #19
 1620 0642 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1621 0644 02FB03F3 		mul	r3, r2, r3
 1622 0648 1A46     		mov	r2, r3
 1623 064a 07F5B053 		add	r3, r7, #5632
 1624 064e 03F10803 		add	r3, r3, #8
 1625 0652 1B68     		ldr	r3, [r3]
 1626 0654 1344     		add	r3, r3, r2
 1627 0656 07F5B052 		add	r2, r7, #5632
 1628 065a 02F10402 		add	r2, r2, #4
 1629 065e 1360     		str	r3, [r2]
 448:..\src/command_processing.c ****                         aux_int32 = *((int32*)m_tmp);
 1630              		.loc 1 448 0
 1631 0660 07F5B053 		add	r3, r7, #5632
 1632 0664 03F10403 		add	r3, r3, #4
 1633 0668 1B68     		ldr	r3, [r3]
 1634 066a 1A68     		ldr	r2, [r3]
 1635 066c 07F11803 		add	r3, r7, #24
 1636 0670 043B     		subs	r3, r3, #4
 1637 0672 1A60     		str	r2, [r3]
 449:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1638              		.loc 1 449 0
 1639 0674 0023     		movs	r3, #0
 1640 0676 07F5B052 		add	r2, r7, #5632
 1641 067a 02F11602 		add	r2, r2, #22
 1642 067e 1370     		strb	r3, [r2]
 1643 0680 3BE0     		b	.L99
 1644              	.L100:
 450:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1645              		.loc 1 450 0 discriminator 3
 1646 0682 07F5B053 		add	r3, r7, #5632
 1647 0686 03F11503 		add	r3, r3, #21
 1648 068a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1649 068c 3222     		movs	r2, #50
 1650 068e 02FB03F3 		mul	r3, r2, r3
 1651 0692 1A1D     		adds	r2, r3, #4
 1652 0694 07F5B053 		add	r3, r7, #5632
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 54


 1653 0698 03F11703 		add	r3, r3, #23
 1654 069c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1655 069e 07F5B051 		add	r1, r7, #5632
 1656 06a2 01F11301 		add	r1, r1, #19
 1657 06a6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1658 06a8 01FB03F3 		mul	r3, r1, r3
 1659 06ac 1A44     		add	r2, r2, r3
 1660 06ae 07F5B053 		add	r3, r7, #5632
 1661 06b2 03F11303 		add	r3, r3, #19
 1662 06b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1663 06b8 1A44     		add	r2, r2, r3
 1664 06ba 07F5B053 		add	r3, r7, #5632
 1665 06be 03F11603 		add	r3, r3, #22
 1666 06c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1667 06c4 D31A     		subs	r3, r2, r3
 1668 06c6 5A1E     		subs	r2, r3, #1
 1669 06c8 07F5B053 		add	r3, r7, #5632
 1670 06cc 03F11603 		add	r3, r3, #22
 1671 06d0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1672 06d2 07F11803 		add	r3, r7, #24
 1673 06d6 043B     		subs	r3, r3, #4
 1674 06d8 0B44     		add	r3, r3, r1
 1675 06da 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1676 06dc 07F15803 		add	r3, r7, #88
 1677 06e0 043B     		subs	r3, r3, #4
 1678 06e2 9954     		strb	r1, [r3, r2]
 449:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1679              		.loc 1 449 0 discriminator 3
 1680 06e4 07F5B053 		add	r3, r7, #5632
 1681 06e8 03F11603 		add	r3, r3, #22
 1682 06ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1683 06ee 0133     		adds	r3, r3, #1
 1684 06f0 07F5B052 		add	r2, r7, #5632
 1685 06f4 02F11602 		add	r2, r2, #22
 1686 06f8 1370     		strb	r3, [r2]
 1687              	.L99:
 449:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1688              		.loc 1 449 0 is_stmt 0 discriminator 1
 1689 06fa 07F5B053 		add	r3, r7, #5632
 1690 06fe 03F11603 		add	r3, r3, #22
 1691 0702 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1692 0704 07F5B053 		add	r3, r7, #5632
 1693 0708 03F11303 		add	r3, r3, #19
 1694 070c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1695 070e 9A42     		cmp	r2, r3
 1696 0710 B7D3     		bcc	.L100
 446:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1697              		.loc 1 446 0 is_stmt 1 discriminator 2
 1698 0712 07F5B053 		add	r3, r7, #5632
 1699 0716 03F11703 		add	r3, r3, #23
 1700 071a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1701 071c 0133     		adds	r3, r3, #1
 1702 071e 07F5B052 		add	r2, r7, #5632
 1703 0722 02F11702 		add	r2, r2, #23
 1704 0726 1370     		strb	r3, [r2]
 1705              	.L98:
 446:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 55


 1706              		.loc 1 446 0 is_stmt 0 discriminator 1
 1707 0728 07F5B053 		add	r3, r7, #5632
 1708 072c 03F11503 		add	r3, r3, #21
 1709 0730 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1710 0732 07F11803 		add	r3, r7, #24
 1711 0736 143B     		subs	r3, r3, #20
 1712 0738 1B68     		ldr	r3, [r3]
 1713 073a 1344     		add	r3, r3, r2
 1714 073c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1715 073e 07F5B052 		add	r2, r7, #5632
 1716 0742 02F11702 		add	r2, r2, #23
 1717 0746 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1718 0748 9A42     		cmp	r2, r3
 1719 074a FFF471AF 		bcc	.L101
 451:..\src/command_processing.c ****                         }
 452:..\src/command_processing.c ****                     }
 453:..\src/command_processing.c ****                     break;
 1720              		.loc 1 453 0 is_stmt 1
 1721 074e 01F0BCBE 		b	.L110
 1722              	.L84:
 454:..\src/command_processing.c ****                 case TYPE_UINT32: 
 455:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1723              		.loc 1 455 0
 1724 0752 0023     		movs	r3, #0
 1725 0754 07F5B052 		add	r2, r7, #5632
 1726 0758 02F11702 		add	r2, r2, #23
 1727 075c 1370     		strb	r3, [r2]
 1728 075e 7BE0     		b	.L102
 1729              	.L105:
 456:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1730              		.loc 1 456 0
 1731 0760 07F5B053 		add	r3, r7, #5632
 1732 0764 03F11703 		add	r3, r3, #23
 1733 0768 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1734 076a 07F5B052 		add	r2, r7, #5632
 1735 076e 02F11302 		add	r2, r2, #19
 1736 0772 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1737 0774 02FB03F3 		mul	r3, r2, r3
 1738 0778 1A46     		mov	r2, r3
 1739 077a 07F5B053 		add	r3, r7, #5632
 1740 077e 03F10803 		add	r3, r3, #8
 1741 0782 1B68     		ldr	r3, [r3]
 1742 0784 1344     		add	r3, r3, r2
 1743 0786 07F5B052 		add	r2, r7, #5632
 1744 078a 02F10402 		add	r2, r2, #4
 1745 078e 1360     		str	r3, [r2]
 457:..\src/command_processing.c ****                         aux_uint32 = *((uint32*)m_tmp);
 1746              		.loc 1 457 0
 1747 0790 07F5B053 		add	r3, r7, #5632
 1748 0794 03F10403 		add	r3, r3, #4
 1749 0798 1B68     		ldr	r3, [r3]
 1750 079a 1A68     		ldr	r2, [r3]
 1751 079c 07F11803 		add	r3, r7, #24
 1752 07a0 083B     		subs	r3, r3, #8
 1753 07a2 1A60     		str	r2, [r3]
 458:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1754              		.loc 1 458 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 56


 1755 07a4 0023     		movs	r3, #0
 1756 07a6 07F5B052 		add	r2, r7, #5632
 1757 07aa 02F11602 		add	r2, r2, #22
 1758 07ae 1370     		strb	r3, [r2]
 1759 07b0 3BE0     		b	.L103
 1760              	.L104:
 459:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1761              		.loc 1 459 0 discriminator 3
 1762 07b2 07F5B053 		add	r3, r7, #5632
 1763 07b6 03F11503 		add	r3, r3, #21
 1764 07ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1765 07bc 3222     		movs	r2, #50
 1766 07be 02FB03F3 		mul	r3, r2, r3
 1767 07c2 1A1D     		adds	r2, r3, #4
 1768 07c4 07F5B053 		add	r3, r7, #5632
 1769 07c8 03F11703 		add	r3, r3, #23
 1770 07cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1771 07ce 07F5B051 		add	r1, r7, #5632
 1772 07d2 01F11301 		add	r1, r1, #19
 1773 07d6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1774 07d8 01FB03F3 		mul	r3, r1, r3
 1775 07dc 1A44     		add	r2, r2, r3
 1776 07de 07F5B053 		add	r3, r7, #5632
 1777 07e2 03F11303 		add	r3, r3, #19
 1778 07e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1779 07e8 1A44     		add	r2, r2, r3
 1780 07ea 07F5B053 		add	r3, r7, #5632
 1781 07ee 03F11603 		add	r3, r3, #22
 1782 07f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1783 07f4 D31A     		subs	r3, r2, r3
 1784 07f6 5A1E     		subs	r2, r3, #1
 1785 07f8 07F5B053 		add	r3, r7, #5632
 1786 07fc 03F11603 		add	r3, r3, #22
 1787 0800 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1788 0802 07F11803 		add	r3, r7, #24
 1789 0806 083B     		subs	r3, r3, #8
 1790 0808 0B44     		add	r3, r3, r1
 1791 080a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1792 080c 07F15803 		add	r3, r7, #88
 1793 0810 043B     		subs	r3, r3, #4
 1794 0812 9954     		strb	r1, [r3, r2]
 458:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1795              		.loc 1 458 0 discriminator 3
 1796 0814 07F5B053 		add	r3, r7, #5632
 1797 0818 03F11603 		add	r3, r3, #22
 1798 081c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1799 081e 0133     		adds	r3, r3, #1
 1800 0820 07F5B052 		add	r2, r7, #5632
 1801 0824 02F11602 		add	r2, r2, #22
 1802 0828 1370     		strb	r3, [r2]
 1803              	.L103:
 458:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1804              		.loc 1 458 0 is_stmt 0 discriminator 1
 1805 082a 07F5B053 		add	r3, r7, #5632
 1806 082e 03F11603 		add	r3, r3, #22
 1807 0832 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1808 0834 07F5B053 		add	r3, r7, #5632
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 57


 1809 0838 03F11303 		add	r3, r3, #19
 1810 083c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1811 083e 9A42     		cmp	r2, r3
 1812 0840 B7D3     		bcc	.L104
 455:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1813              		.loc 1 455 0 is_stmt 1 discriminator 2
 1814 0842 07F5B053 		add	r3, r7, #5632
 1815 0846 03F11703 		add	r3, r3, #23
 1816 084a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1817 084c 0133     		adds	r3, r3, #1
 1818 084e 07F5B052 		add	r2, r7, #5632
 1819 0852 02F11702 		add	r2, r2, #23
 1820 0856 1370     		strb	r3, [r2]
 1821              	.L102:
 455:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1822              		.loc 1 455 0 is_stmt 0 discriminator 1
 1823 0858 07F5B053 		add	r3, r7, #5632
 1824 085c 03F11503 		add	r3, r3, #21
 1825 0860 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1826 0862 07F11803 		add	r3, r7, #24
 1827 0866 143B     		subs	r3, r3, #20
 1828 0868 1B68     		ldr	r3, [r3]
 1829 086a 1344     		add	r3, r3, r2
 1830 086c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1831 086e 07F5B052 		add	r2, r7, #5632
 1832 0872 02F11702 		add	r2, r2, #23
 1833 0876 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1834 0878 9A42     		cmp	r2, r3
 1835 087a FFF471AF 		bcc	.L105
 460:..\src/command_processing.c ****                         }
 461:..\src/command_processing.c ****                     }
 462:..\src/command_processing.c ****                     break;
 1836              		.loc 1 462 0 is_stmt 1
 1837 087e 01F024BE 		b	.L110
 1838              	.L85:
 463:..\src/command_processing.c ****                     
 464:..\src/command_processing.c ****                 case TYPE_FLOAT:
 465:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1839              		.loc 1 465 0
 1840 0882 0023     		movs	r3, #0
 1841 0884 07F5B052 		add	r2, r7, #5632
 1842 0888 02F11702 		add	r2, r2, #23
 1843 088c 1370     		strb	r3, [r2]
 1844 088e 7BE0     		b	.L106
 1845              	.L109:
 466:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1846              		.loc 1 466 0
 1847 0890 07F5B053 		add	r3, r7, #5632
 1848 0894 03F11703 		add	r3, r3, #23
 1849 0898 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1850 089a 07F5B052 		add	r2, r7, #5632
 1851 089e 02F11302 		add	r2, r2, #19
 1852 08a2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1853 08a4 02FB03F3 		mul	r3, r2, r3
 1854 08a8 1A46     		mov	r2, r3
 1855 08aa 07F5B053 		add	r3, r7, #5632
 1856 08ae 03F10803 		add	r3, r3, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 58


 1857 08b2 1B68     		ldr	r3, [r3]
 1858 08b4 1344     		add	r3, r3, r2
 1859 08b6 07F5B052 		add	r2, r7, #5632
 1860 08ba 02F10402 		add	r2, r2, #4
 1861 08be 1360     		str	r3, [r2]
 467:..\src/command_processing.c ****                         aux_float = *((float*)m_tmp);
 1862              		.loc 1 467 0
 1863 08c0 07F5B053 		add	r3, r7, #5632
 1864 08c4 03F10403 		add	r3, r3, #4
 1865 08c8 1B68     		ldr	r3, [r3]
 1866 08ca 1A68     		ldr	r2, [r3]	@ float
 1867 08cc 07F13803 		add	r3, r7, #56
 1868 08d0 1C3B     		subs	r3, r3, #28
 1869 08d2 1A60     		str	r2, [r3]	@ float
 468:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1870              		.loc 1 468 0
 1871 08d4 0023     		movs	r3, #0
 1872 08d6 07F5B052 		add	r2, r7, #5632
 1873 08da 02F11602 		add	r2, r2, #22
 1874 08de 1370     		strb	r3, [r2]
 1875 08e0 3BE0     		b	.L107
 1876              	.L108:
 469:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1877              		.loc 1 469 0 discriminator 3
 1878 08e2 07F5B053 		add	r3, r7, #5632
 1879 08e6 03F11503 		add	r3, r3, #21
 1880 08ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1881 08ec 3222     		movs	r2, #50
 1882 08ee 02FB03F3 		mul	r3, r2, r3
 1883 08f2 1A1D     		adds	r2, r3, #4
 1884 08f4 07F5B053 		add	r3, r7, #5632
 1885 08f8 03F11703 		add	r3, r3, #23
 1886 08fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1887 08fe 07F5B051 		add	r1, r7, #5632
 1888 0902 01F11301 		add	r1, r1, #19
 1889 0906 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1890 0908 01FB03F3 		mul	r3, r1, r3
 1891 090c 1A44     		add	r2, r2, r3
 1892 090e 07F5B053 		add	r3, r7, #5632
 1893 0912 03F11303 		add	r3, r3, #19
 1894 0916 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1895 0918 1A44     		add	r2, r2, r3
 1896 091a 07F5B053 		add	r3, r7, #5632
 1897 091e 03F11603 		add	r3, r3, #22
 1898 0922 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1899 0924 D31A     		subs	r3, r2, r3
 1900 0926 5A1E     		subs	r2, r3, #1
 1901 0928 07F5B053 		add	r3, r7, #5632
 1902 092c 03F11603 		add	r3, r3, #22
 1903 0930 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1904 0932 07F13803 		add	r3, r7, #56
 1905 0936 1C3B     		subs	r3, r3, #28
 1906 0938 0B44     		add	r3, r3, r1
 1907 093a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1908 093c 07F15803 		add	r3, r7, #88
 1909 0940 043B     		subs	r3, r3, #4
 1910 0942 9954     		strb	r1, [r3, r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 59


 468:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1911              		.loc 1 468 0 discriminator 3
 1912 0944 07F5B053 		add	r3, r7, #5632
 1913 0948 03F11603 		add	r3, r3, #22
 1914 094c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1915 094e 0133     		adds	r3, r3, #1
 1916 0950 07F5B052 		add	r2, r7, #5632
 1917 0954 02F11602 		add	r2, r2, #22
 1918 0958 1370     		strb	r3, [r2]
 1919              	.L107:
 468:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1920              		.loc 1 468 0 is_stmt 0 discriminator 1
 1921 095a 07F5B053 		add	r3, r7, #5632
 1922 095e 03F11603 		add	r3, r3, #22
 1923 0962 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1924 0964 07F5B053 		add	r3, r7, #5632
 1925 0968 03F11303 		add	r3, r3, #19
 1926 096c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1927 096e 9A42     		cmp	r2, r3
 1928 0970 B7D3     		bcc	.L108
 465:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1929              		.loc 1 465 0 is_stmt 1 discriminator 2
 1930 0972 07F5B053 		add	r3, r7, #5632
 1931 0976 03F11703 		add	r3, r3, #23
 1932 097a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1933 097c 0133     		adds	r3, r3, #1
 1934 097e 07F5B052 		add	r2, r7, #5632
 1935 0982 02F11702 		add	r2, r2, #23
 1936 0986 1370     		strb	r3, [r2]
 1937              	.L106:
 465:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1938              		.loc 1 465 0 is_stmt 0 discriminator 1
 1939 0988 07F5B053 		add	r3, r7, #5632
 1940 098c 03F11503 		add	r3, r3, #21
 1941 0990 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1942 0992 07F11803 		add	r3, r7, #24
 1943 0996 143B     		subs	r3, r3, #20
 1944 0998 1B68     		ldr	r3, [r3]
 1945 099a 1344     		add	r3, r3, r2
 1946 099c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1947 099e 07F5B052 		add	r2, r7, #5632
 1948 09a2 02F11702 		add	r2, r2, #23
 1949 09a6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1950 09a8 9A42     		cmp	r2, r3
 1951 09aa FFF471AF 		bcc	.L109
 470:..\src/command_processing.c ****                         }
 471:..\src/command_processing.c ****                     }
 472:..\src/command_processing.c ****                     break;   
 1952              		.loc 1 472 0 is_stmt 1 discriminator 7
 1953 09ae 00BF     		nop
 1954 09b0 01F08BBD 		b	.L110
 1955              	.L76:
 473:..\src/command_processing.c ****             }
 474:..\src/command_processing.c ****         }
 475:..\src/command_processing.c ****         else {
 476:..\src/command_processing.c ****             
 477:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION BEFORE THIS LINE
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 60


 478:..\src/command_processing.c ****             
 479:..\src/command_processing.c **** // MODIFY CUSTOM PARAM            
 480:..\src/command_processing.c ****                 switch(idx+1){
 1956              		.loc 1 480 0
 1957 09b4 07F5B053 		add	r3, r7, #5632
 1958 09b8 03F11503 		add	r3, r3, #21
 1959 09bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1960 09be 0133     		adds	r3, r3, #1
 1961 09c0 023B     		subs	r3, r3, #2
 1962 09c2 332B     		cmp	r3, #51
 1963 09c4 01F28085 		bhi	.L280
 1964 09c8 01A2     		adr	r2, .L113
 1965 09ca 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1966 09ce 00BF     		.p2align 2
 1967              	.L113:
 1968 09d0 A10A0000 		.word	.L112+1
 1969 09d4 6D0F0000 		.word	.L114+1
 1970 09d8 C9240000 		.word	.L280+1
 1971 09dc C9240000 		.word	.L280+1
 1972 09e0 C9240000 		.word	.L280+1
 1973 09e4 C9240000 		.word	.L280+1
 1974 09e8 37140000 		.word	.L115+1
 1975 09ec C9240000 		.word	.L280+1
 1976 09f0 C9240000 		.word	.L280+1
 1977 09f4 AB150000 		.word	.L116+1
 1978 09f8 C9240000 		.word	.L280+1
 1979 09fc C9240000 		.word	.L280+1
 1980 0a00 C9240000 		.word	.L280+1
 1981 0a04 C9240000 		.word	.L280+1
 1982 0a08 C9240000 		.word	.L280+1
 1983 0a0c C9240000 		.word	.L280+1
 1984 0a10 C9240000 		.word	.L280+1
 1985 0a14 C9240000 		.word	.L280+1
 1986 0a18 C9240000 		.word	.L280+1
 1987 0a1c C9240000 		.word	.L280+1
 1988 0a20 C9240000 		.word	.L280+1
 1989 0a24 79170000 		.word	.L117+1
 1990 0a28 C9240000 		.word	.L280+1
 1991 0a2c C9240000 		.word	.L280+1
 1992 0a30 C9240000 		.word	.L280+1
 1993 0a34 C9240000 		.word	.L280+1
 1994 0a38 C9240000 		.word	.L280+1
 1995 0a3c C9240000 		.word	.L280+1
 1996 0a40 C9240000 		.word	.L280+1
 1997 0a44 C9240000 		.word	.L280+1
 1998 0a48 C9240000 		.word	.L280+1
 1999 0a4c C9240000 		.word	.L280+1
 2000 0a50 C9240000 		.word	.L280+1
 2001 0a54 C9240000 		.word	.L280+1
 2002 0a58 C9240000 		.word	.L280+1
 2003 0a5c C9240000 		.word	.L280+1
 2004 0a60 C9240000 		.word	.L280+1
 2005 0a64 C9240000 		.word	.L280+1
 2006 0a68 C9240000 		.word	.L280+1
 2007 0a6c C9240000 		.word	.L280+1
 2008 0a70 C9240000 		.word	.L280+1
 2009 0a74 C9240000 		.word	.L280+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 61


 2010 0a78 43180000 		.word	.L118+1
 2011 0a7c 111D0000 		.word	.L119+1
 2012 0a80 C9240000 		.word	.L280+1
 2013 0a84 C9240000 		.word	.L280+1
 2014 0a88 C9240000 		.word	.L280+1
 2015 0a8c C9240000 		.word	.L280+1
 2016 0a90 DB210000 		.word	.L120+1
 2017 0a94 C9240000 		.word	.L280+1
 2018 0a98 C9240000 		.word	.L280+1
 2019 0a9c FF220000 		.word	.L121+1
 2020              		.p2align 1
 2021              	.L112:
 481:..\src/command_processing.c ****                     case 2:         // Position PID
 482:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 2022              		.loc 1 482 0
 2023 0aa0 07F5B053 		add	r3, r7, #5632
 2024 0aa4 03F10F03 		add	r3, r3, #15
 2025 0aa8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2026 0aaa AC49     		ldr	r1, .L286
 2027 0aac 1346     		mov	r3, r2
 2028 0aae DB00     		lsls	r3, r3, #3
 2029 0ab0 9B1A     		subs	r3, r3, r2
 2030 0ab2 1B01     		lsls	r3, r3, #4
 2031 0ab4 0B44     		add	r3, r3, r1
 2032 0ab6 03F20F13 		addw	r3, r3, #271
 2033 0aba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2034 0abc 032B     		cmp	r3, #3
 2035 0abe 00F02981 		beq	.L122
 483:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p / 65536;
 2036              		.loc 1 483 0
 2037 0ac2 07F5B053 		add	r3, r7, #5632
 2038 0ac6 03F10F03 		add	r3, r3, #15
 2039 0aca 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2040 0acc A349     		ldr	r1, .L286
 2041 0ace 1346     		mov	r3, r2
 2042 0ad0 DB00     		lsls	r3, r3, #3
 2043 0ad2 9B1A     		subs	r3, r3, r2
 2044 0ad4 1B01     		lsls	r3, r3, #4
 2045 0ad6 0B44     		add	r3, r3, r1
 2046 0ad8 B033     		adds	r3, r3, #176
 2047 0ada 1B68     		ldr	r3, [r3]
 2048 0adc 1846     		mov	r0, r3
 2049 0ade FFF7FEFF 		bl	__aeabi_i2f
 2050 0ae2 0346     		mov	r3, r0
 2051 0ae4 4FF08F41 		mov	r1, #1199570944
 2052 0ae8 1846     		mov	r0, r3
 2053 0aea FFF7FEFF 		bl	__aeabi_fdiv
 2054 0aee 0346     		mov	r3, r0
 2055 0af0 1A46     		mov	r2, r3
 2056 0af2 07F13803 		add	r3, r7, #56
 2057 0af6 1C3B     		subs	r3, r3, #28
 2058 0af8 1A60     		str	r2, [r3]	@ float
 484:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2059              		.loc 1 484 0
 2060 0afa 0023     		movs	r3, #0
 2061 0afc 07F5B052 		add	r2, r7, #5632
 2062 0b00 02F11702 		add	r2, r2, #23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 62


 2063 0b04 1370     		strb	r3, [r2]
 2064 0b06 2EE0     		b	.L123
 2065              	.L124:
 485:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2066              		.loc 1 485 0 discriminator 3
 2067 0b08 07F5B053 		add	r3, r7, #5632
 2068 0b0c 03F11503 		add	r3, r3, #21
 2069 0b10 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2070 0b12 3222     		movs	r2, #50
 2071 0b14 02FB03F3 		mul	r3, r2, r3
 2072 0b18 1A1D     		adds	r2, r3, #4
 2073 0b1a 07F5B053 		add	r3, r7, #5632
 2074 0b1e 03F11303 		add	r3, r3, #19
 2075 0b22 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2076 0b24 1A44     		add	r2, r2, r3
 2077 0b26 07F5B053 		add	r3, r7, #5632
 2078 0b2a 03F11703 		add	r3, r3, #23
 2079 0b2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2080 0b30 D31A     		subs	r3, r2, r3
 2081 0b32 5A1E     		subs	r2, r3, #1
 2082 0b34 07F5B053 		add	r3, r7, #5632
 2083 0b38 03F11703 		add	r3, r3, #23
 2084 0b3c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2085 0b3e 07F13803 		add	r3, r7, #56
 2086 0b42 1C3B     		subs	r3, r3, #28
 2087 0b44 0B44     		add	r3, r3, r1
 2088 0b46 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2089 0b48 07F15803 		add	r3, r7, #88
 2090 0b4c 043B     		subs	r3, r3, #4
 2091 0b4e 9954     		strb	r1, [r3, r2]
 484:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2092              		.loc 1 484 0 discriminator 3
 2093 0b50 07F5B053 		add	r3, r7, #5632
 2094 0b54 03F11703 		add	r3, r3, #23
 2095 0b58 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2096 0b5a 0133     		adds	r3, r3, #1
 2097 0b5c 07F5B052 		add	r2, r7, #5632
 2098 0b60 02F11702 		add	r2, r2, #23
 2099 0b64 1370     		strb	r3, [r2]
 2100              	.L123:
 484:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2101              		.loc 1 484 0 is_stmt 0 discriminator 1
 2102 0b66 07F5B053 		add	r3, r7, #5632
 2103 0b6a 03F11703 		add	r3, r3, #23
 2104 0b6e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2105 0b70 07F5B053 		add	r3, r7, #5632
 2106 0b74 03F11303 		add	r3, r3, #19
 2107 0b78 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2108 0b7a 9A42     		cmp	r2, r3
 2109 0b7c C4D3     		bcc	.L124
 486:..\src/command_processing.c ****                             }
 487:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i / 65536;
 2110              		.loc 1 487 0 is_stmt 1
 2111 0b7e 07F5B053 		add	r3, r7, #5632
 2112 0b82 03F10F03 		add	r3, r3, #15
 2113 0b86 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2114 0b88 7449     		ldr	r1, .L286
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 63


 2115 0b8a 1346     		mov	r3, r2
 2116 0b8c DB00     		lsls	r3, r3, #3
 2117 0b8e 9B1A     		subs	r3, r3, r2
 2118 0b90 1B01     		lsls	r3, r3, #4
 2119 0b92 0B44     		add	r3, r3, r1
 2120 0b94 B433     		adds	r3, r3, #180
 2121 0b96 1B68     		ldr	r3, [r3]
 2122 0b98 1846     		mov	r0, r3
 2123 0b9a FFF7FEFF 		bl	__aeabi_i2f
 2124 0b9e 0346     		mov	r3, r0
 2125 0ba0 4FF08F41 		mov	r1, #1199570944
 2126 0ba4 1846     		mov	r0, r3
 2127 0ba6 FFF7FEFF 		bl	__aeabi_fdiv
 2128 0baa 0346     		mov	r3, r0
 2129 0bac 1A46     		mov	r2, r3
 2130 0bae 07F13803 		add	r3, r7, #56
 2131 0bb2 1C3B     		subs	r3, r3, #28
 2132 0bb4 1A60     		str	r2, [r3]	@ float
 488:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2133              		.loc 1 488 0
 2134 0bb6 0023     		movs	r3, #0
 2135 0bb8 07F5B052 		add	r2, r7, #5632
 2136 0bbc 02F11702 		add	r2, r2, #23
 2137 0bc0 1370     		strb	r3, [r2]
 2138 0bc2 34E0     		b	.L125
 2139              	.L126:
 489:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2140              		.loc 1 489 0 discriminator 3
 2141 0bc4 07F5B053 		add	r3, r7, #5632
 2142 0bc8 03F11503 		add	r3, r3, #21
 2143 0bcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2144 0bce 3222     		movs	r2, #50
 2145 0bd0 02FB03F3 		mul	r3, r2, r3
 2146 0bd4 1A1D     		adds	r2, r3, #4
 2147 0bd6 07F5B053 		add	r3, r7, #5632
 2148 0bda 03F11303 		add	r3, r3, #19
 2149 0bde 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2150 0be0 1A44     		add	r2, r2, r3
 2151 0be2 07F5B053 		add	r3, r7, #5632
 2152 0be6 03F11303 		add	r3, r3, #19
 2153 0bea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2154 0bec 1A44     		add	r2, r2, r3
 2155 0bee 07F5B053 		add	r3, r7, #5632
 2156 0bf2 03F11703 		add	r3, r3, #23
 2157 0bf6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2158 0bf8 D31A     		subs	r3, r2, r3
 2159 0bfa 5A1E     		subs	r2, r3, #1
 2160 0bfc 07F5B053 		add	r3, r7, #5632
 2161 0c00 03F11703 		add	r3, r3, #23
 2162 0c04 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2163 0c06 07F13803 		add	r3, r7, #56
 2164 0c0a 1C3B     		subs	r3, r3, #28
 2165 0c0c 0B44     		add	r3, r3, r1
 2166 0c0e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2167 0c10 07F15803 		add	r3, r7, #88
 2168 0c14 043B     		subs	r3, r3, #4
 2169 0c16 9954     		strb	r1, [r3, r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 64


 488:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2170              		.loc 1 488 0 discriminator 3
 2171 0c18 07F5B053 		add	r3, r7, #5632
 2172 0c1c 03F11703 		add	r3, r3, #23
 2173 0c20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2174 0c22 0133     		adds	r3, r3, #1
 2175 0c24 07F5B052 		add	r2, r7, #5632
 2176 0c28 02F11702 		add	r2, r2, #23
 2177 0c2c 1370     		strb	r3, [r2]
 2178              	.L125:
 488:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2179              		.loc 1 488 0 is_stmt 0 discriminator 1
 2180 0c2e 07F5B053 		add	r3, r7, #5632
 2181 0c32 03F11703 		add	r3, r3, #23
 2182 0c36 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2183 0c38 07F5B053 		add	r3, r7, #5632
 2184 0c3c 03F11303 		add	r3, r3, #19
 2185 0c40 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2186 0c42 9A42     		cmp	r2, r3
 2187 0c44 BED3     		bcc	.L126
 490:..\src/command_processing.c ****                             }
 491:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d / 65536;
 2188              		.loc 1 491 0 is_stmt 1
 2189 0c46 07F5B053 		add	r3, r7, #5632
 2190 0c4a 03F10F03 		add	r3, r3, #15
 2191 0c4e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2192 0c50 4249     		ldr	r1, .L286
 2193 0c52 1346     		mov	r3, r2
 2194 0c54 DB00     		lsls	r3, r3, #3
 2195 0c56 9B1A     		subs	r3, r3, r2
 2196 0c58 1B01     		lsls	r3, r3, #4
 2197 0c5a 0B44     		add	r3, r3, r1
 2198 0c5c B833     		adds	r3, r3, #184
 2199 0c5e 1B68     		ldr	r3, [r3]
 2200 0c60 1846     		mov	r0, r3
 2201 0c62 FFF7FEFF 		bl	__aeabi_i2f
 2202 0c66 0346     		mov	r3, r0
 2203 0c68 4FF08F41 		mov	r1, #1199570944
 2204 0c6c 1846     		mov	r0, r3
 2205 0c6e FFF7FEFF 		bl	__aeabi_fdiv
 2206 0c72 0346     		mov	r3, r0
 2207 0c74 1A46     		mov	r2, r3
 2208 0c76 07F13803 		add	r3, r7, #56
 2209 0c7a 1C3B     		subs	r3, r3, #28
 2210 0c7c 1A60     		str	r2, [r3]	@ float
 492:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2211              		.loc 1 492 0
 2212 0c7e 0023     		movs	r3, #0
 2213 0c80 07F5B052 		add	r2, r7, #5632
 2214 0c84 02F11702 		add	r2, r2, #23
 2215 0c88 1370     		strb	r3, [r2]
 2216 0c8a 35E0     		b	.L127
 2217              	.L128:
 493:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2218              		.loc 1 493 0 discriminator 3
 2219 0c8c 07F5B053 		add	r3, r7, #5632
 2220 0c90 03F11503 		add	r3, r3, #21
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 65


 2221 0c94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2222 0c96 3222     		movs	r2, #50
 2223 0c98 02FB03F3 		mul	r3, r2, r3
 2224 0c9c 1A1D     		adds	r2, r3, #4
 2225 0c9e 07F5B053 		add	r3, r7, #5632
 2226 0ca2 03F11303 		add	r3, r3, #19
 2227 0ca6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2228 0ca8 5B00     		lsls	r3, r3, #1
 2229 0caa 1A44     		add	r2, r2, r3
 2230 0cac 07F5B053 		add	r3, r7, #5632
 2231 0cb0 03F11303 		add	r3, r3, #19
 2232 0cb4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2233 0cb6 1A44     		add	r2, r2, r3
 2234 0cb8 07F5B053 		add	r3, r7, #5632
 2235 0cbc 03F11703 		add	r3, r3, #23
 2236 0cc0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2237 0cc2 D31A     		subs	r3, r2, r3
 2238 0cc4 5A1E     		subs	r2, r3, #1
 2239 0cc6 07F5B053 		add	r3, r7, #5632
 2240 0cca 03F11703 		add	r3, r3, #23
 2241 0cce 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2242 0cd0 07F13803 		add	r3, r7, #56
 2243 0cd4 1C3B     		subs	r3, r3, #28
 2244 0cd6 0B44     		add	r3, r3, r1
 2245 0cd8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2246 0cda 07F15803 		add	r3, r7, #88
 2247 0cde 043B     		subs	r3, r3, #4
 2248 0ce0 9954     		strb	r1, [r3, r2]
 492:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2249              		.loc 1 492 0 discriminator 3
 2250 0ce2 07F5B053 		add	r3, r7, #5632
 2251 0ce6 03F11703 		add	r3, r3, #23
 2252 0cea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2253 0cec 0133     		adds	r3, r3, #1
 2254 0cee 07F5B052 		add	r2, r7, #5632
 2255 0cf2 02F11702 		add	r2, r2, #23
 2256 0cf6 1370     		strb	r3, [r2]
 2257              	.L127:
 492:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2258              		.loc 1 492 0 is_stmt 0 discriminator 1
 2259 0cf8 07F5B053 		add	r3, r7, #5632
 2260 0cfc 03F11703 		add	r3, r3, #23
 2261 0d00 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2262 0d02 07F5B053 		add	r3, r7, #5632
 2263 0d06 03F11303 		add	r3, r3, #19
 2264 0d0a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2265 0d0c 9A42     		cmp	r2, r3
 2266 0d0e BDD3     		bcc	.L128
 494:..\src/command_processing.c ****                             } 
 495:..\src/command_processing.c ****                         }
 496:..\src/command_processing.c ****                         else {
 497:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_dl / 65536;
 498:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 499:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 500:..\src/command_processing.c ****                             }
 501:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_dl / 65536;
 502:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 66


 503:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 504:..\src/command_processing.c ****                             }
 505:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_dl / 65536;
 506:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 507:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 508:..\src/command_processing.c ****                             }
 509:..\src/command_processing.c ****                         }
 510:..\src/command_processing.c ****                         break;
 2267              		.loc 1 510 0 is_stmt 1
 2268 0d10 01F0DBBB 		b	.L110
 2269              	.L122:
 497:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2270              		.loc 1 497 0
 2271 0d14 07F5B053 		add	r3, r7, #5632
 2272 0d18 03F10F03 		add	r3, r3, #15
 2273 0d1c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2274 0d1e 0F49     		ldr	r1, .L286
 2275 0d20 1346     		mov	r3, r2
 2276 0d22 DB00     		lsls	r3, r3, #3
 2277 0d24 9B1A     		subs	r3, r3, r2
 2278 0d26 1B01     		lsls	r3, r3, #4
 2279 0d28 0B44     		add	r3, r3, r1
 2280 0d2a C833     		adds	r3, r3, #200
 2281 0d2c 1B68     		ldr	r3, [r3]
 2282 0d2e 1846     		mov	r0, r3
 2283 0d30 FFF7FEFF 		bl	__aeabi_i2f
 2284 0d34 0346     		mov	r3, r0
 2285 0d36 4FF08F41 		mov	r1, #1199570944
 2286 0d3a 1846     		mov	r0, r3
 2287 0d3c FFF7FEFF 		bl	__aeabi_fdiv
 2288 0d40 0346     		mov	r3, r0
 2289 0d42 1A46     		mov	r2, r3
 2290 0d44 07F13803 		add	r3, r7, #56
 2291 0d48 1C3B     		subs	r3, r3, #28
 2292 0d4a 1A60     		str	r2, [r3]	@ float
 498:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2293              		.loc 1 498 0
 2294 0d4c 0023     		movs	r3, #0
 2295 0d4e 07F5B052 		add	r2, r7, #5632
 2296 0d52 02F11702 		add	r2, r2, #23
 2297 0d56 1370     		strb	r3, [r2]
 2298 0d58 31E0     		b	.L130
 2299              	.L287:
 2300 0d5a 00BF     		.align	2
 2301              	.L286:
 2302 0d5c 00000000 		.word	c_mem
 2303              	.L131:
 499:..\src/command_processing.c ****                             }
 2304              		.loc 1 499 0 discriminator 3
 2305 0d60 07F5B053 		add	r3, r7, #5632
 2306 0d64 03F11503 		add	r3, r3, #21
 2307 0d68 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2308 0d6a 3222     		movs	r2, #50
 2309 0d6c 02FB03F3 		mul	r3, r2, r3
 2310 0d70 1A1D     		adds	r2, r3, #4
 2311 0d72 07F5B053 		add	r3, r7, #5632
 2312 0d76 03F11303 		add	r3, r3, #19
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 67


 2313 0d7a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2314 0d7c 1A44     		add	r2, r2, r3
 2315 0d7e 07F5B053 		add	r3, r7, #5632
 2316 0d82 03F11703 		add	r3, r3, #23
 2317 0d86 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2318 0d88 D31A     		subs	r3, r2, r3
 2319 0d8a 5A1E     		subs	r2, r3, #1
 2320 0d8c 07F5B053 		add	r3, r7, #5632
 2321 0d90 03F11703 		add	r3, r3, #23
 2322 0d94 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2323 0d96 07F13803 		add	r3, r7, #56
 2324 0d9a 1C3B     		subs	r3, r3, #28
 2325 0d9c 0B44     		add	r3, r3, r1
 2326 0d9e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2327 0da0 07F15803 		add	r3, r7, #88
 2328 0da4 043B     		subs	r3, r3, #4
 2329 0da6 9954     		strb	r1, [r3, r2]
 498:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2330              		.loc 1 498 0 discriminator 3
 2331 0da8 07F5B053 		add	r3, r7, #5632
 2332 0dac 03F11703 		add	r3, r3, #23
 2333 0db0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2334 0db2 0133     		adds	r3, r3, #1
 2335 0db4 07F5B052 		add	r2, r7, #5632
 2336 0db8 02F11702 		add	r2, r2, #23
 2337 0dbc 1370     		strb	r3, [r2]
 2338              	.L130:
 498:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2339              		.loc 1 498 0 is_stmt 0 discriminator 1
 2340 0dbe 07F5B053 		add	r3, r7, #5632
 2341 0dc2 03F11703 		add	r3, r3, #23
 2342 0dc6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2343 0dc8 07F5B053 		add	r3, r7, #5632
 2344 0dcc 03F11303 		add	r3, r3, #19
 2345 0dd0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2346 0dd2 9A42     		cmp	r2, r3
 2347 0dd4 C4D3     		bcc	.L131
 501:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2348              		.loc 1 501 0 is_stmt 1
 2349 0dd6 07F5B053 		add	r3, r7, #5632
 2350 0dda 03F10F03 		add	r3, r3, #15
 2351 0dde 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2352 0de0 AB49     		ldr	r1, .L288
 2353 0de2 1346     		mov	r3, r2
 2354 0de4 DB00     		lsls	r3, r3, #3
 2355 0de6 9B1A     		subs	r3, r3, r2
 2356 0de8 1B01     		lsls	r3, r3, #4
 2357 0dea 0B44     		add	r3, r3, r1
 2358 0dec CC33     		adds	r3, r3, #204
 2359 0dee 1B68     		ldr	r3, [r3]
 2360 0df0 1846     		mov	r0, r3
 2361 0df2 FFF7FEFF 		bl	__aeabi_i2f
 2362 0df6 0346     		mov	r3, r0
 2363 0df8 4FF08F41 		mov	r1, #1199570944
 2364 0dfc 1846     		mov	r0, r3
 2365 0dfe FFF7FEFF 		bl	__aeabi_fdiv
 2366 0e02 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 68


 2367 0e04 1A46     		mov	r2, r3
 2368 0e06 07F13803 		add	r3, r7, #56
 2369 0e0a 1C3B     		subs	r3, r3, #28
 2370 0e0c 1A60     		str	r2, [r3]	@ float
 502:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2371              		.loc 1 502 0
 2372 0e0e 0023     		movs	r3, #0
 2373 0e10 07F5B052 		add	r2, r7, #5632
 2374 0e14 02F11702 		add	r2, r2, #23
 2375 0e18 1370     		strb	r3, [r2]
 2376 0e1a 34E0     		b	.L132
 2377              	.L133:
 503:..\src/command_processing.c ****                             }
 2378              		.loc 1 503 0 discriminator 3
 2379 0e1c 07F5B053 		add	r3, r7, #5632
 2380 0e20 03F11503 		add	r3, r3, #21
 2381 0e24 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2382 0e26 3222     		movs	r2, #50
 2383 0e28 02FB03F3 		mul	r3, r2, r3
 2384 0e2c 1A1D     		adds	r2, r3, #4
 2385 0e2e 07F5B053 		add	r3, r7, #5632
 2386 0e32 03F11303 		add	r3, r3, #19
 2387 0e36 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2388 0e38 1A44     		add	r2, r2, r3
 2389 0e3a 07F5B053 		add	r3, r7, #5632
 2390 0e3e 03F11303 		add	r3, r3, #19
 2391 0e42 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2392 0e44 1A44     		add	r2, r2, r3
 2393 0e46 07F5B053 		add	r3, r7, #5632
 2394 0e4a 03F11703 		add	r3, r3, #23
 2395 0e4e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2396 0e50 D31A     		subs	r3, r2, r3
 2397 0e52 5A1E     		subs	r2, r3, #1
 2398 0e54 07F5B053 		add	r3, r7, #5632
 2399 0e58 03F11703 		add	r3, r3, #23
 2400 0e5c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2401 0e5e 07F13803 		add	r3, r7, #56
 2402 0e62 1C3B     		subs	r3, r3, #28
 2403 0e64 0B44     		add	r3, r3, r1
 2404 0e66 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2405 0e68 07F15803 		add	r3, r7, #88
 2406 0e6c 043B     		subs	r3, r3, #4
 2407 0e6e 9954     		strb	r1, [r3, r2]
 502:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2408              		.loc 1 502 0 discriminator 3
 2409 0e70 07F5B053 		add	r3, r7, #5632
 2410 0e74 03F11703 		add	r3, r3, #23
 2411 0e78 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2412 0e7a 0133     		adds	r3, r3, #1
 2413 0e7c 07F5B052 		add	r2, r7, #5632
 2414 0e80 02F11702 		add	r2, r2, #23
 2415 0e84 1370     		strb	r3, [r2]
 2416              	.L132:
 502:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2417              		.loc 1 502 0 is_stmt 0 discriminator 1
 2418 0e86 07F5B053 		add	r3, r7, #5632
 2419 0e8a 03F11703 		add	r3, r3, #23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 69


 2420 0e8e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2421 0e90 07F5B053 		add	r3, r7, #5632
 2422 0e94 03F11303 		add	r3, r3, #19
 2423 0e98 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2424 0e9a 9A42     		cmp	r2, r3
 2425 0e9c BED3     		bcc	.L133
 505:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2426              		.loc 1 505 0 is_stmt 1
 2427 0e9e 07F5B053 		add	r3, r7, #5632
 2428 0ea2 03F10F03 		add	r3, r3, #15
 2429 0ea6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2430 0ea8 7949     		ldr	r1, .L288
 2431 0eaa 1346     		mov	r3, r2
 2432 0eac DB00     		lsls	r3, r3, #3
 2433 0eae 9B1A     		subs	r3, r3, r2
 2434 0eb0 1B01     		lsls	r3, r3, #4
 2435 0eb2 0B44     		add	r3, r3, r1
 2436 0eb4 D033     		adds	r3, r3, #208
 2437 0eb6 1B68     		ldr	r3, [r3]
 2438 0eb8 1846     		mov	r0, r3
 2439 0eba FFF7FEFF 		bl	__aeabi_i2f
 2440 0ebe 0346     		mov	r3, r0
 2441 0ec0 4FF08F41 		mov	r1, #1199570944
 2442 0ec4 1846     		mov	r0, r3
 2443 0ec6 FFF7FEFF 		bl	__aeabi_fdiv
 2444 0eca 0346     		mov	r3, r0
 2445 0ecc 1A46     		mov	r2, r3
 2446 0ece 07F13803 		add	r3, r7, #56
 2447 0ed2 1C3B     		subs	r3, r3, #28
 2448 0ed4 1A60     		str	r2, [r3]	@ float
 506:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2449              		.loc 1 506 0
 2450 0ed6 0023     		movs	r3, #0
 2451 0ed8 07F5B052 		add	r2, r7, #5632
 2452 0edc 02F11702 		add	r2, r2, #23
 2453 0ee0 1370     		strb	r3, [r2]
 2454 0ee2 35E0     		b	.L134
 2455              	.L135:
 507:..\src/command_processing.c ****                             }
 2456              		.loc 1 507 0 discriminator 3
 2457 0ee4 07F5B053 		add	r3, r7, #5632
 2458 0ee8 03F11503 		add	r3, r3, #21
 2459 0eec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2460 0eee 3222     		movs	r2, #50
 2461 0ef0 02FB03F3 		mul	r3, r2, r3
 2462 0ef4 1A1D     		adds	r2, r3, #4
 2463 0ef6 07F5B053 		add	r3, r7, #5632
 2464 0efa 03F11303 		add	r3, r3, #19
 2465 0efe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2466 0f00 5B00     		lsls	r3, r3, #1
 2467 0f02 1A44     		add	r2, r2, r3
 2468 0f04 07F5B053 		add	r3, r7, #5632
 2469 0f08 03F11303 		add	r3, r3, #19
 2470 0f0c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2471 0f0e 1A44     		add	r2, r2, r3
 2472 0f10 07F5B053 		add	r3, r7, #5632
 2473 0f14 03F11703 		add	r3, r3, #23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 70


 2474 0f18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2475 0f1a D31A     		subs	r3, r2, r3
 2476 0f1c 5A1E     		subs	r2, r3, #1
 2477 0f1e 07F5B053 		add	r3, r7, #5632
 2478 0f22 03F11703 		add	r3, r3, #23
 2479 0f26 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2480 0f28 07F13803 		add	r3, r7, #56
 2481 0f2c 1C3B     		subs	r3, r3, #28
 2482 0f2e 0B44     		add	r3, r3, r1
 2483 0f30 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2484 0f32 07F15803 		add	r3, r7, #88
 2485 0f36 043B     		subs	r3, r3, #4
 2486 0f38 9954     		strb	r1, [r3, r2]
 506:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2487              		.loc 1 506 0 discriminator 3
 2488 0f3a 07F5B053 		add	r3, r7, #5632
 2489 0f3e 03F11703 		add	r3, r3, #23
 2490 0f42 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2491 0f44 0133     		adds	r3, r3, #1
 2492 0f46 07F5B052 		add	r2, r7, #5632
 2493 0f4a 02F11702 		add	r2, r2, #23
 2494 0f4e 1370     		strb	r3, [r2]
 2495              	.L134:
 506:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2496              		.loc 1 506 0 is_stmt 0 discriminator 1
 2497 0f50 07F5B053 		add	r3, r7, #5632
 2498 0f54 03F11703 		add	r3, r3, #23
 2499 0f58 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2500 0f5a 07F5B053 		add	r3, r7, #5632
 2501 0f5e 03F11303 		add	r3, r3, #19
 2502 0f62 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2503 0f64 9A42     		cmp	r2, r3
 2504 0f66 BDD3     		bcc	.L135
 2505              		.loc 1 510 0 is_stmt 1
 2506 0f68 01F0AFBA 		b	.L110
 2507              	.L114:
 511:..\src/command_processing.c ****                         
 512:..\src/command_processing.c ****                     case 3:         //Current PID
 513:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 2508              		.loc 1 513 0
 2509 0f6c 07F5B053 		add	r3, r7, #5632
 2510 0f70 03F10F03 		add	r3, r3, #15
 2511 0f74 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2512 0f76 4649     		ldr	r1, .L288
 2513 0f78 1346     		mov	r3, r2
 2514 0f7a DB00     		lsls	r3, r3, #3
 2515 0f7c 9B1A     		subs	r3, r3, r2
 2516 0f7e 1B01     		lsls	r3, r3, #4
 2517 0f80 0B44     		add	r3, r3, r1
 2518 0f82 03F20F13 		addw	r3, r3, #271
 2519 0f86 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2520 0f88 032B     		cmp	r3, #3
 2521 0f8a 00F02B81 		beq	.L136
 514:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c / 65536;
 2522              		.loc 1 514 0
 2523 0f8e 07F5B053 		add	r3, r7, #5632
 2524 0f92 03F10F03 		add	r3, r3, #15
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 71


 2525 0f96 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2526 0f98 3D49     		ldr	r1, .L288
 2527 0f9a 1346     		mov	r3, r2
 2528 0f9c DB00     		lsls	r3, r3, #3
 2529 0f9e 9B1A     		subs	r3, r3, r2
 2530 0fa0 1B01     		lsls	r3, r3, #4
 2531 0fa2 0B44     		add	r3, r3, r1
 2532 0fa4 BC33     		adds	r3, r3, #188
 2533 0fa6 1B68     		ldr	r3, [r3]
 2534 0fa8 1846     		mov	r0, r3
 2535 0faa FFF7FEFF 		bl	__aeabi_i2f
 2536 0fae 0346     		mov	r3, r0
 2537 0fb0 4FF08F41 		mov	r1, #1199570944
 2538 0fb4 1846     		mov	r0, r3
 2539 0fb6 FFF7FEFF 		bl	__aeabi_fdiv
 2540 0fba 0346     		mov	r3, r0
 2541 0fbc 1A46     		mov	r2, r3
 2542 0fbe 07F13803 		add	r3, r7, #56
 2543 0fc2 1C3B     		subs	r3, r3, #28
 2544 0fc4 1A60     		str	r2, [r3]	@ float
 515:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2545              		.loc 1 515 0
 2546 0fc6 0023     		movs	r3, #0
 2547 0fc8 07F5B052 		add	r2, r7, #5632
 2548 0fcc 02F11702 		add	r2, r2, #23
 2549 0fd0 1370     		strb	r3, [r2]
 2550 0fd2 2EE0     		b	.L137
 2551              	.L138:
 516:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2552              		.loc 1 516 0 discriminator 3
 2553 0fd4 07F5B053 		add	r3, r7, #5632
 2554 0fd8 03F11503 		add	r3, r3, #21
 2555 0fdc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2556 0fde 3222     		movs	r2, #50
 2557 0fe0 02FB03F3 		mul	r3, r2, r3
 2558 0fe4 1A1D     		adds	r2, r3, #4
 2559 0fe6 07F5B053 		add	r3, r7, #5632
 2560 0fea 03F11303 		add	r3, r3, #19
 2561 0fee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2562 0ff0 1A44     		add	r2, r2, r3
 2563 0ff2 07F5B053 		add	r3, r7, #5632
 2564 0ff6 03F11703 		add	r3, r3, #23
 2565 0ffa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2566 0ffc D31A     		subs	r3, r2, r3
 2567 0ffe 5A1E     		subs	r2, r3, #1
 2568 1000 07F5B053 		add	r3, r7, #5632
 2569 1004 03F11703 		add	r3, r3, #23
 2570 1008 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2571 100a 07F13803 		add	r3, r7, #56
 2572 100e 1C3B     		subs	r3, r3, #28
 2573 1010 0B44     		add	r3, r3, r1
 2574 1012 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2575 1014 07F15803 		add	r3, r7, #88
 2576 1018 043B     		subs	r3, r3, #4
 2577 101a 9954     		strb	r1, [r3, r2]
 515:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2578              		.loc 1 515 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 72


 2579 101c 07F5B053 		add	r3, r7, #5632
 2580 1020 03F11703 		add	r3, r3, #23
 2581 1024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2582 1026 0133     		adds	r3, r3, #1
 2583 1028 07F5B052 		add	r2, r7, #5632
 2584 102c 02F11702 		add	r2, r2, #23
 2585 1030 1370     		strb	r3, [r2]
 2586              	.L137:
 515:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2587              		.loc 1 515 0 is_stmt 0 discriminator 1
 2588 1032 07F5B053 		add	r3, r7, #5632
 2589 1036 03F11703 		add	r3, r3, #23
 2590 103a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2591 103c 07F5B053 		add	r3, r7, #5632
 2592 1040 03F11303 		add	r3, r3, #19
 2593 1044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2594 1046 9A42     		cmp	r2, r3
 2595 1048 C4D3     		bcc	.L138
 517:..\src/command_processing.c ****                             }
 518:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c / 65536;
 2596              		.loc 1 518 0 is_stmt 1
 2597 104a 07F5B053 		add	r3, r7, #5632
 2598 104e 03F10F03 		add	r3, r3, #15
 2599 1052 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2600 1054 0E49     		ldr	r1, .L288
 2601 1056 1346     		mov	r3, r2
 2602 1058 DB00     		lsls	r3, r3, #3
 2603 105a 9B1A     		subs	r3, r3, r2
 2604 105c 1B01     		lsls	r3, r3, #4
 2605 105e 0B44     		add	r3, r3, r1
 2606 1060 C033     		adds	r3, r3, #192
 2607 1062 1B68     		ldr	r3, [r3]
 2608 1064 1846     		mov	r0, r3
 2609 1066 FFF7FEFF 		bl	__aeabi_i2f
 2610 106a 0346     		mov	r3, r0
 2611 106c 4FF08F41 		mov	r1, #1199570944
 2612 1070 1846     		mov	r0, r3
 2613 1072 FFF7FEFF 		bl	__aeabi_fdiv
 2614 1076 0346     		mov	r3, r0
 2615 1078 1A46     		mov	r2, r3
 2616 107a 07F13803 		add	r3, r7, #56
 2617 107e 1C3B     		subs	r3, r3, #28
 2618 1080 1A60     		str	r2, [r3]	@ float
 519:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2619              		.loc 1 519 0
 2620 1082 0023     		movs	r3, #0
 2621 1084 07F5B052 		add	r2, r7, #5632
 2622 1088 02F11702 		add	r2, r2, #23
 2623 108c 1370     		strb	r3, [r2]
 2624 108e 36E0     		b	.L139
 2625              	.L289:
 2626              		.align	2
 2627              	.L288:
 2628 1090 00000000 		.word	c_mem
 2629              	.L140:
 520:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2630              		.loc 1 520 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 73


 2631 1094 07F5B053 		add	r3, r7, #5632
 2632 1098 03F11503 		add	r3, r3, #21
 2633 109c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2634 109e 3222     		movs	r2, #50
 2635 10a0 02FB03F3 		mul	r3, r2, r3
 2636 10a4 1A1D     		adds	r2, r3, #4
 2637 10a6 07F5B053 		add	r3, r7, #5632
 2638 10aa 03F11303 		add	r3, r3, #19
 2639 10ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2640 10b0 1A44     		add	r2, r2, r3
 2641 10b2 07F5B053 		add	r3, r7, #5632
 2642 10b6 03F11303 		add	r3, r3, #19
 2643 10ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2644 10bc 1A44     		add	r2, r2, r3
 2645 10be 07F5B053 		add	r3, r7, #5632
 2646 10c2 03F11703 		add	r3, r3, #23
 2647 10c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2648 10c8 D31A     		subs	r3, r2, r3
 2649 10ca 5A1E     		subs	r2, r3, #1
 2650 10cc 07F5B053 		add	r3, r7, #5632
 2651 10d0 03F11703 		add	r3, r3, #23
 2652 10d4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2653 10d6 07F13803 		add	r3, r7, #56
 2654 10da 1C3B     		subs	r3, r3, #28
 2655 10dc 0B44     		add	r3, r3, r1
 2656 10de 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2657 10e0 07F15803 		add	r3, r7, #88
 2658 10e4 043B     		subs	r3, r3, #4
 2659 10e6 9954     		strb	r1, [r3, r2]
 519:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2660              		.loc 1 519 0 discriminator 3
 2661 10e8 07F5B053 		add	r3, r7, #5632
 2662 10ec 03F11703 		add	r3, r3, #23
 2663 10f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2664 10f2 0133     		adds	r3, r3, #1
 2665 10f4 07F5B052 		add	r2, r7, #5632
 2666 10f8 02F11702 		add	r2, r2, #23
 2667 10fc 1370     		strb	r3, [r2]
 2668              	.L139:
 519:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2669              		.loc 1 519 0 is_stmt 0 discriminator 1
 2670 10fe 07F5B053 		add	r3, r7, #5632
 2671 1102 03F11703 		add	r3, r3, #23
 2672 1106 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2673 1108 07F5B053 		add	r3, r7, #5632
 2674 110c 03F11303 		add	r3, r3, #19
 2675 1110 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2676 1112 9A42     		cmp	r2, r3
 2677 1114 BED3     		bcc	.L140
 521:..\src/command_processing.c ****                             }
 522:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c / 65536;
 2678              		.loc 1 522 0 is_stmt 1
 2679 1116 07F5B053 		add	r3, r7, #5632
 2680 111a 03F10F03 		add	r3, r3, #15
 2681 111e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2682 1120 C849     		ldr	r1, .L290
 2683 1122 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 74


 2684 1124 DB00     		lsls	r3, r3, #3
 2685 1126 9B1A     		subs	r3, r3, r2
 2686 1128 1B01     		lsls	r3, r3, #4
 2687 112a 0B44     		add	r3, r3, r1
 2688 112c C433     		adds	r3, r3, #196
 2689 112e 1B68     		ldr	r3, [r3]
 2690 1130 1846     		mov	r0, r3
 2691 1132 FFF7FEFF 		bl	__aeabi_i2f
 2692 1136 0346     		mov	r3, r0
 2693 1138 4FF08F41 		mov	r1, #1199570944
 2694 113c 1846     		mov	r0, r3
 2695 113e FFF7FEFF 		bl	__aeabi_fdiv
 2696 1142 0346     		mov	r3, r0
 2697 1144 1A46     		mov	r2, r3
 2698 1146 07F13803 		add	r3, r7, #56
 2699 114a 1C3B     		subs	r3, r3, #28
 2700 114c 1A60     		str	r2, [r3]	@ float
 523:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2701              		.loc 1 523 0
 2702 114e 0023     		movs	r3, #0
 2703 1150 07F5B052 		add	r2, r7, #5632
 2704 1154 02F11702 		add	r2, r2, #23
 2705 1158 1370     		strb	r3, [r2]
 2706 115a 35E0     		b	.L141
 2707              	.L142:
 524:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2708              		.loc 1 524 0 discriminator 3
 2709 115c 07F5B053 		add	r3, r7, #5632
 2710 1160 03F11503 		add	r3, r3, #21
 2711 1164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2712 1166 3222     		movs	r2, #50
 2713 1168 02FB03F3 		mul	r3, r2, r3
 2714 116c 1A1D     		adds	r2, r3, #4
 2715 116e 07F5B053 		add	r3, r7, #5632
 2716 1172 03F11303 		add	r3, r3, #19
 2717 1176 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2718 1178 5B00     		lsls	r3, r3, #1
 2719 117a 1A44     		add	r2, r2, r3
 2720 117c 07F5B053 		add	r3, r7, #5632
 2721 1180 03F11303 		add	r3, r3, #19
 2722 1184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2723 1186 1A44     		add	r2, r2, r3
 2724 1188 07F5B053 		add	r3, r7, #5632
 2725 118c 03F11703 		add	r3, r3, #23
 2726 1190 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2727 1192 D31A     		subs	r3, r2, r3
 2728 1194 5A1E     		subs	r2, r3, #1
 2729 1196 07F5B053 		add	r3, r7, #5632
 2730 119a 03F11703 		add	r3, r3, #23
 2731 119e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2732 11a0 07F13803 		add	r3, r7, #56
 2733 11a4 1C3B     		subs	r3, r3, #28
 2734 11a6 0B44     		add	r3, r3, r1
 2735 11a8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2736 11aa 07F15803 		add	r3, r7, #88
 2737 11ae 043B     		subs	r3, r3, #4
 2738 11b0 9954     		strb	r1, [r3, r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 75


 523:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2739              		.loc 1 523 0 discriminator 3
 2740 11b2 07F5B053 		add	r3, r7, #5632
 2741 11b6 03F11703 		add	r3, r3, #23
 2742 11ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2743 11bc 0133     		adds	r3, r3, #1
 2744 11be 07F5B052 		add	r2, r7, #5632
 2745 11c2 02F11702 		add	r2, r2, #23
 2746 11c6 1370     		strb	r3, [r2]
 2747              	.L141:
 523:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2748              		.loc 1 523 0 is_stmt 0 discriminator 1
 2749 11c8 07F5B053 		add	r3, r7, #5632
 2750 11cc 03F11703 		add	r3, r3, #23
 2751 11d0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2752 11d2 07F5B053 		add	r3, r7, #5632
 2753 11d6 03F11303 		add	r3, r3, #19
 2754 11da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2755 11dc 9A42     		cmp	r2, r3
 2756 11de BDD3     		bcc	.L142
 525:..\src/command_processing.c ****                             }
 526:..\src/command_processing.c ****                         }
 527:..\src/command_processing.c ****                         else {
 528:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c_dl / 65536;
 529:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 530:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 531:..\src/command_processing.c ****                             }
 532:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c_dl / 65536;
 533:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 534:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 535:..\src/command_processing.c ****                             }
 536:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c_dl / 65536;
 537:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 538:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 539:..\src/command_processing.c ****                             }
 540:..\src/command_processing.c ****                         }            
 541:..\src/command_processing.c ****                         break;  
 2757              		.loc 1 541 0 is_stmt 1
 2758 11e0 01F073B9 		b	.L110
 2759              	.L136:
 528:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2760              		.loc 1 528 0
 2761 11e4 07F5B053 		add	r3, r7, #5632
 2762 11e8 03F10F03 		add	r3, r3, #15
 2763 11ec 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2764 11ee 9549     		ldr	r1, .L290
 2765 11f0 1346     		mov	r3, r2
 2766 11f2 DB00     		lsls	r3, r3, #3
 2767 11f4 9B1A     		subs	r3, r3, r2
 2768 11f6 1B01     		lsls	r3, r3, #4
 2769 11f8 0B44     		add	r3, r3, r1
 2770 11fa D433     		adds	r3, r3, #212
 2771 11fc 1B68     		ldr	r3, [r3]
 2772 11fe 1846     		mov	r0, r3
 2773 1200 FFF7FEFF 		bl	__aeabi_i2f
 2774 1204 0346     		mov	r3, r0
 2775 1206 4FF08F41 		mov	r1, #1199570944
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 76


 2776 120a 1846     		mov	r0, r3
 2777 120c FFF7FEFF 		bl	__aeabi_fdiv
 2778 1210 0346     		mov	r3, r0
 2779 1212 1A46     		mov	r2, r3
 2780 1214 07F13803 		add	r3, r7, #56
 2781 1218 1C3B     		subs	r3, r3, #28
 2782 121a 1A60     		str	r2, [r3]	@ float
 529:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2783              		.loc 1 529 0
 2784 121c 0023     		movs	r3, #0
 2785 121e 07F5B052 		add	r2, r7, #5632
 2786 1222 02F11702 		add	r2, r2, #23
 2787 1226 1370     		strb	r3, [r2]
 2788 1228 2EE0     		b	.L144
 2789              	.L145:
 530:..\src/command_processing.c ****                             }
 2790              		.loc 1 530 0 discriminator 3
 2791 122a 07F5B053 		add	r3, r7, #5632
 2792 122e 03F11503 		add	r3, r3, #21
 2793 1232 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2794 1234 3222     		movs	r2, #50
 2795 1236 02FB03F3 		mul	r3, r2, r3
 2796 123a 1A1D     		adds	r2, r3, #4
 2797 123c 07F5B053 		add	r3, r7, #5632
 2798 1240 03F11303 		add	r3, r3, #19
 2799 1244 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2800 1246 1A44     		add	r2, r2, r3
 2801 1248 07F5B053 		add	r3, r7, #5632
 2802 124c 03F11703 		add	r3, r3, #23
 2803 1250 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2804 1252 D31A     		subs	r3, r2, r3
 2805 1254 5A1E     		subs	r2, r3, #1
 2806 1256 07F5B053 		add	r3, r7, #5632
 2807 125a 03F11703 		add	r3, r3, #23
 2808 125e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2809 1260 07F13803 		add	r3, r7, #56
 2810 1264 1C3B     		subs	r3, r3, #28
 2811 1266 0B44     		add	r3, r3, r1
 2812 1268 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2813 126a 07F15803 		add	r3, r7, #88
 2814 126e 043B     		subs	r3, r3, #4
 2815 1270 9954     		strb	r1, [r3, r2]
 529:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2816              		.loc 1 529 0 discriminator 3
 2817 1272 07F5B053 		add	r3, r7, #5632
 2818 1276 03F11703 		add	r3, r3, #23
 2819 127a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2820 127c 0133     		adds	r3, r3, #1
 2821 127e 07F5B052 		add	r2, r7, #5632
 2822 1282 02F11702 		add	r2, r2, #23
 2823 1286 1370     		strb	r3, [r2]
 2824              	.L144:
 529:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2825              		.loc 1 529 0 is_stmt 0 discriminator 1
 2826 1288 07F5B053 		add	r3, r7, #5632
 2827 128c 03F11703 		add	r3, r3, #23
 2828 1290 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 77


 2829 1292 07F5B053 		add	r3, r7, #5632
 2830 1296 03F11303 		add	r3, r3, #19
 2831 129a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2832 129c 9A42     		cmp	r2, r3
 2833 129e C4D3     		bcc	.L145
 532:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2834              		.loc 1 532 0 is_stmt 1
 2835 12a0 07F5B053 		add	r3, r7, #5632
 2836 12a4 03F10F03 		add	r3, r3, #15
 2837 12a8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2838 12aa 6649     		ldr	r1, .L290
 2839 12ac 1346     		mov	r3, r2
 2840 12ae DB00     		lsls	r3, r3, #3
 2841 12b0 9B1A     		subs	r3, r3, r2
 2842 12b2 1B01     		lsls	r3, r3, #4
 2843 12b4 0B44     		add	r3, r3, r1
 2844 12b6 D833     		adds	r3, r3, #216
 2845 12b8 1B68     		ldr	r3, [r3]
 2846 12ba 1846     		mov	r0, r3
 2847 12bc FFF7FEFF 		bl	__aeabi_i2f
 2848 12c0 0346     		mov	r3, r0
 2849 12c2 4FF08F41 		mov	r1, #1199570944
 2850 12c6 1846     		mov	r0, r3
 2851 12c8 FFF7FEFF 		bl	__aeabi_fdiv
 2852 12cc 0346     		mov	r3, r0
 2853 12ce 1A46     		mov	r2, r3
 2854 12d0 07F13803 		add	r3, r7, #56
 2855 12d4 1C3B     		subs	r3, r3, #28
 2856 12d6 1A60     		str	r2, [r3]	@ float
 533:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2857              		.loc 1 533 0
 2858 12d8 0023     		movs	r3, #0
 2859 12da 07F5B052 		add	r2, r7, #5632
 2860 12de 02F11702 		add	r2, r2, #23
 2861 12e2 1370     		strb	r3, [r2]
 2862 12e4 34E0     		b	.L146
 2863              	.L147:
 534:..\src/command_processing.c ****                             }
 2864              		.loc 1 534 0 discriminator 3
 2865 12e6 07F5B053 		add	r3, r7, #5632
 2866 12ea 03F11503 		add	r3, r3, #21
 2867 12ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2868 12f0 3222     		movs	r2, #50
 2869 12f2 02FB03F3 		mul	r3, r2, r3
 2870 12f6 1A1D     		adds	r2, r3, #4
 2871 12f8 07F5B053 		add	r3, r7, #5632
 2872 12fc 03F11303 		add	r3, r3, #19
 2873 1300 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2874 1302 1A44     		add	r2, r2, r3
 2875 1304 07F5B053 		add	r3, r7, #5632
 2876 1308 03F11303 		add	r3, r3, #19
 2877 130c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2878 130e 1A44     		add	r2, r2, r3
 2879 1310 07F5B053 		add	r3, r7, #5632
 2880 1314 03F11703 		add	r3, r3, #23
 2881 1318 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2882 131a D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 78


 2883 131c 5A1E     		subs	r2, r3, #1
 2884 131e 07F5B053 		add	r3, r7, #5632
 2885 1322 03F11703 		add	r3, r3, #23
 2886 1326 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2887 1328 07F13803 		add	r3, r7, #56
 2888 132c 1C3B     		subs	r3, r3, #28
 2889 132e 0B44     		add	r3, r3, r1
 2890 1330 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2891 1332 07F15803 		add	r3, r7, #88
 2892 1336 043B     		subs	r3, r3, #4
 2893 1338 9954     		strb	r1, [r3, r2]
 533:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2894              		.loc 1 533 0 discriminator 3
 2895 133a 07F5B053 		add	r3, r7, #5632
 2896 133e 03F11703 		add	r3, r3, #23
 2897 1342 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2898 1344 0133     		adds	r3, r3, #1
 2899 1346 07F5B052 		add	r2, r7, #5632
 2900 134a 02F11702 		add	r2, r2, #23
 2901 134e 1370     		strb	r3, [r2]
 2902              	.L146:
 533:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2903              		.loc 1 533 0 is_stmt 0 discriminator 1
 2904 1350 07F5B053 		add	r3, r7, #5632
 2905 1354 03F11703 		add	r3, r3, #23
 2906 1358 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2907 135a 07F5B053 		add	r3, r7, #5632
 2908 135e 03F11303 		add	r3, r3, #19
 2909 1362 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2910 1364 9A42     		cmp	r2, r3
 2911 1366 BED3     		bcc	.L147
 536:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2912              		.loc 1 536 0 is_stmt 1
 2913 1368 07F5B053 		add	r3, r7, #5632
 2914 136c 03F10F03 		add	r3, r3, #15
 2915 1370 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2916 1372 3449     		ldr	r1, .L290
 2917 1374 1346     		mov	r3, r2
 2918 1376 DB00     		lsls	r3, r3, #3
 2919 1378 9B1A     		subs	r3, r3, r2
 2920 137a 1B01     		lsls	r3, r3, #4
 2921 137c 0B44     		add	r3, r3, r1
 2922 137e DC33     		adds	r3, r3, #220
 2923 1380 1B68     		ldr	r3, [r3]
 2924 1382 1846     		mov	r0, r3
 2925 1384 FFF7FEFF 		bl	__aeabi_i2f
 2926 1388 0346     		mov	r3, r0
 2927 138a 4FF08F41 		mov	r1, #1199570944
 2928 138e 1846     		mov	r0, r3
 2929 1390 FFF7FEFF 		bl	__aeabi_fdiv
 2930 1394 0346     		mov	r3, r0
 2931 1396 1A46     		mov	r2, r3
 2932 1398 07F13803 		add	r3, r7, #56
 2933 139c 1C3B     		subs	r3, r3, #28
 2934 139e 1A60     		str	r2, [r3]	@ float
 537:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2935              		.loc 1 537 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 79


 2936 13a0 0023     		movs	r3, #0
 2937 13a2 07F5B052 		add	r2, r7, #5632
 2938 13a6 02F11702 		add	r2, r2, #23
 2939 13aa 1370     		strb	r3, [r2]
 2940 13ac 35E0     		b	.L148
 2941              	.L149:
 538:..\src/command_processing.c ****                             }
 2942              		.loc 1 538 0 discriminator 3
 2943 13ae 07F5B053 		add	r3, r7, #5632
 2944 13b2 03F11503 		add	r3, r3, #21
 2945 13b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2946 13b8 3222     		movs	r2, #50
 2947 13ba 02FB03F3 		mul	r3, r2, r3
 2948 13be 1A1D     		adds	r2, r3, #4
 2949 13c0 07F5B053 		add	r3, r7, #5632
 2950 13c4 03F11303 		add	r3, r3, #19
 2951 13c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2952 13ca 5B00     		lsls	r3, r3, #1
 2953 13cc 1A44     		add	r2, r2, r3
 2954 13ce 07F5B053 		add	r3, r7, #5632
 2955 13d2 03F11303 		add	r3, r3, #19
 2956 13d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2957 13d8 1A44     		add	r2, r2, r3
 2958 13da 07F5B053 		add	r3, r7, #5632
 2959 13de 03F11703 		add	r3, r3, #23
 2960 13e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2961 13e4 D31A     		subs	r3, r2, r3
 2962 13e6 5A1E     		subs	r2, r3, #1
 2963 13e8 07F5B053 		add	r3, r7, #5632
 2964 13ec 03F11703 		add	r3, r3, #23
 2965 13f0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2966 13f2 07F13803 		add	r3, r7, #56
 2967 13f6 1C3B     		subs	r3, r3, #28
 2968 13f8 0B44     		add	r3, r3, r1
 2969 13fa 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2970 13fc 07F15803 		add	r3, r7, #88
 2971 1400 043B     		subs	r3, r3, #4
 2972 1402 9954     		strb	r1, [r3, r2]
 537:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2973              		.loc 1 537 0 discriminator 3
 2974 1404 07F5B053 		add	r3, r7, #5632
 2975 1408 03F11703 		add	r3, r3, #23
 2976 140c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2977 140e 0133     		adds	r3, r3, #1
 2978 1410 07F5B052 		add	r2, r7, #5632
 2979 1414 02F11702 		add	r2, r2, #23
 2980 1418 1370     		strb	r3, [r2]
 2981              	.L148:
 537:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2982              		.loc 1 537 0 is_stmt 0 discriminator 1
 2983 141a 07F5B053 		add	r3, r7, #5632
 2984 141e 03F11703 		add	r3, r3, #23
 2985 1422 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2986 1424 07F5B053 		add	r3, r7, #5632
 2987 1428 03F11303 		add	r3, r3, #19
 2988 142c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2989 142e 9A42     		cmp	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 80


 2990 1430 BDD3     		bcc	.L149
 2991              		.loc 1 541 0 is_stmt 1
 2992 1432 01F04AB8 		b	.L110
 2993              	.L115:
 542:..\src/command_processing.c **** 
 543:..\src/command_processing.c ****                     case 8:         //Measurement Offset
 544:..\src/command_processing.c ****                         for (i=0; i<NUM_ITEMS[idx]; i++){
 2994              		.loc 1 544 0
 2995 1436 0023     		movs	r3, #0
 2996 1438 07F5B052 		add	r2, r7, #5632
 2997 143c 02F11702 		add	r2, r2, #23
 2998 1440 1370     		strb	r3, [r2]
 2999 1442 9DE0     		b	.L150
 3000              	.L291:
 3001              		.align	2
 3002              	.L290:
 3003 1444 00000000 		.word	c_mem
 3004              	.L153:
 545:..\src/command_processing.c ****                             aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >>
 3005              		.loc 1 545 0
 3006 1448 07F5B053 		add	r3, r7, #5632
 3007 144c 03F10F03 		add	r3, r3, #15
 3008 1450 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3009 1452 C749     		ldr	r1, .L292
 3010 1454 1346     		mov	r3, r2
 3011 1456 DB00     		lsls	r3, r3, #3
 3012 1458 9B1A     		subs	r3, r3, r2
 3013 145a 1B01     		lsls	r3, r3, #4
 3014 145c 0B44     		add	r3, r3, r1
 3015 145e 03F58873 		add	r3, r3, #272
 3016 1462 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3017 1464 1846     		mov	r0, r3
 3018 1466 07F5B053 		add	r3, r7, #5632
 3019 146a 03F11703 		add	r3, r3, #23
 3020 146e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3021 1470 C049     		ldr	r1, .L292+4
 3022 1472 0346     		mov	r3, r0
 3023 1474 5B00     		lsls	r3, r3, #1
 3024 1476 0344     		add	r3, r3, r0
 3025 1478 9B00     		lsls	r3, r3, #2
 3026 147a 1344     		add	r3, r3, r2
 3027 147c 6633     		adds	r3, r3, #102
 3028 147e 51F82310 		ldr	r1, [r1, r3, lsl #2]
 3029 1482 07F5B053 		add	r3, r7, #5632
 3030 1486 03F10F03 		add	r3, r3, #15
 3031 148a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3032 148c B848     		ldr	r0, .L292
 3033 148e 1346     		mov	r3, r2
 3034 1490 DB00     		lsls	r3, r3, #3
 3035 1492 9B1A     		subs	r3, r3, r2
 3036 1494 1B01     		lsls	r3, r3, #4
 3037 1496 0344     		add	r3, r3, r0
 3038 1498 03F58873 		add	r3, r3, #272
 3039 149c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3040 149e 1C46     		mov	r4, r3
 3041 14a0 07F5B053 		add	r3, r7, #5632
 3042 14a4 03F11703 		add	r3, r3, #23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 81


 3043 14a8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3044 14aa B248     		ldr	r0, .L292+4
 3045 14ac 2346     		mov	r3, r4
 3046 14ae 5B00     		lsls	r3, r3, #1
 3047 14b0 2344     		add	r3, r3, r4
 3048 14b2 1B01     		lsls	r3, r3, #4
 3049 14b4 0344     		add	r3, r3, r0
 3050 14b6 1344     		add	r3, r3, r2
 3051 14b8 03F29513 		addw	r3, r3, #405
 3052 14bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3053 14be 41FA03F3 		asr	r3, r1, r3
 3054 14c2 1AB2     		sxth	r2, r3
 3055 14c4 07F13803 		add	r3, r7, #56
 3056 14c8 1E3B     		subs	r3, r3, #30
 3057 14ca 1A80     		strh	r2, [r3]	@ movhi
 546:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 3058              		.loc 1 546 0
 3059 14cc 0023     		movs	r3, #0
 3060 14ce 07F5B052 		add	r2, r7, #5632
 3061 14d2 02F11602 		add	r2, r2, #22
 3062 14d6 1370     		strb	r3, [r2]
 3063 14d8 3BE0     		b	.L151
 3064              	.L152:
 547:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((cha
 3065              		.loc 1 547 0 discriminator 3
 3066 14da 07F5B053 		add	r3, r7, #5632
 3067 14de 03F11503 		add	r3, r3, #21
 3068 14e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3069 14e4 3222     		movs	r2, #50
 3070 14e6 02FB03F3 		mul	r3, r2, r3
 3071 14ea 1A1D     		adds	r2, r3, #4
 3072 14ec 07F5B053 		add	r3, r7, #5632
 3073 14f0 03F11703 		add	r3, r3, #23
 3074 14f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3075 14f6 07F5B051 		add	r1, r7, #5632
 3076 14fa 01F11301 		add	r1, r1, #19
 3077 14fe 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 3078 1500 01FB03F3 		mul	r3, r1, r3
 3079 1504 1A44     		add	r2, r2, r3
 3080 1506 07F5B053 		add	r3, r7, #5632
 3081 150a 03F11303 		add	r3, r3, #19
 3082 150e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3083 1510 1A44     		add	r2, r2, r3
 3084 1512 07F5B053 		add	r3, r7, #5632
 3085 1516 03F11603 		add	r3, r3, #22
 3086 151a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3087 151c D31A     		subs	r3, r2, r3
 3088 151e 5A1E     		subs	r2, r3, #1
 3089 1520 07F5B053 		add	r3, r7, #5632
 3090 1524 03F11603 		add	r3, r3, #22
 3091 1528 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3092 152a 07F13803 		add	r3, r7, #56
 3093 152e 1E3B     		subs	r3, r3, #30
 3094 1530 0B44     		add	r3, r3, r1
 3095 1532 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3096 1534 07F15803 		add	r3, r7, #88
 3097 1538 043B     		subs	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 82


 3098 153a 9954     		strb	r1, [r3, r2]
 546:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 3099              		.loc 1 546 0 discriminator 3
 3100 153c 07F5B053 		add	r3, r7, #5632
 3101 1540 03F11603 		add	r3, r3, #22
 3102 1544 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3103 1546 0133     		adds	r3, r3, #1
 3104 1548 07F5B052 		add	r2, r7, #5632
 3105 154c 02F11602 		add	r2, r2, #22
 3106 1550 1370     		strb	r3, [r2]
 3107              	.L151:
 546:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 3108              		.loc 1 546 0 is_stmt 0 discriminator 1
 3109 1552 07F5B053 		add	r3, r7, #5632
 3110 1556 03F11603 		add	r3, r3, #22
 3111 155a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3112 155c 07F5B053 		add	r3, r7, #5632
 3113 1560 03F11303 		add	r3, r3, #19
 3114 1564 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3115 1566 9A42     		cmp	r2, r3
 3116 1568 B7D3     		bcc	.L152
 544:..\src/command_processing.c ****                             aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >>
 3117              		.loc 1 544 0 is_stmt 1 discriminator 2
 3118 156a 07F5B053 		add	r3, r7, #5632
 3119 156e 03F11703 		add	r3, r3, #23
 3120 1572 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3121 1574 0133     		adds	r3, r3, #1
 3122 1576 07F5B052 		add	r2, r7, #5632
 3123 157a 02F11702 		add	r2, r2, #23
 3124 157e 1370     		strb	r3, [r2]
 3125              	.L150:
 544:..\src/command_processing.c ****                             aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >>
 3126              		.loc 1 544 0 is_stmt 0 discriminator 1
 3127 1580 07F5B053 		add	r3, r7, #5632
 3128 1584 03F11503 		add	r3, r3, #21
 3129 1588 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3130 158a 07F11803 		add	r3, r7, #24
 3131 158e 143B     		subs	r3, r3, #20
 3132 1590 1B68     		ldr	r3, [r3]
 3133 1592 1344     		add	r3, r3, r2
 3134 1594 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3135 1596 07F5B052 		add	r2, r7, #5632
 3136 159a 02F11702 		add	r2, r2, #23
 3137 159e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3138 15a0 9A42     		cmp	r2, r3
 3139 15a2 FFF451AF 		bcc	.L153
 548:..\src/command_processing.c ****                             }
 549:..\src/command_processing.c ****                         }
 550:..\src/command_processing.c ****                         break;
 3140              		.loc 1 550 0 is_stmt 1
 3141 15a6 00F090BF 		b	.L110
 3142              	.L116:
 551:..\src/command_processing.c ****                 
 552:..\src/command_processing.c ****                     case 11:        //Position limits
 553:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.motor[MO
 3143              		.loc 1 553 0
 3144 15aa 07F5B053 		add	r3, r7, #5632
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 83


 3145 15ae 03F10F03 		add	r3, r3, #15
 3146 15b2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3147 15b4 6F49     		ldr	r1, .L292+4
 3148 15b6 1346     		mov	r3, r2
 3149 15b8 DB00     		lsls	r3, r3, #3
 3150 15ba 9B1A     		subs	r3, r3, r2
 3151 15bc 1B01     		lsls	r3, r3, #4
 3152 15be 0B44     		add	r3, r3, r1
 3153 15c0 E433     		adds	r3, r3, #228
 3154 15c2 1968     		ldr	r1, [r3]
 3155 15c4 07F5B053 		add	r3, r7, #5632
 3156 15c8 03F10F03 		add	r3, r3, #15
 3157 15cc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3158 15ce 6848     		ldr	r0, .L292
 3159 15d0 1346     		mov	r3, r2
 3160 15d2 DB00     		lsls	r3, r3, #3
 3161 15d4 9B1A     		subs	r3, r3, r2
 3162 15d6 1B01     		lsls	r3, r3, #4
 3163 15d8 0344     		add	r3, r3, r0
 3164 15da 03F58873 		add	r3, r3, #272
 3165 15de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3166 15e0 1846     		mov	r0, r3
 3167 15e2 644A     		ldr	r2, .L292+4
 3168 15e4 0346     		mov	r3, r0
 3169 15e6 5B00     		lsls	r3, r3, #1
 3170 15e8 0344     		add	r3, r3, r0
 3171 15ea 1B01     		lsls	r3, r3, #4
 3172 15ec 1344     		add	r3, r3, r2
 3173 15ee 03F29513 		addw	r3, r3, #405
 3174 15f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3175 15f4 41FA03F2 		asr	r2, r1, r3
 3176 15f8 07F11803 		add	r3, r7, #24
 3177 15fc 043B     		subs	r3, r3, #4
 3178 15fe 1A60     		str	r2, [r3]
 554:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3179              		.loc 1 554 0
 3180 1600 0023     		movs	r3, #0
 3181 1602 07F5B052 		add	r2, r7, #5632
 3182 1606 02F11602 		add	r2, r2, #22
 3183 160a 1370     		strb	r3, [r2]
 3184 160c 2EE0     		b	.L154
 3185              	.L155:
 555:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 3186              		.loc 1 555 0 discriminator 3
 3187 160e 07F5B053 		add	r3, r7, #5632
 3188 1612 03F11503 		add	r3, r3, #21
 3189 1616 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3190 1618 3222     		movs	r2, #50
 3191 161a 02FB03F3 		mul	r3, r2, r3
 3192 161e 1A1D     		adds	r2, r3, #4
 3193 1620 07F5B053 		add	r3, r7, #5632
 3194 1624 03F11303 		add	r3, r3, #19
 3195 1628 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3196 162a 1A44     		add	r2, r2, r3
 3197 162c 07F5B053 		add	r3, r7, #5632
 3198 1630 03F11603 		add	r3, r3, #22
 3199 1634 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 84


 3200 1636 D31A     		subs	r3, r2, r3
 3201 1638 5A1E     		subs	r2, r3, #1
 3202 163a 07F5B053 		add	r3, r7, #5632
 3203 163e 03F11603 		add	r3, r3, #22
 3204 1642 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3205 1644 07F11803 		add	r3, r7, #24
 3206 1648 043B     		subs	r3, r3, #4
 3207 164a 0B44     		add	r3, r3, r1
 3208 164c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3209 164e 07F15803 		add	r3, r7, #88
 3210 1652 043B     		subs	r3, r3, #4
 3211 1654 9954     		strb	r1, [r3, r2]
 554:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3212              		.loc 1 554 0 discriminator 3
 3213 1656 07F5B053 		add	r3, r7, #5632
 3214 165a 03F11603 		add	r3, r3, #22
 3215 165e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3216 1660 0133     		adds	r3, r3, #1
 3217 1662 07F5B052 		add	r2, r7, #5632
 3218 1666 02F11602 		add	r2, r2, #22
 3219 166a 1370     		strb	r3, [r2]
 3220              	.L154:
 554:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3221              		.loc 1 554 0 is_stmt 0 discriminator 1
 3222 166c 07F5B053 		add	r3, r7, #5632
 3223 1670 03F11603 		add	r3, r3, #22
 3224 1674 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3225 1676 07F5B053 		add	r3, r7, #5632
 3226 167a 03F11303 		add	r3, r3, #19
 3227 167e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3228 1680 9A42     		cmp	r2, r3
 3229 1682 C4D3     		bcc	.L155
 556:..\src/command_processing.c ****                         }
 557:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.motor[MO
 3230              		.loc 1 557 0 is_stmt 1
 3231 1684 07F5B053 		add	r3, r7, #5632
 3232 1688 03F10F03 		add	r3, r3, #15
 3233 168c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3234 168e 3949     		ldr	r1, .L292+4
 3235 1690 1346     		mov	r3, r2
 3236 1692 DB00     		lsls	r3, r3, #3
 3237 1694 9B1A     		subs	r3, r3, r2
 3238 1696 1B01     		lsls	r3, r3, #4
 3239 1698 0B44     		add	r3, r3, r1
 3240 169a E833     		adds	r3, r3, #232
 3241 169c 1968     		ldr	r1, [r3]
 3242 169e 07F5B053 		add	r3, r7, #5632
 3243 16a2 03F10F03 		add	r3, r3, #15
 3244 16a6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3245 16a8 3148     		ldr	r0, .L292
 3246 16aa 1346     		mov	r3, r2
 3247 16ac DB00     		lsls	r3, r3, #3
 3248 16ae 9B1A     		subs	r3, r3, r2
 3249 16b0 1B01     		lsls	r3, r3, #4
 3250 16b2 0344     		add	r3, r3, r0
 3251 16b4 03F58873 		add	r3, r3, #272
 3252 16b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 85


 3253 16ba 1846     		mov	r0, r3
 3254 16bc 2D4A     		ldr	r2, .L292+4
 3255 16be 0346     		mov	r3, r0
 3256 16c0 5B00     		lsls	r3, r3, #1
 3257 16c2 0344     		add	r3, r3, r0
 3258 16c4 1B01     		lsls	r3, r3, #4
 3259 16c6 1344     		add	r3, r3, r2
 3260 16c8 03F29513 		addw	r3, r3, #405
 3261 16cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3262 16ce 41FA03F2 		asr	r2, r1, r3
 3263 16d2 07F11803 		add	r3, r7, #24
 3264 16d6 043B     		subs	r3, r3, #4
 3265 16d8 1A60     		str	r2, [r3]
 558:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3266              		.loc 1 558 0
 3267 16da 0023     		movs	r3, #0
 3268 16dc 07F5B052 		add	r2, r7, #5632
 3269 16e0 02F11602 		add	r2, r2, #22
 3270 16e4 1370     		strb	r3, [r2]
 3271 16e6 34E0     		b	.L156
 3272              	.L157:
 559:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 3273              		.loc 1 559 0 discriminator 3
 3274 16e8 07F5B053 		add	r3, r7, #5632
 3275 16ec 03F11503 		add	r3, r3, #21
 3276 16f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3277 16f2 3222     		movs	r2, #50
 3278 16f4 02FB03F3 		mul	r3, r2, r3
 3279 16f8 1A1D     		adds	r2, r3, #4
 3280 16fa 07F5B053 		add	r3, r7, #5632
 3281 16fe 03F11303 		add	r3, r3, #19
 3282 1702 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3283 1704 1A44     		add	r2, r2, r3
 3284 1706 07F5B053 		add	r3, r7, #5632
 3285 170a 03F11303 		add	r3, r3, #19
 3286 170e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3287 1710 1A44     		add	r2, r2, r3
 3288 1712 07F5B053 		add	r3, r7, #5632
 3289 1716 03F11603 		add	r3, r3, #22
 3290 171a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3291 171c D31A     		subs	r3, r2, r3
 3292 171e 5A1E     		subs	r2, r3, #1
 3293 1720 07F5B053 		add	r3, r7, #5632
 3294 1724 03F11603 		add	r3, r3, #22
 3295 1728 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3296 172a 07F11803 		add	r3, r7, #24
 3297 172e 043B     		subs	r3, r3, #4
 3298 1730 0B44     		add	r3, r3, r1
 3299 1732 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3300 1734 07F15803 		add	r3, r7, #88
 3301 1738 043B     		subs	r3, r3, #4
 3302 173a 9954     		strb	r1, [r3, r2]
 558:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3303              		.loc 1 558 0 discriminator 3
 3304 173c 07F5B053 		add	r3, r7, #5632
 3305 1740 03F11603 		add	r3, r3, #22
 3306 1744 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 86


 3307 1746 0133     		adds	r3, r3, #1
 3308 1748 07F5B052 		add	r2, r7, #5632
 3309 174c 02F11602 		add	r2, r2, #22
 3310 1750 1370     		strb	r3, [r2]
 3311              	.L156:
 558:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3312              		.loc 1 558 0 is_stmt 0 discriminator 1
 3313 1752 07F5B053 		add	r3, r7, #5632
 3314 1756 03F11603 		add	r3, r3, #22
 3315 175a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3316 175c 07F5B053 		add	r3, r7, #5632
 3317 1760 03F11303 		add	r3, r3, #19
 3318 1764 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3319 1766 9A42     		cmp	r2, r3
 3320 1768 BED3     		bcc	.L157
 560:..\src/command_processing.c ****                         }
 561:..\src/command_processing.c ****                         break;            
 3321              		.loc 1 561 0 is_stmt 1
 3322 176a 00F0AEBE 		b	.L110
 3323              	.L293:
 3324 176e 00BF     		.align	2
 3325              	.L292:
 3326 1770 00000000 		.word	g_mem
 3327 1774 00000000 		.word	c_mem
 3328              	.L117:
 562:..\src/command_processing.c **** 
 563:..\src/command_processing.c ****                     case 23:        //Rest Position
 564:..\src/command_processing.c ****                         aux_int32 = (c_mem.SH.rest_pos >> c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_
 3329              		.loc 1 564 0
 3330 1778 CF4B     		ldr	r3, .L294
 3331 177a D3F8A012 		ldr	r1, [r3, #672]
 3332 177e 07F5B053 		add	r3, r7, #5632
 3333 1782 03F10F03 		add	r3, r3, #15
 3334 1786 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3335 1788 CC48     		ldr	r0, .L294+4
 3336 178a 1346     		mov	r3, r2
 3337 178c DB00     		lsls	r3, r3, #3
 3338 178e 9B1A     		subs	r3, r3, r2
 3339 1790 1B01     		lsls	r3, r3, #4
 3340 1792 0344     		add	r3, r3, r0
 3341 1794 03F58873 		add	r3, r3, #272
 3342 1798 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3343 179a 1846     		mov	r0, r3
 3344 179c C64A     		ldr	r2, .L294
 3345 179e 0346     		mov	r3, r0
 3346 17a0 5B00     		lsls	r3, r3, #1
 3347 17a2 0344     		add	r3, r3, r0
 3348 17a4 1B01     		lsls	r3, r3, #4
 3349 17a6 1344     		add	r3, r3, r2
 3350 17a8 03F29513 		addw	r3, r3, #405
 3351 17ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3352 17ae 41FA03F2 		asr	r2, r1, r3
 3353 17b2 07F11803 		add	r3, r7, #24
 3354 17b6 043B     		subs	r3, r3, #4
 3355 17b8 1A60     		str	r2, [r3]
 565:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3356              		.loc 1 565 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 87


 3357 17ba 0023     		movs	r3, #0
 3358 17bc 07F5B052 		add	r2, r7, #5632
 3359 17c0 02F11602 		add	r2, r2, #22
 3360 17c4 1370     		strb	r3, [r2]
 3361 17c6 2EE0     		b	.L158
 3362              	.L159:
 566:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 3363              		.loc 1 566 0 discriminator 3
 3364 17c8 07F5B053 		add	r3, r7, #5632
 3365 17cc 03F11503 		add	r3, r3, #21
 3366 17d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3367 17d2 3222     		movs	r2, #50
 3368 17d4 02FB03F3 		mul	r3, r2, r3
 3369 17d8 1A1D     		adds	r2, r3, #4
 3370 17da 07F5B053 		add	r3, r7, #5632
 3371 17de 03F11303 		add	r3, r3, #19
 3372 17e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3373 17e4 1A44     		add	r2, r2, r3
 3374 17e6 07F5B053 		add	r3, r7, #5632
 3375 17ea 03F11603 		add	r3, r3, #22
 3376 17ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3377 17f0 D31A     		subs	r3, r2, r3
 3378 17f2 5A1E     		subs	r2, r3, #1
 3379 17f4 07F5B053 		add	r3, r7, #5632
 3380 17f8 03F11603 		add	r3, r3, #22
 3381 17fc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3382 17fe 07F11803 		add	r3, r7, #24
 3383 1802 043B     		subs	r3, r3, #4
 3384 1804 0B44     		add	r3, r3, r1
 3385 1806 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3386 1808 07F15803 		add	r3, r7, #88
 3387 180c 043B     		subs	r3, r3, #4
 3388 180e 9954     		strb	r1, [r3, r2]
 565:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3389              		.loc 1 565 0 discriminator 3
 3390 1810 07F5B053 		add	r3, r7, #5632
 3391 1814 03F11603 		add	r3, r3, #22
 3392 1818 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3393 181a 0133     		adds	r3, r3, #1
 3394 181c 07F5B052 		add	r2, r7, #5632
 3395 1820 02F11602 		add	r2, r2, #22
 3396 1824 1370     		strb	r3, [r2]
 3397              	.L158:
 565:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3398              		.loc 1 565 0 is_stmt 0 discriminator 1
 3399 1826 07F5B053 		add	r3, r7, #5632
 3400 182a 03F11603 		add	r3, r3, #22
 3401 182e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3402 1830 07F5B053 		add	r3, r7, #5632
 3403 1834 03F11303 		add	r3, r3, #19
 3404 1838 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3405 183a 9A42     		cmp	r2, r3
 3406 183c C4D3     		bcc	.L159
 567:..\src/command_processing.c ****                         }
 568:..\src/command_processing.c ****                         break; 
 3407              		.loc 1 568 0 is_stmt 1
 3408 183e 00F044BE 		b	.L110
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 88


 3409              	.L118:
 569:..\src/command_processing.c ****                         
 570:..\src/command_processing.c ****                     case 44:         // Second Motor Position PID
 571:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 3410              		.loc 1 571 0
 3411 1842 07F5B053 		add	r3, r7, #5632
 3412 1846 03F10E03 		add	r3, r3, #14
 3413 184a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3414 184c 9A49     		ldr	r1, .L294
 3415 184e 1346     		mov	r3, r2
 3416 1850 DB00     		lsls	r3, r3, #3
 3417 1852 9B1A     		subs	r3, r3, r2
 3418 1854 1B01     		lsls	r3, r3, #4
 3419 1856 0B44     		add	r3, r3, r1
 3420 1858 03F20F13 		addw	r3, r3, #271
 3421 185c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3422 185e 032B     		cmp	r3, #3
 3423 1860 00F02E81 		beq	.L160
 572:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p / 65536;
 3424              		.loc 1 572 0
 3425 1864 07F5B053 		add	r3, r7, #5632
 3426 1868 03F10E03 		add	r3, r3, #14
 3427 186c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3428 186e 9249     		ldr	r1, .L294
 3429 1870 1346     		mov	r3, r2
 3430 1872 DB00     		lsls	r3, r3, #3
 3431 1874 9B1A     		subs	r3, r3, r2
 3432 1876 1B01     		lsls	r3, r3, #4
 3433 1878 0B44     		add	r3, r3, r1
 3434 187a B033     		adds	r3, r3, #176
 3435 187c 1B68     		ldr	r3, [r3]
 3436 187e 1846     		mov	r0, r3
 3437 1880 FFF7FEFF 		bl	__aeabi_i2f
 3438 1884 0346     		mov	r3, r0
 3439 1886 4FF08F41 		mov	r1, #1199570944
 3440 188a 1846     		mov	r0, r3
 3441 188c FFF7FEFF 		bl	__aeabi_fdiv
 3442 1890 0346     		mov	r3, r0
 3443 1892 1A46     		mov	r2, r3
 3444 1894 07F13803 		add	r3, r7, #56
 3445 1898 1C3B     		subs	r3, r3, #28
 3446 189a 1A60     		str	r2, [r3]	@ float
 573:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3447              		.loc 1 573 0
 3448 189c 0023     		movs	r3, #0
 3449 189e 07F5B052 		add	r2, r7, #5632
 3450 18a2 02F11702 		add	r2, r2, #23
 3451 18a6 1370     		strb	r3, [r2]
 3452 18a8 2EE0     		b	.L161
 3453              	.L162:
 574:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3454              		.loc 1 574 0 discriminator 3
 3455 18aa 07F5B053 		add	r3, r7, #5632
 3456 18ae 03F11503 		add	r3, r3, #21
 3457 18b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3458 18b4 3222     		movs	r2, #50
 3459 18b6 02FB03F3 		mul	r3, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 89


 3460 18ba 1A1D     		adds	r2, r3, #4
 3461 18bc 07F5B053 		add	r3, r7, #5632
 3462 18c0 03F11303 		add	r3, r3, #19
 3463 18c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3464 18c6 1A44     		add	r2, r2, r3
 3465 18c8 07F5B053 		add	r3, r7, #5632
 3466 18cc 03F11703 		add	r3, r3, #23
 3467 18d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3468 18d2 D31A     		subs	r3, r2, r3
 3469 18d4 5A1E     		subs	r2, r3, #1
 3470 18d6 07F5B053 		add	r3, r7, #5632
 3471 18da 03F11703 		add	r3, r3, #23
 3472 18de 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3473 18e0 07F13803 		add	r3, r7, #56
 3474 18e4 1C3B     		subs	r3, r3, #28
 3475 18e6 0B44     		add	r3, r3, r1
 3476 18e8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3477 18ea 07F15803 		add	r3, r7, #88
 3478 18ee 043B     		subs	r3, r3, #4
 3479 18f0 9954     		strb	r1, [r3, r2]
 573:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3480              		.loc 1 573 0 discriminator 3
 3481 18f2 07F5B053 		add	r3, r7, #5632
 3482 18f6 03F11703 		add	r3, r3, #23
 3483 18fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3484 18fc 0133     		adds	r3, r3, #1
 3485 18fe 07F5B052 		add	r2, r7, #5632
 3486 1902 02F11702 		add	r2, r2, #23
 3487 1906 1370     		strb	r3, [r2]
 3488              	.L161:
 573:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3489              		.loc 1 573 0 is_stmt 0 discriminator 1
 3490 1908 07F5B053 		add	r3, r7, #5632
 3491 190c 03F11703 		add	r3, r3, #23
 3492 1910 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3493 1912 07F5B053 		add	r3, r7, #5632
 3494 1916 03F11303 		add	r3, r3, #19
 3495 191a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3496 191c 9A42     		cmp	r2, r3
 3497 191e C4D3     		bcc	.L162
 575:..\src/command_processing.c ****                             }
 576:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i / 65536;
 3498              		.loc 1 576 0 is_stmt 1
 3499 1920 07F5B053 		add	r3, r7, #5632
 3500 1924 03F10E03 		add	r3, r3, #14
 3501 1928 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3502 192a 6349     		ldr	r1, .L294
 3503 192c 1346     		mov	r3, r2
 3504 192e DB00     		lsls	r3, r3, #3
 3505 1930 9B1A     		subs	r3, r3, r2
 3506 1932 1B01     		lsls	r3, r3, #4
 3507 1934 0B44     		add	r3, r3, r1
 3508 1936 B433     		adds	r3, r3, #180
 3509 1938 1B68     		ldr	r3, [r3]
 3510 193a 1846     		mov	r0, r3
 3511 193c FFF7FEFF 		bl	__aeabi_i2f
 3512 1940 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 90


 3513 1942 4FF08F41 		mov	r1, #1199570944
 3514 1946 1846     		mov	r0, r3
 3515 1948 FFF7FEFF 		bl	__aeabi_fdiv
 3516 194c 0346     		mov	r3, r0
 3517 194e 1A46     		mov	r2, r3
 3518 1950 07F13803 		add	r3, r7, #56
 3519 1954 1C3B     		subs	r3, r3, #28
 3520 1956 1A60     		str	r2, [r3]	@ float
 577:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3521              		.loc 1 577 0
 3522 1958 0023     		movs	r3, #0
 3523 195a 07F5B052 		add	r2, r7, #5632
 3524 195e 02F11702 		add	r2, r2, #23
 3525 1962 1370     		strb	r3, [r2]
 3526 1964 34E0     		b	.L163
 3527              	.L164:
 578:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3528              		.loc 1 578 0 discriminator 3
 3529 1966 07F5B053 		add	r3, r7, #5632
 3530 196a 03F11503 		add	r3, r3, #21
 3531 196e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3532 1970 3222     		movs	r2, #50
 3533 1972 02FB03F3 		mul	r3, r2, r3
 3534 1976 1A1D     		adds	r2, r3, #4
 3535 1978 07F5B053 		add	r3, r7, #5632
 3536 197c 03F11303 		add	r3, r3, #19
 3537 1980 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3538 1982 1A44     		add	r2, r2, r3
 3539 1984 07F5B053 		add	r3, r7, #5632
 3540 1988 03F11303 		add	r3, r3, #19
 3541 198c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3542 198e 1A44     		add	r2, r2, r3
 3543 1990 07F5B053 		add	r3, r7, #5632
 3544 1994 03F11703 		add	r3, r3, #23
 3545 1998 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3546 199a D31A     		subs	r3, r2, r3
 3547 199c 5A1E     		subs	r2, r3, #1
 3548 199e 07F5B053 		add	r3, r7, #5632
 3549 19a2 03F11703 		add	r3, r3, #23
 3550 19a6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3551 19a8 07F13803 		add	r3, r7, #56
 3552 19ac 1C3B     		subs	r3, r3, #28
 3553 19ae 0B44     		add	r3, r3, r1
 3554 19b0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3555 19b2 07F15803 		add	r3, r7, #88
 3556 19b6 043B     		subs	r3, r3, #4
 3557 19b8 9954     		strb	r1, [r3, r2]
 577:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3558              		.loc 1 577 0 discriminator 3
 3559 19ba 07F5B053 		add	r3, r7, #5632
 3560 19be 03F11703 		add	r3, r3, #23
 3561 19c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3562 19c4 0133     		adds	r3, r3, #1
 3563 19c6 07F5B052 		add	r2, r7, #5632
 3564 19ca 02F11702 		add	r2, r2, #23
 3565 19ce 1370     		strb	r3, [r2]
 3566              	.L163:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 91


 577:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3567              		.loc 1 577 0 is_stmt 0 discriminator 1
 3568 19d0 07F5B053 		add	r3, r7, #5632
 3569 19d4 03F11703 		add	r3, r3, #23
 3570 19d8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3571 19da 07F5B053 		add	r3, r7, #5632
 3572 19de 03F11303 		add	r3, r3, #19
 3573 19e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3574 19e4 9A42     		cmp	r2, r3
 3575 19e6 BED3     		bcc	.L164
 579:..\src/command_processing.c ****                             }
 580:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d / 65536;
 3576              		.loc 1 580 0 is_stmt 1
 3577 19e8 07F5B053 		add	r3, r7, #5632
 3578 19ec 03F10E03 		add	r3, r3, #14
 3579 19f0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3580 19f2 3149     		ldr	r1, .L294
 3581 19f4 1346     		mov	r3, r2
 3582 19f6 DB00     		lsls	r3, r3, #3
 3583 19f8 9B1A     		subs	r3, r3, r2
 3584 19fa 1B01     		lsls	r3, r3, #4
 3585 19fc 0B44     		add	r3, r3, r1
 3586 19fe B833     		adds	r3, r3, #184
 3587 1a00 1B68     		ldr	r3, [r3]
 3588 1a02 1846     		mov	r0, r3
 3589 1a04 FFF7FEFF 		bl	__aeabi_i2f
 3590 1a08 0346     		mov	r3, r0
 3591 1a0a 4FF08F41 		mov	r1, #1199570944
 3592 1a0e 1846     		mov	r0, r3
 3593 1a10 FFF7FEFF 		bl	__aeabi_fdiv
 3594 1a14 0346     		mov	r3, r0
 3595 1a16 1A46     		mov	r2, r3
 3596 1a18 07F13803 		add	r3, r7, #56
 3597 1a1c 1C3B     		subs	r3, r3, #28
 3598 1a1e 1A60     		str	r2, [r3]	@ float
 581:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3599              		.loc 1 581 0
 3600 1a20 0023     		movs	r3, #0
 3601 1a22 07F5B052 		add	r2, r7, #5632
 3602 1a26 02F11702 		add	r2, r2, #23
 3603 1a2a 1370     		strb	r3, [r2]
 3604 1a2c 35E0     		b	.L165
 3605              	.L166:
 582:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3606              		.loc 1 582 0 discriminator 3
 3607 1a2e 07F5B053 		add	r3, r7, #5632
 3608 1a32 03F11503 		add	r3, r3, #21
 3609 1a36 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3610 1a38 3222     		movs	r2, #50
 3611 1a3a 02FB03F3 		mul	r3, r2, r3
 3612 1a3e 1A1D     		adds	r2, r3, #4
 3613 1a40 07F5B053 		add	r3, r7, #5632
 3614 1a44 03F11303 		add	r3, r3, #19
 3615 1a48 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3616 1a4a 5B00     		lsls	r3, r3, #1
 3617 1a4c 1A44     		add	r2, r2, r3
 3618 1a4e 07F5B053 		add	r3, r7, #5632
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 92


 3619 1a52 03F11303 		add	r3, r3, #19
 3620 1a56 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3621 1a58 1A44     		add	r2, r2, r3
 3622 1a5a 07F5B053 		add	r3, r7, #5632
 3623 1a5e 03F11703 		add	r3, r3, #23
 3624 1a62 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3625 1a64 D31A     		subs	r3, r2, r3
 3626 1a66 5A1E     		subs	r2, r3, #1
 3627 1a68 07F5B053 		add	r3, r7, #5632
 3628 1a6c 03F11703 		add	r3, r3, #23
 3629 1a70 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3630 1a72 07F13803 		add	r3, r7, #56
 3631 1a76 1C3B     		subs	r3, r3, #28
 3632 1a78 0B44     		add	r3, r3, r1
 3633 1a7a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3634 1a7c 07F15803 		add	r3, r7, #88
 3635 1a80 043B     		subs	r3, r3, #4
 3636 1a82 9954     		strb	r1, [r3, r2]
 581:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3637              		.loc 1 581 0 discriminator 3
 3638 1a84 07F5B053 		add	r3, r7, #5632
 3639 1a88 03F11703 		add	r3, r3, #23
 3640 1a8c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3641 1a8e 0133     		adds	r3, r3, #1
 3642 1a90 07F5B052 		add	r2, r7, #5632
 3643 1a94 02F11702 		add	r2, r2, #23
 3644 1a98 1370     		strb	r3, [r2]
 3645              	.L165:
 581:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3646              		.loc 1 581 0 is_stmt 0 discriminator 1
 3647 1a9a 07F5B053 		add	r3, r7, #5632
 3648 1a9e 03F11703 		add	r3, r3, #23
 3649 1aa2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3650 1aa4 07F5B053 		add	r3, r7, #5632
 3651 1aa8 03F11303 		add	r3, r3, #19
 3652 1aac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3653 1aae 9A42     		cmp	r2, r3
 3654 1ab0 BDD3     		bcc	.L166
 583:..\src/command_processing.c ****                             } 
 584:..\src/command_processing.c ****                         }
 585:..\src/command_processing.c ****                         else {
 586:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_dl / 65536;
 587:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 588:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 589:..\src/command_processing.c ****                             }
 590:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_dl / 65536;
 591:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 592:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 593:..\src/command_processing.c ****                             }
 594:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_dl / 65536;
 595:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 596:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 597:..\src/command_processing.c ****                             }
 598:..\src/command_processing.c ****                         }
 599:..\src/command_processing.c ****                         break;
 3655              		.loc 1 599 0 is_stmt 1
 3656 1ab2 00F00ABD 		b	.L110
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 93


 3657              	.L295:
 3658 1ab6 00BF     		.align	2
 3659              	.L294:
 3660 1ab8 00000000 		.word	c_mem
 3661 1abc 00000000 		.word	g_mem
 3662              	.L160:
 586:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3663              		.loc 1 586 0
 3664 1ac0 07F5B053 		add	r3, r7, #5632
 3665 1ac4 03F10E03 		add	r3, r3, #14
 3666 1ac8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3667 1aca AB49     		ldr	r1, .L296
 3668 1acc 1346     		mov	r3, r2
 3669 1ace DB00     		lsls	r3, r3, #3
 3670 1ad0 9B1A     		subs	r3, r3, r2
 3671 1ad2 1B01     		lsls	r3, r3, #4
 3672 1ad4 0B44     		add	r3, r3, r1
 3673 1ad6 C833     		adds	r3, r3, #200
 3674 1ad8 1B68     		ldr	r3, [r3]
 3675 1ada 1846     		mov	r0, r3
 3676 1adc FFF7FEFF 		bl	__aeabi_i2f
 3677 1ae0 0346     		mov	r3, r0
 3678 1ae2 4FF08F41 		mov	r1, #1199570944
 3679 1ae6 1846     		mov	r0, r3
 3680 1ae8 FFF7FEFF 		bl	__aeabi_fdiv
 3681 1aec 0346     		mov	r3, r0
 3682 1aee 1A46     		mov	r2, r3
 3683 1af0 07F13803 		add	r3, r7, #56
 3684 1af4 1C3B     		subs	r3, r3, #28
 3685 1af6 1A60     		str	r2, [r3]	@ float
 587:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3686              		.loc 1 587 0
 3687 1af8 0023     		movs	r3, #0
 3688 1afa 07F5B052 		add	r2, r7, #5632
 3689 1afe 02F11702 		add	r2, r2, #23
 3690 1b02 1370     		strb	r3, [r2]
 3691 1b04 2EE0     		b	.L168
 3692              	.L169:
 588:..\src/command_processing.c ****                             }
 3693              		.loc 1 588 0 discriminator 3
 3694 1b06 07F5B053 		add	r3, r7, #5632
 3695 1b0a 03F11503 		add	r3, r3, #21
 3696 1b0e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3697 1b10 3222     		movs	r2, #50
 3698 1b12 02FB03F3 		mul	r3, r2, r3
 3699 1b16 1A1D     		adds	r2, r3, #4
 3700 1b18 07F5B053 		add	r3, r7, #5632
 3701 1b1c 03F11303 		add	r3, r3, #19
 3702 1b20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3703 1b22 1A44     		add	r2, r2, r3
 3704 1b24 07F5B053 		add	r3, r7, #5632
 3705 1b28 03F11703 		add	r3, r3, #23
 3706 1b2c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3707 1b2e D31A     		subs	r3, r2, r3
 3708 1b30 5A1E     		subs	r2, r3, #1
 3709 1b32 07F5B053 		add	r3, r7, #5632
 3710 1b36 03F11703 		add	r3, r3, #23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 94


 3711 1b3a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3712 1b3c 07F13803 		add	r3, r7, #56
 3713 1b40 1C3B     		subs	r3, r3, #28
 3714 1b42 0B44     		add	r3, r3, r1
 3715 1b44 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3716 1b46 07F15803 		add	r3, r7, #88
 3717 1b4a 043B     		subs	r3, r3, #4
 3718 1b4c 9954     		strb	r1, [r3, r2]
 587:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3719              		.loc 1 587 0 discriminator 3
 3720 1b4e 07F5B053 		add	r3, r7, #5632
 3721 1b52 03F11703 		add	r3, r3, #23
 3722 1b56 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3723 1b58 0133     		adds	r3, r3, #1
 3724 1b5a 07F5B052 		add	r2, r7, #5632
 3725 1b5e 02F11702 		add	r2, r2, #23
 3726 1b62 1370     		strb	r3, [r2]
 3727              	.L168:
 587:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3728              		.loc 1 587 0 is_stmt 0 discriminator 1
 3729 1b64 07F5B053 		add	r3, r7, #5632
 3730 1b68 03F11703 		add	r3, r3, #23
 3731 1b6c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3732 1b6e 07F5B053 		add	r3, r7, #5632
 3733 1b72 03F11303 		add	r3, r3, #19
 3734 1b76 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3735 1b78 9A42     		cmp	r2, r3
 3736 1b7a C4D3     		bcc	.L169
 590:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3737              		.loc 1 590 0 is_stmt 1
 3738 1b7c 07F5B053 		add	r3, r7, #5632
 3739 1b80 03F10E03 		add	r3, r3, #14
 3740 1b84 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3741 1b86 7C49     		ldr	r1, .L296
 3742 1b88 1346     		mov	r3, r2
 3743 1b8a DB00     		lsls	r3, r3, #3
 3744 1b8c 9B1A     		subs	r3, r3, r2
 3745 1b8e 1B01     		lsls	r3, r3, #4
 3746 1b90 0B44     		add	r3, r3, r1
 3747 1b92 CC33     		adds	r3, r3, #204
 3748 1b94 1B68     		ldr	r3, [r3]
 3749 1b96 1846     		mov	r0, r3
 3750 1b98 FFF7FEFF 		bl	__aeabi_i2f
 3751 1b9c 0346     		mov	r3, r0
 3752 1b9e 4FF08F41 		mov	r1, #1199570944
 3753 1ba2 1846     		mov	r0, r3
 3754 1ba4 FFF7FEFF 		bl	__aeabi_fdiv
 3755 1ba8 0346     		mov	r3, r0
 3756 1baa 1A46     		mov	r2, r3
 3757 1bac 07F13803 		add	r3, r7, #56
 3758 1bb0 1C3B     		subs	r3, r3, #28
 3759 1bb2 1A60     		str	r2, [r3]	@ float
 591:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3760              		.loc 1 591 0
 3761 1bb4 0023     		movs	r3, #0
 3762 1bb6 07F5B052 		add	r2, r7, #5632
 3763 1bba 02F11702 		add	r2, r2, #23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 95


 3764 1bbe 1370     		strb	r3, [r2]
 3765 1bc0 34E0     		b	.L170
 3766              	.L171:
 592:..\src/command_processing.c ****                             }
 3767              		.loc 1 592 0 discriminator 3
 3768 1bc2 07F5B053 		add	r3, r7, #5632
 3769 1bc6 03F11503 		add	r3, r3, #21
 3770 1bca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3771 1bcc 3222     		movs	r2, #50
 3772 1bce 02FB03F3 		mul	r3, r2, r3
 3773 1bd2 1A1D     		adds	r2, r3, #4
 3774 1bd4 07F5B053 		add	r3, r7, #5632
 3775 1bd8 03F11303 		add	r3, r3, #19
 3776 1bdc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3777 1bde 1A44     		add	r2, r2, r3
 3778 1be0 07F5B053 		add	r3, r7, #5632
 3779 1be4 03F11303 		add	r3, r3, #19
 3780 1be8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3781 1bea 1A44     		add	r2, r2, r3
 3782 1bec 07F5B053 		add	r3, r7, #5632
 3783 1bf0 03F11703 		add	r3, r3, #23
 3784 1bf4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3785 1bf6 D31A     		subs	r3, r2, r3
 3786 1bf8 5A1E     		subs	r2, r3, #1
 3787 1bfa 07F5B053 		add	r3, r7, #5632
 3788 1bfe 03F11703 		add	r3, r3, #23
 3789 1c02 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3790 1c04 07F13803 		add	r3, r7, #56
 3791 1c08 1C3B     		subs	r3, r3, #28
 3792 1c0a 0B44     		add	r3, r3, r1
 3793 1c0c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3794 1c0e 07F15803 		add	r3, r7, #88
 3795 1c12 043B     		subs	r3, r3, #4
 3796 1c14 9954     		strb	r1, [r3, r2]
 591:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3797              		.loc 1 591 0 discriminator 3
 3798 1c16 07F5B053 		add	r3, r7, #5632
 3799 1c1a 03F11703 		add	r3, r3, #23
 3800 1c1e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3801 1c20 0133     		adds	r3, r3, #1
 3802 1c22 07F5B052 		add	r2, r7, #5632
 3803 1c26 02F11702 		add	r2, r2, #23
 3804 1c2a 1370     		strb	r3, [r2]
 3805              	.L170:
 591:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3806              		.loc 1 591 0 is_stmt 0 discriminator 1
 3807 1c2c 07F5B053 		add	r3, r7, #5632
 3808 1c30 03F11703 		add	r3, r3, #23
 3809 1c34 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3810 1c36 07F5B053 		add	r3, r7, #5632
 3811 1c3a 03F11303 		add	r3, r3, #19
 3812 1c3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3813 1c40 9A42     		cmp	r2, r3
 3814 1c42 BED3     		bcc	.L171
 594:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3815              		.loc 1 594 0 is_stmt 1
 3816 1c44 07F5B053 		add	r3, r7, #5632
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 96


 3817 1c48 03F10E03 		add	r3, r3, #14
 3818 1c4c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3819 1c4e 4A49     		ldr	r1, .L296
 3820 1c50 1346     		mov	r3, r2
 3821 1c52 DB00     		lsls	r3, r3, #3
 3822 1c54 9B1A     		subs	r3, r3, r2
 3823 1c56 1B01     		lsls	r3, r3, #4
 3824 1c58 0B44     		add	r3, r3, r1
 3825 1c5a D033     		adds	r3, r3, #208
 3826 1c5c 1B68     		ldr	r3, [r3]
 3827 1c5e 1846     		mov	r0, r3
 3828 1c60 FFF7FEFF 		bl	__aeabi_i2f
 3829 1c64 0346     		mov	r3, r0
 3830 1c66 4FF08F41 		mov	r1, #1199570944
 3831 1c6a 1846     		mov	r0, r3
 3832 1c6c FFF7FEFF 		bl	__aeabi_fdiv
 3833 1c70 0346     		mov	r3, r0
 3834 1c72 1A46     		mov	r2, r3
 3835 1c74 07F13803 		add	r3, r7, #56
 3836 1c78 1C3B     		subs	r3, r3, #28
 3837 1c7a 1A60     		str	r2, [r3]	@ float
 595:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3838              		.loc 1 595 0
 3839 1c7c 0023     		movs	r3, #0
 3840 1c7e 07F5B052 		add	r2, r7, #5632
 3841 1c82 02F11702 		add	r2, r2, #23
 3842 1c86 1370     		strb	r3, [r2]
 3843 1c88 35E0     		b	.L172
 3844              	.L173:
 596:..\src/command_processing.c ****                             }
 3845              		.loc 1 596 0 discriminator 3
 3846 1c8a 07F5B053 		add	r3, r7, #5632
 3847 1c8e 03F11503 		add	r3, r3, #21
 3848 1c92 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3849 1c94 3222     		movs	r2, #50
 3850 1c96 02FB03F3 		mul	r3, r2, r3
 3851 1c9a 1A1D     		adds	r2, r3, #4
 3852 1c9c 07F5B053 		add	r3, r7, #5632
 3853 1ca0 03F11303 		add	r3, r3, #19
 3854 1ca4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3855 1ca6 5B00     		lsls	r3, r3, #1
 3856 1ca8 1A44     		add	r2, r2, r3
 3857 1caa 07F5B053 		add	r3, r7, #5632
 3858 1cae 03F11303 		add	r3, r3, #19
 3859 1cb2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3860 1cb4 1A44     		add	r2, r2, r3
 3861 1cb6 07F5B053 		add	r3, r7, #5632
 3862 1cba 03F11703 		add	r3, r3, #23
 3863 1cbe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3864 1cc0 D31A     		subs	r3, r2, r3
 3865 1cc2 5A1E     		subs	r2, r3, #1
 3866 1cc4 07F5B053 		add	r3, r7, #5632
 3867 1cc8 03F11703 		add	r3, r3, #23
 3868 1ccc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3869 1cce 07F13803 		add	r3, r7, #56
 3870 1cd2 1C3B     		subs	r3, r3, #28
 3871 1cd4 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 97


 3872 1cd6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3873 1cd8 07F15803 		add	r3, r7, #88
 3874 1cdc 043B     		subs	r3, r3, #4
 3875 1cde 9954     		strb	r1, [r3, r2]
 595:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3876              		.loc 1 595 0 discriminator 3
 3877 1ce0 07F5B053 		add	r3, r7, #5632
 3878 1ce4 03F11703 		add	r3, r3, #23
 3879 1ce8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3880 1cea 0133     		adds	r3, r3, #1
 3881 1cec 07F5B052 		add	r2, r7, #5632
 3882 1cf0 02F11702 		add	r2, r2, #23
 3883 1cf4 1370     		strb	r3, [r2]
 3884              	.L172:
 595:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3885              		.loc 1 595 0 is_stmt 0 discriminator 1
 3886 1cf6 07F5B053 		add	r3, r7, #5632
 3887 1cfa 03F11703 		add	r3, r3, #23
 3888 1cfe 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3889 1d00 07F5B053 		add	r3, r7, #5632
 3890 1d04 03F11303 		add	r3, r3, #19
 3891 1d08 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3892 1d0a 9A42     		cmp	r2, r3
 3893 1d0c BDD3     		bcc	.L173
 3894              		.loc 1 599 0 is_stmt 1
 3895 1d0e DCE3     		b	.L110
 3896              	.L119:
 600:..\src/command_processing.c ****                         
 601:..\src/command_processing.c ****                     case 45:         // Second Motor Current PID
 602:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 3897              		.loc 1 602 0
 3898 1d10 07F5B053 		add	r3, r7, #5632
 3899 1d14 03F10E03 		add	r3, r3, #14
 3900 1d18 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3901 1d1a 1749     		ldr	r1, .L296
 3902 1d1c 1346     		mov	r3, r2
 3903 1d1e DB00     		lsls	r3, r3, #3
 3904 1d20 9B1A     		subs	r3, r3, r2
 3905 1d22 1B01     		lsls	r3, r3, #4
 3906 1d24 0B44     		add	r3, r3, r1
 3907 1d26 03F20F13 		addw	r3, r3, #271
 3908 1d2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3909 1d2c 032B     		cmp	r3, #3
 3910 1d2e 00F02A81 		beq	.L174
 603:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c / 65536;
 3911              		.loc 1 603 0
 3912 1d32 07F5B053 		add	r3, r7, #5632
 3913 1d36 03F10E03 		add	r3, r3, #14
 3914 1d3a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3915 1d3c 0E49     		ldr	r1, .L296
 3916 1d3e 1346     		mov	r3, r2
 3917 1d40 DB00     		lsls	r3, r3, #3
 3918 1d42 9B1A     		subs	r3, r3, r2
 3919 1d44 1B01     		lsls	r3, r3, #4
 3920 1d46 0B44     		add	r3, r3, r1
 3921 1d48 BC33     		adds	r3, r3, #188
 3922 1d4a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 98


 3923 1d4c 1846     		mov	r0, r3
 3924 1d4e FFF7FEFF 		bl	__aeabi_i2f
 3925 1d52 0346     		mov	r3, r0
 3926 1d54 4FF08F41 		mov	r1, #1199570944
 3927 1d58 1846     		mov	r0, r3
 3928 1d5a FFF7FEFF 		bl	__aeabi_fdiv
 3929 1d5e 0346     		mov	r3, r0
 3930 1d60 1A46     		mov	r2, r3
 3931 1d62 07F13803 		add	r3, r7, #56
 3932 1d66 1C3B     		subs	r3, r3, #28
 3933 1d68 1A60     		str	r2, [r3]	@ float
 604:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3934              		.loc 1 604 0
 3935 1d6a 0023     		movs	r3, #0
 3936 1d6c 07F5B052 		add	r2, r7, #5632
 3937 1d70 02F11702 		add	r2, r2, #23
 3938 1d74 1370     		strb	r3, [r2]
 3939 1d76 30E0     		b	.L175
 3940              	.L297:
 3941              		.align	2
 3942              	.L296:
 3943 1d78 00000000 		.word	c_mem
 3944              	.L176:
 605:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3945              		.loc 1 605 0 discriminator 3
 3946 1d7c 07F5B053 		add	r3, r7, #5632
 3947 1d80 03F11503 		add	r3, r3, #21
 3948 1d84 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3949 1d86 3222     		movs	r2, #50
 3950 1d88 02FB03F3 		mul	r3, r2, r3
 3951 1d8c 1A1D     		adds	r2, r3, #4
 3952 1d8e 07F5B053 		add	r3, r7, #5632
 3953 1d92 03F11303 		add	r3, r3, #19
 3954 1d96 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3955 1d98 1A44     		add	r2, r2, r3
 3956 1d9a 07F5B053 		add	r3, r7, #5632
 3957 1d9e 03F11703 		add	r3, r3, #23
 3958 1da2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3959 1da4 D31A     		subs	r3, r2, r3
 3960 1da6 5A1E     		subs	r2, r3, #1
 3961 1da8 07F5B053 		add	r3, r7, #5632
 3962 1dac 03F11703 		add	r3, r3, #23
 3963 1db0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3964 1db2 07F13803 		add	r3, r7, #56
 3965 1db6 1C3B     		subs	r3, r3, #28
 3966 1db8 0B44     		add	r3, r3, r1
 3967 1dba 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3968 1dbc 07F15803 		add	r3, r7, #88
 3969 1dc0 043B     		subs	r3, r3, #4
 3970 1dc2 9954     		strb	r1, [r3, r2]
 604:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3971              		.loc 1 604 0 discriminator 3
 3972 1dc4 07F5B053 		add	r3, r7, #5632
 3973 1dc8 03F11703 		add	r3, r3, #23
 3974 1dcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3975 1dce 0133     		adds	r3, r3, #1
 3976 1dd0 07F5B052 		add	r2, r7, #5632
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 99


 3977 1dd4 02F11702 		add	r2, r2, #23
 3978 1dd8 1370     		strb	r3, [r2]
 3979              	.L175:
 604:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3980              		.loc 1 604 0 is_stmt 0 discriminator 1
 3981 1dda 07F5B053 		add	r3, r7, #5632
 3982 1dde 03F11703 		add	r3, r3, #23
 3983 1de2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3984 1de4 07F5B053 		add	r3, r7, #5632
 3985 1de8 03F11303 		add	r3, r3, #19
 3986 1dec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3987 1dee 9A42     		cmp	r2, r3
 3988 1df0 C4D3     		bcc	.L176
 606:..\src/command_processing.c ****                             }
 607:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c / 65536;
 3989              		.loc 1 607 0 is_stmt 1
 3990 1df2 07F5B053 		add	r3, r7, #5632
 3991 1df6 03F10E03 		add	r3, r3, #14
 3992 1dfa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3993 1dfc A249     		ldr	r1, .L298
 3994 1dfe 1346     		mov	r3, r2
 3995 1e00 DB00     		lsls	r3, r3, #3
 3996 1e02 9B1A     		subs	r3, r3, r2
 3997 1e04 1B01     		lsls	r3, r3, #4
 3998 1e06 0B44     		add	r3, r3, r1
 3999 1e08 C033     		adds	r3, r3, #192
 4000 1e0a 1B68     		ldr	r3, [r3]
 4001 1e0c 1846     		mov	r0, r3
 4002 1e0e FFF7FEFF 		bl	__aeabi_i2f
 4003 1e12 0346     		mov	r3, r0
 4004 1e14 4FF08F41 		mov	r1, #1199570944
 4005 1e18 1846     		mov	r0, r3
 4006 1e1a FFF7FEFF 		bl	__aeabi_fdiv
 4007 1e1e 0346     		mov	r3, r0
 4008 1e20 1A46     		mov	r2, r3
 4009 1e22 07F13803 		add	r3, r7, #56
 4010 1e26 1C3B     		subs	r3, r3, #28
 4011 1e28 1A60     		str	r2, [r3]	@ float
 608:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4012              		.loc 1 608 0
 4013 1e2a 0023     		movs	r3, #0
 4014 1e2c 07F5B052 		add	r2, r7, #5632
 4015 1e30 02F11702 		add	r2, r2, #23
 4016 1e34 1370     		strb	r3, [r2]
 4017 1e36 34E0     		b	.L177
 4018              	.L178:
 609:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4019              		.loc 1 609 0 discriminator 3
 4020 1e38 07F5B053 		add	r3, r7, #5632
 4021 1e3c 03F11503 		add	r3, r3, #21
 4022 1e40 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4023 1e42 3222     		movs	r2, #50
 4024 1e44 02FB03F3 		mul	r3, r2, r3
 4025 1e48 1A1D     		adds	r2, r3, #4
 4026 1e4a 07F5B053 		add	r3, r7, #5632
 4027 1e4e 03F11303 		add	r3, r3, #19
 4028 1e52 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 100


 4029 1e54 1A44     		add	r2, r2, r3
 4030 1e56 07F5B053 		add	r3, r7, #5632
 4031 1e5a 03F11303 		add	r3, r3, #19
 4032 1e5e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4033 1e60 1A44     		add	r2, r2, r3
 4034 1e62 07F5B053 		add	r3, r7, #5632
 4035 1e66 03F11703 		add	r3, r3, #23
 4036 1e6a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4037 1e6c D31A     		subs	r3, r2, r3
 4038 1e6e 5A1E     		subs	r2, r3, #1
 4039 1e70 07F5B053 		add	r3, r7, #5632
 4040 1e74 03F11703 		add	r3, r3, #23
 4041 1e78 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4042 1e7a 07F13803 		add	r3, r7, #56
 4043 1e7e 1C3B     		subs	r3, r3, #28
 4044 1e80 0B44     		add	r3, r3, r1
 4045 1e82 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4046 1e84 07F15803 		add	r3, r7, #88
 4047 1e88 043B     		subs	r3, r3, #4
 4048 1e8a 9954     		strb	r1, [r3, r2]
 608:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4049              		.loc 1 608 0 discriminator 3
 4050 1e8c 07F5B053 		add	r3, r7, #5632
 4051 1e90 03F11703 		add	r3, r3, #23
 4052 1e94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4053 1e96 0133     		adds	r3, r3, #1
 4054 1e98 07F5B052 		add	r2, r7, #5632
 4055 1e9c 02F11702 		add	r2, r2, #23
 4056 1ea0 1370     		strb	r3, [r2]
 4057              	.L177:
 608:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4058              		.loc 1 608 0 is_stmt 0 discriminator 1
 4059 1ea2 07F5B053 		add	r3, r7, #5632
 4060 1ea6 03F11703 		add	r3, r3, #23
 4061 1eaa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4062 1eac 07F5B053 		add	r3, r7, #5632
 4063 1eb0 03F11303 		add	r3, r3, #19
 4064 1eb4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4065 1eb6 9A42     		cmp	r2, r3
 4066 1eb8 BED3     		bcc	.L178
 610:..\src/command_processing.c ****                             }
 611:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c / 65536;
 4067              		.loc 1 611 0 is_stmt 1
 4068 1eba 07F5B053 		add	r3, r7, #5632
 4069 1ebe 03F10E03 		add	r3, r3, #14
 4070 1ec2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4071 1ec4 7049     		ldr	r1, .L298
 4072 1ec6 1346     		mov	r3, r2
 4073 1ec8 DB00     		lsls	r3, r3, #3
 4074 1eca 9B1A     		subs	r3, r3, r2
 4075 1ecc 1B01     		lsls	r3, r3, #4
 4076 1ece 0B44     		add	r3, r3, r1
 4077 1ed0 C433     		adds	r3, r3, #196
 4078 1ed2 1B68     		ldr	r3, [r3]
 4079 1ed4 1846     		mov	r0, r3
 4080 1ed6 FFF7FEFF 		bl	__aeabi_i2f
 4081 1eda 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 101


 4082 1edc 4FF08F41 		mov	r1, #1199570944
 4083 1ee0 1846     		mov	r0, r3
 4084 1ee2 FFF7FEFF 		bl	__aeabi_fdiv
 4085 1ee6 0346     		mov	r3, r0
 4086 1ee8 1A46     		mov	r2, r3
 4087 1eea 07F13803 		add	r3, r7, #56
 4088 1eee 1C3B     		subs	r3, r3, #28
 4089 1ef0 1A60     		str	r2, [r3]	@ float
 612:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4090              		.loc 1 612 0
 4091 1ef2 0023     		movs	r3, #0
 4092 1ef4 07F5B052 		add	r2, r7, #5632
 4093 1ef8 02F11702 		add	r2, r2, #23
 4094 1efc 1370     		strb	r3, [r2]
 4095 1efe 35E0     		b	.L179
 4096              	.L180:
 613:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4097              		.loc 1 613 0 discriminator 3
 4098 1f00 07F5B053 		add	r3, r7, #5632
 4099 1f04 03F11503 		add	r3, r3, #21
 4100 1f08 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4101 1f0a 3222     		movs	r2, #50
 4102 1f0c 02FB03F3 		mul	r3, r2, r3
 4103 1f10 1A1D     		adds	r2, r3, #4
 4104 1f12 07F5B053 		add	r3, r7, #5632
 4105 1f16 03F11303 		add	r3, r3, #19
 4106 1f1a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4107 1f1c 5B00     		lsls	r3, r3, #1
 4108 1f1e 1A44     		add	r2, r2, r3
 4109 1f20 07F5B053 		add	r3, r7, #5632
 4110 1f24 03F11303 		add	r3, r3, #19
 4111 1f28 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4112 1f2a 1A44     		add	r2, r2, r3
 4113 1f2c 07F5B053 		add	r3, r7, #5632
 4114 1f30 03F11703 		add	r3, r3, #23
 4115 1f34 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4116 1f36 D31A     		subs	r3, r2, r3
 4117 1f38 5A1E     		subs	r2, r3, #1
 4118 1f3a 07F5B053 		add	r3, r7, #5632
 4119 1f3e 03F11703 		add	r3, r3, #23
 4120 1f42 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4121 1f44 07F13803 		add	r3, r7, #56
 4122 1f48 1C3B     		subs	r3, r3, #28
 4123 1f4a 0B44     		add	r3, r3, r1
 4124 1f4c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4125 1f4e 07F15803 		add	r3, r7, #88
 4126 1f52 043B     		subs	r3, r3, #4
 4127 1f54 9954     		strb	r1, [r3, r2]
 612:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4128              		.loc 1 612 0 discriminator 3
 4129 1f56 07F5B053 		add	r3, r7, #5632
 4130 1f5a 03F11703 		add	r3, r3, #23
 4131 1f5e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4132 1f60 0133     		adds	r3, r3, #1
 4133 1f62 07F5B052 		add	r2, r7, #5632
 4134 1f66 02F11702 		add	r2, r2, #23
 4135 1f6a 1370     		strb	r3, [r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 102


 4136              	.L179:
 612:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4137              		.loc 1 612 0 is_stmt 0 discriminator 1
 4138 1f6c 07F5B053 		add	r3, r7, #5632
 4139 1f70 03F11703 		add	r3, r3, #23
 4140 1f74 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4141 1f76 07F5B053 		add	r3, r7, #5632
 4142 1f7a 03F11303 		add	r3, r3, #19
 4143 1f7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4144 1f80 9A42     		cmp	r2, r3
 4145 1f82 BDD3     		bcc	.L180
 614:..\src/command_processing.c ****                             }
 615:..\src/command_processing.c ****                         }
 616:..\src/command_processing.c ****                         else {
 617:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl / 65536;
 618:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 619:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 620:..\src/command_processing.c ****                             }
 621:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl / 65536;
 622:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 623:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 624:..\src/command_processing.c ****                             }
 625:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl / 65536;
 626:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 627:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 628:..\src/command_processing.c ****                             }
 629:..\src/command_processing.c ****                         }            
 630:..\src/command_processing.c ****                         break;  
 4146              		.loc 1 630 0 is_stmt 1
 4147 1f84 A1E2     		b	.L110
 4148              	.L174:
 617:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4149              		.loc 1 617 0
 4150 1f86 07F5B053 		add	r3, r7, #5632
 4151 1f8a 03F10E03 		add	r3, r3, #14
 4152 1f8e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4153 1f90 3D49     		ldr	r1, .L298
 4154 1f92 1346     		mov	r3, r2
 4155 1f94 DB00     		lsls	r3, r3, #3
 4156 1f96 9B1A     		subs	r3, r3, r2
 4157 1f98 1B01     		lsls	r3, r3, #4
 4158 1f9a 0B44     		add	r3, r3, r1
 4159 1f9c D433     		adds	r3, r3, #212
 4160 1f9e 1B68     		ldr	r3, [r3]
 4161 1fa0 1846     		mov	r0, r3
 4162 1fa2 FFF7FEFF 		bl	__aeabi_i2f
 4163 1fa6 0346     		mov	r3, r0
 4164 1fa8 4FF08F41 		mov	r1, #1199570944
 4165 1fac 1846     		mov	r0, r3
 4166 1fae FFF7FEFF 		bl	__aeabi_fdiv
 4167 1fb2 0346     		mov	r3, r0
 4168 1fb4 1A46     		mov	r2, r3
 4169 1fb6 07F13803 		add	r3, r7, #56
 4170 1fba 1C3B     		subs	r3, r3, #28
 4171 1fbc 1A60     		str	r2, [r3]	@ float
 618:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4172              		.loc 1 618 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 103


 4173 1fbe 0023     		movs	r3, #0
 4174 1fc0 07F5B052 		add	r2, r7, #5632
 4175 1fc4 02F11702 		add	r2, r2, #23
 4176 1fc8 1370     		strb	r3, [r2]
 4177 1fca 2EE0     		b	.L182
 4178              	.L183:
 619:..\src/command_processing.c ****                             }
 4179              		.loc 1 619 0 discriminator 3
 4180 1fcc 07F5B053 		add	r3, r7, #5632
 4181 1fd0 03F11503 		add	r3, r3, #21
 4182 1fd4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4183 1fd6 3222     		movs	r2, #50
 4184 1fd8 02FB03F3 		mul	r3, r2, r3
 4185 1fdc 1A1D     		adds	r2, r3, #4
 4186 1fde 07F5B053 		add	r3, r7, #5632
 4187 1fe2 03F11303 		add	r3, r3, #19
 4188 1fe6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4189 1fe8 1A44     		add	r2, r2, r3
 4190 1fea 07F5B053 		add	r3, r7, #5632
 4191 1fee 03F11703 		add	r3, r3, #23
 4192 1ff2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4193 1ff4 D31A     		subs	r3, r2, r3
 4194 1ff6 5A1E     		subs	r2, r3, #1
 4195 1ff8 07F5B053 		add	r3, r7, #5632
 4196 1ffc 03F11703 		add	r3, r3, #23
 4197 2000 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4198 2002 07F13803 		add	r3, r7, #56
 4199 2006 1C3B     		subs	r3, r3, #28
 4200 2008 0B44     		add	r3, r3, r1
 4201 200a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4202 200c 07F15803 		add	r3, r7, #88
 4203 2010 043B     		subs	r3, r3, #4
 4204 2012 9954     		strb	r1, [r3, r2]
 618:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4205              		.loc 1 618 0 discriminator 3
 4206 2014 07F5B053 		add	r3, r7, #5632
 4207 2018 03F11703 		add	r3, r3, #23
 4208 201c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4209 201e 0133     		adds	r3, r3, #1
 4210 2020 07F5B052 		add	r2, r7, #5632
 4211 2024 02F11702 		add	r2, r2, #23
 4212 2028 1370     		strb	r3, [r2]
 4213              	.L182:
 618:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4214              		.loc 1 618 0 is_stmt 0 discriminator 1
 4215 202a 07F5B053 		add	r3, r7, #5632
 4216 202e 03F11703 		add	r3, r3, #23
 4217 2032 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4218 2034 07F5B053 		add	r3, r7, #5632
 4219 2038 03F11303 		add	r3, r3, #19
 4220 203c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4221 203e 9A42     		cmp	r2, r3
 4222 2040 C4D3     		bcc	.L183
 621:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4223              		.loc 1 621 0 is_stmt 1
 4224 2042 07F5B053 		add	r3, r7, #5632
 4225 2046 03F10E03 		add	r3, r3, #14
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 104


 4226 204a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4227 204c 0E49     		ldr	r1, .L298
 4228 204e 1346     		mov	r3, r2
 4229 2050 DB00     		lsls	r3, r3, #3
 4230 2052 9B1A     		subs	r3, r3, r2
 4231 2054 1B01     		lsls	r3, r3, #4
 4232 2056 0B44     		add	r3, r3, r1
 4233 2058 D833     		adds	r3, r3, #216
 4234 205a 1B68     		ldr	r3, [r3]
 4235 205c 1846     		mov	r0, r3
 4236 205e FFF7FEFF 		bl	__aeabi_i2f
 4237 2062 0346     		mov	r3, r0
 4238 2064 4FF08F41 		mov	r1, #1199570944
 4239 2068 1846     		mov	r0, r3
 4240 206a FFF7FEFF 		bl	__aeabi_fdiv
 4241 206e 0346     		mov	r3, r0
 4242 2070 1A46     		mov	r2, r3
 4243 2072 07F13803 		add	r3, r7, #56
 4244 2076 1C3B     		subs	r3, r3, #28
 4245 2078 1A60     		str	r2, [r3]	@ float
 622:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4246              		.loc 1 622 0
 4247 207a 0023     		movs	r3, #0
 4248 207c 07F5B052 		add	r2, r7, #5632
 4249 2080 02F11702 		add	r2, r2, #23
 4250 2084 1370     		strb	r3, [r2]
 4251 2086 36E0     		b	.L184
 4252              	.L299:
 4253              		.align	2
 4254              	.L298:
 4255 2088 00000000 		.word	c_mem
 4256              	.L185:
 623:..\src/command_processing.c ****                             }
 4257              		.loc 1 623 0 discriminator 3
 4258 208c 07F5B053 		add	r3, r7, #5632
 4259 2090 03F11503 		add	r3, r3, #21
 4260 2094 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4261 2096 3222     		movs	r2, #50
 4262 2098 02FB03F3 		mul	r3, r2, r3
 4263 209c 1A1D     		adds	r2, r3, #4
 4264 209e 07F5B053 		add	r3, r7, #5632
 4265 20a2 03F11303 		add	r3, r3, #19
 4266 20a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4267 20a8 1A44     		add	r2, r2, r3
 4268 20aa 07F5B053 		add	r3, r7, #5632
 4269 20ae 03F11303 		add	r3, r3, #19
 4270 20b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4271 20b4 1A44     		add	r2, r2, r3
 4272 20b6 07F5B053 		add	r3, r7, #5632
 4273 20ba 03F11703 		add	r3, r3, #23
 4274 20be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4275 20c0 D31A     		subs	r3, r2, r3
 4276 20c2 5A1E     		subs	r2, r3, #1
 4277 20c4 07F5B053 		add	r3, r7, #5632
 4278 20c8 03F11703 		add	r3, r3, #23
 4279 20cc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4280 20ce 07F13803 		add	r3, r7, #56
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 105


 4281 20d2 1C3B     		subs	r3, r3, #28
 4282 20d4 0B44     		add	r3, r3, r1
 4283 20d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4284 20d8 07F15803 		add	r3, r7, #88
 4285 20dc 043B     		subs	r3, r3, #4
 4286 20de 9954     		strb	r1, [r3, r2]
 622:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4287              		.loc 1 622 0 discriminator 3
 4288 20e0 07F5B053 		add	r3, r7, #5632
 4289 20e4 03F11703 		add	r3, r3, #23
 4290 20e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4291 20ea 0133     		adds	r3, r3, #1
 4292 20ec 07F5B052 		add	r2, r7, #5632
 4293 20f0 02F11702 		add	r2, r2, #23
 4294 20f4 1370     		strb	r3, [r2]
 4295              	.L184:
 622:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4296              		.loc 1 622 0 is_stmt 0 discriminator 1
 4297 20f6 07F5B053 		add	r3, r7, #5632
 4298 20fa 03F11703 		add	r3, r3, #23
 4299 20fe 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4300 2100 07F5B053 		add	r3, r7, #5632
 4301 2104 03F11303 		add	r3, r3, #19
 4302 2108 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4303 210a 9A42     		cmp	r2, r3
 4304 210c BED3     		bcc	.L185
 625:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4305              		.loc 1 625 0 is_stmt 1
 4306 210e 07F5B053 		add	r3, r7, #5632
 4307 2112 03F10E03 		add	r3, r3, #14
 4308 2116 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4309 2118 C849     		ldr	r1, .L300
 4310 211a 1346     		mov	r3, r2
 4311 211c DB00     		lsls	r3, r3, #3
 4312 211e 9B1A     		subs	r3, r3, r2
 4313 2120 1B01     		lsls	r3, r3, #4
 4314 2122 0B44     		add	r3, r3, r1
 4315 2124 DC33     		adds	r3, r3, #220
 4316 2126 1B68     		ldr	r3, [r3]
 4317 2128 1846     		mov	r0, r3
 4318 212a FFF7FEFF 		bl	__aeabi_i2f
 4319 212e 0346     		mov	r3, r0
 4320 2130 4FF08F41 		mov	r1, #1199570944
 4321 2134 1846     		mov	r0, r3
 4322 2136 FFF7FEFF 		bl	__aeabi_fdiv
 4323 213a 0346     		mov	r3, r0
 4324 213c 1A46     		mov	r2, r3
 4325 213e 07F13803 		add	r3, r7, #56
 4326 2142 1C3B     		subs	r3, r3, #28
 4327 2144 1A60     		str	r2, [r3]	@ float
 626:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4328              		.loc 1 626 0
 4329 2146 0023     		movs	r3, #0
 4330 2148 07F5B052 		add	r2, r7, #5632
 4331 214c 02F11702 		add	r2, r2, #23
 4332 2150 1370     		strb	r3, [r2]
 4333 2152 35E0     		b	.L186
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 106


 4334              	.L187:
 627:..\src/command_processing.c ****                             }
 4335              		.loc 1 627 0 discriminator 3
 4336 2154 07F5B053 		add	r3, r7, #5632
 4337 2158 03F11503 		add	r3, r3, #21
 4338 215c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4339 215e 3222     		movs	r2, #50
 4340 2160 02FB03F3 		mul	r3, r2, r3
 4341 2164 1A1D     		adds	r2, r3, #4
 4342 2166 07F5B053 		add	r3, r7, #5632
 4343 216a 03F11303 		add	r3, r3, #19
 4344 216e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4345 2170 5B00     		lsls	r3, r3, #1
 4346 2172 1A44     		add	r2, r2, r3
 4347 2174 07F5B053 		add	r3, r7, #5632
 4348 2178 03F11303 		add	r3, r3, #19
 4349 217c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4350 217e 1A44     		add	r2, r2, r3
 4351 2180 07F5B053 		add	r3, r7, #5632
 4352 2184 03F11703 		add	r3, r3, #23
 4353 2188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4354 218a D31A     		subs	r3, r2, r3
 4355 218c 5A1E     		subs	r2, r3, #1
 4356 218e 07F5B053 		add	r3, r7, #5632
 4357 2192 03F11703 		add	r3, r3, #23
 4358 2196 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4359 2198 07F13803 		add	r3, r7, #56
 4360 219c 1C3B     		subs	r3, r3, #28
 4361 219e 0B44     		add	r3, r3, r1
 4362 21a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4363 21a2 07F15803 		add	r3, r7, #88
 4364 21a6 043B     		subs	r3, r3, #4
 4365 21a8 9954     		strb	r1, [r3, r2]
 626:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4366              		.loc 1 626 0 discriminator 3
 4367 21aa 07F5B053 		add	r3, r7, #5632
 4368 21ae 03F11703 		add	r3, r3, #23
 4369 21b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4370 21b4 0133     		adds	r3, r3, #1
 4371 21b6 07F5B052 		add	r2, r7, #5632
 4372 21ba 02F11702 		add	r2, r2, #23
 4373 21be 1370     		strb	r3, [r2]
 4374              	.L186:
 626:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4375              		.loc 1 626 0 is_stmt 0 discriminator 1
 4376 21c0 07F5B053 		add	r3, r7, #5632
 4377 21c4 03F11703 		add	r3, r3, #23
 4378 21c8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4379 21ca 07F5B053 		add	r3, r7, #5632
 4380 21ce 03F11303 		add	r3, r3, #19
 4381 21d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4382 21d4 9A42     		cmp	r2, r3
 4383 21d6 BDD3     		bcc	.L187
 4384              		.loc 1 630 0 is_stmt 1
 4385 21d8 77E1     		b	.L110
 4386              	.L120:
 631:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 107


 632:..\src/command_processing.c ****                     case 50:         // Second Motor Measurement Offset
 633:..\src/command_processing.c ****                         aux_int16 = (c_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i]
 4387              		.loc 1 633 0
 4388 21da 07F5B053 		add	r3, r7, #5632
 4389 21de 03F10E03 		add	r3, r3, #14
 4390 21e2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4391 21e4 9649     		ldr	r1, .L300+4
 4392 21e6 1346     		mov	r3, r2
 4393 21e8 DB00     		lsls	r3, r3, #3
 4394 21ea 9B1A     		subs	r3, r3, r2
 4395 21ec 1B01     		lsls	r3, r3, #4
 4396 21ee 0B44     		add	r3, r3, r1
 4397 21f0 03F58873 		add	r3, r3, #272
 4398 21f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4399 21f6 1846     		mov	r0, r3
 4400 21f8 07F5B053 		add	r3, r7, #5632
 4401 21fc 03F11703 		add	r3, r3, #23
 4402 2200 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4403 2202 8E49     		ldr	r1, .L300
 4404 2204 0346     		mov	r3, r0
 4405 2206 5B00     		lsls	r3, r3, #1
 4406 2208 0344     		add	r3, r3, r0
 4407 220a 9B00     		lsls	r3, r3, #2
 4408 220c 1344     		add	r3, r3, r2
 4409 220e 6633     		adds	r3, r3, #102
 4410 2210 51F82310 		ldr	r1, [r1, r3, lsl #2]
 4411 2214 07F5B053 		add	r3, r7, #5632
 4412 2218 03F10E03 		add	r3, r3, #14
 4413 221c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4414 221e 8848     		ldr	r0, .L300+4
 4415 2220 1346     		mov	r3, r2
 4416 2222 DB00     		lsls	r3, r3, #3
 4417 2224 9B1A     		subs	r3, r3, r2
 4418 2226 1B01     		lsls	r3, r3, #4
 4419 2228 0344     		add	r3, r3, r0
 4420 222a 03F58873 		add	r3, r3, #272
 4421 222e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4422 2230 1C46     		mov	r4, r3
 4423 2232 07F5B053 		add	r3, r7, #5632
 4424 2236 03F11703 		add	r3, r3, #23
 4425 223a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4426 223c 7F48     		ldr	r0, .L300
 4427 223e 2346     		mov	r3, r4
 4428 2240 5B00     		lsls	r3, r3, #1
 4429 2242 2344     		add	r3, r3, r4
 4430 2244 1B01     		lsls	r3, r3, #4
 4431 2246 0344     		add	r3, r3, r0
 4432 2248 1344     		add	r3, r3, r2
 4433 224a 03F29513 		addw	r3, r3, #405
 4434 224e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4435 2250 41FA03F3 		asr	r3, r1, r3
 4436 2254 1AB2     		sxth	r2, r3
 4437 2256 07F13803 		add	r3, r7, #56
 4438 225a 1E3B     		subs	r3, r3, #30
 4439 225c 1A80     		strh	r2, [r3]	@ movhi
 634:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4440              		.loc 1 634 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 108


 4441 225e 0023     		movs	r3, #0
 4442 2260 07F5B052 		add	r2, r7, #5632
 4443 2264 02F11602 		add	r2, r2, #22
 4444 2268 1370     		strb	r3, [r2]
 4445 226a 3BE0     		b	.L188
 4446              	.L189:
 635:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 4447              		.loc 1 635 0 discriminator 3
 4448 226c 07F5B053 		add	r3, r7, #5632
 4449 2270 03F11503 		add	r3, r3, #21
 4450 2274 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4451 2276 3222     		movs	r2, #50
 4452 2278 02FB03F3 		mul	r3, r2, r3
 4453 227c 1A1D     		adds	r2, r3, #4
 4454 227e 07F5B053 		add	r3, r7, #5632
 4455 2282 03F11703 		add	r3, r3, #23
 4456 2286 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4457 2288 07F5B051 		add	r1, r7, #5632
 4458 228c 01F11301 		add	r1, r1, #19
 4459 2290 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4460 2292 01FB03F3 		mul	r3, r1, r3
 4461 2296 1A44     		add	r2, r2, r3
 4462 2298 07F5B053 		add	r3, r7, #5632
 4463 229c 03F11303 		add	r3, r3, #19
 4464 22a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4465 22a2 1A44     		add	r2, r2, r3
 4466 22a4 07F5B053 		add	r3, r7, #5632
 4467 22a8 03F11603 		add	r3, r3, #22
 4468 22ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4469 22ae D31A     		subs	r3, r2, r3
 4470 22b0 5A1E     		subs	r2, r3, #1
 4471 22b2 07F5B053 		add	r3, r7, #5632
 4472 22b6 03F11603 		add	r3, r3, #22
 4473 22ba 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4474 22bc 07F13803 		add	r3, r7, #56
 4475 22c0 1E3B     		subs	r3, r3, #30
 4476 22c2 0B44     		add	r3, r3, r1
 4477 22c4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4478 22c6 07F15803 		add	r3, r7, #88
 4479 22ca 043B     		subs	r3, r3, #4
 4480 22cc 9954     		strb	r1, [r3, r2]
 634:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4481              		.loc 1 634 0 discriminator 3
 4482 22ce 07F5B053 		add	r3, r7, #5632
 4483 22d2 03F11603 		add	r3, r3, #22
 4484 22d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4485 22d8 0133     		adds	r3, r3, #1
 4486 22da 07F5B052 		add	r2, r7, #5632
 4487 22de 02F11602 		add	r2, r2, #22
 4488 22e2 1370     		strb	r3, [r2]
 4489              	.L188:
 634:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4490              		.loc 1 634 0 is_stmt 0 discriminator 1
 4491 22e4 07F5B053 		add	r3, r7, #5632
 4492 22e8 03F11603 		add	r3, r3, #22
 4493 22ec 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4494 22ee 07F5B053 		add	r3, r7, #5632
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 109


 4495 22f2 03F11303 		add	r3, r3, #19
 4496 22f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4497 22f8 9A42     		cmp	r2, r3
 4498 22fa B7D3     		bcc	.L189
 636:..\src/command_processing.c ****                         }
 637:..\src/command_processing.c ****                         break;
 4499              		.loc 1 637 0 is_stmt 1
 4500 22fc E5E0     		b	.L110
 4501              	.L121:
 638:..\src/command_processing.c ****                 
 639:..\src/command_processing.c ****                     case 53:        // Second Motor Position limits
 640:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.m
 4502              		.loc 1 640 0
 4503 22fe 07F5B053 		add	r3, r7, #5632
 4504 2302 03F10E03 		add	r3, r3, #14
 4505 2306 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4506 2308 4C49     		ldr	r1, .L300
 4507 230a 1346     		mov	r3, r2
 4508 230c DB00     		lsls	r3, r3, #3
 4509 230e 9B1A     		subs	r3, r3, r2
 4510 2310 1B01     		lsls	r3, r3, #4
 4511 2312 0B44     		add	r3, r3, r1
 4512 2314 E433     		adds	r3, r3, #228
 4513 2316 1968     		ldr	r1, [r3]
 4514 2318 07F5B053 		add	r3, r7, #5632
 4515 231c 03F10E03 		add	r3, r3, #14
 4516 2320 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4517 2322 4748     		ldr	r0, .L300+4
 4518 2324 1346     		mov	r3, r2
 4519 2326 DB00     		lsls	r3, r3, #3
 4520 2328 9B1A     		subs	r3, r3, r2
 4521 232a 1B01     		lsls	r3, r3, #4
 4522 232c 0344     		add	r3, r3, r0
 4523 232e 03F58873 		add	r3, r3, #272
 4524 2332 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4525 2334 1846     		mov	r0, r3
 4526 2336 414A     		ldr	r2, .L300
 4527 2338 0346     		mov	r3, r0
 4528 233a 5B00     		lsls	r3, r3, #1
 4529 233c 0344     		add	r3, r3, r0
 4530 233e 1B01     		lsls	r3, r3, #4
 4531 2340 1344     		add	r3, r3, r2
 4532 2342 03F29513 		addw	r3, r3, #405
 4533 2346 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4534 2348 41FA03F2 		asr	r2, r1, r3
 4535 234c 07F11803 		add	r3, r7, #24
 4536 2350 043B     		subs	r3, r3, #4
 4537 2352 1A60     		str	r2, [r3]
 641:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4538              		.loc 1 641 0
 4539 2354 0023     		movs	r3, #0
 4540 2356 07F5B052 		add	r2, r7, #5632
 4541 235a 02F11602 		add	r2, r2, #22
 4542 235e 1370     		strb	r3, [r2]
 4543 2360 2EE0     		b	.L190
 4544              	.L191:
 642:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 110


 4545              		.loc 1 642 0 discriminator 3
 4546 2362 07F5B053 		add	r3, r7, #5632
 4547 2366 03F11503 		add	r3, r3, #21
 4548 236a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4549 236c 3222     		movs	r2, #50
 4550 236e 02FB03F3 		mul	r3, r2, r3
 4551 2372 1A1D     		adds	r2, r3, #4
 4552 2374 07F5B053 		add	r3, r7, #5632
 4553 2378 03F11303 		add	r3, r3, #19
 4554 237c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4555 237e 1A44     		add	r2, r2, r3
 4556 2380 07F5B053 		add	r3, r7, #5632
 4557 2384 03F11603 		add	r3, r3, #22
 4558 2388 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4559 238a D31A     		subs	r3, r2, r3
 4560 238c 5A1E     		subs	r2, r3, #1
 4561 238e 07F5B053 		add	r3, r7, #5632
 4562 2392 03F11603 		add	r3, r3, #22
 4563 2396 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4564 2398 07F11803 		add	r3, r7, #24
 4565 239c 043B     		subs	r3, r3, #4
 4566 239e 0B44     		add	r3, r3, r1
 4567 23a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4568 23a2 07F15803 		add	r3, r7, #88
 4569 23a6 043B     		subs	r3, r3, #4
 4570 23a8 9954     		strb	r1, [r3, r2]
 641:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4571              		.loc 1 641 0 discriminator 3
 4572 23aa 07F5B053 		add	r3, r7, #5632
 4573 23ae 03F11603 		add	r3, r3, #22
 4574 23b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4575 23b4 0133     		adds	r3, r3, #1
 4576 23b6 07F5B052 		add	r2, r7, #5632
 4577 23ba 02F11602 		add	r2, r2, #22
 4578 23be 1370     		strb	r3, [r2]
 4579              	.L190:
 641:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4580              		.loc 1 641 0 is_stmt 0 discriminator 1
 4581 23c0 07F5B053 		add	r3, r7, #5632
 4582 23c4 03F11603 		add	r3, r3, #22
 4583 23c8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4584 23ca 07F5B053 		add	r3, r7, #5632
 4585 23ce 03F11303 		add	r3, r3, #19
 4586 23d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4587 23d4 9A42     		cmp	r2, r3
 4588 23d6 C4D3     		bcc	.L191
 643:..\src/command_processing.c ****                         }
 644:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.m
 4589              		.loc 1 644 0 is_stmt 1
 4590 23d8 07F5B053 		add	r3, r7, #5632
 4591 23dc 03F10E03 		add	r3, r3, #14
 4592 23e0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4593 23e2 1649     		ldr	r1, .L300
 4594 23e4 1346     		mov	r3, r2
 4595 23e6 DB00     		lsls	r3, r3, #3
 4596 23e8 9B1A     		subs	r3, r3, r2
 4597 23ea 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 111


 4598 23ec 0B44     		add	r3, r3, r1
 4599 23ee E833     		adds	r3, r3, #232
 4600 23f0 1968     		ldr	r1, [r3]
 4601 23f2 07F5B053 		add	r3, r7, #5632
 4602 23f6 03F10E03 		add	r3, r3, #14
 4603 23fa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4604 23fc 1048     		ldr	r0, .L300+4
 4605 23fe 1346     		mov	r3, r2
 4606 2400 DB00     		lsls	r3, r3, #3
 4607 2402 9B1A     		subs	r3, r3, r2
 4608 2404 1B01     		lsls	r3, r3, #4
 4609 2406 0344     		add	r3, r3, r0
 4610 2408 03F58873 		add	r3, r3, #272
 4611 240c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4612 240e 1846     		mov	r0, r3
 4613 2410 0A4A     		ldr	r2, .L300
 4614 2412 0346     		mov	r3, r0
 4615 2414 5B00     		lsls	r3, r3, #1
 4616 2416 0344     		add	r3, r3, r0
 4617 2418 1B01     		lsls	r3, r3, #4
 4618 241a 1344     		add	r3, r3, r2
 4619 241c 03F29513 		addw	r3, r3, #405
 4620 2420 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4621 2422 41FA03F2 		asr	r2, r1, r3
 4622 2426 07F11803 		add	r3, r7, #24
 4623 242a 043B     		subs	r3, r3, #4
 4624 242c 1A60     		str	r2, [r3]
 645:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4625              		.loc 1 645 0
 4626 242e 0023     		movs	r3, #0
 4627 2430 07F5B052 		add	r2, r7, #5632
 4628 2434 02F11602 		add	r2, r2, #22
 4629 2438 1370     		strb	r3, [r2]
 4630 243a 38E0     		b	.L192
 4631              	.L301:
 4632              		.align	2
 4633              	.L300:
 4634 243c 00000000 		.word	c_mem
 4635 2440 00000000 		.word	g_mem
 4636              	.L193:
 646:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 4637              		.loc 1 646 0 discriminator 3
 4638 2444 07F5B053 		add	r3, r7, #5632
 4639 2448 03F11503 		add	r3, r3, #21
 4640 244c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4641 244e 3222     		movs	r2, #50
 4642 2450 02FB03F3 		mul	r3, r2, r3
 4643 2454 1A1D     		adds	r2, r3, #4
 4644 2456 07F5B053 		add	r3, r7, #5632
 4645 245a 03F11303 		add	r3, r3, #19
 4646 245e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4647 2460 1A44     		add	r2, r2, r3
 4648 2462 07F5B053 		add	r3, r7, #5632
 4649 2466 03F11303 		add	r3, r3, #19
 4650 246a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4651 246c 1A44     		add	r2, r2, r3
 4652 246e 07F5B053 		add	r3, r7, #5632
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 112


 4653 2472 03F11603 		add	r3, r3, #22
 4654 2476 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4655 2478 D31A     		subs	r3, r2, r3
 4656 247a 5A1E     		subs	r2, r3, #1
 4657 247c 07F5B053 		add	r3, r7, #5632
 4658 2480 03F11603 		add	r3, r3, #22
 4659 2484 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4660 2486 07F11803 		add	r3, r7, #24
 4661 248a 043B     		subs	r3, r3, #4
 4662 248c 0B44     		add	r3, r3, r1
 4663 248e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4664 2490 07F15803 		add	r3, r7, #88
 4665 2494 043B     		subs	r3, r3, #4
 4666 2496 9954     		strb	r1, [r3, r2]
 645:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4667              		.loc 1 645 0 discriminator 3
 4668 2498 07F5B053 		add	r3, r7, #5632
 4669 249c 03F11603 		add	r3, r3, #22
 4670 24a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4671 24a2 0133     		adds	r3, r3, #1
 4672 24a4 07F5B052 		add	r2, r7, #5632
 4673 24a8 02F11602 		add	r2, r2, #22
 4674 24ac 1370     		strb	r3, [r2]
 4675              	.L192:
 645:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4676              		.loc 1 645 0 is_stmt 0 discriminator 1
 4677 24ae 07F5B053 		add	r3, r7, #5632
 4678 24b2 03F11603 		add	r3, r3, #22
 4679 24b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4680 24b8 07F5B053 		add	r3, r7, #5632
 4681 24bc 03F11303 		add	r3, r3, #19
 4682 24c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4683 24c2 9A42     		cmp	r2, r3
 4684 24c4 BED3     		bcc	.L193
 647:..\src/command_processing.c ****                         }
 648:..\src/command_processing.c ****                         break;
 4685              		.loc 1 648 0 is_stmt 1
 4686 24c6 00E0     		b	.L110
 4687              	.L280:
 649:..\src/command_processing.c ****                         
 650:..\src/command_processing.c ****                     default:
 651:..\src/command_processing.c ****                         break;
 4688              		.loc 1 651 0
 4689 24c8 00BF     		nop
 4690              	.L110:
 652:..\src/command_processing.c ****                 }
 653:..\src/command_processing.c **** // END OF MODIFY CUSTOM PARAM  
 654:..\src/command_processing.c ****                         
 655:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
 656:..\src/command_processing.c ****         }
 657:..\src/command_processing.c ****         
 658:..\src/command_processing.c ****         sprintf(aux_str, (char*)PARAMS_STR[idx]);
 4691              		.loc 1 658 0
 4692 24ca 07F5B053 		add	r3, r7, #5632
 4693 24ce 03F11503 		add	r3, r3, #21
 4694 24d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4695 24d4 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 113


 4696 24d6 07F5B152 		add	r2, r7, #5664
 4697 24da 02F11402 		add	r2, r2, #20
 4698 24de 1268     		ldr	r2, [r2]
 4699 24e0 1344     		add	r3, r3, r2
 4700 24e2 1A68     		ldr	r2, [r3]
 4701 24e4 07F13803 		add	r3, r7, #56
 4702 24e8 183B     		subs	r3, r3, #24
 4703 24ea 1146     		mov	r1, r2
 4704 24ec 1846     		mov	r0, r3
 4705 24ee FFF7FEFF 		bl	sprintf
 659:..\src/command_processing.c ****         string_lenght = strlen(aux_str);
 4706              		.loc 1 659 0
 4707 24f2 07F13803 		add	r3, r7, #56
 4708 24f6 183B     		subs	r3, r3, #24
 4709 24f8 1846     		mov	r0, r3
 4710 24fa FFF7FEFF 		bl	strlen
 4711 24fe 0346     		mov	r3, r0
 4712 2500 07F5B052 		add	r2, r7, #5632
 4713 2504 02F11202 		add	r2, r2, #18
 4714 2508 1370     		strb	r3, [r2]
 660:..\src/command_processing.c ****         
 661:..\src/command_processing.c ****         // Parameters with a menu
 662:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 4715              		.loc 1 662 0
 4716 250a 07F5B053 		add	r3, r7, #5632
 4717 250e 03F11503 		add	r3, r3, #21
 4718 2512 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4719 2514 07F11803 		add	r3, r7, #24
 4720 2518 103B     		subs	r3, r3, #16
 4721 251a 1B68     		ldr	r3, [r3]
 4722 251c 1344     		add	r3, r3, r2
 4723 251e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4724 2520 002B     		cmp	r3, #0
 4725 2522 40F0D984 		bne	.L194
 663:..\src/command_processing.c ****             switch(NUM_MENU[idx_menu]){
 4726              		.loc 1 663 0
 4727 2526 07F5B053 		add	r3, r7, #5632
 4728 252a 03F11403 		add	r3, r3, #20
 4729 252e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4730 2530 07F5B152 		add	r2, r7, #5664
 4731 2534 02F11002 		add	r2, r2, #16
 4732 2538 1268     		ldr	r2, [r2]
 4733 253a 1344     		add	r3, r3, r2
 4734 253c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4735 253e 013B     		subs	r3, r3, #1
 4736 2540 0B2B     		cmp	r3, #11
 4737 2542 00F2BB84 		bhi	.L195
 4738 2546 01A2     		adr	r2, .L197
 4739 2548 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4740              		.p2align 2
 4741              	.L197:
 4742 254c 7D250000 		.word	.L196+1
 4743 2550 27270000 		.word	.L198+1
 4744 2554 FD270000 		.word	.L199+1
 4745 2558 51280000 		.word	.L200+1
 4746 255c B5280000 		.word	.L201+1
 4747 2560 11290000 		.word	.L202+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 114


 4748 2564 2D2A0000 		.word	.L203+1
 4749 2568 B52A0000 		.word	.L204+1
 4750 256c 492B0000 		.word	.L205+1
 4751 2570 F32B0000 		.word	.L206+1
 4752 2574 472D0000 		.word	.L207+1
 4753 2578 3B2E0000 		.word	.L208+1
 4754              		.p2align 1
 4755              	.L196:
 664:..\src/command_processing.c ****                 case 1:     // input mode menu
 665:..\src/command_processing.c ****                     switch(*m_addr) {
 4756              		.loc 1 665 0
 4757 257c 07F5B053 		add	r3, r7, #5632
 4758 2580 03F10803 		add	r3, r3, #8
 4759 2584 1B68     		ldr	r3, [r3]
 4760 2586 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4761 2588 072B     		cmp	r3, #7
 4762 258a 00F29084 		bhi	.L281
 4763 258e 01A2     		adr	r2, .L211
 4764 2590 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4765              		.p2align 2
 4766              	.L211:
 4767 2594 B5250000 		.word	.L210+1
 4768 2598 D9250000 		.word	.L212+1
 4769 259c FF250000 		.word	.L213+1
 4770 25a0 2D260000 		.word	.L214+1
 4771 25a4 59260000 		.word	.L215+1
 4772 25a8 83260000 		.word	.L216+1
 4773 25ac B7260000 		.word	.L217+1
 4774 25b0 E1260000 		.word	.L218+1
 4775              		.p2align 1
 4776              	.L210:
 666:..\src/command_processing.c ****                         case INPUT_MODE_EXTERNAL:
 667:..\src/command_processing.c ****                             strcat(aux_str, " Usb");
 4777              		.loc 1 667 0
 4778 25b4 07F13803 		add	r3, r7, #56
 4779 25b8 183B     		subs	r3, r3, #24
 4780 25ba 1846     		mov	r0, r3
 4781 25bc FFF7FEFF 		bl	strlen
 4782 25c0 0346     		mov	r3, r0
 4783 25c2 1A46     		mov	r2, r3
 4784 25c4 07F13803 		add	r3, r7, #56
 4785 25c8 183B     		subs	r3, r3, #24
 4786 25ca 1344     		add	r3, r3, r2
 4787 25cc DA4A     		ldr	r2, .L302
 4788 25ce 1068     		ldr	r0, [r2]	@ unaligned
 4789 25d0 1860     		str	r0, [r3]	@ unaligned
 4790 25d2 1279     		ldrb	r2, [r2, #4]
 4791 25d4 1A71     		strb	r2, [r3, #4]
 668:..\src/command_processing.c ****                         break;
 4792              		.loc 1 668 0
 4793 25d6 A5E0     		b	.L209
 4794              	.L212:
 669:..\src/command_processing.c ****                         case INPUT_MODE_ENCODER3:
 670:..\src/command_processing.c ****                             strcat(aux_str, " Handle");
 4795              		.loc 1 670 0
 4796 25d8 07F13803 		add	r3, r7, #56
 4797 25dc 183B     		subs	r3, r3, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 115


 4798 25de 1846     		mov	r0, r3
 4799 25e0 FFF7FEFF 		bl	strlen
 4800 25e4 0346     		mov	r3, r0
 4801 25e6 1A46     		mov	r2, r3
 4802 25e8 07F13803 		add	r3, r7, #56
 4803 25ec 183B     		subs	r3, r3, #24
 4804 25ee 1344     		add	r3, r3, r2
 4805 25f0 D249     		ldr	r1, .L302+4
 4806 25f2 1A46     		mov	r2, r3
 4807 25f4 0B46     		mov	r3, r1
 4808 25f6 03CB     		ldmia	r3!, {r0, r1}
 4809 25f8 1060     		str	r0, [r2]	@ unaligned
 4810 25fa 5160     		str	r1, [r2, #4]	@ unaligned
 671:..\src/command_processing.c ****                         break;
 4811              		.loc 1 671 0
 4812 25fc 92E0     		b	.L209
 4813              	.L213:
 672:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL:
 673:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional");
 4814              		.loc 1 673 0
 4815 25fe 07F13803 		add	r3, r7, #56
 4816 2602 183B     		subs	r3, r3, #24
 4817 2604 1846     		mov	r0, r3
 4818 2606 FFF7FEFF 		bl	strlen
 4819 260a 0346     		mov	r3, r0
 4820 260c 1A46     		mov	r2, r3
 4821 260e 07F13803 		add	r3, r7, #56
 4822 2612 183B     		subs	r3, r3, #24
 4823 2614 1344     		add	r3, r3, r2
 4824 2616 CA4A     		ldr	r2, .L302+8
 4825 2618 1D46     		mov	r5, r3
 4826 261a 1446     		mov	r4, r2
 4827 261c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4828 261e 2860     		str	r0, [r5]	@ unaligned
 4829 2620 6960     		str	r1, [r5, #4]	@ unaligned
 4830 2622 AA60     		str	r2, [r5, #8]	@ unaligned
 4831 2624 EB60     		str	r3, [r5, #12]	@ unaligned
 4832 2626 2388     		ldrh	r3, [r4]	@ unaligned
 4833 2628 2B82     		strh	r3, [r5, #16]	@ unaligned
 674:..\src/command_processing.c ****                         break;
 4834              		.loc 1 674 0
 4835 262a 7BE0     		b	.L209
 4836              	.L214:
 675:..\src/command_processing.c ****                         case INPUT_MODE_EMG_INTEGRAL:
 676:..\src/command_processing.c ****                             strcat(aux_str, " EMG integral");
 4837              		.loc 1 676 0
 4838 262c 07F13803 		add	r3, r7, #56
 4839 2630 183B     		subs	r3, r3, #24
 4840 2632 1846     		mov	r0, r3
 4841 2634 FFF7FEFF 		bl	strlen
 4842 2638 0346     		mov	r3, r0
 4843 263a 1A46     		mov	r2, r3
 4844 263c 07F13803 		add	r3, r7, #56
 4845 2640 183B     		subs	r3, r3, #24
 4846 2642 1344     		add	r3, r3, r2
 4847 2644 BF4A     		ldr	r2, .L302+12
 4848 2646 1C46     		mov	r4, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 116


 4849 2648 1346     		mov	r3, r2
 4850 264a 07CB     		ldmia	r3!, {r0, r1, r2}
 4851 264c 2060     		str	r0, [r4]	@ unaligned
 4852 264e 6160     		str	r1, [r4, #4]	@ unaligned
 4853 2650 A260     		str	r2, [r4, #8]	@ unaligned
 4854 2652 1B88     		ldrh	r3, [r3]	@ unaligned
 4855 2654 A381     		strh	r3, [r4, #12]	@ unaligned
 677:..\src/command_processing.c ****                         break;
 4856              		.loc 1 677 0
 4857 2656 65E0     		b	.L209
 4858              	.L215:
 678:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS:
 679:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS");
 4859              		.loc 1 679 0
 4860 2658 07F13803 		add	r3, r7, #56
 4861 265c 183B     		subs	r3, r3, #24
 4862 265e 1846     		mov	r0, r3
 4863 2660 FFF7FEFF 		bl	strlen
 4864 2664 0346     		mov	r3, r0
 4865 2666 1A46     		mov	r2, r3
 4866 2668 07F13803 		add	r3, r7, #56
 4867 266c 183B     		subs	r3, r3, #24
 4868 266e 1344     		add	r3, r3, r2
 4869 2670 B549     		ldr	r1, .L302+16
 4870 2672 1A46     		mov	r2, r3
 4871 2674 0B46     		mov	r3, r1
 4872 2676 03CB     		ldmia	r3!, {r0, r1}
 4873 2678 1060     		str	r0, [r2]	@ unaligned
 4874 267a 5160     		str	r1, [r2, #4]	@ unaligned
 4875 267c 1B88     		ldrh	r3, [r3]	@ unaligned
 4876 267e 1381     		strh	r3, [r2, #8]	@ unaligned
 680:..\src/command_processing.c ****                         break;
 4877              		.loc 1 680 0
 4878 2680 50E0     		b	.L209
 4879              	.L216:
 681:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS_ADV:
 682:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS Advanced");
 4880              		.loc 1 682 0
 4881 2682 07F13803 		add	r3, r7, #56
 4882 2686 183B     		subs	r3, r3, #24
 4883 2688 1846     		mov	r0, r3
 4884 268a FFF7FEFF 		bl	strlen
 4885 268e 0346     		mov	r3, r0
 4886 2690 1A46     		mov	r2, r3
 4887 2692 07F13803 		add	r3, r7, #56
 4888 2696 183B     		subs	r3, r3, #24
 4889 2698 1344     		add	r3, r3, r2
 4890 269a AC4A     		ldr	r2, .L302+20
 4891 269c 1D46     		mov	r5, r3
 4892 269e 1446     		mov	r4, r2
 4893 26a0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4894 26a2 2860     		str	r0, [r5]	@ unaligned
 4895 26a4 6960     		str	r1, [r5, #4]	@ unaligned
 4896 26a6 AA60     		str	r2, [r5, #8]	@ unaligned
 4897 26a8 EB60     		str	r3, [r5, #12]	@ unaligned
 4898 26aa 2388     		ldrh	r3, [r4]	@ unaligned
 4899 26ac A278     		ldrb	r2, [r4, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 117


 4900 26ae 2B82     		strh	r3, [r5, #16]	@ unaligned
 4901 26b0 1346     		mov	r3, r2
 4902 26b2 AB74     		strb	r3, [r5, #18]
 683:..\src/command_processing.c ****                         break;
 4903              		.loc 1 683 0
 4904 26b4 36E0     		b	.L209
 4905              	.L217:
 684:..\src/command_processing.c ****                         case INPUT_MODE_JOYSTICK:
 685:..\src/command_processing.c ****                             strcat(aux_str, " Joystick");
 4906              		.loc 1 685 0
 4907 26b6 07F13803 		add	r3, r7, #56
 4908 26ba 183B     		subs	r3, r3, #24
 4909 26bc 1846     		mov	r0, r3
 4910 26be FFF7FEFF 		bl	strlen
 4911 26c2 0346     		mov	r3, r0
 4912 26c4 1A46     		mov	r2, r3
 4913 26c6 07F13803 		add	r3, r7, #56
 4914 26ca 183B     		subs	r3, r3, #24
 4915 26cc 1344     		add	r3, r3, r2
 4916 26ce A049     		ldr	r1, .L302+24
 4917 26d0 1A46     		mov	r2, r3
 4918 26d2 0B46     		mov	r3, r1
 4919 26d4 03CB     		ldmia	r3!, {r0, r1}
 4920 26d6 1060     		str	r0, [r2]	@ unaligned
 4921 26d8 5160     		str	r1, [r2, #4]	@ unaligned
 4922 26da 1B88     		ldrh	r3, [r3]	@ unaligned
 4923 26dc 1381     		strh	r3, [r2, #8]	@ unaligned
 686:..\src/command_processing.c ****                         break;
 4924              		.loc 1 686 0
 4925 26de 21E0     		b	.L209
 4926              	.L218:
 687:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL_NC:
 688:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional Normally Closed");
 4927              		.loc 1 688 0
 4928 26e0 07F13803 		add	r3, r7, #56
 4929 26e4 183B     		subs	r3, r3, #24
 4930 26e6 1846     		mov	r0, r3
 4931 26e8 FFF7FEFF 		bl	strlen
 4932 26ec 0346     		mov	r3, r0
 4933 26ee 1A46     		mov	r2, r3
 4934 26f0 07F13803 		add	r3, r7, #56
 4935 26f4 183B     		subs	r3, r3, #24
 4936 26f6 1344     		add	r3, r3, r2
 4937 26f8 964A     		ldr	r2, .L302+28
 4938 26fa 1446     		mov	r4, r2
 4939 26fc 9E46     		mov	lr, r3
 4940 26fe 04F1200C 		add	ip, r4, #32
 4941              	.L219:
 4942 2702 7546     		mov	r5, lr
 4943 2704 2646     		mov	r6, r4
 4944 2706 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 4945 2708 2860     		str	r0, [r5]	@ unaligned
 4946 270a 6960     		str	r1, [r5, #4]	@ unaligned
 4947 270c AA60     		str	r2, [r5, #8]	@ unaligned
 4948 270e EB60     		str	r3, [r5, #12]	@ unaligned
 4949 2710 1034     		adds	r4, r4, #16
 4950 2712 0EF1100E 		add	lr, lr, #16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 118


 4951 2716 6445     		cmp	r4, ip
 4952 2718 F3D1     		bne	.L219
 4953 271a 7246     		mov	r2, lr
 4954 271c 2346     		mov	r3, r4
 4955 271e 1B88     		ldrh	r3, [r3]	@ unaligned
 4956 2720 1380     		strh	r3, [r2]	@ unaligned
 689:..\src/command_processing.c ****                         break;
 4957              		.loc 1 689 0
 4958 2722 00BF     		nop
 4959              	.L209:
 690:..\src/command_processing.c ****                     }
 691:..\src/command_processing.c ****                     break;
 4960              		.loc 1 691 0
 4961 2724 C3E3     		b	.L281
 4962              	.L198:
 692:..\src/command_processing.c ****                 case 2:     // control mode menu
 693:..\src/command_processing.c ****                     switch(*m_addr){
 4963              		.loc 1 693 0
 4964 2726 07F5B053 		add	r3, r7, #5632
 4965 272a 03F10803 		add	r3, r3, #8
 4966 272e 1B68     		ldr	r3, [r3]
 4967 2730 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4968 2732 032B     		cmp	r3, #3
 4969 2734 00F2BD83 		bhi	.L282
 4970 2738 01A2     		adr	r2, .L222
 4971 273a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4972 273e 00BF     		.p2align 2
 4973              	.L222:
 4974 2740 51270000 		.word	.L221+1
 4975 2744 7B270000 		.word	.L223+1
 4976 2748 9F270000 		.word	.L224+1
 4977 274c C9270000 		.word	.L225+1
 4978              		.p2align 1
 4979              	.L221:
 694:..\src/command_processing.c ****                         case CONTROL_ANGLE:
 695:..\src/command_processing.c ****                             strcat(aux_str, " Position");
 4980              		.loc 1 695 0
 4981 2750 07F13803 		add	r3, r7, #56
 4982 2754 183B     		subs	r3, r3, #24
 4983 2756 1846     		mov	r0, r3
 4984 2758 FFF7FEFF 		bl	strlen
 4985 275c 0346     		mov	r3, r0
 4986 275e 1A46     		mov	r2, r3
 4987 2760 07F13803 		add	r3, r7, #56
 4988 2764 183B     		subs	r3, r3, #24
 4989 2766 1344     		add	r3, r3, r2
 4990 2768 7B49     		ldr	r1, .L302+32
 4991 276a 1A46     		mov	r2, r3
 4992 276c 0B46     		mov	r3, r1
 4993 276e 03CB     		ldmia	r3!, {r0, r1}
 4994 2770 1060     		str	r0, [r2]	@ unaligned
 4995 2772 5160     		str	r1, [r2, #4]	@ unaligned
 4996 2774 1B88     		ldrh	r3, [r3]	@ unaligned
 4997 2776 1381     		strh	r3, [r2, #8]	@ unaligned
 696:..\src/command_processing.c ****                         break;
 4998              		.loc 1 696 0
 4999 2778 3FE0     		b	.L220
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 119


 5000              	.L223:
 697:..\src/command_processing.c ****                         case CONTROL_PWM:
 698:..\src/command_processing.c ****                             strcat(aux_str, " PWM");
 5001              		.loc 1 698 0
 5002 277a 07F13803 		add	r3, r7, #56
 5003 277e 183B     		subs	r3, r3, #24
 5004 2780 1846     		mov	r0, r3
 5005 2782 FFF7FEFF 		bl	strlen
 5006 2786 0346     		mov	r3, r0
 5007 2788 1A46     		mov	r2, r3
 5008 278a 07F13803 		add	r3, r7, #56
 5009 278e 183B     		subs	r3, r3, #24
 5010 2790 1344     		add	r3, r3, r2
 5011 2792 724A     		ldr	r2, .L302+36
 5012 2794 1068     		ldr	r0, [r2]	@ unaligned
 5013 2796 1860     		str	r0, [r3]	@ unaligned
 5014 2798 1279     		ldrb	r2, [r2, #4]
 5015 279a 1A71     		strb	r2, [r3, #4]
 699:..\src/command_processing.c ****                         break;
 5016              		.loc 1 699 0
 5017 279c 2DE0     		b	.L220
 5018              	.L224:
 700:..\src/command_processing.c ****                         case CONTROL_CURRENT:
 701:..\src/command_processing.c ****                             strcat(aux_str, " Current");
 5019              		.loc 1 701 0
 5020 279e 07F13803 		add	r3, r7, #56
 5021 27a2 183B     		subs	r3, r3, #24
 5022 27a4 1846     		mov	r0, r3
 5023 27a6 FFF7FEFF 		bl	strlen
 5024 27aa 0346     		mov	r3, r0
 5025 27ac 1A46     		mov	r2, r3
 5026 27ae 07F13803 		add	r3, r7, #56
 5027 27b2 183B     		subs	r3, r3, #24
 5028 27b4 1344     		add	r3, r3, r2
 5029 27b6 6A49     		ldr	r1, .L302+40
 5030 27b8 1A46     		mov	r2, r3
 5031 27ba 0B46     		mov	r3, r1
 5032 27bc 03CB     		ldmia	r3!, {r0, r1}
 5033 27be 1060     		str	r0, [r2]	@ unaligned
 5034 27c0 5160     		str	r1, [r2, #4]	@ unaligned
 5035 27c2 1B78     		ldrb	r3, [r3]
 5036 27c4 1372     		strb	r3, [r2, #8]
 702:..\src/command_processing.c ****                         break;
 5037              		.loc 1 702 0
 5038 27c6 18E0     		b	.L220
 5039              	.L225:
 703:..\src/command_processing.c ****                         case CURR_AND_POS_CONTROL:
 704:..\src/command_processing.c ****                             strcat(aux_str, " Position and Current");
 5040              		.loc 1 704 0
 5041 27c8 07F13803 		add	r3, r7, #56
 5042 27cc 183B     		subs	r3, r3, #24
 5043 27ce 1846     		mov	r0, r3
 5044 27d0 FFF7FEFF 		bl	strlen
 5045 27d4 0346     		mov	r3, r0
 5046 27d6 1A46     		mov	r2, r3
 5047 27d8 07F13803 		add	r3, r7, #56
 5048 27dc 183B     		subs	r3, r3, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 120


 5049 27de 1344     		add	r3, r3, r2
 5050 27e0 604A     		ldr	r2, .L302+44
 5051 27e2 1D46     		mov	r5, r3
 5052 27e4 1446     		mov	r4, r2
 5053 27e6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5054 27e8 2860     		str	r0, [r5]	@ unaligned
 5055 27ea 6960     		str	r1, [r5, #4]	@ unaligned
 5056 27ec AA60     		str	r2, [r5, #8]	@ unaligned
 5057 27ee EB60     		str	r3, [r5, #12]	@ unaligned
 5058 27f0 2068     		ldr	r0, [r4]	@ unaligned
 5059 27f2 2861     		str	r0, [r5, #16]	@ unaligned
 5060 27f4 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5061 27f6 AB82     		strh	r3, [r5, #20]	@ unaligned
 705:..\src/command_processing.c ****                         break;
 5062              		.loc 1 705 0
 5063 27f8 00BF     		nop
 5064              	.L220:
 706:..\src/command_processing.c ****                     }
 707:..\src/command_processing.c ****                     break;
 5065              		.loc 1 707 0
 5066 27fa 5AE3     		b	.L282
 5067              	.L199:
 708:..\src/command_processing.c ****                 case 3:     // yes/no menu
 709:..\src/command_processing.c ****                     if(*m_addr){
 5068              		.loc 1 709 0
 5069 27fc 07F5B053 		add	r3, r7, #5632
 5070 2800 03F10803 		add	r3, r3, #8
 5071 2804 1B68     		ldr	r3, [r3]
 5072 2806 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5073 2808 002B     		cmp	r3, #0
 5074 280a 11D0     		beq	.L226
 710:..\src/command_processing.c ****                         strcat(aux_str, " YES\0");
 5075              		.loc 1 710 0
 5076 280c 07F13803 		add	r3, r7, #56
 5077 2810 183B     		subs	r3, r3, #24
 5078 2812 1846     		mov	r0, r3
 5079 2814 FFF7FEFF 		bl	strlen
 5080 2818 0346     		mov	r3, r0
 5081 281a 1A46     		mov	r2, r3
 5082 281c 07F13803 		add	r3, r7, #56
 5083 2820 183B     		subs	r3, r3, #24
 5084 2822 1344     		add	r3, r3, r2
 5085 2824 504A     		ldr	r2, .L302+48
 5086 2826 1068     		ldr	r0, [r2]	@ unaligned
 5087 2828 1860     		str	r0, [r3]	@ unaligned
 5088 282a 1279     		ldrb	r2, [r2, #4]
 5089 282c 1A71     		strb	r2, [r3, #4]
 711:..\src/command_processing.c ****                     }
 712:..\src/command_processing.c ****                     else {
 713:..\src/command_processing.c ****                         strcat(aux_str, " NO\0");
 714:..\src/command_processing.c ****                     }
 715:..\src/command_processing.c ****                     break;    
 5090              		.loc 1 715 0
 5091 282e 45E3     		b	.L195
 5092              	.L226:
 713:..\src/command_processing.c ****                     }
 5093              		.loc 1 713 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 121


 5094 2830 07F13803 		add	r3, r7, #56
 5095 2834 183B     		subs	r3, r3, #24
 5096 2836 1846     		mov	r0, r3
 5097 2838 FFF7FEFF 		bl	strlen
 5098 283c 0346     		mov	r3, r0
 5099 283e 1A46     		mov	r2, r3
 5100 2840 07F13803 		add	r3, r7, #56
 5101 2844 183B     		subs	r3, r3, #24
 5102 2846 1344     		add	r3, r3, r2
 5103 2848 484A     		ldr	r2, .L302+52
 5104 284a 1068     		ldr	r0, [r2]	@ unaligned
 5105 284c 1860     		str	r0, [r3]	@ unaligned
 5106              		.loc 1 715 0
 5107 284e 35E3     		b	.L195
 5108              	.L200:
 716:..\src/command_processing.c ****                 case 4:     // right/lef menu
 717:..\src/command_processing.c ****                     switch(*m_addr){
 5109              		.loc 1 717 0
 5110 2850 07F5B053 		add	r3, r7, #5632
 5111 2854 03F10803 		add	r3, r3, #8
 5112 2858 1B68     		ldr	r3, [r3]
 5113 285a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5114 285c 002B     		cmp	r3, #0
 5115 285e 02D0     		beq	.L229
 5116 2860 012B     		cmp	r3, #1
 5117 2862 14D0     		beq	.L230
 718:..\src/command_processing.c ****                         case RIGHT_HAND:
 719:..\src/command_processing.c ****                             strcat(aux_str, " Right\0");
 720:..\src/command_processing.c ****                         break;
 721:..\src/command_processing.c ****                         case LEFT_HAND:
 722:..\src/command_processing.c ****                             strcat(aux_str, " Left\0");
 723:..\src/command_processing.c ****                         break;
 724:..\src/command_processing.c ****                     }
 725:..\src/command_processing.c ****                     break;
 5118              		.loc 1 725 0
 5119 2864 2AE3     		b	.L195
 5120              	.L229:
 719:..\src/command_processing.c ****                         break;
 5121              		.loc 1 719 0
 5122 2866 07F13803 		add	r3, r7, #56
 5123 286a 183B     		subs	r3, r3, #24
 5124 286c 1846     		mov	r0, r3
 5125 286e FFF7FEFF 		bl	strlen
 5126 2872 0346     		mov	r3, r0
 5127 2874 1A46     		mov	r2, r3
 5128 2876 07F13803 		add	r3, r7, #56
 5129 287a 183B     		subs	r3, r3, #24
 5130 287c 1344     		add	r3, r3, r2
 5131 287e 3C4A     		ldr	r2, .L302+56
 5132 2880 1068     		ldr	r0, [r2]	@ unaligned
 5133 2882 1860     		str	r0, [r3]	@ unaligned
 5134 2884 9188     		ldrh	r1, [r2, #4]	@ unaligned
 5135 2886 9279     		ldrb	r2, [r2, #6]
 5136 2888 9980     		strh	r1, [r3, #4]	@ unaligned
 5137 288a 9A71     		strb	r2, [r3, #6]
 720:..\src/command_processing.c ****                         case LEFT_HAND:
 5138              		.loc 1 720 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 122


 5139 288c 11E0     		b	.L228
 5140              	.L230:
 722:..\src/command_processing.c ****                         break;
 5141              		.loc 1 722 0
 5142 288e 07F13803 		add	r3, r7, #56
 5143 2892 183B     		subs	r3, r3, #24
 5144 2894 1846     		mov	r0, r3
 5145 2896 FFF7FEFF 		bl	strlen
 5146 289a 0346     		mov	r3, r0
 5147 289c 1A46     		mov	r2, r3
 5148 289e 07F13803 		add	r3, r7, #56
 5149 28a2 183B     		subs	r3, r3, #24
 5150 28a4 1344     		add	r3, r3, r2
 5151 28a6 334A     		ldr	r2, .L302+60
 5152 28a8 1068     		ldr	r0, [r2]	@ unaligned
 5153 28aa 1860     		str	r0, [r3]	@ unaligned
 5154 28ac 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5155 28ae 9A80     		strh	r2, [r3, #4]	@ unaligned
 723:..\src/command_processing.c ****                     }
 5156              		.loc 1 723 0
 5157 28b0 00BF     		nop
 5158              	.L228:
 5159              		.loc 1 725 0
 5160 28b2 03E3     		b	.L195
 5161              	.L201:
 726:..\src/command_processing.c ****                 case 5:     // on/off menu
 727:..\src/command_processing.c ****                     switch(*m_addr){
 5162              		.loc 1 727 0
 5163 28b4 07F5B053 		add	r3, r7, #5632
 5164 28b8 03F10803 		add	r3, r3, #8
 5165 28bc 1B68     		ldr	r3, [r3]
 5166 28be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5167 28c0 002B     		cmp	r3, #0
 5168 28c2 02D0     		beq	.L232
 5169 28c4 012B     		cmp	r3, #1
 5170 28c6 12D0     		beq	.L233
 728:..\src/command_processing.c ****                         case 0:
 729:..\src/command_processing.c ****                             strcat(aux_str, " OFF\0");
 730:..\src/command_processing.c ****                         break;
 731:..\src/command_processing.c ****                         case 1:
 732:..\src/command_processing.c ****                             strcat(aux_str, " ON\0");
 733:..\src/command_processing.c ****                         break;
 734:..\src/command_processing.c ****                     }
 735:..\src/command_processing.c ****                     break;
 5171              		.loc 1 735 0
 5172 28c8 F8E2     		b	.L195
 5173              	.L232:
 729:..\src/command_processing.c ****                         break;
 5174              		.loc 1 729 0
 5175 28ca 07F13803 		add	r3, r7, #56
 5176 28ce 183B     		subs	r3, r3, #24
 5177 28d0 1846     		mov	r0, r3
 5178 28d2 FFF7FEFF 		bl	strlen
 5179 28d6 0346     		mov	r3, r0
 5180 28d8 1A46     		mov	r2, r3
 5181 28da 07F13803 		add	r3, r7, #56
 5182 28de 183B     		subs	r3, r3, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 123


 5183 28e0 1344     		add	r3, r3, r2
 5184 28e2 254A     		ldr	r2, .L302+64
 5185 28e4 1068     		ldr	r0, [r2]	@ unaligned
 5186 28e6 1860     		str	r0, [r3]	@ unaligned
 5187 28e8 1279     		ldrb	r2, [r2, #4]
 5188 28ea 1A71     		strb	r2, [r3, #4]
 730:..\src/command_processing.c ****                         case 1:
 5189              		.loc 1 730 0
 5190 28ec 0FE0     		b	.L231
 5191              	.L233:
 732:..\src/command_processing.c ****                         break;
 5192              		.loc 1 732 0
 5193 28ee 07F13803 		add	r3, r7, #56
 5194 28f2 183B     		subs	r3, r3, #24
 5195 28f4 1846     		mov	r0, r3
 5196 28f6 FFF7FEFF 		bl	strlen
 5197 28fa 0346     		mov	r3, r0
 5198 28fc 1A46     		mov	r2, r3
 5199 28fe 07F13803 		add	r3, r7, #56
 5200 2902 183B     		subs	r3, r3, #24
 5201 2904 1344     		add	r3, r3, r2
 5202 2906 1D4A     		ldr	r2, .L302+68
 5203 2908 1068     		ldr	r0, [r2]	@ unaligned
 5204 290a 1860     		str	r0, [r3]	@ unaligned
 733:..\src/command_processing.c ****                     }
 5205              		.loc 1 733 0
 5206 290c 00BF     		nop
 5207              	.L231:
 5208              		.loc 1 735 0
 5209 290e D5E2     		b	.L195
 5210              	.L202:
 736:..\src/command_processing.c ****                 case 6:     // expansion port menu
 737:..\src/command_processing.c ****                     switch(*m_addr){
 5211              		.loc 1 737 0
 5212 2910 07F5B053 		add	r3, r7, #5632
 5213 2914 03F10803 		add	r3, r3, #8
 5214 2918 1B68     		ldr	r3, [r3]
 5215 291a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5216 291c 032B     		cmp	r3, #3
 5217 291e 00F2CA82 		bhi	.L283
 5218 2922 01A2     		adr	r2, .L236
 5219 2924 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5220              		.p2align 2
 5221              	.L236:
 5222 2928 81290000 		.word	.L235+1
 5223 292c A5290000 		.word	.L237+1
 5224 2930 D1290000 		.word	.L238+1
 5225 2934 FF290000 		.word	.L239+1
 5226              		.p2align 1
 5227              	.L303:
 5228              		.align	2
 5229              	.L302:
 5230 2938 00000000 		.word	.LC88
 5231 293c 08000000 		.word	.LC89
 5232 2940 10000000 		.word	.LC90
 5233 2944 24000000 		.word	.LC91
 5234 2948 34000000 		.word	.LC92
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 124


 5235 294c 40000000 		.word	.LC93
 5236 2950 54000000 		.word	.LC94
 5237 2954 60000000 		.word	.LC95
 5238 2958 84000000 		.word	.LC96
 5239 295c 90000000 		.word	.LC97
 5240 2960 98000000 		.word	.LC98
 5241 2964 A4000000 		.word	.LC99
 5242 2968 BC000000 		.word	.LC100
 5243 296c C4000000 		.word	.LC101
 5244 2970 CC000000 		.word	.LC102
 5245 2974 D4000000 		.word	.LC103
 5246 2978 DC000000 		.word	.LC104
 5247 297c E4000000 		.word	.LC105
 5248              	.L235:
 738:..\src/command_processing.c ****                         case EXP_NONE:
 739:..\src/command_processing.c ****                             strcat(aux_str, " None\0");
 5249              		.loc 1 739 0
 5250 2980 07F13803 		add	r3, r7, #56
 5251 2984 183B     		subs	r3, r3, #24
 5252 2986 1846     		mov	r0, r3
 5253 2988 FFF7FEFF 		bl	strlen
 5254 298c 0346     		mov	r3, r0
 5255 298e 1A46     		mov	r2, r3
 5256 2990 07F13803 		add	r3, r7, #56
 5257 2994 183B     		subs	r3, r3, #24
 5258 2996 1344     		add	r3, r3, r2
 5259 2998 CD4A     		ldr	r2, .L304
 5260 299a 1068     		ldr	r0, [r2]	@ unaligned
 5261 299c 1860     		str	r0, [r3]	@ unaligned
 5262 299e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5263 29a0 9A80     		strh	r2, [r3, #4]	@ unaligned
 740:..\src/command_processing.c ****                             break;
 5264              		.loc 1 740 0
 5265 29a2 42E0     		b	.L234
 5266              	.L237:
 741:..\src/command_processing.c ****                         case EXP_SD_RTC:
 742:..\src/command_processing.c ****                             strcat(aux_str, " SD/RTC board\0");
 5267              		.loc 1 742 0
 5268 29a4 07F13803 		add	r3, r7, #56
 5269 29a8 183B     		subs	r3, r3, #24
 5270 29aa 1846     		mov	r0, r3
 5271 29ac FFF7FEFF 		bl	strlen
 5272 29b0 0346     		mov	r3, r0
 5273 29b2 1A46     		mov	r2, r3
 5274 29b4 07F13803 		add	r3, r7, #56
 5275 29b8 183B     		subs	r3, r3, #24
 5276 29ba 1344     		add	r3, r3, r2
 5277 29bc C54A     		ldr	r2, .L304+4
 5278 29be 1C46     		mov	r4, r3
 5279 29c0 1346     		mov	r3, r2
 5280 29c2 07CB     		ldmia	r3!, {r0, r1, r2}
 5281 29c4 2060     		str	r0, [r4]	@ unaligned
 5282 29c6 6160     		str	r1, [r4, #4]	@ unaligned
 5283 29c8 A260     		str	r2, [r4, #8]	@ unaligned
 5284 29ca 1B88     		ldrh	r3, [r3]	@ unaligned
 5285 29cc A381     		strh	r3, [r4, #12]	@ unaligned
 743:..\src/command_processing.c ****                             break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 125


 5286              		.loc 1 743 0
 5287 29ce 2CE0     		b	.L234
 5288              	.L238:
 744:..\src/command_processing.c ****                         case EXP_WIFI:
 745:..\src/command_processing.c ****         					strcat(aux_str, " WiFi board [N/A]\0");
 5289              		.loc 1 745 0
 5290 29d0 07F13803 		add	r3, r7, #56
 5291 29d4 183B     		subs	r3, r3, #24
 5292 29d6 1846     		mov	r0, r3
 5293 29d8 FFF7FEFF 		bl	strlen
 5294 29dc 0346     		mov	r3, r0
 5295 29de 1A46     		mov	r2, r3
 5296 29e0 07F13803 		add	r3, r7, #56
 5297 29e4 183B     		subs	r3, r3, #24
 5298 29e6 1344     		add	r3, r3, r2
 5299 29e8 BB4A     		ldr	r2, .L304+8
 5300 29ea 1D46     		mov	r5, r3
 5301 29ec 1446     		mov	r4, r2
 5302 29ee 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5303 29f0 2860     		str	r0, [r5]	@ unaligned
 5304 29f2 6960     		str	r1, [r5, #4]	@ unaligned
 5305 29f4 AA60     		str	r2, [r5, #8]	@ unaligned
 5306 29f6 EB60     		str	r3, [r5, #12]	@ unaligned
 5307 29f8 2388     		ldrh	r3, [r4]	@ unaligned
 5308 29fa 2B82     		strh	r3, [r5, #16]	@ unaligned
 746:..\src/command_processing.c ****         					break;
 5309              		.loc 1 746 0
 5310 29fc 15E0     		b	.L234
 5311              	.L239:
 747:..\src/command_processing.c ****                         case EXP_OTHER:
 748:..\src/command_processing.c ****         					strcat(aux_str, " Other [N/A]\0");
 5312              		.loc 1 748 0
 5313 29fe 07F13803 		add	r3, r7, #56
 5314 2a02 183B     		subs	r3, r3, #24
 5315 2a04 1846     		mov	r0, r3
 5316 2a06 FFF7FEFF 		bl	strlen
 5317 2a0a 0346     		mov	r3, r0
 5318 2a0c 1A46     		mov	r2, r3
 5319 2a0e 07F13803 		add	r3, r7, #56
 5320 2a12 183B     		subs	r3, r3, #24
 5321 2a14 1344     		add	r3, r3, r2
 5322 2a16 B14A     		ldr	r2, .L304+12
 5323 2a18 1C46     		mov	r4, r3
 5324 2a1a 1346     		mov	r3, r2
 5325 2a1c 07CB     		ldmia	r3!, {r0, r1, r2}
 5326 2a1e 2060     		str	r0, [r4]	@ unaligned
 5327 2a20 6160     		str	r1, [r4, #4]	@ unaligned
 5328 2a22 A260     		str	r2, [r4, #8]	@ unaligned
 5329 2a24 1B78     		ldrb	r3, [r3]
 5330 2a26 2373     		strb	r3, [r4, #12]
 749:..\src/command_processing.c ****         					break;
 5331              		.loc 1 749 0
 5332 2a28 00BF     		nop
 5333              	.L234:
 750:..\src/command_processing.c ****                     }
 751:..\src/command_processing.c ****                     break;
 5334              		.loc 1 751 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 126


 5335 2a2a 44E2     		b	.L283
 5336              	.L203:
 752:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 753:..\src/command_processing.c ****                     switch(*m_addr){
 5337              		.loc 1 753 0
 5338 2a2c 07F5B053 		add	r3, r7, #5632
 5339 2a30 03F10803 		add	r3, r3, #8
 5340 2a34 1B68     		ldr	r3, [r3]
 5341 2a36 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5342 2a38 012B     		cmp	r3, #1
 5343 2a3a 16D0     		beq	.L241
 5344 2a3c 022B     		cmp	r3, #2
 5345 2a3e 26D0     		beq	.L242
 5346 2a40 002B     		cmp	r3, #0
 5347 2a42 00D0     		beq	.L243
 754:..\src/command_processing.c ****                         case 0: 
 755:..\src/command_processing.c ****                             strcat(aux_str, " None\0"); 
 756:..\src/command_processing.c ****                             break;
 757:..\src/command_processing.c ****                         case 1: 
 758:..\src/command_processing.c ****                             strcat(aux_str, " Low\0"); 
 759:..\src/command_processing.c ****                             break;
 760:..\src/command_processing.c ****                         case 2: 
 761:..\src/command_processing.c ****                             strcat(aux_str, " High\0");
 762:..\src/command_processing.c ****                             break;
 763:..\src/command_processing.c ****                         default:
 764:..\src/command_processing.c ****                             break;
 5348              		.loc 1 764 0
 5349 2a44 35E0     		b	.L244
 5350              	.L243:
 755:..\src/command_processing.c ****                             break;
 5351              		.loc 1 755 0
 5352 2a46 07F13803 		add	r3, r7, #56
 5353 2a4a 183B     		subs	r3, r3, #24
 5354 2a4c 1846     		mov	r0, r3
 5355 2a4e FFF7FEFF 		bl	strlen
 5356 2a52 0346     		mov	r3, r0
 5357 2a54 1A46     		mov	r2, r3
 5358 2a56 07F13803 		add	r3, r7, #56
 5359 2a5a 183B     		subs	r3, r3, #24
 5360 2a5c 1344     		add	r3, r3, r2
 5361 2a5e 9C4A     		ldr	r2, .L304
 5362 2a60 1068     		ldr	r0, [r2]	@ unaligned
 5363 2a62 1860     		str	r0, [r3]	@ unaligned
 5364 2a64 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5365 2a66 9A80     		strh	r2, [r3, #4]	@ unaligned
 756:..\src/command_processing.c ****                         case 1: 
 5366              		.loc 1 756 0
 5367 2a68 23E0     		b	.L244
 5368              	.L241:
 758:..\src/command_processing.c ****                             break;
 5369              		.loc 1 758 0
 5370 2a6a 07F13803 		add	r3, r7, #56
 5371 2a6e 183B     		subs	r3, r3, #24
 5372 2a70 1846     		mov	r0, r3
 5373 2a72 FFF7FEFF 		bl	strlen
 5374 2a76 0346     		mov	r3, r0
 5375 2a78 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 127


 5376 2a7a 07F13803 		add	r3, r7, #56
 5377 2a7e 183B     		subs	r3, r3, #24
 5378 2a80 1344     		add	r3, r3, r2
 5379 2a82 974A     		ldr	r2, .L304+16
 5380 2a84 1068     		ldr	r0, [r2]	@ unaligned
 5381 2a86 1860     		str	r0, [r3]	@ unaligned
 5382 2a88 1279     		ldrb	r2, [r2, #4]
 5383 2a8a 1A71     		strb	r2, [r3, #4]
 759:..\src/command_processing.c ****                         case 2: 
 5384              		.loc 1 759 0
 5385 2a8c 11E0     		b	.L244
 5386              	.L242:
 761:..\src/command_processing.c ****                             break;
 5387              		.loc 1 761 0
 5388 2a8e 07F13803 		add	r3, r7, #56
 5389 2a92 183B     		subs	r3, r3, #24
 5390 2a94 1846     		mov	r0, r3
 5391 2a96 FFF7FEFF 		bl	strlen
 5392 2a9a 0346     		mov	r3, r0
 5393 2a9c 1A46     		mov	r2, r3
 5394 2a9e 07F13803 		add	r3, r7, #56
 5395 2aa2 183B     		subs	r3, r3, #24
 5396 2aa4 1344     		add	r3, r3, r2
 5397 2aa6 8F4A     		ldr	r2, .L304+20
 5398 2aa8 1068     		ldr	r0, [r2]	@ unaligned
 5399 2aaa 1860     		str	r0, [r3]	@ unaligned
 5400 2aac 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5401 2aae 9A80     		strh	r2, [r3, #4]	@ unaligned
 762:..\src/command_processing.c ****                         default:
 5402              		.loc 1 762 0
 5403 2ab0 00BF     		nop
 5404              	.L244:
 765:..\src/command_processing.c ****                     } 
 766:..\src/command_processing.c ****                     break;
 5405              		.loc 1 766 0 discriminator 12
 5406 2ab2 03E2     		b	.L195
 5407              	.L204:
 767:..\src/command_processing.c ****                 case 8:     // user menu          
 768:..\src/command_processing.c ****                     switch(*m_addr){
 5408              		.loc 1 768 0
 5409 2ab4 07F5B053 		add	r3, r7, #5632
 5410 2ab8 03F10803 		add	r3, r3, #8
 5411 2abc 1B68     		ldr	r3, [r3]
 5412 2abe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5413 2ac0 012B     		cmp	r3, #1
 5414 2ac2 1AD0     		beq	.L246
 5415 2ac4 022B     		cmp	r3, #2
 5416 2ac6 2CD0     		beq	.L247
 5417 2ac8 002B     		cmp	r3, #0
 5418 2aca 00D0     		beq	.L248
 769:..\src/command_processing.c ****                         case GENERIC_USER:
 770:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC USER\0");
 771:..\src/command_processing.c ****                         break;
 772:..\src/command_processing.c ****                         case MARIA:
 773:..\src/command_processing.c ****                             strcat(aux_str, " MARIA\0");
 774:..\src/command_processing.c ****                         break;
 775:..\src/command_processing.c ****                         case ROZA:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 128


 776:..\src/command_processing.c ****                             strcat(aux_str, " ROZA\0");
 777:..\src/command_processing.c ****                         break;
 778:..\src/command_processing.c ****                     }   
 779:..\src/command_processing.c ****                     break;                    
 5419              		.loc 1 779 0
 5420 2acc F6E1     		b	.L195
 5421              	.L248:
 770:..\src/command_processing.c ****                         break;
 5422              		.loc 1 770 0
 5423 2ace 07F13803 		add	r3, r7, #56
 5424 2ad2 183B     		subs	r3, r3, #24
 5425 2ad4 1846     		mov	r0, r3
 5426 2ad6 FFF7FEFF 		bl	strlen
 5427 2ada 0346     		mov	r3, r0
 5428 2adc 1A46     		mov	r2, r3
 5429 2ade 07F13803 		add	r3, r7, #56
 5430 2ae2 183B     		subs	r3, r3, #24
 5431 2ae4 1344     		add	r3, r3, r2
 5432 2ae6 804A     		ldr	r2, .L304+24
 5433 2ae8 1C46     		mov	r4, r3
 5434 2aea 1346     		mov	r3, r2
 5435 2aec 07CB     		ldmia	r3!, {r0, r1, r2}
 5436 2aee 2060     		str	r0, [r4]	@ unaligned
 5437 2af0 6160     		str	r1, [r4, #4]	@ unaligned
 5438 2af2 A260     		str	r2, [r4, #8]	@ unaligned
 5439 2af4 1B88     		ldrh	r3, [r3]	@ unaligned
 5440 2af6 A381     		strh	r3, [r4, #12]	@ unaligned
 771:..\src/command_processing.c ****                         case MARIA:
 5441              		.loc 1 771 0
 5442 2af8 25E0     		b	.L245
 5443              	.L246:
 773:..\src/command_processing.c ****                         break;
 5444              		.loc 1 773 0
 5445 2afa 07F13803 		add	r3, r7, #56
 5446 2afe 183B     		subs	r3, r3, #24
 5447 2b00 1846     		mov	r0, r3
 5448 2b02 FFF7FEFF 		bl	strlen
 5449 2b06 0346     		mov	r3, r0
 5450 2b08 1A46     		mov	r2, r3
 5451 2b0a 07F13803 		add	r3, r7, #56
 5452 2b0e 183B     		subs	r3, r3, #24
 5453 2b10 1344     		add	r3, r3, r2
 5454 2b12 764A     		ldr	r2, .L304+28
 5455 2b14 1068     		ldr	r0, [r2]	@ unaligned
 5456 2b16 1860     		str	r0, [r3]	@ unaligned
 5457 2b18 9188     		ldrh	r1, [r2, #4]	@ unaligned
 5458 2b1a 9279     		ldrb	r2, [r2, #6]
 5459 2b1c 9980     		strh	r1, [r3, #4]	@ unaligned
 5460 2b1e 9A71     		strb	r2, [r3, #6]
 774:..\src/command_processing.c ****                         case ROZA:
 5461              		.loc 1 774 0
 5462 2b20 11E0     		b	.L245
 5463              	.L247:
 776:..\src/command_processing.c ****                         break;
 5464              		.loc 1 776 0
 5465 2b22 07F13803 		add	r3, r7, #56
 5466 2b26 183B     		subs	r3, r3, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 129


 5467 2b28 1846     		mov	r0, r3
 5468 2b2a FFF7FEFF 		bl	strlen
 5469 2b2e 0346     		mov	r3, r0
 5470 2b30 1A46     		mov	r2, r3
 5471 2b32 07F13803 		add	r3, r7, #56
 5472 2b36 183B     		subs	r3, r3, #24
 5473 2b38 1344     		add	r3, r3, r2
 5474 2b3a 6D4A     		ldr	r2, .L304+32
 5475 2b3c 1068     		ldr	r0, [r2]	@ unaligned
 5476 2b3e 1860     		str	r0, [r3]	@ unaligned
 5477 2b40 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5478 2b42 9A80     		strh	r2, [r3, #4]	@ unaligned
 777:..\src/command_processing.c ****                     }   
 5479              		.loc 1 777 0
 5480 2b44 00BF     		nop
 5481              	.L245:
 5482              		.loc 1 779 0
 5483 2b46 B9E1     		b	.L195
 5484              	.L205:
 780:..\src/command_processing.c ****                 case 9:     // driver type menu
 781:..\src/command_processing.c ****                     switch(*m_addr){
 5485              		.loc 1 781 0
 5486 2b48 07F5B053 		add	r3, r7, #5632
 5487 2b4c 03F10803 		add	r3, r3, #8
 5488 2b50 1B68     		ldr	r3, [r3]
 5489 2b52 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5490 2b54 012B     		cmp	r3, #1
 5491 2b56 1BD0     		beq	.L250
 5492 2b58 022B     		cmp	r3, #2
 5493 2b5a 32D0     		beq	.L251
 5494 2b5c 002B     		cmp	r3, #0
 5495 2b5e 00D0     		beq	.L252
 782:..\src/command_processing.c ****                         case 0:
 783:..\src/command_processing.c ****                             strcat(aux_str, " MC33887 (Standard)\0");
 784:..\src/command_processing.c ****                         break;
 785:..\src/command_processing.c ****                         case 1:
 786:..\src/command_processing.c ****                             strcat(aux_str, " VNH5019 (High power)\0");
 787:..\src/command_processing.c ****                         break;
 788:..\src/command_processing.c ****                         case 2:
 789:..\src/command_processing.c ****                             strcat(aux_str, " ESC (Brushless)\0");
 790:..\src/command_processing.c ****                         break;
 791:..\src/command_processing.c ****                     }
 792:..\src/command_processing.c ****                     break;
 5496              		.loc 1 792 0
 5497 2b60 ACE1     		b	.L195
 5498              	.L252:
 783:..\src/command_processing.c ****                         break;
 5499              		.loc 1 783 0
 5500 2b62 07F13803 		add	r3, r7, #56
 5501 2b66 183B     		subs	r3, r3, #24
 5502 2b68 1846     		mov	r0, r3
 5503 2b6a FFF7FEFF 		bl	strlen
 5504 2b6e 0346     		mov	r3, r0
 5505 2b70 1A46     		mov	r2, r3
 5506 2b72 07F13803 		add	r3, r7, #56
 5507 2b76 183B     		subs	r3, r3, #24
 5508 2b78 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 130


 5509 2b7a 5E4A     		ldr	r2, .L304+36
 5510 2b7c 1D46     		mov	r5, r3
 5511 2b7e 1446     		mov	r4, r2
 5512 2b80 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5513 2b82 2860     		str	r0, [r5]	@ unaligned
 5514 2b84 6960     		str	r1, [r5, #4]	@ unaligned
 5515 2b86 AA60     		str	r2, [r5, #8]	@ unaligned
 5516 2b88 EB60     		str	r3, [r5, #12]	@ unaligned
 5517 2b8a 2068     		ldr	r0, [r4]	@ unaligned
 5518 2b8c 2861     		str	r0, [r5, #16]	@ unaligned
 784:..\src/command_processing.c ****                         case 1:
 5519              		.loc 1 784 0
 5520 2b8e 2FE0     		b	.L249
 5521              	.L250:
 786:..\src/command_processing.c ****                         break;
 5522              		.loc 1 786 0
 5523 2b90 07F13803 		add	r3, r7, #56
 5524 2b94 183B     		subs	r3, r3, #24
 5525 2b96 1846     		mov	r0, r3
 5526 2b98 FFF7FEFF 		bl	strlen
 5527 2b9c 0346     		mov	r3, r0
 5528 2b9e 1A46     		mov	r2, r3
 5529 2ba0 07F13803 		add	r3, r7, #56
 5530 2ba4 183B     		subs	r3, r3, #24
 5531 2ba6 1344     		add	r3, r3, r2
 5532 2ba8 534A     		ldr	r2, .L304+40
 5533 2baa 1D46     		mov	r5, r3
 5534 2bac 1446     		mov	r4, r2
 5535 2bae 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5536 2bb0 2860     		str	r0, [r5]	@ unaligned
 5537 2bb2 6960     		str	r1, [r5, #4]	@ unaligned
 5538 2bb4 AA60     		str	r2, [r5, #8]	@ unaligned
 5539 2bb6 EB60     		str	r3, [r5, #12]	@ unaligned
 5540 2bb8 2068     		ldr	r0, [r4]	@ unaligned
 5541 2bba 2861     		str	r0, [r5, #16]	@ unaligned
 5542 2bbc A388     		ldrh	r3, [r4, #4]	@ unaligned
 5543 2bbe AB82     		strh	r3, [r5, #20]	@ unaligned
 787:..\src/command_processing.c ****                         case 2:
 5544              		.loc 1 787 0
 5545 2bc0 16E0     		b	.L249
 5546              	.L251:
 789:..\src/command_processing.c ****                         break;
 5547              		.loc 1 789 0
 5548 2bc2 07F13803 		add	r3, r7, #56
 5549 2bc6 183B     		subs	r3, r3, #24
 5550 2bc8 1846     		mov	r0, r3
 5551 2bca FFF7FEFF 		bl	strlen
 5552 2bce 0346     		mov	r3, r0
 5553 2bd0 1A46     		mov	r2, r3
 5554 2bd2 07F13803 		add	r3, r7, #56
 5555 2bd6 183B     		subs	r3, r3, #24
 5556 2bd8 1344     		add	r3, r3, r2
 5557 2bda 484A     		ldr	r2, .L304+44
 5558 2bdc 1D46     		mov	r5, r3
 5559 2bde 1446     		mov	r4, r2
 5560 2be0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5561 2be2 2860     		str	r0, [r5]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 131


 5562 2be4 6960     		str	r1, [r5, #4]	@ unaligned
 5563 2be6 AA60     		str	r2, [r5, #8]	@ unaligned
 5564 2be8 EB60     		str	r3, [r5, #12]	@ unaligned
 5565 2bea 2378     		ldrb	r3, [r4]
 5566 2bec 2B74     		strb	r3, [r5, #16]
 790:..\src/command_processing.c ****                     }
 5567              		.loc 1 790 0
 5568 2bee 00BF     		nop
 5569              	.L249:
 5570              		.loc 1 792 0
 5571 2bf0 64E1     		b	.L195
 5572              	.L206:
 793:..\src/command_processing.c ****                 case 10:    // device type menu
 794:..\src/command_processing.c ****                     switch(*m_addr){
 5573              		.loc 1 794 0
 5574 2bf2 07F5B053 		add	r3, r7, #5632
 5575 2bf6 03F10803 		add	r3, r3, #8
 5576 2bfa 1B68     		ldr	r3, [r3]
 5577 2bfc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5578 2bfe 042B     		cmp	r3, #4
 5579 2c00 00F25B81 		bhi	.L284
 5580 2c04 01A2     		adr	r2, .L255
 5581 2c06 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5582 2c0a 00BF     		.p2align 2
 5583              	.L255:
 5584 2c0c 212C0000 		.word	.L254+1
 5585 2c10 4D2C0000 		.word	.L256+1
 5586 2c14 7B2C0000 		.word	.L257+1
 5587 2c18 A72C0000 		.word	.L258+1
 5588 2c1c 112D0000 		.word	.L259+1
 5589              		.p2align 1
 5590              	.L254:
 795:..\src/command_processing.c ****                         case 0:
 796:..\src/command_processing.c ****                             strcat(aux_str, " SOFTHAND PRO\0");
 5591              		.loc 1 796 0
 5592 2c20 07F13803 		add	r3, r7, #56
 5593 2c24 183B     		subs	r3, r3, #24
 5594 2c26 1846     		mov	r0, r3
 5595 2c28 FFF7FEFF 		bl	strlen
 5596 2c2c 0346     		mov	r3, r0
 5597 2c2e 1A46     		mov	r2, r3
 5598 2c30 07F13803 		add	r3, r7, #56
 5599 2c34 183B     		subs	r3, r3, #24
 5600 2c36 1344     		add	r3, r3, r2
 5601 2c38 314A     		ldr	r2, .L304+48
 5602 2c3a 1C46     		mov	r4, r3
 5603 2c3c 1346     		mov	r3, r2
 5604 2c3e 07CB     		ldmia	r3!, {r0, r1, r2}
 5605 2c40 2060     		str	r0, [r4]	@ unaligned
 5606 2c42 6160     		str	r1, [r4, #4]	@ unaligned
 5607 2c44 A260     		str	r2, [r4, #8]	@ unaligned
 5608 2c46 1B88     		ldrh	r3, [r3]	@ unaligned
 5609 2c48 A381     		strh	r3, [r4, #12]	@ unaligned
 797:..\src/command_processing.c ****                         break;
 5610              		.loc 1 797 0
 5611 2c4a 7BE0     		b	.L253
 5612              	.L256:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 132


 798:..\src/command_processing.c ****                         case 1:
 799:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC 2 MOTORS\0");
 5613              		.loc 1 799 0
 5614 2c4c 07F13803 		add	r3, r7, #56
 5615 2c50 183B     		subs	r3, r3, #24
 5616 2c52 1846     		mov	r0, r3
 5617 2c54 FFF7FEFF 		bl	strlen
 5618 2c58 0346     		mov	r3, r0
 5619 2c5a 1A46     		mov	r2, r3
 5620 2c5c 07F13803 		add	r3, r7, #56
 5621 2c60 183B     		subs	r3, r3, #24
 5622 2c62 1344     		add	r3, r3, r2
 5623 2c64 274A     		ldr	r2, .L304+52
 5624 2c66 1D46     		mov	r5, r3
 5625 2c68 1446     		mov	r4, r2
 5626 2c6a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5627 2c6c 2860     		str	r0, [r5]	@ unaligned
 5628 2c6e 6960     		str	r1, [r5, #4]	@ unaligned
 5629 2c70 AA60     		str	r2, [r5, #8]	@ unaligned
 5630 2c72 EB60     		str	r3, [r5, #12]	@ unaligned
 5631 2c74 2388     		ldrh	r3, [r4]	@ unaligned
 5632 2c76 2B82     		strh	r3, [r5, #16]	@ unaligned
 800:..\src/command_processing.c ****                         break;
 5633              		.loc 1 800 0
 5634 2c78 64E0     		b	.L253
 5635              	.L257:
 801:..\src/command_processing.c ****                         case 2:
 802:..\src/command_processing.c ****                             strcat(aux_str, " AIR CHAMBERS\0");
 5636              		.loc 1 802 0
 5637 2c7a 07F13803 		add	r3, r7, #56
 5638 2c7e 183B     		subs	r3, r3, #24
 5639 2c80 1846     		mov	r0, r3
 5640 2c82 FFF7FEFF 		bl	strlen
 5641 2c86 0346     		mov	r3, r0
 5642 2c88 1A46     		mov	r2, r3
 5643 2c8a 07F13803 		add	r3, r7, #56
 5644 2c8e 183B     		subs	r3, r3, #24
 5645 2c90 1344     		add	r3, r3, r2
 5646 2c92 1D4A     		ldr	r2, .L304+56
 5647 2c94 1C46     		mov	r4, r3
 5648 2c96 1346     		mov	r3, r2
 5649 2c98 07CB     		ldmia	r3!, {r0, r1, r2}
 5650 2c9a 2060     		str	r0, [r4]	@ unaligned
 5651 2c9c 6160     		str	r1, [r4, #4]	@ unaligned
 5652 2c9e A260     		str	r2, [r4, #8]	@ unaligned
 5653 2ca0 1B88     		ldrh	r3, [r3]	@ unaligned
 5654 2ca2 A381     		strh	r3, [r4, #12]	@ unaligned
 803:..\src/command_processing.c ****                         break;
 5655              		.loc 1 803 0
 5656 2ca4 4EE0     		b	.L253
 5657              	.L258:
 804:..\src/command_processing.c ****                         case 3:
 805:..\src/command_processing.c ****                             strcat(aux_str, " OTTOBOCK WRIST\0");
 5658              		.loc 1 805 0
 5659 2ca6 07F13803 		add	r3, r7, #56
 5660 2caa 183B     		subs	r3, r3, #24
 5661 2cac 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 133


 5662 2cae FFF7FEFF 		bl	strlen
 5663 2cb2 0346     		mov	r3, r0
 5664 2cb4 1A46     		mov	r2, r3
 5665 2cb6 07F13803 		add	r3, r7, #56
 5666 2cba 183B     		subs	r3, r3, #24
 5667 2cbc 1344     		add	r3, r3, r2
 5668 2cbe 134A     		ldr	r2, .L304+60
 5669 2cc0 1C46     		mov	r4, r3
 5670 2cc2 1546     		mov	r5, r2
 5671 2cc4 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5672 2cc6 2060     		str	r0, [r4]	@ unaligned
 5673 2cc8 6160     		str	r1, [r4, #4]	@ unaligned
 5674 2cca A260     		str	r2, [r4, #8]	@ unaligned
 5675 2ccc E360     		str	r3, [r4, #12]	@ unaligned
 806:..\src/command_processing.c ****                         break;
 5676              		.loc 1 806 0
 5677 2cce 39E0     		b	.L253
 5678              	.L305:
 5679              		.align	2
 5680              	.L304:
 5681 2cd0 EC000000 		.word	.LC106
 5682 2cd4 F4000000 		.word	.LC107
 5683 2cd8 04010000 		.word	.LC108
 5684 2cdc 18010000 		.word	.LC109
 5685 2ce0 28010000 		.word	.LC110
 5686 2ce4 30010000 		.word	.LC111
 5687 2ce8 38010000 		.word	.LC112
 5688 2cec 48010000 		.word	.LC113
 5689 2cf0 50010000 		.word	.LC114
 5690 2cf4 58010000 		.word	.LC115
 5691 2cf8 70010000 		.word	.LC116
 5692 2cfc 88010000 		.word	.LC117
 5693 2d00 9C010000 		.word	.LC118
 5694 2d04 AC010000 		.word	.LC119
 5695 2d08 C0010000 		.word	.LC120
 5696 2d0c D0010000 		.word	.LC121
 5697              	.L259:
 807:..\src/command_processing.c ****                         case 4:
 808:..\src/command_processing.c ****                             strcat(aux_str, " SOFTHAND 2 MOTORS\0");
 5698              		.loc 1 808 0
 5699 2d10 07F13803 		add	r3, r7, #56
 5700 2d14 183B     		subs	r3, r3, #24
 5701 2d16 1846     		mov	r0, r3
 5702 2d18 FFF7FEFF 		bl	strlen
 5703 2d1c 0346     		mov	r3, r0
 5704 2d1e 1A46     		mov	r2, r3
 5705 2d20 07F13803 		add	r3, r7, #56
 5706 2d24 183B     		subs	r3, r3, #24
 5707 2d26 1344     		add	r3, r3, r2
 5708 2d28 714A     		ldr	r2, .L306
 5709 2d2a 1D46     		mov	r5, r3
 5710 2d2c 1446     		mov	r4, r2
 5711 2d2e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5712 2d30 2860     		str	r0, [r5]	@ unaligned
 5713 2d32 6960     		str	r1, [r5, #4]	@ unaligned
 5714 2d34 AA60     		str	r2, [r5, #8]	@ unaligned
 5715 2d36 EB60     		str	r3, [r5, #12]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 134


 5716 2d38 2388     		ldrh	r3, [r4]	@ unaligned
 5717 2d3a A278     		ldrb	r2, [r4, #2]
 5718 2d3c 2B82     		strh	r3, [r5, #16]	@ unaligned
 5719 2d3e 1346     		mov	r3, r2
 5720 2d40 AB74     		strb	r3, [r5, #18]
 809:..\src/command_processing.c ****                         break;
 5721              		.loc 1 809 0
 5722 2d42 00BF     		nop
 5723              	.L253:
 810:..\src/command_processing.c ****                     }
 811:..\src/command_processing.c ****                     break;
 5724              		.loc 1 811 0
 5725 2d44 B9E0     		b	.L284
 5726              	.L207:
 812:..\src/command_processing.c ****                 case 11:    // fsm activation mode menu
 813:..\src/command_processing.c ****                     switch(*m_addr){
 5727              		.loc 1 813 0
 5728 2d46 07F5B053 		add	r3, r7, #5632
 5729 2d4a 03F10803 		add	r3, r3, #8
 5730 2d4e 1B68     		ldr	r3, [r3]
 5731 2d50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5732 2d52 002B     		cmp	r3, #0
 5733 2d54 02D0     		beq	.L261
 5734 2d56 012B     		cmp	r3, #1
 5735 2d58 37D0     		beq	.L262
 814:..\src/command_processing.c ****                         case 0:
 815:..\src/command_processing.c ****                             if (c_mem.dev.dev_type == SOFTHAND_2_MOTORS){
 816:..\src/command_processing.c ****                                 strcat(aux_str, " Fast:syn2, Slow:syn1\0");
 817:..\src/command_processing.c ****                             }
 818:..\src/command_processing.c ****                             else {
 819:..\src/command_processing.c ****                                 strcat(aux_str, " Fast:wrist,Slow:hand\0");
 820:..\src/command_processing.c ****                             }                            
 821:..\src/command_processing.c ****                         break;
 822:..\src/command_processing.c ****                         case 1:
 823:..\src/command_processing.c ****                             if (c_mem.dev.dev_type == SOFTHAND_2_MOTORS){
 824:..\src/command_processing.c ****                                 strcat(aux_str, " Slow:syn2, Fast:syn1\0");
 825:..\src/command_processing.c ****                             }
 826:..\src/command_processing.c ****                             else {
 827:..\src/command_processing.c ****                                 strcat(aux_str, " Slow:wrist,Fast:hand\0");
 828:..\src/command_processing.c ****                             }
 829:..\src/command_processing.c ****                         break;
 830:..\src/command_processing.c ****                     }
 831:..\src/command_processing.c ****                     break;
 5736              		.loc 1 831 0
 5737 2d5a AFE0     		b	.L195
 5738              	.L261:
 815:..\src/command_processing.c ****                                 strcat(aux_str, " Fast:syn2, Slow:syn1\0");
 5739              		.loc 1 815 0
 5740 2d5c 654B     		ldr	r3, .L306+4
 5741 2d5e 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 5742 2d62 042B     		cmp	r3, #4
 5743 2d64 18D1     		bne	.L263
 816:..\src/command_processing.c ****                             }
 5744              		.loc 1 816 0
 5745 2d66 07F13803 		add	r3, r7, #56
 5746 2d6a 183B     		subs	r3, r3, #24
 5747 2d6c 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 135


 5748 2d6e FFF7FEFF 		bl	strlen
 5749 2d72 0346     		mov	r3, r0
 5750 2d74 1A46     		mov	r2, r3
 5751 2d76 07F13803 		add	r3, r7, #56
 5752 2d7a 183B     		subs	r3, r3, #24
 5753 2d7c 1344     		add	r3, r3, r2
 5754 2d7e 5E4A     		ldr	r2, .L306+8
 5755 2d80 1D46     		mov	r5, r3
 5756 2d82 1446     		mov	r4, r2
 5757 2d84 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5758 2d86 2860     		str	r0, [r5]	@ unaligned
 5759 2d88 6960     		str	r1, [r5, #4]	@ unaligned
 5760 2d8a AA60     		str	r2, [r5, #8]	@ unaligned
 5761 2d8c EB60     		str	r3, [r5, #12]	@ unaligned
 5762 2d8e 2068     		ldr	r0, [r4]	@ unaligned
 5763 2d90 2861     		str	r0, [r5, #16]	@ unaligned
 5764 2d92 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5765 2d94 AB82     		strh	r3, [r5, #20]	@ unaligned
 821:..\src/command_processing.c ****                         case 1:
 5766              		.loc 1 821 0
 5767 2d96 4FE0     		b	.L260
 5768              	.L263:
 819:..\src/command_processing.c ****                             }                            
 5769              		.loc 1 819 0
 5770 2d98 07F13803 		add	r3, r7, #56
 5771 2d9c 183B     		subs	r3, r3, #24
 5772 2d9e 1846     		mov	r0, r3
 5773 2da0 FFF7FEFF 		bl	strlen
 5774 2da4 0346     		mov	r3, r0
 5775 2da6 1A46     		mov	r2, r3
 5776 2da8 07F13803 		add	r3, r7, #56
 5777 2dac 183B     		subs	r3, r3, #24
 5778 2dae 1344     		add	r3, r3, r2
 5779 2db0 524A     		ldr	r2, .L306+12
 5780 2db2 1D46     		mov	r5, r3
 5781 2db4 1446     		mov	r4, r2
 5782 2db6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5783 2db8 2860     		str	r0, [r5]	@ unaligned
 5784 2dba 6960     		str	r1, [r5, #4]	@ unaligned
 5785 2dbc AA60     		str	r2, [r5, #8]	@ unaligned
 5786 2dbe EB60     		str	r3, [r5, #12]	@ unaligned
 5787 2dc0 2068     		ldr	r0, [r4]	@ unaligned
 5788 2dc2 2861     		str	r0, [r5, #16]	@ unaligned
 5789 2dc4 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5790 2dc6 AB82     		strh	r3, [r5, #20]	@ unaligned
 821:..\src/command_processing.c ****                         case 1:
 5791              		.loc 1 821 0
 5792 2dc8 36E0     		b	.L260
 5793              	.L262:
 823:..\src/command_processing.c ****                                 strcat(aux_str, " Slow:syn2, Fast:syn1\0");
 5794              		.loc 1 823 0
 5795 2dca 4A4B     		ldr	r3, .L306+4
 5796 2dcc 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 5797 2dd0 042B     		cmp	r3, #4
 5798 2dd2 18D1     		bne	.L265
 824:..\src/command_processing.c ****                             }
 5799              		.loc 1 824 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 136


 5800 2dd4 07F13803 		add	r3, r7, #56
 5801 2dd8 183B     		subs	r3, r3, #24
 5802 2dda 1846     		mov	r0, r3
 5803 2ddc FFF7FEFF 		bl	strlen
 5804 2de0 0346     		mov	r3, r0
 5805 2de2 1A46     		mov	r2, r3
 5806 2de4 07F13803 		add	r3, r7, #56
 5807 2de8 183B     		subs	r3, r3, #24
 5808 2dea 1344     		add	r3, r3, r2
 5809 2dec 444A     		ldr	r2, .L306+16
 5810 2dee 1D46     		mov	r5, r3
 5811 2df0 1446     		mov	r4, r2
 5812 2df2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5813 2df4 2860     		str	r0, [r5]	@ unaligned
 5814 2df6 6960     		str	r1, [r5, #4]	@ unaligned
 5815 2df8 AA60     		str	r2, [r5, #8]	@ unaligned
 5816 2dfa EB60     		str	r3, [r5, #12]	@ unaligned
 5817 2dfc 2068     		ldr	r0, [r4]	@ unaligned
 5818 2dfe 2861     		str	r0, [r5, #16]	@ unaligned
 5819 2e00 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5820 2e02 AB82     		strh	r3, [r5, #20]	@ unaligned
 829:..\src/command_processing.c ****                     }
 5821              		.loc 1 829 0
 5822 2e04 17E0     		b	.L285
 5823              	.L265:
 827:..\src/command_processing.c ****                             }
 5824              		.loc 1 827 0
 5825 2e06 07F13803 		add	r3, r7, #56
 5826 2e0a 183B     		subs	r3, r3, #24
 5827 2e0c 1846     		mov	r0, r3
 5828 2e0e FFF7FEFF 		bl	strlen
 5829 2e12 0346     		mov	r3, r0
 5830 2e14 1A46     		mov	r2, r3
 5831 2e16 07F13803 		add	r3, r7, #56
 5832 2e1a 183B     		subs	r3, r3, #24
 5833 2e1c 1344     		add	r3, r3, r2
 5834 2e1e 394A     		ldr	r2, .L306+20
 5835 2e20 1D46     		mov	r5, r3
 5836 2e22 1446     		mov	r4, r2
 5837 2e24 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5838 2e26 2860     		str	r0, [r5]	@ unaligned
 5839 2e28 6960     		str	r1, [r5, #4]	@ unaligned
 5840 2e2a AA60     		str	r2, [r5, #8]	@ unaligned
 5841 2e2c EB60     		str	r3, [r5, #12]	@ unaligned
 5842 2e2e 2068     		ldr	r0, [r4]	@ unaligned
 5843 2e30 2861     		str	r0, [r5, #16]	@ unaligned
 5844 2e32 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5845 2e34 AB82     		strh	r3, [r5, #20]	@ unaligned
 5846              	.L285:
 829:..\src/command_processing.c ****                     }
 5847              		.loc 1 829 0
 5848 2e36 00BF     		nop
 5849              	.L260:
 5850              		.loc 1 831 0 discriminator 13
 5851 2e38 40E0     		b	.L195
 5852              	.L208:
 832:..\src/command_processing.c ****                 case 12:    // wrist direction association menu
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 137


 833:..\src/command_processing.c ****                     switch(*m_addr){
 5853              		.loc 1 833 0
 5854 2e3a 07F5B053 		add	r3, r7, #5632
 5855 2e3e 03F10803 		add	r3, r3, #8
 5856 2e42 1B68     		ldr	r3, [r3]
 5857 2e44 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5858 2e46 002B     		cmp	r3, #0
 5859 2e48 02D0     		beq	.L268
 5860 2e4a 012B     		cmp	r3, #1
 5861 2e4c 17D0     		beq	.L269
 834:..\src/command_processing.c ****                         case 0:
 835:..\src/command_processing.c ****                             strcat(aux_str, " Close:CW, Open:CCW\0");
 836:..\src/command_processing.c ****                         break;
 837:..\src/command_processing.c ****                         case 1:
 838:..\src/command_processing.c ****                             strcat(aux_str, " Close:CCW, Open:CW\0");
 839:..\src/command_processing.c ****                         break;
 840:..\src/command_processing.c ****                     }
 841:..\src/command_processing.c ****                     break;
 5862              		.loc 1 841 0
 5863 2e4e 35E0     		b	.L195
 5864              	.L268:
 835:..\src/command_processing.c ****                         break;
 5865              		.loc 1 835 0
 5866 2e50 07F13803 		add	r3, r7, #56
 5867 2e54 183B     		subs	r3, r3, #24
 5868 2e56 1846     		mov	r0, r3
 5869 2e58 FFF7FEFF 		bl	strlen
 5870 2e5c 0346     		mov	r3, r0
 5871 2e5e 1A46     		mov	r2, r3
 5872 2e60 07F13803 		add	r3, r7, #56
 5873 2e64 183B     		subs	r3, r3, #24
 5874 2e66 1344     		add	r3, r3, r2
 5875 2e68 274A     		ldr	r2, .L306+24
 5876 2e6a 1D46     		mov	r5, r3
 5877 2e6c 1446     		mov	r4, r2
 5878 2e6e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5879 2e70 2860     		str	r0, [r5]	@ unaligned
 5880 2e72 6960     		str	r1, [r5, #4]	@ unaligned
 5881 2e74 AA60     		str	r2, [r5, #8]	@ unaligned
 5882 2e76 EB60     		str	r3, [r5, #12]	@ unaligned
 5883 2e78 2068     		ldr	r0, [r4]	@ unaligned
 5884 2e7a 2861     		str	r0, [r5, #16]	@ unaligned
 836:..\src/command_processing.c ****                         case 1:
 5885              		.loc 1 836 0
 5886 2e7c 16E0     		b	.L267
 5887              	.L269:
 838:..\src/command_processing.c ****                         break;
 5888              		.loc 1 838 0
 5889 2e7e 07F13803 		add	r3, r7, #56
 5890 2e82 183B     		subs	r3, r3, #24
 5891 2e84 1846     		mov	r0, r3
 5892 2e86 FFF7FEFF 		bl	strlen
 5893 2e8a 0346     		mov	r3, r0
 5894 2e8c 1A46     		mov	r2, r3
 5895 2e8e 07F13803 		add	r3, r7, #56
 5896 2e92 183B     		subs	r3, r3, #24
 5897 2e94 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 138


 5898 2e96 1D4A     		ldr	r2, .L306+28
 5899 2e98 1D46     		mov	r5, r3
 5900 2e9a 1446     		mov	r4, r2
 5901 2e9c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5902 2e9e 2860     		str	r0, [r5]	@ unaligned
 5903 2ea0 6960     		str	r1, [r5, #4]	@ unaligned
 5904 2ea2 AA60     		str	r2, [r5, #8]	@ unaligned
 5905 2ea4 EB60     		str	r3, [r5, #12]	@ unaligned
 5906 2ea6 2068     		ldr	r0, [r4]	@ unaligned
 5907 2ea8 2861     		str	r0, [r5, #16]	@ unaligned
 839:..\src/command_processing.c ****                     }
 5908              		.loc 1 839 0
 5909 2eaa 00BF     		nop
 5910              	.L267:
 5911              		.loc 1 841 0
 5912 2eac 06E0     		b	.L195
 5913              	.L281:
 691:..\src/command_processing.c ****                 case 2:     // control mode menu
 5914              		.loc 1 691 0
 5915 2eae 00BF     		nop
 5916 2eb0 04E0     		b	.L195
 5917              	.L282:
 707:..\src/command_processing.c ****                 case 3:     // yes/no menu
 5918              		.loc 1 707 0
 5919 2eb2 00BF     		nop
 5920 2eb4 02E0     		b	.L195
 5921              	.L283:
 751:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 5922              		.loc 1 751 0
 5923 2eb6 00BF     		nop
 5924 2eb8 00E0     		b	.L195
 5925              	.L284:
 811:..\src/command_processing.c ****                 case 11:    // fsm activation mode menu
 5926              		.loc 1 811 0
 5927 2eba 00BF     		nop
 5928              	.L195:
 842:..\src/command_processing.c ****             }
 843:..\src/command_processing.c ****             //Recomputes string lenght
 844:..\src/command_processing.c ****             string_lenght = strlen(aux_str)+1;
 5929              		.loc 1 844 0
 5930 2ebc 07F13803 		add	r3, r7, #56
 5931 2ec0 183B     		subs	r3, r3, #24
 5932 2ec2 1846     		mov	r0, r3
 5933 2ec4 FFF7FEFF 		bl	strlen
 5934 2ec8 0346     		mov	r3, r0
 5935 2eca DBB2     		uxtb	r3, r3
 5936 2ecc 0133     		adds	r3, r3, #1
 5937 2ece 07F5B052 		add	r2, r7, #5632
 5938 2ed2 02F11202 		add	r2, r2, #18
 5939 2ed6 1370     		strb	r3, [r2]
 5940              	.L194:
 845:..\src/command_processing.c ****         }
 846:..\src/command_processing.c **** 
 847:..\src/command_processing.c ****         // Add parameter string to packet
 848:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 5941              		.loc 1 848 0
 5942 2ed8 07F5B053 		add	r3, r7, #5632
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 139


 5943 2edc 03F11203 		add	r3, r3, #18
 5944 2ee0 1B78     		ldrb	r3, [r3]
 5945 2ee2 07F5B052 		add	r2, r7, #5632
 5946 2ee6 02F11702 		add	r2, r2, #23
 5947 2eea 1370     		strb	r3, [r2]
 5948 2eec 56E0     		b	.L270
 5949              	.L307:
 5950 2eee 00BF     		.align	2
 5951              	.L306:
 5952 2ef0 E4010000 		.word	.LC122
 5953 2ef4 00000000 		.word	c_mem
 5954 2ef8 F8010000 		.word	.LC123
 5955 2efc 10020000 		.word	.LC124
 5956 2f00 28020000 		.word	.LC125
 5957 2f04 40020000 		.word	.LC126
 5958 2f08 58020000 		.word	.LC127
 5959 2f0c 70020000 		.word	.LC128
 5960              	.L271:
 849:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 5961              		.loc 1 849 0 discriminator 3
 5962 2f10 07F5B053 		add	r3, r7, #5632
 5963 2f14 03F11503 		add	r3, r3, #21
 5964 2f18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5965 2f1a 3222     		movs	r2, #50
 5966 2f1c 02FB03F3 		mul	r3, r2, r3
 5967 2f20 1A1D     		adds	r2, r3, #4
 5968 2f22 07F5B053 		add	r3, r7, #5632
 5969 2f26 03F11303 		add	r3, r3, #19
 5970 2f2a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5971 2f2c 07F5B053 		add	r3, r7, #5632
 5972 2f30 03F11503 		add	r3, r3, #21
 5973 2f34 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5974 2f36 07F11803 		add	r3, r7, #24
 5975 2f3a 143B     		subs	r3, r3, #20
 5976 2f3c 1B68     		ldr	r3, [r3]
 5977 2f3e 0344     		add	r3, r3, r0
 5978 2f40 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5979 2f42 03FB01F3 		mul	r3, r3, r1
 5980 2f46 1A44     		add	r2, r2, r3
 5981 2f48 07F5B053 		add	r3, r7, #5632
 5982 2f4c 03F11203 		add	r3, r3, #18
 5983 2f50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5984 2f52 1A44     		add	r2, r2, r3
 5985 2f54 07F5B053 		add	r3, r7, #5632
 5986 2f58 03F11703 		add	r3, r3, #23
 5987 2f5c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5988 2f5e D21A     		subs	r2, r2, r3
 5989 2f60 07F5B053 		add	r3, r7, #5632
 5990 2f64 03F11203 		add	r3, r3, #18
 5991 2f68 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5992 2f6a 07F5B053 		add	r3, r7, #5632
 5993 2f6e 03F11703 		add	r3, r3, #23
 5994 2f72 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5995 2f74 C91A     		subs	r1, r1, r3
 5996 2f76 07F13803 		add	r3, r7, #56
 5997 2f7a 183B     		subs	r3, r3, #24
 5998 2f7c 595C     		ldrb	r1, [r3, r1]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 140


 5999 2f7e 07F15803 		add	r3, r7, #88
 6000 2f82 043B     		subs	r3, r3, #4
 6001 2f84 9954     		strb	r1, [r3, r2]
 848:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 6002              		.loc 1 848 0 discriminator 3
 6003 2f86 07F5B053 		add	r3, r7, #5632
 6004 2f8a 03F11703 		add	r3, r3, #23
 6005 2f8e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6006 2f90 013B     		subs	r3, r3, #1
 6007 2f92 07F5B052 		add	r2, r7, #5632
 6008 2f96 02F11702 		add	r2, r2, #23
 6009 2f9a 1370     		strb	r3, [r2]
 6010              	.L270:
 848:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 6011              		.loc 1 848 0 is_stmt 0 discriminator 1
 6012 2f9c 07F5B053 		add	r3, r7, #5632
 6013 2fa0 03F11703 		add	r3, r3, #23
 6014 2fa4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6015 2fa6 002B     		cmp	r3, #0
 6016 2fa8 B2D1     		bne	.L271
 850:..\src/command_processing.c ****         //The following byte indicates the number of menus at the end of the packet to send
 851:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 6017              		.loc 1 851 0 is_stmt 1
 6018 2faa 07F5B053 		add	r3, r7, #5632
 6019 2fae 03F11503 		add	r3, r3, #21
 6020 2fb2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6021 2fb4 07F11803 		add	r3, r7, #24
 6022 2fb8 103B     		subs	r3, r3, #16
 6023 2fba 1B68     		ldr	r3, [r3]
 6024 2fbc 1344     		add	r3, r3, r2
 6025 2fbe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6026 2fc0 002B     		cmp	r3, #0
 6027 2fc2 3CD1     		bne	.L272
 852:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght] = NUM_MEN
 6028              		.loc 1 852 0
 6029 2fc4 07F5B053 		add	r3, r7, #5632
 6030 2fc8 03F11503 		add	r3, r3, #21
 6031 2fcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6032 2fce 3222     		movs	r2, #50
 6033 2fd0 02FB03F3 		mul	r3, r2, r3
 6034 2fd4 1A1D     		adds	r2, r3, #4
 6035 2fd6 07F5B053 		add	r3, r7, #5632
 6036 2fda 03F11303 		add	r3, r3, #19
 6037 2fde 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6038 2fe0 07F5B053 		add	r3, r7, #5632
 6039 2fe4 03F11503 		add	r3, r3, #21
 6040 2fe8 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6041 2fea 07F11803 		add	r3, r7, #24
 6042 2fee 143B     		subs	r3, r3, #20
 6043 2ff0 1B68     		ldr	r3, [r3]
 6044 2ff2 0344     		add	r3, r3, r0
 6045 2ff4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6046 2ff6 03FB01F3 		mul	r3, r3, r1
 6047 2ffa 1A44     		add	r2, r2, r3
 6048 2ffc 07F5B053 		add	r3, r7, #5632
 6049 3000 03F11203 		add	r3, r3, #18
 6050 3004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 141


 6051 3006 1A44     		add	r2, r2, r3
 6052 3008 07F5B053 		add	r3, r7, #5632
 6053 300c 03F11403 		add	r3, r3, #20
 6054 3010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6055 3012 07F5B151 		add	r1, r7, #5664
 6056 3016 01F11001 		add	r1, r1, #16
 6057 301a 0968     		ldr	r1, [r1]
 6058 301c 0B44     		add	r3, r3, r1
 6059 301e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6060 3020 07F15803 		add	r3, r7, #88
 6061 3024 043B     		subs	r3, r3, #4
 6062 3026 9954     		strb	r1, [r3, r2]
 853:..\src/command_processing.c ****             idx_menu = idx_menu + 1;
 6063              		.loc 1 853 0
 6064 3028 07F5B053 		add	r3, r7, #5632
 6065 302c 03F11403 		add	r3, r3, #20
 6066 3030 1B78     		ldrb	r3, [r3]
 6067 3032 0133     		adds	r3, r3, #1
 6068 3034 07F5B052 		add	r2, r7, #5632
 6069 3038 02F11402 		add	r2, r2, #20
 6070 303c 1370     		strb	r3, [r2]
 6071              	.L272:
 854:..\src/command_processing.c ****         }      
 855:..\src/command_processing.c ****         
 856:..\src/command_processing.c ****         // Add struct index after an empty bit
 857:..\src/command_processing.c ****         // Note: added here at the end of packets is transparent to old parameters retrieving versi
 858:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 6072              		.loc 1 858 0
 6073 303e 07F5B053 		add	r3, r7, #5632
 6074 3042 03F11503 		add	r3, r3, #21
 6075 3046 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6076 3048 07F11803 		add	r3, r7, #24
 6077 304c 103B     		subs	r3, r3, #16
 6078 304e 1B68     		ldr	r3, [r3]
 6079 3050 1344     		add	r3, r3, r2
 6080 3052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6081 3054 002B     		cmp	r3, #0
 6082 3056 32D1     		bne	.L273
 859:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght + 2] = NUM
 6083              		.loc 1 859 0
 6084 3058 07F5B053 		add	r3, r7, #5632
 6085 305c 03F11503 		add	r3, r3, #21
 6086 3060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6087 3062 3222     		movs	r2, #50
 6088 3064 02FB03F3 		mul	r3, r2, r3
 6089 3068 1A1D     		adds	r2, r3, #4
 6090 306a 07F5B053 		add	r3, r7, #5632
 6091 306e 03F11303 		add	r3, r3, #19
 6092 3072 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6093 3074 07F5B053 		add	r3, r7, #5632
 6094 3078 03F11503 		add	r3, r3, #21
 6095 307c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6096 307e 07F11803 		add	r3, r7, #24
 6097 3082 143B     		subs	r3, r3, #20
 6098 3084 1B68     		ldr	r3, [r3]
 6099 3086 0344     		add	r3, r3, r0
 6100 3088 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 142


 6101 308a 03FB01F3 		mul	r3, r3, r1
 6102 308e 1A44     		add	r2, r2, r3
 6103 3090 07F5B053 		add	r3, r7, #5632
 6104 3094 03F11203 		add	r3, r3, #18
 6105 3098 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6106 309a 1344     		add	r3, r3, r2
 6107 309c 9A1C     		adds	r2, r3, #2
 6108 309e 07F5B053 		add	r3, r7, #5632
 6109 30a2 03F11503 		add	r3, r3, #21
 6110 30a6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6111 30a8 07F11803 		add	r3, r7, #24
 6112 30ac 183B     		subs	r3, r3, #24
 6113 30ae 1B68     		ldr	r3, [r3]
 6114 30b0 0B44     		add	r3, r3, r1
 6115 30b2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6116 30b4 07F15803 		add	r3, r7, #88
 6117 30b8 043B     		subs	r3, r3, #4
 6118 30ba 9954     		strb	r1, [r3, r2]
 6119 30bc 31E0     		b	.L274
 6120              	.L273:
 860:..\src/command_processing.c ****         }
 861:..\src/command_processing.c ****         else {
 862:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght + 1] = NUM
 6121              		.loc 1 862 0
 6122 30be 07F5B053 		add	r3, r7, #5632
 6123 30c2 03F11503 		add	r3, r3, #21
 6124 30c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6125 30c8 3222     		movs	r2, #50
 6126 30ca 02FB03F3 		mul	r3, r2, r3
 6127 30ce 1A1D     		adds	r2, r3, #4
 6128 30d0 07F5B053 		add	r3, r7, #5632
 6129 30d4 03F11303 		add	r3, r3, #19
 6130 30d8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6131 30da 07F5B053 		add	r3, r7, #5632
 6132 30de 03F11503 		add	r3, r3, #21
 6133 30e2 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6134 30e4 07F11803 		add	r3, r7, #24
 6135 30e8 143B     		subs	r3, r3, #20
 6136 30ea 1B68     		ldr	r3, [r3]
 6137 30ec 0344     		add	r3, r3, r0
 6138 30ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6139 30f0 03FB01F3 		mul	r3, r3, r1
 6140 30f4 1A44     		add	r2, r2, r3
 6141 30f6 07F5B053 		add	r3, r7, #5632
 6142 30fa 03F11203 		add	r3, r3, #18
 6143 30fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6144 3100 1344     		add	r3, r3, r2
 6145 3102 5A1C     		adds	r2, r3, #1
 6146 3104 07F5B053 		add	r3, r7, #5632
 6147 3108 03F11503 		add	r3, r3, #21
 6148 310c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6149 310e 07F11803 		add	r3, r7, #24
 6150 3112 183B     		subs	r3, r3, #24
 6151 3114 1B68     		ldr	r3, [r3]
 6152 3116 0B44     		add	r3, r3, r1
 6153 3118 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6154 311a 07F15803 		add	r3, r7, #88
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 143


 6155 311e 043B     		subs	r3, r3, #4
 6156 3120 9954     		strb	r1, [r3, r2]
 6157              	.L274:
 392:..\src/command_processing.c ****         
 6158              		.loc 1 392 0 discriminator 2
 6159 3122 07F5B053 		add	r3, r7, #5632
 6160 3126 03F11503 		add	r3, r3, #21
 6161 312a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6162 312c 0133     		adds	r3, r3, #1
 6163 312e 07F5B052 		add	r2, r7, #5632
 6164 3132 02F11502 		add	r2, r2, #21
 6165 3136 1370     		strb	r3, [r2]
 6166              	.L70:
 392:..\src/command_processing.c ****         
 6167              		.loc 1 392 0 is_stmt 0 discriminator 1
 6168 3138 07F5B053 		add	r3, r7, #5632
 6169 313c 03F11503 		add	r3, r3, #21
 6170 3140 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6171 3142 4C2B     		cmp	r3, #76
 6172 3144 7CF6D3AF 		bls	.L275
 863:..\src/command_processing.c ****         }
 864:..\src/command_processing.c ****     }
 865:..\src/command_processing.c **** 
 866:..\src/command_processing.c ****     // Add menu
 867:..\src/command_processing.c ****     for (j = 0; j < NUM_OF_DEV_PARAM_MENUS; j++) {
 6173              		.loc 1 867 0 is_stmt 1
 6174 3148 0023     		movs	r3, #0
 6175 314a 07F5B052 		add	r2, r7, #5632
 6176 314e 02F11602 		add	r2, r2, #22
 6177 3152 1370     		strb	r3, [r2]
 6178 3154 71E0     		b	.L276
 6179              	.L279:
 868:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 6180              		.loc 1 868 0
 6181 3156 07F5B053 		add	r3, r7, #5632
 6182 315a 03F11603 		add	r3, r3, #22
 6183 315e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6184 3160 9B00     		lsls	r3, r3, #2
 6185 3162 07F5B152 		add	r2, r7, #5664
 6186 3166 02F11C02 		add	r2, r2, #28
 6187 316a 1268     		ldr	r2, [r2]
 6188 316c 1344     		add	r3, r3, r2
 6189 316e 1B68     		ldr	r3, [r3]
 6190 3170 1846     		mov	r0, r3
 6191 3172 FFF7FEFF 		bl	strlen
 6192 3176 0346     		mov	r3, r0
 6193 3178 07F5B052 		add	r2, r7, #5632
 6194 317c 02F11202 		add	r2, r2, #18
 6195 3180 1370     		strb	r3, [r2]
 869:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 6196              		.loc 1 869 0
 6197 3182 07F5B053 		add	r3, r7, #5632
 6198 3186 03F11203 		add	r3, r3, #18
 6199 318a 1B78     		ldrb	r3, [r3]
 6200 318c 07F5B052 		add	r2, r7, #5632
 6201 3190 02F11702 		add	r2, r2, #23
 6202 3194 1370     		strb	r3, [r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 144


 6203 3196 3EE0     		b	.L277
 6204              	.L278:
 870:..\src/command_processing.c ****             packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + 2 + j*PARAM_MENU_SLOT + string_lenght -
 6205              		.loc 1 870 0 discriminator 3
 6206 3198 07F5B053 		add	r3, r7, #5632
 6207 319c 03F11603 		add	r3, r3, #22
 6208 31a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6209 31a2 9622     		movs	r2, #150
 6210 31a4 02FB03F3 		mul	r3, r2, r3
 6211 31a8 03F60C72 		addw	r2, r3, #3852
 6212 31ac 07F5B053 		add	r3, r7, #5632
 6213 31b0 03F11203 		add	r3, r3, #18
 6214 31b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6215 31b6 1A44     		add	r2, r2, r3
 6216 31b8 07F5B053 		add	r3, r7, #5632
 6217 31bc 03F11703 		add	r3, r3, #23
 6218 31c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6219 31c2 D21A     		subs	r2, r2, r3
 6220 31c4 07F5B053 		add	r3, r7, #5632
 6221 31c8 03F11603 		add	r3, r3, #22
 6222 31cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6223 31ce 9B00     		lsls	r3, r3, #2
 6224 31d0 07F5B151 		add	r1, r7, #5664
 6225 31d4 01F11C01 		add	r1, r1, #28
 6226 31d8 0968     		ldr	r1, [r1]
 6227 31da 0B44     		add	r3, r3, r1
 6228 31dc 1B68     		ldr	r3, [r3]
 6229 31de 07F5B051 		add	r1, r7, #5632
 6230 31e2 01F11201 		add	r1, r1, #18
 6231 31e6 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 6232 31e8 07F5B051 		add	r1, r7, #5632
 6233 31ec 01F11701 		add	r1, r1, #23
 6234 31f0 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 6235 31f2 411A     		subs	r1, r0, r1
 6236 31f4 0B44     		add	r3, r3, r1
 6237 31f6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6238 31f8 07F15803 		add	r3, r7, #88
 6239 31fc 043B     		subs	r3, r3, #4
 6240 31fe 9954     		strb	r1, [r3, r2]
 869:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 6241              		.loc 1 869 0 discriminator 3
 6242 3200 07F5B053 		add	r3, r7, #5632
 6243 3204 03F11703 		add	r3, r3, #23
 6244 3208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6245 320a 013B     		subs	r3, r3, #1
 6246 320c 07F5B052 		add	r2, r7, #5632
 6247 3210 02F11702 		add	r2, r2, #23
 6248 3214 1370     		strb	r3, [r2]
 6249              	.L277:
 869:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 6250              		.loc 1 869 0 is_stmt 0 discriminator 1
 6251 3216 07F5B053 		add	r3, r7, #5632
 6252 321a 03F11703 		add	r3, r3, #23
 6253 321e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6254 3220 002B     		cmp	r3, #0
 6255 3222 B9D1     		bne	.L278
 867:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 145


 6256              		.loc 1 867 0 is_stmt 1 discriminator 2
 6257 3224 07F5B053 		add	r3, r7, #5632
 6258 3228 03F11603 		add	r3, r3, #22
 6259 322c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6260 322e 0133     		adds	r3, r3, #1
 6261 3230 07F5B052 		add	r2, r7, #5632
 6262 3234 02F11602 		add	r2, r2, #22
 6263 3238 1370     		strb	r3, [r2]
 6264              	.L276:
 867:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 6265              		.loc 1 867 0 is_stmt 0 discriminator 1
 6266 323a 07F5B053 		add	r3, r7, #5632
 6267 323e 03F11603 		add	r3, r3, #22
 6268 3242 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6269 3244 0A2B     		cmp	r3, #10
 6270 3246 86D9     		bls	.L279
 871:..\src/command_processing.c ****     }
 872:..\src/command_processing.c ****     
 873:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
 6271              		.loc 1 873 0 is_stmt 1
 6272 3248 07F5B053 		add	r3, r7, #5632
 6273 324c 03F11003 		add	r3, r3, #16
 6274 3250 1B88     		ldrh	r3, [r3]
 6275 3252 5C1E     		subs	r4, r3, #1
 6276 3254 07F5B053 		add	r3, r7, #5632
 6277 3258 03F11003 		add	r3, r3, #16
 6278 325c 1B88     		ldrh	r3, [r3]	@ movhi
 6279 325e DBB2     		uxtb	r3, r3
 6280 3260 013B     		subs	r3, r3, #1
 6281 3262 DAB2     		uxtb	r2, r3
 6282 3264 07F15803 		add	r3, r7, #88
 6283 3268 043B     		subs	r3, r3, #4
 6284 326a 1146     		mov	r1, r2
 6285 326c 1846     		mov	r0, r3
 6286 326e FFF7FEFF 		bl	LCRChecksum
 6287 3272 0346     		mov	r3, r0
 6288 3274 1A46     		mov	r2, r3
 6289 3276 07F15803 		add	r3, r7, #88
 6290 327a 043B     		subs	r3, r3, #4
 6291 327c 1A55     		strb	r2, [r3, r4]
 874:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 6292              		.loc 1 874 0
 6293 327e 07F5B053 		add	r3, r7, #5632
 6294 3282 03F11003 		add	r3, r3, #16
 6295 3286 1A88     		ldrh	r2, [r3]
 6296 3288 07F15803 		add	r3, r7, #88
 6297 328c 043B     		subs	r3, r3, #4
 6298 328e 1146     		mov	r1, r2
 6299 3290 1846     		mov	r0, r3
 6300 3292 FFF7FEFF 		bl	commWrite
 875:..\src/command_processing.c **** }
 6301              		.loc 1 875 0
 6302 3296 00BF     		nop
 6303 3298 07F5B057 		add	r7, r7, #5632
 6304 329c 1C37     		adds	r7, r7, #28
 6305              		.cfi_def_cfa_offset 20
 6306 329e BD46     		mov	sp, r7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 146


 6307              		.cfi_def_cfa_register 13
 6308              		@ sp needed
 6309 32a0 F0BD     		pop	{r4, r5, r6, r7, pc}
 6310              		.cfi_endproc
 6311              	.LFE67:
 6312              		.size	get_param_list, .-get_param_list
 6313 32a2 00BF     		.section	.rodata
 6314 0285 000000   		.align	2
 6315              	.LC130:
 6316 0288 30202D3E 		.ascii	"0 -> None\0121 -> Low (%u us delay for each 8-bit r"
 6316      204E6F6E 
 6316      650A3120 
 6316      2D3E204C 
 6316      6F772028 
 6317 02b8 65676973 		.ascii	"egister read)\0122 -> High (%u us delay for each 8-"
 6317      74657220 
 6317      72656164 
 6317      290A3220 
 6317      2D3E2048 
 6318 02e8 62697420 		.ascii	"bit register read)\012\000"
 6318      72656769 
 6318      73746572 
 6318      20726561 
 6318      64290A00 
 6319              		.align	2
 6320              	.LC131:
 6321 02fc 30202D3E 		.ascii	"0 -> Fast:syn2, Slow:syn1\0121 -> Slow:syn2, Fast:s"
 6321      20466173 
 6321      743A7379 
 6321      6E322C20 
 6321      536C6F77 
 6322 032c 796E310A 		.ascii	"yn1\012\000"
 6322      00
 6323 0331 000000   		.align	2
 6324              	.LC132:
 6325 0334 30202D3E 		.ascii	"0 -> Fast:wrist,Slow:hand\0121 -> Slow:wrist,Fast:h"
 6325      20466173 
 6325      743A7772 
 6325      6973742C 
 6325      536C6F77 
 6326 0364 616E640A 		.ascii	"and\012\000"
 6326      00
 6327 0369 000000   		.align	2
 6328              	.LC133:
 6329 036c 30202D3E 		.ascii	"0 -> Usb\0121 -> Handle\0122 -> EMG proportional\012"
 6329      20557362 
 6329      0A31202D 
 6329      3E204861 
 6329      6E646C65 
 6330 0397 33202D3E 		.ascii	"3 -> EMG Integral\0124 -> EMG FCFS\0125 -> EMG FCFS"
 6330      20454D47 
 6330      20496E74 
 6330      65677261 
 6330      6C0A3420 
 6331 03c4 20416476 		.ascii	" Advanced\0126 -> Joystick\0127 -> EMG proportional"
 6331      616E6365 
 6331      640A3620 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 147


 6331      2D3E204A 
 6331      6F797374 
 6332 03f1 204E430A 		.ascii	" NC\012\000"
 6332      00
 6333 03f6 0000     		.align	2
 6334              	.LC134:
 6335 03f8 30202D3E 		.ascii	"0 -> Position\0121 -> PWM\0122 -> Current\0123 -> P"
 6335      20506F73 
 6335      6974696F 
 6335      6E0A3120 
 6335      2D3E2050 
 6336 0422 6F736974 		.ascii	"osition and Current\012\000"
 6336      696F6E20 
 6336      616E6420 
 6336      43757272 
 6336      656E740A 
 6337 0437 00       		.align	2
 6338              	.LC135:
 6339 0438 30202D3E 		.ascii	"0 -> Deactivate [NO]\0121 -> Activate [YES]\012\000"
 6339      20446561 
 6339      63746976 
 6339      61746520 
 6339      5B4E4F5D 
 6340 0462 0000     		.align	2
 6341              	.LC136:
 6342 0464 30202D3E 		.ascii	"0 -> Right\0121 -> Left\012\000"
 6342      20526967 
 6342      68740A31 
 6342      202D3E20 
 6342      4C656674 
 6343 047a 0000     		.align	2
 6344              	.LC137:
 6345 047c 30202D3E 		.ascii	"0 -> OFF\0121 -> ON\012The board will reset\012\000"
 6345      204F4646 
 6345      0A31202D 
 6345      3E204F4E 
 6345      0A546865 
 6346 04a3 00       		.align	2
 6347              	.LC138:
 6348 04a4 30202D3E 		.ascii	"0 -> None\0121 -> SD/RTC board\0122 -> WiFi board ["
 6348      204E6F6E 
 6348      650A3120 
 6348      2D3E2053 
 6348      442F5254 
 6349 04d1 4E2F415D 		.ascii	"N/A]\0123 -> Other [N/A]\012The board will reset\012"
 6349      0A33202D 
 6349      3E204F74 
 6349      68657220 
 6349      5B4E2F41 
 6350 04fc 00       		.ascii	"\000"
 6351 04fd 000000   		.align	2
 6352              	.LC139:
 6353 0500 30202D3E 		.ascii	"0 -> Generic user\0121 -> Maria\0122 -> Roza\012The"
 6353      2047656E 
 6353      65726963 
 6353      20757365 
 6353      720A3120 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 148


 6354 052a 20626F61 		.ascii	" board will reset\012\000"
 6354      72642077 
 6354      696C6C20 
 6354      72657365 
 6354      740A00
 6355 053d 000000   		.align	2
 6356              	.LC140:
 6357 0540 30202D3E 		.ascii	"0 -> MC33887 (Standard)\0121 -> VNH5019 (High power"
 6357      204D4333 
 6357      33383837 
 6357      20285374 
 6357      616E6461 
 6358 0570 290A3220 		.ascii	")\0122 -> ESC (Brushless)\012The board will reset\012"
 6358      2D3E2045 
 6358      53432028 
 6358      42727573 
 6358      686C6573 
 6359 059c 00       		.ascii	"\000"
 6360 059d 000000   		.align	2
 6361              	.LC141:
 6362 05a0 30202D3E 		.ascii	"0 -> SOFTHAND PRO\0121 -> GENERIC 2 MOTORS\0122 -> "
 6362      20534F46 
 6362      5448414E 
 6362      44205052 
 6362      4F0A3120 
 6363 05cd 41495220 		.ascii	"AIR CHAMBERS\0123 -> OTTOBOCK WRIST\0124 -> SOFTHAN"
 6363      4348414D 
 6363      42455253 
 6363      0A33202D 
 6363      3E204F54 
 6364 05fa 44203220 		.ascii	"D 2 MOTORS\012The board will reset\012\000"
 6364      4D4F544F 
 6364      52530A54 
 6364      68652062 
 6364      6F617264 
 6365 061b 00       		.align	2
 6366              	.LC142:
 6367 061c 30202D3E 		.ascii	"0 -> Close:CW, Open:CCW\0121 -> Close:CCW, Open:CW\012"
 6367      20436C6F 
 6367      73653A43 
 6367      572C204F 
 6367      70656E3A 
 6368 064c 00       		.ascii	"\000"
 6369 064d 000000   		.align	2
 6370              	.LC0:
 6371 0650 02       		.byte	2
 6372 0651 07       		.byte	7
 6373 0652 07       		.byte	7
 6374 0653 00       		.byte	0
 6375 0654 00       		.byte	0
 6376 0655 00       		.byte	0
 6377 0656 02       		.byte	2
 6378 0657 03       		.byte	3
 6379 0658 07       		.byte	7
 6380 0659 00       		.byte	0
 6381 065a 05       		.byte	5
 6382 065b 05       		.byte	5
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 149


 6383 065c 03       		.byte	3
 6384 065d 04       		.byte	4
 6385 065e 00       		.byte	0
 6386 065f 06       		.byte	6
 6387 0660 02       		.byte	2
 6388 0661 00       		.byte	0
 6389 0662 01       		.byte	1
 6390 0663 00       		.byte	0
 6391 0664 07       		.byte	7
 6392 0665 02       		.byte	2
 6393 0666 05       		.byte	5
 6394 0667 05       		.byte	5
 6395 0668 05       		.byte	5
 6396 0669 00       		.byte	0
 6397 066a 00       		.byte	0
 6398 066b 00       		.byte	0
 6399 066c 00       		.byte	0
 6400 066d 00       		.byte	0
 6401 066e 00       		.byte	0
 6402 066f 02       		.byte	2
 6403 0670 00       		.byte	0
 6404 0671 02       		.byte	2
 6405 0672 00       		.byte	0
 6406 0673 09       		.byte	9
 6407 0674 02       		.byte	2
 6408 0675 00       		.byte	0
 6409 0676 02       		.byte	2
 6410 0677 00       		.byte	0
 6411 0678 02       		.byte	2
 6412 0679 01       		.byte	1
 6413 067a 00       		.byte	0
 6414 067b 07       		.byte	7
 6415 067c 07       		.byte	7
 6416 067d 00       		.byte	0
 6417 067e 00       		.byte	0
 6418 067f 00       		.byte	0
 6419 0680 02       		.byte	2
 6420 0681 03       		.byte	3
 6421 0682 07       		.byte	7
 6422 0683 00       		.byte	0
 6423 0684 05       		.byte	5
 6424 0685 05       		.byte	5
 6425 0686 03       		.byte	3
 6426 0687 00       		.byte	0
 6427 0688 01       		.byte	1
 6428 0689 00       		.byte	0
 6429 068a 07       		.byte	7
 6430 068b 02       		.byte	2
 6431 068c 00       		.byte	0
 6432 068d 02       		.byte	2
 6433 068e 00       		.byte	0
 6434 068f 02       		.byte	2
 6435 0690 01       		.byte	1
 6436 0691 02       		.byte	2
 6437 0692 02       		.byte	2
 6438 0693 00       		.byte	0
 6439 0694 02       		.byte	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 150


 6440 0695 02       		.byte	2
 6441 0696 00       		.byte	0
 6442 0697 04       		.byte	4
 6443 0698 03       		.byte	3
 6444 0699 04       		.byte	4
 6445 069a 00       		.byte	0
 6446 069b 00       		.byte	0
 6447 069c 04       		.byte	4
 6448 069d 00       		.byte	0
 6449 069e 00       		.byte	0
 6450 069f 02       		.byte	2
 6451 06a0 05       		.byte	5
 6452 06a1 07       		.byte	7
 6453 06a2 07       		.byte	7
 6454 06a3 00       		.align	2
 6455              	.LC1:
 6456 06a4 31202D20 		.ascii	"1 - Device ID:\000"
 6456      44657669 
 6456      63652049 
 6456      443A00
 6457 06b3 00       		.align	2
 6458              	.LC2:
 6459 06b4 32202D20 		.ascii	"2 - Position PID [P, I, D]:\000"
 6459      506F7369 
 6459      74696F6E 
 6459      20504944 
 6459      205B502C 
 6460              		.align	2
 6461              	.LC3:
 6462 06d0 33202D20 		.ascii	"3 - Current PID [P, I, D]:\000"
 6462      43757272 
 6462      656E7420 
 6462      50494420 
 6462      5B502C20 
 6463 06eb 00       		.align	2
 6464              	.LC4:
 6465 06ec 34202D20 		.ascii	"4 - Startup Activation:\000"
 6465      53746172 
 6465      74757020 
 6465      41637469 
 6465      76617469 
 6466              		.align	2
 6467              	.LC5:
 6468 0704 35202D20 		.ascii	"5 - Input mode:\000"
 6468      496E7075 
 6468      74206D6F 
 6468      64653A00 
 6469              		.align	2
 6470              	.LC6:
 6471 0714 36202D20 		.ascii	"6 - Control mode:\000"
 6471      436F6E74 
 6471      726F6C20 
 6471      6D6F6465 
 6471      3A00
 6472 0726 0000     		.align	2
 6473              	.LC7:
 6474 0728 37202D20 		.ascii	"7 - Resolutions:\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 151


 6474      5265736F 
 6474      6C757469 
 6474      6F6E733A 
 6474      00
 6475 0739 000000   		.align	2
 6476              	.LC8:
 6477 073c 38202D20 		.ascii	"8 - Measurement Offsets:\000"
 6477      4D656173 
 6477      7572656D 
 6477      656E7420 
 6477      4F666673 
 6478 0755 000000   		.align	2
 6479              	.LC9:
 6480 0758 39202D20 		.ascii	"9 - Multipliers:\000"
 6480      4D756C74 
 6480      69706C69 
 6480      6572733A 
 6480      00
 6481 0769 000000   		.align	2
 6482              	.LC10:
 6483 076c 3130202D 		.ascii	"10 - Pos. limit active:\000"
 6483      20506F73 
 6483      2E206C69 
 6483      6D697420 
 6483      61637469 
 6484              		.align	2
 6485              	.LC11:
 6486 0784 3131202D 		.ascii	"11 - Pos. limits [inf, sup]:\000"
 6486      20506F73 
 6486      2E206C69 
 6486      6D697473 
 6486      205B696E 
 6487 07a1 000000   		.align	2
 6488              	.LC12:
 6489 07a4 3132202D 		.ascii	"12 - Max steps [neg, pos]:\000"
 6489      204D6178 
 6489      20737465 
 6489      7073205B 
 6489      6E65672C 
 6490 07bf 00       		.align	2
 6491              	.LC13:
 6492 07c0 3133202D 		.ascii	"13 - Current limit:\000"
 6492      20437572 
 6492      72656E74 
 6492      206C696D 
 6492      69743A00 
 6493              		.align	2
 6494              	.LC14:
 6495 07d4 3134202D 		.ascii	"14 - EMG thresholds:\000"
 6495      20454D47 
 6495      20746872 
 6495      6573686F 
 6495      6C64733A 
 6496 07e9 000000   		.align	2
 6497              	.LC15:
 6498 07ec 3135202D 		.ascii	"15 - EMG calibration on startup:\000"
 6498      20454D47 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 152


 6498      2063616C 
 6498      69627261 
 6498      74696F6E 
 6499 080d 000000   		.align	2
 6500              	.LC16:
 6501 0810 3136202D 		.ascii	"16 - EMG max values:\000"
 6501      20454D47 
 6501      206D6178 
 6501      2076616C 
 6501      7565733A 
 6502 0825 000000   		.align	2
 6503              	.LC17:
 6504 0828 3137202D 		.ascii	"17 - EMG max speeds:\000"
 6504      20454D47 
 6504      206D6178 
 6504      20737065 
 6504      6564733A 
 6505 083d 000000   		.align	2
 6506              	.LC18:
 6507 0840 3138202D 		.ascii	"18 - Absolute encoder position:\000"
 6507      20416273 
 6507      6F6C7574 
 6507      6520656E 
 6507      636F6465 
 6508              		.align	2
 6509              	.LC19:
 6510 0860 3139202D 		.ascii	"19 - Motor handle ratio:\000"
 6510      204D6F74 
 6510      6F722068 
 6510      616E646C 
 6510      65207261 
 6511 0879 000000   		.align	2
 6512              	.LC20:
 6513 087c 3230202D 		.ascii	"20 - PWM rescaling:\000"
 6513      2050574D 
 6513      20726573 
 6513      63616C69 
 6513      6E673A00 
 6514              		.align	2
 6515              	.LC21:
 6516 0890 3231202D 		.ascii	"21 - Current lookup:\000"
 6516      20437572 
 6516      72656E74 
 6516      206C6F6F 
 6516      6B75703A 
 6517 08a5 000000   		.align	2
 6518              	.LC22:
 6519 08a8 3232202D 		.ascii	"22 - Date of maintenance [D/M/Y]:\000"
 6519      20446174 
 6519      65206F66 
 6519      206D6169 
 6519      6E74656E 
 6520 08ca 0000     		.align	2
 6521              	.LC23:
 6522 08cc 3233202D 		.ascii	"23 - Rest position:\000"
 6522      20526573 
 6522      7420706F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 153


 6522      73697469 
 6522      6F6E3A00 
 6523              		.align	2
 6524              	.LC24:
 6525 08e0 3234202D 		.ascii	"24 - Rest position time delay (ms):\000"
 6525      20526573 
 6525      7420706F 
 6525      73697469 
 6525      6F6E2074 
 6526              		.align	2
 6527              	.LC25:
 6528 0904 3235202D 		.ascii	"25 - Rest vel closure (ticks/sec):\000"
 6528      20526573 
 6528      74207665 
 6528      6C20636C 
 6528      6F737572 
 6529 0927 00       		.align	2
 6530              	.LC26:
 6531 0928 3236202D 		.ascii	"26 - Rest position enabled:\000"
 6531      20526573 
 6531      7420706F 
 6531      73697469 
 6531      6F6E2065 
 6532              		.align	2
 6533              	.LC27:
 6534 0944 3237202D 		.ascii	"27 - EMG inversion:\000"
 6534      20454D47 
 6534      20696E76 
 6534      65727369 
 6534      6F6E3A00 
 6535              		.align	2
 6536              	.LC28:
 6537 0958 3238202D 		.ascii	"28 - Hand side:\000"
 6537      2048616E 
 6537      64207369 
 6537      64653A00 
 6538              		.align	2
 6539              	.LC29:
 6540 0968 3239202D 		.ascii	"29 - Enable IMUs:\000"
 6540      20456E61 
 6540      626C6520 
 6540      494D5573 
 6540      3A00
 6541 097a 0000     		.align	2
 6542              	.LC30:
 6543 097c 3330202D 		.ascii	"30 - Read Expansion port:\000"
 6543      20526561 
 6543      64204578 
 6543      70616E73 
 6543      696F6E20 
 6544 0996 0000     		.align	2
 6545              	.LC31:
 6546 0998 3331202D 		.ascii	"31 - Reset counters:\000"
 6546      20526573 
 6546      65742063 
 6546      6F756E74 
 6546      6572733A 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 154


 6547 09ad 000000   		.align	2
 6548              	.LC32:
 6549 09b0 3332202D 		.ascii	"32 - Last checked Time [D/M/Y H:M:S]:\000"
 6549      204C6173 
 6549      74206368 
 6549      65636B65 
 6549      64205469 
 6550 09d6 0000     		.align	2
 6551              	.LC33:
 6552 09d8 3333202D 		.ascii	"33 - SPI read delay (IMU):\000"
 6552      20535049 
 6552      20726561 
 6552      64206465 
 6552      6C617920 
 6553 09f3 00       		.align	2
 6554              	.LC34:
 6555 09f4 3334202D 		.ascii	"34 - On board IMU conf. [a,g,m,q,t]:\000"
 6555      204F6E20 
 6555      626F6172 
 6555      6420494D 
 6555      5520636F 
 6556 0a19 000000   		.align	2
 6557              	.LC35:
 6558 0a1c 3335202D 		.ascii	"35 - User ID:\000"
 6558      20557365 
 6558      72204944 
 6558      3A00
 6559 0a2a 0000     		.align	2
 6560              	.LC36:
 6561 0a2c 3336202D 		.ascii	"36 - User code:\000"
 6561      20557365 
 6561      7220636F 
 6561      64653A00 
 6562              		.align	2
 6563              	.LC37:
 6564 0a3c 3337202D 		.ascii	"37 - Associated encoder line:\000"
 6564      20417373 
 6564      6F636961 
 6564      74656420 
 6564      656E636F 
 6565 0a5a 0000     		.align	2
 6566              	.LC38:
 6567 0a5c 3338202D 		.ascii	"38 - Driver type:\000"
 6567      20447269 
 6567      76657220 
 6567      74797065 
 6567      3A00
 6568 0a6e 0000     		.align	2
 6569              	.LC39:
 6570 0a70 3339202D 		.ascii	"39 - PWM rate limiter:\000"
 6570      2050574D 
 6570      20726174 
 6570      65206C69 
 6570      6D697465 
 6571 0a87 00       		.align	2
 6572              	.LC40:
 6573 0a88 3430202D 		.ascii	"40 - Not reversible:\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 155


 6573      204E6F74 
 6573      20726576 
 6573      65727369 
 6573      626C653A 
 6574 0a9d 000000   		.align	2
 6575              	.LC41:
 6576 0aa0 3431202D 		.ascii	"41 - Enc idx used for control:\000"
 6576      20456E63 
 6576      20696478 
 6576      20757365 
 6576      6420666F 
 6577 0abf 00       		.align	2
 6578              	.LC42:
 6579 0ac0 3432202D 		.ascii	"42 - Gear params[N1, N2, I1]:\000"
 6579      20476561 
 6579      72207061 
 6579      72616D73 
 6579      5B4E312C 
 6580 0ade 0000     		.align	2
 6581              	.LC43:
 6582 0ae0 3433202D 		.ascii	"43 - Use second motor:\000"
 6582      20557365 
 6582      20736563 
 6582      6F6E6420 
 6582      6D6F746F 
 6583 0af7 00       		.align	2
 6584              	.LC44:
 6585 0af8 3434202D 		.ascii	"44 - Position PID [P, I, D]:\000"
 6585      20506F73 
 6585      6974696F 
 6585      6E205049 
 6585      44205B50 
 6586 0b15 000000   		.align	2
 6587              	.LC45:
 6588 0b18 3435202D 		.ascii	"45 - Current PID [P, I, D]:\000"
 6588      20437572 
 6588      72656E74 
 6588      20504944 
 6588      205B502C 
 6589              		.align	2
 6590              	.LC46:
 6591 0b34 3436202D 		.ascii	"46 - Startup Activation:\000"
 6591      20537461 
 6591      72747570 
 6591      20416374 
 6591      69766174 
 6592 0b4d 000000   		.align	2
 6593              	.LC47:
 6594 0b50 3437202D 		.ascii	"47 - Input mode:\000"
 6594      20496E70 
 6594      7574206D 
 6594      6F64653A 
 6594      00
 6595 0b61 000000   		.align	2
 6596              	.LC48:
 6597 0b64 3438202D 		.ascii	"48 - Control mode:\000"
 6597      20436F6E 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 156


 6597      74726F6C 
 6597      206D6F64 
 6597      653A00
 6598 0b77 00       		.align	2
 6599              	.LC49:
 6600 0b78 3439202D 		.ascii	"49 - Resolutions:\000"
 6600      20526573 
 6600      6F6C7574 
 6600      696F6E73 
 6600      3A00
 6601 0b8a 0000     		.align	2
 6602              	.LC50:
 6603 0b8c 3530202D 		.ascii	"50 - Measurement Offsets:\000"
 6603      204D6561 
 6603      73757265 
 6603      6D656E74 
 6603      204F6666 
 6604 0ba6 0000     		.align	2
 6605              	.LC51:
 6606 0ba8 3531202D 		.ascii	"51 - Multipliers:\000"
 6606      204D756C 
 6606      7469706C 
 6606      69657273 
 6606      3A00
 6607 0bba 0000     		.align	2
 6608              	.LC52:
 6609 0bbc 3532202D 		.ascii	"52 - Pos. limit active:\000"
 6609      20506F73 
 6609      2E206C69 
 6609      6D697420 
 6609      61637469 
 6610              		.align	2
 6611              	.LC53:
 6612 0bd4 3533202D 		.ascii	"53 - Pos. limits [inf, sup]:\000"
 6612      20506F73 
 6612      2E206C69 
 6612      6D697473 
 6612      205B696E 
 6613 0bf1 000000   		.align	2
 6614              	.LC54:
 6615 0bf4 3534202D 		.ascii	"54 - Max steps [neg, pos]:\000"
 6615      204D6178 
 6615      20737465 
 6615      7073205B 
 6615      6E65672C 
 6616 0c0f 00       		.align	2
 6617              	.LC55:
 6618 0c10 3535202D 		.ascii	"55 - Current limit:\000"
 6618      20437572 
 6618      72656E74 
 6618      206C696D 
 6618      69743A00 
 6619              		.align	2
 6620              	.LC56:
 6621 0c24 3536202D 		.ascii	"56 - Absolute encoder position:\000"
 6621      20416273 
 6621      6F6C7574 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 157


 6621      6520656E 
 6621      636F6465 
 6622              		.align	2
 6623              	.LC57:
 6624 0c44 3537202D 		.ascii	"57 - Motor handle ratio:\000"
 6624      204D6F74 
 6624      6F722068 
 6624      616E646C 
 6624      65207261 
 6625 0c5d 000000   		.align	2
 6626              	.LC58:
 6627 0c60 3538202D 		.ascii	"58 - PWM rescaling:\000"
 6627      2050574D 
 6627      20726573 
 6627      63616C69 
 6627      6E673A00 
 6628              		.align	2
 6629              	.LC59:
 6630 0c74 3539202D 		.ascii	"59 - Current lookup:\000"
 6630      20437572 
 6630      72656E74 
 6630      206C6F6F 
 6630      6B75703A 
 6631 0c89 000000   		.align	2
 6632              	.LC60:
 6633 0c8c 3630202D 		.ascii	"60 - Associated encoder line:\000"
 6633      20417373 
 6633      6F636961 
 6633      74656420 
 6633      656E636F 
 6634 0caa 0000     		.align	2
 6635              	.LC61:
 6636 0cac 3631202D 		.ascii	"61 - Driver type:\000"
 6636      20447269 
 6636      76657220 
 6636      74797065 
 6636      3A00
 6637 0cbe 0000     		.align	2
 6638              	.LC62:
 6639 0cc0 3632202D 		.ascii	"62 - PWM rate limiter:\000"
 6639      2050574D 
 6639      20726174 
 6639      65206C69 
 6639      6D697465 
 6640 0cd7 00       		.align	2
 6641              	.LC63:
 6642 0cd8 3633202D 		.ascii	"63 - Not reversible:\000"
 6642      204E6F74 
 6642      20726576 
 6642      65727369 
 6642      626C653A 
 6643 0ced 000000   		.align	2
 6644              	.LC64:
 6645 0cf0 3634202D 		.ascii	"64 - Enc idx used for control:\000"
 6645      20456E63 
 6645      20696478 
 6645      20757365 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 158


 6645      6420666F 
 6646 0d0f 00       		.align	2
 6647              	.LC65:
 6648 0d10 3635202D 		.ascii	"65 - Gear params[N1, N2, I1]:\000"
 6648      20476561 
 6648      72207061 
 6648      72616D73 
 6648      5B4E312C 
 6649 0d2e 0000     		.align	2
 6650              	.LC66:
 6651 0d30 3636202D 		.ascii	"66 - Read enc raw line 0:\000"
 6651      20526561 
 6651      6420656E 
 6651      63207261 
 6651      77206C69 
 6652 0d4a 0000     		.align	2
 6653              	.LC67:
 6654 0d4c 3637202D 		.ascii	"67 - Read enc raw line 1:\000"
 6654      20526561 
 6654      6420656E 
 6654      63207261 
 6654      77206C69 
 6655 0d66 0000     		.align	2
 6656              	.LC68:
 6657 0d68 3638202D 		.ascii	"68 - Read additional ADC port:\000"
 6657      20526561 
 6657      64206164 
 6657      64697469 
 6657      6F6E616C 
 6658 0d87 00       		.align	2
 6659              	.LC69:
 6660 0d88 3639202D 		.ascii	"69 - ADC channel [1-6]:\000"
 6660      20414443 
 6660      20636861 
 6660      6E6E656C 
 6660      205B312D 
 6661              		.align	2
 6662              	.LC70:
 6663 0da0 3730202D 		.ascii	"70 - ADC channel [7-12]:\000"
 6663      20414443 
 6663      20636861 
 6663      6E6E656C 
 6663      205B372D 
 6664 0db9 000000   		.align	2
 6665              	.LC71:
 6666 0dbc 3731202D 		.ascii	"71 - Record EMG on SD card:\000"
 6666      20526563 
 6666      6F726420 
 6666      454D4720 
 6666      6F6E2053 
 6667              		.align	2
 6668              	.LC72:
 6669 0dd8 3732202D 		.ascii	"72 - Joystick closure speed:\000"
 6669      204A6F79 
 6669      73746963 
 6669      6B20636C 
 6669      6F737572 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 159


 6670 0df5 000000   		.align	2
 6671              	.LC73:
 6672 0df8 3733202D 		.ascii	"73 - Joystick threshold:\000"
 6672      204A6F79 
 6672      73746963 
 6672      6B207468 
 6672      72657368 
 6673 0e11 000000   		.align	2
 6674              	.LC74:
 6675 0e14 3734202D 		.ascii	"74 - Joystick gains:\000"
 6675      204A6F79 
 6675      73746963 
 6675      6B206761 
 6675      696E733A 
 6676 0e29 000000   		.align	2
 6677              	.LC75:
 6678 0e2c 3735202D 		.ascii	"75 - Device type:\000"
 6678      20446576 
 6678      69636520 
 6678      74797065 
 6678      3A00
 6679 0e3e 0000     		.align	2
 6680              	.LC76:
 6681 0e40 3736202D 		.ascii	"76 - EMG FSM act.mode:\000"
 6681      20454D47 
 6681      2046534D 
 6681      20616374 
 6681      2E6D6F64 
 6682 0e57 00       		.align	2
 6683              	.LC77:
 6684 0e58 3737202D 		.ascii	"77 - Fast act.thresholds:\000"
 6684      20466173 
 6684      74206163 
 6684      742E7468 
 6684      72657368 
 6685 0e72 0000     		.align	2
 6686              	.LC78:
 6687 0e74 3738202D 		.ascii	"78 - Wrist direction:\000"
 6687      20577269 
 6687      73742064 
 6687      69726563 
 6687      74696F6E 
 6688 0e8a 0000     		.align	2
 6689              	.LC79:
 6690 0e8c 3739202D 		.ascii	"79 - Slave communication active:\000"
 6690      20536C61 
 6690      76652063 
 6690      6F6D6D75 
 6690      6E696361 
 6691 0ead 000000   		.align	2
 6692              	.LC80:
 6693 0eb0 3830202D 		.ascii	"80 - Slave ID:\000"
 6693      20536C61 
 6693      76652049 
 6693      443A00
 6694 0ebf 00       		.align	2
 6695              	.LC81:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 160


 6696 0ec0 3831202D 		.ascii	"81 - Maximum slave residual current:\000"
 6696      204D6178 
 6696      696D756D 
 6696      20736C61 
 6696      76652072 
 6697 0ee5 000000   		.align	2
 6698              	.LC82:
 6699 0ee8 3832202D 		.ascii	"82 - Maximum pressure feedback (kPa):\000"
 6699      204D6178 
 6699      696D756D 
 6699      20707265 
 6699      73737572 
 6700 0f0e 0000     		.align	2
 6701              	.LC83:
 6702 0f10 3833202D 		.ascii	"83 - Proportional pressure error gain:\000"
 6702      2050726F 
 6702      706F7274 
 6702      696F6E61 
 6702      6C207072 
 6703 0f37 00       		.align	2
 6704              	.LC129:
 6705 0f38 A4060000 		.word	.LC1
 6706 0f3c B4060000 		.word	.LC2
 6707 0f40 D0060000 		.word	.LC3
 6708 0f44 EC060000 		.word	.LC4
 6709 0f48 04070000 		.word	.LC5
 6710 0f4c 14070000 		.word	.LC6
 6711 0f50 28070000 		.word	.LC7
 6712 0f54 3C070000 		.word	.LC8
 6713 0f58 58070000 		.word	.LC9
 6714 0f5c 6C070000 		.word	.LC10
 6715 0f60 84070000 		.word	.LC11
 6716 0f64 A4070000 		.word	.LC12
 6717 0f68 C0070000 		.word	.LC13
 6718 0f6c D4070000 		.word	.LC14
 6719 0f70 EC070000 		.word	.LC15
 6720 0f74 10080000 		.word	.LC16
 6721 0f78 28080000 		.word	.LC17
 6722 0f7c 40080000 		.word	.LC18
 6723 0f80 60080000 		.word	.LC19
 6724 0f84 7C080000 		.word	.LC20
 6725 0f88 90080000 		.word	.LC21
 6726 0f8c A8080000 		.word	.LC22
 6727 0f90 CC080000 		.word	.LC23
 6728 0f94 E0080000 		.word	.LC24
 6729 0f98 04090000 		.word	.LC25
 6730 0f9c 28090000 		.word	.LC26
 6731 0fa0 44090000 		.word	.LC27
 6732 0fa4 58090000 		.word	.LC28
 6733 0fa8 68090000 		.word	.LC29
 6734 0fac 7C090000 		.word	.LC30
 6735 0fb0 98090000 		.word	.LC31
 6736 0fb4 B0090000 		.word	.LC32
 6737 0fb8 D8090000 		.word	.LC33
 6738 0fbc F4090000 		.word	.LC34
 6739 0fc0 1C0A0000 		.word	.LC35
 6740 0fc4 2C0A0000 		.word	.LC36
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 161


 6741 0fc8 3C0A0000 		.word	.LC37
 6742 0fcc 5C0A0000 		.word	.LC38
 6743 0fd0 700A0000 		.word	.LC39
 6744 0fd4 880A0000 		.word	.LC40
 6745 0fd8 A00A0000 		.word	.LC41
 6746 0fdc C00A0000 		.word	.LC42
 6747 0fe0 E00A0000 		.word	.LC43
 6748 0fe4 F80A0000 		.word	.LC44
 6749 0fe8 180B0000 		.word	.LC45
 6750 0fec 340B0000 		.word	.LC46
 6751 0ff0 500B0000 		.word	.LC47
 6752 0ff4 640B0000 		.word	.LC48
 6753 0ff8 780B0000 		.word	.LC49
 6754 0ffc 8C0B0000 		.word	.LC50
 6755 1000 A80B0000 		.word	.LC51
 6756 1004 BC0B0000 		.word	.LC52
 6757 1008 D40B0000 		.word	.LC53
 6758 100c F40B0000 		.word	.LC54
 6759 1010 100C0000 		.word	.LC55
 6760 1014 240C0000 		.word	.LC56
 6761 1018 440C0000 		.word	.LC57
 6762 101c 600C0000 		.word	.LC58
 6763 1020 740C0000 		.word	.LC59
 6764 1024 8C0C0000 		.word	.LC60
 6765 1028 AC0C0000 		.word	.LC61
 6766 102c C00C0000 		.word	.LC62
 6767 1030 D80C0000 		.word	.LC63
 6768 1034 F00C0000 		.word	.LC64
 6769 1038 100D0000 		.word	.LC65
 6770 103c 300D0000 		.word	.LC66
 6771 1040 4C0D0000 		.word	.LC67
 6772 1044 680D0000 		.word	.LC68
 6773 1048 880D0000 		.word	.LC69
 6774 104c A00D0000 		.word	.LC70
 6775 1050 BC0D0000 		.word	.LC71
 6776 1054 D80D0000 		.word	.LC72
 6777 1058 F80D0000 		.word	.LC73
 6778 105c 140E0000 		.word	.LC74
 6779 1060 2C0E0000 		.word	.LC75
 6780 1064 400E0000 		.word	.LC76
 6781 1068 580E0000 		.word	.LC77
 6782 106c 740E0000 		.word	.LC78
 6783 1070 8C0E0000 		.word	.LC79
 6784 1074 B00E0000 		.word	.LC80
 6785 1078 C00E0000 		.word	.LC81
 6786 107c E80E0000 		.word	.LC82
 6787 1080 100F0000 		.word	.LC83
 6788              		.align	2
 6789              	.LC85:
 6790 1084 03       		.byte	3
 6791 1085 01       		.byte	1
 6792 1086 02       		.byte	2
 6793 1087 03       		.byte	3
 6794 1088 03       		.byte	3
 6795 1089 03       		.byte	3
 6796 108a 03       		.byte	3
 6797 108b 03       		.byte	3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 162


 6798 108c 03       		.byte	3
 6799 108d 04       		.byte	4
 6800 108e 05       		.byte	5
 6801 108f 06       		.byte	6
 6802 1090 03       		.byte	3
 6803 1091 07       		.byte	7
 6804 1092 08       		.byte	8
 6805 1093 09       		.byte	9
 6806 1094 03       		.byte	3
 6807 1095 05       		.byte	5
 6808 1096 03       		.byte	3
 6809 1097 01       		.byte	1
 6810 1098 02       		.byte	2
 6811 1099 03       		.byte	3
 6812 109a 03       		.byte	3
 6813 109b 03       		.byte	3
 6814 109c 09       		.byte	9
 6815 109d 03       		.byte	3
 6816 109e 05       		.byte	5
 6817 109f 03       		.byte	3
 6818 10a0 0A       		.byte	10
 6819 10a1 0B       		.byte	11
 6820 10a2 0C       		.byte	12
 6821 10a3 03       		.byte	3
 6822              		.align	2
 6823              	.LC86:
 6824 10a4 02       		.byte	2
 6825 10a5 03       		.byte	3
 6826 10a6 08       		.byte	8
 6827 10a7 0B       		.byte	11
 6828 10a8 17       		.byte	23
 6829 10a9 2C       		.byte	44
 6830 10aa 2D       		.byte	45
 6831 10ab 32       		.byte	50
 6832 10ac 35       		.byte	53
 6833 10ad 000000   		.align	2
 6834              	.LC87:
 6835 10b0 02       		.byte	2
 6836 10b1 03       		.byte	3
 6837 10b2 05       		.byte	5
 6838 10b3 08       		.byte	8
 6839 10b4 0B       		.byte	11
 6840 10b5 17       		.byte	23
 6841 10b6 18       		.byte	24
 6842 10b7 1C       		.byte	28
 6843 10b8 1F       		.byte	31
 6844 10b9 20       		.byte	32
 6845 10ba 26       		.byte	38
 6846 10bb 2C       		.byte	44
 6847 10bc 2D       		.byte	45
 6848 10bd 2F       		.byte	47
 6849 10be 32       		.byte	50
 6850 10bf 35       		.byte	53
 6851 10c0 3D       		.byte	61
 6852 10c1 4B       		.byte	75
 6853              		.section	.text.manage_param_list,"ax",%progbits
 6854              		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 163


 6855              		.global	manage_param_list
 6856              		.thumb
 6857              		.thumb_func
 6858              		.type	manage_param_list, %function
 6859              	manage_param_list:
 6860              	.LFB68:
 876:..\src/command_processing.c **** 
 877:..\src/command_processing.c **** //==============================================================================
 878:..\src/command_processing.c **** //                                                             MANAGE PARAM LIST
 879:..\src/command_processing.c **** //==============================================================================
 880:..\src/command_processing.c **** 
 881:..\src/command_processing.c **** void manage_param_list(uint16 index) {
 6861              		.loc 1 881 0
 6862              		.cfi_startproc
 6863              		@ args = 0, pretend = 0, frame = 1416
 6864              		@ frame_needed = 1, uses_anonymous_args = 0
 6865 0000 B0B5     		push	{r4, r5, r7, lr}
 6866              		.cfi_def_cfa_offset 16
 6867              		.cfi_offset 4, -16
 6868              		.cfi_offset 5, -12
 6869              		.cfi_offset 7, -8
 6870              		.cfi_offset 14, -4
 6871 0002 ADF5B36D 		sub	sp, sp, #1432
 6872              		.cfi_def_cfa_offset 1448
 6873 0006 04AF     		add	r7, sp, #16
 6874              		.cfi_def_cfa 7, 1432
 6875 0008 0246     		mov	r2, r0
 6876 000a BB1D     		adds	r3, r7, #6
 6877 000c 1A80     		strh	r2, [r3]	@ movhi
 882:..\src/command_processing.c ****     uint8 CYDATA i, j;
 883:..\src/command_processing.c ****     uint8 CYDATA sod;
 884:..\src/command_processing.c ****     uint8 PARAM_IDX;
 885:..\src/command_processing.c ****     int16 aux_int16;
 886:..\src/command_processing.c ****     uint16 aux_uint16;
 887:..\src/command_processing.c ****     int32 aux_int32;
 888:..\src/command_processing.c ****     uint32 aux_uint32;
 889:..\src/command_processing.c ****     float aux_float;
 890:..\src/command_processing.c ****  
 891:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 6878              		.loc 1 891 0
 6879 000e 0023     		movs	r3, #0
 6880 0010 87F87D35 		strb	r3, [r7, #1405]
 892:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 6881              		.loc 1 892 0
 6882 0014 0123     		movs	r3, #1
 6883 0016 87F87C35 		strb	r3, [r7, #1404]
 893:..\src/command_processing.c ****     
 894:..\src/command_processing.c ****     // Arrays
 895:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem;   // c_mem is used for param reading
 6884              		.loc 1 895 0
 6885 001a 054B     		ldr	r3, .L372
 6886 001c C7F88035 		str	r3, [r7, #1408]
 896:..\src/command_processing.c ****     
 897:..\src/command_processing.c ****     if (index){                         // Switch from c_mem to g_mem
 6887              		.loc 1 897 0
 6888 0020 BB1D     		adds	r3, r7, #6
 6889 0022 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 164


 6890 0024 002B     		cmp	r3, #0
 6891 0026 07D0     		beq	.L309
 898:..\src/command_processing.c ****         MEM_P = &g_mem;                 // g_mem is used for param setting
 6892              		.loc 1 898 0
 6893 0028 024B     		ldr	r3, .L372+4
 6894 002a C7F88035 		str	r3, [r7, #1408]
 6895 002e 03E0     		b	.L373
 6896              	.L374:
 6897              		.align	2
 6898              	.L372:
 6899 0030 00000000 		.word	c_mem
 6900 0034 00000000 		.word	g_mem
 6901              	.L373:
 6902              	.L309:
 899:..\src/command_processing.c ****     }
 900:..\src/command_processing.c ****  
 901:..\src/command_processing.c ****     
 902:..\src/command_processing.c **** //------------------ BEGIN OF PARAMETERS VARIABLES --------------------//    
 903:..\src/command_processing.c ****     uint8* VAR_P[NUM_OF_PARAMS] = { 
 904:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6903              		.loc 1 904 0
 6904 0038 D7F88035 		ldr	r3, [r7, #1408]
 6905 003c 03F1A002 		add	r2, r3, #160
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6906              		.loc 1 903 0
 6907 0040 07F21C43 		addw	r3, r7, #1052
 6908 0044 1A60     		str	r2, [r3]
 905:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p),
 6909              		.loc 1 905 0
 6910 0046 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6911 004a 1346     		mov	r3, r2
 6912 004c DB00     		lsls	r3, r3, #3
 6913 004e 9B1A     		subs	r3, r3, r2
 6914 0050 1B01     		lsls	r3, r3, #4
 6915 0052 B033     		adds	r3, r3, #176
 6916 0054 D7F88025 		ldr	r2, [r7, #1408]
 6917 0058 1A44     		add	r2, r2, r3
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6918              		.loc 1 903 0
 6919 005a 07F21C43 		addw	r3, r7, #1052
 6920 005e 5A60     		str	r2, [r3, #4]
 906:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p_c), 
 6921              		.loc 1 906 0
 6922 0060 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6923 0064 1346     		mov	r3, r2
 6924 0066 DB00     		lsls	r3, r3, #3
 6925 0068 9B1A     		subs	r3, r3, r2
 6926 006a 1B01     		lsls	r3, r3, #4
 6927 006c B833     		adds	r3, r3, #184
 6928 006e D7F88025 		ldr	r2, [r7, #1408]
 6929 0072 1344     		add	r3, r3, r2
 6930 0074 1A1D     		adds	r2, r3, #4
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6931              		.loc 1 903 0
 6932 0076 07F21C43 		addw	r3, r7, #1052
 6933 007a 9A60     		str	r2, [r3, #8]
 907:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activ),
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 165


 6934              		.loc 1 907 0
 6935 007c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6936 0080 1346     		mov	r3, r2
 6937 0082 DB00     		lsls	r3, r3, #3
 6938 0084 9B1A     		subs	r3, r3, r2
 6939 0086 1B01     		lsls	r3, r3, #4
 6940 0088 E033     		adds	r3, r3, #224
 6941 008a D7F88025 		ldr	r2, [r7, #1408]
 6942 008e 1A44     		add	r2, r2, r3
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6943              		.loc 1 903 0
 6944 0090 07F21C43 		addw	r3, r7, #1052
 6945 0094 DA60     		str	r2, [r3, #12]
 908:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].input_mode),
 6946              		.loc 1 908 0
 6947 0096 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6948 009a 1346     		mov	r3, r2
 6949 009c DB00     		lsls	r3, r3, #3
 6950 009e 9B1A     		subs	r3, r3, r2
 6951 00a0 1B01     		lsls	r3, r3, #4
 6952 00a2 03F58473 		add	r3, r3, #264
 6953 00a6 D7F88025 		ldr	r2, [r7, #1408]
 6954 00aa 1344     		add	r3, r3, r2
 6955 00ac 9A1D     		adds	r2, r3, #6
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6956              		.loc 1 903 0
 6957 00ae 07F21C43 		addw	r3, r7, #1052
 6958 00b2 1A61     		str	r2, [r3, #16]
 909:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].control_mode), 
 6959              		.loc 1 909 0
 6960 00b4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6961 00b8 1346     		mov	r3, r2
 6962 00ba DB00     		lsls	r3, r3, #3
 6963 00bc 9B1A     		subs	r3, r3, r2
 6964 00be 1B01     		lsls	r3, r3, #4
 6965 00c0 03F58473 		add	r3, r3, #264
 6966 00c4 D7F88025 		ldr	r2, [r7, #1408]
 6967 00c8 1344     		add	r3, r3, r2
 6968 00ca DA1D     		adds	r2, r3, #7
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6969              		.loc 1 903 0
 6970 00cc 07F21C43 		addw	r3, r7, #1052
 6971 00d0 5A61     		str	r2, [r3, #20]
 910:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].res),
 6972              		.loc 1 910 0
 6973 00d2 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6974 00d6 D7F88015 		ldr	r1, [r7, #1408]
 6975 00da 1346     		mov	r3, r2
 6976 00dc DB00     		lsls	r3, r3, #3
 6977 00de 9B1A     		subs	r3, r3, r2
 6978 00e0 1B01     		lsls	r3, r3, #4
 6979 00e2 0B44     		add	r3, r3, r1
 6980 00e4 03F58873 		add	r3, r3, #272
 6981 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6982 00ea 1A46     		mov	r2, r3
 6983 00ec 1346     		mov	r3, r2
 6984 00ee 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 166


 6985 00f0 1344     		add	r3, r3, r2
 6986 00f2 1B01     		lsls	r3, r3, #4
 6987 00f4 03F5C873 		add	r3, r3, #400
 6988 00f8 D7F88025 		ldr	r2, [r7, #1408]
 6989 00fc 1344     		add	r3, r3, r2
 6990 00fe 5A1D     		adds	r2, r3, #5
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6991              		.loc 1 903 0
 6992 0100 07F21C43 		addw	r3, r7, #1052
 6993 0104 9A61     		str	r2, [r3, #24]
 911:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_off[0]),
 6994              		.loc 1 911 0
 6995 0106 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6996 010a D7F88015 		ldr	r1, [r7, #1408]
 6997 010e 1346     		mov	r3, r2
 6998 0110 DB00     		lsls	r3, r3, #3
 6999 0112 9B1A     		subs	r3, r3, r2
 7000 0114 1B01     		lsls	r3, r3, #4
 7001 0116 0B44     		add	r3, r3, r1
 7002 0118 03F58873 		add	r3, r3, #272
 7003 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7004 011e 1A46     		mov	r2, r3
 7005 0120 1346     		mov	r3, r2
 7006 0122 5B00     		lsls	r3, r3, #1
 7007 0124 1344     		add	r3, r3, r2
 7008 0126 1B01     		lsls	r3, r3, #4
 7009 0128 03F5CC73 		add	r3, r3, #408
 7010 012c D7F88025 		ldr	r2, [r7, #1408]
 7011 0130 1A44     		add	r2, r2, r3
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7012              		.loc 1 903 0
 7013 0132 07F21C43 		addw	r3, r7, #1052
 7014 0136 DA61     		str	r2, [r3, #28]
 912:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_mult[0]),
 7015              		.loc 1 912 0
 7016 0138 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7017 013c D7F88015 		ldr	r1, [r7, #1408]
 7018 0140 1346     		mov	r3, r2
 7019 0142 DB00     		lsls	r3, r3, #3
 7020 0144 9B1A     		subs	r3, r3, r2
 7021 0146 1B01     		lsls	r3, r3, #4
 7022 0148 0B44     		add	r3, r3, r1
 7023 014a 03F58873 		add	r3, r3, #272
 7024 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7025 0150 1A46     		mov	r2, r3
 7026 0152 1346     		mov	r3, r2
 7027 0154 5B00     		lsls	r3, r3, #1
 7028 0156 1344     		add	r3, r3, r2
 7029 0158 1B01     		lsls	r3, r3, #4
 7030 015a 03F5D073 		add	r3, r3, #416
 7031 015e D7F88025 		ldr	r2, [r7, #1408]
 7032 0162 1344     		add	r3, r3, r2
 7033 0164 1A1D     		adds	r2, r3, #4
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7034              		.loc 1 903 0
 7035 0166 07F21C43 		addw	r3, r7, #1052
 7036 016a 1A62     		str	r2, [r3, #32]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 167


 913:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_flag),                                    //10
 7037              		.loc 1 913 0
 7038 016c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7039 0170 1346     		mov	r3, r2
 7040 0172 DB00     		lsls	r3, r3, #3
 7041 0174 9B1A     		subs	r3, r3, r2
 7042 0176 1B01     		lsls	r3, r3, #4
 7043 0178 E033     		adds	r3, r3, #224
 7044 017a D7F88025 		ldr	r2, [r7, #1408]
 7045 017e 1344     		add	r3, r3, r2
 7046 0180 DA1C     		adds	r2, r3, #3
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7047              		.loc 1 903 0
 7048 0182 07F21C43 		addw	r3, r7, #1052
 7049 0186 5A62     		str	r2, [r3, #36]
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_inf), 
 7050              		.loc 1 914 0
 7051 0188 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7052 018c 1346     		mov	r3, r2
 7053 018e DB00     		lsls	r3, r3, #3
 7054 0190 9B1A     		subs	r3, r3, r2
 7055 0192 1B01     		lsls	r3, r3, #4
 7056 0194 E033     		adds	r3, r3, #224
 7057 0196 D7F88025 		ldr	r2, [r7, #1408]
 7058 019a 1344     		add	r3, r3, r2
 7059 019c 1A1D     		adds	r2, r3, #4
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7060              		.loc 1 903 0
 7061 019e 07F21C43 		addw	r3, r7, #1052
 7062 01a2 9A62     		str	r2, [r3, #40]
 915:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].max_step_neg),
 7063              		.loc 1 915 0
 7064 01a4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7065 01a8 1346     		mov	r3, r2
 7066 01aa DB00     		lsls	r3, r3, #3
 7067 01ac 9B1A     		subs	r3, r3, r2
 7068 01ae 1B01     		lsls	r3, r3, #4
 7069 01b0 E833     		adds	r3, r3, #232
 7070 01b2 D7F88025 		ldr	r2, [r7, #1408]
 7071 01b6 1344     		add	r3, r3, r2
 7072 01b8 1A1D     		adds	r2, r3, #4
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7073              		.loc 1 903 0
 7074 01ba 07F21C43 		addw	r3, r7, #1052
 7075 01be DA62     		str	r2, [r3, #44]
 916:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].current_limit),
 7076              		.loc 1 916 0
 7077 01c0 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7078 01c4 1346     		mov	r3, r2
 7079 01c6 DB00     		lsls	r3, r3, #3
 7080 01c8 9B1A     		subs	r3, r3, r2
 7081 01ca 1B01     		lsls	r3, r3, #4
 7082 01cc 03F58473 		add	r3, r3, #264
 7083 01d0 D7F88025 		ldr	r2, [r7, #1408]
 7084 01d4 1344     		add	r3, r3, r2
 7085 01d6 1A1D     		adds	r2, r3, #4
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 168


 7086              		.loc 1 903 0
 7087 01d8 07F21C43 		addw	r3, r7, #1052
 7088 01dc 1A63     		str	r2, [r3, #48]
 917:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_threshold[0]),
 7089              		.loc 1 917 0
 7090 01de D7F88035 		ldr	r3, [r7, #1408]
 7091 01e2 03F5F872 		add	r2, r3, #496
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7092              		.loc 1 903 0
 7093 01e6 07F21C43 		addw	r3, r7, #1052
 7094 01ea 5A63     		str	r2, [r3, #52]
 918:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_calibration_flag),
 7095              		.loc 1 918 0
 7096 01ec D7F88035 		ldr	r3, [r7, #1408]
 7097 01f0 03F5FF72 		add	r2, r3, #510
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7098              		.loc 1 903 0
 7099 01f4 07F21C43 		addw	r3, r7, #1052
 7100 01f8 9A63     		str	r2, [r3, #56]
 919:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_max_value[0]),
 7101              		.loc 1 919 0
 7102 01fa D7F88035 		ldr	r3, [r7, #1408]
 7103 01fe 03F5FA72 		add	r2, r3, #500
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7104              		.loc 1 903 0
 7105 0202 07F21C43 		addw	r3, r7, #1052
 7106 0206 DA63     		str	r2, [r3, #60]
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_speed[0]), 
 7107              		.loc 1 920 0
 7108 0208 D7F88035 		ldr	r3, [r7, #1408]
 7109 020c 03F5FE72 		add	r2, r3, #508
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7110              		.loc 1 903 0
 7111 0210 07F21C43 		addw	r3, r7, #1052
 7112 0214 1A64     		str	r2, [r3, #64]
 921:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].double_encoder_on_off),
 7113              		.loc 1 921 0
 7114 0216 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7115 021a D7F88015 		ldr	r1, [r7, #1408]
 7116 021e 1346     		mov	r3, r2
 7117 0220 DB00     		lsls	r3, r3, #3
 7118 0222 9B1A     		subs	r3, r3, r2
 7119 0224 1B01     		lsls	r3, r3, #4
 7120 0226 0B44     		add	r3, r3, r1
 7121 0228 03F58873 		add	r3, r3, #272
 7122 022c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7123 022e 1A46     		mov	r2, r3
 7124 0230 1346     		mov	r3, r2
 7125 0232 5B00     		lsls	r3, r3, #1
 7126 0234 1344     		add	r3, r3, r2
 7127 0236 1B01     		lsls	r3, r3, #4
 7128 0238 03F5D873 		add	r3, r3, #432
 7129 023c D7F88025 		ldr	r2, [r7, #1408]
 7130 0240 1A44     		add	r2, r2, r3
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7131              		.loc 1 903 0
 7132 0242 07F21C43 		addw	r3, r7, #1052
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 169


 7133 0246 5A64     		str	r2, [r3, #68]
 922:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].motor_handle_ratio),
 7134              		.loc 1 922 0
 7135 0248 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7136 024c D7F88015 		ldr	r1, [r7, #1408]
 7137 0250 1346     		mov	r3, r2
 7138 0252 DB00     		lsls	r3, r3, #3
 7139 0254 9B1A     		subs	r3, r3, r2
 7140 0256 1B01     		lsls	r3, r3, #4
 7141 0258 0B44     		add	r3, r3, r1
 7142 025a 03F58873 		add	r3, r3, #272
 7143 025e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7144 0260 1A46     		mov	r2, r3
 7145 0262 1346     		mov	r3, r2
 7146 0264 5B00     		lsls	r3, r3, #1
 7147 0266 1344     		add	r3, r3, r2
 7148 0268 1B01     		lsls	r3, r3, #4
 7149 026a 03F5D873 		add	r3, r3, #432
 7150 026e D7F88025 		ldr	r2, [r7, #1408]
 7151 0272 1344     		add	r3, r3, r2
 7152 0274 1A1D     		adds	r2, r3, #4
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7153              		.loc 1 903 0
 7154 0276 07F21C43 		addw	r3, r7, #1052
 7155 027a 9A64     		str	r2, [r3, #72]
 923:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activate_pwm_rescaling),                          //20
 7156              		.loc 1 923 0
 7157 027c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7158 0280 1346     		mov	r3, r2
 7159 0282 DB00     		lsls	r3, r3, #3
 7160 0284 9B1A     		subs	r3, r3, r2
 7161 0286 1B01     		lsls	r3, r3, #4
 7162 0288 E033     		adds	r3, r3, #224
 7163 028a D7F88025 		ldr	r2, [r7, #1408]
 7164 028e 1344     		add	r3, r3, r2
 7165 0290 5A1C     		adds	r2, r3, #1
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7166              		.loc 1 903 0
 7167 0292 07F21C43 		addw	r3, r7, #1052
 7168 0296 DA64     		str	r2, [r3, #76]
 924:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].curr_lookup[0]),
 7169              		.loc 1 924 0
 7170 0298 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7171 029c 1346     		mov	r3, r2
 7172 029e DB00     		lsls	r3, r3, #3
 7173 02a0 9B1A     		subs	r3, r3, r2
 7174 02a2 1B01     		lsls	r3, r3, #4
 7175 02a4 F033     		adds	r3, r3, #240
 7176 02a6 D7F88025 		ldr	r2, [r7, #1408]
 7177 02aa 1344     		add	r3, r3, r2
 7178 02ac 1A1D     		adds	r2, r3, #4
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7179              		.loc 1 903 0
 7180 02ae 07F21C43 		addw	r3, r7, #1052
 7181 02b2 1A65     		str	r2, [r3, #80]
 925:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.hw_maint_date),
 7182              		.loc 1 925 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 170


 7183 02b4 D7F88035 		ldr	r3, [r7, #1408]
 7184 02b8 03F1A102 		add	r2, r3, #161
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7185              		.loc 1 903 0
 7186 02bc 07F21C43 		addw	r3, r7, #1052
 7187 02c0 5A65     		str	r2, [r3, #84]
 926:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_pos), 
 7188              		.loc 1 926 0
 7189 02c2 D7F88035 		ldr	r3, [r7, #1408]
 7190 02c6 03F52872 		add	r2, r3, #672
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7191              		.loc 1 903 0
 7192 02ca 07F21C43 		addw	r3, r7, #1052
 7193 02ce 9A65     		str	r2, [r3, #88]
 927:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_delay),
 7194              		.loc 1 927 0
 7195 02d0 D7F88035 		ldr	r3, [r7, #1408]
 7196 02d4 03F52972 		add	r2, r3, #676
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7197              		.loc 1 903 0
 7198 02d8 07F21C43 		addw	r3, r7, #1052
 7199 02dc DA65     		str	r2, [r3, #92]
 928:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_vel),
 7200              		.loc 1 928 0
 7201 02de D7F88035 		ldr	r3, [r7, #1408]
 7202 02e2 03F52A72 		add	r2, r3, #680
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7203              		.loc 1 903 0
 7204 02e6 07F21C43 		addw	r3, r7, #1052
 7205 02ea 1A66     		str	r2, [r3, #96]
 929:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_position_flag),
 7206              		.loc 1 929 0
 7207 02ec D7F88035 		ldr	r3, [r7, #1408]
 7208 02f0 03F52B72 		add	r2, r3, #684
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7209              		.loc 1 903 0
 7210 02f4 07F21C43 		addw	r3, r7, #1052
 7211 02f8 5A66     		str	r2, [r3, #100]
 930:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.switch_emg), 
 7212              		.loc 1 930 0
 7213 02fa D7F88035 		ldr	r3, [r7, #1408]
 7214 02fe 03F2FF12 		addw	r2, r3, #511
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7215              		.loc 1 903 0
 7216 0302 07F21C43 		addw	r3, r7, #1052
 7217 0306 9A66     		str	r2, [r3, #104]
 931:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.right_left),
 7218              		.loc 1 931 0
 7219 0308 D7F88035 		ldr	r3, [r7, #1408]
 7220 030c 03F1A702 		add	r2, r3, #167
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7221              		.loc 1 903 0
 7222 0310 07F21C43 		addw	r3, r7, #1052
 7223 0314 DA66     		str	r2, [r3, #108]
 932:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.read_imu_flag),
 7224              		.loc 1 932 0
 7225 0316 D7F88035 		ldr	r3, [r7, #1408]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 171


 7226 031a 03F50072 		add	r2, r3, #512
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7227              		.loc 1 903 0
 7228 031e 07F21C43 		addw	r3, r7, #1052
 7229 0322 1A67     		str	r2, [r3, #112]
 933:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.read_exp_port_flag),                                   //30
 7230              		.loc 1 933 0
 7231 0324 D7F88035 		ldr	r3, [r7, #1408]
 7232 0328 03F22622 		addw	r2, r3, #550
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7233              		.loc 1 903 0
 7234 032c 07F21C43 		addw	r3, r7, #1052
 7235 0330 5A67     		str	r2, [r3, #116]
 934:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.reset_counters),
 7236              		.loc 1 934 0
 7237 0332 D7F88035 		ldr	r3, [r7, #1408]
 7238 0336 03F1A802 		add	r2, r3, #168
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7239              		.loc 1 903 0
 7240 033a 07F21C43 		addw	r3, r7, #1052
 7241 033e 9A67     		str	r2, [r3, #120]
 935:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.curr_time[0]),
 7242              		.loc 1 935 0
 7243 0340 D7F88035 		ldr	r3, [r7, #1408]
 7244 0344 03F50872 		add	r2, r3, #544
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7245              		.loc 1 903 0
 7246 0348 07F21C43 		addw	r3, r7, #1052
 7247 034c DA67     		str	r2, [r3, #124]
 936:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.SPI_read_delay),
 7248              		.loc 1 936 0
 7249 034e D7F88035 		ldr	r3, [r7, #1408]
 7250 0352 03F20122 		addw	r2, r3, #513
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7251              		.loc 1 903 0
 7252 0356 07F21C43 		addw	r3, r7, #1052
 7253 035a C3F88020 		str	r2, [r3, #128]
 937:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.IMU_conf[0][0]),
 7254              		.loc 1 937 0
 7255 035e D7F88035 		ldr	r3, [r7, #1408]
 7256 0362 03F20222 		addw	r2, r3, #514
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7257              		.loc 1 903 0
 7258 0366 07F21C43 		addw	r3, r7, #1052
 7259 036a C3F88420 		str	r2, [r3, #132]
 938:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.user_id),
 7260              		.loc 1 938 0
 7261 036e D7F88035 		ldr	r3, [r7, #1408]
 7262 0372 03F1AB02 		add	r2, r3, #171
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7263              		.loc 1 903 0
 7264 0376 07F21C43 		addw	r3, r7, #1052
 7265 037a C3F88820 		str	r2, [r3, #136]
 939:..\src/command_processing.c ****         (uint8*)&(MEM_P->user[MEM_P->dev.user_id].user_code_string),
 7266              		.loc 1 939 0
 7267 037e D7F88035 		ldr	r3, [r7, #1408]
 7268 0382 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 172


 7269 0386 1233     		adds	r3, r3, #18
 7270 0388 5B01     		lsls	r3, r3, #5
 7271 038a D7F88025 		ldr	r2, [r7, #1408]
 7272 038e 1A44     		add	r2, r2, r3
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7273              		.loc 1 903 0
 7274 0390 07F21C43 		addw	r3, r7, #1052
 7275 0394 C3F88C20 		str	r2, [r3, #140]
 940:..\src/command_processing.c ****         
 941:..\src/command_processing.c ****         // GENERIC PARAMS
 942:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[MOTOR_IDX].encoder_line),			// other params of 1st motor
 7276              		.loc 1 942 0
 7277 0398 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7278 039c 1346     		mov	r3, r2
 7279 039e DB00     		lsls	r3, r3, #3
 7280 03a0 9B1A     		subs	r3, r3, r2
 7281 03a2 1B01     		lsls	r3, r3, #4
 7282 03a4 03F58873 		add	r3, r3, #272
 7283 03a8 D7F88025 		ldr	r2, [r7, #1408]
 7284 03ac 1A44     		add	r2, r2, r3
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7285              		.loc 1 903 0
 7286 03ae 07F21C43 		addw	r3, r7, #1052
 7287 03b2 C3F89020 		str	r2, [r3, #144]
 943:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].motor_driver_type),
 7288              		.loc 1 943 0
 7289 03b6 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7290 03ba 1346     		mov	r3, r2
 7291 03bc DB00     		lsls	r3, r3, #3
 7292 03be 9B1A     		subs	r3, r3, r2
 7293 03c0 1B01     		lsls	r3, r3, #4
 7294 03c2 E033     		adds	r3, r3, #224
 7295 03c4 D7F88025 		ldr	r2, [r7, #1408]
 7296 03c8 1344     		add	r3, r3, r2
 7297 03ca 9A1C     		adds	r2, r3, #2
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7298              		.loc 1 903 0
 7299 03cc 07F21C43 		addw	r3, r7, #1052
 7300 03d0 C3F89420 		str	r2, [r3, #148]
 944:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].pwm_rate_limiter),
 7301              		.loc 1 944 0
 7302 03d4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7303 03d8 1346     		mov	r3, r2
 7304 03da DB00     		lsls	r3, r3, #3
 7305 03dc 9B1A     		subs	r3, r3, r2
 7306 03de 1B01     		lsls	r3, r3, #4
 7307 03e0 03F58873 		add	r3, r3, #272
 7308 03e4 D7F88025 		ldr	r2, [r7, #1408]
 7309 03e8 1344     		add	r3, r3, r2
 7310 03ea 5A1C     		adds	r2, r3, #1
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7311              		.loc 1 903 0
 7312 03ec 07F21C43 		addw	r3, r7, #1052
 7313 03f0 C3F89820 		str	r2, [r3, #152]
 945:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].not_revers_motor_flag), 	//40 
 7314              		.loc 1 945 0
 7315 03f4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 173


 7316 03f8 1346     		mov	r3, r2
 7317 03fa DB00     		lsls	r3, r3, #3
 7318 03fc 9B1A     		subs	r3, r3, r2
 7319 03fe 1B01     		lsls	r3, r3, #4
 7320 0400 03F58873 		add	r3, r3, #272
 7321 0404 D7F88025 		ldr	r2, [r7, #1408]
 7322 0408 1344     		add	r3, r3, r2
 7323 040a 9A1C     		adds	r2, r3, #2
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7324              		.loc 1 903 0
 7325 040c 07F21C43 		addw	r3, r7, #1052
 7326 0410 C3F89C20 		str	r2, [r3, #156]
 946:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 7327              		.loc 1 946 0
 7328 0414 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7329 0418 D7F88015 		ldr	r1, [r7, #1408]
 7330 041c 1346     		mov	r3, r2
 7331 041e DB00     		lsls	r3, r3, #3
 7332 0420 9B1A     		subs	r3, r3, r2
 7333 0422 1B01     		lsls	r3, r3, #4
 7334 0424 0B44     		add	r3, r3, r1
 7335 0426 03F58873 		add	r3, r3, #272
 7336 042a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7337 042c 1A46     		mov	r2, r3
 7338 042e 1346     		mov	r3, r2
 7339 0430 5B00     		lsls	r3, r3, #1
 7340 0432 1344     		add	r3, r3, r2
 7341 0434 1B01     		lsls	r3, r3, #4
 7342 0436 03F5D873 		add	r3, r3, #432
 7343 043a D7F88025 		ldr	r2, [r7, #1408]
 7344 043e 1344     		add	r3, r3, r2
 7345 0440 5A1C     		adds	r2, r3, #1
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7346              		.loc 1 903 0
 7347 0442 07F21C43 		addw	r3, r7, #1052
 7348 0446 C3F8A020 		str	r2, [r3, #160]
 947:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].gears_params),        
 7349              		.loc 1 947 0
 7350 044a 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7351 044e D7F88015 		ldr	r1, [r7, #1408]
 7352 0452 1346     		mov	r3, r2
 7353 0454 DB00     		lsls	r3, r3, #3
 7354 0456 9B1A     		subs	r3, r3, r2
 7355 0458 1B01     		lsls	r3, r3, #4
 7356 045a 0B44     		add	r3, r3, r1
 7357 045c 03F58873 		add	r3, r3, #272
 7358 0460 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7359 0462 1A46     		mov	r2, r3
 7360 0464 1346     		mov	r3, r2
 7361 0466 5B00     		lsls	r3, r3, #1
 7362 0468 1344     		add	r3, r3, r2
 7363 046a 1B01     		lsls	r3, r3, #4
 7364 046c 03F5D873 		add	r3, r3, #432
 7365 0470 D7F88025 		ldr	r2, [r7, #1408]
 7366 0474 1344     		add	r3, r3, r2
 7367 0476 5A1D     		adds	r2, r3, #5
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 174


 7368              		.loc 1 903 0
 7369 0478 07F21C43 		addw	r3, r7, #1052
 7370 047c C3F8A420 		str	r2, [r3, #164]
 948:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.use_2nd_motor_flag),					// second motor config and params
 7371              		.loc 1 948 0
 7372 0480 D7F88035 		ldr	r3, [r7, #1408]
 7373 0484 03F1A902 		add	r2, r3, #169
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7374              		.loc 1 903 0
 7375 0488 07F21C43 		addw	r3, r7, #1052
 7376 048c C3F8A820 		str	r2, [r3, #168]
 949:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p),
 7377              		.loc 1 949 0
 7378 0490 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7379 0494 1346     		mov	r3, r2
 7380 0496 DB00     		lsls	r3, r3, #3
 7381 0498 9B1A     		subs	r3, r3, r2
 7382 049a 1B01     		lsls	r3, r3, #4
 7383 049c B033     		adds	r3, r3, #176
 7384 049e D7F88025 		ldr	r2, [r7, #1408]
 7385 04a2 1A44     		add	r2, r2, r3
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7386              		.loc 1 903 0
 7387 04a4 07F21C43 		addw	r3, r7, #1052
 7388 04a8 C3F8AC20 		str	r2, [r3, #172]
 950:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p_c), 
 7389              		.loc 1 950 0
 7390 04ac 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7391 04b0 1346     		mov	r3, r2
 7392 04b2 DB00     		lsls	r3, r3, #3
 7393 04b4 9B1A     		subs	r3, r3, r2
 7394 04b6 1B01     		lsls	r3, r3, #4
 7395 04b8 B833     		adds	r3, r3, #184
 7396 04ba D7F88025 		ldr	r2, [r7, #1408]
 7397 04be 1344     		add	r3, r3, r2
 7398 04c0 1A1D     		adds	r2, r3, #4
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7399              		.loc 1 903 0
 7400 04c2 07F21C43 		addw	r3, r7, #1052
 7401 04c6 C3F8B020 		str	r2, [r3, #176]
 951:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activ),
 7402              		.loc 1 951 0
 7403 04ca 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7404 04ce 1346     		mov	r3, r2
 7405 04d0 DB00     		lsls	r3, r3, #3
 7406 04d2 9B1A     		subs	r3, r3, r2
 7407 04d4 1B01     		lsls	r3, r3, #4
 7408 04d6 E033     		adds	r3, r3, #224
 7409 04d8 D7F88025 		ldr	r2, [r7, #1408]
 7410 04dc 1A44     		add	r2, r2, r3
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7411              		.loc 1 903 0
 7412 04de 07F21C43 		addw	r3, r7, #1052
 7413 04e2 C3F8B420 		str	r2, [r3, #180]
 952:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].input_mode),
 7414              		.loc 1 952 0
 7415 04e6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 175


 7416 04ea 1346     		mov	r3, r2
 7417 04ec DB00     		lsls	r3, r3, #3
 7418 04ee 9B1A     		subs	r3, r3, r2
 7419 04f0 1B01     		lsls	r3, r3, #4
 7420 04f2 03F58473 		add	r3, r3, #264
 7421 04f6 D7F88025 		ldr	r2, [r7, #1408]
 7422 04fa 1344     		add	r3, r3, r2
 7423 04fc 9A1D     		adds	r2, r3, #6
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7424              		.loc 1 903 0
 7425 04fe 07F21C43 		addw	r3, r7, #1052
 7426 0502 C3F8B820 		str	r2, [r3, #184]
 953:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].control_mode), 
 7427              		.loc 1 953 0
 7428 0506 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7429 050a 1346     		mov	r3, r2
 7430 050c DB00     		lsls	r3, r3, #3
 7431 050e 9B1A     		subs	r3, r3, r2
 7432 0510 1B01     		lsls	r3, r3, #4
 7433 0512 03F58473 		add	r3, r3, #264
 7434 0516 D7F88025 		ldr	r2, [r7, #1408]
 7435 051a 1344     		add	r3, r3, r2
 7436 051c DA1D     		adds	r2, r3, #7
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7437              		.loc 1 903 0
 7438 051e 07F21C43 		addw	r3, r7, #1052
 7439 0522 C3F8BC20 		str	r2, [r3, #188]
 954:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].res),
 7440              		.loc 1 954 0
 7441 0526 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7442 052a D7F88015 		ldr	r1, [r7, #1408]
 7443 052e 1346     		mov	r3, r2
 7444 0530 DB00     		lsls	r3, r3, #3
 7445 0532 9B1A     		subs	r3, r3, r2
 7446 0534 1B01     		lsls	r3, r3, #4
 7447 0536 0B44     		add	r3, r3, r1
 7448 0538 03F58873 		add	r3, r3, #272
 7449 053c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7450 053e 1A46     		mov	r2, r3
 7451 0540 1346     		mov	r3, r2
 7452 0542 5B00     		lsls	r3, r3, #1
 7453 0544 1344     		add	r3, r3, r2
 7454 0546 1B01     		lsls	r3, r3, #4
 7455 0548 03F5C873 		add	r3, r3, #400
 7456 054c D7F88025 		ldr	r2, [r7, #1408]
 7457 0550 1344     		add	r3, r3, r2
 7458 0552 5A1D     		adds	r2, r3, #5
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7459              		.loc 1 903 0
 7460 0554 07F21C43 		addw	r3, r7, #1052
 7461 0558 C3F8C020 		str	r2, [r3, #192]
 955:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_off[0]),    //50
 7462              		.loc 1 955 0
 7463 055c 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7464 0560 D7F88015 		ldr	r1, [r7, #1408]
 7465 0564 1346     		mov	r3, r2
 7466 0566 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 176


 7467 0568 9B1A     		subs	r3, r3, r2
 7468 056a 1B01     		lsls	r3, r3, #4
 7469 056c 0B44     		add	r3, r3, r1
 7470 056e 03F58873 		add	r3, r3, #272
 7471 0572 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7472 0574 1A46     		mov	r2, r3
 7473 0576 1346     		mov	r3, r2
 7474 0578 5B00     		lsls	r3, r3, #1
 7475 057a 1344     		add	r3, r3, r2
 7476 057c 1B01     		lsls	r3, r3, #4
 7477 057e 03F5CC73 		add	r3, r3, #408
 7478 0582 D7F88025 		ldr	r2, [r7, #1408]
 7479 0586 1A44     		add	r2, r2, r3
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7480              		.loc 1 903 0
 7481 0588 07F21C43 		addw	r3, r7, #1052
 7482 058c C3F8C420 		str	r2, [r3, #196]
 956:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_mult[0]),
 7483              		.loc 1 956 0
 7484 0590 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7485 0594 D7F88015 		ldr	r1, [r7, #1408]
 7486 0598 1346     		mov	r3, r2
 7487 059a DB00     		lsls	r3, r3, #3
 7488 059c 9B1A     		subs	r3, r3, r2
 7489 059e 1B01     		lsls	r3, r3, #4
 7490 05a0 0B44     		add	r3, r3, r1
 7491 05a2 03F58873 		add	r3, r3, #272
 7492 05a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7493 05a8 1A46     		mov	r2, r3
 7494 05aa 1346     		mov	r3, r2
 7495 05ac 5B00     		lsls	r3, r3, #1
 7496 05ae 1344     		add	r3, r3, r2
 7497 05b0 1B01     		lsls	r3, r3, #4
 7498 05b2 03F5D073 		add	r3, r3, #416
 7499 05b6 D7F88025 		ldr	r2, [r7, #1408]
 7500 05ba 1344     		add	r3, r3, r2
 7501 05bc 1A1D     		adds	r2, r3, #4
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7502              		.loc 1 903 0
 7503 05be 07F21C43 		addw	r3, r7, #1052
 7504 05c2 C3F8C820 		str	r2, [r3, #200]
 957:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_flag),
 7505              		.loc 1 957 0
 7506 05c6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7507 05ca 1346     		mov	r3, r2
 7508 05cc DB00     		lsls	r3, r3, #3
 7509 05ce 9B1A     		subs	r3, r3, r2
 7510 05d0 1B01     		lsls	r3, r3, #4
 7511 05d2 E033     		adds	r3, r3, #224
 7512 05d4 D7F88025 		ldr	r2, [r7, #1408]
 7513 05d8 1344     		add	r3, r3, r2
 7514 05da DA1C     		adds	r2, r3, #3
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7515              		.loc 1 903 0
 7516 05dc 07F21C43 		addw	r3, r7, #1052
 7517 05e0 C3F8CC20 		str	r2, [r3, #204]
 958:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_inf), 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 177


 7518              		.loc 1 958 0
 7519 05e4 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7520 05e8 1346     		mov	r3, r2
 7521 05ea DB00     		lsls	r3, r3, #3
 7522 05ec 9B1A     		subs	r3, r3, r2
 7523 05ee 1B01     		lsls	r3, r3, #4
 7524 05f0 E033     		adds	r3, r3, #224
 7525 05f2 D7F88025 		ldr	r2, [r7, #1408]
 7526 05f6 1344     		add	r3, r3, r2
 7527 05f8 1A1D     		adds	r2, r3, #4
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7528              		.loc 1 903 0
 7529 05fa 07F21C43 		addw	r3, r7, #1052
 7530 05fe C3F8D020 		str	r2, [r3, #208]
 959:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].max_step_neg),
 7531              		.loc 1 959 0
 7532 0602 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7533 0606 1346     		mov	r3, r2
 7534 0608 DB00     		lsls	r3, r3, #3
 7535 060a 9B1A     		subs	r3, r3, r2
 7536 060c 1B01     		lsls	r3, r3, #4
 7537 060e E833     		adds	r3, r3, #232
 7538 0610 D7F88025 		ldr	r2, [r7, #1408]
 7539 0614 1344     		add	r3, r3, r2
 7540 0616 1A1D     		adds	r2, r3, #4
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7541              		.loc 1 903 0
 7542 0618 07F21C43 		addw	r3, r7, #1052
 7543 061c C3F8D420 		str	r2, [r3, #212]
 960:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].current_limit),
 7544              		.loc 1 960 0
 7545 0620 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7546 0624 1346     		mov	r3, r2
 7547 0626 DB00     		lsls	r3, r3, #3
 7548 0628 9B1A     		subs	r3, r3, r2
 7549 062a 1B01     		lsls	r3, r3, #4
 7550 062c 03F58473 		add	r3, r3, #264
 7551 0630 D7F88025 		ldr	r2, [r7, #1408]
 7552 0634 1344     		add	r3, r3, r2
 7553 0636 1A1D     		adds	r2, r3, #4
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7554              		.loc 1 903 0
 7555 0638 07F21C43 		addw	r3, r7, #1052
 7556 063c C3F8D820 		str	r2, [r3, #216]
 961:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].double_encoder_on_off),
 7557              		.loc 1 961 0
 7558 0640 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7559 0644 D7F88015 		ldr	r1, [r7, #1408]
 7560 0648 1346     		mov	r3, r2
 7561 064a DB00     		lsls	r3, r3, #3
 7562 064c 9B1A     		subs	r3, r3, r2
 7563 064e 1B01     		lsls	r3, r3, #4
 7564 0650 0B44     		add	r3, r3, r1
 7565 0652 03F58873 		add	r3, r3, #272
 7566 0656 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7567 0658 1A46     		mov	r2, r3
 7568 065a 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 178


 7569 065c 5B00     		lsls	r3, r3, #1
 7570 065e 1344     		add	r3, r3, r2
 7571 0660 1B01     		lsls	r3, r3, #4
 7572 0662 03F5D873 		add	r3, r3, #432
 7573 0666 D7F88025 		ldr	r2, [r7, #1408]
 7574 066a 1A44     		add	r2, r2, r3
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7575              		.loc 1 903 0
 7576 066c 07F21C43 		addw	r3, r7, #1052
 7577 0670 C3F8DC20 		str	r2, [r3, #220]
 962:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].motor_handle_ratio),
 7578              		.loc 1 962 0
 7579 0674 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7580 0678 D7F88015 		ldr	r1, [r7, #1408]
 7581 067c 1346     		mov	r3, r2
 7582 067e DB00     		lsls	r3, r3, #3
 7583 0680 9B1A     		subs	r3, r3, r2
 7584 0682 1B01     		lsls	r3, r3, #4
 7585 0684 0B44     		add	r3, r3, r1
 7586 0686 03F58873 		add	r3, r3, #272
 7587 068a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7588 068c 1A46     		mov	r2, r3
 7589 068e 1346     		mov	r3, r2
 7590 0690 5B00     		lsls	r3, r3, #1
 7591 0692 1344     		add	r3, r3, r2
 7592 0694 1B01     		lsls	r3, r3, #4
 7593 0696 03F5D873 		add	r3, r3, #432
 7594 069a D7F88025 		ldr	r2, [r7, #1408]
 7595 069e 1344     		add	r3, r3, r2
 7596 06a0 1A1D     		adds	r2, r3, #4
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7597              		.loc 1 903 0
 7598 06a2 07F21C43 		addw	r3, r7, #1052
 7599 06a6 C3F8E020 		str	r2, [r3, #224]
 963:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activate_pwm_rescaling),
 7600              		.loc 1 963 0
 7601 06aa 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7602 06ae 1346     		mov	r3, r2
 7603 06b0 DB00     		lsls	r3, r3, #3
 7604 06b2 9B1A     		subs	r3, r3, r2
 7605 06b4 1B01     		lsls	r3, r3, #4
 7606 06b6 E033     		adds	r3, r3, #224
 7607 06b8 D7F88025 		ldr	r2, [r7, #1408]
 7608 06bc 1344     		add	r3, r3, r2
 7609 06be 5A1C     		adds	r2, r3, #1
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7610              		.loc 1 903 0
 7611 06c0 07F21C43 		addw	r3, r7, #1052
 7612 06c4 C3F8E420 		str	r2, [r3, #228]
 964:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].curr_lookup[0]),
 7613              		.loc 1 964 0
 7614 06c8 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7615 06cc 1346     		mov	r3, r2
 7616 06ce DB00     		lsls	r3, r3, #3
 7617 06d0 9B1A     		subs	r3, r3, r2
 7618 06d2 1B01     		lsls	r3, r3, #4
 7619 06d4 F033     		adds	r3, r3, #240
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 179


 7620 06d6 D7F88025 		ldr	r2, [r7, #1408]
 7621 06da 1344     		add	r3, r3, r2
 7622 06dc 1A1D     		adds	r2, r3, #4
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7623              		.loc 1 903 0
 7624 06de 07F21C43 		addw	r3, r7, #1052
 7625 06e2 C3F8E820 		str	r2, [r3, #232]
 965:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line),         //60
 7626              		.loc 1 965 0
 7627 06e6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7628 06ea 1346     		mov	r3, r2
 7629 06ec DB00     		lsls	r3, r3, #3
 7630 06ee 9B1A     		subs	r3, r3, r2
 7631 06f0 1B01     		lsls	r3, r3, #4
 7632 06f2 03F58873 		add	r3, r3, #272
 7633 06f6 D7F88025 		ldr	r2, [r7, #1408]
 7634 06fa 1A44     		add	r2, r2, r3
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7635              		.loc 1 903 0
 7636 06fc 07F21C43 		addw	r3, r7, #1052
 7637 0700 C3F8EC20 		str	r2, [r3, #236]
 966:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].motor_driver_type),
 7638              		.loc 1 966 0
 7639 0704 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7640 0708 1346     		mov	r3, r2
 7641 070a DB00     		lsls	r3, r3, #3
 7642 070c 9B1A     		subs	r3, r3, r2
 7643 070e 1B01     		lsls	r3, r3, #4
 7644 0710 E033     		adds	r3, r3, #224
 7645 0712 D7F88025 		ldr	r2, [r7, #1408]
 7646 0716 1344     		add	r3, r3, r2
 7647 0718 9A1C     		adds	r2, r3, #2
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7648              		.loc 1 903 0
 7649 071a 07F21C43 		addw	r3, r7, #1052
 7650 071e C3F8F020 		str	r2, [r3, #240]
 967:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pwm_rate_limiter),
 7651              		.loc 1 967 0
 7652 0722 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7653 0726 1346     		mov	r3, r2
 7654 0728 DB00     		lsls	r3, r3, #3
 7655 072a 9B1A     		subs	r3, r3, r2
 7656 072c 1B01     		lsls	r3, r3, #4
 7657 072e 03F58873 		add	r3, r3, #272
 7658 0732 D7F88025 		ldr	r2, [r7, #1408]
 7659 0736 1344     		add	r3, r3, r2
 7660 0738 5A1C     		adds	r2, r3, #1
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7661              		.loc 1 903 0
 7662 073a 07F21C43 		addw	r3, r7, #1052
 7663 073e C3F8F420 		str	r2, [r3, #244]
 968:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].not_revers_motor_flag),
 7664              		.loc 1 968 0
 7665 0742 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7666 0746 1346     		mov	r3, r2
 7667 0748 DB00     		lsls	r3, r3, #3
 7668 074a 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 180


 7669 074c 1B01     		lsls	r3, r3, #4
 7670 074e 03F58873 		add	r3, r3, #272
 7671 0752 D7F88025 		ldr	r2, [r7, #1408]
 7672 0756 1344     		add	r3, r3, r2
 7673 0758 9A1C     		adds	r2, r3, #2
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7674              		.loc 1 903 0
 7675 075a 07F21C43 		addw	r3, r7, #1052
 7676 075e C3F8F820 		str	r2, [r3, #248]
 969:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 7677              		.loc 1 969 0
 7678 0762 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7679 0766 D7F88015 		ldr	r1, [r7, #1408]
 7680 076a 1346     		mov	r3, r2
 7681 076c DB00     		lsls	r3, r3, #3
 7682 076e 9B1A     		subs	r3, r3, r2
 7683 0770 1B01     		lsls	r3, r3, #4
 7684 0772 0B44     		add	r3, r3, r1
 7685 0774 03F58873 		add	r3, r3, #272
 7686 0778 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7687 077a 1A46     		mov	r2, r3
 7688 077c 1346     		mov	r3, r2
 7689 077e 5B00     		lsls	r3, r3, #1
 7690 0780 1344     		add	r3, r3, r2
 7691 0782 1B01     		lsls	r3, r3, #4
 7692 0784 03F5D873 		add	r3, r3, #432
 7693 0788 D7F88025 		ldr	r2, [r7, #1408]
 7694 078c 1344     		add	r3, r3, r2
 7695 078e 5A1C     		adds	r2, r3, #1
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7696              		.loc 1 903 0
 7697 0790 07F21C43 		addw	r3, r7, #1052
 7698 0794 C3F8FC20 		str	r2, [r3, #252]
 970:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].gears_params),
 7699              		.loc 1 970 0
 7700 0798 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7701 079c D7F88015 		ldr	r1, [r7, #1408]
 7702 07a0 1346     		mov	r3, r2
 7703 07a2 DB00     		lsls	r3, r3, #3
 7704 07a4 9B1A     		subs	r3, r3, r2
 7705 07a6 1B01     		lsls	r3, r3, #4
 7706 07a8 0B44     		add	r3, r3, r1
 7707 07aa 03F58873 		add	r3, r3, #272
 7708 07ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7709 07b0 1A46     		mov	r2, r3
 7710 07b2 1346     		mov	r3, r2
 7711 07b4 5B00     		lsls	r3, r3, #1
 7712 07b6 1344     		add	r3, r3, r2
 7713 07b8 1B01     		lsls	r3, r3, #4
 7714 07ba 03F5D873 		add	r3, r3, #432
 7715 07be D7F88025 		ldr	r2, [r7, #1408]
 7716 07c2 1344     		add	r3, r3, r2
 7717 07c4 5A1D     		adds	r2, r3, #5
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7718              		.loc 1 903 0
 7719 07c6 07F21C43 		addw	r3, r7, #1052
 7720 07ca C3F80021 		str	r2, [r3, #256]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 181


 971:..\src/command_processing.c ****         
 972:..\src/command_processing.c **** 		(uint8*)&(MEM_P->enc[0].Enc_raw_read_conf[0]),					// additional generic params
 7721              		.loc 1 972 0
 7722 07ce D7F88035 		ldr	r3, [r7, #1408]
 7723 07d2 03F5C872 		add	r2, r3, #400
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7724              		.loc 1 903 0
 7725 07d6 07F21C43 		addw	r3, r7, #1052
 7726 07da C3F80421 		str	r2, [r3, #260]
 973:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[1].Enc_raw_read_conf[0]),
 7727              		.loc 1 973 0
 7728 07de D7F88035 		ldr	r3, [r7, #1408]
 7729 07e2 03F5E072 		add	r2, r3, #448
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7730              		.loc 1 903 0
 7731 07e6 07F21C43 		addw	r3, r7, #1052
 7732 07ea C3F80821 		str	r2, [r3, #264]
 974:..\src/command_processing.c ****         (uint8*)&(MEM_P->exp.read_ADC_sensors_port_flag),		
 7733              		.loc 1 974 0
 7734 07ee D7F88035 		ldr	r3, [r7, #1408]
 7735 07f2 03F22722 		addw	r2, r3, #551
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7736              		.loc 1 903 0
 7737 07f6 07F21C43 		addw	r3, r7, #1052
 7738 07fa C3F80C21 		str	r2, [r3, #268]
 975:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[0]),
 7739              		.loc 1 975 0
 7740 07fe D7F88035 		ldr	r3, [r7, #1408]
 7741 0802 03F50A72 		add	r2, r3, #552
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7742              		.loc 1 903 0
 7743 0806 07F21C43 		addw	r3, r7, #1052
 7744 080a C3F81021 		str	r2, [r3, #272]
 976:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[6]),                          //70  
 7745              		.loc 1 976 0
 7746 080e D7F88035 		ldr	r3, [r7, #1408]
 7747 0812 03F22E22 		addw	r2, r3, #558
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7748              		.loc 1 903 0
 7749 0816 07F21C43 		addw	r3, r7, #1052
 7750 081a C3F81421 		str	r2, [r3, #276]
 977:..\src/command_processing.c ****         (uint8*)&(MEM_P->exp.record_EMG_history_on_SD),
 7751              		.loc 1 977 0
 7752 081e D7F88035 		ldr	r3, [r7, #1408]
 7753 0822 03F50D72 		add	r2, r3, #564
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7754              		.loc 1 903 0
 7755 0826 07F21C43 		addw	r3, r7, #1052
 7756 082a C3F81821 		str	r2, [r3, #280]
 978:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_closure_speed),
 7757              		.loc 1 978 0
 7758 082e D7F88035 		ldr	r3, [r7, #1408]
 7759 0832 03F52C72 		add	r2, r3, #688
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7760              		.loc 1 903 0
 7761 0836 07F21C43 		addw	r3, r7, #1052
 7762 083a C3F81C21 		str	r2, [r3, #284]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 182


 979:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_threshold),
 7763              		.loc 1 979 0
 7764 083e D7F88035 		ldr	r3, [r7, #1408]
 7765 0842 03F2B222 		addw	r2, r3, #690
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7766              		.loc 1 903 0
 7767 0846 07F21C43 		addw	r3, r7, #1052
 7768 084a C3F82021 		str	r2, [r3, #288]
 980:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_gains[0]),
 7769              		.loc 1 980 0
 7770 084e D7F88035 		ldr	r3, [r7, #1408]
 7771 0852 03F52D72 		add	r2, r3, #692
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7772              		.loc 1 903 0
 7773 0856 07F21C43 		addw	r3, r7, #1052
 7774 085a C3F82421 		str	r2, [r3, #292]
 981:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.dev_type),
 7775              		.loc 1 981 0
 7776 085e D7F88035 		ldr	r3, [r7, #1408]
 7777 0862 03F1AC02 		add	r2, r3, #172
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7778              		.loc 1 903 0
 7779 0866 07F21C43 		addw	r3, r7, #1052
 7780 086a C3F82821 		str	r2, [r3, #296]
 982:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.activation_mode),                           
 7781              		.loc 1 982 0
 7782 086e D7F88035 		ldr	r3, [r7, #1408]
 7783 0872 03F53872 		add	r2, r3, #736
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7784              		.loc 1 903 0
 7785 0876 07F21C43 		addw	r3, r7, #1052
 7786 087a C3F82C21 		str	r2, [r3, #300]
 983:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.fast_act_threshold[0]),
 7787              		.loc 1 983 0
 7788 087e D7F88035 		ldr	r3, [r7, #1408]
 7789 0882 03F2E222 		addw	r2, r3, #738
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7790              		.loc 1 903 0
 7791 0886 07F21C43 		addw	r3, r7, #1052
 7792 088a C3F83021 		str	r2, [r3, #304]
 984:..\src/command_processing.c ****         
 985:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.wrist_direction_association),              // additional wrist params
 7793              		.loc 1 985 0
 7794 088e D7F88035 		ldr	r3, [r7, #1408]
 7795 0892 03F2E622 		addw	r2, r3, #742
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7796              		.loc 1 903 0
 7797 0896 07F21C43 		addw	r3, r7, #1052
 7798 089a C3F83421 		str	r2, [r3, #308]
 986:..\src/command_processing.c ****         
 987:..\src/command_processing.c ****         (uint8*)&(MEM_P->MS.slave_comm_active),                        // additional master params
 7799              		.loc 1 987 0
 7800 089e D7F88035 		ldr	r3, [r7, #1408]
 7801 08a2 03F53072 		add	r2, r3, #704
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7802              		.loc 1 903 0
 7803 08a6 07F21C43 		addw	r3, r7, #1052
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 183


 7804 08aa C3F83821 		str	r2, [r3, #312]
 988:..\src/command_processing.c ****         (uint8*)&(MEM_P->MS.slave_ID),
 7805              		.loc 1 988 0
 7806 08ae D7F88035 		ldr	r3, [r7, #1408]
 7807 08b2 03F2C122 		addw	r2, r3, #705
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7808              		.loc 1 903 0
 7809 08b6 07F21C43 		addw	r3, r7, #1052
 7810 08ba C3F83C21 		str	r2, [r3, #316]
 989:..\src/command_processing.c ****         
 990:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.max_residual_current),                     // additional feedback param
 7811              		.loc 1 990 0
 7812 08be D7F88035 		ldr	r3, [r7, #1408]
 7813 08c2 03F53472 		add	r2, r3, #720
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7814              		.loc 1 903 0
 7815 08c6 07F21C43 		addw	r3, r7, #1052
 7816 08ca C3F84021 		str	r2, [r3, #320]
 991:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.maximum_pressure_kPa),
 7817              		.loc 1 991 0
 7818 08ce D7F88035 		ldr	r3, [r7, #1408]
 7819 08d2 03F53572 		add	r2, r3, #724
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7820              		.loc 1 903 0
 7821 08d6 07F21C43 		addw	r3, r7, #1052
 7822 08da C3F84421 		str	r2, [r3, #324]
 992:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.prop_err_fb_gain)
 7823              		.loc 1 992 0
 7824 08de D7F88035 		ldr	r3, [r7, #1408]
 7825 08e2 03F53672 		add	r2, r3, #728
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7826              		.loc 1 903 0
 7827 08e6 07F21C43 		addw	r3, r7, #1052
 7828 08ea C3F84821 		str	r2, [r3, #328]
 993:..\src/command_processing.c ****         
 994:..\src/command_processing.c **** 
 995:..\src/command_processing.c ****     };
 996:..\src/command_processing.c ****     
 997:..\src/command_processing.c ****     uint8 TYPES[NUM_OF_PARAMS] = {
 7829              		.loc 1 997 0
 7830 08ee 07F57273 		add	r3, r7, #968
 7831 08f2 F64A     		ldr	r2, .L375
 7832 08f4 1846     		mov	r0, r3
 7833 08f6 1146     		mov	r1, r2
 7834 08f8 5323     		movs	r3, #83
 7835 08fa 1A46     		mov	r2, r3
 7836 08fc FFF7FEFF 		bl	memcpy
 998:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLOAT, TYPE_FLOAT, TYPE_FLAG, 
 999:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, TYPE_INT16, 
1000:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_INT32, TYPE_INT32, 
1001:..\src/command_processing.c ****         TYPE_INT16, TYPE_UINT16, TYPE_FLAG, TYPE_UINT32, 
1002:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_INT8, TYPE_FLAG, 
1003:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_UINT8, TYPE_INT32, TYPE_INT32,
1004:..\src/command_processing.c ****         TYPE_INT32, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, 
1005:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, 
1006:..\src/command_processing.c ****         TYPE_FLAG, TYPE_UINT8, TYPE_FLAG, TYPE_STRING,
1007:..\src/command_processing.c ****         
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 184


1008:..\src/command_processing.c ****         // GENERIC PARAMS
1009:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_UINT8, TYPE_FLAG,
1010:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT8, TYPE_FLAG, TYPE_FLOAT, 
1011:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG,
1012:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT16, TYPE_FLOAT, TYPE_FLAG, 
1013:..\src/command_processing.c ****         TYPE_INT32, TYPE_INT32, TYPE_INT16, TYPE_FLAG,
1014:..\src/command_processing.c ****         TYPE_INT8,  TYPE_FLAG, TYPE_FLOAT, TYPE_UINT8,
1015:..\src/command_processing.c ****         TYPE_FLAG,  TYPE_UINT8, TYPE_FLAG, TYPE_UINT8,
1016:..\src/command_processing.c ****         TYPE_INT8, TYPE_UINT8, TYPE_UINT8, TYPE_FLAG,
1017:..\src/command_processing.c ****         TYPE_UINT8, TYPE_UINT8, TYPE_FLAG, TYPE_UINT16, 
1018:..\src/command_processing.c ****         TYPE_INT16, TYPE_UINT16, TYPE_FLAG, TYPE_FLAG,
1019:..\src/command_processing.c ****         TYPE_UINT16,
1020:..\src/command_processing.c ****         
1021:..\src/command_processing.c ****                     TYPE_FLAG, TYPE_FLAG, TYPE_UINT8,
1022:..\src/command_processing.c ****         TYPE_INT32, TYPE_FLOAT, TYPE_FLOAT
1023:..\src/command_processing.c ****     };
1024:..\src/command_processing.c **** 
1025:..\src/command_processing.c ****     uint8 NUM_ITEMS[NUM_OF_PARAMS] = {
 7837              		.loc 1 1025 0
 7838 0900 07F55D73 		add	r3, r7, #884
 7839 0904 0122     		movs	r2, #1
 7840 0906 1A70     		strb	r2, [r3]
 7841 0908 07F55D73 		add	r3, r7, #884
 7842 090c 0322     		movs	r2, #3
 7843 090e 5A70     		strb	r2, [r3, #1]
 7844 0910 07F55D73 		add	r3, r7, #884
 7845 0914 0322     		movs	r2, #3
 7846 0916 9A70     		strb	r2, [r3, #2]
 7847 0918 07F55D73 		add	r3, r7, #884
 7848 091c 0122     		movs	r2, #1
 7849 091e DA70     		strb	r2, [r3, #3]
 7850 0920 07F55D73 		add	r3, r7, #884
 7851 0924 0122     		movs	r2, #1
 7852 0926 1A71     		strb	r2, [r3, #4]
 7853 0928 07F55D73 		add	r3, r7, #884
 7854 092c 0122     		movs	r2, #1
 7855 092e 5A71     		strb	r2, [r3, #5]
 7856 0930 07F55D73 		add	r3, r7, #884
 7857 0934 0322     		movs	r2, #3
 7858 0936 9A71     		strb	r2, [r3, #6]
 7859 0938 07F55D73 		add	r3, r7, #884
 7860 093c 0322     		movs	r2, #3
 7861 093e DA71     		strb	r2, [r3, #7]
 7862 0940 07F55D73 		add	r3, r7, #884
 7863 0944 0322     		movs	r2, #3
 7864 0946 1A72     		strb	r2, [r3, #8]
 7865 0948 07F55D73 		add	r3, r7, #884
 7866 094c 0122     		movs	r2, #1
 7867 094e 5A72     		strb	r2, [r3, #9]
 7868 0950 07F55D73 		add	r3, r7, #884
 7869 0954 0222     		movs	r2, #2
 7870 0956 9A72     		strb	r2, [r3, #10]
 7871 0958 07F55D73 		add	r3, r7, #884
 7872 095c 0222     		movs	r2, #2
 7873 095e DA72     		strb	r2, [r3, #11]
 7874 0960 07F55D73 		add	r3, r7, #884
 7875 0964 0122     		movs	r2, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 185


 7876 0966 1A73     		strb	r2, [r3, #12]
 7877 0968 07F55D73 		add	r3, r7, #884
 7878 096c 0222     		movs	r2, #2
 7879 096e 5A73     		strb	r2, [r3, #13]
 7880 0970 07F55D73 		add	r3, r7, #884
 7881 0974 0122     		movs	r2, #1
 7882 0976 9A73     		strb	r2, [r3, #14]
 7883 0978 07F55D73 		add	r3, r7, #884
 7884 097c 0222     		movs	r2, #2
 7885 097e DA73     		strb	r2, [r3, #15]
 7886 0980 07F55D73 		add	r3, r7, #884
 7887 0984 0222     		movs	r2, #2
 7888 0986 1A74     		strb	r2, [r3, #16]
 7889 0988 07F55D73 		add	r3, r7, #884
 7890 098c 0122     		movs	r2, #1
 7891 098e 5A74     		strb	r2, [r3, #17]
 7892 0990 07F55D73 		add	r3, r7, #884
 7893 0994 0122     		movs	r2, #1
 7894 0996 9A74     		strb	r2, [r3, #18]
 7895 0998 07F55D73 		add	r3, r7, #884
 7896 099c 0122     		movs	r2, #1
 7897 099e DA74     		strb	r2, [r3, #19]
 7898 09a0 07F55D73 		add	r3, r7, #884
 7899 09a4 0622     		movs	r2, #6
 7900 09a6 1A75     		strb	r2, [r3, #20]
 7901 09a8 07F55D73 		add	r3, r7, #884
 7902 09ac 0322     		movs	r2, #3
 7903 09ae 5A75     		strb	r2, [r3, #21]
 7904 09b0 07F55D73 		add	r3, r7, #884
 7905 09b4 0122     		movs	r2, #1
 7906 09b6 9A75     		strb	r2, [r3, #22]
 7907 09b8 07F55D73 		add	r3, r7, #884
 7908 09bc 0122     		movs	r2, #1
 7909 09be DA75     		strb	r2, [r3, #23]
 7910 09c0 07F55D73 		add	r3, r7, #884
 7911 09c4 0122     		movs	r2, #1
 7912 09c6 1A76     		strb	r2, [r3, #24]
 7913 09c8 07F55D73 		add	r3, r7, #884
 7914 09cc 0122     		movs	r2, #1
 7915 09ce 5A76     		strb	r2, [r3, #25]
 7916 09d0 07F55D73 		add	r3, r7, #884
 7917 09d4 0122     		movs	r2, #1
 7918 09d6 9A76     		strb	r2, [r3, #26]
 7919 09d8 07F55D73 		add	r3, r7, #884
 7920 09dc 0122     		movs	r2, #1
 7921 09de DA76     		strb	r2, [r3, #27]
 7922 09e0 07F55D73 		add	r3, r7, #884
 7923 09e4 0122     		movs	r2, #1
 7924 09e6 1A77     		strb	r2, [r3, #28]
 7925 09e8 07F55D73 		add	r3, r7, #884
 7926 09ec 0122     		movs	r2, #1
 7927 09ee 5A77     		strb	r2, [r3, #29]
 7928 09f0 07F55D73 		add	r3, r7, #884
 7929 09f4 0122     		movs	r2, #1
 7930 09f6 9A77     		strb	r2, [r3, #30]
 7931 09f8 07F55D73 		add	r3, r7, #884
 7932 09fc 0622     		movs	r2, #6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 186


 7933 09fe DA77     		strb	r2, [r3, #31]
 7934 0a00 07F55D73 		add	r3, r7, #884
 7935 0a04 0122     		movs	r2, #1
 7936 0a06 83F82020 		strb	r2, [r3, #32]
 7937 0a0a 07F55D73 		add	r3, r7, #884
 7938 0a0e 0522     		movs	r2, #5
 7939 0a10 83F82120 		strb	r2, [r3, #33]
 7940 0a14 07F55D73 		add	r3, r7, #884
 7941 0a18 0122     		movs	r2, #1
 7942 0a1a 83F82220 		strb	r2, [r3, #34]
 7943 0a1e 07F55D73 		add	r3, r7, #884
 7944 0a22 0622     		movs	r2, #6
 7945 0a24 83F82320 		strb	r2, [r3, #35]
 7946 0a28 07F55D73 		add	r3, r7, #884
 7947 0a2c 0122     		movs	r2, #1
 7948 0a2e 83F82420 		strb	r2, [r3, #36]
 7949 0a32 07F55D73 		add	r3, r7, #884
 7950 0a36 0122     		movs	r2, #1
 7951 0a38 83F82520 		strb	r2, [r3, #37]
 7952 0a3c 07F55D73 		add	r3, r7, #884
 7953 0a40 0122     		movs	r2, #1
 7954 0a42 83F82620 		strb	r2, [r3, #38]
 7955 0a46 07F55D73 		add	r3, r7, #884
 7956 0a4a 0122     		movs	r2, #1
 7957 0a4c 83F82720 		strb	r2, [r3, #39]
 7958 0a50 07F55D73 		add	r3, r7, #884
 7959 0a54 0322     		movs	r2, #3
 7960 0a56 83F82820 		strb	r2, [r3, #40]
 7961 0a5a 07F55D73 		add	r3, r7, #884
 7962 0a5e 0322     		movs	r2, #3
 7963 0a60 83F82920 		strb	r2, [r3, #41]
 7964 0a64 07F55D73 		add	r3, r7, #884
 7965 0a68 0122     		movs	r2, #1
 7966 0a6a 83F82A20 		strb	r2, [r3, #42]
 7967 0a6e 07F55D73 		add	r3, r7, #884
 7968 0a72 0322     		movs	r2, #3
 7969 0a74 83F82B20 		strb	r2, [r3, #43]
 7970 0a78 07F55D73 		add	r3, r7, #884
 7971 0a7c 0322     		movs	r2, #3
 7972 0a7e 83F82C20 		strb	r2, [r3, #44]
 7973 0a82 07F55D73 		add	r3, r7, #884
 7974 0a86 0122     		movs	r2, #1
 7975 0a88 83F82D20 		strb	r2, [r3, #45]
 7976 0a8c 07F55D73 		add	r3, r7, #884
 7977 0a90 0122     		movs	r2, #1
 7978 0a92 83F82E20 		strb	r2, [r3, #46]
 7979 0a96 07F55D73 		add	r3, r7, #884
 7980 0a9a 0122     		movs	r2, #1
 7981 0a9c 83F82F20 		strb	r2, [r3, #47]
 7982 0aa0 07F55D73 		add	r3, r7, #884
 7983 0aa4 0322     		movs	r2, #3
 7984 0aa6 83F83020 		strb	r2, [r3, #48]
 7985 0aaa 07F55D73 		add	r3, r7, #884
 7986 0aae 0322     		movs	r2, #3
 7987 0ab0 83F83120 		strb	r2, [r3, #49]
 7988 0ab4 07F55D73 		add	r3, r7, #884
 7989 0ab8 0322     		movs	r2, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 187


 7990 0aba 83F83220 		strb	r2, [r3, #50]
 7991 0abe 07F55D73 		add	r3, r7, #884
 7992 0ac2 0122     		movs	r2, #1
 7993 0ac4 83F83320 		strb	r2, [r3, #51]
 7994 0ac8 07F55D73 		add	r3, r7, #884
 7995 0acc 0222     		movs	r2, #2
 7996 0ace 83F83420 		strb	r2, [r3, #52]
 7997 0ad2 07F55D73 		add	r3, r7, #884
 7998 0ad6 0222     		movs	r2, #2
 7999 0ad8 83F83520 		strb	r2, [r3, #53]
 8000 0adc 07F55D73 		add	r3, r7, #884
 8001 0ae0 0122     		movs	r2, #1
 8002 0ae2 83F83620 		strb	r2, [r3, #54]
 8003 0ae6 07F55D73 		add	r3, r7, #884
 8004 0aea 0122     		movs	r2, #1
 8005 0aec 83F83720 		strb	r2, [r3, #55]
 8006 0af0 07F55D73 		add	r3, r7, #884
 8007 0af4 0122     		movs	r2, #1
 8008 0af6 83F83820 		strb	r2, [r3, #56]
 8009 0afa 07F55D73 		add	r3, r7, #884
 8010 0afe 0122     		movs	r2, #1
 8011 0b00 83F83920 		strb	r2, [r3, #57]
 8012 0b04 07F55D73 		add	r3, r7, #884
 8013 0b08 0622     		movs	r2, #6
 8014 0b0a 83F83A20 		strb	r2, [r3, #58]
 8015 0b0e 07F55D73 		add	r3, r7, #884
 8016 0b12 0122     		movs	r2, #1
 8017 0b14 83F83B20 		strb	r2, [r3, #59]
 8018 0b18 07F55D73 		add	r3, r7, #884
 8019 0b1c 0122     		movs	r2, #1
 8020 0b1e 83F83C20 		strb	r2, [r3, #60]
 8021 0b22 07F55D73 		add	r3, r7, #884
 8022 0b26 0122     		movs	r2, #1
 8023 0b28 83F83D20 		strb	r2, [r3, #61]
 8024 0b2c 07F55D73 		add	r3, r7, #884
 8025 0b30 0122     		movs	r2, #1
 8026 0b32 83F83E20 		strb	r2, [r3, #62]
 8027 0b36 07F55D73 		add	r3, r7, #884
 8028 0b3a 0322     		movs	r2, #3
 8029 0b3c 83F83F20 		strb	r2, [r3, #63]
 8030 0b40 07F55D73 		add	r3, r7, #884
 8031 0b44 0322     		movs	r2, #3
 8032 0b46 83F84020 		strb	r2, [r3, #64]
1026:..\src/command_processing.c ****         1, 3, 3, 1, 
1027:..\src/command_processing.c ****         1, 1, 3, 3,
1028:..\src/command_processing.c ****         3, 1, 2, 2, 
1029:..\src/command_processing.c ****         1, 2, 1, 2,
1030:..\src/command_processing.c ****         2, 1, 1, 1, 
1031:..\src/command_processing.c ****         6, 3, 1, 1,
1032:..\src/command_processing.c ****         1, 1, 1, 1, 
1033:..\src/command_processing.c ****         1, 1, 1, 6,
1034:..\src/command_processing.c ****         1, 5, 1, 6,
1035:..\src/command_processing.c ****         
1036:..\src/command_processing.c ****         // GENERIC PARAMS
1037:..\src/command_processing.c ****         1, 1, 1, 1,
1038:..\src/command_processing.c ****         3, 3, 1, 3,
1039:..\src/command_processing.c ****         3, 1, 1, 1,
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 188


1040:..\src/command_processing.c ****         3, 3, 3, 1,
1041:..\src/command_processing.c ****         2, 2, 1, 1,
1042:..\src/command_processing.c ****         1, 1, 6, 1,
1043:..\src/command_processing.c ****         1, 1, 1, 3, 
1044:..\src/command_processing.c ****         3, N_Encoder_Line_Connected[0], N_Encoder_Line_Connected[1], 1,
 8033              		.loc 1 1044 0
 8034 0b4a 614B     		ldr	r3, .L375+4
 8035 0b4c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
1025:..\src/command_processing.c ****         1, 3, 3, 1, 
 8036              		.loc 1 1025 0
 8037 0b4e 07F55D73 		add	r3, r7, #884
 8038 0b52 83F84120 		strb	r2, [r3, #65]
 8039              		.loc 1 1044 0
 8040 0b56 5E4B     		ldr	r3, .L375+4
 8041 0b58 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
1025:..\src/command_processing.c ****         1, 3, 3, 1, 
 8042              		.loc 1 1025 0
 8043 0b5a 07F55D73 		add	r3, r7, #884
 8044 0b5e 83F84220 		strb	r2, [r3, #66]
 8045 0b62 07F55D73 		add	r3, r7, #884
 8046 0b66 0122     		movs	r2, #1
 8047 0b68 83F84320 		strb	r2, [r3, #67]
 8048 0b6c 07F55D73 		add	r3, r7, #884
 8049 0b70 0622     		movs	r2, #6
 8050 0b72 83F84420 		strb	r2, [r3, #68]
 8051 0b76 07F55D73 		add	r3, r7, #884
 8052 0b7a 0622     		movs	r2, #6
 8053 0b7c 83F84520 		strb	r2, [r3, #69]
 8054 0b80 07F55D73 		add	r3, r7, #884
 8055 0b84 0122     		movs	r2, #1
 8056 0b86 83F84620 		strb	r2, [r3, #70]
 8057 0b8a 07F55D73 		add	r3, r7, #884
 8058 0b8e 0122     		movs	r2, #1
 8059 0b90 83F84720 		strb	r2, [r3, #71]
 8060 0b94 07F55D73 		add	r3, r7, #884
 8061 0b98 0122     		movs	r2, #1
 8062 0b9a 83F84820 		strb	r2, [r3, #72]
 8063 0b9e 07F55D73 		add	r3, r7, #884
 8064 0ba2 0222     		movs	r2, #2
 8065 0ba4 83F84920 		strb	r2, [r3, #73]
 8066 0ba8 07F55D73 		add	r3, r7, #884
 8067 0bac 0122     		movs	r2, #1
 8068 0bae 83F84A20 		strb	r2, [r3, #74]
 8069 0bb2 07F55D73 		add	r3, r7, #884
 8070 0bb6 0122     		movs	r2, #1
 8071 0bb8 83F84B20 		strb	r2, [r3, #75]
 8072 0bbc 07F55D73 		add	r3, r7, #884
 8073 0bc0 0222     		movs	r2, #2
 8074 0bc2 83F84C20 		strb	r2, [r3, #76]
 8075 0bc6 07F55D73 		add	r3, r7, #884
 8076 0bca 0122     		movs	r2, #1
 8077 0bcc 83F84D20 		strb	r2, [r3, #77]
 8078 0bd0 07F55D73 		add	r3, r7, #884
 8079 0bd4 0122     		movs	r2, #1
 8080 0bd6 83F84E20 		strb	r2, [r3, #78]
 8081 0bda 07F55D73 		add	r3, r7, #884
 8082 0bde 0122     		movs	r2, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 189


 8083 0be0 83F84F20 		strb	r2, [r3, #79]
 8084 0be4 07F55D73 		add	r3, r7, #884
 8085 0be8 0122     		movs	r2, #1
 8086 0bea 83F85020 		strb	r2, [r3, #80]
 8087 0bee 07F55D73 		add	r3, r7, #884
 8088 0bf2 0122     		movs	r2, #1
 8089 0bf4 83F85120 		strb	r2, [r3, #81]
 8090 0bf8 07F55D73 		add	r3, r7, #884
 8091 0bfc 0122     		movs	r2, #1
 8092 0bfe 83F85220 		strb	r2, [r3, #82]
1045:..\src/command_processing.c ****         6, 6, 1, 1,
1046:..\src/command_processing.c ****         1, 2, 1, 1,
1047:..\src/command_processing.c ****         2,
1048:..\src/command_processing.c ****         
1049:..\src/command_processing.c ****            1, 1, 1, 
1050:..\src/command_processing.c ****         1, 1, 1
1051:..\src/command_processing.c ****     };
1052:..\src/command_processing.c ****     
1053:..\src/command_processing.c ****     uint8 NUM_STRUCT[NUM_OF_PARAMS] = {     // see STRUCTURES INDEX in globals.h
 8093              		.loc 1 1053 0
 8094 0c02 07F54873 		add	r3, r7, #800
 8095 0c06 0022     		movs	r2, #0
 8096 0c08 1A70     		strb	r2, [r3]
 8097 0c0a 97F87D35 		ldrb	r3, [r7, #1405]
 8098 0c0e 0A33     		adds	r3, r3, #10
 8099 0c10 DAB2     		uxtb	r2, r3
 8100 0c12 07F54873 		add	r3, r7, #800
 8101 0c16 5A70     		strb	r2, [r3, #1]
 8102 0c18 97F87D35 		ldrb	r3, [r7, #1405]
 8103 0c1c 0A33     		adds	r3, r3, #10
 8104 0c1e DAB2     		uxtb	r2, r3
 8105 0c20 07F54873 		add	r3, r7, #800
 8106 0c24 9A70     		strb	r2, [r3, #2]
 8107 0c26 97F87D35 		ldrb	r3, [r7, #1405]
 8108 0c2a 0A33     		adds	r3, r3, #10
 8109 0c2c DAB2     		uxtb	r2, r3
 8110 0c2e 07F54873 		add	r3, r7, #800
 8111 0c32 DA70     		strb	r2, [r3, #3]
 8112 0c34 97F87D35 		ldrb	r3, [r7, #1405]
 8113 0c38 0A33     		adds	r3, r3, #10
 8114 0c3a DAB2     		uxtb	r2, r3
 8115 0c3c 07F54873 		add	r3, r7, #800
 8116 0c40 1A71     		strb	r2, [r3, #4]
 8117 0c42 97F87D35 		ldrb	r3, [r7, #1405]
 8118 0c46 0A33     		adds	r3, r3, #10
 8119 0c48 DAB2     		uxtb	r2, r3
 8120 0c4a 07F54873 		add	r3, r7, #800
 8121 0c4e 5A71     		strb	r2, [r3, #5]
1054:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
1055:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), 
 8122              		.loc 1 1055 0
 8123 0c50 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8124 0c54 D7F88015 		ldr	r1, [r7, #1408]
 8125 0c58 1346     		mov	r3, r2
 8126 0c5a DB00     		lsls	r3, r3, #3
 8127 0c5c 9B1A     		subs	r3, r3, r2
 8128 0c5e 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 190


 8129 0c60 0B44     		add	r3, r3, r1
 8130 0c62 03F58873 		add	r3, r3, #272
 8131 0c66 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1053:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8132              		.loc 1 1053 0
 8133 0c68 1433     		adds	r3, r3, #20
 8134 0c6a DAB2     		uxtb	r2, r3
 8135 0c6c 07F54873 		add	r3, r7, #800
 8136 0c70 9A71     		strb	r2, [r3, #6]
 8137              		.loc 1 1055 0
 8138 0c72 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8139 0c76 D7F88015 		ldr	r1, [r7, #1408]
 8140 0c7a 1346     		mov	r3, r2
 8141 0c7c DB00     		lsls	r3, r3, #3
 8142 0c7e 9B1A     		subs	r3, r3, r2
 8143 0c80 1B01     		lsls	r3, r3, #4
 8144 0c82 0B44     		add	r3, r3, r1
 8145 0c84 03F58873 		add	r3, r3, #272
 8146 0c88 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1053:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8147              		.loc 1 1053 0
 8148 0c8a 1433     		adds	r3, r3, #20
 8149 0c8c DAB2     		uxtb	r2, r3
 8150 0c8e 07F54873 		add	r3, r7, #800
 8151 0c92 DA71     		strb	r2, [r3, #7]
1056:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8152              		.loc 1 1056 0
 8153 0c94 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8154 0c98 D7F88015 		ldr	r1, [r7, #1408]
 8155 0c9c 1346     		mov	r3, r2
 8156 0c9e DB00     		lsls	r3, r3, #3
 8157 0ca0 9B1A     		subs	r3, r3, r2
 8158 0ca2 1B01     		lsls	r3, r3, #4
 8159 0ca4 0B44     		add	r3, r3, r1
 8160 0ca6 03F58873 		add	r3, r3, #272
 8161 0caa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1053:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8162              		.loc 1 1053 0
 8163 0cac 1433     		adds	r3, r3, #20
 8164 0cae DAB2     		uxtb	r2, r3
 8165 0cb0 07F54873 		add	r3, r7, #800
 8166 0cb4 1A72     		strb	r2, [r3, #8]
 8167 0cb6 97F87D35 		ldrb	r3, [r7, #1405]
 8168 0cba 0A33     		adds	r3, r3, #10
 8169 0cbc DAB2     		uxtb	r2, r3
 8170 0cbe 07F54873 		add	r3, r7, #800
 8171 0cc2 5A72     		strb	r2, [r3, #9]
 8172 0cc4 97F87D35 		ldrb	r3, [r7, #1405]
 8173 0cc8 04E0     		b	.L376
 8174              	.L377:
 8175 0cca 00BF     		.align	2
 8176              	.L375:
 8177 0ccc 50060000 		.word	.LC0
 8178 0cd0 00000000 		.word	N_Encoder_Line_Connected
 8179              	.L376:
 8180 0cd4 0A33     		adds	r3, r3, #10
 8181 0cd6 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 191


 8182 0cd8 07F54873 		add	r3, r7, #800
 8183 0cdc 9A72     		strb	r2, [r3, #10]
 8184 0cde 97F87D35 		ldrb	r3, [r7, #1405]
 8185 0ce2 0A33     		adds	r3, r3, #10
 8186 0ce4 DAB2     		uxtb	r2, r3
 8187 0ce6 07F54873 		add	r3, r7, #800
 8188 0cea DA72     		strb	r2, [r3, #11]
 8189 0cec 97F87D35 		ldrb	r3, [r7, #1405]
 8190 0cf0 0A33     		adds	r3, r3, #10
 8191 0cf2 DAB2     		uxtb	r2, r3
 8192 0cf4 07F54873 		add	r3, r7, #800
 8193 0cf8 1A73     		strb	r2, [r3, #12]
 8194 0cfa 07F54873 		add	r3, r7, #800
 8195 0cfe 1E22     		movs	r2, #30
 8196 0d00 5A73     		strb	r2, [r3, #13]
 8197 0d02 07F54873 		add	r3, r7, #800
 8198 0d06 1E22     		movs	r2, #30
 8199 0d08 9A73     		strb	r2, [r3, #14]
 8200 0d0a 07F54873 		add	r3, r7, #800
 8201 0d0e 1E22     		movs	r2, #30
 8202 0d10 DA73     		strb	r2, [r3, #15]
 8203 0d12 07F54873 		add	r3, r7, #800
 8204 0d16 1E22     		movs	r2, #30
 8205 0d18 1A74     		strb	r2, [r3, #16]
1057:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_EMG, ST_EMG, ST_EMG, 
1058:..\src/command_processing.c ****         ST_EMG, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_I
 8206              		.loc 1 1058 0
 8207 0d1a 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8208 0d1e D7F88015 		ldr	r1, [r7, #1408]
 8209 0d22 1346     		mov	r3, r2
 8210 0d24 DB00     		lsls	r3, r3, #3
 8211 0d26 9B1A     		subs	r3, r3, r2
 8212 0d28 1B01     		lsls	r3, r3, #4
 8213 0d2a 0B44     		add	r3, r3, r1
 8214 0d2c 03F58873 		add	r3, r3, #272
 8215 0d30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1053:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8216              		.loc 1 1053 0
 8217 0d32 1433     		adds	r3, r3, #20
 8218 0d34 DAB2     		uxtb	r2, r3
 8219 0d36 07F54873 		add	r3, r7, #800
 8220 0d3a 5A74     		strb	r2, [r3, #17]
 8221              		.loc 1 1058 0
 8222 0d3c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8223 0d40 D7F88015 		ldr	r1, [r7, #1408]
 8224 0d44 1346     		mov	r3, r2
 8225 0d46 DB00     		lsls	r3, r3, #3
 8226 0d48 9B1A     		subs	r3, r3, r2
 8227 0d4a 1B01     		lsls	r3, r3, #4
 8228 0d4c 0B44     		add	r3, r3, r1
 8229 0d4e 03F58873 		add	r3, r3, #272
 8230 0d52 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1053:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8231              		.loc 1 1053 0
 8232 0d54 1433     		adds	r3, r3, #20
 8233 0d56 DAB2     		uxtb	r2, r3
 8234 0d58 07F54873 		add	r3, r7, #800
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 192


 8235 0d5c 9A74     		strb	r2, [r3, #18]
 8236 0d5e 97F87D35 		ldrb	r3, [r7, #1405]
 8237 0d62 0A33     		adds	r3, r3, #10
 8238 0d64 DAB2     		uxtb	r2, r3
 8239 0d66 07F54873 		add	r3, r7, #800
 8240 0d6a DA74     		strb	r2, [r3, #19]
 8241 0d6c 97F87D35 		ldrb	r3, [r7, #1405]
 8242 0d70 0A33     		adds	r3, r3, #10
 8243 0d72 DAB2     		uxtb	r2, r3
 8244 0d74 07F54873 		add	r3, r7, #800
 8245 0d78 1A75     		strb	r2, [r3, #20]
 8246 0d7a 07F54873 		add	r3, r7, #800
 8247 0d7e 0022     		movs	r2, #0
 8248 0d80 5A75     		strb	r2, [r3, #21]
 8249 0d82 07F54873 		add	r3, r7, #800
 8250 0d86 4622     		movs	r2, #70
 8251 0d88 9A75     		strb	r2, [r3, #22]
 8252 0d8a 07F54873 		add	r3, r7, #800
 8253 0d8e 4622     		movs	r2, #70
 8254 0d90 DA75     		strb	r2, [r3, #23]
 8255 0d92 07F54873 		add	r3, r7, #800
 8256 0d96 4622     		movs	r2, #70
 8257 0d98 1A76     		strb	r2, [r3, #24]
 8258 0d9a 07F54873 		add	r3, r7, #800
 8259 0d9e 4622     		movs	r2, #70
 8260 0da0 5A76     		strb	r2, [r3, #25]
 8261 0da2 07F54873 		add	r3, r7, #800
 8262 0da6 1E22     		movs	r2, #30
 8263 0da8 9A76     		strb	r2, [r3, #26]
 8264 0daa 07F54873 		add	r3, r7, #800
 8265 0dae 0022     		movs	r2, #0
 8266 0db0 DA76     		strb	r2, [r3, #27]
 8267 0db2 07F54873 		add	r3, r7, #800
 8268 0db6 2822     		movs	r2, #40
 8269 0db8 1A77     		strb	r2, [r3, #28]
 8270 0dba 07F54873 		add	r3, r7, #800
 8271 0dbe 3222     		movs	r2, #50
 8272 0dc0 5A77     		strb	r2, [r3, #29]
 8273 0dc2 07F54873 		add	r3, r7, #800
 8274 0dc6 0022     		movs	r2, #0
 8275 0dc8 9A77     		strb	r2, [r3, #30]
 8276 0dca 07F54873 		add	r3, r7, #800
 8277 0dce 3222     		movs	r2, #50
 8278 0dd0 DA77     		strb	r2, [r3, #31]
 8279 0dd2 07F54873 		add	r3, r7, #800
 8280 0dd6 2822     		movs	r2, #40
 8281 0dd8 83F82020 		strb	r2, [r3, #32]
 8282 0ddc 07F54873 		add	r3, r7, #800
 8283 0de0 2822     		movs	r2, #40
 8284 0de2 83F82120 		strb	r2, [r3, #33]
 8285 0de6 07F54873 		add	r3, r7, #800
 8286 0dea 0022     		movs	r2, #0
 8287 0dec 83F82220 		strb	r2, [r3, #34]
1059:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_DEVICE, ST_SH_SPEC, ST_SH_SPEC,
1060:..\src/command_processing.c ****         ST_SH_SPEC, ST_SH_SPEC, ST_EMG, ST_DEVICE,
1061:..\src/command_processing.c ****         ST_IMU, ST_EXPANSION, ST_DEVICE, ST_EXPANSION,
1062:..\src/command_processing.c ****         ST_IMU, ST_IMU, ST_DEVICE, ST_USER+(MEM_P->dev.user_id),
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 193


 8288              		.loc 1 1062 0
 8289 0df0 D7F88035 		ldr	r3, [r7, #1408]
 8290 0df4 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
1053:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8291              		.loc 1 1053 0
 8292 0df8 3C33     		adds	r3, r3, #60
 8293 0dfa DAB2     		uxtb	r2, r3
 8294 0dfc 07F54873 		add	r3, r7, #800
 8295 0e00 83F82320 		strb	r2, [r3, #35]
 8296 0e04 97F87D35 		ldrb	r3, [r7, #1405]
 8297 0e08 0A33     		adds	r3, r3, #10
 8298 0e0a DAB2     		uxtb	r2, r3
 8299 0e0c 07F54873 		add	r3, r7, #800
 8300 0e10 83F82420 		strb	r2, [r3, #36]
 8301 0e14 97F87D35 		ldrb	r3, [r7, #1405]
 8302 0e18 0A33     		adds	r3, r3, #10
 8303 0e1a DAB2     		uxtb	r2, r3
 8304 0e1c 07F54873 		add	r3, r7, #800
 8305 0e20 83F82520 		strb	r2, [r3, #37]
 8306 0e24 97F87D35 		ldrb	r3, [r7, #1405]
 8307 0e28 0A33     		adds	r3, r3, #10
 8308 0e2a DAB2     		uxtb	r2, r3
 8309 0e2c 07F54873 		add	r3, r7, #800
 8310 0e30 83F82620 		strb	r2, [r3, #38]
 8311 0e34 97F87D35 		ldrb	r3, [r7, #1405]
 8312 0e38 0A33     		adds	r3, r3, #10
 8313 0e3a DAB2     		uxtb	r2, r3
 8314 0e3c 07F54873 		add	r3, r7, #800
 8315 0e40 83F82720 		strb	r2, [r3, #39]
1063:..\src/command_processing.c ****         
1064:..\src/command_processing.c ****         // GENERIC PARAMS
1065:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX,
1066:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_IDX].enco
 8316              		.loc 1 1066 0
 8317 0e44 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8318 0e48 D7F88015 		ldr	r1, [r7, #1408]
 8319 0e4c 1346     		mov	r3, r2
 8320 0e4e DB00     		lsls	r3, r3, #3
 8321 0e50 9B1A     		subs	r3, r3, r2
 8322 0e52 1B01     		lsls	r3, r3, #4
 8323 0e54 0B44     		add	r3, r3, r1
 8324 0e56 03F58873 		add	r3, r3, #272
 8325 0e5a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1053:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8326              		.loc 1 1053 0
 8327 0e5c 1433     		adds	r3, r3, #20
 8328 0e5e DAB2     		uxtb	r2, r3
 8329 0e60 07F54873 		add	r3, r7, #800
 8330 0e64 83F82820 		strb	r2, [r3, #40]
 8331              		.loc 1 1066 0
 8332 0e68 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8333 0e6c D7F88015 		ldr	r1, [r7, #1408]
 8334 0e70 1346     		mov	r3, r2
 8335 0e72 DB00     		lsls	r3, r3, #3
 8336 0e74 9B1A     		subs	r3, r3, r2
 8337 0e76 1B01     		lsls	r3, r3, #4
 8338 0e78 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 194


 8339 0e7a 03F58873 		add	r3, r3, #272
 8340 0e7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1053:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8341              		.loc 1 1053 0
 8342 0e80 1433     		adds	r3, r3, #20
 8343 0e82 DAB2     		uxtb	r2, r3
 8344 0e84 07F54873 		add	r3, r7, #800
 8345 0e88 83F82920 		strb	r2, [r3, #41]
 8346 0e8c 07F54873 		add	r3, r7, #800
 8347 0e90 0022     		movs	r2, #0
 8348 0e92 83F82A20 		strb	r2, [r3, #42]
 8349 0e96 97F87C35 		ldrb	r3, [r7, #1404]
 8350 0e9a 0A33     		adds	r3, r3, #10
 8351 0e9c DAB2     		uxtb	r2, r3
 8352 0e9e 07F54873 		add	r3, r7, #800
 8353 0ea2 83F82B20 		strb	r2, [r3, #43]
 8354 0ea6 97F87C35 		ldrb	r3, [r7, #1404]
 8355 0eaa 0A33     		adds	r3, r3, #10
 8356 0eac DAB2     		uxtb	r2, r3
 8357 0eae 07F54873 		add	r3, r7, #800
 8358 0eb2 83F82C20 		strb	r2, [r3, #44]
 8359 0eb6 97F87C35 		ldrb	r3, [r7, #1404]
 8360 0eba 0A33     		adds	r3, r3, #10
 8361 0ebc DAB2     		uxtb	r2, r3
 8362 0ebe 07F54873 		add	r3, r7, #800
 8363 0ec2 83F82D20 		strb	r2, [r3, #45]
 8364 0ec6 97F87C35 		ldrb	r3, [r7, #1404]
 8365 0eca 0A33     		adds	r3, r3, #10
 8366 0ecc DAB2     		uxtb	r2, r3
 8367 0ece 07F54873 		add	r3, r7, #800
 8368 0ed2 83F82E20 		strb	r2, [r3, #46]
 8369 0ed6 97F87C35 		ldrb	r3, [r7, #1404]
 8370 0eda 0A33     		adds	r3, r3, #10
 8371 0edc DAB2     		uxtb	r2, r3
 8372 0ede 07F54873 		add	r3, r7, #800
 8373 0ee2 83F82F20 		strb	r2, [r3, #47]
1067:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+S
1068:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[SECOND_M
 8374              		.loc 1 1068 0
 8375 0ee6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8376 0eea D7F88015 		ldr	r1, [r7, #1408]
 8377 0eee 1346     		mov	r3, r2
 8378 0ef0 DB00     		lsls	r3, r3, #3
 8379 0ef2 9B1A     		subs	r3, r3, r2
 8380 0ef4 1B01     		lsls	r3, r3, #4
 8381 0ef6 0B44     		add	r3, r3, r1
 8382 0ef8 03F58873 		add	r3, r3, #272
 8383 0efc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1053:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8384              		.loc 1 1053 0
 8385 0efe 1433     		adds	r3, r3, #20
 8386 0f00 DAB2     		uxtb	r2, r3
 8387 0f02 07F54873 		add	r3, r7, #800
 8388 0f06 83F83020 		strb	r2, [r3, #48]
 8389              		.loc 1 1068 0
 8390 0f0a 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8391 0f0e D7F88015 		ldr	r1, [r7, #1408]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 195


 8392 0f12 1346     		mov	r3, r2
 8393 0f14 DB00     		lsls	r3, r3, #3
 8394 0f16 9B1A     		subs	r3, r3, r2
 8395 0f18 1B01     		lsls	r3, r3, #4
 8396 0f1a 0B44     		add	r3, r3, r1
 8397 0f1c 03F58873 		add	r3, r3, #272
 8398 0f20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1053:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8399              		.loc 1 1053 0
 8400 0f22 1433     		adds	r3, r3, #20
 8401 0f24 DAB2     		uxtb	r2, r3
 8402 0f26 07F54873 		add	r3, r7, #800
 8403 0f2a 83F83120 		strb	r2, [r3, #49]
 8404              		.loc 1 1068 0
 8405 0f2e 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8406 0f32 D7F88015 		ldr	r1, [r7, #1408]
 8407 0f36 1346     		mov	r3, r2
 8408 0f38 DB00     		lsls	r3, r3, #3
 8409 0f3a 9B1A     		subs	r3, r3, r2
 8410 0f3c 1B01     		lsls	r3, r3, #4
 8411 0f3e 0B44     		add	r3, r3, r1
 8412 0f40 03F58873 		add	r3, r3, #272
 8413 0f44 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1053:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8414              		.loc 1 1053 0
 8415 0f46 1433     		adds	r3, r3, #20
 8416 0f48 DAB2     		uxtb	r2, r3
 8417 0f4a 07F54873 		add	r3, r7, #800
 8418 0f4e 83F83220 		strb	r2, [r3, #50]
 8419 0f52 97F87C35 		ldrb	r3, [r7, #1404]
 8420 0f56 0A33     		adds	r3, r3, #10
 8421 0f58 DAB2     		uxtb	r2, r3
 8422 0f5a 07F54873 		add	r3, r7, #800
 8423 0f5e 83F83320 		strb	r2, [r3, #51]
 8424 0f62 97F87C35 		ldrb	r3, [r7, #1404]
 8425 0f66 0A33     		adds	r3, r3, #10
 8426 0f68 DAB2     		uxtb	r2, r3
 8427 0f6a 07F54873 		add	r3, r7, #800
 8428 0f6e 83F83420 		strb	r2, [r3, #52]
 8429 0f72 97F87C35 		ldrb	r3, [r7, #1404]
 8430 0f76 0A33     		adds	r3, r3, #10
 8431 0f78 DAB2     		uxtb	r2, r3
 8432 0f7a 07F54873 		add	r3, r7, #800
 8433 0f7e 83F83520 		strb	r2, [r3, #53]
 8434 0f82 97F87C35 		ldrb	r3, [r7, #1404]
 8435 0f86 0A33     		adds	r3, r3, #10
 8436 0f88 DAB2     		uxtb	r2, r3
 8437 0f8a 07F54873 		add	r3, r7, #800
 8438 0f8e 83F83620 		strb	r2, [r3, #54]
1069:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 8439              		.loc 1 1069 0
 8440 0f92 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8441 0f96 D7F88015 		ldr	r1, [r7, #1408]
 8442 0f9a 1346     		mov	r3, r2
 8443 0f9c DB00     		lsls	r3, r3, #3
 8444 0f9e 9B1A     		subs	r3, r3, r2
 8445 0fa0 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 196


 8446 0fa2 0B44     		add	r3, r3, r1
 8447 0fa4 03F58873 		add	r3, r3, #272
 8448 0fa8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1053:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8449              		.loc 1 1053 0
 8450 0faa 1433     		adds	r3, r3, #20
 8451 0fac DAB2     		uxtb	r2, r3
 8452 0fae 07F54873 		add	r3, r7, #800
 8453 0fb2 83F83720 		strb	r2, [r3, #55]
1070:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_MOTOR+SECOND_MOTOR_IDX, ST_MOT
 8454              		.loc 1 1070 0
 8455 0fb6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8456 0fba D7F88015 		ldr	r1, [r7, #1408]
 8457 0fbe 1346     		mov	r3, r2
 8458 0fc0 DB00     		lsls	r3, r3, #3
 8459 0fc2 9B1A     		subs	r3, r3, r2
 8460 0fc4 1B01     		lsls	r3, r3, #4
 8461 0fc6 0B44     		add	r3, r3, r1
 8462 0fc8 03F58873 		add	r3, r3, #272
 8463 0fcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1053:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8464              		.loc 1 1053 0
 8465 0fce 1433     		adds	r3, r3, #20
 8466 0fd0 DAB2     		uxtb	r2, r3
 8467 0fd2 07F54873 		add	r3, r7, #800
 8468 0fd6 83F83820 		strb	r2, [r3, #56]
 8469 0fda 97F87C35 		ldrb	r3, [r7, #1404]
 8470 0fde 0A33     		adds	r3, r3, #10
 8471 0fe0 DAB2     		uxtb	r2, r3
 8472 0fe2 07F54873 		add	r3, r7, #800
 8473 0fe6 83F83920 		strb	r2, [r3, #57]
 8474 0fea 97F87C35 		ldrb	r3, [r7, #1404]
 8475 0fee 0A33     		adds	r3, r3, #10
 8476 0ff0 DAB2     		uxtb	r2, r3
 8477 0ff2 07F54873 		add	r3, r7, #800
 8478 0ff6 83F83A20 		strb	r2, [r3, #58]
 8479 0ffa 97F87C35 		ldrb	r3, [r7, #1404]
 8480 0ffe 0A33     		adds	r3, r3, #10
 8481 1000 DAB2     		uxtb	r2, r3
 8482 1002 07F54873 		add	r3, r7, #800
 8483 1006 83F83B20 		strb	r2, [r3, #59]
 8484 100a 97F87C35 		ldrb	r3, [r7, #1404]
 8485 100e 0A33     		adds	r3, r3, #10
 8486 1010 DAB2     		uxtb	r2, r3
 8487 1012 07F54873 		add	r3, r7, #800
 8488 1016 83F83C20 		strb	r2, [r3, #60]
 8489 101a 97F87C35 		ldrb	r3, [r7, #1404]
 8490 101e 0A33     		adds	r3, r3, #10
 8491 1020 DAB2     		uxtb	r2, r3
 8492 1022 07F54873 		add	r3, r7, #800
 8493 1026 83F83D20 		strb	r2, [r3, #61]
 8494 102a 97F87C35 		ldrb	r3, [r7, #1404]
 8495 102e 0A33     		adds	r3, r3, #10
 8496 1030 DAB2     		uxtb	r2, r3
 8497 1032 07F54873 		add	r3, r7, #800
 8498 1036 83F83E20 		strb	r2, [r3, #62]
1071:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 197


 8499              		.loc 1 1071 0
 8500 103a 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8501 103e D7F88015 		ldr	r1, [r7, #1408]
 8502 1042 1346     		mov	r3, r2
 8503 1044 DB00     		lsls	r3, r3, #3
 8504 1046 9B1A     		subs	r3, r3, r2
 8505 1048 1B01     		lsls	r3, r3, #4
 8506 104a 0B44     		add	r3, r3, r1
 8507 104c 03F58873 		add	r3, r3, #272
 8508 1050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1053:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8509              		.loc 1 1053 0
 8510 1052 1433     		adds	r3, r3, #20
 8511 1054 DAB2     		uxtb	r2, r3
 8512 1056 07F54873 		add	r3, r7, #800
 8513 105a 83F83F20 		strb	r2, [r3, #63]
1072:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+0, ST_ENCODER+1, ST_EX
 8514              		.loc 1 1072 0
 8515 105e 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8516 1062 D7F88015 		ldr	r1, [r7, #1408]
 8517 1066 1346     		mov	r3, r2
 8518 1068 DB00     		lsls	r3, r3, #3
 8519 106a 9B1A     		subs	r3, r3, r2
 8520 106c 1B01     		lsls	r3, r3, #4
 8521 106e 0B44     		add	r3, r3, r1
 8522 1070 03F58873 		add	r3, r3, #272
 8523 1074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1053:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8524              		.loc 1 1053 0
 8525 1076 1433     		adds	r3, r3, #20
 8526 1078 DAB2     		uxtb	r2, r3
 8527 107a 07F54873 		add	r3, r7, #800
 8528 107e 83F84020 		strb	r2, [r3, #64]
 8529 1082 07F54873 		add	r3, r7, #800
 8530 1086 1422     		movs	r2, #20
 8531 1088 83F84120 		strb	r2, [r3, #65]
 8532 108c 07F54873 		add	r3, r7, #800
 8533 1090 1522     		movs	r2, #21
 8534 1092 83F84220 		strb	r2, [r3, #66]
 8535 1096 07F54873 		add	r3, r7, #800
 8536 109a 3222     		movs	r2, #50
 8537 109c 83F84320 		strb	r2, [r3, #67]
 8538 10a0 07F54873 		add	r3, r7, #800
 8539 10a4 3222     		movs	r2, #50
 8540 10a6 83F84420 		strb	r2, [r3, #68]
 8541 10aa 07F54873 		add	r3, r7, #800
 8542 10ae 3222     		movs	r2, #50
 8543 10b0 83F84520 		strb	r2, [r3, #69]
 8544 10b4 07F54873 		add	r3, r7, #800
 8545 10b8 3222     		movs	r2, #50
 8546 10ba 83F84620 		strb	r2, [r3, #70]
 8547 10be 07F54873 		add	r3, r7, #800
 8548 10c2 6E22     		movs	r2, #110
 8549 10c4 83F84720 		strb	r2, [r3, #71]
 8550 10c8 07F54873 		add	r3, r7, #800
 8551 10cc 6E22     		movs	r2, #110
 8552 10ce 83F84820 		strb	r2, [r3, #72]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 198


 8553 10d2 07F54873 		add	r3, r7, #800
 8554 10d6 6E22     		movs	r2, #110
 8555 10d8 83F84920 		strb	r2, [r3, #73]
 8556 10dc 07F54873 		add	r3, r7, #800
 8557 10e0 0022     		movs	r2, #0
 8558 10e2 83F84A20 		strb	r2, [r3, #74]
 8559 10e6 07F54873 		add	r3, r7, #800
 8560 10ea 6422     		movs	r2, #100
 8561 10ec 83F84B20 		strb	r2, [r3, #75]
 8562 10f0 07F54873 		add	r3, r7, #800
 8563 10f4 6422     		movs	r2, #100
 8564 10f6 83F84C20 		strb	r2, [r3, #76]
 8565 10fa 07F54873 		add	r3, r7, #800
 8566 10fe 6422     		movs	r2, #100
 8567 1100 83F84D20 		strb	r2, [r3, #77]
 8568 1104 07F54873 		add	r3, r7, #800
 8569 1108 5022     		movs	r2, #80
 8570 110a 83F84E20 		strb	r2, [r3, #78]
 8571 110e 07F54873 		add	r3, r7, #800
 8572 1112 5022     		movs	r2, #80
 8573 1114 83F84F20 		strb	r2, [r3, #79]
 8574 1118 07F54873 		add	r3, r7, #800
 8575 111c 5A22     		movs	r2, #90
 8576 111e 83F85020 		strb	r2, [r3, #80]
 8577 1122 07F54873 		add	r3, r7, #800
 8578 1126 5A22     		movs	r2, #90
 8579 1128 83F85120 		strb	r2, [r3, #81]
 8580 112c 07F54873 		add	r3, r7, #800
 8581 1130 5A22     		movs	r2, #90
 8582 1132 83F85220 		strb	r2, [r3, #82]
1073:..\src/command_processing.c ****         ST_EXPANSION, ST_EXPANSION, ST_EXPANSION, ST_JOY_SPEC,
1074:..\src/command_processing.c ****         ST_JOY_SPEC, ST_JOY_SPEC, ST_DEVICE, ST_WR_SPEC, 
1075:..\src/command_processing.c ****         ST_WR_SPEC,
1076:..\src/command_processing.c ****         
1077:..\src/command_processing.c ****                     ST_WR_SPEC, ST_MS_SPEC, ST_MS_SPEC,
1078:..\src/command_processing.c ****         ST_FB_SPEC, ST_FB_SPEC, ST_FB_SPEC
1079:..\src/command_processing.c ****         
1080:..\src/command_processing.c ****     };
1081:..\src/command_processing.c ****     
1082:..\src/command_processing.c ****     const char* PARAMS_STR[NUM_OF_PARAMS] = {
 8583              		.loc 1 1082 0
 8584 1136 07F5EA73 		add	r3, r7, #468
 8585 113a CD4A     		ldr	r2, .L378
 8586 113c 1846     		mov	r0, r3
 8587 113e 1146     		mov	r1, r2
 8588 1140 4FF4A673 		mov	r3, #332
 8589 1144 1A46     		mov	r2, r3
 8590 1146 FFF7FEFF 		bl	memcpy
1083:..\src/command_processing.c ****         "1 - Device ID:", "2 - Position PID [P, I, D]:", "3 - Current PID [P, I, D]:", "4 - Startup
1084:..\src/command_processing.c ****         "5 - Input mode:", "6 - Control mode:", "7 - Resolutions:", "8 - Measurement Offsets:", 
1085:..\src/command_processing.c ****         "9 - Multipliers:", "10 - Pos. limit active:", "11 - Pos. limits [inf, sup]:", "12 - Max st
1086:..\src/command_processing.c ****         "13 - Current limit:", "14 - EMG thresholds:", "15 - EMG calibration on startup:", "16 - EM
1087:..\src/command_processing.c ****         "17 - EMG max speeds:", "18 - Absolute encoder position:", "19 - Motor handle ratio:", "20 
1088:..\src/command_processing.c ****         "21 - Current lookup:", "22 - Date of maintenance [D/M/Y]:", "23 - Rest position:", "24 - R
1089:..\src/command_processing.c ****         "25 - Rest vel closure (ticks/sec):", "26 - Rest position enabled:", "27 - EMG inversion:",
1090:..\src/command_processing.c ****         "29 - Enable IMUs:", "30 - Read Expansion port:", "31 - Reset counters:", "32 - Last checke
1091:..\src/command_processing.c ****         "33 - SPI read delay (IMU):", "34 - On board IMU conf. [a,g,m,q,t]:", "35 - User ID:", "36 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 199


1092:..\src/command_processing.c ****         
1093:..\src/command_processing.c ****         // GENERIC PARAMS
1094:..\src/command_processing.c ****         "37 - Associated encoder line:", "38 - Driver type:", "39 - PWM rate limiter:", "40 - Not r
1095:..\src/command_processing.c ****         "41 - Enc idx used for control:", "42 - Gear params[N1, N2, I1]:", "43 - Use second motor:"
1096:..\src/command_processing.c ****         "45 - Current PID [P, I, D]:", "46 - Startup Activation:", "47 - Input mode:", "48 - Contro
1097:..\src/command_processing.c ****         "49 - Resolutions:", "50 - Measurement Offsets:", "51 - Multipliers:", "52 - Pos. limit act
1098:..\src/command_processing.c ****         "53 - Pos. limits [inf, sup]:", "54 - Max steps [neg, pos]:", "55 - Current limit:", "56 - 
1099:..\src/command_processing.c ****         "57 - Motor handle ratio:", "58 - PWM rescaling:", "59 - Current lookup:", "60 - Associated
1100:..\src/command_processing.c ****         "61 - Driver type:", "62 - PWM rate limiter:", "63 - Not reversible:", "64 - Enc idx used f
1101:..\src/command_processing.c ****         "65 - Gear params[N1, N2, I1]:", "66 - Read enc raw line 0:", "67 - Read enc raw line 1:", 
1102:..\src/command_processing.c ****         "69 - ADC channel [1-6]:", "70 - ADC channel [7-12]:", "71 - Record EMG on SD card:", "72 -
1103:..\src/command_processing.c ****         "73 - Joystick threshold:", "74 - Joystick gains:", "75 - Device type:", "76 - EMG FSM act.
1104:..\src/command_processing.c ****         "77 - Fast act.thresholds:",
1105:..\src/command_processing.c ****         
1106:..\src/command_processing.c ****                                      "78 - Wrist direction:", "79 - Slave communication active:", "
1107:..\src/command_processing.c ****         "81 - Maximum slave residual current:", "82 - Maximum pressure feedback (kPa):", "83 - Prop
1108:..\src/command_processing.c ****     };
1109:..\src/command_processing.c **** 
1110:..\src/command_processing.c ****     //Parameters menu
1111:..\src/command_processing.c ****     char spi_delay_menu[118]    = ""; 
 8591              		.loc 1 1111 0
 8592 114a 07F5AE73 		add	r3, r7, #348
 8593 114e 0022     		movs	r2, #0
 8594 1150 1A60     		str	r2, [r3]
 8595 1152 0433     		adds	r3, r3, #4
 8596 1154 7222     		movs	r2, #114
 8597 1156 0021     		movs	r1, #0
 8598 1158 1846     		mov	r0, r3
 8599 115a FFF7FEFF 		bl	memset
1112:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 8600              		.loc 1 1112 0
 8601 115e 07F5AE70 		add	r0, r7, #348
 8602 1162 6423     		movs	r3, #100
 8603 1164 0A22     		movs	r2, #10
 8604 1166 C349     		ldr	r1, .L378+4
 8605 1168 FFF7FEFF 		bl	sprintf
1113:..\src/command_processing.c **** 
1114:..\src/command_processing.c ****     char fsm_activation_mode_menu[56] = "";
 8606              		.loc 1 1114 0
 8607 116c 07F59273 		add	r3, r7, #292
 8608 1170 0022     		movs	r2, #0
 8609 1172 1A60     		str	r2, [r3]
 8610 1174 0433     		adds	r3, r3, #4
 8611 1176 3422     		movs	r2, #52
 8612 1178 0021     		movs	r1, #0
 8613 117a 1846     		mov	r0, r3
 8614 117c FFF7FEFF 		bl	memset
1115:..\src/command_processing.c ****     if (MEM_P->dev.dev_type == SOFTHAND_2_MOTORS){
 8615              		.loc 1 1115 0
 8616 1180 D7F88035 		ldr	r3, [r7, #1408]
 8617 1184 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 8618 1188 042B     		cmp	r3, #4
 8619 118a 10D1     		bne	.L310
1116:..\src/command_processing.c ****         sprintf(fsm_activation_mode_menu, "0 -> Fast:syn2, Slow:syn1\n1 -> Slow:syn2, Fast:syn1\n")
 8620              		.loc 1 1116 0
 8621 118c 07F59273 		add	r3, r7, #292
 8622 1190 B94A     		ldr	r2, .L378+8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 200


 8623 1192 1C46     		mov	r4, r3
 8624 1194 1546     		mov	r5, r2
 8625 1196 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8626 1198 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8627 119a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8628 119c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8629 119e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8630 11a0 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8631 11a2 95E80300 		ldmia	r5, {r0, r1}
 8632 11a6 2060     		str	r0, [r4]
 8633 11a8 0434     		adds	r4, r4, #4
 8634 11aa 2170     		strb	r1, [r4]
 8635 11ac 0FE0     		b	.L311
 8636              	.L310:
1117:..\src/command_processing.c ****     }
1118:..\src/command_processing.c ****     else {
1119:..\src/command_processing.c ****         sprintf(fsm_activation_mode_menu, "0 -> Fast:wrist,Slow:hand\n1 -> Slow:wrist,Fast:hand\n")
 8637              		.loc 1 1119 0
 8638 11ae 07F59273 		add	r3, r7, #292
 8639 11b2 B24A     		ldr	r2, .L378+12
 8640 11b4 1C46     		mov	r4, r3
 8641 11b6 1546     		mov	r5, r2
 8642 11b8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8643 11ba 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8644 11bc 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8645 11be 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8646 11c0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8647 11c2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8648 11c4 95E80300 		ldmia	r5, {r0, r1}
 8649 11c8 2060     		str	r0, [r4]
 8650 11ca 0434     		adds	r4, r4, #4
 8651 11cc 2170     		strb	r1, [r4]
 8652              	.L311:
1120:..\src/command_processing.c ****     }
1121:..\src/command_processing.c ****     
1122:..\src/command_processing.c ****     const char* MENU_STR[NUM_OF_PARAMS_MENU] = {
 8653              		.loc 1 1122 0
 8654 11ce 07F1F403 		add	r3, r7, #244
 8655 11d2 AB4A     		ldr	r2, .L378+16
 8656 11d4 1A60     		str	r2, [r3]
 8657 11d6 07F1F403 		add	r3, r7, #244
 8658 11da AA4A     		ldr	r2, .L378+20
 8659 11dc 5A60     		str	r2, [r3, #4]
 8660 11de 07F1F403 		add	r3, r7, #244
 8661 11e2 A94A     		ldr	r2, .L378+24
 8662 11e4 9A60     		str	r2, [r3, #8]
 8663 11e6 07F1F403 		add	r3, r7, #244
 8664 11ea A84A     		ldr	r2, .L378+28
 8665 11ec DA60     		str	r2, [r3, #12]
 8666 11ee 07F1F403 		add	r3, r7, #244
 8667 11f2 A74A     		ldr	r2, .L378+32
 8668 11f4 1A61     		str	r2, [r3, #16]
 8669 11f6 07F1F403 		add	r3, r7, #244
 8670 11fa A64A     		ldr	r2, .L378+36
 8671 11fc 5A61     		str	r2, [r3, #20]
 8672 11fe 07F1F403 		add	r3, r7, #244
 8673 1202 07F5AE72 		add	r2, r7, #348
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 201


 8674 1206 9A61     		str	r2, [r3, #24]
 8675 1208 07F1F403 		add	r3, r7, #244
 8676 120c A24A     		ldr	r2, .L378+40
 8677 120e DA61     		str	r2, [r3, #28]
 8678 1210 07F1F403 		add	r3, r7, #244
 8679 1214 A14A     		ldr	r2, .L378+44
 8680 1216 1A62     		str	r2, [r3, #32]
 8681 1218 07F1F403 		add	r3, r7, #244
 8682 121c A04A     		ldr	r2, .L378+48
 8683 121e 5A62     		str	r2, [r3, #36]
 8684 1220 07F1F403 		add	r3, r7, #244
 8685 1224 07F59272 		add	r2, r7, #292
 8686 1228 9A62     		str	r2, [r3, #40]
 8687 122a 07F1F403 		add	r3, r7, #244
 8688 122e 9D4A     		ldr	r2, .L378+52
 8689 1230 DA62     		str	r2, [r3, #44]
1123:..\src/command_processing.c ****         "0 -> Usb\n1 -> Handle\n2 -> EMG proportional\n3 -> EMG Integral\n4 -> EMG FCFS\n5 -> EMG F
1124:..\src/command_processing.c ****         "0 -> Position\n1 -> PWM\n2 -> Current\n3 -> Position and Current\n",                      
1125:..\src/command_processing.c ****         "0 -> Deactivate [NO]\n1 -> Activate [YES]\n",                                             
1126:..\src/command_processing.c ****         "0 -> Right\n1 -> Left\n",                                                                 
1127:..\src/command_processing.c ****         "0 -> OFF\n1 -> ON\nThe board will reset\n",                                               
1128:..\src/command_processing.c ****         "0 -> None\n1 -> SD/RTC board\n2 -> WiFi board [N/A]\n3 -> Other [N/A]\nThe board will rese
1129:..\src/command_processing.c ****         spi_delay_menu,                                                                            
1130:..\src/command_processing.c ****         "0 -> Generic user\n1 -> Maria\n2 -> Roza\nThe board will reset\n",                        
1131:..\src/command_processing.c ****         "0 -> MC33887 (Standard)\n1 -> VNH5019 (High power)\n2 -> ESC (Brushless)\nThe board will r
1132:..\src/command_processing.c ****         "0 -> SOFTHAND PRO\n1 -> GENERIC 2 MOTORS\n2 -> AIR CHAMBERS\n3 -> OTTOBOCK WRIST\n4 -> SOF
1133:..\src/command_processing.c ****         fsm_activation_mode_menu,                                                                  
1134:..\src/command_processing.c ****         "0 -> Close:CW, Open:CCW\n1 -> Close:CCW, Open:CW\n"                                       
1135:..\src/command_processing.c ****     };   
1136:..\src/command_processing.c ****     
1137:..\src/command_processing.c ****     uint8 NUM_MENU[32] = {3, 1, 2, 3, 3, 3, 3, 3, 3, 4, 5, 6, 3, 7, 8, 9, 3, 5, 3, 1, 2, 3, 3, 3, 9
 8690              		.loc 1 1137 0
 8691 1232 07F1D403 		add	r3, r7, #212
 8692 1236 9C4A     		ldr	r2, .L378+56
 8693 1238 1C46     		mov	r4, r3
 8694 123a 1546     		mov	r5, r2
 8695 123c 2868     		ldr	r0, [r5]	@ unaligned
 8696 123e 6968     		ldr	r1, [r5, #4]	@ unaligned
 8697 1240 AA68     		ldr	r2, [r5, #8]	@ unaligned
 8698 1242 EB68     		ldr	r3, [r5, #12]	@ unaligned
 8699 1244 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8700 1246 2869     		ldr	r0, [r5, #16]	@ unaligned
 8701 1248 6969     		ldr	r1, [r5, #20]	@ unaligned
 8702 124a AA69     		ldr	r2, [r5, #24]	@ unaligned
 8703 124c EB69     		ldr	r3, [r5, #28]	@ unaligned
 8704 124e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
1138:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET_LIST[9]  = {2, 3, 8, 11, 23, 44, 45, 50, 53};
 8705              		.loc 1 1138 0
 8706 1250 07F1C803 		add	r3, r7, #200
 8707 1254 954A     		ldr	r2, .L378+60
 8708 1256 1068     		ldr	r0, [r2]	@ unaligned
 8709 1258 5168     		ldr	r1, [r2, #4]	@ unaligned
 8710 125a 03C3     		stmia	r3!, {r0, r1}
 8711 125c 127A     		ldrb	r2, [r2, #8]
 8712 125e 1A70     		strb	r2, [r3]
1139:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET_LIST[18] = {2, 3, 5, 8, 11, 23, 24, 28, 31, 32, 38, 44, 45, 47, 50, 53, 
 8713              		.loc 1 1139 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 202


 8714 1260 07F1B403 		add	r3, r7, #180
 8715 1264 924A     		ldr	r2, .L378+64
 8716 1266 1C46     		mov	r4, r3
 8717 1268 1546     		mov	r5, r2
 8718 126a 2868     		ldr	r0, [r5]	@ unaligned
 8719 126c 6968     		ldr	r1, [r5, #4]	@ unaligned
 8720 126e AA68     		ldr	r2, [r5, #8]	@ unaligned
 8721 1270 EB68     		ldr	r3, [r5, #12]	@ unaligned
 8722 1272 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8723 1274 2B8A     		ldrh	r3, [r5, #16]	@ unaligned
 8724 1276 2380     		strh	r3, [r4]	@ unaligned
1140:..\src/command_processing.c ****     uint8 USER_ID_PARAM = 35;
 8725              		.loc 1 1140 0
 8726 1278 2323     		movs	r3, #35
 8727 127a 87F87B35 		strb	r3, [r7, #1403]
1141:..\src/command_processing.c **** 
1142:..\src/command_processing.c **** // Note: If a custom parameter change is needed, add to CUSTOM_PARAM_LIST, then change it
1143:..\src/command_processing.c **** // in the dedicated function set_custom_param()    
1144:..\src/command_processing.c ****     
1145:..\src/command_processing.c **** //------------------ END OF PARAMETERS VARIABLES --------------------//        
1146:..\src/command_processing.c **** 
1147:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
1148:..\src/command_processing.c ****     
1149:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS];
1150:..\src/command_processing.c ****     j = 0;
 8728              		.loc 1 1150 0
 8729 127e 0023     		movs	r3, #0
 8730 1280 87F88635 		strb	r3, [r7, #1414]
1151:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 8731              		.loc 1 1151 0
 8732 1284 0023     		movs	r3, #0
 8733 1286 87F88735 		strb	r3, [r7, #1415]
 8734 128a 21E0     		b	.L312
 8735              	.L315:
1152:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8736              		.loc 1 1152 0
 8737 128c 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 8738 1290 07F1C802 		add	r2, r7, #200
 8739 1294 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8740 1296 1A46     		mov	r2, r3
 8741 1298 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8742 129c 0133     		adds	r3, r3, #1
 8743 129e 9A42     		cmp	r2, r3
 8744 12a0 0BD1     		bne	.L313
1153:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = TRUE;
 8745              		.loc 1 1153 0
 8746 12a2 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8747 12a6 07F16002 		add	r2, r7, #96
 8748 12aa 0121     		movs	r1, #1
 8749 12ac D154     		strb	r1, [r2, r3]
1154:..\src/command_processing.c ****             j++;
 8750              		.loc 1 1154 0
 8751 12ae 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 8752 12b2 0133     		adds	r3, r3, #1
 8753 12b4 87F88635 		strb	r3, [r7, #1414]
 8754 12b8 05E0     		b	.L314
 8755              	.L313:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 203


1155:..\src/command_processing.c ****         }
1156:..\src/command_processing.c ****         else {
1157:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = FALSE;
 8756              		.loc 1 1157 0
 8757 12ba 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8758 12be 07F16002 		add	r2, r7, #96
 8759 12c2 0021     		movs	r1, #0
 8760 12c4 D154     		strb	r1, [r2, r3]
 8761              	.L314:
1151:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8762              		.loc 1 1151 0 discriminator 2
 8763 12c6 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8764 12ca 0133     		adds	r3, r3, #1
 8765 12cc 87F88735 		strb	r3, [r7, #1415]
 8766              	.L312:
1151:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8767              		.loc 1 1151 0 is_stmt 0 discriminator 1
 8768 12d0 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8769 12d4 522B     		cmp	r3, #82
 8770 12d6 D9D9     		bls	.L315
1158:..\src/command_processing.c ****         }
1159:..\src/command_processing.c ****     }   // All parameters can be get with default settings, except the following ones
1160:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET[NUM_OF_PARAMS];
1161:..\src/command_processing.c ****     j = 0;
 8771              		.loc 1 1161 0 is_stmt 1
 8772 12d8 0023     		movs	r3, #0
 8773 12da 87F88635 		strb	r3, [r7, #1414]
1162:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 8774              		.loc 1 1162 0
 8775 12de 0023     		movs	r3, #0
 8776 12e0 87F88735 		strb	r3, [r7, #1415]
 8777 12e4 21E0     		b	.L316
 8778              	.L319:
1163:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8779              		.loc 1 1163 0
 8780 12e6 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 8781 12ea 07F1B402 		add	r2, r7, #180
 8782 12ee D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8783 12f0 1A46     		mov	r2, r3
 8784 12f2 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8785 12f6 0133     		adds	r3, r3, #1
 8786 12f8 9A42     		cmp	r2, r3
 8787 12fa 0BD1     		bne	.L317
1164:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = TRUE;
 8788              		.loc 1 1164 0
 8789 12fc 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8790 1300 07F10C02 		add	r2, r7, #12
 8791 1304 0121     		movs	r1, #1
 8792 1306 D154     		strb	r1, [r2, r3]
1165:..\src/command_processing.c ****             j++;
 8793              		.loc 1 1165 0
 8794 1308 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 8795 130c 0133     		adds	r3, r3, #1
 8796 130e 87F88635 		strb	r3, [r7, #1414]
 8797 1312 05E0     		b	.L318
 8798              	.L317:
1166:..\src/command_processing.c ****         }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 204


1167:..\src/command_processing.c ****         else {
1168:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = FALSE;
 8799              		.loc 1 1168 0
 8800 1314 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8801 1318 07F10C02 		add	r2, r7, #12
 8802 131c 0021     		movs	r1, #0
 8803 131e D154     		strb	r1, [r2, r3]
 8804              	.L318:
1162:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8805              		.loc 1 1162 0 discriminator 2
 8806 1320 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8807 1324 0133     		adds	r3, r3, #1
 8808 1326 87F88735 		strb	r3, [r7, #1415]
 8809              	.L316:
1162:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8810              		.loc 1 1162 0 is_stmt 0 discriminator 1
 8811 132a 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8812 132e 522B     		cmp	r3, #82
 8813 1330 D9D9     		bls	.L319
1169:..\src/command_processing.c ****         }
1170:..\src/command_processing.c ****     }   // All parameters can be setted with default settings, except the following ones
1171:..\src/command_processing.c ****         
1172:..\src/command_processing.c ****     if (!index) {
 8814              		.loc 1 1172 0 is_stmt 1
 8815 1332 BB1D     		adds	r3, r7, #6
 8816 1334 1B88     		ldrh	r3, [r3]
 8817 1336 002B     		cmp	r3, #0
 8818 1338 17D1     		bne	.L320
1173:..\src/command_processing.c ****         // Get parameters list with relative types
1174:..\src/command_processing.c ****         get_param_list(VAR_P, TYPES, NUM_ITEMS, NUM_STRUCT, NUM_MENU, PARAMS_STR, CUSTOM_PARAM_GET,
 8819              		.loc 1 1174 0
 8820 133a 07F54874 		add	r4, r7, #800
 8821 133e 07F55D72 		add	r2, r7, #884
 8822 1342 07F57271 		add	r1, r7, #968
 8823 1346 07F21C40 		addw	r0, r7, #1052
 8824 134a 07F1F403 		add	r3, r7, #244
 8825 134e 0393     		str	r3, [sp, #12]
 8826 1350 07F16003 		add	r3, r7, #96
 8827 1354 0293     		str	r3, [sp, #8]
 8828 1356 07F5EA73 		add	r3, r7, #468
 8829 135a 0193     		str	r3, [sp, #4]
 8830 135c 07F1D403 		add	r3, r7, #212
 8831 1360 0093     		str	r3, [sp]
 8832 1362 2346     		mov	r3, r4
 8833 1364 FFF7FEFF 		bl	get_param_list
1175:..\src/command_processing.c ****     }
1176:..\src/command_processing.c ****     else {
1177:..\src/command_processing.c ****         // Set specific parameter        
1178:..\src/command_processing.c ****         PARAM_IDX = index -1;       // Get right vector param index
1179:..\src/command_processing.c ****         
1180:..\src/command_processing.c ****         // Find size of data
1181:..\src/command_processing.c ****         switch (TYPES[PARAM_IDX]) {
1182:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
1183:..\src/command_processing.c ****                 sod = 1; break;
1184:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
1185:..\src/command_processing.c ****                 sod = 2; break;
1186:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 205


1187:..\src/command_processing.c ****                 sod = 4; break;
1188:..\src/command_processing.c ****         }   
1189:..\src/command_processing.c ****             
1190:..\src/command_processing.c ****         if (!CUSTOM_PARAM_SET[PARAM_IDX]) {
1191:..\src/command_processing.c ****             // Use default specifications for param setting
1192:..\src/command_processing.c ****             switch(TYPES[PARAM_IDX]) {
1193:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
1194:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1195:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1196:..\src/command_processing.c ****                     }
1197:..\src/command_processing.c ****                     break;                
1198:..\src/command_processing.c ****                 case TYPE_STRING:
1199:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1200:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1201:..\src/command_processing.c ****                     }
1202:..\src/command_processing.c ****                     *(VAR_P[PARAM_IDX] + i*sod) = '\0';
1203:..\src/command_processing.c ****                 break; 
1204:..\src/command_processing.c ****                 case TYPE_INT8:
1205:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1206:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
1207:..\src/command_processing.c ****                     }
1208:..\src/command_processing.c ****                     break;                    
1209:..\src/command_processing.c ****                 case TYPE_INT16:
1210:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1211:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
1212:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1213:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
1214:..\src/command_processing.c ****                         }
1215:..\src/command_processing.c ****                     }                   
1216:..\src/command_processing.c ****                     break;
1217:..\src/command_processing.c ****                 case TYPE_UINT16:
1218:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1219:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
1220:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1221:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
1222:..\src/command_processing.c ****                         }
1223:..\src/command_processing.c ****                     }
1224:..\src/command_processing.c ****                     break;
1225:..\src/command_processing.c ****                 case TYPE_INT32:
1226:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1227:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
1228:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1229:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
1230:..\src/command_processing.c ****                         }
1231:..\src/command_processing.c ****                     }
1232:..\src/command_processing.c ****                     break;
1233:..\src/command_processing.c ****                 case TYPE_UINT32:
1234:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1235:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
1236:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1237:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
1238:..\src/command_processing.c ****                         }
1239:..\src/command_processing.c ****                     }
1240:..\src/command_processing.c ****                     break;
1241:..\src/command_processing.c ****                 case TYPE_FLOAT:
1242:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1243:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 206


1244:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1245:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
1246:..\src/command_processing.c ****                         }
1247:..\src/command_processing.c ****                     }
1248:..\src/command_processing.c ****                     break;
1249:..\src/command_processing.c ****                 default:
1250:..\src/command_processing.c ****                     break;
1251:..\src/command_processing.c ****             }
1252:..\src/command_processing.c ****         }
1253:..\src/command_processing.c ****         else {  
1254:..\src/command_processing.c ****             // Use custom specifications for param setting
1255:..\src/command_processing.c ****             set_custom_param(index);
1256:..\src/command_processing.c ****         }
1257:..\src/command_processing.c ****         
1258:..\src/command_processing.c ****         // Store param also in user_emg structure
1259:..\src/command_processing.c ****         if (index != USER_ID_PARAM) {        // Not when changing user id
1260:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
1261:..\src/command_processing.c ****         }
1262:..\src/command_processing.c ****         
1263:..\src/command_processing.c ****         // Perform chip reset if needed
1264:..\src/command_processing.c ****         if (TYPES[PARAM_IDX] == TYPE_FLAG){
1265:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
1266:..\src/command_processing.c ****             do {
1267:..\src/command_processing.c ****                 if (TYPES[idx] == TYPE_FLAG) menu_idx++;    // Increment idx to find the right NUM_
1268:..\src/command_processing.c ****                 idx++;
1269:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
1270:..\src/command_processing.c ****             
1271:..\src/command_processing.c ****             if (NUM_MENU[menu_idx] == 5 || NUM_MENU[menu_idx] == 6 || NUM_MENU[menu_idx] == 8 || NU
1272:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
1273:..\src/command_processing.c ****             }   
1274:..\src/command_processing.c ****         }
1275:..\src/command_processing.c ****     }
1276:..\src/command_processing.c **** } 
 8834              		.loc 1 1276 0
 8835 1368 E0E2     		b	.L371
 8836              	.L320:
1178:..\src/command_processing.c ****         
 8837              		.loc 1 1178 0
 8838 136a BB1D     		adds	r3, r7, #6
 8839 136c 1B88     		ldrh	r3, [r3]	@ movhi
 8840 136e DBB2     		uxtb	r3, r3
 8841 1370 013B     		subs	r3, r3, #1
 8842 1372 87F87A35 		strb	r3, [r7, #1402]
1181:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 8843              		.loc 1 1181 0
 8844 1376 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 8845 137a 07F57272 		add	r2, r7, #968
 8846 137e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8847 1380 092B     		cmp	r3, #9
 8848 1382 23D8     		bhi	.L322
 8849 1384 01A2     		adr	r2, .L324
 8850 1386 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8851 138a 00BF     		.p2align 2
 8852              	.L324:
 8853 138c B5130000 		.word	.L323+1
 8854 1390 B5130000 		.word	.L323+1
 8855 1394 B5130000 		.word	.L323+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 207


 8856 1398 BD130000 		.word	.L325+1
 8857 139c BD130000 		.word	.L325+1
 8858 13a0 C5130000 		.word	.L326+1
 8859 13a4 C5130000 		.word	.L326+1
 8860 13a8 C5130000 		.word	.L326+1
 8861 13ac CD130000 		.word	.L322+1
 8862 13b0 B5130000 		.word	.L323+1
 8863              		.p2align 1
 8864              	.L323:
1183:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 8865              		.loc 1 1183 0
 8866 13b4 0123     		movs	r3, #1
 8867 13b6 87F88535 		strb	r3, [r7, #1413]
 8868 13ba 07E0     		b	.L322
 8869              	.L325:
1185:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 8870              		.loc 1 1185 0
 8871 13bc 0223     		movs	r3, #2
 8872 13be 87F88535 		strb	r3, [r7, #1413]
 8873 13c2 03E0     		b	.L322
 8874              	.L326:
1187:..\src/command_processing.c ****         }   
 8875              		.loc 1 1187 0
 8876 13c4 0423     		movs	r3, #4
 8877 13c6 87F88535 		strb	r3, [r7, #1413]
 8878 13ca 00BF     		nop
 8879              	.L322:
1190:..\src/command_processing.c ****             // Use default specifications for param setting
 8880              		.loc 1 1190 0
 8881 13cc 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 8882 13d0 07F10C02 		add	r2, r7, #12
 8883 13d4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8884 13d6 002B     		cmp	r3, #0
 8885 13d8 40F03B82 		bne	.L327
1192:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
 8886              		.loc 1 1192 0
 8887 13dc 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 8888 13e0 07F57272 		add	r2, r7, #968
 8889 13e4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8890 13e6 092B     		cmp	r3, #9
 8891 13e8 00F23C82 		bhi	.L370
 8892 13ec 01A2     		adr	r2, .L330
 8893 13ee 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8894 13f2 00BF     		.p2align 2
 8895              	.L330:
 8896 13f4 1D140000 		.word	.L329+1
 8897 13f8 1B150000 		.word	.L331+1
 8898 13fc 1D140000 		.word	.L329+1
 8899 1400 6D150000 		.word	.L332+1
 8900 1404 03160000 		.word	.L333+1
 8901 1408 97160000 		.word	.L334+1
 8902 140c 2B170000 		.word	.L335+1
 8903 1410 BF170000 		.word	.L336+1
 8904 1414 65180000 		.word	.L370+1
 8905 1418 69140000 		.word	.L337+1
 8906              		.p2align 1
 8907              	.L329:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 208


1194:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8908              		.loc 1 1194 0
 8909 141c 0023     		movs	r3, #0
 8910 141e 87F88735 		strb	r3, [r7, #1415]
 8911 1422 17E0     		b	.L338
 8912              	.L339:
1195:..\src/command_processing.c ****                     }
 8913              		.loc 1 1195 0 discriminator 3
 8914 1424 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 8915 1428 07F21C43 		addw	r3, r7, #1052
 8916 142c 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8917 1430 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 8918 1434 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 8919 1438 01FB02F2 		mul	r2, r1, r2
 8920 143c 1344     		add	r3, r3, r2
 8921 143e 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 8922 1442 0332     		adds	r2, r2, #3
 8923 1444 1B49     		ldr	r1, .L378+68
 8924 1446 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8925 1448 1A70     		strb	r2, [r3]
1194:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8926              		.loc 1 1194 0 discriminator 3
 8927 144a 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8928 144e 0133     		adds	r3, r3, #1
 8929 1450 87F88735 		strb	r3, [r7, #1415]
 8930              	.L338:
1194:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8931              		.loc 1 1194 0 is_stmt 0 discriminator 1
 8932 1454 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 8933 1458 07F55D72 		add	r2, r7, #884
 8934 145c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8935 145e 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 8936 1462 9A42     		cmp	r2, r3
 8937 1464 DED3     		bcc	.L339
1197:..\src/command_processing.c ****                 case TYPE_STRING:
 8938              		.loc 1 1197 0 is_stmt 1
 8939 1466 FEE1     		b	.L365
 8940              	.L337:
1199:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8941              		.loc 1 1199 0
 8942 1468 0023     		movs	r3, #0
 8943 146a 87F88735 		strb	r3, [r7, #1415]
 8944 146e 3BE0     		b	.L341
 8945              	.L379:
 8946              		.align	2
 8947              	.L378:
 8948 1470 380F0000 		.word	.LC129
 8949 1474 88020000 		.word	.LC130
 8950 1478 FC020000 		.word	.LC131
 8951 147c 34030000 		.word	.LC132
 8952 1480 6C030000 		.word	.LC133
 8953 1484 F8030000 		.word	.LC134
 8954 1488 38040000 		.word	.LC135
 8955 148c 64040000 		.word	.LC136
 8956 1490 7C040000 		.word	.LC137
 8957 1494 A4040000 		.word	.LC138
 8958 1498 00050000 		.word	.LC139
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 209


 8959 149c 40050000 		.word	.LC140
 8960 14a0 A0050000 		.word	.LC141
 8961 14a4 1C060000 		.word	.LC142
 8962 14a8 84100000 		.word	.LC85
 8963 14ac A4100000 		.word	.LC86
 8964 14b0 B0100000 		.word	.LC87
 8965 14b4 00000000 		.word	g_rx
 8966              	.L342:
1200:..\src/command_processing.c ****                     }
 8967              		.loc 1 1200 0 discriminator 3
 8968 14b8 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 8969 14bc 07F21C43 		addw	r3, r7, #1052
 8970 14c0 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8971 14c4 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 8972 14c8 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 8973 14cc 01FB02F2 		mul	r2, r1, r2
 8974 14d0 1344     		add	r3, r3, r2
 8975 14d2 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 8976 14d6 0332     		adds	r2, r2, #3
 8977 14d8 E149     		ldr	r1, .L380
 8978 14da 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8979 14dc 1A70     		strb	r2, [r3]
1199:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8980              		.loc 1 1199 0 discriminator 3
 8981 14de 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8982 14e2 0133     		adds	r3, r3, #1
 8983 14e4 87F88735 		strb	r3, [r7, #1415]
 8984              	.L341:
1199:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8985              		.loc 1 1199 0 is_stmt 0 discriminator 1
 8986 14e8 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 8987 14ec 07F55D72 		add	r2, r7, #884
 8988 14f0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8989 14f2 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 8990 14f6 9A42     		cmp	r2, r3
 8991 14f8 DED3     		bcc	.L342
1202:..\src/command_processing.c ****                 break; 
 8992              		.loc 1 1202 0 is_stmt 1
 8993 14fa 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 8994 14fe 07F21C43 		addw	r3, r7, #1052
 8995 1502 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8996 1506 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 8997 150a 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 8998 150e 01FB02F2 		mul	r2, r1, r2
 8999 1512 1344     		add	r3, r3, r2
 9000 1514 0022     		movs	r2, #0
 9001 1516 1A70     		strb	r2, [r3]
1203:..\src/command_processing.c ****                 case TYPE_INT8:
 9002              		.loc 1 1203 0
 9003 1518 A5E1     		b	.L365
 9004              	.L331:
1205:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 9005              		.loc 1 1205 0
 9006 151a 0023     		movs	r3, #0
 9007 151c 87F88735 		strb	r3, [r7, #1415]
 9008 1520 1AE0     		b	.L343
 9009              	.L344:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 210


1206:..\src/command_processing.c ****                     }
 9010              		.loc 1 1206 0 discriminator 3
 9011 1522 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9012 1526 07F21C43 		addw	r3, r7, #1052
 9013 152a 53F82230 		ldr	r3, [r3, r2, lsl #2]
 9014 152e 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9015 1532 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9016 1536 01FB02F2 		mul	r2, r1, r2
 9017 153a 1344     		add	r3, r3, r2
 9018 153c 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9019 1540 0332     		adds	r2, r2, #3
 9020 1542 C749     		ldr	r1, .L380
 9021 1544 0A44     		add	r2, r2, r1
 9022 1546 92F90020 		ldrsb	r2, [r2]
 9023 154a D2B2     		uxtb	r2, r2
 9024 154c 1A70     		strb	r2, [r3]
1205:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 9025              		.loc 1 1205 0 discriminator 3
 9026 154e 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9027 1552 0133     		adds	r3, r3, #1
 9028 1554 87F88735 		strb	r3, [r7, #1415]
 9029              	.L343:
1205:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 9030              		.loc 1 1205 0 is_stmt 0 discriminator 1
 9031 1558 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9032 155c 07F55D72 		add	r2, r7, #884
 9033 1560 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9034 1562 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9035 1566 9A42     		cmp	r2, r3
 9036 1568 DBD3     		bcc	.L344
1208:..\src/command_processing.c ****                 case TYPE_INT16:
 9037              		.loc 1 1208 0 is_stmt 1
 9038 156a 7CE1     		b	.L365
 9039              	.L332:
1210:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 9040              		.loc 1 1210 0
 9041 156c 0023     		movs	r3, #0
 9042 156e 87F88735 		strb	r3, [r7, #1415]
 9043 1572 3CE0     		b	.L345
 9044              	.L348:
1211:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9045              		.loc 1 1211 0
 9046 1574 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9047 1578 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9048 157c 02FB03F3 		mul	r3, r2, r3
 9049 1580 0333     		adds	r3, r3, #3
 9050 1582 B74A     		ldr	r2, .L380
 9051 1584 1344     		add	r3, r3, r2
 9052 1586 B3F90030 		ldrsh	r3, [r3]
 9053 158a A7F87835 		strh	r3, [r7, #1400]	@ movhi
1212:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 9054              		.loc 1 1212 0
 9055 158e 0023     		movs	r3, #0
 9056 1590 87F88635 		strb	r3, [r7, #1414]
 9057 1594 20E0     		b	.L346
 9058              	.L347:
1213:..\src/command_processing.c ****                         }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 211


 9059              		.loc 1 1213 0 discriminator 3
 9060 1596 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9061 159a 07F21C43 		addw	r3, r7, #1052
 9062 159e 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9063 15a2 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9064 15a6 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9065 15aa 01FB03F3 		mul	r3, r1, r3
 9066 15ae 1846     		mov	r0, r3
 9067 15b0 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9068 15b4 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9069 15b8 CB1A     		subs	r3, r1, r3
 9070 15ba 0344     		add	r3, r3, r0
 9071 15bc 013B     		subs	r3, r3, #1
 9072 15be 1344     		add	r3, r3, r2
 9073 15c0 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9074 15c4 07F5AF61 		add	r1, r7, #1400
 9075 15c8 0A44     		add	r2, r2, r1
 9076 15ca 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9077 15cc 1A70     		strb	r2, [r3]
1212:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 9078              		.loc 1 1212 0 discriminator 3
 9079 15ce 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9080 15d2 0133     		adds	r3, r3, #1
 9081 15d4 87F88635 		strb	r3, [r7, #1414]
 9082              	.L346:
1212:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 9083              		.loc 1 1212 0 is_stmt 0 discriminator 1
 9084 15d8 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9085 15dc 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9086 15e0 9A42     		cmp	r2, r3
 9087 15e2 D8D3     		bcc	.L347
1210:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 9088              		.loc 1 1210 0 is_stmt 1 discriminator 2
 9089 15e4 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9090 15e8 0133     		adds	r3, r3, #1
 9091 15ea 87F88735 		strb	r3, [r7, #1415]
 9092              	.L345:
1210:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 9093              		.loc 1 1210 0 is_stmt 0 discriminator 1
 9094 15ee 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9095 15f2 07F55D72 		add	r2, r7, #884
 9096 15f6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9097 15f8 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9098 15fc 9A42     		cmp	r2, r3
 9099 15fe B9D3     		bcc	.L348
1216:..\src/command_processing.c ****                 case TYPE_UINT16:
 9100              		.loc 1 1216 0 is_stmt 1
 9101 1600 31E1     		b	.L365
 9102              	.L333:
1218:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 9103              		.loc 1 1218 0
 9104 1602 0023     		movs	r3, #0
 9105 1604 87F88735 		strb	r3, [r7, #1415]
 9106 1608 3BE0     		b	.L349
 9107              	.L352:
1219:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9108              		.loc 1 1219 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 212


 9109 160a 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9110 160e 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9111 1612 02FB03F3 		mul	r3, r2, r3
 9112 1616 0333     		adds	r3, r3, #3
 9113 1618 914A     		ldr	r2, .L380
 9114 161a 1344     		add	r3, r3, r2
 9115 161c 1B88     		ldrh	r3, [r3]
 9116 161e A7F87635 		strh	r3, [r7, #1398]	@ movhi
1220:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 9117              		.loc 1 1220 0
 9118 1622 0023     		movs	r3, #0
 9119 1624 87F88635 		strb	r3, [r7, #1414]
 9120 1628 20E0     		b	.L350
 9121              	.L351:
1221:..\src/command_processing.c ****                         }
 9122              		.loc 1 1221 0 discriminator 3
 9123 162a 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9124 162e 07F21C43 		addw	r3, r7, #1052
 9125 1632 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9126 1636 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9127 163a 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9128 163e 01FB03F3 		mul	r3, r1, r3
 9129 1642 1846     		mov	r0, r3
 9130 1644 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9131 1648 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9132 164c CB1A     		subs	r3, r1, r3
 9133 164e 0344     		add	r3, r3, r0
 9134 1650 013B     		subs	r3, r3, #1
 9135 1652 1344     		add	r3, r3, r2
 9136 1654 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9137 1658 07F27651 		addw	r1, r7, #1398
 9138 165c 0A44     		add	r2, r2, r1
 9139 165e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9140 1660 1A70     		strb	r2, [r3]
1220:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 9141              		.loc 1 1220 0 discriminator 3
 9142 1662 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9143 1666 0133     		adds	r3, r3, #1
 9144 1668 87F88635 		strb	r3, [r7, #1414]
 9145              	.L350:
1220:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 9146              		.loc 1 1220 0 is_stmt 0 discriminator 1
 9147 166c 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9148 1670 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9149 1674 9A42     		cmp	r2, r3
 9150 1676 D8D3     		bcc	.L351
1218:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 9151              		.loc 1 1218 0 is_stmt 1 discriminator 2
 9152 1678 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9153 167c 0133     		adds	r3, r3, #1
 9154 167e 87F88735 		strb	r3, [r7, #1415]
 9155              	.L349:
1218:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 9156              		.loc 1 1218 0 is_stmt 0 discriminator 1
 9157 1682 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9158 1686 07F55D72 		add	r2, r7, #884
 9159 168a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 213


 9160 168c 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9161 1690 9A42     		cmp	r2, r3
 9162 1692 BAD3     		bcc	.L352
1224:..\src/command_processing.c ****                 case TYPE_INT32:
 9163              		.loc 1 1224 0 is_stmt 1
 9164 1694 E7E0     		b	.L365
 9165              	.L334:
1226:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 9166              		.loc 1 1226 0
 9167 1696 0023     		movs	r3, #0
 9168 1698 87F88735 		strb	r3, [r7, #1415]
 9169 169c 3BE0     		b	.L353
 9170              	.L356:
1227:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9171              		.loc 1 1227 0
 9172 169e 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9173 16a2 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9174 16a6 02FB03F3 		mul	r3, r2, r3
 9175 16aa 0333     		adds	r3, r3, #3
 9176 16ac 6C4A     		ldr	r2, .L380
 9177 16ae 1344     		add	r3, r3, r2
 9178 16b0 1B68     		ldr	r3, [r3]
 9179 16b2 C7F87035 		str	r3, [r7, #1392]
1228:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 9180              		.loc 1 1228 0
 9181 16b6 0023     		movs	r3, #0
 9182 16b8 87F88635 		strb	r3, [r7, #1414]
 9183 16bc 20E0     		b	.L354
 9184              	.L355:
1229:..\src/command_processing.c ****                         }
 9185              		.loc 1 1229 0 discriminator 3
 9186 16be 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9187 16c2 07F21C43 		addw	r3, r7, #1052
 9188 16c6 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9189 16ca 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9190 16ce 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9191 16d2 01FB03F3 		mul	r3, r1, r3
 9192 16d6 1846     		mov	r0, r3
 9193 16d8 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9194 16dc 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9195 16e0 CB1A     		subs	r3, r1, r3
 9196 16e2 0344     		add	r3, r3, r0
 9197 16e4 013B     		subs	r3, r3, #1
 9198 16e6 1344     		add	r3, r3, r2
 9199 16e8 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9200 16ec 07F5AE61 		add	r1, r7, #1392
 9201 16f0 0A44     		add	r2, r2, r1
 9202 16f2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9203 16f4 1A70     		strb	r2, [r3]
1228:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 9204              		.loc 1 1228 0 discriminator 3
 9205 16f6 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9206 16fa 0133     		adds	r3, r3, #1
 9207 16fc 87F88635 		strb	r3, [r7, #1414]
 9208              	.L354:
1228:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 9209              		.loc 1 1228 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 214


 9210 1700 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9211 1704 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9212 1708 9A42     		cmp	r2, r3
 9213 170a D8D3     		bcc	.L355
1226:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 9214              		.loc 1 1226 0 is_stmt 1 discriminator 2
 9215 170c 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9216 1710 0133     		adds	r3, r3, #1
 9217 1712 87F88735 		strb	r3, [r7, #1415]
 9218              	.L353:
1226:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 9219              		.loc 1 1226 0 is_stmt 0 discriminator 1
 9220 1716 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9221 171a 07F55D72 		add	r2, r7, #884
 9222 171e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9223 1720 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9224 1724 9A42     		cmp	r2, r3
 9225 1726 BAD3     		bcc	.L356
1232:..\src/command_processing.c ****                 case TYPE_UINT32:
 9226              		.loc 1 1232 0 is_stmt 1
 9227 1728 9DE0     		b	.L365
 9228              	.L335:
1234:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 9229              		.loc 1 1234 0
 9230 172a 0023     		movs	r3, #0
 9231 172c 87F88735 		strb	r3, [r7, #1415]
 9232 1730 3BE0     		b	.L357
 9233              	.L360:
1235:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9234              		.loc 1 1235 0
 9235 1732 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9236 1736 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9237 173a 02FB03F3 		mul	r3, r2, r3
 9238 173e 0333     		adds	r3, r3, #3
 9239 1740 474A     		ldr	r2, .L380
 9240 1742 1344     		add	r3, r3, r2
 9241 1744 1B68     		ldr	r3, [r3]
 9242 1746 C7F86C35 		str	r3, [r7, #1388]
1236:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 9243              		.loc 1 1236 0
 9244 174a 0023     		movs	r3, #0
 9245 174c 87F88635 		strb	r3, [r7, #1414]
 9246 1750 20E0     		b	.L358
 9247              	.L359:
1237:..\src/command_processing.c ****                         }
 9248              		.loc 1 1237 0 discriminator 3
 9249 1752 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9250 1756 07F21C43 		addw	r3, r7, #1052
 9251 175a 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9252 175e 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9253 1762 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9254 1766 01FB03F3 		mul	r3, r1, r3
 9255 176a 1846     		mov	r0, r3
 9256 176c 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9257 1770 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9258 1774 CB1A     		subs	r3, r1, r3
 9259 1776 0344     		add	r3, r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 215


 9260 1778 013B     		subs	r3, r3, #1
 9261 177a 1344     		add	r3, r3, r2
 9262 177c 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9263 1780 07F26C51 		addw	r1, r7, #1388
 9264 1784 0A44     		add	r2, r2, r1
 9265 1786 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9266 1788 1A70     		strb	r2, [r3]
1236:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 9267              		.loc 1 1236 0 discriminator 3
 9268 178a 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9269 178e 0133     		adds	r3, r3, #1
 9270 1790 87F88635 		strb	r3, [r7, #1414]
 9271              	.L358:
1236:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 9272              		.loc 1 1236 0 is_stmt 0 discriminator 1
 9273 1794 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9274 1798 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9275 179c 9A42     		cmp	r2, r3
 9276 179e D8D3     		bcc	.L359
1234:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 9277              		.loc 1 1234 0 is_stmt 1 discriminator 2
 9278 17a0 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9279 17a4 0133     		adds	r3, r3, #1
 9280 17a6 87F88735 		strb	r3, [r7, #1415]
 9281              	.L357:
1234:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 9282              		.loc 1 1234 0 is_stmt 0 discriminator 1
 9283 17aa 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9284 17ae 07F55D72 		add	r2, r7, #884
 9285 17b2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9286 17b4 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9287 17b8 9A42     		cmp	r2, r3
 9288 17ba BAD3     		bcc	.L360
1240:..\src/command_processing.c ****                 case TYPE_FLOAT:
 9289              		.loc 1 1240 0 is_stmt 1
 9290 17bc 53E0     		b	.L365
 9291              	.L336:
1242:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 9292              		.loc 1 1242 0
 9293 17be 0023     		movs	r3, #0
 9294 17c0 87F88735 		strb	r3, [r7, #1415]
 9295 17c4 3BE0     		b	.L361
 9296              	.L364:
1243:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9297              		.loc 1 1243 0
 9298 17c6 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9299 17ca 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9300 17ce 02FB03F3 		mul	r3, r2, r3
 9301 17d2 0333     		adds	r3, r3, #3
 9302 17d4 224A     		ldr	r2, .L380
 9303 17d6 1344     		add	r3, r3, r2
 9304 17d8 1B68     		ldr	r3, [r3]	@ float
 9305 17da C7F86835 		str	r3, [r7, #1384]	@ float
1244:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 9306              		.loc 1 1244 0
 9307 17de 0023     		movs	r3, #0
 9308 17e0 87F88635 		strb	r3, [r7, #1414]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 216


 9309 17e4 20E0     		b	.L362
 9310              	.L363:
1245:..\src/command_processing.c ****                         }
 9311              		.loc 1 1245 0 discriminator 3
 9312 17e6 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9313 17ea 07F21C43 		addw	r3, r7, #1052
 9314 17ee 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9315 17f2 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9316 17f6 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9317 17fa 01FB03F3 		mul	r3, r1, r3
 9318 17fe 1846     		mov	r0, r3
 9319 1800 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9320 1804 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9321 1808 CB1A     		subs	r3, r1, r3
 9322 180a 0344     		add	r3, r3, r0
 9323 180c 013B     		subs	r3, r3, #1
 9324 180e 1344     		add	r3, r3, r2
 9325 1810 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9326 1814 07F5AD61 		add	r1, r7, #1384
 9327 1818 0A44     		add	r2, r2, r1
 9328 181a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9329 181c 1A70     		strb	r2, [r3]
1244:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 9330              		.loc 1 1244 0 discriminator 3
 9331 181e 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9332 1822 0133     		adds	r3, r3, #1
 9333 1824 87F88635 		strb	r3, [r7, #1414]
 9334              	.L362:
1244:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 9335              		.loc 1 1244 0 is_stmt 0 discriminator 1
 9336 1828 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9337 182c 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9338 1830 9A42     		cmp	r2, r3
 9339 1832 D8D3     		bcc	.L363
1242:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 9340              		.loc 1 1242 0 is_stmt 1 discriminator 2
 9341 1834 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9342 1838 0133     		adds	r3, r3, #1
 9343 183a 87F88735 		strb	r3, [r7, #1415]
 9344              	.L361:
1242:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 9345              		.loc 1 1242 0 is_stmt 0 discriminator 1
 9346 183e 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9347 1842 07F55D72 		add	r2, r7, #884
 9348 1846 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9349 1848 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9350 184c 9A42     		cmp	r2, r3
 9351 184e BAD3     		bcc	.L364
1248:..\src/command_processing.c ****                 default:
 9352              		.loc 1 1248 0 is_stmt 1
 9353 1850 09E0     		b	.L365
 9354              	.L327:
1255:..\src/command_processing.c ****         }
 9355              		.loc 1 1255 0
 9356 1852 BB1D     		adds	r3, r7, #6
 9357 1854 1B88     		ldrh	r3, [r3]
 9358 1856 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 217


 9359 1858 FFF7FEFF 		bl	set_custom_param
 9360 185c 03E0     		b	.L365
 9361              	.L381:
 9362 185e 00BF     		.align	2
 9363              	.L380:
 9364 1860 00000000 		.word	g_rx
 9365              	.L370:
1250:..\src/command_processing.c ****             }
 9366              		.loc 1 1250 0
 9367 1864 00BF     		nop
 9368              	.L365:
1259:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
 9369              		.loc 1 1259 0
 9370 1866 97F87B35 		ldrb	r3, [r7, #1403]	@ zero_extendqisi2
 9371 186a 9BB2     		uxth	r3, r3
 9372 186c BA1D     		adds	r2, r7, #6
 9373 186e 1288     		ldrh	r2, [r2]
 9374 1870 9A42     		cmp	r2, r3
 9375 1872 11D0     		beq	.L366
1260:..\src/command_processing.c ****         }
 9376              		.loc 1 1260 0
 9377 1874 D7F88035 		ldr	r3, [r7, #1408]
 9378 1878 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 9379 187c 5B01     		lsls	r3, r3, #5
 9380 187e 03F51273 		add	r3, r3, #584
 9381 1882 D7F88025 		ldr	r2, [r7, #1408]
 9382 1886 D018     		adds	r0, r2, r3
 9383 1888 D7F88035 		ldr	r3, [r7, #1408]
 9384 188c 03F5F873 		add	r3, r3, #496
 9385 1890 1022     		movs	r2, #16
 9386 1892 1946     		mov	r1, r3
 9387 1894 FFF7FEFF 		bl	memcpy
 9388              	.L366:
1264:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
 9389              		.loc 1 1264 0
 9390 1898 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9391 189c 07F57272 		add	r2, r7, #968
 9392 18a0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9393 18a2 002B     		cmp	r3, #0
 9394 18a4 42D1     		bne	.L371
 9395              	.LBB18:
1265:..\src/command_processing.c ****             do {
 9396              		.loc 1 1265 0
 9397 18a6 0023     		movs	r3, #0
 9398 18a8 87F87F35 		strb	r3, [r7, #1407]
 9399 18ac FF23     		movs	r3, #255
 9400 18ae 87F87E35 		strb	r3, [r7, #1406]
 9401              	.L368:
1267:..\src/command_processing.c ****                 idx++;
 9402              		.loc 1 1267 0
 9403 18b2 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 9404 18b6 07F57272 		add	r2, r7, #968
 9405 18ba D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9406 18bc 002B     		cmp	r3, #0
 9407 18be 04D1     		bne	.L367
1267:..\src/command_processing.c ****                 idx++;
 9408              		.loc 1 1267 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 218


 9409 18c0 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9410 18c4 0133     		adds	r3, r3, #1
 9411 18c6 87F87E35 		strb	r3, [r7, #1406]
 9412              	.L367:
1268:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
 9413              		.loc 1 1268 0 is_stmt 1
 9414 18ca 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 9415 18ce 0133     		adds	r3, r3, #1
 9416 18d0 87F87F35 		strb	r3, [r7, #1407]
1269:..\src/command_processing.c ****             
 9417              		.loc 1 1269 0
 9418 18d4 97F87F25 		ldrb	r2, [r7, #1407]	@ zero_extendqisi2
 9419 18d8 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9420 18dc 9A42     		cmp	r2, r3
 9421 18de E8D9     		bls	.L368
1271:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9422              		.loc 1 1271 0
 9423 18e0 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9424 18e4 07F1D402 		add	r2, r7, #212
 9425 18e8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9426 18ea 052B     		cmp	r3, #5
 9427 18ec 1BD0     		beq	.L369
1271:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9428              		.loc 1 1271 0 is_stmt 0 discriminator 1
 9429 18ee 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9430 18f2 07F1D402 		add	r2, r7, #212
 9431 18f6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9432 18f8 062B     		cmp	r3, #6
 9433 18fa 14D0     		beq	.L369
1271:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9434              		.loc 1 1271 0 discriminator 2
 9435 18fc 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9436 1900 07F1D402 		add	r2, r7, #212
 9437 1904 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9438 1906 082B     		cmp	r3, #8
 9439 1908 0DD0     		beq	.L369
1271:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9440              		.loc 1 1271 0 discriminator 3
 9441 190a 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9442 190e 07F1D402 		add	r2, r7, #212
 9443 1912 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9444 1914 092B     		cmp	r3, #9
 9445 1916 06D0     		beq	.L369
1271:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9446              		.loc 1 1271 0 discriminator 4
 9447 1918 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9448 191c 07F1D402 		add	r2, r7, #212
 9449 1920 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9450 1922 0A2B     		cmp	r3, #10
 9451 1924 02D1     		bne	.L371
 9452              	.L369:
1272:..\src/command_processing.c ****             }   
 9453              		.loc 1 1272 0 is_stmt 1
 9454 1926 044B     		ldr	r3, .L382
 9455 1928 0122     		movs	r2, #1
 9456 192a 1A70     		strb	r2, [r3]
 9457              	.L371:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 219


 9458              	.LBE18:
 9459              		.loc 1 1276 0
 9460 192c 00BF     		nop
 9461 192e 07F5B167 		add	r7, r7, #1416
 9462              		.cfi_def_cfa_offset 16
 9463 1932 BD46     		mov	sp, r7
 9464              		.cfi_def_cfa_register 13
 9465              		@ sp needed
 9466 1934 B0BD     		pop	{r4, r5, r7, pc}
 9467              	.L383:
 9468 1936 00BF     		.align	2
 9469              	.L382:
 9470 1938 00000000 		.word	reset_PSoC_flag
 9471              		.cfi_endproc
 9472              	.LFE68:
 9473              		.size	manage_param_list, .-manage_param_list
 9474              		.global	__aeabi_fmul
 9475              		.global	__aeabi_f2iz
 9476              		.section	.text.set_custom_param,"ax",%progbits
 9477              		.align	2
 9478              		.global	set_custom_param
 9479              		.thumb
 9480              		.thumb_func
 9481              		.type	set_custom_param, %function
 9482              	set_custom_param:
 9483              	.LFB69:
1277:..\src/command_processing.c **** 
1278:..\src/command_processing.c **** //==============================================================================
1279:..\src/command_processing.c **** //                                                              SET CUSTOM PARAM
1280:..\src/command_processing.c **** //==============================================================================
1281:..\src/command_processing.c **** 
1282:..\src/command_processing.c **** void set_custom_param(uint16 index) {
 9484              		.loc 1 1282 0
 9485              		.cfi_startproc
 9486              		@ args = 0, pretend = 0, frame = 24
 9487              		@ frame_needed = 1, uses_anonymous_args = 0
 9488 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 9489              		.cfi_def_cfa_offset 20
 9490              		.cfi_offset 4, -20
 9491              		.cfi_offset 5, -16
 9492              		.cfi_offset 6, -12
 9493              		.cfi_offset 7, -8
 9494              		.cfi_offset 14, -4
 9495 0002 87B0     		sub	sp, sp, #28
 9496              		.cfi_def_cfa_offset 48
 9497 0004 00AF     		add	r7, sp, #0
 9498              		.cfi_def_cfa_register 7
 9499 0006 0346     		mov	r3, r0
 9500 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1283:..\src/command_processing.c **** 
1284:..\src/command_processing.c ****     uint8 CYDATA i, j;
1285:..\src/command_processing.c ****     uint8 aux_uchar;
1286:..\src/command_processing.c ****     float aux_float, aux_float2;
1287:..\src/command_processing.c **** 
1288:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 9501              		.loc 1 1288 0
 9502 000a 0023     		movs	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 220


 9503 000c 3B75     		strb	r3, [r7, #20]
1289:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 9504              		.loc 1 1289 0
 9505 000e 0123     		movs	r3, #1
 9506 0010 FB74     		strb	r3, [r7, #19]
1290:..\src/command_processing.c ****     
1291:..\src/command_processing.c ****     switch(index){
 9507              		.loc 1 1291 0
 9508 0012 FB88     		ldrh	r3, [r7, #6]
 9509 0014 023B     		subs	r3, r3, #2
 9510 0016 492B     		cmp	r3, #73
 9511 0018 01F24C82 		bhi	.L479
 9512 001c 01A2     		adr	r2, .L387
 9513 001e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 9514 0022 00BF     		.p2align 2
 9515              	.L387:
 9516 0024 4D010000 		.word	.L386+1
 9517 0028 7F030000 		.word	.L388+1
 9518 002c B5140000 		.word	.L479+1
 9519 0030 C5050000 		.word	.L389+1
 9520 0034 B5140000 		.word	.L479+1
 9521 0038 B5140000 		.word	.L479+1
 9522 003c 0F060000 		.word	.L390+1
 9523 0040 B5140000 		.word	.L479+1
 9524 0044 B5140000 		.word	.L479+1
 9525 0048 49070000 		.word	.L391+1
 9526 004c B5140000 		.word	.L479+1
 9527 0050 B5140000 		.word	.L479+1
 9528 0054 B5140000 		.word	.L479+1
 9529 0058 B5140000 		.word	.L479+1
 9530 005c B5140000 		.word	.L479+1
 9531 0060 B5140000 		.word	.L479+1
 9532 0064 B5140000 		.word	.L479+1
 9533 0068 B5140000 		.word	.L479+1
 9534 006c B5140000 		.word	.L479+1
 9535 0070 B5140000 		.word	.L479+1
 9536 0074 B5140000 		.word	.L479+1
 9537 0078 49080000 		.word	.L392+1
 9538 007c A7080000 		.word	.L393+1
 9539 0080 B5140000 		.word	.L479+1
 9540 0084 B5140000 		.word	.L479+1
 9541 0088 B5140000 		.word	.L479+1
 9542 008c E1080000 		.word	.L394+1
 9543 0090 B5140000 		.word	.L479+1
 9544 0094 B5140000 		.word	.L479+1
 9545 0098 5D0A0000 		.word	.L395+1
 9546 009c 090B0000 		.word	.L396+1
 9547 00a0 B5140000 		.word	.L479+1
 9548 00a4 B5140000 		.word	.L479+1
 9549 00a8 B5140000 		.word	.L479+1
 9550 00ac B5140000 		.word	.L479+1
 9551 00b0 B5140000 		.word	.L479+1
 9552 00b4 430B0000 		.word	.L397+1
 9553 00b8 B5140000 		.word	.L479+1
 9554 00bc B5140000 		.word	.L479+1
 9555 00c0 B5140000 		.word	.L479+1
 9556 00c4 B5140000 		.word	.L479+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 221


 9557 00c8 B5140000 		.word	.L479+1
 9558 00cc 630B0000 		.word	.L398+1
 9559 00d0 AB0D0000 		.word	.L399+1
 9560 00d4 B5140000 		.word	.L479+1
 9561 00d8 D90F0000 		.word	.L400+1
 9562 00dc B5140000 		.word	.L479+1
 9563 00e0 B5140000 		.word	.L479+1
 9564 00e4 21100000 		.word	.L401+1
 9565 00e8 B5140000 		.word	.L479+1
 9566 00ec B5140000 		.word	.L479+1
 9567 00f0 59110000 		.word	.L402+1
 9568 00f4 B5140000 		.word	.L479+1
 9569 00f8 B5140000 		.word	.L479+1
 9570 00fc B5140000 		.word	.L479+1
 9571 0100 B5140000 		.word	.L479+1
 9572 0104 B5140000 		.word	.L479+1
 9573 0108 B5140000 		.word	.L479+1
 9574 010c B5140000 		.word	.L479+1
 9575 0110 57120000 		.word	.L403+1
 9576 0114 B5140000 		.word	.L479+1
 9577 0118 B5140000 		.word	.L479+1
 9578 011c B5140000 		.word	.L479+1
 9579 0120 B5140000 		.word	.L479+1
 9580 0124 B5140000 		.word	.L479+1
 9581 0128 B5140000 		.word	.L479+1
 9582 012c B5140000 		.word	.L479+1
 9583 0130 B5140000 		.word	.L479+1
 9584 0134 B5140000 		.word	.L479+1
 9585 0138 B5140000 		.word	.L479+1
 9586 013c B5140000 		.word	.L479+1
 9587 0140 B5140000 		.word	.L479+1
 9588 0144 B5140000 		.word	.L479+1
 9589 0148 85120000 		.word	.L404+1
 9590              		.p2align 1
 9591              	.L386:
1292:..\src/command_processing.c ****         case 2:         // Position PID
1293:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 9592              		.loc 1 1293 0
 9593 014c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9594 014e AB49     		ldr	r1, .L485
 9595 0150 1346     		mov	r3, r2
 9596 0152 DB00     		lsls	r3, r3, #3
 9597 0154 9B1A     		subs	r3, r3, r2
 9598 0156 1B01     		lsls	r3, r3, #4
 9599 0158 0B44     		add	r3, r3, r1
 9600 015a 03F20F13 		addw	r3, r3, #271
 9601 015e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9602 0160 032B     		cmp	r3, #3
 9603 0162 00F08680 		beq	.L405
1294:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 9604              		.loc 1 1294 0
 9605 0166 A64B     		ldr	r3, .L485+4
 9606 0168 1B68     		ldr	r3, [r3]	@ float
 9607 016a FB60     		str	r3, [r7, #12]	@ float
1295:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9608              		.loc 1 1295 0
 9609 016c 0023     		movs	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 222


 9610 016e BB75     		strb	r3, [r7, #22]
 9611 0170 0EE0     		b	.L406
 9612              	.L407:
1296:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9613              		.loc 1 1296 0 discriminator 3
 9614 0172 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9615 0174 C3F10303 		rsb	r3, r3, #3
 9616 0178 07F10802 		add	r2, r7, #8
 9617 017c 1344     		add	r3, r3, r2
 9618 017e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9619 0180 07F10C01 		add	r1, r7, #12
 9620 0184 0A44     		add	r2, r2, r1
 9621 0186 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9622 0188 1A70     		strb	r2, [r3]
1295:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9623              		.loc 1 1295 0 discriminator 3
 9624 018a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9625 018c 0133     		adds	r3, r3, #1
 9626 018e BB75     		strb	r3, [r7, #22]
 9627              	.L406:
1295:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9628              		.loc 1 1295 0 is_stmt 0 discriminator 1
 9629 0190 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9630 0192 032B     		cmp	r3, #3
 9631 0194 EDD9     		bls	.L407
1297:..\src/command_processing.c ****                 }
1298:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p = aux_float2 * 65536;
 9632              		.loc 1 1298 0 is_stmt 1
 9633 0196 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9634 0198 BB68     		ldr	r3, [r7, #8]	@ float
 9635 019a 4FF08F41 		mov	r1, #1199570944
 9636 019e 1846     		mov	r0, r3
 9637 01a0 FFF7FEFF 		bl	__aeabi_fmul
 9638 01a4 0346     		mov	r3, r0
 9639 01a6 1846     		mov	r0, r3
 9640 01a8 FFF7FEFF 		bl	__aeabi_f2iz
 9641 01ac 0146     		mov	r1, r0
 9642 01ae 954A     		ldr	r2, .L485+8
 9643 01b0 2346     		mov	r3, r4
 9644 01b2 DB00     		lsls	r3, r3, #3
 9645 01b4 1B1B     		subs	r3, r3, r4
 9646 01b6 1B01     		lsls	r3, r3, #4
 9647 01b8 1344     		add	r3, r3, r2
 9648 01ba B033     		adds	r3, r3, #176
 9649 01bc 1960     		str	r1, [r3]
1299:..\src/command_processing.c ****                 
1300:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 9650              		.loc 1 1300 0
 9651 01be 924B     		ldr	r3, .L485+12
 9652 01c0 1B68     		ldr	r3, [r3]	@ float
 9653 01c2 FB60     		str	r3, [r7, #12]	@ float
1301:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9654              		.loc 1 1301 0
 9655 01c4 0023     		movs	r3, #0
 9656 01c6 BB75     		strb	r3, [r7, #22]
 9657 01c8 0EE0     		b	.L408
 9658              	.L409:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 223


1302:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9659              		.loc 1 1302 0 discriminator 3
 9660 01ca BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9661 01cc C3F10303 		rsb	r3, r3, #3
 9662 01d0 07F10802 		add	r2, r7, #8
 9663 01d4 1344     		add	r3, r3, r2
 9664 01d6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9665 01d8 07F10C01 		add	r1, r7, #12
 9666 01dc 0A44     		add	r2, r2, r1
 9667 01de 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9668 01e0 1A70     		strb	r2, [r3]
1301:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9669              		.loc 1 1301 0 discriminator 3
 9670 01e2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9671 01e4 0133     		adds	r3, r3, #1
 9672 01e6 BB75     		strb	r3, [r7, #22]
 9673              	.L408:
1301:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9674              		.loc 1 1301 0 is_stmt 0 discriminator 1
 9675 01e8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9676 01ea 032B     		cmp	r3, #3
 9677 01ec EDD9     		bls	.L409
1303:..\src/command_processing.c ****                 }
1304:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i = aux_float2 * 65536;
 9678              		.loc 1 1304 0 is_stmt 1
 9679 01ee 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9680 01f0 BB68     		ldr	r3, [r7, #8]	@ float
 9681 01f2 4FF08F41 		mov	r1, #1199570944
 9682 01f6 1846     		mov	r0, r3
 9683 01f8 FFF7FEFF 		bl	__aeabi_fmul
 9684 01fc 0346     		mov	r3, r0
 9685 01fe 1846     		mov	r0, r3
 9686 0200 FFF7FEFF 		bl	__aeabi_f2iz
 9687 0204 0146     		mov	r1, r0
 9688 0206 7F4A     		ldr	r2, .L485+8
 9689 0208 2346     		mov	r3, r4
 9690 020a DB00     		lsls	r3, r3, #3
 9691 020c 1B1B     		subs	r3, r3, r4
 9692 020e 1B01     		lsls	r3, r3, #4
 9693 0210 1344     		add	r3, r3, r2
 9694 0212 B433     		adds	r3, r3, #180
 9695 0214 1960     		str	r1, [r3]
1305:..\src/command_processing.c ****                 
1306:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 9696              		.loc 1 1306 0
 9697 0216 7D4B     		ldr	r3, .L485+16
 9698 0218 1B68     		ldr	r3, [r3]	@ float
 9699 021a FB60     		str	r3, [r7, #12]	@ float
1307:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9700              		.loc 1 1307 0
 9701 021c 0023     		movs	r3, #0
 9702 021e BB75     		strb	r3, [r7, #22]
 9703 0220 0EE0     		b	.L410
 9704              	.L411:
1308:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9705              		.loc 1 1308 0 discriminator 3
 9706 0222 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 224


 9707 0224 C3F10303 		rsb	r3, r3, #3
 9708 0228 07F10802 		add	r2, r7, #8
 9709 022c 1344     		add	r3, r3, r2
 9710 022e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9711 0230 07F10C01 		add	r1, r7, #12
 9712 0234 0A44     		add	r2, r2, r1
 9713 0236 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9714 0238 1A70     		strb	r2, [r3]
1307:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9715              		.loc 1 1307 0 discriminator 3
 9716 023a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9717 023c 0133     		adds	r3, r3, #1
 9718 023e BB75     		strb	r3, [r7, #22]
 9719              	.L410:
1307:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9720              		.loc 1 1307 0 is_stmt 0 discriminator 1
 9721 0240 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9722 0242 032B     		cmp	r3, #3
 9723 0244 EDD9     		bls	.L411
1309:..\src/command_processing.c ****                 }
1310:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d = aux_float2 * 65536;
 9724              		.loc 1 1310 0 is_stmt 1
 9725 0246 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9726 0248 BB68     		ldr	r3, [r7, #8]	@ float
 9727 024a 4FF08F41 		mov	r1, #1199570944
 9728 024e 1846     		mov	r0, r3
 9729 0250 FFF7FEFF 		bl	__aeabi_fmul
 9730 0254 0346     		mov	r3, r0
 9731 0256 1846     		mov	r0, r3
 9732 0258 FFF7FEFF 		bl	__aeabi_f2iz
 9733 025c 0146     		mov	r1, r0
 9734 025e 694A     		ldr	r2, .L485+8
 9735 0260 2346     		mov	r3, r4
 9736 0262 DB00     		lsls	r3, r3, #3
 9737 0264 1B1B     		subs	r3, r3, r4
 9738 0266 1B01     		lsls	r3, r3, #4
 9739 0268 1344     		add	r3, r3, r2
 9740 026a B833     		adds	r3, r3, #184
 9741 026c 1960     		str	r1, [r3]
1311:..\src/command_processing.c ****             }
1312:..\src/command_processing.c ****             else {
1313:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1314:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1315:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1316:..\src/command_processing.c ****                 }
1317:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1318:..\src/command_processing.c ****                 
1319:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1320:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1321:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1322:..\src/command_processing.c ****                 }
1323:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1324:..\src/command_processing.c ****                 
1325:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1326:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1327:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1328:..\src/command_processing.c ****                 }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 225


1329:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1330:..\src/command_processing.c ****             }
1331:..\src/command_processing.c ****             break;
 9742              		.loc 1 1331 0
 9743 026e 01F02CB9 		b	.L419
 9744              	.L405:
1313:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9745              		.loc 1 1313 0
 9746 0272 634B     		ldr	r3, .L485+4
 9747 0274 1B68     		ldr	r3, [r3]	@ float
 9748 0276 FB60     		str	r3, [r7, #12]	@ float
1314:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9749              		.loc 1 1314 0
 9750 0278 0023     		movs	r3, #0
 9751 027a BB75     		strb	r3, [r7, #22]
 9752 027c 0EE0     		b	.L413
 9753              	.L414:
1315:..\src/command_processing.c ****                 }
 9754              		.loc 1 1315 0 discriminator 3
 9755 027e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9756 0280 C3F10303 		rsb	r3, r3, #3
 9757 0284 07F10802 		add	r2, r7, #8
 9758 0288 1344     		add	r3, r3, r2
 9759 028a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9760 028c 07F10C01 		add	r1, r7, #12
 9761 0290 0A44     		add	r2, r2, r1
 9762 0292 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9763 0294 1A70     		strb	r2, [r3]
1314:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9764              		.loc 1 1314 0 discriminator 3
 9765 0296 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9766 0298 0133     		adds	r3, r3, #1
 9767 029a BB75     		strb	r3, [r7, #22]
 9768              	.L413:
1314:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9769              		.loc 1 1314 0 is_stmt 0 discriminator 1
 9770 029c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9771 029e 032B     		cmp	r3, #3
 9772 02a0 EDD9     		bls	.L414
1317:..\src/command_processing.c ****                 
 9773              		.loc 1 1317 0 is_stmt 1
 9774 02a2 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9775 02a4 BB68     		ldr	r3, [r7, #8]	@ float
 9776 02a6 4FF08F41 		mov	r1, #1199570944
 9777 02aa 1846     		mov	r0, r3
 9778 02ac FFF7FEFF 		bl	__aeabi_fmul
 9779 02b0 0346     		mov	r3, r0
 9780 02b2 1846     		mov	r0, r3
 9781 02b4 FFF7FEFF 		bl	__aeabi_f2iz
 9782 02b8 0146     		mov	r1, r0
 9783 02ba 524A     		ldr	r2, .L485+8
 9784 02bc 2346     		mov	r3, r4
 9785 02be DB00     		lsls	r3, r3, #3
 9786 02c0 1B1B     		subs	r3, r3, r4
 9787 02c2 1B01     		lsls	r3, r3, #4
 9788 02c4 1344     		add	r3, r3, r2
 9789 02c6 C833     		adds	r3, r3, #200
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 226


 9790 02c8 1960     		str	r1, [r3]
1319:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9791              		.loc 1 1319 0
 9792 02ca 4F4B     		ldr	r3, .L485+12
 9793 02cc 1B68     		ldr	r3, [r3]	@ float
 9794 02ce FB60     		str	r3, [r7, #12]	@ float
1320:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9795              		.loc 1 1320 0
 9796 02d0 0023     		movs	r3, #0
 9797 02d2 BB75     		strb	r3, [r7, #22]
 9798 02d4 0EE0     		b	.L415
 9799              	.L416:
1321:..\src/command_processing.c ****                 }
 9800              		.loc 1 1321 0 discriminator 3
 9801 02d6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9802 02d8 C3F10303 		rsb	r3, r3, #3
 9803 02dc 07F10802 		add	r2, r7, #8
 9804 02e0 1344     		add	r3, r3, r2
 9805 02e2 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9806 02e4 07F10C01 		add	r1, r7, #12
 9807 02e8 0A44     		add	r2, r2, r1
 9808 02ea 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9809 02ec 1A70     		strb	r2, [r3]
1320:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9810              		.loc 1 1320 0 discriminator 3
 9811 02ee BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9812 02f0 0133     		adds	r3, r3, #1
 9813 02f2 BB75     		strb	r3, [r7, #22]
 9814              	.L415:
1320:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9815              		.loc 1 1320 0 is_stmt 0 discriminator 1
 9816 02f4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9817 02f6 032B     		cmp	r3, #3
 9818 02f8 EDD9     		bls	.L416
1323:..\src/command_processing.c ****                 
 9819              		.loc 1 1323 0 is_stmt 1
 9820 02fa 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9821 02fc BB68     		ldr	r3, [r7, #8]	@ float
 9822 02fe 4FF08F41 		mov	r1, #1199570944
 9823 0302 1846     		mov	r0, r3
 9824 0304 FFF7FEFF 		bl	__aeabi_fmul
 9825 0308 0346     		mov	r3, r0
 9826 030a 1846     		mov	r0, r3
 9827 030c FFF7FEFF 		bl	__aeabi_f2iz
 9828 0310 0146     		mov	r1, r0
 9829 0312 3C4A     		ldr	r2, .L485+8
 9830 0314 2346     		mov	r3, r4
 9831 0316 DB00     		lsls	r3, r3, #3
 9832 0318 1B1B     		subs	r3, r3, r4
 9833 031a 1B01     		lsls	r3, r3, #4
 9834 031c 1344     		add	r3, r3, r2
 9835 031e CC33     		adds	r3, r3, #204
 9836 0320 1960     		str	r1, [r3]
1325:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9837              		.loc 1 1325 0
 9838 0322 3A4B     		ldr	r3, .L485+16
 9839 0324 1B68     		ldr	r3, [r3]	@ float
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 227


 9840 0326 FB60     		str	r3, [r7, #12]	@ float
1326:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9841              		.loc 1 1326 0
 9842 0328 0023     		movs	r3, #0
 9843 032a BB75     		strb	r3, [r7, #22]
 9844 032c 0EE0     		b	.L417
 9845              	.L418:
1327:..\src/command_processing.c ****                 }
 9846              		.loc 1 1327 0 discriminator 3
 9847 032e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9848 0330 C3F10303 		rsb	r3, r3, #3
 9849 0334 07F10802 		add	r2, r7, #8
 9850 0338 1344     		add	r3, r3, r2
 9851 033a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9852 033c 07F10C01 		add	r1, r7, #12
 9853 0340 0A44     		add	r2, r2, r1
 9854 0342 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9855 0344 1A70     		strb	r2, [r3]
1326:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9856              		.loc 1 1326 0 discriminator 3
 9857 0346 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9858 0348 0133     		adds	r3, r3, #1
 9859 034a BB75     		strb	r3, [r7, #22]
 9860              	.L417:
1326:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9861              		.loc 1 1326 0 is_stmt 0 discriminator 1
 9862 034c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9863 034e 032B     		cmp	r3, #3
 9864 0350 EDD9     		bls	.L418
1329:..\src/command_processing.c ****             }
 9865              		.loc 1 1329 0 is_stmt 1
 9866 0352 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9867 0354 BB68     		ldr	r3, [r7, #8]	@ float
 9868 0356 4FF08F41 		mov	r1, #1199570944
 9869 035a 1846     		mov	r0, r3
 9870 035c FFF7FEFF 		bl	__aeabi_fmul
 9871 0360 0346     		mov	r3, r0
 9872 0362 1846     		mov	r0, r3
 9873 0364 FFF7FEFF 		bl	__aeabi_f2iz
 9874 0368 0146     		mov	r1, r0
 9875 036a 264A     		ldr	r2, .L485+8
 9876 036c 2346     		mov	r3, r4
 9877 036e DB00     		lsls	r3, r3, #3
 9878 0370 1B1B     		subs	r3, r3, r4
 9879 0372 1B01     		lsls	r3, r3, #4
 9880 0374 1344     		add	r3, r3, r2
 9881 0376 D033     		adds	r3, r3, #208
 9882 0378 1960     		str	r1, [r3]
 9883              		.loc 1 1331 0
 9884 037a 01F0A6B8 		b	.L419
 9885              	.L388:
1332:..\src/command_processing.c ****             
1333:..\src/command_processing.c ****         case 3:         //Current PID
1334:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 9886              		.loc 1 1334 0
 9887 037e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9888 0380 1E49     		ldr	r1, .L485
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 228


 9889 0382 1346     		mov	r3, r2
 9890 0384 DB00     		lsls	r3, r3, #3
 9891 0386 9B1A     		subs	r3, r3, r2
 9892 0388 1B01     		lsls	r3, r3, #4
 9893 038a 0B44     		add	r3, r3, r1
 9894 038c 03F20F13 		addw	r3, r3, #271
 9895 0390 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9896 0392 032B     		cmp	r3, #3
 9897 0394 00F09080 		beq	.L420
1335:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 9898              		.loc 1 1335 0
 9899 0398 194B     		ldr	r3, .L485+4
 9900 039a 1B68     		ldr	r3, [r3]	@ float
 9901 039c FB60     		str	r3, [r7, #12]	@ float
1336:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9902              		.loc 1 1336 0
 9903 039e 0023     		movs	r3, #0
 9904 03a0 BB75     		strb	r3, [r7, #22]
 9905 03a2 0EE0     		b	.L421
 9906              	.L422:
1337:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9907              		.loc 1 1337 0 discriminator 3
 9908 03a4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9909 03a6 C3F10303 		rsb	r3, r3, #3
 9910 03aa 07F10802 		add	r2, r7, #8
 9911 03ae 1344     		add	r3, r3, r2
 9912 03b0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9913 03b2 07F10C01 		add	r1, r7, #12
 9914 03b6 0A44     		add	r2, r2, r1
 9915 03b8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9916 03ba 1A70     		strb	r2, [r3]
1336:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9917              		.loc 1 1336 0 discriminator 3
 9918 03bc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9919 03be 0133     		adds	r3, r3, #1
 9920 03c0 BB75     		strb	r3, [r7, #22]
 9921              	.L421:
1336:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9922              		.loc 1 1336 0 is_stmt 0 discriminator 1
 9923 03c2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9924 03c4 032B     		cmp	r3, #3
 9925 03c6 EDD9     		bls	.L422
1338:..\src/command_processing.c ****                 }
1339:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c = aux_float2 * 65536;
 9926              		.loc 1 1339 0 is_stmt 1
 9927 03c8 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9928 03ca BB68     		ldr	r3, [r7, #8]	@ float
 9929 03cc 4FF08F41 		mov	r1, #1199570944
 9930 03d0 1846     		mov	r0, r3
 9931 03d2 FFF7FEFF 		bl	__aeabi_fmul
 9932 03d6 0346     		mov	r3, r0
 9933 03d8 1846     		mov	r0, r3
 9934 03da FFF7FEFF 		bl	__aeabi_f2iz
 9935 03de 0146     		mov	r1, r0
 9936 03e0 084A     		ldr	r2, .L485+8
 9937 03e2 2346     		mov	r3, r4
 9938 03e4 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 229


 9939 03e6 1B1B     		subs	r3, r3, r4
 9940 03e8 1B01     		lsls	r3, r3, #4
 9941 03ea 1344     		add	r3, r3, r2
 9942 03ec BC33     		adds	r3, r3, #188
 9943 03ee 1960     		str	r1, [r3]
1340:..\src/command_processing.c ****                 
1341:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 9944              		.loc 1 1341 0
 9945 03f0 054B     		ldr	r3, .L485+12
 9946 03f2 1B68     		ldr	r3, [r3]	@ float
 9947 03f4 FB60     		str	r3, [r7, #12]	@ float
1342:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9948              		.loc 1 1342 0
 9949 03f6 0023     		movs	r3, #0
 9950 03f8 BB75     		strb	r3, [r7, #22]
 9951 03fa 18E0     		b	.L423
 9952              	.L486:
 9953              		.align	2
 9954              	.L485:
 9955 03fc 00000000 		.word	c_mem
 9956 0400 03000000 		.word	g_rx+3
 9957 0404 00000000 		.word	g_mem
 9958 0408 07000000 		.word	g_rx+7
 9959 040c 0B000000 		.word	g_rx+11
 9960              	.L424:
1343:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9961              		.loc 1 1343 0 discriminator 3
 9962 0410 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9963 0412 C3F10303 		rsb	r3, r3, #3
 9964 0416 07F10802 		add	r2, r7, #8
 9965 041a 1344     		add	r3, r3, r2
 9966 041c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9967 041e 07F10C01 		add	r1, r7, #12
 9968 0422 0A44     		add	r2, r2, r1
 9969 0424 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9970 0426 1A70     		strb	r2, [r3]
1342:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9971              		.loc 1 1342 0 discriminator 3
 9972 0428 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9973 042a 0133     		adds	r3, r3, #1
 9974 042c BB75     		strb	r3, [r7, #22]
 9975              	.L423:
1342:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9976              		.loc 1 1342 0 is_stmt 0 discriminator 1
 9977 042e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9978 0430 032B     		cmp	r3, #3
 9979 0432 EDD9     		bls	.L424
1344:..\src/command_processing.c ****                 }
1345:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c = aux_float2 * 65536;
 9980              		.loc 1 1345 0 is_stmt 1
 9981 0434 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9982 0436 BB68     		ldr	r3, [r7, #8]	@ float
 9983 0438 4FF08F41 		mov	r1, #1199570944
 9984 043c 1846     		mov	r0, r3
 9985 043e FFF7FEFF 		bl	__aeabi_fmul
 9986 0442 0346     		mov	r3, r0
 9987 0444 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 230


 9988 0446 FFF7FEFF 		bl	__aeabi_f2iz
 9989 044a 0146     		mov	r1, r0
 9990 044c B64A     		ldr	r2, .L487
 9991 044e 2346     		mov	r3, r4
 9992 0450 DB00     		lsls	r3, r3, #3
 9993 0452 1B1B     		subs	r3, r3, r4
 9994 0454 1B01     		lsls	r3, r3, #4
 9995 0456 1344     		add	r3, r3, r2
 9996 0458 C033     		adds	r3, r3, #192
 9997 045a 1960     		str	r1, [r3]
1346:..\src/command_processing.c ****                 
1347:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 9998              		.loc 1 1347 0
 9999 045c B34B     		ldr	r3, .L487+4
 10000 045e 1B68     		ldr	r3, [r3]	@ float
 10001 0460 FB60     		str	r3, [r7, #12]	@ float
1348:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10002              		.loc 1 1348 0
 10003 0462 0023     		movs	r3, #0
 10004 0464 BB75     		strb	r3, [r7, #22]
 10005 0466 0EE0     		b	.L425
 10006              	.L426:
1349:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10007              		.loc 1 1349 0 discriminator 3
 10008 0468 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10009 046a C3F10303 		rsb	r3, r3, #3
 10010 046e 07F10802 		add	r2, r7, #8
 10011 0472 1344     		add	r3, r3, r2
 10012 0474 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10013 0476 07F10C01 		add	r1, r7, #12
 10014 047a 0A44     		add	r2, r2, r1
 10015 047c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10016 047e 1A70     		strb	r2, [r3]
1348:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10017              		.loc 1 1348 0 discriminator 3
 10018 0480 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10019 0482 0133     		adds	r3, r3, #1
 10020 0484 BB75     		strb	r3, [r7, #22]
 10021              	.L425:
1348:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10022              		.loc 1 1348 0 is_stmt 0 discriminator 1
 10023 0486 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10024 0488 032B     		cmp	r3, #3
 10025 048a EDD9     		bls	.L426
1350:..\src/command_processing.c ****                 }
1351:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c = aux_float2 * 65536;
 10026              		.loc 1 1351 0 is_stmt 1
 10027 048c 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10028 048e BB68     		ldr	r3, [r7, #8]	@ float
 10029 0490 4FF08F41 		mov	r1, #1199570944
 10030 0494 1846     		mov	r0, r3
 10031 0496 FFF7FEFF 		bl	__aeabi_fmul
 10032 049a 0346     		mov	r3, r0
 10033 049c 1846     		mov	r0, r3
 10034 049e FFF7FEFF 		bl	__aeabi_f2iz
 10035 04a2 0146     		mov	r1, r0
 10036 04a4 A04A     		ldr	r2, .L487
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 231


 10037 04a6 2346     		mov	r3, r4
 10038 04a8 DB00     		lsls	r3, r3, #3
 10039 04aa 1B1B     		subs	r3, r3, r4
 10040 04ac 1B01     		lsls	r3, r3, #4
 10041 04ae 1344     		add	r3, r3, r2
 10042 04b0 C433     		adds	r3, r3, #196
 10043 04b2 1960     		str	r1, [r3]
1352:..\src/command_processing.c ****             }
1353:..\src/command_processing.c ****             else {
1354:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1355:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1356:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1357:..\src/command_processing.c ****                 }
1358:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1359:..\src/command_processing.c ****                 
1360:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1361:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1362:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1363:..\src/command_processing.c ****                 }
1364:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1365:..\src/command_processing.c ****                 
1366:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1367:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1368:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1369:..\src/command_processing.c ****                 }
1370:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1371:..\src/command_processing.c ****             }            
1372:..\src/command_processing.c ****             break;  
 10044              		.loc 1 1372 0
 10045 04b4 01F009B8 		b	.L419
 10046              	.L420:
1354:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10047              		.loc 1 1354 0
 10048 04b8 9D4B     		ldr	r3, .L487+8
 10049 04ba 1B68     		ldr	r3, [r3]	@ float
 10050 04bc FB60     		str	r3, [r7, #12]	@ float
1355:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10051              		.loc 1 1355 0
 10052 04be 0023     		movs	r3, #0
 10053 04c0 BB75     		strb	r3, [r7, #22]
 10054 04c2 0EE0     		b	.L428
 10055              	.L429:
1356:..\src/command_processing.c ****                 }
 10056              		.loc 1 1356 0 discriminator 3
 10057 04c4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10058 04c6 C3F10303 		rsb	r3, r3, #3
 10059 04ca 07F10802 		add	r2, r7, #8
 10060 04ce 1344     		add	r3, r3, r2
 10061 04d0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10062 04d2 07F10C01 		add	r1, r7, #12
 10063 04d6 0A44     		add	r2, r2, r1
 10064 04d8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10065 04da 1A70     		strb	r2, [r3]
1355:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10066              		.loc 1 1355 0 discriminator 3
 10067 04dc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10068 04de 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 232


 10069 04e0 BB75     		strb	r3, [r7, #22]
 10070              	.L428:
1355:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10071              		.loc 1 1355 0 is_stmt 0 discriminator 1
 10072 04e2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10073 04e4 032B     		cmp	r3, #3
 10074 04e6 EDD9     		bls	.L429
1358:..\src/command_processing.c ****                 
 10075              		.loc 1 1358 0 is_stmt 1
 10076 04e8 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10077 04ea BB68     		ldr	r3, [r7, #8]	@ float
 10078 04ec 4FF08F41 		mov	r1, #1199570944
 10079 04f0 1846     		mov	r0, r3
 10080 04f2 FFF7FEFF 		bl	__aeabi_fmul
 10081 04f6 0346     		mov	r3, r0
 10082 04f8 1846     		mov	r0, r3
 10083 04fa FFF7FEFF 		bl	__aeabi_f2iz
 10084 04fe 0146     		mov	r1, r0
 10085 0500 894A     		ldr	r2, .L487
 10086 0502 2346     		mov	r3, r4
 10087 0504 DB00     		lsls	r3, r3, #3
 10088 0506 1B1B     		subs	r3, r3, r4
 10089 0508 1B01     		lsls	r3, r3, #4
 10090 050a 1344     		add	r3, r3, r2
 10091 050c D433     		adds	r3, r3, #212
 10092 050e 1960     		str	r1, [r3]
1360:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10093              		.loc 1 1360 0
 10094 0510 884B     		ldr	r3, .L487+12
 10095 0512 1B68     		ldr	r3, [r3]	@ float
 10096 0514 FB60     		str	r3, [r7, #12]	@ float
1361:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10097              		.loc 1 1361 0
 10098 0516 0023     		movs	r3, #0
 10099 0518 BB75     		strb	r3, [r7, #22]
 10100 051a 0EE0     		b	.L430
 10101              	.L431:
1362:..\src/command_processing.c ****                 }
 10102              		.loc 1 1362 0 discriminator 3
 10103 051c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10104 051e C3F10303 		rsb	r3, r3, #3
 10105 0522 07F10802 		add	r2, r7, #8
 10106 0526 1344     		add	r3, r3, r2
 10107 0528 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10108 052a 07F10C01 		add	r1, r7, #12
 10109 052e 0A44     		add	r2, r2, r1
 10110 0530 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10111 0532 1A70     		strb	r2, [r3]
1361:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10112              		.loc 1 1361 0 discriminator 3
 10113 0534 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10114 0536 0133     		adds	r3, r3, #1
 10115 0538 BB75     		strb	r3, [r7, #22]
 10116              	.L430:
1361:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10117              		.loc 1 1361 0 is_stmt 0 discriminator 1
 10118 053a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 233


 10119 053c 032B     		cmp	r3, #3
 10120 053e EDD9     		bls	.L431
1364:..\src/command_processing.c ****                 
 10121              		.loc 1 1364 0 is_stmt 1
 10122 0540 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10123 0542 BB68     		ldr	r3, [r7, #8]	@ float
 10124 0544 4FF08F41 		mov	r1, #1199570944
 10125 0548 1846     		mov	r0, r3
 10126 054a FFF7FEFF 		bl	__aeabi_fmul
 10127 054e 0346     		mov	r3, r0
 10128 0550 1846     		mov	r0, r3
 10129 0552 FFF7FEFF 		bl	__aeabi_f2iz
 10130 0556 0146     		mov	r1, r0
 10131 0558 734A     		ldr	r2, .L487
 10132 055a 2346     		mov	r3, r4
 10133 055c DB00     		lsls	r3, r3, #3
 10134 055e 1B1B     		subs	r3, r3, r4
 10135 0560 1B01     		lsls	r3, r3, #4
 10136 0562 1344     		add	r3, r3, r2
 10137 0564 D833     		adds	r3, r3, #216
 10138 0566 1960     		str	r1, [r3]
1366:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10139              		.loc 1 1366 0
 10140 0568 704B     		ldr	r3, .L487+4
 10141 056a 1B68     		ldr	r3, [r3]	@ float
 10142 056c FB60     		str	r3, [r7, #12]	@ float
1367:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10143              		.loc 1 1367 0
 10144 056e 0023     		movs	r3, #0
 10145 0570 BB75     		strb	r3, [r7, #22]
 10146 0572 0EE0     		b	.L432
 10147              	.L433:
1368:..\src/command_processing.c ****                 }
 10148              		.loc 1 1368 0 discriminator 3
 10149 0574 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10150 0576 C3F10303 		rsb	r3, r3, #3
 10151 057a 07F10802 		add	r2, r7, #8
 10152 057e 1344     		add	r3, r3, r2
 10153 0580 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10154 0582 07F10C01 		add	r1, r7, #12
 10155 0586 0A44     		add	r2, r2, r1
 10156 0588 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10157 058a 1A70     		strb	r2, [r3]
1367:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10158              		.loc 1 1367 0 discriminator 3
 10159 058c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10160 058e 0133     		adds	r3, r3, #1
 10161 0590 BB75     		strb	r3, [r7, #22]
 10162              	.L432:
1367:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10163              		.loc 1 1367 0 is_stmt 0 discriminator 1
 10164 0592 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10165 0594 032B     		cmp	r3, #3
 10166 0596 EDD9     		bls	.L433
1370:..\src/command_processing.c ****             }            
 10167              		.loc 1 1370 0 is_stmt 1
 10168 0598 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 234


 10169 059a BB68     		ldr	r3, [r7, #8]	@ float
 10170 059c 4FF08F41 		mov	r1, #1199570944
 10171 05a0 1846     		mov	r0, r3
 10172 05a2 FFF7FEFF 		bl	__aeabi_fmul
 10173 05a6 0346     		mov	r3, r0
 10174 05a8 1846     		mov	r0, r3
 10175 05aa FFF7FEFF 		bl	__aeabi_f2iz
 10176 05ae 0146     		mov	r1, r0
 10177 05b0 5D4A     		ldr	r2, .L487
 10178 05b2 2346     		mov	r3, r4
 10179 05b4 DB00     		lsls	r3, r3, #3
 10180 05b6 1B1B     		subs	r3, r3, r4
 10181 05b8 1B01     		lsls	r3, r3, #4
 10182 05ba 1344     		add	r3, r3, r2
 10183 05bc DC33     		adds	r3, r3, #220
 10184 05be 1960     		str	r1, [r3]
 10185              		.loc 1 1372 0
 10186 05c0 00F083BF 		b	.L419
 10187              	.L389:
1373:..\src/command_processing.c ****             
1374:..\src/command_processing.c ****         case 5:         //Input mode
1375:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].input_mode = g_rx.buffer[3];
 10188              		.loc 1 1375 0
 10189 05c4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10190 05c6 5C4B     		ldr	r3, .L487+16
 10191 05c8 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 10192 05ca 5749     		ldr	r1, .L487
 10193 05cc 1346     		mov	r3, r2
 10194 05ce DB00     		lsls	r3, r3, #3
 10195 05d0 9B1A     		subs	r3, r3, r2
 10196 05d2 1B01     		lsls	r3, r3, #4
 10197 05d4 0B44     		add	r3, r3, r1
 10198 05d6 03F58773 		add	r3, r3, #270
 10199 05da 0246     		mov	r2, r0
 10200 05dc 1A70     		strb	r2, [r3]
1376:..\src/command_processing.c ****             
1377:..\src/command_processing.c ****             // Hold the actual position
1378:..\src/command_processing.c ****             g_refNew[MOTOR_IDX].pos = g_meas[g_mem.motor[MOTOR_IDX].encoder_line].pos[0];
 10201              		.loc 1 1378 0
 10202 05de 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10203 05e0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10204 05e2 5148     		ldr	r0, .L487
 10205 05e4 1346     		mov	r3, r2
 10206 05e6 DB00     		lsls	r3, r3, #3
 10207 05e8 9B1A     		subs	r3, r3, r2
 10208 05ea 1B01     		lsls	r3, r3, #4
 10209 05ec 0344     		add	r3, r3, r0
 10210 05ee 03F58873 		add	r3, r3, #272
 10211 05f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10212 05f4 1846     		mov	r0, r3
 10213 05f6 514A     		ldr	r2, .L487+20
 10214 05f8 3423     		movs	r3, #52
 10215 05fa 03FB00F3 		mul	r3, r3, r0
 10216 05fe 1344     		add	r3, r3, r2
 10217 0600 1A68     		ldr	r2, [r3]
 10218 0602 4F48     		ldr	r0, .L487+24
 10219 0604 0B01     		lsls	r3, r1, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 235


 10220 0606 0344     		add	r3, r3, r0
 10221 0608 1A60     		str	r2, [r3]
1379:..\src/command_processing.c ****             break;   
 10222              		.loc 1 1379 0
 10223 060a 00F05EBF 		b	.L419
 10224              	.L390:
1380:..\src/command_processing.c **** 
1381:..\src/command_processing.c ****         case 8:         //Measurement Offset
1382:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
 10225              		.loc 1 1382 0
 10226 060e 0023     		movs	r3, #0
 10227 0610 FB75     		strb	r3, [r7, #23]
 10228 0612 7EE0     		b	.L434
 10229              	.L435:
1383:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 10230              		.loc 1 1383 0 discriminator 3
 10231 0614 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10232 0616 4449     		ldr	r1, .L487
 10233 0618 1346     		mov	r3, r2
 10234 061a DB00     		lsls	r3, r3, #3
 10235 061c 9B1A     		subs	r3, r3, r2
 10236 061e 1B01     		lsls	r3, r3, #4
 10237 0620 0B44     		add	r3, r3, r1
 10238 0622 03F58873 		add	r3, r3, #272
 10239 0626 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10240 0628 1C46     		mov	r4, r3
 10241 062a FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10242 062c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10243 062e 5B00     		lsls	r3, r3, #1
 10244 0630 0333     		adds	r3, r3, #3
 10245 0632 4149     		ldr	r1, .L487+16
 10246 0634 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 10247 0636 1B02     		lsls	r3, r3, #8
 10248 0638 19B2     		sxth	r1, r3
 10249 063a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10250 063c 0233     		adds	r3, r3, #2
 10251 063e 5B00     		lsls	r3, r3, #1
 10252 0640 3D48     		ldr	r0, .L487+16
 10253 0642 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 10254 0644 1BB2     		sxth	r3, r3
 10255 0646 0B43     		orrs	r3, r3, r1
 10256 0648 1BB2     		sxth	r3, r3
 10257 064a 1846     		mov	r0, r3
 10258 064c 3649     		ldr	r1, .L487
 10259 064e 2346     		mov	r3, r4
 10260 0650 5B00     		lsls	r3, r3, #1
 10261 0652 2344     		add	r3, r3, r4
 10262 0654 9B00     		lsls	r3, r3, #2
 10263 0656 1344     		add	r3, r3, r2
 10264 0658 6633     		adds	r3, r3, #102
 10265 065a 41F82300 		str	r0, [r1, r3, lsl #2]
1384:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.motor[MOT
 10266              		.loc 1 1384 0 discriminator 3
 10267 065e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10268 0660 3149     		ldr	r1, .L487
 10269 0662 1346     		mov	r3, r2
 10270 0664 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 236


 10271 0666 9B1A     		subs	r3, r3, r2
 10272 0668 1B01     		lsls	r3, r3, #4
 10273 066a 0B44     		add	r3, r3, r1
 10274 066c 03F58873 		add	r3, r3, #272
 10275 0670 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10276 0672 1D46     		mov	r5, r3
 10277 0674 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 10278 0676 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10279 0678 2B48     		ldr	r0, .L487
 10280 067a 1346     		mov	r3, r2
 10281 067c DB00     		lsls	r3, r3, #3
 10282 067e 9B1A     		subs	r3, r3, r2
 10283 0680 1B01     		lsls	r3, r3, #4
 10284 0682 0344     		add	r3, r3, r0
 10285 0684 03F58873 		add	r3, r3, #272
 10286 0688 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10287 068a 1C46     		mov	r4, r3
 10288 068c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10289 068e 2648     		ldr	r0, .L487
 10290 0690 2346     		mov	r3, r4
 10291 0692 5B00     		lsls	r3, r3, #1
 10292 0694 2344     		add	r3, r3, r4
 10293 0696 9B00     		lsls	r3, r3, #2
 10294 0698 1344     		add	r3, r3, r2
 10295 069a 6633     		adds	r3, r3, #102
 10296 069c 50F82300 		ldr	r0, [r0, r3, lsl #2]
 10297 06a0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10298 06a2 214C     		ldr	r4, .L487
 10299 06a4 1346     		mov	r3, r2
 10300 06a6 DB00     		lsls	r3, r3, #3
 10301 06a8 9B1A     		subs	r3, r3, r2
 10302 06aa 1B01     		lsls	r3, r3, #4
 10303 06ac 2344     		add	r3, r3, r4
 10304 06ae 03F58873 		add	r3, r3, #272
 10305 06b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10306 06b4 1E46     		mov	r6, r3
 10307 06b6 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10308 06b8 1B4C     		ldr	r4, .L487
 10309 06ba 3346     		mov	r3, r6
 10310 06bc 5B00     		lsls	r3, r3, #1
 10311 06be 3344     		add	r3, r3, r6
 10312 06c0 1B01     		lsls	r3, r3, #4
 10313 06c2 2344     		add	r3, r3, r4
 10314 06c4 1344     		add	r3, r3, r2
 10315 06c6 03F29513 		addw	r3, r3, #405
 10316 06ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10317 06cc 00FA03F2 		lsl	r2, r0, r3
 10318 06d0 1548     		ldr	r0, .L487
 10319 06d2 2B46     		mov	r3, r5
 10320 06d4 5B00     		lsls	r3, r3, #1
 10321 06d6 2B44     		add	r3, r3, r5
 10322 06d8 9B00     		lsls	r3, r3, #2
 10323 06da 0B44     		add	r3, r3, r1
 10324 06dc 6633     		adds	r3, r3, #102
 10325 06de 40F82320 		str	r2, [r0, r3, lsl #2]
1385:..\src/command_processing.c **** 
1386:..\src/command_processing.c ****                 g_meas[g_mem.motor[MOTOR_IDX].encoder_line].rot[i] = 0;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 237


 10326              		.loc 1 1386 0 discriminator 3
 10327 06e2 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10328 06e4 1049     		ldr	r1, .L487
 10329 06e6 1346     		mov	r3, r2
 10330 06e8 DB00     		lsls	r3, r3, #3
 10331 06ea 9B1A     		subs	r3, r3, r2
 10332 06ec 1B01     		lsls	r3, r3, #4
 10333 06ee 0B44     		add	r3, r3, r1
 10334 06f0 03F58873 		add	r3, r3, #272
 10335 06f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10336 06f6 1846     		mov	r0, r3
 10337 06f8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10338 06fa 1049     		ldr	r1, .L487+20
 10339 06fc 3422     		movs	r2, #52
 10340 06fe 02FB00F2 		mul	r2, r2, r0
 10341 0702 0A44     		add	r2, r2, r1
 10342 0704 1344     		add	r3, r3, r2
 10343 0706 1833     		adds	r3, r3, #24
 10344 0708 0022     		movs	r2, #0
 10345 070a 1A70     		strb	r2, [r3]
1382:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 10346              		.loc 1 1382 0 discriminator 3
 10347 070c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10348 070e 0133     		adds	r3, r3, #1
 10349 0710 FB75     		strb	r3, [r7, #23]
 10350              	.L434:
1382:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 10351              		.loc 1 1382 0 is_stmt 0 discriminator 1
 10352 0712 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10353 0714 022B     		cmp	r3, #2
 10354 0716 7FF67DAF 		bls	.L435
1387:..\src/command_processing.c ****             }
1388:..\src/command_processing.c ****             reset_last_value_flag[MOTOR_IDX] = 1;
 10355              		.loc 1 1388 0 is_stmt 1
 10356 071a 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 10357 071c 094A     		ldr	r2, .L487+28
 10358 071e 0121     		movs	r1, #1
 10359 0720 D154     		strb	r1, [r2, r3]
1389:..\src/command_processing.c ****             break;
 10360              		.loc 1 1389 0
 10361 0722 00F0D2BE 		b	.L419
 10362              	.L488:
 10363 0726 00BF     		.align	2
 10364              	.L487:
 10365 0728 00000000 		.word	g_mem
 10366 072c 0B000000 		.word	g_rx+11
 10367 0730 03000000 		.word	g_rx+3
 10368 0734 07000000 		.word	g_rx+7
 10369 0738 00000000 		.word	g_rx
 10370 073c 00000000 		.word	g_meas
 10371 0740 00000000 		.word	g_refNew
 10372 0744 00000000 		.word	reset_last_value_flag
 10373              	.L391:
1390:..\src/command_processing.c ****     
1391:..\src/command_processing.c ****         case 11:        //Position limits
1392:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | 
 10374              		.loc 1 1392 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 238


 10375 0748 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10376 074a C14B     		ldr	r3, .L489
 10377 074c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 10378 074e 1906     		lsls	r1, r3, #24
 10379 0750 BF4B     		ldr	r3, .L489
 10380 0752 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 10381 0754 1B04     		lsls	r3, r3, #16
 10382 0756 1943     		orrs	r1, r1, r3
 10383 0758 BD4B     		ldr	r3, .L489
 10384 075a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 10385 075c 1B02     		lsls	r3, r3, #8
 10386 075e 0B43     		orrs	r3, r3, r1
 10387 0760 BB49     		ldr	r1, .L489
 10388 0762 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 10389 0764 1943     		orrs	r1, r1, r3
 10390 0766 BB48     		ldr	r0, .L489+4
 10391 0768 1346     		mov	r3, r2
 10392 076a DB00     		lsls	r3, r3, #3
 10393 076c 9B1A     		subs	r3, r3, r2
 10394 076e 1B01     		lsls	r3, r3, #4
 10395 0770 0344     		add	r3, r3, r0
 10396 0772 E433     		adds	r3, r3, #228
 10397 0774 1960     		str	r1, [r3]
1393:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]<<16 | 
 10398              		.loc 1 1393 0
 10399 0776 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10400 0778 B54B     		ldr	r3, .L489
 10401 077a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 10402 077c 1906     		lsls	r1, r3, #24
 10403 077e B44B     		ldr	r3, .L489
 10404 0780 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 10405 0782 1B04     		lsls	r3, r3, #16
 10406 0784 1943     		orrs	r1, r1, r3
 10407 0786 B24B     		ldr	r3, .L489
 10408 0788 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 10409 078a 1B02     		lsls	r3, r3, #8
 10410 078c 0B43     		orrs	r3, r3, r1
 10411 078e B049     		ldr	r1, .L489
 10412 0790 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 10413 0792 1943     		orrs	r1, r1, r3
 10414 0794 AF48     		ldr	r0, .L489+4
 10415 0796 1346     		mov	r3, r2
 10416 0798 DB00     		lsls	r3, r3, #3
 10417 079a 9B1A     		subs	r3, r3, r2
 10418 079c 1B01     		lsls	r3, r3, #4
 10419 079e 0344     		add	r3, r3, r0
 10420 07a0 E833     		adds	r3, r3, #232
 10421 07a2 1960     		str	r1, [r3]
1394:..\src/command_processing.c **** 
1395:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = g_mem.motor[MOTOR_IDX].pos_lim_inf << g_mem.enc[g_
 10422              		.loc 1 1395 0
 10423 07a4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10424 07a6 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10425 07a8 AA48     		ldr	r0, .L489+4
 10426 07aa 0B46     		mov	r3, r1
 10427 07ac DB00     		lsls	r3, r3, #3
 10428 07ae 5B1A     		subs	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 239


 10429 07b0 1B01     		lsls	r3, r3, #4
 10430 07b2 0344     		add	r3, r3, r0
 10431 07b4 E433     		adds	r3, r3, #228
 10432 07b6 1868     		ldr	r0, [r3]
 10433 07b8 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10434 07ba A64C     		ldr	r4, .L489+4
 10435 07bc 0B46     		mov	r3, r1
 10436 07be DB00     		lsls	r3, r3, #3
 10437 07c0 5B1A     		subs	r3, r3, r1
 10438 07c2 1B01     		lsls	r3, r3, #4
 10439 07c4 2344     		add	r3, r3, r4
 10440 07c6 03F58873 		add	r3, r3, #272
 10441 07ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10442 07cc 1C46     		mov	r4, r3
 10443 07ce A149     		ldr	r1, .L489+4
 10444 07d0 2346     		mov	r3, r4
 10445 07d2 5B00     		lsls	r3, r3, #1
 10446 07d4 2344     		add	r3, r3, r4
 10447 07d6 1B01     		lsls	r3, r3, #4
 10448 07d8 0B44     		add	r3, r3, r1
 10449 07da 03F29513 		addw	r3, r3, #405
 10450 07de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10451 07e0 00FA03F1 		lsl	r1, r0, r3
 10452 07e4 9B48     		ldr	r0, .L489+4
 10453 07e6 1346     		mov	r3, r2
 10454 07e8 DB00     		lsls	r3, r3, #3
 10455 07ea 9B1A     		subs	r3, r3, r2
 10456 07ec 1B01     		lsls	r3, r3, #4
 10457 07ee 0344     		add	r3, r3, r0
 10458 07f0 E433     		adds	r3, r3, #228
 10459 07f2 1960     		str	r1, [r3]
1396:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = g_mem.motor[MOTOR_IDX].pos_lim_sup << g_mem.enc[g_
 10460              		.loc 1 1396 0
 10461 07f4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10462 07f6 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10463 07f8 9648     		ldr	r0, .L489+4
 10464 07fa 0B46     		mov	r3, r1
 10465 07fc DB00     		lsls	r3, r3, #3
 10466 07fe 5B1A     		subs	r3, r3, r1
 10467 0800 1B01     		lsls	r3, r3, #4
 10468 0802 0344     		add	r3, r3, r0
 10469 0804 E833     		adds	r3, r3, #232
 10470 0806 1868     		ldr	r0, [r3]
 10471 0808 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10472 080a 924C     		ldr	r4, .L489+4
 10473 080c 0B46     		mov	r3, r1
 10474 080e DB00     		lsls	r3, r3, #3
 10475 0810 5B1A     		subs	r3, r3, r1
 10476 0812 1B01     		lsls	r3, r3, #4
 10477 0814 2344     		add	r3, r3, r4
 10478 0816 03F58873 		add	r3, r3, #272
 10479 081a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10480 081c 1C46     		mov	r4, r3
 10481 081e 8D49     		ldr	r1, .L489+4
 10482 0820 2346     		mov	r3, r4
 10483 0822 5B00     		lsls	r3, r3, #1
 10484 0824 2344     		add	r3, r3, r4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 240


 10485 0826 1B01     		lsls	r3, r3, #4
 10486 0828 0B44     		add	r3, r3, r1
 10487 082a 03F29513 		addw	r3, r3, #405
 10488 082e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10489 0830 00FA03F1 		lsl	r1, r0, r3
 10490 0834 8748     		ldr	r0, .L489+4
 10491 0836 1346     		mov	r3, r2
 10492 0838 DB00     		lsls	r3, r3, #3
 10493 083a 9B1A     		subs	r3, r3, r2
 10494 083c 1B01     		lsls	r3, r3, #4
 10495 083e 0344     		add	r3, r3, r0
 10496 0840 E833     		adds	r3, r3, #232
 10497 0842 1960     		str	r1, [r3]
1397:..\src/command_processing.c ****             break;            
 10498              		.loc 1 1397 0
 10499 0844 00F041BE 		b	.L419
 10500              	.L392:
1398:..\src/command_processing.c **** 
1399:..\src/command_processing.c ****         case 23:        //Rest Position
1400:..\src/command_processing.c ****             g_mem.SH.rest_pos = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<8
 10501              		.loc 1 1400 0
 10502 0848 814B     		ldr	r3, .L489
 10503 084a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 10504 084c 1A06     		lsls	r2, r3, #24
 10505 084e 804B     		ldr	r3, .L489
 10506 0850 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 10507 0852 1B04     		lsls	r3, r3, #16
 10508 0854 1A43     		orrs	r2, r2, r3
 10509 0856 7E4B     		ldr	r3, .L489
 10510 0858 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 10511 085a 1B02     		lsls	r3, r3, #8
 10512 085c 1343     		orrs	r3, r3, r2
 10513 085e 7C4A     		ldr	r2, .L489
 10514 0860 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 10515 0862 1343     		orrs	r3, r3, r2
 10516 0864 7B4A     		ldr	r2, .L489+4
 10517 0866 C2F8A032 		str	r3, [r2, #672]
1401:..\src/command_processing.c ****             g_mem.SH.rest_pos = g_mem.SH.rest_pos << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line]
 10518              		.loc 1 1401 0
 10519 086a 7A4B     		ldr	r3, .L489+4
 10520 086c D3F8A012 		ldr	r1, [r3, #672]
 10521 0870 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10522 0872 7848     		ldr	r0, .L489+4
 10523 0874 1346     		mov	r3, r2
 10524 0876 DB00     		lsls	r3, r3, #3
 10525 0878 9B1A     		subs	r3, r3, r2
 10526 087a 1B01     		lsls	r3, r3, #4
 10527 087c 0344     		add	r3, r3, r0
 10528 087e 03F58873 		add	r3, r3, #272
 10529 0882 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10530 0884 1846     		mov	r0, r3
 10531 0886 734A     		ldr	r2, .L489+4
 10532 0888 0346     		mov	r3, r0
 10533 088a 5B00     		lsls	r3, r3, #1
 10534 088c 0344     		add	r3, r3, r0
 10535 088e 1B01     		lsls	r3, r3, #4
 10536 0890 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 241


 10537 0892 03F29513 		addw	r3, r3, #405
 10538 0896 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10539 0898 01FA03F3 		lsl	r3, r1, r3
 10540 089c 6D4A     		ldr	r2, .L489+4
 10541 089e C2F8A032 		str	r3, [r2, #672]
1402:..\src/command_processing.c ****             break; 
 10542              		.loc 1 1402 0
 10543 08a2 00F012BE 		b	.L419
 10544              	.L393:
1403:..\src/command_processing.c ****             
1404:..\src/command_processing.c ****         case 24:        //Rest Position Time Delay
1405:..\src/command_processing.c ****            g_mem.SH.rest_delay = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<
 10545              		.loc 1 1405 0
 10546 08a6 6A4B     		ldr	r3, .L489
 10547 08a8 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 10548 08aa 1A06     		lsls	r2, r3, #24
 10549 08ac 684B     		ldr	r3, .L489
 10550 08ae 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 10551 08b0 1B04     		lsls	r3, r3, #16
 10552 08b2 1A43     		orrs	r2, r2, r3
 10553 08b4 664B     		ldr	r3, .L489
 10554 08b6 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 10555 08b8 1B02     		lsls	r3, r3, #8
 10556 08ba 1343     		orrs	r3, r3, r2
 10557 08bc 644A     		ldr	r2, .L489
 10558 08be 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 10559 08c0 1343     		orrs	r3, r3, r2
 10560 08c2 644A     		ldr	r2, .L489+4
 10561 08c4 C2F8A432 		str	r3, [r2, #676]
1406:..\src/command_processing.c **** 		   if (g_mem.SH.rest_delay < 10) g_mem.SH.rest_delay = 10;
 10562              		.loc 1 1406 0
 10563 08c8 624B     		ldr	r3, .L489+4
 10564 08ca D3F8A432 		ldr	r3, [r3, #676]
 10565 08ce 092B     		cmp	r3, #9
 10566 08d0 00F3F285 		bgt	.L480
 10567              		.loc 1 1406 0 is_stmt 0 discriminator 1
 10568 08d4 5F4B     		ldr	r3, .L489+4
 10569 08d6 0A22     		movs	r2, #10
 10570 08d8 C3F8A422 		str	r2, [r3, #676]
1407:..\src/command_processing.c ****            break; 
 10571              		.loc 1 1407 0 is_stmt 1 discriminator 1
 10572 08dc 00F0ECBD 		b	.L480
 10573              	.L394:
1408:..\src/command_processing.c ****             
1409:..\src/command_processing.c ****         case 28:        //Right/Left hand flag
1410:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 10574              		.loc 1 1410 0
 10575 08e0 5B4B     		ldr	r3, .L489
 10576 08e2 DB78     		ldrb	r3, [r3, #3]
 10577 08e4 BB74     		strb	r3, [r7, #18]
1411:..\src/command_processing.c ****             if (aux_uchar) {    // 1
 10578              		.loc 1 1411 0
 10579 08e6 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10580 08e8 002B     		cmp	r3, #0
 10581 08ea 04D0     		beq	.L437
1412:..\src/command_processing.c ****                 g_mem.dev.right_left = LEFT_HAND;
 10582              		.loc 1 1412 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 242


 10583 08ec 594B     		ldr	r3, .L489+4
 10584 08ee 0122     		movs	r2, #1
 10585 08f0 83F8A720 		strb	r2, [r3, #167]
 10586 08f4 03E0     		b	.L438
 10587              	.L437:
1413:..\src/command_processing.c ****             } else {            // 0
1414:..\src/command_processing.c ****                 g_mem.dev.right_left = RIGHT_HAND;
 10588              		.loc 1 1414 0
 10589 08f6 574B     		ldr	r3, .L489+4
 10590 08f8 0022     		movs	r2, #0
 10591 08fa 83F8A720 		strb	r2, [r3, #167]
 10592              	.L438:
1415:..\src/command_processing.c ****             }
1416:..\src/command_processing.c **** 			reset_last_value_flag[MOTOR_IDX] = 1;
 10593              		.loc 1 1416 0
 10594 08fe 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 10595 0900 554A     		ldr	r2, .L489+8
 10596 0902 0121     		movs	r1, #1
 10597 0904 D154     		strb	r1, [r2, r3]
1417:..\src/command_processing.c **** 
1418:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    
 10598              		.loc 1 1418 0
 10599 0906 534B     		ldr	r3, .L489+4
 10600 0908 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 10601 090c 002B     		cmp	r3, #0
 10602 090e 40F0D585 		bne	.L481
1419:..\src/command_processing.c ****                 // Change also default encoder line (only with SoftHand FW)
1420:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line = g_mem.dev.right_left;
 10603              		.loc 1 1420 0
 10604 0912 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10605 0914 4F4B     		ldr	r3, .L489+4
 10606 0916 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 10607 091a 4E49     		ldr	r1, .L489+4
 10608 091c 1346     		mov	r3, r2
 10609 091e DB00     		lsls	r3, r3, #3
 10610 0920 9B1A     		subs	r3, r3, r2
 10611 0922 1B01     		lsls	r3, r3, #4
 10612 0924 0B44     		add	r3, r3, r1
 10613 0926 03F58873 		add	r3, r3, #272
 10614 092a 0246     		mov	r2, r0
 10615 092c 1A70     		strb	r2, [r3]
1421:..\src/command_processing.c ****                 
1422:..\src/command_processing.c ****                 // Change also gears parameters
1423:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 10616              		.loc 1 1423 0
 10617 092e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10618 0930 4849     		ldr	r1, .L489+4
 10619 0932 1346     		mov	r3, r2
 10620 0934 DB00     		lsls	r3, r3, #3
 10621 0936 9B1A     		subs	r3, r3, r2
 10622 0938 1B01     		lsls	r3, r3, #4
 10623 093a 0B44     		add	r3, r3, r1
 10624 093c 03F58873 		add	r3, r3, #272
 10625 0940 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10626 0942 1946     		mov	r1, r3
 10627 0944 434A     		ldr	r2, .L489+4
 10628 0946 0B46     		mov	r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 243


 10629 0948 5B00     		lsls	r3, r3, #1
 10630 094a 0B44     		add	r3, r3, r1
 10631 094c 1B01     		lsls	r3, r3, #4
 10632 094e 1344     		add	r3, r3, r2
 10633 0950 03F5D873 		add	r3, r3, #432
 10634 0954 0122     		movs	r2, #1
 10635 0956 1A70     		strb	r2, [r3]
1424:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 10636              		.loc 1 1424 0
 10637 0958 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10638 095a 3E49     		ldr	r1, .L489+4
 10639 095c 1346     		mov	r3, r2
 10640 095e DB00     		lsls	r3, r3, #3
 10641 0960 9B1A     		subs	r3, r3, r2
 10642 0962 1B01     		lsls	r3, r3, #4
 10643 0964 0B44     		add	r3, r3, r1
 10644 0966 03F58873 		add	r3, r3, #272
 10645 096a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10646 096c 1946     		mov	r1, r3
 10647 096e 394A     		ldr	r2, .L489+4
 10648 0970 0B46     		mov	r3, r1
 10649 0972 5B00     		lsls	r3, r3, #1
 10650 0974 0B44     		add	r3, r3, r1
 10651 0976 1B01     		lsls	r3, r3, #4
 10652 0978 1344     		add	r3, r3, r2
 10653 097a 03F2B513 		addw	r3, r3, #437
 10654 097e 2322     		movs	r2, #35
 10655 0980 1A70     		strb	r2, [r3]
1425:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 10656              		.loc 1 1425 0
 10657 0982 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10658 0984 3349     		ldr	r1, .L489+4
 10659 0986 1346     		mov	r3, r2
 10660 0988 DB00     		lsls	r3, r3, #3
 10661 098a 9B1A     		subs	r3, r3, r2
 10662 098c 1B01     		lsls	r3, r3, #4
 10663 098e 0B44     		add	r3, r3, r1
 10664 0990 03F58873 		add	r3, r3, #272
 10665 0994 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10666 0996 1946     		mov	r1, r3
 10667 0998 2E4A     		ldr	r2, .L489+4
 10668 099a 0B46     		mov	r3, r1
 10669 099c 5B00     		lsls	r3, r3, #1
 10670 099e 0B44     		add	r3, r3, r1
 10671 09a0 1B01     		lsls	r3, r3, #4
 10672 09a2 1344     		add	r3, r3, r2
 10673 09a4 03F5DB73 		add	r3, r3, #438
 10674 09a8 0322     		movs	r2, #3
 10675 09aa 1A70     		strb	r2, [r3]
1426:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 10676              		.loc 1 1426 0
 10677 09ac 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10678 09ae 2949     		ldr	r1, .L489+4
 10679 09b0 1346     		mov	r3, r2
 10680 09b2 DB00     		lsls	r3, r3, #3
 10681 09b4 9B1A     		subs	r3, r3, r2
 10682 09b6 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 244


 10683 09b8 0B44     		add	r3, r3, r1
 10684 09ba 03F58873 		add	r3, r3, #272
 10685 09be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10686 09c0 1946     		mov	r1, r3
 10687 09c2 244A     		ldr	r2, .L489+4
 10688 09c4 0B46     		mov	r3, r1
 10689 09c6 5B00     		lsls	r3, r3, #1
 10690 09c8 0B44     		add	r3, r3, r1
 10691 09ca 1B01     		lsls	r3, r3, #4
 10692 09cc 1344     		add	r3, r3, r2
 10693 09ce 03F2B713 		addw	r3, r3, #439
 10694 09d2 FF22     		movs	r2, #255
 10695 09d4 1A70     		strb	r2, [r3]
1427:..\src/command_processing.c ****                 
1428:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1429:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 10696              		.loc 1 1429 0
 10697 09d6 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10698 09d8 1E49     		ldr	r1, .L489+4
 10699 09da 1346     		mov	r3, r2
 10700 09dc DB00     		lsls	r3, r3, #3
 10701 09de 9B1A     		subs	r3, r3, r2
 10702 09e0 1B01     		lsls	r3, r3, #4
 10703 09e2 0B44     		add	r3, r3, r1
 10704 09e4 03F21113 		addw	r3, r3, #273
 10705 09e8 0122     		movs	r2, #1
 10706 09ea 1A70     		strb	r2, [r3]
1430:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 10707              		.loc 1 1430 0
 10708 09ec 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10709 09ee 1949     		ldr	r1, .L489+4
 10710 09f0 1346     		mov	r3, r2
 10711 09f2 DB00     		lsls	r3, r3, #3
 10712 09f4 9B1A     		subs	r3, r3, r2
 10713 09f6 1B01     		lsls	r3, r3, #4
 10714 09f8 0B44     		add	r3, r3, r1
 10715 09fa 03F58973 		add	r3, r3, #274
 10716 09fe 0122     		movs	r2, #1
 10717 0a00 1A70     		strb	r2, [r3]
1431:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 10718              		.loc 1 1431 0
 10719 0a02 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10720 0a04 1349     		ldr	r1, .L489+4
 10721 0a06 1346     		mov	r3, r2
 10722 0a08 DB00     		lsls	r3, r3, #3
 10723 0a0a 9B1A     		subs	r3, r3, r2
 10724 0a0c 1B01     		lsls	r3, r3, #4
 10725 0a0e 0B44     		add	r3, r3, r1
 10726 0a10 E433     		adds	r3, r3, #228
 10727 0a12 0022     		movs	r2, #0
 10728 0a14 1A60     		str	r2, [r3]
1432:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[0].encod
 10729              		.loc 1 1432 0
 10730 0a16 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10731 0a18 0E4B     		ldr	r3, .L489+4
 10732 0a1a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 10733 0a1e 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 245


 10734 0a20 0C49     		ldr	r1, .L489+4
 10735 0a22 0346     		mov	r3, r0
 10736 0a24 5B00     		lsls	r3, r3, #1
 10737 0a26 0344     		add	r3, r3, r0
 10738 0a28 1B01     		lsls	r3, r3, #4
 10739 0a2a 0B44     		add	r3, r3, r1
 10740 0a2c 03F29513 		addw	r3, r3, #405
 10741 0a30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10742 0a32 1946     		mov	r1, r3
 10743 0a34 4FF47A53 		mov	r3, #16000
 10744 0a38 03FA01F1 		lsl	r1, r3, r1
 10745 0a3c 0548     		ldr	r0, .L489+4
 10746 0a3e 1346     		mov	r3, r2
 10747 0a40 DB00     		lsls	r3, r3, #3
 10748 0a42 9B1A     		subs	r3, r3, r2
 10749 0a44 1B01     		lsls	r3, r3, #4
 10750 0a46 0344     		add	r3, r3, r0
 10751 0a48 E833     		adds	r3, r3, #232
 10752 0a4a 1960     		str	r1, [r3]
1433:..\src/command_processing.c ****             }    
1434:..\src/command_processing.c **** 
1435:..\src/command_processing.c ****             break; 
 10753              		.loc 1 1435 0
 10754 0a4c 00F036BD 		b	.L481
 10755              	.L490:
 10756              		.align	2
 10757              	.L489:
 10758 0a50 00000000 		.word	g_rx
 10759 0a54 00000000 		.word	g_mem
 10760 0a58 00000000 		.word	reset_last_value_flag
 10761              	.L395:
1436:..\src/command_processing.c **** 
1437:..\src/command_processing.c ****         case 31:        //Reset counters - uint8
1438:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 10762              		.loc 1 1438 0
 10763 0a5c B94B     		ldr	r3, .L491
 10764 0a5e DB78     		ldrb	r3, [r3, #3]
 10765 0a60 BB74     		strb	r3, [r7, #18]
1439:..\src/command_processing.c ****             if (aux_uchar) {
 10766              		.loc 1 1439 0
 10767 0a62 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10768 0a64 002B     		cmp	r3, #0
 10769 0a66 05D0     		beq	.L440
1440:..\src/command_processing.c ****                 reset_counters();
 10770              		.loc 1 1440 0
 10771 0a68 FFF7FEFF 		bl	reset_counters
1441:..\src/command_processing.c ****                 g_mem.dev.reset_counters = FALSE;
 10772              		.loc 1 1441 0
 10773 0a6c B64B     		ldr	r3, .L491+4
 10774 0a6e 0022     		movs	r2, #0
 10775 0a70 83F8A820 		strb	r2, [r3, #168]
 10776              	.L440:
1442:..\src/command_processing.c ****             }
1443:..\src/command_processing.c ****             
1444:..\src/command_processing.c ****             if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 10777              		.loc 1 1444 0
 10778 0a74 B54B     		ldr	r3, .L491+8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 246


 10779 0a76 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 10780 0a7a 012B     		cmp	r3, #1
 10781 0a7c 40F02085 		bne	.L482
1445:..\src/command_processing.c ****                 // Set date of maintenance from RTC
1446:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_DATE_RD);
 10782              		.loc 1 1446 0
 10783 0a80 8720     		movs	r0, #135
 10784 0a82 FFF7FEFF 		bl	DS1302_read
 10785 0a86 0346     		mov	r3, r0
 10786 0a88 BB74     		strb	r3, [r7, #18]
1447:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[0] = (aux_uchar/16) * 10 + aux_uchar%16;    //day
 10787              		.loc 1 1447 0
 10788 0a8a BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10789 0a8c 1B09     		lsrs	r3, r3, #4
 10790 0a8e DBB2     		uxtb	r3, r3
 10791 0a90 1A46     		mov	r2, r3
 10792 0a92 9200     		lsls	r2, r2, #2
 10793 0a94 1344     		add	r3, r3, r2
 10794 0a96 5B00     		lsls	r3, r3, #1
 10795 0a98 DAB2     		uxtb	r2, r3
 10796 0a9a BB7C     		ldrb	r3, [r7, #18]
 10797 0a9c 03F00F03 		and	r3, r3, #15
 10798 0aa0 DBB2     		uxtb	r3, r3
 10799 0aa2 1344     		add	r3, r3, r2
 10800 0aa4 DAB2     		uxtb	r2, r3
 10801 0aa6 A84B     		ldr	r3, .L491+4
 10802 0aa8 83F8A420 		strb	r2, [r3, #164]
1448:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_MONTH_RD);
 10803              		.loc 1 1448 0
 10804 0aac 8920     		movs	r0, #137
 10805 0aae FFF7FEFF 		bl	DS1302_read
 10806 0ab2 0346     		mov	r3, r0
 10807 0ab4 BB74     		strb	r3, [r7, #18]
1449:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[1] = (aux_uchar/16) * 10 + aux_uchar%16;    // mo
 10808              		.loc 1 1449 0
 10809 0ab6 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10810 0ab8 1B09     		lsrs	r3, r3, #4
 10811 0aba DBB2     		uxtb	r3, r3
 10812 0abc 1A46     		mov	r2, r3
 10813 0abe 9200     		lsls	r2, r2, #2
 10814 0ac0 1344     		add	r3, r3, r2
 10815 0ac2 5B00     		lsls	r3, r3, #1
 10816 0ac4 DAB2     		uxtb	r2, r3
 10817 0ac6 BB7C     		ldrb	r3, [r7, #18]
 10818 0ac8 03F00F03 		and	r3, r3, #15
 10819 0acc DBB2     		uxtb	r3, r3
 10820 0ace 1344     		add	r3, r3, r2
 10821 0ad0 DAB2     		uxtb	r2, r3
 10822 0ad2 9D4B     		ldr	r3, .L491+4
 10823 0ad4 83F8A520 		strb	r2, [r3, #165]
1450:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_YEAR_RD);
 10824              		.loc 1 1450 0
 10825 0ad8 8D20     		movs	r0, #141
 10826 0ada FFF7FEFF 		bl	DS1302_read
 10827 0ade 0346     		mov	r3, r0
 10828 0ae0 BB74     		strb	r3, [r7, #18]
1451:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[2] = (aux_uchar/16) * 10 + aux_uchar%16;         
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 247


 10829              		.loc 1 1451 0
 10830 0ae2 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10831 0ae4 1B09     		lsrs	r3, r3, #4
 10832 0ae6 DBB2     		uxtb	r3, r3
 10833 0ae8 1A46     		mov	r2, r3
 10834 0aea 9200     		lsls	r2, r2, #2
 10835 0aec 1344     		add	r3, r3, r2
 10836 0aee 5B00     		lsls	r3, r3, #1
 10837 0af0 DAB2     		uxtb	r2, r3
 10838 0af2 BB7C     		ldrb	r3, [r7, #18]
 10839 0af4 03F00F03 		and	r3, r3, #15
 10840 0af8 DBB2     		uxtb	r3, r3
 10841 0afa 1344     		add	r3, r3, r2
 10842 0afc DAB2     		uxtb	r2, r3
 10843 0afe 924B     		ldr	r3, .L491+4
 10844 0b00 83F8A620 		strb	r2, [r3, #166]
1452:..\src/command_processing.c ****             }
1453:..\src/command_processing.c ****             break;             
 10845              		.loc 1 1453 0
 10846 0b04 00F0DCBC 		b	.L482
 10847              	.L396:
 10848              	.LBB19:
1454:..\src/command_processing.c ****             
1455:..\src/command_processing.c ****         case 32:         //Current Time
1456:..\src/command_processing.c ****             for (uint8 i=0; i<6; i++){
 10849              		.loc 1 1456 0
 10850 0b08 0023     		movs	r3, #0
 10851 0b0a 7B75     		strb	r3, [r7, #21]
 10852 0b0c 0CE0     		b	.L442
 10853              	.L443:
1457:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10854              		.loc 1 1457 0 discriminator 3
 10855 0b0e 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10856 0b10 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 10857 0b12 0332     		adds	r2, r2, #3
 10858 0b14 8B49     		ldr	r1, .L491
 10859 0b16 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 10860 0b18 8B4A     		ldr	r2, .L491+4
 10861 0b1a 1344     		add	r3, r3, r2
 10862 0b1c 0A46     		mov	r2, r1
 10863 0b1e 83F82022 		strb	r2, [r3, #544]
1456:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10864              		.loc 1 1456 0 discriminator 3
 10865 0b22 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10866 0b24 0133     		adds	r3, r3, #1
 10867 0b26 7B75     		strb	r3, [r7, #21]
 10868              	.L442:
1456:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10869              		.loc 1 1456 0 is_stmt 0 discriminator 1
 10870 0b28 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10871 0b2a 052B     		cmp	r3, #5
 10872 0b2c EFD9     		bls	.L443
 10873              	.LBE19:
1458:..\src/command_processing.c ****             }
1459:..\src/command_processing.c ****             
1460:..\src/command_processing.c ****             if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 10874              		.loc 1 1460 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 248


 10875 0b2e 864B     		ldr	r3, .L491+4
 10876 0b30 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 10877 0b34 012B     		cmp	r3, #1
 10878 0b36 40F0C584 		bne	.L483
1461:..\src/command_processing.c ****                 set_RTC_time();
 10879              		.loc 1 1461 0
 10880 0b3a FFF7FEFF 		bl	set_RTC_time
1462:..\src/command_processing.c ****             }
1463:..\src/command_processing.c ****             break;
 10881              		.loc 1 1463 0
 10882 0b3e 00F0C1BC 		b	.L483
 10883              	.L397:
1464:..\src/command_processing.c ****            
1465:..\src/command_processing.c ****         case 38:        // First Motor Driver Type
1466:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 10884              		.loc 1 1466 0
 10885 0b42 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10886 0b44 7F4B     		ldr	r3, .L491
 10887 0b46 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 10888 0b48 7F49     		ldr	r1, .L491+4
 10889 0b4a 1346     		mov	r3, r2
 10890 0b4c DB00     		lsls	r3, r3, #3
 10891 0b4e 9B1A     		subs	r3, r3, r2
 10892 0b50 1B01     		lsls	r3, r3, #4
 10893 0b52 0B44     		add	r3, r3, r1
 10894 0b54 E233     		adds	r3, r3, #226
 10895 0b56 0246     		mov	r2, r0
 10896 0b58 1A70     		strb	r2, [r3]
1467:..\src/command_processing.c ****             set_motor_driver_type();            
 10897              		.loc 1 1467 0
 10898 0b5a FFF7FEFF 		bl	set_motor_driver_type
1468:..\src/command_processing.c ****             break;
 10899              		.loc 1 1468 0
 10900 0b5e 00F0B4BC 		b	.L419
 10901              	.L398:
1469:..\src/command_processing.c ****             
1470:..\src/command_processing.c ****         case 44:         // Second Motor Position PID
1471:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 10902              		.loc 1 1471 0
 10903 0b62 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10904 0b64 7949     		ldr	r1, .L491+8
 10905 0b66 1346     		mov	r3, r2
 10906 0b68 DB00     		lsls	r3, r3, #3
 10907 0b6a 9B1A     		subs	r3, r3, r2
 10908 0b6c 1B01     		lsls	r3, r3, #4
 10909 0b6e 0B44     		add	r3, r3, r1
 10910 0b70 03F20F13 		addw	r3, r3, #271
 10911 0b74 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10912 0b76 032B     		cmp	r3, #3
 10913 0b78 00F08680 		beq	.L445
1472:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 10914              		.loc 1 1472 0
 10915 0b7c 744B     		ldr	r3, .L491+12
 10916 0b7e 1B68     		ldr	r3, [r3]	@ float
 10917 0b80 FB60     		str	r3, [r7, #12]	@ float
1473:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10918              		.loc 1 1473 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 249


 10919 0b82 0023     		movs	r3, #0
 10920 0b84 BB75     		strb	r3, [r7, #22]
 10921 0b86 0EE0     		b	.L446
 10922              	.L447:
1474:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10923              		.loc 1 1474 0 discriminator 3
 10924 0b88 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10925 0b8a C3F10303 		rsb	r3, r3, #3
 10926 0b8e 07F10802 		add	r2, r7, #8
 10927 0b92 1344     		add	r3, r3, r2
 10928 0b94 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10929 0b96 07F10C01 		add	r1, r7, #12
 10930 0b9a 0A44     		add	r2, r2, r1
 10931 0b9c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10932 0b9e 1A70     		strb	r2, [r3]
1473:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10933              		.loc 1 1473 0 discriminator 3
 10934 0ba0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10935 0ba2 0133     		adds	r3, r3, #1
 10936 0ba4 BB75     		strb	r3, [r7, #22]
 10937              	.L446:
1473:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10938              		.loc 1 1473 0 is_stmt 0 discriminator 1
 10939 0ba6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10940 0ba8 032B     		cmp	r3, #3
 10941 0baa EDD9     		bls	.L447
1475:..\src/command_processing.c ****                 }
1476:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p = aux_float2 * 65536;
 10942              		.loc 1 1476 0 is_stmt 1
 10943 0bac FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10944 0bae BB68     		ldr	r3, [r7, #8]	@ float
 10945 0bb0 4FF08F41 		mov	r1, #1199570944
 10946 0bb4 1846     		mov	r0, r3
 10947 0bb6 FFF7FEFF 		bl	__aeabi_fmul
 10948 0bba 0346     		mov	r3, r0
 10949 0bbc 1846     		mov	r0, r3
 10950 0bbe FFF7FEFF 		bl	__aeabi_f2iz
 10951 0bc2 0146     		mov	r1, r0
 10952 0bc4 604A     		ldr	r2, .L491+4
 10953 0bc6 2346     		mov	r3, r4
 10954 0bc8 DB00     		lsls	r3, r3, #3
 10955 0bca 1B1B     		subs	r3, r3, r4
 10956 0bcc 1B01     		lsls	r3, r3, #4
 10957 0bce 1344     		add	r3, r3, r2
 10958 0bd0 B033     		adds	r3, r3, #176
 10959 0bd2 1960     		str	r1, [r3]
1477:..\src/command_processing.c ****                 
1478:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 10960              		.loc 1 1478 0
 10961 0bd4 5F4B     		ldr	r3, .L491+16
 10962 0bd6 1B68     		ldr	r3, [r3]	@ float
 10963 0bd8 FB60     		str	r3, [r7, #12]	@ float
1479:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10964              		.loc 1 1479 0
 10965 0bda 0023     		movs	r3, #0
 10966 0bdc BB75     		strb	r3, [r7, #22]
 10967 0bde 0EE0     		b	.L448
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 250


 10968              	.L449:
1480:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10969              		.loc 1 1480 0 discriminator 3
 10970 0be0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10971 0be2 C3F10303 		rsb	r3, r3, #3
 10972 0be6 07F10802 		add	r2, r7, #8
 10973 0bea 1344     		add	r3, r3, r2
 10974 0bec BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10975 0bee 07F10C01 		add	r1, r7, #12
 10976 0bf2 0A44     		add	r2, r2, r1
 10977 0bf4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10978 0bf6 1A70     		strb	r2, [r3]
1479:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10979              		.loc 1 1479 0 discriminator 3
 10980 0bf8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10981 0bfa 0133     		adds	r3, r3, #1
 10982 0bfc BB75     		strb	r3, [r7, #22]
 10983              	.L448:
1479:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10984              		.loc 1 1479 0 is_stmt 0 discriminator 1
 10985 0bfe BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10986 0c00 032B     		cmp	r3, #3
 10987 0c02 EDD9     		bls	.L449
1481:..\src/command_processing.c ****                 }
1482:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i = aux_float2 * 65536;
 10988              		.loc 1 1482 0 is_stmt 1
 10989 0c04 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10990 0c06 BB68     		ldr	r3, [r7, #8]	@ float
 10991 0c08 4FF08F41 		mov	r1, #1199570944
 10992 0c0c 1846     		mov	r0, r3
 10993 0c0e FFF7FEFF 		bl	__aeabi_fmul
 10994 0c12 0346     		mov	r3, r0
 10995 0c14 1846     		mov	r0, r3
 10996 0c16 FFF7FEFF 		bl	__aeabi_f2iz
 10997 0c1a 0146     		mov	r1, r0
 10998 0c1c 4A4A     		ldr	r2, .L491+4
 10999 0c1e 2346     		mov	r3, r4
 11000 0c20 DB00     		lsls	r3, r3, #3
 11001 0c22 1B1B     		subs	r3, r3, r4
 11002 0c24 1B01     		lsls	r3, r3, #4
 11003 0c26 1344     		add	r3, r3, r2
 11004 0c28 B433     		adds	r3, r3, #180
 11005 0c2a 1960     		str	r1, [r3]
1483:..\src/command_processing.c ****                 
1484:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 11006              		.loc 1 1484 0
 11007 0c2c 4A4B     		ldr	r3, .L491+20
 11008 0c2e 1B68     		ldr	r3, [r3]	@ float
 11009 0c30 FB60     		str	r3, [r7, #12]	@ float
1485:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11010              		.loc 1 1485 0
 11011 0c32 0023     		movs	r3, #0
 11012 0c34 BB75     		strb	r3, [r7, #22]
 11013 0c36 0EE0     		b	.L450
 11014              	.L451:
1486:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11015              		.loc 1 1486 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 251


 11016 0c38 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11017 0c3a C3F10303 		rsb	r3, r3, #3
 11018 0c3e 07F10802 		add	r2, r7, #8
 11019 0c42 1344     		add	r3, r3, r2
 11020 0c44 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11021 0c46 07F10C01 		add	r1, r7, #12
 11022 0c4a 0A44     		add	r2, r2, r1
 11023 0c4c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11024 0c4e 1A70     		strb	r2, [r3]
1485:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11025              		.loc 1 1485 0 discriminator 3
 11026 0c50 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11027 0c52 0133     		adds	r3, r3, #1
 11028 0c54 BB75     		strb	r3, [r7, #22]
 11029              	.L450:
1485:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11030              		.loc 1 1485 0 is_stmt 0 discriminator 1
 11031 0c56 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11032 0c58 032B     		cmp	r3, #3
 11033 0c5a EDD9     		bls	.L451
1487:..\src/command_processing.c ****                 }
1488:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d = aux_float2 * 65536;
 11034              		.loc 1 1488 0 is_stmt 1
 11035 0c5c FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11036 0c5e BB68     		ldr	r3, [r7, #8]	@ float
 11037 0c60 4FF08F41 		mov	r1, #1199570944
 11038 0c64 1846     		mov	r0, r3
 11039 0c66 FFF7FEFF 		bl	__aeabi_fmul
 11040 0c6a 0346     		mov	r3, r0
 11041 0c6c 1846     		mov	r0, r3
 11042 0c6e FFF7FEFF 		bl	__aeabi_f2iz
 11043 0c72 0146     		mov	r1, r0
 11044 0c74 344A     		ldr	r2, .L491+4
 11045 0c76 2346     		mov	r3, r4
 11046 0c78 DB00     		lsls	r3, r3, #3
 11047 0c7a 1B1B     		subs	r3, r3, r4
 11048 0c7c 1B01     		lsls	r3, r3, #4
 11049 0c7e 1344     		add	r3, r3, r2
 11050 0c80 B833     		adds	r3, r3, #184
 11051 0c82 1960     		str	r1, [r3]
1489:..\src/command_processing.c ****             }
1490:..\src/command_processing.c ****             else {
1491:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1492:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1493:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1494:..\src/command_processing.c ****                 }
1495:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1496:..\src/command_processing.c ****                 
1497:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1498:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1499:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1500:..\src/command_processing.c ****                 }
1501:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1502:..\src/command_processing.c ****                 
1503:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1504:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1505:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 252


1506:..\src/command_processing.c ****                 }
1507:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1508:..\src/command_processing.c ****             }
1509:..\src/command_processing.c ****             break;
 11052              		.loc 1 1509 0
 11053 0c84 00F021BC 		b	.L419
 11054              	.L445:
1491:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11055              		.loc 1 1491 0
 11056 0c88 314B     		ldr	r3, .L491+12
 11057 0c8a 1B68     		ldr	r3, [r3]	@ float
 11058 0c8c FB60     		str	r3, [r7, #12]	@ float
1492:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11059              		.loc 1 1492 0
 11060 0c8e 0023     		movs	r3, #0
 11061 0c90 BB75     		strb	r3, [r7, #22]
 11062 0c92 0EE0     		b	.L453
 11063              	.L454:
1493:..\src/command_processing.c ****                 }
 11064              		.loc 1 1493 0 discriminator 3
 11065 0c94 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11066 0c96 C3F10303 		rsb	r3, r3, #3
 11067 0c9a 07F10802 		add	r2, r7, #8
 11068 0c9e 1344     		add	r3, r3, r2
 11069 0ca0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11070 0ca2 07F10C01 		add	r1, r7, #12
 11071 0ca6 0A44     		add	r2, r2, r1
 11072 0ca8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11073 0caa 1A70     		strb	r2, [r3]
1492:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11074              		.loc 1 1492 0 discriminator 3
 11075 0cac BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11076 0cae 0133     		adds	r3, r3, #1
 11077 0cb0 BB75     		strb	r3, [r7, #22]
 11078              	.L453:
1492:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11079              		.loc 1 1492 0 is_stmt 0 discriminator 1
 11080 0cb2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11081 0cb4 032B     		cmp	r3, #3
 11082 0cb6 EDD9     		bls	.L454
1495:..\src/command_processing.c ****                 
 11083              		.loc 1 1495 0 is_stmt 1
 11084 0cb8 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11085 0cba BB68     		ldr	r3, [r7, #8]	@ float
 11086 0cbc 4FF08F41 		mov	r1, #1199570944
 11087 0cc0 1846     		mov	r0, r3
 11088 0cc2 FFF7FEFF 		bl	__aeabi_fmul
 11089 0cc6 0346     		mov	r3, r0
 11090 0cc8 1846     		mov	r0, r3
 11091 0cca FFF7FEFF 		bl	__aeabi_f2iz
 11092 0cce 0146     		mov	r1, r0
 11093 0cd0 1D4A     		ldr	r2, .L491+4
 11094 0cd2 2346     		mov	r3, r4
 11095 0cd4 DB00     		lsls	r3, r3, #3
 11096 0cd6 1B1B     		subs	r3, r3, r4
 11097 0cd8 1B01     		lsls	r3, r3, #4
 11098 0cda 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 253


 11099 0cdc C833     		adds	r3, r3, #200
 11100 0cde 1960     		str	r1, [r3]
1497:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11101              		.loc 1 1497 0
 11102 0ce0 1C4B     		ldr	r3, .L491+16
 11103 0ce2 1B68     		ldr	r3, [r3]	@ float
 11104 0ce4 FB60     		str	r3, [r7, #12]	@ float
1498:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11105              		.loc 1 1498 0
 11106 0ce6 0023     		movs	r3, #0
 11107 0ce8 BB75     		strb	r3, [r7, #22]
 11108 0cea 0EE0     		b	.L455
 11109              	.L456:
1499:..\src/command_processing.c ****                 }
 11110              		.loc 1 1499 0 discriminator 3
 11111 0cec BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11112 0cee C3F10303 		rsb	r3, r3, #3
 11113 0cf2 07F10802 		add	r2, r7, #8
 11114 0cf6 1344     		add	r3, r3, r2
 11115 0cf8 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11116 0cfa 07F10C01 		add	r1, r7, #12
 11117 0cfe 0A44     		add	r2, r2, r1
 11118 0d00 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11119 0d02 1A70     		strb	r2, [r3]
1498:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11120              		.loc 1 1498 0 discriminator 3
 11121 0d04 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11122 0d06 0133     		adds	r3, r3, #1
 11123 0d08 BB75     		strb	r3, [r7, #22]
 11124              	.L455:
1498:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11125              		.loc 1 1498 0 is_stmt 0 discriminator 1
 11126 0d0a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11127 0d0c 032B     		cmp	r3, #3
 11128 0d0e EDD9     		bls	.L456
1501:..\src/command_processing.c ****                 
 11129              		.loc 1 1501 0 is_stmt 1
 11130 0d10 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11131 0d12 BB68     		ldr	r3, [r7, #8]	@ float
 11132 0d14 4FF08F41 		mov	r1, #1199570944
 11133 0d18 1846     		mov	r0, r3
 11134 0d1a FFF7FEFF 		bl	__aeabi_fmul
 11135 0d1e 0346     		mov	r3, r0
 11136 0d20 1846     		mov	r0, r3
 11137 0d22 FFF7FEFF 		bl	__aeabi_f2iz
 11138 0d26 0146     		mov	r1, r0
 11139 0d28 074A     		ldr	r2, .L491+4
 11140 0d2a 2346     		mov	r3, r4
 11141 0d2c DB00     		lsls	r3, r3, #3
 11142 0d2e 1B1B     		subs	r3, r3, r4
 11143 0d30 1B01     		lsls	r3, r3, #4
 11144 0d32 1344     		add	r3, r3, r2
 11145 0d34 CC33     		adds	r3, r3, #204
 11146 0d36 1960     		str	r1, [r3]
1503:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11147              		.loc 1 1503 0
 11148 0d38 074B     		ldr	r3, .L491+20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 254


 11149 0d3a 1B68     		ldr	r3, [r3]	@ float
 11150 0d3c FB60     		str	r3, [r7, #12]	@ float
1504:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11151              		.loc 1 1504 0
 11152 0d3e 0023     		movs	r3, #0
 11153 0d40 BB75     		strb	r3, [r7, #22]
 11154 0d42 1AE0     		b	.L457
 11155              	.L492:
 11156              		.align	2
 11157              	.L491:
 11158 0d44 00000000 		.word	g_rx
 11159 0d48 00000000 		.word	g_mem
 11160 0d4c 00000000 		.word	c_mem
 11161 0d50 03000000 		.word	g_rx+3
 11162 0d54 07000000 		.word	g_rx+7
 11163 0d58 0B000000 		.word	g_rx+11
 11164              	.L458:
1505:..\src/command_processing.c ****                 }
 11165              		.loc 1 1505 0 discriminator 3
 11166 0d5c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11167 0d5e C3F10303 		rsb	r3, r3, #3
 11168 0d62 07F10802 		add	r2, r7, #8
 11169 0d66 1344     		add	r3, r3, r2
 11170 0d68 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11171 0d6a 07F10C01 		add	r1, r7, #12
 11172 0d6e 0A44     		add	r2, r2, r1
 11173 0d70 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11174 0d72 1A70     		strb	r2, [r3]
1504:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11175              		.loc 1 1504 0 discriminator 3
 11176 0d74 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11177 0d76 0133     		adds	r3, r3, #1
 11178 0d78 BB75     		strb	r3, [r7, #22]
 11179              	.L457:
1504:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11180              		.loc 1 1504 0 is_stmt 0 discriminator 1
 11181 0d7a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11182 0d7c 032B     		cmp	r3, #3
 11183 0d7e EDD9     		bls	.L458
1507:..\src/command_processing.c ****             }
 11184              		.loc 1 1507 0 is_stmt 1
 11185 0d80 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11186 0d82 BB68     		ldr	r3, [r7, #8]	@ float
 11187 0d84 4FF08F41 		mov	r1, #1199570944
 11188 0d88 1846     		mov	r0, r3
 11189 0d8a FFF7FEFF 		bl	__aeabi_fmul
 11190 0d8e 0346     		mov	r3, r0
 11191 0d90 1846     		mov	r0, r3
 11192 0d92 FFF7FEFF 		bl	__aeabi_f2iz
 11193 0d96 0146     		mov	r1, r0
 11194 0d98 A34A     		ldr	r2, .L493
 11195 0d9a 2346     		mov	r3, r4
 11196 0d9c DB00     		lsls	r3, r3, #3
 11197 0d9e 1B1B     		subs	r3, r3, r4
 11198 0da0 1B01     		lsls	r3, r3, #4
 11199 0da2 1344     		add	r3, r3, r2
 11200 0da4 D033     		adds	r3, r3, #208
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 255


 11201 0da6 1960     		str	r1, [r3]
 11202              		.loc 1 1509 0
 11203 0da8 8FE3     		b	.L419
 11204              	.L399:
1510:..\src/command_processing.c ****             
1511:..\src/command_processing.c ****         case 45:         // Second Motor Current PID
1512:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 11205              		.loc 1 1512 0
 11206 0daa FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11207 0dac 9F49     		ldr	r1, .L493+4
 11208 0dae 1346     		mov	r3, r2
 11209 0db0 DB00     		lsls	r3, r3, #3
 11210 0db2 9B1A     		subs	r3, r3, r2
 11211 0db4 1B01     		lsls	r3, r3, #4
 11212 0db6 0B44     		add	r3, r3, r1
 11213 0db8 03F20F13 		addw	r3, r3, #271
 11214 0dbc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11215 0dbe 032B     		cmp	r3, #3
 11216 0dc0 00F08580 		beq	.L459
1513:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 11217              		.loc 1 1513 0
 11218 0dc4 9A4B     		ldr	r3, .L493+8
 11219 0dc6 1B68     		ldr	r3, [r3]	@ float
 11220 0dc8 FB60     		str	r3, [r7, #12]	@ float
1514:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11221              		.loc 1 1514 0
 11222 0dca 0023     		movs	r3, #0
 11223 0dcc BB75     		strb	r3, [r7, #22]
 11224 0dce 0EE0     		b	.L460
 11225              	.L461:
1515:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11226              		.loc 1 1515 0 discriminator 3
 11227 0dd0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11228 0dd2 C3F10303 		rsb	r3, r3, #3
 11229 0dd6 07F10802 		add	r2, r7, #8
 11230 0dda 1344     		add	r3, r3, r2
 11231 0ddc BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11232 0dde 07F10C01 		add	r1, r7, #12
 11233 0de2 0A44     		add	r2, r2, r1
 11234 0de4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11235 0de6 1A70     		strb	r2, [r3]
1514:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11236              		.loc 1 1514 0 discriminator 3
 11237 0de8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11238 0dea 0133     		adds	r3, r3, #1
 11239 0dec BB75     		strb	r3, [r7, #22]
 11240              	.L460:
1514:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11241              		.loc 1 1514 0 is_stmt 0 discriminator 1
 11242 0dee BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11243 0df0 032B     		cmp	r3, #3
 11244 0df2 EDD9     		bls	.L461
1516:..\src/command_processing.c ****                 }
1517:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c = aux_float2 * 65536;
 11245              		.loc 1 1517 0 is_stmt 1
 11246 0df4 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11247 0df6 BB68     		ldr	r3, [r7, #8]	@ float
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 256


 11248 0df8 4FF08F41 		mov	r1, #1199570944
 11249 0dfc 1846     		mov	r0, r3
 11250 0dfe FFF7FEFF 		bl	__aeabi_fmul
 11251 0e02 0346     		mov	r3, r0
 11252 0e04 1846     		mov	r0, r3
 11253 0e06 FFF7FEFF 		bl	__aeabi_f2iz
 11254 0e0a 0146     		mov	r1, r0
 11255 0e0c 864A     		ldr	r2, .L493
 11256 0e0e 2346     		mov	r3, r4
 11257 0e10 DB00     		lsls	r3, r3, #3
 11258 0e12 1B1B     		subs	r3, r3, r4
 11259 0e14 1B01     		lsls	r3, r3, #4
 11260 0e16 1344     		add	r3, r3, r2
 11261 0e18 BC33     		adds	r3, r3, #188
 11262 0e1a 1960     		str	r1, [r3]
1518:..\src/command_processing.c ****                 
1519:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 11263              		.loc 1 1519 0
 11264 0e1c 854B     		ldr	r3, .L493+12
 11265 0e1e 1B68     		ldr	r3, [r3]	@ float
 11266 0e20 FB60     		str	r3, [r7, #12]	@ float
1520:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11267              		.loc 1 1520 0
 11268 0e22 0023     		movs	r3, #0
 11269 0e24 BB75     		strb	r3, [r7, #22]
 11270 0e26 0EE0     		b	.L462
 11271              	.L463:
1521:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11272              		.loc 1 1521 0 discriminator 3
 11273 0e28 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11274 0e2a C3F10303 		rsb	r3, r3, #3
 11275 0e2e 07F10802 		add	r2, r7, #8
 11276 0e32 1344     		add	r3, r3, r2
 11277 0e34 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11278 0e36 07F10C01 		add	r1, r7, #12
 11279 0e3a 0A44     		add	r2, r2, r1
 11280 0e3c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11281 0e3e 1A70     		strb	r2, [r3]
1520:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11282              		.loc 1 1520 0 discriminator 3
 11283 0e40 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11284 0e42 0133     		adds	r3, r3, #1
 11285 0e44 BB75     		strb	r3, [r7, #22]
 11286              	.L462:
1520:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11287              		.loc 1 1520 0 is_stmt 0 discriminator 1
 11288 0e46 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11289 0e48 032B     		cmp	r3, #3
 11290 0e4a EDD9     		bls	.L463
1522:..\src/command_processing.c ****                 }
1523:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c = aux_float2 * 65536;
 11291              		.loc 1 1523 0 is_stmt 1
 11292 0e4c FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11293 0e4e BB68     		ldr	r3, [r7, #8]	@ float
 11294 0e50 4FF08F41 		mov	r1, #1199570944
 11295 0e54 1846     		mov	r0, r3
 11296 0e56 FFF7FEFF 		bl	__aeabi_fmul
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 257


 11297 0e5a 0346     		mov	r3, r0
 11298 0e5c 1846     		mov	r0, r3
 11299 0e5e FFF7FEFF 		bl	__aeabi_f2iz
 11300 0e62 0146     		mov	r1, r0
 11301 0e64 704A     		ldr	r2, .L493
 11302 0e66 2346     		mov	r3, r4
 11303 0e68 DB00     		lsls	r3, r3, #3
 11304 0e6a 1B1B     		subs	r3, r3, r4
 11305 0e6c 1B01     		lsls	r3, r3, #4
 11306 0e6e 1344     		add	r3, r3, r2
 11307 0e70 C033     		adds	r3, r3, #192
 11308 0e72 1960     		str	r1, [r3]
1524:..\src/command_processing.c ****                 
1525:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 11309              		.loc 1 1525 0
 11310 0e74 704B     		ldr	r3, .L493+16
 11311 0e76 1B68     		ldr	r3, [r3]	@ float
 11312 0e78 FB60     		str	r3, [r7, #12]	@ float
1526:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11313              		.loc 1 1526 0
 11314 0e7a 0023     		movs	r3, #0
 11315 0e7c BB75     		strb	r3, [r7, #22]
 11316 0e7e 0EE0     		b	.L464
 11317              	.L465:
1527:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11318              		.loc 1 1527 0 discriminator 3
 11319 0e80 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11320 0e82 C3F10303 		rsb	r3, r3, #3
 11321 0e86 07F10802 		add	r2, r7, #8
 11322 0e8a 1344     		add	r3, r3, r2
 11323 0e8c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11324 0e8e 07F10C01 		add	r1, r7, #12
 11325 0e92 0A44     		add	r2, r2, r1
 11326 0e94 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11327 0e96 1A70     		strb	r2, [r3]
1526:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11328              		.loc 1 1526 0 discriminator 3
 11329 0e98 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11330 0e9a 0133     		adds	r3, r3, #1
 11331 0e9c BB75     		strb	r3, [r7, #22]
 11332              	.L464:
1526:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11333              		.loc 1 1526 0 is_stmt 0 discriminator 1
 11334 0e9e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11335 0ea0 032B     		cmp	r3, #3
 11336 0ea2 EDD9     		bls	.L465
1528:..\src/command_processing.c ****                 }
1529:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c = aux_float2 * 65536;
 11337              		.loc 1 1529 0 is_stmt 1
 11338 0ea4 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11339 0ea6 BB68     		ldr	r3, [r7, #8]	@ float
 11340 0ea8 4FF08F41 		mov	r1, #1199570944
 11341 0eac 1846     		mov	r0, r3
 11342 0eae FFF7FEFF 		bl	__aeabi_fmul
 11343 0eb2 0346     		mov	r3, r0
 11344 0eb4 1846     		mov	r0, r3
 11345 0eb6 FFF7FEFF 		bl	__aeabi_f2iz
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 258


 11346 0eba 0146     		mov	r1, r0
 11347 0ebc 5A4A     		ldr	r2, .L493
 11348 0ebe 2346     		mov	r3, r4
 11349 0ec0 DB00     		lsls	r3, r3, #3
 11350 0ec2 1B1B     		subs	r3, r3, r4
 11351 0ec4 1B01     		lsls	r3, r3, #4
 11352 0ec6 1344     		add	r3, r3, r2
 11353 0ec8 C433     		adds	r3, r3, #196
 11354 0eca 1960     		str	r1, [r3]
1530:..\src/command_processing.c ****             }
1531:..\src/command_processing.c ****             else {
1532:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1533:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1534:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1535:..\src/command_processing.c ****                 }
1536:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1537:..\src/command_processing.c ****                 
1538:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1539:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1540:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1541:..\src/command_processing.c ****                 }
1542:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1543:..\src/command_processing.c ****                 
1544:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1545:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1546:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1547:..\src/command_processing.c ****                 }
1548:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1549:..\src/command_processing.c ****             }            
1550:..\src/command_processing.c ****             break;  
 11355              		.loc 1 1550 0
 11356 0ecc FDE2     		b	.L419
 11357              	.L459:
1532:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11358              		.loc 1 1532 0
 11359 0ece 584B     		ldr	r3, .L493+8
 11360 0ed0 1B68     		ldr	r3, [r3]	@ float
 11361 0ed2 FB60     		str	r3, [r7, #12]	@ float
1533:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11362              		.loc 1 1533 0
 11363 0ed4 0023     		movs	r3, #0
 11364 0ed6 BB75     		strb	r3, [r7, #22]
 11365 0ed8 0EE0     		b	.L467
 11366              	.L468:
1534:..\src/command_processing.c ****                 }
 11367              		.loc 1 1534 0 discriminator 3
 11368 0eda BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11369 0edc C3F10303 		rsb	r3, r3, #3
 11370 0ee0 07F10802 		add	r2, r7, #8
 11371 0ee4 1344     		add	r3, r3, r2
 11372 0ee6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11373 0ee8 07F10C01 		add	r1, r7, #12
 11374 0eec 0A44     		add	r2, r2, r1
 11375 0eee 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11376 0ef0 1A70     		strb	r2, [r3]
1533:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11377              		.loc 1 1533 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 259


 11378 0ef2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11379 0ef4 0133     		adds	r3, r3, #1
 11380 0ef6 BB75     		strb	r3, [r7, #22]
 11381              	.L467:
1533:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11382              		.loc 1 1533 0 is_stmt 0 discriminator 1
 11383 0ef8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11384 0efa 032B     		cmp	r3, #3
 11385 0efc EDD9     		bls	.L468
1536:..\src/command_processing.c ****                 
 11386              		.loc 1 1536 0 is_stmt 1
 11387 0efe FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11388 0f00 BB68     		ldr	r3, [r7, #8]	@ float
 11389 0f02 4FF08F41 		mov	r1, #1199570944
 11390 0f06 1846     		mov	r0, r3
 11391 0f08 FFF7FEFF 		bl	__aeabi_fmul
 11392 0f0c 0346     		mov	r3, r0
 11393 0f0e 1846     		mov	r0, r3
 11394 0f10 FFF7FEFF 		bl	__aeabi_f2iz
 11395 0f14 0146     		mov	r1, r0
 11396 0f16 444A     		ldr	r2, .L493
 11397 0f18 2346     		mov	r3, r4
 11398 0f1a DB00     		lsls	r3, r3, #3
 11399 0f1c 1B1B     		subs	r3, r3, r4
 11400 0f1e 1B01     		lsls	r3, r3, #4
 11401 0f20 1344     		add	r3, r3, r2
 11402 0f22 D433     		adds	r3, r3, #212
 11403 0f24 1960     		str	r1, [r3]
1538:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11404              		.loc 1 1538 0
 11405 0f26 434B     		ldr	r3, .L493+12
 11406 0f28 1B68     		ldr	r3, [r3]	@ float
 11407 0f2a FB60     		str	r3, [r7, #12]	@ float
1539:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11408              		.loc 1 1539 0
 11409 0f2c 0023     		movs	r3, #0
 11410 0f2e BB75     		strb	r3, [r7, #22]
 11411 0f30 0EE0     		b	.L469
 11412              	.L470:
1540:..\src/command_processing.c ****                 }
 11413              		.loc 1 1540 0 discriminator 3
 11414 0f32 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11415 0f34 C3F10303 		rsb	r3, r3, #3
 11416 0f38 07F10802 		add	r2, r7, #8
 11417 0f3c 1344     		add	r3, r3, r2
 11418 0f3e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11419 0f40 07F10C01 		add	r1, r7, #12
 11420 0f44 0A44     		add	r2, r2, r1
 11421 0f46 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11422 0f48 1A70     		strb	r2, [r3]
1539:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11423              		.loc 1 1539 0 discriminator 3
 11424 0f4a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11425 0f4c 0133     		adds	r3, r3, #1
 11426 0f4e BB75     		strb	r3, [r7, #22]
 11427              	.L469:
1539:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 260


 11428              		.loc 1 1539 0 is_stmt 0 discriminator 1
 11429 0f50 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11430 0f52 032B     		cmp	r3, #3
 11431 0f54 EDD9     		bls	.L470
1542:..\src/command_processing.c ****                 
 11432              		.loc 1 1542 0 is_stmt 1
 11433 0f56 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11434 0f58 BB68     		ldr	r3, [r7, #8]	@ float
 11435 0f5a 4FF08F41 		mov	r1, #1199570944
 11436 0f5e 1846     		mov	r0, r3
 11437 0f60 FFF7FEFF 		bl	__aeabi_fmul
 11438 0f64 0346     		mov	r3, r0
 11439 0f66 1846     		mov	r0, r3
 11440 0f68 FFF7FEFF 		bl	__aeabi_f2iz
 11441 0f6c 0146     		mov	r1, r0
 11442 0f6e 2E4A     		ldr	r2, .L493
 11443 0f70 2346     		mov	r3, r4
 11444 0f72 DB00     		lsls	r3, r3, #3
 11445 0f74 1B1B     		subs	r3, r3, r4
 11446 0f76 1B01     		lsls	r3, r3, #4
 11447 0f78 1344     		add	r3, r3, r2
 11448 0f7a D833     		adds	r3, r3, #216
 11449 0f7c 1960     		str	r1, [r3]
1544:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11450              		.loc 1 1544 0
 11451 0f7e 2E4B     		ldr	r3, .L493+16
 11452 0f80 1B68     		ldr	r3, [r3]	@ float
 11453 0f82 FB60     		str	r3, [r7, #12]	@ float
1545:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11454              		.loc 1 1545 0
 11455 0f84 0023     		movs	r3, #0
 11456 0f86 BB75     		strb	r3, [r7, #22]
 11457 0f88 0EE0     		b	.L471
 11458              	.L472:
1546:..\src/command_processing.c ****                 }
 11459              		.loc 1 1546 0 discriminator 3
 11460 0f8a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11461 0f8c C3F10303 		rsb	r3, r3, #3
 11462 0f90 07F10802 		add	r2, r7, #8
 11463 0f94 1344     		add	r3, r3, r2
 11464 0f96 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11465 0f98 07F10C01 		add	r1, r7, #12
 11466 0f9c 0A44     		add	r2, r2, r1
 11467 0f9e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11468 0fa0 1A70     		strb	r2, [r3]
1545:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11469              		.loc 1 1545 0 discriminator 3
 11470 0fa2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11471 0fa4 0133     		adds	r3, r3, #1
 11472 0fa6 BB75     		strb	r3, [r7, #22]
 11473              	.L471:
1545:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11474              		.loc 1 1545 0 is_stmt 0 discriminator 1
 11475 0fa8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11476 0faa 032B     		cmp	r3, #3
 11477 0fac EDD9     		bls	.L472
1548:..\src/command_processing.c ****             }            
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 261


 11478              		.loc 1 1548 0 is_stmt 1
 11479 0fae FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11480 0fb0 BB68     		ldr	r3, [r7, #8]	@ float
 11481 0fb2 4FF08F41 		mov	r1, #1199570944
 11482 0fb6 1846     		mov	r0, r3
 11483 0fb8 FFF7FEFF 		bl	__aeabi_fmul
 11484 0fbc 0346     		mov	r3, r0
 11485 0fbe 1846     		mov	r0, r3
 11486 0fc0 FFF7FEFF 		bl	__aeabi_f2iz
 11487 0fc4 0146     		mov	r1, r0
 11488 0fc6 184A     		ldr	r2, .L493
 11489 0fc8 2346     		mov	r3, r4
 11490 0fca DB00     		lsls	r3, r3, #3
 11491 0fcc 1B1B     		subs	r3, r3, r4
 11492 0fce 1B01     		lsls	r3, r3, #4
 11493 0fd0 1344     		add	r3, r3, r2
 11494 0fd2 DC33     		adds	r3, r3, #220
 11495 0fd4 1960     		str	r1, [r3]
 11496              		.loc 1 1550 0
 11497 0fd6 78E2     		b	.L419
 11498              	.L400:
1551:..\src/command_processing.c ****             
1552:..\src/command_processing.c ****         case 47:         // Second Motor Input mode
1553:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].input_mode = g_rx.buffer[3];
 11499              		.loc 1 1553 0
 11500 0fd8 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11501 0fda 184B     		ldr	r3, .L493+20
 11502 0fdc D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 11503 0fde 1249     		ldr	r1, .L493
 11504 0fe0 1346     		mov	r3, r2
 11505 0fe2 DB00     		lsls	r3, r3, #3
 11506 0fe4 9B1A     		subs	r3, r3, r2
 11507 0fe6 1B01     		lsls	r3, r3, #4
 11508 0fe8 0B44     		add	r3, r3, r1
 11509 0fea 03F58773 		add	r3, r3, #270
 11510 0fee 0246     		mov	r2, r0
 11511 0ff0 1A70     		strb	r2, [r3]
1554:..\src/command_processing.c ****             
1555:..\src/command_processing.c ****             // Hold the actual position
1556:..\src/command_processing.c ****             g_refNew[SECOND_MOTOR_IDX].pos = g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].pos
 11512              		.loc 1 1556 0
 11513 0ff2 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11514 0ff4 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11515 0ff6 0C48     		ldr	r0, .L493
 11516 0ff8 1346     		mov	r3, r2
 11517 0ffa DB00     		lsls	r3, r3, #3
 11518 0ffc 9B1A     		subs	r3, r3, r2
 11519 0ffe 1B01     		lsls	r3, r3, #4
 11520 1000 0344     		add	r3, r3, r0
 11521 1002 03F58873 		add	r3, r3, #272
 11522 1006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11523 1008 1846     		mov	r0, r3
 11524 100a 0D4A     		ldr	r2, .L493+24
 11525 100c 3423     		movs	r3, #52
 11526 100e 03FB00F3 		mul	r3, r3, r0
 11527 1012 1344     		add	r3, r3, r2
 11528 1014 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 262


 11529 1016 0B48     		ldr	r0, .L493+28
 11530 1018 0B01     		lsls	r3, r1, #4
 11531 101a 0344     		add	r3, r3, r0
 11532 101c 1A60     		str	r2, [r3]
1557:..\src/command_processing.c ****             break;   
 11533              		.loc 1 1557 0
 11534 101e 54E2     		b	.L419
 11535              	.L401:
1558:..\src/command_processing.c **** 
1559:..\src/command_processing.c ****         case 50:         // Second Motor Measurement Offset
1560:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
 11536              		.loc 1 1560 0
 11537 1020 0023     		movs	r3, #0
 11538 1022 FB75     		strb	r3, [r7, #23]
 11539 1024 8FE0     		b	.L473
 11540              	.L494:
 11541 1026 00BF     		.align	2
 11542              	.L493:
 11543 1028 00000000 		.word	g_mem
 11544 102c 00000000 		.word	c_mem
 11545 1030 03000000 		.word	g_rx+3
 11546 1034 07000000 		.word	g_rx+7
 11547 1038 0B000000 		.word	g_rx+11
 11548 103c 00000000 		.word	g_rx
 11549 1040 00000000 		.word	g_meas
 11550 1044 00000000 		.word	g_refNew
 11551              	.L474:
1561:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 11552              		.loc 1 1561 0 discriminator 3
 11553 1048 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11554 104a 8A49     		ldr	r1, .L495
 11555 104c 1346     		mov	r3, r2
 11556 104e DB00     		lsls	r3, r3, #3
 11557 1050 9B1A     		subs	r3, r3, r2
 11558 1052 1B01     		lsls	r3, r3, #4
 11559 1054 0B44     		add	r3, r3, r1
 11560 1056 03F58873 		add	r3, r3, #272
 11561 105a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11562 105c 1C46     		mov	r4, r3
 11563 105e FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 11564 1060 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11565 1062 5B00     		lsls	r3, r3, #1
 11566 1064 0333     		adds	r3, r3, #3
 11567 1066 8449     		ldr	r1, .L495+4
 11568 1068 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11569 106a 1B02     		lsls	r3, r3, #8
 11570 106c 19B2     		sxth	r1, r3
 11571 106e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11572 1070 0233     		adds	r3, r3, #2
 11573 1072 5B00     		lsls	r3, r3, #1
 11574 1074 8048     		ldr	r0, .L495+4
 11575 1076 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 11576 1078 1BB2     		sxth	r3, r3
 11577 107a 0B43     		orrs	r3, r3, r1
 11578 107c 1BB2     		sxth	r3, r3
 11579 107e 1846     		mov	r0, r3
 11580 1080 7C49     		ldr	r1, .L495
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 263


 11581 1082 2346     		mov	r3, r4
 11582 1084 5B00     		lsls	r3, r3, #1
 11583 1086 2344     		add	r3, r3, r4
 11584 1088 9B00     		lsls	r3, r3, #2
 11585 108a 1344     		add	r3, r3, r2
 11586 108c 6633     		adds	r3, r3, #102
 11587 108e 41F82300 		str	r0, [r1, r3, lsl #2]
1562:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.mo
 11588              		.loc 1 1562 0 discriminator 3
 11589 1092 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11590 1094 7749     		ldr	r1, .L495
 11591 1096 1346     		mov	r3, r2
 11592 1098 DB00     		lsls	r3, r3, #3
 11593 109a 9B1A     		subs	r3, r3, r2
 11594 109c 1B01     		lsls	r3, r3, #4
 11595 109e 0B44     		add	r3, r3, r1
 11596 10a0 03F58873 		add	r3, r3, #272
 11597 10a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11598 10a6 1D46     		mov	r5, r3
 11599 10a8 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 11600 10aa FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11601 10ac 7148     		ldr	r0, .L495
 11602 10ae 1346     		mov	r3, r2
 11603 10b0 DB00     		lsls	r3, r3, #3
 11604 10b2 9B1A     		subs	r3, r3, r2
 11605 10b4 1B01     		lsls	r3, r3, #4
 11606 10b6 0344     		add	r3, r3, r0
 11607 10b8 03F58873 		add	r3, r3, #272
 11608 10bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11609 10be 1C46     		mov	r4, r3
 11610 10c0 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 11611 10c2 6C48     		ldr	r0, .L495
 11612 10c4 2346     		mov	r3, r4
 11613 10c6 5B00     		lsls	r3, r3, #1
 11614 10c8 2344     		add	r3, r3, r4
 11615 10ca 9B00     		lsls	r3, r3, #2
 11616 10cc 1344     		add	r3, r3, r2
 11617 10ce 6633     		adds	r3, r3, #102
 11618 10d0 50F82300 		ldr	r0, [r0, r3, lsl #2]
 11619 10d4 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11620 10d6 674C     		ldr	r4, .L495
 11621 10d8 1346     		mov	r3, r2
 11622 10da DB00     		lsls	r3, r3, #3
 11623 10dc 9B1A     		subs	r3, r3, r2
 11624 10de 1B01     		lsls	r3, r3, #4
 11625 10e0 2344     		add	r3, r3, r4
 11626 10e2 03F58873 		add	r3, r3, #272
 11627 10e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11628 10e8 1E46     		mov	r6, r3
 11629 10ea FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 11630 10ec 614C     		ldr	r4, .L495
 11631 10ee 3346     		mov	r3, r6
 11632 10f0 5B00     		lsls	r3, r3, #1
 11633 10f2 3344     		add	r3, r3, r6
 11634 10f4 1B01     		lsls	r3, r3, #4
 11635 10f6 2344     		add	r3, r3, r4
 11636 10f8 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 264


 11637 10fa 03F29513 		addw	r3, r3, #405
 11638 10fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11639 1100 00FA03F2 		lsl	r2, r0, r3
 11640 1104 5B48     		ldr	r0, .L495
 11641 1106 2B46     		mov	r3, r5
 11642 1108 5B00     		lsls	r3, r3, #1
 11643 110a 2B44     		add	r3, r3, r5
 11644 110c 9B00     		lsls	r3, r3, #2
 11645 110e 0B44     		add	r3, r3, r1
 11646 1110 6633     		adds	r3, r3, #102
 11647 1112 40F82320 		str	r2, [r0, r3, lsl #2]
1563:..\src/command_processing.c **** 
1564:..\src/command_processing.c ****                 g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].rot[i] = 0;
 11648              		.loc 1 1564 0 discriminator 3
 11649 1116 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11650 1118 5649     		ldr	r1, .L495
 11651 111a 1346     		mov	r3, r2
 11652 111c DB00     		lsls	r3, r3, #3
 11653 111e 9B1A     		subs	r3, r3, r2
 11654 1120 1B01     		lsls	r3, r3, #4
 11655 1122 0B44     		add	r3, r3, r1
 11656 1124 03F58873 		add	r3, r3, #272
 11657 1128 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11658 112a 1846     		mov	r0, r3
 11659 112c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11660 112e 5349     		ldr	r1, .L495+8
 11661 1130 3422     		movs	r2, #52
 11662 1132 02FB00F2 		mul	r2, r2, r0
 11663 1136 0A44     		add	r2, r2, r1
 11664 1138 1344     		add	r3, r3, r2
 11665 113a 1833     		adds	r3, r3, #24
 11666 113c 0022     		movs	r2, #0
 11667 113e 1A70     		strb	r2, [r3]
1560:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 11668              		.loc 1 1560 0 discriminator 3
 11669 1140 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11670 1142 0133     		adds	r3, r3, #1
 11671 1144 FB75     		strb	r3, [r7, #23]
 11672              	.L473:
1560:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 11673              		.loc 1 1560 0 is_stmt 0 discriminator 1
 11674 1146 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11675 1148 022B     		cmp	r3, #2
 11676 114a 7FF67DAF 		bls	.L474
1565:..\src/command_processing.c ****             }
1566:..\src/command_processing.c ****             reset_last_value_flag[SECOND_MOTOR_IDX] = 1;
 11677              		.loc 1 1566 0 is_stmt 1
 11678 114e FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 11679 1150 4B4A     		ldr	r2, .L495+12
 11680 1152 0121     		movs	r1, #1
 11681 1154 D154     		strb	r1, [r2, r3]
1567:..\src/command_processing.c ****             break;
 11682              		.loc 1 1567 0
 11683 1156 B8E1     		b	.L419
 11684              	.L402:
1568:..\src/command_processing.c ****     
1569:..\src/command_processing.c ****         case 53:        // Second Motor Position limits
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 265


1570:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]
 11685              		.loc 1 1570 0
 11686 1158 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11687 115a 474B     		ldr	r3, .L495+4
 11688 115c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 11689 115e 1906     		lsls	r1, r3, #24
 11690 1160 454B     		ldr	r3, .L495+4
 11691 1162 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 11692 1164 1B04     		lsls	r3, r3, #16
 11693 1166 1943     		orrs	r1, r1, r3
 11694 1168 434B     		ldr	r3, .L495+4
 11695 116a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 11696 116c 1B02     		lsls	r3, r3, #8
 11697 116e 0B43     		orrs	r3, r3, r1
 11698 1170 4149     		ldr	r1, .L495+4
 11699 1172 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 11700 1174 1943     		orrs	r1, r1, r3
 11701 1176 3F48     		ldr	r0, .L495
 11702 1178 1346     		mov	r3, r2
 11703 117a DB00     		lsls	r3, r3, #3
 11704 117c 9B1A     		subs	r3, r3, r2
 11705 117e 1B01     		lsls	r3, r3, #4
 11706 1180 0344     		add	r3, r3, r0
 11707 1182 E433     		adds	r3, r3, #228
 11708 1184 1960     		str	r1, [r3]
1571:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]
 11709              		.loc 1 1571 0
 11710 1186 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11711 1188 3B4B     		ldr	r3, .L495+4
 11712 118a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 11713 118c 1906     		lsls	r1, r3, #24
 11714 118e 3A4B     		ldr	r3, .L495+4
 11715 1190 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 11716 1192 1B04     		lsls	r3, r3, #16
 11717 1194 1943     		orrs	r1, r1, r3
 11718 1196 384B     		ldr	r3, .L495+4
 11719 1198 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 11720 119a 1B02     		lsls	r3, r3, #8
 11721 119c 0B43     		orrs	r3, r3, r1
 11722 119e 3649     		ldr	r1, .L495+4
 11723 11a0 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 11724 11a2 1943     		orrs	r1, r1, r3
 11725 11a4 3348     		ldr	r0, .L495
 11726 11a6 1346     		mov	r3, r2
 11727 11a8 DB00     		lsls	r3, r3, #3
 11728 11aa 9B1A     		subs	r3, r3, r2
 11729 11ac 1B01     		lsls	r3, r3, #4
 11730 11ae 0344     		add	r3, r3, r0
 11731 11b0 E833     		adds	r3, r3, #232
 11732 11b2 1960     		str	r1, [r3]
1572:..\src/command_processing.c **** 
1573:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf <
 11733              		.loc 1 1573 0
 11734 11b4 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11735 11b6 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11736 11b8 2E48     		ldr	r0, .L495
 11737 11ba 0B46     		mov	r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 266


 11738 11bc DB00     		lsls	r3, r3, #3
 11739 11be 5B1A     		subs	r3, r3, r1
 11740 11c0 1B01     		lsls	r3, r3, #4
 11741 11c2 0344     		add	r3, r3, r0
 11742 11c4 E433     		adds	r3, r3, #228
 11743 11c6 1868     		ldr	r0, [r3]
 11744 11c8 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11745 11ca 2A4C     		ldr	r4, .L495
 11746 11cc 0B46     		mov	r3, r1
 11747 11ce DB00     		lsls	r3, r3, #3
 11748 11d0 5B1A     		subs	r3, r3, r1
 11749 11d2 1B01     		lsls	r3, r3, #4
 11750 11d4 2344     		add	r3, r3, r4
 11751 11d6 03F58873 		add	r3, r3, #272
 11752 11da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11753 11dc 1C46     		mov	r4, r3
 11754 11de 2549     		ldr	r1, .L495
 11755 11e0 2346     		mov	r3, r4
 11756 11e2 5B00     		lsls	r3, r3, #1
 11757 11e4 2344     		add	r3, r3, r4
 11758 11e6 1B01     		lsls	r3, r3, #4
 11759 11e8 0B44     		add	r3, r3, r1
 11760 11ea 03F29513 		addw	r3, r3, #405
 11761 11ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11762 11f0 00FA03F1 		lsl	r1, r0, r3
 11763 11f4 1F48     		ldr	r0, .L495
 11764 11f6 1346     		mov	r3, r2
 11765 11f8 DB00     		lsls	r3, r3, #3
 11766 11fa 9B1A     		subs	r3, r3, r2
 11767 11fc 1B01     		lsls	r3, r3, #4
 11768 11fe 0344     		add	r3, r3, r0
 11769 1200 E433     		adds	r3, r3, #228
 11770 1202 1960     		str	r1, [r3]
1574:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup <
 11771              		.loc 1 1574 0
 11772 1204 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11773 1206 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11774 1208 1A48     		ldr	r0, .L495
 11775 120a 0B46     		mov	r3, r1
 11776 120c DB00     		lsls	r3, r3, #3
 11777 120e 5B1A     		subs	r3, r3, r1
 11778 1210 1B01     		lsls	r3, r3, #4
 11779 1212 0344     		add	r3, r3, r0
 11780 1214 E833     		adds	r3, r3, #232
 11781 1216 1868     		ldr	r0, [r3]
 11782 1218 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11783 121a 164C     		ldr	r4, .L495
 11784 121c 0B46     		mov	r3, r1
 11785 121e DB00     		lsls	r3, r3, #3
 11786 1220 5B1A     		subs	r3, r3, r1
 11787 1222 1B01     		lsls	r3, r3, #4
 11788 1224 2344     		add	r3, r3, r4
 11789 1226 03F58873 		add	r3, r3, #272
 11790 122a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11791 122c 1C46     		mov	r4, r3
 11792 122e 1149     		ldr	r1, .L495
 11793 1230 2346     		mov	r3, r4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 267


 11794 1232 5B00     		lsls	r3, r3, #1
 11795 1234 2344     		add	r3, r3, r4
 11796 1236 1B01     		lsls	r3, r3, #4
 11797 1238 0B44     		add	r3, r3, r1
 11798 123a 03F29513 		addw	r3, r3, #405
 11799 123e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11800 1240 00FA03F1 		lsl	r1, r0, r3
 11801 1244 0B48     		ldr	r0, .L495
 11802 1246 1346     		mov	r3, r2
 11803 1248 DB00     		lsls	r3, r3, #3
 11804 124a 9B1A     		subs	r3, r3, r2
 11805 124c 1B01     		lsls	r3, r3, #4
 11806 124e 0344     		add	r3, r3, r0
 11807 1250 E833     		adds	r3, r3, #232
 11808 1252 1960     		str	r1, [r3]
1575:..\src/command_processing.c ****             break;
 11809              		.loc 1 1575 0
 11810 1254 39E1     		b	.L419
 11811              	.L403:
1576:..\src/command_processing.c ****             
1577:..\src/command_processing.c ****         case 61:        // Second Motor Driver Type
1578:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 11812              		.loc 1 1578 0
 11813 1256 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11814 1258 074B     		ldr	r3, .L495+4
 11815 125a D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 11816 125c 0549     		ldr	r1, .L495
 11817 125e 1346     		mov	r3, r2
 11818 1260 DB00     		lsls	r3, r3, #3
 11819 1262 9B1A     		subs	r3, r3, r2
 11820 1264 1B01     		lsls	r3, r3, #4
 11821 1266 0B44     		add	r3, r3, r1
 11822 1268 E233     		adds	r3, r3, #226
 11823 126a 0246     		mov	r2, r0
 11824 126c 1A70     		strb	r2, [r3]
1579:..\src/command_processing.c ****             set_motor_driver_type();
 11825              		.loc 1 1579 0
 11826 126e FFF7FEFF 		bl	set_motor_driver_type
1580:..\src/command_processing.c ****             break;
 11827              		.loc 1 1580 0
 11828 1272 2AE1     		b	.L419
 11829              	.L496:
 11830              		.align	2
 11831              	.L495:
 11832 1274 00000000 		.word	g_mem
 11833 1278 00000000 		.word	g_rx
 11834 127c 00000000 		.word	g_meas
 11835 1280 00000000 		.word	reset_last_value_flag
 11836              	.L404:
1581:..\src/command_processing.c **** 
1582:..\src/command_processing.c ****         case 75:        // Device type
1583:..\src/command_processing.c ****             g_mem.dev.dev_type = g_rx.buffer[3];
 11837              		.loc 1 1583 0
 11838 1284 934B     		ldr	r3, .L497
 11839 1286 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 11840 1288 934B     		ldr	r3, .L497+4
 11841 128a 83F8AC20 		strb	r2, [r3, #172]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 268


1584:..\src/command_processing.c ****             
1585:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    // change also gears parameters
 11842              		.loc 1 1585 0
 11843 128e 924B     		ldr	r3, .L497+4
 11844 1290 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 11845 1294 002B     		cmp	r3, #0
 11846 1296 40F0A480 		bne	.L475
1586:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 11847              		.loc 1 1586 0
 11848 129a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11849 129c 8E49     		ldr	r1, .L497+4
 11850 129e 1346     		mov	r3, r2
 11851 12a0 DB00     		lsls	r3, r3, #3
 11852 12a2 9B1A     		subs	r3, r3, r2
 11853 12a4 1B01     		lsls	r3, r3, #4
 11854 12a6 0B44     		add	r3, r3, r1
 11855 12a8 03F58873 		add	r3, r3, #272
 11856 12ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11857 12ae 1946     		mov	r1, r3
 11858 12b0 894A     		ldr	r2, .L497+4
 11859 12b2 0B46     		mov	r3, r1
 11860 12b4 5B00     		lsls	r3, r3, #1
 11861 12b6 0B44     		add	r3, r3, r1
 11862 12b8 1B01     		lsls	r3, r3, #4
 11863 12ba 1344     		add	r3, r3, r2
 11864 12bc 03F5D873 		add	r3, r3, #432
 11865 12c0 0122     		movs	r2, #1
 11866 12c2 1A70     		strb	r2, [r3]
1587:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 11867              		.loc 1 1587 0
 11868 12c4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11869 12c6 8449     		ldr	r1, .L497+4
 11870 12c8 1346     		mov	r3, r2
 11871 12ca DB00     		lsls	r3, r3, #3
 11872 12cc 9B1A     		subs	r3, r3, r2
 11873 12ce 1B01     		lsls	r3, r3, #4
 11874 12d0 0B44     		add	r3, r3, r1
 11875 12d2 03F58873 		add	r3, r3, #272
 11876 12d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11877 12d8 1946     		mov	r1, r3
 11878 12da 7F4A     		ldr	r2, .L497+4
 11879 12dc 0B46     		mov	r3, r1
 11880 12de 5B00     		lsls	r3, r3, #1
 11881 12e0 0B44     		add	r3, r3, r1
 11882 12e2 1B01     		lsls	r3, r3, #4
 11883 12e4 1344     		add	r3, r3, r2
 11884 12e6 03F2B513 		addw	r3, r3, #437
 11885 12ea 2322     		movs	r2, #35
 11886 12ec 1A70     		strb	r2, [r3]
1588:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 11887              		.loc 1 1588 0
 11888 12ee 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11889 12f0 7949     		ldr	r1, .L497+4
 11890 12f2 1346     		mov	r3, r2
 11891 12f4 DB00     		lsls	r3, r3, #3
 11892 12f6 9B1A     		subs	r3, r3, r2
 11893 12f8 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 269


 11894 12fa 0B44     		add	r3, r3, r1
 11895 12fc 03F58873 		add	r3, r3, #272
 11896 1300 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11897 1302 1946     		mov	r1, r3
 11898 1304 744A     		ldr	r2, .L497+4
 11899 1306 0B46     		mov	r3, r1
 11900 1308 5B00     		lsls	r3, r3, #1
 11901 130a 0B44     		add	r3, r3, r1
 11902 130c 1B01     		lsls	r3, r3, #4
 11903 130e 1344     		add	r3, r3, r2
 11904 1310 03F5DB73 		add	r3, r3, #438
 11905 1314 0322     		movs	r2, #3
 11906 1316 1A70     		strb	r2, [r3]
1589:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 11907              		.loc 1 1589 0
 11908 1318 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11909 131a 6F49     		ldr	r1, .L497+4
 11910 131c 1346     		mov	r3, r2
 11911 131e DB00     		lsls	r3, r3, #3
 11912 1320 9B1A     		subs	r3, r3, r2
 11913 1322 1B01     		lsls	r3, r3, #4
 11914 1324 0B44     		add	r3, r3, r1
 11915 1326 03F58873 		add	r3, r3, #272
 11916 132a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11917 132c 1946     		mov	r1, r3
 11918 132e 6A4A     		ldr	r2, .L497+4
 11919 1330 0B46     		mov	r3, r1
 11920 1332 5B00     		lsls	r3, r3, #1
 11921 1334 0B44     		add	r3, r3, r1
 11922 1336 1B01     		lsls	r3, r3, #4
 11923 1338 1344     		add	r3, r3, r2
 11924 133a 03F2B713 		addw	r3, r3, #439
 11925 133e FF22     		movs	r2, #255
 11926 1340 1A70     		strb	r2, [r3]
1590:..\src/command_processing.c ****                 
1591:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1592:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 11927              		.loc 1 1592 0
 11928 1342 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11929 1344 644B     		ldr	r3, .L497+4
 11930 1346 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 11931 134a 6349     		ldr	r1, .L497+4
 11932 134c 1346     		mov	r3, r2
 11933 134e DB00     		lsls	r3, r3, #3
 11934 1350 9B1A     		subs	r3, r3, r2
 11935 1352 1B01     		lsls	r3, r3, #4
 11936 1354 0B44     		add	r3, r3, r1
 11937 1356 03F58873 		add	r3, r3, #272
 11938 135a 0246     		mov	r2, r0
 11939 135c 1A70     		strb	r2, [r3]
1593:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 11940              		.loc 1 1593 0
 11941 135e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11942 1360 5D49     		ldr	r1, .L497+4
 11943 1362 1346     		mov	r3, r2
 11944 1364 DB00     		lsls	r3, r3, #3
 11945 1366 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 270


 11946 1368 1B01     		lsls	r3, r3, #4
 11947 136a 0B44     		add	r3, r3, r1
 11948 136c 03F21113 		addw	r3, r3, #273
 11949 1370 0122     		movs	r2, #1
 11950 1372 1A70     		strb	r2, [r3]
1594:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 11951              		.loc 1 1594 0
 11952 1374 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11953 1376 5849     		ldr	r1, .L497+4
 11954 1378 1346     		mov	r3, r2
 11955 137a DB00     		lsls	r3, r3, #3
 11956 137c 9B1A     		subs	r3, r3, r2
 11957 137e 1B01     		lsls	r3, r3, #4
 11958 1380 0B44     		add	r3, r3, r1
 11959 1382 03F58973 		add	r3, r3, #274
 11960 1386 0122     		movs	r2, #1
 11961 1388 1A70     		strb	r2, [r3]
1595:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 11962              		.loc 1 1595 0
 11963 138a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11964 138c 5249     		ldr	r1, .L497+4
 11965 138e 1346     		mov	r3, r2
 11966 1390 DB00     		lsls	r3, r3, #3
 11967 1392 9B1A     		subs	r3, r3, r2
 11968 1394 1B01     		lsls	r3, r3, #4
 11969 1396 0B44     		add	r3, r3, r1
 11970 1398 E433     		adds	r3, r3, #228
 11971 139a 0022     		movs	r2, #0
 11972 139c 1A60     		str	r2, [r3]
1596:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[MOTOR_ID
 11973              		.loc 1 1596 0
 11974 139e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11975 13a0 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 11976 13a2 4D48     		ldr	r0, .L497+4
 11977 13a4 0B46     		mov	r3, r1
 11978 13a6 DB00     		lsls	r3, r3, #3
 11979 13a8 5B1A     		subs	r3, r3, r1
 11980 13aa 1B01     		lsls	r3, r3, #4
 11981 13ac 0344     		add	r3, r3, r0
 11982 13ae 03F58873 		add	r3, r3, #272
 11983 13b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11984 13b4 1846     		mov	r0, r3
 11985 13b6 4849     		ldr	r1, .L497+4
 11986 13b8 0346     		mov	r3, r0
 11987 13ba 5B00     		lsls	r3, r3, #1
 11988 13bc 0344     		add	r3, r3, r0
 11989 13be 1B01     		lsls	r3, r3, #4
 11990 13c0 0B44     		add	r3, r3, r1
 11991 13c2 03F29513 		addw	r3, r3, #405
 11992 13c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11993 13c8 1946     		mov	r1, r3
 11994 13ca 4FF47A53 		mov	r3, #16000
 11995 13ce 03FA01F1 		lsl	r1, r3, r1
 11996 13d2 4148     		ldr	r0, .L497+4
 11997 13d4 1346     		mov	r3, r2
 11998 13d6 DB00     		lsls	r3, r3, #3
 11999 13d8 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 271


 12000 13da 1B01     		lsls	r3, r3, #4
 12001 13dc 0344     		add	r3, r3, r0
 12002 13de E833     		adds	r3, r3, #232
 12003 13e0 1960     		str	r1, [r3]
 12004              	.L475:
1597:..\src/command_processing.c ****             }      
1598:..\src/command_processing.c ****             
1599:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_2_MOTORS){    // activate also 2nd motor and double_
 12005              		.loc 1 1599 0
 12006 13e2 3D4B     		ldr	r3, .L497+4
 12007 13e4 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 12008 13e8 042B     		cmp	r3, #4
 12009 13ea 6DD1     		bne	.L484
1600:..\src/command_processing.c ****                 g_mem.dev.use_2nd_motor_flag = TRUE;
 12010              		.loc 1 1600 0
 12011 13ec 3A4B     		ldr	r3, .L497+4
 12012 13ee 0122     		movs	r2, #1
 12013 13f0 83F8A920 		strb	r2, [r3, #169]
1601:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 12014              		.loc 1 1601 0
 12015 13f4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 12016 13f6 3849     		ldr	r1, .L497+4
 12017 13f8 1346     		mov	r3, r2
 12018 13fa DB00     		lsls	r3, r3, #3
 12019 13fc 9B1A     		subs	r3, r3, r2
 12020 13fe 1B01     		lsls	r3, r3, #4
 12021 1400 0B44     		add	r3, r3, r1
 12022 1402 03F58873 		add	r3, r3, #272
 12023 1406 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12024 1408 1946     		mov	r1, r3
 12025 140a 334A     		ldr	r2, .L497+4
 12026 140c 0B46     		mov	r3, r1
 12027 140e 5B00     		lsls	r3, r3, #1
 12028 1410 0B44     		add	r3, r3, r1
 12029 1412 1B01     		lsls	r3, r3, #4
 12030 1414 1344     		add	r3, r3, r2
 12031 1416 03F5D873 		add	r3, r3, #432
 12032 141a 0122     		movs	r2, #1
 12033 141c 1A70     		strb	r2, [r3]
1602:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 12034              		.loc 1 1602 0
 12035 141e FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 12036 1420 2D49     		ldr	r1, .L497+4
 12037 1422 1346     		mov	r3, r2
 12038 1424 DB00     		lsls	r3, r3, #3
 12039 1426 9B1A     		subs	r3, r3, r2
 12040 1428 1B01     		lsls	r3, r3, #4
 12041 142a 0B44     		add	r3, r3, r1
 12042 142c 03F58873 		add	r3, r3, #272
 12043 1430 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12044 1432 1946     		mov	r1, r3
 12045 1434 284A     		ldr	r2, .L497+4
 12046 1436 0B46     		mov	r3, r1
 12047 1438 5B00     		lsls	r3, r3, #1
 12048 143a 0B44     		add	r3, r3, r1
 12049 143c 1B01     		lsls	r3, r3, #4
 12050 143e 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 272


 12051 1440 03F5D873 		add	r3, r3, #432
 12052 1444 0122     		movs	r2, #1
 12053 1446 1A70     		strb	r2, [r3]
1603:..\src/command_processing.c ****             /*    
1604:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
1605:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)18000 << g_mem.enc[g_mem.motor[MOTOR_ID
1606:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = ((int32)(-25000)) << g_mem.enc[g_mem.mo
1607:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = 0;
1608:..\src/command_processing.c ****             */    
1609:..\src/command_processing.c ****                 for (i=0; i< NUM_OF_MOTORS; i++) {                     // Maxon DCX16S
 12054              		.loc 1 1609 0
 12055 1448 0023     		movs	r3, #0
 12056 144a FB75     		strb	r3, [r7, #23]
 12057 144c 2EE0     		b	.L477
 12058              	.L478:
1610:..\src/command_processing.c ****                     g_mem.motor[i].current_limit = 800;                // [mA]
 12059              		.loc 1 1610 0 discriminator 3
 12060 144e FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 12061 1450 2149     		ldr	r1, .L497+4
 12062 1452 1346     		mov	r3, r2
 12063 1454 DB00     		lsls	r3, r3, #3
 12064 1456 9B1A     		subs	r3, r3, r2
 12065 1458 1B01     		lsls	r3, r3, #4
 12066 145a 0B44     		add	r3, r3, r1
 12067 145c 03F58673 		add	r3, r3, #268
 12068 1460 4FF44872 		mov	r2, #800
 12069 1464 1A80     		strh	r2, [r3]	@ movhi
1611:..\src/command_processing.c ****                     g_mem.motor[i].k_p           = 0.12 * 65536;
 12070              		.loc 1 1611 0 discriminator 3
 12071 1466 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 12072 1468 1B49     		ldr	r1, .L497+4
 12073 146a 1346     		mov	r3, r2
 12074 146c DB00     		lsls	r3, r3, #3
 12075 146e 9B1A     		subs	r3, r3, r2
 12076 1470 1B01     		lsls	r3, r3, #4
 12077 1472 0B44     		add	r3, r3, r1
 12078 1474 B033     		adds	r3, r3, #176
 12079 1476 41F6B862 		movw	r2, #7864
 12080 147a 1A60     		str	r2, [r3]
1612:..\src/command_processing.c ****                     g_mem.motor[i].k_i           =    0 * 65536;
 12081              		.loc 1 1612 0 discriminator 3
 12082 147c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 12083 147e 1649     		ldr	r1, .L497+4
 12084 1480 1346     		mov	r3, r2
 12085 1482 DB00     		lsls	r3, r3, #3
 12086 1484 9B1A     		subs	r3, r3, r2
 12087 1486 1B01     		lsls	r3, r3, #4
 12088 1488 0B44     		add	r3, r3, r1
 12089 148a B433     		adds	r3, r3, #180
 12090 148c 0022     		movs	r2, #0
 12091 148e 1A60     		str	r2, [r3]
1613:..\src/command_processing.c ****                     g_mem.motor[i].k_d           = 0.05 * 65536;
 12092              		.loc 1 1613 0 discriminator 3
 12093 1490 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 12094 1492 1149     		ldr	r1, .L497+4
 12095 1494 1346     		mov	r3, r2
 12096 1496 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 273


 12097 1498 9B1A     		subs	r3, r3, r2
 12098 149a 1B01     		lsls	r3, r3, #4
 12099 149c 0B44     		add	r3, r3, r1
 12100 149e B833     		adds	r3, r3, #184
 12101 14a0 40F6CC42 		movw	r2, #3276
 12102 14a4 1A60     		str	r2, [r3]
1609:..\src/command_processing.c ****                     g_mem.motor[i].current_limit = 800;                // [mA]
 12103              		.loc 1 1609 0 discriminator 3
 12104 14a6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 12105 14a8 0133     		adds	r3, r3, #1
 12106 14aa FB75     		strb	r3, [r7, #23]
 12107              	.L477:
1609:..\src/command_processing.c ****                     g_mem.motor[i].current_limit = 800;                // [mA]
 12108              		.loc 1 1609 0 is_stmt 0 discriminator 1
 12109 14ac FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 12110 14ae 012B     		cmp	r3, #1
 12111 14b0 CDD9     		bls	.L478
1614:..\src/command_processing.c ****                 }
1615:..\src/command_processing.c ****             }      
1616:..\src/command_processing.c ****             
1617:..\src/command_processing.c ****             break;
 12112              		.loc 1 1617 0 is_stmt 1
 12113 14b2 09E0     		b	.L484
 12114              	.L479:
1618:..\src/command_processing.c ****             
1619:..\src/command_processing.c ****         default:
1620:..\src/command_processing.c ****             break;
 12115              		.loc 1 1620 0
 12116 14b4 00BF     		nop
 12117 14b6 08E0     		b	.L419
 12118              	.L480:
1407:..\src/command_processing.c ****             
 12119              		.loc 1 1407 0
 12120 14b8 00BF     		nop
 12121 14ba 06E0     		b	.L419
 12122              	.L481:
1435:..\src/command_processing.c **** 
 12123              		.loc 1 1435 0
 12124 14bc 00BF     		nop
 12125 14be 04E0     		b	.L419
 12126              	.L482:
1453:..\src/command_processing.c ****             
 12127              		.loc 1 1453 0
 12128 14c0 00BF     		nop
 12129 14c2 02E0     		b	.L419
 12130              	.L483:
1463:..\src/command_processing.c ****            
 12131              		.loc 1 1463 0
 12132 14c4 00BF     		nop
 12133 14c6 00E0     		b	.L419
 12134              	.L484:
1617:..\src/command_processing.c ****             
 12135              		.loc 1 1617 0
 12136 14c8 00BF     		nop
 12137              	.L419:
1621:..\src/command_processing.c ****     }
1622:..\src/command_processing.c **** }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 274


 12138              		.loc 1 1622 0 discriminator 1
 12139 14ca 00BF     		nop
 12140 14cc 1C37     		adds	r7, r7, #28
 12141              		.cfi_def_cfa_offset 20
 12142 14ce BD46     		mov	sp, r7
 12143              		.cfi_def_cfa_register 13
 12144              		@ sp needed
 12145 14d0 F0BD     		pop	{r4, r5, r6, r7, pc}
 12146              	.L498:
 12147 14d2 00BF     		.align	2
 12148              	.L497:
 12149 14d4 00000000 		.word	g_rx
 12150 14d8 00000000 		.word	g_mem
 12151              		.cfi_endproc
 12152              	.LFE69:
 12153              		.size	set_custom_param, .-set_custom_param
 12154              		.section	.rodata
 12155 10c2 0000     		.align	2
 12156              	.LC145:
 12157 10c4 506F7274 		.ascii	"Port %u ID:\000"
 12157      20257520 
 12157      49443A00 
 12158              		.align	2
 12159              	.LC146:
 12160 10d0 2575202D 		.ascii	"%u - Device ID:\000"
 12160      20446576 
 12160      69636520 
 12160      49443A00 
 12161              		.align	2
 12162              	.LC147:
 12163 10e0 2575202D 		.ascii	"%u - IMU %d configuration:\000"
 12163      20494D55 
 12163      20256420 
 12163      636F6E66 
 12163      69677572 
 12164 10fb 00       		.align	2
 12165              	.LC148:
 12166 10fc 2575202D 		.ascii	"%u - SPI read delay:\000"
 12166      20535049 
 12166      20726561 
 12166      64206465 
 12166      6C61793A 
 12167 1111 000000   		.align	2
 12168              	.LC149:
 12169 1114 204E6F6E 		.ascii	" None\000"
 12169      6500
 12170 111a 0000     		.align	2
 12171              	.LC150:
 12172 111c 204C6F77 		.ascii	" Low\000"
 12172      00
 12173 1121 000000   		.align	2
 12174              	.LC151:
 12175 1124 20486967 		.ascii	" High\000"
 12175      6800
 12176 112a 0000     		.align	2
 12177              	.LC143:
 12178 112c 4E756D62 		.ascii	"Number of connected IMUs:\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 275


 12178      6572206F 
 12178      6620636F 
 12178      6E6E6563 
 12178      74656420 
 12179 1146 0000     		.align	2
 12180              	.LC144:
 12181 1148 4D616720 		.ascii	"Mag cal parameters:\000"
 12181      63616C20 
 12181      70617261 
 12181      6D657465 
 12181      72733A00 
 12182              		.section	.text.get_IMU_param_list,"ax",%progbits
 12183              		.align	2
 12184              		.global	get_IMU_param_list
 12185              		.thumb
 12186              		.thumb_func
 12187              		.type	get_IMU_param_list, %function
 12188              	get_IMU_param_list:
 12189              	.LFB70:
1623:..\src/command_processing.c **** 
1624:..\src/command_processing.c **** //==============================================================================
1625:..\src/command_processing.c **** //                                                        GET IMU PARAMETER LIST
1626:..\src/command_processing.c **** //==============================================================================
1627:..\src/command_processing.c **** 
1628:..\src/command_processing.c **** void get_IMU_param_list(uint16 index)
1629:..\src/command_processing.c **** {
 12190              		.loc 1 1629 0
 12191              		.cfi_startproc
 12192              		@ args = 0, pretend = 0, frame = 1704
 12193              		@ frame_needed = 1, uses_anonymous_args = 0
 12194 0000 B0B5     		push	{r4, r5, r7, lr}
 12195              		.cfi_def_cfa_offset 16
 12196              		.cfi_offset 4, -16
 12197              		.cfi_offset 5, -12
 12198              		.cfi_offset 7, -8
 12199              		.cfi_offset 14, -4
 12200 0002 ADF5D56D 		sub	sp, sp, #1704
 12201              		.cfi_def_cfa_offset 1720
 12202 0006 00AF     		add	r7, sp, #0
 12203              		.cfi_def_cfa_register 7
 12204 0008 0246     		mov	r2, r0
 12205 000a BB1D     		adds	r3, r7, #6
 12206 000c 1A80     		strh	r2, [r3]	@ movhi
1630:..\src/command_processing.c ****     //Package to be sent variables
1631:..\src/command_processing.c ****     uint8 packet_data[  PARAM_BYTE_SLOT   +     // Number of connected IMUs
 12207              		.loc 1 1631 0
 12208 000e 07F58A73 		add	r3, r7, #276
 12209 0012 0022     		movs	r2, #0
 12210 0014 1A60     		str	r2, [r3]
 12211 0016 0433     		adds	r3, r3, #4
 12212 0018 40F27552 		movw	r2, #1397
 12213 001c 0021     		movs	r1, #0
 12214 001e 1846     		mov	r0, r3
 12215 0020 FFF7FEFF 		bl	memset
1632:..\src/command_processing.c ****                         7*PARAM_BYTE_SLOT +     // IMUs ID  (1 port instead of 7)
1633:..\src/command_processing.c ****                         9*PARAM_BYTE_SLOT +     // Mag cal parameters (1 row instead of 9)
1634:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // 1 - Device ID
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 276


1635:..\src/command_processing.c ****                         PARAM_BYTE_SLOT*N_IMU_MAX + // IMU configurations
1636:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // SPI read delay
1637:..\src/command_processing.c ****                         PARAM_MENU_SLOT   + PARAM_BYTE_SLOT + 1 ] = "";
1638:..\src/command_processing.c ****     uint16 num_imus_id_params = 7;      //(1 port instead of 7)
 12216              		.loc 1 1638 0
 12217 0024 0723     		movs	r3, #7
 12218 0026 A7F89A36 		strh	r3, [r7, #1690]	@ movhi
1639:..\src/command_processing.c ****     uint16 num_mag_cal_params = 0;
 12219              		.loc 1 1639 0
 12220 002a 0023     		movs	r3, #0
 12221 002c A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1640:..\src/command_processing.c ****     uint16 first_imu_parameter = 2;
 12222              		.loc 1 1640 0
 12223 0030 0223     		movs	r3, #2
 12224 0032 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1641:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 12225              		.loc 1 1641 0
 12226 0036 B7F89A36 		ldrh	r3, [r7, #1690]
 12227 003a 5A1C     		adds	r2, r3, #1
1642:..\src/command_processing.c ****                            num_imus_id_params*PARAM_BYTE_SLOT +
 12228              		.loc 1 1642 0
 12229 003c B7F8A636 		ldrh	r3, [r7, #1702]
 12230 0040 1344     		add	r3, r3, r2
1643:..\src/command_processing.c ****                            num_mag_cal_params*PARAM_BYTE_SLOT +
 12231              		.loc 1 1643 0
 12232 0042 0133     		adds	r3, r3, #1
1641:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 12233              		.loc 1 1641 0
 12234 0044 9AB2     		uxth	r2, r3
 12235 0046 D24B     		ldr	r3, .L545
 12236 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12237 004a 9BB2     		uxth	r3, r3
 12238 004c 1344     		add	r3, r3, r2
 12239 004e 9BB2     		uxth	r3, r3
 12240 0050 1A46     		mov	r2, r3	@ movhi
 12241 0052 9200     		lsls	r2, r2, #2
 12242 0054 1344     		add	r3, r3, r2
 12243 0056 1A46     		mov	r2, r3	@ movhi
 12244 0058 9100     		lsls	r1, r2, #2
 12245 005a 1A46     		mov	r2, r3	@ movhi
 12246 005c 0B46     		mov	r3, r1	@ movhi
 12247 005e 1344     		add	r3, r3, r2
 12248 0060 5B00     		lsls	r3, r3, #1
 12249 0062 9BB2     		uxth	r3, r3
 12250 0064 FB33     		adds	r3, r3, #251
 12251 0066 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1644:..\src/command_processing.c ****                            PARAM_BYTE_SLOT   + 
1645:..\src/command_processing.c ****                            (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1646:..\src/command_processing.c ****                            PARAM_BYTE_SLOT + PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1647:..\src/command_processing.c **** 
1648:..\src/command_processing.c ****     //Auxiliary variables
1649:..\src/command_processing.c ****     uint16 CYDATA i, j, k, h;
1650:..\src/command_processing.c ****     uint16 start_byte = 0;
 12252              		.loc 1 1650 0
 12253 006a 0023     		movs	r3, #0
 12254 006c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1651:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 277


1652:..\src/command_processing.c ****     //Parameters menu string definitions
1653:..\src/command_processing.c ****     char n_imu_str[26]          = "Number of connected IMUs:";
 12255              		.loc 1 1653 0
 12256 0070 07F1F803 		add	r3, r7, #248
 12257 0074 C74A     		ldr	r2, .L545+4
 12258 0076 1C46     		mov	r4, r3
 12259 0078 1546     		mov	r5, r2
 12260 007a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 12261 007c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 12262 007e 95E80700 		ldmia	r5, {r0, r1, r2}
 12263 0082 03C4     		stmia	r4!, {r0, r1}
 12264 0084 2280     		strh	r2, [r4]	@ movhi
1654:..\src/command_processing.c ****     char ids_str[11]            = "";
 12265              		.loc 1 1654 0
 12266 0086 07F1EC03 		add	r3, r7, #236
 12267 008a 0022     		movs	r2, #0
 12268 008c 1A60     		str	r2, [r3]
 12269 008e 0433     		adds	r3, r3, #4
 12270 0090 0022     		movs	r2, #0
 12271 0092 1A60     		str	r2, [r3]
 12272 0094 C3F80320 		str	r2, [r3, #3]	@ unaligned
1655:..\src/command_processing.c ****     char mag_param_str[20]      = "Mag cal parameters:";
 12273              		.loc 1 1655 0
 12274 0098 07F1D803 		add	r3, r7, #216
 12275 009c BE4A     		ldr	r2, .L545+8
 12276 009e 1C46     		mov	r4, r3
 12277 00a0 1546     		mov	r5, r2
 12278 00a2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 12279 00a4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 12280 00a6 2B68     		ldr	r3, [r5]
 12281 00a8 2360     		str	r3, [r4]
1656:..\src/command_processing.c ****     char id_str[16]             = "";
 12282              		.loc 1 1656 0
 12283 00aa 07F1C803 		add	r3, r7, #200
 12284 00ae 0022     		movs	r2, #0
 12285 00b0 1A60     		str	r2, [r3]
 12286 00b2 0433     		adds	r3, r3, #4
 12287 00b4 0022     		movs	r2, #0
 12288 00b6 1A60     		str	r2, [r3]
 12289 00b8 5A60     		str	r2, [r3, #4]
 12290 00ba 9A60     		str	r2, [r3, #8]
1657:..\src/command_processing.c ****     char imu_table_str[42]      = "";
 12291              		.loc 1 1657 0
 12292 00bc 07F19C03 		add	r3, r7, #156
 12293 00c0 0022     		movs	r2, #0
 12294 00c2 1A60     		str	r2, [r3]
 12295 00c4 0433     		adds	r3, r3, #4
 12296 00c6 2622     		movs	r2, #38
 12297 00c8 0021     		movs	r1, #0
 12298 00ca 1846     		mov	r0, r3
 12299 00cc FFF7FEFF 		bl	memset
1658:..\src/command_processing.c ****     char spi_read_delay_str[26] = "";
 12300              		.loc 1 1658 0
 12301 00d0 07F18003 		add	r3, r7, #128
 12302 00d4 0022     		movs	r2, #0
 12303 00d6 1A60     		str	r2, [r3]
 12304 00d8 0433     		adds	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 278


 12305 00da 0022     		movs	r2, #0
 12306 00dc 1A60     		str	r2, [r3]
 12307 00de 5A60     		str	r2, [r3, #4]
 12308 00e0 9A60     		str	r2, [r3, #8]
 12309 00e2 DA60     		str	r2, [r3, #12]
 12310 00e4 1A61     		str	r2, [r3, #16]
 12311 00e6 9A82     		strh	r2, [r3, #20]	@ movhi
1659:..\src/command_processing.c ****     
1660:..\src/command_processing.c ****     //Strings lenghts
1661:..\src/command_processing.c ****     uint8 CYDATA id_str_len = strlen(id_str);
 12312              		.loc 1 1661 0
 12313 00e8 07F1C803 		add	r3, r7, #200
 12314 00ec 1846     		mov	r0, r3
 12315 00ee FFF7FEFF 		bl	strlen
 12316 00f2 0346     		mov	r3, r0
 12317 00f4 87F89336 		strb	r3, [r7, #1683]
1662:..\src/command_processing.c ****     uint8 CYDATA n_imu_str_len = strlen(n_imu_str);
 12318              		.loc 1 1662 0
 12319 00f8 07F1F803 		add	r3, r7, #248
 12320 00fc 1846     		mov	r0, r3
 12321 00fe FFF7FEFF 		bl	strlen
 12322 0102 0346     		mov	r3, r0
 12323 0104 87F89236 		strb	r3, [r7, #1682]
1663:..\src/command_processing.c ****     uint8 CYDATA ids_str_len = strlen(ids_str);
 12324              		.loc 1 1663 0
 12325 0108 07F1EC03 		add	r3, r7, #236
 12326 010c 1846     		mov	r0, r3
 12327 010e FFF7FEFF 		bl	strlen
 12328 0112 0346     		mov	r3, r0
 12329 0114 87F89136 		strb	r3, [r7, #1681]
1664:..\src/command_processing.c ****     uint8 CYDATA mag_param_str_len = strlen(mag_param_str);
 12330              		.loc 1 1664 0
 12331 0118 07F1D803 		add	r3, r7, #216
 12332 011c 1846     		mov	r0, r3
 12333 011e FFF7FEFF 		bl	strlen
 12334 0122 0346     		mov	r3, r0
 12335 0124 87F89036 		strb	r3, [r7, #1680]
1665:..\src/command_processing.c ****     uint8 CYDATA imu_table_str_len = strlen(imu_table_str);
 12336              		.loc 1 1665 0
 12337 0128 07F19C03 		add	r3, r7, #156
 12338 012c 1846     		mov	r0, r3
 12339 012e FFF7FEFF 		bl	strlen
 12340 0132 0346     		mov	r3, r0
 12341 0134 87F88F36 		strb	r3, [r7, #1679]
1666:..\src/command_processing.c ****     uint8 CYDATA spi_read_delay_str_len = strlen(spi_read_delay_str);
 12342              		.loc 1 1666 0
 12343 0138 07F18003 		add	r3, r7, #128
 12344 013c 1846     		mov	r0, r3
 12345 013e FFF7FEFF 		bl	strlen
 12346 0142 0346     		mov	r3, r0
 12347 0144 87F89D36 		strb	r3, [r7, #1693]
1667:..\src/command_processing.c ****     
1668:..\src/command_processing.c ****     char spi_delay_menu[118]    = "";
 12348              		.loc 1 1668 0
 12349 0148 07F10803 		add	r3, r7, #8
 12350 014c 0022     		movs	r2, #0
 12351 014e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 279


 12352 0150 0433     		adds	r3, r3, #4
 12353 0152 7222     		movs	r2, #114
 12354 0154 0021     		movs	r1, #0
 12355 0156 1846     		mov	r0, r3
 12356 0158 FFF7FEFF 		bl	memset
1669:..\src/command_processing.c ****     uint8 CYDATA spi_delay_menu_len;
1670:..\src/command_processing.c ****  
1671:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 12357              		.loc 1 1671 0
 12358 015c 07F10800 		add	r0, r7, #8
 12359 0160 6423     		movs	r3, #100
 12360 0162 0A22     		movs	r2, #10
 12361 0164 8D49     		ldr	r1, .L545+12
 12362 0166 FFF7FEFF 		bl	sprintf
1672:..\src/command_processing.c ****     spi_delay_menu_len = strlen(spi_delay_menu);
 12363              		.loc 1 1672 0
 12364 016a 07F10803 		add	r3, r7, #8
 12365 016e 1846     		mov	r0, r3
 12366 0170 FFF7FEFF 		bl	strlen
 12367 0174 0346     		mov	r3, r0
 12368 0176 87F88E36 		strb	r3, [r7, #1678]
1673:..\src/command_processing.c **** 
1674:..\src/command_processing.c ****     // Compute number of read parameters depending on N_IMU_Connected and
1675:..\src/command_processing.c ****     // update packet_length
1676:..\src/command_processing.c ****     num_mag_cal_params = (uint16)(N_IMU_Connected / 2);
 12369              		.loc 1 1676 0
 12370 017a 854B     		ldr	r3, .L545
 12371 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12372 017e 5B08     		lsrs	r3, r3, #1
 12373 0180 DBB2     		uxtb	r3, r3
 12374 0182 A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1677:..\src/command_processing.c ****     if ( (N_IMU_Connected - num_mag_cal_params*2) > 0 ) num_mag_cal_params++;
 12375              		.loc 1 1677 0
 12376 0186 824B     		ldr	r3, .L545
 12377 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12378 018a 1A46     		mov	r2, r3
 12379 018c B7F8A636 		ldrh	r3, [r7, #1702]
 12380 0190 5B00     		lsls	r3, r3, #1
 12381 0192 D31A     		subs	r3, r2, r3
 12382 0194 002B     		cmp	r3, #0
 12383 0196 04DD     		ble	.L500
 12384              		.loc 1 1677 0 is_stmt 0 discriminator 1
 12385 0198 B7F8A636 		ldrh	r3, [r7, #1702]
 12386 019c 0133     		adds	r3, r3, #1
 12387 019e A7F8A636 		strh	r3, [r7, #1702]	@ movhi
 12388              	.L500:
1678:..\src/command_processing.c ****     
1679:..\src/command_processing.c ****     packet_length = PARAM_BYTE_SLOT +
 12389              		.loc 1 1679 0 is_stmt 1
 12390 01a2 B7F89A36 		ldrh	r3, [r7, #1690]
 12391 01a6 5A1C     		adds	r2, r3, #1
1680:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 12392              		.loc 1 1680 0
 12393 01a8 B7F8A636 		ldrh	r3, [r7, #1702]
 12394 01ac 1344     		add	r3, r3, r2
1681:..\src/command_processing.c ****                     num_mag_cal_params*PARAM_BYTE_SLOT +
 12395              		.loc 1 1681 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 280


 12396 01ae 0133     		adds	r3, r3, #1
1679:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 12397              		.loc 1 1679 0
 12398 01b0 9AB2     		uxth	r2, r3
 12399 01b2 774B     		ldr	r3, .L545
 12400 01b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12401 01b6 9BB2     		uxth	r3, r3
 12402 01b8 1344     		add	r3, r3, r2
 12403 01ba 9BB2     		uxth	r3, r3
 12404 01bc 1A46     		mov	r2, r3	@ movhi
 12405 01be 9200     		lsls	r2, r2, #2
 12406 01c0 1344     		add	r3, r3, r2
 12407 01c2 1A46     		mov	r2, r3	@ movhi
 12408 01c4 9100     		lsls	r1, r2, #2
 12409 01c6 1A46     		mov	r2, r3	@ movhi
 12410 01c8 0B46     		mov	r3, r1	@ movhi
 12411 01ca 1344     		add	r3, r3, r2
 12412 01cc 5B00     		lsls	r3, r3, #1
 12413 01ce 9BB2     		uxth	r3, r3
 12414 01d0 C933     		adds	r3, r3, #201
 12415 01d2 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1682:..\src/command_processing.c ****                     PARAM_BYTE_SLOT   + 
1683:..\src/command_processing.c ****                     (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1684:..\src/command_processing.c ****                     PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1685:..\src/command_processing.c **** 
1686:..\src/command_processing.c ****     first_imu_parameter = 1 + num_imus_id_params + num_mag_cal_params + 2;
 12416              		.loc 1 1686 0
 12417 01d6 B7F89A26 		ldrh	r2, [r7, #1690]	@ movhi
 12418 01da B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 12419 01de 1344     		add	r3, r3, r2
 12420 01e0 9BB2     		uxth	r3, r3
 12421 01e2 0333     		adds	r3, r3, #3
 12422 01e4 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1687:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_PARAM;
 12423              		.loc 1 1687 0
 12424 01e8 07F58A73 		add	r3, r7, #276
 12425 01ec A222     		movs	r2, #162
 12426 01ee 1A70     		strb	r2, [r3]
1688:..\src/command_processing.c ****     packet_data[1] = 1 + num_imus_id_params + num_mag_cal_params + 1 + (uint8)N_IMU_Connected + 1; 
 12427              		.loc 1 1688 0
 12428 01f0 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 12429 01f4 DAB2     		uxtb	r2, r3
 12430 01f6 B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 12431 01fa DBB2     		uxtb	r3, r3
 12432 01fc 1344     		add	r3, r3, r2
 12433 01fe DAB2     		uxtb	r2, r3
 12434 0200 634B     		ldr	r3, .L545
 12435 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12436 0204 1344     		add	r3, r3, r2
 12437 0206 DBB2     		uxtb	r3, r3
 12438 0208 0333     		adds	r3, r3, #3
 12439 020a DAB2     		uxtb	r2, r3
 12440 020c 07F58A73 		add	r3, r7, #276
 12441 0210 5A70     		strb	r2, [r3, #1]
1689:..\src/command_processing.c **** 
1690:..\src/command_processing.c ****     switch(index) {
 12442              		.loc 1 1690 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 281


 12443 0212 BB1D     		adds	r3, r7, #6
 12444 0214 1B88     		ldrh	r3, [r3]
 12445 0216 002B     		cmp	r3, #0
 12446 0218 40F0D084 		bne	.L543
1691:..\src/command_processing.c ****         case 0:         //List of all parameters with relative types
1692:..\src/command_processing.c ****             /*-------------N IMU--------------*/
1693:..\src/command_processing.c ****             start_byte = 0;
 12447              		.loc 1 1693 0
 12448 021c 0023     		movs	r3, #0
 12449 021e A7F89436 		strh	r3, [r7, #1684]	@ movhi
1694:..\src/command_processing.c ****             packet_data[2] = TYPE_UINT8;
 12450              		.loc 1 1694 0
 12451 0222 07F58A73 		add	r3, r7, #276
 12452 0226 0222     		movs	r2, #2
 12453 0228 9A70     		strb	r2, [r3, #2]
1695:..\src/command_processing.c ****             packet_data[3] = 1;
 12454              		.loc 1 1695 0
 12455 022a 07F58A73 		add	r3, r7, #276
 12456 022e 0122     		movs	r2, #1
 12457 0230 DA70     		strb	r2, [r3, #3]
1696:..\src/command_processing.c ****             packet_data[4] = (uint8)N_IMU_Connected;
 12458              		.loc 1 1696 0
 12459 0232 574B     		ldr	r3, .L545
 12460 0234 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12461 0236 07F58A73 		add	r3, r7, #276
 12462 023a 1A71     		strb	r2, [r3, #4]
1697:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 12463              		.loc 1 1697 0
 12464 023c 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 12465 0240 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12466 0244 15E0     		b	.L503
 12467              	.L504:
1698:..\src/command_processing.c ****                 packet_data[5 + n_imu_str_len - i] = n_imu_str[n_imu_str_len - i];
 12468              		.loc 1 1698 0 discriminator 3
 12469 0246 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 12470 024a 5A1D     		adds	r2, r3, #5
 12471 024c B7F8A436 		ldrh	r3, [r7, #1700]
 12472 0250 D31A     		subs	r3, r2, r3
 12473 0252 97F89216 		ldrb	r1, [r7, #1682]	@ zero_extendqisi2
 12474 0256 B7F8A426 		ldrh	r2, [r7, #1700]
 12475 025a 8A1A     		subs	r2, r1, r2
 12476 025c 07F1F801 		add	r1, r7, #248
 12477 0260 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12478 0262 07F58A72 		add	r2, r7, #276
 12479 0266 D154     		strb	r1, [r2, r3]
1697:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 12480              		.loc 1 1697 0 discriminator 3
 12481 0268 B7F8A436 		ldrh	r3, [r7, #1700]
 12482 026c 013B     		subs	r3, r3, #1
 12483 026e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12484              	.L503:
1697:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 12485              		.loc 1 1697 0 is_stmt 0 discriminator 1
 12486 0272 B7F8A436 		ldrh	r3, [r7, #1700]
 12487 0276 002B     		cmp	r3, #0
 12488 0278 E5D1     		bne	.L504
1699:..\src/command_processing.c ****                 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 282


1700:..\src/command_processing.c ****             /*-------------IMUS ID--------------*/
1701:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 12489              		.loc 1 1701 0 is_stmt 1
 12490 027a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12491 027e 3233     		adds	r3, r3, #50
 12492 0280 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1702:..\src/command_processing.c ****             i = 0;
 12493              		.loc 1 1702 0
 12494 0284 0023     		movs	r3, #0
 12495 0286 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
1703:..\src/command_processing.c ****             for (k = 0; k < num_imus_id_params; k++){
 12496              		.loc 1 1703 0
 12497 028a 0023     		movs	r3, #0
 12498 028c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12499 0290 B2E0     		b	.L505
 12500              	.L512:
1704:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 12501              		.loc 1 1704 0
 12502 0292 B7F8A026 		ldrh	r2, [r7, #1696]
 12503 0296 07F1EC03 		add	r3, r7, #236
 12504 029a 4149     		ldr	r1, .L545+16
 12505 029c 1846     		mov	r0, r3
 12506 029e FFF7FEFF 		bl	sprintf
1705:..\src/command_processing.c ****                 h = 4;
 12507              		.loc 1 1705 0
 12508 02a2 0423     		movs	r3, #4
 12509 02a4 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1706:..\src/command_processing.c ****                 ids_str_len = strlen(ids_str);
 12510              		.loc 1 1706 0
 12511 02a8 07F1EC03 		add	r3, r7, #236
 12512 02ac 1846     		mov	r0, r3
 12513 02ae FFF7FEFF 		bl	strlen
 12514 02b2 0346     		mov	r3, r0
 12515 02b4 87F89136 		strb	r3, [r7, #1681]
1707:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12516              		.loc 1 1707 0
 12517 02b8 B7F89436 		ldrh	r3, [r7, #1684]
 12518 02bc 9A1C     		adds	r2, r3, #2
 12519 02be B7F8A036 		ldrh	r3, [r7, #1696]
 12520 02c2 3221     		movs	r1, #50
 12521 02c4 01FB03F3 		mul	r3, r1, r3
 12522 02c8 1344     		add	r3, r3, r2
 12523 02ca 07F58A72 		add	r2, r7, #276
 12524 02ce 0221     		movs	r1, #2
 12525 02d0 D154     		strb	r1, [r2, r3]
1708:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 12526              		.loc 1 1708 0
 12527 02d2 B7F89436 		ldrh	r3, [r7, #1684]
 12528 02d6 DA1C     		adds	r2, r3, #3
 12529 02d8 B7F8A036 		ldrh	r3, [r7, #1696]
 12530 02dc 3221     		movs	r1, #50
 12531 02de 01FB03F3 		mul	r3, r1, r3
 12532 02e2 1344     		add	r3, r3, r2
 12533 02e4 07F58A72 		add	r2, r7, #276
 12534 02e8 0321     		movs	r1, #3
 12535 02ea D154     		strb	r1, [r2, r3]
1709:..\src/command_processing.c ****                 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 283


1710:..\src/command_processing.c ****                 for (j = 3*k; j <= 3*k+2; j++) {  // for each possible imu on port k
 12536              		.loc 1 1710 0
 12537 02ec B7F8A036 		ldrh	r3, [r7, #1696]	@ movhi
 12538 02f0 1A46     		mov	r2, r3	@ movhi
 12539 02f2 5200     		lsls	r2, r2, #1
 12540 02f4 1344     		add	r3, r3, r2
 12541 02f6 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12542 02fa 39E0     		b	.L506
 12543              	.L509:
1711:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 12544              		.loc 1 1711 0
 12545 02fc B7F8A436 		ldrh	r3, [r7, #1700]
 12546 0300 284A     		ldr	r2, .L545+20
 12547 0302 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12548 0304 9BB2     		uxth	r3, r3
 12549 0306 B7F8A226 		ldrh	r2, [r7, #1698]
 12550 030a 9A42     		cmp	r2, r3
 12551 030c 17D1     		bne	.L507
1712:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = (uint8)IMU_connected[i];   
 12552              		.loc 1 1712 0
 12553 030e B7F89E26 		ldrh	r2, [r7, #1694]
 12554 0312 B7F89436 		ldrh	r3, [r7, #1684]
 12555 0316 1A44     		add	r2, r2, r3
 12556 0318 B7F8A036 		ldrh	r3, [r7, #1696]
 12557 031c 3221     		movs	r1, #50
 12558 031e 01FB03F3 		mul	r3, r1, r3
 12559 0322 1344     		add	r3, r3, r2
 12560 0324 B7F8A426 		ldrh	r2, [r7, #1700]
 12561 0328 1E49     		ldr	r1, .L545+20
 12562 032a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12563 032c 07F58A72 		add	r2, r7, #276
 12564 0330 D154     		strb	r1, [r2, r3]
1713:..\src/command_processing.c ****                         i++;
 12565              		.loc 1 1713 0
 12566 0332 B7F8A436 		ldrh	r3, [r7, #1700]
 12567 0336 0133     		adds	r3, r3, #1
 12568 0338 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12569 033c 0EE0     		b	.L508
 12570              	.L507:
1714:..\src/command_processing.c ****                     } 
1715:..\src/command_processing.c ****                     else {
1716:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = 255;
 12571              		.loc 1 1716 0
 12572 033e B7F89E26 		ldrh	r2, [r7, #1694]
 12573 0342 B7F89436 		ldrh	r3, [r7, #1684]
 12574 0346 1A44     		add	r2, r2, r3
 12575 0348 B7F8A036 		ldrh	r3, [r7, #1696]
 12576 034c 3221     		movs	r1, #50
 12577 034e 01FB03F3 		mul	r3, r1, r3
 12578 0352 1344     		add	r3, r3, r2
 12579 0354 07F58A72 		add	r2, r7, #276
 12580 0358 FF21     		movs	r1, #255
 12581 035a D154     		strb	r1, [r2, r3]
 12582              	.L508:
1717:..\src/command_processing.c ****                     }
1718:..\src/command_processing.c ****                     h++;
 12583              		.loc 1 1718 0 discriminator 2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 284


 12584 035c B7F89E36 		ldrh	r3, [r7, #1694]
 12585 0360 0133     		adds	r3, r3, #1
 12586 0362 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1710:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 12587              		.loc 1 1710 0 discriminator 2
 12588 0366 B7F8A236 		ldrh	r3, [r7, #1698]
 12589 036a 0133     		adds	r3, r3, #1
 12590 036c A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12591              	.L506:
1710:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 12592              		.loc 1 1710 0 is_stmt 0 discriminator 1
 12593 0370 B7F8A216 		ldrh	r1, [r7, #1698]
 12594 0374 B7F8A026 		ldrh	r2, [r7, #1696]
 12595 0378 1346     		mov	r3, r2
 12596 037a 5B00     		lsls	r3, r3, #1
 12597 037c 1344     		add	r3, r3, r2
 12598 037e 0233     		adds	r3, r3, #2
 12599 0380 9942     		cmp	r1, r3
 12600 0382 BBDD     		ble	.L509
1719:..\src/command_processing.c ****                 }
1720:..\src/command_processing.c **** 
1721:..\src/command_processing.c ****                 //if (IMU_connected[i] >= 3*k && IMU_connected[i] <= 3*k + 2)
1722:..\src/command_processing.c ****                 for(j = ids_str_len; j != 0; j--)
 12601              		.loc 1 1722 0 is_stmt 1
 12602 0384 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 12603 0388 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12604 038c 2BE0     		b	.L510
 12605              	.L546:
 12606 038e 00BF     		.align	2
 12607              	.L545:
 12608 0390 00000000 		.word	N_IMU_Connected
 12609 0394 2C110000 		.word	.LC143
 12610 0398 48110000 		.word	.LC144
 12611 039c 88020000 		.word	.LC130
 12612 03a0 C4100000 		.word	.LC145
 12613 03a4 00000000 		.word	IMU_connected
 12614              	.L511:
1723:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 12615              		.loc 1 1723 0 discriminator 3
 12616 03a8 B7F89436 		ldrh	r3, [r7, #1684]
 12617 03ac DA1D     		adds	r2, r3, #7
 12618 03ae B7F8A036 		ldrh	r3, [r7, #1696]
 12619 03b2 3221     		movs	r1, #50
 12620 03b4 01FB03F3 		mul	r3, r1, r3
 12621 03b8 1A44     		add	r2, r2, r3
 12622 03ba 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 12623 03be 1A44     		add	r2, r2, r3
 12624 03c0 B7F8A236 		ldrh	r3, [r7, #1698]
 12625 03c4 D31A     		subs	r3, r2, r3
 12626 03c6 97F89116 		ldrb	r1, [r7, #1681]	@ zero_extendqisi2
 12627 03ca B7F8A226 		ldrh	r2, [r7, #1698]
 12628 03ce 8A1A     		subs	r2, r1, r2
 12629 03d0 07F1EC01 		add	r1, r7, #236
 12630 03d4 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12631 03d6 07F58A72 		add	r2, r7, #276
 12632 03da D154     		strb	r1, [r2, r3]
1722:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 285


 12633              		.loc 1 1722 0 discriminator 3
 12634 03dc B7F8A236 		ldrh	r3, [r7, #1698]
 12635 03e0 013B     		subs	r3, r3, #1
 12636 03e2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12637              	.L510:
1722:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 12638              		.loc 1 1722 0 is_stmt 0 discriminator 1
 12639 03e6 B7F8A236 		ldrh	r3, [r7, #1698]
 12640 03ea 002B     		cmp	r3, #0
 12641 03ec DCD1     		bne	.L511
1703:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 12642              		.loc 1 1703 0 is_stmt 1 discriminator 2
 12643 03ee B7F8A036 		ldrh	r3, [r7, #1696]
 12644 03f2 0133     		adds	r3, r3, #1
 12645 03f4 A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12646              	.L505:
1703:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 12647              		.loc 1 1703 0 is_stmt 0 discriminator 1
 12648 03f8 B7F8A026 		ldrh	r2, [r7, #1696]
 12649 03fc B7F89A36 		ldrh	r3, [r7, #1690]
 12650 0400 9A42     		cmp	r2, r3
 12651 0402 FFF446AF 		bcc	.L512
1724:..\src/command_processing.c ****             }
1725:..\src/command_processing.c ****             
1726:..\src/command_processing.c ****             /*-------------GET MAG PARAM--------------*/
1727:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_imus_id_params;
 12652              		.loc 1 1727 0 is_stmt 1
 12653 0406 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 12654 040a 1A46     		mov	r2, r3	@ movhi
 12655 040c 9200     		lsls	r2, r2, #2
 12656 040e 1344     		add	r3, r3, r2
 12657 0410 1A46     		mov	r2, r3	@ movhi
 12658 0412 9100     		lsls	r1, r2, #2
 12659 0414 1A46     		mov	r2, r3	@ movhi
 12660 0416 0B46     		mov	r3, r1	@ movhi
 12661 0418 1344     		add	r3, r3, r2
 12662 041a 5B00     		lsls	r3, r3, #1
 12663 041c 9AB2     		uxth	r2, r3
 12664 041e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12665 0422 1344     		add	r3, r3, r2
 12666 0424 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1728:..\src/command_processing.c ****             for (k = 0; k < num_mag_cal_params; k++){
 12667              		.loc 1 1728 0
 12668 0428 0023     		movs	r3, #0
 12669 042a A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12670 042e 1FE1     		b	.L513
 12671              	.L520:
1729:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12672              		.loc 1 1729 0
 12673 0430 B7F89436 		ldrh	r3, [r7, #1684]
 12674 0434 9A1C     		adds	r2, r3, #2
 12675 0436 B7F8A036 		ldrh	r3, [r7, #1696]
 12676 043a 3221     		movs	r1, #50
 12677 043c 01FB03F3 		mul	r3, r1, r3
 12678 0440 1344     		add	r3, r3, r2
 12679 0442 07F58A72 		add	r2, r7, #276
 12680 0446 0221     		movs	r1, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 286


 12681 0448 D154     		strb	r1, [r2, r3]
1730:..\src/command_processing.c ****                 
1731:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 12682              		.loc 1 1731 0
 12683 044a B7F89436 		ldrh	r3, [r7, #1684]
 12684 044e DA1C     		adds	r2, r3, #3
 12685 0450 B7F8A036 		ldrh	r3, [r7, #1696]
 12686 0454 3221     		movs	r1, #50
 12687 0456 01FB03F3 		mul	r3, r1, r3
 12688 045a 1344     		add	r3, r3, r2
 12689 045c 07F58A72 		add	r2, r7, #276
 12690 0460 0321     		movs	r1, #3
 12691 0462 D154     		strb	r1, [r2, r3]
1732:..\src/command_processing.c ****                 packet_data[4+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 12692              		.loc 1 1732 0
 12693 0464 B7F89436 		ldrh	r3, [r7, #1684]
 12694 0468 1A1D     		adds	r2, r3, #4
 12695 046a B7F8A036 		ldrh	r3, [r7, #1696]
 12696 046e 3221     		movs	r1, #50
 12697 0470 01FB03F3 		mul	r3, r1, r3
 12698 0474 1A44     		add	r2, r2, r3
 12699 0476 B7F8A036 		ldrh	r3, [r7, #1696]
 12700 047a 5B00     		lsls	r3, r3, #1
 12701 047c B249     		ldr	r1, .L547
 12702 047e CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12703 0480 1846     		mov	r0, r3
 12704 0482 B249     		ldr	r1, .L547+4
 12705 0484 0346     		mov	r3, r0
 12706 0486 5B00     		lsls	r3, r3, #1
 12707 0488 0344     		add	r3, r3, r0
 12708 048a 0B44     		add	r3, r3, r1
 12709 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12710 048e 07F58A73 		add	r3, r7, #276
 12711 0492 9954     		strb	r1, [r3, r2]
1733:..\src/command_processing.c ****                 packet_data[5+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 12712              		.loc 1 1733 0
 12713 0494 B7F89436 		ldrh	r3, [r7, #1684]
 12714 0498 5A1D     		adds	r2, r3, #5
 12715 049a B7F8A036 		ldrh	r3, [r7, #1696]
 12716 049e 3221     		movs	r1, #50
 12717 04a0 01FB03F3 		mul	r3, r1, r3
 12718 04a4 1A44     		add	r2, r2, r3
 12719 04a6 B7F8A036 		ldrh	r3, [r7, #1696]
 12720 04aa 5B00     		lsls	r3, r3, #1
 12721 04ac A649     		ldr	r1, .L547
 12722 04ae CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12723 04b0 1846     		mov	r0, r3
 12724 04b2 A649     		ldr	r1, .L547+4
 12725 04b4 0346     		mov	r3, r0
 12726 04b6 5B00     		lsls	r3, r3, #1
 12727 04b8 0344     		add	r3, r3, r0
 12728 04ba 0B44     		add	r3, r3, r1
 12729 04bc 0133     		adds	r3, r3, #1
 12730 04be 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12731 04c0 07F58A73 		add	r3, r7, #276
 12732 04c4 9954     		strb	r1, [r3, r2]
1734:..\src/command_processing.c ****                 packet_data[6+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 287


 12733              		.loc 1 1734 0
 12734 04c6 B7F89436 		ldrh	r3, [r7, #1684]
 12735 04ca 9A1D     		adds	r2, r3, #6
 12736 04cc B7F8A036 		ldrh	r3, [r7, #1696]
 12737 04d0 3221     		movs	r1, #50
 12738 04d2 01FB03F3 		mul	r3, r1, r3
 12739 04d6 1A44     		add	r2, r2, r3
 12740 04d8 B7F8A036 		ldrh	r3, [r7, #1696]
 12741 04dc 5B00     		lsls	r3, r3, #1
 12742 04de 9A49     		ldr	r1, .L547
 12743 04e0 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12744 04e2 1846     		mov	r0, r3
 12745 04e4 9949     		ldr	r1, .L547+4
 12746 04e6 0346     		mov	r3, r0
 12747 04e8 5B00     		lsls	r3, r3, #1
 12748 04ea 0344     		add	r3, r3, r0
 12749 04ec 0B44     		add	r3, r3, r1
 12750 04ee 0233     		adds	r3, r3, #2
 12751 04f0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12752 04f2 07F58A73 		add	r3, r7, #276
 12753 04f6 9954     		strb	r1, [r3, r2]
1735:..\src/command_processing.c ****                 
1736:..\src/command_processing.c ****                 // check if there is a second value
1737:..\src/command_processing.c ****                 if ( N_IMU_Connected < 2*(k+1) ) {
 12754              		.loc 1 1737 0
 12755 04f8 954B     		ldr	r3, .L547+8
 12756 04fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12757 04fc 1A46     		mov	r2, r3
 12758 04fe B7F8A036 		ldrh	r3, [r7, #1696]
 12759 0502 0133     		adds	r3, r3, #1
 12760 0504 5B00     		lsls	r3, r3, #1
 12761 0506 9A42     		cmp	r2, r3
 12762 0508 28DA     		bge	.L514
1738:..\src/command_processing.c ****                     // there is only one value
1739:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 12763              		.loc 1 1739 0
 12764 050a 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12765 050e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12766 0512 1EE0     		b	.L515
 12767              	.L516:
1740:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12768              		.loc 1 1740 0 discriminator 3
 12769 0514 B7F89436 		ldrh	r3, [r7, #1684]
 12770 0518 DA1D     		adds	r2, r3, #7
 12771 051a B7F8A036 		ldrh	r3, [r7, #1696]
 12772 051e 3221     		movs	r1, #50
 12773 0520 01FB03F3 		mul	r3, r1, r3
 12774 0524 1A44     		add	r2, r2, r3
 12775 0526 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12776 052a 1A44     		add	r2, r2, r3
 12777 052c B7F8A236 		ldrh	r3, [r7, #1698]
 12778 0530 D31A     		subs	r3, r2, r3
 12779 0532 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 12780 0536 B7F8A226 		ldrh	r2, [r7, #1698]
 12781 053a 8A1A     		subs	r2, r1, r2
 12782 053c 07F1D801 		add	r1, r7, #216
 12783 0540 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 288


 12784 0542 07F58A72 		add	r2, r7, #276
 12785 0546 D154     		strb	r1, [r2, r3]
1739:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12786              		.loc 1 1739 0 discriminator 3
 12787 0548 B7F8A236 		ldrh	r3, [r7, #1698]
 12788 054c 013B     		subs	r3, r3, #1
 12789 054e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12790              	.L515:
1739:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12791              		.loc 1 1739 0 is_stmt 0 discriminator 1
 12792 0552 B7F8A236 		ldrh	r3, [r7, #1698]
 12793 0556 002B     		cmp	r3, #0
 12794 0558 DCD1     		bne	.L516
 12795 055a 84E0     		b	.L517
 12796              	.L514:
1741:..\src/command_processing.c ****                 }
1742:..\src/command_processing.c ****                 else {
1743:..\src/command_processing.c ****                     // fill the second value
1744:..\src/command_processing.c ****                     packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 6;
 12797              		.loc 1 1744 0 is_stmt 1
 12798 055c B7F89436 		ldrh	r3, [r7, #1684]
 12799 0560 DA1C     		adds	r2, r3, #3
 12800 0562 B7F8A036 		ldrh	r3, [r7, #1696]
 12801 0566 3221     		movs	r1, #50
 12802 0568 01FB03F3 		mul	r3, r1, r3
 12803 056c 1344     		add	r3, r3, r2
 12804 056e 07F58A72 		add	r2, r7, #276
 12805 0572 0621     		movs	r1, #6
 12806 0574 D154     		strb	r1, [r2, r3]
1745:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12807              		.loc 1 1745 0
 12808 0576 B7F89436 		ldrh	r3, [r7, #1684]
 12809 057a DA1D     		adds	r2, r3, #7
 12810 057c B7F8A036 		ldrh	r3, [r7, #1696]
 12811 0580 3221     		movs	r1, #50
 12812 0582 01FB03F3 		mul	r3, r1, r3
 12813 0586 1A44     		add	r2, r2, r3
 12814 0588 B7F8A036 		ldrh	r3, [r7, #1696]
 12815 058c 5B00     		lsls	r3, r3, #1
 12816 058e 0133     		adds	r3, r3, #1
 12817 0590 6D49     		ldr	r1, .L547
 12818 0592 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12819 0594 1846     		mov	r0, r3
 12820 0596 6D49     		ldr	r1, .L547+4
 12821 0598 0346     		mov	r3, r0
 12822 059a 5B00     		lsls	r3, r3, #1
 12823 059c 0344     		add	r3, r3, r0
 12824 059e 0B44     		add	r3, r3, r1
 12825 05a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12826 05a2 07F58A73 		add	r3, r7, #276
 12827 05a6 9954     		strb	r1, [r3, r2]
1746:..\src/command_processing.c ****                     packet_data[8+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12828              		.loc 1 1746 0
 12829 05a8 B7F89436 		ldrh	r3, [r7, #1684]
 12830 05ac 03F10802 		add	r2, r3, #8
 12831 05b0 B7F8A036 		ldrh	r3, [r7, #1696]
 12832 05b4 3221     		movs	r1, #50
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 289


 12833 05b6 01FB03F3 		mul	r3, r1, r3
 12834 05ba 1A44     		add	r2, r2, r3
 12835 05bc B7F8A036 		ldrh	r3, [r7, #1696]
 12836 05c0 5B00     		lsls	r3, r3, #1
 12837 05c2 0133     		adds	r3, r3, #1
 12838 05c4 6049     		ldr	r1, .L547
 12839 05c6 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12840 05c8 1846     		mov	r0, r3
 12841 05ca 6049     		ldr	r1, .L547+4
 12842 05cc 0346     		mov	r3, r0
 12843 05ce 5B00     		lsls	r3, r3, #1
 12844 05d0 0344     		add	r3, r3, r0
 12845 05d2 0B44     		add	r3, r3, r1
 12846 05d4 0133     		adds	r3, r3, #1
 12847 05d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12848 05d8 07F58A73 		add	r3, r7, #276
 12849 05dc 9954     		strb	r1, [r3, r2]
1747:..\src/command_processing.c ****                     packet_data[9+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12850              		.loc 1 1747 0
 12851 05de B7F89436 		ldrh	r3, [r7, #1684]
 12852 05e2 03F10902 		add	r2, r3, #9
 12853 05e6 B7F8A036 		ldrh	r3, [r7, #1696]
 12854 05ea 3221     		movs	r1, #50
 12855 05ec 01FB03F3 		mul	r3, r1, r3
 12856 05f0 1A44     		add	r2, r2, r3
 12857 05f2 B7F8A036 		ldrh	r3, [r7, #1696]
 12858 05f6 5B00     		lsls	r3, r3, #1
 12859 05f8 0133     		adds	r3, r3, #1
 12860 05fa 5349     		ldr	r1, .L547
 12861 05fc CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12862 05fe 1846     		mov	r0, r3
 12863 0600 5249     		ldr	r1, .L547+4
 12864 0602 0346     		mov	r3, r0
 12865 0604 5B00     		lsls	r3, r3, #1
 12866 0606 0344     		add	r3, r3, r0
 12867 0608 0B44     		add	r3, r3, r1
 12868 060a 0233     		adds	r3, r3, #2
 12869 060c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12870 060e 07F58A73 		add	r3, r7, #276
 12871 0612 9954     		strb	r1, [r3, r2]
1748:..\src/command_processing.c ****                 
1749:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 12872              		.loc 1 1749 0
 12873 0614 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12874 0618 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12875 061c 1FE0     		b	.L518
 12876              	.L519:
1750:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 12877              		.loc 1 1750 0 discriminator 3
 12878 061e B7F89436 		ldrh	r3, [r7, #1684]
 12879 0622 03F10A02 		add	r2, r3, #10
 12880 0626 B7F8A036 		ldrh	r3, [r7, #1696]
 12881 062a 3221     		movs	r1, #50
 12882 062c 01FB03F3 		mul	r3, r1, r3
 12883 0630 1A44     		add	r2, r2, r3
 12884 0632 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12885 0636 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 290


 12886 0638 B7F8A236 		ldrh	r3, [r7, #1698]
 12887 063c D31A     		subs	r3, r2, r3
 12888 063e 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 12889 0642 B7F8A226 		ldrh	r2, [r7, #1698]
 12890 0646 8A1A     		subs	r2, r1, r2
 12891 0648 07F1D801 		add	r1, r7, #216
 12892 064c 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12893 064e 07F58A72 		add	r2, r7, #276
 12894 0652 D154     		strb	r1, [r2, r3]
1749:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 12895              		.loc 1 1749 0 discriminator 3
 12896 0654 B7F8A236 		ldrh	r3, [r7, #1698]
 12897 0658 013B     		subs	r3, r3, #1
 12898 065a A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12899              	.L518:
1749:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 12900              		.loc 1 1749 0 is_stmt 0 discriminator 1
 12901 065e B7F8A236 		ldrh	r3, [r7, #1698]
 12902 0662 002B     		cmp	r3, #0
 12903 0664 DBD1     		bne	.L519
 12904              	.L517:
1728:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12905              		.loc 1 1728 0 is_stmt 1 discriminator 2
 12906 0666 B7F8A036 		ldrh	r3, [r7, #1696]
 12907 066a 0133     		adds	r3, r3, #1
 12908 066c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12909              	.L513:
1728:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12910              		.loc 1 1728 0 is_stmt 0 discriminator 1
 12911 0670 B7F8A026 		ldrh	r2, [r7, #1696]
 12912 0674 B7F8A636 		ldrh	r3, [r7, #1702]
 12913 0678 9A42     		cmp	r2, r3
 12914 067a FFF4D9AE 		bcc	.L520
1751:..\src/command_processing.c ****                 }
1752:..\src/command_processing.c ****             }
1753:..\src/command_processing.c ****             
1754:..\src/command_processing.c ****             /*-----------------ID-----------------*/
1755:..\src/command_processing.c ****             
1756:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_mag_cal_params;
 12915              		.loc 1 1756 0 is_stmt 1
 12916 067e B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 12917 0682 1A46     		mov	r2, r3	@ movhi
 12918 0684 9200     		lsls	r2, r2, #2
 12919 0686 1344     		add	r3, r3, r2
 12920 0688 1A46     		mov	r2, r3	@ movhi
 12921 068a 9100     		lsls	r1, r2, #2
 12922 068c 1A46     		mov	r2, r3	@ movhi
 12923 068e 0B46     		mov	r3, r1	@ movhi
 12924 0690 1344     		add	r3, r3, r2
 12925 0692 5B00     		lsls	r3, r3, #1
 12926 0694 9AB2     		uxth	r2, r3
 12927 0696 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12928 069a 1344     		add	r3, r3, r2
 12929 069c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1757:..\src/command_processing.c ****             sprintf(id_str, "%u - Device ID:", first_imu_parameter-1);
 12930              		.loc 1 1757 0
 12931 06a0 B7F89836 		ldrh	r3, [r7, #1688]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 291


 12932 06a4 5A1E     		subs	r2, r3, #1
 12933 06a6 07F1C803 		add	r3, r7, #200
 12934 06aa 2A49     		ldr	r1, .L547+12
 12935 06ac 1846     		mov	r0, r3
 12936 06ae FFF7FEFF 		bl	sprintf
1758:..\src/command_processing.c ****             id_str_len = strlen(id_str);
 12937              		.loc 1 1758 0
 12938 06b2 07F1C803 		add	r3, r7, #200
 12939 06b6 1846     		mov	r0, r3
 12940 06b8 FFF7FEFF 		bl	strlen
 12941 06bc 0346     		mov	r3, r0
 12942 06be 87F89336 		strb	r3, [r7, #1683]
1759:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_UINT8;
 12943              		.loc 1 1759 0
 12944 06c2 B7F89436 		ldrh	r3, [r7, #1684]
 12945 06c6 0233     		adds	r3, r3, #2
 12946 06c8 07F58A72 		add	r2, r7, #276
 12947 06cc 0221     		movs	r1, #2
 12948 06ce D154     		strb	r1, [r2, r3]
1760:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 12949              		.loc 1 1760 0
 12950 06d0 B7F89436 		ldrh	r3, [r7, #1684]
 12951 06d4 0333     		adds	r3, r3, #3
 12952 06d6 07F58A72 		add	r2, r7, #276
 12953 06da 0121     		movs	r1, #1
 12954 06dc D154     		strb	r1, [r2, r3]
1761:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.dev.id;
 12955              		.loc 1 1761 0
 12956 06de B7F89436 		ldrh	r3, [r7, #1684]
 12957 06e2 0433     		adds	r3, r3, #4
 12958 06e4 1C4A     		ldr	r2, .L547+16
 12959 06e6 92F8A010 		ldrb	r1, [r2, #160]	@ zero_extendqisi2
 12960 06ea 07F58A72 		add	r2, r7, #276
 12961 06ee D154     		strb	r1, [r2, r3]
1762:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 12962              		.loc 1 1762 0
 12963 06f0 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 12964 06f4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12965 06f8 18E0     		b	.L521
 12966              	.L522:
1763:..\src/command_processing.c ****                 packet_data[5+start_byte + id_str_len - i] = id_str[id_str_len - i];
 12967              		.loc 1 1763 0 discriminator 3
 12968 06fa B7F89436 		ldrh	r3, [r7, #1684]
 12969 06fe 5A1D     		adds	r2, r3, #5
 12970 0700 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 12971 0704 1A44     		add	r2, r2, r3
 12972 0706 B7F8A436 		ldrh	r3, [r7, #1700]
 12973 070a D31A     		subs	r3, r2, r3
 12974 070c 97F89316 		ldrb	r1, [r7, #1683]	@ zero_extendqisi2
 12975 0710 B7F8A426 		ldrh	r2, [r7, #1700]
 12976 0714 8A1A     		subs	r2, r1, r2
 12977 0716 07F1C801 		add	r1, r7, #200
 12978 071a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12979 071c 07F58A72 		add	r2, r7, #276
 12980 0720 D154     		strb	r1, [r2, r3]
1762:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 12981              		.loc 1 1762 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 292


 12982 0722 B7F8A436 		ldrh	r3, [r7, #1700]
 12983 0726 013B     		subs	r3, r3, #1
 12984 0728 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12985              	.L521:
1762:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 12986              		.loc 1 1762 0 is_stmt 0 discriminator 1
 12987 072c B7F8A436 		ldrh	r3, [r7, #1700]
 12988 0730 002B     		cmp	r3, #0
 12989 0732 E2D1     		bne	.L522
1764:..\src/command_processing.c ****                 
1765:..\src/command_processing.c ****             /*-------------GET IMUS MODE-------------*/
1766:..\src/command_processing.c ****             
1767:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 12990              		.loc 1 1767 0 is_stmt 1
 12991 0734 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12992 0738 3233     		adds	r3, r3, #50
 12993 073a A7F89436 		strh	r3, [r7, #1684]	@ movhi
1768:..\src/command_processing.c ****             for (i = 0; i < (uint8)N_IMU_Connected; i++){
 12994              		.loc 1 1768 0
 12995 073e 0023     		movs	r3, #0
 12996 0740 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12997 0744 38E1     		b	.L523
 12998              	.L548:
 12999 0746 00BF     		.align	2
 13000              	.L547:
 13001 0748 00000000 		.word	IMU_connected
 13002 074c 00000000 		.word	MagCal
 13003 0750 00000000 		.word	N_IMU_Connected
 13004 0754 D0100000 		.word	.LC146
 13005 0758 00000000 		.word	c_mem
 13006              	.L526:
1769:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 13007              		.loc 1 1769 0
 13008 075c B7F89826 		ldrh	r2, [r7, #1688]
 13009 0760 B7F8A436 		ldrh	r3, [r7, #1700]
 13010 0764 D118     		adds	r1, r2, r3
 13011 0766 B7F8A436 		ldrh	r3, [r7, #1700]
 13012 076a D54A     		ldr	r2, .L549
 13013 076c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13014 076e 07F19C00 		add	r0, r7, #156
 13015 0772 0A46     		mov	r2, r1
 13016 0774 D349     		ldr	r1, .L549+4
 13017 0776 FFF7FEFF 		bl	sprintf
1770:..\src/command_processing.c ****                 imu_table_str_len = strlen(imu_table_str);
 13018              		.loc 1 1770 0
 13019 077a 07F19C03 		add	r3, r7, #156
 13020 077e 1846     		mov	r0, r3
 13021 0780 FFF7FEFF 		bl	strlen
 13022 0784 0346     		mov	r3, r0
 13023 0786 87F88F36 		strb	r3, [r7, #1679]
1771:..\src/command_processing.c ****             
1772:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte + PARAM_BYTE_SLOT*i)] = TYPE_UINT8;
 13024              		.loc 1 1772 0
 13025 078a B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13026 078e 1A46     		mov	r2, r3	@ movhi
 13027 0790 9200     		lsls	r2, r2, #2
 13028 0792 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 293


 13029 0794 1A46     		mov	r2, r3	@ movhi
 13030 0796 9100     		lsls	r1, r2, #2
 13031 0798 1A46     		mov	r2, r3	@ movhi
 13032 079a 0B46     		mov	r3, r1	@ movhi
 13033 079c 1344     		add	r3, r3, r2
 13034 079e 5B00     		lsls	r3, r3, #1
 13035 07a0 9AB2     		uxth	r2, r3
 13036 07a2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13037 07a6 1344     		add	r3, r3, r2
 13038 07a8 9BB2     		uxth	r3, r3
 13039 07aa 0233     		adds	r3, r3, #2
 13040 07ac 9BB2     		uxth	r3, r3
 13041 07ae 1A46     		mov	r2, r3
 13042 07b0 07F58A73 		add	r3, r7, #276
 13043 07b4 0221     		movs	r1, #2
 13044 07b6 9954     		strb	r1, [r3, r2]
1773:..\src/command_processing.c ****                 packet_data[(uint16)(3 + start_byte + PARAM_BYTE_SLOT*i)] = 5;
 13045              		.loc 1 1773 0
 13046 07b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13047 07bc 1A46     		mov	r2, r3	@ movhi
 13048 07be 9200     		lsls	r2, r2, #2
 13049 07c0 1344     		add	r3, r3, r2
 13050 07c2 1A46     		mov	r2, r3	@ movhi
 13051 07c4 9100     		lsls	r1, r2, #2
 13052 07c6 1A46     		mov	r2, r3	@ movhi
 13053 07c8 0B46     		mov	r3, r1	@ movhi
 13054 07ca 1344     		add	r3, r3, r2
 13055 07cc 5B00     		lsls	r3, r3, #1
 13056 07ce 9AB2     		uxth	r2, r3
 13057 07d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13058 07d4 1344     		add	r3, r3, r2
 13059 07d6 9BB2     		uxth	r3, r3
 13060 07d8 0333     		adds	r3, r3, #3
 13061 07da 9BB2     		uxth	r3, r3
 13062 07dc 1A46     		mov	r2, r3
 13063 07de 07F58A73 		add	r3, r7, #276
 13064 07e2 0521     		movs	r1, #5
 13065 07e4 9954     		strb	r1, [r3, r2]
1774:..\src/command_processing.c ****                 
1775:..\src/command_processing.c ****                 packet_data[(uint16)(4 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13066              		.loc 1 1775 0
 13067 07e6 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13068 07ea 1A46     		mov	r2, r3	@ movhi
 13069 07ec 9200     		lsls	r2, r2, #2
 13070 07ee 1344     		add	r3, r3, r2
 13071 07f0 1A46     		mov	r2, r3	@ movhi
 13072 07f2 9100     		lsls	r1, r2, #2
 13073 07f4 1A46     		mov	r2, r3	@ movhi
 13074 07f6 0B46     		mov	r3, r1	@ movhi
 13075 07f8 1344     		add	r3, r3, r2
 13076 07fa 5B00     		lsls	r3, r3, #1
 13077 07fc 9AB2     		uxth	r2, r3
 13078 07fe B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13079 0802 1344     		add	r3, r3, r2
 13080 0804 9BB2     		uxth	r3, r3
 13081 0806 0433     		adds	r3, r3, #4
 13082 0808 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 294


 13083 080a 1846     		mov	r0, r3
 13084 080c B7F8A436 		ldrh	r3, [r7, #1700]
 13085 0810 AB4A     		ldr	r2, .L549
 13086 0812 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13087 0814 1946     		mov	r1, r3
 13088 0816 AC4A     		ldr	r2, .L549+8
 13089 0818 0B46     		mov	r3, r1
 13090 081a 9B00     		lsls	r3, r3, #2
 13091 081c 0B44     		add	r3, r3, r1
 13092 081e 1344     		add	r3, r3, r2
 13093 0820 03F20223 		addw	r3, r3, #514
 13094 0824 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13095 0826 07F58A73 		add	r3, r7, #276
 13096 082a 1A54     		strb	r2, [r3, r0]
1776:..\src/command_processing.c ****                 packet_data[(uint16)(5 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13097              		.loc 1 1776 0
 13098 082c B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13099 0830 1A46     		mov	r2, r3	@ movhi
 13100 0832 9200     		lsls	r2, r2, #2
 13101 0834 1344     		add	r3, r3, r2
 13102 0836 1A46     		mov	r2, r3	@ movhi
 13103 0838 9100     		lsls	r1, r2, #2
 13104 083a 1A46     		mov	r2, r3	@ movhi
 13105 083c 0B46     		mov	r3, r1	@ movhi
 13106 083e 1344     		add	r3, r3, r2
 13107 0840 5B00     		lsls	r3, r3, #1
 13108 0842 9AB2     		uxth	r2, r3
 13109 0844 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13110 0848 1344     		add	r3, r3, r2
 13111 084a 9BB2     		uxth	r3, r3
 13112 084c 0533     		adds	r3, r3, #5
 13113 084e 9BB2     		uxth	r3, r3
 13114 0850 1846     		mov	r0, r3
 13115 0852 B7F8A436 		ldrh	r3, [r7, #1700]
 13116 0856 9A4A     		ldr	r2, .L549
 13117 0858 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13118 085a 1946     		mov	r1, r3
 13119 085c 9A4A     		ldr	r2, .L549+8
 13120 085e 0B46     		mov	r3, r1
 13121 0860 9B00     		lsls	r3, r3, #2
 13122 0862 0B44     		add	r3, r3, r1
 13123 0864 1344     		add	r3, r3, r2
 13124 0866 03F20323 		addw	r3, r3, #515
 13125 086a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13126 086c 07F58A73 		add	r3, r7, #276
 13127 0870 1A54     		strb	r2, [r3, r0]
1777:..\src/command_processing.c ****                 packet_data[(uint16)(6 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13128              		.loc 1 1777 0
 13129 0872 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13130 0876 1A46     		mov	r2, r3	@ movhi
 13131 0878 9200     		lsls	r2, r2, #2
 13132 087a 1344     		add	r3, r3, r2
 13133 087c 1A46     		mov	r2, r3	@ movhi
 13134 087e 9100     		lsls	r1, r2, #2
 13135 0880 1A46     		mov	r2, r3	@ movhi
 13136 0882 0B46     		mov	r3, r1	@ movhi
 13137 0884 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 295


 13138 0886 5B00     		lsls	r3, r3, #1
 13139 0888 9AB2     		uxth	r2, r3
 13140 088a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13141 088e 1344     		add	r3, r3, r2
 13142 0890 9BB2     		uxth	r3, r3
 13143 0892 0633     		adds	r3, r3, #6
 13144 0894 9BB2     		uxth	r3, r3
 13145 0896 1846     		mov	r0, r3
 13146 0898 B7F8A436 		ldrh	r3, [r7, #1700]
 13147 089c 884A     		ldr	r2, .L549
 13148 089e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13149 08a0 1946     		mov	r1, r3
 13150 08a2 894A     		ldr	r2, .L549+8
 13151 08a4 0B46     		mov	r3, r1
 13152 08a6 9B00     		lsls	r3, r3, #2
 13153 08a8 0B44     		add	r3, r3, r1
 13154 08aa 1344     		add	r3, r3, r2
 13155 08ac 03F50173 		add	r3, r3, #516
 13156 08b0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13157 08b2 07F58A73 		add	r3, r7, #276
 13158 08b6 1A54     		strb	r2, [r3, r0]
1778:..\src/command_processing.c ****                 packet_data[(uint16)(7 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13159              		.loc 1 1778 0
 13160 08b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13161 08bc 1A46     		mov	r2, r3	@ movhi
 13162 08be 9200     		lsls	r2, r2, #2
 13163 08c0 1344     		add	r3, r3, r2
 13164 08c2 1A46     		mov	r2, r3	@ movhi
 13165 08c4 9100     		lsls	r1, r2, #2
 13166 08c6 1A46     		mov	r2, r3	@ movhi
 13167 08c8 0B46     		mov	r3, r1	@ movhi
 13168 08ca 1344     		add	r3, r3, r2
 13169 08cc 5B00     		lsls	r3, r3, #1
 13170 08ce 9AB2     		uxth	r2, r3
 13171 08d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13172 08d4 1344     		add	r3, r3, r2
 13173 08d6 9BB2     		uxth	r3, r3
 13174 08d8 0733     		adds	r3, r3, #7
 13175 08da 9BB2     		uxth	r3, r3
 13176 08dc 1846     		mov	r0, r3
 13177 08de B7F8A436 		ldrh	r3, [r7, #1700]
 13178 08e2 774A     		ldr	r2, .L549
 13179 08e4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13180 08e6 1946     		mov	r1, r3
 13181 08e8 774A     		ldr	r2, .L549+8
 13182 08ea 0B46     		mov	r3, r1
 13183 08ec 9B00     		lsls	r3, r3, #2
 13184 08ee 0B44     		add	r3, r3, r1
 13185 08f0 1344     		add	r3, r3, r2
 13186 08f2 03F20523 		addw	r3, r3, #517
 13187 08f6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13188 08f8 07F58A73 		add	r3, r7, #276
 13189 08fc 1A54     		strb	r2, [r3, r0]
1779:..\src/command_processing.c ****                 packet_data[(uint16)(8 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13190              		.loc 1 1779 0
 13191 08fe B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13192 0902 1A46     		mov	r2, r3	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 296


 13193 0904 9200     		lsls	r2, r2, #2
 13194 0906 1344     		add	r3, r3, r2
 13195 0908 1A46     		mov	r2, r3	@ movhi
 13196 090a 9100     		lsls	r1, r2, #2
 13197 090c 1A46     		mov	r2, r3	@ movhi
 13198 090e 0B46     		mov	r3, r1	@ movhi
 13199 0910 1344     		add	r3, r3, r2
 13200 0912 5B00     		lsls	r3, r3, #1
 13201 0914 9AB2     		uxth	r2, r3
 13202 0916 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13203 091a 1344     		add	r3, r3, r2
 13204 091c 9BB2     		uxth	r3, r3
 13205 091e 0833     		adds	r3, r3, #8
 13206 0920 9BB2     		uxth	r3, r3
 13207 0922 1846     		mov	r0, r3
 13208 0924 B7F8A436 		ldrh	r3, [r7, #1700]
 13209 0928 654A     		ldr	r2, .L549
 13210 092a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13211 092c 1946     		mov	r1, r3
 13212 092e 664A     		ldr	r2, .L549+8
 13213 0930 0B46     		mov	r3, r1
 13214 0932 9B00     		lsls	r3, r3, #2
 13215 0934 0B44     		add	r3, r3, r1
 13216 0936 1344     		add	r3, r3, r2
 13217 0938 03F20623 		addw	r3, r3, #518
 13218 093c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13219 093e 07F58A73 		add	r3, r7, #276
 13220 0942 1A54     		strb	r2, [r3, r0]
1780:..\src/command_processing.c **** 
1781:..\src/command_processing.c ****                 for(j = imu_table_str_len; j != 0; j--)
 13221              		.loc 1 1781 0
 13222 0944 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 13223 0948 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 13224 094c 2BE0     		b	.L524
 13225              	.L525:
1782:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 13226              		.loc 1 1782 0 discriminator 3
 13227 094e B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13228 0952 1A46     		mov	r2, r3	@ movhi
 13229 0954 9200     		lsls	r2, r2, #2
 13230 0956 1344     		add	r3, r3, r2
 13231 0958 1A46     		mov	r2, r3	@ movhi
 13232 095a 9100     		lsls	r1, r2, #2
 13233 095c 1A46     		mov	r2, r3	@ movhi
 13234 095e 0B46     		mov	r3, r1	@ movhi
 13235 0960 1344     		add	r3, r3, r2
 13236 0962 5B00     		lsls	r3, r3, #1
 13237 0964 9AB2     		uxth	r2, r3
 13238 0966 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13239 096a 1344     		add	r3, r3, r2
 13240 096c 9AB2     		uxth	r2, r3
 13241 096e 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 13242 0972 9BB2     		uxth	r3, r3
 13243 0974 1344     		add	r3, r3, r2
 13244 0976 9AB2     		uxth	r2, r3
 13245 0978 B7F8A236 		ldrh	r3, [r7, #1698]	@ movhi
 13246 097c D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 297


 13247 097e 9BB2     		uxth	r3, r3
 13248 0980 0933     		adds	r3, r3, #9
 13249 0982 9BB2     		uxth	r3, r3
 13250 0984 1946     		mov	r1, r3
 13251 0986 97F88F26 		ldrb	r2, [r7, #1679]	@ zero_extendqisi2
 13252 098a B7F8A236 		ldrh	r3, [r7, #1698]
 13253 098e D31A     		subs	r3, r2, r3
 13254 0990 07F19C02 		add	r2, r7, #156
 13255 0994 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 13256 0996 07F58A73 		add	r3, r7, #276
 13257 099a 5A54     		strb	r2, [r3, r1]
1781:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 13258              		.loc 1 1781 0 discriminator 3
 13259 099c B7F8A236 		ldrh	r3, [r7, #1698]
 13260 09a0 013B     		subs	r3, r3, #1
 13261 09a2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 13262              	.L524:
1781:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 13263              		.loc 1 1781 0 is_stmt 0 discriminator 1
 13264 09a6 B7F8A236 		ldrh	r3, [r7, #1698]
 13265 09aa 002B     		cmp	r3, #0
 13266 09ac CFD1     		bne	.L525
1768:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 13267              		.loc 1 1768 0 is_stmt 1 discriminator 2
 13268 09ae B7F8A436 		ldrh	r3, [r7, #1700]
 13269 09b2 0133     		adds	r3, r3, #1
 13270 09b4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13271              	.L523:
1768:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 13272              		.loc 1 1768 0 is_stmt 0 discriminator 1
 13273 09b8 444B     		ldr	r3, .L549+12
 13274 09ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13275 09bc 9BB2     		uxth	r3, r3
 13276 09be B7F8A426 		ldrh	r2, [r7, #1700]
 13277 09c2 9A42     		cmp	r2, r3
 13278 09c4 FFF4CAAE 		bcc	.L526
1783:..\src/command_processing.c ****             }  
1784:..\src/command_processing.c ****           
1785:..\src/command_processing.c **** 
1786:..\src/command_processing.c ****             /*-----------------SPI DELAY-----------------*/
1787:..\src/command_processing.c ****             
1788:..\src/command_processing.c ****             start_byte = start_byte + (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected);
 13279              		.loc 1 1788 0 is_stmt 1
 13280 09c8 404B     		ldr	r3, .L549+12
 13281 09ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13282 09cc 9BB2     		uxth	r3, r3
 13283 09ce 1A46     		mov	r2, r3	@ movhi
 13284 09d0 9200     		lsls	r2, r2, #2
 13285 09d2 1344     		add	r3, r3, r2
 13286 09d4 1A46     		mov	r2, r3	@ movhi
 13287 09d6 9100     		lsls	r1, r2, #2
 13288 09d8 1A46     		mov	r2, r3	@ movhi
 13289 09da 0B46     		mov	r3, r1	@ movhi
 13290 09dc 1344     		add	r3, r3, r2
 13291 09de 5B00     		lsls	r3, r3, #1
 13292 09e0 9AB2     		uxth	r2, r3
 13293 09e2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 298


 13294 09e6 1344     		add	r3, r3, r2
 13295 09e8 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1789:..\src/command_processing.c ****             sprintf(spi_read_delay_str, "%u - SPI read delay:", first_imu_parameter+N_IMU_Connected
 13296              		.loc 1 1789 0
 13297 09ec B7F89836 		ldrh	r3, [r7, #1688]
 13298 09f0 364A     		ldr	r2, .L549+12
 13299 09f2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 13300 09f4 1A44     		add	r2, r2, r3
 13301 09f6 07F18003 		add	r3, r7, #128
 13302 09fa 3549     		ldr	r1, .L549+16
 13303 09fc 1846     		mov	r0, r3
 13304 09fe FFF7FEFF 		bl	sprintf
1790:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_FLAG;
 13305              		.loc 1 1790 0
 13306 0a02 B7F89436 		ldrh	r3, [r7, #1684]
 13307 0a06 0233     		adds	r3, r3, #2
 13308 0a08 07F58A72 		add	r2, r7, #276
 13309 0a0c 0021     		movs	r1, #0
 13310 0a0e D154     		strb	r1, [r2, r3]
1791:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 13311              		.loc 1 1791 0
 13312 0a10 B7F89436 		ldrh	r3, [r7, #1684]
 13313 0a14 0333     		adds	r3, r3, #3
 13314 0a16 07F58A72 		add	r2, r7, #276
 13315 0a1a 0121     		movs	r1, #1
 13316 0a1c D154     		strb	r1, [r2, r3]
1792:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.imu.SPI_read_delay;
 13317              		.loc 1 1792 0
 13318 0a1e B7F89436 		ldrh	r3, [r7, #1684]
 13319 0a22 0433     		adds	r3, r3, #4
 13320 0a24 284A     		ldr	r2, .L549+8
 13321 0a26 92F80112 		ldrb	r1, [r2, #513]	@ zero_extendqisi2
 13322 0a2a 07F58A72 		add	r2, r7, #276
 13323 0a2e D154     		strb	r1, [r2, r3]
1793:..\src/command_processing.c ****             switch(c_mem.imu.SPI_read_delay) {
 13324              		.loc 1 1793 0
 13325 0a30 254B     		ldr	r3, .L549+8
 13326 0a32 93F80132 		ldrb	r3, [r3, #513]	@ zero_extendqisi2
 13327 0a36 012B     		cmp	r3, #1
 13328 0a38 17D0     		beq	.L528
 13329 0a3a 022B     		cmp	r3, #2
 13330 0a3c 28D0     		beq	.L529
 13331 0a3e 002B     		cmp	r3, #0
 13332 0a40 00D0     		beq	.L530
1794:..\src/command_processing.c ****                 case 0: 
1795:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " None"); 
1796:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1797:..\src/command_processing.c ****                     break;
1798:..\src/command_processing.c ****                 case 1: 
1799:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " Low"); 
1800:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
1801:..\src/command_processing.c ****                     break;
1802:..\src/command_processing.c ****                 case 2: 
1803:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " High");
1804:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1805:..\src/command_processing.c ****                     break;
1806:..\src/command_processing.c ****                 default:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 299


1807:..\src/command_processing.c ****                     break;
 13333              		.loc 1 1807 0
 13334 0a42 38E0     		b	.L531
 13335              	.L530:
1795:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 13336              		.loc 1 1795 0
 13337 0a44 07F18003 		add	r3, r7, #128
 13338 0a48 1846     		mov	r0, r3
 13339 0a4a FFF7FEFF 		bl	strlen
 13340 0a4e 0346     		mov	r3, r0
 13341 0a50 1A46     		mov	r2, r3
 13342 0a52 07F18003 		add	r3, r7, #128
 13343 0a56 1344     		add	r3, r3, r2
 13344 0a58 1E4A     		ldr	r2, .L549+20
 13345 0a5a 1068     		ldr	r0, [r2]	@ unaligned
 13346 0a5c 1860     		str	r0, [r3]	@ unaligned
 13347 0a5e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 13348 0a60 9A80     		strh	r2, [r3, #4]	@ unaligned
1796:..\src/command_processing.c ****                     break;
 13349              		.loc 1 1796 0
 13350 0a62 1A23     		movs	r3, #26
 13351 0a64 87F89D36 		strb	r3, [r7, #1693]
1797:..\src/command_processing.c ****                 case 1: 
 13352              		.loc 1 1797 0
 13353 0a68 25E0     		b	.L531
 13354              	.L528:
1799:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
 13355              		.loc 1 1799 0
 13356 0a6a 07F18003 		add	r3, r7, #128
 13357 0a6e 1846     		mov	r0, r3
 13358 0a70 FFF7FEFF 		bl	strlen
 13359 0a74 0346     		mov	r3, r0
 13360 0a76 1A46     		mov	r2, r3
 13361 0a78 07F18003 		add	r3, r7, #128
 13362 0a7c 1344     		add	r3, r3, r2
 13363 0a7e 164A     		ldr	r2, .L549+24
 13364 0a80 1068     		ldr	r0, [r2]	@ unaligned
 13365 0a82 1860     		str	r0, [r3]	@ unaligned
 13366 0a84 1279     		ldrb	r2, [r2, #4]
 13367 0a86 1A71     		strb	r2, [r3, #4]
1800:..\src/command_processing.c ****                     break;
 13368              		.loc 1 1800 0
 13369 0a88 1923     		movs	r3, #25
 13370 0a8a 87F89D36 		strb	r3, [r7, #1693]
1801:..\src/command_processing.c ****                 case 2: 
 13371              		.loc 1 1801 0
 13372 0a8e 12E0     		b	.L531
 13373              	.L529:
1803:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 13374              		.loc 1 1803 0
 13375 0a90 07F18003 		add	r3, r7, #128
 13376 0a94 1846     		mov	r0, r3
 13377 0a96 FFF7FEFF 		bl	strlen
 13378 0a9a 0346     		mov	r3, r0
 13379 0a9c 1A46     		mov	r2, r3
 13380 0a9e 07F18003 		add	r3, r7, #128
 13381 0aa2 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 300


 13382 0aa4 0D4A     		ldr	r2, .L549+28
 13383 0aa6 1068     		ldr	r0, [r2]	@ unaligned
 13384 0aa8 1860     		str	r0, [r3]	@ unaligned
 13385 0aaa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 13386 0aac 9A80     		strh	r2, [r3, #4]	@ unaligned
1804:..\src/command_processing.c ****                     break;
 13387              		.loc 1 1804 0
 13388 0aae 1A23     		movs	r3, #26
 13389 0ab0 87F89D36 		strb	r3, [r7, #1693]
1805:..\src/command_processing.c ****                 default:
 13390              		.loc 1 1805 0
 13391 0ab4 00BF     		nop
 13392              	.L531:
1808:..\src/command_processing.c ****             }            
1809:..\src/command_processing.c ****             for(i = spi_read_delay_str_len; i != 0; i--)
 13393              		.loc 1 1809 0
 13394 0ab6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 13395 0aba A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13396 0abe 28E0     		b	.L532
 13397              	.L550:
 13398              		.align	2
 13399              	.L549:
 13400 0ac0 00000000 		.word	IMU_connected
 13401 0ac4 E0100000 		.word	.LC147
 13402 0ac8 00000000 		.word	c_mem
 13403 0acc 00000000 		.word	N_IMU_Connected
 13404 0ad0 FC100000 		.word	.LC148
 13405 0ad4 14110000 		.word	.LC149
 13406 0ad8 1C110000 		.word	.LC150
 13407 0adc 24110000 		.word	.LC151
 13408              	.L533:
1810:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 13409              		.loc 1 1810 0 discriminator 3
 13410 0ae0 B7F89436 		ldrh	r3, [r7, #1684]
 13411 0ae4 5A1D     		adds	r2, r3, #5
 13412 0ae6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 13413 0aea 1A44     		add	r2, r2, r3
 13414 0aec B7F8A436 		ldrh	r3, [r7, #1700]
 13415 0af0 D31A     		subs	r3, r2, r3
 13416 0af2 97F89D16 		ldrb	r1, [r7, #1693]	@ zero_extendqisi2
 13417 0af6 B7F8A426 		ldrh	r2, [r7, #1700]
 13418 0afa 8A1A     		subs	r2, r1, r2
 13419 0afc 07F18001 		add	r1, r7, #128
 13420 0b00 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 13421 0b02 07F58A72 		add	r2, r7, #276
 13422 0b06 D154     		strb	r1, [r2, r3]
1809:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 13423              		.loc 1 1809 0 discriminator 3
 13424 0b08 B7F8A436 		ldrh	r3, [r7, #1700]
 13425 0b0c 013B     		subs	r3, r3, #1
 13426 0b0e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13427              	.L532:
1809:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 13428              		.loc 1 1809 0 is_stmt 0 discriminator 1
 13429 0b12 B7F8A436 		ldrh	r3, [r7, #1700]
 13430 0b16 002B     		cmp	r3, #0
 13431 0b18 E2D1     		bne	.L533
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 301


1811:..\src/command_processing.c ****             //The following byte indicates the number of menus at the end of the packet to send
1812:..\src/command_processing.c ****             packet_data[5+start_byte + spi_read_delay_str_len] = 1;
 13432              		.loc 1 1812 0 is_stmt 1
 13433 0b1a B7F89436 		ldrh	r3, [r7, #1684]
 13434 0b1e 5A1D     		adds	r2, r3, #5
 13435 0b20 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 13436 0b24 1344     		add	r3, r3, r2
 13437 0b26 07F58A72 		add	r2, r7, #276
 13438 0b2a 0121     		movs	r1, #1
 13439 0b2c D154     		strb	r1, [r2, r3]
1813:..\src/command_processing.c ****                   
1814:..\src/command_processing.c ****             
1815:..\src/command_processing.c ****             /*------------PARAMETERS MENU-----------*/
1816:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 13440              		.loc 1 1816 0
 13441 0b2e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13442 0b32 3233     		adds	r3, r3, #50
 13443 0b34 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1817:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 13444              		.loc 1 1817 0
 13445 0b38 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 13446 0b3c A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13447 0b40 1AE0     		b	.L534
 13448              	.L535:
1818:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte) + spi_delay_menu_len - i] = spi_delay_menu[spi
 13449              		.loc 1 1818 0 discriminator 3
 13450 0b42 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13451 0b46 0233     		adds	r3, r3, #2
 13452 0b48 9BB2     		uxth	r3, r3
 13453 0b4a 1A46     		mov	r2, r3
 13454 0b4c 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 13455 0b50 1A44     		add	r2, r2, r3
 13456 0b52 B7F8A436 		ldrh	r3, [r7, #1700]
 13457 0b56 D31A     		subs	r3, r2, r3
 13458 0b58 97F88E16 		ldrb	r1, [r7, #1678]	@ zero_extendqisi2
 13459 0b5c B7F8A426 		ldrh	r2, [r7, #1700]
 13460 0b60 8A1A     		subs	r2, r1, r2
 13461 0b62 07F10801 		add	r1, r7, #8
 13462 0b66 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 13463 0b68 07F58A72 		add	r2, r7, #276
 13464 0b6c D154     		strb	r1, [r2, r3]
1817:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 13465              		.loc 1 1817 0 discriminator 3
 13466 0b6e B7F8A436 		ldrh	r3, [r7, #1700]
 13467 0b72 013B     		subs	r3, r3, #1
 13468 0b74 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13469              	.L534:
1817:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 13470              		.loc 1 1817 0 is_stmt 0 discriminator 1
 13471 0b78 B7F8A436 		ldrh	r3, [r7, #1700]
 13472 0b7c 002B     		cmp	r3, #0
 13473 0b7e E0D1     		bne	.L535
1819:..\src/command_processing.c **** 
1820:..\src/command_processing.c ****             packet_data[packet_length - 1] = LCRChecksum(packet_data,packet_length - 1);
 13474              		.loc 1 1820 0 is_stmt 1
 13475 0b80 B7F89636 		ldrh	r3, [r7, #1686]
 13476 0b84 5C1E     		subs	r4, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 302


 13477 0b86 B7F89636 		ldrh	r3, [r7, #1686]	@ movhi
 13478 0b8a DBB2     		uxtb	r3, r3
 13479 0b8c 013B     		subs	r3, r3, #1
 13480 0b8e DAB2     		uxtb	r2, r3
 13481 0b90 07F58A73 		add	r3, r7, #276
 13482 0b94 1146     		mov	r1, r2
 13483 0b96 1846     		mov	r0, r3
 13484 0b98 FFF7FEFF 		bl	LCRChecksum
 13485 0b9c 0346     		mov	r3, r0
 13486 0b9e 1A46     		mov	r2, r3
 13487 0ba0 07F58A73 		add	r3, r7, #276
 13488 0ba4 1A55     		strb	r2, [r3, r4]
1821:..\src/command_processing.c ****             commWrite(packet_data, packet_length);
 13489              		.loc 1 1821 0
 13490 0ba6 B7F89626 		ldrh	r2, [r7, #1686]
 13491 0baa 07F58A73 		add	r3, r7, #276
 13492 0bae 1146     		mov	r1, r2
 13493 0bb0 1846     		mov	r0, r3
 13494 0bb2 FFF7FEFF 		bl	commWrite
1822:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 13495              		.loc 1 1822 0
 13496 0bb6 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
1823:..\src/command_processing.c ****         break;
 13497              		.loc 1 1823 0
 13498 0bba 09E1     		b	.L536
 13499              	.L543:
1824:..\src/command_processing.c **** 
1825:..\src/command_processing.c **** //=========================================================     other_params
1826:..\src/command_processing.c ****         default: 
1827:..\src/command_processing.c ****             
1828:..\src/command_processing.c ****             if (index < first_imu_parameter-1)
 13500              		.loc 1 1828 0
 13501 0bbc BB1D     		adds	r3, r7, #6
 13502 0bbe 1A88     		ldrh	r2, [r3]
 13503 0bc0 B7F89836 		ldrh	r3, [r7, #1688]
 13504 0bc4 013B     		subs	r3, r3, #1
 13505 0bc6 9A42     		cmp	r2, r3
 13506 0bc8 C0F20181 		blt	.L544
1829:..\src/command_processing.c ****                 break;
1830:..\src/command_processing.c ****             
1831:..\src/command_processing.c ****             if (index == first_imu_parameter+N_IMU_Connected) {
 13507              		.loc 1 1831 0
 13508 0bcc BB1D     		adds	r3, r7, #6
 13509 0bce 1A88     		ldrh	r2, [r3]
 13510 0bd0 B7F89836 		ldrh	r3, [r7, #1688]
 13511 0bd4 8149     		ldr	r1, .L551
 13512 0bd6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 13513 0bd8 0B44     		add	r3, r3, r1
 13514 0bda 9A42     		cmp	r2, r3
 13515 0bdc 05D1     		bne	.L538
1832:..\src/command_processing.c ****                 g_mem.imu.SPI_read_delay = g_rx.buffer[3];  //SPI read delay - uint8
 13516              		.loc 1 1832 0
 13517 0bde 804B     		ldr	r3, .L551+4
 13518 0be0 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 13519 0be2 804B     		ldr	r3, .L551+8
 13520 0be4 83F80122 		strb	r2, [r3, #513]
1833:..\src/command_processing.c ****                 break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 303


 13521              		.loc 1 1833 0
 13522 0be8 F2E0     		b	.L536
 13523              	.L538:
1834:..\src/command_processing.c ****             }
1835:..\src/command_processing.c ****             
1836:..\src/command_processing.c ****             if (index == first_imu_parameter-1) {
 13524              		.loc 1 1836 0
 13525 0bea BB1D     		adds	r3, r7, #6
 13526 0bec 1A88     		ldrh	r2, [r3]
 13527 0bee B7F89836 		ldrh	r3, [r7, #1688]
 13528 0bf2 013B     		subs	r3, r3, #1
 13529 0bf4 9A42     		cmp	r2, r3
 13530 0bf6 05D1     		bne	.L539
1837:..\src/command_processing.c ****                 g_mem.dev.id = g_rx.buffer[3];          //ID - uint8
 13531              		.loc 1 1837 0
 13532 0bf8 794B     		ldr	r3, .L551+4
 13533 0bfa DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 13534 0bfc 794B     		ldr	r3, .L551+8
 13535 0bfe 83F8A020 		strb	r2, [r3, #160]
1838:..\src/command_processing.c ****             }
1839:..\src/command_processing.c ****             else {
1840:..\src/command_processing.c ****             
1841:..\src/command_processing.c ****                 //Set Imu table (index > = first_imu_parameter)
1842:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][0] = g_rx.buffer[3];
1843:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
1844:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
1845:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
1846:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
1847:..\src/command_processing.c ****                 
1848:..\src/command_processing.c ****                 // Recompute IMU packets dimension
1849:..\src/command_processing.c ****                 imus_data_size = 1; //header    
1850:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
1851:..\src/command_processing.c ****                 {
1852:..\src/command_processing.c ****                     single_imu_size[IMU_connected[i]] = 1 + 6*g_mem.imu.IMU_conf[IMU_connected[i]][
1853:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
1854:..\src/command_processing.c ****                 }
1855:..\src/command_processing.c ****                 imus_data_size = imus_data_size + 1;    //checksum
1856:..\src/command_processing.c ****             
1857:..\src/command_processing.c ****             }
1858:..\src/command_processing.c ****             
1859:..\src/command_processing.c ****         break;
 13536              		.loc 1 1859 0
 13537 0c02 E5E0     		b	.L536
 13538              	.L539:
1842:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
 13539              		.loc 1 1842 0
 13540 0c04 BB1D     		adds	r3, r7, #6
 13541 0c06 1A88     		ldrh	r2, [r3]
 13542 0c08 B7F89836 		ldrh	r3, [r7, #1688]
 13543 0c0c D31A     		subs	r3, r2, r3
 13544 0c0e 764A     		ldr	r2, .L551+12
 13545 0c10 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13546 0c12 1946     		mov	r1, r3
 13547 0c14 724B     		ldr	r3, .L551+4
 13548 0c16 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 13549 0c18 724A     		ldr	r2, .L551+8
 13550 0c1a 0B46     		mov	r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 304


 13551 0c1c 9B00     		lsls	r3, r3, #2
 13552 0c1e 0B44     		add	r3, r3, r1
 13553 0c20 1344     		add	r3, r3, r2
 13554 0c22 03F20223 		addw	r3, r3, #514
 13555 0c26 0246     		mov	r2, r0
 13556 0c28 1A70     		strb	r2, [r3]
1843:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
 13557              		.loc 1 1843 0
 13558 0c2a BB1D     		adds	r3, r7, #6
 13559 0c2c 1A88     		ldrh	r2, [r3]
 13560 0c2e B7F89836 		ldrh	r3, [r7, #1688]
 13561 0c32 D31A     		subs	r3, r2, r3
 13562 0c34 6C4A     		ldr	r2, .L551+12
 13563 0c36 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13564 0c38 1946     		mov	r1, r3
 13565 0c3a 694B     		ldr	r3, .L551+4
 13566 0c3c 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 13567 0c3e 694A     		ldr	r2, .L551+8
 13568 0c40 0B46     		mov	r3, r1
 13569 0c42 9B00     		lsls	r3, r3, #2
 13570 0c44 0B44     		add	r3, r3, r1
 13571 0c46 1344     		add	r3, r3, r2
 13572 0c48 03F20323 		addw	r3, r3, #515
 13573 0c4c 0246     		mov	r2, r0
 13574 0c4e 1A70     		strb	r2, [r3]
1844:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
 13575              		.loc 1 1844 0
 13576 0c50 BB1D     		adds	r3, r7, #6
 13577 0c52 1A88     		ldrh	r2, [r3]
 13578 0c54 B7F89836 		ldrh	r3, [r7, #1688]
 13579 0c58 D31A     		subs	r3, r2, r3
 13580 0c5a 634A     		ldr	r2, .L551+12
 13581 0c5c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13582 0c5e 1946     		mov	r1, r3
 13583 0c60 5F4B     		ldr	r3, .L551+4
 13584 0c62 5879     		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 13585 0c64 5F4A     		ldr	r2, .L551+8
 13586 0c66 0B46     		mov	r3, r1
 13587 0c68 9B00     		lsls	r3, r3, #2
 13588 0c6a 0B44     		add	r3, r3, r1
 13589 0c6c 1344     		add	r3, r3, r2
 13590 0c6e 03F50173 		add	r3, r3, #516
 13591 0c72 0246     		mov	r2, r0
 13592 0c74 1A70     		strb	r2, [r3]
1845:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
 13593              		.loc 1 1845 0
 13594 0c76 BB1D     		adds	r3, r7, #6
 13595 0c78 1A88     		ldrh	r2, [r3]
 13596 0c7a B7F89836 		ldrh	r3, [r7, #1688]
 13597 0c7e D31A     		subs	r3, r2, r3
 13598 0c80 594A     		ldr	r2, .L551+12
 13599 0c82 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13600 0c84 1946     		mov	r1, r3
 13601 0c86 564B     		ldr	r3, .L551+4
 13602 0c88 9879     		ldrb	r0, [r3, #6]	@ zero_extendqisi2
 13603 0c8a 564A     		ldr	r2, .L551+8
 13604 0c8c 0B46     		mov	r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 305


 13605 0c8e 9B00     		lsls	r3, r3, #2
 13606 0c90 0B44     		add	r3, r3, r1
 13607 0c92 1344     		add	r3, r3, r2
 13608 0c94 03F20523 		addw	r3, r3, #517
 13609 0c98 0246     		mov	r2, r0
 13610 0c9a 1A70     		strb	r2, [r3]
1846:..\src/command_processing.c ****                 
 13611              		.loc 1 1846 0
 13612 0c9c BB1D     		adds	r3, r7, #6
 13613 0c9e 1A88     		ldrh	r2, [r3]
 13614 0ca0 B7F89836 		ldrh	r3, [r7, #1688]
 13615 0ca4 D31A     		subs	r3, r2, r3
 13616 0ca6 504A     		ldr	r2, .L551+12
 13617 0ca8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13618 0caa 1946     		mov	r1, r3
 13619 0cac 4C4B     		ldr	r3, .L551+4
 13620 0cae D879     		ldrb	r0, [r3, #7]	@ zero_extendqisi2
 13621 0cb0 4C4A     		ldr	r2, .L551+8
 13622 0cb2 0B46     		mov	r3, r1
 13623 0cb4 9B00     		lsls	r3, r3, #2
 13624 0cb6 0B44     		add	r3, r3, r1
 13625 0cb8 1344     		add	r3, r3, r2
 13626 0cba 03F20623 		addw	r3, r3, #518
 13627 0cbe 0246     		mov	r2, r0
 13628 0cc0 1A70     		strb	r2, [r3]
1849:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
 13629              		.loc 1 1849 0
 13630 0cc2 4A4B     		ldr	r3, .L551+16
 13631 0cc4 0122     		movs	r2, #1
 13632 0cc6 1A60     		str	r2, [r3]
1850:..\src/command_processing.c ****                 {
 13633              		.loc 1 1850 0
 13634 0cc8 0023     		movs	r3, #0
 13635 0cca A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13636 0cce 71E0     		b	.L541
 13637              	.L542:
1852:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
 13638              		.loc 1 1852 0 discriminator 3
 13639 0cd0 B7F8A436 		ldrh	r3, [r7, #1700]
 13640 0cd4 444A     		ldr	r2, .L551+12
 13641 0cd6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13642 0cd8 1C46     		mov	r4, r3
 13643 0cda B7F8A436 		ldrh	r3, [r7, #1700]
 13644 0cde 424A     		ldr	r2, .L551+12
 13645 0ce0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13646 0ce2 1946     		mov	r1, r3
 13647 0ce4 3F4A     		ldr	r2, .L551+8
 13648 0ce6 0B46     		mov	r3, r1
 13649 0ce8 9B00     		lsls	r3, r3, #2
 13650 0cea 0B44     		add	r3, r3, r1
 13651 0cec 1344     		add	r3, r3, r2
 13652 0cee 03F20223 		addw	r3, r3, #514
 13653 0cf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13654 0cf4 1A46     		mov	r2, r3
 13655 0cf6 1346     		mov	r3, r2
 13656 0cf8 5B00     		lsls	r3, r3, #1
 13657 0cfa 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 306


 13658 0cfc 5B00     		lsls	r3, r3, #1
 13659 0cfe 5A1C     		adds	r2, r3, #1
 13660 0d00 B7F8A436 		ldrh	r3, [r7, #1700]
 13661 0d04 3849     		ldr	r1, .L551+12
 13662 0d06 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13663 0d08 1846     		mov	r0, r3
 13664 0d0a 3649     		ldr	r1, .L551+8
 13665 0d0c 0346     		mov	r3, r0
 13666 0d0e 9B00     		lsls	r3, r3, #2
 13667 0d10 0344     		add	r3, r3, r0
 13668 0d12 0B44     		add	r3, r3, r1
 13669 0d14 03F20323 		addw	r3, r3, #515
 13670 0d18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13671 0d1a 1946     		mov	r1, r3
 13672 0d1c 0B46     		mov	r3, r1
 13673 0d1e 5B00     		lsls	r3, r3, #1
 13674 0d20 0B44     		add	r3, r3, r1
 13675 0d22 5B00     		lsls	r3, r3, #1
 13676 0d24 1A44     		add	r2, r2, r3
 13677 0d26 B7F8A436 		ldrh	r3, [r7, #1700]
 13678 0d2a 2F49     		ldr	r1, .L551+12
 13679 0d2c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13680 0d2e 1846     		mov	r0, r3
 13681 0d30 2C49     		ldr	r1, .L551+8
 13682 0d32 0346     		mov	r3, r0
 13683 0d34 9B00     		lsls	r3, r3, #2
 13684 0d36 0344     		add	r3, r3, r0
 13685 0d38 0B44     		add	r3, r3, r1
 13686 0d3a 03F50173 		add	r3, r3, #516
 13687 0d3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13688 0d40 1946     		mov	r1, r3
 13689 0d42 0B46     		mov	r3, r1
 13690 0d44 5B00     		lsls	r3, r3, #1
 13691 0d46 0B44     		add	r3, r3, r1
 13692 0d48 5B00     		lsls	r3, r3, #1
 13693 0d4a 1A44     		add	r2, r2, r3
 13694 0d4c B7F8A436 		ldrh	r3, [r7, #1700]
 13695 0d50 2549     		ldr	r1, .L551+12
 13696 0d52 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13697 0d54 1846     		mov	r0, r3
 13698 0d56 2349     		ldr	r1, .L551+8
 13699 0d58 0346     		mov	r3, r0
 13700 0d5a 9B00     		lsls	r3, r3, #2
 13701 0d5c 0344     		add	r3, r3, r0
 13702 0d5e 0B44     		add	r3, r3, r1
 13703 0d60 03F20523 		addw	r3, r3, #517
 13704 0d64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13705 0d66 1B01     		lsls	r3, r3, #4
 13706 0d68 1A44     		add	r2, r2, r3
 13707 0d6a B7F8A436 		ldrh	r3, [r7, #1700]
 13708 0d6e 1E49     		ldr	r1, .L551+12
 13709 0d70 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13710 0d72 1846     		mov	r0, r3
 13711 0d74 1B49     		ldr	r1, .L551+8
 13712 0d76 0346     		mov	r3, r0
 13713 0d78 9B00     		lsls	r3, r3, #2
 13714 0d7a 0344     		add	r3, r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 307


 13715 0d7c 0B44     		add	r3, r3, r1
 13716 0d7e 03F20623 		addw	r3, r3, #518
 13717 0d82 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13718 0d84 5B00     		lsls	r3, r3, #1
 13719 0d86 1344     		add	r3, r3, r2
 13720 0d88 0133     		adds	r3, r3, #1
 13721 0d8a 194A     		ldr	r2, .L551+20
 13722 0d8c 42F82430 		str	r3, [r2, r4, lsl #2]
1853:..\src/command_processing.c ****                 }
 13723              		.loc 1 1853 0 discriminator 3
 13724 0d90 B7F8A436 		ldrh	r3, [r7, #1700]
 13725 0d94 144A     		ldr	r2, .L551+12
 13726 0d96 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13727 0d98 1A46     		mov	r2, r3
 13728 0d9a 154B     		ldr	r3, .L551+20
 13729 0d9c 53F82220 		ldr	r2, [r3, r2, lsl #2]
 13730 0da0 124B     		ldr	r3, .L551+16
 13731 0da2 1B68     		ldr	r3, [r3]
 13732 0da4 1344     		add	r3, r3, r2
 13733 0da6 114A     		ldr	r2, .L551+16
 13734 0da8 1360     		str	r3, [r2]
1850:..\src/command_processing.c ****                 {
 13735              		.loc 1 1850 0 discriminator 3
 13736 0daa B7F8A436 		ldrh	r3, [r7, #1700]
 13737 0dae 0133     		adds	r3, r3, #1
 13738 0db0 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13739              	.L541:
1850:..\src/command_processing.c ****                 {
 13740              		.loc 1 1850 0 is_stmt 0 discriminator 1
 13741 0db4 094B     		ldr	r3, .L551
 13742 0db6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13743 0db8 9BB2     		uxth	r3, r3
 13744 0dba B7F8A426 		ldrh	r2, [r7, #1700]
 13745 0dbe 9A42     		cmp	r2, r3
 13746 0dc0 86D3     		bcc	.L542
1855:..\src/command_processing.c ****             
 13747              		.loc 1 1855 0 is_stmt 1
 13748 0dc2 0A4B     		ldr	r3, .L551+16
 13749 0dc4 1B68     		ldr	r3, [r3]
 13750 0dc6 0133     		adds	r3, r3, #1
 13751 0dc8 084A     		ldr	r2, .L551+16
 13752 0dca 1360     		str	r3, [r2]
 13753              		.loc 1 1859 0
 13754 0dcc 00E0     		b	.L536
 13755              	.L544:
1829:..\src/command_processing.c ****             
 13756              		.loc 1 1829 0
 13757 0dce 00BF     		nop
 13758              	.L536:
1860:..\src/command_processing.c ****     }
1861:..\src/command_processing.c **** }
 13759              		.loc 1 1861 0 discriminator 1
 13760 0dd0 00BF     		nop
 13761 0dd2 07F5D567 		add	r7, r7, #1704
 13762              		.cfi_def_cfa_offset 16
 13763 0dd6 BD46     		mov	sp, r7
 13764              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 308


 13765              		@ sp needed
 13766 0dd8 B0BD     		pop	{r4, r5, r7, pc}
 13767              	.L552:
 13768 0dda 00BF     		.align	2
 13769              	.L551:
 13770 0ddc 00000000 		.word	N_IMU_Connected
 13771 0de0 00000000 		.word	g_rx
 13772 0de4 00000000 		.word	g_mem
 13773 0de8 00000000 		.word	IMU_connected
 13774 0dec 00000000 		.word	imus_data_size
 13775 0df0 00000000 		.word	single_imu_size
 13776              		.cfi_endproc
 13777              	.LFE70:
 13778              		.size	get_IMU_param_list, .-get_IMU_param_list
 13779              		.section	.text.setZeros,"ax",%progbits
 13780              		.align	2
 13781              		.global	setZeros
 13782              		.thumb
 13783              		.thumb_func
 13784              		.type	setZeros, %function
 13785              	setZeros:
 13786              	.LFB71:
1862:..\src/command_processing.c **** 
1863:..\src/command_processing.c **** //==============================================================================
1864:..\src/command_processing.c **** //                                                            COMMAND SET ZEROS
1865:..\src/command_processing.c **** //==============================================================================
1866:..\src/command_processing.c **** 
1867:..\src/command_processing.c **** void setZeros()
1868:..\src/command_processing.c **** {
 13787              		.loc 1 1868 0
 13788              		.cfi_startproc
 13789              		@ args = 0, pretend = 0, frame = 8
 13790              		@ frame_needed = 1, uses_anonymous_args = 0
 13791 0000 B0B5     		push	{r4, r5, r7, lr}
 13792              		.cfi_def_cfa_offset 16
 13793              		.cfi_offset 4, -16
 13794              		.cfi_offset 5, -12
 13795              		.cfi_offset 7, -8
 13796              		.cfi_offset 14, -4
 13797 0002 82B0     		sub	sp, sp, #8
 13798              		.cfi_def_cfa_offset 24
 13799 0004 00AF     		add	r7, sp, #0
 13800              		.cfi_def_cfa_register 7
1869:..\src/command_processing.c ****     uint8 CYDATA i, j;        // iterator
1870:..\src/command_processing.c ****     
1871:..\src/command_processing.c ****     for (j = 0; j < N_ENCODER_LINE_MAX; j++) {
 13801              		.loc 1 1871 0
 13802 0006 0023     		movs	r3, #0
 13803 0008 BB71     		strb	r3, [r7, #6]
 13804 000a 2FE0     		b	.L554
 13805              	.L557:
1872:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13806              		.loc 1 1872 0
 13807 000c 0023     		movs	r3, #0
 13808 000e FB71     		strb	r3, [r7, #7]
 13809 0010 22E0     		b	.L555
 13810              	.L556:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 309


1873:..\src/command_processing.c ****             g_mem.enc[j].m_off[i] = (int32)(data_encoder_raw[j][i]);
 13811              		.loc 1 1873 0 discriminator 3
 13812 0012 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 13813 0014 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 13814 0016 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 13815 0018 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 13816 001a 194D     		ldr	r5, .L558
 13817 001c 0B46     		mov	r3, r1
 13818 001e 9B00     		lsls	r3, r3, #2
 13819 0020 0B44     		add	r3, r3, r1
 13820 0022 2344     		add	r3, r3, r4
 13821 0024 55F82330 		ldr	r3, [r5, r3, lsl #2]
 13822 0028 1C46     		mov	r4, r3
 13823 002a 1649     		ldr	r1, .L558+4
 13824 002c 1346     		mov	r3, r2
 13825 002e 5B00     		lsls	r3, r3, #1
 13826 0030 1344     		add	r3, r3, r2
 13827 0032 9B00     		lsls	r3, r3, #2
 13828 0034 0344     		add	r3, r3, r0
 13829 0036 6633     		adds	r3, r3, #102
 13830 0038 41F82340 		str	r4, [r1, r3, lsl #2]
1874:..\src/command_processing.c ****             g_meas[j].rot[i] = (int8)0;
 13831              		.loc 1 1874 0 discriminator 3
 13832 003c BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 13833 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13834 0040 1149     		ldr	r1, .L558+8
 13835 0042 3420     		movs	r0, #52
 13836 0044 00FB02F2 		mul	r2, r0, r2
 13837 0048 0A44     		add	r2, r2, r1
 13838 004a 1344     		add	r3, r3, r2
 13839 004c 1833     		adds	r3, r3, #24
 13840 004e 0022     		movs	r2, #0
 13841 0050 1A70     		strb	r2, [r3]
1872:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13842              		.loc 1 1872 0 discriminator 3
 13843 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13844 0054 0133     		adds	r3, r3, #1
 13845 0056 FB71     		strb	r3, [r7, #7]
 13846              	.L555:
1872:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13847              		.loc 1 1872 0 is_stmt 0 discriminator 1
 13848 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13849 005a 022B     		cmp	r3, #2
 13850 005c D9D9     		bls	.L556
1875:..\src/command_processing.c ****         }
1876:..\src/command_processing.c ****         reset_last_value_flag[j] = 1;
 13851              		.loc 1 1876 0 is_stmt 1 discriminator 2
 13852 005e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 13853 0060 0A4A     		ldr	r2, .L558+12
 13854 0062 0121     		movs	r1, #1
 13855 0064 D154     		strb	r1, [r2, r3]
1871:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13856              		.loc 1 1871 0 discriminator 2
 13857 0066 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 13858 0068 0133     		adds	r3, r3, #1
 13859 006a BB71     		strb	r3, [r7, #6]
 13860              	.L554:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 310


1871:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13861              		.loc 1 1871 0 is_stmt 0 discriminator 1
 13862 006c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 13863 006e 012B     		cmp	r3, #1
 13864 0070 CCD9     		bls	.L557
1877:..\src/command_processing.c ****     }
1878:..\src/command_processing.c **** 
1879:..\src/command_processing.c ****     sendAcknowledgment(ACK_OK);
 13865              		.loc 1 1879 0 is_stmt 1
 13866 0072 0120     		movs	r0, #1
 13867 0074 FFF7FEFF 		bl	sendAcknowledgment
1880:..\src/command_processing.c **** }
 13868              		.loc 1 1880 0
 13869 0078 00BF     		nop
 13870 007a 0837     		adds	r7, r7, #8
 13871              		.cfi_def_cfa_offset 16
 13872 007c BD46     		mov	sp, r7
 13873              		.cfi_def_cfa_register 13
 13874              		@ sp needed
 13875 007e B0BD     		pop	{r4, r5, r7, pc}
 13876              	.L559:
 13877              		.align	2
 13878              	.L558:
 13879 0080 00000000 		.word	data_encoder_raw
 13880 0084 00000000 		.word	g_mem
 13881 0088 00000000 		.word	g_meas
 13882 008c 00000000 		.word	reset_last_value_flag
 13883              		.cfi_endproc
 13884              	.LFE71:
 13885              		.size	setZeros, .-setZeros
 13886              		.section	.rodata
 13887              		.align	2
 13888              	.LC152:
 13889 115c 0D0A00   		.ascii	"\015\012\000"
 13890 115f 00       		.align	2
 13891              	.LC153:
 13892 1160 4669726D 		.ascii	"Firmware version: \000"
 13892      77617265 
 13892      20766572 
 13892      73696F6E 
 13892      3A2000
 13893 1173 00       		.align	2
 13894              	.LC154:
 13895 1174 47656E65 		.ascii	"Generic firmware v. 1.9.4 (PSoC5)\000"
 13895      72696320 
 13895      6669726D 
 13895      77617265 
 13895      20762E20 
 13896 1196 0000     		.align	2
 13897              	.LC155:
 13898 1198 2E0D0A0D 		.ascii	".\015\012\015\012\000"
 13898      0A00
 13899 119e 0000     		.align	2
 13900              	.LC156:
 13901 11a0 44455649 		.ascii	"DEVICE INFO\015\012\000"
 13901      43452049 
 13901      4E464F0D 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 311


 13901      0A00
 13902 11ae 0000     		.align	2
 13903              	.LC157:
 13904 11b0 49443A20 		.ascii	"ID: %d\015\012\000"
 13904      25640D0A 
 13904      00
 13905 11b9 000000   		.align	2
 13906              	.LC158:
 13907 11bc 44657669 		.ascii	"Device: SOFTHAND PRO\015\012\000"
 13907      63653A20 
 13907      534F4654 
 13907      48414E44 
 13907      2050524F 
 13908 11d3 00       		.align	2
 13909              	.LC159:
 13910 11d4 44657669 		.ascii	"Device: GENERIC 2 MOTORS\015\012\000"
 13910      63653A20 
 13910      47454E45 
 13910      52494320 
 13910      32204D4F 
 13911 11ef 00       		.align	2
 13912              	.LC160:
 13913 11f0 44657669 		.ascii	"Device: AIR CHAMBERS HAPTIC FEEDBACK\015\012\000"
 13913      63653A20 
 13913      41495220 
 13913      4348414D 
 13913      42455253 
 13914 1217 00       		.align	2
 13915              	.LC161:
 13916 1218 44657669 		.ascii	"Device: OTTOBOCK 6v ACTIVE WRIST MASTER\015\012\000"
 13916      63653A20 
 13916      4F54544F 
 13916      424F434B 
 13916      20367620 
 13917 1242 0000     		.align	2
 13918              	.LC162:
 13919 1244 44657669 		.ascii	"Device: SOFTHAND 2 MOTORS\015\012\000"
 13919      63653A20 
 13919      534F4654 
 13919      48414E44 
 13919      2032204D 
 13920              		.align	2
 13921              	.LC163:
 13922 1260 48616E64 		.ascii	"Hand side: RIGHT\015\012\000"
 13922      20736964 
 13922      653A2052 
 13922      49474854 
 13922      0D0A00
 13923 1273 00       		.align	2
 13924              	.LC164:
 13925 1274 48616E64 		.ascii	"Hand side: LEFT\015\012\000"
 13925      20736964 
 13925      653A204C 
 13925      4546540D 
 13925      0A00
 13926 1286 0000     		.align	2
 13927              	.LC165:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 312


 13928 1288 55736572 		.ascii	"User: MARIA\015\012\000"
 13928      3A204D41 
 13928      5249410D 
 13928      0A00
 13929 1296 0000     		.align	2
 13930              	.LC166:
 13931 1298 55736572 		.ascii	"User: ROZA\015\012\000"
 13931      3A20524F 
 13931      5A410D0A 
 13931      00
 13932 12a5 000000   		.align	2
 13933              	.LC167:
 13934 12a8 55736572 		.ascii	"User: GENERIC USER\015\012\000"
 13934      3A204745 
 13934      4E455249 
 13934      43205553 
 13934      45520D0A 
 13935 12bd 000000   		.align	2
 13936              	.LC168:
 13937 12c0 4D4F544F 		.ascii	"MOTOR %d INFO\015\012\000"
 13937      52202564 
 13937      20494E46 
 13937      4F0D0A00 
 13938              		.align	2
 13939              	.LC169:
 13940 12d0 4D6F746F 		.ascii	"Motor reference\000"
 13940      72207265 
 13940      66657265 
 13940      6E636500 
 13941              		.align	2
 13942              	.LC170:
 13943 12e0 202D2043 		.ascii	" - Currents: \000"
 13943      75727265 
 13943      6E74733A 
 13943      2000
 13944 12ee 0000     		.align	2
 13945              	.LC171:
 13946 12f0 202D2050 		.ascii	" - Pwm: \000"
 13946      776D3A20 
 13946      00
 13947 12f9 000000   		.align	2
 13948              	.LC172:
 13949 12fc 202D2050 		.ascii	" - Position: \000"
 13949      6F736974 
 13949      696F6E3A 
 13949      2000
 13950 130a 0000     		.align	2
 13951              	.LC173:
 13952 130c 25642000 		.ascii	"%d \000"
 13953              		.align	2
 13954              	.LC174:
 13955 1310 4D6F746F 		.ascii	"Motor enabled: \000"
 13955      7220656E 
 13955      61626C65 
 13955      643A2000 
 13956              		.align	2
 13957              	.LC175:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 313


 13958 1320 5945530D 		.ascii	"YES\015\012\000"
 13958      0A00
 13959 1326 0000     		.align	2
 13960              	.LC176:
 13961 1328 4E4F0D0A 		.ascii	"NO\015\012\000"
 13961      00
 13962 132d 000000   		.align	2
 13963              	.LC177:
 13964 1330 50574D20 		.ascii	"PWM rescaling activation: \000"
 13964      72657363 
 13964      616C696E 
 13964      67206163 
 13964      74697661 
 13965 134b 00       		.align	2
 13966              	.LC178:
 13967 134c 5945530A 		.ascii	"YES\012\000"
 13967      00
 13968 1351 000000   		.align	2
 13969              	.LC179:
 13970 1354 4E4F0A00 		.ascii	"NO\012\000"
 13971              		.align	2
 13972              	.LC180:
 13973 1358 50574D20 		.ascii	"PWM Limit: %d\015\012\000"
 13973      4C696D69 
 13973      743A2025 
 13973      640D0A00 
 13974              		.align	2
 13975              	.LC181:
 13976 1368 0D0A4D45 		.ascii	"\015\012MEASUREMENTS INFO\015\012\000"
 13976      41535552 
 13976      454D454E 
 13976      54532049 
 13976      4E464F0D 
 13977 137e 0000     		.align	2
 13978              	.LC182:
 13979 1380 53656E73 		.ascii	"Sensor value: \000"
 13979      6F722076 
 13979      616C7565 
 13979      3A2000
 13980 138f 00       		.align	2
 13981              	.LC183:
 13982 1390 256400   		.ascii	"%d\000"
 13983 1393 00       		.align	2
 13984              	.LC184:
 13985 1394 2C2000   		.ascii	", \000"
 13986 1397 00       		.align	2
 13987              	.LC185:
 13988 1398 4A6F7973 		.ascii	"Joystick measurements: %d, %d\000"
 13988      7469636B 
 13988      206D6561 
 13988      73757265 
 13988      6D656E74 
 13989 13b6 0000     		.align	2
 13990              	.LC186:
 13991 13b8 42617474 		.ascii	"Battery %d Voltage (mV): %ld\000"
 13991      65727920 
 13991      25642056 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 314


 13991      6F6C7461 
 13991      67652028 
 13992 13d5 000000   		.align	2
 13993              	.LC187:
 13994 13d8 46756C6C 		.ascii	"Full charge power tension %d (mV): %ld\000"
 13994      20636861 
 13994      72676520 
 13994      706F7765 
 13994      72207465 
 13995 13ff 00       		.align	2
 13996              	.LC188:
 13997 1400 43757272 		.ascii	"Current %d (mA): %ld\000"
 13997      656E7420 
 13997      25642028 
 13997      6D41293A 
 13997      20256C64 
 13998 1415 000000   		.align	2
 13999              	.LC189:
 14000 1418 4C617374 		.ascii	"Last Grasp Hold Current %d (mA): %ld\000"
 14000      20477261 
 14000      73702048 
 14000      6F6C6420 
 14000      43757272 
 14001 143d 000000   		.align	2
 14002              	.LC190:
 14003 1440 0D0A4D4F 		.ascii	"\015\012MOTOR %d CONFIGURATION\015\012\000"
 14003      544F5220 
 14003      25642043 
 14003      4F4E4649 
 14003      47555241 
 14004 145b 00       		.align	2
 14005              	.LC191:
 14006 145c 50494420 		.ascii	"PID Controller: \000"
 14006      436F6E74 
 14006      726F6C6C 
 14006      65723A20 
 14006      00
 14007              		.global	__aeabi_i2d
 14008              		.global	__aeabi_ddiv
 14009 146d 000000   		.align	2
 14010              	.LC192:
 14011 1470 50202D3E 		.ascii	"P -> %f  \000"
 14011      20256620 
 14011      2000
 14012 147a 0000     		.align	2
 14013              	.LC193:
 14014 147c 49202D3E 		.ascii	"I -> %f  \000"
 14014      20256620 
 14014      2000
 14015 1486 0000     		.align	2
 14016              	.LC194:
 14017 1488 44202D3E 		.ascii	"D -> %f\015\012\000"
 14017      2025660D 
 14017      0A00
 14018 1492 0000     		.align	2
 14019              	.LC195:
 14020 1494 43757272 		.ascii	"Current PID Controller: \000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 315


 14020      656E7420 
 14020      50494420 
 14020      436F6E74 
 14020      726F6C6C 
 14021 14ad 000000   		.align	2
 14022              	.LC196:
 14023 14b0 53746172 		.ascii	"Startup activation: YES\015\012\000"
 14023      74757020 
 14023      61637469 
 14023      76617469 
 14023      6F6E3A20 
 14024 14ca 0000     		.align	2
 14025              	.LC197:
 14026 14cc 53746172 		.ascii	"Startup activation: NO\015\012\000"
 14026      74757020 
 14026      61637469 
 14026      76617469 
 14026      6F6E3A20 
 14027 14e5 000000   		.align	2
 14028              	.LC198:
 14029 14e8 496E7075 		.ascii	"Input mode: USB\015\012\000"
 14029      74206D6F 
 14029      64653A20 
 14029      5553420D 
 14029      0A00
 14030 14fa 0000     		.align	2
 14031              	.LC199:
 14032 14fc 496E7075 		.ascii	"Input mode: Handle\015\012\000"
 14032      74206D6F 
 14032      64653A20 
 14032      48616E64 
 14032      6C650D0A 
 14033 1511 000000   		.align	2
 14034              	.LC200:
 14035 1514 496E7075 		.ascii	"Input mode: EMG proportional\015\012\000"
 14035      74206D6F 
 14035      64653A20 
 14035      454D4720 
 14035      70726F70 
 14036 1533 00       		.align	2
 14037              	.LC201:
 14038 1534 496E7075 		.ascii	"Input mode: EMG integral\015\012\000"
 14038      74206D6F 
 14038      64653A20 
 14038      454D4720 
 14038      696E7465 
 14039 154f 00       		.align	2
 14040              	.LC202:
 14041 1550 496E7075 		.ascii	"Input mode: EMG FCFS\015\012\000"
 14041      74206D6F 
 14041      64653A20 
 14041      454D4720 
 14041      46434653 
 14042 1567 00       		.align	2
 14043              	.LC203:
 14044 1568 496E7075 		.ascii	"Input mode: EMG FCFS ADV\015\012\000"
 14044      74206D6F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 316


 14044      64653A20 
 14044      454D4720 
 14044      46434653 
 14045 1583 00       		.align	2
 14046              	.LC204:
 14047 1584 496E7075 		.ascii	"Input mode: Joystick\015\012\000"
 14047      74206D6F 
 14047      64653A20 
 14047      4A6F7973 
 14047      7469636B 
 14048 159b 00       		.align	2
 14049              	.LC205:
 14050 159c 496E7075 		.ascii	"Input mode: EMG proportional Normally Closed\015\012"
 14050      74206D6F 
 14050      64653A20 
 14050      454D4720 
 14050      70726F70 
 14051 15ca 00       		.ascii	"\000"
 14052 15cb 00       		.align	2
 14053              	.LC206:
 14054 15cc 436F6E74 		.ascii	"Control mode: Position\015\012\000"
 14054      726F6C20 
 14054      6D6F6465 
 14054      3A20506F 
 14054      73697469 
 14055 15e5 000000   		.align	2
 14056              	.LC207:
 14057 15e8 436F6E74 		.ascii	"Control mode: PWM\015\012\000"
 14057      726F6C20 
 14057      6D6F6465 
 14057      3A205057 
 14057      4D0D0A00 
 14058              		.align	2
 14059              	.LC208:
 14060 15fc 436F6E74 		.ascii	"Control mode: Current\015\012\000"
 14060      726F6C20 
 14060      6D6F6465 
 14060      3A204375 
 14060      7272656E 
 14061              		.align	2
 14062              	.LC209:
 14063 1614 436F6E74 		.ascii	"Control mode: Position and Current\015\012\000"
 14063      726F6C20 
 14063      6D6F6465 
 14063      3A20506F 
 14063      73697469 
 14064 1639 000000   		.align	2
 14065              	.LC210:
 14066 163c 4162736F 		.ascii	"Absolute encoder position: YES\015\012\000"
 14066      6C757465 
 14066      20656E63 
 14066      6F646572 
 14066      20706F73 
 14067 165d 000000   		.align	2
 14068              	.LC211:
 14069 1660 4162736F 		.ascii	"Absolute encoder position: NO\015\012\000"
 14069      6C757465 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 317


 14069      20656E63 
 14069      6F646572 
 14069      20706F73 
 14070              		.align	2
 14071              	.LC212:
 14072 1680 4D6F746F 		.ascii	"Motor-Handle Ratio: %d\015\012\000"
 14072      722D4861 
 14072      6E646C65 
 14072      20526174 
 14072      696F3A20 
 14073 1699 000000   		.align	2
 14074              	.LC213:
 14075 169c 456E636F 		.ascii	"Encoder indices used for motor control: \000"
 14075      64657220 
 14075      696E6469 
 14075      63657320 
 14075      75736564 
 14076 16c5 000000   		.align	2
 14077              	.LC214:
 14078 16c8 46697273 		.ascii	"First Gear: %d teeth\015\012\000"
 14078      74204765 
 14078      61723A20 
 14078      25642074 
 14078      65657468 
 14079 16df 00       		.align	2
 14080              	.LC215:
 14081 16e0 5365636F 		.ascii	"Second Gear: %d teeth\015\012\000"
 14081      6E642047 
 14081      6561723A 
 14081      20256420 
 14081      74656574 
 14082              		.align	2
 14083              	.LC216:
 14084 16f8 47656172 		.ascii	"Gear invariant: %d\015\012\000"
 14084      20696E76 
 14084      61726961 
 14084      6E743A20 
 14084      25640D0A 
 14085 170d 000000   		.align	2
 14086              	.LC217:
 14087 1710 53656E73 		.ascii	"Sensor resolution: \000"
 14087      6F722072 
 14087      65736F6C 
 14087      7574696F 
 14087      6E3A2000 
 14088              		.align	2
 14089              	.LC218:
 14090 1724 4D656173 		.ascii	"Measurement Offset: \000"
 14090      7572656D 
 14090      656E7420 
 14090      4F666673 
 14090      65743A20 
 14091 1739 000000   		.align	2
 14092              	.LC219:
 14093 173c 256C6400 		.ascii	"%ld\000"
 14094              		.align	2
 14095              	.LC220:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 318


 14096 1740 4D656173 		.ascii	"Measurement Multiplier: \000"
 14096      7572656D 
 14096      656E7420 
 14096      4D756C74 
 14096      69706C69 
 14097              		.global	__aeabi_f2d
 14098 1759 000000   		.align	2
 14099              	.LC221:
 14100 175c 256600   		.ascii	"%f\000"
 14101 175f 00       		.align	2
 14102              	.LC222:
 14103 1760 43757272 		.ascii	"Current lookup table: %f, %f, %f, %f, %f, %f\015\012"
 14103      656E7420 
 14103      6C6F6F6B 
 14103      75702074 
 14103      61626C65 
 14104 178e 00       		.ascii	"\000"
 14105 178f 00       		.align	2
 14106              	.LC223:
 14107 1790 506F7369 		.ascii	"Position limit active: %d\000"
 14107      74696F6E 
 14107      206C696D 
 14107      69742061 
 14107      63746976 
 14108 17aa 0000     		.align	2
 14109              	.LC224:
 14110 17ac 506F7369 		.ascii	"Position limit motor: inf -> %ld  \000"
 14110      74696F6E 
 14110      206C696D 
 14110      6974206D 
 14110      6F746F72 
 14111 17cf 00       		.align	2
 14112              	.LC225:
 14113 17d0 73757020 		.ascii	"sup -> %ld\015\012\000"
 14113      2D3E2025 
 14113      6C640D0A 
 14113      00
 14114 17dd 000000   		.align	2
 14115              	.LC226:
 14116 17e0 4D617820 		.ascii	"Max step pos and neg: %d %d\000"
 14116      73746570 
 14116      20706F73 
 14116      20616E64 
 14116      206E6567 
 14117              		.align	2
 14118              	.LC227:
 14119 17fc 43757272 		.ascii	"Current limit: %d\015\012\000"
 14119      656E7420 
 14119      6C696D69 
 14119      743A2025 
 14119      640D0A00 
 14120              		.align	2
 14121              	.LC228:
 14122 1810 4D6F746F 		.ascii	"Motor board associated encoder line: %d\015\012\000"
 14122      7220626F 
 14122      61726420 
 14122      6173736F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 319


 14122      63696174 
 14123 183a 0000     		.align	2
 14124              	.LC229:
 14125 183c 44726976 		.ascii	"Driver type: MC33887 (Standard)\015\012\000"
 14125      65722074 
 14125      7970653A 
 14125      204D4333 
 14125      33383837 
 14126 185e 0000     		.align	2
 14127              	.LC230:
 14128 1860 44726976 		.ascii	"Driver type: VNH5019 (High power)\015\012\000"
 14128      65722074 
 14128      7970653A 
 14128      20564E48 
 14128      35303139 
 14129              		.align	2
 14130              	.LC231:
 14131 1884 44726976 		.ascii	"Driver type: ESC (Brushless)\015\012\000"
 14131      65722074 
 14131      7970653A 
 14131      20455343 
 14131      20284272 
 14132 18a3 00       		.align	2
 14133              	.LC232:
 14134 18a4 50574D20 		.ascii	"PWM rate limiter value: %d\015\012\000"
 14134      72617465 
 14134      206C696D 
 14134      69746572 
 14134      2076616C 
 14135 18c1 000000   		.align	2
 14136              	.LC233:
 14137 18c4 4E6F7420 		.ascii	"Not reversible motor: YES\015\012\000"
 14137      72657665 
 14137      72736962 
 14137      6C65206D 
 14137      6F746F72 
 14138              		.align	2
 14139              	.LC234:
 14140 18e0 4E6F7420 		.ascii	"Not reversible motor: NO\015\012\000"
 14140      72657665 
 14140      72736962 
 14140      6C65206D 
 14140      6F746F72 
 14141 18fb 00       		.align	2
 14142              	.LC235:
 14143 18fc 454D4720 		.ascii	"EMG CONFIGURATION\015\012\000"
 14143      434F4E46 
 14143      49475552 
 14143      4154494F 
 14143      4E0D0A00 
 14144              		.align	2
 14145              	.LC236:
 14146 1910 454D4720 		.ascii	"EMG thresholds [0 - 1024]: %u, %u\000"
 14146      74687265 
 14146      73686F6C 
 14146      6473205B 
 14146      30202D20 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 320


 14147 1932 0000     		.align	2
 14148              	.LC237:
 14149 1934 454D4720 		.ascii	"EMG max values [0 - 4096]: %lu, %lu\000"
 14149      6D617820 
 14149      76616C75 
 14149      6573205B 
 14149      30202D20 
 14150              		.align	2
 14151              	.LC238:
 14152 1958 454D4720 		.ascii	"EMG inversion: YES\015\012\000"
 14152      696E7665 
 14152      7273696F 
 14152      6E3A2059 
 14152      45530D0A 
 14153 196d 000000   		.align	2
 14154              	.LC239:
 14155 1970 454D4720 		.ascii	"EMG inversion: NO\015\012\000"
 14155      696E7665 
 14155      7273696F 
 14155      6E3A204E 
 14155      4F0D0A00 
 14156              		.align	2
 14157              	.LC240:
 14158 1984 43616C69 		.ascii	"Calibration enabled: YES\015\012\000"
 14158      62726174 
 14158      696F6E20 
 14158      656E6162 
 14158      6C65643A 
 14159 199f 00       		.align	2
 14160              	.LC241:
 14161 19a0 43616C69 		.ascii	"Calibration enabled: NO\015\012\000"
 14161      62726174 
 14161      696F6E20 
 14161      656E6162 
 14161      6C65643A 
 14162 19ba 0000     		.align	2
 14163              	.LC242:
 14164 19bc 454D4720 		.ascii	"EMG max speed: %d %d\000"
 14164      6D617820 
 14164      73706565 
 14164      643A2025 
 14164      64202564 
 14165 19d1 000000   		.align	2
 14166              	.LC243:
 14167 19d4 41646469 		.ascii	"Additional ADC sensors value:\015\012\000"
 14167      74696F6E 
 14167      616C2041 
 14167      44432073 
 14167      656E736F 
 14168              		.align	2
 14169              	.LC244:
 14170 19f4 41444320 		.ascii	"ADC %d -> %d\000"
 14170      2564202D 
 14170      3E202564 
 14170      00
 14171 1a01 000000   		.align	2
 14172              	.LC245:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 321


 14173 1a04 454D4720 		.ascii	"EMG input %d -> %d\000"
 14173      696E7075 
 14173      74202564 
 14173      202D3E20 
 14173      256400
 14174 1a17 00       		.align	2
 14175              	.LC246:
 14176 1a18 4A4F5953 		.ascii	"JOYSTICK CONFIGURATION\015\012\000"
 14176      5449434B 
 14176      20434F4E 
 14176      46494755 
 14176      52415449 
 14177 1a31 000000   		.align	2
 14178              	.LC247:
 14179 1a34 436C6F73 		.ascii	"Closure speed: %d\000"
 14179      75726520 
 14179      73706565 
 14179      643A2025 
 14179      6400
 14180 1a46 0000     		.align	2
 14181              	.LC248:
 14182 1a48 4A6F7973 		.ascii	"Joystick Threshold: %d\000"
 14182      7469636B 
 14182      20546872 
 14182      6573686F 
 14182      6C643A20 
 14183 1a5f 00       		.align	2
 14184              	.LC249:
 14185 1a60 4A6F7973 		.ascii	"Joystick Gains - X:%hu  Y:%hu\000"
 14185      7469636B 
 14185      20476169 
 14185      6E73202D 
 14185      20583A25 
 14186 1a7e 0000     		.align	2
 14187              	.LC250:
 14188 1a80 52657374 		.ascii	"Rest time delay (ms): %d\000"
 14188      2074696D 
 14188      65206465 
 14188      6C617920 
 14188      286D7329 
 14189 1a99 000000   		.align	2
 14190              	.LC251:
 14191 1a9c 52657374 		.ascii	"Rest velocity closure (ticks/sec): %d\000"
 14191      2076656C 
 14191      6F636974 
 14191      7920636C 
 14191      6F737572 
 14192 1ac2 0000     		.align	2
 14193              	.LC252:
 14194 1ac4 52657374 		.ascii	"Rest position: %d\000"
 14194      20706F73 
 14194      6974696F 
 14194      6E3A2025 
 14194      6400
 14195 1ad6 0000     		.align	2
 14196              	.LC253:
 14197 1ad8 494D5520 		.ascii	"IMU Connected: %d\015\012\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 322


 14197      436F6E6E 
 14197      65637465 
 14197      643A2025 
 14197      640D0A00 
 14198              		.align	2
 14199              	.LC254:
 14200 1aec 494D5573 		.ascii	"IMUs CONFIGURATION\015\012\000"
 14200      20434F4E 
 14200      46494755 
 14200      52415449 
 14200      4F4E0D0A 
 14201 1b01 000000   		.align	2
 14202              	.LC255:
 14203 1b04 496D7520 		.ascii	"Imu %d \015\012\011ID: %d\015\012\000"
 14203      2564200D 
 14203      0A094944 
 14203      3A202564 
 14203      0D0A00
 14204 1b17 00       		.align	2
 14205              	.LC256:
 14206 1b18 09416363 		.ascii	"\011Accelerometers: \000"
 14206      656C6572 
 14206      6F6D6574 
 14206      6572733A 
 14206      2000
 14207 1b2a 0000     		.align	2
 14208              	.LC257:
 14209 1b2c 09477972 		.ascii	"\011Gyroscopes: \000"
 14209      6F73636F 
 14209      7065733A 
 14209      2000
 14210 1b3a 0000     		.align	2
 14211              	.LC258:
 14212 1b3c 094D6167 		.ascii	"\011Magnetometers: \000"
 14212      6E65746F 
 14212      6D657465 
 14212      72733A20 
 14212      00
 14213 1b4d 000000   		.align	2
 14214              	.LC259:
 14215 1b50 09517561 		.ascii	"\011Quaternion: \000"
 14215      7465726E 
 14215      696F6E3A 
 14215      2000
 14216 1b5e 0000     		.align	2
 14217              	.LC260:
 14218 1b60 0954656D 		.ascii	"\011Temperature: \000"
 14218      70657261 
 14218      74757265 
 14218      3A2000
 14219 1b6f 00       		.align	2
 14220              	.LC261:
 14221 1b70 454E434F 		.ascii	"ENCODER CONFIGURATION\015\012\000"
 14221      44455220 
 14221      434F4E46 
 14221      49475552 
 14221      4154494F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 323


 14222              		.align	2
 14223              	.LC262:
 14224 1b88 456E636F 		.ascii	"Encoder Connected Line %d: %d\000"
 14224      64657220 
 14224      436F6E6E 
 14224      65637465 
 14224      64204C69 
 14225 1ba6 0000     		.align	2
 14226              	.LC263:
 14227 1ba8 4C454654 		.ascii	"LEFT\000"
 14227      00
 14228 1bad 000000   		.align	2
 14229              	.LC264:
 14230 1bb0 52494748 		.ascii	"RIGHT\000"
 14230      5400
 14231 1bb6 0000     		.align	2
 14232              	.LC265:
 14233 1bb8 205B2573 		.ascii	" [%s HAND main encoder line]\000"
 14233      2048414E 
 14233      44206D61 
 14233      696E2065 
 14233      6E636F64 
 14234 1bd5 000000   		.align	2
 14235              	.LC266:
 14236 1bd8 52617720 		.ascii	"Raw value [status]:\015\012\000"
 14236      76616C75 
 14236      65205B73 
 14236      74617475 
 14236      735D3A0D 
 14237 1bee 0000     		.align	2
 14238              	.LC267:
 14239 1bf0 4F4B00   		.ascii	"OK\000"
 14240 1bf3 00       		.align	2
 14241              	.LC268:
 14242 1bf4 5800     		.ascii	"X\000"
 14243 1bf6 0000     		.align	2
 14244              	.LC269:
 14245 1bf8 2564095B 		.ascii	"%d\011[%s]\015\012\000"
 14245      25735D0D 
 14245      0A00
 14246 1c02 0000     		.align	2
 14247              	.LC270:
 14248 1c04 4C617374 		.ascii	"Last FW cycle time: %u us\015\012\000"
 14248      20465720 
 14248      6379636C 
 14248      65207469 
 14248      6D653A20 
 14249              		.align	2
 14250              	.LC271:
 14251 1c20 0D0A0000 		.ascii	"\015\012\000\000"
 14252              		.section	.text.prepare_generic_info,"ax",%progbits
 14253              		.align	2
 14254              		.global	prepare_generic_info
 14255              		.thumb
 14256              		.thumb_func
 14257              		.type	prepare_generic_info, %function
 14258              	prepare_generic_info:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 324


 14259              	.LFB72:
1881:..\src/command_processing.c **** 
1882:..\src/command_processing.c **** //==============================================================================
1883:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
1884:..\src/command_processing.c **** //==============================================================================
1885:..\src/command_processing.c **** 
1886:..\src/command_processing.c **** void prepare_generic_info(char *info_string)
1887:..\src/command_processing.c **** {
 14260              		.loc 1 1887 0
 14261              		.cfi_startproc
 14262              		@ args = 0, pretend = 0, frame = 152
 14263              		@ frame_needed = 1, uses_anonymous_args = 0
 14264 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 14265              		.cfi_def_cfa_offset 36
 14266              		.cfi_offset 4, -36
 14267              		.cfi_offset 5, -32
 14268              		.cfi_offset 6, -28
 14269              		.cfi_offset 7, -24
 14270              		.cfi_offset 8, -20
 14271              		.cfi_offset 9, -16
 14272              		.cfi_offset 10, -12
 14273              		.cfi_offset 11, -8
 14274              		.cfi_offset 14, -4
 14275 0004 B1B0     		sub	sp, sp, #196
 14276              		.cfi_def_cfa_offset 232
 14277 0006 0AAF     		add	r7, sp, #40
 14278              		.cfi_def_cfa 7, 192
 14279 0008 7861     		str	r0, [r7, #20]
1888:..\src/command_processing.c ****     int i;
1889:..\src/command_processing.c **** 
1890:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem; 
 14280              		.loc 1 1890 0
 14281 000a C74B     		ldr	r3, .L684
 14282 000c C7F88830 		str	r3, [r7, #136]
1891:..\src/command_processing.c ****     
1892:..\src/command_processing.c ****     if(c_mem.dev.id != 250){                //To avoid dummy board ping
 14283              		.loc 1 1892 0
 14284 0010 C54B     		ldr	r3, .L684
 14285 0012 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 14286 0016 FA2B     		cmp	r3, #250
 14287 0018 02F09C80 		beq	.L681
 14288              	.LBB20:
1893:..\src/command_processing.c ****         char str[100];
1894:..\src/command_processing.c ****         strcpy(info_string, "");
 14289              		.loc 1 1894 0
 14290 001c 7B69     		ldr	r3, [r7, #20]
 14291 001e 0022     		movs	r2, #0
 14292 0020 1A70     		strb	r2, [r3]
1895:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 14293              		.loc 1 1895 0
 14294 0022 7869     		ldr	r0, [r7, #20]
 14295 0024 FFF7FEFF 		bl	strlen
 14296 0028 0346     		mov	r3, r0
 14297 002a 1A46     		mov	r2, r3
 14298 002c 7B69     		ldr	r3, [r7, #20]
 14299 002e 1344     		add	r3, r3, r2
 14300 0030 BE4A     		ldr	r2, .L684+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 325


 14301 0032 1188     		ldrh	r1, [r2]	@ unaligned
 14302 0034 9278     		ldrb	r2, [r2, #2]
 14303 0036 1980     		strh	r1, [r3]	@ unaligned
 14304 0038 9A70     		strb	r2, [r3, #2]
1896:..\src/command_processing.c ****         strcat(info_string, "Firmware version: ");
 14305              		.loc 1 1896 0
 14306 003a 7869     		ldr	r0, [r7, #20]
 14307 003c FFF7FEFF 		bl	strlen
 14308 0040 0346     		mov	r3, r0
 14309 0042 1A46     		mov	r2, r3
 14310 0044 7B69     		ldr	r3, [r7, #20]
 14311 0046 1344     		add	r3, r3, r2
 14312 0048 B94A     		ldr	r2, .L684+8
 14313 004a 1D46     		mov	r5, r3
 14314 004c 1446     		mov	r4, r2
 14315 004e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14316 0050 2860     		str	r0, [r5]	@ unaligned
 14317 0052 6960     		str	r1, [r5, #4]	@ unaligned
 14318 0054 AA60     		str	r2, [r5, #8]	@ unaligned
 14319 0056 EB60     		str	r3, [r5, #12]	@ unaligned
 14320 0058 2388     		ldrh	r3, [r4]	@ unaligned
 14321 005a A278     		ldrb	r2, [r4, #2]
 14322 005c 2B82     		strh	r3, [r5, #16]	@ unaligned
 14323 005e 1346     		mov	r3, r2
 14324 0060 AB74     		strb	r3, [r5, #18]
1897:..\src/command_processing.c ****         strcat(info_string, VERSION);
 14325              		.loc 1 1897 0
 14326 0062 7869     		ldr	r0, [r7, #20]
 14327 0064 FFF7FEFF 		bl	strlen
 14328 0068 0346     		mov	r3, r0
 14329 006a 1A46     		mov	r2, r3
 14330 006c 7B69     		ldr	r3, [r7, #20]
 14331 006e 1344     		add	r3, r3, r2
 14332 0070 B04A     		ldr	r2, .L684+12
 14333 0072 1446     		mov	r4, r2
 14334 0074 9E46     		mov	lr, r3
 14335 0076 04F1200C 		add	ip, r4, #32
 14336              	.L562:
 14337 007a 7546     		mov	r5, lr
 14338 007c 2646     		mov	r6, r4
 14339 007e 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14340 0080 2860     		str	r0, [r5]	@ unaligned
 14341 0082 6960     		str	r1, [r5, #4]	@ unaligned
 14342 0084 AA60     		str	r2, [r5, #8]	@ unaligned
 14343 0086 EB60     		str	r3, [r5, #12]	@ unaligned
 14344 0088 1034     		adds	r4, r4, #16
 14345 008a 0EF1100E 		add	lr, lr, #16
 14346 008e 6445     		cmp	r4, ip
 14347 0090 F3D1     		bne	.L562
 14348 0092 7246     		mov	r2, lr
 14349 0094 2346     		mov	r3, r4
 14350 0096 1B88     		ldrh	r3, [r3]	@ unaligned
 14351 0098 1380     		strh	r3, [r2]	@ unaligned
1898:..\src/command_processing.c ****         strcat(info_string, ".\r\n\r\n");      
 14352              		.loc 1 1898 0
 14353 009a 7869     		ldr	r0, [r7, #20]
 14354 009c FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 326


 14355 00a0 0346     		mov	r3, r0
 14356 00a2 1A46     		mov	r2, r3
 14357 00a4 7B69     		ldr	r3, [r7, #20]
 14358 00a6 1344     		add	r3, r3, r2
 14359 00a8 A34A     		ldr	r2, .L684+16
 14360 00aa 1068     		ldr	r0, [r2]	@ unaligned
 14361 00ac 1860     		str	r0, [r3]	@ unaligned
 14362 00ae 9288     		ldrh	r2, [r2, #4]	@ unaligned
 14363 00b0 9A80     		strh	r2, [r3, #4]	@ unaligned
1899:..\src/command_processing.c **** 
1900:..\src/command_processing.c ****         strcat(info_string, "DEVICE INFO\r\n");
 14364              		.loc 1 1900 0
 14365 00b2 7869     		ldr	r0, [r7, #20]
 14366 00b4 FFF7FEFF 		bl	strlen
 14367 00b8 0346     		mov	r3, r0
 14368 00ba 1A46     		mov	r2, r3
 14369 00bc 7B69     		ldr	r3, [r7, #20]
 14370 00be 1344     		add	r3, r3, r2
 14371 00c0 9E4A     		ldr	r2, .L684+20
 14372 00c2 1C46     		mov	r4, r3
 14373 00c4 1346     		mov	r3, r2
 14374 00c6 07CB     		ldmia	r3!, {r0, r1, r2}
 14375 00c8 2060     		str	r0, [r4]	@ unaligned
 14376 00ca 6160     		str	r1, [r4, #4]	@ unaligned
 14377 00cc A260     		str	r2, [r4, #8]	@ unaligned
 14378 00ce 1B88     		ldrh	r3, [r3]	@ unaligned
 14379 00d0 A381     		strh	r3, [r4, #12]	@ unaligned
1901:..\src/command_processing.c ****         sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 14380              		.loc 1 1901 0
 14381 00d2 D7F88830 		ldr	r3, [r7, #136]
 14382 00d6 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 14383 00da 1A46     		mov	r2, r3
 14384 00dc 07F11803 		add	r3, r7, #24
 14385 00e0 9749     		ldr	r1, .L684+24
 14386 00e2 1846     		mov	r0, r3
 14387 00e4 FFF7FEFF 		bl	sprintf
1902:..\src/command_processing.c ****         strcat(info_string, str);
 14388              		.loc 1 1902 0
 14389 00e8 07F11803 		add	r3, r7, #24
 14390 00ec 1946     		mov	r1, r3
 14391 00ee 7869     		ldr	r0, [r7, #20]
 14392 00f0 FFF7FEFF 		bl	strcat
1903:..\src/command_processing.c ****         switch(MEM_P->dev.dev_type){
 14393              		.loc 1 1903 0
 14394 00f4 D7F88830 		ldr	r3, [r7, #136]
 14395 00f8 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 14396 00fc 042B     		cmp	r3, #4
 14397 00fe 00F29180 		bhi	.L682
 14398 0102 01A2     		adr	r2, .L565
 14399 0104 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 14400              		.p2align 2
 14401              	.L565:
 14402 0108 1D010000 		.word	.L564+1
 14403 010c 4B010000 		.word	.L566+1
 14404 0110 7B010000 		.word	.L567+1
 14405 0114 BD010000 		.word	.L568+1
 14406 0118 FD010000 		.word	.L569+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 327


 14407              		.p2align 1
 14408              	.L564:
1904:..\src/command_processing.c ****             case SOFTHAND_PRO:
1905:..\src/command_processing.c ****                 strcat(info_string, "Device: SOFTHAND PRO\r\n");
 14409              		.loc 1 1905 0
 14410 011c 7869     		ldr	r0, [r7, #20]
 14411 011e FFF7FEFF 		bl	strlen
 14412 0122 0346     		mov	r3, r0
 14413 0124 1A46     		mov	r2, r3
 14414 0126 7B69     		ldr	r3, [r7, #20]
 14415 0128 1344     		add	r3, r3, r2
 14416 012a 864A     		ldr	r2, .L684+28
 14417 012c 1C46     		mov	r4, r3
 14418 012e 1546     		mov	r5, r2
 14419 0130 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14420 0132 2060     		str	r0, [r4]	@ unaligned
 14421 0134 6160     		str	r1, [r4, #4]	@ unaligned
 14422 0136 A260     		str	r2, [r4, #8]	@ unaligned
 14423 0138 E360     		str	r3, [r4, #12]	@ unaligned
 14424 013a 2868     		ldr	r0, [r5]	@ unaligned
 14425 013c 2061     		str	r0, [r4, #16]	@ unaligned
 14426 013e AB88     		ldrh	r3, [r5, #4]	@ unaligned
 14427 0140 AA79     		ldrb	r2, [r5, #6]
 14428 0142 A382     		strh	r3, [r4, #20]	@ unaligned
 14429 0144 1346     		mov	r3, r2
 14430 0146 A375     		strb	r3, [r4, #22]
1906:..\src/command_processing.c ****                 break;
 14431              		.loc 1 1906 0
 14432 0148 6DE0     		b	.L570
 14433              	.L566:
1907:..\src/command_processing.c ****             case GENERIC_2_MOTORS:
1908:..\src/command_processing.c ****                 strcat(info_string, "Device: GENERIC 2 MOTORS\r\n");
 14434              		.loc 1 1908 0
 14435 014a 7869     		ldr	r0, [r7, #20]
 14436 014c FFF7FEFF 		bl	strlen
 14437 0150 0346     		mov	r3, r0
 14438 0152 1A46     		mov	r2, r3
 14439 0154 7B69     		ldr	r3, [r7, #20]
 14440 0156 1344     		add	r3, r3, r2
 14441 0158 7B4A     		ldr	r2, .L684+32
 14442 015a 1D46     		mov	r5, r3
 14443 015c 1446     		mov	r4, r2
 14444 015e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14445 0160 2860     		str	r0, [r5]	@ unaligned
 14446 0162 6960     		str	r1, [r5, #4]	@ unaligned
 14447 0164 AA60     		str	r2, [r5, #8]	@ unaligned
 14448 0166 EB60     		str	r3, [r5, #12]	@ unaligned
 14449 0168 03CC     		ldmia	r4!, {r0, r1}
 14450 016a 2861     		str	r0, [r5, #16]	@ unaligned
 14451 016c 6961     		str	r1, [r5, #20]	@ unaligned
 14452 016e 2388     		ldrh	r3, [r4]	@ unaligned
 14453 0170 A278     		ldrb	r2, [r4, #2]
 14454 0172 2B83     		strh	r3, [r5, #24]	@ unaligned
 14455 0174 1346     		mov	r3, r2
 14456 0176 AB76     		strb	r3, [r5, #26]
1909:..\src/command_processing.c ****                 break;
 14457              		.loc 1 1909 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 328


 14458 0178 55E0     		b	.L570
 14459              	.L567:
1910:..\src/command_processing.c ****             case AIR_CHAMBERS_FB:
1911:..\src/command_processing.c ****                 strcat(info_string, "Device: AIR CHAMBERS HAPTIC FEEDBACK\r\n");
 14460              		.loc 1 1911 0
 14461 017a 7869     		ldr	r0, [r7, #20]
 14462 017c FFF7FEFF 		bl	strlen
 14463 0180 0346     		mov	r3, r0
 14464 0182 1A46     		mov	r2, r3
 14465 0184 7B69     		ldr	r3, [r7, #20]
 14466 0186 1344     		add	r3, r3, r2
 14467 0188 704A     		ldr	r2, .L684+36
 14468 018a 1446     		mov	r4, r2
 14469 018c 9E46     		mov	lr, r3
 14470 018e 04F1200C 		add	ip, r4, #32
 14471              	.L571:
 14472 0192 7546     		mov	r5, lr
 14473 0194 2646     		mov	r6, r4
 14474 0196 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14475 0198 2860     		str	r0, [r5]	@ unaligned
 14476 019a 6960     		str	r1, [r5, #4]	@ unaligned
 14477 019c AA60     		str	r2, [r5, #8]	@ unaligned
 14478 019e EB60     		str	r3, [r5, #12]	@ unaligned
 14479 01a0 1034     		adds	r4, r4, #16
 14480 01a2 0EF1100E 		add	lr, lr, #16
 14481 01a6 6445     		cmp	r4, ip
 14482 01a8 F3D1     		bne	.L571
 14483 01aa 7346     		mov	r3, lr
 14484 01ac 2246     		mov	r2, r4
 14485 01ae 1068     		ldr	r0, [r2]	@ unaligned
 14486 01b0 1860     		str	r0, [r3]	@ unaligned
 14487 01b2 9188     		ldrh	r1, [r2, #4]	@ unaligned
 14488 01b4 9279     		ldrb	r2, [r2, #6]
 14489 01b6 9980     		strh	r1, [r3, #4]	@ unaligned
 14490 01b8 9A71     		strb	r2, [r3, #6]
1912:..\src/command_processing.c ****                 break;
 14491              		.loc 1 1912 0
 14492 01ba 34E0     		b	.L570
 14493              	.L568:
1913:..\src/command_processing.c ****             case OTBK_ACT_WRIST_MS:
1914:..\src/command_processing.c ****                 strcat(info_string, "Device: OTTOBOCK 6v ACTIVE WRIST MASTER\r\n");
 14494              		.loc 1 1914 0
 14495 01bc 7869     		ldr	r0, [r7, #20]
 14496 01be FFF7FEFF 		bl	strlen
 14497 01c2 0346     		mov	r3, r0
 14498 01c4 1A46     		mov	r2, r3
 14499 01c6 7B69     		ldr	r3, [r7, #20]
 14500 01c8 1344     		add	r3, r3, r2
 14501 01ca 614A     		ldr	r2, .L684+40
 14502 01cc 1446     		mov	r4, r2
 14503 01ce 9E46     		mov	lr, r3
 14504 01d0 04F1200C 		add	ip, r4, #32
 14505              	.L572:
 14506 01d4 7546     		mov	r5, lr
 14507 01d6 2646     		mov	r6, r4
 14508 01d8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14509 01da 2860     		str	r0, [r5]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 329


 14510 01dc 6960     		str	r1, [r5, #4]	@ unaligned
 14511 01de AA60     		str	r2, [r5, #8]	@ unaligned
 14512 01e0 EB60     		str	r3, [r5, #12]	@ unaligned
 14513 01e2 1034     		adds	r4, r4, #16
 14514 01e4 0EF1100E 		add	lr, lr, #16
 14515 01e8 6445     		cmp	r4, ip
 14516 01ea F3D1     		bne	.L572
 14517 01ec 7246     		mov	r2, lr
 14518 01ee 2346     		mov	r3, r4
 14519 01f0 03CB     		ldmia	r3!, {r0, r1}
 14520 01f2 1060     		str	r0, [r2]	@ unaligned
 14521 01f4 5160     		str	r1, [r2, #4]	@ unaligned
 14522 01f6 1B88     		ldrh	r3, [r3]	@ unaligned
 14523 01f8 1381     		strh	r3, [r2, #8]	@ unaligned
1915:..\src/command_processing.c ****                 break;
 14524              		.loc 1 1915 0
 14525 01fa 14E0     		b	.L570
 14526              	.L569:
1916:..\src/command_processing.c ****             case SOFTHAND_2_MOTORS:
1917:..\src/command_processing.c ****                 strcat(info_string, "Device: SOFTHAND 2 MOTORS\r\n");
 14527              		.loc 1 1917 0
 14528 01fc 7869     		ldr	r0, [r7, #20]
 14529 01fe FFF7FEFF 		bl	strlen
 14530 0202 0346     		mov	r3, r0
 14531 0204 1A46     		mov	r2, r3
 14532 0206 7B69     		ldr	r3, [r7, #20]
 14533 0208 1344     		add	r3, r3, r2
 14534 020a 524A     		ldr	r2, .L684+44
 14535 020c 1D46     		mov	r5, r3
 14536 020e 1446     		mov	r4, r2
 14537 0210 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14538 0212 2860     		str	r0, [r5]	@ unaligned
 14539 0214 6960     		str	r1, [r5, #4]	@ unaligned
 14540 0216 AA60     		str	r2, [r5, #8]	@ unaligned
 14541 0218 EB60     		str	r3, [r5, #12]	@ unaligned
 14542 021a 07CC     		ldmia	r4!, {r0, r1, r2}
 14543 021c 2861     		str	r0, [r5, #16]	@ unaligned
 14544 021e 6961     		str	r1, [r5, #20]	@ unaligned
 14545 0220 AA61     		str	r2, [r5, #24]	@ unaligned
1918:..\src/command_processing.c ****                 break;
 14546              		.loc 1 1918 0
 14547 0222 00E0     		b	.L570
 14548              	.L682:
1919:..\src/command_processing.c ****             default:
1920:..\src/command_processing.c ****                 break;
 14549              		.loc 1 1920 0
 14550 0224 00BF     		nop
 14551              	.L570:
1921:..\src/command_processing.c ****         }
1922:..\src/command_processing.c ****         
1923:..\src/command_processing.c ****         switch(MEM_P->dev.right_left){
 14552              		.loc 1 1923 0
 14553 0226 D7F88830 		ldr	r3, [r7, #136]
 14554 022a 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 14555 022e 002B     		cmp	r3, #0
 14556 0230 02D0     		beq	.L574
 14557 0232 012B     		cmp	r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 330


 14558 0234 15D0     		beq	.L575
 14559 0236 26E0     		b	.L573
 14560              	.L574:
1924:..\src/command_processing.c ****             case RIGHT_HAND:
1925:..\src/command_processing.c ****                 strcat(info_string, "Hand side: RIGHT\r\n");
 14561              		.loc 1 1925 0
 14562 0238 7869     		ldr	r0, [r7, #20]
 14563 023a FFF7FEFF 		bl	strlen
 14564 023e 0346     		mov	r3, r0
 14565 0240 1A46     		mov	r2, r3
 14566 0242 7B69     		ldr	r3, [r7, #20]
 14567 0244 1344     		add	r3, r3, r2
 14568 0246 444A     		ldr	r2, .L684+48
 14569 0248 1D46     		mov	r5, r3
 14570 024a 1446     		mov	r4, r2
 14571 024c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14572 024e 2860     		str	r0, [r5]	@ unaligned
 14573 0250 6960     		str	r1, [r5, #4]	@ unaligned
 14574 0252 AA60     		str	r2, [r5, #8]	@ unaligned
 14575 0254 EB60     		str	r3, [r5, #12]	@ unaligned
 14576 0256 2388     		ldrh	r3, [r4]	@ unaligned
 14577 0258 A278     		ldrb	r2, [r4, #2]
 14578 025a 2B82     		strh	r3, [r5, #16]	@ unaligned
 14579 025c 1346     		mov	r3, r2
 14580 025e AB74     		strb	r3, [r5, #18]
1926:..\src/command_processing.c ****                 break;
 14581              		.loc 1 1926 0
 14582 0260 11E0     		b	.L573
 14583              	.L575:
1927:..\src/command_processing.c ****             case LEFT_HAND:
1928:..\src/command_processing.c ****                 strcat(info_string, "Hand side: LEFT\r\n");
 14584              		.loc 1 1928 0
 14585 0262 7869     		ldr	r0, [r7, #20]
 14586 0264 FFF7FEFF 		bl	strlen
 14587 0268 0346     		mov	r3, r0
 14588 026a 1A46     		mov	r2, r3
 14589 026c 7B69     		ldr	r3, [r7, #20]
 14590 026e 1344     		add	r3, r3, r2
 14591 0270 3A4A     		ldr	r2, .L684+52
 14592 0272 1D46     		mov	r5, r3
 14593 0274 1446     		mov	r4, r2
 14594 0276 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14595 0278 2860     		str	r0, [r5]	@ unaligned
 14596 027a 6960     		str	r1, [r5, #4]	@ unaligned
 14597 027c AA60     		str	r2, [r5, #8]	@ unaligned
 14598 027e EB60     		str	r3, [r5, #12]	@ unaligned
 14599 0280 2388     		ldrh	r3, [r4]	@ unaligned
 14600 0282 2B82     		strh	r3, [r5, #16]	@ unaligned
1929:..\src/command_processing.c ****                 break;
 14601              		.loc 1 1929 0
 14602 0284 00BF     		nop
 14603              	.L573:
1930:..\src/command_processing.c ****         }
1931:..\src/command_processing.c **** 
1932:..\src/command_processing.c ****         switch(MEM_P->dev.user_id) {
 14604              		.loc 1 1932 0
 14605 0286 D7F88830 		ldr	r3, [r7, #136]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 331


 14606 028a 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 14607 028e 012B     		cmp	r3, #1
 14608 0290 02D0     		beq	.L577
 14609 0292 022B     		cmp	r3, #2
 14610 0294 11D0     		beq	.L578
 14611 0296 21E0     		b	.L680
 14612              	.L577:
1933:..\src/command_processing.c ****             case MARIA:
1934:..\src/command_processing.c ****                 strcat(info_string, "User: MARIA\r\n");
 14613              		.loc 1 1934 0
 14614 0298 7869     		ldr	r0, [r7, #20]
 14615 029a FFF7FEFF 		bl	strlen
 14616 029e 0346     		mov	r3, r0
 14617 02a0 1A46     		mov	r2, r3
 14618 02a2 7B69     		ldr	r3, [r7, #20]
 14619 02a4 1344     		add	r3, r3, r2
 14620 02a6 2E4A     		ldr	r2, .L684+56
 14621 02a8 1C46     		mov	r4, r3
 14622 02aa 1346     		mov	r3, r2
 14623 02ac 07CB     		ldmia	r3!, {r0, r1, r2}
 14624 02ae 2060     		str	r0, [r4]	@ unaligned
 14625 02b0 6160     		str	r1, [r4, #4]	@ unaligned
 14626 02b2 A260     		str	r2, [r4, #8]	@ unaligned
 14627 02b4 1B88     		ldrh	r3, [r3]	@ unaligned
 14628 02b6 A381     		strh	r3, [r4, #12]	@ unaligned
1935:..\src/command_processing.c ****                 break;
 14629              		.loc 1 1935 0
 14630 02b8 24E0     		b	.L579
 14631              	.L578:
1936:..\src/command_processing.c ****             case ROZA:
1937:..\src/command_processing.c ****                 strcat(info_string, "User: ROZA\r\n");
 14632              		.loc 1 1937 0
 14633 02ba 7869     		ldr	r0, [r7, #20]
 14634 02bc FFF7FEFF 		bl	strlen
 14635 02c0 0346     		mov	r3, r0
 14636 02c2 1A46     		mov	r2, r3
 14637 02c4 7B69     		ldr	r3, [r7, #20]
 14638 02c6 1344     		add	r3, r3, r2
 14639 02c8 264A     		ldr	r2, .L684+60
 14640 02ca 1C46     		mov	r4, r3
 14641 02cc 1346     		mov	r3, r2
 14642 02ce 07CB     		ldmia	r3!, {r0, r1, r2}
 14643 02d0 2060     		str	r0, [r4]	@ unaligned
 14644 02d2 6160     		str	r1, [r4, #4]	@ unaligned
 14645 02d4 A260     		str	r2, [r4, #8]	@ unaligned
 14646 02d6 1B78     		ldrb	r3, [r3]
 14647 02d8 2373     		strb	r3, [r4, #12]
1938:..\src/command_processing.c ****                 break;
 14648              		.loc 1 1938 0
 14649 02da 13E0     		b	.L579
 14650              	.L680:
1939:..\src/command_processing.c ****             default:
1940:..\src/command_processing.c ****                 strcat(info_string, "User: GENERIC USER\r\n");
 14651              		.loc 1 1940 0
 14652 02dc 7869     		ldr	r0, [r7, #20]
 14653 02de FFF7FEFF 		bl	strlen
 14654 02e2 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 332


 14655 02e4 1A46     		mov	r2, r3
 14656 02e6 7B69     		ldr	r3, [r7, #20]
 14657 02e8 1344     		add	r3, r3, r2
 14658 02ea 1F4A     		ldr	r2, .L684+64
 14659 02ec 1D46     		mov	r5, r3
 14660 02ee 1446     		mov	r4, r2
 14661 02f0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14662 02f2 2860     		str	r0, [r5]	@ unaligned
 14663 02f4 6960     		str	r1, [r5, #4]	@ unaligned
 14664 02f6 AA60     		str	r2, [r5, #8]	@ unaligned
 14665 02f8 EB60     		str	r3, [r5, #12]	@ unaligned
 14666 02fa 2068     		ldr	r0, [r4]	@ unaligned
 14667 02fc 2861     		str	r0, [r5, #16]	@ unaligned
 14668 02fe 2379     		ldrb	r3, [r4, #4]
 14669 0300 2B75     		strb	r3, [r5, #20]
1941:..\src/command_processing.c ****                 break;
 14670              		.loc 1 1941 0
 14671 0302 00BF     		nop
 14672              	.L579:
1942:..\src/command_processing.c ****         }
1943:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 14673              		.loc 1 1943 0
 14674 0304 7869     		ldr	r0, [r7, #20]
 14675 0306 FFF7FEFF 		bl	strlen
 14676 030a 0346     		mov	r3, r0
 14677 030c 1A46     		mov	r2, r3
 14678 030e 7B69     		ldr	r3, [r7, #20]
 14679 0310 1344     		add	r3, r3, r2
 14680 0312 064A     		ldr	r2, .L684+4
 14681 0314 1188     		ldrh	r1, [r2]	@ unaligned
 14682 0316 9278     		ldrb	r2, [r2, #2]
 14683 0318 1980     		strh	r1, [r3]	@ unaligned
 14684 031a 9A70     		strb	r2, [r3, #2]
 14685              	.LBB21:
1944:..\src/command_processing.c ****         
1945:..\src/command_processing.c ****         for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 14686              		.loc 1 1945 0
 14687 031c 0023     		movs	r3, #0
 14688 031e 87F89330 		strb	r3, [r7, #147]
 14689 0322 01F0F5B9 		b	.L580
 14690              	.L685:
 14691 0326 00BF     		.align	2
 14692              	.L684:
 14693 0328 00000000 		.word	c_mem
 14694 032c 5C110000 		.word	.LC152
 14695 0330 60110000 		.word	.LC153
 14696 0334 74110000 		.word	.LC154
 14697 0338 98110000 		.word	.LC155
 14698 033c A0110000 		.word	.LC156
 14699 0340 B0110000 		.word	.LC157
 14700 0344 BC110000 		.word	.LC158
 14701 0348 D4110000 		.word	.LC159
 14702 034c F0110000 		.word	.LC160
 14703 0350 18120000 		.word	.LC161
 14704 0354 44120000 		.word	.LC162
 14705 0358 60120000 		.word	.LC163
 14706 035c 74120000 		.word	.LC164
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 333


 14707 0360 88120000 		.word	.LC165
 14708 0364 98120000 		.word	.LC166
 14709 0368 A8120000 		.word	.LC167
 14710              	.L646:
 14711              	.LBB22:
1946:..\src/command_processing.c ****             
1947:..\src/command_processing.c ****             uint8 MOTOR_IDX = k;
 14712              		.loc 1 1947 0
 14713 036c 97F89330 		ldrb	r3, [r7, #147]
 14714 0370 87F88730 		strb	r3, [r7, #135]
1948:..\src/command_processing.c ****             struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 14715              		.loc 1 1948 0
 14716 0374 97F88720 		ldrb	r2, [r7, #135]	@ zero_extendqisi2
 14717 0378 1346     		mov	r3, r2
 14718 037a DB00     		lsls	r3, r3, #3
 14719 037c 9B1A     		subs	r3, r3, r2
 14720 037e 1B01     		lsls	r3, r3, #4
 14721 0380 B033     		adds	r3, r3, #176
 14722 0382 D7F88820 		ldr	r2, [r7, #136]
 14723 0386 1344     		add	r3, r3, r2
 14724 0388 C7F88030 		str	r3, [r7, #128]
1949:..\src/command_processing.c ****             uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 14725              		.loc 1 1949 0
 14726 038c D7F88030 		ldr	r3, [r7, #128]
 14727 0390 93F86030 		ldrb	r3, [r3, #96]
 14728 0394 87F87F30 		strb	r3, [r7, #127]
1950:..\src/command_processing.c ****                   
1951:..\src/command_processing.c ****             sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 14729              		.loc 1 1951 0
 14730 0398 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14731 039c 5A1C     		adds	r2, r3, #1
 14732 039e 07F11803 		add	r3, r7, #24
 14733 03a2 AE49     		ldr	r1, .L686
 14734 03a4 1846     		mov	r0, r3
 14735 03a6 FFF7FEFF 		bl	sprintf
1952:..\src/command_processing.c ****             strcat(info_string, str);
 14736              		.loc 1 1952 0
 14737 03aa 07F11803 		add	r3, r7, #24
 14738 03ae 1946     		mov	r1, r3
 14739 03b0 7869     		ldr	r0, [r7, #20]
 14740 03b2 FFF7FEFF 		bl	strcat
1953:..\src/command_processing.c ****                         
1954:..\src/command_processing.c ****             strcat(info_string, "Motor reference");
 14741              		.loc 1 1954 0
 14742 03b6 7869     		ldr	r0, [r7, #20]
 14743 03b8 FFF7FEFF 		bl	strlen
 14744 03bc 0346     		mov	r3, r0
 14745 03be 1A46     		mov	r2, r3
 14746 03c0 7B69     		ldr	r3, [r7, #20]
 14747 03c2 1344     		add	r3, r3, r2
 14748 03c4 A64A     		ldr	r2, .L686+4
 14749 03c6 1C46     		mov	r4, r3
 14750 03c8 1546     		mov	r5, r2
 14751 03ca 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14752 03cc 2060     		str	r0, [r4]	@ unaligned
 14753 03ce 6160     		str	r1, [r4, #4]	@ unaligned
 14754 03d0 A260     		str	r2, [r4, #8]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 334


 14755 03d2 E360     		str	r3, [r4, #12]	@ unaligned
1955:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT)
 14756              		.loc 1 1955 0
 14757 03d4 D7F88030 		ldr	r3, [r7, #128]
 14758 03d8 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14759 03dc 022B     		cmp	r3, #2
 14760 03de 10D1     		bne	.L581
1956:..\src/command_processing.c ****                 strcat(info_string," - Currents: ");
 14761              		.loc 1 1956 0
 14762 03e0 7869     		ldr	r0, [r7, #20]
 14763 03e2 FFF7FEFF 		bl	strlen
 14764 03e6 0346     		mov	r3, r0
 14765 03e8 1A46     		mov	r2, r3
 14766 03ea 7B69     		ldr	r3, [r7, #20]
 14767 03ec 1344     		add	r3, r3, r2
 14768 03ee 9D4A     		ldr	r2, .L686+8
 14769 03f0 1C46     		mov	r4, r3
 14770 03f2 1346     		mov	r3, r2
 14771 03f4 07CB     		ldmia	r3!, {r0, r1, r2}
 14772 03f6 2060     		str	r0, [r4]	@ unaligned
 14773 03f8 6160     		str	r1, [r4, #4]	@ unaligned
 14774 03fa A260     		str	r2, [r4, #8]	@ unaligned
 14775 03fc 1B88     		ldrh	r3, [r3]	@ unaligned
 14776 03fe A381     		strh	r3, [r4, #12]	@ unaligned
 14777 0400 25E0     		b	.L582
 14778              	.L581:
1957:..\src/command_processing.c ****             else {
1958:..\src/command_processing.c ****                 if (MOT->control_mode == CONTROL_PWM)
 14779              		.loc 1 1958 0
 14780 0402 D7F88030 		ldr	r3, [r7, #128]
 14781 0406 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14782 040a 012B     		cmp	r3, #1
 14783 040c 0FD1     		bne	.L583
1959:..\src/command_processing.c ****                     strcat(info_string," - Pwm: ");
 14784              		.loc 1 1959 0
 14785 040e 7869     		ldr	r0, [r7, #20]
 14786 0410 FFF7FEFF 		bl	strlen
 14787 0414 0346     		mov	r3, r0
 14788 0416 1A46     		mov	r2, r3
 14789 0418 7B69     		ldr	r3, [r7, #20]
 14790 041a 1344     		add	r3, r3, r2
 14791 041c 9249     		ldr	r1, .L686+12
 14792 041e 1A46     		mov	r2, r3
 14793 0420 0B46     		mov	r3, r1
 14794 0422 03CB     		ldmia	r3!, {r0, r1}
 14795 0424 1060     		str	r0, [r2]	@ unaligned
 14796 0426 5160     		str	r1, [r2, #4]	@ unaligned
 14797 0428 1B78     		ldrb	r3, [r3]
 14798 042a 1372     		strb	r3, [r2, #8]
 14799 042c 0FE0     		b	.L582
 14800              	.L583:
1960:..\src/command_processing.c ****                 else
1961:..\src/command_processing.c ****                     strcat(info_string," - Position: ");
 14801              		.loc 1 1961 0
 14802 042e 7869     		ldr	r0, [r7, #20]
 14803 0430 FFF7FEFF 		bl	strlen
 14804 0434 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 335


 14805 0436 1A46     		mov	r2, r3
 14806 0438 7B69     		ldr	r3, [r7, #20]
 14807 043a 1344     		add	r3, r3, r2
 14808 043c 8B4A     		ldr	r2, .L686+16
 14809 043e 1C46     		mov	r4, r3
 14810 0440 1346     		mov	r3, r2
 14811 0442 07CB     		ldmia	r3!, {r0, r1, r2}
 14812 0444 2060     		str	r0, [r4]	@ unaligned
 14813 0446 6160     		str	r1, [r4, #4]	@ unaligned
 14814 0448 A260     		str	r2, [r4, #8]	@ unaligned
 14815 044a 1B88     		ldrh	r3, [r3]	@ unaligned
 14816 044c A381     		strh	r3, [r4, #12]	@ unaligned
 14817              	.L582:
1962:..\src/command_processing.c ****             }
1963:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT) {
 14818              		.loc 1 1963 0
 14819 044e D7F88030 		ldr	r3, [r7, #128]
 14820 0452 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14821 0456 022B     		cmp	r3, #2
 14822 0458 13D1     		bne	.L584
1964:..\src/command_processing.c ****                 sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].curr));
 14823              		.loc 1 1964 0
 14824 045a 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14825 045e 844A     		ldr	r2, .L686+20
 14826 0460 1B01     		lsls	r3, r3, #4
 14827 0462 1344     		add	r3, r3, r2
 14828 0464 0433     		adds	r3, r3, #4
 14829 0466 1A68     		ldr	r2, [r3]
 14830 0468 07F11803 		add	r3, r7, #24
 14831 046c 8149     		ldr	r1, .L686+24
 14832 046e 1846     		mov	r0, r3
 14833 0470 FFF7FEFF 		bl	sprintf
1965:..\src/command_processing.c ****                 strcat(info_string,str);
 14834              		.loc 1 1965 0
 14835 0474 07F11803 		add	r3, r7, #24
 14836 0478 1946     		mov	r1, r3
 14837 047a 7869     		ldr	r0, [r7, #20]
 14838 047c FFF7FEFF 		bl	strcat
 14839 0480 39E0     		b	.L585
 14840              	.L584:
1966:..\src/command_processing.c ****             }
1967:..\src/command_processing.c ****             else {
1968:..\src/command_processing.c ****                 if(MOT->control_mode == CONTROL_PWM) {
 14841              		.loc 1 1968 0
 14842 0482 D7F88030 		ldr	r3, [r7, #128]
 14843 0486 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14844 048a 012B     		cmp	r3, #1
 14845 048c 13D1     		bne	.L586
1969:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pwm));
 14846              		.loc 1 1969 0
 14847 048e 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14848 0492 774A     		ldr	r2, .L686+20
 14849 0494 1B01     		lsls	r3, r3, #4
 14850 0496 1344     		add	r3, r3, r2
 14851 0498 0833     		adds	r3, r3, #8
 14852 049a 1A68     		ldr	r2, [r3]
 14853 049c 07F11803 		add	r3, r7, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 336


 14854 04a0 7449     		ldr	r1, .L686+24
 14855 04a2 1846     		mov	r0, r3
 14856 04a4 FFF7FEFF 		bl	sprintf
1970:..\src/command_processing.c ****                     strcat(info_string,str);
 14857              		.loc 1 1970 0
 14858 04a8 07F11803 		add	r3, r7, #24
 14859 04ac 1946     		mov	r1, r3
 14860 04ae 7869     		ldr	r0, [r7, #20]
 14861 04b0 FFF7FEFF 		bl	strcat
 14862 04b4 1FE0     		b	.L585
 14863              	.L586:
1971:..\src/command_processing.c ****                 }
1972:..\src/command_processing.c ****                 else {
1973:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pos >> MEM_P->enc[ENC_L].res[0]))
 14864              		.loc 1 1973 0
 14865 04b6 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14866 04ba 6D4A     		ldr	r2, .L686+20
 14867 04bc 1B01     		lsls	r3, r3, #4
 14868 04be 1344     		add	r3, r3, r2
 14869 04c0 1968     		ldr	r1, [r3]
 14870 04c2 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 14871 04c6 D7F88800 		ldr	r0, [r7, #136]
 14872 04ca 1346     		mov	r3, r2
 14873 04cc 5B00     		lsls	r3, r3, #1
 14874 04ce 1344     		add	r3, r3, r2
 14875 04d0 1B01     		lsls	r3, r3, #4
 14876 04d2 0344     		add	r3, r3, r0
 14877 04d4 03F29513 		addw	r3, r3, #405
 14878 04d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14879 04da 41FA03F2 		asr	r2, r1, r3
 14880 04de 07F11803 		add	r3, r7, #24
 14881 04e2 6449     		ldr	r1, .L686+24
 14882 04e4 1846     		mov	r0, r3
 14883 04e6 FFF7FEFF 		bl	sprintf
1974:..\src/command_processing.c ****                     strcat(info_string,str);
 14884              		.loc 1 1974 0
 14885 04ea 07F11803 		add	r3, r7, #24
 14886 04ee 1946     		mov	r1, r3
 14887 04f0 7869     		ldr	r0, [r7, #20]
 14888 04f2 FFF7FEFF 		bl	strcat
 14889              	.L585:
1975:..\src/command_processing.c ****                 }
1976:..\src/command_processing.c ****             }
1977:..\src/command_processing.c ****             strcat(info_string,"\r\n");
 14890              		.loc 1 1977 0
 14891 04f6 7869     		ldr	r0, [r7, #20]
 14892 04f8 FFF7FEFF 		bl	strlen
 14893 04fc 0346     		mov	r3, r0
 14894 04fe 1A46     		mov	r2, r3
 14895 0500 7B69     		ldr	r3, [r7, #20]
 14896 0502 1344     		add	r3, r3, r2
 14897 0504 5C4A     		ldr	r2, .L686+28
 14898 0506 1188     		ldrh	r1, [r2]	@ unaligned
 14899 0508 9278     		ldrb	r2, [r2, #2]
 14900 050a 1980     		strh	r1, [r3]	@ unaligned
 14901 050c 9A70     		strb	r2, [r3, #2]
1978:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 337


1979:..\src/command_processing.c ****             sprintf(str, "Motor enabled: ");
 14902              		.loc 1 1979 0
 14903 050e 07F11803 		add	r3, r7, #24
 14904 0512 5A4A     		ldr	r2, .L686+32
 14905 0514 1C46     		mov	r4, r3
 14906 0516 1346     		mov	r3, r2
 14907 0518 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 14908 051a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
1980:..\src/command_processing.c ****             if (g_ref[MOTOR_IDX].onoff & 0x01) {
 14909              		.loc 1 1980 0
 14910 051e 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14911 0522 574A     		ldr	r2, .L686+36
 14912 0524 1B01     		lsls	r3, r3, #4
 14913 0526 1344     		add	r3, r3, r2
 14914 0528 0C33     		adds	r3, r3, #12
 14915 052a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14916 052c 03F00103 		and	r3, r3, #1
 14917 0530 002B     		cmp	r3, #0
 14918 0532 0FD0     		beq	.L587
1981:..\src/command_processing.c ****                 strcat(str, "YES\r\n");
 14919              		.loc 1 1981 0
 14920 0534 07F11803 		add	r3, r7, #24
 14921 0538 1846     		mov	r0, r3
 14922 053a FFF7FEFF 		bl	strlen
 14923 053e 0346     		mov	r3, r0
 14924 0540 1A46     		mov	r2, r3
 14925 0542 07F11803 		add	r3, r7, #24
 14926 0546 1344     		add	r3, r3, r2
 14927 0548 4E4A     		ldr	r2, .L686+40
 14928 054a 1068     		ldr	r0, [r2]	@ unaligned
 14929 054c 1860     		str	r0, [r3]	@ unaligned
 14930 054e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 14931 0550 9A80     		strh	r2, [r3, #4]	@ unaligned
 14932 0552 0EE0     		b	.L588
 14933              	.L587:
1982:..\src/command_processing.c ****             } else {
1983:..\src/command_processing.c ****                 strcat(str, "NO\r\n");
 14934              		.loc 1 1983 0
 14935 0554 07F11803 		add	r3, r7, #24
 14936 0558 1846     		mov	r0, r3
 14937 055a FFF7FEFF 		bl	strlen
 14938 055e 0346     		mov	r3, r0
 14939 0560 1A46     		mov	r2, r3
 14940 0562 07F11803 		add	r3, r7, #24
 14941 0566 1344     		add	r3, r3, r2
 14942 0568 474A     		ldr	r2, .L686+44
 14943 056a 1068     		ldr	r0, [r2]	@ unaligned
 14944 056c 1860     		str	r0, [r3]	@ unaligned
 14945 056e 1279     		ldrb	r2, [r2, #4]
 14946 0570 1A71     		strb	r2, [r3, #4]
 14947              	.L588:
1984:..\src/command_processing.c ****             }
1985:..\src/command_processing.c ****             strcat(info_string, str);
 14948              		.loc 1 1985 0
 14949 0572 07F11803 		add	r3, r7, #24
 14950 0576 1946     		mov	r1, r3
 14951 0578 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 338


 14952 057a FFF7FEFF 		bl	strcat
1986:..\src/command_processing.c ****                         
1987:..\src/command_processing.c ****             strcat(info_string, "PWM rescaling activation: ");
 14953              		.loc 1 1987 0
 14954 057e 7869     		ldr	r0, [r7, #20]
 14955 0580 FFF7FEFF 		bl	strlen
 14956 0584 0346     		mov	r3, r0
 14957 0586 1A46     		mov	r2, r3
 14958 0588 7B69     		ldr	r3, [r7, #20]
 14959 058a 1344     		add	r3, r3, r2
 14960 058c 3F4A     		ldr	r2, .L686+48
 14961 058e 1D46     		mov	r5, r3
 14962 0590 1446     		mov	r4, r2
 14963 0592 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14964 0594 2860     		str	r0, [r5]	@ unaligned
 14965 0596 6960     		str	r1, [r5, #4]	@ unaligned
 14966 0598 AA60     		str	r2, [r5, #8]	@ unaligned
 14967 059a EB60     		str	r3, [r5, #12]	@ unaligned
 14968 059c 03CC     		ldmia	r4!, {r0, r1}
 14969 059e 2861     		str	r0, [r5, #16]	@ unaligned
 14970 05a0 6961     		str	r1, [r5, #20]	@ unaligned
 14971 05a2 2388     		ldrh	r3, [r4]	@ unaligned
 14972 05a4 A278     		ldrb	r2, [r4, #2]
 14973 05a6 2B83     		strh	r3, [r5, #24]	@ unaligned
 14974 05a8 1346     		mov	r3, r2
 14975 05aa AB76     		strb	r3, [r5, #26]
1988:..\src/command_processing.c ****             if(MOT->activate_pwm_rescaling == MAXON_12V)
 14976              		.loc 1 1988 0
 14977 05ac D7F88030 		ldr	r3, [r7, #128]
 14978 05b0 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 14979 05b4 012B     		cmp	r3, #1
 14980 05b6 0CD1     		bne	.L589
1989:..\src/command_processing.c ****                 strcat(info_string, "YES\n");
 14981              		.loc 1 1989 0
 14982 05b8 7869     		ldr	r0, [r7, #20]
 14983 05ba FFF7FEFF 		bl	strlen
 14984 05be 0346     		mov	r3, r0
 14985 05c0 1A46     		mov	r2, r3
 14986 05c2 7B69     		ldr	r3, [r7, #20]
 14987 05c4 1344     		add	r3, r3, r2
 14988 05c6 324A     		ldr	r2, .L686+52
 14989 05c8 1068     		ldr	r0, [r2]	@ unaligned
 14990 05ca 1860     		str	r0, [r3]	@ unaligned
 14991 05cc 1279     		ldrb	r2, [r2, #4]
 14992 05ce 1A71     		strb	r2, [r3, #4]
 14993 05d0 09E0     		b	.L590
 14994              	.L589:
1990:..\src/command_processing.c ****             else
1991:..\src/command_processing.c ****                 strcat(info_string, "NO\n");
 14995              		.loc 1 1991 0
 14996 05d2 7869     		ldr	r0, [r7, #20]
 14997 05d4 FFF7FEFF 		bl	strlen
 14998 05d8 0346     		mov	r3, r0
 14999 05da 1A46     		mov	r2, r3
 15000 05dc 7B69     		ldr	r3, [r7, #20]
 15001 05de 1344     		add	r3, r3, r2
 15002 05e0 2C4A     		ldr	r2, .L686+56
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 339


 15003 05e2 1068     		ldr	r0, [r2]	@ unaligned
 15004 05e4 1860     		str	r0, [r3]	@ unaligned
 15005              	.L590:
1992:..\src/command_processing.c ****             
1993:..\src/command_processing.c ****             sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 15006              		.loc 1 1993 0
 15007 05e6 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15008 05ea 2B4A     		ldr	r2, .L686+60
 15009 05ec 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 15010 05f0 1A46     		mov	r2, r3
 15011 05f2 07F11803 		add	r3, r7, #24
 15012 05f6 2949     		ldr	r1, .L686+64
 15013 05f8 1846     		mov	r0, r3
 15014 05fa FFF7FEFF 		bl	sprintf
1994:..\src/command_processing.c ****             strcat(info_string, str);
 15015              		.loc 1 1994 0
 15016 05fe 07F11803 		add	r3, r7, #24
 15017 0602 1946     		mov	r1, r3
 15018 0604 7869     		ldr	r0, [r7, #20]
 15019 0606 FFF7FEFF 		bl	strcat
1995:..\src/command_processing.c **** 
1996:..\src/command_processing.c ****             strcat(info_string, "\r\nMEASUREMENTS INFO\r\n");
 15020              		.loc 1 1996 0
 15021 060a 7869     		ldr	r0, [r7, #20]
 15022 060c FFF7FEFF 		bl	strlen
 15023 0610 0346     		mov	r3, r0
 15024 0612 1A46     		mov	r2, r3
 15025 0614 7B69     		ldr	r3, [r7, #20]
 15026 0616 1344     		add	r3, r3, r2
 15027 0618 214A     		ldr	r2, .L686+68
 15028 061a 1D46     		mov	r5, r3
 15029 061c 1446     		mov	r4, r2
 15030 061e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15031 0620 2860     		str	r0, [r5]	@ unaligned
 15032 0622 6960     		str	r1, [r5, #4]	@ unaligned
 15033 0624 AA60     		str	r2, [r5, #8]	@ unaligned
 15034 0626 EB60     		str	r3, [r5, #12]	@ unaligned
 15035 0628 2068     		ldr	r0, [r4]	@ unaligned
 15036 062a 2861     		str	r0, [r5, #16]	@ unaligned
 15037 062c A388     		ldrh	r3, [r4, #4]	@ unaligned
 15038 062e AB82     		strh	r3, [r5, #20]	@ unaligned
1997:..\src/command_processing.c ****             strcat(info_string, "Sensor value: ");
 15039              		.loc 1 1997 0
 15040 0630 7869     		ldr	r0, [r7, #20]
 15041 0632 FFF7FEFF 		bl	strlen
 15042 0636 0346     		mov	r3, r0
 15043 0638 1A46     		mov	r2, r3
 15044 063a 7B69     		ldr	r3, [r7, #20]
 15045 063c 1344     		add	r3, r3, r2
 15046 063e 194A     		ldr	r2, .L686+72
 15047 0640 1C46     		mov	r4, r3
 15048 0642 1346     		mov	r3, r2
 15049 0644 07CB     		ldmia	r3!, {r0, r1, r2}
 15050 0646 2060     		str	r0, [r4]	@ unaligned
 15051 0648 6160     		str	r1, [r4, #4]	@ unaligned
 15052 064a A260     		str	r2, [r4, #8]	@ unaligned
 15053 064c 1A88     		ldrh	r2, [r3]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 340


 15054 064e 9B78     		ldrb	r3, [r3, #2]
 15055 0650 A281     		strh	r2, [r4, #12]	@ unaligned
 15056 0652 A373     		strb	r3, [r4, #14]
1998:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; i++) {
 15057              		.loc 1 1998 0
 15058 0654 0023     		movs	r3, #0
 15059 0656 C7F89430 		str	r3, [r7, #148]
 15060 065a 64E0     		b	.L591
 15061              	.L687:
 15062              		.align	2
 15063              	.L686:
 15064 065c C0120000 		.word	.LC168
 15065 0660 D0120000 		.word	.LC169
 15066 0664 E0120000 		.word	.LC170
 15067 0668 F0120000 		.word	.LC171
 15068 066c FC120000 		.word	.LC172
 15069 0670 00000000 		.word	g_refOld
 15070 0674 0C130000 		.word	.LC173
 15071 0678 5C110000 		.word	.LC152
 15072 067c 10130000 		.word	.LC174
 15073 0680 00000000 		.word	g_ref
 15074 0684 20130000 		.word	.LC175
 15075 0688 28130000 		.word	.LC176
 15076 068c 30130000 		.word	.LC177
 15077 0690 4C130000 		.word	.LC178
 15078 0694 54130000 		.word	.LC179
 15079 0698 00000000 		.word	dev_pwm_limit
 15080 069c 58130000 		.word	.LC180
 15081 06a0 68130000 		.word	.LC181
 15082 06a4 80130000 		.word	.LC182
 15083              	.L593:
1999:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 15084              		.loc 1 1999 0
 15085 06a8 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15086 06ac B849     		ldr	r1, .L688
 15087 06ae 1346     		mov	r3, r2
 15088 06b0 5B00     		lsls	r3, r3, #1
 15089 06b2 1344     		add	r3, r3, r2
 15090 06b4 9B00     		lsls	r3, r3, #2
 15091 06b6 1344     		add	r3, r3, r2
 15092 06b8 D7F89420 		ldr	r2, [r7, #148]
 15093 06bc 1344     		add	r3, r3, r2
 15094 06be 51F82310 		ldr	r1, [r1, r3, lsl #2]
 15095 06c2 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15096 06c6 D7F88800 		ldr	r0, [r7, #136]
 15097 06ca 1346     		mov	r3, r2
 15098 06cc 5B00     		lsls	r3, r3, #1
 15099 06ce 1344     		add	r3, r3, r2
 15100 06d0 1B01     		lsls	r3, r3, #4
 15101 06d2 C218     		adds	r2, r0, r3
 15102 06d4 D7F89430 		ldr	r3, [r7, #148]
 15103 06d8 1344     		add	r3, r3, r2
 15104 06da 03F29513 		addw	r3, r3, #405
 15105 06de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15106 06e0 41FA03F2 		asr	r2, r1, r3
 15107 06e4 07F11803 		add	r3, r7, #24
 15108 06e8 AA49     		ldr	r1, .L688+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 341


 15109 06ea 1846     		mov	r0, r3
 15110 06ec FFF7FEFF 		bl	sprintf
2000:..\src/command_processing.c ****                 strcat(info_string, str);
 15111              		.loc 1 2000 0
 15112 06f0 07F11803 		add	r3, r7, #24
 15113 06f4 1946     		mov	r1, r3
 15114 06f6 7869     		ldr	r0, [r7, #20]
 15115 06f8 FFF7FEFF 		bl	strcat
2001:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 15116              		.loc 1 2001 0
 15117 06fc D7F89430 		ldr	r3, [r7, #148]
 15118 0700 022B     		cmp	r3, #2
 15119 0702 0BD0     		beq	.L592
2002:..\src/command_processing.c ****                     strcat(info_string, ", ");
 15120              		.loc 1 2002 0
 15121 0704 7869     		ldr	r0, [r7, #20]
 15122 0706 FFF7FEFF 		bl	strlen
 15123 070a 0346     		mov	r3, r0
 15124 070c 1A46     		mov	r2, r3
 15125 070e 7B69     		ldr	r3, [r7, #20]
 15126 0710 1344     		add	r3, r3, r2
 15127 0712 A14A     		ldr	r2, .L688+8
 15128 0714 1188     		ldrh	r1, [r2]	@ unaligned
 15129 0716 9278     		ldrb	r2, [r2, #2]
 15130 0718 1980     		strh	r1, [r3]	@ unaligned
 15131 071a 9A70     		strb	r2, [r3, #2]
 15132              	.L592:
1998:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 15133              		.loc 1 1998 0 discriminator 2
 15134 071c D7F89430 		ldr	r3, [r7, #148]
 15135 0720 0133     		adds	r3, r3, #1
 15136 0722 C7F89430 		str	r3, [r7, #148]
 15137              	.L591:
1998:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 15138              		.loc 1 1998 0 is_stmt 0 discriminator 1
 15139 0726 D7F89430 		ldr	r3, [r7, #148]
 15140 072a 022B     		cmp	r3, #2
 15141 072c BCDD     		ble	.L593
2003:..\src/command_processing.c ****                 }                
2004:..\src/command_processing.c ****             }
2005:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15142              		.loc 1 2005 0 is_stmt 1
 15143 072e 7869     		ldr	r0, [r7, #20]
 15144 0730 FFF7FEFF 		bl	strlen
 15145 0734 0346     		mov	r3, r0
 15146 0736 1A46     		mov	r2, r3
 15147 0738 7B69     		ldr	r3, [r7, #20]
 15148 073a 1344     		add	r3, r3, r2
 15149 073c 974A     		ldr	r2, .L688+12
 15150 073e 1188     		ldrh	r1, [r2]	@ unaligned
 15151 0740 9278     		ldrb	r2, [r2, #2]
 15152 0742 1980     		strh	r1, [r3]	@ unaligned
 15153 0744 9A70     		strb	r2, [r3, #2]
2006:..\src/command_processing.c ****             
2007:..\src/command_processing.c ****             if (MOT->input_mode == INPUT_MODE_JOYSTICK){
 15154              		.loc 1 2007 0
 15155 0746 D7F88030 		ldr	r3, [r7, #128]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 342


 15156 074a 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 15157 074e 062B     		cmp	r3, #6
 15158 0750 1AD1     		bne	.L594
2008:..\src/command_processing.c ****                 sprintf(str, "Joystick measurements: %d, %d", (int)g_adc_measOld.joystick[0], (int)
 15159              		.loc 1 2008 0
 15160 0752 934B     		ldr	r3, .L688+16
 15161 0754 1A6A     		ldr	r2, [r3, #32]
 15162 0756 924B     		ldr	r3, .L688+16
 15163 0758 5B6A     		ldr	r3, [r3, #36]
 15164 075a 07F11800 		add	r0, r7, #24
 15165 075e 9149     		ldr	r1, .L688+20
 15166 0760 FFF7FEFF 		bl	sprintf
2009:..\src/command_processing.c ****                 strcat(info_string, str);
 15167              		.loc 1 2009 0
 15168 0764 07F11803 		add	r3, r7, #24
 15169 0768 1946     		mov	r1, r3
 15170 076a 7869     		ldr	r0, [r7, #20]
 15171 076c FFF7FEFF 		bl	strcat
2010:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 15172              		.loc 1 2010 0
 15173 0770 7869     		ldr	r0, [r7, #20]
 15174 0772 FFF7FEFF 		bl	strlen
 15175 0776 0346     		mov	r3, r0
 15176 0778 1A46     		mov	r2, r3
 15177 077a 7B69     		ldr	r3, [r7, #20]
 15178 077c 1344     		add	r3, r3, r2
 15179 077e 874A     		ldr	r2, .L688+12
 15180 0780 1188     		ldrh	r1, [r2]	@ unaligned
 15181 0782 9278     		ldrb	r2, [r2, #2]
 15182 0784 1980     		strh	r1, [r3]	@ unaligned
 15183 0786 9A70     		strb	r2, [r3, #2]
 15184              	.L594:
2011:..\src/command_processing.c ****             }
2012:..\src/command_processing.c **** 
2013:..\src/command_processing.c ****             sprintf(str, "Battery %d Voltage (mV): %ld", MOTOR_IDX+1, (int32) dev_tension[MOTOR_IDX
 15185              		.loc 1 2013 0
 15186 0788 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15187 078c 591C     		adds	r1, r3, #1
 15188 078e 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15189 0792 854A     		ldr	r2, .L688+24
 15190 0794 52F82330 		ldr	r3, [r2, r3, lsl #2]
 15191 0798 07F11800 		add	r0, r7, #24
 15192 079c 0A46     		mov	r2, r1
 15193 079e 8349     		ldr	r1, .L688+28
 15194 07a0 FFF7FEFF 		bl	sprintf
2014:..\src/command_processing.c ****             strcat(info_string, str);
 15195              		.loc 1 2014 0
 15196 07a4 07F11803 		add	r3, r7, #24
 15197 07a8 1946     		mov	r1, r3
 15198 07aa 7869     		ldr	r0, [r7, #20]
 15199 07ac FFF7FEFF 		bl	strcat
2015:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15200              		.loc 1 2015 0
 15201 07b0 7869     		ldr	r0, [r7, #20]
 15202 07b2 FFF7FEFF 		bl	strlen
 15203 07b6 0346     		mov	r3, r0
 15204 07b8 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 343


 15205 07ba 7B69     		ldr	r3, [r7, #20]
 15206 07bc 1344     		add	r3, r3, r2
 15207 07be 774A     		ldr	r2, .L688+12
 15208 07c0 1188     		ldrh	r1, [r2]	@ unaligned
 15209 07c2 9278     		ldrb	r2, [r2, #2]
 15210 07c4 1980     		strh	r1, [r3]	@ unaligned
 15211 07c6 9A70     		strb	r2, [r3, #2]
2016:..\src/command_processing.c ****             
2017:..\src/command_processing.c ****             sprintf(str, "Full charge power tension %d (mV): %ld", MOTOR_IDX+1, (int32) pow_tension
 15212              		.loc 1 2017 0
 15213 07c8 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15214 07cc 591C     		adds	r1, r3, #1
 15215 07ce 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15216 07d2 774A     		ldr	r2, .L688+32
 15217 07d4 52F82330 		ldr	r3, [r2, r3, lsl #2]
 15218 07d8 07F11800 		add	r0, r7, #24
 15219 07dc 0A46     		mov	r2, r1
 15220 07de 7549     		ldr	r1, .L688+36
 15221 07e0 FFF7FEFF 		bl	sprintf
2018:..\src/command_processing.c ****             strcat(info_string, str);
 15222              		.loc 1 2018 0
 15223 07e4 07F11803 		add	r3, r7, #24
 15224 07e8 1946     		mov	r1, r3
 15225 07ea 7869     		ldr	r0, [r7, #20]
 15226 07ec FFF7FEFF 		bl	strcat
2019:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15227              		.loc 1 2019 0
 15228 07f0 7869     		ldr	r0, [r7, #20]
 15229 07f2 FFF7FEFF 		bl	strlen
 15230 07f6 0346     		mov	r3, r0
 15231 07f8 1A46     		mov	r2, r3
 15232 07fa 7B69     		ldr	r3, [r7, #20]
 15233 07fc 1344     		add	r3, r3, r2
 15234 07fe 674A     		ldr	r2, .L688+12
 15235 0800 1188     		ldrh	r1, [r2]	@ unaligned
 15236 0802 9278     		ldrb	r2, [r2, #2]
 15237 0804 1980     		strh	r1, [r3]	@ unaligned
 15238 0806 9A70     		strb	r2, [r3, #2]
2020:..\src/command_processing.c **** 
2021:..\src/command_processing.c ****             sprintf(str, "Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[ENC_L].curr );
 15239              		.loc 1 2021 0
 15240 0808 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15241 080c 5C1C     		adds	r4, r3, #1
 15242 080e 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 15243 0812 5F4A     		ldr	r2, .L688
 15244 0814 3421     		movs	r1, #52
 15245 0816 01FB03F3 		mul	r3, r1, r3
 15246 081a 1344     		add	r3, r3, r2
 15247 081c 0C33     		adds	r3, r3, #12
 15248 081e 1B68     		ldr	r3, [r3]
 15249 0820 07F11800 		add	r0, r7, #24
 15250 0824 2246     		mov	r2, r4
 15251 0826 6449     		ldr	r1, .L688+40
 15252 0828 FFF7FEFF 		bl	sprintf
2022:..\src/command_processing.c ****             strcat(info_string, str);
 15253              		.loc 1 2022 0
 15254 082c 07F11803 		add	r3, r7, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 344


 15255 0830 1946     		mov	r1, r3
 15256 0832 7869     		ldr	r0, [r7, #20]
 15257 0834 FFF7FEFF 		bl	strcat
2023:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15258              		.loc 1 2023 0
 15259 0838 7869     		ldr	r0, [r7, #20]
 15260 083a FFF7FEFF 		bl	strlen
 15261 083e 0346     		mov	r3, r0
 15262 0840 1A46     		mov	r2, r3
 15263 0842 7B69     		ldr	r3, [r7, #20]
 15264 0844 1344     		add	r3, r3, r2
 15265 0846 554A     		ldr	r2, .L688+12
 15266 0848 1188     		ldrh	r1, [r2]	@ unaligned
 15267 084a 9278     		ldrb	r2, [r2, #2]
 15268 084c 1980     		strh	r1, [r3]	@ unaligned
 15269 084e 9A70     		strb	r2, [r3, #2]
2024:..\src/command_processing.c ****             
2025:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag == TRUE){
 15270              		.loc 1 2025 0
 15271 0850 D7F88030 		ldr	r3, [r7, #128]
 15272 0854 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 15273 0858 012B     		cmp	r3, #1
 15274 085a 23D1     		bne	.L595
2026:..\src/command_processing.c ****                 sprintf(str, "Last Grasp Hold Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[EN
 15275              		.loc 1 2026 0
 15276 085c 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15277 0860 5C1C     		adds	r4, r3, #1
 15278 0862 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 15279 0866 4A4A     		ldr	r2, .L688
 15280 0868 3421     		movs	r1, #52
 15281 086a 01FB03F3 		mul	r3, r1, r3
 15282 086e 1344     		add	r3, r3, r2
 15283 0870 1433     		adds	r3, r3, #20
 15284 0872 1B68     		ldr	r3, [r3]
 15285 0874 07F11800 		add	r0, r7, #24
 15286 0878 2246     		mov	r2, r4
 15287 087a 5049     		ldr	r1, .L688+44
 15288 087c FFF7FEFF 		bl	sprintf
2027:..\src/command_processing.c ****                 strcat(info_string, str);
 15289              		.loc 1 2027 0
 15290 0880 07F11803 		add	r3, r7, #24
 15291 0884 1946     		mov	r1, r3
 15292 0886 7869     		ldr	r0, [r7, #20]
 15293 0888 FFF7FEFF 		bl	strcat
2028:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 15294              		.loc 1 2028 0
 15295 088c 7869     		ldr	r0, [r7, #20]
 15296 088e FFF7FEFF 		bl	strlen
 15297 0892 0346     		mov	r3, r0
 15298 0894 1A46     		mov	r2, r3
 15299 0896 7B69     		ldr	r3, [r7, #20]
 15300 0898 1344     		add	r3, r3, r2
 15301 089a 404A     		ldr	r2, .L688+12
 15302 089c 1188     		ldrh	r1, [r2]	@ unaligned
 15303 089e 9278     		ldrb	r2, [r2, #2]
 15304 08a0 1980     		strh	r1, [r3]	@ unaligned
 15305 08a2 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 345


 15306              	.L595:
2029:..\src/command_processing.c ****             }
2030:..\src/command_processing.c ****             
2031:..\src/command_processing.c ****             sprintf(str, "\r\nMOTOR %d CONFIGURATION\r\n", MOTOR_IDX+1);
 15307              		.loc 1 2031 0
 15308 08a4 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15309 08a8 5A1C     		adds	r2, r3, #1
 15310 08aa 07F11803 		add	r3, r7, #24
 15311 08ae 4449     		ldr	r1, .L688+48
 15312 08b0 1846     		mov	r0, r3
 15313 08b2 FFF7FEFF 		bl	sprintf
2032:..\src/command_processing.c ****             strcat(info_string, str);
 15314              		.loc 1 2032 0
 15315 08b6 07F11803 		add	r3, r7, #24
 15316 08ba 1946     		mov	r1, r3
 15317 08bc 7869     		ldr	r0, [r7, #20]
 15318 08be FFF7FEFF 		bl	strcat
2033:..\src/command_processing.c **** 
2034:..\src/command_processing.c ****             strcat(info_string, "PID Controller: ");
 15319              		.loc 1 2034 0
 15320 08c2 7869     		ldr	r0, [r7, #20]
 15321 08c4 FFF7FEFF 		bl	strlen
 15322 08c8 0346     		mov	r3, r0
 15323 08ca 1A46     		mov	r2, r3
 15324 08cc 7B69     		ldr	r3, [r7, #20]
 15325 08ce 1344     		add	r3, r3, r2
 15326 08d0 3C4A     		ldr	r2, .L688+52
 15327 08d2 1D46     		mov	r5, r3
 15328 08d4 1446     		mov	r4, r2
 15329 08d6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15330 08d8 2860     		str	r0, [r5]	@ unaligned
 15331 08da 6960     		str	r1, [r5, #4]	@ unaligned
 15332 08dc AA60     		str	r2, [r5, #8]	@ unaligned
 15333 08de EB60     		str	r3, [r5, #12]	@ unaligned
 15334 08e0 2378     		ldrb	r3, [r4]
 15335 08e2 2B74     		strb	r3, [r5, #16]
2035:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 15336              		.loc 1 2035 0
 15337 08e4 D7F88030 		ldr	r3, [r7, #128]
 15338 08e8 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 15339 08ec 032B     		cmp	r3, #3
 15340 08ee 73D0     		beq	.L596
2036:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 15341              		.loc 1 2036 0
 15342 08f0 D7F88030 		ldr	r3, [r7, #128]
 15343 08f4 1B68     		ldr	r3, [r3]
 15344 08f6 1846     		mov	r0, r3
 15345 08f8 FFF7FEFF 		bl	__aeabi_i2d
 15346 08fc 4FF00002 		mov	r2, #0
 15347 0900 314B     		ldr	r3, .L688+56
 15348 0902 FFF7FEFF 		bl	__aeabi_ddiv
 15349 0906 0346     		mov	r3, r0
 15350 0908 0C46     		mov	r4, r1
 15351 090a 07F11800 		add	r0, r7, #24
 15352 090e 1A46     		mov	r2, r3
 15353 0910 2346     		mov	r3, r4
 15354 0912 2E49     		ldr	r1, .L688+60
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 346


 15355 0914 FFF7FEFF 		bl	sprintf
2037:..\src/command_processing.c ****                 strcat(info_string, str);
 15356              		.loc 1 2037 0
 15357 0918 07F11803 		add	r3, r7, #24
 15358 091c 1946     		mov	r1, r3
 15359 091e 7869     		ldr	r0, [r7, #20]
 15360 0920 FFF7FEFF 		bl	strcat
2038:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 15361              		.loc 1 2038 0
 15362 0924 D7F88030 		ldr	r3, [r7, #128]
 15363 0928 5B68     		ldr	r3, [r3, #4]
 15364 092a 1846     		mov	r0, r3
 15365 092c FFF7FEFF 		bl	__aeabi_i2d
 15366 0930 4FF00002 		mov	r2, #0
 15367 0934 244B     		ldr	r3, .L688+56
 15368 0936 FFF7FEFF 		bl	__aeabi_ddiv
 15369 093a 0346     		mov	r3, r0
 15370 093c 0C46     		mov	r4, r1
 15371 093e 07F11800 		add	r0, r7, #24
 15372 0942 1A46     		mov	r2, r3
 15373 0944 2346     		mov	r3, r4
 15374 0946 2249     		ldr	r1, .L688+64
 15375 0948 FFF7FEFF 		bl	sprintf
2039:..\src/command_processing.c ****                 strcat(info_string, str);
 15376              		.loc 1 2039 0
 15377 094c 07F11803 		add	r3, r7, #24
 15378 0950 1946     		mov	r1, r3
 15379 0952 7869     		ldr	r0, [r7, #20]
 15380 0954 FFF7FEFF 		bl	strcat
2040:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 15381              		.loc 1 2040 0
 15382 0958 D7F88030 		ldr	r3, [r7, #128]
 15383 095c 9B68     		ldr	r3, [r3, #8]
 15384 095e 1846     		mov	r0, r3
 15385 0960 FFF7FEFF 		bl	__aeabi_i2d
 15386 0964 4FF00002 		mov	r2, #0
 15387 0968 174B     		ldr	r3, .L688+56
 15388 096a FFF7FEFF 		bl	__aeabi_ddiv
 15389 096e 0346     		mov	r3, r0
 15390 0970 0C46     		mov	r4, r1
 15391 0972 07F11800 		add	r0, r7, #24
 15392 0976 1A46     		mov	r2, r3
 15393 0978 2346     		mov	r3, r4
 15394 097a 1649     		ldr	r1, .L688+68
 15395 097c FFF7FEFF 		bl	sprintf
2041:..\src/command_processing.c ****                 strcat(info_string, str);
 15396              		.loc 1 2041 0
 15397 0980 07F11803 		add	r3, r7, #24
 15398 0984 1946     		mov	r1, r3
 15399 0986 7869     		ldr	r0, [r7, #20]
 15400 0988 FFF7FEFF 		bl	strcat
 15401 098c 72E0     		b	.L597
 15402              	.L689:
 15403 098e 00BF     		.align	2
 15404              	.L688:
 15405 0990 00000000 		.word	g_meas
 15406 0994 90130000 		.word	.LC183
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 347


 15407 0998 94130000 		.word	.LC184
 15408 099c 5C110000 		.word	.LC152
 15409 09a0 00000000 		.word	g_adc_measOld
 15410 09a4 98130000 		.word	.LC185
 15411 09a8 00000000 		.word	dev_tension
 15412 09ac B8130000 		.word	.LC186
 15413 09b0 00000000 		.word	pow_tension
 15414 09b4 D8130000 		.word	.LC187
 15415 09b8 00140000 		.word	.LC188
 15416 09bc 18140000 		.word	.LC189
 15417 09c0 40140000 		.word	.LC190
 15418 09c4 5C140000 		.word	.LC191
 15419 09c8 0000F040 		.word	1089470464
 15420 09cc 70140000 		.word	.LC192
 15421 09d0 7C140000 		.word	.LC193
 15422 09d4 88140000 		.word	.LC194
 15423              	.L596:
2042:..\src/command_processing.c ****             }
2043:..\src/command_processing.c ****             else { 
2044:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 15424              		.loc 1 2044 0
 15425 09d8 D7F88030 		ldr	r3, [r7, #128]
 15426 09dc 9B69     		ldr	r3, [r3, #24]
 15427 09de 1846     		mov	r0, r3
 15428 09e0 FFF7FEFF 		bl	__aeabi_i2d
 15429 09e4 4FF00002 		mov	r2, #0
 15430 09e8 CE4B     		ldr	r3, .L690
 15431 09ea FFF7FEFF 		bl	__aeabi_ddiv
 15432 09ee 0346     		mov	r3, r0
 15433 09f0 0C46     		mov	r4, r1
 15434 09f2 07F11800 		add	r0, r7, #24
 15435 09f6 1A46     		mov	r2, r3
 15436 09f8 2346     		mov	r3, r4
 15437 09fa CB49     		ldr	r1, .L690+4
 15438 09fc FFF7FEFF 		bl	sprintf
2045:..\src/command_processing.c ****                 strcat(info_string, str);
 15439              		.loc 1 2045 0
 15440 0a00 07F11803 		add	r3, r7, #24
 15441 0a04 1946     		mov	r1, r3
 15442 0a06 7869     		ldr	r0, [r7, #20]
 15443 0a08 FFF7FEFF 		bl	strcat
2046:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 15444              		.loc 1 2046 0
 15445 0a0c D7F88030 		ldr	r3, [r7, #128]
 15446 0a10 DB69     		ldr	r3, [r3, #28]
 15447 0a12 1846     		mov	r0, r3
 15448 0a14 FFF7FEFF 		bl	__aeabi_i2d
 15449 0a18 4FF00002 		mov	r2, #0
 15450 0a1c C14B     		ldr	r3, .L690
 15451 0a1e FFF7FEFF 		bl	__aeabi_ddiv
 15452 0a22 0346     		mov	r3, r0
 15453 0a24 0C46     		mov	r4, r1
 15454 0a26 07F11800 		add	r0, r7, #24
 15455 0a2a 1A46     		mov	r2, r3
 15456 0a2c 2346     		mov	r3, r4
 15457 0a2e BF49     		ldr	r1, .L690+8
 15458 0a30 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 348


2047:..\src/command_processing.c ****                 strcat(info_string, str);
 15459              		.loc 1 2047 0
 15460 0a34 07F11803 		add	r3, r7, #24
 15461 0a38 1946     		mov	r1, r3
 15462 0a3a 7869     		ldr	r0, [r7, #20]
 15463 0a3c FFF7FEFF 		bl	strcat
2048:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 15464              		.loc 1 2048 0
 15465 0a40 D7F88030 		ldr	r3, [r7, #128]
 15466 0a44 1B6A     		ldr	r3, [r3, #32]
 15467 0a46 1846     		mov	r0, r3
 15468 0a48 FFF7FEFF 		bl	__aeabi_i2d
 15469 0a4c 4FF00002 		mov	r2, #0
 15470 0a50 B44B     		ldr	r3, .L690
 15471 0a52 FFF7FEFF 		bl	__aeabi_ddiv
 15472 0a56 0346     		mov	r3, r0
 15473 0a58 0C46     		mov	r4, r1
 15474 0a5a 07F11800 		add	r0, r7, #24
 15475 0a5e 1A46     		mov	r2, r3
 15476 0a60 2346     		mov	r3, r4
 15477 0a62 B349     		ldr	r1, .L690+12
 15478 0a64 FFF7FEFF 		bl	sprintf
2049:..\src/command_processing.c ****                 strcat(info_string, str);
 15479              		.loc 1 2049 0
 15480 0a68 07F11803 		add	r3, r7, #24
 15481 0a6c 1946     		mov	r1, r3
 15482 0a6e 7869     		ldr	r0, [r7, #20]
 15483 0a70 FFF7FEFF 		bl	strcat
 15484              	.L597:
2050:..\src/command_processing.c ****             }
2051:..\src/command_processing.c **** 
2052:..\src/command_processing.c ****             strcat(info_string, "Current PID Controller: ");
 15485              		.loc 1 2052 0
 15486 0a74 7869     		ldr	r0, [r7, #20]
 15487 0a76 FFF7FEFF 		bl	strlen
 15488 0a7a 0346     		mov	r3, r0
 15489 0a7c 1A46     		mov	r2, r3
 15490 0a7e 7B69     		ldr	r3, [r7, #20]
 15491 0a80 1344     		add	r3, r3, r2
 15492 0a82 AC4A     		ldr	r2, .L690+16
 15493 0a84 1D46     		mov	r5, r3
 15494 0a86 1446     		mov	r4, r2
 15495 0a88 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15496 0a8a 2860     		str	r0, [r5]	@ unaligned
 15497 0a8c 6960     		str	r1, [r5, #4]	@ unaligned
 15498 0a8e AA60     		str	r2, [r5, #8]	@ unaligned
 15499 0a90 EB60     		str	r3, [r5, #12]	@ unaligned
 15500 0a92 03CC     		ldmia	r4!, {r0, r1}
 15501 0a94 2861     		str	r0, [r5, #16]	@ unaligned
 15502 0a96 6961     		str	r1, [r5, #20]	@ unaligned
 15503 0a98 2378     		ldrb	r3, [r4]
 15504 0a9a 2B76     		strb	r3, [r5, #24]
2053:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 15505              		.loc 1 2053 0
 15506 0a9c D7F88030 		ldr	r3, [r7, #128]
 15507 0aa0 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 15508 0aa4 032B     		cmp	r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 349


 15509 0aa6 4ED0     		beq	.L598
2054:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 15510              		.loc 1 2054 0
 15511 0aa8 D7F88030 		ldr	r3, [r7, #128]
 15512 0aac DB68     		ldr	r3, [r3, #12]
 15513 0aae 1846     		mov	r0, r3
 15514 0ab0 FFF7FEFF 		bl	__aeabi_i2d
 15515 0ab4 4FF00002 		mov	r2, #0
 15516 0ab8 9A4B     		ldr	r3, .L690
 15517 0aba FFF7FEFF 		bl	__aeabi_ddiv
 15518 0abe 0346     		mov	r3, r0
 15519 0ac0 0C46     		mov	r4, r1
 15520 0ac2 07F11800 		add	r0, r7, #24
 15521 0ac6 1A46     		mov	r2, r3
 15522 0ac8 2346     		mov	r3, r4
 15523 0aca 9749     		ldr	r1, .L690+4
 15524 0acc FFF7FEFF 		bl	sprintf
2055:..\src/command_processing.c ****                 strcat(info_string, str);
 15525              		.loc 1 2055 0
 15526 0ad0 07F11803 		add	r3, r7, #24
 15527 0ad4 1946     		mov	r1, r3
 15528 0ad6 7869     		ldr	r0, [r7, #20]
 15529 0ad8 FFF7FEFF 		bl	strcat
2056:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 15530              		.loc 1 2056 0
 15531 0adc D7F88030 		ldr	r3, [r7, #128]
 15532 0ae0 1B69     		ldr	r3, [r3, #16]
 15533 0ae2 1846     		mov	r0, r3
 15534 0ae4 FFF7FEFF 		bl	__aeabi_i2d
 15535 0ae8 4FF00002 		mov	r2, #0
 15536 0aec 8D4B     		ldr	r3, .L690
 15537 0aee FFF7FEFF 		bl	__aeabi_ddiv
 15538 0af2 0346     		mov	r3, r0
 15539 0af4 0C46     		mov	r4, r1
 15540 0af6 07F11800 		add	r0, r7, #24
 15541 0afa 1A46     		mov	r2, r3
 15542 0afc 2346     		mov	r3, r4
 15543 0afe 8B49     		ldr	r1, .L690+8
 15544 0b00 FFF7FEFF 		bl	sprintf
2057:..\src/command_processing.c ****                 strcat(info_string, str);
 15545              		.loc 1 2057 0
 15546 0b04 07F11803 		add	r3, r7, #24
 15547 0b08 1946     		mov	r1, r3
 15548 0b0a 7869     		ldr	r0, [r7, #20]
 15549 0b0c FFF7FEFF 		bl	strcat
2058:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 15550              		.loc 1 2058 0
 15551 0b10 D7F88030 		ldr	r3, [r7, #128]
 15552 0b14 5B69     		ldr	r3, [r3, #20]
 15553 0b16 1846     		mov	r0, r3
 15554 0b18 FFF7FEFF 		bl	__aeabi_i2d
 15555 0b1c 4FF00002 		mov	r2, #0
 15556 0b20 804B     		ldr	r3, .L690
 15557 0b22 FFF7FEFF 		bl	__aeabi_ddiv
 15558 0b26 0346     		mov	r3, r0
 15559 0b28 0C46     		mov	r4, r1
 15560 0b2a 07F11800 		add	r0, r7, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 350


 15561 0b2e 1A46     		mov	r2, r3
 15562 0b30 2346     		mov	r3, r4
 15563 0b32 7F49     		ldr	r1, .L690+12
 15564 0b34 FFF7FEFF 		bl	sprintf
2059:..\src/command_processing.c ****                 strcat(info_string, str);
 15565              		.loc 1 2059 0
 15566 0b38 07F11803 		add	r3, r7, #24
 15567 0b3c 1946     		mov	r1, r3
 15568 0b3e 7869     		ldr	r0, [r7, #20]
 15569 0b40 FFF7FEFF 		bl	strcat
 15570 0b44 4DE0     		b	.L599
 15571              	.L598:
2060:..\src/command_processing.c **** 
2061:..\src/command_processing.c ****             }
2062:..\src/command_processing.c ****             else {
2063:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 15572              		.loc 1 2063 0
 15573 0b46 D7F88030 		ldr	r3, [r7, #128]
 15574 0b4a 5B6A     		ldr	r3, [r3, #36]
 15575 0b4c 1846     		mov	r0, r3
 15576 0b4e FFF7FEFF 		bl	__aeabi_i2d
 15577 0b52 4FF00002 		mov	r2, #0
 15578 0b56 734B     		ldr	r3, .L690
 15579 0b58 FFF7FEFF 		bl	__aeabi_ddiv
 15580 0b5c 0346     		mov	r3, r0
 15581 0b5e 0C46     		mov	r4, r1
 15582 0b60 07F11800 		add	r0, r7, #24
 15583 0b64 1A46     		mov	r2, r3
 15584 0b66 2346     		mov	r3, r4
 15585 0b68 6F49     		ldr	r1, .L690+4
 15586 0b6a FFF7FEFF 		bl	sprintf
2064:..\src/command_processing.c ****                 strcat(info_string, str);
 15587              		.loc 1 2064 0
 15588 0b6e 07F11803 		add	r3, r7, #24
 15589 0b72 1946     		mov	r1, r3
 15590 0b74 7869     		ldr	r0, [r7, #20]
 15591 0b76 FFF7FEFF 		bl	strcat
2065:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 15592              		.loc 1 2065 0
 15593 0b7a D7F88030 		ldr	r3, [r7, #128]
 15594 0b7e 9B6A     		ldr	r3, [r3, #40]
 15595 0b80 1846     		mov	r0, r3
 15596 0b82 FFF7FEFF 		bl	__aeabi_i2d
 15597 0b86 4FF00002 		mov	r2, #0
 15598 0b8a 664B     		ldr	r3, .L690
 15599 0b8c FFF7FEFF 		bl	__aeabi_ddiv
 15600 0b90 0346     		mov	r3, r0
 15601 0b92 0C46     		mov	r4, r1
 15602 0b94 07F11800 		add	r0, r7, #24
 15603 0b98 1A46     		mov	r2, r3
 15604 0b9a 2346     		mov	r3, r4
 15605 0b9c 6349     		ldr	r1, .L690+8
 15606 0b9e FFF7FEFF 		bl	sprintf
2066:..\src/command_processing.c ****                 strcat(info_string, str);
 15607              		.loc 1 2066 0
 15608 0ba2 07F11803 		add	r3, r7, #24
 15609 0ba6 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 351


 15610 0ba8 7869     		ldr	r0, [r7, #20]
 15611 0baa FFF7FEFF 		bl	strcat
2067:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 15612              		.loc 1 2067 0
 15613 0bae D7F88030 		ldr	r3, [r7, #128]
 15614 0bb2 DB6A     		ldr	r3, [r3, #44]
 15615 0bb4 1846     		mov	r0, r3
 15616 0bb6 FFF7FEFF 		bl	__aeabi_i2d
 15617 0bba 4FF00002 		mov	r2, #0
 15618 0bbe 594B     		ldr	r3, .L690
 15619 0bc0 FFF7FEFF 		bl	__aeabi_ddiv
 15620 0bc4 0346     		mov	r3, r0
 15621 0bc6 0C46     		mov	r4, r1
 15622 0bc8 07F11800 		add	r0, r7, #24
 15623 0bcc 1A46     		mov	r2, r3
 15624 0bce 2346     		mov	r3, r4
 15625 0bd0 5749     		ldr	r1, .L690+12
 15626 0bd2 FFF7FEFF 		bl	sprintf
2068:..\src/command_processing.c ****                 strcat(info_string, str);
 15627              		.loc 1 2068 0
 15628 0bd6 07F11803 		add	r3, r7, #24
 15629 0bda 1946     		mov	r1, r3
 15630 0bdc 7869     		ldr	r0, [r7, #20]
 15631 0bde FFF7FEFF 		bl	strcat
 15632              	.L599:
2069:..\src/command_processing.c ****             }
2070:..\src/command_processing.c ****             if (MOT->activ == 0x01)
 15633              		.loc 1 2070 0
 15634 0be2 D7F88030 		ldr	r3, [r7, #128]
 15635 0be6 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 15636 0bea 012B     		cmp	r3, #1
 15637 0bec 14D1     		bne	.L600
2071:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: YES\r\n");
 15638              		.loc 1 2071 0
 15639 0bee 7869     		ldr	r0, [r7, #20]
 15640 0bf0 FFF7FEFF 		bl	strlen
 15641 0bf4 0346     		mov	r3, r0
 15642 0bf6 1A46     		mov	r2, r3
 15643 0bf8 7B69     		ldr	r3, [r7, #20]
 15644 0bfa 1344     		add	r3, r3, r2
 15645 0bfc 4E4A     		ldr	r2, .L690+20
 15646 0bfe 1D46     		mov	r5, r3
 15647 0c00 1446     		mov	r4, r2
 15648 0c02 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15649 0c04 2860     		str	r0, [r5]	@ unaligned
 15650 0c06 6960     		str	r1, [r5, #4]	@ unaligned
 15651 0c08 AA60     		str	r2, [r5, #8]	@ unaligned
 15652 0c0a EB60     		str	r3, [r5, #12]	@ unaligned
 15653 0c0c 03CC     		ldmia	r4!, {r0, r1}
 15654 0c0e 2861     		str	r0, [r5, #16]	@ unaligned
 15655 0c10 6961     		str	r1, [r5, #20]	@ unaligned
 15656 0c12 2388     		ldrh	r3, [r4]	@ unaligned
 15657 0c14 2B83     		strh	r3, [r5, #24]	@ unaligned
 15658 0c16 13E0     		b	.L601
 15659              	.L600:
2072:..\src/command_processing.c ****             else
2073:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: NO\r\n");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 352


 15660              		.loc 1 2073 0
 15661 0c18 7869     		ldr	r0, [r7, #20]
 15662 0c1a FFF7FEFF 		bl	strlen
 15663 0c1e 0346     		mov	r3, r0
 15664 0c20 1A46     		mov	r2, r3
 15665 0c22 7B69     		ldr	r3, [r7, #20]
 15666 0c24 1344     		add	r3, r3, r2
 15667 0c26 454A     		ldr	r2, .L690+24
 15668 0c28 1D46     		mov	r5, r3
 15669 0c2a 1446     		mov	r4, r2
 15670 0c2c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15671 0c2e 2860     		str	r0, [r5]	@ unaligned
 15672 0c30 6960     		str	r1, [r5, #4]	@ unaligned
 15673 0c32 AA60     		str	r2, [r5, #8]	@ unaligned
 15674 0c34 EB60     		str	r3, [r5, #12]	@ unaligned
 15675 0c36 03CC     		ldmia	r4!, {r0, r1}
 15676 0c38 2861     		str	r0, [r5, #16]	@ unaligned
 15677 0c3a 6961     		str	r1, [r5, #20]	@ unaligned
 15678 0c3c 2378     		ldrb	r3, [r4]
 15679 0c3e 2B76     		strb	r3, [r5, #24]
 15680              	.L601:
2074:..\src/command_processing.c **** 
2075:..\src/command_processing.c ****             switch(MOT->input_mode) {
 15681              		.loc 1 2075 0
 15682 0c40 D7F88030 		ldr	r3, [r7, #128]
 15683 0c44 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 15684 0c48 072B     		cmp	r3, #7
 15685 0c4a 00F2EA80 		bhi	.L602
 15686 0c4e 01A2     		adr	r2, .L604
 15687 0c50 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 15688              		.p2align 2
 15689              	.L604:
 15690 0c54 750C0000 		.word	.L603+1
 15691 0c58 990C0000 		.word	.L605+1
 15692 0c5c C10C0000 		.word	.L606+1
 15693 0c60 F30C0000 		.word	.L607+1
 15694 0c64 510D0000 		.word	.L608+1
 15695 0c68 7F0D0000 		.word	.L609+1
 15696 0c6c AF0D0000 		.word	.L610+1
 15697 0c70 DD0D0000 		.word	.L611+1
 15698              		.p2align 1
 15699              	.L603:
2076:..\src/command_processing.c ****                 case INPUT_MODE_EXTERNAL:
2077:..\src/command_processing.c ****                     strcat(info_string, "Input mode: USB\r\n");
 15700              		.loc 1 2077 0
 15701 0c74 7869     		ldr	r0, [r7, #20]
 15702 0c76 FFF7FEFF 		bl	strlen
 15703 0c7a 0346     		mov	r3, r0
 15704 0c7c 1A46     		mov	r2, r3
 15705 0c7e 7B69     		ldr	r3, [r7, #20]
 15706 0c80 1344     		add	r3, r3, r2
 15707 0c82 2F4A     		ldr	r2, .L690+28
 15708 0c84 1D46     		mov	r5, r3
 15709 0c86 1446     		mov	r4, r2
 15710 0c88 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15711 0c8a 2860     		str	r0, [r5]	@ unaligned
 15712 0c8c 6960     		str	r1, [r5, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 353


 15713 0c8e AA60     		str	r2, [r5, #8]	@ unaligned
 15714 0c90 EB60     		str	r3, [r5, #12]	@ unaligned
 15715 0c92 2388     		ldrh	r3, [r4]	@ unaligned
 15716 0c94 2B82     		strh	r3, [r5, #16]	@ unaligned
2078:..\src/command_processing.c ****                     break;
 15717              		.loc 1 2078 0
 15718 0c96 C4E0     		b	.L602
 15719              	.L605:
2079:..\src/command_processing.c ****                 case INPUT_MODE_ENCODER3:
2080:..\src/command_processing.c ****                     strcat(info_string, "Input mode: Handle\r\n");
 15720              		.loc 1 2080 0
 15721 0c98 7869     		ldr	r0, [r7, #20]
 15722 0c9a FFF7FEFF 		bl	strlen
 15723 0c9e 0346     		mov	r3, r0
 15724 0ca0 1A46     		mov	r2, r3
 15725 0ca2 7B69     		ldr	r3, [r7, #20]
 15726 0ca4 1344     		add	r3, r3, r2
 15727 0ca6 274A     		ldr	r2, .L690+32
 15728 0ca8 1D46     		mov	r5, r3
 15729 0caa 1446     		mov	r4, r2
 15730 0cac 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15731 0cae 2860     		str	r0, [r5]	@ unaligned
 15732 0cb0 6960     		str	r1, [r5, #4]	@ unaligned
 15733 0cb2 AA60     		str	r2, [r5, #8]	@ unaligned
 15734 0cb4 EB60     		str	r3, [r5, #12]	@ unaligned
 15735 0cb6 2068     		ldr	r0, [r4]	@ unaligned
 15736 0cb8 2861     		str	r0, [r5, #16]	@ unaligned
 15737 0cba 2379     		ldrb	r3, [r4, #4]
 15738 0cbc 2B75     		strb	r3, [r5, #20]
2081:..\src/command_processing.c ****                     break;
 15739              		.loc 1 2081 0
 15740 0cbe B0E0     		b	.L602
 15741              	.L606:
2082:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL:
2083:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional\r\n");
 15742              		.loc 1 2083 0
 15743 0cc0 7869     		ldr	r0, [r7, #20]
 15744 0cc2 FFF7FEFF 		bl	strlen
 15745 0cc6 0346     		mov	r3, r0
 15746 0cc8 1A46     		mov	r2, r3
 15747 0cca 7B69     		ldr	r3, [r7, #20]
 15748 0ccc 1344     		add	r3, r3, r2
 15749 0cce 1E4A     		ldr	r2, .L690+36
 15750 0cd0 1D46     		mov	r5, r3
 15751 0cd2 1446     		mov	r4, r2
 15752 0cd4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15753 0cd6 2860     		str	r0, [r5]	@ unaligned
 15754 0cd8 6960     		str	r1, [r5, #4]	@ unaligned
 15755 0cda AA60     		str	r2, [r5, #8]	@ unaligned
 15756 0cdc EB60     		str	r3, [r5, #12]	@ unaligned
 15757 0cde 07CC     		ldmia	r4!, {r0, r1, r2}
 15758 0ce0 2861     		str	r0, [r5, #16]	@ unaligned
 15759 0ce2 6961     		str	r1, [r5, #20]	@ unaligned
 15760 0ce4 AA61     		str	r2, [r5, #24]	@ unaligned
 15761 0ce6 2388     		ldrh	r3, [r4]	@ unaligned
 15762 0ce8 A278     		ldrb	r2, [r4, #2]
 15763 0cea AB83     		strh	r3, [r5, #28]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 354


 15764 0cec 1346     		mov	r3, r2
 15765 0cee AB77     		strb	r3, [r5, #30]
2084:..\src/command_processing.c ****                     break;
 15766              		.loc 1 2084 0
 15767 0cf0 97E0     		b	.L602
 15768              	.L607:
2085:..\src/command_processing.c ****                 case INPUT_MODE_EMG_INTEGRAL:
2086:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG integral\r\n");
 15769              		.loc 1 2086 0
 15770 0cf2 7869     		ldr	r0, [r7, #20]
 15771 0cf4 FFF7FEFF 		bl	strlen
 15772 0cf8 0346     		mov	r3, r0
 15773 0cfa 1A46     		mov	r2, r3
 15774 0cfc 7B69     		ldr	r3, [r7, #20]
 15775 0cfe 1344     		add	r3, r3, r2
 15776 0d00 124A     		ldr	r2, .L690+40
 15777 0d02 1D46     		mov	r5, r3
 15778 0d04 1446     		mov	r4, r2
 15779 0d06 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15780 0d08 2860     		str	r0, [r5]	@ unaligned
 15781 0d0a 6960     		str	r1, [r5, #4]	@ unaligned
 15782 0d0c AA60     		str	r2, [r5, #8]	@ unaligned
 15783 0d0e EB60     		str	r3, [r5, #12]	@ unaligned
 15784 0d10 03CC     		ldmia	r4!, {r0, r1}
 15785 0d12 2861     		str	r0, [r5, #16]	@ unaligned
 15786 0d14 6961     		str	r1, [r5, #20]	@ unaligned
 15787 0d16 2388     		ldrh	r3, [r4]	@ unaligned
 15788 0d18 A278     		ldrb	r2, [r4, #2]
 15789 0d1a 2B83     		strh	r3, [r5, #24]	@ unaligned
 15790 0d1c 1346     		mov	r3, r2
 15791 0d1e AB76     		strb	r3, [r5, #26]
2087:..\src/command_processing.c ****                     break;
 15792              		.loc 1 2087 0
 15793 0d20 7FE0     		b	.L602
 15794              	.L691:
 15795 0d22 00BF     		.align	2
 15796              	.L690:
 15797 0d24 0000F040 		.word	1089470464
 15798 0d28 70140000 		.word	.LC192
 15799 0d2c 7C140000 		.word	.LC193
 15800 0d30 88140000 		.word	.LC194
 15801 0d34 94140000 		.word	.LC195
 15802 0d38 B0140000 		.word	.LC196
 15803 0d3c CC140000 		.word	.LC197
 15804 0d40 E8140000 		.word	.LC198
 15805 0d44 FC140000 		.word	.LC199
 15806 0d48 14150000 		.word	.LC200
 15807 0d4c 34150000 		.word	.LC201
 15808              	.L608:
2088:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS:
2089:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS\r\n");
 15809              		.loc 1 2089 0
 15810 0d50 7869     		ldr	r0, [r7, #20]
 15811 0d52 FFF7FEFF 		bl	strlen
 15812 0d56 0346     		mov	r3, r0
 15813 0d58 1A46     		mov	r2, r3
 15814 0d5a 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 355


 15815 0d5c 1344     		add	r3, r3, r2
 15816 0d5e A44A     		ldr	r2, .L692
 15817 0d60 1C46     		mov	r4, r3
 15818 0d62 1546     		mov	r5, r2
 15819 0d64 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15820 0d66 2060     		str	r0, [r4]	@ unaligned
 15821 0d68 6160     		str	r1, [r4, #4]	@ unaligned
 15822 0d6a A260     		str	r2, [r4, #8]	@ unaligned
 15823 0d6c E360     		str	r3, [r4, #12]	@ unaligned
 15824 0d6e 2868     		ldr	r0, [r5]	@ unaligned
 15825 0d70 2061     		str	r0, [r4, #16]	@ unaligned
 15826 0d72 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 15827 0d74 AA79     		ldrb	r2, [r5, #6]
 15828 0d76 A382     		strh	r3, [r4, #20]	@ unaligned
 15829 0d78 1346     		mov	r3, r2
 15830 0d7a A375     		strb	r3, [r4, #22]
2090:..\src/command_processing.c ****                     break;
 15831              		.loc 1 2090 0
 15832 0d7c 51E0     		b	.L602
 15833              	.L609:
2091:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS_ADV:
2092:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 15834              		.loc 1 2092 0
 15835 0d7e 7869     		ldr	r0, [r7, #20]
 15836 0d80 FFF7FEFF 		bl	strlen
 15837 0d84 0346     		mov	r3, r0
 15838 0d86 1A46     		mov	r2, r3
 15839 0d88 7B69     		ldr	r3, [r7, #20]
 15840 0d8a 1344     		add	r3, r3, r2
 15841 0d8c 994A     		ldr	r2, .L692+4
 15842 0d8e 1D46     		mov	r5, r3
 15843 0d90 1446     		mov	r4, r2
 15844 0d92 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15845 0d94 2860     		str	r0, [r5]	@ unaligned
 15846 0d96 6960     		str	r1, [r5, #4]	@ unaligned
 15847 0d98 AA60     		str	r2, [r5, #8]	@ unaligned
 15848 0d9a EB60     		str	r3, [r5, #12]	@ unaligned
 15849 0d9c 03CC     		ldmia	r4!, {r0, r1}
 15850 0d9e 2861     		str	r0, [r5, #16]	@ unaligned
 15851 0da0 6961     		str	r1, [r5, #20]	@ unaligned
 15852 0da2 2388     		ldrh	r3, [r4]	@ unaligned
 15853 0da4 A278     		ldrb	r2, [r4, #2]
 15854 0da6 2B83     		strh	r3, [r5, #24]	@ unaligned
 15855 0da8 1346     		mov	r3, r2
 15856 0daa AB76     		strb	r3, [r5, #26]
2093:..\src/command_processing.c ****                     break;
 15857              		.loc 1 2093 0
 15858 0dac 39E0     		b	.L602
 15859              	.L610:
2094:..\src/command_processing.c ****                 case INPUT_MODE_JOYSTICK:
2095:..\src/command_processing.c ****                     strcat(info_string, "Input mode: Joystick\r\n");
 15860              		.loc 1 2095 0
 15861 0dae 7869     		ldr	r0, [r7, #20]
 15862 0db0 FFF7FEFF 		bl	strlen
 15863 0db4 0346     		mov	r3, r0
 15864 0db6 1A46     		mov	r2, r3
 15865 0db8 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 356


 15866 0dba 1344     		add	r3, r3, r2
 15867 0dbc 8E4A     		ldr	r2, .L692+8
 15868 0dbe 1C46     		mov	r4, r3
 15869 0dc0 1546     		mov	r5, r2
 15870 0dc2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15871 0dc4 2060     		str	r0, [r4]	@ unaligned
 15872 0dc6 6160     		str	r1, [r4, #4]	@ unaligned
 15873 0dc8 A260     		str	r2, [r4, #8]	@ unaligned
 15874 0dca E360     		str	r3, [r4, #12]	@ unaligned
 15875 0dcc 2868     		ldr	r0, [r5]	@ unaligned
 15876 0dce 2061     		str	r0, [r4, #16]	@ unaligned
 15877 0dd0 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 15878 0dd2 AA79     		ldrb	r2, [r5, #6]
 15879 0dd4 A382     		strh	r3, [r4, #20]	@ unaligned
 15880 0dd6 1346     		mov	r3, r2
 15881 0dd8 A375     		strb	r3, [r4, #22]
2096:..\src/command_processing.c ****                     break;
 15882              		.loc 1 2096 0
 15883 0dda 22E0     		b	.L602
 15884              	.L611:
2097:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL_NC:
2098:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 15885              		.loc 1 2098 0
 15886 0ddc 7869     		ldr	r0, [r7, #20]
 15887 0dde FFF7FEFF 		bl	strlen
 15888 0de2 0346     		mov	r3, r0
 15889 0de4 1A46     		mov	r2, r3
 15890 0de6 7B69     		ldr	r3, [r7, #20]
 15891 0de8 1344     		add	r3, r3, r2
 15892 0dea 844A     		ldr	r2, .L692+12
 15893 0dec 1546     		mov	r5, r2
 15894 0dee 9E46     		mov	lr, r3
 15895 0df0 05F1200C 		add	ip, r5, #32
 15896              	.L612:
 15897 0df4 7446     		mov	r4, lr
 15898 0df6 2E46     		mov	r6, r5
 15899 0df8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15900 0dfa 2060     		str	r0, [r4]	@ unaligned
 15901 0dfc 6160     		str	r1, [r4, #4]	@ unaligned
 15902 0dfe A260     		str	r2, [r4, #8]	@ unaligned
 15903 0e00 E360     		str	r3, [r4, #12]	@ unaligned
 15904 0e02 1035     		adds	r5, r5, #16
 15905 0e04 0EF1100E 		add	lr, lr, #16
 15906 0e08 6545     		cmp	r5, ip
 15907 0e0a F3D1     		bne	.L612
 15908 0e0c 7446     		mov	r4, lr
 15909 0e0e 2B46     		mov	r3, r5
 15910 0e10 07CB     		ldmia	r3!, {r0, r1, r2}
 15911 0e12 2060     		str	r0, [r4]	@ unaligned
 15912 0e14 6160     		str	r1, [r4, #4]	@ unaligned
 15913 0e16 A260     		str	r2, [r4, #8]	@ unaligned
 15914 0e18 1A88     		ldrh	r2, [r3]	@ unaligned
 15915 0e1a 9B78     		ldrb	r3, [r3, #2]
 15916 0e1c A281     		strh	r2, [r4, #12]	@ unaligned
 15917 0e1e A373     		strb	r3, [r4, #14]
2099:..\src/command_processing.c ****                     break;
 15918              		.loc 1 2099 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 357


 15919 0e20 00BF     		nop
 15920              	.L602:
2100:..\src/command_processing.c ****             }
2101:..\src/command_processing.c **** 
2102:..\src/command_processing.c ****             switch(MOT->control_mode) {
 15921              		.loc 1 2102 0
 15922 0e22 D7F88030 		ldr	r3, [r7, #128]
 15923 0e26 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 15924 0e2a 032B     		cmp	r3, #3
 15925 0e2c 63D8     		bhi	.L683
 15926 0e2e 01A2     		adr	r2, .L615
 15927 0e30 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 15928              		.p2align 2
 15929              	.L615:
 15930 0e34 450E0000 		.word	.L614+1
 15931 0e38 6F0E0000 		.word	.L616+1
 15932 0e3c 930E0000 		.word	.L617+1
 15933 0e40 B90E0000 		.word	.L618+1
 15934              		.p2align 1
 15935              	.L614:
2103:..\src/command_processing.c ****                 case CONTROL_ANGLE:
2104:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position\r\n");
 15936              		.loc 1 2104 0
 15937 0e44 7869     		ldr	r0, [r7, #20]
 15938 0e46 FFF7FEFF 		bl	strlen
 15939 0e4a 0346     		mov	r3, r0
 15940 0e4c 1A46     		mov	r2, r3
 15941 0e4e 7B69     		ldr	r3, [r7, #20]
 15942 0e50 1344     		add	r3, r3, r2
 15943 0e52 6B4A     		ldr	r2, .L692+16
 15944 0e54 1D46     		mov	r5, r3
 15945 0e56 1446     		mov	r4, r2
 15946 0e58 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15947 0e5a 2860     		str	r0, [r5]	@ unaligned
 15948 0e5c 6960     		str	r1, [r5, #4]	@ unaligned
 15949 0e5e AA60     		str	r2, [r5, #8]	@ unaligned
 15950 0e60 EB60     		str	r3, [r5, #12]	@ unaligned
 15951 0e62 03CC     		ldmia	r4!, {r0, r1}
 15952 0e64 2861     		str	r0, [r5, #16]	@ unaligned
 15953 0e66 6961     		str	r1, [r5, #20]	@ unaligned
 15954 0e68 2378     		ldrb	r3, [r4]
 15955 0e6a 2B76     		strb	r3, [r5, #24]
2105:..\src/command_processing.c ****                     break;
 15956              		.loc 1 2105 0
 15957 0e6c 44E0     		b	.L619
 15958              	.L616:
2106:..\src/command_processing.c ****                 case CONTROL_PWM:
2107:..\src/command_processing.c ****                     strcat(info_string, "Control mode: PWM\r\n");
 15959              		.loc 1 2107 0
 15960 0e6e 7869     		ldr	r0, [r7, #20]
 15961 0e70 FFF7FEFF 		bl	strlen
 15962 0e74 0346     		mov	r3, r0
 15963 0e76 1A46     		mov	r2, r3
 15964 0e78 7B69     		ldr	r3, [r7, #20]
 15965 0e7a 1344     		add	r3, r3, r2
 15966 0e7c 614A     		ldr	r2, .L692+20
 15967 0e7e 1D46     		mov	r5, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 358


 15968 0e80 1446     		mov	r4, r2
 15969 0e82 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15970 0e84 2860     		str	r0, [r5]	@ unaligned
 15971 0e86 6960     		str	r1, [r5, #4]	@ unaligned
 15972 0e88 AA60     		str	r2, [r5, #8]	@ unaligned
 15973 0e8a EB60     		str	r3, [r5, #12]	@ unaligned
 15974 0e8c 2068     		ldr	r0, [r4]	@ unaligned
 15975 0e8e 2861     		str	r0, [r5, #16]	@ unaligned
2108:..\src/command_processing.c ****                     break;
 15976              		.loc 1 2108 0
 15977 0e90 32E0     		b	.L619
 15978              	.L617:
2109:..\src/command_processing.c ****                 case CONTROL_CURRENT:
2110:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Current\r\n");
 15979              		.loc 1 2110 0
 15980 0e92 7869     		ldr	r0, [r7, #20]
 15981 0e94 FFF7FEFF 		bl	strlen
 15982 0e98 0346     		mov	r3, r0
 15983 0e9a 1A46     		mov	r2, r3
 15984 0e9c 7B69     		ldr	r3, [r7, #20]
 15985 0e9e 1344     		add	r3, r3, r2
 15986 0ea0 594A     		ldr	r2, .L692+24
 15987 0ea2 1D46     		mov	r5, r3
 15988 0ea4 1446     		mov	r4, r2
 15989 0ea6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15990 0ea8 2860     		str	r0, [r5]	@ unaligned
 15991 0eaa 6960     		str	r1, [r5, #4]	@ unaligned
 15992 0eac AA60     		str	r2, [r5, #8]	@ unaligned
 15993 0eae EB60     		str	r3, [r5, #12]	@ unaligned
 15994 0eb0 03CC     		ldmia	r4!, {r0, r1}
 15995 0eb2 2861     		str	r0, [r5, #16]	@ unaligned
 15996 0eb4 6961     		str	r1, [r5, #20]	@ unaligned
2111:..\src/command_processing.c ****                     break;
 15997              		.loc 1 2111 0
 15998 0eb6 1FE0     		b	.L619
 15999              	.L618:
2112:..\src/command_processing.c ****                 case CURR_AND_POS_CONTROL:
2113:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position and Current\r\n");
 16000              		.loc 1 2113 0
 16001 0eb8 7869     		ldr	r0, [r7, #20]
 16002 0eba FFF7FEFF 		bl	strlen
 16003 0ebe 0346     		mov	r3, r0
 16004 0ec0 1A46     		mov	r2, r3
 16005 0ec2 7B69     		ldr	r3, [r7, #20]
 16006 0ec4 1344     		add	r3, r3, r2
 16007 0ec6 514A     		ldr	r2, .L692+28
 16008 0ec8 1446     		mov	r4, r2
 16009 0eca 9E46     		mov	lr, r3
 16010 0ecc 04F1200C 		add	ip, r4, #32
 16011              	.L620:
 16012 0ed0 7546     		mov	r5, lr
 16013 0ed2 2646     		mov	r6, r4
 16014 0ed4 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16015 0ed6 2860     		str	r0, [r5]	@ unaligned
 16016 0ed8 6960     		str	r1, [r5, #4]	@ unaligned
 16017 0eda AA60     		str	r2, [r5, #8]	@ unaligned
 16018 0edc EB60     		str	r3, [r5, #12]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 359


 16019 0ede 1034     		adds	r4, r4, #16
 16020 0ee0 0EF1100E 		add	lr, lr, #16
 16021 0ee4 6445     		cmp	r4, ip
 16022 0ee6 F3D1     		bne	.L620
 16023 0ee8 7346     		mov	r3, lr
 16024 0eea 2246     		mov	r2, r4
 16025 0eec 1068     		ldr	r0, [r2]	@ unaligned
 16026 0eee 1860     		str	r0, [r3]	@ unaligned
 16027 0ef0 1279     		ldrb	r2, [r2, #4]
 16028 0ef2 1A71     		strb	r2, [r3, #4]
2114:..\src/command_processing.c ****                     break;
 16029              		.loc 1 2114 0
 16030 0ef4 00E0     		b	.L619
 16031              	.L683:
2115:..\src/command_processing.c ****                 default:
2116:..\src/command_processing.c ****                     break;
 16032              		.loc 1 2116 0
 16033 0ef6 00BF     		nop
 16034              	.L619:
2117:..\src/command_processing.c ****             }
2118:..\src/command_processing.c **** 
2119:..\src/command_processing.c ****             if (MEM_P->enc[ENC_L].double_encoder_on_off)
 16035              		.loc 1 2119 0
 16036 0ef8 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16037 0efc D7F88810 		ldr	r1, [r7, #136]
 16038 0f00 1346     		mov	r3, r2
 16039 0f02 5B00     		lsls	r3, r3, #1
 16040 0f04 1344     		add	r3, r3, r2
 16041 0f06 1B01     		lsls	r3, r3, #4
 16042 0f08 0B44     		add	r3, r3, r1
 16043 0f0a 03F5D873 		add	r3, r3, #432
 16044 0f0e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16045 0f10 002B     		cmp	r3, #0
 16046 0f12 1CD0     		beq	.L621
2120:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: YES\r\n");
 16047              		.loc 1 2120 0
 16048 0f14 7869     		ldr	r0, [r7, #20]
 16049 0f16 FFF7FEFF 		bl	strlen
 16050 0f1a 0346     		mov	r3, r0
 16051 0f1c 1A46     		mov	r2, r3
 16052 0f1e 7B69     		ldr	r3, [r7, #20]
 16053 0f20 1344     		add	r3, r3, r2
 16054 0f22 3B4A     		ldr	r2, .L692+32
 16055 0f24 1446     		mov	r4, r2
 16056 0f26 9E46     		mov	lr, r3
 16057 0f28 04F1200C 		add	ip, r4, #32
 16058              	.L622:
 16059 0f2c 7546     		mov	r5, lr
 16060 0f2e 2646     		mov	r6, r4
 16061 0f30 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16062 0f32 2860     		str	r0, [r5]	@ unaligned
 16063 0f34 6960     		str	r1, [r5, #4]	@ unaligned
 16064 0f36 AA60     		str	r2, [r5, #8]	@ unaligned
 16065 0f38 EB60     		str	r3, [r5, #12]	@ unaligned
 16066 0f3a 1034     		adds	r4, r4, #16
 16067 0f3c 0EF1100E 		add	lr, lr, #16
 16068 0f40 6445     		cmp	r4, ip
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 360


 16069 0f42 F3D1     		bne	.L622
 16070 0f44 7346     		mov	r3, lr
 16071 0f46 2246     		mov	r2, r4
 16072 0f48 1278     		ldrb	r2, [r2]
 16073 0f4a 1A70     		strb	r2, [r3]
 16074 0f4c 13E0     		b	.L623
 16075              	.L621:
2121:..\src/command_processing.c ****             else
2122:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: NO\r\n");
 16076              		.loc 1 2122 0
 16077 0f4e 7869     		ldr	r0, [r7, #20]
 16078 0f50 FFF7FEFF 		bl	strlen
 16079 0f54 0346     		mov	r3, r0
 16080 0f56 1A46     		mov	r2, r3
 16081 0f58 7B69     		ldr	r3, [r7, #20]
 16082 0f5a 1344     		add	r3, r3, r2
 16083 0f5c 2D4A     		ldr	r2, .L692+36
 16084 0f5e 1C46     		mov	r4, r3
 16085 0f60 1546     		mov	r5, r2
 16086 0f62 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16087 0f64 2060     		str	r0, [r4]	@ unaligned
 16088 0f66 6160     		str	r1, [r4, #4]	@ unaligned
 16089 0f68 A260     		str	r2, [r4, #8]	@ unaligned
 16090 0f6a E360     		str	r3, [r4, #12]	@ unaligned
 16091 0f6c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16092 0f6e 2061     		str	r0, [r4, #16]	@ unaligned
 16093 0f70 6161     		str	r1, [r4, #20]	@ unaligned
 16094 0f72 A261     		str	r2, [r4, #24]	@ unaligned
 16095 0f74 E361     		str	r3, [r4, #28]	@ unaligned
 16096              	.L623:
2123:..\src/command_processing.c **** 
2124:..\src/command_processing.c ****             sprintf(str, "Motor-Handle Ratio: %d\r\n", (int)MEM_P->enc[ENC_L].motor_handle_ratio);
 16097              		.loc 1 2124 0
 16098 0f76 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16099 0f7a D7F88810 		ldr	r1, [r7, #136]
 16100 0f7e 1346     		mov	r3, r2
 16101 0f80 5B00     		lsls	r3, r3, #1
 16102 0f82 1344     		add	r3, r3, r2
 16103 0f84 1B01     		lsls	r3, r3, #4
 16104 0f86 0B44     		add	r3, r3, r1
 16105 0f88 03F5DA73 		add	r3, r3, #436
 16106 0f8c 93F90030 		ldrsb	r3, [r3]
 16107 0f90 1A46     		mov	r2, r3
 16108 0f92 07F11803 		add	r3, r7, #24
 16109 0f96 2049     		ldr	r1, .L692+40
 16110 0f98 1846     		mov	r0, r3
 16111 0f9a FFF7FEFF 		bl	sprintf
2125:..\src/command_processing.c ****             strcat(info_string, str);
 16112              		.loc 1 2125 0
 16113 0f9e 07F11803 		add	r3, r7, #24
 16114 0fa2 1946     		mov	r1, r3
 16115 0fa4 7869     		ldr	r0, [r7, #20]
 16116 0fa6 FFF7FEFF 		bl	strcat
2126:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
2127:..\src/command_processing.c ****             strcat(info_string, "Encoder indices used for motor control: ");
 16117              		.loc 1 2127 0
 16118 0faa 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 361


 16119 0fac FFF7FEFF 		bl	strlen
 16120 0fb0 0346     		mov	r3, r0
 16121 0fb2 1A46     		mov	r2, r3
 16122 0fb4 7B69     		ldr	r3, [r7, #20]
 16123 0fb6 1344     		add	r3, r3, r2
 16124 0fb8 184A     		ldr	r2, .L692+44
 16125 0fba 1446     		mov	r4, r2
 16126 0fbc 9E46     		mov	lr, r3
 16127 0fbe 04F1200C 		add	ip, r4, #32
 16128              	.L624:
 16129 0fc2 7546     		mov	r5, lr
 16130 0fc4 2646     		mov	r6, r4
 16131 0fc6 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16132 0fc8 2860     		str	r0, [r5]	@ unaligned
 16133 0fca 6960     		str	r1, [r5, #4]	@ unaligned
 16134 0fcc AA60     		str	r2, [r5, #8]	@ unaligned
 16135 0fce EB60     		str	r3, [r5, #12]	@ unaligned
 16136 0fd0 1034     		adds	r4, r4, #16
 16137 0fd2 0EF1100E 		add	lr, lr, #16
 16138 0fd6 6445     		cmp	r4, ip
 16139 0fd8 F3D1     		bne	.L624
 16140 0fda 7246     		mov	r2, lr
 16141 0fdc 2346     		mov	r3, r4
 16142 0fde 03CB     		ldmia	r3!, {r0, r1}
 16143 0fe0 1060     		str	r0, [r2]	@ unaligned
 16144 0fe2 5160     		str	r1, [r2, #4]	@ unaligned
 16145 0fe4 1B78     		ldrb	r3, [r3]
 16146 0fe6 1372     		strb	r3, [r2, #8]
2128:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16147              		.loc 1 2128 0
 16148 0fe8 0023     		movs	r3, #0
 16149 0fea C7F89430 		str	r3, [r7, #148]
 16150 0fee 48E0     		b	.L625
 16151              	.L693:
 16152              		.align	2
 16153              	.L692:
 16154 0ff0 50150000 		.word	.LC202
 16155 0ff4 68150000 		.word	.LC203
 16156 0ff8 84150000 		.word	.LC204
 16157 0ffc 9C150000 		.word	.LC205
 16158 1000 CC150000 		.word	.LC206
 16159 1004 E8150000 		.word	.LC207
 16160 1008 FC150000 		.word	.LC208
 16161 100c 14160000 		.word	.LC209
 16162 1010 3C160000 		.word	.LC210
 16163 1014 60160000 		.word	.LC211
 16164 1018 80160000 		.word	.LC212
 16165 101c 9C160000 		.word	.LC213
 16166              	.L627:
2129:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
 16167              		.loc 1 2129 0
 16168 1020 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16169 1024 D7F88810 		ldr	r1, [r7, #136]
 16170 1028 1346     		mov	r3, r2
 16171 102a 5B00     		lsls	r3, r3, #1
 16172 102c 1344     		add	r3, r3, r2
 16173 102e 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 362


 16174 1030 CA18     		adds	r2, r1, r3
 16175 1032 D7F89430 		ldr	r3, [r7, #148]
 16176 1036 1344     		add	r3, r3, r2
 16177 1038 03F2B113 		addw	r3, r3, #433
 16178 103c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16179 103e 1A46     		mov	r2, r3
 16180 1040 07F11803 		add	r3, r7, #24
 16181 1044 AE49     		ldr	r1, .L694
 16182 1046 1846     		mov	r0, r3
 16183 1048 FFF7FEFF 		bl	sprintf
2130:..\src/command_processing.c ****                 strcat(info_string, str);
 16184              		.loc 1 2130 0
 16185 104c 07F11803 		add	r3, r7, #24
 16186 1050 1946     		mov	r1, r3
 16187 1052 7869     		ldr	r0, [r7, #20]
 16188 1054 FFF7FEFF 		bl	strcat
2131:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 16189              		.loc 1 2131 0
 16190 1058 D7F89430 		ldr	r3, [r7, #148]
 16191 105c 022B     		cmp	r3, #2
 16192 105e 0BD0     		beq	.L626
2132:..\src/command_processing.c ****                     strcat(info_string, ", ");
 16193              		.loc 1 2132 0
 16194 1060 7869     		ldr	r0, [r7, #20]
 16195 1062 FFF7FEFF 		bl	strlen
 16196 1066 0346     		mov	r3, r0
 16197 1068 1A46     		mov	r2, r3
 16198 106a 7B69     		ldr	r3, [r7, #20]
 16199 106c 1344     		add	r3, r3, r2
 16200 106e A54A     		ldr	r2, .L694+4
 16201 1070 1188     		ldrh	r1, [r2]	@ unaligned
 16202 1072 9278     		ldrb	r2, [r2, #2]
 16203 1074 1980     		strh	r1, [r3]	@ unaligned
 16204 1076 9A70     		strb	r2, [r3, #2]
 16205              	.L626:
2128:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
 16206              		.loc 1 2128 0 discriminator 2
 16207 1078 D7F89430 		ldr	r3, [r7, #148]
 16208 107c 0133     		adds	r3, r3, #1
 16209 107e C7F89430 		str	r3, [r7, #148]
 16210              	.L625:
2128:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
 16211              		.loc 1 2128 0 is_stmt 0 discriminator 1
 16212 1082 D7F89430 		ldr	r3, [r7, #148]
 16213 1086 022B     		cmp	r3, #2
 16214 1088 CADD     		ble	.L627
2133:..\src/command_processing.c ****                 }                
2134:..\src/command_processing.c ****             }
2135:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16215              		.loc 1 2135 0 is_stmt 1
 16216 108a 7869     		ldr	r0, [r7, #20]
 16217 108c FFF7FEFF 		bl	strlen
 16218 1090 0346     		mov	r3, r0
 16219 1092 1A46     		mov	r2, r3
 16220 1094 7B69     		ldr	r3, [r7, #20]
 16221 1096 1344     		add	r3, r3, r2
 16222 1098 9B4A     		ldr	r2, .L694+8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 363


 16223 109a 1188     		ldrh	r1, [r2]	@ unaligned
 16224 109c 9278     		ldrb	r2, [r2, #2]
 16225 109e 1980     		strh	r1, [r3]	@ unaligned
 16226 10a0 9A70     		strb	r2, [r3, #2]
2136:..\src/command_processing.c ****             sprintf(str, "First Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[0]);
 16227              		.loc 1 2136 0
 16228 10a2 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16229 10a6 D7F88810 		ldr	r1, [r7, #136]
 16230 10aa 1346     		mov	r3, r2
 16231 10ac 5B00     		lsls	r3, r3, #1
 16232 10ae 1344     		add	r3, r3, r2
 16233 10b0 1B01     		lsls	r3, r3, #4
 16234 10b2 0B44     		add	r3, r3, r1
 16235 10b4 03F2B513 		addw	r3, r3, #437
 16236 10b8 93F90030 		ldrsb	r3, [r3]
 16237 10bc 1A46     		mov	r2, r3
 16238 10be 07F11803 		add	r3, r7, #24
 16239 10c2 9249     		ldr	r1, .L694+12
 16240 10c4 1846     		mov	r0, r3
 16241 10c6 FFF7FEFF 		bl	sprintf
2137:..\src/command_processing.c ****             strcat(info_string, str);
 16242              		.loc 1 2137 0
 16243 10ca 07F11803 		add	r3, r7, #24
 16244 10ce 1946     		mov	r1, r3
 16245 10d0 7869     		ldr	r0, [r7, #20]
 16246 10d2 FFF7FEFF 		bl	strcat
2138:..\src/command_processing.c ****             sprintf(str, "Second Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[1]);
 16247              		.loc 1 2138 0
 16248 10d6 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16249 10da D7F88810 		ldr	r1, [r7, #136]
 16250 10de 1346     		mov	r3, r2
 16251 10e0 5B00     		lsls	r3, r3, #1
 16252 10e2 1344     		add	r3, r3, r2
 16253 10e4 1B01     		lsls	r3, r3, #4
 16254 10e6 0B44     		add	r3, r3, r1
 16255 10e8 03F5DB73 		add	r3, r3, #438
 16256 10ec 93F90030 		ldrsb	r3, [r3]
 16257 10f0 1A46     		mov	r2, r3
 16258 10f2 07F11803 		add	r3, r7, #24
 16259 10f6 8649     		ldr	r1, .L694+16
 16260 10f8 1846     		mov	r0, r3
 16261 10fa FFF7FEFF 		bl	sprintf
2139:..\src/command_processing.c ****             strcat(info_string, str);
 16262              		.loc 1 2139 0
 16263 10fe 07F11803 		add	r3, r7, #24
 16264 1102 1946     		mov	r1, r3
 16265 1104 7869     		ldr	r0, [r7, #20]
 16266 1106 FFF7FEFF 		bl	strcat
2140:..\src/command_processing.c ****             sprintf(str, "Gear invariant: %d\r\n", (int)MEM_P->enc[ENC_L].gears_params[2]);
 16267              		.loc 1 2140 0
 16268 110a 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16269 110e D7F88810 		ldr	r1, [r7, #136]
 16270 1112 1346     		mov	r3, r2
 16271 1114 5B00     		lsls	r3, r3, #1
 16272 1116 1344     		add	r3, r3, r2
 16273 1118 1B01     		lsls	r3, r3, #4
 16274 111a 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 364


 16275 111c 03F2B713 		addw	r3, r3, #439
 16276 1120 93F90030 		ldrsb	r3, [r3]
 16277 1124 1A46     		mov	r2, r3
 16278 1126 07F11803 		add	r3, r7, #24
 16279 112a 7A49     		ldr	r1, .L694+20
 16280 112c 1846     		mov	r0, r3
 16281 112e FFF7FEFF 		bl	sprintf
2141:..\src/command_processing.c ****             strcat(info_string, str);
 16282              		.loc 1 2141 0
 16283 1132 07F11803 		add	r3, r7, #24
 16284 1136 1946     		mov	r1, r3
 16285 1138 7869     		ldr	r0, [r7, #20]
 16286 113a FFF7FEFF 		bl	strcat
2142:..\src/command_processing.c **** #endif            
2143:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16287              		.loc 1 2143 0
 16288 113e 7869     		ldr	r0, [r7, #20]
 16289 1140 FFF7FEFF 		bl	strlen
 16290 1144 0346     		mov	r3, r0
 16291 1146 1A46     		mov	r2, r3
 16292 1148 7B69     		ldr	r3, [r7, #20]
 16293 114a 1344     		add	r3, r3, r2
 16294 114c 6E4A     		ldr	r2, .L694+8
 16295 114e 1188     		ldrh	r1, [r2]	@ unaligned
 16296 1150 9278     		ldrb	r2, [r2, #2]
 16297 1152 1980     		strh	r1, [r3]	@ unaligned
 16298 1154 9A70     		strb	r2, [r3, #2]
2144:..\src/command_processing.c **** 
2145:..\src/command_processing.c ****             strcat(info_string, "Sensor resolution: ");
 16299              		.loc 1 2145 0
 16300 1156 7869     		ldr	r0, [r7, #20]
 16301 1158 FFF7FEFF 		bl	strlen
 16302 115c 0346     		mov	r3, r0
 16303 115e 1A46     		mov	r2, r3
 16304 1160 7B69     		ldr	r3, [r7, #20]
 16305 1162 1344     		add	r3, r3, r2
 16306 1164 6C4A     		ldr	r2, .L694+24
 16307 1166 1D46     		mov	r5, r3
 16308 1168 1446     		mov	r4, r2
 16309 116a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16310 116c 2860     		str	r0, [r5]	@ unaligned
 16311 116e 6960     		str	r1, [r5, #4]	@ unaligned
 16312 1170 AA60     		str	r2, [r5, #8]	@ unaligned
 16313 1172 EB60     		str	r3, [r5, #12]	@ unaligned
 16314 1174 2068     		ldr	r0, [r4]	@ unaligned
 16315 1176 2861     		str	r0, [r5, #16]	@ unaligned
2146:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16316              		.loc 1 2146 0
 16317 1178 0023     		movs	r3, #0
 16318 117a C7F89430 		str	r3, [r7, #148]
 16319 117e 30E0     		b	.L628
 16320              	.L630:
2147:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16321              		.loc 1 2147 0
 16322 1180 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16323 1184 D7F88810 		ldr	r1, [r7, #136]
 16324 1188 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 365


 16325 118a 5B00     		lsls	r3, r3, #1
 16326 118c 1344     		add	r3, r3, r2
 16327 118e 1B01     		lsls	r3, r3, #4
 16328 1190 CA18     		adds	r2, r1, r3
 16329 1192 D7F89430 		ldr	r3, [r7, #148]
 16330 1196 1344     		add	r3, r3, r2
 16331 1198 03F29513 		addw	r3, r3, #405
 16332 119c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16333 119e 1A46     		mov	r2, r3
 16334 11a0 07F11803 		add	r3, r7, #24
 16335 11a4 5649     		ldr	r1, .L694
 16336 11a6 1846     		mov	r0, r3
 16337 11a8 FFF7FEFF 		bl	sprintf
2148:..\src/command_processing.c ****                 strcat(info_string, str);
 16338              		.loc 1 2148 0
 16339 11ac 07F11803 		add	r3, r7, #24
 16340 11b0 1946     		mov	r1, r3
 16341 11b2 7869     		ldr	r0, [r7, #20]
 16342 11b4 FFF7FEFF 		bl	strcat
2149:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 16343              		.loc 1 2149 0
 16344 11b8 D7F89430 		ldr	r3, [r7, #148]
 16345 11bc 022B     		cmp	r3, #2
 16346 11be 0BD0     		beq	.L629
2150:..\src/command_processing.c ****                     strcat(info_string, ", ");
 16347              		.loc 1 2150 0
 16348 11c0 7869     		ldr	r0, [r7, #20]
 16349 11c2 FFF7FEFF 		bl	strlen
 16350 11c6 0346     		mov	r3, r0
 16351 11c8 1A46     		mov	r2, r3
 16352 11ca 7B69     		ldr	r3, [r7, #20]
 16353 11cc 1344     		add	r3, r3, r2
 16354 11ce 4D4A     		ldr	r2, .L694+4
 16355 11d0 1188     		ldrh	r1, [r2]	@ unaligned
 16356 11d2 9278     		ldrb	r2, [r2, #2]
 16357 11d4 1980     		strh	r1, [r3]	@ unaligned
 16358 11d6 9A70     		strb	r2, [r3, #2]
 16359              	.L629:
2146:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16360              		.loc 1 2146 0 discriminator 2
 16361 11d8 D7F89430 		ldr	r3, [r7, #148]
 16362 11dc 0133     		adds	r3, r3, #1
 16363 11de C7F89430 		str	r3, [r7, #148]
 16364              	.L628:
2146:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16365              		.loc 1 2146 0 is_stmt 0 discriminator 1
 16366 11e2 D7F89430 		ldr	r3, [r7, #148]
 16367 11e6 022B     		cmp	r3, #2
 16368 11e8 CADD     		ble	.L630
2151:..\src/command_processing.c ****                 }                
2152:..\src/command_processing.c ****             }
2153:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16369              		.loc 1 2153 0 is_stmt 1
 16370 11ea 7869     		ldr	r0, [r7, #20]
 16371 11ec FFF7FEFF 		bl	strlen
 16372 11f0 0346     		mov	r3, r0
 16373 11f2 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 366


 16374 11f4 7B69     		ldr	r3, [r7, #20]
 16375 11f6 1344     		add	r3, r3, r2
 16376 11f8 434A     		ldr	r2, .L694+8
 16377 11fa 1188     		ldrh	r1, [r2]	@ unaligned
 16378 11fc 9278     		ldrb	r2, [r2, #2]
 16379 11fe 1980     		strh	r1, [r3]	@ unaligned
 16380 1200 9A70     		strb	r2, [r3, #2]
2154:..\src/command_processing.c **** 
2155:..\src/command_processing.c ****             strcat(info_string, "Measurement Offset: ");
 16381              		.loc 1 2155 0
 16382 1202 7869     		ldr	r0, [r7, #20]
 16383 1204 FFF7FEFF 		bl	strlen
 16384 1208 0346     		mov	r3, r0
 16385 120a 1A46     		mov	r2, r3
 16386 120c 7B69     		ldr	r3, [r7, #20]
 16387 120e 1344     		add	r3, r3, r2
 16388 1210 424A     		ldr	r2, .L694+28
 16389 1212 1D46     		mov	r5, r3
 16390 1214 1446     		mov	r4, r2
 16391 1216 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16392 1218 2860     		str	r0, [r5]	@ unaligned
 16393 121a 6960     		str	r1, [r5, #4]	@ unaligned
 16394 121c AA60     		str	r2, [r5, #8]	@ unaligned
 16395 121e EB60     		str	r3, [r5, #12]	@ unaligned
 16396 1220 2068     		ldr	r0, [r4]	@ unaligned
 16397 1222 2861     		str	r0, [r5, #16]	@ unaligned
 16398 1224 2379     		ldrb	r3, [r4, #4]
 16399 1226 2B75     		strb	r3, [r5, #20]
2156:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16400              		.loc 1 2156 0
 16401 1228 0023     		movs	r3, #0
 16402 122a C7F89430 		str	r3, [r7, #148]
 16403 122e 3FE0     		b	.L631
 16404              	.L633:
2157:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 16405              		.loc 1 2157 0
 16406 1230 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16407 1234 D7F88810 		ldr	r1, [r7, #136]
 16408 1238 1346     		mov	r3, r2
 16409 123a 5B00     		lsls	r3, r3, #1
 16410 123c 1344     		add	r3, r3, r2
 16411 123e 9B00     		lsls	r3, r3, #2
 16412 1240 D7F89420 		ldr	r2, [r7, #148]
 16413 1244 1344     		add	r3, r3, r2
 16414 1246 6633     		adds	r3, r3, #102
 16415 1248 51F82310 		ldr	r1, [r1, r3, lsl #2]
 16416 124c 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16417 1250 D7F88800 		ldr	r0, [r7, #136]
 16418 1254 1346     		mov	r3, r2
 16419 1256 5B00     		lsls	r3, r3, #1
 16420 1258 1344     		add	r3, r3, r2
 16421 125a 1B01     		lsls	r3, r3, #4
 16422 125c C218     		adds	r2, r0, r3
 16423 125e D7F89430 		ldr	r3, [r7, #148]
 16424 1262 1344     		add	r3, r3, r2
 16425 1264 03F29513 		addw	r3, r3, #405
 16426 1268 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 367


 16427 126a 41FA03F2 		asr	r2, r1, r3
 16428 126e 07F11803 		add	r3, r7, #24
 16429 1272 2B49     		ldr	r1, .L694+32
 16430 1274 1846     		mov	r0, r3
 16431 1276 FFF7FEFF 		bl	sprintf
2158:..\src/command_processing.c ****                 strcat(info_string, str);
 16432              		.loc 1 2158 0
 16433 127a 07F11803 		add	r3, r7, #24
 16434 127e 1946     		mov	r1, r3
 16435 1280 7869     		ldr	r0, [r7, #20]
 16436 1282 FFF7FEFF 		bl	strcat
2159:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 16437              		.loc 1 2159 0
 16438 1286 D7F89430 		ldr	r3, [r7, #148]
 16439 128a 022B     		cmp	r3, #2
 16440 128c 0BD0     		beq	.L632
2160:..\src/command_processing.c ****                     strcat(info_string, ", ");
 16441              		.loc 1 2160 0
 16442 128e 7869     		ldr	r0, [r7, #20]
 16443 1290 FFF7FEFF 		bl	strlen
 16444 1294 0346     		mov	r3, r0
 16445 1296 1A46     		mov	r2, r3
 16446 1298 7B69     		ldr	r3, [r7, #20]
 16447 129a 1344     		add	r3, r3, r2
 16448 129c 194A     		ldr	r2, .L694+4
 16449 129e 1188     		ldrh	r1, [r2]	@ unaligned
 16450 12a0 9278     		ldrb	r2, [r2, #2]
 16451 12a2 1980     		strh	r1, [r3]	@ unaligned
 16452 12a4 9A70     		strb	r2, [r3, #2]
 16453              	.L632:
2156:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 16454              		.loc 1 2156 0 discriminator 2
 16455 12a6 D7F89430 		ldr	r3, [r7, #148]
 16456 12aa 0133     		adds	r3, r3, #1
 16457 12ac C7F89430 		str	r3, [r7, #148]
 16458              	.L631:
2156:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 16459              		.loc 1 2156 0 is_stmt 0 discriminator 1
 16460 12b0 D7F89430 		ldr	r3, [r7, #148]
 16461 12b4 022B     		cmp	r3, #2
 16462 12b6 BBDD     		ble	.L633
2161:..\src/command_processing.c ****                 }
2162:..\src/command_processing.c ****             }
2163:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16463              		.loc 1 2163 0 is_stmt 1
 16464 12b8 7869     		ldr	r0, [r7, #20]
 16465 12ba FFF7FEFF 		bl	strlen
 16466 12be 0346     		mov	r3, r0
 16467 12c0 1A46     		mov	r2, r3
 16468 12c2 7B69     		ldr	r3, [r7, #20]
 16469 12c4 1344     		add	r3, r3, r2
 16470 12c6 104A     		ldr	r2, .L694+8
 16471 12c8 1188     		ldrh	r1, [r2]	@ unaligned
 16472 12ca 9278     		ldrb	r2, [r2, #2]
 16473 12cc 1980     		strh	r1, [r3]	@ unaligned
 16474 12ce 9A70     		strb	r2, [r3, #2]
2164:..\src/command_processing.c ****                 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 368


2165:..\src/command_processing.c ****             strcat(info_string, "Measurement Multiplier: ");
 16475              		.loc 1 2165 0
 16476 12d0 7869     		ldr	r0, [r7, #20]
 16477 12d2 FFF7FEFF 		bl	strlen
 16478 12d6 0346     		mov	r3, r0
 16479 12d8 1A46     		mov	r2, r3
 16480 12da 7B69     		ldr	r3, [r7, #20]
 16481 12dc 1344     		add	r3, r3, r2
 16482 12de 114A     		ldr	r2, .L694+36
 16483 12e0 1D46     		mov	r5, r3
 16484 12e2 1446     		mov	r4, r2
 16485 12e4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16486 12e6 2860     		str	r0, [r5]	@ unaligned
 16487 12e8 6960     		str	r1, [r5, #4]	@ unaligned
 16488 12ea AA60     		str	r2, [r5, #8]	@ unaligned
 16489 12ec EB60     		str	r3, [r5, #12]	@ unaligned
 16490 12ee 03CC     		ldmia	r4!, {r0, r1}
 16491 12f0 2861     		str	r0, [r5, #16]	@ unaligned
 16492 12f2 6961     		str	r1, [r5, #20]	@ unaligned
 16493 12f4 2378     		ldrb	r3, [r4]
 16494 12f6 2B76     		strb	r3, [r5, #24]
2166:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16495              		.loc 1 2166 0
 16496 12f8 0023     		movs	r3, #0
 16497 12fa C7F89430 		str	r3, [r7, #148]
 16498 12fe 49E0     		b	.L634
 16499              	.L695:
 16500              		.align	2
 16501              	.L694:
 16502 1300 90130000 		.word	.LC183
 16503 1304 94130000 		.word	.LC184
 16504 1308 5C110000 		.word	.LC152
 16505 130c C8160000 		.word	.LC214
 16506 1310 E0160000 		.word	.LC215
 16507 1314 F8160000 		.word	.LC216
 16508 1318 10170000 		.word	.LC217
 16509 131c 24170000 		.word	.LC218
 16510 1320 3C170000 		.word	.LC219
 16511 1324 40170000 		.word	.LC220
 16512              	.L636:
2167:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16513              		.loc 1 2167 0
 16514 1328 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16515 132c D7F88810 		ldr	r1, [r7, #136]
 16516 1330 1346     		mov	r3, r2
 16517 1332 5B00     		lsls	r3, r3, #1
 16518 1334 1344     		add	r3, r3, r2
 16519 1336 9B00     		lsls	r3, r3, #2
 16520 1338 D7F89420 		ldr	r2, [r7, #148]
 16521 133c 1344     		add	r3, r3, r2
 16522 133e 6833     		adds	r3, r3, #104
 16523 1340 9B00     		lsls	r3, r3, #2
 16524 1342 0B44     		add	r3, r3, r1
 16525 1344 5B68     		ldr	r3, [r3, #4]	@ float
 16526 1346 1846     		mov	r0, r3
 16527 1348 FFF7FEFF 		bl	__aeabi_f2d
 16528 134c 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 369


 16529 134e 0C46     		mov	r4, r1
 16530 1350 07F11800 		add	r0, r7, #24
 16531 1354 1A46     		mov	r2, r3
 16532 1356 2346     		mov	r3, r4
 16533 1358 CA49     		ldr	r1, .L696
 16534 135a FFF7FEFF 		bl	sprintf
2168:..\src/command_processing.c ****                 strcat(info_string, str);
 16535              		.loc 1 2168 0
 16536 135e 07F11803 		add	r3, r7, #24
 16537 1362 1946     		mov	r1, r3
 16538 1364 7869     		ldr	r0, [r7, #20]
 16539 1366 FFF7FEFF 		bl	strcat
2169:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 16540              		.loc 1 2169 0
 16541 136a D7F89430 		ldr	r3, [r7, #148]
 16542 136e 022B     		cmp	r3, #2
 16543 1370 0BD0     		beq	.L635
2170:..\src/command_processing.c ****                     strcat(info_string, ", ");
 16544              		.loc 1 2170 0
 16545 1372 7869     		ldr	r0, [r7, #20]
 16546 1374 FFF7FEFF 		bl	strlen
 16547 1378 0346     		mov	r3, r0
 16548 137a 1A46     		mov	r2, r3
 16549 137c 7B69     		ldr	r3, [r7, #20]
 16550 137e 1344     		add	r3, r3, r2
 16551 1380 C14A     		ldr	r2, .L696+4
 16552 1382 1188     		ldrh	r1, [r2]	@ unaligned
 16553 1384 9278     		ldrb	r2, [r2, #2]
 16554 1386 1980     		strh	r1, [r3]	@ unaligned
 16555 1388 9A70     		strb	r2, [r3, #2]
 16556              	.L635:
2166:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16557              		.loc 1 2166 0 discriminator 2
 16558 138a D7F89430 		ldr	r3, [r7, #148]
 16559 138e 0133     		adds	r3, r3, #1
 16560 1390 C7F89430 		str	r3, [r7, #148]
 16561              	.L634:
2166:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16562              		.loc 1 2166 0 is_stmt 0 discriminator 1
 16563 1394 D7F89430 		ldr	r3, [r7, #148]
 16564 1398 022B     		cmp	r3, #2
 16565 139a C5DD     		ble	.L636
2171:..\src/command_processing.c ****                 }
2172:..\src/command_processing.c ****             }
2173:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16566              		.loc 1 2173 0 is_stmt 1
 16567 139c 7869     		ldr	r0, [r7, #20]
 16568 139e FFF7FEFF 		bl	strlen
 16569 13a2 0346     		mov	r3, r0
 16570 13a4 1A46     		mov	r2, r3
 16571 13a6 7B69     		ldr	r3, [r7, #20]
 16572 13a8 1344     		add	r3, r3, r2
 16573 13aa B84A     		ldr	r2, .L696+8
 16574 13ac 1188     		ldrh	r1, [r2]	@ unaligned
 16575 13ae 9278     		ldrb	r2, [r2, #2]
 16576 13b0 1980     		strh	r1, [r3]	@ unaligned
 16577 13b2 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 370


2174:..\src/command_processing.c ****             
2175:..\src/command_processing.c ****     		sprintf(str, "Current lookup table: %f, %f, %f, %f, %f, %f\r\n", 
2176:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16578              		.loc 1 2176 0
 16579 13b4 D7F88030 		ldr	r3, [r7, #128]
 16580 13b8 5B6C     		ldr	r3, [r3, #68]	@ float
2175:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16581              		.loc 1 2175 0
 16582 13ba 1846     		mov	r0, r3
 16583 13bc FFF7FEFF 		bl	__aeabi_f2d
 16584 13c0 C7E90201 		strd	r0, [r7, #8]
 16585              		.loc 1 2176 0
 16586 13c4 D7F88030 		ldr	r3, [r7, #128]
 16587 13c8 9B6C     		ldr	r3, [r3, #72]	@ float
2175:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16588              		.loc 1 2175 0
 16589 13ca 1846     		mov	r0, r3
 16590 13cc FFF7FEFF 		bl	__aeabi_f2d
 16591 13d0 0446     		mov	r4, r0
 16592 13d2 0D46     		mov	r5, r1
 16593              		.loc 1 2176 0
 16594 13d4 D7F88030 		ldr	r3, [r7, #128]
 16595 13d8 DB6C     		ldr	r3, [r3, #76]	@ float
2175:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16596              		.loc 1 2175 0
 16597 13da 1846     		mov	r0, r3
 16598 13dc FFF7FEFF 		bl	__aeabi_f2d
 16599 13e0 8046     		mov	r8, r0
 16600 13e2 8946     		mov	r9, r1
2177:..\src/command_processing.c ****                 MOT->curr_lookup[3], MOT->curr_lookup[4], MOT->curr_lookup[5]);
 16601              		.loc 1 2177 0
 16602 13e4 D7F88030 		ldr	r3, [r7, #128]
 16603 13e8 1B6D     		ldr	r3, [r3, #80]	@ float
2175:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16604              		.loc 1 2175 0
 16605 13ea 1846     		mov	r0, r3
 16606 13ec FFF7FEFF 		bl	__aeabi_f2d
 16607 13f0 8246     		mov	r10, r0
 16608 13f2 8B46     		mov	fp, r1
 16609              		.loc 1 2177 0
 16610 13f4 D7F88030 		ldr	r3, [r7, #128]
 16611 13f8 5B6D     		ldr	r3, [r3, #84]	@ float
2175:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16612              		.loc 1 2175 0
 16613 13fa 1846     		mov	r0, r3
 16614 13fc FFF7FEFF 		bl	__aeabi_f2d
 16615 1400 C7E90001 		strd	r0, [r7]
 16616              		.loc 1 2177 0
 16617 1404 D7F88030 		ldr	r3, [r7, #128]
 16618 1408 9B6D     		ldr	r3, [r3, #88]	@ float
2175:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16619              		.loc 1 2175 0
 16620 140a 1846     		mov	r0, r3
 16621 140c FFF7FEFF 		bl	__aeabi_f2d
 16622 1410 0246     		mov	r2, r0
 16623 1412 0B46     		mov	r3, r1
 16624 1414 07F11800 		add	r0, r7, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 371


 16625 1418 CDE90823 		strd	r2, [sp, #32]
 16626 141c D7E90012 		ldrd	r1, [r7]
 16627 1420 CDE90612 		strd	r1, [sp, #24]
 16628 1424 CDE904AB 		strd	r10, [sp, #16]
 16629 1428 CDE90289 		strd	r8, [sp, #8]
 16630 142c CDE90045 		strd	r4, [sp]
 16631 1430 D7E90223 		ldrd	r2, [r7, #8]
 16632 1434 9649     		ldr	r1, .L696+12
 16633 1436 FFF7FEFF 		bl	sprintf
2178:..\src/command_processing.c **** 		    strcat(info_string, str);       
 16634              		.loc 1 2178 0
 16635 143a 07F11803 		add	r3, r7, #24
 16636 143e 1946     		mov	r1, r3
 16637 1440 7869     		ldr	r0, [r7, #20]
 16638 1442 FFF7FEFF 		bl	strcat
2179:..\src/command_processing.c **** 
2180:..\src/command_processing.c ****             sprintf(str, "Position limit active: %d", (int)MOT->pos_lim_flag);
 16639              		.loc 1 2180 0
 16640 1446 D7F88030 		ldr	r3, [r7, #128]
 16641 144a 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 16642 144e 1A46     		mov	r2, r3
 16643 1450 07F11803 		add	r3, r7, #24
 16644 1454 8F49     		ldr	r1, .L696+16
 16645 1456 1846     		mov	r0, r3
 16646 1458 FFF7FEFF 		bl	sprintf
2181:..\src/command_processing.c ****             strcat(info_string, str);
 16647              		.loc 1 2181 0
 16648 145c 07F11803 		add	r3, r7, #24
 16649 1460 1946     		mov	r1, r3
 16650 1462 7869     		ldr	r0, [r7, #20]
 16651 1464 FFF7FEFF 		bl	strcat
2182:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16652              		.loc 1 2182 0
 16653 1468 7869     		ldr	r0, [r7, #20]
 16654 146a FFF7FEFF 		bl	strlen
 16655 146e 0346     		mov	r3, r0
 16656 1470 1A46     		mov	r2, r3
 16657 1472 7B69     		ldr	r3, [r7, #20]
 16658 1474 1344     		add	r3, r3, r2
 16659 1476 854A     		ldr	r2, .L696+8
 16660 1478 1188     		ldrh	r1, [r2]	@ unaligned
 16661 147a 9278     		ldrb	r2, [r2, #2]
 16662 147c 1980     		strh	r1, [r3]	@ unaligned
 16663 147e 9A70     		strb	r2, [r3, #2]
2183:..\src/command_processing.c **** 
2184:..\src/command_processing.c ****             sprintf(str, "Position limit motor: inf -> %ld  ", (int32)MOT->pos_lim_inf >> MEM_P->en
 16664              		.loc 1 2184 0
 16665 1480 D7F88030 		ldr	r3, [r7, #128]
 16666 1484 596B     		ldr	r1, [r3, #52]
 16667 1486 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16668 148a D7F88800 		ldr	r0, [r7, #136]
 16669 148e 1346     		mov	r3, r2
 16670 1490 5B00     		lsls	r3, r3, #1
 16671 1492 1344     		add	r3, r3, r2
 16672 1494 1B01     		lsls	r3, r3, #4
 16673 1496 0344     		add	r3, r3, r0
 16674 1498 03F29513 		addw	r3, r3, #405
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 372


 16675 149c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16676 149e 41FA03F2 		asr	r2, r1, r3
 16677 14a2 07F11803 		add	r3, r7, #24
 16678 14a6 7C49     		ldr	r1, .L696+20
 16679 14a8 1846     		mov	r0, r3
 16680 14aa FFF7FEFF 		bl	sprintf
2185:..\src/command_processing.c ****             strcat(info_string, str);
 16681              		.loc 1 2185 0
 16682 14ae 07F11803 		add	r3, r7, #24
 16683 14b2 1946     		mov	r1, r3
 16684 14b4 7869     		ldr	r0, [r7, #20]
 16685 14b6 FFF7FEFF 		bl	strcat
2186:..\src/command_processing.c ****             sprintf(str, "sup -> %ld\r\n", (int32)MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]);
 16686              		.loc 1 2186 0
 16687 14ba D7F88030 		ldr	r3, [r7, #128]
 16688 14be 996B     		ldr	r1, [r3, #56]
 16689 14c0 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16690 14c4 D7F88800 		ldr	r0, [r7, #136]
 16691 14c8 1346     		mov	r3, r2
 16692 14ca 5B00     		lsls	r3, r3, #1
 16693 14cc 1344     		add	r3, r3, r2
 16694 14ce 1B01     		lsls	r3, r3, #4
 16695 14d0 0344     		add	r3, r3, r0
 16696 14d2 03F29513 		addw	r3, r3, #405
 16697 14d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16698 14d8 41FA03F2 		asr	r2, r1, r3
 16699 14dc 07F11803 		add	r3, r7, #24
 16700 14e0 6E49     		ldr	r1, .L696+24
 16701 14e2 1846     		mov	r0, r3
 16702 14e4 FFF7FEFF 		bl	sprintf
2187:..\src/command_processing.c ****             strcat(info_string, str);
 16703              		.loc 1 2187 0
 16704 14e8 07F11803 		add	r3, r7, #24
 16705 14ec 1946     		mov	r1, r3
 16706 14ee 7869     		ldr	r0, [r7, #20]
 16707 14f0 FFF7FEFF 		bl	strcat
2188:..\src/command_processing.c **** 
2189:..\src/command_processing.c ****             sprintf(str, "Max step pos and neg: %d %d", (int)MOT->max_step_pos, (int)MOT->max_step_
 16708              		.loc 1 2189 0
 16709 14f4 D7F88030 		ldr	r3, [r7, #128]
 16710 14f8 1A6C     		ldr	r2, [r3, #64]
 16711 14fa D7F88030 		ldr	r3, [r7, #128]
 16712 14fe DB6B     		ldr	r3, [r3, #60]
 16713 1500 07F11800 		add	r0, r7, #24
 16714 1504 6649     		ldr	r1, .L696+28
 16715 1506 FFF7FEFF 		bl	sprintf
2190:..\src/command_processing.c ****             strcat(info_string, str);
 16716              		.loc 1 2190 0
 16717 150a 07F11803 		add	r3, r7, #24
 16718 150e 1946     		mov	r1, r3
 16719 1510 7869     		ldr	r0, [r7, #20]
 16720 1512 FFF7FEFF 		bl	strcat
2191:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16721              		.loc 1 2191 0
 16722 1516 7869     		ldr	r0, [r7, #20]
 16723 1518 FFF7FEFF 		bl	strlen
 16724 151c 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 373


 16725 151e 1A46     		mov	r2, r3
 16726 1520 7B69     		ldr	r3, [r7, #20]
 16727 1522 1344     		add	r3, r3, r2
 16728 1524 594A     		ldr	r2, .L696+8
 16729 1526 1188     		ldrh	r1, [r2]	@ unaligned
 16730 1528 9278     		ldrb	r2, [r2, #2]
 16731 152a 1980     		strh	r1, [r3]	@ unaligned
 16732 152c 9A70     		strb	r2, [r3, #2]
2192:..\src/command_processing.c **** 
2193:..\src/command_processing.c ****             sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 16733              		.loc 1 2193 0
 16734 152e D7F88030 		ldr	r3, [r7, #128]
 16735 1532 B3F95C30 		ldrsh	r3, [r3, #92]
 16736 1536 1A46     		mov	r2, r3
 16737 1538 07F11803 		add	r3, r7, #24
 16738 153c 5949     		ldr	r1, .L696+32
 16739 153e 1846     		mov	r0, r3
 16740 1540 FFF7FEFF 		bl	sprintf
2194:..\src/command_processing.c ****             strcat(info_string, str);
 16741              		.loc 1 2194 0
 16742 1544 07F11803 		add	r3, r7, #24
 16743 1548 1946     		mov	r1, r3
 16744 154a 7869     		ldr	r0, [r7, #20]
 16745 154c FFF7FEFF 		bl	strcat
2195:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
2196:..\src/command_processing.c ****             sprintf(str, "Motor board associated encoder line: %d\r\n", (int)MOT->encoder_line);
 16746              		.loc 1 2196 0
 16747 1550 D7F88030 		ldr	r3, [r7, #128]
 16748 1554 93F86030 		ldrb	r3, [r3, #96]	@ zero_extendqisi2
 16749 1558 1A46     		mov	r2, r3
 16750 155a 07F11803 		add	r3, r7, #24
 16751 155e 5249     		ldr	r1, .L696+36
 16752 1560 1846     		mov	r0, r3
 16753 1562 FFF7FEFF 		bl	sprintf
2197:..\src/command_processing.c ****             strcat(info_string, str);
 16754              		.loc 1 2197 0
 16755 1566 07F11803 		add	r3, r7, #24
 16756 156a 1946     		mov	r1, r3
 16757 156c 7869     		ldr	r0, [r7, #20]
 16758 156e FFF7FEFF 		bl	strcat
2198:..\src/command_processing.c ****             switch(MOT->motor_driver_type) {
 16759              		.loc 1 2198 0
 16760 1572 D7F88030 		ldr	r3, [r7, #128]
 16761 1576 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 16762 157a 012B     		cmp	r3, #1
 16763 157c 21D0     		beq	.L638
 16764 157e 022B     		cmp	r3, #2
 16765 1580 3CD0     		beq	.L639
 16766 1582 002B     		cmp	r3, #0
 16767 1584 00D0     		beq	.L640
2199:..\src/command_processing.c ****                 case DRIVER_MC33887:
2200:..\src/command_processing.c ****                     strcat(info_string, "Driver type: MC33887 (Standard)\r\n");
2201:..\src/command_processing.c ****                     break;
2202:..\src/command_processing.c ****                 case DRIVER_VNH5019:
2203:..\src/command_processing.c ****                     strcat(info_string, "Driver type: VNH5019 (High power)\r\n");
2204:..\src/command_processing.c ****                     break;
2205:..\src/command_processing.c ****                 case DRIVER_BRUSHLESS:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 374


2206:..\src/command_processing.c ****                     strcat(info_string, "Driver type: ESC (Brushless)\r\n");
2207:..\src/command_processing.c ****                     break;
2208:..\src/command_processing.c ****                 default:
2209:..\src/command_processing.c ****                     break;
 16768              		.loc 1 2209 0
 16769 1586 52E0     		b	.L642
 16770              	.L640:
2200:..\src/command_processing.c ****                     break;
 16771              		.loc 1 2200 0
 16772 1588 7869     		ldr	r0, [r7, #20]
 16773 158a FFF7FEFF 		bl	strlen
 16774 158e 0346     		mov	r3, r0
 16775 1590 1A46     		mov	r2, r3
 16776 1592 7B69     		ldr	r3, [r7, #20]
 16777 1594 1344     		add	r3, r3, r2
 16778 1596 454A     		ldr	r2, .L696+40
 16779 1598 1446     		mov	r4, r2
 16780 159a 9E46     		mov	lr, r3
 16781 159c 04F1200C 		add	ip, r4, #32
 16782              	.L641:
 16783 15a0 7546     		mov	r5, lr
 16784 15a2 2646     		mov	r6, r4
 16785 15a4 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16786 15a6 2860     		str	r0, [r5]	@ unaligned
 16787 15a8 6960     		str	r1, [r5, #4]	@ unaligned
 16788 15aa AA60     		str	r2, [r5, #8]	@ unaligned
 16789 15ac EB60     		str	r3, [r5, #12]	@ unaligned
 16790 15ae 1034     		adds	r4, r4, #16
 16791 15b0 0EF1100E 		add	lr, lr, #16
 16792 15b4 6445     		cmp	r4, ip
 16793 15b6 F3D1     		bne	.L641
 16794 15b8 7246     		mov	r2, lr
 16795 15ba 2346     		mov	r3, r4
 16796 15bc 1B88     		ldrh	r3, [r3]	@ unaligned
 16797 15be 1380     		strh	r3, [r2]	@ unaligned
2201:..\src/command_processing.c ****                 case DRIVER_VNH5019:
 16798              		.loc 1 2201 0
 16799 15c0 35E0     		b	.L642
 16800              	.L638:
2203:..\src/command_processing.c ****                     break;
 16801              		.loc 1 2203 0
 16802 15c2 7869     		ldr	r0, [r7, #20]
 16803 15c4 FFF7FEFF 		bl	strlen
 16804 15c8 0346     		mov	r3, r0
 16805 15ca 1A46     		mov	r2, r3
 16806 15cc 7B69     		ldr	r3, [r7, #20]
 16807 15ce 1344     		add	r3, r3, r2
 16808 15d0 374A     		ldr	r2, .L696+44
 16809 15d2 1446     		mov	r4, r2
 16810 15d4 9E46     		mov	lr, r3
 16811 15d6 04F1200C 		add	ip, r4, #32
 16812              	.L643:
 16813 15da 7546     		mov	r5, lr
 16814 15dc 2646     		mov	r6, r4
 16815 15de 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16816 15e0 2860     		str	r0, [r5]	@ unaligned
 16817 15e2 6960     		str	r1, [r5, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 375


 16818 15e4 AA60     		str	r2, [r5, #8]	@ unaligned
 16819 15e6 EB60     		str	r3, [r5, #12]	@ unaligned
 16820 15e8 1034     		adds	r4, r4, #16
 16821 15ea 0EF1100E 		add	lr, lr, #16
 16822 15ee 6445     		cmp	r4, ip
 16823 15f0 F3D1     		bne	.L643
 16824 15f2 7346     		mov	r3, lr
 16825 15f4 2246     		mov	r2, r4
 16826 15f6 1068     		ldr	r0, [r2]	@ unaligned
 16827 15f8 1860     		str	r0, [r3]	@ unaligned
2204:..\src/command_processing.c ****                 case DRIVER_BRUSHLESS:
 16828              		.loc 1 2204 0
 16829 15fa 18E0     		b	.L642
 16830              	.L639:
2206:..\src/command_processing.c ****                     break;
 16831              		.loc 1 2206 0
 16832 15fc 7869     		ldr	r0, [r7, #20]
 16833 15fe FFF7FEFF 		bl	strlen
 16834 1602 0346     		mov	r3, r0
 16835 1604 1A46     		mov	r2, r3
 16836 1606 7B69     		ldr	r3, [r7, #20]
 16837 1608 1344     		add	r3, r3, r2
 16838 160a 2A4A     		ldr	r2, .L696+48
 16839 160c 1D46     		mov	r5, r3
 16840 160e 1446     		mov	r4, r2
 16841 1610 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16842 1612 2860     		str	r0, [r5]	@ unaligned
 16843 1614 6960     		str	r1, [r5, #4]	@ unaligned
 16844 1616 AA60     		str	r2, [r5, #8]	@ unaligned
 16845 1618 EB60     		str	r3, [r5, #12]	@ unaligned
 16846 161a 07CC     		ldmia	r4!, {r0, r1, r2}
 16847 161c 2861     		str	r0, [r5, #16]	@ unaligned
 16848 161e 6961     		str	r1, [r5, #20]	@ unaligned
 16849 1620 AA61     		str	r2, [r5, #24]	@ unaligned
 16850 1622 2388     		ldrh	r3, [r4]	@ unaligned
 16851 1624 A278     		ldrb	r2, [r4, #2]
 16852 1626 AB83     		strh	r3, [r5, #28]	@ unaligned
 16853 1628 1346     		mov	r3, r2
 16854 162a AB77     		strb	r3, [r5, #30]
2207:..\src/command_processing.c ****                 default:
 16855              		.loc 1 2207 0
 16856 162c 00BF     		nop
 16857              	.L642:
2210:..\src/command_processing.c ****             }
2211:..\src/command_processing.c ****             sprintf(str, "PWM rate limiter value: %d\r\n", (int)MOT->pwm_rate_limiter);
 16858              		.loc 1 2211 0
 16859 162e D7F88030 		ldr	r3, [r7, #128]
 16860 1632 93F86130 		ldrb	r3, [r3, #97]	@ zero_extendqisi2
 16861 1636 1A46     		mov	r2, r3
 16862 1638 07F11803 		add	r3, r7, #24
 16863 163c 1E49     		ldr	r1, .L696+52
 16864 163e 1846     		mov	r0, r3
 16865 1640 FFF7FEFF 		bl	sprintf
2212:..\src/command_processing.c ****             strcat(info_string, str);
 16866              		.loc 1 2212 0
 16867 1644 07F11803 		add	r3, r7, #24
 16868 1648 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 376


 16869 164a 7869     		ldr	r0, [r7, #20]
 16870 164c FFF7FEFF 		bl	strcat
2213:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag)
 16871              		.loc 1 2213 0
 16872 1650 D7F88030 		ldr	r3, [r7, #128]
 16873 1654 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 16874 1658 002B     		cmp	r3, #0
 16875 165a 31D0     		beq	.L644
2214:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: YES\r\n");
 16876              		.loc 1 2214 0
 16877 165c 7869     		ldr	r0, [r7, #20]
 16878 165e FFF7FEFF 		bl	strlen
 16879 1662 0346     		mov	r3, r0
 16880 1664 1A46     		mov	r2, r3
 16881 1666 7B69     		ldr	r3, [r7, #20]
 16882 1668 1344     		add	r3, r3, r2
 16883 166a 144A     		ldr	r2, .L696+56
 16884 166c 1D46     		mov	r5, r3
 16885 166e 1446     		mov	r4, r2
 16886 1670 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16887 1672 2860     		str	r0, [r5]	@ unaligned
 16888 1674 6960     		str	r1, [r5, #4]	@ unaligned
 16889 1676 AA60     		str	r2, [r5, #8]	@ unaligned
 16890 1678 EB60     		str	r3, [r5, #12]	@ unaligned
 16891 167a 07CC     		ldmia	r4!, {r0, r1, r2}
 16892 167c 2861     		str	r0, [r5, #16]	@ unaligned
 16893 167e 6961     		str	r1, [r5, #20]	@ unaligned
 16894 1680 AA61     		str	r2, [r5, #24]	@ unaligned
 16895 1682 34E0     		b	.L645
 16896              	.L697:
 16897              		.align	2
 16898              	.L696:
 16899 1684 5C170000 		.word	.LC221
 16900 1688 94130000 		.word	.LC184
 16901 168c 5C110000 		.word	.LC152
 16902 1690 60170000 		.word	.LC222
 16903 1694 90170000 		.word	.LC223
 16904 1698 AC170000 		.word	.LC224
 16905 169c D0170000 		.word	.LC225
 16906 16a0 E0170000 		.word	.LC226
 16907 16a4 FC170000 		.word	.LC227
 16908 16a8 10180000 		.word	.LC228
 16909 16ac 3C180000 		.word	.LC229
 16910 16b0 60180000 		.word	.LC230
 16911 16b4 84180000 		.word	.LC231
 16912 16b8 A4180000 		.word	.LC232
 16913 16bc C4180000 		.word	.LC233
 16914              	.L644:
2215:..\src/command_processing.c ****             else
2216:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: NO\r\n");
 16915              		.loc 1 2216 0
 16916 16c0 7869     		ldr	r0, [r7, #20]
 16917 16c2 FFF7FEFF 		bl	strlen
 16918 16c6 0346     		mov	r3, r0
 16919 16c8 1A46     		mov	r2, r3
 16920 16ca 7B69     		ldr	r3, [r7, #20]
 16921 16cc 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 377


 16922 16ce A24A     		ldr	r2, .L698
 16923 16d0 1D46     		mov	r5, r3
 16924 16d2 1446     		mov	r4, r2
 16925 16d4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16926 16d6 2860     		str	r0, [r5]	@ unaligned
 16927 16d8 6960     		str	r1, [r5, #4]	@ unaligned
 16928 16da AA60     		str	r2, [r5, #8]	@ unaligned
 16929 16dc EB60     		str	r3, [r5, #12]	@ unaligned
 16930 16de 03CC     		ldmia	r4!, {r0, r1}
 16931 16e0 2861     		str	r0, [r5, #16]	@ unaligned
 16932 16e2 6961     		str	r1, [r5, #20]	@ unaligned
 16933 16e4 2388     		ldrh	r3, [r4]	@ unaligned
 16934 16e6 A278     		ldrb	r2, [r4, #2]
 16935 16e8 2B83     		strh	r3, [r5, #24]	@ unaligned
 16936 16ea 1346     		mov	r3, r2
 16937 16ec AB76     		strb	r3, [r5, #26]
 16938              	.L645:
2217:..\src/command_processing.c **** #endif                
2218:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16939              		.loc 1 2218 0 discriminator 2
 16940 16ee 7869     		ldr	r0, [r7, #20]
 16941 16f0 FFF7FEFF 		bl	strlen
 16942 16f4 0346     		mov	r3, r0
 16943 16f6 1A46     		mov	r2, r3
 16944 16f8 7B69     		ldr	r3, [r7, #20]
 16945 16fa 1344     		add	r3, r3, r2
 16946 16fc 974A     		ldr	r2, .L698+4
 16947 16fe 1188     		ldrh	r1, [r2]	@ unaligned
 16948 1700 9278     		ldrb	r2, [r2, #2]
 16949 1702 1980     		strh	r1, [r3]	@ unaligned
 16950 1704 9A70     		strb	r2, [r3, #2]
 16951              	.LBE22:
1945:..\src/command_processing.c ****             
 16952              		.loc 1 1945 0 discriminator 2
 16953 1706 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 16954 170a 0133     		adds	r3, r3, #1
 16955 170c 87F89330 		strb	r3, [r7, #147]
 16956              	.L580:
1945:..\src/command_processing.c ****             
 16957              		.loc 1 1945 0 is_stmt 0 discriminator 1
 16958 1710 D7F88830 		ldr	r3, [r7, #136]
 16959 1714 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 16960 1718 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 16961 171c 9A42     		cmp	r2, r3
 16962 171e 7EF625AE 		bls	.L646
 16963              	.LBE21:
2219:..\src/command_processing.c ****         }
2220:..\src/command_processing.c ****       
2221:..\src/command_processing.c ****         strcat(info_string, "EMG CONFIGURATION\r\n");
 16964              		.loc 1 2221 0 is_stmt 1
 16965 1722 7869     		ldr	r0, [r7, #20]
 16966 1724 FFF7FEFF 		bl	strlen
 16967 1728 0346     		mov	r3, r0
 16968 172a 1A46     		mov	r2, r3
 16969 172c 7B69     		ldr	r3, [r7, #20]
 16970 172e 1344     		add	r3, r3, r2
 16971 1730 8B4A     		ldr	r2, .L698+8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 378


 16972 1732 1D46     		mov	r5, r3
 16973 1734 1446     		mov	r4, r2
 16974 1736 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16975 1738 2860     		str	r0, [r5]	@ unaligned
 16976 173a 6960     		str	r1, [r5, #4]	@ unaligned
 16977 173c AA60     		str	r2, [r5, #8]	@ unaligned
 16978 173e EB60     		str	r3, [r5, #12]	@ unaligned
 16979 1740 2068     		ldr	r0, [r4]	@ unaligned
 16980 1742 2861     		str	r0, [r5, #16]	@ unaligned
2222:..\src/command_processing.c ****         sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.e
 16981              		.loc 1 2222 0
 16982 1744 D7F88830 		ldr	r3, [r7, #136]
 16983 1748 B3F8F031 		ldrh	r3, [r3, #496]
 16984 174c 1A46     		mov	r2, r3
 16985 174e D7F88830 		ldr	r3, [r7, #136]
 16986 1752 B3F8F231 		ldrh	r3, [r3, #498]
 16987 1756 07F11800 		add	r0, r7, #24
 16988 175a 8249     		ldr	r1, .L698+12
 16989 175c FFF7FEFF 		bl	sprintf
2223:..\src/command_processing.c ****         strcat(info_string, str);
 16990              		.loc 1 2223 0
 16991 1760 07F11803 		add	r3, r7, #24
 16992 1764 1946     		mov	r1, r3
 16993 1766 7869     		ldr	r0, [r7, #20]
 16994 1768 FFF7FEFF 		bl	strcat
2224:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16995              		.loc 1 2224 0
 16996 176c 7869     		ldr	r0, [r7, #20]
 16997 176e FFF7FEFF 		bl	strlen
 16998 1772 0346     		mov	r3, r0
 16999 1774 1A46     		mov	r2, r3
 17000 1776 7B69     		ldr	r3, [r7, #20]
 17001 1778 1344     		add	r3, r3, r2
 17002 177a 784A     		ldr	r2, .L698+4
 17003 177c 1188     		ldrh	r1, [r2]	@ unaligned
 17004 177e 9278     		ldrb	r2, [r2, #2]
 17005 1780 1980     		strh	r1, [r3]	@ unaligned
 17006 1782 9A70     		strb	r2, [r3, #2]
2225:..\src/command_processing.c **** 
2226:..\src/command_processing.c ****         sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg
 17007              		.loc 1 2226 0
 17008 1784 D7F88830 		ldr	r3, [r7, #136]
 17009 1788 D3F8F421 		ldr	r2, [r3, #500]
 17010 178c D7F88830 		ldr	r3, [r7, #136]
 17011 1790 D3F8F831 		ldr	r3, [r3, #504]
 17012 1794 07F11800 		add	r0, r7, #24
 17013 1798 7349     		ldr	r1, .L698+16
 17014 179a FFF7FEFF 		bl	sprintf
2227:..\src/command_processing.c ****         strcat(info_string, str);
 17015              		.loc 1 2227 0
 17016 179e 07F11803 		add	r3, r7, #24
 17017 17a2 1946     		mov	r1, r3
 17018 17a4 7869     		ldr	r0, [r7, #20]
 17019 17a6 FFF7FEFF 		bl	strcat
2228:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17020              		.loc 1 2228 0
 17021 17aa 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 379


 17022 17ac FFF7FEFF 		bl	strlen
 17023 17b0 0346     		mov	r3, r0
 17024 17b2 1A46     		mov	r2, r3
 17025 17b4 7B69     		ldr	r3, [r7, #20]
 17026 17b6 1344     		add	r3, r3, r2
 17027 17b8 684A     		ldr	r2, .L698+4
 17028 17ba 1188     		ldrh	r1, [r2]	@ unaligned
 17029 17bc 9278     		ldrb	r2, [r2, #2]
 17030 17be 1980     		strh	r1, [r3]	@ unaligned
 17031 17c0 9A70     		strb	r2, [r3, #2]
2229:..\src/command_processing.c **** 
2230:..\src/command_processing.c ****         if (MEM_P->emg.switch_emg)
 17032              		.loc 1 2230 0
 17033 17c2 D7F88830 		ldr	r3, [r7, #136]
 17034 17c6 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 17035 17ca 002B     		cmp	r3, #0
 17036 17cc 13D0     		beq	.L647
2231:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: YES\r\n");
 17037              		.loc 1 2231 0
 17038 17ce 7869     		ldr	r0, [r7, #20]
 17039 17d0 FFF7FEFF 		bl	strlen
 17040 17d4 0346     		mov	r3, r0
 17041 17d6 1A46     		mov	r2, r3
 17042 17d8 7B69     		ldr	r3, [r7, #20]
 17043 17da 1344     		add	r3, r3, r2
 17044 17dc 634A     		ldr	r2, .L698+20
 17045 17de 1D46     		mov	r5, r3
 17046 17e0 1446     		mov	r4, r2
 17047 17e2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17048 17e4 2860     		str	r0, [r5]	@ unaligned
 17049 17e6 6960     		str	r1, [r5, #4]	@ unaligned
 17050 17e8 AA60     		str	r2, [r5, #8]	@ unaligned
 17051 17ea EB60     		str	r3, [r5, #12]	@ unaligned
 17052 17ec 2068     		ldr	r0, [r4]	@ unaligned
 17053 17ee 2861     		str	r0, [r5, #16]	@ unaligned
 17054 17f0 2379     		ldrb	r3, [r4, #4]
 17055 17f2 2B75     		strb	r3, [r5, #20]
 17056 17f4 10E0     		b	.L648
 17057              	.L647:
2232:..\src/command_processing.c ****         else
2233:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: NO\r\n");
 17058              		.loc 1 2233 0
 17059 17f6 7869     		ldr	r0, [r7, #20]
 17060 17f8 FFF7FEFF 		bl	strlen
 17061 17fc 0346     		mov	r3, r0
 17062 17fe 1A46     		mov	r2, r3
 17063 1800 7B69     		ldr	r3, [r7, #20]
 17064 1802 1344     		add	r3, r3, r2
 17065 1804 5A4A     		ldr	r2, .L698+24
 17066 1806 1D46     		mov	r5, r3
 17067 1808 1446     		mov	r4, r2
 17068 180a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17069 180c 2860     		str	r0, [r5]	@ unaligned
 17070 180e 6960     		str	r1, [r5, #4]	@ unaligned
 17071 1810 AA60     		str	r2, [r5, #8]	@ unaligned
 17072 1812 EB60     		str	r3, [r5, #12]	@ unaligned
 17073 1814 2068     		ldr	r0, [r4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 380


 17074 1816 2861     		str	r0, [r5, #16]	@ unaligned
 17075              	.L648:
2234:..\src/command_processing.c ****             
2235:..\src/command_processing.c ****         if (MEM_P->emg.emg_calibration_flag)
 17076              		.loc 1 2235 0
 17077 1818 D7F88830 		ldr	r3, [r7, #136]
 17078 181c 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 17079 1820 002B     		cmp	r3, #0
 17080 1822 17D0     		beq	.L649
2236:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: YES\r\n");
 17081              		.loc 1 2236 0
 17082 1824 7869     		ldr	r0, [r7, #20]
 17083 1826 FFF7FEFF 		bl	strlen
 17084 182a 0346     		mov	r3, r0
 17085 182c 1A46     		mov	r2, r3
 17086 182e 7B69     		ldr	r3, [r7, #20]
 17087 1830 1344     		add	r3, r3, r2
 17088 1832 504A     		ldr	r2, .L698+28
 17089 1834 1D46     		mov	r5, r3
 17090 1836 1446     		mov	r4, r2
 17091 1838 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17092 183a 2860     		str	r0, [r5]	@ unaligned
 17093 183c 6960     		str	r1, [r5, #4]	@ unaligned
 17094 183e AA60     		str	r2, [r5, #8]	@ unaligned
 17095 1840 EB60     		str	r3, [r5, #12]	@ unaligned
 17096 1842 03CC     		ldmia	r4!, {r0, r1}
 17097 1844 2861     		str	r0, [r5, #16]	@ unaligned
 17098 1846 6961     		str	r1, [r5, #20]	@ unaligned
 17099 1848 2388     		ldrh	r3, [r4]	@ unaligned
 17100 184a A278     		ldrb	r2, [r4, #2]
 17101 184c 2B83     		strh	r3, [r5, #24]	@ unaligned
 17102 184e 1346     		mov	r3, r2
 17103 1850 AB76     		strb	r3, [r5, #26]
 17104 1852 13E0     		b	.L650
 17105              	.L649:
2237:..\src/command_processing.c ****         else
2238:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: NO\r\n");
 17106              		.loc 1 2238 0
 17107 1854 7869     		ldr	r0, [r7, #20]
 17108 1856 FFF7FEFF 		bl	strlen
 17109 185a 0346     		mov	r3, r0
 17110 185c 1A46     		mov	r2, r3
 17111 185e 7B69     		ldr	r3, [r7, #20]
 17112 1860 1344     		add	r3, r3, r2
 17113 1862 454A     		ldr	r2, .L698+32
 17114 1864 1D46     		mov	r5, r3
 17115 1866 1446     		mov	r4, r2
 17116 1868 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17117 186a 2860     		str	r0, [r5]	@ unaligned
 17118 186c 6960     		str	r1, [r5, #4]	@ unaligned
 17119 186e AA60     		str	r2, [r5, #8]	@ unaligned
 17120 1870 EB60     		str	r3, [r5, #12]	@ unaligned
 17121 1872 03CC     		ldmia	r4!, {r0, r1}
 17122 1874 2861     		str	r0, [r5, #16]	@ unaligned
 17123 1876 6961     		str	r1, [r5, #20]	@ unaligned
 17124 1878 2388     		ldrh	r3, [r4]	@ unaligned
 17125 187a 2B83     		strh	r3, [r5, #24]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 381


 17126              	.L650:
2239:..\src/command_processing.c **** 
2240:..\src/command_processing.c ****         sprintf(str, "EMG max speed: %d %d", (int)MEM_P->emg.emg_speed[0], (int)MEM_P->emg.emg_spee
 17127              		.loc 1 2240 0
 17128 187c D7F88830 		ldr	r3, [r7, #136]
 17129 1880 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 17130 1884 1A46     		mov	r2, r3
 17131 1886 D7F88830 		ldr	r3, [r7, #136]
 17132 188a 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 17133 188e 07F11800 		add	r0, r7, #24
 17134 1892 3A49     		ldr	r1, .L698+36
 17135 1894 FFF7FEFF 		bl	sprintf
2241:..\src/command_processing.c ****         strcat(info_string, str);
 17136              		.loc 1 2241 0
 17137 1898 07F11803 		add	r3, r7, #24
 17138 189c 1946     		mov	r1, r3
 17139 189e 7869     		ldr	r0, [r7, #20]
 17140 18a0 FFF7FEFF 		bl	strcat
2242:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17141              		.loc 1 2242 0
 17142 18a4 7869     		ldr	r0, [r7, #20]
 17143 18a6 FFF7FEFF 		bl	strlen
 17144 18aa 0346     		mov	r3, r0
 17145 18ac 1A46     		mov	r2, r3
 17146 18ae 7B69     		ldr	r3, [r7, #20]
 17147 18b0 1344     		add	r3, r3, r2
 17148 18b2 2A4A     		ldr	r2, .L698+4
 17149 18b4 1188     		ldrh	r1, [r2]	@ unaligned
 17150 18b6 9278     		ldrb	r2, [r2, #2]
 17151 18b8 1980     		strh	r1, [r3]	@ unaligned
 17152 18ba 9A70     		strb	r2, [r3, #2]
2243:..\src/command_processing.c **** 
2244:..\src/command_processing.c ****         if (MEM_P->exp.read_ADC_sensors_port_flag == TRUE){
 17153              		.loc 1 2244 0
 17154 18bc D7F88830 		ldr	r3, [r7, #136]
 17155 18c0 93F82732 		ldrb	r3, [r3, #551]	@ zero_extendqisi2
 17156 18c4 012B     		cmp	r3, #1
 17157 18c6 40F08A80 		bne	.L651
2245:..\src/command_processing.c ****             strcat(info_string, "Additional ADC sensors value:\r\n");
 17158              		.loc 1 2245 0
 17159 18ca 7869     		ldr	r0, [r7, #20]
 17160 18cc FFF7FEFF 		bl	strlen
 17161 18d0 0346     		mov	r3, r0
 17162 18d2 1A46     		mov	r2, r3
 17163 18d4 7B69     		ldr	r3, [r7, #20]
 17164 18d6 1344     		add	r3, r3, r2
 17165 18d8 294A     		ldr	r2, .L698+40
 17166 18da 1C46     		mov	r4, r3
 17167 18dc 1546     		mov	r5, r2
 17168 18de 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17169 18e0 2060     		str	r0, [r4]	@ unaligned
 17170 18e2 6160     		str	r1, [r4, #4]	@ unaligned
 17171 18e4 A260     		str	r2, [r4, #8]	@ unaligned
 17172 18e6 E360     		str	r3, [r4, #12]	@ unaligned
 17173 18e8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17174 18ea 2061     		str	r0, [r4, #16]	@ unaligned
 17175 18ec 6161     		str	r1, [r4, #20]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 382


 17176 18ee A261     		str	r2, [r4, #24]	@ unaligned
 17177 18f0 E361     		str	r3, [r4, #28]	@ unaligned
2246:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_ADDITIONAL_EMGS; ++i) {
 17178              		.loc 1 2246 0
 17179 18f2 0023     		movs	r3, #0
 17180 18f4 C7F89430 		str	r3, [r7, #148]
 17181 18f8 25E0     		b	.L652
 17182              	.L653:
2247:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 17183              		.loc 1 2247 0 discriminator 3
 17184 18fa D7F89430 		ldr	r3, [r7, #148]
 17185 18fe 591C     		adds	r1, r3, #1
 17186 1900 204A     		ldr	r2, .L698+44
 17187 1902 D7F89430 		ldr	r3, [r7, #148]
 17188 1906 0233     		adds	r3, r3, #2
 17189 1908 52F82330 		ldr	r3, [r2, r3, lsl #2]
 17190 190c 07F11800 		add	r0, r7, #24
 17191 1910 0A46     		mov	r2, r1
 17192 1912 1D49     		ldr	r1, .L698+48
 17193 1914 FFF7FEFF 		bl	sprintf
2248:..\src/command_processing.c ****                 strcat(info_string, str);
 17194              		.loc 1 2248 0 discriminator 3
 17195 1918 07F11803 		add	r3, r7, #24
 17196 191c 1946     		mov	r1, r3
 17197 191e 7869     		ldr	r0, [r7, #20]
 17198 1920 FFF7FEFF 		bl	strcat
2249:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 17199              		.loc 1 2249 0 discriminator 3
 17200 1924 7869     		ldr	r0, [r7, #20]
 17201 1926 FFF7FEFF 		bl	strlen
 17202 192a 0346     		mov	r3, r0
 17203 192c 1A46     		mov	r2, r3
 17204 192e 7B69     		ldr	r3, [r7, #20]
 17205 1930 1344     		add	r3, r3, r2
 17206 1932 0A4A     		ldr	r2, .L698+4
 17207 1934 1188     		ldrh	r1, [r2]	@ unaligned
 17208 1936 9278     		ldrb	r2, [r2, #2]
 17209 1938 1980     		strh	r1, [r3]	@ unaligned
 17210 193a 9A70     		strb	r2, [r3, #2]
2246:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 17211              		.loc 1 2246 0 discriminator 3
 17212 193c D7F89430 		ldr	r3, [r7, #148]
 17213 1940 0133     		adds	r3, r3, #1
 17214 1942 C7F89430 		str	r3, [r7, #148]
 17215              	.L652:
2246:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 17216              		.loc 1 2246 0 is_stmt 0 discriminator 1
 17217 1946 D7F89430 		ldr	r3, [r7, #148]
 17218 194a 052B     		cmp	r3, #5
 17219 194c D5DD     		ble	.L653
2250:..\src/command_processing.c ****             }
2251:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_INPUT_EMGS; ++i) {
 17220              		.loc 1 2251 0 is_stmt 1
 17221 194e 0023     		movs	r3, #0
 17222 1950 C7F89430 		str	r3, [r7, #148]
 17223 1954 3FE0     		b	.L654
 17224              	.L699:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 383


 17225 1956 00BF     		.align	2
 17226              	.L698:
 17227 1958 E0180000 		.word	.LC234
 17228 195c 5C110000 		.word	.LC152
 17229 1960 FC180000 		.word	.LC235
 17230 1964 10190000 		.word	.LC236
 17231 1968 34190000 		.word	.LC237
 17232 196c 58190000 		.word	.LC238
 17233 1970 70190000 		.word	.LC239
 17234 1974 84190000 		.word	.LC240
 17235 1978 A0190000 		.word	.LC241
 17236 197c BC190000 		.word	.LC242
 17237 1980 D4190000 		.word	.LC243
 17238 1984 00000000 		.word	g_adc_meas
 17239 1988 F4190000 		.word	.LC244
 17240              	.L655:
2252:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 17241              		.loc 1 2252 0 discriminator 3
 17242 198c D7F89430 		ldr	r3, [r7, #148]
 17243 1990 591C     		adds	r1, r3, #1
 17244 1992 BD4A     		ldr	r2, .L700
 17245 1994 D7F89430 		ldr	r3, [r7, #148]
 17246 1998 52F82330 		ldr	r3, [r2, r3, lsl #2]
 17247 199c 07F11800 		add	r0, r7, #24
 17248 19a0 0A46     		mov	r2, r1
 17249 19a2 BA49     		ldr	r1, .L700+4
 17250 19a4 FFF7FEFF 		bl	sprintf
2253:..\src/command_processing.c ****                 strcat(info_string, str);
 17251              		.loc 1 2253 0 discriminator 3
 17252 19a8 07F11803 		add	r3, r7, #24
 17253 19ac 1946     		mov	r1, r3
 17254 19ae 7869     		ldr	r0, [r7, #20]
 17255 19b0 FFF7FEFF 		bl	strcat
2254:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 17256              		.loc 1 2254 0 discriminator 3
 17257 19b4 7869     		ldr	r0, [r7, #20]
 17258 19b6 FFF7FEFF 		bl	strlen
 17259 19ba 0346     		mov	r3, r0
 17260 19bc 1A46     		mov	r2, r3
 17261 19be 7B69     		ldr	r3, [r7, #20]
 17262 19c0 1344     		add	r3, r3, r2
 17263 19c2 B34A     		ldr	r2, .L700+8
 17264 19c4 1188     		ldrh	r1, [r2]	@ unaligned
 17265 19c6 9278     		ldrb	r2, [r2, #2]
 17266 19c8 1980     		strh	r1, [r3]	@ unaligned
 17267 19ca 9A70     		strb	r2, [r3, #2]
2251:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 17268              		.loc 1 2251 0 discriminator 3
 17269 19cc D7F89430 		ldr	r3, [r7, #148]
 17270 19d0 0133     		adds	r3, r3, #1
 17271 19d2 C7F89430 		str	r3, [r7, #148]
 17272              	.L654:
2251:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 17273              		.loc 1 2251 0 is_stmt 0 discriminator 1
 17274 19d6 D7F89430 		ldr	r3, [r7, #148]
 17275 19da 012B     		cmp	r3, #1
 17276 19dc D6DD     		ble	.L655
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 384


 17277              	.L651:
2255:..\src/command_processing.c ****             }
2256:..\src/command_processing.c ****         }
2257:..\src/command_processing.c **** 
2258:..\src/command_processing.c **** #ifdef GENERIC_FW
2259:..\src/command_processing.c ****     
2260:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17278              		.loc 1 2260 0 is_stmt 1
 17279 19de 7869     		ldr	r0, [r7, #20]
 17280 19e0 FFF7FEFF 		bl	strlen
 17281 19e4 0346     		mov	r3, r0
 17282 19e6 1A46     		mov	r2, r3
 17283 19e8 7B69     		ldr	r3, [r7, #20]
 17284 19ea 1344     		add	r3, r3, r2
 17285 19ec A84A     		ldr	r2, .L700+8
 17286 19ee 1188     		ldrh	r1, [r2]	@ unaligned
 17287 19f0 9278     		ldrb	r2, [r2, #2]
 17288 19f2 1980     		strh	r1, [r3]	@ unaligned
 17289 19f4 9A70     		strb	r2, [r3, #2]
2261:..\src/command_processing.c ****         strcat(info_string, "JOYSTICK CONFIGURATION\r\n");
 17290              		.loc 1 2261 0
 17291 19f6 7869     		ldr	r0, [r7, #20]
 17292 19f8 FFF7FEFF 		bl	strlen
 17293 19fc 0346     		mov	r3, r0
 17294 19fe 1A46     		mov	r2, r3
 17295 1a00 7B69     		ldr	r3, [r7, #20]
 17296 1a02 1344     		add	r3, r3, r2
 17297 1a04 A34A     		ldr	r2, .L700+12
 17298 1a06 1D46     		mov	r5, r3
 17299 1a08 1446     		mov	r4, r2
 17300 1a0a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17301 1a0c 2860     		str	r0, [r5]	@ unaligned
 17302 1a0e 6960     		str	r1, [r5, #4]	@ unaligned
 17303 1a10 AA60     		str	r2, [r5, #8]	@ unaligned
 17304 1a12 EB60     		str	r3, [r5, #12]	@ unaligned
 17305 1a14 03CC     		ldmia	r4!, {r0, r1}
 17306 1a16 2861     		str	r0, [r5, #16]	@ unaligned
 17307 1a18 6961     		str	r1, [r5, #20]	@ unaligned
 17308 1a1a 2378     		ldrb	r3, [r4]
 17309 1a1c 2B76     		strb	r3, [r5, #24]
2262:..\src/command_processing.c ****         sprintf(str, "Closure speed: %d", c_mem.JOY_spec.joystick_closure_speed);
 17310              		.loc 1 2262 0
 17311 1a1e 9E4B     		ldr	r3, .L700+16
 17312 1a20 B3F8B032 		ldrh	r3, [r3, #688]
 17313 1a24 1A46     		mov	r2, r3
 17314 1a26 07F11803 		add	r3, r7, #24
 17315 1a2a 9C49     		ldr	r1, .L700+20
 17316 1a2c 1846     		mov	r0, r3
 17317 1a2e FFF7FEFF 		bl	sprintf
2263:..\src/command_processing.c ****         strcat(info_string, str);
 17318              		.loc 1 2263 0
 17319 1a32 07F11803 		add	r3, r7, #24
 17320 1a36 1946     		mov	r1, r3
 17321 1a38 7869     		ldr	r0, [r7, #20]
 17322 1a3a FFF7FEFF 		bl	strcat
2264:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17323              		.loc 1 2264 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 385


 17324 1a3e 7869     		ldr	r0, [r7, #20]
 17325 1a40 FFF7FEFF 		bl	strlen
 17326 1a44 0346     		mov	r3, r0
 17327 1a46 1A46     		mov	r2, r3
 17328 1a48 7B69     		ldr	r3, [r7, #20]
 17329 1a4a 1344     		add	r3, r3, r2
 17330 1a4c 904A     		ldr	r2, .L700+8
 17331 1a4e 1188     		ldrh	r1, [r2]	@ unaligned
 17332 1a50 9278     		ldrb	r2, [r2, #2]
 17333 1a52 1980     		strh	r1, [r3]	@ unaligned
 17334 1a54 9A70     		strb	r2, [r3, #2]
2265:..\src/command_processing.c **** 
2266:..\src/command_processing.c ****         sprintf(str, "Joystick Threshold: %d", c_mem.JOY_spec.joystick_threshold);
 17335              		.loc 1 2266 0
 17336 1a56 904B     		ldr	r3, .L700+16
 17337 1a58 B3F9B232 		ldrsh	r3, [r3, #690]
 17338 1a5c 1A46     		mov	r2, r3
 17339 1a5e 07F11803 		add	r3, r7, #24
 17340 1a62 8F49     		ldr	r1, .L700+24
 17341 1a64 1846     		mov	r0, r3
 17342 1a66 FFF7FEFF 		bl	sprintf
2267:..\src/command_processing.c ****         strcat(info_string, str);
 17343              		.loc 1 2267 0
 17344 1a6a 07F11803 		add	r3, r7, #24
 17345 1a6e 1946     		mov	r1, r3
 17346 1a70 7869     		ldr	r0, [r7, #20]
 17347 1a72 FFF7FEFF 		bl	strcat
2268:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17348              		.loc 1 2268 0
 17349 1a76 7869     		ldr	r0, [r7, #20]
 17350 1a78 FFF7FEFF 		bl	strlen
 17351 1a7c 0346     		mov	r3, r0
 17352 1a7e 1A46     		mov	r2, r3
 17353 1a80 7B69     		ldr	r3, [r7, #20]
 17354 1a82 1344     		add	r3, r3, r2
 17355 1a84 824A     		ldr	r2, .L700+8
 17356 1a86 1188     		ldrh	r1, [r2]	@ unaligned
 17357 1a88 9278     		ldrb	r2, [r2, #2]
 17358 1a8a 1980     		strh	r1, [r3]	@ unaligned
 17359 1a8c 9A70     		strb	r2, [r3, #2]
2269:..\src/command_processing.c ****         sprintf(str, "Joystick Gains - X:%hu  Y:%hu", c_mem.JOY_spec.joystick_gains[0], c_mem.JOY_s
 17360              		.loc 1 2269 0
 17361 1a8e 824B     		ldr	r3, .L700+16
 17362 1a90 B3F8B432 		ldrh	r3, [r3, #692]
 17363 1a94 1A46     		mov	r2, r3
 17364 1a96 804B     		ldr	r3, .L700+16
 17365 1a98 B3F8B632 		ldrh	r3, [r3, #694]
 17366 1a9c 07F11800 		add	r0, r7, #24
 17367 1aa0 8049     		ldr	r1, .L700+28
 17368 1aa2 FFF7FEFF 		bl	sprintf
2270:..\src/command_processing.c ****         strcat(info_string, str);
 17369              		.loc 1 2270 0
 17370 1aa6 07F11803 		add	r3, r7, #24
 17371 1aaa 1946     		mov	r1, r3
 17372 1aac 7869     		ldr	r0, [r7, #20]
 17373 1aae FFF7FEFF 		bl	strcat
2271:..\src/command_processing.c ****         strcat(info_string, "\r\n");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 386


 17374              		.loc 1 2271 0
 17375 1ab2 7869     		ldr	r0, [r7, #20]
 17376 1ab4 FFF7FEFF 		bl	strlen
 17377 1ab8 0346     		mov	r3, r0
 17378 1aba 1A46     		mov	r2, r3
 17379 1abc 7B69     		ldr	r3, [r7, #20]
 17380 1abe 1344     		add	r3, r3, r2
 17381 1ac0 734A     		ldr	r2, .L700+8
 17382 1ac2 1188     		ldrh	r1, [r2]	@ unaligned
 17383 1ac4 9278     		ldrb	r2, [r2, #2]
 17384 1ac6 1980     		strh	r1, [r3]	@ unaligned
 17385 1ac8 9A70     		strb	r2, [r3, #2]
2272:..\src/command_processing.c **** 
2273:..\src/command_processing.c **** #endif
2274:..\src/command_processing.c ****         
2275:..\src/command_processing.c ****         if (MEM_P->SH.rest_position_flag) {
 17386              		.loc 1 2275 0
 17387 1aca D7F88830 		ldr	r3, [r7, #136]
 17388 1ace 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 17389 1ad2 002B     		cmp	r3, #0
 17390 1ad4 63D0     		beq	.L656
2276:..\src/command_processing.c ****     		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 17391              		.loc 1 2276 0
 17392 1ad6 D7F88830 		ldr	r3, [r7, #136]
 17393 1ada D3F8A422 		ldr	r2, [r3, #676]
 17394 1ade 07F11803 		add	r3, r7, #24
 17395 1ae2 7149     		ldr	r1, .L700+32
 17396 1ae4 1846     		mov	r0, r3
 17397 1ae6 FFF7FEFF 		bl	sprintf
2277:..\src/command_processing.c ****             strcat(info_string, str);
 17398              		.loc 1 2277 0
 17399 1aea 07F11803 		add	r3, r7, #24
 17400 1aee 1946     		mov	r1, r3
 17401 1af0 7869     		ldr	r0, [r7, #20]
 17402 1af2 FFF7FEFF 		bl	strcat
2278:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17403              		.loc 1 2278 0
 17404 1af6 7869     		ldr	r0, [r7, #20]
 17405 1af8 FFF7FEFF 		bl	strlen
 17406 1afc 0346     		mov	r3, r0
 17407 1afe 1A46     		mov	r2, r3
 17408 1b00 7B69     		ldr	r3, [r7, #20]
 17409 1b02 1344     		add	r3, r3, r2
 17410 1b04 624A     		ldr	r2, .L700+8
 17411 1b06 1188     		ldrh	r1, [r2]	@ unaligned
 17412 1b08 9278     		ldrb	r2, [r2, #2]
 17413 1b0a 1980     		strh	r1, [r3]	@ unaligned
 17414 1b0c 9A70     		strb	r2, [r3, #2]
2279:..\src/command_processing.c ****             
2280:..\src/command_processing.c ****             sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 17415              		.loc 1 2280 0
 17416 1b0e D7F88830 		ldr	r3, [r7, #136]
 17417 1b12 D3F8A822 		ldr	r2, [r3, #680]
 17418 1b16 07F11803 		add	r3, r7, #24
 17419 1b1a 6449     		ldr	r1, .L700+36
 17420 1b1c 1846     		mov	r0, r3
 17421 1b1e FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 387


2281:..\src/command_processing.c ****             strcat(info_string, str);
 17422              		.loc 1 2281 0
 17423 1b22 07F11803 		add	r3, r7, #24
 17424 1b26 1946     		mov	r1, r3
 17425 1b28 7869     		ldr	r0, [r7, #20]
 17426 1b2a FFF7FEFF 		bl	strcat
2282:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17427              		.loc 1 2282 0
 17428 1b2e 7869     		ldr	r0, [r7, #20]
 17429 1b30 FFF7FEFF 		bl	strlen
 17430 1b34 0346     		mov	r3, r0
 17431 1b36 1A46     		mov	r2, r3
 17432 1b38 7B69     		ldr	r3, [r7, #20]
 17433 1b3a 1344     		add	r3, r3, r2
 17434 1b3c 544A     		ldr	r2, .L700+8
 17435 1b3e 1188     		ldrh	r1, [r2]	@ unaligned
 17436 1b40 9278     		ldrb	r2, [r2, #2]
 17437 1b42 1980     		strh	r1, [r3]	@ unaligned
 17438 1b44 9A70     		strb	r2, [r3, #2]
2283:..\src/command_processing.c ****             
2284:..\src/command_processing.c ****             sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0
 17439              		.loc 1 2284 0
 17440 1b46 D7F88830 		ldr	r3, [r7, #136]
 17441 1b4a D3F8A022 		ldr	r2, [r3, #672]
 17442 1b4e D7F88830 		ldr	r3, [r7, #136]
 17443 1b52 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 17444 1b56 1846     		mov	r0, r3
 17445 1b58 D7F88810 		ldr	r1, [r7, #136]
 17446 1b5c 0346     		mov	r3, r0
 17447 1b5e 5B00     		lsls	r3, r3, #1
 17448 1b60 0344     		add	r3, r3, r0
 17449 1b62 1B01     		lsls	r3, r3, #4
 17450 1b64 0B44     		add	r3, r3, r1
 17451 1b66 03F29513 		addw	r3, r3, #405
 17452 1b6a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17453 1b6c 1A41     		asrs	r2, r2, r3
 17454 1b6e 07F11803 		add	r3, r7, #24
 17455 1b72 4F49     		ldr	r1, .L700+40
 17456 1b74 1846     		mov	r0, r3
 17457 1b76 FFF7FEFF 		bl	sprintf
2285:..\src/command_processing.c ****             strcat(info_string, str);
 17458              		.loc 1 2285 0
 17459 1b7a 07F11803 		add	r3, r7, #24
 17460 1b7e 1946     		mov	r1, r3
 17461 1b80 7869     		ldr	r0, [r7, #20]
 17462 1b82 FFF7FEFF 		bl	strcat
2286:..\src/command_processing.c ****             strcat(info_string, "\r\n");  
 17463              		.loc 1 2286 0
 17464 1b86 7869     		ldr	r0, [r7, #20]
 17465 1b88 FFF7FEFF 		bl	strlen
 17466 1b8c 0346     		mov	r3, r0
 17467 1b8e 1A46     		mov	r2, r3
 17468 1b90 7B69     		ldr	r3, [r7, #20]
 17469 1b92 1344     		add	r3, r3, r2
 17470 1b94 3E4A     		ldr	r2, .L700+8
 17471 1b96 1188     		ldrh	r1, [r2]	@ unaligned
 17472 1b98 9278     		ldrb	r2, [r2, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 388


 17473 1b9a 1980     		strh	r1, [r3]	@ unaligned
 17474 1b9c 9A70     		strb	r2, [r3, #2]
 17475              	.L656:
2287:..\src/command_processing.c ****         }
2288:..\src/command_processing.c **** 
2289:..\src/command_processing.c ****         if (MEM_P->imu.read_imu_flag) {
 17476              		.loc 1 2289 0
 17477 1b9e D7F88830 		ldr	r3, [r7, #136]
 17478 1ba2 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 17479 1ba6 002B     		cmp	r3, #0
 17480 1ba8 00F0D281 		beq	.L657
2290:..\src/command_processing.c ****             sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 17481              		.loc 1 2290 0
 17482 1bac 414B     		ldr	r3, .L700+44
 17483 1bae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17484 1bb0 1A46     		mov	r2, r3
 17485 1bb2 07F11803 		add	r3, r7, #24
 17486 1bb6 4049     		ldr	r1, .L700+48
 17487 1bb8 1846     		mov	r0, r3
 17488 1bba FFF7FEFF 		bl	sprintf
2291:..\src/command_processing.c ****             strcat(info_string, str);
 17489              		.loc 1 2291 0
 17490 1bbe 07F11803 		add	r3, r7, #24
 17491 1bc2 1946     		mov	r1, r3
 17492 1bc4 7869     		ldr	r0, [r7, #20]
 17493 1bc6 FFF7FEFF 		bl	strcat
2292:..\src/command_processing.c ****             
2293:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17494              		.loc 1 2293 0
 17495 1bca 7869     		ldr	r0, [r7, #20]
 17496 1bcc FFF7FEFF 		bl	strlen
 17497 1bd0 0346     		mov	r3, r0
 17498 1bd2 1A46     		mov	r2, r3
 17499 1bd4 7B69     		ldr	r3, [r7, #20]
 17500 1bd6 1344     		add	r3, r3, r2
 17501 1bd8 2D4A     		ldr	r2, .L700+8
 17502 1bda 1188     		ldrh	r1, [r2]	@ unaligned
 17503 1bdc 9278     		ldrb	r2, [r2, #2]
 17504 1bde 1980     		strh	r1, [r3]	@ unaligned
 17505 1be0 9A70     		strb	r2, [r3, #2]
2294:..\src/command_processing.c ****             
2295:..\src/command_processing.c ****             strcat(info_string, "IMUs CONFIGURATION\r\n");
 17506              		.loc 1 2295 0
 17507 1be2 7869     		ldr	r0, [r7, #20]
 17508 1be4 FFF7FEFF 		bl	strlen
 17509 1be8 0346     		mov	r3, r0
 17510 1bea 1A46     		mov	r2, r3
 17511 1bec 7B69     		ldr	r3, [r7, #20]
 17512 1bee 1344     		add	r3, r3, r2
 17513 1bf0 324A     		ldr	r2, .L700+52
 17514 1bf2 1D46     		mov	r5, r3
 17515 1bf4 1446     		mov	r4, r2
 17516 1bf6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17517 1bf8 2860     		str	r0, [r5]	@ unaligned
 17518 1bfa 6960     		str	r1, [r5, #4]	@ unaligned
 17519 1bfc AA60     		str	r2, [r5, #8]	@ unaligned
 17520 1bfe EB60     		str	r3, [r5, #12]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 389


 17521 1c00 2068     		ldr	r0, [r4]	@ unaligned
 17522 1c02 2861     		str	r0, [r5, #16]	@ unaligned
 17523 1c04 2379     		ldrb	r3, [r4, #4]
 17524 1c06 2B75     		strb	r3, [r5, #20]
2296:..\src/command_processing.c ****             for (i=0; i<N_IMU_Connected; i++){
 17525              		.loc 1 2296 0
 17526 1c08 0023     		movs	r3, #0
 17527 1c0a C7F89430 		str	r3, [r7, #148]
 17528 1c0e 88E1     		b	.L658
 17529              	.L669:
2297:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17530              		.loc 1 2297 0
 17531 1c10 2B4A     		ldr	r2, .L700+56
 17532 1c12 D7F89430 		ldr	r3, [r7, #148]
 17533 1c16 1344     		add	r3, r3, r2
 17534 1c18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17535 1c1a 07F11800 		add	r0, r7, #24
 17536 1c1e D7F89420 		ldr	r2, [r7, #148]
 17537 1c22 2849     		ldr	r1, .L700+60
 17538 1c24 FFF7FEFF 		bl	sprintf
2298:..\src/command_processing.c ****                 strcat(info_string, str);
 17539              		.loc 1 2298 0
 17540 1c28 07F11803 		add	r3, r7, #24
 17541 1c2c 1946     		mov	r1, r3
 17542 1c2e 7869     		ldr	r0, [r7, #20]
 17543 1c30 FFF7FEFF 		bl	strcat
2299:..\src/command_processing.c ****                 
2300:..\src/command_processing.c ****                 sprintf(str, "\tAccelerometers: ");
 17544              		.loc 1 2300 0
 17545 1c34 07F11803 		add	r3, r7, #24
 17546 1c38 234A     		ldr	r2, .L700+64
 17547 1c3a 1C46     		mov	r4, r3
 17548 1c3c 1546     		mov	r5, r2
 17549 1c3e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17550 1c40 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 17551 1c42 2B68     		ldr	r3, [r5]
 17552 1c44 2380     		strh	r3, [r4]	@ movhi
2301:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 17553              		.loc 1 2301 0
 17554 1c46 1E4A     		ldr	r2, .L700+56
 17555 1c48 D7F89430 		ldr	r3, [r7, #148]
 17556 1c4c 1344     		add	r3, r3, r2
 17557 1c4e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17558 1c50 1946     		mov	r1, r3
 17559 1c52 D7F88820 		ldr	r2, [r7, #136]
 17560 1c56 0B46     		mov	r3, r1
 17561 1c58 9B00     		lsls	r3, r3, #2
 17562 1c5a 0B44     		add	r3, r3, r1
 17563 1c5c 1344     		add	r3, r3, r2
 17564 1c5e 03F20223 		addw	r3, r3, #514
 17565 1c62 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17566 1c64 002B     		cmp	r3, #0
 17567 1c66 33D0     		beq	.L659
2302:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17568              		.loc 1 2302 0
 17569 1c68 07F11803 		add	r3, r7, #24
 17570 1c6c 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 390


 17571 1c6e FFF7FEFF 		bl	strlen
 17572 1c72 0346     		mov	r3, r0
 17573 1c74 1A46     		mov	r2, r3
 17574 1c76 07F11803 		add	r3, r7, #24
 17575 1c7a 1344     		add	r3, r3, r2
 17576 1c7c 134A     		ldr	r2, .L700+68
 17577 1c7e 1068     		ldr	r0, [r2]	@ unaligned
 17578 1c80 1860     		str	r0, [r3]	@ unaligned
 17579 1c82 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17580 1c84 9A80     		strh	r2, [r3, #4]	@ unaligned
 17581 1c86 32E0     		b	.L660
 17582              	.L701:
 17583              		.align	2
 17584              	.L700:
 17585 1c88 00000000 		.word	g_adc_meas
 17586 1c8c 041A0000 		.word	.LC245
 17587 1c90 5C110000 		.word	.LC152
 17588 1c94 181A0000 		.word	.LC246
 17589 1c98 00000000 		.word	c_mem
 17590 1c9c 341A0000 		.word	.LC247
 17591 1ca0 481A0000 		.word	.LC248
 17592 1ca4 601A0000 		.word	.LC249
 17593 1ca8 801A0000 		.word	.LC250
 17594 1cac 9C1A0000 		.word	.LC251
 17595 1cb0 C41A0000 		.word	.LC252
 17596 1cb4 00000000 		.word	N_IMU_Connected
 17597 1cb8 D81A0000 		.word	.LC253
 17598 1cbc EC1A0000 		.word	.LC254
 17599 1cc0 00000000 		.word	IMU_connected
 17600 1cc4 041B0000 		.word	.LC255
 17601 1cc8 181B0000 		.word	.LC256
 17602 1ccc 20130000 		.word	.LC175
 17603              	.L659:
2303:..\src/command_processing.c ****                 else
2304:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 17604              		.loc 1 2304 0
 17605 1cd0 07F11803 		add	r3, r7, #24
 17606 1cd4 1846     		mov	r0, r3
 17607 1cd6 FFF7FEFF 		bl	strlen
 17608 1cda 0346     		mov	r3, r0
 17609 1cdc 1A46     		mov	r2, r3
 17610 1cde 07F11803 		add	r3, r7, #24
 17611 1ce2 1344     		add	r3, r3, r2
 17612 1ce4 BD4A     		ldr	r2, .L702
 17613 1ce6 1068     		ldr	r0, [r2]	@ unaligned
 17614 1ce8 1860     		str	r0, [r3]	@ unaligned
 17615 1cea 1279     		ldrb	r2, [r2, #4]
 17616 1cec 1A71     		strb	r2, [r3, #4]
 17617              	.L660:
2305:..\src/command_processing.c ****                 strcat(str, "\tGyroscopes: ");
 17618              		.loc 1 2305 0
 17619 1cee 07F11803 		add	r3, r7, #24
 17620 1cf2 1846     		mov	r0, r3
 17621 1cf4 FFF7FEFF 		bl	strlen
 17622 1cf8 0346     		mov	r3, r0
 17623 1cfa 1A46     		mov	r2, r3
 17624 1cfc 07F11803 		add	r3, r7, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 391


 17625 1d00 1344     		add	r3, r3, r2
 17626 1d02 B74A     		ldr	r2, .L702+4
 17627 1d04 1C46     		mov	r4, r3
 17628 1d06 1346     		mov	r3, r2
 17629 1d08 07CB     		ldmia	r3!, {r0, r1, r2}
 17630 1d0a 2060     		str	r0, [r4]	@ unaligned
 17631 1d0c 6160     		str	r1, [r4, #4]	@ unaligned
 17632 1d0e A260     		str	r2, [r4, #8]	@ unaligned
 17633 1d10 1B88     		ldrh	r3, [r3]	@ unaligned
 17634 1d12 A381     		strh	r3, [r4, #12]	@ unaligned
2306:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 17635              		.loc 1 2306 0
 17636 1d14 B34A     		ldr	r2, .L702+8
 17637 1d16 D7F89430 		ldr	r3, [r7, #148]
 17638 1d1a 1344     		add	r3, r3, r2
 17639 1d1c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17640 1d1e 1946     		mov	r1, r3
 17641 1d20 D7F88820 		ldr	r2, [r7, #136]
 17642 1d24 0B46     		mov	r3, r1
 17643 1d26 9B00     		lsls	r3, r3, #2
 17644 1d28 0B44     		add	r3, r3, r1
 17645 1d2a 1344     		add	r3, r3, r2
 17646 1d2c 03F20323 		addw	r3, r3, #515
 17647 1d30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17648 1d32 002B     		cmp	r3, #0
 17649 1d34 0FD0     		beq	.L661
2307:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17650              		.loc 1 2307 0
 17651 1d36 07F11803 		add	r3, r7, #24
 17652 1d3a 1846     		mov	r0, r3
 17653 1d3c FFF7FEFF 		bl	strlen
 17654 1d40 0346     		mov	r3, r0
 17655 1d42 1A46     		mov	r2, r3
 17656 1d44 07F11803 		add	r3, r7, #24
 17657 1d48 1344     		add	r3, r3, r2
 17658 1d4a A74A     		ldr	r2, .L702+12
 17659 1d4c 1068     		ldr	r0, [r2]	@ unaligned
 17660 1d4e 1860     		str	r0, [r3]	@ unaligned
 17661 1d50 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17662 1d52 9A80     		strh	r2, [r3, #4]	@ unaligned
 17663 1d54 0EE0     		b	.L662
 17664              	.L661:
2308:..\src/command_processing.c ****                 else
2309:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 17665              		.loc 1 2309 0
 17666 1d56 07F11803 		add	r3, r7, #24
 17667 1d5a 1846     		mov	r0, r3
 17668 1d5c FFF7FEFF 		bl	strlen
 17669 1d60 0346     		mov	r3, r0
 17670 1d62 1A46     		mov	r2, r3
 17671 1d64 07F11803 		add	r3, r7, #24
 17672 1d68 1344     		add	r3, r3, r2
 17673 1d6a 9C4A     		ldr	r2, .L702
 17674 1d6c 1068     		ldr	r0, [r2]	@ unaligned
 17675 1d6e 1860     		str	r0, [r3]	@ unaligned
 17676 1d70 1279     		ldrb	r2, [r2, #4]
 17677 1d72 1A71     		strb	r2, [r3, #4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 392


 17678              	.L662:
2310:..\src/command_processing.c ****                 strcat(str, "\tMagnetometers: ");
 17679              		.loc 1 2310 0
 17680 1d74 07F11803 		add	r3, r7, #24
 17681 1d78 1846     		mov	r0, r3
 17682 1d7a FFF7FEFF 		bl	strlen
 17683 1d7e 0346     		mov	r3, r0
 17684 1d80 1A46     		mov	r2, r3
 17685 1d82 07F11803 		add	r3, r7, #24
 17686 1d86 1344     		add	r3, r3, r2
 17687 1d88 984A     		ldr	r2, .L702+16
 17688 1d8a 1D46     		mov	r5, r3
 17689 1d8c 1446     		mov	r4, r2
 17690 1d8e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17691 1d90 2860     		str	r0, [r5]	@ unaligned
 17692 1d92 6960     		str	r1, [r5, #4]	@ unaligned
 17693 1d94 AA60     		str	r2, [r5, #8]	@ unaligned
 17694 1d96 EB60     		str	r3, [r5, #12]	@ unaligned
 17695 1d98 2378     		ldrb	r3, [r4]
 17696 1d9a 2B74     		strb	r3, [r5, #16]
2311:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 17697              		.loc 1 2311 0
 17698 1d9c 914A     		ldr	r2, .L702+8
 17699 1d9e D7F89430 		ldr	r3, [r7, #148]
 17700 1da2 1344     		add	r3, r3, r2
 17701 1da4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17702 1da6 1946     		mov	r1, r3
 17703 1da8 D7F88820 		ldr	r2, [r7, #136]
 17704 1dac 0B46     		mov	r3, r1
 17705 1dae 9B00     		lsls	r3, r3, #2
 17706 1db0 0B44     		add	r3, r3, r1
 17707 1db2 1344     		add	r3, r3, r2
 17708 1db4 03F50173 		add	r3, r3, #516
 17709 1db8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17710 1dba 002B     		cmp	r3, #0
 17711 1dbc 0FD0     		beq	.L663
2312:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17712              		.loc 1 2312 0
 17713 1dbe 07F11803 		add	r3, r7, #24
 17714 1dc2 1846     		mov	r0, r3
 17715 1dc4 FFF7FEFF 		bl	strlen
 17716 1dc8 0346     		mov	r3, r0
 17717 1dca 1A46     		mov	r2, r3
 17718 1dcc 07F11803 		add	r3, r7, #24
 17719 1dd0 1344     		add	r3, r3, r2
 17720 1dd2 854A     		ldr	r2, .L702+12
 17721 1dd4 1068     		ldr	r0, [r2]	@ unaligned
 17722 1dd6 1860     		str	r0, [r3]	@ unaligned
 17723 1dd8 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17724 1dda 9A80     		strh	r2, [r3, #4]	@ unaligned
 17725 1ddc 0EE0     		b	.L664
 17726              	.L663:
2313:..\src/command_processing.c ****                 else
2314:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 17727              		.loc 1 2314 0
 17728 1dde 07F11803 		add	r3, r7, #24
 17729 1de2 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 393


 17730 1de4 FFF7FEFF 		bl	strlen
 17731 1de8 0346     		mov	r3, r0
 17732 1dea 1A46     		mov	r2, r3
 17733 1dec 07F11803 		add	r3, r7, #24
 17734 1df0 1344     		add	r3, r3, r2
 17735 1df2 7A4A     		ldr	r2, .L702
 17736 1df4 1068     		ldr	r0, [r2]	@ unaligned
 17737 1df6 1860     		str	r0, [r3]	@ unaligned
 17738 1df8 1279     		ldrb	r2, [r2, #4]
 17739 1dfa 1A71     		strb	r2, [r3, #4]
 17740              	.L664:
2315:..\src/command_processing.c ****                 strcat(str, "\tQuaternion: ");                
 17741              		.loc 1 2315 0
 17742 1dfc 07F11803 		add	r3, r7, #24
 17743 1e00 1846     		mov	r0, r3
 17744 1e02 FFF7FEFF 		bl	strlen
 17745 1e06 0346     		mov	r3, r0
 17746 1e08 1A46     		mov	r2, r3
 17747 1e0a 07F11803 		add	r3, r7, #24
 17748 1e0e 1344     		add	r3, r3, r2
 17749 1e10 774A     		ldr	r2, .L702+20
 17750 1e12 1C46     		mov	r4, r3
 17751 1e14 1346     		mov	r3, r2
 17752 1e16 07CB     		ldmia	r3!, {r0, r1, r2}
 17753 1e18 2060     		str	r0, [r4]	@ unaligned
 17754 1e1a 6160     		str	r1, [r4, #4]	@ unaligned
 17755 1e1c A260     		str	r2, [r4, #8]	@ unaligned
 17756 1e1e 1B88     		ldrh	r3, [r3]	@ unaligned
 17757 1e20 A381     		strh	r3, [r4, #12]	@ unaligned
2316:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 17758              		.loc 1 2316 0
 17759 1e22 704A     		ldr	r2, .L702+8
 17760 1e24 D7F89430 		ldr	r3, [r7, #148]
 17761 1e28 1344     		add	r3, r3, r2
 17762 1e2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17763 1e2c 1946     		mov	r1, r3
 17764 1e2e D7F88820 		ldr	r2, [r7, #136]
 17765 1e32 0B46     		mov	r3, r1
 17766 1e34 9B00     		lsls	r3, r3, #2
 17767 1e36 0B44     		add	r3, r3, r1
 17768 1e38 1344     		add	r3, r3, r2
 17769 1e3a 03F20523 		addw	r3, r3, #517
 17770 1e3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17771 1e40 002B     		cmp	r3, #0
 17772 1e42 0FD0     		beq	.L665
2317:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17773              		.loc 1 2317 0
 17774 1e44 07F11803 		add	r3, r7, #24
 17775 1e48 1846     		mov	r0, r3
 17776 1e4a FFF7FEFF 		bl	strlen
 17777 1e4e 0346     		mov	r3, r0
 17778 1e50 1A46     		mov	r2, r3
 17779 1e52 07F11803 		add	r3, r7, #24
 17780 1e56 1344     		add	r3, r3, r2
 17781 1e58 634A     		ldr	r2, .L702+12
 17782 1e5a 1068     		ldr	r0, [r2]	@ unaligned
 17783 1e5c 1860     		str	r0, [r3]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 394


 17784 1e5e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17785 1e60 9A80     		strh	r2, [r3, #4]	@ unaligned
 17786 1e62 0EE0     		b	.L666
 17787              	.L665:
2318:..\src/command_processing.c ****                 else
2319:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 17788              		.loc 1 2319 0
 17789 1e64 07F11803 		add	r3, r7, #24
 17790 1e68 1846     		mov	r0, r3
 17791 1e6a FFF7FEFF 		bl	strlen
 17792 1e6e 0346     		mov	r3, r0
 17793 1e70 1A46     		mov	r2, r3
 17794 1e72 07F11803 		add	r3, r7, #24
 17795 1e76 1344     		add	r3, r3, r2
 17796 1e78 584A     		ldr	r2, .L702
 17797 1e7a 1068     		ldr	r0, [r2]	@ unaligned
 17798 1e7c 1860     		str	r0, [r3]	@ unaligned
 17799 1e7e 1279     		ldrb	r2, [r2, #4]
 17800 1e80 1A71     		strb	r2, [r3, #4]
 17801              	.L666:
2320:..\src/command_processing.c ****                 strcat(str, "\tTemperature: ");
 17802              		.loc 1 2320 0
 17803 1e82 07F11803 		add	r3, r7, #24
 17804 1e86 1846     		mov	r0, r3
 17805 1e88 FFF7FEFF 		bl	strlen
 17806 1e8c 0346     		mov	r3, r0
 17807 1e8e 1A46     		mov	r2, r3
 17808 1e90 07F11803 		add	r3, r7, #24
 17809 1e94 1344     		add	r3, r3, r2
 17810 1e96 574A     		ldr	r2, .L702+24
 17811 1e98 1C46     		mov	r4, r3
 17812 1e9a 1346     		mov	r3, r2
 17813 1e9c 07CB     		ldmia	r3!, {r0, r1, r2}
 17814 1e9e 2060     		str	r0, [r4]	@ unaligned
 17815 1ea0 6160     		str	r1, [r4, #4]	@ unaligned
 17816 1ea2 A260     		str	r2, [r4, #8]	@ unaligned
 17817 1ea4 1A88     		ldrh	r2, [r3]	@ unaligned
 17818 1ea6 9B78     		ldrb	r3, [r3, #2]
 17819 1ea8 A281     		strh	r2, [r4, #12]	@ unaligned
 17820 1eaa A373     		strb	r3, [r4, #14]
2321:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 17821              		.loc 1 2321 0
 17822 1eac 4D4A     		ldr	r2, .L702+8
 17823 1eae D7F89430 		ldr	r3, [r7, #148]
 17824 1eb2 1344     		add	r3, r3, r2
 17825 1eb4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17826 1eb6 1946     		mov	r1, r3
 17827 1eb8 D7F88820 		ldr	r2, [r7, #136]
 17828 1ebc 0B46     		mov	r3, r1
 17829 1ebe 9B00     		lsls	r3, r3, #2
 17830 1ec0 0B44     		add	r3, r3, r1
 17831 1ec2 1344     		add	r3, r3, r2
 17832 1ec4 03F20623 		addw	r3, r3, #518
 17833 1ec8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17834 1eca 002B     		cmp	r3, #0
 17835 1ecc 0FD0     		beq	.L667
2322:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 395


 17836              		.loc 1 2322 0
 17837 1ece 07F11803 		add	r3, r7, #24
 17838 1ed2 1846     		mov	r0, r3
 17839 1ed4 FFF7FEFF 		bl	strlen
 17840 1ed8 0346     		mov	r3, r0
 17841 1eda 1A46     		mov	r2, r3
 17842 1edc 07F11803 		add	r3, r7, #24
 17843 1ee0 1344     		add	r3, r3, r2
 17844 1ee2 414A     		ldr	r2, .L702+12
 17845 1ee4 1068     		ldr	r0, [r2]	@ unaligned
 17846 1ee6 1860     		str	r0, [r3]	@ unaligned
 17847 1ee8 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17848 1eea 9A80     		strh	r2, [r3, #4]	@ unaligned
 17849 1eec 0EE0     		b	.L668
 17850              	.L667:
2323:..\src/command_processing.c ****                 else
2324:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 17851              		.loc 1 2324 0
 17852 1eee 07F11803 		add	r3, r7, #24
 17853 1ef2 1846     		mov	r0, r3
 17854 1ef4 FFF7FEFF 		bl	strlen
 17855 1ef8 0346     		mov	r3, r0
 17856 1efa 1A46     		mov	r2, r3
 17857 1efc 07F11803 		add	r3, r7, #24
 17858 1f00 1344     		add	r3, r3, r2
 17859 1f02 364A     		ldr	r2, .L702
 17860 1f04 1068     		ldr	r0, [r2]	@ unaligned
 17861 1f06 1860     		str	r0, [r3]	@ unaligned
 17862 1f08 1279     		ldrb	r2, [r2, #4]
 17863 1f0a 1A71     		strb	r2, [r3, #4]
 17864              	.L668:
2325:..\src/command_processing.c ****                      
2326:..\src/command_processing.c ****                 strcat(info_string, str);
 17865              		.loc 1 2326 0 discriminator 2
 17866 1f0c 07F11803 		add	r3, r7, #24
 17867 1f10 1946     		mov	r1, r3
 17868 1f12 7869     		ldr	r0, [r7, #20]
 17869 1f14 FFF7FEFF 		bl	strcat
2296:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17870              		.loc 1 2296 0 discriminator 2
 17871 1f18 D7F89430 		ldr	r3, [r7, #148]
 17872 1f1c 0133     		adds	r3, r3, #1
 17873 1f1e C7F89430 		str	r3, [r7, #148]
 17874              	.L658:
2296:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17875              		.loc 1 2296 0 is_stmt 0 discriminator 1
 17876 1f22 354B     		ldr	r3, .L702+28
 17877 1f24 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17878 1f26 1A46     		mov	r2, r3
 17879 1f28 D7F89430 		ldr	r3, [r7, #148]
 17880 1f2c 9A42     		cmp	r2, r3
 17881 1f2e 3FF76FAE 		bgt	.L669
2327:..\src/command_processing.c ****             }       
2328:..\src/command_processing.c ****             
2329:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17882              		.loc 1 2329 0 is_stmt 1
 17883 1f32 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 396


 17884 1f34 FFF7FEFF 		bl	strlen
 17885 1f38 0346     		mov	r3, r0
 17886 1f3a 1A46     		mov	r2, r3
 17887 1f3c 7B69     		ldr	r3, [r7, #20]
 17888 1f3e 1344     		add	r3, r3, r2
 17889 1f40 2E4A     		ldr	r2, .L702+32
 17890 1f42 1188     		ldrh	r1, [r2]	@ unaligned
 17891 1f44 9278     		ldrb	r2, [r2, #2]
 17892 1f46 1980     		strh	r1, [r3]	@ unaligned
 17893 1f48 9A70     		strb	r2, [r3, #2]
2330:..\src/command_processing.c ****           
2331:..\src/command_processing.c ****             IMU_reading_info(info_string);
 17894              		.loc 1 2331 0
 17895 1f4a 7869     		ldr	r0, [r7, #20]
 17896 1f4c FFF7FEFF 		bl	IMU_reading_info
 17897              	.L657:
2332:..\src/command_processing.c ****         }
2333:..\src/command_processing.c ****         
2334:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17898              		.loc 1 2334 0
 17899 1f50 7869     		ldr	r0, [r7, #20]
 17900 1f52 FFF7FEFF 		bl	strlen
 17901 1f56 0346     		mov	r3, r0
 17902 1f58 1A46     		mov	r2, r3
 17903 1f5a 7B69     		ldr	r3, [r7, #20]
 17904 1f5c 1344     		add	r3, r3, r2
 17905 1f5e 274A     		ldr	r2, .L702+32
 17906 1f60 1188     		ldrh	r1, [r2]	@ unaligned
 17907 1f62 9278     		ldrb	r2, [r2, #2]
 17908 1f64 1980     		strh	r1, [r3]	@ unaligned
 17909 1f66 9A70     		strb	r2, [r3, #2]
2335:..\src/command_processing.c **** 
2336:..\src/command_processing.c **** #ifdef GENERIC_FW   
2337:..\src/command_processing.c ****         int j;
2338:..\src/command_processing.c ****         strcat(info_string, "ENCODER CONFIGURATION\r\n");
 17910              		.loc 1 2338 0
 17911 1f68 7869     		ldr	r0, [r7, #20]
 17912 1f6a FFF7FEFF 		bl	strlen
 17913 1f6e 0346     		mov	r3, r0
 17914 1f70 1A46     		mov	r2, r3
 17915 1f72 7B69     		ldr	r3, [r7, #20]
 17916 1f74 1344     		add	r3, r3, r2
 17917 1f76 224A     		ldr	r2, .L702+36
 17918 1f78 1D46     		mov	r5, r3
 17919 1f7a 1446     		mov	r4, r2
 17920 1f7c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17921 1f7e 2860     		str	r0, [r5]	@ unaligned
 17922 1f80 6960     		str	r1, [r5, #4]	@ unaligned
 17923 1f82 AA60     		str	r2, [r5, #8]	@ unaligned
 17924 1f84 EB60     		str	r3, [r5, #12]	@ unaligned
 17925 1f86 03CC     		ldmia	r4!, {r0, r1}
 17926 1f88 2861     		str	r0, [r5, #16]	@ unaligned
 17927 1f8a 6961     		str	r1, [r5, #20]	@ unaligned
2339:..\src/command_processing.c ****         for (i = 0; i < N_ENCODER_LINE_MAX; i++) {
 17928              		.loc 1 2339 0
 17929 1f8c 0023     		movs	r3, #0
 17930 1f8e C7F89430 		str	r3, [r7, #148]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 397


 17931 1f92 BCE0     		b	.L670
 17932              	.L679:
2340:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
 17933              		.loc 1 2340 0
 17934 1f94 1B4A     		ldr	r2, .L702+40
 17935 1f96 D7F89430 		ldr	r3, [r7, #148]
 17936 1f9a 1344     		add	r3, r3, r2
 17937 1f9c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17938 1f9e 07F11800 		add	r0, r7, #24
 17939 1fa2 D7F89420 		ldr	r2, [r7, #148]
 17940 1fa6 1849     		ldr	r1, .L702+44
 17941 1fa8 FFF7FEFF 		bl	sprintf
2341:..\src/command_processing.c ****             strcat(info_string, str);
 17942              		.loc 1 2341 0
 17943 1fac 07F11803 		add	r3, r7, #24
 17944 1fb0 1946     		mov	r1, r3
 17945 1fb2 7869     		ldr	r0, [r7, #20]
 17946 1fb4 FFF7FEFF 		bl	strcat
2342:..\src/command_processing.c ****             if (MEM_P->dev.right_left == i) {
 17947              		.loc 1 2342 0
 17948 1fb8 D7F88830 		ldr	r3, [r7, #136]
 17949 1fbc 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 17950 1fc0 1A46     		mov	r2, r3
 17951 1fc2 D7F89430 		ldr	r3, [r7, #148]
 17952 1fc6 9A42     		cmp	r2, r3
 17953 1fc8 2FD1     		bne	.L671
2343:..\src/command_processing.c ****                 sprintf(str, " [%s HAND main encoder line]", (MEM_P->dev.right_left?"LEFT":"RIGHT")
 17954              		.loc 1 2343 0
 17955 1fca D7F88830 		ldr	r3, [r7, #136]
 17956 1fce 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 17957 1fd2 002B     		cmp	r3, #0
 17958 1fd4 1CD0     		beq	.L672
 17959              		.loc 1 2343 0 is_stmt 0 discriminator 1
 17960 1fd6 0D4A     		ldr	r2, .L702+48
 17961 1fd8 1BE0     		b	.L673
 17962              	.L703:
 17963 1fda 00BF     		.align	2
 17964              	.L702:
 17965 1fdc 28130000 		.word	.LC176
 17966 1fe0 2C1B0000 		.word	.LC257
 17967 1fe4 00000000 		.word	IMU_connected
 17968 1fe8 20130000 		.word	.LC175
 17969 1fec 3C1B0000 		.word	.LC258
 17970 1ff0 501B0000 		.word	.LC259
 17971 1ff4 601B0000 		.word	.LC260
 17972 1ff8 00000000 		.word	N_IMU_Connected
 17973 1ffc 5C110000 		.word	.LC152
 17974 2000 701B0000 		.word	.LC261
 17975 2004 00000000 		.word	N_Encoder_Line_Connected
 17976 2008 881B0000 		.word	.LC262
 17977 200c A81B0000 		.word	.LC263
 17978              	.L672:
 17979              		.loc 1 2343 0 discriminator 2
 17980 2010 534A     		ldr	r2, .L704
 17981              	.L673:
 17982              		.loc 1 2343 0 discriminator 4
 17983 2012 07F11803 		add	r3, r7, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 398


 17984 2016 5349     		ldr	r1, .L704+4
 17985 2018 1846     		mov	r0, r3
 17986 201a FFF7FEFF 		bl	sprintf
2344:..\src/command_processing.c ****                 strcat(info_string, str);
 17987              		.loc 1 2344 0 is_stmt 1 discriminator 4
 17988 201e 07F11803 		add	r3, r7, #24
 17989 2022 1946     		mov	r1, r3
 17990 2024 7869     		ldr	r0, [r7, #20]
 17991 2026 FFF7FEFF 		bl	strcat
 17992              	.L671:
2345:..\src/command_processing.c ****             }
2346:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17993              		.loc 1 2346 0
 17994 202a 7869     		ldr	r0, [r7, #20]
 17995 202c FFF7FEFF 		bl	strlen
 17996 2030 0346     		mov	r3, r0
 17997 2032 1A46     		mov	r2, r3
 17998 2034 7B69     		ldr	r3, [r7, #20]
 17999 2036 1344     		add	r3, r3, r2
 18000 2038 4B4A     		ldr	r2, .L704+8
 18001 203a 1188     		ldrh	r1, [r2]	@ unaligned
 18002 203c 9278     		ldrb	r2, [r2, #2]
 18003 203e 1980     		strh	r1, [r3]	@ unaligned
 18004 2040 9A70     		strb	r2, [r3, #2]
2347:..\src/command_processing.c ****             if (N_Encoder_Line_Connected[i] > 0) {
 18005              		.loc 1 2347 0
 18006 2042 4A4A     		ldr	r2, .L704+12
 18007 2044 D7F89430 		ldr	r3, [r7, #148]
 18008 2048 1344     		add	r3, r3, r2
 18009 204a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18010 204c 002B     		cmp	r3, #0
 18011 204e 59D0     		beq	.L674
2348:..\src/command_processing.c ****                 strcat(info_string, "Raw value [status]:\r\n");
 18012              		.loc 1 2348 0
 18013 2050 7869     		ldr	r0, [r7, #20]
 18014 2052 FFF7FEFF 		bl	strlen
 18015 2056 0346     		mov	r3, r0
 18016 2058 1A46     		mov	r2, r3
 18017 205a 7B69     		ldr	r3, [r7, #20]
 18018 205c 1344     		add	r3, r3, r2
 18019 205e 444A     		ldr	r2, .L704+16
 18020 2060 1D46     		mov	r5, r3
 18021 2062 1446     		mov	r4, r2
 18022 2064 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18023 2066 2860     		str	r0, [r5]	@ unaligned
 18024 2068 6960     		str	r1, [r5, #4]	@ unaligned
 18025 206a AA60     		str	r2, [r5, #8]	@ unaligned
 18026 206c EB60     		str	r3, [r5, #12]	@ unaligned
 18027 206e 2068     		ldr	r0, [r4]	@ unaligned
 18028 2070 2861     		str	r0, [r5, #16]	@ unaligned
 18029 2072 A388     		ldrh	r3, [r4, #4]	@ unaligned
 18030 2074 AB82     		strh	r3, [r5, #20]	@ unaligned
2349:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
 18031              		.loc 1 2349 0
 18032 2076 0023     		movs	r3, #0
 18033 2078 C7F88C30 		str	r3, [r7, #140]
 18034 207c 2CE0     		b	.L675
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 399


 18035              	.L678:
2350:..\src/command_processing.c ****                     sprintf(str, "%d\t[%s]\r\n", (uint16) Encoder_Value[i][j], (Encoder_Check[i][j]
 18036              		.loc 1 2350 0
 18037 207e 3D49     		ldr	r1, .L704+20
 18038 2080 D7F89420 		ldr	r2, [r7, #148]
 18039 2084 1346     		mov	r3, r2
 18040 2086 9B00     		lsls	r3, r3, #2
 18041 2088 1344     		add	r3, r3, r2
 18042 208a D7F88C20 		ldr	r2, [r7, #140]
 18043 208e 1344     		add	r3, r3, r2
 18044 2090 31F81330 		ldrh	r3, [r1, r3, lsl #1]
 18045 2094 1C46     		mov	r4, r3
 18046 2096 3849     		ldr	r1, .L704+24
 18047 2098 D7F89420 		ldr	r2, [r7, #148]
 18048 209c 1346     		mov	r3, r2
 18049 209e 9B00     		lsls	r3, r3, #2
 18050 20a0 1344     		add	r3, r3, r2
 18051 20a2 CA18     		adds	r2, r1, r3
 18052 20a4 D7F88C30 		ldr	r3, [r7, #140]
 18053 20a8 1344     		add	r3, r3, r2
 18054 20aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18055 20ac 102B     		cmp	r3, #16
 18056 20ae 01D1     		bne	.L676
 18057              		.loc 1 2350 0 is_stmt 0 discriminator 1
 18058 20b0 324B     		ldr	r3, .L704+28
 18059 20b2 00E0     		b	.L677
 18060              	.L676:
 18061              		.loc 1 2350 0 discriminator 2
 18062 20b4 324B     		ldr	r3, .L704+32
 18063              	.L677:
 18064              		.loc 1 2350 0 discriminator 4
 18065 20b6 07F11800 		add	r0, r7, #24
 18066 20ba 2246     		mov	r2, r4
 18067 20bc 3149     		ldr	r1, .L704+36
 18068 20be FFF7FEFF 		bl	sprintf
2351:..\src/command_processing.c ****                     strcat(info_string, str);
 18069              		.loc 1 2351 0 is_stmt 1 discriminator 4
 18070 20c2 07F11803 		add	r3, r7, #24
 18071 20c6 1946     		mov	r1, r3
 18072 20c8 7869     		ldr	r0, [r7, #20]
 18073 20ca FFF7FEFF 		bl	strcat
2349:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
 18074              		.loc 1 2349 0 discriminator 4
 18075 20ce D7F88C30 		ldr	r3, [r7, #140]
 18076 20d2 0133     		adds	r3, r3, #1
 18077 20d4 C7F88C30 		str	r3, [r7, #140]
 18078              	.L675:
2349:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
 18079              		.loc 1 2349 0 is_stmt 0 discriminator 2
 18080 20d8 244A     		ldr	r2, .L704+12
 18081 20da D7F89430 		ldr	r3, [r7, #148]
 18082 20de 1344     		add	r3, r3, r2
 18083 20e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18084 20e2 1A46     		mov	r2, r3
 18085 20e4 D7F88C30 		ldr	r3, [r7, #140]
 18086 20e8 9A42     		cmp	r2, r3
 18087 20ea C8DC     		bgt	.L678
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 400


2352:..\src/command_processing.c ****                 }
2353:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 18088              		.loc 1 2353 0 is_stmt 1
 18089 20ec 7869     		ldr	r0, [r7, #20]
 18090 20ee FFF7FEFF 		bl	strlen
 18091 20f2 0346     		mov	r3, r0
 18092 20f4 1A46     		mov	r2, r3
 18093 20f6 7B69     		ldr	r3, [r7, #20]
 18094 20f8 1344     		add	r3, r3, r2
 18095 20fa 1B4A     		ldr	r2, .L704+8
 18096 20fc 1188     		ldrh	r1, [r2]	@ unaligned
 18097 20fe 9278     		ldrb	r2, [r2, #2]
 18098 2100 1980     		strh	r1, [r3]	@ unaligned
 18099 2102 9A70     		strb	r2, [r3, #2]
 18100              	.L674:
2339:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
 18101              		.loc 1 2339 0 discriminator 2
 18102 2104 D7F89430 		ldr	r3, [r7, #148]
 18103 2108 0133     		adds	r3, r3, #1
 18104 210a C7F89430 		str	r3, [r7, #148]
 18105              	.L670:
2339:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
 18106              		.loc 1 2339 0 is_stmt 0 discriminator 1
 18107 210e D7F89430 		ldr	r3, [r7, #148]
 18108 2112 012B     		cmp	r3, #1
 18109 2114 7FF73EAF 		ble	.L679
2354:..\src/command_processing.c ****             }
2355:..\src/command_processing.c ****         }
2356:..\src/command_processing.c **** #endif   
2357:..\src/command_processing.c ****         
2358:..\src/command_processing.c **** #ifdef MASTER_FW
2359:..\src/command_processing.c ****         if (MEM_P->MS.slave_comm_active)
2360:..\src/command_processing.c ****             strcat(info_string, "Slave communication active: YES\r\n");
2361:..\src/command_processing.c ****         else
2362:..\src/command_processing.c ****             strcat(info_string, "Slave communication active: NO\r\n");
2363:..\src/command_processing.c **** 
2364:..\src/command_processing.c ****         sprintf(str, "Slave ID: %d\r\n", (int)MEM_P->MS.slave_ID);
2365:..\src/command_processing.c ****         strcat(info_string, str);
2366:..\src/command_processing.c **** #endif
2367:..\src/command_processing.c **** 
2368:..\src/command_processing.c ****         sprintf(str, "Last FW cycle time: %u us\r\n", (uint16)timer_value0 - (uint16)timer_value);
 18110              		.loc 1 2368 0 is_stmt 1
 18111 2118 1B4B     		ldr	r3, .L704+40
 18112 211a 1B88     		ldrh	r3, [r3]
 18113 211c 1A46     		mov	r2, r3
 18114 211e 1B4B     		ldr	r3, .L704+44
 18115 2120 1B88     		ldrh	r3, [r3]
 18116 2122 D21A     		subs	r2, r2, r3
 18117 2124 07F11803 		add	r3, r7, #24
 18118 2128 1949     		ldr	r1, .L704+48
 18119 212a 1846     		mov	r0, r3
 18120 212c FFF7FEFF 		bl	sprintf
2369:..\src/command_processing.c ****         strcat(info_string, str);
 18121              		.loc 1 2369 0
 18122 2130 07F11803 		add	r3, r7, #24
 18123 2134 1946     		mov	r1, r3
 18124 2136 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 401


 18125 2138 FFF7FEFF 		bl	strcat
2370:..\src/command_processing.c ****   
2371:..\src/command_processing.c ****         strcat(info_string, "\r\n\0");      // End of info_string
 18126              		.loc 1 2371 0
 18127 213c 7869     		ldr	r0, [r7, #20]
 18128 213e FFF7FEFF 		bl	strlen
 18129 2142 0346     		mov	r3, r0
 18130 2144 1A46     		mov	r2, r3
 18131 2146 7B69     		ldr	r3, [r7, #20]
 18132 2148 1344     		add	r3, r3, r2
 18133 214a 124A     		ldr	r2, .L704+52
 18134 214c 1188     		ldrh	r1, [r2]	@ unaligned
 18135 214e 9278     		ldrb	r2, [r2, #2]
 18136 2150 1980     		strh	r1, [r3]	@ unaligned
 18137 2152 9A70     		strb	r2, [r3, #2]
 18138              	.L681:
 18139              	.LBE20:
2372:..\src/command_processing.c ****     }
2373:..\src/command_processing.c **** }
 18140              		.loc 1 2373 0
 18141 2154 00BF     		nop
 18142 2156 9C37     		adds	r7, r7, #156
 18143              		.cfi_def_cfa_offset 36
 18144 2158 BD46     		mov	sp, r7
 18145              		.cfi_def_cfa_register 13
 18146              		@ sp needed
 18147 215a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 18148              	.L705:
 18149 215e 00BF     		.align	2
 18150              	.L704:
 18151 2160 B01B0000 		.word	.LC264
 18152 2164 B81B0000 		.word	.LC265
 18153 2168 5C110000 		.word	.LC152
 18154 216c 00000000 		.word	N_Encoder_Line_Connected
 18155 2170 D81B0000 		.word	.LC266
 18156 2174 00000000 		.word	Encoder_Value
 18157 2178 00000000 		.word	Encoder_Check
 18158 217c F01B0000 		.word	.LC267
 18159 2180 F41B0000 		.word	.LC268
 18160 2184 F81B0000 		.word	.LC269
 18161 2188 00000000 		.word	timer_value0
 18162 218c 00000000 		.word	timer_value
 18163 2190 041C0000 		.word	.LC270
 18164 2194 201C0000 		.word	.LC271
 18165              		.cfi_endproc
 18166              	.LFE72:
 18167              		.size	prepare_generic_info, .-prepare_generic_info
 18168              		.section	.rodata
 18169              		.align	2
 18170              	.LC272:
 18171 1c24 0D0A5553 		.ascii	"\015\012USAGE STATISTICS\015\012\000"
 18171      41474520 
 18171      53544154 
 18171      49535449 
 18171      43530D0A 
 18172 1c39 000000   		.align	2
 18173              	.LC273:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 402


 18174 1c3c 44617465 		.ascii	"Date of HW maintenance: %02d/%02d/20%02d\015\012\000"
 18174      206F6620 
 18174      4857206D 
 18174      61696E74 
 18174      656E616E 
 18175 1c67 00       		.align	2
 18176              	.LC274:
 18177 1c68 44617465 		.ascii	"Date of usage stats period begin: %02d/%02d/20%02d\015"
 18177      206F6620 
 18177      75736167 
 18177      65207374 
 18177      61747320 
 18178 1c9b 0A00     		.ascii	"\012\000"
 18179 1c9d 000000   		.align	2
 18180              	.LC275:
 18181 1ca0 4C617374 		.ascii	"Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\015"
 18181      20636865 
 18181      636B6564 
 18181      2054696D 
 18181      653A2025 
 18182 1cd3 0A00     		.ascii	"\012\000"
 18183 1cd5 000000   		.align	2
 18184              	.LC276:
 18185 1cd8 506F7369 		.ascii	"Positions histogram (ticks):\015\012\000"
 18185      74696F6E 
 18185      73206869 
 18185      73746F67 
 18185      72616D20 
 18186 1cf7 00       		.align	2
 18187              	.LC277:
 18188 1cf8 42696E20 		.ascii	"Bin %d [%d-%d]: %lu\015\012\000"
 18188      2564205B 
 18188      25642D25 
 18188      645D3A20 
 18188      256C750D 
 18189 1d0e 0000     		.align	2
 18190              	.LC278:
 18191 1d10 43757272 		.ascii	"Current histogram (mA):\015\012\000"
 18191      656E7420 
 18191      68697374 
 18191      6F677261 
 18191      6D20286D 
 18192 1d2a 0000     		.align	2
 18193              	.LC279:
 18194 1d2c 54687265 		.ascii	"Threshold %d [%d-%d]: %lu\015\012\000"
 18194      73686F6C 
 18194      64202564 
 18194      205B2564 
 18194      2D25645D 
 18195              		.align	2
 18196              	.LC280:
 18197 1d48 454D4720 		.ascii	"EMG activations counter: %lu, %lu\000"
 18197      61637469 
 18197      76617469 
 18197      6F6E7320 
 18197      636F756E 
 18198 1d6a 0000     		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 403


 18199              	.LC281:
 18200 1d6c 52657374 		.ascii	"Rest position occurrences: %lu\000"
 18200      20706F73 
 18200      6974696F 
 18200      6E206F63 
 18200      63757272 
 18201 1d8b 00       		.align	2
 18202              	.LC282:
 18203 1d8c 416E676C 		.ascii	"Angle total displacement (ticks): %lu\000"
 18203      6520746F 
 18203      74616C20 
 18203      64697370 
 18203      6C616365 
 18204 1db2 0000     		.align	2
 18205              	.LC283:
 18206 1db4 546F7461 		.ascii	"Total power on time (sec): %lu\000"
 18206      6C20706F 
 18206      77657220 
 18206      6F6E2074 
 18206      696D6520 
 18207 1dd3 00       		.align	2
 18208              	.LC284:
 18209 1dd4 546F7461 		.ascii	"Total rest position time (sec): %lu\000"
 18209      6C207265 
 18209      73742070 
 18209      6F736974 
 18209      696F6E20 
 18210              		.section	.text.prepare_counter_info,"ax",%progbits
 18211              		.align	2
 18212              		.global	prepare_counter_info
 18213              		.thumb
 18214              		.thumb_func
 18215              		.type	prepare_counter_info, %function
 18216              	prepare_counter_info:
 18217              	.LFB73:
2374:..\src/command_processing.c **** 
2375:..\src/command_processing.c **** //==============================================================================
2376:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
2377:..\src/command_processing.c **** //==============================================================================
2378:..\src/command_processing.c **** 
2379:..\src/command_processing.c **** void prepare_counter_info(char *info_string)
2380:..\src/command_processing.c **** {
 18218              		.loc 1 2380 0
 18219              		.cfi_startproc
 18220              		@ args = 0, pretend = 0, frame = 128
 18221              		@ frame_needed = 1, uses_anonymous_args = 0
 18222 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 18223              		.cfi_def_cfa_offset 20
 18224              		.cfi_offset 4, -20
 18225              		.cfi_offset 5, -16
 18226              		.cfi_offset 6, -12
 18227              		.cfi_offset 7, -8
 18228              		.cfi_offset 14, -4
 18229 0002 A5B0     		sub	sp, sp, #148
 18230              		.cfi_def_cfa_offset 168
 18231 0004 04AF     		add	r7, sp, #16
 18232              		.cfi_def_cfa 7, 152
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 404


 18233 0006 7860     		str	r0, [r7, #4]
2381:..\src/command_processing.c ****     char str[100];  
2382:..\src/command_processing.c ****     int i;
2383:..\src/command_processing.c ****     int step;
2384:..\src/command_processing.c **** 
2385:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 18234              		.loc 1 2385 0
 18235 0008 7F4B     		ldr	r3, .L712
 18236 000a BB67     		str	r3, [r7, #120]
2386:..\src/command_processing.c ****     struct st_motor* MOT = &(MEM_P->motor[0]);      // Default motor
 18237              		.loc 1 2386 0
 18238 000c BB6F     		ldr	r3, [r7, #120]
 18239 000e B033     		adds	r3, r3, #176
 18240 0010 7B67     		str	r3, [r7, #116]
2387:..\src/command_processing.c ****     uint8 ENC_L = MOT->encoder_line;                // Associated encoder line
 18241              		.loc 1 2387 0
 18242 0012 7B6F     		ldr	r3, [r7, #116]
 18243 0014 93F86030 		ldrb	r3, [r3, #96]
 18244 0018 87F87330 		strb	r3, [r7, #115]
2388:..\src/command_processing.c ****     
2389:..\src/command_processing.c ****     strcpy(info_string, "");
 18245              		.loc 1 2389 0
 18246 001c 7B68     		ldr	r3, [r7, #4]
 18247 001e 0022     		movs	r2, #0
 18248 0020 1A70     		strb	r2, [r3]
2390:..\src/command_processing.c ****     
2391:..\src/command_processing.c ****     strcat(info_string, "\r\nUSAGE STATISTICS\r\n");
 18249              		.loc 1 2391 0
 18250 0022 7868     		ldr	r0, [r7, #4]
 18251 0024 FFF7FEFF 		bl	strlen
 18252 0028 0346     		mov	r3, r0
 18253 002a 1A46     		mov	r2, r3
 18254 002c 7B68     		ldr	r3, [r7, #4]
 18255 002e 1344     		add	r3, r3, r2
 18256 0030 764A     		ldr	r2, .L712+4
 18257 0032 1D46     		mov	r5, r3
 18258 0034 1446     		mov	r4, r2
 18259 0036 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18260 0038 2860     		str	r0, [r5]	@ unaligned
 18261 003a 6960     		str	r1, [r5, #4]	@ unaligned
 18262 003c AA60     		str	r2, [r5, #8]	@ unaligned
 18263 003e EB60     		str	r3, [r5, #12]	@ unaligned
 18264 0040 2068     		ldr	r0, [r4]	@ unaligned
 18265 0042 2861     		str	r0, [r5, #16]	@ unaligned
 18266 0044 2379     		ldrb	r3, [r4, #4]
 18267 0046 2B75     		strb	r3, [r5, #20]
2392:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18268              		.loc 1 2392 0
 18269 0048 7868     		ldr	r0, [r7, #4]
 18270 004a FFF7FEFF 		bl	strlen
 18271 004e 0346     		mov	r3, r0
 18272 0050 1A46     		mov	r2, r3
 18273 0052 7B68     		ldr	r3, [r7, #4]
 18274 0054 1344     		add	r3, r3, r2
 18275 0056 6E4A     		ldr	r2, .L712+8
 18276 0058 1188     		ldrh	r1, [r2]	@ unaligned
 18277 005a 9278     		ldrb	r2, [r2, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 405


 18278 005c 1980     		strh	r1, [r3]	@ unaligned
 18279 005e 9A70     		strb	r2, [r3, #2]
2393:..\src/command_processing.c ****     
2394:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 18280              		.loc 1 2394 0
 18281 0060 BB6F     		ldr	r3, [r7, #120]
 18282 0062 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 18283 0066 1A46     		mov	r2, r3
 18284 0068 BB6F     		ldr	r3, [r7, #120]
 18285 006a 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 18286 006e 1946     		mov	r1, r3
 18287 0070 BB6F     		ldr	r3, [r7, #120]
 18288 0072 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 18289 0076 07F10800 		add	r0, r7, #8
 18290 007a 0093     		str	r3, [sp]
 18291 007c 0B46     		mov	r3, r1
 18292 007e 6549     		ldr	r1, .L712+12
 18293 0080 FFF7FEFF 		bl	sprintf
2395:..\src/command_processing.c ****     strcat(info_string, str);
 18294              		.loc 1 2395 0
 18295 0084 07F10803 		add	r3, r7, #8
 18296 0088 1946     		mov	r1, r3
 18297 008a 7868     		ldr	r0, [r7, #4]
 18298 008c FFF7FEFF 		bl	strcat
2396:..\src/command_processing.c ****     
2397:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 18299              		.loc 1 2397 0
 18300 0090 BB6F     		ldr	r3, [r7, #120]
 18301 0092 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 18302 0096 1A46     		mov	r2, r3
 18303 0098 BB6F     		ldr	r3, [r7, #120]
 18304 009a 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 18305 009e 1946     		mov	r1, r3
 18306 00a0 BB6F     		ldr	r3, [r7, #120]
 18307 00a2 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 18308 00a6 07F10800 		add	r0, r7, #8
 18309 00aa 0093     		str	r3, [sp]
 18310 00ac 0B46     		mov	r3, r1
 18311 00ae 5A49     		ldr	r1, .L712+16
 18312 00b0 FFF7FEFF 		bl	sprintf
2398:..\src/command_processing.c ****     strcat(info_string, str);
 18313              		.loc 1 2398 0
 18314 00b4 07F10803 		add	r3, r7, #8
 18315 00b8 1946     		mov	r1, r3
 18316 00ba 7868     		ldr	r0, [r7, #4]
 18317 00bc FFF7FEFF 		bl	strcat
2399:..\src/command_processing.c ****             
2400:..\src/command_processing.c ****     sprintf(str, "Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\r\n", (int)MEM_P->exp.curr_tim
 18318              		.loc 1 2400 0
 18319 00c0 BB6F     		ldr	r3, [r7, #120]
 18320 00c2 93F82032 		ldrb	r3, [r3, #544]	@ zero_extendqisi2
 18321 00c6 1D46     		mov	r5, r3
 18322 00c8 BB6F     		ldr	r3, [r7, #120]
 18323 00ca 93F82132 		ldrb	r3, [r3, #545]	@ zero_extendqisi2
 18324 00ce 1E46     		mov	r6, r3
 18325 00d0 BB6F     		ldr	r3, [r7, #120]
 18326 00d2 93F82232 		ldrb	r3, [r3, #546]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 406


 18327 00d6 1A46     		mov	r2, r3
 18328 00d8 BB6F     		ldr	r3, [r7, #120]
 18329 00da 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 18330 00de 1946     		mov	r1, r3
 18331 00e0 BB6F     		ldr	r3, [r7, #120]
 18332 00e2 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 18333 00e6 1C46     		mov	r4, r3
 18334 00e8 BB6F     		ldr	r3, [r7, #120]
 18335 00ea 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 18336 00ee 07F10800 		add	r0, r7, #8
 18337 00f2 0393     		str	r3, [sp, #12]
 18338 00f4 0294     		str	r4, [sp, #8]
 18339 00f6 0191     		str	r1, [sp, #4]
 18340 00f8 0092     		str	r2, [sp]
 18341 00fa 3346     		mov	r3, r6
 18342 00fc 2A46     		mov	r2, r5
 18343 00fe 4749     		ldr	r1, .L712+20
 18344 0100 FFF7FEFF 		bl	sprintf
2401:..\src/command_processing.c ****     strcat(info_string, str);
 18345              		.loc 1 2401 0
 18346 0104 07F10803 		add	r3, r7, #8
 18347 0108 1946     		mov	r1, r3
 18348 010a 7868     		ldr	r0, [r7, #4]
 18349 010c FFF7FEFF 		bl	strcat
2402:..\src/command_processing.c ****     
2403:..\src/command_processing.c ****     sprintf(str, "Positions histogram (ticks):\r\n");
 18350              		.loc 1 2403 0
 18351 0110 07F10803 		add	r3, r7, #8
 18352 0114 424A     		ldr	r2, .L712+24
 18353 0116 1C46     		mov	r4, r3
 18354 0118 1546     		mov	r5, r2
 18355 011a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 18356 011c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 18357 011e 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 18358 0122 07C4     		stmia	r4!, {r0, r1, r2}
 18359 0124 2380     		strh	r3, [r4]	@ movhi
 18360 0126 0234     		adds	r4, r4, #2
 18361 0128 1B0C     		lsrs	r3, r3, #16
 18362 012a 2370     		strb	r3, [r4]
2404:..\src/command_processing.c ****     strcat(info_string, str);
 18363              		.loc 1 2404 0
 18364 012c 07F10803 		add	r3, r7, #8
 18365 0130 1946     		mov	r1, r3
 18366 0132 7868     		ldr	r0, [r7, #4]
 18367 0134 FFF7FEFF 		bl	strcat
2405:..\src/command_processing.c ****     step = ( (int)(MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]) / 10);
 18368              		.loc 1 2405 0
 18369 0138 7B6F     		ldr	r3, [r7, #116]
 18370 013a 996B     		ldr	r1, [r3, #56]
 18371 013c 97F87320 		ldrb	r2, [r7, #115]	@ zero_extendqisi2
 18372 0140 B86F     		ldr	r0, [r7, #120]
 18373 0142 1346     		mov	r3, r2
 18374 0144 5B00     		lsls	r3, r3, #1
 18375 0146 1344     		add	r3, r3, r2
 18376 0148 1B01     		lsls	r3, r3, #4
 18377 014a 0344     		add	r3, r3, r0
 18378 014c 03F29513 		addw	r3, r3, #405
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 407


 18379 0150 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18380 0152 41FA03F3 		asr	r3, r1, r3
 18381 0156 334A     		ldr	r2, .L712+28
 18382 0158 82FB0312 		smull	r1, r2, r2, r3
 18383 015c 9210     		asrs	r2, r2, #2
 18384 015e DB17     		asrs	r3, r3, #31
 18385 0160 D31A     		subs	r3, r2, r3
 18386 0162 FB66     		str	r3, [r7, #108]
2406:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 18387              		.loc 1 2406 0
 18388 0164 0123     		movs	r3, #1
 18389 0166 FB67     		str	r3, [r7, #124]
 18390 0168 21E0     		b	.L707
 18391              	.L708:
2407:..\src/command_processing.c ****         sprintf(str, "Bin %d [%d-%d]: %lu\r\n", i, step*(i-1)+1, step*(i), MEM_P->cnt.position_hist
 18392              		.loc 1 2407 0 discriminator 3
 18393 016a FB6F     		ldr	r3, [r7, #124]
 18394 016c 013B     		subs	r3, r3, #1
 18395 016e FA6E     		ldr	r2, [r7, #108]
 18396 0170 02FB03F3 		mul	r3, r2, r3
 18397 0174 5C1C     		adds	r4, r3, #1
 18398 0176 FB6E     		ldr	r3, [r7, #108]
 18399 0178 FA6F     		ldr	r2, [r7, #124]
 18400 017a 02FB03F3 		mul	r3, r2, r3
 18401 017e FA6F     		ldr	r2, [r7, #124]
 18402 0180 511E     		subs	r1, r2, #1
 18403 0182 BA6F     		ldr	r2, [r7, #120]
 18404 0184 0631     		adds	r1, r1, #6
 18405 0186 52F82120 		ldr	r2, [r2, r1, lsl #2]
 18406 018a 07F10800 		add	r0, r7, #8
 18407 018e 0192     		str	r2, [sp, #4]
 18408 0190 0093     		str	r3, [sp]
 18409 0192 2346     		mov	r3, r4
 18410 0194 FA6F     		ldr	r2, [r7, #124]
 18411 0196 2449     		ldr	r1, .L712+32
 18412 0198 FFF7FEFF 		bl	sprintf
2408:..\src/command_processing.c ****         strcat(info_string, str);
 18413              		.loc 1 2408 0 discriminator 3
 18414 019c 07F10803 		add	r3, r7, #8
 18415 01a0 1946     		mov	r1, r3
 18416 01a2 7868     		ldr	r0, [r7, #4]
 18417 01a4 FFF7FEFF 		bl	strcat
2406:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 18418              		.loc 1 2406 0 discriminator 3
 18419 01a8 FB6F     		ldr	r3, [r7, #124]
 18420 01aa 0133     		adds	r3, r3, #1
 18421 01ac FB67     		str	r3, [r7, #124]
 18422              	.L707:
2406:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 18423              		.loc 1 2406 0 is_stmt 0 discriminator 1
 18424 01ae FB6F     		ldr	r3, [r7, #124]
 18425 01b0 0A2B     		cmp	r3, #10
 18426 01b2 DADD     		ble	.L708
2409:..\src/command_processing.c ****     }
2410:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18427              		.loc 1 2410 0 is_stmt 1
 18428 01b4 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 408


 18429 01b6 FFF7FEFF 		bl	strlen
 18430 01ba 0346     		mov	r3, r0
 18431 01bc 1A46     		mov	r2, r3
 18432 01be 7B68     		ldr	r3, [r7, #4]
 18433 01c0 1344     		add	r3, r3, r2
 18434 01c2 134A     		ldr	r2, .L712+8
 18435 01c4 1188     		ldrh	r1, [r2]	@ unaligned
 18436 01c6 9278     		ldrb	r2, [r2, #2]
 18437 01c8 1980     		strh	r1, [r3]	@ unaligned
 18438 01ca 9A70     		strb	r2, [r3, #2]
2411:..\src/command_processing.c ****     
2412:..\src/command_processing.c ****     sprintf(str, "Current histogram (mA):\r\n");
 18439              		.loc 1 2412 0
 18440 01cc 07F10803 		add	r3, r7, #8
 18441 01d0 164A     		ldr	r2, .L712+36
 18442 01d2 1C46     		mov	r4, r3
 18443 01d4 1546     		mov	r5, r2
 18444 01d6 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 18445 01d8 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 18446 01da 95E80700 		ldmia	r5, {r0, r1, r2}
 18447 01de 03C4     		stmia	r4!, {r0, r1}
 18448 01e0 2280     		strh	r2, [r4]	@ movhi
2413:..\src/command_processing.c ****     strcat(info_string, str);
 18449              		.loc 1 2413 0
 18450 01e2 07F10803 		add	r3, r7, #8
 18451 01e6 1946     		mov	r1, r3
 18452 01e8 7868     		ldr	r0, [r7, #4]
 18453 01ea FFF7FEFF 		bl	strcat
2414:..\src/command_processing.c ****     step = ( (int)(MOT->current_limit) / 4);
 18454              		.loc 1 2414 0
 18455 01ee 7B6F     		ldr	r3, [r7, #116]
 18456 01f0 B3F95C30 		ldrsh	r3, [r3, #92]
 18457 01f4 002B     		cmp	r3, #0
 18458 01f6 00DA     		bge	.L709
 18459 01f8 0333     		adds	r3, r3, #3
 18460              	.L709:
 18461 01fa 9B10     		asrs	r3, r3, #2
 18462 01fc 1BB2     		sxth	r3, r3
 18463 01fe FB66     		str	r3, [r7, #108]
2415:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 18464              		.loc 1 2415 0
 18465 0200 0123     		movs	r3, #1
 18466 0202 FB67     		str	r3, [r7, #124]
 18467 0204 35E0     		b	.L710
 18468              	.L713:
 18469 0206 00BF     		.align	2
 18470              	.L712:
 18471 0208 00000000 		.word	g_mem
 18472 020c 241C0000 		.word	.LC272
 18473 0210 5C110000 		.word	.LC152
 18474 0214 3C1C0000 		.word	.LC273
 18475 0218 681C0000 		.word	.LC274
 18476 021c A01C0000 		.word	.LC275
 18477 0220 D81C0000 		.word	.LC276
 18478 0224 67666666 		.word	1717986919
 18479 0228 F81C0000 		.word	.LC277
 18480 022c 101D0000 		.word	.LC278
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 409


 18481              	.L711:
2416:..\src/command_processing.c ****         sprintf(str, "Threshold %d [%d-%d]: %lu\r\n", i, step*(i-1), step*(i), MEM_P->cnt.current_h
 18482              		.loc 1 2416 0 discriminator 3
 18483 0230 FB6F     		ldr	r3, [r7, #124]
 18484 0232 013B     		subs	r3, r3, #1
 18485 0234 FA6E     		ldr	r2, [r7, #108]
 18486 0236 02FB03F4 		mul	r4, r2, r3
 18487 023a FB6E     		ldr	r3, [r7, #108]
 18488 023c FA6F     		ldr	r2, [r7, #124]
 18489 023e 02FB03F3 		mul	r3, r2, r3
 18490 0242 FA6F     		ldr	r2, [r7, #124]
 18491 0244 511E     		subs	r1, r2, #1
 18492 0246 BA6F     		ldr	r2, [r7, #120]
 18493 0248 1031     		adds	r1, r1, #16
 18494 024a 52F82120 		ldr	r2, [r2, r1, lsl #2]
 18495 024e 07F10800 		add	r0, r7, #8
 18496 0252 0192     		str	r2, [sp, #4]
 18497 0254 0093     		str	r3, [sp]
 18498 0256 2346     		mov	r3, r4
 18499 0258 FA6F     		ldr	r2, [r7, #124]
 18500 025a 5149     		ldr	r1, .L714
 18501 025c FFF7FEFF 		bl	sprintf
2417:..\src/command_processing.c ****         strcat(info_string, str);
 18502              		.loc 1 2417 0 discriminator 3
 18503 0260 07F10803 		add	r3, r7, #8
 18504 0264 1946     		mov	r1, r3
 18505 0266 7868     		ldr	r0, [r7, #4]
 18506 0268 FFF7FEFF 		bl	strcat
2415:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 18507              		.loc 1 2415 0 discriminator 3
 18508 026c FB6F     		ldr	r3, [r7, #124]
 18509 026e 0133     		adds	r3, r3, #1
 18510 0270 FB67     		str	r3, [r7, #124]
 18511              	.L710:
2415:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 18512              		.loc 1 2415 0 is_stmt 0 discriminator 1
 18513 0272 FB6F     		ldr	r3, [r7, #124]
 18514 0274 042B     		cmp	r3, #4
 18515 0276 DBDD     		ble	.L711
2418:..\src/command_processing.c ****     }
2419:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18516              		.loc 1 2419 0 is_stmt 1
 18517 0278 7868     		ldr	r0, [r7, #4]
 18518 027a FFF7FEFF 		bl	strlen
 18519 027e 0346     		mov	r3, r0
 18520 0280 1A46     		mov	r2, r3
 18521 0282 7B68     		ldr	r3, [r7, #4]
 18522 0284 1344     		add	r3, r3, r2
 18523 0286 474A     		ldr	r2, .L714+4
 18524 0288 1188     		ldrh	r1, [r2]	@ unaligned
 18525 028a 9278     		ldrb	r2, [r2, #2]
 18526 028c 1980     		strh	r1, [r3]	@ unaligned
 18527 028e 9A70     		strb	r2, [r3, #2]
2420:..\src/command_processing.c ****             
2421:..\src/command_processing.c ****     sprintf(str, "EMG activations counter: %lu, %lu", MEM_P->cnt.emg_counter[0], MEM_P->cnt.emg_cou
 18528              		.loc 1 2421 0
 18529 0290 BB6F     		ldr	r3, [r7, #120]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 410


 18530 0292 1A69     		ldr	r2, [r3, #16]
 18531 0294 BB6F     		ldr	r3, [r7, #120]
 18532 0296 5B69     		ldr	r3, [r3, #20]
 18533 0298 07F10800 		add	r0, r7, #8
 18534 029c 4249     		ldr	r1, .L714+8
 18535 029e FFF7FEFF 		bl	sprintf
2422:..\src/command_processing.c ****     strcat(info_string, str);
 18536              		.loc 1 2422 0
 18537 02a2 07F10803 		add	r3, r7, #8
 18538 02a6 1946     		mov	r1, r3
 18539 02a8 7868     		ldr	r0, [r7, #4]
 18540 02aa FFF7FEFF 		bl	strcat
2423:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18541              		.loc 1 2423 0
 18542 02ae 7868     		ldr	r0, [r7, #4]
 18543 02b0 FFF7FEFF 		bl	strlen
 18544 02b4 0346     		mov	r3, r0
 18545 02b6 1A46     		mov	r2, r3
 18546 02b8 7B68     		ldr	r3, [r7, #4]
 18547 02ba 1344     		add	r3, r3, r2
 18548 02bc 394A     		ldr	r2, .L714+4
 18549 02be 1188     		ldrh	r1, [r2]	@ unaligned
 18550 02c0 9278     		ldrb	r2, [r2, #2]
 18551 02c2 1980     		strh	r1, [r3]	@ unaligned
 18552 02c4 9A70     		strb	r2, [r3, #2]
2424:..\src/command_processing.c ****     
2425:..\src/command_processing.c ****     sprintf(str, "Rest position occurrences: %lu", MEM_P->cnt.rest_counter);
 18553              		.loc 1 2425 0
 18554 02c6 BB6F     		ldr	r3, [r7, #120]
 18555 02c8 1A6D     		ldr	r2, [r3, #80]
 18556 02ca 07F10803 		add	r3, r7, #8
 18557 02ce 3749     		ldr	r1, .L714+12
 18558 02d0 1846     		mov	r0, r3
 18559 02d2 FFF7FEFF 		bl	sprintf
2426:..\src/command_processing.c ****     strcat(info_string, str);
 18560              		.loc 1 2426 0
 18561 02d6 07F10803 		add	r3, r7, #8
 18562 02da 1946     		mov	r1, r3
 18563 02dc 7868     		ldr	r0, [r7, #4]
 18564 02de FFF7FEFF 		bl	strcat
2427:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18565              		.loc 1 2427 0
 18566 02e2 7868     		ldr	r0, [r7, #4]
 18567 02e4 FFF7FEFF 		bl	strlen
 18568 02e8 0346     		mov	r3, r0
 18569 02ea 1A46     		mov	r2, r3
 18570 02ec 7B68     		ldr	r3, [r7, #4]
 18571 02ee 1344     		add	r3, r3, r2
 18572 02f0 2C4A     		ldr	r2, .L714+4
 18573 02f2 1188     		ldrh	r1, [r2]	@ unaligned
 18574 02f4 9278     		ldrb	r2, [r2, #2]
 18575 02f6 1980     		strh	r1, [r3]	@ unaligned
 18576 02f8 9A70     		strb	r2, [r3, #2]
2428:..\src/command_processing.c ****     
2429:..\src/command_processing.c ****     sprintf(str, "Angle total displacement (ticks): %lu", MEM_P->cnt.wire_disp);
 18577              		.loc 1 2429 0
 18578 02fa BB6F     		ldr	r3, [r7, #120]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 411


 18579 02fc 5A6D     		ldr	r2, [r3, #84]
 18580 02fe 07F10803 		add	r3, r7, #8
 18581 0302 2B49     		ldr	r1, .L714+16
 18582 0304 1846     		mov	r0, r3
 18583 0306 FFF7FEFF 		bl	sprintf
2430:..\src/command_processing.c ****     strcat(info_string, str);
 18584              		.loc 1 2430 0
 18585 030a 07F10803 		add	r3, r7, #8
 18586 030e 1946     		mov	r1, r3
 18587 0310 7868     		ldr	r0, [r7, #4]
 18588 0312 FFF7FEFF 		bl	strcat
2431:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18589              		.loc 1 2431 0
 18590 0316 7868     		ldr	r0, [r7, #4]
 18591 0318 FFF7FEFF 		bl	strlen
 18592 031c 0346     		mov	r3, r0
 18593 031e 1A46     		mov	r2, r3
 18594 0320 7B68     		ldr	r3, [r7, #4]
 18595 0322 1344     		add	r3, r3, r2
 18596 0324 1F4A     		ldr	r2, .L714+4
 18597 0326 1188     		ldrh	r1, [r2]	@ unaligned
 18598 0328 9278     		ldrb	r2, [r2, #2]
 18599 032a 1980     		strh	r1, [r3]	@ unaligned
 18600 032c 9A70     		strb	r2, [r3, #2]
2432:..\src/command_processing.c ****     
2433:..\src/command_processing.c ****     sprintf(str, "Total power on time (sec): %lu", MEM_P->cnt.total_time_on);
 18601              		.loc 1 2433 0
 18602 032e BB6F     		ldr	r3, [r7, #120]
 18603 0330 9A6D     		ldr	r2, [r3, #88]
 18604 0332 07F10803 		add	r3, r7, #8
 18605 0336 1F49     		ldr	r1, .L714+20
 18606 0338 1846     		mov	r0, r3
 18607 033a FFF7FEFF 		bl	sprintf
2434:..\src/command_processing.c ****     strcat(info_string, str);
 18608              		.loc 1 2434 0
 18609 033e 07F10803 		add	r3, r7, #8
 18610 0342 1946     		mov	r1, r3
 18611 0344 7868     		ldr	r0, [r7, #4]
 18612 0346 FFF7FEFF 		bl	strcat
2435:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18613              		.loc 1 2435 0
 18614 034a 7868     		ldr	r0, [r7, #4]
 18615 034c FFF7FEFF 		bl	strlen
 18616 0350 0346     		mov	r3, r0
 18617 0352 1A46     		mov	r2, r3
 18618 0354 7B68     		ldr	r3, [r7, #4]
 18619 0356 1344     		add	r3, r3, r2
 18620 0358 124A     		ldr	r2, .L714+4
 18621 035a 1188     		ldrh	r1, [r2]	@ unaligned
 18622 035c 9278     		ldrb	r2, [r2, #2]
 18623 035e 1980     		strh	r1, [r3]	@ unaligned
 18624 0360 9A70     		strb	r2, [r3, #2]
2436:..\src/command_processing.c ****     
2437:..\src/command_processing.c ****     sprintf(str, "Total rest position time (sec): %lu", MEM_P->cnt.total_time_rest);
 18625              		.loc 1 2437 0
 18626 0362 BB6F     		ldr	r3, [r7, #120]
 18627 0364 DA6D     		ldr	r2, [r3, #92]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 412


 18628 0366 07F10803 		add	r3, r7, #8
 18629 036a 1349     		ldr	r1, .L714+24
 18630 036c 1846     		mov	r0, r3
 18631 036e FFF7FEFF 		bl	sprintf
2438:..\src/command_processing.c ****     strcat(info_string, str);
 18632              		.loc 1 2438 0
 18633 0372 07F10803 		add	r3, r7, #8
 18634 0376 1946     		mov	r1, r3
 18635 0378 7868     		ldr	r0, [r7, #4]
 18636 037a FFF7FEFF 		bl	strcat
2439:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18637              		.loc 1 2439 0
 18638 037e 7868     		ldr	r0, [r7, #4]
 18639 0380 FFF7FEFF 		bl	strlen
 18640 0384 0346     		mov	r3, r0
 18641 0386 1A46     		mov	r2, r3
 18642 0388 7B68     		ldr	r3, [r7, #4]
 18643 038a 1344     		add	r3, r3, r2
 18644 038c 054A     		ldr	r2, .L714+4
 18645 038e 1188     		ldrh	r1, [r2]	@ unaligned
 18646 0390 9278     		ldrb	r2, [r2, #2]
 18647 0392 1980     		strh	r1, [r3]	@ unaligned
 18648 0394 9A70     		strb	r2, [r3, #2]
2440:..\src/command_processing.c **** 
2441:..\src/command_processing.c **** }
 18649              		.loc 1 2441 0
 18650 0396 00BF     		nop
 18651 0398 8437     		adds	r7, r7, #132
 18652              		.cfi_def_cfa_offset 20
 18653 039a BD46     		mov	sp, r7
 18654              		.cfi_def_cfa_register 13
 18655              		@ sp needed
 18656 039c F0BD     		pop	{r4, r5, r6, r7, pc}
 18657              	.L715:
 18658 039e 00BF     		.align	2
 18659              	.L714:
 18660 03a0 2C1D0000 		.word	.LC279
 18661 03a4 5C110000 		.word	.LC152
 18662 03a8 481D0000 		.word	.LC280
 18663 03ac 6C1D0000 		.word	.LC281
 18664 03b0 8C1D0000 		.word	.LC282
 18665 03b4 B41D0000 		.word	.LC283
 18666 03b8 D41D0000 		.word	.LC284
 18667              		.cfi_endproc
 18668              	.LFE73:
 18669              		.size	prepare_counter_info, .-prepare_counter_info
 18670              		.section	.rodata
 18671              		.align	2
 18672              	.LC285:
 18673 1df8 4669726D 		.ascii	"Firmware version: %s\015\012\000"
 18673      77617265 
 18673      20766572 
 18673      73696F6E 
 18673      3A202573 
 18674 1e0f 00       		.align	2
 18675              	.LC286:
 18676 1e10 506F7369 		.ascii	"Position PID: \000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 413


 18676      74696F6E 
 18676      20504944 
 18676      3A2000
 18677 1e1f 00       		.align	2
 18678              	.LC287:
 18679 1e20 43757272 		.ascii	"Current PID: \000"
 18679      656E7420 
 18679      5049443A 
 18679      2000
 18680 1e2e 0000     		.align	2
 18681              	.LC288:
 18682 1e30 5265736F 		.ascii	"Resolutions: \000"
 18682      6C757469 
 18682      6F6E733A 
 18682      2000
 18683 1e3e 0000     		.align	2
 18684              	.LC289:
 18685 1e40 4F666673 		.ascii	"Offsets: \000"
 18685      6574733A 
 18685      2000
 18686 1e4a 0000     		.align	2
 18687              	.LC290:
 18688 1e4c 4D756C74 		.ascii	"Multipliers: \000"
 18688      69706C69 
 18688      6572733A 
 18688      2000
 18689 1e5a 0000     		.align	2
 18690              	.LC291:
 18691 1e5c 43757272 		.ascii	"Current lookup table p[0] - p[5]: %f, %f, %f, %f, %"
 18691      656E7420 
 18691      6C6F6F6B 
 18691      75702074 
 18691      61626C65 
 18692 1e8f 662C2025 		.ascii	"f, %f\015\012\000"
 18692      660D0A00 
 18693 1e97 00       		.align	2
 18694              	.LC292:
 18695 1e98 506F7369 		.ascii	"Position limit active: %d\015\012\000"
 18695      74696F6E 
 18695      206C696D 
 18695      69742061 
 18695      63746976 
 18696              		.align	2
 18697              	.LC293:
 18698 1eb4 506F7369 		.ascii	"Position limits: inf -> %ld, sup -> %ld\015\012\000"
 18698      74696F6E 
 18698      206C696D 
 18698      6974733A 
 18698      20696E66 
 18699              		.section	.text.prepare_SD_param_info,"ax",%progbits
 18700              		.align	2
 18701              		.global	prepare_SD_param_info
 18702              		.thumb
 18703              		.thumb_func
 18704              		.type	prepare_SD_param_info, %function
 18705              	prepare_SD_param_info:
 18706              	.LFB74:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 414


2442:..\src/command_processing.c **** 
2443:..\src/command_processing.c **** //==============================================================================
2444:..\src/command_processing.c **** //                                                    PREPARE SD CARD PARAM INFO
2445:..\src/command_processing.c **** //==============================================================================
2446:..\src/command_processing.c **** 
2447:..\src/command_processing.c **** void prepare_SD_param_info(char *info_string)
2448:..\src/command_processing.c **** {
 18707              		.loc 1 2448 0
 18708              		.cfi_startproc
 18709              		@ args = 0, pretend = 0, frame = 152
 18710              		@ frame_needed = 1, uses_anonymous_args = 0
 18711 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 18712              		.cfi_def_cfa_offset 36
 18713              		.cfi_offset 4, -36
 18714              		.cfi_offset 5, -32
 18715              		.cfi_offset 6, -28
 18716              		.cfi_offset 7, -24
 18717              		.cfi_offset 8, -20
 18718              		.cfi_offset 9, -16
 18719              		.cfi_offset 10, -12
 18720              		.cfi_offset 11, -8
 18721              		.cfi_offset 14, -4
 18722 0004 B1B0     		sub	sp, sp, #196
 18723              		.cfi_def_cfa_offset 232
 18724 0006 0AAF     		add	r7, sp, #40
 18725              		.cfi_def_cfa 7, 192
 18726 0008 7861     		str	r0, [r7, #20]
2449:..\src/command_processing.c ****     char str[100];  
2450:..\src/command_processing.c ****     int i;
2451:..\src/command_processing.c ****            
2452:..\src/command_processing.c ****     // NOTE: use g_mem structure instead of c_mem because when changing parameters c_mem struct is 
2453:..\src/command_processing.c ****     
2454:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 18727              		.loc 1 2454 0
 18728 000a AC4B     		ldr	r3, .L781
 18729 000c C7F88C30 		str	r3, [r7, #140]
2455:..\src/command_processing.c ****         
2456:..\src/command_processing.c ****     sprintf(info_string, "Firmware version: %s\r\n", VERSION);
 18730              		.loc 1 2456 0
 18731 0010 AB4A     		ldr	r2, .L781+4
 18732 0012 AC49     		ldr	r1, .L781+8
 18733 0014 7869     		ldr	r0, [r7, #20]
 18734 0016 FFF7FEFF 		bl	sprintf
2457:..\src/command_processing.c ****     
2458:..\src/command_processing.c ****     sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 18735              		.loc 1 2458 0
 18736 001a D7F88C30 		ldr	r3, [r7, #140]
 18737 001e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 18738 0022 1A46     		mov	r2, r3
 18739 0024 07F11C03 		add	r3, r7, #28
 18740 0028 A749     		ldr	r1, .L781+12
 18741 002a 1846     		mov	r0, r3
 18742 002c FFF7FEFF 		bl	sprintf
2459:..\src/command_processing.c ****     strcat(info_string, str);
 18743              		.loc 1 2459 0
 18744 0030 07F11C03 		add	r3, r7, #28
 18745 0034 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 415


 18746 0036 7869     		ldr	r0, [r7, #20]
 18747 0038 FFF7FEFF 		bl	strcat
2460:..\src/command_processing.c ****     switch(MEM_P->dev.right_left){
 18748              		.loc 1 2460 0
 18749 003c D7F88C30 		ldr	r3, [r7, #140]
 18750 0040 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 18751 0044 002B     		cmp	r3, #0
 18752 0046 02D0     		beq	.L718
 18753 0048 012B     		cmp	r3, #1
 18754 004a 15D0     		beq	.L719
 18755 004c 26E0     		b	.L717
 18756              	.L718:
2461:..\src/command_processing.c ****         case RIGHT_HAND:
2462:..\src/command_processing.c ****             strcat(info_string, "Hand side: RIGHT\r\n");
 18757              		.loc 1 2462 0
 18758 004e 7869     		ldr	r0, [r7, #20]
 18759 0050 FFF7FEFF 		bl	strlen
 18760 0054 0346     		mov	r3, r0
 18761 0056 1A46     		mov	r2, r3
 18762 0058 7B69     		ldr	r3, [r7, #20]
 18763 005a 1344     		add	r3, r3, r2
 18764 005c 9B4A     		ldr	r2, .L781+16
 18765 005e 1D46     		mov	r5, r3
 18766 0060 1446     		mov	r4, r2
 18767 0062 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18768 0064 2860     		str	r0, [r5]	@ unaligned
 18769 0066 6960     		str	r1, [r5, #4]	@ unaligned
 18770 0068 AA60     		str	r2, [r5, #8]	@ unaligned
 18771 006a EB60     		str	r3, [r5, #12]	@ unaligned
 18772 006c 2388     		ldrh	r3, [r4]	@ unaligned
 18773 006e A278     		ldrb	r2, [r4, #2]
 18774 0070 2B82     		strh	r3, [r5, #16]	@ unaligned
 18775 0072 1346     		mov	r3, r2
 18776 0074 AB74     		strb	r3, [r5, #18]
2463:..\src/command_processing.c ****             break;
 18777              		.loc 1 2463 0
 18778 0076 11E0     		b	.L717
 18779              	.L719:
2464:..\src/command_processing.c ****         case LEFT_HAND:
2465:..\src/command_processing.c ****             strcat(info_string, "Hand side: LEFT\r\n");
 18780              		.loc 1 2465 0
 18781 0078 7869     		ldr	r0, [r7, #20]
 18782 007a FFF7FEFF 		bl	strlen
 18783 007e 0346     		mov	r3, r0
 18784 0080 1A46     		mov	r2, r3
 18785 0082 7B69     		ldr	r3, [r7, #20]
 18786 0084 1344     		add	r3, r3, r2
 18787 0086 924A     		ldr	r2, .L781+20
 18788 0088 1D46     		mov	r5, r3
 18789 008a 1446     		mov	r4, r2
 18790 008c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18791 008e 2860     		str	r0, [r5]	@ unaligned
 18792 0090 6960     		str	r1, [r5, #4]	@ unaligned
 18793 0092 AA60     		str	r2, [r5, #8]	@ unaligned
 18794 0094 EB60     		str	r3, [r5, #12]	@ unaligned
 18795 0096 2388     		ldrh	r3, [r4]	@ unaligned
 18796 0098 2B82     		strh	r3, [r5, #16]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 416


2466:..\src/command_processing.c ****             break;
 18797              		.loc 1 2466 0
 18798 009a 00BF     		nop
 18799              	.L717:
2467:..\src/command_processing.c ****     }
2468:..\src/command_processing.c **** 
2469:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 18800              		.loc 1 2469 0
 18801 009c D7F88C30 		ldr	r3, [r7, #140]
 18802 00a0 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 18803 00a4 1A46     		mov	r2, r3
 18804 00a6 D7F88C30 		ldr	r3, [r7, #140]
 18805 00aa 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 18806 00ae 1946     		mov	r1, r3
 18807 00b0 D7F88C30 		ldr	r3, [r7, #140]
 18808 00b4 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 18809 00b8 07F11C00 		add	r0, r7, #28
 18810 00bc 0093     		str	r3, [sp]
 18811 00be 0B46     		mov	r3, r1
 18812 00c0 8449     		ldr	r1, .L781+24
 18813 00c2 FFF7FEFF 		bl	sprintf
2470:..\src/command_processing.c ****     strcat(info_string, str);
 18814              		.loc 1 2470 0
 18815 00c6 07F11C03 		add	r3, r7, #28
 18816 00ca 1946     		mov	r1, r3
 18817 00cc 7869     		ldr	r0, [r7, #20]
 18818 00ce FFF7FEFF 		bl	strcat
2471:..\src/command_processing.c ****     
2472:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 18819              		.loc 1 2472 0
 18820 00d2 D7F88C30 		ldr	r3, [r7, #140]
 18821 00d6 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 18822 00da 1A46     		mov	r2, r3
 18823 00dc D7F88C30 		ldr	r3, [r7, #140]
 18824 00e0 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 18825 00e4 1946     		mov	r1, r3
 18826 00e6 D7F88C30 		ldr	r3, [r7, #140]
 18827 00ea 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 18828 00ee 07F11C00 		add	r0, r7, #28
 18829 00f2 0093     		str	r3, [sp]
 18830 00f4 0B46     		mov	r3, r1
 18831 00f6 7849     		ldr	r1, .L781+28
 18832 00f8 FFF7FEFF 		bl	sprintf
2473:..\src/command_processing.c ****     strcat(info_string, str);
 18833              		.loc 1 2473 0
 18834 00fc 07F11C03 		add	r3, r7, #28
 18835 0100 1946     		mov	r1, r3
 18836 0102 7869     		ldr	r0, [r7, #20]
 18837 0104 FFF7FEFF 		bl	strcat
 18838              	.LBB23:
2474:..\src/command_processing.c ****     
2475:..\src/command_processing.c **** 	for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 18839              		.loc 1 2475 0
 18840 0108 0023     		movs	r3, #0
 18841 010a 87F89330 		strb	r3, [r7, #147]
 18842 010e 00F05EBE 		b	.L720
 18843              	.L764:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 417


 18844              	.LBB24:
2476:..\src/command_processing.c ****             
2477:..\src/command_processing.c **** 	    uint8 MOTOR_IDX = k;
 18845              		.loc 1 2477 0
 18846 0112 97F89330 		ldrb	r3, [r7, #147]
 18847 0116 87F88B30 		strb	r3, [r7, #139]
2478:..\src/command_processing.c ****         struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 18848              		.loc 1 2478 0
 18849 011a 97F88B20 		ldrb	r2, [r7, #139]	@ zero_extendqisi2
 18850 011e 1346     		mov	r3, r2
 18851 0120 DB00     		lsls	r3, r3, #3
 18852 0122 9B1A     		subs	r3, r3, r2
 18853 0124 1B01     		lsls	r3, r3, #4
 18854 0126 B033     		adds	r3, r3, #176
 18855 0128 D7F88C20 		ldr	r2, [r7, #140]
 18856 012c 1344     		add	r3, r3, r2
 18857 012e C7F88430 		str	r3, [r7, #132]
2479:..\src/command_processing.c ****         uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 18858              		.loc 1 2479 0
 18859 0132 D7F88430 		ldr	r3, [r7, #132]
 18860 0136 93F86030 		ldrb	r3, [r3, #96]
 18861 013a 87F88330 		strb	r3, [r7, #131]
2480:..\src/command_processing.c ****               
2481:..\src/command_processing.c ****         sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 18862              		.loc 1 2481 0
 18863 013e 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 18864 0142 5A1C     		adds	r2, r3, #1
 18865 0144 07F11C03 		add	r3, r7, #28
 18866 0148 6449     		ldr	r1, .L781+32
 18867 014a 1846     		mov	r0, r3
 18868 014c FFF7FEFF 		bl	sprintf
2482:..\src/command_processing.c ****         strcat(info_string, str);
 18869              		.loc 1 2482 0
 18870 0150 07F11C03 		add	r3, r7, #28
 18871 0154 1946     		mov	r1, r3
 18872 0156 7869     		ldr	r0, [r7, #20]
 18873 0158 FFF7FEFF 		bl	strcat
2483:..\src/command_processing.c ****                     
2484:..\src/command_processing.c ****         strcat(info_string, "PWM rescaling activation: ");
 18874              		.loc 1 2484 0
 18875 015c 7869     		ldr	r0, [r7, #20]
 18876 015e FFF7FEFF 		bl	strlen
 18877 0162 0346     		mov	r3, r0
 18878 0164 1A46     		mov	r2, r3
 18879 0166 7B69     		ldr	r3, [r7, #20]
 18880 0168 1344     		add	r3, r3, r2
 18881 016a 5D4A     		ldr	r2, .L781+36
 18882 016c 1D46     		mov	r5, r3
 18883 016e 1446     		mov	r4, r2
 18884 0170 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18885 0172 2860     		str	r0, [r5]	@ unaligned
 18886 0174 6960     		str	r1, [r5, #4]	@ unaligned
 18887 0176 AA60     		str	r2, [r5, #8]	@ unaligned
 18888 0178 EB60     		str	r3, [r5, #12]	@ unaligned
 18889 017a 03CC     		ldmia	r4!, {r0, r1}
 18890 017c 2861     		str	r0, [r5, #16]	@ unaligned
 18891 017e 6961     		str	r1, [r5, #20]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 418


 18892 0180 2388     		ldrh	r3, [r4]	@ unaligned
 18893 0182 A278     		ldrb	r2, [r4, #2]
 18894 0184 2B83     		strh	r3, [r5, #24]	@ unaligned
 18895 0186 1346     		mov	r3, r2
 18896 0188 AB76     		strb	r3, [r5, #26]
2485:..\src/command_processing.c ****         if(MOT->activate_pwm_rescaling == MAXON_12V)
 18897              		.loc 1 2485 0
 18898 018a D7F88430 		ldr	r3, [r7, #132]
 18899 018e 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 18900 0192 012B     		cmp	r3, #1
 18901 0194 0CD1     		bne	.L721
2486:..\src/command_processing.c ****             strcat(info_string, "YES\r\n");
 18902              		.loc 1 2486 0
 18903 0196 7869     		ldr	r0, [r7, #20]
 18904 0198 FFF7FEFF 		bl	strlen
 18905 019c 0346     		mov	r3, r0
 18906 019e 1A46     		mov	r2, r3
 18907 01a0 7B69     		ldr	r3, [r7, #20]
 18908 01a2 1344     		add	r3, r3, r2
 18909 01a4 4F4A     		ldr	r2, .L781+40
 18910 01a6 1068     		ldr	r0, [r2]	@ unaligned
 18911 01a8 1860     		str	r0, [r3]	@ unaligned
 18912 01aa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 18913 01ac 9A80     		strh	r2, [r3, #4]	@ unaligned
 18914 01ae 0BE0     		b	.L722
 18915              	.L721:
2487:..\src/command_processing.c ****         else
2488:..\src/command_processing.c ****             strcat(info_string, "NO\r\n");
 18916              		.loc 1 2488 0
 18917 01b0 7869     		ldr	r0, [r7, #20]
 18918 01b2 FFF7FEFF 		bl	strlen
 18919 01b6 0346     		mov	r3, r0
 18920 01b8 1A46     		mov	r2, r3
 18921 01ba 7B69     		ldr	r3, [r7, #20]
 18922 01bc 1344     		add	r3, r3, r2
 18923 01be 4A4A     		ldr	r2, .L781+44
 18924 01c0 1068     		ldr	r0, [r2]	@ unaligned
 18925 01c2 1860     		str	r0, [r3]	@ unaligned
 18926 01c4 1279     		ldrb	r2, [r2, #4]
 18927 01c6 1A71     		strb	r2, [r3, #4]
 18928              	.L722:
2489:..\src/command_processing.c ****         
2490:..\src/command_processing.c ****         sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 18929              		.loc 1 2490 0
 18930 01c8 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 18931 01cc 474A     		ldr	r2, .L781+48
 18932 01ce 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 18933 01d2 1A46     		mov	r2, r3
 18934 01d4 07F11C03 		add	r3, r7, #28
 18935 01d8 4549     		ldr	r1, .L781+52
 18936 01da 1846     		mov	r0, r3
 18937 01dc FFF7FEFF 		bl	sprintf
2491:..\src/command_processing.c ****         strcat(info_string, str);
 18938              		.loc 1 2491 0
 18939 01e0 07F11C03 		add	r3, r7, #28
 18940 01e4 1946     		mov	r1, r3
 18941 01e6 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 419


 18942 01e8 FFF7FEFF 		bl	strcat
2492:..\src/command_processing.c **** 
2493:..\src/command_processing.c ****         strcat(info_string, "Position PID: ");
 18943              		.loc 1 2493 0
 18944 01ec 7869     		ldr	r0, [r7, #20]
 18945 01ee FFF7FEFF 		bl	strlen
 18946 01f2 0346     		mov	r3, r0
 18947 01f4 1A46     		mov	r2, r3
 18948 01f6 7B69     		ldr	r3, [r7, #20]
 18949 01f8 1344     		add	r3, r3, r2
 18950 01fa 3E4A     		ldr	r2, .L781+56
 18951 01fc 1C46     		mov	r4, r3
 18952 01fe 1346     		mov	r3, r2
 18953 0200 07CB     		ldmia	r3!, {r0, r1, r2}
 18954 0202 2060     		str	r0, [r4]	@ unaligned
 18955 0204 6160     		str	r1, [r4, #4]	@ unaligned
 18956 0206 A260     		str	r2, [r4, #8]	@ unaligned
 18957 0208 1A88     		ldrh	r2, [r3]	@ unaligned
 18958 020a 9B78     		ldrb	r3, [r3, #2]
 18959 020c A281     		strh	r2, [r4, #12]	@ unaligned
 18960 020e A373     		strb	r3, [r4, #14]
2494:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 18961              		.loc 1 2494 0
 18962 0210 D7F88430 		ldr	r3, [r7, #132]
 18963 0214 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 18964 0218 032B     		cmp	r3, #3
 18965 021a 75D0     		beq	.L723
2495:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 18966              		.loc 1 2495 0
 18967 021c D7F88430 		ldr	r3, [r7, #132]
 18968 0220 1B68     		ldr	r3, [r3]
 18969 0222 1846     		mov	r0, r3
 18970 0224 FFF7FEFF 		bl	__aeabi_i2d
 18971 0228 4FF00002 		mov	r2, #0
 18972 022c 324B     		ldr	r3, .L781+60
 18973 022e FFF7FEFF 		bl	__aeabi_ddiv
 18974 0232 0346     		mov	r3, r0
 18975 0234 0C46     		mov	r4, r1
 18976 0236 07F11C00 		add	r0, r7, #28
 18977 023a 1A46     		mov	r2, r3
 18978 023c 2346     		mov	r3, r4
 18979 023e 2F49     		ldr	r1, .L781+64
 18980 0240 FFF7FEFF 		bl	sprintf
2496:..\src/command_processing.c ****             strcat(info_string, str);
 18981              		.loc 1 2496 0
 18982 0244 07F11C03 		add	r3, r7, #28
 18983 0248 1946     		mov	r1, r3
 18984 024a 7869     		ldr	r0, [r7, #20]
 18985 024c FFF7FEFF 		bl	strcat
2497:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 18986              		.loc 1 2497 0
 18987 0250 D7F88430 		ldr	r3, [r7, #132]
 18988 0254 5B68     		ldr	r3, [r3, #4]
 18989 0256 1846     		mov	r0, r3
 18990 0258 FFF7FEFF 		bl	__aeabi_i2d
 18991 025c 4FF00002 		mov	r2, #0
 18992 0260 254B     		ldr	r3, .L781+60
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 420


 18993 0262 FFF7FEFF 		bl	__aeabi_ddiv
 18994 0266 0346     		mov	r3, r0
 18995 0268 0C46     		mov	r4, r1
 18996 026a 07F11C00 		add	r0, r7, #28
 18997 026e 1A46     		mov	r2, r3
 18998 0270 2346     		mov	r3, r4
 18999 0272 2349     		ldr	r1, .L781+68
 19000 0274 FFF7FEFF 		bl	sprintf
2498:..\src/command_processing.c ****             strcat(info_string, str);
 19001              		.loc 1 2498 0
 19002 0278 07F11C03 		add	r3, r7, #28
 19003 027c 1946     		mov	r1, r3
 19004 027e 7869     		ldr	r0, [r7, #20]
 19005 0280 FFF7FEFF 		bl	strcat
2499:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 19006              		.loc 1 2499 0
 19007 0284 D7F88430 		ldr	r3, [r7, #132]
 19008 0288 9B68     		ldr	r3, [r3, #8]
 19009 028a 1846     		mov	r0, r3
 19010 028c FFF7FEFF 		bl	__aeabi_i2d
 19011 0290 4FF00002 		mov	r2, #0
 19012 0294 184B     		ldr	r3, .L781+60
 19013 0296 FFF7FEFF 		bl	__aeabi_ddiv
 19014 029a 0346     		mov	r3, r0
 19015 029c 0C46     		mov	r4, r1
 19016 029e 07F11C00 		add	r0, r7, #28
 19017 02a2 1A46     		mov	r2, r3
 19018 02a4 2346     		mov	r3, r4
 19019 02a6 1749     		ldr	r1, .L781+72
 19020 02a8 FFF7FEFF 		bl	sprintf
2500:..\src/command_processing.c ****             strcat(info_string, str);
 19021              		.loc 1 2500 0
 19022 02ac 07F11C03 		add	r3, r7, #28
 19023 02b0 1946     		mov	r1, r3
 19024 02b2 7869     		ldr	r0, [r7, #20]
 19025 02b4 FFF7FEFF 		bl	strcat
 19026 02b8 74E0     		b	.L724
 19027              	.L782:
 19028 02ba 00BF     		.align	2
 19029              	.L781:
 19030 02bc 00000000 		.word	g_mem
 19031 02c0 74110000 		.word	.LC154
 19032 02c4 F81D0000 		.word	.LC285
 19033 02c8 B0110000 		.word	.LC157
 19034 02cc 60120000 		.word	.LC163
 19035 02d0 74120000 		.word	.LC164
 19036 02d4 3C1C0000 		.word	.LC273
 19037 02d8 681C0000 		.word	.LC274
 19038 02dc C0120000 		.word	.LC168
 19039 02e0 30130000 		.word	.LC177
 19040 02e4 20130000 		.word	.LC175
 19041 02e8 28130000 		.word	.LC176
 19042 02ec 00000000 		.word	dev_pwm_limit
 19043 02f0 58130000 		.word	.LC180
 19044 02f4 101E0000 		.word	.LC286
 19045 02f8 0000F040 		.word	1089470464
 19046 02fc 70140000 		.word	.LC192
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 421


 19047 0300 7C140000 		.word	.LC193
 19048 0304 88140000 		.word	.LC194
 19049              	.L723:
2501:..\src/command_processing.c ****         }
2502:..\src/command_processing.c ****         else { 
2503:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 19050              		.loc 1 2503 0
 19051 0308 D7F88430 		ldr	r3, [r7, #132]
 19052 030c 9B69     		ldr	r3, [r3, #24]
 19053 030e 1846     		mov	r0, r3
 19054 0310 FFF7FEFF 		bl	__aeabi_i2d
 19055 0314 4FF00002 		mov	r2, #0
 19056 0318 CC4B     		ldr	r3, .L783
 19057 031a FFF7FEFF 		bl	__aeabi_ddiv
 19058 031e 0346     		mov	r3, r0
 19059 0320 0C46     		mov	r4, r1
 19060 0322 07F11C00 		add	r0, r7, #28
 19061 0326 1A46     		mov	r2, r3
 19062 0328 2346     		mov	r3, r4
 19063 032a C949     		ldr	r1, .L783+4
 19064 032c FFF7FEFF 		bl	sprintf
2504:..\src/command_processing.c ****             strcat(info_string, str);
 19065              		.loc 1 2504 0
 19066 0330 07F11C03 		add	r3, r7, #28
 19067 0334 1946     		mov	r1, r3
 19068 0336 7869     		ldr	r0, [r7, #20]
 19069 0338 FFF7FEFF 		bl	strcat
2505:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 19070              		.loc 1 2505 0
 19071 033c D7F88430 		ldr	r3, [r7, #132]
 19072 0340 DB69     		ldr	r3, [r3, #28]
 19073 0342 1846     		mov	r0, r3
 19074 0344 FFF7FEFF 		bl	__aeabi_i2d
 19075 0348 4FF00002 		mov	r2, #0
 19076 034c BF4B     		ldr	r3, .L783
 19077 034e FFF7FEFF 		bl	__aeabi_ddiv
 19078 0352 0346     		mov	r3, r0
 19079 0354 0C46     		mov	r4, r1
 19080 0356 07F11C00 		add	r0, r7, #28
 19081 035a 1A46     		mov	r2, r3
 19082 035c 2346     		mov	r3, r4
 19083 035e BD49     		ldr	r1, .L783+8
 19084 0360 FFF7FEFF 		bl	sprintf
2506:..\src/command_processing.c ****             strcat(info_string, str);
 19085              		.loc 1 2506 0
 19086 0364 07F11C03 		add	r3, r7, #28
 19087 0368 1946     		mov	r1, r3
 19088 036a 7869     		ldr	r0, [r7, #20]
 19089 036c FFF7FEFF 		bl	strcat
2507:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 19090              		.loc 1 2507 0
 19091 0370 D7F88430 		ldr	r3, [r7, #132]
 19092 0374 1B6A     		ldr	r3, [r3, #32]
 19093 0376 1846     		mov	r0, r3
 19094 0378 FFF7FEFF 		bl	__aeabi_i2d
 19095 037c 4FF00002 		mov	r2, #0
 19096 0380 B24B     		ldr	r3, .L783
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 422


 19097 0382 FFF7FEFF 		bl	__aeabi_ddiv
 19098 0386 0346     		mov	r3, r0
 19099 0388 0C46     		mov	r4, r1
 19100 038a 07F11C00 		add	r0, r7, #28
 19101 038e 1A46     		mov	r2, r3
 19102 0390 2346     		mov	r3, r4
 19103 0392 B149     		ldr	r1, .L783+12
 19104 0394 FFF7FEFF 		bl	sprintf
2508:..\src/command_processing.c ****             strcat(info_string, str);
 19105              		.loc 1 2508 0
 19106 0398 07F11C03 		add	r3, r7, #28
 19107 039c 1946     		mov	r1, r3
 19108 039e 7869     		ldr	r0, [r7, #20]
 19109 03a0 FFF7FEFF 		bl	strcat
 19110              	.L724:
2509:..\src/command_processing.c ****         }
2510:..\src/command_processing.c **** 
2511:..\src/command_processing.c ****         strcat(info_string, "Current PID: ");
 19111              		.loc 1 2511 0
 19112 03a4 7869     		ldr	r0, [r7, #20]
 19113 03a6 FFF7FEFF 		bl	strlen
 19114 03aa 0346     		mov	r3, r0
 19115 03ac 1A46     		mov	r2, r3
 19116 03ae 7B69     		ldr	r3, [r7, #20]
 19117 03b0 1344     		add	r3, r3, r2
 19118 03b2 AA4A     		ldr	r2, .L783+16
 19119 03b4 1C46     		mov	r4, r3
 19120 03b6 1346     		mov	r3, r2
 19121 03b8 07CB     		ldmia	r3!, {r0, r1, r2}
 19122 03ba 2060     		str	r0, [r4]	@ unaligned
 19123 03bc 6160     		str	r1, [r4, #4]	@ unaligned
 19124 03be A260     		str	r2, [r4, #8]	@ unaligned
 19125 03c0 1B88     		ldrh	r3, [r3]	@ unaligned
 19126 03c2 A381     		strh	r3, [r4, #12]	@ unaligned
2512:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 19127              		.loc 1 2512 0
 19128 03c4 D7F88430 		ldr	r3, [r7, #132]
 19129 03c8 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 19130 03cc 032B     		cmp	r3, #3
 19131 03ce 4ED0     		beq	.L725
2513:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 19132              		.loc 1 2513 0
 19133 03d0 D7F88430 		ldr	r3, [r7, #132]
 19134 03d4 DB68     		ldr	r3, [r3, #12]
 19135 03d6 1846     		mov	r0, r3
 19136 03d8 FFF7FEFF 		bl	__aeabi_i2d
 19137 03dc 4FF00002 		mov	r2, #0
 19138 03e0 9A4B     		ldr	r3, .L783
 19139 03e2 FFF7FEFF 		bl	__aeabi_ddiv
 19140 03e6 0346     		mov	r3, r0
 19141 03e8 0C46     		mov	r4, r1
 19142 03ea 07F11C00 		add	r0, r7, #28
 19143 03ee 1A46     		mov	r2, r3
 19144 03f0 2346     		mov	r3, r4
 19145 03f2 9749     		ldr	r1, .L783+4
 19146 03f4 FFF7FEFF 		bl	sprintf
2514:..\src/command_processing.c ****             strcat(info_string, str);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 423


 19147              		.loc 1 2514 0
 19148 03f8 07F11C03 		add	r3, r7, #28
 19149 03fc 1946     		mov	r1, r3
 19150 03fe 7869     		ldr	r0, [r7, #20]
 19151 0400 FFF7FEFF 		bl	strcat
2515:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 19152              		.loc 1 2515 0
 19153 0404 D7F88430 		ldr	r3, [r7, #132]
 19154 0408 1B69     		ldr	r3, [r3, #16]
 19155 040a 1846     		mov	r0, r3
 19156 040c FFF7FEFF 		bl	__aeabi_i2d
 19157 0410 4FF00002 		mov	r2, #0
 19158 0414 8D4B     		ldr	r3, .L783
 19159 0416 FFF7FEFF 		bl	__aeabi_ddiv
 19160 041a 0346     		mov	r3, r0
 19161 041c 0C46     		mov	r4, r1
 19162 041e 07F11C00 		add	r0, r7, #28
 19163 0422 1A46     		mov	r2, r3
 19164 0424 2346     		mov	r3, r4
 19165 0426 8B49     		ldr	r1, .L783+8
 19166 0428 FFF7FEFF 		bl	sprintf
2516:..\src/command_processing.c ****             strcat(info_string, str);
 19167              		.loc 1 2516 0
 19168 042c 07F11C03 		add	r3, r7, #28
 19169 0430 1946     		mov	r1, r3
 19170 0432 7869     		ldr	r0, [r7, #20]
 19171 0434 FFF7FEFF 		bl	strcat
2517:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 19172              		.loc 1 2517 0
 19173 0438 D7F88430 		ldr	r3, [r7, #132]
 19174 043c 5B69     		ldr	r3, [r3, #20]
 19175 043e 1846     		mov	r0, r3
 19176 0440 FFF7FEFF 		bl	__aeabi_i2d
 19177 0444 4FF00002 		mov	r2, #0
 19178 0448 804B     		ldr	r3, .L783
 19179 044a FFF7FEFF 		bl	__aeabi_ddiv
 19180 044e 0346     		mov	r3, r0
 19181 0450 0C46     		mov	r4, r1
 19182 0452 07F11C00 		add	r0, r7, #28
 19183 0456 1A46     		mov	r2, r3
 19184 0458 2346     		mov	r3, r4
 19185 045a 7F49     		ldr	r1, .L783+12
 19186 045c FFF7FEFF 		bl	sprintf
2518:..\src/command_processing.c ****             strcat(info_string, str);
 19187              		.loc 1 2518 0
 19188 0460 07F11C03 		add	r3, r7, #28
 19189 0464 1946     		mov	r1, r3
 19190 0466 7869     		ldr	r0, [r7, #20]
 19191 0468 FFF7FEFF 		bl	strcat
 19192 046c 4DE0     		b	.L726
 19193              	.L725:
2519:..\src/command_processing.c **** 
2520:..\src/command_processing.c ****         }
2521:..\src/command_processing.c ****         else {
2522:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 19194              		.loc 1 2522 0
 19195 046e D7F88430 		ldr	r3, [r7, #132]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 424


 19196 0472 5B6A     		ldr	r3, [r3, #36]
 19197 0474 1846     		mov	r0, r3
 19198 0476 FFF7FEFF 		bl	__aeabi_i2d
 19199 047a 4FF00002 		mov	r2, #0
 19200 047e 734B     		ldr	r3, .L783
 19201 0480 FFF7FEFF 		bl	__aeabi_ddiv
 19202 0484 0346     		mov	r3, r0
 19203 0486 0C46     		mov	r4, r1
 19204 0488 07F11C00 		add	r0, r7, #28
 19205 048c 1A46     		mov	r2, r3
 19206 048e 2346     		mov	r3, r4
 19207 0490 6F49     		ldr	r1, .L783+4
 19208 0492 FFF7FEFF 		bl	sprintf
2523:..\src/command_processing.c ****             strcat(info_string, str);
 19209              		.loc 1 2523 0
 19210 0496 07F11C03 		add	r3, r7, #28
 19211 049a 1946     		mov	r1, r3
 19212 049c 7869     		ldr	r0, [r7, #20]
 19213 049e FFF7FEFF 		bl	strcat
2524:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 19214              		.loc 1 2524 0
 19215 04a2 D7F88430 		ldr	r3, [r7, #132]
 19216 04a6 9B6A     		ldr	r3, [r3, #40]
 19217 04a8 1846     		mov	r0, r3
 19218 04aa FFF7FEFF 		bl	__aeabi_i2d
 19219 04ae 4FF00002 		mov	r2, #0
 19220 04b2 664B     		ldr	r3, .L783
 19221 04b4 FFF7FEFF 		bl	__aeabi_ddiv
 19222 04b8 0346     		mov	r3, r0
 19223 04ba 0C46     		mov	r4, r1
 19224 04bc 07F11C00 		add	r0, r7, #28
 19225 04c0 1A46     		mov	r2, r3
 19226 04c2 2346     		mov	r3, r4
 19227 04c4 6349     		ldr	r1, .L783+8
 19228 04c6 FFF7FEFF 		bl	sprintf
2525:..\src/command_processing.c ****             strcat(info_string, str);
 19229              		.loc 1 2525 0
 19230 04ca 07F11C03 		add	r3, r7, #28
 19231 04ce 1946     		mov	r1, r3
 19232 04d0 7869     		ldr	r0, [r7, #20]
 19233 04d2 FFF7FEFF 		bl	strcat
2526:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 19234              		.loc 1 2526 0
 19235 04d6 D7F88430 		ldr	r3, [r7, #132]
 19236 04da DB6A     		ldr	r3, [r3, #44]
 19237 04dc 1846     		mov	r0, r3
 19238 04de FFF7FEFF 		bl	__aeabi_i2d
 19239 04e2 4FF00002 		mov	r2, #0
 19240 04e6 594B     		ldr	r3, .L783
 19241 04e8 FFF7FEFF 		bl	__aeabi_ddiv
 19242 04ec 0346     		mov	r3, r0
 19243 04ee 0C46     		mov	r4, r1
 19244 04f0 07F11C00 		add	r0, r7, #28
 19245 04f4 1A46     		mov	r2, r3
 19246 04f6 2346     		mov	r3, r4
 19247 04f8 5749     		ldr	r1, .L783+12
 19248 04fa FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 425


2527:..\src/command_processing.c ****             strcat(info_string, str);
 19249              		.loc 1 2527 0
 19250 04fe 07F11C03 		add	r3, r7, #28
 19251 0502 1946     		mov	r1, r3
 19252 0504 7869     		ldr	r0, [r7, #20]
 19253 0506 FFF7FEFF 		bl	strcat
 19254              	.L726:
2528:..\src/command_processing.c ****         }
2529:..\src/command_processing.c ****         if (MOT->activ == 0x01)
 19255              		.loc 1 2529 0
 19256 050a D7F88430 		ldr	r3, [r7, #132]
 19257 050e 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 19258 0512 012B     		cmp	r3, #1
 19259 0514 14D1     		bne	.L727
2530:..\src/command_processing.c ****             strcat(info_string, "Startup activation: YES\r\n");
 19260              		.loc 1 2530 0
 19261 0516 7869     		ldr	r0, [r7, #20]
 19262 0518 FFF7FEFF 		bl	strlen
 19263 051c 0346     		mov	r3, r0
 19264 051e 1A46     		mov	r2, r3
 19265 0520 7B69     		ldr	r3, [r7, #20]
 19266 0522 1344     		add	r3, r3, r2
 19267 0524 4E4A     		ldr	r2, .L783+20
 19268 0526 1D46     		mov	r5, r3
 19269 0528 1446     		mov	r4, r2
 19270 052a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19271 052c 2860     		str	r0, [r5]	@ unaligned
 19272 052e 6960     		str	r1, [r5, #4]	@ unaligned
 19273 0530 AA60     		str	r2, [r5, #8]	@ unaligned
 19274 0532 EB60     		str	r3, [r5, #12]	@ unaligned
 19275 0534 03CC     		ldmia	r4!, {r0, r1}
 19276 0536 2861     		str	r0, [r5, #16]	@ unaligned
 19277 0538 6961     		str	r1, [r5, #20]	@ unaligned
 19278 053a 2388     		ldrh	r3, [r4]	@ unaligned
 19279 053c 2B83     		strh	r3, [r5, #24]	@ unaligned
 19280 053e 13E0     		b	.L728
 19281              	.L727:
2531:..\src/command_processing.c ****         else
2532:..\src/command_processing.c ****             strcat(info_string, "Startup activation: NO\r\n");
 19282              		.loc 1 2532 0
 19283 0540 7869     		ldr	r0, [r7, #20]
 19284 0542 FFF7FEFF 		bl	strlen
 19285 0546 0346     		mov	r3, r0
 19286 0548 1A46     		mov	r2, r3
 19287 054a 7B69     		ldr	r3, [r7, #20]
 19288 054c 1344     		add	r3, r3, r2
 19289 054e 454A     		ldr	r2, .L783+24
 19290 0550 1D46     		mov	r5, r3
 19291 0552 1446     		mov	r4, r2
 19292 0554 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19293 0556 2860     		str	r0, [r5]	@ unaligned
 19294 0558 6960     		str	r1, [r5, #4]	@ unaligned
 19295 055a AA60     		str	r2, [r5, #8]	@ unaligned
 19296 055c EB60     		str	r3, [r5, #12]	@ unaligned
 19297 055e 03CC     		ldmia	r4!, {r0, r1}
 19298 0560 2861     		str	r0, [r5, #16]	@ unaligned
 19299 0562 6961     		str	r1, [r5, #20]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 426


 19300 0564 2378     		ldrb	r3, [r4]
 19301 0566 2B76     		strb	r3, [r5, #24]
 19302              	.L728:
2533:..\src/command_processing.c **** 
2534:..\src/command_processing.c ****         switch(MOT->input_mode) {
 19303              		.loc 1 2534 0
 19304 0568 D7F88430 		ldr	r3, [r7, #132]
 19305 056c 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 19306 0570 072B     		cmp	r3, #7
 19307 0572 00F2EA80 		bhi	.L729
 19308 0576 01A2     		adr	r2, .L731
 19309 0578 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 19310              		.p2align 2
 19311              	.L731:
 19312 057c 9D050000 		.word	.L730+1
 19313 0580 C1050000 		.word	.L732+1
 19314 0584 E9050000 		.word	.L733+1
 19315 0588 1B060000 		.word	.L734+1
 19316 058c 79060000 		.word	.L735+1
 19317 0590 A7060000 		.word	.L736+1
 19318 0594 D7060000 		.word	.L737+1
 19319 0598 05070000 		.word	.L738+1
 19320              		.p2align 1
 19321              	.L730:
2535:..\src/command_processing.c ****             case INPUT_MODE_EXTERNAL:
2536:..\src/command_processing.c ****                 strcat(info_string, "Input mode: USB\r\n");
 19322              		.loc 1 2536 0
 19323 059c 7869     		ldr	r0, [r7, #20]
 19324 059e FFF7FEFF 		bl	strlen
 19325 05a2 0346     		mov	r3, r0
 19326 05a4 1A46     		mov	r2, r3
 19327 05a6 7B69     		ldr	r3, [r7, #20]
 19328 05a8 1344     		add	r3, r3, r2
 19329 05aa 2F4A     		ldr	r2, .L783+28
 19330 05ac 1D46     		mov	r5, r3
 19331 05ae 1446     		mov	r4, r2
 19332 05b0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19333 05b2 2860     		str	r0, [r5]	@ unaligned
 19334 05b4 6960     		str	r1, [r5, #4]	@ unaligned
 19335 05b6 AA60     		str	r2, [r5, #8]	@ unaligned
 19336 05b8 EB60     		str	r3, [r5, #12]	@ unaligned
 19337 05ba 2388     		ldrh	r3, [r4]	@ unaligned
 19338 05bc 2B82     		strh	r3, [r5, #16]	@ unaligned
2537:..\src/command_processing.c ****                 break;
 19339              		.loc 1 2537 0
 19340 05be C4E0     		b	.L729
 19341              	.L732:
2538:..\src/command_processing.c ****             case INPUT_MODE_ENCODER3:
2539:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Handle\r\n");
 19342              		.loc 1 2539 0
 19343 05c0 7869     		ldr	r0, [r7, #20]
 19344 05c2 FFF7FEFF 		bl	strlen
 19345 05c6 0346     		mov	r3, r0
 19346 05c8 1A46     		mov	r2, r3
 19347 05ca 7B69     		ldr	r3, [r7, #20]
 19348 05cc 1344     		add	r3, r3, r2
 19349 05ce 274A     		ldr	r2, .L783+32
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 427


 19350 05d0 1D46     		mov	r5, r3
 19351 05d2 1446     		mov	r4, r2
 19352 05d4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19353 05d6 2860     		str	r0, [r5]	@ unaligned
 19354 05d8 6960     		str	r1, [r5, #4]	@ unaligned
 19355 05da AA60     		str	r2, [r5, #8]	@ unaligned
 19356 05dc EB60     		str	r3, [r5, #12]	@ unaligned
 19357 05de 2068     		ldr	r0, [r4]	@ unaligned
 19358 05e0 2861     		str	r0, [r5, #16]	@ unaligned
 19359 05e2 2379     		ldrb	r3, [r4, #4]
 19360 05e4 2B75     		strb	r3, [r5, #20]
2540:..\src/command_processing.c ****                 break;
 19361              		.loc 1 2540 0
 19362 05e6 B0E0     		b	.L729
 19363              	.L733:
2541:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL:
2542:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional\r\n");
 19364              		.loc 1 2542 0
 19365 05e8 7869     		ldr	r0, [r7, #20]
 19366 05ea FFF7FEFF 		bl	strlen
 19367 05ee 0346     		mov	r3, r0
 19368 05f0 1A46     		mov	r2, r3
 19369 05f2 7B69     		ldr	r3, [r7, #20]
 19370 05f4 1344     		add	r3, r3, r2
 19371 05f6 1E4A     		ldr	r2, .L783+36
 19372 05f8 1D46     		mov	r5, r3
 19373 05fa 1446     		mov	r4, r2
 19374 05fc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19375 05fe 2860     		str	r0, [r5]	@ unaligned
 19376 0600 6960     		str	r1, [r5, #4]	@ unaligned
 19377 0602 AA60     		str	r2, [r5, #8]	@ unaligned
 19378 0604 EB60     		str	r3, [r5, #12]	@ unaligned
 19379 0606 07CC     		ldmia	r4!, {r0, r1, r2}
 19380 0608 2861     		str	r0, [r5, #16]	@ unaligned
 19381 060a 6961     		str	r1, [r5, #20]	@ unaligned
 19382 060c AA61     		str	r2, [r5, #24]	@ unaligned
 19383 060e 2388     		ldrh	r3, [r4]	@ unaligned
 19384 0610 A278     		ldrb	r2, [r4, #2]
 19385 0612 AB83     		strh	r3, [r5, #28]	@ unaligned
 19386 0614 1346     		mov	r3, r2
 19387 0616 AB77     		strb	r3, [r5, #30]
2543:..\src/command_processing.c ****                 break;
 19388              		.loc 1 2543 0
 19389 0618 97E0     		b	.L729
 19390              	.L734:
2544:..\src/command_processing.c ****             case INPUT_MODE_EMG_INTEGRAL:
2545:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG integral\r\n");
 19391              		.loc 1 2545 0
 19392 061a 7869     		ldr	r0, [r7, #20]
 19393 061c FFF7FEFF 		bl	strlen
 19394 0620 0346     		mov	r3, r0
 19395 0622 1A46     		mov	r2, r3
 19396 0624 7B69     		ldr	r3, [r7, #20]
 19397 0626 1344     		add	r3, r3, r2
 19398 0628 124A     		ldr	r2, .L783+40
 19399 062a 1D46     		mov	r5, r3
 19400 062c 1446     		mov	r4, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 428


 19401 062e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19402 0630 2860     		str	r0, [r5]	@ unaligned
 19403 0632 6960     		str	r1, [r5, #4]	@ unaligned
 19404 0634 AA60     		str	r2, [r5, #8]	@ unaligned
 19405 0636 EB60     		str	r3, [r5, #12]	@ unaligned
 19406 0638 03CC     		ldmia	r4!, {r0, r1}
 19407 063a 2861     		str	r0, [r5, #16]	@ unaligned
 19408 063c 6961     		str	r1, [r5, #20]	@ unaligned
 19409 063e 2388     		ldrh	r3, [r4]	@ unaligned
 19410 0640 A278     		ldrb	r2, [r4, #2]
 19411 0642 2B83     		strh	r3, [r5, #24]	@ unaligned
 19412 0644 1346     		mov	r3, r2
 19413 0646 AB76     		strb	r3, [r5, #26]
2546:..\src/command_processing.c ****                 break;
 19414              		.loc 1 2546 0
 19415 0648 7FE0     		b	.L729
 19416              	.L784:
 19417 064a 00BF     		.align	2
 19418              	.L783:
 19419 064c 0000F040 		.word	1089470464
 19420 0650 70140000 		.word	.LC192
 19421 0654 7C140000 		.word	.LC193
 19422 0658 88140000 		.word	.LC194
 19423 065c 201E0000 		.word	.LC287
 19424 0660 B0140000 		.word	.LC196
 19425 0664 CC140000 		.word	.LC197
 19426 0668 E8140000 		.word	.LC198
 19427 066c FC140000 		.word	.LC199
 19428 0670 14150000 		.word	.LC200
 19429 0674 34150000 		.word	.LC201
 19430              	.L735:
2547:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS:
2548:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS\r\n");
 19431              		.loc 1 2548 0
 19432 0678 7869     		ldr	r0, [r7, #20]
 19433 067a FFF7FEFF 		bl	strlen
 19434 067e 0346     		mov	r3, r0
 19435 0680 1A46     		mov	r2, r3
 19436 0682 7B69     		ldr	r3, [r7, #20]
 19437 0684 1344     		add	r3, r3, r2
 19438 0686 BA4A     		ldr	r2, .L785
 19439 0688 1C46     		mov	r4, r3
 19440 068a 1546     		mov	r5, r2
 19441 068c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19442 068e 2060     		str	r0, [r4]	@ unaligned
 19443 0690 6160     		str	r1, [r4, #4]	@ unaligned
 19444 0692 A260     		str	r2, [r4, #8]	@ unaligned
 19445 0694 E360     		str	r3, [r4, #12]	@ unaligned
 19446 0696 2868     		ldr	r0, [r5]	@ unaligned
 19447 0698 2061     		str	r0, [r4, #16]	@ unaligned
 19448 069a AB88     		ldrh	r3, [r5, #4]	@ unaligned
 19449 069c AA79     		ldrb	r2, [r5, #6]
 19450 069e A382     		strh	r3, [r4, #20]	@ unaligned
 19451 06a0 1346     		mov	r3, r2
 19452 06a2 A375     		strb	r3, [r4, #22]
2549:..\src/command_processing.c ****                 break;
 19453              		.loc 1 2549 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 429


 19454 06a4 51E0     		b	.L729
 19455              	.L736:
2550:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS_ADV:
2551:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 19456              		.loc 1 2551 0
 19457 06a6 7869     		ldr	r0, [r7, #20]
 19458 06a8 FFF7FEFF 		bl	strlen
 19459 06ac 0346     		mov	r3, r0
 19460 06ae 1A46     		mov	r2, r3
 19461 06b0 7B69     		ldr	r3, [r7, #20]
 19462 06b2 1344     		add	r3, r3, r2
 19463 06b4 AF4A     		ldr	r2, .L785+4
 19464 06b6 1D46     		mov	r5, r3
 19465 06b8 1446     		mov	r4, r2
 19466 06ba 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19467 06bc 2860     		str	r0, [r5]	@ unaligned
 19468 06be 6960     		str	r1, [r5, #4]	@ unaligned
 19469 06c0 AA60     		str	r2, [r5, #8]	@ unaligned
 19470 06c2 EB60     		str	r3, [r5, #12]	@ unaligned
 19471 06c4 03CC     		ldmia	r4!, {r0, r1}
 19472 06c6 2861     		str	r0, [r5, #16]	@ unaligned
 19473 06c8 6961     		str	r1, [r5, #20]	@ unaligned
 19474 06ca 2388     		ldrh	r3, [r4]	@ unaligned
 19475 06cc A278     		ldrb	r2, [r4, #2]
 19476 06ce 2B83     		strh	r3, [r5, #24]	@ unaligned
 19477 06d0 1346     		mov	r3, r2
 19478 06d2 AB76     		strb	r3, [r5, #26]
2552:..\src/command_processing.c ****                 break;
 19479              		.loc 1 2552 0
 19480 06d4 39E0     		b	.L729
 19481              	.L737:
2553:..\src/command_processing.c ****             case INPUT_MODE_JOYSTICK:
2554:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Joystick\r\n");
 19482              		.loc 1 2554 0
 19483 06d6 7869     		ldr	r0, [r7, #20]
 19484 06d8 FFF7FEFF 		bl	strlen
 19485 06dc 0346     		mov	r3, r0
 19486 06de 1A46     		mov	r2, r3
 19487 06e0 7B69     		ldr	r3, [r7, #20]
 19488 06e2 1344     		add	r3, r3, r2
 19489 06e4 A44A     		ldr	r2, .L785+8
 19490 06e6 1C46     		mov	r4, r3
 19491 06e8 1546     		mov	r5, r2
 19492 06ea 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19493 06ec 2060     		str	r0, [r4]	@ unaligned
 19494 06ee 6160     		str	r1, [r4, #4]	@ unaligned
 19495 06f0 A260     		str	r2, [r4, #8]	@ unaligned
 19496 06f2 E360     		str	r3, [r4, #12]	@ unaligned
 19497 06f4 2868     		ldr	r0, [r5]	@ unaligned
 19498 06f6 2061     		str	r0, [r4, #16]	@ unaligned
 19499 06f8 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 19500 06fa AA79     		ldrb	r2, [r5, #6]
 19501 06fc A382     		strh	r3, [r4, #20]	@ unaligned
 19502 06fe 1346     		mov	r3, r2
 19503 0700 A375     		strb	r3, [r4, #22]
2555:..\src/command_processing.c ****                 break;
 19504              		.loc 1 2555 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 430


 19505 0702 22E0     		b	.L729
 19506              	.L738:
2556:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL_NC:
2557:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 19507              		.loc 1 2557 0
 19508 0704 7869     		ldr	r0, [r7, #20]
 19509 0706 FFF7FEFF 		bl	strlen
 19510 070a 0346     		mov	r3, r0
 19511 070c 1A46     		mov	r2, r3
 19512 070e 7B69     		ldr	r3, [r7, #20]
 19513 0710 1344     		add	r3, r3, r2
 19514 0712 9A4A     		ldr	r2, .L785+12
 19515 0714 1546     		mov	r5, r2
 19516 0716 9E46     		mov	lr, r3
 19517 0718 05F1200C 		add	ip, r5, #32
 19518              	.L739:
 19519 071c 7446     		mov	r4, lr
 19520 071e 2E46     		mov	r6, r5
 19521 0720 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 19522 0722 2060     		str	r0, [r4]	@ unaligned
 19523 0724 6160     		str	r1, [r4, #4]	@ unaligned
 19524 0726 A260     		str	r2, [r4, #8]	@ unaligned
 19525 0728 E360     		str	r3, [r4, #12]	@ unaligned
 19526 072a 1035     		adds	r5, r5, #16
 19527 072c 0EF1100E 		add	lr, lr, #16
 19528 0730 6545     		cmp	r5, ip
 19529 0732 F3D1     		bne	.L739
 19530 0734 7446     		mov	r4, lr
 19531 0736 2B46     		mov	r3, r5
 19532 0738 07CB     		ldmia	r3!, {r0, r1, r2}
 19533 073a 2060     		str	r0, [r4]	@ unaligned
 19534 073c 6160     		str	r1, [r4, #4]	@ unaligned
 19535 073e A260     		str	r2, [r4, #8]	@ unaligned
 19536 0740 1A88     		ldrh	r2, [r3]	@ unaligned
 19537 0742 9B78     		ldrb	r3, [r3, #2]
 19538 0744 A281     		strh	r2, [r4, #12]	@ unaligned
 19539 0746 A373     		strb	r3, [r4, #14]
2558:..\src/command_processing.c ****                 break;
 19540              		.loc 1 2558 0
 19541 0748 00BF     		nop
 19542              	.L729:
2559:..\src/command_processing.c ****         }
2560:..\src/command_processing.c **** 
2561:..\src/command_processing.c ****         switch(MOT->control_mode) {
 19543              		.loc 1 2561 0
 19544 074a D7F88430 		ldr	r3, [r7, #132]
 19545 074e 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 19546 0752 032B     		cmp	r3, #3
 19547 0754 63D8     		bhi	.L779
 19548 0756 01A2     		adr	r2, .L742
 19549 0758 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 19550              		.p2align 2
 19551              	.L742:
 19552 075c 6D070000 		.word	.L741+1
 19553 0760 97070000 		.word	.L743+1
 19554 0764 BB070000 		.word	.L744+1
 19555 0768 E1070000 		.word	.L745+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 431


 19556              		.p2align 1
 19557              	.L741:
2562:..\src/command_processing.c ****             case CONTROL_ANGLE:
2563:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position\r\n");
 19558              		.loc 1 2563 0
 19559 076c 7869     		ldr	r0, [r7, #20]
 19560 076e FFF7FEFF 		bl	strlen
 19561 0772 0346     		mov	r3, r0
 19562 0774 1A46     		mov	r2, r3
 19563 0776 7B69     		ldr	r3, [r7, #20]
 19564 0778 1344     		add	r3, r3, r2
 19565 077a 814A     		ldr	r2, .L785+16
 19566 077c 1D46     		mov	r5, r3
 19567 077e 1446     		mov	r4, r2
 19568 0780 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19569 0782 2860     		str	r0, [r5]	@ unaligned
 19570 0784 6960     		str	r1, [r5, #4]	@ unaligned
 19571 0786 AA60     		str	r2, [r5, #8]	@ unaligned
 19572 0788 EB60     		str	r3, [r5, #12]	@ unaligned
 19573 078a 03CC     		ldmia	r4!, {r0, r1}
 19574 078c 2861     		str	r0, [r5, #16]	@ unaligned
 19575 078e 6961     		str	r1, [r5, #20]	@ unaligned
 19576 0790 2378     		ldrb	r3, [r4]
 19577 0792 2B76     		strb	r3, [r5, #24]
2564:..\src/command_processing.c ****                 break;
 19578              		.loc 1 2564 0
 19579 0794 44E0     		b	.L746
 19580              	.L743:
2565:..\src/command_processing.c ****             case CONTROL_PWM:
2566:..\src/command_processing.c ****                 strcat(info_string, "Control mode: PWM\r\n");
 19581              		.loc 1 2566 0
 19582 0796 7869     		ldr	r0, [r7, #20]
 19583 0798 FFF7FEFF 		bl	strlen
 19584 079c 0346     		mov	r3, r0
 19585 079e 1A46     		mov	r2, r3
 19586 07a0 7B69     		ldr	r3, [r7, #20]
 19587 07a2 1344     		add	r3, r3, r2
 19588 07a4 774A     		ldr	r2, .L785+20
 19589 07a6 1D46     		mov	r5, r3
 19590 07a8 1446     		mov	r4, r2
 19591 07aa 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19592 07ac 2860     		str	r0, [r5]	@ unaligned
 19593 07ae 6960     		str	r1, [r5, #4]	@ unaligned
 19594 07b0 AA60     		str	r2, [r5, #8]	@ unaligned
 19595 07b2 EB60     		str	r3, [r5, #12]	@ unaligned
 19596 07b4 2068     		ldr	r0, [r4]	@ unaligned
 19597 07b6 2861     		str	r0, [r5, #16]	@ unaligned
2567:..\src/command_processing.c ****                 break;
 19598              		.loc 1 2567 0
 19599 07b8 32E0     		b	.L746
 19600              	.L744:
2568:..\src/command_processing.c ****             case CONTROL_CURRENT:
2569:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Current\r\n");
 19601              		.loc 1 2569 0
 19602 07ba 7869     		ldr	r0, [r7, #20]
 19603 07bc FFF7FEFF 		bl	strlen
 19604 07c0 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 432


 19605 07c2 1A46     		mov	r2, r3
 19606 07c4 7B69     		ldr	r3, [r7, #20]
 19607 07c6 1344     		add	r3, r3, r2
 19608 07c8 6F4A     		ldr	r2, .L785+24
 19609 07ca 1D46     		mov	r5, r3
 19610 07cc 1446     		mov	r4, r2
 19611 07ce 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19612 07d0 2860     		str	r0, [r5]	@ unaligned
 19613 07d2 6960     		str	r1, [r5, #4]	@ unaligned
 19614 07d4 AA60     		str	r2, [r5, #8]	@ unaligned
 19615 07d6 EB60     		str	r3, [r5, #12]	@ unaligned
 19616 07d8 03CC     		ldmia	r4!, {r0, r1}
 19617 07da 2861     		str	r0, [r5, #16]	@ unaligned
 19618 07dc 6961     		str	r1, [r5, #20]	@ unaligned
2570:..\src/command_processing.c ****                 break;
 19619              		.loc 1 2570 0
 19620 07de 1FE0     		b	.L746
 19621              	.L745:
2571:..\src/command_processing.c ****             case CURR_AND_POS_CONTROL:
2572:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position and Current\r\n");
 19622              		.loc 1 2572 0
 19623 07e0 7869     		ldr	r0, [r7, #20]
 19624 07e2 FFF7FEFF 		bl	strlen
 19625 07e6 0346     		mov	r3, r0
 19626 07e8 1A46     		mov	r2, r3
 19627 07ea 7B69     		ldr	r3, [r7, #20]
 19628 07ec 1344     		add	r3, r3, r2
 19629 07ee 674A     		ldr	r2, .L785+28
 19630 07f0 1446     		mov	r4, r2
 19631 07f2 9E46     		mov	lr, r3
 19632 07f4 04F1200C 		add	ip, r4, #32
 19633              	.L747:
 19634 07f8 7546     		mov	r5, lr
 19635 07fa 2646     		mov	r6, r4
 19636 07fc 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 19637 07fe 2860     		str	r0, [r5]	@ unaligned
 19638 0800 6960     		str	r1, [r5, #4]	@ unaligned
 19639 0802 AA60     		str	r2, [r5, #8]	@ unaligned
 19640 0804 EB60     		str	r3, [r5, #12]	@ unaligned
 19641 0806 1034     		adds	r4, r4, #16
 19642 0808 0EF1100E 		add	lr, lr, #16
 19643 080c 6445     		cmp	r4, ip
 19644 080e F3D1     		bne	.L747
 19645 0810 7346     		mov	r3, lr
 19646 0812 2246     		mov	r2, r4
 19647 0814 1068     		ldr	r0, [r2]	@ unaligned
 19648 0816 1860     		str	r0, [r3]	@ unaligned
 19649 0818 1279     		ldrb	r2, [r2, #4]
 19650 081a 1A71     		strb	r2, [r3, #4]
2573:..\src/command_processing.c ****                 break;
 19651              		.loc 1 2573 0
 19652 081c 00E0     		b	.L746
 19653              	.L779:
2574:..\src/command_processing.c ****             default:
2575:..\src/command_processing.c ****                 break;
 19654              		.loc 1 2575 0
 19655 081e 00BF     		nop
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 433


 19656              	.L746:
2576:..\src/command_processing.c ****         }
2577:..\src/command_processing.c **** 
2578:..\src/command_processing.c ****         if (MEM_P->enc[ENC_L].double_encoder_on_off)
 19657              		.loc 1 2578 0
 19658 0820 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19659 0824 D7F88C10 		ldr	r1, [r7, #140]
 19660 0828 1346     		mov	r3, r2
 19661 082a 5B00     		lsls	r3, r3, #1
 19662 082c 1344     		add	r3, r3, r2
 19663 082e 1B01     		lsls	r3, r3, #4
 19664 0830 0B44     		add	r3, r3, r1
 19665 0832 03F5D873 		add	r3, r3, #432
 19666 0836 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19667 0838 002B     		cmp	r3, #0
 19668 083a 1CD0     		beq	.L748
2579:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: YES\r\n");
 19669              		.loc 1 2579 0
 19670 083c 7869     		ldr	r0, [r7, #20]
 19671 083e FFF7FEFF 		bl	strlen
 19672 0842 0346     		mov	r3, r0
 19673 0844 1A46     		mov	r2, r3
 19674 0846 7B69     		ldr	r3, [r7, #20]
 19675 0848 1344     		add	r3, r3, r2
 19676 084a 514A     		ldr	r2, .L785+32
 19677 084c 1446     		mov	r4, r2
 19678 084e 9E46     		mov	lr, r3
 19679 0850 04F1200C 		add	ip, r4, #32
 19680              	.L749:
 19681 0854 7546     		mov	r5, lr
 19682 0856 2646     		mov	r6, r4
 19683 0858 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 19684 085a 2860     		str	r0, [r5]	@ unaligned
 19685 085c 6960     		str	r1, [r5, #4]	@ unaligned
 19686 085e AA60     		str	r2, [r5, #8]	@ unaligned
 19687 0860 EB60     		str	r3, [r5, #12]	@ unaligned
 19688 0862 1034     		adds	r4, r4, #16
 19689 0864 0EF1100E 		add	lr, lr, #16
 19690 0868 6445     		cmp	r4, ip
 19691 086a F3D1     		bne	.L749
 19692 086c 7346     		mov	r3, lr
 19693 086e 2246     		mov	r2, r4
 19694 0870 1278     		ldrb	r2, [r2]
 19695 0872 1A70     		strb	r2, [r3]
 19696 0874 13E0     		b	.L750
 19697              	.L748:
2580:..\src/command_processing.c ****         else
2581:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: NO\r\n");
 19698              		.loc 1 2581 0
 19699 0876 7869     		ldr	r0, [r7, #20]
 19700 0878 FFF7FEFF 		bl	strlen
 19701 087c 0346     		mov	r3, r0
 19702 087e 1A46     		mov	r2, r3
 19703 0880 7B69     		ldr	r3, [r7, #20]
 19704 0882 1344     		add	r3, r3, r2
 19705 0884 434A     		ldr	r2, .L785+36
 19706 0886 1C46     		mov	r4, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 434


 19707 0888 1546     		mov	r5, r2
 19708 088a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19709 088c 2060     		str	r0, [r4]	@ unaligned
 19710 088e 6160     		str	r1, [r4, #4]	@ unaligned
 19711 0890 A260     		str	r2, [r4, #8]	@ unaligned
 19712 0892 E360     		str	r3, [r4, #12]	@ unaligned
 19713 0894 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19714 0896 2061     		str	r0, [r4, #16]	@ unaligned
 19715 0898 6161     		str	r1, [r4, #20]	@ unaligned
 19716 089a A261     		str	r2, [r4, #24]	@ unaligned
 19717 089c E361     		str	r3, [r4, #28]	@ unaligned
 19718              	.L750:
2582:..\src/command_processing.c **** 
2583:..\src/command_processing.c ****         strcat(info_string, "Resolutions: ");
 19719              		.loc 1 2583 0
 19720 089e 7869     		ldr	r0, [r7, #20]
 19721 08a0 FFF7FEFF 		bl	strlen
 19722 08a4 0346     		mov	r3, r0
 19723 08a6 1A46     		mov	r2, r3
 19724 08a8 7B69     		ldr	r3, [r7, #20]
 19725 08aa 1344     		add	r3, r3, r2
 19726 08ac 3A4A     		ldr	r2, .L785+40
 19727 08ae 1C46     		mov	r4, r3
 19728 08b0 1346     		mov	r3, r2
 19729 08b2 07CB     		ldmia	r3!, {r0, r1, r2}
 19730 08b4 2060     		str	r0, [r4]	@ unaligned
 19731 08b6 6160     		str	r1, [r4, #4]	@ unaligned
 19732 08b8 A260     		str	r2, [r4, #8]	@ unaligned
 19733 08ba 1B88     		ldrh	r3, [r3]	@ unaligned
 19734 08bc A381     		strh	r3, [r4, #12]	@ unaligned
2584:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 19735              		.loc 1 2584 0
 19736 08be 0023     		movs	r3, #0
 19737 08c0 C7F89430 		str	r3, [r7, #148]
 19738 08c4 30E0     		b	.L751
 19739              	.L753:
2585:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 19740              		.loc 1 2585 0
 19741 08c6 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19742 08ca D7F88C10 		ldr	r1, [r7, #140]
 19743 08ce 1346     		mov	r3, r2
 19744 08d0 5B00     		lsls	r3, r3, #1
 19745 08d2 1344     		add	r3, r3, r2
 19746 08d4 1B01     		lsls	r3, r3, #4
 19747 08d6 CA18     		adds	r2, r1, r3
 19748 08d8 D7F89430 		ldr	r3, [r7, #148]
 19749 08dc 1344     		add	r3, r3, r2
 19750 08de 03F29513 		addw	r3, r3, #405
 19751 08e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19752 08e4 1A46     		mov	r2, r3
 19753 08e6 07F11C03 		add	r3, r7, #28
 19754 08ea 2C49     		ldr	r1, .L785+44
 19755 08ec 1846     		mov	r0, r3
 19756 08ee FFF7FEFF 		bl	sprintf
2586:..\src/command_processing.c ****             strcat(info_string, str);
 19757              		.loc 1 2586 0
 19758 08f2 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 435


 19759 08f6 1946     		mov	r1, r3
 19760 08f8 7869     		ldr	r0, [r7, #20]
 19761 08fa FFF7FEFF 		bl	strcat
2587:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 19762              		.loc 1 2587 0
 19763 08fe D7F89430 		ldr	r3, [r7, #148]
 19764 0902 022B     		cmp	r3, #2
 19765 0904 0BD0     		beq	.L752
2588:..\src/command_processing.c ****                 strcat(info_string, ", ");
 19766              		.loc 1 2588 0
 19767 0906 7869     		ldr	r0, [r7, #20]
 19768 0908 FFF7FEFF 		bl	strlen
 19769 090c 0346     		mov	r3, r0
 19770 090e 1A46     		mov	r2, r3
 19771 0910 7B69     		ldr	r3, [r7, #20]
 19772 0912 1344     		add	r3, r3, r2
 19773 0914 224A     		ldr	r2, .L785+48
 19774 0916 1188     		ldrh	r1, [r2]	@ unaligned
 19775 0918 9278     		ldrb	r2, [r2, #2]
 19776 091a 1980     		strh	r1, [r3]	@ unaligned
 19777 091c 9A70     		strb	r2, [r3, #2]
 19778              	.L752:
2584:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 19779              		.loc 1 2584 0 discriminator 2
 19780 091e D7F89430 		ldr	r3, [r7, #148]
 19781 0922 0133     		adds	r3, r3, #1
 19782 0924 C7F89430 		str	r3, [r7, #148]
 19783              	.L751:
2584:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 19784              		.loc 1 2584 0 is_stmt 0 discriminator 1
 19785 0928 D7F89430 		ldr	r3, [r7, #148]
 19786 092c 022B     		cmp	r3, #2
 19787 092e CADD     		ble	.L753
2589:..\src/command_processing.c ****             }                
2590:..\src/command_processing.c ****         }
2591:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 19788              		.loc 1 2591 0 is_stmt 1
 19789 0930 7869     		ldr	r0, [r7, #20]
 19790 0932 FFF7FEFF 		bl	strlen
 19791 0936 0346     		mov	r3, r0
 19792 0938 1A46     		mov	r2, r3
 19793 093a 7B69     		ldr	r3, [r7, #20]
 19794 093c 1344     		add	r3, r3, r2
 19795 093e 194A     		ldr	r2, .L785+52
 19796 0940 1188     		ldrh	r1, [r2]	@ unaligned
 19797 0942 9278     		ldrb	r2, [r2, #2]
 19798 0944 1980     		strh	r1, [r3]	@ unaligned
 19799 0946 9A70     		strb	r2, [r3, #2]
2592:..\src/command_processing.c **** 
2593:..\src/command_processing.c ****         strcat(info_string, "Offsets: ");
 19800              		.loc 1 2593 0
 19801 0948 7869     		ldr	r0, [r7, #20]
 19802 094a FFF7FEFF 		bl	strlen
 19803 094e 0346     		mov	r3, r0
 19804 0950 1A46     		mov	r2, r3
 19805 0952 7B69     		ldr	r3, [r7, #20]
 19806 0954 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 436


 19807 0956 1449     		ldr	r1, .L785+56
 19808 0958 1A46     		mov	r2, r3
 19809 095a 0B46     		mov	r3, r1
 19810 095c 03CB     		ldmia	r3!, {r0, r1}
 19811 095e 1060     		str	r0, [r2]	@ unaligned
 19812 0960 5160     		str	r1, [r2, #4]	@ unaligned
 19813 0962 1B88     		ldrh	r3, [r3]	@ unaligned
 19814 0964 1381     		strh	r3, [r2, #8]	@ unaligned
2594:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 19815              		.loc 1 2594 0
 19816 0966 0023     		movs	r3, #0
 19817 0968 C7F89430 		str	r3, [r7, #148]
 19818 096c 5EE0     		b	.L754
 19819              	.L786:
 19820 096e 00BF     		.align	2
 19821              	.L785:
 19822 0970 50150000 		.word	.LC202
 19823 0974 68150000 		.word	.LC203
 19824 0978 84150000 		.word	.LC204
 19825 097c 9C150000 		.word	.LC205
 19826 0980 CC150000 		.word	.LC206
 19827 0984 E8150000 		.word	.LC207
 19828 0988 FC150000 		.word	.LC208
 19829 098c 14160000 		.word	.LC209
 19830 0990 3C160000 		.word	.LC210
 19831 0994 60160000 		.word	.LC211
 19832 0998 301E0000 		.word	.LC288
 19833 099c 90130000 		.word	.LC183
 19834 09a0 94130000 		.word	.LC184
 19835 09a4 5C110000 		.word	.LC152
 19836 09a8 401E0000 		.word	.LC289
 19837              	.L756:
2595:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 19838              		.loc 1 2595 0
 19839 09ac 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19840 09b0 D7F88C10 		ldr	r1, [r7, #140]
 19841 09b4 1346     		mov	r3, r2
 19842 09b6 5B00     		lsls	r3, r3, #1
 19843 09b8 1344     		add	r3, r3, r2
 19844 09ba 9B00     		lsls	r3, r3, #2
 19845 09bc D7F89420 		ldr	r2, [r7, #148]
 19846 09c0 1344     		add	r3, r3, r2
 19847 09c2 6633     		adds	r3, r3, #102
 19848 09c4 51F82310 		ldr	r1, [r1, r3, lsl #2]
 19849 09c8 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19850 09cc D7F88C00 		ldr	r0, [r7, #140]
 19851 09d0 1346     		mov	r3, r2
 19852 09d2 5B00     		lsls	r3, r3, #1
 19853 09d4 1344     		add	r3, r3, r2
 19854 09d6 1B01     		lsls	r3, r3, #4
 19855 09d8 C218     		adds	r2, r0, r3
 19856 09da D7F89430 		ldr	r3, [r7, #148]
 19857 09de 1344     		add	r3, r3, r2
 19858 09e0 03F29513 		addw	r3, r3, #405
 19859 09e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19860 09e6 41FA03F2 		asr	r2, r1, r3
 19861 09ea 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 437


 19862 09ee CF49     		ldr	r1, .L787
 19863 09f0 1846     		mov	r0, r3
 19864 09f2 FFF7FEFF 		bl	sprintf
2596:..\src/command_processing.c ****             strcat(info_string, str);
 19865              		.loc 1 2596 0
 19866 09f6 07F11C03 		add	r3, r7, #28
 19867 09fa 1946     		mov	r1, r3
 19868 09fc 7869     		ldr	r0, [r7, #20]
 19869 09fe FFF7FEFF 		bl	strcat
2597:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 19870              		.loc 1 2597 0
 19871 0a02 D7F89430 		ldr	r3, [r7, #148]
 19872 0a06 022B     		cmp	r3, #2
 19873 0a08 0BD0     		beq	.L755
2598:..\src/command_processing.c ****                 strcat(info_string, ", ");
 19874              		.loc 1 2598 0
 19875 0a0a 7869     		ldr	r0, [r7, #20]
 19876 0a0c FFF7FEFF 		bl	strlen
 19877 0a10 0346     		mov	r3, r0
 19878 0a12 1A46     		mov	r2, r3
 19879 0a14 7B69     		ldr	r3, [r7, #20]
 19880 0a16 1344     		add	r3, r3, r2
 19881 0a18 C54A     		ldr	r2, .L787+4
 19882 0a1a 1188     		ldrh	r1, [r2]	@ unaligned
 19883 0a1c 9278     		ldrb	r2, [r2, #2]
 19884 0a1e 1980     		strh	r1, [r3]	@ unaligned
 19885 0a20 9A70     		strb	r2, [r3, #2]
 19886              	.L755:
2594:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 19887              		.loc 1 2594 0 discriminator 2
 19888 0a22 D7F89430 		ldr	r3, [r7, #148]
 19889 0a26 0133     		adds	r3, r3, #1
 19890 0a28 C7F89430 		str	r3, [r7, #148]
 19891              	.L754:
2594:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 19892              		.loc 1 2594 0 is_stmt 0 discriminator 1
 19893 0a2c D7F89430 		ldr	r3, [r7, #148]
 19894 0a30 022B     		cmp	r3, #2
 19895 0a32 BBDD     		ble	.L756
2599:..\src/command_processing.c ****             }
2600:..\src/command_processing.c ****         }
2601:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 19896              		.loc 1 2601 0 is_stmt 1
 19897 0a34 7869     		ldr	r0, [r7, #20]
 19898 0a36 FFF7FEFF 		bl	strlen
 19899 0a3a 0346     		mov	r3, r0
 19900 0a3c 1A46     		mov	r2, r3
 19901 0a3e 7B69     		ldr	r3, [r7, #20]
 19902 0a40 1344     		add	r3, r3, r2
 19903 0a42 BC4A     		ldr	r2, .L787+8
 19904 0a44 1188     		ldrh	r1, [r2]	@ unaligned
 19905 0a46 9278     		ldrb	r2, [r2, #2]
 19906 0a48 1980     		strh	r1, [r3]	@ unaligned
 19907 0a4a 9A70     		strb	r2, [r3, #2]
2602:..\src/command_processing.c ****             
2603:..\src/command_processing.c ****         strcat(info_string, "Multipliers: ");
 19908              		.loc 1 2603 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 438


 19909 0a4c 7869     		ldr	r0, [r7, #20]
 19910 0a4e FFF7FEFF 		bl	strlen
 19911 0a52 0346     		mov	r3, r0
 19912 0a54 1A46     		mov	r2, r3
 19913 0a56 7B69     		ldr	r3, [r7, #20]
 19914 0a58 1344     		add	r3, r3, r2
 19915 0a5a B74A     		ldr	r2, .L787+12
 19916 0a5c 1C46     		mov	r4, r3
 19917 0a5e 1346     		mov	r3, r2
 19918 0a60 07CB     		ldmia	r3!, {r0, r1, r2}
 19919 0a62 2060     		str	r0, [r4]	@ unaligned
 19920 0a64 6160     		str	r1, [r4, #4]	@ unaligned
 19921 0a66 A260     		str	r2, [r4, #8]	@ unaligned
 19922 0a68 1B88     		ldrh	r3, [r3]	@ unaligned
 19923 0a6a A381     		strh	r3, [r4, #12]	@ unaligned
2604:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 19924              		.loc 1 2604 0
 19925 0a6c 0023     		movs	r3, #0
 19926 0a6e C7F89430 		str	r3, [r7, #148]
 19927 0a72 35E0     		b	.L757
 19928              	.L759:
2605:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 19929              		.loc 1 2605 0
 19930 0a74 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19931 0a78 D7F88C10 		ldr	r1, [r7, #140]
 19932 0a7c 1346     		mov	r3, r2
 19933 0a7e 5B00     		lsls	r3, r3, #1
 19934 0a80 1344     		add	r3, r3, r2
 19935 0a82 9B00     		lsls	r3, r3, #2
 19936 0a84 D7F89420 		ldr	r2, [r7, #148]
 19937 0a88 1344     		add	r3, r3, r2
 19938 0a8a 6833     		adds	r3, r3, #104
 19939 0a8c 9B00     		lsls	r3, r3, #2
 19940 0a8e 0B44     		add	r3, r3, r1
 19941 0a90 5B68     		ldr	r3, [r3, #4]	@ float
 19942 0a92 1846     		mov	r0, r3
 19943 0a94 FFF7FEFF 		bl	__aeabi_f2d
 19944 0a98 0346     		mov	r3, r0
 19945 0a9a 0C46     		mov	r4, r1
 19946 0a9c 07F11C00 		add	r0, r7, #28
 19947 0aa0 1A46     		mov	r2, r3
 19948 0aa2 2346     		mov	r3, r4
 19949 0aa4 A549     		ldr	r1, .L787+16
 19950 0aa6 FFF7FEFF 		bl	sprintf
2606:..\src/command_processing.c ****             strcat(info_string, str);
 19951              		.loc 1 2606 0
 19952 0aaa 07F11C03 		add	r3, r7, #28
 19953 0aae 1946     		mov	r1, r3
 19954 0ab0 7869     		ldr	r0, [r7, #20]
 19955 0ab2 FFF7FEFF 		bl	strcat
2607:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 19956              		.loc 1 2607 0
 19957 0ab6 D7F89430 		ldr	r3, [r7, #148]
 19958 0aba 022B     		cmp	r3, #2
 19959 0abc 0BD0     		beq	.L758
2608:..\src/command_processing.c ****                 strcat(info_string, ", ");
 19960              		.loc 1 2608 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 439


 19961 0abe 7869     		ldr	r0, [r7, #20]
 19962 0ac0 FFF7FEFF 		bl	strlen
 19963 0ac4 0346     		mov	r3, r0
 19964 0ac6 1A46     		mov	r2, r3
 19965 0ac8 7B69     		ldr	r3, [r7, #20]
 19966 0aca 1344     		add	r3, r3, r2
 19967 0acc 984A     		ldr	r2, .L787+4
 19968 0ace 1188     		ldrh	r1, [r2]	@ unaligned
 19969 0ad0 9278     		ldrb	r2, [r2, #2]
 19970 0ad2 1980     		strh	r1, [r3]	@ unaligned
 19971 0ad4 9A70     		strb	r2, [r3, #2]
 19972              	.L758:
2604:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 19973              		.loc 1 2604 0 discriminator 2
 19974 0ad6 D7F89430 		ldr	r3, [r7, #148]
 19975 0ada 0133     		adds	r3, r3, #1
 19976 0adc C7F89430 		str	r3, [r7, #148]
 19977              	.L757:
2604:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 19978              		.loc 1 2604 0 is_stmt 0 discriminator 1
 19979 0ae0 D7F89430 		ldr	r3, [r7, #148]
 19980 0ae4 022B     		cmp	r3, #2
 19981 0ae6 C5DD     		ble	.L759
2609:..\src/command_processing.c ****             }
2610:..\src/command_processing.c ****         }
2611:..\src/command_processing.c ****         strcat(info_string, "\r\n");       
 19982              		.loc 1 2611 0 is_stmt 1
 19983 0ae8 7869     		ldr	r0, [r7, #20]
 19984 0aea FFF7FEFF 		bl	strlen
 19985 0aee 0346     		mov	r3, r0
 19986 0af0 1A46     		mov	r2, r3
 19987 0af2 7B69     		ldr	r3, [r7, #20]
 19988 0af4 1344     		add	r3, r3, r2
 19989 0af6 8F4A     		ldr	r2, .L787+8
 19990 0af8 1188     		ldrh	r1, [r2]	@ unaligned
 19991 0afa 9278     		ldrb	r2, [r2, #2]
 19992 0afc 1980     		strh	r1, [r3]	@ unaligned
 19993 0afe 9A70     		strb	r2, [r3, #2]
2612:..\src/command_processing.c **** 
2613:..\src/command_processing.c **** 		sprintf(str, "Current lookup table p[0] - p[5]: %f, %f, %f, %f, %f, %f\r\n", MOT->curr_lookup[0],
 19994              		.loc 1 2613 0
 19995 0b00 D7F88430 		ldr	r3, [r7, #132]
 19996 0b04 5B6C     		ldr	r3, [r3, #68]	@ float
 19997 0b06 1846     		mov	r0, r3
 19998 0b08 FFF7FEFF 		bl	__aeabi_f2d
 19999 0b0c C7E90201 		strd	r0, [r7, #8]
 20000 0b10 D7F88430 		ldr	r3, [r7, #132]
 20001 0b14 9B6C     		ldr	r3, [r3, #72]	@ float
 20002 0b16 1846     		mov	r0, r3
 20003 0b18 FFF7FEFF 		bl	__aeabi_f2d
 20004 0b1c 0446     		mov	r4, r0
 20005 0b1e 0D46     		mov	r5, r1
 20006 0b20 D7F88430 		ldr	r3, [r7, #132]
 20007 0b24 DB6C     		ldr	r3, [r3, #76]	@ float
 20008 0b26 1846     		mov	r0, r3
 20009 0b28 FFF7FEFF 		bl	__aeabi_f2d
 20010 0b2c 8046     		mov	r8, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 440


 20011 0b2e 8946     		mov	r9, r1
 20012 0b30 D7F88430 		ldr	r3, [r7, #132]
 20013 0b34 1B6D     		ldr	r3, [r3, #80]	@ float
 20014 0b36 1846     		mov	r0, r3
 20015 0b38 FFF7FEFF 		bl	__aeabi_f2d
 20016 0b3c 8246     		mov	r10, r0
 20017 0b3e 8B46     		mov	fp, r1
 20018 0b40 D7F88430 		ldr	r3, [r7, #132]
 20019 0b44 5B6D     		ldr	r3, [r3, #84]	@ float
 20020 0b46 1846     		mov	r0, r3
 20021 0b48 FFF7FEFF 		bl	__aeabi_f2d
 20022 0b4c C7E90001 		strd	r0, [r7]
 20023 0b50 D7F88430 		ldr	r3, [r7, #132]
 20024 0b54 9B6D     		ldr	r3, [r3, #88]	@ float
 20025 0b56 1846     		mov	r0, r3
 20026 0b58 FFF7FEFF 		bl	__aeabi_f2d
 20027 0b5c 0246     		mov	r2, r0
 20028 0b5e 0B46     		mov	r3, r1
 20029 0b60 07F11C00 		add	r0, r7, #28
 20030 0b64 CDE90823 		strd	r2, [sp, #32]
 20031 0b68 D7E90012 		ldrd	r1, [r7]
 20032 0b6c CDE90612 		strd	r1, [sp, #24]
 20033 0b70 CDE904AB 		strd	r10, [sp, #16]
 20034 0b74 CDE90289 		strd	r8, [sp, #8]
 20035 0b78 CDE90045 		strd	r4, [sp]
 20036 0b7c D7E90223 		ldrd	r2, [r7, #8]
 20037 0b80 6F49     		ldr	r1, .L787+20
 20038 0b82 FFF7FEFF 		bl	sprintf
2614:..\src/command_processing.c **** 		strcat(info_string, str);
 20039              		.loc 1 2614 0
 20040 0b86 07F11C03 		add	r3, r7, #28
 20041 0b8a 1946     		mov	r1, r3
 20042 0b8c 7869     		ldr	r0, [r7, #20]
 20043 0b8e FFF7FEFF 		bl	strcat
2615:..\src/command_processing.c **** 
2616:..\src/command_processing.c **** 		sprintf(str, "Position limit active: %d\r\n", (int)MOT->pos_lim_flag);
 20044              		.loc 1 2616 0
 20045 0b92 D7F88430 		ldr	r3, [r7, #132]
 20046 0b96 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 20047 0b9a 1A46     		mov	r2, r3
 20048 0b9c 07F11C03 		add	r3, r7, #28
 20049 0ba0 6849     		ldr	r1, .L787+24
 20050 0ba2 1846     		mov	r0, r3
 20051 0ba4 FFF7FEFF 		bl	sprintf
2617:..\src/command_processing.c **** 		strcat(info_string, str);
 20052              		.loc 1 2617 0
 20053 0ba8 07F11C03 		add	r3, r7, #28
 20054 0bac 1946     		mov	r1, r3
 20055 0bae 7869     		ldr	r0, [r7, #20]
 20056 0bb0 FFF7FEFF 		bl	strcat
2618:..\src/command_processing.c **** 
2619:..\src/command_processing.c **** 		sprintf(str, "Position limits: inf -> %ld, sup -> %ld\r\n", (int32)MOT->pos_lim_inf >> MEM_P->enc
 20057              		.loc 1 2619 0
 20058 0bb4 D7F88430 		ldr	r3, [r7, #132]
 20059 0bb8 596B     		ldr	r1, [r3, #52]
 20060 0bba 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 20061 0bbe D7F88C00 		ldr	r0, [r7, #140]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 441


 20062 0bc2 1346     		mov	r3, r2
 20063 0bc4 5B00     		lsls	r3, r3, #1
 20064 0bc6 1344     		add	r3, r3, r2
 20065 0bc8 1B01     		lsls	r3, r3, #4
 20066 0bca 0344     		add	r3, r3, r0
 20067 0bcc 03F29513 		addw	r3, r3, #405
 20068 0bd0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20069 0bd2 41FA03F4 		asr	r4, r1, r3
 20070 0bd6 D7F88430 		ldr	r3, [r7, #132]
 20071 0bda 996B     		ldr	r1, [r3, #56]
 20072 0bdc 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 20073 0be0 D7F88C00 		ldr	r0, [r7, #140]
 20074 0be4 1346     		mov	r3, r2
 20075 0be6 5B00     		lsls	r3, r3, #1
 20076 0be8 1344     		add	r3, r3, r2
 20077 0bea 1B01     		lsls	r3, r3, #4
 20078 0bec 0344     		add	r3, r3, r0
 20079 0bee 03F29513 		addw	r3, r3, #405
 20080 0bf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20081 0bf4 41FA03F3 		asr	r3, r1, r3
 20082 0bf8 07F11C00 		add	r0, r7, #28
 20083 0bfc 2246     		mov	r2, r4
 20084 0bfe 5249     		ldr	r1, .L787+28
 20085 0c00 FFF7FEFF 		bl	sprintf
2620:..\src/command_processing.c **** 		strcat(info_string, str);
 20086              		.loc 1 2620 0
 20087 0c04 07F11C03 		add	r3, r7, #28
 20088 0c08 1946     		mov	r1, r3
 20089 0c0a 7869     		ldr	r0, [r7, #20]
 20090 0c0c FFF7FEFF 		bl	strcat
2621:..\src/command_processing.c **** 
2622:..\src/command_processing.c **** 		sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 20091              		.loc 1 2622 0
 20092 0c10 D7F88430 		ldr	r3, [r7, #132]
 20093 0c14 B3F95C30 		ldrsh	r3, [r3, #92]
 20094 0c18 1A46     		mov	r2, r3
 20095 0c1a 07F11C03 		add	r3, r7, #28
 20096 0c1e 4B49     		ldr	r1, .L787+32
 20097 0c20 1846     		mov	r0, r3
 20098 0c22 FFF7FEFF 		bl	sprintf
2623:..\src/command_processing.c **** 		strcat(info_string, str);
 20099              		.loc 1 2623 0
 20100 0c26 07F11C03 		add	r3, r7, #28
 20101 0c2a 1946     		mov	r1, r3
 20102 0c2c 7869     		ldr	r0, [r7, #20]
 20103 0c2e FFF7FEFF 		bl	strcat
2624:..\src/command_processing.c **** 
2625:..\src/command_processing.c **** 		if ((MOT->input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 20104              		.loc 1 2625 0
 20105 0c32 D7F88430 		ldr	r3, [r7, #132]
 20106 0c36 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 20107 0c3a 022B     		cmp	r3, #2
 20108 0c3c 18D0     		beq	.L760
2626:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 20109              		.loc 1 2626 0 discriminator 1
 20110 0c3e D7F88430 		ldr	r3, [r7, #132]
 20111 0c42 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 442


2625:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 20112              		.loc 1 2625 0 discriminator 1
 20113 0c46 032B     		cmp	r3, #3
 20114 0c48 12D0     		beq	.L760
2627:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 20115              		.loc 1 2627 0
 20116 0c4a D7F88430 		ldr	r3, [r7, #132]
 20117 0c4e 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2626:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 20118              		.loc 1 2626 0
 20119 0c52 042B     		cmp	r3, #4
 20120 0c54 0CD0     		beq	.L760
2628:..\src/command_processing.c ****             (MOT->input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 20121              		.loc 1 2628 0
 20122 0c56 D7F88430 		ldr	r3, [r7, #132]
 20123 0c5a 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2627:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 20124              		.loc 1 2627 0
 20125 0c5e 052B     		cmp	r3, #5
 20126 0c60 06D0     		beq	.L760
2629:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_PROPORTIONAL_NC)) {
 20127              		.loc 1 2629 0
 20128 0c62 D7F88430 		ldr	r3, [r7, #132]
 20129 0c66 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2628:..\src/command_processing.c ****             (MOT->input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 20130              		.loc 1 2628 0
 20131 0c6a 072B     		cmp	r3, #7
 20132 0c6c 40F0AA80 		bne	.L761
 20133              	.L760:
2630:..\src/command_processing.c **** 			sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.emg_th
 20134              		.loc 1 2630 0
 20135 0c70 D7F88C30 		ldr	r3, [r7, #140]
 20136 0c74 B3F8F031 		ldrh	r3, [r3, #496]
 20137 0c78 1A46     		mov	r2, r3
 20138 0c7a D7F88C30 		ldr	r3, [r7, #140]
 20139 0c7e B3F8F231 		ldrh	r3, [r3, #498]
 20140 0c82 07F11C00 		add	r0, r7, #28
 20141 0c86 3249     		ldr	r1, .L787+36
 20142 0c88 FFF7FEFF 		bl	sprintf
2631:..\src/command_processing.c **** 			strcat(info_string, str);
 20143              		.loc 1 2631 0
 20144 0c8c 07F11C03 		add	r3, r7, #28
 20145 0c90 1946     		mov	r1, r3
 20146 0c92 7869     		ldr	r0, [r7, #20]
 20147 0c94 FFF7FEFF 		bl	strcat
2632:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 20148              		.loc 1 2632 0
 20149 0c98 7869     		ldr	r0, [r7, #20]
 20150 0c9a FFF7FEFF 		bl	strlen
 20151 0c9e 0346     		mov	r3, r0
 20152 0ca0 1A46     		mov	r2, r3
 20153 0ca2 7B69     		ldr	r3, [r7, #20]
 20154 0ca4 1344     		add	r3, r3, r2
 20155 0ca6 234A     		ldr	r2, .L787+8
 20156 0ca8 1188     		ldrh	r1, [r2]	@ unaligned
 20157 0caa 9278     		ldrb	r2, [r2, #2]
 20158 0cac 1980     		strh	r1, [r3]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 443


 20159 0cae 9A70     		strb	r2, [r3, #2]
2633:..\src/command_processing.c **** 
2634:..\src/command_processing.c **** 			sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg.emg_
 20160              		.loc 1 2634 0
 20161 0cb0 D7F88C30 		ldr	r3, [r7, #140]
 20162 0cb4 D3F8F421 		ldr	r2, [r3, #500]
 20163 0cb8 D7F88C30 		ldr	r3, [r7, #140]
 20164 0cbc D3F8F831 		ldr	r3, [r3, #504]
 20165 0cc0 07F11C00 		add	r0, r7, #28
 20166 0cc4 2349     		ldr	r1, .L787+40
 20167 0cc6 FFF7FEFF 		bl	sprintf
2635:..\src/command_processing.c **** 			strcat(info_string, str);
 20168              		.loc 1 2635 0
 20169 0cca 07F11C03 		add	r3, r7, #28
 20170 0cce 1946     		mov	r1, r3
 20171 0cd0 7869     		ldr	r0, [r7, #20]
 20172 0cd2 FFF7FEFF 		bl	strcat
2636:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 20173              		.loc 1 2636 0
 20174 0cd6 7869     		ldr	r0, [r7, #20]
 20175 0cd8 FFF7FEFF 		bl	strlen
 20176 0cdc 0346     		mov	r3, r0
 20177 0cde 1A46     		mov	r2, r3
 20178 0ce0 7B69     		ldr	r3, [r7, #20]
 20179 0ce2 1344     		add	r3, r3, r2
 20180 0ce4 134A     		ldr	r2, .L787+8
 20181 0ce6 1188     		ldrh	r1, [r2]	@ unaligned
 20182 0ce8 9278     		ldrb	r2, [r2, #2]
 20183 0cea 1980     		strh	r1, [r3]	@ unaligned
 20184 0cec 9A70     		strb	r2, [r3, #2]
2637:..\src/command_processing.c **** 
2638:..\src/command_processing.c **** 			if (MEM_P->emg.emg_calibration_flag)
 20185              		.loc 1 2638 0
 20186 0cee D7F88C30 		ldr	r3, [r7, #140]
 20187 0cf2 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 20188 0cf6 002B     		cmp	r3, #0
 20189 0cf8 30D0     		beq	.L762
2639:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: YES\r\n");
 20190              		.loc 1 2639 0
 20191 0cfa 7869     		ldr	r0, [r7, #20]
 20192 0cfc FFF7FEFF 		bl	strlen
 20193 0d00 0346     		mov	r3, r0
 20194 0d02 1A46     		mov	r2, r3
 20195 0d04 7B69     		ldr	r3, [r7, #20]
 20196 0d06 1344     		add	r3, r3, r2
 20197 0d08 134A     		ldr	r2, .L787+44
 20198 0d0a 1D46     		mov	r5, r3
 20199 0d0c 1446     		mov	r4, r2
 20200 0d0e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20201 0d10 2860     		str	r0, [r5]	@ unaligned
 20202 0d12 6960     		str	r1, [r5, #4]	@ unaligned
 20203 0d14 AA60     		str	r2, [r5, #8]	@ unaligned
 20204 0d16 EB60     		str	r3, [r5, #12]	@ unaligned
 20205 0d18 03CC     		ldmia	r4!, {r0, r1}
 20206 0d1a 2861     		str	r0, [r5, #16]	@ unaligned
 20207 0d1c 6961     		str	r1, [r5, #20]	@ unaligned
 20208 0d1e 2388     		ldrh	r3, [r4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 444


 20209 0d20 A278     		ldrb	r2, [r4, #2]
 20210 0d22 2B83     		strh	r3, [r5, #24]	@ unaligned
 20211 0d24 1346     		mov	r3, r2
 20212 0d26 AB76     		strb	r3, [r5, #26]
 20213 0d28 2CE0     		b	.L763
 20214              	.L788:
 20215 0d2a 00BF     		.align	2
 20216              	.L787:
 20217 0d2c 3C170000 		.word	.LC219
 20218 0d30 94130000 		.word	.LC184
 20219 0d34 5C110000 		.word	.LC152
 20220 0d38 4C1E0000 		.word	.LC290
 20221 0d3c 5C170000 		.word	.LC221
 20222 0d40 5C1E0000 		.word	.LC291
 20223 0d44 981E0000 		.word	.LC292
 20224 0d48 B41E0000 		.word	.LC293
 20225 0d4c FC170000 		.word	.LC227
 20226 0d50 10190000 		.word	.LC236
 20227 0d54 34190000 		.word	.LC237
 20228 0d58 84190000 		.word	.LC240
 20229              	.L762:
2640:..\src/command_processing.c **** 			else
2641:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: NO\r\n");
 20230              		.loc 1 2641 0
 20231 0d5c 7869     		ldr	r0, [r7, #20]
 20232 0d5e FFF7FEFF 		bl	strlen
 20233 0d62 0346     		mov	r3, r0
 20234 0d64 1A46     		mov	r2, r3
 20235 0d66 7B69     		ldr	r3, [r7, #20]
 20236 0d68 1344     		add	r3, r3, r2
 20237 0d6a D04A     		ldr	r2, .L789
 20238 0d6c 1D46     		mov	r5, r3
 20239 0d6e 1446     		mov	r4, r2
 20240 0d70 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20241 0d72 2860     		str	r0, [r5]	@ unaligned
 20242 0d74 6960     		str	r1, [r5, #4]	@ unaligned
 20243 0d76 AA60     		str	r2, [r5, #8]	@ unaligned
 20244 0d78 EB60     		str	r3, [r5, #12]	@ unaligned
 20245 0d7a 03CC     		ldmia	r4!, {r0, r1}
 20246 0d7c 2861     		str	r0, [r5, #16]	@ unaligned
 20247 0d7e 6961     		str	r1, [r5, #20]	@ unaligned
 20248 0d80 2388     		ldrh	r3, [r4]	@ unaligned
 20249 0d82 2B83     		strh	r3, [r5, #24]	@ unaligned
 20250              	.L763:
2642:..\src/command_processing.c **** 
2643:..\src/command_processing.c **** 			sprintf(str, "EMG max speed: %d %d", (int)MEM_P->emg.emg_speed[0], (int)MEM_P->emg.emg_speed[1])
 20251              		.loc 1 2643 0
 20252 0d84 D7F88C30 		ldr	r3, [r7, #140]
 20253 0d88 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 20254 0d8c 1A46     		mov	r2, r3
 20255 0d8e D7F88C30 		ldr	r3, [r7, #140]
 20256 0d92 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 20257 0d96 07F11C00 		add	r0, r7, #28
 20258 0d9a C549     		ldr	r1, .L789+4
 20259 0d9c FFF7FEFF 		bl	sprintf
2644:..\src/command_processing.c **** 			strcat(info_string, str);
 20260              		.loc 1 2644 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 445


 20261 0da0 07F11C03 		add	r3, r7, #28
 20262 0da4 1946     		mov	r1, r3
 20263 0da6 7869     		ldr	r0, [r7, #20]
 20264 0da8 FFF7FEFF 		bl	strcat
2645:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 20265              		.loc 1 2645 0
 20266 0dac 7869     		ldr	r0, [r7, #20]
 20267 0dae FFF7FEFF 		bl	strlen
 20268 0db2 0346     		mov	r3, r0
 20269 0db4 1A46     		mov	r2, r3
 20270 0db6 7B69     		ldr	r3, [r7, #20]
 20271 0db8 1344     		add	r3, r3, r2
 20272 0dba BE4A     		ldr	r2, .L789+8
 20273 0dbc 1188     		ldrh	r1, [r2]	@ unaligned
 20274 0dbe 9278     		ldrb	r2, [r2, #2]
 20275 0dc0 1980     		strh	r1, [r3]	@ unaligned
 20276 0dc2 9A70     		strb	r2, [r3, #2]
 20277              	.L761:
 20278              	.LBE24:
2475:..\src/command_processing.c ****             
 20279              		.loc 1 2475 0 discriminator 2
 20280 0dc4 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 20281 0dc8 0133     		adds	r3, r3, #1
 20282 0dca 87F89330 		strb	r3, [r7, #147]
 20283              	.L720:
2475:..\src/command_processing.c ****             
 20284              		.loc 1 2475 0 is_stmt 0 discriminator 1
 20285 0dce D7F88C30 		ldr	r3, [r7, #140]
 20286 0dd2 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 20287 0dd6 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 20288 0dda 9A42     		cmp	r2, r3
 20289 0ddc 7FF699A9 		bls	.L764
 20290              	.LBE23:
2646:..\src/command_processing.c **** 		}
2647:..\src/command_processing.c **** 	}
2648:..\src/command_processing.c **** 	 
2649:..\src/command_processing.c ****     if (MEM_P->SH.rest_position_flag) {
 20291              		.loc 1 2649 0 is_stmt 1
 20292 0de0 D7F88C30 		ldr	r3, [r7, #140]
 20293 0de4 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 20294 0de8 002B     		cmp	r3, #0
 20295 0dea 63D0     		beq	.L765
2650:..\src/command_processing.c **** 		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 20296              		.loc 1 2650 0
 20297 0dec D7F88C30 		ldr	r3, [r7, #140]
 20298 0df0 D3F8A422 		ldr	r2, [r3, #676]
 20299 0df4 07F11C03 		add	r3, r7, #28
 20300 0df8 AF49     		ldr	r1, .L789+12
 20301 0dfa 1846     		mov	r0, r3
 20302 0dfc FFF7FEFF 		bl	sprintf
2651:..\src/command_processing.c ****         strcat(info_string, str);
 20303              		.loc 1 2651 0
 20304 0e00 07F11C03 		add	r3, r7, #28
 20305 0e04 1946     		mov	r1, r3
 20306 0e06 7869     		ldr	r0, [r7, #20]
 20307 0e08 FFF7FEFF 		bl	strcat
2652:..\src/command_processing.c ****         strcat(info_string, "\r\n");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 446


 20308              		.loc 1 2652 0
 20309 0e0c 7869     		ldr	r0, [r7, #20]
 20310 0e0e FFF7FEFF 		bl	strlen
 20311 0e12 0346     		mov	r3, r0
 20312 0e14 1A46     		mov	r2, r3
 20313 0e16 7B69     		ldr	r3, [r7, #20]
 20314 0e18 1344     		add	r3, r3, r2
 20315 0e1a A64A     		ldr	r2, .L789+8
 20316 0e1c 1188     		ldrh	r1, [r2]	@ unaligned
 20317 0e1e 9278     		ldrb	r2, [r2, #2]
 20318 0e20 1980     		strh	r1, [r3]	@ unaligned
 20319 0e22 9A70     		strb	r2, [r3, #2]
2653:..\src/command_processing.c ****         
2654:..\src/command_processing.c ****         sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 20320              		.loc 1 2654 0
 20321 0e24 D7F88C30 		ldr	r3, [r7, #140]
 20322 0e28 D3F8A822 		ldr	r2, [r3, #680]
 20323 0e2c 07F11C03 		add	r3, r7, #28
 20324 0e30 A249     		ldr	r1, .L789+16
 20325 0e32 1846     		mov	r0, r3
 20326 0e34 FFF7FEFF 		bl	sprintf
2655:..\src/command_processing.c ****         strcat(info_string, str);
 20327              		.loc 1 2655 0
 20328 0e38 07F11C03 		add	r3, r7, #28
 20329 0e3c 1946     		mov	r1, r3
 20330 0e3e 7869     		ldr	r0, [r7, #20]
 20331 0e40 FFF7FEFF 		bl	strcat
2656:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 20332              		.loc 1 2656 0
 20333 0e44 7869     		ldr	r0, [r7, #20]
 20334 0e46 FFF7FEFF 		bl	strlen
 20335 0e4a 0346     		mov	r3, r0
 20336 0e4c 1A46     		mov	r2, r3
 20337 0e4e 7B69     		ldr	r3, [r7, #20]
 20338 0e50 1344     		add	r3, r3, r2
 20339 0e52 984A     		ldr	r2, .L789+8
 20340 0e54 1188     		ldrh	r1, [r2]	@ unaligned
 20341 0e56 9278     		ldrb	r2, [r2, #2]
 20342 0e58 1980     		strh	r1, [r3]	@ unaligned
 20343 0e5a 9A70     		strb	r2, [r3, #2]
2657:..\src/command_processing.c ****         
2658:..\src/command_processing.c ****         sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0].en
 20344              		.loc 1 2658 0
 20345 0e5c D7F88C30 		ldr	r3, [r7, #140]
 20346 0e60 D3F8A022 		ldr	r2, [r3, #672]
 20347 0e64 D7F88C30 		ldr	r3, [r7, #140]
 20348 0e68 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20349 0e6c 1846     		mov	r0, r3
 20350 0e6e D7F88C10 		ldr	r1, [r7, #140]
 20351 0e72 0346     		mov	r3, r0
 20352 0e74 5B00     		lsls	r3, r3, #1
 20353 0e76 0344     		add	r3, r3, r0
 20354 0e78 1B01     		lsls	r3, r3, #4
 20355 0e7a 0B44     		add	r3, r3, r1
 20356 0e7c 03F29513 		addw	r3, r3, #405
 20357 0e80 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20358 0e82 1A41     		asrs	r2, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 447


 20359 0e84 07F11C03 		add	r3, r7, #28
 20360 0e88 8D49     		ldr	r1, .L789+20
 20361 0e8a 1846     		mov	r0, r3
 20362 0e8c FFF7FEFF 		bl	sprintf
2659:..\src/command_processing.c ****         strcat(info_string, str);
 20363              		.loc 1 2659 0
 20364 0e90 07F11C03 		add	r3, r7, #28
 20365 0e94 1946     		mov	r1, r3
 20366 0e96 7869     		ldr	r0, [r7, #20]
 20367 0e98 FFF7FEFF 		bl	strcat
2660:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 20368              		.loc 1 2660 0
 20369 0e9c 7869     		ldr	r0, [r7, #20]
 20370 0e9e FFF7FEFF 		bl	strlen
 20371 0ea2 0346     		mov	r3, r0
 20372 0ea4 1A46     		mov	r2, r3
 20373 0ea6 7B69     		ldr	r3, [r7, #20]
 20374 0ea8 1344     		add	r3, r3, r2
 20375 0eaa 824A     		ldr	r2, .L789+8
 20376 0eac 1188     		ldrh	r1, [r2]	@ unaligned
 20377 0eae 9278     		ldrb	r2, [r2, #2]
 20378 0eb0 1980     		strh	r1, [r3]	@ unaligned
 20379 0eb2 9A70     		strb	r2, [r3, #2]
 20380              	.L765:
2661:..\src/command_processing.c ****     }
2662:..\src/command_processing.c **** 	
2663:..\src/command_processing.c **** 	if (MEM_P->imu.read_imu_flag) {
 20381              		.loc 1 2663 0
 20382 0eb4 D7F88C30 		ldr	r3, [r7, #140]
 20383 0eb8 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 20384 0ebc 002B     		cmp	r3, #0
 20385 0ebe 00F0CB81 		beq	.L780
2664:..\src/command_processing.c **** 		sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 20386              		.loc 1 2664 0
 20387 0ec2 804B     		ldr	r3, .L789+24
 20388 0ec4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20389 0ec6 1A46     		mov	r2, r3
 20390 0ec8 07F11C03 		add	r3, r7, #28
 20391 0ecc 7E49     		ldr	r1, .L789+28
 20392 0ece 1846     		mov	r0, r3
 20393 0ed0 FFF7FEFF 		bl	sprintf
2665:..\src/command_processing.c **** 		strcat(info_string, str);
 20394              		.loc 1 2665 0
 20395 0ed4 07F11C03 		add	r3, r7, #28
 20396 0ed8 1946     		mov	r1, r3
 20397 0eda 7869     		ldr	r0, [r7, #20]
 20398 0edc FFF7FEFF 		bl	strcat
2666:..\src/command_processing.c **** 		
2667:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 20399              		.loc 1 2667 0
 20400 0ee0 7869     		ldr	r0, [r7, #20]
 20401 0ee2 FFF7FEFF 		bl	strlen
 20402 0ee6 0346     		mov	r3, r0
 20403 0ee8 1A46     		mov	r2, r3
 20404 0eea 7B69     		ldr	r3, [r7, #20]
 20405 0eec 1344     		add	r3, r3, r2
 20406 0eee 714A     		ldr	r2, .L789+8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 448


 20407 0ef0 1188     		ldrh	r1, [r2]	@ unaligned
 20408 0ef2 9278     		ldrb	r2, [r2, #2]
 20409 0ef4 1980     		strh	r1, [r3]	@ unaligned
 20410 0ef6 9A70     		strb	r2, [r3, #2]
2668:..\src/command_processing.c **** 		
2669:..\src/command_processing.c **** 		strcat(info_string, "IMUs CONFIGURATION\r\n");
 20411              		.loc 1 2669 0
 20412 0ef8 7869     		ldr	r0, [r7, #20]
 20413 0efa FFF7FEFF 		bl	strlen
 20414 0efe 0346     		mov	r3, r0
 20415 0f00 1A46     		mov	r2, r3
 20416 0f02 7B69     		ldr	r3, [r7, #20]
 20417 0f04 1344     		add	r3, r3, r2
 20418 0f06 714A     		ldr	r2, .L789+32
 20419 0f08 1D46     		mov	r5, r3
 20420 0f0a 1446     		mov	r4, r2
 20421 0f0c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20422 0f0e 2860     		str	r0, [r5]	@ unaligned
 20423 0f10 6960     		str	r1, [r5, #4]	@ unaligned
 20424 0f12 AA60     		str	r2, [r5, #8]	@ unaligned
 20425 0f14 EB60     		str	r3, [r5, #12]	@ unaligned
 20426 0f16 2068     		ldr	r0, [r4]	@ unaligned
 20427 0f18 2861     		str	r0, [r5, #16]	@ unaligned
 20428 0f1a 2379     		ldrb	r3, [r4, #4]
 20429 0f1c 2B75     		strb	r3, [r5, #20]
2670:..\src/command_processing.c **** 		for (i=0; i<N_IMU_Connected; i++){
 20430              		.loc 1 2670 0
 20431 0f1e 0023     		movs	r3, #0
 20432 0f20 C7F89430 		str	r3, [r7, #148]
 20433 0f24 84E1     		b	.L767
 20434              	.L778:
2671:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20435              		.loc 1 2671 0
 20436 0f26 6A4A     		ldr	r2, .L789+36
 20437 0f28 D7F89430 		ldr	r3, [r7, #148]
 20438 0f2c 1344     		add	r3, r3, r2
 20439 0f2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20440 0f30 07F11C00 		add	r0, r7, #28
 20441 0f34 D7F89420 		ldr	r2, [r7, #148]
 20442 0f38 6649     		ldr	r1, .L789+40
 20443 0f3a FFF7FEFF 		bl	sprintf
2672:..\src/command_processing.c **** 			strcat(info_string, str);
 20444              		.loc 1 2672 0
 20445 0f3e 07F11C03 		add	r3, r7, #28
 20446 0f42 1946     		mov	r1, r3
 20447 0f44 7869     		ldr	r0, [r7, #20]
 20448 0f46 FFF7FEFF 		bl	strcat
2673:..\src/command_processing.c **** 			
2674:..\src/command_processing.c **** 			sprintf(str, "\tAccelerometers: ");
 20449              		.loc 1 2674 0
 20450 0f4a 07F11C03 		add	r3, r7, #28
 20451 0f4e 624A     		ldr	r2, .L789+44
 20452 0f50 1C46     		mov	r4, r3
 20453 0f52 1546     		mov	r5, r2
 20454 0f54 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 20455 0f56 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 20456 0f58 2B68     		ldr	r3, [r5]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 449


 20457 0f5a 2380     		strh	r3, [r4]	@ movhi
2675:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 20458              		.loc 1 2675 0
 20459 0f5c 5C4A     		ldr	r2, .L789+36
 20460 0f5e D7F89430 		ldr	r3, [r7, #148]
 20461 0f62 1344     		add	r3, r3, r2
 20462 0f64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20463 0f66 1946     		mov	r1, r3
 20464 0f68 D7F88C20 		ldr	r2, [r7, #140]
 20465 0f6c 0B46     		mov	r3, r1
 20466 0f6e 9B00     		lsls	r3, r3, #2
 20467 0f70 0B44     		add	r3, r3, r1
 20468 0f72 1344     		add	r3, r3, r2
 20469 0f74 03F20223 		addw	r3, r3, #514
 20470 0f78 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20471 0f7a 002B     		cmp	r3, #0
 20472 0f7c 0FD0     		beq	.L768
2676:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20473              		.loc 1 2676 0
 20474 0f7e 07F11C03 		add	r3, r7, #28
 20475 0f82 1846     		mov	r0, r3
 20476 0f84 FFF7FEFF 		bl	strlen
 20477 0f88 0346     		mov	r3, r0
 20478 0f8a 1A46     		mov	r2, r3
 20479 0f8c 07F11C03 		add	r3, r7, #28
 20480 0f90 1344     		add	r3, r3, r2
 20481 0f92 524A     		ldr	r2, .L789+48
 20482 0f94 1068     		ldr	r0, [r2]	@ unaligned
 20483 0f96 1860     		str	r0, [r3]	@ unaligned
 20484 0f98 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20485 0f9a 9A80     		strh	r2, [r3, #4]	@ unaligned
 20486 0f9c 0EE0     		b	.L769
 20487              	.L768:
2677:..\src/command_processing.c **** 			else
2678:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 20488              		.loc 1 2678 0
 20489 0f9e 07F11C03 		add	r3, r7, #28
 20490 0fa2 1846     		mov	r0, r3
 20491 0fa4 FFF7FEFF 		bl	strlen
 20492 0fa8 0346     		mov	r3, r0
 20493 0faa 1A46     		mov	r2, r3
 20494 0fac 07F11C03 		add	r3, r7, #28
 20495 0fb0 1344     		add	r3, r3, r2
 20496 0fb2 4B4A     		ldr	r2, .L789+52
 20497 0fb4 1068     		ldr	r0, [r2]	@ unaligned
 20498 0fb6 1860     		str	r0, [r3]	@ unaligned
 20499 0fb8 1279     		ldrb	r2, [r2, #4]
 20500 0fba 1A71     		strb	r2, [r3, #4]
 20501              	.L769:
2679:..\src/command_processing.c **** 			strcat(str, "\tGyroscopes: ");
 20502              		.loc 1 2679 0
 20503 0fbc 07F11C03 		add	r3, r7, #28
 20504 0fc0 1846     		mov	r0, r3
 20505 0fc2 FFF7FEFF 		bl	strlen
 20506 0fc6 0346     		mov	r3, r0
 20507 0fc8 1A46     		mov	r2, r3
 20508 0fca 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 450


 20509 0fce 1344     		add	r3, r3, r2
 20510 0fd0 444A     		ldr	r2, .L789+56
 20511 0fd2 1C46     		mov	r4, r3
 20512 0fd4 1346     		mov	r3, r2
 20513 0fd6 07CB     		ldmia	r3!, {r0, r1, r2}
 20514 0fd8 2060     		str	r0, [r4]	@ unaligned
 20515 0fda 6160     		str	r1, [r4, #4]	@ unaligned
 20516 0fdc A260     		str	r2, [r4, #8]	@ unaligned
 20517 0fde 1B88     		ldrh	r3, [r3]	@ unaligned
 20518 0fe0 A381     		strh	r3, [r4, #12]	@ unaligned
2680:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 20519              		.loc 1 2680 0
 20520 0fe2 3B4A     		ldr	r2, .L789+36
 20521 0fe4 D7F89430 		ldr	r3, [r7, #148]
 20522 0fe8 1344     		add	r3, r3, r2
 20523 0fea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20524 0fec 1946     		mov	r1, r3
 20525 0fee D7F88C20 		ldr	r2, [r7, #140]
 20526 0ff2 0B46     		mov	r3, r1
 20527 0ff4 9B00     		lsls	r3, r3, #2
 20528 0ff6 0B44     		add	r3, r3, r1
 20529 0ff8 1344     		add	r3, r3, r2
 20530 0ffa 03F20323 		addw	r3, r3, #515
 20531 0ffe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20532 1000 002B     		cmp	r3, #0
 20533 1002 0FD0     		beq	.L770
2681:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20534              		.loc 1 2681 0
 20535 1004 07F11C03 		add	r3, r7, #28
 20536 1008 1846     		mov	r0, r3
 20537 100a FFF7FEFF 		bl	strlen
 20538 100e 0346     		mov	r3, r0
 20539 1010 1A46     		mov	r2, r3
 20540 1012 07F11C03 		add	r3, r7, #28
 20541 1016 1344     		add	r3, r3, r2
 20542 1018 304A     		ldr	r2, .L789+48
 20543 101a 1068     		ldr	r0, [r2]	@ unaligned
 20544 101c 1860     		str	r0, [r3]	@ unaligned
 20545 101e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20546 1020 9A80     		strh	r2, [r3, #4]	@ unaligned
 20547 1022 0EE0     		b	.L771
 20548              	.L770:
2682:..\src/command_processing.c **** 			else
2683:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 20549              		.loc 1 2683 0
 20550 1024 07F11C03 		add	r3, r7, #28
 20551 1028 1846     		mov	r0, r3
 20552 102a FFF7FEFF 		bl	strlen
 20553 102e 0346     		mov	r3, r0
 20554 1030 1A46     		mov	r2, r3
 20555 1032 07F11C03 		add	r3, r7, #28
 20556 1036 1344     		add	r3, r3, r2
 20557 1038 294A     		ldr	r2, .L789+52
 20558 103a 1068     		ldr	r0, [r2]	@ unaligned
 20559 103c 1860     		str	r0, [r3]	@ unaligned
 20560 103e 1279     		ldrb	r2, [r2, #4]
 20561 1040 1A71     		strb	r2, [r3, #4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 451


 20562              	.L771:
2684:..\src/command_processing.c **** 			strcat(str, "\tMagnetometers: ");
 20563              		.loc 1 2684 0
 20564 1042 07F11C03 		add	r3, r7, #28
 20565 1046 1846     		mov	r0, r3
 20566 1048 FFF7FEFF 		bl	strlen
 20567 104c 0346     		mov	r3, r0
 20568 104e 1A46     		mov	r2, r3
 20569 1050 07F11C03 		add	r3, r7, #28
 20570 1054 1344     		add	r3, r3, r2
 20571 1056 244A     		ldr	r2, .L789+60
 20572 1058 1D46     		mov	r5, r3
 20573 105a 1446     		mov	r4, r2
 20574 105c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20575 105e 2860     		str	r0, [r5]	@ unaligned
 20576 1060 6960     		str	r1, [r5, #4]	@ unaligned
 20577 1062 AA60     		str	r2, [r5, #8]	@ unaligned
 20578 1064 EB60     		str	r3, [r5, #12]	@ unaligned
 20579 1066 2378     		ldrb	r3, [r4]
 20580 1068 2B74     		strb	r3, [r5, #16]
2685:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 20581              		.loc 1 2685 0
 20582 106a 194A     		ldr	r2, .L789+36
 20583 106c D7F89430 		ldr	r3, [r7, #148]
 20584 1070 1344     		add	r3, r3, r2
 20585 1072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20586 1074 1946     		mov	r1, r3
 20587 1076 D7F88C20 		ldr	r2, [r7, #140]
 20588 107a 0B46     		mov	r3, r1
 20589 107c 9B00     		lsls	r3, r3, #2
 20590 107e 0B44     		add	r3, r3, r1
 20591 1080 1344     		add	r3, r3, r2
 20592 1082 03F50173 		add	r3, r3, #516
 20593 1086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20594 1088 002B     		cmp	r3, #0
 20595 108a 2FD0     		beq	.L772
2686:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20596              		.loc 1 2686 0
 20597 108c 07F11C03 		add	r3, r7, #28
 20598 1090 1846     		mov	r0, r3
 20599 1092 FFF7FEFF 		bl	strlen
 20600 1096 0346     		mov	r3, r0
 20601 1098 1A46     		mov	r2, r3
 20602 109a 07F11C03 		add	r3, r7, #28
 20603 109e 1344     		add	r3, r3, r2
 20604 10a0 0E4A     		ldr	r2, .L789+48
 20605 10a2 1068     		ldr	r0, [r2]	@ unaligned
 20606 10a4 1860     		str	r0, [r3]	@ unaligned
 20607 10a6 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20608 10a8 9A80     		strh	r2, [r3, #4]	@ unaligned
 20609 10aa 2EE0     		b	.L773
 20610              	.L790:
 20611              		.align	2
 20612              	.L789:
 20613 10ac A0190000 		.word	.LC241
 20614 10b0 BC190000 		.word	.LC242
 20615 10b4 5C110000 		.word	.LC152
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 452


 20616 10b8 801A0000 		.word	.LC250
 20617 10bc 9C1A0000 		.word	.LC251
 20618 10c0 C41A0000 		.word	.LC252
 20619 10c4 00000000 		.word	N_IMU_Connected
 20620 10c8 D81A0000 		.word	.LC253
 20621 10cc EC1A0000 		.word	.LC254
 20622 10d0 00000000 		.word	IMU_connected
 20623 10d4 041B0000 		.word	.LC255
 20624 10d8 181B0000 		.word	.LC256
 20625 10dc 20130000 		.word	.LC175
 20626 10e0 28130000 		.word	.LC176
 20627 10e4 2C1B0000 		.word	.LC257
 20628 10e8 3C1B0000 		.word	.LC258
 20629              	.L772:
2687:..\src/command_processing.c **** 			else
2688:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 20630              		.loc 1 2688 0
 20631 10ec 07F11C03 		add	r3, r7, #28
 20632 10f0 1846     		mov	r0, r3
 20633 10f2 FFF7FEFF 		bl	strlen
 20634 10f6 0346     		mov	r3, r0
 20635 10f8 1A46     		mov	r2, r3
 20636 10fa 07F11C03 		add	r3, r7, #28
 20637 10fe 1344     		add	r3, r3, r2
 20638 1100 584A     		ldr	r2, .L791
 20639 1102 1068     		ldr	r0, [r2]	@ unaligned
 20640 1104 1860     		str	r0, [r3]	@ unaligned
 20641 1106 1279     		ldrb	r2, [r2, #4]
 20642 1108 1A71     		strb	r2, [r3, #4]
 20643              	.L773:
2689:..\src/command_processing.c **** 			strcat(str, "\tQuaternion: ");                
 20644              		.loc 1 2689 0
 20645 110a 07F11C03 		add	r3, r7, #28
 20646 110e 1846     		mov	r0, r3
 20647 1110 FFF7FEFF 		bl	strlen
 20648 1114 0346     		mov	r3, r0
 20649 1116 1A46     		mov	r2, r3
 20650 1118 07F11C03 		add	r3, r7, #28
 20651 111c 1344     		add	r3, r3, r2
 20652 111e 524A     		ldr	r2, .L791+4
 20653 1120 1C46     		mov	r4, r3
 20654 1122 1346     		mov	r3, r2
 20655 1124 07CB     		ldmia	r3!, {r0, r1, r2}
 20656 1126 2060     		str	r0, [r4]	@ unaligned
 20657 1128 6160     		str	r1, [r4, #4]	@ unaligned
 20658 112a A260     		str	r2, [r4, #8]	@ unaligned
 20659 112c 1B88     		ldrh	r3, [r3]	@ unaligned
 20660 112e A381     		strh	r3, [r4, #12]	@ unaligned
2690:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 20661              		.loc 1 2690 0
 20662 1130 4E4A     		ldr	r2, .L791+8
 20663 1132 D7F89430 		ldr	r3, [r7, #148]
 20664 1136 1344     		add	r3, r3, r2
 20665 1138 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20666 113a 1946     		mov	r1, r3
 20667 113c D7F88C20 		ldr	r2, [r7, #140]
 20668 1140 0B46     		mov	r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 453


 20669 1142 9B00     		lsls	r3, r3, #2
 20670 1144 0B44     		add	r3, r3, r1
 20671 1146 1344     		add	r3, r3, r2
 20672 1148 03F20523 		addw	r3, r3, #517
 20673 114c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20674 114e 002B     		cmp	r3, #0
 20675 1150 0FD0     		beq	.L774
2691:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20676              		.loc 1 2691 0
 20677 1152 07F11C03 		add	r3, r7, #28
 20678 1156 1846     		mov	r0, r3
 20679 1158 FFF7FEFF 		bl	strlen
 20680 115c 0346     		mov	r3, r0
 20681 115e 1A46     		mov	r2, r3
 20682 1160 07F11C03 		add	r3, r7, #28
 20683 1164 1344     		add	r3, r3, r2
 20684 1166 424A     		ldr	r2, .L791+12
 20685 1168 1068     		ldr	r0, [r2]	@ unaligned
 20686 116a 1860     		str	r0, [r3]	@ unaligned
 20687 116c 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20688 116e 9A80     		strh	r2, [r3, #4]	@ unaligned
 20689 1170 0EE0     		b	.L775
 20690              	.L774:
2692:..\src/command_processing.c **** 			else
2693:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 20691              		.loc 1 2693 0
 20692 1172 07F11C03 		add	r3, r7, #28
 20693 1176 1846     		mov	r0, r3
 20694 1178 FFF7FEFF 		bl	strlen
 20695 117c 0346     		mov	r3, r0
 20696 117e 1A46     		mov	r2, r3
 20697 1180 07F11C03 		add	r3, r7, #28
 20698 1184 1344     		add	r3, r3, r2
 20699 1186 374A     		ldr	r2, .L791
 20700 1188 1068     		ldr	r0, [r2]	@ unaligned
 20701 118a 1860     		str	r0, [r3]	@ unaligned
 20702 118c 1279     		ldrb	r2, [r2, #4]
 20703 118e 1A71     		strb	r2, [r3, #4]
 20704              	.L775:
2694:..\src/command_processing.c **** 			strcat(str, "\tTemperature: ");
 20705              		.loc 1 2694 0
 20706 1190 07F11C03 		add	r3, r7, #28
 20707 1194 1846     		mov	r0, r3
 20708 1196 FFF7FEFF 		bl	strlen
 20709 119a 0346     		mov	r3, r0
 20710 119c 1A46     		mov	r2, r3
 20711 119e 07F11C03 		add	r3, r7, #28
 20712 11a2 1344     		add	r3, r3, r2
 20713 11a4 334A     		ldr	r2, .L791+16
 20714 11a6 1C46     		mov	r4, r3
 20715 11a8 1346     		mov	r3, r2
 20716 11aa 07CB     		ldmia	r3!, {r0, r1, r2}
 20717 11ac 2060     		str	r0, [r4]	@ unaligned
 20718 11ae 6160     		str	r1, [r4, #4]	@ unaligned
 20719 11b0 A260     		str	r2, [r4, #8]	@ unaligned
 20720 11b2 1A88     		ldrh	r2, [r3]	@ unaligned
 20721 11b4 9B78     		ldrb	r3, [r3, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 454


 20722 11b6 A281     		strh	r2, [r4, #12]	@ unaligned
 20723 11b8 A373     		strb	r3, [r4, #14]
2695:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 20724              		.loc 1 2695 0
 20725 11ba 2C4A     		ldr	r2, .L791+8
 20726 11bc D7F89430 		ldr	r3, [r7, #148]
 20727 11c0 1344     		add	r3, r3, r2
 20728 11c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20729 11c4 1946     		mov	r1, r3
 20730 11c6 D7F88C20 		ldr	r2, [r7, #140]
 20731 11ca 0B46     		mov	r3, r1
 20732 11cc 9B00     		lsls	r3, r3, #2
 20733 11ce 0B44     		add	r3, r3, r1
 20734 11d0 1344     		add	r3, r3, r2
 20735 11d2 03F20623 		addw	r3, r3, #518
 20736 11d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20737 11d8 002B     		cmp	r3, #0
 20738 11da 0FD0     		beq	.L776
2696:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20739              		.loc 1 2696 0
 20740 11dc 07F11C03 		add	r3, r7, #28
 20741 11e0 1846     		mov	r0, r3
 20742 11e2 FFF7FEFF 		bl	strlen
 20743 11e6 0346     		mov	r3, r0
 20744 11e8 1A46     		mov	r2, r3
 20745 11ea 07F11C03 		add	r3, r7, #28
 20746 11ee 1344     		add	r3, r3, r2
 20747 11f0 1F4A     		ldr	r2, .L791+12
 20748 11f2 1068     		ldr	r0, [r2]	@ unaligned
 20749 11f4 1860     		str	r0, [r3]	@ unaligned
 20750 11f6 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20751 11f8 9A80     		strh	r2, [r3, #4]	@ unaligned
 20752 11fa 0EE0     		b	.L777
 20753              	.L776:
2697:..\src/command_processing.c **** 			else
2698:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 20754              		.loc 1 2698 0
 20755 11fc 07F11C03 		add	r3, r7, #28
 20756 1200 1846     		mov	r0, r3
 20757 1202 FFF7FEFF 		bl	strlen
 20758 1206 0346     		mov	r3, r0
 20759 1208 1A46     		mov	r2, r3
 20760 120a 07F11C03 		add	r3, r7, #28
 20761 120e 1344     		add	r3, r3, r2
 20762 1210 144A     		ldr	r2, .L791
 20763 1212 1068     		ldr	r0, [r2]	@ unaligned
 20764 1214 1860     		str	r0, [r3]	@ unaligned
 20765 1216 1279     		ldrb	r2, [r2, #4]
 20766 1218 1A71     		strb	r2, [r3, #4]
 20767              	.L777:
2699:..\src/command_processing.c **** 				 
2700:..\src/command_processing.c **** 			strcat(info_string, str);
 20768              		.loc 1 2700 0 discriminator 2
 20769 121a 07F11C03 		add	r3, r7, #28
 20770 121e 1946     		mov	r1, r3
 20771 1220 7869     		ldr	r0, [r7, #20]
 20772 1222 FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 455


2670:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20773              		.loc 1 2670 0 discriminator 2
 20774 1226 D7F89430 		ldr	r3, [r7, #148]
 20775 122a 0133     		adds	r3, r3, #1
 20776 122c C7F89430 		str	r3, [r7, #148]
 20777              	.L767:
2670:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20778              		.loc 1 2670 0 is_stmt 0 discriminator 1
 20779 1230 114B     		ldr	r3, .L791+20
 20780 1232 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20781 1234 1A46     		mov	r2, r3
 20782 1236 D7F89430 		ldr	r3, [r7, #148]
 20783 123a 9A42     		cmp	r2, r3
 20784 123c 3FF773AE 		bgt	.L778
2701:..\src/command_processing.c **** 		}       
2702:..\src/command_processing.c **** 		
2703:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 20785              		.loc 1 2703 0 is_stmt 1
 20786 1240 7869     		ldr	r0, [r7, #20]
 20787 1242 FFF7FEFF 		bl	strlen
 20788 1246 0346     		mov	r3, r0
 20789 1248 1A46     		mov	r2, r3
 20790 124a 7B69     		ldr	r3, [r7, #20]
 20791 124c 1344     		add	r3, r3, r2
 20792 124e 0B4A     		ldr	r2, .L791+24
 20793 1250 1188     		ldrh	r1, [r2]	@ unaligned
 20794 1252 9278     		ldrb	r2, [r2, #2]
 20795 1254 1980     		strh	r1, [r3]	@ unaligned
 20796 1256 9A70     		strb	r2, [r3, #2]
 20797              	.L780:
2704:..\src/command_processing.c **** 	}
2705:..\src/command_processing.c **** }
 20798              		.loc 1 2705 0
 20799 1258 00BF     		nop
 20800 125a 9C37     		adds	r7, r7, #156
 20801              		.cfi_def_cfa_offset 36
 20802 125c BD46     		mov	sp, r7
 20803              		.cfi_def_cfa_register 13
 20804              		@ sp needed
 20805 125e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 20806              	.L792:
 20807 1262 00BF     		.align	2
 20808              	.L791:
 20809 1264 28130000 		.word	.LC176
 20810 1268 501B0000 		.word	.LC259
 20811 126c 00000000 		.word	IMU_connected
 20812 1270 20130000 		.word	.LC175
 20813 1274 601B0000 		.word	.LC260
 20814 1278 00000000 		.word	N_IMU_Connected
 20815 127c 5C110000 		.word	.LC152
 20816              		.cfi_endproc
 20817              	.LFE74:
 20818              		.size	prepare_SD_param_info, .-prepare_SD_param_info
 20819              		.section	.rodata
 20820 1ede 0000     		.align	2
 20821              	.LC294:
 20822 1ee0 486F7572 		.ascii	"Hour,Min,Sec,\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 456


 20822      2C4D696E 
 20822      2C536563 
 20822      2C00
 20823 1eee 0000     		.align	2
 20824              	.LC295:
 20825 1ef0 42696E5F 		.ascii	"Bin_%d_Pos,\000"
 20825      25645F50 
 20825      6F732C00 
 20826              		.align	2
 20827              	.LC296:
 20828 1efc 42696E5F 		.ascii	"Bin_%d_Curr,\000"
 20828      25645F43 
 20828      7572722C 
 20828      00
 20829 1f09 000000   		.align	2
 20830              	.LC297:
 20831 1f0c 454D475F 		.ascii	"EMG_1_act,EMG_2_act,Rest_times,Wire_disp,Total_powe"
 20831      315F6163 
 20831      742C454D 
 20831      475F325F 
 20831      6163742C 
 20832 1f3f 725F6F6E 		.ascii	"r_on_time,Total_rest_time\000"
 20832      5F74696D 
 20832      652C546F 
 20832      74616C5F 
 20832      72657374 
 20833              		.section	.text.prepare_SD_legend,"ax",%progbits
 20834              		.align	2
 20835              		.global	prepare_SD_legend
 20836              		.thumb
 20837              		.thumb_func
 20838              		.type	prepare_SD_legend, %function
 20839              	prepare_SD_legend:
 20840              	.LFB75:
2706:..\src/command_processing.c **** 
2707:..\src/command_processing.c **** 
2708:..\src/command_processing.c **** //==============================================================================
2709:..\src/command_processing.c **** //                                                        PREPARE SD CARD LEGEND
2710:..\src/command_processing.c **** //==============================================================================
2711:..\src/command_processing.c **** void prepare_SD_legend(char *info_string)
2712:..\src/command_processing.c **** {
 20841              		.loc 1 2712 0
 20842              		.cfi_startproc
 20843              		@ args = 0, pretend = 0, frame = 112
 20844              		@ frame_needed = 1, uses_anonymous_args = 0
 20845 0000 90B5     		push	{r4, r7, lr}
 20846              		.cfi_def_cfa_offset 12
 20847              		.cfi_offset 4, -12
 20848              		.cfi_offset 7, -8
 20849              		.cfi_offset 14, -4
 20850 0002 9DB0     		sub	sp, sp, #116
 20851              		.cfi_def_cfa_offset 128
 20852 0004 00AF     		add	r7, sp, #0
 20853              		.cfi_def_cfa_register 7
 20854 0006 7860     		str	r0, [r7, #4]
2713:..\src/command_processing.c ****     char str[100];  
2714:..\src/command_processing.c ****     int i;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 457


2715:..\src/command_processing.c ****         
2716:..\src/command_processing.c ****     // Legend
2717:..\src/command_processing.c ****     strcpy(info_string, "Hour,Min,Sec,");
 20855              		.loc 1 2717 0
 20856 0008 7B68     		ldr	r3, [r7, #4]
 20857 000a 2A4A     		ldr	r2, .L798
 20858 000c 1C46     		mov	r4, r3
 20859 000e 1346     		mov	r3, r2
 20860 0010 07CB     		ldmia	r3!, {r0, r1, r2}
 20861 0012 2060     		str	r0, [r4]	@ unaligned
 20862 0014 6160     		str	r1, [r4, #4]	@ unaligned
 20863 0016 A260     		str	r2, [r4, #8]	@ unaligned
 20864 0018 1B88     		ldrh	r3, [r3]	@ unaligned
 20865 001a A381     		strh	r3, [r4, #12]	@ unaligned
2718:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 20866              		.loc 1 2718 0
 20867 001c 0123     		movs	r3, #1
 20868 001e FB66     		str	r3, [r7, #108]
 20869 0020 0FE0     		b	.L794
 20870              	.L795:
2719:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Pos,", i); 
 20871              		.loc 1 2719 0 discriminator 3
 20872 0022 07F10803 		add	r3, r7, #8
 20873 0026 FA6E     		ldr	r2, [r7, #108]
 20874 0028 2349     		ldr	r1, .L798+4
 20875 002a 1846     		mov	r0, r3
 20876 002c FFF7FEFF 		bl	sprintf
2720:..\src/command_processing.c ****         strcat(info_string, str);
 20877              		.loc 1 2720 0 discriminator 3
 20878 0030 07F10803 		add	r3, r7, #8
 20879 0034 1946     		mov	r1, r3
 20880 0036 7868     		ldr	r0, [r7, #4]
 20881 0038 FFF7FEFF 		bl	strcat
2718:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 20882              		.loc 1 2718 0 discriminator 3
 20883 003c FB6E     		ldr	r3, [r7, #108]
 20884 003e 0133     		adds	r3, r3, #1
 20885 0040 FB66     		str	r3, [r7, #108]
 20886              	.L794:
2718:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 20887              		.loc 1 2718 0 is_stmt 0 discriminator 1
 20888 0042 FB6E     		ldr	r3, [r7, #108]
 20889 0044 0A2B     		cmp	r3, #10
 20890 0046 ECDD     		ble	.L795
2721:..\src/command_processing.c ****     }
2722:..\src/command_processing.c ****     for (i=1; i<=4;i++){        // Current bins
 20891              		.loc 1 2722 0 is_stmt 1
 20892 0048 0123     		movs	r3, #1
 20893 004a FB66     		str	r3, [r7, #108]
 20894 004c 0FE0     		b	.L796
 20895              	.L797:
2723:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 20896              		.loc 1 2723 0 discriminator 3
 20897 004e 07F10803 		add	r3, r7, #8
 20898 0052 FA6E     		ldr	r2, [r7, #108]
 20899 0054 1949     		ldr	r1, .L798+8
 20900 0056 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 458


 20901 0058 FFF7FEFF 		bl	sprintf
2724:..\src/command_processing.c ****         strcat(info_string, str);
 20902              		.loc 1 2724 0 discriminator 3
 20903 005c 07F10803 		add	r3, r7, #8
 20904 0060 1946     		mov	r1, r3
 20905 0062 7868     		ldr	r0, [r7, #4]
 20906 0064 FFF7FEFF 		bl	strcat
2722:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 20907              		.loc 1 2722 0 discriminator 3
 20908 0068 FB6E     		ldr	r3, [r7, #108]
 20909 006a 0133     		adds	r3, r3, #1
 20910 006c FB66     		str	r3, [r7, #108]
 20911              	.L796:
2722:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 20912              		.loc 1 2722 0 is_stmt 0 discriminator 1
 20913 006e FB6E     		ldr	r3, [r7, #108]
 20914 0070 042B     		cmp	r3, #4
 20915 0072 ECDD     		ble	.L797
2725:..\src/command_processing.c ****     }
2726:..\src/command_processing.c ****     sprintf(str, "EMG_1_act,EMG_2_act,Rest_times,Wire_disp,Total_power_on_time,Total_rest_time");
 20916              		.loc 1 2726 0 is_stmt 1
 20917 0074 07F10803 		add	r3, r7, #8
 20918 0078 114A     		ldr	r2, .L798+12
 20919 007a 1846     		mov	r0, r3
 20920 007c 1146     		mov	r1, r2
 20921 007e 4D23     		movs	r3, #77
 20922 0080 1A46     		mov	r2, r3
 20923 0082 FFF7FEFF 		bl	memcpy
2727:..\src/command_processing.c ****     strcat(info_string, str);
 20924              		.loc 1 2727 0
 20925 0086 07F10803 		add	r3, r7, #8
 20926 008a 1946     		mov	r1, r3
 20927 008c 7868     		ldr	r0, [r7, #4]
 20928 008e FFF7FEFF 		bl	strcat
2728:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 20929              		.loc 1 2728 0
 20930 0092 7868     		ldr	r0, [r7, #4]
 20931 0094 FFF7FEFF 		bl	strlen
 20932 0098 0346     		mov	r3, r0
 20933 009a 1A46     		mov	r2, r3
 20934 009c 7B68     		ldr	r3, [r7, #4]
 20935 009e 1344     		add	r3, r3, r2
 20936 00a0 084A     		ldr	r2, .L798+16
 20937 00a2 1188     		ldrh	r1, [r2]	@ unaligned
 20938 00a4 9278     		ldrb	r2, [r2, #2]
 20939 00a6 1980     		strh	r1, [r3]	@ unaligned
 20940 00a8 9A70     		strb	r2, [r3, #2]
2729:..\src/command_processing.c **** }
 20941              		.loc 1 2729 0
 20942 00aa 00BF     		nop
 20943 00ac 7437     		adds	r7, r7, #116
 20944              		.cfi_def_cfa_offset 12
 20945 00ae BD46     		mov	sp, r7
 20946              		.cfi_def_cfa_register 13
 20947              		@ sp needed
 20948 00b0 90BD     		pop	{r4, r7, pc}
 20949              	.L799:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 459


 20950 00b2 00BF     		.align	2
 20951              	.L798:
 20952 00b4 E01E0000 		.word	.LC294
 20953 00b8 F01E0000 		.word	.LC295
 20954 00bc FC1E0000 		.word	.LC296
 20955 00c0 0C1F0000 		.word	.LC297
 20956 00c4 5C110000 		.word	.LC152
 20957              		.cfi_endproc
 20958              	.LFE75:
 20959              		.size	prepare_SD_legend, .-prepare_SD_legend
 20960              		.section	.rodata
 20961 1f59 000000   		.align	2
 20962              	.LC298:
 20963 1f5c 25303264 		.ascii	"%02d,%02d,%02d,\000"
 20963      2C253032 
 20963      642C2530 
 20963      32642C00 
 20964              		.align	2
 20965              	.LC299:
 20966 1f6c 256C752C 		.ascii	"%lu,\000"
 20966      00
 20967 1f71 000000   		.align	2
 20968              	.LC300:
 20969 1f74 256C752C 		.ascii	"%lu,%lu,\000"
 20969      256C752C 
 20969      00
 20970 1f7d 000000   		.align	2
 20971              	.LC301:
 20972 1f80 256C752C 		.ascii	"%lu,%lu,%lu,%lu\000"
 20972      256C752C 
 20972      256C752C 
 20972      256C7500 
 20973              		.section	.text.prepare_SD_info,"ax",%progbits
 20974              		.align	2
 20975              		.global	prepare_SD_info
 20976              		.thumb
 20977              		.thumb_func
 20978              		.type	prepare_SD_info, %function
 20979              	prepare_SD_info:
 20980              	.LFB76:
2730:..\src/command_processing.c **** 
2731:..\src/command_processing.c **** 
2732:..\src/command_processing.c **** //==============================================================================
2733:..\src/command_processing.c **** //                                                          PREPARE SD CARD INFO
2734:..\src/command_processing.c **** //==============================================================================
2735:..\src/command_processing.c **** void prepare_SD_info(char *info_string)
2736:..\src/command_processing.c **** {
 20981              		.loc 1 2736 0
 20982              		.cfi_startproc
 20983              		@ args = 0, pretend = 0, frame = 112
 20984              		@ frame_needed = 1, uses_anonymous_args = 0
 20985 0000 90B5     		push	{r4, r7, lr}
 20986              		.cfi_def_cfa_offset 12
 20987              		.cfi_offset 4, -12
 20988              		.cfi_offset 7, -8
 20989              		.cfi_offset 14, -4
 20990 0002 9FB0     		sub	sp, sp, #124
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 460


 20991              		.cfi_def_cfa_offset 136
 20992 0004 02AF     		add	r7, sp, #8
 20993              		.cfi_def_cfa 7, 128
 20994 0006 7860     		str	r0, [r7, #4]
2737:..\src/command_processing.c ****     char str[100];  
2738:..\src/command_processing.c ****     int i;
2739:..\src/command_processing.c ****             
2740:..\src/command_processing.c ****     strcpy(info_string, "");
 20995              		.loc 1 2740 0
 20996 0008 7B68     		ldr	r3, [r7, #4]
 20997 000a 0022     		movs	r2, #0
 20998 000c 1A70     		strb	r2, [r3]
2741:..\src/command_processing.c ****     
2742:..\src/command_processing.c ****     // Time
2743:..\src/command_processing.c ****     strcat(info_string, "");
2744:..\src/command_processing.c ****     sprintf(str, "%02d,%02d,%02d,", (int)g_mem.exp.curr_time[3], (int)g_mem.exp.curr_time[4], (int)
 20999              		.loc 1 2744 0
 21000 000e 424B     		ldr	r3, .L805
 21001 0010 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 21002 0014 1A46     		mov	r2, r3
 21003 0016 404B     		ldr	r3, .L805
 21004 0018 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 21005 001c 1946     		mov	r1, r3
 21006 001e 3E4B     		ldr	r3, .L805
 21007 0020 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 21008 0024 07F10800 		add	r0, r7, #8
 21009 0028 0093     		str	r3, [sp]
 21010 002a 0B46     		mov	r3, r1
 21011 002c 3B49     		ldr	r1, .L805+4
 21012 002e FFF7FEFF 		bl	sprintf
2745:..\src/command_processing.c ****     strcat(info_string, str);
 21013              		.loc 1 2745 0
 21014 0032 07F10803 		add	r3, r7, #8
 21015 0036 1946     		mov	r1, r3
 21016 0038 7868     		ldr	r0, [r7, #4]
 21017 003a FFF7FEFF 		bl	strcat
2746:..\src/command_processing.c **** 
2747:..\src/command_processing.c ****     // Pos_Bin
2748:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 21018              		.loc 1 2748 0
 21019 003e 0123     		movs	r3, #1
 21020 0040 FB66     		str	r3, [r7, #108]
 21021 0042 14E0     		b	.L801
 21022              	.L802:
2749:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 21023              		.loc 1 2749 0 discriminator 3
 21024 0044 FB6E     		ldr	r3, [r7, #108]
 21025 0046 013B     		subs	r3, r3, #1
 21026 0048 334A     		ldr	r2, .L805
 21027 004a 0633     		adds	r3, r3, #6
 21028 004c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 21029 0050 07F10803 		add	r3, r7, #8
 21030 0054 3249     		ldr	r1, .L805+8
 21031 0056 1846     		mov	r0, r3
 21032 0058 FFF7FEFF 		bl	sprintf
2750:..\src/command_processing.c ****         strcat(info_string, str);
 21033              		.loc 1 2750 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 461


 21034 005c 07F10803 		add	r3, r7, #8
 21035 0060 1946     		mov	r1, r3
 21036 0062 7868     		ldr	r0, [r7, #4]
 21037 0064 FFF7FEFF 		bl	strcat
2748:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 21038              		.loc 1 2748 0 discriminator 3
 21039 0068 FB6E     		ldr	r3, [r7, #108]
 21040 006a 0133     		adds	r3, r3, #1
 21041 006c FB66     		str	r3, [r7, #108]
 21042              	.L801:
2748:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 21043              		.loc 1 2748 0 is_stmt 0 discriminator 1
 21044 006e FB6E     		ldr	r3, [r7, #108]
 21045 0070 0A2B     		cmp	r3, #10
 21046 0072 E7DD     		ble	.L802
2751:..\src/command_processing.c ****     }
2752:..\src/command_processing.c ****     
2753:..\src/command_processing.c ****     // Curr_Bin
2754:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 21047              		.loc 1 2754 0 is_stmt 1
 21048 0074 0123     		movs	r3, #1
 21049 0076 FB66     		str	r3, [r7, #108]
 21050 0078 14E0     		b	.L803
 21051              	.L804:
2755:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 21052              		.loc 1 2755 0 discriminator 3
 21053 007a FB6E     		ldr	r3, [r7, #108]
 21054 007c 013B     		subs	r3, r3, #1
 21055 007e 264A     		ldr	r2, .L805
 21056 0080 1033     		adds	r3, r3, #16
 21057 0082 52F82320 		ldr	r2, [r2, r3, lsl #2]
 21058 0086 07F10803 		add	r3, r7, #8
 21059 008a 2549     		ldr	r1, .L805+8
 21060 008c 1846     		mov	r0, r3
 21061 008e FFF7FEFF 		bl	sprintf
2756:..\src/command_processing.c ****         strcat(info_string, str);
 21062              		.loc 1 2756 0 discriminator 3
 21063 0092 07F10803 		add	r3, r7, #8
 21064 0096 1946     		mov	r1, r3
 21065 0098 7868     		ldr	r0, [r7, #4]
 21066 009a FFF7FEFF 		bl	strcat
2754:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 21067              		.loc 1 2754 0 discriminator 3
 21068 009e FB6E     		ldr	r3, [r7, #108]
 21069 00a0 0133     		adds	r3, r3, #1
 21070 00a2 FB66     		str	r3, [r7, #108]
 21071              	.L803:
2754:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 21072              		.loc 1 2754 0 is_stmt 0 discriminator 1
 21073 00a4 FB6E     		ldr	r3, [r7, #108]
 21074 00a6 042B     		cmp	r3, #4
 21075 00a8 E7DD     		ble	.L804
2757:..\src/command_processing.c ****     }
2758:..\src/command_processing.c ****        
2759:..\src/command_processing.c ****     // EMG_1, EMG_2
2760:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,", g_mem.cnt.emg_counter[0], g_mem.cnt.emg_counter[1]);
 21076              		.loc 1 2760 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 462


 21077 00aa 1B4B     		ldr	r3, .L805
 21078 00ac 1A69     		ldr	r2, [r3, #16]
 21079 00ae 1A4B     		ldr	r3, .L805
 21080 00b0 5B69     		ldr	r3, [r3, #20]
 21081 00b2 07F10800 		add	r0, r7, #8
 21082 00b6 1B49     		ldr	r1, .L805+12
 21083 00b8 FFF7FEFF 		bl	sprintf
2761:..\src/command_processing.c ****     strcat(info_string, str);
 21084              		.loc 1 2761 0
 21085 00bc 07F10803 		add	r3, r7, #8
 21086 00c0 1946     		mov	r1, r3
 21087 00c2 7868     		ldr	r0, [r7, #4]
 21088 00c4 FFF7FEFF 		bl	strcat
2762:..\src/command_processing.c ****     
2763:..\src/command_processing.c ****     // Rest_times, Wire_disp, Total_power_on_time, Total_rest_time
2764:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,%lu,%lu", g_mem.cnt.rest_counter, g_mem.cnt.wire_disp, g_mem.cnt.total_ti
 21089              		.loc 1 2764 0
 21090 00c8 134B     		ldr	r3, .L805
 21091 00ca 196D     		ldr	r1, [r3, #80]
 21092 00cc 124B     		ldr	r3, .L805
 21093 00ce 5C6D     		ldr	r4, [r3, #84]
 21094 00d0 114B     		ldr	r3, .L805
 21095 00d2 9B6D     		ldr	r3, [r3, #88]
 21096 00d4 104A     		ldr	r2, .L805
 21097 00d6 D26D     		ldr	r2, [r2, #92]
 21098 00d8 07F10800 		add	r0, r7, #8
 21099 00dc 0192     		str	r2, [sp, #4]
 21100 00de 0093     		str	r3, [sp]
 21101 00e0 2346     		mov	r3, r4
 21102 00e2 0A46     		mov	r2, r1
 21103 00e4 1049     		ldr	r1, .L805+16
 21104 00e6 FFF7FEFF 		bl	sprintf
2765:..\src/command_processing.c ****     strcat(info_string, str);
 21105              		.loc 1 2765 0
 21106 00ea 07F10803 		add	r3, r7, #8
 21107 00ee 1946     		mov	r1, r3
 21108 00f0 7868     		ldr	r0, [r7, #4]
 21109 00f2 FFF7FEFF 		bl	strcat
2766:..\src/command_processing.c ****     
2767:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 21110              		.loc 1 2767 0
 21111 00f6 7868     		ldr	r0, [r7, #4]
 21112 00f8 FFF7FEFF 		bl	strlen
 21113 00fc 0346     		mov	r3, r0
 21114 00fe 1A46     		mov	r2, r3
 21115 0100 7B68     		ldr	r3, [r7, #4]
 21116 0102 1344     		add	r3, r3, r2
 21117 0104 094A     		ldr	r2, .L805+20
 21118 0106 1188     		ldrh	r1, [r2]	@ unaligned
 21119 0108 9278     		ldrb	r2, [r2, #2]
 21120 010a 1980     		strh	r1, [r3]	@ unaligned
 21121 010c 9A70     		strb	r2, [r3, #2]
2768:..\src/command_processing.c **** }
 21122              		.loc 1 2768 0
 21123 010e 00BF     		nop
 21124 0110 7437     		adds	r7, r7, #116
 21125              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 463


 21126 0112 BD46     		mov	sp, r7
 21127              		.cfi_def_cfa_register 13
 21128              		@ sp needed
 21129 0114 90BD     		pop	{r4, r7, pc}
 21130              	.L806:
 21131 0116 00BF     		.align	2
 21132              	.L805:
 21133 0118 00000000 		.word	g_mem
 21134 011c 5C1F0000 		.word	.LC298
 21135 0120 6C1F0000 		.word	.LC299
 21136 0124 741F0000 		.word	.LC300
 21137 0128 801F0000 		.word	.LC301
 21138 012c 5C110000 		.word	.LC152
 21139              		.cfi_endproc
 21140              	.LFE76:
 21141              		.size	prepare_SD_info, .-prepare_SD_info
 21142              		.section	.rodata
 21143              		.align	2
 21144              	.LC302:
 21145 1f90 54696D65 		.ascii	"Time,EMG1,EMG2\012\000"
 21145      2C454D47 
 21145      312C454D 
 21145      47320A00 
 21146              		.section	.text.prepare_SD_EMG_History_legend,"ax",%progbits
 21147              		.align	2
 21148              		.global	prepare_SD_EMG_History_legend
 21149              		.thumb
 21150              		.thumb_func
 21151              		.type	prepare_SD_EMG_History_legend, %function
 21152              	prepare_SD_EMG_History_legend:
 21153              	.LFB77:
2769:..\src/command_processing.c **** 
2770:..\src/command_processing.c **** //==============================================================================
2771:..\src/command_processing.c **** //                                            PREPARE SD CARD EMG HISTORY LEGEND
2772:..\src/command_processing.c **** //==============================================================================
2773:..\src/command_processing.c **** void prepare_SD_EMG_History_legend(char *info_string)
2774:..\src/command_processing.c **** {
 21154              		.loc 1 2774 0
 21155              		.cfi_startproc
 21156              		@ args = 0, pretend = 0, frame = 8
 21157              		@ frame_needed = 1, uses_anonymous_args = 0
 21158              		@ link register save eliminated.
 21159 0000 B0B4     		push	{r4, r5, r7}
 21160              		.cfi_def_cfa_offset 12
 21161              		.cfi_offset 4, -12
 21162              		.cfi_offset 5, -8
 21163              		.cfi_offset 7, -4
 21164 0002 83B0     		sub	sp, sp, #12
 21165              		.cfi_def_cfa_offset 24
 21166 0004 00AF     		add	r7, sp, #0
 21167              		.cfi_def_cfa_register 7
 21168 0006 7860     		str	r0, [r7, #4]
2775:..\src/command_processing.c ****         
2776:..\src/command_processing.c ****     // Legend
2777:..\src/command_processing.c ****     strcpy(info_string, "Time,EMG1,EMG2\n");
 21169              		.loc 1 2777 0
 21170 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 464


 21171 000a 064A     		ldr	r2, .L808
 21172 000c 1C46     		mov	r4, r3
 21173 000e 1546     		mov	r5, r2
 21174 0010 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 21175 0012 2060     		str	r0, [r4]	@ unaligned
 21176 0014 6160     		str	r1, [r4, #4]	@ unaligned
 21177 0016 A260     		str	r2, [r4, #8]	@ unaligned
 21178 0018 E360     		str	r3, [r4, #12]	@ unaligned
2778:..\src/command_processing.c ****     
2779:..\src/command_processing.c **** }
 21179              		.loc 1 2779 0
 21180 001a 00BF     		nop
 21181 001c 0C37     		adds	r7, r7, #12
 21182              		.cfi_def_cfa_offset 12
 21183 001e BD46     		mov	sp, r7
 21184              		.cfi_def_cfa_register 13
 21185              		@ sp needed
 21186 0020 B0BC     		pop	{r4, r5, r7}
 21187              		.cfi_restore 7
 21188              		.cfi_restore 5
 21189              		.cfi_restore 4
 21190              		.cfi_def_cfa_offset 0
 21191 0022 7047     		bx	lr
 21192              	.L809:
 21193              		.align	2
 21194              	.L808:
 21195 0024 901F0000 		.word	.LC302
 21196              		.cfi_endproc
 21197              	.LFE77:
 21198              		.size	prepare_SD_EMG_History_legend, .-prepare_SD_EMG_History_legend
 21199              		.section	.rodata
 21200              		.align	2
 21201              	.LC303:
 21202 1fa0 252E3166 		.ascii	"%.1f,%u,%u\012\000"
 21202      2C25752C 
 21202      25750A00 
 21203              		.global	__aeabi_dadd
 21204              		.global	__aeabi_d2f
 21205              		.section	.text.prepare_SD_EMG_history,"ax",%progbits
 21206              		.align	2
 21207              		.global	prepare_SD_EMG_history
 21208              		.thumb
 21209              		.thumb_func
 21210              		.type	prepare_SD_EMG_history, %function
 21211              	prepare_SD_EMG_history:
 21212              	.LFB78:
2780:..\src/command_processing.c **** 
2781:..\src/command_processing.c **** //==============================================================================
2782:..\src/command_processing.c **** //                                                   PREPARE SD CARD EMG HISTORY
2783:..\src/command_processing.c **** //==============================================================================
2784:..\src/command_processing.c **** void prepare_SD_EMG_history(char *info_string)
2785:..\src/command_processing.c **** {
 21213              		.loc 1 2785 0
 21214              		.cfi_startproc
 21215              		@ args = 0, pretend = 0, frame = 120
 21216              		@ frame_needed = 1, uses_anonymous_args = 0
 21217 0000 B0B5     		push	{r4, r5, r7, lr}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 465


 21218              		.cfi_def_cfa_offset 16
 21219              		.cfi_offset 4, -16
 21220              		.cfi_offset 5, -12
 21221              		.cfi_offset 7, -8
 21222              		.cfi_offset 14, -4
 21223 0002 A0B0     		sub	sp, sp, #128
 21224              		.cfi_def_cfa_offset 144
 21225 0004 02AF     		add	r7, sp, #8
 21226              		.cfi_def_cfa 7, 136
 21227 0006 7860     		str	r0, [r7, #4]
2786:..\src/command_processing.c ****     char str_data[100] = "";
 21228              		.loc 1 2786 0
 21229 0008 0023     		movs	r3, #0
 21230 000a FB60     		str	r3, [r7, #12]
 21231 000c 07F11003 		add	r3, r7, #16
 21232 0010 6022     		movs	r2, #96
 21233 0012 0021     		movs	r1, #0
 21234 0014 1846     		mov	r0, r3
 21235 0016 FFF7FEFF 		bl	memset
2787:..\src/command_processing.c ****     uint16 v_idx = 0;
 21236              		.loc 1 2787 0
 21237 001a 0023     		movs	r3, #0
 21238 001c A7F87630 		strh	r3, [r7, #118]	@ movhi
2788:..\src/command_processing.c ****     static float h_time = 0.0;
2789:..\src/command_processing.c ****                 
2790:..\src/command_processing.c ****     strcpy(info_string, "");
 21239              		.loc 1 2790 0
 21240 0020 7B68     		ldr	r3, [r7, #4]
 21241 0022 0022     		movs	r2, #0
 21242 0024 1A70     		strb	r2, [r3]
 21243              	.LBB25:
2791:..\src/command_processing.c ****     
2792:..\src/command_processing.c ****     // Oldest samples of the vector
2793:..\src/command_processing.c ****     for (int i = 0; i < SAMPLES_FOR_EMG_HISTORY; i++){
 21244              		.loc 1 2793 0
 21245 0026 0023     		movs	r3, #0
 21246 0028 3B67     		str	r3, [r7, #112]
 21247 002a 4AE0     		b	.L811
 21248              	.L813:
2794:..\src/command_processing.c ****               
2795:..\src/command_processing.c ****         // Send line per line all the history vector
2796:..\src/command_processing.c ****         // First line (oldest) is made by values of emg_history_next_idx index (they will be the ne
2797:..\src/command_processing.c ****         v_idx = emg_history_next_idx + i;
 21249              		.loc 1 2797 0
 21250 002c 2C4B     		ldr	r3, .L814+8
 21251 002e 1B68     		ldr	r3, [r3]
 21252 0030 9AB2     		uxth	r2, r3
 21253 0032 3B6F     		ldr	r3, [r7, #112]
 21254 0034 9BB2     		uxth	r3, r3
 21255 0036 1344     		add	r3, r3, r2
 21256 0038 A7F87630 		strh	r3, [r7, #118]	@ movhi
2798:..\src/command_processing.c ****         if (v_idx > SAMPLES_FOR_EMG_HISTORY){
 21257              		.loc 1 2798 0
 21258 003c B7F87630 		ldrh	r3, [r7, #118]
 21259 0040 B3F5167F 		cmp	r3, #600
 21260 0044 05D9     		bls	.L812
2799:..\src/command_processing.c ****             v_idx -= SAMPLES_FOR_EMG_HISTORY;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 466


 21261              		.loc 1 2799 0
 21262 0046 B7F87630 		ldrh	r3, [r7, #118]	@ movhi
 21263 004a A3F51673 		sub	r3, r3, #600
 21264 004e A7F87630 		strh	r3, [r7, #118]	@ movhi
 21265              	.L812:
2800:..\src/command_processing.c ****         }
2801:..\src/command_processing.c ****         
2802:..\src/command_processing.c ****         // Time vector is reconstructed setting oldest samples as t=0.0s
2803:..\src/command_processing.c ****         sprintf(str_data, "%.1f,%u,%u\n", h_time, emg_history[v_idx][0], emg_history[v_idx][1]);
 21266              		.loc 1 2803 0 discriminator 2
 21267 0052 244B     		ldr	r3, .L814+12
 21268 0054 1B68     		ldr	r3, [r3]	@ float
 21269 0056 1846     		mov	r0, r3
 21270 0058 FFF7FEFF 		bl	__aeabi_f2d
 21271 005c 0446     		mov	r4, r0
 21272 005e 0D46     		mov	r5, r1
 21273 0060 B7F87630 		ldrh	r3, [r7, #118]
 21274 0064 204A     		ldr	r2, .L814+16
 21275 0066 32F82330 		ldrh	r3, [r2, r3, lsl #2]
 21276 006a 1946     		mov	r1, r3
 21277 006c B7F87630 		ldrh	r3, [r7, #118]
 21278 0070 1D4A     		ldr	r2, .L814+16
 21279 0072 9B00     		lsls	r3, r3, #2
 21280 0074 1344     		add	r3, r3, r2
 21281 0076 5B88     		ldrh	r3, [r3, #2]
 21282 0078 07F10C00 		add	r0, r7, #12
 21283 007c 0193     		str	r3, [sp, #4]
 21284 007e 0091     		str	r1, [sp]
 21285 0080 2246     		mov	r2, r4
 21286 0082 2B46     		mov	r3, r5
 21287 0084 1949     		ldr	r1, .L814+20
 21288 0086 FFF7FEFF 		bl	sprintf
2804:..\src/command_processing.c ****         
2805:..\src/command_processing.c ****         strcat(info_string, str_data);
 21289              		.loc 1 2805 0 discriminator 2
 21290 008a 07F10C03 		add	r3, r7, #12
 21291 008e 1946     		mov	r1, r3
 21292 0090 7868     		ldr	r0, [r7, #4]
 21293 0092 FFF7FEFF 		bl	strcat
2806:..\src/command_processing.c ****         
2807:..\src/command_processing.c ****         h_time += 0.2;      // Row time interval is 200ms (5Hz)
 21294              		.loc 1 2807 0 discriminator 2
 21295 0096 134B     		ldr	r3, .L814+12
 21296 0098 1B68     		ldr	r3, [r3]	@ float
 21297 009a 1846     		mov	r0, r3
 21298 009c FFF7FEFF 		bl	__aeabi_f2d
 21299 00a0 0DA3     		adr	r3, .L814
 21300 00a2 D3E90023 		ldrd	r2, [r3]
 21301 00a6 FFF7FEFF 		bl	__aeabi_dadd
 21302 00aa 0346     		mov	r3, r0
 21303 00ac 0C46     		mov	r4, r1
 21304 00ae 1846     		mov	r0, r3
 21305 00b0 2146     		mov	r1, r4
 21306 00b2 FFF7FEFF 		bl	__aeabi_d2f
 21307 00b6 0246     		mov	r2, r0
 21308 00b8 0A4B     		ldr	r3, .L814+12
 21309 00ba 1A60     		str	r2, [r3]	@ float
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 467


2793:..\src/command_processing.c ****               
 21310              		.loc 1 2793 0 discriminator 2
 21311 00bc 3B6F     		ldr	r3, [r7, #112]
 21312 00be 0133     		adds	r3, r3, #1
 21313 00c0 3B67     		str	r3, [r7, #112]
 21314              	.L811:
2793:..\src/command_processing.c ****               
 21315              		.loc 1 2793 0 is_stmt 0 discriminator 1
 21316 00c2 3B6F     		ldr	r3, [r7, #112]
 21317 00c4 B3F5167F 		cmp	r3, #600
 21318 00c8 B0DB     		blt	.L813
 21319              	.LBE25:
2808:..\src/command_processing.c **** 
2809:..\src/command_processing.c ****     }
2810:..\src/command_processing.c ****     
2811:..\src/command_processing.c **** }
 21320              		.loc 1 2811 0 is_stmt 1
 21321 00ca 00BF     		nop
 21322 00cc 7837     		adds	r7, r7, #120
 21323              		.cfi_def_cfa_offset 16
 21324 00ce BD46     		mov	sp, r7
 21325              		.cfi_def_cfa_register 13
 21326              		@ sp needed
 21327 00d0 B0BD     		pop	{r4, r5, r7, pc}
 21328              	.L815:
 21329 00d2 00BFAFF3 		.align	3
 21329      0080
 21330              	.L814:
 21331 00d8 9A999999 		.word	-1717986918
 21332 00dc 9999C93F 		.word	1070176665
 21333 00e0 00000000 		.word	emg_history_next_idx
 21334 00e4 00000000 		.word	h_time.11222
 21335 00e8 00000000 		.word	emg_history
 21336 00ec A01F0000 		.word	.LC303
 21337              		.cfi_endproc
 21338              	.LFE78:
 21339              		.size	prepare_SD_EMG_history, .-prepare_SD_EMG_history
 21340              		.section	.rodata
 21341              		.align	2
 21342              	.LC304:
 21343 1fac 53454E53 		.ascii	"SENSORS INFO\015\012\000"
 21343      4F525320 
 21343      494E464F 
 21343      0D0A00
 21344 1fbb 00       		.align	2
 21345              	.LC305:
 21346 1fbc 09416363 		.ascii	"\011Acc: %d\011%d\011%d\015\012\000"
 21346      3A202564 
 21346      09256409 
 21346      25640D0A 
 21346      00
 21347 1fcd 000000   		.align	2
 21348              	.LC306:
 21349 1fd0 09477972 		.ascii	"\011Gyro: %d\011%d\011%d\015\012\000"
 21349      6F3A2025 
 21349      64092564 
 21349      0925640D 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 468


 21349      0A00
 21350 1fe2 0000     		.align	2
 21351              	.LC307:
 21352 1fe4 094D6167 		.ascii	"\011Mag: %d\011%d\011%d\015\012\000"
 21352      3A202564 
 21352      09256409 
 21352      25640D0A 
 21352      00
 21353 1ff5 000000   		.align	2
 21354              	.LC308:
 21355 1ff8 09517561 		.ascii	"\011Quat: %.3f\011%.3f\011%.3f\011%.3f\015\012\000"
 21355      743A2025 
 21355      2E336609 
 21355      252E3366 
 21355      09252E33 
 21356 2015 000000   		.align	2
 21357              	.LC309:
 21358 2018 0954656D 		.ascii	"\011Temperature: %d\015\012\000"
 21358      70657261 
 21358      74757265 
 21358      3A202564 
 21358      0D0A00
 21359              		.section	.text.IMU_reading_info,"ax",%progbits
 21360              		.align	2
 21361              		.global	IMU_reading_info
 21362              		.thumb
 21363              		.thumb_func
 21364              		.type	IMU_reading_info, %function
 21365              	IMU_reading_info:
 21366              	.LFB79:
2812:..\src/command_processing.c **** 
2813:..\src/command_processing.c **** //==============================================================================
2814:..\src/command_processing.c **** //                                                              IMU READING INFO
2815:..\src/command_processing.c **** //==============================================================================
2816:..\src/command_processing.c **** 
2817:..\src/command_processing.c **** void IMU_reading_info(char *info_string)
2818:..\src/command_processing.c **** {
 21367              		.loc 1 2818 0
 21368              		.cfi_startproc
 21369              		@ args = 0, pretend = 0, frame = 312
 21370              		@ frame_needed = 1, uses_anonymous_args = 0
 21371 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 21372              		.cfi_def_cfa_offset 32
 21373              		.cfi_offset 4, -32
 21374              		.cfi_offset 5, -28
 21375              		.cfi_offset 7, -24
 21376              		.cfi_offset 8, -20
 21377              		.cfi_offset 9, -16
 21378              		.cfi_offset 10, -12
 21379              		.cfi_offset 11, -8
 21380              		.cfi_offset 14, -4
 21381 0004 D4B0     		sub	sp, sp, #336
 21382              		.cfi_def_cfa_offset 368
 21383 0006 06AF     		add	r7, sp, #24
 21384              		.cfi_def_cfa 7, 344
 21385 0008 3B1D     		adds	r3, r7, #4
 21386 000a 1860     		str	r0, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 469


2819:..\src/command_processing.c ****     char str[300];  
2820:..\src/command_processing.c ****     int i;
2821:..\src/command_processing.c ****                  
2822:..\src/command_processing.c ****     strcat(info_string, "SENSORS INFO\r\n");
 21387              		.loc 1 2822 0
 21388 000c 3B1D     		adds	r3, r7, #4
 21389 000e 1868     		ldr	r0, [r3]
 21390 0010 FFF7FEFF 		bl	strlen
 21391 0014 0346     		mov	r3, r0
 21392 0016 1A46     		mov	r2, r3
 21393 0018 3B1D     		adds	r3, r7, #4
 21394 001a 1B68     		ldr	r3, [r3]
 21395 001c 1344     		add	r3, r3, r2
 21396 001e C94A     		ldr	r2, .L824
 21397 0020 1C46     		mov	r4, r3
 21398 0022 1346     		mov	r3, r2
 21399 0024 07CB     		ldmia	r3!, {r0, r1, r2}
 21400 0026 2060     		str	r0, [r4]	@ unaligned
 21401 0028 6160     		str	r1, [r4, #4]	@ unaligned
 21402 002a A260     		str	r2, [r4, #8]	@ unaligned
 21403 002c 1A88     		ldrh	r2, [r3]	@ unaligned
 21404 002e 9B78     		ldrb	r3, [r3, #2]
 21405 0030 A281     		strh	r2, [r4, #12]	@ unaligned
 21406 0032 A373     		strb	r3, [r4, #14]
2823:..\src/command_processing.c ****     for (i=0; i<N_IMU_Connected; i++){
 21407              		.loc 1 2823 0
 21408 0034 0023     		movs	r3, #0
 21409 0036 C7F83431 		str	r3, [r7, #308]
 21410 003a 66E1     		b	.L817
 21411              	.L823:
2824:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 21412              		.loc 1 2824 0
 21413 003c C24A     		ldr	r2, .L824+4
 21414 003e D7F83431 		ldr	r3, [r7, #308]
 21415 0042 1344     		add	r3, r3, r2
 21416 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21417 0046 07F10800 		add	r0, r7, #8
 21418 004a D7F83421 		ldr	r2, [r7, #308]
 21419 004e BF49     		ldr	r1, .L824+8
 21420 0050 FFF7FEFF 		bl	sprintf
2825:..\src/command_processing.c ****         strcat(info_string, str);
 21421              		.loc 1 2825 0
 21422 0054 07F10802 		add	r2, r7, #8
 21423 0058 3B1D     		adds	r3, r7, #4
 21424 005a 1146     		mov	r1, r2
 21425 005c 1868     		ldr	r0, [r3]
 21426 005e FFF7FEFF 		bl	strcat
2826:..\src/command_processing.c ****         
2827:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][0])){
 21427              		.loc 1 2827 0
 21428 0062 B94A     		ldr	r2, .L824+4
 21429 0064 D7F83431 		ldr	r3, [r7, #308]
 21430 0068 1344     		add	r3, r3, r2
 21431 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21432 006c 1946     		mov	r1, r3
 21433 006e B84A     		ldr	r2, .L824+12
 21434 0070 0B46     		mov	r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 470


 21435 0072 9B00     		lsls	r3, r3, #2
 21436 0074 0B44     		add	r3, r3, r1
 21437 0076 1344     		add	r3, r3, r2
 21438 0078 03F20223 		addw	r3, r3, #514
 21439 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21440 007e 002B     		cmp	r3, #0
 21441 0080 31D0     		beq	.L818
2828:..\src/command_processing.c ****             sprintf(str, "\tAcc: %d\t%d\t%d\r\n", (int16) g_imu[i].accel_value[0], (int16) g_imu[i]
 21442              		.loc 1 2828 0
 21443 0082 B449     		ldr	r1, .L824+16
 21444 0084 D7F83421 		ldr	r2, [r7, #308]
 21445 0088 1346     		mov	r3, r2
 21446 008a 9B00     		lsls	r3, r3, #2
 21447 008c 1344     		add	r3, r3, r2
 21448 008e DB00     		lsls	r3, r3, #3
 21449 0090 0B44     		add	r3, r3, r1
 21450 0092 0233     		adds	r3, r3, #2
 21451 0094 B3F90030 		ldrsh	r3, [r3]
 21452 0098 1C46     		mov	r4, r3
 21453 009a AE49     		ldr	r1, .L824+16
 21454 009c D7F83421 		ldr	r2, [r7, #308]
 21455 00a0 1346     		mov	r3, r2
 21456 00a2 9B00     		lsls	r3, r3, #2
 21457 00a4 1344     		add	r3, r3, r2
 21458 00a6 DB00     		lsls	r3, r3, #3
 21459 00a8 0B44     		add	r3, r3, r1
 21460 00aa 0433     		adds	r3, r3, #4
 21461 00ac B3F90030 		ldrsh	r3, [r3]
 21462 00b0 1D46     		mov	r5, r3
 21463 00b2 A849     		ldr	r1, .L824+16
 21464 00b4 D7F83421 		ldr	r2, [r7, #308]
 21465 00b8 1346     		mov	r3, r2
 21466 00ba 9B00     		lsls	r3, r3, #2
 21467 00bc 1344     		add	r3, r3, r2
 21468 00be DB00     		lsls	r3, r3, #3
 21469 00c0 0B44     		add	r3, r3, r1
 21470 00c2 0633     		adds	r3, r3, #6
 21471 00c4 B3F90030 		ldrsh	r3, [r3]
 21472 00c8 07F10800 		add	r0, r7, #8
 21473 00cc 0093     		str	r3, [sp]
 21474 00ce 2B46     		mov	r3, r5
 21475 00d0 2246     		mov	r2, r4
 21476 00d2 A149     		ldr	r1, .L824+20
 21477 00d4 FFF7FEFF 		bl	sprintf
2829:..\src/command_processing.c ****             strcat(info_string, str);
 21478              		.loc 1 2829 0
 21479 00d8 07F10802 		add	r2, r7, #8
 21480 00dc 3B1D     		adds	r3, r7, #4
 21481 00de 1146     		mov	r1, r2
 21482 00e0 1868     		ldr	r0, [r3]
 21483 00e2 FFF7FEFF 		bl	strcat
 21484              	.L818:
2830:..\src/command_processing.c ****         }
2831:..\src/command_processing.c **** 
2832:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][1])){
 21485              		.loc 1 2832 0
 21486 00e6 984A     		ldr	r2, .L824+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 471


 21487 00e8 D7F83431 		ldr	r3, [r7, #308]
 21488 00ec 1344     		add	r3, r3, r2
 21489 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21490 00f0 1946     		mov	r1, r3
 21491 00f2 974A     		ldr	r2, .L824+12
 21492 00f4 0B46     		mov	r3, r1
 21493 00f6 9B00     		lsls	r3, r3, #2
 21494 00f8 0B44     		add	r3, r3, r1
 21495 00fa 1344     		add	r3, r3, r2
 21496 00fc 03F20323 		addw	r3, r3, #515
 21497 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21498 0102 002B     		cmp	r3, #0
 21499 0104 31D0     		beq	.L819
2833:..\src/command_processing.c ****             sprintf(str, "\tGyro: %d\t%d\t%d\r\n", (int16) g_imu[i].gyro_value[0], (int16) g_imu[i]
 21500              		.loc 1 2833 0
 21501 0106 9349     		ldr	r1, .L824+16
 21502 0108 D7F83421 		ldr	r2, [r7, #308]
 21503 010c 1346     		mov	r3, r2
 21504 010e 9B00     		lsls	r3, r3, #2
 21505 0110 1344     		add	r3, r3, r2
 21506 0112 DB00     		lsls	r3, r3, #3
 21507 0114 0B44     		add	r3, r3, r1
 21508 0116 0833     		adds	r3, r3, #8
 21509 0118 B3F90030 		ldrsh	r3, [r3]
 21510 011c 1C46     		mov	r4, r3
 21511 011e 8D49     		ldr	r1, .L824+16
 21512 0120 D7F83421 		ldr	r2, [r7, #308]
 21513 0124 1346     		mov	r3, r2
 21514 0126 9B00     		lsls	r3, r3, #2
 21515 0128 1344     		add	r3, r3, r2
 21516 012a DB00     		lsls	r3, r3, #3
 21517 012c 0B44     		add	r3, r3, r1
 21518 012e 0A33     		adds	r3, r3, #10
 21519 0130 B3F90030 		ldrsh	r3, [r3]
 21520 0134 1D46     		mov	r5, r3
 21521 0136 8749     		ldr	r1, .L824+16
 21522 0138 D7F83421 		ldr	r2, [r7, #308]
 21523 013c 1346     		mov	r3, r2
 21524 013e 9B00     		lsls	r3, r3, #2
 21525 0140 1344     		add	r3, r3, r2
 21526 0142 DB00     		lsls	r3, r3, #3
 21527 0144 0B44     		add	r3, r3, r1
 21528 0146 0C33     		adds	r3, r3, #12
 21529 0148 B3F90030 		ldrsh	r3, [r3]
 21530 014c 07F10800 		add	r0, r7, #8
 21531 0150 0093     		str	r3, [sp]
 21532 0152 2B46     		mov	r3, r5
 21533 0154 2246     		mov	r2, r4
 21534 0156 8149     		ldr	r1, .L824+24
 21535 0158 FFF7FEFF 		bl	sprintf
2834:..\src/command_processing.c ****             strcat(info_string, str);
 21536              		.loc 1 2834 0
 21537 015c 07F10802 		add	r2, r7, #8
 21538 0160 3B1D     		adds	r3, r7, #4
 21539 0162 1146     		mov	r1, r2
 21540 0164 1868     		ldr	r0, [r3]
 21541 0166 FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 472


 21542              	.L819:
2835:..\src/command_processing.c ****         }
2836:..\src/command_processing.c **** 
2837:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][2])){
 21543              		.loc 1 2837 0
 21544 016a 774A     		ldr	r2, .L824+4
 21545 016c D7F83431 		ldr	r3, [r7, #308]
 21546 0170 1344     		add	r3, r3, r2
 21547 0172 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21548 0174 1946     		mov	r1, r3
 21549 0176 764A     		ldr	r2, .L824+12
 21550 0178 0B46     		mov	r3, r1
 21551 017a 9B00     		lsls	r3, r3, #2
 21552 017c 0B44     		add	r3, r3, r1
 21553 017e 1344     		add	r3, r3, r2
 21554 0180 03F50173 		add	r3, r3, #516
 21555 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21556 0186 002B     		cmp	r3, #0
 21557 0188 31D0     		beq	.L820
2838:..\src/command_processing.c ****             sprintf(str, "\tMag: %d\t%d\t%d\r\n", (int16) g_imu[i].mag_value[0], (int16) g_imu[i].m
 21558              		.loc 1 2838 0
 21559 018a 7249     		ldr	r1, .L824+16
 21560 018c D7F83421 		ldr	r2, [r7, #308]
 21561 0190 1346     		mov	r3, r2
 21562 0192 9B00     		lsls	r3, r3, #2
 21563 0194 1344     		add	r3, r3, r2
 21564 0196 DB00     		lsls	r3, r3, #3
 21565 0198 0B44     		add	r3, r3, r1
 21566 019a 0E33     		adds	r3, r3, #14
 21567 019c B3F90030 		ldrsh	r3, [r3]
 21568 01a0 1C46     		mov	r4, r3
 21569 01a2 6C49     		ldr	r1, .L824+16
 21570 01a4 D7F83421 		ldr	r2, [r7, #308]
 21571 01a8 1346     		mov	r3, r2
 21572 01aa 9B00     		lsls	r3, r3, #2
 21573 01ac 1344     		add	r3, r3, r2
 21574 01ae DB00     		lsls	r3, r3, #3
 21575 01b0 0B44     		add	r3, r3, r1
 21576 01b2 1033     		adds	r3, r3, #16
 21577 01b4 B3F90030 		ldrsh	r3, [r3]
 21578 01b8 1D46     		mov	r5, r3
 21579 01ba 6649     		ldr	r1, .L824+16
 21580 01bc D7F83421 		ldr	r2, [r7, #308]
 21581 01c0 1346     		mov	r3, r2
 21582 01c2 9B00     		lsls	r3, r3, #2
 21583 01c4 1344     		add	r3, r3, r2
 21584 01c6 DB00     		lsls	r3, r3, #3
 21585 01c8 0B44     		add	r3, r3, r1
 21586 01ca 1233     		adds	r3, r3, #18
 21587 01cc B3F90030 		ldrsh	r3, [r3]
 21588 01d0 07F10800 		add	r0, r7, #8
 21589 01d4 0093     		str	r3, [sp]
 21590 01d6 2B46     		mov	r3, r5
 21591 01d8 2246     		mov	r2, r4
 21592 01da 6149     		ldr	r1, .L824+28
 21593 01dc FFF7FEFF 		bl	sprintf
2839:..\src/command_processing.c ****             strcat(info_string, str);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 473


 21594              		.loc 1 2839 0
 21595 01e0 07F10802 		add	r2, r7, #8
 21596 01e4 3B1D     		adds	r3, r7, #4
 21597 01e6 1146     		mov	r1, r2
 21598 01e8 1868     		ldr	r0, [r3]
 21599 01ea FFF7FEFF 		bl	strcat
 21600              	.L820:
2840:..\src/command_processing.c ****         }
2841:..\src/command_processing.c ****         
2842:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][3])){
 21601              		.loc 1 2842 0
 21602 01ee 564A     		ldr	r2, .L824+4
 21603 01f0 D7F83431 		ldr	r3, [r7, #308]
 21604 01f4 1344     		add	r3, r3, r2
 21605 01f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21606 01f8 1946     		mov	r1, r3
 21607 01fa 554A     		ldr	r2, .L824+12
 21608 01fc 0B46     		mov	r3, r1
 21609 01fe 9B00     		lsls	r3, r3, #2
 21610 0200 0B44     		add	r3, r3, r1
 21611 0202 1344     		add	r3, r3, r2
 21612 0204 03F20523 		addw	r3, r3, #517
 21613 0208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21614 020a 002B     		cmp	r3, #0
 21615 020c 4FD0     		beq	.L821
2843:..\src/command_processing.c ****             sprintf(str, "\tQuat: %.3f\t%.3f\t%.3f\t%.3f\r\n", (float) g_imu[i].quat_value[0], (flo
 21616              		.loc 1 2843 0
 21617 020e 5149     		ldr	r1, .L824+16
 21618 0210 D7F83421 		ldr	r2, [r7, #308]
 21619 0214 1346     		mov	r3, r2
 21620 0216 9B00     		lsls	r3, r3, #2
 21621 0218 1344     		add	r3, r3, r2
 21622 021a DB00     		lsls	r3, r3, #3
 21623 021c 0B44     		add	r3, r3, r1
 21624 021e 1433     		adds	r3, r3, #20
 21625 0220 1B68     		ldr	r3, [r3]	@ float
 21626 0222 1846     		mov	r0, r3
 21627 0224 FFF7FEFF 		bl	__aeabi_f2d
 21628 0228 8246     		mov	r10, r0
 21629 022a 8B46     		mov	fp, r1
 21630 022c 4949     		ldr	r1, .L824+16
 21631 022e D7F83421 		ldr	r2, [r7, #308]
 21632 0232 1346     		mov	r3, r2
 21633 0234 9B00     		lsls	r3, r3, #2
 21634 0236 1344     		add	r3, r3, r2
 21635 0238 DB00     		lsls	r3, r3, #3
 21636 023a 0B44     		add	r3, r3, r1
 21637 023c 1833     		adds	r3, r3, #24
 21638 023e 1B68     		ldr	r3, [r3]	@ float
 21639 0240 1846     		mov	r0, r3
 21640 0242 FFF7FEFF 		bl	__aeabi_f2d
 21641 0246 0446     		mov	r4, r0
 21642 0248 0D46     		mov	r5, r1
 21643 024a 4249     		ldr	r1, .L824+16
 21644 024c D7F83421 		ldr	r2, [r7, #308]
 21645 0250 1346     		mov	r3, r2
 21646 0252 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 474


 21647 0254 1344     		add	r3, r3, r2
 21648 0256 DB00     		lsls	r3, r3, #3
 21649 0258 0B44     		add	r3, r3, r1
 21650 025a 1C33     		adds	r3, r3, #28
 21651 025c 1B68     		ldr	r3, [r3]	@ float
 21652 025e 1846     		mov	r0, r3
 21653 0260 FFF7FEFF 		bl	__aeabi_f2d
 21654 0264 8046     		mov	r8, r0
 21655 0266 8946     		mov	r9, r1
 21656 0268 3A49     		ldr	r1, .L824+16
 21657 026a D7F83421 		ldr	r2, [r7, #308]
 21658 026e 1346     		mov	r3, r2
 21659 0270 9B00     		lsls	r3, r3, #2
 21660 0272 1344     		add	r3, r3, r2
 21661 0274 DB00     		lsls	r3, r3, #3
 21662 0276 0B44     		add	r3, r3, r1
 21663 0278 2033     		adds	r3, r3, #32
 21664 027a 1B68     		ldr	r3, [r3]	@ float
 21665 027c 1846     		mov	r0, r3
 21666 027e FFF7FEFF 		bl	__aeabi_f2d
 21667 0282 0246     		mov	r2, r0
 21668 0284 0B46     		mov	r3, r1
 21669 0286 07F10800 		add	r0, r7, #8
 21670 028a CDE90423 		strd	r2, [sp, #16]
 21671 028e CDE90289 		strd	r8, [sp, #8]
 21672 0292 CDE90045 		strd	r4, [sp]
 21673 0296 5246     		mov	r2, r10
 21674 0298 5B46     		mov	r3, fp
 21675 029a 3249     		ldr	r1, .L824+32
 21676 029c FFF7FEFF 		bl	sprintf
2844:..\src/command_processing.c ****             strcat(info_string, str);
 21677              		.loc 1 2844 0
 21678 02a0 07F10802 		add	r2, r7, #8
 21679 02a4 3B1D     		adds	r3, r7, #4
 21680 02a6 1146     		mov	r1, r2
 21681 02a8 1868     		ldr	r0, [r3]
 21682 02aa FFF7FEFF 		bl	strcat
 21683              	.L821:
2845:..\src/command_processing.c ****         }
2846:..\src/command_processing.c ****         
2847:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][4])){
 21684              		.loc 1 2847 0
 21685 02ae 264A     		ldr	r2, .L824+4
 21686 02b0 D7F83431 		ldr	r3, [r7, #308]
 21687 02b4 1344     		add	r3, r3, r2
 21688 02b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21689 02b8 1946     		mov	r1, r3
 21690 02ba 254A     		ldr	r2, .L824+12
 21691 02bc 0B46     		mov	r3, r1
 21692 02be 9B00     		lsls	r3, r3, #2
 21693 02c0 0B44     		add	r3, r3, r1
 21694 02c2 1344     		add	r3, r3, r2
 21695 02c4 03F20623 		addw	r3, r3, #518
 21696 02c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21697 02ca 002B     		cmp	r3, #0
 21698 02cc 18D0     		beq	.L822
2848:..\src/command_processing.c ****             sprintf(str, "\tTemperature: %d\r\n", (int16) g_imu[i].temp_value);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 475


 21699              		.loc 1 2848 0
 21700 02ce 2149     		ldr	r1, .L824+16
 21701 02d0 D7F83421 		ldr	r2, [r7, #308]
 21702 02d4 1346     		mov	r3, r2
 21703 02d6 9B00     		lsls	r3, r3, #2
 21704 02d8 1344     		add	r3, r3, r2
 21705 02da DB00     		lsls	r3, r3, #3
 21706 02dc 0B44     		add	r3, r3, r1
 21707 02de 2433     		adds	r3, r3, #36
 21708 02e0 B3F90030 		ldrsh	r3, [r3]
 21709 02e4 1A46     		mov	r2, r3
 21710 02e6 07F10803 		add	r3, r7, #8
 21711 02ea 1F49     		ldr	r1, .L824+36
 21712 02ec 1846     		mov	r0, r3
 21713 02ee FFF7FEFF 		bl	sprintf
2849:..\src/command_processing.c ****             strcat(info_string, str);
 21714              		.loc 1 2849 0
 21715 02f2 07F10802 		add	r2, r7, #8
 21716 02f6 3B1D     		adds	r3, r7, #4
 21717 02f8 1146     		mov	r1, r2
 21718 02fa 1868     		ldr	r0, [r3]
 21719 02fc FFF7FEFF 		bl	strcat
 21720              	.L822:
2823:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 21721              		.loc 1 2823 0 discriminator 2
 21722 0300 D7F83431 		ldr	r3, [r7, #308]
 21723 0304 0133     		adds	r3, r3, #1
 21724 0306 C7F83431 		str	r3, [r7, #308]
 21725              	.L817:
2823:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 21726              		.loc 1 2823 0 is_stmt 0 discriminator 1
 21727 030a 184B     		ldr	r3, .L824+40
 21728 030c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21729 030e 1A46     		mov	r2, r3
 21730 0310 D7F83431 		ldr	r3, [r7, #308]
 21731 0314 9A42     		cmp	r2, r3
 21732 0316 3FF791AE 		bgt	.L823
2850:..\src/command_processing.c ****         }
2851:..\src/command_processing.c ****         
2852:..\src/command_processing.c ****     }
2853:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 21733              		.loc 1 2853 0 is_stmt 1
 21734 031a 3B1D     		adds	r3, r7, #4
 21735 031c 1868     		ldr	r0, [r3]
 21736 031e FFF7FEFF 		bl	strlen
 21737 0322 0346     		mov	r3, r0
 21738 0324 1A46     		mov	r2, r3
 21739 0326 3B1D     		adds	r3, r7, #4
 21740 0328 1B68     		ldr	r3, [r3]
 21741 032a 1344     		add	r3, r3, r2
 21742 032c 104A     		ldr	r2, .L824+44
 21743 032e 1188     		ldrh	r1, [r2]	@ unaligned
 21744 0330 9278     		ldrb	r2, [r2, #2]
 21745 0332 1980     		strh	r1, [r3]	@ unaligned
 21746 0334 9A70     		strb	r2, [r3, #2]
2854:..\src/command_processing.c **** }
 21747              		.loc 1 2854 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 476


 21748 0336 00BF     		nop
 21749 0338 07F59C77 		add	r7, r7, #312
 21750              		.cfi_def_cfa_offset 32
 21751 033c BD46     		mov	sp, r7
 21752              		.cfi_def_cfa_register 13
 21753              		@ sp needed
 21754 033e BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 21755              	.L825:
 21756 0342 00BF     		.align	2
 21757              	.L824:
 21758 0344 AC1F0000 		.word	.LC304
 21759 0348 00000000 		.word	IMU_connected
 21760 034c 041B0000 		.word	.LC255
 21761 0350 00000000 		.word	c_mem
 21762 0354 00000000 		.word	g_imu
 21763 0358 BC1F0000 		.word	.LC305
 21764 035c D01F0000 		.word	.LC306
 21765 0360 E41F0000 		.word	.LC307
 21766 0364 F81F0000 		.word	.LC308
 21767 0368 18200000 		.word	.LC309
 21768 036c 00000000 		.word	N_IMU_Connected
 21769 0370 5C110000 		.word	.LC152
 21770              		.cfi_endproc
 21771              	.LFE79:
 21772              		.size	IMU_reading_info, .-IMU_reading_info
 21773              		.section	.text.commWrite_old_id,"ax",%progbits
 21774              		.align	2
 21775              		.global	commWrite_old_id
 21776              		.thumb
 21777              		.thumb_func
 21778              		.type	commWrite_old_id, %function
 21779              	commWrite_old_id:
 21780              	.LFB80:
2855:..\src/command_processing.c **** 
2856:..\src/command_processing.c **** //==============================================================================
2857:..\src/command_processing.c **** //                                                     WRITE FUNCTIONS FOR RS485
2858:..\src/command_processing.c **** //==============================================================================
2859:..\src/command_processing.c **** 
2860:..\src/command_processing.c **** void commWrite_old_id(uint8 *packet_data, uint16 packet_lenght, uint8 old_id)
2861:..\src/command_processing.c **** {
 21781              		.loc 1 2861 0
 21782              		.cfi_startproc
 21783              		@ args = 0, pretend = 0, frame = 16
 21784              		@ frame_needed = 1, uses_anonymous_args = 0
 21785 0000 80B5     		push	{r7, lr}
 21786              		.cfi_def_cfa_offset 8
 21787              		.cfi_offset 7, -8
 21788              		.cfi_offset 14, -4
 21789 0002 84B0     		sub	sp, sp, #16
 21790              		.cfi_def_cfa_offset 24
 21791 0004 00AF     		add	r7, sp, #0
 21792              		.cfi_def_cfa_register 7
 21793 0006 7860     		str	r0, [r7, #4]
 21794 0008 0B46     		mov	r3, r1
 21795 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 21796 000c 1346     		mov	r3, r2
 21797 000e 7B70     		strb	r3, [r7, #1]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 477


2862:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2863:..\src/command_processing.c **** 
2864:..\src/command_processing.c ****     // frame - start
2865:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21798              		.loc 1 2865 0
 21799 0010 3A20     		movs	r0, #58
 21800 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2866:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21801              		.loc 1 2866 0
 21802 0016 3A20     		movs	r0, #58
 21803 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2867:..\src/command_processing.c ****     // frame - ID
2868:..\src/command_processing.c ****     //if(old_id)
2869:..\src/command_processing.c ****         UART_RS485_PutChar(old_id);
 21804              		.loc 1 2869 0
 21805 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 21806 001e 1846     		mov	r0, r3
 21807 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2870:..\src/command_processing.c ****     //else
2871:..\src/command_processing.c ****         //UART_RS485_PutChar(g_mem.id);
2872:..\src/command_processing.c ****         
2873:..\src/command_processing.c ****     // frame - length
2874:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 21808              		.loc 1 2874 0
 21809 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 21810 0026 DBB2     		uxtb	r3, r3
 21811 0028 1846     		mov	r0, r3
 21812 002a FFF7FEFF 		bl	UART_RS485_PutChar
2875:..\src/command_processing.c ****     // frame - packet data
2876:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 21813              		.loc 1 2876 0
 21814 002e 0023     		movs	r3, #0
 21815 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 21816 0032 09E0     		b	.L827
 21817              	.L828:
2877:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21818              		.loc 1 2877 0 discriminator 3
 21819 0034 FB89     		ldrh	r3, [r7, #14]
 21820 0036 7A68     		ldr	r2, [r7, #4]
 21821 0038 1344     		add	r3, r3, r2
 21822 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21823 003c 1846     		mov	r0, r3
 21824 003e FFF7FEFF 		bl	UART_RS485_PutChar
2876:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21825              		.loc 1 2876 0 discriminator 3
 21826 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 21827 0044 0133     		adds	r3, r3, #1
 21828 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 21829              	.L827:
2876:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21830              		.loc 1 2876 0 is_stmt 0 discriminator 1
 21831 0048 FA89     		ldrh	r2, [r7, #14]
 21832 004a 7B88     		ldrh	r3, [r7, #2]
 21833 004c 9A42     		cmp	r2, r3
 21834 004e F1D3     		bcc	.L828
2878:..\src/command_processing.c ****     }
2879:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 478


2880:..\src/command_processing.c ****     index = 0;
 21835              		.loc 1 2880 0 is_stmt 1
 21836 0050 0023     		movs	r3, #0
 21837 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2881:..\src/command_processing.c **** 
2882:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 21838              		.loc 1 2882 0
 21839 0054 00BF     		nop
 21840              	.L830:
 21841              		.loc 1 2882 0 is_stmt 0 discriminator 2
 21842 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 21843 005a 0346     		mov	r3, r0
 21844 005c 03F00103 		and	r3, r3, #1
 21845 0060 002B     		cmp	r3, #0
 21846 0062 05D1     		bne	.L829
 21847              		.loc 1 2882 0 discriminator 1
 21848 0064 FB89     		ldrh	r3, [r7, #14]
 21849 0066 5A1C     		adds	r2, r3, #1
 21850 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 21851 006a B3F57A7F 		cmp	r3, #1000
 21852 006e F2D9     		bls	.L830
 21853              	.L829:
2883:..\src/command_processing.c **** 
2884:..\src/command_processing.c ****     RS485_CTS_Write(1);
 21854              		.loc 1 2884 0 is_stmt 1
 21855 0070 0120     		movs	r0, #1
 21856 0072 FFF7FEFF 		bl	RS485_CTS_Write
2885:..\src/command_processing.c ****     RS485_CTS_Write(0);
 21857              		.loc 1 2885 0
 21858 0076 0020     		movs	r0, #0
 21859 0078 FFF7FEFF 		bl	RS485_CTS_Write
2886:..\src/command_processing.c **** }
 21860              		.loc 1 2886 0
 21861 007c 00BF     		nop
 21862 007e 1037     		adds	r7, r7, #16
 21863              		.cfi_def_cfa_offset 8
 21864 0080 BD46     		mov	sp, r7
 21865              		.cfi_def_cfa_register 13
 21866              		@ sp needed
 21867 0082 80BD     		pop	{r7, pc}
 21868              		.cfi_endproc
 21869              	.LFE80:
 21870              		.size	commWrite_old_id, .-commWrite_old_id
 21871              		.section	.text.commWrite,"ax",%progbits
 21872              		.align	2
 21873              		.global	commWrite
 21874              		.thumb
 21875              		.thumb_func
 21876              		.type	commWrite, %function
 21877              	commWrite:
 21878              	.LFB81:
2887:..\src/command_processing.c **** 
2888:..\src/command_processing.c **** void commWrite(uint8 *packet_data, uint16 packet_lenght)
2889:..\src/command_processing.c **** {
 21879              		.loc 1 2889 0
 21880              		.cfi_startproc
 21881              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 479


 21882              		@ frame_needed = 1, uses_anonymous_args = 0
 21883 0000 80B5     		push	{r7, lr}
 21884              		.cfi_def_cfa_offset 8
 21885              		.cfi_offset 7, -8
 21886              		.cfi_offset 14, -4
 21887 0002 84B0     		sub	sp, sp, #16
 21888              		.cfi_def_cfa_offset 24
 21889 0004 00AF     		add	r7, sp, #0
 21890              		.cfi_def_cfa_register 7
 21891 0006 7860     		str	r0, [r7, #4]
 21892 0008 0B46     		mov	r3, r1
 21893 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2890:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2891:..\src/command_processing.c **** 
2892:..\src/command_processing.c ****     // frame - start
2893:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21894              		.loc 1 2893 0
 21895 000c 3A20     		movs	r0, #58
 21896 000e FFF7FEFF 		bl	UART_RS485_PutChar
2894:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21897              		.loc 1 2894 0
 21898 0012 3A20     		movs	r0, #58
 21899 0014 FFF7FEFF 		bl	UART_RS485_PutChar
2895:..\src/command_processing.c ****     // frame - ID
2896:..\src/command_processing.c ****     UART_RS485_PutChar(g_mem.dev.id);
 21900              		.loc 1 2896 0
 21901 0018 1A4B     		ldr	r3, .L836
 21902 001a 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 21903 001e 1846     		mov	r0, r3
 21904 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2897:..\src/command_processing.c ****     // frame - length
2898:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 21905              		.loc 1 2898 0
 21906 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 21907 0026 DBB2     		uxtb	r3, r3
 21908 0028 1846     		mov	r0, r3
 21909 002a FFF7FEFF 		bl	UART_RS485_PutChar
2899:..\src/command_processing.c ****     // frame - packet data
2900:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 21910              		.loc 1 2900 0
 21911 002e 0023     		movs	r3, #0
 21912 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 21913 0032 09E0     		b	.L832
 21914              	.L833:
2901:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21915              		.loc 1 2901 0 discriminator 3
 21916 0034 FB89     		ldrh	r3, [r7, #14]
 21917 0036 7A68     		ldr	r2, [r7, #4]
 21918 0038 1344     		add	r3, r3, r2
 21919 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21920 003c 1846     		mov	r0, r3
 21921 003e FFF7FEFF 		bl	UART_RS485_PutChar
2900:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21922              		.loc 1 2900 0 discriminator 3
 21923 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 21924 0044 0133     		adds	r3, r3, #1
 21925 0046 FB81     		strh	r3, [r7, #14]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 480


 21926              	.L832:
2900:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21927              		.loc 1 2900 0 is_stmt 0 discriminator 1
 21928 0048 FA89     		ldrh	r2, [r7, #14]
 21929 004a 7B88     		ldrh	r3, [r7, #2]
 21930 004c 9A42     		cmp	r2, r3
 21931 004e F1D3     		bcc	.L833
2902:..\src/command_processing.c ****     }
2903:..\src/command_processing.c **** 
2904:..\src/command_processing.c ****     index = 0;
 21932              		.loc 1 2904 0 is_stmt 1
 21933 0050 0023     		movs	r3, #0
 21934 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2905:..\src/command_processing.c **** 
2906:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 21935              		.loc 1 2906 0
 21936 0054 00BF     		nop
 21937              	.L835:
 21938              		.loc 1 2906 0 is_stmt 0 discriminator 2
 21939 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 21940 005a 0346     		mov	r3, r0
 21941 005c 03F00103 		and	r3, r3, #1
 21942 0060 002B     		cmp	r3, #0
 21943 0062 05D1     		bne	.L834
 21944              		.loc 1 2906 0 discriminator 1
 21945 0064 FB89     		ldrh	r3, [r7, #14]
 21946 0066 5A1C     		adds	r2, r3, #1
 21947 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 21948 006a B3F57A7F 		cmp	r3, #1000
 21949 006e F2D9     		bls	.L835
 21950              	.L834:
2907:..\src/command_processing.c **** 
2908:..\src/command_processing.c ****     RS485_CTS_Write(1);
 21951              		.loc 1 2908 0 is_stmt 1
 21952 0070 0120     		movs	r0, #1
 21953 0072 FFF7FEFF 		bl	RS485_CTS_Write
2909:..\src/command_processing.c ****     RS485_CTS_Write(0);
 21954              		.loc 1 2909 0
 21955 0076 0020     		movs	r0, #0
 21956 0078 FFF7FEFF 		bl	RS485_CTS_Write
2910:..\src/command_processing.c **** }
 21957              		.loc 1 2910 0
 21958 007c 00BF     		nop
 21959 007e 1037     		adds	r7, r7, #16
 21960              		.cfi_def_cfa_offset 8
 21961 0080 BD46     		mov	sp, r7
 21962              		.cfi_def_cfa_register 13
 21963              		@ sp needed
 21964 0082 80BD     		pop	{r7, pc}
 21965              	.L837:
 21966              		.align	2
 21967              	.L836:
 21968 0084 00000000 		.word	g_mem
 21969              		.cfi_endproc
 21970              	.LFE81:
 21971              		.size	commWrite, .-commWrite
 21972              		.section	.text.commWriteID,"ax",%progbits
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 481


 21973              		.align	2
 21974              		.global	commWriteID
 21975              		.thumb
 21976              		.thumb_func
 21977              		.type	commWriteID, %function
 21978              	commWriteID:
 21979              	.LFB82:
2911:..\src/command_processing.c **** 
2912:..\src/command_processing.c **** //==============================================================================
2913:..\src/command_processing.c **** //                                             WRITE FUNCTION FOR ANOTHER DEVICE
2914:..\src/command_processing.c **** //==============================================================================
2915:..\src/command_processing.c **** 
2916:..\src/command_processing.c **** void commWriteID(uint8 *packet_data, uint16 packet_lenght, uint8 id)
2917:..\src/command_processing.c **** {
 21980              		.loc 1 2917 0
 21981              		.cfi_startproc
 21982              		@ args = 0, pretend = 0, frame = 8
 21983              		@ frame_needed = 1, uses_anonymous_args = 0
 21984 0000 80B5     		push	{r7, lr}
 21985              		.cfi_def_cfa_offset 8
 21986              		.cfi_offset 7, -8
 21987              		.cfi_offset 14, -4
 21988 0002 82B0     		sub	sp, sp, #8
 21989              		.cfi_def_cfa_offset 16
 21990 0004 00AF     		add	r7, sp, #0
 21991              		.cfi_def_cfa_register 7
 21992 0006 7860     		str	r0, [r7, #4]
 21993 0008 0B46     		mov	r3, r1
 21994 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 21995 000c 1346     		mov	r3, r2
 21996 000e 7B70     		strb	r3, [r7, #1]
2918:..\src/command_processing.c ****     static uint16 CYDATA i;    // iterator
2919:..\src/command_processing.c **** 
2920:..\src/command_processing.c ****     // frame - start
2921:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21997              		.loc 1 2921 0
 21998 0010 3A20     		movs	r0, #58
 21999 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2922:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 22000              		.loc 1 2922 0
 22001 0016 3A20     		movs	r0, #58
 22002 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2923:..\src/command_processing.c ****     // frame - ID
2924:..\src/command_processing.c ****     UART_RS485_PutChar(id);
 22003              		.loc 1 2924 0
 22004 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 22005 001e 1846     		mov	r0, r3
 22006 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2925:..\src/command_processing.c ****     // frame - length
2926:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 22007              		.loc 1 2926 0
 22008 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 22009 0026 DBB2     		uxtb	r3, r3
 22010 0028 1846     		mov	r0, r3
 22011 002a FFF7FEFF 		bl	UART_RS485_PutChar
2927:..\src/command_processing.c ****     // frame - packet data
2928:..\src/command_processing.c ****     for(i = 0; i < packet_lenght; ++i) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 482


 22012              		.loc 1 2928 0
 22013 002e 1B4B     		ldr	r3, .L843
 22014 0030 0022     		movs	r2, #0
 22015 0032 1A80     		strh	r2, [r3]	@ movhi
 22016 0034 0EE0     		b	.L839
 22017              	.L840:
2929:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 22018              		.loc 1 2929 0 discriminator 3
 22019 0036 194B     		ldr	r3, .L843
 22020 0038 1B88     		ldrh	r3, [r3]
 22021 003a 1A46     		mov	r2, r3
 22022 003c 7B68     		ldr	r3, [r7, #4]
 22023 003e 1344     		add	r3, r3, r2
 22024 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22025 0042 1846     		mov	r0, r3
 22026 0044 FFF7FEFF 		bl	UART_RS485_PutChar
2928:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 22027              		.loc 1 2928 0 discriminator 3
 22028 0048 144B     		ldr	r3, .L843
 22029 004a 1B88     		ldrh	r3, [r3]
 22030 004c 0133     		adds	r3, r3, #1
 22031 004e 9AB2     		uxth	r2, r3
 22032 0050 124B     		ldr	r3, .L843
 22033 0052 1A80     		strh	r2, [r3]	@ movhi
 22034              	.L839:
2928:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 22035              		.loc 1 2928 0 is_stmt 0 discriminator 1
 22036 0054 114B     		ldr	r3, .L843
 22037 0056 1B88     		ldrh	r3, [r3]
 22038 0058 7A88     		ldrh	r2, [r7, #2]
 22039 005a 9A42     		cmp	r2, r3
 22040 005c EBD8     		bhi	.L840
2930:..\src/command_processing.c ****     }
2931:..\src/command_processing.c **** 
2932:..\src/command_processing.c ****     i = 0;
 22041              		.loc 1 2932 0 is_stmt 1
 22042 005e 0F4B     		ldr	r3, .L843
 22043 0060 0022     		movs	r2, #0
 22044 0062 1A80     		strh	r2, [r3]	@ movhi
2933:..\src/command_processing.c **** 
2934:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && i++ <= 1000){}
 22045              		.loc 1 2934 0
 22046 0064 00BF     		nop
 22047              	.L842:
 22048              		.loc 1 2934 0 is_stmt 0 discriminator 2
 22049 0066 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 22050 006a 0346     		mov	r3, r0
 22051 006c 03F00103 		and	r3, r3, #1
 22052 0070 002B     		cmp	r3, #0
 22053 0072 08D1     		bne	.L841
 22054              		.loc 1 2934 0 discriminator 1
 22055 0074 094B     		ldr	r3, .L843
 22056 0076 1B88     		ldrh	r3, [r3]
 22057 0078 5A1C     		adds	r2, r3, #1
 22058 007a 91B2     		uxth	r1, r2
 22059 007c 074A     		ldr	r2, .L843
 22060 007e 1180     		strh	r1, [r2]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 483


 22061 0080 B3F57A7F 		cmp	r3, #1000
 22062 0084 EFD9     		bls	.L842
 22063              	.L841:
2935:..\src/command_processing.c ****     
2936:..\src/command_processing.c ****     RS485_CTS_Write(1);
 22064              		.loc 1 2936 0 is_stmt 1
 22065 0086 0120     		movs	r0, #1
 22066 0088 FFF7FEFF 		bl	RS485_CTS_Write
2937:..\src/command_processing.c ****     RS485_CTS_Write(0);
 22067              		.loc 1 2937 0
 22068 008c 0020     		movs	r0, #0
 22069 008e FFF7FEFF 		bl	RS485_CTS_Write
2938:..\src/command_processing.c **** }
 22070              		.loc 1 2938 0
 22071 0092 00BF     		nop
 22072 0094 0837     		adds	r7, r7, #8
 22073              		.cfi_def_cfa_offset 8
 22074 0096 BD46     		mov	sp, r7
 22075              		.cfi_def_cfa_register 13
 22076              		@ sp needed
 22077 0098 80BD     		pop	{r7, pc}
 22078              	.L844:
 22079 009a 00BF     		.align	2
 22080              	.L843:
 22081 009c 04000000 		.word	i.11263
 22082              		.cfi_endproc
 22083              	.LFE82:
 22084              		.size	commWriteID, .-commWriteID
 22085              		.section	.text.LCRChecksum,"ax",%progbits
 22086              		.align	2
 22087              		.global	LCRChecksum
 22088              		.thumb
 22089              		.thumb_func
 22090              		.type	LCRChecksum, %function
 22091              	LCRChecksum:
 22092              	.LFB83:
2939:..\src/command_processing.c **** 
2940:..\src/command_processing.c **** //==============================================================================
2941:..\src/command_processing.c **** //                                                             CHECKSUM FUNCTION
2942:..\src/command_processing.c **** //==============================================================================
2943:..\src/command_processing.c **** 
2944:..\src/command_processing.c **** // Performs a XOR byte by byte on the entire vector
2945:..\src/command_processing.c **** 
2946:..\src/command_processing.c **** uint8 LCRChecksum(uint8 *data_array, uint8 data_length) {
 22093              		.loc 1 2946 0
 22094              		.cfi_startproc
 22095              		@ args = 0, pretend = 0, frame = 16
 22096              		@ frame_needed = 1, uses_anonymous_args = 0
 22097              		@ link register save eliminated.
 22098 0000 80B4     		push	{r7}
 22099              		.cfi_def_cfa_offset 4
 22100              		.cfi_offset 7, -4
 22101 0002 85B0     		sub	sp, sp, #20
 22102              		.cfi_def_cfa_offset 24
 22103 0004 00AF     		add	r7, sp, #0
 22104              		.cfi_def_cfa_register 7
 22105 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 484


 22106 0008 0B46     		mov	r3, r1
 22107 000a FB70     		strb	r3, [r7, #3]
2947:..\src/command_processing.c ****     
2948:..\src/command_processing.c ****     uint8 CYDATA i;
2949:..\src/command_processing.c ****     uint8 CYDATA checksum = 0x00;
 22108              		.loc 1 2949 0
 22109 000c 0023     		movs	r3, #0
 22110 000e BB73     		strb	r3, [r7, #14]
2950:..\src/command_processing.c ****     
2951:..\src/command_processing.c ****     for(i = 0; i < data_length; ++i)
 22111              		.loc 1 2951 0
 22112 0010 0023     		movs	r3, #0
 22113 0012 FB73     		strb	r3, [r7, #15]
 22114 0014 09E0     		b	.L846
 22115              	.L847:
2952:..\src/command_processing.c ****        checksum ^= data_array[i];
 22116              		.loc 1 2952 0 discriminator 3
 22117 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22118 0018 7A68     		ldr	r2, [r7, #4]
 22119 001a 1344     		add	r3, r3, r2
 22120 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 22121 001e BB7B     		ldrb	r3, [r7, #14]
 22122 0020 5340     		eors	r3, r3, r2
 22123 0022 BB73     		strb	r3, [r7, #14]
2951:..\src/command_processing.c ****        checksum ^= data_array[i];
 22124              		.loc 1 2951 0 discriminator 3
 22125 0024 FB7B     		ldrb	r3, [r7, #15]
 22126 0026 0133     		adds	r3, r3, #1
 22127 0028 FB73     		strb	r3, [r7, #15]
 22128              	.L846:
2951:..\src/command_processing.c ****        checksum ^= data_array[i];
 22129              		.loc 1 2951 0 is_stmt 0 discriminator 1
 22130 002a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 22131 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 22132 002e 9A42     		cmp	r2, r3
 22133 0030 F1D3     		bcc	.L847
2953:..\src/command_processing.c ****   
2954:..\src/command_processing.c ****     return checksum;
 22134              		.loc 1 2954 0 is_stmt 1
 22135 0032 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
2955:..\src/command_processing.c **** }
 22136              		.loc 1 2955 0
 22137 0034 1846     		mov	r0, r3
 22138 0036 1437     		adds	r7, r7, #20
 22139              		.cfi_def_cfa_offset 4
 22140 0038 BD46     		mov	sp, r7
 22141              		.cfi_def_cfa_register 13
 22142              		@ sp needed
 22143 003a 80BC     		pop	{r7}
 22144              		.cfi_restore 7
 22145              		.cfi_def_cfa_offset 0
 22146 003c 7047     		bx	lr
 22147              		.cfi_endproc
 22148              	.LFE83:
 22149              		.size	LCRChecksum, .-LCRChecksum
 22150 003e 00BF     		.section	.text.sendAcknowledgment,"ax",%progbits
 22151              		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 485


 22152              		.global	sendAcknowledgment
 22153              		.thumb
 22154              		.thumb_func
 22155              		.type	sendAcknowledgment, %function
 22156              	sendAcknowledgment:
 22157              	.LFB84:
2956:..\src/command_processing.c **** 
2957:..\src/command_processing.c **** 
2958:..\src/command_processing.c **** //==============================================================================
2959:..\src/command_processing.c **** //                                                       ACKNOWLEDGMENT FUNCTION
2960:..\src/command_processing.c **** //==============================================================================
2961:..\src/command_processing.c **** 
2962:..\src/command_processing.c **** void sendAcknowledgment(uint8 value) {
 22158              		.loc 1 2962 0
 22159              		.cfi_startproc
 22160              		@ args = 0, pretend = 0, frame = 16
 22161              		@ frame_needed = 1, uses_anonymous_args = 0
 22162 0000 80B5     		push	{r7, lr}
 22163              		.cfi_def_cfa_offset 8
 22164              		.cfi_offset 7, -8
 22165              		.cfi_offset 14, -4
 22166 0002 84B0     		sub	sp, sp, #16
 22167              		.cfi_def_cfa_offset 24
 22168 0004 00AF     		add	r7, sp, #0
 22169              		.cfi_def_cfa_register 7
 22170 0006 0346     		mov	r3, r0
 22171 0008 FB71     		strb	r3, [r7, #7]
2963:..\src/command_processing.c ****     int packet_lenght = 2;
 22172              		.loc 1 2963 0
 22173 000a 0223     		movs	r3, #2
 22174 000c FB60     		str	r3, [r7, #12]
2964:..\src/command_processing.c ****     uint8 packet_data[2];
2965:..\src/command_processing.c **** 
2966:..\src/command_processing.c ****     packet_data[0] = value;
 22175              		.loc 1 2966 0
 22176 000e FB79     		ldrb	r3, [r7, #7]
 22177 0010 3B72     		strb	r3, [r7, #8]
2967:..\src/command_processing.c ****     packet_data[1] = value;
 22178              		.loc 1 2967 0
 22179 0012 FB79     		ldrb	r3, [r7, #7]
 22180 0014 7B72     		strb	r3, [r7, #9]
2968:..\src/command_processing.c **** 
2969:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 22181              		.loc 1 2969 0
 22182 0016 FB68     		ldr	r3, [r7, #12]
 22183 0018 9AB2     		uxth	r2, r3
 22184 001a 07F10803 		add	r3, r7, #8
 22185 001e 1146     		mov	r1, r2
 22186 0020 1846     		mov	r0, r3
 22187 0022 FFF7FEFF 		bl	commWrite
2970:..\src/command_processing.c **** }
 22188              		.loc 1 2970 0
 22189 0026 00BF     		nop
 22190 0028 1037     		adds	r7, r7, #16
 22191              		.cfi_def_cfa_offset 8
 22192 002a BD46     		mov	sp, r7
 22193              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 486


 22194              		@ sp needed
 22195 002c 80BD     		pop	{r7, pc}
 22196              		.cfi_endproc
 22197              	.LFE84:
 22198              		.size	sendAcknowledgment, .-sendAcknowledgment
 22199 002e 00BF     		.section	.text.memStore,"ax",%progbits
 22200              		.align	2
 22201              		.global	memStore
 22202              		.thumb
 22203              		.thumb_func
 22204              		.type	memStore, %function
 22205              	memStore:
 22206              	.LFB85:
2971:..\src/command_processing.c **** 
2972:..\src/command_processing.c **** //==============================================================================
2973:..\src/command_processing.c **** //                                                                  STORE MEMORY
2974:..\src/command_processing.c **** //==============================================================================
2975:..\src/command_processing.c **** 
2976:..\src/command_processing.c **** 
2977:..\src/command_processing.c **** uint8 memStore(int displacement)
2978:..\src/command_processing.c **** {
 22207              		.loc 1 2978 0
 22208              		.cfi_startproc
 22209              		@ args = 0, pretend = 0, frame = 24
 22210              		@ frame_needed = 1, uses_anonymous_args = 0
 22211 0000 80B5     		push	{r7, lr}
 22212              		.cfi_def_cfa_offset 8
 22213              		.cfi_offset 7, -8
 22214              		.cfi_offset 14, -4
 22215 0002 86B0     		sub	sp, sp, #24
 22216              		.cfi_def_cfa_offset 32
 22217 0004 00AF     		add	r7, sp, #0
 22218              		.cfi_def_cfa_register 7
 22219 0006 7860     		str	r0, [r7, #4]
2979:..\src/command_processing.c ****     int i;  // iterator
2980:..\src/command_processing.c ****     uint8 writeStatus;
2981:..\src/command_processing.c ****     int pages;
2982:..\src/command_processing.c ****     uint8 ret_val = 1;
 22220              		.loc 1 2982 0
 22221 0008 0123     		movs	r3, #1
 22222 000a FB74     		strb	r3, [r7, #19]
2983:..\src/command_processing.c **** 
2984:..\src/command_processing.c ****     // Disable Interrupt
2985:..\src/command_processing.c ****     ISR_RS485_RX_Disable();
 22223              		.loc 1 2985 0
 22224 000c FFF7FEFF 		bl	ISR_RS485_RX_Disable
2986:..\src/command_processing.c **** 
2987:..\src/command_processing.c ****     // Stop motor
2988:..\src/command_processing.c ****     PWM_MOTORS_WriteCompare1(0);
 22225              		.loc 1 2988 0
 22226 0010 0020     		movs	r0, #0
 22227 0012 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
2989:..\src/command_processing.c **** 
2990:..\src/command_processing.c ****     // Update temperature information for better writing performance
2991:..\src/command_processing.c ****     EEPROM_UpdateTemperature();
 22228              		.loc 1 2991 0
 22229 0016 FFF7FEFF 		bl	EEPROM_UpdateTemperature
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 487


2992:..\src/command_processing.c **** 
2993:..\src/command_processing.c ****     memcpy( &c_mem, &g_mem, sizeof(g_mem) );
 22230              		.loc 1 2993 0
 22231 001a 1D4A     		ldr	r2, .L856
 22232 001c 1D4B     		ldr	r3, .L856+4
 22233 001e 1046     		mov	r0, r2
 22234 0020 1946     		mov	r1, r3
 22235 0022 4FF43D73 		mov	r3, #756
 22236 0026 1A46     		mov	r2, r3
 22237 0028 FFF7FEFF 		bl	memcpy
2994:..\src/command_processing.c **** 
2995:..\src/command_processing.c ****     pages = sizeof(g_mem) / 16 + (sizeof(g_mem) % 16 > 0);
 22238              		.loc 1 2995 0
 22239 002c 3023     		movs	r3, #48
 22240 002e FB60     		str	r3, [r7, #12]
2996:..\src/command_processing.c **** 
2997:..\src/command_processing.c ****     for(i = 0; i < pages; ++i) {
 22241              		.loc 1 2997 0
 22242 0030 0023     		movs	r3, #0
 22243 0032 7B61     		str	r3, [r7, #20]
 22244 0034 18E0     		b	.L851
 22245              	.L854:
2998:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 22246              		.loc 1 2998 0
 22247 0036 7B69     		ldr	r3, [r7, #20]
 22248 0038 1B01     		lsls	r3, r3, #4
 22249 003a 1A46     		mov	r2, r3
 22250 003c 154B     		ldr	r3, .L856+4
 22251 003e D018     		adds	r0, r2, r3
 22252 0040 7B69     		ldr	r3, [r7, #20]
 22253 0042 DAB2     		uxtb	r2, r3
 22254 0044 7B68     		ldr	r3, [r7, #4]
 22255 0046 DBB2     		uxtb	r3, r3
 22256 0048 1344     		add	r3, r3, r2
 22257 004a DBB2     		uxtb	r3, r3
 22258 004c 1946     		mov	r1, r3
 22259 004e FFF7FEFF 		bl	EEPROM_Write
 22260 0052 0346     		mov	r3, r0
 22261 0054 FB72     		strb	r3, [r7, #11]
2999:..\src/command_processing.c ****         if(writeStatus != CYRET_SUCCESS) {
 22262              		.loc 1 2999 0
 22263 0056 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 22264 0058 002B     		cmp	r3, #0
 22265 005a 02D0     		beq	.L852
3000:..\src/command_processing.c ****             ret_val = 0;
 22266              		.loc 1 3000 0
 22267 005c 0023     		movs	r3, #0
 22268 005e FB74     		strb	r3, [r7, #19]
3001:..\src/command_processing.c ****             break;
 22269              		.loc 1 3001 0
 22270 0060 06E0     		b	.L853
 22271              	.L852:
2997:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 22272              		.loc 1 2997 0 discriminator 2
 22273 0062 7B69     		ldr	r3, [r7, #20]
 22274 0064 0133     		adds	r3, r3, #1
 22275 0066 7B61     		str	r3, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 488


 22276              	.L851:
2997:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 22277              		.loc 1 2997 0 is_stmt 0 discriminator 1
 22278 0068 7A69     		ldr	r2, [r7, #20]
 22279 006a FB68     		ldr	r3, [r7, #12]
 22280 006c 9A42     		cmp	r2, r3
 22281 006e E2DB     		blt	.L854
 22282              	.L853:
3002:..\src/command_processing.c ****         }
3003:..\src/command_processing.c ****     }
3004:..\src/command_processing.c **** 
3005:..\src/command_processing.c ****     memcpy( &g_mem, &c_mem, sizeof(g_mem) );
 22283              		.loc 1 3005 0 is_stmt 1
 22284 0070 084A     		ldr	r2, .L856+4
 22285 0072 074B     		ldr	r3, .L856
 22286 0074 1046     		mov	r0, r2
 22287 0076 1946     		mov	r1, r3
 22288 0078 4FF43D73 		mov	r3, #756
 22289 007c 1A46     		mov	r2, r3
 22290 007e FFF7FEFF 		bl	memcpy
3006:..\src/command_processing.c **** 
3007:..\src/command_processing.c ****     // Re-Enable Interrupt
3008:..\src/command_processing.c ****     ISR_RS485_RX_Enable();
 22291              		.loc 1 3008 0
 22292 0082 FFF7FEFF 		bl	ISR_RS485_RX_Enable
3009:..\src/command_processing.c **** 
3010:..\src/command_processing.c ****     return ret_val;
 22293              		.loc 1 3010 0
 22294 0086 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
3011:..\src/command_processing.c **** }
 22295              		.loc 1 3011 0
 22296 0088 1846     		mov	r0, r3
 22297 008a 1837     		adds	r7, r7, #24
 22298              		.cfi_def_cfa_offset 8
 22299 008c BD46     		mov	sp, r7
 22300              		.cfi_def_cfa_register 13
 22301              		@ sp needed
 22302 008e 80BD     		pop	{r7, pc}
 22303              	.L857:
 22304              		.align	2
 22305              	.L856:
 22306 0090 00000000 		.word	c_mem
 22307 0094 00000000 		.word	g_mem
 22308              		.cfi_endproc
 22309              	.LFE85:
 22310              		.size	memStore, .-memStore
 22311              		.section	.text.memRecall,"ax",%progbits
 22312              		.align	2
 22313              		.global	memRecall
 22314              		.thumb
 22315              		.thumb_func
 22316              		.type	memRecall, %function
 22317              	memRecall:
 22318              	.LFB86:
3012:..\src/command_processing.c **** 
3013:..\src/command_processing.c **** 
3014:..\src/command_processing.c **** //==============================================================================
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 489


3015:..\src/command_processing.c **** //                                                                 RECALL MEMORY
3016:..\src/command_processing.c **** //==============================================================================
3017:..\src/command_processing.c **** 
3018:..\src/command_processing.c **** 
3019:..\src/command_processing.c **** void memRecall(void)
3020:..\src/command_processing.c **** {
 22319              		.loc 1 3020 0
 22320              		.cfi_startproc
 22321              		@ args = 0, pretend = 0, frame = 8
 22322              		@ frame_needed = 1, uses_anonymous_args = 0
 22323 0000 80B5     		push	{r7, lr}
 22324              		.cfi_def_cfa_offset 8
 22325              		.cfi_offset 7, -8
 22326              		.cfi_offset 14, -4
 22327 0002 82B0     		sub	sp, sp, #8
 22328              		.cfi_def_cfa_offset 16
 22329 0004 00AF     		add	r7, sp, #0
 22330              		.cfi_def_cfa_register 7
3021:..\src/command_processing.c ****     uint16 i;
3022:..\src/command_processing.c **** 
3023:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 22331              		.loc 1 3023 0
 22332 0006 0023     		movs	r3, #0
 22333 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 22334 000a 0CE0     		b	.L859
 22335              	.L860:
3024:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 22336              		.loc 1 3024 0 discriminator 3
 22337 000c FB88     		ldrh	r3, [r7, #6]
 22338 000e 184A     		ldr	r2, .L864
 22339 0010 1344     		add	r3, r3, r2
 22340 0012 184A     		ldr	r2, .L864+4
 22341 0014 1168     		ldr	r1, [r2]
 22342 0016 FA88     		ldrh	r2, [r7, #6]
 22343 0018 0A44     		add	r2, r2, r1
 22344 001a 1278     		ldrb	r2, [r2]
 22345 001c D2B2     		uxtb	r2, r2
 22346 001e 1A70     		strb	r2, [r3]
3023:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 22347              		.loc 1 3023 0 discriminator 3
 22348 0020 FB88     		ldrh	r3, [r7, #6]
 22349 0022 0133     		adds	r3, r3, #1
 22350 0024 FB80     		strh	r3, [r7, #6]	@ movhi
 22351              	.L859:
3023:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 22352              		.loc 1 3023 0 is_stmt 0 discriminator 1
 22353 0026 FB88     		ldrh	r3, [r7, #6]
 22354 0028 B3F53D7F 		cmp	r3, #756
 22355 002c EED3     		bcc	.L860
3025:..\src/command_processing.c ****     }
3026:..\src/command_processing.c ****     
3027:..\src/command_processing.c ****     // Recall saved user_emg structure
3028:..\src/command_processing.c ****     memcpy( &(g_mem.emg), &(g_mem.user[g_mem.dev.user_id].user_emg), sizeof(g_mem.emg) );
 22356              		.loc 1 3028 0 is_stmt 1
 22357 002e 104B     		ldr	r3, .L864
 22358 0030 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 22359 0034 5B01     		lsls	r3, r3, #5
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 490


 22360 0036 03F51273 		add	r3, r3, #584
 22361 003a 0D4A     		ldr	r2, .L864
 22362 003c 1344     		add	r3, r3, r2
 22363 003e 1022     		movs	r2, #16
 22364 0040 1946     		mov	r1, r3
 22365 0042 0D48     		ldr	r0, .L864+8
 22366 0044 FFF7FEFF 		bl	memcpy
3029:..\src/command_processing.c **** 
3030:..\src/command_processing.c ****     //check for initialization
3031:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 22367              		.loc 1 3031 0
 22368 0048 094B     		ldr	r3, .L864
 22369 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22370 004c 002B     		cmp	r3, #0
 22371 004e 02D1     		bne	.L861
3032:..\src/command_processing.c ****         memRestore();
 22372              		.loc 1 3032 0
 22373 0050 FFF7FEFF 		bl	memRestore
3033:..\src/command_processing.c ****     } else {
3034:..\src/command_processing.c ****         memcpy( &c_mem, &g_mem, sizeof(g_mem) );
3035:..\src/command_processing.c ****     }        
3036:..\src/command_processing.c **** }
 22374              		.loc 1 3036 0
 22375 0054 08E0     		b	.L863
 22376              	.L861:
3034:..\src/command_processing.c ****     }        
 22377              		.loc 1 3034 0
 22378 0056 094A     		ldr	r2, .L864+12
 22379 0058 054B     		ldr	r3, .L864
 22380 005a 1046     		mov	r0, r2
 22381 005c 1946     		mov	r1, r3
 22382 005e 4FF43D73 		mov	r3, #756
 22383 0062 1A46     		mov	r2, r3
 22384 0064 FFF7FEFF 		bl	memcpy
 22385              	.L863:
 22386              		.loc 1 3036 0
 22387 0068 00BF     		nop
 22388 006a 0837     		adds	r7, r7, #8
 22389              		.cfi_def_cfa_offset 8
 22390 006c BD46     		mov	sp, r7
 22391              		.cfi_def_cfa_register 13
 22392              		@ sp needed
 22393 006e 80BD     		pop	{r7, pc}
 22394              	.L865:
 22395              		.align	2
 22396              	.L864:
 22397 0070 00000000 		.word	g_mem
 22398 0074 00000000 		.word	EEPROM_ADDR
 22399 0078 F0010000 		.word	g_mem+496
 22400 007c 00000000 		.word	c_mem
 22401              		.cfi_endproc
 22402              	.LFE86:
 22403              		.size	memRecall, .-memRecall
 22404              		.section	.text.memRestore,"ax",%progbits
 22405              		.align	2
 22406              		.global	memRestore
 22407              		.thumb
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 491


 22408              		.thumb_func
 22409              		.type	memRestore, %function
 22410              	memRestore:
 22411              	.LFB87:
3037:..\src/command_processing.c **** 
3038:..\src/command_processing.c **** 
3039:..\src/command_processing.c **** //==============================================================================
3040:..\src/command_processing.c **** //                                                                RESTORE MEMORY
3041:..\src/command_processing.c **** //==============================================================================
3042:..\src/command_processing.c **** 
3043:..\src/command_processing.c **** 
3044:..\src/command_processing.c **** uint8 memRestore(void) {
 22412              		.loc 1 3044 0
 22413              		.cfi_startproc
 22414              		@ args = 0, pretend = 0, frame = 8
 22415              		@ frame_needed = 1, uses_anonymous_args = 0
 22416 0000 80B5     		push	{r7, lr}
 22417              		.cfi_def_cfa_offset 8
 22418              		.cfi_offset 7, -8
 22419              		.cfi_offset 14, -4
 22420 0002 82B0     		sub	sp, sp, #8
 22421              		.cfi_def_cfa_offset 16
 22422 0004 00AF     		add	r7, sp, #0
 22423              		.cfi_def_cfa_register 7
3045:..\src/command_processing.c ****     uint16 i;
3046:..\src/command_processing.c **** 
3047:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 22424              		.loc 1 3047 0
 22425 0006 0023     		movs	r3, #0
 22426 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 22427 000a 0EE0     		b	.L867
 22428              	.L868:
3048:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 22429              		.loc 1 3048 0 discriminator 3
 22430 000c FB88     		ldrh	r3, [r7, #6]
 22431 000e 114A     		ldr	r2, .L871
 22432 0010 1344     		add	r3, r3, r2
 22433 0012 114A     		ldr	r2, .L871+4
 22434 0014 1168     		ldr	r1, [r2]
 22435 0016 FA88     		ldrh	r2, [r7, #6]
 22436 0018 02F54872 		add	r2, r2, #800
 22437 001c 0A44     		add	r2, r2, r1
 22438 001e 1278     		ldrb	r2, [r2]
 22439 0020 D2B2     		uxtb	r2, r2
 22440 0022 1A70     		strb	r2, [r3]
3047:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 22441              		.loc 1 3047 0 discriminator 3
 22442 0024 FB88     		ldrh	r3, [r7, #6]
 22443 0026 0133     		adds	r3, r3, #1
 22444 0028 FB80     		strh	r3, [r7, #6]	@ movhi
 22445              	.L867:
3047:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 22446              		.loc 1 3047 0 is_stmt 0 discriminator 1
 22447 002a FB88     		ldrh	r3, [r7, #6]
 22448 002c B3F53D7F 		cmp	r3, #756
 22449 0030 ECD3     		bcc	.L868
3049:..\src/command_processing.c ****     }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 492


3050:..\src/command_processing.c **** 
3051:..\src/command_processing.c ****     //check for initialization
3052:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 22450              		.loc 1 3052 0 is_stmt 1
 22451 0032 084B     		ldr	r3, .L871
 22452 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22453 0036 002B     		cmp	r3, #0
 22454 0038 03D1     		bne	.L869
3053:..\src/command_processing.c ****         return memInit();
 22455              		.loc 1 3053 0
 22456 003a FFF7FEFF 		bl	memInit
 22457 003e 0346     		mov	r3, r0
 22458 0040 03E0     		b	.L870
 22459              	.L869:
3054:..\src/command_processing.c ****     } else {
3055:..\src/command_processing.c ****         return memStore(0);
 22460              		.loc 1 3055 0
 22461 0042 0020     		movs	r0, #0
 22462 0044 FFF7FEFF 		bl	memStore
 22463 0048 0346     		mov	r3, r0
 22464              	.L870:
3056:..\src/command_processing.c ****     }  
3057:..\src/command_processing.c **** }
 22465              		.loc 1 3057 0
 22466 004a 1846     		mov	r0, r3
 22467 004c 0837     		adds	r7, r7, #8
 22468              		.cfi_def_cfa_offset 8
 22469 004e BD46     		mov	sp, r7
 22470              		.cfi_def_cfa_register 13
 22471              		@ sp needed
 22472 0050 80BD     		pop	{r7, pc}
 22473              	.L872:
 22474 0052 00BF     		.align	2
 22475              	.L871:
 22476 0054 00000000 		.word	g_mem
 22477 0058 00000000 		.word	EEPROM_ADDR
 22478              		.cfi_endproc
 22479              	.LFE87:
 22480              		.size	memRestore, .-memRestore
 22481              		.section	.rodata
 22482 202b 00       		.align	2
 22483              	.LC310:
 22484 202c 47454E30 		.ascii	"GEN001\000"
 22484      303100
 22485              		.section	.text.memInit,"ax",%progbits
 22486              		.align	2
 22487              		.global	memInit
 22488              		.thumb
 22489              		.thumb_func
 22490              		.type	memInit, %function
 22491              	memInit:
 22492              	.LFB88:
3058:..\src/command_processing.c **** 
3059:..\src/command_processing.c **** //==============================================================================
3060:..\src/command_processing.c **** //                                                                   MEMORY INIT
3061:..\src/command_processing.c **** //==============================================================================
3062:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 493


3063:..\src/command_processing.c **** uint8 memInit(void)
3064:..\src/command_processing.c **** {
 22493              		.loc 1 3064 0
 22494              		.cfi_startproc
 22495              		@ args = 0, pretend = 0, frame = 8
 22496              		@ frame_needed = 1, uses_anonymous_args = 0
 22497 0000 80B5     		push	{r7, lr}
 22498              		.cfi_def_cfa_offset 8
 22499              		.cfi_offset 7, -8
 22500              		.cfi_offset 14, -4
 22501 0002 82B0     		sub	sp, sp, #8
 22502              		.cfi_def_cfa_offset 16
 22503 0004 00AF     		add	r7, sp, #0
 22504              		.cfi_def_cfa_register 7
3065:..\src/command_processing.c ****     uint8 i, j;
3066:..\src/command_processing.c **** 
3067:..\src/command_processing.c ****     //initialize memory settings
3068:..\src/command_processing.c ****     for (i=0; i<15; i++){
 22505              		.loc 1 3068 0
 22506 0006 0023     		movs	r3, #0
 22507 0008 FB71     		strb	r3, [r7, #7]
 22508 000a 07E0     		b	.L874
 22509              	.L875:
3069:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 22510              		.loc 1 3069 0 discriminator 3
 22511 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22512 000e B44A     		ldr	r2, .L900
 22513 0010 1344     		add	r3, r3, r2
 22514 0012 0022     		movs	r2, #0
 22515 0014 5A70     		strb	r2, [r3, #1]
3068:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 22516              		.loc 1 3068 0 discriminator 3
 22517 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22518 0018 0133     		adds	r3, r3, #1
 22519 001a FB71     		strb	r3, [r7, #7]
 22520              	.L874:
3068:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 22521              		.loc 1 3068 0 is_stmt 0 discriminator 1
 22522 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22523 001e 0E2B     		cmp	r3, #14
 22524 0020 F4D9     		bls	.L875
3070:..\src/command_processing.c ****     }
3071:..\src/command_processing.c ****         
3072:..\src/command_processing.c ****     // DEV STRUCT
3073:..\src/command_processing.c ****     g_mem.dev.id                = 1;
 22525              		.loc 1 3073 0 is_stmt 1
 22526 0022 AF4B     		ldr	r3, .L900
 22527 0024 0122     		movs	r2, #1
 22528 0026 83F8A020 		strb	r2, [r3, #160]
3074:..\src/command_processing.c ****     g_mem.dev.right_left        = RIGHT_HAND;
 22529              		.loc 1 3074 0
 22530 002a AD4B     		ldr	r3, .L900
 22531 002c 0022     		movs	r2, #0
 22532 002e 83F8A720 		strb	r2, [r3, #167]
3075:..\src/command_processing.c ****     g_mem.dev.dev_type          = GENERIC_2_MOTORS;
 22533              		.loc 1 3075 0
 22534 0032 AB4B     		ldr	r3, .L900
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 494


 22535 0034 0122     		movs	r2, #1
 22536 0036 83F8AC20 		strb	r2, [r3, #172]
3076:..\src/command_processing.c ****     g_mem.dev.reset_counters    = FALSE;   
 22537              		.loc 1 3076 0
 22538 003a A94B     		ldr	r3, .L900
 22539 003c 0022     		movs	r2, #0
 22540 003e 83F8A820 		strb	r2, [r3, #168]
3077:..\src/command_processing.c ****     reset_counters();                       //Initialize counters
 22541              		.loc 1 3077 0
 22542 0042 FFF7FEFF 		bl	reset_counters
3078:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 22543              		.loc 1 3078 0
 22544 0046 0023     		movs	r3, #0
 22545 0048 FB71     		strb	r3, [r7, #7]
 22546 004a 08E0     		b	.L876
 22547              	.L877:
3079:..\src/command_processing.c ****         g_mem.unused_bytes1[i] = 0;
 22548              		.loc 1 3079 0 discriminator 3
 22549 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22550 004e A44A     		ldr	r2, .L900
 22551 0050 1344     		add	r3, r3, r2
 22552 0052 0022     		movs	r2, #0
 22553 0054 83F86020 		strb	r2, [r3, #96]
3078:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 22554              		.loc 1 3078 0 discriminator 3
 22555 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22556 005a 0133     		adds	r3, r3, #1
 22557 005c FB71     		strb	r3, [r7, #7]
 22558              	.L876:
3078:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 22559              		.loc 1 3078 0 is_stmt 0 discriminator 1
 22560 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22561 0060 3F2B     		cmp	r3, #63
 22562 0062 F3D9     		bls	.L877
3080:..\src/command_processing.c ****     }
3081:..\src/command_processing.c ****     g_mem.dev.use_2nd_motor_flag = FALSE;
 22563              		.loc 1 3081 0 is_stmt 1
 22564 0064 9E4B     		ldr	r3, .L900
 22565 0066 0022     		movs	r2, #0
 22566 0068 83F8A920 		strb	r2, [r3, #169]
3082:..\src/command_processing.c **** 
3083:..\src/command_processing.c ****     // MOTOR STRUCT
3084:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 22567              		.loc 1 3084 0
 22568 006c 0023     		movs	r3, #0
 22569 006e FB71     		strb	r3, [r7, #7]
 22570 0070 15E1     		b	.L878
 22571              	.L881:
3085:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 22572              		.loc 1 3085 0
 22573 0072 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22574 0074 9A49     		ldr	r1, .L900
 22575 0076 1346     		mov	r3, r2
 22576 0078 DB00     		lsls	r3, r3, #3
 22577 007a 9B1A     		subs	r3, r3, r2
 22578 007c 1B01     		lsls	r3, r3, #4
 22579 007e 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 495


 22580 0080 B033     		adds	r3, r3, #176
 22581 0082 40F23942 		movw	r2, #1081
 22582 0086 1A60     		str	r2, [r3]
3086:..\src/command_processing.c ****         g_mem.motor[i].k_i           =     0 * 65536;
 22583              		.loc 1 3086 0
 22584 0088 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22585 008a 9549     		ldr	r1, .L900
 22586 008c 1346     		mov	r3, r2
 22587 008e DB00     		lsls	r3, r3, #3
 22588 0090 9B1A     		subs	r3, r3, r2
 22589 0092 1B01     		lsls	r3, r3, #4
 22590 0094 0B44     		add	r3, r3, r1
 22591 0096 B433     		adds	r3, r3, #180
 22592 0098 0022     		movs	r2, #0
 22593 009a 1A60     		str	r2, [r3]
3087:..\src/command_processing.c ****         g_mem.motor[i].k_d           = 0.007 * 65536;  // changed in order to avoid metallic clatte
 22594              		.loc 1 3087 0
 22595 009c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22596 009e 9049     		ldr	r1, .L900
 22597 00a0 1346     		mov	r3, r2
 22598 00a2 DB00     		lsls	r3, r3, #3
 22599 00a4 9B1A     		subs	r3, r3, r2
 22600 00a6 1B01     		lsls	r3, r3, #4
 22601 00a8 0B44     		add	r3, r3, r1
 22602 00aa B833     		adds	r3, r3, #184
 22603 00ac 4FF4E572 		mov	r2, #458
 22604 00b0 1A60     		str	r2, [r3]
3088:..\src/command_processing.c ****         g_mem.motor[i].k_p_c         =     1 * 65536;
 22605              		.loc 1 3088 0
 22606 00b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22607 00b4 8A49     		ldr	r1, .L900
 22608 00b6 1346     		mov	r3, r2
 22609 00b8 DB00     		lsls	r3, r3, #3
 22610 00ba 9B1A     		subs	r3, r3, r2
 22611 00bc 1B01     		lsls	r3, r3, #4
 22612 00be 0B44     		add	r3, r3, r1
 22613 00c0 BC33     		adds	r3, r3, #188
 22614 00c2 4FF48032 		mov	r2, #65536
 22615 00c6 1A60     		str	r2, [r3]
3089:..\src/command_processing.c ****         g_mem.motor[i].k_i_c         = 0.001 * 65536;
 22616              		.loc 1 3089 0
 22617 00c8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22618 00ca 8549     		ldr	r1, .L900
 22619 00cc 1346     		mov	r3, r2
 22620 00ce DB00     		lsls	r3, r3, #3
 22621 00d0 9B1A     		subs	r3, r3, r2
 22622 00d2 1B01     		lsls	r3, r3, #4
 22623 00d4 0B44     		add	r3, r3, r1
 22624 00d6 C033     		adds	r3, r3, #192
 22625 00d8 4122     		movs	r2, #65
 22626 00da 1A60     		str	r2, [r3]
3090:..\src/command_processing.c ****         g_mem.motor[i].k_d_c         =     0 * 65536;
 22627              		.loc 1 3090 0
 22628 00dc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22629 00de 8049     		ldr	r1, .L900
 22630 00e0 1346     		mov	r3, r2
 22631 00e2 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 496


 22632 00e4 9B1A     		subs	r3, r3, r2
 22633 00e6 1B01     		lsls	r3, r3, #4
 22634 00e8 0B44     		add	r3, r3, r1
 22635 00ea C433     		adds	r3, r3, #196
 22636 00ec 0022     		movs	r2, #0
 22637 00ee 1A60     		str	r2, [r3]
3091:..\src/command_processing.c **** 
3092:..\src/command_processing.c ****         g_mem.motor[i].k_p_dl        =   0.1 * 65536;
 22638              		.loc 1 3092 0
 22639 00f0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22640 00f2 7B49     		ldr	r1, .L900
 22641 00f4 1346     		mov	r3, r2
 22642 00f6 DB00     		lsls	r3, r3, #3
 22643 00f8 9B1A     		subs	r3, r3, r2
 22644 00fa 1B01     		lsls	r3, r3, #4
 22645 00fc 0B44     		add	r3, r3, r1
 22646 00fe C833     		adds	r3, r3, #200
 22647 0100 41F69912 		movw	r2, #6553
 22648 0104 1A60     		str	r2, [r3]
3093:..\src/command_processing.c ****         g_mem.motor[i].k_i_dl        =     0 * 65536;
 22649              		.loc 1 3093 0
 22650 0106 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22651 0108 7549     		ldr	r1, .L900
 22652 010a 1346     		mov	r3, r2
 22653 010c DB00     		lsls	r3, r3, #3
 22654 010e 9B1A     		subs	r3, r3, r2
 22655 0110 1B01     		lsls	r3, r3, #4
 22656 0112 0B44     		add	r3, r3, r1
 22657 0114 CC33     		adds	r3, r3, #204
 22658 0116 0022     		movs	r2, #0
 22659 0118 1A60     		str	r2, [r3]
3094:..\src/command_processing.c ****         g_mem.motor[i].k_d_dl        =     0 * 65536;
 22660              		.loc 1 3094 0
 22661 011a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22662 011c 7049     		ldr	r1, .L900
 22663 011e 1346     		mov	r3, r2
 22664 0120 DB00     		lsls	r3, r3, #3
 22665 0122 9B1A     		subs	r3, r3, r2
 22666 0124 1B01     		lsls	r3, r3, #4
 22667 0126 0B44     		add	r3, r3, r1
 22668 0128 D033     		adds	r3, r3, #208
 22669 012a 0022     		movs	r2, #0
 22670 012c 1A60     		str	r2, [r3]
3095:..\src/command_processing.c ****         g_mem.motor[i].k_p_c_dl      =   0.3 * 65536;
 22671              		.loc 1 3095 0
 22672 012e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22673 0130 6B49     		ldr	r1, .L900
 22674 0132 1346     		mov	r3, r2
 22675 0134 DB00     		lsls	r3, r3, #3
 22676 0136 9B1A     		subs	r3, r3, r2
 22677 0138 1B01     		lsls	r3, r3, #4
 22678 013a 0B44     		add	r3, r3, r1
 22679 013c D433     		adds	r3, r3, #212
 22680 013e 44F6CC42 		movw	r2, #19660
 22681 0142 1A60     		str	r2, [r3]
3096:..\src/command_processing.c ****         g_mem.motor[i].k_i_c_dl      =0.0002 * 65536;
 22682              		.loc 1 3096 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 497


 22683 0144 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22684 0146 6649     		ldr	r1, .L900
 22685 0148 1346     		mov	r3, r2
 22686 014a DB00     		lsls	r3, r3, #3
 22687 014c 9B1A     		subs	r3, r3, r2
 22688 014e 1B01     		lsls	r3, r3, #4
 22689 0150 0B44     		add	r3, r3, r1
 22690 0152 D833     		adds	r3, r3, #216
 22691 0154 0D22     		movs	r2, #13
 22692 0156 1A60     		str	r2, [r3]
3097:..\src/command_processing.c ****         g_mem.motor[i].k_d_c_dl      =     0 * 65536;
 22693              		.loc 1 3097 0
 22694 0158 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22695 015a 6149     		ldr	r1, .L900
 22696 015c 1346     		mov	r3, r2
 22697 015e DB00     		lsls	r3, r3, #3
 22698 0160 9B1A     		subs	r3, r3, r2
 22699 0162 1B01     		lsls	r3, r3, #4
 22700 0164 0B44     		add	r3, r3, r1
 22701 0166 DC33     		adds	r3, r3, #220
 22702 0168 0022     		movs	r2, #0
 22703 016a 1A60     		str	r2, [r3]
3098:..\src/command_processing.c **** 
3099:..\src/command_processing.c ****         g_mem.motor[i].activ         = 1;
 22704              		.loc 1 3099 0
 22705 016c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22706 016e 5C49     		ldr	r1, .L900
 22707 0170 1346     		mov	r3, r2
 22708 0172 DB00     		lsls	r3, r3, #3
 22709 0174 9B1A     		subs	r3, r3, r2
 22710 0176 1B01     		lsls	r3, r3, #4
 22711 0178 0B44     		add	r3, r3, r1
 22712 017a E033     		adds	r3, r3, #224
 22713 017c 0122     		movs	r2, #1
 22714 017e 1A70     		strb	r2, [r3]
3100:..\src/command_processing.c ****         g_mem.motor[i].activate_pwm_rescaling = MAXON_24V;      //rescaling active for 12V motor
 22715              		.loc 1 3100 0
 22716 0180 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22717 0182 5749     		ldr	r1, .L900
 22718 0184 1346     		mov	r3, r2
 22719 0186 DB00     		lsls	r3, r3, #3
 22720 0188 9B1A     		subs	r3, r3, r2
 22721 018a 1B01     		lsls	r3, r3, #4
 22722 018c 0B44     		add	r3, r3, r1
 22723 018e E133     		adds	r3, r3, #225
 22724 0190 0022     		movs	r2, #0
 22725 0192 1A70     		strb	r2, [r3]
3101:..\src/command_processing.c ****         g_mem.motor[i].motor_driver_type = DRIVER_MC33887;      //SoftHand standard driver
 22726              		.loc 1 3101 0
 22727 0194 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22728 0196 5249     		ldr	r1, .L900
 22729 0198 1346     		mov	r3, r2
 22730 019a DB00     		lsls	r3, r3, #3
 22731 019c 9B1A     		subs	r3, r3, r2
 22732 019e 1B01     		lsls	r3, r3, #4
 22733 01a0 0B44     		add	r3, r3, r1
 22734 01a2 E233     		adds	r3, r3, #226
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 498


 22735 01a4 0022     		movs	r2, #0
 22736 01a6 1A70     		strb	r2, [r3]
3102:..\src/command_processing.c ****         g_mem.motor[i].input_mode    = INPUT_MODE_EXTERNAL;
 22737              		.loc 1 3102 0
 22738 01a8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22739 01aa 4D49     		ldr	r1, .L900
 22740 01ac 1346     		mov	r3, r2
 22741 01ae DB00     		lsls	r3, r3, #3
 22742 01b0 9B1A     		subs	r3, r3, r2
 22743 01b2 1B01     		lsls	r3, r3, #4
 22744 01b4 0B44     		add	r3, r3, r1
 22745 01b6 03F58773 		add	r3, r3, #270
 22746 01ba 0022     		movs	r2, #0
 22747 01bc 1A70     		strb	r2, [r3]
3103:..\src/command_processing.c ****         g_mem.motor[i].control_mode  = CONTROL_ANGLE;
 22748              		.loc 1 3103 0
 22749 01be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22750 01c0 4749     		ldr	r1, .L900
 22751 01c2 1346     		mov	r3, r2
 22752 01c4 DB00     		lsls	r3, r3, #3
 22753 01c6 9B1A     		subs	r3, r3, r2
 22754 01c8 1B01     		lsls	r3, r3, #4
 22755 01ca 0B44     		add	r3, r3, r1
 22756 01cc 03F20F13 		addw	r3, r3, #271
 22757 01d0 0022     		movs	r2, #0
 22758 01d2 1A70     		strb	r2, [r3]
3104:..\src/command_processing.c ****         g_mem.motor[i].max_step_pos = 0;
 22759              		.loc 1 3104 0
 22760 01d4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22761 01d6 4249     		ldr	r1, .L900
 22762 01d8 1346     		mov	r3, r2
 22763 01da DB00     		lsls	r3, r3, #3
 22764 01dc 9B1A     		subs	r3, r3, r2
 22765 01de 1B01     		lsls	r3, r3, #4
 22766 01e0 0B44     		add	r3, r3, r1
 22767 01e2 F033     		adds	r3, r3, #240
 22768 01e4 0022     		movs	r2, #0
 22769 01e6 1A60     		str	r2, [r3]
3105:..\src/command_processing.c ****         g_mem.motor[i].max_step_neg = 0;
 22770              		.loc 1 3105 0
 22771 01e8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22772 01ea 3D49     		ldr	r1, .L900
 22773 01ec 1346     		mov	r3, r2
 22774 01ee DB00     		lsls	r3, r3, #3
 22775 01f0 9B1A     		subs	r3, r3, r2
 22776 01f2 1B01     		lsls	r3, r3, #4
 22777 01f4 0B44     		add	r3, r3, r1
 22778 01f6 EC33     		adds	r3, r3, #236
 22779 01f8 0022     		movs	r2, #0
 22780 01fa 1A60     		str	r2, [r3]
3106:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 22781              		.loc 1 3106 0
 22782 01fc 0023     		movs	r3, #0
 22783 01fe BB71     		strb	r3, [r7, #6]
 22784 0200 10E0     		b	.L879
 22785              	.L880:
3107:..\src/command_processing.c ****             g_mem.motor[i].curr_lookup[j] = 0;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 499


 22786              		.loc 1 3107 0 discriminator 3
 22787 0202 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22788 0204 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22789 0206 3648     		ldr	r0, .L900
 22790 0208 1346     		mov	r3, r2
 22791 020a DB00     		lsls	r3, r3, #3
 22792 020c 9B1A     		subs	r3, r3, r2
 22793 020e 9B00     		lsls	r3, r3, #2
 22794 0210 0B44     		add	r3, r3, r1
 22795 0212 3C33     		adds	r3, r3, #60
 22796 0214 9B00     		lsls	r3, r3, #2
 22797 0216 0344     		add	r3, r3, r0
 22798 0218 4FF00002 		mov	r2, #0
 22799 021c 5A60     		str	r2, [r3, #4]	@ float
3106:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 22800              		.loc 1 3106 0 discriminator 3
 22801 021e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22802 0220 0133     		adds	r3, r3, #1
 22803 0222 BB71     		strb	r3, [r7, #6]
 22804              	.L879:
3106:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 22805              		.loc 1 3106 0 is_stmt 0 discriminator 1
 22806 0224 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22807 0226 052B     		cmp	r3, #5
 22808 0228 EBD9     		bls	.L880
3108:..\src/command_processing.c ****         }
3109:..\src/command_processing.c ****         g_mem.motor[i].current_limit = DEFAULT_CURRENT_LIMIT;
 22809              		.loc 1 3109 0 is_stmt 1 discriminator 2
 22810 022a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22811 022c 2C49     		ldr	r1, .L900
 22812 022e 1346     		mov	r3, r2
 22813 0230 DB00     		lsls	r3, r3, #3
 22814 0232 9B1A     		subs	r3, r3, r2
 22815 0234 1B01     		lsls	r3, r3, #4
 22816 0236 0B44     		add	r3, r3, r1
 22817 0238 03F58673 		add	r3, r3, #268
 22818 023c 40F2DC52 		movw	r2, #1500
 22819 0240 1A80     		strh	r2, [r3]	@ movhi
3110:..\src/command_processing.c ****         g_mem.motor[i].encoder_line = i;    
 22820              		.loc 1 3110 0 discriminator 2
 22821 0242 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22822 0244 2649     		ldr	r1, .L900
 22823 0246 1346     		mov	r3, r2
 22824 0248 DB00     		lsls	r3, r3, #3
 22825 024a 9B1A     		subs	r3, r3, r2
 22826 024c 1B01     		lsls	r3, r3, #4
 22827 024e 0B44     		add	r3, r3, r1
 22828 0250 03F58873 		add	r3, r3, #272
 22829 0254 FA79     		ldrb	r2, [r7, #7]
 22830 0256 1A70     		strb	r2, [r3]
3111:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_flag = 1;
 22831              		.loc 1 3111 0 discriminator 2
 22832 0258 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22833 025a 2149     		ldr	r1, .L900
 22834 025c 1346     		mov	r3, r2
 22835 025e DB00     		lsls	r3, r3, #3
 22836 0260 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 500


 22837 0262 1B01     		lsls	r3, r3, #4
 22838 0264 0B44     		add	r3, r3, r1
 22839 0266 E333     		adds	r3, r3, #227
 22840 0268 0122     		movs	r2, #1
 22841 026a 1A70     		strb	r2, [r3]
3112:..\src/command_processing.c ****         
3113:..\src/command_processing.c ****         g_mem.motor[i].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 22842              		.loc 1 3113 0 discriminator 2
 22843 026c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22844 026e 1C49     		ldr	r1, .L900
 22845 0270 1346     		mov	r3, r2
 22846 0272 DB00     		lsls	r3, r3, #3
 22847 0274 9B1A     		subs	r3, r3, r2
 22848 0276 1B01     		lsls	r3, r3, #4
 22849 0278 0B44     		add	r3, r3, r1
 22850 027a 03F21113 		addw	r3, r3, #273
 22851 027e 0122     		movs	r2, #1
 22852 0280 1A70     		strb	r2, [r3]
3114:..\src/command_processing.c ****         g_mem.motor[i].not_revers_motor_flag = FALSE;       // Generic reversible motor  
 22853              		.loc 1 3114 0 discriminator 2
 22854 0282 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22855 0284 1649     		ldr	r1, .L900
 22856 0286 1346     		mov	r3, r2
 22857 0288 DB00     		lsls	r3, r3, #3
 22858 028a 9B1A     		subs	r3, r3, r2
 22859 028c 1B01     		lsls	r3, r3, #4
 22860 028e 0B44     		add	r3, r3, r1
 22861 0290 03F58973 		add	r3, r3, #274
 22862 0294 0022     		movs	r2, #0
 22863 0296 1A70     		strb	r2, [r3]
3084:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 22864              		.loc 1 3084 0 discriminator 2
 22865 0298 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22866 029a 0133     		adds	r3, r3, #1
 22867 029c FB71     		strb	r3, [r7, #7]
 22868              	.L878:
3084:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 22869              		.loc 1 3084 0 is_stmt 0 discriminator 1
 22870 029e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22871 02a0 012B     		cmp	r3, #1
 22872 02a2 7FF6E6AE 		bls	.L881
3115:..\src/command_processing.c ****     }
3116:..\src/command_processing.c ****     
3117:..\src/command_processing.c ****     // ENC STRUCT
3118:..\src/command_processing.c ****     for (i = 0; i< N_ENCODER_LINE_MAX; i++){
 22873              		.loc 1 3118 0 is_stmt 1
 22874 02a6 0023     		movs	r3, #0
 22875 02a8 FB71     		strb	r3, [r7, #7]
 22876 02aa 98E0     		b	.L882
 22877              	.L889:
3119:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22878              		.loc 1 3119 0
 22879 02ac 0023     		movs	r3, #0
 22880 02ae BB71     		strb	r3, [r7, #6]
 22881 02b0 0FE0     		b	.L883
 22882              	.L884:
3120:..\src/command_processing.c ****             g_mem.enc[i].Enc_raw_read_conf[j] = 0;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 501


 22883              		.loc 1 3120 0 discriminator 3
 22884 02b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22885 02b4 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22886 02b6 0A48     		ldr	r0, .L900
 22887 02b8 1346     		mov	r3, r2
 22888 02ba 5B00     		lsls	r3, r3, #1
 22889 02bc 1344     		add	r3, r3, r2
 22890 02be 1B01     		lsls	r3, r3, #4
 22891 02c0 0344     		add	r3, r3, r0
 22892 02c2 0B44     		add	r3, r3, r1
 22893 02c4 03F5C873 		add	r3, r3, #400
 22894 02c8 0022     		movs	r2, #0
 22895 02ca 1A70     		strb	r2, [r3]
3119:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22896              		.loc 1 3119 0 discriminator 3
 22897 02cc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22898 02ce 0133     		adds	r3, r3, #1
 22899 02d0 BB71     		strb	r3, [r7, #6]
 22900              	.L883:
3119:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22901              		.loc 1 3119 0 is_stmt 0 discriminator 1
 22902 02d2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22903 02d4 042B     		cmp	r3, #4
 22904 02d6 ECD9     		bls	.L884
3121:..\src/command_processing.c ****         }
3122:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 22905              		.loc 1 3122 0 is_stmt 1
 22906 02d8 0023     		movs	r3, #0
 22907 02da BB71     		strb	r3, [r7, #6]
 22908 02dc 2CE0     		b	.L885
 22909              	.L901:
 22910 02de 00BF     		.align	2
 22911              	.L900:
 22912 02e0 00000000 		.word	g_mem
 22913              	.L886:
3123:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 22914              		.loc 1 3123 0 discriminator 3
 22915 02e4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22916 02e6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22917 02e8 C948     		ldr	r0, .L902
 22918 02ea 1346     		mov	r3, r2
 22919 02ec 5B00     		lsls	r3, r3, #1
 22920 02ee 1344     		add	r3, r3, r2
 22921 02f0 1B01     		lsls	r3, r3, #4
 22922 02f2 0344     		add	r3, r3, r0
 22923 02f4 0B44     		add	r3, r3, r1
 22924 02f6 03F29513 		addw	r3, r3, #405
 22925 02fa 0322     		movs	r2, #3
 22926 02fc 1A70     		strb	r2, [r3]
3124:..\src/command_processing.c ****             g_mem.enc[i].m_mult[j] = 1;
 22927              		.loc 1 3124 0 discriminator 3
 22928 02fe FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22929 0300 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22930 0302 C348     		ldr	r0, .L902
 22931 0304 1346     		mov	r3, r2
 22932 0306 5B00     		lsls	r3, r3, #1
 22933 0308 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 502


 22934 030a 9B00     		lsls	r3, r3, #2
 22935 030c 0B44     		add	r3, r3, r1
 22936 030e 6833     		adds	r3, r3, #104
 22937 0310 9B00     		lsls	r3, r3, #2
 22938 0312 0344     		add	r3, r3, r0
 22939 0314 4FF07E52 		mov	r2, #1065353216
 22940 0318 5A60     		str	r2, [r3, #4]	@ float
3125:..\src/command_processing.c ****             g_mem.enc[i].m_off[j] = (int32)0 << g_mem.enc[i].res[j];
 22941              		.loc 1 3125 0 discriminator 3
 22942 031a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22943 031c B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22944 031e BC48     		ldr	r0, .L902
 22945 0320 1346     		mov	r3, r2
 22946 0322 5B00     		lsls	r3, r3, #1
 22947 0324 1344     		add	r3, r3, r2
 22948 0326 9B00     		lsls	r3, r3, #2
 22949 0328 0B44     		add	r3, r3, r1
 22950 032a 6633     		adds	r3, r3, #102
 22951 032c 0022     		movs	r2, #0
 22952 032e 40F82320 		str	r2, [r0, r3, lsl #2]
3122:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 22953              		.loc 1 3122 0 discriminator 3
 22954 0332 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22955 0334 0133     		adds	r3, r3, #1
 22956 0336 BB71     		strb	r3, [r7, #6]
 22957              	.L885:
3122:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 22958              		.loc 1 3122 0 is_stmt 0 discriminator 1
 22959 0338 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22960 033a 022B     		cmp	r3, #2
 22961 033c D2D9     		bls	.L886
3126:..\src/command_processing.c ****         }
3127:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = FALSE;
 22962              		.loc 1 3127 0 is_stmt 1
 22963 033e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22964 0340 B349     		ldr	r1, .L902
 22965 0342 1346     		mov	r3, r2
 22966 0344 5B00     		lsls	r3, r3, #1
 22967 0346 1344     		add	r3, r3, r2
 22968 0348 1B01     		lsls	r3, r3, #4
 22969 034a 0B44     		add	r3, r3, r1
 22970 034c 03F5D873 		add	r3, r3, #432
 22971 0350 0022     		movs	r2, #0
 22972 0352 1A70     		strb	r2, [r3]
3128:..\src/command_processing.c ****         g_mem.enc[i].motor_handle_ratio = 22;     
 22973              		.loc 1 3128 0
 22974 0354 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22975 0356 AE49     		ldr	r1, .L902
 22976 0358 1346     		mov	r3, r2
 22977 035a 5B00     		lsls	r3, r3, #1
 22978 035c 1344     		add	r3, r3, r2
 22979 035e 1B01     		lsls	r3, r3, #4
 22980 0360 0B44     		add	r3, r3, r1
 22981 0362 03F5DA73 		add	r3, r3, #436
 22982 0366 1622     		movs	r2, #22
 22983 0368 1A70     		strb	r2, [r3]
3129:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 503


 22984              		.loc 1 3129 0
 22985 036a 0023     		movs	r3, #0
 22986 036c BB71     		strb	r3, [r7, #6]
 22987 036e 0FE0     		b	.L887
 22988              	.L888:
3130:..\src/command_processing.c ****             g_mem.enc[i].Enc_idx_use_for_control[j] = j;    // First encoder is that with index 0 a
 22989              		.loc 1 3130 0 discriminator 3
 22990 0370 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22991 0372 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22992 0374 A648     		ldr	r0, .L902
 22993 0376 1346     		mov	r3, r2
 22994 0378 5B00     		lsls	r3, r3, #1
 22995 037a 1344     		add	r3, r3, r2
 22996 037c 1B01     		lsls	r3, r3, #4
 22997 037e 0344     		add	r3, r3, r0
 22998 0380 0B44     		add	r3, r3, r1
 22999 0382 03F2B113 		addw	r3, r3, #433
 23000 0386 BA79     		ldrb	r2, [r7, #6]
 23001 0388 1A70     		strb	r2, [r3]
3129:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 23002              		.loc 1 3129 0 discriminator 3
 23003 038a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 23004 038c 0133     		adds	r3, r3, #1
 23005 038e BB71     		strb	r3, [r7, #6]
 23006              	.L887:
3129:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 23007              		.loc 1 3129 0 is_stmt 0 discriminator 1
 23008 0390 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 23009 0392 022B     		cmp	r3, #2
 23010 0394 ECD9     		bls	.L888
3131:..\src/command_processing.c ****         }
3132:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = 15;     
 23011              		.loc 1 3132 0 is_stmt 1 discriminator 2
 23012 0396 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23013 0398 9D49     		ldr	r1, .L902
 23014 039a 1346     		mov	r3, r2
 23015 039c 5B00     		lsls	r3, r3, #1
 23016 039e 1344     		add	r3, r3, r2
 23017 03a0 1B01     		lsls	r3, r3, #4
 23018 03a2 0B44     		add	r3, r3, r1
 23019 03a4 03F2B513 		addw	r3, r3, #437
 23020 03a8 0F22     		movs	r2, #15
 23021 03aa 1A70     		strb	r2, [r3]
3133:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = 14;     
 23022              		.loc 1 3133 0 discriminator 2
 23023 03ac FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23024 03ae 9849     		ldr	r1, .L902
 23025 03b0 1346     		mov	r3, r2
 23026 03b2 5B00     		lsls	r3, r3, #1
 23027 03b4 1344     		add	r3, r3, r2
 23028 03b6 1B01     		lsls	r3, r3, #4
 23029 03b8 0B44     		add	r3, r3, r1
 23030 03ba 03F5DB73 		add	r3, r3, #438
 23031 03be 0E22     		movs	r2, #14
 23032 03c0 1A70     		strb	r2, [r3]
3134:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = 1;  
 23033              		.loc 1 3134 0 discriminator 2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 504


 23034 03c2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23035 03c4 9249     		ldr	r1, .L902
 23036 03c6 1346     		mov	r3, r2
 23037 03c8 5B00     		lsls	r3, r3, #1
 23038 03ca 1344     		add	r3, r3, r2
 23039 03cc 1B01     		lsls	r3, r3, #4
 23040 03ce 0B44     		add	r3, r3, r1
 23041 03d0 03F2B713 		addw	r3, r3, #439
 23042 03d4 0122     		movs	r2, #1
 23043 03d6 1A70     		strb	r2, [r3]
3118:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 23044              		.loc 1 3118 0 discriminator 2
 23045 03d8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23046 03da 0133     		adds	r3, r3, #1
 23047 03dc FB71     		strb	r3, [r7, #7]
 23048              	.L882:
3118:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 23049              		.loc 1 3118 0 is_stmt 0 discriminator 1
 23050 03de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23051 03e0 012B     		cmp	r3, #1
 23052 03e2 7FF663AF 		bls	.L889
3135:..\src/command_processing.c ****     }
3136:..\src/command_processing.c ****     
3137:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 23053              		.loc 1 3137 0 is_stmt 1
 23054 03e6 0023     		movs	r3, #0
 23055 03e8 FB71     		strb	r3, [r7, #7]
 23056 03ea 2EE0     		b	.L890
 23057              	.L891:
3138:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 23058              		.loc 1 3138 0 discriminator 3
 23059 03ec FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23060 03ee 8849     		ldr	r1, .L902
 23061 03f0 1346     		mov	r3, r2
 23062 03f2 DB00     		lsls	r3, r3, #3
 23063 03f4 9B1A     		subs	r3, r3, r2
 23064 03f6 1B01     		lsls	r3, r3, #4
 23065 03f8 0B44     		add	r3, r3, r1
 23066 03fa E433     		adds	r3, r3, #228
 23067 03fc 0022     		movs	r2, #0
 23068 03fe 1A60     		str	r2, [r3]
3139:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_sup = (int32)19000 << g_mem.enc[g_mem.motor[i].encoder_line].res[0];
 23069              		.loc 1 3139 0 discriminator 3
 23070 0400 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23071 0402 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 23072 0404 8248     		ldr	r0, .L902
 23073 0406 0B46     		mov	r3, r1
 23074 0408 DB00     		lsls	r3, r3, #3
 23075 040a 5B1A     		subs	r3, r3, r1
 23076 040c 1B01     		lsls	r3, r3, #4
 23077 040e 0344     		add	r3, r3, r0
 23078 0410 03F58873 		add	r3, r3, #272
 23079 0414 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23080 0416 1846     		mov	r0, r3
 23081 0418 7D49     		ldr	r1, .L902
 23082 041a 0346     		mov	r3, r0
 23083 041c 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 505


 23084 041e 0344     		add	r3, r3, r0
 23085 0420 1B01     		lsls	r3, r3, #4
 23086 0422 0B44     		add	r3, r3, r1
 23087 0424 03F29513 		addw	r3, r3, #405
 23088 0428 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23089 042a 1946     		mov	r1, r3
 23090 042c 44F63823 		movw	r3, #19000
 23091 0430 03FA01F1 		lsl	r1, r3, r1
 23092 0434 7648     		ldr	r0, .L902
 23093 0436 1346     		mov	r3, r2
 23094 0438 DB00     		lsls	r3, r3, #3
 23095 043a 9B1A     		subs	r3, r3, r2
 23096 043c 1B01     		lsls	r3, r3, #4
 23097 043e 0344     		add	r3, r3, r0
 23098 0440 E833     		adds	r3, r3, #232
 23099 0442 1960     		str	r1, [r3]
3137:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 23100              		.loc 1 3137 0 discriminator 3
 23101 0444 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23102 0446 0133     		adds	r3, r3, #1
 23103 0448 FB71     		strb	r3, [r7, #7]
 23104              	.L890:
3137:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 23105              		.loc 1 3137 0 is_stmt 0 discriminator 1
 23106 044a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23107 044c 012B     		cmp	r3, #1
 23108 044e CDD9     		bls	.L891
3140:..\src/command_processing.c ****     }
3141:..\src/command_processing.c ****     
3142:..\src/command_processing.c ****     // EMG STRUCT     
3143:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 23109              		.loc 1 3143 0 is_stmt 1
 23110 0450 6F4B     		ldr	r3, .L902
 23111 0452 C822     		movs	r2, #200
 23112 0454 A3F8F021 		strh	r2, [r3, #496]	@ movhi
3144:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 23113              		.loc 1 3144 0
 23114 0458 6D4B     		ldr	r3, .L902
 23115 045a C822     		movs	r2, #200
 23116 045c A3F8F221 		strh	r2, [r3, #498]	@ movhi
3145:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 23117              		.loc 1 3145 0
 23118 0460 6B4B     		ldr	r3, .L902
 23119 0462 4FF48062 		mov	r2, #1024
 23120 0466 C3F8F421 		str	r2, [r3, #500]
3146:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;   
 23121              		.loc 1 3146 0
 23122 046a 694B     		ldr	r3, .L902
 23123 046c 4FF48062 		mov	r2, #1024
 23124 0470 C3F8F821 		str	r2, [r3, #504]
3147:..\src/command_processing.c ****     g_mem.emg.emg_speed[0] = 100; 
 23125              		.loc 1 3147 0
 23126 0474 664B     		ldr	r3, .L902
 23127 0476 6422     		movs	r2, #100
 23128 0478 83F8FC21 		strb	r2, [r3, #508]
3148:..\src/command_processing.c ****     g_mem.emg.emg_speed[1] = 100; 
 23129              		.loc 1 3148 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 506


 23130 047c 644B     		ldr	r3, .L902
 23131 047e 6422     		movs	r2, #100
 23132 0480 83F8FD21 		strb	r2, [r3, #509]
3149:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;      // EMG calibration disabled by default
 23133              		.loc 1 3149 0
 23134 0484 624B     		ldr	r3, .L902
 23135 0486 0022     		movs	r2, #0
 23136 0488 83F8FE21 		strb	r2, [r3, #510]
3150:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;    
 23137              		.loc 1 3150 0
 23138 048c 604B     		ldr	r3, .L902
 23139 048e 0022     		movs	r2, #0
 23140 0490 83F8FF21 		strb	r2, [r3, #511]
3151:..\src/command_processing.c **** 
3152:..\src/command_processing.c ****     // IMU STRUCT
3153:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 23141              		.loc 1 3153 0
 23142 0494 5E4B     		ldr	r3, .L902
 23143 0496 0022     		movs	r2, #0
 23144 0498 83F80022 		strb	r2, [r3, #512]
3154:..\src/command_processing.c ****     g_mem.imu.SPI_read_delay = 0;       // 0 - No delay
 23145              		.loc 1 3154 0
 23146 049c 5C4B     		ldr	r3, .L902
 23147 049e 0022     		movs	r2, #0
 23148 04a0 83F80122 		strb	r2, [r3, #513]
3155:..\src/command_processing.c ****     for (i = 0; i< N_IMU_MAX; i++){
 23149              		.loc 1 3155 0
 23150 04a4 0023     		movs	r3, #0
 23151 04a6 FB71     		strb	r3, [r7, #7]
 23152 04a8 34E0     		b	.L892
 23153              	.L893:
3156:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 23154              		.loc 1 3156 0 discriminator 3
 23155 04aa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23156 04ac 5849     		ldr	r1, .L902
 23157 04ae 1346     		mov	r3, r2
 23158 04b0 9B00     		lsls	r3, r3, #2
 23159 04b2 1344     		add	r3, r3, r2
 23160 04b4 0B44     		add	r3, r3, r1
 23161 04b6 03F20223 		addw	r3, r3, #514
 23162 04ba 0122     		movs	r2, #1
 23163 04bc 1A70     		strb	r2, [r3]
3157:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][1] = 1;   // Gyroscopes
 23164              		.loc 1 3157 0 discriminator 3
 23165 04be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23166 04c0 5349     		ldr	r1, .L902
 23167 04c2 1346     		mov	r3, r2
 23168 04c4 9B00     		lsls	r3, r3, #2
 23169 04c6 1344     		add	r3, r3, r2
 23170 04c8 0B44     		add	r3, r3, r1
 23171 04ca 03F20323 		addw	r3, r3, #515
 23172 04ce 0122     		movs	r2, #1
 23173 04d0 1A70     		strb	r2, [r3]
3158:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][2] = 0;   // Magnetometers
 23174              		.loc 1 3158 0 discriminator 3
 23175 04d2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23176 04d4 4E49     		ldr	r1, .L902
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 507


 23177 04d6 1346     		mov	r3, r2
 23178 04d8 9B00     		lsls	r3, r3, #2
 23179 04da 1344     		add	r3, r3, r2
 23180 04dc 0B44     		add	r3, r3, r1
 23181 04de 03F50173 		add	r3, r3, #516
 23182 04e2 0022     		movs	r2, #0
 23183 04e4 1A70     		strb	r2, [r3]
3159:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][3] = 0;   // Quaternions
 23184              		.loc 1 3159 0 discriminator 3
 23185 04e6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23186 04e8 4949     		ldr	r1, .L902
 23187 04ea 1346     		mov	r3, r2
 23188 04ec 9B00     		lsls	r3, r3, #2
 23189 04ee 1344     		add	r3, r3, r2
 23190 04f0 0B44     		add	r3, r3, r1
 23191 04f2 03F20523 		addw	r3, r3, #517
 23192 04f6 0022     		movs	r2, #0
 23193 04f8 1A70     		strb	r2, [r3]
3160:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][4] = 0;   // Temperatures
 23194              		.loc 1 3160 0 discriminator 3
 23195 04fa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23196 04fc 4449     		ldr	r1, .L902
 23197 04fe 1346     		mov	r3, r2
 23198 0500 9B00     		lsls	r3, r3, #2
 23199 0502 1344     		add	r3, r3, r2
 23200 0504 0B44     		add	r3, r3, r1
 23201 0506 03F20623 		addw	r3, r3, #518
 23202 050a 0022     		movs	r2, #0
 23203 050c 1A70     		strb	r2, [r3]
3155:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 23204              		.loc 1 3155 0 discriminator 3
 23205 050e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23206 0510 0133     		adds	r3, r3, #1
 23207 0512 FB71     		strb	r3, [r7, #7]
 23208              	.L892:
3155:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 23209              		.loc 1 3155 0 is_stmt 0 discriminator 1
 23210 0514 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23211 0516 042B     		cmp	r3, #4
 23212 0518 C7D9     		bls	.L893
3161:..\src/command_processing.c ****     }
3162:..\src/command_processing.c ****      
3163:..\src/command_processing.c ****     // EXP STRUCT
3164:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 23213              		.loc 1 3164 0 is_stmt 1
 23214 051a 3D4B     		ldr	r3, .L902
 23215 051c 0022     		movs	r2, #0
 23216 051e 83F82622 		strb	r2, [r3, #550]
3165:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "GEN001");
 23217              		.loc 1 3165 0
 23218 0522 3B4B     		ldr	r3, .L902
 23219 0524 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 23220 0528 1233     		adds	r3, r3, #18
 23221 052a 5B01     		lsls	r3, r3, #5
 23222 052c 384A     		ldr	r2, .L902
 23223 052e 1344     		add	r3, r3, r2
 23224 0530 384A     		ldr	r2, .L902+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 508


 23225 0532 1068     		ldr	r0, [r2]	@ unaligned
 23226 0534 1860     		str	r0, [r3]	@ unaligned
 23227 0536 9188     		ldrh	r1, [r2, #4]	@ unaligned
 23228 0538 9279     		ldrb	r2, [r2, #6]
 23229 053a 9980     		strh	r1, [r3, #4]	@ unaligned
 23230 053c 9A71     		strb	r2, [r3, #6]
3166:..\src/command_processing.c ****     if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 23231              		.loc 1 3166 0
 23232 053e 344B     		ldr	r3, .L902
 23233 0540 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 23234 0544 012B     		cmp	r3, #1
 23235 0546 13D1     		bne	.L894
3167:..\src/command_processing.c ****         // Set date of maintenance from RTC
3168:..\src/command_processing.c ****         store_RTC_current_time();
 23236              		.loc 1 3168 0
 23237 0548 FFF7FEFF 		bl	store_RTC_current_time
3169:..\src/command_processing.c ****         
3170:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[0] = g_mem.exp.curr_time[0];
 23238              		.loc 1 3170 0
 23239 054c 304B     		ldr	r3, .L902
 23240 054e 93F82022 		ldrb	r2, [r3, #544]	@ zero_extendqisi2
 23241 0552 2F4B     		ldr	r3, .L902
 23242 0554 83F8A420 		strb	r2, [r3, #164]
3171:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[1] = g_mem.exp.curr_time[1];
 23243              		.loc 1 3171 0
 23244 0558 2D4B     		ldr	r3, .L902
 23245 055a 93F82122 		ldrb	r2, [r3, #545]	@ zero_extendqisi2
 23246 055e 2C4B     		ldr	r3, .L902
 23247 0560 83F8A520 		strb	r2, [r3, #165]
3172:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[2] = g_mem.exp.curr_time[2];
 23248              		.loc 1 3172 0
 23249 0564 2A4B     		ldr	r3, .L902
 23250 0566 93F82222 		ldrb	r2, [r3, #546]	@ zero_extendqisi2
 23251 056a 294B     		ldr	r3, .L902
 23252 056c 83F8A620 		strb	r2, [r3, #166]
 23253              	.L894:
3173:..\src/command_processing.c ****     }
3174:..\src/command_processing.c ****     g_mem.exp.read_ADC_sensors_port_flag = FALSE;
 23254              		.loc 1 3174 0
 23255 0570 274B     		ldr	r3, .L902
 23256 0572 0022     		movs	r2, #0
 23257 0574 83F82722 		strb	r2, [r3, #551]
3175:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 23258              		.loc 1 3175 0
 23259 0578 0023     		movs	r3, #0
 23260 057a FB71     		strb	r3, [r7, #7]
 23261 057c 08E0     		b	.L895
 23262              	.L896:
3176:..\src/command_processing.c ****         g_mem.exp.ADC_conf[i] = 0;
 23263              		.loc 1 3176 0 discriminator 3
 23264 057e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23265 0580 234A     		ldr	r2, .L902
 23266 0582 1344     		add	r3, r3, r2
 23267 0584 0022     		movs	r2, #0
 23268 0586 83F82822 		strb	r2, [r3, #552]
3175:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 23269              		.loc 1 3175 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 509


 23270 058a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23271 058c 0133     		adds	r3, r3, #1
 23272 058e FB71     		strb	r3, [r7, #7]
 23273              	.L895:
3175:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 23274              		.loc 1 3175 0 is_stmt 0 discriminator 1
 23275 0590 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23276 0592 0B2B     		cmp	r3, #11
 23277 0594 F3D9     		bls	.L896
3177:..\src/command_processing.c ****     }
3178:..\src/command_processing.c ****     //Activate only the two EMG channels by default for every firmware configuration
3179:..\src/command_processing.c ****     g_mem.exp.ADC_conf[2] = 1;
 23278              		.loc 1 3179 0 is_stmt 1
 23279 0596 1E4B     		ldr	r3, .L902
 23280 0598 0122     		movs	r2, #1
 23281 059a 83F82A22 		strb	r2, [r3, #554]
3180:..\src/command_processing.c ****     g_mem.exp.ADC_conf[3] = 1;
 23282              		.loc 1 3180 0
 23283 059e 1C4B     		ldr	r3, .L902
 23284 05a0 0122     		movs	r2, #1
 23285 05a2 83F82B22 		strb	r2, [r3, #555]
3181:..\src/command_processing.c ****     g_mem.exp.record_EMG_history_on_SD = FALSE;
 23286              		.loc 1 3181 0
 23287 05a6 1A4B     		ldr	r3, .L902
 23288 05a8 0022     		movs	r2, #0
 23289 05aa 83F83422 		strb	r2, [r3, #564]
3182:..\src/command_processing.c **** 
3183:..\src/command_processing.c ****     // WR STRUCT (default in generic fw)
3184:..\src/command_processing.c ****     g_mem.WR.activation_mode = 0;                // Default Fast:wrist/syn2, Slow:hand/syn1
 23290              		.loc 1 3184 0
 23291 05ae 184B     		ldr	r3, .L902
 23292 05b0 0022     		movs	r2, #0
 23293 05b2 83F8E022 		strb	r2, [r3, #736]
3185:..\src/command_processing.c ****     g_mem.WR.fast_act_threshold[0] = 800;
 23294              		.loc 1 3185 0
 23295 05b6 164B     		ldr	r3, .L902
 23296 05b8 4FF44872 		mov	r2, #800
 23297 05bc A3F8E222 		strh	r2, [r3, #738]	@ movhi
3186:..\src/command_processing.c **** 
3187:..\src/command_processing.c **** #ifdef SOFTHAND_FW
3188:..\src/command_processing.c ****     // Override memory values with specific ones for SoftHand Pro device
3189:..\src/command_processing.c ****     memInit_SoftHandPro();
3190:..\src/command_processing.c **** #endif 
3191:..\src/command_processing.c **** 
3192:..\src/command_processing.c **** #ifdef MASTER_FW
3193:..\src/command_processing.c ****     // Override memory values with specific ones for Master device
3194:..\src/command_processing.c ****     memInit_Master();
3195:..\src/command_processing.c **** #endif 
3196:..\src/command_processing.c **** 
3197:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
3198:..\src/command_processing.c ****     // Override memory values with specific ones for Air Chambers device
3199:..\src/command_processing.c ****     memInit_AirChambersFb();
3200:..\src/command_processing.c **** #endif 
3201:..\src/command_processing.c **** 
3202:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
3203:..\src/command_processing.c ****     // Override memory values with specific ones for Ottobock Wrist device
3204:..\src/command_processing.c ****     memInit_OtbkActWristMs();
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 510


3205:..\src/command_processing.c **** #endif
3206:..\src/command_processing.c **** 
3207:..\src/command_processing.c ****     // JOYSTICK STRUCT
3208:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_closure_speed = 150;
 23298              		.loc 1 3208 0
 23299 05c0 134B     		ldr	r3, .L902
 23300 05c2 9622     		movs	r2, #150
 23301 05c4 A3F8B022 		strh	r2, [r3, #688]	@ movhi
3209:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_threshold = 100;
 23302              		.loc 1 3209 0
 23303 05c8 114B     		ldr	r3, .L902
 23304 05ca 6422     		movs	r2, #100
 23305 05cc A3F8B222 		strh	r2, [r3, #690]	@ movhi
3210:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_gains[0] = 1024;
 23306              		.loc 1 3210 0
 23307 05d0 0F4B     		ldr	r3, .L902
 23308 05d2 4FF48062 		mov	r2, #1024
 23309 05d6 A3F8B422 		strh	r2, [r3, #692]	@ movhi
3211:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_gains[1] = 1024;
 23310              		.loc 1 3211 0
 23311 05da 0D4B     		ldr	r3, .L902
 23312 05dc 4FF48062 		mov	r2, #1024
 23313 05e0 A3F8B622 		strh	r2, [r3, #694]	@ movhi
3212:..\src/command_processing.c **** 
3213:..\src/command_processing.c ****     // Default generic user_id
3214:..\src/command_processing.c ****     g_mem.dev.user_id = GENERIC_USER;    
 23314              		.loc 1 3214 0
 23315 05e4 0A4B     		ldr	r3, .L902
 23316 05e6 0022     		movs	r2, #0
 23317 05e8 83F8AB20 		strb	r2, [r3, #171]
3215:..\src/command_processing.c **** 
3216:..\src/command_processing.c ****     // set the initialized flag to show EEPROM has been populated
3217:..\src/command_processing.c ****     g_mem.flag = TRUE;
 23318              		.loc 1 3217 0
 23319 05ec 084B     		ldr	r3, .L902
 23320 05ee 0122     		movs	r2, #1
 23321 05f0 1A70     		strb	r2, [r3]
3218:..\src/command_processing.c ****     
3219:..\src/command_processing.c ****     //write that configuration to EEPROM
3220:..\src/command_processing.c ****     return ( memStore(0) && memStore(DEFAULT_EEPROM_DISPLACEMENT) );
 23322              		.loc 1 3220 0
 23323 05f2 0020     		movs	r0, #0
 23324 05f4 FFF7FEFF 		bl	memStore
 23325 05f8 0346     		mov	r3, r0
 23326 05fa 002B     		cmp	r3, #0
 23327 05fc 0CD0     		beq	.L897
 23328              		.loc 1 3220 0 is_stmt 0 discriminator 1
 23329 05fe 3220     		movs	r0, #50
 23330 0600 FFF7FEFF 		bl	memStore
 23331 0604 0346     		mov	r3, r0
 23332 0606 002B     		cmp	r3, #0
 23333 0608 06D0     		beq	.L897
 23334              		.loc 1 3220 0 discriminator 3
 23335 060a 0123     		movs	r3, #1
 23336 060c 05E0     		b	.L898
 23337              	.L903:
 23338 060e 00BF     		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 511


 23339              	.L902:
 23340 0610 00000000 		.word	g_mem
 23341 0614 2C200000 		.word	.LC310
 23342              	.L897:
 23343              		.loc 1 3220 0 discriminator 4
 23344 0618 0023     		movs	r3, #0
 23345              	.L898:
 23346              		.loc 1 3220 0 discriminator 6
 23347 061a DBB2     		uxtb	r3, r3
3221:..\src/command_processing.c **** }
 23348              		.loc 1 3221 0 is_stmt 1 discriminator 6
 23349 061c 1846     		mov	r0, r3
 23350 061e 0837     		adds	r7, r7, #8
 23351              		.cfi_def_cfa_offset 8
 23352 0620 BD46     		mov	sp, r7
 23353              		.cfi_def_cfa_register 13
 23354              		@ sp needed
 23355 0622 80BD     		pop	{r7, pc}
 23356              		.cfi_endproc
 23357              	.LFE88:
 23358              		.size	memInit, .-memInit
 23359              		.section	.rodata
 23360 2033 00       		.align	2
 23361              	.LC311:
 23362 2034 55535230 		.ascii	"USR001\000"
 23362      303100
 23363              		.section	.text.memInit_SoftHandPro,"ax",%progbits
 23364              		.align	2
 23365              		.global	memInit_SoftHandPro
 23366              		.thumb
 23367              		.thumb_func
 23368              		.type	memInit_SoftHandPro, %function
 23369              	memInit_SoftHandPro:
 23370              	.LFB89:
3222:..\src/command_processing.c **** 
3223:..\src/command_processing.c **** //==============================================================================
3224:..\src/command_processing.c **** //                                                          MEMORY INIT SOFTHAND
3225:..\src/command_processing.c **** //==============================================================================
3226:..\src/command_processing.c **** void memInit_SoftHandPro(void)
3227:..\src/command_processing.c **** {
 23371              		.loc 1 3227 0
 23372              		.cfi_startproc
 23373              		@ args = 0, pretend = 0, frame = 8
 23374              		@ frame_needed = 1, uses_anonymous_args = 0
 23375              		@ link register save eliminated.
 23376 0000 80B4     		push	{r7}
 23377              		.cfi_def_cfa_offset 4
 23378              		.cfi_offset 7, -4
 23379 0002 83B0     		sub	sp, sp, #12
 23380              		.cfi_def_cfa_offset 16
 23381 0004 00AF     		add	r7, sp, #0
 23382              		.cfi_def_cfa_register 7
3228:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 23383              		.loc 1 3228 0
 23384 0006 0023     		movs	r3, #0
 23385 0008 FB70     		strb	r3, [r7, #3]
3229:..\src/command_processing.c ****     
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 512


3230:..\src/command_processing.c ****     //initialize memory settings ( Specific for SoftHand Pro device )    
3231:..\src/command_processing.c ****     g_mem.dev.right_left = LEFT_HAND;
 23386              		.loc 1 3231 0
 23387 000a 894B     		ldr	r3, .L907
 23388 000c 0122     		movs	r2, #1
 23389 000e 83F8A720 		strb	r2, [r3, #167]
3232:..\src/command_processing.c ****     g_mem.dev.dev_type = SOFTHAND_PRO;
 23390              		.loc 1 3232 0
 23391 0012 874B     		ldr	r3, .L907
 23392 0014 0022     		movs	r2, #0
 23393 0016 83F8AC20 		strb	r2, [r3, #172]
3233:..\src/command_processing.c ****     
3234:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].activ         = 1;
 23394              		.loc 1 3234 0
 23395 001a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23396 001c 8449     		ldr	r1, .L907
 23397 001e 1346     		mov	r3, r2
 23398 0020 DB00     		lsls	r3, r3, #3
 23399 0022 9B1A     		subs	r3, r3, r2
 23400 0024 1B01     		lsls	r3, r3, #4
 23401 0026 0B44     		add	r3, r3, r1
 23402 0028 E033     		adds	r3, r3, #224
 23403 002a 0122     		movs	r2, #1
 23404 002c 1A70     		strb	r2, [r3]
3235:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].input_mode    = INPUT_MODE_EXTERNAL;
 23405              		.loc 1 3235 0
 23406 002e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23407 0030 7F49     		ldr	r1, .L907
 23408 0032 1346     		mov	r3, r2
 23409 0034 DB00     		lsls	r3, r3, #3
 23410 0036 9B1A     		subs	r3, r3, r2
 23411 0038 1B01     		lsls	r3, r3, #4
 23412 003a 0B44     		add	r3, r3, r1
 23413 003c 03F58773 		add	r3, r3, #270
 23414 0040 0022     		movs	r2, #0
 23415 0042 1A70     		strb	r2, [r3]
3236:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].control_mode  = CONTROL_ANGLE;
 23416              		.loc 1 3236 0
 23417 0044 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23418 0046 7A49     		ldr	r1, .L907
 23419 0048 1346     		mov	r3, r2
 23420 004a DB00     		lsls	r3, r3, #3
 23421 004c 9B1A     		subs	r3, r3, r2
 23422 004e 1B01     		lsls	r3, r3, #4
 23423 0050 0B44     		add	r3, r3, r1
 23424 0052 03F20F13 		addw	r3, r3, #271
 23425 0056 0022     		movs	r2, #0
 23426 0058 1A70     		strb	r2, [r3]
3237:..\src/command_processing.c ****     
3238:..\src/command_processing.c ****     // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
3239:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 23427              		.loc 1 3239 0
 23428 005a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23429 005c 744B     		ldr	r3, .L907
 23430 005e 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 23431 0062 7349     		ldr	r1, .L907
 23432 0064 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 513


 23433 0066 DB00     		lsls	r3, r3, #3
 23434 0068 9B1A     		subs	r3, r3, r2
 23435 006a 1B01     		lsls	r3, r3, #4
 23436 006c 0B44     		add	r3, r3, r1
 23437 006e 03F58873 		add	r3, r3, #272
 23438 0072 0246     		mov	r2, r0
 23439 0074 1A70     		strb	r2, [r3]
3240:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 23440              		.loc 1 3240 0
 23441 0076 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23442 0078 6D49     		ldr	r1, .L907
 23443 007a 1346     		mov	r3, r2
 23444 007c DB00     		lsls	r3, r3, #3
 23445 007e 9B1A     		subs	r3, r3, r2
 23446 0080 1B01     		lsls	r3, r3, #4
 23447 0082 0B44     		add	r3, r3, r1
 23448 0084 03F21113 		addw	r3, r3, #273
 23449 0088 0122     		movs	r2, #1
 23450 008a 1A70     		strb	r2, [r3]
3241:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversible motor
 23451              		.loc 1 3241 0
 23452 008c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23453 008e 6849     		ldr	r1, .L907
 23454 0090 1346     		mov	r3, r2
 23455 0092 DB00     		lsls	r3, r3, #3
 23456 0094 9B1A     		subs	r3, r3, r2
 23457 0096 1B01     		lsls	r3, r3, #4
 23458 0098 0B44     		add	r3, r3, r1
 23459 009a 03F58973 		add	r3, r3, #274
 23460 009e 0122     		movs	r2, #1
 23461 00a0 1A70     		strb	r2, [r3]
3242:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 23462              		.loc 1 3242 0
 23463 00a2 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23464 00a4 6249     		ldr	r1, .L907
 23465 00a6 1346     		mov	r3, r2
 23466 00a8 DB00     		lsls	r3, r3, #3
 23467 00aa 9B1A     		subs	r3, r3, r2
 23468 00ac 1B01     		lsls	r3, r3, #4
 23469 00ae 0B44     		add	r3, r3, r1
 23470 00b0 E433     		adds	r3, r3, #228
 23471 00b2 0022     		movs	r2, #0
 23472 00b4 1A60     		str	r2, [r3]
3243:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_l
 23473              		.loc 1 3243 0
 23474 00b6 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23475 00b8 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 23476 00ba 5D48     		ldr	r0, .L907
 23477 00bc 0B46     		mov	r3, r1
 23478 00be DB00     		lsls	r3, r3, #3
 23479 00c0 5B1A     		subs	r3, r3, r1
 23480 00c2 1B01     		lsls	r3, r3, #4
 23481 00c4 0344     		add	r3, r3, r0
 23482 00c6 03F58873 		add	r3, r3, #272
 23483 00ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23484 00cc 1846     		mov	r0, r3
 23485 00ce 5849     		ldr	r1, .L907
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 514


 23486 00d0 0346     		mov	r3, r0
 23487 00d2 5B00     		lsls	r3, r3, #1
 23488 00d4 0344     		add	r3, r3, r0
 23489 00d6 1B01     		lsls	r3, r3, #4
 23490 00d8 0B44     		add	r3, r3, r1
 23491 00da 03F29513 		addw	r3, r3, #405
 23492 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23493 00e0 1946     		mov	r1, r3
 23494 00e2 4FF47A53 		mov	r3, #16000
 23495 00e6 03FA01F1 		lsl	r1, r3, r1
 23496 00ea 5148     		ldr	r0, .L907
 23497 00ec 1346     		mov	r3, r2
 23498 00ee DB00     		lsls	r3, r3, #3
 23499 00f0 9B1A     		subs	r3, r3, r2
 23500 00f2 1B01     		lsls	r3, r3, #4
 23501 00f4 0344     		add	r3, r3, r0
 23502 00f6 E833     		adds	r3, r3, #232
 23503 00f8 1960     		str	r1, [r3]
 23504              	.LBB26:
3244:..\src/command_processing.c ****     
3245:..\src/command_processing.c ****     for (int i=0; i < N_ENCODER_LINE_MAX; i++) {
 23505              		.loc 1 3245 0
 23506 00fa 0023     		movs	r3, #0
 23507 00fc 7B60     		str	r3, [r7, #4]
 23508 00fe 2EE0     		b	.L905
 23509              	.L906:
3246:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
3247:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = TRUE;
 23510              		.loc 1 3247 0 discriminator 3
 23511 0100 4B49     		ldr	r1, .L907
 23512 0102 7A68     		ldr	r2, [r7, #4]
 23513 0104 1346     		mov	r3, r2
 23514 0106 5B00     		lsls	r3, r3, #1
 23515 0108 1344     		add	r3, r3, r2
 23516 010a 1B01     		lsls	r3, r3, #4
 23517 010c 0B44     		add	r3, r3, r1
 23518 010e 03F5D873 		add	r3, r3, #432
 23519 0112 0122     		movs	r2, #1
 23520 0114 1A70     		strb	r2, [r3]
3248:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = SH_N1;     
 23521              		.loc 1 3248 0 discriminator 3
 23522 0116 4649     		ldr	r1, .L907
 23523 0118 7A68     		ldr	r2, [r7, #4]
 23524 011a 1346     		mov	r3, r2
 23525 011c 5B00     		lsls	r3, r3, #1
 23526 011e 1344     		add	r3, r3, r2
 23527 0120 1B01     		lsls	r3, r3, #4
 23528 0122 0B44     		add	r3, r3, r1
 23529 0124 03F2B513 		addw	r3, r3, #437
 23530 0128 2322     		movs	r2, #35
 23531 012a 1A70     		strb	r2, [r3]
3249:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = SH_N2;     
 23532              		.loc 1 3249 0 discriminator 3
 23533 012c 4049     		ldr	r1, .L907
 23534 012e 7A68     		ldr	r2, [r7, #4]
 23535 0130 1346     		mov	r3, r2
 23536 0132 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 515


 23537 0134 1344     		add	r3, r3, r2
 23538 0136 1B01     		lsls	r3, r3, #4
 23539 0138 0B44     		add	r3, r3, r1
 23540 013a 03F5DB73 		add	r3, r3, #438
 23541 013e 0322     		movs	r2, #3
 23542 0140 1A70     		strb	r2, [r3]
3250:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = SH_I1;  
 23543              		.loc 1 3250 0 discriminator 3
 23544 0142 3B49     		ldr	r1, .L907
 23545 0144 7A68     		ldr	r2, [r7, #4]
 23546 0146 1346     		mov	r3, r2
 23547 0148 5B00     		lsls	r3, r3, #1
 23548 014a 1344     		add	r3, r3, r2
 23549 014c 1B01     		lsls	r3, r3, #4
 23550 014e 0B44     		add	r3, r3, r1
 23551 0150 03F2B713 		addw	r3, r3, #439
 23552 0154 FF22     		movs	r2, #255
 23553 0156 1A70     		strb	r2, [r3]
3245:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 23554              		.loc 1 3245 0 discriminator 3
 23555 0158 7B68     		ldr	r3, [r7, #4]
 23556 015a 0133     		adds	r3, r3, #1
 23557 015c 7B60     		str	r3, [r7, #4]
 23558              	.L905:
3245:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 23559              		.loc 1 3245 0 is_stmt 0 discriminator 1
 23560 015e 7B68     		ldr	r3, [r7, #4]
 23561 0160 012B     		cmp	r3, #1
 23562 0162 CDDD     		ble	.L906
 23563              	.LBE26:
3251:..\src/command_processing.c ****     }
3252:..\src/command_processing.c ****     
3253:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 23564              		.loc 1 3253 0 is_stmt 1
 23565 0164 324B     		ldr	r3, .L907
 23566 0166 4FF48062 		mov	r2, #1024
 23567 016a C3F8F421 		str	r2, [r3, #500]
3254:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;
 23568              		.loc 1 3254 0
 23569 016e 304B     		ldr	r3, .L907
 23570 0170 4FF48062 		mov	r2, #1024
 23571 0174 C3F8F821 		str	r2, [r3, #504]
3255:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 23572              		.loc 1 3255 0
 23573 0178 2D4B     		ldr	r3, .L907
 23574 017a C822     		movs	r2, #200
 23575 017c A3F8F021 		strh	r2, [r3, #496]	@ movhi
3256:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 23576              		.loc 1 3256 0
 23577 0180 2B4B     		ldr	r3, .L907
 23578 0182 C822     		movs	r2, #200
 23579 0184 A3F8F221 		strh	r2, [r3, #498]	@ movhi
3257:..\src/command_processing.c ****     g_mem.emg.emg_speed[0] = 100;
 23580              		.loc 1 3257 0
 23581 0188 294B     		ldr	r3, .L907
 23582 018a 6422     		movs	r2, #100
 23583 018c 83F8FC21 		strb	r2, [r3, #508]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 516


3258:..\src/command_processing.c ****     g_mem.emg.emg_speed[1] = 100;
 23584              		.loc 1 3258 0
 23585 0190 274B     		ldr	r3, .L907
 23586 0192 6422     		movs	r2, #100
 23587 0194 83F8FD21 		strb	r2, [r3, #509]
3259:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;      // EMG calibration disabled by default
 23588              		.loc 1 3259 0
 23589 0198 254B     		ldr	r3, .L907
 23590 019a 0022     		movs	r2, #0
 23591 019c 83F8FE21 		strb	r2, [r3, #510]
3260:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;
 23592              		.loc 1 3260 0
 23593 01a0 234B     		ldr	r3, .L907
 23594 01a2 0022     		movs	r2, #0
 23595 01a4 83F8FF21 		strb	r2, [r3, #511]
3261:..\src/command_processing.c ****     
3262:..\src/command_processing.c ****     //Initialize rest position parameters  
3263:..\src/command_processing.c ****     g_mem.SH.rest_position_flag = FALSE;
 23596              		.loc 1 3263 0
 23597 01a8 214B     		ldr	r3, .L907
 23598 01aa 0022     		movs	r2, #0
 23599 01ac 83F8AC22 		strb	r2, [r3, #684]
3264:..\src/command_processing.c ****     g_mem.SH.rest_pos = (int32)7000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].res[0]; // 56
 23600              		.loc 1 3264 0
 23601 01b0 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23602 01b2 1F49     		ldr	r1, .L907
 23603 01b4 1346     		mov	r3, r2
 23604 01b6 DB00     		lsls	r3, r3, #3
 23605 01b8 9B1A     		subs	r3, r3, r2
 23606 01ba 1B01     		lsls	r3, r3, #4
 23607 01bc 0B44     		add	r3, r3, r1
 23608 01be 03F58873 		add	r3, r3, #272
 23609 01c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23610 01c4 1946     		mov	r1, r3
 23611 01c6 1A4A     		ldr	r2, .L907
 23612 01c8 0B46     		mov	r3, r1
 23613 01ca 5B00     		lsls	r3, r3, #1
 23614 01cc 0B44     		add	r3, r3, r1
 23615 01ce 1B01     		lsls	r3, r3, #4
 23616 01d0 1344     		add	r3, r3, r2
 23617 01d2 03F29513 		addw	r3, r3, #405
 23618 01d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23619 01d8 1A46     		mov	r2, r3
 23620 01da 41F65833 		movw	r3, #7000
 23621 01de 9340     		lsls	r3, r3, r2
 23622 01e0 134A     		ldr	r2, .L907
 23623 01e2 C2F8A032 		str	r3, [r2, #672]
3265:..\src/command_processing.c **** 	g_mem.SH.rest_delay = 10;
 23624              		.loc 1 3265 0
 23625 01e6 124B     		ldr	r3, .L907
 23626 01e8 0A22     		movs	r2, #10
 23627 01ea C3F8A422 		str	r2, [r3, #676]
3266:..\src/command_processing.c ****     g_mem.SH.rest_vel = 10000;
 23628              		.loc 1 3266 0
 23629 01ee 104B     		ldr	r3, .L907
 23630 01f0 42F21072 		movw	r2, #10000
 23631 01f4 C3F8A822 		str	r2, [r3, #680]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 517


3267:..\src/command_processing.c **** 	
3268:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 23632              		.loc 1 3268 0
 23633 01f8 0D4B     		ldr	r3, .L907
 23634 01fa 0022     		movs	r2, #0
 23635 01fc 83F80022 		strb	r2, [r3, #512]
3269:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 23636              		.loc 1 3269 0
 23637 0200 0B4B     		ldr	r3, .L907
 23638 0202 0022     		movs	r2, #0
 23639 0204 83F82622 		strb	r2, [r3, #550]
3270:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "USR001");
 23640              		.loc 1 3270 0
 23641 0208 094B     		ldr	r3, .L907
 23642 020a 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 23643 020e 1233     		adds	r3, r3, #18
 23644 0210 5B01     		lsls	r3, r3, #5
 23645 0212 074A     		ldr	r2, .L907
 23646 0214 1344     		add	r3, r3, r2
 23647 0216 074A     		ldr	r2, .L907+4
 23648 0218 1068     		ldr	r0, [r2]	@ unaligned
 23649 021a 1860     		str	r0, [r3]	@ unaligned
 23650 021c 9188     		ldrh	r1, [r2, #4]	@ unaligned
 23651 021e 9279     		ldrb	r2, [r2, #6]
 23652 0220 9980     		strh	r1, [r3, #4]	@ unaligned
 23653 0222 9A71     		strb	r2, [r3, #6]
3271:..\src/command_processing.c **** }
 23654              		.loc 1 3271 0
 23655 0224 00BF     		nop
 23656 0226 0C37     		adds	r7, r7, #12
 23657              		.cfi_def_cfa_offset 4
 23658 0228 BD46     		mov	sp, r7
 23659              		.cfi_def_cfa_register 13
 23660              		@ sp needed
 23661 022a 80BC     		pop	{r7}
 23662              		.cfi_restore 7
 23663              		.cfi_def_cfa_offset 0
 23664 022c 7047     		bx	lr
 23665              	.L908:
 23666 022e 00BF     		.align	2
 23667              	.L907:
 23668 0230 00000000 		.word	g_mem
 23669 0234 34200000 		.word	.LC311
 23670              		.cfi_endproc
 23671              	.LFE89:
 23672              		.size	memInit_SoftHandPro, .-memInit_SoftHandPro
 23673              		.section	.text.memInit_Master,"ax",%progbits
 23674              		.align	2
 23675              		.global	memInit_Master
 23676              		.thumb
 23677              		.thumb_func
 23678              		.type	memInit_Master, %function
 23679              	memInit_Master:
 23680              	.LFB90:
3272:..\src/command_processing.c **** 
3273:..\src/command_processing.c **** //==============================================================================
3274:..\src/command_processing.c **** //                                                            MEMORY INIT MASTER
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 518


3275:..\src/command_processing.c **** //==============================================================================
3276:..\src/command_processing.c **** void memInit_Master(void)
3277:..\src/command_processing.c **** {
 23681              		.loc 1 3277 0
 23682              		.cfi_startproc
 23683              		@ args = 0, pretend = 0, frame = 0
 23684              		@ frame_needed = 1, uses_anonymous_args = 0
 23685              		@ link register save eliminated.
 23686 0000 80B4     		push	{r7}
 23687              		.cfi_def_cfa_offset 4
 23688              		.cfi_offset 7, -4
 23689 0002 00AF     		add	r7, sp, #0
 23690              		.cfi_def_cfa_register 7
3278:..\src/command_processing.c ****     g_mem.dev.id                = 2;
 23691              		.loc 1 3278 0
 23692 0004 074B     		ldr	r3, .L910
 23693 0006 0222     		movs	r2, #2
 23694 0008 83F8A020 		strb	r2, [r3, #160]
3279:..\src/command_processing.c ****     
3280:..\src/command_processing.c ****     // MS STRUCT
3281:..\src/command_processing.c ****     g_mem.MS.slave_ID = 1;
 23695              		.loc 1 3281 0
 23696 000c 054B     		ldr	r3, .L910
 23697 000e 0122     		movs	r2, #1
 23698 0010 83F8C122 		strb	r2, [r3, #705]
3282:..\src/command_processing.c ****     g_mem.MS.slave_comm_active = FALSE;
 23699              		.loc 1 3282 0
 23700 0014 034B     		ldr	r3, .L910
 23701 0016 0022     		movs	r2, #0
 23702 0018 83F8C022 		strb	r2, [r3, #704]
3283:..\src/command_processing.c **** }
 23703              		.loc 1 3283 0
 23704 001c 00BF     		nop
 23705 001e BD46     		mov	sp, r7
 23706              		.cfi_def_cfa_register 13
 23707              		@ sp needed
 23708 0020 80BC     		pop	{r7}
 23709              		.cfi_restore 7
 23710              		.cfi_def_cfa_offset 0
 23711 0022 7047     		bx	lr
 23712              	.L911:
 23713              		.align	2
 23714              	.L910:
 23715 0024 00000000 		.word	g_mem
 23716              		.cfi_endproc
 23717              	.LFE90:
 23718              		.size	memInit_Master, .-memInit_Master
 23719              		.section	.text.memInit_AirChambersFb,"ax",%progbits
 23720              		.align	2
 23721              		.global	memInit_AirChambersFb
 23722              		.thumb
 23723              		.thumb_func
 23724              		.type	memInit_AirChambersFb, %function
 23725              	memInit_AirChambersFb:
 23726              	.LFB91:
3284:..\src/command_processing.c **** 
3285:..\src/command_processing.c **** //==============================================================================
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 519


3286:..\src/command_processing.c **** //                                                   MEMORY INIT AIR CHAMBERS FB
3287:..\src/command_processing.c **** //==============================================================================
3288:..\src/command_processing.c **** void memInit_AirChambersFb(void)
3289:..\src/command_processing.c **** {
 23727              		.loc 1 3289 0
 23728              		.cfi_startproc
 23729              		@ args = 0, pretend = 0, frame = 0
 23730              		@ frame_needed = 1, uses_anonymous_args = 0
 23731              		@ link register save eliminated.
 23732 0000 80B4     		push	{r7}
 23733              		.cfi_def_cfa_offset 4
 23734              		.cfi_offset 7, -4
 23735 0002 00AF     		add	r7, sp, #0
 23736              		.cfi_def_cfa_register 7
3290:..\src/command_processing.c ****     // Default configuration with Air Chambers Haptic feedback
3291:..\src/command_processing.c ****     g_mem.dev.dev_type          = AIR_CHAMBERS_FB;
 23737              		.loc 1 3291 0
 23738 0004 1A4B     		ldr	r3, .L913
 23739 0006 0222     		movs	r2, #2
 23740 0008 83F8AC20 		strb	r2, [r3, #172]
3292:..\src/command_processing.c ****     
3293:..\src/command_processing.c ****     g_mem.motor[0].control_mode  = CONTROL_PWM;
 23741              		.loc 1 3293 0
 23742 000c 184B     		ldr	r3, .L913
 23743 000e 0122     		movs	r2, #1
 23744 0010 83F80F21 		strb	r2, [r3, #271]
3294:..\src/command_processing.c ****     
3295:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
3296:..\src/command_processing.c ****     // Default slave configuration for haptic feedback with SoftHand 2.0.3            
3297:..\src/command_processing.c ****     g_mem.motor[1].input_mode = INPUT_MODE_EMG_FCFS;
 23745              		.loc 1 3297 0
 23746 0014 164B     		ldr	r3, .L913
 23747 0016 0422     		movs	r2, #4
 23748 0018 83F87E21 		strb	r2, [r3, #382]
3298:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_inf = 0;
 23749              		.loc 1 3298 0
 23750 001c 144B     		ldr	r3, .L913
 23751 001e 0022     		movs	r2, #0
 23752 0020 C3F85421 		str	r2, [r3, #340]
3299:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_sup = (int32)22000 << g_mem.enc[g_mem.motor[1].encoder_line].res[0];
 23753              		.loc 1 3299 0
 23754 0024 124B     		ldr	r3, .L913
 23755 0026 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23756 002a 1946     		mov	r1, r3
 23757 002c 104A     		ldr	r2, .L913
 23758 002e 0B46     		mov	r3, r1
 23759 0030 5B00     		lsls	r3, r3, #1
 23760 0032 0B44     		add	r3, r3, r1
 23761 0034 1B01     		lsls	r3, r3, #4
 23762 0036 1344     		add	r3, r3, r2
 23763 0038 03F29513 		addw	r3, r3, #405
 23764 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23765 003e 1A46     		mov	r2, r3
 23766 0040 45F2F053 		movw	r3, #22000
 23767 0044 9340     		lsls	r3, r3, r2
 23768 0046 0A4A     		ldr	r2, .L913
 23769 0048 C2F85831 		str	r3, [r2, #344]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 520


3300:..\src/command_processing.c ****     
3301:..\src/command_processing.c ****     // FB STRUCT
3302:..\src/command_processing.c ****     g_mem.FB.max_residual_current = 450;
 23770              		.loc 1 3302 0
 23771 004c 084B     		ldr	r3, .L913
 23772 004e 4FF4E172 		mov	r2, #450
 23773 0052 C3F8D022 		str	r2, [r3, #720]
3303:..\src/command_processing.c ****     g_mem.FB.maximum_pressure_kPa = 25.0;
 23774              		.loc 1 3303 0
 23775 0056 064B     		ldr	r3, .L913
 23776 0058 064A     		ldr	r2, .L913+4
 23777 005a C3F8D422 		str	r2, [r3, #724]	@ float
3304:..\src/command_processing.c ****     g_mem.FB.prop_err_fb_gain = 1.0;
 23778              		.loc 1 3304 0
 23779 005e 044B     		ldr	r3, .L913
 23780 0060 4FF07E52 		mov	r2, #1065353216
 23781 0064 C3F8D822 		str	r2, [r3, #728]	@ float
3305:..\src/command_processing.c **** }
 23782              		.loc 1 3305 0
 23783 0068 00BF     		nop
 23784 006a BD46     		mov	sp, r7
 23785              		.cfi_def_cfa_register 13
 23786              		@ sp needed
 23787 006c 80BC     		pop	{r7}
 23788              		.cfi_restore 7
 23789              		.cfi_def_cfa_offset 0
 23790 006e 7047     		bx	lr
 23791              	.L914:
 23792              		.align	2
 23793              	.L913:
 23794 0070 00000000 		.word	g_mem
 23795 0074 0000C841 		.word	1103626240
 23796              		.cfi_endproc
 23797              	.LFE91:
 23798              		.size	memInit_AirChambersFb, .-memInit_AirChambersFb
 23799              		.section	.text.memInit_OtbkActWristMs,"ax",%progbits
 23800              		.align	2
 23801              		.global	memInit_OtbkActWristMs
 23802              		.thumb
 23803              		.thumb_func
 23804              		.type	memInit_OtbkActWristMs, %function
 23805              	memInit_OtbkActWristMs:
 23806              	.LFB92:
3306:..\src/command_processing.c **** 
3307:..\src/command_processing.c **** //==============================================================================
3308:..\src/command_processing.c **** //                                   MEMORY INIT OTTOBOCK ACTIVE WRIST MASTER FB
3309:..\src/command_processing.c **** //==============================================================================
3310:..\src/command_processing.c **** void memInit_OtbkActWristMs(void)
3311:..\src/command_processing.c **** {
 23807              		.loc 1 3311 0
 23808              		.cfi_startproc
 23809              		@ args = 0, pretend = 0, frame = 0
 23810              		@ frame_needed = 1, uses_anonymous_args = 0
 23811              		@ link register save eliminated.
 23812 0000 80B4     		push	{r7}
 23813              		.cfi_def_cfa_offset 4
 23814              		.cfi_offset 7, -4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 521


 23815 0002 00AF     		add	r7, sp, #0
 23816              		.cfi_def_cfa_register 7
3312:..\src/command_processing.c ****     // Default configuration with Ottobock Active Wrist feedback
3313:..\src/command_processing.c ****     g_mem.dev.dev_type  = OTBK_ACT_WRIST_MS;
 23817              		.loc 1 3313 0
 23818 0004 294B     		ldr	r3, .L916
 23819 0006 0322     		movs	r2, #3
 23820 0008 83F8AC20 		strb	r2, [r3, #172]
3314:..\src/command_processing.c ****     g_mem.dev.right_left = LEFT_HAND;
 23821              		.loc 1 3314 0
 23822 000c 274B     		ldr	r3, .L916
 23823 000e 0122     		movs	r2, #1
 23824 0010 83F8A720 		strb	r2, [r3, #167]
3315:..\src/command_processing.c ****     
3316:..\src/command_processing.c ****     g_mem.motor[0].control_mode = CONTROL_PWM;
 23825              		.loc 1 3316 0
 23826 0014 254B     		ldr	r3, .L916
 23827 0016 0122     		movs	r2, #1
 23828 0018 83F80F21 		strb	r2, [r3, #271]
3317:..\src/command_processing.c ****     g_mem.motor[0].pwm_rate_limiter = 100;
 23829              		.loc 1 3317 0
 23830 001c 234B     		ldr	r3, .L916
 23831 001e 6422     		movs	r2, #100
 23832 0020 83F81121 		strb	r2, [r3, #273]
3318:..\src/command_processing.c ****     g_mem.motor[0].not_revers_motor_flag = FALSE;
 23833              		.loc 1 3318 0
 23834 0024 214B     		ldr	r3, .L916
 23835 0026 0022     		movs	r2, #0
 23836 0028 83F81221 		strb	r2, [r3, #274]
3319:..\src/command_processing.c ****     
3320:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
3321:..\src/command_processing.c ****     // Default slave configuration for SoftHand 3.0            
3322:..\src/command_processing.c ****     g_mem.motor[1].input_mode = INPUT_MODE_EMG_FCFS;
 23837              		.loc 1 3322 0
 23838 002c 1F4B     		ldr	r3, .L916
 23839 002e 0422     		movs	r2, #4
 23840 0030 83F87E21 		strb	r2, [r3, #382]
3323:..\src/command_processing.c ****     g_mem.motor[1].encoder_line  = g_mem.dev.right_left;
 23841              		.loc 1 3323 0
 23842 0034 1D4B     		ldr	r3, .L916
 23843 0036 93F8A720 		ldrb	r2, [r3, #167]	@ zero_extendqisi2
 23844 003a 1C4B     		ldr	r3, .L916
 23845 003c 83F88021 		strb	r2, [r3, #384]
3324:..\src/command_processing.c ****     g_mem.motor[1].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 23846              		.loc 1 3324 0
 23847 0040 1A4B     		ldr	r3, .L916
 23848 0042 0122     		movs	r2, #1
 23849 0044 83F88121 		strb	r2, [r3, #385]
3325:..\src/command_processing.c ****     g_mem.motor[1].not_revers_motor_flag = FALSE;       // False, because it is important only to c
 23850              		.loc 1 3325 0
 23851 0048 184B     		ldr	r3, .L916
 23852 004a 0022     		movs	r2, #0
 23853 004c 83F88221 		strb	r2, [r3, #386]
3326:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_inf = 0;
 23854              		.loc 1 3326 0
 23855 0050 164B     		ldr	r3, .L916
 23856 0052 0022     		movs	r2, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 522


 23857 0054 C3F85421 		str	r2, [r3, #340]
3327:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[1].encoder_line].res[0];
 23858              		.loc 1 3327 0
 23859 0058 144B     		ldr	r3, .L916
 23860 005a 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23861 005e 1946     		mov	r1, r3
 23862 0060 124A     		ldr	r2, .L916
 23863 0062 0B46     		mov	r3, r1
 23864 0064 5B00     		lsls	r3, r3, #1
 23865 0066 0B44     		add	r3, r3, r1
 23866 0068 1B01     		lsls	r3, r3, #4
 23867 006a 1344     		add	r3, r3, r2
 23868 006c 03F29513 		addw	r3, r3, #405
 23869 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23870 0072 1A46     		mov	r2, r3
 23871 0074 4FF47A53 		mov	r3, #16000
 23872 0078 9340     		lsls	r3, r3, r2
 23873 007a 0C4A     		ldr	r2, .L916
 23874 007c C2F85831 		str	r3, [r2, #344]
3328:..\src/command_processing.c ****     
3329:..\src/command_processing.c ****     // WR STRUCT
3330:..\src/command_processing.c ****     g_mem.WR.activation_mode = 0;                // Default Fast:wrist/syn2, Slow:hand/syn1
 23875              		.loc 1 3330 0
 23876 0080 0A4B     		ldr	r3, .L916
 23877 0082 0022     		movs	r2, #0
 23878 0084 83F8E022 		strb	r2, [r3, #736]
3331:..\src/command_processing.c ****     g_mem.WR.fast_act_threshold[0] = 800;
 23879              		.loc 1 3331 0
 23880 0088 084B     		ldr	r3, .L916
 23881 008a 4FF44872 		mov	r2, #800
 23882 008e A3F8E222 		strh	r2, [r3, #738]	@ movhi
3332:..\src/command_processing.c ****     g_mem.WR.fast_act_threshold[1] = 800;
 23883              		.loc 1 3332 0
 23884 0092 064B     		ldr	r3, .L916
 23885 0094 4FF44872 		mov	r2, #800
 23886 0098 A3F8E422 		strh	r2, [r3, #740]	@ movhi
3333:..\src/command_processing.c ****     g_mem.WR.wrist_direction_association = 0;   // Default Close:CW, Open:CCW
 23887              		.loc 1 3333 0
 23888 009c 034B     		ldr	r3, .L916
 23889 009e 0022     		movs	r2, #0
 23890 00a0 83F8E622 		strb	r2, [r3, #742]
3334:..\src/command_processing.c **** }
 23891              		.loc 1 3334 0
 23892 00a4 00BF     		nop
 23893 00a6 BD46     		mov	sp, r7
 23894              		.cfi_def_cfa_register 13
 23895              		@ sp needed
 23896 00a8 80BC     		pop	{r7}
 23897              		.cfi_restore 7
 23898              		.cfi_def_cfa_offset 0
 23899 00aa 7047     		bx	lr
 23900              	.L917:
 23901              		.align	2
 23902              	.L916:
 23903 00ac 00000000 		.word	g_mem
 23904              		.cfi_endproc
 23905              	.LFE92:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 523


 23906              		.size	memInit_OtbkActWristMs, .-memInit_OtbkActWristMs
 23907              		.section	.text.cmd_get_measurements,"ax",%progbits
 23908              		.align	2
 23909              		.global	cmd_get_measurements
 23910              		.thumb
 23911              		.thumb_func
 23912              		.type	cmd_get_measurements, %function
 23913              	cmd_get_measurements:
 23914              	.LFB93:
3335:..\src/command_processing.c **** 
3336:..\src/command_processing.c **** //==============================================================================
3337:..\src/command_processing.c **** //                                                    ROUTINE INTERRUPT FUNCTION
3338:..\src/command_processing.c **** //==============================================================================
3339:..\src/command_processing.c **** /**
3340:..\src/command_processing.c **** * Bunch of functions used on request from UART communication
3341:..\src/command_processing.c **** **/
3342:..\src/command_processing.c **** 
3343:..\src/command_processing.c **** void cmd_get_measurements(){
 23915              		.loc 1 3343 0
 23916              		.cfi_startproc
 23917              		@ args = 0, pretend = 0, frame = 16
 23918              		@ frame_needed = 1, uses_anonymous_args = 0
 23919 0000 90B5     		push	{r4, r7, lr}
 23920              		.cfi_def_cfa_offset 12
 23921              		.cfi_offset 4, -12
 23922              		.cfi_offset 7, -8
 23923              		.cfi_offset 14, -4
 23924 0002 85B0     		sub	sp, sp, #20
 23925              		.cfi_def_cfa_offset 32
 23926 0004 00AF     		add	r7, sp, #0
 23927              		.cfi_def_cfa_register 7
3344:..\src/command_processing.c ****  
3345:..\src/command_processing.c ****     uint8 CYDATA index;
3346:..\src/command_processing.c ****     int16 aux_int16;
3347:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3348:..\src/command_processing.c ****     
3349:..\src/command_processing.c ****     uint8 packet_data[8]; 
3350:..\src/command_processing.c ****     
3351:..\src/command_processing.c ****     //Header package
3352:..\src/command_processing.c ****     packet_data[0] = CMD_GET_MEASUREMENTS;   
 23928              		.loc 1 3352 0
 23929 0006 8423     		movs	r3, #132
 23930 0008 3B71     		strb	r3, [r7, #4]
3353:..\src/command_processing.c ****     
3354:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 23931              		.loc 1 3354 0
 23932 000a 0323     		movs	r3, #3
 23933 000c FB73     		strb	r3, [r7, #15]
 23934 000e 38E0     		b	.L919
 23935              	.L920:
3355:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 23936              		.loc 1 3355 0
 23937 0010 434B     		ldr	r3, .L922
 23938 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23939 0016 1A46     		mov	r2, r3
 23940 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23941 001a 4248     		ldr	r0, .L922+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 524


 23942 001c 1346     		mov	r3, r2
 23943 001e 5B00     		lsls	r3, r3, #1
 23944 0020 1344     		add	r3, r3, r2
 23945 0022 9B00     		lsls	r3, r3, #2
 23946 0024 1344     		add	r3, r3, r2
 23947 0026 0B44     		add	r3, r3, r1
 23948 0028 50F82320 		ldr	r2, [r0, r3, lsl #2]
 23949 002c 3C4B     		ldr	r3, .L922
 23950 002e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23951 0032 1C46     		mov	r4, r3
 23952 0034 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23953 0036 3A48     		ldr	r0, .L922
 23954 0038 2346     		mov	r3, r4
 23955 003a 5B00     		lsls	r3, r3, #1
 23956 003c 2344     		add	r3, r3, r4
 23957 003e 1B01     		lsls	r3, r3, #4
 23958 0040 0344     		add	r3, r3, r0
 23959 0042 0B44     		add	r3, r3, r1
 23960 0044 03F29513 		addw	r3, r3, #405
 23961 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23962 004a 42FA03F3 		asr	r3, r2, r3
 23963 004e 1BB2     		sxth	r3, r3
 23964 0050 BB81     		strh	r3, [r7, #12]	@ movhi
3356:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 23965              		.loc 1 3356 0
 23966 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23967 0054 5B00     		lsls	r3, r3, #1
 23968 0056 0233     		adds	r3, r3, #2
 23969 0058 07F10C02 		add	r2, r7, #12
 23970 005c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 23971 005e 07F11001 		add	r1, r7, #16
 23972 0062 0B44     		add	r3, r3, r1
 23973 0064 03F80C2C 		strb	r2, [r3, #-12]
3357:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 23974              		.loc 1 3357 0
 23975 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23976 006a 5B00     		lsls	r3, r3, #1
 23977 006c 5A1C     		adds	r2, r3, #1
 23978 006e 07F10C03 		add	r3, r7, #12
 23979 0072 0133     		adds	r3, r3, #1
 23980 0074 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23981 0076 07F11003 		add	r3, r7, #16
 23982 007a 1344     		add	r3, r3, r2
 23983 007c 0A46     		mov	r2, r1
 23984 007e 03F80C2C 		strb	r2, [r3, #-12]
 23985              	.L919:
3354:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 23986              		.loc 1 3354 0 discriminator 1
 23987 0082 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23988 0084 5A1E     		subs	r2, r3, #1
 23989 0086 FA73     		strb	r2, [r7, #15]
 23990 0088 002B     		cmp	r3, #0
 23991 008a C1D1     		bne	.L920
3358:..\src/command_processing.c ****     }
3359:..\src/command_processing.c **** 
3360:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE){
 23992              		.loc 1 3360 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 525


 23993 008c 244B     		ldr	r3, .L922
 23994 008e 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 23995 0092 012B     		cmp	r3, #1
 23996 0094 34D1     		bne	.L921
3361:..\src/command_processing.c ****         //Overwrite only second measure with first encoder on second motor line (just to have a mea
3362:..\src/command_processing.c ****         index = 1;
 23997              		.loc 1 3362 0
 23998 0096 0123     		movs	r3, #1
 23999 0098 FB73     		strb	r3, [r7, #15]
3363:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[1].encoder_line].pos[0] >> g_mem.enc[g_mem.motor[
 24000              		.loc 1 3363 0
 24001 009a 214B     		ldr	r3, .L922
 24002 009c 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 24003 00a0 1946     		mov	r1, r3
 24004 00a2 204A     		ldr	r2, .L922+4
 24005 00a4 3423     		movs	r3, #52
 24006 00a6 03FB01F3 		mul	r3, r3, r1
 24007 00aa 1344     		add	r3, r3, r2
 24008 00ac 1A68     		ldr	r2, [r3]
 24009 00ae 1C4B     		ldr	r3, .L922
 24010 00b0 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 24011 00b4 1846     		mov	r0, r3
 24012 00b6 1A49     		ldr	r1, .L922
 24013 00b8 0346     		mov	r3, r0
 24014 00ba 5B00     		lsls	r3, r3, #1
 24015 00bc 0344     		add	r3, r3, r0
 24016 00be 1B01     		lsls	r3, r3, #4
 24017 00c0 0B44     		add	r3, r3, r1
 24018 00c2 03F29513 		addw	r3, r3, #405
 24019 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24020 00c8 42FA03F3 		asr	r3, r2, r3
 24021 00cc 1BB2     		sxth	r3, r3
 24022 00ce BB81     		strh	r3, [r7, #12]	@ movhi
3364:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 24023              		.loc 1 3364 0
 24024 00d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24025 00d2 5B00     		lsls	r3, r3, #1
 24026 00d4 0233     		adds	r3, r3, #2
 24027 00d6 07F10C02 		add	r2, r7, #12
 24028 00da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 24029 00dc 07F11001 		add	r1, r7, #16
 24030 00e0 0B44     		add	r3, r3, r1
 24031 00e2 03F80C2C 		strb	r2, [r3, #-12]
3365:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 24032              		.loc 1 3365 0
 24033 00e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24034 00e8 5B00     		lsls	r3, r3, #1
 24035 00ea 5A1C     		adds	r2, r3, #1
 24036 00ec 07F10C03 		add	r3, r7, #12
 24037 00f0 0133     		adds	r3, r3, #1
 24038 00f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24039 00f4 07F11003 		add	r3, r7, #16
 24040 00f8 1344     		add	r3, r3, r2
 24041 00fa 0A46     		mov	r2, r1
 24042 00fc 03F80C2C 		strb	r2, [r3, #-12]
 24043              	.L921:
3366:..\src/command_processing.c ****     }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 526


3367:..\src/command_processing.c ****     
3368:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3369:..\src/command_processing.c **** 
3370:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 24044              		.loc 1 3370 0
 24045 0100 3B1D     		adds	r3, r7, #4
 24046 0102 0721     		movs	r1, #7
 24047 0104 1846     		mov	r0, r3
 24048 0106 FFF7FEFF 		bl	LCRChecksum
 24049 010a 0346     		mov	r3, r0
 24050 010c FB72     		strb	r3, [r7, #11]
3371:..\src/command_processing.c **** 
3372:..\src/command_processing.c ****     commWrite(packet_data, 8);
 24051              		.loc 1 3372 0
 24052 010e 3B1D     		adds	r3, r7, #4
 24053 0110 0821     		movs	r1, #8
 24054 0112 1846     		mov	r0, r3
 24055 0114 FFF7FEFF 		bl	commWrite
3373:..\src/command_processing.c ****    
3374:..\src/command_processing.c **** }
 24056              		.loc 1 3374 0
 24057 0118 00BF     		nop
 24058 011a 1437     		adds	r7, r7, #20
 24059              		.cfi_def_cfa_offset 12
 24060 011c BD46     		mov	sp, r7
 24061              		.cfi_def_cfa_register 13
 24062              		@ sp needed
 24063 011e 90BD     		pop	{r4, r7, pc}
 24064              	.L923:
 24065              		.align	2
 24066              	.L922:
 24067 0120 00000000 		.word	g_mem
 24068 0124 00000000 		.word	g_measOld
 24069              		.cfi_endproc
 24070              	.LFE93:
 24071              		.size	cmd_get_measurements, .-cmd_get_measurements
 24072              		.section	.text.cmd_get_velocities,"ax",%progbits
 24073              		.align	2
 24074              		.global	cmd_get_velocities
 24075              		.thumb
 24076              		.thumb_func
 24077              		.type	cmd_get_velocities, %function
 24078              	cmd_get_velocities:
 24079              	.LFB94:
3375:..\src/command_processing.c **** 
3376:..\src/command_processing.c **** void cmd_get_velocities(){
 24080              		.loc 1 3376 0
 24081              		.cfi_startproc
 24082              		@ args = 0, pretend = 0, frame = 16
 24083              		@ frame_needed = 1, uses_anonymous_args = 0
 24084 0000 90B5     		push	{r4, r7, lr}
 24085              		.cfi_def_cfa_offset 12
 24086              		.cfi_offset 4, -12
 24087              		.cfi_offset 7, -8
 24088              		.cfi_offset 14, -4
 24089 0002 85B0     		sub	sp, sp, #20
 24090              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 527


 24091 0004 00AF     		add	r7, sp, #0
 24092              		.cfi_def_cfa_register 7
3377:..\src/command_processing.c ****  
3378:..\src/command_processing.c ****     uint8 CYDATA index;
3379:..\src/command_processing.c ****     int16 aux_int16;
3380:..\src/command_processing.c ****    
3381:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3382:..\src/command_processing.c ****     
3383:..\src/command_processing.c ****     uint8 packet_data[8]; 
3384:..\src/command_processing.c ****     
3385:..\src/command_processing.c ****     //Header package
3386:..\src/command_processing.c ****     packet_data[0] = CMD_GET_VELOCITIES;
 24093              		.loc 1 3386 0
 24094 0006 8923     		movs	r3, #137
 24095 0008 3B71     		strb	r3, [r7, #4]
3387:..\src/command_processing.c ****     
3388:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 24096              		.loc 1 3388 0
 24097 000a 0323     		movs	r3, #3
 24098 000c FB73     		strb	r3, [r7, #15]
 24099 000e 3AE0     		b	.L925
 24100              	.L926:
3389:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 24101              		.loc 1 3389 0
 24102 0010 274B     		ldr	r3, .L927
 24103 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24104 0016 1A46     		mov	r2, r3
 24105 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24106 001a 2648     		ldr	r0, .L927+4
 24107 001c 1346     		mov	r3, r2
 24108 001e 5B00     		lsls	r3, r3, #1
 24109 0020 1344     		add	r3, r3, r2
 24110 0022 9B00     		lsls	r3, r3, #2
 24111 0024 1344     		add	r3, r3, r2
 24112 0026 0B44     		add	r3, r3, r1
 24113 0028 0633     		adds	r3, r3, #6
 24114 002a 9B00     		lsls	r3, r3, #2
 24115 002c 0344     		add	r3, r3, r0
 24116 002e 5A68     		ldr	r2, [r3, #4]
 24117 0030 1F4B     		ldr	r3, .L927
 24118 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24119 0036 1C46     		mov	r4, r3
 24120 0038 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24121 003a 1D48     		ldr	r0, .L927
 24122 003c 2346     		mov	r3, r4
 24123 003e 5B00     		lsls	r3, r3, #1
 24124 0040 2344     		add	r3, r3, r4
 24125 0042 1B01     		lsls	r3, r3, #4
 24126 0044 0344     		add	r3, r3, r0
 24127 0046 0B44     		add	r3, r3, r1
 24128 0048 03F29513 		addw	r3, r3, #405
 24129 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24130 004e 42FA03F3 		asr	r3, r2, r3
 24131 0052 1BB2     		sxth	r3, r3
 24132 0054 BB81     		strh	r3, [r7, #12]	@ movhi
3390:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 24133              		.loc 1 3390 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 528


 24134 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24135 0058 5B00     		lsls	r3, r3, #1
 24136 005a 0233     		adds	r3, r3, #2
 24137 005c 07F10C02 		add	r2, r7, #12
 24138 0060 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 24139 0062 07F11001 		add	r1, r7, #16
 24140 0066 0B44     		add	r3, r3, r1
 24141 0068 03F80C2C 		strb	r2, [r3, #-12]
3391:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 24142              		.loc 1 3391 0
 24143 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24144 006e 5B00     		lsls	r3, r3, #1
 24145 0070 5A1C     		adds	r2, r3, #1
 24146 0072 07F10C03 		add	r3, r7, #12
 24147 0076 0133     		adds	r3, r3, #1
 24148 0078 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24149 007a 07F11003 		add	r3, r7, #16
 24150 007e 1344     		add	r3, r3, r2
 24151 0080 0A46     		mov	r2, r1
 24152 0082 03F80C2C 		strb	r2, [r3, #-12]
 24153              	.L925:
3388:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 24154              		.loc 1 3388 0 discriminator 1
 24155 0086 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24156 0088 5A1E     		subs	r2, r3, #1
 24157 008a FA73     		strb	r2, [r7, #15]
 24158 008c 002B     		cmp	r3, #0
 24159 008e BFD1     		bne	.L926
3392:..\src/command_processing.c ****     }
3393:..\src/command_processing.c ****             
3394:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3395:..\src/command_processing.c **** 
3396:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 24160              		.loc 1 3396 0
 24161 0090 3B1D     		adds	r3, r7, #4
 24162 0092 0721     		movs	r1, #7
 24163 0094 1846     		mov	r0, r3
 24164 0096 FFF7FEFF 		bl	LCRChecksum
 24165 009a 0346     		mov	r3, r0
 24166 009c FB72     		strb	r3, [r7, #11]
3397:..\src/command_processing.c **** 
3398:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 24167              		.loc 1 3398 0
 24168 009e 3B1D     		adds	r3, r7, #4
 24169 00a0 0821     		movs	r1, #8
 24170 00a2 1846     		mov	r0, r3
 24171 00a4 FFF7FEFF 		bl	commWrite
3399:..\src/command_processing.c **** }
 24172              		.loc 1 3399 0
 24173 00a8 00BF     		nop
 24174 00aa 1437     		adds	r7, r7, #20
 24175              		.cfi_def_cfa_offset 12
 24176 00ac BD46     		mov	sp, r7
 24177              		.cfi_def_cfa_register 13
 24178              		@ sp needed
 24179 00ae 90BD     		pop	{r4, r7, pc}
 24180              	.L928:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 529


 24181              		.align	2
 24182              	.L927:
 24183 00b0 00000000 		.word	g_mem
 24184 00b4 00000000 		.word	g_measOld
 24185              		.cfi_endproc
 24186              	.LFE94:
 24187              		.size	cmd_get_velocities, .-cmd_get_velocities
 24188              		.section	.text.cmd_get_accelerations,"ax",%progbits
 24189              		.align	2
 24190              		.global	cmd_get_accelerations
 24191              		.thumb
 24192              		.thumb_func
 24193              		.type	cmd_get_accelerations, %function
 24194              	cmd_get_accelerations:
 24195              	.LFB95:
3400:..\src/command_processing.c **** 
3401:..\src/command_processing.c **** void cmd_get_accelerations(){
 24196              		.loc 1 3401 0
 24197              		.cfi_startproc
 24198              		@ args = 0, pretend = 0, frame = 16
 24199              		@ frame_needed = 1, uses_anonymous_args = 0
 24200 0000 90B5     		push	{r4, r7, lr}
 24201              		.cfi_def_cfa_offset 12
 24202              		.cfi_offset 4, -12
 24203              		.cfi_offset 7, -8
 24204              		.cfi_offset 14, -4
 24205 0002 85B0     		sub	sp, sp, #20
 24206              		.cfi_def_cfa_offset 32
 24207 0004 00AF     		add	r7, sp, #0
 24208              		.cfi_def_cfa_register 7
3402:..\src/command_processing.c ****  
3403:..\src/command_processing.c ****     uint8 CYDATA index;
3404:..\src/command_processing.c ****     int16 aux_int16;
3405:..\src/command_processing.c ****     
3406:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3407:..\src/command_processing.c ****     
3408:..\src/command_processing.c ****     uint8 packet_data[8]; 
3409:..\src/command_processing.c ****     
3410:..\src/command_processing.c ****     //Header package
3411:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACCEL;   
 24209              		.loc 1 3411 0
 24210 0006 8B23     		movs	r3, #139
 24211 0008 3B71     		strb	r3, [r7, #4]
3412:..\src/command_processing.c ****     
3413:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 24212              		.loc 1 3413 0
 24213 000a 0323     		movs	r3, #3
 24214 000c FB73     		strb	r3, [r7, #15]
 24215 000e 39E0     		b	.L930
 24216              	.L931:
3414:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 24217              		.loc 1 3414 0
 24218 0010 274B     		ldr	r3, .L932
 24219 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24220 0016 1A46     		mov	r2, r3
 24221 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24222 001a 2648     		ldr	r0, .L932+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 530


 24223 001c 1346     		mov	r3, r2
 24224 001e 5B00     		lsls	r3, r3, #1
 24225 0020 1344     		add	r3, r3, r2
 24226 0022 9B00     		lsls	r3, r3, #2
 24227 0024 1344     		add	r3, r3, r2
 24228 0026 0B44     		add	r3, r3, r1
 24229 0028 0A33     		adds	r3, r3, #10
 24230 002a 50F82320 		ldr	r2, [r0, r3, lsl #2]
 24231 002e 204B     		ldr	r3, .L932
 24232 0030 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24233 0034 1C46     		mov	r4, r3
 24234 0036 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24235 0038 1D48     		ldr	r0, .L932
 24236 003a 2346     		mov	r3, r4
 24237 003c 5B00     		lsls	r3, r3, #1
 24238 003e 2344     		add	r3, r3, r4
 24239 0040 1B01     		lsls	r3, r3, #4
 24240 0042 0344     		add	r3, r3, r0
 24241 0044 0B44     		add	r3, r3, r1
 24242 0046 03F29513 		addw	r3, r3, #405
 24243 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24244 004c 42FA03F3 		asr	r3, r2, r3
 24245 0050 1BB2     		sxth	r3, r3
 24246 0052 BB81     		strh	r3, [r7, #12]	@ movhi
3415:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 24247              		.loc 1 3415 0
 24248 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24249 0056 5B00     		lsls	r3, r3, #1
 24250 0058 0233     		adds	r3, r3, #2
 24251 005a 07F10C02 		add	r2, r7, #12
 24252 005e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 24253 0060 07F11001 		add	r1, r7, #16
 24254 0064 0B44     		add	r3, r3, r1
 24255 0066 03F80C2C 		strb	r2, [r3, #-12]
3416:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 24256              		.loc 1 3416 0
 24257 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24258 006c 5B00     		lsls	r3, r3, #1
 24259 006e 5A1C     		adds	r2, r3, #1
 24260 0070 07F10C03 		add	r3, r7, #12
 24261 0074 0133     		adds	r3, r3, #1
 24262 0076 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24263 0078 07F11003 		add	r3, r7, #16
 24264 007c 1344     		add	r3, r3, r2
 24265 007e 0A46     		mov	r2, r1
 24266 0080 03F80C2C 		strb	r2, [r3, #-12]
 24267              	.L930:
3413:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 24268              		.loc 1 3413 0 discriminator 1
 24269 0084 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24270 0086 5A1E     		subs	r2, r3, #1
 24271 0088 FA73     		strb	r2, [r7, #15]
 24272 008a 002B     		cmp	r3, #0
 24273 008c C0D1     		bne	.L931
3417:..\src/command_processing.c ****     }
3418:..\src/command_processing.c ****     
3419:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 531


3420:..\src/command_processing.c **** 
3421:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 24274              		.loc 1 3421 0
 24275 008e 3B1D     		adds	r3, r7, #4
 24276 0090 0721     		movs	r1, #7
 24277 0092 1846     		mov	r0, r3
 24278 0094 FFF7FEFF 		bl	LCRChecksum
 24279 0098 0346     		mov	r3, r0
 24280 009a FB72     		strb	r3, [r7, #11]
3422:..\src/command_processing.c **** 
3423:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 24281              		.loc 1 3423 0
 24282 009c 3B1D     		adds	r3, r7, #4
 24283 009e 0821     		movs	r1, #8
 24284 00a0 1846     		mov	r0, r3
 24285 00a2 FFF7FEFF 		bl	commWrite
3424:..\src/command_processing.c **** }
 24286              		.loc 1 3424 0
 24287 00a6 00BF     		nop
 24288 00a8 1437     		adds	r7, r7, #20
 24289              		.cfi_def_cfa_offset 12
 24290 00aa BD46     		mov	sp, r7
 24291              		.cfi_def_cfa_register 13
 24292              		@ sp needed
 24293 00ac 90BD     		pop	{r4, r7, pc}
 24294              	.L933:
 24295 00ae 00BF     		.align	2
 24296              	.L932:
 24297 00b0 00000000 		.word	g_mem
 24298 00b4 00000000 		.word	g_measOld
 24299              		.cfi_endproc
 24300              	.LFE95:
 24301              		.size	cmd_get_accelerations, .-cmd_get_accelerations
 24302              		.section	.text.cmd_get_joystick,"ax",%progbits
 24303              		.align	2
 24304              		.global	cmd_get_joystick
 24305              		.thumb
 24306              		.thumb_func
 24307              		.type	cmd_get_joystick, %function
 24308              	cmd_get_joystick:
 24309              	.LFB96:
3425:..\src/command_processing.c **** 
3426:..\src/command_processing.c **** void cmd_get_joystick() {
 24310              		.loc 1 3426 0
 24311              		.cfi_startproc
 24312              		@ args = 0, pretend = 0, frame = 8
 24313              		@ frame_needed = 1, uses_anonymous_args = 0
 24314 0000 80B5     		push	{r7, lr}
 24315              		.cfi_def_cfa_offset 8
 24316              		.cfi_offset 7, -8
 24317              		.cfi_offset 14, -4
 24318 0002 82B0     		sub	sp, sp, #8
 24319              		.cfi_def_cfa_offset 16
 24320 0004 00AF     		add	r7, sp, #0
 24321              		.cfi_def_cfa_register 7
3427:..\src/command_processing.c ****  
3428:..\src/command_processing.c ****     int16 aux_int16;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 532


3429:..\src/command_processing.c ****     
3430:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3431:..\src/command_processing.c ****     
3432:..\src/command_processing.c ****     uint8 packet_data[6];
3433:..\src/command_processing.c ****     
3434:..\src/command_processing.c ****     // Header        
3435:..\src/command_processing.c ****     packet_data[0] = CMD_GET_JOYSTICK;
 24322              		.loc 1 3435 0
 24323 0006 9223     		movs	r3, #146
 24324 0008 3B70     		strb	r3, [r7]
3436:..\src/command_processing.c ****     
3437:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.joystick[0];
 24325              		.loc 1 3437 0
 24326 000a 134B     		ldr	r3, .L935
 24327 000c 1B6A     		ldr	r3, [r3, #32]
 24328 000e 1BB2     		sxth	r3, r3
 24329 0010 FB80     		strh	r3, [r7, #6]	@ movhi
3438:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 24330              		.loc 1 3438 0
 24331 0012 BB1D     		adds	r3, r7, #6
 24332 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24333 0016 BB70     		strb	r3, [r7, #2]
3439:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 24334              		.loc 1 3439 0
 24335 0018 BB1D     		adds	r3, r7, #6
 24336 001a 0133     		adds	r3, r3, #1
 24337 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24338 001e 7B70     		strb	r3, [r7, #1]
3440:..\src/command_processing.c ****     
3441:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.joystick[1];
 24339              		.loc 1 3441 0
 24340 0020 0D4B     		ldr	r3, .L935
 24341 0022 5B6A     		ldr	r3, [r3, #36]
 24342 0024 1BB2     		sxth	r3, r3
 24343 0026 FB80     		strh	r3, [r7, #6]	@ movhi
3442:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 24344              		.loc 1 3442 0
 24345 0028 BB1D     		adds	r3, r7, #6
 24346 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24347 002c 3B71     		strb	r3, [r7, #4]
3443:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 24348              		.loc 1 3443 0
 24349 002e BB1D     		adds	r3, r7, #6
 24350 0030 0133     		adds	r3, r3, #1
 24351 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24352 0034 FB70     		strb	r3, [r7, #3]
3444:..\src/command_processing.c **** 
3445:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 24353              		.loc 1 3445 0
 24354 0036 3B46     		mov	r3, r7
 24355 0038 0521     		movs	r1, #5
 24356 003a 1846     		mov	r0, r3
 24357 003c FFF7FEFF 		bl	LCRChecksum
 24358 0040 0346     		mov	r3, r0
 24359 0042 7B71     		strb	r3, [r7, #5]
3446:..\src/command_processing.c **** 
3447:..\src/command_processing.c ****     commWrite(packet_data, 6);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 533


 24360              		.loc 1 3447 0
 24361 0044 3B46     		mov	r3, r7
 24362 0046 0621     		movs	r1, #6
 24363 0048 1846     		mov	r0, r3
 24364 004a FFF7FEFF 		bl	commWrite
3448:..\src/command_processing.c **** }
 24365              		.loc 1 3448 0
 24366 004e 00BF     		nop
 24367 0050 0837     		adds	r7, r7, #8
 24368              		.cfi_def_cfa_offset 8
 24369 0052 BD46     		mov	sp, r7
 24370              		.cfi_def_cfa_register 13
 24371              		@ sp needed
 24372 0054 80BD     		pop	{r7, pc}
 24373              	.L936:
 24374 0056 00BF     		.align	2
 24375              	.L935:
 24376 0058 00000000 		.word	g_adc_measOld
 24377              		.cfi_endproc
 24378              	.LFE96:
 24379              		.size	cmd_get_joystick, .-cmd_get_joystick
 24380              		.section	.text.cmd_set_inputs,"ax",%progbits
 24381              		.align	2
 24382              		.global	cmd_set_inputs
 24383              		.thumb
 24384              		.thumb_func
 24385              		.type	cmd_set_inputs, %function
 24386              	cmd_set_inputs:
 24387              	.LFB97:
3449:..\src/command_processing.c **** 
3450:..\src/command_processing.c **** void cmd_set_inputs(){
 24388              		.loc 1 3450 0
 24389              		.cfi_startproc
 24390              		@ args = 0, pretend = 0, frame = 8
 24391              		@ frame_needed = 1, uses_anonymous_args = 0
 24392              		@ link register save eliminated.
 24393 0000 90B4     		push	{r4, r7}
 24394              		.cfi_def_cfa_offset 8
 24395              		.cfi_offset 4, -8
 24396              		.cfi_offset 7, -4
 24397 0002 82B0     		sub	sp, sp, #8
 24398              		.cfi_def_cfa_offset 16
 24399 0004 00AF     		add	r7, sp, #0
 24400              		.cfi_def_cfa_register 7
3451:..\src/command_processing.c ****     
3452:..\src/command_processing.c ****     // Store position setted in right variables
3453:..\src/command_processing.c ****     int16 aux_int16[NUM_OF_MOTORS];
3454:..\src/command_processing.c ****     static int16 last_aux_int16[NUM_OF_MOTORS];
3455:..\src/command_processing.c ****     
3456:..\src/command_processing.c ****     aux_int16[0] = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 24401              		.loc 1 3456 0
 24402 0006 894B     		ldr	r3, .L951
 24403 0008 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 24404 000a 1B02     		lsls	r3, r3, #8
 24405 000c 1AB2     		sxth	r2, r3
 24406 000e 874B     		ldr	r3, .L951
 24407 0010 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 534


 24408 0012 1BB2     		sxth	r3, r3
 24409 0014 1343     		orrs	r3, r3, r2
 24410 0016 1BB2     		sxth	r3, r3
 24411 0018 3B80     		strh	r3, [r7]	@ movhi
3457:..\src/command_processing.c ****     aux_int16[1] = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 24412              		.loc 1 3457 0
 24413 001a 844B     		ldr	r3, .L951
 24414 001c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 24415 001e 1B02     		lsls	r3, r3, #8
 24416 0020 1AB2     		sxth	r2, r3
 24417 0022 824B     		ldr	r3, .L951
 24418 0024 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 24419 0026 1BB2     		sxth	r3, r3
 24420 0028 1343     		orrs	r3, r3, r2
 24421 002a 1BB2     		sxth	r3, r3
 24422 002c 7B80     		strh	r3, [r7, #2]	@ movhi
 24423              	.LBB27:
3458:..\src/command_processing.c ****     
3459:..\src/command_processing.c ****     // Check if last command received was the same as this 
3460:..\src/command_processing.c ****     //(Note: last command not last motor reference in g_ref)
3461:..\src/command_processing.c ****     for (uint8 i = 0; i < (1 + c_mem.dev.use_2nd_motor_flag); i++) {
 24424              		.loc 1 3461 0
 24425 002e 0023     		movs	r3, #0
 24426 0030 FB71     		strb	r3, [r7, #7]
 24427 0032 1DE0     		b	.L938
 24428              	.L940:
3462:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 24429              		.loc 1 3462 0
 24430 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24431 0036 7E4A     		ldr	r2, .L951+4
 24432 0038 32F91320 		ldrsh	r2, [r2, r3, lsl #1]
 24433 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24434 003e 5B00     		lsls	r3, r3, #1
 24435 0040 07F10801 		add	r1, r7, #8
 24436 0044 0B44     		add	r3, r3, r1
 24437 0046 33F9083C 		ldrsh	r3, [r3, #-8]
 24438 004a 9A42     		cmp	r2, r3
 24439 004c 02D0     		beq	.L939
3463:..\src/command_processing.c ****             change_ext_ref_flag = TRUE;
 24440              		.loc 1 3463 0
 24441 004e 794B     		ldr	r3, .L951+8
 24442 0050 0122     		movs	r2, #1
 24443 0052 1A70     		strb	r2, [r3]
 24444              	.L939:
3464:..\src/command_processing.c ****        }
3465:..\src/command_processing.c ****         // Update last command
3466:..\src/command_processing.c ****        last_aux_int16[i] = aux_int16[i];
 24445              		.loc 1 3466 0 discriminator 2
 24446 0054 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 24447 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24448 0058 5B00     		lsls	r3, r3, #1
 24449 005a 07F10801 		add	r1, r7, #8
 24450 005e 0B44     		add	r3, r3, r1
 24451 0060 33F9081C 		ldrsh	r1, [r3, #-8]
 24452 0064 724B     		ldr	r3, .L951+4
 24453 0066 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
3461:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 535


 24454              		.loc 1 3461 0 discriminator 2
 24455 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24456 006c 0133     		adds	r3, r3, #1
 24457 006e FB71     		strb	r3, [r7, #7]
 24458              	.L938:
3461:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 24459              		.loc 1 3461 0 is_stmt 0 discriminator 1
 24460 0070 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 24461 0072 714B     		ldr	r3, .L951+12
 24462 0074 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24463 0078 0133     		adds	r3, r3, #1
 24464 007a 9A42     		cmp	r2, r3
 24465 007c DADB     		blt	.L940
 24466              	.LBE27:
3467:..\src/command_processing.c ****     }
3468:..\src/command_processing.c ****     
3469:..\src/command_processing.c ****     // Update g_refNew in case a new command has been received
3470:..\src/command_processing.c ****     if (change_ext_ref_flag) {
 24467              		.loc 1 3470 0 is_stmt 1
 24468 007e 6D4B     		ldr	r3, .L951+8
 24469 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24470 0082 002B     		cmp	r3, #0
 24471 0084 00F0CC80 		beq	.L950
 24472              	.LBB28:
3471:..\src/command_processing.c ****         for (uint8 i = 0; i< NUM_OF_MOTORS; i++) {
 24473              		.loc 1 3471 0
 24474 0088 0023     		movs	r3, #0
 24475 008a BB71     		strb	r3, [r7, #6]
 24476 008c C4E0     		b	.L942
 24477              	.L949:
3472:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 24478              		.loc 1 3472 0
 24479 008e BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24480 0090 6A49     		ldr	r1, .L951+16
 24481 0092 1346     		mov	r3, r2
 24482 0094 DB00     		lsls	r3, r3, #3
 24483 0096 9B1A     		subs	r3, r3, r2
 24484 0098 1B01     		lsls	r3, r3, #4
 24485 009a 0B44     		add	r3, r3, r1
 24486 009c 03F20F13 		addw	r3, r3, #271
 24487 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24488 00a2 022B     		cmp	r3, #2
 24489 00a4 0ED1     		bne	.L943
3473:..\src/command_processing.c ****                 g_refNew[i].curr = aux_int16[i];
 24490              		.loc 1 3473 0
 24491 00a6 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24492 00a8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24493 00aa 5B00     		lsls	r3, r3, #1
 24494 00ac 07F10801 		add	r1, r7, #8
 24495 00b0 0B44     		add	r3, r3, r1
 24496 00b2 33F9083C 		ldrsh	r3, [r3, #-8]
 24497 00b6 1846     		mov	r0, r3
 24498 00b8 6149     		ldr	r1, .L951+20
 24499 00ba 1301     		lsls	r3, r2, #4
 24500 00bc 0B44     		add	r3, r3, r1
 24501 00be 0433     		adds	r3, r3, #4
 24502 00c0 1860     		str	r0, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 536


 24503 00c2 47E0     		b	.L944
 24504              	.L943:
3474:..\src/command_processing.c ****             }
3475:..\src/command_processing.c ****             else {
3476:..\src/command_processing.c ****                 if(g_mem.motor[i].control_mode == CONTROL_PWM) {
 24505              		.loc 1 3476 0
 24506 00c4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24507 00c6 5D49     		ldr	r1, .L951+16
 24508 00c8 1346     		mov	r3, r2
 24509 00ca DB00     		lsls	r3, r3, #3
 24510 00cc 9B1A     		subs	r3, r3, r2
 24511 00ce 1B01     		lsls	r3, r3, #4
 24512 00d0 0B44     		add	r3, r3, r1
 24513 00d2 03F20F13 		addw	r3, r3, #271
 24514 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24515 00d8 012B     		cmp	r3, #1
 24516 00da 0ED1     		bne	.L945
3477:..\src/command_processing.c ****                     g_refNew[i].pwm = aux_int16[i];
 24517              		.loc 1 3477 0
 24518 00dc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24519 00de BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24520 00e0 5B00     		lsls	r3, r3, #1
 24521 00e2 07F10801 		add	r1, r7, #8
 24522 00e6 0B44     		add	r3, r3, r1
 24523 00e8 33F9083C 		ldrsh	r3, [r3, #-8]
 24524 00ec 1846     		mov	r0, r3
 24525 00ee 5449     		ldr	r1, .L951+20
 24526 00f0 1301     		lsls	r3, r2, #4
 24527 00f2 0B44     		add	r3, r3, r1
 24528 00f4 0833     		adds	r3, r3, #8
 24529 00f6 1860     		str	r0, [r3]
 24530 00f8 2CE0     		b	.L944
 24531              	.L945:
3478:..\src/command_processing.c ****                 }
3479:..\src/command_processing.c ****                 else {
3480:..\src/command_processing.c ****                     g_refNew[i].pos = aux_int16[i];   // motor ref
 24532              		.loc 1 3480 0
 24533 00fa BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24534 00fc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24535 00fe 5B00     		lsls	r3, r3, #1
 24536 0100 07F10801 		add	r1, r7, #8
 24537 0104 0B44     		add	r3, r3, r1
 24538 0106 33F9083C 		ldrsh	r3, [r3, #-8]
 24539 010a 1846     		mov	r0, r3
 24540 010c 4C49     		ldr	r1, .L951+20
 24541 010e 1301     		lsls	r3, r2, #4
 24542 0110 0B44     		add	r3, r3, r1
 24543 0112 1860     		str	r0, [r3]
3481:..\src/command_processing.c ****                     g_refNew[i].pos = g_refNew[i].pos << g_mem.enc[c_mem.motor[i].encoder_line].res
 24544              		.loc 1 3481 0
 24545 0114 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 24546 0116 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24547 0118 494A     		ldr	r2, .L951+20
 24548 011a 1B01     		lsls	r3, r3, #4
 24549 011c 1344     		add	r3, r3, r2
 24550 011e 1868     		ldr	r0, [r3]
 24551 0120 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 537


 24552 0122 454C     		ldr	r4, .L951+12
 24553 0124 1346     		mov	r3, r2
 24554 0126 DB00     		lsls	r3, r3, #3
 24555 0128 9B1A     		subs	r3, r3, r2
 24556 012a 1B01     		lsls	r3, r3, #4
 24557 012c 2344     		add	r3, r3, r4
 24558 012e 03F58873 		add	r3, r3, #272
 24559 0132 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24560 0134 1C46     		mov	r4, r3
 24561 0136 414A     		ldr	r2, .L951+16
 24562 0138 2346     		mov	r3, r4
 24563 013a 5B00     		lsls	r3, r3, #1
 24564 013c 2344     		add	r3, r3, r4
 24565 013e 1B01     		lsls	r3, r3, #4
 24566 0140 1344     		add	r3, r3, r2
 24567 0142 03F29513 		addw	r3, r3, #405
 24568 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24569 0148 00FA03F2 		lsl	r2, r0, r3
 24570 014c 3C48     		ldr	r0, .L951+20
 24571 014e 0B01     		lsls	r3, r1, #4
 24572 0150 0344     		add	r3, r3, r0
 24573 0152 1A60     		str	r2, [r3]
 24574              	.L944:
3482:..\src/command_processing.c ****                 }
3483:..\src/command_processing.c ****             }  
3484:..\src/command_processing.c ****                
3485:..\src/command_processing.c ****             // Check if the reference is nor higher or lower than the position limits
3486:..\src/command_processing.c ****             if (c_mem.motor[i].pos_lim_flag && (g_mem.motor[i].control_mode == CURR_AND_POS_CONTROL
 24575              		.loc 1 3486 0
 24576 0154 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24577 0156 3849     		ldr	r1, .L951+12
 24578 0158 1346     		mov	r3, r2
 24579 015a DB00     		lsls	r3, r3, #3
 24580 015c 9B1A     		subs	r3, r3, r2
 24581 015e 1B01     		lsls	r3, r3, #4
 24582 0160 0B44     		add	r3, r3, r1
 24583 0162 E333     		adds	r3, r3, #227
 24584 0164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24585 0166 002B     		cmp	r3, #0
 24586 0168 53D0     		beq	.L946
 24587              		.loc 1 3486 0 is_stmt 0 discriminator 1
 24588 016a BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24589 016c 3349     		ldr	r1, .L951+16
 24590 016e 1346     		mov	r3, r2
 24591 0170 DB00     		lsls	r3, r3, #3
 24592 0172 9B1A     		subs	r3, r3, r2
 24593 0174 1B01     		lsls	r3, r3, #4
 24594 0176 0B44     		add	r3, r3, r1
 24595 0178 03F20F13 		addw	r3, r3, #271
 24596 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24597 017e 032B     		cmp	r3, #3
 24598 0180 0BD0     		beq	.L947
 24599              		.loc 1 3486 0 discriminator 2
 24600 0182 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24601 0184 2D49     		ldr	r1, .L951+16
 24602 0186 1346     		mov	r3, r2
 24603 0188 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 538


 24604 018a 9B1A     		subs	r3, r3, r2
 24605 018c 1B01     		lsls	r3, r3, #4
 24606 018e 0B44     		add	r3, r3, r1
 24607 0190 03F20F13 		addw	r3, r3, #271
 24608 0194 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24609 0196 002B     		cmp	r3, #0
 24610 0198 3BD1     		bne	.L946
 24611              	.L947:
3487:..\src/command_processing.c ****                 
3488:..\src/command_processing.c ****                 if (g_refNew[i].pos < c_mem.motor[i].pos_lim_inf) 
 24612              		.loc 1 3488 0 is_stmt 1
 24613 019a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24614 019c 284A     		ldr	r2, .L951+20
 24615 019e 1B01     		lsls	r3, r3, #4
 24616 01a0 1344     		add	r3, r3, r2
 24617 01a2 1968     		ldr	r1, [r3]
 24618 01a4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24619 01a6 2448     		ldr	r0, .L951+12
 24620 01a8 1346     		mov	r3, r2
 24621 01aa DB00     		lsls	r3, r3, #3
 24622 01ac 9B1A     		subs	r3, r3, r2
 24623 01ae 1B01     		lsls	r3, r3, #4
 24624 01b0 0344     		add	r3, r3, r0
 24625 01b2 E433     		adds	r3, r3, #228
 24626 01b4 1B68     		ldr	r3, [r3]
 24627 01b6 9942     		cmp	r1, r3
 24628 01b8 0DDA     		bge	.L948
3489:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_inf;
 24629              		.loc 1 3489 0
 24630 01ba B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 24631 01bc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24632 01be 1E48     		ldr	r0, .L951+12
 24633 01c0 1346     		mov	r3, r2
 24634 01c2 DB00     		lsls	r3, r3, #3
 24635 01c4 9B1A     		subs	r3, r3, r2
 24636 01c6 1B01     		lsls	r3, r3, #4
 24637 01c8 0344     		add	r3, r3, r0
 24638 01ca E433     		adds	r3, r3, #228
 24639 01cc 1A68     		ldr	r2, [r3]
 24640 01ce 1C48     		ldr	r0, .L951+20
 24641 01d0 0B01     		lsls	r3, r1, #4
 24642 01d2 0344     		add	r3, r3, r0
 24643 01d4 1A60     		str	r2, [r3]
 24644              	.L948:
3490:..\src/command_processing.c **** 
3491:..\src/command_processing.c ****                 if (g_refNew[i].pos > c_mem.motor[i].pos_lim_sup) 
 24645              		.loc 1 3491 0
 24646 01d6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24647 01d8 194A     		ldr	r2, .L951+20
 24648 01da 1B01     		lsls	r3, r3, #4
 24649 01dc 1344     		add	r3, r3, r2
 24650 01de 1968     		ldr	r1, [r3]
 24651 01e0 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24652 01e2 1548     		ldr	r0, .L951+12
 24653 01e4 1346     		mov	r3, r2
 24654 01e6 DB00     		lsls	r3, r3, #3
 24655 01e8 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 539


 24656 01ea 1B01     		lsls	r3, r3, #4
 24657 01ec 0344     		add	r3, r3, r0
 24658 01ee E833     		adds	r3, r3, #232
 24659 01f0 1B68     		ldr	r3, [r3]
 24660 01f2 9942     		cmp	r1, r3
 24661 01f4 0DDD     		ble	.L946
3492:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_sup;
 24662              		.loc 1 3492 0
 24663 01f6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 24664 01f8 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24665 01fa 0F48     		ldr	r0, .L951+12
 24666 01fc 1346     		mov	r3, r2
 24667 01fe DB00     		lsls	r3, r3, #3
 24668 0200 9B1A     		subs	r3, r3, r2
 24669 0202 1B01     		lsls	r3, r3, #4
 24670 0204 0344     		add	r3, r3, r0
 24671 0206 E833     		adds	r3, r3, #232
 24672 0208 1A68     		ldr	r2, [r3]
 24673 020a 0D48     		ldr	r0, .L951+20
 24674 020c 0B01     		lsls	r3, r1, #4
 24675 020e 0344     		add	r3, r3, r0
 24676 0210 1A60     		str	r2, [r3]
 24677              	.L946:
3471:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 24678              		.loc 1 3471 0 discriminator 2
 24679 0212 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24680 0214 0133     		adds	r3, r3, #1
 24681 0216 BB71     		strb	r3, [r7, #6]
 24682              	.L942:
3471:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 24683              		.loc 1 3471 0 is_stmt 0 discriminator 1
 24684 0218 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24685 021a 012B     		cmp	r3, #1
 24686 021c 7FF637AF 		bls	.L949
 24687              	.L950:
 24688              	.LBE28:
3493:..\src/command_processing.c ****             }
3494:..\src/command_processing.c ****         }  
3495:..\src/command_processing.c ****     }
3496:..\src/command_processing.c **** }
 24689              		.loc 1 3496 0 is_stmt 1
 24690 0220 00BF     		nop
 24691 0222 0837     		adds	r7, r7, #8
 24692              		.cfi_def_cfa_offset 8
 24693 0224 BD46     		mov	sp, r7
 24694              		.cfi_def_cfa_register 13
 24695              		@ sp needed
 24696 0226 90BC     		pop	{r4, r7}
 24697              		.cfi_restore 7
 24698              		.cfi_restore 4
 24699              		.cfi_def_cfa_offset 0
 24700 0228 7047     		bx	lr
 24701              	.L952:
 24702 022a 00BF     		.align	2
 24703              	.L951:
 24704 022c 00000000 		.word	g_rx
 24705 0230 08000000 		.word	last_aux_int16.11394
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 540


 24706 0234 00000000 		.word	change_ext_ref_flag
 24707 0238 00000000 		.word	c_mem
 24708 023c 00000000 		.word	g_mem
 24709 0240 00000000 		.word	g_refNew
 24710              		.cfi_endproc
 24711              	.LFE97:
 24712              		.size	cmd_set_inputs, .-cmd_set_inputs
 24713              		.section	.text.cmd_activate,"ax",%progbits
 24714              		.align	2
 24715              		.global	cmd_activate
 24716              		.thumb
 24717              		.thumb_func
 24718              		.type	cmd_activate, %function
 24719              	cmd_activate:
 24720              	.LFB98:
3497:..\src/command_processing.c **** 
3498:..\src/command_processing.c **** void cmd_activate(){
 24721              		.loc 1 3498 0
 24722              		.cfi_startproc
 24723              		@ args = 0, pretend = 0, frame = 8
 24724              		@ frame_needed = 1, uses_anonymous_args = 0
 24725 0000 80B5     		push	{r7, lr}
 24726              		.cfi_def_cfa_offset 8
 24727              		.cfi_offset 7, -8
 24728              		.cfi_offset 14, -4
 24729 0002 82B0     		sub	sp, sp, #8
 24730              		.cfi_def_cfa_offset 16
 24731 0004 00AF     		add	r7, sp, #0
 24732              		.cfi_def_cfa_register 7
3499:..\src/command_processing.c ****     
3500:..\src/command_processing.c ****     // Store new value reads
3501:..\src/command_processing.c ****     uint8 aux = g_rx.buffer[1];
 24733              		.loc 1 3501 0
 24734 0006 294B     		ldr	r3, .L960
 24735 0008 5B78     		ldrb	r3, [r3, #1]
 24736 000a FB71     		strb	r3, [r7, #7]
3502:..\src/command_processing.c ****     
3503:..\src/command_processing.c ****     // Check type of control mode enabled
3504:..\src/command_processing.c ****     if ((g_mem.motor[0].control_mode == CONTROL_ANGLE) || (g_mem.motor[0].control_mode == CURR_AND_
 24737              		.loc 1 3504 0
 24738 000c 284B     		ldr	r3, .L960+4
 24739 000e 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 24740 0012 002B     		cmp	r3, #0
 24741 0014 04D0     		beq	.L954
 24742              		.loc 1 3504 0 is_stmt 0 discriminator 1
 24743 0016 264B     		ldr	r3, .L960+4
 24744 0018 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 24745 001c 032B     		cmp	r3, #3
 24746 001e 0BD1     		bne	.L955
 24747              	.L954:
3505:..\src/command_processing.c ****         g_refNew[0].pos = g_meas[g_mem.motor[0].encoder_line].pos[0];
 24748              		.loc 1 3505 0 is_stmt 1
 24749 0020 234B     		ldr	r3, .L960+4
 24750 0022 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24751 0026 1946     		mov	r1, r3
 24752 0028 224A     		ldr	r2, .L960+8
 24753 002a 3423     		movs	r3, #52
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 541


 24754 002c 03FB01F3 		mul	r3, r3, r1
 24755 0030 1344     		add	r3, r3, r2
 24756 0032 1B68     		ldr	r3, [r3]
 24757 0034 204A     		ldr	r2, .L960+12
 24758 0036 1360     		str	r3, [r2]
 24759              	.L955:
3506:..\src/command_processing.c ****     }
3507:..\src/command_processing.c ****     g_refNew[0].onoff = (aux & 0x01);
 24760              		.loc 1 3507 0
 24761 0038 FB79     		ldrb	r3, [r7, #7]
 24762 003a 03F00103 		and	r3, r3, #1
 24763 003e DAB2     		uxtb	r2, r3
 24764 0040 1D4B     		ldr	r3, .L960+12
 24765 0042 1A73     		strb	r2, [r3, #12]
3508:..\src/command_processing.c ****     
3509:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
3510:..\src/command_processing.c ****     if (g_mem.dev.dev_type == AIR_CHAMBERS_FB){
3511:..\src/command_processing.c ****         // Send PWM 0 to the PUMP in case a deactivation command arrives
3512:..\src/command_processing.c ****         // [There is no driver activation, so g_refNew[i].onoff is useless]
3513:..\src/command_processing.c ****         if (!(g_refNew[0].onoff)) {
3514:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
3515:..\src/command_processing.c ****         }
3516:..\src/command_processing.c ****         
3517:..\src/command_processing.c ****         // Activate or deactivate the valve
3518:..\src/command_processing.c ****         VALVE_Write((aux >> 1) & 0x01);
3519:..\src/command_processing.c ****     }
3520:..\src/command_processing.c **** #endif
3521:..\src/command_processing.c ****     
3522:..\src/command_processing.c ****     // Activate/Deactivate motor
3523:..\src/command_processing.c ****     enable_motor(0, g_refNew[0].onoff); 
 24766              		.loc 1 3523 0
 24767 0044 1C4B     		ldr	r3, .L960+12
 24768 0046 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 24769 0048 1946     		mov	r1, r3
 24770 004a 0020     		movs	r0, #0
 24771 004c FFF7FEFF 		bl	enable_motor
3524:..\src/command_processing.c ****     
3525:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 24772              		.loc 1 3525 0
 24773 0050 174B     		ldr	r3, .L960+4
 24774 0052 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24775 0056 012B     		cmp	r3, #1
 24776 0058 23D1     		bne	.L959
3526:..\src/command_processing.c ****         if ((g_mem.motor[1].control_mode == CONTROL_ANGLE) || (g_mem.motor[1].control_mode == CURR_
 24777              		.loc 1 3526 0
 24778 005a 154B     		ldr	r3, .L960+4
 24779 005c 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 24780 0060 002B     		cmp	r3, #0
 24781 0062 04D0     		beq	.L957
 24782              		.loc 1 3526 0 is_stmt 0 discriminator 1
 24783 0064 124B     		ldr	r3, .L960+4
 24784 0066 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 24785 006a 032B     		cmp	r3, #3
 24786 006c 0BD1     		bne	.L958
 24787              	.L957:
3527:..\src/command_processing.c ****             g_refNew[1].pos = g_meas[g_mem.motor[1].encoder_line].pos[0];
 24788              		.loc 1 3527 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 542


 24789 006e 104B     		ldr	r3, .L960+4
 24790 0070 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 24791 0074 1946     		mov	r1, r3
 24792 0076 0F4A     		ldr	r2, .L960+8
 24793 0078 3423     		movs	r3, #52
 24794 007a 03FB01F3 		mul	r3, r3, r1
 24795 007e 1344     		add	r3, r3, r2
 24796 0080 1B68     		ldr	r3, [r3]
 24797 0082 0D4A     		ldr	r2, .L960+12
 24798 0084 1361     		str	r3, [r2, #16]
 24799              	.L958:
3528:..\src/command_processing.c ****         }
3529:..\src/command_processing.c ****         g_refNew[1].onoff = ((aux >> 1) & 0x01);
 24800              		.loc 1 3529 0
 24801 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24802 0088 5B08     		lsrs	r3, r3, #1
 24803 008a DBB2     		uxtb	r3, r3
 24804 008c 03F00103 		and	r3, r3, #1
 24805 0090 DAB2     		uxtb	r2, r3
 24806 0092 094B     		ldr	r3, .L960+12
 24807 0094 1A77     		strb	r2, [r3, #28]
3530:..\src/command_processing.c ****         enable_motor(1, g_refNew[1].onoff); 
 24808              		.loc 1 3530 0
 24809 0096 084B     		ldr	r3, .L960+12
 24810 0098 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 24811 009a 1946     		mov	r1, r3
 24812 009c 0120     		movs	r0, #1
 24813 009e FFF7FEFF 		bl	enable_motor
 24814              	.L959:
3531:..\src/command_processing.c ****     }
3532:..\src/command_processing.c ****     
3533:..\src/command_processing.c **** }
 24815              		.loc 1 3533 0
 24816 00a2 00BF     		nop
 24817 00a4 0837     		adds	r7, r7, #8
 24818              		.cfi_def_cfa_offset 8
 24819 00a6 BD46     		mov	sp, r7
 24820              		.cfi_def_cfa_register 13
 24821              		@ sp needed
 24822 00a8 80BD     		pop	{r7, pc}
 24823              	.L961:
 24824 00aa 00BF     		.align	2
 24825              	.L960:
 24826 00ac 00000000 		.word	g_rx
 24827 00b0 00000000 		.word	g_mem
 24828 00b4 00000000 		.word	g_meas
 24829 00b8 00000000 		.word	g_refNew
 24830              		.cfi_endproc
 24831              	.LFE98:
 24832              		.size	cmd_activate, .-cmd_activate
 24833              		.section	.text.cmd_get_activate,"ax",%progbits
 24834              		.align	2
 24835              		.global	cmd_get_activate
 24836              		.thumb
 24837              		.thumb_func
 24838              		.type	cmd_get_activate, %function
 24839              	cmd_get_activate:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 543


 24840              	.LFB99:
3534:..\src/command_processing.c **** 
3535:..\src/command_processing.c **** void cmd_get_activate(){
 24841              		.loc 1 3535 0
 24842              		.cfi_startproc
 24843              		@ args = 0, pretend = 0, frame = 8
 24844              		@ frame_needed = 1, uses_anonymous_args = 0
 24845 0000 80B5     		push	{r7, lr}
 24846              		.cfi_def_cfa_offset 8
 24847              		.cfi_offset 7, -8
 24848              		.cfi_offset 14, -4
 24849 0002 82B0     		sub	sp, sp, #8
 24850              		.cfi_def_cfa_offset 16
 24851 0004 00AF     		add	r7, sp, #0
 24852              		.cfi_def_cfa_register 7
3536:..\src/command_processing.c ****     
3537:..\src/command_processing.c ****     uint8 packet_data[3];
3538:..\src/command_processing.c **** 
3539:..\src/command_processing.c ****     // Header        
3540:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACTIVATE;
 24853              		.loc 1 3540 0
 24854 0006 8123     		movs	r3, #129
 24855 0008 3B71     		strb	r3, [r7, #4]
3541:..\src/command_processing.c ****     
3542:..\src/command_processing.c ****     // Fill payload
3543:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 24856              		.loc 1 3543 0
 24857 000a 124B     		ldr	r3, .L965
 24858 000c 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24859 0010 012B     		cmp	r3, #1
 24860 0012 0BD1     		bne	.L963
3544:..\src/command_processing.c ****         packet_data[1] = ((g_ref[1].onoff << 1) | g_ref[0].onoff);
 24861              		.loc 1 3544 0
 24862 0014 104B     		ldr	r3, .L965+4
 24863 0016 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 24864 0018 5B00     		lsls	r3, r3, #1
 24865 001a 5AB2     		sxtb	r2, r3
 24866 001c 0E4B     		ldr	r3, .L965+4
 24867 001e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 24868 0020 5BB2     		sxtb	r3, r3
 24869 0022 1343     		orrs	r3, r3, r2
 24870 0024 5BB2     		sxtb	r3, r3
 24871 0026 DBB2     		uxtb	r3, r3
 24872 0028 7B71     		strb	r3, [r7, #5]
 24873 002a 02E0     		b	.L964
 24874              	.L963:
3545:..\src/command_processing.c ****     } 
3546:..\src/command_processing.c ****     else {
3547:..\src/command_processing.c ****         packet_data[1] = g_ref[0].onoff;
 24875              		.loc 1 3547 0
 24876 002c 0A4B     		ldr	r3, .L965+4
 24877 002e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 24878 0030 7B71     		strb	r3, [r7, #5]
 24879              	.L964:
3548:..\src/command_processing.c ****     }
3549:..\src/command_processing.c ****     
3550:..\src/command_processing.c ****     // Calculate checksum
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 544


3551:..\src/command_processing.c ****     packet_data[2] = LCRChecksum(packet_data, 2);
 24880              		.loc 1 3551 0
 24881 0032 3B1D     		adds	r3, r7, #4
 24882 0034 0221     		movs	r1, #2
 24883 0036 1846     		mov	r0, r3
 24884 0038 FFF7FEFF 		bl	LCRChecksum
 24885 003c 0346     		mov	r3, r0
 24886 003e BB71     		strb	r3, [r7, #6]
3552:..\src/command_processing.c ****     
3553:..\src/command_processing.c ****     // Send package to UART
3554:..\src/command_processing.c ****     commWrite(packet_data, 3);
 24887              		.loc 1 3554 0
 24888 0040 3B1D     		adds	r3, r7, #4
 24889 0042 0321     		movs	r1, #3
 24890 0044 1846     		mov	r0, r3
 24891 0046 FFF7FEFF 		bl	commWrite
3555:..\src/command_processing.c **** 
3556:..\src/command_processing.c **** }
 24892              		.loc 1 3556 0
 24893 004a 00BF     		nop
 24894 004c 0837     		adds	r7, r7, #8
 24895              		.cfi_def_cfa_offset 8
 24896 004e BD46     		mov	sp, r7
 24897              		.cfi_def_cfa_register 13
 24898              		@ sp needed
 24899 0050 80BD     		pop	{r7, pc}
 24900              	.L966:
 24901 0052 00BF     		.align	2
 24902              	.L965:
 24903 0054 00000000 		.word	g_mem
 24904 0058 00000000 		.word	g_ref
 24905              		.cfi_endproc
 24906              	.LFE99:
 24907              		.size	cmd_get_activate, .-cmd_get_activate
 24908              		.section	.text.cmd_get_curr_and_meas,"ax",%progbits
 24909              		.align	2
 24910              		.global	cmd_get_curr_and_meas
 24911              		.thumb
 24912              		.thumb_func
 24913              		.type	cmd_get_curr_and_meas, %function
 24914              	cmd_get_curr_and_meas:
 24915              	.LFB100:
3557:..\src/command_processing.c **** 
3558:..\src/command_processing.c **** void cmd_get_curr_and_meas(){
 24916              		.loc 1 3558 0
 24917              		.cfi_startproc
 24918              		@ args = 0, pretend = 0, frame = 16
 24919              		@ frame_needed = 1, uses_anonymous_args = 0
 24920 0000 90B5     		push	{r4, r7, lr}
 24921              		.cfi_def_cfa_offset 12
 24922              		.cfi_offset 4, -12
 24923              		.cfi_offset 7, -8
 24924              		.cfi_offset 14, -4
 24925 0002 85B0     		sub	sp, sp, #20
 24926              		.cfi_def_cfa_offset 32
 24927 0004 00AF     		add	r7, sp, #0
 24928              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 545


3559:..\src/command_processing.c ****     
3560:..\src/command_processing.c ****     uint8 CYDATA index;
3561:..\src/command_processing.c ****     int16 aux_int16;
3562:..\src/command_processing.c ****    
3563:..\src/command_processing.c ****     //Packet: header + curr_meas(int16) + pos_meas(int16) + CRC
3564:..\src/command_processing.c ****     
3565:..\src/command_processing.c ****     uint8 packet_data[12]; 
3566:..\src/command_processing.c **** 
3567:..\src/command_processing.c ****     //Header package
3568:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_AND_MEAS;
 24929              		.loc 1 3568 0
 24930 0006 8623     		movs	r3, #134
 24931 0008 3B70     		strb	r3, [r7]
3569:..\src/command_processing.c **** 
3570:..\src/command_processing.c ****     // Currents
3571:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current motor1
 24932              		.loc 1 3571 0
 24933 000a 484B     		ldr	r3, .L972
 24934 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24935 0010 1946     		mov	r1, r3
 24936 0012 474A     		ldr	r2, .L972+4
 24937 0014 3423     		movs	r3, #52
 24938 0016 03FB01F3 		mul	r3, r3, r1
 24939 001a 1344     		add	r3, r3, r2
 24940 001c 0C33     		adds	r3, r3, #12
 24941 001e 1B68     		ldr	r3, [r3]
 24942 0020 1BB2     		sxth	r3, r3
 24943 0022 BB81     		strh	r3, [r7, #12]	@ movhi
3572:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 24944              		.loc 1 3572 0
 24945 0024 07F10C03 		add	r3, r7, #12
 24946 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24947 002a BB70     		strb	r3, [r7, #2]
3573:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 24948              		.loc 1 3573 0
 24949 002c 07F10C03 		add	r3, r7, #12
 24950 0030 0133     		adds	r3, r3, #1
 24951 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24952 0034 7B70     		strb	r3, [r7, #1]
3574:..\src/command_processing.c ****     
3575:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 24953              		.loc 1 3575 0
 24954 0036 3F4B     		ldr	r3, .L972+8
 24955 0038 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24956 003c 012B     		cmp	r3, #1
 24957 003e 0DD1     		bne	.L968
3576:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 24958              		.loc 1 3576 0
 24959 0040 3A4B     		ldr	r3, .L972
 24960 0042 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 24961 0046 1946     		mov	r1, r3
 24962 0048 394A     		ldr	r2, .L972+4
 24963 004a 3423     		movs	r3, #52
 24964 004c 03FB01F3 		mul	r3, r3, r1
 24965 0050 1344     		add	r3, r3, r2
 24966 0052 0C33     		adds	r3, r3, #12
 24967 0054 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 546


 24968 0056 1BB2     		sxth	r3, r3
 24969 0058 BB81     		strh	r3, [r7, #12]	@ movhi
 24970 005a 0CE0     		b	.L969
 24971              	.L968:
3577:..\src/command_processing.c ****     }
3578:..\src/command_processing.c ****     else {
3579:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 24972              		.loc 1 3579 0
 24973 005c 334B     		ldr	r3, .L972
 24974 005e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24975 0062 1946     		mov	r1, r3
 24976 0064 324A     		ldr	r2, .L972+4
 24977 0066 3423     		movs	r3, #52
 24978 0068 03FB01F3 		mul	r3, r3, r1
 24979 006c 1344     		add	r3, r3, r2
 24980 006e 1033     		adds	r3, r3, #16
 24981 0070 1B68     		ldr	r3, [r3]
 24982 0072 1BB2     		sxth	r3, r3
 24983 0074 BB81     		strh	r3, [r7, #12]	@ movhi
 24984              	.L969:
3580:..\src/command_processing.c ****     }
3581:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 24985              		.loc 1 3581 0
 24986 0076 07F10C03 		add	r3, r7, #12
 24987 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24988 007c 3B71     		strb	r3, [r7, #4]
3582:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 24989              		.loc 1 3582 0
 24990 007e 07F10C03 		add	r3, r7, #12
 24991 0082 0133     		adds	r3, r3, #1
 24992 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24993 0086 FB70     		strb	r3, [r7, #3]
3583:..\src/command_processing.c **** 
3584:..\src/command_processing.c ****     // Positions
3585:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 24994              		.loc 1 3585 0
 24995 0088 0323     		movs	r3, #3
 24996 008a FB73     		strb	r3, [r7, #15]
 24997 008c 38E0     		b	.L970
 24998              	.L971:
3586:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 24999              		.loc 1 3586 0
 25000 008e 274B     		ldr	r3, .L972
 25001 0090 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25002 0094 1A46     		mov	r2, r3
 25003 0096 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 25004 0098 2548     		ldr	r0, .L972+4
 25005 009a 1346     		mov	r3, r2
 25006 009c 5B00     		lsls	r3, r3, #1
 25007 009e 1344     		add	r3, r3, r2
 25008 00a0 9B00     		lsls	r3, r3, #2
 25009 00a2 1344     		add	r3, r3, r2
 25010 00a4 0B44     		add	r3, r3, r1
 25011 00a6 50F82320 		ldr	r2, [r0, r3, lsl #2]
 25012 00aa 204B     		ldr	r3, .L972
 25013 00ac 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25014 00b0 1C46     		mov	r4, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 547


 25015 00b2 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 25016 00b4 1D48     		ldr	r0, .L972
 25017 00b6 2346     		mov	r3, r4
 25018 00b8 5B00     		lsls	r3, r3, #1
 25019 00ba 2344     		add	r3, r3, r4
 25020 00bc 1B01     		lsls	r3, r3, #4
 25021 00be 0344     		add	r3, r3, r0
 25022 00c0 0B44     		add	r3, r3, r1
 25023 00c2 03F29513 		addw	r3, r3, #405
 25024 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25025 00c8 42FA03F3 		asr	r3, r2, r3
 25026 00cc 1BB2     		sxth	r3, r3
 25027 00ce BB81     		strh	r3, [r7, #12]	@ movhi
3587:..\src/command_processing.c ****         packet_data[(index << 1) + 6] = ((char*)(&aux_int16))[0];
 25028              		.loc 1 3587 0
 25029 00d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25030 00d2 5B00     		lsls	r3, r3, #1
 25031 00d4 0633     		adds	r3, r3, #6
 25032 00d6 07F10C02 		add	r2, r7, #12
 25033 00da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 25034 00dc 07F11001 		add	r1, r7, #16
 25035 00e0 0B44     		add	r3, r3, r1
 25036 00e2 03F8102C 		strb	r2, [r3, #-16]
3588:..\src/command_processing.c ****         packet_data[(index << 1) + 5] = ((char*)(&aux_int16))[1];
 25037              		.loc 1 3588 0
 25038 00e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25039 00e8 5B00     		lsls	r3, r3, #1
 25040 00ea 5A1D     		adds	r2, r3, #5
 25041 00ec 07F10C03 		add	r3, r7, #12
 25042 00f0 0133     		adds	r3, r3, #1
 25043 00f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25044 00f4 07F11003 		add	r3, r7, #16
 25045 00f8 1344     		add	r3, r3, r2
 25046 00fa 0A46     		mov	r2, r1
 25047 00fc 03F8102C 		strb	r2, [r3, #-16]
 25048              	.L970:
3585:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 25049              		.loc 1 3585 0 discriminator 1
 25050 0100 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25051 0102 5A1E     		subs	r2, r3, #1
 25052 0104 FA73     		strb	r2, [r7, #15]
 25053 0106 002B     		cmp	r3, #0
 25054 0108 C1D1     		bne	.L971
3589:..\src/command_processing.c ****     }
3590:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3591:..\src/command_processing.c ****         
3592:..\src/command_processing.c ****     packet_data[11] = LCRChecksum (packet_data, 11);
 25055              		.loc 1 3592 0
 25056 010a 3B46     		mov	r3, r7
 25057 010c 0B21     		movs	r1, #11
 25058 010e 1846     		mov	r0, r3
 25059 0110 FFF7FEFF 		bl	LCRChecksum
 25060 0114 0346     		mov	r3, r0
 25061 0116 FB72     		strb	r3, [r7, #11]
3593:..\src/command_processing.c ****     commWrite(packet_data, 12);
 25062              		.loc 1 3593 0
 25063 0118 3B46     		mov	r3, r7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 548


 25064 011a 0C21     		movs	r1, #12
 25065 011c 1846     		mov	r0, r3
 25066 011e FFF7FEFF 		bl	commWrite
3594:..\src/command_processing.c ****    
3595:..\src/command_processing.c **** }
 25067              		.loc 1 3595 0
 25068 0122 00BF     		nop
 25069 0124 1437     		adds	r7, r7, #20
 25070              		.cfi_def_cfa_offset 12
 25071 0126 BD46     		mov	sp, r7
 25072              		.cfi_def_cfa_register 13
 25073              		@ sp needed
 25074 0128 90BD     		pop	{r4, r7, pc}
 25075              	.L973:
 25076 012a 00BF     		.align	2
 25077              	.L972:
 25078 012c 00000000 		.word	g_mem
 25079 0130 00000000 		.word	g_measOld
 25080 0134 00000000 		.word	c_mem
 25081              		.cfi_endproc
 25082              	.LFE100:
 25083              		.size	cmd_get_curr_and_meas, .-cmd_get_curr_and_meas
 25084              		.global	__aeabi_dmul
 25085              		.global	__aeabi_d2iz
 25086              		.section	.text.cmd_get_currents,"ax",%progbits
 25087              		.align	2
 25088              		.global	cmd_get_currents
 25089              		.thumb
 25090              		.thumb_func
 25091              		.type	cmd_get_currents, %function
 25092              	cmd_get_currents:
 25093              	.LFB101:
3596:..\src/command_processing.c **** 
3597:..\src/command_processing.c **** void cmd_get_currents(){
 25094              		.loc 1 3597 0
 25095              		.cfi_startproc
 25096              		@ args = 0, pretend = 0, frame = 16
 25097              		@ frame_needed = 1, uses_anonymous_args = 0
 25098 0000 90B5     		push	{r4, r7, lr}
 25099              		.cfi_def_cfa_offset 12
 25100              		.cfi_offset 4, -12
 25101              		.cfi_offset 7, -8
 25102              		.cfi_offset 14, -4
 25103 0002 85B0     		sub	sp, sp, #20
 25104              		.cfi_def_cfa_offset 32
 25105 0004 00AF     		add	r7, sp, #0
 25106              		.cfi_def_cfa_register 7
3598:..\src/command_processing.c ****     
3599:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3600:..\src/command_processing.c ****     
3601:..\src/command_processing.c ****     uint8 packet_data[6]; 
3602:..\src/command_processing.c ****     int16 aux_int16;
3603:..\src/command_processing.c ****     
3604:..\src/command_processing.c ****     //Header package
3605:..\src/command_processing.c **** 
3606:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURRENTS;
 25107              		.loc 1 3606 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 549


 25108 0006 8523     		movs	r3, #133
 25109 0008 3B72     		strb	r3, [r7, #8]
3607:..\src/command_processing.c **** 
3608:..\src/command_processing.c ****     if (c_mem.dev.dev_type != AIR_CHAMBERS_FB){
 25110              		.loc 1 3608 0
 25111 000a 334B     		ldr	r3, .L979
 25112 000c 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 25113 0010 022B     		cmp	r3, #2
 25114 0012 0DD0     		beq	.L975
3609:..\src/command_processing.c ****         // Currents
3610:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current
 25115              		.loc 1 3610 0
 25116 0014 314B     		ldr	r3, .L979+4
 25117 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25118 001a 1946     		mov	r1, r3
 25119 001c 304A     		ldr	r2, .L979+8
 25120 001e 3423     		movs	r3, #52
 25121 0020 03FB01F3 		mul	r3, r3, r1
 25122 0024 1344     		add	r3, r3, r2
 25123 0026 0C33     		adds	r3, r3, #12
 25124 0028 1B68     		ldr	r3, [r3]
 25125 002a 1BB2     		sxth	r3, r3
 25126 002c FB80     		strh	r3, [r7, #6]	@ movhi
 25127 002e 12E0     		b	.L976
 25128              	.L975:
3611:..\src/command_processing.c ****     }
3612:..\src/command_processing.c ****     else {
3613:..\src/command_processing.c ****         // Send pressure times 100 here instead of current (Simulink use)
3614:..\src/command_processing.c ****         aux_int16 = (int16)(g_fb_meas.pressure*100.0); //Pressure
 25129              		.loc 1 3614 0
 25130 0030 2C4B     		ldr	r3, .L979+12
 25131 0032 1B68     		ldr	r3, [r3]	@ float
 25132 0034 1846     		mov	r0, r3
 25133 0036 FFF7FEFF 		bl	__aeabi_f2d
 25134 003a 4FF00002 		mov	r2, #0
 25135 003e 2A4B     		ldr	r3, .L979+16
 25136 0040 FFF7FEFF 		bl	__aeabi_dmul
 25137 0044 0346     		mov	r3, r0
 25138 0046 0C46     		mov	r4, r1
 25139 0048 1846     		mov	r0, r3
 25140 004a 2146     		mov	r1, r4
 25141 004c FFF7FEFF 		bl	__aeabi_d2iz
 25142 0050 0346     		mov	r3, r0
 25143 0052 1BB2     		sxth	r3, r3
 25144 0054 FB80     		strh	r3, [r7, #6]	@ movhi
 25145              	.L976:
3615:..\src/command_processing.c ****     }
3616:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 25146              		.loc 1 3616 0
 25147 0056 BB1D     		adds	r3, r7, #6
 25148 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25149 005a BB72     		strb	r3, [r7, #10]
3617:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 25150              		.loc 1 3617 0
 25151 005c BB1D     		adds	r3, r7, #6
 25152 005e 0133     		adds	r3, r3, #1
 25153 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 550


 25154 0062 7B72     		strb	r3, [r7, #9]
3618:..\src/command_processing.c ****     
3619:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 25155              		.loc 1 3619 0
 25156 0064 1C4B     		ldr	r3, .L979
 25157 0066 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 25158 006a 012B     		cmp	r3, #1
 25159 006c 0DD1     		bne	.L977
3620:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 25160              		.loc 1 3620 0
 25161 006e 1B4B     		ldr	r3, .L979+4
 25162 0070 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 25163 0074 1946     		mov	r1, r3
 25164 0076 1A4A     		ldr	r2, .L979+8
 25165 0078 3423     		movs	r3, #52
 25166 007a 03FB01F3 		mul	r3, r3, r1
 25167 007e 1344     		add	r3, r3, r2
 25168 0080 0C33     		adds	r3, r3, #12
 25169 0082 1B68     		ldr	r3, [r3]
 25170 0084 1BB2     		sxth	r3, r3
 25171 0086 FB80     		strh	r3, [r7, #6]	@ movhi
 25172 0088 0CE0     		b	.L978
 25173              	.L977:
3621:..\src/command_processing.c ****     }
3622:..\src/command_processing.c ****     else {
3623:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 25174              		.loc 1 3623 0
 25175 008a 144B     		ldr	r3, .L979+4
 25176 008c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25177 0090 1946     		mov	r1, r3
 25178 0092 134A     		ldr	r2, .L979+8
 25179 0094 3423     		movs	r3, #52
 25180 0096 03FB01F3 		mul	r3, r3, r1
 25181 009a 1344     		add	r3, r3, r2
 25182 009c 1033     		adds	r3, r3, #16
 25183 009e 1B68     		ldr	r3, [r3]
 25184 00a0 1BB2     		sxth	r3, r3
 25185 00a2 FB80     		strh	r3, [r7, #6]	@ movhi
 25186              	.L978:
3624:..\src/command_processing.c ****     }
3625:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 25187              		.loc 1 3625 0
 25188 00a4 BB1D     		adds	r3, r7, #6
 25189 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25190 00a8 3B73     		strb	r3, [r7, #12]
3626:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 25191              		.loc 1 3626 0
 25192 00aa BB1D     		adds	r3, r7, #6
 25193 00ac 0133     		adds	r3, r3, #1
 25194 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25195 00b0 FB72     		strb	r3, [r7, #11]
3627:..\src/command_processing.c **** 
3628:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3629:..\src/command_processing.c **** 
3630:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 25196              		.loc 1 3630 0
 25197 00b2 07F10803 		add	r3, r7, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 551


 25198 00b6 0521     		movs	r1, #5
 25199 00b8 1846     		mov	r0, r3
 25200 00ba FFF7FEFF 		bl	LCRChecksum
 25201 00be 0346     		mov	r3, r0
 25202 00c0 7B73     		strb	r3, [r7, #13]
3631:..\src/command_processing.c ****     
3632:..\src/command_processing.c ****     commWrite(packet_data, 6);
 25203              		.loc 1 3632 0
 25204 00c2 07F10803 		add	r3, r7, #8
 25205 00c6 0621     		movs	r1, #6
 25206 00c8 1846     		mov	r0, r3
 25207 00ca FFF7FEFF 		bl	commWrite
3633:..\src/command_processing.c **** }
 25208              		.loc 1 3633 0
 25209 00ce 00BF     		nop
 25210 00d0 1437     		adds	r7, r7, #20
 25211              		.cfi_def_cfa_offset 12
 25212 00d2 BD46     		mov	sp, r7
 25213              		.cfi_def_cfa_register 13
 25214              		@ sp needed
 25215 00d4 90BD     		pop	{r4, r7, pc}
 25216              	.L980:
 25217 00d6 00BF     		.align	2
 25218              	.L979:
 25219 00d8 00000000 		.word	c_mem
 25220 00dc 00000000 		.word	g_mem
 25221 00e0 00000000 		.word	g_measOld
 25222 00e4 00000000 		.word	g_fb_meas
 25223 00e8 00005940 		.word	1079574528
 25224              		.cfi_endproc
 25225              	.LFE101:
 25226              		.size	cmd_get_currents, .-cmd_get_currents
 25227              		.section	.text.cmd_get_currents_for_cuff,"ax",%progbits
 25228              		.align	2
 25229              		.global	cmd_get_currents_for_cuff
 25230              		.thumb
 25231              		.thumb_func
 25232              		.type	cmd_get_currents_for_cuff, %function
 25233              	cmd_get_currents_for_cuff:
 25234              	.LFB102:
3634:..\src/command_processing.c **** 
3635:..\src/command_processing.c **** void cmd_get_currents_for_cuff(){
 25235              		.loc 1 3635 0
 25236              		.cfi_startproc
 25237              		@ args = 0, pretend = 0, frame = 8
 25238              		@ frame_needed = 1, uses_anonymous_args = 0
 25239 0000 80B5     		push	{r7, lr}
 25240              		.cfi_def_cfa_offset 8
 25241              		.cfi_offset 7, -8
 25242              		.cfi_offset 14, -4
 25243 0002 82B0     		sub	sp, sp, #8
 25244              		.cfi_def_cfa_offset 16
 25245 0004 00AF     		add	r7, sp, #0
 25246              		.cfi_def_cfa_register 7
3636:..\src/command_processing.c ****     
3637:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3638:..\src/command_processing.c ****     
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 552


3639:..\src/command_processing.c ****     uint8 packet_data[4]; 
3640:..\src/command_processing.c ****     int16 aux_int16;
3641:..\src/command_processing.c ****     
3642:..\src/command_processing.c ****     //Header package
3643:..\src/command_processing.c **** 
3644:..\src/command_processing.c ****     packet_data[0] = CMD_SET_CUFF_INPUTS;
 25247              		.loc 1 3644 0
 25248 0006 8E23     		movs	r3, #142
 25249 0008 3B71     		strb	r3, [r7, #4]
3645:..\src/command_processing.c **** 
3646:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated Current
 25250              		.loc 1 3646 0
 25251 000a 144B     		ldr	r3, .L982
 25252 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25253 0010 1946     		mov	r1, r3
 25254 0012 134A     		ldr	r2, .L982+4
 25255 0014 3423     		movs	r3, #52
 25256 0016 03FB01F3 		mul	r3, r3, r1
 25257 001a 1344     		add	r3, r3, r2
 25258 001c 1033     		adds	r3, r3, #16
 25259 001e 1B68     		ldr	r3, [r3]
 25260 0020 1BB2     		sxth	r3, r3
 25261 0022 7B80     		strh	r3, [r7, #2]	@ movhi
3647:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 25262              		.loc 1 3647 0
 25263 0024 BB1C     		adds	r3, r7, #2
 25264 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25265 0028 BB71     		strb	r3, [r7, #6]
3648:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 25266              		.loc 1 3648 0
 25267 002a BB1C     		adds	r3, r7, #2
 25268 002c 0133     		adds	r3, r3, #1
 25269 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25270 0030 7B71     		strb	r3, [r7, #5]
3649:..\src/command_processing.c **** 
3650:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3651:..\src/command_processing.c **** 
3652:..\src/command_processing.c ****     packet_data[3] = LCRChecksum (packet_data, 3);
 25271              		.loc 1 3652 0
 25272 0032 3B1D     		adds	r3, r7, #4
 25273 0034 0321     		movs	r1, #3
 25274 0036 1846     		mov	r0, r3
 25275 0038 FFF7FEFF 		bl	LCRChecksum
 25276 003c 0346     		mov	r3, r0
 25277 003e FB71     		strb	r3, [r7, #7]
3653:..\src/command_processing.c ****     
3654:..\src/command_processing.c ****     commWriteID(packet_data, 4, g_mem.dev.id -1);
 25278              		.loc 1 3654 0
 25279 0040 064B     		ldr	r3, .L982
 25280 0042 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 25281 0046 013B     		subs	r3, r3, #1
 25282 0048 DAB2     		uxtb	r2, r3
 25283 004a 3B1D     		adds	r3, r7, #4
 25284 004c 0421     		movs	r1, #4
 25285 004e 1846     		mov	r0, r3
 25286 0050 FFF7FEFF 		bl	commWriteID
3655:..\src/command_processing.c **** }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 553


 25287              		.loc 1 3655 0
 25288 0054 00BF     		nop
 25289 0056 0837     		adds	r7, r7, #8
 25290              		.cfi_def_cfa_offset 8
 25291 0058 BD46     		mov	sp, r7
 25292              		.cfi_def_cfa_register 13
 25293              		@ sp needed
 25294 005a 80BD     		pop	{r7, pc}
 25295              	.L983:
 25296              		.align	2
 25297              	.L982:
 25298 005c 00000000 		.word	g_mem
 25299 0060 00000000 		.word	g_measOld
 25300              		.cfi_endproc
 25301              	.LFE102:
 25302              		.size	cmd_get_currents_for_cuff, .-cmd_get_currents_for_cuff
 25303              		.section	.text.commReadResCurrFromSH,"ax",%progbits
 25304              		.align	2
 25305              		.global	commReadResCurrFromSH
 25306              		.thumb
 25307              		.thumb_func
 25308              		.type	commReadResCurrFromSH, %function
 25309              	commReadResCurrFromSH:
 25310              	.LFB103:
3656:..\src/command_processing.c **** 
3657:..\src/command_processing.c **** //==============================================================================
3658:..\src/command_processing.c **** //                                  READ RESIDUAL CURRENT FUNCTION FROM SOFTHAND
3659:..\src/command_processing.c **** //==============================================================================
3660:..\src/command_processing.c **** 
3661:..\src/command_processing.c **** int16 commReadResCurrFromSH()
3662:..\src/command_processing.c **** {
 25311              		.loc 1 3662 0
 25312              		.cfi_startproc
 25313              		@ args = 0, pretend = 0, frame = 32
 25314              		@ frame_needed = 1, uses_anonymous_args = 0
 25315 0000 80B5     		push	{r7, lr}
 25316              		.cfi_def_cfa_offset 8
 25317              		.cfi_offset 7, -8
 25318              		.cfi_offset 14, -4
 25319 0002 88B0     		sub	sp, sp, #32
 25320              		.cfi_def_cfa_offset 40
 25321 0004 00AF     		add	r7, sp, #0
 25322              		.cfi_def_cfa_register 7
3663:..\src/command_processing.c ****     uint8 packet_data[16];
3664:..\src/command_processing.c ****     uint8 packet_lenght;
3665:..\src/command_processing.c ****     int16 curr_diff = 0;
 25323              		.loc 1 3665 0
 25324 0006 0023     		movs	r3, #0
 25325 0008 FB83     		strh	r3, [r7, #30]	@ movhi
3666:..\src/command_processing.c ****     uint32 t_start, t_end;
3667:..\src/command_processing.c ****     uint8 read_flag = TRUE;
 25326              		.loc 1 3667 0
 25327 000a 0123     		movs	r3, #1
 25328 000c 7B77     		strb	r3, [r7, #29]
3668:..\src/command_processing.c **** 
3669:..\src/command_processing.c ****     packet_lenght = 2;
 25329              		.loc 1 3669 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 554


 25330 000e 0223     		movs	r3, #2
 25331 0010 3B77     		strb	r3, [r7, #28]
3670:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_DIFF;
 25332              		.loc 1 3670 0
 25333 0012 8C23     		movs	r3, #140
 25334 0014 3B71     		strb	r3, [r7, #4]
3671:..\src/command_processing.c ****     packet_data[1] = CMD_GET_CURR_DIFF;
 25335              		.loc 1 3671 0
 25336 0016 8C23     		movs	r3, #140
 25337 0018 7B71     		strb	r3, [r7, #5]
3672:..\src/command_processing.c ****     commWriteID(packet_data, packet_lenght, c_mem.MS.slave_ID);
 25338              		.loc 1 3672 0
 25339 001a 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 25340 001c 99B2     		uxth	r1, r3
 25341 001e 1D4B     		ldr	r3, .L991
 25342 0020 93F8C122 		ldrb	r2, [r3, #705]	@ zero_extendqisi2
 25343 0024 3B1D     		adds	r3, r7, #4
 25344 0026 1846     		mov	r0, r3
 25345 0028 FFF7FEFF 		bl	commWriteID
3673:..\src/command_processing.c **** 
3674:..\src/command_processing.c ****     t_start = (uint32) MY_TIMER_ReadCounter();
 25346              		.loc 1 3674 0
 25347 002c FFF7FEFF 		bl	MY_TIMER_ReadCounter
 25348 0030 0346     		mov	r3, r0
 25349 0032 BB61     		str	r3, [r7, #24]
3675:..\src/command_processing.c ****     while(g_rx.buffer[0] != CMD_SET_CUFF_INPUTS) {
 25350              		.loc 1 3675 0
 25351 0034 18E0     		b	.L985
 25352              	.L988:
3676:..\src/command_processing.c ****         if (interrupt_flag){
 25353              		.loc 1 3676 0
 25354 0036 184B     		ldr	r3, .L991+4
 25355 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25356 003a 002B     		cmp	r3, #0
 25357 003c 04D0     		beq	.L986
3677:..\src/command_processing.c ****             interrupt_flag = FALSE;
 25358              		.loc 1 3677 0
 25359 003e 164B     		ldr	r3, .L991+4
 25360 0040 0022     		movs	r2, #0
 25361 0042 1A70     		strb	r2, [r3]
3678:..\src/command_processing.c ****             interrupt_manager();
 25362              		.loc 1 3678 0
 25363 0044 FFF7FEFF 		bl	interrupt_manager
 25364              	.L986:
3679:..\src/command_processing.c ****         }
3680:..\src/command_processing.c **** 
3681:..\src/command_processing.c ****         t_end = (uint32) MY_TIMER_ReadCounter();
 25365              		.loc 1 3681 0
 25366 0048 FFF7FEFF 		bl	MY_TIMER_ReadCounter
 25367 004c 0346     		mov	r3, r0
 25368 004e 7B61     		str	r3, [r7, #20]
3682:..\src/command_processing.c ****         if((t_start - t_end) > 4500000){            // 4.5 s timeout
 25369              		.loc 1 3682 0
 25370 0050 BA69     		ldr	r2, [r7, #24]
 25371 0052 7B69     		ldr	r3, [r7, #20]
 25372 0054 D31A     		subs	r3, r2, r3
 25373 0056 114A     		ldr	r2, .L991+8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 555


 25374 0058 9342     		cmp	r3, r2
 25375 005a 05D9     		bls	.L985
3683:..\src/command_processing.c ****             read_flag = FALSE;
 25376              		.loc 1 3683 0
 25377 005c 0023     		movs	r3, #0
 25378 005e 7B77     		strb	r3, [r7, #29]
3684:..\src/command_processing.c ****             master_mode = 0;                // Exit from master mode
 25379              		.loc 1 3684 0
 25380 0060 0F4B     		ldr	r3, .L991+12
 25381 0062 0022     		movs	r2, #0
 25382 0064 1A70     		strb	r2, [r3]
3685:..\src/command_processing.c ****             break;
 25383              		.loc 1 3685 0
 25384 0066 03E0     		b	.L987
 25385              	.L985:
3675:..\src/command_processing.c ****         if (interrupt_flag){
 25386              		.loc 1 3675 0
 25387 0068 0E4B     		ldr	r3, .L991+16
 25388 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25389 006c 8E2B     		cmp	r3, #142
 25390 006e E2D1     		bne	.L988
 25391              	.L987:
3686:..\src/command_processing.c ****         }
3687:..\src/command_processing.c ****     }
3688:..\src/command_processing.c **** 
3689:..\src/command_processing.c ****     if (read_flag) {
 25392              		.loc 1 3689 0
 25393 0070 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 25394 0072 002B     		cmp	r3, #0
 25395 0074 08D0     		beq	.L989
3690:..\src/command_processing.c ****         curr_diff = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);                        
 25396              		.loc 1 3690 0
 25397 0076 0B4B     		ldr	r3, .L991+16
 25398 0078 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 25399 007a 1B02     		lsls	r3, r3, #8
 25400 007c 1AB2     		sxth	r2, r3
 25401 007e 094B     		ldr	r3, .L991+16
 25402 0080 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 25403 0082 1BB2     		sxth	r3, r3
 25404 0084 1343     		orrs	r3, r3, r2
 25405 0086 FB83     		strh	r3, [r7, #30]	@ movhi
 25406              	.L989:
3691:..\src/command_processing.c ****     }
3692:..\src/command_processing.c ****     
3693:..\src/command_processing.c ****     return curr_diff;
 25407              		.loc 1 3693 0
 25408 0088 B7F91E30 		ldrsh	r3, [r7, #30]
3694:..\src/command_processing.c **** }
 25409              		.loc 1 3694 0
 25410 008c 1846     		mov	r0, r3
 25411 008e 2037     		adds	r7, r7, #32
 25412              		.cfi_def_cfa_offset 8
 25413 0090 BD46     		mov	sp, r7
 25414              		.cfi_def_cfa_register 13
 25415              		@ sp needed
 25416 0092 80BD     		pop	{r7, pc}
 25417              	.L992:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 556


 25418              		.align	2
 25419              	.L991:
 25420 0094 00000000 		.word	c_mem
 25421 0098 00000000 		.word	interrupt_flag
 25422 009c 20AA4400 		.word	4500000
 25423 00a0 00000000 		.word	master_mode
 25424 00a4 00000000 		.word	g_rx
 25425              		.cfi_endproc
 25426              	.LFE103:
 25427              		.size	commReadResCurrFromSH, .-commReadResCurrFromSH
 25428              		.section	.text.cmd_set_baudrate,"ax",%progbits
 25429              		.align	2
 25430              		.global	cmd_set_baudrate
 25431              		.thumb
 25432              		.thumb_func
 25433              		.type	cmd_set_baudrate, %function
 25434              	cmd_set_baudrate:
 25435              	.LFB104:
3695:..\src/command_processing.c **** 
3696:..\src/command_processing.c **** void cmd_set_baudrate(){
 25436              		.loc 1 3696 0
 25437              		.cfi_startproc
 25438              		@ args = 0, pretend = 0, frame = 0
 25439              		@ frame_needed = 1, uses_anonymous_args = 0
 25440 0000 80B5     		push	{r7, lr}
 25441              		.cfi_def_cfa_offset 8
 25442              		.cfi_offset 7, -8
 25443              		.cfi_offset 14, -4
 25444 0002 00AF     		add	r7, sp, #0
 25445              		.cfi_def_cfa_register 7
3697:..\src/command_processing.c ****     
3698:..\src/command_processing.c ****     // Set BaudRate
3699:..\src/command_processing.c ****     c_mem.dev.baud_rate = g_rx.buffer[1];
 25446              		.loc 1 3699 0
 25447 0004 094B     		ldr	r3, .L998
 25448 0006 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 25449 0008 094B     		ldr	r3, .L998+4
 25450 000a 83F8AA20 		strb	r2, [r3, #170]
3700:..\src/command_processing.c ****     
3701:..\src/command_processing.c ****     switch(g_rx.buffer[1]){
 25451              		.loc 1 3701 0
 25452 000e 074B     		ldr	r3, .L998
 25453 0010 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 25454 0012 0D2B     		cmp	r3, #13
 25455 0014 04D1     		bne	.L997
3702:..\src/command_processing.c ****         case 13:
3703:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(13);
 25456              		.loc 1 3703 0
 25457 0016 0121     		movs	r1, #1
 25458 0018 0C20     		movs	r0, #12
 25459 001a FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
3704:..\src/command_processing.c ****             break;
 25460              		.loc 1 3704 0
 25461 001e 03E0     		b	.L996
 25462              	.L997:
3705:..\src/command_processing.c ****         default:
3706:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(3);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 557


 25463              		.loc 1 3706 0
 25464 0020 0121     		movs	r1, #1
 25465 0022 0220     		movs	r0, #2
 25466 0024 FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
 25467              	.L996:
3707:..\src/command_processing.c ****     }
3708:..\src/command_processing.c **** }
 25468              		.loc 1 3708 0
 25469 0028 00BF     		nop
 25470 002a 80BD     		pop	{r7, pc}
 25471              	.L999:
 25472              		.align	2
 25473              	.L998:
 25474 002c 00000000 		.word	g_rx
 25475 0030 00000000 		.word	c_mem
 25476              		.cfi_endproc
 25477              	.LFE104:
 25478              		.size	cmd_set_baudrate, .-cmd_set_baudrate
 25479              		.section	.text.cmd_ping,"ax",%progbits
 25480              		.align	2
 25481              		.global	cmd_ping
 25482              		.thumb
 25483              		.thumb_func
 25484              		.type	cmd_ping, %function
 25485              	cmd_ping:
 25486              	.LFB105:
3709:..\src/command_processing.c **** 
3710:..\src/command_processing.c **** void cmd_ping(){
 25487              		.loc 1 3710 0
 25488              		.cfi_startproc
 25489              		@ args = 0, pretend = 0, frame = 8
 25490              		@ frame_needed = 1, uses_anonymous_args = 0
 25491 0000 80B5     		push	{r7, lr}
 25492              		.cfi_def_cfa_offset 8
 25493              		.cfi_offset 7, -8
 25494              		.cfi_offset 14, -4
 25495 0002 82B0     		sub	sp, sp, #8
 25496              		.cfi_def_cfa_offset 16
 25497 0004 00AF     		add	r7, sp, #0
 25498              		.cfi_def_cfa_register 7
3711:..\src/command_processing.c **** 
3712:..\src/command_processing.c ****     uint8 packet_data[2];
3713:..\src/command_processing.c **** 
3714:..\src/command_processing.c ****     // Header
3715:..\src/command_processing.c ****     packet_data[0] = CMD_PING;
 25499              		.loc 1 3715 0
 25500 0006 0023     		movs	r3, #0
 25501 0008 3B71     		strb	r3, [r7, #4]
3716:..\src/command_processing.c ****     
3717:..\src/command_processing.c ****     // Load Payload
3718:..\src/command_processing.c ****     packet_data[1] = CMD_PING;
 25502              		.loc 1 3718 0
 25503 000a 0023     		movs	r3, #0
 25504 000c 7B71     		strb	r3, [r7, #5]
3719:..\src/command_processing.c **** 
3720:..\src/command_processing.c ****     // Send Package to uart
3721:..\src/command_processing.c ****     commWrite(packet_data, 2);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 558


 25505              		.loc 1 3721 0
 25506 000e 3B1D     		adds	r3, r7, #4
 25507 0010 0221     		movs	r1, #2
 25508 0012 1846     		mov	r0, r3
 25509 0014 FFF7FEFF 		bl	commWrite
3722:..\src/command_processing.c **** }
 25510              		.loc 1 3722 0
 25511 0018 00BF     		nop
 25512 001a 0837     		adds	r7, r7, #8
 25513              		.cfi_def_cfa_offset 8
 25514 001c BD46     		mov	sp, r7
 25515              		.cfi_def_cfa_register 13
 25516              		@ sp needed
 25517 001e 80BD     		pop	{r7, pc}
 25518              		.cfi_endproc
 25519              	.LFE105:
 25520              		.size	cmd_ping, .-cmd_ping
 25521              		.section	.text.cmd_get_inputs,"ax",%progbits
 25522              		.align	2
 25523              		.global	cmd_get_inputs
 25524              		.thumb
 25525              		.thumb_func
 25526              		.type	cmd_get_inputs, %function
 25527              	cmd_get_inputs:
 25528              	.LFB106:
3723:..\src/command_processing.c **** 
3724:..\src/command_processing.c **** void cmd_get_inputs(){
 25529              		.loc 1 3724 0
 25530              		.cfi_startproc
 25531              		@ args = 0, pretend = 0, frame = 16
 25532              		@ frame_needed = 1, uses_anonymous_args = 0
 25533 0000 80B5     		push	{r7, lr}
 25534              		.cfi_def_cfa_offset 8
 25535              		.cfi_offset 7, -8
 25536              		.cfi_offset 14, -4
 25537 0002 84B0     		sub	sp, sp, #16
 25538              		.cfi_def_cfa_offset 24
 25539 0004 00AF     		add	r7, sp, #0
 25540              		.cfi_def_cfa_register 7
3725:..\src/command_processing.c **** 
3726:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3727:..\src/command_processing.c **** 
3728:..\src/command_processing.c ****     uint8 packet_data[6]; 
3729:..\src/command_processing.c ****     int16 aux_int16;
3730:..\src/command_processing.c ****     
3731:..\src/command_processing.c ****     //Header package
3732:..\src/command_processing.c **** 
3733:..\src/command_processing.c ****     packet_data[0] = CMD_GET_INPUTS;
 25541              		.loc 1 3733 0
 25542 0006 8323     		movs	r3, #131
 25543 0008 3B72     		strb	r3, [r7, #8]
3734:..\src/command_processing.c ****         
3735:..\src/command_processing.c ****     aux_int16 = (int16)(g_refOld[0].pos >> g_mem.enc[g_mem.motor[0].encoder_line].res[0]);
 25544              		.loc 1 3735 0
 25545 000a 234B     		ldr	r3, .L1002
 25546 000c 1A68     		ldr	r2, [r3]
 25547 000e 234B     		ldr	r3, .L1002+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 559


 25548 0010 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25549 0014 1846     		mov	r0, r3
 25550 0016 2149     		ldr	r1, .L1002+4
 25551 0018 0346     		mov	r3, r0
 25552 001a 5B00     		lsls	r3, r3, #1
 25553 001c 0344     		add	r3, r3, r0
 25554 001e 1B01     		lsls	r3, r3, #4
 25555 0020 0B44     		add	r3, r3, r1
 25556 0022 03F29513 		addw	r3, r3, #405
 25557 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25558 0028 42FA03F3 		asr	r3, r2, r3
 25559 002c 1BB2     		sxth	r3, r3
 25560 002e FB80     		strh	r3, [r7, #6]	@ movhi
3736:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 25561              		.loc 1 3736 0
 25562 0030 BB1D     		adds	r3, r7, #6
 25563 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25564 0034 BB72     		strb	r3, [r7, #10]
3737:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 25565              		.loc 1 3737 0
 25566 0036 BB1D     		adds	r3, r7, #6
 25567 0038 0133     		adds	r3, r3, #1
 25568 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25569 003c 7B72     		strb	r3, [r7, #9]
3738:..\src/command_processing.c ****     aux_int16 = (int16)(g_refOld[1].pos >> g_mem.enc[g_mem.motor[1].encoder_line].res[0]);
 25570              		.loc 1 3738 0
 25571 003e 164B     		ldr	r3, .L1002
 25572 0040 1A69     		ldr	r2, [r3, #16]
 25573 0042 164B     		ldr	r3, .L1002+4
 25574 0044 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 25575 0048 1846     		mov	r0, r3
 25576 004a 1449     		ldr	r1, .L1002+4
 25577 004c 0346     		mov	r3, r0
 25578 004e 5B00     		lsls	r3, r3, #1
 25579 0050 0344     		add	r3, r3, r0
 25580 0052 1B01     		lsls	r3, r3, #4
 25581 0054 0B44     		add	r3, r3, r1
 25582 0056 03F29513 		addw	r3, r3, #405
 25583 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25584 005c 42FA03F3 		asr	r3, r2, r3
 25585 0060 1BB2     		sxth	r3, r3
 25586 0062 FB80     		strh	r3, [r7, #6]	@ movhi
3739:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 25587              		.loc 1 3739 0
 25588 0064 BB1D     		adds	r3, r7, #6
 25589 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25590 0068 3B73     		strb	r3, [r7, #12]
3740:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 25591              		.loc 1 3740 0
 25592 006a BB1D     		adds	r3, r7, #6
 25593 006c 0133     		adds	r3, r3, #1
 25594 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25595 0070 FB72     		strb	r3, [r7, #11]
3741:..\src/command_processing.c ****     
3742:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3743:..\src/command_processing.c **** 
3744:..\src/command_processing.c ****     packet_data[5] = LCRChecksum(packet_data, 5);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 560


 25596              		.loc 1 3744 0
 25597 0072 07F10803 		add	r3, r7, #8
 25598 0076 0521     		movs	r1, #5
 25599 0078 1846     		mov	r0, r3
 25600 007a FFF7FEFF 		bl	LCRChecksum
 25601 007e 0346     		mov	r3, r0
 25602 0080 7B73     		strb	r3, [r7, #13]
3745:..\src/command_processing.c **** 
3746:..\src/command_processing.c ****     commWrite(packet_data, 6);
 25603              		.loc 1 3746 0
 25604 0082 07F10803 		add	r3, r7, #8
 25605 0086 0621     		movs	r1, #6
 25606 0088 1846     		mov	r0, r3
 25607 008a FFF7FEFF 		bl	commWrite
3747:..\src/command_processing.c **** }
 25608              		.loc 1 3747 0
 25609 008e 00BF     		nop
 25610 0090 1037     		adds	r7, r7, #16
 25611              		.cfi_def_cfa_offset 8
 25612 0092 BD46     		mov	sp, r7
 25613              		.cfi_def_cfa_register 13
 25614              		@ sp needed
 25615 0094 80BD     		pop	{r7, pc}
 25616              	.L1003:
 25617 0096 00BF     		.align	2
 25618              	.L1002:
 25619 0098 00000000 		.word	g_refOld
 25620 009c 00000000 		.word	g_mem
 25621              		.cfi_endproc
 25622              	.LFE106:
 25623              		.size	cmd_get_inputs, .-cmd_get_inputs
 25624              		.section	.text.cmd_store_params,"ax",%progbits
 25625              		.align	2
 25626              		.global	cmd_store_params
 25627              		.thumb
 25628              		.thumb_func
 25629              		.type	cmd_store_params, %function
 25630              	cmd_store_params:
 25631              	.LFB107:
3748:..\src/command_processing.c **** 
3749:..\src/command_processing.c **** void cmd_store_params(){
 25632              		.loc 1 3749 0
 25633              		.cfi_startproc
 25634              		@ args = 0, pretend = 0, frame = 16
 25635              		@ frame_needed = 1, uses_anonymous_args = 0
 25636 0000 80B5     		push	{r7, lr}
 25637              		.cfi_def_cfa_offset 8
 25638              		.cfi_offset 7, -8
 25639              		.cfi_offset 14, -4
 25640 0002 84B0     		sub	sp, sp, #16
 25641              		.cfi_def_cfa_offset 24
 25642 0004 00AF     		add	r7, sp, #0
 25643              		.cfi_def_cfa_register 7
3750:..\src/command_processing.c ****     
3751:..\src/command_processing.c ****     // Check input mode enabled
3752:..\src/command_processing.c ****     uint32 off_1;
3753:..\src/command_processing.c ****     float mult_1;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 561


3754:..\src/command_processing.c ****     uint8 CYDATA packet_lenght = 2;
 25644              		.loc 1 3754 0
 25645 0006 0223     		movs	r3, #2
 25646 0008 FB73     		strb	r3, [r7, #15]
3755:..\src/command_processing.c ****     uint8 CYDATA packet_data[2];
3756:..\src/command_processing.c ****     uint8 CYDATA old_id;
3757:..\src/command_processing.c ****     
3758:..\src/command_processing.c ****     if( c_mem.motor[0].input_mode == INPUT_MODE_EXTERNAL ) {
 25647              		.loc 1 3758 0
 25648 000a 674B     		ldr	r3, .L1015
 25649 000c 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 25650 0010 002B     		cmp	r3, #0
 25651 0012 7CD1     		bne	.L1005
3759:..\src/command_processing.c ****         off_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_off[0];
 25652              		.loc 1 3759 0
 25653 0014 644B     		ldr	r3, .L1015
 25654 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25655 001a 1946     		mov	r1, r3
 25656 001c 624A     		ldr	r2, .L1015
 25657 001e 0B46     		mov	r3, r1
 25658 0020 5B00     		lsls	r3, r3, #1
 25659 0022 0B44     		add	r3, r3, r1
 25660 0024 1B01     		lsls	r3, r3, #4
 25661 0026 1344     		add	r3, r3, r2
 25662 0028 03F5CC73 		add	r3, r3, #408
 25663 002c 1B68     		ldr	r3, [r3]
 25664 002e BB60     		str	r3, [r7, #8]
3760:..\src/command_processing.c ****         mult_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_mult[0];
 25665              		.loc 1 3760 0
 25666 0030 5D4B     		ldr	r3, .L1015
 25667 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25668 0036 1946     		mov	r1, r3
 25669 0038 5B4A     		ldr	r2, .L1015
 25670 003a 0B46     		mov	r3, r1
 25671 003c 5B00     		lsls	r3, r3, #1
 25672 003e 0B44     		add	r3, r3, r1
 25673 0040 1B01     		lsls	r3, r3, #4
 25674 0042 1344     		add	r3, r3, r2
 25675 0044 03F5D273 		add	r3, r3, #420
 25676 0048 1B68     		ldr	r3, [r3]	@ float
 25677 004a 7B60     		str	r3, [r7, #4]	@ float
3761:..\src/command_processing.c **** 
3762:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos / mult_1);
 25678              		.loc 1 3762 0
 25679 004c 574B     		ldr	r3, .L1015+4
 25680 004e 1B68     		ldr	r3, [r3]
 25681 0050 1846     		mov	r0, r3
 25682 0052 FFF7FEFF 		bl	__aeabi_i2f
 25683 0056 0346     		mov	r3, r0
 25684 0058 7968     		ldr	r1, [r7, #4]	@ float
 25685 005a 1846     		mov	r0, r3
 25686 005c FFF7FEFF 		bl	__aeabi_fdiv
 25687 0060 0346     		mov	r3, r0
 25688 0062 1846     		mov	r0, r3
 25689 0064 FFF7FEFF 		bl	__aeabi_f2iz
 25690 0068 0246     		mov	r2, r0
 25691 006a 504B     		ldr	r3, .L1015+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 562


 25692 006c 1A60     		str	r2, [r3]
3763:..\src/command_processing.c **** 
3764:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos * g_mem.enc[c_mem.motor[0].encoder_line].m
 25693              		.loc 1 3764 0
 25694 006e 4F4B     		ldr	r3, .L1015+4
 25695 0070 1B68     		ldr	r3, [r3]
 25696 0072 1846     		mov	r0, r3
 25697 0074 FFF7FEFF 		bl	__aeabi_i2f
 25698 0078 4B4B     		ldr	r3, .L1015
 25699 007a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25700 007e 1946     		mov	r1, r3
 25701 0080 4B4A     		ldr	r2, .L1015+8
 25702 0082 0B46     		mov	r3, r1
 25703 0084 5B00     		lsls	r3, r3, #1
 25704 0086 0B44     		add	r3, r3, r1
 25705 0088 1B01     		lsls	r3, r3, #4
 25706 008a 1344     		add	r3, r3, r2
 25707 008c 03F5D273 		add	r3, r3, #420
 25708 0090 1B68     		ldr	r3, [r3]	@ float
 25709 0092 1946     		mov	r1, r3
 25710 0094 FFF7FEFF 		bl	__aeabi_fmul
 25711 0098 0346     		mov	r3, r0
 25712 009a 1846     		mov	r0, r3
 25713 009c FFF7FEFF 		bl	__aeabi_f2iz
 25714 00a0 0246     		mov	r2, r0
 25715 00a2 424B     		ldr	r3, .L1015+4
 25716 00a4 1A60     		str	r2, [r3]
3765:..\src/command_processing.c **** 
3766:..\src/command_processing.c ****         g_refNew[0].pos += (g_mem.enc[c_mem.motor[0].encoder_line].m_off[0] - off_1);
 25717              		.loc 1 3766 0
 25718 00a6 414B     		ldr	r3, .L1015+4
 25719 00a8 1B68     		ldr	r3, [r3]
 25720 00aa 1846     		mov	r0, r3
 25721 00ac 3E4B     		ldr	r3, .L1015
 25722 00ae 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25723 00b2 1946     		mov	r1, r3
 25724 00b4 3E4A     		ldr	r2, .L1015+8
 25725 00b6 0B46     		mov	r3, r1
 25726 00b8 5B00     		lsls	r3, r3, #1
 25727 00ba 0B44     		add	r3, r3, r1
 25728 00bc 1B01     		lsls	r3, r3, #4
 25729 00be 1344     		add	r3, r3, r2
 25730 00c0 03F5CC73 		add	r3, r3, #408
 25731 00c4 1B68     		ldr	r3, [r3]
 25732 00c6 1A46     		mov	r2, r3
 25733 00c8 BB68     		ldr	r3, [r7, #8]
 25734 00ca D31A     		subs	r3, r2, r3
 25735 00cc 0344     		add	r3, r3, r0
 25736 00ce 1A46     		mov	r2, r3
 25737 00d0 364B     		ldr	r3, .L1015+4
 25738 00d2 1A60     		str	r2, [r3]
3767:..\src/command_processing.c ****         
3768:..\src/command_processing.c ****         // Check position Limits
3769:..\src/command_processing.c **** 
3770:..\src/command_processing.c ****         if (c_mem.motor[0].pos_lim_flag) {                   // position limiting
 25739              		.loc 1 3770 0
 25740 00d4 344B     		ldr	r3, .L1015
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 563


 25741 00d6 93F8E330 		ldrb	r3, [r3, #227]	@ zero_extendqisi2
 25742 00da 002B     		cmp	r3, #0
 25743 00dc 17D0     		beq	.L1005
3771:..\src/command_processing.c ****             if (g_refNew[0].pos < c_mem.motor[0].pos_lim_inf) 
 25744              		.loc 1 3771 0
 25745 00de 334B     		ldr	r3, .L1015+4
 25746 00e0 1A68     		ldr	r2, [r3]
 25747 00e2 314B     		ldr	r3, .L1015
 25748 00e4 D3F8E430 		ldr	r3, [r3, #228]
 25749 00e8 9A42     		cmp	r2, r3
 25750 00ea 04DA     		bge	.L1006
3772:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_inf;
 25751              		.loc 1 3772 0
 25752 00ec 2E4B     		ldr	r3, .L1015
 25753 00ee D3F8E430 		ldr	r3, [r3, #228]
 25754 00f2 2E4A     		ldr	r2, .L1015+4
 25755 00f4 1360     		str	r3, [r2]
 25756              	.L1006:
3773:..\src/command_processing.c **** 
3774:..\src/command_processing.c ****             if (g_refNew[0].pos > c_mem.motor[0].pos_lim_sup) 
 25757              		.loc 1 3774 0
 25758 00f6 2D4B     		ldr	r3, .L1015+4
 25759 00f8 1A68     		ldr	r2, [r3]
 25760 00fa 2B4B     		ldr	r3, .L1015
 25761 00fc D3F8E830 		ldr	r3, [r3, #232]
 25762 0100 9A42     		cmp	r2, r3
 25763 0102 04DD     		ble	.L1005
3775:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_sup;
 25764              		.loc 1 3775 0
 25765 0104 284B     		ldr	r3, .L1015
 25766 0106 D3F8E830 		ldr	r3, [r3, #232]
 25767 010a 284A     		ldr	r2, .L1015+4
 25768 010c 1360     		str	r3, [r2]
 25769              	.L1005:
3776:..\src/command_processing.c ****         }
3777:..\src/command_processing.c ****     }
3778:..\src/command_processing.c ****     
3779:..\src/command_processing.c ****     // If SD is used, create new param and data file
3780:..\src/command_processing.c ****     if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 25770              		.loc 1 3780 0
 25771 010e 264B     		ldr	r3, .L1015
 25772 0110 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 25773 0114 012B     		cmp	r3, #1
 25774 0116 06D1     		bne	.L1007
3781:..\src/command_processing.c ****         FS_FClose(pFile);
 25775              		.loc 1 3781 0
 25776 0118 264B     		ldr	r3, .L1015+12
 25777 011a 1B68     		ldr	r3, [r3]
 25778 011c 1846     		mov	r0, r3
 25779 011e FFF7FEFF 		bl	FS_FClose
3782:..\src/command_processing.c ****         
3783:..\src/command_processing.c ****         InitSD_FS();
 25780              		.loc 1 3783 0
 25781 0122 FFF7FEFF 		bl	InitSD_FS
 25782              	.L1007:
3784:..\src/command_processing.c ****     }
3785:..\src/command_processing.c ****    
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 564


3786:..\src/command_processing.c ****     // Store params 
3787:..\src/command_processing.c **** 
3788:..\src/command_processing.c ****     if (c_mem.dev.id != g_mem.dev.id) {     //If a new id is going to be set we will lose communica
 25783              		.loc 1 3788 0
 25784 0126 204B     		ldr	r3, .L1015
 25785 0128 93F8A020 		ldrb	r2, [r3, #160]	@ zero_extendqisi2
 25786 012c 204B     		ldr	r3, .L1015+8
 25787 012e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 25788 0132 9A42     		cmp	r2, r3
 25789 0134 21D0     		beq	.L1008
3789:..\src/command_processing.c ****         old_id = c_mem.dev.id;          //after the memstore(0) and the ACK won't be recognised
 25790              		.loc 1 3789 0
 25791 0136 1C4B     		ldr	r3, .L1015
 25792 0138 93F8A030 		ldrb	r3, [r3, #160]
 25793 013c FB70     		strb	r3, [r7, #3]
3790:..\src/command_processing.c ****         if(memStore(0)) {
 25794              		.loc 1 3790 0
 25795 013e 0020     		movs	r0, #0
 25796 0140 FFF7FEFF 		bl	memStore
 25797 0144 0346     		mov	r3, r0
 25798 0146 002B     		cmp	r3, #0
 25799 0148 0BD0     		beq	.L1009
3791:..\src/command_processing.c ****             packet_data[0] = ACK_OK;
 25800              		.loc 1 3791 0
 25801 014a 0123     		movs	r3, #1
 25802 014c 3B70     		strb	r3, [r7]
3792:..\src/command_processing.c ****             packet_data[1] = ACK_OK;
 25803              		.loc 1 3792 0
 25804 014e 0123     		movs	r3, #1
 25805 0150 7B70     		strb	r3, [r7, #1]
3793:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 25806              		.loc 1 3793 0
 25807 0152 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25808 0154 99B2     		uxth	r1, r3
 25809 0156 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 25810 0158 3B46     		mov	r3, r7
 25811 015a 1846     		mov	r0, r3
 25812 015c FFF7FEFF 		bl	commWrite_old_id
 25813 0160 18E0     		b	.L1011
 25814              	.L1009:
3794:..\src/command_processing.c ****         }    
3795:..\src/command_processing.c ****         else{
3796:..\src/command_processing.c ****             packet_data[0] = ACK_ERROR;
 25815              		.loc 1 3796 0
 25816 0162 0023     		movs	r3, #0
 25817 0164 3B70     		strb	r3, [r7]
3797:..\src/command_processing.c ****             packet_data[1] = ACK_ERROR;
 25818              		.loc 1 3797 0
 25819 0166 0023     		movs	r3, #0
 25820 0168 7B70     		strb	r3, [r7, #1]
3798:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 25821              		.loc 1 3798 0
 25822 016a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25823 016c 99B2     		uxth	r1, r3
 25824 016e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 25825 0170 3B46     		mov	r3, r7
 25826 0172 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 565


 25827 0174 FFF7FEFF 		bl	commWrite_old_id
 25828 0178 0CE0     		b	.L1011
 25829              	.L1008:
3799:..\src/command_processing.c ****         }
3800:..\src/command_processing.c ****     }    
3801:..\src/command_processing.c ****     else {
3802:..\src/command_processing.c ****         if(memStore(0))
 25830              		.loc 1 3802 0
 25831 017a 0020     		movs	r0, #0
 25832 017c FFF7FEFF 		bl	memStore
 25833 0180 0346     		mov	r3, r0
 25834 0182 002B     		cmp	r3, #0
 25835 0184 03D0     		beq	.L1012
3803:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 25836              		.loc 1 3803 0
 25837 0186 0120     		movs	r0, #1
 25838 0188 FFF7FEFF 		bl	sendAcknowledgment
 25839 018c 02E0     		b	.L1011
 25840              	.L1012:
3804:..\src/command_processing.c ****         else
3805:..\src/command_processing.c ****             sendAcknowledgment(ACK_ERROR);
 25841              		.loc 1 3805 0
 25842 018e 0020     		movs	r0, #0
 25843 0190 FFF7FEFF 		bl	sendAcknowledgment
 25844              	.L1011:
3806:..\src/command_processing.c ****     }
3807:..\src/command_processing.c ****     
3808:..\src/command_processing.c ****     // FW reset (if necessary)
3809:..\src/command_processing.c ****     if (reset_PSoC_flag == TRUE) {
 25845              		.loc 1 3809 0
 25846 0194 084B     		ldr	r3, .L1015+16
 25847 0196 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25848 0198 012B     		cmp	r3, #1
 25849 019a 01D1     		bne	.L1014
3810:..\src/command_processing.c ****         CySoftwareReset();
 25850              		.loc 1 3810 0
 25851 019c FFF7FEFF 		bl	CySoftwareReset
 25852              	.L1014:
3811:..\src/command_processing.c ****     }
3812:..\src/command_processing.c **** }
 25853              		.loc 1 3812 0
 25854 01a0 00BF     		nop
 25855 01a2 1037     		adds	r7, r7, #16
 25856              		.cfi_def_cfa_offset 8
 25857 01a4 BD46     		mov	sp, r7
 25858              		.cfi_def_cfa_register 13
 25859              		@ sp needed
 25860 01a6 80BD     		pop	{r7, pc}
 25861              	.L1016:
 25862              		.align	2
 25863              	.L1015:
 25864 01a8 00000000 		.word	c_mem
 25865 01ac 00000000 		.word	g_refNew
 25866 01b0 00000000 		.word	g_mem
 25867 01b4 00000000 		.word	pFile
 25868 01b8 00000000 		.word	reset_PSoC_flag
 25869              		.cfi_endproc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 566


 25870              	.LFE107:
 25871              		.size	cmd_store_params, .-cmd_store_params
 25872              		.section	.text.cmd_get_emg,"ax",%progbits
 25873              		.align	2
 25874              		.global	cmd_get_emg
 25875              		.thumb
 25876              		.thumb_func
 25877              		.type	cmd_get_emg, %function
 25878              	cmd_get_emg:
 25879              	.LFB108:
3813:..\src/command_processing.c **** 
3814:..\src/command_processing.c **** void cmd_get_emg(){
 25880              		.loc 1 3814 0
 25881              		.cfi_startproc
 25882              		@ args = 0, pretend = 0, frame = 16
 25883              		@ frame_needed = 1, uses_anonymous_args = 0
 25884 0000 80B5     		push	{r7, lr}
 25885              		.cfi_def_cfa_offset 8
 25886              		.cfi_offset 7, -8
 25887              		.cfi_offset 14, -4
 25888 0002 84B0     		sub	sp, sp, #16
 25889              		.cfi_def_cfa_offset 24
 25890 0004 00AF     		add	r7, sp, #0
 25891              		.cfi_def_cfa_register 7
3815:..\src/command_processing.c ****     
3816:..\src/command_processing.c ****     uint8 packet_data[6];
3817:..\src/command_processing.c ****     int16 aux_int16;
3818:..\src/command_processing.c ****     
3819:..\src/command_processing.c ****     // Header        
3820:..\src/command_processing.c ****     packet_data[0] = CMD_GET_EMG;
 25892              		.loc 1 3820 0
 25893 0006 8823     		movs	r3, #136
 25894 0008 3B72     		strb	r3, [r7, #8]
3821:..\src/command_processing.c ****     
3822:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.emg[0];
 25895              		.loc 1 3822 0
 25896 000a 144B     		ldr	r3, .L1018
 25897 000c 1B68     		ldr	r3, [r3]
 25898 000e 1BB2     		sxth	r3, r3
 25899 0010 FB80     		strh	r3, [r7, #6]	@ movhi
3823:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 25900              		.loc 1 3823 0
 25901 0012 BB1D     		adds	r3, r7, #6
 25902 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25903 0016 BB72     		strb	r3, [r7, #10]
3824:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 25904              		.loc 1 3824 0
 25905 0018 BB1D     		adds	r3, r7, #6
 25906 001a 0133     		adds	r3, r3, #1
 25907 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25908 001e 7B72     		strb	r3, [r7, #9]
3825:..\src/command_processing.c ****     
3826:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.emg[1];
 25909              		.loc 1 3826 0
 25910 0020 0E4B     		ldr	r3, .L1018
 25911 0022 5B68     		ldr	r3, [r3, #4]
 25912 0024 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 567


 25913 0026 FB80     		strh	r3, [r7, #6]	@ movhi
3827:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 25914              		.loc 1 3827 0
 25915 0028 BB1D     		adds	r3, r7, #6
 25916 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25917 002c 3B73     		strb	r3, [r7, #12]
3828:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 25918              		.loc 1 3828 0
 25919 002e BB1D     		adds	r3, r7, #6
 25920 0030 0133     		adds	r3, r3, #1
 25921 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25922 0034 FB72     		strb	r3, [r7, #11]
3829:..\src/command_processing.c **** 
3830:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 25923              		.loc 1 3830 0
 25924 0036 07F10803 		add	r3, r7, #8
 25925 003a 0521     		movs	r1, #5
 25926 003c 1846     		mov	r0, r3
 25927 003e FFF7FEFF 		bl	LCRChecksum
 25928 0042 0346     		mov	r3, r0
 25929 0044 7B73     		strb	r3, [r7, #13]
3831:..\src/command_processing.c **** 
3832:..\src/command_processing.c ****     commWrite(packet_data, 6);
 25930              		.loc 1 3832 0
 25931 0046 07F10803 		add	r3, r7, #8
 25932 004a 0621     		movs	r1, #6
 25933 004c 1846     		mov	r0, r3
 25934 004e FFF7FEFF 		bl	commWrite
3833:..\src/command_processing.c **** 
3834:..\src/command_processing.c **** }
 25935              		.loc 1 3834 0
 25936 0052 00BF     		nop
 25937 0054 1037     		adds	r7, r7, #16
 25938              		.cfi_def_cfa_offset 8
 25939 0056 BD46     		mov	sp, r7
 25940              		.cfi_def_cfa_register 13
 25941              		@ sp needed
 25942 0058 80BD     		pop	{r7, pc}
 25943              	.L1019:
 25944 005a 00BF     		.align	2
 25945              	.L1018:
 25946 005c 00000000 		.word	g_adc_measOld
 25947              		.cfi_endproc
 25948              	.LFE108:
 25949              		.size	cmd_get_emg, .-cmd_get_emg
 25950              		.section	.text.cmd_get_imu_readings,"ax",%progbits
 25951              		.align	2
 25952              		.global	cmd_get_imu_readings
 25953              		.thumb
 25954              		.thumb_func
 25955              		.type	cmd_get_imu_readings, %function
 25956              	cmd_get_imu_readings:
 25957              	.LFB109:
3835:..\src/command_processing.c **** 
3836:..\src/command_processing.c **** void cmd_get_imu_readings(){
 25958              		.loc 1 3836 0
 25959              		.cfi_startproc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 568


 25960              		@ args = 0, pretend = 0, frame = 400
 25961              		@ frame_needed = 1, uses_anonymous_args = 0
 25962 0000 90B5     		push	{r4, r7, lr}
 25963              		.cfi_def_cfa_offset 12
 25964              		.cfi_offset 4, -12
 25965              		.cfi_offset 7, -8
 25966              		.cfi_offset 14, -4
 25967 0002 E5B0     		sub	sp, sp, #404
 25968              		.cfi_def_cfa_offset 416
 25969 0004 00AF     		add	r7, sp, #0
 25970              		.cfi_def_cfa_register 7
3837:..\src/command_processing.c ****     //Retrieve accelerometers, gyroscopes, magnetometers, quaternions and temperatures readings
3838:..\src/command_processing.c ****     
3839:..\src/command_processing.c ****     uint8 k_imu;
3840:..\src/command_processing.c ****     uint16 c = 1;
 25971              		.loc 1 3840 0
 25972 0006 0123     		movs	r3, #1
 25973 0008 A7F88C31 		strh	r3, [r7, #396]	@ movhi
3841:..\src/command_processing.c ****     uint8 k = 0;
 25974              		.loc 1 3841 0
 25975 000c 0023     		movs	r3, #0
 25976 000e 87F88B31 		strb	r3, [r7, #395]
3842:..\src/command_processing.c ****     uint16 gl_c = 1;
 25977              		.loc 1 3842 0
 25978 0012 0123     		movs	r3, #1
 25979 0014 A7F88831 		strh	r3, [r7, #392]	@ movhi
3843:..\src/command_processing.c ****     int16 aux_int16;
3844:..\src/command_processing.c ****     float aux_float;
3845:..\src/command_processing.c ****     
3846:..\src/command_processing.c ****     // Packet: header + imu id(uint8) + imu flags(uint8) + crc  
3847:..\src/command_processing.c ****     uint8 packet_data[350];
3848:..\src/command_processing.c ****     uint8 single_packet[32];
3849:..\src/command_processing.c ****     
3850:..\src/command_processing.c ****     //Header package 
3851:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_READINGS;
 25980              		.loc 1 3851 0
 25981 0018 07F12003 		add	r3, r7, #32
 25982 001c A122     		movs	r2, #161
 25983 001e 1A70     		strb	r2, [r3]
3852:..\src/command_processing.c ****  
3853:..\src/command_processing.c ****     for (k_imu = 0; k_imu < N_IMU_Connected; k_imu++) 
 25984              		.loc 1 3853 0
 25985 0020 0023     		movs	r3, #0
 25986 0022 87F88F31 		strb	r3, [r7, #399]
 25987 0026 82E2     		b	.L1021
 25988              	.L1037:
3854:..\src/command_processing.c ****     {	
3855:..\src/command_processing.c ****             
3856:..\src/command_processing.c ****         single_packet[0] = (uint8) 0x3A; //':';
 25989              		.loc 1 3856 0
 25990 0028 3B46     		mov	r3, r7
 25991 002a 3A22     		movs	r2, #58
 25992 002c 1A70     		strb	r2, [r3]
3857:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][0]){
 25993              		.loc 1 3857 0
 25994 002e 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 25995 0032 DB4A     		ldr	r2, .L1038
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 569


 25996 0034 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 25997 0036 1946     		mov	r1, r3
 25998 0038 DA4A     		ldr	r2, .L1038+4
 25999 003a 0B46     		mov	r3, r1
 26000 003c 9B00     		lsls	r3, r3, #2
 26001 003e 0B44     		add	r3, r3, r1
 26002 0040 1344     		add	r3, r3, r2
 26003 0042 03F20223 		addw	r3, r3, #514
 26004 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26005 0048 002B     		cmp	r3, #0
 26006 004a 5DD0     		beq	.L1022
3858:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[0];
 26007              		.loc 1 3858 0
 26008 004c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26009 0050 D549     		ldr	r1, .L1038+8
 26010 0052 1346     		mov	r3, r2
 26011 0054 9B00     		lsls	r3, r3, #2
 26012 0056 1344     		add	r3, r3, r2
 26013 0058 DB00     		lsls	r3, r3, #3
 26014 005a 0B44     		add	r3, r3, r1
 26015 005c 0233     		adds	r3, r3, #2
 26016 005e B3F90030 		ldrsh	r3, [r3]
 26017 0062 A7F88631 		strh	r3, [r7, #390]	@ movhi
3859:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 26018              		.loc 1 3859 0
 26019 0066 B7F88C31 		ldrh	r3, [r7, #396]
 26020 006a 0133     		adds	r3, r3, #1
 26021 006c 07F5C372 		add	r2, r7, #390
 26022 0070 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26023 0072 3A46     		mov	r2, r7
 26024 0074 D154     		strb	r1, [r2, r3]
3860:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 26025              		.loc 1 3860 0
 26026 0076 B7F88C21 		ldrh	r2, [r7, #396]
 26027 007a 07F5C373 		add	r3, r7, #390
 26028 007e 0133     		adds	r3, r3, #1
 26029 0080 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26030 0082 3B46     		mov	r3, r7
 26031 0084 9954     		strb	r1, [r3, r2]
3861:..\src/command_processing.c **** 
3862:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[1];
 26032              		.loc 1 3862 0
 26033 0086 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26034 008a C749     		ldr	r1, .L1038+8
 26035 008c 1346     		mov	r3, r2
 26036 008e 9B00     		lsls	r3, r3, #2
 26037 0090 1344     		add	r3, r3, r2
 26038 0092 DB00     		lsls	r3, r3, #3
 26039 0094 0B44     		add	r3, r3, r1
 26040 0096 0433     		adds	r3, r3, #4
 26041 0098 B3F90030 		ldrsh	r3, [r3]
 26042 009c A7F88631 		strh	r3, [r7, #390]	@ movhi
3863:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 26043              		.loc 1 3863 0
 26044 00a0 B7F88C31 		ldrh	r3, [r7, #396]
 26045 00a4 0333     		adds	r3, r3, #3
 26046 00a6 07F5C372 		add	r2, r7, #390
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 570


 26047 00aa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26048 00ac 3A46     		mov	r2, r7
 26049 00ae D154     		strb	r1, [r2, r3]
3864:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 26050              		.loc 1 3864 0
 26051 00b0 B7F88C31 		ldrh	r3, [r7, #396]
 26052 00b4 9A1C     		adds	r2, r3, #2
 26053 00b6 07F5C373 		add	r3, r7, #390
 26054 00ba 0133     		adds	r3, r3, #1
 26055 00bc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26056 00be 3B46     		mov	r3, r7
 26057 00c0 9954     		strb	r1, [r3, r2]
3865:..\src/command_processing.c **** 
3866:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[2];
 26058              		.loc 1 3866 0
 26059 00c2 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26060 00c6 B849     		ldr	r1, .L1038+8
 26061 00c8 1346     		mov	r3, r2
 26062 00ca 9B00     		lsls	r3, r3, #2
 26063 00cc 1344     		add	r3, r3, r2
 26064 00ce DB00     		lsls	r3, r3, #3
 26065 00d0 0B44     		add	r3, r3, r1
 26066 00d2 0633     		adds	r3, r3, #6
 26067 00d4 B3F90030 		ldrsh	r3, [r3]
 26068 00d8 A7F88631 		strh	r3, [r7, #390]	@ movhi
3867:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 26069              		.loc 1 3867 0
 26070 00dc B7F88C31 		ldrh	r3, [r7, #396]
 26071 00e0 0533     		adds	r3, r3, #5
 26072 00e2 07F5C372 		add	r2, r7, #390
 26073 00e6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26074 00e8 3A46     		mov	r2, r7
 26075 00ea D154     		strb	r1, [r2, r3]
3868:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 26076              		.loc 1 3868 0
 26077 00ec B7F88C31 		ldrh	r3, [r7, #396]
 26078 00f0 1A1D     		adds	r2, r3, #4
 26079 00f2 07F5C373 		add	r3, r7, #390
 26080 00f6 0133     		adds	r3, r3, #1
 26081 00f8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26082 00fa 3B46     		mov	r3, r7
 26083 00fc 9954     		strb	r1, [r3, r2]
3869:..\src/command_processing.c **** 
3870:..\src/command_processing.c ****             c = c + 6;
 26084              		.loc 1 3870 0
 26085 00fe B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26086 0102 0633     		adds	r3, r3, #6
 26087 0104 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26088              	.L1022:
3871:..\src/command_processing.c ****         }
3872:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][1]){
 26089              		.loc 1 3872 0
 26090 0108 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26091 010c A44A     		ldr	r2, .L1038
 26092 010e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26093 0110 1946     		mov	r1, r3
 26094 0112 A44A     		ldr	r2, .L1038+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 571


 26095 0114 0B46     		mov	r3, r1
 26096 0116 9B00     		lsls	r3, r3, #2
 26097 0118 0B44     		add	r3, r3, r1
 26098 011a 1344     		add	r3, r3, r2
 26099 011c 03F20323 		addw	r3, r3, #515
 26100 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26101 0122 002B     		cmp	r3, #0
 26102 0124 5DD0     		beq	.L1023
3873:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[0];
 26103              		.loc 1 3873 0
 26104 0126 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26105 012a 9F49     		ldr	r1, .L1038+8
 26106 012c 1346     		mov	r3, r2
 26107 012e 9B00     		lsls	r3, r3, #2
 26108 0130 1344     		add	r3, r3, r2
 26109 0132 DB00     		lsls	r3, r3, #3
 26110 0134 0B44     		add	r3, r3, r1
 26111 0136 0833     		adds	r3, r3, #8
 26112 0138 B3F90030 		ldrsh	r3, [r3]
 26113 013c A7F88631 		strh	r3, [r7, #390]	@ movhi
3874:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 26114              		.loc 1 3874 0
 26115 0140 B7F88C31 		ldrh	r3, [r7, #396]
 26116 0144 0133     		adds	r3, r3, #1
 26117 0146 07F5C372 		add	r2, r7, #390
 26118 014a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26119 014c 3A46     		mov	r2, r7
 26120 014e D154     		strb	r1, [r2, r3]
3875:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 26121              		.loc 1 3875 0
 26122 0150 B7F88C21 		ldrh	r2, [r7, #396]
 26123 0154 07F5C373 		add	r3, r7, #390
 26124 0158 0133     		adds	r3, r3, #1
 26125 015a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26126 015c 3B46     		mov	r3, r7
 26127 015e 9954     		strb	r1, [r3, r2]
3876:..\src/command_processing.c **** 
3877:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[1];
 26128              		.loc 1 3877 0
 26129 0160 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26130 0164 9049     		ldr	r1, .L1038+8
 26131 0166 1346     		mov	r3, r2
 26132 0168 9B00     		lsls	r3, r3, #2
 26133 016a 1344     		add	r3, r3, r2
 26134 016c DB00     		lsls	r3, r3, #3
 26135 016e 0B44     		add	r3, r3, r1
 26136 0170 0A33     		adds	r3, r3, #10
 26137 0172 B3F90030 		ldrsh	r3, [r3]
 26138 0176 A7F88631 		strh	r3, [r7, #390]	@ movhi
3878:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 26139              		.loc 1 3878 0
 26140 017a B7F88C31 		ldrh	r3, [r7, #396]
 26141 017e 0333     		adds	r3, r3, #3
 26142 0180 07F5C372 		add	r2, r7, #390
 26143 0184 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26144 0186 3A46     		mov	r2, r7
 26145 0188 D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 572


3879:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 26146              		.loc 1 3879 0
 26147 018a B7F88C31 		ldrh	r3, [r7, #396]
 26148 018e 9A1C     		adds	r2, r3, #2
 26149 0190 07F5C373 		add	r3, r7, #390
 26150 0194 0133     		adds	r3, r3, #1
 26151 0196 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26152 0198 3B46     		mov	r3, r7
 26153 019a 9954     		strb	r1, [r3, r2]
3880:..\src/command_processing.c **** 
3881:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[2];
 26154              		.loc 1 3881 0
 26155 019c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26156 01a0 8149     		ldr	r1, .L1038+8
 26157 01a2 1346     		mov	r3, r2
 26158 01a4 9B00     		lsls	r3, r3, #2
 26159 01a6 1344     		add	r3, r3, r2
 26160 01a8 DB00     		lsls	r3, r3, #3
 26161 01aa 0B44     		add	r3, r3, r1
 26162 01ac 0C33     		adds	r3, r3, #12
 26163 01ae B3F90030 		ldrsh	r3, [r3]
 26164 01b2 A7F88631 		strh	r3, [r7, #390]	@ movhi
3882:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 26165              		.loc 1 3882 0
 26166 01b6 B7F88C31 		ldrh	r3, [r7, #396]
 26167 01ba 0533     		adds	r3, r3, #5
 26168 01bc 07F5C372 		add	r2, r7, #390
 26169 01c0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26170 01c2 3A46     		mov	r2, r7
 26171 01c4 D154     		strb	r1, [r2, r3]
3883:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 26172              		.loc 1 3883 0
 26173 01c6 B7F88C31 		ldrh	r3, [r7, #396]
 26174 01ca 1A1D     		adds	r2, r3, #4
 26175 01cc 07F5C373 		add	r3, r7, #390
 26176 01d0 0133     		adds	r3, r3, #1
 26177 01d2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26178 01d4 3B46     		mov	r3, r7
 26179 01d6 9954     		strb	r1, [r3, r2]
3884:..\src/command_processing.c **** 
3885:..\src/command_processing.c ****             c = c + 6;
 26180              		.loc 1 3885 0
 26181 01d8 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26182 01dc 0633     		adds	r3, r3, #6
 26183 01de A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26184              	.L1023:
3886:..\src/command_processing.c ****         }
3887:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][2]){
 26185              		.loc 1 3887 0
 26186 01e2 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26187 01e6 6E4A     		ldr	r2, .L1038
 26188 01e8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26189 01ea 1946     		mov	r1, r3
 26190 01ec 6D4A     		ldr	r2, .L1038+4
 26191 01ee 0B46     		mov	r3, r1
 26192 01f0 9B00     		lsls	r3, r3, #2
 26193 01f2 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 573


 26194 01f4 1344     		add	r3, r3, r2
 26195 01f6 03F50173 		add	r3, r3, #516
 26196 01fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26197 01fc 002B     		cmp	r3, #0
 26198 01fe 5DD0     		beq	.L1024
3888:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[0];
 26199              		.loc 1 3888 0
 26200 0200 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26201 0204 6849     		ldr	r1, .L1038+8
 26202 0206 1346     		mov	r3, r2
 26203 0208 9B00     		lsls	r3, r3, #2
 26204 020a 1344     		add	r3, r3, r2
 26205 020c DB00     		lsls	r3, r3, #3
 26206 020e 0B44     		add	r3, r3, r1
 26207 0210 0E33     		adds	r3, r3, #14
 26208 0212 B3F90030 		ldrsh	r3, [r3]
 26209 0216 A7F88631 		strh	r3, [r7, #390]	@ movhi
3889:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 26210              		.loc 1 3889 0
 26211 021a B7F88C31 		ldrh	r3, [r7, #396]
 26212 021e 0133     		adds	r3, r3, #1
 26213 0220 07F5C372 		add	r2, r7, #390
 26214 0224 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26215 0226 3A46     		mov	r2, r7
 26216 0228 D154     		strb	r1, [r2, r3]
3890:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 26217              		.loc 1 3890 0
 26218 022a B7F88C21 		ldrh	r2, [r7, #396]
 26219 022e 07F5C373 		add	r3, r7, #390
 26220 0232 0133     		adds	r3, r3, #1
 26221 0234 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26222 0236 3B46     		mov	r3, r7
 26223 0238 9954     		strb	r1, [r3, r2]
3891:..\src/command_processing.c **** 
3892:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[1];
 26224              		.loc 1 3892 0
 26225 023a 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26226 023e 5A49     		ldr	r1, .L1038+8
 26227 0240 1346     		mov	r3, r2
 26228 0242 9B00     		lsls	r3, r3, #2
 26229 0244 1344     		add	r3, r3, r2
 26230 0246 DB00     		lsls	r3, r3, #3
 26231 0248 0B44     		add	r3, r3, r1
 26232 024a 1033     		adds	r3, r3, #16
 26233 024c B3F90030 		ldrsh	r3, [r3]
 26234 0250 A7F88631 		strh	r3, [r7, #390]	@ movhi
3893:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 26235              		.loc 1 3893 0
 26236 0254 B7F88C31 		ldrh	r3, [r7, #396]
 26237 0258 0333     		adds	r3, r3, #3
 26238 025a 07F5C372 		add	r2, r7, #390
 26239 025e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26240 0260 3A46     		mov	r2, r7
 26241 0262 D154     		strb	r1, [r2, r3]
3894:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 26242              		.loc 1 3894 0
 26243 0264 B7F88C31 		ldrh	r3, [r7, #396]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 574


 26244 0268 9A1C     		adds	r2, r3, #2
 26245 026a 07F5C373 		add	r3, r7, #390
 26246 026e 0133     		adds	r3, r3, #1
 26247 0270 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26248 0272 3B46     		mov	r3, r7
 26249 0274 9954     		strb	r1, [r3, r2]
3895:..\src/command_processing.c **** 
3896:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[2];
 26250              		.loc 1 3896 0
 26251 0276 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26252 027a 4B49     		ldr	r1, .L1038+8
 26253 027c 1346     		mov	r3, r2
 26254 027e 9B00     		lsls	r3, r3, #2
 26255 0280 1344     		add	r3, r3, r2
 26256 0282 DB00     		lsls	r3, r3, #3
 26257 0284 0B44     		add	r3, r3, r1
 26258 0286 1233     		adds	r3, r3, #18
 26259 0288 B3F90030 		ldrsh	r3, [r3]
 26260 028c A7F88631 		strh	r3, [r7, #390]	@ movhi
3897:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 26261              		.loc 1 3897 0
 26262 0290 B7F88C31 		ldrh	r3, [r7, #396]
 26263 0294 0533     		adds	r3, r3, #5
 26264 0296 07F5C372 		add	r2, r7, #390
 26265 029a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26266 029c 3A46     		mov	r2, r7
 26267 029e D154     		strb	r1, [r2, r3]
3898:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 26268              		.loc 1 3898 0
 26269 02a0 B7F88C31 		ldrh	r3, [r7, #396]
 26270 02a4 1A1D     		adds	r2, r3, #4
 26271 02a6 07F5C373 		add	r3, r7, #390
 26272 02aa 0133     		adds	r3, r3, #1
 26273 02ac 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26274 02ae 3B46     		mov	r3, r7
 26275 02b0 9954     		strb	r1, [r3, r2]
3899:..\src/command_processing.c **** 
3900:..\src/command_processing.c ****             c = c + 6;
 26276              		.loc 1 3900 0
 26277 02b2 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26278 02b6 0633     		adds	r3, r3, #6
 26279 02b8 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26280              	.L1024:
3901:..\src/command_processing.c ****         }
3902:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][3]){
 26281              		.loc 1 3902 0
 26282 02bc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26283 02c0 374A     		ldr	r2, .L1038
 26284 02c2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26285 02c4 1946     		mov	r1, r3
 26286 02c6 374A     		ldr	r2, .L1038+4
 26287 02c8 0B46     		mov	r3, r1
 26288 02ca 9B00     		lsls	r3, r3, #2
 26289 02cc 0B44     		add	r3, r3, r1
 26290 02ce 1344     		add	r3, r3, r2
 26291 02d0 03F20523 		addw	r3, r3, #517
 26292 02d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 575


 26293 02d6 002B     		cmp	r3, #0
 26294 02d8 00F0AF80 		beq	.L1025
3903:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[0];
 26295              		.loc 1 3903 0
 26296 02dc 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26297 02e0 3149     		ldr	r1, .L1038+8
 26298 02e2 1346     		mov	r3, r2
 26299 02e4 9B00     		lsls	r3, r3, #2
 26300 02e6 1344     		add	r3, r3, r2
 26301 02e8 DB00     		lsls	r3, r3, #3
 26302 02ea 0B44     		add	r3, r3, r1
 26303 02ec 1433     		adds	r3, r3, #20
 26304 02ee 1B68     		ldr	r3, [r3]	@ float
 26305 02f0 C7F88031 		str	r3, [r7, #384]	@ float
3904:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26306              		.loc 1 3904 0
 26307 02f4 0023     		movs	r3, #0
 26308 02f6 87F88B31 		strb	r3, [r7, #395]
 26309 02fa 13E0     		b	.L1026
 26310              	.L1027:
3905:..\src/command_processing.c ****                 single_packet[c + 4 - k -1] = ((char*)(&aux_float))[k];
 26311              		.loc 1 3905 0 discriminator 3
 26312 02fc B7F88C31 		ldrh	r3, [r7, #396]
 26313 0300 1A1D     		adds	r2, r3, #4
 26314 0302 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26315 0306 D31A     		subs	r3, r2, r3
 26316 0308 013B     		subs	r3, r3, #1
 26317 030a 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26318 030e 07F5C071 		add	r1, r7, #384
 26319 0312 0A44     		add	r2, r2, r1
 26320 0314 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26321 0316 3A46     		mov	r2, r7
 26322 0318 D154     		strb	r1, [r2, r3]
3904:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26323              		.loc 1 3904 0 discriminator 3
 26324 031a 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26325 031e 0133     		adds	r3, r3, #1
 26326 0320 87F88B31 		strb	r3, [r7, #395]
 26327              	.L1026:
3904:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26328              		.loc 1 3904 0 is_stmt 0 discriminator 1
 26329 0324 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26330 0328 032B     		cmp	r3, #3
 26331 032a E7D9     		bls	.L1027
3906:..\src/command_processing.c ****             }
3907:..\src/command_processing.c **** 
3908:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[1];
 26332              		.loc 1 3908 0 is_stmt 1
 26333 032c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26334 0330 1D49     		ldr	r1, .L1038+8
 26335 0332 1346     		mov	r3, r2
 26336 0334 9B00     		lsls	r3, r3, #2
 26337 0336 1344     		add	r3, r3, r2
 26338 0338 DB00     		lsls	r3, r3, #3
 26339 033a 0B44     		add	r3, r3, r1
 26340 033c 1833     		adds	r3, r3, #24
 26341 033e 1B68     		ldr	r3, [r3]	@ float
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 576


 26342 0340 C7F88031 		str	r3, [r7, #384]	@ float
3909:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26343              		.loc 1 3909 0
 26344 0344 0023     		movs	r3, #0
 26345 0346 87F88B31 		strb	r3, [r7, #395]
 26346 034a 14E0     		b	.L1028
 26347              	.L1029:
3910:..\src/command_processing.c ****                 single_packet[c + 8 - k -1] = ((char*)(&aux_float))[k];
 26348              		.loc 1 3910 0 discriminator 3
 26349 034c B7F88C31 		ldrh	r3, [r7, #396]
 26350 0350 03F10802 		add	r2, r3, #8
 26351 0354 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26352 0358 D31A     		subs	r3, r2, r3
 26353 035a 013B     		subs	r3, r3, #1
 26354 035c 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26355 0360 07F5C071 		add	r1, r7, #384
 26356 0364 0A44     		add	r2, r2, r1
 26357 0366 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26358 0368 3A46     		mov	r2, r7
 26359 036a D154     		strb	r1, [r2, r3]
3909:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26360              		.loc 1 3909 0 discriminator 3
 26361 036c 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26362 0370 0133     		adds	r3, r3, #1
 26363 0372 87F88B31 		strb	r3, [r7, #395]
 26364              	.L1028:
3909:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26365              		.loc 1 3909 0 is_stmt 0 discriminator 1
 26366 0376 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26367 037a 032B     		cmp	r3, #3
 26368 037c E6D9     		bls	.L1029
3911:..\src/command_processing.c ****             }
3912:..\src/command_processing.c **** 
3913:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[2];
 26369              		.loc 1 3913 0 is_stmt 1
 26370 037e 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26371 0382 0949     		ldr	r1, .L1038+8
 26372 0384 1346     		mov	r3, r2
 26373 0386 9B00     		lsls	r3, r3, #2
 26374 0388 1344     		add	r3, r3, r2
 26375 038a DB00     		lsls	r3, r3, #3
 26376 038c 0B44     		add	r3, r3, r1
 26377 038e 1C33     		adds	r3, r3, #28
 26378 0390 1B68     		ldr	r3, [r3]	@ float
 26379 0392 C7F88031 		str	r3, [r7, #384]	@ float
3914:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26380              		.loc 1 3914 0
 26381 0396 0023     		movs	r3, #0
 26382 0398 87F88B31 		strb	r3, [r7, #395]
 26383 039c 1BE0     		b	.L1030
 26384              	.L1039:
 26385 039e 00BF     		.align	2
 26386              	.L1038:
 26387 03a0 00000000 		.word	IMU_connected
 26388 03a4 00000000 		.word	c_mem
 26389 03a8 00000000 		.word	g_imu
 26390              	.L1031:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 577


3915:..\src/command_processing.c ****                 single_packet[c + 12 - k -1] = ((char*)(&aux_float))[k];
 26391              		.loc 1 3915 0 discriminator 3
 26392 03ac B7F88C31 		ldrh	r3, [r7, #396]
 26393 03b0 03F10C02 		add	r2, r3, #12
 26394 03b4 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26395 03b8 D31A     		subs	r3, r2, r3
 26396 03ba 013B     		subs	r3, r3, #1
 26397 03bc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26398 03c0 07F5C071 		add	r1, r7, #384
 26399 03c4 0A44     		add	r2, r2, r1
 26400 03c6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26401 03c8 3A46     		mov	r2, r7
 26402 03ca D154     		strb	r1, [r2, r3]
3914:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26403              		.loc 1 3914 0 discriminator 3
 26404 03cc 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26405 03d0 0133     		adds	r3, r3, #1
 26406 03d2 87F88B31 		strb	r3, [r7, #395]
 26407              	.L1030:
3914:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26408              		.loc 1 3914 0 is_stmt 0 discriminator 1
 26409 03d6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26410 03da 032B     		cmp	r3, #3
 26411 03dc E6D9     		bls	.L1031
3916:..\src/command_processing.c ****             }
3917:..\src/command_processing.c **** 
3918:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[3];
 26412              		.loc 1 3918 0 is_stmt 1
 26413 03de 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26414 03e2 6749     		ldr	r1, .L1040
 26415 03e4 1346     		mov	r3, r2
 26416 03e6 9B00     		lsls	r3, r3, #2
 26417 03e8 1344     		add	r3, r3, r2
 26418 03ea DB00     		lsls	r3, r3, #3
 26419 03ec 0B44     		add	r3, r3, r1
 26420 03ee 2033     		adds	r3, r3, #32
 26421 03f0 1B68     		ldr	r3, [r3]	@ float
 26422 03f2 C7F88031 		str	r3, [r7, #384]	@ float
3919:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26423              		.loc 1 3919 0
 26424 03f6 0023     		movs	r3, #0
 26425 03f8 87F88B31 		strb	r3, [r7, #395]
 26426 03fc 14E0     		b	.L1032
 26427              	.L1033:
3920:..\src/command_processing.c ****                 single_packet[c + 16 - k -1] = ((char*)(&aux_float))[k];
 26428              		.loc 1 3920 0 discriminator 3
 26429 03fe B7F88C31 		ldrh	r3, [r7, #396]
 26430 0402 03F11002 		add	r2, r3, #16
 26431 0406 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26432 040a D31A     		subs	r3, r2, r3
 26433 040c 013B     		subs	r3, r3, #1
 26434 040e 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26435 0412 07F5C071 		add	r1, r7, #384
 26436 0416 0A44     		add	r2, r2, r1
 26437 0418 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26438 041a 3A46     		mov	r2, r7
 26439 041c D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 578


3919:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26440              		.loc 1 3919 0 discriminator 3
 26441 041e 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26442 0422 0133     		adds	r3, r3, #1
 26443 0424 87F88B31 		strb	r3, [r7, #395]
 26444              	.L1032:
3919:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26445              		.loc 1 3919 0 is_stmt 0 discriminator 1
 26446 0428 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26447 042c 032B     		cmp	r3, #3
 26448 042e E6D9     		bls	.L1033
3921:..\src/command_processing.c ****             }
3922:..\src/command_processing.c ****             c = c + 16;
 26449              		.loc 1 3922 0 is_stmt 1
 26450 0430 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26451 0434 1033     		adds	r3, r3, #16
 26452 0436 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26453              	.L1025:
3923:..\src/command_processing.c ****         }
3924:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][4]){
 26454              		.loc 1 3924 0
 26455 043a 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26456 043e 514A     		ldr	r2, .L1040+4
 26457 0440 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26458 0442 1946     		mov	r1, r3
 26459 0444 504A     		ldr	r2, .L1040+8
 26460 0446 0B46     		mov	r3, r1
 26461 0448 9B00     		lsls	r3, r3, #2
 26462 044a 0B44     		add	r3, r3, r1
 26463 044c 1344     		add	r3, r3, r2
 26464 044e 03F20623 		addw	r3, r3, #518
 26465 0452 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26466 0454 002B     		cmp	r3, #0
 26467 0456 21D0     		beq	.L1034
3925:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].temp_value;
 26468              		.loc 1 3925 0
 26469 0458 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26470 045c 4849     		ldr	r1, .L1040
 26471 045e 1346     		mov	r3, r2
 26472 0460 9B00     		lsls	r3, r3, #2
 26473 0462 1344     		add	r3, r3, r2
 26474 0464 DB00     		lsls	r3, r3, #3
 26475 0466 0B44     		add	r3, r3, r1
 26476 0468 2433     		adds	r3, r3, #36
 26477 046a B3F90030 		ldrsh	r3, [r3]
 26478 046e A7F88631 		strh	r3, [r7, #390]	@ movhi
3926:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 26479              		.loc 1 3926 0
 26480 0472 B7F88C31 		ldrh	r3, [r7, #396]
 26481 0476 0133     		adds	r3, r3, #1
 26482 0478 07F5C372 		add	r2, r7, #390
 26483 047c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26484 047e 3A46     		mov	r2, r7
 26485 0480 D154     		strb	r1, [r2, r3]
3927:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 26486              		.loc 1 3927 0
 26487 0482 B7F88C21 		ldrh	r2, [r7, #396]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 579


 26488 0486 07F5C373 		add	r3, r7, #390
 26489 048a 0133     		adds	r3, r3, #1
 26490 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26491 048e 3B46     		mov	r3, r7
 26492 0490 9954     		strb	r1, [r3, r2]
3928:..\src/command_processing.c ****             c = c + 2;
 26493              		.loc 1 3928 0
 26494 0492 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26495 0496 0233     		adds	r3, r3, #2
 26496 0498 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26497              	.L1034:
3929:..\src/command_processing.c ****         }
3930:..\src/command_processing.c ****         single_packet[single_imu_size[IMU_connected[k_imu]] - 1] = (uint8) 0x3A; //':';
 26498              		.loc 1 3930 0
 26499 049c 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26500 04a0 384A     		ldr	r2, .L1040+4
 26501 04a2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26502 04a4 1A46     		mov	r2, r3
 26503 04a6 394B     		ldr	r3, .L1040+12
 26504 04a8 53F82230 		ldr	r3, [r3, r2, lsl #2]
 26505 04ac 013B     		subs	r3, r3, #1
 26506 04ae 3A46     		mov	r2, r7
 26507 04b0 3A21     		movs	r1, #58
 26508 04b2 D154     		strb	r1, [r2, r3]
3931:..\src/command_processing.c ****         c = 1;
 26509              		.loc 1 3931 0
 26510 04b4 0123     		movs	r3, #1
 26511 04b6 A7F88C31 		strh	r3, [r7, #396]	@ movhi
3932:..\src/command_processing.c ****                
3933:..\src/command_processing.c ****         for(k=0; k < single_imu_size[IMU_connected[k_imu]]; k++) {
 26512              		.loc 1 3933 0
 26513 04ba 0023     		movs	r3, #0
 26514 04bc 87F88B31 		strb	r3, [r7, #395]
 26515 04c0 10E0     		b	.L1035
 26516              	.L1036:
3934:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 26517              		.loc 1 3934 0 discriminator 3
 26518 04c2 B7F88821 		ldrh	r2, [r7, #392]
 26519 04c6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26520 04ca 1344     		add	r3, r3, r2
 26521 04cc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26522 04d0 3946     		mov	r1, r7
 26523 04d2 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 26524 04d4 07F12002 		add	r2, r7, #32
 26525 04d8 D154     		strb	r1, [r2, r3]
3933:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 26526              		.loc 1 3933 0 discriminator 3
 26527 04da 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26528 04de 0133     		adds	r3, r3, #1
 26529 04e0 87F88B31 		strb	r3, [r7, #395]
 26530              	.L1035:
3933:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 26531              		.loc 1 3933 0 is_stmt 0 discriminator 1
 26532 04e4 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26533 04e8 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26534 04ec 2549     		ldr	r1, .L1040+4
 26535 04ee CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 580


 26536 04f0 1946     		mov	r1, r3
 26537 04f2 264B     		ldr	r3, .L1040+12
 26538 04f4 53F82130 		ldr	r3, [r3, r1, lsl #2]
 26539 04f8 9A42     		cmp	r2, r3
 26540 04fa E2DB     		blt	.L1036
3935:..\src/command_processing.c ****         }
3936:..\src/command_processing.c ****         gl_c = gl_c + single_imu_size[IMU_connected[k_imu]];  
 26541              		.loc 1 3936 0 is_stmt 1 discriminator 2
 26542 04fc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26543 0500 204A     		ldr	r2, .L1040+4
 26544 0502 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26545 0504 1A46     		mov	r2, r3
 26546 0506 214B     		ldr	r3, .L1040+12
 26547 0508 53F82230 		ldr	r3, [r3, r2, lsl #2]
 26548 050c 9AB2     		uxth	r2, r3
 26549 050e B7F88831 		ldrh	r3, [r7, #392]	@ movhi
 26550 0512 1344     		add	r3, r3, r2
 26551 0514 A7F88831 		strh	r3, [r7, #392]	@ movhi
3937:..\src/command_processing.c ****         
3938:..\src/command_processing.c ****         memset(&single_packet, 0, sizeof(single_packet));     
 26552              		.loc 1 3938 0 discriminator 2
 26553 0518 3B46     		mov	r3, r7
 26554 051a 2022     		movs	r2, #32
 26555 051c 0021     		movs	r1, #0
 26556 051e 1846     		mov	r0, r3
 26557 0520 FFF7FEFF 		bl	memset
3853:..\src/command_processing.c ****     {	
 26558              		.loc 1 3853 0 discriminator 2
 26559 0524 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26560 0528 0133     		adds	r3, r3, #1
 26561 052a 87F88F31 		strb	r3, [r7, #399]
 26562              	.L1021:
3853:..\src/command_processing.c ****     {	
 26563              		.loc 1 3853 0 is_stmt 0 discriminator 1
 26564 052e 184B     		ldr	r3, .L1040+16
 26565 0530 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26566 0532 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26567 0536 9A42     		cmp	r2, r3
 26568 0538 FFF476AD 		bcc	.L1037
3939:..\src/command_processing.c ****         
3940:..\src/command_processing.c ****     }
3941:..\src/command_processing.c **** 
3942:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3943:..\src/command_processing.c ****     packet_data[imus_data_size-1] = LCRChecksum (packet_data, imus_data_size-1);
 26569              		.loc 1 3943 0 is_stmt 1
 26570 053c 154B     		ldr	r3, .L1040+20
 26571 053e 1B68     		ldr	r3, [r3]
 26572 0540 5C1E     		subs	r4, r3, #1
 26573 0542 144B     		ldr	r3, .L1040+20
 26574 0544 1B68     		ldr	r3, [r3]
 26575 0546 DBB2     		uxtb	r3, r3
 26576 0548 013B     		subs	r3, r3, #1
 26577 054a DAB2     		uxtb	r2, r3
 26578 054c 07F12003 		add	r3, r7, #32
 26579 0550 1146     		mov	r1, r2
 26580 0552 1846     		mov	r0, r3
 26581 0554 FFF7FEFF 		bl	LCRChecksum
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 581


 26582 0558 0346     		mov	r3, r0
 26583 055a 1A46     		mov	r2, r3
 26584 055c 07F12003 		add	r3, r7, #32
 26585 0560 1A55     		strb	r2, [r3, r4]
3944:..\src/command_processing.c ****     commWrite(packet_data, imus_data_size);
 26586              		.loc 1 3944 0
 26587 0562 0C4B     		ldr	r3, .L1040+20
 26588 0564 1B68     		ldr	r3, [r3]
 26589 0566 9AB2     		uxth	r2, r3
 26590 0568 07F12003 		add	r3, r7, #32
 26591 056c 1146     		mov	r1, r2
 26592 056e 1846     		mov	r0, r3
 26593 0570 FFF7FEFF 		bl	commWrite
3945:..\src/command_processing.c **** }
 26594              		.loc 1 3945 0
 26595 0574 00BF     		nop
 26596 0576 07F5CA77 		add	r7, r7, #404
 26597              		.cfi_def_cfa_offset 12
 26598 057a BD46     		mov	sp, r7
 26599              		.cfi_def_cfa_register 13
 26600              		@ sp needed
 26601 057c 90BD     		pop	{r4, r7, pc}
 26602              	.L1041:
 26603 057e 00BF     		.align	2
 26604              	.L1040:
 26605 0580 00000000 		.word	g_imu
 26606 0584 00000000 		.word	IMU_connected
 26607 0588 00000000 		.word	c_mem
 26608 058c 00000000 		.word	single_imu_size
 26609 0590 00000000 		.word	N_IMU_Connected
 26610 0594 00000000 		.word	imus_data_size
 26611              		.cfi_endproc
 26612              	.LFE109:
 26613              		.size	cmd_get_imu_readings, .-cmd_get_imu_readings
 26614              		.section	.text.cmd_get_encoder_map,"ax",%progbits
 26615              		.align	2
 26616              		.global	cmd_get_encoder_map
 26617              		.thumb
 26618              		.thumb_func
 26619              		.type	cmd_get_encoder_map, %function
 26620              	cmd_get_encoder_map:
 26621              	.LFB110:
3946:..\src/command_processing.c **** 
3947:..\src/command_processing.c **** void cmd_get_encoder_map(){
 26622              		.loc 1 3947 0
 26623              		.cfi_startproc
 26624              		@ args = 0, pretend = 0, frame = 16
 26625              		@ frame_needed = 1, uses_anonymous_args = 0
 26626 0000 90B5     		push	{r4, r7, lr}
 26627              		.cfi_def_cfa_offset 12
 26628              		.cfi_offset 4, -12
 26629              		.cfi_offset 7, -8
 26630              		.cfi_offset 14, -4
 26631 0002 85B0     		sub	sp, sp, #20
 26632              		.cfi_def_cfa_offset 32
 26633 0004 00AF     		add	r7, sp, #0
 26634              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 582


3948:..\src/command_processing.c ****     //Retrieve Encoder map
3949:..\src/command_processing.c ****     
3950:..\src/command_processing.c ****     uint8 packet_data[4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
3951:..\src/command_processing.c ****     uint8 CYDATA i, j;
3952:..\src/command_processing.c ****     
3953:..\src/command_processing.c ****     // Header        
3954:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_CONF;
 26635              		.loc 1 3954 0
 26636 0006 A323     		movs	r3, #163
 26637 0008 3B70     		strb	r3, [r7]
3955:..\src/command_processing.c ****     
3956:..\src/command_processing.c ****     // Fill payload
3957:..\src/command_processing.c ****     packet_data[1] = N_ENCODER_LINE_MAX;
 26638              		.loc 1 3957 0
 26639 000a 0223     		movs	r3, #2
 26640 000c 7B70     		strb	r3, [r7, #1]
3958:..\src/command_processing.c ****     packet_data[2] = N_ENCODERS_PER_LINE_MAX;
 26641              		.loc 1 3958 0
 26642 000e 0523     		movs	r3, #5
 26643 0010 BB70     		strb	r3, [r7, #2]
3959:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26644              		.loc 1 3959 0
 26645 0012 0023     		movs	r3, #0
 26646 0014 FB73     		strb	r3, [r7, #15]
 26647 0016 23E0     		b	.L1043
 26648              	.L1046:
3960:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 26649              		.loc 1 3960 0
 26650 0018 0023     		movs	r3, #0
 26651 001a BB73     		strb	r3, [r7, #14]
 26652 001c 1AE0     		b	.L1044
 26653              	.L1045:
3961:..\src/command_processing.c ****             packet_data[3 + i*N_ENCODERS_PER_LINE_MAX + j] = c_mem.enc[i].Enc_raw_read_conf[j];
 26654              		.loc 1 3961 0 discriminator 3
 26655 001e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 26656 0020 1346     		mov	r3, r2
 26657 0022 9B00     		lsls	r3, r3, #2
 26658 0024 1344     		add	r3, r3, r2
 26659 0026 DA1C     		adds	r2, r3, #3
 26660 0028 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 26661 002a D118     		adds	r1, r2, r3
 26662 002c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 26663 002e B87B     		ldrb	r0, [r7, #14]	@ zero_extendqisi2
 26664 0030 154C     		ldr	r4, .L1047
 26665 0032 1346     		mov	r3, r2
 26666 0034 5B00     		lsls	r3, r3, #1
 26667 0036 1344     		add	r3, r3, r2
 26668 0038 1B01     		lsls	r3, r3, #4
 26669 003a 2344     		add	r3, r3, r4
 26670 003c 0344     		add	r3, r3, r0
 26671 003e 03F5C873 		add	r3, r3, #400
 26672 0042 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 26673 0044 07F11003 		add	r3, r7, #16
 26674 0048 0B44     		add	r3, r3, r1
 26675 004a 03F8102C 		strb	r2, [r3, #-16]
3960:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 26676              		.loc 1 3960 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 583


 26677 004e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 26678 0050 0133     		adds	r3, r3, #1
 26679 0052 BB73     		strb	r3, [r7, #14]
 26680              	.L1044:
3960:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 26681              		.loc 1 3960 0 is_stmt 0 discriminator 1
 26682 0054 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 26683 0056 042B     		cmp	r3, #4
 26684 0058 E1D9     		bls	.L1045
3959:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26685              		.loc 1 3959 0 is_stmt 1 discriminator 2
 26686 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26687 005c 0133     		adds	r3, r3, #1
 26688 005e FB73     		strb	r3, [r7, #15]
 26689              	.L1043:
3959:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26690              		.loc 1 3959 0 is_stmt 0 discriminator 1
 26691 0060 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26692 0062 012B     		cmp	r3, #1
 26693 0064 D8D9     		bls	.L1046
3962:..\src/command_processing.c ****         }
3963:..\src/command_processing.c ****     }
3964:..\src/command_processing.c ****     
3965:..\src/command_processing.c ****     // Calculate checksum
3966:..\src/command_processing.c ****     packet_data[3+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX] = LCRChecksum(packet_data, 3+N_ENCODE
 26694              		.loc 1 3966 0 is_stmt 1
 26695 0066 3B46     		mov	r3, r7
 26696 0068 0D21     		movs	r1, #13
 26697 006a 1846     		mov	r0, r3
 26698 006c FFF7FEFF 		bl	LCRChecksum
 26699 0070 0346     		mov	r3, r0
 26700 0072 7B73     		strb	r3, [r7, #13]
3967:..\src/command_processing.c ****     
3968:..\src/command_processing.c ****     // Send package to UART
3969:..\src/command_processing.c ****     commWrite(packet_data, 4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX);
 26701              		.loc 1 3969 0
 26702 0074 3B46     		mov	r3, r7
 26703 0076 0E21     		movs	r1, #14
 26704 0078 1846     		mov	r0, r3
 26705 007a FFF7FEFF 		bl	commWrite
3970:..\src/command_processing.c **** }
 26706              		.loc 1 3970 0
 26707 007e 00BF     		nop
 26708 0080 1437     		adds	r7, r7, #20
 26709              		.cfi_def_cfa_offset 12
 26710 0082 BD46     		mov	sp, r7
 26711              		.cfi_def_cfa_register 13
 26712              		@ sp needed
 26713 0084 90BD     		pop	{r4, r7, pc}
 26714              	.L1048:
 26715 0086 00BF     		.align	2
 26716              	.L1047:
 26717 0088 00000000 		.word	c_mem
 26718              		.cfi_endproc
 26719              	.LFE110:
 26720              		.size	cmd_get_encoder_map, .-cmd_get_encoder_map
 26721              		.section	.text.cmd_get_encoder_raw,"ax",%progbits
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 584


 26722              		.align	2
 26723              		.global	cmd_get_encoder_raw
 26724              		.thumb
 26725              		.thumb_func
 26726              		.type	cmd_get_encoder_raw, %function
 26727              	cmd_get_encoder_raw:
 26728              	.LFB111:
3971:..\src/command_processing.c **** 
3972:..\src/command_processing.c **** void cmd_get_encoder_raw(){
 26729              		.loc 1 3972 0
 26730              		.cfi_startproc
 26731              		@ args = 0, pretend = 0, frame = 32
 26732              		@ frame_needed = 1, uses_anonymous_args = 0
 26733 0000 90B5     		push	{r4, r7, lr}
 26734              		.cfi_def_cfa_offset 12
 26735              		.cfi_offset 4, -12
 26736              		.cfi_offset 7, -8
 26737              		.cfi_offset 14, -4
 26738 0002 89B0     		sub	sp, sp, #36
 26739              		.cfi_def_cfa_offset 48
 26740 0004 00AF     		add	r7, sp, #0
 26741              		.cfi_def_cfa_register 7
3973:..\src/command_processing.c ****     //Retrieve all Encoders raw values
3974:..\src/command_processing.c ****     
3975:..\src/command_processing.c ****     uint8 packet_data[2+2*N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
3976:..\src/command_processing.c ****     uint8 i, j, idx;
3977:..\src/command_processing.c ****     uint16 aux_uint16;
3978:..\src/command_processing.c ****     
3979:..\src/command_processing.c ****     //Header package 
3980:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_RAW;
 26742              		.loc 1 3980 0
 26743 0006 A423     		movs	r3, #164
 26744 0008 3B71     		strb	r3, [r7, #4]
3981:..\src/command_processing.c ****  
3982:..\src/command_processing.c ****     // Fill payload
3983:..\src/command_processing.c ****     idx = 0;
 26745              		.loc 1 3983 0
 26746 000a 0023     		movs	r3, #0
 26747 000c 7B77     		strb	r3, [r7, #29]
3984:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26748              		.loc 1 3984 0
 26749 000e 0023     		movs	r3, #0
 26750 0010 FB77     		strb	r3, [r7, #31]
 26751 0012 3FE0     		b	.L1050
 26752              	.L1054:
3985:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 26753              		.loc 1 3985 0
 26754 0014 0023     		movs	r3, #0
 26755 0016 BB77     		strb	r3, [r7, #30]
 26756 0018 33E0     		b	.L1051
 26757              	.L1053:
3986:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 26758              		.loc 1 3986 0
 26759 001a FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 26760 001c B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 26761 001e 3048     		ldr	r0, .L1055
 26762 0020 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 585


 26763 0022 5B00     		lsls	r3, r3, #1
 26764 0024 1344     		add	r3, r3, r2
 26765 0026 1B01     		lsls	r3, r3, #4
 26766 0028 0344     		add	r3, r3, r0
 26767 002a 0B44     		add	r3, r3, r1
 26768 002c 03F5C873 		add	r3, r3, #400
 26769 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26770 0032 012B     		cmp	r3, #1
 26771 0034 22D1     		bne	.L1052
3987:..\src/command_processing.c ****                 aux_uint16 = (uint16)Encoder_Value[i][j];
 26772              		.loc 1 3987 0
 26773 0036 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 26774 0038 B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 26775 003a 2A48     		ldr	r0, .L1055+4
 26776 003c 1346     		mov	r3, r2
 26777 003e 9B00     		lsls	r3, r3, #2
 26778 0040 1344     		add	r3, r3, r2
 26779 0042 0B44     		add	r3, r3, r1
 26780 0044 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 26781 0048 7B80     		strh	r3, [r7, #2]	@ movhi
3988:..\src/command_processing.c ****                 packet_data[(idx << 1) + 2] = ((char*)(&aux_uint16))[0];
 26782              		.loc 1 3988 0
 26783 004a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26784 004c 5B00     		lsls	r3, r3, #1
 26785 004e 0233     		adds	r3, r3, #2
 26786 0050 BA1C     		adds	r2, r7, #2
 26787 0052 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 26788 0054 07F12001 		add	r1, r7, #32
 26789 0058 0B44     		add	r3, r3, r1
 26790 005a 03F81C2C 		strb	r2, [r3, #-28]
3989:..\src/command_processing.c ****                 packet_data[(idx << 1) + 1] = ((char*)(&aux_uint16))[1];
 26791              		.loc 1 3989 0
 26792 005e 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26793 0060 5B00     		lsls	r3, r3, #1
 26794 0062 5A1C     		adds	r2, r3, #1
 26795 0064 BB1C     		adds	r3, r7, #2
 26796 0066 0133     		adds	r3, r3, #1
 26797 0068 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26798 006a 07F12003 		add	r3, r7, #32
 26799 006e 1344     		add	r3, r3, r2
 26800 0070 0A46     		mov	r2, r1
 26801 0072 03F81C2C 		strb	r2, [r3, #-28]
3990:..\src/command_processing.c ****                 idx++;
 26802              		.loc 1 3990 0
 26803 0076 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26804 0078 0133     		adds	r3, r3, #1
 26805 007a 7B77     		strb	r3, [r7, #29]
 26806              	.L1052:
3985:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 26807              		.loc 1 3985 0 discriminator 2
 26808 007c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 26809 007e 0133     		adds	r3, r3, #1
 26810 0080 BB77     		strb	r3, [r7, #30]
 26811              	.L1051:
3985:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 26812              		.loc 1 3985 0 is_stmt 0 discriminator 1
 26813 0082 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 586


 26814 0084 184A     		ldr	r2, .L1055+8
 26815 0086 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26816 0088 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 26817 008a 9A42     		cmp	r2, r3
 26818 008c C5D3     		bcc	.L1053
3984:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 26819              		.loc 1 3984 0 is_stmt 1 discriminator 2
 26820 008e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26821 0090 0133     		adds	r3, r3, #1
 26822 0092 FB77     		strb	r3, [r7, #31]
 26823              	.L1050:
3984:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 26824              		.loc 1 3984 0 is_stmt 0 discriminator 1
 26825 0094 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26826 0096 012B     		cmp	r3, #1
 26827 0098 BCD9     		bls	.L1054
3991:..\src/command_processing.c ****             }
3992:..\src/command_processing.c ****         }
3993:..\src/command_processing.c ****     }
3994:..\src/command_processing.c **** 
3995:..\src/command_processing.c ****     // Calculate checksum
3996:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 26828              		.loc 1 3996 0 is_stmt 1
 26829 009a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26830 009c 5B00     		lsls	r3, r3, #1
 26831 009e 5C1C     		adds	r4, r3, #1
 26832 00a0 7B7F     		ldrb	r3, [r7, #29]
 26833 00a2 5B00     		lsls	r3, r3, #1
 26834 00a4 DBB2     		uxtb	r3, r3
 26835 00a6 0133     		adds	r3, r3, #1
 26836 00a8 DAB2     		uxtb	r2, r3
 26837 00aa 3B1D     		adds	r3, r7, #4
 26838 00ac 1146     		mov	r1, r2
 26839 00ae 1846     		mov	r0, r3
 26840 00b0 FFF7FEFF 		bl	LCRChecksum
 26841 00b4 0346     		mov	r3, r0
 26842 00b6 1A46     		mov	r2, r3
 26843 00b8 07F12003 		add	r3, r7, #32
 26844 00bc 2344     		add	r3, r3, r4
 26845 00be 03F81C2C 		strb	r2, [r3, #-28]
3997:..\src/command_processing.c ****     
3998:..\src/command_processing.c ****     // Send package to UART
3999:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 26846              		.loc 1 3999 0
 26847 00c2 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26848 00c4 0133     		adds	r3, r3, #1
 26849 00c6 9BB2     		uxth	r3, r3
 26850 00c8 5B00     		lsls	r3, r3, #1
 26851 00ca 9AB2     		uxth	r2, r3
 26852 00cc 3B1D     		adds	r3, r7, #4
 26853 00ce 1146     		mov	r1, r2
 26854 00d0 1846     		mov	r0, r3
 26855 00d2 FFF7FEFF 		bl	commWrite
4000:..\src/command_processing.c **** }
 26856              		.loc 1 4000 0
 26857 00d6 00BF     		nop
 26858 00d8 2437     		adds	r7, r7, #36
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 587


 26859              		.cfi_def_cfa_offset 12
 26860 00da BD46     		mov	sp, r7
 26861              		.cfi_def_cfa_register 13
 26862              		@ sp needed
 26863 00dc 90BD     		pop	{r4, r7, pc}
 26864              	.L1056:
 26865 00de 00BF     		.align	2
 26866              	.L1055:
 26867 00e0 00000000 		.word	c_mem
 26868 00e4 00000000 		.word	Encoder_Value
 26869 00e8 00000000 		.word	N_Encoder_Line_Connected
 26870              		.cfi_endproc
 26871              	.LFE111:
 26872              		.size	cmd_get_encoder_raw, .-cmd_get_encoder_raw
 26873              		.section	.text.cmd_get_ADC_map,"ax",%progbits
 26874              		.align	2
 26875              		.global	cmd_get_ADC_map
 26876              		.thumb
 26877              		.thumb_func
 26878              		.type	cmd_get_ADC_map, %function
 26879              	cmd_get_ADC_map:
 26880              	.LFB112:
4001:..\src/command_processing.c **** 
4002:..\src/command_processing.c **** void cmd_get_ADC_map(){
 26881              		.loc 1 4002 0
 26882              		.cfi_startproc
 26883              		@ args = 0, pretend = 0, frame = 16
 26884              		@ frame_needed = 1, uses_anonymous_args = 0
 26885 0000 80B5     		push	{r7, lr}
 26886              		.cfi_def_cfa_offset 8
 26887              		.cfi_offset 7, -8
 26888              		.cfi_offset 14, -4
 26889 0002 84B0     		sub	sp, sp, #16
 26890              		.cfi_def_cfa_offset 24
 26891 0004 00AF     		add	r7, sp, #0
 26892              		.cfi_def_cfa_register 7
4003:..\src/command_processing.c ****     //Retrieve Encoder map
4004:..\src/command_processing.c ****     
4005:..\src/command_processing.c ****     uint8 packet_data[3+NUM_OF_ADC_CHANNELS_MAX];
4006:..\src/command_processing.c ****     uint8 CYDATA i;
4007:..\src/command_processing.c ****     
4008:..\src/command_processing.c ****     // Header        
4009:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_CONF;
 26893              		.loc 1 4009 0
 26894 0006 A523     		movs	r3, #165
 26895 0008 3B70     		strb	r3, [r7]
4010:..\src/command_processing.c ****     
4011:..\src/command_processing.c ****     // Fill payload
4012:..\src/command_processing.c ****     packet_data[1] = NUM_OF_ADC_CHANNELS_MAX;
 26896              		.loc 1 4012 0
 26897 000a 0C23     		movs	r3, #12
 26898 000c 7B70     		strb	r3, [r7, #1]
4013:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 26899              		.loc 1 4013 0
 26900 000e 0023     		movs	r3, #0
 26901 0010 FB73     		strb	r3, [r7, #15]
 26902 0012 0EE0     		b	.L1058
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 588


 26903              	.L1059:
4014:..\src/command_processing.c ****         packet_data[2 + i] = c_mem.exp.ADC_conf[i];
 26904              		.loc 1 4014 0 discriminator 3
 26905 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26906 0016 0233     		adds	r3, r3, #2
 26907 0018 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 26908 001a 0F49     		ldr	r1, .L1060
 26909 001c 0A44     		add	r2, r2, r1
 26910 001e 92F82822 		ldrb	r2, [r2, #552]	@ zero_extendqisi2
 26911 0022 07F11001 		add	r1, r7, #16
 26912 0026 0B44     		add	r3, r3, r1
 26913 0028 03F8102C 		strb	r2, [r3, #-16]
4013:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 26914              		.loc 1 4013 0 discriminator 3
 26915 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26916 002e 0133     		adds	r3, r3, #1
 26917 0030 FB73     		strb	r3, [r7, #15]
 26918              	.L1058:
4013:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 26919              		.loc 1 4013 0 is_stmt 0 discriminator 1
 26920 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26921 0034 0B2B     		cmp	r3, #11
 26922 0036 EDD9     		bls	.L1059
4015:..\src/command_processing.c ****     }
4016:..\src/command_processing.c ****     
4017:..\src/command_processing.c ****     // Calculate checksum
4018:..\src/command_processing.c ****     packet_data[2+NUM_OF_ADC_CHANNELS_MAX] = LCRChecksum(packet_data, 2+NUM_OF_ADC_CHANNELS_MAX);
 26923              		.loc 1 4018 0 is_stmt 1
 26924 0038 3B46     		mov	r3, r7
 26925 003a 0E21     		movs	r1, #14
 26926 003c 1846     		mov	r0, r3
 26927 003e FFF7FEFF 		bl	LCRChecksum
 26928 0042 0346     		mov	r3, r0
 26929 0044 BB73     		strb	r3, [r7, #14]
4019:..\src/command_processing.c ****     
4020:..\src/command_processing.c ****     // Send package to UART
4021:..\src/command_processing.c ****     commWrite(packet_data, 3+NUM_OF_ADC_CHANNELS_MAX);
 26930              		.loc 1 4021 0
 26931 0046 3B46     		mov	r3, r7
 26932 0048 0F21     		movs	r1, #15
 26933 004a 1846     		mov	r0, r3
 26934 004c FFF7FEFF 		bl	commWrite
4022:..\src/command_processing.c ****     
4023:..\src/command_processing.c **** }
 26935              		.loc 1 4023 0
 26936 0050 00BF     		nop
 26937 0052 1037     		adds	r7, r7, #16
 26938              		.cfi_def_cfa_offset 8
 26939 0054 BD46     		mov	sp, r7
 26940              		.cfi_def_cfa_register 13
 26941              		@ sp needed
 26942 0056 80BD     		pop	{r7, pc}
 26943              	.L1061:
 26944              		.align	2
 26945              	.L1060:
 26946 0058 00000000 		.word	c_mem
 26947              		.cfi_endproc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 589


 26948              	.LFE112:
 26949              		.size	cmd_get_ADC_map, .-cmd_get_ADC_map
 26950              		.section	.text.cmd_get_ADC_raw,"ax",%progbits
 26951              		.align	2
 26952              		.global	cmd_get_ADC_raw
 26953              		.thumb
 26954              		.thumb_func
 26955              		.type	cmd_get_ADC_raw, %function
 26956              	cmd_get_ADC_raw:
 26957              	.LFB113:
4024:..\src/command_processing.c **** 
4025:..\src/command_processing.c **** void cmd_get_ADC_raw(){
 26958              		.loc 1 4025 0
 26959              		.cfi_startproc
 26960              		@ args = 0, pretend = 0, frame = 32
 26961              		@ frame_needed = 1, uses_anonymous_args = 0
 26962 0000 90B5     		push	{r4, r7, lr}
 26963              		.cfi_def_cfa_offset 12
 26964              		.cfi_offset 4, -12
 26965              		.cfi_offset 7, -8
 26966              		.cfi_offset 14, -4
 26967 0002 89B0     		sub	sp, sp, #36
 26968              		.cfi_def_cfa_offset 48
 26969 0004 00AF     		add	r7, sp, #0
 26970              		.cfi_def_cfa_register 7
4026:..\src/command_processing.c ****     //Retrieve Additional EMG port raw values
4027:..\src/command_processing.c ****     
4028:..\src/command_processing.c ****     uint8 packet_data[2+2*NUM_OF_ADC_CHANNELS_MAX];
4029:..\src/command_processing.c ****     uint8 CYDATA i, idx = 0;
 26971              		.loc 1 4029 0
 26972 0006 0023     		movs	r3, #0
 26973 0008 BB77     		strb	r3, [r7, #30]
4030:..\src/command_processing.c ****     int16 aux_int16;
4031:..\src/command_processing.c ****     
4032:..\src/command_processing.c ****     // Header        
4033:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_RAW;
 26974              		.loc 1 4033 0
 26975 000a A623     		movs	r3, #166
 26976 000c 3B71     		strb	r3, [r7, #4]
4034:..\src/command_processing.c ****     
4035:..\src/command_processing.c ****     // Fill payload
4036:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ANALOG_INPUTS; i++) {       
 26977              		.loc 1 4036 0
 26978 000e 0023     		movs	r3, #0
 26979 0010 FB77     		strb	r3, [r7, #31]
 26980 0012 27E0     		b	.L1063
 26981              	.L1065:
4037:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 26982              		.loc 1 4037 0
 26983 0014 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26984 0016 274A     		ldr	r2, .L1066
 26985 0018 1344     		add	r3, r3, r2
 26986 001a 93F82832 		ldrb	r3, [r3, #552]	@ zero_extendqisi2
 26987 001e 012B     		cmp	r3, #1
 26988 0020 1DD1     		bne	.L1064
4038:..\src/command_processing.c ****             aux_int16 = (int16) ADC_buf[i];
 26989              		.loc 1 4038 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 590


 26990 0022 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26991 0024 244A     		ldr	r2, .L1066+4
 26992 0026 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 26993 002a 7B80     		strh	r3, [r7, #2]	@ movhi
4039:..\src/command_processing.c ****             packet_data[(idx << 1) + 2] = ((char*)(&aux_int16))[0];
 26994              		.loc 1 4039 0
 26995 002c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 26996 002e 5B00     		lsls	r3, r3, #1
 26997 0030 0233     		adds	r3, r3, #2
 26998 0032 BA1C     		adds	r2, r7, #2
 26999 0034 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 27000 0036 07F12001 		add	r1, r7, #32
 27001 003a 0B44     		add	r3, r3, r1
 27002 003c 03F81C2C 		strb	r2, [r3, #-28]
4040:..\src/command_processing.c ****             packet_data[(idx << 1) + 1] = ((char*)(&aux_int16))[1];
 27003              		.loc 1 4040 0
 27004 0040 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 27005 0042 5B00     		lsls	r3, r3, #1
 27006 0044 5A1C     		adds	r2, r3, #1
 27007 0046 BB1C     		adds	r3, r7, #2
 27008 0048 0133     		adds	r3, r3, #1
 27009 004a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 27010 004c 07F12003 		add	r3, r7, #32
 27011 0050 1344     		add	r3, r3, r2
 27012 0052 0A46     		mov	r2, r1
 27013 0054 03F81C2C 		strb	r2, [r3, #-28]
4041:..\src/command_processing.c ****             idx++;
 27014              		.loc 1 4041 0
 27015 0058 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 27016 005a 0133     		adds	r3, r3, #1
 27017 005c BB77     		strb	r3, [r7, #30]
 27018              	.L1064:
4036:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 27019              		.loc 1 4036 0 discriminator 2
 27020 005e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 27021 0060 0133     		adds	r3, r3, #1
 27022 0062 FB77     		strb	r3, [r7, #31]
 27023              	.L1063:
4036:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 27024              		.loc 1 4036 0 is_stmt 0 discriminator 1
 27025 0064 154B     		ldr	r3, .L1066+8
 27026 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27027 0068 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 27028 006a 9A42     		cmp	r2, r3
 27029 006c D2D3     		bcc	.L1065
4042:..\src/command_processing.c ****         }
4043:..\src/command_processing.c ****     }
4044:..\src/command_processing.c **** 
4045:..\src/command_processing.c ****     // Calculate checksum
4046:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 27030              		.loc 1 4046 0 is_stmt 1
 27031 006e BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 27032 0070 5B00     		lsls	r3, r3, #1
 27033 0072 5C1C     		adds	r4, r3, #1
 27034 0074 BB7F     		ldrb	r3, [r7, #30]
 27035 0076 5B00     		lsls	r3, r3, #1
 27036 0078 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 591


 27037 007a 0133     		adds	r3, r3, #1
 27038 007c DAB2     		uxtb	r2, r3
 27039 007e 3B1D     		adds	r3, r7, #4
 27040 0080 1146     		mov	r1, r2
 27041 0082 1846     		mov	r0, r3
 27042 0084 FFF7FEFF 		bl	LCRChecksum
 27043 0088 0346     		mov	r3, r0
 27044 008a 1A46     		mov	r2, r3
 27045 008c 07F12003 		add	r3, r7, #32
 27046 0090 2344     		add	r3, r3, r4
 27047 0092 03F81C2C 		strb	r2, [r3, #-28]
4047:..\src/command_processing.c ****     
4048:..\src/command_processing.c ****     // Send package to UART
4049:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 27048              		.loc 1 4049 0
 27049 0096 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 27050 0098 0133     		adds	r3, r3, #1
 27051 009a 9BB2     		uxth	r3, r3
 27052 009c 5B00     		lsls	r3, r3, #1
 27053 009e 9AB2     		uxth	r2, r3
 27054 00a0 3B1D     		adds	r3, r7, #4
 27055 00a2 1146     		mov	r1, r2
 27056 00a4 1846     		mov	r0, r3
 27057 00a6 FFF7FEFF 		bl	commWrite
4050:..\src/command_processing.c **** }
 27058              		.loc 1 4050 0
 27059 00aa 00BF     		nop
 27060 00ac 2437     		adds	r7, r7, #36
 27061              		.cfi_def_cfa_offset 12
 27062 00ae BD46     		mov	sp, r7
 27063              		.cfi_def_cfa_register 13
 27064              		@ sp needed
 27065 00b0 90BD     		pop	{r4, r7, pc}
 27066              	.L1067:
 27067 00b2 00BF     		.align	2
 27068              	.L1066:
 27069 00b4 00000000 		.word	c_mem
 27070 00b8 00000000 		.word	ADC_buf
 27071 00bc 00000000 		.word	NUM_OF_ANALOG_INPUTS
 27072              		.cfi_endproc
 27073              	.LFE113:
 27074              		.size	cmd_get_ADC_raw, .-cmd_get_ADC_raw
 27075              		.section	.rodata
 27076 203b 00       		.align	2
 27077              	.LC312:
 27078 203c 00       		.ascii	"\000"
 27079              		.section	.text.cmd_get_SD_file,"ax",%progbits
 27080              		.align	2
 27081              		.global	cmd_get_SD_file
 27082              		.thumb
 27083              		.thumb_func
 27084              		.type	cmd_get_SD_file, %function
 27085              	cmd_get_SD_file:
 27086              	.LFB114:
4051:..\src/command_processing.c **** 
4052:..\src/command_processing.c **** void cmd_get_SD_file( uint16 filename_length ){
 27087              		.loc 1 4052 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 592


 27088              		.cfi_startproc
 27089              		@ args = 0, pretend = 0, frame = 20064
 27090              		@ frame_needed = 1, uses_anonymous_args = 0
 27091 0000 80B5     		push	{r7, lr}
 27092              		.cfi_def_cfa_offset 8
 27093              		.cfi_offset 7, -8
 27094              		.cfi_offset 14, -4
 27095 0002 ADF59C4D 		sub	sp, sp, #19968
 27096              		.cfi_def_cfa_offset 19976
 27097 0006 98B0     		sub	sp, sp, #96
 27098              		.cfi_def_cfa_offset 20072
 27099 0008 00AF     		add	r7, sp, #0
 27100              		.cfi_def_cfa_register 7
 27101 000a 0246     		mov	r2, r0
 27102 000c 07F16003 		add	r3, r7, #96
 27103 0010 5A3B     		subs	r3, r3, #90
 27104 0012 1A80     		strh	r2, [r3]	@ movhi
4053:..\src/command_processing.c ****     
4054:..\src/command_processing.c ****     uint8 i = 0;
 27105              		.loc 1 4054 0
 27106 0014 0023     		movs	r3, #0
 27107 0016 07F59C42 		add	r2, r7, #19968
 27108 001a 02F15F02 		add	r2, r2, #95
 27109 001e 1370     		strb	r3, [r2]
4055:..\src/command_processing.c ****     char CYDATA filename[50] = "";
 27110              		.loc 1 4055 0
 27111 0020 0023     		movs	r3, #0
 27112 0022 07F59C42 		add	r2, r7, #19968
 27113 0026 02F12C02 		add	r2, r2, #44
 27114 002a 1360     		str	r3, [r2]
 27115 002c 07F59C43 		add	r3, r7, #19968
 27116 0030 03F13003 		add	r3, r3, #48
 27117 0034 2E22     		movs	r2, #46
 27118 0036 0021     		movs	r1, #0
 27119 0038 1846     		mov	r0, r3
 27120 003a FFF7FEFF 		bl	memset
4056:..\src/command_processing.c ****     char CYDATA str_sd_data[20000] = "";
 27121              		.loc 1 4056 0
 27122 003e 07F16003 		add	r3, r7, #96
 27123 0042 543B     		subs	r3, r3, #84
 27124 0044 0022     		movs	r2, #0
 27125 0046 1A60     		str	r2, [r3]
 27126 0048 0433     		adds	r3, r3, #4
 27127 004a 44F61C62 		movw	r2, #19996
 27128 004e 0021     		movs	r1, #0
 27129 0050 1846     		mov	r0, r3
 27130 0052 FFF7FEFF 		bl	memset
4057:..\src/command_processing.c ****     strcpy(filename, "");
 27131              		.loc 1 4057 0
 27132 0056 3C4B     		ldr	r3, .L1073
 27133 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27134 005a 07F59C42 		add	r2, r7, #19968
 27135 005e 02F12C02 		add	r2, r2, #44
 27136 0062 1370     		strb	r3, [r2]
4058:..\src/command_processing.c ****     strcpy(str_sd_data, "");
 27137              		.loc 1 4058 0
 27138 0064 384B     		ldr	r3, .L1073
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 593


 27139 0066 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 27140 0068 07F16003 		add	r3, r7, #96
 27141 006c 543B     		subs	r3, r3, #84
 27142 006e 1A70     		strb	r2, [r3]
4059:..\src/command_processing.c ****     
4060:..\src/command_processing.c ****     for (i=0; i<filename_length; i++){
 27143              		.loc 1 4060 0
 27144 0070 0023     		movs	r3, #0
 27145 0072 07F59C42 		add	r2, r7, #19968
 27146 0076 02F15F02 		add	r2, r2, #95
 27147 007a 1370     		strb	r3, [r2]
 27148 007c 1DE0     		b	.L1069
 27149              	.L1070:
4061:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 27150              		.loc 1 4061 0 discriminator 3
 27151 007e 07F59C43 		add	r3, r7, #19968
 27152 0082 03F15F03 		add	r3, r3, #95
 27153 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27154 0088 07F59C42 		add	r2, r7, #19968
 27155 008c 02F12C02 		add	r2, r2, #44
 27156 0090 1344     		add	r3, r3, r2
 27157 0092 07F59C42 		add	r2, r7, #19968
 27158 0096 02F15F02 		add	r2, r2, #95
 27159 009a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 27160 009c 0332     		adds	r2, r2, #3
 27161 009e 2B49     		ldr	r1, .L1073+4
 27162 00a0 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 27163 00a2 1A70     		strb	r2, [r3]
4060:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 27164              		.loc 1 4060 0 discriminator 3
 27165 00a4 07F59C43 		add	r3, r7, #19968
 27166 00a8 03F15F03 		add	r3, r3, #95
 27167 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27168 00ae 0133     		adds	r3, r3, #1
 27169 00b0 07F59C42 		add	r2, r7, #19968
 27170 00b4 02F15F02 		add	r2, r2, #95
 27171 00b8 1370     		strb	r3, [r2]
 27172              	.L1069:
4060:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 27173              		.loc 1 4060 0 is_stmt 0 discriminator 1
 27174 00ba 07F59C43 		add	r3, r7, #19968
 27175 00be 03F15F03 		add	r3, r3, #95
 27176 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27177 00c4 9AB2     		uxth	r2, r3
 27178 00c6 07F16003 		add	r3, r7, #96
 27179 00ca 5A3B     		subs	r3, r3, #90
 27180 00cc 1B88     		ldrh	r3, [r3]
 27181 00ce 9342     		cmp	r3, r2
 27182 00d0 D5D8     		bhi	.L1070
4062:..\src/command_processing.c ****     }
4063:..\src/command_processing.c ****     *((uint8*)filename + i) = '\0';
 27183              		.loc 1 4063 0 is_stmt 1
 27184 00d2 07F59C43 		add	r3, r7, #19968
 27185 00d6 03F15F03 		add	r3, r3, #95
 27186 00da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27187 00dc 07F59C42 		add	r2, r7, #19968
 27188 00e0 02F12C02 		add	r2, r2, #44
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 594


 27189 00e4 1344     		add	r3, r3, r2
 27190 00e6 0022     		movs	r2, #0
 27191 00e8 1A70     		strb	r2, [r3]
4064:..\src/command_processing.c ****      
4065:..\src/command_processing.c ****     // Check if the file is the one currently opened or not
4066:..\src/command_processing.c ****     if (strcmp(filename, sdFile)){
 27192              		.loc 1 4066 0
 27193 00ea 07F59C43 		add	r3, r7, #19968
 27194 00ee 03F12C03 		add	r3, r3, #44
 27195 00f2 1749     		ldr	r1, .L1073+8
 27196 00f4 1846     		mov	r0, r3
 27197 00f6 FFF7FEFF 		bl	strcmp
 27198 00fa 0346     		mov	r3, r0
 27199 00fc 002B     		cmp	r3, #0
 27200 00fe 0CD0     		beq	.L1071
4067:..\src/command_processing.c ****         Read_SD_Closed_File(filename, str_sd_data, sizeof(str_sd_data));
 27201              		.loc 1 4067 0
 27202 0100 07F16003 		add	r3, r7, #96
 27203 0104 543B     		subs	r3, r3, #84
 27204 0106 07F59C40 		add	r0, r7, #19968
 27205 010a 00F12C00 		add	r0, r0, #44
 27206 010e 44F62062 		movw	r2, #20000
 27207 0112 1946     		mov	r1, r3
 27208 0114 FFF7FEFF 		bl	Read_SD_Closed_File
 27209 0118 07E0     		b	.L1072
 27210              	.L1071:
4068:..\src/command_processing.c ****     }
4069:..\src/command_processing.c ****     else {
4070:..\src/command_processing.c ****         //It is the currently open working file
4071:..\src/command_processing.c ****         Read_SD_Current_Data(str_sd_data, sizeof(str_sd_data));
 27211              		.loc 1 4071 0
 27212 011a 07F16003 		add	r3, r7, #96
 27213 011e 543B     		subs	r3, r3, #84
 27214 0120 44F62061 		movw	r1, #20000
 27215 0124 1846     		mov	r0, r3
 27216 0126 FFF7FEFF 		bl	Read_SD_Current_Data
 27217              	.L1072:
4072:..\src/command_processing.c ****     }
4073:..\src/command_processing.c **** 
4074:..\src/command_processing.c ****     //itoa(filename_length, filename, 10);
4075:..\src/command_processing.c ****     // Send the file to API that receives packet as a ping string
4076:..\src/command_processing.c ****     UART_RS485_ClearTxBuffer();
 27218              		.loc 1 4076 0
 27219 012a FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
4077:..\src/command_processing.c ****     UART_RS485_PutString(str_sd_data);
 27220              		.loc 1 4077 0
 27221 012e 07F16003 		add	r3, r7, #96
 27222 0132 543B     		subs	r3, r3, #84
 27223 0134 1846     		mov	r0, r3
 27224 0136 FFF7FEFF 		bl	UART_RS485_PutString
4078:..\src/command_processing.c **** }
 27225              		.loc 1 4078 0
 27226 013a 00BF     		nop
 27227 013c 07F59C47 		add	r7, r7, #19968
 27228 0140 6037     		adds	r7, r7, #96
 27229              		.cfi_def_cfa_offset 8
 27230 0142 BD46     		mov	sp, r7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 595


 27231              		.cfi_def_cfa_register 13
 27232              		@ sp needed
 27233 0144 80BD     		pop	{r7, pc}
 27234              	.L1074:
 27235 0146 00BF     		.align	2
 27236              	.L1073:
 27237 0148 3C200000 		.word	.LC312
 27238 014c 00000000 		.word	g_rx
 27239 0150 00000000 		.word	sdFile
 27240              		.cfi_endproc
 27241              	.LFE114:
 27242              		.size	cmd_get_SD_file, .-cmd_get_SD_file
 27243              		.section	.text.air_chambers_control,"ax",%progbits
 27244              		.align	2
 27245              		.global	air_chambers_control
 27246              		.thumb
 27247              		.thumb_func
 27248              		.type	air_chambers_control, %function
 27249              	air_chambers_control:
 27250              	.LFB115:
4079:..\src/command_processing.c **** 
4080:..\src/command_processing.c **** //==============================================================================
4081:..\src/command_processing.c **** //                                                          AIR CHAMBERS CONTROL
4082:..\src/command_processing.c **** //==============================================================================
4083:..\src/command_processing.c **** /* It asks current difference to the SoftHand and sets force feedback device inputs proportionally 
4084:..\src/command_processing.c **** 
4085:..\src/command_processing.c **** void air_chambers_control(int slave_motor_idx) {
 27251              		.loc 1 4085 0
 27252              		.cfi_startproc
 27253              		@ args = 0, pretend = 0, frame = 8
 27254              		@ frame_needed = 1, uses_anonymous_args = 0
 27255              		@ link register save eliminated.
 27256 0000 80B4     		push	{r7}
 27257              		.cfi_def_cfa_offset 4
 27258              		.cfi_offset 7, -4
 27259 0002 83B0     		sub	sp, sp, #12
 27260              		.cfi_def_cfa_offset 16
 27261 0004 00AF     		add	r7, sp, #0
 27262              		.cfi_def_cfa_register 7
 27263 0006 7860     		str	r0, [r7, #4]
4086:..\src/command_processing.c ****     
4087:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
4088:..\src/command_processing.c ****     
4089:..\src/command_processing.c ****     int16 curr_diff;
4090:..\src/command_processing.c ****     int32 pressure_reference, err_pressure, pressure_value;
4091:..\src/command_processing.c ****     int32 valve_command;
4092:..\src/command_processing.c ****     int16 x_value;
4093:..\src/command_processing.c **** 
4094:..\src/command_processing.c ****     // Use pressure and residual current read from the SoftHand
4095:..\src/command_processing.c ****     
4096:..\src/command_processing.c ****     curr_diff = (int16)commReadResCurrFromSH();
4097:..\src/command_processing.c ****     
4098:..\src/command_processing.c ****     // Current difference saturation old mapping
4099:..\src/command_processing.c **** //    if(curr_diff > c_mem.FB.max_residual_current) {
4100:..\src/command_processing.c **** //        curr_diff = c_mem.FB.max_residual_current;
4101:..\src/command_processing.c **** //    }
4102:..\src/command_processing.c **** //    if(curr_diff < 0) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 596


4103:..\src/command_processing.c **** //        curr_diff = 0;
4104:..\src/command_processing.c **** //    }
4105:..\src/command_processing.c **** 
4106:..\src/command_processing.c ****     // Compute pressure reference
4107:..\src/command_processing.c **** 
4108:..\src/command_processing.c ****     x_value = curr_diff - 50.0;
4109:..\src/command_processing.c ****     if (x_value < 0)
4110:..\src/command_processing.c ****         x_value = 0;
4111:..\src/command_processing.c ****     
4112:..\src/command_processing.c ****     // old mapping --- linear mapping
4113:..\src/command_processing.c ****     //pressure_reference = (int32)(curr_diff * (c_mem.FB.maximum_pressure_kPa/c_mem.FB.max_residual
4114:..\src/command_processing.c ****     pressure_reference = (int32)((int32)(-30.0*x_value*x_value + 55.0*c_mem.FB.max_residual_current
4115:..\src/command_processing.c ****     if (pressure_reference < 0)
4116:..\src/command_processing.c ****         pressure_reference = 0;
4117:..\src/command_processing.c ****     if (pressure_reference > c_mem.FB.maximum_pressure_kPa)
4118:..\src/command_processing.c ****         pressure_reference = c_mem.FB.maximum_pressure_kPa;
4119:..\src/command_processing.c ****     
4120:..\src/command_processing.c ****     pressure_value = (int32)g_fb_meas.pressure;
4121:..\src/command_processing.c ****     err_pressure = pressure_reference - pressure_value;       // error in kPa
4122:..\src/command_processing.c **** //    if (err_pressure < 0){
4123:..\src/command_processing.c **** //        err_pressure = 0;
4124:..\src/command_processing.c **** //    }
4125:..\src/command_processing.c ****     
4126:..\src/command_processing.c ****     if (x_value <= 0){
4127:..\src/command_processing.c ****         //i.e the hand is opening
4128:..\src/command_processing.c ****         valve_command = 0;  //valve open: air passes
4129:..\src/command_processing.c ****     }
4130:..\src/command_processing.c ****     else {
4131:..\src/command_processing.c ****         //i.e the hand is closing, so valve should stay closed independently from the pressure erro
4132:..\src/command_processing.c ****         //if err_pressure greater than 0, it means pressure should increase, so valve should stay c
4133:..\src/command_processing.c ****         //if err_pressure==0, it means you reached the right pressure, so valve should stay closed
4134:..\src/command_processing.c ****         valve_command = 1;  //3.6V (5V - 2 diodes) - valve close: air doesn't pass
4135:..\src/command_processing.c ****     }
4136:..\src/command_processing.c ****     
4137:..\src/command_processing.c ****     // Pump control
4138:..\src/command_processing.c ****     g_refNew[0].pwm = (int32)(c_mem.FB.prop_err_fb_gain*err_pressure);
4139:..\src/command_processing.c ****     //c_mem.FB.prop_err_fb_gain default 1.0 gain since, max err_pressure is 25 and pwm range is app
4140:..\src/command_processing.c ****     
4141:..\src/command_processing.c ****     // Limit output voltage
4142:..\src/command_processing.c ****     if (g_refNew[0].pwm > 80) // 80 (3.5V) 80% of 4.3V (5V - 1 diode)
4143:..\src/command_processing.c ****         g_refNew[0].pwm = 80; // 80
4144:..\src/command_processing.c ****     if (g_refNew[0].pwm < 20)
4145:..\src/command_processing.c ****         g_refNew[0].pwm = 0;
4146:..\src/command_processing.c ****         
4147:..\src/command_processing.c ****     VALVE_Write(valve_command);
4148:..\src/command_processing.c ****     
4149:..\src/command_processing.c ****     
4150:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
4151:..\src/command_processing.c ****     // Use second motor structures and parameters, only to generate position reference not for PID 
4152:..\src/command_processing.c ****     // IMPORTANT: configure second motor parameters with proper slave parameters
4153:..\src/command_processing.c ****     motor_control_generic(slave_motor_idx);
4154:..\src/command_processing.c **** #endif
4155:..\src/command_processing.c **** }
 27264              		.loc 1 4155 0
 27265 0008 00BF     		nop
 27266 000a 0C37     		adds	r7, r7, #12
 27267              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 597


 27268 000c BD46     		mov	sp, r7
 27269              		.cfi_def_cfa_register 13
 27270              		@ sp needed
 27271 000e 80BC     		pop	{r7}
 27272              		.cfi_restore 7
 27273              		.cfi_def_cfa_offset 0
 27274 0010 7047     		bx	lr
 27275              		.cfi_endproc
 27276              	.LFE115:
 27277              		.size	air_chambers_control, .-air_chambers_control
 27278 0012 00BF     		.section	.text.emg_activation_velocity_fsm,"ax",%progbits
 27279              		.align	2
 27280              		.global	emg_activation_velocity_fsm
 27281              		.thumb
 27282              		.thumb_func
 27283              		.type	emg_activation_velocity_fsm, %function
 27284              	emg_activation_velocity_fsm:
 27285              	.LFB116:
4156:..\src/command_processing.c **** 
4157:..\src/command_processing.c **** 
4158:..\src/command_processing.c **** //==============================================================================
4159:..\src/command_processing.c **** //                                                   EMG ACTIVATION VELOCITY FSM
4160:..\src/command_processing.c **** //==============================================================================
4161:..\src/command_processing.c **** /* It decides which is the current emg activation velocity.*/
4162:..\src/command_processing.c **** 
4163:..\src/command_processing.c **** uint8 emg_activation_velocity_fsm() {
 27286              		.loc 1 4163 0
 27287              		.cfi_startproc
 27288              		@ args = 0, pretend = 0, frame = 16
 27289              		@ frame_needed = 1, uses_anonymous_args = 0
 27290              		@ link register save eliminated.
 27291 0000 80B4     		push	{r7}
 27292              		.cfi_def_cfa_offset 4
 27293              		.cfi_offset 7, -4
 27294 0002 85B0     		sub	sp, sp, #20
 27295              		.cfi_def_cfa_offset 24
 27296 0004 00AF     		add	r7, sp, #0
 27297              		.cfi_def_cfa_register 7
4164:..\src/command_processing.c ****       
4165:..\src/command_processing.c ****     static uint8 fsm_state = RELAX_STATE;     // Wrist FSM state
4166:..\src/command_processing.c ****     static int32 cnt = 0;
4167:..\src/command_processing.c ****     int32 CYDATA err_emg_1, err_emg_2; 
4168:..\src/command_processing.c ****     int32 CYDATA f_err_emg_1, f_err_emg_2; 
4169:..\src/command_processing.c ****     
4170:..\src/command_processing.c ****     err_emg_1 = g_adc_meas.emg[0] - c_mem.emg.emg_threshold[0];
 27298              		.loc 1 4170 0
 27299 0006 534B     		ldr	r3, .L1105
 27300 0008 1B68     		ldr	r3, [r3]
 27301 000a 534A     		ldr	r2, .L1105+4
 27302 000c B2F8F021 		ldrh	r2, [r2, #496]
 27303 0010 9B1A     		subs	r3, r3, r2
 27304 0012 FB60     		str	r3, [r7, #12]
4171:..\src/command_processing.c ****     err_emg_2 = g_adc_meas.emg[1] - c_mem.emg.emg_threshold[1];
 27305              		.loc 1 4171 0
 27306 0014 4F4B     		ldr	r3, .L1105
 27307 0016 5B68     		ldr	r3, [r3, #4]
 27308 0018 4F4A     		ldr	r2, .L1105+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 598


 27309 001a B2F8F221 		ldrh	r2, [r2, #498]
 27310 001e 9B1A     		subs	r3, r3, r2
 27311 0020 BB60     		str	r3, [r7, #8]
4172:..\src/command_processing.c ****     f_err_emg_1 = g_adc_meas.emg[0] - c_mem.WR.fast_act_threshold[0];
 27312              		.loc 1 4172 0
 27313 0022 4C4B     		ldr	r3, .L1105
 27314 0024 1B68     		ldr	r3, [r3]
 27315 0026 4C4A     		ldr	r2, .L1105+4
 27316 0028 B2F8E222 		ldrh	r2, [r2, #738]
 27317 002c 9B1A     		subs	r3, r3, r2
 27318 002e 7B60     		str	r3, [r7, #4]
4173:..\src/command_processing.c ****     f_err_emg_2 = g_adc_meas.emg[1] - c_mem.WR.fast_act_threshold[1];
 27319              		.loc 1 4173 0
 27320 0030 484B     		ldr	r3, .L1105
 27321 0032 5B68     		ldr	r3, [r3, #4]
 27322 0034 484A     		ldr	r2, .L1105+4
 27323 0036 B2F8E422 		ldrh	r2, [r2, #740]
 27324 003a 9B1A     		subs	r3, r3, r2
 27325 003c 3B60     		str	r3, [r7]
4174:..\src/command_processing.c ****     
4175:..\src/command_processing.c **** 
4176:..\src/command_processing.c ****     // State machine - Evaluate emg activation status
4177:..\src/command_processing.c ****     // Note: in this way, diff_emg_1 and diff_emg_2 are for sure differences between two consecutiv
4178:..\src/command_processing.c ****     switch (fsm_state){
 27326              		.loc 1 4178 0
 27327 003e 474B     		ldr	r3, .L1105+8
 27328 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27329 0042 032B     		cmp	r3, #3
 27330 0044 7FD8     		bhi	.L1077
 27331 0046 01A2     		adr	r2, .L1079
 27332 0048 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 27333              		.p2align 2
 27334              	.L1079:
 27335 004c 5D000000 		.word	.L1078+1
 27336 0050 71000000 		.word	.L1080+1
 27337 0054 11010000 		.word	.L1081+1
 27338 0058 25010000 		.word	.L1082+1
 27339              		.p2align 1
 27340              	.L1078:
4179:..\src/command_processing.c ****         case RELAX_STATE:
4180:..\src/command_processing.c ****             if (err_emg_1 > 0 || err_emg_2 > 0){
 27341              		.loc 1 4180 0
 27342 005c FB68     		ldr	r3, [r7, #12]
 27343 005e 002B     		cmp	r3, #0
 27344 0060 02DC     		bgt	.L1083
 27345              		.loc 1 4180 0 is_stmt 0 discriminator 1
 27346 0062 BB68     		ldr	r3, [r7, #8]
 27347 0064 002B     		cmp	r3, #0
 27348 0066 67DD     		ble	.L1101
 27349              	.L1083:
4181:..\src/command_processing.c ****                 fsm_state = TIMER_STATE;
 27350              		.loc 1 4181 0 is_stmt 1
 27351 0068 3C4B     		ldr	r3, .L1105+8
 27352 006a 0122     		movs	r2, #1
 27353 006c 1A70     		strb	r2, [r3]
4182:..\src/command_processing.c ****             }
4183:..\src/command_processing.c ****             
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 599


4184:..\src/command_processing.c ****             break;
 27354              		.loc 1 4184 0
 27355 006e 63E0     		b	.L1101
 27356              	.L1080:
4185:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
4186:..\src/command_processing.c ****             if (err_emg_1 > 0 || err_emg_2 > 0){
 27357              		.loc 1 4186 0
 27358 0070 FB68     		ldr	r3, [r7, #12]
 27359 0072 002B     		cmp	r3, #0
 27360 0074 02DC     		bgt	.L1085
 27361              		.loc 1 4186 0 is_stmt 0 discriminator 1
 27362 0076 BB68     		ldr	r3, [r7, #8]
 27363 0078 002B     		cmp	r3, #0
 27364 007a 05DD     		ble	.L1086
 27365              	.L1085:
4187:..\src/command_processing.c ****                 cnt = cnt +1;
 27366              		.loc 1 4187 0 is_stmt 1
 27367 007c 384B     		ldr	r3, .L1105+12
 27368 007e 1B68     		ldr	r3, [r3]
 27369 0080 0133     		adds	r3, r3, #1
 27370 0082 374A     		ldr	r2, .L1105+12
 27371 0084 1360     		str	r3, [r2]
 27372 0086 02E0     		b	.L1087
 27373              	.L1086:
4188:..\src/command_processing.c ****             }
4189:..\src/command_processing.c ****             else {
4190:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
 27374              		.loc 1 4190 0
 27375 0088 344B     		ldr	r3, .L1105+8
 27376 008a 0022     		movs	r2, #0
 27377 008c 1A70     		strb	r2, [r3]
 27378              	.L1087:
4191:..\src/command_processing.c ****             }
4192:..\src/command_processing.c ****             
4193:..\src/command_processing.c ****             if (cnt > 100){
 27379              		.loc 1 4193 0
 27380 008e 344B     		ldr	r3, .L1105+12
 27381 0090 1B68     		ldr	r3, [r3]
 27382 0092 642B     		cmp	r3, #100
 27383 0094 52DD     		ble	.L1102
4194:..\src/command_processing.c ****                 if ((err_emg_1 > 0 && f_err_emg_1 > 0) || (err_emg_2 > 0 && f_err_emg_2 > 0)){
 27384              		.loc 1 4194 0
 27385 0096 FB68     		ldr	r3, [r7, #12]
 27386 0098 002B     		cmp	r3, #0
 27387 009a 02DD     		ble	.L1089
 27388              		.loc 1 4194 0 is_stmt 0 discriminator 1
 27389 009c 7B68     		ldr	r3, [r7, #4]
 27390 009e 002B     		cmp	r3, #0
 27391 00a0 05DC     		bgt	.L1090
 27392              	.L1089:
 27393              		.loc 1 4194 0 discriminator 3
 27394 00a2 BB68     		ldr	r3, [r7, #8]
 27395 00a4 002B     		cmp	r3, #0
 27396 00a6 0EDD     		ble	.L1091
 27397              		.loc 1 4194 0 discriminator 4
 27398 00a8 3B68     		ldr	r3, [r7]
 27399 00aa 002B     		cmp	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 600


 27400 00ac 0BDD     		ble	.L1091
 27401              	.L1090:
4195:..\src/command_processing.c ****                     // Fast activation
4196:..\src/command_processing.c ****                     if (c_mem.WR.activation_mode == 0){
 27402              		.loc 1 4196 0 is_stmt 1
 27403 00ae 2A4B     		ldr	r3, .L1105+4
 27404 00b0 93F8E032 		ldrb	r3, [r3, #736]	@ zero_extendqisi2
 27405 00b4 002B     		cmp	r3, #0
 27406 00b6 03D1     		bne	.L1092
4197:..\src/command_processing.c ****                         fsm_state = MOVE_FAST_ACT;
 27407              		.loc 1 4197 0
 27408 00b8 284B     		ldr	r3, .L1105+8
 27409 00ba 0222     		movs	r2, #2
 27410 00bc 1A70     		strb	r2, [r3]
 27411 00be 02E0     		b	.L1091
 27412              	.L1092:
4198:..\src/command_processing.c ****                     }
4199:..\src/command_processing.c ****                     else{
4200:..\src/command_processing.c ****                         fsm_state = MOVE_SLOW_ACT;
 27413              		.loc 1 4200 0
 27414 00c0 264B     		ldr	r3, .L1105+8
 27415 00c2 0322     		movs	r2, #3
 27416 00c4 1A70     		strb	r2, [r3]
 27417              	.L1091:
4201:..\src/command_processing.c ****                     }
4202:..\src/command_processing.c ****                 }
4203:..\src/command_processing.c ****                 if ((err_emg_1 > 0 && f_err_emg_1 < 0) || (err_emg_2 > 0 && f_err_emg_2 < 0)){
 27418              		.loc 1 4203 0
 27419 00c6 FB68     		ldr	r3, [r7, #12]
 27420 00c8 002B     		cmp	r3, #0
 27421 00ca 02DD     		ble	.L1093
 27422              		.loc 1 4203 0 is_stmt 0 discriminator 1
 27423 00cc 7B68     		ldr	r3, [r7, #4]
 27424 00ce 002B     		cmp	r3, #0
 27425 00d0 05DB     		blt	.L1094
 27426              	.L1093:
 27427              		.loc 1 4203 0 discriminator 3
 27428 00d2 BB68     		ldr	r3, [r7, #8]
 27429 00d4 002B     		cmp	r3, #0
 27430 00d6 0EDD     		ble	.L1095
 27431              		.loc 1 4203 0 discriminator 4
 27432 00d8 3B68     		ldr	r3, [r7]
 27433 00da 002B     		cmp	r3, #0
 27434 00dc 0BDA     		bge	.L1095
 27435              	.L1094:
4204:..\src/command_processing.c ****                     // Slow activation
4205:..\src/command_processing.c ****                     if (c_mem.WR.activation_mode == 0){
 27436              		.loc 1 4205 0 is_stmt 1
 27437 00de 1E4B     		ldr	r3, .L1105+4
 27438 00e0 93F8E032 		ldrb	r3, [r3, #736]	@ zero_extendqisi2
 27439 00e4 002B     		cmp	r3, #0
 27440 00e6 03D1     		bne	.L1096
4206:..\src/command_processing.c ****                         fsm_state = MOVE_SLOW_ACT;
 27441              		.loc 1 4206 0
 27442 00e8 1C4B     		ldr	r3, .L1105+8
 27443 00ea 0322     		movs	r2, #3
 27444 00ec 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 601


 27445 00ee 02E0     		b	.L1095
 27446              	.L1096:
4207:..\src/command_processing.c ****                     }
4208:..\src/command_processing.c ****                     else{
4209:..\src/command_processing.c ****                         fsm_state = MOVE_FAST_ACT;
 27447              		.loc 1 4209 0
 27448 00f0 1A4B     		ldr	r3, .L1105+8
 27449 00f2 0222     		movs	r2, #2
 27450 00f4 1A70     		strb	r2, [r3]
 27451              	.L1095:
4210:..\src/command_processing.c ****                     }
4211:..\src/command_processing.c ****                 }
4212:..\src/command_processing.c ****                 if (err_emg_1 < 0 && err_emg_2 < 0){
 27452              		.loc 1 4212 0
 27453 00f6 FB68     		ldr	r3, [r7, #12]
 27454 00f8 002B     		cmp	r3, #0
 27455 00fa 05DA     		bge	.L1097
 27456              		.loc 1 4212 0 is_stmt 0 discriminator 1
 27457 00fc BB68     		ldr	r3, [r7, #8]
 27458 00fe 002B     		cmp	r3, #0
 27459 0100 02DA     		bge	.L1097
4213:..\src/command_processing.c ****                     // Involuntary activation
4214:..\src/command_processing.c ****                     fsm_state = RELAX_STATE;
 27460              		.loc 1 4214 0 is_stmt 1
 27461 0102 164B     		ldr	r3, .L1105+8
 27462 0104 0022     		movs	r2, #0
 27463 0106 1A70     		strb	r2, [r3]
 27464              	.L1097:
4215:..\src/command_processing.c ****                 }
4216:..\src/command_processing.c ****                 cnt = 0;
 27465              		.loc 1 4216 0
 27466 0108 154B     		ldr	r3, .L1105+12
 27467 010a 0022     		movs	r2, #0
 27468 010c 1A60     		str	r2, [r3]
4217:..\src/command_processing.c ****             }
4218:..\src/command_processing.c ****     
4219:..\src/command_processing.c ****             break;
 27469              		.loc 1 4219 0
 27470 010e 15E0     		b	.L1102
 27471              	.L1081:
4220:..\src/command_processing.c ****         case MOVE_FAST_ACT:
4221:..\src/command_processing.c ****             
4222:..\src/command_processing.c ****             if (err_emg_1 < 0 && err_emg_2 < 0){
 27472              		.loc 1 4222 0
 27473 0110 FB68     		ldr	r3, [r7, #12]
 27474 0112 002B     		cmp	r3, #0
 27475 0114 14DA     		bge	.L1103
 27476              		.loc 1 4222 0 is_stmt 0 discriminator 1
 27477 0116 BB68     		ldr	r3, [r7, #8]
 27478 0118 002B     		cmp	r3, #0
 27479 011a 11DA     		bge	.L1103
4223:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
 27480              		.loc 1 4223 0 is_stmt 1
 27481 011c 0F4B     		ldr	r3, .L1105+8
 27482 011e 0022     		movs	r2, #0
 27483 0120 1A70     		strb	r2, [r3]
4224:..\src/command_processing.c ****             }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 602


4225:..\src/command_processing.c ****         
4226:..\src/command_processing.c ****             break;
 27484              		.loc 1 4226 0
 27485 0122 0DE0     		b	.L1103
 27486              	.L1082:
4227:..\src/command_processing.c ****         case MOVE_SLOW_ACT:
4228:..\src/command_processing.c ****           
4229:..\src/command_processing.c ****             if (err_emg_1 < 0 && err_emg_2 < 0){
 27487              		.loc 1 4229 0
 27488 0124 FB68     		ldr	r3, [r7, #12]
 27489 0126 002B     		cmp	r3, #0
 27490 0128 0CDA     		bge	.L1104
 27491              		.loc 1 4229 0 is_stmt 0 discriminator 1
 27492 012a BB68     		ldr	r3, [r7, #8]
 27493 012c 002B     		cmp	r3, #0
 27494 012e 09DA     		bge	.L1104
4230:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
 27495              		.loc 1 4230 0 is_stmt 1
 27496 0130 0A4B     		ldr	r3, .L1105+8
 27497 0132 0022     		movs	r2, #0
 27498 0134 1A70     		strb	r2, [r3]
4231:..\src/command_processing.c ****             }
4232:..\src/command_processing.c ****             
4233:..\src/command_processing.c ****             break;
 27499              		.loc 1 4233 0
 27500 0136 05E0     		b	.L1104
 27501              	.L1101:
4184:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
 27502              		.loc 1 4184 0
 27503 0138 00BF     		nop
 27504 013a 04E0     		b	.L1077
 27505              	.L1102:
4219:..\src/command_processing.c ****         case MOVE_FAST_ACT:
 27506              		.loc 1 4219 0
 27507 013c 00BF     		nop
 27508 013e 02E0     		b	.L1077
 27509              	.L1103:
4226:..\src/command_processing.c ****         case MOVE_SLOW_ACT:
 27510              		.loc 1 4226 0
 27511 0140 00BF     		nop
 27512 0142 00E0     		b	.L1077
 27513              	.L1104:
 27514              		.loc 1 4233 0
 27515 0144 00BF     		nop
 27516              	.L1077:
4234:..\src/command_processing.c ****     }
4235:..\src/command_processing.c ****     
4236:..\src/command_processing.c ****     return fsm_state;
 27517              		.loc 1 4236 0
 27518 0146 054B     		ldr	r3, .L1105+8
 27519 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
4237:..\src/command_processing.c **** 
4238:..\src/command_processing.c **** }
 27520              		.loc 1 4238 0
 27521 014a 1846     		mov	r0, r3
 27522 014c 1437     		adds	r7, r7, #20
 27523              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 603


 27524 014e BD46     		mov	sp, r7
 27525              		.cfi_def_cfa_register 13
 27526              		@ sp needed
 27527 0150 80BC     		pop	{r7}
 27528              		.cfi_restore 7
 27529              		.cfi_def_cfa_offset 0
 27530 0152 7047     		bx	lr
 27531              	.L1106:
 27532              		.align	2
 27533              	.L1105:
 27534 0154 00000000 		.word	g_adc_meas
 27535 0158 00000000 		.word	c_mem
 27536 015c 0C000000 		.word	fsm_state.11541
 27537 0160 10000000 		.word	cnt.11542
 27538              		.cfi_endproc
 27539              	.LFE116:
 27540              		.size	emg_activation_velocity_fsm, .-emg_activation_velocity_fsm
 27541              		.section	.text.otbk_act_wrist_control,"ax",%progbits
 27542              		.align	2
 27543              		.global	otbk_act_wrist_control
 27544              		.thumb
 27545              		.thumb_func
 27546              		.type	otbk_act_wrist_control, %function
 27547              	otbk_act_wrist_control:
 27548              	.LFB117:
4239:..\src/command_processing.c **** 
4240:..\src/command_processing.c **** //==============================================================================
4241:..\src/command_processing.c **** //                                          OTTOBOCK ACTIVE WRIST MASTER CONTROL
4242:..\src/command_processing.c **** //==============================================================================
4243:..\src/command_processing.c **** /* It moves Ottobock active wrist (as master) and connected SoftHand slave according to emg activat
4244:..\src/command_processing.c **** 
4245:..\src/command_processing.c **** void otbk_act_wrist_control(int slave_motor_idx) {
 27549              		.loc 1 4245 0
 27550              		.cfi_startproc
 27551              		@ args = 0, pretend = 0, frame = 8
 27552              		@ frame_needed = 1, uses_anonymous_args = 0
 27553              		@ link register save eliminated.
 27554 0000 80B4     		push	{r7}
 27555              		.cfi_def_cfa_offset 4
 27556              		.cfi_offset 7, -4
 27557 0002 83B0     		sub	sp, sp, #12
 27558              		.cfi_def_cfa_offset 16
 27559 0004 00AF     		add	r7, sp, #0
 27560              		.cfi_def_cfa_register 7
 27561 0006 7860     		str	r0, [r7, #4]
4246:..\src/command_processing.c ****     
4247:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
4248:..\src/command_processing.c ****     
4249:..\src/command_processing.c ****     uint8 fsm_state = emg_activation_velocity_fsm();
4250:..\src/command_processing.c ****         
4251:..\src/command_processing.c ****     // State machine - Evaluate emg activation status
4252:..\src/command_processing.c ****     // Note: in this way, diff_emg_1 and diff_emg_2 are for sure differences between two consecutiv
4253:..\src/command_processing.c ****     switch (fsm_state){
4254:..\src/command_processing.c ****         case RELAX_STATE:
4255:..\src/command_processing.c ****             
4256:..\src/command_processing.c ****             // Wrist stop
4257:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 604


4258:..\src/command_processing.c ****             
4259:..\src/command_processing.c ****             // Softhand stop
4260:..\src/command_processing.c ****             // Do not update the motor reference, so the SoftHand stays still
4261:..\src/command_processing.c ****             g_ref[slave_motor_idx].pos = g_refOld[slave_motor_idx].pos;
4262:..\src/command_processing.c ****             g_refNew[slave_motor_idx].pos = g_ref[slave_motor_idx].pos;
4263:..\src/command_processing.c ****             
4264:..\src/command_processing.c ****             break;
4265:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
4266:..\src/command_processing.c ****                 
4267:..\src/command_processing.c ****             break;
4268:..\src/command_processing.c ****         case MOVE_FAST_ACT: // Wrist movement
4269:..\src/command_processing.c ****             
4270:..\src/command_processing.c ****             // Wrist movement
4271:..\src/command_processing.c ****             if (g_adc_meas.emg[0] > g_adc_meas.emg[1]){
4272:..\src/command_processing.c ****                 if (c_mem.WR.wrist_direction_association == 0){
4273:..\src/command_processing.c ****                     g_refNew[0].pwm = 60;       //Rotate CW
4274:..\src/command_processing.c ****                 }
4275:..\src/command_processing.c ****                 else {
4276:..\src/command_processing.c ****                     g_refNew[0].pwm = -60;   // Rotate CCW
4277:..\src/command_processing.c ****                 }
4278:..\src/command_processing.c ****             }
4279:..\src/command_processing.c ****             else {
4280:..\src/command_processing.c ****                 if (c_mem.WR.wrist_direction_association == 0){
4281:..\src/command_processing.c ****                     g_refNew[0].pwm = -60;   // Rotate CCW
4282:..\src/command_processing.c ****                 }
4283:..\src/command_processing.c ****                 else {
4284:..\src/command_processing.c ****                     g_refNew[0].pwm = 60;       //Rotate CW
4285:..\src/command_processing.c ****                 }
4286:..\src/command_processing.c ****             }
4287:..\src/command_processing.c ****             
4288:..\src/command_processing.c ****             // Softhand stop
4289:..\src/command_processing.c ****             // Do not update the motor reference, so the SoftHand stays still
4290:..\src/command_processing.c ****             g_ref[slave_motor_idx].pos = g_refOld[slave_motor_idx].pos;
4291:..\src/command_processing.c ****             g_refNew[slave_motor_idx].pos = g_ref[slave_motor_idx].pos;
4292:..\src/command_processing.c ****             
4293:..\src/command_processing.c ****             break;
4294:..\src/command_processing.c ****         case MOVE_SLOW_ACT: // Hand movement
4295:..\src/command_processing.c ****             
4296:..\src/command_processing.c ****             // Wrist stop
4297:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
4298:..\src/command_processing.c ****             
4299:..\src/command_processing.c ****             // SoftHand movement
4300:..\src/command_processing.c ****             // Drive slave with reference generated on second motor index
4301:..\src/command_processing.c ****             // Use second motor structures and parameters, only to generate position reference not 
4302:..\src/command_processing.c ****             // IMPORTANT: configure second motor parameters with proper slave parameters
4303:..\src/command_processing.c ****             motor_control_generic(slave_motor_idx);
4304:..\src/command_processing.c ****             
4305:..\src/command_processing.c ****             break;
4306:..\src/command_processing.c ****     }
4307:..\src/command_processing.c ****         
4308:..\src/command_processing.c ****     // Limit output voltage
4309:..\src/command_processing.c ****     if (g_refNew[0].pwm > 67) // 67 (8.4V max of 2S ottobock battery) 66.6% of 12.6V
4310:..\src/command_processing.c ****         g_refNew[0].pwm = 67; // 67
4311:..\src/command_processing.c ****     if (g_refNew[0].pwm < -67)
4312:..\src/command_processing.c ****         g_refNew[0].pwm = -67;
4313:..\src/command_processing.c ****     
4314:..\src/command_processing.c **** #endif
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 605


4315:..\src/command_processing.c **** }
 27562              		.loc 1 4315 0
 27563 0008 00BF     		nop
 27564 000a 0C37     		adds	r7, r7, #12
 27565              		.cfi_def_cfa_offset 4
 27566 000c BD46     		mov	sp, r7
 27567              		.cfi_def_cfa_register 13
 27568              		@ sp needed
 27569 000e 80BC     		pop	{r7}
 27570              		.cfi_restore 7
 27571              		.cfi_def_cfa_offset 0
 27572 0010 7047     		bx	lr
 27573              		.cfi_endproc
 27574              	.LFE117:
 27575              		.size	otbk_act_wrist_control, .-otbk_act_wrist_control
 27576 0012 00BF     		.section	.text.drive_slave,"ax",%progbits
 27577              		.align	2
 27578              		.global	drive_slave
 27579              		.thumb
 27580              		.thumb_func
 27581              		.type	drive_slave, %function
 27582              	drive_slave:
 27583              	.LFB118:
4316:..\src/command_processing.c **** 
4317:..\src/command_processing.c **** //==============================================================================
4318:..\src/command_processing.c **** //                                                                   DRIVE SLAVE
4319:..\src/command_processing.c **** //==============================================================================
4320:..\src/command_processing.c ****  
4321:..\src/command_processing.c **** void drive_slave(uint8 motor_idx, uint8 slave_ID) {
 27584              		.loc 1 4321 0
 27585              		.cfi_startproc
 27586              		@ args = 0, pretend = 0, frame = 8
 27587              		@ frame_needed = 1, uses_anonymous_args = 0
 27588              		@ link register save eliminated.
 27589 0000 80B4     		push	{r7}
 27590              		.cfi_def_cfa_offset 4
 27591              		.cfi_offset 7, -4
 27592 0002 83B0     		sub	sp, sp, #12
 27593              		.cfi_def_cfa_offset 16
 27594 0004 00AF     		add	r7, sp, #0
 27595              		.cfi_def_cfa_register 7
 27596 0006 0346     		mov	r3, r0
 27597 0008 0A46     		mov	r2, r1
 27598 000a FB71     		strb	r3, [r7, #7]
 27599 000c 1346     		mov	r3, r2
 27600 000e BB71     		strb	r3, [r7, #6]
4322:..\src/command_processing.c **** 
4323:..\src/command_processing.c **** #ifdef MASTER_FW
4324:..\src/command_processing.c ****     uint8 packet_data[6];
4325:..\src/command_processing.c ****     uint8 packet_lenght;
4326:..\src/command_processing.c ****     int16 aux_int16;
4327:..\src/command_processing.c **** 
4328:..\src/command_processing.c ****     // If not the use of handle or an emg input mode is set, exit from master_mode
4329:..\src/command_processing.c ****     if( c_mem.motor[motor_idx].input_mode != INPUT_MODE_ENCODER3          &&
4330:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_PROPORTIONAL  &&
4331:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_INTEGRAL      &&
4332:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_FCFS          &&
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 606


4333:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_FCFS_ADV          &&
4334:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_PROPORTIONAL_NC     ){
4335:..\src/command_processing.c ****         master_mode = 0;
4336:..\src/command_processing.c ****         return;
4337:..\src/command_processing.c ****     }
4338:..\src/command_processing.c ****         
4339:..\src/command_processing.c ****     if (dev_tension[0] >= 5000 && dev_tension[0] < 7000){
4340:..\src/command_processing.c ****         master_mode = 0;
4341:..\src/command_processing.c ****         return;
4342:..\src/command_processing.c ****     }
4343:..\src/command_processing.c ****     
4344:..\src/command_processing.c ****        
4345:..\src/command_processing.c ****     //Sends a Set inputs command to a second board
4346:..\src/command_processing.c ****     packet_data[0] = CMD_SET_INPUTS;
4347:..\src/command_processing.c ****     aux_int16 = (int16) (g_ref[motor_idx].pos >> g_mem.enc[g_mem.motor[motor_idx].encoder_line].res
4348:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
4349:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
4350:..\src/command_processing.c ****     *((int16 *) &packet_data[3]) = 0;
4351:..\src/command_processing.c ****     
4352:..\src/command_processing.c ****     packet_lenght = 6;
4353:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
4354:..\src/command_processing.c ****     commWriteID(packet_data, packet_lenght, slave_ID);
4355:..\src/command_processing.c **** 
4356:..\src/command_processing.c **** #endif
4357:..\src/command_processing.c **** }
 27601              		.loc 1 4357 0
 27602 0010 00BF     		nop
 27603 0012 0C37     		adds	r7, r7, #12
 27604              		.cfi_def_cfa_offset 4
 27605 0014 BD46     		mov	sp, r7
 27606              		.cfi_def_cfa_register 13
 27607              		@ sp needed
 27608 0016 80BC     		pop	{r7}
 27609              		.cfi_restore 7
 27610              		.cfi_def_cfa_offset 0
 27611 0018 7047     		bx	lr
 27612              		.cfi_endproc
 27613              	.LFE118:
 27614              		.size	drive_slave, .-drive_slave
 27615 001a 00BF     		.section	.text.stop_master_device,"ax",%progbits
 27616              		.align	2
 27617              		.global	stop_master_device
 27618              		.thumb
 27619              		.thumb_func
 27620              		.type	stop_master_device, %function
 27621              	stop_master_device:
 27622              	.LFB119:
4358:..\src/command_processing.c **** 
4359:..\src/command_processing.c **** //==============================================================================
4360:..\src/command_processing.c **** //                                                            STOP MASTER DEVICE
4361:..\src/command_processing.c **** //==============================================================================
4362:..\src/command_processing.c ****  
4363:..\src/command_processing.c **** void stop_master_device() {
 27623              		.loc 1 4363 0
 27624              		.cfi_startproc
 27625              		@ args = 0, pretend = 0, frame = 0
 27626              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 607


 27627              		@ link register save eliminated.
 27628 0000 80B4     		push	{r7}
 27629              		.cfi_def_cfa_offset 4
 27630              		.cfi_offset 7, -4
 27631 0002 00AF     		add	r7, sp, #0
 27632              		.cfi_def_cfa_register 7
4364:..\src/command_processing.c ****     
4365:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
4366:..\src/command_processing.c ****     if (c_mem.dev.dev_type == AIR_CHAMBERS_FB){
4367:..\src/command_processing.c ****         // Stop pump and open valve
4368:..\src/command_processing.c ****         g_refNew[0].pwm = 0;    
4369:..\src/command_processing.c ****         VALVE_Write(0);
4370:..\src/command_processing.c ****     }
4371:..\src/command_processing.c **** #endif
4372:..\src/command_processing.c **** 
4373:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
4374:..\src/command_processing.c ****     if (c_mem.dev.dev_type == OTBK_ACT_WRIST_MS){
4375:..\src/command_processing.c ****         //Stop wrist motor
4376:..\src/command_processing.c ****         g_refNew[0].pwm = 0;
4377:..\src/command_processing.c ****     }
4378:..\src/command_processing.c **** #endif    
4379:..\src/command_processing.c **** }
 27633              		.loc 1 4379 0
 27634 0004 00BF     		nop
 27635 0006 BD46     		mov	sp, r7
 27636              		.cfi_def_cfa_register 13
 27637              		@ sp needed
 27638 0008 80BC     		pop	{r7}
 27639              		.cfi_restore 7
 27640              		.cfi_def_cfa_offset 0
 27641 000a 7047     		bx	lr
 27642              		.cfi_endproc
 27643              	.LFE119:
 27644              		.size	stop_master_device, .-stop_master_device
 27645              		.section	.text.deactivate_slaves,"ax",%progbits
 27646              		.align	2
 27647              		.global	deactivate_slaves
 27648              		.thumb
 27649              		.thumb_func
 27650              		.type	deactivate_slaves, %function
 27651              	deactivate_slaves:
 27652              	.LFB120:
4380:..\src/command_processing.c **** 
4381:..\src/command_processing.c **** //==============================================================================
4382:..\src/command_processing.c **** //                                                             DEACTIVATE SLAVES
4383:..\src/command_processing.c **** //==============================================================================
4384:..\src/command_processing.c ****  
4385:..\src/command_processing.c **** void deactivate_slaves() {
 27653              		.loc 1 4385 0
 27654              		.cfi_startproc
 27655              		@ args = 0, pretend = 0, frame = 0
 27656              		@ frame_needed = 1, uses_anonymous_args = 0
 27657              		@ link register save eliminated.
 27658 0000 80B4     		push	{r7}
 27659              		.cfi_def_cfa_offset 4
 27660              		.cfi_offset 7, -4
 27661 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 608


 27662              		.cfi_def_cfa_register 7
4386:..\src/command_processing.c ****     
4387:..\src/command_processing.c **** #ifdef MASTER_FW
4388:..\src/command_processing.c ****     
4389:..\src/command_processing.c ****     uint8 packet_data[10];
4390:..\src/command_processing.c ****     uint8 packet_lenght;
4391:..\src/command_processing.c ****     
4392:..\src/command_processing.c ****     // If not a emg input mode is set, exit from master_mode
4393:..\src/command_processing.c ****     if(c_mem.motor[0].input_mode != INPUT_MODE_EMG_PROPORTIONAL  &&
4394:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_INTEGRAL     &&
4395:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS         &&
4396:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS_ADV     &&
4397:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_PROPORTIONAL_NC     ){
4398:..\src/command_processing.c ****         master_mode = 0;
4399:..\src/command_processing.c ****         return;
4400:..\src/command_processing.c ****     }
4401:..\src/command_processing.c ****    
4402:..\src/command_processing.c ****     //Sends a Set inputs command to a second board
4403:..\src/command_processing.c ****     packet_data[0] = CMD_ACTIVATE;
4404:..\src/command_processing.c **** 
4405:..\src/command_processing.c ****     *((int16 *) &packet_data[1]) = 0;   //3 to activate, 0 to deactivate
4406:..\src/command_processing.c ****     packet_lenght = 3;
4407:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
4408:..\src/command_processing.c ****     
4409:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
4410:..\src/command_processing.c ****     
4411:..\src/command_processing.c **** #endif    
4412:..\src/command_processing.c **** }
 27663              		.loc 1 4412 0
 27664 0004 00BF     		nop
 27665 0006 BD46     		mov	sp, r7
 27666              		.cfi_def_cfa_register 13
 27667              		@ sp needed
 27668 0008 80BC     		pop	{r7}
 27669              		.cfi_restore 7
 27670              		.cfi_def_cfa_offset 0
 27671 000a 7047     		bx	lr
 27672              		.cfi_endproc
 27673              	.LFE120:
 27674              		.size	deactivate_slaves, .-deactivate_slaves
 27675              		.bss
 27676              		.align	2
 27677              	h_time.11222:
 27678 0000 00000000 		.space	4
 27679              		.align	1
 27680              	i.11263:
 27681 0004 0000     		.space	2
 27682 0006 0000     		.align	2
 27683              	last_aux_int16.11394:
 27684 0008 00000000 		.space	4
 27685              	fsm_state.11541:
 27686 000c 00       		.space	1
 27687 000d 000000   		.align	2
 27688              	cnt.11542:
 27689 0010 00000000 		.space	4
 27690              		.text
 27691              	.Letext0:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 609


 27692              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 27693              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 27694              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 27695              		.file 6 "..\\src\\commands.h"
 27696              		.file 7 "..\\src\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 27697              		.file 8 "..\\src\\globals.h"
 27698              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 27699              		.section	.debug_info,"",%progbits
 27700              	.Ldebug_info0:
 27701 0000 04260000 		.4byte	0x2604
 27702 0004 0400     		.2byte	0x4
 27703 0006 00000000 		.4byte	.Ldebug_abbrev0
 27704 000a 04       		.byte	0x4
 27705 000b 01       		.uleb128 0x1
 27706 000c CE090000 		.4byte	.LASF401
 27707 0010 0C       		.byte	0xc
 27708 0011 28150000 		.4byte	.LASF402
 27709 0015 09000000 		.4byte	.LASF403
 27710 0019 00000000 		.4byte	.Ldebug_ranges0+0
 27711 001d 00000000 		.4byte	0
 27712 0021 00000000 		.4byte	.Ldebug_line0
 27713 0025 02       		.uleb128 0x2
 27714 0026 01       		.byte	0x1
 27715 0027 06       		.byte	0x6
 27716 0028 92040000 		.4byte	.LASF0
 27717 002c 02       		.uleb128 0x2
 27718 002d 01       		.byte	0x1
 27719 002e 08       		.byte	0x8
 27720 002f 0C050000 		.4byte	.LASF1
 27721 0033 02       		.uleb128 0x2
 27722 0034 02       		.byte	0x2
 27723 0035 05       		.byte	0x5
 27724 0036 9B110000 		.4byte	.LASF2
 27725 003a 02       		.uleb128 0x2
 27726 003b 02       		.byte	0x2
 27727 003c 07       		.byte	0x7
 27728 003d 1A140000 		.4byte	.LASF3
 27729 0041 03       		.uleb128 0x3
 27730 0042 E6140000 		.4byte	.LASF5
 27731 0046 03       		.byte	0x3
 27732 0047 3F       		.byte	0x3f
 27733 0048 4C000000 		.4byte	0x4c
 27734 004c 02       		.uleb128 0x2
 27735 004d 04       		.byte	0x4
 27736 004e 05       		.byte	0x5
 27737 004f 58030000 		.4byte	.LASF4
 27738 0053 03       		.uleb128 0x3
 27739 0054 990A0000 		.4byte	.LASF6
 27740 0058 03       		.byte	0x3
 27741 0059 41       		.byte	0x41
 27742 005a 5E000000 		.4byte	0x5e
 27743 005e 02       		.uleb128 0x2
 27744 005f 04       		.byte	0x4
 27745 0060 07       		.byte	0x7
 27746 0061 7A080000 		.4byte	.LASF7
 27747 0065 02       		.uleb128 0x2
 27748 0066 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 610


 27749 0067 05       		.byte	0x5
 27750 0068 A40A0000 		.4byte	.LASF8
 27751 006c 02       		.uleb128 0x2
 27752 006d 08       		.byte	0x8
 27753 006e 07       		.byte	0x7
 27754 006f 950E0000 		.4byte	.LASF9
 27755 0073 04       		.uleb128 0x4
 27756 0074 04       		.byte	0x4
 27757 0075 05       		.byte	0x5
 27758 0076 696E7400 		.ascii	"int\000"
 27759 007a 02       		.uleb128 0x2
 27760 007b 04       		.byte	0x4
 27761 007c 07       		.byte	0x7
 27762 007d C70B0000 		.4byte	.LASF10
 27763 0081 03       		.uleb128 0x3
 27764 0082 05010000 		.4byte	.LASF11
 27765 0086 04       		.byte	0x4
 27766 0087 2C       		.byte	0x2c
 27767 0088 41000000 		.4byte	0x41
 27768 008c 03       		.uleb128 0x3
 27769 008d 92130000 		.4byte	.LASF12
 27770 0091 04       		.byte	0x4
 27771 0092 30       		.byte	0x30
 27772 0093 53000000 		.4byte	0x53
 27773 0097 05       		.uleb128 0x5
 27774 0098 7D110000 		.4byte	.LASF13
 27775 009c 05       		.byte	0x5
 27776 009d E401     		.2byte	0x1e4
 27777 009f 2C000000 		.4byte	0x2c
 27778 00a3 05       		.uleb128 0x5
 27779 00a4 8B150000 		.4byte	.LASF14
 27780 00a8 05       		.byte	0x5
 27781 00a9 E501     		.2byte	0x1e5
 27782 00ab 3A000000 		.4byte	0x3a
 27783 00af 05       		.uleb128 0x5
 27784 00b0 2D010000 		.4byte	.LASF15
 27785 00b4 05       		.byte	0x5
 27786 00b5 E601     		.2byte	0x1e6
 27787 00b7 5E000000 		.4byte	0x5e
 27788 00bb 05       		.uleb128 0x5
 27789 00bc 3B020000 		.4byte	.LASF16
 27790 00c0 05       		.byte	0x5
 27791 00c1 E701     		.2byte	0x1e7
 27792 00c3 25000000 		.4byte	0x25
 27793 00c7 05       		.uleb128 0x5
 27794 00c8 F2120000 		.4byte	.LASF17
 27795 00cc 05       		.byte	0x5
 27796 00cd E801     		.2byte	0x1e8
 27797 00cf 33000000 		.4byte	0x33
 27798 00d3 05       		.uleb128 0x5
 27799 00d4 74140000 		.4byte	.LASF18
 27800 00d8 05       		.byte	0x5
 27801 00d9 E901     		.2byte	0x1e9
 27802 00db 4C000000 		.4byte	0x4c
 27803 00df 05       		.uleb128 0x5
 27804 00e0 DF030000 		.4byte	.LASF19
 27805 00e4 05       		.byte	0x5
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 611


 27806 00e5 EA01     		.2byte	0x1ea
 27807 00e7 EB000000 		.4byte	0xeb
 27808 00eb 02       		.uleb128 0x2
 27809 00ec 04       		.byte	0x4
 27810 00ed 04       		.byte	0x4
 27811 00ee 8A0B0000 		.4byte	.LASF20
 27812 00f2 02       		.uleb128 0x2
 27813 00f3 08       		.byte	0x8
 27814 00f4 04       		.byte	0x4
 27815 00f5 FC0A0000 		.4byte	.LASF21
 27816 00f9 02       		.uleb128 0x2
 27817 00fa 01       		.byte	0x1
 27818 00fb 08       		.byte	0x8
 27819 00fc B0050000 		.4byte	.LASF22
 27820 0100 05       		.uleb128 0x5
 27821 0101 8A0F0000 		.4byte	.LASF23
 27822 0105 05       		.byte	0x5
 27823 0106 8E02     		.2byte	0x28e
 27824 0108 0C010000 		.4byte	0x10c
 27825 010c 06       		.uleb128 0x6
 27826 010d 97000000 		.4byte	0x97
 27827 0111 02       		.uleb128 0x2
 27828 0112 08       		.byte	0x8
 27829 0113 04       		.byte	0x4
 27830 0114 7D0D0000 		.4byte	.LASF24
 27831 0118 02       		.uleb128 0x2
 27832 0119 04       		.byte	0x4
 27833 011a 07       		.byte	0x7
 27834 011b 79000000 		.4byte	.LASF25
 27835 011f 07       		.uleb128 0x7
 27836 0120 04       		.byte	0x4
 27837 0121 F9000000 		.4byte	0xf9
 27838 0125 07       		.uleb128 0x7
 27839 0126 04       		.byte	0x4
 27840 0127 2B010000 		.4byte	0x12b
 27841 012b 08       		.uleb128 0x8
 27842 012c F9000000 		.4byte	0xf9
 27843 0130 09       		.uleb128 0x9
 27844 0131 F9000000 		.4byte	0xf9
 27845 0135 40010000 		.4byte	0x140
 27846 0139 0A       		.uleb128 0xa
 27847 013a 18010000 		.4byte	0x118
 27848 013e 19       		.byte	0x19
 27849 013f 00       		.byte	0
 27850 0140 09       		.uleb128 0x9
 27851 0141 F9000000 		.4byte	0xf9
 27852 0145 50010000 		.4byte	0x150
 27853 0149 0A       		.uleb128 0xa
 27854 014a 18010000 		.4byte	0x118
 27855 014e 07       		.byte	0x7
 27856 014f 00       		.byte	0
 27857 0150 0B       		.uleb128 0xb
 27858 0151 270C0000 		.4byte	.LASF57
 27859 0155 01       		.byte	0x1
 27860 0156 2C000000 		.4byte	0x2c
 27861 015a 06       		.byte	0x6
 27862 015b 42       		.byte	0x42
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 612


 27863 015c 1B020000 		.4byte	0x21b
 27864 0160 0C       		.uleb128 0xc
 27865 0161 A5150000 		.4byte	.LASF26
 27866 0165 00       		.byte	0
 27867 0166 0C       		.uleb128 0xc
 27868 0167 2C120000 		.4byte	.LASF27
 27869 016b 01       		.byte	0x1
 27870 016c 0C       		.uleb128 0xc
 27871 016d 56080000 		.4byte	.LASF28
 27872 0171 03       		.byte	0x3
 27873 0172 0C       		.uleb128 0xc
 27874 0173 44050000 		.4byte	.LASF29
 27875 0177 04       		.byte	0x4
 27876 0178 0C       		.uleb128 0xc
 27877 0179 C30F0000 		.4byte	.LASF30
 27878 017d 05       		.byte	0x5
 27879 017e 0C       		.uleb128 0xc
 27880 017f 76090000 		.4byte	.LASF31
 27881 0183 06       		.byte	0x6
 27882 0184 0C       		.uleb128 0xc
 27883 0185 9A080000 		.4byte	.LASF32
 27884 0189 09       		.byte	0x9
 27885 018a 0C       		.uleb128 0xc
 27886 018b 82000000 		.4byte	.LASF33
 27887 018f 0A       		.byte	0xa
 27888 0190 0C       		.uleb128 0xc
 27889 0191 D4120000 		.4byte	.LASF34
 27890 0195 0C       		.byte	0xc
 27891 0196 0C       		.uleb128 0xc
 27892 0197 E10D0000 		.4byte	.LASF35
 27893 019b 0D       		.byte	0xd
 27894 019c 0C       		.uleb128 0xc
 27895 019d C8000000 		.4byte	.LASF36
 27896 01a1 80       		.byte	0x80
 27897 01a2 0C       		.uleb128 0xc
 27898 01a3 9F050000 		.4byte	.LASF37
 27899 01a7 81       		.byte	0x81
 27900 01a8 0C       		.uleb128 0xc
 27901 01a9 C2060000 		.4byte	.LASF38
 27902 01ad 82       		.byte	0x82
 27903 01ae 0C       		.uleb128 0xc
 27904 01af F6110000 		.4byte	.LASF39
 27905 01b3 83       		.byte	0x83
 27906 01b4 0C       		.uleb128 0xc
 27907 01b5 46110000 		.4byte	.LASF40
 27908 01b9 84       		.byte	0x84
 27909 01ba 0C       		.uleb128 0xc
 27910 01bb F7030000 		.4byte	.LASF41
 27911 01bf 85       		.byte	0x85
 27912 01c0 0C       		.uleb128 0xc
 27913 01c1 B8090000 		.4byte	.LASF42
 27914 01c5 86       		.byte	0x86
 27915 01c6 0C       		.uleb128 0xc
 27916 01c7 56090000 		.4byte	.LASF43
 27917 01cb 88       		.byte	0x88
 27918 01cc 0C       		.uleb128 0xc
 27919 01cd B5120000 		.4byte	.LASF44
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 613


 27920 01d1 89       		.byte	0x89
 27921 01d2 0C       		.uleb128 0xc
 27922 01d3 F30E0000 		.4byte	.LASF45
 27923 01d7 8B       		.byte	0x8b
 27924 01d8 0C       		.uleb128 0xc
 27925 01d9 4E0D0000 		.4byte	.LASF46
 27926 01dd 8C       		.byte	0x8c
 27927 01de 0C       		.uleb128 0xc
 27928 01df 740A0000 		.4byte	.LASF47
 27929 01e3 8E       		.byte	0x8e
 27930 01e4 0C       		.uleb128 0xc
 27931 01e5 2B0F0000 		.4byte	.LASF48
 27932 01e9 90       		.byte	0x90
 27933 01ea 0C       		.uleb128 0xc
 27934 01eb DD020000 		.4byte	.LASF49
 27935 01ef 92       		.byte	0x92
 27936 01f0 0C       		.uleb128 0xc
 27937 01f1 F3130000 		.4byte	.LASF50
 27938 01f5 A1       		.byte	0xa1
 27939 01f6 0C       		.uleb128 0xc
 27940 01f7 FF100000 		.4byte	.LASF51
 27941 01fb A2       		.byte	0xa2
 27942 01fc 0C       		.uleb128 0xc
 27943 01fd 850C0000 		.4byte	.LASF52
 27944 0201 A3       		.byte	0xa3
 27945 0202 0C       		.uleb128 0xc
 27946 0203 1B110000 		.4byte	.LASF53
 27947 0207 A4       		.byte	0xa4
 27948 0208 0C       		.uleb128 0xc
 27949 0209 1B120000 		.4byte	.LASF54
 27950 020d A5       		.byte	0xa5
 27951 020e 0C       		.uleb128 0xc
 27952 020f B3100000 		.4byte	.LASF55
 27953 0213 A6       		.byte	0xa6
 27954 0214 0C       		.uleb128 0xc
 27955 0215 030B0000 		.4byte	.LASF56
 27956 0219 A7       		.byte	0xa7
 27957 021a 00       		.byte	0
 27958 021b 0B       		.uleb128 0xb
 27959 021c 52150000 		.4byte	.LASF58
 27960 0220 01       		.byte	0x1
 27961 0221 2C000000 		.4byte	0x2c
 27962 0225 06       		.byte	0x6
 27963 0226 8E       		.byte	0x8e
 27964 0227 5C020000 		.4byte	0x25c
 27965 022b 0C       		.uleb128 0xc
 27966 022c 5E070000 		.4byte	.LASF59
 27967 0230 00       		.byte	0
 27968 0231 0C       		.uleb128 0xc
 27969 0232 650C0000 		.4byte	.LASF60
 27970 0236 01       		.byte	0x1
 27971 0237 0C       		.uleb128 0xc
 27972 0238 EE020000 		.4byte	.LASF61
 27973 023c 02       		.byte	0x2
 27974 023d 0C       		.uleb128 0xc
 27975 023e 17020000 		.4byte	.LASF62
 27976 0242 03       		.byte	0x3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 614


 27977 0243 0C       		.uleb128 0xc
 27978 0244 BB010000 		.4byte	.LASF63
 27979 0248 04       		.byte	0x4
 27980 0249 0C       		.uleb128 0xc
 27981 024a B0000000 		.4byte	.LASF64
 27982 024e 05       		.byte	0x5
 27983 024f 0C       		.uleb128 0xc
 27984 0250 C2080000 		.4byte	.LASF65
 27985 0254 06       		.byte	0x6
 27986 0255 0C       		.uleb128 0xc
 27987 0256 E0100000 		.4byte	.LASF66
 27988 025a 07       		.byte	0x7
 27989 025b 00       		.byte	0
 27990 025c 0B       		.uleb128 0xb
 27991 025d B20A0000 		.4byte	.LASF67
 27992 0261 01       		.byte	0x1
 27993 0262 2C000000 		.4byte	0x2c
 27994 0266 06       		.byte	0x6
 27995 0267 A2       		.byte	0xa2
 27996 0268 85020000 		.4byte	0x285
 27997 026c 0C       		.uleb128 0xc
 27998 026d CB140000 		.4byte	.LASF68
 27999 0271 00       		.byte	0
 28000 0272 0C       		.uleb128 0xc
 28001 0273 4A090000 		.4byte	.LASF69
 28002 0277 01       		.byte	0x1
 28003 0278 0C       		.uleb128 0xc
 28004 0279 6D0D0000 		.4byte	.LASF70
 28005 027d 02       		.byte	0x2
 28006 027e 0C       		.uleb128 0xc
 28007 027f 41080000 		.4byte	.LASF71
 28008 0283 03       		.byte	0x3
 28009 0284 00       		.byte	0
 28010 0285 0B       		.uleb128 0xb
 28011 0286 D4040000 		.4byte	.LASF72
 28012 028a 01       		.byte	0x1
 28013 028b 2C000000 		.4byte	0x2c
 28014 028f 06       		.byte	0x6
 28015 0290 AC       		.byte	0xac
 28016 0291 A2020000 		.4byte	0x2a2
 28017 0295 0C       		.uleb128 0xc
 28018 0296 D6100000 		.4byte	.LASF73
 28019 029a 00       		.byte	0
 28020 029b 0C       		.uleb128 0xc
 28021 029c DE0A0000 		.4byte	.LASF74
 28022 02a0 01       		.byte	0x1
 28023 02a1 00       		.byte	0
 28024 02a2 0B       		.uleb128 0xb
 28025 02a3 3A0E0000 		.4byte	.LASF75
 28026 02a7 01       		.byte	0x1
 28027 02a8 2C000000 		.4byte	0x2c
 28028 02ac 06       		.byte	0x6
 28029 02ad B1       		.byte	0xb1
 28030 02ae BF020000 		.4byte	0x2bf
 28031 02b2 0C       		.uleb128 0xc
 28032 02b3 43070000 		.4byte	.LASF76
 28033 02b7 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 615


 28034 02b8 0C       		.uleb128 0xc
 28035 02b9 07090000 		.4byte	.LASF77
 28036 02bd 01       		.byte	0x1
 28037 02be 00       		.byte	0
 28038 02bf 0B       		.uleb128 0xb
 28039 02c0 E7120000 		.4byte	.LASF78
 28040 02c4 01       		.byte	0x1
 28041 02c5 2C000000 		.4byte	0x2c
 28042 02c9 06       		.byte	0x6
 28043 02ca B9       		.byte	0xb9
 28044 02cb 0C030000 		.4byte	0x30c
 28045 02cf 0C       		.uleb128 0xc
 28046 02d0 0E090000 		.4byte	.LASF79
 28047 02d4 00       		.byte	0
 28048 02d5 0C       		.uleb128 0xc
 28049 02d6 60150000 		.4byte	.LASF80
 28050 02da 01       		.byte	0x1
 28051 02db 0C       		.uleb128 0xc
 28052 02dc C20A0000 		.4byte	.LASF81
 28053 02e0 02       		.byte	0x2
 28054 02e1 0C       		.uleb128 0xc
 28055 02e2 2A0D0000 		.4byte	.LASF82
 28056 02e6 03       		.byte	0x3
 28057 02e7 0C       		.uleb128 0xc
 28058 02e8 320C0000 		.4byte	.LASF83
 28059 02ec 04       		.byte	0x4
 28060 02ed 0C       		.uleb128 0xc
 28061 02ee AC0E0000 		.4byte	.LASF84
 28062 02f2 05       		.byte	0x5
 28063 02f3 0C       		.uleb128 0xc
 28064 02f4 890D0000 		.4byte	.LASF85
 28065 02f8 06       		.byte	0x6
 28066 02f9 0C       		.uleb128 0xc
 28067 02fa DC0C0000 		.4byte	.LASF86
 28068 02fe 07       		.byte	0x7
 28069 02ff 0C       		.uleb128 0xc
 28070 0300 03070000 		.4byte	.LASF87
 28071 0304 08       		.byte	0x8
 28072 0305 0C       		.uleb128 0xc
 28073 0306 35080000 		.4byte	.LASF88
 28074 030a 09       		.byte	0x9
 28075 030b 00       		.byte	0
 28076 030c 03       		.uleb128 0x3
 28077 030d AC140000 		.4byte	.LASF89
 28078 0311 07       		.byte	0x7
 28079 0312 7E       		.byte	0x7e
 28080 0313 17030000 		.4byte	0x317
 28081 0317 0D       		.uleb128 0xd
 28082 0318 AC140000 		.4byte	.LASF89
 28083 031c 07       		.uleb128 0x7
 28084 031d 04       		.byte	0x4
 28085 031e 0C030000 		.4byte	0x30c
 28086 0322 0E       		.uleb128 0xe
 28087 0323 5C0A0000 		.4byte	.LASF92
 28088 0327 10       		.byte	0x10
 28089 0328 08       		.byte	0x8
 28090 0329 E4       		.byte	0xe4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 616


 28091 032a 5F030000 		.4byte	0x35f
 28092 032e 0F       		.uleb128 0xf
 28093 032f 706F7300 		.ascii	"pos\000"
 28094 0333 08       		.byte	0x8
 28095 0334 E5       		.byte	0xe5
 28096 0335 D3000000 		.4byte	0xd3
 28097 0339 00       		.byte	0
 28098 033a 10       		.uleb128 0x10
 28099 033b 3A090000 		.4byte	.LASF90
 28100 033f 08       		.byte	0x8
 28101 0340 E6       		.byte	0xe6
 28102 0341 D3000000 		.4byte	0xd3
 28103 0345 04       		.byte	0x4
 28104 0346 0F       		.uleb128 0xf
 28105 0347 70776D00 		.ascii	"pwm\000"
 28106 034b 08       		.byte	0x8
 28107 034c E7       		.byte	0xe7
 28108 034d D3000000 		.4byte	0xd3
 28109 0351 08       		.byte	0x8
 28110 0352 10       		.uleb128 0x10
 28111 0353 ED0E0000 		.4byte	.LASF91
 28112 0357 08       		.byte	0x8
 28113 0358 E8       		.byte	0xe8
 28114 0359 97000000 		.4byte	0x97
 28115 035d 0C       		.byte	0xc
 28116 035e 00       		.byte	0
 28117 035f 0E       		.uleb128 0xe
 28118 0360 AB100000 		.4byte	.LASF93
 28119 0364 34       		.byte	0x34
 28120 0365 08       		.byte	0x8
 28121 0366 EF       		.byte	0xef
 28122 0367 C0030000 		.4byte	0x3c0
 28123 036b 0F       		.uleb128 0xf
 28124 036c 706F7300 		.ascii	"pos\000"
 28125 0370 08       		.byte	0x8
 28126 0371 F0       		.byte	0xf0
 28127 0372 C0030000 		.4byte	0x3c0
 28128 0376 00       		.byte	0
 28129 0377 10       		.uleb128 0x10
 28130 0378 3A090000 		.4byte	.LASF90
 28131 037c 08       		.byte	0x8
 28132 037d F1       		.byte	0xf1
 28133 037e D3000000 		.4byte	0xd3
 28134 0382 0C       		.byte	0xc
 28135 0383 10       		.uleb128 0x10
 28136 0384 34130000 		.4byte	.LASF94
 28137 0388 08       		.byte	0x8
 28138 0389 F2       		.byte	0xf2
 28139 038a D3000000 		.4byte	0xd3
 28140 038e 10       		.byte	0x10
 28141 038f 10       		.uleb128 0x10
 28142 0390 B8080000 		.4byte	.LASF95
 28143 0394 08       		.byte	0x8
 28144 0395 F3       		.byte	0xf3
 28145 0396 D3000000 		.4byte	0xd3
 28146 039a 14       		.byte	0x14
 28147 039b 0F       		.uleb128 0xf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 617


 28148 039c 726F7400 		.ascii	"rot\000"
 28149 03a0 08       		.byte	0x8
 28150 03a1 F4       		.byte	0xf4
 28151 03a2 D0030000 		.4byte	0x3d0
 28152 03a6 18       		.byte	0x18
 28153 03a7 0F       		.uleb128 0xf
 28154 03a8 76656C00 		.ascii	"vel\000"
 28155 03ac 08       		.byte	0x8
 28156 03ad F5       		.byte	0xf5
 28157 03ae C0030000 		.4byte	0x3c0
 28158 03b2 1C       		.byte	0x1c
 28159 03b3 0F       		.uleb128 0xf
 28160 03b4 61636300 		.ascii	"acc\000"
 28161 03b8 08       		.byte	0x8
 28162 03b9 F6       		.byte	0xf6
 28163 03ba C0030000 		.4byte	0x3c0
 28164 03be 28       		.byte	0x28
 28165 03bf 00       		.byte	0
 28166 03c0 09       		.uleb128 0x9
 28167 03c1 D3000000 		.4byte	0xd3
 28168 03c5 D0030000 		.4byte	0x3d0
 28169 03c9 0A       		.uleb128 0xa
 28170 03ca 18010000 		.4byte	0x118
 28171 03ce 02       		.byte	0x2
 28172 03cf 00       		.byte	0
 28173 03d0 09       		.uleb128 0x9
 28174 03d1 BB000000 		.4byte	0xbb
 28175 03d5 E0030000 		.4byte	0x3e0
 28176 03d9 0A       		.uleb128 0xa
 28177 03da 18010000 		.4byte	0x118
 28178 03de 02       		.byte	0x2
 28179 03df 00       		.byte	0
 28180 03e0 0E       		.uleb128 0xe
 28181 03e1 A30B0000 		.4byte	.LASF96
 28182 03e5 28       		.byte	0x28
 28183 03e6 08       		.byte	0x8
 28184 03e7 F9       		.byte	0xf9
 28185 03e8 11040000 		.4byte	0x411
 28186 03ec 0F       		.uleb128 0xf
 28187 03ed 656D6700 		.ascii	"emg\000"
 28188 03f1 08       		.byte	0x8
 28189 03f2 FA       		.byte	0xfa
 28190 03f3 11040000 		.4byte	0x411
 28191 03f7 00       		.byte	0
 28192 03f8 10       		.uleb128 0x10
 28193 03f9 220D0000 		.4byte	.LASF97
 28194 03fd 08       		.byte	0x8
 28195 03fe FB       		.byte	0xfb
 28196 03ff 21040000 		.4byte	0x421
 28197 0403 08       		.byte	0x8
 28198 0404 10       		.uleb128 0x10
 28199 0405 D7110000 		.4byte	.LASF98
 28200 0409 08       		.byte	0x8
 28201 040a FC       		.byte	0xfc
 28202 040b 11040000 		.4byte	0x411
 28203 040f 20       		.byte	0x20
 28204 0410 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 618


 28205 0411 09       		.uleb128 0x9
 28206 0412 D3000000 		.4byte	0xd3
 28207 0416 21040000 		.4byte	0x421
 28208 041a 0A       		.uleb128 0xa
 28209 041b 18010000 		.4byte	0x118
 28210 041f 01       		.byte	0x1
 28211 0420 00       		.byte	0
 28212 0421 09       		.uleb128 0x9
 28213 0422 D3000000 		.4byte	0xd3
 28214 0426 31040000 		.4byte	0x431
 28215 042a 0A       		.uleb128 0xa
 28216 042b 18010000 		.4byte	0x118
 28217 042f 05       		.byte	0x5
 28218 0430 00       		.byte	0
 28219 0431 0E       		.uleb128 0xe
 28220 0432 0E060000 		.4byte	.LASF99
 28221 0436 04       		.byte	0x4
 28222 0437 08       		.byte	0x8
 28223 0438 FF       		.byte	0xff
 28224 0439 4B040000 		.4byte	0x44b
 28225 043d 11       		.uleb128 0x11
 28226 043e 96050000 		.4byte	.LASF100
 28227 0442 08       		.byte	0x8
 28228 0443 0001     		.2byte	0x100
 28229 0445 EB000000 		.4byte	0xeb
 28230 0449 00       		.byte	0
 28231 044a 00       		.byte	0
 28232 044b 12       		.uleb128 0x12
 28233 044c 12010000 		.4byte	.LASF101
 28234 0450 86       		.byte	0x86
 28235 0451 08       		.byte	0x8
 28236 0452 0701     		.2byte	0x107
 28237 0454 8D040000 		.4byte	0x48d
 28238 0458 11       		.uleb128 0x11
 28239 0459 D1060000 		.4byte	.LASF102
 28240 045d 08       		.byte	0x8
 28241 045e 0801     		.2byte	0x108
 28242 0460 8D040000 		.4byte	0x48d
 28243 0464 00       		.byte	0
 28244 0465 11       		.uleb128 0x11
 28245 0466 C20E0000 		.4byte	.LASF103
 28246 046a 08       		.byte	0x8
 28247 046b 0901     		.2byte	0x109
 28248 046d C7000000 		.4byte	0xc7
 28249 0471 80       		.byte	0x80
 28250 0472 13       		.uleb128 0x13
 28251 0473 696E6400 		.ascii	"ind\000"
 28252 0477 08       		.byte	0x8
 28253 0478 0A01     		.2byte	0x10a
 28254 047a C7000000 		.4byte	0xc7
 28255 047e 82       		.byte	0x82
 28256 047f 11       		.uleb128 0x11
 28257 0480 BF020000 		.4byte	.LASF104
 28258 0484 08       		.byte	0x8
 28259 0485 0B01     		.2byte	0x10b
 28260 0487 97000000 		.4byte	0x97
 28261 048b 84       		.byte	0x84
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 619


 28262 048c 00       		.byte	0
 28263 048d 09       		.uleb128 0x9
 28264 048e 97000000 		.4byte	0x97
 28265 0492 9D040000 		.4byte	0x49d
 28266 0496 0A       		.uleb128 0xa
 28267 0497 18010000 		.4byte	0x118
 28268 049b 7F       		.byte	0x7f
 28269 049c 00       		.byte	0
 28270 049d 12       		.uleb128 0x12
 28271 049e CD030000 		.4byte	.LASF105
 28272 04a2 50       		.byte	0x50
 28273 04a3 08       		.byte	0x8
 28274 04a4 1401     		.2byte	0x114
 28275 04a6 06050000 		.4byte	0x506
 28276 04aa 11       		.uleb128 0x11
 28277 04ab 1F040000 		.4byte	.LASF106
 28278 04af 08       		.byte	0x8
 28279 04b0 1501     		.2byte	0x115
 28280 04b2 06050000 		.4byte	0x506
 28281 04b6 00       		.byte	0
 28282 04b7 11       		.uleb128 0x11
 28283 04b8 78020000 		.4byte	.LASF107
 28284 04bc 08       		.byte	0x8
 28285 04bd 1601     		.2byte	0x116
 28286 04bf 16050000 		.4byte	0x516
 28287 04c3 08       		.byte	0x8
 28288 04c4 11       		.uleb128 0x11
 28289 04c5 600D0000 		.4byte	.LASF108
 28290 04c9 08       		.byte	0x8
 28291 04ca 1701     		.2byte	0x117
 28292 04cc 26050000 		.4byte	0x526
 28293 04d0 30       		.byte	0x30
 28294 04d1 11       		.uleb128 0x11
 28295 04d2 DB010000 		.4byte	.LASF109
 28296 04d6 08       		.byte	0x8
 28297 04d7 1801     		.2byte	0x118
 28298 04d9 AF000000 		.4byte	0xaf
 28299 04dd 40       		.byte	0x40
 28300 04de 11       		.uleb128 0x11
 28301 04df FF140000 		.4byte	.LASF110
 28302 04e3 08       		.byte	0x8
 28303 04e4 1901     		.2byte	0x119
 28304 04e6 AF000000 		.4byte	0xaf
 28305 04ea 44       		.byte	0x44
 28306 04eb 11       		.uleb128 0x11
 28307 04ec 8C080000 		.4byte	.LASF111
 28308 04f0 08       		.byte	0x8
 28309 04f1 1A01     		.2byte	0x11a
 28310 04f3 AF000000 		.4byte	0xaf
 28311 04f7 48       		.byte	0x48
 28312 04f8 11       		.uleb128 0x11
 28313 04f9 D6080000 		.4byte	.LASF112
 28314 04fd 08       		.byte	0x8
 28315 04fe 1B01     		.2byte	0x11b
 28316 0500 AF000000 		.4byte	0xaf
 28317 0504 4C       		.byte	0x4c
 28318 0505 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 620


 28319 0506 09       		.uleb128 0x9
 28320 0507 AF000000 		.4byte	0xaf
 28321 050b 16050000 		.4byte	0x516
 28322 050f 0A       		.uleb128 0xa
 28323 0510 18010000 		.4byte	0x118
 28324 0514 01       		.byte	0x1
 28325 0515 00       		.byte	0
 28326 0516 09       		.uleb128 0x9
 28327 0517 AF000000 		.4byte	0xaf
 28328 051b 26050000 		.4byte	0x526
 28329 051f 0A       		.uleb128 0xa
 28330 0520 18010000 		.4byte	0x118
 28331 0524 09       		.byte	0x9
 28332 0525 00       		.byte	0
 28333 0526 09       		.uleb128 0x9
 28334 0527 AF000000 		.4byte	0xaf
 28335 052b 36050000 		.4byte	0x536
 28336 052f 0A       		.uleb128 0xa
 28337 0530 18010000 		.4byte	0x118
 28338 0534 03       		.byte	0x3
 28339 0535 00       		.byte	0
 28340 0536 12       		.uleb128 0x12
 28341 0537 78060000 		.4byte	.LASF113
 28342 053b 10       		.byte	0x10
 28343 053c 08       		.byte	0x8
 28344 053d 2201     		.2byte	0x122
 28345 053f C5050000 		.4byte	0x5c5
 28346 0543 13       		.uleb128 0x13
 28347 0544 696400   		.ascii	"id\000"
 28348 0547 08       		.byte	0x8
 28349 0548 2301     		.2byte	0x123
 28350 054a 97000000 		.4byte	0x97
 28351 054e 00       		.byte	0
 28352 054f 11       		.uleb128 0x11
 28353 0550 05120000 		.4byte	.LASF114
 28354 0554 08       		.byte	0x8
 28355 0555 2401     		.2byte	0x124
 28356 0557 C5050000 		.4byte	0x5c5
 28357 055b 01       		.byte	0x1
 28358 055c 11       		.uleb128 0x11
 28359 055d 81120000 		.4byte	.LASF115
 28360 0561 08       		.byte	0x8
 28361 0562 2501     		.2byte	0x125
 28362 0564 C5050000 		.4byte	0x5c5
 28363 0568 04       		.byte	0x4
 28364 0569 11       		.uleb128 0x11
 28365 056a 39050000 		.4byte	.LASF116
 28366 056e 08       		.byte	0x8
 28367 056f 2601     		.2byte	0x126
 28368 0571 97000000 		.4byte	0x97
 28369 0575 07       		.byte	0x7
 28370 0576 11       		.uleb128 0x11
 28371 0577 79030000 		.4byte	.LASF117
 28372 057b 08       		.byte	0x8
 28373 057c 2701     		.2byte	0x127
 28374 057e 97000000 		.4byte	0x97
 28375 0582 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 621


 28376 0583 11       		.uleb128 0x11
 28377 0584 0A030000 		.4byte	.LASF118
 28378 0588 08       		.byte	0x8
 28379 0589 2801     		.2byte	0x128
 28380 058b 97000000 		.4byte	0x97
 28381 058f 09       		.byte	0x9
 28382 0590 11       		.uleb128 0x11
 28383 0591 C6130000 		.4byte	.LASF119
 28384 0595 08       		.byte	0x8
 28385 0596 2901     		.2byte	0x129
 28386 0598 97000000 		.4byte	0x97
 28387 059c 0A       		.byte	0xa
 28388 059d 11       		.uleb128 0x11
 28389 059e 8A130000 		.4byte	.LASF120
 28390 05a2 08       		.byte	0x8
 28391 05a3 2A01     		.2byte	0x12a
 28392 05a5 97000000 		.4byte	0x97
 28393 05a9 0B       		.byte	0xb
 28394 05aa 11       		.uleb128 0x11
 28395 05ab 55100000 		.4byte	.LASF121
 28396 05af 08       		.byte	0x8
 28397 05b0 2B01     		.2byte	0x12b
 28398 05b2 97000000 		.4byte	0x97
 28399 05b6 0C       		.byte	0xc
 28400 05b7 11       		.uleb128 0x11
 28401 05b8 AA030000 		.4byte	.LASF122
 28402 05bc 08       		.byte	0x8
 28403 05bd 2C01     		.2byte	0x12c
 28404 05bf C5050000 		.4byte	0x5c5
 28405 05c3 0D       		.byte	0xd
 28406 05c4 00       		.byte	0
 28407 05c5 09       		.uleb128 0x9
 28408 05c6 97000000 		.4byte	0x97
 28409 05ca D5050000 		.4byte	0x5d5
 28410 05ce 0A       		.uleb128 0xa
 28411 05cf 18010000 		.4byte	0x118
 28412 05d3 02       		.byte	0x2
 28413 05d4 00       		.byte	0
 28414 05d5 12       		.uleb128 0x12
 28415 05d6 97140000 		.4byte	.LASF123
 28416 05da 70       		.byte	0x70
 28417 05db 08       		.byte	0x8
 28418 05dc 3301     		.2byte	0x133
 28419 05de 4F070000 		.4byte	0x74f
 28420 05e2 13       		.uleb128 0x13
 28421 05e3 6B5F7000 		.ascii	"k_p\000"
 28422 05e7 08       		.byte	0x8
 28423 05e8 3401     		.2byte	0x134
 28424 05ea D3000000 		.4byte	0xd3
 28425 05ee 00       		.byte	0
 28426 05ef 13       		.uleb128 0x13
 28427 05f0 6B5F6900 		.ascii	"k_i\000"
 28428 05f4 08       		.byte	0x8
 28429 05f5 3501     		.2byte	0x135
 28430 05f7 D3000000 		.4byte	0xd3
 28431 05fb 04       		.byte	0x4
 28432 05fc 13       		.uleb128 0x13
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 622


 28433 05fd 6B5F6400 		.ascii	"k_d\000"
 28434 0601 08       		.byte	0x8
 28435 0602 3601     		.2byte	0x136
 28436 0604 D3000000 		.4byte	0xd3
 28437 0608 08       		.byte	0x8
 28438 0609 11       		.uleb128 0x11
 28439 060a 3C0F0000 		.4byte	.LASF124
 28440 060e 08       		.byte	0x8
 28441 060f 3701     		.2byte	0x137
 28442 0611 D3000000 		.4byte	0xd3
 28443 0615 0C       		.byte	0xc
 28444 0616 11       		.uleb128 0x11
 28445 0617 2E060000 		.4byte	.LASF125
 28446 061b 08       		.byte	0x8
 28447 061c 3801     		.2byte	0x138
 28448 061e D3000000 		.4byte	0xd3
 28449 0622 10       		.byte	0x10
 28450 0623 11       		.uleb128 0x11
 28451 0624 08060000 		.4byte	.LASF126
 28452 0628 08       		.byte	0x8
 28453 0629 3901     		.2byte	0x139
 28454 062b D3000000 		.4byte	0xd3
 28455 062f 14       		.byte	0x14
 28456 0630 11       		.uleb128 0x11
 28457 0631 2D130000 		.4byte	.LASF127
 28458 0635 08       		.byte	0x8
 28459 0636 3A01     		.2byte	0x13a
 28460 0638 D3000000 		.4byte	0xd3
 28461 063c 18       		.byte	0x18
 28462 063d 11       		.uleb128 0x11
 28463 063e BB060000 		.4byte	.LASF128
 28464 0642 08       		.byte	0x8
 28465 0643 3B01     		.2byte	0x13b
 28466 0645 D3000000 		.4byte	0xd3
 28467 0649 1C       		.byte	0x1c
 28468 064a 11       		.uleb128 0x11
 28469 064b C7110000 		.4byte	.LASF129
 28470 064f 08       		.byte	0x8
 28471 0650 3C01     		.2byte	0x13c
 28472 0652 D3000000 		.4byte	0xd3
 28473 0656 20       		.byte	0x20
 28474 0657 11       		.uleb128 0x11
 28475 0658 D8060000 		.4byte	.LASF130
 28476 065c 08       		.byte	0x8
 28477 065d 3D01     		.2byte	0x13d
 28478 065f D3000000 		.4byte	0xd3
 28479 0663 24       		.byte	0x24
 28480 0664 11       		.uleb128 0x11
 28481 0665 C7070000 		.4byte	.LASF131
 28482 0669 08       		.byte	0x8
 28483 066a 3E01     		.2byte	0x13e
 28484 066c D3000000 		.4byte	0xd3
 28485 0670 28       		.byte	0x28
 28486 0671 11       		.uleb128 0x11
 28487 0672 AE150000 		.4byte	.LASF132
 28488 0676 08       		.byte	0x8
 28489 0677 3F01     		.2byte	0x13f
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 623


 28490 0679 D3000000 		.4byte	0xd3
 28491 067d 2C       		.byte	0x2c
 28492 067e 11       		.uleb128 0x11
 28493 067f F2080000 		.4byte	.LASF133
 28494 0683 08       		.byte	0x8
 28495 0684 4001     		.2byte	0x140
 28496 0686 97000000 		.4byte	0x97
 28497 068a 30       		.byte	0x30
 28498 068b 11       		.uleb128 0x11
 28499 068c 16130000 		.4byte	.LASF134
 28500 0690 08       		.byte	0x8
 28501 0691 4101     		.2byte	0x141
 28502 0693 97000000 		.4byte	0x97
 28503 0697 31       		.byte	0x31
 28504 0698 11       		.uleb128 0x11
 28505 0699 5C0F0000 		.4byte	.LASF135
 28506 069d 08       		.byte	0x8
 28507 069e 4201     		.2byte	0x142
 28508 06a0 97000000 		.4byte	0x97
 28509 06a4 32       		.byte	0x32
 28510 06a5 11       		.uleb128 0x11
 28511 06a6 B4140000 		.4byte	.LASF136
 28512 06aa 08       		.byte	0x8
 28513 06ab 4301     		.2byte	0x143
 28514 06ad 97000000 		.4byte	0x97
 28515 06b1 33       		.byte	0x33
 28516 06b2 11       		.uleb128 0x11
 28517 06b3 8F010000 		.4byte	.LASF137
 28518 06b7 08       		.byte	0x8
 28519 06b8 4401     		.2byte	0x144
 28520 06ba D3000000 		.4byte	0xd3
 28521 06be 34       		.byte	0x34
 28522 06bf 11       		.uleb128 0x11
 28523 06c0 4D060000 		.4byte	.LASF138
 28524 06c4 08       		.byte	0x8
 28525 06c5 4501     		.2byte	0x145
 28526 06c7 D3000000 		.4byte	0xd3
 28527 06cb 38       		.byte	0x38
 28528 06cc 11       		.uleb128 0x11
 28529 06cd 380B0000 		.4byte	.LASF139
 28530 06d1 08       		.byte	0x8
 28531 06d2 4601     		.2byte	0x146
 28532 06d4 D3000000 		.4byte	0xd3
 28533 06d8 3C       		.byte	0x3c
 28534 06d9 11       		.uleb128 0x11
 28535 06da B5050000 		.4byte	.LASF140
 28536 06de 08       		.byte	0x8
 28537 06df 4701     		.2byte	0x147
 28538 06e1 D3000000 		.4byte	0xd3
 28539 06e5 40       		.byte	0x40
 28540 06e6 11       		.uleb128 0x11
 28541 06e7 CF010000 		.4byte	.LASF141
 28542 06eb 08       		.byte	0x8
 28543 06ec 4801     		.2byte	0x148
 28544 06ee 4F070000 		.4byte	0x74f
 28545 06f2 44       		.byte	0x44
 28546 06f3 11       		.uleb128 0x11
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 624


 28547 06f4 44150000 		.4byte	.LASF142
 28548 06f8 08       		.byte	0x8
 28549 06f9 4901     		.2byte	0x149
 28550 06fb C7000000 		.4byte	0xc7
 28551 06ff 5C       		.byte	0x5c
 28552 0700 11       		.uleb128 0x11
 28553 0701 3F090000 		.4byte	.LASF143
 28554 0705 08       		.byte	0x8
 28555 0706 4A01     		.2byte	0x14a
 28556 0708 97000000 		.4byte	0x97
 28557 070c 5E       		.byte	0x5e
 28558 070d 11       		.uleb128 0x11
 28559 070e 520C0000 		.4byte	.LASF144
 28560 0712 08       		.byte	0x8
 28561 0713 4B01     		.2byte	0x14b
 28562 0715 97000000 		.4byte	0x97
 28563 0719 5F       		.byte	0x5f
 28564 071a 11       		.uleb128 0x11
 28565 071b 5D050000 		.4byte	.LASF145
 28566 071f 08       		.byte	0x8
 28567 0720 4C01     		.2byte	0x14c
 28568 0722 97000000 		.4byte	0x97
 28569 0726 60       		.byte	0x60
 28570 0727 11       		.uleb128 0x11
 28571 0728 F7050000 		.4byte	.LASF146
 28572 072c 08       		.byte	0x8
 28573 072d 4D01     		.2byte	0x14d
 28574 072f 97000000 		.4byte	0x97
 28575 0733 61       		.byte	0x61
 28576 0734 11       		.uleb128 0x11
 28577 0735 1A050000 		.4byte	.LASF147
 28578 0739 08       		.byte	0x8
 28579 073a 4E01     		.2byte	0x14e
 28580 073c 97000000 		.4byte	0x97
 28581 0740 62       		.byte	0x62
 28582 0741 11       		.uleb128 0x11
 28583 0742 AA030000 		.4byte	.LASF122
 28584 0746 08       		.byte	0x8
 28585 0747 4F01     		.2byte	0x14f
 28586 0749 5F070000 		.4byte	0x75f
 28587 074d 63       		.byte	0x63
 28588 074e 00       		.byte	0
 28589 074f 09       		.uleb128 0x9
 28590 0750 EB000000 		.4byte	0xeb
 28591 0754 5F070000 		.4byte	0x75f
 28592 0758 0A       		.uleb128 0xa
 28593 0759 18010000 		.4byte	0x118
 28594 075d 05       		.byte	0x5
 28595 075e 00       		.byte	0
 28596 075f 09       		.uleb128 0x9
 28597 0760 97000000 		.4byte	0x97
 28598 0764 6F070000 		.4byte	0x76f
 28599 0768 0A       		.uleb128 0xa
 28600 0769 18010000 		.4byte	0x118
 28601 076d 0C       		.byte	0xc
 28602 076e 00       		.byte	0
 28603 076f 12       		.uleb128 0x12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 625


 28604 0770 2D140000 		.4byte	.LASF148
 28605 0774 30       		.byte	0x30
 28606 0775 08       		.byte	0x8
 28607 0776 5601     		.2byte	0x156
 28608 0778 F2070000 		.4byte	0x7f2
 28609 077c 11       		.uleb128 0x11
 28610 077d 1A0B0000 		.4byte	.LASF149
 28611 0781 08       		.byte	0x8
 28612 0782 5701     		.2byte	0x157
 28613 0784 F2070000 		.4byte	0x7f2
 28614 0788 00       		.byte	0
 28615 0789 13       		.uleb128 0x13
 28616 078a 72657300 		.ascii	"res\000"
 28617 078e 08       		.byte	0x8
 28618 078f 5801     		.2byte	0x158
 28619 0791 C5050000 		.4byte	0x5c5
 28620 0795 05       		.byte	0x5
 28621 0796 11       		.uleb128 0x11
 28622 0797 01090000 		.4byte	.LASF150
 28623 079b 08       		.byte	0x8
 28624 079c 5901     		.2byte	0x159
 28625 079e C0030000 		.4byte	0x3c0
 28626 07a2 08       		.byte	0x8
 28627 07a3 11       		.uleb128 0x11
 28628 07a4 27060000 		.4byte	.LASF151
 28629 07a8 08       		.byte	0x8
 28630 07a9 5A01     		.2byte	0x15a
 28631 07ab 02080000 		.4byte	0x802
 28632 07af 14       		.byte	0x14
 28633 07b0 11       		.uleb128 0x11
 28634 07b1 090E0000 		.4byte	.LASF152
 28635 07b5 08       		.byte	0x8
 28636 07b6 5B01     		.2byte	0x15b
 28637 07b8 97000000 		.4byte	0x97
 28638 07bc 20       		.byte	0x20
 28639 07bd 11       		.uleb128 0x11
 28640 07be C5020000 		.4byte	.LASF153
 28641 07c2 08       		.byte	0x8
 28642 07c3 5C01     		.2byte	0x15c
 28643 07c5 C5050000 		.4byte	0x5c5
 28644 07c9 21       		.byte	0x21
 28645 07ca 11       		.uleb128 0x11
 28646 07cb BC0D0000 		.4byte	.LASF154
 28647 07cf 08       		.byte	0x8
 28648 07d0 5D01     		.2byte	0x15d
 28649 07d2 BB000000 		.4byte	0xbb
 28650 07d6 24       		.byte	0x24
 28651 07d7 11       		.uleb128 0x11
 28652 07d8 7C100000 		.4byte	.LASF155
 28653 07dc 08       		.byte	0x8
 28654 07dd 5E01     		.2byte	0x15e
 28655 07df D0030000 		.4byte	0x3d0
 28656 07e3 25       		.byte	0x25
 28657 07e4 11       		.uleb128 0x11
 28658 07e5 AA030000 		.4byte	.LASF122
 28659 07e9 08       		.byte	0x8
 28660 07ea 5F01     		.2byte	0x15f
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 626


 28661 07ec 12080000 		.4byte	0x812
 28662 07f0 28       		.byte	0x28
 28663 07f1 00       		.byte	0
 28664 07f2 09       		.uleb128 0x9
 28665 07f3 97000000 		.4byte	0x97
 28666 07f7 02080000 		.4byte	0x802
 28667 07fb 0A       		.uleb128 0xa
 28668 07fc 18010000 		.4byte	0x118
 28669 0800 04       		.byte	0x4
 28670 0801 00       		.byte	0
 28671 0802 09       		.uleb128 0x9
 28672 0803 DF000000 		.4byte	0xdf
 28673 0807 12080000 		.4byte	0x812
 28674 080b 0A       		.uleb128 0xa
 28675 080c 18010000 		.4byte	0x118
 28676 0810 02       		.byte	0x2
 28677 0811 00       		.byte	0
 28678 0812 09       		.uleb128 0x9
 28679 0813 97000000 		.4byte	0x97
 28680 0817 22080000 		.4byte	0x822
 28681 081b 0A       		.uleb128 0xa
 28682 081c 18010000 		.4byte	0x118
 28683 0820 07       		.byte	0x7
 28684 0821 00       		.byte	0
 28685 0822 12       		.uleb128 0x12
 28686 0823 71020000 		.4byte	.LASF156
 28687 0827 10       		.byte	0x10
 28688 0828 08       		.byte	0x8
 28689 0829 6601     		.2byte	0x166
 28690 082b 71080000 		.4byte	0x871
 28691 082f 11       		.uleb128 0x11
 28692 0830 400D0000 		.4byte	.LASF157
 28693 0834 08       		.byte	0x8
 28694 0835 6701     		.2byte	0x167
 28695 0837 71080000 		.4byte	0x871
 28696 083b 00       		.byte	0
 28697 083c 11       		.uleb128 0x11
 28698 083d 09150000 		.4byte	.LASF158
 28699 0841 08       		.byte	0x8
 28700 0842 6801     		.2byte	0x168
 28701 0844 06050000 		.4byte	0x506
 28702 0848 04       		.byte	0x4
 28703 0849 11       		.uleb128 0x11
 28704 084a 59060000 		.4byte	.LASF159
 28705 084e 08       		.byte	0x8
 28706 084f 6901     		.2byte	0x169
 28707 0851 81080000 		.4byte	0x881
 28708 0855 0C       		.byte	0xc
 28709 0856 11       		.uleb128 0x11
 28710 0857 96100000 		.4byte	.LASF160
 28711 085b 08       		.byte	0x8
 28712 085c 6A01     		.2byte	0x16a
 28713 085e 97000000 		.4byte	0x97
 28714 0862 0E       		.byte	0xe
 28715 0863 11       		.uleb128 0x11
 28716 0864 0B130000 		.4byte	.LASF161
 28717 0868 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 627


 28718 0869 6B01     		.2byte	0x16b
 28719 086b 97000000 		.4byte	0x97
 28720 086f 0F       		.byte	0xf
 28721 0870 00       		.byte	0
 28722 0871 09       		.uleb128 0x9
 28723 0872 A3000000 		.4byte	0xa3
 28724 0876 81080000 		.4byte	0x881
 28725 087a 0A       		.uleb128 0xa
 28726 087b 18010000 		.4byte	0x118
 28727 087f 01       		.byte	0x1
 28728 0880 00       		.byte	0
 28729 0881 09       		.uleb128 0x9
 28730 0882 97000000 		.4byte	0x97
 28731 0886 91080000 		.4byte	0x891
 28732 088a 0A       		.uleb128 0xa
 28733 088b 18010000 		.4byte	0x118
 28734 088f 01       		.byte	0x1
 28735 0890 00       		.byte	0
 28736 0891 12       		.uleb128 0x12
 28737 0892 9A0C0000 		.4byte	.LASF162
 28738 0896 20       		.byte	0x20
 28739 0897 08       		.byte	0x8
 28740 0898 7201     		.2byte	0x172
 28741 089a D3080000 		.4byte	0x8d3
 28742 089e 11       		.uleb128 0x11
 28743 089f 25030000 		.4byte	.LASF163
 28744 08a3 08       		.byte	0x8
 28745 08a4 7301     		.2byte	0x173
 28746 08a6 97000000 		.4byte	0x97
 28747 08aa 00       		.byte	0
 28748 08ab 11       		.uleb128 0x11
 28749 08ac 2B0E0000 		.4byte	.LASF164
 28750 08b0 08       		.byte	0x8
 28751 08b1 7401     		.2byte	0x174
 28752 08b3 97000000 		.4byte	0x97
 28753 08b7 01       		.byte	0x1
 28754 08b8 11       		.uleb128 0x11
 28755 08b9 900B0000 		.4byte	.LASF165
 28756 08bd 08       		.byte	0x8
 28757 08be 7501     		.2byte	0x175
 28758 08c0 D3080000 		.4byte	0x8d3
 28759 08c4 02       		.byte	0x2
 28760 08c5 11       		.uleb128 0x11
 28761 08c6 AA030000 		.4byte	.LASF122
 28762 08ca 08       		.byte	0x8
 28763 08cb 7601     		.2byte	0x176
 28764 08cd F2070000 		.4byte	0x7f2
 28765 08d1 1B       		.byte	0x1b
 28766 08d2 00       		.byte	0
 28767 08d3 09       		.uleb128 0x9
 28768 08d4 97000000 		.4byte	0x97
 28769 08d8 E9080000 		.4byte	0x8e9
 28770 08dc 0A       		.uleb128 0xa
 28771 08dd 18010000 		.4byte	0x118
 28772 08e1 04       		.byte	0x4
 28773 08e2 0A       		.uleb128 0xa
 28774 08e3 18010000 		.4byte	0x118
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 628


 28775 08e7 04       		.byte	0x4
 28776 08e8 00       		.byte	0
 28777 08e9 12       		.uleb128 0x12
 28778 08ea 89100000 		.4byte	.LASF166
 28779 08ee 20       		.byte	0x20
 28780 08ef 08       		.byte	0x8
 28781 08f0 7D01     		.2byte	0x17d
 28782 08f2 45090000 		.4byte	0x945
 28783 08f6 11       		.uleb128 0x11
 28784 08f7 FF0D0000 		.4byte	.LASF167
 28785 08fb 08       		.byte	0x8
 28786 08fc 7E01     		.2byte	0x17e
 28787 08fe 45090000 		.4byte	0x945
 28788 0902 00       		.byte	0
 28789 0903 11       		.uleb128 0x11
 28790 0904 F8120000 		.4byte	.LASF168
 28791 0908 08       		.byte	0x8
 28792 0909 7F01     		.2byte	0x17f
 28793 090b 97000000 		.4byte	0x97
 28794 090f 06       		.byte	0x6
 28795 0910 11       		.uleb128 0x11
 28796 0911 4D130000 		.4byte	.LASF169
 28797 0915 08       		.byte	0x8
 28798 0916 8001     		.2byte	0x180
 28799 0918 97000000 		.4byte	0x97
 28800 091c 07       		.byte	0x7
 28801 091d 11       		.uleb128 0x11
 28802 091e 88060000 		.4byte	.LASF170
 28803 0922 08       		.byte	0x8
 28804 0923 8101     		.2byte	0x181
 28805 0925 55090000 		.4byte	0x955
 28806 0929 08       		.byte	0x8
 28807 092a 11       		.uleb128 0x11
 28808 092b 33030000 		.4byte	.LASF171
 28809 092f 08       		.byte	0x8
 28810 0930 8201     		.2byte	0x182
 28811 0932 97000000 		.4byte	0x97
 28812 0936 14       		.byte	0x14
 28813 0937 11       		.uleb128 0x11
 28814 0938 AA030000 		.4byte	.LASF122
 28815 093c 08       		.byte	0x8
 28816 093d 8301     		.2byte	0x183
 28817 093f 65090000 		.4byte	0x965
 28818 0943 15       		.byte	0x15
 28819 0944 00       		.byte	0
 28820 0945 09       		.uleb128 0x9
 28821 0946 97000000 		.4byte	0x97
 28822 094a 55090000 		.4byte	0x955
 28823 094e 0A       		.uleb128 0xa
 28824 094f 18010000 		.4byte	0x118
 28825 0953 05       		.byte	0x5
 28826 0954 00       		.byte	0
 28827 0955 09       		.uleb128 0x9
 28828 0956 97000000 		.4byte	0x97
 28829 095a 65090000 		.4byte	0x965
 28830 095e 0A       		.uleb128 0xa
 28831 095f 18010000 		.4byte	0x118
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 629


 28832 0963 0B       		.byte	0xb
 28833 0964 00       		.byte	0
 28834 0965 09       		.uleb128 0x9
 28835 0966 97000000 		.4byte	0x97
 28836 096a 75090000 		.4byte	0x975
 28837 096e 0A       		.uleb128 0xa
 28838 096f 18010000 		.4byte	0x118
 28839 0973 0A       		.byte	0xa
 28840 0974 00       		.byte	0
 28841 0975 12       		.uleb128 0x12
 28842 0976 5E100000 		.4byte	.LASF172
 28843 097a 20       		.byte	0x20
 28844 097b 08       		.byte	0x8
 28845 097c 8A01     		.2byte	0x18a
 28846 097e AA090000 		.4byte	0x9aa
 28847 0982 11       		.uleb128 0x11
 28848 0983 9E040000 		.4byte	.LASF173
 28849 0987 08       		.byte	0x8
 28850 0988 8B01     		.2byte	0x18b
 28851 098a 40010000 		.4byte	0x140
 28852 098e 00       		.byte	0
 28853 098f 11       		.uleb128 0x11
 28854 0990 88030000 		.4byte	.LASF174
 28855 0994 08       		.byte	0x8
 28856 0995 8C01     		.2byte	0x18c
 28857 0997 22080000 		.4byte	0x822
 28858 099b 08       		.byte	0x8
 28859 099c 11       		.uleb128 0x11
 28860 099d AA030000 		.4byte	.LASF122
 28861 09a1 08       		.byte	0x8
 28862 09a2 8D01     		.2byte	0x18d
 28863 09a4 12080000 		.4byte	0x812
 28864 09a8 18       		.byte	0x18
 28865 09a9 00       		.byte	0
 28866 09aa 12       		.uleb128 0x12
 28867 09ab 880A0000 		.4byte	.LASF175
 28868 09af 10       		.byte	0x10
 28869 09b0 08       		.byte	0x8
 28870 09b1 9401     		.2byte	0x194
 28871 09b3 F9090000 		.4byte	0x9f9
 28872 09b7 11       		.uleb128 0x11
 28873 09b8 31090000 		.4byte	.LASF176
 28874 09bc 08       		.byte	0x8
 28875 09bd 9501     		.2byte	0x195
 28876 09bf D3000000 		.4byte	0xd3
 28877 09c3 00       		.byte	0
 28878 09c4 11       		.uleb128 0x11
 28879 09c5 92150000 		.4byte	.LASF177
 28880 09c9 08       		.byte	0x8
 28881 09ca 9601     		.2byte	0x196
 28882 09cc D3000000 		.4byte	0xd3
 28883 09d0 04       		.byte	0x4
 28884 09d1 11       		.uleb128 0x11
 28885 09d2 63060000 		.4byte	.LASF178
 28886 09d6 08       		.byte	0x8
 28887 09d7 9701     		.2byte	0x197
 28888 09d9 D3000000 		.4byte	0xd3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 630


 28889 09dd 08       		.byte	0x8
 28890 09de 11       		.uleb128 0x11
 28891 09df 8D070000 		.4byte	.LASF179
 28892 09e3 08       		.byte	0x8
 28893 09e4 9801     		.2byte	0x198
 28894 09e6 97000000 		.4byte	0x97
 28895 09ea 0C       		.byte	0xc
 28896 09eb 11       		.uleb128 0x11
 28897 09ec AA030000 		.4byte	.LASF122
 28898 09f0 08       		.byte	0x8
 28899 09f1 9901     		.2byte	0x199
 28900 09f3 C5050000 		.4byte	0x5c5
 28901 09f7 0D       		.byte	0xd
 28902 09f8 00       		.byte	0
 28903 09f9 12       		.uleb128 0x12
 28904 09fa 8F110000 		.4byte	.LASF180
 28905 09fe 10       		.byte	0x10
 28906 09ff 08       		.byte	0x8
 28907 0a00 A001     		.2byte	0x1a0
 28908 0a02 3B0A0000 		.4byte	0xa3b
 28909 0a06 11       		.uleb128 0x11
 28910 0a07 A0070000 		.4byte	.LASF181
 28911 0a0b 08       		.byte	0x8
 28912 0a0c A101     		.2byte	0x1a1
 28913 0a0e A3000000 		.4byte	0xa3
 28914 0a12 00       		.byte	0
 28915 0a13 11       		.uleb128 0x11
 28916 0a14 C3100000 		.4byte	.LASF182
 28917 0a18 08       		.byte	0x8
 28918 0a19 A201     		.2byte	0x1a2
 28919 0a1b C7000000 		.4byte	0xc7
 28920 0a1f 02       		.byte	0x2
 28921 0a20 11       		.uleb128 0x11
 28922 0a21 A9080000 		.4byte	.LASF183
 28923 0a25 08       		.byte	0x8
 28924 0a26 A301     		.2byte	0x1a3
 28925 0a28 71080000 		.4byte	0x871
 28926 0a2c 04       		.byte	0x4
 28927 0a2d 11       		.uleb128 0x11
 28928 0a2e AA030000 		.4byte	.LASF122
 28929 0a32 08       		.byte	0x8
 28930 0a33 A401     		.2byte	0x1a4
 28931 0a35 12080000 		.4byte	0x812
 28932 0a39 08       		.byte	0x8
 28933 0a3a 00       		.byte	0
 28934 0a3b 12       		.uleb128 0x12
 28935 0a3c FD010000 		.4byte	.LASF184
 28936 0a40 10       		.byte	0x10
 28937 0a41 08       		.byte	0x8
 28938 0a42 AB01     		.2byte	0x1ab
 28939 0a44 700A0000 		.4byte	0xa70
 28940 0a48 11       		.uleb128 0x11
 28941 0a49 FD0F0000 		.4byte	.LASF185
 28942 0a4d 08       		.byte	0x8
 28943 0a4e AC01     		.2byte	0x1ac
 28944 0a50 97000000 		.4byte	0x97
 28945 0a54 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 631


 28946 0a55 11       		.uleb128 0x11
 28947 0a56 5A0B0000 		.4byte	.LASF186
 28948 0a5a 08       		.byte	0x8
 28949 0a5b AD01     		.2byte	0x1ad
 28950 0a5d 97000000 		.4byte	0x97
 28951 0a61 01       		.byte	0x1
 28952 0a62 11       		.uleb128 0x11
 28953 0a63 AA030000 		.4byte	.LASF122
 28954 0a67 08       		.byte	0x8
 28955 0a68 AE01     		.2byte	0x1ae
 28956 0a6a 700A0000 		.4byte	0xa70
 28957 0a6e 02       		.byte	0x2
 28958 0a6f 00       		.byte	0
 28959 0a70 09       		.uleb128 0x9
 28960 0a71 97000000 		.4byte	0x97
 28961 0a75 800A0000 		.4byte	0xa80
 28962 0a79 0A       		.uleb128 0xa
 28963 0a7a 18010000 		.4byte	0x118
 28964 0a7e 0D       		.byte	0xd
 28965 0a7f 00       		.byte	0
 28966 0a80 12       		.uleb128 0x12
 28967 0a81 950D0000 		.4byte	.LASF187
 28968 0a85 10       		.byte	0x10
 28969 0a86 08       		.byte	0x8
 28970 0a87 B501     		.2byte	0x1b5
 28971 0a89 C20A0000 		.4byte	0xac2
 28972 0a8d 11       		.uleb128 0x11
 28973 0a8e 43140000 		.4byte	.LASF188
 28974 0a92 08       		.byte	0x8
 28975 0a93 B601     		.2byte	0x1b6
 28976 0a95 D3000000 		.4byte	0xd3
 28977 0a99 00       		.byte	0
 28978 0a9a 11       		.uleb128 0x11
 28979 0a9b 78070000 		.4byte	.LASF189
 28980 0a9f 08       		.byte	0x8
 28981 0aa0 B701     		.2byte	0x1b7
 28982 0aa2 EB000000 		.4byte	0xeb
 28983 0aa6 04       		.byte	0x4
 28984 0aa7 11       		.uleb128 0x11
 28985 0aa8 8F0F0000 		.4byte	.LASF190
 28986 0aac 08       		.byte	0x8
 28987 0aad B801     		.2byte	0x1b8
 28988 0aaf EB000000 		.4byte	0xeb
 28989 0ab3 08       		.byte	0x8
 28990 0ab4 11       		.uleb128 0x11
 28991 0ab5 AA030000 		.4byte	.LASF122
 28992 0ab9 08       		.byte	0x8
 28993 0aba B901     		.2byte	0x1b9
 28994 0abc C20A0000 		.4byte	0xac2
 28995 0ac0 0C       		.byte	0xc
 28996 0ac1 00       		.byte	0
 28997 0ac2 09       		.uleb128 0x9
 28998 0ac3 97000000 		.4byte	0x97
 28999 0ac7 D20A0000 		.4byte	0xad2
 29000 0acb 0A       		.uleb128 0xa
 29001 0acc 18010000 		.4byte	0x118
 29002 0ad0 03       		.byte	0x3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 632


 29003 0ad1 00       		.byte	0
 29004 0ad2 12       		.uleb128 0x12
 29005 0ad3 B4020000 		.4byte	.LASF191
 29006 0ad7 12       		.byte	0x12
 29007 0ad8 08       		.byte	0x8
 29008 0ad9 C001     		.2byte	0x1c0
 29009 0adb 140B0000 		.4byte	0xb14
 29010 0adf 11       		.uleb128 0x11
 29011 0ae0 6A150000 		.4byte	.LASF192
 29012 0ae4 08       		.byte	0x8
 29013 0ae5 C101     		.2byte	0x1c1
 29014 0ae7 97000000 		.4byte	0x97
 29015 0aeb 00       		.byte	0
 29016 0aec 11       		.uleb128 0x11
 29017 0aed D6130000 		.4byte	.LASF193
 29018 0af1 08       		.byte	0x8
 29019 0af2 C201     		.2byte	0x1c2
 29020 0af4 71080000 		.4byte	0x871
 29021 0af8 02       		.byte	0x2
 29022 0af9 11       		.uleb128 0x11
 29023 0afa 94000000 		.4byte	.LASF194
 29024 0afe 08       		.byte	0x8
 29025 0aff C301     		.2byte	0x1c3
 29026 0b01 97000000 		.4byte	0x97
 29027 0b05 06       		.byte	0x6
 29028 0b06 11       		.uleb128 0x11
 29029 0b07 AA030000 		.4byte	.LASF122
 29030 0b0b 08       		.byte	0x8
 29031 0b0c C401     		.2byte	0x1c4
 29032 0b0e 140B0000 		.4byte	0xb14
 29033 0b12 07       		.byte	0x7
 29034 0b13 00       		.byte	0
 29035 0b14 09       		.uleb128 0x9
 29036 0b15 97000000 		.4byte	0x97
 29037 0b19 240B0000 		.4byte	0xb24
 29038 0b1d 0A       		.uleb128 0xa
 29039 0b1e 18010000 		.4byte	0x118
 29040 0b22 09       		.byte	0x9
 29041 0b23 00       		.byte	0
 29042 0b24 14       		.uleb128 0x14
 29043 0b25 5E140000 		.4byte	.LASF195
 29044 0b29 F402     		.2byte	0x2f4
 29045 0b2b 08       		.byte	0x8
 29046 0b2c CD01     		.2byte	0x1cd
 29047 0b2e 090C0000 		.4byte	0xc09
 29048 0b32 11       		.uleb128 0x11
 29049 0b33 3E0C0000 		.4byte	.LASF196
 29050 0b37 08       		.byte	0x8
 29051 0b38 CF01     		.2byte	0x1cf
 29052 0b3a 97000000 		.4byte	0x97
 29053 0b3e 00       		.byte	0
 29054 0b3f 11       		.uleb128 0x11
 29055 0b40 AA030000 		.4byte	.LASF122
 29056 0b44 08       		.byte	0x8
 29057 0b45 D001     		.2byte	0x1d0
 29058 0b47 090C0000 		.4byte	0xc09
 29059 0b4b 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 633


 29060 0b4c 13       		.uleb128 0x13
 29061 0b4d 636E7400 		.ascii	"cnt\000"
 29062 0b51 08       		.byte	0x8
 29063 0b52 D101     		.2byte	0x1d1
 29064 0b54 9D040000 		.4byte	0x49d
 29065 0b58 10       		.byte	0x10
 29066 0b59 11       		.uleb128 0x11
 29067 0b5a 61030000 		.4byte	.LASF197
 29068 0b5e 08       		.byte	0x8
 29069 0b5f D201     		.2byte	0x1d2
 29070 0b61 190C0000 		.4byte	0xc19
 29071 0b65 60       		.byte	0x60
 29072 0b66 13       		.uleb128 0x13
 29073 0b67 64657600 		.ascii	"dev\000"
 29074 0b6b 08       		.byte	0x8
 29075 0b6c D301     		.2byte	0x1d3
 29076 0b6e 36050000 		.4byte	0x536
 29077 0b72 A0       		.byte	0xa0
 29078 0b73 11       		.uleb128 0x11
 29079 0b74 E0110000 		.4byte	.LASF198
 29080 0b78 08       		.byte	0x8
 29081 0b79 D401     		.2byte	0x1d4
 29082 0b7b 290C0000 		.4byte	0xc29
 29083 0b7f B0       		.byte	0xb0
 29084 0b80 15       		.uleb128 0x15
 29085 0b81 656E6300 		.ascii	"enc\000"
 29086 0b85 08       		.byte	0x8
 29087 0b86 D501     		.2byte	0x1d5
 29088 0b88 390C0000 		.4byte	0xc39
 29089 0b8c 9001     		.2byte	0x190
 29090 0b8e 15       		.uleb128 0x15
 29091 0b8f 656D6700 		.ascii	"emg\000"
 29092 0b93 08       		.byte	0x8
 29093 0b94 D601     		.2byte	0x1d6
 29094 0b96 22080000 		.4byte	0x822
 29095 0b9a F001     		.2byte	0x1f0
 29096 0b9c 15       		.uleb128 0x15
 29097 0b9d 696D7500 		.ascii	"imu\000"
 29098 0ba1 08       		.byte	0x8
 29099 0ba2 D701     		.2byte	0x1d7
 29100 0ba4 91080000 		.4byte	0x891
 29101 0ba8 0002     		.2byte	0x200
 29102 0baa 15       		.uleb128 0x15
 29103 0bab 65787000 		.ascii	"exp\000"
 29104 0baf 08       		.byte	0x8
 29105 0bb0 D801     		.2byte	0x1d8
 29106 0bb2 E9080000 		.4byte	0x8e9
 29107 0bb6 2002     		.2byte	0x220
 29108 0bb8 16       		.uleb128 0x16
 29109 0bb9 D5000000 		.4byte	.LASF199
 29110 0bbd 08       		.byte	0x8
 29111 0bbe D901     		.2byte	0x1d9
 29112 0bc0 490C0000 		.4byte	0xc49
 29113 0bc4 4002     		.2byte	0x240
 29114 0bc6 15       		.uleb128 0x15
 29115 0bc7 534800   		.ascii	"SH\000"
 29116 0bca 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 634


 29117 0bcb DB01     		.2byte	0x1db
 29118 0bcd AA090000 		.4byte	0x9aa
 29119 0bd1 A002     		.2byte	0x2a0
 29120 0bd3 16       		.uleb128 0x16
 29121 0bd4 71010000 		.4byte	.LASF200
 29122 0bd8 08       		.byte	0x8
 29123 0bd9 DC01     		.2byte	0x1dc
 29124 0bdb F9090000 		.4byte	0x9f9
 29125 0bdf B002     		.2byte	0x2b0
 29126 0be1 15       		.uleb128 0x15
 29127 0be2 4D5300   		.ascii	"MS\000"
 29128 0be5 08       		.byte	0x8
 29129 0be6 DD01     		.2byte	0x1dd
 29130 0be8 3B0A0000 		.4byte	0xa3b
 29131 0bec C002     		.2byte	0x2c0
 29132 0bee 15       		.uleb128 0x15
 29133 0bef 464200   		.ascii	"FB\000"
 29134 0bf2 08       		.byte	0x8
 29135 0bf3 DE01     		.2byte	0x1de
 29136 0bf5 800A0000 		.4byte	0xa80
 29137 0bf9 D002     		.2byte	0x2d0
 29138 0bfb 15       		.uleb128 0x15
 29139 0bfc 575200   		.ascii	"WR\000"
 29140 0bff 08       		.byte	0x8
 29141 0c00 DF01     		.2byte	0x1df
 29142 0c02 D20A0000 		.4byte	0xad2
 29143 0c06 E002     		.2byte	0x2e0
 29144 0c08 00       		.byte	0
 29145 0c09 09       		.uleb128 0x9
 29146 0c0a 97000000 		.4byte	0x97
 29147 0c0e 190C0000 		.4byte	0xc19
 29148 0c12 0A       		.uleb128 0xa
 29149 0c13 18010000 		.4byte	0x118
 29150 0c17 0E       		.byte	0xe
 29151 0c18 00       		.byte	0
 29152 0c19 09       		.uleb128 0x9
 29153 0c1a 97000000 		.4byte	0x97
 29154 0c1e 290C0000 		.4byte	0xc29
 29155 0c22 0A       		.uleb128 0xa
 29156 0c23 18010000 		.4byte	0x118
 29157 0c27 3F       		.byte	0x3f
 29158 0c28 00       		.byte	0
 29159 0c29 09       		.uleb128 0x9
 29160 0c2a D5050000 		.4byte	0x5d5
 29161 0c2e 390C0000 		.4byte	0xc39
 29162 0c32 0A       		.uleb128 0xa
 29163 0c33 18010000 		.4byte	0x118
 29164 0c37 01       		.byte	0x1
 29165 0c38 00       		.byte	0
 29166 0c39 09       		.uleb128 0x9
 29167 0c3a 6F070000 		.4byte	0x76f
 29168 0c3e 490C0000 		.4byte	0xc49
 29169 0c42 0A       		.uleb128 0xa
 29170 0c43 18010000 		.4byte	0x118
 29171 0c47 01       		.byte	0x1
 29172 0c48 00       		.byte	0
 29173 0c49 09       		.uleb128 0x9
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 635


 29174 0c4a 75090000 		.4byte	0x975
 29175 0c4e 590C0000 		.4byte	0xc59
 29176 0c52 0A       		.uleb128 0xa
 29177 0c53 18010000 		.4byte	0x118
 29178 0c57 02       		.byte	0x2
 29179 0c58 00       		.byte	0
 29180 0c59 12       		.uleb128 0x12
 29181 0c5a D70E0000 		.4byte	.LASF201
 29182 0c5e 28       		.byte	0x28
 29183 0c5f 08       		.byte	0x8
 29184 0c60 EA01     		.2byte	0x1ea
 29185 0c62 B50C0000 		.4byte	0xcb5
 29186 0c66 11       		.uleb128 0x11
 29187 0c67 90050000 		.4byte	.LASF202
 29188 0c6b 08       		.byte	0x8
 29189 0c6c EB01     		.2byte	0x1eb
 29190 0c6e 97000000 		.4byte	0x97
 29191 0c72 00       		.byte	0
 29192 0c73 11       		.uleb128 0x11
 29193 0c74 B7030000 		.4byte	.LASF203
 29194 0c78 08       		.byte	0x8
 29195 0c79 EC01     		.2byte	0x1ec
 29196 0c7b B50C0000 		.4byte	0xcb5
 29197 0c7f 02       		.byte	0x2
 29198 0c80 11       		.uleb128 0x11
 29199 0c81 F40D0000 		.4byte	.LASF204
 29200 0c85 08       		.byte	0x8
 29201 0c86 ED01     		.2byte	0x1ed
 29202 0c88 B50C0000 		.4byte	0xcb5
 29203 0c8c 08       		.byte	0x8
 29204 0c8d 11       		.uleb128 0x11
 29205 0c8e E30E0000 		.4byte	.LASF205
 29206 0c92 08       		.byte	0x8
 29207 0c93 EE01     		.2byte	0x1ee
 29208 0c95 B50C0000 		.4byte	0xcb5
 29209 0c99 0E       		.byte	0xe
 29210 0c9a 11       		.uleb128 0x11
 29211 0c9b 18090000 		.4byte	.LASF206
 29212 0c9f 08       		.byte	0x8
 29213 0ca0 EF01     		.2byte	0x1ef
 29214 0ca2 C50C0000 		.4byte	0xcc5
 29215 0ca6 14       		.byte	0x14
 29216 0ca7 11       		.uleb128 0x11
 29217 0ca8 86020000 		.4byte	.LASF207
 29218 0cac 08       		.byte	0x8
 29219 0cad F001     		.2byte	0x1f0
 29220 0caf C7000000 		.4byte	0xc7
 29221 0cb3 24       		.byte	0x24
 29222 0cb4 00       		.byte	0
 29223 0cb5 09       		.uleb128 0x9
 29224 0cb6 C7000000 		.4byte	0xc7
 29225 0cba C50C0000 		.4byte	0xcc5
 29226 0cbe 0A       		.uleb128 0xa
 29227 0cbf 18010000 		.4byte	0x118
 29228 0cc3 02       		.byte	0x2
 29229 0cc4 00       		.byte	0
 29230 0cc5 09       		.uleb128 0x9
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 636


 29231 0cc6 EB000000 		.4byte	0xeb
 29232 0cca D50C0000 		.4byte	0xcd5
 29233 0cce 0A       		.uleb128 0xa
 29234 0ccf 18010000 		.4byte	0x118
 29235 0cd3 03       		.byte	0x3
 29236 0cd4 00       		.byte	0
 29237 0cd5 12       		.uleb128 0x12
 29238 0cd6 AF040000 		.4byte	.LASF208
 29239 0cda 06       		.byte	0x6
 29240 0cdb 08       		.byte	0x8
 29241 0cdc 0002     		.2byte	0x200
 29242 0cde 170D0000 		.4byte	0xd17
 29243 0ce2 11       		.uleb128 0x11
 29244 0ce3 72080000 		.4byte	.LASF209
 29245 0ce7 08       		.byte	0x8
 29246 0ce8 0102     		.2byte	0x201
 29247 0cea 97000000 		.4byte	0x97
 29248 0cee 00       		.byte	0
 29249 0cef 11       		.uleb128 0x11
 29250 0cf0 B7150000 		.4byte	.LASF210
 29251 0cf4 08       		.byte	0x8
 29252 0cf5 0202     		.2byte	0x202
 29253 0cf7 97000000 		.4byte	0x97
 29254 0cfb 01       		.byte	0x1
 29255 0cfc 11       		.uleb128 0x11
 29256 0cfd F6060000 		.4byte	.LASF211
 29257 0d01 08       		.byte	0x8
 29258 0d02 0302     		.2byte	0x203
 29259 0d04 C7000000 		.4byte	0xc7
 29260 0d08 02       		.byte	0x2
 29261 0d09 11       		.uleb128 0x11
 29262 0d0a 2C0B0000 		.4byte	.LASF212
 29263 0d0e 08       		.byte	0x8
 29264 0d0f 0402     		.2byte	0x204
 29265 0d11 C7000000 		.4byte	0xc7
 29266 0d15 04       		.byte	0x4
 29267 0d16 00       		.byte	0
 29268 0d17 17       		.uleb128 0x17
 29269 0d18 34100000 		.4byte	.LASF404
 29270 0d1c 02       		.byte	0x2
 29271 0d1d 1403     		.2byte	0x314
 29272 0d1f 8C000000 		.4byte	0x8c
 29273 0d23 03       		.byte	0x3
 29274 0d24 410D0000 		.4byte	0xd41
 29275 0d28 18       		.uleb128 0x18
 29276 0d29 8A050000 		.4byte	.LASF298
 29277 0d2d 02       		.byte	0x2
 29278 0d2e 1403     		.2byte	0x314
 29279 0d30 8C000000 		.4byte	0x8c
 29280 0d34 19       		.uleb128 0x19
 29281 0d35 9A020000 		.4byte	.LASF405
 29282 0d39 02       		.byte	0x2
 29283 0d3a 1603     		.2byte	0x316
 29284 0d3c 8C000000 		.4byte	0x8c
 29285 0d40 00       		.byte	0
 29286 0d41 1A       		.uleb128 0x1a
 29287 0d42 83110000 		.4byte	.LASF213
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 637


 29288 0d46 01       		.byte	0x1
 29289 0d47 3D       		.byte	0x3d
 29290 0d48 00000000 		.4byte	.LFB64
 29291 0d4c 00050000 		.4byte	.LFE64-.LFB64
 29292 0d50 01       		.uleb128 0x1
 29293 0d51 9C       		.byte	0x9c
 29294 0d52 1B0E0000 		.4byte	0xe1b
 29295 0d56 1B       		.uleb128 0x1b
 29296 0d57 FC060000 		.4byte	.LASF215
 29297 0d5b 01       		.byte	0x1
 29298 0d5c 3F       		.byte	0x3f
 29299 0d5d 97000000 		.4byte	0x97
 29300 0d61 02       		.uleb128 0x2
 29301 0d62 91       		.byte	0x91
 29302 0d63 77       		.sleb128 -9
 29303 0d64 1C       		.uleb128 0x1c
 29304 0d65 170D0000 		.4byte	0xd17
 29305 0d69 44030000 		.4byte	.LBB10
 29306 0d6d 08000000 		.4byte	.LBE10-.LBB10
 29307 0d71 01       		.byte	0x1
 29308 0d72 9C       		.byte	0x9c
 29309 0d73 920D0000 		.4byte	0xd92
 29310 0d77 1D       		.uleb128 0x1d
 29311 0d78 280D0000 		.4byte	0xd28
 29312 0d7c 02       		.uleb128 0x2
 29313 0d7d 91       		.byte	0x91
 29314 0d7e 64       		.sleb128 -28
 29315 0d7f 1E       		.uleb128 0x1e
 29316 0d80 44030000 		.4byte	.LBB11
 29317 0d84 08000000 		.4byte	.LBE11-.LBB11
 29318 0d88 1F       		.uleb128 0x1f
 29319 0d89 340D0000 		.4byte	0xd34
 29320 0d8d 02       		.uleb128 0x2
 29321 0d8e 91       		.byte	0x91
 29322 0d8f 60       		.sleb128 -32
 29323 0d90 00       		.byte	0
 29324 0d91 00       		.byte	0
 29325 0d92 1C       		.uleb128 0x1c
 29326 0d93 170D0000 		.4byte	0xd17
 29327 0d97 62030000 		.4byte	.LBB12
 29328 0d9b 08000000 		.4byte	.LBE12-.LBB12
 29329 0d9f 01       		.byte	0x1
 29330 0da0 A8       		.byte	0xa8
 29331 0da1 C00D0000 		.4byte	0xdc0
 29332 0da5 1D       		.uleb128 0x1d
 29333 0da6 280D0000 		.4byte	0xd28
 29334 0daa 02       		.uleb128 0x2
 29335 0dab 91       		.byte	0x91
 29336 0dac 70       		.sleb128 -16
 29337 0dad 1E       		.uleb128 0x1e
 29338 0dae 62030000 		.4byte	.LBB13
 29339 0db2 08000000 		.4byte	.LBE13-.LBB13
 29340 0db6 1F       		.uleb128 0x1f
 29341 0db7 340D0000 		.4byte	0xd34
 29342 0dbb 02       		.uleb128 0x2
 29343 0dbc 91       		.byte	0x91
 29344 0dbd 5C       		.sleb128 -36
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 638


 29345 0dbe 00       		.byte	0
 29346 0dbf 00       		.byte	0
 29347 0dc0 20       		.uleb128 0x20
 29348 0dc1 170D0000 		.4byte	0xd17
 29349 0dc5 A4040000 		.4byte	.LBB14
 29350 0dc9 08000000 		.4byte	.LBE14-.LBB14
 29351 0dcd 01       		.byte	0x1
 29352 0dce 0401     		.2byte	0x104
 29353 0dd0 EF0D0000 		.4byte	0xdef
 29354 0dd4 1D       		.uleb128 0x1d
 29355 0dd5 280D0000 		.4byte	0xd28
 29356 0dd9 02       		.uleb128 0x2
 29357 0dda 91       		.byte	0x91
 29358 0ddb 6C       		.sleb128 -20
 29359 0ddc 1E       		.uleb128 0x1e
 29360 0ddd A4040000 		.4byte	.LBB15
 29361 0de1 08000000 		.4byte	.LBE15-.LBB15
 29362 0de5 1F       		.uleb128 0x1f
 29363 0de6 340D0000 		.4byte	0xd34
 29364 0dea 02       		.uleb128 0x2
 29365 0deb 91       		.byte	0x91
 29366 0dec 58       		.sleb128 -40
 29367 0ded 00       		.byte	0
 29368 0dee 00       		.byte	0
 29369 0def 21       		.uleb128 0x21
 29370 0df0 170D0000 		.4byte	0xd17
 29371 0df4 D4040000 		.4byte	.LBB16
 29372 0df8 08000000 		.4byte	.LBE16-.LBB16
 29373 0dfc 01       		.byte	0x1
 29374 0dfd 2201     		.2byte	0x122
 29375 0dff 1D       		.uleb128 0x1d
 29376 0e00 280D0000 		.4byte	0xd28
 29377 0e04 02       		.uleb128 0x2
 29378 0e05 91       		.byte	0x91
 29379 0e06 68       		.sleb128 -24
 29380 0e07 1E       		.uleb128 0x1e
 29381 0e08 D4040000 		.4byte	.LBB17
 29382 0e0c 08000000 		.4byte	.LBE17-.LBB17
 29383 0e10 1F       		.uleb128 0x1f
 29384 0e11 340D0000 		.4byte	0xd34
 29385 0e15 02       		.uleb128 0x2
 29386 0e16 91       		.byte	0x91
 29387 0e17 54       		.sleb128 -44
 29388 0e18 00       		.byte	0
 29389 0e19 00       		.byte	0
 29390 0e1a 00       		.byte	0
 29391 0e1b 22       		.uleb128 0x22
 29392 0e1c 00000000 		.4byte	.LASF214
 29393 0e20 01       		.byte	0x1
 29394 0e21 3101     		.2byte	0x131
 29395 0e23 00000000 		.4byte	.LFB65
 29396 0e27 22000000 		.4byte	.LFE65-.LFB65
 29397 0e2b 01       		.uleb128 0x1
 29398 0e2c 9C       		.byte	0x9c
 29399 0e2d 420E0000 		.4byte	0xe42
 29400 0e31 23       		.uleb128 0x23
 29401 0e32 19060000 		.4byte	.LASF216
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 639


 29402 0e36 01       		.byte	0x1
 29403 0e37 3201     		.2byte	0x132
 29404 0e39 420E0000 		.4byte	0xe42
 29405 0e3d 03       		.uleb128 0x3
 29406 0e3e 91       		.byte	0x91
 29407 0e3f 9C74     		.sleb128 -1508
 29408 0e41 00       		.byte	0
 29409 0e42 09       		.uleb128 0x9
 29410 0e43 F9000000 		.4byte	0xf9
 29411 0e47 530E0000 		.4byte	0xe53
 29412 0e4b 24       		.uleb128 0x24
 29413 0e4c 18010000 		.4byte	0x118
 29414 0e50 DB05     		.2byte	0x5db
 29415 0e52 00       		.byte	0
 29416 0e53 22       		.uleb128 0x22
 29417 0e54 8F140000 		.4byte	.LASF217
 29418 0e58 01       		.byte	0x1
 29419 0e59 3D01     		.2byte	0x13d
 29420 0e5b 00000000 		.4byte	.LFB66
 29421 0e5f 34010000 		.4byte	.LFE66-.LFB66
 29422 0e63 01       		.uleb128 0x1
 29423 0e64 9C       		.byte	0x9c
 29424 0e65 9C0E0000 		.4byte	0xe9c
 29425 0e69 25       		.uleb128 0x25
 29426 0e6a E9130000 		.4byte	.LASF220
 29427 0e6e 01       		.byte	0x1
 29428 0e6f 3D01     		.2byte	0x13d
 29429 0e71 A3000000 		.4byte	0xa3
 29430 0e75 04       		.uleb128 0x4
 29431 0e76 91       		.byte	0x91
 29432 0e77 B6C47E   		.sleb128 -24010
 29433 0e7a 23       		.uleb128 0x23
 29434 0e7b 19060000 		.4byte	.LASF216
 29435 0e7f 01       		.byte	0x1
 29436 0e80 3E01     		.2byte	0x13e
 29437 0e82 9C0E0000 		.4byte	0xe9c
 29438 0e86 03       		.uleb128 0x3
 29439 0e87 91       		.byte	0x91
 29440 0e88 D860     		.sleb128 -4008
 29441 0e8a 23       		.uleb128 0x23
 29442 0e8b E6080000 		.4byte	.LASF218
 29443 0e8f 01       		.byte	0x1
 29444 0e90 3F01     		.2byte	0x13f
 29445 0e92 AD0E0000 		.4byte	0xead
 29446 0e96 04       		.uleb128 0x4
 29447 0e97 91       		.byte	0x91
 29448 0e98 B8C47E   		.sleb128 -24008
 29449 0e9b 00       		.byte	0
 29450 0e9c 09       		.uleb128 0x9
 29451 0e9d F9000000 		.4byte	0xf9
 29452 0ea1 AD0E0000 		.4byte	0xead
 29453 0ea5 24       		.uleb128 0x24
 29454 0ea6 18010000 		.4byte	0x118
 29455 0eaa 9F0F     		.2byte	0xf9f
 29456 0eac 00       		.byte	0
 29457 0ead 09       		.uleb128 0x9
 29458 0eae F9000000 		.4byte	0xf9
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 640


 29459 0eb2 BE0E0000 		.4byte	0xebe
 29460 0eb6 24       		.uleb128 0x24
 29461 0eb7 18010000 		.4byte	0x118
 29462 0ebb 1F4E     		.2byte	0x4e1f
 29463 0ebd 00       		.byte	0
 29464 0ebe 22       		.uleb128 0x22
 29465 0ebf 40020000 		.4byte	.LASF219
 29466 0ec3 01       		.byte	0x1
 29467 0ec4 6901     		.2byte	0x169
 29468 0ec6 00000000 		.4byte	.LFB67
 29469 0eca A2320000 		.4byte	.LFE67-.LFB67
 29470 0ece 01       		.uleb128 0x1
 29471 0ecf 9C       		.byte	0x9c
 29472 0ed0 62100000 		.4byte	0x1062
 29473 0ed4 25       		.uleb128 0x25
 29474 0ed5 A00D0000 		.4byte	.LASF221
 29475 0ed9 01       		.byte	0x1
 29476 0eda 6901     		.2byte	0x169
 29477 0edc 62100000 		.4byte	0x1062
 29478 0ee0 03       		.uleb128 0x3
 29479 0ee1 91       		.byte	0x91
 29480 0ee2 DC53     		.sleb128 -5668
 29481 0ee4 25       		.uleb128 0x25
 29482 0ee5 68140000 		.4byte	.LASF222
 29483 0ee9 01       		.byte	0x1
 29484 0eea 6901     		.2byte	0x169
 29485 0eec 68100000 		.4byte	0x1068
 29486 0ef0 03       		.uleb128 0x3
 29487 0ef1 91       		.byte	0x91
 29488 0ef2 D853     		.sleb128 -5672
 29489 0ef4 25       		.uleb128 0x25
 29490 0ef5 C3030000 		.4byte	.LASF223
 29491 0ef9 01       		.byte	0x1
 29492 0efa 6A01     		.2byte	0x16a
 29493 0efc 68100000 		.4byte	0x1068
 29494 0f00 03       		.uleb128 0x3
 29495 0f01 91       		.byte	0x91
 29496 0f02 D453     		.sleb128 -5676
 29497 0f04 25       		.uleb128 0x25
 29498 0f05 FD0C0000 		.4byte	.LASF224
 29499 0f09 01       		.byte	0x1
 29500 0f0a 6A01     		.2byte	0x16a
 29501 0f0c 68100000 		.4byte	0x1068
 29502 0f10 03       		.uleb128 0x3
 29503 0f11 91       		.byte	0x91
 29504 0f12 D053     		.sleb128 -5680
 29505 0f14 25       		.uleb128 0x25
 29506 0f15 B3130000 		.4byte	.LASF225
 29507 0f19 01       		.byte	0x1
 29508 0f1a 6B01     		.2byte	0x16b
 29509 0f1c 68100000 		.4byte	0x1068
 29510 0f20 02       		.uleb128 0x2
 29511 0f21 91       		.byte	0x91
 29512 0f22 00       		.sleb128 0
 29513 0f23 25       		.uleb128 0x25
 29514 0f24 67080000 		.4byte	.LASF226
 29515 0f28 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 641


 29516 0f29 6B01     		.2byte	0x16b
 29517 0f2b 6E100000 		.4byte	0x106e
 29518 0f2f 02       		.uleb128 0x2
 29519 0f30 91       		.byte	0x91
 29520 0f31 04       		.sleb128 4
 29521 0f32 25       		.uleb128 0x25
 29522 0f33 790B0000 		.4byte	.LASF227
 29523 0f37 01       		.byte	0x1
 29524 0f38 6C01     		.2byte	0x16c
 29525 0f3a 68100000 		.4byte	0x1068
 29526 0f3e 02       		.uleb128 0x2
 29527 0f3f 91       		.byte	0x91
 29528 0f40 08       		.sleb128 8
 29529 0f41 25       		.uleb128 0x25
 29530 0f42 F8080000 		.4byte	.LASF228
 29531 0f46 01       		.byte	0x1
 29532 0f47 6C01     		.2byte	0x16c
 29533 0f49 6E100000 		.4byte	0x106e
 29534 0f4d 02       		.uleb128 0x2
 29535 0f4e 91       		.byte	0x91
 29536 0f4f 0C       		.sleb128 12
 29537 0f50 23       		.uleb128 0x23
 29538 0f51 6C060000 		.4byte	.LASF229
 29539 0f55 01       		.byte	0x1
 29540 0f56 6F01     		.2byte	0x16f
 29541 0f58 74100000 		.4byte	0x1074
 29542 0f5c 03       		.uleb128 0x3
 29543 0f5d 91       		.byte	0x91
 29544 0f5e A454     		.sleb128 -5596
 29545 0f60 23       		.uleb128 0x23
 29546 0f61 ED0B0000 		.4byte	.LASF230
 29547 0f65 01       		.byte	0x1
 29548 0f66 7001     		.2byte	0x170
 29549 0f68 A3000000 		.4byte	0xa3
 29550 0f6c 02       		.uleb128 0x2
 29551 0f6d 91       		.byte	0x91
 29552 0f6e 60       		.sleb128 -32
 29553 0f6f 26       		.uleb128 0x26
 29554 0f70 6900     		.ascii	"i\000"
 29555 0f72 01       		.byte	0x1
 29556 0f73 7301     		.2byte	0x173
 29557 0f75 97000000 		.4byte	0x97
 29558 0f79 02       		.uleb128 0x2
 29559 0f7a 91       		.byte	0x91
 29560 0f7b 67       		.sleb128 -25
 29561 0f7c 26       		.uleb128 0x26
 29562 0f7d 6A00     		.ascii	"j\000"
 29563 0f7f 01       		.byte	0x1
 29564 0f80 7301     		.2byte	0x173
 29565 0f82 97000000 		.4byte	0x97
 29566 0f86 02       		.uleb128 0x2
 29567 0f87 91       		.byte	0x91
 29568 0f88 66       		.sleb128 -26
 29569 0f89 26       		.uleb128 0x26
 29570 0f8a 69647800 		.ascii	"idx\000"
 29571 0f8e 01       		.byte	0x1
 29572 0f8f 7401     		.2byte	0x174
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 642


 29573 0f91 97000000 		.4byte	0x97
 29574 0f95 02       		.uleb128 0x2
 29575 0f96 91       		.byte	0x91
 29576 0f97 65       		.sleb128 -27
 29577 0f98 23       		.uleb128 0x23
 29578 0f99 CE110000 		.4byte	.LASF231
 29579 0f9d 01       		.byte	0x1
 29580 0f9e 7501     		.2byte	0x175
 29581 0fa0 97000000 		.4byte	0x97
 29582 0fa4 02       		.uleb128 0x2
 29583 0fa5 91       		.byte	0x91
 29584 0fa6 64       		.sleb128 -28
 29585 0fa7 26       		.uleb128 0x26
 29586 0fa8 736F6400 		.ascii	"sod\000"
 29587 0fac 01       		.byte	0x1
 29588 0fad 7601     		.2byte	0x176
 29589 0faf 97000000 		.4byte	0x97
 29590 0fb3 02       		.uleb128 0x2
 29591 0fb4 91       		.byte	0x91
 29592 0fb5 63       		.sleb128 -29
 29593 0fb6 23       		.uleb128 0x23
 29594 0fb7 CE0C0000 		.4byte	.LASF232
 29595 0fbb 01       		.byte	0x1
 29596 0fbc 7701     		.2byte	0x177
 29597 0fbe 97000000 		.4byte	0x97
 29598 0fc2 02       		.uleb128 0x2
 29599 0fc3 91       		.byte	0x91
 29600 0fc4 62       		.sleb128 -30
 29601 0fc5 23       		.uleb128 0x23
 29602 0fc6 9D150000 		.4byte	.LASF233
 29603 0fca 01       		.byte	0x1
 29604 0fcb 7801     		.2byte	0x178
 29605 0fcd 85100000 		.4byte	0x1085
 29606 0fd1 03       		.uleb128 0x3
 29607 0fd2 91       		.byte	0x91
 29608 0fd3 F053     		.sleb128 -5648
 29609 0fd5 23       		.uleb128 0x23
 29610 0fd6 9B130000 		.4byte	.LASF234
 29611 0fda 01       		.byte	0x1
 29612 0fdb 7901     		.2byte	0x179
 29613 0fdd EB000000 		.4byte	0xeb
 29614 0fe1 03       		.uleb128 0x3
 29615 0fe2 91       		.byte	0x91
 29616 0fe3 EC53     		.sleb128 -5652
 29617 0fe5 23       		.uleb128 0x23
 29618 0fe6 5F120000 		.4byte	.LASF235
 29619 0fea 01       		.byte	0x1
 29620 0feb 7A01     		.2byte	0x17a
 29621 0fed C7000000 		.4byte	0xc7
 29622 0ff1 03       		.uleb128 0x3
 29623 0ff2 91       		.byte	0x91
 29624 0ff3 EA53     		.sleb128 -5654
 29625 0ff5 23       		.uleb128 0x23
 29626 0ff6 350D0000 		.4byte	.LASF236
 29627 0ffa 01       		.byte	0x1
 29628 0ffb 7B01     		.2byte	0x17b
 29629 0ffd A3000000 		.4byte	0xa3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 643


 29630 1001 03       		.uleb128 0x3
 29631 1002 91       		.byte	0x91
 29632 1003 E853     		.sleb128 -5656
 29633 1005 23       		.uleb128 0x23
 29634 1006 BC130000 		.4byte	.LASF237
 29635 100a 01       		.byte	0x1
 29636 100b 7C01     		.2byte	0x17c
 29637 100d D3000000 		.4byte	0xd3
 29638 1011 03       		.uleb128 0x3
 29639 1012 91       		.byte	0x91
 29640 1013 E453     		.sleb128 -5660
 29641 1015 23       		.uleb128 0x23
 29642 1016 B70E0000 		.4byte	.LASF238
 29643 101a 01       		.byte	0x1
 29644 101b 7D01     		.2byte	0x17d
 29645 101d AF000000 		.4byte	0xaf
 29646 1021 03       		.uleb128 0x3
 29647 1022 91       		.byte	0x91
 29648 1023 E053     		.sleb128 -5664
 29649 1025 23       		.uleb128 0x23
 29650 1026 500E0000 		.4byte	.LASF239
 29651 102a 01       		.byte	0x1
 29652 102b 7F01     		.2byte	0x17f
 29653 102d 97000000 		.4byte	0x97
 29654 1031 02       		.uleb128 0x2
 29655 1032 91       		.byte	0x91
 29656 1033 5F       		.sleb128 -33
 29657 1034 23       		.uleb128 0x23
 29658 1035 9B010000 		.4byte	.LASF240
 29659 1039 01       		.byte	0x1
 29660 103a 8001     		.2byte	0x180
 29661 103c 97000000 		.4byte	0x97
 29662 1040 02       		.uleb128 0x2
 29663 1041 91       		.byte	0x91
 29664 1042 5E       		.sleb128 -34
 29665 1043 23       		.uleb128 0x23
 29666 1044 AF0B0000 		.4byte	.LASF241
 29667 1048 01       		.byte	0x1
 29668 1049 8201     		.2byte	0x182
 29669 104b 68100000 		.4byte	0x1068
 29670 104f 02       		.uleb128 0x2
 29671 1050 91       		.byte	0x91
 29672 1051 58       		.sleb128 -40
 29673 1052 23       		.uleb128 0x23
 29674 1053 2F020000 		.4byte	.LASF242
 29675 1057 01       		.byte	0x1
 29676 1058 8301     		.2byte	0x183
 29677 105a 68100000 		.4byte	0x1068
 29678 105e 02       		.uleb128 0x2
 29679 105f 91       		.byte	0x91
 29680 1060 54       		.sleb128 -44
 29681 1061 00       		.byte	0
 29682 1062 07       		.uleb128 0x7
 29683 1063 04       		.byte	0x4
 29684 1064 68100000 		.4byte	0x1068
 29685 1068 07       		.uleb128 0x7
 29686 1069 04       		.byte	0x4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 644


 29687 106a 97000000 		.4byte	0x97
 29688 106e 07       		.uleb128 0x7
 29689 106f 04       		.byte	0x4
 29690 1070 25010000 		.4byte	0x125
 29691 1074 09       		.uleb128 0x9
 29692 1075 97000000 		.4byte	0x97
 29693 1079 85100000 		.4byte	0x1085
 29694 107d 24       		.uleb128 0x24
 29695 107e 18010000 		.4byte	0x118
 29696 1082 AD15     		.2byte	0x15ad
 29697 1084 00       		.byte	0
 29698 1085 09       		.uleb128 0x9
 29699 1086 F9000000 		.4byte	0xf9
 29700 108a 95100000 		.4byte	0x1095
 29701 108e 0A       		.uleb128 0xa
 29702 108f 18010000 		.4byte	0x118
 29703 1093 31       		.byte	0x31
 29704 1094 00       		.byte	0
 29705 1095 22       		.uleb128 0x22
 29706 1096 B10F0000 		.4byte	.LASF243
 29707 109a 01       		.byte	0x1
 29708 109b 7103     		.2byte	0x371
 29709 109d 00000000 		.4byte	.LFB68
 29710 10a1 3C190000 		.4byte	.LFE68-.LFB68
 29711 10a5 01       		.uleb128 0x1
 29712 10a6 9C       		.byte	0x9c
 29713 10a7 73120000 		.4byte	0x1273
 29714 10ab 25       		.uleb128 0x25
 29715 10ac 72070000 		.4byte	.LASF244
 29716 10b0 01       		.byte	0x1
 29717 10b1 7103     		.2byte	0x371
 29718 10b3 A3000000 		.4byte	0xa3
 29719 10b7 03       		.uleb128 0x3
 29720 10b8 91       		.byte	0x91
 29721 10b9 EE74     		.sleb128 -1426
 29722 10bb 26       		.uleb128 0x26
 29723 10bc 6900     		.ascii	"i\000"
 29724 10be 01       		.byte	0x1
 29725 10bf 7203     		.2byte	0x372
 29726 10c1 97000000 		.4byte	0x97
 29727 10c5 02       		.uleb128 0x2
 29728 10c6 91       		.byte	0x91
 29729 10c7 6F       		.sleb128 -17
 29730 10c8 26       		.uleb128 0x26
 29731 10c9 6A00     		.ascii	"j\000"
 29732 10cb 01       		.byte	0x1
 29733 10cc 7203     		.2byte	0x372
 29734 10ce 97000000 		.4byte	0x97
 29735 10d2 02       		.uleb128 0x2
 29736 10d3 91       		.byte	0x91
 29737 10d4 6E       		.sleb128 -18
 29738 10d5 26       		.uleb128 0x26
 29739 10d6 736F6400 		.ascii	"sod\000"
 29740 10da 01       		.byte	0x1
 29741 10db 7303     		.2byte	0x373
 29742 10dd 97000000 		.4byte	0x97
 29743 10e1 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 645


 29744 10e2 91       		.byte	0x91
 29745 10e3 6D       		.sleb128 -19
 29746 10e4 23       		.uleb128 0x23
 29747 10e5 990B0000 		.4byte	.LASF245
 29748 10e9 01       		.byte	0x1
 29749 10ea 7403     		.2byte	0x374
 29750 10ec 97000000 		.4byte	0x97
 29751 10f0 02       		.uleb128 0x2
 29752 10f1 91       		.byte	0x91
 29753 10f2 62       		.sleb128 -30
 29754 10f3 23       		.uleb128 0x23
 29755 10f4 5F120000 		.4byte	.LASF235
 29756 10f8 01       		.byte	0x1
 29757 10f9 7503     		.2byte	0x375
 29758 10fb C7000000 		.4byte	0xc7
 29759 10ff 02       		.uleb128 0x2
 29760 1100 91       		.byte	0x91
 29761 1101 60       		.sleb128 -32
 29762 1102 23       		.uleb128 0x23
 29763 1103 350D0000 		.4byte	.LASF236
 29764 1107 01       		.byte	0x1
 29765 1108 7603     		.2byte	0x376
 29766 110a A3000000 		.4byte	0xa3
 29767 110e 02       		.uleb128 0x2
 29768 110f 91       		.byte	0x91
 29769 1110 5E       		.sleb128 -34
 29770 1111 23       		.uleb128 0x23
 29771 1112 BC130000 		.4byte	.LASF237
 29772 1116 01       		.byte	0x1
 29773 1117 7703     		.2byte	0x377
 29774 1119 D3000000 		.4byte	0xd3
 29775 111d 02       		.uleb128 0x2
 29776 111e 91       		.byte	0x91
 29777 111f 58       		.sleb128 -40
 29778 1120 23       		.uleb128 0x23
 29779 1121 B70E0000 		.4byte	.LASF238
 29780 1125 01       		.byte	0x1
 29781 1126 7803     		.2byte	0x378
 29782 1128 AF000000 		.4byte	0xaf
 29783 112c 02       		.uleb128 0x2
 29784 112d 91       		.byte	0x91
 29785 112e 54       		.sleb128 -44
 29786 112f 23       		.uleb128 0x23
 29787 1130 9B130000 		.4byte	.LASF234
 29788 1134 01       		.byte	0x1
 29789 1135 7903     		.2byte	0x379
 29790 1137 EB000000 		.4byte	0xeb
 29791 113b 02       		.uleb128 0x2
 29792 113c 91       		.byte	0x91
 29793 113d 50       		.sleb128 -48
 29794 113e 23       		.uleb128 0x23
 29795 113f 500E0000 		.4byte	.LASF239
 29796 1143 01       		.byte	0x1
 29797 1144 7B03     		.2byte	0x37b
 29798 1146 97000000 		.4byte	0x97
 29799 114a 02       		.uleb128 0x2
 29800 114b 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 646


 29801 114c 65       		.sleb128 -27
 29802 114d 23       		.uleb128 0x23
 29803 114e 9B010000 		.4byte	.LASF240
 29804 1152 01       		.byte	0x1
 29805 1153 7C03     		.2byte	0x37c
 29806 1155 97000000 		.4byte	0x97
 29807 1159 02       		.uleb128 0x2
 29808 115a 91       		.byte	0x91
 29809 115b 64       		.sleb128 -28
 29810 115c 23       		.uleb128 0x23
 29811 115d D9030000 		.4byte	.LASF246
 29812 1161 01       		.byte	0x1
 29813 1162 7F03     		.2byte	0x37f
 29814 1164 73120000 		.4byte	0x1273
 29815 1168 02       		.uleb128 0x2
 29816 1169 91       		.byte	0x91
 29817 116a 68       		.sleb128 -24
 29818 116b 23       		.uleb128 0x23
 29819 116c A00D0000 		.4byte	.LASF221
 29820 1170 01       		.byte	0x1
 29821 1171 8703     		.2byte	0x387
 29822 1173 79120000 		.4byte	0x1279
 29823 1177 03       		.uleb128 0x3
 29824 1178 91       		.byte	0x91
 29825 1179 847D     		.sleb128 -380
 29826 117b 23       		.uleb128 0x23
 29827 117c 68140000 		.4byte	.LASF222
 29828 1180 01       		.byte	0x1
 29829 1181 E503     		.2byte	0x3e5
 29830 1183 89120000 		.4byte	0x1289
 29831 1187 03       		.uleb128 0x3
 29832 1188 91       		.byte	0x91
 29833 1189 B07C     		.sleb128 -464
 29834 118b 23       		.uleb128 0x23
 29835 118c C3030000 		.4byte	.LASF223
 29836 1190 01       		.byte	0x1
 29837 1191 0104     		.2byte	0x401
 29838 1193 89120000 		.4byte	0x1289
 29839 1197 03       		.uleb128 0x3
 29840 1198 91       		.byte	0x91
 29841 1199 DC7B     		.sleb128 -548
 29842 119b 23       		.uleb128 0x23
 29843 119c FD0C0000 		.4byte	.LASF224
 29844 11a0 01       		.byte	0x1
 29845 11a1 1D04     		.2byte	0x41d
 29846 11a3 89120000 		.4byte	0x1289
 29847 11a7 03       		.uleb128 0x3
 29848 11a8 91       		.byte	0x91
 29849 11a9 887B     		.sleb128 -632
 29850 11ab 23       		.uleb128 0x23
 29851 11ac 67080000 		.4byte	.LASF226
 29852 11b0 01       		.byte	0x1
 29853 11b1 3A04     		.2byte	0x43a
 29854 11b3 99120000 		.4byte	0x1299
 29855 11b7 03       		.uleb128 0x3
 29856 11b8 91       		.byte	0x91
 29857 11b9 BC78     		.sleb128 -964
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 647


 29858 11bb 23       		.uleb128 0x23
 29859 11bc F0140000 		.4byte	.LASF247
 29860 11c0 01       		.byte	0x1
 29861 11c1 5704     		.2byte	0x457
 29862 11c3 A9120000 		.4byte	0x12a9
 29863 11c7 03       		.uleb128 0x3
 29864 11c8 91       		.byte	0x91
 29865 11c9 C477     		.sleb128 -1084
 29866 11cb 23       		.uleb128 0x23
 29867 11cc 60000000 		.4byte	.LASF248
 29868 11d0 01       		.byte	0x1
 29869 11d1 5A04     		.2byte	0x45a
 29870 11d3 B9120000 		.4byte	0x12b9
 29871 11d7 03       		.uleb128 0x3
 29872 11d8 91       		.byte	0x91
 29873 11d9 8C77     		.sleb128 -1140
 29874 11db 23       		.uleb128 0x23
 29875 11dc F8080000 		.4byte	.LASF228
 29876 11e0 01       		.byte	0x1
 29877 11e1 6204     		.2byte	0x462
 29878 11e3 C9120000 		.4byte	0x12c9
 29879 11e7 03       		.uleb128 0x3
 29880 11e8 91       		.byte	0x91
 29881 11e9 DC76     		.sleb128 -1188
 29882 11eb 23       		.uleb128 0x23
 29883 11ec B3130000 		.4byte	.LASF225
 29884 11f0 01       		.byte	0x1
 29885 11f1 7104     		.2byte	0x471
 29886 11f3 D9120000 		.4byte	0x12d9
 29887 11f7 03       		.uleb128 0x3
 29888 11f8 91       		.byte	0x91
 29889 11f9 BC76     		.sleb128 -1220
 29890 11fb 23       		.uleb128 0x23
 29891 11fc A60D0000 		.4byte	.LASF249
 29892 1200 01       		.byte	0x1
 29893 1201 7204     		.2byte	0x472
 29894 1203 E9120000 		.4byte	0x12e9
 29895 1207 03       		.uleb128 0x3
 29896 1208 91       		.byte	0x91
 29897 1209 B076     		.sleb128 -1232
 29898 120b 23       		.uleb128 0x23
 29899 120c E70C0000 		.4byte	.LASF250
 29900 1210 01       		.byte	0x1
 29901 1211 7304     		.2byte	0x473
 29902 1213 F9120000 		.4byte	0x12f9
 29903 1217 03       		.uleb128 0x3
 29904 1218 91       		.byte	0x91
 29905 1219 9C76     		.sleb128 -1252
 29906 121b 23       		.uleb128 0x23
 29907 121c C90E0000 		.4byte	.LASF251
 29908 1220 01       		.byte	0x1
 29909 1221 7404     		.2byte	0x474
 29910 1223 97000000 		.4byte	0x97
 29911 1227 02       		.uleb128 0x2
 29912 1228 91       		.byte	0x91
 29913 1229 63       		.sleb128 -29
 29914 122a 23       		.uleb128 0x23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 648


 29915 122b 790B0000 		.4byte	.LASF227
 29916 122f 01       		.byte	0x1
 29917 1230 7D04     		.2byte	0x47d
 29918 1232 89120000 		.4byte	0x1289
 29919 1236 03       		.uleb128 0x3
 29920 1237 91       		.byte	0x91
 29921 1238 C875     		.sleb128 -1336
 29922 123a 23       		.uleb128 0x23
 29923 123b 17150000 		.4byte	.LASF252
 29924 123f 01       		.byte	0x1
 29925 1240 8804     		.2byte	0x488
 29926 1242 89120000 		.4byte	0x1289
 29927 1246 03       		.uleb128 0x3
 29928 1247 91       		.byte	0x91
 29929 1248 F474     		.sleb128 -1420
 29930 124a 1E       		.uleb128 0x1e
 29931 124b A6180000 		.4byte	.LBB18
 29932 124f 86000000 		.4byte	.LBE18-.LBB18
 29933 1253 26       		.uleb128 0x26
 29934 1254 69647800 		.ascii	"idx\000"
 29935 1258 01       		.byte	0x1
 29936 1259 F104     		.2byte	0x4f1
 29937 125b 97000000 		.4byte	0x97
 29938 125f 02       		.uleb128 0x2
 29939 1260 91       		.byte	0x91
 29940 1261 67       		.sleb128 -25
 29941 1262 23       		.uleb128 0x23
 29942 1263 D0050000 		.4byte	.LASF253
 29943 1267 01       		.byte	0x1
 29944 1268 F104     		.2byte	0x4f1
 29945 126a 97000000 		.4byte	0x97
 29946 126e 02       		.uleb128 0x2
 29947 126f 91       		.byte	0x91
 29948 1270 66       		.sleb128 -26
 29949 1271 00       		.byte	0
 29950 1272 00       		.byte	0
 29951 1273 07       		.uleb128 0x7
 29952 1274 04       		.byte	0x4
 29953 1275 240B0000 		.4byte	0xb24
 29954 1279 09       		.uleb128 0x9
 29955 127a 68100000 		.4byte	0x1068
 29956 127e 89120000 		.4byte	0x1289
 29957 1282 0A       		.uleb128 0xa
 29958 1283 18010000 		.4byte	0x118
 29959 1287 52       		.byte	0x52
 29960 1288 00       		.byte	0
 29961 1289 09       		.uleb128 0x9
 29962 128a 97000000 		.4byte	0x97
 29963 128e 99120000 		.4byte	0x1299
 29964 1292 0A       		.uleb128 0xa
 29965 1293 18010000 		.4byte	0x118
 29966 1297 52       		.byte	0x52
 29967 1298 00       		.byte	0
 29968 1299 09       		.uleb128 0x9
 29969 129a 25010000 		.4byte	0x125
 29970 129e A9120000 		.4byte	0x12a9
 29971 12a2 0A       		.uleb128 0xa
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 649


 29972 12a3 18010000 		.4byte	0x118
 29973 12a7 52       		.byte	0x52
 29974 12a8 00       		.byte	0
 29975 12a9 09       		.uleb128 0x9
 29976 12aa F9000000 		.4byte	0xf9
 29977 12ae B9120000 		.4byte	0x12b9
 29978 12b2 0A       		.uleb128 0xa
 29979 12b3 18010000 		.4byte	0x118
 29980 12b7 75       		.byte	0x75
 29981 12b8 00       		.byte	0
 29982 12b9 09       		.uleb128 0x9
 29983 12ba F9000000 		.4byte	0xf9
 29984 12be C9120000 		.4byte	0x12c9
 29985 12c2 0A       		.uleb128 0xa
 29986 12c3 18010000 		.4byte	0x118
 29987 12c7 37       		.byte	0x37
 29988 12c8 00       		.byte	0
 29989 12c9 09       		.uleb128 0x9
 29990 12ca 25010000 		.4byte	0x125
 29991 12ce D9120000 		.4byte	0x12d9
 29992 12d2 0A       		.uleb128 0xa
 29993 12d3 18010000 		.4byte	0x118
 29994 12d7 0B       		.byte	0xb
 29995 12d8 00       		.byte	0
 29996 12d9 09       		.uleb128 0x9
 29997 12da 97000000 		.4byte	0x97
 29998 12de E9120000 		.4byte	0x12e9
 29999 12e2 0A       		.uleb128 0xa
 30000 12e3 18010000 		.4byte	0x118
 30001 12e7 1F       		.byte	0x1f
 30002 12e8 00       		.byte	0
 30003 12e9 09       		.uleb128 0x9
 30004 12ea 97000000 		.4byte	0x97
 30005 12ee F9120000 		.4byte	0x12f9
 30006 12f2 0A       		.uleb128 0xa
 30007 12f3 18010000 		.4byte	0x118
 30008 12f7 08       		.byte	0x8
 30009 12f8 00       		.byte	0
 30010 12f9 09       		.uleb128 0x9
 30011 12fa 97000000 		.4byte	0x97
 30012 12fe 09130000 		.4byte	0x1309
 30013 1302 0A       		.uleb128 0xa
 30014 1303 18010000 		.4byte	0x118
 30015 1307 11       		.byte	0x11
 30016 1308 00       		.byte	0
 30017 1309 22       		.uleb128 0x22
 30018 130a 6A040000 		.4byte	.LASF254
 30019 130e 01       		.byte	0x1
 30020 130f 0205     		.2byte	0x502
 30021 1311 00000000 		.4byte	.LFB69
 30022 1315 DC140000 		.4byte	.LFE69-.LFB69
 30023 1319 01       		.uleb128 0x1
 30024 131a 9C       		.byte	0x9c
 30025 131b AB130000 		.4byte	0x13ab
 30026 131f 25       		.uleb128 0x25
 30027 1320 72070000 		.4byte	.LASF244
 30028 1324 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 650


 30029 1325 0205     		.2byte	0x502
 30030 1327 A3000000 		.4byte	0xa3
 30031 132b 02       		.uleb128 0x2
 30032 132c 91       		.byte	0x91
 30033 132d 56       		.sleb128 -42
 30034 132e 26       		.uleb128 0x26
 30035 132f 6900     		.ascii	"i\000"
 30036 1331 01       		.byte	0x1
 30037 1332 0405     		.2byte	0x504
 30038 1334 97000000 		.4byte	0x97
 30039 1338 02       		.uleb128 0x2
 30040 1339 91       		.byte	0x91
 30041 133a 67       		.sleb128 -25
 30042 133b 26       		.uleb128 0x26
 30043 133c 6A00     		.ascii	"j\000"
 30044 133e 01       		.byte	0x1
 30045 133f 0405     		.2byte	0x504
 30046 1341 97000000 		.4byte	0x97
 30047 1345 02       		.uleb128 0x2
 30048 1346 91       		.byte	0x91
 30049 1347 66       		.sleb128 -26
 30050 1348 23       		.uleb128 0x23
 30051 1349 180D0000 		.4byte	.LASF255
 30052 134d 01       		.byte	0x1
 30053 134e 0505     		.2byte	0x505
 30054 1350 97000000 		.4byte	0x97
 30055 1354 02       		.uleb128 0x2
 30056 1355 91       		.byte	0x91
 30057 1356 62       		.sleb128 -30
 30058 1357 23       		.uleb128 0x23
 30059 1358 9B130000 		.4byte	.LASF234
 30060 135c 01       		.byte	0x1
 30061 135d 0605     		.2byte	0x506
 30062 135f EB000000 		.4byte	0xeb
 30063 1363 02       		.uleb128 0x2
 30064 1364 91       		.byte	0x91
 30065 1365 5C       		.sleb128 -36
 30066 1366 23       		.uleb128 0x23
 30067 1367 43040000 		.4byte	.LASF256
 30068 136b 01       		.byte	0x1
 30069 136c 0605     		.2byte	0x506
 30070 136e EB000000 		.4byte	0xeb
 30071 1372 02       		.uleb128 0x2
 30072 1373 91       		.byte	0x91
 30073 1374 58       		.sleb128 -40
 30074 1375 23       		.uleb128 0x23
 30075 1376 500E0000 		.4byte	.LASF239
 30076 137a 01       		.byte	0x1
 30077 137b 0805     		.2byte	0x508
 30078 137d 97000000 		.4byte	0x97
 30079 1381 02       		.uleb128 0x2
 30080 1382 91       		.byte	0x91
 30081 1383 64       		.sleb128 -28
 30082 1384 23       		.uleb128 0x23
 30083 1385 9B010000 		.4byte	.LASF240
 30084 1389 01       		.byte	0x1
 30085 138a 0905     		.2byte	0x509
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 651


 30086 138c 97000000 		.4byte	0x97
 30087 1390 02       		.uleb128 0x2
 30088 1391 91       		.byte	0x91
 30089 1392 63       		.sleb128 -29
 30090 1393 1E       		.uleb128 0x1e
 30091 1394 080B0000 		.4byte	.LBB19
 30092 1398 26000000 		.4byte	.LBE19-.LBB19
 30093 139c 26       		.uleb128 0x26
 30094 139d 6900     		.ascii	"i\000"
 30095 139f 01       		.byte	0x1
 30096 13a0 B005     		.2byte	0x5b0
 30097 13a2 97000000 		.4byte	0x97
 30098 13a6 02       		.uleb128 0x2
 30099 13a7 91       		.byte	0x91
 30100 13a8 65       		.sleb128 -27
 30101 13a9 00       		.byte	0
 30102 13aa 00       		.byte	0
 30103 13ab 22       		.uleb128 0x22
 30104 13ac 83090000 		.4byte	.LASF257
 30105 13b0 01       		.byte	0x1
 30106 13b1 5C06     		.2byte	0x65c
 30107 13b3 00000000 		.4byte	.LFB70
 30108 13b7 F40D0000 		.4byte	.LFE70-.LFB70
 30109 13bb 01       		.uleb128 0x1
 30110 13bc 9C       		.byte	0x9c
 30111 13bd 3A150000 		.4byte	0x153a
 30112 13c1 25       		.uleb128 0x25
 30113 13c2 72070000 		.4byte	.LASF244
 30114 13c6 01       		.byte	0x1
 30115 13c7 5C06     		.2byte	0x65c
 30116 13c9 A3000000 		.4byte	0xa3
 30117 13cd 03       		.uleb128 0x3
 30118 13ce 91       		.byte	0x91
 30119 13cf CE72     		.sleb128 -1714
 30120 13d1 23       		.uleb128 0x23
 30121 13d2 6C060000 		.4byte	.LASF229
 30122 13d6 01       		.byte	0x1
 30123 13d7 5F06     		.2byte	0x65f
 30124 13d9 3A150000 		.4byte	0x153a
 30125 13dd 03       		.uleb128 0x3
 30126 13de 91       		.byte	0x91
 30127 13df DC74     		.sleb128 -1444
 30128 13e1 23       		.uleb128 0x23
 30129 13e2 4C120000 		.4byte	.LASF258
 30130 13e6 01       		.byte	0x1
 30131 13e7 6606     		.2byte	0x666
 30132 13e9 A3000000 		.4byte	0xa3
 30133 13ed 02       		.uleb128 0x2
 30134 13ee 91       		.byte	0x91
 30135 13ef 62       		.sleb128 -30
 30136 13f0 23       		.uleb128 0x23
 30137 13f1 E4050000 		.4byte	.LASF259
 30138 13f5 01       		.byte	0x1
 30139 13f6 6706     		.2byte	0x667
 30140 13f8 A3000000 		.4byte	0xa3
 30141 13fc 02       		.uleb128 0x2
 30142 13fd 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 652


 30143 13fe 6E       		.sleb128 -18
 30144 13ff 23       		.uleb128 0x23
 30145 1400 A4090000 		.4byte	.LASF260
 30146 1404 01       		.byte	0x1
 30147 1405 6806     		.2byte	0x668
 30148 1407 A3000000 		.4byte	0xa3
 30149 140b 02       		.uleb128 0x2
 30150 140c 91       		.byte	0x91
 30151 140d 60       		.sleb128 -32
 30152 140e 23       		.uleb128 0x23
 30153 140f 23090000 		.4byte	.LASF261
 30154 1413 01       		.byte	0x1
 30155 1414 6906     		.2byte	0x669
 30156 1416 A3000000 		.4byte	0xa3
 30157 141a 02       		.uleb128 0x2
 30158 141b 91       		.byte	0x91
 30159 141c 5E       		.sleb128 -34
 30160 141d 26       		.uleb128 0x26
 30161 141e 6900     		.ascii	"i\000"
 30162 1420 01       		.byte	0x1
 30163 1421 7106     		.2byte	0x671
 30164 1423 A3000000 		.4byte	0xa3
 30165 1427 02       		.uleb128 0x2
 30166 1428 91       		.byte	0x91
 30167 1429 6C       		.sleb128 -20
 30168 142a 26       		.uleb128 0x26
 30169 142b 6A00     		.ascii	"j\000"
 30170 142d 01       		.byte	0x1
 30171 142e 7106     		.2byte	0x671
 30172 1430 A3000000 		.4byte	0xa3
 30173 1434 02       		.uleb128 0x2
 30174 1435 91       		.byte	0x91
 30175 1436 6A       		.sleb128 -22
 30176 1437 26       		.uleb128 0x26
 30177 1438 6B00     		.ascii	"k\000"
 30178 143a 01       		.byte	0x1
 30179 143b 7106     		.2byte	0x671
 30180 143d A3000000 		.4byte	0xa3
 30181 1441 02       		.uleb128 0x2
 30182 1442 91       		.byte	0x91
 30183 1443 68       		.sleb128 -24
 30184 1444 26       		.uleb128 0x26
 30185 1445 6800     		.ascii	"h\000"
 30186 1447 01       		.byte	0x1
 30187 1448 7106     		.2byte	0x671
 30188 144a A3000000 		.4byte	0xa3
 30189 144e 02       		.uleb128 0x2
 30190 144f 91       		.byte	0x91
 30191 1450 66       		.sleb128 -26
 30192 1451 23       		.uleb128 0x23
 30193 1452 D9050000 		.4byte	.LASF262
 30194 1456 01       		.byte	0x1
 30195 1457 7206     		.2byte	0x672
 30196 1459 A3000000 		.4byte	0xa3
 30197 145d 02       		.uleb128 0x2
 30198 145e 91       		.byte	0x91
 30199 145f 5C       		.sleb128 -36
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 653


 30200 1460 23       		.uleb128 0x23
 30201 1461 650E0000 		.4byte	.LASF263
 30202 1465 01       		.byte	0x1
 30203 1466 7506     		.2byte	0x675
 30204 1468 30010000 		.4byte	0x130
 30205 146c 03       		.uleb128 0x3
 30206 146d 91       		.byte	0x91
 30207 146e C074     		.sleb128 -1472
 30208 1470 23       		.uleb128 0x23
 30209 1471 13120000 		.4byte	.LASF264
 30210 1475 01       		.byte	0x1
 30211 1476 7606     		.2byte	0x676
 30212 1478 4B150000 		.4byte	0x154b
 30213 147c 03       		.uleb128 0x3
 30214 147d 91       		.byte	0x91
 30215 147e B474     		.sleb128 -1484
 30216 1480 23       		.uleb128 0x23
 30217 1481 00080000 		.4byte	.LASF265
 30218 1485 01       		.byte	0x1
 30219 1486 7706     		.2byte	0x677
 30220 1488 5B150000 		.4byte	0x155b
 30221 148c 03       		.uleb128 0x3
 30222 148d 91       		.byte	0x91
 30223 148e A074     		.sleb128 -1504
 30224 1490 23       		.uleb128 0x23
 30225 1491 59000000 		.4byte	.LASF266
 30226 1495 01       		.byte	0x1
 30227 1496 7806     		.2byte	0x678
 30228 1498 6B150000 		.4byte	0x156b
 30229 149c 03       		.uleb128 0x3
 30230 149d 91       		.byte	0x91
 30231 149e 9074     		.sleb128 -1520
 30232 14a0 23       		.uleb128 0x23
 30233 14a1 420F0000 		.4byte	.LASF267
 30234 14a5 01       		.byte	0x1
 30235 14a6 7906     		.2byte	0x679
 30236 14a8 7B150000 		.4byte	0x157b
 30237 14ac 03       		.uleb128 0x3
 30238 14ad 91       		.byte	0x91
 30239 14ae E473     		.sleb128 -1564
 30240 14b0 23       		.uleb128 0x23
 30241 14b1 A1020000 		.4byte	.LASF268
 30242 14b5 01       		.byte	0x1
 30243 14b6 7A06     		.2byte	0x67a
 30244 14b8 30010000 		.4byte	0x130
 30245 14bc 03       		.uleb128 0x3
 30246 14bd 91       		.byte	0x91
 30247 14be C873     		.sleb128 -1592
 30248 14c0 23       		.uleb128 0x23
 30249 14c1 0C020000 		.4byte	.LASF269
 30250 14c5 01       		.byte	0x1
 30251 14c6 7D06     		.2byte	0x67d
 30252 14c8 97000000 		.4byte	0x97
 30253 14cc 02       		.uleb128 0x2
 30254 14cd 91       		.byte	0x91
 30255 14ce 5B       		.sleb128 -37
 30256 14cf 23       		.uleb128 0x23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 654


 30257 14d0 6A050000 		.4byte	.LASF270
 30258 14d4 01       		.byte	0x1
 30259 14d5 7E06     		.2byte	0x67e
 30260 14d7 97000000 		.4byte	0x97
 30261 14db 02       		.uleb128 0x2
 30262 14dc 91       		.byte	0x91
 30263 14dd 5A       		.sleb128 -38
 30264 14de 23       		.uleb128 0x23
 30265 14df BB110000 		.4byte	.LASF271
 30266 14e3 01       		.byte	0x1
 30267 14e4 7F06     		.2byte	0x67f
 30268 14e6 97000000 		.4byte	0x97
 30269 14ea 02       		.uleb128 0x2
 30270 14eb 91       		.byte	0x91
 30271 14ec 59       		.sleb128 -39
 30272 14ed 23       		.uleb128 0x23
 30273 14ee 3A120000 		.4byte	.LASF272
 30274 14f2 01       		.byte	0x1
 30275 14f3 8006     		.2byte	0x680
 30276 14f5 97000000 		.4byte	0x97
 30277 14f9 02       		.uleb128 0x2
 30278 14fa 91       		.byte	0x91
 30279 14fb 58       		.sleb128 -40
 30280 14fc 23       		.uleb128 0x23
 30281 14fd 78050000 		.4byte	.LASF273
 30282 1501 01       		.byte	0x1
 30283 1502 8106     		.2byte	0x681
 30284 1504 97000000 		.4byte	0x97
 30285 1508 02       		.uleb128 0x2
 30286 1509 91       		.byte	0x91
 30287 150a 57       		.sleb128 -41
 30288 150b 23       		.uleb128 0x23
 30289 150c 5A010000 		.4byte	.LASF274
 30290 1510 01       		.byte	0x1
 30291 1511 8206     		.2byte	0x682
 30292 1513 97000000 		.4byte	0x97
 30293 1517 02       		.uleb128 0x2
 30294 1518 91       		.byte	0x91
 30295 1519 65       		.sleb128 -27
 30296 151a 23       		.uleb128 0x23
 30297 151b F0140000 		.4byte	.LASF247
 30298 151f 01       		.byte	0x1
 30299 1520 8406     		.2byte	0x684
 30300 1522 A9120000 		.4byte	0x12a9
 30301 1526 03       		.uleb128 0x3
 30302 1527 91       		.byte	0x91
 30303 1528 D072     		.sleb128 -1712
 30304 152a 23       		.uleb128 0x23
 30305 152b 57040000 		.4byte	.LASF275
 30306 152f 01       		.byte	0x1
 30307 1530 8506     		.2byte	0x685
 30308 1532 97000000 		.4byte	0x97
 30309 1536 02       		.uleb128 0x2
 30310 1537 91       		.byte	0x91
 30311 1538 56       		.sleb128 -42
 30312 1539 00       		.byte	0
 30313 153a 09       		.uleb128 0x9
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 655


 30314 153b 97000000 		.4byte	0x97
 30315 153f 4B150000 		.4byte	0x154b
 30316 1543 24       		.uleb128 0x24
 30317 1544 18010000 		.4byte	0x118
 30318 1548 7805     		.2byte	0x578
 30319 154a 00       		.byte	0
 30320 154b 09       		.uleb128 0x9
 30321 154c F9000000 		.4byte	0xf9
 30322 1550 5B150000 		.4byte	0x155b
 30323 1554 0A       		.uleb128 0xa
 30324 1555 18010000 		.4byte	0x118
 30325 1559 0A       		.byte	0xa
 30326 155a 00       		.byte	0
 30327 155b 09       		.uleb128 0x9
 30328 155c F9000000 		.4byte	0xf9
 30329 1560 6B150000 		.4byte	0x156b
 30330 1564 0A       		.uleb128 0xa
 30331 1565 18010000 		.4byte	0x118
 30332 1569 13       		.byte	0x13
 30333 156a 00       		.byte	0
 30334 156b 09       		.uleb128 0x9
 30335 156c F9000000 		.4byte	0xf9
 30336 1570 7B150000 		.4byte	0x157b
 30337 1574 0A       		.uleb128 0xa
 30338 1575 18010000 		.4byte	0x118
 30339 1579 0F       		.byte	0xf
 30340 157a 00       		.byte	0
 30341 157b 09       		.uleb128 0x9
 30342 157c F9000000 		.4byte	0xf9
 30343 1580 8B150000 		.4byte	0x158b
 30344 1584 0A       		.uleb128 0xa
 30345 1585 18010000 		.4byte	0x118
 30346 1589 29       		.byte	0x29
 30347 158a 00       		.byte	0
 30348 158b 27       		.uleb128 0x27
 30349 158c A1030000 		.4byte	.LASF312
 30350 1590 01       		.byte	0x1
 30351 1591 4B07     		.2byte	0x74b
 30352 1593 00000000 		.4byte	.LFB71
 30353 1597 90000000 		.4byte	.LFE71-.LFB71
 30354 159b 01       		.uleb128 0x1
 30355 159c 9C       		.byte	0x9c
 30356 159d BC150000 		.4byte	0x15bc
 30357 15a1 26       		.uleb128 0x26
 30358 15a2 6900     		.ascii	"i\000"
 30359 15a4 01       		.byte	0x1
 30360 15a5 4D07     		.2byte	0x74d
 30361 15a7 97000000 		.4byte	0x97
 30362 15ab 02       		.uleb128 0x2
 30363 15ac 91       		.byte	0x91
 30364 15ad 6F       		.sleb128 -17
 30365 15ae 26       		.uleb128 0x26
 30366 15af 6A00     		.ascii	"j\000"
 30367 15b1 01       		.byte	0x1
 30368 15b2 4D07     		.2byte	0x74d
 30369 15b4 97000000 		.4byte	0x97
 30370 15b8 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 656


 30371 15b9 91       		.byte	0x91
 30372 15ba 6E       		.sleb128 -18
 30373 15bb 00       		.byte	0
 30374 15bc 22       		.uleb128 0x22
 30375 15bd 7A010000 		.4byte	.LASF276
 30376 15c1 01       		.byte	0x1
 30377 15c2 5E07     		.2byte	0x75e
 30378 15c4 00000000 		.4byte	.LFB72
 30379 15c8 98210000 		.4byte	.LFE72-.LFB72
 30380 15cc 01       		.uleb128 0x1
 30381 15cd 9C       		.byte	0x9c
 30382 15ce 75160000 		.4byte	0x1675
 30383 15d2 25       		.uleb128 0x25
 30384 15d3 6F0E0000 		.4byte	.LASF277
 30385 15d7 01       		.byte	0x1
 30386 15d8 5E07     		.2byte	0x75e
 30387 15da 1F010000 		.4byte	0x11f
 30388 15de 03       		.uleb128 0x3
 30389 15df 91       		.byte	0x91
 30390 15e0 D47E     		.sleb128 -172
 30391 15e2 26       		.uleb128 0x26
 30392 15e3 6900     		.ascii	"i\000"
 30393 15e5 01       		.byte	0x1
 30394 15e6 6007     		.2byte	0x760
 30395 15e8 73000000 		.4byte	0x73
 30396 15ec 02       		.uleb128 0x2
 30397 15ed 91       		.byte	0x91
 30398 15ee 54       		.sleb128 -44
 30399 15ef 23       		.uleb128 0x23
 30400 15f0 D9030000 		.4byte	.LASF246
 30401 15f4 01       		.byte	0x1
 30402 15f5 6207     		.2byte	0x762
 30403 15f7 73120000 		.4byte	0x1273
 30404 15fb 02       		.uleb128 0x2
 30405 15fc 91       		.byte	0x91
 30406 15fd 48       		.sleb128 -56
 30407 15fe 1E       		.uleb128 0x1e
 30408 15ff 1C000000 		.4byte	.LBB20
 30409 1603 38210000 		.4byte	.LBE20-.LBB20
 30410 1607 26       		.uleb128 0x26
 30411 1608 73747200 		.ascii	"str\000"
 30412 160c 01       		.byte	0x1
 30413 160d 6507     		.2byte	0x765
 30414 160f 75160000 		.4byte	0x1675
 30415 1613 03       		.uleb128 0x3
 30416 1614 91       		.byte	0x91
 30417 1615 D87E     		.sleb128 -168
 30418 1617 26       		.uleb128 0x26
 30419 1618 6A00     		.ascii	"j\000"
 30420 161a 01       		.byte	0x1
 30421 161b 2109     		.2byte	0x921
 30422 161d 73000000 		.4byte	0x73
 30423 1621 02       		.uleb128 0x2
 30424 1622 91       		.byte	0x91
 30425 1623 4C       		.sleb128 -52
 30426 1624 1E       		.uleb128 0x1e
 30427 1625 1C030000 		.4byte	.LBB21
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 657


 30428 1629 06140000 		.4byte	.LBE21-.LBB21
 30429 162d 26       		.uleb128 0x26
 30430 162e 6B00     		.ascii	"k\000"
 30431 1630 01       		.byte	0x1
 30432 1631 9907     		.2byte	0x799
 30433 1633 97000000 		.4byte	0x97
 30434 1637 02       		.uleb128 0x2
 30435 1638 91       		.byte	0x91
 30436 1639 53       		.sleb128 -45
 30437 163a 1E       		.uleb128 0x1e
 30438 163b 6C030000 		.4byte	.LBB22
 30439 163f 9A130000 		.4byte	.LBE22-.LBB22
 30440 1643 23       		.uleb128 0x23
 30441 1644 500E0000 		.4byte	.LASF239
 30442 1648 01       		.byte	0x1
 30443 1649 9B07     		.2byte	0x79b
 30444 164b 97000000 		.4byte	0x97
 30445 164f 02       		.uleb128 0x2
 30446 1650 91       		.byte	0x91
 30447 1651 47       		.sleb128 -57
 30448 1652 26       		.uleb128 0x26
 30449 1653 4D4F5400 		.ascii	"MOT\000"
 30450 1657 01       		.byte	0x1
 30451 1658 9C07     		.2byte	0x79c
 30452 165a 85160000 		.4byte	0x1685
 30453 165e 02       		.uleb128 0x2
 30454 165f 91       		.byte	0x91
 30455 1660 40       		.sleb128 -64
 30456 1661 23       		.uleb128 0x23
 30457 1662 58140000 		.4byte	.LASF278
 30458 1666 01       		.byte	0x1
 30459 1667 9D07     		.2byte	0x79d
 30460 1669 97000000 		.4byte	0x97
 30461 166d 03       		.uleb128 0x3
 30462 166e 91       		.byte	0x91
 30463 166f BF7F     		.sleb128 -65
 30464 1671 00       		.byte	0
 30465 1672 00       		.byte	0
 30466 1673 00       		.byte	0
 30467 1674 00       		.byte	0
 30468 1675 09       		.uleb128 0x9
 30469 1676 F9000000 		.4byte	0xf9
 30470 167a 85160000 		.4byte	0x1685
 30471 167e 0A       		.uleb128 0xa
 30472 167f 18010000 		.4byte	0x118
 30473 1683 63       		.byte	0x63
 30474 1684 00       		.byte	0
 30475 1685 07       		.uleb128 0x7
 30476 1686 04       		.byte	0x4
 30477 1687 D5050000 		.4byte	0x5d5
 30478 168b 22       		.uleb128 0x22
 30479 168c 750F0000 		.4byte	.LASF279
 30480 1690 01       		.byte	0x1
 30481 1691 4B09     		.2byte	0x94b
 30482 1693 00000000 		.4byte	.LFB73
 30483 1697 BC030000 		.4byte	.LFE73-.LFB73
 30484 169b 01       		.uleb128 0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 658


 30485 169c 9C       		.byte	0x9c
 30486 169d 0B170000 		.4byte	0x170b
 30487 16a1 25       		.uleb128 0x25
 30488 16a2 6F0E0000 		.4byte	.LASF277
 30489 16a6 01       		.byte	0x1
 30490 16a7 4B09     		.2byte	0x94b
 30491 16a9 1F010000 		.4byte	0x11f
 30492 16ad 03       		.uleb128 0x3
 30493 16ae 91       		.byte	0x91
 30494 16af EC7E     		.sleb128 -148
 30495 16b1 26       		.uleb128 0x26
 30496 16b2 73747200 		.ascii	"str\000"
 30497 16b6 01       		.byte	0x1
 30498 16b7 4D09     		.2byte	0x94d
 30499 16b9 75160000 		.4byte	0x1675
 30500 16bd 03       		.uleb128 0x3
 30501 16be 91       		.byte	0x91
 30502 16bf F07E     		.sleb128 -144
 30503 16c1 26       		.uleb128 0x26
 30504 16c2 6900     		.ascii	"i\000"
 30505 16c4 01       		.byte	0x1
 30506 16c5 4E09     		.2byte	0x94e
 30507 16c7 73000000 		.4byte	0x73
 30508 16cb 02       		.uleb128 0x2
 30509 16cc 91       		.byte	0x91
 30510 16cd 64       		.sleb128 -28
 30511 16ce 23       		.uleb128 0x23
 30512 16cf 07050000 		.4byte	.LASF280
 30513 16d3 01       		.byte	0x1
 30514 16d4 4F09     		.2byte	0x94f
 30515 16d6 73000000 		.4byte	0x73
 30516 16da 02       		.uleb128 0x2
 30517 16db 91       		.byte	0x91
 30518 16dc 54       		.sleb128 -44
 30519 16dd 23       		.uleb128 0x23
 30520 16de D9030000 		.4byte	.LASF246
 30521 16e2 01       		.byte	0x1
 30522 16e3 5109     		.2byte	0x951
 30523 16e5 73120000 		.4byte	0x1273
 30524 16e9 02       		.uleb128 0x2
 30525 16ea 91       		.byte	0x91
 30526 16eb 60       		.sleb128 -32
 30527 16ec 26       		.uleb128 0x26
 30528 16ed 4D4F5400 		.ascii	"MOT\000"
 30529 16f1 01       		.byte	0x1
 30530 16f2 5209     		.2byte	0x952
 30531 16f4 85160000 		.4byte	0x1685
 30532 16f8 02       		.uleb128 0x2
 30533 16f9 91       		.byte	0x91
 30534 16fa 5C       		.sleb128 -36
 30535 16fb 23       		.uleb128 0x23
 30536 16fc 58140000 		.4byte	.LASF278
 30537 1700 01       		.byte	0x1
 30538 1701 5309     		.2byte	0x953
 30539 1703 97000000 		.4byte	0x97
 30540 1707 02       		.uleb128 0x2
 30541 1708 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 659


 30542 1709 5B       		.sleb128 -37
 30543 170a 00       		.byte	0
 30544 170b 22       		.uleb128 0x22
 30545 170c DD0F0000 		.4byte	.LASF281
 30546 1710 01       		.byte	0x1
 30547 1711 8F09     		.2byte	0x98f
 30548 1713 00000000 		.4byte	.LFB74
 30549 1717 80120000 		.4byte	.LFE74-.LFB74
 30550 171b 01       		.uleb128 0x1
 30551 171c 9C       		.byte	0x9c
 30552 171d AC170000 		.4byte	0x17ac
 30553 1721 25       		.uleb128 0x25
 30554 1722 6F0E0000 		.4byte	.LASF277
 30555 1726 01       		.byte	0x1
 30556 1727 8F09     		.2byte	0x98f
 30557 1729 1F010000 		.4byte	0x11f
 30558 172d 03       		.uleb128 0x3
 30559 172e 91       		.byte	0x91
 30560 172f D47E     		.sleb128 -172
 30561 1731 26       		.uleb128 0x26
 30562 1732 73747200 		.ascii	"str\000"
 30563 1736 01       		.byte	0x1
 30564 1737 9109     		.2byte	0x991
 30565 1739 75160000 		.4byte	0x1675
 30566 173d 03       		.uleb128 0x3
 30567 173e 91       		.byte	0x91
 30568 173f DC7E     		.sleb128 -164
 30569 1741 26       		.uleb128 0x26
 30570 1742 6900     		.ascii	"i\000"
 30571 1744 01       		.byte	0x1
 30572 1745 9209     		.2byte	0x992
 30573 1747 73000000 		.4byte	0x73
 30574 174b 02       		.uleb128 0x2
 30575 174c 91       		.byte	0x91
 30576 174d 54       		.sleb128 -44
 30577 174e 23       		.uleb128 0x23
 30578 174f D9030000 		.4byte	.LASF246
 30579 1753 01       		.byte	0x1
 30580 1754 9609     		.2byte	0x996
 30581 1756 73120000 		.4byte	0x1273
 30582 175a 02       		.uleb128 0x2
 30583 175b 91       		.byte	0x91
 30584 175c 4C       		.sleb128 -52
 30585 175d 1E       		.uleb128 0x1e
 30586 175e 08010000 		.4byte	.LBB23
 30587 1762 D80C0000 		.4byte	.LBE23-.LBB23
 30588 1766 26       		.uleb128 0x26
 30589 1767 6B00     		.ascii	"k\000"
 30590 1769 01       		.byte	0x1
 30591 176a AB09     		.2byte	0x9ab
 30592 176c 97000000 		.4byte	0x97
 30593 1770 02       		.uleb128 0x2
 30594 1771 91       		.byte	0x91
 30595 1772 53       		.sleb128 -45
 30596 1773 1E       		.uleb128 0x1e
 30597 1774 12010000 		.4byte	.LBB24
 30598 1778 B20C0000 		.4byte	.LBE24-.LBB24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 660


 30599 177c 23       		.uleb128 0x23
 30600 177d 500E0000 		.4byte	.LASF239
 30601 1781 01       		.byte	0x1
 30602 1782 AD09     		.2byte	0x9ad
 30603 1784 97000000 		.4byte	0x97
 30604 1788 02       		.uleb128 0x2
 30605 1789 91       		.byte	0x91
 30606 178a 4B       		.sleb128 -53
 30607 178b 26       		.uleb128 0x26
 30608 178c 4D4F5400 		.ascii	"MOT\000"
 30609 1790 01       		.byte	0x1
 30610 1791 AE09     		.2byte	0x9ae
 30611 1793 85160000 		.4byte	0x1685
 30612 1797 02       		.uleb128 0x2
 30613 1798 91       		.byte	0x91
 30614 1799 44       		.sleb128 -60
 30615 179a 23       		.uleb128 0x23
 30616 179b 58140000 		.4byte	.LASF278
 30617 179f 01       		.byte	0x1
 30618 17a0 AF09     		.2byte	0x9af
 30619 17a2 97000000 		.4byte	0x97
 30620 17a6 02       		.uleb128 0x2
 30621 17a7 91       		.byte	0x91
 30622 17a8 43       		.sleb128 -61
 30623 17a9 00       		.byte	0
 30624 17aa 00       		.byte	0
 30625 17ab 00       		.byte	0
 30626 17ac 22       		.uleb128 0x22
 30627 17ad 0E0C0000 		.4byte	.LASF282
 30628 17b1 01       		.byte	0x1
 30629 17b2 970A     		.2byte	0xa97
 30630 17b4 00000000 		.4byte	.LFB75
 30631 17b8 C8000000 		.4byte	.LFE75-.LFB75
 30632 17bc 01       		.uleb128 0x1
 30633 17bd 9C       		.byte	0x9c
 30634 17be F0170000 		.4byte	0x17f0
 30635 17c2 25       		.uleb128 0x25
 30636 17c3 6F0E0000 		.4byte	.LASF277
 30637 17c7 01       		.byte	0x1
 30638 17c8 970A     		.2byte	0xa97
 30639 17ca 1F010000 		.4byte	0x11f
 30640 17ce 03       		.uleb128 0x3
 30641 17cf 91       		.byte	0x91
 30642 17d0 847F     		.sleb128 -124
 30643 17d2 26       		.uleb128 0x26
 30644 17d3 73747200 		.ascii	"str\000"
 30645 17d7 01       		.byte	0x1
 30646 17d8 990A     		.2byte	0xa99
 30647 17da 75160000 		.4byte	0x1675
 30648 17de 03       		.uleb128 0x3
 30649 17df 91       		.byte	0x91
 30650 17e0 887F     		.sleb128 -120
 30651 17e2 26       		.uleb128 0x26
 30652 17e3 6900     		.ascii	"i\000"
 30653 17e5 01       		.byte	0x1
 30654 17e6 9A0A     		.2byte	0xa9a
 30655 17e8 73000000 		.4byte	0x73
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 661


 30656 17ec 02       		.uleb128 0x2
 30657 17ed 91       		.byte	0x91
 30658 17ee 6C       		.sleb128 -20
 30659 17ef 00       		.byte	0
 30660 17f0 22       		.uleb128 0x22
 30661 17f1 7B0E0000 		.4byte	.LASF283
 30662 17f5 01       		.byte	0x1
 30663 17f6 AF0A     		.2byte	0xaaf
 30664 17f8 00000000 		.4byte	.LFB76
 30665 17fc 30010000 		.4byte	.LFE76-.LFB76
 30666 1800 01       		.uleb128 0x1
 30667 1801 9C       		.byte	0x9c
 30668 1802 34180000 		.4byte	0x1834
 30669 1806 25       		.uleb128 0x25
 30670 1807 6F0E0000 		.4byte	.LASF277
 30671 180b 01       		.byte	0x1
 30672 180c AF0A     		.2byte	0xaaf
 30673 180e 1F010000 		.4byte	0x11f
 30674 1812 03       		.uleb128 0x3
 30675 1813 91       		.byte	0x91
 30676 1814 847F     		.sleb128 -124
 30677 1816 26       		.uleb128 0x26
 30678 1817 73747200 		.ascii	"str\000"
 30679 181b 01       		.byte	0x1
 30680 181c B10A     		.2byte	0xab1
 30681 181e 75160000 		.4byte	0x1675
 30682 1822 03       		.uleb128 0x3
 30683 1823 91       		.byte	0x91
 30684 1824 887F     		.sleb128 -120
 30685 1826 26       		.uleb128 0x26
 30686 1827 6900     		.ascii	"i\000"
 30687 1829 01       		.byte	0x1
 30688 182a B20A     		.2byte	0xab2
 30689 182c 73000000 		.4byte	0x73
 30690 1830 02       		.uleb128 0x2
 30691 1831 91       		.byte	0x91
 30692 1832 6C       		.sleb128 -20
 30693 1833 00       		.byte	0
 30694 1834 28       		.uleb128 0x28
 30695 1835 0F100000 		.4byte	.LASF284
 30696 1839 01       		.byte	0x1
 30697 183a D50A     		.2byte	0xad5
 30698 183c 00000000 		.4byte	.LFB77
 30699 1840 28000000 		.4byte	.LFE77-.LFB77
 30700 1844 01       		.uleb128 0x1
 30701 1845 9C       		.byte	0x9c
 30702 1846 5A180000 		.4byte	0x185a
 30703 184a 25       		.uleb128 0x25
 30704 184b 6F0E0000 		.4byte	.LASF277
 30705 184f 01       		.byte	0x1
 30706 1850 D50A     		.2byte	0xad5
 30707 1852 1F010000 		.4byte	0x11f
 30708 1856 02       		.uleb128 0x2
 30709 1857 91       		.byte	0x91
 30710 1858 6C       		.sleb128 -20
 30711 1859 00       		.byte	0
 30712 185a 22       		.uleb128 0x22
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 662


 30713 185b 08040000 		.4byte	.LASF285
 30714 185f 01       		.byte	0x1
 30715 1860 E00A     		.2byte	0xae0
 30716 1862 00000000 		.4byte	.LFB78
 30717 1866 F0000000 		.4byte	.LFE78-.LFB78
 30718 186a 01       		.uleb128 0x1
 30719 186b 9C       		.byte	0x9c
 30720 186c C9180000 		.4byte	0x18c9
 30721 1870 25       		.uleb128 0x25
 30722 1871 6F0E0000 		.4byte	.LASF277
 30723 1875 01       		.byte	0x1
 30724 1876 E00A     		.2byte	0xae0
 30725 1878 1F010000 		.4byte	0x11f
 30726 187c 03       		.uleb128 0x3
 30727 187d 91       		.byte	0x91
 30728 187e FC7E     		.sleb128 -132
 30729 1880 23       		.uleb128 0x23
 30730 1881 91020000 		.4byte	.LASF286
 30731 1885 01       		.byte	0x1
 30732 1886 E20A     		.2byte	0xae2
 30733 1888 75160000 		.4byte	0x1675
 30734 188c 03       		.uleb128 0x3
 30735 188d 91       		.byte	0x91
 30736 188e 847F     		.sleb128 -124
 30737 1890 23       		.uleb128 0x23
 30738 1891 35020000 		.4byte	.LASF287
 30739 1895 01       		.byte	0x1
 30740 1896 E30A     		.2byte	0xae3
 30741 1898 A3000000 		.4byte	0xa3
 30742 189c 02       		.uleb128 0x2
 30743 189d 91       		.byte	0x91
 30744 189e 6E       		.sleb128 -18
 30745 189f 23       		.uleb128 0x23
 30746 18a0 1A010000 		.4byte	.LASF288
 30747 18a4 01       		.byte	0x1
 30748 18a5 E40A     		.2byte	0xae4
 30749 18a7 EB000000 		.4byte	0xeb
 30750 18ab 05       		.uleb128 0x5
 30751 18ac 03       		.byte	0x3
 30752 18ad 00000000 		.4byte	h_time.11222
 30753 18b1 1E       		.uleb128 0x1e
 30754 18b2 26000000 		.4byte	.LBB25
 30755 18b6 A4000000 		.4byte	.LBE25-.LBB25
 30756 18ba 26       		.uleb128 0x26
 30757 18bb 6900     		.ascii	"i\000"
 30758 18bd 01       		.byte	0x1
 30759 18be E90A     		.2byte	0xae9
 30760 18c0 73000000 		.4byte	0x73
 30761 18c4 02       		.uleb128 0x2
 30762 18c5 91       		.byte	0x91
 30763 18c6 68       		.sleb128 -24
 30764 18c7 00       		.byte	0
 30765 18c8 00       		.byte	0
 30766 18c9 22       		.uleb128 0x22
 30767 18ca 7A150000 		.4byte	.LASF289
 30768 18ce 01       		.byte	0x1
 30769 18cf 010B     		.2byte	0xb01
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 663


 30770 18d1 00000000 		.4byte	.LFB79
 30771 18d5 74030000 		.4byte	.LFE79-.LFB79
 30772 18d9 01       		.uleb128 0x1
 30773 18da 9C       		.byte	0x9c
 30774 18db 0D190000 		.4byte	0x190d
 30775 18df 25       		.uleb128 0x25
 30776 18e0 6F0E0000 		.4byte	.LASF277
 30777 18e4 01       		.byte	0x1
 30778 18e5 010B     		.2byte	0xb01
 30779 18e7 1F010000 		.4byte	0x11f
 30780 18eb 03       		.uleb128 0x3
 30781 18ec 91       		.byte	0x91
 30782 18ed AC7D     		.sleb128 -340
 30783 18ef 26       		.uleb128 0x26
 30784 18f0 73747200 		.ascii	"str\000"
 30785 18f4 01       		.byte	0x1
 30786 18f5 030B     		.2byte	0xb03
 30787 18f7 0D190000 		.4byte	0x190d
 30788 18fb 03       		.uleb128 0x3
 30789 18fc 91       		.byte	0x91
 30790 18fd B07D     		.sleb128 -336
 30791 18ff 26       		.uleb128 0x26
 30792 1900 6900     		.ascii	"i\000"
 30793 1902 01       		.byte	0x1
 30794 1903 040B     		.2byte	0xb04
 30795 1905 73000000 		.4byte	0x73
 30796 1909 02       		.uleb128 0x2
 30797 190a 91       		.byte	0x91
 30798 190b 5C       		.sleb128 -36
 30799 190c 00       		.byte	0
 30800 190d 09       		.uleb128 0x9
 30801 190e F9000000 		.4byte	0xf9
 30802 1912 1E190000 		.4byte	0x191e
 30803 1916 24       		.uleb128 0x24
 30804 1917 18010000 		.4byte	0x118
 30805 191b 2B01     		.2byte	0x12b
 30806 191d 00       		.byte	0
 30807 191e 22       		.uleb128 0x22
 30808 191f A00F0000 		.4byte	.LASF290
 30809 1923 01       		.byte	0x1
 30810 1924 2C0B     		.2byte	0xb2c
 30811 1926 00000000 		.4byte	.LFB80
 30812 192a 84000000 		.4byte	.LFE80-.LFB80
 30813 192e 01       		.uleb128 0x1
 30814 192f 9C       		.byte	0x9c
 30815 1930 71190000 		.4byte	0x1971
 30816 1934 25       		.uleb128 0x25
 30817 1935 6C060000 		.4byte	.LASF229
 30818 1939 01       		.byte	0x1
 30819 193a 2C0B     		.2byte	0xb2c
 30820 193c 68100000 		.4byte	0x1068
 30821 1940 02       		.uleb128 0x2
 30822 1941 91       		.byte	0x91
 30823 1942 6C       		.sleb128 -20
 30824 1943 25       		.uleb128 0x25
 30825 1944 ED0B0000 		.4byte	.LASF230
 30826 1948 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 664


 30827 1949 2C0B     		.2byte	0xb2c
 30828 194b A3000000 		.4byte	0xa3
 30829 194f 02       		.uleb128 0x2
 30830 1950 91       		.byte	0x91
 30831 1951 6A       		.sleb128 -22
 30832 1952 25       		.uleb128 0x25
 30833 1953 2D100000 		.4byte	.LASF291
 30834 1957 01       		.byte	0x1
 30835 1958 2C0B     		.2byte	0xb2c
 30836 195a 97000000 		.4byte	0x97
 30837 195e 02       		.uleb128 0x2
 30838 195f 91       		.byte	0x91
 30839 1960 69       		.sleb128 -23
 30840 1961 23       		.uleb128 0x23
 30841 1962 72070000 		.4byte	.LASF244
 30842 1966 01       		.byte	0x1
 30843 1967 2E0B     		.2byte	0xb2e
 30844 1969 A3000000 		.4byte	0xa3
 30845 196d 02       		.uleb128 0x2
 30846 196e 91       		.byte	0x91
 30847 196f 76       		.sleb128 -10
 30848 1970 00       		.byte	0
 30849 1971 22       		.uleb128 0x22
 30850 1972 91060000 		.4byte	.LASF292
 30851 1976 01       		.byte	0x1
 30852 1977 480B     		.2byte	0xb48
 30853 1979 00000000 		.4byte	.LFB81
 30854 197d 88000000 		.4byte	.LFE81-.LFB81
 30855 1981 01       		.uleb128 0x1
 30856 1982 9C       		.byte	0x9c
 30857 1983 B5190000 		.4byte	0x19b5
 30858 1987 25       		.uleb128 0x25
 30859 1988 6C060000 		.4byte	.LASF229
 30860 198c 01       		.byte	0x1
 30861 198d 480B     		.2byte	0xb48
 30862 198f 68100000 		.4byte	0x1068
 30863 1993 02       		.uleb128 0x2
 30864 1994 91       		.byte	0x91
 30865 1995 6C       		.sleb128 -20
 30866 1996 25       		.uleb128 0x25
 30867 1997 ED0B0000 		.4byte	.LASF230
 30868 199b 01       		.byte	0x1
 30869 199c 480B     		.2byte	0xb48
 30870 199e A3000000 		.4byte	0xa3
 30871 19a2 02       		.uleb128 0x2
 30872 19a3 91       		.byte	0x91
 30873 19a4 6A       		.sleb128 -22
 30874 19a5 23       		.uleb128 0x23
 30875 19a6 72070000 		.4byte	.LASF244
 30876 19aa 01       		.byte	0x1
 30877 19ab 4A0B     		.2byte	0xb4a
 30878 19ad A3000000 		.4byte	0xa3
 30879 19b1 02       		.uleb128 0x2
 30880 19b2 91       		.byte	0x91
 30881 19b3 76       		.sleb128 -10
 30882 19b4 00       		.byte	0
 30883 19b5 22       		.uleb128 0x22
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 665


 30884 19b6 790C0000 		.4byte	.LASF293
 30885 19ba 01       		.byte	0x1
 30886 19bb 640B     		.2byte	0xb64
 30887 19bd 00000000 		.4byte	.LFB82
 30888 19c1 A0000000 		.4byte	.LFE82-.LFB82
 30889 19c5 01       		.uleb128 0x1
 30890 19c6 9C       		.byte	0x9c
 30891 19c7 081A0000 		.4byte	0x1a08
 30892 19cb 25       		.uleb128 0x25
 30893 19cc 6C060000 		.4byte	.LASF229
 30894 19d0 01       		.byte	0x1
 30895 19d1 640B     		.2byte	0xb64
 30896 19d3 68100000 		.4byte	0x1068
 30897 19d7 02       		.uleb128 0x2
 30898 19d8 91       		.byte	0x91
 30899 19d9 74       		.sleb128 -12
 30900 19da 25       		.uleb128 0x25
 30901 19db ED0B0000 		.4byte	.LASF230
 30902 19df 01       		.byte	0x1
 30903 19e0 640B     		.2byte	0xb64
 30904 19e2 A3000000 		.4byte	0xa3
 30905 19e6 02       		.uleb128 0x2
 30906 19e7 91       		.byte	0x91
 30907 19e8 72       		.sleb128 -14
 30908 19e9 29       		.uleb128 0x29
 30909 19ea 696400   		.ascii	"id\000"
 30910 19ed 01       		.byte	0x1
 30911 19ee 640B     		.2byte	0xb64
 30912 19f0 97000000 		.4byte	0x97
 30913 19f4 02       		.uleb128 0x2
 30914 19f5 91       		.byte	0x91
 30915 19f6 71       		.sleb128 -15
 30916 19f7 26       		.uleb128 0x26
 30917 19f8 6900     		.ascii	"i\000"
 30918 19fa 01       		.byte	0x1
 30919 19fb 660B     		.2byte	0xb66
 30920 19fd A3000000 		.4byte	0xa3
 30921 1a01 05       		.uleb128 0x5
 30922 1a02 03       		.byte	0x3
 30923 1a03 04000000 		.4byte	i.11263
 30924 1a07 00       		.byte	0
 30925 1a08 2A       		.uleb128 0x2a
 30926 1a09 08140000 		.4byte	.LASF299
 30927 1a0d 01       		.byte	0x1
 30928 1a0e 820B     		.2byte	0xb82
 30929 1a10 97000000 		.4byte	0x97
 30930 1a14 00000000 		.4byte	.LFB83
 30931 1a18 3E000000 		.4byte	.LFE83-.LFB83
 30932 1a1c 01       		.uleb128 0x1
 30933 1a1d 9C       		.byte	0x9c
 30934 1a1e 5D1A0000 		.4byte	0x1a5d
 30935 1a22 25       		.uleb128 0x25
 30936 1a23 BC0B0000 		.4byte	.LASF294
 30937 1a27 01       		.byte	0x1
 30938 1a28 820B     		.2byte	0xb82
 30939 1a2a 68100000 		.4byte	0x1068
 30940 1a2e 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 666


 30941 1a2f 91       		.byte	0x91
 30942 1a30 6C       		.sleb128 -20
 30943 1a31 25       		.uleb128 0x25
 30944 1a32 41060000 		.4byte	.LASF295
 30945 1a36 01       		.byte	0x1
 30946 1a37 820B     		.2byte	0xb82
 30947 1a39 97000000 		.4byte	0x97
 30948 1a3d 02       		.uleb128 0x2
 30949 1a3e 91       		.byte	0x91
 30950 1a3f 6B       		.sleb128 -21
 30951 1a40 26       		.uleb128 0x26
 30952 1a41 6900     		.ascii	"i\000"
 30953 1a43 01       		.byte	0x1
 30954 1a44 840B     		.2byte	0xb84
 30955 1a46 97000000 		.4byte	0x97
 30956 1a4a 02       		.uleb128 0x2
 30957 1a4b 91       		.byte	0x91
 30958 1a4c 77       		.sleb128 -9
 30959 1a4d 23       		.uleb128 0x23
 30960 1a4e CF0D0000 		.4byte	.LASF296
 30961 1a52 01       		.byte	0x1
 30962 1a53 850B     		.2byte	0xb85
 30963 1a55 97000000 		.4byte	0x97
 30964 1a59 02       		.uleb128 0x2
 30965 1a5a 91       		.byte	0x91
 30966 1a5b 76       		.sleb128 -10
 30967 1a5c 00       		.byte	0
 30968 1a5d 22       		.uleb128 0x22
 30969 1a5e FB0B0000 		.4byte	.LASF297
 30970 1a62 01       		.byte	0x1
 30971 1a63 920B     		.2byte	0xb92
 30972 1a65 00000000 		.4byte	.LFB84
 30973 1a69 2E000000 		.4byte	.LFE84-.LFB84
 30974 1a6d 01       		.uleb128 0x1
 30975 1a6e 9C       		.byte	0x9c
 30976 1a6f A11A0000 		.4byte	0x1aa1
 30977 1a73 25       		.uleb128 0x25
 30978 1a74 8A050000 		.4byte	.LASF298
 30979 1a78 01       		.byte	0x1
 30980 1a79 920B     		.2byte	0xb92
 30981 1a7b 97000000 		.4byte	0x97
 30982 1a7f 02       		.uleb128 0x2
 30983 1a80 91       		.byte	0x91
 30984 1a81 6F       		.sleb128 -17
 30985 1a82 23       		.uleb128 0x23
 30986 1a83 ED0B0000 		.4byte	.LASF230
 30987 1a87 01       		.byte	0x1
 30988 1a88 930B     		.2byte	0xb93
 30989 1a8a 73000000 		.4byte	0x73
 30990 1a8e 02       		.uleb128 0x2
 30991 1a8f 91       		.byte	0x91
 30992 1a90 74       		.sleb128 -12
 30993 1a91 23       		.uleb128 0x23
 30994 1a92 6C060000 		.4byte	.LASF229
 30995 1a96 01       		.byte	0x1
 30996 1a97 940B     		.2byte	0xb94
 30997 1a99 81080000 		.4byte	0x881
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 667


 30998 1a9d 02       		.uleb128 0x2
 30999 1a9e 91       		.byte	0x91
 31000 1a9f 70       		.sleb128 -16
 31001 1aa0 00       		.byte	0
 31002 1aa1 2B       		.uleb128 0x2b
 31003 1aa2 C2040000 		.4byte	.LASF300
 31004 1aa6 01       		.byte	0x1
 31005 1aa7 A10B     		.2byte	0xba1
 31006 1aa9 97000000 		.4byte	0x97
 31007 1aad 00000000 		.4byte	.LFB85
 31008 1ab1 98000000 		.4byte	.LFE85-.LFB85
 31009 1ab5 01       		.uleb128 0x1
 31010 1ab6 9C       		.byte	0x9c
 31011 1ab7 051B0000 		.4byte	0x1b05
 31012 1abb 25       		.uleb128 0x25
 31013 1abc 34060000 		.4byte	.LASF301
 31014 1ac0 01       		.byte	0x1
 31015 1ac1 A10B     		.2byte	0xba1
 31016 1ac3 73000000 		.4byte	0x73
 31017 1ac7 02       		.uleb128 0x2
 31018 1ac8 91       		.byte	0x91
 31019 1ac9 64       		.sleb128 -28
 31020 1aca 26       		.uleb128 0x26
 31021 1acb 6900     		.ascii	"i\000"
 31022 1acd 01       		.byte	0x1
 31023 1ace A30B     		.2byte	0xba3
 31024 1ad0 73000000 		.4byte	0x73
 31025 1ad4 02       		.uleb128 0x2
 31026 1ad5 91       		.byte	0x91
 31027 1ad6 74       		.sleb128 -12
 31028 1ad7 23       		.uleb128 0x23
 31029 1ad8 21010000 		.4byte	.LASF302
 31030 1adc 01       		.byte	0x1
 31031 1add A40B     		.2byte	0xba4
 31032 1adf 97000000 		.4byte	0x97
 31033 1ae3 02       		.uleb128 0x2
 31034 1ae4 91       		.byte	0x91
 31035 1ae5 6B       		.sleb128 -21
 31036 1ae6 23       		.uleb128 0x23
 31037 1ae7 AD060000 		.4byte	.LASF303
 31038 1aeb 01       		.byte	0x1
 31039 1aec A50B     		.2byte	0xba5
 31040 1aee 73000000 		.4byte	0x73
 31041 1af2 02       		.uleb128 0x2
 31042 1af3 91       		.byte	0x91
 31043 1af4 6C       		.sleb128 -20
 31044 1af5 23       		.uleb128 0x23
 31045 1af6 C8050000 		.4byte	.LASF304
 31046 1afa 01       		.byte	0x1
 31047 1afb A60B     		.2byte	0xba6
 31048 1afd 97000000 		.4byte	0x97
 31049 1b01 02       		.uleb128 0x2
 31050 1b02 91       		.byte	0x91
 31051 1b03 73       		.sleb128 -13
 31052 1b04 00       		.byte	0
 31053 1b05 22       		.uleb128 0x22
 31054 1b06 140F0000 		.4byte	.LASF305
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 668


 31055 1b0a 01       		.byte	0x1
 31056 1b0b CB0B     		.2byte	0xbcb
 31057 1b0d 00000000 		.4byte	.LFB86
 31058 1b11 80000000 		.4byte	.LFE86-.LFB86
 31059 1b15 01       		.uleb128 0x1
 31060 1b16 9C       		.byte	0x9c
 31061 1b17 291B0000 		.4byte	0x1b29
 31062 1b1b 26       		.uleb128 0x26
 31063 1b1c 6900     		.ascii	"i\000"
 31064 1b1e 01       		.byte	0x1
 31065 1b1f CD0B     		.2byte	0xbcd
 31066 1b21 A3000000 		.4byte	0xa3
 31067 1b25 02       		.uleb128 0x2
 31068 1b26 91       		.byte	0x91
 31069 1b27 76       		.sleb128 -10
 31070 1b28 00       		.byte	0
 31071 1b29 2B       		.uleb128 0x2b
 31072 1b2a 5A0E0000 		.4byte	.LASF306
 31073 1b2e 01       		.byte	0x1
 31074 1b2f E40B     		.2byte	0xbe4
 31075 1b31 97000000 		.4byte	0x97
 31076 1b35 00000000 		.4byte	.LFB87
 31077 1b39 5C000000 		.4byte	.LFE87-.LFB87
 31078 1b3d 01       		.uleb128 0x1
 31079 1b3e 9C       		.byte	0x9c
 31080 1b3f 511B0000 		.4byte	0x1b51
 31081 1b43 26       		.uleb128 0x26
 31082 1b44 6900     		.ascii	"i\000"
 31083 1b46 01       		.byte	0x1
 31084 1b47 E50B     		.2byte	0xbe5
 31085 1b49 A3000000 		.4byte	0xa3
 31086 1b4d 02       		.uleb128 0x2
 31087 1b4e 91       		.byte	0x91
 31088 1b4f 76       		.sleb128 -10
 31089 1b50 00       		.byte	0
 31090 1b51 2B       		.uleb128 0x2b
 31091 1b52 B3060000 		.4byte	.LASF307
 31092 1b56 01       		.byte	0x1
 31093 1b57 F70B     		.2byte	0xbf7
 31094 1b59 97000000 		.4byte	0x97
 31095 1b5d 00000000 		.4byte	.LFB88
 31096 1b61 24060000 		.4byte	.LFE88-.LFB88
 31097 1b65 01       		.uleb128 0x1
 31098 1b66 9C       		.byte	0x9c
 31099 1b67 861B0000 		.4byte	0x1b86
 31100 1b6b 26       		.uleb128 0x26
 31101 1b6c 6900     		.ascii	"i\000"
 31102 1b6e 01       		.byte	0x1
 31103 1b6f F90B     		.2byte	0xbf9
 31104 1b71 97000000 		.4byte	0x97
 31105 1b75 02       		.uleb128 0x2
 31106 1b76 91       		.byte	0x91
 31107 1b77 77       		.sleb128 -9
 31108 1b78 26       		.uleb128 0x26
 31109 1b79 6A00     		.ascii	"j\000"
 31110 1b7b 01       		.byte	0x1
 31111 1b7c F90B     		.2byte	0xbf9
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 669


 31112 1b7e 97000000 		.4byte	0x97
 31113 1b82 02       		.uleb128 0x2
 31114 1b83 91       		.byte	0x91
 31115 1b84 76       		.sleb128 -10
 31116 1b85 00       		.byte	0
 31117 1b86 28       		.uleb128 0x28
 31118 1b87 62090000 		.4byte	.LASF308
 31119 1b8b 01       		.byte	0x1
 31120 1b8c 9A0C     		.2byte	0xc9a
 31121 1b8e 00000000 		.4byte	.LFB89
 31122 1b92 38020000 		.4byte	.LFE89-.LFB89
 31123 1b96 01       		.uleb128 0x1
 31124 1b97 9C       		.byte	0x9c
 31125 1b98 C31B0000 		.4byte	0x1bc3
 31126 1b9c 23       		.uleb128 0x23
 31127 1b9d 500E0000 		.4byte	.LASF239
 31128 1ba1 01       		.byte	0x1
 31129 1ba2 9C0C     		.2byte	0xc9c
 31130 1ba4 97000000 		.4byte	0x97
 31131 1ba8 02       		.uleb128 0x2
 31132 1ba9 91       		.byte	0x91
 31133 1baa 73       		.sleb128 -13
 31134 1bab 1E       		.uleb128 0x1e
 31135 1bac FA000000 		.4byte	.LBB26
 31136 1bb0 6A000000 		.4byte	.LBE26-.LBB26
 31137 1bb4 26       		.uleb128 0x26
 31138 1bb5 6900     		.ascii	"i\000"
 31139 1bb7 01       		.byte	0x1
 31140 1bb8 AD0C     		.2byte	0xcad
 31141 1bba 73000000 		.4byte	0x73
 31142 1bbe 02       		.uleb128 0x2
 31143 1bbf 91       		.byte	0x91
 31144 1bc0 74       		.sleb128 -12
 31145 1bc1 00       		.byte	0
 31146 1bc2 00       		.byte	0
 31147 1bc3 2C       		.uleb128 0x2c
 31148 1bc4 DE0B0000 		.4byte	.LASF309
 31149 1bc8 01       		.byte	0x1
 31150 1bc9 CC0C     		.2byte	0xccc
 31151 1bcb 00000000 		.4byte	.LFB90
 31152 1bcf 28000000 		.4byte	.LFE90-.LFB90
 31153 1bd3 01       		.uleb128 0x1
 31154 1bd4 9C       		.byte	0x9c
 31155 1bd5 2C       		.uleb128 0x2c
 31156 1bd6 A5110000 		.4byte	.LASF310
 31157 1bda 01       		.byte	0x1
 31158 1bdb D80C     		.2byte	0xcd8
 31159 1bdd 00000000 		.4byte	.LFB91
 31160 1be1 78000000 		.4byte	.LFE91-.LFB91
 31161 1be5 01       		.uleb128 0x1
 31162 1be6 9C       		.byte	0x9c
 31163 1be7 2C       		.uleb128 0x2c
 31164 1be8 7B040000 		.4byte	.LASF311
 31165 1bec 01       		.byte	0x1
 31166 1bed EE0C     		.2byte	0xcee
 31167 1bef 00000000 		.4byte	.LFB92
 31168 1bf3 B0000000 		.4byte	.LFE92-.LFB92
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 670


 31169 1bf7 01       		.uleb128 0x1
 31170 1bf8 9C       		.byte	0x9c
 31171 1bf9 27       		.uleb128 0x27
 31172 1bfa E1060000 		.4byte	.LASF313
 31173 1bfe 01       		.byte	0x1
 31174 1bff 0F0D     		.2byte	0xd0f
 31175 1c01 00000000 		.4byte	.LFB93
 31176 1c05 28010000 		.4byte	.LFE93-.LFB93
 31177 1c09 01       		.uleb128 0x1
 31178 1c0a 9C       		.byte	0x9c
 31179 1c0b 3D1C0000 		.4byte	0x1c3d
 31180 1c0f 23       		.uleb128 0x23
 31181 1c10 72070000 		.4byte	.LASF244
 31182 1c14 01       		.byte	0x1
 31183 1c15 110D     		.2byte	0xd11
 31184 1c17 97000000 		.4byte	0x97
 31185 1c1b 02       		.uleb128 0x2
 31186 1c1c 91       		.byte	0x91
 31187 1c1d 6F       		.sleb128 -17
 31188 1c1e 23       		.uleb128 0x23
 31189 1c1f 5F120000 		.4byte	.LASF235
 31190 1c23 01       		.byte	0x1
 31191 1c24 120D     		.2byte	0xd12
 31192 1c26 C7000000 		.4byte	0xc7
 31193 1c2a 02       		.uleb128 0x2
 31194 1c2b 91       		.byte	0x91
 31195 1c2c 6C       		.sleb128 -20
 31196 1c2d 23       		.uleb128 0x23
 31197 1c2e 6C060000 		.4byte	.LASF229
 31198 1c32 01       		.byte	0x1
 31199 1c33 150D     		.2byte	0xd15
 31200 1c35 12080000 		.4byte	0x812
 31201 1c39 02       		.uleb128 0x2
 31202 1c3a 91       		.byte	0x91
 31203 1c3b 64       		.sleb128 -28
 31204 1c3c 00       		.byte	0
 31205 1c3d 27       		.uleb128 0x27
 31206 1c3e 010F0000 		.4byte	.LASF314
 31207 1c42 01       		.byte	0x1
 31208 1c43 300D     		.2byte	0xd30
 31209 1c45 00000000 		.4byte	.LFB94
 31210 1c49 B8000000 		.4byte	.LFE94-.LFB94
 31211 1c4d 01       		.uleb128 0x1
 31212 1c4e 9C       		.byte	0x9c
 31213 1c4f 811C0000 		.4byte	0x1c81
 31214 1c53 23       		.uleb128 0x23
 31215 1c54 72070000 		.4byte	.LASF244
 31216 1c58 01       		.byte	0x1
 31217 1c59 320D     		.2byte	0xd32
 31218 1c5b 97000000 		.4byte	0x97
 31219 1c5f 02       		.uleb128 0x2
 31220 1c60 91       		.byte	0x91
 31221 1c61 6F       		.sleb128 -17
 31222 1c62 23       		.uleb128 0x23
 31223 1c63 5F120000 		.4byte	.LASF235
 31224 1c67 01       		.byte	0x1
 31225 1c68 330D     		.2byte	0xd33
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 671


 31226 1c6a C7000000 		.4byte	0xc7
 31227 1c6e 02       		.uleb128 0x2
 31228 1c6f 91       		.byte	0x91
 31229 1c70 6C       		.sleb128 -20
 31230 1c71 23       		.uleb128 0x23
 31231 1c72 6C060000 		.4byte	.LASF229
 31232 1c76 01       		.byte	0x1
 31233 1c77 370D     		.2byte	0xd37
 31234 1c79 12080000 		.4byte	0x812
 31235 1c7d 02       		.uleb128 0x2
 31236 1c7e 91       		.byte	0x91
 31237 1c7f 64       		.sleb128 -28
 31238 1c80 00       		.byte	0
 31239 1c81 27       		.uleb128 0x27
 31240 1c82 4F020000 		.4byte	.LASF315
 31241 1c86 01       		.byte	0x1
 31242 1c87 490D     		.2byte	0xd49
 31243 1c89 00000000 		.4byte	.LFB95
 31244 1c8d B8000000 		.4byte	.LFE95-.LFB95
 31245 1c91 01       		.uleb128 0x1
 31246 1c92 9C       		.byte	0x9c
 31247 1c93 C51C0000 		.4byte	0x1cc5
 31248 1c97 23       		.uleb128 0x23
 31249 1c98 72070000 		.4byte	.LASF244
 31250 1c9c 01       		.byte	0x1
 31251 1c9d 4B0D     		.2byte	0xd4b
 31252 1c9f 97000000 		.4byte	0x97
 31253 1ca3 02       		.uleb128 0x2
 31254 1ca4 91       		.byte	0x91
 31255 1ca5 6F       		.sleb128 -17
 31256 1ca6 23       		.uleb128 0x23
 31257 1ca7 5F120000 		.4byte	.LASF235
 31258 1cab 01       		.byte	0x1
 31259 1cac 4C0D     		.2byte	0xd4c
 31260 1cae C7000000 		.4byte	0xc7
 31261 1cb2 02       		.uleb128 0x2
 31262 1cb3 91       		.byte	0x91
 31263 1cb4 6C       		.sleb128 -20
 31264 1cb5 23       		.uleb128 0x23
 31265 1cb6 6C060000 		.4byte	.LASF229
 31266 1cba 01       		.byte	0x1
 31267 1cbb 500D     		.2byte	0xd50
 31268 1cbd 12080000 		.4byte	0x812
 31269 1cc1 02       		.uleb128 0x2
 31270 1cc2 91       		.byte	0x91
 31271 1cc3 64       		.sleb128 -28
 31272 1cc4 00       		.byte	0
 31273 1cc5 27       		.uleb128 0x27
 31274 1cc6 630A0000 		.4byte	.LASF316
 31275 1cca 01       		.byte	0x1
 31276 1ccb 620D     		.2byte	0xd62
 31277 1ccd 00000000 		.4byte	.LFB96
 31278 1cd1 5C000000 		.4byte	.LFE96-.LFB96
 31279 1cd5 01       		.uleb128 0x1
 31280 1cd6 9C       		.byte	0x9c
 31281 1cd7 FA1C0000 		.4byte	0x1cfa
 31282 1cdb 23       		.uleb128 0x23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 672


 31283 1cdc 5F120000 		.4byte	.LASF235
 31284 1ce0 01       		.byte	0x1
 31285 1ce1 640D     		.2byte	0xd64
 31286 1ce3 C7000000 		.4byte	0xc7
 31287 1ce7 02       		.uleb128 0x2
 31288 1ce8 91       		.byte	0x91
 31289 1ce9 76       		.sleb128 -10
 31290 1cea 23       		.uleb128 0x23
 31291 1ceb 6C060000 		.4byte	.LASF229
 31292 1cef 01       		.byte	0x1
 31293 1cf0 680D     		.2byte	0xd68
 31294 1cf2 45090000 		.4byte	0x945
 31295 1cf6 02       		.uleb128 0x2
 31296 1cf7 91       		.byte	0x91
 31297 1cf8 70       		.sleb128 -16
 31298 1cf9 00       		.byte	0
 31299 1cfa 2D       		.uleb128 0x2d
 31300 1cfb 430C0000 		.4byte	.LASF317
 31301 1cff 01       		.byte	0x1
 31302 1d00 7A0D     		.2byte	0xd7a
 31303 1d02 00000000 		.4byte	.LFB97
 31304 1d06 44020000 		.4byte	.LFE97-.LFB97
 31305 1d0a 01       		.uleb128 0x1
 31306 1d0b 9C       		.byte	0x9c
 31307 1d0c 641D0000 		.4byte	0x1d64
 31308 1d10 23       		.uleb128 0x23
 31309 1d11 5F120000 		.4byte	.LASF235
 31310 1d15 01       		.byte	0x1
 31311 1d16 7D0D     		.2byte	0xd7d
 31312 1d18 641D0000 		.4byte	0x1d64
 31313 1d1c 02       		.uleb128 0x2
 31314 1d1d 91       		.byte	0x91
 31315 1d1e 70       		.sleb128 -16
 31316 1d1f 23       		.uleb128 0x23
 31317 1d20 34070000 		.4byte	.LASF318
 31318 1d24 01       		.byte	0x1
 31319 1d25 7E0D     		.2byte	0xd7e
 31320 1d27 641D0000 		.4byte	0x1d64
 31321 1d2b 05       		.uleb128 0x5
 31322 1d2c 03       		.byte	0x3
 31323 1d2d 08000000 		.4byte	last_aux_int16.11394
 31324 1d31 2E       		.uleb128 0x2e
 31325 1d32 2E000000 		.4byte	.LBB27
 31326 1d36 50000000 		.4byte	.LBE27-.LBB27
 31327 1d3a 4C1D0000 		.4byte	0x1d4c
 31328 1d3e 26       		.uleb128 0x26
 31329 1d3f 6900     		.ascii	"i\000"
 31330 1d41 01       		.byte	0x1
 31331 1d42 850D     		.2byte	0xd85
 31332 1d44 97000000 		.4byte	0x97
 31333 1d48 02       		.uleb128 0x2
 31334 1d49 91       		.byte	0x91
 31335 1d4a 77       		.sleb128 -9
 31336 1d4b 00       		.byte	0
 31337 1d4c 1E       		.uleb128 0x1e
 31338 1d4d 88000000 		.4byte	.LBB28
 31339 1d51 98010000 		.4byte	.LBE28-.LBB28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 673


 31340 1d55 26       		.uleb128 0x26
 31341 1d56 6900     		.ascii	"i\000"
 31342 1d58 01       		.byte	0x1
 31343 1d59 8F0D     		.2byte	0xd8f
 31344 1d5b 97000000 		.4byte	0x97
 31345 1d5f 02       		.uleb128 0x2
 31346 1d60 91       		.byte	0x91
 31347 1d61 76       		.sleb128 -10
 31348 1d62 00       		.byte	0
 31349 1d63 00       		.byte	0
 31350 1d64 09       		.uleb128 0x9
 31351 1d65 C7000000 		.4byte	0xc7
 31352 1d69 741D0000 		.4byte	0x1d74
 31353 1d6d 0A       		.uleb128 0xa
 31354 1d6e 18010000 		.4byte	0x118
 31355 1d72 01       		.byte	0x1
 31356 1d73 00       		.byte	0
 31357 1d74 27       		.uleb128 0x27
 31358 1d75 D9140000 		.4byte	.LASF319
 31359 1d79 01       		.byte	0x1
 31360 1d7a AA0D     		.2byte	0xdaa
 31361 1d7c 00000000 		.4byte	.LFB98
 31362 1d80 BC000000 		.4byte	.LFE98-.LFB98
 31363 1d84 01       		.uleb128 0x1
 31364 1d85 9C       		.byte	0x9c
 31365 1d86 9A1D0000 		.4byte	0x1d9a
 31366 1d8a 26       		.uleb128 0x26
 31367 1d8b 61757800 		.ascii	"aux\000"
 31368 1d8f 01       		.byte	0x1
 31369 1d90 AD0D     		.2byte	0xdad
 31370 1d92 97000000 		.4byte	0x97
 31371 1d96 02       		.uleb128 0x2
 31372 1d97 91       		.byte	0x91
 31373 1d98 77       		.sleb128 -9
 31374 1d99 00       		.byte	0
 31375 1d9a 27       		.uleb128 0x27
 31376 1d9b A10C0000 		.4byte	.LASF320
 31377 1d9f 01       		.byte	0x1
 31378 1da0 CF0D     		.2byte	0xdcf
 31379 1da2 00000000 		.4byte	.LFB99
 31380 1da6 5C000000 		.4byte	.LFE99-.LFB99
 31381 1daa 01       		.uleb128 0x1
 31382 1dab 9C       		.byte	0x9c
 31383 1dac C01D0000 		.4byte	0x1dc0
 31384 1db0 23       		.uleb128 0x23
 31385 1db1 6C060000 		.4byte	.LASF229
 31386 1db5 01       		.byte	0x1
 31387 1db6 D10D     		.2byte	0xdd1
 31388 1db8 C5050000 		.4byte	0x5c5
 31389 1dbc 02       		.uleb128 0x2
 31390 1dbd 91       		.byte	0x91
 31391 1dbe 74       		.sleb128 -12
 31392 1dbf 00       		.byte	0
 31393 1dc0 27       		.uleb128 0x27
 31394 1dc1 66100000 		.4byte	.LASF321
 31395 1dc5 01       		.byte	0x1
 31396 1dc6 E60D     		.2byte	0xde6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 674


 31397 1dc8 00000000 		.4byte	.LFB100
 31398 1dcc 38010000 		.4byte	.LFE100-.LFB100
 31399 1dd0 01       		.uleb128 0x1
 31400 1dd1 9C       		.byte	0x9c
 31401 1dd2 041E0000 		.4byte	0x1e04
 31402 1dd6 23       		.uleb128 0x23
 31403 1dd7 72070000 		.4byte	.LASF244
 31404 1ddb 01       		.byte	0x1
 31405 1ddc E80D     		.2byte	0xde8
 31406 1dde 97000000 		.4byte	0x97
 31407 1de2 02       		.uleb128 0x2
 31408 1de3 91       		.byte	0x91
 31409 1de4 6F       		.sleb128 -17
 31410 1de5 23       		.uleb128 0x23
 31411 1de6 5F120000 		.4byte	.LASF235
 31412 1dea 01       		.byte	0x1
 31413 1deb E90D     		.2byte	0xde9
 31414 1ded C7000000 		.4byte	0xc7
 31415 1df1 02       		.uleb128 0x2
 31416 1df2 91       		.byte	0x91
 31417 1df3 6C       		.sleb128 -20
 31418 1df4 23       		.uleb128 0x23
 31419 1df5 6C060000 		.4byte	.LASF229
 31420 1df9 01       		.byte	0x1
 31421 1dfa ED0D     		.2byte	0xded
 31422 1dfc 55090000 		.4byte	0x955
 31423 1e00 02       		.uleb128 0x2
 31424 1e01 91       		.byte	0x91
 31425 1e02 60       		.sleb128 -32
 31426 1e03 00       		.byte	0
 31427 1e04 27       		.uleb128 0x27
 31428 1e05 CD0A0000 		.4byte	.LASF322
 31429 1e09 01       		.byte	0x1
 31430 1e0a 0D0E     		.2byte	0xe0d
 31431 1e0c 00000000 		.4byte	.LFB101
 31432 1e10 EC000000 		.4byte	.LFE101-.LFB101
 31433 1e14 01       		.uleb128 0x1
 31434 1e15 9C       		.byte	0x9c
 31435 1e16 391E0000 		.4byte	0x1e39
 31436 1e1a 23       		.uleb128 0x23
 31437 1e1b 6C060000 		.4byte	.LASF229
 31438 1e1f 01       		.byte	0x1
 31439 1e20 110E     		.2byte	0xe11
 31440 1e22 45090000 		.4byte	0x945
 31441 1e26 02       		.uleb128 0x2
 31442 1e27 91       		.byte	0x91
 31443 1e28 68       		.sleb128 -24
 31444 1e29 23       		.uleb128 0x23
 31445 1e2a 5F120000 		.4byte	.LASF235
 31446 1e2e 01       		.byte	0x1
 31447 1e2f 120E     		.2byte	0xe12
 31448 1e31 C7000000 		.4byte	0xc7
 31449 1e35 02       		.uleb128 0x2
 31450 1e36 91       		.byte	0x91
 31451 1e37 66       		.sleb128 -26
 31452 1e38 00       		.byte	0
 31453 1e39 27       		.uleb128 0x27
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 675


 31454 1e3a E6070000 		.4byte	.LASF323
 31455 1e3e 01       		.byte	0x1
 31456 1e3f 330E     		.2byte	0xe33
 31457 1e41 00000000 		.4byte	.LFB102
 31458 1e45 64000000 		.4byte	.LFE102-.LFB102
 31459 1e49 01       		.uleb128 0x1
 31460 1e4a 9C       		.byte	0x9c
 31461 1e4b 6E1E0000 		.4byte	0x1e6e
 31462 1e4f 23       		.uleb128 0x23
 31463 1e50 6C060000 		.4byte	.LASF229
 31464 1e54 01       		.byte	0x1
 31465 1e55 370E     		.2byte	0xe37
 31466 1e57 C20A0000 		.4byte	0xac2
 31467 1e5b 02       		.uleb128 0x2
 31468 1e5c 91       		.byte	0x91
 31469 1e5d 74       		.sleb128 -12
 31470 1e5e 23       		.uleb128 0x23
 31471 1e5f 5F120000 		.4byte	.LASF235
 31472 1e63 01       		.byte	0x1
 31473 1e64 380E     		.2byte	0xe38
 31474 1e66 C7000000 		.4byte	0xc7
 31475 1e6a 02       		.uleb128 0x2
 31476 1e6b 91       		.byte	0x91
 31477 1e6c 72       		.sleb128 -14
 31478 1e6d 00       		.byte	0
 31479 1e6e 2F       		.uleb128 0x2f
 31480 1e6f D0070000 		.4byte	.LASF324
 31481 1e73 01       		.byte	0x1
 31482 1e74 4D0E     		.2byte	0xe4d
 31483 1e76 C7000000 		.4byte	0xc7
 31484 1e7a 00000000 		.4byte	.LFB103
 31485 1e7e A8000000 		.4byte	.LFE103-.LFB103
 31486 1e82 01       		.uleb128 0x1
 31487 1e83 9C       		.byte	0x9c
 31488 1e84 E31E0000 		.4byte	0x1ee3
 31489 1e88 23       		.uleb128 0x23
 31490 1e89 6C060000 		.4byte	.LASF229
 31491 1e8d 01       		.byte	0x1
 31492 1e8e 4F0E     		.2byte	0xe4f
 31493 1e90 E31E0000 		.4byte	0x1ee3
 31494 1e94 02       		.uleb128 0x2
 31495 1e95 91       		.byte	0x91
 31496 1e96 5C       		.sleb128 -36
 31497 1e97 23       		.uleb128 0x23
 31498 1e98 ED0B0000 		.4byte	.LASF230
 31499 1e9c 01       		.byte	0x1
 31500 1e9d 500E     		.2byte	0xe50
 31501 1e9f 97000000 		.4byte	0x97
 31502 1ea3 02       		.uleb128 0x2
 31503 1ea4 91       		.byte	0x91
 31504 1ea5 74       		.sleb128 -12
 31505 1ea6 23       		.uleb128 0x23
 31506 1ea7 F30F0000 		.4byte	.LASF325
 31507 1eab 01       		.byte	0x1
 31508 1eac 510E     		.2byte	0xe51
 31509 1eae C7000000 		.4byte	0xc7
 31510 1eb2 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 676


 31511 1eb3 91       		.byte	0x91
 31512 1eb4 76       		.sleb128 -10
 31513 1eb5 23       		.uleb128 0x23
 31514 1eb6 1D030000 		.4byte	.LASF326
 31515 1eba 01       		.byte	0x1
 31516 1ebb 520E     		.2byte	0xe52
 31517 1ebd AF000000 		.4byte	0xaf
 31518 1ec1 02       		.uleb128 0x2
 31519 1ec2 91       		.byte	0x91
 31520 1ec3 70       		.sleb128 -16
 31521 1ec4 23       		.uleb128 0x23
 31522 1ec5 D0130000 		.4byte	.LASF327
 31523 1ec9 01       		.byte	0x1
 31524 1eca 520E     		.2byte	0xe52
 31525 1ecc AF000000 		.4byte	0xaf
 31526 1ed0 02       		.uleb128 0x2
 31527 1ed1 91       		.byte	0x91
 31528 1ed2 6C       		.sleb128 -20
 31529 1ed3 23       		.uleb128 0x23
 31530 1ed4 E6040000 		.4byte	.LASF328
 31531 1ed8 01       		.byte	0x1
 31532 1ed9 530E     		.2byte	0xe53
 31533 1edb 97000000 		.4byte	0x97
 31534 1edf 02       		.uleb128 0x2
 31535 1ee0 91       		.byte	0x91
 31536 1ee1 75       		.sleb128 -11
 31537 1ee2 00       		.byte	0
 31538 1ee3 09       		.uleb128 0x9
 31539 1ee4 97000000 		.4byte	0x97
 31540 1ee8 F31E0000 		.4byte	0x1ef3
 31541 1eec 0A       		.uleb128 0xa
 31542 1eed 18010000 		.4byte	0x118
 31543 1ef1 0F       		.byte	0xf
 31544 1ef2 00       		.byte	0
 31545 1ef3 30       		.uleb128 0x30
 31546 1ef4 34010000 		.4byte	.LASF357
 31547 1ef8 01       		.byte	0x1
 31548 1ef9 700E     		.2byte	0xe70
 31549 1efb 00000000 		.4byte	.LFB104
 31550 1eff 34000000 		.4byte	.LFE104-.LFB104
 31551 1f03 01       		.uleb128 0x1
 31552 1f04 9C       		.byte	0x9c
 31553 1f05 27       		.uleb128 0x27
 31554 1f06 4E040000 		.4byte	.LASF329
 31555 1f0a 01       		.byte	0x1
 31556 1f0b 7E0E     		.2byte	0xe7e
 31557 1f0d 00000000 		.4byte	.LFB105
 31558 1f11 20000000 		.4byte	.LFE105-.LFB105
 31559 1f15 01       		.uleb128 0x1
 31560 1f16 9C       		.byte	0x9c
 31561 1f17 2B1F0000 		.4byte	0x1f2b
 31562 1f1b 23       		.uleb128 0x23
 31563 1f1c 6C060000 		.4byte	.LASF229
 31564 1f20 01       		.byte	0x1
 31565 1f21 800E     		.2byte	0xe80
 31566 1f23 81080000 		.4byte	0x881
 31567 1f27 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 677


 31568 1f28 91       		.byte	0x91
 31569 1f29 74       		.sleb128 -12
 31570 1f2a 00       		.byte	0
 31571 1f2b 27       		.uleb128 0x27
 31572 1f2c AC010000 		.4byte	.LASF330
 31573 1f30 01       		.byte	0x1
 31574 1f31 8C0E     		.2byte	0xe8c
 31575 1f33 00000000 		.4byte	.LFB106
 31576 1f37 A0000000 		.4byte	.LFE106-.LFB106
 31577 1f3b 01       		.uleb128 0x1
 31578 1f3c 9C       		.byte	0x9c
 31579 1f3d 601F0000 		.4byte	0x1f60
 31580 1f41 23       		.uleb128 0x23
 31581 1f42 6C060000 		.4byte	.LASF229
 31582 1f46 01       		.byte	0x1
 31583 1f47 900E     		.2byte	0xe90
 31584 1f49 45090000 		.4byte	0x945
 31585 1f4d 02       		.uleb128 0x2
 31586 1f4e 91       		.byte	0x91
 31587 1f4f 70       		.sleb128 -16
 31588 1f50 23       		.uleb128 0x23
 31589 1f51 5F120000 		.4byte	.LASF235
 31590 1f55 01       		.byte	0x1
 31591 1f56 910E     		.2byte	0xe91
 31592 1f58 C7000000 		.4byte	0xc7
 31593 1f5c 02       		.uleb128 0x2
 31594 1f5d 91       		.byte	0x91
 31595 1f5e 6E       		.sleb128 -18
 31596 1f5f 00       		.byte	0
 31597 1f60 27       		.uleb128 0x27
 31598 1f61 2F110000 		.4byte	.LASF331
 31599 1f65 01       		.byte	0x1
 31600 1f66 A50E     		.2byte	0xea5
 31601 1f68 00000000 		.4byte	.LFB107
 31602 1f6c BC010000 		.4byte	.LFE107-.LFB107
 31603 1f70 01       		.uleb128 0x1
 31604 1f71 9C       		.byte	0x9c
 31605 1f72 C21F0000 		.4byte	0x1fc2
 31606 1f76 23       		.uleb128 0x23
 31607 1f77 5F0C0000 		.4byte	.LASF332
 31608 1f7b 01       		.byte	0x1
 31609 1f7c A80E     		.2byte	0xea8
 31610 1f7e AF000000 		.4byte	0xaf
 31611 1f82 02       		.uleb128 0x2
 31612 1f83 91       		.byte	0x91
 31613 1f84 70       		.sleb128 -16
 31614 1f85 23       		.uleb128 0x23
 31615 1f86 6E0F0000 		.4byte	.LASF333
 31616 1f8a 01       		.byte	0x1
 31617 1f8b A90E     		.2byte	0xea9
 31618 1f8d EB000000 		.4byte	0xeb
 31619 1f91 02       		.uleb128 0x2
 31620 1f92 91       		.byte	0x91
 31621 1f93 6C       		.sleb128 -20
 31622 1f94 23       		.uleb128 0x23
 31623 1f95 ED0B0000 		.4byte	.LASF230
 31624 1f99 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 678


 31625 1f9a AA0E     		.2byte	0xeaa
 31626 1f9c 97000000 		.4byte	0x97
 31627 1fa0 02       		.uleb128 0x2
 31628 1fa1 91       		.byte	0x91
 31629 1fa2 77       		.sleb128 -9
 31630 1fa3 23       		.uleb128 0x23
 31631 1fa4 6C060000 		.4byte	.LASF229
 31632 1fa8 01       		.byte	0x1
 31633 1fa9 AB0E     		.2byte	0xeab
 31634 1fab 81080000 		.4byte	0x881
 31635 1faf 02       		.uleb128 0x2
 31636 1fb0 91       		.byte	0x91
 31637 1fb1 68       		.sleb128 -24
 31638 1fb2 23       		.uleb128 0x23
 31639 1fb3 2D100000 		.4byte	.LASF291
 31640 1fb7 01       		.byte	0x1
 31641 1fb8 AC0E     		.2byte	0xeac
 31642 1fba 97000000 		.4byte	0x97
 31643 1fbe 02       		.uleb128 0x2
 31644 1fbf 91       		.byte	0x91
 31645 1fc0 6B       		.sleb128 -21
 31646 1fc1 00       		.byte	0
 31647 1fc2 27       		.uleb128 0x27
 31648 1fc3 65020000 		.4byte	.LASF334
 31649 1fc7 01       		.byte	0x1
 31650 1fc8 E60E     		.2byte	0xee6
 31651 1fca 00000000 		.4byte	.LFB108
 31652 1fce 60000000 		.4byte	.LFE108-.LFB108
 31653 1fd2 01       		.uleb128 0x1
 31654 1fd3 9C       		.byte	0x9c
 31655 1fd4 F71F0000 		.4byte	0x1ff7
 31656 1fd8 23       		.uleb128 0x23
 31657 1fd9 6C060000 		.4byte	.LASF229
 31658 1fdd 01       		.byte	0x1
 31659 1fde E80E     		.2byte	0xee8
 31660 1fe0 45090000 		.4byte	0x945
 31661 1fe4 02       		.uleb128 0x2
 31662 1fe5 91       		.byte	0x91
 31663 1fe6 70       		.sleb128 -16
 31664 1fe7 23       		.uleb128 0x23
 31665 1fe8 5F120000 		.4byte	.LASF235
 31666 1fec 01       		.byte	0x1
 31667 1fed E90E     		.2byte	0xee9
 31668 1fef C7000000 		.4byte	0xc7
 31669 1ff3 02       		.uleb128 0x2
 31670 1ff4 91       		.byte	0x91
 31671 1ff5 6E       		.sleb128 -18
 31672 1ff6 00       		.byte	0
 31673 1ff7 27       		.uleb128 0x27
 31674 1ff8 E8010000 		.4byte	.LASF335
 31675 1ffc 01       		.byte	0x1
 31676 1ffd FC0E     		.2byte	0xefc
 31677 1fff 00000000 		.4byte	.LFB109
 31678 2003 98050000 		.4byte	.LFE109-.LFB109
 31679 2007 01       		.uleb128 0x1
 31680 2008 9C       		.byte	0x9c
 31681 2009 84200000 		.4byte	0x2084
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 679


 31682 200d 23       		.uleb128 0x23
 31683 200e 14140000 		.4byte	.LASF336
 31684 2012 01       		.byte	0x1
 31685 2013 FF0E     		.2byte	0xeff
 31686 2015 97000000 		.4byte	0x97
 31687 2019 02       		.uleb128 0x2
 31688 201a 91       		.byte	0x91
 31689 201b 6F       		.sleb128 -17
 31690 201c 26       		.uleb128 0x26
 31691 201d 6300     		.ascii	"c\000"
 31692 201f 01       		.byte	0x1
 31693 2020 000F     		.2byte	0xf00
 31694 2022 A3000000 		.4byte	0xa3
 31695 2026 02       		.uleb128 0x2
 31696 2027 91       		.byte	0x91
 31697 2028 6C       		.sleb128 -20
 31698 2029 26       		.uleb128 0x26
 31699 202a 6B00     		.ascii	"k\000"
 31700 202c 01       		.byte	0x1
 31701 202d 010F     		.2byte	0xf01
 31702 202f 97000000 		.4byte	0x97
 31703 2033 02       		.uleb128 0x2
 31704 2034 91       		.byte	0x91
 31705 2035 6B       		.sleb128 -21
 31706 2036 23       		.uleb128 0x23
 31707 2037 8F000000 		.4byte	.LASF337
 31708 203b 01       		.byte	0x1
 31709 203c 020F     		.2byte	0xf02
 31710 203e A3000000 		.4byte	0xa3
 31711 2042 02       		.uleb128 0x2
 31712 2043 91       		.byte	0x91
 31713 2044 68       		.sleb128 -24
 31714 2045 23       		.uleb128 0x23
 31715 2046 5F120000 		.4byte	.LASF235
 31716 204a 01       		.byte	0x1
 31717 204b 030F     		.2byte	0xf03
 31718 204d C7000000 		.4byte	0xc7
 31719 2051 02       		.uleb128 0x2
 31720 2052 91       		.byte	0x91
 31721 2053 66       		.sleb128 -26
 31722 2054 23       		.uleb128 0x23
 31723 2055 9B130000 		.4byte	.LASF234
 31724 2059 01       		.byte	0x1
 31725 205a 040F     		.2byte	0xf04
 31726 205c EB000000 		.4byte	0xeb
 31727 2060 02       		.uleb128 0x2
 31728 2061 91       		.byte	0x91
 31729 2062 60       		.sleb128 -32
 31730 2063 23       		.uleb128 0x23
 31731 2064 6C060000 		.4byte	.LASF229
 31732 2068 01       		.byte	0x1
 31733 2069 070F     		.2byte	0xf07
 31734 206b 84200000 		.4byte	0x2084
 31735 206f 03       		.uleb128 0x3
 31736 2070 91       		.byte	0x91
 31737 2071 807D     		.sleb128 -384
 31738 2073 23       		.uleb128 0x23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 680


 31739 2074 96090000 		.4byte	.LASF338
 31740 2078 01       		.byte	0x1
 31741 2079 080F     		.2byte	0xf08
 31742 207b D9120000 		.4byte	0x12d9
 31743 207f 03       		.uleb128 0x3
 31744 2080 91       		.byte	0x91
 31745 2081 E07C     		.sleb128 -416
 31746 2083 00       		.byte	0
 31747 2084 09       		.uleb128 0x9
 31748 2085 97000000 		.4byte	0x97
 31749 2089 95200000 		.4byte	0x2095
 31750 208d 24       		.uleb128 0x24
 31751 208e 18010000 		.4byte	0x118
 31752 2092 5D01     		.2byte	0x15d
 31753 2094 00       		.byte	0
 31754 2095 27       		.uleb128 0x27
 31755 2096 76130000 		.4byte	.LASF339
 31756 209a 01       		.byte	0x1
 31757 209b 6B0F     		.2byte	0xf6b
 31758 209d 00000000 		.4byte	.LFB110
 31759 20a1 8C000000 		.4byte	.LFE110-.LFB110
 31760 20a5 01       		.uleb128 0x1
 31761 20a6 9C       		.byte	0x9c
 31762 20a7 D5200000 		.4byte	0x20d5
 31763 20ab 23       		.uleb128 0x23
 31764 20ac 6C060000 		.4byte	.LASF229
 31765 20b0 01       		.byte	0x1
 31766 20b1 6E0F     		.2byte	0xf6e
 31767 20b3 700A0000 		.4byte	0xa70
 31768 20b7 02       		.uleb128 0x2
 31769 20b8 91       		.byte	0x91
 31770 20b9 60       		.sleb128 -32
 31771 20ba 26       		.uleb128 0x26
 31772 20bb 6900     		.ascii	"i\000"
 31773 20bd 01       		.byte	0x1
 31774 20be 6F0F     		.2byte	0xf6f
 31775 20c0 97000000 		.4byte	0x97
 31776 20c4 02       		.uleb128 0x2
 31777 20c5 91       		.byte	0x91
 31778 20c6 6F       		.sleb128 -17
 31779 20c7 26       		.uleb128 0x26
 31780 20c8 6A00     		.ascii	"j\000"
 31781 20ca 01       		.byte	0x1
 31782 20cb 6F0F     		.2byte	0xf6f
 31783 20cd 97000000 		.4byte	0x97
 31784 20d1 02       		.uleb128 0x2
 31785 20d2 91       		.byte	0x91
 31786 20d3 6E       		.sleb128 -18
 31787 20d4 00       		.byte	0
 31788 20d5 27       		.uleb128 0x27
 31789 20d6 69110000 		.4byte	.LASF340
 31790 20da 01       		.byte	0x1
 31791 20db 840F     		.2byte	0xf84
 31792 20dd 00000000 		.4byte	.LFB111
 31793 20e1 EC000000 		.4byte	.LFE111-.LFB111
 31794 20e5 01       		.uleb128 0x1
 31795 20e6 9C       		.byte	0x9c
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 681


 31796 20e7 33210000 		.4byte	0x2133
 31797 20eb 23       		.uleb128 0x23
 31798 20ec 6C060000 		.4byte	.LASF229
 31799 20f0 01       		.byte	0x1
 31800 20f1 870F     		.2byte	0xf87
 31801 20f3 33210000 		.4byte	0x2133
 31802 20f7 02       		.uleb128 0x2
 31803 20f8 91       		.byte	0x91
 31804 20f9 54       		.sleb128 -44
 31805 20fa 26       		.uleb128 0x26
 31806 20fb 6900     		.ascii	"i\000"
 31807 20fd 01       		.byte	0x1
 31808 20fe 880F     		.2byte	0xf88
 31809 2100 97000000 		.4byte	0x97
 31810 2104 02       		.uleb128 0x2
 31811 2105 91       		.byte	0x91
 31812 2106 6F       		.sleb128 -17
 31813 2107 26       		.uleb128 0x26
 31814 2108 6A00     		.ascii	"j\000"
 31815 210a 01       		.byte	0x1
 31816 210b 880F     		.2byte	0xf88
 31817 210d 97000000 		.4byte	0x97
 31818 2111 02       		.uleb128 0x2
 31819 2112 91       		.byte	0x91
 31820 2113 6E       		.sleb128 -18
 31821 2114 26       		.uleb128 0x26
 31822 2115 69647800 		.ascii	"idx\000"
 31823 2119 01       		.byte	0x1
 31824 211a 880F     		.2byte	0xf88
 31825 211c 97000000 		.4byte	0x97
 31826 2120 02       		.uleb128 0x2
 31827 2121 91       		.byte	0x91
 31828 2122 6D       		.sleb128 -19
 31829 2123 23       		.uleb128 0x23
 31830 2124 350D0000 		.4byte	.LASF236
 31831 2128 01       		.byte	0x1
 31832 2129 890F     		.2byte	0xf89
 31833 212b A3000000 		.4byte	0xa3
 31834 212f 02       		.uleb128 0x2
 31835 2130 91       		.byte	0x91
 31836 2131 52       		.sleb128 -46
 31837 2132 00       		.byte	0
 31838 2133 09       		.uleb128 0x9
 31839 2134 97000000 		.4byte	0x97
 31840 2138 43210000 		.4byte	0x2143
 31841 213c 0A       		.uleb128 0xa
 31842 213d 18010000 		.4byte	0x118
 31843 2141 15       		.byte	0x15
 31844 2142 00       		.byte	0
 31845 2143 27       		.uleb128 0x27
 31846 2144 E7030000 		.4byte	.LASF341
 31847 2148 01       		.byte	0x1
 31848 2149 A20F     		.2byte	0xfa2
 31849 214b 00000000 		.4byte	.LFB112
 31850 214f 5C000000 		.4byte	.LFE112-.LFB112
 31851 2153 01       		.uleb128 0x1
 31852 2154 9C       		.byte	0x9c
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 682


 31853 2155 76210000 		.4byte	0x2176
 31854 2159 23       		.uleb128 0x23
 31855 215a 6C060000 		.4byte	.LASF229
 31856 215e 01       		.byte	0x1
 31857 215f A50F     		.2byte	0xfa5
 31858 2161 090C0000 		.4byte	0xc09
 31859 2165 02       		.uleb128 0x2
 31860 2166 91       		.byte	0x91
 31861 2167 68       		.sleb128 -24
 31862 2168 26       		.uleb128 0x26
 31863 2169 6900     		.ascii	"i\000"
 31864 216b 01       		.byte	0x1
 31865 216c A60F     		.2byte	0xfa6
 31866 216e 97000000 		.4byte	0x97
 31867 2172 02       		.uleb128 0x2
 31868 2173 91       		.byte	0x91
 31869 2174 77       		.sleb128 -9
 31870 2175 00       		.byte	0
 31871 2176 27       		.uleb128 0x27
 31872 2177 2B040000 		.4byte	.LASF342
 31873 217b 01       		.byte	0x1
 31874 217c B90F     		.2byte	0xfb9
 31875 217e 00000000 		.4byte	.LFB113
 31876 2182 C0000000 		.4byte	.LFE113-.LFB113
 31877 2186 01       		.uleb128 0x1
 31878 2187 9C       		.byte	0x9c
 31879 2188 C7210000 		.4byte	0x21c7
 31880 218c 23       		.uleb128 0x23
 31881 218d 6C060000 		.4byte	.LASF229
 31882 2191 01       		.byte	0x1
 31883 2192 BC0F     		.2byte	0xfbc
 31884 2194 C7210000 		.4byte	0x21c7
 31885 2198 02       		.uleb128 0x2
 31886 2199 91       		.byte	0x91
 31887 219a 54       		.sleb128 -44
 31888 219b 26       		.uleb128 0x26
 31889 219c 6900     		.ascii	"i\000"
 31890 219e 01       		.byte	0x1
 31891 219f BD0F     		.2byte	0xfbd
 31892 21a1 97000000 		.4byte	0x97
 31893 21a5 02       		.uleb128 0x2
 31894 21a6 91       		.byte	0x91
 31895 21a7 6F       		.sleb128 -17
 31896 21a8 26       		.uleb128 0x26
 31897 21a9 69647800 		.ascii	"idx\000"
 31898 21ad 01       		.byte	0x1
 31899 21ae BD0F     		.2byte	0xfbd
 31900 21b0 97000000 		.4byte	0x97
 31901 21b4 02       		.uleb128 0x2
 31902 21b5 91       		.byte	0x91
 31903 21b6 6E       		.sleb128 -18
 31904 21b7 23       		.uleb128 0x23
 31905 21b8 5F120000 		.4byte	.LASF235
 31906 21bc 01       		.byte	0x1
 31907 21bd BE0F     		.2byte	0xfbe
 31908 21bf C7000000 		.4byte	0xc7
 31909 21c3 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 683


 31910 21c4 91       		.byte	0x91
 31911 21c5 52       		.sleb128 -46
 31912 21c6 00       		.byte	0
 31913 21c7 09       		.uleb128 0x9
 31914 21c8 97000000 		.4byte	0x97
 31915 21cc D7210000 		.4byte	0x21d7
 31916 21d0 0A       		.uleb128 0xa
 31917 21d1 18010000 		.4byte	0x118
 31918 21d5 19       		.byte	0x19
 31919 21d6 00       		.byte	0
 31920 21d7 22       		.uleb128 0x22
 31921 21d8 91030000 		.4byte	.LASF343
 31922 21dc 01       		.byte	0x1
 31923 21dd D40F     		.2byte	0xfd4
 31924 21df 00000000 		.4byte	.LFB114
 31925 21e3 54010000 		.4byte	.LFE114-.LFB114
 31926 21e7 01       		.uleb128 0x1
 31927 21e8 9C       		.byte	0x9c
 31928 21e9 2C220000 		.4byte	0x222c
 31929 21ed 25       		.uleb128 0x25
 31930 21ee B7070000 		.4byte	.LASF344
 31931 21f2 01       		.byte	0x1
 31932 21f3 D40F     		.2byte	0xfd4
 31933 21f5 A3000000 		.4byte	0xa3
 31934 21f9 04       		.uleb128 0x4
 31935 21fa 91       		.byte	0x91
 31936 21fb 9EE37E   		.sleb128 -20066
 31937 21fe 26       		.uleb128 0x26
 31938 21ff 6900     		.ascii	"i\000"
 31939 2201 01       		.byte	0x1
 31940 2202 D60F     		.2byte	0xfd6
 31941 2204 97000000 		.4byte	0x97
 31942 2208 02       		.uleb128 0x2
 31943 2209 91       		.byte	0x91
 31944 220a 77       		.sleb128 -9
 31945 220b 23       		.uleb128 0x23
 31946 220c CB040000 		.4byte	.LASF345
 31947 2210 01       		.byte	0x1
 31948 2211 D70F     		.2byte	0xfd7
 31949 2213 85100000 		.4byte	0x1085
 31950 2217 02       		.uleb128 0x2
 31951 2218 91       		.byte	0x91
 31952 2219 44       		.sleb128 -60
 31953 221a 23       		.uleb128 0x23
 31954 221b E6080000 		.4byte	.LASF218
 31955 221f 01       		.byte	0x1
 31956 2220 D80F     		.2byte	0xfd8
 31957 2222 AD0E0000 		.4byte	0xead
 31958 2226 04       		.uleb128 0x4
 31959 2227 91       		.byte	0x91
 31960 2228 A4E37E   		.sleb128 -20060
 31961 222b 00       		.byte	0
 31962 222c 28       		.uleb128 0x28
 31963 222d 45010000 		.4byte	.LASF346
 31964 2231 01       		.byte	0x1
 31965 2232 F50F     		.2byte	0xff5
 31966 2234 00000000 		.4byte	.LFB115
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 684


 31967 2238 12000000 		.4byte	.LFE115-.LFB115
 31968 223c 01       		.uleb128 0x1
 31969 223d 9C       		.byte	0x9c
 31970 223e 52220000 		.4byte	0x2252
 31971 2242 25       		.uleb128 0x25
 31972 2243 0F070000 		.4byte	.LASF347
 31973 2247 01       		.byte	0x1
 31974 2248 F50F     		.2byte	0xff5
 31975 224a 73000000 		.4byte	0x73
 31976 224e 02       		.uleb128 0x2
 31977 224f 91       		.byte	0x91
 31978 2250 74       		.sleb128 -12
 31979 2251 00       		.byte	0
 31980 2252 31       		.uleb128 0x31
 31981 2253 B20C0000 		.4byte	.LASF348
 31982 2257 01       		.byte	0x1
 31983 2258 4310     		.2byte	0x1043
 31984 225a 97000000 		.4byte	0x97
 31985 225e 00000000 		.4byte	.LFB116
 31986 2262 64010000 		.4byte	.LFE116-.LFB116
 31987 2266 01       		.uleb128 0x1
 31988 2267 9C       		.byte	0x9c
 31989 2268 CD220000 		.4byte	0x22cd
 31990 226c 23       		.uleb128 0x23
 31991 226d 8B0E0000 		.4byte	.LASF349
 31992 2271 01       		.byte	0x1
 31993 2272 4510     		.2byte	0x1045
 31994 2274 97000000 		.4byte	0x97
 31995 2278 05       		.uleb128 0x5
 31996 2279 03       		.byte	0x3
 31997 227a 0C000000 		.4byte	fsm_state.11541
 31998 227e 26       		.uleb128 0x26
 31999 227f 636E7400 		.ascii	"cnt\000"
 32000 2283 01       		.byte	0x1
 32001 2284 4610     		.2byte	0x1046
 32002 2286 D3000000 		.4byte	0xd3
 32003 228a 05       		.uleb128 0x5
 32004 228b 03       		.byte	0x3
 32005 228c 10000000 		.4byte	cnt.11542
 32006 2290 23       		.uleb128 0x23
 32007 2291 B8040000 		.4byte	.LASF350
 32008 2295 01       		.byte	0x1
 32009 2296 4710     		.2byte	0x1047
 32010 2298 D3000000 		.4byte	0xd3
 32011 229c 02       		.uleb128 0x2
 32012 229d 91       		.byte	0x91
 32013 229e 74       		.sleb128 -12
 32014 229f 23       		.uleb128 0x23
 32015 22a0 D40B0000 		.4byte	.LASF351
 32016 22a4 01       		.byte	0x1
 32017 22a5 4710     		.2byte	0x1047
 32018 22a7 D3000000 		.4byte	0xd3
 32019 22ab 02       		.uleb128 0x2
 32020 22ac 91       		.byte	0x91
 32021 22ad 70       		.sleb128 -16
 32022 22ae 23       		.uleb128 0x23
 32023 22af DA000000 		.4byte	.LASF352
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 685


 32024 22b3 01       		.byte	0x1
 32025 22b4 4810     		.2byte	0x1048
 32026 22b6 D3000000 		.4byte	0xd3
 32027 22ba 02       		.uleb128 0x2
 32028 22bb 91       		.byte	0x91
 32029 22bc 6C       		.sleb128 -20
 32030 22bd 23       		.uleb128 0x23
 32031 22be E6000000 		.4byte	.LASF353
 32032 22c2 01       		.byte	0x1
 32033 22c3 4810     		.2byte	0x1048
 32034 22c5 D3000000 		.4byte	0xd3
 32035 22c9 02       		.uleb128 0x2
 32036 22ca 91       		.byte	0x91
 32037 22cb 68       		.sleb128 -24
 32038 22cc 00       		.byte	0
 32039 22cd 28       		.uleb128 0x28
 32040 22ce 1E080000 		.4byte	.LASF354
 32041 22d2 01       		.byte	0x1
 32042 22d3 9510     		.2byte	0x1095
 32043 22d5 00000000 		.4byte	.LFB117
 32044 22d9 12000000 		.4byte	.LFE117-.LFB117
 32045 22dd 01       		.uleb128 0x1
 32046 22de 9C       		.byte	0x9c
 32047 22df F3220000 		.4byte	0x22f3
 32048 22e3 25       		.uleb128 0x25
 32049 22e4 0F070000 		.4byte	.LASF347
 32050 22e8 01       		.byte	0x1
 32051 22e9 9510     		.2byte	0x1095
 32052 22eb 73000000 		.4byte	0x73
 32053 22ef 02       		.uleb128 0x2
 32054 22f0 91       		.byte	0x91
 32055 22f1 74       		.sleb128 -12
 32056 22f2 00       		.byte	0
 32057 22f3 28       		.uleb128 0x28
 32058 22f4 1F0E0000 		.4byte	.LASF355
 32059 22f8 01       		.byte	0x1
 32060 22f9 E110     		.2byte	0x10e1
 32061 22fb 00000000 		.4byte	.LFB118
 32062 22ff 1A000000 		.4byte	.LFE118-.LFB118
 32063 2303 01       		.uleb128 0x1
 32064 2304 9C       		.byte	0x9c
 32065 2305 28230000 		.4byte	0x2328
 32066 2309 25       		.uleb128 0x25
 32067 230a 6F030000 		.4byte	.LASF356
 32068 230e 01       		.byte	0x1
 32069 230f E110     		.2byte	0x10e1
 32070 2311 97000000 		.4byte	0x97
 32071 2315 02       		.uleb128 0x2
 32072 2316 91       		.byte	0x91
 32073 2317 77       		.sleb128 -9
 32074 2318 25       		.uleb128 0x25
 32075 2319 5A0B0000 		.4byte	.LASF186
 32076 231d 01       		.byte	0x1
 32077 231e E110     		.2byte	0x10e1
 32078 2320 97000000 		.4byte	0x97
 32079 2324 02       		.uleb128 0x2
 32080 2325 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 686


 32081 2326 76       		.sleb128 -10
 32082 2327 00       		.byte	0
 32083 2328 32       		.uleb128 0x32
 32084 2329 F2000000 		.4byte	.LASF358
 32085 232d 01       		.byte	0x1
 32086 232e 0B11     		.2byte	0x110b
 32087 2330 00000000 		.4byte	.LFB119
 32088 2334 0C000000 		.4byte	.LFE119-.LFB119
 32089 2338 01       		.uleb128 0x1
 32090 2339 9C       		.byte	0x9c
 32091 233a 32       		.uleb128 0x32
 32092 233b 9B060000 		.4byte	.LASF359
 32093 233f 01       		.byte	0x1
 32094 2340 2111     		.2byte	0x1121
 32095 2342 00000000 		.4byte	.LFB120
 32096 2346 0C000000 		.4byte	.LFE120-.LFB120
 32097 234a 01       		.uleb128 0x1
 32098 234b 9C       		.byte	0x9c
 32099 234c 33       		.uleb128 0x33
 32100 234d A8120000 		.4byte	.LASF360
 32101 2351 09       		.byte	0x9
 32102 2352 1207     		.2byte	0x712
 32103 2354 58230000 		.4byte	0x2358
 32104 2358 06       		.uleb128 0x6
 32105 2359 81000000 		.4byte	0x81
 32106 235d 09       		.uleb128 0x9
 32107 235e 22030000 		.4byte	0x322
 32108 2362 6D230000 		.4byte	0x236d
 32109 2366 0A       		.uleb128 0xa
 32110 2367 18010000 		.4byte	0x118
 32111 236b 01       		.byte	0x1
 32112 236c 00       		.byte	0
 32113 236d 33       		.uleb128 0x33
 32114 236e 6E140000 		.4byte	.LASF361
 32115 2372 08       		.byte	0x8
 32116 2373 1D02     		.2byte	0x21d
 32117 2375 5D230000 		.4byte	0x235d
 32118 2379 33       		.uleb128 0x33
 32119 237a 30050000 		.4byte	.LASF362
 32120 237e 08       		.byte	0x8
 32121 237f 1D02     		.2byte	0x21d
 32122 2381 5D230000 		.4byte	0x235d
 32123 2385 33       		.uleb128 0x33
 32124 2386 D80D0000 		.4byte	.LASF363
 32125 238a 08       		.byte	0x8
 32126 238b 1D02     		.2byte	0x21d
 32127 238d 5D230000 		.4byte	0x235d
 32128 2391 09       		.uleb128 0x9
 32129 2392 5F030000 		.4byte	0x35f
 32130 2396 A1230000 		.4byte	0x23a1
 32131 239a 0A       		.uleb128 0xa
 32132 239b 18010000 		.4byte	0x118
 32133 239f 01       		.byte	0x1
 32134 23a0 00       		.byte	0
 32135 23a1 33       		.uleb128 0x33
 32136 23a2 1F070000 		.4byte	.LASF364
 32137 23a6 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 687


 32138 23a7 1E02     		.2byte	0x21e
 32139 23a9 91230000 		.4byte	0x2391
 32140 23ad 33       		.uleb128 0x33
 32141 23ae C1140000 		.4byte	.LASF365
 32142 23b2 08       		.byte	0x8
 32143 23b3 1E02     		.2byte	0x21e
 32144 23b5 91230000 		.4byte	0x2391
 32145 23b9 33       		.uleb128 0x33
 32146 23ba 38140000 		.4byte	.LASF366
 32147 23be 08       		.byte	0x8
 32148 23bf 1F02     		.2byte	0x21f
 32149 23c1 E0030000 		.4byte	0x3e0
 32150 23c5 33       		.uleb128 0x33
 32151 23c6 5B110000 		.4byte	.LASF367
 32152 23ca 08       		.byte	0x8
 32153 23cb 1F02     		.2byte	0x21f
 32154 23cd E0030000 		.4byte	0x3e0
 32155 23d1 33       		.uleb128 0x33
 32156 23d2 11110000 		.4byte	.LASF368
 32157 23d6 08       		.byte	0x8
 32158 23d7 2002     		.2byte	0x220
 32159 23d9 31040000 		.4byte	0x431
 32160 23dd 33       		.uleb128 0x33
 32161 23de 0D010000 		.4byte	.LASF369
 32162 23e2 08       		.byte	0x8
 32163 23e3 2102     		.2byte	0x221
 32164 23e5 4B040000 		.4byte	0x44b
 32165 23e9 33       		.uleb128 0x33
 32166 23ea 40110000 		.4byte	.LASF370
 32167 23ee 08       		.byte	0x8
 32168 23ef 2202     		.2byte	0x222
 32169 23f1 240B0000 		.4byte	0xb24
 32170 23f5 33       		.uleb128 0x33
 32171 23f6 B60B0000 		.4byte	.LASF371
 32172 23fa 08       		.byte	0x8
 32173 23fb 2202     		.2byte	0x222
 32174 23fd 240B0000 		.4byte	0xb24
 32175 2401 33       		.uleb128 0x33
 32176 2402 930A0000 		.4byte	.LASF372
 32177 2406 08       		.byte	0x8
 32178 2407 2302     		.2byte	0x223
 32179 2409 D50C0000 		.4byte	0xcd5
 32180 240d 33       		.uleb128 0x33
 32181 240e 4C030000 		.4byte	.LASF373
 32182 2412 08       		.byte	0x8
 32183 2413 2802     		.2byte	0x228
 32184 2415 A3000000 		.4byte	0xa3
 32185 2419 33       		.uleb128 0x33
 32186 241a 1E0F0000 		.4byte	.LASF374
 32187 241e 08       		.byte	0x8
 32188 241f 2902     		.2byte	0x229
 32189 2421 A3000000 		.4byte	0xa3
 32190 2425 33       		.uleb128 0x33
 32191 2426 500F0000 		.4byte	.LASF375
 32192 242a 08       		.byte	0x8
 32193 242b 2C02     		.2byte	0x22c
 32194 242d 11040000 		.4byte	0x411
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 688


 32195 2431 33       		.uleb128 0x33
 32196 2432 3F130000 		.4byte	.LASF376
 32197 2436 08       		.byte	0x8
 32198 2437 2D02     		.2byte	0x22d
 32199 2439 71080000 		.4byte	0x871
 32200 243d 33       		.uleb128 0x33
 32201 243e C8120000 		.4byte	.LASF377
 32202 2442 08       		.byte	0x8
 32203 2443 3002     		.2byte	0x230
 32204 2445 11040000 		.4byte	0x411
 32205 2449 33       		.uleb128 0x33
 32206 244a 630B0000 		.4byte	.LASF378
 32207 244e 08       		.byte	0x8
 32208 244f 3902     		.2byte	0x239
 32209 2451 81080000 		.4byte	0x881
 32210 2455 33       		.uleb128 0x33
 32211 2456 F8040000 		.4byte	.LASF379
 32212 245a 08       		.byte	0x8
 32213 245b 3B02     		.2byte	0x23b
 32214 245d 97000000 		.4byte	0x97
 32215 2461 33       		.uleb128 0x33
 32216 2462 E80A0000 		.4byte	.LASF380
 32217 2466 08       		.byte	0x8
 32218 2467 4202     		.2byte	0x242
 32219 2469 97000000 		.4byte	0x97
 32220 246d 33       		.uleb128 0x33
 32221 246e 0E080000 		.4byte	.LASF381
 32222 2472 08       		.byte	0x8
 32223 2473 4302     		.2byte	0x243
 32224 2475 97000000 		.4byte	0x97
 32225 2479 09       		.uleb128 0x9
 32226 247a C7000000 		.4byte	0xc7
 32227 247e 89240000 		.4byte	0x2489
 32228 2482 0A       		.uleb128 0xa
 32229 2483 18010000 		.4byte	0x118
 32230 2487 0B       		.byte	0xb
 32231 2488 00       		.byte	0
 32232 2489 33       		.uleb128 0x33
 32233 248a F0040000 		.4byte	.LASF382
 32234 248e 08       		.byte	0x8
 32235 248f 4602     		.2byte	0x246
 32236 2491 79240000 		.4byte	0x2479
 32237 2495 33       		.uleb128 0x33
 32238 2496 7A140000 		.4byte	.LASF383
 32239 249a 08       		.byte	0x8
 32240 249b 4702     		.2byte	0x247
 32241 249d 97000000 		.4byte	0x97
 32242 24a1 09       		.uleb128 0x9
 32243 24a2 AF000000 		.4byte	0xaf
 32244 24a6 B7240000 		.4byte	0x24b7
 32245 24aa 0A       		.uleb128 0xa
 32246 24ab 18010000 		.4byte	0x118
 32247 24af 01       		.byte	0x1
 32248 24b0 0A       		.uleb128 0xa
 32249 24b1 18010000 		.4byte	0x118
 32250 24b5 04       		.byte	0x4
 32251 24b6 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 689


 32252 24b7 33       		.uleb128 0x33
 32253 24b8 4D070000 		.4byte	.LASF384
 32254 24bc 08       		.byte	0x8
 32255 24bd 4D02     		.2byte	0x24d
 32256 24bf A1240000 		.4byte	0x24a1
 32257 24c3 33       		.uleb128 0x33
 32258 24c4 3C100000 		.4byte	.LASF385
 32259 24c8 08       		.byte	0x8
 32260 24c9 4E02     		.2byte	0x24e
 32261 24cb 81080000 		.4byte	0x881
 32262 24cf 09       		.uleb128 0x9
 32263 24d0 A3000000 		.4byte	0xa3
 32264 24d4 E5240000 		.4byte	0x24e5
 32265 24d8 0A       		.uleb128 0xa
 32266 24d9 18010000 		.4byte	0x118
 32267 24dd 01       		.byte	0x1
 32268 24de 0A       		.uleb128 0xa
 32269 24df 18010000 		.4byte	0x118
 32270 24e3 04       		.byte	0x4
 32271 24e4 00       		.byte	0
 32272 24e5 33       		.uleb128 0x33
 32273 24e6 68130000 		.4byte	.LASF386
 32274 24ea 08       		.byte	0x8
 32275 24eb 4F02     		.2byte	0x24f
 32276 24ed CF240000 		.4byte	0x24cf
 32277 24f1 09       		.uleb128 0x9
 32278 24f2 97000000 		.4byte	0x97
 32279 24f6 07250000 		.4byte	0x2507
 32280 24fa 0A       		.uleb128 0xa
 32281 24fb 18010000 		.4byte	0x118
 32282 24ff 01       		.byte	0x1
 32283 2500 0A       		.uleb128 0xa
 32284 2501 18010000 		.4byte	0x118
 32285 2505 04       		.byte	0x4
 32286 2506 00       		.byte	0
 32287 2507 33       		.uleb128 0x33
 32288 2508 26070000 		.4byte	.LASF387
 32289 250c 08       		.byte	0x8
 32290 250d 5002     		.2byte	0x250
 32291 250f F1240000 		.4byte	0x24f1
 32292 2513 33       		.uleb128 0x33
 32293 2514 82060000 		.4byte	.LASF388
 32294 2518 08       		.byte	0x8
 32295 2519 5702     		.2byte	0x257
 32296 251b 1C030000 		.4byte	0x31c
 32297 251f 33       		.uleb128 0x33
 32298 2520 D60F0000 		.4byte	.LASF389
 32299 2524 08       		.byte	0x8
 32300 2525 5802     		.2byte	0x258
 32301 2527 75160000 		.4byte	0x1675
 32302 252b 33       		.uleb128 0x33
 32303 252c 3B040000 		.4byte	.LASF390
 32304 2530 08       		.byte	0x8
 32305 2531 5902     		.2byte	0x259
 32306 2533 75160000 		.4byte	0x1675
 32307 2537 33       		.uleb128 0x33
 32308 2538 E6110000 		.4byte	.LASF391
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 690


 32309 253c 08       		.byte	0x8
 32310 253d 5E02     		.2byte	0x25e
 32311 253f 97000000 		.4byte	0x97
 32312 2543 33       		.uleb128 0x33
 32313 2544 A5130000 		.4byte	.LASF392
 32314 2548 08       		.byte	0x8
 32315 2549 5F02     		.2byte	0x25f
 32316 254b F2070000 		.4byte	0x7f2
 32317 254f 33       		.uleb128 0x33
 32318 2550 99120000 		.4byte	.LASF393
 32319 2554 08       		.byte	0x8
 32320 2555 6002     		.2byte	0x260
 32321 2557 73000000 		.4byte	0x73
 32322 255b 09       		.uleb128 0x9
 32323 255c 73000000 		.4byte	0x73
 32324 2560 6B250000 		.4byte	0x256b
 32325 2564 0A       		.uleb128 0xa
 32326 2565 18010000 		.4byte	0x118
 32327 2569 04       		.byte	0x4
 32328 256a 00       		.byte	0
 32329 256b 33       		.uleb128 0x33
 32330 256c 080D0000 		.4byte	.LASF394
 32331 2570 08       		.byte	0x8
 32332 2571 6102     		.2byte	0x261
 32333 2573 5B250000 		.4byte	0x255b
 32334 2577 09       		.uleb128 0x9
 32335 2578 590C0000 		.4byte	0xc59
 32336 257c 87250000 		.4byte	0x2587
 32337 2580 0A       		.uleb128 0xa
 32338 2581 18010000 		.4byte	0x118
 32339 2585 04       		.byte	0x4
 32340 2586 00       		.byte	0
 32341 2587 33       		.uleb128 0x33
 32342 2588 C2050000 		.4byte	.LASF395
 32343 258c 08       		.byte	0x8
 32344 258d 6202     		.2byte	0x262
 32345 258f 77250000 		.4byte	0x2577
 32346 2593 09       		.uleb128 0x9
 32347 2594 97000000 		.4byte	0x97
 32348 2598 A9250000 		.4byte	0x25a9
 32349 259c 0A       		.uleb128 0xa
 32350 259d 18010000 		.4byte	0x118
 32351 25a1 04       		.byte	0x4
 32352 25a2 0A       		.uleb128 0xa
 32353 25a3 18010000 		.4byte	0x118
 32354 25a7 02       		.byte	0x2
 32355 25a8 00       		.byte	0
 32356 25a9 33       		.uleb128 0x33
 32357 25aa 200C0000 		.4byte	.LASF396
 32358 25ae 08       		.byte	0x8
 32359 25af 6602     		.2byte	0x266
 32360 25b1 93250000 		.4byte	0x2593
 32361 25b5 33       		.uleb128 0x33
 32362 25b6 A0140000 		.4byte	.LASF397
 32363 25ba 08       		.byte	0x8
 32364 25bb 6B02     		.2byte	0x26b
 32365 25bd 97000000 		.4byte	0x97
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 691


 32366 25c1 09       		.uleb128 0x9
 32367 25c2 A3000000 		.4byte	0xa3
 32368 25c6 D8250000 		.4byte	0x25d8
 32369 25ca 24       		.uleb128 0x24
 32370 25cb 18010000 		.4byte	0x118
 32371 25cf 5702     		.2byte	0x257
 32372 25d1 0A       		.uleb128 0xa
 32373 25d2 18010000 		.4byte	0x118
 32374 25d6 01       		.byte	0x1
 32375 25d7 00       		.byte	0
 32376 25d8 33       		.uleb128 0x33
 32377 25d9 69120000 		.4byte	.LASF398
 32378 25dd 08       		.byte	0x8
 32379 25de 6E02     		.2byte	0x26e
 32380 25e0 C1250000 		.4byte	0x25c1
 32381 25e4 33       		.uleb128 0x33
 32382 25e5 450B0000 		.4byte	.LASF399
 32383 25e9 08       		.byte	0x8
 32384 25ea 6F02     		.2byte	0x26f
 32385 25ec AF000000 		.4byte	0xaf
 32386 25f0 34       		.uleb128 0x34
 32387 25f1 75120000 		.4byte	.LASF400
 32388 25f5 01       		.byte	0x1
 32389 25f6 33       		.byte	0x33
 32390 25f7 01260000 		.4byte	0x2601
 32391 25fb 05       		.uleb128 0x5
 32392 25fc 03       		.byte	0x3
 32393 25fd 00000000 		.4byte	EEPROM_ADDR
 32394 2601 07       		.uleb128 0x7
 32395 2602 04       		.byte	0x4
 32396 2603 00010000 		.4byte	0x100
 32397 2607 00       		.byte	0
 32398              		.section	.debug_abbrev,"",%progbits
 32399              	.Ldebug_abbrev0:
 32400 0000 01       		.uleb128 0x1
 32401 0001 11       		.uleb128 0x11
 32402 0002 01       		.byte	0x1
 32403 0003 25       		.uleb128 0x25
 32404 0004 0E       		.uleb128 0xe
 32405 0005 13       		.uleb128 0x13
 32406 0006 0B       		.uleb128 0xb
 32407 0007 03       		.uleb128 0x3
 32408 0008 0E       		.uleb128 0xe
 32409 0009 1B       		.uleb128 0x1b
 32410 000a 0E       		.uleb128 0xe
 32411 000b 55       		.uleb128 0x55
 32412 000c 17       		.uleb128 0x17
 32413 000d 11       		.uleb128 0x11
 32414 000e 01       		.uleb128 0x1
 32415 000f 10       		.uleb128 0x10
 32416 0010 17       		.uleb128 0x17
 32417 0011 00       		.byte	0
 32418 0012 00       		.byte	0
 32419 0013 02       		.uleb128 0x2
 32420 0014 24       		.uleb128 0x24
 32421 0015 00       		.byte	0
 32422 0016 0B       		.uleb128 0xb
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 692


 32423 0017 0B       		.uleb128 0xb
 32424 0018 3E       		.uleb128 0x3e
 32425 0019 0B       		.uleb128 0xb
 32426 001a 03       		.uleb128 0x3
 32427 001b 0E       		.uleb128 0xe
 32428 001c 00       		.byte	0
 32429 001d 00       		.byte	0
 32430 001e 03       		.uleb128 0x3
 32431 001f 16       		.uleb128 0x16
 32432 0020 00       		.byte	0
 32433 0021 03       		.uleb128 0x3
 32434 0022 0E       		.uleb128 0xe
 32435 0023 3A       		.uleb128 0x3a
 32436 0024 0B       		.uleb128 0xb
 32437 0025 3B       		.uleb128 0x3b
 32438 0026 0B       		.uleb128 0xb
 32439 0027 49       		.uleb128 0x49
 32440 0028 13       		.uleb128 0x13
 32441 0029 00       		.byte	0
 32442 002a 00       		.byte	0
 32443 002b 04       		.uleb128 0x4
 32444 002c 24       		.uleb128 0x24
 32445 002d 00       		.byte	0
 32446 002e 0B       		.uleb128 0xb
 32447 002f 0B       		.uleb128 0xb
 32448 0030 3E       		.uleb128 0x3e
 32449 0031 0B       		.uleb128 0xb
 32450 0032 03       		.uleb128 0x3
 32451 0033 08       		.uleb128 0x8
 32452 0034 00       		.byte	0
 32453 0035 00       		.byte	0
 32454 0036 05       		.uleb128 0x5
 32455 0037 16       		.uleb128 0x16
 32456 0038 00       		.byte	0
 32457 0039 03       		.uleb128 0x3
 32458 003a 0E       		.uleb128 0xe
 32459 003b 3A       		.uleb128 0x3a
 32460 003c 0B       		.uleb128 0xb
 32461 003d 3B       		.uleb128 0x3b
 32462 003e 05       		.uleb128 0x5
 32463 003f 49       		.uleb128 0x49
 32464 0040 13       		.uleb128 0x13
 32465 0041 00       		.byte	0
 32466 0042 00       		.byte	0
 32467 0043 06       		.uleb128 0x6
 32468 0044 35       		.uleb128 0x35
 32469 0045 00       		.byte	0
 32470 0046 49       		.uleb128 0x49
 32471 0047 13       		.uleb128 0x13
 32472 0048 00       		.byte	0
 32473 0049 00       		.byte	0
 32474 004a 07       		.uleb128 0x7
 32475 004b 0F       		.uleb128 0xf
 32476 004c 00       		.byte	0
 32477 004d 0B       		.uleb128 0xb
 32478 004e 0B       		.uleb128 0xb
 32479 004f 49       		.uleb128 0x49
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 693


 32480 0050 13       		.uleb128 0x13
 32481 0051 00       		.byte	0
 32482 0052 00       		.byte	0
 32483 0053 08       		.uleb128 0x8
 32484 0054 26       		.uleb128 0x26
 32485 0055 00       		.byte	0
 32486 0056 49       		.uleb128 0x49
 32487 0057 13       		.uleb128 0x13
 32488 0058 00       		.byte	0
 32489 0059 00       		.byte	0
 32490 005a 09       		.uleb128 0x9
 32491 005b 01       		.uleb128 0x1
 32492 005c 01       		.byte	0x1
 32493 005d 49       		.uleb128 0x49
 32494 005e 13       		.uleb128 0x13
 32495 005f 01       		.uleb128 0x1
 32496 0060 13       		.uleb128 0x13
 32497 0061 00       		.byte	0
 32498 0062 00       		.byte	0
 32499 0063 0A       		.uleb128 0xa
 32500 0064 21       		.uleb128 0x21
 32501 0065 00       		.byte	0
 32502 0066 49       		.uleb128 0x49
 32503 0067 13       		.uleb128 0x13
 32504 0068 2F       		.uleb128 0x2f
 32505 0069 0B       		.uleb128 0xb
 32506 006a 00       		.byte	0
 32507 006b 00       		.byte	0
 32508 006c 0B       		.uleb128 0xb
 32509 006d 04       		.uleb128 0x4
 32510 006e 01       		.byte	0x1
 32511 006f 03       		.uleb128 0x3
 32512 0070 0E       		.uleb128 0xe
 32513 0071 0B       		.uleb128 0xb
 32514 0072 0B       		.uleb128 0xb
 32515 0073 49       		.uleb128 0x49
 32516 0074 13       		.uleb128 0x13
 32517 0075 3A       		.uleb128 0x3a
 32518 0076 0B       		.uleb128 0xb
 32519 0077 3B       		.uleb128 0x3b
 32520 0078 0B       		.uleb128 0xb
 32521 0079 01       		.uleb128 0x1
 32522 007a 13       		.uleb128 0x13
 32523 007b 00       		.byte	0
 32524 007c 00       		.byte	0
 32525 007d 0C       		.uleb128 0xc
 32526 007e 28       		.uleb128 0x28
 32527 007f 00       		.byte	0
 32528 0080 03       		.uleb128 0x3
 32529 0081 0E       		.uleb128 0xe
 32530 0082 1C       		.uleb128 0x1c
 32531 0083 0B       		.uleb128 0xb
 32532 0084 00       		.byte	0
 32533 0085 00       		.byte	0
 32534 0086 0D       		.uleb128 0xd
 32535 0087 13       		.uleb128 0x13
 32536 0088 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 694


 32537 0089 03       		.uleb128 0x3
 32538 008a 0E       		.uleb128 0xe
 32539 008b 3C       		.uleb128 0x3c
 32540 008c 19       		.uleb128 0x19
 32541 008d 00       		.byte	0
 32542 008e 00       		.byte	0
 32543 008f 0E       		.uleb128 0xe
 32544 0090 13       		.uleb128 0x13
 32545 0091 01       		.byte	0x1
 32546 0092 03       		.uleb128 0x3
 32547 0093 0E       		.uleb128 0xe
 32548 0094 0B       		.uleb128 0xb
 32549 0095 0B       		.uleb128 0xb
 32550 0096 3A       		.uleb128 0x3a
 32551 0097 0B       		.uleb128 0xb
 32552 0098 3B       		.uleb128 0x3b
 32553 0099 0B       		.uleb128 0xb
 32554 009a 01       		.uleb128 0x1
 32555 009b 13       		.uleb128 0x13
 32556 009c 00       		.byte	0
 32557 009d 00       		.byte	0
 32558 009e 0F       		.uleb128 0xf
 32559 009f 0D       		.uleb128 0xd
 32560 00a0 00       		.byte	0
 32561 00a1 03       		.uleb128 0x3
 32562 00a2 08       		.uleb128 0x8
 32563 00a3 3A       		.uleb128 0x3a
 32564 00a4 0B       		.uleb128 0xb
 32565 00a5 3B       		.uleb128 0x3b
 32566 00a6 0B       		.uleb128 0xb
 32567 00a7 49       		.uleb128 0x49
 32568 00a8 13       		.uleb128 0x13
 32569 00a9 38       		.uleb128 0x38
 32570 00aa 0B       		.uleb128 0xb
 32571 00ab 00       		.byte	0
 32572 00ac 00       		.byte	0
 32573 00ad 10       		.uleb128 0x10
 32574 00ae 0D       		.uleb128 0xd
 32575 00af 00       		.byte	0
 32576 00b0 03       		.uleb128 0x3
 32577 00b1 0E       		.uleb128 0xe
 32578 00b2 3A       		.uleb128 0x3a
 32579 00b3 0B       		.uleb128 0xb
 32580 00b4 3B       		.uleb128 0x3b
 32581 00b5 0B       		.uleb128 0xb
 32582 00b6 49       		.uleb128 0x49
 32583 00b7 13       		.uleb128 0x13
 32584 00b8 38       		.uleb128 0x38
 32585 00b9 0B       		.uleb128 0xb
 32586 00ba 00       		.byte	0
 32587 00bb 00       		.byte	0
 32588 00bc 11       		.uleb128 0x11
 32589 00bd 0D       		.uleb128 0xd
 32590 00be 00       		.byte	0
 32591 00bf 03       		.uleb128 0x3
 32592 00c0 0E       		.uleb128 0xe
 32593 00c1 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 695


 32594 00c2 0B       		.uleb128 0xb
 32595 00c3 3B       		.uleb128 0x3b
 32596 00c4 05       		.uleb128 0x5
 32597 00c5 49       		.uleb128 0x49
 32598 00c6 13       		.uleb128 0x13
 32599 00c7 38       		.uleb128 0x38
 32600 00c8 0B       		.uleb128 0xb
 32601 00c9 00       		.byte	0
 32602 00ca 00       		.byte	0
 32603 00cb 12       		.uleb128 0x12
 32604 00cc 13       		.uleb128 0x13
 32605 00cd 01       		.byte	0x1
 32606 00ce 03       		.uleb128 0x3
 32607 00cf 0E       		.uleb128 0xe
 32608 00d0 0B       		.uleb128 0xb
 32609 00d1 0B       		.uleb128 0xb
 32610 00d2 3A       		.uleb128 0x3a
 32611 00d3 0B       		.uleb128 0xb
 32612 00d4 3B       		.uleb128 0x3b
 32613 00d5 05       		.uleb128 0x5
 32614 00d6 01       		.uleb128 0x1
 32615 00d7 13       		.uleb128 0x13
 32616 00d8 00       		.byte	0
 32617 00d9 00       		.byte	0
 32618 00da 13       		.uleb128 0x13
 32619 00db 0D       		.uleb128 0xd
 32620 00dc 00       		.byte	0
 32621 00dd 03       		.uleb128 0x3
 32622 00de 08       		.uleb128 0x8
 32623 00df 3A       		.uleb128 0x3a
 32624 00e0 0B       		.uleb128 0xb
 32625 00e1 3B       		.uleb128 0x3b
 32626 00e2 05       		.uleb128 0x5
 32627 00e3 49       		.uleb128 0x49
 32628 00e4 13       		.uleb128 0x13
 32629 00e5 38       		.uleb128 0x38
 32630 00e6 0B       		.uleb128 0xb
 32631 00e7 00       		.byte	0
 32632 00e8 00       		.byte	0
 32633 00e9 14       		.uleb128 0x14
 32634 00ea 13       		.uleb128 0x13
 32635 00eb 01       		.byte	0x1
 32636 00ec 03       		.uleb128 0x3
 32637 00ed 0E       		.uleb128 0xe
 32638 00ee 0B       		.uleb128 0xb
 32639 00ef 05       		.uleb128 0x5
 32640 00f0 3A       		.uleb128 0x3a
 32641 00f1 0B       		.uleb128 0xb
 32642 00f2 3B       		.uleb128 0x3b
 32643 00f3 05       		.uleb128 0x5
 32644 00f4 01       		.uleb128 0x1
 32645 00f5 13       		.uleb128 0x13
 32646 00f6 00       		.byte	0
 32647 00f7 00       		.byte	0
 32648 00f8 15       		.uleb128 0x15
 32649 00f9 0D       		.uleb128 0xd
 32650 00fa 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 696


 32651 00fb 03       		.uleb128 0x3
 32652 00fc 08       		.uleb128 0x8
 32653 00fd 3A       		.uleb128 0x3a
 32654 00fe 0B       		.uleb128 0xb
 32655 00ff 3B       		.uleb128 0x3b
 32656 0100 05       		.uleb128 0x5
 32657 0101 49       		.uleb128 0x49
 32658 0102 13       		.uleb128 0x13
 32659 0103 38       		.uleb128 0x38
 32660 0104 05       		.uleb128 0x5
 32661 0105 00       		.byte	0
 32662 0106 00       		.byte	0
 32663 0107 16       		.uleb128 0x16
 32664 0108 0D       		.uleb128 0xd
 32665 0109 00       		.byte	0
 32666 010a 03       		.uleb128 0x3
 32667 010b 0E       		.uleb128 0xe
 32668 010c 3A       		.uleb128 0x3a
 32669 010d 0B       		.uleb128 0xb
 32670 010e 3B       		.uleb128 0x3b
 32671 010f 05       		.uleb128 0x5
 32672 0110 49       		.uleb128 0x49
 32673 0111 13       		.uleb128 0x13
 32674 0112 38       		.uleb128 0x38
 32675 0113 05       		.uleb128 0x5
 32676 0114 00       		.byte	0
 32677 0115 00       		.byte	0
 32678 0116 17       		.uleb128 0x17
 32679 0117 2E       		.uleb128 0x2e
 32680 0118 01       		.byte	0x1
 32681 0119 03       		.uleb128 0x3
 32682 011a 0E       		.uleb128 0xe
 32683 011b 3A       		.uleb128 0x3a
 32684 011c 0B       		.uleb128 0xb
 32685 011d 3B       		.uleb128 0x3b
 32686 011e 05       		.uleb128 0x5
 32687 011f 27       		.uleb128 0x27
 32688 0120 19       		.uleb128 0x19
 32689 0121 49       		.uleb128 0x49
 32690 0122 13       		.uleb128 0x13
 32691 0123 20       		.uleb128 0x20
 32692 0124 0B       		.uleb128 0xb
 32693 0125 01       		.uleb128 0x1
 32694 0126 13       		.uleb128 0x13
 32695 0127 00       		.byte	0
 32696 0128 00       		.byte	0
 32697 0129 18       		.uleb128 0x18
 32698 012a 05       		.uleb128 0x5
 32699 012b 00       		.byte	0
 32700 012c 03       		.uleb128 0x3
 32701 012d 0E       		.uleb128 0xe
 32702 012e 3A       		.uleb128 0x3a
 32703 012f 0B       		.uleb128 0xb
 32704 0130 3B       		.uleb128 0x3b
 32705 0131 05       		.uleb128 0x5
 32706 0132 49       		.uleb128 0x49
 32707 0133 13       		.uleb128 0x13
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 697


 32708 0134 00       		.byte	0
 32709 0135 00       		.byte	0
 32710 0136 19       		.uleb128 0x19
 32711 0137 34       		.uleb128 0x34
 32712 0138 00       		.byte	0
 32713 0139 03       		.uleb128 0x3
 32714 013a 0E       		.uleb128 0xe
 32715 013b 3A       		.uleb128 0x3a
 32716 013c 0B       		.uleb128 0xb
 32717 013d 3B       		.uleb128 0x3b
 32718 013e 05       		.uleb128 0x5
 32719 013f 49       		.uleb128 0x49
 32720 0140 13       		.uleb128 0x13
 32721 0141 00       		.byte	0
 32722 0142 00       		.byte	0
 32723 0143 1A       		.uleb128 0x1a
 32724 0144 2E       		.uleb128 0x2e
 32725 0145 01       		.byte	0x1
 32726 0146 3F       		.uleb128 0x3f
 32727 0147 19       		.uleb128 0x19
 32728 0148 03       		.uleb128 0x3
 32729 0149 0E       		.uleb128 0xe
 32730 014a 3A       		.uleb128 0x3a
 32731 014b 0B       		.uleb128 0xb
 32732 014c 3B       		.uleb128 0x3b
 32733 014d 0B       		.uleb128 0xb
 32734 014e 27       		.uleb128 0x27
 32735 014f 19       		.uleb128 0x19
 32736 0150 11       		.uleb128 0x11
 32737 0151 01       		.uleb128 0x1
 32738 0152 12       		.uleb128 0x12
 32739 0153 06       		.uleb128 0x6
 32740 0154 40       		.uleb128 0x40
 32741 0155 18       		.uleb128 0x18
 32742 0156 9642     		.uleb128 0x2116
 32743 0158 19       		.uleb128 0x19
 32744 0159 01       		.uleb128 0x1
 32745 015a 13       		.uleb128 0x13
 32746 015b 00       		.byte	0
 32747 015c 00       		.byte	0
 32748 015d 1B       		.uleb128 0x1b
 32749 015e 34       		.uleb128 0x34
 32750 015f 00       		.byte	0
 32751 0160 03       		.uleb128 0x3
 32752 0161 0E       		.uleb128 0xe
 32753 0162 3A       		.uleb128 0x3a
 32754 0163 0B       		.uleb128 0xb
 32755 0164 3B       		.uleb128 0x3b
 32756 0165 0B       		.uleb128 0xb
 32757 0166 49       		.uleb128 0x49
 32758 0167 13       		.uleb128 0x13
 32759 0168 02       		.uleb128 0x2
 32760 0169 18       		.uleb128 0x18
 32761 016a 00       		.byte	0
 32762 016b 00       		.byte	0
 32763 016c 1C       		.uleb128 0x1c
 32764 016d 1D       		.uleb128 0x1d
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 698


 32765 016e 01       		.byte	0x1
 32766 016f 31       		.uleb128 0x31
 32767 0170 13       		.uleb128 0x13
 32768 0171 11       		.uleb128 0x11
 32769 0172 01       		.uleb128 0x1
 32770 0173 12       		.uleb128 0x12
 32771 0174 06       		.uleb128 0x6
 32772 0175 58       		.uleb128 0x58
 32773 0176 0B       		.uleb128 0xb
 32774 0177 59       		.uleb128 0x59
 32775 0178 0B       		.uleb128 0xb
 32776 0179 01       		.uleb128 0x1
 32777 017a 13       		.uleb128 0x13
 32778 017b 00       		.byte	0
 32779 017c 00       		.byte	0
 32780 017d 1D       		.uleb128 0x1d
 32781 017e 05       		.uleb128 0x5
 32782 017f 00       		.byte	0
 32783 0180 31       		.uleb128 0x31
 32784 0181 13       		.uleb128 0x13
 32785 0182 02       		.uleb128 0x2
 32786 0183 18       		.uleb128 0x18
 32787 0184 00       		.byte	0
 32788 0185 00       		.byte	0
 32789 0186 1E       		.uleb128 0x1e
 32790 0187 0B       		.uleb128 0xb
 32791 0188 01       		.byte	0x1
 32792 0189 11       		.uleb128 0x11
 32793 018a 01       		.uleb128 0x1
 32794 018b 12       		.uleb128 0x12
 32795 018c 06       		.uleb128 0x6
 32796 018d 00       		.byte	0
 32797 018e 00       		.byte	0
 32798 018f 1F       		.uleb128 0x1f
 32799 0190 34       		.uleb128 0x34
 32800 0191 00       		.byte	0
 32801 0192 31       		.uleb128 0x31
 32802 0193 13       		.uleb128 0x13
 32803 0194 02       		.uleb128 0x2
 32804 0195 18       		.uleb128 0x18
 32805 0196 00       		.byte	0
 32806 0197 00       		.byte	0
 32807 0198 20       		.uleb128 0x20
 32808 0199 1D       		.uleb128 0x1d
 32809 019a 01       		.byte	0x1
 32810 019b 31       		.uleb128 0x31
 32811 019c 13       		.uleb128 0x13
 32812 019d 11       		.uleb128 0x11
 32813 019e 01       		.uleb128 0x1
 32814 019f 12       		.uleb128 0x12
 32815 01a0 06       		.uleb128 0x6
 32816 01a1 58       		.uleb128 0x58
 32817 01a2 0B       		.uleb128 0xb
 32818 01a3 59       		.uleb128 0x59
 32819 01a4 05       		.uleb128 0x5
 32820 01a5 01       		.uleb128 0x1
 32821 01a6 13       		.uleb128 0x13
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 699


 32822 01a7 00       		.byte	0
 32823 01a8 00       		.byte	0
 32824 01a9 21       		.uleb128 0x21
 32825 01aa 1D       		.uleb128 0x1d
 32826 01ab 01       		.byte	0x1
 32827 01ac 31       		.uleb128 0x31
 32828 01ad 13       		.uleb128 0x13
 32829 01ae 11       		.uleb128 0x11
 32830 01af 01       		.uleb128 0x1
 32831 01b0 12       		.uleb128 0x12
 32832 01b1 06       		.uleb128 0x6
 32833 01b2 58       		.uleb128 0x58
 32834 01b3 0B       		.uleb128 0xb
 32835 01b4 59       		.uleb128 0x59
 32836 01b5 05       		.uleb128 0x5
 32837 01b6 00       		.byte	0
 32838 01b7 00       		.byte	0
 32839 01b8 22       		.uleb128 0x22
 32840 01b9 2E       		.uleb128 0x2e
 32841 01ba 01       		.byte	0x1
 32842 01bb 3F       		.uleb128 0x3f
 32843 01bc 19       		.uleb128 0x19
 32844 01bd 03       		.uleb128 0x3
 32845 01be 0E       		.uleb128 0xe
 32846 01bf 3A       		.uleb128 0x3a
 32847 01c0 0B       		.uleb128 0xb
 32848 01c1 3B       		.uleb128 0x3b
 32849 01c2 05       		.uleb128 0x5
 32850 01c3 27       		.uleb128 0x27
 32851 01c4 19       		.uleb128 0x19
 32852 01c5 11       		.uleb128 0x11
 32853 01c6 01       		.uleb128 0x1
 32854 01c7 12       		.uleb128 0x12
 32855 01c8 06       		.uleb128 0x6
 32856 01c9 40       		.uleb128 0x40
 32857 01ca 18       		.uleb128 0x18
 32858 01cb 9642     		.uleb128 0x2116
 32859 01cd 19       		.uleb128 0x19
 32860 01ce 01       		.uleb128 0x1
 32861 01cf 13       		.uleb128 0x13
 32862 01d0 00       		.byte	0
 32863 01d1 00       		.byte	0
 32864 01d2 23       		.uleb128 0x23
 32865 01d3 34       		.uleb128 0x34
 32866 01d4 00       		.byte	0
 32867 01d5 03       		.uleb128 0x3
 32868 01d6 0E       		.uleb128 0xe
 32869 01d7 3A       		.uleb128 0x3a
 32870 01d8 0B       		.uleb128 0xb
 32871 01d9 3B       		.uleb128 0x3b
 32872 01da 05       		.uleb128 0x5
 32873 01db 49       		.uleb128 0x49
 32874 01dc 13       		.uleb128 0x13
 32875 01dd 02       		.uleb128 0x2
 32876 01de 18       		.uleb128 0x18
 32877 01df 00       		.byte	0
 32878 01e0 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 700


 32879 01e1 24       		.uleb128 0x24
 32880 01e2 21       		.uleb128 0x21
 32881 01e3 00       		.byte	0
 32882 01e4 49       		.uleb128 0x49
 32883 01e5 13       		.uleb128 0x13
 32884 01e6 2F       		.uleb128 0x2f
 32885 01e7 05       		.uleb128 0x5
 32886 01e8 00       		.byte	0
 32887 01e9 00       		.byte	0
 32888 01ea 25       		.uleb128 0x25
 32889 01eb 05       		.uleb128 0x5
 32890 01ec 00       		.byte	0
 32891 01ed 03       		.uleb128 0x3
 32892 01ee 0E       		.uleb128 0xe
 32893 01ef 3A       		.uleb128 0x3a
 32894 01f0 0B       		.uleb128 0xb
 32895 01f1 3B       		.uleb128 0x3b
 32896 01f2 05       		.uleb128 0x5
 32897 01f3 49       		.uleb128 0x49
 32898 01f4 13       		.uleb128 0x13
 32899 01f5 02       		.uleb128 0x2
 32900 01f6 18       		.uleb128 0x18
 32901 01f7 00       		.byte	0
 32902 01f8 00       		.byte	0
 32903 01f9 26       		.uleb128 0x26
 32904 01fa 34       		.uleb128 0x34
 32905 01fb 00       		.byte	0
 32906 01fc 03       		.uleb128 0x3
 32907 01fd 08       		.uleb128 0x8
 32908 01fe 3A       		.uleb128 0x3a
 32909 01ff 0B       		.uleb128 0xb
 32910 0200 3B       		.uleb128 0x3b
 32911 0201 05       		.uleb128 0x5
 32912 0202 49       		.uleb128 0x49
 32913 0203 13       		.uleb128 0x13
 32914 0204 02       		.uleb128 0x2
 32915 0205 18       		.uleb128 0x18
 32916 0206 00       		.byte	0
 32917 0207 00       		.byte	0
 32918 0208 27       		.uleb128 0x27
 32919 0209 2E       		.uleb128 0x2e
 32920 020a 01       		.byte	0x1
 32921 020b 3F       		.uleb128 0x3f
 32922 020c 19       		.uleb128 0x19
 32923 020d 03       		.uleb128 0x3
 32924 020e 0E       		.uleb128 0xe
 32925 020f 3A       		.uleb128 0x3a
 32926 0210 0B       		.uleb128 0xb
 32927 0211 3B       		.uleb128 0x3b
 32928 0212 05       		.uleb128 0x5
 32929 0213 11       		.uleb128 0x11
 32930 0214 01       		.uleb128 0x1
 32931 0215 12       		.uleb128 0x12
 32932 0216 06       		.uleb128 0x6
 32933 0217 40       		.uleb128 0x40
 32934 0218 18       		.uleb128 0x18
 32935 0219 9642     		.uleb128 0x2116
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 701


 32936 021b 19       		.uleb128 0x19
 32937 021c 01       		.uleb128 0x1
 32938 021d 13       		.uleb128 0x13
 32939 021e 00       		.byte	0
 32940 021f 00       		.byte	0
 32941 0220 28       		.uleb128 0x28
 32942 0221 2E       		.uleb128 0x2e
 32943 0222 01       		.byte	0x1
 32944 0223 3F       		.uleb128 0x3f
 32945 0224 19       		.uleb128 0x19
 32946 0225 03       		.uleb128 0x3
 32947 0226 0E       		.uleb128 0xe
 32948 0227 3A       		.uleb128 0x3a
 32949 0228 0B       		.uleb128 0xb
 32950 0229 3B       		.uleb128 0x3b
 32951 022a 05       		.uleb128 0x5
 32952 022b 27       		.uleb128 0x27
 32953 022c 19       		.uleb128 0x19
 32954 022d 11       		.uleb128 0x11
 32955 022e 01       		.uleb128 0x1
 32956 022f 12       		.uleb128 0x12
 32957 0230 06       		.uleb128 0x6
 32958 0231 40       		.uleb128 0x40
 32959 0232 18       		.uleb128 0x18
 32960 0233 9742     		.uleb128 0x2117
 32961 0235 19       		.uleb128 0x19
 32962 0236 01       		.uleb128 0x1
 32963 0237 13       		.uleb128 0x13
 32964 0238 00       		.byte	0
 32965 0239 00       		.byte	0
 32966 023a 29       		.uleb128 0x29
 32967 023b 05       		.uleb128 0x5
 32968 023c 00       		.byte	0
 32969 023d 03       		.uleb128 0x3
 32970 023e 08       		.uleb128 0x8
 32971 023f 3A       		.uleb128 0x3a
 32972 0240 0B       		.uleb128 0xb
 32973 0241 3B       		.uleb128 0x3b
 32974 0242 05       		.uleb128 0x5
 32975 0243 49       		.uleb128 0x49
 32976 0244 13       		.uleb128 0x13
 32977 0245 02       		.uleb128 0x2
 32978 0246 18       		.uleb128 0x18
 32979 0247 00       		.byte	0
 32980 0248 00       		.byte	0
 32981 0249 2A       		.uleb128 0x2a
 32982 024a 2E       		.uleb128 0x2e
 32983 024b 01       		.byte	0x1
 32984 024c 3F       		.uleb128 0x3f
 32985 024d 19       		.uleb128 0x19
 32986 024e 03       		.uleb128 0x3
 32987 024f 0E       		.uleb128 0xe
 32988 0250 3A       		.uleb128 0x3a
 32989 0251 0B       		.uleb128 0xb
 32990 0252 3B       		.uleb128 0x3b
 32991 0253 05       		.uleb128 0x5
 32992 0254 27       		.uleb128 0x27
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 702


 32993 0255 19       		.uleb128 0x19
 32994 0256 49       		.uleb128 0x49
 32995 0257 13       		.uleb128 0x13
 32996 0258 11       		.uleb128 0x11
 32997 0259 01       		.uleb128 0x1
 32998 025a 12       		.uleb128 0x12
 32999 025b 06       		.uleb128 0x6
 33000 025c 40       		.uleb128 0x40
 33001 025d 18       		.uleb128 0x18
 33002 025e 9742     		.uleb128 0x2117
 33003 0260 19       		.uleb128 0x19
 33004 0261 01       		.uleb128 0x1
 33005 0262 13       		.uleb128 0x13
 33006 0263 00       		.byte	0
 33007 0264 00       		.byte	0
 33008 0265 2B       		.uleb128 0x2b
 33009 0266 2E       		.uleb128 0x2e
 33010 0267 01       		.byte	0x1
 33011 0268 3F       		.uleb128 0x3f
 33012 0269 19       		.uleb128 0x19
 33013 026a 03       		.uleb128 0x3
 33014 026b 0E       		.uleb128 0xe
 33015 026c 3A       		.uleb128 0x3a
 33016 026d 0B       		.uleb128 0xb
 33017 026e 3B       		.uleb128 0x3b
 33018 026f 05       		.uleb128 0x5
 33019 0270 27       		.uleb128 0x27
 33020 0271 19       		.uleb128 0x19
 33021 0272 49       		.uleb128 0x49
 33022 0273 13       		.uleb128 0x13
 33023 0274 11       		.uleb128 0x11
 33024 0275 01       		.uleb128 0x1
 33025 0276 12       		.uleb128 0x12
 33026 0277 06       		.uleb128 0x6
 33027 0278 40       		.uleb128 0x40
 33028 0279 18       		.uleb128 0x18
 33029 027a 9642     		.uleb128 0x2116
 33030 027c 19       		.uleb128 0x19
 33031 027d 01       		.uleb128 0x1
 33032 027e 13       		.uleb128 0x13
 33033 027f 00       		.byte	0
 33034 0280 00       		.byte	0
 33035 0281 2C       		.uleb128 0x2c
 33036 0282 2E       		.uleb128 0x2e
 33037 0283 00       		.byte	0
 33038 0284 3F       		.uleb128 0x3f
 33039 0285 19       		.uleb128 0x19
 33040 0286 03       		.uleb128 0x3
 33041 0287 0E       		.uleb128 0xe
 33042 0288 3A       		.uleb128 0x3a
 33043 0289 0B       		.uleb128 0xb
 33044 028a 3B       		.uleb128 0x3b
 33045 028b 05       		.uleb128 0x5
 33046 028c 27       		.uleb128 0x27
 33047 028d 19       		.uleb128 0x19
 33048 028e 11       		.uleb128 0x11
 33049 028f 01       		.uleb128 0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 703


 33050 0290 12       		.uleb128 0x12
 33051 0291 06       		.uleb128 0x6
 33052 0292 40       		.uleb128 0x40
 33053 0293 18       		.uleb128 0x18
 33054 0294 9742     		.uleb128 0x2117
 33055 0296 19       		.uleb128 0x19
 33056 0297 00       		.byte	0
 33057 0298 00       		.byte	0
 33058 0299 2D       		.uleb128 0x2d
 33059 029a 2E       		.uleb128 0x2e
 33060 029b 01       		.byte	0x1
 33061 029c 3F       		.uleb128 0x3f
 33062 029d 19       		.uleb128 0x19
 33063 029e 03       		.uleb128 0x3
 33064 029f 0E       		.uleb128 0xe
 33065 02a0 3A       		.uleb128 0x3a
 33066 02a1 0B       		.uleb128 0xb
 33067 02a2 3B       		.uleb128 0x3b
 33068 02a3 05       		.uleb128 0x5
 33069 02a4 11       		.uleb128 0x11
 33070 02a5 01       		.uleb128 0x1
 33071 02a6 12       		.uleb128 0x12
 33072 02a7 06       		.uleb128 0x6
 33073 02a8 40       		.uleb128 0x40
 33074 02a9 18       		.uleb128 0x18
 33075 02aa 9742     		.uleb128 0x2117
 33076 02ac 19       		.uleb128 0x19
 33077 02ad 01       		.uleb128 0x1
 33078 02ae 13       		.uleb128 0x13
 33079 02af 00       		.byte	0
 33080 02b0 00       		.byte	0
 33081 02b1 2E       		.uleb128 0x2e
 33082 02b2 0B       		.uleb128 0xb
 33083 02b3 01       		.byte	0x1
 33084 02b4 11       		.uleb128 0x11
 33085 02b5 01       		.uleb128 0x1
 33086 02b6 12       		.uleb128 0x12
 33087 02b7 06       		.uleb128 0x6
 33088 02b8 01       		.uleb128 0x1
 33089 02b9 13       		.uleb128 0x13
 33090 02ba 00       		.byte	0
 33091 02bb 00       		.byte	0
 33092 02bc 2F       		.uleb128 0x2f
 33093 02bd 2E       		.uleb128 0x2e
 33094 02be 01       		.byte	0x1
 33095 02bf 3F       		.uleb128 0x3f
 33096 02c0 19       		.uleb128 0x19
 33097 02c1 03       		.uleb128 0x3
 33098 02c2 0E       		.uleb128 0xe
 33099 02c3 3A       		.uleb128 0x3a
 33100 02c4 0B       		.uleb128 0xb
 33101 02c5 3B       		.uleb128 0x3b
 33102 02c6 05       		.uleb128 0x5
 33103 02c7 49       		.uleb128 0x49
 33104 02c8 13       		.uleb128 0x13
 33105 02c9 11       		.uleb128 0x11
 33106 02ca 01       		.uleb128 0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 704


 33107 02cb 12       		.uleb128 0x12
 33108 02cc 06       		.uleb128 0x6
 33109 02cd 40       		.uleb128 0x40
 33110 02ce 18       		.uleb128 0x18
 33111 02cf 9642     		.uleb128 0x2116
 33112 02d1 19       		.uleb128 0x19
 33113 02d2 01       		.uleb128 0x1
 33114 02d3 13       		.uleb128 0x13
 33115 02d4 00       		.byte	0
 33116 02d5 00       		.byte	0
 33117 02d6 30       		.uleb128 0x30
 33118 02d7 2E       		.uleb128 0x2e
 33119 02d8 00       		.byte	0
 33120 02d9 3F       		.uleb128 0x3f
 33121 02da 19       		.uleb128 0x19
 33122 02db 03       		.uleb128 0x3
 33123 02dc 0E       		.uleb128 0xe
 33124 02dd 3A       		.uleb128 0x3a
 33125 02de 0B       		.uleb128 0xb
 33126 02df 3B       		.uleb128 0x3b
 33127 02e0 05       		.uleb128 0x5
 33128 02e1 11       		.uleb128 0x11
 33129 02e2 01       		.uleb128 0x1
 33130 02e3 12       		.uleb128 0x12
 33131 02e4 06       		.uleb128 0x6
 33132 02e5 40       		.uleb128 0x40
 33133 02e6 18       		.uleb128 0x18
 33134 02e7 9642     		.uleb128 0x2116
 33135 02e9 19       		.uleb128 0x19
 33136 02ea 00       		.byte	0
 33137 02eb 00       		.byte	0
 33138 02ec 31       		.uleb128 0x31
 33139 02ed 2E       		.uleb128 0x2e
 33140 02ee 01       		.byte	0x1
 33141 02ef 3F       		.uleb128 0x3f
 33142 02f0 19       		.uleb128 0x19
 33143 02f1 03       		.uleb128 0x3
 33144 02f2 0E       		.uleb128 0xe
 33145 02f3 3A       		.uleb128 0x3a
 33146 02f4 0B       		.uleb128 0xb
 33147 02f5 3B       		.uleb128 0x3b
 33148 02f6 05       		.uleb128 0x5
 33149 02f7 49       		.uleb128 0x49
 33150 02f8 13       		.uleb128 0x13
 33151 02f9 11       		.uleb128 0x11
 33152 02fa 01       		.uleb128 0x1
 33153 02fb 12       		.uleb128 0x12
 33154 02fc 06       		.uleb128 0x6
 33155 02fd 40       		.uleb128 0x40
 33156 02fe 18       		.uleb128 0x18
 33157 02ff 9742     		.uleb128 0x2117
 33158 0301 19       		.uleb128 0x19
 33159 0302 01       		.uleb128 0x1
 33160 0303 13       		.uleb128 0x13
 33161 0304 00       		.byte	0
 33162 0305 00       		.byte	0
 33163 0306 32       		.uleb128 0x32
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 705


 33164 0307 2E       		.uleb128 0x2e
 33165 0308 00       		.byte	0
 33166 0309 3F       		.uleb128 0x3f
 33167 030a 19       		.uleb128 0x19
 33168 030b 03       		.uleb128 0x3
 33169 030c 0E       		.uleb128 0xe
 33170 030d 3A       		.uleb128 0x3a
 33171 030e 0B       		.uleb128 0xb
 33172 030f 3B       		.uleb128 0x3b
 33173 0310 05       		.uleb128 0x5
 33174 0311 11       		.uleb128 0x11
 33175 0312 01       		.uleb128 0x1
 33176 0313 12       		.uleb128 0x12
 33177 0314 06       		.uleb128 0x6
 33178 0315 40       		.uleb128 0x40
 33179 0316 18       		.uleb128 0x18
 33180 0317 9742     		.uleb128 0x2117
 33181 0319 19       		.uleb128 0x19
 33182 031a 00       		.byte	0
 33183 031b 00       		.byte	0
 33184 031c 33       		.uleb128 0x33
 33185 031d 34       		.uleb128 0x34
 33186 031e 00       		.byte	0
 33187 031f 03       		.uleb128 0x3
 33188 0320 0E       		.uleb128 0xe
 33189 0321 3A       		.uleb128 0x3a
 33190 0322 0B       		.uleb128 0xb
 33191 0323 3B       		.uleb128 0x3b
 33192 0324 05       		.uleb128 0x5
 33193 0325 49       		.uleb128 0x49
 33194 0326 13       		.uleb128 0x13
 33195 0327 3F       		.uleb128 0x3f
 33196 0328 19       		.uleb128 0x19
 33197 0329 3C       		.uleb128 0x3c
 33198 032a 19       		.uleb128 0x19
 33199 032b 00       		.byte	0
 33200 032c 00       		.byte	0
 33201 032d 34       		.uleb128 0x34
 33202 032e 34       		.uleb128 0x34
 33203 032f 00       		.byte	0
 33204 0330 03       		.uleb128 0x3
 33205 0331 0E       		.uleb128 0xe
 33206 0332 3A       		.uleb128 0x3a
 33207 0333 0B       		.uleb128 0xb
 33208 0334 3B       		.uleb128 0x3b
 33209 0335 0B       		.uleb128 0xb
 33210 0336 49       		.uleb128 0x49
 33211 0337 13       		.uleb128 0x13
 33212 0338 3F       		.uleb128 0x3f
 33213 0339 19       		.uleb128 0x19
 33214 033a 02       		.uleb128 0x2
 33215 033b 18       		.uleb128 0x18
 33216 033c 00       		.byte	0
 33217 033d 00       		.byte	0
 33218 033e 00       		.byte	0
 33219              		.section	.debug_aranges,"",%progbits
 33220 0000 DC010000 		.4byte	0x1dc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 706


 33221 0004 0200     		.2byte	0x2
 33222 0006 00000000 		.4byte	.Ldebug_info0
 33223 000a 04       		.byte	0x4
 33224 000b 00       		.byte	0
 33225 000c 0000     		.2byte	0
 33226 000e 0000     		.2byte	0
 33227 0010 00000000 		.4byte	.LFB64
 33228 0014 00050000 		.4byte	.LFE64-.LFB64
 33229 0018 00000000 		.4byte	.LFB65
 33230 001c 22000000 		.4byte	.LFE65-.LFB65
 33231 0020 00000000 		.4byte	.LFB66
 33232 0024 34010000 		.4byte	.LFE66-.LFB66
 33233 0028 00000000 		.4byte	.LFB67
 33234 002c A2320000 		.4byte	.LFE67-.LFB67
 33235 0030 00000000 		.4byte	.LFB68
 33236 0034 3C190000 		.4byte	.LFE68-.LFB68
 33237 0038 00000000 		.4byte	.LFB69
 33238 003c DC140000 		.4byte	.LFE69-.LFB69
 33239 0040 00000000 		.4byte	.LFB70
 33240 0044 F40D0000 		.4byte	.LFE70-.LFB70
 33241 0048 00000000 		.4byte	.LFB71
 33242 004c 90000000 		.4byte	.LFE71-.LFB71
 33243 0050 00000000 		.4byte	.LFB72
 33244 0054 98210000 		.4byte	.LFE72-.LFB72
 33245 0058 00000000 		.4byte	.LFB73
 33246 005c BC030000 		.4byte	.LFE73-.LFB73
 33247 0060 00000000 		.4byte	.LFB74
 33248 0064 80120000 		.4byte	.LFE74-.LFB74
 33249 0068 00000000 		.4byte	.LFB75
 33250 006c C8000000 		.4byte	.LFE75-.LFB75
 33251 0070 00000000 		.4byte	.LFB76
 33252 0074 30010000 		.4byte	.LFE76-.LFB76
 33253 0078 00000000 		.4byte	.LFB77
 33254 007c 28000000 		.4byte	.LFE77-.LFB77
 33255 0080 00000000 		.4byte	.LFB78
 33256 0084 F0000000 		.4byte	.LFE78-.LFB78
 33257 0088 00000000 		.4byte	.LFB79
 33258 008c 74030000 		.4byte	.LFE79-.LFB79
 33259 0090 00000000 		.4byte	.LFB80
 33260 0094 84000000 		.4byte	.LFE80-.LFB80
 33261 0098 00000000 		.4byte	.LFB81
 33262 009c 88000000 		.4byte	.LFE81-.LFB81
 33263 00a0 00000000 		.4byte	.LFB82
 33264 00a4 A0000000 		.4byte	.LFE82-.LFB82
 33265 00a8 00000000 		.4byte	.LFB83
 33266 00ac 3E000000 		.4byte	.LFE83-.LFB83
 33267 00b0 00000000 		.4byte	.LFB84
 33268 00b4 2E000000 		.4byte	.LFE84-.LFB84
 33269 00b8 00000000 		.4byte	.LFB85
 33270 00bc 98000000 		.4byte	.LFE85-.LFB85
 33271 00c0 00000000 		.4byte	.LFB86
 33272 00c4 80000000 		.4byte	.LFE86-.LFB86
 33273 00c8 00000000 		.4byte	.LFB87
 33274 00cc 5C000000 		.4byte	.LFE87-.LFB87
 33275 00d0 00000000 		.4byte	.LFB88
 33276 00d4 24060000 		.4byte	.LFE88-.LFB88
 33277 00d8 00000000 		.4byte	.LFB89
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 707


 33278 00dc 38020000 		.4byte	.LFE89-.LFB89
 33279 00e0 00000000 		.4byte	.LFB90
 33280 00e4 28000000 		.4byte	.LFE90-.LFB90
 33281 00e8 00000000 		.4byte	.LFB91
 33282 00ec 78000000 		.4byte	.LFE91-.LFB91
 33283 00f0 00000000 		.4byte	.LFB92
 33284 00f4 B0000000 		.4byte	.LFE92-.LFB92
 33285 00f8 00000000 		.4byte	.LFB93
 33286 00fc 28010000 		.4byte	.LFE93-.LFB93
 33287 0100 00000000 		.4byte	.LFB94
 33288 0104 B8000000 		.4byte	.LFE94-.LFB94
 33289 0108 00000000 		.4byte	.LFB95
 33290 010c B8000000 		.4byte	.LFE95-.LFB95
 33291 0110 00000000 		.4byte	.LFB96
 33292 0114 5C000000 		.4byte	.LFE96-.LFB96
 33293 0118 00000000 		.4byte	.LFB97
 33294 011c 44020000 		.4byte	.LFE97-.LFB97
 33295 0120 00000000 		.4byte	.LFB98
 33296 0124 BC000000 		.4byte	.LFE98-.LFB98
 33297 0128 00000000 		.4byte	.LFB99
 33298 012c 5C000000 		.4byte	.LFE99-.LFB99
 33299 0130 00000000 		.4byte	.LFB100
 33300 0134 38010000 		.4byte	.LFE100-.LFB100
 33301 0138 00000000 		.4byte	.LFB101
 33302 013c EC000000 		.4byte	.LFE101-.LFB101
 33303 0140 00000000 		.4byte	.LFB102
 33304 0144 64000000 		.4byte	.LFE102-.LFB102
 33305 0148 00000000 		.4byte	.LFB103
 33306 014c A8000000 		.4byte	.LFE103-.LFB103
 33307 0150 00000000 		.4byte	.LFB104
 33308 0154 34000000 		.4byte	.LFE104-.LFB104
 33309 0158 00000000 		.4byte	.LFB105
 33310 015c 20000000 		.4byte	.LFE105-.LFB105
 33311 0160 00000000 		.4byte	.LFB106
 33312 0164 A0000000 		.4byte	.LFE106-.LFB106
 33313 0168 00000000 		.4byte	.LFB107
 33314 016c BC010000 		.4byte	.LFE107-.LFB107
 33315 0170 00000000 		.4byte	.LFB108
 33316 0174 60000000 		.4byte	.LFE108-.LFB108
 33317 0178 00000000 		.4byte	.LFB109
 33318 017c 98050000 		.4byte	.LFE109-.LFB109
 33319 0180 00000000 		.4byte	.LFB110
 33320 0184 8C000000 		.4byte	.LFE110-.LFB110
 33321 0188 00000000 		.4byte	.LFB111
 33322 018c EC000000 		.4byte	.LFE111-.LFB111
 33323 0190 00000000 		.4byte	.LFB112
 33324 0194 5C000000 		.4byte	.LFE112-.LFB112
 33325 0198 00000000 		.4byte	.LFB113
 33326 019c C0000000 		.4byte	.LFE113-.LFB113
 33327 01a0 00000000 		.4byte	.LFB114
 33328 01a4 54010000 		.4byte	.LFE114-.LFB114
 33329 01a8 00000000 		.4byte	.LFB115
 33330 01ac 12000000 		.4byte	.LFE115-.LFB115
 33331 01b0 00000000 		.4byte	.LFB116
 33332 01b4 64010000 		.4byte	.LFE116-.LFB116
 33333 01b8 00000000 		.4byte	.LFB117
 33334 01bc 12000000 		.4byte	.LFE117-.LFB117
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 708


 33335 01c0 00000000 		.4byte	.LFB118
 33336 01c4 1A000000 		.4byte	.LFE118-.LFB118
 33337 01c8 00000000 		.4byte	.LFB119
 33338 01cc 0C000000 		.4byte	.LFE119-.LFB119
 33339 01d0 00000000 		.4byte	.LFB120
 33340 01d4 0C000000 		.4byte	.LFE120-.LFB120
 33341 01d8 00000000 		.4byte	0
 33342 01dc 00000000 		.4byte	0
 33343              		.section	.debug_ranges,"",%progbits
 33344              	.Ldebug_ranges0:
 33345 0000 00000000 		.4byte	.LFB64
 33346 0004 00050000 		.4byte	.LFE64
 33347 0008 00000000 		.4byte	.LFB65
 33348 000c 22000000 		.4byte	.LFE65
 33349 0010 00000000 		.4byte	.LFB66
 33350 0014 34010000 		.4byte	.LFE66
 33351 0018 00000000 		.4byte	.LFB67
 33352 001c A2320000 		.4byte	.LFE67
 33353 0020 00000000 		.4byte	.LFB68
 33354 0024 3C190000 		.4byte	.LFE68
 33355 0028 00000000 		.4byte	.LFB69
 33356 002c DC140000 		.4byte	.LFE69
 33357 0030 00000000 		.4byte	.LFB70
 33358 0034 F40D0000 		.4byte	.LFE70
 33359 0038 00000000 		.4byte	.LFB71
 33360 003c 90000000 		.4byte	.LFE71
 33361 0040 00000000 		.4byte	.LFB72
 33362 0044 98210000 		.4byte	.LFE72
 33363 0048 00000000 		.4byte	.LFB73
 33364 004c BC030000 		.4byte	.LFE73
 33365 0050 00000000 		.4byte	.LFB74
 33366 0054 80120000 		.4byte	.LFE74
 33367 0058 00000000 		.4byte	.LFB75
 33368 005c C8000000 		.4byte	.LFE75
 33369 0060 00000000 		.4byte	.LFB76
 33370 0064 30010000 		.4byte	.LFE76
 33371 0068 00000000 		.4byte	.LFB77
 33372 006c 28000000 		.4byte	.LFE77
 33373 0070 00000000 		.4byte	.LFB78
 33374 0074 F0000000 		.4byte	.LFE78
 33375 0078 00000000 		.4byte	.LFB79
 33376 007c 74030000 		.4byte	.LFE79
 33377 0080 00000000 		.4byte	.LFB80
 33378 0084 84000000 		.4byte	.LFE80
 33379 0088 00000000 		.4byte	.LFB81
 33380 008c 88000000 		.4byte	.LFE81
 33381 0090 00000000 		.4byte	.LFB82
 33382 0094 A0000000 		.4byte	.LFE82
 33383 0098 00000000 		.4byte	.LFB83
 33384 009c 3E000000 		.4byte	.LFE83
 33385 00a0 00000000 		.4byte	.LFB84
 33386 00a4 2E000000 		.4byte	.LFE84
 33387 00a8 00000000 		.4byte	.LFB85
 33388 00ac 98000000 		.4byte	.LFE85
 33389 00b0 00000000 		.4byte	.LFB86
 33390 00b4 80000000 		.4byte	.LFE86
 33391 00b8 00000000 		.4byte	.LFB87
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 709


 33392 00bc 5C000000 		.4byte	.LFE87
 33393 00c0 00000000 		.4byte	.LFB88
 33394 00c4 24060000 		.4byte	.LFE88
 33395 00c8 00000000 		.4byte	.LFB89
 33396 00cc 38020000 		.4byte	.LFE89
 33397 00d0 00000000 		.4byte	.LFB90
 33398 00d4 28000000 		.4byte	.LFE90
 33399 00d8 00000000 		.4byte	.LFB91
 33400 00dc 78000000 		.4byte	.LFE91
 33401 00e0 00000000 		.4byte	.LFB92
 33402 00e4 B0000000 		.4byte	.LFE92
 33403 00e8 00000000 		.4byte	.LFB93
 33404 00ec 28010000 		.4byte	.LFE93
 33405 00f0 00000000 		.4byte	.LFB94
 33406 00f4 B8000000 		.4byte	.LFE94
 33407 00f8 00000000 		.4byte	.LFB95
 33408 00fc B8000000 		.4byte	.LFE95
 33409 0100 00000000 		.4byte	.LFB96
 33410 0104 5C000000 		.4byte	.LFE96
 33411 0108 00000000 		.4byte	.LFB97
 33412 010c 44020000 		.4byte	.LFE97
 33413 0110 00000000 		.4byte	.LFB98
 33414 0114 BC000000 		.4byte	.LFE98
 33415 0118 00000000 		.4byte	.LFB99
 33416 011c 5C000000 		.4byte	.LFE99
 33417 0120 00000000 		.4byte	.LFB100
 33418 0124 38010000 		.4byte	.LFE100
 33419 0128 00000000 		.4byte	.LFB101
 33420 012c EC000000 		.4byte	.LFE101
 33421 0130 00000000 		.4byte	.LFB102
 33422 0134 64000000 		.4byte	.LFE102
 33423 0138 00000000 		.4byte	.LFB103
 33424 013c A8000000 		.4byte	.LFE103
 33425 0140 00000000 		.4byte	.LFB104
 33426 0144 34000000 		.4byte	.LFE104
 33427 0148 00000000 		.4byte	.LFB105
 33428 014c 20000000 		.4byte	.LFE105
 33429 0150 00000000 		.4byte	.LFB106
 33430 0154 A0000000 		.4byte	.LFE106
 33431 0158 00000000 		.4byte	.LFB107
 33432 015c BC010000 		.4byte	.LFE107
 33433 0160 00000000 		.4byte	.LFB108
 33434 0164 60000000 		.4byte	.LFE108
 33435 0168 00000000 		.4byte	.LFB109
 33436 016c 98050000 		.4byte	.LFE109
 33437 0170 00000000 		.4byte	.LFB110
 33438 0174 8C000000 		.4byte	.LFE110
 33439 0178 00000000 		.4byte	.LFB111
 33440 017c EC000000 		.4byte	.LFE111
 33441 0180 00000000 		.4byte	.LFB112
 33442 0184 5C000000 		.4byte	.LFE112
 33443 0188 00000000 		.4byte	.LFB113
 33444 018c C0000000 		.4byte	.LFE113
 33445 0190 00000000 		.4byte	.LFB114
 33446 0194 54010000 		.4byte	.LFE114
 33447 0198 00000000 		.4byte	.LFB115
 33448 019c 12000000 		.4byte	.LFE115
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 710


 33449 01a0 00000000 		.4byte	.LFB116
 33450 01a4 64010000 		.4byte	.LFE116
 33451 01a8 00000000 		.4byte	.LFB117
 33452 01ac 12000000 		.4byte	.LFE117
 33453 01b0 00000000 		.4byte	.LFB118
 33454 01b4 1A000000 		.4byte	.LFE118
 33455 01b8 00000000 		.4byte	.LFB119
 33456 01bc 0C000000 		.4byte	.LFE119
 33457 01c0 00000000 		.4byte	.LFB120
 33458 01c4 0C000000 		.4byte	.LFE120
 33459 01c8 00000000 		.4byte	0
 33460 01cc 00000000 		.4byte	0
 33461              		.section	.debug_line,"",%progbits
 33462              	.Ldebug_line0:
 33463 0000 CB1E0000 		.section	.debug_str,"MS",%progbits,1
 33463      0200C001 
 33463      00000201 
 33463      FB0E0D00 
 33463      01010101 
 33464              	.LASF214:
 33465 0000 696E666F 		.ascii	"infoSend\000"
 33465      53656E64 
 33465      00
 33466              	.LASF403:
 33467 0009 433A5C55 		.ascii	"C:\\Users\\Mattia\\Documents\\GitHub\\SoftHandPRO-a"
 33467      73657273 
 33467      5C4D6174 
 33467      7469615C 
 33467      446F6375 
 33468 0037 6E642D47 		.ascii	"nd-Generic-FW-PSoC5\\Generic.cydsn\000"
 33468      656E6572 
 33468      69632D46 
 33468      572D5053 
 33468      6F43355C 
 33469              	.LASF266:
 33470 0059 69645F73 		.ascii	"id_str\000"
 33470      747200
 33471              	.LASF248:
 33472 0060 66736D5F 		.ascii	"fsm_activation_mode_menu\000"
 33472      61637469 
 33472      76617469 
 33472      6F6E5F6D 
 33472      6F64655F 
 33473              	.LASF25:
 33474 0079 73697A65 		.ascii	"sizetype\000"
 33474      74797065 
 33474      00
 33475              	.LASF33:
 33476 0082 434D445F 		.ascii	"CMD_INIT_MEM\000"
 33476      494E4954 
 33476      5F4D454D 
 33476      00
 33477              	.LASF337:
 33478 008f 676C5F63 		.ascii	"gl_c\000"
 33478      00
 33479              	.LASF194:
 33480 0094 77726973 		.ascii	"wrist_direction_association\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 711


 33480      745F6469 
 33480      72656374 
 33480      696F6E5F 
 33480      6173736F 
 33481              	.LASF64:
 33482 00b0 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS_ADV\000"
 33482      545F4D4F 
 33482      44455F45 
 33482      4D475F46 
 33482      4346535F 
 33483              	.LASF36:
 33484 00c8 434D445F 		.ascii	"CMD_ACTIVATE\000"
 33484      41435449 
 33484      56415445 
 33484      00
 33485              	.LASF199:
 33486 00d5 75736572 		.ascii	"user\000"
 33486      00
 33487              	.LASF352:
 33488 00da 665F6572 		.ascii	"f_err_emg_1\000"
 33488      725F656D 
 33488      675F3100 
 33489              	.LASF353:
 33490 00e6 665F6572 		.ascii	"f_err_emg_2\000"
 33490      725F656D 
 33490      675F3200 
 33491              	.LASF358:
 33492 00f2 73746F70 		.ascii	"stop_master_device\000"
 33492      5F6D6173 
 33492      7465725F 
 33492      64657669 
 33492      636500
 33493              	.LASF11:
 33494 0105 696E7433 		.ascii	"int32_t\000"
 33494      325F7400 
 33495              	.LASF369:
 33496 010d 675F7278 		.ascii	"g_rx\000"
 33496      00
 33497              	.LASF101:
 33498 0112 73745F64 		.ascii	"st_data\000"
 33498      61746100 
 33499              	.LASF288:
 33500 011a 685F7469 		.ascii	"h_time\000"
 33500      6D6500
 33501              	.LASF302:
 33502 0121 77726974 		.ascii	"writeStatus\000"
 33502      65537461 
 33502      74757300 
 33503              	.LASF15:
 33504 012d 75696E74 		.ascii	"uint32\000"
 33504      333200
 33505              	.LASF357:
 33506 0134 636D645F 		.ascii	"cmd_set_baudrate\000"
 33506      7365745F 
 33506      62617564 
 33506      72617465 
 33506      00
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 712


 33507              	.LASF346:
 33508 0145 6169725F 		.ascii	"air_chambers_control\000"
 33508      6368616D 
 33508      62657273 
 33508      5F636F6E 
 33508      74726F6C 
 33509              	.LASF274:
 33510 015a 7370695F 		.ascii	"spi_read_delay_str_len\000"
 33510      72656164 
 33510      5F64656C 
 33510      61795F73 
 33510      74725F6C 
 33511              	.LASF200:
 33512 0171 4A4F595F 		.ascii	"JOY_spec\000"
 33512      73706563 
 33512      00
 33513              	.LASF276:
 33514 017a 70726570 		.ascii	"prepare_generic_info\000"
 33514      6172655F 
 33514      67656E65 
 33514      7269635F 
 33514      696E666F 
 33515              	.LASF137:
 33516 018f 706F735F 		.ascii	"pos_lim_inf\000"
 33516      6C696D5F 
 33516      696E6600 
 33517              	.LASF240:
 33518 019b 5345434F 		.ascii	"SECOND_MOTOR_IDX\000"
 33518      4E445F4D 
 33518      4F544F52 
 33518      5F494458 
 33518      00
 33519              	.LASF330:
 33520 01ac 636D645F 		.ascii	"cmd_get_inputs\000"
 33520      6765745F 
 33520      696E7075 
 33520      747300
 33521              	.LASF63:
 33522 01bb 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS\000"
 33522      545F4D4F 
 33522      44455F45 
 33522      4D475F46 
 33522      43465300 
 33523              	.LASF141:
 33524 01cf 63757272 		.ascii	"curr_lookup\000"
 33524      5F6C6F6F 
 33524      6B757000 
 33525              	.LASF109:
 33526 01db 72657374 		.ascii	"rest_counter\000"
 33526      5F636F75 
 33526      6E746572 
 33526      00
 33527              	.LASF335:
 33528 01e8 636D645F 		.ascii	"cmd_get_imu_readings\000"
 33528      6765745F 
 33528      696D755F 
 33528      72656164 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 713


 33528      696E6773 
 33529              	.LASF184:
 33530 01fd 73745F4D 		.ascii	"st_MASTER_spec\000"
 33530      41535445 
 33530      525F7370 
 33530      656300
 33531              	.LASF269:
 33532 020c 69645F73 		.ascii	"id_str_len\000"
 33532      74725F6C 
 33532      656E00
 33533              	.LASF62:
 33534 0217 494E5055 		.ascii	"INPUT_MODE_EMG_INTEGRAL\000"
 33534      545F4D4F 
 33534      44455F45 
 33534      4D475F49 
 33534      4E544547 
 33535              	.LASF242:
 33536 022f 6D5F746D 		.ascii	"m_tmp\000"
 33536      7000
 33537              	.LASF287:
 33538 0235 765F6964 		.ascii	"v_idx\000"
 33538      7800
 33539              	.LASF16:
 33540 023b 696E7438 		.ascii	"int8\000"
 33540      00
 33541              	.LASF219:
 33542 0240 6765745F 		.ascii	"get_param_list\000"
 33542      70617261 
 33542      6D5F6C69 
 33542      737400
 33543              	.LASF315:
 33544 024f 636D645F 		.ascii	"cmd_get_accelerations\000"
 33544      6765745F 
 33544      61636365 
 33544      6C657261 
 33544      74696F6E 
 33545              	.LASF334:
 33546 0265 636D645F 		.ascii	"cmd_get_emg\000"
 33546      6765745F 
 33546      656D6700 
 33547              	.LASF156:
 33548 0271 73745F65 		.ascii	"st_emg\000"
 33548      6D6700
 33549              	.LASF107:
 33550 0278 706F7369 		.ascii	"position_hist\000"
 33550      74696F6E 
 33550      5F686973 
 33550      7400
 33551              	.LASF207:
 33552 0286 74656D70 		.ascii	"temp_value\000"
 33552      5F76616C 
 33552      756500
 33553              	.LASF286:
 33554 0291 7374725F 		.ascii	"str_data\000"
 33554      64617461 
 33554      00
 33555              	.LASF405:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 714


 33556 029a 72657375 		.ascii	"result\000"
 33556      6C7400
 33557              	.LASF268:
 33558 02a1 7370695F 		.ascii	"spi_read_delay_str\000"
 33558      72656164 
 33558      5F64656C 
 33558      61795F73 
 33558      747200
 33559              	.LASF191:
 33560 02b4 73745F57 		.ascii	"st_WR_spec\000"
 33560      525F7370 
 33560      656300
 33561              	.LASF104:
 33562 02bf 72656164 		.ascii	"ready\000"
 33562      7900
 33563              	.LASF153:
 33564 02c5 456E635F 		.ascii	"Enc_idx_use_for_control\000"
 33564      6964785F 
 33564      7573655F 
 33564      666F725F 
 33564      636F6E74 
 33565              	.LASF49:
 33566 02dd 434D445F 		.ascii	"CMD_GET_JOYSTICK\000"
 33566      4745545F 
 33566      4A4F5953 
 33566      5449434B 
 33566      00
 33567              	.LASF61:
 33568 02ee 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL\000"
 33568      545F4D4F 
 33568      44455F45 
 33568      4D475F50 
 33568      524F504F 
 33569              	.LASF118:
 33570 030a 7573655F 		.ascii	"use_2nd_motor_flag\000"
 33570      326E645F 
 33570      6D6F746F 
 33570      725F666C 
 33570      616700
 33571              	.LASF326:
 33572 031d 745F7374 		.ascii	"t_start\000"
 33572      61727400 
 33573              	.LASF163:
 33574 0325 72656164 		.ascii	"read_imu_flag\000"
 33574      5F696D75 
 33574      5F666C61 
 33574      6700
 33575              	.LASF171:
 33576 0333 7265636F 		.ascii	"record_EMG_history_on_SD\000"
 33576      72645F45 
 33576      4D475F68 
 33576      6973746F 
 33576      72795F6F 
 33577              	.LASF373:
 33578 034c 74696D65 		.ascii	"timer_value\000"
 33578      725F7661 
 33578      6C756500 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 715


 33579              	.LASF4:
 33580 0358 6C6F6E67 		.ascii	"long int\000"
 33580      20696E74 
 33580      00
 33581              	.LASF197:
 33582 0361 756E7573 		.ascii	"unused_bytes1\000"
 33582      65645F62 
 33582      79746573 
 33582      3100
 33583              	.LASF356:
 33584 036f 6D6F746F 		.ascii	"motor_idx\000"
 33584      725F6964 
 33584      7800
 33585              	.LASF117:
 33586 0379 72657365 		.ascii	"reset_counters\000"
 33586      745F636F 
 33586      756E7465 
 33586      727300
 33587              	.LASF174:
 33588 0388 75736572 		.ascii	"user_emg\000"
 33588      5F656D67 
 33588      00
 33589              	.LASF343:
 33590 0391 636D645F 		.ascii	"cmd_get_SD_file\000"
 33590      6765745F 
 33590      53445F66 
 33590      696C6500 
 33591              	.LASF312:
 33592 03a1 7365745A 		.ascii	"setZeros\000"
 33592      65726F73 
 33592      00
 33593              	.LASF122:
 33594 03aa 756E7573 		.ascii	"unused_bytes\000"
 33594      65645F62 
 33594      79746573 
 33594      00
 33595              	.LASF203:
 33596 03b7 61636365 		.ascii	"accel_value\000"
 33596      6C5F7661 
 33596      6C756500 
 33597              	.LASF223:
 33598 03c3 4E554D5F 		.ascii	"NUM_ITEMS\000"
 33598      4954454D 
 33598      5300
 33599              	.LASF105:
 33600 03cd 73745F63 		.ascii	"st_counters\000"
 33600      6F756E74 
 33600      65727300 
 33601              	.LASF246:
 33602 03d9 4D454D5F 		.ascii	"MEM_P\000"
 33602      5000
 33603              	.LASF19:
 33604 03df 666C6F61 		.ascii	"float32\000"
 33604      74333200 
 33605              	.LASF341:
 33606 03e7 636D645F 		.ascii	"cmd_get_ADC_map\000"
 33606      6765745F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 716


 33606      4144435F 
 33606      6D617000 
 33607              	.LASF41:
 33608 03f7 434D445F 		.ascii	"CMD_GET_CURRENTS\000"
 33608      4745545F 
 33608      43555252 
 33608      454E5453 
 33608      00
 33609              	.LASF285:
 33610 0408 70726570 		.ascii	"prepare_SD_EMG_history\000"
 33610      6172655F 
 33610      53445F45 
 33610      4D475F68 
 33610      6973746F 
 33611              	.LASF106:
 33612 041f 656D675F 		.ascii	"emg_counter\000"
 33612      636F756E 
 33612      74657200 
 33613              	.LASF342:
 33614 042b 636D645F 		.ascii	"cmd_get_ADC_raw\000"
 33614      6765745F 
 33614      4144435F 
 33614      72617700 
 33615              	.LASF390:
 33616 043b 73645061 		.ascii	"sdParam\000"
 33616      72616D00 
 33617              	.LASF256:
 33618 0443 6175785F 		.ascii	"aux_float2\000"
 33618      666C6F61 
 33618      743200
 33619              	.LASF329:
 33620 044e 636D645F 		.ascii	"cmd_ping\000"
 33620      70696E67 
 33620      00
 33621              	.LASF275:
 33622 0457 7370695F 		.ascii	"spi_delay_menu_len\000"
 33622      64656C61 
 33622      795F6D65 
 33622      6E755F6C 
 33622      656E00
 33623              	.LASF254:
 33624 046a 7365745F 		.ascii	"set_custom_param\000"
 33624      63757374 
 33624      6F6D5F70 
 33624      6172616D 
 33624      00
 33625              	.LASF311:
 33626 047b 6D656D49 		.ascii	"memInit_OtbkActWristMs\000"
 33626      6E69745F 
 33626      4F74626B 
 33626      41637457 
 33626      72697374 
 33627              	.LASF0:
 33628 0492 7369676E 		.ascii	"signed char\000"
 33628      65642063 
 33628      68617200 
 33629              	.LASF173:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 717


 33630 049e 75736572 		.ascii	"user_code_string\000"
 33630      5F636F64 
 33630      655F7374 
 33630      72696E67 
 33630      00
 33631              	.LASF208:
 33632 04af 73745F63 		.ascii	"st_calib\000"
 33632      616C6962 
 33632      00
 33633              	.LASF350:
 33634 04b8 6572725F 		.ascii	"err_emg_1\000"
 33634      656D675F 
 33634      3100
 33635              	.LASF300:
 33636 04c2 6D656D53 		.ascii	"memStore\000"
 33636      746F7265 
 33636      00
 33637              	.LASF345:
 33638 04cb 66696C65 		.ascii	"filename\000"
 33638      6E616D65 
 33638      00
 33639              	.LASF72:
 33640 04d4 6D6F746F 		.ascii	"motor_supply_type\000"
 33640      725F7375 
 33640      70706C79 
 33640      5F747970 
 33640      6500
 33641              	.LASF328:
 33642 04e6 72656164 		.ascii	"read_flag\000"
 33642      5F666C61 
 33642      6700
 33643              	.LASF382:
 33644 04f0 4144435F 		.ascii	"ADC_buf\000"
 33644      62756600 
 33645              	.LASF379:
 33646 04f8 696E7465 		.ascii	"interrupt_flag\000"
 33646      72727570 
 33646      745F666C 
 33646      616700
 33647              	.LASF280:
 33648 0507 73746570 		.ascii	"step\000"
 33648      00
 33649              	.LASF1:
 33650 050c 756E7369 		.ascii	"unsigned char\000"
 33650      676E6564 
 33650      20636861 
 33650      7200
 33651              	.LASF147:
 33652 051a 6E6F745F 		.ascii	"not_revers_motor_flag\000"
 33652      72657665 
 33652      72735F6D 
 33652      6F746F72 
 33652      5F666C61 
 33653              	.LASF362:
 33654 0530 675F7265 		.ascii	"g_refNew\000"
 33654      664E6577 
 33654      00
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 718


 33655              	.LASF116:
 33656 0539 72696768 		.ascii	"right_left\000"
 33656      745F6C65 
 33656      667400
 33657              	.LASF29:
 33658 0544 434D445F 		.ascii	"CMD_STORE_DEFAULT_PARAMS\000"
 33658      53544F52 
 33658      455F4445 
 33658      4641554C 
 33658      545F5041 
 33659              	.LASF145:
 33660 055d 656E636F 		.ascii	"encoder_line\000"
 33660      6465725F 
 33660      6C696E65 
 33660      00
 33661              	.LASF270:
 33662 056a 6E5F696D 		.ascii	"n_imu_str_len\000"
 33662      755F7374 
 33662      725F6C65 
 33662      6E00
 33663              	.LASF273:
 33664 0578 696D755F 		.ascii	"imu_table_str_len\000"
 33664      7461626C 
 33664      655F7374 
 33664      725F6C65 
 33664      6E00
 33665              	.LASF298:
 33666 058a 76616C75 		.ascii	"value\000"
 33666      6500
 33667              	.LASF202:
 33668 0590 666C6167 		.ascii	"flags\000"
 33668      7300
 33669              	.LASF100:
 33670 0596 70726573 		.ascii	"pressure\000"
 33670      73757265 
 33670      00
 33671              	.LASF37:
 33672 059f 434D445F 		.ascii	"CMD_GET_ACTIVATE\000"
 33672      4745545F 
 33672      41435449 
 33672      56415445 
 33672      00
 33673              	.LASF22:
 33674 05b0 63686172 		.ascii	"char\000"
 33674      00
 33675              	.LASF140:
 33676 05b5 6D61785F 		.ascii	"max_step_pos\000"
 33676      73746570 
 33676      5F706F73 
 33676      00
 33677              	.LASF395:
 33678 05c2 675F696D 		.ascii	"g_imu\000"
 33678      7500
 33679              	.LASF304:
 33680 05c8 7265745F 		.ascii	"ret_val\000"
 33680      76616C00 
 33681              	.LASF253:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 719


 33682 05d0 6D656E75 		.ascii	"menu_idx\000"
 33682      5F696478 
 33682      00
 33683              	.LASF262:
 33684 05d9 73746172 		.ascii	"start_byte\000"
 33684      745F6279 
 33684      746500
 33685              	.LASF259:
 33686 05e4 6E756D5F 		.ascii	"num_mag_cal_params\000"
 33686      6D61675F 
 33686      63616C5F 
 33686      70617261 
 33686      6D7300
 33687              	.LASF146:
 33688 05f7 70776D5F 		.ascii	"pwm_rate_limiter\000"
 33688      72617465 
 33688      5F6C696D 
 33688      69746572 
 33688      00
 33689              	.LASF126:
 33690 0608 6B5F645F 		.ascii	"k_d_c\000"
 33690      6300
 33691              	.LASF99:
 33692 060e 73745F66 		.ascii	"st_fb_meas\000"
 33692      625F6D65 
 33692      617300
 33693              	.LASF216:
 33694 0619 7061636B 		.ascii	"packet_string\000"
 33694      65745F73 
 33694      7472696E 
 33694      6700
 33695              	.LASF151:
 33696 0627 6D5F6D75 		.ascii	"m_mult\000"
 33696      6C7400
 33697              	.LASF125:
 33698 062e 6B5F695F 		.ascii	"k_i_c\000"
 33698      6300
 33699              	.LASF301:
 33700 0634 64697370 		.ascii	"displacement\000"
 33700      6C616365 
 33700      6D656E74 
 33700      00
 33701              	.LASF295:
 33702 0641 64617461 		.ascii	"data_length\000"
 33702      5F6C656E 
 33702      67746800 
 33703              	.LASF138:
 33704 064d 706F735F 		.ascii	"pos_lim_sup\000"
 33704      6C696D5F 
 33704      73757000 
 33705              	.LASF159:
 33706 0659 656D675F 		.ascii	"emg_speed\000"
 33706      73706565 
 33706      6400
 33707              	.LASF178:
 33708 0663 72657374 		.ascii	"rest_vel\000"
 33708      5F76656C 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 720


 33708      00
 33709              	.LASF229:
 33710 066c 7061636B 		.ascii	"packet_data\000"
 33710      65745F64 
 33710      61746100 
 33711              	.LASF113:
 33712 0678 73745F64 		.ascii	"st_device\000"
 33712      65766963 
 33712      6500
 33713              	.LASF388:
 33714 0682 7046696C 		.ascii	"pFile\000"
 33714      6500
 33715              	.LASF170:
 33716 0688 4144435F 		.ascii	"ADC_conf\000"
 33716      636F6E66 
 33716      00
 33717              	.LASF292:
 33718 0691 636F6D6D 		.ascii	"commWrite\000"
 33718      57726974 
 33718      6500
 33719              	.LASF359:
 33720 069b 64656163 		.ascii	"deactivate_slaves\000"
 33720      74697661 
 33720      74655F73 
 33720      6C617665 
 33720      7300
 33721              	.LASF303:
 33722 06ad 70616765 		.ascii	"pages\000"
 33722      7300
 33723              	.LASF307:
 33724 06b3 6D656D49 		.ascii	"memInit\000"
 33724      6E697400 
 33725              	.LASF128:
 33726 06bb 6B5F695F 		.ascii	"k_i_dl\000"
 33726      646C00
 33727              	.LASF38:
 33728 06c2 434D445F 		.ascii	"CMD_SET_INPUTS\000"
 33728      5345545F 
 33728      494E5055 
 33728      545300
 33729              	.LASF102:
 33730 06d1 62756666 		.ascii	"buffer\000"
 33730      657200
 33731              	.LASF130:
 33732 06d8 6B5F705F 		.ascii	"k_p_c_dl\000"
 33732      635F646C 
 33732      00
 33733              	.LASF313:
 33734 06e1 636D645F 		.ascii	"cmd_get_measurements\000"
 33734      6765745F 
 33734      6D656173 
 33734      7572656D 
 33734      656E7473 
 33735              	.LASF211:
 33736 06f6 73706565 		.ascii	"speed\000"
 33736      6400
 33737              	.LASF215:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 721


 33738 06fc 72785F63 		.ascii	"rx_cmd\000"
 33738      6D6400
 33739              	.LASF87:
 33740 0703 54595045 		.ascii	"TYPE_DOUBLE\000"
 33740      5F444F55 
 33740      424C4500 
 33741              	.LASF347:
 33742 070f 736C6176 		.ascii	"slave_motor_idx\000"
 33742      655F6D6F 
 33742      746F725F 
 33742      69647800 
 33743              	.LASF364:
 33744 071f 675F6D65 		.ascii	"g_meas\000"
 33744      617300
 33745              	.LASF387:
 33746 0726 456E636F 		.ascii	"Encoder_Check\000"
 33746      6465725F 
 33746      43686563 
 33746      6B00
 33747              	.LASF318:
 33748 0734 6C617374 		.ascii	"last_aux_int16\000"
 33748      5F617578 
 33748      5F696E74 
 33748      313600
 33749              	.LASF76:
 33750 0743 41434B5F 		.ascii	"ACK_ERROR\000"
 33750      4552524F 
 33750      5200
 33751              	.LASF384:
 33752 074d 64617461 		.ascii	"data_encoder_raw\000"
 33752      5F656E63 
 33752      6F646572 
 33752      5F726177 
 33752      00
 33753              	.LASF59:
 33754 075e 494E5055 		.ascii	"INPUT_MODE_EXTERNAL\000"
 33754      545F4D4F 
 33754      44455F45 
 33754      58544552 
 33754      4E414C00 
 33755              	.LASF244:
 33756 0772 696E6465 		.ascii	"index\000"
 33756      7800
 33757              	.LASF189:
 33758 0778 6D617869 		.ascii	"maximum_pressure_kPa\000"
 33758      6D756D5F 
 33758      70726573 
 33758      73757265 
 33758      5F6B5061 
 33759              	.LASF179:
 33760 078d 72657374 		.ascii	"rest_position_flag\000"
 33760      5F706F73 
 33760      6974696F 
 33760      6E5F666C 
 33760      616700
 33761              	.LASF181:
 33762 07a0 6A6F7973 		.ascii	"joystick_closure_speed\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 722


 33762      7469636B 
 33762      5F636C6F 
 33762      73757265 
 33762      5F737065 
 33763              	.LASF344:
 33764 07b7 66696C65 		.ascii	"filename_length\000"
 33764      6E616D65 
 33764      5F6C656E 
 33764      67746800 
 33765              	.LASF131:
 33766 07c7 6B5F695F 		.ascii	"k_i_c_dl\000"
 33766      635F646C 
 33766      00
 33767              	.LASF324:
 33768 07d0 636F6D6D 		.ascii	"commReadResCurrFromSH\000"
 33768      52656164 
 33768      52657343 
 33768      75727246 
 33768      726F6D53 
 33769              	.LASF323:
 33770 07e6 636D645F 		.ascii	"cmd_get_currents_for_cuff\000"
 33770      6765745F 
 33770      63757272 
 33770      656E7473 
 33770      5F666F72 
 33771              	.LASF265:
 33772 0800 6D61675F 		.ascii	"mag_param_str\000"
 33772      70617261 
 33772      6D5F7374 
 33772      7200
 33773              	.LASF381:
 33774 080e 72657365 		.ascii	"reset_PSoC_flag\000"
 33774      745F5053 
 33774      6F435F66 
 33774      6C616700 
 33775              	.LASF354:
 33776 081e 6F74626B 		.ascii	"otbk_act_wrist_control\000"
 33776      5F616374 
 33776      5F777269 
 33776      73745F63 
 33776      6F6E7472 
 33777              	.LASF88:
 33778 0835 54595045 		.ascii	"TYPE_STRING\000"
 33778      5F535452 
 33778      494E4700 
 33779              	.LASF71:
 33780 0841 43555252 		.ascii	"CURR_AND_POS_CONTROL\000"
 33780      5F414E44 
 33780      5F504F53 
 33780      5F434F4E 
 33780      54524F4C 
 33781              	.LASF28:
 33782 0856 434D445F 		.ascii	"CMD_STORE_PARAMS\000"
 33782      53544F52 
 33782      455F5041 
 33782      52414D53 
 33782      00
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 723


 33783              	.LASF226:
 33784 0867 50415241 		.ascii	"PARAMS_STR\000"
 33784      4D535F53 
 33784      545200
 33785              	.LASF209:
 33786 0872 656E6162 		.ascii	"enabled\000"
 33786      6C656400 
 33787              	.LASF7:
 33788 087a 6C6F6E67 		.ascii	"long unsigned int\000"
 33788      20756E73 
 33788      69676E65 
 33788      6420696E 
 33788      7400
 33789              	.LASF111:
 33790 088c 746F7461 		.ascii	"total_time_on\000"
 33790      6C5F7469 
 33790      6D655F6F 
 33790      6E00
 33791              	.LASF32:
 33792 089a 434D445F 		.ascii	"CMD_BOOTLOADER\000"
 33792      424F4F54 
 33792      4C4F4144 
 33792      455200
 33793              	.LASF183:
 33794 08a9 6A6F7973 		.ascii	"joystick_gains\000"
 33794      7469636B 
 33794      5F676169 
 33794      6E7300
 33795              	.LASF95:
 33796 08b8 686F6C64 		.ascii	"hold_curr\000"
 33796      5F637572 
 33796      7200
 33797              	.LASF65:
 33798 08c2 494E5055 		.ascii	"INPUT_MODE_JOYSTICK\000"
 33798      545F4D4F 
 33798      44455F4A 
 33798      4F595354 
 33798      49434B00 
 33799              	.LASF112:
 33800 08d6 746F7461 		.ascii	"total_time_rest\000"
 33800      6C5F7469 
 33800      6D655F72 
 33800      65737400 
 33801              	.LASF218:
 33802 08e6 7374725F 		.ascii	"str_sd_data\000"
 33802      73645F64 
 33802      61746100 
 33803              	.LASF133:
 33804 08f2 61637469 		.ascii	"activ\000"
 33804      7600
 33805              	.LASF228:
 33806 08f8 4D454E55 		.ascii	"MENU_STR\000"
 33806      5F535452 
 33806      00
 33807              	.LASF150:
 33808 0901 6D5F6F66 		.ascii	"m_off\000"
 33808      6600
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 724


 33809              	.LASF77:
 33810 0907 41434B5F 		.ascii	"ACK_OK\000"
 33810      4F4B00
 33811              	.LASF79:
 33812 090e 54595045 		.ascii	"TYPE_FLAG\000"
 33812      5F464C41 
 33812      4700
 33813              	.LASF206:
 33814 0918 71756174 		.ascii	"quat_value\000"
 33814      5F76616C 
 33814      756500
 33815              	.LASF261:
 33816 0923 7061636B 		.ascii	"packet_length\000"
 33816      65745F6C 
 33816      656E6774 
 33816      6800
 33817              	.LASF176:
 33818 0931 72657374 		.ascii	"rest_pos\000"
 33818      5F706F73 
 33818      00
 33819              	.LASF90:
 33820 093a 63757272 		.ascii	"curr\000"
 33820      00
 33821              	.LASF143:
 33822 093f 696E7075 		.ascii	"input_mode\000"
 33822      745F6D6F 
 33822      646500
 33823              	.LASF69:
 33824 094a 434F4E54 		.ascii	"CONTROL_PWM\000"
 33824      524F4C5F 
 33824      50574D00 
 33825              	.LASF43:
 33826 0956 434D445F 		.ascii	"CMD_GET_EMG\000"
 33826      4745545F 
 33826      454D4700 
 33827              	.LASF308:
 33828 0962 6D656D49 		.ascii	"memInit_SoftHandPro\000"
 33828      6E69745F 
 33828      536F6674 
 33828      48616E64 
 33828      50726F00 
 33829              	.LASF31:
 33830 0976 434D445F 		.ascii	"CMD_GET_INFO\000"
 33830      4745545F 
 33830      494E464F 
 33830      00
 33831              	.LASF257:
 33832 0983 6765745F 		.ascii	"get_IMU_param_list\000"
 33832      494D555F 
 33832      70617261 
 33832      6D5F6C69 
 33832      737400
 33833              	.LASF338:
 33834 0996 73696E67 		.ascii	"single_packet\000"
 33834      6C655F70 
 33834      61636B65 
 33834      7400
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 725


 33835              	.LASF260:
 33836 09a4 66697273 		.ascii	"first_imu_parameter\000"
 33836      745F696D 
 33836      755F7061 
 33836      72616D65 
 33836      74657200 
 33837              	.LASF42:
 33838 09b8 434D445F 		.ascii	"CMD_GET_CURR_AND_MEAS\000"
 33838      4745545F 
 33838      43555252 
 33838      5F414E44 
 33838      5F4D4541 
 33839              	.LASF401:
 33840 09ce 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 33840      43313120 
 33840      352E342E 
 33840      31203230 
 33840      31363036 
 33841 0a01 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 33841      20726576 
 33841      6973696F 
 33841      6E203233 
 33841      37373135 
 33842 0a34 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 33842      66756E63 
 33842      74696F6E 
 33842      2D736563 
 33842      74696F6E 
 33843              	.LASF92:
 33844 0a5c 73745F72 		.ascii	"st_ref\000"
 33844      656600
 33845              	.LASF316:
 33846 0a63 636D645F 		.ascii	"cmd_get_joystick\000"
 33846      6765745F 
 33846      6A6F7973 
 33846      7469636B 
 33846      00
 33847              	.LASF47:
 33848 0a74 434D445F 		.ascii	"CMD_SET_CUFF_INPUTS\000"
 33848      5345545F 
 33848      43554646 
 33848      5F494E50 
 33848      55545300 
 33849              	.LASF175:
 33850 0a88 73745F53 		.ascii	"st_SH_spec\000"
 33850      485F7370 
 33850      656300
 33851              	.LASF372:
 33852 0a93 63616C69 		.ascii	"calib\000"
 33852      6200
 33853              	.LASF6:
 33854 0a99 5F5F7569 		.ascii	"__uint32_t\000"
 33854      6E743332 
 33854      5F7400
 33855              	.LASF8:
 33856 0aa4 6C6F6E67 		.ascii	"long long int\000"
 33856      206C6F6E 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 726


 33856      6720696E 
 33856      7400
 33857              	.LASF67:
 33858 0ab2 53485F63 		.ascii	"SH_control_mode\000"
 33858      6F6E7472 
 33858      6F6C5F6D 
 33858      6F646500 
 33859              	.LASF81:
 33860 0ac2 54595045 		.ascii	"TYPE_UINT8\000"
 33860      5F55494E 
 33860      543800
 33861              	.LASF322:
 33862 0acd 636D645F 		.ascii	"cmd_get_currents\000"
 33862      6765745F 
 33862      63757272 
 33862      656E7473 
 33862      00
 33863              	.LASF74:
 33864 0ade 4D41584F 		.ascii	"MAXON_12V\000"
 33864      4E5F3132 
 33864      5600
 33865              	.LASF380:
 33866 0ae8 6368616E 		.ascii	"change_ext_ref_flag\000"
 33866      67655F65 
 33866      78745F72 
 33866      65665F66 
 33866      6C616700 
 33867              	.LASF21:
 33868 0afc 646F7562 		.ascii	"double\000"
 33868      6C6500
 33869              	.LASF56:
 33870 0b03 434D445F 		.ascii	"CMD_GET_SD_SINGLE_FILE\000"
 33870      4745545F 
 33870      53445F53 
 33870      494E474C 
 33870      455F4649 
 33871              	.LASF149:
 33872 0b1a 456E635F 		.ascii	"Enc_raw_read_conf\000"
 33872      7261775F 
 33872      72656164 
 33872      5F636F6E 
 33872      6600
 33873              	.LASF212:
 33874 0b2c 72657065 		.ascii	"repetitions\000"
 33874      74697469 
 33874      6F6E7300 
 33875              	.LASF139:
 33876 0b38 6D61785F 		.ascii	"max_step_neg\000"
 33876      73746570 
 33876      5F6E6567 
 33876      00
 33877              	.LASF399:
 33878 0b45 656D675F 		.ascii	"emg_history_next_idx\000"
 33878      68697374 
 33878      6F72795F 
 33878      6E657874 
 33878      5F696478 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 727


 33879              	.LASF186:
 33880 0b5a 736C6176 		.ascii	"slave_ID\000"
 33880      655F4944 
 33880      00
 33881              	.LASF378:
 33882 0b63 72657365 		.ascii	"reset_last_value_flag\000"
 33882      745F6C61 
 33882      73745F76 
 33882      616C7565 
 33882      5F666C61 
 33883              	.LASF227:
 33884 0b79 43555354 		.ascii	"CUSTOM_PARAM_GET\000"
 33884      4F4D5F50 
 33884      4152414D 
 33884      5F474554 
 33884      00
 33885              	.LASF20:
 33886 0b8a 666C6F61 		.ascii	"float\000"
 33886      7400
 33887              	.LASF165:
 33888 0b90 494D555F 		.ascii	"IMU_conf\000"
 33888      636F6E66 
 33888      00
 33889              	.LASF245:
 33890 0b99 50415241 		.ascii	"PARAM_IDX\000"
 33890      4D5F4944 
 33890      5800
 33891              	.LASF96:
 33892 0ba3 73745F61 		.ascii	"st_adc_meas\000"
 33892      64635F6D 
 33892      65617300 
 33893              	.LASF241:
 33894 0baf 6D5F6164 		.ascii	"m_addr\000"
 33894      647200
 33895              	.LASF371:
 33896 0bb6 635F6D65 		.ascii	"c_mem\000"
 33896      6D00
 33897              	.LASF294:
 33898 0bbc 64617461 		.ascii	"data_array\000"
 33898      5F617272 
 33898      617900
 33899              	.LASF10:
 33900 0bc7 756E7369 		.ascii	"unsigned int\000"
 33900      676E6564 
 33900      20696E74 
 33900      00
 33901              	.LASF351:
 33902 0bd4 6572725F 		.ascii	"err_emg_2\000"
 33902      656D675F 
 33902      3200
 33903              	.LASF309:
 33904 0bde 6D656D49 		.ascii	"memInit_Master\000"
 33904      6E69745F 
 33904      4D617374 
 33904      657200
 33905              	.LASF230:
 33906 0bed 7061636B 		.ascii	"packet_lenght\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 728


 33906      65745F6C 
 33906      656E6768 
 33906      7400
 33907              	.LASF297:
 33908 0bfb 73656E64 		.ascii	"sendAcknowledgment\000"
 33908      41636B6E 
 33908      6F776C65 
 33908      64676D65 
 33908      6E7400
 33909              	.LASF282:
 33910 0c0e 70726570 		.ascii	"prepare_SD_legend\000"
 33910      6172655F 
 33910      53445F6C 
 33910      6567656E 
 33910      6400
 33911              	.LASF396:
 33912 0c20 4D616743 		.ascii	"MagCal\000"
 33912      616C00
 33913              	.LASF57:
 33914 0c27 53485F63 		.ascii	"SH_command\000"
 33914      6F6D6D61 
 33914      6E6400
 33915              	.LASF83:
 33916 0c32 54595045 		.ascii	"TYPE_UINT16\000"
 33916      5F55494E 
 33916      54313600 
 33917              	.LASF196:
 33918 0c3e 666C6167 		.ascii	"flag\000"
 33918      00
 33919              	.LASF317:
 33920 0c43 636D645F 		.ascii	"cmd_set_inputs\000"
 33920      7365745F 
 33920      696E7075 
 33920      747300
 33921              	.LASF144:
 33922 0c52 636F6E74 		.ascii	"control_mode\000"
 33922      726F6C5F 
 33922      6D6F6465 
 33922      00
 33923              	.LASF332:
 33924 0c5f 6F66665F 		.ascii	"off_1\000"
 33924      3100
 33925              	.LASF60:
 33926 0c65 494E5055 		.ascii	"INPUT_MODE_ENCODER3\000"
 33926      545F4D4F 
 33926      44455F45 
 33926      4E434F44 
 33926      45523300 
 33927              	.LASF293:
 33928 0c79 636F6D6D 		.ascii	"commWriteID\000"
 33928      57726974 
 33928      65494400 
 33929              	.LASF52:
 33930 0c85 434D445F 		.ascii	"CMD_GET_ENCODER_CONF\000"
 33930      4745545F 
 33930      454E434F 
 33930      4445525F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 729


 33930      434F4E46 
 33931              	.LASF162:
 33932 0c9a 73745F69 		.ascii	"st_imu\000"
 33932      6D7500
 33933              	.LASF320:
 33934 0ca1 636D645F 		.ascii	"cmd_get_activate\000"
 33934      6765745F 
 33934      61637469 
 33934      76617465 
 33934      00
 33935              	.LASF348:
 33936 0cb2 656D675F 		.ascii	"emg_activation_velocity_fsm\000"
 33936      61637469 
 33936      76617469 
 33936      6F6E5F76 
 33936      656C6F63 
 33937              	.LASF232:
 33938 0cce 73747269 		.ascii	"string_lenght\000"
 33938      6E675F6C 
 33938      656E6768 
 33938      7400
 33939              	.LASF86:
 33940 0cdc 54595045 		.ascii	"TYPE_FLOAT\000"
 33940      5F464C4F 
 33940      415400
 33941              	.LASF250:
 33942 0ce7 43555354 		.ascii	"CUSTOM_PARAM_SET_LIST\000"
 33942      4F4D5F50 
 33942      4152414D 
 33942      5F534554 
 33942      5F4C4953 
 33943              	.LASF224:
 33944 0cfd 4E554D5F 		.ascii	"NUM_STRUCT\000"
 33944      53545255 
 33944      435400
 33945              	.LASF394:
 33946 0d08 73696E67 		.ascii	"single_imu_size\000"
 33946      6C655F69 
 33946      6D755F73 
 33946      697A6500 
 33947              	.LASF255:
 33948 0d18 6175785F 		.ascii	"aux_uchar\000"
 33948      75636861 
 33948      7200
 33949              	.LASF97:
 33950 0d22 6164645F 		.ascii	"add_emg\000"
 33950      656D6700 
 33951              	.LASF82:
 33952 0d2a 54595045 		.ascii	"TYPE_INT16\000"
 33952      5F494E54 
 33952      313600
 33953              	.LASF236:
 33954 0d35 6175785F 		.ascii	"aux_uint16\000"
 33954      75696E74 
 33954      313600
 33955              	.LASF157:
 33956 0d40 656D675F 		.ascii	"emg_threshold\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 730


 33956      74687265 
 33956      73686F6C 
 33956      6400
 33957              	.LASF46:
 33958 0d4e 434D445F 		.ascii	"CMD_GET_CURR_DIFF\000"
 33958      4745545F 
 33958      43555252 
 33958      5F444946 
 33958      4600
 33959              	.LASF108:
 33960 0d60 63757272 		.ascii	"current_hist\000"
 33960      656E745F 
 33960      68697374 
 33960      00
 33961              	.LASF70:
 33962 0d6d 434F4E54 		.ascii	"CONTROL_CURRENT\000"
 33962      524F4C5F 
 33962      43555252 
 33962      454E5400 
 33963              	.LASF24:
 33964 0d7d 6C6F6E67 		.ascii	"long double\000"
 33964      20646F75 
 33964      626C6500 
 33965              	.LASF85:
 33966 0d89 54595045 		.ascii	"TYPE_UINT32\000"
 33966      5F55494E 
 33966      54333200 
 33967              	.LASF187:
 33968 0d95 73745F46 		.ascii	"st_FB_spec\000"
 33968      425F7370 
 33968      656300
 33969              	.LASF221:
 33970 0da0 5641525F 		.ascii	"VAR_P\000"
 33970      5000
 33971              	.LASF249:
 33972 0da6 43555354 		.ascii	"CUSTOM_PARAM_GET_LIST\000"
 33972      4F4D5F50 
 33972      4152414D 
 33972      5F474554 
 33972      5F4C4953 
 33973              	.LASF154:
 33974 0dbc 6D6F746F 		.ascii	"motor_handle_ratio\000"
 33974      725F6861 
 33974      6E646C65 
 33974      5F726174 
 33974      696F00
 33975              	.LASF296:
 33976 0dcf 63686563 		.ascii	"checksum\000"
 33976      6B73756D 
 33976      00
 33977              	.LASF363:
 33978 0dd8 675F7265 		.ascii	"g_refOld\000"
 33978      664F6C64 
 33978      00
 33979              	.LASF35:
 33980 0de1 434D445F 		.ascii	"CMD_HAND_CALIBRATE\000"
 33980      48414E44 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 731


 33980      5F43414C 
 33980      49425241 
 33980      544500
 33981              	.LASF204:
 33982 0df4 6779726F 		.ascii	"gyro_value\000"
 33982      5F76616C 
 33982      756500
 33983              	.LASF167:
 33984 0dff 63757272 		.ascii	"curr_time\000"
 33984      5F74696D 
 33984      6500
 33985              	.LASF152:
 33986 0e09 646F7562 		.ascii	"double_encoder_on_off\000"
 33986      6C655F65 
 33986      6E636F64 
 33986      65725F6F 
 33986      6E5F6F66 
 33987              	.LASF355:
 33988 0e1f 64726976 		.ascii	"drive_slave\000"
 33988      655F736C 
 33988      61766500 
 33989              	.LASF164:
 33990 0e2b 5350495F 		.ascii	"SPI_read_delay\000"
 33990      72656164 
 33990      5F64656C 
 33990      617900
 33991              	.LASF75:
 33992 0e3a 61636B6E 		.ascii	"acknowledgment_values\000"
 33992      6F776C65 
 33992      64676D65 
 33992      6E745F76 
 33992      616C7565 
 33993              	.LASF239:
 33994 0e50 4D4F544F 		.ascii	"MOTOR_IDX\000"
 33994      525F4944 
 33994      5800
 33995              	.LASF306:
 33996 0e5a 6D656D52 		.ascii	"memRestore\000"
 33996      6573746F 
 33996      726500
 33997              	.LASF263:
 33998 0e65 6E5F696D 		.ascii	"n_imu_str\000"
 33998      755F7374 
 33998      7200
 33999              	.LASF277:
 34000 0e6f 696E666F 		.ascii	"info_string\000"
 34000      5F737472 
 34000      696E6700 
 34001              	.LASF283:
 34002 0e7b 70726570 		.ascii	"prepare_SD_info\000"
 34002      6172655F 
 34002      53445F69 
 34002      6E666F00 
 34003              	.LASF349:
 34004 0e8b 66736D5F 		.ascii	"fsm_state\000"
 34004      73746174 
 34004      6500
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 732


 34005              	.LASF9:
 34006 0e95 6C6F6E67 		.ascii	"long long unsigned int\000"
 34006      206C6F6E 
 34006      6720756E 
 34006      7369676E 
 34006      65642069 
 34007              	.LASF84:
 34008 0eac 54595045 		.ascii	"TYPE_INT32\000"
 34008      5F494E54 
 34008      333200
 34009              	.LASF238:
 34010 0eb7 6175785F 		.ascii	"aux_uint32\000"
 34010      75696E74 
 34010      333200
 34011              	.LASF103:
 34012 0ec2 6C656E67 		.ascii	"length\000"
 34012      746800
 34013              	.LASF251:
 34014 0ec9 55534552 		.ascii	"USER_ID_PARAM\000"
 34014      5F49445F 
 34014      50415241 
 34014      4D00
 34015              	.LASF201:
 34016 0ed7 73745F69 		.ascii	"st_imu_data\000"
 34016      6D755F64 
 34016      61746100 
 34017              	.LASF205:
 34018 0ee3 6D61675F 		.ascii	"mag_value\000"
 34018      76616C75 
 34018      6500
 34019              	.LASF91:
 34020 0eed 6F6E6F66 		.ascii	"onoff\000"
 34020      6600
 34021              	.LASF45:
 34022 0ef3 434D445F 		.ascii	"CMD_GET_ACCEL\000"
 34022      4745545F 
 34022      41434345 
 34022      4C00
 34023              	.LASF314:
 34024 0f01 636D645F 		.ascii	"cmd_get_velocities\000"
 34024      6765745F 
 34024      76656C6F 
 34024      63697469 
 34024      657300
 34025              	.LASF305:
 34026 0f14 6D656D52 		.ascii	"memRecall\000"
 34026      6563616C 
 34026      6C00
 34027              	.LASF374:
 34028 0f1e 74696D65 		.ascii	"timer_value0\000"
 34028      725F7661 
 34028      6C756530 
 34028      00
 34029              	.LASF48:
 34030 0f2b 434D445F 		.ascii	"CMD_SET_BAUDRATE\000"
 34030      5345545F 
 34030      42415544 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 733


 34030      52415445 
 34030      00
 34031              	.LASF124:
 34032 0f3c 6B5F705F 		.ascii	"k_p_c\000"
 34032      6300
 34033              	.LASF267:
 34034 0f42 696D755F 		.ascii	"imu_table_str\000"
 34034      7461626C 
 34034      655F7374 
 34034      7200
 34035              	.LASF375:
 34036 0f50 6465765F 		.ascii	"dev_tension\000"
 34036      74656E73 
 34036      696F6E00 
 34037              	.LASF135:
 34038 0f5c 6D6F746F 		.ascii	"motor_driver_type\000"
 34038      725F6472 
 34038      69766572 
 34038      5F747970 
 34038      6500
 34039              	.LASF333:
 34040 0f6e 6D756C74 		.ascii	"mult_1\000"
 34040      5F3100
 34041              	.LASF279:
 34042 0f75 70726570 		.ascii	"prepare_counter_info\000"
 34042      6172655F 
 34042      636F756E 
 34042      7465725F 
 34042      696E666F 
 34043              	.LASF23:
 34044 0f8a 72656738 		.ascii	"reg8\000"
 34044      00
 34045              	.LASF190:
 34046 0f8f 70726F70 		.ascii	"prop_err_fb_gain\000"
 34046      5F657272 
 34046      5F66625F 
 34046      6761696E 
 34046      00
 34047              	.LASF290:
 34048 0fa0 636F6D6D 		.ascii	"commWrite_old_id\000"
 34048      57726974 
 34048      655F6F6C 
 34048      645F6964 
 34048      00
 34049              	.LASF243:
 34050 0fb1 6D616E61 		.ascii	"manage_param_list\000"
 34050      67655F70 
 34050      6172616D 
 34050      5F6C6973 
 34050      7400
 34051              	.LASF30:
 34052 0fc3 434D445F 		.ascii	"CMD_RESTORE_PARAMS\000"
 34052      52455354 
 34052      4F52455F 
 34052      50415241 
 34052      4D5300
 34053              	.LASF389:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 734


 34054 0fd6 73644669 		.ascii	"sdFile\000"
 34054      6C6500
 34055              	.LASF281:
 34056 0fdd 70726570 		.ascii	"prepare_SD_param_info\000"
 34056      6172655F 
 34056      53445F70 
 34056      6172616D 
 34056      5F696E66 
 34057              	.LASF325:
 34058 0ff3 63757272 		.ascii	"curr_diff\000"
 34058      5F646966 
 34058      6600
 34059              	.LASF185:
 34060 0ffd 736C6176 		.ascii	"slave_comm_active\000"
 34060      655F636F 
 34060      6D6D5F61 
 34060      63746976 
 34060      6500
 34061              	.LASF284:
 34062 100f 70726570 		.ascii	"prepare_SD_EMG_History_legend\000"
 34062      6172655F 
 34062      53445F45 
 34062      4D475F48 
 34062      6973746F 
 34063              	.LASF291:
 34064 102d 6F6C645F 		.ascii	"old_id\000"
 34064      696400
 34065              	.LASF404:
 34066 1034 5F5F5245 		.ascii	"__REV16\000"
 34066      56313600 
 34067              	.LASF385:
 34068 103c 4E5F456E 		.ascii	"N_Encoder_Line_Connected\000"
 34068      636F6465 
 34068      725F4C69 
 34068      6E655F43 
 34068      6F6E6E65 
 34069              	.LASF121:
 34070 1055 6465765F 		.ascii	"dev_type\000"
 34070      74797065 
 34070      00
 34071              	.LASF172:
 34072 105e 73745F75 		.ascii	"st_user\000"
 34072      73657200 
 34073              	.LASF321:
 34074 1066 636D645F 		.ascii	"cmd_get_curr_and_meas\000"
 34074      6765745F 
 34074      63757272 
 34074      5F616E64 
 34074      5F6D6561 
 34075              	.LASF155:
 34076 107c 67656172 		.ascii	"gears_params\000"
 34076      735F7061 
 34076      72616D73 
 34076      00
 34077              	.LASF166:
 34078 1089 73745F65 		.ascii	"st_expansion\000"
 34078      7870616E 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 735


 34078      73696F6E 
 34078      00
 34079              	.LASF160:
 34080 1096 656D675F 		.ascii	"emg_calibration_flag\000"
 34080      63616C69 
 34080      62726174 
 34080      696F6E5F 
 34080      666C6167 
 34081              	.LASF93:
 34082 10ab 73745F6D 		.ascii	"st_meas\000"
 34082      65617300 
 34083              	.LASF55:
 34084 10b3 434D445F 		.ascii	"CMD_GET_ADC_RAW\000"
 34084      4745545F 
 34084      4144435F 
 34084      52415700 
 34085              	.LASF182:
 34086 10c3 6A6F7973 		.ascii	"joystick_threshold\000"
 34086      7469636B 
 34086      5F746872 
 34086      6573686F 
 34086      6C6400
 34087              	.LASF73:
 34088 10d6 4D41584F 		.ascii	"MAXON_24V\000"
 34088      4E5F3234 
 34088      5600
 34089              	.LASF66:
 34090 10e0 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL_NC\000"
 34090      545F4D4F 
 34090      44455F45 
 34090      4D475F50 
 34090      524F504F 
 34091              	.LASF51:
 34092 10ff 434D445F 		.ascii	"CMD_GET_IMU_PARAM\000"
 34092      4745545F 
 34092      494D555F 
 34092      50415241 
 34092      4D00
 34093              	.LASF368:
 34094 1111 675F6662 		.ascii	"g_fb_meas\000"
 34094      5F6D6561 
 34094      7300
 34095              	.LASF53:
 34096 111b 434D445F 		.ascii	"CMD_GET_ENCODER_RAW\000"
 34096      4745545F 
 34096      454E434F 
 34096      4445525F 
 34096      52415700 
 34097              	.LASF331:
 34098 112f 636D645F 		.ascii	"cmd_store_params\000"
 34098      73746F72 
 34098      655F7061 
 34098      72616D73 
 34098      00
 34099              	.LASF370:
 34100 1140 675F6D65 		.ascii	"g_mem\000"
 34100      6D00
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 736


 34101              	.LASF40:
 34102 1146 434D445F 		.ascii	"CMD_GET_MEASUREMENTS\000"
 34102      4745545F 
 34102      4D454153 
 34102      5552454D 
 34102      454E5453 
 34103              	.LASF367:
 34104 115b 675F6164 		.ascii	"g_adc_measOld\000"
 34104      635F6D65 
 34104      61734F6C 
 34104      6400
 34105              	.LASF340:
 34106 1169 636D645F 		.ascii	"cmd_get_encoder_raw\000"
 34106      6765745F 
 34106      656E636F 
 34106      6465725F 
 34106      72617700 
 34107              	.LASF13:
 34108 117d 75696E74 		.ascii	"uint8\000"
 34108      3800
 34109              	.LASF213:
 34110 1183 636F6D6D 		.ascii	"commProcess\000"
 34110      50726F63 
 34110      65737300 
 34111              	.LASF180:
 34112 118f 73745F4A 		.ascii	"st_JOY_spec\000"
 34112      4F595F73 
 34112      70656300 
 34113              	.LASF2:
 34114 119b 73686F72 		.ascii	"short int\000"
 34114      7420696E 
 34114      7400
 34115              	.LASF310:
 34116 11a5 6D656D49 		.ascii	"memInit_AirChambersFb\000"
 34116      6E69745F 
 34116      41697243 
 34116      68616D62 
 34116      65727346 
 34117              	.LASF271:
 34118 11bb 6964735F 		.ascii	"ids_str_len\000"
 34118      7374725F 
 34118      6C656E00 
 34119              	.LASF129:
 34120 11c7 6B5F645F 		.ascii	"k_d_dl\000"
 34120      646C00
 34121              	.LASF231:
 34122 11ce 6964785F 		.ascii	"idx_menu\000"
 34122      6D656E75 
 34122      00
 34123              	.LASF98:
 34124 11d7 6A6F7973 		.ascii	"joystick\000"
 34124      7469636B 
 34124      00
 34125              	.LASF198:
 34126 11e0 6D6F746F 		.ascii	"motor\000"
 34126      7200
 34127              	.LASF391:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 737


 34128 11e6 4E5F494D 		.ascii	"N_IMU_Connected\000"
 34128      555F436F 
 34128      6E6E6563 
 34128      74656400 
 34129              	.LASF39:
 34130 11f6 434D445F 		.ascii	"CMD_GET_INPUTS\000"
 34130      4745545F 
 34130      494E5055 
 34130      545300
 34131              	.LASF114:
 34132 1205 68775F6D 		.ascii	"hw_maint_date\000"
 34132      61696E74 
 34132      5F646174 
 34132      6500
 34133              	.LASF264:
 34134 1213 6964735F 		.ascii	"ids_str\000"
 34134      73747200 
 34135              	.LASF54:
 34136 121b 434D445F 		.ascii	"CMD_GET_ADC_CONF\000"
 34136      4745545F 
 34136      4144435F 
 34136      434F4E46 
 34136      00
 34137              	.LASF27:
 34138 122c 434D445F 		.ascii	"CMD_SET_ZEROS\000"
 34138      5345545F 
 34138      5A45524F 
 34138      5300
 34139              	.LASF272:
 34140 123a 6D61675F 		.ascii	"mag_param_str_len\000"
 34140      70617261 
 34140      6D5F7374 
 34140      725F6C65 
 34140      6E00
 34141              	.LASF258:
 34142 124c 6E756D5F 		.ascii	"num_imus_id_params\000"
 34142      696D7573 
 34142      5F69645F 
 34142      70617261 
 34142      6D7300
 34143              	.LASF235:
 34144 125f 6175785F 		.ascii	"aux_int16\000"
 34144      696E7431 
 34144      3600
 34145              	.LASF398:
 34146 1269 656D675F 		.ascii	"emg_history\000"
 34146      68697374 
 34146      6F727900 
 34147              	.LASF400:
 34148 1275 45455052 		.ascii	"EEPROM_ADDR\000"
 34148      4F4D5F41 
 34148      44445200 
 34149              	.LASF115:
 34150 1281 73746174 		.ascii	"stats_period_begin_date\000"
 34150      735F7065 
 34150      72696F64 
 34150      5F626567 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 738


 34150      696E5F64 
 34151              	.LASF393:
 34152 1299 696D7573 		.ascii	"imus_data_size\000"
 34152      5F646174 
 34152      615F7369 
 34152      7A6500
 34153              	.LASF360:
 34154 12a8 49544D5F 		.ascii	"ITM_RxBuffer\000"
 34154      52784275 
 34154      66666572 
 34154      00
 34155              	.LASF44:
 34156 12b5 434D445F 		.ascii	"CMD_GET_VELOCITIES\000"
 34156      4745545F 
 34156      56454C4F 
 34156      43495449 
 34156      455300
 34157              	.LASF377:
 34158 12c8 706F775F 		.ascii	"pow_tension\000"
 34158      74656E73 
 34158      696F6E00 
 34159              	.LASF34:
 34160 12d4 434D445F 		.ascii	"CMD_GET_PARAM_LIST\000"
 34160      4745545F 
 34160      50415241 
 34160      4D5F4C49 
 34160      535400
 34161              	.LASF78:
 34162 12e7 64617461 		.ascii	"data_types\000"
 34162      5F747970 
 34162      657300
 34163              	.LASF17:
 34164 12f2 696E7431 		.ascii	"int16\000"
 34164      3600
 34165              	.LASF168:
 34166 12f8 72656164 		.ascii	"read_exp_port_flag\000"
 34166      5F657870 
 34166      5F706F72 
 34166      745F666C 
 34166      616700
 34167              	.LASF161:
 34168 130b 73776974 		.ascii	"switch_emg\000"
 34168      63685F65 
 34168      6D6700
 34169              	.LASF134:
 34170 1316 61637469 		.ascii	"activate_pwm_rescaling\000"
 34170      76617465 
 34170      5F70776D 
 34170      5F726573 
 34170      63616C69 
 34171              	.LASF127:
 34172 132d 6B5F705F 		.ascii	"k_p_dl\000"
 34172      646C00
 34173              	.LASF94:
 34174 1334 65737469 		.ascii	"estim_curr\000"
 34174      6D5F6375 
 34174      727200
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 739


 34175              	.LASF376:
 34176 133f 6465765F 		.ascii	"dev_pwm_limit\000"
 34176      70776D5F 
 34176      6C696D69 
 34176      7400
 34177              	.LASF169:
 34178 134d 72656164 		.ascii	"read_ADC_sensors_port_flag\000"
 34178      5F414443 
 34178      5F73656E 
 34178      736F7273 
 34178      5F706F72 
 34179              	.LASF386:
 34180 1368 456E636F 		.ascii	"Encoder_Value\000"
 34180      6465725F 
 34180      56616C75 
 34180      6500
 34181              	.LASF339:
 34182 1376 636D645F 		.ascii	"cmd_get_encoder_map\000"
 34182      6765745F 
 34182      656E636F 
 34182      6465725F 
 34182      6D617000 
 34183              	.LASF120:
 34184 138a 75736572 		.ascii	"user_id\000"
 34184      5F696400 
 34185              	.LASF12:
 34186 1392 75696E74 		.ascii	"uint32_t\000"
 34186      33325F74 
 34186      00
 34187              	.LASF234:
 34188 139b 6175785F 		.ascii	"aux_float\000"
 34188      666C6F61 
 34188      7400
 34189              	.LASF392:
 34190 13a5 494D555F 		.ascii	"IMU_connected\000"
 34190      636F6E6E 
 34190      65637465 
 34190      6400
 34191              	.LASF225:
 34192 13b3 4E554D5F 		.ascii	"NUM_MENU\000"
 34192      4D454E55 
 34192      00
 34193              	.LASF237:
 34194 13bc 6175785F 		.ascii	"aux_int32\000"
 34194      696E7433 
 34194      3200
 34195              	.LASF119:
 34196 13c6 62617564 		.ascii	"baud_rate\000"
 34196      5F726174 
 34196      6500
 34197              	.LASF327:
 34198 13d0 745F656E 		.ascii	"t_end\000"
 34198      6400
 34199              	.LASF193:
 34200 13d6 66617374 		.ascii	"fast_act_threshold\000"
 34200      5F616374 
 34200      5F746872 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 740


 34200      6573686F 
 34200      6C6400
 34201              	.LASF220:
 34202 13e9 696E666F 		.ascii	"info_type\000"
 34202      5F747970 
 34202      6500
 34203              	.LASF50:
 34204 13f3 434D445F 		.ascii	"CMD_GET_IMU_READINGS\000"
 34204      4745545F 
 34204      494D555F 
 34204      52454144 
 34204      494E4753 
 34205              	.LASF299:
 34206 1408 4C435243 		.ascii	"LCRChecksum\000"
 34206      6865636B 
 34206      73756D00 
 34207              	.LASF336:
 34208 1414 6B5F696D 		.ascii	"k_imu\000"
 34208      7500
 34209              	.LASF3:
 34210 141a 73686F72 		.ascii	"short unsigned int\000"
 34210      7420756E 
 34210      7369676E 
 34210      65642069 
 34210      6E7400
 34211              	.LASF148:
 34212 142d 73745F65 		.ascii	"st_encoder\000"
 34212      6E636F64 
 34212      657200
 34213              	.LASF366:
 34214 1438 675F6164 		.ascii	"g_adc_meas\000"
 34214      635F6D65 
 34214      617300
 34215              	.LASF188:
 34216 1443 6D61785F 		.ascii	"max_residual_current\000"
 34216      72657369 
 34216      6475616C 
 34216      5F637572 
 34216      72656E74 
 34217              	.LASF278:
 34218 1458 454E435F 		.ascii	"ENC_L\000"
 34218      4C00
 34219              	.LASF195:
 34220 145e 73745F65 		.ascii	"st_eeprom\000"
 34220      6570726F 
 34220      6D00
 34221              	.LASF222:
 34222 1468 54595045 		.ascii	"TYPES\000"
 34222      5300
 34223              	.LASF361:
 34224 146e 675F7265 		.ascii	"g_ref\000"
 34224      6600
 34225              	.LASF18:
 34226 1474 696E7433 		.ascii	"int32\000"
 34226      3200
 34227              	.LASF383:
 34228 147a 4E554D5F 		.ascii	"NUM_OF_ANALOG_INPUTS\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 741


 34228      4F465F41 
 34228      4E414C4F 
 34228      475F494E 
 34228      50555453 
 34229              	.LASF217:
 34230 148f 696E666F 		.ascii	"infoGet\000"
 34230      47657400 
 34231              	.LASF123:
 34232 1497 73745F6D 		.ascii	"st_motor\000"
 34232      6F746F72 
 34232      00
 34233              	.LASF397:
 34234 14a0 6D617374 		.ascii	"master_mode\000"
 34234      65725F6D 
 34234      6F646500 
 34235              	.LASF89:
 34236 14ac 46535F46 		.ascii	"FS_FILE\000"
 34236      494C4500 
 34237              	.LASF136:
 34238 14b4 706F735F 		.ascii	"pos_lim_flag\000"
 34238      6C696D5F 
 34238      666C6167 
 34238      00
 34239              	.LASF365:
 34240 14c1 675F6D65 		.ascii	"g_measOld\000"
 34240      61734F6C 
 34240      6400
 34241              	.LASF68:
 34242 14cb 434F4E54 		.ascii	"CONTROL_ANGLE\000"
 34242      524F4C5F 
 34242      414E474C 
 34242      4500
 34243              	.LASF319:
 34244 14d9 636D645F 		.ascii	"cmd_activate\000"
 34244      61637469 
 34244      76617465 
 34244      00
 34245              	.LASF5:
 34246 14e6 5F5F696E 		.ascii	"__int32_t\000"
 34246      7433325F 
 34246      7400
 34247              	.LASF247:
 34248 14f0 7370695F 		.ascii	"spi_delay_menu\000"
 34248      64656C61 
 34248      795F6D65 
 34248      6E7500
 34249              	.LASF110:
 34250 14ff 77697265 		.ascii	"wire_disp\000"
 34250      5F646973 
 34250      7000
 34251              	.LASF158:
 34252 1509 656D675F 		.ascii	"emg_max_value\000"
 34252      6D61785F 
 34252      76616C75 
 34252      6500
 34253              	.LASF252:
 34254 1517 43555354 		.ascii	"CUSTOM_PARAM_SET\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 742


 34254      4F4D5F50 
 34254      4152414D 
 34254      5F534554 
 34254      00
 34255              	.LASF402:
 34256 1528 2E2E5C73 		.ascii	"..\\src\\command_processing.c\000"
 34256      72635C63 
 34256      6F6D6D61 
 34256      6E645F70 
 34256      726F6365 
 34257              	.LASF142:
 34258 1544 63757272 		.ascii	"current_limit\000"
 34258      656E745F 
 34258      6C696D69 
 34258      7400
 34259              	.LASF58:
 34260 1552 53485F69 		.ascii	"SH_input_mode\000"
 34260      6E707574 
 34260      5F6D6F64 
 34260      6500
 34261              	.LASF80:
 34262 1560 54595045 		.ascii	"TYPE_INT8\000"
 34262      5F494E54 
 34262      3800
 34263              	.LASF192:
 34264 156a 61637469 		.ascii	"activation_mode\000"
 34264      76617469 
 34264      6F6E5F6D 
 34264      6F646500 
 34265              	.LASF289:
 34266 157a 494D555F 		.ascii	"IMU_reading_info\000"
 34266      72656164 
 34266      696E675F 
 34266      696E666F 
 34266      00
 34267              	.LASF14:
 34268 158b 75696E74 		.ascii	"uint16\000"
 34268      313600
 34269              	.LASF177:
 34270 1592 72657374 		.ascii	"rest_delay\000"
 34270      5F64656C 
 34270      617900
 34271              	.LASF233:
 34272 159d 6175785F 		.ascii	"aux_str\000"
 34272      73747200 
 34273              	.LASF26:
 34274 15a5 434D445F 		.ascii	"CMD_PING\000"
 34274      50494E47 
 34274      00
 34275              	.LASF132:
 34276 15ae 6B5F645F 		.ascii	"k_d_c_dl\000"
 34276      635F646C 
 34276      00
 34277              	.LASF210:
 34278 15b7 64697265 		.ascii	"direction\000"
 34278      6374696F 
 34278      6E00
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cc46xGvM.s 			page 743


 34279              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
